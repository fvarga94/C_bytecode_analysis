win_update	DO,0:functions,0:CALL,75:ELSE,44:IF,138:WHILE,5:FOR,12:SWITCH,0	2439
0x1549	              0x55	                                push rbp	      1098	screen.c	FUNCTION_20
0x154a	          0x4889e5	                            mov rbp, rsp	      1098	screen.c	FUNCTION_20
0x154d	              0x53	                                push rbx	      1098	screen.c	FUNCTION_20
0x154e	    0x4881ecf80000	                           sub rsp, 0xf8	      1098	screen.c	FUNCTION_20
0x1555	    0x4889bd08ffff	             mov qword [rbp - 0xf8], rdi	      1098	screen.c	FUNCTION_20
0x155c	    0x64488b042528	                mov rax, qword fs:[0x28]	      1098	screen.c	FUNCTION_20
0x1565	        0x488945e8	             mov qword [rbp - 0x18], rax	      1098	screen.c	FUNCTION_20
0x1569	            0x31c0	                            xor eax, eax	      1098	screen.c	FUNCTION_20
0x156b	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1099	screen.c	FUNCTION_20
0x1572	        0x488b4008	                mov rax, qword [rax + 8]	      1099	screen.c	FUNCTION_20
0x1576	        0x488945c8	             mov qword [rbp - 0x38], rax	      1099	screen.c	FUNCTION_20
0x157a	    0xc78514ffffff	               mov dword [rbp - 0xec], 0	      1101	screen.c	FUNCTION_20
0x1584	    0xc78518ffffff	          mov dword [rbp - 0xe8], 0x3e7 	      1103	screen.c	FUNCTION_20
0x158e	    0xc7851cffffff	               mov dword [rbp - 0xe4], 0	      1105	screen.c	FUNCTION_20
0x1598	    0xc78520ffffff	          mov dword [rbp - 0xe0], 0x3e7 	      1107	screen.c	FUNCTION_20
0x15a2	    0xc78524ffffff	               mov dword [rbp - 0xdc], 0	      1109	screen.c	FUNCTION_20
0x15ac	    0xc78528ffffff	               mov dword [rbp - 0xd8], 0	      1113	screen.c	FUNCTION_20
0x15b6	    0xc78538ffffff	               mov dword [rbp - 0xc8], 0	      1121	screen.c	FUNCTION_20
0x15c0	    0xc7853cffffff	               mov dword [rbp - 0xc4], 0	      1122	screen.c	FUNCTION_20
0x15ca	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1126	screen.c	FUNCTION_20
0x15d1	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      1126	screen.c	FUNCTION_20
0x15d8	    0x898554ffffff	             mov dword [rbp - 0xac], eax	      1126	screen.c	FUNCTION_20
0x15de	    0xc78544ffffff	               mov dword [rbp - 0xbc], 1	      1136	screen.c	FUNCTION_20
0x15e8	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      1137	screen.c	FUNCTION_20
0x15f0	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	      1139	screen.c	FUNCTION_20
0x15fb	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	      1140	screen.c	FUNCTION_20
0x1606	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1148	screen.c	FUNCTION_20
0x160d	    0x8b8028010000	           mov eax, dword [rax + 0x128] 	      1148	screen.c	FUNCTION_20
0x1613	    0x898510ffffff	             mov dword [rbp - 0xf0], eax	      1148	screen.c	FUNCTION_20
0x1619	    0x83bd10ffffff	           cmp dword [rbp - 0xf0], 0x28 	      1150	screen.c	FUNCTION_20	IF_1
0x1620	            0x7522	                           jne 0x4001684	      1150	screen.c	FUNCTION_20	IF_1
0x1622	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1152	screen.c	FUNCTION_20	IF_1
0x1629	    0xc78040010000	              mov dword [rax + 0x140], 1	      1152	screen.c	FUNCTION_20	IF_1
0x1633	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1153	screen.c	FUNCTION_20	IF_1
0x163a	    0xc780f8000000	               mov dword [rax + 0xf8], 0	      1153	screen.c	FUNCTION_20	IF_1
0x1644	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1157	screen.c	FUNCTION_20	IF_2	CALL_1
0x164b	    0x8b90a0000000	            mov edx, dword [rax + 0xa0] 	      1157	screen.c	FUNCTION_20	IF_2	CALL_1
0x1651	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1157	screen.c	FUNCTION_20	IF_2	CALL_1
0x1658	    0x8b80a8010000	           mov eax, dword [rax + 0x1a8] 	      1157	screen.c	FUNCTION_20	IF_2	CALL_1
0x165e	             0x1d0	                            add eax, edx	      1157	screen.c	FUNCTION_20	IF_2	CALL_1
0x1660	            0x85c0	                           test eax, eax	      1157	screen.c	FUNCTION_20	IF_2	CALL_1
0x1662	            0x7516	                           jne 0x40016ba	      1157	screen.c	FUNCTION_20	IF_2	CALL_1
0x1664	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1159	screen.c	FUNCTION_20	IF_2
0x166b	    0xc78028010000	              mov dword [rax + 0x128], 0	      1159	screen.c	FUNCTION_20	IF_2
0x1675	      0xe9a52c0000	                           jmp 0x400435f	      1160	screen.c	FUNCTION_20	IF_2
0x167a	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1164	screen.c	FUNCTION_20	IF_3
0x1681	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      1164	screen.c	FUNCTION_20	IF_3
0x1687	            0x85c0	                           test eax, eax	      1164	screen.c	FUNCTION_20	IF_3
0x1689	            0x752a	                           jne 0x40016f5	      1164	screen.c	FUNCTION_20	IF_3
0x168b	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1167	screen.c	FUNCTION_20	IF_3	CALL_2
0x1692	      0xbe00000000	                              mov esi, 0	      1167	screen.c	FUNCTION_20	IF_3	CALL_2
0x1697	          0x4889c7	                            mov rdi, rax	      1167	screen.c	FUNCTION_20	IF_3	CALL_2
0x169a	      0xe855b80000	                  call sym.draw_vsep_win	      1167	screen.c	FUNCTION_20	IF_3	CALL_2
0x169f	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1168	screen.c	FUNCTION_20	IF_3
0x16a6	    0xc78028010000	              mov dword [rax + 0x128], 0	      1168	screen.c	FUNCTION_20	IF_3
0x16b0	      0xe96a2c0000	                           jmp 0x400435f	      1169	screen.c	FUNCTION_20	IF_3
0x16b5	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1175	screen.c	FUNCTION_20	IF_4	CALL_3
0x16bc	          0x4889c7	                            mov rdi, rax	      1175	screen.c	FUNCTION_20	IF_4	CALL_3
0x16bf	      0xe800000000	                          call 0x4001704	      1175	screen.c	FUNCTION_20	IF_4	CALL_3
0x16c4	          0x83f801	                              cmp eax, 1	      1175	screen.c	FUNCTION_20	IF_4	CALL_3
0x16c7	            0x7516	                           jne 0x400171f	      1175	screen.c	FUNCTION_20	IF_4	CALL_3
0x16c9	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1177	screen.c	FUNCTION_20	IF_4
0x16d0	    0xc78028010000	              mov dword [rax + 0x128], 0	      1177	screen.c	FUNCTION_20	IF_4
0x16da	      0xe9402c0000	                           jmp 0x400435f	      1178	screen.c	FUNCTION_20	IF_4
0x16df	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1183	screen.c	FUNCTION_20	CALL_4
0x16e6	          0x4889c7	                            mov rdi, rax	      1183	screen.c	FUNCTION_20	CALL_4
0x16e9	      0xe806e10000	                 call sym.init_search_hl	      1183	screen.c	FUNCTION_20	CALL_4
0x16ee	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1189	screen.c	FUNCTION_20	CALL_5
0x16f5	    0x8b8038020000	           mov eax, dword [rax + 0x238] 	      1189	screen.c	FUNCTION_20	CALL_5
0x16fb	            0x85c0	                           test eax, eax	      1189	screen.c	FUNCTION_20	CALL_5
0x16fd	            0x7511	                           jne 0x4001750	      1189	screen.c	FUNCTION_20	CALL_5
0x16ff	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1189	screen.c	FUNCTION_20	CALL_5
0x1706	    0x8b803c020000	           mov eax, dword [rax + 0x23c] 	      1189	screen.c	FUNCTION_20	CALL_5
0x170c	            0x85c0	                           test eax, eax	      1189	screen.c	FUNCTION_20	CALL_5
0x170e	            0x7411	                            je 0x4001761	      1189	screen.c	FUNCTION_20	CALL_5
0x1710	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1189	screen.c	FUNCTION_20	CALL_5
0x1717	          0x4889c7	                            mov rdi, rax	      1189	screen.c	FUNCTION_20	CALL_5
0x171a	      0xe800000000	                          call 0x400175f	      1189	screen.c	FUNCTION_20	CALL_5
0x171f	            0xeb05	                           jmp 0x4001766	      1189	screen.c	FUNCTION_20	CALL_5
0x1721	      0xb800000000	                              mov eax, 0	      1189	screen.c	FUNCTION_20	CALL_5
0x1726	    0x898540ffffff	             mov dword [rbp - 0xc0], eax	      1189	screen.c	FUNCTION_20	CALL_5
0x172c	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1190	screen.c	FUNCTION_20	IF_5
0x1733	    0x8b8024010000	           mov eax, dword [rax + 0x124] 	      1190	screen.c	FUNCTION_20	IF_5
0x1739	    0x3b8540ffffff	             cmp eax, dword [rbp - 0xc0]	      1190	screen.c	FUNCTION_20	IF_5
0x173f	            0x7422	                            je 0x40017a3	      1190	screen.c	FUNCTION_20	IF_5
0x1741	    0xc78510ffffff	           mov dword [rbp - 0xf0], 0x28 	      1192	screen.c	FUNCTION_20	IF_5
0x174b	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1193	screen.c	FUNCTION_20	IF_5
0x1752	    0x8b9540ffffff	             mov edx, dword [rbp - 0xc0]	      1193	screen.c	FUNCTION_20	IF_5
0x1758	    0x899024010000	            mov dword [rax + 0x124], edx	      1193	screen.c	FUNCTION_20	IF_5
0x175e	      0xe9e4040000	                           jmp 0x4001c87	      1193	screen.c	FUNCTION_20	IF_5
0x1763	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1198	screen.c	FUNCTION_20	ELSE_1	IF_6
0x1767	    0x8b80fc000000	            mov eax, dword [rax + 0xfc] 	      1198	screen.c	FUNCTION_20	ELSE_1	IF_6
0x176d	            0x85c0	                           test eax, eax	      1198	screen.c	FUNCTION_20	ELSE_1	IF_6
0x176f	            0x7432	                            je 0x40017e3	      1198	screen.c	FUNCTION_20	ELSE_1	IF_6
0x1771	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1198	screen.c	FUNCTION_20	ELSE_1	IF_6
0x1775	    0x488b80100100	           mov rax, qword [rax + 0x110] 	      1198	screen.c	FUNCTION_20	ELSE_1	IF_6
0x177c	          0x4885c0	                           test rax, rax	      1198	screen.c	FUNCTION_20	ELSE_1	IF_6
0x177f	            0x7422	                            je 0x40017e3	      1198	screen.c	FUNCTION_20	ELSE_1	IF_6
0x1781	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1198	screen.c	FUNCTION_20	ELSE_1	IF_6
0x1788	    0x488b80300100	           mov rax, qword [rax + 0x130] 	      1198	screen.c	FUNCTION_20	ELSE_1	IF_6
0x178f	          0x4885c0	                           test rax, rax	      1198	screen.c	FUNCTION_20	ELSE_1	IF_6
0x1792	            0x740f	                            je 0x40017e3	      1198	screen.c	FUNCTION_20	ELSE_1	IF_6
0x1794	    0xc78510ffffff	           mov dword [rbp - 0xf0], 0x28 	      1205	screen.c	FUNCTION_20	ELSE_1	IF_6
0x179e	      0xe9a4040000	                           jmp 0x4001c87	      1205	screen.c	FUNCTION_20	ELSE_1	IF_6
0x17a3	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1213	screen.c	FUNCTION_20	ELSE_2
0x17aa	    0x488b80300100	           mov rax, qword [rax + 0x130] 	      1213	screen.c	FUNCTION_20	ELSE_2
0x17b1	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      1213	screen.c	FUNCTION_20	ELSE_2
0x17b8	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1214	screen.c	FUNCTION_20	ELSE_2	IF_7
0x17bf	    0x488b80380100	           mov rax, qword [rax + 0x138] 	      1214	screen.c	FUNCTION_20	ELSE_2	IF_7
0x17c6	          0x4885c0	                           test rax, rax	      1214	screen.c	FUNCTION_20	ELSE_2	IF_7
0x17c9	            0x741b	                            je 0x4001826	      1214	screen.c	FUNCTION_20	ELSE_2	IF_7
0x17cb	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1215	screen.c	FUNCTION_20	ELSE_2	IF_7
0x17d2	    0x488b80380100	           mov rax, qword [rax + 0x138] 	      1215	screen.c	FUNCTION_20	ELSE_2	IF_7
0x17d9	        0x4883c001	                              add rax, 1	      1215	screen.c	FUNCTION_20	ELSE_2	IF_7
0x17dd	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      1215	screen.c	FUNCTION_20	ELSE_2	IF_7
0x17e4	            0xeb0b	                           jmp 0x4001831	      1215	screen.c	FUNCTION_20	ELSE_2	IF_7
0x17e6	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	      1217	screen.c	FUNCTION_20	ELSE_2	ELSE_3
0x17f1	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1218	screen.c	FUNCTION_20	ELSE_2	ELSE_3
0x17f8	    0x48c780300100	              mov qword [rax + 0x130], 0	      1218	screen.c	FUNCTION_20	ELSE_2	ELSE_3
0x1803	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1219	screen.c	FUNCTION_20	ELSE_2	ELSE_3
0x180a	    0x48c780380100	              mov qword [rax + 0x138], 0	      1219	screen.c	FUNCTION_20	ELSE_2	ELSE_3
0x1815	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1220	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8
0x1819	    0x8b80fc000000	            mov eax, dword [rax + 0xfc] 	      1220	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8
0x181f	            0x85c0	                           test eax, eax	      1220	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8
0x1821	     0xf8431010000	                            je 0x4001998	      1220	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8
0x1827	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1222	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	IF_9
0x182e	          0x4885c0	                           test rax, rax	      1222	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	IF_9
0x1831	            0x7417	                            je 0x400188a	      1222	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	IF_9
0x1833	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1222	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	IF_9
0x1837	    0x488b90000100	           mov rdx, qword [rax + 0x100] 	      1222	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	IF_9
0x183e	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1222	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	IF_9
0x1845	          0x4839c2	                            cmp rdx, rax	      1222	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	IF_9
0x1848	            0x7d5b	                           jge 0x40018e5	      1222	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	IF_9
0x184a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1224	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	IF_9
0x184e	    0x488b80000100	           mov rax, qword [rax + 0x100] 	      1224	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	IF_9
0x1855	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      1224	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	IF_9
0x185c	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1228	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	IF_9	IF_10	CALL_6
0x1863	          0x4889c7	                            mov rdi, rax	      1228	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	IF_9	IF_10	CALL_6
0x1866	      0xe800000000	                          call 0x40018ab	      1228	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	IF_9	IF_10	CALL_6
0x186b	            0x85c0	                           test eax, eax	      1228	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	IF_9	IF_10	CALL_6
0x186d	            0x7436	                            je 0x40018e5	      1228	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	IF_9	IF_10	CALL_6
0x186f	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	      1230	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	IF_9	IF_10
0x1876	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1230	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	IF_9	IF_10
0x187a	    0x488b80001a00	          mov rax, qword [rax + 0x1a00] 	      1230	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	IF_9	IF_10
0x1881	          0x4829c2	                            sub rdx, rax	      1230	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	IF_9	IF_10
0x1884	          0x4889d0	                            mov rax, rdx	      1230	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	IF_9	IF_10
0x1887	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      1230	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	IF_9	IF_10
0x188e	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1231	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	IF_9	IF_10	IF_11
0x1895	          0x4885c0	                           test rax, rax	      1231	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	IF_9	IF_10	IF_11
0x1898	            0x7f0b	                            jg 0x40018e5	      1231	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	IF_9	IF_10	IF_11
0x189a	    0x48c78568ffff	               mov qword [rbp - 0x98], 1	      1232	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	IF_9	IF_10	IF_11
0x18a5	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1236	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	IF_12
0x18ac	          0x4885c0	                           test rax, rax	      1236	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	IF_12
0x18af	            0x7417	                            je 0x4001908	      1236	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	IF_12
0x18b1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1236	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	IF_12
0x18b5	    0x488b90080100	           mov rdx, qword [rax + 0x108] 	      1236	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	IF_12
0x18bc	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1236	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	IF_12
0x18c3	          0x4839c2	                            cmp rdx, rax	      1236	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	IF_12
0x18c6	            0x7e12	                           jle 0x400191a	      1236	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	IF_12
0x18c8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1237	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	IF_12
0x18cc	    0x488b80080100	           mov rax, qword [rax + 0x108] 	      1237	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	IF_12
0x18d3	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      1237	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	IF_12
0x18da	    0x488b05000000	            mov rax, qword [0x04001921] 	      1246	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	IF_13
0x18e1	          0x4885c0	                           test rax, rax	      1246	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	IF_13
0x18e4	            0x741f	                            je 0x4001945	      1246	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	IF_13
0x18e6	    0x488b05000000	            mov rax, qword [0x0400192d] 	      1247	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	IF_13	CALL_7
0x18ed	          0x4889c7	                            mov rdi, rax	      1247	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	IF_13	CALL_7
0x18f0	      0xe800000000	                          call 0x4001935	      1247	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	IF_13	CALL_7
0x18f5	            0x85c0	                           test eax, eax	      1247	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	IF_13	CALL_7
0x18f7	            0x740c	                            je 0x4001945	      1247	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	IF_13	CALL_7
0x18f9	    0xc78528ffffff	               mov dword [rbp - 0xd8], 1	      1248	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	IF_13
0x1903	            0xeb53	                           jmp 0x4001998	      1248	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	IF_13
0x1905	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1251	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	ELSE_4
0x190c	    0x488b80501500	          mov rax, qword [rax + 0x1550] 	      1251	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	ELSE_4
0x1913	        0x48894580	             mov qword [rbp - 0x80], rax	      1251	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	ELSE_4
0x1917	            0xeb38	                           jmp 0x4001991	      1252	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	ELSE_4	WHILE_1
0x1919	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1254	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	ELSE_4	WHILE_1	IF_14
0x191d	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1254	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	ELSE_4	WHILE_1	IF_14
0x1921	          0x4885c0	                           test rax, rax	      1254	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	ELSE_4	WHILE_1	IF_14
0x1924	            0x7420	                            je 0x4001986	      1254	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	ELSE_4	WHILE_1	IF_14
0x1926	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1255	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	ELSE_4	WHILE_1	IF_14	CALL_8
0x192a	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1255	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	ELSE_4	WHILE_1	IF_14	CALL_8
0x192e	          0x4889c7	                            mov rdi, rax	      1255	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	ELSE_4	WHILE_1	IF_14	CALL_8
0x1931	      0xe800000000	                          call 0x4001976	      1255	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	ELSE_4	WHILE_1	IF_14	CALL_8
0x1936	            0x85c0	                           test eax, eax	      1255	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	ELSE_4	WHILE_1	IF_14	CALL_8
0x1938	            0x740c	                            je 0x4001986	      1255	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	ELSE_4	WHILE_1	IF_14	CALL_8
0x193a	    0xc78528ffffff	               mov dword [rbp - 0xd8], 1	      1257	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	ELSE_4	WHILE_1	IF_14
0x1944	            0xeb12	                           jmp 0x4001998	      1258	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	ELSE_4	WHILE_1	IF_14
0x1946	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1260	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	ELSE_4	WHILE_1
0x194a	          0x488b00	                    mov rax, qword [rax]	      1260	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	ELSE_4	WHILE_1
0x194d	        0x48894580	             mov qword [rbp - 0x80], rax	      1260	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	ELSE_4	WHILE_1
0x1951	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      1252	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	ELSE_4	WHILE_1
0x1956	            0x75c1	                           jne 0x4001959	      1252	screen.c	FUNCTION_20	ELSE_2	ELSE_3	IF_8	ELSE_4	WHILE_1
0x1958	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1266	screen.c	FUNCTION_20	ELSE_2	IF_15	CALL_9
0x195f	          0x4885c0	                           test rax, rax	      1266	screen.c	FUNCTION_20	ELSE_2	IF_15	CALL_9
0x1962	     0xf843c020000	                            je 0x4001be4	      1266	screen.c	FUNCTION_20	ELSE_2	IF_15	CALL_9
0x1968	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1266	screen.c	FUNCTION_20	ELSE_2	IF_15	CALL_9
0x196f	          0x4889c7	                            mov rdi, rax	      1266	screen.c	FUNCTION_20	ELSE_2	IF_15	CALL_9
0x1972	      0xe800000000	                          call 0x40019b7	      1266	screen.c	FUNCTION_20	ELSE_2	IF_15	CALL_9
0x1977	            0x85c0	                           test eax, eax	      1266	screen.c	FUNCTION_20	ELSE_2	IF_15	CALL_9
0x1979	     0xf8425020000	                            je 0x4001be4	      1266	screen.c	FUNCTION_20	ELSE_2	IF_15	CALL_9
0x197f	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1282	screen.c	FUNCTION_20	ELSE_2	IF_15
0x1986	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1282	screen.c	FUNCTION_20	ELSE_2	IF_15
0x198a	        0x488945a8	             mov qword [rbp - 0x58], rax	      1282	screen.c	FUNCTION_20	ELSE_2	IF_15
0x198e	    0x48c745b0ffff	      mov qword [rbp - 0x50], 0x7fffffff	      1283	screen.c	FUNCTION_20	ELSE_2	IF_15
0x1996	    0xc78540ffffff	               mov dword [rbp - 0xc0], 0	      1284	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1
0x19a0	      0xe933010000	                           jmp 0x4001b18	      1284	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1
0x19a5	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1285	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16
0x19ac	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      1285	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16
0x19b3	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	      1285	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16
0x19b9	          0x4863d0	                         movsxd rdx, eax	      1285	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16
0x19bc	          0x4889d0	                            mov rax, rdx	      1285	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16
0x19bf	          0x4801c0	                            add rax, rax	      1285	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16
0x19c2	          0x4801d0	                            add rax, rdx	      1285	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16
0x19c5	        0x48c1e003	                              shl rax, 3	      1285	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16
0x19c9	          0x4801c8	                            add rax, rcx	      1285	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16
0x19cc	         0xfb6400a	            movzx eax, byte [rax + 0xa] 	      1285	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16
0x19d0	            0x84c0	                             test al, al	      1285	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16
0x19d2	     0xf84f9000000	                            je 0x4001b11	      1285	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16
0x19d8	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1287	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_17
0x19df	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      1287	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_17
0x19e6	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	      1287	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_17
0x19ec	          0x4863d0	                         movsxd rdx, eax	      1287	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_17
0x19ef	          0x4889d0	                            mov rax, rdx	      1287	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_17
0x19f2	          0x4801c0	                            add rax, rax	      1287	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_17
0x19f5	          0x4801d0	                            add rax, rdx	      1287	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_17
0x19f8	        0x48c1e003	                              shl rax, 3	      1287	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_17
0x19fc	          0x4801c8	                            add rax, rcx	      1287	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_17
0x19ff	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1287	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_17
0x1a03	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1287	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_17
0x1a0a	          0x4839c2	                            cmp rdx, rax	      1287	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_17
0x1a0d	            0x7d33	                           jge 0x4001a82	      1287	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_17
0x1a0f	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1288	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_17
0x1a16	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      1288	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_17
0x1a1d	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	      1288	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_17
0x1a23	          0x4863d0	                         movsxd rdx, eax	      1288	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_17
0x1a26	          0x4889d0	                            mov rax, rdx	      1288	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_17
0x1a29	          0x4801c0	                            add rax, rax	      1288	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_17
0x1a2c	          0x4801d0	                            add rax, rdx	      1288	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_17
0x1a2f	        0x48c1e003	                              shl rax, 3	      1288	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_17
0x1a33	          0x4801c8	                            add rax, rcx	      1288	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_17
0x1a36	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1288	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_17
0x1a3a	        0x4883c001	                              add rax, 1	      1288	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_17
0x1a3e	        0x488945a8	             mov qword [rbp - 0x58], rax	      1288	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_17
0x1a42	    0x48817db0ffff	     cmp qword [rbp - 0x50], 0x7fffffff 	      1289	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_18
0x1a4a	     0xf8581000000	                           jne 0x4001b11	      1289	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_18
0x1a50	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1289	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_18
0x1a57	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      1289	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_18
0x1a5e	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	      1289	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_18
0x1a64	          0x4863d0	                         movsxd rdx, eax	      1289	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_18
0x1a67	          0x4889d0	                            mov rax, rdx	      1289	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_18
0x1a6a	          0x4801c0	                            add rax, rax	      1289	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_18
0x1a6d	          0x4801d0	                            add rax, rdx	      1289	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_18
0x1a70	        0x48c1e003	                              shl rax, 3	      1289	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_18
0x1a74	          0x4801c8	                            add rax, rcx	      1289	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_18
0x1a77	          0x488b10	                    mov rdx, qword [rax]	      1289	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_18
0x1a7a	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1289	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_18
0x1a81	          0x4839c2	                            cmp rdx, rax	      1289	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_18
0x1a84	            0x7c4b	                            jl 0x4001b11	      1289	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_18
0x1a86	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1291	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_18
0x1a8d	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      1291	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_18
0x1a94	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	      1291	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_18
0x1a9a	          0x4863d0	                         movsxd rdx, eax	      1291	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_18
0x1a9d	          0x4889d0	                            mov rax, rdx	      1291	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_18
0x1aa0	          0x4801c0	                            add rax, rax	      1291	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_18
0x1aa3	          0x4801d0	                            add rax, rdx	      1291	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_18
0x1aa6	        0x48c1e003	                              shl rax, 3	      1291	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_18
0x1aaa	          0x4801c8	                            add rax, rcx	      1291	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_18
0x1aad	          0x488b00	                    mov rax, qword [rax]	      1291	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_18
0x1ab0	        0x488945b0	             mov qword [rbp - 0x50], rax	      1291	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_18
0x1ab4	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1294	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_18	IF_19	CALL_10
0x1abb	      0xbe00000000	                              mov esi, 0	      1294	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_18	IF_19	CALL_10
0x1ac0	          0x4889c7	                            mov rdi, rax	      1294	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_18	IF_19	CALL_10
0x1ac3	      0xe8b9320000	             call sym.compute_foldcolumn	      1294	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_18	IF_19	CALL_10
0x1ac8	            0x85c0	                           test eax, eax	      1294	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_18	IF_19	CALL_10
0x1aca	            0x7e05	                           jle 0x4001b11	      1294	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_18	IF_19	CALL_10
0x1acc	      0x488345b001	               add qword [rbp - 0x50], 1	      1295	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1	IF_16	IF_18	IF_19
0x1ad1	    0x838540ffffff	               add dword [rbp - 0xc0], 1	      1284	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1
0x1ad8	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1284	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1
0x1adf	    0x8b80f8000000	            mov eax, dword [rax + 0xf8] 	      1284	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1
0x1ae5	    0x3b8540ffffff	             cmp eax, dword [rbp - 0xc0]	      1284	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1
0x1aeb	     0xf8fb4feffff	                            jg 0x40019e5	      1284	screen.c	FUNCTION_20	ELSE_2	IF_15	FOR_1
0x1af1	    0x488bb568ffff	             mov rsi, qword [rbp - 0x98]	      1299	screen.c	FUNCTION_20	ELSE_2	IF_15	CALL_11
0x1af8	    0x488d9568ffff	                   lea rdx, [rbp - 0x98]	      1299	screen.c	FUNCTION_20	ELSE_2	IF_15	CALL_11
0x1aff	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1299	screen.c	FUNCTION_20	ELSE_2	IF_15	CALL_11
0x1b06	    0x41b900000000	                              mov r9d, 0	      1299	screen.c	FUNCTION_20	ELSE_2	IF_15	CALL_11
0x1b0c	    0x41b801000000	                              mov r8d, 1	      1299	screen.c	FUNCTION_20	ELSE_2	IF_15	CALL_11
0x1b12	      0xb900000000	                              mov ecx, 0	      1299	screen.c	FUNCTION_20	ELSE_2	IF_15	CALL_11
0x1b17	          0x4889c7	                            mov rdi, rax	      1299	screen.c	FUNCTION_20	ELSE_2	IF_15	CALL_11
0x1b1a	      0xe800000000	                          call 0x4001b5f	      1299	screen.c	FUNCTION_20	ELSE_2	IF_15	CALL_11
0x1b1f	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1300	screen.c	FUNCTION_20	ELSE_2	IF_15	IF_20
0x1b26	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      1300	screen.c	FUNCTION_20	ELSE_2	IF_15	IF_20
0x1b2a	            0x7e0b	                           jle 0x4001b77	      1300	screen.c	FUNCTION_20	ELSE_2	IF_15	IF_20
0x1b2c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1301	screen.c	FUNCTION_20	ELSE_2	IF_15	IF_20
0x1b30	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      1301	screen.c	FUNCTION_20	ELSE_2	IF_15	IF_20
0x1b37	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1304	screen.c	FUNCTION_20	ELSE_2	IF_15
0x1b3e	        0x4883e801	                              sub rax, 1	      1304	screen.c	FUNCTION_20	ELSE_2	IF_15
0x1b42	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      1304	screen.c	FUNCTION_20	ELSE_2	IF_15
0x1b49	    0x488bb570ffff	             mov rsi, qword [rbp - 0x90]	      1305	screen.c	FUNCTION_20	ELSE_2	IF_15	CALL_12
0x1b50	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	      1305	screen.c	FUNCTION_20	ELSE_2	IF_15	CALL_12
0x1b57	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1305	screen.c	FUNCTION_20	ELSE_2	IF_15	CALL_12
0x1b5e	    0x41b900000000	                              mov r9d, 0	      1305	screen.c	FUNCTION_20	ELSE_2	IF_15	CALL_12
0x1b64	    0x41b801000000	                              mov r8d, 1	      1305	screen.c	FUNCTION_20	ELSE_2	IF_15	CALL_12
0x1b6a	          0x4889d1	                            mov rcx, rdx	      1305	screen.c	FUNCTION_20	ELSE_2	IF_15	CALL_12
0x1b6d	      0xba00000000	                              mov edx, 0	      1305	screen.c	FUNCTION_20	ELSE_2	IF_15	CALL_12
0x1b72	          0x4889c7	                            mov rdi, rax	      1305	screen.c	FUNCTION_20	ELSE_2	IF_15	CALL_12
0x1b75	      0xe800000000	                          call 0x4001bba	      1305	screen.c	FUNCTION_20	ELSE_2	IF_15	CALL_12
0x1b7a	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1306	screen.c	FUNCTION_20	ELSE_2	IF_15
0x1b81	        0x4883c001	                              add rax, 1	      1306	screen.c	FUNCTION_20	ELSE_2	IF_15
0x1b85	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      1306	screen.c	FUNCTION_20	ELSE_2	IF_15
0x1b8c	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1307	screen.c	FUNCTION_20	ELSE_2	IF_15	IF_21
0x1b93	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	      1307	screen.c	FUNCTION_20	ELSE_2	IF_15	IF_21
0x1b97	            0x7d0b	                           jge 0x4001be4	      1307	screen.c	FUNCTION_20	ELSE_2	IF_15	IF_21
0x1b99	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1308	screen.c	FUNCTION_20	ELSE_2	IF_15	IF_21
0x1b9d	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      1308	screen.c	FUNCTION_20	ELSE_2	IF_15	IF_21
0x1ba4	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1316	screen.c	FUNCTION_20	ELSE_2	IF_22
0x1bab	          0x4885c0	                           test rax, rax	      1316	screen.c	FUNCTION_20	ELSE_2	IF_22
0x1bae	            0x745f	                            je 0x4001c4f	      1316	screen.c	FUNCTION_20	ELSE_2	IF_22
0x1bb0	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1316	screen.c	FUNCTION_20	ELSE_2	IF_22
0x1bb7	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      1316	screen.c	FUNCTION_20	ELSE_2	IF_22
0x1bbb	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1316	screen.c	FUNCTION_20	ELSE_2	IF_22
0x1bc2	          0x4839c2	                            cmp rdx, rax	      1316	screen.c	FUNCTION_20	ELSE_2	IF_22
0x1bc5	            0x7e48	                           jle 0x4001c4f	      1316	screen.c	FUNCTION_20	ELSE_2	IF_22
0x1bc7	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1318	screen.c	FUNCTION_20	ELSE_2	IF_22	IF_23
0x1bce	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      1318	screen.c	FUNCTION_20	ELSE_2	IF_22	IF_23
0x1bd2	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1318	screen.c	FUNCTION_20	ELSE_2	IF_22	IF_23
0x1bd9	          0x4839c2	                            cmp rdx, rax	      1318	screen.c	FUNCTION_20	ELSE_2	IF_22	IF_23
0x1bdc	            0x7d14	                           jge 0x4001c32	      1318	screen.c	FUNCTION_20	ELSE_2	IF_22	IF_23
0x1bde	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1319	screen.c	FUNCTION_20	ELSE_2	IF_22	IF_23
0x1be5	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1319	screen.c	FUNCTION_20	ELSE_2	IF_22	IF_23
0x1be9	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      1319	screen.c	FUNCTION_20	ELSE_2	IF_22	IF_23
0x1bf0	            0xeb1d	                           jmp 0x4001c4f	      1319	screen.c	FUNCTION_20	ELSE_2	IF_22	IF_23
0x1bf2	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1321	screen.c	FUNCTION_20	ELSE_2	IF_22	ELSE_5	IF_24	CALL_13
0x1bf9	          0x4889c7	                            mov rdi, rax	      1321	screen.c	FUNCTION_20	ELSE_2	IF_22	ELSE_5	IF_24	CALL_13
0x1bfc	      0xe800000000	                          call 0x4001c41	      1321	screen.c	FUNCTION_20	ELSE_2	IF_22	ELSE_5	IF_24	CALL_13
0x1c01	            0x85c0	                           test eax, eax	      1321	screen.c	FUNCTION_20	ELSE_2	IF_22	ELSE_5	IF_24	CALL_13
0x1c03	            0x740a	                            je 0x4001c4f	      1321	screen.c	FUNCTION_20	ELSE_2	IF_22	ELSE_5	IF_24	CALL_13
0x1c05	    0xc78514ffffff	               mov dword [rbp - 0xec], 1	      1322	screen.c	FUNCTION_20	ELSE_2	IF_22	ELSE_5	IF_24
0x1c0f	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1328	screen.c	FUNCTION_20	ELSE_2	IF_25
0x1c16	          0x4885c0	                           test rax, rax	      1328	screen.c	FUNCTION_20	ELSE_2	IF_25
0x1c19	            0x742c	                            je 0x4001c87	      1328	screen.c	FUNCTION_20	ELSE_2	IF_25
0x1c1b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1328	screen.c	FUNCTION_20	ELSE_2	IF_25
0x1c1f	    0x488b80100100	           mov rax, qword [rax + 0x110] 	      1328	screen.c	FUNCTION_20	ELSE_2	IF_25
0x1c26	          0x4885c0	                           test rax, rax	      1328	screen.c	FUNCTION_20	ELSE_2	IF_25
0x1c29	            0x741c	                            je 0x4001c87	      1328	screen.c	FUNCTION_20	ELSE_2	IF_25
0x1c2b	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1328	screen.c	FUNCTION_20	ELSE_2	IF_25
0x1c32	    0x8b8038020000	           mov eax, dword [rax + 0x238] 	      1328	screen.c	FUNCTION_20	ELSE_2	IF_25
0x1c38	            0x85c0	                           test eax, eax	      1328	screen.c	FUNCTION_20	ELSE_2	IF_25
0x1c3a	            0x740b	                            je 0x4001c87	      1328	screen.c	FUNCTION_20	ELSE_2	IF_25
0x1c3c	    0x48c78570ffff	      mov qword [rbp - 0x90], 0x7fffffff	      1329	screen.c	FUNCTION_20	ELSE_2	IF_25
0x1c47	    0x83bd10ffffff	           cmp dword [rbp - 0xf0], 0x1e 	      1336	screen.c	FUNCTION_20	IF_26
0x1c4e	     0xf85a2000000	                           jne 0x4001d36	      1336	screen.c	FUNCTION_20	IF_26
0x1c54	    0x48c745900000	               mov qword [rbp - 0x70], 0	      1338	screen.c	FUNCTION_20	IF_26
0x1c5c	    0xc78540ffffff	               mov dword [rbp - 0xc0], 0	      1339	screen.c	FUNCTION_20	IF_26	FOR_2
0x1c66	            0xeb5a	                           jmp 0x4001d02	      1339	screen.c	FUNCTION_20	IF_26	FOR_2
0x1c68	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1341	screen.c	FUNCTION_20	IF_26	FOR_2
0x1c6f	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      1341	screen.c	FUNCTION_20	IF_26	FOR_2
0x1c76	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	      1341	screen.c	FUNCTION_20	IF_26	FOR_2
0x1c7c	          0x4863d0	                         movsxd rdx, eax	      1341	screen.c	FUNCTION_20	IF_26	FOR_2
0x1c7f	          0x4889d0	                            mov rax, rdx	      1341	screen.c	FUNCTION_20	IF_26	FOR_2
0x1c82	          0x4801c0	                            add rax, rax	      1341	screen.c	FUNCTION_20	IF_26	FOR_2
0x1c85	          0x4801d0	                            add rax, rdx	      1341	screen.c	FUNCTION_20	IF_26	FOR_2
0x1c88	        0x48c1e003	                              shl rax, 3	      1341	screen.c	FUNCTION_20	IF_26	FOR_2
0x1c8c	          0x4801c8	                            add rax, rcx	      1341	screen.c	FUNCTION_20	IF_26	FOR_2
0x1c8f	         0xfb74008	               movzx eax, word [rax + 8]	      1341	screen.c	FUNCTION_20	IF_26	FOR_2
0x1c93	           0xfb7c0	                           movzx eax, ax	      1341	screen.c	FUNCTION_20	IF_26	FOR_2
0x1c96	        0x48014590	            add qword [rbp - 0x70], rax 	      1341	screen.c	FUNCTION_20	IF_26	FOR_2
0x1c9a	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1342	screen.c	FUNCTION_20	IF_26	FOR_2	IF_27
0x1ca1	    0x8b802c010000	           mov eax, dword [rax + 0x12c] 	      1342	screen.c	FUNCTION_20	IF_26	FOR_2	IF_27
0x1ca7	            0x4898	                                    cdqe	      1342	screen.c	FUNCTION_20	IF_26	FOR_2	IF_27
0x1ca9	        0x483b4590	             cmp rax, qword [rbp - 0x70]	      1342	screen.c	FUNCTION_20	IF_26	FOR_2	IF_27
0x1cad	            0x7f0c	                            jg 0x4001cfb	      1342	screen.c	FUNCTION_20	IF_26	FOR_2	IF_27
0x1caf	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1344	screen.c	FUNCTION_20	IF_26	FOR_2	IF_27
0x1cb3	    0x898514ffffff	             mov dword [rbp - 0xec], eax	      1344	screen.c	FUNCTION_20	IF_26	FOR_2	IF_27
0x1cb9	            0xeb1c	                           jmp 0x4001d17	      1345	screen.c	FUNCTION_20	IF_26	FOR_2	IF_27
0x1cbb	    0x838540ffffff	               add dword [rbp - 0xc0], 1	      1339	screen.c	FUNCTION_20	IF_26	FOR_2
0x1cc2	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1339	screen.c	FUNCTION_20	IF_26	FOR_2
0x1cc9	    0x8b80f8000000	            mov eax, dword [rax + 0xf8] 	      1339	screen.c	FUNCTION_20	IF_26	FOR_2
0x1ccf	    0x3b8540ffffff	             cmp eax, dword [rbp - 0xc0]	      1339	screen.c	FUNCTION_20	IF_26	FOR_2
0x1cd5	            0x7f91	                            jg 0x4001ca8	      1339	screen.c	FUNCTION_20	IF_26	FOR_2
0x1cd7	    0x83bd14ffffff	               cmp dword [rbp - 0xec], 0	      1348	screen.c	FUNCTION_20	IF_26	IF_28
0x1cde	            0x750c	                           jne 0x4001d2c	      1348	screen.c	FUNCTION_20	IF_26	IF_28
0x1ce0	    0xc78510ffffff	           mov dword [rbp - 0xf0], 0x28 	      1350	screen.c	FUNCTION_20	IF_26	IF_28
0x1cea	            0xeb0a	                           jmp 0x4001d36	      1350	screen.c	FUNCTION_20	IF_26	IF_28
0x1cec	    0xc78510ffffff	             mov dword [rbp - 0xf0], 0xa	      1353	screen.c	FUNCTION_20	IF_26	ELSE_6
0x1cf6	    0x8b0500000000	            mov eax, dword [0x04001d3c] 	      1360	screen.c	FUNCTION_20	IF_29
0x1cfc	            0x85c0	                           test eax, eax	      1360	screen.c	FUNCTION_20	IF_29
0x1cfe	            0x740a	                            je 0x4001d4a	      1360	screen.c	FUNCTION_20	IF_29
0x1d00	    0xc70500000000	               mov dword [0x04001d4a], 2	      1361	screen.c	FUNCTION_20	IF_29
0x1d0a	    0x83bd10ffffff	            cmp dword [rbp - 0xf0], 0xa 	      1371	screen.c	FUNCTION_20	IF_30
0x1d11	            0x741f	                            je 0x4001d72	      1371	screen.c	FUNCTION_20	IF_30
0x1d13	    0x83bd10ffffff	           cmp dword [rbp - 0xf0], 0x23 	      1371	screen.c	FUNCTION_20	IF_30
0x1d1a	            0x7416	                            je 0x4001d72	      1371	screen.c	FUNCTION_20	IF_30
0x1d1c	    0x83bd10ffffff	           cmp dword [rbp - 0xf0], 0x14 	      1372	screen.c	FUNCTION_20	IF_30
0x1d23	            0x740d	                            je 0x4001d72	      1372	screen.c	FUNCTION_20	IF_30
0x1d25	    0x83bd10ffffff	           cmp dword [rbp - 0xf0], 0x19 	      1372	screen.c	FUNCTION_20	IF_30
0x1d2c	     0xf857a080000	                           jne 0x40025ec	      1372	screen.c	FUNCTION_20	IF_30
0x1d32	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1374	screen.c	FUNCTION_20	IF_30
0x1d39	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      1374	screen.c	FUNCTION_20	IF_30
0x1d3f	            0x85c0	                           test eax, eax	      1374	screen.c	FUNCTION_20	IF_30
0x1d41	     0xf8565080000	                           jne 0x40025ec	      1374	screen.c	FUNCTION_20	IF_30
0x1d47	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1374	screen.c	FUNCTION_20	IF_30
0x1d4e	    0x8b8090000000	            mov eax, dword [rax + 0x90] 	      1374	screen.c	FUNCTION_20	IF_30
0x1d54	            0x85c0	                           test eax, eax	      1374	screen.c	FUNCTION_20	IF_30
0x1d56	     0xf8550080000	                           jne 0x40025ec	      1374	screen.c	FUNCTION_20	IF_30
0x1d5c	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1378	screen.c	FUNCTION_20	IF_30	IF_31
0x1d63	          0x4885c0	                           test rax, rax	      1378	screen.c	FUNCTION_20	IF_30	IF_31
0x1d66	            0x741b	                            je 0x4001dc3	      1378	screen.c	FUNCTION_20	IF_30	IF_31
0x1d68	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1378	screen.c	FUNCTION_20	IF_30	IF_31
0x1d6f	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      1378	screen.c	FUNCTION_20	IF_30	IF_31
0x1d73	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1378	screen.c	FUNCTION_20	IF_30	IF_31
0x1d7a	          0x4839c2	                            cmp rdx, rax	      1378	screen.c	FUNCTION_20	IF_30	IF_31
0x1d7d	     0xf84c4070000	                            je 0x4002587	      1378	screen.c	FUNCTION_20	IF_30	IF_31
0x1d83	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1385	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32
0x1d8a	    0x488b80000100	           mov rax, qword [rax + 0x100] 	      1385	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32
0x1d91	         0xfb6400a	            movzx eax, byte [rax + 0xa] 	      1385	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32
0x1d95	            0x84c0	                             test al, al	      1385	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32
0x1d97	     0xf84e4030000	                            je 0x40021c1	      1385	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32
0x1d9d	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1386	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32
0x1da4	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      1386	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32
0x1da8	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1386	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32
0x1daf	    0x488b80000100	           mov rax, qword [rax + 0x100] 	      1386	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32
0x1db6	          0x488b00	                    mov rax, qword [rax]	      1386	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32
0x1db9	          0x4839c2	                            cmp rdx, rax	      1386	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32
0x1dbc	            0x7c47	                            jl 0x4001e45	      1386	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32
0x1dbe	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1388	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32
0x1dc5	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      1388	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32
0x1dc9	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1388	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32
0x1dd0	    0x488b80000100	           mov rax, qword [rax + 0x100] 	      1388	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32
0x1dd7	          0x488b00	                    mov rax, qword [rax]	      1388	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32
0x1dda	          0x4839c2	                            cmp rdx, rax	      1388	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32
0x1ddd	     0xf859e030000	                           jne 0x40021c1	      1388	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32
0x1de3	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1389	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32
0x1dea	    0x8b9084000000	            mov edx, dword [rax + 0x84] 	      1389	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32
0x1df0	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1389	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32
0x1df7	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      1389	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32
0x1dfd	            0x39c2	                            cmp edx, eax	      1389	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32
0x1dff	     0xf8e7c030000	                           jle 0x40021c1	      1389	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32
0x1e05	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1397	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	IF_33	CALL_14
0x1e0c	          0x4889c7	                            mov rdi, rax	      1397	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	IF_33	CALL_14
0x1e0f	      0xe800000000	                          call 0x4001e54	      1397	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	IF_33	CALL_14
0x1e14	            0x85c0	                           test eax, eax	      1397	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	IF_33	CALL_14
0x1e16	     0xf8489000000	                            je 0x4001ee5	      1397	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	IF_33	CALL_14
0x1e1c	    0x48c745900000	               mov qword [rbp - 0x70], 0	      1403	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	IF_33
0x1e24	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1404	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	IF_33	FOR_3
0x1e2b	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1404	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	IF_33	FOR_3
0x1e2f	        0x488945d0	             mov qword [rbp - 0x30], rax	      1404	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	IF_33	FOR_3
0x1e33	            0xeb54	                           jmp 0x4001ec9	      1404	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	IF_33	FOR_3
0x1e35	      0x4883459001	               add qword [rbp - 0x70], 1	      1406	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	IF_33	FOR_3
0x1e3a	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1407	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	IF_33	FOR_3	IF_34
0x1e41	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1407	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	IF_33	FOR_3	IF_34
0x1e47	          0x83e802	                              sub eax, 2	      1407	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	IF_33	FOR_3	IF_34
0x1e4a	            0x4898	                                    cdqe	      1407	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	IF_33	FOR_3	IF_34
0x1e4c	        0x483b4590	             cmp rax, qword [rbp - 0x70]	      1407	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	IF_33	FOR_3	IF_34
0x1e50	            0x7e7b	                           jle 0x4001f0d	      1407	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	IF_33	FOR_3	IF_34
0x1e52	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	      1409	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	IF_33	FOR_3	CALL_15
0x1e56	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      1409	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	IF_33	FOR_3	CALL_15
0x1e5a	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1409	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	IF_33	FOR_3	CALL_15
0x1e61	    0x41b900000000	                              mov r9d, 0	      1409	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	IF_33	FOR_3	CALL_15
0x1e67	    0x41b801000000	                              mov r8d, 1	      1409	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	IF_33	FOR_3	CALL_15
0x1e6d	          0x4889d1	                            mov rcx, rdx	      1409	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	IF_33	FOR_3	CALL_15
0x1e70	      0xba00000000	                              mov edx, 0	      1409	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	IF_33	FOR_3	CALL_15
0x1e75	          0x4889c7	                            mov rdi, rax	      1409	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	IF_33	FOR_3	CALL_15
0x1e78	      0xe800000000	                          call 0x4001ebd	      1409	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	IF_33	FOR_3	CALL_15
0x1e7d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1404	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	IF_33	FOR_3
0x1e81	        0x4883c001	                              add rax, 1	      1404	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	IF_33	FOR_3
0x1e85	        0x488945d0	             mov qword [rbp - 0x30], rax	      1404	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	IF_33	FOR_3
0x1e89	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1404	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	IF_33	FOR_3
0x1e90	    0x488b80000100	           mov rax, qword [rax + 0x100] 	      1404	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	IF_33	FOR_3
0x1e97	          0x488b10	                    mov rdx, qword [rax]	      1404	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	IF_33	FOR_3
0x1e9a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1404	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	IF_33	FOR_3
0x1e9e	          0x4839c2	                            cmp rdx, rax	      1404	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	IF_33	FOR_3
0x1ea1	            0x7f92	                            jg 0x4001e75	      1404	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	IF_33	FOR_3
0x1ea3	            0xeb29	                           jmp 0x4001f0e	      1404	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	IF_33	FOR_3
0x1ea5	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1414	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8
0x1eac	    0x488b80000100	           mov rax, qword [rax + 0x100] 	      1414	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8
0x1eb3	          0x488b10	                    mov rdx, qword [rax]	      1414	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8
0x1eb6	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1414	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8
0x1ebd	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1414	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8
0x1ec1	          0x4829c2	                            sub rdx, rax	      1414	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8
0x1ec4	          0x4889d0	                            mov rax, rdx	      1414	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8
0x1ec7	        0x48894590	             mov qword [rbp - 0x70], rax	      1414	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8
0x1ecb	            0xeb01	                           jmp 0x4001f0e	      1414	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8
0x1ecd	              0x90	                                     nop	      1408	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	IF_33	FOR_3	IF_34
0x1ece	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1415	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35
0x1ed5	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1415	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35
0x1edb	          0x83e802	                              sub eax, 2	      1415	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35
0x1ede	            0x4898	                                    cdqe	      1415	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35
0x1ee0	        0x483b4590	             cmp rax, qword [rbp - 0x70]	      1415	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35
0x1ee4	     0xf8e88020000	                           jle 0x40021b2	      1415	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35
0x1eea	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1417	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	CALL_16
0x1ef1	    0x488b80000100	           mov rax, qword [rax + 0x100] 	      1417	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	CALL_16
0x1ef8	          0x488b00	                    mov rax, qword [rax]	      1417	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	CALL_16
0x1efb	        0x488d50ff	                      lea rdx, [rax - 1]	      1417	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	CALL_16
0x1eff	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1417	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	CALL_16
0x1f06	        0x488b4878	            mov rcx, qword [rax + 0x78] 	      1417	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	CALL_16
0x1f0a	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1417	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	CALL_16
0x1f11	          0x4889ce	                            mov rsi, rcx	      1417	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	CALL_16
0x1f14	          0x4889c7	                            mov rdi, rax	      1417	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	CALL_16
0x1f17	      0xe800000000	                          call 0x4001f5c	      1417	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	CALL_16
0x1f1c	    0x898540ffffff	             mov dword [rbp - 0xc0], eax	      1417	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	CALL_16
0x1f22	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1420	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_36
0x1f29	    0x488b80000100	           mov rax, qword [rax + 0x100] 	      1420	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_36
0x1f30	          0x488b10	                    mov rdx, qword [rax]	      1420	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_36
0x1f33	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1420	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_36
0x1f3a	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1420	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_36
0x1f3e	          0x4839c2	                            cmp rdx, rax	      1420	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_36
0x1f41	            0x743c	                            je 0x4001fbf	      1420	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_36
0x1f43	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1421	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_36	CALL_17
0x1f4a	    0x488b80000100	           mov rax, qword [rax + 0x100] 	      1421	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_36	CALL_17
0x1f51	          0x488b10	                    mov rdx, qword [rax]	      1421	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_36	CALL_17
0x1f54	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1421	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_36	CALL_17
0x1f5b	          0x4889d6	                            mov rsi, rdx	      1421	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_36	CALL_17
0x1f5e	          0x4889c7	                            mov rdi, rax	      1421	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_36	CALL_17
0x1f61	      0xe800000000	                          call 0x4001fa6	      1421	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_36	CALL_17
0x1f66	            0x89c2	                            mov edx, eax	      1421	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_36	CALL_17
0x1f68	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1422	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_36
0x1f6f	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      1422	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_36
0x1f75	            0x29c2	                            sub edx, eax	      1422	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_36
0x1f77	            0x89d0	                            mov eax, edx	      1422	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_36
0x1f79	     0x18540ffffff	             add dword [rbp - 0xc0], eax	      1421	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_36	CALL_17
0x1f7f	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1424	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37
0x1f86	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1424	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37
0x1f8c	          0x83e802	                              sub eax, 2	      1424	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37
0x1f8f	    0x3b8540ffffff	             cmp eax, dword [rbp - 0xc0]	      1424	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37
0x1f95	     0xf8ec8010000	                           jle 0x40021a3	      1424	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37
0x1f9b	    0x83bd40ffffff	               cmp dword [rbp - 0xc0], 0	      1431	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_38
0x1fa2	            0x7e0a	                           jle 0x4001fee	      1431	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_38
0x1fa4	      0xbf00000000	                              mov edi, 0	      1432	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	CALL_18
0x1fa9	      0xe800000000	                          call 0x4001fee	      1432	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	CALL_18
0x1fae	    0x488b05000000	            mov rax, qword [0x04001ff5] 	      1433	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	CALL_19
0x1fb5	    0x48398508ffff	            cmp qword [rbp - 0xf8], rax 	      1433	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	CALL_19
0x1fbc	           0xf94c0	                                 sete al	      1433	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	CALL_19
0x1fbf	           0xfb6c8	                           movzx ecx, al	      1433	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	CALL_19
0x1fc2	    0x8b9540ffffff	             mov edx, dword [rbp - 0xc0]	      1433	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	CALL_19
0x1fc8	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1433	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	CALL_19
0x1fcf	          0x4189c8	                            mov r8d, ecx	      1433	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	CALL_19
0x1fd2	      0xb900000000	                              mov ecx, 0	      1433	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	CALL_19
0x1fd7	      0xbe00000000	                              mov esi, 0	      1433	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	CALL_19
0x1fdc	          0x4889c7	                            mov rdi, rax	      1433	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	CALL_19
0x1fdf	      0xe800000000	                          call 0x4002024	      1433	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	CALL_19
0x1fe4	          0x83f801	                              cmp eax, 1	      1433	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	CALL_19
0x1fe7	     0xf8567010000	                           jne 0x4002194	      1433	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	CALL_19
0x1fed	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1435	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40
0x1ff4	    0x8b80f8000000	            mov eax, dword [rax + 0xf8] 	      1435	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40
0x1ffa	            0x85c0	                           test eax, eax	      1435	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40
0x1ffc	     0xf8444050000	                            je 0x4002586	      1435	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40
0x2002	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	      1439	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40
0x2008	    0x898514ffffff	             mov dword [rbp - 0xec], eax	      1439	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40
0x200e	    0xc78524ffffff	               mov dword [rbp - 0xdc], 1	      1440	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40
0x2018	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1444	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	IF_41
0x201f	    0x8b80f8000000	            mov eax, dword [rax + 0xf8] 	      1444	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	IF_41
0x2025	            0x89c2	                            mov edx, eax	      1444	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	IF_41
0x2027	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1444	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	IF_41
0x202b	             0x1d0	                            add eax, edx	      1444	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	IF_41
0x202d	            0x89c2	                            mov edx, eax	      1444	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	IF_41
0x202f	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1444	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	IF_41
0x2036	    0x8990f8000000	             mov dword [rax + 0xf8], edx	      1444	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	IF_41
0x203c	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1444	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	IF_41
0x2043	    0x8b90f8000000	            mov edx, dword [rax + 0xf8] 	      1444	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	IF_41
0x2049	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1444	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	IF_41
0x2050	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1444	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	IF_41
0x2056	            0x39c2	                            cmp edx, eax	      1444	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	IF_41
0x2058	            0x7e1a	                           jle 0x40020b4	      1444	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	IF_41
0x205a	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1445	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	IF_41
0x2061	    0x8b90a0000000	            mov edx, dword [rax + 0xa0] 	      1445	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	IF_41
0x2067	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1445	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	IF_41
0x206e	    0x8990f8000000	             mov dword [rax + 0xf8], edx	      1445	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	IF_41
0x2074	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1446	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	FOR_4
0x207b	    0x8b80f8000000	            mov eax, dword [rax + 0xf8] 	      1446	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	FOR_4
0x2081	    0x898530ffffff	             mov dword [rbp - 0xd0], eax	      1446	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	FOR_4
0x2087	            0xeb72	                           jmp 0x400213b	      1446	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	FOR_4
0x2089	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1447	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	FOR_4
0x2090	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      1447	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	FOR_4
0x2097	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      1447	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	FOR_4
0x209d	          0x4863d0	                         movsxd rdx, eax	      1447	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	FOR_4
0x20a0	          0x4889d0	                            mov rax, rdx	      1447	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	FOR_4
0x20a3	          0x4801c0	                            add rax, rax	      1447	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	FOR_4
0x20a6	          0x4801d0	                            add rax, rdx	      1447	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	FOR_4
0x20a9	        0x48c1e003	                              shl rax, 3	      1447	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	FOR_4
0x20ad	        0x488d1401	                    lea rdx, [rcx + rax]	      1447	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	FOR_4
0x20b1	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1447	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	FOR_4
0x20b8	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      1447	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	FOR_4
0x20bf	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      1447	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	FOR_4
0x20c5	            0x4898	                                    cdqe	      1447	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	FOR_4
0x20c7	        0x482b4590	             sub rax, qword [rbp - 0x70]	      1447	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	FOR_4
0x20cb	          0x4889c6	                            mov rsi, rax	      1447	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	FOR_4
0x20ce	          0x4889f0	                            mov rax, rsi	      1447	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	FOR_4
0x20d1	          0x4801c0	                            add rax, rax	      1447	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	FOR_4
0x20d4	          0x4801f0	                            add rax, rsi	      1447	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	FOR_4
0x20d7	        0x48c1e003	                              shl rax, 3	      1447	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	FOR_4
0x20db	          0x4801c8	                            add rax, rcx	      1447	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	FOR_4
0x20de	          0x488b08	                    mov rcx, qword [rax]	      1447	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	FOR_4
0x20e1	          0x48890a	                    mov qword [rdx], rcx	      1447	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	FOR_4
0x20e4	        0x488b4808	                mov rcx, qword [rax + 8]	      1447	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	FOR_4
0x20e8	        0x48894a08	                mov qword [rdx + 8], rcx	      1447	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	FOR_4
0x20ec	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1447	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	FOR_4
0x20f0	        0x48894210	             mov qword [rdx + 0x10], rax	      1447	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	FOR_4
0x20f4	    0x83ad30ffffff	               sub dword [rbp - 0xd0], 1	      1446	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	FOR_4
0x20fb	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      1446	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	FOR_4
0x2101	            0x4898	                                    cdqe	      1446	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	FOR_4
0x2103	        0x482b4590	             sub rax, qword [rbp - 0x70]	      1446	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	FOR_4
0x2107	          0x4885c0	                           test rax, rax	      1446	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	FOR_4
0x210a	     0xf8979ffffff	                           jns 0x40020c9	      1446	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	FOR_4
0x2110	            0xeb34	                           jmp 0x4002186	      1448	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	WHILE_2
0x2112	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1449	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	WHILE_2
0x2119	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      1449	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	WHILE_2
0x2120	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      1449	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	WHILE_2
0x2126	          0x8d50ff	                      lea edx, [rax - 1]	      1449	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	WHILE_2
0x2129	    0x899530ffffff	             mov dword [rbp - 0xd0], edx	      1449	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	WHILE_2
0x212f	          0x4863d0	                         movsxd rdx, eax	      1449	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	WHILE_2
0x2132	          0x4889d0	                            mov rax, rdx	      1449	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	WHILE_2
0x2135	          0x4801c0	                            add rax, rax	      1449	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	WHILE_2
0x2138	          0x4801d0	                            add rax, rdx	      1449	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	WHILE_2
0x213b	        0x48c1e003	                              shl rax, 3	      1449	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	WHILE_2
0x213f	          0x4801c8	                            add rax, rcx	      1449	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	WHILE_2
0x2142	        0xc6400a00	                 mov byte [rax + 0xa], 0	      1449	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	WHILE_2
0x2146	    0x83bd30ffffff	               cmp dword [rbp - 0xd0], 0	      1448	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	WHILE_2
0x214d	            0x79c3	                           jns 0x4002152	      1448	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	IF_39	IF_40	WHILE_2
0x214f	      0xe9f2030000	                           jmp 0x4002586	      1415	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35
0x2154	    0xc78518ffffff	               mov dword [rbp - 0xe8], 0	      1453	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	IF_37	ELSE_9
0x215e	      0xe9e3030000	                           jmp 0x4002586	      1415	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35
0x2163	    0xc78518ffffff	               mov dword [rbp - 0xe8], 0	      1456	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35	ELSE_9	ELSE_10
0x216d	      0xe9d4030000	                           jmp 0x4002586	      1415	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35
0x2172	    0xc78518ffffff	               mov dword [rbp - 0xe8], 0	      1459	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_9	ELSE_10	ELSE_11
0x217c	      0xe9c5030000	                           jmp 0x4002586	      1415	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35
0x2181	    0x48c74590ffff	mov qword [rbp - 0x70], 0xffffffffffffffff	      1470	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12
0x2189	    0xc7852cffffff	               mov dword [rbp - 0xd4], 0	      1471	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12
0x2193	    0xc78540ffffff	               mov dword [rbp - 0xc0], 0	      1472	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5
0x219d	      0xe9b2000000	                           jmp 0x4002294	      1472	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5
0x21a2	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1474	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5	IF_42
0x21a9	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      1474	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5	IF_42
0x21b0	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	      1474	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5	IF_42
0x21b6	          0x4863d0	                         movsxd rdx, eax	      1474	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5	IF_42
0x21b9	          0x4889d0	                            mov rax, rdx	      1474	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5	IF_42
0x21bc	          0x4801c0	                            add rax, rax	      1474	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5	IF_42
0x21bf	          0x4801d0	                            add rax, rdx	      1474	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5	IF_42
0x21c2	        0x48c1e003	                              shl rax, 3	      1474	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5	IF_42
0x21c6	          0x4801c8	                            add rax, rcx	      1474	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5	IF_42
0x21c9	         0xfb6400a	            movzx eax, byte [rax + 0xa] 	      1474	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5	IF_42
0x21cd	            0x84c0	                             test al, al	      1474	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5	IF_42
0x21cf	            0x7448	                            je 0x4002259	      1474	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5	IF_42
0x21d1	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1475	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5	IF_42
0x21d8	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      1475	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5	IF_42
0x21df	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	      1475	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5	IF_42
0x21e5	          0x4863d0	                         movsxd rdx, eax	      1475	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5	IF_42
0x21e8	          0x4889d0	                            mov rax, rdx	      1475	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5	IF_42
0x21eb	          0x4801c0	                            add rax, rax	      1475	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5	IF_42
0x21ee	          0x4801d0	                            add rax, rdx	      1475	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5	IF_42
0x21f1	        0x48c1e003	                              shl rax, 3	      1475	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5	IF_42
0x21f5	          0x4801c8	                            add rax, rcx	      1475	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5	IF_42
0x21f8	          0x488b10	                    mov rdx, qword [rax]	      1475	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5	IF_42
0x21fb	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1475	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5	IF_42
0x2202	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1475	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5	IF_42
0x2206	          0x4839c2	                            cmp rdx, rax	      1475	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5	IF_42
0x2209	            0x750e	                           jne 0x4002259	      1475	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5	IF_42
0x220b	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	      1477	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5	IF_42
0x2211	            0x4898	                                    cdqe	      1477	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5	IF_42
0x2213	        0x48894590	             mov qword [rbp - 0x70], rax	      1477	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5	IF_42
0x2217	            0xeb54	                           jmp 0x40022ad	      1478	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5	IF_42
0x2219	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1480	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5
0x2220	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      1480	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5
0x2227	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	      1480	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5
0x222d	          0x4863d0	                         movsxd rdx, eax	      1480	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5
0x2230	          0x4889d0	                            mov rax, rdx	      1480	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5
0x2233	          0x4801c0	                            add rax, rax	      1480	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5
0x2236	          0x4801d0	                            add rax, rdx	      1480	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5
0x2239	        0x48c1e003	                              shl rax, 3	      1480	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5
0x223d	          0x4801c8	                            add rax, rcx	      1480	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5
0x2240	         0xfb74008	               movzx eax, word [rax + 8]	      1480	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5
0x2244	           0xfb7c0	                           movzx eax, ax	      1480	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5
0x2247	     0x1852cffffff	             add dword [rbp - 0xd4], eax	      1480	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5
0x224d	    0x838540ffffff	               add dword [rbp - 0xc0], 1	      1472	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5
0x2254	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1472	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5
0x225b	    0x8b80f8000000	            mov eax, dword [rax + 0xf8] 	      1472	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5
0x2261	    0x3b8540ffffff	             cmp eax, dword [rbp - 0xc0]	      1472	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5
0x2267	     0xf8f35ffffff	                            jg 0x40021e2	      1472	screen.c	FUNCTION_20	IF_30	ELSE_9	ELSE_10	ELSE_11	ELSE_12	FOR_5
0x226d	      0x48837d90ff	cmp qword [rbp - 0x70], 0xffffffffffffffff	      1482	screen.c	FUNCTION_20	IF_30	ELSE_12	IF_43
0x2272	            0x750f	                           jne 0x40022c3	      1482	screen.c	FUNCTION_20	IF_30	ELSE_12	IF_43
0x2274	    0xc78518ffffff	               mov dword [rbp - 0xe8], 0	      1486	screen.c	FUNCTION_20	IF_30	ELSE_12	IF_43
0x227e	      0xe9c4020000	                           jmp 0x4002587	      1486	screen.c	FUNCTION_20	IF_30	ELSE_12	IF_43
0x2283	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1497	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	IF_44
0x228a	    0x488b80000100	           mov rax, qword [rax + 0x100] 	      1497	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	IF_44
0x2291	          0x488b10	                    mov rdx, qword [rax]	      1497	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	IF_44
0x2294	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1497	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	IF_44
0x229b	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1497	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	IF_44
0x229f	          0x4839c2	                            cmp rdx, rax	      1497	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	IF_44
0x22a2	            0x7515	                           jne 0x40022f9	      1497	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	IF_44
0x22a4	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1498	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	IF_44
0x22ab	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      1498	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	IF_44
0x22b1	     0x1852cffffff	             add dword [rbp - 0xd4], eax	      1498	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	IF_44
0x22b7	            0xeb23	                           jmp 0x400231c	      1498	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	IF_44
0x22b9	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1500	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	CALL_20
0x22c0	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      1500	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	CALL_20
0x22c4	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1500	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	CALL_20
0x22cb	          0x4889d6	                            mov rsi, rdx	      1500	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	CALL_20
0x22ce	          0x4889c7	                            mov rdi, rax	      1500	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	CALL_20
0x22d1	      0xe800000000	                          call 0x4002316	      1500	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	CALL_20
0x22d6	     0x1852cffffff	             add dword [rbp - 0xd4], eax	      1500	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	CALL_20
0x22dc	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1502	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13
0x22e3	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      1502	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13
0x22e9	    0x29852cffffff	             sub dword [rbp - 0xd4], eax	      1502	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13
0x22ef	    0x83bd2cffffff	               cmp dword [rbp - 0xd4], 0	      1504	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	IF_45
0x22f6	            0x7e70	                           jle 0x40023a8	      1504	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	IF_45
0x22f8	      0xbf00000000	                              mov edi, 0	      1506	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	IF_45	CALL_21
0x22fd	      0xe800000000	                          call 0x4002342	      1506	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	IF_45	CALL_21
0x2302	    0x488b05000000	            mov rax, qword [0x04002349] 	      1507	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	IF_45	IF_46	CALL_22
0x2309	    0x48398508ffff	            cmp qword [rbp - 0xf8], rax 	      1507	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	IF_45	IF_46	CALL_22
0x2310	           0xf94c0	                                 sete al	      1507	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	IF_45	IF_46	CALL_22
0x2313	           0xfb6c8	                           movzx ecx, al	      1507	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	IF_45	IF_46	CALL_22
0x2316	    0x8b952cffffff	             mov edx, dword [rbp - 0xd4]	      1507	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	IF_45	IF_46	CALL_22
0x231c	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1507	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	IF_45	IF_46	CALL_22
0x2323	    0x41b900000000	                              mov r9d, 0	      1507	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	IF_45	IF_46	CALL_22
0x2329	          0x4189c8	                            mov r8d, ecx	      1507	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	IF_45	IF_46	CALL_22
0x232c	      0xb900000000	                              mov ecx, 0	      1507	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	IF_45	IF_46	CALL_22
0x2331	      0xbe00000000	                              mov esi, 0	      1507	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	IF_45	IF_46	CALL_22
0x2336	          0x4889c7	                            mov rdi, rax	      1507	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	IF_45	IF_46	CALL_22
0x2339	      0xe800000000	                          call 0x400237e	      1507	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	IF_45	IF_46	CALL_22
0x233e	          0x83f801	                              cmp eax, 1	      1507	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	IF_45	IF_46	CALL_22
0x2341	            0x751b	                           jne 0x400239e	      1507	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	IF_45	IF_46	CALL_22
0x2343	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1509	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	IF_45	IF_46
0x234a	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1509	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	IF_45	IF_46
0x2350	    0x2b852cffffff	             sub eax, dword [rbp - 0xd4]	      1509	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	IF_45	IF_46
0x2356	    0x898520ffffff	             mov dword [rbp - 0xe0], eax	      1509	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	IF_45	IF_46
0x235c	            0xeb0a	                           jmp 0x40023a8	      1509	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	IF_45	IF_46
0x235e	    0xc78518ffffff	               mov dword [rbp - 0xe8], 0	      1511	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	IF_45	ELSE_15
0x2368	    0x83bd2cffffff	               cmp dword [rbp - 0xd4], 0	      1513	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47
0x236f	            0x7410	                            je 0x40023c1	      1513	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47
0x2371	    0x81bd20ffffff	          cmp dword [rbp - 0xe0], 0x3e6 	      1513	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47
0x237b	     0xf8fc6010000	                            jg 0x4002587	      1513	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47
0x2381	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1513	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47
0x2388	    0x8b80f8000000	            mov eax, dword [rax + 0xf8] 	      1513	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47
0x238e	            0x85c0	                           test eax, eax	      1513	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47
0x2390	     0xf84b1010000	                            je 0x4002587	      1513	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47
0x2396	    0xc78520ffffff	               mov dword [rbp - 0xe0], 0	      1521	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47
0x23a0	    0xc78530ffffff	               mov dword [rbp - 0xd0], 0	      1522	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47
0x23aa	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1525	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6
0x23b1	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      1525	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6
0x23b8	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      1525	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6
0x23be	          0x4863d0	                         movsxd rdx, eax	      1525	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6
0x23c1	          0x4889d0	                            mov rax, rdx	      1525	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6
0x23c4	          0x4801c0	                            add rax, rax	      1525	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6
0x23c7	          0x4801d0	                            add rax, rdx	      1525	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6
0x23ca	        0x48c1e003	                              shl rax, 3	      1525	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6
0x23ce	        0x488d1401	                    lea rdx, [rcx + rax]	      1525	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6
0x23d2	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1525	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6
0x23d9	    0x488bb0000100	           mov rsi, qword [rax + 0x100] 	      1525	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6
0x23e0	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	      1525	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6
0x23e4	          0x4889c8	                            mov rax, rcx	      1525	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6
0x23e7	          0x4801c0	                            add rax, rax	      1525	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6
0x23ea	          0x4801c8	                            add rax, rcx	      1525	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6
0x23ed	        0x48c1e003	                              shl rax, 3	      1525	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6
0x23f1	          0x4801f0	                            add rax, rsi	      1525	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6
0x23f4	          0x488b08	                    mov rcx, qword [rax]	      1525	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6
0x23f7	          0x48890a	                    mov qword [rdx], rcx	      1525	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6
0x23fa	        0x488b4808	                mov rcx, qword [rax + 8]	      1525	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6
0x23fe	        0x48894a08	                mov qword [rdx + 8], rcx	      1525	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6
0x2402	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1525	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6
0x2406	        0x48894210	             mov qword [rdx + 0x10], rax	      1525	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6
0x240a	    0x83bd2cffffff	               cmp dword [rbp - 0xd4], 0	      1528	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6	IF_48
0x2411	            0x7e64	                           jle 0x40024b7	      1528	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6	IF_48
0x2413	    0x8b9520ffffff	             mov edx, dword [rbp - 0xe0]	      1528	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6	IF_48
0x2419	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	      1528	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6	IF_48
0x241f	          0x8d3402	                    lea esi, [rdx + rax]	      1528	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6	IF_48
0x2422	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1529	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6	IF_48
0x2429	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      1529	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6	IF_48
0x2430	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      1529	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6	IF_48
0x2434	          0x4889d0	                            mov rax, rdx	      1529	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6	IF_48
0x2437	          0x4801c0	                            add rax, rax	      1529	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6	IF_48
0x243a	          0x4801d0	                            add rax, rdx	      1529	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6	IF_48
0x243d	        0x48c1e003	                              shl rax, 3	      1529	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6	IF_48
0x2441	          0x4801c8	                            add rax, rcx	      1529	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6	IF_48
0x2444	         0xfb74008	               movzx eax, word [rax + 8]	      1529	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6	IF_48
0x2448	           0xfb7c0	                           movzx eax, ax	      1529	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6	IF_48
0x244b	          0x8d1406	                    lea edx, [rsi + rax]	      1529	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6	IF_48
0x244e	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1529	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6	IF_48
0x2455	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1529	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6	IF_48
0x245b	            0x39c2	                            cmp edx, eax	      1528	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6	IF_48
0x245d	            0x7e18	                           jle 0x40024b7	      1528	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6	IF_48
0x245f	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      1531	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6	IF_48
0x2465	          0x8d5001	                      lea edx, [rax + 1]	      1531	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6	IF_48
0x2468	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1531	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6	IF_48
0x246f	    0x8990f8000000	             mov dword [rax + 0xf8], edx	      1531	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6	IF_48
0x2475	            0xeb6e	                           jmp 0x4002525	      1532	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6	IF_48
0x2477	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1534	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6
0x247e	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      1534	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6
0x2485	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      1534	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6
0x248b	          0x8d5001	                      lea edx, [rax + 1]	      1534	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6
0x248e	    0x899530ffffff	             mov dword [rbp - 0xd0], edx	      1534	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6
0x2494	          0x4863d0	                         movsxd rdx, eax	      1534	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6
0x2497	          0x4889d0	                            mov rax, rdx	      1534	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6
0x249a	          0x4801c0	                            add rax, rax	      1534	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6
0x249d	          0x4801d0	                            add rax, rdx	      1534	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6
0x24a0	        0x48c1e003	                              shl rax, 3	      1534	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6
0x24a4	          0x4801c8	                            add rax, rcx	      1534	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6
0x24a7	         0xfb74008	               movzx eax, word [rax + 8]	      1534	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6
0x24ab	           0xfb7c0	                           movzx eax, ax	      1534	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6
0x24ae	     0x18520ffffff	             add dword [rbp - 0xe0], eax	      1534	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6
0x24b4	      0x4883459001	               add qword [rbp - 0x70], 1	      1537	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6	IF_49
0x24b9	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1537	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6	IF_49
0x24c0	    0x8b80f8000000	            mov eax, dword [rax + 0xf8] 	      1537	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6	IF_49
0x24c6	            0x4898	                                    cdqe	      1537	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6	IF_49
0x24c8	        0x48394590	            cmp qword [rbp - 0x70], rax 	      1537	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6	IF_49
0x24cc	     0xf8cd8feffff	                            jl 0x40023ea	      1537	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6	IF_49
0x24d2	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1539	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6	IF_49
0x24d9	    0x8b9530ffffff	             mov edx, dword [rbp - 0xd0]	      1539	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6	IF_49
0x24df	    0x8990f8000000	             mov dword [rax + 0xf8], edx	      1539	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	FOR_6	IF_49
0x24e5	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1546	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	IF_50
0x24ec	    0x8b80c0010000	           mov eax, dword [rax + 0x1c0] 	      1546	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	IF_50
0x24f2	            0x85c0	                           test eax, eax	      1546	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	IF_50
0x24f4	            0x7451	                            je 0x4002587	      1546	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	IF_50
0x24f6	    0x83bd20ffffff	               cmp dword [rbp - 0xe0], 0	      1546	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	IF_50
0x24fd	            0x7e48	                           jle 0x4002587	      1546	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	IF_50
0x24ff	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1547	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	IF_50
0x2506	    0x488b98000100	           mov rbx, qword [rax + 0x100] 	      1547	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	IF_50
0x250d	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1548	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	IF_50	CALL_23
0x2514	        0x488b4878	            mov rcx, qword [rax + 0x78] 	      1548	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	IF_50	CALL_23
0x2518	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1548	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	IF_50	CALL_23
0x251f	      0xba01000000	                              mov edx, 1	      1548	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	IF_50	CALL_23
0x2524	          0x4889ce	                            mov rsi, rcx	      1548	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	IF_50	CALL_23
0x2527	          0x4889c7	                            mov rdi, rax	      1548	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	IF_50	CALL_23
0x252a	      0xe800000000	                          call 0x400256f	      1548	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	IF_50	CALL_23
0x252f	            0x89c2	                            mov edx, eax	      1547	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	IF_50
0x2531	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1549	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	IF_50
0x2538	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      1549	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	IF_50
0x253e	             0x1d0	                            add eax, edx	      1547	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	IF_50
0x2540	        0x66894308	                  mov word [rbx + 8], ax	      1547	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	IF_50
0x2544	            0xeb01	                           jmp 0x4002587	      1547	screen.c	FUNCTION_20	IF_30	ELSE_12	ELSE_13	ELSE_15	IF_47	IF_50
0x2546	              0x90	                                     nop	      1415	screen.c	FUNCTION_20	IF_30	ELSE_7	IF_32	ELSE_8	IF_35
0x2547	    0x83bd18ffffff	               cmp dword [rbp - 0xe8], 0	      1558	screen.c	FUNCTION_20	IF_30	IF_51
0x254e	            0x7545	                           jne 0x40025d5	      1558	screen.c	FUNCTION_20	IF_30	IF_51
0x2550	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1560	screen.c	FUNCTION_20	IF_30	IF_51
0x2557	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1560	screen.c	FUNCTION_20	IF_30	IF_51
0x255d	    0x89851cffffff	             mov dword [rbp - 0xe4], eax	      1560	screen.c	FUNCTION_20	IF_30	IF_51
0x2563	    0x488b15000000	            mov rdx, qword [0x040025aa] 	      1561	screen.c	FUNCTION_20	IF_30	IF_51	IF_52
0x256a	    0x488b05000000	            mov rax, qword [0x040025b1] 	      1561	screen.c	FUNCTION_20	IF_30	IF_51	IF_52
0x2571	          0x4839c2	                            cmp rdx, rax	      1561	screen.c	FUNCTION_20	IF_30	IF_51	IF_52
0x2574	            0x751f	                           jne 0x40025d5	      1561	screen.c	FUNCTION_20	IF_30	IF_51	IF_52
0x2576	    0x8b0500000000	            mov eax, dword [0x040025bc] 	      1566	screen.c	FUNCTION_20	IF_30	IF_51	IF_52	IF_53
0x257c	          0x83f801	                              cmp eax, 1	      1566	screen.c	FUNCTION_20	IF_30	IF_51	IF_52	IF_53
0x257f	            0x7405	                            je 0x40025c6	      1566	screen.c	FUNCTION_20	IF_30	IF_51	IF_52	IF_53
0x2581	      0xe800000000	                          call 0x40025c6	      1567	screen.c	FUNCTION_20	IF_30	IF_51	IF_52	CALL_24
0x2586	    0x8b0500000000	            mov eax, dword [0x040025cc] 	      1569	screen.c	FUNCTION_20	IF_30	IF_51	IF_52	IF_54
0x258c	            0x85c0	                           test eax, eax	      1569	screen.c	FUNCTION_20	IF_30	IF_51	IF_52	IF_54
0x258e	            0x7405	                            je 0x40025d5	      1569	screen.c	FUNCTION_20	IF_30	IF_51	IF_52	IF_54
0x2590	      0xe8b71f0100	                   call sym.draw_tabline	      1570	screen.c	FUNCTION_20	IF_30	IF_51	IF_52	CALL_25
0x2595	    0x8b0500000000	            mov eax, dword [0x040025db] 	      1578	screen.c	FUNCTION_20	IF_30	IF_55
0x259b	          0x83f801	                              cmp eax, 1	      1578	screen.c	FUNCTION_20	IF_30	IF_55
0x259e	            0x7529	                           jne 0x4002609	      1578	screen.c	FUNCTION_20	IF_30	IF_55
0x25a0	    0xc70500000000	               mov dword [0x040025ea], 0	      1579	screen.c	FUNCTION_20	IF_30	IF_55
0x25aa	            0xeb1d	                           jmp 0x4002609	      1578	screen.c	FUNCTION_20	IF_30	IF_55
0x25ac	    0xc78518ffffff	               mov dword [rbp - 0xe8], 0	      1584	screen.c	FUNCTION_20	ELSE_16
0x25b6	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1585	screen.c	FUNCTION_20	ELSE_16
0x25bd	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1585	screen.c	FUNCTION_20	ELSE_16
0x25c3	    0x89851cffffff	             mov dword [rbp - 0xe4], eax	      1585	screen.c	FUNCTION_20	ELSE_16
0x25c9	    0x83bd10ffffff	           cmp dword [rbp - 0xf0], 0x23 	      1588	screen.c	FUNCTION_20	IF_56
0x25d0	            0x7527	                           jne 0x4002639	      1588	screen.c	FUNCTION_20	IF_56
0x25d2	    0xc78518ffffff	               mov dword [rbp - 0xe8], 0	      1591	screen.c	FUNCTION_20	IF_56
0x25dc	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1592	screen.c	FUNCTION_20	IF_56
0x25e3	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1592	screen.c	FUNCTION_20	IF_56
0x25e9	    0x89851cffffff	             mov dword [rbp - 0xe4], eax	      1592	screen.c	FUNCTION_20	IF_56
0x25ef	    0xc78510ffffff	           mov dword [rbp - 0xf0], 0x28 	      1593	screen.c	FUNCTION_20	IF_56
0x25f9	    0x8b0500000000	            mov eax, dword [0x0400263f] 	      1597	screen.c	FUNCTION_20	IF_57
0x25ff	            0x85c0	                           test eax, eax	      1597	screen.c	FUNCTION_20	IF_57
0x2601	            0x7411	                            je 0x4002654	      1597	screen.c	FUNCTION_20	IF_57
0x2603	    0x488b05000000	            mov rax, qword [0x0400264a] 	      1597	screen.c	FUNCTION_20	IF_57
0x260a	        0x488b4008	                mov rax, qword [rax + 8]	      1597	screen.c	FUNCTION_20	IF_57
0x260e	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      1597	screen.c	FUNCTION_20	IF_57
0x2612	            0x7421	                            je 0x4002675	      1597	screen.c	FUNCTION_20	IF_57
0x2614	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1598	screen.c	FUNCTION_20	IF_57
0x261b	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1598	screen.c	FUNCTION_20	IF_57
0x261f	          0x4885c0	                           test rax, rax	      1598	screen.c	FUNCTION_20	IF_57
0x2622	     0xf84b0060000	                            je 0x4002d18	      1598	screen.c	FUNCTION_20	IF_57
0x2628	    0x83bd10ffffff	           cmp dword [rbp - 0xf0], 0x28 	      1598	screen.c	FUNCTION_20	IF_57
0x262f	     0xf84a3060000	                            je 0x4002d18	      1598	screen.c	FUNCTION_20	IF_57
0x2635	    0x8b0500000000	            mov eax, dword [0x0400267b] 	      1602	screen.c	FUNCTION_20	IF_57	IF_58
0x263b	            0x85c0	                           test eax, eax	      1602	screen.c	FUNCTION_20	IF_57	IF_58
0x263d	     0xf842a030000	                            je 0x40029ad	      1602	screen.c	FUNCTION_20	IF_57	IF_58
0x2643	    0x8b0500000000	            mov eax, dword [0x04002689] 	      1604	screen.c	FUNCTION_20	IF_57	IF_58	IF_59
0x2649	            0x85c0	                           test eax, eax	      1604	screen.c	FUNCTION_20	IF_57	IF_58	IF_59
0x264b	     0xf84fb000000	                            je 0x400278c	      1604	screen.c	FUNCTION_20	IF_57	IF_58	IF_59
0x2651	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1605	screen.c	FUNCTION_20	IF_57	IF_58	IF_59
0x2658	         0xfb64050	           movzx eax, byte [rax + 0x50] 	      1605	screen.c	FUNCTION_20	IF_57	IF_58	IF_59
0x265c	           0xfbed0	                           movsx edx, al	      1605	screen.c	FUNCTION_20	IF_57	IF_58	IF_59
0x265f	    0x8b0500000000	            mov eax, dword [0x040026a5] 	      1605	screen.c	FUNCTION_20	IF_57	IF_58	IF_59
0x2665	            0x39c2	                            cmp edx, eax	      1605	screen.c	FUNCTION_20	IF_57	IF_58	IF_59
0x2667	            0x750d	                           jne 0x40026b6	      1605	screen.c	FUNCTION_20	IF_57	IF_58	IF_59
0x2669	    0x83bd10ffffff	           cmp dword [rbp - 0xf0], 0x19 	      1606	screen.c	FUNCTION_20	IF_57	IF_58	IF_59
0x2670	     0xf85d6000000	                           jne 0x400278c	      1606	screen.c	FUNCTION_20	IF_57	IF_58	IF_59
0x2676	    0x488b05000000	            mov rax, qword [0x040026bd] 	      1613	screen.c	FUNCTION_20	IF_57	IF_58	IF_59	IF_60
0x267d	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      1613	screen.c	FUNCTION_20	IF_57	IF_58	IF_59	IF_60
0x2681	    0x488b05000000	            mov rax, qword [0x040026c8] 	      1613	screen.c	FUNCTION_20	IF_57	IF_58	IF_59	IF_60
0x2688	          0x4839c2	                            cmp rdx, rax	      1613	screen.c	FUNCTION_20	IF_57	IF_58	IF_59	IF_60
0x268b	            0x7d1c	                           jge 0x40026e9	      1613	screen.c	FUNCTION_20	IF_57	IF_58	IF_59	IF_60
0x268d	    0x488b05000000	            mov rax, qword [0x040026d4] 	      1615	screen.c	FUNCTION_20	IF_57	IF_58	IF_59	IF_60
0x2694	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1615	screen.c	FUNCTION_20	IF_57	IF_58	IF_59	IF_60
0x2698	        0x488945b8	             mov qword [rbp - 0x48], rax	      1615	screen.c	FUNCTION_20	IF_57	IF_58	IF_59	IF_60
0x269c	    0x488b05000000	            mov rax, qword [0x040026e3] 	      1616	screen.c	FUNCTION_20	IF_57	IF_58	IF_59	IF_60
0x26a3	        0x488945c0	             mov qword [rbp - 0x40], rax	      1616	screen.c	FUNCTION_20	IF_57	IF_58	IF_59	IF_60
0x26a7	            0xeb1a	                           jmp 0x4002703	      1616	screen.c	FUNCTION_20	IF_57	IF_58	IF_59	IF_60
0x26a9	    0x488b05000000	            mov rax, qword [0x040026f0] 	      1620	screen.c	FUNCTION_20	IF_57	IF_58	IF_59	ELSE_17
0x26b0	        0x488945b8	             mov qword [rbp - 0x48], rax	      1620	screen.c	FUNCTION_20	IF_57	IF_58	IF_59	ELSE_17
0x26b4	    0x488b05000000	            mov rax, qword [0x040026fb] 	      1621	screen.c	FUNCTION_20	IF_57	IF_58	IF_59	ELSE_17
0x26bb	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1621	screen.c	FUNCTION_20	IF_57	IF_58	IF_59	ELSE_17
0x26bf	        0x488945c0	             mov qword [rbp - 0x40], rax	      1621	screen.c	FUNCTION_20	IF_57	IF_58	IF_59	ELSE_17
0x26c3	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1624	screen.c	FUNCTION_20	IF_57	IF_58	IF_59	IF_61
0x26ca	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1624	screen.c	FUNCTION_20	IF_57	IF_58	IF_59	IF_61
0x26ce	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	      1624	screen.c	FUNCTION_20	IF_57	IF_58	IF_59	IF_61
0x26d2	            0x7d0f	                           jge 0x4002723	      1624	screen.c	FUNCTION_20	IF_57	IF_58	IF_59	IF_61
0x26d4	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1625	screen.c	FUNCTION_20	IF_57	IF_58	IF_59	IF_61
0x26db	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1625	screen.c	FUNCTION_20	IF_57	IF_58	IF_59	IF_61
0x26df	        0x488945b8	             mov qword [rbp - 0x48], rax	      1625	screen.c	FUNCTION_20	IF_57	IF_58	IF_59	IF_61
0x26e3	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1626	screen.c	FUNCTION_20	IF_57	IF_58	IF_59	IF_62
0x26ea	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1626	screen.c	FUNCTION_20	IF_57	IF_58	IF_59	IF_62
0x26ee	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      1626	screen.c	FUNCTION_20	IF_57	IF_58	IF_59	IF_62
0x26f2	            0x7e0f	                           jle 0x4002743	      1626	screen.c	FUNCTION_20	IF_57	IF_58	IF_59	IF_62
0x26f4	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1627	screen.c	FUNCTION_20	IF_57	IF_58	IF_59	IF_62
0x26fb	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1627	screen.c	FUNCTION_20	IF_57	IF_58	IF_59	IF_62
0x26ff	        0x488945c0	             mov qword [rbp - 0x40], rax	      1627	screen.c	FUNCTION_20	IF_57	IF_58	IF_59	IF_62
0x2703	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1628	screen.c	FUNCTION_20	IF_57	IF_58	IF_59	IF_63
0x270a	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1628	screen.c	FUNCTION_20	IF_57	IF_58	IF_59	IF_63
0x270e	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	      1628	screen.c	FUNCTION_20	IF_57	IF_58	IF_59	IF_63
0x2712	            0x7d0f	                           jge 0x4002763	      1628	screen.c	FUNCTION_20	IF_57	IF_58	IF_59	IF_63
0x2714	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1629	screen.c	FUNCTION_20	IF_57	IF_58	IF_59	IF_63
0x271b	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1629	screen.c	FUNCTION_20	IF_57	IF_58	IF_59	IF_63
0x271f	        0x488945b8	             mov qword [rbp - 0x48], rax	      1629	screen.c	FUNCTION_20	IF_57	IF_58	IF_59	IF_63
0x2723	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1630	screen.c	FUNCTION_20	IF_57	IF_58	IF_59	IF_64
0x272a	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1630	screen.c	FUNCTION_20	IF_57	IF_58	IF_59	IF_64
0x272e	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      1630	screen.c	FUNCTION_20	IF_57	IF_58	IF_59	IF_64
0x2732	     0xf8e2b010000	                           jle 0x40028a3	      1630	screen.c	FUNCTION_20	IF_57	IF_58	IF_59	IF_64
0x2738	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1631	screen.c	FUNCTION_20	IF_57	IF_58	IF_59	IF_64
0x273f	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1631	screen.c	FUNCTION_20	IF_57	IF_58	IF_59	IF_64
0x2743	        0x488945c0	             mov qword [rbp - 0x40], rax	      1631	screen.c	FUNCTION_20	IF_57	IF_58	IF_59	IF_64
0x2747	      0xe917010000	                           jmp 0x40028a3	      1630	screen.c	FUNCTION_20	IF_57	IF_58	IF_59	IF_64
0x274c	    0x488b05000000	            mov rax, qword [0x04002793] 	      1640	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_65
0x2753	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      1640	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_65
0x2757	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1640	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_65
0x275e	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1640	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_65
0x2762	          0x4839c2	                            cmp rdx, rax	      1640	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_65
0x2765	            0x7d20	                           jge 0x40027c7	      1640	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_65
0x2767	    0x488b05000000	            mov rax, qword [0x040027ae] 	      1642	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_65
0x276e	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1642	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_65
0x2772	        0x488945b8	             mov qword [rbp - 0x48], rax	      1642	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_65
0x2776	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1643	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_65
0x277d	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1643	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_65
0x2781	        0x488945c0	             mov qword [rbp - 0x40], rax	      1643	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_65
0x2785	            0xeb2d	                           jmp 0x40027f4	      1643	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_65
0x2787	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1647	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	ELSE_19
0x278e	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1647	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	ELSE_19
0x2792	        0x488945b8	             mov qword [rbp - 0x48], rax	      1647	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	ELSE_19
0x2796	    0x488b05000000	            mov rax, qword [0x040027dd] 	      1648	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	ELSE_19
0x279d	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1648	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	ELSE_19
0x27a1	        0x488945c0	             mov qword [rbp - 0x40], rax	      1648	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	ELSE_19
0x27a5	      0x48837db800	               cmp qword [rbp - 0x48], 0	      1649	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	ELSE_19	IF_66
0x27aa	            0x7508	                           jne 0x40027f4	      1649	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	ELSE_19	IF_66
0x27ac	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1650	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	ELSE_19	IF_66
0x27b0	        0x488945b8	             mov qword [rbp - 0x48], rax	      1650	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	ELSE_19	IF_66
0x27b4	    0x488b15000000	            mov rdx, qword [0x040027fb] 	      1653	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_67
0x27bb	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1653	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_67
0x27c2	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1653	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_67
0x27c6	          0x4839c2	                            cmp rdx, rax	      1653	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_67
0x27c9	            0x7518	                           jne 0x4002823	      1653	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_67
0x27cb	    0x8b1500000000	            mov edx, dword [0x04002811] 	      1654	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_67
0x27d1	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1654	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_67
0x27d8	          0x8b4070	            mov eax, dword [rax + 0x70] 	      1654	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_67
0x27db	            0x39c2	                            cmp edx, eax	      1654	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_67
0x27dd	     0xf8480000000	                            je 0x40028a3	      1654	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_67
0x27e3	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1656	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_67	IF_68
0x27ea	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1656	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_67	IF_68
0x27ee	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	      1656	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_67	IF_68
0x27f2	            0x7d1f	                           jge 0x4002853	      1656	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_67	IF_68
0x27f4	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1657	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_67	IF_68
0x27fb	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1657	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_67	IF_68
0x27ff	          0x4885c0	                           test rax, rax	      1657	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_67	IF_68
0x2802	            0x740f	                            je 0x4002853	      1657	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_67	IF_68
0x2804	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1658	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_67	IF_68
0x280b	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1658	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_67	IF_68
0x280f	        0x488945b8	             mov qword [rbp - 0x48], rax	      1658	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_67	IF_68
0x2813	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1659	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_67	IF_69
0x281a	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1659	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_67	IF_69
0x281e	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      1659	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_67	IF_69
0x2822	            0x7e0f	                           jle 0x4002873	      1659	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_67	IF_69
0x2824	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1660	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_67	IF_69
0x282b	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1660	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_67	IF_69
0x282f	        0x488945c0	             mov qword [rbp - 0x40], rax	      1660	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_67	IF_69
0x2833	    0x488b05000000	            mov rax, qword [0x0400287a] 	      1661	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_67	IF_70
0x283a	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	      1661	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_67	IF_70
0x283e	            0x7d0b	                           jge 0x400288b	      1661	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_67	IF_70
0x2840	    0x488b05000000	            mov rax, qword [0x04002887] 	      1662	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_67	IF_70
0x2847	        0x488945b8	             mov qword [rbp - 0x48], rax	      1662	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_67	IF_70
0x284b	    0x488b05000000	            mov rax, qword [0x04002892] 	      1663	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_67	IF_71
0x2852	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      1663	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_67	IF_71
0x2856	            0x7e0b	                           jle 0x40028a3	      1663	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_67	IF_71
0x2858	    0x488b05000000	            mov rax, qword [0x0400289f] 	      1664	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_67	IF_71
0x285f	        0x488945c0	             mov qword [rbp - 0x40], rax	      1664	screen.c	FUNCTION_20	IF_57	IF_58	ELSE_18	IF_67	IF_71
0x2863	    0x8b0500000000	            mov eax, dword [0x040028a9] 	      1673	screen.c	FUNCTION_20	IF_57	IF_58	IF_72
0x2869	          0x83f816	                           cmp eax, 0x16	      1673	screen.c	FUNCTION_20	IF_57	IF_58	IF_72
0x286c	     0xf8554010000	                           jne 0x4002a06	      1673	screen.c	FUNCTION_20	IF_57	IF_58	IF_72
0x2872	    0x8b0500000000	            mov eax, dword [0x040028b8] 	      1677	screen.c	FUNCTION_20	IF_57	IF_58	IF_72
0x2878	    0x898558ffffff	             mov dword [rbp - 0xa8], eax	      1677	screen.c	FUNCTION_20	IF_57	IF_58	IF_72
0x287e	    0x488b05000000	            mov rax, qword [0x040028c5] 	      1679	screen.c	FUNCTION_20	IF_57	IF_58	IF_72	IF_73
0x2885	    0x8b8030020000	           mov eax, dword [rax + 0x230] 	      1679	screen.c	FUNCTION_20	IF_57	IF_58	IF_72	IF_73
0x288b	            0x85c0	                           test eax, eax	      1679	screen.c	FUNCTION_20	IF_57	IF_58	IF_72	IF_73
0x288d	            0x740a	                            je 0x40028d9	      1679	screen.c	FUNCTION_20	IF_57	IF_58	IF_72	IF_73
0x288f	    0xc70500000000	               mov dword [0x040028d9], 4	      1680	screen.c	FUNCTION_20	IF_57	IF_58	IF_72	IF_73
0x2899	    0x488b05000000	            mov rax, qword [0x040028e0] 	      1682	screen.c	FUNCTION_20	IF_57	IF_58	IF_72	CALL_26
0x28a0	        0x488d7038	                   lea rsi, [rax + 0x38]	      1682	screen.c	FUNCTION_20	IF_57	IF_58	IF_72	CALL_26
0x28a4	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	      1682	screen.c	FUNCTION_20	IF_57	IF_58	IF_72	CALL_26
0x28a8	    0x488d9578ffff	                   lea rdx, [rbp - 0x88]	      1682	screen.c	FUNCTION_20	IF_57	IF_58	IF_72	CALL_26
0x28af	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1682	screen.c	FUNCTION_20	IF_57	IF_58	IF_72	CALL_26
0x28b6	          0x4989c8	                             mov r8, rcx	      1682	screen.c	FUNCTION_20	IF_57	IF_58	IF_72	CALL_26
0x28b9	          0x4889d1	                            mov rcx, rdx	      1682	screen.c	FUNCTION_20	IF_57	IF_58	IF_72	CALL_26
0x28bc	          0x4889f2	                            mov rdx, rsi	      1682	screen.c	FUNCTION_20	IF_57	IF_58	IF_72	CALL_26
0x28bf	      0xbe00000000	                              mov esi, 0	      1682	screen.c	FUNCTION_20	IF_57	IF_58	IF_72	CALL_26
0x28c4	          0x4889c7	                            mov rdi, rax	      1682	screen.c	FUNCTION_20	IF_57	IF_58	IF_72	CALL_26
0x28c7	      0xe800000000	                          call 0x400290c	      1682	screen.c	FUNCTION_20	IF_57	IF_58	IF_72	CALL_26
0x28cc	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	      1684	screen.c	FUNCTION_20	IF_57	IF_58	IF_72
0x28d2	    0x890500000000	            mov dword [0x04002918], eax 	      1684	screen.c	FUNCTION_20	IF_57	IF_58	IF_72
0x28d8	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1686	screen.c	FUNCTION_20	IF_57	IF_58	IF_72
0x28db	          0x83c001	                              add eax, 1	      1686	screen.c	FUNCTION_20	IF_57	IF_58	IF_72
0x28de	          0x8945d0	             mov dword [rbp - 0x30], eax	      1686	screen.c	FUNCTION_20	IF_57	IF_58	IF_72
0x28e1	    0x488b05000000	            mov rax, qword [0x04002928] 	      1687	screen.c	FUNCTION_20	IF_57	IF_58	IF_72	IF_74
0x28e8	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1687	screen.c	FUNCTION_20	IF_57	IF_58	IF_72	IF_74
0x28eb	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      1687	screen.c	FUNCTION_20	IF_57	IF_58	IF_72	IF_74
0x28f0	            0x7507	                           jne 0x4002939	      1687	screen.c	FUNCTION_20	IF_57	IF_58	IF_72	IF_74
0x28f2	    0xc745d0ffffff	      mov dword [rbp - 0x30], 0x7fffffff	      1688	screen.c	FUNCTION_20	IF_57	IF_58	IF_72	IF_74
0x28f9	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1690	screen.c	FUNCTION_20	IF_57	IF_58	IF_72	IF_75
0x2900	          0x8b5060	            mov edx, dword [rax + 0x60] 	      1690	screen.c	FUNCTION_20	IF_57	IF_58	IF_72	IF_75
0x2903	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      1690	screen.c	FUNCTION_20	IF_57	IF_58	IF_72	IF_75
0x2909	            0x39c2	                            cmp edx, eax	      1690	screen.c	FUNCTION_20	IF_57	IF_58	IF_72	IF_75
0x290b	            0x7511	                           jne 0x400295e	      1690	screen.c	FUNCTION_20	IF_57	IF_58	IF_72	IF_75
0x290d	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1691	screen.c	FUNCTION_20	IF_57	IF_58	IF_72	IF_75
0x2914	          0x8b5064	            mov edx, dword [rax + 0x64] 	      1691	screen.c	FUNCTION_20	IF_57	IF_58	IF_72	IF_75
0x2917	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1691	screen.c	FUNCTION_20	IF_57	IF_58	IF_72	IF_75
0x291a	            0x39c2	                            cmp edx, eax	      1691	screen.c	FUNCTION_20	IF_57	IF_58	IF_72	IF_75
0x291c	            0x7430	                            je 0x400298e	      1691	screen.c	FUNCTION_20	IF_57	IF_58	IF_72	IF_75
0x291e	    0x488b05000000	            mov rax, qword [0x04002965] 	      1693	screen.c	FUNCTION_20	IF_57	IF_58	IF_72	IF_75	IF_76
0x2925	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	      1693	screen.c	FUNCTION_20	IF_57	IF_58	IF_72	IF_75	IF_76
0x2929	            0x7d0b	                           jge 0x4002976	      1693	screen.c	FUNCTION_20	IF_57	IF_58	IF_72	IF_75	IF_76
0x292b	    0x488b05000000	            mov rax, qword [0x04002972] 	      1694	screen.c	FUNCTION_20	IF_57	IF_58	IF_72	IF_75	IF_76
0x2932	        0x488945b8	             mov qword [rbp - 0x48], rax	      1694	screen.c	FUNCTION_20	IF_57	IF_58	IF_72	IF_75	IF_76
0x2936	    0x488b05000000	            mov rax, qword [0x0400297d] 	      1695	screen.c	FUNCTION_20	IF_57	IF_58	IF_72	IF_75	IF_77
0x293d	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      1695	screen.c	FUNCTION_20	IF_57	IF_58	IF_72	IF_75	IF_77
0x2941	            0x7e0b	                           jle 0x400298e	      1695	screen.c	FUNCTION_20	IF_57	IF_58	IF_72	IF_75	IF_77
0x2943	    0x488b05000000	            mov rax, qword [0x0400298a] 	      1696	screen.c	FUNCTION_20	IF_57	IF_58	IF_72	IF_75	IF_77
0x294a	        0x488945c0	             mov qword [rbp - 0x40], rax	      1696	screen.c	FUNCTION_20	IF_57	IF_58	IF_72	IF_75	IF_77
0x294e	    0x8b9578ffffff	             mov edx, dword [rbp - 0x88]	      1698	screen.c	FUNCTION_20	IF_57	IF_58	IF_72
0x2954	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1698	screen.c	FUNCTION_20	IF_57	IF_58	IF_72
0x295b	          0x895060	             mov dword [rax + 0x60], edx	      1698	screen.c	FUNCTION_20	IF_57	IF_58	IF_72
0x295e	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      1699	screen.c	FUNCTION_20	IF_57	IF_58	IF_72
0x2961	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1699	screen.c	FUNCTION_20	IF_57	IF_58	IF_72
0x2968	          0x895064	             mov dword [rax + 0x64], edx	      1699	screen.c	FUNCTION_20	IF_57	IF_58	IF_72
0x296b	            0xeb59	                           jmp 0x4002a06	      1699	screen.c	FUNCTION_20	IF_57	IF_58	IF_72
0x296d	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1705	screen.c	FUNCTION_20	IF_57	ELSE_20	IF_78
0x2974	        0x488b5058	            mov rdx, qword [rax + 0x58] 	      1705	screen.c	FUNCTION_20	IF_57	ELSE_20	IF_78
0x2978	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1705	screen.c	FUNCTION_20	IF_57	ELSE_20	IF_78
0x297f	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1705	screen.c	FUNCTION_20	IF_57	ELSE_20	IF_78
0x2983	          0x4839c2	                            cmp rdx, rax	      1705	screen.c	FUNCTION_20	IF_57	ELSE_20	IF_78
0x2986	            0x7d20	                           jge 0x40029e8	      1705	screen.c	FUNCTION_20	IF_57	ELSE_20	IF_78
0x2988	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1707	screen.c	FUNCTION_20	IF_57	ELSE_20	IF_78
0x298f	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1707	screen.c	FUNCTION_20	IF_57	ELSE_20	IF_78
0x2993	        0x488945b8	             mov qword [rbp - 0x48], rax	      1707	screen.c	FUNCTION_20	IF_57	ELSE_20	IF_78
0x2997	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1708	screen.c	FUNCTION_20	IF_57	ELSE_20	IF_78
0x299e	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1708	screen.c	FUNCTION_20	IF_57	ELSE_20	IF_78
0x29a2	        0x488945c0	             mov qword [rbp - 0x40], rax	      1708	screen.c	FUNCTION_20	IF_57	ELSE_20	IF_78
0x29a6	            0xeb1e	                           jmp 0x4002a06	      1708	screen.c	FUNCTION_20	IF_57	ELSE_20	IF_78
0x29a8	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1712	screen.c	FUNCTION_20	IF_57	ELSE_20	ELSE_21
0x29af	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1712	screen.c	FUNCTION_20	IF_57	ELSE_20	ELSE_21
0x29b3	        0x488945b8	             mov qword [rbp - 0x48], rax	      1712	screen.c	FUNCTION_20	IF_57	ELSE_20	ELSE_21
0x29b7	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1713	screen.c	FUNCTION_20	IF_57	ELSE_20	ELSE_21
0x29be	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1713	screen.c	FUNCTION_20	IF_57	ELSE_20	ELSE_21
0x29c2	        0x488945c0	             mov qword [rbp - 0x40], rax	      1713	screen.c	FUNCTION_20	IF_57	ELSE_20	ELSE_21
0x29c6	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1720	screen.c	FUNCTION_20	IF_57	IF_79
0x29cd	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1720	screen.c	FUNCTION_20	IF_57	IF_79
0x29d1	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	      1720	screen.c	FUNCTION_20	IF_57	IF_79
0x29d5	            0x7e0f	                           jle 0x4002a26	      1720	screen.c	FUNCTION_20	IF_57	IF_79
0x29d7	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1721	screen.c	FUNCTION_20	IF_57	IF_79
0x29de	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1721	screen.c	FUNCTION_20	IF_57	IF_79
0x29e2	        0x488945b8	             mov qword [rbp - 0x48], rax	      1721	screen.c	FUNCTION_20	IF_57	IF_79
0x29e6	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1727	screen.c	FUNCTION_20	IF_57	IF_80
0x29ed	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	      1727	screen.c	FUNCTION_20	IF_57	IF_80
0x29f3	          0x83e020	                           and eax, 0x20	      1727	screen.c	FUNCTION_20	IF_57	IF_80
0x29f6	            0x85c0	                           test eax, eax	      1727	screen.c	FUNCTION_20	IF_57	IF_80
0x29f8	            0x7454	                            je 0x4002a8e	      1727	screen.c	FUNCTION_20	IF_57	IF_80
0x29fa	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1729	screen.c	FUNCTION_20	IF_57	IF_80	IF_81
0x2a01	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      1729	screen.c	FUNCTION_20	IF_57	IF_80	IF_81
0x2a08	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	      1729	screen.c	FUNCTION_20	IF_57	IF_80	IF_81
0x2a0c	            0x7f16	                            jg 0x4002a64	      1729	screen.c	FUNCTION_20	IF_57	IF_80	IF_81
0x2a0e	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1730	screen.c	FUNCTION_20	IF_57	IF_80	IF_81
0x2a15	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      1730	screen.c	FUNCTION_20	IF_57	IF_80	IF_81
0x2a1c	        0x4883e801	                              sub rax, 1	      1730	screen.c	FUNCTION_20	IF_57	IF_80	IF_81
0x2a20	        0x488945b8	             mov qword [rbp - 0x48], rax	      1730	screen.c	FUNCTION_20	IF_57	IF_80	IF_81
0x2a24	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1731	screen.c	FUNCTION_20	IF_57	IF_80	IF_82
0x2a2b	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      1731	screen.c	FUNCTION_20	IF_57	IF_80	IF_82
0x2a32	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      1731	screen.c	FUNCTION_20	IF_57	IF_80	IF_82
0x2a36	            0x7f16	                            jg 0x4002a8e	      1731	screen.c	FUNCTION_20	IF_57	IF_80	IF_82
0x2a38	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1732	screen.c	FUNCTION_20	IF_57	IF_80	IF_82
0x2a3f	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      1732	screen.c	FUNCTION_20	IF_57	IF_80	IF_82
0x2a46	        0x4883e801	                              sub rax, 1	      1732	screen.c	FUNCTION_20	IF_57	IF_80	IF_82
0x2a4a	        0x488945c0	             mov qword [rbp - 0x40], rax	      1732	screen.c	FUNCTION_20	IF_57	IF_80	IF_82
0x2a4e	    0x83bd18ffffff	               cmp dword [rbp - 0xe8], 0	      1744	screen.c	FUNCTION_20	IF_57	IF_83
0x2a55	     0xf8e7d020000	                           jle 0x4002d18	      1744	screen.c	FUNCTION_20	IF_57	IF_83
0x2a5b	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1746	screen.c	FUNCTION_20	IF_57	IF_83
0x2a62	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1746	screen.c	FUNCTION_20	IF_57	IF_83
0x2a66	        0x48894588	             mov qword [rbp - 0x78], rax	      1746	screen.c	FUNCTION_20	IF_57	IF_83
0x2a6a	    0xc78530ffffff	               mov dword [rbp - 0xd0], 0	      1747	screen.c	FUNCTION_20	IF_57	IF_83
0x2a74	    0xc78534ffffff	               mov dword [rbp - 0xcc], 0	      1748	screen.c	FUNCTION_20	IF_57	IF_83
0x2a7e	    0x83bd24ffffff	               cmp dword [rbp - 0xdc], 0	      1749	screen.c	FUNCTION_20	IF_57	IF_83	IF_84
0x2a85	            0x7411	                            je 0x4002ad8	      1749	screen.c	FUNCTION_20	IF_57	IF_83	IF_84
0x2a87	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	      1750	screen.c	FUNCTION_20	IF_57	IF_83	IF_84
0x2a8d	    0x898518ffffff	             mov dword [rbp - 0xe8], eax	      1750	screen.c	FUNCTION_20	IF_57	IF_83	IF_84
0x2a93	      0xe931010000	                           jmp 0x4002c09	      1750	screen.c	FUNCTION_20	IF_57	IF_83	IF_84
0x2a98	    0xc78518ffffff	               mov dword [rbp - 0xe8], 0	      1752	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22
0x2aa2	      0xe922010000	                           jmp 0x4002c09	      1753	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3
0x2aa7	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1755	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_85
0x2aae	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      1755	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_85
0x2ab5	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      1755	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_85
0x2abb	          0x4863d0	                         movsxd rdx, eax	      1755	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_85
0x2abe	          0x4889d0	                            mov rax, rdx	      1755	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_85
0x2ac1	          0x4801c0	                            add rax, rax	      1755	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_85
0x2ac4	          0x4801d0	                            add rax, rdx	      1755	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_85
0x2ac7	        0x48c1e003	                              shl rax, 3	      1755	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_85
0x2acb	          0x4801c8	                            add rax, rcx	      1755	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_85
0x2ace	         0xfb6400a	            movzx eax, byte [rax + 0xa] 	      1755	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_85
0x2ad2	            0x84c0	                             test al, al	      1755	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_85
0x2ad4	            0x7436	                            je 0x4002b4c	      1755	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_85
0x2ad6	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1756	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_85
0x2add	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      1756	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_85
0x2ae4	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      1756	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_85
0x2aea	          0x4863d0	                         movsxd rdx, eax	      1756	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_85
0x2aed	          0x4889d0	                            mov rax, rdx	      1756	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_85
0x2af0	          0x4801c0	                            add rax, rax	      1756	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_85
0x2af3	          0x4801d0	                            add rax, rdx	      1756	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_85
0x2af6	        0x48c1e003	                              shl rax, 3	      1756	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_85
0x2afa	          0x4801c8	                            add rax, rcx	      1756	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_85
0x2afd	         0xfb74008	               movzx eax, word [rax + 8]	      1756	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_85
0x2b01	           0xfb7c0	                           movzx eax, ax	      1756	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_85
0x2b04	     0x18518ffffff	             add dword [rbp - 0xe8], eax	      1756	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_85
0x2b0a	            0xeb3d	                           jmp 0x4002b89	      1756	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_85
0x2b0c	    0x83bd24ffffff	               cmp dword [rbp - 0xdc], 0	      1757	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	ELSE_23	IF_86
0x2b13	            0x7534	                           jne 0x4002b89	      1757	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	ELSE_23	IF_86
0x2b15	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1758	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	ELSE_23	IF_86
0x2b1c	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      1758	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	ELSE_23	IF_86
0x2b23	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      1758	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	ELSE_23	IF_86
0x2b29	          0x4863d0	                         movsxd rdx, eax	      1758	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	ELSE_23	IF_86
0x2b2c	          0x4889d0	                            mov rax, rdx	      1758	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	ELSE_23	IF_86
0x2b2f	          0x4801c0	                            add rax, rax	      1758	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	ELSE_23	IF_86
0x2b32	          0x4801d0	                            add rax, rdx	      1758	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	ELSE_23	IF_86
0x2b35	        0x48c1e003	                              shl rax, 3	      1758	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	ELSE_23	IF_86
0x2b39	          0x4801c8	                            add rax, rcx	      1758	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	ELSE_23	IF_86
0x2b3c	         0xfb74008	               movzx eax, word [rax + 8]	      1758	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	ELSE_23	IF_86
0x2b40	           0xfb7c0	                           movzx eax, ax	      1758	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	ELSE_23	IF_86
0x2b43	     0x18534ffffff	             add dword [rbp - 0xcc], eax	      1758	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	ELSE_23	IF_86
0x2b49	    0x838530ffffff	               add dword [rbp - 0xd0], 1	      1759	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3
0x2b50	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1761	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_87
0x2b57	    0x8b80f8000000	            mov eax, dword [rax + 0xf8] 	      1761	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_87
0x2b5d	    0x3b8530ffffff	             cmp eax, dword [rbp - 0xd0]	      1761	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_87
0x2b63	            0x7e5f	                           jle 0x4002c04	      1761	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_87
0x2b65	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1761	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_87
0x2b6c	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      1761	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_87
0x2b73	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      1761	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_87
0x2b79	          0x4863d0	                         movsxd rdx, eax	      1761	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_87
0x2b7c	          0x4889d0	                            mov rax, rdx	      1761	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_87
0x2b7f	          0x4801c0	                            add rax, rax	      1761	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_87
0x2b82	          0x4801d0	                            add rax, rdx	      1761	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_87
0x2b85	        0x48c1e003	                              shl rax, 3	      1761	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_87
0x2b89	          0x4801c8	                            add rax, rcx	      1761	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_87
0x2b8c	         0xfb6400a	            movzx eax, byte [rax + 0xa] 	      1761	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_87
0x2b90	            0x84c0	                             test al, al	      1761	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_87
0x2b92	            0x7430	                            je 0x4002c04	      1761	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_87
0x2b94	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1762	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_87
0x2b9b	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      1762	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_87
0x2ba2	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      1762	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_87
0x2ba8	          0x4863d0	                         movsxd rdx, eax	      1762	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_87
0x2bab	          0x4889d0	                            mov rax, rdx	      1762	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_87
0x2bae	          0x4801c0	                            add rax, rax	      1762	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_87
0x2bb1	          0x4801d0	                            add rax, rdx	      1762	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_87
0x2bb4	        0x48c1e003	                              shl rax, 3	      1762	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_87
0x2bb8	          0x4801c8	                            add rax, rcx	      1762	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_87
0x2bbb	          0x488b00	                    mov rax, qword [rax]	      1762	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_87
0x2bbe	        0x48894588	             mov qword [rbp - 0x78], rax	      1762	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_87
0x2bc2	            0xeb05	                           jmp 0x4002c09	      1762	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	IF_87
0x2bc4	      0x4883458801	               add qword [rbp - 0x78], 1	      1765	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3	ELSE_24
0x2bc9	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1753	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3
0x2bcd	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	      1753	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3
0x2bd1	            0x7d19	                           jge 0x4002c2c	      1753	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3
0x2bd3	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1753	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3
0x2bda	    0x8b80f8000000	            mov eax, dword [rax + 0xf8] 	      1753	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3
0x2be0	    0x3b8530ffffff	             cmp eax, dword [rbp - 0xd0]	      1753	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3
0x2be6	     0xf8fbbfeffff	                            jg 0x4002ae7	      1753	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_22	WHILE_3
0x2bec	    0x8b8518ffffff	             mov eax, dword [rbp - 0xe8]	      1767	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24
0x2bf2	     0x18534ffffff	             add dword [rbp - 0xcc], eax	      1767	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24
0x2bf8	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1768	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24
0x2bff	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1768	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24
0x2c05	    0x89851cffffff	             mov dword [rbp - 0xe4], eax	      1768	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24
0x2c0b	      0xe9af000000	                           jmp 0x4002cff	      1769	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24	FOR_7
0x2c10	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1771	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24	FOR_7	IF_88
0x2c17	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      1771	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24	FOR_7	IF_88
0x2c1e	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      1771	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24	FOR_7	IF_88
0x2c24	          0x4863d0	                         movsxd rdx, eax	      1771	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24	FOR_7	IF_88
0x2c27	          0x4889d0	                            mov rax, rdx	      1771	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24	FOR_7	IF_88
0x2c2a	          0x4801c0	                            add rax, rax	      1771	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24	FOR_7	IF_88
0x2c2d	          0x4801d0	                            add rax, rdx	      1771	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24	FOR_7	IF_88
0x2c30	        0x48c1e003	                              shl rax, 3	      1771	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24	FOR_7	IF_88
0x2c34	          0x4801c8	                            add rax, rcx	      1771	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24	FOR_7	IF_88
0x2c37	         0xfb6400a	            movzx eax, byte [rax + 0xa] 	      1771	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24	FOR_7	IF_88
0x2c3b	            0x84c0	                             test al, al	      1771	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24	FOR_7	IF_88
0x2c3d	            0x7445	                            je 0x4002cc4	      1771	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24	FOR_7	IF_88
0x2c3f	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1772	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24	FOR_7	IF_88
0x2c46	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      1772	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24	FOR_7	IF_88
0x2c4d	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      1772	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24	FOR_7	IF_88
0x2c53	          0x4863d0	                         movsxd rdx, eax	      1772	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24	FOR_7	IF_88
0x2c56	          0x4889d0	                            mov rax, rdx	      1772	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24	FOR_7	IF_88
0x2c59	          0x4801c0	                            add rax, rax	      1772	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24	FOR_7	IF_88
0x2c5c	          0x4801d0	                            add rax, rdx	      1772	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24	FOR_7	IF_88
0x2c5f	        0x48c1e003	                              shl rax, 3	      1772	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24	FOR_7	IF_88
0x2c63	          0x4801c8	                            add rax, rcx	      1772	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24	FOR_7	IF_88
0x2c66	          0x488b00	                    mov rax, qword [rax]	      1772	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24	FOR_7	IF_88
0x2c69	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1772	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24	FOR_7	IF_88
0x2c6d	        0x4883c201	                              add rdx, 1	      1772	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24	FOR_7	IF_88
0x2c71	          0x4839d0	                            cmp rax, rdx	      1772	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24	FOR_7	IF_88
0x2c74	            0x7c0e	                            jl 0x4002cc4	      1772	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24	FOR_7	IF_88
0x2c76	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      1775	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24	FOR_7	IF_88
0x2c7c	    0x89851cffffff	             mov dword [rbp - 0xe4], eax	      1775	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24	FOR_7	IF_88
0x2c82	            0xeb54	                           jmp 0x4002d18	      1776	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24	FOR_7	IF_88
0x2c84	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1778	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24	FOR_7
0x2c8b	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      1778	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24	FOR_7
0x2c92	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      1778	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24	FOR_7
0x2c98	          0x4863d0	                         movsxd rdx, eax	      1778	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24	FOR_7
0x2c9b	          0x4889d0	                            mov rax, rdx	      1778	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24	FOR_7
0x2c9e	          0x4801c0	                            add rax, rax	      1778	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24	FOR_7
0x2ca1	          0x4801d0	                            add rax, rdx	      1778	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24	FOR_7
0x2ca4	        0x48c1e003	                              shl rax, 3	      1778	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24	FOR_7
0x2ca8	          0x4801c8	                            add rax, rcx	      1778	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24	FOR_7
0x2cab	         0xfb74008	               movzx eax, word [rax + 8]	      1778	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24	FOR_7
0x2caf	           0xfb7c0	                           movzx eax, ax	      1778	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24	FOR_7
0x2cb2	     0x18534ffffff	             add dword [rbp - 0xcc], eax	      1778	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24	FOR_7
0x2cb8	    0x838530ffffff	               add dword [rbp - 0xd0], 1	      1769	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24	FOR_7
0x2cbf	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1769	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24	FOR_7
0x2cc6	    0x8b80f8000000	            mov eax, dword [rax + 0xf8] 	      1769	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24	FOR_7
0x2ccc	    0x3b8530ffffff	             cmp eax, dword [rbp - 0xd0]	      1769	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24	FOR_7
0x2cd2	     0xf8f38ffffff	                            jg 0x4002c50	      1769	screen.c	FUNCTION_20	IF_57	IF_83	ELSE_24	FOR_7
0x2cd8	    0x8b0500000000	            mov eax, dword [0x04002d1e] 	      1783	screen.c	FUNCTION_20	IF_89
0x2cde	            0x85c0	                           test eax, eax	      1783	screen.c	FUNCTION_20	IF_89
0x2ce0	            0x7471	                            je 0x4002d93	      1783	screen.c	FUNCTION_20	IF_89
0x2ce2	    0x488b05000000	            mov rax, qword [0x04002d29] 	      1783	screen.c	FUNCTION_20	IF_89
0x2ce9	        0x488b4008	                mov rax, qword [rax + 8]	      1783	screen.c	FUNCTION_20	IF_89
0x2ced	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	      1783	screen.c	FUNCTION_20	IF_89
0x2cf1	            0x7560	                           jne 0x4002d93	      1783	screen.c	FUNCTION_20	IF_89
0x2cf3	    0x8b0500000000	            mov eax, dword [0x04002d39] 	      1785	screen.c	FUNCTION_20	IF_89
0x2cf9	            0x89c2	                            mov edx, eax	      1785	screen.c	FUNCTION_20	IF_89
0x2cfb	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1785	screen.c	FUNCTION_20	IF_89
0x2d02	          0x885050	               mov byte [rax + 0x50], dl	      1785	screen.c	FUNCTION_20	IF_89
0x2d05	    0x488b05000000	            mov rax, qword [0x04002d4c] 	      1786	screen.c	FUNCTION_20	IF_89
0x2d0c	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      1786	screen.c	FUNCTION_20	IF_89
0x2d10	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1786	screen.c	FUNCTION_20	IF_89
0x2d17	        0x48895058	             mov qword [rax + 0x58], rdx	      1786	screen.c	FUNCTION_20	IF_89
0x2d1b	    0x488b15000000	            mov rdx, qword [0x04002d62] 	      1787	screen.c	FUNCTION_20	IF_89
0x2d22	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1787	screen.c	FUNCTION_20	IF_89
0x2d29	        0x48895068	             mov qword [rax + 0x68], rdx	      1787	screen.c	FUNCTION_20	IF_89
0x2d2d	    0x8b1500000000	            mov edx, dword [0x04002d73] 	      1788	screen.c	FUNCTION_20	IF_89
0x2d33	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1788	screen.c	FUNCTION_20	IF_89
0x2d3a	          0x895070	             mov dword [rax + 0x70], edx	      1788	screen.c	FUNCTION_20	IF_89
0x2d3d	    0x488b05000000	            mov rax, qword [0x04002d84] 	      1789	screen.c	FUNCTION_20	IF_89
0x2d44	          0x8b5048	            mov edx, dword [rax + 0x48] 	      1789	screen.c	FUNCTION_20	IF_89
0x2d47	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1789	screen.c	FUNCTION_20	IF_89
0x2d4e	          0x895074	             mov dword [rax + 0x74], edx	      1789	screen.c	FUNCTION_20	IF_89
0x2d51	            0xeb37	                           jmp 0x4002dca	      1789	screen.c	FUNCTION_20	IF_89
0x2d53	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1793	screen.c	FUNCTION_20	ELSE_25
0x2d5a	        0xc6405000	                mov byte [rax + 0x50], 0	      1793	screen.c	FUNCTION_20	ELSE_25
0x2d5e	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1794	screen.c	FUNCTION_20	ELSE_25
0x2d65	    0x48c740580000	               mov qword [rax + 0x58], 0	      1794	screen.c	FUNCTION_20	ELSE_25
0x2d6d	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1795	screen.c	FUNCTION_20	ELSE_25
0x2d74	    0x48c740680000	               mov qword [rax + 0x68], 0	      1795	screen.c	FUNCTION_20	ELSE_25
0x2d7c	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1796	screen.c	FUNCTION_20	ELSE_25
0x2d83	    0xc74070000000	               mov dword [rax + 0x70], 0	      1796	screen.c	FUNCTION_20	ELSE_25
0x2d8a	    0x8b0500000000	            mov eax, dword [0x04002dd0] 	      1801	screen.c	FUNCTION_20
0x2d90	    0x89855cffffff	             mov dword [rbp - 0xa4], eax	      1801	screen.c	FUNCTION_20
0x2d96	    0xc70500000000	               mov dword [0x04002de0], 0	      1802	screen.c	FUNCTION_20
0x2da0	    0x488b05000000	            mov rax, qword [0x04002de7] 	      1806	screen.c	FUNCTION_20	CALL_27
0x2da7	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      1806	screen.c	FUNCTION_20	CALL_27
0x2dab	          0x4889d6	                            mov rsi, rdx	      1806	screen.c	FUNCTION_20	CALL_27
0x2dae	          0x4889c7	                            mov rdi, rax	      1806	screen.c	FUNCTION_20	CALL_27
0x2db1	      0xe800000000	                          call 0x4002df6	      1806	screen.c	FUNCTION_20	CALL_27
0x2db6	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1807	screen.c	FUNCTION_20	CALL_28
0x2dba	          0x4889c7	                            mov rdi, rax	      1807	screen.c	FUNCTION_20	CALL_28
0x2dbd	      0xe800000000	                          call 0x4002e02	      1807	screen.c	FUNCTION_20	CALL_28
0x2dc2	    0xc70500000000	               mov dword [0x04002e0c], 0	      1810	screen.c	FUNCTION_20
0x2dcc	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1818	screen.c	FUNCTION_20	IF_90	CALL_29
0x2dd3	          0x4889c7	                            mov rdi, rax	      1818	screen.c	FUNCTION_20	IF_90	CALL_29
0x2dd6	      0xe800000000	                          call 0x4002e1b	      1818	screen.c	FUNCTION_20	IF_90	CALL_29
0x2ddb	            0x85c0	                           test eax, eax	      1818	screen.c	FUNCTION_20	IF_90	CALL_29
0x2ddd	            0x7e0f	                           jle 0x4002e2e	      1818	screen.c	FUNCTION_20	IF_90	CALL_29
0x2ddf	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1819	screen.c	FUNCTION_20	CALL_30
0x2de6	          0x4889c7	                            mov rdi, rax	      1819	screen.c	FUNCTION_20	CALL_30
0x2de9	      0xe8811f0100	             call sym.redraw_win_toolbar	      1819	screen.c	FUNCTION_20	CALL_30
0x2dee	    0xc78530ffffff	               mov dword [rbp - 0xd0], 0	      1825	screen.c	FUNCTION_20
0x2df8	    0xc7852cffffff	               mov dword [rbp - 0xd4], 0	      1826	screen.c	FUNCTION_20
0x2e02	    0xc78534ffffff	               mov dword [rbp - 0xcc], 0	      1827	screen.c	FUNCTION_20
0x2e0c	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1828	screen.c	FUNCTION_20
0x2e13	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1828	screen.c	FUNCTION_20
0x2e17	        0x48894588	             mov qword [rbp - 0x78], rax	      1828	screen.c	FUNCTION_20
0x2e1b	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1833	screen.c	FUNCTION_20	FOR_8	IF_91
0x2e22	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1833	screen.c	FUNCTION_20	FOR_8	IF_91
0x2e28	    0x3b852cffffff	             cmp eax, dword [rbp - 0xd4]	      1833	screen.c	FUNCTION_20	FOR_8	IF_91
0x2e2e	            0x750f	                           jne 0x4002e7f	      1833	screen.c	FUNCTION_20	FOR_8	IF_91
0x2e30	    0xc7853cffffff	               mov dword [rbp - 0xc4], 1	      1835	screen.c	FUNCTION_20	FOR_8	IF_91
0x2e3a	      0xe9870e0000	                           jmp 0x4003d06	      1836	screen.c	FUNCTION_20	FOR_8	IF_91
0x2e3f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1840	screen.c	FUNCTION_20	FOR_8	IF_92
0x2e43	          0x488b00	                    mov rax, qword [rax]	      1840	screen.c	FUNCTION_20	FOR_8	IF_92
0x2e46	        0x483b4588	             cmp rax, qword [rbp - 0x78]	      1840	screen.c	FUNCTION_20	FOR_8	IF_92
0x2e4a	            0x7d0f	                           jge 0x4002e9b	      1840	screen.c	FUNCTION_20	FOR_8	IF_92
0x2e4c	    0xc78538ffffff	               mov dword [rbp - 0xc8], 1	      1842	screen.c	FUNCTION_20	FOR_8	IF_92
0x2e56	      0xe96b0e0000	                           jmp 0x4003d06	      1843	screen.c	FUNCTION_20	FOR_8	IF_92
0x2e5b	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	      1848	screen.c	FUNCTION_20	FOR_8
0x2e61	    0x898534ffffff	             mov dword [rbp - 0xcc], eax	      1848	screen.c	FUNCTION_20	FOR_8
0x2e67	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	      1859	screen.c	FUNCTION_20	FOR_8	IF_93
0x2e6d	    0x3b8514ffffff	             cmp eax, dword [rbp - 0xec]	      1859	screen.c	FUNCTION_20	FOR_8	IF_93
0x2e73	     0xf8c51010000	                            jl 0x400300a	      1859	screen.c	FUNCTION_20	FOR_8	IF_93
0x2e79	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	      1860	screen.c	FUNCTION_20	FOR_8	IF_93
0x2e7f	    0x3b8518ffffff	             cmp eax, dword [rbp - 0xe8]	      1860	screen.c	FUNCTION_20	FOR_8	IF_93
0x2e85	            0x7c12	                            jl 0x4002ed9	      1860	screen.c	FUNCTION_20	FOR_8	IF_93
0x2e87	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	      1860	screen.c	FUNCTION_20	FOR_8	IF_93
0x2e8d	    0x3b851cffffff	             cmp eax, dword [rbp - 0xe4]	      1860	screen.c	FUNCTION_20	FOR_8	IF_93
0x2e93	     0xf8c31010000	                            jl 0x400300a	      1860	screen.c	FUNCTION_20	FOR_8	IF_93
0x2e99	    0x83bd28ffffff	               cmp dword [rbp - 0xd8], 0	      1862	screen.c	FUNCTION_20	FOR_8	IF_93
0x2ea0	     0xf8524010000	                           jne 0x400300a	      1862	screen.c	FUNCTION_20	FOR_8	IF_93
0x2ea6	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1864	screen.c	FUNCTION_20	FOR_8	IF_93
0x2ead	    0x8b80f8000000	            mov eax, dword [rax + 0xf8] 	      1864	screen.c	FUNCTION_20	FOR_8	IF_93
0x2eb3	    0x3b8530ffffff	             cmp eax, dword [rbp - 0xd0]	      1864	screen.c	FUNCTION_20	FOR_8	IF_93
0x2eb9	     0xf8e0b010000	                           jle 0x400300a	      1864	screen.c	FUNCTION_20	FOR_8	IF_93
0x2ebf	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1865	screen.c	FUNCTION_20	FOR_8	IF_93
0x2ec6	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      1865	screen.c	FUNCTION_20	FOR_8	IF_93
0x2ecd	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      1865	screen.c	FUNCTION_20	FOR_8	IF_93
0x2ed3	          0x4863d0	                         movsxd rdx, eax	      1865	screen.c	FUNCTION_20	FOR_8	IF_93
0x2ed6	          0x4889d0	                            mov rax, rdx	      1865	screen.c	FUNCTION_20	FOR_8	IF_93
0x2ed9	          0x4801c0	                            add rax, rax	      1865	screen.c	FUNCTION_20	FOR_8	IF_93
0x2edc	          0x4801d0	                            add rax, rdx	      1865	screen.c	FUNCTION_20	FOR_8	IF_93
0x2edf	        0x48c1e003	                              shl rax, 3	      1865	screen.c	FUNCTION_20	FOR_8	IF_93
0x2ee3	          0x4801c8	                            add rax, rcx	      1865	screen.c	FUNCTION_20	FOR_8	IF_93
0x2ee6	         0xfb74008	               movzx eax, word [rax + 8]	      1865	screen.c	FUNCTION_20	FOR_8	IF_93
0x2eea	           0xfb7d0	                           movzx edx, ax	      1865	screen.c	FUNCTION_20	FOR_8	IF_93
0x2eed	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	      1865	screen.c	FUNCTION_20	FOR_8	IF_93
0x2ef3	             0x1d0	                            add eax, edx	      1865	screen.c	FUNCTION_20	FOR_8	IF_93
0x2ef5	    0x3b8520ffffff	             cmp eax, dword [rbp - 0xe0]	      1865	screen.c	FUNCTION_20	FOR_8	IF_93
0x2efb	     0xf8fc9000000	                            jg 0x400300a	      1865	screen.c	FUNCTION_20	FOR_8	IF_93
0x2f01	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1866	screen.c	FUNCTION_20	FOR_8	IF_93
0x2f08	          0x4885c0	                           test rax, rax	      1866	screen.c	FUNCTION_20	FOR_8	IF_93
0x2f0b	     0xf84040d0000	                            je 0x4003c55	      1866	screen.c	FUNCTION_20	FOR_8	IF_93
0x2f11	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1867	screen.c	FUNCTION_20	FOR_8	IF_93
0x2f18	        0x48394588	            cmp qword [rbp - 0x78], rax 	      1867	screen.c	FUNCTION_20	FOR_8	IF_93
0x2f1c	     0xf84a8000000	                            je 0x400300a	      1867	screen.c	FUNCTION_20	FOR_8	IF_93
0x2f22	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1868	screen.c	FUNCTION_20	FOR_8	IF_93
0x2f29	        0x48394588	            cmp qword [rbp - 0x78], rax 	      1868	screen.c	FUNCTION_20	FOR_8	IF_93
0x2f2d	     0xf8ce20c0000	                            jl 0x4003c55	      1868	screen.c	FUNCTION_20	FOR_8	IF_93
0x2f33	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1869	screen.c	FUNCTION_20	FOR_8	IF_93
0x2f3a	        0x48394588	            cmp qword [rbp - 0x78], rax 	      1869	screen.c	FUNCTION_20	FOR_8	IF_93
0x2f3e	     0xf8c86000000	                            jl 0x400300a	      1869	screen.c	FUNCTION_20	FOR_8	IF_93
0x2f44	    0x83bd44ffffff	               cmp dword [rbp - 0xbc], 3	      1871	screen.c	FUNCTION_20	FOR_8	IF_93
0x2f4b	            0x747d	                            je 0x400300a	      1871	screen.c	FUNCTION_20	FOR_8	IF_93
0x2f4d	    0x83bd44ffffff	               cmp dword [rbp - 0xbc], 2	      1872	screen.c	FUNCTION_20	FOR_8	IF_93
0x2f54	            0x7549	                           jne 0x4002fdf	      1872	screen.c	FUNCTION_20	FOR_8	IF_93
0x2f56	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1873	screen.c	FUNCTION_20	FOR_8	IF_93	CALL_31
0x2f5d	          0x4889c7	                            mov rdi, rax	      1873	screen.c	FUNCTION_20	FOR_8	IF_93	CALL_31
0x2f60	      0xe800000000	                          call 0x4002fa5	      1873	screen.c	FUNCTION_20	FOR_8	IF_93	CALL_31
0x2f65	            0x85c0	                           test eax, eax	      1873	screen.c	FUNCTION_20	FOR_8	IF_93	CALL_31
0x2f67	            0x7436	                            je 0x4002fdf	      1873	screen.c	FUNCTION_20	FOR_8	IF_93	CALL_31
0x2f69	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1876	screen.c	FUNCTION_20	FOR_8	IF_93	CALL_32
0x2f70	          0x4889c7	                            mov rdi, rax	      1876	screen.c	FUNCTION_20	FOR_8	IF_93	CALL_32
0x2f73	      0xe800000000	                          call 0x4002fb8	      1876	screen.c	FUNCTION_20	FOR_8	IF_93	CALL_32
0x2f78	            0x85c0	                           test eax, eax	      1874	screen.c	FUNCTION_20	FOR_8	IF_93
0x2f7a	            0x7413	                            je 0x4002fcf	      1874	screen.c	FUNCTION_20	FOR_8	IF_93
0x2f7c	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1877	screen.c	FUNCTION_20	FOR_8	IF_93	CALL_33
0x2f83	          0x4889c7	                            mov rdi, rax	      1877	screen.c	FUNCTION_20	FOR_8	IF_93	CALL_33
0x2f86	      0xe800000000	                          call 0x4002fcb	      1877	screen.c	FUNCTION_20	FOR_8	IF_93	CALL_33
0x2f8b	            0x85c0	                           test eax, eax	      1877	screen.c	FUNCTION_20	FOR_8	IF_93	CALL_33
0x2f8d	            0x753b	                           jne 0x400300a	      1877	screen.c	FUNCTION_20	FOR_8	IF_93	CALL_33
0x2f8f	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1879	screen.c	FUNCTION_20	FOR_8	IF_93	CALL_34
0x2f93	          0x4889c7	                            mov rdi, rax	      1879	screen.c	FUNCTION_20	FOR_8	IF_93	CALL_34
0x2f96	      0xe800000000	                          call 0x4002fdb	      1879	screen.c	FUNCTION_20	FOR_8	IF_93	CALL_34
0x2f9b	            0x85c0	                           test eax, eax	      1877	screen.c	FUNCTION_20	FOR_8	IF_93	CALL_33
0x2f9d	            0x752b	                           jne 0x400300a	      1877	screen.c	FUNCTION_20	FOR_8	IF_93	CALL_33
0x2f9f	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1884	screen.c	FUNCTION_20	FOR_8	IF_93
0x2fa6	    0x488b80501500	          mov rax, qword [rax + 0x1550] 	      1884	screen.c	FUNCTION_20	FOR_8	IF_93
0x2fad	          0x4885c0	                           test rax, rax	      1884	screen.c	FUNCTION_20	FOR_8	IF_93
0x2fb0	     0xf845f0c0000	                            je 0x4003c55	      1884	screen.c	FUNCTION_20	FOR_8	IF_93
0x2fb6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1885	screen.c	FUNCTION_20	FOR_8	IF_93
0x2fba	    0x488b80100100	           mov rax, qword [rax + 0x110] 	      1885	screen.c	FUNCTION_20	FOR_8	IF_93
0x2fc1	          0x4885c0	                           test rax, rax	      1885	screen.c	FUNCTION_20	FOR_8	IF_93
0x2fc4	     0xf844b0c0000	                            je 0x4003c55	      1885	screen.c	FUNCTION_20	FOR_8	IF_93
0x2fca	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1890	screen.c	FUNCTION_20	FOR_8	IF_93	IF_94
0x2fd1	        0x48394588	            cmp qword [rbp - 0x78], rax 	      1890	screen.c	FUNCTION_20	FOR_8	IF_93	IF_94
0x2fd5	            0x750a	                           jne 0x4003021	      1890	screen.c	FUNCTION_20	FOR_8	IF_93	IF_94
0x2fd7	    0xc78528ffffff	               mov dword [rbp - 0xd8], 0	      1891	screen.c	FUNCTION_20	FOR_8	IF_93	IF_94
0x2fe1	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1900	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95
0x2fe8	        0x48394588	            cmp qword [rbp - 0x78], rax 	      1900	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95
0x2fec	     0xf85ec070000	                           jne 0x400381e	      1900	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95
0x2ff2	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1901	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95
0x2ff9	    0x483dffffff7f	                     cmp rax, 0x7fffffff	      1901	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95
0x2fff	     0xf84d9070000	                            je 0x400381e	      1901	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95
0x3005	    0x8b0500000000	            mov eax, dword [0x0400304b] 	      1902	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95
0x300b	            0x85c0	                           test eax, eax	      1902	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95
0x300d	            0x781b	                            js 0x400306a	      1902	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95
0x300f	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1902	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95
0x3016	        0x488d5001	                      lea rdx, [rax + 1]	      1902	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95
0x301a	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1902	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95
0x3021	          0x4839c2	                            cmp rdx, rax	      1902	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95
0x3024	     0xf84b4070000	                            je 0x400381e	      1902	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95
0x302a	    0xc78548ffffff	               mov dword [rbp - 0xb8], 0	      1904	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95
0x3034	    0xc7854cffffff	               mov dword [rbp - 0xb4], 0	      1905	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95
0x303e	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      1912	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9
0x3044	    0x898540ffffff	             mov dword [rbp - 0xc0], eax	      1912	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9
0x304a	      0xe9a6010000	                           jmp 0x4003235	      1912	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9
0x304f	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1916	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_96
0x3056	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      1916	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_96
0x305d	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	      1916	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_96
0x3063	          0x4863d0	                         movsxd rdx, eax	      1916	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_96
0x3066	          0x4889d0	                            mov rax, rdx	      1916	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_96
0x3069	          0x4801c0	                            add rax, rax	      1916	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_96
0x306c	          0x4801d0	                            add rax, rdx	      1916	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_96
0x306f	        0x48c1e003	                              shl rax, 3	      1916	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_96
0x3073	          0x4801c8	                            add rax, rcx	      1916	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_96
0x3076	         0xfb6400a	            movzx eax, byte [rax + 0xa] 	      1916	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_96
0x307a	            0x84c0	                             test al, al	      1916	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_96
0x307c	            0x743a	                            je 0x40030f8	      1916	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_96
0x307e	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1917	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_96
0x3085	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      1917	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_96
0x308c	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	      1917	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_96
0x3092	          0x4863d0	                         movsxd rdx, eax	      1917	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_96
0x3095	          0x4889d0	                            mov rax, rdx	      1917	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_96
0x3098	          0x4801c0	                            add rax, rax	      1917	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_96
0x309b	          0x4801d0	                            add rax, rdx	      1917	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_96
0x309e	        0x48c1e003	                              shl rax, 3	      1917	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_96
0x30a2	          0x4801c8	                            add rax, rcx	      1917	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_96
0x30a5	          0x488b10	                    mov rdx, qword [rax]	      1917	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_96
0x30a8	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1917	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_96
0x30af	          0x4839c2	                            cmp rdx, rax	      1917	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_96
0x30b2	     0xf8458010000	                            je 0x4003250	      1917	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_96
0x30b8	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1919	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9
0x30bf	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      1919	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9
0x30c6	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	      1919	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9
0x30cc	          0x4863d0	                         movsxd rdx, eax	      1919	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9
0x30cf	          0x4889d0	                            mov rax, rdx	      1919	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9
0x30d2	          0x4801c0	                            add rax, rax	      1919	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9
0x30d5	          0x4801d0	                            add rax, rdx	      1919	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9
0x30d8	        0x48c1e003	                              shl rax, 3	      1919	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9
0x30dc	          0x4801c8	                            add rax, rcx	      1919	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9
0x30df	         0xfb74008	               movzx eax, word [rax + 8]	      1919	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9
0x30e3	           0xfb7c0	                           movzx eax, ax	      1919	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9
0x30e6	     0x18548ffffff	             add dword [rbp - 0xb8], eax	      1919	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9
0x30ec	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1921	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97
0x30f3	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      1921	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97
0x30fa	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	      1921	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97
0x3100	          0x4863d0	                         movsxd rdx, eax	      1921	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97
0x3103	          0x4889d0	                            mov rax, rdx	      1921	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97
0x3106	          0x4801c0	                            add rax, rax	      1921	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97
0x3109	          0x4801d0	                            add rax, rdx	      1921	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97
0x310c	        0x48c1e003	                              shl rax, 3	      1921	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97
0x3110	          0x4801c8	                            add rax, rcx	      1921	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97
0x3113	         0xfb6400a	            movzx eax, byte [rax + 0xa] 	      1921	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97
0x3117	            0x84c0	                             test al, al	      1921	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97
0x3119	     0xf84cf000000	                            je 0x400322e	      1921	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97
0x311f	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1922	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97
0x3126	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      1922	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97
0x312d	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	      1922	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97
0x3133	          0x4863d0	                         movsxd rdx, eax	      1922	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97
0x3136	          0x4889d0	                            mov rax, rdx	      1922	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97
0x3139	          0x4801c0	                            add rax, rax	      1922	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97
0x313c	          0x4801d0	                            add rax, rdx	      1922	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97
0x313f	        0x48c1e003	                              shl rax, 3	      1922	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97
0x3143	          0x4801c8	                            add rax, rcx	      1922	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97
0x3146	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1922	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97
0x314a	        0x488d5001	                      lea rdx, [rax + 1]	      1922	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97
0x314e	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1922	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97
0x3155	          0x4839c2	                            cmp rdx, rax	      1922	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97
0x3158	     0xf8590000000	                           jne 0x400322e	      1922	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97
0x315e	    0x838540ffffff	               add dword [rbp - 0xc0], 1	      1926	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97
0x3165	            0xeb3d	                           jmp 0x40031e4	      1927	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97	WHILE_4
0x3167	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1929	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97	WHILE_4
0x316e	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      1929	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97	WHILE_4
0x3175	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	      1929	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97	WHILE_4
0x317b	          0x8d5001	                      lea edx, [rax + 1]	      1929	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97	WHILE_4
0x317e	    0x899540ffffff	             mov dword [rbp - 0xc0], edx	      1929	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97	WHILE_4
0x3184	          0x4863d0	                         movsxd rdx, eax	      1929	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97	WHILE_4
0x3187	          0x4889d0	                            mov rax, rdx	      1929	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97	WHILE_4
0x318a	          0x4801c0	                            add rax, rax	      1929	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97	WHILE_4
0x318d	          0x4801d0	                            add rax, rdx	      1929	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97	WHILE_4
0x3190	        0x48c1e003	                              shl rax, 3	      1929	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97	WHILE_4
0x3194	          0x4801c8	                            add rax, rcx	      1929	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97	WHILE_4
0x3197	         0xfb74008	               movzx eax, word [rax + 8]	      1929	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97	WHILE_4
0x319b	           0xfb7c0	                           movzx eax, ax	      1929	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97	WHILE_4
0x319e	     0x18548ffffff	             add dword [rbp - 0xb8], eax	      1929	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97	WHILE_4
0x31a4	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1927	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97	WHILE_4
0x31ab	    0x8b80f8000000	            mov eax, dword [rax + 0xf8] 	      1927	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97	WHILE_4
0x31b1	    0x3b8540ffffff	             cmp eax, dword [rbp - 0xc0]	      1927	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97	WHILE_4
0x31b7	            0x7e5a	                           jle 0x4003253	      1927	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97	WHILE_4
0x31b9	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1928	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97	WHILE_4
0x31c0	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      1928	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97	WHILE_4
0x31c7	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	      1928	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97	WHILE_4
0x31cd	          0x4863d0	                         movsxd rdx, eax	      1928	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97	WHILE_4
0x31d0	          0x4889d0	                            mov rax, rdx	      1928	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97	WHILE_4
0x31d3	          0x4801c0	                            add rax, rax	      1928	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97	WHILE_4
0x31d6	          0x4801d0	                            add rax, rdx	      1928	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97	WHILE_4
0x31d9	        0x48c1e003	                              shl rax, 3	      1928	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97	WHILE_4
0x31dd	          0x4801c8	                            add rax, rcx	      1928	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97	WHILE_4
0x31e0	         0xfb6400a	            movzx eax, byte [rax + 0xa] 	      1928	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97	WHILE_4
0x31e4	            0x84c0	                             test al, al	      1928	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97	WHILE_4
0x31e6	     0xf847bffffff	                            je 0x40031a7	      1928	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97	WHILE_4
0x31ec	            0xeb25	                           jmp 0x4003253	      1930	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97
0x31ee	    0x838540ffffff	               add dword [rbp - 0xc0], 1	      1912	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9
0x31f5	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1912	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9
0x31fc	    0x8b80f8000000	            mov eax, dword [rax + 0xf8] 	      1912	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9
0x3202	    0x3b8540ffffff	             cmp eax, dword [rbp - 0xc0]	      1912	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9
0x3208	     0xf8f41feffff	                            jg 0x400308f	      1912	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9
0x320e	            0xeb04	                           jmp 0x4003254	      1912	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9
0x3210	              0x90	                                     nop	      1918	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_96
0x3211	            0xeb01	                           jmp 0x4003254	      1918	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_96
0x3213	              0x90	                                     nop	      1930	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	FOR_9	IF_97
0x3214	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1935	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	IF_98
0x321b	    0x8b80f8000000	            mov eax, dword [rax + 0xf8] 	      1935	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	IF_98
0x3221	    0x3b8540ffffff	             cmp eax, dword [rbp - 0xc0]	      1935	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	IF_98
0x3227	            0x7f0f	                            jg 0x4003278	      1935	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	IF_98
0x3229	    0xc78520ffffff	               mov dword [rbp - 0xe0], 0	      1940	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	IF_98
0x3233	      0xe9a6050000	                           jmp 0x400381e	      1940	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	IF_98
0x3238	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      1946	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26
0x323e	            0x4898	                                    cdqe	      1946	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26
0x3240	        0x48894590	             mov qword [rbp - 0x70], rax	      1946	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26
0x3244	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1947	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10
0x3248	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      1947	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10
0x324f	      0xe9f1000000	                           jmp 0x4003385	      1947	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10
0x3254	    0x488bb578ffff	             mov rsi, qword [rbp - 0x88]	      1950	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10	IF_99	CALL_35
0x325b	    0x488d9578ffff	                   lea rdx, [rbp - 0x88]	      1950	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10	IF_99	CALL_35
0x3262	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1950	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10	IF_99	CALL_35
0x3269	    0x41b900000000	                              mov r9d, 0	      1950	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10	IF_99	CALL_35
0x326f	    0x41b801000000	                              mov r8d, 1	      1950	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10	IF_99	CALL_35
0x3275	          0x4889d1	                            mov rcx, rdx	      1950	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10	IF_99	CALL_35
0x3278	      0xba00000000	                              mov edx, 0	      1950	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10	IF_99	CALL_35
0x327d	          0x4889c7	                            mov rdi, rax	      1950	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10	IF_99	CALL_35
0x3280	      0xe800000000	                          call 0x40032c5	      1950	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10	IF_99	CALL_35
0x3285	            0x85c0	                           test eax, eax	      1950	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10	IF_99	CALL_35
0x3287	            0x7409	                            je 0x40032d2	      1950	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10	IF_99	CALL_35
0x3289	    0x83854cffffff	               add dword [rbp - 0xb4], 1	      1951	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10	IF_99
0x3290	            0xeb72	                           jmp 0x4003344	      1951	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10	IF_99
0x3292	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1955	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10	ELSE_27	IF_100
0x3299	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      1955	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10	ELSE_27	IF_100
0x329d	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1955	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10	ELSE_27	IF_100
0x32a4	          0x4839c2	                            cmp rdx, rax	      1955	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10	ELSE_27	IF_100
0x32a7	            0x7537	                           jne 0x4003320	      1955	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10	ELSE_27	IF_100
0x32a9	    0x488b8d78ffff	             mov rcx, qword [rbp - 0x88]	      1956	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10	ELSE_27	IF_100	CALL_36
0x32b0	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1956	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10	ELSE_27	IF_100	CALL_36
0x32b7	      0xba01000000	                              mov edx, 1	      1956	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10	ELSE_27	IF_100	CALL_36
0x32bc	          0x4889ce	                            mov rsi, rcx	      1956	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10	ELSE_27	IF_100	CALL_36
0x32bf	          0x4889c7	                            mov rdi, rax	      1956	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10	ELSE_27	IF_100	CALL_36
0x32c2	      0xe800000000	                          call 0x4003307	      1956	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10	ELSE_27	IF_100	CALL_36
0x32c7	            0x89c2	                            mov edx, eax	      1956	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10	ELSE_27	IF_100	CALL_36
0x32c9	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1957	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10	ELSE_27	IF_100
0x32d0	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      1957	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10	ELSE_27	IF_100
0x32d6	             0x1d0	                            add eax, edx	      1957	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10	ELSE_27	IF_100
0x32d8	     0x1854cffffff	             add dword [rbp - 0xb4], eax	      1956	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10	ELSE_27	IF_100	CALL_36
0x32de	            0xeb24	                           jmp 0x4003344	      1956	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10	ELSE_27	IF_100	CALL_36
0x32e0	    0x488b8d78ffff	             mov rcx, qword [rbp - 0x88]	      1960	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10	CALL_37
0x32e7	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1960	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10	CALL_37
0x32ee	      0xba01000000	                              mov edx, 1	      1960	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10	CALL_37
0x32f3	          0x4889ce	                            mov rsi, rcx	      1960	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10	CALL_37
0x32f6	          0x4889c7	                            mov rdi, rax	      1960	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10	CALL_37
0x32f9	      0xe800000000	                          call 0x400333e	      1960	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10	CALL_37
0x32fe	     0x1854cffffff	             add dword [rbp - 0xb4], eax	      1960	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10	CALL_37
0x3304	      0x4883459001	               add qword [rbp - 0x70], 1	      1961	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10
0x3309	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1962	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10	IF_101
0x3310	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1962	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10	IF_101
0x3316	    0x2b852cffffff	             sub eax, dword [rbp - 0xd4]	      1962	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10	IF_101
0x331c	          0x83e802	                              sub eax, 2	      1962	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10	IF_101
0x331f	    0x3b854cffffff	             cmp eax, dword [rbp - 0xb4]	      1962	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10	IF_101
0x3325	            0x7d0c	                           jge 0x4003373	      1962	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10	IF_101
0x3327	    0xc7854cffffff	          mov dword [rbp - 0xb4], 0x270f	      1965	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10	IF_101
0x3331	            0xeb29	                           jmp 0x400339c	      1966	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10	IF_101
0x3333	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      1947	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10
0x333a	        0x4883c001	                              add rax, 1	      1947	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10
0x333e	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      1947	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10
0x3345	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	      1947	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10
0x334c	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      1947	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10
0x3353	          0x4839c2	                            cmp rdx, rax	      1947	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10
0x3356	     0xf8cf8feffff	                            jl 0x4003294	      1947	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	FOR_10
0x335c	    0x8b854cffffff	             mov eax, dword [rbp - 0xb4]	      1969	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26
0x3362	    0x2b8548ffffff	             sub eax, dword [rbp - 0xb8]	      1969	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26
0x3368	    0x898560ffffff	             mov dword [rbp - 0xa0], eax	      1969	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26
0x336e	    0x83bd60ffffff	               cmp dword [rbp - 0xa0], 0	      1970	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_102
0x3375	     0xf89a0000000	                           jns 0x400345b	      1970	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_102
0x337b	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	      1976	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_102	IF_103
0x3381	    0x2b8560ffffff	             sub eax, dword [rbp - 0xa0]	      1976	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_102	IF_103
0x3387	            0x89c2	                            mov edx, eax	      1976	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_102	IF_103
0x3389	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1976	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_102	IF_103
0x3390	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1976	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_102	IF_103
0x3396	          0x83e802	                              sub eax, 2	      1976	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_102	IF_103
0x3399	            0x39c2	                            cmp edx, eax	      1976	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_102	IF_103
0x339b	            0x7c10	                            jl 0x40033ed	      1976	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_102	IF_103
0x339d	    0x48c78570ffff	      mov qword [rbp - 0x90], 0x7fffffff	      1977	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_102	IF_103
0x33a8	      0xe916010000	                           jmp 0x4003503	      1977	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_102	IF_103
0x33ad	      0xbf00000000	                              mov edi, 0	      1980	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_102	ELSE_29	CALL_38
0x33b2	      0xe800000000	                          call 0x40033f7	      1980	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_102	ELSE_29	CALL_38
0x33b7	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	      1981	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_102	ELSE_29	IF_104	CALL_39
0x33bd	            0xf7d8	                                 neg eax	      1981	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_102	ELSE_29	IF_104	CALL_39
0x33bf	            0x89c2	                            mov edx, eax	      1981	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_102	ELSE_29	IF_104	CALL_39
0x33c1	    0x8bb52cffffff	             mov esi, dword [rbp - 0xd4]	      1981	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_102	ELSE_29	IF_104	CALL_39
0x33c7	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1981	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_102	ELSE_29	IF_104	CALL_39
0x33ce	    0x41b900000000	                              mov r9d, 0	      1981	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_102	ELSE_29	IF_104	CALL_39
0x33d4	    0x41b800000000	                              mov r8d, 0	      1981	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_102	ELSE_29	IF_104	CALL_39
0x33da	      0xb900000000	                              mov ecx, 0	      1981	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_102	ELSE_29	IF_104	CALL_39
0x33df	          0x4889c7	                            mov rdi, rax	      1981	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_102	ELSE_29	IF_104	CALL_39
0x33e2	      0xe800000000	                          call 0x4003427	      1981	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_102	ELSE_29	IF_104	CALL_39
0x33e7	            0x85c0	                           test eax, eax	      1981	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_102	ELSE_29	IF_104	CALL_39
0x33e9	            0x7510	                           jne 0x400343b	      1981	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_102	ELSE_29	IF_104	CALL_39
0x33eb	    0x48c78570ffff	      mov qword [rbp - 0x90], 0x7fffffff	      1983	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_102	ELSE_29	IF_104
0x33f6	      0xe9c8000000	                           jmp 0x4003503	      1983	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_102	ELSE_29	IF_104
0x33fb	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1985	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_102	ELSE_29	ELSE_30
0x3402	    0x8b90a0000000	            mov edx, dword [rax + 0xa0] 	      1985	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_102	ELSE_29	ELSE_30
0x3408	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	      1985	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_102	ELSE_29	ELSE_30
0x340e	             0x1d0	                            add eax, edx	      1985	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_102	ELSE_29	ELSE_30
0x3410	    0x898520ffffff	             mov dword [rbp - 0xe0], eax	      1985	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_102	ELSE_29	ELSE_30
0x3416	      0xe9a8000000	                           jmp 0x4003503	      1985	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_102	ELSE_29	ELSE_30
0x341b	    0x83bd60ffffff	               cmp dword [rbp - 0xa0], 0	      1988	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	ELSE_30	ELSE_31	IF_105
0x3422	     0xf8e9b000000	                           jle 0x4003503	      1988	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	ELSE_30	ELSE_31	IF_105
0x3428	    0x8b952cffffff	             mov edx, dword [rbp - 0xd4]	      1993	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	ELSE_30	ELSE_31	IF_105	IF_106
0x342e	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	      1993	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	ELSE_30	ELSE_31	IF_105	IF_106
0x3434	             0x1c2	                            add edx, eax	      1993	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	ELSE_30	ELSE_31	IF_105	IF_106
0x3436	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1993	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	ELSE_30	ELSE_31	IF_105	IF_106
0x343d	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      1993	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	ELSE_30	ELSE_31	IF_105	IF_106
0x3443	          0x83e802	                              sub eax, 2	      1993	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	ELSE_30	ELSE_31	IF_105	IF_106
0x3446	            0x39c2	                            cmp edx, eax	      1993	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	ELSE_30	ELSE_31	IF_105	IF_106
0x3448	            0x7c0d	                            jl 0x4003497	      1993	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	ELSE_30	ELSE_31	IF_105	IF_106
0x344a	    0x48c78570ffff	      mov qword [rbp - 0x90], 0x7fffffff	      1994	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	ELSE_30	ELSE_31	IF_105	IF_106
0x3455	            0xeb6c	                           jmp 0x4003503	      1994	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	ELSE_30	ELSE_31	IF_105	IF_106
0x3457	      0xbf00000000	                              mov edi, 0	      1997	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	ELSE_30	ELSE_31	IF_105	ELSE_32	CALL_40
0x345c	      0xe800000000	                          call 0x40034a1	      1997	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	ELSE_30	ELSE_31	IF_105	ELSE_32	CALL_40
0x3461	    0x8b952cffffff	             mov edx, dword [rbp - 0xd4]	      1998	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	ELSE_30	ELSE_31	IF_105	ELSE_32	IF_107	CALL_41
0x3467	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	      1998	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	ELSE_30	ELSE_31	IF_105	ELSE_32	IF_107	CALL_41
0x346d	          0x8d3402	                    lea esi, [rdx + rax]	      1998	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	ELSE_30	ELSE_31	IF_105	ELSE_32	IF_107	CALL_41
0x3470	    0x8b9560ffffff	             mov edx, dword [rbp - 0xa0]	      1998	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	ELSE_30	ELSE_31	IF_105	ELSE_32	IF_107	CALL_41
0x3476	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1998	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	ELSE_30	ELSE_31	IF_105	ELSE_32	IF_107	CALL_41
0x347d	    0x41b800000000	                              mov r8d, 0	      1998	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	ELSE_30	ELSE_31	IF_105	ELSE_32	IF_107	CALL_41
0x3483	      0xb900000000	                              mov ecx, 0	      1998	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	ELSE_30	ELSE_31	IF_105	ELSE_32	IF_107	CALL_41
0x3488	          0x4889c7	                            mov rdi, rax	      1998	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	ELSE_30	ELSE_31	IF_105	ELSE_32	IF_107	CALL_41
0x348b	      0xe800000000	                          call 0x40034d0	      1998	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	ELSE_30	ELSE_31	IF_105	ELSE_32	IF_107	CALL_41
0x3490	            0x85c0	                           test eax, eax	      1998	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	ELSE_30	ELSE_31	IF_105	ELSE_32	IF_107	CALL_41
0x3492	            0x750d	                           jne 0x40034e1	      1998	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	ELSE_30	ELSE_31	IF_105	ELSE_32	IF_107	CALL_41
0x3494	    0x48c78570ffff	      mov qword [rbp - 0x90], 0x7fffffff	      2000	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	ELSE_30	ELSE_31	IF_105	ELSE_32	IF_107
0x349f	            0xeb22	                           jmp 0x4003503	      2000	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	ELSE_30	ELSE_31	IF_105	ELSE_32	IF_107
0x34a1	    0x8b952cffffff	             mov edx, dword [rbp - 0xd4]	      2001	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	ELSE_30	ELSE_31	IF_105	ELSE_32	ELSE_33	IF_108
0x34a7	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	      2001	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	ELSE_30	ELSE_31	IF_105	ELSE_32	ELSE_33	IF_108
0x34ad	             0x1d0	                            add eax, edx	      2001	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	ELSE_30	ELSE_31	IF_105	ELSE_32	ELSE_33	IF_108
0x34af	    0x3b8514ffffff	             cmp eax, dword [rbp - 0xec]	      2001	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	ELSE_30	ELSE_31	IF_105	ELSE_32	ELSE_33	IF_108
0x34b5	            0x7d0c	                           jge 0x4003503	      2001	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	ELSE_30	ELSE_31	IF_105	ELSE_32	ELSE_33	IF_108
0x34b7	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	      2004	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	ELSE_30	ELSE_31	IF_105	ELSE_32	ELSE_33	IF_108
0x34bd	     0x18514ffffff	             add dword [rbp - 0xec], eax	      2004	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	ELSE_30	ELSE_31	IF_105	ELSE_32	ELSE_33	IF_108
0x34c3	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2010	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109
0x34ca	    0x483dffffff7f	                     cmp rax, 0x7fffffff	      2010	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109
0x34d0	     0xf8408030000	                            je 0x400381e	      2010	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109
0x34d6	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	      2010	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109
0x34dc	            0x4898	                                    cdqe	      2010	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109
0x34de	        0x483b4590	             cmp rax, qword [rbp - 0x70]	      2010	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109
0x34e2	     0xf84f6020000	                            je 0x400381e	      2010	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109
0x34e8	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	      2012	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110
0x34ee	            0x4898	                                    cdqe	      2012	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110
0x34f0	        0x483b4590	             cmp rax, qword [rbp - 0x70]	      2012	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110
0x34f4	     0xf8e64010000	                           jle 0x400369e	      2012	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110
0x34fa	    0x8b952cffffff	             mov edx, dword [rbp - 0xd4]	      2014	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110
0x3500	    0x8b854cffffff	             mov eax, dword [rbp - 0xb4]	      2014	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110
0x3506	             0x1d0	                            add eax, edx	      2014	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110
0x3508	    0x898550ffffff	             mov dword [rbp - 0xb0], eax	      2014	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110
0x350e	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2020	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11	IF_111
0x3515	    0x8b80f8000000	            mov eax, dword [rax + 0xf8] 	      2020	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11	IF_111
0x351b	    0x3b8540ffffff	             cmp eax, dword [rbp - 0xc0]	      2020	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11	IF_111
0x3521	            0x7f18	                            jg 0x400357b	      2020	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11	IF_111
0x3523	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2022	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11	IF_111
0x3527	            0x89c2	                            mov edx, eax	      2022	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11	IF_111
0x3529	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2022	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11	IF_111
0x3530	    0x8990f8000000	             mov dword [rax + 0xf8], edx	      2022	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11	IF_111
0x3536	      0xe900010000	                           jmp 0x400367b	      2023	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11	IF_111
0x353b	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2025	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11
0x3542	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      2025	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11
0x3549	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      2025	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11
0x354d	          0x4889d0	                            mov rax, rdx	      2025	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11
0x3550	          0x4801c0	                            add rax, rax	      2025	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11
0x3553	          0x4801d0	                            add rax, rdx	      2025	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11
0x3556	        0x48c1e003	                              shl rax, 3	      2025	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11
0x355a	        0x488d1401	                    lea rdx, [rcx + rax]	      2025	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11
0x355e	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2025	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11
0x3565	    0x488bb0000100	           mov rsi, qword [rax + 0x100] 	      2025	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11
0x356c	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	      2025	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11
0x3572	          0x4863c8	                         movsxd rcx, eax	      2025	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11
0x3575	          0x4889c8	                            mov rax, rcx	      2025	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11
0x3578	          0x4801c0	                            add rax, rax	      2025	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11
0x357b	          0x4801c8	                            add rax, rcx	      2025	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11
0x357e	        0x48c1e003	                              shl rax, 3	      2025	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11
0x3582	          0x4801f0	                            add rax, rsi	      2025	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11
0x3585	          0x488b08	                    mov rcx, qword [rax]	      2025	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11
0x3588	          0x48890a	                    mov qword [rdx], rcx	      2025	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11
0x358b	        0x488b4808	                mov rcx, qword [rax + 8]	      2025	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11
0x358f	        0x48894a08	                mov qword [rdx + 8], rcx	      2025	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11
0x3593	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2025	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11
0x3597	        0x48894210	             mov qword [rdx + 0x10], rax	      2025	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11
0x359b	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2027	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11	IF_112
0x35a2	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      2027	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11	IF_112
0x35a9	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      2027	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11	IF_112
0x35ad	          0x4889d0	                            mov rax, rdx	      2027	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11	IF_112
0x35b0	          0x4801c0	                            add rax, rax	      2027	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11	IF_112
0x35b3	          0x4801d0	                            add rax, rdx	      2027	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11	IF_112
0x35b6	        0x48c1e003	                              shl rax, 3	      2027	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11	IF_112
0x35ba	          0x4801c8	                            add rax, rcx	      2027	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11	IF_112
0x35bd	         0xfb74008	               movzx eax, word [rax + 8]	      2027	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11	IF_112
0x35c1	           0xfb7d0	                           movzx edx, ax	      2027	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11	IF_112
0x35c4	    0x8b8550ffffff	             mov eax, dword [rbp - 0xb0]	      2027	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11	IF_112
0x35ca	             0x1c2	                            add edx, eax	      2027	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11	IF_112
0x35cc	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2028	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11	IF_112
0x35d3	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2028	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11	IF_112
0x35d9	            0x39c2	                            cmp edx, eax	      2027	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11	IF_112
0x35db	            0x7e18	                           jle 0x4003635	      2027	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11	IF_112
0x35dd	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2030	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11	IF_112
0x35e1	          0x83c001	                              add eax, 1	      2030	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11	IF_112
0x35e4	            0x89c2	                            mov edx, eax	      2030	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11	IF_112
0x35e6	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2030	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11	IF_112
0x35ed	    0x8990f8000000	             mov dword [rax + 0xf8], edx	      2030	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11	IF_112
0x35f3	            0xeb46	                           jmp 0x400367b	      2031	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11	IF_112
0x35f5	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2033	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11
0x35fc	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      2033	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11
0x3603	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2033	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11
0x3607	        0x488d5001	                      lea rdx, [rax + 1]	      2033	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11
0x360b	        0x48895590	             mov qword [rbp - 0x70], rdx	      2033	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11
0x360f	          0x4889c2	                            mov rdx, rax	      2033	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11
0x3612	          0x4889d0	                            mov rax, rdx	      2033	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11
0x3615	          0x4801c0	                            add rax, rax	      2033	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11
0x3618	          0x4801d0	                            add rax, rdx	      2033	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11
0x361b	        0x48c1e003	                              shl rax, 3	      2033	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11
0x361f	          0x4801c8	                            add rax, rcx	      2033	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11
0x3622	         0xfb74008	               movzx eax, word [rax + 8]	      2033	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11
0x3626	           0xfb7c0	                           movzx eax, ax	      2033	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11
0x3629	     0x18550ffffff	             add dword [rbp - 0xb0], eax	      2033	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11
0x362f	    0x838540ffffff	               add dword [rbp - 0xc0], 1	      2034	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11
0x3636	      0xe9d3feffff	                           jmp 0x400354e	      2035	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	FOR_11
0x363b	    0x8b8520ffffff	             mov eax, dword [rbp - 0xe0]	      2036	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	IF_113
0x3641	    0x3b8550ffffff	             cmp eax, dword [rbp - 0xb0]	      2036	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	IF_113
0x3647	     0xf8e91010000	                           jle 0x400381e	      2036	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	IF_113
0x364d	    0x8b8550ffffff	             mov eax, dword [rbp - 0xb0]	      2037	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	IF_113
0x3653	    0x898520ffffff	             mov dword [rbp - 0xe0], eax	      2037	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	IF_113
0x3659	      0xe980010000	                           jmp 0x400381e	      2037	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	IF_110	IF_113
0x365e	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	      2042	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34
0x3664	            0x4898	                                    cdqe	      2042	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34
0x3666	        0x48294590	             sub qword [rbp - 0x70], rax	      2042	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34
0x366a	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2043	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34
0x3671	    0x8b80f8000000	            mov eax, dword [rax + 0xf8] 	      2043	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34
0x3677	            0x89c2	                            mov edx, eax	      2043	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34
0x3679	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2043	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34
0x367d	             0x1d0	                            add eax, edx	      2043	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34
0x367f	            0x89c2	                            mov edx, eax	      2043	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34
0x3681	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2043	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34
0x3688	    0x8990f8000000	             mov dword [rax + 0xf8], edx	      2043	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34
0x368e	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2044	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	IF_114
0x3695	    0x8b90f8000000	            mov edx, dword [rax + 0xf8] 	      2044	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	IF_114
0x369b	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2044	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	IF_114
0x36a2	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2044	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	IF_114
0x36a8	            0x39c2	                            cmp edx, eax	      2044	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	IF_114
0x36aa	            0x7e1a	                           jle 0x4003706	      2044	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	IF_114
0x36ac	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2045	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	IF_114
0x36b3	    0x8b90a0000000	            mov edx, dword [rax + 0xa0] 	      2045	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	IF_114
0x36b9	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2045	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	IF_114
0x36c0	    0x8990f8000000	             mov dword [rax + 0xf8], edx	      2045	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	IF_114
0x36c6	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2046	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	FOR_12
0x36cd	    0x8b80f8000000	            mov eax, dword [rax + 0xf8] 	      2046	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	FOR_12
0x36d3	    0x898540ffffff	             mov dword [rbp - 0xc0], eax	      2046	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	FOR_12
0x36d9	            0xeb72	                           jmp 0x400378d	      2046	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	FOR_12
0x36db	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2047	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	FOR_12
0x36e2	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      2047	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	FOR_12
0x36e9	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	      2047	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	FOR_12
0x36ef	          0x4863d0	                         movsxd rdx, eax	      2047	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	FOR_12
0x36f2	          0x4889d0	                            mov rax, rdx	      2047	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	FOR_12
0x36f5	          0x4801c0	                            add rax, rax	      2047	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	FOR_12
0x36f8	          0x4801d0	                            add rax, rdx	      2047	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	FOR_12
0x36fb	        0x48c1e003	                              shl rax, 3	      2047	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	FOR_12
0x36ff	        0x488d1401	                    lea rdx, [rcx + rax]	      2047	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	FOR_12
0x3703	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2047	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	FOR_12
0x370a	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      2047	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	FOR_12
0x3711	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	      2047	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	FOR_12
0x3717	            0x4898	                                    cdqe	      2047	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	FOR_12
0x3719	        0x482b4590	             sub rax, qword [rbp - 0x70]	      2047	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	FOR_12
0x371d	          0x4889c6	                            mov rsi, rax	      2047	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	FOR_12
0x3720	          0x4889f0	                            mov rax, rsi	      2047	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	FOR_12
0x3723	          0x4801c0	                            add rax, rax	      2047	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	FOR_12
0x3726	          0x4801f0	                            add rax, rsi	      2047	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	FOR_12
0x3729	        0x48c1e003	                              shl rax, 3	      2047	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	FOR_12
0x372d	          0x4801c8	                            add rax, rcx	      2047	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	FOR_12
0x3730	          0x488b08	                    mov rcx, qword [rax]	      2047	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	FOR_12
0x3733	          0x48890a	                    mov qword [rdx], rcx	      2047	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	FOR_12
0x3736	        0x488b4808	                mov rcx, qword [rax + 8]	      2047	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	FOR_12
0x373a	        0x48894a08	                mov qword [rdx + 8], rcx	      2047	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	FOR_12
0x373e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2047	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	FOR_12
0x3742	        0x48894210	             mov qword [rdx + 0x10], rax	      2047	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	FOR_12
0x3746	    0x83ad40ffffff	               sub dword [rbp - 0xc0], 1	      2046	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	FOR_12
0x374d	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	      2046	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	FOR_12
0x3753	            0x4898	                                    cdqe	      2046	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	FOR_12
0x3755	        0x482b4590	             sub rax, qword [rbp - 0x70]	      2046	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	FOR_12
0x3759	          0x4889c2	                            mov rdx, rax	      2046	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	FOR_12
0x375c	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      2046	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	FOR_12
0x3762	            0x4898	                                    cdqe	      2046	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	FOR_12
0x3764	          0x4839c2	                            cmp rdx, rax	      2046	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	FOR_12
0x3767	     0xf8d6effffff	                           jge 0x400371b	      2046	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	FOR_12
0x376d	            0xeb61	                           jmp 0x4003810	      2052	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	WHILE_5
0x376f	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2054	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	WHILE_5
0x3776	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      2054	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	WHILE_5
0x377d	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	      2054	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	WHILE_5
0x3783	          0x4863d0	                         movsxd rdx, eax	      2054	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	WHILE_5
0x3786	          0x4889d0	                            mov rax, rdx	      2054	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	WHILE_5
0x3789	          0x4801c0	                            add rax, rax	      2054	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	WHILE_5
0x378c	          0x4801d0	                            add rax, rdx	      2054	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	WHILE_5
0x378f	        0x48c1e003	                              shl rax, 3	      2054	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	WHILE_5
0x3793	          0x4801c8	                            add rax, rcx	      2054	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	WHILE_5
0x3796	    0x66c740080000	                   mov word [rax + 8], 0	      2054	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	WHILE_5
0x379c	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2055	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	WHILE_5
0x37a3	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      2055	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	WHILE_5
0x37aa	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	      2055	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	WHILE_5
0x37b0	          0x8d50ff	                      lea edx, [rax - 1]	      2055	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	WHILE_5
0x37b3	    0x899540ffffff	             mov dword [rbp - 0xc0], edx	      2055	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	WHILE_5
0x37b9	          0x4863d0	                         movsxd rdx, eax	      2055	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	WHILE_5
0x37bc	          0x4889d0	                            mov rax, rdx	      2055	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	WHILE_5
0x37bf	          0x4801c0	                            add rax, rax	      2055	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	WHILE_5
0x37c2	          0x4801d0	                            add rax, rdx	      2055	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	WHILE_5
0x37c5	        0x48c1e003	                              shl rax, 3	      2055	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	WHILE_5
0x37c9	          0x4801c8	                            add rax, rcx	      2055	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	WHILE_5
0x37cc	        0xc6400a00	                 mov byte [rax + 0xa], 0	      2055	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	WHILE_5
0x37d0	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	      2052	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	WHILE_5
0x37d6	    0x3b8530ffffff	             cmp eax, dword [rbp - 0xd0]	      2052	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	WHILE_5
0x37dc	            0x7d91	                           jge 0x40037af	      2052	screen.c	FUNCTION_20	FOR_8	IF_93	IF_95	ELSE_26	IF_109	ELSE_34	WHILE_5
0x37de	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	      2068	screen.c	FUNCTION_20	FOR_8	IF_93	CALL_42
0x37e2	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2068	screen.c	FUNCTION_20	FOR_8	IF_93	CALL_42
0x37e9	      0xba00000000	                              mov edx, 0	      2068	screen.c	FUNCTION_20	FOR_8	IF_93	CALL_42
0x37ee	          0x4889ce	                            mov rsi, rcx	      2068	screen.c	FUNCTION_20	FOR_8	IF_93	CALL_42
0x37f1	          0x4889c7	                            mov rdi, rax	      2068	screen.c	FUNCTION_20	FOR_8	IF_93	CALL_42
0x37f4	      0xe800000000	                          call 0x4003839	      2068	screen.c	FUNCTION_20	FOR_8	IF_93	CALL_42
0x37f9	        0x48894598	             mov qword [rbp - 0x68], rax	      2068	screen.c	FUNCTION_20	FOR_8	IF_93	CALL_42
0x37fd	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      2069	screen.c	FUNCTION_20	FOR_8	IF_93	IF_115
0x3802	     0xf84a4000000	                            je 0x40038ec	      2069	screen.c	FUNCTION_20	FOR_8	IF_93	IF_115
0x3808	    0x8b8d2cffffff	             mov ecx, dword [rbp - 0xd4]	      2071	screen.c	FUNCTION_20	FOR_8	IF_93	IF_115	CALL_43
0x380e	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      2071	screen.c	FUNCTION_20	FOR_8	IF_93	IF_115	CALL_43
0x3812	        0x488b7598	             mov rsi, qword [rbp - 0x68]	      2071	screen.c	FUNCTION_20	FOR_8	IF_93	IF_115	CALL_43
0x3816	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2071	screen.c	FUNCTION_20	FOR_8	IF_93	IF_115	CALL_43
0x381d	          0x4189c8	                            mov r8d, ecx	      2071	screen.c	FUNCTION_20	FOR_8	IF_93	IF_115	CALL_43
0x3820	          0x4889d1	                            mov rcx, rdx	      2071	screen.c	FUNCTION_20	FOR_8	IF_93	IF_115	CALL_43
0x3823	      0xba00000000	                              mov edx, 0	      2071	screen.c	FUNCTION_20	FOR_8	IF_93	IF_115	CALL_43
0x3828	          0x4889c7	                            mov rdi, rax	      2071	screen.c	FUNCTION_20	FOR_8	IF_93	IF_115	CALL_43
0x382b	      0xe8c8150000	                      call sym.fold_line	      2071	screen.c	FUNCTION_20	FOR_8	IF_93	IF_115	CALL_43
0x3830	    0x83852cffffff	               add dword [rbp - 0xd4], 1	      2072	screen.c	FUNCTION_20	FOR_8	IF_93	IF_115
0x3837	      0x48836d9801	               sub qword [rbp - 0x68], 1	      2073	screen.c	FUNCTION_20	FOR_8	IF_93	IF_115
0x383c	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2074	screen.c	FUNCTION_20	FOR_8	IF_93	IF_115
0x3843	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      2074	screen.c	FUNCTION_20	FOR_8	IF_93	IF_115
0x384a	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      2074	screen.c	FUNCTION_20	FOR_8	IF_93	IF_115
0x3850	          0x4863d0	                         movsxd rdx, eax	      2074	screen.c	FUNCTION_20	FOR_8	IF_93	IF_115
0x3853	          0x4889d0	                            mov rax, rdx	      2074	screen.c	FUNCTION_20	FOR_8	IF_93	IF_115
0x3856	          0x4801c0	                            add rax, rax	      2074	screen.c	FUNCTION_20	FOR_8	IF_93	IF_115
0x3859	          0x4801d0	                            add rax, rdx	      2074	screen.c	FUNCTION_20	FOR_8	IF_93	IF_115
0x385c	        0x48c1e003	                              shl rax, 3	      2074	screen.c	FUNCTION_20	FOR_8	IF_93	IF_115
0x3860	          0x4801c8	                            add rax, rcx	      2074	screen.c	FUNCTION_20	FOR_8	IF_93	IF_115
0x3863	        0xc6400b01	                 mov byte [rax + 0xb], 1	      2074	screen.c	FUNCTION_20	FOR_8	IF_93	IF_115
0x3867	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2075	screen.c	FUNCTION_20	FOR_8	IF_93	IF_115
0x386e	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      2075	screen.c	FUNCTION_20	FOR_8	IF_93	IF_115
0x3875	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      2075	screen.c	FUNCTION_20	FOR_8	IF_93	IF_115
0x387b	          0x4863d0	                         movsxd rdx, eax	      2075	screen.c	FUNCTION_20	FOR_8	IF_93	IF_115
0x387e	          0x4889d0	                            mov rax, rdx	      2075	screen.c	FUNCTION_20	FOR_8	IF_93	IF_115
0x3881	          0x4801c0	                            add rax, rax	      2075	screen.c	FUNCTION_20	FOR_8	IF_93	IF_115
0x3884	          0x4801d0	                            add rax, rdx	      2075	screen.c	FUNCTION_20	FOR_8	IF_93	IF_115
0x3887	        0x48c1e003	                              shl rax, 3	      2075	screen.c	FUNCTION_20	FOR_8	IF_93	IF_115
0x388b	          0x4801c8	                            add rax, rcx	      2075	screen.c	FUNCTION_20	FOR_8	IF_93	IF_115
0x388e	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	      2075	screen.c	FUNCTION_20	FOR_8	IF_93	IF_115
0x3892	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      2075	screen.c	FUNCTION_20	FOR_8	IF_93	IF_115
0x3896	          0x4801ca	                            add rdx, rcx	      2075	screen.c	FUNCTION_20	FOR_8	IF_93	IF_115
0x3899	        0x48895010	             mov qword [rax + 0x10], rdx	      2075	screen.c	FUNCTION_20	FOR_8	IF_93	IF_115
0x389d	    0xc78544ffffff	               mov dword [rbp - 0xbc], 3	      2077	screen.c	FUNCTION_20	FOR_8	IF_93	IF_115
0x38a7	      0xe918020000	                           jmp 0x4003b04	      2077	screen.c	FUNCTION_20	FOR_8	IF_93	IF_115
0x38ac	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2082	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x38b3	    0x8b80f8000000	            mov eax, dword [rax + 0xf8] 	      2082	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x38b9	    0x3b8530ffffff	             cmp eax, dword [rbp - 0xd0]	      2082	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x38bf	     0xf8e05010000	                           jle 0x4003a0a	      2082	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x38c5	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2083	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x38cc	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      2083	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x38d3	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      2083	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x38d9	          0x4863d0	                         movsxd rdx, eax	      2083	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x38dc	          0x4889d0	                            mov rax, rdx	      2083	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x38df	          0x4801c0	                            add rax, rax	      2083	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x38e2	          0x4801d0	                            add rax, rdx	      2083	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x38e5	        0x48c1e003	                              shl rax, 3	      2083	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x38e9	          0x4801c8	                            add rax, rcx	      2083	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x38ec	         0xfb6400a	            movzx eax, byte [rax + 0xa] 	      2083	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x38f0	            0x84c0	                             test al, al	      2083	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x38f2	     0xf84d2000000	                            je 0x4003a0a	      2083	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x38f8	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2084	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x38ff	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      2084	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x3906	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      2084	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x390c	          0x4863d0	                         movsxd rdx, eax	      2084	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x390f	          0x4889d0	                            mov rax, rdx	      2084	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x3912	          0x4801c0	                            add rax, rax	      2084	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x3915	          0x4801d0	                            add rax, rdx	      2084	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x3918	        0x48c1e003	                              shl rax, 3	      2084	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x391c	          0x4801c8	                            add rax, rcx	      2084	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x391f	          0x488b00	                    mov rax, qword [rax]	      2084	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x3922	        0x483b4588	             cmp rax, qword [rbp - 0x78]	      2084	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x3926	     0xf859e000000	                           jne 0x4003a0a	      2084	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x392c	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2085	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x3933	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2085	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x3937	        0x483b4588	             cmp rax, qword [rbp - 0x78]	      2085	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x393b	     0xf8d89000000	                           jge 0x4003a0a	      2085	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x3941	    0x8b0500000000	            mov eax, dword [0x04003987] 	      2086	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x3947	          0x83e003	                              and eax, 3	      2086	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x394a	            0x85c0	                           test eax, eax	      2086	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x394c	            0x757c	                           jne 0x4003a0a	      2086	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x394e	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2087	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x3955	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      2087	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x395c	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      2087	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x3962	          0x4863d0	                         movsxd rdx, eax	      2087	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x3965	          0x4889d0	                            mov rax, rdx	      2087	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x3968	          0x4801c0	                            add rax, rax	      2087	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x396b	          0x4801d0	                            add rax, rdx	      2087	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x396e	        0x48c1e003	                              shl rax, 3	      2087	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x3972	          0x4801c8	                            add rax, rcx	      2087	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x3975	         0xfb74008	               movzx eax, word [rax + 8]	      2087	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x3979	           0xfb7d0	                           movzx edx, ax	      2087	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x397c	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      2087	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x3982	             0x1c2	                            add edx, eax	      2087	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x3984	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2087	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x398b	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2087	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x3991	            0x39c2	                            cmp edx, eax	      2087	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x3993	            0x7e35	                           jle 0x4003a0a	      2087	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x3995	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      2089	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116	CALL_44
0x3999	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2089	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116	CALL_44
0x39a0	          0x4889d6	                            mov rsi, rdx	      2089	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116	CALL_44
0x39a3	          0x4889c7	                            mov rdi, rax	      2089	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116	CALL_44
0x39a6	      0xe800000000	                          call 0x40039eb	      2089	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116	CALL_44
0x39ab	            0x85c0	                           test eax, eax	      2089	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116	CALL_44
0x39ad	            0x751b	                           jne 0x4003a0a	      2089	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116	CALL_44
0x39af	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2095	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x39b6	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2095	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x39bc	          0x83c001	                              add eax, 1	      2095	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x39bf	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	      2095	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x39c5	      0xe9fa000000	                           jmp 0x4003b04	      2095	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_35	IF_116
0x39ca	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      2100	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36	CALL_45
0x39ce	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2100	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36	CALL_45
0x39d5	          0x4889d6	                            mov rsi, rdx	      2100	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36	CALL_45
0x39d8	          0x4889c7	                            mov rdi, rax	      2100	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36	CALL_45
0x39db	      0xe815bf0000	              call sym.prepare_search_hl	      2100	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36	CALL_45
0x39e0	      0x48837da000	               cmp qword [rbp - 0x60], 0	      2104	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36	IF_117
0x39e5	            0x7431	                            je 0x4003a58	      2104	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36	IF_117
0x39e7	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2104	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36	IF_117
0x39eb	        0x4883c001	                              add rax, 1	      2104	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36	IF_117
0x39ef	        0x483b4588	             cmp rax, qword [rbp - 0x78]	      2104	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36	IF_117
0x39f3	            0x7d23	                           jge 0x4003a58	      2104	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36	IF_117
0x39f5	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2105	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36	IF_117	CALL_46
0x39fc	          0x4889c7	                            mov rdi, rax	      2105	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36	IF_117	CALL_46
0x39ff	      0xe800000000	                          call 0x4003a44	      2105	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36	IF_117	CALL_46
0x3a04	            0x85c0	                           test eax, eax	      2105	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36	IF_117	CALL_46
0x3a06	            0x7410	                            je 0x4003a58	      2105	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36	IF_117	CALL_46
0x3a08	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2106	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36	CALL_47
0x3a0c	        0x4883c001	                              add rax, 1	      2106	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36	CALL_47
0x3a10	          0x4889c7	                            mov rdi, rax	      2106	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36	CALL_47
0x3a13	      0xe800000000	                          call 0x4003a58	      2106	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36	CALL_47
0x3a18	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2112	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36	CALL_48
0x3a1f	          0x4885c0	                           test rax, rax	      2112	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36	CALL_48
0x3a22	           0xf94c0	                                 sete al	      2112	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36	CALL_48
0x3a25	           0xfb6f8	                           movzx edi, al	      2112	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36	CALL_48
0x3a28	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2112	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36	CALL_48
0x3a2f	    0x8b88a0000000	            mov ecx, dword [rax + 0xa0] 	      2112	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36	CALL_48
0x3a35	    0x8b9534ffffff	             mov edx, dword [rbp - 0xcc]	      2112	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36	CALL_48
0x3a3b	        0x488b7588	             mov rsi, qword [rbp - 0x78]	      2112	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36	CALL_48
0x3a3f	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2112	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36	CALL_48
0x3a46	          0x4189f8	                            mov r8d, edi	      2112	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36	CALL_48
0x3a49	          0x4889c7	                            mov rdi, rax	      2112	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36	CALL_48
0x3a4c	      0xe885240000	                       call sym.win_line	      2112	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36	CALL_48
0x3a51	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	      2112	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36	CALL_48
0x3a57	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2115	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36
0x3a5e	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      2115	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36
0x3a65	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      2115	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36
0x3a6b	          0x4863d0	                         movsxd rdx, eax	      2115	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36
0x3a6e	          0x4889d0	                            mov rax, rdx	      2115	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36
0x3a71	          0x4801c0	                            add rax, rax	      2115	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36
0x3a74	          0x4801d0	                            add rax, rdx	      2115	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36
0x3a77	        0x48c1e003	                              shl rax, 3	      2115	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36
0x3a7b	          0x4801c8	                            add rax, rcx	      2115	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36
0x3a7e	        0xc6400b00	                 mov byte [rax + 0xb], 0	      2115	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36
0x3a82	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2116	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36
0x3a89	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      2116	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36
0x3a90	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      2116	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36
0x3a96	          0x4863d0	                         movsxd rdx, eax	      2116	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36
0x3a99	          0x4889d0	                            mov rax, rdx	      2116	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36
0x3a9c	          0x4801c0	                            add rax, rax	      2116	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36
0x3a9f	          0x4801d0	                            add rax, rdx	      2116	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36
0x3aa2	        0x48c1e003	                              shl rax, 3	      2116	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36
0x3aa6	        0x488d1401	                    lea rdx, [rcx + rax]	      2116	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36
0x3aaa	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2116	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36
0x3aae	        0x48894210	             mov qword [rdx + 0x10], rax	      2116	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36
0x3ab2	    0xc78544ffffff	               mov dword [rbp - 0xbc], 2	      2119	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36
0x3abc	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2120	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36
0x3ac0	        0x488945a0	             mov qword [rbp - 0x60], rax	      2120	screen.c	FUNCTION_20	FOR_8	IF_93	ELSE_36
0x3ac4	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2124	screen.c	FUNCTION_20	FOR_8	IF_93
0x3acb	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      2124	screen.c	FUNCTION_20	FOR_8	IF_93
0x3ad2	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      2124	screen.c	FUNCTION_20	FOR_8	IF_93
0x3ad8	          0x4863d0	                         movsxd rdx, eax	      2124	screen.c	FUNCTION_20	FOR_8	IF_93
0x3adb	          0x4889d0	                            mov rax, rdx	      2124	screen.c	FUNCTION_20	FOR_8	IF_93
0x3ade	          0x4801c0	                            add rax, rax	      2124	screen.c	FUNCTION_20	FOR_8	IF_93
0x3ae1	          0x4801d0	                            add rax, rdx	      2124	screen.c	FUNCTION_20	FOR_8	IF_93
0x3ae4	        0x48c1e003	                              shl rax, 3	      2124	screen.c	FUNCTION_20	FOR_8	IF_93
0x3ae8	        0x488d1401	                    lea rdx, [rcx + rax]	      2124	screen.c	FUNCTION_20	FOR_8	IF_93
0x3aec	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2124	screen.c	FUNCTION_20	FOR_8	IF_93
0x3af0	          0x488902	                    mov qword [rdx], rax	      2124	screen.c	FUNCTION_20	FOR_8	IF_93
0x3af3	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2125	screen.c	FUNCTION_20	FOR_8	IF_93
0x3afa	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      2125	screen.c	FUNCTION_20	FOR_8	IF_93
0x3b01	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      2125	screen.c	FUNCTION_20	FOR_8	IF_93
0x3b07	          0x4863d0	                         movsxd rdx, eax	      2125	screen.c	FUNCTION_20	FOR_8	IF_93
0x3b0a	          0x4889d0	                            mov rax, rdx	      2125	screen.c	FUNCTION_20	FOR_8	IF_93
0x3b0d	          0x4801c0	                            add rax, rax	      2125	screen.c	FUNCTION_20	FOR_8	IF_93
0x3b10	          0x4801d0	                            add rax, rdx	      2125	screen.c	FUNCTION_20	FOR_8	IF_93
0x3b13	        0x48c1e003	                              shl rax, 3	      2125	screen.c	FUNCTION_20	FOR_8	IF_93
0x3b17	          0x4801c8	                            add rax, rcx	      2125	screen.c	FUNCTION_20	FOR_8	IF_93
0x3b1a	        0xc6400a01	                 mov byte [rax + 0xa], 1	      2125	screen.c	FUNCTION_20	FOR_8	IF_93
0x3b1e	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2130	screen.c	FUNCTION_20	FOR_8	IF_93	IF_118
0x3b25	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2130	screen.c	FUNCTION_20	FOR_8	IF_93	IF_118
0x3b2b	    0x3b852cffffff	             cmp eax, dword [rbp - 0xd4]	      2130	screen.c	FUNCTION_20	FOR_8	IF_93	IF_118
0x3b31	            0x7c24	                            jl 0x4003b97	      2130	screen.c	FUNCTION_20	FOR_8	IF_93	IF_118
0x3b33	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2130	screen.c	FUNCTION_20	FOR_8	IF_93	IF_118
0x3b3a	    0x8b909c000000	            mov edx, dword [rax + 0x9c] 	      2130	screen.c	FUNCTION_20	FOR_8	IF_93	IF_118
0x3b40	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	      2130	screen.c	FUNCTION_20	FOR_8	IF_93	IF_118
0x3b46	             0x1d0	                            add eax, edx	      2130	screen.c	FUNCTION_20	FOR_8	IF_93	IF_118
0x3b48	          0x4863d0	                         movsxd rdx, eax	      2130	screen.c	FUNCTION_20	FOR_8	IF_93	IF_118
0x3b4b	    0x488b05000000	            mov rax, qword [0x04003b92] 	      2130	screen.c	FUNCTION_20	FOR_8	IF_93	IF_118
0x3b52	          0x4839c2	                            cmp rdx, rax	      2130	screen.c	FUNCTION_20	FOR_8	IF_93	IF_118
0x3b55	            0x7c5e	                            jl 0x4003bf5	      2130	screen.c	FUNCTION_20	FOR_8	IF_93	IF_118
0x3b57	    0x8b0500000000	            mov eax, dword [0x04003b9d] 	      2133	screen.c	FUNCTION_20	FOR_8	IF_93	IF_118	IF_119
0x3b5d	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2133	screen.c	FUNCTION_20	FOR_8	IF_93	IF_118	IF_119
0x3b60	            0x7547	                           jne 0x4003be9	      2133	screen.c	FUNCTION_20	FOR_8	IF_93	IF_118	IF_119
0x3b62	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2134	screen.c	FUNCTION_20	FOR_8	IF_93	IF_118	CALL_49
0x3b69	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      2134	screen.c	FUNCTION_20	FOR_8	IF_93	IF_118	CALL_49
0x3b70	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      2134	screen.c	FUNCTION_20	FOR_8	IF_93	IF_118	CALL_49
0x3b76	          0x4863d0	                         movsxd rdx, eax	      2134	screen.c	FUNCTION_20	FOR_8	IF_93	IF_118	CALL_49
0x3b79	          0x4889d0	                            mov rax, rdx	      2134	screen.c	FUNCTION_20	FOR_8	IF_93	IF_118	CALL_49
0x3b7c	          0x4801c0	                            add rax, rax	      2134	screen.c	FUNCTION_20	FOR_8	IF_93	IF_118	CALL_49
0x3b7f	          0x4801d0	                            add rax, rdx	      2134	screen.c	FUNCTION_20	FOR_8	IF_93	IF_118	CALL_49
0x3b82	        0x48c1e003	                              shl rax, 3	      2134	screen.c	FUNCTION_20	FOR_8	IF_93	IF_118	CALL_49
0x3b86	        0x488d1c01	                    lea rbx, [rcx + rax]	      2134	screen.c	FUNCTION_20	FOR_8	IF_93	IF_118	CALL_49
0x3b8a	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	      2134	screen.c	FUNCTION_20	FOR_8	IF_93	IF_118	CALL_49
0x3b8e	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2134	screen.c	FUNCTION_20	FOR_8	IF_93	IF_118	CALL_49
0x3b95	      0xba01000000	                              mov edx, 1	      2134	screen.c	FUNCTION_20	FOR_8	IF_93	IF_118	CALL_49
0x3b9a	          0x4889ce	                            mov rsi, rcx	      2134	screen.c	FUNCTION_20	FOR_8	IF_93	IF_118	CALL_49
0x3b9d	          0x4889c7	                            mov rdi, rax	      2134	screen.c	FUNCTION_20	FOR_8	IF_93	IF_118	CALL_49
0x3ba0	      0xe800000000	                          call 0x4003be5	      2134	screen.c	FUNCTION_20	FOR_8	IF_93	IF_118	CALL_49
0x3ba5	        0x66894308	                  mov word [rbx + 8], ax	      2134	screen.c	FUNCTION_20	FOR_8	IF_93	IF_118	CALL_49
0x3ba9	    0x838530ffffff	               add dword [rbp - 0xd0], 1	      2135	screen.c	FUNCTION_20	FOR_8	IF_93	IF_118
0x3bb0	      0xe911010000	                           jmp 0x4003d06	      2136	screen.c	FUNCTION_20	FOR_8	IF_93	IF_118
0x3bb5	    0x8b0500000000	            mov eax, dword [0x04003bfb] 	      2138	screen.c	FUNCTION_20	FOR_8	IF_93	IF_120
0x3bbb	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2138	screen.c	FUNCTION_20	FOR_8	IF_93	IF_120
0x3bbe	            0x753d	                           jne 0x4003c3d	      2138	screen.c	FUNCTION_20	FOR_8	IF_93	IF_120
0x3bc0	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2139	screen.c	FUNCTION_20	FOR_8	IF_93	IF_120
0x3bc7	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      2139	screen.c	FUNCTION_20	FOR_8	IF_93	IF_120
0x3bce	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      2139	screen.c	FUNCTION_20	FOR_8	IF_93	IF_120
0x3bd4	          0x4863d0	                         movsxd rdx, eax	      2139	screen.c	FUNCTION_20	FOR_8	IF_93	IF_120
0x3bd7	          0x4889d0	                            mov rax, rdx	      2139	screen.c	FUNCTION_20	FOR_8	IF_93	IF_120
0x3bda	          0x4801c0	                            add rax, rax	      2139	screen.c	FUNCTION_20	FOR_8	IF_93	IF_120
0x3bdd	          0x4801d0	                            add rax, rdx	      2139	screen.c	FUNCTION_20	FOR_8	IF_93	IF_120
0x3be0	        0x48c1e003	                              shl rax, 3	      2139	screen.c	FUNCTION_20	FOR_8	IF_93	IF_120
0x3be4	          0x4801c8	                            add rax, rcx	      2139	screen.c	FUNCTION_20	FOR_8	IF_93	IF_120
0x3be7	    0x8b952cffffff	             mov edx, dword [rbp - 0xd4]	      2139	screen.c	FUNCTION_20	FOR_8	IF_93	IF_120
0x3bed	            0x89d1	                            mov ecx, edx	      2139	screen.c	FUNCTION_20	FOR_8	IF_93	IF_120
0x3bef	    0x8b9534ffffff	             mov edx, dword [rbp - 0xcc]	      2139	screen.c	FUNCTION_20	FOR_8	IF_93	IF_120
0x3bf5	            0x29d1	                            sub ecx, edx	      2139	screen.c	FUNCTION_20	FOR_8	IF_93	IF_120
0x3bf7	            0x89ca	                            mov edx, ecx	      2139	screen.c	FUNCTION_20	FOR_8	IF_93	IF_120
0x3bf9	        0x66895008	                  mov word [rax + 8], dx	      2139	screen.c	FUNCTION_20	FOR_8	IF_93	IF_120
0x3bfd	    0x838530ffffff	               add dword [rbp - 0xd0], 1	      2140	screen.c	FUNCTION_20	FOR_8	IF_93
0x3c04	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2142	screen.c	FUNCTION_20	FOR_8	IF_93
0x3c08	        0x4883c001	                              add rax, 1	      2142	screen.c	FUNCTION_20	FOR_8	IF_93
0x3c0c	        0x48014588	            add qword [rbp - 0x78], rax 	      2142	screen.c	FUNCTION_20	FOR_8	IF_93
0x3c10	      0xe993000000	                           jmp 0x4003ce8	      2142	screen.c	FUNCTION_20	FOR_8	IF_93
0x3c15	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2150	screen.c	FUNCTION_20	FOR_8	ELSE_37
0x3c1c	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      2150	screen.c	FUNCTION_20	FOR_8	ELSE_37
0x3c23	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      2150	screen.c	FUNCTION_20	FOR_8	ELSE_37
0x3c29	          0x8d5001	                      lea edx, [rax + 1]	      2150	screen.c	FUNCTION_20	FOR_8	ELSE_37
0x3c2c	    0x899530ffffff	             mov dword [rbp - 0xd0], edx	      2150	screen.c	FUNCTION_20	FOR_8	ELSE_37
0x3c32	          0x4863d0	                         movsxd rdx, eax	      2150	screen.c	FUNCTION_20	FOR_8	ELSE_37
0x3c35	          0x4889d0	                            mov rax, rdx	      2150	screen.c	FUNCTION_20	FOR_8	ELSE_37
0x3c38	          0x4801c0	                            add rax, rax	      2150	screen.c	FUNCTION_20	FOR_8	ELSE_37
0x3c3b	          0x4801d0	                            add rax, rdx	      2150	screen.c	FUNCTION_20	FOR_8	ELSE_37
0x3c3e	        0x48c1e003	                              shl rax, 3	      2150	screen.c	FUNCTION_20	FOR_8	ELSE_37
0x3c42	          0x4801c8	                            add rax, rcx	      2150	screen.c	FUNCTION_20	FOR_8	ELSE_37
0x3c45	         0xfb74008	               movzx eax, word [rax + 8]	      2150	screen.c	FUNCTION_20	FOR_8	ELSE_37
0x3c49	           0xfb7c0	                           movzx eax, ax	      2150	screen.c	FUNCTION_20	FOR_8	ELSE_37
0x3c4c	     0x1852cffffff	             add dword [rbp - 0xd4], eax	      2150	screen.c	FUNCTION_20	FOR_8	ELSE_37
0x3c52	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2151	screen.c	FUNCTION_20	FOR_8	ELSE_37	IF_121
0x3c59	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2151	screen.c	FUNCTION_20	FOR_8	ELSE_37	IF_121
0x3c5f	    0x3b852cffffff	             cmp eax, dword [rbp - 0xd4]	      2151	screen.c	FUNCTION_20	FOR_8	ELSE_37	IF_121
0x3c65	            0x7c5e	                            jl 0x4003d05	      2151	screen.c	FUNCTION_20	FOR_8	ELSE_37	IF_121
0x3c67	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2154	screen.c	FUNCTION_20	FOR_8	ELSE_37
0x3c6e	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	      2154	screen.c	FUNCTION_20	FOR_8	ELSE_37
0x3c75	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      2154	screen.c	FUNCTION_20	FOR_8	ELSE_37
0x3c7b	          0x4863d0	                         movsxd rdx, eax	      2154	screen.c	FUNCTION_20	FOR_8	ELSE_37
0x3c7e	          0x4889d0	                            mov rax, rdx	      2154	screen.c	FUNCTION_20	FOR_8	ELSE_37
0x3c81	          0x4801c0	                            add rax, rax	      2154	screen.c	FUNCTION_20	FOR_8	ELSE_37
0x3c84	          0x4801d0	                            add rax, rdx	      2154	screen.c	FUNCTION_20	FOR_8	ELSE_37
0x3c87	        0x48c1e003	                              shl rax, 3	      2154	screen.c	FUNCTION_20	FOR_8	ELSE_37
0x3c8b	        0x4883e818	                           sub rax, 0x18	      2154	screen.c	FUNCTION_20	FOR_8	ELSE_37
0x3c8f	          0x4801c8	                            add rax, rcx	      2154	screen.c	FUNCTION_20	FOR_8	ELSE_37
0x3c92	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2154	screen.c	FUNCTION_20	FOR_8	ELSE_37
0x3c96	        0x4883c001	                              add rax, 1	      2154	screen.c	FUNCTION_20	FOR_8	ELSE_37
0x3c9a	        0x48894588	             mov qword [rbp - 0x78], rax	      2154	screen.c	FUNCTION_20	FOR_8	ELSE_37
0x3c9e	    0xc78544ffffff	               mov dword [rbp - 0xbc], 1	      2159	screen.c	FUNCTION_20	FOR_8	ELSE_37
0x3ca8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2163	screen.c	FUNCTION_20	FOR_8	IF_122
0x3cac	          0x488b00	                    mov rax, qword [rax]	      2163	screen.c	FUNCTION_20	FOR_8	IF_122
0x3caf	        0x483b4588	             cmp rax, qword [rbp - 0x78]	      2163	screen.c	FUNCTION_20	FOR_8	IF_122
0x3cb3	     0xf8d62f1ffff	                           jge 0x4002e5b	      2163	screen.c	FUNCTION_20	FOR_8	IF_122
0x3cb9	    0xc78538ffffff	               mov dword [rbp - 0xc8], 1	      2165	screen.c	FUNCTION_20	FOR_8	IF_122
0x3cc3	            0xeb01	                           jmp 0x4003d06	      2166	screen.c	FUNCTION_20	FOR_8	IF_122
0x3cc5	              0x90	                                     nop	      2152	screen.c	FUNCTION_20	FOR_8	ELSE_37	IF_121
0x3cc6	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2174	screen.c	FUNCTION_20	IF_123
0x3ccd	    0x8b80f8000000	            mov eax, dword [rax + 0xf8] 	      2174	screen.c	FUNCTION_20	IF_123
0x3cd3	    0x3b8530ffffff	             cmp eax, dword [rbp - 0xd0]	      2174	screen.c	FUNCTION_20	IF_123
0x3cd9	            0x7d13	                           jge 0x4003d2e	      2174	screen.c	FUNCTION_20	IF_123
0x3cdb	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2175	screen.c	FUNCTION_20	IF_123
0x3ce2	    0x8b9530ffffff	             mov edx, dword [rbp - 0xd0]	      2175	screen.c	FUNCTION_20	IF_123
0x3ce8	    0x8990f8000000	             mov dword [rax + 0xf8], edx	      2175	screen.c	FUNCTION_20	IF_123
0x3cee	      0x48837da000	               cmp qword [rbp - 0x60], 0	      2181	screen.c	FUNCTION_20	IF_124	CALL_50
0x3cf3	            0x7423	                            je 0x4003d58	      2181	screen.c	FUNCTION_20	IF_124	CALL_50
0x3cf5	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2181	screen.c	FUNCTION_20	IF_124	CALL_50
0x3cfc	          0x4889c7	                            mov rdi, rax	      2181	screen.c	FUNCTION_20	IF_124	CALL_50
0x3cff	      0xe800000000	                          call 0x4003d44	      2181	screen.c	FUNCTION_20	IF_124	CALL_50
0x3d04	            0x85c0	                           test eax, eax	      2181	screen.c	FUNCTION_20	IF_124	CALL_50
0x3d06	            0x7410	                            je 0x4003d58	      2181	screen.c	FUNCTION_20	IF_124	CALL_50
0x3d08	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2182	screen.c	FUNCTION_20	CALL_51
0x3d0c	        0x4883c001	                              add rax, 1	      2182	screen.c	FUNCTION_20	CALL_51
0x3d10	          0x4889c7	                            mov rdi, rax	      2182	screen.c	FUNCTION_20	CALL_51
0x3d13	      0xe800000000	                          call 0x4003d58	      2182	screen.c	FUNCTION_20	CALL_51
0x3d18	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2189	screen.c	FUNCTION_20
0x3d1f	    0xc780f0000000	               mov dword [rax + 0xf0], 0	      2189	screen.c	FUNCTION_20
0x3d29	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2191	screen.c	FUNCTION_20
0x3d30	    0xc780f4000000	               mov dword [rax + 0xf4], 0	      2191	screen.c	FUNCTION_20
0x3d3a	    0x83bd38ffffff	               cmp dword [rbp - 0xc8], 0	      2193	screen.c	FUNCTION_20	IF_125
0x3d41	     0xf85e7020000	                           jne 0x400406e	      2193	screen.c	FUNCTION_20	IF_125
0x3d47	    0x83bd3cffffff	               cmp dword [rbp - 0xc4], 0	      2193	screen.c	FUNCTION_20	IF_125
0x3d4e	     0xf85da020000	                           jne 0x400406e	      2193	screen.c	FUNCTION_20	IF_125
0x3d54	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2195	screen.c	FUNCTION_20	IF_125	IF_126
0x3d5b	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2195	screen.c	FUNCTION_20	IF_125	IF_126
0x3d5f	        0x483b4588	             cmp rax, qword [rbp - 0x78]	      2195	screen.c	FUNCTION_20	IF_125	IF_126
0x3d63	            0x751b	                           jne 0x4003dc0	      2195	screen.c	FUNCTION_20	IF_125	IF_126
0x3d65	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2201	screen.c	FUNCTION_20	IF_125	IF_126
0x3d69	        0x488d5001	                      lea rdx, [rax + 1]	      2201	screen.c	FUNCTION_20	IF_125	IF_126
0x3d6d	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2201	screen.c	FUNCTION_20	IF_125	IF_126
0x3d74	    0x488990e80000	             mov qword [rax + 0xe8], rdx	      2201	screen.c	FUNCTION_20	IF_125	IF_126
0x3d7b	      0xe93b040000	                           jmp 0x40041fb	      2195	screen.c	FUNCTION_20	IF_125	IF_126
0x3d80	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      2204	screen.c	FUNCTION_20	IF_125	ELSE_38	IF_127	CALL_52
0x3d84	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2204	screen.c	FUNCTION_20	IF_125	ELSE_38	IF_127	CALL_52
0x3d8b	          0x4889d6	                            mov rsi, rdx	      2204	screen.c	FUNCTION_20	IF_125	ELSE_38	IF_127	CALL_52
0x3d8e	          0x4889c7	                            mov rdi, rax	      2204	screen.c	FUNCTION_20	IF_125	ELSE_38	IF_127	CALL_52
0x3d91	      0xe800000000	                          call 0x4003dd6	      2204	screen.c	FUNCTION_20	IF_125	ELSE_38	IF_127	CALL_52
0x3d96	            0x89c2	                            mov edx, eax	      2204	screen.c	FUNCTION_20	IF_125	ELSE_38	IF_127	CALL_52
0x3d98	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2204	screen.c	FUNCTION_20	IF_125	ELSE_38	IF_127	CALL_52
0x3d9f	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2204	screen.c	FUNCTION_20	IF_125	ELSE_38	IF_127	CALL_52
0x3da5	    0x2b8534ffffff	             sub eax, dword [rbp - 0xcc]	      2204	screen.c	FUNCTION_20	IF_125	ELSE_38	IF_127	CALL_52
0x3dab	            0x39c2	                            cmp edx, eax	      2204	screen.c	FUNCTION_20	IF_125	ELSE_38	IF_127	CALL_52
0x3dad	            0x7c39	                            jl 0x4003e28	      2204	screen.c	FUNCTION_20	IF_125	ELSE_38	IF_127	CALL_52
0x3daf	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2207	screen.c	FUNCTION_20	IF_125	ELSE_38	IF_127
0x3db6	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      2207	screen.c	FUNCTION_20	IF_125	ELSE_38	IF_127
0x3dba	    0x488990e80000	             mov qword [rax + 0xe8], rdx	      2207	screen.c	FUNCTION_20	IF_125	ELSE_38	IF_127
0x3dc1	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2208	screen.c	FUNCTION_20	IF_125	ELSE_38	IF_127
0x3dc8	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2208	screen.c	FUNCTION_20	IF_125	ELSE_38	IF_127
0x3dce	    0x2b8534ffffff	             sub eax, dword [rbp - 0xcc]	      2208	screen.c	FUNCTION_20	IF_125	ELSE_38	IF_127
0x3dd4	            0x89c2	                            mov edx, eax	      2208	screen.c	FUNCTION_20	IF_125	ELSE_38	IF_127
0x3dd6	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2208	screen.c	FUNCTION_20	IF_125	ELSE_38	IF_127
0x3ddd	    0x8990f4000000	             mov dword [rax + 0xf4], edx	      2208	screen.c	FUNCTION_20	IF_125	ELSE_38	IF_127
0x3de3	      0xe9d3030000	                           jmp 0x40041fb	      2195	screen.c	FUNCTION_20	IF_125	IF_126
0x3de8	    0x8b0500000000	            mov eax, dword [0x04003e2e] 	      2211	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128
0x3dee	          0x83e002	                              and eax, 2	      2211	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128
0x3df1	            0x85c0	                           test eax, eax	      2211	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128
0x3df3	     0xf84f0000000	                            je 0x4003f29	      2211	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128
0x3df9	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2213	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128	CALL_53
0x3e00	    0x8b909c000000	            mov edx, dword [rax + 0x9c] 	      2213	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128	CALL_53
0x3e06	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2213	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128	CALL_53
0x3e0d	    0x8b80a8010000	           mov eax, dword [rax + 0x1a8] 	      2213	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128	CALL_53
0x3e13	             0x1c2	                            add edx, eax	      2213	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128	CALL_53
0x3e15	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2213	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128	CALL_53
0x3e1c	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2213	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128	CALL_53
0x3e22	             0x1d0	                            add eax, edx	      2213	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128	CALL_53
0x3e24	          0x83e801	                              sub eax, 1	      2213	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128	CALL_53
0x3e27	    0x898564ffffff	             mov dword [rbp - 0x9c], eax	      2213	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128	CALL_53
0x3e2d	    0x8b0d00000000	            mov ecx, dword [0x04003e73] 	      2218	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128	CALL_54
0x3e33	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2218	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128	CALL_54
0x3e3a	    0x8b90a8000000	            mov edx, dword [rax + 0xa8] 	      2218	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128	CALL_54
0x3e40	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	      2218	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128	CALL_54
0x3e46	          0x4189c8	                            mov r8d, ecx	      2218	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128	CALL_54
0x3e49	            0x89d1	                            mov ecx, edx	      2218	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128	CALL_54
0x3e4b	            0x89c2	                            mov edx, eax	      2218	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128	CALL_54
0x3e4d	      0xbe02000000	                              mov esi, 2	      2218	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128	CALL_54
0x3e52	      0xbf00000000	                              mov edi, 0	      2218	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128	CALL_54
0x3e57	      0xe800000000	                          call 0x4003e9c	      2218	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128	CALL_54
0x3e5c	    0x8b1500000000	            mov edx, dword [0x04003ea2] 	      2220	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128	CALL_56
0x3e62	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2221	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128	CALL_57
0x3e69	    0x8b88a8000000	            mov ecx, dword [rax + 0xa8] 	      2221	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128	CALL_57
0x3e6f	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2221	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128	CALL_57
0x3e76	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2221	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128	CALL_57
0x3e7c	             0x1c1	                            add ecx, eax	      2220	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128	CALL_56
0x3e7e	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2221	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128	CALL_57
0x3e85	    0x8b80a8000000	            mov eax, dword [rax + 0xa8] 	      2221	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128	CALL_57
0x3e8b	          0x8d7802	                      lea edi, [rax + 2]	      2220	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128	CALL_56
0x3e8e	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	      2220	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128	CALL_56
0x3e94	          0x8d7001	                      lea esi, [rax + 1]	      2220	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128	CALL_56
0x3e97	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	      2220	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128	CALL_56
0x3e9d	        0x4883ec08	                              sub rsp, 8	      2220	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128	CALL_56
0x3ea1	              0x52	                                push rdx	      2220	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128	CALL_56
0x3ea2	    0x41b920000000	                           mov r9d, 0x20	      2220	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128	CALL_56
0x3ea8	    0x41b840000000	                           mov r8d, 0x40	      2220	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128	CALL_56
0x3eae	            0x89fa	                            mov edx, edi	      2220	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128	CALL_56
0x3eb0	            0x89c7	                            mov edi, eax	      2220	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128	CALL_56
0x3eb2	      0xe800000000	                          call 0x4003ef7	      2220	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128	CALL_56
0x3eb7	        0x4883c410	                           add rsp, 0x10	      2220	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128	CALL_56
0x3ebb	    0x8b9534ffffff	             mov edx, dword [rbp - 0xcc]	      2223	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128	CALL_59
0x3ec1	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2223	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128	CALL_59
0x3ec8	            0x89d6	                            mov esi, edx	      2223	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128	CALL_59
0x3eca	          0x4889c7	                            mov rdi, rax	      2223	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128	CALL_59
0x3ecd	      0xe800000000	                          call 0x4003f12	      2223	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128	CALL_59
0x3ed2	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2224	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128
0x3ed9	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      2224	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128
0x3edd	    0x488990e80000	             mov qword [rax + 0xe8], rdx	      2224	screen.c	FUNCTION_20	IF_125	ELSE_39	IF_128
0x3ee4	      0xe9d2020000	                           jmp 0x40041fb	      2195	screen.c	FUNCTION_20	IF_125	IF_126
0x3ee9	    0x8b0500000000	            mov eax, dword [0x04003f2f] 	      2226	screen.c	FUNCTION_20	IF_125	ELSE_40	IF_129
0x3eef	          0x83e001	                              and eax, 1	      2226	screen.c	FUNCTION_20	IF_125	ELSE_40	IF_129
0x3ef2	            0x85c0	                           test eax, eax	      2226	screen.c	FUNCTION_20	IF_125	ELSE_40	IF_129
0x3ef4	     0xf84e6000000	                            je 0x4004020	      2226	screen.c	FUNCTION_20	IF_125	ELSE_40	IF_129
0x3efa	    0x8b0500000000	            mov eax, dword [0x04003f40] 	      2231	screen.c	FUNCTION_20	IF_125	ELSE_40	IF_129	CALL_61
0x3f00	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	      2233	screen.c	FUNCTION_20	IF_125	ELSE_40	IF_129	CALL_64
0x3f07	    0x8b8aa8000000	            mov ecx, dword [rdx + 0xa8] 	      2233	screen.c	FUNCTION_20	IF_125	ELSE_40	IF_129	CALL_64
0x3f0d	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	      2233	screen.c	FUNCTION_20	IF_125	ELSE_40	IF_129	CALL_64
0x3f14	    0x8b92ac000000	            mov edx, dword [rdx + 0xac] 	      2233	screen.c	FUNCTION_20	IF_125	ELSE_40	IF_129	CALL_64
0x3f1a	             0x1d1	                            add ecx, edx	      2231	screen.c	FUNCTION_20	IF_125	ELSE_40	IF_129	CALL_61
0x3f1c	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	      2233	screen.c	FUNCTION_20	IF_125	ELSE_40	IF_129	CALL_64
0x3f23	    0x8bb2a8000000	            mov esi, dword [rdx + 0xa8] 	      2233	screen.c	FUNCTION_20	IF_125	ELSE_40	IF_129	CALL_64
0x3f29	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	      2233	screen.c	FUNCTION_20	IF_125	ELSE_40	IF_129	CALL_64
0x3f30	    0x8b92ac000000	            mov edx, dword [rdx + 0xac] 	      2233	screen.c	FUNCTION_20	IF_125	ELSE_40	IF_129	CALL_64
0x3f36	             0x1f2	                            add edx, esi	      2233	screen.c	FUNCTION_20	IF_125	ELSE_40	IF_129	CALL_64
0x3f38	        0x448d52fd	                     lea r10d, [rdx - 3]	      2231	screen.c	FUNCTION_20	IF_125	ELSE_40	IF_129	CALL_61
0x3f3c	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	      2232	screen.c	FUNCTION_20	IF_125	ELSE_40	IF_129	CALL_62
0x3f43	    0x8bb29c000000	            mov esi, dword [rdx + 0x9c] 	      2232	screen.c	FUNCTION_20	IF_125	ELSE_40	IF_129	CALL_62
0x3f49	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	      2232	screen.c	FUNCTION_20	IF_125	ELSE_40	IF_129	CALL_62
0x3f50	    0x8b92a8010000	           mov edx, dword [rdx + 0x1a8] 	      2232	screen.c	FUNCTION_20	IF_125	ELSE_40	IF_129	CALL_62
0x3f56	             0x1d6	                            add esi, edx	      2232	screen.c	FUNCTION_20	IF_125	ELSE_40	IF_129	CALL_62
0x3f58	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	      2232	screen.c	FUNCTION_20	IF_125	ELSE_40	IF_129	CALL_62
0x3f5f	    0x8b92a0000000	            mov edx, dword [rdx + 0xa0] 	      2232	screen.c	FUNCTION_20	IF_125	ELSE_40	IF_129	CALL_62
0x3f65	             0x1d6	                            add esi, edx	      2231	screen.c	FUNCTION_20	IF_125	ELSE_40	IF_129	CALL_61
0x3f67	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	      2231	screen.c	FUNCTION_20	IF_125	ELSE_40	IF_129	CALL_61
0x3f6e	    0x8bba9c000000	            mov edi, dword [rdx + 0x9c] 	      2231	screen.c	FUNCTION_20	IF_125	ELSE_40	IF_129	CALL_61
0x3f74	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	      2231	screen.c	FUNCTION_20	IF_125	ELSE_40	IF_129	CALL_61
0x3f7b	    0x8b92a8010000	           mov edx, dword [rdx + 0x1a8] 	      2231	screen.c	FUNCTION_20	IF_125	ELSE_40	IF_129	CALL_61
0x3f81	             0x1d7	                            add edi, edx	      2231	screen.c	FUNCTION_20	IF_125	ELSE_40	IF_129	CALL_61
0x3f83	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	      2231	screen.c	FUNCTION_20	IF_125	ELSE_40	IF_129	CALL_61
0x3f8a	    0x8b92a0000000	            mov edx, dword [rdx + 0xa0] 	      2231	screen.c	FUNCTION_20	IF_125	ELSE_40	IF_129	CALL_61
0x3f90	             0x1fa	                            add edx, edi	      2231	screen.c	FUNCTION_20	IF_125	ELSE_40	IF_129	CALL_61
0x3f92	          0x8d7aff	                      lea edi, [rdx - 1]	      2231	screen.c	FUNCTION_20	IF_125	ELSE_40	IF_129	CALL_61
0x3f95	        0x4883ec08	                              sub rsp, 8	      2231	screen.c	FUNCTION_20	IF_125	ELSE_40	IF_129	CALL_61
0x3f99	              0x50	                                push rax	      2231	screen.c	FUNCTION_20	IF_125	ELSE_40	IF_129	CALL_61
0x3f9a	    0x41b940000000	                           mov r9d, 0x40	      2231	screen.c	FUNCTION_20	IF_125	ELSE_40	IF_129	CALL_61
0x3fa0	    0x41b840000000	                           mov r8d, 0x40	      2231	screen.c	FUNCTION_20	IF_125	ELSE_40	IF_129	CALL_61
0x3fa6	          0x4489d2	                           mov edx, r10d	      2231	screen.c	FUNCTION_20	IF_125	ELSE_40	IF_129	CALL_61
0x3fa9	      0xe800000000	                          call 0x4003fee	      2231	screen.c	FUNCTION_20	IF_125	ELSE_40	IF_129	CALL_61
0x3fae	        0x4883c410	                           add rsp, 0x10	      2231	screen.c	FUNCTION_20	IF_125	ELSE_40	IF_129	CALL_61
0x3fb2	    0x8b9534ffffff	             mov edx, dword [rbp - 0xcc]	      2235	screen.c	FUNCTION_20	IF_125	ELSE_40	IF_129	CALL_66
0x3fb8	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2235	screen.c	FUNCTION_20	IF_125	ELSE_40	IF_129	CALL_66
0x3fbf	            0x89d6	                            mov esi, edx	      2235	screen.c	FUNCTION_20	IF_125	ELSE_40	IF_129	CALL_66
0x3fc1	          0x4889c7	                            mov rdi, rax	      2235	screen.c	FUNCTION_20	IF_125	ELSE_40	IF_129	CALL_66
0x3fc4	      0xe800000000	                          call 0x4004009	      2235	screen.c	FUNCTION_20	IF_125	ELSE_40	IF_129	CALL_66
0x3fc9	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2236	screen.c	FUNCTION_20	IF_125	ELSE_40	IF_129
0x3fd0	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      2236	screen.c	FUNCTION_20	IF_125	ELSE_40	IF_129
0x3fd4	    0x488990e80000	             mov qword [rax + 0xe8], rdx	      2236	screen.c	FUNCTION_20	IF_125	ELSE_40	IF_129
0x3fdb	      0xe9db010000	                           jmp 0x40041fb	      2195	screen.c	FUNCTION_20	IF_125	IF_126
0x3fe0	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2240	screen.c	FUNCTION_20	IF_125	ELSE_41	CALL_67
0x3fe7	    0x8b88a0000000	            mov ecx, dword [rax + 0xa0] 	      2240	screen.c	FUNCTION_20	IF_125	ELSE_41	CALL_67
0x3fed	    0x8b9534ffffff	             mov edx, dword [rbp - 0xcc]	      2240	screen.c	FUNCTION_20	IF_125	ELSE_41	CALL_67
0x3ff3	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2240	screen.c	FUNCTION_20	IF_125	ELSE_41	CALL_67
0x3ffa	    0x41b902000000	                              mov r9d, 2	      2240	screen.c	FUNCTION_20	IF_125	ELSE_41	CALL_67
0x4000	          0x4189c8	                            mov r8d, ecx	      2240	screen.c	FUNCTION_20	IF_125	ELSE_41	CALL_67
0x4003	            0x89d1	                            mov ecx, edx	      2240	screen.c	FUNCTION_20	IF_125	ELSE_41	CALL_67
0x4005	      0xba20000000	                           mov edx, 0x20	      2240	screen.c	FUNCTION_20	IF_125	ELSE_41	CALL_67
0x400a	      0xbe40000000	                           mov esi, 0x40	      2240	screen.c	FUNCTION_20	IF_125	ELSE_41	CALL_67
0x400f	          0x4889c7	                            mov rdi, rax	      2240	screen.c	FUNCTION_20	IF_125	ELSE_41	CALL_67
0x4012	      0xe822030000	                   call sym.win_draw_end	      2240	screen.c	FUNCTION_20	IF_125	ELSE_41	CALL_67
0x4017	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2241	screen.c	FUNCTION_20	IF_125	ELSE_41
0x401e	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      2241	screen.c	FUNCTION_20	IF_125	ELSE_41
0x4022	    0x488990e80000	             mov qword [rax + 0xe8], rdx	      2241	screen.c	FUNCTION_20	IF_125	ELSE_41
0x4029	      0xe98d010000	                           jmp 0x40041fb	      2195	screen.c	FUNCTION_20	IF_125	IF_126
0x402e	    0x8b952cffffff	             mov edx, dword [rbp - 0xd4]	      2246	screen.c	FUNCTION_20	ELSE_42	CALL_68
0x4034	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2246	screen.c	FUNCTION_20	ELSE_42	CALL_68
0x403b	            0x89d6	                            mov esi, edx	      2246	screen.c	FUNCTION_20	ELSE_42	CALL_68
0x403d	          0x4889c7	                            mov rdi, rax	      2246	screen.c	FUNCTION_20	ELSE_42	CALL_68
0x4040	      0xe8af8e0000	                  call sym.draw_vsep_win	      2246	screen.c	FUNCTION_20	ELSE_42	CALL_68
0x4045	    0x83bd38ffffff	               cmp dword [rbp - 0xc8], 0	      2247	screen.c	FUNCTION_20	ELSE_42	IF_130
0x404c	     0xf8415010000	                            je 0x40041a7	      2247	screen.c	FUNCTION_20	ELSE_42	IF_130
0x4052	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2249	screen.c	FUNCTION_20	ELSE_42	IF_130
0x4056	          0x488b00	                    mov rax, qword [rax]	      2249	screen.c	FUNCTION_20	ELSE_42	IF_130
0x4059	        0x488d5001	                      lea rdx, [rax + 1]	      2249	screen.c	FUNCTION_20	ELSE_42	IF_130
0x405d	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2249	screen.c	FUNCTION_20	ELSE_42	IF_130
0x4064	    0x488990e80000	             mov qword [rax + 0xe8], rdx	      2249	screen.c	FUNCTION_20	ELSE_42	IF_130
0x406b	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2251	screen.c	FUNCTION_20	ELSE_42	IF_130	CALL_69
0x4072	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	      2251	screen.c	FUNCTION_20	ELSE_42	IF_130	CALL_69
0x4079	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2251	screen.c	FUNCTION_20	ELSE_42	IF_130	CALL_69
0x4080	          0x4889d6	                            mov rsi, rdx	      2251	screen.c	FUNCTION_20	ELSE_42	IF_130	CALL_69
0x4083	          0x4889c7	                            mov rdi, rax	      2251	screen.c	FUNCTION_20	ELSE_42	IF_130	CALL_69
0x4086	      0xe800000000	                          call 0x40040cb	      2251	screen.c	FUNCTION_20	ELSE_42	IF_130	CALL_69
0x408b	            0x4898	                                    cdqe	      2251	screen.c	FUNCTION_20	ELSE_42	IF_130	CALL_69
0x408d	        0x48894590	             mov qword [rbp - 0x70], rax	      2251	screen.c	FUNCTION_20	ELSE_42	IF_130	CALL_69
0x4091	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      2252	screen.c	FUNCTION_20	ELSE_42	IF_130	IF_131
0x4096	     0xf8ee8000000	                           jle 0x40041c4	      2252	screen.c	FUNCTION_20	ELSE_42	IF_130	IF_131
0x409c	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2252	screen.c	FUNCTION_20	ELSE_42	IF_130	IF_131
0x40a3	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      2252	screen.c	FUNCTION_20	ELSE_42	IF_130	IF_131
0x40a9	            0x85c0	                           test eax, eax	      2252	screen.c	FUNCTION_20	ELSE_42	IF_130	IF_131
0x40ab	     0xf85d3000000	                           jne 0x40041c4	      2252	screen.c	FUNCTION_20	ELSE_42	IF_130	IF_131
0x40b1	    0x8b0500000000	            mov eax, dword [0x040040f7] 	      2257	screen.c	FUNCTION_20	ELSE_42	IF_130	IF_131	IF_132	CALL_70
0x40b7	            0x89c7	                            mov edi, eax	      2257	screen.c	FUNCTION_20	ELSE_42	IF_130	IF_131	IF_132	CALL_70
0x40b9	      0xe800000000	                          call 0x40040fe	      2257	screen.c	FUNCTION_20	ELSE_42	IF_130	IF_131	IF_132	CALL_70
0x40be	          0x83f801	                              cmp eax, 1	      2257	screen.c	FUNCTION_20	ELSE_42	IF_130	IF_131	IF_132	CALL_70
0x40c1	            0x7e0c	                           jle 0x400410f	      2257	screen.c	FUNCTION_20	ELSE_42	IF_130	IF_131	IF_132	CALL_70
0x40c3	    0xc78540ffffff	           mov dword [rbp - 0xc0], 0x2d 	      2258	screen.c	FUNCTION_20	ELSE_42	IF_130	IF_131	IF_132
0x40cd	            0xeb0c	                           jmp 0x400411b	      2258	screen.c	FUNCTION_20	ELSE_42	IF_130	IF_131	IF_132
0x40cf	    0x8b0500000000	            mov eax, dword [0x04004115] 	      2260	screen.c	FUNCTION_20	ELSE_42	IF_130	IF_131	ELSE_43
0x40d5	    0x898540ffffff	             mov dword [rbp - 0xc0], eax	      2260	screen.c	FUNCTION_20	ELSE_42	IF_130	IF_131	ELSE_43
0x40db	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	      2261	screen.c	FUNCTION_20	ELSE_42	IF_130	IF_131	IF_133
0x40e1	          0x4863d0	                         movsxd rdx, eax	      2261	screen.c	FUNCTION_20	ELSE_42	IF_130	IF_131	IF_133
0x40e4	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2261	screen.c	FUNCTION_20	ELSE_42	IF_130	IF_131	IF_133
0x40e8	          0x4801c2	                            add rdx, rax	      2261	screen.c	FUNCTION_20	ELSE_42	IF_130	IF_131	IF_133
0x40eb	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2261	screen.c	FUNCTION_20	ELSE_42	IF_130	IF_131	IF_133
0x40f2	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2261	screen.c	FUNCTION_20	ELSE_42	IF_130	IF_131	IF_133
0x40f8	            0x4898	                                    cdqe	      2261	screen.c	FUNCTION_20	ELSE_42	IF_130	IF_131	IF_133
0x40fa	          0x4839c2	                            cmp rdx, rax	      2261	screen.c	FUNCTION_20	ELSE_42	IF_130	IF_131	IF_133
0x40fd	            0x7e19	                           jle 0x4004158	      2261	screen.c	FUNCTION_20	ELSE_42	IF_130	IF_131	IF_133
0x40ff	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2262	screen.c	FUNCTION_20	ELSE_42	IF_130	IF_131	IF_133
0x4106	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2262	screen.c	FUNCTION_20	ELSE_42	IF_130	IF_131	IF_133
0x410c	    0x2b852cffffff	             sub eax, dword [rbp - 0xd4]	      2262	screen.c	FUNCTION_20	ELSE_42	IF_130	IF_131	IF_133
0x4112	            0x4898	                                    cdqe	      2262	screen.c	FUNCTION_20	ELSE_42	IF_130	IF_131	IF_133
0x4114	        0x48894590	             mov qword [rbp - 0x70], rax	      2262	screen.c	FUNCTION_20	ELSE_42	IF_130	IF_131	IF_133
0x4118	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2263	screen.c	FUNCTION_20	ELSE_42	IF_130	IF_131	CALL_71
0x411c	            0x89c2	                            mov edx, eax	      2263	screen.c	FUNCTION_20	ELSE_42	IF_130	IF_131	CALL_71
0x411e	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	      2263	screen.c	FUNCTION_20	ELSE_42	IF_130	IF_131	CALL_71
0x4124	          0x8d3c02	                    lea edi, [rdx + rax]	      2263	screen.c	FUNCTION_20	ELSE_42	IF_130	IF_131	CALL_71
0x4127	    0x8b8d2cffffff	             mov ecx, dword [rbp - 0xd4]	      2263	screen.c	FUNCTION_20	ELSE_42	IF_130	IF_131	CALL_71
0x412d	    0x8b9540ffffff	             mov edx, dword [rbp - 0xc0]	      2263	screen.c	FUNCTION_20	ELSE_42	IF_130	IF_131	CALL_71
0x4133	    0x8bb540ffffff	             mov esi, dword [rbp - 0xc0]	      2263	screen.c	FUNCTION_20	ELSE_42	IF_130	IF_131	CALL_71
0x4139	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2263	screen.c	FUNCTION_20	ELSE_42	IF_130	IF_131	CALL_71
0x4140	    0x41b919000000	                           mov r9d, 0x19	      2263	screen.c	FUNCTION_20	ELSE_42	IF_130	IF_131	CALL_71
0x4146	          0x4189f8	                            mov r8d, edi	      2263	screen.c	FUNCTION_20	ELSE_42	IF_130	IF_131	CALL_71
0x4149	          0x4889c7	                            mov rdi, rax	      2263	screen.c	FUNCTION_20	ELSE_42	IF_130	IF_131	CALL_71
0x414c	      0xe8e8010000	                   call sym.win_draw_end	      2263	screen.c	FUNCTION_20	ELSE_42	IF_130	IF_131	CALL_71
0x4151	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2264	screen.c	FUNCTION_20	ELSE_42	IF_130	IF_131
0x4155	            0x89c2	                            mov edx, eax	      2264	screen.c	FUNCTION_20	ELSE_42	IF_130	IF_131
0x4157	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	      2264	screen.c	FUNCTION_20	ELSE_42	IF_130	IF_131
0x415d	             0x1d0	                            add eax, edx	      2264	screen.c	FUNCTION_20	ELSE_42	IF_130	IF_131
0x415f	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	      2264	screen.c	FUNCTION_20	ELSE_42	IF_130	IF_131
0x4165	            0xeb1d	                           jmp 0x40041c4	      2264	screen.c	FUNCTION_20	ELSE_42	IF_130	IF_131
0x4167	    0x8b0500000000	            mov eax, dword [0x040041ad] 	      2268	screen.c	FUNCTION_20	ELSE_42	ELSE_44	IF_134
0x416d	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2268	screen.c	FUNCTION_20	ELSE_42	ELSE_44	IF_134
0x4170	            0x7512	                           jne 0x40041c4	      2268	screen.c	FUNCTION_20	ELSE_42	ELSE_44	IF_134
0x4172	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2269	screen.c	FUNCTION_20	ELSE_42	ELSE_44	IF_134
0x4179	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      2269	screen.c	FUNCTION_20	ELSE_42	ELSE_44	IF_134
0x417d	    0x488990e80000	             mov qword [rax + 0xe8], rdx	      2269	screen.c	FUNCTION_20	ELSE_42	ELSE_44	IF_134
0x4184	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2273	screen.c	FUNCTION_20	ELSE_42	CALL_72
0x418b	    0x8b88a0000000	            mov ecx, dword [rax + 0xa0] 	      2273	screen.c	FUNCTION_20	ELSE_42	CALL_72
0x4191	    0x8b952cffffff	             mov edx, dword [rbp - 0xd4]	      2273	screen.c	FUNCTION_20	ELSE_42	CALL_72
0x4197	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2273	screen.c	FUNCTION_20	ELSE_42	CALL_72
0x419e	    0x41b901000000	                              mov r9d, 1	      2273	screen.c	FUNCTION_20	ELSE_42	CALL_72
0x41a4	          0x4189c8	                            mov r8d, ecx	      2273	screen.c	FUNCTION_20	ELSE_42	CALL_72
0x41a7	            0x89d1	                            mov ecx, edx	      2273	screen.c	FUNCTION_20	ELSE_42	CALL_72
0x41a9	      0xba20000000	                           mov edx, 0x20	      2273	screen.c	FUNCTION_20	ELSE_42	CALL_72
0x41ae	      0xbe7e000000	                           mov esi, 0x7e	      2273	screen.c	FUNCTION_20	ELSE_42	CALL_72
0x41b3	          0x4889c7	                            mov rdi, rax	      2273	screen.c	FUNCTION_20	ELSE_42	CALL_72
0x41b6	      0xe87e010000	                   call sym.win_draw_end	      2273	screen.c	FUNCTION_20	ELSE_42	CALL_72
0x41bb	      0xbf00000000	                              mov edi, 0	      2277	screen.c	FUNCTION_20	CALL_73
0x41c0	      0xe800000000	                          call 0x4004205	      2277	screen.c	FUNCTION_20	CALL_73
0x41c5	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2281	screen.c	FUNCTION_20
0x41cc	    0xc78028010000	              mov dword [rax + 0x128], 0	      2281	screen.c	FUNCTION_20
0x41d6	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2283	screen.c	FUNCTION_20
0x41dd	    0x8b9084000000	            mov edx, dword [rax + 0x84] 	      2283	screen.c	FUNCTION_20
0x41e3	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2283	screen.c	FUNCTION_20
0x41ea	    0x899088000000	             mov dword [rax + 0x88], edx	      2283	screen.c	FUNCTION_20
0x41f0	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2284	screen.c	FUNCTION_20
0x41f7	    0x8b908c000000	            mov edx, dword [rax + 0x8c] 	      2284	screen.c	FUNCTION_20
0x41fd	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2284	screen.c	FUNCTION_20
0x4204	    0x899090000000	             mov dword [rax + 0x90], edx	      2284	screen.c	FUNCTION_20
0x420a	    0x8b0500000000	            mov eax, dword [0x04004250] 	      2287	screen.c	FUNCTION_20	IF_135
0x4210	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2287	screen.c	FUNCTION_20	IF_135
0x4213	     0xf85f0000000	                           jne 0x4004349	      2287	screen.c	FUNCTION_20	IF_135
0x4219	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2301	screen.c	FUNCTION_20	IF_135
0x4220	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	      2301	screen.c	FUNCTION_20	IF_135
0x4226	          0x83c820	                            or eax, 0x20	      2301	screen.c	FUNCTION_20	IF_135
0x4229	            0x89c2	                            mov edx, eax	      2301	screen.c	FUNCTION_20	IF_135
0x422b	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2301	screen.c	FUNCTION_20	IF_135
0x4232	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2301	screen.c	FUNCTION_20	IF_135
0x4238	    0x488b05000000	            mov rax, qword [0x0400427f] 	      2302	screen.c	FUNCTION_20	IF_135	IF_136
0x423f	    0x48398508ffff	            cmp qword [rbp - 0xf8], rax 	      2302	screen.c	FUNCTION_20	IF_135	IF_136
0x4246	     0xf85bd000000	                           jne 0x4004349	      2302	screen.c	FUNCTION_20	IF_135	IF_136
0x424c	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      2302	screen.c	FUNCTION_20	IF_135	IF_136
0x4253	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	      2302	screen.c	FUNCTION_20	IF_135	IF_136
0x425a	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      2302	screen.c	FUNCTION_20	IF_135	IF_136
0x4260	            0x4898	                                    cdqe	      2302	screen.c	FUNCTION_20	IF_135	IF_136
0x4262	          0x4839c2	                            cmp rdx, rax	      2302	screen.c	FUNCTION_20	IF_135	IF_136
0x4265	     0xf849e000000	                            je 0x4004349	      2302	screen.c	FUNCTION_20	IF_135	IF_136
0x426b	    0x8b0500000000	            mov eax, dword [0x040042b1] 	      2302	screen.c	FUNCTION_20	IF_135	IF_136
0x4271	            0x85c0	                           test eax, eax	      2302	screen.c	FUNCTION_20	IF_135	IF_136
0x4273	     0xf8590000000	                           jne 0x4004349	      2302	screen.c	FUNCTION_20	IF_135	IF_136
0x4279	    0xc70500000000	               mov dword [0x040042c3], 1	      2304	screen.c	FUNCTION_20	IF_135	IF_136
0x4283	    0x488b05000000	            mov rax, qword [0x040042ca] 	      2305	screen.c	FUNCTION_20	IF_135	IF_136
0x428a	    0x488b15000000	            mov rdx, qword [0x040042d1] 	      2305	screen.c	FUNCTION_20	IF_135	IF_136
0x4291	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      2305	screen.c	FUNCTION_20	IF_135	IF_136
0x4297	          0x80e27f	                            and dl, 0x7f	      2305	screen.c	FUNCTION_20	IF_135	IF_136
0x429a	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2305	screen.c	FUNCTION_20	IF_135	IF_136
0x42a0	      0xe800000000	                          call 0x40042e5	      2306	screen.c	FUNCTION_20	IF_135	IF_136	CALL_74
0x42a5	    0x8b0500000000	            mov eax, dword [0x040042eb] 	      2307	screen.c	FUNCTION_20	IF_135	IF_136	IF_137
0x42ab	            0x85c0	                           test eax, eax	      2307	screen.c	FUNCTION_20	IF_135	IF_136	IF_137
0x42ad	            0x7450	                            je 0x400433f	      2307	screen.c	FUNCTION_20	IF_135	IF_136	IF_137
0x42af	    0x488b05000000	            mov rax, qword [0x040042f6] 	      2310	screen.c	FUNCTION_20	IF_135	IF_136	IF_137
0x42b6	    0x8b80fc000000	            mov eax, dword [rax + 0xfc] 	      2310	screen.c	FUNCTION_20	IF_135	IF_136	IF_137
0x42bc	    0x898540ffffff	             mov dword [rbp - 0xc0], eax	      2310	screen.c	FUNCTION_20	IF_135	IF_136	IF_137
0x42c2	    0x488b05000000	            mov rax, qword [0x04004309] 	      2311	screen.c	FUNCTION_20	IF_135	IF_136	IF_137
0x42c9	    0xc780fc000000	               mov dword [rax + 0xfc], 0	      2311	screen.c	FUNCTION_20	IF_135	IF_136	IF_137
0x42d3	    0x488b05000000	            mov rax, qword [0x0400431a] 	      2312	screen.c	FUNCTION_20	IF_135	IF_136	IF_137	CALL_75
0x42da	          0x4889c7	                            mov rdi, rax	      2312	screen.c	FUNCTION_20	IF_135	IF_136	IF_137	CALL_75
0x42dd	      0xe867d2ffff	                     call sym.win_update	      2312	screen.c	FUNCTION_20	IF_135	IF_136	IF_137	CALL_75
0x42e2	    0xc70500000000	               mov dword [0x0400432c], 0	      2313	screen.c	FUNCTION_20	IF_135	IF_136	IF_137
0x42ec	    0x488b05000000	            mov rax, qword [0x04004333] 	      2314	screen.c	FUNCTION_20	IF_135	IF_136	IF_137
0x42f3	    0x8b9540ffffff	             mov edx, dword [rbp - 0xc0]	      2314	screen.c	FUNCTION_20	IF_135	IF_136	IF_137
0x42f9	    0x8990fc000000	             mov dword [rax + 0xfc], edx	      2314	screen.c	FUNCTION_20	IF_135	IF_136	IF_137
0x42ff	    0xc70500000000	               mov dword [0x04004349], 0	      2316	screen.c	FUNCTION_20	IF_135	IF_136
0x4309	    0x8b0500000000	            mov eax, dword [0x0400434f] 	      2322	screen.c	FUNCTION_20	IF_138
0x430f	            0x85c0	                           test eax, eax	      2322	screen.c	FUNCTION_20	IF_138
0x4311	            0x750c	                           jne 0x400435f	      2322	screen.c	FUNCTION_20	IF_138
0x4313	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      2323	screen.c	FUNCTION_20	IF_138
0x4319	    0x890500000000	            mov dword [0x0400435f], eax 	      2323	screen.c	FUNCTION_20	IF_138
0x431f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2325	screen.c	FUNCTION_20
0x4323	    0x644833042528	                xor rax, qword fs:[0x28]	      2325	screen.c	FUNCTION_20
0x432c	            0x7405	                            je 0x4004373	      2325	screen.c	FUNCTION_20
0x432e	      0xe800000000	                          call 0x4004373	      2325	screen.c	FUNCTION_20
0x4333	        0x488b5df8	                mov rbx, qword [rbp - 8]	      2325	screen.c	FUNCTION_20
0x4337	              0xc9	                                   leave	      2325	screen.c	FUNCTION_20
0x4338	              0xc3	                                     ret	      2325	screen.c	FUNCTION_20
win_line	DO,0:functions,0:CALL,209:ELSE,116:IF,336:WHILE,9:FOR,6:SWITCH,0	4895
0x5ed6	              0x55	                                push rbp	      3006	screen.c	FUNCTION_28
0x5ed7	          0x4889e5	                            mov rbp, rsp	      3006	screen.c	FUNCTION_28
0x5eda	              0x53	                                push rbx	      3006	screen.c	FUNCTION_28
0x5edb	    0x4881ec280400	                          sub rsp, 0x428	      3006	screen.c	FUNCTION_28
0x5ee2	    0x4889bde8fbff	            mov qword [rbp - 0x418], rdi	      3006	screen.c	FUNCTION_28
0x5ee9	    0x4889b5e0fbff	            mov qword [rbp - 0x420], rsi	      3006	screen.c	FUNCTION_28
0x5ef0	    0x8995dcfbffff	            mov dword [rbp - 0x424], edx	      3006	screen.c	FUNCTION_28
0x5ef6	    0x898dd8fbffff	            mov dword [rbp - 0x428], ecx	      3006	screen.c	FUNCTION_28
0x5efc	    0x448985d4fbff	            mov dword [rbp - 0x42c], r8d	      3006	screen.c	FUNCTION_28
0x5f03	    0x64488b042528	                mov rax, qword fs:[0x28]	      3006	screen.c	FUNCTION_28
0x5f0c	        0x488945e8	             mov qword [rbp - 0x18], rax	      3006	screen.c	FUNCTION_28
0x5f10	            0x31c0	                            xor eax, eax	      3006	screen.c	FUNCTION_28
0x5f12	    0xc7851cfcffff	              mov dword [rbp - 0x3e4], 0	      3007	screen.c	FUNCTION_28
0x5f1c	    0xc785fcfbffff	              mov dword [rbp - 0x404], 0	      3009	screen.c	FUNCTION_28
0x5f26	    0x48c78590fdff	              mov qword [rbp - 0x270], 0	      3010	screen.c	FUNCTION_28
0x5f31	    0x48c78598fdff	mov qword [rbp - 0x268], 0xffffffffffffffff	      3012	screen.c	FUNCTION_28
0x5f3c	    0x48c785a0fdff	mov qword [rbp - 0x260], 0xffffffffffffffff	      3014	screen.c	FUNCTION_28
0x5f47	    0xc7852cfcffff	              mov dword [rbp - 0x3d4], 0	      3021	screen.c	FUNCTION_28
0x5f51	    0x48c78580fdff	              mov qword [rbp - 0x280], 0	      3022	screen.c	FUNCTION_28
0x5f5c	    0x48c785b8fdff	              mov qword [rbp - 0x248], 0	      3023	screen.c	FUNCTION_28
0x5f67	    0xc78530fcffff	              mov dword [rbp - 0x3d0], 0	      3024	screen.c	FUNCTION_28
0x5f71	    0xc78534fcffff	              mov dword [rbp - 0x3cc], 0	      3025	screen.c	FUNCTION_28
0x5f7b	    0x8b0500000000	            mov eax, dword [0x04005fc1] 	      3028	screen.c	FUNCTION_28
0x5f81	    0x898538fcffff	            mov dword [rbp - 0x3c8], eax	      3028	screen.c	FUNCTION_28
0x5f87	    0x8b0500000000	            mov eax, dword [0x04005fcd] 	      3029	screen.c	FUNCTION_28
0x5f8d	    0x89853cfcffff	            mov dword [rbp - 0x3c4], eax	      3029	screen.c	FUNCTION_28
0x5f93	    0xc78540fcffff	              mov dword [rbp - 0x3c0], 0	      3032	screen.c	FUNCTION_28
0x5f9d	    0x48c785c0fdff	              mov qword [rbp - 0x240], 0	      3033	screen.c	FUNCTION_28
0x5fa8	    0xc78544fcffff	              mov dword [rbp - 0x3bc], 0	      3034	screen.c	FUNCTION_28
0x5fb2	    0xc78548fcffff	              mov dword [rbp - 0x3b8], 0	      3035	screen.c	FUNCTION_28
0x5fbc	    0xc7854cfcffff	              mov dword [rbp - 0x3b4], 0	      3037	screen.c	FUNCTION_28
0x5fc6	    0xc78550fcffff	              mov dword [rbp - 0x3b0], 0	      3038	screen.c	FUNCTION_28
0x5fd0	    0xc78554fcffff	              mov dword [rbp - 0x3ac], 0	      3039	screen.c	FUNCTION_28
0x5fda	    0xc78558fcffff	              mov dword [rbp - 0x3a8], 0	      3040	screen.c	FUNCTION_28
0x5fe4	    0xc7855cfcffff	              mov dword [rbp - 0x3a4], 0	      3042	screen.c	FUNCTION_28
0x5fee	    0xc78560fcffff	    mov dword [rbp - 0x3a0], 0xfffffffe 	      3045	screen.c	FUNCTION_28
0x5ff8	    0xc78564fcffff	              mov dword [rbp - 0x39c], 0	      3046	screen.c	FUNCTION_28
0x6002	    0xc78568fcffff	              mov dword [rbp - 0x398], 0	      3048	screen.c	FUNCTION_28
0x600c	    0xc7856cfcffff	              mov dword [rbp - 0x394], 0	      3052	screen.c	FUNCTION_28
0x6016	    0xc78570fcffff	              mov dword [rbp - 0x390], 0	      3053	screen.c	FUNCTION_28
0x6020	    0xc78574fcffff	              mov dword [rbp - 0x38c], 0	      3054	screen.c	FUNCTION_28
0x602a	    0xc78578fcffff	              mov dword [rbp - 0x388], 0	      3056	screen.c	FUNCTION_28
0x6034	    0xc7857cfcffff	              mov dword [rbp - 0x384], 0	      3057	screen.c	FUNCTION_28
0x603e	    0xc78580fcffff	              mov dword [rbp - 0x380], 0	      3058	screen.c	FUNCTION_28
0x6048	    0xc78584fcffff	              mov dword [rbp - 0x37c], 0	      3060	screen.c	FUNCTION_28
0x6052	    0xc78588fcffff	              mov dword [rbp - 0x378], 0	      3061	screen.c	FUNCTION_28
0x605c	    0xc7858cfcffff	              mov dword [rbp - 0x374], 0	      3062	screen.c	FUNCTION_28
0x6066	    0xc78590fcffff	              mov dword [rbp - 0x370], 0	      3064	screen.c	FUNCTION_28
0x6070	    0xc78594fcffff	              mov dword [rbp - 0x36c], 0	      3065	screen.c	FUNCTION_28
0x607a	    0x48c78588fdff	              mov qword [rbp - 0x278], 0	      3066	screen.c	FUNCTION_28
0x6085	    0xc78598fcffff	              mov dword [rbp - 0x368], 0	      3069	screen.c	FUNCTION_28
0x608f	    0xc7859cfcffff	              mov dword [rbp - 0x364], 0	      3072	screen.c	FUNCTION_28
0x6099	    0xc785a0fcffff	              mov dword [rbp - 0x360], 0	      3073	screen.c	FUNCTION_28
0x60a3	    0xc785a4fcffff	              mov dword [rbp - 0x35c], 0	      3075	screen.c	FUNCTION_28
0x60ad	    0xc785a8fcffff	              mov dword [rbp - 0x358], 0	      3076	screen.c	FUNCTION_28
0x60b7	    0xc785acfcffff	              mov dword [rbp - 0x354], 0	      3082	screen.c	FUNCTION_28
0x60c1	    0xc785b4fcffff	              mov dword [rbp - 0x34c], 0	      3086	screen.c	FUNCTION_28
0x60cb	    0xc785b8fcffff	              mov dword [rbp - 0x348], 1	      3087	screen.c	FUNCTION_28
0x60d5	    0xc785bcfcffff	              mov dword [rbp - 0x344], 0	      3088	screen.c	FUNCTION_28
0x60df	    0xc785c0fcffff	              mov dword [rbp - 0x340], 0	      3089	screen.c	FUNCTION_28
0x60e9	    0xc785ccfcffff	              mov dword [rbp - 0x334], 0	      3095	screen.c	FUNCTION_28
0x60f3	    0xc78508fcffff	     mov dword [rbp - 0x3f8], 0x7fffffff	      3096	screen.c	FUNCTION_28
0x60fd	    0xc7850cfcffff	    mov dword [rbp - 0x3f4], 0xffffffff 	      3097	screen.c	FUNCTION_28
0x6107	    0xc785d0fcffff	     mov dword [rbp - 0x330], 0x7fffffff	      3099	screen.c	FUNCTION_28
0x6111	    0xc785d4fcffff	              mov dword [rbp - 0x32c], 0	      3101	screen.c	FUNCTION_28
0x611b	    0xc785d8fcffff	              mov dword [rbp - 0x328], 0	      3107	screen.c	FUNCTION_28
0x6125	    0xc785e8fcffff	              mov dword [rbp - 0x318], 0	      3121	screen.c	FUNCTION_28
0x612f	    0xc785ecfcffff	              mov dword [rbp - 0x314], 0	      3122	screen.c	FUNCTION_28
0x6139	    0xc785f0fcffff	              mov dword [rbp - 0x310], 0	      3125	screen.c	FUNCTION_28
0x6143	    0xc785f4fcffff	              mov dword [rbp - 0x30c], 0	      3128	screen.c	FUNCTION_28
0x614d	    0xc785f8fcffff	              mov dword [rbp - 0x308], 0	      3129	screen.c	FUNCTION_28
0x6157	    0xc785fcfcffff	              mov dword [rbp - 0x304], 0	      3161	screen.c	FUNCTION_28
0x6161	    0xc78500fdffff	              mov dword [rbp - 0x300], 0	      3168	screen.c	FUNCTION_28
0x616b	    0xc78510fcffff	              mov dword [rbp - 0x3f0], 0	      3169	screen.c	FUNCTION_28
0x6175	    0xc78504fdffff	              mov dword [rbp - 0x2fc], 0	      3170	screen.c	FUNCTION_28
0x617f	    0x8b0500000000	            mov eax, dword [0x040061c5] 	      3171	screen.c	FUNCTION_28	CALL_1
0x6185	    0x898554fdffff	            mov dword [rbp - 0x2ac], eax	      3171	screen.c	FUNCTION_28	CALL_1
0x618b	    0xc78508fdffff	              mov dword [rbp - 0x2f8], 0	      3172	screen.c	FUNCTION_28
0x6195	    0xc7850cfdffff	              mov dword [rbp - 0x2f4], 0	      3173	screen.c	FUNCTION_28
0x619f	    0xc78510fdffff	              mov dword [rbp - 0x2f0], 0	      3175	screen.c	FUNCTION_28
0x61a9	    0xc78514fdffff	              mov dword [rbp - 0x2ec], 0	      3176	screen.c	FUNCTION_28
0x61b3	    0xc78518fdffff	              mov dword [rbp - 0x2e8], 0	      3177	screen.c	FUNCTION_28
0x61bd	    0xc7851cfdffff	              mov dword [rbp - 0x2e4], 0	      3178	screen.c	FUNCTION_28
0x61c7	    0xc78520fdffff	              mov dword [rbp - 0x2e0], 0	      3179	screen.c	FUNCTION_28
0x61d1	    0x8b85dcfbffff	            mov eax, dword [rbp - 0x424]	      3194	screen.c	FUNCTION_28	IF_1
0x61d7	    0x3b85d8fbffff	            cmp eax, dword [rbp - 0x428]	      3194	screen.c	FUNCTION_28	IF_1
0x61dd	            0x7e0b	                           jle 0x400622a	      3194	screen.c	FUNCTION_28	IF_1
0x61df	    0x8b85dcfbffff	            mov eax, dword [rbp - 0x424]	      3195	screen.c	FUNCTION_28	IF_1
0x61e5	      0xe9735e0000	                           jmp 0x400c09d	      3195	screen.c	FUNCTION_28	IF_1
0x61ea	    0x8b85dcfbffff	            mov eax, dword [rbp - 0x424]	      3197	screen.c	FUNCTION_28
0x61f0	    0x898524fcffff	            mov dword [rbp - 0x3dc], eax	      3197	screen.c	FUNCTION_28
0x61f6	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3198	screen.c	FUNCTION_28	CALL_2
0x61fd	    0x8b909c000000	            mov edx, dword [rax + 0x9c] 	      3198	screen.c	FUNCTION_28	CALL_2
0x6203	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3198	screen.c	FUNCTION_28	CALL_2
0x620a	    0x8b80a8010000	           mov eax, dword [rax + 0x1a8] 	      3198	screen.c	FUNCTION_28	CALL_2
0x6210	             0x1c2	                            add edx, eax	      3198	screen.c	FUNCTION_28	CALL_2
0x6212	    0x8b8524fcffff	            mov eax, dword [rbp - 0x3dc]	      3198	screen.c	FUNCTION_28	CALL_2
0x6218	             0x1d0	                            add eax, edx	      3198	screen.c	FUNCTION_28	CALL_2
0x621a	    0x898528fcffff	            mov dword [rbp - 0x3d8], eax	      3198	screen.c	FUNCTION_28	CALL_2
0x6220	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3205	screen.c	FUNCTION_28
0x6227	    0x8b8030020000	           mov eax, dword [rax + 0x230] 	      3205	screen.c	FUNCTION_28
0x622d	    0x8985b0fcffff	            mov dword [rbp - 0x350], eax	      3205	screen.c	FUNCTION_28
0x6233	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3210	screen.c	FUNCTION_28	IF_2	CALL_3
0x623a	          0x4889c7	                            mov rdi, rax	      3210	screen.c	FUNCTION_28	IF_2	CALL_3
0x623d	      0xe800000000	                          call 0x4006282	      3210	screen.c	FUNCTION_28	IF_2	CALL_3
0x6242	            0x85c0	                           test eax, eax	      3210	screen.c	FUNCTION_28	IF_2	CALL_3
0x6244	     0xf84b7000000	                            je 0x4006341	      3210	screen.c	FUNCTION_28	IF_2	CALL_3
0x624a	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3210	screen.c	FUNCTION_28	IF_2	CALL_3
0x6251	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3210	screen.c	FUNCTION_28	IF_2	CALL_3
0x6255	    0x8b8050020000	           mov eax, dword [rax + 0x250] 	      3210	screen.c	FUNCTION_28	IF_2	CALL_3
0x625b	            0x85c0	                           test eax, eax	      3210	screen.c	FUNCTION_28	IF_2	CALL_3
0x625d	     0xf859e000000	                           jne 0x4006341	      3210	screen.c	FUNCTION_28	IF_2	CALL_3
0x6263	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3212	screen.c	FUNCTION_28	IF_2
0x626a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3212	screen.c	FUNCTION_28	IF_2
0x626e	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      3212	screen.c	FUNCTION_28	IF_2
0x6274	            0x85c0	                           test eax, eax	      3212	screen.c	FUNCTION_28	IF_2
0x6276	     0xf8585000000	                           jne 0x4006341	      3212	screen.c	FUNCTION_28	IF_2
0x627c	    0x8b0500000000	            mov eax, dword [0x040062c2] 	      3218	screen.c	FUNCTION_28	IF_2
0x6282	    0x898558fdffff	            mov dword [rbp - 0x2a8], eax	      3218	screen.c	FUNCTION_28	IF_2
0x6288	    0xc70500000000	               mov dword [0x040062d2], 0	      3219	screen.c	FUNCTION_28	IF_2
0x6292	    0x488b95e0fbff	            mov rdx, qword [rbp - 0x420]	      3220	screen.c	FUNCTION_28	IF_2	CALL_4
0x6299	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3220	screen.c	FUNCTION_28	IF_2	CALL_4
0x62a0	          0x4889d6	                            mov rsi, rdx	      3220	screen.c	FUNCTION_28	IF_2	CALL_4
0x62a3	          0x4889c7	                            mov rdi, rax	      3220	screen.c	FUNCTION_28	IF_2	CALL_4
0x62a6	      0xe800000000	                          call 0x40062eb	      3220	screen.c	FUNCTION_28	IF_2	CALL_4
0x62ab	    0x8b0500000000	            mov eax, dword [0x040062f1] 	      3221	screen.c	FUNCTION_28	IF_2	IF_3
0x62b1	            0x85c0	                           test eax, eax	      3221	screen.c	FUNCTION_28	IF_2	IF_3
0x62b3	            0x7417	                            je 0x400630c	      3221	screen.c	FUNCTION_28	IF_2	IF_3
0x62b5	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3222	screen.c	FUNCTION_28	IF_2	IF_3
0x62bc	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3222	screen.c	FUNCTION_28	IF_2	IF_3
0x62c0	    0xc78050020000	              mov dword [rax + 0x250], 1	      3222	screen.c	FUNCTION_28	IF_2	IF_3
0x62ca	            0xeb35	                           jmp 0x4006341	      3222	screen.c	FUNCTION_28	IF_2	IF_3
0x62cc	    0x8b8558fdffff	            mov eax, dword [rbp - 0x2a8]	      3225	screen.c	FUNCTION_28	IF_2	ELSE_1
0x62d2	    0x890500000000	            mov dword [0x04006318], eax 	      3225	screen.c	FUNCTION_28	IF_2	ELSE_1
0x62d8	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3227	screen.c	FUNCTION_28	IF_2	ELSE_1	IF_4
0x62df	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3227	screen.c	FUNCTION_28	IF_2	ELSE_1	IF_4
0x62e3	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      3227	screen.c	FUNCTION_28	IF_2	ELSE_1	IF_4
0x62e9	            0x85c0	                           test eax, eax	      3227	screen.c	FUNCTION_28	IF_2	ELSE_1	IF_4
0x62eb	            0x7514	                           jne 0x4006341	      3227	screen.c	FUNCTION_28	IF_2	ELSE_1	IF_4
0x62ed	    0xc7858cfcffff	              mov dword [rbp - 0x374], 1	      3230	screen.c	FUNCTION_28	IF_2	ELSE_1	IF_4
0x62f7	    0xc785b0fcffff	              mov dword [rbp - 0x350], 1	      3231	screen.c	FUNCTION_28	IF_2	ELSE_1	IF_4
0x6301	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3237	screen.c	FUNCTION_28
0x6308	    0x488b80380500	           mov rax, qword [rax + 0x538] 	      3237	screen.c	FUNCTION_28
0x630f	    0x48898588fdff	            mov qword [rbp - 0x278], rax	      3237	screen.c	FUNCTION_28
0x6316	    0x488b8588fdff	            mov rax, qword [rbp - 0x278]	      3238	screen.c	FUNCTION_28	IF_5
0x631d	          0x4885c0	                           test rax, rax	      3238	screen.c	FUNCTION_28	IF_5
0x6320	            0x742c	                            je 0x400638e	      3238	screen.c	FUNCTION_28	IF_5
0x6322	    0x488b8590fdff	            mov rax, qword [rbp - 0x270]	      3239	screen.c	FUNCTION_28	CALL_5
0x6329	            0x89c2	                            mov edx, eax	      3239	screen.c	FUNCTION_28	CALL_5
0x632b	    0x8b8510fdffff	            mov eax, dword [rbp - 0x2f0]	      3239	screen.c	FUNCTION_28	CALL_5
0x6331	            0x29c2	                            sub edx, eax	      3239	screen.c	FUNCTION_28	CALL_5
0x6333	            0x89d0	                            mov eax, edx	      3239	screen.c	FUNCTION_28	CALL_5
0x6335	            0x89c2	                            mov edx, eax	      3239	screen.c	FUNCTION_28	CALL_5
0x6337	    0x488d8588fdff	                  lea rax, [rbp - 0x278]	      3239	screen.c	FUNCTION_28	CALL_5
0x633e	          0x4889c6	                            mov rsi, rax	      3239	screen.c	FUNCTION_28	CALL_5
0x6341	            0x89d7	                            mov edi, edx	      3239	screen.c	FUNCTION_28	CALL_5
0x6343	      0xe8b1e5ffff	              call sym.advance_color_col	      3239	screen.c	FUNCTION_28	CALL_5
0x6348	    0x898594fcffff	            mov dword [rbp - 0x36c], eax	      3239	screen.c	FUNCTION_28	CALL_5
0x634e	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3243	screen.c	FUNCTION_28	IF_6	CALL_6
0x6355	        0x488b4008	                mov rax, qword [rax + 8]	      3243	screen.c	FUNCTION_28	IF_6	CALL_6
0x6359	          0x4889c7	                            mov rdi, rax	      3243	screen.c	FUNCTION_28	IF_6	CALL_6
0x635c	      0xe800000000	                          call 0x40063a1	      3243	screen.c	FUNCTION_28	IF_6	CALL_6
0x6361	            0x85c0	                           test eax, eax	      3243	screen.c	FUNCTION_28	IF_6	CALL_6
0x6363	            0x743c	                            je 0x40063e1	      3243	screen.c	FUNCTION_28	IF_6	CALL_6
0x6365	    0xc785b0fcffff	              mov dword [rbp - 0x350], 1	      3245	screen.c	FUNCTION_28	IF_6
0x636f	    0xc785f4fcffff	              mov dword [rbp - 0x30c], 1	      3246	screen.c	FUNCTION_28	IF_6
0x6379	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3247	screen.c	FUNCTION_28	IF_6	CALL_7
0x6380	        0x488b4008	                mov rax, qword [rax + 8]	      3247	screen.c	FUNCTION_28	IF_6	CALL_7
0x6384	    0x488b8de0fbff	            mov rcx, qword [rbp - 0x420]	      3247	screen.c	FUNCTION_28	IF_6	CALL_7
0x638b	      0xbaffffffff	                     mov edx, 0xffffffff	      3247	screen.c	FUNCTION_28	IF_6	CALL_7
0x6390	          0x4889ce	                            mov rsi, rcx	      3247	screen.c	FUNCTION_28	IF_6	CALL_7
0x6393	          0x4889c7	                            mov rdi, rax	      3247	screen.c	FUNCTION_28	IF_6	CALL_7
0x6396	      0xe800000000	                          call 0x40063db	      3247	screen.c	FUNCTION_28	IF_6	CALL_7
0x639b	    0x8985f8fcffff	            mov dword [rbp - 0x308], eax	      3247	screen.c	FUNCTION_28	IF_6	CALL_7
0x63a1	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3252	screen.c	FUNCTION_28	IF_7
0x63a8	    0x8b8068020000	           mov eax, dword [rax + 0x268] 	      3252	screen.c	FUNCTION_28	IF_7
0x63ae	            0x85c0	                           test eax, eax	      3252	screen.c	FUNCTION_28	IF_7
0x63b0	     0xf8437010000	                            je 0x400652d	      3252	screen.c	FUNCTION_28	IF_7
0x63b6	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3253	screen.c	FUNCTION_28	IF_7
0x63bd	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3253	screen.c	FUNCTION_28	IF_7
0x63c1	    0x488b80800400	           mov rax, qword [rax + 0x480] 	      3253	screen.c	FUNCTION_28	IF_7
0x63c8	           0xfb600	                   movzx eax, byte [rax]	      3253	screen.c	FUNCTION_28	IF_7
0x63cb	            0x84c0	                             test al, al	      3253	screen.c	FUNCTION_28	IF_7
0x63cd	     0xf841a010000	                            je 0x400652d	      3253	screen.c	FUNCTION_28	IF_7
0x63d3	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3254	screen.c	FUNCTION_28	IF_7
0x63da	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3254	screen.c	FUNCTION_28	IF_7
0x63de	    0x8b8048030000	           mov eax, dword [rax + 0x348] 	      3254	screen.c	FUNCTION_28	IF_7
0x63e4	            0x85c0	                           test eax, eax	      3254	screen.c	FUNCTION_28	IF_7
0x63e6	     0xf8e01010000	                           jle 0x400652d	      3254	screen.c	FUNCTION_28	IF_7
0x63ec	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3255	screen.c	FUNCTION_28	IF_7
0x63f3	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3255	screen.c	FUNCTION_28	IF_7
0x63f7	    0x488b80580300	           mov rax, qword [rax + 0x358] 	      3255	screen.c	FUNCTION_28	IF_7
0x63fe	          0x488b00	                    mov rax, qword [rax]	      3255	screen.c	FUNCTION_28	IF_7
0x6401	          0x4885c0	                           test rax, rax	      3255	screen.c	FUNCTION_28	IF_7
0x6404	     0xf84e3000000	                            je 0x400652d	      3255	screen.c	FUNCTION_28	IF_7
0x640a	    0xc78598fcffff	              mov dword [rbp - 0x368], 1	      3258	screen.c	FUNCTION_28	IF_7
0x6414	    0xc785b0fcffff	              mov dword [rbp - 0x350], 1	      3259	screen.c	FUNCTION_28	IF_7
0x641e	    0xc68546ffffff	                mov byte [rbp - 0xba], 0	      3264	screen.c	FUNCTION_28	IF_7
0x6425	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3265	screen.c	FUNCTION_28	IF_7	IF_8
0x642c	        0x488b4008	                mov rax, qword [rax + 8]	      3265	screen.c	FUNCTION_28	IF_7	IF_8
0x6430	          0x488b00	                    mov rax, qword [rax]	      3265	screen.c	FUNCTION_28	IF_7	IF_8
0x6433	    0x483b85e0fbff	            cmp rax, qword [rbp - 0x420]	      3265	screen.c	FUNCTION_28	IF_7	IF_8
0x643a	            0x7e51	                           jle 0x40064cd	      3265	screen.c	FUNCTION_28	IF_7	IF_8
0x643c	    0x488b85e0fbff	            mov rax, qword [rbp - 0x420]	      3267	screen.c	FUNCTION_28	IF_7	IF_8	CALL_8
0x6443	        0x488d4801	                      lea rcx, [rax + 1]	      3267	screen.c	FUNCTION_28	IF_7	IF_8	CALL_8
0x6447	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3267	screen.c	FUNCTION_28	IF_7	IF_8	CALL_8
0x644e	        0x488b4008	                mov rax, qword [rax + 8]	      3267	screen.c	FUNCTION_28	IF_7	IF_8	CALL_8
0x6452	      0xba00000000	                              mov edx, 0	      3267	screen.c	FUNCTION_28	IF_7	IF_8	CALL_8
0x6457	          0x4889ce	                            mov rsi, rcx	      3267	screen.c	FUNCTION_28	IF_7	IF_8	CALL_8
0x645a	          0x4889c7	                            mov rdi, rax	      3267	screen.c	FUNCTION_28	IF_7	IF_8	CALL_8
0x645d	      0xe800000000	                          call 0x40064a2	      3267	screen.c	FUNCTION_28	IF_7	IF_8	CALL_8
0x6462	    0x488985a8fdff	            mov qword [rbp - 0x258], rax	      3267	screen.c	FUNCTION_28	IF_7	IF_8	CALL_8
0x6469	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	      3268	screen.c	FUNCTION_28	IF_7	IF_8	CALL_9
0x6470	    0x480596000000	                           add rax, 0x96	      3268	screen.c	FUNCTION_28	IF_7	IF_8	CALL_9
0x6476	    0x488b8da8fdff	            mov rcx, qword [rbp - 0x258]	      3268	screen.c	FUNCTION_28	IF_7	IF_8	CALL_9
0x647d	      0xba96000000	                           mov edx, 0x96	      3268	screen.c	FUNCTION_28	IF_7	IF_8	CALL_9
0x6482	          0x4889ce	                            mov rsi, rcx	      3268	screen.c	FUNCTION_28	IF_7	IF_8	CALL_9
0x6485	          0x4889c7	                            mov rdi, rax	      3268	screen.c	FUNCTION_28	IF_7	IF_8	CALL_9
0x6488	      0xe800000000	                          call 0x40064cd	      3268	screen.c	FUNCTION_28	IF_7	IF_8	CALL_9
0x648d	    0x488b05000000	            mov rax, qword [0x040064d4] 	      3273	screen.c	FUNCTION_28	IF_7	IF_9
0x6494	    0x483985e0fbff	           cmp qword [rbp - 0x420], rax 	      3273	screen.c	FUNCTION_28	IF_7	IF_9
0x649b	            0x750c	                           jne 0x40064e9	      3273	screen.c	FUNCTION_28	IF_7	IF_9
0x649d	    0x8b0500000000	            mov eax, dword [0x040064e3] 	      3274	screen.c	FUNCTION_28	IF_7	IF_9
0x64a3	    0x8985acfcffff	            mov dword [rbp - 0x354], eax	      3274	screen.c	FUNCTION_28	IF_7	IF_9
0x64a9	    0x48c705000000	               mov qword [0x040064f4], 0	      3275	screen.c	FUNCTION_28	IF_7
0x64b4	    0x488b05000000	            mov rax, qword [0x040064fb] 	      3280	screen.c	FUNCTION_28	IF_7	IF_10
0x64bb	    0x483985e0fbff	           cmp qword [rbp - 0x420], rax 	      3280	screen.c	FUNCTION_28	IF_7	IF_10
0x64c2	            0x740a	                            je 0x400650e	      3280	screen.c	FUNCTION_28	IF_7	IF_10
0x64c4	    0xc70500000000	     mov dword [0x0400650e], 0xffffffff 	      3281	screen.c	FUNCTION_28	IF_7	IF_10
0x64ce	    0x4883bde0fbff	              cmp qword [rbp - 0x420], 1	      3282	screen.c	FUNCTION_28	IF_7	IF_11
0x64d6	            0x750a	                           jne 0x4006522	      3282	screen.c	FUNCTION_28	IF_7	IF_11
0x64d8	    0xc70500000000	               mov dword [0x04006522], 0	      3283	screen.c	FUNCTION_28	IF_7	IF_11
0x64e2	    0x48c705000000	               mov qword [0x0400652d], 0	      3284	screen.c	FUNCTION_28	IF_7
0x64ed	    0xc78500fcffff	    mov dword [rbp - 0x400], 0xfffffff6 	      3291	screen.c	FUNCTION_28
0x64f7	    0xc78504fcffff	     mov dword [rbp - 0x3fc], 0x7fffffff	      3292	screen.c	FUNCTION_28
0x6501	    0x8b0500000000	            mov eax, dword [0x04006547] 	      3293	screen.c	FUNCTION_28	IF_12
0x6507	            0x85c0	                           test eax, eax	      3293	screen.c	FUNCTION_28	IF_12
0x6509	     0xf84ec030000	                            je 0x400693b	      3293	screen.c	FUNCTION_28	IF_12
0x650f	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3293	screen.c	FUNCTION_28	IF_12
0x6516	        0x488b5008	                mov rdx, qword [rax + 8]	      3293	screen.c	FUNCTION_28	IF_12
0x651a	    0x488b05000000	            mov rax, qword [0x04006561] 	      3293	screen.c	FUNCTION_28	IF_12
0x6521	        0x488b4008	                mov rax, qword [rax + 8]	      3293	screen.c	FUNCTION_28	IF_12
0x6525	          0x4839c2	                            cmp rdx, rax	      3293	screen.c	FUNCTION_28	IF_12
0x6528	     0xf85cd030000	                           jne 0x400693b	      3293	screen.c	FUNCTION_28	IF_12
0x652e	    0x488b05000000	            mov rax, qword [0x04006575] 	      3296	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x6535	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3296	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x6539	    0x488b05000000	            mov rax, qword [0x04006580] 	      3296	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x6540	          0x4839c2	                            cmp rdx, rax	      3296	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x6543	            0x7419	                            je 0x400659e	      3296	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x6545	    0x488b05000000	            mov rax, qword [0x0400658c] 	      3296	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x654c	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3296	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x6550	    0x488b05000000	            mov rax, qword [0x04006597] 	      3296	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x6557	          0x4839c2	                            cmp rdx, rax	      3296	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x655a	            0x7c7f	                            jl 0x400661b	      3296	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x655c	            0xeb3e	                           jmp 0x40065dc	      3296	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x655e	    0x488b05000000	            mov rax, qword [0x040065a5] 	      3296	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x6565	          0x8b5040	            mov edx, dword [rax + 0x40] 	      3296	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x6568	    0x8b0500000000	            mov eax, dword [0x040065ae] 	      3296	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x656e	            0x39c2	                            cmp edx, eax	      3296	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x6570	            0x7416	                            je 0x40065c8	      3296	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x6572	    0x488b05000000	            mov rax, qword [0x040065b9] 	      3296	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x6579	          0x8b5040	            mov edx, dword [rax + 0x40] 	      3296	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x657c	    0x8b0500000000	            mov eax, dword [0x040065c2] 	      3296	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x6582	            0x39c2	                            cmp edx, eax	      3296	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x6584	            0x7c55	                            jl 0x400661b	      3296	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x6586	            0xeb14	                           jmp 0x40065dc	      3296	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x6588	    0x488b05000000	            mov rax, qword [0x040065cf] 	      3296	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x658f	          0x8b5044	            mov edx, dword [rax + 0x44] 	      3296	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x6592	    0x8b0500000000	            mov eax, dword [0x040065d8] 	      3296	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x6598	            0x39c2	                            cmp edx, eax	      3296	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x659a	            0x7c3f	                            jl 0x400661b	      3296	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x659c	    0x488b05000000	            mov rax, qword [0x040065e3] 	      3296	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x65a3	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3296	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x65a7	    0x488b05000000	            mov rax, qword [0x040065ee] 	      3296	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x65ae	          0x4839c2	                            cmp rdx, rax	      3296	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x65b1	            0x7547	                           jne 0x400663a	      3296	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x65b3	    0x488b05000000	            mov rax, qword [0x040065fa] 	      3296	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x65ba	          0x8b5040	            mov edx, dword [rax + 0x40] 	      3296	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x65bd	    0x8b0500000000	            mov eax, dword [0x04006603] 	      3296	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x65c3	            0x39c2	                            cmp edx, eax	      3296	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x65c5	            0x7533	                           jne 0x400663a	      3296	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x65c7	    0x488b05000000	            mov rax, qword [0x0400660e] 	      3296	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x65ce	          0x8b5044	            mov edx, dword [rax + 0x44] 	      3296	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x65d1	    0x8b0500000000	            mov eax, dword [0x04006617] 	      3296	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x65d7	            0x39c2	                            cmp edx, eax	      3296	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x65d9	            0x751f	                           jne 0x400663a	      3296	screen.c	FUNCTION_28	IF_12	IF_13	CALL_10
0x65db	    0x488b05000000	            mov rax, qword [0x04006622] 	      3298	screen.c	FUNCTION_28	IF_12	IF_13
0x65e2	        0x4883c038	                           add rax, 0x38	      3298	screen.c	FUNCTION_28	IF_12	IF_13
0x65e6	    0x488985c8fdff	            mov qword [rbp - 0x238], rax	      3298	screen.c	FUNCTION_28	IF_12	IF_13
0x65ed	    0x48c785d0fdff	              mov qword [rbp - 0x230], 0	      3299	screen.c	FUNCTION_28	IF_12	IF_13
0x65f8	            0xeb1d	                           jmp 0x4006657	      3299	screen.c	FUNCTION_28	IF_12	IF_13
0x65fa	    0x48c785c8fdff	              mov qword [rbp - 0x238], 0	      3303	screen.c	FUNCTION_28	IF_12	ELSE_2
0x6605	    0x488b05000000	            mov rax, qword [0x0400664c] 	      3304	screen.c	FUNCTION_28	IF_12	ELSE_2
0x660c	        0x4883c038	                           add rax, 0x38	      3304	screen.c	FUNCTION_28	IF_12	ELSE_2
0x6610	    0x488985d0fdff	            mov qword [rbp - 0x230], rax	      3304	screen.c	FUNCTION_28	IF_12	ELSE_2
0x6617	    0x488b85c8fdff	            mov rax, qword [rbp - 0x238]	      3306	screen.c	FUNCTION_28	IF_12
0x661e	          0x488b00	                    mov rax, qword [rax]	      3306	screen.c	FUNCTION_28	IF_12
0x6621	    0x483b85e0fbff	            cmp rax, qword [rbp - 0x420]	      3306	screen.c	FUNCTION_28	IF_12
0x6628	            0x7f1a	                            jg 0x4006684	      3306	screen.c	FUNCTION_28	IF_12
0x662a	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      3306	screen.c	FUNCTION_28	IF_12
0x6631	          0x488b00	                    mov rax, qword [rax]	      3306	screen.c	FUNCTION_28	IF_12
0x6634	    0x483b85e0fbff	            cmp rax, qword [rbp - 0x420]	      3306	screen.c	FUNCTION_28	IF_12
0x663b	            0x7c07	                            jl 0x4006684	      3306	screen.c	FUNCTION_28	IF_12
0x663d	      0xb801000000	                              mov eax, 1	      3306	screen.c	FUNCTION_28	IF_12
0x6642	            0xeb05	                           jmp 0x4006689	      3306	screen.c	FUNCTION_28	IF_12
0x6644	      0xb800000000	                              mov eax, 0	      3306	screen.c	FUNCTION_28	IF_12
0x6649	    0x898568fcffff	            mov dword [rbp - 0x398], eax	      3306	screen.c	FUNCTION_28	IF_12
0x664f	    0x8b0500000000	            mov eax, dword [0x04006695] 	      3307	screen.c	FUNCTION_28	IF_12	IF_14
0x6655	          0x83f816	                           cmp eax, 0x16	      3307	screen.c	FUNCTION_28	IF_12	IF_14
0x6658	            0x7532	                           jne 0x40066cc	      3307	screen.c	FUNCTION_28	IF_12	IF_14
0x665a	    0x83bd68fcffff	              cmp dword [rbp - 0x398], 0	      3309	screen.c	FUNCTION_28	IF_12	IF_14	IF_15
0x6661	     0xf84e1010000	                            je 0x4006888	      3309	screen.c	FUNCTION_28	IF_12	IF_14	IF_15
0x6667	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3311	screen.c	FUNCTION_28	IF_12	IF_14	IF_15
0x666e	          0x8b4060	            mov eax, dword [rax + 0x60] 	      3311	screen.c	FUNCTION_28	IF_12	IF_14	IF_15
0x6671	    0x898500fcffff	            mov dword [rbp - 0x400], eax	      3311	screen.c	FUNCTION_28	IF_12	IF_14	IF_15
0x6677	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3312	screen.c	FUNCTION_28	IF_12	IF_14	IF_15
0x667e	          0x8b4064	            mov eax, dword [rax + 0x64] 	      3312	screen.c	FUNCTION_28	IF_12	IF_14	IF_15
0x6681	    0x898504fcffff	            mov dword [rbp - 0x3fc], eax	      3312	screen.c	FUNCTION_28	IF_12	IF_14	IF_15
0x6687	      0xe9bc010000	                           jmp 0x4006888	      3312	screen.c	FUNCTION_28	IF_12	IF_14	IF_15
0x668c	    0x488b85c8fdff	            mov rax, qword [rbp - 0x238]	      3317	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_16
0x6693	          0x488b00	                    mov rax, qword [rax]	      3317	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_16
0x6696	    0x483b85e0fbff	            cmp rax, qword [rbp - 0x420]	      3317	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_16
0x669d	            0x7d1f	                           jge 0x40066fe	      3317	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_16
0x669f	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      3317	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_16
0x66a6	          0x488b00	                    mov rax, qword [rax]	      3317	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_16
0x66a9	    0x483b85e0fbff	            cmp rax, qword [rbp - 0x420]	      3317	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_16
0x66b0	            0x7c0c	                            jl 0x40066fe	      3317	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_16
0x66b2	    0xc78500fcffff	              mov dword [rbp - 0x400], 0	      3318	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_16
0x66bc	            0xeb74	                           jmp 0x4006772	      3318	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_16
0x66be	    0x488b85c8fdff	            mov rax, qword [rbp - 0x238]	      3319	screen.c	FUNCTION_28	IF_12	ELSE_3	ELSE_4	IF_17
0x66c5	          0x488b00	                    mov rax, qword [rax]	      3319	screen.c	FUNCTION_28	IF_12	ELSE_3	ELSE_4	IF_17
0x66c8	    0x483b85e0fbff	            cmp rax, qword [rbp - 0x420]	      3319	screen.c	FUNCTION_28	IF_12	ELSE_3	ELSE_4	IF_17
0x66cf	            0x7561	                           jne 0x4006772	      3319	screen.c	FUNCTION_28	IF_12	ELSE_3	ELSE_4	IF_17
0x66d1	    0x8b0500000000	            mov eax, dword [0x04006717] 	      3321	screen.c	FUNCTION_28	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x66d7	          0x83f856	                           cmp eax, 0x56	      3321	screen.c	FUNCTION_28	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x66da	            0x750c	                           jne 0x4006728	      3321	screen.c	FUNCTION_28	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x66dc	    0xc78500fcffff	              mov dword [rbp - 0x400], 0	      3322	screen.c	FUNCTION_28	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x66e6	            0xeb4a	                           jmp 0x4006772	      3322	screen.c	FUNCTION_28	IF_12	ELSE_3	ELSE_4	IF_17	IF_18
0x66e8	    0x488d9500fcff	                  lea rdx, [rbp - 0x400]	      3325	screen.c	FUNCTION_28	IF_12	ELSE_3	ELSE_4	IF_17	ELSE_5	CALL_11
0x66ef	    0x488bb5c8fdff	            mov rsi, qword [rbp - 0x238]	      3325	screen.c	FUNCTION_28	IF_12	ELSE_3	ELSE_4	IF_17	ELSE_5	CALL_11
0x66f6	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3325	screen.c	FUNCTION_28	IF_12	ELSE_3	ELSE_4	IF_17	ELSE_5	CALL_11
0x66fd	    0x41b800000000	                              mov r8d, 0	      3325	screen.c	FUNCTION_28	IF_12	ELSE_3	ELSE_4	IF_17	ELSE_5	CALL_11
0x6703	      0xb900000000	                              mov ecx, 0	      3325	screen.c	FUNCTION_28	IF_12	ELSE_3	ELSE_4	IF_17	ELSE_5	CALL_11
0x6708	          0x4889c7	                            mov rdi, rax	      3325	screen.c	FUNCTION_28	IF_12	ELSE_3	ELSE_4	IF_17	ELSE_5	CALL_11
0x670b	      0xe800000000	                          call 0x4006750	      3325	screen.c	FUNCTION_28	IF_12	ELSE_3	ELSE_4	IF_17	ELSE_5	CALL_11
0x6710	    0x488b85c8fdff	            mov rax, qword [rbp - 0x238]	      3326	screen.c	FUNCTION_28	IF_12	ELSE_3	ELSE_4	IF_17	ELSE_5	IF_19	CALL_12
0x6717	          0x4889c7	                            mov rdi, rax	      3326	screen.c	FUNCTION_28	IF_12	ELSE_3	ELSE_4	IF_17	ELSE_5	IF_19	CALL_12
0x671a	      0xe800000000	                          call 0x400675f	      3326	screen.c	FUNCTION_28	IF_12	ELSE_3	ELSE_4	IF_17	ELSE_5	IF_19	CALL_12
0x671f	            0x85c0	                           test eax, eax	      3326	screen.c	FUNCTION_28	IF_12	ELSE_3	ELSE_4	IF_17	ELSE_5	IF_19	CALL_12
0x6721	            0x750f	                           jne 0x4006772	      3326	screen.c	FUNCTION_28	IF_12	ELSE_3	ELSE_4	IF_17	ELSE_5	IF_19	CALL_12
0x6723	    0x8b8500fcffff	            mov eax, dword [rbp - 0x400]	      3327	screen.c	FUNCTION_28	IF_12	ELSE_3	ELSE_4	IF_17	ELSE_5	IF_19
0x6729	          0x83c001	                              add eax, 1	      3327	screen.c	FUNCTION_28	IF_12	ELSE_3	ELSE_4	IF_17	ELSE_5	IF_19
0x672c	    0x898504fcffff	            mov dword [rbp - 0x3fc], eax	      3327	screen.c	FUNCTION_28	IF_12	ELSE_3	ELSE_4	IF_17	ELSE_5	IF_19
0x6732	    0x8b0500000000	            mov eax, dword [0x04006778] 	      3330	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20
0x6738	          0x83f856	                           cmp eax, 0x56	      3330	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20
0x673b	     0xf8407010000	                            je 0x4006888	      3330	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20
0x6741	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      3330	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20
0x6748	          0x488b00	                    mov rax, qword [rax]	      3330	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20
0x674b	    0x483b85e0fbff	            cmp rax, qword [rbp - 0x420]	      3330	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20
0x6752	     0xf85f0000000	                           jne 0x4006888	      3330	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20
0x6758	    0x488b05000000	            mov rax, qword [0x0400679f] 	      3332	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	IF_21
0x675f	           0xfb600	                   movzx eax, byte [rax]	      3332	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	IF_21
0x6762	            0x3c65	                            cmp al, 0x65	      3332	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	IF_21
0x6764	            0x7535	                           jne 0x40067db	      3332	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	IF_21
0x6766	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      3332	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	IF_21
0x676d	          0x8b4008	                mov eax, dword [rax + 8]	      3332	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	IF_21
0x6770	            0x85c0	                           test eax, eax	      3332	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	IF_21
0x6772	            0x7527	                           jne 0x40067db	      3332	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	IF_21
0x6774	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      3334	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	IF_21
0x677b	          0x8b400c	              mov eax, dword [rax + 0xc]	      3334	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	IF_21
0x677e	            0x85c0	                           test eax, eax	      3334	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	IF_21
0x6780	            0x7519	                           jne 0x40067db	      3334	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	IF_21
0x6782	    0xc78500fcffff	    mov dword [rbp - 0x400], 0xfffffff6 	      3338	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	IF_21
0x678c	    0xc78504fcffff	     mov dword [rbp - 0x3fc], 0x7fffffff	      3339	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	IF_21
0x6796	      0xe9ad000000	                           jmp 0x4006888	      3339	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	IF_21
0x679b	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      3341	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_6	IF_22
0x67a2	          0x8b4008	                mov eax, dword [rax + 8]	      3341	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_6	IF_22
0x67a5	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      3341	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_6	IF_22
0x67aa	            0x750f	                           jne 0x40067fb	      3341	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_6	IF_22
0x67ac	    0xc78504fcffff	     mov dword [rbp - 0x3fc], 0x7fffffff	      3342	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_6	IF_22
0x67b6	      0xe98d000000	                           jmp 0x4006888	      3342	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_6	IF_22
0x67bb	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      3345	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7
0x67c2	        0x488b5008	                mov rdx, qword [rax + 8]	      3345	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7
0x67c6	          0x488b00	                    mov rax, qword [rax]	      3345	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7
0x67c9	    0x48898540feff	            mov qword [rbp - 0x1c0], rax	      3345	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7
0x67d0	    0x48899548feff	            mov qword [rbp - 0x1b8], rdx	      3345	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7
0x67d7	    0x488b05000000	            mov rax, qword [0x0400681e] 	      3346	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7	IF_23
0x67de	           0xfb600	                   movzx eax, byte [rax]	      3346	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7	IF_23
0x67e1	            0x3c65	                            cmp al, 0x65	      3346	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7	IF_23
0x67e3	            0x752a	                           jne 0x400684f	      3346	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7	IF_23
0x67e5	    0x488d9504fcff	                  lea rdx, [rbp - 0x3fc]	      3347	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7	CALL_13
0x67ec	    0x488db540feff	                  lea rsi, [rbp - 0x1c0]	      3347	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7	CALL_13
0x67f3	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3347	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7	CALL_13
0x67fa	    0x41b800000000	                              mov r8d, 0	      3347	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7	CALL_13
0x6800	      0xb900000000	                              mov ecx, 0	      3347	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7	CALL_13
0x6805	          0x4889c7	                            mov rdi, rax	      3347	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7	CALL_13
0x6808	      0xe800000000	                          call 0x400684d	      3347	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7	CALL_13
0x680d	            0xeb39	                           jmp 0x4006888	      3347	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7	CALL_13
0x680f	    0x488d9504fcff	                  lea rdx, [rbp - 0x3fc]	      3350	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7	ELSE_8	CALL_14
0x6816	    0x488db540feff	                  lea rsi, [rbp - 0x1c0]	      3350	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7	ELSE_8	CALL_14
0x681d	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3350	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7	ELSE_8	CALL_14
0x6824	          0x4989d0	                             mov r8, rdx	      3350	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7	ELSE_8	CALL_14
0x6827	      0xb900000000	                              mov ecx, 0	      3350	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7	ELSE_8	CALL_14
0x682c	      0xba00000000	                              mov edx, 0	      3350	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7	ELSE_8	CALL_14
0x6831	          0x4889c7	                            mov rdi, rax	      3350	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7	ELSE_8	CALL_14
0x6834	      0xe800000000	                          call 0x4006879	      3350	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7	ELSE_8	CALL_14
0x6839	    0x8b8504fcffff	            mov eax, dword [rbp - 0x3fc]	      3351	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7	ELSE_8
0x683f	          0x83c001	                              add eax, 1	      3351	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7	ELSE_8
0x6842	    0x898504fcffff	            mov dword [rbp - 0x3fc], eax	      3351	screen.c	FUNCTION_28	IF_12	ELSE_3	IF_20	ELSE_7	ELSE_8
0x6848	    0x8b0500000000	            mov eax, dword [0x0400688e] 	      3358	screen.c	FUNCTION_28	IF_12	IF_24
0x684e	            0x85c0	                           test eax, eax	      3358	screen.c	FUNCTION_28	IF_12	IF_24
0x6850	            0x752e	                           jne 0x40068c0	      3358	screen.c	FUNCTION_28	IF_12	IF_24
0x6852	    0x488b05000000	            mov rax, qword [0x04006899] 	      3358	screen.c	FUNCTION_28	IF_12	IF_24
0x6859	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3358	screen.c	FUNCTION_28	IF_12	IF_24
0x685d	    0x483b85e0fbff	            cmp rax, qword [rbp - 0x420]	      3358	screen.c	FUNCTION_28	IF_12	IF_24
0x6864	            0x751a	                           jne 0x40068c0	      3358	screen.c	FUNCTION_28	IF_12	IF_24
0x6866	    0x488b05000000	            mov rax, qword [0x040068ad] 	      3358	screen.c	FUNCTION_28	IF_12	IF_24
0x686d	    0x483985e8fbff	           cmp qword [rbp - 0x418], rax 	      3358	screen.c	FUNCTION_28	IF_12	IF_24
0x6874	            0x750a	                           jne 0x40068c0	      3358	screen.c	FUNCTION_28	IF_12	IF_24
0x6876	    0xc78564fcffff	              mov dword [rbp - 0x39c], 1	      3363	screen.c	FUNCTION_28	IF_12	IF_24
0x6880	    0x8b8500fcffff	            mov eax, dword [rbp - 0x400]	      3366	screen.c	FUNCTION_28	IF_12	IF_25
0x6886	            0x85c0	                           test eax, eax	      3366	screen.c	FUNCTION_28	IF_12	IF_25
0x6888	     0xf88b8010000	                            js 0x4006a86	      3366	screen.c	FUNCTION_28	IF_12	IF_25
0x688e	    0xc78574fcffff	              mov dword [rbp - 0x38c], 1	      3368	screen.c	FUNCTION_28	IF_12	IF_25
0x6898	    0x8b0500000000	            mov eax, dword [0x040068de] 	      3369	screen.c	FUNCTION_28	IF_12	IF_25	CALL_15
0x689e	    0x898578fcffff	            mov dword [rbp - 0x388], eax	      3369	screen.c	FUNCTION_28	IF_12	IF_25	CALL_15
0x68a4	    0x8b0500000000	            mov eax, dword [0x040068ea] 	      3371	screen.c	FUNCTION_28	IF_12	IF_25	IF_26
0x68aa	            0x85c0	                           test eax, eax	      3371	screen.c	FUNCTION_28	IF_12	IF_25	IF_26
0x68ac	            0x7413	                            je 0x4006901	      3371	screen.c	FUNCTION_28	IF_12	IF_25	IF_26
0x68ae	    0x8b0500000000	            mov eax, dword [0x040068f4] 	      3371	screen.c	FUNCTION_28	IF_12	IF_25	IF_26
0x68b4	            0x85c0	                           test eax, eax	      3371	screen.c	FUNCTION_28	IF_12	IF_25	IF_26
0x68b6	            0x7509	                           jne 0x4006901	      3371	screen.c	FUNCTION_28	IF_12	IF_25	IF_26
0x68b8	      0xe800000000	                          call 0x40068fd	      3372	screen.c	FUNCTION_28	IF_12	IF_25	IF_26	CALL_16
0x68bd	            0x85c0	                           test eax, eax	      3372	screen.c	FUNCTION_28	IF_12	IF_25	IF_26	CALL_16
0x68bf	            0x7529	                           jne 0x400692a	      3372	screen.c	FUNCTION_28	IF_12	IF_25	IF_26	CALL_16
0x68c1	    0x8b0500000000	            mov eax, dword [0x04006907] 	      3373	screen.c	FUNCTION_28	IF_12	IF_25	IF_26
0x68c7	            0x85c0	                           test eax, eax	      3373	screen.c	FUNCTION_28	IF_12	IF_25	IF_26
0x68c9	     0xf8477010000	                            je 0x4006a86	      3373	screen.c	FUNCTION_28	IF_12	IF_25	IF_26
0x68cf	    0x8b0500000000	            mov eax, dword [0x04006915] 	      3373	screen.c	FUNCTION_28	IF_12	IF_25	IF_26
0x68d5	            0x85c0	                           test eax, eax	      3373	screen.c	FUNCTION_28	IF_12	IF_25	IF_26
0x68d7	     0xf8569010000	                           jne 0x4006a86	      3373	screen.c	FUNCTION_28	IF_12	IF_25	IF_26
0x68dd	      0xe800000000	                          call 0x4006922	      3374	screen.c	FUNCTION_28	IF_12	IF_25	IF_26	CALL_17
0x68e2	            0x85c0	                           test eax, eax	      3374	screen.c	FUNCTION_28	IF_12	IF_25	IF_26	CALL_17
0x68e4	     0xf845c010000	                            je 0x4006a86	      3374	screen.c	FUNCTION_28	IF_12	IF_25	IF_26	CALL_17
0x68ea	    0x8b0500000000	            mov eax, dword [0x04006930] 	      3375	screen.c	FUNCTION_28	IF_12	IF_25	CALL_18
0x68f0	    0x898578fcffff	            mov dword [rbp - 0x388], eax	      3375	screen.c	FUNCTION_28	IF_12	IF_25	CALL_18
0x68f6	      0xe94b010000	                           jmp 0x4006a86	      3366	screen.c	FUNCTION_28	IF_12	IF_25
0x68fb	    0x8b0500000000	            mov eax, dword [0x04006941] 	      3383	screen.c	FUNCTION_28	ELSE_9	IF_27
0x6901	            0x85c0	                           test eax, eax	      3383	screen.c	FUNCTION_28	ELSE_9	IF_27
0x6903	     0xf843e010000	                            je 0x4006a87	      3383	screen.c	FUNCTION_28	ELSE_9	IF_27
0x6909	    0x488b05000000	            mov rax, qword [0x04006950] 	      3384	screen.c	FUNCTION_28	ELSE_9	IF_27
0x6910	    0x483985e8fbff	           cmp qword [rbp - 0x418], rax 	      3384	screen.c	FUNCTION_28	ELSE_9	IF_27
0x6917	     0xf852a010000	                           jne 0x4006a87	      3384	screen.c	FUNCTION_28	ELSE_9	IF_27
0x691d	    0x488b05000000	            mov rax, qword [0x04006964] 	      3385	screen.c	FUNCTION_28	ELSE_9	IF_27
0x6924	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3385	screen.c	FUNCTION_28	ELSE_9	IF_27
0x6928	    0x483b85e0fbff	            cmp rax, qword [rbp - 0x420]	      3385	screen.c	FUNCTION_28	ELSE_9	IF_27
0x692f	     0xf8f12010000	                            jg 0x4006a87	      3385	screen.c	FUNCTION_28	ELSE_9	IF_27
0x6935	    0x488b05000000	            mov rax, qword [0x0400697c] 	      3386	screen.c	FUNCTION_28	ELSE_9	IF_27
0x693c	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3386	screen.c	FUNCTION_28	ELSE_9	IF_27
0x6940	    0x488b05000000	            mov rax, qword [0x04006987] 	      3386	screen.c	FUNCTION_28	ELSE_9	IF_27
0x6947	          0x4801d0	                            add rax, rdx	      3386	screen.c	FUNCTION_28	ELSE_9	IF_27
0x694a	    0x483b85e0fbff	            cmp rax, qword [rbp - 0x420]	      3386	screen.c	FUNCTION_28	ELSE_9	IF_27
0x6951	     0xf8cf0000000	                            jl 0x4006a87	      3386	screen.c	FUNCTION_28	ELSE_9	IF_27
0x6957	    0x488b05000000	            mov rax, qword [0x0400699e] 	      3388	screen.c	FUNCTION_28	ELSE_9	IF_27	IF_28
0x695e	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3388	screen.c	FUNCTION_28	ELSE_9	IF_27	IF_28
0x6962	    0x483b85e0fbff	            cmp rax, qword [rbp - 0x420]	      3388	screen.c	FUNCTION_28	ELSE_9	IF_27	IF_28
0x6969	            0x752e	                           jne 0x40069d9	      3388	screen.c	FUNCTION_28	ELSE_9	IF_27	IF_28
0x696b	    0x488b05000000	            mov rax, qword [0x040069b2] 	      3389	screen.c	FUNCTION_28	ELSE_9	IF_27	IF_28	CALL_19
0x6972	        0x488d7038	                   lea rsi, [rax + 0x38]	      3389	screen.c	FUNCTION_28	ELSE_9	IF_27	IF_28	CALL_19
0x6976	    0x488b05000000	            mov rax, qword [0x040069bd] 	      3389	screen.c	FUNCTION_28	ELSE_9	IF_27	IF_28	CALL_19
0x697d	    0x488d9500fcff	                  lea rdx, [rbp - 0x400]	      3389	screen.c	FUNCTION_28	ELSE_9	IF_27	IF_28	CALL_19
0x6984	    0x41b800000000	                              mov r8d, 0	      3389	screen.c	FUNCTION_28	ELSE_9	IF_27	IF_28	CALL_19
0x698a	      0xb900000000	                              mov ecx, 0	      3389	screen.c	FUNCTION_28	ELSE_9	IF_27	IF_28	CALL_19
0x698f	          0x4889c7	                            mov rdi, rax	      3389	screen.c	FUNCTION_28	ELSE_9	IF_27	IF_28	CALL_19
0x6992	      0xe800000000	                          call 0x40069d7	      3389	screen.c	FUNCTION_28	ELSE_9	IF_27	IF_28	CALL_19
0x6997	            0xeb0a	                           jmp 0x40069e3	      3389	screen.c	FUNCTION_28	ELSE_9	IF_27	IF_28	CALL_19
0x6999	    0xc78500fcffff	              mov dword [rbp - 0x400], 0	      3392	screen.c	FUNCTION_28	ELSE_9	IF_27	ELSE_10
0x69a3	    0x488b05000000	            mov rax, qword [0x040069ea] 	      3393	screen.c	FUNCTION_28	ELSE_9	IF_27	ELSE_10	IF_29
0x69aa	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3393	screen.c	FUNCTION_28	ELSE_9	IF_27	ELSE_10	IF_29
0x69ae	    0x488b05000000	            mov rax, qword [0x040069f5] 	      3393	screen.c	FUNCTION_28	ELSE_9	IF_27	ELSE_10	IF_29
0x69b5	          0x4801d0	                            add rax, rdx	      3393	screen.c	FUNCTION_28	ELSE_9	IF_27	ELSE_10	IF_29
0x69b8	    0x483b85e0fbff	            cmp rax, qword [rbp - 0x420]	      3393	screen.c	FUNCTION_28	ELSE_9	IF_27	ELSE_10	IF_29
0x69bf	            0x7544	                           jne 0x4006a45	      3393	screen.c	FUNCTION_28	ELSE_9	IF_27	ELSE_10	IF_29
0x69c1	    0x488b85e0fbff	            mov rax, qword [rbp - 0x420]	      3395	screen.c	FUNCTION_28	ELSE_9	IF_27	ELSE_10	IF_29
0x69c8	    0x48898540feff	            mov qword [rbp - 0x1c0], rax	      3395	screen.c	FUNCTION_28	ELSE_9	IF_27	ELSE_10	IF_29
0x69cf	    0x8b0500000000	            mov eax, dword [0x04006a15] 	      3396	screen.c	FUNCTION_28	ELSE_9	IF_27	ELSE_10	IF_29
0x69d5	    0x898548feffff	            mov dword [rbp - 0x1b8], eax	      3396	screen.c	FUNCTION_28	ELSE_9	IF_27	ELSE_10	IF_29
0x69db	    0x488b05000000	            mov rax, qword [0x04006a22] 	      3397	screen.c	FUNCTION_28	ELSE_9	IF_27	ELSE_10	IF_29	CALL_20
0x69e2	    0x488d9504fcff	                  lea rdx, [rbp - 0x3fc]	      3397	screen.c	FUNCTION_28	ELSE_9	IF_27	ELSE_10	IF_29	CALL_20
0x69e9	    0x488db540feff	                  lea rsi, [rbp - 0x1c0]	      3397	screen.c	FUNCTION_28	ELSE_9	IF_27	ELSE_10	IF_29	CALL_20
0x69f0	    0x41b800000000	                              mov r8d, 0	      3397	screen.c	FUNCTION_28	ELSE_9	IF_27	ELSE_10	IF_29	CALL_20
0x69f6	      0xb900000000	                              mov ecx, 0	      3397	screen.c	FUNCTION_28	ELSE_9	IF_27	ELSE_10	IF_29	CALL_20
0x69fb	          0x4889c7	                            mov rdi, rax	      3397	screen.c	FUNCTION_28	ELSE_9	IF_27	ELSE_10	IF_29	CALL_20
0x69fe	      0xe800000000	                          call 0x4006a43	      3397	screen.c	FUNCTION_28	ELSE_9	IF_27	ELSE_10	IF_29	CALL_20
0x6a03	            0xeb0a	                           jmp 0x4006a4f	      3397	screen.c	FUNCTION_28	ELSE_9	IF_27	ELSE_10	IF_29	CALL_20
0x6a05	    0xc78504fcffff	     mov dword [rbp - 0x3fc], 0x7fffffff	      3400	screen.c	FUNCTION_28	ELSE_9	IF_27	ELSE_11
0x6a0f	    0x8b9500fcffff	            mov edx, dword [rbp - 0x400]	      3402	screen.c	FUNCTION_28	ELSE_9	IF_27	IF_30
0x6a15	    0x8b8504fcffff	            mov eax, dword [rbp - 0x3fc]	      3402	screen.c	FUNCTION_28	ELSE_9	IF_27	IF_30
0x6a1b	            0x39c2	                            cmp edx, eax	      3402	screen.c	FUNCTION_28	ELSE_9	IF_27	IF_30
0x6a1d	            0x750f	                           jne 0x4006a6e	      3402	screen.c	FUNCTION_28	ELSE_9	IF_27	IF_30
0x6a1f	    0x8b8500fcffff	            mov eax, dword [rbp - 0x400]	      3403	screen.c	FUNCTION_28	ELSE_9	IF_27	IF_30
0x6a25	          0x83c001	                              add eax, 1	      3403	screen.c	FUNCTION_28	ELSE_9	IF_27	IF_30
0x6a28	    0x898504fcffff	            mov dword [rbp - 0x3fc], eax	      3403	screen.c	FUNCTION_28	ELSE_9	IF_27	IF_30
0x6a2e	    0xc78574fcffff	              mov dword [rbp - 0x38c], 1	      3404	screen.c	FUNCTION_28	ELSE_9	IF_27
0x6a38	    0x8b0500000000	            mov eax, dword [0x04006a7e] 	      3405	screen.c	FUNCTION_28	ELSE_9	IF_27	CALL_21
0x6a3e	    0x898578fcffff	            mov dword [rbp - 0x388], eax	      3405	screen.c	FUNCTION_28	ELSE_9	IF_27	CALL_21
0x6a44	            0xeb01	                           jmp 0x4006a87	      3405	screen.c	FUNCTION_28	ELSE_9	IF_27	CALL_21
0x6a46	              0x90	                                     nop	      3366	screen.c	FUNCTION_28	IF_12	IF_25
0x6a47	    0x488b95e0fbff	            mov rdx, qword [rbp - 0x420]	      3409	screen.c	FUNCTION_28	CALL_22
0x6a4e	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3409	screen.c	FUNCTION_28	CALL_22
0x6a55	          0x4889d6	                            mov rsi, rdx	      3409	screen.c	FUNCTION_28	CALL_22
0x6a58	          0x4889c7	                            mov rdi, rax	      3409	screen.c	FUNCTION_28	CALL_22
0x6a5b	      0xe800000000	                          call 0x4006aa0	      3409	screen.c	FUNCTION_28	CALL_22
0x6a60	    0x8985c4fcffff	            mov dword [rbp - 0x33c], eax	      3409	screen.c	FUNCTION_28	CALL_22
0x6a66	    0x83bdc4fcffff	              cmp dword [rbp - 0x33c], 0	      3410	screen.c	FUNCTION_28	IF_31
0x6a6d	            0x797d	                           jns 0x4006b2c	      3410	screen.c	FUNCTION_28	IF_31
0x6a6f	    0x83bdc4fcffff	cmp dword [rbp - 0x33c], 0xffffffffffffffff	      3412	screen.c	FUNCTION_28	IF_31	IF_32
0x6a76	            0x7556	                           jne 0x4006b0e	      3412	screen.c	FUNCTION_28	IF_31	IF_32
0x6a78	    0x488d8d0cfcff	                  lea rcx, [rbp - 0x3f4]	      3414	screen.c	FUNCTION_28	IF_31	IF_32	IF_33	CALL_23
0x6a7f	    0x488d9508fcff	                  lea rdx, [rbp - 0x3f8]	      3414	screen.c	FUNCTION_28	IF_31	IF_32	IF_33	CALL_23
0x6a86	    0x488bb5e0fbff	            mov rsi, qword [rbp - 0x420]	      3414	screen.c	FUNCTION_28	IF_31	IF_32	IF_33	CALL_23
0x6a8d	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3414	screen.c	FUNCTION_28	IF_31	IF_32	IF_33	CALL_23
0x6a94	          0x4889c7	                            mov rdi, rax	      3414	screen.c	FUNCTION_28	IF_31	IF_32	IF_33	CALL_23
0x6a97	      0xe800000000	                          call 0x4006adc	      3414	screen.c	FUNCTION_28	IF_31	IF_32	IF_33	CALL_23
0x6a9c	            0x85c0	                           test eax, eax	      3414	screen.c	FUNCTION_28	IF_31	IF_32	IF_33	CALL_23
0x6a9e	            0x740c	                            je 0x4006aec	      3414	screen.c	FUNCTION_28	IF_31	IF_32	IF_33	CALL_23
0x6aa0	    0xc785ccfcffff	          mov dword [rbp - 0x334], 0x17 	      3415	screen.c	FUNCTION_28	IF_31	IF_32	IF_33
0x6aaa	            0xeb2c	                           jmp 0x4006b18	      3415	screen.c	FUNCTION_28	IF_31	IF_32	IF_33
0x6aac	    0x8b8508fcffff	            mov eax, dword [rbp - 0x3f8]	      3416	screen.c	FUNCTION_28	IF_31	IF_32	ELSE_12	IF_34
0x6ab2	            0x85c0	                           test eax, eax	      3416	screen.c	FUNCTION_28	IF_31	IF_32	ELSE_12	IF_34
0x6ab4	            0x750c	                           jne 0x4006b02	      3416	screen.c	FUNCTION_28	IF_31	IF_32	ELSE_12	IF_34
0x6ab6	    0xc785ccfcffff	          mov dword [rbp - 0x334], 0x1a 	      3417	screen.c	FUNCTION_28	IF_31	IF_32	ELSE_12	IF_34
0x6ac0	            0xeb16	                           jmp 0x4006b18	      3417	screen.c	FUNCTION_28	IF_31	IF_32	ELSE_12	IF_34
0x6ac2	    0xc785ccfcffff	          mov dword [rbp - 0x334], 0x18 	      3419	screen.c	FUNCTION_28	IF_31	IF_32	ELSE_13
0x6acc	            0xeb0a	                           jmp 0x4006b18	      3419	screen.c	FUNCTION_28	IF_31	IF_32	ELSE_13
0x6ace	    0xc785ccfcffff	          mov dword [rbp - 0x334], 0x17 	      3422	screen.c	FUNCTION_28	IF_31	ELSE_14
0x6ad8	    0xc785c4fcffff	              mov dword [rbp - 0x33c], 0	      3423	screen.c	FUNCTION_28	IF_31
0x6ae2	    0xc78574fcffff	              mov dword [rbp - 0x38c], 1	      3424	screen.c	FUNCTION_28	IF_31
0x6aec	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3426	screen.c	FUNCTION_28	IF_35
0x6af3	        0x488b4078	            mov rax, qword [rax + 0x78] 	      3426	screen.c	FUNCTION_28	IF_35
0x6af7	    0x483b85e0fbff	            cmp rax, qword [rbp - 0x420]	      3426	screen.c	FUNCTION_28	IF_35
0x6afe	            0x7513	                           jne 0x4006b53	      3426	screen.c	FUNCTION_28	IF_35
0x6b00	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3427	screen.c	FUNCTION_28	IF_35
0x6b07	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      3427	screen.c	FUNCTION_28	IF_35
0x6b0d	    0x8985c4fcffff	            mov dword [rbp - 0x33c], eax	      3427	screen.c	FUNCTION_28	IF_35
0x6b13	    0x8b85c4fcffff	            mov eax, dword [rbp - 0x33c]	      3428	screen.c	FUNCTION_28
0x6b19	    0x8985c8fcffff	            mov dword [rbp - 0x338], eax	      3428	screen.c	FUNCTION_28
0x6b1f	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3434	screen.c	FUNCTION_28	CALL_24
0x6b26	        0x488b4008	                mov rax, qword [rax + 8]	      3434	screen.c	FUNCTION_28	CALL_24
0x6b2a	    0x488b8de0fbff	            mov rcx, qword [rbp - 0x420]	      3434	screen.c	FUNCTION_28	CALL_24
0x6b31	      0xba01000000	                              mov edx, 1	      3434	screen.c	FUNCTION_28	CALL_24
0x6b36	          0x4889ce	                            mov rsi, rcx	      3434	screen.c	FUNCTION_28	CALL_24
0x6b39	          0x4889c7	                            mov rdi, rax	      3434	screen.c	FUNCTION_28	CALL_24
0x6b3c	      0xe800000000	                          call 0x4006b81	      3434	screen.c	FUNCTION_28	CALL_24
0x6b41	            0x4898	                                    cdqe	      3434	screen.c	FUNCTION_28	CALL_24
0x6b43	    0x488985d8fdff	            mov qword [rbp - 0x228], rax	      3434	screen.c	FUNCTION_28	CALL_24
0x6b4a	    0x4883bdd8fdff	              cmp qword [rbp - 0x228], 0	      3435	screen.c	FUNCTION_28	IF_36
0x6b52	            0x7419	                            je 0x4006bad	      3435	screen.c	FUNCTION_28	IF_36
0x6b54	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      3436	screen.c	FUNCTION_28	CALL_25
0x6b5b	      0xbe01000000	                              mov esi, 1	      3436	screen.c	FUNCTION_28	CALL_25
0x6b60	            0x89c7	                            mov edi, eax	      3436	screen.c	FUNCTION_28	CALL_25
0x6b62	      0xe800000000	                          call 0x4006ba7	      3436	screen.c	FUNCTION_28	CALL_25
0x6b67	    0x8985d8fcffff	            mov dword [rbp - 0x328], eax	      3436	screen.c	FUNCTION_28	CALL_25
0x6b6d	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3440	screen.c	FUNCTION_28	IF_37	CALL_27
0x6b74	        0x488b4008	                mov rax, qword [rax + 8]	      3440	screen.c	FUNCTION_28	IF_37	CALL_27
0x6b78	          0x4889c7	                            mov rdi, rax	      3440	screen.c	FUNCTION_28	IF_37	CALL_27
0x6b7b	      0xe800000000	                          call 0x4006bc0	      3440	screen.c	FUNCTION_28	IF_37	CALL_27
0x6b80	            0x85c0	                           test eax, eax	      3440	screen.c	FUNCTION_28	IF_37	CALL_27
0x6b82	            0x7424	                            je 0x4006be8	      3440	screen.c	FUNCTION_28	IF_37	CALL_27
0x6b84	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3440	screen.c	FUNCTION_28	IF_37	CALL_27
0x6b8b	          0x4889c7	                            mov rdi, rax	      3440	screen.c	FUNCTION_28	IF_37	CALL_27
0x6b8e	      0xe800000000	                          call 0x4006bd3	      3440	screen.c	FUNCTION_28	IF_37	CALL_27
0x6b93	    0x483b85e0fbff	            cmp rax, qword [rbp - 0x420]	      3440	screen.c	FUNCTION_28	IF_37	CALL_27
0x6b9a	            0x750c	                           jne 0x4006be8	      3440	screen.c	FUNCTION_28	IF_37	CALL_27
0x6b9c	    0x8b0500000000	            mov eax, dword [0x04006be2] 	      3441	screen.c	FUNCTION_28	CALL_28
0x6ba2	    0x8985d8fcffff	            mov dword [rbp - 0x328], eax	      3441	screen.c	FUNCTION_28	CALL_28
0x6ba8	    0x83bdd8fcffff	              cmp dword [rbp - 0x328], 0	      3443	screen.c	FUNCTION_28	IF_38
0x6baf	            0x740a	                            je 0x4006bfb	      3443	screen.c	FUNCTION_28	IF_38
0x6bb1	    0xc78574fcffff	              mov dword [rbp - 0x38c], 1	      3444	screen.c	FUNCTION_28	IF_38
0x6bbb	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3447	screen.c	FUNCTION_28	CALL_29
0x6bc2	        0x488b4008	                mov rax, qword [rax + 8]	      3447	screen.c	FUNCTION_28	CALL_29
0x6bc6	    0x488b8de0fbff	            mov rcx, qword [rbp - 0x420]	      3447	screen.c	FUNCTION_28	CALL_29
0x6bcd	      0xba00000000	                              mov edx, 0	      3447	screen.c	FUNCTION_28	CALL_29
0x6bd2	          0x4889ce	                            mov rsi, rcx	      3447	screen.c	FUNCTION_28	CALL_29
0x6bd5	          0x4889c7	                            mov rdi, rax	      3447	screen.c	FUNCTION_28	CALL_29
0x6bd8	      0xe800000000	                          call 0x4006c1d	      3447	screen.c	FUNCTION_28	CALL_29
0x6bdd	    0x488985a8fdff	            mov qword [rbp - 0x258], rax	      3447	screen.c	FUNCTION_28	CALL_29
0x6be4	    0x488b85a8fdff	            mov rax, qword [rbp - 0x258]	      3448	screen.c	FUNCTION_28
0x6beb	    0x488985b0fdff	            mov qword [rbp - 0x250], rax	      3448	screen.c	FUNCTION_28
0x6bf2	    0x83bd98fcffff	              cmp dword [rbp - 0x368], 0	      3451	screen.c	FUNCTION_28	IF_39
0x6bf9	     0xf842b010000	                            je 0x4006d6a	      3451	screen.c	FUNCTION_28	IF_39
0x6bff	    0x8b0500000000	            mov eax, dword [0x04006c45] 	      3454	screen.c	FUNCTION_28	IF_39	IF_40
0x6c05	            0x85c0	                           test eax, eax	      3454	screen.c	FUNCTION_28	IF_39	IF_40
0x6c07	            0x7515	                           jne 0x4006c5e	      3454	screen.c	FUNCTION_28	IF_39	IF_40
0x6c09	    0x488b85a8fdff	            mov rax, qword [rbp - 0x258]	      3455	screen.c	FUNCTION_28	IF_39	CALL_30
0x6c10	          0x4889c7	                            mov rdi, rax	      3455	screen.c	FUNCTION_28	IF_39	CALL_30
0x6c13	      0xe800000000	                          call 0x4006c58	      3455	screen.c	FUNCTION_28	IF_39	CALL_30
0x6c18	    0x890500000000	            mov dword [0x04006c5e], eax 	      3455	screen.c	FUNCTION_28	IF_39	CALL_30
0x6c1e	     0xfb68546ffff	            movzx eax, byte [rbp - 0xba]	      3460	screen.c	FUNCTION_28	IF_39	IF_41
0x6c25	            0x84c0	                             test al, al	      3460	screen.c	FUNCTION_28	IF_39	IF_41
0x6c27	            0x7519	                           jne 0x4006c82	      3460	screen.c	FUNCTION_28	IF_39	IF_41
0x6c29	    0xc7859cfcffff	     mov dword [rbp - 0x364], 0x7fffffff	      3463	screen.c	FUNCTION_28	IF_39	IF_41
0x6c33	    0xc785a0fcffff	              mov dword [rbp - 0x360], 0	      3464	screen.c	FUNCTION_28	IF_39	IF_41
0x6c3d	      0xe9e8000000	                           jmp 0x4006d6a	      3464	screen.c	FUNCTION_28	IF_39	IF_41
0x6c42	    0x488b85a8fdff	            mov rax, qword [rbp - 0x258]	      3468	screen.c	FUNCTION_28	IF_39	ELSE_15	CALL_31
0x6c49	          0x4889c7	                            mov rdi, rax	      3468	screen.c	FUNCTION_28	IF_39	ELSE_15	CALL_31
0x6c4c	      0xe800000000	                          call 0x4006c91	      3468	screen.c	FUNCTION_28	IF_39	ELSE_15	CALL_31
0x6c51	    0x488985d8fdff	            mov qword [rbp - 0x228], rax	      3468	screen.c	FUNCTION_28	IF_39	ELSE_15	CALL_31
0x6c58	    0x4881bdd8fdff	          cmp qword [rbp - 0x228], 0x95 	      3469	screen.c	FUNCTION_28	IF_39	ELSE_15	IF_42
0x6c63	            0x7f7e	                            jg 0x4006d23	      3469	screen.c	FUNCTION_28	IF_39	ELSE_15	IF_42
0x6c65	    0xc7859cfcffff	              mov dword [rbp - 0x364], 0	      3473	screen.c	FUNCTION_28	IF_39	ELSE_15	IF_42
0x6c6f	    0x488b95d8fdff	            mov rdx, qword [rbp - 0x228]	      3474	screen.c	FUNCTION_28	IF_39	ELSE_15	IF_42	CALL_32
0x6c76	    0x488b8da8fdff	            mov rcx, qword [rbp - 0x258]	      3474	screen.c	FUNCTION_28	IF_39	ELSE_15	IF_42	CALL_32
0x6c7d	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	      3474	screen.c	FUNCTION_28	IF_39	ELSE_15	IF_42	CALL_32
0x6c84	          0x4889ce	                            mov rsi, rcx	      3474	screen.c	FUNCTION_28	IF_39	ELSE_15	IF_42	CALL_32
0x6c87	          0x4889c7	                            mov rdi, rax	      3474	screen.c	FUNCTION_28	IF_39	ELSE_15	IF_42	CALL_32
0x6c8a	      0xe800000000	                          call 0x4006ccf	      3474	screen.c	FUNCTION_28	IF_39	ELSE_15	IF_42	CALL_32
0x6c8f	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	      3475	screen.c	FUNCTION_28	IF_39	ELSE_15	IF_42	CALL_33
0x6c96	    0x480596000000	                           add rax, 0x96	      3475	screen.c	FUNCTION_28	IF_39	ELSE_15	IF_42	CALL_33
0x6c9c	          0x4889c7	                            mov rdi, rax	      3475	screen.c	FUNCTION_28	IF_39	ELSE_15	IF_42	CALL_33
0x6c9f	      0xe800000000	                          call 0x4006ce4	      3475	screen.c	FUNCTION_28	IF_39	ELSE_15	IF_42	CALL_33
0x6ca4	        0x488d5001	                      lea rdx, [rax + 1]	      3475	screen.c	FUNCTION_28	IF_39	ELSE_15	IF_42	CALL_33
0x6ca8	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	      3475	screen.c	FUNCTION_28	IF_39	ELSE_15	IF_42	CALL_33
0x6caf	    0x480596000000	                           add rax, 0x96	      3475	screen.c	FUNCTION_28	IF_39	ELSE_15	IF_42	CALL_33
0x6cb5	    0x488b8dd8fdff	            mov rcx, qword [rbp - 0x228]	      3475	screen.c	FUNCTION_28	IF_39	ELSE_15	IF_42	CALL_33
0x6cbc	    0x488db5b0feff	                  lea rsi, [rbp - 0x150]	      3475	screen.c	FUNCTION_28	IF_39	ELSE_15	IF_42	CALL_33
0x6cc3	          0x4801f1	                            add rcx, rsi	      3475	screen.c	FUNCTION_28	IF_39	ELSE_15	IF_42	CALL_33
0x6cc6	          0x4889c6	                            mov rsi, rax	      3475	screen.c	FUNCTION_28	IF_39	ELSE_15	IF_42	CALL_33
0x6cc9	          0x4889cf	                            mov rdi, rcx	      3475	screen.c	FUNCTION_28	IF_39	ELSE_15	IF_42	CALL_33
0x6ccc	      0xe800000000	                          call 0x4006d11	      3475	screen.c	FUNCTION_28	IF_39	ELSE_15	IF_42	CALL_33
0x6cd1	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      3476	screen.c	FUNCTION_28	IF_39	ELSE_15	IF_42
0x6cd8	          0x83c001	                              add eax, 1	      3476	screen.c	FUNCTION_28	IF_39	ELSE_15	IF_42
0x6cdb	    0x8985a0fcffff	            mov dword [rbp - 0x360], eax	      3476	screen.c	FUNCTION_28	IF_39	ELSE_15	IF_42
0x6ce1	            0xeb47	                           jmp 0x4006d6a	      3476	screen.c	FUNCTION_28	IF_39	ELSE_15	IF_42
0x6ce3	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      3481	screen.c	FUNCTION_28	IF_39	ELSE_15	ELSE_16
0x6cea	      0x2d96000000	                           sub eax, 0x96	      3481	screen.c	FUNCTION_28	IF_39	ELSE_15	ELSE_16
0x6cef	    0x89859cfcffff	            mov dword [rbp - 0x364], eax	      3481	screen.c	FUNCTION_28	IF_39	ELSE_15	ELSE_16
0x6cf5	    0x8b859cfcffff	            mov eax, dword [rbp - 0x364]	      3482	screen.c	FUNCTION_28	IF_39	ELSE_15	ELSE_16	CALL_34
0x6cfb	          0x4863d0	                         movsxd rdx, eax	      3482	screen.c	FUNCTION_28	IF_39	ELSE_15	ELSE_16	CALL_34
0x6cfe	    0x488b85a8fdff	            mov rax, qword [rbp - 0x258]	      3482	screen.c	FUNCTION_28	IF_39	ELSE_15	ELSE_16	CALL_34
0x6d05	        0x488d0c02	                    lea rcx, [rdx + rax]	      3482	screen.c	FUNCTION_28	IF_39	ELSE_15	ELSE_16	CALL_34
0x6d09	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	      3482	screen.c	FUNCTION_28	IF_39	ELSE_15	ELSE_16	CALL_34
0x6d10	      0xba96000000	                           mov edx, 0x96	      3482	screen.c	FUNCTION_28	IF_39	ELSE_15	ELSE_16	CALL_34
0x6d15	          0x4889ce	                            mov rsi, rcx	      3482	screen.c	FUNCTION_28	IF_39	ELSE_15	ELSE_16	CALL_34
0x6d18	          0x4889c7	                            mov rdi, rax	      3482	screen.c	FUNCTION_28	IF_39	ELSE_15	ELSE_16	CALL_34
0x6d1b	      0xe800000000	                          call 0x4006d60	      3482	screen.c	FUNCTION_28	IF_39	ELSE_15	ELSE_16	CALL_34
0x6d20	    0xc785a0fcffff	          mov dword [rbp - 0x360], 0x97 	      3483	screen.c	FUNCTION_28	IF_39	ELSE_15	ELSE_16
0x6d2a	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3489	screen.c	FUNCTION_28	IF_43
0x6d31	    0x8b8034020000	           mov eax, dword [rax + 0x234] 	      3489	screen.c	FUNCTION_28	IF_43
0x6d37	            0x85c0	                           test eax, eax	      3489	screen.c	FUNCTION_28	IF_43
0x6d39	     0xf84a3000000	                            je 0x4006e22	      3489	screen.c	FUNCTION_28	IF_43
0x6d3f	    0x8b0500000000	            mov eax, dword [0x04006d85] 	      3491	screen.c	FUNCTION_28	IF_43	IF_44
0x6d45	            0x85c0	                           test eax, eax	      3491	screen.c	FUNCTION_28	IF_43	IF_44
0x6d47	            0x750a	                           jne 0x4006d93	      3491	screen.c	FUNCTION_28	IF_43	IF_44
0x6d49	    0x8b0500000000	            mov eax, dword [0x04006d8f] 	      3491	screen.c	FUNCTION_28	IF_43	IF_44
0x6d4f	            0x85c0	                           test eax, eax	      3491	screen.c	FUNCTION_28	IF_43	IF_44
0x6d51	            0x740a	                            je 0x4006d9d	      3491	screen.c	FUNCTION_28	IF_43	IF_44
0x6d53	    0xc785b0fcffff	              mov dword [rbp - 0x350], 1	      3492	screen.c	FUNCTION_28	IF_43	IF_44
0x6d5d	    0x8b0500000000	            mov eax, dword [0x04006da3] 	      3494	screen.c	FUNCTION_28	IF_43	IF_45
0x6d63	            0x85c0	                           test eax, eax	      3494	screen.c	FUNCTION_28	IF_43	IF_45
0x6d65	            0x747b	                            je 0x4006e22	      3494	screen.c	FUNCTION_28	IF_43	IF_45
0x6d67	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      3496	screen.c	FUNCTION_28	IF_43	IF_45	CALL_35
0x6d6e	          0x4889c7	                            mov rdi, rax	      3496	screen.c	FUNCTION_28	IF_43	IF_45	CALL_35
0x6d71	      0xe800000000	                          call 0x4006db6	      3496	screen.c	FUNCTION_28	IF_43	IF_45	CALL_35
0x6d76	    0x8985d0fcffff	            mov dword [rbp - 0x330], eax	      3496	screen.c	FUNCTION_28	IF_43	IF_45	CALL_35
0x6d7c	            0xeb07	                           jmp 0x4006dc5	      3497	screen.c	FUNCTION_28	IF_43	IF_45	WHILE_1	CALL_36
0x6d7e	    0x83add0fcffff	              sub dword [rbp - 0x330], 1	      3498	screen.c	FUNCTION_28	IF_43	IF_45	WHILE_1
0x6d85	    0x83bdd0fcffff	              cmp dword [rbp - 0x330], 0	      3497	screen.c	FUNCTION_28	IF_43	IF_45	WHILE_1	CALL_36
0x6d8c	            0x7e3a	                           jle 0x4006e08	      3497	screen.c	FUNCTION_28	IF_43	IF_45	WHILE_1	CALL_36
0x6d8e	    0x8b85d0fcffff	            mov eax, dword [rbp - 0x330]	      3497	screen.c	FUNCTION_28	IF_43	IF_45	WHILE_1	CALL_36
0x6d94	            0x4898	                                    cdqe	      3497	screen.c	FUNCTION_28	IF_43	IF_45	WHILE_1	CALL_36
0x6d96	        0x488d50ff	                      lea rdx, [rax - 1]	      3497	screen.c	FUNCTION_28	IF_43	IF_45	WHILE_1	CALL_36
0x6d9a	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      3497	screen.c	FUNCTION_28	IF_43	IF_45	WHILE_1	CALL_36
0x6da1	          0x4801d0	                            add rax, rdx	      3497	screen.c	FUNCTION_28	IF_43	IF_45	WHILE_1	CALL_36
0x6da4	           0xfb600	                   movzx eax, byte [rax]	      3497	screen.c	FUNCTION_28	IF_43	IF_45	WHILE_1	CALL_36
0x6da7	            0x3c20	                            cmp al, 0x20	      3497	screen.c	FUNCTION_28	IF_43	IF_45	WHILE_1	CALL_36
0x6da9	            0x74d3	                            je 0x4006dbe	      3497	screen.c	FUNCTION_28	IF_43	IF_45	WHILE_1	CALL_36
0x6dab	    0x8b85d0fcffff	            mov eax, dword [rbp - 0x330]	      3497	screen.c	FUNCTION_28	IF_43	IF_45	WHILE_1	CALL_36
0x6db1	            0x4898	                                    cdqe	      3497	screen.c	FUNCTION_28	IF_43	IF_45	WHILE_1	CALL_36
0x6db3	        0x488d50ff	                      lea rdx, [rax - 1]	      3497	screen.c	FUNCTION_28	IF_43	IF_45	WHILE_1	CALL_36
0x6db7	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      3497	screen.c	FUNCTION_28	IF_43	IF_45	WHILE_1	CALL_36
0x6dbe	          0x4801d0	                            add rax, rdx	      3497	screen.c	FUNCTION_28	IF_43	IF_45	WHILE_1	CALL_36
0x6dc1	           0xfb600	                   movzx eax, byte [rax]	      3497	screen.c	FUNCTION_28	IF_43	IF_45	WHILE_1	CALL_36
0x6dc4	            0x3c09	                               cmp al, 9	      3497	screen.c	FUNCTION_28	IF_43	IF_45	WHILE_1	CALL_36
0x6dc6	            0x74b6	                            je 0x4006dbe	      3497	screen.c	FUNCTION_28	IF_43	IF_45	WHILE_1	CALL_36
0x6dc8	    0x488b95b0fdff	            mov rdx, qword [rbp - 0x250]	      3499	screen.c	FUNCTION_28	IF_43	IF_45
0x6dcf	    0x488b85a8fdff	            mov rax, qword [rbp - 0x258]	      3499	screen.c	FUNCTION_28	IF_43	IF_45
0x6dd6	          0x4829c2	                            sub rdx, rax	      3499	screen.c	FUNCTION_28	IF_43	IF_45
0x6dd9	          0x4889d0	                            mov rax, rdx	      3499	screen.c	FUNCTION_28	IF_43	IF_45
0x6ddc	     0x185d0fcffff	            add dword [rbp - 0x330], eax	      3499	screen.c	FUNCTION_28	IF_43	IF_45
0x6de2	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3507	screen.c	FUNCTION_28	IF_46
0x6de9	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      3507	screen.c	FUNCTION_28	IF_46
0x6def	            0x85c0	                           test eax, eax	      3507	screen.c	FUNCTION_28	IF_46
0x6df1	            0x7418	                            je 0x4006e4b	      3507	screen.c	FUNCTION_28	IF_46
0x6df3	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3508	screen.c	FUNCTION_28	IF_46
0x6dfa	    0x8b8098000000	            mov eax, dword [rax + 0x98] 	      3508	screen.c	FUNCTION_28	IF_46
0x6e00	            0x4898	                                    cdqe	      3508	screen.c	FUNCTION_28	IF_46
0x6e02	    0x488985d8fdff	            mov qword [rbp - 0x228], rax	      3508	screen.c	FUNCTION_28	IF_46
0x6e09	            0xeb16	                           jmp 0x4006e61	      3508	screen.c	FUNCTION_28	IF_46
0x6e0b	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3510	screen.c	FUNCTION_28	ELSE_17
0x6e12	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	      3510	screen.c	FUNCTION_28	ELSE_17
0x6e18	            0x4898	                                    cdqe	      3510	screen.c	FUNCTION_28	ELSE_17
0x6e1a	    0x488985d8fdff	            mov qword [rbp - 0x228], rax	      3510	screen.c	FUNCTION_28	ELSE_17
0x6e21	    0x4883bdd8fdff	              cmp qword [rbp - 0x228], 0	      3511	screen.c	FUNCTION_28	ELSE_17	IF_47
0x6e29	     0xf8eb8030000	                           jle 0x4007227	      3511	screen.c	FUNCTION_28	ELSE_17	IF_47
0x6e2f	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      3514	screen.c	FUNCTION_28	ELSE_17	IF_47
0x6e36	    0x488985f0fdff	            mov qword [rbp - 0x210], rax	      3514	screen.c	FUNCTION_28	ELSE_17	IF_47
0x6e3d	            0xeb7c	                           jmp 0x4006efb	      3516	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2
0x6e3f	    0x488b8590fdff	            mov rax, qword [rbp - 0x270]	      3518	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2	CALL_37
0x6e46	            0x89c1	                            mov ecx, eax	      3518	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2	CALL_37
0x6e48	    0x488b95b0fdff	            mov rdx, qword [rbp - 0x250]	      3518	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2	CALL_37
0x6e4f	    0x488bb5a8fdff	            mov rsi, qword [rbp - 0x258]	      3518	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2	CALL_37
0x6e56	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3518	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2	CALL_37
0x6e5d	    0x41b800000000	                              mov r8d, 0	      3518	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2	CALL_37
0x6e63	          0x4889c7	                            mov rdi, rax	      3518	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2	CALL_37
0x6e66	      0xe800000000	                          call 0x4006eab	      3518	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2	CALL_37
0x6e6b	    0x8985fcfbffff	            mov dword [rbp - 0x404], eax	      3518	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2	CALL_37
0x6e71	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      3519	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2
0x6e77	            0x4898	                                    cdqe	      3519	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2
0x6e79	    0x48018590fdff	           add qword [rbp - 0x270], rax 	      3519	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2
0x6e80	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      3521	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2
0x6e87	    0x488985f0fdff	            mov qword [rbp - 0x210], rax	      3521	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2
0x6e8e	    0x8b0500000000	            mov eax, dword [0x04006ed4] 	      3523	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2	CALL_38
0x6e94	            0x85c0	                           test eax, eax	      3523	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2	CALL_38
0x6e96	            0x7415	                            je 0x4006eed	      3523	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2	CALL_38
0x6e98	    0x488b05000000	            mov rax, qword [0x04006edf] 	      3523	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2	CALL_38
0x6e9f	    0x488b95b0fdff	            mov rdx, qword [rbp - 0x250]	      3523	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2	CALL_38
0x6ea6	          0x4889d7	                            mov rdi, rdx	      3523	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2	CALL_38
0x6ea9	            0xffd0	                                call rax	      3523	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2	CALL_38
0x6eab	            0xeb05	                           jmp 0x4006ef2	      3523	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2	CALL_38
0x6ead	      0xb801000000	                              mov eax, 1	      3523	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2	CALL_38
0x6eb2	            0x4898	                                    cdqe	      3523	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2	CALL_38
0x6eb4	    0x480185b0fdff	           add qword [rbp - 0x250], rax 	      3523	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2	CALL_38
0x6ebb	    0x488b8590fdff	            mov rax, qword [rbp - 0x270]	      3516	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2
0x6ec2	    0x483b85d8fdff	            cmp rax, qword [rbp - 0x228]	      3516	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2
0x6ec9	            0x7d12	                           jge 0x4006f1d	      3516	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2
0x6ecb	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      3516	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2
0x6ed2	           0xfb600	                   movzx eax, byte [rax]	      3516	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2
0x6ed5	            0x84c0	                             test al, al	      3516	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2
0x6ed7	     0xf8562ffffff	                           jne 0x4006e7f	      3516	screen.c	FUNCTION_28	ELSE_17	IF_47	WHILE_2
0x6edd	    0x488b8590fdff	            mov rax, qword [rbp - 0x270]	      3533	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_48
0x6ee4	    0x483b85d8fdff	            cmp rax, qword [rbp - 0x228]	      3533	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_48
0x6eeb	            0x7d56	                           jge 0x4006f83	      3533	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_48
0x6eed	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3535	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_48
0x6ef4	    0x8b806c020000	           mov eax, dword [rax + 0x26c] 	      3535	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_48
0x6efa	            0x85c0	                           test eax, eax	      3533	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_48
0x6efc	            0x7537	                           jne 0x4006f75	      3533	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_48
0x6efe	    0x83bd94fcffff	              cmp dword [rbp - 0x36c], 0	      3535	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_48
0x6f05	            0x752e	                           jne 0x4006f75	      3535	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_48
0x6f07	      0xe800000000	                          call 0x4006f4c	      3538	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_48	CALL_39
0x6f0c	            0x85c0	                           test eax, eax	      3535	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_48
0x6f0e	            0x7525	                           jne 0x4006f75	      3535	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_48
0x6f10	    0x8b0500000000	            mov eax, dword [0x04006f56] 	      3540	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_48
0x6f16	            0x85c0	                           test eax, eax	      3538	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_48	CALL_39
0x6f18	            0x7429	                            je 0x4006f83	      3538	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_48	CALL_39
0x6f1a	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3540	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_48
0x6f21	        0x488b5008	                mov rdx, qword [rax + 8]	      3540	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_48
0x6f25	    0x488b05000000	            mov rax, qword [0x04006f6c] 	      3540	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_48
0x6f2c	        0x488b4008	                mov rax, qword [rax + 8]	      3540	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_48
0x6f30	          0x4839c2	                            cmp rdx, rax	      3540	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_48
0x6f33	            0x750e	                           jne 0x4006f83	      3540	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_48
0x6f35	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      3542	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_48
0x6f3c	    0x48898590fdff	            mov qword [rbp - 0x270], rax	      3542	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_48
0x6f43	    0x488b8590fdff	            mov rax, qword [rbp - 0x270]	      3547	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_49
0x6f4a	    0x483b85d8fdff	            cmp rax, qword [rbp - 0x228]	      3547	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_49
0x6f51	            0x7e6d	                           jle 0x4007000	      3547	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_49
0x6f53	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      3549	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_49
0x6f59	            0x4898	                                    cdqe	      3549	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_49
0x6f5b	    0x48298590fdff	            sub qword [rbp - 0x270], rax	      3549	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_49
0x6f62	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      3551	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_49
0x6f69	    0x488985b0fdff	            mov qword [rbp - 0x250], rax	      3551	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_49
0x6f70	    0x488b05000000	            mov rax, qword [0x04006fb7] 	      3559	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_49	IF_50
0x6f77	    0x488b95b0fdff	            mov rdx, qword [rbp - 0x250]	      3559	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_49	IF_50
0x6f7e	          0x4889d7	                            mov rdi, rdx	      3559	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_49	IF_50
0x6f81	            0xffd0	                                call rax	      3559	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_49	IF_50
0x6f83	            0x89c2	                            mov edx, eax	      3559	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_49	IF_50
0x6f85	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      3559	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_49	IF_50
0x6f8b	            0x39c2	                            cmp edx, eax	      3557	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_49	IF_50
0x6f8d	            0x7d0e	                           jge 0x4006fdd	      3557	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_49	IF_50
0x6f8f	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      3561	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_49	IF_50
0x6f96	           0xfb600	                   movzx eax, byte [rax]	      3561	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_49	IF_50
0x6f99	            0x3c09	                               cmp al, 9	      3559	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_49	IF_50
0x6f9b	            0x7523	                           jne 0x4007000	      3559	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_49	IF_50
0x6f9d	    0x83bd1cfcffff	              cmp dword [rbp - 0x3e4], 0	      3561	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_49	IF_50
0x6fa4	            0x751a	                           jne 0x4007000	      3561	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_49	IF_50
0x6fa6	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      3562	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_49	IF_50
0x6fad	            0x89c2	                            mov edx, eax	      3562	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_49	IF_50
0x6faf	    0x488b8590fdff	            mov rax, qword [rbp - 0x270]	      3562	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_49	IF_50
0x6fb6	            0x29c2	                            sub edx, eax	      3562	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_49	IF_50
0x6fb8	            0x89d0	                            mov eax, edx	      3562	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_49	IF_50
0x6fba	    0x89855cfcffff	            mov dword [rbp - 0x3a4], eax	      3562	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_49	IF_50
0x6fc0	    0x8b8504fcffff	            mov eax, dword [rbp - 0x3fc]	      3569	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_51
0x6fc6	            0x4898	                                    cdqe	      3569	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_51
0x6fc8	    0x483b8590fdff	            cmp rax, qword [rbp - 0x270]	      3569	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_51
0x6fcf	            0x7f0c	                            jg 0x400701d	      3569	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_51
0x6fd1	    0xc78500fcffff	              mov dword [rbp - 0x400], 0	      3570	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_51
0x6fdb	            0xeb28	                           jmp 0x4007045	      3570	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_51
0x6fdd	    0x8b8500fcffff	            mov eax, dword [rbp - 0x400]	      3571	screen.c	FUNCTION_28	ELSE_17	IF_47	ELSE_18	IF_52
0x6fe3	            0x85c0	                           test eax, eax	      3571	screen.c	FUNCTION_28	ELSE_17	IF_47	ELSE_18	IF_52
0x6fe5	            0x781e	                            js 0x4007045	      3571	screen.c	FUNCTION_28	ELSE_17	IF_47	ELSE_18	IF_52
0x6fe7	    0x8b8500fcffff	            mov eax, dword [rbp - 0x400]	      3571	screen.c	FUNCTION_28	ELSE_17	IF_47	ELSE_18	IF_52
0x6fed	            0x4898	                                    cdqe	      3571	screen.c	FUNCTION_28	ELSE_17	IF_47	ELSE_18	IF_52
0x6fef	    0x483b8590fdff	            cmp rax, qword [rbp - 0x270]	      3571	screen.c	FUNCTION_28	ELSE_17	IF_47	ELSE_18	IF_52
0x6ff6	            0x7d0d	                           jge 0x4007045	      3571	screen.c	FUNCTION_28	ELSE_17	IF_47	ELSE_18	IF_52
0x6ff8	    0x488b8590fdff	            mov rax, qword [rbp - 0x270]	      3572	screen.c	FUNCTION_28	ELSE_17	IF_47	ELSE_18	IF_52
0x6fff	    0x898500fcffff	            mov dword [rbp - 0x400], eax	      3572	screen.c	FUNCTION_28	ELSE_17	IF_47	ELSE_18	IF_52
0x7005	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3576	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_53
0x700c	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      3576	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_53
0x7012	            0x85c0	                           test eax, eax	      3576	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_53
0x7014	            0x740a	                            je 0x4007060	      3576	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_53
0x7016	    0xc785d4fcffff	              mov dword [rbp - 0x32c], 1	      3577	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_53
0x7020	    0x83bd98fcffff	              cmp dword [rbp - 0x368], 0	      3582	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x7027	     0xf84ba010000	                            je 0x4007227	      3582	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x702d	    0x488b95b0fdff	            mov rdx, qword [rbp - 0x250]	      3585	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x7034	    0x488b85a8fdff	            mov rax, qword [rbp - 0x258]	      3585	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x703b	          0x4829c2	                            sub rdx, rax	      3585	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x703e	          0x4889d0	                            mov rax, rdx	      3585	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x7041	    0x89855cfdffff	            mov dword [rbp - 0x2a4], eax	      3585	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x7047	    0xc78518fcffff	          mov dword [rbp - 0x3e8], 0x2e 	      3586	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x7051	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3588	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x7058	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      3588	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x705c	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3588	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x7060	    0x48898540feff	            mov qword [rbp - 0x1c0], rax	      3588	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x7067	    0x48899548feff	            mov qword [rbp - 0x1b8], rdx	      3588	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x706e	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3589	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x7075	    0x488b95e0fbff	            mov rdx, qword [rbp - 0x420]	      3589	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x707c	        0x48895038	             mov qword [rax + 0x38], rdx	      3589	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x7080	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3590	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x7087	    0x8b955cfdffff	            mov edx, dword [rbp - 0x2a4]	      3590	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x708d	          0x895040	             mov dword [rax + 0x40], edx	      3590	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x7090	    0x488d9518fcff	                  lea rdx, [rbp - 0x3e8]	      3591	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	CALL_40
0x7097	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3591	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	CALL_40
0x709e	          0x4989d0	                             mov r8, rdx	      3591	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	CALL_40
0x70a1	      0xb901000000	                              mov ecx, 1	      3591	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	CALL_40
0x70a6	      0xba01000000	                              mov edx, 1	      3591	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	CALL_40
0x70ab	      0xbe01000000	                              mov esi, 1	      3591	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	CALL_40
0x70b0	          0x4889c7	                            mov rdi, rax	      3591	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	CALL_40
0x70b3	      0xe800000000	                          call 0x40070f8	      3591	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	CALL_40
0x70b8	    0x898560fdffff	            mov dword [rbp - 0x2a0], eax	      3591	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	CALL_40
0x70be	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3594	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	CALL_41
0x70c5	        0x488b4008	                mov rax, qword [rax + 8]	      3594	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	CALL_41
0x70c9	    0x488b8de0fbff	            mov rcx, qword [rbp - 0x420]	      3594	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	CALL_41
0x70d0	      0xba00000000	                              mov edx, 0	      3594	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	CALL_41
0x70d5	          0x4889ce	                            mov rsi, rcx	      3594	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	CALL_41
0x70d8	          0x4889c7	                            mov rdi, rax	      3594	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	CALL_41
0x70db	      0xe800000000	                          call 0x4007120	      3594	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	CALL_41
0x70e0	    0x488985a8fdff	            mov qword [rbp - 0x258], rax	      3594	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	CALL_41
0x70e7	    0x8b855cfdffff	            mov eax, dword [rbp - 0x2a4]	      3595	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x70ed	          0x4863d0	                         movsxd rdx, eax	      3595	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x70f0	    0x488b85a8fdff	            mov rax, qword [rbp - 0x258]	      3595	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x70f7	          0x4801d0	                            add rax, rdx	      3595	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x70fa	    0x488985b0fdff	            mov qword [rbp - 0x250], rax	      3595	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x7101	    0x83bd60fdffff	              cmp dword [rbp - 0x2a0], 0	      3597	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	IF_55
0x7108	            0x7425	                            je 0x400716f	      3597	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	IF_55
0x710a	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3597	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	IF_55
0x7111	          0x8b4040	            mov eax, dword [rax + 0x40] 	      3597	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	IF_55
0x7114	            0x4898	                                    cdqe	      3597	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	IF_55
0x7116	    0x488b8db0fdff	            mov rcx, qword [rbp - 0x250]	      3597	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	IF_55
0x711d	    0x488b95a8fdff	            mov rdx, qword [rbp - 0x258]	      3597	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	IF_55
0x7124	          0x4829d1	                            sub rcx, rdx	      3597	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	IF_55
0x7127	          0x4889ca	                            mov rdx, rcx	      3597	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	IF_55
0x712a	          0x4839d0	                            cmp rax, rdx	      3597	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	IF_55
0x712d	            0x7e3e	                           jle 0x40071ad	      3597	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	IF_55
0x712f	    0xc78518fcffff	          mov dword [rbp - 0x3e8], 0x2e 	      3601	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	IF_55
0x7139	    0x488b95e8fbff	            mov rdx, qword [rbp - 0x418]	      3602	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	IF_55	CALL_42
0x7140	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      3602	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	IF_55	CALL_42
0x7147	          0x4889d6	                            mov rsi, rdx	      3602	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	IF_55	CALL_42
0x714a	          0x4889c7	                            mov rdi, rax	      3602	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	IF_55	CALL_42
0x714d	      0xe800000000	                          call 0x4007192	      3602	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	IF_55	CALL_42
0x7152	          0x4889c2	                            mov rdx, rax	      3602	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	IF_55	CALL_42
0x7155	    0x488b85a8fdff	            mov rax, qword [rbp - 0x258]	      3602	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	IF_55	CALL_42
0x715c	          0x4829c2	                            sub rdx, rax	      3602	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	IF_55	CALL_42
0x715f	          0x4889d0	                            mov rax, rdx	      3602	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	IF_55	CALL_42
0x7162	          0x83c001	                              add eax, 1	      3602	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	IF_55	CALL_42
0x7165	    0x8985a8fcffff	            mov dword [rbp - 0x358], eax	      3602	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	IF_55	CALL_42
0x716b	            0xeb3b	                           jmp 0x40071e8	      3602	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	IF_55	CALL_42
0x716d	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3607	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	ELSE_19
0x7174	          0x8b5040	            mov edx, dword [rax + 0x40] 	      3607	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	ELSE_19
0x7177	    0x8b8560fdffff	            mov eax, dword [rbp - 0x2a0]	      3607	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	ELSE_19
0x717d	             0x1d0	                            add eax, edx	      3607	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	ELSE_19
0x717f	          0x83c001	                              add eax, 1	      3607	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	ELSE_19
0x7182	    0x8985a8fcffff	            mov dword [rbp - 0x358], eax	      3607	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	ELSE_19
0x7188	    0x8b8518fcffff	            mov eax, dword [rbp - 0x3e8]	      3610	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	ELSE_19	IF_56
0x718e	          0x83f82e	                           cmp eax, 0x2e	      3610	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	ELSE_19	IF_56
0x7191	            0x7415	                            je 0x40071e8	      3610	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	ELSE_19	IF_56
0x7193	    0x8b8518fcffff	            mov eax, dword [rbp - 0x3e8]	      3611	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	ELSE_19	IF_56
0x7199	            0x89c0	                            mov eax, eax	      3611	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	ELSE_19	IF_56
0x719b	    0x8b0485000000	                  mov eax, dword [rax*4]	      3611	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	ELSE_19	IF_56
0x71a2	    0x8985a4fcffff	            mov dword [rbp - 0x35c], eax	      3611	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	ELSE_19	IF_56
0x71a8	    0x488b8de8fbff	            mov rcx, qword [rbp - 0x418]	      3613	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x71af	    0x488b8540feff	            mov rax, qword [rbp - 0x1c0]	      3613	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x71b6	    0x488b9548feff	            mov rdx, qword [rbp - 0x1b8]	      3613	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x71bd	        0x48894138	             mov qword [rcx + 0x38], rax	      3613	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x71c1	        0x48895140	             mov qword [rcx + 0x40], rdx	      3613	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54
0x71c5	    0x83bd8cfcffff	              cmp dword [rbp - 0x374], 0	      3617	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	IF_57
0x71cc	            0x7419	                            je 0x4007227	      3617	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	IF_57
0x71ce	    0x488b95e0fbff	            mov rdx, qword [rbp - 0x420]	      3618	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	CALL_43
0x71d5	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3618	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	CALL_43
0x71dc	          0x4889d6	                            mov rsi, rdx	      3618	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	CALL_43
0x71df	          0x4889c7	                            mov rdi, rax	      3618	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	CALL_43
0x71e2	      0xe800000000	                          call 0x4007227	      3618	screen.c	FUNCTION_28	ELSE_17	IF_47	IF_54	CALL_43
0x71e7	    0x8b8500fcffff	            mov eax, dword [rbp - 0x400]	      3628	screen.c	FUNCTION_28	IF_58
0x71ed	            0x85c0	                           test eax, eax	      3628	screen.c	FUNCTION_28	IF_58
0x71ef	            0x787c	                            js 0x40072ad	      3628	screen.c	FUNCTION_28	IF_58
0x71f1	    0x83bd64fcffff	              cmp dword [rbp - 0x39c], 0	      3630	screen.c	FUNCTION_28	IF_58	IF_59
0x71f8	            0x7459	                            je 0x4007293	      3630	screen.c	FUNCTION_28	IF_58	IF_59
0x71fa	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3632	screen.c	FUNCTION_28	IF_58	IF_59	IF_60
0x7201	    0x8b90d8000000	            mov edx, dword [rax + 0xd8] 	      3632	screen.c	FUNCTION_28	IF_58	IF_59	IF_60
0x7207	    0x8b8500fcffff	            mov eax, dword [rbp - 0x400]	      3632	screen.c	FUNCTION_28	IF_58	IF_59	IF_60
0x720d	            0x39c2	                            cmp edx, eax	      3632	screen.c	FUNCTION_28	IF_58	IF_59	IF_60
0x720f	            0x7518	                           jne 0x4007269	      3632	screen.c	FUNCTION_28	IF_58	IF_59	IF_60
0x7211	    0x8b8500fcffff	            mov eax, dword [rbp - 0x400]	      3636	screen.c	FUNCTION_28	IF_58	IF_59	IF_60
0x7217	    0x898560fcffff	            mov dword [rbp - 0x3a0], eax	      3636	screen.c	FUNCTION_28	IF_58	IF_59	IF_60
0x721d	    0xc78500fcffff	    mov dword [rbp - 0x400], 0xffffffff 	      3637	screen.c	FUNCTION_28	IF_58	IF_59	IF_60
0x7227	            0xeb2a	                           jmp 0x4007293	      3637	screen.c	FUNCTION_28	IF_58	IF_59	IF_60
0x7229	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3639	screen.c	FUNCTION_28	IF_58	IF_59	ELSE_20	IF_61
0x7230	    0x8b90d8000000	            mov edx, dword [rax + 0xd8] 	      3639	screen.c	FUNCTION_28	IF_58	IF_59	ELSE_20	IF_61
0x7236	    0x8b8500fcffff	            mov eax, dword [rbp - 0x400]	      3639	screen.c	FUNCTION_28	IF_58	IF_59	ELSE_20	IF_61
0x723c	            0x39c2	                            cmp edx, eax	      3639	screen.c	FUNCTION_28	IF_58	IF_59	ELSE_20	IF_61
0x723e	            0x7e13	                           jle 0x4007293	      3639	screen.c	FUNCTION_28	IF_58	IF_59	ELSE_20	IF_61
0x7240	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3641	screen.c	FUNCTION_28	IF_58	IF_59	ELSE_20	IF_61
0x7247	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	      3641	screen.c	FUNCTION_28	IF_58	IF_59	ELSE_20	IF_61
0x724d	    0x898560fcffff	            mov dword [rbp - 0x3a0], eax	      3641	screen.c	FUNCTION_28	IF_58	IF_59	ELSE_20	IF_61
0x7253	    0x8b9500fcffff	            mov edx, dword [rbp - 0x400]	      3643	screen.c	FUNCTION_28	IF_58	IF_62
0x7259	    0x8b8504fcffff	            mov eax, dword [rbp - 0x3fc]	      3643	screen.c	FUNCTION_28	IF_58	IF_62
0x725f	            0x39c2	                            cmp edx, eax	      3643	screen.c	FUNCTION_28	IF_58	IF_62
0x7261	            0x7c0a	                            jl 0x40072ad	      3643	screen.c	FUNCTION_28	IF_58	IF_62
0x7263	    0xc78500fcffff	    mov dword [rbp - 0x400], 0xffffffff 	      3644	screen.c	FUNCTION_28	IF_58	IF_62
0x726d	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3652	screen.c	FUNCTION_28
0x7274	    0x488b80501500	          mov rax, qword [rax + 0x1550] 	      3652	screen.c	FUNCTION_28
0x727b	    0x488985e0fdff	            mov qword [rbp - 0x220], rax	      3652	screen.c	FUNCTION_28
0x7282	    0xc785dcfcffff	              mov dword [rbp - 0x324], 0	      3653	screen.c	FUNCTION_28
0x728c	      0xe935030000	                           jmp 0x4007606	      3654	screen.c	FUNCTION_28	WHILE_3
0x7291	    0x83bddcfcffff	              cmp dword [rbp - 0x324], 0	      3656	screen.c	FUNCTION_28	WHILE_3	IF_63
0x7298	            0x7517	                           jne 0x40072f1	      3656	screen.c	FUNCTION_28	WHILE_3	IF_63
0x729a	    0x48c785e8fdff	              mov qword [rbp - 0x218], 0	      3658	screen.c	FUNCTION_28	WHILE_3	IF_63
0x72a5	    0xc785dcfcffff	              mov dword [rbp - 0x324], 1	      3659	screen.c	FUNCTION_28	WHILE_3	IF_63
0x72af	            0xeb14	                           jmp 0x4007305	      3659	screen.c	FUNCTION_28	WHILE_3	IF_63
0x72b1	    0x488b85e0fdff	            mov rax, qword [rbp - 0x220]	      3662	screen.c	FUNCTION_28	WHILE_3	ELSE_21
0x72b8	    0x480508020000	                          add rax, 0x208	      3662	screen.c	FUNCTION_28	WHILE_3	ELSE_21
0x72be	    0x488985e8fdff	            mov qword [rbp - 0x218], rax	      3662	screen.c	FUNCTION_28	WHILE_3	ELSE_21
0x72c5	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      3663	screen.c	FUNCTION_28	WHILE_3
0x72cc	    0xc78070010000	    mov dword [rax + 0x170], 0x7fffffff 	      3663	screen.c	FUNCTION_28	WHILE_3
0x72d6	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      3664	screen.c	FUNCTION_28	WHILE_3
0x72dd	    0xc78074010000	    mov dword [rax + 0x174], 0x7fffffff 	      3664	screen.c	FUNCTION_28	WHILE_3
0x72e7	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      3665	screen.c	FUNCTION_28	WHILE_3
0x72ee	    0xc78064010000	              mov dword [rax + 0x164], 0	      3665	screen.c	FUNCTION_28	WHILE_3
0x72f8	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      3666	screen.c	FUNCTION_28	WHILE_3
0x72ff	    0xc78078010000	              mov dword [rax + 0x178], 0	      3666	screen.c	FUNCTION_28	WHILE_3
0x7309	    0x488b95b0fdff	            mov rdx, qword [rbp - 0x250]	      3667	screen.c	FUNCTION_28	WHILE_3
0x7310	    0x488b85a8fdff	            mov rax, qword [rbp - 0x258]	      3667	screen.c	FUNCTION_28	WHILE_3
0x7317	          0x4829c2	                            sub rdx, rax	      3667	screen.c	FUNCTION_28	WHILE_3
0x731a	          0x4889d0	                            mov rax, rdx	      3667	screen.c	FUNCTION_28	WHILE_3
0x731d	    0x488985d8fdff	            mov qword [rbp - 0x228], rax	      3667	screen.c	FUNCTION_28	WHILE_3
0x7324	    0x4883bde0fdff	              cmp qword [rbp - 0x220], 0	      3668	screen.c	FUNCTION_28	WHILE_3	IF_64
0x732c	            0x7411	                            je 0x400737f	      3668	screen.c	FUNCTION_28	WHILE_3	IF_64
0x732e	    0x488b85e0fdff	            mov rax, qword [rbp - 0x220]	      3669	screen.c	FUNCTION_28	WHILE_3	IF_64
0x7335	    0xc780f0010000	              mov dword [rax + 0x1f0], 0	      3669	screen.c	FUNCTION_28	WHILE_3	IF_64
0x733f	    0x4881bde8fdff	              cmp qword [rbp - 0x218], 0	      3670	screen.c	FUNCTION_28	WHILE_3	CALL_44
0x734a	            0x7409	                            je 0x4007395	      3670	screen.c	FUNCTION_28	WHILE_3	CALL_44
0x734c	    0x488b8de0fdff	            mov rcx, qword [rbp - 0x220]	      3670	screen.c	FUNCTION_28	WHILE_3	CALL_44
0x7353	            0xeb05	                           jmp 0x400739a	      3670	screen.c	FUNCTION_28	WHILE_3	CALL_44
0x7355	      0xb900000000	                              mov ecx, 0	      3670	screen.c	FUNCTION_28	WHILE_3	CALL_44
0x735a	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      3670	screen.c	FUNCTION_28	WHILE_3	CALL_44
0x7361	            0x89c7	                            mov edi, eax	      3670	screen.c	FUNCTION_28	WHILE_3	CALL_44
0x7363	    0x488b95e0fbff	            mov rdx, qword [rbp - 0x420]	      3670	screen.c	FUNCTION_28	WHILE_3	CALL_44
0x736a	    0x488bb5e8fdff	            mov rsi, qword [rbp - 0x218]	      3670	screen.c	FUNCTION_28	WHILE_3	CALL_44
0x7371	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3670	screen.c	FUNCTION_28	WHILE_3	CALL_44
0x7378	          0x4989c8	                             mov r8, rcx	      3670	screen.c	FUNCTION_28	WHILE_3	CALL_44
0x737b	            0x89f9	                            mov ecx, edi	      3670	screen.c	FUNCTION_28	WHILE_3	CALL_44
0x737d	          0x4889c7	                            mov rdi, rax	      3670	screen.c	FUNCTION_28	WHILE_3	CALL_44
0x7380	      0xe8dd870000	                 call sym.next_search_hl	      3670	screen.c	FUNCTION_28	WHILE_3	CALL_44
0x7385	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3675	screen.c	FUNCTION_28	WHILE_3	CALL_45
0x738c	        0x488b4008	                mov rax, qword [rax + 8]	      3675	screen.c	FUNCTION_28	WHILE_3	CALL_45
0x7390	    0x488b8de0fbff	            mov rcx, qword [rbp - 0x420]	      3675	screen.c	FUNCTION_28	WHILE_3	CALL_45
0x7397	      0xba00000000	                              mov edx, 0	      3675	screen.c	FUNCTION_28	WHILE_3	CALL_45
0x739c	          0x4889ce	                            mov rsi, rcx	      3675	screen.c	FUNCTION_28	WHILE_3	CALL_45
0x739f	          0x4889c7	                            mov rdi, rax	      3675	screen.c	FUNCTION_28	WHILE_3	CALL_45
0x73a2	      0xe800000000	                          call 0x40073e7	      3675	screen.c	FUNCTION_28	WHILE_3	CALL_45
0x73a7	    0x488985a8fdff	            mov qword [rbp - 0x258], rax	      3675	screen.c	FUNCTION_28	WHILE_3	CALL_45
0x73ae	    0x488b95d8fdff	            mov rdx, qword [rbp - 0x228]	      3676	screen.c	FUNCTION_28	WHILE_3
0x73b5	    0x488b85a8fdff	            mov rax, qword [rbp - 0x258]	      3676	screen.c	FUNCTION_28	WHILE_3
0x73bc	          0x4801d0	                            add rax, rdx	      3676	screen.c	FUNCTION_28	WHILE_3
0x73bf	    0x488985b0fdff	            mov qword [rbp - 0x250], rax	      3676	screen.c	FUNCTION_28	WHILE_3
0x73c6	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      3678	screen.c	FUNCTION_28	WHILE_3	IF_65
0x73cd	    0x488b80580100	           mov rax, qword [rax + 0x158] 	      3678	screen.c	FUNCTION_28	WHILE_3	IF_65
0x73d4	          0x4885c0	                           test rax, rax	      3678	screen.c	FUNCTION_28	WHILE_3	IF_65
0x73d7	     0xf84c1010000	                            je 0x40075de	      3678	screen.c	FUNCTION_28	WHILE_3	IF_65
0x73dd	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      3678	screen.c	FUNCTION_28	WHILE_3	IF_65
0x73e4	    0x488b80580100	           mov rax, qword [rax + 0x158] 	      3678	screen.c	FUNCTION_28	WHILE_3	IF_65
0x73eb	    0x483b85e0fbff	            cmp rax, qword [rbp - 0x420]	      3678	screen.c	FUNCTION_28	WHILE_3	IF_65
0x73f2	     0xf8fa6010000	                            jg 0x40075de	      3678	screen.c	FUNCTION_28	WHILE_3	IF_65
0x73f8	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      3680	screen.c	FUNCTION_28	WHILE_3	IF_65	IF_66
0x73ff	    0x488b80580100	           mov rax, qword [rax + 0x158] 	      3680	screen.c	FUNCTION_28	WHILE_3	IF_65	IF_66
0x7406	    0x483b85e0fbff	            cmp rax, qword [rbp - 0x420]	      3680	screen.c	FUNCTION_28	WHILE_3	IF_65	IF_66
0x740d	            0x7519	                           jne 0x4007468	      3680	screen.c	FUNCTION_28	WHILE_3	IF_65	IF_66
0x740f	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      3681	screen.c	FUNCTION_28	WHILE_3	IF_65	IF_66
0x7416	          0x8b5010	            mov edx, dword [rax + 0x10] 	      3681	screen.c	FUNCTION_28	WHILE_3	IF_65	IF_66
0x7419	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      3681	screen.c	FUNCTION_28	WHILE_3	IF_65	IF_66
0x7420	    0x899070010000	            mov dword [rax + 0x170], edx	      3681	screen.c	FUNCTION_28	WHILE_3	IF_65	IF_66
0x7426	            0xeb11	                           jmp 0x4007479	      3681	screen.c	FUNCTION_28	WHILE_3	IF_65	IF_66
0x7428	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      3683	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_22
0x742f	    0xc78070010000	              mov dword [rax + 0x170], 0	      3683	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_22
0x7439	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      3684	screen.c	FUNCTION_28	WHILE_3	IF_65	IF_67
0x7440	    0x488b90580100	           mov rdx, qword [rax + 0x158] 	      3684	screen.c	FUNCTION_28	WHILE_3	IF_65	IF_67
0x7447	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      3684	screen.c	FUNCTION_28	WHILE_3	IF_65	IF_67
0x744e	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	      3684	screen.c	FUNCTION_28	WHILE_3	IF_65	IF_67
0x7455	          0x4801c2	                            add rdx, rax	      3684	screen.c	FUNCTION_28	WHILE_3	IF_65	IF_67
0x7458	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      3685	screen.c	FUNCTION_28	WHILE_3	IF_65	IF_67
0x745f	        0x488b4008	                mov rax, qword [rax + 8]	      3685	screen.c	FUNCTION_28	WHILE_3	IF_65	IF_67
0x7463	          0x4829c2	                            sub rdx, rax	      3685	screen.c	FUNCTION_28	WHILE_3	IF_65	IF_67
0x7466	          0x4889d0	                            mov rax, rdx	      3685	screen.c	FUNCTION_28	WHILE_3	IF_65	IF_67
0x7469	    0x483b85e0fbff	            cmp rax, qword [rbp - 0x420]	      3684	screen.c	FUNCTION_28	WHILE_3	IF_65	IF_67
0x7470	            0x751c	                           jne 0x40074ce	      3684	screen.c	FUNCTION_28	WHILE_3	IF_65	IF_67
0x7472	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      3686	screen.c	FUNCTION_28	WHILE_3	IF_65	IF_67
0x7479	    0x8b90b0000000	            mov edx, dword [rax + 0xb0] 	      3686	screen.c	FUNCTION_28	WHILE_3	IF_65	IF_67
0x747f	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      3686	screen.c	FUNCTION_28	WHILE_3	IF_65	IF_67
0x7486	    0x899074010000	            mov dword [rax + 0x174], edx	      3686	screen.c	FUNCTION_28	WHILE_3	IF_65	IF_67
0x748c	            0xeb11	                           jmp 0x40074df	      3686	screen.c	FUNCTION_28	WHILE_3	IF_65	IF_67
0x748e	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      3688	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23
0x7495	    0xc78074010000	    mov dword [rax + 0x174], 0x7fffffff 	      3688	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23
0x749f	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      3690	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68
0x74a6	    0x8b9070010000	           mov edx, dword [rax + 0x170] 	      3690	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68
0x74ac	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      3690	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68
0x74b3	    0x8b8074010000	           mov eax, dword [rax + 0x174] 	      3690	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68
0x74b9	            0x39c2	                            cmp edx, eax	      3690	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68
0x74bb	     0xf858e000000	                           jne 0x400758f	      3690	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68
0x74c1	    0x8b0500000000	            mov eax, dword [0x04007507] 	      3693	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68	IF_69
0x74c7	            0x85c0	                           test eax, eax	      3693	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68	IF_69
0x74c9	            0x7467	                            je 0x4007572	      3693	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68	IF_69
0x74cb	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      3693	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68	IF_69
0x74d2	    0x8b8074010000	           mov eax, dword [rax + 0x174] 	      3693	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68	IF_69
0x74d8	          0x4863d0	                         movsxd rdx, eax	      3693	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68	IF_69
0x74db	    0x488b85a8fdff	            mov rax, qword [rbp - 0x258]	      3693	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68	IF_69
0x74e2	          0x4801d0	                            add rax, rdx	      3693	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68	IF_69
0x74e5	           0xfb600	                   movzx eax, byte [rax]	      3693	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68	IF_69
0x74e8	            0x84c0	                             test al, al	      3693	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68	IF_69
0x74ea	            0x7446	                            je 0x4007572	      3693	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68	IF_69
0x74ec	    0x488b05000000	            mov rax, qword [0x04007533] 	      3694	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68	IF_69
0x74f3	    0x488b95e8fdff	            mov rdx, qword [rbp - 0x218]	      3694	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68	IF_69
0x74fa	    0x8b9274010000	           mov edx, dword [rdx + 0x174] 	      3694	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68	IF_69
0x7500	          0x4863ca	                         movsxd rcx, edx	      3694	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68	IF_69
0x7503	    0x488b95a8fdff	            mov rdx, qword [rbp - 0x258]	      3694	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68	IF_69
0x750a	          0x4801ca	                            add rdx, rcx	      3694	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68	IF_69
0x750d	          0x4889d7	                            mov rdi, rdx	      3694	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68	IF_69
0x7510	            0xffd0	                                call rax	      3694	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68	IF_69
0x7512	            0x89c2	                            mov edx, eax	      3694	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68	IF_69
0x7514	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      3694	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68	IF_69
0x751b	    0x8b8074010000	           mov eax, dword [rax + 0x174] 	      3694	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68	IF_69
0x7521	             0x1c2	                            add edx, eax	      3694	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68	IF_69
0x7523	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      3694	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68	IF_69
0x752a	    0x899074010000	            mov dword [rax + 0x174], edx	      3694	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68	IF_69
0x7530	            0xeb1d	                           jmp 0x400758f	      3694	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68	IF_69
0x7532	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      3697	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68	ELSE_24
0x7539	    0x8b8074010000	           mov eax, dword [rax + 0x174] 	      3697	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68	ELSE_24
0x753f	          0x8d5001	                      lea edx, [rax + 1]	      3697	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68	ELSE_24
0x7542	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      3697	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68	ELSE_24
0x7549	    0x899074010000	            mov dword [rax + 0x174], edx	      3697	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_23	IF_68	ELSE_24
0x754f	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      3699	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_24	IF_70
0x7556	    0x8b8070010000	           mov eax, dword [rax + 0x170] 	      3699	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_24	IF_70
0x755c	            0x4898	                                    cdqe	      3699	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_24	IF_70
0x755e	    0x483b85d8fdff	            cmp rax, qword [rbp - 0x228]	      3699	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_24	IF_70
0x7565	            0x7d2d	                           jge 0x40075d4	      3699	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_24	IF_70
0x7567	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      3701	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_24	IF_70
0x756e	    0x8b9060010000	           mov edx, dword [rax + 0x160] 	      3701	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_24	IF_70
0x7574	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      3701	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_24	IF_70
0x757b	    0x899064010000	            mov dword [rax + 0x164], edx	      3701	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_24	IF_70
0x7581	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      3702	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_24	IF_70
0x7588	    0x8b8060010000	           mov eax, dword [rax + 0x160] 	      3702	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_24	IF_70
0x758e	    0x898580fcffff	            mov dword [rbp - 0x380], eax	      3702	screen.c	FUNCTION_28	WHILE_3	IF_65	ELSE_24	IF_70
0x7594	    0xc78574fcffff	              mov dword [rbp - 0x38c], 1	      3704	screen.c	FUNCTION_28	WHILE_3	IF_65
0x759e	    0x4881bde8fdff	              cmp qword [rbp - 0x218], 0	      3706	screen.c	FUNCTION_28	WHILE_3	IF_71
0x75a9	            0x741b	                            je 0x4007606	      3706	screen.c	FUNCTION_28	WHILE_3	IF_71
0x75ab	    0x4883bde0fdff	              cmp qword [rbp - 0x220], 0	      3706	screen.c	FUNCTION_28	WHILE_3	IF_71
0x75b3	            0x7411	                            je 0x4007606	      3706	screen.c	FUNCTION_28	WHILE_3	IF_71
0x75b5	    0x488b85e0fdff	            mov rax, qword [rbp - 0x220]	      3707	screen.c	FUNCTION_28	WHILE_3	IF_71
0x75bc	          0x488b00	                    mov rax, qword [rax]	      3707	screen.c	FUNCTION_28	WHILE_3	IF_71
0x75bf	    0x488985e0fdff	            mov qword [rbp - 0x220], rax	      3707	screen.c	FUNCTION_28	WHILE_3	IF_71
0x75c6	    0x4883bde0fdff	              cmp qword [rbp - 0x220], 0	      3654	screen.c	FUNCTION_28	WHILE_3
0x75ce	     0xf85bdfcffff	                           jne 0x40072d1	      3654	screen.c	FUNCTION_28	WHILE_3
0x75d4	    0x83bddcfcffff	              cmp dword [rbp - 0x324], 0	      3654	screen.c	FUNCTION_28	WHILE_3
0x75db	     0xf84b0fcffff	                            je 0x40072d1	      3654	screen.c	FUNCTION_28	WHILE_3
0x75e1	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3715	screen.c	FUNCTION_28	IF_72
0x75e8	    0x8b8070020000	           mov eax, dword [rax + 0x270] 	      3715	screen.c	FUNCTION_28	IF_72
0x75ee	            0x85c0	                           test eax, eax	      3715	screen.c	FUNCTION_28	IF_72
0x75f0	            0x7444	                            je 0x4007676	      3715	screen.c	FUNCTION_28	IF_72
0x75f2	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3715	screen.c	FUNCTION_28	IF_72
0x75f9	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3715	screen.c	FUNCTION_28	IF_72
0x75fd	    0x483b85e0fbff	            cmp rax, qword [rbp - 0x420]	      3715	screen.c	FUNCTION_28	IF_72
0x7604	            0x7530	                           jne 0x4007676	      3715	screen.c	FUNCTION_28	IF_72
0x7606	    0x488b05000000	            mov rax, qword [0x0400764d] 	      3716	screen.c	FUNCTION_28	IF_72
0x760d	    0x483985e8fbff	           cmp qword [rbp - 0x418], rax 	      3716	screen.c	FUNCTION_28	IF_72
0x7614	            0x750a	                           jne 0x4007660	      3716	screen.c	FUNCTION_28	IF_72
0x7616	    0x8b0500000000	            mov eax, dword [0x0400765c] 	      3716	screen.c	FUNCTION_28	IF_72
0x761c	            0x85c0	                           test eax, eax	      3716	screen.c	FUNCTION_28	IF_72
0x761e	            0x7516	                           jne 0x4007676	      3716	screen.c	FUNCTION_28	IF_72
0x7620	    0x8b0500000000	            mov eax, dword [0x04007666] 	      3718	screen.c	FUNCTION_28	IF_72	CALL_46
0x7626	    0x8985d8fcffff	            mov dword [rbp - 0x328], eax	      3718	screen.c	FUNCTION_28	IF_72	CALL_46
0x762c	    0xc78574fcffff	              mov dword [rbp - 0x38c], 1	      3719	screen.c	FUNCTION_28	IF_72
0x7636	    0x488b05000000	            mov rax, qword [0x0400767d] 	      3723	screen.c	FUNCTION_28
0x763d	          0x4889c2	                            mov rdx, rax	      3723	screen.c	FUNCTION_28
0x7640	    0x488b05000000	            mov rax, qword [0x04007687] 	      3723	screen.c	FUNCTION_28
0x7647	          0x4829c2	                            sub rdx, rax	      3723	screen.c	FUNCTION_28
0x764a	          0x4889d0	                            mov rax, rdx	      3723	screen.c	FUNCTION_28
0x764d	    0x898520fcffff	            mov dword [rbp - 0x3e0], eax	      3723	screen.c	FUNCTION_28
0x7653	    0xc7851cfcffff	              mov dword [rbp - 0x3e4], 0	      3724	screen.c	FUNCTION_28
0x765d	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3726	screen.c	FUNCTION_28	IF_73
0x7664	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      3726	screen.c	FUNCTION_28	IF_73
0x766a	            0x85c0	                           test eax, eax	      3726	screen.c	FUNCTION_28	IF_73
0x766c	            0x7422	                            je 0x40076d0	      3726	screen.c	FUNCTION_28	IF_73
0x766e	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3731	screen.c	FUNCTION_28	IF_73
0x7675	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      3731	screen.c	FUNCTION_28	IF_73
0x767b	          0x83e801	                              sub eax, 1	      3731	screen.c	FUNCTION_28	IF_73
0x767e	    0x89851cfcffff	            mov dword [rbp - 0x3e4], eax	      3731	screen.c	FUNCTION_28	IF_73
0x7684	    0x8b851cfcffff	            mov eax, dword [rbp - 0x3e4]	      3732	screen.c	FUNCTION_28	IF_73
0x768a	     0x18520fcffff	            add dword [rbp - 0x3e0], eax	      3732	screen.c	FUNCTION_28	IF_73
0x7690	    0xc7851cfdffff	              mov dword [rbp - 0x2e4], 0	      3742	screen.c	FUNCTION_28	FOR_1
0x769a	    0x83bdfcfcffff	              cmp dword [rbp - 0x304], 7	      3745	screen.c	FUNCTION_28	FOR_1	IF_74
0x76a1	     0xf847a080000	                            je 0x4007f61	      3745	screen.c	FUNCTION_28	FOR_1	IF_74
0x76a7	    0x83bdfcfcffff	              cmp dword [rbp - 0x304], 0	      3748	screen.c	FUNCTION_28	FOR_1	IF_74	IF_75
0x76ae	            0x754f	                           jne 0x400773f	      3748	screen.c	FUNCTION_28	FOR_1	IF_74	IF_75
0x76b0	    0x83bd2cfcffff	              cmp dword [rbp - 0x3d4], 0	      3748	screen.c	FUNCTION_28	FOR_1	IF_74	IF_75
0x76b7	            0x7546	                           jne 0x400773f	      3748	screen.c	FUNCTION_28	FOR_1	IF_74	IF_75
0x76b9	    0xc785fcfcffff	              mov dword [rbp - 0x304], 1	      3750	screen.c	FUNCTION_28	FOR_1	IF_74	IF_75
0x76c3	    0x8b0500000000	            mov eax, dword [0x04007709] 	      3751	screen.c	FUNCTION_28	FOR_1	IF_74	IF_75	IF_76
0x76c9	            0x85c0	                           test eax, eax	      3751	screen.c	FUNCTION_28	FOR_1	IF_74	IF_75	IF_76
0x76cb	            0x7432	                            je 0x400773f	      3751	screen.c	FUNCTION_28	FOR_1	IF_74	IF_75	IF_76
0x76cd	    0x488b05000000	            mov rax, qword [0x04007714] 	      3751	screen.c	FUNCTION_28	FOR_1	IF_74	IF_75	IF_76
0x76d4	    0x483985e8fbff	           cmp qword [rbp - 0x418], rax 	      3751	screen.c	FUNCTION_28	FOR_1	IF_74	IF_75	IF_76
0x76db	            0x7522	                           jne 0x400773f	      3751	screen.c	FUNCTION_28	FOR_1	IF_74	IF_75	IF_76
0x76dd	    0xc7852cfcffff	              mov dword [rbp - 0x3d4], 1	      3754	screen.c	FUNCTION_28	FOR_1	IF_74	IF_75	IF_76
0x76e7	    0x8b0500000000	            mov eax, dword [0x0400772d] 	      3755	screen.c	FUNCTION_28	FOR_1	IF_74	IF_75	IF_76
0x76ed	    0x898530fcffff	            mov dword [rbp - 0x3d0], eax	      3755	screen.c	FUNCTION_28	FOR_1	IF_74	IF_75	IF_76
0x76f3	    0x8b0500000000	            mov eax, dword [0x04007739] 	      3756	screen.c	FUNCTION_28	FOR_1	IF_74	IF_75	IF_76	CALL_47
0x76f9	    0x89856cfcffff	            mov dword [rbp - 0x394], eax	      3756	screen.c	FUNCTION_28	FOR_1	IF_74	IF_75	IF_76	CALL_47
0x76ff	    0x83bdfcfcffff	              cmp dword [rbp - 0x304], 1	      3762	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77
0x7706	     0xf85d3000000	                           jne 0x400781f	      3762	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77
0x770c	    0x83bd2cfcffff	              cmp dword [rbp - 0x3d4], 0	      3762	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77
0x7713	     0xf85c6000000	                           jne 0x400781f	      3762	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77
0x7719	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3764	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	CALL_48
0x7720	      0xbe00000000	                              mov esi, 0	      3764	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	CALL_48
0x7725	          0x4889c7	                            mov rdi, rax	      3764	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	CALL_48
0x7728	      0xe854d6ffff	             call sym.compute_foldcolumn	      3764	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	CALL_48
0x772d	    0x898564fdffff	            mov dword [rbp - 0x29c], eax	      3764	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	CALL_48
0x7733	    0xc785fcfcffff	              mov dword [rbp - 0x304], 2	      3766	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77
0x773d	    0x83bd64fdffff	              cmp dword [rbp - 0x29c], 0	      3767	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78
0x7744	     0xf8e95000000	                           jle 0x400781f	      3767	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78
0x774a	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      3771	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78	CALL_49
0x7751	          0x4889c7	                            mov rdi, rax	      3771	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78	CALL_49
0x7754	      0xe800000000	                          call 0x4007799	      3771	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78	CALL_49
0x7759	      0xbf0d000000	                            mov edi, 0xd	      3772	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78	CALL_50
0x775e	      0xe800000000	                          call 0x40077a3	      3772	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78	CALL_50
0x7763	    0x488985b8fdff	            mov qword [rbp - 0x248], rax	      3772	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78	CALL_50
0x776a	    0x4883bdb8fdff	              cmp qword [rbp - 0x248], 0	      3774	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78	IF_79
0x7772	            0x746b	                            je 0x400781f	      3774	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78	IF_79
0x7774	    0x488b95e0fbff	            mov rdx, qword [rbp - 0x420]	      3776	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78	IF_79	CALL_51
0x777b	    0x488bb5e8fbff	            mov rsi, qword [rbp - 0x418]	      3776	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78	IF_79	CALL_51
0x7782	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      3776	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78	IF_79	CALL_51
0x7789	          0x4889d1	                            mov rcx, rdx	      3776	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78	IF_79	CALL_51
0x778c	      0xba00000000	                              mov edx, 0	      3776	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78	IF_79	CALL_51
0x7791	          0x4889c7	                            mov rdi, rax	      3776	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78	IF_79	CALL_51
0x7794	      0xe8d3e5ffff	                call sym.fill_foldcolumn	      3776	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78	IF_79	CALL_51
0x7799	    0x8b8564fdffff	            mov eax, dword [rbp - 0x29c]	      3777	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78	IF_79
0x779f	    0x89852cfcffff	            mov dword [rbp - 0x3d4], eax	      3777	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78	IF_79
0x77a5	    0x8b852cfcffff	            mov eax, dword [rbp - 0x3d4]	      3778	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78	IF_79
0x77ab	          0x4863d0	                         movsxd rdx, eax	      3778	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78	IF_79
0x77ae	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      3778	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78	IF_79
0x77b5	          0x4801d0	                            add rax, rdx	      3778	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78	IF_79
0x77b8	          0xc60000	                       mov byte [rax], 0	      3778	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78	IF_79
0x77bb	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      3779	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78	IF_79
0x77c2	    0x48898580fdff	            mov qword [rbp - 0x280], rax	      3779	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78	IF_79
0x77c9	    0xc78530fcffff	              mov dword [rbp - 0x3d0], 0	      3780	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78	IF_79
0x77d3	    0x8b0500000000	            mov eax, dword [0x04007819] 	      3781	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78	IF_79	CALL_52
0x77d9	    0x89856cfcffff	            mov dword [rbp - 0x394], eax	      3781	screen.c	FUNCTION_28	FOR_1	IF_74	IF_77	IF_78	IF_79	CALL_52
0x77df	    0x83bdfcfcffff	              cmp dword [rbp - 0x304], 2	      3788	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80
0x77e6	     0xf85fd000000	                           jne 0x4007929	      3788	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80
0x77ec	    0x83bd2cfcffff	              cmp dword [rbp - 0x3d4], 0	      3788	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80
0x77f3	     0xf85f0000000	                           jne 0x4007929	      3788	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80
0x77f9	    0xc785fcfcffff	              mov dword [rbp - 0x304], 3	      3790	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80
0x7803	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3793	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	CALL_53
0x780a	          0x4889c7	                            mov rdi, rax	      3793	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	CALL_53
0x780d	      0xe800000000	                          call 0x4007852	      3793	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	CALL_53
0x7812	            0x85c0	                           test eax, eax	      3793	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	CALL_53
0x7814	     0xf84cf000000	                            je 0x4007929	      3793	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	CALL_53
0x781a	    0xc78530fcffff	          mov dword [rbp - 0x3d0], 0x20 	      3801	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81
0x7824	    0x8b0500000000	            mov eax, dword [0x0400786a] 	      3802	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	CALL_54
0x782a	    0x89856cfcffff	            mov dword [rbp - 0x394], eax	      3802	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	CALL_54
0x7830	    0xc7852cfcffff	              mov dword [rbp - 0x3d4], 2	      3803	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81
0x783a	    0x8b95dcfbffff	            mov edx, dword [rbp - 0x424]	      3807	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82
0x7840	    0x8b85c4fcffff	            mov eax, dword [rbp - 0x33c]	      3807	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82
0x7846	             0x1d0	                            add eax, edx	      3807	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82
0x7848	    0x3b8524fcffff	            cmp eax, dword [rbp - 0x3dc]	      3805	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82
0x784e	     0xf8595000000	                           jne 0x4007929	      3805	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82
0x7854	    0x83bdc8fcffff	              cmp dword [rbp - 0x338], 0	      3807	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82
0x785b	     0xf8f88000000	                            jg 0x4007929	      3807	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82
0x7861	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3811	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	CALL_55
0x7868	        0x488b4008	                mov rax, qword [rax + 8]	      3811	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	CALL_55
0x786c	    0x488b8de0fbff	            mov rcx, qword [rbp - 0x420]	      3811	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	CALL_55
0x7873	      0xba03000000	                              mov edx, 3	      3811	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	CALL_55
0x7878	          0x4889ce	                            mov rsi, rcx	      3811	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	CALL_55
0x787b	          0x4889c7	                            mov rdi, rax	      3811	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	CALL_55
0x787e	      0xe800000000	                          call 0x40078c3	      3811	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	CALL_55
0x7883	    0x898568fdffff	            mov dword [rbp - 0x298], eax	      3811	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	CALL_55
0x7889	    0x83bd68fdffff	              cmp dword [rbp - 0x298], 0	      3828	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	ELSE_25	IF_85
0x7890	            0x7457	                            je 0x4007929	      3828	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	ELSE_25	IF_85
0x7892	    0x8b8568fdffff	            mov eax, dword [rbp - 0x298]	      3830	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	ELSE_25	IF_85	CALL_58
0x7898	            0x89c7	                            mov edi, eax	      3830	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	ELSE_25	IF_85	CALL_58
0x789a	      0xe800000000	                          call 0x40078df	      3830	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	ELSE_25	IF_85	CALL_58
0x789f	    0x48898580fdff	            mov qword [rbp - 0x280], rax	      3830	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	ELSE_25	IF_85	CALL_58
0x78a6	    0x488b8580fdff	            mov rax, qword [rbp - 0x280]	      3831	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	ELSE_25	IF_85	IF_86
0x78ad	          0x4885c0	                           test rax, rax	      3831	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	ELSE_25	IF_85	IF_86
0x78b0	            0x741f	                            je 0x4007911	      3831	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	ELSE_25	IF_85	IF_86
0x78b2	    0xc78530fcffff	              mov dword [rbp - 0x3d0], 0	      3833	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	ELSE_25	IF_85	IF_86
0x78bc	    0x488b8580fdff	            mov rax, qword [rbp - 0x280]	      3834	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	ELSE_25	IF_85	IF_86	CALL_59
0x78c3	          0x4889c7	                            mov rdi, rax	      3834	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	ELSE_25	IF_85	IF_86	CALL_59
0x78c6	      0xe800000000	                          call 0x400790b	      3834	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	ELSE_25	IF_85	IF_86	CALL_59
0x78cb	    0x89852cfcffff	            mov dword [rbp - 0x3d4], eax	      3834	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	ELSE_25	IF_85	IF_86	CALL_59
0x78d1	    0x8b8568fdffff	            mov eax, dword [rbp - 0x298]	      3836	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	ELSE_25	IF_85	CALL_60
0x78d7	      0xbe00000000	                              mov esi, 0	      3836	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	ELSE_25	IF_85	CALL_60
0x78dc	            0x89c7	                            mov edi, eax	      3836	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	ELSE_25	IF_85	CALL_60
0x78de	      0xe800000000	                          call 0x4007923	      3836	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	ELSE_25	IF_85	CALL_60
0x78e3	    0x89856cfcffff	            mov dword [rbp - 0x394], eax	      3836	screen.c	FUNCTION_28	FOR_1	IF_74	IF_80	IF_81	IF_82	ELSE_25	IF_85	CALL_60
0x78e9	    0x83bdfcfcffff	              cmp dword [rbp - 0x304], 3	      3843	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87
0x78f0	     0xf856d020000	                           jne 0x4007ba3	      3843	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87
0x78f6	    0x83bd2cfcffff	              cmp dword [rbp - 0x3d4], 0	      3843	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87
0x78fd	     0xf8560020000	                           jne 0x4007ba3	      3843	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87
0x7903	    0xc785fcfcffff	              mov dword [rbp - 0x304], 4	      3845	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87
0x790d	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3848	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88
0x7914	    0x8b8038020000	           mov eax, dword [rax + 0x238] 	      3848	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88
0x791a	            0x85c0	                           test eax, eax	      3848	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88
0x791c	            0x7515	                           jne 0x4007973	      3848	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88
0x791e	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3848	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88
0x7925	    0x8b803c020000	           mov eax, dword [rax + 0x23c] 	      3848	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88
0x792b	            0x85c0	                           test eax, eax	      3848	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88
0x792d	     0xf8430020000	                            je 0x4007ba3	      3848	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88
0x7933	    0x8b95dcfbffff	            mov edx, dword [rbp - 0x424]	      3851	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88
0x7939	    0x8b85c4fcffff	            mov eax, dword [rbp - 0x33c]	      3851	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88
0x793f	             0x1d0	                            add eax, edx	      3851	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88
0x7941	    0x3b8524fcffff	            cmp eax, dword [rbp - 0x3dc]	      3849	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88
0x7947	            0x741d	                            je 0x40079a6	      3849	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88
0x7949	    0x488b05000000	            mov rax, qword [0x04007990] 	      3853	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	CALL_61
0x7950	      0xbe6e000000	                           mov esi, 0x6e	      3853	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	CALL_61
0x7955	          0x4889c7	                            mov rdi, rax	      3853	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	CALL_61
0x7958	      0xe800000000	                          call 0x400799d	      3853	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	CALL_61
0x795d	          0x4885c0	                           test rax, rax	      3853	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	CALL_61
0x7960	     0xf85fd010000	                           jne 0x4007ba3	      3853	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	CALL_61
0x7966	    0x8b95dcfbffff	            mov edx, dword [rbp - 0x424]	      3858	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89
0x796c	    0x8b85c4fcffff	            mov eax, dword [rbp - 0x33c]	      3858	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89
0x7972	             0x1d0	                            add eax, edx	      3858	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89
0x7974	    0x3b8524fcffff	            cmp eax, dword [rbp - 0x3dc]	      3856	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89
0x797a	     0xf8573010000	                           jne 0x4007b33	      3856	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89
0x7980	    0x48c78500feff	              mov qword [rbp - 0x200], 0	      3863	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89
0x798b	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3865	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_90
0x7992	    0x8b8038020000	           mov eax, dword [rax + 0x238] 	      3865	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_90
0x7998	            0x85c0	                           test eax, eax	      3865	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_90
0x799a	            0x7421	                            je 0x40079fd	      3865	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_90
0x799c	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3865	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_90
0x79a3	    0x8b803c020000	           mov eax, dword [rax + 0x23c] 	      3865	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_90
0x79a9	            0x85c0	                           test eax, eax	      3865	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_90
0x79ab	            0x7510	                           jne 0x40079fd	      3865	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_90
0x79ad	    0x488b85e0fbff	            mov rax, qword [rbp - 0x420]	      3867	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_90
0x79b4	    0x488985f8fdff	            mov qword [rbp - 0x208], rax	      3867	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_90
0x79bb	            0xeb79	                           jmp 0x4007a76	      3867	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_90
0x79bd	    0x488b95e0fbff	            mov rdx, qword [rbp - 0x420]	      3871	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	ELSE_26	CALL_63
0x79c4	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3871	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	ELSE_26	CALL_63
0x79cb	          0x4889d6	                            mov rsi, rdx	      3871	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	ELSE_26	CALL_63
0x79ce	          0x4889c7	                            mov rdi, rax	      3871	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	ELSE_26	CALL_63
0x79d1	      0xe800000000	                          call 0x4007a16	      3871	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	ELSE_26	CALL_63
0x79d6	          0x4889c2	                            mov rdx, rax	      3871	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	ELSE_26	CALL_63
0x79d9	          0x4889d0	                            mov rax, rdx	      3871	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	ELSE_26	CALL_63
0x79dc	        0x48c1f83f	                           sar rax, 0x3f	      3871	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	ELSE_26	CALL_63
0x79e0	          0x4831c2	                            xor rdx, rax	      3871	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	ELSE_26	CALL_63
0x79e3	    0x488995f8fdff	            mov qword [rbp - 0x208], rdx	      3871	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	ELSE_26	CALL_63
0x79ea	    0x482985f8fdff	            sub qword [rbp - 0x208], rax	      3871	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	ELSE_26	CALL_63
0x79f1	    0x4883bdf8fdff	              cmp qword [rbp - 0x208], 0	      3872	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	ELSE_26	IF_91
0x79f9	            0x753b	                           jne 0x4007a76	      3872	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	ELSE_26	IF_91
0x79fb	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3872	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	ELSE_26	IF_91
0x7a02	    0x8b8038020000	           mov eax, dword [rax + 0x238] 	      3872	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	ELSE_26	IF_91
0x7a08	            0x85c0	                           test eax, eax	      3872	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	ELSE_26	IF_91
0x7a0a	            0x742a	                            je 0x4007a76	      3872	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	ELSE_26	IF_91
0x7a0c	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3872	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	ELSE_26	IF_91
0x7a13	    0x8b803c020000	           mov eax, dword [rax + 0x23c] 	      3872	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	ELSE_26	IF_91
0x7a19	            0x85c0	                           test eax, eax	      3872	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	ELSE_26	IF_91
0x7a1b	            0x7419	                            je 0x4007a76	      3872	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	ELSE_26	IF_91
0x7a1d	    0x488b85e0fbff	            mov rax, qword [rbp - 0x420]	      3875	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	ELSE_26	IF_91
0x7a24	    0x488985f8fdff	            mov qword [rbp - 0x208], rax	      3875	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	ELSE_26	IF_91
0x7a2b	    0x48c78500feff	              mov qword [rbp - 0x200], 0	      3876	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	ELSE_26	IF_91
0x7a36	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3880	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	CALL_64
0x7a3d	          0x4889c7	                            mov rdi, rax	      3880	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	CALL_64
0x7a40	      0xe800000000	                          call 0x4007a85	      3880	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	CALL_64
0x7a45	            0x89c7	                            mov edi, eax	      3880	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	CALL_64
0x7a47	    0x488b95f8fdff	            mov rdx, qword [rbp - 0x208]	      3880	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	CALL_64
0x7a4e	    0x488bb500feff	            mov rsi, qword [rbp - 0x200]	      3880	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	CALL_64
0x7a55	    0x488d8590feff	                  lea rax, [rbp - 0x170]	      3880	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	CALL_64
0x7a5c	          0x4889d1	                            mov rcx, rdx	      3880	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	CALL_64
0x7a5f	            0x89fa	                            mov edx, edi	      3880	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	CALL_64
0x7a61	          0x4889c7	                            mov rdi, rax	      3880	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	CALL_64
0x7a64	      0xb800000000	                              mov eax, 0	      3880	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	CALL_64
0x7a69	      0xe800000000	                          call 0x4007aae	      3880	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	CALL_64
0x7a6e	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3882	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_92
0x7a75	    0x8b8098000000	            mov eax, dword [rax + 0x98] 	      3882	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_92
0x7a7b	            0x85c0	                           test eax, eax	      3882	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_92
0x7a7d	            0x7e3a	                           jle 0x4007af9	      3882	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_92
0x7a7f	    0x488d8590feff	                  lea rax, [rbp - 0x170]	      3883	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_92	FOR_2
0x7a86	    0x48898580fdff	            mov qword [rbp - 0x280], rax	      3883	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_92	FOR_2
0x7a8d	            0xeb1c	                           jmp 0x4007aeb	      3883	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_92	FOR_2
0x7a8f	    0x488b8580fdff	            mov rax, qword [rbp - 0x280]	      3884	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_92	FOR_2
0x7a96	          0xc6002d	                    mov byte [rax], 0x2d	      3884	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_92	FOR_2
0x7a99	    0x488b8580fdff	            mov rax, qword [rbp - 0x280]	      3883	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_92	FOR_2
0x7aa0	        0x4883c001	                              add rax, 1	      3883	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_92	FOR_2
0x7aa4	    0x48898580fdff	            mov qword [rbp - 0x280], rax	      3883	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_92	FOR_2
0x7aab	    0x488b8580fdff	            mov rax, qword [rbp - 0x280]	      3883	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_92	FOR_2
0x7ab2	           0xfb600	                   movzx eax, byte [rax]	      3883	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_92	FOR_2
0x7ab5	            0x3c20	                            cmp al, 0x20	      3883	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_92	FOR_2
0x7ab7	            0x74d6	                            je 0x4007acf	      3883	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_92	FOR_2
0x7ab9	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3886	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_93
0x7ac0	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      3886	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_93
0x7ac6	            0x85c0	                           test eax, eax	      3886	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_93
0x7ac8	            0x740f	                            je 0x4007b19	      3886	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	IF_93
0x7aca	    0x488d8590feff	                  lea rax, [rbp - 0x170]	      3887	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	CALL_66
0x7ad1	          0x4889c7	                            mov rdi, rax	      3887	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	CALL_66
0x7ad4	      0xe800000000	                          call 0x4007b19	      3887	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89	CALL_66
0x7ad9	    0x488d8590feff	                  lea rax, [rbp - 0x170]	      3889	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89
0x7ae0	    0x48898580fdff	            mov qword [rbp - 0x280], rax	      3889	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89
0x7ae7	    0xc78530fcffff	              mov dword [rbp - 0x3d0], 0	      3890	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89
0x7af1	            0xeb0a	                           jmp 0x4007b3d	      3890	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_89
0x7af3	    0xc78530fcffff	          mov dword [rbp - 0x3d0], 0x20 	      3893	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	ELSE_27
0x7afd	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3894	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	CALL_67
0x7b04	          0x4889c7	                            mov rdi, rax	      3894	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	CALL_67
0x7b07	      0xe800000000	                          call 0x4007b4c	      3894	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	CALL_67
0x7b0c	          0x83c001	                              add eax, 1	      3894	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	CALL_67
0x7b0f	    0x89852cfcffff	            mov dword [rbp - 0x3d4], eax	      3894	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	CALL_67
0x7b15	    0x8b0500000000	            mov eax, dword [0x04007b5b] 	      3895	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	CALL_68
0x7b1b	    0x89856cfcffff	            mov dword [rbp - 0x394], eax	      3895	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	CALL_68
0x7b21	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3901	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_94
0x7b28	    0x8b8070020000	           mov eax, dword [rax + 0x270] 	      3901	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_94
0x7b2e	            0x85c0	                           test eax, eax	      3901	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_94
0x7b30	            0x7511	                           jne 0x4007b83	      3901	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_94
0x7b32	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3901	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_94
0x7b39	    0x8b803c020000	           mov eax, dword [rax + 0x23c] 	      3901	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_94
0x7b3f	            0x85c0	                           test eax, eax	      3901	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_94
0x7b41	            0x7420	                            je 0x4007ba3	      3901	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_94
0x7b43	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3902	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_94
0x7b4a	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3902	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_94
0x7b4e	    0x483b85e0fbff	            cmp rax, qword [rbp - 0x420]	      3902	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_94
0x7b55	            0x750c	                           jne 0x4007ba3	      3902	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	IF_94
0x7b57	    0x8b0500000000	            mov eax, dword [0x04007b9d] 	      3903	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	CALL_69
0x7b5d	    0x89856cfcffff	            mov dword [rbp - 0x394], eax	      3903	screen.c	FUNCTION_28	FOR_1	IF_74	IF_87	IF_88	CALL_69
0x7b63	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3909	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x7b6a	    0x8b8048050000	           mov eax, dword [rax + 0x548] 	      3909	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x7b70	            0x85c0	                           test eax, eax	      3909	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x7b72	            0x742c	                            je 0x4007be0	      3909	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x7b74	    0x83bdfcfcffff	              cmp dword [rbp - 0x304], 4	      3909	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x7b7b	            0x7523	                           jne 0x4007be0	      3909	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x7b7d	    0x83bd2cfcffff	              cmp dword [rbp - 0x3d4], 0	      3910	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x7b84	            0x751a	                           jne 0x4007be0	      3910	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x7b86	    0x488b05000000	            mov rax, qword [0x04007bcd] 	      3910	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x7b8d	           0xfb600	                   movzx eax, byte [rax]	      3910	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x7b90	            0x84c0	                             test al, al	      3910	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x7b92	            0x740c	                            je 0x4007be0	      3910	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x7b94	    0xc785fcfcffff	              mov dword [rbp - 0x304], 5	      3912	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x7b9e	            0xeb2d	                           jmp 0x4007c0d	      3912	screen.c	FUNCTION_28	FOR_1	IF_74	IF_95
0x7ba0	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3913	screen.c	FUNCTION_28	FOR_1	IF_74	ELSE_28	IF_96
0x7ba7	    0x8b8048050000	           mov eax, dword [rax + 0x548] 	      3913	screen.c	FUNCTION_28	FOR_1	IF_74	ELSE_28	IF_96
0x7bad	            0x85c0	                           test eax, eax	      3913	screen.c	FUNCTION_28	FOR_1	IF_74	ELSE_28	IF_96
0x7baf	            0x741c	                            je 0x4007c0d	      3913	screen.c	FUNCTION_28	FOR_1	IF_74	ELSE_28	IF_96
0x7bb1	    0x83bdfcfcffff	              cmp dword [rbp - 0x304], 6	      3913	screen.c	FUNCTION_28	FOR_1	IF_74	ELSE_28	IF_96
0x7bb8	            0x7513	                           jne 0x4007c0d	      3913	screen.c	FUNCTION_28	FOR_1	IF_74	ELSE_28	IF_96
0x7bba	    0x83bd2cfcffff	              cmp dword [rbp - 0x3d4], 0	      3913	screen.c	FUNCTION_28	FOR_1	IF_74	ELSE_28	IF_96
0x7bc1	            0x750a	                           jne 0x4007c0d	      3913	screen.c	FUNCTION_28	FOR_1	IF_74	ELSE_28	IF_96
0x7bc3	    0xc785fcfcffff	              mov dword [rbp - 0x304], 4	      3915	screen.c	FUNCTION_28	FOR_1	IF_74	ELSE_28	IF_96
0x7bcd	    0x83bdfcfcffff	              cmp dword [rbp - 0x304], 4	      3918	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97
0x7bd4	     0xf8540010000	                           jne 0x4007d5a	      3918	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97
0x7bda	    0x83bd2cfcffff	              cmp dword [rbp - 0x3d4], 0	      3918	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97
0x7be1	     0xf8533010000	                           jne 0x4007d5a	      3918	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97
0x7be7	    0xc785fcfcffff	              mov dword [rbp - 0x304], 5	      3920	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97
0x7bf1	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3922	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98
0x7bf8	    0x8b80b4010000	           mov eax, dword [rax + 0x1b4] 	      3922	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98
0x7bfe	            0x85c0	                           test eax, eax	      3922	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98
0x7c00	     0xf8414010000	                            je 0x4007d5a	      3922	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98
0x7c06	    0x83bd2cfcffff	              cmp dword [rbp - 0x3d4], 0	      3922	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98
0x7c0d	     0xf8507010000	                           jne 0x4007d5a	      3922	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98
0x7c13	    0x8b8524fcffff	            mov eax, dword [rbp - 0x3dc]	      3923	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98
0x7c19	    0x3b85dcfbffff	            cmp eax, dword [rbp - 0x424]	      3923	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98
0x7c1f	            0x750d	                           jne 0x4007c6e	      3923	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98
0x7c21	    0x83bdd4fcffff	              cmp dword [rbp - 0x32c], 0	      3923	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98
0x7c28	     0xf84ec000000	                            je 0x4007d5a	      3923	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98
0x7c2e	    0x83bdc4fcffff	              cmp dword [rbp - 0x33c], 0	      3925	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98
0x7c35	     0xf85df000000	                           jne 0x4007d5a	      3925	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98
0x7c3b	    0xc7856cfcffff	              mov dword [rbp - 0x394], 0	      3929	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98
0x7c45	    0x83bdccfcffff	              cmp dword [rbp - 0x334], 0	      3931	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_99
0x7c4c	            0x7455	                            je 0x4007ce3	      3931	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_99
0x7c4e	    0x8b85ccfcffff	            mov eax, dword [rbp - 0x334]	      3933	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_99	CALL_70
0x7c54	            0x4898	                                    cdqe	      3933	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_99	CALL_70
0x7c56	    0x8b0485000000	                  mov eax, dword [rax*4]	      3933	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_99	CALL_70
0x7c5d	    0x89856cfcffff	            mov dword [rbp - 0x394], eax	      3933	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_99	CALL_70
0x7c63	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3935	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_99	IF_100
0x7c6a	    0x8b8070020000	           mov eax, dword [rax + 0x270] 	      3935	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_99	IF_100
0x7c70	            0x85c0	                           test eax, eax	      3935	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_99	IF_100
0x7c72	            0x742f	                            je 0x4007ce3	      3935	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_99	IF_100
0x7c74	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3935	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_99	IF_100
0x7c7b	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3935	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_99	IF_100
0x7c7f	    0x483b85e0fbff	            cmp rax, qword [rbp - 0x420]	      3935	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_99	IF_100
0x7c86	            0x751b	                           jne 0x4007ce3	      3935	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_99	IF_100
0x7c88	    0x8b1500000000	            mov edx, dword [0x04007cce] 	      3936	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_99	IF_100	CALL_71
0x7c8e	    0x8b856cfcffff	            mov eax, dword [rbp - 0x394]	      3936	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_99	IF_100	CALL_71
0x7c94	            0x89d6	                            mov esi, edx	      3936	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_99	IF_100	CALL_71
0x7c96	            0x89c7	                            mov edi, eax	      3936	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_99	IF_100	CALL_71
0x7c98	      0xe800000000	                          call 0x4007cdd	      3936	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_99	IF_100	CALL_71
0x7c9d	    0x89856cfcffff	            mov dword [rbp - 0x394], eax	      3936	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_99	IF_100	CALL_71
0x7ca3	    0x48c78580fdff	              mov qword [rbp - 0x280], 0	      3941	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98
0x7cae	    0xc78530fcffff	          mov dword [rbp - 0x3d0], 0x20 	      3942	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98
0x7cb8	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3943	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	CALL_73
0x7cbf	        0x488b4008	                mov rax, qword [rax + 8]	      3943	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	CALL_73
0x7cc3	    0x488b8de0fbff	            mov rcx, qword [rbp - 0x420]	      3943	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	CALL_73
0x7cca	      0xba00000000	                              mov edx, 0	      3943	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	CALL_73
0x7ccf	          0x4889ce	                            mov rsi, rcx	      3943	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	CALL_73
0x7cd2	          0x4889c7	                            mov rdi, rax	      3943	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	CALL_73
0x7cd5	      0xe800000000	                          call 0x4007d1a	      3943	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	CALL_73
0x7cda	          0x4889c2	                            mov rdx, rax	      3943	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	CALL_73
0x7cdd	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3943	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	CALL_73
0x7ce4	          0x4889d6	                            mov rsi, rdx	      3943	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	CALL_73
0x7ce7	          0x4889c7	                            mov rdi, rax	      3943	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	CALL_73
0x7cea	      0xe800000000	                          call 0x4007d2f	      3943	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	CALL_73
0x7cef	    0x89852cfcffff	            mov dword [rbp - 0x3d4], eax	      3943	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	CALL_73
0x7cf5	    0x8b8504fcffff	            mov eax, dword [rbp - 0x3fc]	      3947	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_101
0x7cfb	            0x4898	                                    cdqe	      3947	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_101
0x7cfd	    0x483b8590fdff	            cmp rax, qword [rbp - 0x270]	      3947	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_101
0x7d04	            0x7514	                           jne 0x4007d5a	      3947	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_101
0x7d06	    0x8b9504fcffff	            mov edx, dword [rbp - 0x3fc]	      3948	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_101
0x7d0c	    0x8b852cfcffff	            mov eax, dword [rbp - 0x3d4]	      3948	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_101
0x7d12	             0x1d0	                            add eax, edx	      3948	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_101
0x7d14	    0x898504fcffff	            mov dword [rbp - 0x3fc], eax	      3948	screen.c	FUNCTION_28	FOR_1	IF_74	IF_97	IF_98	IF_101
0x7d1a	    0x83bdfcfcffff	              cmp dword [rbp - 0x304], 5	      3954	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102
0x7d21	     0xf8597010000	                           jne 0x4007efe	      3954	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102
0x7d27	    0x83bd2cfcffff	              cmp dword [rbp - 0x3d4], 0	      3954	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102
0x7d2e	     0xf858a010000	                           jne 0x4007efe	      3954	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102
0x7d34	    0xc785fcfcffff	              mov dword [rbp - 0x304], 6	      3956	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102
0x7d3e	    0x83bdc8fcffff	              cmp dword [rbp - 0x338], 0	      3958	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_103
0x7d45	            0x7e71	                           jle 0x4007df8	      3958	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_103
0x7d47	    0x8b0500000000	            mov eax, dword [0x04007d8d] 	      3961	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_103	IF_104	CALL_75
0x7d4d	            0x89c7	                            mov edi, eax	      3961	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_103	IF_104	CALL_75
0x7d4f	      0xe800000000	                          call 0x4007d94	      3961	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_103	IF_104	CALL_75
0x7d54	          0x83f801	                              cmp eax, 1	      3961	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_103	IF_104	CALL_75
0x7d57	            0x7e0c	                           jle 0x4007da5	      3961	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_103	IF_104	CALL_75
0x7d59	    0xc78530fcffff	          mov dword [rbp - 0x3d0], 0x2d 	      3962	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_103	IF_104
0x7d63	            0xeb0c	                           jmp 0x4007db1	      3962	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_103	IF_104
0x7d65	    0x8b0500000000	            mov eax, dword [0x04007dab] 	      3964	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_103	ELSE_29
0x7d6b	    0x898530fcffff	            mov dword [rbp - 0x3d0], eax	      3964	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_103	ELSE_29
0x7d71	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3966	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_103	IF_105
0x7d78	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      3966	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_103	IF_105
0x7d7e	            0x85c0	                           test eax, eax	      3966	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_103	IF_105
0x7d80	            0x7411	                            je 0x4007dd3	      3966	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_103	IF_105
0x7d82	    0x8b851cfcffff	            mov eax, dword [rbp - 0x3e4]	      3967	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_103	IF_105
0x7d88	          0x83c001	                              add eax, 1	      3967	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_103	IF_105
0x7d8b	    0x89852cfcffff	            mov dword [rbp - 0x3d4], eax	      3967	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_103	IF_105
0x7d91	            0xeb19	                           jmp 0x4007dec	      3967	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_103	IF_105
0x7d93	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3970	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_103	ELSE_30
0x7d9a	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      3970	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_103	ELSE_30
0x7da0	    0x2b851cfcffff	            sub eax, dword [rbp - 0x3e4]	      3970	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_103	ELSE_30
0x7da6	    0x89852cfcffff	            mov dword [rbp - 0x3d4], eax	      3970	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_103	ELSE_30
0x7dac	    0x8b0500000000	            mov eax, dword [0x04007df2] 	      3971	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_103	CALL_76
0x7db2	    0x89856cfcffff	            mov dword [rbp - 0x394], eax	      3971	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_103	CALL_76
0x7db8	    0x488b05000000	            mov rax, qword [0x04007dff] 	      3975	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106
0x7dbf	           0xfb600	                   movzx eax, byte [rax]	      3975	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106
0x7dc2	            0x84c0	                             test al, al	      3975	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106
0x7dc4	     0xf84f4000000	                            je 0x4007efe	      3975	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106
0x7dca	    0x83bdd4fcffff	              cmp dword [rbp - 0x32c], 0	      3975	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106
0x7dd1	     0xf84e7000000	                            je 0x4007efe	      3975	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106
0x7dd7	    0x488b05000000	            mov rax, qword [0x04007e1e] 	      3978	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106
0x7dde	    0x48898580fdff	            mov qword [rbp - 0x280], rax	      3978	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106
0x7de5	    0xc78530fcffff	              mov dword [rbp - 0x3d0], 0	      3979	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106
0x7def	    0x488b05000000	            mov rax, qword [0x04007e36] 	      3980	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	CALL_77
0x7df6	          0x4889c7	                            mov rdi, rax	      3980	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	CALL_77
0x7df9	      0xe800000000	                          call 0x4007e3e	      3980	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	CALL_77
0x7dfe	    0x89852cfcffff	            mov dword [rbp - 0x3d4], eax	      3980	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	CALL_77
0x7e04	    0x8b0500000000	            mov eax, dword [0x04007e4a] 	      3981	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	CALL_78
0x7e0a	    0x89856cfcffff	            mov dword [rbp - 0x394], eax	      3981	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	CALL_78
0x7e10	    0xc785d4fcffff	              mov dword [rbp - 0x32c], 0	      3982	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106
0x7e1a	    0x8b0500000000	            mov eax, dword [0x04007e60] 	      3983	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	CALL_79
0x7e20	            0x85c0	                           test eax, eax	      3983	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	CALL_79
0x7e22	            0x7413	                            je 0x4007e77	      3983	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	CALL_79
0x7e24	    0x488b05000000	            mov rax, qword [0x04007e6b] 	      3983	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	CALL_79
0x7e2b	          0x4889c7	                            mov rdi, rax	      3983	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	CALL_79
0x7e2e	      0xe800000000	                          call 0x4007e73	      3983	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	CALL_79
0x7e33	            0x4898	                                    cdqe	      3983	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	CALL_79
0x7e35	            0xeb11	                           jmp 0x4007e88	      3983	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	CALL_79
0x7e37	    0x488b05000000	            mov rax, qword [0x04007e7e] 	      3983	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	CALL_79
0x7e3e	          0x4889c7	                            mov rdi, rax	      3983	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	CALL_79
0x7e41	      0xe800000000	                          call 0x4007e86	      3983	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	CALL_79
0x7e46	            0x4898	                                    cdqe	      3983	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	CALL_79
0x7e48	    0x488b9590fdff	            mov rdx, qword [rbp - 0x270]	      3983	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	CALL_79
0x7e4f	          0x4801d0	                            add rax, rdx	      3983	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	CALL_79
0x7e52	    0x48898598fdff	            mov qword [rbp - 0x268], rax	      3983	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	CALL_79
0x7e59	    0x8b8504fcffff	            mov eax, dword [rbp - 0x3fc]	      3986	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	IF_107
0x7e5f	            0x4898	                                    cdqe	      3986	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	IF_107
0x7e61	    0x483b8590fdff	            cmp rax, qword [rbp - 0x270]	      3986	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	IF_107
0x7e68	            0x7514	                           jne 0x4007ebe	      3986	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	IF_107
0x7e6a	    0x8b9504fcffff	            mov edx, dword [rbp - 0x3fc]	      3987	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	IF_107
0x7e70	    0x8b852cfcffff	            mov eax, dword [rbp - 0x3d4]	      3987	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	IF_107
0x7e76	             0x1d0	                            add eax, edx	      3987	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	IF_107
0x7e78	    0x898504fcffff	            mov dword [rbp - 0x3fc], eax	      3987	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	IF_107
0x7e7e	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3990	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	IF_108
0x7e85	    0x8b8070020000	           mov eax, dword [rax + 0x270] 	      3990	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	IF_108
0x7e8b	            0x85c0	                           test eax, eax	      3990	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	IF_108
0x7e8d	            0x742f	                            je 0x4007efe	      3990	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	IF_108
0x7e8f	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      3990	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	IF_108
0x7e96	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3990	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	IF_108
0x7e9a	    0x483b85e0fbff	            cmp rax, qword [rbp - 0x420]	      3990	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	IF_108
0x7ea1	            0x751b	                           jne 0x4007efe	      3990	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	IF_108
0x7ea3	    0x8b1500000000	            mov edx, dword [0x04007ee9] 	      3991	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	IF_108	CALL_80
0x7ea9	    0x8b856cfcffff	            mov eax, dword [rbp - 0x394]	      3991	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	IF_108	CALL_80
0x7eaf	            0x89d6	                            mov esi, edx	      3991	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	IF_108	CALL_80
0x7eb1	            0x89c7	                            mov edi, eax	      3991	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	IF_108	CALL_80
0x7eb3	      0xe800000000	                          call 0x4007ef8	      3991	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	IF_108	CALL_80
0x7eb8	    0x89856cfcffff	            mov dword [rbp - 0x394], eax	      3991	screen.c	FUNCTION_28	FOR_1	IF_74	IF_102	IF_106	IF_108	CALL_80
0x7ebe	    0x83bdfcfcffff	              cmp dword [rbp - 0x304], 6	      3999	screen.c	FUNCTION_28	FOR_1	IF_74	IF_109
0x7ec5	            0x755a	                           jne 0x4007f61	      3999	screen.c	FUNCTION_28	FOR_1	IF_74	IF_109
0x7ec7	    0x83bd2cfcffff	              cmp dword [rbp - 0x3d4], 0	      3999	screen.c	FUNCTION_28	FOR_1	IF_74	IF_109
0x7ece	            0x7551	                           jne 0x4007f61	      3999	screen.c	FUNCTION_28	FOR_1	IF_74	IF_109
0x7ed0	    0xc785fcfcffff	              mov dword [rbp - 0x304], 7	      4001	screen.c	FUNCTION_28	FOR_1	IF_74	IF_109
0x7eda	    0x83bd40fcffff	              cmp dword [rbp - 0x3c0], 0	      4002	screen.c	FUNCTION_28	FOR_1	IF_74	IF_109	IF_110
0x7ee1	            0x7434	                            je 0x4007f57	      4002	screen.c	FUNCTION_28	FOR_1	IF_74	IF_109	IF_110
0x7ee3	    0x8b8540fcffff	            mov eax, dword [rbp - 0x3c0]	      4005	screen.c	FUNCTION_28	FOR_1	IF_74	IF_109	IF_110
0x7ee9	    0x89852cfcffff	            mov dword [rbp - 0x3d4], eax	      4005	screen.c	FUNCTION_28	FOR_1	IF_74	IF_109	IF_110
0x7eef	    0x8b8544fcffff	            mov eax, dword [rbp - 0x3bc]	      4006	screen.c	FUNCTION_28	FOR_1	IF_74	IF_109	IF_110
0x7ef5	    0x898530fcffff	            mov dword [rbp - 0x3d0], eax	      4006	screen.c	FUNCTION_28	FOR_1	IF_74	IF_109	IF_110
0x7efb	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      4007	screen.c	FUNCTION_28	FOR_1	IF_74	IF_109	IF_110
0x7f02	    0x48898580fdff	            mov qword [rbp - 0x280], rax	      4007	screen.c	FUNCTION_28	FOR_1	IF_74	IF_109	IF_110
0x7f09	    0x8b8548fcffff	            mov eax, dword [rbp - 0x3b8]	      4008	screen.c	FUNCTION_28	FOR_1	IF_74	IF_109	IF_110
0x7f0f	    0x89856cfcffff	            mov dword [rbp - 0x394], eax	      4008	screen.c	FUNCTION_28	FOR_1	IF_74	IF_109	IF_110
0x7f15	            0xeb0a	                           jmp 0x4007f61	      4008	screen.c	FUNCTION_28	FOR_1	IF_74	IF_109	IF_110
0x7f17	    0xc7856cfcffff	              mov dword [rbp - 0x394], 0	      4011	screen.c	FUNCTION_28	FOR_1	IF_74	IF_109	ELSE_31
0x7f21	    0x8b0500000000	            mov eax, dword [0x04007f67] 	      4016	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111
0x7f27	            0x85c0	                           test eax, eax	      4016	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111
0x7f29	     0xf88e6000000	                            js 0x4008055	      4016	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111
0x7f2f	    0x488b05000000	            mov rax, qword [0x04007f76] 	      4016	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111
0x7f36	    0x483985e8fbff	           cmp qword [rbp - 0x418], rax 	      4016	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111
0x7f3d	     0xf85d2000000	                           jne 0x4008055	      4016	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111
0x7f43	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4017	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111
0x7f4a	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4017	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111
0x7f4e	    0x483b85e0fbff	            cmp rax, qword [rbp - 0x420]	      4017	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111
0x7f55	     0xf85ba000000	                           jne 0x4008055	      4017	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111
0x7f5b	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4017	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111
0x7f62	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	      4017	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111
0x7f68	            0x4898	                                    cdqe	      4017	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111
0x7f6a	    0x483b8590fdff	            cmp rax, qword [rbp - 0x270]	      4017	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111
0x7f71	     0xf8f9e000000	                            jg 0x4008055	      4017	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111
0x7f77	    0x83bdc8fcffff	              cmp dword [rbp - 0x338], 0	      4019	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111
0x7f7e	     0xf8f91000000	                            jg 0x4008055	      4019	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111
0x7f84	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4023	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111	CALL_82
0x7f8b	    0x8bb854020000	           mov edi, dword [rax + 0x254] 	      4023	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111	CALL_82
0x7f91	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4023	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111	CALL_82
0x7f98	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      4023	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111	CALL_82
0x7f9e	            0xf7d8	                                 neg eax	      4023	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111	CALL_82
0x7fa0	            0x89c1	                            mov ecx, eax	      4023	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111	CALL_82
0x7fa2	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4023	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111	CALL_82
0x7fa9	    0x8bb0a8000000	            mov esi, dword [rax + 0xa8] 	      4023	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111	CALL_82
0x7faf	    0x8b951cfcffff	            mov edx, dword [rbp - 0x3e4]	      4023	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111	CALL_82
0x7fb5	    0x8b8528fcffff	            mov eax, dword [rbp - 0x3d8]	      4023	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111	CALL_82
0x7fbb	          0x4189f8	                            mov r8d, edi	      4023	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111	CALL_82
0x7fbe	            0x89c7	                            mov edi, eax	      4023	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111	CALL_82
0x7fc0	      0xe800000000	                          call 0x4008005	      4023	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111	CALL_82
0x7fc5	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4028	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111	IF_112
0x7fcc	    0x8b806c020000	           mov eax, dword [rax + 0x26c] 	      4028	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111	IF_112
0x7fd2	            0x85c0	                           test eax, eax	      4028	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111	IF_112
0x7fd4	            0x7427	                            je 0x400803d	      4028	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111	IF_112
0x7fd6	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4029	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111	IF_112
0x7fdd	    0x8b90d4000000	            mov edx, dword [rax + 0xd4] 	      4029	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111	IF_112
0x7fe3	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4029	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111	IF_112
0x7fea	    0x8b80cc000000	            mov eax, dword [rax + 0xcc] 	      4029	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111	IF_112
0x7ff0	             0x1d0	                            add eax, edx	      4029	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111	IF_112
0x7ff2	    0x898524fcffff	            mov dword [rbp - 0x3dc], eax	      4029	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111	IF_112
0x7ff8	      0xe919400000	                           jmp 0x400c056	      4033	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111	ELSE_32
0x7ffd	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4032	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111	ELSE_32
0x8004	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      4032	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111	ELSE_32
0x800a	    0x898524fcffff	            mov dword [rbp - 0x3dc], eax	      4032	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111	ELSE_32
0x8010	      0xe901400000	                           jmp 0x400c056	      4033	screen.c	FUNCTION_28	FOR_1	ELSE_31	IF_111	ELSE_32
0x8015	    0x83bdfcfcffff	              cmp dword [rbp - 0x304], 7	      4036	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113
0x801c	     0xf8533080000	                           jne 0x4008895	      4036	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113
0x8022	    0x83bd74fcffff	              cmp dword [rbp - 0x38c], 0	      4036	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113
0x8029	     0xf8426080000	                            je 0x4008895	      4036	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113
0x802f	    0x8b8500fcffff	            mov eax, dword [rbp - 0x400]	      4039	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x8035	            0x4898	                                    cdqe	      4039	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x8037	    0x483b8590fdff	            cmp rax, qword [rbp - 0x270]	      4039	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x803e	            0x7473	                            je 0x40080f3	      4039	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x8040	    0x8b0500000000	            mov eax, dword [0x04008086] 	      4041	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x8046	            0x85c0	                           test eax, eax	      4041	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x8048	            0x7439	                            je 0x40080c3	      4041	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x804a	    0x488b8590fdff	            mov rax, qword [rbp - 0x270]	      4041	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x8051	        0x488d5001	                      lea rdx, [rax + 1]	      4041	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x8055	    0x8b8500fcffff	            mov eax, dword [rbp - 0x400]	      4041	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x805b	            0x4898	                                    cdqe	      4041	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x805d	          0x4839c2	                            cmp rdx, rax	      4041	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x8060	            0x7521	                           jne 0x40080c3	      4041	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x8062	    0x83bd2cfcffff	              cmp dword [rbp - 0x3d4], 0	      4041	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x8069	            0x7518	                           jne 0x40080c3	      4041	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x806b	    0x488b05000000	            mov rax, qword [0x040080b2] 	      4042	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x8072	    0x488b95b0fdff	            mov rdx, qword [rbp - 0x250]	      4042	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x8079	          0x4889d7	                            mov rdi, rdx	      4042	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x807c	            0xffd0	                                call rax	      4042	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x807e	          0x83f801	                              cmp eax, 1	      4042	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x8081	            0x7f30	                            jg 0x40080f3	      4042	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x8083	    0x488b85a0fdff	            mov rax, qword [rbp - 0x260]	      4044	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x808a	    0x3b8560fcffff	            cmp eax, dword [rbp - 0x3a0]	      4044	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x8090	            0x752f	                           jne 0x4008101	      4044	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x8092	    0x488b85a0fdff	            mov rax, qword [rbp - 0x260]	      4045	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x8099	    0x483b8590fdff	            cmp rax, qword [rbp - 0x270]	      4045	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x80a0	            0x7d1f	                           jge 0x4008101	      4045	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x80a2	    0x8b8504fcffff	            mov eax, dword [rbp - 0x3fc]	      4046	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x80a8	            0x4898	                                    cdqe	      4046	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x80aa	    0x483b8590fdff	            cmp rax, qword [rbp - 0x270]	      4046	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x80b1	            0x7e0e	                           jle 0x4008101	      4046	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x80b3	    0x8b8578fcffff	            mov eax, dword [rbp - 0x388]	      4047	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x80b9	    0x89857cfcffff	            mov dword [rbp - 0x384], eax	      4047	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x80bf	            0xeb47	                           jmp 0x4008148	      4047	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_114
0x80c1	    0x83bd7cfcffff	              cmp dword [rbp - 0x384], 0	      4048	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_33	IF_115
0x80c8	            0x743e	                            je 0x4008148	      4048	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_33	IF_115
0x80ca	    0x8b8504fcffff	            mov eax, dword [rbp - 0x3fc]	      4049	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_33	IF_115
0x80d0	            0x4898	                                    cdqe	      4049	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_33	IF_115
0x80d2	    0x483b8590fdff	            cmp rax, qword [rbp - 0x270]	      4049	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_33	IF_115
0x80d9	            0x7423	                            je 0x400813e	      4049	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_33	IF_115
0x80db	    0x83bd64fcffff	              cmp dword [rbp - 0x39c], 0	      4050	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_33	IF_115
0x80e2	            0x7424	                            je 0x4008148	      4050	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_33	IF_115
0x80e4	    0x488b8590fdff	            mov rax, qword [rbp - 0x270]	      4050	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_33	IF_115
0x80eb	            0x89c2	                            mov edx, eax	      4050	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_33	IF_115
0x80ed	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4050	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_33	IF_115
0x80f4	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	      4050	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_33	IF_115
0x80fa	            0x39c2	                            cmp edx, eax	      4050	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_33	IF_115
0x80fc	            0x750a	                           jne 0x4008148	      4050	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_33	IF_115
0x80fe	    0xc7857cfcffff	              mov dword [rbp - 0x384], 0	      4051	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_33	IF_115
0x8108	    0x83bd2cfcffff	              cmp dword [rbp - 0x3d4], 0	      4054	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116
0x810f	     0xf8581050000	                           jne 0x40086d6	      4054	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116
0x8115	    0x488b95b0fdff	            mov rdx, qword [rbp - 0x250]	      4064	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116
0x811c	    0x488b85a8fdff	            mov rax, qword [rbp - 0x258]	      4064	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116
0x8123	          0x4829c2	                            sub rdx, rax	      4064	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116
0x8126	          0x4889d0	                            mov rax, rdx	      4064	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116
0x8129	    0x488985d8fdff	            mov qword [rbp - 0x228], rax	      4064	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116
0x8130	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4065	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116
0x8137	    0x488b80501500	          mov rax, qword [rax + 0x1550] 	      4065	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116
0x813e	    0x488985e0fdff	            mov qword [rbp - 0x220], rax	      4065	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116
0x8145	    0xc785dcfcffff	              mov dword [rbp - 0x324], 0	      4066	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116
0x814f	      0xe9ff030000	                           jmp 0x4008593	      4067	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4
0x8154	    0x83bddcfcffff	              cmp dword [rbp - 0x324], 0	      4069	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_117
0x815b	            0x7539	                           jne 0x40081d6	      4069	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_117
0x815d	    0x4883bde0fdff	              cmp qword [rbp - 0x220], 0	      4070	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_117
0x8165	            0x740e	                            je 0x40081b5	      4070	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_117
0x8167	    0x488b85e0fdff	            mov rax, qword [rbp - 0x220]	      4071	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_117
0x816e	          0x8b400c	              mov eax, dword [rax + 0xc]	      4071	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_117
0x8171	            0x85c0	                           test eax, eax	      4071	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_117
0x8173	            0x7f0a	                            jg 0x40081bf	      4071	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_117
0x8175	    0x4883bde0fdff	              cmp qword [rbp - 0x220], 0	      4072	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_117
0x817d	            0x7517	                           jne 0x40081d6	      4072	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_117
0x817f	    0x48c785e8fdff	              mov qword [rbp - 0x218], 0	      4074	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_117
0x818a	    0xc785dcfcffff	              mov dword [rbp - 0x324], 1	      4075	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_117
0x8194	            0xeb14	                           jmp 0x40081ea	      4075	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_117
0x8196	    0x488b85e0fdff	            mov rax, qword [rbp - 0x220]	      4078	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	ELSE_34
0x819d	    0x480508020000	                          add rax, 0x208	      4078	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	ELSE_34
0x81a3	    0x488985e8fdff	            mov qword [rbp - 0x218], rax	      4078	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	ELSE_34
0x81aa	    0x4883bde0fdff	              cmp qword [rbp - 0x220], 0	      4079	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_118
0x81b2	            0x7411	                            je 0x4008205	      4079	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_118
0x81b4	    0x488b85e0fdff	            mov rax, qword [rbp - 0x220]	      4080	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_118
0x81bb	    0xc780f0010000	              mov dword [rax + 0x1f0], 0	      4080	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_118
0x81c5	    0xc785e0fcffff	              mov dword [rbp - 0x320], 1	      4081	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4
0x81cf	      0xe92a030000	                           jmp 0x400853e	      4082	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5
0x81d4	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      4085	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119
0x81db	    0x8b8070010000	           mov eax, dword [rax + 0x170] 	      4085	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119
0x81e1	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      4085	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119
0x81e6	     0xf8430010000	                            je 0x400835c	      4085	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119
0x81ec	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      4086	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119
0x81f3	    0x8b8070010000	           mov eax, dword [rax + 0x170] 	      4086	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119
0x81f9	            0x4898	                                    cdqe	      4086	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119
0x81fb	    0x483b85d8fdff	            cmp rax, qword [rbp - 0x228]	      4086	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119
0x8202	     0xf8f14010000	                            jg 0x400835c	      4086	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119
0x8208	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      4087	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119
0x820f	    0x8b8074010000	           mov eax, dword [rax + 0x174] 	      4087	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119
0x8215	            0x4898	                                    cdqe	      4087	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119
0x8217	    0x483b85d8fdff	            cmp rax, qword [rbp - 0x228]	      4087	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119
0x821e	     0xf8ef8000000	                           jle 0x400835c	      4087	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119
0x8224	    0x8b0500000000	            mov eax, dword [0x0400826a] 	      4090	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	CALL_84
0x822a	            0x85c0	                           test eax, eax	      4090	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	CALL_84
0x822c	            0x7417	                            je 0x4008285	      4090	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	CALL_84
0x822e	    0x488b05000000	            mov rax, qword [0x04008275] 	      4090	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	CALL_84
0x8235	    0x488b95b0fdff	            mov rdx, qword [rbp - 0x250]	      4090	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	CALL_84
0x823c	          0x4889d7	                            mov rdi, rdx	      4090	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	CALL_84
0x823f	            0xffd0	                                call rax	      4090	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	CALL_84
0x8241	            0x89c2	                            mov edx, eax	      4090	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	CALL_84
0x8243	            0xeb05	                           jmp 0x400828a	      4090	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	CALL_84
0x8245	      0xba01000000	                              mov edx, 1	      4090	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	CALL_84
0x824a	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      4090	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	CALL_84
0x8251	             0x1d0	                            add eax, edx	      4090	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	CALL_84
0x8253	    0x89856cfdffff	            mov dword [rbp - 0x294], eax	      4090	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	CALL_84
0x8259	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      4092	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	IF_120
0x8260	    0x8b8074010000	           mov eax, dword [rax + 0x174] 	      4092	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	IF_120
0x8266	    0x3b856cfdffff	            cmp eax, dword [rbp - 0x294]	      4092	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	IF_120
0x826c	            0x7d13	                           jge 0x40082c1	      4092	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	IF_120
0x826e	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      4093	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	IF_120
0x8275	    0x8b956cfdffff	            mov edx, dword [rbp - 0x294]	      4093	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	IF_120
0x827b	    0x899074010000	            mov dword [rax + 0x174], edx	      4093	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	IF_120
0x8281	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      4095	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119
0x8288	    0x8b9060010000	           mov edx, dword [rax + 0x160] 	      4095	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119
0x828e	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      4095	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119
0x8295	    0x899064010000	            mov dword [rax + 0x164], edx	      4095	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119
0x829b	    0x4883bde0fdff	              cmp qword [rbp - 0x220], 0	      4097	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	IF_121	CALL_85
0x82a3	            0x745c	                            je 0x4008341	      4097	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	IF_121	CALL_85
0x82a5	      0xbf00000000	                              mov edi, 0	      4097	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	IF_121	CALL_85
0x82aa	      0xe800000000	                          call 0x40082ef	      4097	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	IF_121	CALL_85
0x82af	            0x89c2	                            mov edx, eax	      4097	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	IF_121	CALL_85
0x82b1	    0x488b85e0fdff	            mov rax, qword [rbp - 0x220]	      4098	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	IF_121
0x82b8	          0x8b4018	            mov eax, dword [rax + 0x18] 	      4098	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	IF_121
0x82bb	            0x39c2	                            cmp edx, eax	      4097	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	IF_121	CALL_85
0x82bd	            0x7542	                           jne 0x4008341	      4097	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	IF_121	CALL_85
0x82bf	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      4101	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	IF_121
0x82c6	    0x8b8070010000	           mov eax, dword [rax + 0x170] 	      4101	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	IF_121
0x82cc	            0x4898	                                    cdqe	      4101	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	IF_121
0x82ce	    0x483b85d8fdff	            cmp rax, qword [rbp - 0x228]	      4101	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	IF_121
0x82d5	            0x7507	                           jne 0x400831e	      4101	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	IF_121
0x82d7	      0xb802000000	                              mov eax, 2	      4101	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	IF_121
0x82dc	            0xeb05	                           jmp 0x4008323	      4101	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	IF_121
0x82de	      0xb801000000	                              mov eax, 1	      4101	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	IF_121
0x82e3	    0x89851cfdffff	            mov dword [rbp - 0x2e4], eax	      4100	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	IF_121
0x82e9	    0x488b85e0fdff	            mov rax, qword [rbp - 0x220]	      4102	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	IF_121
0x82f0	    0x8b8098030000	           mov eax, dword [rax + 0x398] 	      4102	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	IF_121
0x82f6	    0x898518fdffff	            mov dword [rbp - 0x2e8], eax	      4102	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	IF_121
0x82fc	      0xe9fb010000	                           jmp 0x400853c	      4088	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119
0x8301	    0xc78518fdffff	              mov dword [rbp - 0x2e8], 0	      4105	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	ELSE_35
0x830b	    0x8b8518fdffff	            mov eax, dword [rbp - 0x2e8]	      4105	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	ELSE_35
0x8311	    0x89851cfdffff	            mov dword [rbp - 0x2e4], eax	      4105	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119	ELSE_35
0x8317	      0xe9e0010000	                           jmp 0x400853c	      4088	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	IF_119
0x831c	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      4108	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122
0x8323	    0x8b8074010000	           mov eax, dword [rax + 0x174] 	      4108	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122
0x8329	            0x4898	                                    cdqe	      4108	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122
0x832b	    0x483b85d8fdff	            cmp rax, qword [rbp - 0x228]	      4108	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122
0x8332	     0xf85f2010000	                           jne 0x400856a	      4108	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122
0x8338	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      4110	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122
0x833f	    0xc78064010000	              mov dword [rax + 0x164], 0	      4110	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122
0x8349	    0x4881bde8fdff	              cmp qword [rbp - 0x218], 0	      4111	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	CALL_86
0x8354	            0x7409	                            je 0x400839f	      4111	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	CALL_86
0x8356	    0x488b8de0fdff	            mov rcx, qword [rbp - 0x220]	      4111	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	CALL_86
0x835d	            0xeb05	                           jmp 0x40083a4	      4111	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	CALL_86
0x835f	      0xb900000000	                              mov ecx, 0	      4111	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	CALL_86
0x8364	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      4111	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	CALL_86
0x836b	            0x89c7	                            mov edi, eax	      4111	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	CALL_86
0x836d	    0x488b95e0fbff	            mov rdx, qword [rbp - 0x420]	      4111	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	CALL_86
0x8374	    0x488bb5e8fdff	            mov rsi, qword [rbp - 0x218]	      4111	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	CALL_86
0x837b	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4111	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	CALL_86
0x8382	          0x4989c8	                             mov r8, rcx	      4111	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	CALL_86
0x8385	            0x89f9	                            mov ecx, edi	      4111	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	CALL_86
0x8387	          0x4889c7	                            mov rdi, rax	      4111	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	CALL_86
0x838a	      0xe8d3770000	                 call sym.next_search_hl	      4111	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	CALL_86
0x838f	    0x4883bde0fdff	              cmp qword [rbp - 0x220], 0	      4114	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122
0x8397	            0x7418	                            je 0x40083f1	      4114	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122
0x8399	    0x488b85e0fdff	            mov rax, qword [rbp - 0x220]	      4113	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122
0x83a0	    0x8b80f0010000	           mov eax, dword [rax + 0x1f0] 	      4113	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122
0x83a6	            0x85c0	                           test eax, eax	      4114	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122
0x83a8	            0x7407	                            je 0x40083f1	      4114	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122
0x83aa	      0xb801000000	                              mov eax, 1	      4114	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122
0x83af	            0xeb05	                           jmp 0x40083f6	      4114	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122
0x83b1	      0xb800000000	                              mov eax, 0	      4114	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122
0x83b6	    0x8985e0fcffff	            mov dword [rbp - 0x320], eax	      4113	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122
0x83bc	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4118	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	CALL_87
0x83c3	        0x488b4008	                mov rax, qword [rax + 8]	      4118	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	CALL_87
0x83c7	    0x488b8de0fbff	            mov rcx, qword [rbp - 0x420]	      4118	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	CALL_87
0x83ce	      0xba00000000	                              mov edx, 0	      4118	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	CALL_87
0x83d3	          0x4889ce	                            mov rsi, rcx	      4118	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	CALL_87
0x83d6	          0x4889c7	                            mov rdi, rax	      4118	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	CALL_87
0x83d9	      0xe800000000	                          call 0x400841e	      4118	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	CALL_87
0x83de	    0x488985a8fdff	            mov qword [rbp - 0x258], rax	      4118	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	CALL_87
0x83e5	    0x488b95d8fdff	            mov rdx, qword [rbp - 0x228]	      4119	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122
0x83ec	    0x488b85a8fdff	            mov rax, qword [rbp - 0x258]	      4119	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122
0x83f3	          0x4801d0	                            add rax, rdx	      4119	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122
0x83f6	    0x488985b0fdff	            mov qword [rbp - 0x250], rax	      4119	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122
0x83fd	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      4121	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123
0x8404	    0x488b80580100	           mov rax, qword [rax + 0x158] 	      4121	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123
0x840b	    0x483b85e0fbff	            cmp rax, qword [rbp - 0x420]	      4121	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123
0x8412	     0xf8512010000	                           jne 0x400856a	      4121	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123
0x8418	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      4123	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123
0x841f	          0x8b5010	            mov edx, dword [rax + 0x10] 	      4123	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123
0x8422	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      4123	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123
0x8429	    0x899070010000	            mov dword [rax + 0x170], edx	      4123	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123
0x842f	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      4124	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	IF_124
0x8436	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	      4124	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	IF_124
0x843d	          0x4885c0	                           test rax, rax	      4124	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	IF_124
0x8440	            0x751c	                           jne 0x400849e	      4124	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	IF_124
0x8442	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      4125	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	IF_124
0x8449	    0x8b90b0000000	            mov edx, dword [rax + 0xb0] 	      4125	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	IF_124
0x844f	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      4125	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	IF_124
0x8456	    0x899074010000	            mov dword [rax + 0x174], edx	      4125	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	IF_124
0x845c	            0xeb11	                           jmp 0x40084af	      4125	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	IF_124
0x845e	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      4127	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37
0x8465	    0xc78074010000	    mov dword [rax + 0x174], 0x7fffffff 	      4127	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37
0x846f	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      4129	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37	IF_125
0x8476	    0x8b9070010000	           mov edx, dword [rax + 0x170] 	      4129	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37	IF_125
0x847c	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      4129	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37	IF_125
0x8483	    0x8b8074010000	           mov eax, dword [rax + 0x174] 	      4129	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37	IF_125
0x8489	            0x39c2	                            cmp edx, eax	      4129	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37	IF_125
0x848b	            0x7571	                           jne 0x400853e	      4129	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37	IF_125
0x848d	    0x8b0500000000	            mov eax, dword [0x040084d3] 	      4134	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37	IF_125	IF_126
0x8493	            0x85c0	                           test eax, eax	      4134	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37	IF_125	IF_126
0x8495	            0x7446	                            je 0x400851d	      4134	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37	IF_125	IF_126
0x8497	    0x488b05000000	            mov rax, qword [0x040084de] 	      4135	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37	IF_125	IF_126
0x849e	    0x488b95e8fdff	            mov rdx, qword [rbp - 0x218]	      4136	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37	IF_125	IF_126
0x84a5	    0x8b9274010000	           mov edx, dword [rdx + 0x174] 	      4136	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37	IF_125	IF_126
0x84ab	          0x4863ca	                         movsxd rcx, edx	      4135	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37	IF_125	IF_126
0x84ae	    0x488b95a8fdff	            mov rdx, qword [rbp - 0x258]	      4135	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37	IF_125	IF_126
0x84b5	          0x4801ca	                            add rdx, rcx	      4135	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37	IF_125	IF_126
0x84b8	          0x4889d7	                            mov rdi, rdx	      4135	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37	IF_125	IF_126
0x84bb	            0xffd0	                                call rax	      4135	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37	IF_125	IF_126
0x84bd	            0x89c2	                            mov edx, eax	      4135	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37	IF_125	IF_126
0x84bf	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      4135	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37	IF_125	IF_126
0x84c6	    0x8b8074010000	           mov eax, dword [rax + 0x174] 	      4135	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37	IF_125	IF_126
0x84cc	             0x1c2	                            add edx, eax	      4135	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37	IF_125	IF_126
0x84ce	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      4135	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37	IF_125	IF_126
0x84d5	    0x899074010000	            mov dword [rax + 0x174], edx	      4135	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37	IF_125	IF_126
0x84db	            0xeb21	                           jmp 0x400853e	      4135	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37	IF_125	IF_126
0x84dd	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      4139	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37	IF_125	ELSE_38
0x84e4	    0x8b8074010000	           mov eax, dword [rax + 0x174] 	      4139	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37	IF_125	ELSE_38
0x84ea	          0x8d5001	                      lea edx, [rax + 1]	      4139	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37	IF_125	ELSE_38
0x84ed	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      4139	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37	IF_125	ELSE_38
0x84f4	    0x899074010000	            mov dword [rax + 0x174], edx	      4139	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123	ELSE_37	IF_125	ELSE_38
0x84fa	            0xeb02	                           jmp 0x400853e	      4144	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5	ELSE_35	ELSE_36	IF_122	IF_123
0x84fc	            0xeb2c	                           jmp 0x400856a	      4147	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5
0x84fe	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      4082	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5
0x8505	          0x488b00	                    mov rax, qword [rax]	      4082	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5
0x8508	          0x4885c0	                           test rax, rax	      4082	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5
0x850b	     0xf85c3fcffff	                           jne 0x4008214	      4082	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5
0x8511	    0x4883bde0fdff	              cmp qword [rbp - 0x220], 0	      4083	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5
0x8519	            0x7410	                            je 0x400856b	      4083	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5
0x851b	    0x83bde0fcffff	              cmp dword [rbp - 0x320], 0	      4083	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5
0x8522	     0xf85acfcffff	                           jne 0x4008214	      4083	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5
0x8528	            0xeb01	                           jmp 0x400856b	      4083	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5
0x852a	              0x90	                                     nop	      4147	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	WHILE_5
0x852b	    0x4881bde8fdff	              cmp qword [rbp - 0x218], 0	      4149	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_127
0x8536	            0x741b	                            je 0x4008593	      4149	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_127
0x8538	    0x4883bde0fdff	              cmp qword [rbp - 0x220], 0	      4149	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_127
0x8540	            0x7411	                            je 0x4008593	      4149	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_127
0x8542	    0x488b85e0fdff	            mov rax, qword [rbp - 0x220]	      4150	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_127
0x8549	          0x488b00	                    mov rax, qword [rax]	      4150	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_127
0x854c	    0x488985e0fdff	            mov qword [rbp - 0x220], rax	      4150	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4	IF_127
0x8553	    0x4883bde0fdff	              cmp qword [rbp - 0x220], 0	      4067	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4
0x855b	     0xf85f3fbffff	                           jne 0x4008194	      4067	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4
0x8561	    0x83bddcfcffff	              cmp dword [rbp - 0x324], 0	      4067	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4
0x8568	     0xf84e6fbffff	                            je 0x4008194	      4067	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_4
0x856e	    0x8b0500000000	            mov eax, dword [0x040085b4] 	      4155	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116
0x8574	    0x898580fcffff	            mov dword [rbp - 0x380], eax	      4155	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116
0x857a	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4156	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116
0x8581	    0x488b80501500	          mov rax, qword [rax + 0x1550] 	      4156	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116
0x8588	    0x488985e0fdff	            mov qword [rbp - 0x220], rax	      4156	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116
0x858f	    0xc785dcfcffff	              mov dword [rbp - 0x324], 0	      4157	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116
0x8599	      0xe9a2000000	                           jmp 0x4008680	      4158	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6
0x859e	    0x83bddcfcffff	              cmp dword [rbp - 0x324], 0	      4160	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_128
0x85a5	            0x7539	                           jne 0x4008620	      4160	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_128
0x85a7	    0x4883bde0fdff	              cmp qword [rbp - 0x220], 0	      4161	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_128
0x85af	            0x740e	                            je 0x40085ff	      4161	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_128
0x85b1	    0x488b85e0fdff	            mov rax, qword [rbp - 0x220]	      4162	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_128
0x85b8	          0x8b400c	              mov eax, dword [rax + 0xc]	      4162	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_128
0x85bb	            0x85c0	                           test eax, eax	      4162	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_128
0x85bd	            0x7f0a	                            jg 0x4008609	      4162	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_128
0x85bf	    0x4883bde0fdff	              cmp qword [rbp - 0x220], 0	      4163	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_128
0x85c7	            0x7517	                           jne 0x4008620	      4163	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_128
0x85c9	    0x48c785e8fdff	              mov qword [rbp - 0x218], 0	      4165	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_128
0x85d4	    0xc785dcfcffff	              mov dword [rbp - 0x324], 1	      4166	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_128
0x85de	            0xeb14	                           jmp 0x4008634	      4166	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_128
0x85e0	    0x488b85e0fdff	            mov rax, qword [rbp - 0x220]	      4169	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	ELSE_39
0x85e7	    0x480508020000	                          add rax, 0x208	      4169	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	ELSE_39
0x85ed	    0x488985e8fdff	            mov qword [rbp - 0x218], rax	      4169	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	ELSE_39
0x85f4	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      4170	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_129
0x85fb	    0x8b8064010000	           mov eax, dword [rax + 0x164] 	      4170	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_129
0x8601	            0x85c0	                           test eax, eax	      4170	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_129
0x8603	            0x7413	                            je 0x4008658	      4170	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_129
0x8605	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      4171	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_129
0x860c	    0x8b8064010000	           mov eax, dword [rax + 0x164] 	      4171	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_129
0x8612	    0x898580fcffff	            mov dword [rbp - 0x380], eax	      4171	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_129
0x8618	    0x4881bde8fdff	              cmp qword [rbp - 0x218], 0	      4172	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_130
0x8623	            0x741b	                            je 0x4008680	      4172	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_130
0x8625	    0x4883bde0fdff	              cmp qword [rbp - 0x220], 0	      4172	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_130
0x862d	            0x7411	                            je 0x4008680	      4172	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_130
0x862f	    0x488b85e0fdff	            mov rax, qword [rbp - 0x220]	      4173	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_130
0x8636	          0x488b00	                    mov rax, qword [rax]	      4173	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_130
0x8639	    0x488985e0fdff	            mov qword [rbp - 0x220], rax	      4173	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6	IF_130
0x8640	    0x4883bde0fdff	              cmp qword [rbp - 0x220], 0	      4158	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6
0x8648	     0xf8550ffffff	                           jne 0x40085de	      4158	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6
0x864e	    0x83bddcfcffff	              cmp dword [rbp - 0x324], 0	      4158	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6
0x8655	     0xf8443ffffff	                            je 0x40085de	      4158	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	WHILE_6
0x865b	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      4176	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	IF_131
0x8662	           0xfb600	                   movzx eax, byte [rax]	      4176	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	IF_131
0x8665	            0x84c0	                             test al, al	      4176	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	IF_131
0x8667	            0x752d	                           jne 0x40086d6	      4176	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	IF_131
0x8669	    0x83bdf0fcffff	              cmp dword [rbp - 0x310], 0	      4176	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	IF_131
0x8670	            0x7f1a	                            jg 0x40086cc	      4176	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	IF_131
0x8672	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4177	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	IF_131
0x8679	    0x8b8034020000	           mov eax, dword [rax + 0x234] 	      4177	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	IF_131
0x867f	            0x85c0	                           test eax, eax	      4177	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	IF_131
0x8681	            0x7413	                            je 0x40086d6	      4177	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	IF_131
0x8683	    0x83bd38fcffff	cmp dword [rbp - 0x3c8], 0xffffffffffffffff	      4177	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	IF_131
0x868a	            0x750a	                           jne 0x40086d6	      4177	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	IF_131
0x868c	    0xc78580fcffff	              mov dword [rbp - 0x380], 0	      4178	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_116	IF_131
0x8696	    0x83bdccfcffff	              cmp dword [rbp - 0x334], 0	      4183	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132
0x869d	     0xf84c9000000	                            je 0x40087ac	      4183	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132
0x86a3	    0x83bdccfcffff	          cmp dword [rbp - 0x334], 0x18 	      4185	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_133
0x86aa	            0x7531	                           jne 0x400871d	      4185	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_133
0x86ac	    0x488b95b0fdff	            mov rdx, qword [rbp - 0x250]	      4185	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_133
0x86b3	    0x488b85a8fdff	            mov rax, qword [rbp - 0x258]	      4185	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_133
0x86ba	          0x4829c2	                            sub rdx, rax	      4185	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_133
0x86bd	    0x8b8508fcffff	            mov eax, dword [rbp - 0x3f8]	      4185	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_133
0x86c3	            0x4898	                                    cdqe	      4185	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_133
0x86c5	          0x4839c2	                            cmp rdx, rax	      4185	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_133
0x86c8	            0x7c13	                            jl 0x400871d	      4185	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_133
0x86ca	    0x83bd2cfcffff	              cmp dword [rbp - 0x3d4], 0	      4186	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_133
0x86d1	            0x750a	                           jne 0x400871d	      4186	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_133
0x86d3	    0xc785ccfcffff	          mov dword [rbp - 0x334], 0x1a 	      4187	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_133
0x86dd	    0x83bdccfcffff	          cmp dword [rbp - 0x334], 0x1a 	      4188	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_134
0x86e4	            0x7531	                           jne 0x4008757	      4188	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_134
0x86e6	    0x488b95b0fdff	            mov rdx, qword [rbp - 0x250]	      4188	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_134
0x86ed	    0x488b85a8fdff	            mov rax, qword [rbp - 0x258]	      4188	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_134
0x86f4	          0x4829c2	                            sub rdx, rax	      4188	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_134
0x86f7	    0x8b850cfcffff	            mov eax, dword [rbp - 0x3f4]	      4188	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_134
0x86fd	            0x4898	                                    cdqe	      4188	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_134
0x86ff	          0x4839c2	                            cmp rdx, rax	      4188	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_134
0x8702	            0x7e13	                           jle 0x4008757	      4188	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_134
0x8704	    0x83bd2cfcffff	              cmp dword [rbp - 0x3d4], 0	      4189	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_134
0x870b	            0x750a	                           jne 0x4008757	      4189	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_134
0x870d	    0xc785ccfcffff	          mov dword [rbp - 0x334], 0x18 	      4190	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_134
0x8717	    0x8b85ccfcffff	            mov eax, dword [rbp - 0x334]	      4191	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	CALL_88
0x871d	            0x4898	                                    cdqe	      4191	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	CALL_88
0x871f	    0x8b0485000000	                  mov eax, dword [rax*4]	      4191	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	CALL_88
0x8726	    0x8985d8fcffff	            mov dword [rbp - 0x328], eax	      4191	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	CALL_88
0x872c	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4192	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_135
0x8733	    0x8b8070020000	           mov eax, dword [rax + 0x270] 	      4192	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_135
0x8739	            0x85c0	                           test eax, eax	      4192	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_135
0x873b	            0x742f	                            je 0x40087ac	      4192	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_135
0x873d	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4192	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_135
0x8744	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4192	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_135
0x8748	    0x483b85e0fbff	            cmp rax, qword [rbp - 0x420]	      4192	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_135
0x874f	            0x751b	                           jne 0x40087ac	      4192	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	IF_135
0x8751	    0x8b1500000000	            mov edx, dword [0x04008797] 	      4193	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	CALL_90
0x8757	    0x8b85d8fcffff	            mov eax, dword [rbp - 0x328]	      4193	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	CALL_90
0x875d	            0x89d6	                            mov esi, edx	      4193	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	CALL_90
0x875f	            0x89c7	                            mov edi, eax	      4193	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	CALL_90
0x8761	      0xe800000000	                          call 0x40087a6	      4193	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	CALL_90
0x8766	    0x8985d8fcffff	            mov dword [rbp - 0x328], eax	      4193	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_132	CALL_90
0x876c	    0xc78570fcffff	              mov dword [rbp - 0x390], 1	      4198	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113
0x8776	    0x83bd7cfcffff	              cmp dword [rbp - 0x384], 0	      4200	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_136
0x877d	            0x7420	                            je 0x40087df	      4200	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	IF_136
0x877f	    0x8b957cfcffff	            mov edx, dword [rbp - 0x384]	      4201	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	CALL_91
0x8785	    0x8b85d8fcffff	            mov eax, dword [rbp - 0x328]	      4201	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	CALL_91
0x878b	            0x89d6	                            mov esi, edx	      4201	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	CALL_91
0x878d	            0x89c7	                            mov edi, eax	      4201	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	CALL_91
0x878f	      0xe800000000	                          call 0x40087d4	      4201	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	CALL_91
0x8794	    0x89856cfcffff	            mov dword [rbp - 0x394], eax	      4201	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	CALL_91
0x879a	      0xe9b6000000	                           jmp 0x4008895	      4201	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	CALL_91
0x879f	    0x83bd80fcffff	              cmp dword [rbp - 0x380], 0	      4202	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_40	IF_137
0x87a6	            0x7420	                            je 0x4008808	      4202	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_40	IF_137
0x87a8	    0x8b9580fcffff	            mov edx, dword [rbp - 0x380]	      4203	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_40	IF_137
0x87ae	    0x8b85d8fcffff	            mov eax, dword [rbp - 0x328]	      4203	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_40	IF_137
0x87b4	            0x89d6	                            mov esi, edx	      4203	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_40	IF_137
0x87b6	            0x89c7	                            mov edi, eax	      4203	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_40	IF_137
0x87b8	      0xe800000000	                          call 0x40087fd	      4203	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_40	IF_137
0x87bd	    0x89856cfcffff	            mov dword [rbp - 0x394], eax	      4203	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_40	IF_137
0x87c3	      0xe98d000000	                           jmp 0x4008895	      4203	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_40	IF_137
0x87c8	    0x83bdd8fcffff	              cmp dword [rbp - 0x328], 0	      4206	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_41	IF_138
0x87cf	            0x7459	                            je 0x400886a	      4206	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_41	IF_138
0x87d1	    0x8b8500fcffff	            mov eax, dword [rbp - 0x400]	      4206	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_41	IF_138
0x87d7	          0x83f8f6	             cmp eax, 0xfffffffffffffff6	      4206	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_41	IF_138
0x87da	            0x750d	                           jne 0x4008829	      4206	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_41	IF_138
0x87dc	    0x8b8504fcffff	            mov eax, dword [rbp - 0x3fc]	      4206	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_41	IF_138
0x87e2	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      4206	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_41	IF_138
0x87e7	            0x7433	                            je 0x400885c	      4206	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_41	IF_138
0x87e9	    0x8b8500fcffff	            mov eax, dword [rbp - 0x400]	      4207	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_41	IF_138
0x87ef	            0x4898	                                    cdqe	      4207	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_41	IF_138
0x87f1	    0x483b8590fdff	            cmp rax, qword [rbp - 0x270]	      4207	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_41	IF_138
0x87f8	            0x7f22	                            jg 0x400885c	      4207	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_41	IF_138
0x87fa	    0x8b8560fcffff	            mov eax, dword [rbp - 0x3a0]	      4207	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_41	IF_138
0x8800	            0x4898	                                    cdqe	      4207	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_41	IF_138
0x8802	    0x483b85a0fdff	            cmp rax, qword [rbp - 0x260]	      4207	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_41	IF_138
0x8809	            0x7f11	                            jg 0x400885c	      4207	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_41	IF_138
0x880b	    0x8b8504fcffff	            mov eax, dword [rbp - 0x3fc]	      4208	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_41	IF_138
0x8811	            0x4898	                                    cdqe	      4208	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_41	IF_138
0x8813	    0x483b8590fdff	            cmp rax, qword [rbp - 0x270]	      4208	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_41	IF_138
0x881a	            0x7f0e	                            jg 0x400886a	      4208	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_41	IF_138
0x881c	    0x8b85d8fcffff	            mov eax, dword [rbp - 0x328]	      4209	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_41	IF_138
0x8822	    0x89856cfcffff	            mov dword [rbp - 0x394], eax	      4209	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_41	IF_138
0x8828	            0xeb2b	                           jmp 0x4008895	      4209	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_41	IF_138
0x882a	    0xc78570fcffff	              mov dword [rbp - 0x390], 0	      4218	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_43
0x8834	    0x83bd8cfcffff	              cmp dword [rbp - 0x374], 0	      4220	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_43	IF_141
0x883b	            0x740e	                            je 0x400888b	      4220	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_43	IF_141
0x883d	    0x8b8588fcffff	            mov eax, dword [rbp - 0x378]	      4221	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_43	IF_141
0x8843	    0x89856cfcffff	            mov dword [rbp - 0x394], eax	      4221	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_43	IF_141
0x8849	            0xeb0a	                           jmp 0x4008895	      4221	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_43	IF_141
0x884b	    0xc7856cfcffff	              mov dword [rbp - 0x394], 0	      4224	screen.c	FUNCTION_28	FOR_1	ELSE_32	IF_113	ELSE_43	ELSE_44
0x8855	    0x83bd2cfcffff	              cmp dword [rbp - 0x3d4], 0	      4239	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142
0x885c	     0xf8e7c020000	                           jle 0x4008b1e	      4239	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142
0x8862	    0x83bd30fcffff	              cmp dword [rbp - 0x3d0], 0	      4241	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	IF_143
0x8869	            0x7466	                            je 0x4008911	      4241	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	IF_143
0x886b	    0x8b8530fcffff	            mov eax, dword [rbp - 0x3d0]	      4243	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	IF_143
0x8871	    0x8985fcfbffff	            mov dword [rbp - 0x404], eax	      4243	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	IF_143
0x8877	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      4245	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	IF_143
0x887d	    0x8985bcfcffff	            mov dword [rbp - 0x344], eax	      4245	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	IF_143
0x8883	    0x8b0500000000	            mov eax, dword [0x040088c9] 	      4246	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	IF_143	IF_144	CALL_93
0x8889	            0x85c0	                           test eax, eax	      4246	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	IF_143	IF_144	CALL_93
0x888b	            0x7435	                            je 0x4008902	      4246	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	IF_143	IF_144	CALL_93
0x888d	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      4246	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	IF_143	IF_144	CALL_93
0x8893	            0x89c7	                            mov edi, eax	      4246	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	IF_143	IF_144	CALL_93
0x8895	      0xe800000000	                          call 0x40088da	      4246	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	IF_143	IF_144	CALL_93
0x889a	          0x83f801	                              cmp eax, 1	      4246	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	IF_143	IF_144	CALL_93
0x889d	            0x7e23	                           jle 0x4008902	      4246	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	IF_143	IF_144	CALL_93
0x889f	    0xc785c0fcffff	              mov dword [rbp - 0x340], 1	      4248	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	IF_143	IF_144
0x88a9	    0xc78550feffff	              mov dword [rbp - 0x1b0], 0	      4249	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	IF_143	IF_144
0x88b3	    0xc785fcfbffff	          mov dword [rbp - 0x404], 0xc0 	      4250	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	IF_143	IF_144
0x88bd	      0xe910020000	                           jmp 0x4008b12	      4250	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	IF_143	IF_144
0x88c2	    0xc785c0fcffff	              mov dword [rbp - 0x340], 0	      4253	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	IF_143	ELSE_45
0x88cc	      0xe901020000	                           jmp 0x4008b12	      4253	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	IF_143	ELSE_45
0x88d1	    0x488b8580fdff	            mov rax, qword [rbp - 0x280]	      4258	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46
0x88d8	           0xfb600	                   movzx eax, byte [rax]	      4258	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46
0x88db	           0xfb6c0	                           movzx eax, al	      4258	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46
0x88de	    0x8985fcfbffff	            mov dword [rbp - 0x404], eax	      4258	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46
0x88e4	    0x8b0500000000	            mov eax, dword [0x0400892a] 	      4260	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145
0x88ea	            0x85c0	                           test eax, eax	      4260	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145
0x88ec	     0xf84ce010000	                            je 0x4008b00	      4260	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145
0x88f2	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      4262	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145
0x88f8	    0x8985bcfcffff	            mov dword [rbp - 0x344], eax	      4262	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145
0x88fe	    0x8b0500000000	            mov eax, dword [0x04008944] 	      4263	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_146
0x8904	            0x85c0	                           test eax, eax	      4263	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_146
0x8906	            0x747e	                            je 0x40089c6	      4263	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_146
0x8908	    0x488b8580fdff	            mov rax, qword [rbp - 0x280]	      4267	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_146	CALL_94
0x890f	          0x4889c7	                            mov rdi, rax	      4267	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_146	CALL_94
0x8912	      0xe800000000	                          call 0x4008957	      4267	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_146	CALL_94
0x8917	    0x8985b8fcffff	            mov dword [rbp - 0x348], eax	      4267	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_146	CALL_94
0x891d	    0xc785c0fcffff	              mov dword [rbp - 0x340], 0	      4268	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_146
0x8927	    0x8b85b8fcffff	            mov eax, dword [rbp - 0x348]	      4269	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_146	IF_147
0x892d	    0x3b852cfcffff	            cmp eax, dword [rbp - 0x3d4]	      4269	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_146	IF_147
0x8933	            0x7e0f	                           jle 0x4008984	      4269	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_146	IF_147
0x8935	    0xc785b8fcffff	              mov dword [rbp - 0x348], 1	      4270	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_146	IF_147
0x893f	      0xe9a1000000	                           jmp 0x4008a25	      4270	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_146	IF_147
0x8944	    0x83bdb8fcffff	              cmp dword [rbp - 0x348], 1	      4271	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_146	ELSE_47	IF_148
0x894b	     0xf8e94000000	                           jle 0x4008a25	      4271	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_146	ELSE_47	IF_148
0x8951	    0x488b8580fdff	            mov rax, qword [rbp - 0x280]	      4273	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_146	ELSE_47	IF_148	CALL_95
0x8958	    0x488d9550feff	                  lea rdx, [rbp - 0x1b0]	      4273	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_146	ELSE_47	IF_148	CALL_95
0x895f	          0x4889d6	                            mov rsi, rdx	      4273	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_146	ELSE_47	IF_148	CALL_95
0x8962	          0x4889c7	                            mov rdi, rax	      4273	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_146	ELSE_47	IF_148	CALL_95
0x8965	      0xe800000000	                          call 0x40089aa	      4273	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_146	ELSE_47	IF_148	CALL_95
0x896a	    0x8985bcfcffff	            mov dword [rbp - 0x344], eax	      4273	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_146	ELSE_47	IF_148	CALL_95
0x8970	    0xc785c0fcffff	              mov dword [rbp - 0x340], 1	      4274	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_146	ELSE_47	IF_148
0x897a	    0xc785fcfbffff	          mov dword [rbp - 0x404], 0xc0 	      4275	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_146	ELSE_47	IF_148
0x8984	            0xeb5f	                           jmp 0x4008a25	      4275	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_146	ELSE_47	IF_148
0x8986	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      4281	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_48	CALL_96
0x898c	            0x4898	                                    cdqe	      4281	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_48	CALL_96
0x898e	     0xfb680000000	                   movzx eax, byte [rax]	      4281	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_48	CALL_96
0x8995	           0xfbec0	                           movsx eax, al	      4281	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_48	CALL_96
0x8998	    0x8985b8fcffff	            mov dword [rbp - 0x348], eax	      4281	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_48	CALL_96
0x899e	    0x8b85b8fcffff	            mov eax, dword [rbp - 0x348]	      4282	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_48	IF_149
0x89a4	    0x3b852cfcffff	            cmp eax, dword [rbp - 0x3d4]	      4282	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_48	IF_149
0x89aa	            0x7c0c	                            jl 0x40089f8	      4282	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_48	IF_149
0x89ac	    0xc785b8fcffff	              mov dword [rbp - 0x348], 1	      4283	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_48	IF_149
0x89b6	            0xeb2d	                           jmp 0x4008a25	      4283	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_48	IF_149
0x89b8	    0x83bdb8fcffff	              cmp dword [rbp - 0x348], 1	      4284	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_48	ELSE_49	IF_150
0x89bf	            0x7e24	                           jle 0x4008a25	      4284	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_48	ELSE_49	IF_150
0x89c1	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      4285	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_48	ELSE_49	IF_150
0x89c7	          0xc1e008	                              shl eax, 8	      4285	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_48	ELSE_49	IF_150
0x89ca	            0x89c2	                            mov edx, eax	      4285	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_48	ELSE_49	IF_150
0x89cc	    0x488b8580fdff	            mov rax, qword [rbp - 0x280]	      4285	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_48	ELSE_49	IF_150
0x89d3	        0x4883c001	                              add rax, 1	      4285	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_48	ELSE_49	IF_150
0x89d7	           0xfb600	                   movzx eax, byte [rax]	      4285	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_48	ELSE_49	IF_150
0x89da	           0xfb6c0	                           movzx eax, al	      4285	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_48	ELSE_49	IF_150
0x89dd	             0x1d0	                            add eax, edx	      4285	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_48	ELSE_49	IF_150
0x89df	    0x8985bcfcffff	            mov dword [rbp - 0x344], eax	      4285	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_48	ELSE_49	IF_150
0x89e5	    0x83bdb8fcffff	              cmp dword [rbp - 0x348], 0	      4287	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_151
0x89ec	            0x750a	                           jne 0x4008a38	      4287	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_151
0x89ee	    0xc785b8fcffff	              mov dword [rbp - 0x348], 1	      4288	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_151
0x89f8	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4294	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x89ff	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      4294	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x8a05	            0x85c0	                           test eax, eax	      4292	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x8a07	            0x740b	                            je 0x4008a54	      4292	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x8a09	    0x83bd1cfcffff	              cmp dword [rbp - 0x3e4], 0	      4292	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x8a10	            0x7e1a	                           jle 0x4008a6c	      4292	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x8a12	            0xeb7f	                           jmp 0x4008ad3	      4292	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x8a14	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4296	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x8a1b	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      4296	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x8a21	          0x83e801	                              sub eax, 1	      4296	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x8a24	    0x3b851cfcffff	            cmp eax, dword [rbp - 0x3e4]	      4297	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x8a2a	            0x7f67	                            jg 0x4008ad3	      4297	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x8a2c	    0x488b05000000	            mov rax, qword [0x04008a73] 	      4297	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x8a33	    0x8b95bcfcffff	            mov edx, dword [rbp - 0x344]	      4297	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x8a39	            0x89d7	                            mov edi, edx	      4297	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x8a3b	            0xffd0	                                call rax	      4297	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x8a3d	          0x83f802	                              cmp eax, 2	      4297	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x8a40	            0x7551	                           jne 0x4008ad3	      4297	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x8a42	    0xc785fcfbffff	          mov dword [rbp - 0x404], 0x3e 	      4299	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x8a4c	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      4300	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x8a52	    0x8985bcfcffff	            mov dword [rbp - 0x344], eax	      4300	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x8a58	    0xc785b8fcffff	              mov dword [rbp - 0x348], 1	      4301	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x8a62	    0xc785c0fcffff	              mov dword [rbp - 0x340], 0	      4302	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x8a6c	    0x8b0500000000	            mov eax, dword [0x04008ab2] 	      4303	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152	CALL_97
0x8a72	    0x8985b4fcffff	            mov dword [rbp - 0x34c], eax	      4303	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152	CALL_97
0x8a78	    0x83852cfcffff	              add dword [rbp - 0x3d4], 1	      4306	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x8a7f	    0x488b8580fdff	            mov rax, qword [rbp - 0x280]	      4307	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x8a86	        0x4883e801	                              sub rax, 1	      4307	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x8a8a	    0x48898580fdff	            mov qword [rbp - 0x280], rax	      4307	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x8a91	            0xeb2d	                           jmp 0x4008b00	      4307	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	IF_152
0x8a93	    0x8b85b8fcffff	            mov eax, dword [rbp - 0x348]	      4311	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_50
0x8a99	          0x83e801	                              sub eax, 1	      4311	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_50
0x8a9c	    0x29852cfcffff	            sub dword [rbp - 0x3d4], eax	      4311	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_50
0x8aa2	    0x488b8580fdff	            mov rax, qword [rbp - 0x280]	      4312	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_50
0x8aa9	    0x8b95b8fcffff	            mov edx, dword [rbp - 0x348]	      4312	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_50
0x8aaf	          0x4863d2	                         movsxd rdx, edx	      4312	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_50
0x8ab2	        0x4883ea01	                              sub rdx, 1	      4312	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_50
0x8ab6	          0x4801d0	                            add rax, rdx	      4312	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_50
0x8ab9	    0x48898580fdff	            mov qword [rbp - 0x280], rax	      4312	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_45	ELSE_46	IF_145	ELSE_50
0x8ac0	    0x488b8580fdff	            mov rax, qword [rbp - 0x280]	      4316	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_46
0x8ac7	        0x4883c001	                              add rax, 1	      4316	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_46
0x8acb	    0x48898580fdff	            mov qword [rbp - 0x280], rax	      4316	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142	ELSE_46
0x8ad2	    0x83ad2cfcffff	              sub dword [rbp - 0x3d4], 1	      4318	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142
0x8ad9	      0xe9081d0000	                           jmp 0x400a826	      4318	screen.c	FUNCTION_28	FOR_1	ELSE_44	IF_142
0x8ade	    0x4883bdb8fdff	              cmp qword [rbp - 0x248], 0	      4326	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_153
0x8ae6	            0x741a	                            je 0x4008b42	      4326	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_153
0x8ae8	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      4328	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_153	CALL_98
0x8aef	          0x4889c7	                            mov rdi, rax	      4328	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_153	CALL_98
0x8af2	      0xe800000000	                          call 0x4008b37	      4328	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_153	CALL_98
0x8af7	    0x48c785b8fdff	              mov qword [rbp - 0x248], 0	      4329	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_153
0x8b02	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      4334	screen.c	FUNCTION_28	FOR_1	ELSE_51
0x8b09	           0xfb600	                   movzx eax, byte [rax]	      4334	screen.c	FUNCTION_28	FOR_1	ELSE_51
0x8b0c	           0xfb6c0	                           movzx eax, al	      4334	screen.c	FUNCTION_28	FOR_1	ELSE_51
0x8b0f	    0x8985fcfbffff	            mov dword [rbp - 0x404], eax	      4334	screen.c	FUNCTION_28	FOR_1	ELSE_51
0x8b15	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      4336	screen.c	FUNCTION_28	FOR_1	ELSE_51
0x8b1c	           0xfb600	                   movzx eax, byte [rax]	      4336	screen.c	FUNCTION_28	FOR_1	ELSE_51
0x8b1f	           0xfb6c0	                           movzx eax, al	      4336	screen.c	FUNCTION_28	FOR_1	ELSE_51
0x8b22	    0x898524fdffff	            mov dword [rbp - 0x2dc], eax	      4336	screen.c	FUNCTION_28	FOR_1	ELSE_51
0x8b28	    0x8b0500000000	            mov eax, dword [0x04008b6e] 	      4339	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154
0x8b2e	            0x85c0	                           test eax, eax	      4339	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154
0x8b30	     0xf8415060000	                            je 0x400918b	      4339	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154
0x8b36	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      4341	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154
0x8b3c	    0x8985bcfcffff	            mov dword [rbp - 0x344], eax	      4341	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154
0x8b42	    0x8b0500000000	            mov eax, dword [0x04008b88] 	      4342	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155
0x8b48	            0x85c0	                           test eax, eax	      4342	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155
0x8b4a	     0xf8459030000	                            je 0x4008ee9	      4342	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155
0x8b50	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      4346	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	CALL_99
0x8b57	          0x4889c7	                            mov rdi, rax	      4346	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	CALL_99
0x8b5a	      0xe800000000	                          call 0x4008b9f	      4346	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	CALL_99
0x8b5f	    0x8985b8fcffff	            mov dword [rbp - 0x348], eax	      4346	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	CALL_99
0x8b65	    0xc785c0fcffff	              mov dword [rbp - 0x340], 0	      4347	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155
0x8b6f	    0x83bdb8fcffff	              cmp dword [rbp - 0x348], 1	      4348	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156
0x8b76	     0xf8eb3000000	                           jle 0x4008c6f	      4348	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156
0x8b7c	    0x488d9550feff	                  lea rdx, [rbp - 0x1b0]	      4350	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	CALL_100
0x8b83	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      4350	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	CALL_100
0x8b8a	          0x4889d6	                            mov rsi, rdx	      4350	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	CALL_100
0x8b8d	          0x4889c7	                            mov rdi, rax	      4350	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	CALL_100
0x8b90	      0xe800000000	                          call 0x4008bd5	      4350	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	CALL_100
0x8b95	    0x8985bcfcffff	            mov dword [rbp - 0x344], eax	      4350	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	CALL_100
0x8b9b	    0x83bdbcfcffff	          cmp dword [rbp - 0x344], 0x7f 	      4353	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	IF_157
0x8ba2	            0x7f18	                            jg 0x4008bfc	      4353	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	IF_157
0x8ba4	    0x8b85bcfcffff	            mov eax, dword [rbp - 0x344]	      4355	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	IF_157
0x8baa	    0x8985fcfbffff	            mov dword [rbp - 0x404], eax	      4355	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	IF_157
0x8bb0	    0x8b85bcfcffff	            mov eax, dword [rbp - 0x344]	      4357	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	IF_157
0x8bb6	    0x898524fdffff	            mov dword [rbp - 0x2dc], eax	      4357	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	IF_157
0x8bbc	    0xc785c0fcffff	              mov dword [rbp - 0x340], 1	      4360	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156
0x8bc6	    0x8b85bcfcffff	            mov eax, dword [rbp - 0x344]	      4364	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	IF_158	CALL_101
0x8bcc	            0x89c7	                            mov edi, eax	      4364	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	IF_158	CALL_101
0x8bce	      0xe800000000	                          call 0x4008c13	      4364	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	IF_158	CALL_101
0x8bd3	            0x85c0	                           test eax, eax	      4364	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	IF_158	CALL_101
0x8bd5	            0x7458	                            je 0x4008c6f	      4364	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	IF_158	CALL_101
0x8bd7	    0x8b0500000000	            mov eax, dword [0x04008c1d] 	      4368	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	IF_158	FOR_3
0x8bdd	          0x83e801	                              sub eax, 1	      4368	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	IF_158	FOR_3
0x8be0	    0x898528fdffff	            mov dword [rbp - 0x2d8], eax	      4368	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	IF_158	FOR_3
0x8be6	            0xeb28	                           jmp 0x4008c50	      4368	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	IF_158	FOR_3
0x8be8	    0x8b8528fdffff	            mov eax, dword [rbp - 0x2d8]	      4369	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	IF_158	FOR_3
0x8bee	          0x83e801	                              sub eax, 1	      4369	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	IF_158	FOR_3
0x8bf1	            0x4898	                                    cdqe	      4369	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	IF_158	FOR_3
0x8bf3	    0x8b948550feff	    mov edx, dword [rbp + rax*4 - 0x1b0]	      4369	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	IF_158	FOR_3
0x8bfa	    0x8b8528fdffff	            mov eax, dword [rbp - 0x2d8]	      4369	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	IF_158	FOR_3
0x8c00	            0x4898	                                    cdqe	      4369	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	IF_158	FOR_3
0x8c02	    0x89948550feff	    mov dword [rbp + rax*4 - 0x1b0], edx	      4369	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	IF_158	FOR_3
0x8c09	    0x83ad28fdffff	              sub dword [rbp - 0x2d8], 1	      4368	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	IF_158	FOR_3
0x8c10	    0x83bd28fdffff	              cmp dword [rbp - 0x2d8], 0	      4368	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	IF_158	FOR_3
0x8c17	            0x7fcf	                            jg 0x4008c28	      4368	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	IF_158	FOR_3
0x8c19	    0x8b85bcfcffff	            mov eax, dword [rbp - 0x344]	      4370	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	IF_158
0x8c1f	    0x898550feffff	            mov dword [rbp - 0x1b0], eax	      4370	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	IF_158
0x8c25	    0xc785bcfcffff	          mov dword [rbp - 0x344], 0x20 	      4371	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_156	IF_158
0x8c2f	    0x83bdb8fcffff	              cmp dword [rbp - 0x348], 1	      4375	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159
0x8c36	            0x750b	                           jne 0x4008c83	      4375	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159
0x8c38	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      4375	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159
0x8c3e	          0x83f87f	                           cmp eax, 0x7f	      4375	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159
0x8c41	            0x7f34	                            jg 0x4008cb7	      4375	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159
0x8c43	    0x83bdb8fcffff	              cmp dword [rbp - 0x348], 0	      4376	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159
0x8c4a	            0x7e09	                           jle 0x4008c95	      4376	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159
0x8c4c	    0x83bdbcfcffff	              cmp dword [rbp - 0x344], 0	      4376	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159
0x8c53	            0x7422	                            je 0x4008cb7	      4376	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159
0x8c55	    0x83bdb8fcffff	              cmp dword [rbp - 0x348], 1	      4377	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	CALL_102
0x8c5c	     0xf8efc000000	                           jle 0x4008d9e	      4377	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	CALL_102
0x8c62	    0x8b85bcfcffff	            mov eax, dword [rbp - 0x344]	      4377	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	CALL_102
0x8c68	            0x89c7	                            mov edi, eax	      4377	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	CALL_102
0x8c6a	      0xe800000000	                          call 0x4008caf	      4377	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	CALL_102
0x8c6f	            0x85c0	                           test eax, eax	      4377	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	CALL_102
0x8c71	     0xf85e7000000	                           jne 0x4008d9e	      4377	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	CALL_102
0x8c77	    0x8b95bcfcffff	            mov edx, dword [rbp - 0x344]	      4391	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	IF_160	CALL_103
0x8c7d	    0x488d8590feff	                  lea rax, [rbp - 0x170]	      4391	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	IF_160	CALL_103
0x8c84	            0x89d6	                            mov esi, edx	      4391	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	IF_160	CALL_103
0x8c86	          0x4889c7	                            mov rdi, rax	      4391	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	IF_160	CALL_103
0x8c89	      0xe800000000	                          call 0x4008cce	      4391	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	IF_160	CALL_103
0x8c8e	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4393	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	IF_160	IF_161
0x8c95	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      4393	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	IF_160	IF_161
0x8c9b	            0x85c0	                           test eax, eax	      4393	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	IF_160	IF_161
0x8c9d	            0x740f	                            je 0x4008cee	      4393	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	IF_160	IF_161
0x8c9f	    0x488d8590feff	                  lea rax, [rbp - 0x170]	      4394	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	IF_160	CALL_104
0x8ca6	          0x4889c7	                            mov rdi, rax	      4394	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	IF_160	CALL_104
0x8ca9	      0xe800000000	                          call 0x4008cee	      4394	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	IF_160	CALL_104
0x8cae	    0x488d8590feff	                  lea rax, [rbp - 0x170]	      4405	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159
0x8cb5	    0x48898580fdff	            mov qword [rbp - 0x280], rax	      4405	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159
0x8cbc	    0x488b8580fdff	            mov rax, qword [rbp - 0x280]	      4406	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159
0x8cc3	           0xfb600	                   movzx eax, byte [rax]	      4406	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159
0x8cc6	           0xfb6c0	                           movzx eax, al	      4406	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159
0x8cc9	    0x8985fcfbffff	            mov dword [rbp - 0x404], eax	      4406	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159
0x8ccf	    0x488d8580fdff	                  lea rax, [rbp - 0x280]	      4407	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	CALL_108
0x8cd6	          0x4889c7	                            mov rdi, rax	      4407	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	CALL_108
0x8cd9	      0xe800000000	                          call 0x4008d1e	      4407	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	CALL_108
0x8cde	    0x8985bcfcffff	            mov dword [rbp - 0x344], eax	      4407	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	CALL_108
0x8ce4	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      4408	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159
0x8cea	          0x83f87f	                           cmp eax, 0x7f	      4408	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159
0x8ced	           0xf9fc0	                                 setg al	      4408	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159
0x8cf0	           0xfb6c0	                           movzx eax, al	      4408	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159
0x8cf3	    0x8985c0fcffff	            mov dword [rbp - 0x340], eax	      4408	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159
0x8cf9	    0x488b8580fdff	            mov rax, qword [rbp - 0x280]	      4409	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	CALL_109
0x8d00	          0x4889c7	                            mov rdi, rax	      4409	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	CALL_109
0x8d03	      0xe800000000	                          call 0x4008d48	      4409	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	CALL_109
0x8d08	    0x89852cfcffff	            mov dword [rbp - 0x3d4], eax	      4409	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	CALL_109
0x8d0e	    0xc78530fcffff	              mov dword [rbp - 0x3d0], 0	      4410	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159
0x8d18	    0x83bd7cfcffff	              cmp dword [rbp - 0x384], 0	      4411	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	IF_163
0x8d1f	     0xf85e0020000	                           jne 0x4009045	      4411	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	IF_163
0x8d25	    0x83bd80fcffff	              cmp dword [rbp - 0x380], 0	      4411	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	IF_163
0x8d2c	     0xf85d3020000	                           jne 0x4009045	      4411	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	IF_163
0x8d32	    0x8b852cfcffff	            mov eax, dword [rbp - 0x3d4]	      4413	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	IF_163
0x8d38	          0x83c001	                              add eax, 1	      4413	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	IF_163
0x8d3b	    0x89854cfcffff	            mov dword [rbp - 0x3b4], eax	      4413	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	IF_163
0x8d41	    0x8b0500000000	            mov eax, dword [0x04008d87] 	      4414	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	IF_163	CALL_110
0x8d47	    0x898534fcffff	            mov dword [rbp - 0x3cc], eax	      4414	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	IF_163	CALL_110
0x8d4d	    0x8b856cfcffff	            mov eax, dword [rbp - 0x394]	      4415	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	IF_163
0x8d53	    0x898550fcffff	            mov dword [rbp - 0x3b0], eax	      4415	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	IF_163
0x8d59	      0xe9a7020000	                           jmp 0x4009045	      4411	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	IF_163
0x8d5e	    0x83bdb8fcffff	              cmp dword [rbp - 0x348], 0	      4418	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_54	IF_164
0x8d65	            0x750f	                           jne 0x4008db6	      4418	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_54	IF_164
0x8d67	    0xc785b8fcffff	              mov dword [rbp - 0x348], 1	      4419	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_54	IF_164
0x8d71	      0xe990020000	                           jmp 0x4009046	      4419	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_54	IF_164
0x8d76	    0x8b0500000000	            mov eax, dword [0x04008dbc] 	      4421	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	CALL_111
0x8d7c	            0x85c0	                           test eax, eax	      4421	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	CALL_111
0x8d7e	     0xf8414010000	                            je 0x4008ed8	      4421	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	CALL_111
0x8d84	    0x8b0500000000	            mov eax, dword [0x04008dca] 	      4421	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	CALL_111
0x8d8a	            0x85c0	                           test eax, eax	      4421	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	CALL_111
0x8d8c	     0xf8506010000	                           jne 0x4008ed8	      4421	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	CALL_111
0x8d92	    0x81bdbcfcffff	         cmp dword [rbp - 0x344], 0x620 	      4421	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	CALL_111
0x8d9c	     0xf8ef6000000	                           jle 0x4008ed8	      4421	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	CALL_111
0x8da2	    0x81bdbcfcffff	         cmp dword [rbp - 0x344], 0x670 	      4421	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	CALL_111
0x8dac	     0xf8fe6000000	                            jg 0x4008ed8	      4421	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	CALL_111
0x8db2	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4429	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	IF_166
0x8db9	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      4429	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	IF_166
0x8dbf	            0x85c0	                           test eax, eax	      4429	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	IF_166
0x8dc1	            0x7447	                            je 0x4008e4a	      4429	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	IF_166
0x8dc3	    0x8b85e8fcffff	            mov eax, dword [rbp - 0x318]	      4431	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	IF_166
0x8dc9	    0x89852cfdffff	            mov dword [rbp - 0x2d4], eax	      4431	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	IF_166
0x8dcf	    0x8b85ecfcffff	            mov eax, dword [rbp - 0x314]	      4432	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	IF_166
0x8dd5	    0x898530fdffff	            mov dword [rbp - 0x2d0], eax	      4432	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	IF_166
0x8ddb	    0x8b85b8fcffff	            mov eax, dword [rbp - 0x348]	      4433	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	IF_166	CALL_112
0x8de1	          0x4863d0	                         movsxd rdx, eax	      4433	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	IF_166	CALL_112
0x8de4	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      4433	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	IF_166	CALL_112
0x8deb	          0x4801d0	                            add rax, rdx	      4433	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	IF_166	CALL_112
0x8dee	          0x4889c7	                            mov rdi, rax	      4433	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	IF_166	CALL_112
0x8df1	      0xe800000000	                          call 0x4008e36	      4433	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	IF_166	CALL_112
0x8df6	    0x898534fdffff	            mov dword [rbp - 0x2cc], eax	      4433	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	IF_166	CALL_112
0x8dfc	    0x8b8550feffff	            mov eax, dword [rbp - 0x1b0]	      4434	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	IF_166
0x8e02	    0x8985ecfcffff	            mov dword [rbp - 0x314], eax	      4434	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	IF_166
0x8e08	            0xeb43	                           jmp 0x4008e8d	      4434	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	IF_166
0x8e0a	    0x8b85b8fcffff	            mov eax, dword [rbp - 0x348]	      4438	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	ELSE_56	CALL_113
0x8e10	          0x4863d0	                         movsxd rdx, eax	      4438	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	ELSE_56	CALL_113
0x8e13	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      4438	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	ELSE_56	CALL_113
0x8e1a	          0x4801c2	                            add rdx, rax	      4438	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	ELSE_56	CALL_113
0x8e1d	    0x488d8570feff	                  lea rax, [rbp - 0x190]	      4438	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	ELSE_56	CALL_113
0x8e24	          0x4889c6	                            mov rsi, rax	      4438	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	ELSE_56	CALL_113
0x8e27	          0x4889d7	                            mov rdi, rdx	      4438	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	ELSE_56	CALL_113
0x8e2a	      0xe800000000	                          call 0x4008e6f	      4438	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	ELSE_56	CALL_113
0x8e2f	    0x89852cfdffff	            mov dword [rbp - 0x2d4], eax	      4438	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	ELSE_56	CALL_113
0x8e35	    0x8b85e8fcffff	            mov eax, dword [rbp - 0x318]	      4439	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	ELSE_56
0x8e3b	    0x898534fdffff	            mov dword [rbp - 0x2cc], eax	      4439	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	ELSE_56
0x8e41	    0x8b8570feffff	            mov eax, dword [rbp - 0x190]	      4440	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	ELSE_56
0x8e47	    0x898530fdffff	            mov dword [rbp - 0x2d0], eax	      4440	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	ELSE_56
0x8e4d	    0x8b85bcfcffff	            mov eax, dword [rbp - 0x344]	      4442	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165
0x8e53	    0x8985e8fcffff	            mov dword [rbp - 0x318], eax	      4442	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165
0x8e59	    0x448b8534fdff	            mov r8d, dword [rbp - 0x2cc]	      4444	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	CALL_114
0x8e60	    0x8bbd30fdffff	            mov edi, dword [rbp - 0x2d0]	      4444	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	CALL_114
0x8e66	    0x8b8d2cfdffff	            mov ecx, dword [rbp - 0x2d4]	      4444	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	CALL_114
0x8e6c	    0x488d9550feff	                  lea rdx, [rbp - 0x1b0]	      4444	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	CALL_114
0x8e73	    0x488db5fcfbff	                  lea rsi, [rbp - 0x404]	      4444	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	CALL_114
0x8e7a	    0x8b85bcfcffff	            mov eax, dword [rbp - 0x344]	      4444	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	CALL_114
0x8e80	          0x4589c1	                            mov r9d, r8d	      4444	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	CALL_114
0x8e83	          0x4189f8	                            mov r8d, edi	      4444	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	CALL_114
0x8e86	            0x89c7	                            mov edi, eax	      4444	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	CALL_114
0x8e88	      0xe800000000	                          call 0x4008ecd	      4444	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	CALL_114
0x8e8d	    0x8985bcfcffff	            mov dword [rbp - 0x344], eax	      4444	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165	CALL_114
0x8e93	      0xe96e010000	                           jmp 0x4009046	      4422	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_55	IF_165
0x8e98	    0x8b85bcfcffff	            mov eax, dword [rbp - 0x344]	      4447	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_57
0x8e9e	    0x8985e8fcffff	            mov dword [rbp - 0x318], eax	      4447	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_57
0x8ea4	      0xe95d010000	                           jmp 0x4009046	      4447	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	ELSE_57
0x8ea9	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      4452	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	CALL_115
0x8eaf	            0x4898	                                    cdqe	      4452	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	CALL_115
0x8eb1	     0xfb680000000	                   movzx eax, byte [rax]	      4452	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	CALL_115
0x8eb8	           0xfbec0	                           movsx eax, al	      4452	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	CALL_115
0x8ebb	    0x8985b8fcffff	            mov dword [rbp - 0x348], eax	      4452	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	CALL_115
0x8ec1	    0x83bdb8fcffff	              cmp dword [rbp - 0x348], 0	      4453	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	IF_167
0x8ec8	            0x750f	                           jne 0x4008f19	      4453	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	IF_167
0x8eca	    0xc785b8fcffff	              mov dword [rbp - 0x348], 1	      4454	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	IF_167
0x8ed4	      0xe92d010000	                           jmp 0x4009046	      4454	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	IF_167
0x8ed9	    0x83bdb8fcffff	              cmp dword [rbp - 0x348], 1	      4455	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168
0x8ee0	     0xf8e20010000	                           jle 0x4009046	      4455	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168
0x8ee6	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      4460	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	IF_169
0x8eed	        0x4883c001	                              add rax, 1	      4460	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	IF_169
0x8ef1	           0xfb600	                   movzx eax, byte [rax]	      4460	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	IF_169
0x8ef4	            0x3c1f	                            cmp al, 0x1f	      4460	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	IF_169
0x8ef6	            0x7629	                           jbe 0x4008f61	      4460	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	IF_169
0x8ef8	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      4461	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	IF_169
0x8efe	          0xc1e008	                              shl eax, 8	      4461	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	IF_169
0x8f01	            0x89c2	                            mov edx, eax	      4461	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	IF_169
0x8f03	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      4461	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	IF_169
0x8f0a	        0x4883c001	                              add rax, 1	      4461	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	IF_169
0x8f0e	           0xfb600	                   movzx eax, byte [rax]	      4461	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	IF_169
0x8f11	           0xfb6c0	                           movzx eax, al	      4461	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	IF_169
0x8f14	             0x1d0	                            add eax, edx	      4461	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	IF_169
0x8f16	    0x8985bcfcffff	            mov dword [rbp - 0x344], eax	      4461	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	IF_169
0x8f1c	      0xe9e5000000	                           jmp 0x4009046	      4461	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	IF_169
0x8f21	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      4464	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	IF_170
0x8f28	        0x4883c001	                              add rax, 1	      4464	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	IF_170
0x8f2c	           0xfb600	                   movzx eax, byte [rax]	      4464	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	IF_170
0x8f2f	            0x84c0	                             test al, al	      4464	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	IF_170
0x8f31	            0x7523	                           jne 0x4008f96	      4464	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	IF_170
0x8f33	    0xc785b8fcffff	              mov dword [rbp - 0x348], 1	      4467	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	IF_170
0x8f3d	    0x8b95fcfbffff	            mov edx, dword [rbp - 0x404]	      4468	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	IF_170	CALL_116
0x8f43	    0x488d8590feff	                  lea rax, [rbp - 0x170]	      4468	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	IF_170	CALL_116
0x8f4a	            0x89d6	                            mov esi, edx	      4468	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	IF_170	CALL_116
0x8f4c	          0x4889c7	                            mov rdi, rax	      4468	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	IF_170	CALL_116
0x8f4f	      0xe800000000	                          call 0x4008f94	      4468	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	IF_170	CALL_116
0x8f54	            0xeb1a	                           jmp 0x4008fb0	      4468	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	IF_170	CALL_116
0x8f56	    0xc785b8fcffff	              mov dword [rbp - 0x348], 2	      4473	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	ELSE_61
0x8f60	    0x488d8590feff	                  lea rax, [rbp - 0x170]	      4474	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	ELSE_61	CALL_117
0x8f67	      0x66c7005858	                  mov word [rax], 0x5858	      4474	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	ELSE_61	CALL_117
0x8f6c	        0xc6400200	                   mov byte [rax + 2], 0	      4474	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	ELSE_61	CALL_117
0x8f70	    0x488d8590feff	                  lea rax, [rbp - 0x170]	      4476	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60
0x8f77	    0x48898580fdff	            mov qword [rbp - 0x280], rax	      4476	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60
0x8f7e	    0x488d8590feff	                  lea rax, [rbp - 0x170]	      4477	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	CALL_118
0x8f85	          0x4889c7	                            mov rdi, rax	      4477	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	CALL_118
0x8f88	      0xe800000000	                          call 0x4008fcd	      4477	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	CALL_118
0x8f8d	          0x83e801	                              sub eax, 1	      4477	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	CALL_118
0x8f90	    0x89852cfcffff	            mov dword [rbp - 0x3d4], eax	      4477	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	CALL_118
0x8f96	    0xc78530fcffff	              mov dword [rbp - 0x3d0], 0	      4478	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60
0x8fa0	    0x488b8580fdff	            mov rax, qword [rbp - 0x280]	      4479	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60
0x8fa7	        0x488d5001	                      lea rdx, [rax + 1]	      4479	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60
0x8fab	    0x48899580fdff	            mov qword [rbp - 0x280], rdx	      4479	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60
0x8fb2	           0xfb600	                   movzx eax, byte [rax]	      4479	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60
0x8fb5	           0xfb6c0	                           movzx eax, al	      4479	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60
0x8fb8	    0x8985fcfbffff	            mov dword [rbp - 0x404], eax	      4479	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60
0x8fbe	    0x83bd7cfcffff	              cmp dword [rbp - 0x384], 0	      4480	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	IF_171
0x8fc5	            0x7530	                           jne 0x4009037	      4480	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	IF_171
0x8fc7	    0x83bd80fcffff	              cmp dword [rbp - 0x380], 0	      4480	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	IF_171
0x8fce	            0x7527	                           jne 0x4009037	      4480	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	IF_171
0x8fd0	    0x8b852cfcffff	            mov eax, dword [rbp - 0x3d4]	      4482	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	IF_171
0x8fd6	          0x83c001	                              add eax, 1	      4482	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	IF_171
0x8fd9	    0x89854cfcffff	            mov dword [rbp - 0x3b4], eax	      4482	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	IF_171
0x8fdf	    0x8b0500000000	            mov eax, dword [0x04009025] 	      4483	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	IF_171	CALL_119
0x8fe5	    0x898534fcffff	            mov dword [rbp - 0x3cc], eax	      4483	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	IF_171	CALL_119
0x8feb	    0x8b856cfcffff	            mov eax, dword [rbp - 0x394]	      4484	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	IF_171
0x8ff1	    0x898550fcffff	            mov dword [rbp - 0x3b0], eax	      4484	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60	IF_171
0x8ff7	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      4486	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60
0x8ffd	    0x8985bcfcffff	            mov dword [rbp - 0x344], eax	      4486	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60
0x9003	            0xeb01	                           jmp 0x4009046	      4486	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_58	ELSE_59	IF_168	ELSE_60
0x9005	              0x90	                                     nop	      4411	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_155	IF_159	IF_163
0x9006	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4495	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_172
0x900d	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      4495	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_172
0x9013	            0x85c0	                           test eax, eax	      4493	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_172
0x9015	            0x740b	                            je 0x4009062	      4493	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_172
0x9017	    0x83bd1cfcffff	              cmp dword [rbp - 0x3e4], 0	      4493	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_172
0x901e	            0x7e1a	                           jle 0x400907a	      4493	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_172
0x9020	            0xeb6e	                           jmp 0x40090d0	      4493	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_172
0x9022	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4497	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_172
0x9029	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      4497	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_172
0x902f	          0x83e801	                              sub eax, 1	      4497	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_172
0x9032	    0x3b851cfcffff	            cmp eax, dword [rbp - 0x3e4]	      4498	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_172
0x9038	            0x7f56	                            jg 0x40090d0	      4498	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_172
0x903a	    0x488b05000000	            mov rax, qword [0x04009081] 	      4498	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_172
0x9041	    0x8b95bcfcffff	            mov edx, dword [rbp - 0x344]	      4498	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_172
0x9047	            0x89d7	                            mov edi, edx	      4498	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_172
0x9049	            0xffd0	                                call rax	      4498	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_172
0x904b	          0x83f802	                              cmp eax, 2	      4498	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_172
0x904e	            0x7540	                           jne 0x40090d0	      4498	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_172
0x9050	    0xc785fcfbffff	          mov dword [rbp - 0x404], 0x3e 	      4500	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_172
0x905a	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      4501	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_172
0x9060	    0x8985bcfcffff	            mov dword [rbp - 0x344], eax	      4501	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_172
0x9066	    0xc785c0fcffff	              mov dword [rbp - 0x340], 0	      4502	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_172
0x9070	    0xc785b8fcffff	              mov dword [rbp - 0x348], 1	      4503	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_172
0x907a	    0x8b0500000000	            mov eax, dword [0x040090c0] 	      4504	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_172	CALL_120
0x9080	    0x8985b4fcffff	            mov dword [rbp - 0x34c], eax	      4504	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_172	CALL_120
0x9086	    0x4883adb0fdff	              sub qword [rbp - 0x250], 1	      4507	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_172
0x908e	            0xeb21	                           jmp 0x40090f1	      4507	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_172
0x9090	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      4509	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_62	IF_173
0x9097	           0xfb600	                   movzx eax, byte [rax]	      4509	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_62	IF_173
0x909a	            0x84c0	                             test al, al	      4509	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_62	IF_173
0x909c	            0x7413	                            je 0x40090f1	      4509	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_62	IF_173
0x909e	    0x8b85b8fcffff	            mov eax, dword [rbp - 0x348]	      4510	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_62	IF_173
0x90a4	            0x4898	                                    cdqe	      4510	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_62	IF_173
0x90a6	        0x4883e801	                              sub rax, 1	      4510	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_62	IF_173
0x90aa	    0x480185b0fdff	           add qword [rbp - 0x250], rax 	      4510	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	ELSE_62	IF_173
0x90b1	    0x83bd5cfcffff	              cmp dword [rbp - 0x3a4], 0	      4515	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174
0x90b8	     0xf8e8d000000	                           jle 0x400918b	      4515	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174
0x90be	    0x83bdb8fcffff	              cmp dword [rbp - 0x348], 1	      4515	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174
0x90c5	     0xf8e80000000	                           jle 0x400918b	      4515	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174
0x90cb	    0x83bd2cfcffff	              cmp dword [rbp - 0x3d4], 0	      4515	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174
0x90d2	            0x7577	                           jne 0x400918b	      4515	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174
0x90d4	    0xc7852cfcffff	              mov dword [rbp - 0x3d4], 1	      4517	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174
0x90de	    0xc78530fcffff	          mov dword [rbp - 0x3d0], 0x3c 	      4518	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174
0x90e8	    0xc785fcfbffff	          mov dword [rbp - 0x404], 0x20 	      4519	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174
0x90f2	    0x83bd7cfcffff	              cmp dword [rbp - 0x384], 0	      4520	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174	IF_175
0x90f9	            0x7530	                           jne 0x400916b	      4520	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174	IF_175
0x90fb	    0x83bd80fcffff	              cmp dword [rbp - 0x380], 0	      4520	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174	IF_175
0x9102	            0x7527	                           jne 0x400916b	      4520	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174	IF_175
0x9104	    0x8b852cfcffff	            mov eax, dword [rbp - 0x3d4]	      4522	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174	IF_175
0x910a	          0x83c001	                              add eax, 1	      4522	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174	IF_175
0x910d	    0x89854cfcffff	            mov dword [rbp - 0x3b4], eax	      4522	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174	IF_175
0x9113	    0x8b0500000000	            mov eax, dword [0x04009159] 	      4523	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174	IF_175	CALL_121
0x9119	    0x898534fcffff	            mov dword [rbp - 0x3cc], eax	      4523	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174	IF_175	CALL_121
0x911f	    0x8b856cfcffff	            mov eax, dword [rbp - 0x394]	      4524	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174	IF_175
0x9125	    0x898550fcffff	            mov dword [rbp - 0x3b0], eax	      4524	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174	IF_175
0x912b	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      4526	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174
0x9131	    0x8985bcfcffff	            mov dword [rbp - 0x344], eax	      4526	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174
0x9137	    0xc785c0fcffff	              mov dword [rbp - 0x340], 0	      4527	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174
0x9141	    0xc785b8fcffff	              mov dword [rbp - 0x348], 1	      4528	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_154	IF_174
0x914b	    0x488385b0fdff	              add qword [rbp - 0x250], 1	      4533	screen.c	FUNCTION_28	FOR_1	ELSE_51
0x9153	    0x83bdb0fcffff	              cmp dword [rbp - 0x350], 0	      4535	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176
0x915a	     0xf84a1090000	                            je 0x4009b41	      4535	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176
0x9160	    0xc78514fcffff	              mov dword [rbp - 0x3ec], 1	      4538	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176
0x916a	    0x83bdf4fcffff	              cmp dword [rbp - 0x30c], 0	      4542	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_177
0x9171	            0x745e	                            je 0x4009211	      4542	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_177
0x9173	    0x488b8590fdff	            mov rax, qword [rbp - 0x270]	      4544	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_177	CALL_122
0x917a	            0x89c2	                            mov edx, eax	      4544	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_177	CALL_122
0x917c	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4544	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_177	CALL_122
0x9183	        0x488b4008	                mov rax, qword [rax + 8]	      4544	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_177	CALL_122
0x9187	    0x488b8de0fbff	            mov rcx, qword [rbp - 0x420]	      4544	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_177	CALL_122
0x918e	          0x4889ce	                            mov rsi, rcx	      4544	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_177	CALL_122
0x9191	          0x4889c7	                            mov rdi, rax	      4544	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_177	CALL_122
0x9194	      0xe800000000	                          call 0x40091d9	      4544	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_177	CALL_122
0x9199	    0x898588fcffff	            mov dword [rbp - 0x378], eax	      4544	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_177	CALL_122
0x919f	    0x83bd70fcffff	              cmp dword [rbp - 0x390], 0	      4546	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_177	IF_178
0x91a6	            0x750e	                           jne 0x40091f6	      4546	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_177	IF_178
0x91a8	    0x8b8588fcffff	            mov eax, dword [rbp - 0x378]	      4547	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_177	IF_178
0x91ae	    0x89856cfcffff	            mov dword [rbp - 0x394], eax	      4547	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_177	IF_178
0x91b4	            0xeb1b	                           jmp 0x4009211	      4547	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_177	IF_178
0x91b6	    0x8b956cfcffff	            mov edx, dword [rbp - 0x394]	      4549	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_177	CALL_123
0x91bc	    0x8b8588fcffff	            mov eax, dword [rbp - 0x378]	      4549	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_177	CALL_123
0x91c2	            0x89d6	                            mov esi, edx	      4549	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_177	CALL_123
0x91c4	            0x89c7	                            mov edi, eax	      4549	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_177	CALL_123
0x91c6	      0xe800000000	                          call 0x400920b	      4549	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_177	CALL_123
0x91cb	    0x89856cfcffff	            mov dword [rbp - 0x394], eax	      4549	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_177	CALL_123
0x91d1	    0x488b95b0fdff	            mov rdx, qword [rbp - 0x250]	      4556	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176
0x91d8	    0x488b85a8fdff	            mov rax, qword [rbp - 0x258]	      4556	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176
0x91df	          0x4829c2	                            sub rdx, rax	      4556	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176
0x91e2	          0x4889d0	                            mov rax, rdx	      4556	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176
0x91e5	    0x488985d8fdff	            mov qword [rbp - 0x228], rax	      4556	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176
0x91ec	    0x83bd8cfcffff	              cmp dword [rbp - 0x374], 0	      4557	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179
0x91f3	     0xf844e010000	                            je 0x4009387	      4557	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179
0x91f9	    0x4883bdd8fdff	              cmp qword [rbp - 0x228], 0	      4557	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179
0x9201	     0xf8e40010000	                           jle 0x4009387	      4557	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179
0x9207	    0x8b0500000000	            mov eax, dword [0x0400924d] 	      4561	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179
0x920d	    0x898558fdffff	            mov dword [rbp - 0x2a8], eax	      4561	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179
0x9213	    0xc70500000000	               mov dword [0x0400925d], 0	      4562	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179
0x921d	    0x83bd98fcffff	              cmp dword [rbp - 0x368], 0	      4564	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_124
0x9224	            0x7409	                            je 0x400926f	      4564	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_124
0x9226	    0x488d8514fcff	                  lea rax, [rbp - 0x3ec]	      4564	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_124
0x922d	            0xeb05	                           jmp 0x4009274	      4564	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_124
0x922f	      0xb800000000	                              mov eax, 0	      4564	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_124
0x9234	    0x488b95d8fdff	            mov rdx, qword [rbp - 0x228]	      4564	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_124
0x923b	          0x8d4aff	                      lea ecx, [rdx - 1]	      4564	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_124
0x923e	      0xba00000000	                              mov edx, 0	      4564	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_124
0x9243	          0x4889c6	                            mov rsi, rax	      4564	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_124
0x9246	            0x89cf	                            mov edi, ecx	      4564	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_124
0x9248	      0xe800000000	                          call 0x400928d	      4564	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_124
0x924d	    0x898588fcffff	            mov dword [rbp - 0x378], eax	      4564	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_124
0x9253	    0x8b0500000000	            mov eax, dword [0x04009299] 	      4570	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	IF_180
0x9259	            0x85c0	                           test eax, eax	      4570	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	IF_180
0x925b	            0x7421	                            je 0x40092be	      4570	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	IF_180
0x925d	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4572	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	IF_180
0x9264	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4572	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	IF_180
0x9268	    0xc78050020000	              mov dword [rax + 0x250], 1	      4572	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	IF_180
0x9272	    0xc7858cfcffff	              mov dword [rbp - 0x374], 0	      4573	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	IF_180
0x927c	            0xeb0c	                           jmp 0x40092ca	      4573	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	IF_180
0x927e	    0x8b8558fdffff	            mov eax, dword [rbp - 0x2a8]	      4576	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	ELSE_64
0x9284	    0x890500000000	            mov dword [0x040092ca], eax 	      4576	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	ELSE_64
0x928a	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4578	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	IF_181
0x9291	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4578	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	IF_181
0x9295	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      4578	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	IF_181
0x929b	            0x85c0	                           test eax, eax	      4578	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	IF_181
0x929d	            0x740a	                            je 0x40092e9	      4578	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	IF_181
0x929f	    0xc7858cfcffff	              mov dword [rbp - 0x374], 0	      4579	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	IF_181
0x92a9	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4584	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_125
0x92b0	        0x488b4008	                mov rax, qword [rax + 8]	      4584	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_125
0x92b4	    0x488b8de0fbff	            mov rcx, qword [rbp - 0x420]	      4584	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_125
0x92bb	      0xba00000000	                              mov edx, 0	      4584	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_125
0x92c0	          0x4889ce	                            mov rsi, rcx	      4584	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_125
0x92c3	          0x4889c7	                            mov rdi, rax	      4584	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_125
0x92c6	      0xe800000000	                          call 0x400930b	      4584	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_125
0x92cb	    0x488985a8fdff	            mov qword [rbp - 0x258], rax	      4584	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_125
0x92d2	    0x488b95d8fdff	            mov rdx, qword [rbp - 0x228]	      4585	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179
0x92d9	    0x488b85a8fdff	            mov rax, qword [rbp - 0x258]	      4585	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179
0x92e0	          0x4801d0	                            add rax, rdx	      4585	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179
0x92e3	    0x488985b0fdff	            mov qword [rbp - 0x250], rax	      4585	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179
0x92ea	    0x83bd70fcffff	              cmp dword [rbp - 0x390], 0	      4587	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	IF_182
0x92f1	            0x750e	                           jne 0x4009341	      4587	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	IF_182
0x92f3	    0x8b8588fcffff	            mov eax, dword [rbp - 0x378]	      4588	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	IF_182
0x92f9	    0x89856cfcffff	            mov dword [rbp - 0x394], eax	      4588	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	IF_182
0x92ff	            0xeb1b	                           jmp 0x400935c	      4588	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	IF_182
0x9301	    0x8b956cfcffff	            mov edx, dword [rbp - 0x394]	      4590	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_126
0x9307	    0x8b8588fcffff	            mov eax, dword [rbp - 0x378]	      4590	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_126
0x930d	            0x89d6	                            mov esi, edx	      4590	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_126
0x930f	            0x89c7	                            mov edi, eax	      4590	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_126
0x9311	      0xe800000000	                          call 0x4009356	      4590	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_126
0x9316	    0x89856cfcffff	            mov dword [rbp - 0x394], eax	      4590	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_126
0x931c	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      4594	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	IF_183
0x9322	            0x85c0	                           test eax, eax	      4594	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	IF_183
0x9324	            0x750c	                           jne 0x4009372	      4594	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	IF_183
0x9326	    0xc78500fdffff	              mov dword [rbp - 0x300], 0	      4595	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	IF_183
0x9330	            0xeb15	                           jmp 0x4009387	      4595	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	IF_183
0x9332	    0x488d8510fcff	                  lea rax, [rbp - 0x3f0]	      4597	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_127
0x9339	          0x4889c7	                            mov rdi, rax	      4597	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_127
0x933c	      0xe800000000	                          call 0x4009381	      4597	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_127
0x9341	    0x898500fdffff	            mov dword [rbp - 0x300], eax	      4597	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_179	CALL_127
0x9347	    0x83bd98fcffff	              cmp dword [rbp - 0x368], 0	      4607	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184
0x934e	     0xf8461030000	                            je 0x40096f5	      4607	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184
0x9354	    0x8b85a8fcffff	            mov eax, dword [rbp - 0x358]	      4607	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184
0x935a	            0x4898	                                    cdqe	      4607	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184
0x935c	    0x483b85d8fdff	            cmp rax, qword [rbp - 0x228]	      4607	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184
0x9363	     0xf8f4c030000	                            jg 0x40096f5	      4607	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184
0x9369	    0x8b85acfcffff	            mov eax, dword [rbp - 0x354]	      4607	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184
0x936f	            0x4898	                                    cdqe	      4607	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184
0x9371	    0x483b85d8fdff	            cmp rax, qword [rbp - 0x228]	      4607	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184
0x9378	     0xf8d37030000	                           jge 0x40096f5	      4607	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184
0x937e	    0xc785a4fcffff	              mov dword [rbp - 0x35c], 0	      4609	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184
0x9388	    0x83bd70fcffff	              cmp dword [rbp - 0x390], 0	      4611	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_185
0x938f	            0x750c	                           jne 0x40093dd	      4611	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_185
0x9391	    0x8b8588fcffff	            mov eax, dword [rbp - 0x378]	      4612	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_185
0x9397	    0x89856cfcffff	            mov dword [rbp - 0x394], eax	      4612	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_185
0x939d	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      4614	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186
0x93a3	            0x85c0	                           test eax, eax	      4614	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186
0x93a5	     0xf840a030000	                            je 0x40096f5	      4614	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186
0x93ab	    0x83bd8cfcffff	              cmp dword [rbp - 0x374], 0	      4614	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186
0x93b2	            0x740e	                            je 0x4009402	      4614	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186
0x93b4	    0x8b8514fcffff	            mov eax, dword [rbp - 0x3ec]	      4616	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186
0x93ba	            0x85c0	                           test eax, eax	      4616	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186
0x93bc	     0xf84f3020000	                            je 0x40096f5	      4616	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186
0x93c2	    0xc78518fcffff	          mov dword [rbp - 0x3e8], 0x2e 	      4622	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186
0x93cc	    0x8b0500000000	            mov eax, dword [0x04009412] 	      4624	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_187
0x93d2	            0x85c0	                           test eax, eax	      4624	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_187
0x93d4	            0x7433	                            je 0x4009449	      4624	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_187
0x93d6	    0x8b85b8fcffff	            mov eax, dword [rbp - 0x348]	      4626	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_187
0x93dc	            0x4898	                                    cdqe	      4626	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_187
0x93de	          0x48f7d8	                                 neg rax	      4626	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_187
0x93e1	          0x4889c2	                            mov rdx, rax	      4626	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_187
0x93e4	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      4626	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_187
0x93eb	          0x4801d0	                            add rax, rdx	      4626	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_187
0x93ee	    0x48898508feff	            mov qword [rbp - 0x1f8], rax	      4626	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_187
0x93f5	    0x8b85b8fcffff	            mov eax, dword [rbp - 0x348]	      4627	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_187
0x93fb	          0x83e801	                              sub eax, 1	      4627	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_187
0x93fe	            0x4898	                                    cdqe	      4627	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_187
0x9400	    0x482985d8fdff	            sub qword [rbp - 0x228], rax	      4627	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_187
0x9407	            0xeb12	                           jmp 0x400945b	      4627	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_187
0x9409	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      4631	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	ELSE_67
0x9410	        0x4883e801	                              sub rax, 1	      4631	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	ELSE_67
0x9414	    0x48898508feff	            mov qword [rbp - 0x1f8], rax	      4631	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	ELSE_67
0x941b	    0x488b9508feff	            mov rdx, qword [rbp - 0x1f8]	      4635	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_188
0x9422	    0x488b85a8fdff	            mov rax, qword [rbp - 0x258]	      4635	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_188
0x9429	          0x4829c2	                            sub rdx, rax	      4635	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_188
0x942c	    0x8b859cfcffff	            mov eax, dword [rbp - 0x364]	      4635	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_188
0x9432	            0x4898	                                    cdqe	      4635	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_188
0x9434	          0x4829c2	                            sub rdx, rax	      4635	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_188
0x9437	          0x4889d0	                            mov rax, rdx	      4635	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_188
0x943a	          0x4885c0	                           test rax, rax	      4635	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_188
0x943d	            0x7835	                            js 0x40094b4	      4635	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_188
0x943f	    0x488b9508feff	            mov rdx, qword [rbp - 0x1f8]	      4636	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_188
0x9446	    0x488b85a8fdff	            mov rax, qword [rbp - 0x258]	      4636	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_188
0x944d	          0x4829c2	                            sub rdx, rax	      4636	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_188
0x9450	          0x4889d0	                            mov rax, rdx	      4636	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_188
0x9453	          0x4889c2	                            mov rdx, rax	      4636	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_188
0x9456	    0x8b859cfcffff	            mov eax, dword [rbp - 0x364]	      4636	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_188
0x945c	            0x4898	                                    cdqe	      4636	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_188
0x945e	          0x4829c2	                            sub rdx, rax	      4636	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_188
0x9461	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	      4636	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_188
0x9468	          0x4801d0	                            add rax, rdx	      4636	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_188
0x946b	    0x48898510feff	            mov qword [rbp - 0x1f0], rax	      4636	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_188
0x9472	            0xeb0e	                           jmp 0x40094c2	      4636	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_188
0x9474	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      4638	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	ELSE_68
0x947b	    0x48898510feff	            mov qword [rbp - 0x1f0], rax	      4638	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	ELSE_68
0x9482	    0x8b0500000000	            mov eax, dword [0x040094c8] 	      4639	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186
0x9488	    0x488b8d08feff	            mov rcx, qword [rbp - 0x1f8]	      4639	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186
0x948f	    0x488b95a8fdff	            mov rdx, qword [rbp - 0x258]	      4639	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186
0x9496	          0x4829d1	                            sub rcx, rdx	      4639	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186
0x9499	          0x4889ca	                            mov rdx, rcx	      4639	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186
0x949c	            0x29d0	                            sub eax, edx	      4639	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186
0x949e	    0x890500000000	            mov dword [0x040094e4], eax 	      4639	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186
0x94a4	    0x8b8dd4fbffff	            mov ecx, dword [rbp - 0x42c]	      4640	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	CALL_128
0x94aa	    0x488d9518fcff	                  lea rdx, [rbp - 0x3e8]	      4640	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	CALL_128
0x94b1	    0x488bb510feff	            mov rsi, qword [rbp - 0x1f0]	      4640	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	CALL_128
0x94b8	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4640	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	CALL_128
0x94bf	          0x4189c8	                            mov r8d, ecx	      4640	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	CALL_128
0x94c2	      0xb900000000	                              mov ecx, 0	      4640	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	CALL_128
0x94c7	          0x4889c7	                            mov rdi, rax	      4640	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	CALL_128
0x94ca	      0xe800000000	                          call 0x400950f	      4640	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	CALL_128
0x94cf	    0x898570fdffff	            mov dword [rbp - 0x290], eax	      4640	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	CALL_128
0x94d5	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      4642	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186
0x94dc	            0x89c2	                            mov edx, eax	      4642	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186
0x94de	    0x8b8570fdffff	            mov eax, dword [rbp - 0x290]	      4642	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186
0x94e4	             0x1d0	                            add eax, edx	      4642	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186
0x94e6	    0x8985a8fcffff	            mov dword [rbp - 0x358], eax	      4642	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186
0x94ec	    0x8b8518fcffff	            mov eax, dword [rbp - 0x3e8]	      4646	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_189
0x94f2	          0x83f82e	                           cmp eax, 0x2e	      4646	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_189
0x94f5	            0x746d	                            je 0x40095a4	      4646	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_189
0x94f7	    0x8b0500000000	            mov eax, dword [0x0400953d] 	      4647	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_189
0x94fd	          0x83e010	                           and eax, 0x10	      4647	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_189
0x9500	            0x85c0	                           test eax, eax	      4647	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_189
0x9502	            0x7460	                            je 0x40095a4	      4647	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_189
0x9504	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4648	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_189
0x950b	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4648	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_189
0x950f	    0x483b85e0fbff	            cmp rax, qword [rbp - 0x420]	      4648	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_189
0x9516	            0x754c	                           jne 0x40095a4	      4648	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_189
0x9518	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4649	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_189
0x951f	          0x8b4040	            mov eax, dword [rax + 0x40] 	      4649	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_189
0x9522	    0x488b8d08feff	            mov rcx, qword [rbp - 0x1f8]	      4650	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_189
0x9529	    0x488b95a8fdff	            mov rdx, qword [rbp - 0x258]	      4650	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_189
0x9530	          0x4829d1	                            sub rcx, rdx	      4650	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_189
0x9533	          0x4889ca	                            mov rdx, rcx	      4650	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_189
0x9536	            0x39d0	                            cmp eax, edx	      4649	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_189
0x9538	            0x7c2a	                            jl 0x40095a4	      4649	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_189
0x953a	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4651	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_189
0x9541	          0x8b4040	            mov eax, dword [rax + 0x40] 	      4651	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_189
0x9544	    0x3b85a8fcffff	            cmp eax, dword [rbp - 0x358]	      4651	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_189
0x954a	            0x7d18	                           jge 0x40095a4	      4651	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_189
0x954c	    0xc78518fcffff	          mov dword [rbp - 0x3e8], 0x2e 	      4653	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_189
0x9556	    0x488b85e0fbff	            mov rax, qword [rbp - 0x420]	      4654	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_189
0x955d	    0x488905000000	            mov qword [0x040095a4], rax 	      4654	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_189
0x9564	    0x8b8518fcffff	            mov eax, dword [rbp - 0x3e8]	      4657	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_190
0x956a	          0x83f82e	                           cmp eax, 0x2e	      4657	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_190
0x956d	            0x7579	                           jne 0x4009628	      4657	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_190
0x956f	    0x488b8510feff	            mov rax, qword [rbp - 0x1f0]	      4657	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_190
0x9576	    0x483b8508feff	            cmp rax, qword [rbp - 0x1f8]	      4657	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_190
0x957d	            0x7469	                            je 0x4009628	      4657	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_190
0x957f	    0x488b9510feff	            mov rdx, qword [rbp - 0x1f0]	      4658	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_190
0x9586	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	      4658	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_190
0x958d	          0x4829c2	                            sub rdx, rax	      4658	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_190
0x9590	    0x8b8570fdffff	            mov eax, dword [rbp - 0x290]	      4658	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_190
0x9596	            0x4898	                                    cdqe	      4658	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_190
0x9598	          0x4801c2	                            add rdx, rax	      4658	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_190
0x959b	    0x8b85a0fcffff	            mov eax, dword [rbp - 0x360]	      4658	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_190
0x95a1	            0x4898	                                    cdqe	      4658	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_190
0x95a3	          0x4839c2	                            cmp rdx, rax	      4658	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_190
0x95a6	            0x7e40	                           jle 0x4009628	      4658	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_190
0x95a8	    0x488b85e0fbff	            mov rax, qword [rbp - 0x420]	      4662	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_190
0x95af	        0x4883c001	                              add rax, 1	      4662	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_190
0x95b3	    0x488905000000	            mov qword [0x040095fa], rax 	      4662	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_190
0x95ba	    0x488b9510feff	            mov rdx, qword [rbp - 0x1f0]	      4663	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_190
0x95c1	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	      4663	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_190
0x95c8	          0x4829c2	                            sub rdx, rax	      4663	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_190
0x95cb	          0x4889d0	                            mov rax, rdx	      4663	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_190
0x95ce	            0x89c2	                            mov edx, eax	      4663	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_190
0x95d0	    0x8b8570fdffff	            mov eax, dword [rbp - 0x290]	      4663	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_190
0x95d6	             0x1c2	                            add edx, eax	      4663	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_190
0x95d8	    0x8b85a0fcffff	            mov eax, dword [rbp - 0x360]	      4663	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_190
0x95de	            0x29c2	                            sub edx, eax	      4663	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_190
0x95e0	            0x89d0	                            mov eax, edx	      4663	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_190
0x95e2	    0x890500000000	            mov dword [0x04009628], eax 	      4663	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_190
0x95e8	    0x8b8518fcffff	            mov eax, dword [rbp - 0x3e8]	      4667	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_191
0x95ee	          0x83f82e	                           cmp eax, 0x2e	      4667	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_191
0x95f1	            0x7415	                            je 0x4009648	      4667	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_191
0x95f3	    0x8b8518fcffff	            mov eax, dword [rbp - 0x3e8]	      4668	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_191
0x95f9	            0x89c0	                            mov eax, eax	      4668	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_191
0x95fb	    0x8b0485000000	                  mov eax, dword [rax*4]	      4668	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_191
0x9602	    0x8985a4fcffff	            mov dword [rbp - 0x35c], eax	      4668	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_191
0x9608	    0x8b0500000000	            mov eax, dword [0x0400964e] 	      4670	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192
0x960e	            0x85c0	                           test eax, eax	      4670	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192
0x9610	     0xf8e9f000000	                           jle 0x40096f5	      4670	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192
0x9616	    0x488b8510feff	            mov rax, qword [rbp - 0x1f0]	      4672	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	IF_193
0x961d	    0x483b8508feff	            cmp rax, qword [rbp - 0x1f8]	      4672	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	IF_193
0x9624	            0x746b	                            je 0x40096d1	      4672	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	IF_193
0x9626	    0x488b9510feff	            mov rdx, qword [rbp - 0x1f0]	      4673	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	IF_193
0x962d	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	      4673	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	IF_193
0x9634	          0x4829c2	                            sub rdx, rax	      4673	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	IF_193
0x9637	    0x8b0500000000	            mov eax, dword [0x0400967d] 	      4673	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	IF_193
0x963d	            0x4898	                                    cdqe	      4673	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	IF_193
0x963f	          0x4801c2	                            add rdx, rax	      4673	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	IF_193
0x9642	    0x8b85a0fcffff	            mov eax, dword [rbp - 0x360]	      4673	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	IF_193
0x9648	            0x4898	                                    cdqe	      4673	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	IF_193
0x964a	          0x4839c2	                            cmp rdx, rax	      4673	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	IF_193
0x964d	            0x7c42	                            jl 0x40096d1	      4673	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	IF_193
0x964f	    0x488b85e0fbff	            mov rax, qword [rbp - 0x420]	      4677	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	IF_193
0x9656	        0x4883c001	                              add rax, 1	      4677	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	IF_193
0x965a	    0x488905000000	            mov qword [0x040096a1], rax 	      4677	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	IF_193
0x9661	    0x488b9510feff	            mov rdx, qword [rbp - 0x1f0]	      4678	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	IF_193
0x9668	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	      4678	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	IF_193
0x966f	          0x4829c2	                            sub rdx, rax	      4678	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	IF_193
0x9672	          0x4889d0	                            mov rax, rdx	      4678	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	IF_193
0x9675	            0x89c2	                            mov edx, eax	      4678	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	IF_193
0x9677	    0x8b0500000000	            mov eax, dword [0x040096bd] 	      4678	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	IF_193
0x967d	             0x1c2	                            add edx, eax	      4678	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	IF_193
0x967f	    0x8b85a0fcffff	            mov eax, dword [rbp - 0x360]	      4678	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	IF_193
0x9685	            0x29c2	                            sub edx, eax	      4678	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	IF_193
0x9687	            0x89d0	                            mov eax, edx	      4678	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	IF_193
0x9689	    0x890500000000	            mov dword [0x040096cf], eax 	      4678	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	IF_193
0x968f	            0xeb24	                           jmp 0x40096f5	      4678	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	IF_193
0x9691	    0x488b9508feff	            mov rdx, qword [rbp - 0x1f8]	      4683	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	ELSE_69
0x9698	    0x488b85a8fdff	            mov rax, qword [rbp - 0x258]	      4683	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	ELSE_69
0x969f	          0x4829c2	                            sub rdx, rax	      4683	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	ELSE_69
0x96a2	          0x4889d0	                            mov rax, rdx	      4683	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	ELSE_69
0x96a5	            0x89c2	                            mov edx, eax	      4683	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	ELSE_69
0x96a7	    0x8b0500000000	            mov eax, dword [0x040096ed] 	      4683	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	ELSE_69
0x96ad	             0x1d0	                            add eax, edx	      4683	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	ELSE_69
0x96af	    0x890500000000	            mov dword [0x040096f5], eax 	      4683	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_184	IF_186	IF_192	ELSE_69
0x96b5	    0x83bda4fcffff	              cmp dword [rbp - 0x35c], 0	      4687	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_194
0x96bc	            0x7441	                            je 0x400973f	      4687	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_194
0x96be	    0x83bd70fcffff	              cmp dword [rbp - 0x390], 0	      4689	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_194	IF_195
0x96c5	            0x751d	                           jne 0x4009724	      4689	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_194	IF_195
0x96c7	    0x8b95a4fcffff	            mov edx, dword [rbp - 0x35c]	      4690	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_194	CALL_129
0x96cd	    0x8b856cfcffff	            mov eax, dword [rbp - 0x394]	      4690	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_194	CALL_129
0x96d3	            0x89d6	                            mov esi, edx	      4690	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_194	CALL_129
0x96d5	            0x89c7	                            mov edi, eax	      4690	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_194	CALL_129
0x96d7	      0xe800000000	                          call 0x400971c	      4690	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_194	CALL_129
0x96dc	    0x89856cfcffff	            mov dword [rbp - 0x394], eax	      4690	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_194	CALL_129
0x96e2	            0xeb1b	                           jmp 0x400973f	      4690	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_194	CALL_129
0x96e4	    0x8b956cfcffff	            mov edx, dword [rbp - 0x394]	      4692	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_194	CALL_130
0x96ea	    0x8b85a4fcffff	            mov eax, dword [rbp - 0x35c]	      4692	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_194	CALL_130
0x96f0	            0x89d6	                            mov esi, edx	      4692	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_194	CALL_130
0x96f2	            0x89c7	                            mov edi, eax	      4692	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_194	CALL_130
0x96f4	      0xe800000000	                          call 0x4009739	      4692	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_194	CALL_130
0x96f9	    0x89856cfcffff	            mov dword [rbp - 0x394], eax	      4692	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_194	CALL_130
0x96ff	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4699	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x9706	    0x8b8030020000	           mov eax, dword [rax + 0x230] 	      4699	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x970c	            0x85c0	                           test eax, eax	      4699	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x970e	     0xf84f4010000	                            je 0x4009948	      4699	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x9714	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      4699	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x971a	    0x398524fdffff	           cmp dword [rbp - 0x2dc], eax 	      4699	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x9720	     0xf85e2010000	                           jne 0x4009948	      4699	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x9726	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      4700	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_132
0x972c	      0x3dff000000	                           cmp eax, 0xff	      4700	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_132
0x9731	     0xf8fd1010000	                            jg 0x4009948	      4700	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_132
0x9737	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      4700	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_132
0x973d	           0xfb6c0	                           movzx eax, al	      4700	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_132
0x9740	            0x4898	                                    cdqe	      4700	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_132
0x9742	     0xfb680000000	                   movzx eax, byte [rax]	      4700	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_132
0x9749	            0x84c0	                             test al, al	      4700	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_132
0x974b	     0xf84b7010000	                            je 0x4009948	      4700	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_132
0x9751	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      4700	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_132
0x9758	           0xfb600	                   movzx eax, byte [rax]	      4700	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_132
0x975b	           0xfb6c0	                           movzx eax, al	      4700	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_132
0x975e	            0x4898	                                    cdqe	      4700	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_132
0x9760	     0xfb680000000	                   movzx eax, byte [rax]	      4700	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_132
0x9767	            0x84c0	                             test al, al	      4700	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_132
0x9769	     0xf8599010000	                           jne 0x4009948	      4700	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_132
0x976f	    0x8b0500000000	            mov eax, dword [0x040097b5] 	      4703	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x9775	            0x85c0	                           test eax, eax	      4703	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x9777	            0x7423	                            je 0x40097dc	      4703	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x9779	    0x488b05000000	            mov rax, qword [0x040097c0] 	      4703	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x9780	    0x488b95b0fdff	            mov rdx, qword [rbp - 0x250]	      4703	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x9787	        0x488d4aff	                      lea rcx, [rdx - 1]	      4703	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x978b	    0x488b95a8fdff	            mov rdx, qword [rbp - 0x258]	      4703	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x9792	          0x4889ce	                            mov rsi, rcx	      4703	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x9795	          0x4889d7	                            mov rdi, rdx	      4703	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x9798	            0xffd0	                                call rax	      4703	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x979a	            0xeb05	                           jmp 0x40097e1	      4703	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x979c	      0xb800000000	                              mov eax, 0	      4703	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x97a1	    0x898574fdffff	            mov dword [rbp - 0x28c], eax	      4703	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x97a7	    0x8b8574fdffff	            mov eax, dword [rbp - 0x28c]	      4705	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x97ad	            0x4898	                                    cdqe	      4705	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x97af	          0x48f7d0	                                 not rax	      4705	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x97b2	          0x4889c2	                            mov rdx, rax	      4705	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x97b5	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      4705	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x97bc	          0x4801d0	                            add rax, rdx	      4705	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x97bf	    0x48898530feff	            mov qword [rbp - 0x1d0], rax	      4705	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x97c6	    0x488b8590fdff	            mov rax, qword [rbp - 0x270]	      4712	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_133
0x97cd	            0x89c1	                            mov ecx, eax	      4712	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_133
0x97cf	    0x488b9530feff	            mov rdx, qword [rbp - 0x1d0]	      4712	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_133
0x97d6	    0x488bb5a8fdff	            mov rsi, qword [rbp - 0x258]	      4712	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_133
0x97dd	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4712	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_133
0x97e4	    0x41b800000000	                              mov r8d, 0	      4712	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_133
0x97ea	          0x4889c7	                            mov rdi, rax	      4712	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_133
0x97ed	      0xe800000000	                          call 0x4009832	      4712	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_133
0x97f2	          0x83e801	                              sub eax, 1	      4712	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_133
0x97f5	    0x89852cfcffff	            mov dword [rbp - 0x3d4], eax	      4712	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	CALL_133
0x97fb	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      4714	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_197
0x9801	          0x83f809	                              cmp eax, 9	      4714	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_197
0x9804	            0x7564	                           jne 0x40098aa	      4714	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_197
0x9806	    0x8b952cfcffff	            mov edx, dword [rbp - 0x3d4]	      4714	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_197
0x980c	    0x8b851cfcffff	            mov eax, dword [rbp - 0x3e4]	      4714	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_197
0x9812	             0x1c2	                            add edx, eax	      4714	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_197
0x9814	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4714	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_197
0x981b	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      4714	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_197
0x9821	            0x39c2	                            cmp edx, eax	      4714	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_197
0x9823	            0x7e45	                           jle 0x40098aa	      4714	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_197
0x9825	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4715	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_197
0x982c	        0x488b4008	                mov rax, qword [rax + 8]	      4715	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_197
0x9830	    0x488b80901500	          mov rax, qword [rax + 0x1590] 	      4715	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_197
0x9837	            0x89c6	                            mov esi, eax	      4715	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_197
0x9839	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4716	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_197
0x9840	        0x488b4008	                mov rax, qword [rax + 8]	      4716	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_197
0x9844	    0x488b80901500	          mov rax, qword [rax + 0x1590] 	      4716	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_197
0x984b	          0x4863c8	                         movsxd rcx, eax	      4716	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_197
0x984e	    0x488b8590fdff	            mov rax, qword [rbp - 0x270]	      4716	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_197
0x9855	            0x4899	                                     cqo	      4716	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_197
0x9857	          0x48f7f9	                                idiv rcx	      4716	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_197
0x985a	          0x4889d0	                            mov rax, rdx	      4716	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_197
0x985d	            0x29c6	                            sub esi, eax	      4715	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_197
0x985f	            0x89f0	                            mov eax, esi	      4715	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_197
0x9861	          0x83e801	                              sub eax, 1	      4715	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_197
0x9864	    0x89852cfcffff	            mov dword [rbp - 0x3d4], eax	      4715	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_197
0x986a	    0x83bd74fdffff	              cmp dword [rbp - 0x28c], 0	      4719	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x9871	            0x7e07	                           jle 0x40098ba	      4719	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x9873	      0xb83c000000	                           mov eax, 0x3c	      4719	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x9878	            0xeb05	                           jmp 0x40098bf	      4719	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x987a	      0xb820000000	                           mov eax, 0x20	      4719	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x987f	    0x898530fcffff	            mov dword [rbp - 0x3d0], eax	      4719	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196
0x9885	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      4723	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_198	CALL_134
0x988b	          0x83f820	                           cmp eax, 0x20	      4723	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_198	CALL_134
0x988e	            0x740b	                            je 0x40098db	      4723	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_198	CALL_134
0x9890	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      4723	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_198	CALL_134
0x9896	          0x83f809	                              cmp eax, 9	      4723	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_198	CALL_134
0x9899	            0x756d	                           jne 0x4009948	      4723	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_198	CALL_134
0x989b	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      4726	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_198	IF_199
0x98a1	          0x83f809	                              cmp eax, 9	      4726	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_198	IF_199
0x98a4	            0x7547	                           jne 0x400992d	      4726	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_198	IF_199
0x98a6	    0x8b8510fdffff	            mov eax, dword [rbp - 0x2f0]	      4728	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_198	IF_199
0x98ac	     0x1852cfcffff	            add dword [rbp - 0x3d4], eax	      4728	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_198	IF_199
0x98b2	    0x8b8510fdffff	            mov eax, dword [rbp - 0x2f0]	      4728	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_198	IF_199
0x98b8	            0x4898	                                    cdqe	      4728	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_198	IF_199
0x98ba	    0x48298590fdff	            sub qword [rbp - 0x270], rax	      4728	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_198	IF_199
0x98c1	    0xc78510fdffff	              mov dword [rbp - 0x2f0], 0	      4728	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_198	IF_199
0x98cb	    0x8b850cfdffff	            mov eax, dword [rbp - 0x2f4]	      4728	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_198	IF_199
0x98d1	    0x29851cfcffff	            sub dword [rbp - 0x3e4], eax	      4728	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_198	IF_199
0x98d7	    0x8b850cfdffff	            mov eax, dword [rbp - 0x2f4]	      4728	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_198	IF_199
0x98dd	    0x898520fdffff	            mov dword [rbp - 0x2e0], eax	      4728	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_198	IF_199
0x98e3	    0xc7850cfdffff	              mov dword [rbp - 0x2f4], 0	      4728	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_198	IF_199
0x98ed	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4730	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_198	IF_200
0x98f4	    0x8b8034020000	           mov eax, dword [rax + 0x234] 	      4730	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_198	IF_200
0x98fa	            0x85c0	                           test eax, eax	      4730	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_198	IF_200
0x98fc	            0x750a	                           jne 0x4009948	      4730	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_198	IF_200
0x98fe	    0xc785fcfbffff	          mov dword [rbp - 0x404], 0x20 	      4731	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_196	IF_198	IF_200
0x9908	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4738	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x990f	    0x8b8034020000	           mov eax, dword [rax + 0x234] 	      4738	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x9915	            0x85c0	                           test eax, eax	      4738	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x9917	     0xf841c010000	                            je 0x4009a79	      4738	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x991d	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      4739	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x9923	      0x3da0000000	                           cmp eax, 0xa0	      4739	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x9928	            0x7421	                            je 0x400998b	      4739	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x992a	    0x83bdc0fcffff	              cmp dword [rbp - 0x340], 0	      4741	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x9931	            0x7422	                            je 0x4009995	      4741	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x9933	    0x81bdbcfcffff	          cmp dword [rbp - 0x344], 0xa0 	      4741	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x993d	            0x740c	                            je 0x400998b	      4741	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x993f	    0x81bdbcfcffff	        cmp dword [rbp - 0x344], 0x202f 	      4741	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x9949	            0x750a	                           jne 0x4009995	      4741	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x994b	    0x8b0500000000	            mov eax, dword [0x04009991] 	      4743	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x9951	            0x85c0	                           test eax, eax	      4743	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x9953	            0x753f	                           jne 0x40099d4	      4743	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x9955	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      4744	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x995b	          0x83f820	                           cmp eax, 0x20	      4744	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x995e	     0xf85d5000000	                           jne 0x4009a79	      4744	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x9964	    0x8b0500000000	            mov eax, dword [0x040099aa] 	      4744	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x996a	            0x85c0	                           test eax, eax	      4744	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x996c	     0xf84c7000000	                            je 0x4009a79	      4744	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x9972	    0x488b95b0fdff	            mov rdx, qword [rbp - 0x250]	      4744	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x9979	    0x488b85a8fdff	            mov rax, qword [rbp - 0x258]	      4744	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x9980	          0x4829c2	                            sub rdx, rax	      4744	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x9983	    0x8b85d0fcffff	            mov eax, dword [rbp - 0x330]	      4744	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x9989	            0x4898	                                    cdqe	      4744	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x998b	          0x4839c2	                            cmp rdx, rax	      4744	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x998e	     0xf8fa5000000	                            jg 0x4009a79	      4744	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x9994	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      4746	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x999a	          0x83f820	                           cmp eax, 0x20	      4746	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x999d	            0x7508	                           jne 0x40099e7	      4746	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x999f	    0x8b0500000000	            mov eax, dword [0x040099e5] 	      4746	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x99a5	            0xeb06	                           jmp 0x40099ed	      4746	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x99a7	    0x8b0500000000	            mov eax, dword [0x040099ed] 	      4746	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x99ad	    0x8985fcfbffff	            mov dword [rbp - 0x404], eax	      4746	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x99b3	    0x83bd7cfcffff	              cmp dword [rbp - 0x384], 0	      4747	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	IF_202
0x99ba	            0x752b	                           jne 0x4009a27	      4747	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	IF_202
0x99bc	    0x83bd80fcffff	              cmp dword [rbp - 0x380], 0	      4747	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	IF_202
0x99c3	            0x7522	                           jne 0x4009a27	      4747	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	IF_202
0x99c5	    0xc7854cfcffff	              mov dword [rbp - 0x3b4], 1	      4749	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	IF_202
0x99cf	    0x8b0500000000	            mov eax, dword [0x04009a15] 	      4750	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	IF_202	CALL_135
0x99d5	    0x898534fcffff	            mov dword [rbp - 0x3cc], eax	      4750	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	IF_202	CALL_135
0x99db	    0x8b856cfcffff	            mov eax, dword [rbp - 0x394]	      4751	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	IF_202
0x99e1	    0x898550fcffff	            mov dword [rbp - 0x3b0], eax	      4751	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	IF_202
0x99e7	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      4754	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x99ed	    0x8985bcfcffff	            mov dword [rbp - 0x344], eax	      4754	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201
0x99f3	    0x8b0500000000	            mov eax, dword [0x04009a39] 	      4755	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	IF_203	CALL_136
0x99f9	            0x85c0	                           test eax, eax	      4755	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	IF_203	CALL_136
0x99fb	            0x7432	                            je 0x4009a6f	      4755	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	IF_203	CALL_136
0x99fd	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      4755	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	IF_203	CALL_136
0x9a03	            0x89c7	                            mov edi, eax	      4755	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	IF_203	CALL_136
0x9a05	      0xe800000000	                          call 0x4009a4a	      4755	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	IF_203	CALL_136
0x9a0a	          0x83f801	                              cmp eax, 1	      4755	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	IF_203	CALL_136
0x9a0d	            0x7e20	                           jle 0x4009a6f	      4755	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	IF_203	CALL_136
0x9a0f	    0xc785c0fcffff	              mov dword [rbp - 0x340], 1	      4757	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	IF_203
0x9a19	    0xc78550feffff	              mov dword [rbp - 0x1b0], 0	      4758	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	IF_203
0x9a23	    0xc785fcfbffff	          mov dword [rbp - 0x404], 0xc0 	      4759	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	IF_203
0x9a2d	            0xeb0a	                           jmp 0x4009a79	      4759	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	IF_203
0x9a2f	    0xc785c0fcffff	              mov dword [rbp - 0x340], 0	      4762	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	IF_201	ELSE_71
0x9a39	    0x81bdd0fcffff	    cmp dword [rbp - 0x330], 0x7fffffff 	      4766	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204
0x9a43	     0xf84b8000000	                            je 0x4009b41	      4766	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204
0x9a49	    0x8b85d0fcffff	            mov eax, dword [rbp - 0x330]	      4766	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204
0x9a4f	          0x4863d0	                         movsxd rdx, eax	      4766	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204
0x9a52	    0x488b85a8fdff	            mov rax, qword [rbp - 0x258]	      4766	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204
0x9a59	          0x4801d0	                            add rax, rdx	      4766	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204
0x9a5c	    0x483b85b0fdff	            cmp rax, qword [rbp - 0x250]	      4766	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204
0x9a63	     0xf8398000000	                           jae 0x4009b41	      4766	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204
0x9a69	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      4766	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204
0x9a6f	          0x83f820	                           cmp eax, 0x20	      4766	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204
0x9a72	     0xf8589000000	                           jne 0x4009b41	      4766	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204
0x9a78	    0x8b0500000000	            mov eax, dword [0x04009abe] 	      4768	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204
0x9a7e	    0x8985fcfbffff	            mov dword [rbp - 0x404], eax	      4768	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204
0x9a84	    0x83bd70fcffff	              cmp dword [rbp - 0x390], 0	      4769	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204	IF_205
0x9a8b	            0x7522	                           jne 0x4009aef	      4769	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204	IF_205
0x9a8d	    0xc7854cfcffff	              mov dword [rbp - 0x3b4], 1	      4771	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204	IF_205
0x9a97	    0x8b0500000000	            mov eax, dword [0x04009add] 	      4772	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204	IF_205	CALL_137
0x9a9d	    0x898534fcffff	            mov dword [rbp - 0x3cc], eax	      4772	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204	IF_205	CALL_137
0x9aa3	    0x8b856cfcffff	            mov eax, dword [rbp - 0x394]	      4773	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204	IF_205
0x9aa9	    0x898550fcffff	            mov dword [rbp - 0x3b0], eax	      4773	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204	IF_205
0x9aaf	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      4776	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204
0x9ab5	    0x8985bcfcffff	            mov dword [rbp - 0x344], eax	      4776	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204
0x9abb	    0x8b0500000000	            mov eax, dword [0x04009b01] 	      4777	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204	IF_206	CALL_138
0x9ac1	            0x85c0	                           test eax, eax	      4777	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204	IF_206	CALL_138
0x9ac3	            0x7432	                            je 0x4009b37	      4777	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204	IF_206	CALL_138
0x9ac5	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      4777	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204	IF_206	CALL_138
0x9acb	            0x89c7	                            mov edi, eax	      4777	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204	IF_206	CALL_138
0x9acd	      0xe800000000	                          call 0x4009b12	      4777	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204	IF_206	CALL_138
0x9ad2	          0x83f801	                              cmp eax, 1	      4777	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204	IF_206	CALL_138
0x9ad5	            0x7e20	                           jle 0x4009b37	      4777	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204	IF_206	CALL_138
0x9ad7	    0xc785c0fcffff	              mov dword [rbp - 0x340], 1	      4779	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204	IF_206
0x9ae1	    0xc78550feffff	              mov dword [rbp - 0x1b0], 0	      4780	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204	IF_206
0x9aeb	    0xc785fcfbffff	          mov dword [rbp - 0x404], 0xc0 	      4781	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204	IF_206
0x9af5	            0xeb0a	                           jmp 0x4009b41	      4781	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204	IF_206
0x9af7	    0xc785c0fcffff	              mov dword [rbp - 0x340], 0	      4784	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_176	ELSE_71	IF_204	ELSE_72
0x9b01	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      4792	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	CALL_139
0x9b07	            0x89c7	                            mov edi, eax	      4792	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	CALL_139
0x9b09	      0xe800000000	                          call 0x4009b4e	      4792	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	CALL_139
0x9b0e	            0x85c0	                           test eax, eax	      4792	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	CALL_139
0x9b10	     0xf85550a0000	                           jne 0x400a5ab	      4792	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	CALL_139
0x9b16	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      4799	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x9b1c	          0x83f809	                              cmp eax, 9	      4799	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x9b1f	     0xf8551040000	                           jne 0x4009fb6	      4799	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x9b25	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4799	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x9b2c	    0x8b8034020000	           mov eax, dword [rax + 0x234] 	      4799	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x9b32	            0x85c0	                           test eax, eax	      4799	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x9b34	            0x740e	                            je 0x4009b84	      4799	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x9b36	    0x8b0500000000	            mov eax, dword [0x04009b7c] 	      4799	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x9b3c	            0x85c0	                           test eax, eax	      4799	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x9b3e	     0xf8432040000	                            je 0x4009fb6	      4799	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x9b44	    0xc78538fdffff	              mov dword [rbp - 0x2c8], 0	      4801	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x9b4e	    0x488b8590fdff	            mov rax, qword [rbp - 0x270]	      4802	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x9b55	    0x48898518feff	            mov qword [rbp - 0x1e8], rax	      4802	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x9b5c	    0x488b05000000	            mov rax, qword [0x04009ba3] 	      4806	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_209
0x9b63	           0xfb600	                   movzx eax, byte [rax]	      4806	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_209
0x9b66	            0x84c0	                             test al, al	      4806	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_209
0x9b68	            0x7463	                            je 0x4009c0d	      4806	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_209
0x9b6a	    0x488b8590fdff	            mov rax, qword [rbp - 0x270]	      4806	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_209
0x9b71	    0x483b8598fdff	            cmp rax, qword [rbp - 0x268]	      4806	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_209
0x9b78	            0x7553	                           jne 0x4009c0d	      4806	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_209
0x9b7a	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4806	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_209
0x9b81	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      4806	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_209
0x9b87	            0x85c0	                           test eax, eax	      4806	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_209
0x9b89	            0x7442	                            je 0x4009c0d	      4806	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_209
0x9b8b	    0x8b0500000000	            mov eax, dword [0x04009bd1] 	      4807	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	CALL_140
0x9b91	            0x85c0	                           test eax, eax	      4807	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	CALL_140
0x9b93	            0x7413	                            je 0x4009be8	      4807	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	CALL_140
0x9b95	    0x488b05000000	            mov rax, qword [0x04009bdc] 	      4807	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	CALL_140
0x9b9c	          0x4889c7	                            mov rdi, rax	      4807	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	CALL_140
0x9b9f	      0xe800000000	                          call 0x4009be4	      4807	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	CALL_140
0x9ba4	            0x4898	                                    cdqe	      4807	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	CALL_140
0x9ba6	            0xeb11	                           jmp 0x4009bf9	      4807	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	CALL_140
0x9ba8	    0x488b05000000	            mov rax, qword [0x04009bef] 	      4807	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	CALL_140
0x9baf	          0x4889c7	                            mov rdi, rax	      4807	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	CALL_140
0x9bb2	      0xe800000000	                          call 0x4009bf7	      4807	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	CALL_140
0x9bb7	            0x4898	                                    cdqe	      4807	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	CALL_140
0x9bb9	    0x488b9590fdff	            mov rdx, qword [rbp - 0x270]	      4807	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	CALL_140
0x9bc0	          0x4829c2	                            sub rdx, rax	      4807	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	CALL_140
0x9bc3	          0x4889d0	                            mov rax, rdx	      4807	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	CALL_140
0x9bc6	    0x48898518feff	            mov qword [rbp - 0x1e8], rax	      4807	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	CALL_140
0x9bcd	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4810	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x9bd4	        0x488b4008	                mov rax, qword [rax + 8]	      4810	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x9bd8	    0x488b80901500	          mov rax, qword [rax + 0x1590] 	      4810	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x9bdf	            0x89c6	                            mov esi, eax	      4810	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x9be1	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4811	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x9be8	        0x488b4008	                mov rax, qword [rax + 8]	      4811	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x9bec	    0x488b80901500	          mov rax, qword [rax + 0x1590] 	      4811	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x9bf3	          0x4863c8	                         movsxd rcx, eax	      4811	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x9bf6	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      4811	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x9bfd	            0x4899	                                     cqo	      4811	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x9bff	          0x48f7f9	                                idiv rcx	      4811	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x9c02	          0x4889d0	                            mov rax, rdx	      4811	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x9c05	            0x29c6	                            sub esi, eax	      4810	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x9c07	            0x89f0	                            mov eax, esi	      4810	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x9c09	          0x83e801	                              sub eax, 1	      4810	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x9c0c	    0x898538fdffff	            mov dword [rbp - 0x2c8], eax	      4810	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x9c12	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4814	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_210
0x9c19	    0x8b8030020000	           mov eax, dword [rax + 0x230] 	      4814	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_210
0x9c1f	            0x85c0	                           test eax, eax	      4814	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_210
0x9c21	            0x7411	                            je 0x4009c74	      4814	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_210
0x9c23	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4814	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_210
0x9c2a	    0x8b8034020000	           mov eax, dword [rax + 0x234] 	      4814	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_210
0x9c30	            0x85c0	                           test eax, eax	      4814	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_210
0x9c32	            0x7511	                           jne 0x4009c85	      4814	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_210
0x9c34	    0x8b8538fdffff	            mov eax, dword [rbp - 0x2c8]	      4817	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_210
0x9c3a	    0x89852cfcffff	            mov dword [rbp - 0x3d4], eax	      4817	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_210
0x9c40	      0xe9ba010000	                           jmp 0x4009e3f	      4817	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_210
0x9c45	    0x8b852cfcffff	            mov eax, dword [rbp - 0x3d4]	      4822	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73
0x9c4b	    0x89853cfdffff	            mov dword [rbp - 0x2c4], eax	      4822	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73
0x9c51	    0x8b852cfcffff	            mov eax, dword [rbp - 0x3d4]	      4824	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73
0x9c57	    0x898578fdffff	            mov dword [rbp - 0x288], eax	      4824	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73
0x9c5d	    0x83bd10fdffff	              cmp dword [rbp - 0x2f0], 0	      4827	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	IF_211
0x9c64	            0x7e0c	                           jle 0x4009cb2	      4827	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	IF_211
0x9c66	    0x8b8510fdffff	            mov eax, dword [rbp - 0x2f0]	      4829	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	IF_211
0x9c6c	     0x18538fdffff	            add dword [rbp - 0x2c8], eax	      4829	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	IF_211
0x9c72	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4832	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	IF_212
0x9c79	    0x8b8034020000	           mov eax, dword [rax + 0x234] 	      4832	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	IF_212
0x9c7f	            0x85c0	                           test eax, eax	      4832	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	IF_212
0x9c81	            0x742d	                            je 0x4009cf0	      4832	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	IF_212
0x9c83	    0x8b0500000000	            mov eax, dword [0x04009cc9] 	      4832	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	IF_212
0x9c89	            0x85c0	                           test eax, eax	      4832	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	IF_212
0x9c8b	            0x7423	                            je 0x4009cf0	      4832	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	IF_212
0x9c8d	    0x83bd20fdffff	              cmp dword [rbp - 0x2e0], 0	      4832	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	IF_212
0x9c94	            0x7e1a	                           jle 0x4009cf0	      4832	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	IF_212
0x9c96	    0x8b852cfcffff	            mov eax, dword [rbp - 0x3d4]	      4833	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	IF_212
0x9c9c	    0x3b8538fdffff	            cmp eax, dword [rbp - 0x2c8]	      4833	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	IF_212
0x9ca2	            0x7e0c	                           jle 0x4009cf0	      4833	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	IF_212
0x9ca4	    0x8b852cfcffff	            mov eax, dword [rbp - 0x3d4]	      4834	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	IF_212
0x9caa	    0x898538fdffff	            mov dword [rbp - 0x2c8], eax	      4834	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	IF_212
0x9cb0	    0x488b05000000	            mov rax, qword [0x04009cf7] 	      4841	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	CALL_141
0x9cb7	    0x8b1500000000	            mov edx, dword [0x04009cfd] 	      4841	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	CALL_141
0x9cbd	            0x89d7	                            mov edi, edx	      4841	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	CALL_141
0x9cbf	            0xffd0	                                call rax	      4841	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	CALL_141
0x9cc1	     0xfaf8538fdff	           imul eax, dword [rbp - 0x2c8]	      4841	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	CALL_141
0x9cc8	    0x89853cfdffff	            mov dword [rbp - 0x2c4], eax	      4841	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	CALL_141
0x9cce	    0x83bd2cfcffff	              cmp dword [rbp - 0x3d4], 0	      4842	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	IF_213
0x9cd5	            0x7e12	                           jle 0x4009d29	      4842	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	IF_213
0x9cd7	    0x8b852cfcffff	            mov eax, dword [rbp - 0x3d4]	      4843	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	IF_213
0x9cdd	    0x2b8538fdffff	            sub eax, dword [rbp - 0x2c8]	      4843	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	IF_213
0x9ce3	     0x1853cfdffff	            add dword [rbp - 0x2c4], eax	      4843	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	IF_213
0x9ce9	    0x8b0500000000	            mov eax, dword [0x04009d2f] 	      4845	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73
0x9cef	    0x8985fcfbffff	            mov dword [rbp - 0x404], eax	      4845	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73
0x9cf5	    0x8b853cfdffff	            mov eax, dword [rbp - 0x2c4]	      4846	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	CALL_142
0x9cfb	          0x83c001	                              add eax, 1	      4846	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	CALL_142
0x9cfe	            0x89c7	                            mov edi, eax	      4846	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	CALL_142
0x9d00	      0xe800000000	                          call 0x4009d45	      4846	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	CALL_142
0x9d05	    0x48898520feff	            mov qword [rbp - 0x1e0], rax	      4846	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	CALL_142
0x9d0c	    0x8b853cfdffff	            mov eax, dword [rbp - 0x2c4]	      4847	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	CALL_143
0x9d12	          0x4863d0	                         movsxd rdx, eax	      4847	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	CALL_143
0x9d15	    0x488b8520feff	            mov rax, qword [rbp - 0x1e0]	      4847	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	CALL_143
0x9d1c	      0xbe20000000	                           mov esi, 0x20	      4847	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	CALL_143
0x9d21	          0x4889c7	                            mov rdi, rax	      4847	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	CALL_143
0x9d24	      0xe800000000	                          call 0x4009d69	      4847	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	CALL_143
0x9d29	    0x8b853cfdffff	            mov eax, dword [rbp - 0x2c4]	      4848	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73
0x9d2f	          0x4863d0	                         movsxd rdx, eax	      4848	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73
0x9d32	    0x488b8520feff	            mov rax, qword [rbp - 0x1e0]	      4848	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73
0x9d39	          0x4801d0	                            add rax, rdx	      4848	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73
0x9d3c	          0xc60000	                       mov byte [rax], 0	      4848	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73
0x9d3f	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      4849	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	CALL_144
0x9d46	          0x4889c7	                            mov rdi, rax	      4849	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	CALL_144
0x9d49	      0xe800000000	                          call 0x4009d8e	      4849	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	CALL_144
0x9d4e	    0x488b8520feff	            mov rax, qword [rbp - 0x1e0]	      4850	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73
0x9d55	    0x488985b8fdff	            mov qword [rbp - 0x248], rax	      4850	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73
0x9d5c	    0xc78540fdffff	              mov dword [rbp - 0x2c0], 0	      4851	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4
0x9d66	            0xeb66	                           jmp 0x4009e0e	      4851	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4
0x9d68	    0x488b05000000	            mov rax, qword [0x04009daf] 	      4854	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4	CALL_145
0x9d6f	    0x8b1500000000	            mov edx, dword [0x04009db5] 	      4854	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4	CALL_145
0x9d75	    0x488b8d20feff	            mov rcx, qword [rbp - 0x1e0]	      4854	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4	CALL_145
0x9d7c	          0x4889ce	                            mov rsi, rcx	      4854	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4	CALL_145
0x9d7f	            0x89d7	                            mov edi, edx	      4854	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4	CALL_145
0x9d81	            0xffd0	                                call rax	      4854	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4	CALL_145
0x9d83	    0x488b05000000	            mov rax, qword [0x04009dca] 	      4855	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4	CALL_146
0x9d8a	    0x8b1500000000	            mov edx, dword [0x04009dd0] 	      4855	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4	CALL_146
0x9d90	            0x89d7	                            mov edi, edx	      4855	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4	CALL_146
0x9d92	            0xffd0	                                call rax	      4855	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4	CALL_146
0x9d94	            0x4898	                                    cdqe	      4855	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4	CALL_146
0x9d96	    0x48018520feff	           add qword [rbp - 0x1e0], rax 	      4855	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4	CALL_146
0x9d9d	    0x488b05000000	            mov rax, qword [0x04009de4] 	      4856	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4	CALL_147
0x9da4	    0x8b1500000000	            mov edx, dword [0x04009dea] 	      4856	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4	CALL_147
0x9daa	            0x89d7	                            mov edi, edx	      4856	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4	CALL_147
0x9dac	            0xffd0	                                call rax	      4856	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4	CALL_147
0x9dae	            0x89c2	                            mov edx, eax	      4856	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4	CALL_147
0x9db0	    0x83bd78fdffff	              cmp dword [rbp - 0x288], 0	      4857	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4
0x9db7	           0xf9fc0	                                 setg al	      4857	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4
0x9dba	           0xfb6c0	                           movzx eax, al	      4857	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4
0x9dbd	            0x29c2	                            sub edx, eax	      4857	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4
0x9dbf	            0x89d0	                            mov eax, edx	      4857	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4
0x9dc1	     0x1852cfcffff	            add dword [rbp - 0x3d4], eax	      4856	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4	CALL_147
0x9dc7	    0x838540fdffff	              add dword [rbp - 0x2c0], 1	      4851	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4
0x9dce	    0x8b8540fdffff	            mov eax, dword [rbp - 0x2c0]	      4851	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4
0x9dd4	    0x3b8538fdffff	            cmp eax, dword [rbp - 0x2c8]	      4851	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4
0x9dda	            0x7c8c	                            jl 0x4009da8	      4851	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	FOR_4
0x9ddc	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      4862	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73
0x9de3	    0x48898580fdff	            mov qword [rbp - 0x280], rax	      4862	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73
0x9dea	    0x83bd10fdffff	              cmp dword [rbp - 0x2f0], 0	      4866	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	IF_214
0x9df1	            0x7e0c	                           jle 0x4009e3f	      4866	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	IF_214
0x9df3	    0x8b8510fdffff	            mov eax, dword [rbp - 0x2f0]	      4867	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	IF_214
0x9df9	    0x29852cfcffff	            sub dword [rbp - 0x3d4], eax	      4867	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_73	IF_214
0x9dff	    0x8b8510fdffff	            mov eax, dword [rbp - 0x2f0]	      4873	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x9e05	    0x89857cfdffff	            mov dword [rbp - 0x284], eax	      4873	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x9e0b	    0x8b8510fdffff	            mov eax, dword [rbp - 0x2f0]	      4881	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x9e11	     0x1852cfcffff	            add dword [rbp - 0x3d4], eax	      4881	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x9e17	    0x8b8510fdffff	            mov eax, dword [rbp - 0x2f0]	      4881	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x9e1d	            0x4898	                                    cdqe	      4881	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x9e1f	    0x48298590fdff	            sub qword [rbp - 0x270], rax	      4881	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x9e26	    0xc78510fdffff	              mov dword [rbp - 0x2f0], 0	      4881	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x9e30	    0x8b850cfdffff	            mov eax, dword [rbp - 0x2f4]	      4881	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x9e36	    0x29851cfcffff	            sub dword [rbp - 0x3e4], eax	      4881	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x9e3c	    0x8b850cfdffff	            mov eax, dword [rbp - 0x2f4]	      4881	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x9e42	    0x898520fdffff	            mov dword [rbp - 0x2e0], eax	      4881	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x9e48	    0xc7850cfdffff	              mov dword [rbp - 0x2f4], 0	      4881	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x9e52	    0x8b9538fdffff	            mov edx, dword [rbp - 0x2c8]	      4886	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_215
0x9e58	    0x8b857cfdffff	            mov eax, dword [rbp - 0x284]	      4886	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_215
0x9e5e	             0x1d0	                            add eax, edx	      4886	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_215
0x9e60	    0x3b852cfcffff	            cmp eax, dword [rbp - 0x3d4]	      4886	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_215
0x9e66	            0x7527	                           jne 0x4009ecf	      4886	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_215
0x9e68	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4886	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_215
0x9e6f	    0x8b8034020000	           mov eax, dword [rax + 0x234] 	      4886	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_215
0x9e75	            0x85c0	                           test eax, eax	      4886	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_215
0x9e77	            0x7416	                            je 0x4009ecf	      4886	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_215
0x9e79	    0x8b0500000000	            mov eax, dword [0x04009ebf] 	      4887	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_215
0x9e7f	            0x85c0	                           test eax, eax	      4887	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_215
0x9e81	            0x740c	                            je 0x4009ecf	      4887	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_215
0x9e83	    0x8b857cfdffff	            mov eax, dword [rbp - 0x284]	      4888	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_215
0x9e89	     0x18538fdffff	            add dword [rbp - 0x2c8], eax	      4888	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_215
0x9e8f	    0xc785c0fcffff	              mov dword [rbp - 0x340], 0	      4892	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x9e99	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4894	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216
0x9ea0	    0x8b8034020000	           mov eax, dword [rax + 0x234] 	      4894	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216
0x9ea6	            0x85c0	                           test eax, eax	      4894	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216
0x9ea8	     0xf84af000000	                            je 0x4009f9d	      4894	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216
0x9eae	    0x8b0500000000	            mov eax, dword [0x04009ef4] 	      4896	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216
0x9eb4	    0x8985fcfbffff	            mov dword [rbp - 0x404], eax	      4896	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216
0x9eba	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4898	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216	IF_217
0x9ec1	    0x8b8030020000	           mov eax, dword [rax + 0x230] 	      4898	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216	IF_217
0x9ec7	            0x85c0	                           test eax, eax	      4898	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216	IF_217
0x9ec9	            0x740c	                            je 0x4009f17	      4898	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216	IF_217
0x9ecb	    0xc78530fcffff	              mov dword [rbp - 0x3d0], 0	      4899	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216	IF_217
0x9ed5	            0xeb0c	                           jmp 0x4009f23	      4899	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216	IF_217
0x9ed7	    0x8b0500000000	            mov eax, dword [0x04009f1d] 	      4902	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216	ELSE_74
0x9edd	    0x898530fcffff	            mov dword [rbp - 0x3d0], eax	      4902	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216	ELSE_74
0x9ee3	    0x8b8538fdffff	            mov eax, dword [rbp - 0x2c8]	      4903	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216
0x9ee9	          0x83c001	                              add eax, 1	      4903	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216
0x9eec	    0x89854cfcffff	            mov dword [rbp - 0x3b4], eax	      4903	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216
0x9ef2	    0x8b0500000000	            mov eax, dword [0x04009f38] 	      4904	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216	CALL_148
0x9ef8	    0x898534fcffff	            mov dword [rbp - 0x3cc], eax	      4904	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216	CALL_148
0x9efe	    0x8b856cfcffff	            mov eax, dword [rbp - 0x394]	      4905	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216
0x9f04	    0x898550fcffff	            mov dword [rbp - 0x3b0], eax	      4905	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216
0x9f0a	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      4907	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216
0x9f10	    0x8985bcfcffff	            mov dword [rbp - 0x344], eax	      4907	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216
0x9f16	    0x8b0500000000	            mov eax, dword [0x04009f5c] 	      4908	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216	IF_218	CALL_149
0x9f1c	            0x85c0	                           test eax, eax	      4908	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216	IF_218	CALL_149
0x9f1e	     0xf8446060000	                            je 0x400a5aa	      4908	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216	IF_218	CALL_149
0x9f24	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      4908	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216	IF_218	CALL_149
0x9f2a	            0x89c7	                            mov edi, eax	      4908	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216	IF_218	CALL_149
0x9f2c	      0xe800000000	                          call 0x4009f71	      4908	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216	IF_218	CALL_149
0x9f31	          0x83f801	                              cmp eax, 1	      4908	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216	IF_218	CALL_149
0x9f34	     0xf8e30060000	                           jle 0x400a5aa	      4908	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216	IF_218	CALL_149
0x9f3a	    0xc785c0fcffff	              mov dword [rbp - 0x340], 1	      4910	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216	IF_218
0x9f44	    0xc78550feffff	              mov dword [rbp - 0x1b0], 0	      4911	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216	IF_218
0x9f4e	    0xc785fcfbffff	          mov dword [rbp - 0x404], 0xc0 	      4912	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	IF_216	IF_218
0x9f58	      0xe90d060000	                           jmp 0x400a5aa	      4800	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x9f5d	    0xc78530fcffff	          mov dword [rbp - 0x3d0], 0x20 	      4918	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_75
0x9f67	    0xc785fcfbffff	          mov dword [rbp - 0x404], 0x20 	      4919	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208	ELSE_75
0x9f71	      0xe9f4050000	                           jmp 0x400a5aa	      4800	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0x9f76	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      4922	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x9f7c	            0x85c0	                           test eax, eax	      4922	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x9f7e	     0xf85fe010000	                           jne 0x400a1c2	      4922	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x9f84	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4923	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x9f8b	    0x8b8034020000	           mov eax, dword [rax + 0x234] 	      4923	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x9f91	            0x85c0	                           test eax, eax	      4923	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x9f93	     0xf85ae000000	                           jne 0x400a087	      4923	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x9f99	    0x8b8500fcffff	            mov eax, dword [rbp - 0x400]	      4924	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x9f9f	            0x85c0	                           test eax, eax	      4924	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x9fa1	            0x790d	                           jns 0x4009ff0	      4924	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x9fa3	    0x83bd60fcffff	              cmp dword [rbp - 0x3a0], 0	      4924	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x9faa	     0xf88d2010000	                            js 0x400a1c2	      4924	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x9fb0	    0x8b8504fcffff	            mov eax, dword [rbp - 0x3fc]	      4925	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x9fb6	            0x4898	                                    cdqe	      4925	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x9fb8	    0x483b8590fdff	            cmp rax, qword [rbp - 0x270]	      4925	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x9fbf	     0xf8ebd010000	                           jle 0x400a1c2	      4925	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x9fc5	    0x8b0500000000	            mov eax, dword [0x0400a00b] 	      4926	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x9fcb	          0x83f816	                           cmp eax, 0x16	      4926	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x9fce	     0xf84ae010000	                            je 0x400a1c2	      4926	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x9fd4	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4929	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x9fdb	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      4929	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x9fe1	            0x85c0	                           test eax, eax	      4922	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x9fe3	            0x740e	                            je 0x400a033	      4922	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x9fe5	    0x83bd1cfcffff	              cmp dword [rbp - 0x3e4], 0	      4927	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x9fec	            0x791e	                           jns 0x400a04c	      4927	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x9fee	      0xe98f010000	                           jmp 0x400a1c2	      4927	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x9ff3	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4931	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0x9ffa	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      4931	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0xa000	    0x3b851cfcffff	            cmp eax, dword [rbp - 0x3e4]	      4927	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0xa006	     0xf8e76010000	                           jle 0x400a1c2	      4927	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0xa00c	    0x83bd64fcffff	              cmp dword [rbp - 0x39c], 0	      4932	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0xa013	            0x7432	                            je 0x400a087	      4932	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0xa015	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4933	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0xa01c	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4933	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0xa020	    0x483b85e0fbff	            cmp rax, qword [rbp - 0x420]	      4933	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0xa027	            0x751e	                           jne 0x400a087	      4933	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0xa029	    0x488b8590fdff	            mov rax, qword [rbp - 0x270]	      4934	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0xa030	            0x89c2	                            mov edx, eax	      4934	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0xa032	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4934	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0xa039	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	      4934	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0xa03f	            0x39c2	                            cmp edx, eax	      4932	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0xa041	     0xf843b010000	                            je 0x400a1c2	      4932	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0xa047	    0x83bd38fcffff	              cmp dword [rbp - 0x3c8], 0	      4935	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0xa04e	     0xf8e2e010000	                           jle 0x400a1c2	      4935	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0xa054	    0x83bdccfcffff	              cmp dword [rbp - 0x334], 0	      4942	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_220
0xa05b	            0x7567	                           jne 0x400a104	      4942	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_220
0xa05d	    0x83bdd8fcffff	              cmp dword [rbp - 0x328], 0	      4946	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_220
0xa064	            0x755e	                           jne 0x400a104	      4946	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_220
0xa066	    0x83bd74fcffff	              cmp dword [rbp - 0x38c], 0	      4958	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_220	IF_221	CALL_150
0xa06d	            0x7433	                            je 0x400a0e2	      4958	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_220	IF_221	CALL_150
0xa06f	      0xe800000000	                          call 0x400a0b4	      4958	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_220	IF_221	CALL_150
0xa074	            0x85c0	                           test eax, eax	      4958	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_220	IF_221	CALL_150
0xa076	            0x742a	                            je 0x400a0e2	      4958	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_220	IF_221	CALL_150
0xa078	    0x8b8504fcffff	            mov eax, dword [rbp - 0x3fc]	      4959	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_220	IF_221
0xa07e	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      4959	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_220	IF_221
0xa083	            0x741d	                            je 0x400a0e2	      4959	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_220	IF_221
0xa085	    0x8b8504fcffff	            mov eax, dword [rbp - 0x3fc]	      4959	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_220	IF_221
0xa08b	            0x4898	                                    cdqe	      4959	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_220	IF_221
0xa08d	    0x483b8590fdff	            cmp rax, qword [rbp - 0x270]	      4959	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_220	IF_221
0xa094	            0x7e0c	                           jle 0x400a0e2	      4959	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_220	IF_221
0xa096	    0xc7852cfcffff	              mov dword [rbp - 0x3d4], 0	      4960	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_220	IF_221
0xa0a0	            0xeb22	                           jmp 0x400a104	      4960	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_220	IF_221
0xa0a2	    0x488b05000000	            mov rax, qword [0x0400a0e9] 	      4964	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_220	ELSE_77
0xa0a9	    0x48898580fdff	            mov qword [rbp - 0x280], rax	      4964	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_220	ELSE_77
0xa0b0	    0xc7852cfcffff	              mov dword [rbp - 0x3d4], 1	      4965	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_220	ELSE_77
0xa0ba	    0xc78530fcffff	              mov dword [rbp - 0x3d0], 0	      4966	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_220	ELSE_77
0xa0c4	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4969	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_222
0xa0cb	    0x8b8034020000	           mov eax, dword [rax + 0x234] 	      4969	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_222
0xa0d1	            0x85c0	                           test eax, eax	      4969	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_222
0xa0d3	            0x7418	                            je 0x400a12d	      4969	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_222
0xa0d5	    0x8b0500000000	            mov eax, dword [0x0400a11b] 	      4969	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_222
0xa0db	            0x85c0	                           test eax, eax	      4969	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_222
0xa0dd	            0x7e0e	                           jle 0x400a12d	      4969	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_222
0xa0df	    0x8b0500000000	            mov eax, dword [0x0400a125] 	      4970	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_222
0xa0e5	    0x8985fcfbffff	            mov dword [rbp - 0x404], eax	      4970	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_222
0xa0eb	            0xeb0a	                           jmp 0x400a137	      4970	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_222
0xa0ed	    0xc785fcfbffff	          mov dword [rbp - 0x404], 0x20 	      4972	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	ELSE_78
0xa0f7	    0xc78538fcffff	    mov dword [rbp - 0x3c8], 0xffffffff 	      4973	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	ELSE_78
0xa101	    0x4883adb0fdff	              sub qword [rbp - 0x250], 1	      4974	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	ELSE_78
0xa109	    0x83bd70fcffff	              cmp dword [rbp - 0x390], 0	      4975	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	ELSE_78	IF_223
0xa110	            0x7516	                           jne 0x400a168	      4975	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	ELSE_78	IF_223
0xa112	    0x8b0500000000	            mov eax, dword [0x0400a158] 	      4977	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	ELSE_78	IF_223	CALL_151
0xa118	    0x898534fcffff	            mov dword [rbp - 0x3cc], eax	      4977	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	ELSE_78	IF_223	CALL_151
0xa11e	    0xc7854cfcffff	              mov dword [rbp - 0x3b4], 1	      4978	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	ELSE_78	IF_223
0xa128	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      4981	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0xa12e	    0x8985bcfcffff	            mov dword [rbp - 0x344], eax	      4981	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219
0xa134	    0x8b0500000000	            mov eax, dword [0x0400a17a] 	      4982	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_224	CALL_152
0xa13a	            0x85c0	                           test eax, eax	      4982	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_224	CALL_152
0xa13c	            0x7435	                            je 0x400a1b3	      4982	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_224	CALL_152
0xa13e	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      4982	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_224	CALL_152
0xa144	            0x89c7	                            mov edi, eax	      4982	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_224	CALL_152
0xa146	      0xe800000000	                          call 0x400a18b	      4982	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_224	CALL_152
0xa14b	          0x83f801	                              cmp eax, 1	      4982	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_224	CALL_152
0xa14e	            0x7e23	                           jle 0x400a1b3	      4982	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_224	CALL_152
0xa150	    0xc785c0fcffff	              mov dword [rbp - 0x340], 1	      4984	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_224
0xa15a	    0xc78550feffff	              mov dword [rbp - 0x1b0], 0	      4985	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_224
0xa164	    0xc785fcfbffff	          mov dword [rbp - 0x404], 0xc0 	      4986	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_224
0xa16e	      0xe9f8030000	                           jmp 0x400a5ab	      4982	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_224	CALL_152
0xa173	    0xc785c0fcffff	              mov dword [rbp - 0x340], 0	      4989	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	ELSE_79
0xa17d	      0xe9e9030000	                           jmp 0x400a5ab	      4982	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_76	IF_219	IF_224	CALL_152
0xa182	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      4992	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225
0xa188	            0x85c0	                           test eax, eax	      4992	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225
0xa18a	     0xf84ac010000	                            je 0x400a37c	      4992	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225
0xa190	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      4994	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	CALL_153
0xa196	            0x89c7	                            mov edi, eax	      4994	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	CALL_153
0xa198	      0xe800000000	                          call 0x400a1dd	      4994	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	CALL_153
0xa19d	    0x48898580fdff	            mov qword [rbp - 0x280], rax	      4994	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	CALL_153
0xa1a4	    0x83bd2cfcffff	              cmp dword [rbp - 0x3d4], 0	      4995	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_226
0xa1ab	            0x7516	                           jne 0x400a203	      4995	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_226
0xa1ad	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      4996	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	CALL_154
0xa1b3	            0x89c7	                            mov edi, eax	      4996	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	CALL_154
0xa1b5	      0xe800000000	                          call 0x400a1fa	      4996	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	CALL_154
0xa1ba	          0x83e801	                              sub eax, 1	      4996	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	CALL_154
0xa1bd	    0x89852cfcffff	            mov dword [rbp - 0x3d4], eax	      4996	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	CALL_154
0xa1c3	    0x8b0500000000	            mov eax, dword [0x0400a209] 	      4998	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_227
0xa1c9	          0x83e004	                              and eax, 4	      4998	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_227
0xa1cc	            0x85c0	                           test eax, eax	      4998	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_227
0xa1ce	            0x7420	                            je 0x400a230	      4998	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_227
0xa1d0	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      4998	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_227
0xa1d7	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      4998	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_227
0xa1dd	            0x85c0	                           test eax, eax	      4998	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_227
0xa1df	            0x740f	                            je 0x400a230	      4998	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_227
0xa1e1	    0x488b8580fdff	            mov rax, qword [rbp - 0x280]	      4999	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	CALL_155
0xa1e8	          0x4889c7	                            mov rdi, rax	      4999	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	CALL_155
0xa1eb	      0xe800000000	                          call 0x400a230	      4999	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	CALL_155
0xa1f0	    0xc78530fcffff	              mov dword [rbp - 0x3d0], 0	      5001	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225
0xa1fa	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5003	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228
0xa201	    0x8b8030020000	           mov eax, dword [rax + 0x230] 	      5003	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228
0xa207	            0x85c0	                           test eax, eax	      5003	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228
0xa209	     0xf84ba000000	                            je 0x400a309	      5003	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228
0xa20f	    0x488b8580fdff	            mov rax, qword [rbp - 0x280]	      5007	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228
0xa216	           0xfb600	                   movzx eax, byte [rax]	      5007	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228
0xa219	           0xfb6c0	                           movzx eax, al	      5007	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228
0xa21c	    0x8985fcfbffff	            mov dword [rbp - 0x404], eax	      5007	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228
0xa222	    0x8b852cfcffff	            mov eax, dword [rbp - 0x3d4]	      5008	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228	CALL_156
0xa228	          0x83c001	                              add eax, 1	      5008	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228	CALL_156
0xa22b	            0x89c7	                            mov edi, eax	      5008	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228	CALL_156
0xa22d	      0xe800000000	                          call 0x400a272	      5008	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228	CALL_156
0xa232	    0x48898538feff	            mov qword [rbp - 0x1c8], rax	      5008	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228	CALL_156
0xa239	    0x8b852cfcffff	            mov eax, dword [rbp - 0x3d4]	      5009	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228	CALL_157
0xa23f	          0x4863d0	                         movsxd rdx, eax	      5009	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228	CALL_157
0xa242	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      5009	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228	CALL_157
0xa249	      0xbe20000000	                           mov esi, 0x20	      5009	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228	CALL_157
0xa24e	          0x4889c7	                            mov rdi, rax	      5009	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228	CALL_157
0xa251	      0xe800000000	                          call 0x400a296	      5009	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228	CALL_157
0xa256	    0x488b8580fdff	            mov rax, qword [rbp - 0x280]	      5010	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228	CALL_159
0xa25d	          0x4889c7	                            mov rdi, rax	      5010	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228	CALL_159
0xa260	      0xe800000000	                          call 0x400a2a5	      5010	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228	CALL_159
0xa265	        0x488d50ff	                      lea rdx, [rax - 1]	      5010	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228	CALL_159
0xa269	    0x488b8580fdff	            mov rax, qword [rbp - 0x280]	      5010	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228	CALL_159
0xa270	        0x488d4801	                      lea rcx, [rax + 1]	      5010	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228	CALL_159
0xa274	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      5010	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228	CALL_159
0xa27b	          0x4889ce	                            mov rsi, rcx	      5010	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228	CALL_159
0xa27e	          0x4889c7	                            mov rdi, rax	      5010	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228	CALL_159
0xa281	      0xe800000000	                          call 0x400a2c6	      5010	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228	CALL_159
0xa286	    0x8b852cfcffff	            mov eax, dword [rbp - 0x3d4]	      5011	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228
0xa28c	          0x4863d0	                         movsxd rdx, eax	      5011	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228
0xa28f	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      5011	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228
0xa296	          0x4801d0	                            add rax, rdx	      5011	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228
0xa299	          0xc60000	                       mov byte [rax], 0	      5011	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228
0xa29c	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      5012	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228	CALL_160
0xa2a3	          0x4889c7	                            mov rdi, rax	      5012	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228	CALL_160
0xa2a6	      0xe800000000	                          call 0x400a2eb	      5012	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228	CALL_160
0xa2ab	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      5013	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228
0xa2b2	    0x48898580fdff	            mov qword [rbp - 0x280], rax	      5013	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228
0xa2b9	    0x488b8580fdff	            mov rax, qword [rbp - 0x280]	      5013	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228
0xa2c0	    0x488985b8fdff	            mov qword [rbp - 0x248], rax	      5013	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228
0xa2c7	            0xeb34	                           jmp 0x400a33d	      5013	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_228
0xa2c9	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      5018	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	ELSE_81	CALL_161
0xa2cf	            0x89c7	                            mov edi, eax	      5018	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	ELSE_81	CALL_161
0xa2d1	      0xe800000000	                          call 0x400a316	      5018	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	ELSE_81	CALL_161
0xa2d6	          0x83e801	                              sub eax, 1	      5018	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	ELSE_81	CALL_161
0xa2d9	    0x89852cfcffff	            mov dword [rbp - 0x3d4], eax	      5018	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	ELSE_81	CALL_161
0xa2df	    0x488b8580fdff	            mov rax, qword [rbp - 0x280]	      5019	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	ELSE_81
0xa2e6	        0x488d5001	                      lea rdx, [rax + 1]	      5019	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	ELSE_81
0xa2ea	    0x48899580fdff	            mov qword [rbp - 0x280], rdx	      5019	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	ELSE_81
0xa2f1	           0xfb600	                   movzx eax, byte [rax]	      5019	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	ELSE_81
0xa2f4	           0xfb6c0	                           movzx eax, al	      5019	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	ELSE_81
0xa2f7	    0x8985fcfbffff	            mov dword [rbp - 0x404], eax	      5019	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	ELSE_81
0xa2fd	    0x83bd70fcffff	              cmp dword [rbp - 0x390], 0	      5021	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_229
0xa304	            0x7527	                           jne 0x400a36d	      5021	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_229
0xa306	    0x8b852cfcffff	            mov eax, dword [rbp - 0x3d4]	      5023	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_229
0xa30c	          0x83c001	                              add eax, 1	      5023	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_229
0xa30f	    0x89854cfcffff	            mov dword [rbp - 0x3b4], eax	      5023	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_229
0xa315	    0x8b0500000000	            mov eax, dword [0x0400a35b] 	      5024	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_229	CALL_162
0xa31b	    0x898534fcffff	            mov dword [rbp - 0x3cc], eax	      5024	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_229	CALL_162
0xa321	    0x8b856cfcffff	            mov eax, dword [rbp - 0x394]	      5025	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_229
0xa327	    0x898550fcffff	            mov dword [rbp - 0x3b0], eax	      5025	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225	IF_229
0xa32d	    0xc785c0fcffff	              mov dword [rbp - 0x340], 0	      5028	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225
0xa337	      0xe92f020000	                           jmp 0x400a5ab	      5028	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_79	ELSE_80	IF_225
0xa33c	    0x8b0500000000	            mov eax, dword [0x0400a382] 	      5032	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0xa342	            0x85c0	                           test eax, eax	      5032	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0xa344	     0xf8485000000	                            je 0x400a40f	      5032	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0xa34a	    0x8b0500000000	            mov eax, dword [0x0400a390] 	      5033	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0xa350	          0x83f816	                           cmp eax, 0x16	      5033	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0xa353	            0x740b	                            je 0x400a3a0	      5033	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0xa355	    0x8b0500000000	            mov eax, dword [0x0400a39b] 	      5034	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0xa35b	          0x83f876	                           cmp eax, 0x76	      5034	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0xa35e	            0x756f	                           jne 0x400a40f	      5034	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0xa360	      0xe800000000	                          call 0x400a3a5	      5035	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230	CALL_163
0xa365	            0x85c0	                           test eax, eax	      5035	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230	CALL_163
0xa367	            0x7466	                            je 0x400a40f	      5035	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230	CALL_163
0xa369	    0x8b8504fcffff	            mov eax, dword [rbp - 0x3fc]	      5036	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0xa36f	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      5036	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0xa374	            0x7459	                            je 0x400a40f	      5036	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0xa376	    0x8b8504fcffff	            mov eax, dword [rbp - 0x3fc]	      5037	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0xa37c	            0x4898	                                    cdqe	      5037	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0xa37e	    0x483b8590fdff	            cmp rax, qword [rbp - 0x270]	      5037	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0xa385	            0x7e48	                           jle 0x400a40f	      5037	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0xa387	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5040	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0xa38e	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      5040	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0xa394	            0x85c0	                           test eax, eax	      5032	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0xa396	            0x740b	                            je 0x400a3e3	      5032	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0xa398	    0x83bd1cfcffff	              cmp dword [rbp - 0x3e4], 0	      5038	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0xa39f	            0x7917	                           jns 0x400a3f8	      5038	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0xa3a1	            0xeb2c	                           jmp 0x400a40f	      5038	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0xa3a3	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5042	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0xa3aa	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      5042	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0xa3b0	    0x3b851cfcffff	            cmp eax, dword [rbp - 0x3e4]	      5038	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0xa3b6	            0x7e17	                           jle 0x400a40f	      5038	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0xa3b8	    0xc785fcfbffff	          mov dword [rbp - 0x404], 0x20 	      5044	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0xa3c2	    0x4883adb0fdff	              sub qword [rbp - 0x250], 1	      5045	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0xa3ca	      0xe99c010000	                           jmp 0x400a5ab	      5045	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_82	IF_230
0xa3cf	    0x83bdccfcffff	              cmp dword [rbp - 0x334], 0	      5049	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0xa3d6	            0x7516	                           jne 0x400a42e	      5049	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0xa3d8	    0x83bdf8fcffff	              cmp dword [rbp - 0x308], 0	      5051	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0xa3df	            0x750d	                           jne 0x400a42e	      5051	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0xa3e1	    0x83bdd8fcffff	              cmp dword [rbp - 0x328], 0	      5054	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0xa3e8	     0xf847d010000	                            je 0x400a5ab	      5054	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0xa3ee	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5059	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0xa3f5	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      5059	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0xa3fb	            0x85c0	                           test eax, eax	      5057	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0xa3fd	            0x740d	                            je 0x400a44c	      5057	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0xa3ff	    0x8b851cfcffff	            mov eax, dword [rbp - 0x3e4]	      5057	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0xa405	            0xf7d0	                                 not eax	      5057	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0xa407	          0xc1e81f	                           shr eax, 0x1f	      5057	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0xa40a	            0xeb20	                           jmp 0x400a46c	      5057	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0xa40c	    0x8b851cfcffff	            mov eax, dword [rbp - 0x3e4]	      5063	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0xa412	    0x2b850cfdffff	            sub eax, dword [rbp - 0x2f4]	      5063	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0xa418	            0x89c2	                            mov edx, eax	      5063	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0xa41a	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5065	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0xa421	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      5065	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0xa427	            0x39c2	                            cmp edx, eax	      5057	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0xa429	           0xf9cc0	                                 setl al	      5057	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0xa42c	            0x84c0	                             test al, al	      5057	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0xa42e	     0xf8437010000	                            je 0x400a5ab	      5057	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0xa434	    0xc785fcfbffff	          mov dword [rbp - 0x404], 0x20 	      5068	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0xa43e	    0x4883adb0fdff	              sub qword [rbp - 0x250], 1	      5069	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0xa446	    0x8385f0fcffff	              add dword [rbp - 0x310], 1	      5072	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231
0xa44d	    0x83bdd8fcffff	              cmp dword [rbp - 0x328], 0	      5075	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_232
0xa454	            0x743e	                            je 0x400a4d4	      5075	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_232
0xa456	    0x8b856cfcffff	            mov eax, dword [rbp - 0x394]	      5075	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_232
0xa45c	    0x3b8580fcffff	            cmp eax, dword [rbp - 0x380]	      5075	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_232
0xa462	            0x7530	                           jne 0x400a4d4	      5075	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_232
0xa464	    0x83bdf0fcffff	              cmp dword [rbp - 0x310], 1	      5076	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_232
0xa46b	            0x7f1b	                            jg 0x400a4c8	      5076	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_232
0xa46d	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5077	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_232
0xa474	    0x8b8034020000	           mov eax, dword [rax + 0x234] 	      5077	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_232
0xa47a	            0x85c0	                           test eax, eax	      5077	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_232
0xa47c	            0x7416	                            je 0x400a4d4	      5077	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_232
0xa47e	    0x8b0500000000	            mov eax, dword [0x0400a4c4] 	      5077	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_232
0xa484	            0x85c0	                           test eax, eax	      5077	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_232
0xa486	            0x7e0c	                           jle 0x400a4d4	      5077	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_232
0xa488	    0x8b85d8fcffff	            mov eax, dword [rbp - 0x328]	      5078	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_232
0xa48e	    0x89856cfcffff	            mov dword [rbp - 0x394], eax	      5078	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_232
0xa494	    0x83bdccfcffff	          cmp dword [rbp - 0x334], 0x1a 	      5080	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233
0xa49b	            0x7576	                           jne 0x400a553	      5080	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233
0xa49d	    0xc785ccfcffff	          mov dword [rbp - 0x334], 0x18 	      5082	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233
0xa4a7	    0x83bd78fcffff	              cmp dword [rbp - 0x388], 0	      5083	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233	IF_234
0xa4ae	            0x740e	                            je 0x400a4fe	      5083	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233	IF_234
0xa4b0	    0x8b856cfcffff	            mov eax, dword [rbp - 0x394]	      5083	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233	IF_234
0xa4b6	    0x3b8578fcffff	            cmp eax, dword [rbp - 0x388]	      5083	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233	IF_234
0xa4bc	            0x7455	                            je 0x400a553	      5083	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233	IF_234
0xa4be	    0x8b85ccfcffff	            mov eax, dword [rbp - 0x334]	      5085	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233	IF_234	CALL_164
0xa4c4	            0x4898	                                    cdqe	      5085	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233	IF_234	CALL_164
0xa4c6	    0x8b0485000000	                  mov eax, dword [rax*4]	      5085	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233	IF_234	CALL_164
0xa4cd	    0x89856cfcffff	            mov dword [rbp - 0x394], eax	      5085	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233	IF_234	CALL_164
0xa4d3	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5086	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233	IF_234	IF_235
0xa4da	    0x8b8070020000	           mov eax, dword [rax + 0x270] 	      5086	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233	IF_234	IF_235
0xa4e0	            0x85c0	                           test eax, eax	      5086	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233	IF_234	IF_235
0xa4e2	            0x742f	                            je 0x400a553	      5086	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233	IF_234	IF_235
0xa4e4	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5086	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233	IF_234	IF_235
0xa4eb	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5086	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233	IF_234	IF_235
0xa4ef	    0x483b85e0fbff	            cmp rax, qword [rbp - 0x420]	      5086	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233	IF_234	IF_235
0xa4f6	            0x751b	                           jne 0x400a553	      5086	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233	IF_234	IF_235
0xa4f8	    0x8b1500000000	            mov edx, dword [0x0400a53e] 	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233	IF_234	IF_235	CALL_165
0xa4fe	    0x8b856cfcffff	            mov eax, dword [rbp - 0x394]	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233	IF_234	IF_235	CALL_165
0xa504	            0x89d6	                            mov esi, edx	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233	IF_234	IF_235	CALL_165
0xa506	            0x89c7	                            mov edi, eax	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233	IF_234	IF_235	CALL_165
0xa508	      0xe800000000	                          call 0x400a54d	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233	IF_234	IF_235	CALL_165
0xa50d	    0x89856cfcffff	            mov dword [rbp - 0x394], eax	      5087	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_233	IF_234	IF_235	CALL_165
0xa513	    0x83bdf8fcffff	              cmp dword [rbp - 0x308], 0	      5093	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_236
0xa51a	            0x744f	                            je 0x400a5ab	      5093	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_236
0xa51c	    0x8b85f8fcffff	            mov eax, dword [rbp - 0x308]	      5095	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_236
0xa522	    0x89856cfcffff	            mov dword [rbp - 0x394], eax	      5095	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_236
0xa528	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5096	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_236	IF_237
0xa52f	    0x8b8070020000	           mov eax, dword [rax + 0x270] 	      5096	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_236	IF_237
0xa535	            0x85c0	                           test eax, eax	      5096	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_236	IF_237
0xa537	            0x7432	                            je 0x400a5ab	      5096	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_236	IF_237
0xa539	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5096	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_236	IF_237
0xa540	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5096	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_236	IF_237
0xa544	    0x483b85e0fbff	            cmp rax, qword [rbp - 0x420]	      5096	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_236	IF_237
0xa54b	            0x751e	                           jne 0x400a5ab	      5096	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_236	IF_237
0xa54d	    0x8b1500000000	            mov edx, dword [0x0400a593] 	      5097	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_236	IF_237	CALL_167
0xa553	    0x8b856cfcffff	            mov eax, dword [rbp - 0x394]	      5097	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_236	IF_237	CALL_167
0xa559	            0x89d6	                            mov esi, edx	      5097	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_236	IF_237	CALL_167
0xa55b	            0x89c7	                            mov edi, eax	      5097	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_236	IF_237	CALL_167
0xa55d	      0xe800000000	                          call 0x400a5a2	      5097	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_236	IF_237	CALL_167
0xa562	    0x89856cfcffff	            mov dword [rbp - 0x394], eax	      5097	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_236	IF_237	CALL_167
0xa568	            0xeb01	                           jmp 0x400a5ab	      5097	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	ELSE_83	IF_231	IF_236	IF_237	CALL_167
0xa56a	              0x90	                                     nop	      4800	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_72	IF_207	IF_208
0xa56b	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5106	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0xa572	    0x488b80a80200	           mov rax, qword [rax + 0x2a8] 	      5106	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0xa579	          0x4885c0	                           test rax, rax	      5106	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0xa57c	     0xf8e50020000	                           jle 0x400a812	      5106	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0xa582	    0x488b05000000	            mov rax, qword [0x0400a5c9] 	      5107	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0xa589	    0x483985e8fbff	           cmp qword [rbp - 0x418], rax 	      5107	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0xa590	            0x752b	                           jne 0x400a5fd	      5107	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0xa592	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5107	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0xa599	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5107	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0xa59d	    0x483b85e0fbff	            cmp rax, qword [rbp - 0x420]	      5107	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0xa5a4	            0x7517	                           jne 0x400a5fd	      5107	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0xa5a6	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5108	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	CALL_169
0xa5ad	          0x4889c7	                            mov rdi, rax	      5108	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	CALL_169
0xa5b0	      0xe800000000	                          call 0x400a5f5	      5108	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	CALL_169
0xa5b5	            0x85c0	                           test eax, eax	      5107	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0xa5b7	     0xf8415020000	                            je 0x400a812	      5107	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0xa5bd	    0x8b8500fdffff	            mov eax, dword [rbp - 0x300]	      5109	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0xa5c3	      0x2500000200	                        and eax, 0x20000	      5109	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0xa5c8	            0x85c0	                           test eax, eax	      5109	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0xa5ca	            0x750d	                           jne 0x400a619	      5109	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0xa5cc	    0x83bd1cfdffff	              cmp dword [rbp - 0x2e4], 0	      5109	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0xa5d3	     0xf8ef9010000	                           jle 0x400a812	      5109	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0xa5d9	    0x83bd68fcffff	              cmp dword [rbp - 0x398], 0	      5110	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0xa5e0	            0x7424	                            je 0x400a646	      5110	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0xa5e2	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5111	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	CALL_170
0xa5e9	    0x488b80a00200	           mov rax, qword [rax + 0x2a0] 	      5111	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	CALL_170
0xa5f0	      0xbe76000000	                           mov esi, 0x76	      5111	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	CALL_170
0xa5f5	          0x4889c7	                            mov rdi, rax	      5111	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	CALL_170
0xa5f8	      0xe800000000	                          call 0x400a63d	      5111	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	CALL_170
0xa5fd	          0x4885c0	                           test rax, rax	      5110	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0xa600	     0xf84cc010000	                            je 0x400a812	      5110	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0xa606	    0x8b8554fdffff	            mov eax, dword [rbp - 0x2ac]	      5113	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0xa60c	    0x89856cfcffff	            mov dword [rbp - 0x394], eax	      5113	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0xa612	    0x8b8510fcffff	            mov eax, dword [rbp - 0x3f0]	      5114	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0xa618	    0x398504fdffff	           cmp dword [rbp - 0x2fc], eax 	      5114	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0xa61e	            0x750d	                           jne 0x400a66d	      5114	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0xa620	    0x83bd1cfdffff	              cmp dword [rbp - 0x2e4], 1	      5114	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0xa627	     0xf8e34010000	                           jle 0x400a7a1	      5114	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0xa62d	      0xe800000000	                          call 0x400a672	      5115	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	CALL_171
0xa632	            0x85c0	                           test eax, eax	      5115	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	CALL_171
0xa634	            0x7521	                           jne 0x400a697	      5115	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	CALL_171
0xa636	    0x83bd18fdffff	              cmp dword [rbp - 0x2e8], 0	      5115	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	CALL_171
0xa63d	            0x7518	                           jne 0x400a697	      5115	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	CALL_171
0xa63f	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5116	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0xa646	    0x488b80a80200	           mov rax, qword [rax + 0x2a8] 	      5116	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0xa64d	        0x4883f801	                              cmp rax, 1	      5116	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0xa651	     0xf850a010000	                           jne 0x400a7a1	      5116	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0xa657	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5117	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0xa65e	    0x488b80a80200	           mov rax, qword [rax + 0x2a8] 	      5117	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0xa665	        0x4883f803	                              cmp rax, 3	      5117	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0xa669	     0xf84f2000000	                            je 0x400a7a1	      5117	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0xa66f	    0x83bd18fdffff	              cmp dword [rbp - 0x2e8], 0	      5121	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	IF_240
0xa676	            0x740e	                            je 0x400a6c6	      5121	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	IF_240
0xa678	    0x8b8518fdffff	            mov eax, dword [rbp - 0x2e8]	      5122	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	IF_240
0xa67e	    0x8985fcfbffff	            mov dword [rbp - 0x404], eax	      5122	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	IF_240
0xa684	            0xeb38	                           jmp 0x400a6fe	      5122	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	IF_240
0xa686	      0xe800000000	                          call 0x400a6cb	      5123	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	ELSE_84	IF_241	CALL_172
0xa68b	            0x85c0	                           test eax, eax	      5123	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	ELSE_84	IF_241	CALL_172
0xa68d	            0x740d	                            je 0x400a6dc	      5123	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	ELSE_84	IF_241	CALL_172
0xa68f	      0xe800000000	                          call 0x400a6d4	      5124	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	ELSE_84	IF_241
0xa694	    0x8985fcfbffff	            mov dword [rbp - 0x404], eax	      5124	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	ELSE_84	IF_241
0xa69a	            0xeb22	                           jmp 0x400a6fe	      5124	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	ELSE_84	IF_241
0xa69c	    0x8b0500000000	            mov eax, dword [0x0400a6e2] 	      5125	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	ELSE_85	IF_242
0xa6a2	            0x85c0	                           test eax, eax	      5125	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	ELSE_85	IF_242
0xa6a4	            0x740e	                            je 0x400a6f4	      5125	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	ELSE_85	IF_242
0xa6a6	    0x8b0500000000	            mov eax, dword [0x0400a6ec] 	      5126	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	ELSE_85	IF_242
0xa6ac	    0x8985fcfbffff	            mov dword [rbp - 0x404], eax	      5126	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	ELSE_85	IF_242
0xa6b2	            0xeb0a	                           jmp 0x400a6fe	      5126	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	ELSE_85	IF_242
0xa6b4	    0xc785fcfbffff	          mov dword [rbp - 0x404], 0x20 	      5128	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	ELSE_86
0xa6be	    0x8b8510fcffff	            mov eax, dword [rbp - 0x3f0]	      5130	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0xa6c4	    0x898504fdffff	            mov dword [rbp - 0x2fc], eax	      5130	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0xa6ca	    0x83bd2cfcffff	              cmp dword [rbp - 0x3d4], 0	      5132	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	IF_243
0xa6d1	            0x7e0c	                           jle 0x400a71f	      5132	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	IF_243
0xa6d3	    0x8b852cfcffff	            mov eax, dword [rbp - 0x3d4]	      5133	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	IF_243
0xa6d9	     0x18510fdffff	            add dword [rbp - 0x2f0], eax	      5133	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	IF_243
0xa6df	    0x8b852cfcffff	            mov eax, dword [rbp - 0x3d4]	      5134	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0xa6e5	            0x4898	                                    cdqe	      5134	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0xa6e7	    0x48018590fdff	           add qword [rbp - 0x270], rax 	      5134	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0xa6ee	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5135	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	IF_244
0xa6f5	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      5135	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	IF_244
0xa6fb	            0x85c0	                           test eax, eax	      5135	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	IF_244
0xa6fd	            0x744c	                            je 0x400a78b	      5135	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	IF_244
0xa6ff	    0x83bd2cfcffff	              cmp dword [rbp - 0x3d4], 0	      5135	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	IF_244
0xa706	            0x7e43	                           jle 0x400a78b	      5135	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	IF_244
0xa708	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5138	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	IF_244	IF_245
0xa70f	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      5138	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	IF_244	IF_245
0xa715	            0x85c0	                           test eax, eax	      5138	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	IF_244	IF_245
0xa717	            0x741a	                            je 0x400a773	      5138	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	IF_244	IF_245
0xa719	    0x8b852cfcffff	            mov eax, dword [rbp - 0x3d4]	      5140	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	IF_244	IF_245
0xa71f	    0x29851cfcffff	            sub dword [rbp - 0x3e4], eax	      5140	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	IF_244	IF_245
0xa725	    0x8b852cfcffff	            mov eax, dword [rbp - 0x3d4]	      5141	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	IF_244	IF_245
0xa72b	    0x29850cfdffff	            sub dword [rbp - 0x2f4], eax	      5141	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	IF_244	IF_245
0xa731	            0xeb18	                           jmp 0x400a78b	      5141	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	IF_244	IF_245
0xa733	    0x8b852cfcffff	            mov eax, dword [rbp - 0x3d4]	      5146	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	IF_244	ELSE_87
0xa739	     0x1850cfdffff	            add dword [rbp - 0x2f4], eax	      5146	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	IF_244	ELSE_87
0xa73f	    0x8b852cfcffff	            mov eax, dword [rbp - 0x3d4]	      5147	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	IF_244	ELSE_87
0xa745	     0x1851cfcffff	            add dword [rbp - 0x3e4], eax	      5147	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239	IF_244	ELSE_87
0xa74b	    0xc7852cfcffff	              mov dword [rbp - 0x3d4], 0	      5150	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0xa755	    0xc7854cfcffff	              mov dword [rbp - 0x3b4], 0	      5151	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0xa75f	            0xeb1d	                           jmp 0x400a7be	      5151	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_239
0xa761	    0x83bd5cfcffff	              cmp dword [rbp - 0x3a4], 0	      5153	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	ELSE_88	IF_246
0xa768	            0x7514	                           jne 0x400a7be	      5153	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	ELSE_88	IF_246
0xa76a	    0xc78508fdffff	              mov dword [rbp - 0x2f8], 1	      5155	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	ELSE_88	IF_246
0xa774	    0xc7855cfcffff	              mov dword [rbp - 0x3a4], 1	      5156	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	ELSE_88	IF_246
0xa77e	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      5159	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0xa784	    0x8985bcfcffff	            mov dword [rbp - 0x344], eax	      5159	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238
0xa78a	    0x8b0500000000	            mov eax, dword [0x0400a7d0] 	      5160	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_247	CALL_174
0xa790	            0x85c0	                           test eax, eax	      5160	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_247	CALL_174
0xa792	            0x7432	                            je 0x400a806	      5160	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_247	CALL_174
0xa794	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      5160	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_247	CALL_174
0xa79a	            0x89c7	                            mov edi, eax	      5160	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_247	CALL_174
0xa79c	      0xe800000000	                          call 0x400a7e1	      5160	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_247	CALL_174
0xa7a1	          0x83f801	                              cmp eax, 1	      5160	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_247	CALL_174
0xa7a4	            0x7e20	                           jle 0x400a806	      5160	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_247	CALL_174
0xa7a6	    0xc785c0fcffff	              mov dword [rbp - 0x340], 1	      5162	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_247
0xa7b0	    0xc78550feffff	              mov dword [rbp - 0x1b0], 0	      5163	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_247
0xa7ba	    0xc785fcfbffff	          mov dword [rbp - 0x404], 0xc0 	      5164	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_247
0xa7c4	            0xeb20	                           jmp 0x400a826	      5160	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_247	CALL_174
0xa7c6	    0xc785c0fcffff	              mov dword [rbp - 0x340], 0	      5167	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	ELSE_89
0xa7d0	            0xeb14	                           jmp 0x400a826	      5160	screen.c	FUNCTION_28	FOR_1	ELSE_51	IF_238	IF_247	CALL_174
0xa7d2	    0xc78504fdffff	              mov dword [rbp - 0x2fc], 0	      5172	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_89	ELSE_90
0xa7dc	    0xc78508fdffff	              mov dword [rbp - 0x2f8], 0	      5173	screen.c	FUNCTION_28	FOR_1	ELSE_51	ELSE_89	ELSE_90
0xa7e6	    0x83bd14fdffff	              cmp dword [rbp - 0x2ec], 0	      5181	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248
0xa7ed	     0xf85ef000000	                           jne 0x400a922	      5181	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248
0xa7f3	    0x83bdfcfcffff	              cmp dword [rbp - 0x304], 7	      5181	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248
0xa7fa	     0xf85e2000000	                           jne 0x400a922	      5181	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248
0xa800	    0x488b05000000	            mov rax, qword [0x0400a847] 	      5182	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248
0xa807	    0x483985e8fbff	           cmp qword [rbp - 0x418], rax 	      5182	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248
0xa80e	     0xf85ce000000	                           jne 0x400a922	      5182	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248
0xa814	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5182	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248
0xa81b	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5182	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248
0xa81f	    0x483b85e0fbff	            cmp rax, qword [rbp - 0x420]	      5182	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248
0xa826	     0xf85b6000000	                           jne 0x400a922	      5182	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248
0xa82c	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5183	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248	CALL_175
0xa833	          0x4889c7	                            mov rdi, rax	      5183	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248	CALL_175
0xa836	      0xe800000000	                          call 0x400a87b	      5183	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248	CALL_175
0xa83b	            0x85c0	                           test eax, eax	      5183	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248	CALL_175
0xa83d	     0xf849f000000	                            je 0x400a922	      5183	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248	CALL_175
0xa843	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5184	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248
0xa84a	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	      5184	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248
0xa850	            0x4898	                                    cdqe	      5184	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248
0xa852	    0x8b955cfcffff	            mov edx, dword [rbp - 0x3a4]	      5184	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248
0xa858	          0x4863ca	                         movsxd rcx, edx	      5184	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248
0xa85b	    0x488b9590fdff	            mov rdx, qword [rbp - 0x270]	      5184	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248
0xa862	          0x4801ca	                            add rdx, rcx	      5184	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248
0xa865	          0x4839d0	                            cmp rax, rdx	      5184	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248
0xa868	            0x7f78	                            jg 0x400a922	      5184	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248
0xa86a	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5187	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248	IF_249
0xa871	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      5187	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248	IF_249
0xa877	            0x85c0	                           test eax, eax	      5187	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248	IF_249
0xa879	            0x742f	                            je 0x400a8ea	      5187	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248	IF_249
0xa87b	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5188	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248	IF_249
0xa882	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      5188	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248	IF_249
0xa888	    0x2b851cfcffff	            sub eax, dword [rbp - 0x3e4]	      5188	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248	IF_249
0xa88e	            0x89c2	                            mov edx, eax	      5188	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248	IF_249
0xa890	    0x8b850cfdffff	            mov eax, dword [rbp - 0x2f4]	      5188	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248	IF_249
0xa896	             0x1d0	                            add eax, edx	      5188	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248	IF_249
0xa898	          0x8d50ff	                      lea edx, [rax - 1]	      5188	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248	IF_249
0xa89b	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5188	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248	IF_249
0xa8a2	    0x8990e0000000	             mov dword [rax + 0xe0], edx	      5188	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248	IF_249
0xa8a8	            0xeb1b	                           jmp 0x400a905	      5188	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248	IF_249
0xa8aa	    0x8b851cfcffff	            mov eax, dword [rbp - 0x3e4]	      5191	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248	ELSE_91
0xa8b0	    0x2b850cfdffff	            sub eax, dword [rbp - 0x2f4]	      5191	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248	ELSE_91
0xa8b6	            0x89c2	                            mov edx, eax	      5191	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248	ELSE_91
0xa8b8	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5191	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248	ELSE_91
0xa8bf	    0x8990e0000000	             mov dword [rax + 0xe0], edx	      5191	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248	ELSE_91
0xa8c5	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5192	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248
0xa8cc	    0x8b9524fcffff	            mov edx, dword [rbp - 0x3dc]	      5192	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248
0xa8d2	    0x8990dc000000	             mov dword [rax + 0xdc], edx	      5192	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248
0xa8d8	    0xc78514fdffff	              mov dword [rbp - 0x2ec], 1	      5193	screen.c	FUNCTION_28	FOR_1	ELSE_89	IF_248
0xa8e2	    0x83bd4cfcffff	              cmp dword [rbp - 0x3b4], 0	      5198	screen.c	FUNCTION_28	FOR_1	IF_250
0xa8e9	            0x7e1e	                           jle 0x400a949	      5198	screen.c	FUNCTION_28	FOR_1	IF_250
0xa8eb	    0x83bdfcfcffff	              cmp dword [rbp - 0x304], 7	      5199	screen.c	FUNCTION_28	FOR_1	IF_250
0xa8f2	            0x7515	                           jne 0x400a949	      5199	screen.c	FUNCTION_28	FOR_1	IF_250
0xa8f4	    0x83bd70fcffff	              cmp dword [rbp - 0x390], 0	      5200	screen.c	FUNCTION_28	FOR_1	IF_250
0xa8fb	            0x750c	                           jne 0x400a949	      5200	screen.c	FUNCTION_28	FOR_1	IF_250
0xa8fd	    0x8b8534fcffff	            mov eax, dword [rbp - 0x3cc]	      5201	screen.c	FUNCTION_28	FOR_1	IF_250
0xa903	    0x89856cfcffff	            mov dword [rbp - 0x394], eax	      5201	screen.c	FUNCTION_28	FOR_1	IF_250
0xa909	    0x83bd3cfcffff	              cmp dword [rbp - 0x3c4], 0	      5246	screen.c	FUNCTION_28	FOR_1	IF_257
0xa910	     0xf8459010000	                            je 0x400aaaf	      5246	screen.c	FUNCTION_28	FOR_1	IF_257
0xa916	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5247	screen.c	FUNCTION_28	FOR_1	IF_257
0xa91d	    0x8b8034020000	           mov eax, dword [rax + 0x234] 	      5247	screen.c	FUNCTION_28	FOR_1	IF_257
0xa923	            0x85c0	                           test eax, eax	      5247	screen.c	FUNCTION_28	FOR_1	IF_257
0xa925	     0xf8444010000	                            je 0x400aaaf	      5247	screen.c	FUNCTION_28	FOR_1	IF_257
0xa92b	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5248	screen.c	FUNCTION_28	FOR_1	IF_257
0xa932	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      5248	screen.c	FUNCTION_28	FOR_1	IF_257
0xa938	            0x85c0	                           test eax, eax	      5248	screen.c	FUNCTION_28	FOR_1	IF_257
0xa93a	            0x7414	                            je 0x400a990	      5248	screen.c	FUNCTION_28	FOR_1	IF_257
0xa93c	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5248	screen.c	FUNCTION_28	FOR_1	IF_257
0xa943	    0x8b8098000000	            mov eax, dword [rax + 0x98] 	      5248	screen.c	FUNCTION_28	FOR_1	IF_257
0xa949	            0x85c0	                           test eax, eax	      5248	screen.c	FUNCTION_28	FOR_1	IF_257
0xa94b	           0xf9fc0	                                 setg al	      5248	screen.c	FUNCTION_28	FOR_1	IF_257
0xa94e	            0xeb12	                           jmp 0x400a9a2	      5248	screen.c	FUNCTION_28	FOR_1	IF_257
0xa950	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5248	screen.c	FUNCTION_28	FOR_1	IF_257
0xa957	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	      5248	screen.c	FUNCTION_28	FOR_1	IF_257
0xa95d	            0x85c0	                           test eax, eax	      5248	screen.c	FUNCTION_28	FOR_1	IF_257
0xa95f	           0xf9fc0	                                 setg al	      5248	screen.c	FUNCTION_28	FOR_1	IF_257
0xa962	            0x84c0	                             test al, al	      5248	screen.c	FUNCTION_28	FOR_1	IF_257
0xa964	     0xf8405010000	                            je 0x400aaaf	      5248	screen.c	FUNCTION_28	FOR_1	IF_257
0xa96a	    0x83bdc8fcffff	              cmp dword [rbp - 0x338], 0	      5250	screen.c	FUNCTION_28	FOR_1	IF_257
0xa971	     0xf8ff8000000	                            jg 0x400aaaf	      5250	screen.c	FUNCTION_28	FOR_1	IF_257
0xa977	    0x83bdfcfcffff	              cmp dword [rbp - 0x304], 4	      5252	screen.c	FUNCTION_28	FOR_1	IF_257
0xa97e	     0xf8eeb000000	                           jle 0x400aaaf	      5252	screen.c	FUNCTION_28	FOR_1	IF_257
0xa984	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      5253	screen.c	FUNCTION_28	FOR_1	IF_257
0xa98a	            0x85c0	                           test eax, eax	      5253	screen.c	FUNCTION_28	FOR_1	IF_257
0xa98c	     0xf84dd000000	                            je 0x400aaaf	      5253	screen.c	FUNCTION_28	FOR_1	IF_257
0xa992	    0x8b0500000000	            mov eax, dword [0x0400a9d8] 	      5255	screen.c	FUNCTION_28	FOR_1	IF_257
0xa998	    0x8985fcfbffff	            mov dword [rbp - 0x404], eax	      5255	screen.c	FUNCTION_28	FOR_1	IF_257
0xa99e	    0xc7853cfcffff	              mov dword [rbp - 0x3c4], 0	      5256	screen.c	FUNCTION_28	FOR_1	IF_257
0xa9a8	    0x8b0500000000	            mov eax, dword [0x0400a9ee] 	      5258	screen.c	FUNCTION_28	FOR_1	IF_257	IF_258
0xa9ae	            0x85c0	                           test eax, eax	      5258	screen.c	FUNCTION_28	FOR_1	IF_257	IF_258
0xa9b0	            0x7440	                            je 0x400aa32	      5258	screen.c	FUNCTION_28	FOR_1	IF_257	IF_258
0xa9b2	    0x488b05000000	            mov rax, qword [0x0400a9f9] 	      5258	screen.c	FUNCTION_28	FOR_1	IF_257	IF_258
0xa9b9	    0x8b95bcfcffff	            mov edx, dword [rbp - 0x344]	      5258	screen.c	FUNCTION_28	FOR_1	IF_257	IF_258
0xa9bf	            0x89d7	                            mov edi, edx	      5258	screen.c	FUNCTION_28	FOR_1	IF_257	IF_258
0xa9c1	            0xffd0	                                call rax	      5258	screen.c	FUNCTION_28	FOR_1	IF_257	IF_258
0xa9c3	          0x83f801	                              cmp eax, 1	      5258	screen.c	FUNCTION_28	FOR_1	IF_257	IF_258
0xa9c6	            0x7e2a	                           jle 0x400aa32	      5258	screen.c	FUNCTION_28	FOR_1	IF_257	IF_258
0xa9c8	    0xc78530fcffff	          mov dword [rbp - 0x3d0], 0x3c 	      5262	screen.c	FUNCTION_28	FOR_1	IF_257	IF_258
0xa9d2	    0xc7852cfcffff	              mov dword [rbp - 0x3d4], 1	      5263	screen.c	FUNCTION_28	FOR_1	IF_257	IF_258
0xa9dc	    0xc7854cfcffff	              mov dword [rbp - 0x3b4], 2	      5264	screen.c	FUNCTION_28	FOR_1	IF_257	IF_258
0xa9e6	    0x8b0500000000	            mov eax, dword [0x0400aa2c] 	      5265	screen.c	FUNCTION_28	FOR_1	IF_257	IF_258	CALL_179
0xa9ec	    0x898534fcffff	            mov dword [rbp - 0x3cc], eax	      5265	screen.c	FUNCTION_28	FOR_1	IF_257	IF_258	CALL_179
0xa9f2	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      5267	screen.c	FUNCTION_28	FOR_1	IF_257
0xa9f8	    0x8985bcfcffff	            mov dword [rbp - 0x344], eax	      5267	screen.c	FUNCTION_28	FOR_1	IF_257
0xa9fe	    0x8b0500000000	            mov eax, dword [0x0400aa44] 	      5268	screen.c	FUNCTION_28	FOR_1	IF_257	IF_259	CALL_180
0xaa04	            0x85c0	                           test eax, eax	      5268	screen.c	FUNCTION_28	FOR_1	IF_257	IF_259	CALL_180
0xaa06	            0x7432	                            je 0x400aa7a	      5268	screen.c	FUNCTION_28	FOR_1	IF_257	IF_259	CALL_180
0xaa08	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      5268	screen.c	FUNCTION_28	FOR_1	IF_257	IF_259	CALL_180
0xaa0e	            0x89c7	                            mov edi, eax	      5268	screen.c	FUNCTION_28	FOR_1	IF_257	IF_259	CALL_180
0xaa10	      0xe800000000	                          call 0x400aa55	      5268	screen.c	FUNCTION_28	FOR_1	IF_257	IF_259	CALL_180
0xaa15	          0x83f801	                              cmp eax, 1	      5268	screen.c	FUNCTION_28	FOR_1	IF_257	IF_259	CALL_180
0xaa18	            0x7e20	                           jle 0x400aa7a	      5268	screen.c	FUNCTION_28	FOR_1	IF_257	IF_259	CALL_180
0xaa1a	    0xc785c0fcffff	              mov dword [rbp - 0x340], 1	      5270	screen.c	FUNCTION_28	FOR_1	IF_257	IF_259
0xaa24	    0xc78550feffff	              mov dword [rbp - 0x1b0], 0	      5271	screen.c	FUNCTION_28	FOR_1	IF_257	IF_259
0xaa2e	    0xc785fcfbffff	          mov dword [rbp - 0x404], 0xc0 	      5272	screen.c	FUNCTION_28	FOR_1	IF_257	IF_259
0xaa38	            0xeb0a	                           jmp 0x400aa84	      5272	screen.c	FUNCTION_28	FOR_1	IF_257	IF_259
0xaa3a	    0xc785c0fcffff	              mov dword [rbp - 0x340], 0	      5275	screen.c	FUNCTION_28	FOR_1	IF_257	ELSE_94
0xaa44	    0x83bd70fcffff	              cmp dword [rbp - 0x390], 0	      5277	screen.c	FUNCTION_28	FOR_1	IF_257	ELSE_94	IF_260
0xaa4b	            0x7522	                           jne 0x400aaaf	      5277	screen.c	FUNCTION_28	FOR_1	IF_257	ELSE_94	IF_260
0xaa4d	    0x8b856cfcffff	            mov eax, dword [rbp - 0x394]	      5279	screen.c	FUNCTION_28	FOR_1	IF_257	ELSE_94	IF_260
0xaa53	    0x898558fcffff	            mov dword [rbp - 0x3a8], eax	      5279	screen.c	FUNCTION_28	FOR_1	IF_257	ELSE_94	IF_260
0xaa59	    0x8b0500000000	            mov eax, dword [0x0400aa9f] 	      5280	screen.c	FUNCTION_28	FOR_1	IF_257	ELSE_94	IF_260	CALL_181
0xaa5f	    0x89856cfcffff	            mov dword [rbp - 0x394], eax	      5280	screen.c	FUNCTION_28	FOR_1	IF_257	ELSE_94	IF_260	CALL_181
0xaa65	    0xc78554fcffff	              mov dword [rbp - 0x3ac], 1	      5281	screen.c	FUNCTION_28	FOR_1	IF_257	ELSE_94	IF_260
0xaa6f	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      5288	screen.c	FUNCTION_28	FOR_1	IF_261
0xaa75	            0x85c0	                           test eax, eax	      5288	screen.c	FUNCTION_28	FOR_1	IF_261
0xaa77	            0x740d	                            je 0x400aac6	      5288	screen.c	FUNCTION_28	FOR_1	IF_261
0xaa79	    0x83bdf0fcffff	              cmp dword [rbp - 0x310], 1	      5290	screen.c	FUNCTION_28	FOR_1	IF_261
0xaa80	     0xf8512040000	                           jne 0x400aed8	      5290	screen.c	FUNCTION_28	FOR_1	IF_261
0xaa86	    0x488b95b0fdff	            mov rdx, qword [rbp - 0x250]	      5295	screen.c	FUNCTION_28	FOR_1	IF_261
0xaa8d	    0x488b85a8fdff	            mov rax, qword [rbp - 0x258]	      5295	screen.c	FUNCTION_28	FOR_1	IF_261
0xaa94	          0x4829c2	                            sub rdx, rax	      5295	screen.c	FUNCTION_28	FOR_1	IF_261
0xaa97	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      5295	screen.c	FUNCTION_28	FOR_1	IF_261
0xaa9d	            0x85c0	                           test eax, eax	      5295	screen.c	FUNCTION_28	FOR_1	IF_261
0xaa9f	           0xf94c0	                                 sete al	      5295	screen.c	FUNCTION_28	FOR_1	IF_261
0xaaa2	           0xfb6c0	                           movzx eax, al	      5295	screen.c	FUNCTION_28	FOR_1	IF_261
0xaaa5	          0x4829c2	                            sub rdx, rax	      5295	screen.c	FUNCTION_28	FOR_1	IF_261
0xaaa8	          0x4889d0	                            mov rax, rdx	      5295	screen.c	FUNCTION_28	FOR_1	IF_261
0xaaab	    0x48898528feff	            mov qword [rbp - 0x1d8], rax	      5295	screen.c	FUNCTION_28	FOR_1	IF_261
0xaab2	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5298	screen.c	FUNCTION_28	FOR_1	IF_261	IF_262
0xaab9	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      5298	screen.c	FUNCTION_28	FOR_1	IF_261	IF_262
0xaabf	            0x85c0	                           test eax, eax	      5298	screen.c	FUNCTION_28	FOR_1	IF_261	IF_262
0xaac1	            0x7411	                            je 0x400ab14	      5298	screen.c	FUNCTION_28	FOR_1	IF_261	IF_262
0xaac3	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5298	screen.c	FUNCTION_28	FOR_1	IF_261	IF_262
0xaaca	    0x8b8098000000	            mov eax, dword [rax + 0x98] 	      5298	screen.c	FUNCTION_28	FOR_1	IF_261	IF_262
0xaad0	            0x4898	                                    cdqe	      5298	screen.c	FUNCTION_28	FOR_1	IF_261	IF_262
0xaad2	            0xeb0f	                           jmp 0x400ab23	      5298	screen.c	FUNCTION_28	FOR_1	IF_261	IF_262
0xaad4	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5298	screen.c	FUNCTION_28	FOR_1	IF_261	IF_262
0xaadb	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	      5298	screen.c	FUNCTION_28	FOR_1	IF_261	IF_262
0xaae1	            0x4898	                                    cdqe	      5298	screen.c	FUNCTION_28	FOR_1	IF_261	IF_262
0xaae3	    0x483b8528feff	            cmp rax, qword [rbp - 0x1d8]	      5298	screen.c	FUNCTION_28	FOR_1	IF_261	IF_262
0xaaea	            0x7e08	                           jle 0x400ab34	      5298	screen.c	FUNCTION_28	FOR_1	IF_261	IF_262
0xaaec	    0x48838528feff	              add qword [rbp - 0x1d8], 1	      5299	screen.c	FUNCTION_28	FOR_1	IF_261	IF_262
0xaaf4	    0xc785e4fcffff	              mov dword [rbp - 0x31c], 0	      5307	screen.c	FUNCTION_28	FOR_1	IF_261
0xaafe	    0x8b0500000000	            mov eax, dword [0x0400ab44] 	      5308	screen.c	FUNCTION_28	FOR_1	IF_261	IF_263
0xab04	            0x85c0	                           test eax, eax	      5308	screen.c	FUNCTION_28	FOR_1	IF_261	IF_263
0xab06	            0x751d	                           jne 0x400ab65	      5308	screen.c	FUNCTION_28	FOR_1	IF_261	IF_263
0xab08	    0x8b0500000000	            mov eax, dword [0x0400ab4e] 	      5308	screen.c	FUNCTION_28	FOR_1	IF_261	IF_263
0xab0e	            0x4898	                                    cdqe	      5308	screen.c	FUNCTION_28	FOR_1	IF_261	IF_263
0xab10	    0x483b8528feff	            cmp rax, qword [rbp - 0x1d8]	      5308	screen.c	FUNCTION_28	FOR_1	IF_261	IF_263
0xab17	            0x750c	                           jne 0x400ab65	      5308	screen.c	FUNCTION_28	FOR_1	IF_261	IF_263
0xab19	    0xc785e4fcffff	              mov dword [rbp - 0x31c], 1	      5309	screen.c	FUNCTION_28	FOR_1	IF_261	IF_263
0xab23	            0xeb67	                           jmp 0x400abcc	      5309	screen.c	FUNCTION_28	FOR_1	IF_261	IF_263
0xab25	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5312	screen.c	FUNCTION_28	FOR_1	IF_261	ELSE_95
0xab2c	    0x488b80501500	          mov rax, qword [rax + 0x1550] 	      5312	screen.c	FUNCTION_28	FOR_1	IF_261	ELSE_95
0xab33	    0x488985e0fdff	            mov qword [rbp - 0x220], rax	      5312	screen.c	FUNCTION_28	FOR_1	IF_261	ELSE_95
0xab3a	            0xeb46	                           jmp 0x400abc2	      5313	screen.c	FUNCTION_28	FOR_1	IF_261	ELSE_95	WHILE_7
0xab3c	    0x488b85e0fdff	            mov rax, qword [rbp - 0x220]	      5315	screen.c	FUNCTION_28	FOR_1	IF_261	ELSE_95	WHILE_7	IF_264
0xab43	    0x8b8080030000	           mov eax, dword [rax + 0x380] 	      5315	screen.c	FUNCTION_28	FOR_1	IF_261	ELSE_95	WHILE_7	IF_264
0xab49	            0x85c0	                           test eax, eax	      5315	screen.c	FUNCTION_28	FOR_1	IF_261	ELSE_95	WHILE_7	IF_264
0xab4b	            0x7524	                           jne 0x400abb1	      5315	screen.c	FUNCTION_28	FOR_1	IF_261	ELSE_95	WHILE_7	IF_264
0xab4d	    0x488b85e0fdff	            mov rax, qword [rbp - 0x220]	      5315	screen.c	FUNCTION_28	FOR_1	IF_261	ELSE_95	WHILE_7	IF_264
0xab54	    0x8b8078030000	           mov eax, dword [rax + 0x378] 	      5315	screen.c	FUNCTION_28	FOR_1	IF_261	ELSE_95	WHILE_7	IF_264
0xab5a	            0x4898	                                    cdqe	      5315	screen.c	FUNCTION_28	FOR_1	IF_261	ELSE_95	WHILE_7	IF_264
0xab5c	    0x483b8528feff	            cmp rax, qword [rbp - 0x1d8]	      5315	screen.c	FUNCTION_28	FOR_1	IF_261	ELSE_95	WHILE_7	IF_264
0xab63	            0x750c	                           jne 0x400abb1	      5315	screen.c	FUNCTION_28	FOR_1	IF_261	ELSE_95	WHILE_7	IF_264
0xab65	    0xc785e4fcffff	              mov dword [rbp - 0x31c], 1	      5317	screen.c	FUNCTION_28	FOR_1	IF_261	ELSE_95	WHILE_7	IF_264
0xab6f	            0xeb1b	                           jmp 0x400abcc	      5318	screen.c	FUNCTION_28	FOR_1	IF_261	ELSE_95	WHILE_7	IF_264
0xab71	    0x488b85e0fdff	            mov rax, qword [rbp - 0x220]	      5320	screen.c	FUNCTION_28	FOR_1	IF_261	ELSE_95	WHILE_7
0xab78	          0x488b00	                    mov rax, qword [rax]	      5320	screen.c	FUNCTION_28	FOR_1	IF_261	ELSE_95	WHILE_7
0xab7b	    0x488985e0fdff	            mov qword [rbp - 0x220], rax	      5320	screen.c	FUNCTION_28	FOR_1	IF_261	ELSE_95	WHILE_7
0xab82	    0x4883bde0fdff	              cmp qword [rbp - 0x220], 0	      5313	screen.c	FUNCTION_28	FOR_1	IF_261	ELSE_95	WHILE_7
0xab8a	            0x75b0	                           jne 0x400ab7c	      5313	screen.c	FUNCTION_28	FOR_1	IF_261	ELSE_95	WHILE_7
0xab8c	    0x8b0500000000	            mov eax, dword [0x0400abd2] 	      5324	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xab92	    0x3b8538fcffff	            cmp eax, dword [rbp - 0x3c8]	      5324	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xab98	     0xf85fa020000	                           jne 0x400aed8	      5324	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xab9e	    0x83bd7cfcffff	              cmp dword [rbp - 0x384], 0	      5325	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xaba5	            0x744a	                            je 0x400ac31	      5325	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xaba7	    0x8b8500fcffff	            mov eax, dword [rbp - 0x400]	      5325	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xabad	            0x4898	                                    cdqe	      5325	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xabaf	    0x483b8590fdff	            cmp rax, qword [rbp - 0x270]	      5325	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xabb6	            0x7539	                           jne 0x400ac31	      5325	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xabb8	    0x8b0500000000	            mov eax, dword [0x0400abfe] 	      5326	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xabbe	          0x83f816	                           cmp eax, 0x16	      5326	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xabc1	            0x7524	                           jne 0x400ac27	      5326	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xabc3	    0x488b05000000	            mov rax, qword [0x0400ac0a] 	      5327	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xabca	    0x483b85e0fbff	            cmp rax, qword [rbp - 0x420]	      5327	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xabd1	            0x7414	                            je 0x400ac27	      5327	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xabd3	    0x488b05000000	            mov rax, qword [0x0400ac1a] 	      5328	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xabda	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5328	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xabde	    0x483b85e0fbff	            cmp rax, qword [rbp - 0x420]	      5328	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xabe5	            0x750a	                           jne 0x400ac31	      5328	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xabe7	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      5329	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xabed	            0x85c0	                           test eax, eax	      5329	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xabef	            0x746e	                            je 0x400ac9f	      5329	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xabf1	    0x83bde4fcffff	              cmp dword [rbp - 0x31c], 1	      5332	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xabf8	     0xf859a020000	                           jne 0x400aed8	      5332	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xabfe	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5334	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xac05	    0x8b8070020000	           mov eax, dword [rax + 0x270] 	      5334	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xac0b	            0x85c0	                           test eax, eax	      5334	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xac0d	            0x7436	                            je 0x400ac85	      5334	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xac0f	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5334	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xac16	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5334	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xac1a	    0x483b85e0fbff	            cmp rax, qword [rbp - 0x420]	      5334	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xac21	            0x7522	                           jne 0x400ac85	      5334	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xac23	    0x488b05000000	            mov rax, qword [0x0400ac6a] 	      5335	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xac2a	    0x483985e8fbff	           cmp qword [rbp - 0x418], rax 	      5334	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xac31	     0xf8561020000	                           jne 0x400aed8	      5334	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xac37	    0x8b0500000000	            mov eax, dword [0x0400ac7d] 	      5335	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xac3d	            0x85c0	                           test eax, eax	      5335	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xac3f	     0xf8453020000	                            je 0x400aed8	      5335	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xac45	    0x83bdccfcffff	              cmp dword [rbp - 0x334], 0	      5338	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xac4c	     0xf8546020000	                           jne 0x400aed8	      5338	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xac52	    0x83bdf0fcffff	              cmp dword [rbp - 0x310], 1	      5341	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xac59	     0xf8f39020000	                            jg 0x400aed8	      5341	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xac5f	    0xc78544fdffff	              mov dword [rbp - 0x2bc], 0	      5347	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xac69	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5350	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_266
0xac70	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      5350	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_266
0xac76	            0x85c0	                           test eax, eax	      5350	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_266
0xac78	            0x7415	                            je 0x400accf	      5350	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_266
0xac7a	    0x83bd1cfcffff	              cmp dword [rbp - 0x3e4], 0	      5352	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_266	IF_267
0xac81	            0x792b	                           jns 0x400acee	      5352	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_266	IF_267
0xac83	    0xc78544fdffff	              mov dword [rbp - 0x2bc], 1	      5353	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_266	IF_267
0xac8d	            0xeb1f	                           jmp 0x400acee	      5353	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_266	IF_267
0xac8f	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5358	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	ELSE_96	IF_268
0xac96	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      5358	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	ELSE_96	IF_268
0xac9c	    0x3b851cfcffff	            cmp eax, dword [rbp - 0x3e4]	      5358	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	ELSE_96	IF_268
0xaca2	            0x7f0a	                            jg 0x400acee	      5358	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	ELSE_96	IF_268
0xaca4	    0xc78544fdffff	    mov dword [rbp - 0x2bc], 0xffffffff 	      5359	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	ELSE_96	IF_268
0xacae	    0x83bd44fdffff	              cmp dword [rbp - 0x2bc], 0	      5361	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_269
0xacb5	            0x741a	                            je 0x400ad11	      5361	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_269
0xacb7	    0x8b8544fdffff	            mov eax, dword [rbp - 0x2bc]	      5365	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_269
0xacbd	     0x18520fcffff	            add dword [rbp - 0x3e0], eax	      5365	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_269
0xacc3	    0x8b8544fdffff	            mov eax, dword [rbp - 0x2bc]	      5366	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_269
0xacc9	     0x1851cfcffff	            add dword [rbp - 0x3e4], eax	      5366	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_269
0xaccf	            0xeb37	                           jmp 0x400ad48	      5366	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_269
0xacd1	    0x488b15000000	            mov rdx, qword [0x0400ad18] 	      5371	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	ELSE_97
0xacd8	    0x8b8520fcffff	            mov eax, dword [rbp - 0x3e0]	      5371	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	ELSE_97
0xacde	          0x4801d0	                            add rax, rdx	      5371	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	ELSE_97
0xace1	          0xc60020	                    mov byte [rax], 0x20	      5371	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	ELSE_97
0xace4	    0x8b0500000000	            mov eax, dword [0x0400ad2a] 	      5373	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	ELSE_97	IF_270
0xacea	            0x85c0	                           test eax, eax	      5373	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	ELSE_97	IF_270
0xacec	            0x741a	                            je 0x400ad48	      5373	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	ELSE_97	IF_270
0xacee	    0x488b05000000	            mov rax, qword [0x0400ad35] 	      5374	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	ELSE_97	IF_270
0xacf5	    0x8b9520fcffff	            mov edx, dword [rbp - 0x3e0]	      5374	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	ELSE_97	IF_270
0xacfb	        0x48c1e202	                              shl rdx, 2	      5374	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	ELSE_97	IF_270
0xacff	          0x4801d0	                            add rax, rdx	      5374	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	ELSE_97	IF_270
0xad02	    0xc70000000000	                      mov dword [rax], 0	      5374	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	ELSE_97	IF_270
0xad08	    0x83bd7cfcffff	              cmp dword [rbp - 0x384], 0	      5378	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271
0xad0f	     0xf8526010000	                           jne 0x400ae7b	      5378	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271
0xad15	    0x8b0500000000	            mov eax, dword [0x0400ad5b] 	      5382	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271
0xad1b	    0x89856cfcffff	            mov dword [rbp - 0x394], eax	      5382	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271
0xad21	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5383	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271
0xad28	    0x488b80501500	          mov rax, qword [rax + 0x1550] 	      5383	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271
0xad2f	    0x488985e0fdff	            mov qword [rbp - 0x220], rax	      5383	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271
0xad36	    0xc785dcfcffff	              mov dword [rbp - 0x324], 0	      5384	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271
0xad40	      0xe9db000000	                           jmp 0x400ae60	      5385	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8
0xad45	    0x83bddcfcffff	              cmp dword [rbp - 0x324], 0	      5387	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_272
0xad4c	            0x7539	                           jne 0x400adc7	      5387	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_272
0xad4e	    0x4883bde0fdff	              cmp qword [rbp - 0x220], 0	      5388	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_272
0xad56	            0x740e	                            je 0x400ada6	      5388	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_272
0xad58	    0x488b85e0fdff	            mov rax, qword [rbp - 0x220]	      5389	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_272
0xad5f	          0x8b400c	              mov eax, dword [rax + 0xc]	      5389	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_272
0xad62	            0x85c0	                           test eax, eax	      5389	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_272
0xad64	            0x7f0a	                            jg 0x400adb0	      5389	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_272
0xad66	    0x4883bde0fdff	              cmp qword [rbp - 0x220], 0	      5390	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_272
0xad6e	            0x7517	                           jne 0x400adc7	      5390	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_272
0xad70	    0x48c785e8fdff	              mov qword [rbp - 0x218], 0	      5392	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_272
0xad7b	    0xc785dcfcffff	              mov dword [rbp - 0x324], 1	      5393	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_272
0xad85	            0xeb14	                           jmp 0x400addb	      5393	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_272
0xad87	    0x488b85e0fdff	            mov rax, qword [rbp - 0x220]	      5396	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	ELSE_98
0xad8e	    0x480508020000	                          add rax, 0x208	      5396	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	ELSE_98
0xad94	    0x488985e8fdff	            mov qword [rbp - 0x218], rax	      5396	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	ELSE_98
0xad9b	    0x488b95b0fdff	            mov rdx, qword [rbp - 0x250]	      5397	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_273
0xada2	    0x488b85a8fdff	            mov rax, qword [rbp - 0x258]	      5397	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_273
0xada9	          0x4829c2	                            sub rdx, rax	      5397	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_273
0xadac	          0x4889d0	                            mov rax, rdx	      5397	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_273
0xadaf	        0x488d50ff	                      lea rdx, [rax - 1]	      5397	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_273
0xadb3	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      5397	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_273
0xadba	    0x8b8070010000	           mov eax, dword [rax + 0x170] 	      5397	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_273
0xadc0	            0x4898	                                    cdqe	      5397	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_273
0xadc2	          0x4839c2	                            cmp rdx, rax	      5397	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_273
0xadc5	            0x7531	                           jne 0x400ae38	      5397	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_273
0xadc7	    0x4881bde8fdff	              cmp qword [rbp - 0x218], 0	      5398	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_273
0xadd2	            0x7411	                            je 0x400ae25	      5398	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_273
0xadd4	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      5398	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_273
0xaddb	    0x8b8078010000	           mov eax, dword [rax + 0x178] 	      5398	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_273
0xade1	            0x85c0	                           test eax, eax	      5398	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_273
0xade3	            0x7513	                           jne 0x400ae38	      5398	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_273
0xade5	    0x488b85e8fdff	            mov rax, qword [rbp - 0x218]	      5399	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_273
0xadec	    0x8b8060010000	           mov eax, dword [rax + 0x160] 	      5399	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_273
0xadf2	    0x89856cfcffff	            mov dword [rbp - 0x394], eax	      5399	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_273
0xadf8	    0x4881bde8fdff	              cmp qword [rbp - 0x218], 0	      5400	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_274
0xae03	            0x741b	                            je 0x400ae60	      5400	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_274
0xae05	    0x4883bde0fdff	              cmp qword [rbp - 0x220], 0	      5400	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_274
0xae0d	            0x7411	                            je 0x400ae60	      5400	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_274
0xae0f	    0x488b85e0fdff	            mov rax, qword [rbp - 0x220]	      5401	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_274
0xae16	          0x488b00	                    mov rax, qword [rax]	      5401	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_274
0xae19	    0x488985e0fdff	            mov qword [rbp - 0x220], rax	      5401	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8	IF_274
0xae20	    0x4883bde0fdff	              cmp qword [rbp - 0x220], 0	      5385	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8
0xae28	     0xf8517ffffff	                           jne 0x400ad85	      5385	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8
0xae2e	    0x83bddcfcffff	              cmp dword [rbp - 0x324], 0	      5385	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8
0xae35	     0xf840affffff	                            je 0x400ad85	      5385	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_271	WHILE_8
0xae3b	    0x488b05000000	            mov rax, qword [0x0400ae82] 	      5405	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xae42	    0x8b9520fcffff	            mov edx, dword [rbp - 0x3e0]	      5405	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xae48	          0x4801d2	                            add rdx, rdx	      5405	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xae4b	          0x4801d0	                            add rax, rdx	      5405	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xae4e	    0x8b956cfcffff	            mov edx, dword [rbp - 0x394]	      5405	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xae54	          0x668910	                      mov word [rax], dx	      5405	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xae57	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5407	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_275
0xae5e	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      5407	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_275
0xae64	            0x85c0	                           test eax, eax	      5407	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_275
0xae66	            0x7410	                            je 0x400aeb8	      5407	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_275
0xae68	    0x83ad1cfcffff	              sub dword [rbp - 0x3e4], 1	      5409	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_275
0xae6f	    0x83ad20fcffff	              sub dword [rbp - 0x3e0], 1	      5410	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_275
0xae76	            0xeb0e	                           jmp 0x400aec6	      5410	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	IF_275
0xae78	    0x83851cfcffff	              add dword [rbp - 0x3e4], 1	      5415	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	ELSE_99
0xae7f	    0x838520fcffff	              add dword [rbp - 0x3e0], 1	      5416	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265	ELSE_99
0xae86	    0x48838590fdff	              add qword [rbp - 0x270], 1	      5418	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xae8e	    0xc78590fcffff	              mov dword [rbp - 0x370], 1	      5420	screen.c	FUNCTION_28	FOR_1	IF_261	IF_265
0xae98	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      5428	screen.c	FUNCTION_28	FOR_1	IF_276
0xae9e	            0x85c0	                           test eax, eax	      5428	screen.c	FUNCTION_28	FOR_1	IF_276
0xaea0	     0xf8517050000	                           jne 0x400b3fd	      5428	screen.c	FUNCTION_28	FOR_1	IF_276
0xaea6	    0x83bd90fcffff	              cmp dword [rbp - 0x370], 0	      5431	screen.c	FUNCTION_28	FOR_1	IF_276	IF_277
0xaead	            0x7e50	                           jle 0x400af3f	      5431	screen.c	FUNCTION_28	FOR_1	IF_276	IF_277
0xaeaf	    0x8b8590fcffff	            mov eax, dword [rbp - 0x370]	      5431	screen.c	FUNCTION_28	FOR_1	IF_276	IF_277
0xaeb5	            0x4898	                                    cdqe	      5431	screen.c	FUNCTION_28	FOR_1	IF_276	IF_277
0xaeb7	    0x488b9590fdff	            mov rdx, qword [rbp - 0x270]	      5431	screen.c	FUNCTION_28	FOR_1	IF_276	IF_277
0xaebe	          0x4829c2	                            sub rdx, rax	      5431	screen.c	FUNCTION_28	FOR_1	IF_276	IF_277
0xaec1	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5431	screen.c	FUNCTION_28	FOR_1	IF_276	IF_277
0xaec8	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	      5431	screen.c	FUNCTION_28	FOR_1	IF_276	IF_277
0xaece	            0x4898	                                    cdqe	      5431	screen.c	FUNCTION_28	FOR_1	IF_276	IF_277
0xaed0	          0x4839c2	                            cmp rdx, rax	      5431	screen.c	FUNCTION_28	FOR_1	IF_276	IF_277
0xaed3	            0x752a	                           jne 0x400af3f	      5431	screen.c	FUNCTION_28	FOR_1	IF_276	IF_277
0xaed5	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5432	screen.c	FUNCTION_28	FOR_1	IF_276	IF_277
0xaedc	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5432	screen.c	FUNCTION_28	FOR_1	IF_276	IF_277
0xaee0	    0x483b85e0fbff	            cmp rax, qword [rbp - 0x420]	      5432	screen.c	FUNCTION_28	FOR_1	IF_276	IF_277
0xaee7	            0x7516	                           jne 0x400af3f	      5432	screen.c	FUNCTION_28	FOR_1	IF_276	IF_277
0xaee9	    0x83ad1cfcffff	              sub dword [rbp - 0x3e4], 1	      5435	screen.c	FUNCTION_28	FOR_1	IF_276	IF_277
0xaef0	    0x83ad20fcffff	              sub dword [rbp - 0x3e0], 1	      5436	screen.c	FUNCTION_28	FOR_1	IF_276	IF_277
0xaef7	    0x4883ad90fdff	              sub qword [rbp - 0x270], 1	      5437	screen.c	FUNCTION_28	FOR_1	IF_276	IF_277
0xaeff	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5441	screen.c	FUNCTION_28	FOR_1	IF_276	IF_278
0xaf06	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      5441	screen.c	FUNCTION_28	FOR_1	IF_276	IF_278
0xaf0c	            0x85c0	                           test eax, eax	      5441	screen.c	FUNCTION_28	FOR_1	IF_276	IF_278
0xaf0e	            0x7418	                            je 0x400af68	      5441	screen.c	FUNCTION_28	FOR_1	IF_276	IF_278
0xaf10	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5442	screen.c	FUNCTION_28	FOR_1	IF_276	IF_278
0xaf17	    0x8b8098000000	            mov eax, dword [rax + 0x98] 	      5442	screen.c	FUNCTION_28	FOR_1	IF_276	IF_278
0xaf1d	            0x4898	                                    cdqe	      5442	screen.c	FUNCTION_28	FOR_1	IF_276	IF_278
0xaf1f	    0x488985d8fdff	            mov qword [rbp - 0x228], rax	      5442	screen.c	FUNCTION_28	FOR_1	IF_276	IF_278
0xaf26	            0xeb16	                           jmp 0x400af7e	      5442	screen.c	FUNCTION_28	FOR_1	IF_276	IF_278
0xaf28	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5444	screen.c	FUNCTION_28	FOR_1	IF_276	ELSE_100
0xaf2f	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	      5444	screen.c	FUNCTION_28	FOR_1	IF_276	ELSE_100
0xaf35	            0x4898	                                    cdqe	      5444	screen.c	FUNCTION_28	FOR_1	IF_276	ELSE_100
0xaf37	    0x488985d8fdff	            mov qword [rbp - 0x228], rax	      5444	screen.c	FUNCTION_28	FOR_1	IF_276	ELSE_100
0xaf3e	    0x8b851cfcffff	            mov eax, dword [rbp - 0x3e4]	      5447	screen.c	FUNCTION_28	FOR_1	IF_276	IF_279	CALL_182
0xaf44	          0x4863d0	                         movsxd rdx, eax	      5447	screen.c	FUNCTION_28	FOR_1	IF_276	IF_279	CALL_182
0xaf47	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      5447	screen.c	FUNCTION_28	FOR_1	IF_276	IF_279	CALL_182
0xaf4e	        0x488d1c02	                    lea rbx, [rdx + rax]	      5447	screen.c	FUNCTION_28	FOR_1	IF_276	IF_279	CALL_182
0xaf52	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5447	screen.c	FUNCTION_28	FOR_1	IF_276	IF_279	CALL_182
0xaf59	          0x4889c7	                            mov rdi, rax	      5447	screen.c	FUNCTION_28	FOR_1	IF_276	IF_279	CALL_182
0xaf5c	      0xe800000000	                          call 0x400afa1	      5447	screen.c	FUNCTION_28	FOR_1	IF_276	IF_279	CALL_182
0xaf61	            0x4898	                                    cdqe	      5447	screen.c	FUNCTION_28	FOR_1	IF_276	IF_279	CALL_182
0xaf63	          0x4829c3	                            sub rbx, rax	      5447	screen.c	FUNCTION_28	FOR_1	IF_276	IF_279	CALL_182
0xaf66	          0x4889d8	                            mov rax, rbx	      5447	screen.c	FUNCTION_28	FOR_1	IF_276	IF_279	CALL_182
0xaf69	    0x483b8590fdff	            cmp rax, qword [rbp - 0x270]	      5447	screen.c	FUNCTION_28	FOR_1	IF_276	IF_279	CALL_182
0xaf70	            0x7e32	                           jle 0x400afe4	      5447	screen.c	FUNCTION_28	FOR_1	IF_276	IF_279	CALL_182
0xaf72	    0x8b851cfcffff	            mov eax, dword [rbp - 0x3e4]	      5448	screen.c	FUNCTION_28	FOR_1	IF_276	CALL_183
0xaf78	          0x4863d0	                         movsxd rdx, eax	      5448	screen.c	FUNCTION_28	FOR_1	IF_276	CALL_183
0xaf7b	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      5448	screen.c	FUNCTION_28	FOR_1	IF_276	CALL_183
0xaf82	        0x488d1c02	                    lea rbx, [rdx + rax]	      5448	screen.c	FUNCTION_28	FOR_1	IF_276	CALL_183
0xaf86	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5448	screen.c	FUNCTION_28	FOR_1	IF_276	CALL_183
0xaf8d	          0x4889c7	                            mov rdi, rax	      5448	screen.c	FUNCTION_28	FOR_1	IF_276	CALL_183
0xaf90	      0xe800000000	                          call 0x400afd5	      5448	screen.c	FUNCTION_28	FOR_1	IF_276	CALL_183
0xaf95	            0x4898	                                    cdqe	      5448	screen.c	FUNCTION_28	FOR_1	IF_276	CALL_183
0xaf97	          0x4829c3	                            sub rbx, rax	      5448	screen.c	FUNCTION_28	FOR_1	IF_276	CALL_183
0xaf9a	          0x4889d8	                            mov rax, rbx	      5448	screen.c	FUNCTION_28	FOR_1	IF_276	CALL_183
0xaf9d	    0x48898590fdff	            mov qword [rbp - 0x270], rax	      5448	screen.c	FUNCTION_28	FOR_1	IF_276	CALL_183
0xafa4	    0x8b850cfdffff	            mov eax, dword [rbp - 0x2f4]	      5452	screen.c	FUNCTION_28	FOR_1	IF_276
0xafaa	    0x29851cfcffff	            sub dword [rbp - 0x3e4], eax	      5452	screen.c	FUNCTION_28	FOR_1	IF_276
0xafb0	    0xc7850cfdffff	              mov dword [rbp - 0x2f4], 0	      5453	screen.c	FUNCTION_28	FOR_1	IF_276
0xafba	    0x83bd94fcffff	              cmp dword [rbp - 0x36c], 0	      5456	screen.c	FUNCTION_28	FOR_1	IF_276	IF_280
0xafc1	            0x742c	                            je 0x400b02f	      5456	screen.c	FUNCTION_28	FOR_1	IF_276	IF_280
0xafc3	    0x488b8590fdff	            mov rax, qword [rbp - 0x270]	      5457	screen.c	FUNCTION_28	FOR_1	IF_276	CALL_184
0xafca	            0x89c2	                            mov edx, eax	      5457	screen.c	FUNCTION_28	FOR_1	IF_276	CALL_184
0xafcc	    0x8b8510fdffff	            mov eax, dword [rbp - 0x2f0]	      5457	screen.c	FUNCTION_28	FOR_1	IF_276	CALL_184
0xafd2	            0x29c2	                            sub edx, eax	      5457	screen.c	FUNCTION_28	FOR_1	IF_276	CALL_184
0xafd4	            0x89d0	                            mov eax, edx	      5457	screen.c	FUNCTION_28	FOR_1	IF_276	CALL_184
0xafd6	            0x89c2	                            mov edx, eax	      5457	screen.c	FUNCTION_28	FOR_1	IF_276	CALL_184
0xafd8	    0x488d8588fdff	                  lea rax, [rbp - 0x278]	      5457	screen.c	FUNCTION_28	FOR_1	IF_276	CALL_184
0xafdf	          0x4889c6	                            mov rsi, rax	      5457	screen.c	FUNCTION_28	FOR_1	IF_276	CALL_184
0xafe2	            0x89d7	                            mov edi, edx	      5457	screen.c	FUNCTION_28	FOR_1	IF_276	CALL_184
0xafe4	      0xe81099ffff	              call sym.advance_color_col	      5457	screen.c	FUNCTION_28	FOR_1	IF_276	CALL_184
0xafe9	    0x898594fcffff	            mov dword [rbp - 0x36c], eax	      5457	screen.c	FUNCTION_28	FOR_1	IF_276	CALL_184
0xafef	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5459	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0xaff6	    0x8b806c020000	           mov eax, dword [rax + 0x26c] 	      5459	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0xaffc	            0x85c0	                           test eax, eax	      5459	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0xaffe	     0xf848b000000	                            je 0x400b0cf	      5459	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0xb004	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5460	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0xb00b	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	      5460	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0xb011	            0x4898	                                    cdqe	      5460	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0xb013	    0x8b9510fdffff	            mov edx, dword [rbp - 0x2f0]	      5460	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0xb019	          0x4863d2	                         movsxd rdx, edx	      5460	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0xb01c	    0x488b8d90fdff	            mov rcx, qword [rbp - 0x270]	      5460	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0xb023	          0x4829d1	                            sub rcx, rdx	      5460	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0xb026	    0x8b9590fcffff	            mov edx, dword [rbp - 0x370]	      5460	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0xb02c	          0x4863d2	                         movsxd rdx, edx	      5460	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0xb02f	          0x4829d1	                            sub rcx, rdx	      5460	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0xb032	          0x4889ca	                            mov rdx, rcx	      5460	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0xb035	          0x4839d0	                            cmp rax, rdx	      5460	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0xb038	            0x7c55	                            jl 0x400b0cf	      5460	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0xb03a	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5461	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0xb041	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	      5461	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0xb047	          0x4863d0	                         movsxd rdx, eax	      5461	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0xb04a	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5462	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0xb051	    0x8b88ac000000	            mov ecx, dword [rax + 0xac] 	      5462	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0xb057	    0x8b8524fcffff	            mov eax, dword [rbp - 0x3dc]	      5462	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0xb05d	    0x2b85dcfbffff	            sub eax, dword [rbp - 0x424]	      5462	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0xb063	          0x83c001	                              add eax, 1	      5462	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0xb066	           0xfafc1	                           imul eax, ecx	      5462	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0xb069	          0x4863c8	                         movsxd rcx, eax	      5462	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0xb06c	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      5462	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0xb073	          0x4801c8	                            add rax, rcx	      5462	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0xb076	          0x4839c2	                            cmp rdx, rax	      5461	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0xb079	            0x7d14	                           jge 0x400b0cf	      5461	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0xb07b	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5463	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0xb082	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5463	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0xb086	    0x483b85e0fbff	            cmp rax, qword [rbp - 0x420]	      5463	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0xb08d	            0x750d	                           jne 0x400b0dc	      5463	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0xb08f	    0x83bd94fcffff	              cmp dword [rbp - 0x36c], 0	      5464	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0xb096	     0xf8452020000	                            je 0x400b32e	      5464	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0xb09c	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5466	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0xb0a3	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      5466	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0xb0a9	            0x85c0	                           test eax, eax	      5466	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0xb0ab	     0xf853d020000	                           jne 0x400b32e	      5466	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0xb0b1	    0xc78548fdffff	              mov dword [rbp - 0x2b8], 0	      5470	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281
0xb0bb	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5473	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_282
0xb0c2	    0x8b806c020000	           mov eax, dword [rax + 0x26c] 	      5473	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_282
0xb0c8	            0x85c0	                           test eax, eax	      5473	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_282
0xb0ca	            0x7413	                            je 0x400b11f	      5473	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_282
0xb0cc	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5474	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_282
0xb0d3	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	      5474	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_282
0xb0d9	    0x898548fdffff	            mov dword [rbp - 0x2b8], eax	      5474	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_282
0xb0df	    0x83bd94fcffff	              cmp dword [rbp - 0x36c], 0	      5475	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_283
0xb0e6	     0xf84e6010000	                            je 0x400b312	      5475	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_283
0xb0ec	    0xc7854cfdffff	              mov dword [rbp - 0x2b4], 0	      5477	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_283	FOR_5
0xb0f6	            0xeb47	                           jmp 0x400b17f	      5477	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_283	FOR_5
0xb0f8	    0x488b8588fdff	            mov rax, qword [rbp - 0x278]	      5478	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_283	FOR_5	IF_284
0xb0ff	    0x8b954cfdffff	            mov edx, dword [rbp - 0x2b4]	      5478	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_283	FOR_5	IF_284
0xb105	          0x4863d2	                         movsxd rdx, edx	      5478	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_283	FOR_5	IF_284
0xb108	        0x48c1e202	                              shl rdx, 2	      5478	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_283	FOR_5	IF_284
0xb10c	          0x4801d0	                            add rax, rdx	      5478	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_283	FOR_5	IF_284
0xb10f	            0x8b00	                    mov eax, dword [rax]	      5478	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_283	FOR_5	IF_284
0xb111	    0x3b8548fdffff	            cmp eax, dword [rbp - 0x2b8]	      5478	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_283	FOR_5	IF_284
0xb117	            0x7e1f	                           jle 0x400b178	      5478	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_283	FOR_5	IF_284
0xb119	    0x488b8588fdff	            mov rax, qword [rbp - 0x278]	      5479	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_283	FOR_5	IF_284
0xb120	    0x8b954cfdffff	            mov edx, dword [rbp - 0x2b4]	      5479	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_283	FOR_5	IF_284
0xb126	          0x4863d2	                         movsxd rdx, edx	      5479	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_283	FOR_5	IF_284
0xb129	        0x48c1e202	                              shl rdx, 2	      5479	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_283	FOR_5	IF_284
0xb12d	          0x4801d0	                            add rax, rdx	      5479	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_283	FOR_5	IF_284
0xb130	            0x8b00	                    mov eax, dword [rax]	      5479	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_283	FOR_5	IF_284
0xb132	    0x898548fdffff	            mov dword [rbp - 0x2b8], eax	      5479	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_283	FOR_5	IF_284
0xb138	    0x83854cfdffff	              add dword [rbp - 0x2b4], 1	      5477	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_283	FOR_5
0xb13f	    0x488b8588fdff	            mov rax, qword [rbp - 0x278]	      5477	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_283	FOR_5
0xb146	    0x8b954cfdffff	            mov edx, dword [rbp - 0x2b4]	      5477	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_283	FOR_5
0xb14c	          0x4863d2	                         movsxd rdx, edx	      5477	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_283	FOR_5
0xb14f	        0x48c1e202	                              shl rdx, 2	      5477	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_283	FOR_5
0xb153	          0x4801d0	                            add rax, rdx	      5477	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_283	FOR_5
0xb156	            0x8b00	                    mov eax, dword [rax]	      5477	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_283	FOR_5
0xb158	            0x85c0	                           test eax, eax	      5477	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_283	FOR_5
0xb15a	            0x799c	                           jns 0x400b138	      5477	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	IF_283	FOR_5
0xb15c	      0xe971010000	                           jmp 0x400b312	      5481	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9
0xb161	    0x488b15000000	            mov rdx, qword [0x0400b1a8] 	      5483	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9
0xb168	    0x8b8520fcffff	            mov eax, dword [rbp - 0x3e0]	      5483	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9
0xb16e	          0x4801d0	                            add rax, rdx	      5483	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9
0xb171	          0xc60020	                    mov byte [rax], 0x20	      5483	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9
0xb174	    0x8b0500000000	            mov eax, dword [0x0400b1ba] 	      5485	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_285
0xb17a	            0x85c0	                           test eax, eax	      5485	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_285
0xb17c	            0x741a	                            je 0x400b1d8	      5485	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_285
0xb17e	    0x488b05000000	            mov rax, qword [0x0400b1c5] 	      5486	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_285
0xb185	    0x8b9520fcffff	            mov edx, dword [rbp - 0x3e0]	      5486	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_285
0xb18b	        0x48c1e202	                              shl rdx, 2	      5486	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_285
0xb18f	          0x4801d0	                            add rax, rdx	      5486	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_285
0xb192	    0xc70000000000	                      mov dword [rax], 0	      5486	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_285
0xb198	    0x83851cfcffff	              add dword [rbp - 0x3e4], 1	      5488	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9
0xb19f	    0x83bd94fcffff	              cmp dword [rbp - 0x36c], 0	      5489	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_286
0xb1a6	            0x742c	                            je 0x400b214	      5489	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_286
0xb1a8	    0x488b8590fdff	            mov rax, qword [rbp - 0x270]	      5490	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_286	CALL_185
0xb1af	            0x89c2	                            mov edx, eax	      5490	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_286	CALL_185
0xb1b1	    0x8b8510fdffff	            mov eax, dword [rbp - 0x2f0]	      5490	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_286	CALL_185
0xb1b7	            0x29c2	                            sub edx, eax	      5490	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_286	CALL_185
0xb1b9	            0x89d0	                            mov eax, edx	      5490	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_286	CALL_185
0xb1bb	            0x89c2	                            mov edx, eax	      5490	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_286	CALL_185
0xb1bd	    0x488d8588fdff	                  lea rax, [rbp - 0x278]	      5490	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_286	CALL_185
0xb1c4	          0x4889c6	                            mov rsi, rax	      5490	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_286	CALL_185
0xb1c7	            0x89d7	                            mov edi, edx	      5490	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_286	CALL_185
0xb1c9	      0xe82b97ffff	              call sym.advance_color_col	      5490	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_286	CALL_185
0xb1ce	    0x898594fcffff	            mov dword [rbp - 0x36c], eax	      5490	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_286	CALL_185
0xb1d4	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5493	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_287
0xb1db	    0x8b806c020000	           mov eax, dword [rax + 0x26c] 	      5493	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_287
0xb1e1	            0x85c0	                           test eax, eax	      5493	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_287
0xb1e3	            0x744f	                            je 0x400b274	      5493	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_287
0xb1e5	    0x8b8510fdffff	            mov eax, dword [rbp - 0x2f0]	      5493	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_287
0xb1eb	            0x4898	                                    cdqe	      5493	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_287
0xb1ed	    0x488b9590fdff	            mov rdx, qword [rbp - 0x270]	      5493	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_287
0xb1f4	          0x4829c2	                            sub rdx, rax	      5493	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_287
0xb1f7	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5493	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_287
0xb1fe	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	      5493	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_287
0xb204	            0x4898	                                    cdqe	      5493	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_287
0xb206	          0x4839c2	                            cmp rdx, rax	      5493	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_287
0xb209	            0x7529	                           jne 0x400b274	      5493	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_287
0xb20b	    0x488b0d000000	            mov rcx, qword [0x0400b252] 	      5494	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	CALL_186
0xb212	    0x8b8520fcffff	            mov eax, dword [rbp - 0x3e0]	      5494	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	CALL_186
0xb218	          0x8d5001	                      lea edx, [rax + 1]	      5494	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	CALL_186
0xb21b	    0x899520fcffff	            mov dword [rbp - 0x3e0], edx	      5494	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	CALL_186
0xb221	            0x89c0	                            mov eax, eax	      5494	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	CALL_186
0xb223	          0x4801c0	                            add rax, rax	      5494	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	CALL_186
0xb226	          0x4801c8	                            add rax, rcx	      5494	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	CALL_186
0xb229	    0x8b1500000000	            mov edx, dword [0x0400b26f] 	      5494	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	CALL_186
0xb22f	          0x668910	                      mov word [rax], dx	      5494	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	CALL_186
0xb232	            0xeb77	                           jmp 0x400b2eb	      5494	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	CALL_186
0xb234	    0x83bd94fcffff	              cmp dword [rbp - 0x36c], 0	      5495	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	ELSE_101	IF_288
0xb23b	            0x744b	                            je 0x400b2c8	      5495	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	ELSE_101	IF_288
0xb23d	    0x8b8510fdffff	            mov eax, dword [rbp - 0x2f0]	      5495	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	ELSE_101	IF_288
0xb243	            0x4898	                                    cdqe	      5495	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	ELSE_101	IF_288
0xb245	    0x488b9590fdff	            mov rdx, qword [rbp - 0x270]	      5495	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	ELSE_101	IF_288
0xb24c	          0x4829c2	                            sub rdx, rax	      5495	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	ELSE_101	IF_288
0xb24f	    0x488b8588fdff	            mov rax, qword [rbp - 0x278]	      5495	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	ELSE_101	IF_288
0xb256	            0x8b00	                    mov eax, dword [rax]	      5495	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	ELSE_101	IF_288
0xb258	            0x4898	                                    cdqe	      5495	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	ELSE_101	IF_288
0xb25a	          0x4839c2	                            cmp rdx, rax	      5495	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	ELSE_101	IF_288
0xb25d	            0x7529	                           jne 0x400b2c8	      5495	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	ELSE_101	IF_288
0xb25f	    0x488b0d000000	            mov rcx, qword [0x0400b2a6] 	      5496	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	ELSE_101	IF_288
0xb266	    0x8b8520fcffff	            mov eax, dword [rbp - 0x3e0]	      5496	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	ELSE_101	IF_288
0xb26c	          0x8d5001	                      lea edx, [rax + 1]	      5496	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	ELSE_101	IF_288
0xb26f	    0x899520fcffff	            mov dword [rbp - 0x3e0], edx	      5496	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	ELSE_101	IF_288
0xb275	            0x89c0	                            mov eax, eax	      5496	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	ELSE_101	IF_288
0xb277	          0x4801c0	                            add rax, rax	      5496	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	ELSE_101	IF_288
0xb27a	          0x4801c8	                            add rax, rcx	      5496	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	ELSE_101	IF_288
0xb27d	    0x8b1500000000	            mov edx, dword [0x0400b2c3] 	      5496	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	ELSE_101	IF_288
0xb283	          0x668910	                      mov word [rax], dx	      5496	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	ELSE_101	IF_288
0xb286	            0xeb23	                           jmp 0x400b2eb	      5496	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	ELSE_101	IF_288
0xb288	    0x488b0d000000	            mov rcx, qword [0x0400b2cf] 	      5498	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	ELSE_102
0xb28f	    0x8b8520fcffff	            mov eax, dword [rbp - 0x3e0]	      5498	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	ELSE_102
0xb295	          0x8d5001	                      lea edx, [rax + 1]	      5498	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	ELSE_102
0xb298	    0x899520fcffff	            mov dword [rbp - 0x3e0], edx	      5498	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	ELSE_102
0xb29e	            0x89c0	                            mov eax, eax	      5498	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	ELSE_102
0xb2a0	          0x4801c0	                            add rax, rax	      5498	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	ELSE_102
0xb2a3	          0x4801c8	                            add rax, rcx	      5498	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	ELSE_102
0xb2a6	      0x66c7000000	                       mov word [rax], 0	      5498	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	ELSE_102
0xb2ab	    0x8b8510fdffff	            mov eax, dword [rbp - 0x2f0]	      5500	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_289
0xb2b1	            0x4898	                                    cdqe	      5500	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_289
0xb2b3	    0x488b9590fdff	            mov rdx, qword [rbp - 0x270]	      5500	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_289
0xb2ba	          0x4829c2	                            sub rdx, rax	      5500	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_289
0xb2bd	    0x8b8548fdffff	            mov eax, dword [rbp - 0x2b8]	      5500	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_289
0xb2c3	            0x4898	                                    cdqe	      5500	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_289
0xb2c5	          0x4839c2	                            cmp rdx, rax	      5500	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_289
0xb2c8	            0x7d23	                           jge 0x400b32d	      5500	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_289
0xb2ca	    0x48838590fdff	              add qword [rbp - 0x270], 1	      5503	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9
0xb2d2	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5481	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9
0xb2d9	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      5481	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9
0xb2df	    0x3b851cfcffff	            cmp eax, dword [rbp - 0x3e4]	      5481	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9
0xb2e5	     0xf8f76feffff	                            jg 0x400b1a1	      5481	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9
0xb2eb	            0xeb01	                           jmp 0x400b32e	      5481	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9
0xb2ed	              0x90	                                     nop	      5501	screen.c	FUNCTION_28	FOR_1	IF_276	IF_281	WHILE_9	IF_289
0xb2ee	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5508	screen.c	FUNCTION_28	FOR_1	IF_276	CALL_188
0xb2f5	    0x8bb854020000	           mov edi, dword [rax + 0x254] 	      5508	screen.c	FUNCTION_28	FOR_1	IF_276	CALL_188
0xb2fb	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5508	screen.c	FUNCTION_28	FOR_1	IF_276	CALL_188
0xb302	    0x8b88ac000000	            mov ecx, dword [rax + 0xac] 	      5508	screen.c	FUNCTION_28	FOR_1	IF_276	CALL_188
0xb308	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5508	screen.c	FUNCTION_28	FOR_1	IF_276	CALL_188
0xb30f	    0x8bb0a8000000	            mov esi, dword [rax + 0xa8] 	      5508	screen.c	FUNCTION_28	FOR_1	IF_276	CALL_188
0xb315	    0x8b951cfcffff	            mov edx, dword [rbp - 0x3e4]	      5508	screen.c	FUNCTION_28	FOR_1	IF_276	CALL_188
0xb31b	    0x8b8528fcffff	            mov eax, dword [rbp - 0x3d8]	      5508	screen.c	FUNCTION_28	FOR_1	IF_276	CALL_188
0xb321	          0x4189f8	                            mov r8d, edi	      5508	screen.c	FUNCTION_28	FOR_1	IF_276	CALL_188
0xb324	            0x89c7	                            mov edi, eax	      5508	screen.c	FUNCTION_28	FOR_1	IF_276	CALL_188
0xb326	      0xe800000000	                          call 0x400b36b	      5508	screen.c	FUNCTION_28	FOR_1	IF_276	CALL_188
0xb32b	    0x838524fcffff	              add dword [rbp - 0x3dc], 1	      5510	screen.c	FUNCTION_28	FOR_1	IF_276
0xb332	    0x488b05000000	            mov rax, qword [0x0400b379] 	      5516	screen.c	FUNCTION_28	FOR_1	IF_276	IF_290
0xb339	    0x483985e8fbff	           cmp qword [rbp - 0x418], rax 	      5516	screen.c	FUNCTION_28	FOR_1	IF_276	IF_290
0xb340	     0xf85cc0c0000	                           jne 0x400c052	      5516	screen.c	FUNCTION_28	FOR_1	IF_276	IF_290
0xb346	    0x488b05000000	            mov rax, qword [0x0400b38d] 	      5516	screen.c	FUNCTION_28	FOR_1	IF_276	IF_290
0xb34d	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5516	screen.c	FUNCTION_28	FOR_1	IF_276	IF_290
0xb351	    0x483b85e0fbff	            cmp rax, qword [rbp - 0x420]	      5516	screen.c	FUNCTION_28	FOR_1	IF_276	IF_290
0xb358	     0xf85b40c0000	                           jne 0x400c052	      5516	screen.c	FUNCTION_28	FOR_1	IF_276	IF_290
0xb35e	    0x488b05000000	            mov rax, qword [0x0400b3a5] 	      5518	screen.c	FUNCTION_28	FOR_1	IF_276	IF_290
0xb365	    0x8b95dcfbffff	            mov edx, dword [rbp - 0x424]	      5518	screen.c	FUNCTION_28	FOR_1	IF_276	IF_290
0xb36b	    0x8990d4000000	             mov dword [rax + 0xd4], edx	      5518	screen.c	FUNCTION_28	FOR_1	IF_276	IF_290
0xb371	    0x488b05000000	            mov rax, qword [0x0400b3b8] 	      5519	screen.c	FUNCTION_28	FOR_1	IF_276	IF_290
0xb378	    0x8b9524fcffff	            mov edx, dword [rbp - 0x3dc]	      5519	screen.c	FUNCTION_28	FOR_1	IF_276	IF_290
0xb37e	    0x2b95dcfbffff	            sub edx, dword [rbp - 0x424]	      5519	screen.c	FUNCTION_28	FOR_1	IF_276	IF_290
0xb384	    0x8990cc000000	             mov dword [rax + 0xcc], edx	      5519	screen.c	FUNCTION_28	FOR_1	IF_276	IF_290
0xb38a	    0x488b05000000	            mov rax, qword [0x0400b3d1] 	      5521	screen.c	FUNCTION_28	FOR_1	IF_276	IF_290
0xb391	    0xc780d0000000	               mov dword [rax + 0xd0], 0	      5521	screen.c	FUNCTION_28	FOR_1	IF_276	IF_290
0xb39b	    0x488b05000000	            mov rax, qword [0x0400b3e2] 	      5523	screen.c	FUNCTION_28	FOR_1	IF_276	IF_290
0xb3a2	    0x488b15000000	            mov rdx, qword [0x0400b3e9] 	      5523	screen.c	FUNCTION_28	FOR_1	IF_276	IF_290
0xb3a9	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      5523	screen.c	FUNCTION_28	FOR_1	IF_276	IF_290
0xb3af	          0x83ca18	                            or edx, 0x18	      5523	screen.c	FUNCTION_28	FOR_1	IF_276	IF_290
0xb3b2	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      5523	screen.c	FUNCTION_28	FOR_1	IF_276	IF_290
0xb3b8	      0xe9550c0000	                           jmp 0x400c052	      5526	screen.c	FUNCTION_28	FOR_1	IF_276
0xb3bd	    0x8b0500000000	            mov eax, dword [0x0400b403] 	      5530	screen.c	FUNCTION_28	FOR_1	IF_291
0xb3c3	            0x85c0	                           test eax, eax	      5530	screen.c	FUNCTION_28	FOR_1	IF_291
0xb3c5	     0xf8416010000	                            je 0x400b521	      5530	screen.c	FUNCTION_28	FOR_1	IF_291
0xb3cb	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5531	screen.c	FUNCTION_28	FOR_1	IF_291
0xb3d2	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      5531	screen.c	FUNCTION_28	FOR_1	IF_291
0xb3d8	            0x85c0	                           test eax, eax	      5531	screen.c	FUNCTION_28	FOR_1	IF_291
0xb3da	     0xf8501010000	                           jne 0x400b521	      5531	screen.c	FUNCTION_28	FOR_1	IF_291
0xb3e0	    0x83bdc8fcffff	              cmp dword [rbp - 0x338], 0	      5533	screen.c	FUNCTION_28	FOR_1	IF_291
0xb3e7	     0xf8ff4000000	                            jg 0x400b521	      5533	screen.c	FUNCTION_28	FOR_1	IF_291
0xb3ed	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5537	screen.c	FUNCTION_28	FOR_1	IF_291
0xb3f4	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      5537	screen.c	FUNCTION_28	FOR_1	IF_291
0xb3fa	            0x85c0	                           test eax, eax	      5535	screen.c	FUNCTION_28	FOR_1	IF_291
0xb3fc	            0x740c	                            je 0x400b44a	      5535	screen.c	FUNCTION_28	FOR_1	IF_291
0xb3fe	    0x83bd1cfcffff	              cmp dword [rbp - 0x3e4], 0	      5535	screen.c	FUNCTION_28	FOR_1	IF_291
0xb405	           0xf94c0	                                 sete al	      5535	screen.c	FUNCTION_28	FOR_1	IF_291
0xb408	            0xeb19	                           jmp 0x400b463	      5535	screen.c	FUNCTION_28	FOR_1	IF_291
0xb40a	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5539	screen.c	FUNCTION_28	FOR_1	IF_291
0xb411	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      5539	screen.c	FUNCTION_28	FOR_1	IF_291
0xb417	          0x83e801	                              sub eax, 1	      5539	screen.c	FUNCTION_28	FOR_1	IF_291
0xb41a	    0x3b851cfcffff	            cmp eax, dword [rbp - 0x3e4]	      5535	screen.c	FUNCTION_28	FOR_1	IF_291
0xb420	           0xf94c0	                                 sete al	      5535	screen.c	FUNCTION_28	FOR_1	IF_291
0xb423	            0x84c0	                             test al, al	      5535	screen.c	FUNCTION_28	FOR_1	IF_291
0xb425	     0xf84b6000000	                            je 0x400b521	      5535	screen.c	FUNCTION_28	FOR_1	IF_291
0xb42b	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      5540	screen.c	FUNCTION_28	FOR_1	IF_291
0xb432	           0xfb600	                   movzx eax, byte [rax]	      5540	screen.c	FUNCTION_28	FOR_1	IF_291
0xb435	            0x84c0	                             test al, al	      5540	screen.c	FUNCTION_28	FOR_1	IF_291
0xb437	            0x753e	                           jne 0x400b4b7	      5540	screen.c	FUNCTION_28	FOR_1	IF_291
0xb439	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5541	screen.c	FUNCTION_28	FOR_1	IF_291
0xb440	    0x8b8034020000	           mov eax, dword [rax + 0x234] 	      5541	screen.c	FUNCTION_28	FOR_1	IF_291
0xb446	            0x85c0	                           test eax, eax	      5541	screen.c	FUNCTION_28	FOR_1	IF_291
0xb448	            0x7409	                            je 0x400b493	      5541	screen.c	FUNCTION_28	FOR_1	IF_291
0xb44a	    0x83bd38fcffff	              cmp dword [rbp - 0x3c8], 0	      5541	screen.c	FUNCTION_28	FOR_1	IF_291
0xb451	            0x7f24	                            jg 0x400b4b7	      5541	screen.c	FUNCTION_28	FOR_1	IF_291
0xb453	    0x83bd2cfcffff	              cmp dword [rbp - 0x3d4], 0	      5542	screen.c	FUNCTION_28	FOR_1	IF_291
0xb45a	     0xf8481000000	                            je 0x400b521	      5542	screen.c	FUNCTION_28	FOR_1	IF_291
0xb460	    0x83bd30fcffff	              cmp dword [rbp - 0x3d0], 0	      5542	screen.c	FUNCTION_28	FOR_1	IF_291
0xb467	            0x750e	                           jne 0x400b4b7	      5542	screen.c	FUNCTION_28	FOR_1	IF_291
0xb469	    0x488b8580fdff	            mov rax, qword [rbp - 0x280]	      5542	screen.c	FUNCTION_28	FOR_1	IF_291
0xb470	           0xfb600	                   movzx eax, byte [rax]	      5542	screen.c	FUNCTION_28	FOR_1	IF_291
0xb473	            0x84c0	                             test al, al	      5542	screen.c	FUNCTION_28	FOR_1	IF_291
0xb475	            0x746a	                            je 0x400b521	      5542	screen.c	FUNCTION_28	FOR_1	IF_291
0xb477	    0x8b0500000000	            mov eax, dword [0x0400b4bd] 	      5544	screen.c	FUNCTION_28	FOR_1	IF_291
0xb47d	    0x8985fcfbffff	            mov dword [rbp - 0x404], eax	      5544	screen.c	FUNCTION_28	FOR_1	IF_291
0xb483	    0x8b0500000000	            mov eax, dword [0x0400b4c9] 	      5545	screen.c	FUNCTION_28	FOR_1	IF_291	CALL_190
0xb489	    0x89856cfcffff	            mov dword [rbp - 0x394], eax	      5545	screen.c	FUNCTION_28	FOR_1	IF_291	CALL_190
0xb48f	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      5547	screen.c	FUNCTION_28	FOR_1	IF_291
0xb495	    0x8985bcfcffff	            mov dword [rbp - 0x344], eax	      5547	screen.c	FUNCTION_28	FOR_1	IF_291
0xb49b	    0x8b0500000000	            mov eax, dword [0x0400b4e1] 	      5548	screen.c	FUNCTION_28	FOR_1	IF_291	IF_292	CALL_191
0xb4a1	            0x85c0	                           test eax, eax	      5548	screen.c	FUNCTION_28	FOR_1	IF_291	IF_292	CALL_191
0xb4a3	            0x7432	                            je 0x400b517	      5548	screen.c	FUNCTION_28	FOR_1	IF_291	IF_292	CALL_191
0xb4a5	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      5548	screen.c	FUNCTION_28	FOR_1	IF_291	IF_292	CALL_191
0xb4ab	            0x89c7	                            mov edi, eax	      5548	screen.c	FUNCTION_28	FOR_1	IF_291	IF_292	CALL_191
0xb4ad	      0xe800000000	                          call 0x400b4f2	      5548	screen.c	FUNCTION_28	FOR_1	IF_291	IF_292	CALL_191
0xb4b2	          0x83f801	                              cmp eax, 1	      5548	screen.c	FUNCTION_28	FOR_1	IF_291	IF_292	CALL_191
0xb4b5	            0x7e20	                           jle 0x400b517	      5548	screen.c	FUNCTION_28	FOR_1	IF_291	IF_292	CALL_191
0xb4b7	    0xc785c0fcffff	              mov dword [rbp - 0x340], 1	      5550	screen.c	FUNCTION_28	FOR_1	IF_291	IF_292
0xb4c1	    0xc78550feffff	              mov dword [rbp - 0x1b0], 0	      5551	screen.c	FUNCTION_28	FOR_1	IF_291	IF_292
0xb4cb	    0xc785fcfbffff	          mov dword [rbp - 0x404], 0xc0 	      5552	screen.c	FUNCTION_28	FOR_1	IF_291	IF_292
0xb4d5	            0xeb0a	                           jmp 0x400b521	      5552	screen.c	FUNCTION_28	FOR_1	IF_291	IF_292
0xb4d7	    0xc785c0fcffff	              mov dword [rbp - 0x340], 0	      5555	screen.c	FUNCTION_28	FOR_1	IF_291	ELSE_103
0xb4e1	    0x83bd94fcffff	              cmp dword [rbp - 0x36c], 0	      5561	screen.c	FUNCTION_28	FOR_1	IF_293
0xb4e8	            0x742c	                            je 0x400b556	      5561	screen.c	FUNCTION_28	FOR_1	IF_293
0xb4ea	    0x488b8590fdff	            mov rax, qword [rbp - 0x270]	      5562	screen.c	FUNCTION_28	FOR_1	CALL_192
0xb4f1	            0x89c2	                            mov edx, eax	      5562	screen.c	FUNCTION_28	FOR_1	CALL_192
0xb4f3	    0x8b8510fdffff	            mov eax, dword [rbp - 0x2f0]	      5562	screen.c	FUNCTION_28	FOR_1	CALL_192
0xb4f9	            0x29c2	                            sub edx, eax	      5562	screen.c	FUNCTION_28	FOR_1	CALL_192
0xb4fb	            0x89d0	                            mov eax, edx	      5562	screen.c	FUNCTION_28	FOR_1	CALL_192
0xb4fd	            0x89c2	                            mov edx, eax	      5562	screen.c	FUNCTION_28	FOR_1	CALL_192
0xb4ff	    0x488d8588fdff	                  lea rax, [rbp - 0x278]	      5562	screen.c	FUNCTION_28	FOR_1	CALL_192
0xb506	          0x4889c6	                            mov rsi, rax	      5562	screen.c	FUNCTION_28	FOR_1	CALL_192
0xb509	            0x89d7	                            mov edi, edx	      5562	screen.c	FUNCTION_28	FOR_1	CALL_192
0xb50b	      0xe8e993ffff	              call sym.advance_color_col	      5562	screen.c	FUNCTION_28	FOR_1	CALL_192
0xb510	    0x898594fcffff	            mov dword [rbp - 0x36c], eax	      5562	screen.c	FUNCTION_28	FOR_1	CALL_192
0xb516	    0xc78584fcffff	    mov dword [rbp - 0x37c], 0xffffffff 	      5568	screen.c	FUNCTION_28	FOR_1
0xb520	    0x83bdfcfcffff	              cmp dword [rbp - 0x304], 7	      5569	screen.c	FUNCTION_28	FOR_1	IF_294
0xb527	     0xf85ed000000	                           jne 0x400b65a	      5569	screen.c	FUNCTION_28	FOR_1	IF_294
0xb52d	    0x83bd68fcffff	              cmp dword [rbp - 0x398], 0	      5569	screen.c	FUNCTION_28	FOR_1	IF_294
0xb534	     0xf85e0000000	                           jne 0x400b65a	      5569	screen.c	FUNCTION_28	FOR_1	IF_294
0xb53a	    0x83bd80fcffff	              cmp dword [rbp - 0x380], 0	      5570	screen.c	FUNCTION_28	FOR_1	IF_294
0xb541	     0xf85d3000000	                           jne 0x400b65a	      5570	screen.c	FUNCTION_28	FOR_1	IF_294
0xb547	    0x83bd7cfcffff	              cmp dword [rbp - 0x384], 0	      5570	screen.c	FUNCTION_28	FOR_1	IF_294
0xb54e	     0xf85c6000000	                           jne 0x400b65a	      5570	screen.c	FUNCTION_28	FOR_1	IF_294
0xb554	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5572	screen.c	FUNCTION_28	FOR_1	IF_294	IF_295
0xb55b	    0x8b806c020000	           mov eax, dword [rax + 0x26c] 	      5572	screen.c	FUNCTION_28	FOR_1	IF_294	IF_295
0xb561	            0x85c0	                           test eax, eax	      5572	screen.c	FUNCTION_28	FOR_1	IF_294	IF_295
0xb563	            0x7463	                            je 0x400b608	      5572	screen.c	FUNCTION_28	FOR_1	IF_294	IF_295
0xb565	    0x8b8510fdffff	            mov eax, dword [rbp - 0x2f0]	      5572	screen.c	FUNCTION_28	FOR_1	IF_294	IF_295
0xb56b	            0x4898	                                    cdqe	      5572	screen.c	FUNCTION_28	FOR_1	IF_294	IF_295
0xb56d	    0x488b9590fdff	            mov rdx, qword [rbp - 0x270]	      5572	screen.c	FUNCTION_28	FOR_1	IF_294	IF_295
0xb574	          0x4829c2	                            sub rdx, rax	      5572	screen.c	FUNCTION_28	FOR_1	IF_294	IF_295
0xb577	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5572	screen.c	FUNCTION_28	FOR_1	IF_294	IF_295
0xb57e	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	      5572	screen.c	FUNCTION_28	FOR_1	IF_294	IF_295
0xb584	            0x4898	                                    cdqe	      5572	screen.c	FUNCTION_28	FOR_1	IF_294	IF_295
0xb586	          0x4839c2	                            cmp rdx, rax	      5572	screen.c	FUNCTION_28	FOR_1	IF_294	IF_295
0xb589	            0x753d	                           jne 0x400b608	      5572	screen.c	FUNCTION_28	FOR_1	IF_294	IF_295
0xb58b	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5573	screen.c	FUNCTION_28	FOR_1	IF_294	IF_295
0xb592	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5573	screen.c	FUNCTION_28	FOR_1	IF_294	IF_295
0xb596	    0x483b85e0fbff	            cmp rax, qword [rbp - 0x420]	      5573	screen.c	FUNCTION_28	FOR_1	IF_294	IF_295
0xb59d	            0x7429	                            je 0x400b608	      5573	screen.c	FUNCTION_28	FOR_1	IF_294	IF_295
0xb59f	    0x8b856cfcffff	            mov eax, dword [rbp - 0x394]	      5575	screen.c	FUNCTION_28	FOR_1	IF_294	IF_295
0xb5a5	    0x898584fcffff	            mov dword [rbp - 0x37c], eax	      5575	screen.c	FUNCTION_28	FOR_1	IF_294	IF_295
0xb5ab	    0x8b1500000000	            mov edx, dword [0x0400b5f1] 	      5576	screen.c	FUNCTION_28	FOR_1	IF_294	IF_295	CALL_194
0xb5b1	    0x8b856cfcffff	            mov eax, dword [rbp - 0x394]	      5576	screen.c	FUNCTION_28	FOR_1	IF_294	IF_295	CALL_194
0xb5b7	            0x89d6	                            mov esi, edx	      5576	screen.c	FUNCTION_28	FOR_1	IF_294	IF_295	CALL_194
0xb5b9	            0x89c7	                            mov edi, eax	      5576	screen.c	FUNCTION_28	FOR_1	IF_294	IF_295	CALL_194
0xb5bb	      0xe800000000	                          call 0x400b600	      5576	screen.c	FUNCTION_28	FOR_1	IF_294	IF_295	CALL_194
0xb5c0	    0x89856cfcffff	            mov dword [rbp - 0x394], eax	      5576	screen.c	FUNCTION_28	FOR_1	IF_294	IF_295	CALL_194
0xb5c6	            0xeb52	                           jmp 0x400b65a	      5576	screen.c	FUNCTION_28	FOR_1	IF_294	IF_295	CALL_194
0xb5c8	    0x83bd94fcffff	              cmp dword [rbp - 0x36c], 0	      5578	screen.c	FUNCTION_28	FOR_1	IF_294	ELSE_104	IF_296
0xb5cf	            0x7449	                            je 0x400b65a	      5578	screen.c	FUNCTION_28	FOR_1	IF_294	ELSE_104	IF_296
0xb5d1	    0x8b8510fdffff	            mov eax, dword [rbp - 0x2f0]	      5578	screen.c	FUNCTION_28	FOR_1	IF_294	ELSE_104	IF_296
0xb5d7	            0x4898	                                    cdqe	      5578	screen.c	FUNCTION_28	FOR_1	IF_294	ELSE_104	IF_296
0xb5d9	    0x488b9590fdff	            mov rdx, qword [rbp - 0x270]	      5578	screen.c	FUNCTION_28	FOR_1	IF_294	ELSE_104	IF_296
0xb5e0	          0x4829c2	                            sub rdx, rax	      5578	screen.c	FUNCTION_28	FOR_1	IF_294	ELSE_104	IF_296
0xb5e3	    0x488b8588fdff	            mov rax, qword [rbp - 0x278]	      5578	screen.c	FUNCTION_28	FOR_1	IF_294	ELSE_104	IF_296
0xb5ea	            0x8b00	                    mov eax, dword [rax]	      5578	screen.c	FUNCTION_28	FOR_1	IF_294	ELSE_104	IF_296
0xb5ec	            0x4898	                                    cdqe	      5578	screen.c	FUNCTION_28	FOR_1	IF_294	ELSE_104	IF_296
0xb5ee	          0x4839c2	                            cmp rdx, rax	      5578	screen.c	FUNCTION_28	FOR_1	IF_294	ELSE_104	IF_296
0xb5f1	            0x7527	                           jne 0x400b65a	      5578	screen.c	FUNCTION_28	FOR_1	IF_294	ELSE_104	IF_296
0xb5f3	    0x8b856cfcffff	            mov eax, dword [rbp - 0x394]	      5580	screen.c	FUNCTION_28	FOR_1	IF_294	ELSE_104	IF_296
0xb5f9	    0x898584fcffff	            mov dword [rbp - 0x37c], eax	      5580	screen.c	FUNCTION_28	FOR_1	IF_294	ELSE_104	IF_296
0xb5ff	    0x8b1500000000	            mov edx, dword [0x0400b645] 	      5581	screen.c	FUNCTION_28	FOR_1	IF_294	ELSE_104	IF_296	CALL_196
0xb605	    0x8b856cfcffff	            mov eax, dword [rbp - 0x394]	      5581	screen.c	FUNCTION_28	FOR_1	IF_294	ELSE_104	IF_296	CALL_196
0xb60b	            0x89d6	                            mov esi, edx	      5581	screen.c	FUNCTION_28	FOR_1	IF_294	ELSE_104	IF_296	CALL_196
0xb60d	            0x89c7	                            mov edi, eax	      5581	screen.c	FUNCTION_28	FOR_1	IF_294	ELSE_104	IF_296	CALL_196
0xb60f	      0xe800000000	                          call 0x400b654	      5581	screen.c	FUNCTION_28	FOR_1	IF_294	ELSE_104	IF_296	CALL_196
0xb614	    0x89856cfcffff	            mov dword [rbp - 0x394], eax	      5581	screen.c	FUNCTION_28	FOR_1	IF_294	ELSE_104	IF_296	CALL_196
0xb61a	    0x488b8590fdff	            mov rax, qword [rbp - 0x270]	      5590	screen.c	FUNCTION_28	FOR_1
0xb621	    0x488985a0fdff	            mov qword [rbp - 0x260], rax	      5590	screen.c	FUNCTION_28	FOR_1
0xb628	    0x83bdfcfcffff	              cmp dword [rbp - 0x304], 6	      5591	screen.c	FUNCTION_28	FOR_1	IF_297
0xb62f	            0x7e0d	                           jle 0x400b67e	      5591	screen.c	FUNCTION_28	FOR_1	IF_297
0xb631	    0x83bd5cfcffff	              cmp dword [rbp - 0x3a4], 0	      5591	screen.c	FUNCTION_28	FOR_1	IF_297
0xb638	     0xf8fc8020000	                            jg 0x400b946	      5591	screen.c	FUNCTION_28	FOR_1	IF_297
0xb63e	    0x8b0500000000	            mov eax, dword [0x0400b684] 	      5597	screen.c	FUNCTION_28	FOR_1	IF_297	IF_298
0xb644	            0x85c0	                           test eax, eax	      5597	screen.c	FUNCTION_28	FOR_1	IF_297	IF_298
0xb646	            0x7435	                            je 0x400b6bd	      5597	screen.c	FUNCTION_28	FOR_1	IF_297	IF_298
0xb648	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5597	screen.c	FUNCTION_28	FOR_1	IF_297	IF_298
0xb64f	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      5597	screen.c	FUNCTION_28	FOR_1	IF_297	IF_298
0xb655	            0x85c0	                           test eax, eax	      5597	screen.c	FUNCTION_28	FOR_1	IF_297	IF_298
0xb657	            0x7424	                            je 0x400b6bd	      5597	screen.c	FUNCTION_28	FOR_1	IF_297	IF_298
0xb659	    0x488b05000000	            mov rax, qword [0x0400b6a0] 	      5597	screen.c	FUNCTION_28	FOR_1	IF_297	IF_298
0xb660	    0x8b95bcfcffff	            mov edx, dword [rbp - 0x344]	      5597	screen.c	FUNCTION_28	FOR_1	IF_297	IF_298
0xb666	            0x89d7	                            mov edi, edx	      5597	screen.c	FUNCTION_28	FOR_1	IF_297	IF_298
0xb668	            0xffd0	                                call rax	      5597	screen.c	FUNCTION_28	FOR_1	IF_297	IF_298
0xb66a	          0x83f801	                              cmp eax, 1	      5597	screen.c	FUNCTION_28	FOR_1	IF_297	IF_298
0xb66d	            0x7e0e	                           jle 0x400b6bd	      5597	screen.c	FUNCTION_28	FOR_1	IF_297	IF_298
0xb66f	    0x83ad20fcffff	              sub dword [rbp - 0x3e0], 1	      5600	screen.c	FUNCTION_28	FOR_1	IF_297	IF_298
0xb676	    0x83ad1cfcffff	              sub dword [rbp - 0x3e4], 1	      5601	screen.c	FUNCTION_28	FOR_1	IF_297	IF_298
0xb67d	    0x488b15000000	            mov rdx, qword [0x0400b6c4] 	      5604	screen.c	FUNCTION_28	FOR_1	IF_297
0xb684	    0x8b8520fcffff	            mov eax, dword [rbp - 0x3e0]	      5604	screen.c	FUNCTION_28	FOR_1	IF_297
0xb68a	          0x4801d0	                            add rax, rdx	      5604	screen.c	FUNCTION_28	FOR_1	IF_297
0xb68d	    0x8b95fcfbffff	            mov edx, dword [rbp - 0x404]	      5604	screen.c	FUNCTION_28	FOR_1	IF_297
0xb693	            0x8810	                      mov byte [rax], dl	      5604	screen.c	FUNCTION_28	FOR_1	IF_297
0xb695	    0x8b0500000000	            mov eax, dword [0x0400b6db] 	      5606	screen.c	FUNCTION_28	FOR_1	IF_297	IF_299
0xb69b	      0x3dcc260000	                         cmp eax, 0x26cc	      5606	screen.c	FUNCTION_28	FOR_1	IF_297	IF_299
0xb6a0	            0x7542	                           jne 0x400b724	      5606	screen.c	FUNCTION_28	FOR_1	IF_297	IF_299
0xb6a2	    0x8b85bcfcffff	            mov eax, dword [rbp - 0x344]	      5608	screen.c	FUNCTION_28	FOR_1	IF_297	IF_299	IF_300
0xb6a8	      0x2500ff0000	                         and eax, 0xff00	      5608	screen.c	FUNCTION_28	FOR_1	IF_297	IF_299	IF_300
0xb6ad	      0x3d008e0000	                         cmp eax, 0x8e00	      5608	screen.c	FUNCTION_28	FOR_1	IF_297	IF_299	IF_300
0xb6b2	            0x7513	                           jne 0x400b707	      5608	screen.c	FUNCTION_28	FOR_1	IF_297	IF_299	IF_300
0xb6b4	    0x488b15000000	            mov rdx, qword [0x0400b6fb] 	      5609	screen.c	FUNCTION_28	FOR_1	IF_297	IF_299	IF_300
0xb6bb	    0x8b8520fcffff	            mov eax, dword [rbp - 0x3e0]	      5609	screen.c	FUNCTION_28	FOR_1	IF_297	IF_299	IF_300
0xb6c1	          0x4801d0	                            add rax, rdx	      5609	screen.c	FUNCTION_28	FOR_1	IF_297	IF_299	IF_300
0xb6c4	          0xc6008e	                    mov byte [rax], 0x8e	      5609	screen.c	FUNCTION_28	FOR_1	IF_297	IF_299	IF_300
0xb6c7	    0x488b15000000	            mov rdx, qword [0x0400b70e] 	      5610	screen.c	FUNCTION_28	FOR_1	IF_297	IF_299
0xb6ce	    0x8b8520fcffff	            mov eax, dword [rbp - 0x3e0]	      5610	screen.c	FUNCTION_28	FOR_1	IF_297	IF_299
0xb6d4	          0x4801d0	                            add rax, rdx	      5610	screen.c	FUNCTION_28	FOR_1	IF_297	IF_299
0xb6d7	    0x8b95bcfcffff	            mov edx, dword [rbp - 0x344]	      5610	screen.c	FUNCTION_28	FOR_1	IF_297	IF_299
0xb6dd	            0x8810	                      mov byte [rax], dl	      5610	screen.c	FUNCTION_28	FOR_1	IF_297	IF_299
0xb6df	      0xe9d8000000	                           jmp 0x400b7fc	      5610	screen.c	FUNCTION_28	FOR_1	IF_297	IF_299
0xb6e4	    0x8b0500000000	            mov eax, dword [0x0400b72a] 	      5612	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301
0xb6ea	            0x85c0	                           test eax, eax	      5612	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301
0xb6ec	     0xf84ca000000	                            je 0x400b7fc	      5612	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301
0xb6f2	    0x83bdc0fcffff	              cmp dword [rbp - 0x340], 0	      5614	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302
0xb6f9	     0xf84a0000000	                            je 0x400b7df	      5614	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302
0xb6ff	    0x488b05000000	            mov rax, qword [0x0400b746] 	      5618	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302
0xb706	    0x8b9520fcffff	            mov edx, dword [rbp - 0x3e0]	      5618	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302
0xb70c	        0x48c1e202	                              shl rdx, 2	      5618	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302
0xb710	          0x4801c2	                            add rdx, rax	      5618	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302
0xb713	    0x8b85bcfcffff	            mov eax, dword [rbp - 0x344]	      5618	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302
0xb719	            0x8902	                    mov dword [rdx], eax	      5618	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302
0xb71b	    0x8b85fcfbffff	            mov eax, dword [rbp - 0x404]	      5619	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	IF_303
0xb721	           0xfb6c0	                           movzx eax, al	      5619	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	IF_303
0xb724	            0x85c0	                           test eax, eax	      5619	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	IF_303
0xb726	            0x7513	                           jne 0x400b77b	      5619	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	IF_303
0xb728	    0x488b15000000	            mov rdx, qword [0x0400b76f] 	      5620	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	IF_303
0xb72f	    0x8b8520fcffff	            mov eax, dword [rbp - 0x3e0]	      5620	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	IF_303
0xb735	          0x4801d0	                            add rax, rdx	      5620	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	IF_303
0xb738	          0xc60080	                    mov byte [rax], 0x80	      5620	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	IF_303
0xb73b	    0xc78550fdffff	              mov dword [rbp - 0x2b0], 0	      5621	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	FOR_6
0xb745	            0xeb48	                           jmp 0x400b7cf	      5621	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	FOR_6
0xb747	    0x8b8550fdffff	            mov eax, dword [rbp - 0x2b0]	      5623	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	FOR_6
0xb74d	            0x4898	                                    cdqe	      5623	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	FOR_6
0xb74f	    0x488b04c50000	                  mov rax, qword [rax*8]	      5623	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	FOR_6
0xb757	    0x8b9520fcffff	            mov edx, dword [rbp - 0x3e0]	      5623	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	FOR_6
0xb75d	        0x48c1e202	                              shl rdx, 2	      5623	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	FOR_6
0xb761	          0x4801c2	                            add rdx, rax	      5623	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	FOR_6
0xb764	    0x8b8550fdffff	            mov eax, dword [rbp - 0x2b0]	      5623	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	FOR_6
0xb76a	            0x4898	                                    cdqe	      5623	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	FOR_6
0xb76c	    0x8b848550feff	    mov eax, dword [rbp + rax*4 - 0x1b0]	      5623	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	FOR_6
0xb773	            0x8902	                    mov dword [rdx], eax	      5623	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	FOR_6
0xb775	    0x8b8550fdffff	            mov eax, dword [rbp - 0x2b0]	      5624	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	FOR_6	IF_304
0xb77b	            0x4898	                                    cdqe	      5624	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	FOR_6	IF_304
0xb77d	    0x8b848550feff	    mov eax, dword [rbp + rax*4 - 0x1b0]	      5624	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	FOR_6	IF_304
0xb784	            0x85c0	                           test eax, eax	      5624	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	FOR_6	IF_304
0xb786	            0x7433	                            je 0x400b7fb	      5624	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	FOR_6	IF_304
0xb788	    0x838550fdffff	              add dword [rbp - 0x2b0], 1	      5621	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	FOR_6
0xb78f	    0x8b0500000000	            mov eax, dword [0x0400b7d5] 	      5621	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	FOR_6
0xb795	    0x398550fdffff	           cmp dword [rbp - 0x2b0], eax 	      5621	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	FOR_6
0xb79b	            0x7caa	                            jl 0x400b787	      5621	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	FOR_6
0xb79d	            0xeb1d	                           jmp 0x400b7fc	      5621	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	FOR_6
0xb79f	    0x488b05000000	            mov rax, qword [0x0400b7e6] 	      5629	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	ELSE_106
0xb7a6	    0x8b9520fcffff	            mov edx, dword [rbp - 0x3e0]	      5629	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	ELSE_106
0xb7ac	        0x48c1e202	                              shl rdx, 2	      5629	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	ELSE_106
0xb7b0	          0x4801d0	                            add rax, rdx	      5629	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	ELSE_106
0xb7b3	    0xc70000000000	                      mov dword [rax], 0	      5629	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	ELSE_106
0xb7b9	            0xeb01	                           jmp 0x400b7fc	      5629	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	ELSE_106
0xb7bb	              0x90	                                     nop	      5625	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_105	IF_301	IF_302	FOR_6	IF_304
0xb7bc	    0x83bdb4fcffff	              cmp dword [rbp - 0x34c], 0	      5631	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_106	IF_305
0xb7c3	            0x7428	                            je 0x400b82d	      5631	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_106	IF_305
0xb7c5	    0x488b05000000	            mov rax, qword [0x0400b80c] 	      5633	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_106	IF_305
0xb7cc	    0x8b9520fcffff	            mov edx, dword [rbp - 0x3e0]	      5633	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_106	IF_305
0xb7d2	          0x4801d2	                            add rdx, rdx	      5633	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_106	IF_305
0xb7d5	          0x4801d0	                            add rax, rdx	      5633	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_106	IF_305
0xb7d8	    0x8b95b4fcffff	            mov edx, dword [rbp - 0x34c]	      5633	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_106	IF_305
0xb7de	          0x668910	                      mov word [rax], dx	      5633	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_106	IF_305
0xb7e1	    0xc785b4fcffff	              mov dword [rbp - 0x34c], 0	      5634	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_106	IF_305
0xb7eb	            0xeb1c	                           jmp 0x400b849	      5634	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_106	IF_305
0xb7ed	    0x488b05000000	            mov rax, qword [0x0400b834] 	      5638	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107
0xb7f4	    0x8b9520fcffff	            mov edx, dword [rbp - 0x3e0]	      5638	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107
0xb7fa	          0x4801d2	                            add rdx, rdx	      5638	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107
0xb7fd	          0x4801d0	                            add rax, rdx	      5638	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107
0xb800	    0x8b956cfcffff	            mov edx, dword [rbp - 0x394]	      5638	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107
0xb806	          0x668910	                      mov word [rax], dx	      5638	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107
0xb809	    0x8b0500000000	            mov eax, dword [0x0400b84f] 	      5641	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306
0xb80f	            0x85c0	                           test eax, eax	      5641	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306
0xb811	     0xf84b8000000	                            je 0x400b90f	      5641	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306
0xb817	    0x488b05000000	            mov rax, qword [0x0400b85e] 	      5641	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306
0xb81e	    0x8b95bcfcffff	            mov edx, dword [rbp - 0x344]	      5641	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306
0xb824	            0x89d7	                            mov edi, edx	      5641	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306
0xb826	            0xffd0	                                call rax	      5641	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306
0xb828	          0x83f801	                              cmp eax, 1	      5641	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306
0xb82b	     0xf8e9e000000	                           jle 0x400b90f	      5641	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306
0xb831	    0x838520fcffff	              add dword [rbp - 0x3e0], 1	      5644	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306
0xb838	    0x83851cfcffff	              add dword [rbp - 0x3e4], 1	      5645	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306
0xb83f	    0x8b0500000000	            mov eax, dword [0x0400b885] 	      5646	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_307
0xb845	            0x85c0	                           test eax, eax	      5646	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_307
0xb847	            0x7415	                            je 0x400b89e	      5646	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_307
0xb849	    0x488b15000000	            mov rdx, qword [0x0400b890] 	      5648	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_307
0xb850	    0x8b8520fcffff	            mov eax, dword [rbp - 0x3e0]	      5648	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_307
0xb856	          0x4801d0	                            add rax, rdx	      5648	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_307
0xb859	          0xc60000	                       mov byte [rax], 0	      5648	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_307
0xb85c	            0xeb18	                           jmp 0x400b8b6	      5648	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_307
0xb85e	    0x488b15000000	            mov rdx, qword [0x0400b8a5] 	      5651	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	ELSE_108
0xb865	    0x8b8520fcffff	            mov eax, dword [rbp - 0x3e0]	      5651	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	ELSE_108
0xb86b	          0x4801d0	                            add rax, rdx	      5651	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	ELSE_108
0xb86e	    0x8b95bcfcffff	            mov edx, dword [rbp - 0x344]	      5651	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	ELSE_108
0xb874	            0x8810	                      mov byte [rax], dl	      5651	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	ELSE_108
0xb876	    0x83bdfcfcffff	              cmp dword [rbp - 0x304], 4	      5652	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_308
0xb87d	            0x7e11	                           jle 0x400b8d0	      5652	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_308
0xb87f	    0x83bdc8fcffff	              cmp dword [rbp - 0x338], 0	      5654	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_308
0xb886	            0x7f08	                            jg 0x400b8d0	      5654	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_308
0xb888	    0x48838590fdff	              add qword [rbp - 0x270], 1	      5657	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_308
0xb890	    0x8b8504fcffff	            mov eax, dword [rbp - 0x3fc]	      5660	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_309
0xb896	            0x4898	                                    cdqe	      5660	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_309
0xb898	    0x483b8590fdff	            cmp rax, qword [rbp - 0x270]	      5660	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_309
0xb89f	            0x750f	                           jne 0x400b8f0	      5660	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_309
0xb8a1	    0x8b8504fcffff	            mov eax, dword [rbp - 0x3fc]	      5661	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_309
0xb8a7	          0x83c001	                              add eax, 1	      5661	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_309
0xb8aa	    0x898504fcffff	            mov dword [rbp - 0x3fc], eax	      5661	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_309
0xb8b0	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5663	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_310
0xb8b7	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      5663	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_310
0xb8bd	            0x85c0	                           test eax, eax	      5663	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_310
0xb8bf	            0x740e	                            je 0x400b90f	      5663	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_310
0xb8c1	    0x83ad20fcffff	              sub dword [rbp - 0x3e0], 1	      5666	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_310
0xb8c8	    0x83ad1cfcffff	              sub dword [rbp - 0x3e4], 1	      5667	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_107	IF_306	IF_310
0xb8cf	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5673	screen.c	FUNCTION_28	FOR_1	IF_297	IF_311
0xb8d6	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      5673	screen.c	FUNCTION_28	FOR_1	IF_297	IF_311
0xb8dc	            0x85c0	                           test eax, eax	      5673	screen.c	FUNCTION_28	FOR_1	IF_297	IF_311
0xb8de	            0x7413	                            je 0x400b933	      5673	screen.c	FUNCTION_28	FOR_1	IF_297	IF_311
0xb8e0	    0x83ad20fcffff	              sub dword [rbp - 0x3e0], 1	      5675	screen.c	FUNCTION_28	FOR_1	IF_297	IF_311
0xb8e7	    0x83ad1cfcffff	              sub dword [rbp - 0x3e4], 1	      5676	screen.c	FUNCTION_28	FOR_1	IF_297	IF_311
0xb8ee	      0xe996010000	                           jmp 0x400bac9	      5673	screen.c	FUNCTION_28	FOR_1	IF_297	IF_311
0xb8f3	    0x838520fcffff	              add dword [rbp - 0x3e0], 1	      5681	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_109
0xb8fa	    0x83851cfcffff	              add dword [rbp - 0x3e4], 1	      5682	screen.c	FUNCTION_28	FOR_1	IF_297	ELSE_109
0xb901	      0xe983010000	                           jmp 0x400bac9	      5673	screen.c	FUNCTION_28	FOR_1	IF_297	IF_311
0xb906	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5686	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312
0xb90d	    0x488b80a80200	           mov rax, qword [rax + 0x2a8] 	      5686	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312
0xb914	          0x4885c0	                           test rax, rax	      5686	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312
0xb917	     0xf8e62010000	                           jle 0x400babf	      5686	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312
0xb91d	    0x83bd08fdffff	              cmp dword [rbp - 0x2f8], 0	      5686	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312
0xb924	     0xf8455010000	                            je 0x400babf	      5686	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312
0xb92a	    0x83ad5cfcffff	              sub dword [rbp - 0x3a4], 1	      5688	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312
0xb931	    0x838510fdffff	              add dword [rbp - 0x2f0], 1	      5689	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312
0xb938	    0x83bd2cfcffff	              cmp dword [rbp - 0x3d4], 0	      5690	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_313
0xb93f	            0x7e0c	                           jle 0x400b98d	      5690	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_313
0xb941	    0x8b852cfcffff	            mov eax, dword [rbp - 0x3d4]	      5691	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_313
0xb947	     0x18510fdffff	            add dword [rbp - 0x2f0], eax	      5691	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_313
0xb94d	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5692	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314
0xb954	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      5692	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314
0xb95a	            0x85c0	                           test eax, eax	      5692	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314
0xb95c	     0xf84ef000000	                            je 0x400ba91	      5692	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314
0xb962	    0x83bd2cfcffff	              cmp dword [rbp - 0x3d4], 0	      5707	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_315
0xb969	            0x7e66	                           jle 0x400ba11	      5707	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_315
0xb96b	    0x8b852cfcffff	            mov eax, dword [rbp - 0x3d4]	      5709	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_315
0xb971	            0x4898	                                    cdqe	      5709	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_315
0xb973	    0x48018590fdff	           add qword [rbp - 0x270], rax 	      5709	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_315
0xb97a	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5711	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_315	IF_316
0xb981	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      5711	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_315	IF_316
0xb987	            0x85c0	                           test eax, eax	      5711	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_315	IF_316
0xb989	            0x741a	                            je 0x400b9e5	      5711	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_315	IF_316
0xb98b	    0x8b852cfcffff	            mov eax, dword [rbp - 0x3d4]	      5713	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_315	IF_316
0xb991	    0x29851cfcffff	            sub dword [rbp - 0x3e4], eax	      5713	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_315	IF_316
0xb997	    0x8b852cfcffff	            mov eax, dword [rbp - 0x3d4]	      5714	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_315	IF_316
0xb99d	    0x29850cfdffff	            sub dword [rbp - 0x2f4], eax	      5714	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_315	IF_316
0xb9a3	            0xeb18	                           jmp 0x400b9fd	      5714	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_315	IF_316
0xb9a5	    0x8b852cfcffff	            mov eax, dword [rbp - 0x3d4]	      5719	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_315	ELSE_111
0xb9ab	     0x1851cfcffff	            add dword [rbp - 0x3e4], eax	      5719	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_315	ELSE_111
0xb9b1	    0x8b852cfcffff	            mov eax, dword [rbp - 0x3d4]	      5720	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_315	ELSE_111
0xb9b7	     0x1850cfdffff	            add dword [rbp - 0x2f4], eax	      5720	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_315	ELSE_111
0xb9bd	    0xc7852cfcffff	              mov dword [rbp - 0x3d4], 0	      5722	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_315
0xb9c7	    0xc7854cfcffff	              mov dword [rbp - 0x3b4], 0	      5723	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_315
0xb9d1	    0x8b0500000000	            mov eax, dword [0x0400ba17] 	      5728	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_317
0xb9d7	            0x85c0	                           test eax, eax	      5728	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_317
0xb9d9	            0x7445	                            je 0x400ba60	      5728	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_317
0xb9db	    0x488b05000000	            mov rax, qword [0x0400ba22] 	      5728	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_317
0xb9e2	    0x8b95bcfcffff	            mov edx, dword [rbp - 0x344]	      5728	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_317
0xb9e8	            0x89d7	                            mov edi, edx	      5728	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_317
0xb9ea	            0xffd0	                                call rax	      5728	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_317
0xb9ec	          0x83f801	                              cmp eax, 1	      5728	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_317
0xb9ef	            0x7e2f	                           jle 0x400ba60	      5728	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_317
0xb9f1	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5732	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_317	IF_318
0xb9f8	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      5732	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_317	IF_318
0xb9fe	            0x85c0	                           test eax, eax	      5732	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_317	IF_318
0xba00	            0x7410	                            je 0x400ba52	      5732	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_317	IF_318
0xba02	    0x83ad0cfdffff	              sub dword [rbp - 0x2f4], 1	      5734	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_317	IF_318
0xba09	    0x83ad1cfcffff	              sub dword [rbp - 0x3e4], 1	      5735	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_317	IF_318
0xba10	            0xeb0e	                           jmp 0x400ba60	      5735	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_317	IF_318
0xba12	    0x83850cfdffff	              add dword [rbp - 0x2f4], 1	      5740	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_317	ELSE_112
0xba19	    0x83851cfcffff	              add dword [rbp - 0x3e4], 1	      5741	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_317	ELSE_112
0xba20	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5747	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_319
0xba27	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      5747	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_319
0xba2d	            0x85c0	                           test eax, eax	      5747	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_319
0xba2f	            0x7410	                            je 0x400ba81	      5747	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_319
0xba31	    0x83ad0cfdffff	              sub dword [rbp - 0x2f4], 1	      5749	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_319
0xba38	    0x83ad1cfcffff	              sub dword [rbp - 0x3e4], 1	      5750	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	IF_319
0xba3f	            0xeb47	                           jmp 0x400bac8	      5692	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314
0xba41	    0x83850cfdffff	              add dword [rbp - 0x2f4], 1	      5755	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	ELSE_113
0xba48	    0x83851cfcffff	              add dword [rbp - 0x3e4], 1	      5756	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314	ELSE_113
0xba4f	            0xeb37	                           jmp 0x400bac8	      5692	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314
0xba51	    0x83bd2cfcffff	              cmp dword [rbp - 0x3d4], 0	      5761	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	ELSE_114	IF_320
0xba58	            0x7e2e	                           jle 0x400bac8	      5761	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	ELSE_114	IF_320
0xba5a	    0x8b852cfcffff	            mov eax, dword [rbp - 0x3d4]	      5763	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	ELSE_114	IF_320
0xba60	            0x4898	                                    cdqe	      5763	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	ELSE_114	IF_320
0xba62	    0x48018590fdff	           add qword [rbp - 0x270], rax 	      5763	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	ELSE_114	IF_320
0xba69	    0xc7852cfcffff	              mov dword [rbp - 0x3d4], 0	      5764	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	ELSE_114	IF_320
0xba73	    0xc7854cfcffff	              mov dword [rbp - 0x3b4], 0	      5765	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	ELSE_114	IF_320
0xba7d	            0xeb09	                           jmp 0x400bac8	      5692	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314
0xba7f	    0x83ad5cfcffff	              sub dword [rbp - 0x3a4], 1	      5772	screen.c	FUNCTION_28	FOR_1	ELSE_115
0xba86	            0xeb01	                           jmp 0x400bac9	      5772	screen.c	FUNCTION_28	FOR_1	ELSE_115
0xba88	              0x90	                                     nop	      5692	screen.c	FUNCTION_28	FOR_1	ELSE_110	IF_312	IF_314
0xba89	    0x83bdfcfcffff	              cmp dword [rbp - 0x304], 4	      5776	screen.c	FUNCTION_28	FOR_1	IF_321
0xba90	            0x7e11	                           jle 0x400bae3	      5776	screen.c	FUNCTION_28	FOR_1	IF_321
0xba92	    0x83bdc8fcffff	              cmp dword [rbp - 0x338], 0	      5778	screen.c	FUNCTION_28	FOR_1	IF_321
0xba99	            0x7f08	                            jg 0x400bae3	      5778	screen.c	FUNCTION_28	FOR_1	IF_321
0xba9b	    0x48838590fdff	              add qword [rbp - 0x270], 1	      5781	screen.c	FUNCTION_28	FOR_1	IF_321
0xbaa3	    0x83bd84fcffff	              cmp dword [rbp - 0x37c], 0	      5784	screen.c	FUNCTION_28	FOR_1	IF_322
0xbaaa	            0x780c	                            js 0x400baf8	      5784	screen.c	FUNCTION_28	FOR_1	IF_322
0xbaac	    0x8b8584fcffff	            mov eax, dword [rbp - 0x37c]	      5785	screen.c	FUNCTION_28	FOR_1	IF_322
0xbab2	    0x89856cfcffff	            mov dword [rbp - 0x394], eax	      5785	screen.c	FUNCTION_28	FOR_1	IF_322
0xbab8	    0x83bdfcfcffff	              cmp dword [rbp - 0x304], 4	      5789	screen.c	FUNCTION_28	FOR_1	IF_323
0xbabf	            0x7e25	                           jle 0x400bb26	      5789	screen.c	FUNCTION_28	FOR_1	IF_323
0xbac1	    0x83bd54fcffff	              cmp dword [rbp - 0x3ac], 0	      5789	screen.c	FUNCTION_28	FOR_1	IF_323
0xbac8	            0x7e1c	                           jle 0x400bb26	      5789	screen.c	FUNCTION_28	FOR_1	IF_323
0xbaca	    0x83ad54fcffff	              sub dword [rbp - 0x3ac], 1	      5789	screen.c	FUNCTION_28	FOR_1	IF_323
0xbad1	    0x83bd54fcffff	              cmp dword [rbp - 0x3ac], 0	      5789	screen.c	FUNCTION_28	FOR_1	IF_323
0xbad8	            0x750c	                           jne 0x400bb26	      5789	screen.c	FUNCTION_28	FOR_1	IF_323
0xbada	    0x8b8558fcffff	            mov eax, dword [rbp - 0x3a8]	      5790	screen.c	FUNCTION_28	FOR_1	IF_323
0xbae0	    0x89856cfcffff	            mov dword [rbp - 0x394], eax	      5790	screen.c	FUNCTION_28	FOR_1	IF_323
0xbae6	    0x83bd4cfcffff	              cmp dword [rbp - 0x3b4], 0	      5793	screen.c	FUNCTION_28	FOR_1	IF_324
0xbaed	            0x7e25	                           jle 0x400bb54	      5793	screen.c	FUNCTION_28	FOR_1	IF_324
0xbaef	    0x83bdfcfcffff	              cmp dword [rbp - 0x304], 7	      5793	screen.c	FUNCTION_28	FOR_1	IF_324
0xbaf6	            0x751c	                           jne 0x400bb54	      5793	screen.c	FUNCTION_28	FOR_1	IF_324
0xbaf8	    0x83ad4cfcffff	              sub dword [rbp - 0x3b4], 1	      5793	screen.c	FUNCTION_28	FOR_1	IF_324
0xbaff	    0x83bd4cfcffff	              cmp dword [rbp - 0x3b4], 0	      5793	screen.c	FUNCTION_28	FOR_1	IF_324
0xbb06	            0x750c	                           jne 0x400bb54	      5793	screen.c	FUNCTION_28	FOR_1	IF_324
0xbb08	    0x8b8550fcffff	            mov eax, dword [rbp - 0x3b0]	      5794	screen.c	FUNCTION_28	FOR_1	IF_324
0xbb0e	    0x89856cfcffff	            mov dword [rbp - 0x394], eax	      5794	screen.c	FUNCTION_28	FOR_1	IF_324
0xbb14	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5802	screen.c	FUNCTION_28	FOR_1	IF_325
0xbb1b	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      5802	screen.c	FUNCTION_28	FOR_1	IF_325
0xbb21	            0x85c0	                           test eax, eax	      5805	screen.c	FUNCTION_28	FOR_1	IF_325
0xbb23	            0x740b	                            je 0x400bb70	      5805	screen.c	FUNCTION_28	FOR_1	IF_325
0xbb25	    0x8b851cfcffff	            mov eax, dword [rbp - 0x3e4]	      5805	screen.c	FUNCTION_28	FOR_1	IF_325
0xbb2b	          0xc1e81f	                           shr eax, 0x1f	      5805	screen.c	FUNCTION_28	FOR_1	IF_325
0xbb2e	            0xeb16	                           jmp 0x400bb86	      5805	screen.c	FUNCTION_28	FOR_1	IF_325
0xbb30	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5804	screen.c	FUNCTION_28	FOR_1	IF_325
0xbb37	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      5804	screen.c	FUNCTION_28	FOR_1	IF_325
0xbb3d	    0x3b851cfcffff	            cmp eax, dword [rbp - 0x3e4]	      5805	screen.c	FUNCTION_28	FOR_1	IF_325
0xbb43	           0xf9ec0	                                setle al	      5805	screen.c	FUNCTION_28	FOR_1	IF_325
0xbb46	            0x84c0	                             test al, al	      5800	screen.c	FUNCTION_28	FOR_1	IF_325
0xbb48	     0xf8442bbffff	                            je 0x40076d0	      5800	screen.c	FUNCTION_28	FOR_1	IF_325
0xbb4e	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      5805	screen.c	FUNCTION_28	FOR_1	IF_325
0xbb55	           0xfb600	                   movzx eax, byte [rax]	      5805	screen.c	FUNCTION_28	FOR_1	IF_325
0xbb58	            0x84c0	                             test al, al	      5805	screen.c	FUNCTION_28	FOR_1	IF_325
0xbb5a	            0x755f	                           jne 0x400bbfb	      5805	screen.c	FUNCTION_28	FOR_1	IF_325
0xbb5c	    0x83bdc8fcffff	              cmp dword [rbp - 0x338], 0	      5807	screen.c	FUNCTION_28	FOR_1	IF_325
0xbb63	            0x7f56	                            jg 0x400bbfb	      5807	screen.c	FUNCTION_28	FOR_1	IF_325
0xbb65	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5809	screen.c	FUNCTION_28	FOR_1	IF_325
0xbb6c	    0x8b8034020000	           mov eax, dword [rax + 0x234] 	      5809	screen.c	FUNCTION_28	FOR_1	IF_325
0xbb72	            0x85c0	                           test eax, eax	      5809	screen.c	FUNCTION_28	FOR_1	IF_325
0xbb74	            0x741d	                            je 0x400bbd3	      5809	screen.c	FUNCTION_28	FOR_1	IF_325
0xbb76	    0x8b0500000000	            mov eax, dword [0x0400bbbc] 	      5809	screen.c	FUNCTION_28	FOR_1	IF_325
0xbb7c	            0x85c0	                           test eax, eax	      5809	screen.c	FUNCTION_28	FOR_1	IF_325
0xbb7e	            0x7413	                            je 0x400bbd3	      5809	screen.c	FUNCTION_28	FOR_1	IF_325
0xbb80	    0x488b9580fdff	            mov rdx, qword [rbp - 0x280]	      5809	screen.c	FUNCTION_28	FOR_1	IF_325
0xbb87	    0x488b05000000	            mov rax, qword [0x0400bbce] 	      5809	screen.c	FUNCTION_28	FOR_1	IF_325
0xbb8e	          0x4839c2	                            cmp rdx, rax	      5809	screen.c	FUNCTION_28	FOR_1	IF_325
0xbb91	            0x7528	                           jne 0x400bbfb	      5809	screen.c	FUNCTION_28	FOR_1	IF_325
0xbb93	    0x83bd2cfcffff	              cmp dword [rbp - 0x3d4], 0	      5810	screen.c	FUNCTION_28	FOR_1	IF_325
0xbb9a	     0xf84f0baffff	                            je 0x40076d0	      5810	screen.c	FUNCTION_28	FOR_1	IF_325
0xbba0	    0x83bd30fcffff	              cmp dword [rbp - 0x3d0], 0	      5810	screen.c	FUNCTION_28	FOR_1	IF_325
0xbba7	            0x7512	                           jne 0x400bbfb	      5810	screen.c	FUNCTION_28	FOR_1	IF_325
0xbba9	    0x488b8580fdff	            mov rax, qword [rbp - 0x280]	      5810	screen.c	FUNCTION_28	FOR_1	IF_325
0xbbb0	           0xfb600	                   movzx eax, byte [rax]	      5810	screen.c	FUNCTION_28	FOR_1	IF_325
0xbbb3	            0x84c0	                             test al, al	      5810	screen.c	FUNCTION_28	FOR_1	IF_325
0xbbb5	     0xf84d5baffff	                            je 0x40076d0	      5810	screen.c	FUNCTION_28	FOR_1	IF_325
0xbbbb	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5814	screen.c	FUNCTION_28	FOR_1	IF_325	CALL_197
0xbbc2	    0x8bb854020000	           mov edi, dword [rax + 0x254] 	      5814	screen.c	FUNCTION_28	FOR_1	IF_325	CALL_197
0xbbc8	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5814	screen.c	FUNCTION_28	FOR_1	IF_325	CALL_197
0xbbcf	    0x8b88ac000000	            mov ecx, dword [rax + 0xac] 	      5814	screen.c	FUNCTION_28	FOR_1	IF_325	CALL_197
0xbbd5	    0x8b851cfcffff	            mov eax, dword [rbp - 0x3e4]	      5814	screen.c	FUNCTION_28	FOR_1	IF_325	CALL_197
0xbbdb	    0x2b850cfdffff	            sub eax, dword [rbp - 0x2f4]	      5814	screen.c	FUNCTION_28	FOR_1	IF_325	CALL_197
0xbbe1	            0x89c2	                            mov edx, eax	      5814	screen.c	FUNCTION_28	FOR_1	IF_325	CALL_197
0xbbe3	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5814	screen.c	FUNCTION_28	FOR_1	IF_325	CALL_197
0xbbea	    0x8bb0a8000000	            mov esi, dword [rax + 0xa8] 	      5814	screen.c	FUNCTION_28	FOR_1	IF_325	CALL_197
0xbbf0	    0x8b8528fcffff	            mov eax, dword [rbp - 0x3d8]	      5814	screen.c	FUNCTION_28	FOR_1	IF_325	CALL_197
0xbbf6	          0x4189f8	                            mov r8d, edi	      5814	screen.c	FUNCTION_28	FOR_1	IF_325	CALL_197
0xbbf9	            0x89c7	                            mov edi, eax	      5814	screen.c	FUNCTION_28	FOR_1	IF_325	CALL_197
0xbbfb	      0xe800000000	                          call 0x400bc40	      5814	screen.c	FUNCTION_28	FOR_1	IF_325	CALL_197
0xbc00	    0xc7850cfdffff	              mov dword [rbp - 0x2f4], 0	      5816	screen.c	FUNCTION_28	FOR_1	IF_325
0xbc0a	    0x838524fcffff	              add dword [rbp - 0x3dc], 1	      5821	screen.c	FUNCTION_28	FOR_1	IF_325
0xbc11	    0x838528fcffff	              add dword [rbp - 0x3d8], 1	      5822	screen.c	FUNCTION_28	FOR_1	IF_325
0xbc18	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5826	screen.c	FUNCTION_28	FOR_1	IF_325	IF_326
0xbc1f	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      5826	screen.c	FUNCTION_28	FOR_1	IF_325	IF_326
0xbc25	            0x85c0	                           test eax, eax	      5826	screen.c	FUNCTION_28	FOR_1	IF_325	IF_326
0xbc27	            0x750d	                           jne 0x400bc76	      5826	screen.c	FUNCTION_28	FOR_1	IF_325	IF_326
0xbc29	    0x83bdc8fcffff	              cmp dword [rbp - 0x338], 0	      5828	screen.c	FUNCTION_28	FOR_1	IF_325	IF_326
0xbc30	     0xf8ee0030000	                           jle 0x400c056	      5828	screen.c	FUNCTION_28	FOR_1	IF_325	IF_326
0xbc36	    0x83bd38fcffff	cmp dword [rbp - 0x3c8], 0xffffffffffffffff	      5830	screen.c	FUNCTION_28	FOR_1	IF_325	IF_326
0xbc3d	     0xf84d3030000	                            je 0x400c056	      5830	screen.c	FUNCTION_28	FOR_1	IF_325	IF_326
0xbc43	    0x83bdfcfcffff	              cmp dword [rbp - 0x304], 7	      5834	screen.c	FUNCTION_28	FOR_1	IF_325	IF_327
0xbc4a	            0x7463	                            je 0x400bcef	      5834	screen.c	FUNCTION_28	FOR_1	IF_325	IF_327
0xbc4c	    0x83bdc8fcffff	              cmp dword [rbp - 0x338], 0	      5836	screen.c	FUNCTION_28	FOR_1	IF_325	IF_327
0xbc53	            0x7f5a	                            jg 0x400bcef	      5836	screen.c	FUNCTION_28	FOR_1	IF_325	IF_327
0xbc55	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5840	screen.c	FUNCTION_28	FOR_1	IF_325	IF_327	CALL_201
0xbc5c	    0x8b88a0000000	            mov ecx, dword [rax + 0xa0] 	      5840	screen.c	FUNCTION_28	FOR_1	IF_325	IF_327	CALL_201
0xbc62	    0x8b9524fcffff	            mov edx, dword [rbp - 0x3dc]	      5840	screen.c	FUNCTION_28	FOR_1	IF_325	IF_327	CALL_201
0xbc68	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5840	screen.c	FUNCTION_28	FOR_1	IF_325	IF_327	CALL_201
0xbc6f	    0x41b902000000	                              mov r9d, 2	      5840	screen.c	FUNCTION_28	FOR_1	IF_325	IF_327	CALL_201
0xbc75	          0x4189c8	                            mov r8d, ecx	      5840	screen.c	FUNCTION_28	FOR_1	IF_325	IF_327	CALL_201
0xbc78	            0x89d1	                            mov ecx, edx	      5840	screen.c	FUNCTION_28	FOR_1	IF_325	IF_327	CALL_201
0xbc7a	      0xba20000000	                           mov edx, 0x20	      5840	screen.c	FUNCTION_28	FOR_1	IF_325	IF_327	CALL_201
0xbc7f	      0xbe40000000	                           mov esi, 0x40	      5840	screen.c	FUNCTION_28	FOR_1	IF_325	IF_327	CALL_201
0xbc84	          0x4889c7	                            mov rdi, rax	      5840	screen.c	FUNCTION_28	FOR_1	IF_325	IF_327	CALL_201
0xbc87	      0xe8ad86ffff	                   call sym.win_draw_end	      5840	screen.c	FUNCTION_28	FOR_1	IF_325	IF_327	CALL_201
0xbc8c	    0x8b9524fcffff	            mov edx, dword [rbp - 0x3dc]	      5841	screen.c	FUNCTION_28	FOR_1	IF_325	IF_327	CALL_202
0xbc92	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5841	screen.c	FUNCTION_28	FOR_1	IF_325	IF_327	CALL_202
0xbc99	            0x89d6	                            mov esi, edx	      5841	screen.c	FUNCTION_28	FOR_1	IF_325	IF_327	CALL_202
0xbc9b	          0x4889c7	                            mov rdi, rax	      5841	screen.c	FUNCTION_28	FOR_1	IF_325	IF_327	CALL_202
0xbc9e	      0xe851120000	                  call sym.draw_vsep_win	      5841	screen.c	FUNCTION_28	FOR_1	IF_325	IF_327	CALL_202
0xbca3	    0x8b85d8fbffff	            mov eax, dword [rbp - 0x428]	      5842	screen.c	FUNCTION_28	FOR_1	IF_325	IF_327
0xbca9	    0x898524fcffff	            mov dword [rbp - 0x3dc], eax	      5842	screen.c	FUNCTION_28	FOR_1	IF_325	IF_327
0xbcaf	    0x8b8524fcffff	            mov eax, dword [rbp - 0x3dc]	      5846	screen.c	FUNCTION_28	FOR_1	IF_325	IF_328
0xbcb5	    0x3b85d8fbffff	            cmp eax, dword [rbp - 0x428]	      5846	screen.c	FUNCTION_28	FOR_1	IF_325	IF_328
0xbcbb	            0x750c	                           jne 0x400bd09	      5846	screen.c	FUNCTION_28	FOR_1	IF_325	IF_328
0xbcbd	    0x838524fcffff	              add dword [rbp - 0x3dc], 1	      5848	screen.c	FUNCTION_28	FOR_1	IF_325	IF_328
0xbcc4	      0xe94d030000	                           jmp 0x400c056	      5849	screen.c	FUNCTION_28	FOR_1	IF_325	IF_328
0xbcc9	    0x8b8528fcffff	            mov eax, dword [rbp - 0x3d8]	      5852	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329
0xbccf	          0x8d50ff	                      lea edx, [rax - 1]	      5852	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329
0xbcd2	    0x8b0500000000	            mov eax, dword [0x0400bd18] 	      5852	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329
0xbcd8	            0x39c2	                            cmp edx, eax	      5852	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329
0xbcda	     0xf8549020000	                           jne 0x400bf69	      5852	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329
0xbce0	    0x83bdc8fcffff	              cmp dword [rbp - 0x338], 0	      5854	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329
0xbce7	     0xf8f3c020000	                            jg 0x400bf69	      5854	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329
0xbced	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5856	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329
0xbcf4	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      5856	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329
0xbcfa	          0x4863d0	                         movsxd rdx, eax	      5856	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329
0xbcfd	    0x488b05000000	            mov rax, qword [0x0400bd44] 	      5856	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329
0xbd04	          0x4839c2	                            cmp rdx, rax	      5856	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329
0xbd07	     0xf851c020000	                           jne 0x400bf69	      5856	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329
0xbd0d	    0x488b05000000	            mov rax, qword [0x0400bd54] 	      5859	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329
0xbd14	    0x8b9528fcffff	            mov edx, dword [rbp - 0x3d8]	      5859	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329
0xbd1a	          0x4863d2	                         movsxd rdx, edx	      5859	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329
0xbd1d	        0x4883ea01	                              sub rdx, 1	      5859	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329
0xbd21	          0x4801d0	                            add rax, rdx	      5859	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329
0xbd24	          0xc60001	                       mov byte [rax], 1	      5859	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329
0xbd27	    0x8b0500000000	            mov eax, dword [0x0400bd6d] 	      5873	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbd2d	            0x85c0	                           test eax, eax	      5873	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbd2f	     0xf84f4010000	                            je 0x400bf69	      5873	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbd35	    0x8b0500000000	            mov eax, dword [0x0400bd7b] 	      5878	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbd3b	            0x85c0	                           test eax, eax	      5878	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbd3d	     0xf84b0000000	                            je 0x400be33	      5878	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbd43	    0x488b05000000	            mov rax, qword [0x0400bd8a] 	      5879	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbd4a	    0x488b15000000	            mov rdx, qword [0x0400bd91] 	      5880	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbd51	    0x8b8d28fcffff	            mov ecx, dword [rbp - 0x3d8]	      5880	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbd57	          0x4863c9	                         movsxd rcx, ecx	      5880	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbd5a	        0x48c1e102	                              shl rcx, 2	      5880	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbd5e	          0x4801ca	                            add rdx, rcx	      5880	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbd61	            0x8b12	                    mov edx, dword [rdx]	      5880	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbd63	    0x8b0d00000000	            mov ecx, dword [0x0400bda9] 	      5879	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbd69	             0x1d1	                            add ecx, edx	      5879	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbd6b	    0x488b15000000	            mov rdx, qword [0x0400bdb2] 	      5879	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbd72	    0x8bb528fcffff	            mov esi, dword [rbp - 0x3d8]	      5879	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbd78	          0x4863f6	                         movsxd rsi, esi	      5879	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbd7b	        0x48c1e602	                              shl rsi, 2	      5879	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbd7f	          0x4801f2	                            add rdx, rsi	      5879	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbd82	            0x8b12	                    mov edx, dword [rdx]	      5879	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbd84	            0x89ce	                            mov esi, ecx	      5879	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbd86	            0x89d7	                            mov edi, edx	      5879	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbd88	            0xffd0	                                call rax	      5879	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbd8a	          0x83f802	                              cmp eax, 2	      5878	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbd8d	     0xf8496010000	                            je 0x400bf69	      5878	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbd93	    0x488b05000000	            mov rax, qword [0x0400bdda] 	      5882	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbd9a	    0x488b15000000	            mov rdx, qword [0x0400bde1] 	      5884	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbda1	    0x8b8d28fcffff	            mov ecx, dword [rbp - 0x3d8]	      5884	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbda7	          0x4863c9	                         movsxd rcx, ecx	      5884	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbdaa	        0x48c1e102	                              shl rcx, 2	      5884	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbdae	          0x4801ca	                            add rdx, rcx	      5884	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbdb1	            0x8b12	                    mov edx, dword [rdx]	      5884	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbdb3	    0x8b0d00000000	            mov ecx, dword [0x0400bdf9] 	      5882	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbdb9	             0x1d1	                            add ecx, edx	      5882	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbdbb	    0x488b15000000	            mov rdx, qword [0x0400be02] 	      5882	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbdc2	    0x8bb528fcffff	            mov esi, dword [rbp - 0x3d8]	      5882	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbdc8	          0x4863f6	                         movsxd rsi, esi	      5882	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbdcb	        0x48c1e602	                              shl rsi, 2	      5882	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbdcf	        0x4883ee04	                              sub rsi, 4	      5882	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbdd3	          0x4801f2	                            add rdx, rsi	      5882	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbdd6	            0x8b12	                    mov edx, dword [rdx]	      5882	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbdd8	    0x488b35000000	            mov rsi, qword [0x0400be1f] 	      5883	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbddf	             0x1f2	                            add edx, esi	      5883	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbde1	          0x83ea02	                              sub edx, 2	      5882	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbde4	            0x89ce	                            mov esi, ecx	      5882	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbde6	            0x89d7	                            mov edi, edx	      5882	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbde8	            0xffd0	                                call rax	      5882	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbdea	          0x83f802	                              cmp eax, 2	      5882	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbded	     0xf8436010000	                            je 0x400bf69	      5882	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbdf3	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5893	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_331
0xbdfa	    0x8b90ac000000	            mov edx, dword [rax + 0xac] 	      5893	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_331
0xbe00	    0x8b0500000000	            mov eax, dword [0x0400be46] 	      5893	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_331
0xbe06	            0x39c2	                            cmp edx, eax	      5893	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_331
0xbe08	            0x7449	                            je 0x400be93	      5893	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_331
0xbe0a	    0x488b05000000	            mov rax, qword [0x0400be51] 	      5894	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_331	CALL_203
0xbe11	          0x83e801	                              sub eax, 1	      5894	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_331	CALL_203
0xbe14	            0x89c6	                            mov esi, eax	      5894	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_331	CALL_203
0xbe16	    0x8b8528fcffff	            mov eax, dword [rbp - 0x3d8]	      5894	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_331	CALL_203
0xbe1c	          0x8d48ff	                      lea ecx, [rax - 1]	      5894	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_331	CALL_203
0xbe1f	    0x488b05000000	            mov rax, qword [0x0400be66] 	      5894	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_331	CALL_203
0xbe26	    0x8b9528fcffff	            mov edx, dword [rbp - 0x3d8]	      5894	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_331	CALL_203
0xbe2c	          0x4863d2	                         movsxd rdx, edx	      5894	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_331	CALL_203
0xbe2f	        0x48c1e202	                              shl rdx, 2	      5894	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_331	CALL_203
0xbe33	        0x4883ea04	                              sub rdx, 4	      5894	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_331	CALL_203
0xbe37	          0x4801d0	                            add rax, rdx	      5894	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_331	CALL_203
0xbe3a	            0x8b00	                    mov eax, dword [rax]	      5894	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_331	CALL_203
0xbe3c	    0x488b15000000	            mov rdx, qword [0x0400be83] 	      5895	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_331
0xbe43	             0x1d0	                            add eax, edx	      5895	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_331
0xbe45	          0x83e801	                              sub eax, 1	      5894	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_331	CALL_203
0xbe48	            0x89f2	                            mov edx, esi	      5894	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_331	CALL_203
0xbe4a	            0x89ce	                            mov esi, ecx	      5894	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_331	CALL_203
0xbe4c	            0x89c7	                            mov edi, eax	      5894	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_331	CALL_203
0xbe4e	      0xe8334a0000	                    call sym.screen_char	      5894	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_331	CALL_203
0xbe53	    0x8b0500000000	            mov eax, dword [0x0400be99] 	      5901	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_332	CALL_204
0xbe59	            0x85c0	                           test eax, eax	      5901	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_332	CALL_204
0xbe5b	            0x7456	                            je 0x400bef3	      5901	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_332	CALL_204
0xbe5d	    0x488b05000000	            mov rax, qword [0x0400bea4] 	      5901	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_332	CALL_204
0xbe64	    0x488b15000000	            mov rdx, qword [0x0400beab] 	      5901	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_332	CALL_204
0xbe6b	    0x8b8d28fcffff	            mov ecx, dword [rbp - 0x3d8]	      5901	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_332	CALL_204
0xbe71	          0x4863c9	                         movsxd rcx, ecx	      5901	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_332	CALL_204
0xbe74	        0x48c1e102	                              shl rcx, 2	      5901	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_332	CALL_204
0xbe78	        0x4883e904	                              sub rcx, 4	      5901	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_332	CALL_204
0xbe7c	          0x4801ca	                            add rdx, rcx	      5901	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_332	CALL_204
0xbe7f	            0x8b12	                    mov edx, dword [rdx]	      5901	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_332	CALL_204
0xbe81	            0x89d1	                            mov ecx, edx	      5901	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_332	CALL_204
0xbe83	    0x488b15000000	            mov rdx, qword [0x0400beca] 	      5901	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_332	CALL_204
0xbe8a	        0x4883ea01	                              sub rdx, 1	      5901	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_332	CALL_204
0xbe8e	          0x4801ca	                            add rdx, rcx	      5901	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_332	CALL_204
0xbe91	          0x4801d0	                            add rax, rdx	      5901	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_332	CALL_204
0xbe94	           0xfb600	                   movzx eax, byte [rax]	      5901	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_332	CALL_204
0xbe97	           0xfb6c0	                           movzx eax, al	      5902	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_332
0xbe9a	            0x4898	                                    cdqe	      5901	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_332	CALL_204
0xbe9c	     0xfb680000000	                   movzx eax, byte [rax]	      5901	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_332	CALL_204
0xbea3	            0x3c01	                               cmp al, 1	      5901	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_332	CALL_204
0xbea5	            0x7e0c	                           jle 0x400bef3	      5901	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	IF_332	CALL_204
0xbea7	      0xbf20000000	                           mov edi, 0x20	      5903	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	CALL_205
0xbeac	      0xe800000000	                          call 0x400bef1	      5903	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	CALL_205
0xbeb1	            0xeb44	                           jmp 0x400bf37	      5903	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	CALL_205
0xbeb3	    0x488b05000000	            mov rax, qword [0x0400befa] 	      5906	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	ELSE_116	CALL_206
0xbeba	    0x488b15000000	            mov rdx, qword [0x0400bf01] 	      5906	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	ELSE_116	CALL_206
0xbec1	    0x8b8d28fcffff	            mov ecx, dword [rbp - 0x3d8]	      5906	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	ELSE_116	CALL_206
0xbec7	          0x4863c9	                         movsxd rcx, ecx	      5906	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	ELSE_116	CALL_206
0xbeca	        0x48c1e102	                              shl rcx, 2	      5906	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	ELSE_116	CALL_206
0xbece	        0x4883e904	                              sub rcx, 4	      5906	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	ELSE_116	CALL_206
0xbed2	          0x4801ca	                            add rdx, rcx	      5906	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	ELSE_116	CALL_206
0xbed5	            0x8b12	                    mov edx, dword [rdx]	      5906	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	ELSE_116	CALL_206
0xbed7	            0x89d1	                            mov ecx, edx	      5907	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	ELSE_116
0xbed9	    0x488b15000000	            mov rdx, qword [0x0400bf20] 	      5907	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	ELSE_116
0xbee0	        0x4883ea01	                              sub rdx, 1	      5907	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	ELSE_116
0xbee4	          0x4801ca	                            add rdx, rcx	      5907	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	ELSE_116
0xbee7	          0x4801d0	                            add rax, rdx	      5906	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	ELSE_116	CALL_206
0xbeea	           0xfb600	                   movzx eax, byte [rax]	      5906	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	ELSE_116	CALL_206
0xbeed	           0xfb6c0	                           movzx eax, al	      5906	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	ELSE_116	CALL_206
0xbef0	            0x89c7	                            mov edi, eax	      5906	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	ELSE_116	CALL_206
0xbef2	      0xe800000000	                          call 0x400bf37	      5906	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	ELSE_116	CALL_206
0xbef7	    0x488b05000000	            mov rax, qword [0x0400bf3e] 	      5909	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbefe	    0x488b15000000	            mov rdx, qword [0x0400bf45] 	      5909	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbf05	    0x8b8d28fcffff	            mov ecx, dword [rbp - 0x3d8]	      5909	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbf0b	          0x4863c9	                         movsxd rcx, ecx	      5909	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbf0e	        0x48c1e102	                              shl rcx, 2	      5909	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbf12	          0x4801ca	                            add rdx, rcx	      5909	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbf15	            0x8b12	                    mov edx, dword [rdx]	      5909	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbf17	            0x89d2	                            mov edx, edx	      5909	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbf19	          0x4801d2	                            add rdx, rdx	      5909	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbf1c	          0x4801d0	                            add rax, rdx	      5909	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbf1f	      0x66c700ffff	                  mov word [rax], 0xffff	      5909	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330
0xbf24	      0xe800000000	                          call 0x400bf69	      5910	screen.c	FUNCTION_28	FOR_1	IF_325	IF_329	IF_330	CALL_207
0xbf29	    0xc7851cfcffff	              mov dword [rbp - 0x3e4], 0	      5914	screen.c	FUNCTION_28	FOR_1	IF_325
0xbf33	    0x488b05000000	            mov rax, qword [0x0400bf7a] 	      5915	screen.c	FUNCTION_28	FOR_1	IF_325
0xbf3a	          0x4889c2	                            mov rdx, rax	      5915	screen.c	FUNCTION_28	FOR_1	IF_325
0xbf3d	    0x488b05000000	            mov rax, qword [0x0400bf84] 	      5915	screen.c	FUNCTION_28	FOR_1	IF_325
0xbf44	          0x4829c2	                            sub rdx, rax	      5915	screen.c	FUNCTION_28	FOR_1	IF_325
0xbf47	          0x4889d0	                            mov rax, rdx	      5915	screen.c	FUNCTION_28	FOR_1	IF_325
0xbf4a	    0x898520fcffff	            mov dword [rbp - 0x3e0], eax	      5915	screen.c	FUNCTION_28	FOR_1	IF_325
0xbf50	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5917	screen.c	FUNCTION_28	FOR_1	IF_325	IF_333
0xbf57	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      5917	screen.c	FUNCTION_28	FOR_1	IF_325	IF_333
0xbf5d	            0x85c0	                           test eax, eax	      5917	screen.c	FUNCTION_28	FOR_1	IF_325	IF_333
0xbf5f	            0x7422	                            je 0x400bfc3	      5917	screen.c	FUNCTION_28	FOR_1	IF_325	IF_333
0xbf61	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5919	screen.c	FUNCTION_28	FOR_1	IF_325	IF_333
0xbf68	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      5919	screen.c	FUNCTION_28	FOR_1	IF_325	IF_333
0xbf6e	          0x83e801	                              sub eax, 1	      5919	screen.c	FUNCTION_28	FOR_1	IF_325	IF_333
0xbf71	    0x89851cfcffff	            mov dword [rbp - 0x3e4], eax	      5919	screen.c	FUNCTION_28	FOR_1	IF_325	IF_333
0xbf77	    0x8b851cfcffff	            mov eax, dword [rbp - 0x3e4]	      5920	screen.c	FUNCTION_28	FOR_1	IF_325	IF_333
0xbf7d	     0x18520fcffff	            add dword [rbp - 0x3e0], eax	      5920	screen.c	FUNCTION_28	FOR_1	IF_325	IF_333
0xbf83	    0xc785fcfcffff	              mov dword [rbp - 0x304], 0	      5925	screen.c	FUNCTION_28	FOR_1	IF_325
0xbf8d	    0x8b852cfcffff	            mov eax, dword [rbp - 0x3d4]	      5926	screen.c	FUNCTION_28	FOR_1	IF_325
0xbf93	    0x898540fcffff	            mov dword [rbp - 0x3c0], eax	      5926	screen.c	FUNCTION_28	FOR_1	IF_325
0xbf99	    0x488b8580fdff	            mov rax, qword [rbp - 0x280]	      5927	screen.c	FUNCTION_28	FOR_1	IF_325
0xbfa0	    0x488985c0fdff	            mov qword [rbp - 0x240], rax	      5927	screen.c	FUNCTION_28	FOR_1	IF_325
0xbfa7	    0x8b8530fcffff	            mov eax, dword [rbp - 0x3d0]	      5928	screen.c	FUNCTION_28	FOR_1	IF_325
0xbfad	    0x898544fcffff	            mov dword [rbp - 0x3bc], eax	      5928	screen.c	FUNCTION_28	FOR_1	IF_325
0xbfb3	    0x8b856cfcffff	            mov eax, dword [rbp - 0x394]	      5929	screen.c	FUNCTION_28	FOR_1	IF_325
0xbfb9	    0x898548fcffff	            mov dword [rbp - 0x3b8], eax	      5929	screen.c	FUNCTION_28	FOR_1	IF_325
0xbfbf	    0xc7852cfcffff	              mov dword [rbp - 0x3d4], 0	      5930	screen.c	FUNCTION_28	FOR_1	IF_325
0xbfc9	    0x8b0500000000	            mov eax, dword [0x0400c00f] 	      5931	screen.c	FUNCTION_28	FOR_1	IF_325
0xbfcf	    0x89853cfcffff	            mov dword [rbp - 0x3c4], eax	      5931	screen.c	FUNCTION_28	FOR_1	IF_325
0xbfd5	    0x83bdc8fcffff	              cmp dword [rbp - 0x338], 0	      5934	screen.c	FUNCTION_28	FOR_1	IF_325	IF_334
0xbfdc	            0x7f0a	                            jg 0x400c028	      5934	screen.c	FUNCTION_28	FOR_1	IF_325	IF_334
0xbfde	    0xc785d4fcffff	              mov dword [rbp - 0x32c], 1	      5936	screen.c	FUNCTION_28	FOR_1	IF_325	IF_334
0xbfe8	    0x83adc8fcffff	              sub dword [rbp - 0x338], 1	      5939	screen.c	FUNCTION_28	FOR_1	IF_325
0xbfef	    0x83bdc8fcffff	              cmp dword [rbp - 0x338], 0	      5942	screen.c	FUNCTION_28	FOR_1	IF_325	IF_335
0xbff6	     0xf8594b6ffff	                           jne 0x40076d0	      5942	screen.c	FUNCTION_28	FOR_1	IF_325	IF_335
0xbffc	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      5942	screen.c	FUNCTION_28	FOR_1	IF_325	IF_335
0xc003	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      5942	screen.c	FUNCTION_28	FOR_1	IF_325	IF_335
0xc009	            0x85c0	                           test eax, eax	      5942	screen.c	FUNCTION_28	FOR_1	IF_325	IF_335
0xc00b	            0x7508	                           jne 0x400c055	      5942	screen.c	FUNCTION_28	FOR_1	IF_325	IF_335
0xc00d	      0xe97eb6ffff	                           jmp 0x40076d0	      5947	screen.c	FUNCTION_28	FOR_1
0xc012	              0x90	                                     nop	      5526	screen.c	FUNCTION_28	FOR_1	IF_276
0xc013	            0xeb01	                           jmp 0x400c056	      5526	screen.c	FUNCTION_28	FOR_1	IF_276
0xc015	              0x90	                                     nop	      5943	screen.c	FUNCTION_28	FOR_1	IF_325	IF_335
0xc016	    0x488b85a8fdff	            mov rax, qword [rbp - 0x258]	      5951	screen.c	FUNCTION_28	IF_336	CALL_208
0xc01d	          0x4889c7	                            mov rdi, rax	      5951	screen.c	FUNCTION_28	IF_336	CALL_208
0xc020	      0xe800000000	                          call 0x400c065	      5951	screen.c	FUNCTION_28	IF_336	CALL_208
0xc025	           0xfb600	                   movzx eax, byte [rax]	      5951	screen.c	FUNCTION_28	IF_336	CALL_208
0xc028	            0x84c0	                             test al, al	      5951	screen.c	FUNCTION_28	IF_336	CALL_208
0xc02a	            0x751c	                           jne 0x400c088	      5951	screen.c	FUNCTION_28	IF_336	CALL_208
0xc02c	    0x488b85e0fbff	            mov rax, qword [rbp - 0x420]	      5953	screen.c	FUNCTION_28	IF_336
0xc033	        0x4883c001	                              add rax, 1	      5953	screen.c	FUNCTION_28	IF_336
0xc037	    0x488905000000	            mov qword [0x0400c07e], rax 	      5953	screen.c	FUNCTION_28	IF_336
0xc03e	    0xc70500000000	               mov dword [0x0400c088], 0	      5954	screen.c	FUNCTION_28	IF_336
0xc048	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      5958	screen.c	FUNCTION_28	CALL_209
0xc04f	          0x4889c7	                            mov rdi, rax	      5958	screen.c	FUNCTION_28	CALL_209
0xc052	      0xe800000000	                          call 0x400c097	      5958	screen.c	FUNCTION_28	CALL_209
0xc057	    0x8b8524fcffff	            mov eax, dword [rbp - 0x3dc]	      5959	screen.c	FUNCTION_28
0xc05d	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      5960	screen.c	FUNCTION_28
0xc061	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      5960	screen.c	FUNCTION_28
0xc06a	            0x7405	                            je 0x400c0b1	      5960	screen.c	FUNCTION_28
0xc06c	      0xe800000000	                          call 0x400c0b1	      5960	screen.c	FUNCTION_28
0xc071	    0x4881c4280400	                          add rsp, 0x428	      5960	screen.c	FUNCTION_28
0xc078	              0x5b	                                 pop rbx	      5960	screen.c	FUNCTION_28
0xc079	              0x5d	                                 pop rbp	      5960	screen.c	FUNCTION_28
0xc07a	              0xc3	                                     ret	      5960	screen.c	FUNCTION_28
redraw_later	DO,0:functions,0:CALL,1:ELSE,0:IF,0:WHILE,0:FOR,0:SWITCH,0	12
0x0	              0x55	                                push rbp	       197	screen.c	FUNCTION_1
0x1	          0x4889e5	                            mov rbp, rsp	       197	screen.c	FUNCTION_1
0x4	        0x4883ec10	                           sub rsp, 0x10	       197	screen.c	FUNCTION_1
0x8	          0x897dfc	                mov dword [rbp - 4], edi	       197	screen.c	FUNCTION_1
0xb	    0x488b05000000	            mov rax, qword [0x04000052] 	       198	screen.c	FUNCTION_1	CALL_1
0x12	          0x8b55fc	                mov edx, dword [rbp - 4]	       198	screen.c	FUNCTION_1	CALL_1
0x15	            0x89d6	                            mov esi, edx	       198	screen.c	FUNCTION_1	CALL_1
0x17	          0x4889c7	                            mov rdi, rax	       198	screen.c	FUNCTION_1	CALL_1
0x1a	      0xe800000000	                          call 0x400005f	       198	screen.c	FUNCTION_1	CALL_1
0x1f	              0x90	                                     nop	       199	screen.c	FUNCTION_1
0x20	              0xc9	                                   leave	       199	screen.c	FUNCTION_1
0x21	              0xc3	                                     ret	       199	screen.c	FUNCTION_1
draw_vsep_win	DO,0:functions,0:CALL,6:ELSE,0:IF,1:WHILE,0:FOR,0:SWITCH,0	58
0xcef4	              0x55	                                push rbp	      6531	screen.c	FUNCTION_38
0xcef5	          0x4889e5	                            mov rbp, rsp	      6531	screen.c	FUNCTION_38
0xcef8	        0x4883ec20	                           sub rsp, 0x20	      6531	screen.c	FUNCTION_38
0xcefc	        0x48897de8	             mov qword [rbp - 0x18], rdi	      6531	screen.c	FUNCTION_38
0xcf00	          0x8975e4	             mov dword [rbp - 0x1c], esi	      6531	screen.c	FUNCTION_38
0xcf03	    0x64488b042528	                mov rax, qword fs:[0x28]	      6531	screen.c	FUNCTION_38
0xcf0c	        0x488945f8	                mov qword [rbp - 8], rax	      6531	screen.c	FUNCTION_38
0xcf10	            0x31c0	                            xor eax, eax	      6531	screen.c	FUNCTION_38
0xcf12	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6535	screen.c	FUNCTION_38	IF_1
0xcf16	    0x8b80b0000000	            mov eax, dword [rax + 0xb0] 	      6535	screen.c	FUNCTION_38	IF_1
0xcf1c	            0x85c0	                           test eax, eax	      6535	screen.c	FUNCTION_38	IF_1
0xcf1e	     0xf849d000000	                            je 0x400d001	      6535	screen.c	FUNCTION_38	IF_1
0xcf24	        0x488d45f0	                   lea rax, [rbp - 0x10]	      6538	screen.c	FUNCTION_38	IF_1	CALL_1
0xcf28	          0x4889c7	                            mov rdi, rax	      6538	screen.c	FUNCTION_38	IF_1	CALL_1
0xcf2b	      0xe8837d0000	                  call sym.fillchar_vsep	      6538	screen.c	FUNCTION_38	IF_1	CALL_1
0xcf30	          0x8945f4	              mov dword [rbp - 0xc], eax	      6538	screen.c	FUNCTION_38	IF_1	CALL_1
0xcf33	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      6539	screen.c	FUNCTION_38	IF_1	CALL_4
0xcf36	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      6540	screen.c	FUNCTION_38	IF_1	CALL_6
0xcf3a	    0x8b8aa8000000	            mov ecx, dword [rdx + 0xa8] 	      6540	screen.c	FUNCTION_38	IF_1	CALL_6
0xcf40	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      6540	screen.c	FUNCTION_38	IF_1	CALL_6
0xcf44	    0x8b92ac000000	            mov edx, dword [rdx + 0xac] 	      6540	screen.c	FUNCTION_38	IF_1	CALL_6
0xcf4a	             0x1ca	                            add edx, ecx	      6540	screen.c	FUNCTION_38	IF_1	CALL_6
0xcf4c	          0x8d4a01	                      lea ecx, [rdx + 1]	      6539	screen.c	FUNCTION_38	IF_1	CALL_4
0xcf4f	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      6540	screen.c	FUNCTION_38	IF_1	CALL_6
0xcf53	    0x8bb2a8000000	            mov esi, dword [rdx + 0xa8] 	      6540	screen.c	FUNCTION_38	IF_1	CALL_6
0xcf59	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      6540	screen.c	FUNCTION_38	IF_1	CALL_6
0xcf5d	    0x8b92ac000000	            mov edx, dword [rdx + 0xac] 	      6540	screen.c	FUNCTION_38	IF_1	CALL_6
0xcf63	        0x448d1416	                   lea r10d, [rsi + rdx]	      6539	screen.c	FUNCTION_38	IF_1	CALL_4
0xcf67	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      6539	screen.c	FUNCTION_38	IF_1	CALL_4
0xcf6b	    0x8bb29c000000	            mov esi, dword [rdx + 0x9c] 	      6539	screen.c	FUNCTION_38	IF_1	CALL_4
0xcf71	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      6539	screen.c	FUNCTION_38	IF_1	CALL_4
0xcf75	    0x8b92a8010000	           mov edx, dword [rdx + 0x1a8] 	      6539	screen.c	FUNCTION_38	IF_1	CALL_4
0xcf7b	             0x1d6	                            add esi, edx	      6539	screen.c	FUNCTION_38	IF_1	CALL_4
0xcf7d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      6539	screen.c	FUNCTION_38	IF_1	CALL_4
0xcf81	    0x8b92a0000000	            mov edx, dword [rdx + 0xa0] 	      6539	screen.c	FUNCTION_38	IF_1	CALL_4
0xcf87	             0x1d6	                            add esi, edx	      6539	screen.c	FUNCTION_38	IF_1	CALL_4
0xcf89	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      6539	screen.c	FUNCTION_38	IF_1	CALL_4
0xcf8d	    0x8bba9c000000	            mov edi, dword [rdx + 0x9c] 	      6539	screen.c	FUNCTION_38	IF_1	CALL_4
0xcf93	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      6539	screen.c	FUNCTION_38	IF_1	CALL_4
0xcf97	    0x8b92a8010000	           mov edx, dword [rdx + 0x1a8] 	      6539	screen.c	FUNCTION_38	IF_1	CALL_4
0xcf9d	             0x1d7	                            add edi, edx	      6539	screen.c	FUNCTION_38	IF_1	CALL_4
0xcf9f	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      6539	screen.c	FUNCTION_38	IF_1	CALL_4
0xcfa2	             0x1d7	                            add edi, edx	      6539	screen.c	FUNCTION_38	IF_1	CALL_4
0xcfa4	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      6539	screen.c	FUNCTION_38	IF_1	CALL_4
0xcfa7	        0x4883ec08	                              sub rsp, 8	      6539	screen.c	FUNCTION_38	IF_1	CALL_4
0xcfab	              0x50	                                push rax	      6539	screen.c	FUNCTION_38	IF_1	CALL_4
0xcfac	    0x41b920000000	                           mov r9d, 0x20	      6539	screen.c	FUNCTION_38	IF_1	CALL_4
0xcfb2	          0x4189d0	                            mov r8d, edx	      6539	screen.c	FUNCTION_38	IF_1	CALL_4
0xcfb5	          0x4489d2	                           mov edx, r10d	      6539	screen.c	FUNCTION_38	IF_1	CALL_4
0xcfb8	      0xe800000000	                          call 0x400cffd	      6539	screen.c	FUNCTION_38	IF_1	CALL_4
0xcfbd	        0x4883c410	                           add rsp, 0x10	      6539	screen.c	FUNCTION_38	IF_1	CALL_4
0xcfc1	              0x90	                                     nop	      6543	screen.c	FUNCTION_38
0xcfc2	        0x488b45f8	                mov rax, qword [rbp - 8]	      6543	screen.c	FUNCTION_38
0xcfc6	    0x644833042528	                xor rax, qword fs:[0x28]	      6543	screen.c	FUNCTION_38
0xcfcf	            0x7405	                            je 0x400d016	      6543	screen.c	FUNCTION_38
0xcfd1	      0xe800000000	                          call 0x400d016	      6543	screen.c	FUNCTION_38
0xcfd6	              0xc9	                                   leave	      6543	screen.c	FUNCTION_38
0xcfd7	              0xc3	                                     ret	      6543	screen.c	FUNCTION_38
redraw_statuslines	DO,0:functions,0:CALL,3:ELSE,0:IF,2:WHILE,0:FOR,0:SWITCH,0	25
0xce05	              0x55	                                push rbp	      6492	screen.c	FUNCTION_36
0xce06	          0x4889e5	                            mov rbp, rsp	      6492	screen.c	FUNCTION_36
0xce09	        0x4883ec10	                           sub rsp, 0x10	      6492	screen.c	FUNCTION_36
0xce0d	    0x488b05000000	            mov rax, qword [0x0400ce54] 	      6495	screen.c	FUNCTION_36	CALL_1
0xce14	        0x488945f8	                mov qword [rbp - 8], rax	      6495	screen.c	FUNCTION_36	CALL_1
0xce18	            0xeb26	                           jmp 0x400ce80	      6495	screen.c	FUNCTION_36	CALL_1
0xce1a	        0x488b45f8	                mov rax, qword [rbp - 8]	      6496	screen.c	FUNCTION_36	IF_1
0xce1e	    0x8b8040010000	           mov eax, dword [rax + 0x140] 	      6496	screen.c	FUNCTION_36	IF_1
0xce24	            0x85c0	                           test eax, eax	      6496	screen.c	FUNCTION_36	IF_1
0xce26	            0x740c	                            je 0x400ce74	      6496	screen.c	FUNCTION_36	IF_1
0xce28	        0x488b45f8	                mov rax, qword [rbp - 8]	      6497	screen.c	FUNCTION_36	CALL_2
0xce2c	          0x4889c7	                            mov rdi, rax	      6497	screen.c	FUNCTION_36	CALL_2
0xce2f	      0xe800000000	                          call 0x400ce74	      6497	screen.c	FUNCTION_36	CALL_2
0xce34	        0x488b45f8	                mov rax, qword [rbp - 8]	      6495	screen.c	FUNCTION_36	CALL_1
0xce38	        0x488b4020	            mov rax, qword [rax + 0x20] 	      6495	screen.c	FUNCTION_36	CALL_1
0xce3c	        0x488945f8	                mov qword [rbp - 8], rax	      6495	screen.c	FUNCTION_36	CALL_1
0xce40	      0x48837df800	                  cmp qword [rbp - 8], 0	      6495	screen.c	FUNCTION_36	CALL_1
0xce45	            0x75d3	                           jne 0x400ce5a	      6495	screen.c	FUNCTION_36	CALL_1
0xce47	    0x8b0500000000	            mov eax, dword [0x0400ce8d] 	      6498	screen.c	FUNCTION_36	IF_2
0xce4d	            0x85c0	                           test eax, eax	      6498	screen.c	FUNCTION_36	IF_2
0xce4f	            0x7405	                            je 0x400ce96	      6498	screen.c	FUNCTION_36	IF_2
0xce51	      0xe8f6760000	                   call sym.draw_tabline	      6499	screen.c	FUNCTION_36	CALL_3
0xce56	              0x90	                                     nop	      6500	screen.c	FUNCTION_36
0xce57	              0xc9	                                   leave	      6500	screen.c	FUNCTION_36
0xce58	              0xc3	                                     ret	      6500	screen.c	FUNCTION_36
screenclear2	DO,0:functions,0:CALL,9:ELSE,1:IF,4:WHILE,0:FOR,2:SWITCH,0	91
0x1205e	              0x55	                                push rbp	      9055	screen.c	FUNCTION_72
0x1205f	          0x4889e5	                            mov rbp, rsp	      9055	screen.c	FUNCTION_72
0x12062	        0x4883ec10	                           sub rsp, 0x10	      9055	screen.c	FUNCTION_72
0x12066	    0x8b0500000000	            mov eax, dword [0x040120ac] 	      9058	screen.c	FUNCTION_72	IF_1
0x1206c	          0x83f802	                              cmp eax, 2	      9058	screen.c	FUNCTION_72	IF_1
0x1206f	     0xf8492010000	                            je 0x4012247	      9058	screen.c	FUNCTION_72	IF_1
0x12075	    0x488b05000000	            mov rax, qword [0x040120bc] 	      9058	screen.c	FUNCTION_72	IF_1
0x1207c	          0x4885c0	                           test rax, rax	      9058	screen.c	FUNCTION_72	IF_1
0x1207f	     0xf8482010000	                            je 0x4012247	      9058	screen.c	FUNCTION_72	IF_1
0x12085	    0xc70500000000	     mov dword [0x040120cf], 0xffffffff 	      9068	screen.c	FUNCTION_72	IF_2
0x1208f	      0xe800000000	                          call 0x40120d4	      9069	screen.c	FUNCTION_72	CALL_1
0x12094	      0xbf0f270000	                         mov edi, 0x270f	      9073	screen.c	FUNCTION_72	CALL_2
0x12099	      0xe800000000	                          call 0x40120de	      9073	screen.c	FUNCTION_72	CALL_2
0x1209e	    0xc745fc000000	                  mov dword [rbp - 4], 0	      9077	screen.c	FUNCTION_72	FOR_1
0x120a5	            0xeb43	                           jmp 0x401212a	      9077	screen.c	FUNCTION_72	FOR_1
0x120a7	    0x488b05000000	            mov rax, qword [0x040120ee] 	      9079	screen.c	FUNCTION_72	FOR_1	CALL_3
0x120ae	            0x89c1	                            mov ecx, eax	      9079	screen.c	FUNCTION_72	FOR_1	CALL_3
0x120b0	    0x488b05000000	            mov rax, qword [0x040120f7] 	      9079	screen.c	FUNCTION_72	FOR_1	CALL_3
0x120b7	          0x8b55fc	                mov edx, dword [rbp - 4]	      9079	screen.c	FUNCTION_72	FOR_1	CALL_3
0x120ba	          0x4863d2	                         movsxd rdx, edx	      9079	screen.c	FUNCTION_72	FOR_1	CALL_3
0x120bd	        0x48c1e202	                              shl rdx, 2	      9079	screen.c	FUNCTION_72	FOR_1	CALL_3
0x120c1	          0x4801d0	                            add rax, rdx	      9079	screen.c	FUNCTION_72	FOR_1	CALL_3
0x120c4	            0x8b00	                    mov eax, dword [rax]	      9079	screen.c	FUNCTION_72	FOR_1	CALL_3
0x120c6	      0xba00000000	                              mov edx, 0	      9079	screen.c	FUNCTION_72	FOR_1	CALL_3
0x120cb	            0x89ce	                            mov esi, ecx	      9079	screen.c	FUNCTION_72	FOR_1	CALL_3
0x120cd	            0x89c7	                            mov edi, eax	      9079	screen.c	FUNCTION_72	FOR_1	CALL_3
0x120cf	      0xe836010000	                      call sym.lineclear	      9079	screen.c	FUNCTION_72	FOR_1	CALL_3
0x120d4	    0x488b15000000	            mov rdx, qword [0x0401211b] 	      9080	screen.c	FUNCTION_72	FOR_1
0x120db	          0x8b45fc	                mov eax, dword [rbp - 4]	      9080	screen.c	FUNCTION_72	FOR_1
0x120de	            0x4898	                                    cdqe	      9080	screen.c	FUNCTION_72	FOR_1
0x120e0	          0x4801d0	                            add rax, rdx	      9080	screen.c	FUNCTION_72	FOR_1
0x120e3	          0xc60000	                       mov byte [rax], 0	      9080	screen.c	FUNCTION_72	FOR_1
0x120e6	        0x8345fc01	                  add dword [rbp - 4], 1	      9077	screen.c	FUNCTION_72	FOR_1
0x120ea	          0x8b45fc	                mov eax, dword [rbp - 4]	      9077	screen.c	FUNCTION_72	FOR_1
0x120ed	          0x4863d0	                         movsxd rdx, eax	      9077	screen.c	FUNCTION_72	FOR_1
0x120f0	    0x488b05000000	            mov rax, qword [0x04012137] 	      9077	screen.c	FUNCTION_72	FOR_1
0x120f7	          0x4839c2	                            cmp rdx, rax	      9077	screen.c	FUNCTION_72	FOR_1
0x120fa	            0x7cab	                            jl 0x40120e7	      9077	screen.c	FUNCTION_72	FOR_1
0x120fc	    0x488b05000000	            mov rax, qword [0x04012143] 	      9083	screen.c	FUNCTION_72	IF_3	CALL_4
0x12103	          0x4889c7	                            mov rdi, rax	      9083	screen.c	FUNCTION_72	IF_3	CALL_4
0x12106	      0xe800000000	                          call 0x401214b	      9083	screen.c	FUNCTION_72	IF_3	CALL_4
0x1210b	            0x85c0	                           test eax, eax	      9083	screen.c	FUNCTION_72	IF_3	CALL_4
0x1210d	            0x7425	                            je 0x4012174	      9083	screen.c	FUNCTION_72	IF_3	CALL_4
0x1210f	    0x488b05000000	            mov rax, qword [0x04012156] 	      9085	screen.c	FUNCTION_72	IF_3	CALL_5
0x12116	          0x4889c7	                            mov rdi, rax	      9085	screen.c	FUNCTION_72	IF_3	CALL_5
0x12119	      0xe800000000	                          call 0x401215e	      9085	screen.c	FUNCTION_72	IF_3	CALL_5
0x1211e	    0xc70500000000	               mov dword [0x04012168], 0	      9086	screen.c	FUNCTION_72	IF_3
0x12128	    0xc70500000000	               mov dword [0x04012172], 0	      9087	screen.c	FUNCTION_72	IF_3
0x12132	            0xeb51	                           jmp 0x40121c5	      9087	screen.c	FUNCTION_72	IF_3
0x12134	    0xc745fc000000	                  mov dword [rbp - 4], 0	      9092	screen.c	FUNCTION_72	ELSE_1	FOR_2
0x1213b	            0xeb2c	                           jmp 0x40121a9	      9092	screen.c	FUNCTION_72	ELSE_1	FOR_2
0x1213d	    0x488b05000000	            mov rax, qword [0x04012184] 	      9093	screen.c	FUNCTION_72	ELSE_1	CALL_6
0x12144	            0x89c1	                            mov ecx, eax	      9093	screen.c	FUNCTION_72	ELSE_1	CALL_6
0x12146	    0x488b05000000	            mov rax, qword [0x0401218d] 	      9093	screen.c	FUNCTION_72	ELSE_1	CALL_6
0x1214d	          0x8b55fc	                mov edx, dword [rbp - 4]	      9093	screen.c	FUNCTION_72	ELSE_1	CALL_6
0x12150	          0x4863d2	                         movsxd rdx, edx	      9093	screen.c	FUNCTION_72	ELSE_1	CALL_6
0x12153	        0x48c1e202	                              shl rdx, 2	      9093	screen.c	FUNCTION_72	ELSE_1	CALL_6
0x12157	          0x4801d0	                            add rax, rdx	      9093	screen.c	FUNCTION_72	ELSE_1	CALL_6
0x1215a	            0x8b00	                    mov eax, dword [rax]	      9093	screen.c	FUNCTION_72	ELSE_1	CALL_6
0x1215c	            0x89ce	                            mov esi, ecx	      9093	screen.c	FUNCTION_72	ELSE_1	CALL_6
0x1215e	            0x89c7	                            mov edi, eax	      9093	screen.c	FUNCTION_72	ELSE_1	CALL_6
0x12160	      0xe836010000	                    call sym.lineinvalid	      9093	screen.c	FUNCTION_72	ELSE_1	CALL_6
0x12165	        0x8345fc01	                  add dword [rbp - 4], 1	      9092	screen.c	FUNCTION_72	ELSE_1	FOR_2
0x12169	          0x8b45fc	                mov eax, dword [rbp - 4]	      9092	screen.c	FUNCTION_72	ELSE_1	FOR_2
0x1216c	          0x4863d0	                         movsxd rdx, eax	      9092	screen.c	FUNCTION_72	ELSE_1	FOR_2
0x1216f	    0x488b05000000	            mov rax, qword [0x040121b6] 	      9092	screen.c	FUNCTION_72	ELSE_1	FOR_2
0x12176	          0x4839c2	                            cmp rdx, rax	      9092	screen.c	FUNCTION_72	ELSE_1	FOR_2
0x12179	            0x7cc2	                            jl 0x401217d	      9092	screen.c	FUNCTION_72	ELSE_1	FOR_2
0x1217b	    0xc70500000000	               mov dword [0x040121c5], 1	      9094	screen.c	FUNCTION_72	ELSE_1
0x12185	    0xc70500000000	               mov dword [0x040121cf], 1	      9097	screen.c	FUNCTION_72
0x1218f	    0x488b05000000	            mov rax, qword [0x040121d6] 	      9099	screen.c	FUNCTION_72	CALL_7
0x12196	          0x4889c7	                            mov rdi, rax	      9099	screen.c	FUNCTION_72	CALL_7
0x12199	      0xe8a0100000	               call sym.win_rest_invalid	      9099	screen.c	FUNCTION_72	CALL_7
0x1219e	    0xc70500000000	               mov dword [0x040121e8], 1	      9100	screen.c	FUNCTION_72
0x121a8	    0xc70500000000	               mov dword [0x040121f2], 1	      9101	screen.c	FUNCTION_72
0x121b2	    0x8b0500000000	            mov eax, dword [0x040121f8] 	      9102	screen.c	FUNCTION_72	IF_4
0x121b8	          0x83f832	                           cmp eax, 0x32	      9102	screen.c	FUNCTION_72	IF_4
0x121bb	            0x750a	                           jne 0x4012207	      9102	screen.c	FUNCTION_72	IF_4
0x121bd	    0xc70500000000	           mov dword [0x04012207], 0x28 	      9103	screen.c	FUNCTION_72	IF_4
0x121c7	      0xe800000000	                          call 0x401220c	      9104	screen.c	FUNCTION_72	CALL_8
0x121cc	    0x8b0500000000	            mov eax, dword [0x04012212] 	      9105	screen.c	FUNCTION_72
0x121d2	    0x890500000000	            mov dword [0x04012218], eax 	      9105	screen.c	FUNCTION_72
0x121d8	    0xc70500000000	               mov dword [0x04012222], 0	      9106	screen.c	FUNCTION_72
0x121e2	      0xe800000000	                          call 0x4012227	      9107	screen.c	FUNCTION_72	CALL_9
0x121e7	    0xc70500000000	               mov dword [0x04012231], 0	      9108	screen.c	FUNCTION_72
0x121f1	    0xc70500000000	               mov dword [0x0401223b], 0	      9109	screen.c	FUNCTION_72
0x121fb	    0xc70500000000	               mov dword [0x04012245], 0	      9110	screen.c	FUNCTION_72
0x12205	            0xeb01	                           jmp 0x4012248	      9110	screen.c	FUNCTION_72
0x12207	              0x90	                                     nop	      9063	screen.c	FUNCTION_72	IF_1
0x12208	              0xc9	                                   leave	      9111	screen.c	FUNCTION_72
0x12209	              0xc3	                                     ret	      9111	screen.c	FUNCTION_72
screen_valid	DO,0:functions,0:CALL,1:ELSE,0:IF,0:WHILE,0:FOR,0:SWITCH,0	13
0x11331	              0x55	                                push rbp	      8698	screen.c	FUNCTION_68
0x11332	          0x4889e5	                            mov rbp, rsp	      8698	screen.c	FUNCTION_68
0x11335	        0x4883ec10	                           sub rsp, 0x10	      8698	screen.c	FUNCTION_68
0x11339	          0x897dfc	                mov dword [rbp - 4], edi	      8698	screen.c	FUNCTION_68
0x1133c	          0x8b45fc	                mov eax, dword [rbp - 4]	      8699	screen.c	FUNCTION_68	CALL_1
0x1133f	            0x89c7	                            mov edi, eax	      8699	screen.c	FUNCTION_68	CALL_1
0x11341	      0xe800000000	                          call 0x4011386	      8699	screen.c	FUNCTION_68	CALL_1
0x11346	    0x488b05000000	            mov rax, qword [0x0401138d] 	      8700	screen.c	FUNCTION_68
0x1134d	          0x4885c0	                           test rax, rax	      8700	screen.c	FUNCTION_68
0x11350	           0xf95c0	                                setne al	      8700	screen.c	FUNCTION_68
0x11353	           0xfb6c0	                           movzx eax, al	      8700	screen.c	FUNCTION_68
0x11356	              0xc9	                                   leave	      8701	screen.c	FUNCTION_68
0x11357	              0xc3	                                     ret	      8701	screen.c	FUNCTION_68
redraw_win_later	DO,0:functions,0:CALL,0:ELSE,0:IF,3:WHILE,0:FOR,0:SWITCH,0	26
0x22	              0x55	                                push rbp	       205	screen.c	FUNCTION_2
0x23	          0x4889e5	                            mov rbp, rsp	       205	screen.c	FUNCTION_2
0x26	        0x48897df8	                mov qword [rbp - 8], rdi	       205	screen.c	FUNCTION_2
0x2a	          0x8975f4	              mov dword [rbp - 0xc], esi	       205	screen.c	FUNCTION_2
0x2d	    0x8b0500000000	            mov eax, dword [0x04000073] 	       206	screen.c	FUNCTION_2	IF_1
0x33	            0x85c0	                           test eax, eax	       206	screen.c	FUNCTION_2	IF_1
0x35	            0x7544	                           jne 0x40000bb	       206	screen.c	FUNCTION_2	IF_1
0x37	        0x488b45f8	                mov rax, qword [rbp - 8]	       206	screen.c	FUNCTION_2	IF_1
0x3b	    0x8b8028010000	           mov eax, dword [rax + 0x128] 	       206	screen.c	FUNCTION_2	IF_1
0x41	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       206	screen.c	FUNCTION_2	IF_1
0x44	            0x7d35	                           jge 0x40000bb	       206	screen.c	FUNCTION_2	IF_1
0x46	        0x488b45f8	                mov rax, qword [rbp - 8]	       208	screen.c	FUNCTION_2	IF_1
0x4a	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       208	screen.c	FUNCTION_2	IF_1
0x4d	    0x899028010000	            mov dword [rax + 0x128], edx	       208	screen.c	FUNCTION_2	IF_1
0x53	        0x837df427	            cmp dword [rbp - 0xc], 0x27 	       209	screen.c	FUNCTION_2	IF_1	IF_2
0x57	            0x7e0e	                           jle 0x40000a7	       209	screen.c	FUNCTION_2	IF_1	IF_2
0x59	        0x488b45f8	                mov rax, qword [rbp - 8]	       210	screen.c	FUNCTION_2	IF_1	IF_2
0x5d	    0xc780f8000000	               mov dword [rax + 0xf8], 0	       210	screen.c	FUNCTION_2	IF_1	IF_2
0x67	    0x8b0500000000	            mov eax, dword [0x040000ad] 	       211	screen.c	FUNCTION_2	IF_1	IF_3
0x6d	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       211	screen.c	FUNCTION_2	IF_1	IF_3
0x70	            0x7d09	                           jge 0x40000bb	       211	screen.c	FUNCTION_2	IF_1	IF_3
0x72	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       212	screen.c	FUNCTION_2	IF_1	IF_3
0x75	    0x890500000000	            mov dword [0x040000bb], eax 	       212	screen.c	FUNCTION_2	IF_1	IF_3
0x7b	              0x90	                                     nop	       214	screen.c	FUNCTION_2
0x7c	              0x5d	                                 pop rbp	       214	screen.c	FUNCTION_2
0x7d	              0xc3	                                     ret	       214	screen.c	FUNCTION_2
redraw_after_callback	DO,0:functions,0:CALL,9:ELSE,2:IF,6:WHILE,0:FOR,0:SWITCH,0	45
0x7ef	              0x55	                                push rbp	       445	screen.c	FUNCTION_9
0x7f0	          0x4889e5	                            mov rbp, rsp	       445	screen.c	FUNCTION_9
0x7f3	        0x4883ec10	                           sub rsp, 0x10	       445	screen.c	FUNCTION_9
0x7f7	          0x897dfc	                mov dword [rbp - 4], edi	       445	screen.c	FUNCTION_9
0x7fa	    0x8b0500000000	            mov eax, dword [0x04000840] 	       446	screen.c	FUNCTION_9
0x800	          0x83c001	                              add eax, 1	       446	screen.c	FUNCTION_9
0x803	    0x890500000000	            mov dword [0x04000849], eax 	       446	screen.c	FUNCTION_9
0x809	    0x8b0500000000	            mov eax, dword [0x0400084f] 	       448	screen.c	FUNCTION_9	IF_1
0x80f	      0x3d01020000	                          cmp eax, 0x201	       448	screen.c	FUNCTION_9	IF_1
0x814	            0x7468	                            je 0x40008be	       448	screen.c	FUNCTION_9	IF_1
0x816	    0x8b0500000000	            mov eax, dword [0x0400085c] 	       448	screen.c	FUNCTION_9	IF_1
0x81c	      0x3d00030000	                          cmp eax, 0x300	       448	screen.c	FUNCTION_9	IF_1
0x821	            0x745b	                            je 0x40008be	       448	screen.c	FUNCTION_9	IF_1
0x823	    0x8b0500000000	            mov eax, dword [0x04000869] 	       450	screen.c	FUNCTION_9	ELSE_1	IF_2
0x829	          0x83e008	                              and eax, 8	       450	screen.c	FUNCTION_9	ELSE_1	IF_2
0x82c	            0x85c0	                           test eax, eax	       450	screen.c	FUNCTION_9	ELSE_1	IF_2
0x82e	            0x7430	                            je 0x40008a0	       450	screen.c	FUNCTION_9	ELSE_1	IF_2
0x830	    0x8b0500000000	            mov eax, dword [0x04000876] 	       454	screen.c	FUNCTION_9	ELSE_1	IF_2	IF_3
0x836	            0x85c0	                           test eax, eax	       454	screen.c	FUNCTION_9	ELSE_1	IF_2	IF_3
0x838	            0x751a	                           jne 0x4000894	       454	screen.c	FUNCTION_9	ELSE_1	IF_2	IF_3
0x83a	    0x8b0500000000	            mov eax, dword [0x04000880] 	       456	screen.c	FUNCTION_9	ELSE_1	IF_2	IF_3
0x840	            0x85c0	                           test eax, eax	       456	screen.c	FUNCTION_9	ELSE_1	IF_2	IF_3
0x842	            0x7510	                           jne 0x4000894	       456	screen.c	FUNCTION_9	ELSE_1	IF_2	IF_3
0x844	        0x837dfc00	                  cmp dword [rbp - 4], 0	       458	screen.c	FUNCTION_9	ELSE_1	IF_2	IF_3
0x848	            0x740a	                            je 0x4000894	       458	screen.c	FUNCTION_9	ELSE_1	IF_2	IF_3
0x84a	      0xbf00000000	                              mov edi, 0	       459	screen.c	FUNCTION_9	ELSE_1	IF_2	CALL_1
0x84f	      0xe800000000	                          call 0x4000894	       459	screen.c	FUNCTION_9	ELSE_1	IF_2	CALL_1
0x854	      0xbf00000000	                              mov edi, 0	       462	screen.c	FUNCTION_9	ELSE_1	IF_2	CALL_2
0x859	      0xe800000000	                          call 0x400089e	       462	screen.c	FUNCTION_9	ELSE_1	IF_2	CALL_2
0x85e	            0xeb1e	                           jmp 0x40008be	       462	screen.c	FUNCTION_9	ELSE_1	IF_2	CALL_2
0x860	    0x8b0500000000	            mov eax, dword [0x040008a6] 	       464	screen.c	FUNCTION_9	ELSE_2	IF_4
0x866	      0x2511200000	                         and eax, 0x2011	       464	screen.c	FUNCTION_9	ELSE_2	IF_4
0x86b	            0x85c0	                           test eax, eax	       464	screen.c	FUNCTION_9	ELSE_2	IF_4
0x86d	            0x740f	                            je 0x40008be	       464	screen.c	FUNCTION_9	ELSE_2	IF_4
0x86f	      0xbf05000000	                              mov edi, 5	       467	screen.c	FUNCTION_9	ELSE_2	IF_4	CALL_3
0x874	      0xe800000000	                          call 0x40008b9	       467	screen.c	FUNCTION_9	ELSE_2	IF_4	CALL_3
0x879	      0xe800000000	                          call 0x40008be	       468	screen.c	FUNCTION_9	ELSE_2	IF_4	CALL_4
0x87e	      0xe800000000	                          call 0x40008c3	       470	screen.c	FUNCTION_9	CALL_5
0x883	      0xe800000000	                          call 0x40008c8	       471	screen.c	FUNCTION_9	CALL_6
0x888	    0x8b0500000000	            mov eax, dword [0x040008ce] 	       483	screen.c	FUNCTION_9
0x88e	          0x83e801	                              sub eax, 1	       483	screen.c	FUNCTION_9
0x891	    0x890500000000	            mov dword [0x040008d7], eax 	       483	screen.c	FUNCTION_9
0x897	              0x90	                                     nop	       484	screen.c	FUNCTION_9
0x898	              0xc9	                                   leave	       484	screen.c	FUNCTION_9
0x899	              0xc3	                                     ret	       484	screen.c	FUNCTION_9
fill_foldcolumn	DO,0:functions,0:CALL,2:ELSE,3:IF,7:WHILE,0:FOR,1:SWITCH,0	114
0x5d6c	              0x55	                                push rbp	      2950	screen.c	FUNCTION_27
0x5d6d	          0x4889e5	                            mov rbp, rsp	      2950	screen.c	FUNCTION_27
0x5d70	        0x4883ec40	                           sub rsp, 0x40	      2950	screen.c	FUNCTION_27
0x5d74	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2950	screen.c	FUNCTION_27
0x5d78	        0x488975d0	             mov qword [rbp - 0x30], rsi	      2950	screen.c	FUNCTION_27
0x5d7c	          0x8955cc	             mov dword [rbp - 0x34], edx	      2950	screen.c	FUNCTION_27
0x5d7f	        0x48894dc0	             mov qword [rbp - 0x40], rcx	      2950	screen.c	FUNCTION_27
0x5d83	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      2951	screen.c	FUNCTION_27
0x5d8a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2955	screen.c	FUNCTION_27	CALL_1
0x5d8e	      0xbe00000000	                              mov esi, 0	      2955	screen.c	FUNCTION_27	CALL_1
0x5d93	          0x4889c7	                            mov rdi, rax	      2955	screen.c	FUNCTION_27	CALL_1
0x5d96	      0xe8e6efffff	             call sym.compute_foldcolumn	      2955	screen.c	FUNCTION_27	CALL_1
0x5d9b	          0x8945f4	              mov dword [rbp - 0xc], eax	      2955	screen.c	FUNCTION_27	CALL_1
0x5d9e	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2958	screen.c	FUNCTION_27	CALL_2
0x5da1	          0x4863d0	                         movsxd rdx, eax	      2958	screen.c	FUNCTION_27	CALL_2
0x5da4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2958	screen.c	FUNCTION_27	CALL_2
0x5da8	      0xbe20000000	                           mov esi, 0x20	      2958	screen.c	FUNCTION_27	CALL_2
0x5dad	          0x4889c7	                            mov rdi, rax	      2958	screen.c	FUNCTION_27	CALL_2
0x5db0	      0xe800000000	                          call 0x4005df5	      2958	screen.c	FUNCTION_27	CALL_2
0x5db5	    0x8b0500000000	            mov eax, dword [0x04005dfb] 	      2960	screen.c	FUNCTION_27
0x5dbb	          0x8945f8	                mov dword [rbp - 8], eax	      2960	screen.c	FUNCTION_27
0x5dbe	        0x837df800	                  cmp dword [rbp - 8], 0	      2961	screen.c	FUNCTION_27	IF_1
0x5dc2	     0xf8ee4000000	                           jle 0x4005eec	      2961	screen.c	FUNCTION_27	IF_1
0x5dc8	        0x837df401	                cmp dword [rbp - 0xc], 1	      2964	screen.c	FUNCTION_27	IF_1
0x5dcc	           0xf95c0	                                setne al	      2964	screen.c	FUNCTION_27	IF_1
0x5dcf	           0xfb6c0	                           movzx eax, al	      2964	screen.c	FUNCTION_27	IF_1
0x5dd2	          0x8945fc	                mov dword [rbp - 4], eax	      2964	screen.c	FUNCTION_27	IF_1
0x5dd5	          0x8b45f8	                mov eax, dword [rbp - 8]	      2968	screen.c	FUNCTION_27	IF_1
0x5dd8	          0x2b45f4	              sub eax, dword [rbp - 0xc]	      2968	screen.c	FUNCTION_27	IF_1
0x5ddb	          0x2b45cc	             sub eax, dword [rbp - 0x34]	      2968	screen.c	FUNCTION_27	IF_1
0x5dde	          0x8d5001	                      lea edx, [rax + 1]	      2968	screen.c	FUNCTION_27	IF_1
0x5de1	          0x8b45fc	                mov eax, dword [rbp - 4]	      2968	screen.c	FUNCTION_27	IF_1
0x5de4	             0x1d0	                            add eax, edx	      2968	screen.c	FUNCTION_27	IF_1
0x5de6	          0x8945f0	             mov dword [rbp - 0x10], eax	      2968	screen.c	FUNCTION_27	IF_1
0x5de9	        0x837df000	               cmp dword [rbp - 0x10], 0	      2969	screen.c	FUNCTION_27	IF_1	IF_2
0x5ded	            0x7f07	                            jg 0x4005e36	      2969	screen.c	FUNCTION_27	IF_1	IF_2
0x5def	    0xc745f0010000	               mov dword [rbp - 0x10], 1	      2970	screen.c	FUNCTION_27	IF_1	IF_2
0x5df6	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      2972	screen.c	FUNCTION_27	IF_1	FOR_1
0x5dfd	      0xe996000000	                           jmp 0x4005ed8	      2972	screen.c	FUNCTION_27	IF_1	FOR_1
0x5e02	    0x8b0500000000	            mov eax, dword [0x04005e48] 	      2974	screen.c	FUNCTION_27	IF_1	FOR_1	IF_3
0x5e08	            0x4898	                                    cdqe	      2974	screen.c	FUNCTION_27	IF_1	FOR_1	IF_3
0x5e0a	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      2974	screen.c	FUNCTION_27	IF_1	FOR_1	IF_3
0x5e0e	            0x7524	                           jne 0x4005e74	      2974	screen.c	FUNCTION_27	IF_1	FOR_1	IF_3
0x5e10	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      2975	screen.c	FUNCTION_27	IF_1	FOR_1	IF_3
0x5e13	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2975	screen.c	FUNCTION_27	IF_1	FOR_1	IF_3
0x5e16	             0x1c2	                            add edx, eax	      2975	screen.c	FUNCTION_27	IF_1	FOR_1	IF_3
0x5e18	    0x8b0500000000	            mov eax, dword [0x04005e5e] 	      2975	screen.c	FUNCTION_27	IF_1	FOR_1	IF_3
0x5e1e	            0x39c2	                            cmp edx, eax	      2975	screen.c	FUNCTION_27	IF_1	FOR_1	IF_3
0x5e20	            0x7c12	                            jl 0x4005e74	      2975	screen.c	FUNCTION_27	IF_1	FOR_1	IF_3
0x5e22	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2976	screen.c	FUNCTION_27	IF_1	FOR_1	IF_3
0x5e25	          0x4863d0	                         movsxd rdx, eax	      2976	screen.c	FUNCTION_27	IF_1	FOR_1	IF_3
0x5e28	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2976	screen.c	FUNCTION_27	IF_1	FOR_1	IF_3
0x5e2c	          0x4801d0	                            add rax, rdx	      2976	screen.c	FUNCTION_27	IF_1	FOR_1	IF_3
0x5e2f	          0xc6002d	                    mov byte [rax], 0x2d	      2976	screen.c	FUNCTION_27	IF_1	FOR_1	IF_3
0x5e32	            0xeb53	                           jmp 0x4005ec7	      2976	screen.c	FUNCTION_27	IF_1	FOR_1	IF_3
0x5e34	        0x837df001	               cmp dword [rbp - 0x10], 1	      2977	screen.c	FUNCTION_27	IF_1	FOR_1	ELSE_1	IF_4
0x5e38	            0x7512	                           jne 0x4005e8c	      2977	screen.c	FUNCTION_27	IF_1	FOR_1	ELSE_1	IF_4
0x5e3a	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2978	screen.c	FUNCTION_27	IF_1	FOR_1	ELSE_1	IF_4
0x5e3d	          0x4863d0	                         movsxd rdx, eax	      2978	screen.c	FUNCTION_27	IF_1	FOR_1	ELSE_1	IF_4
0x5e40	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2978	screen.c	FUNCTION_27	IF_1	FOR_1	ELSE_1	IF_4
0x5e44	          0x4801d0	                            add rax, rdx	      2978	screen.c	FUNCTION_27	IF_1	FOR_1	ELSE_1	IF_4
0x5e47	          0xc6007c	                    mov byte [rax], 0x7c	      2978	screen.c	FUNCTION_27	IF_1	FOR_1	ELSE_1	IF_4
0x5e4a	            0xeb3b	                           jmp 0x4005ec7	      2978	screen.c	FUNCTION_27	IF_1	FOR_1	ELSE_1	IF_4
0x5e4c	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      2979	screen.c	FUNCTION_27	IF_1	FOR_1	ELSE_2	IF_5
0x5e4f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2979	screen.c	FUNCTION_27	IF_1	FOR_1	ELSE_2	IF_5
0x5e52	             0x1d0	                            add eax, edx	      2979	screen.c	FUNCTION_27	IF_1	FOR_1	ELSE_2	IF_5
0x5e54	          0x83f809	                              cmp eax, 9	      2979	screen.c	FUNCTION_27	IF_1	FOR_1	ELSE_2	IF_5
0x5e57	            0x7f1e	                            jg 0x4005eb7	      2979	screen.c	FUNCTION_27	IF_1	FOR_1	ELSE_2	IF_5
0x5e59	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2980	screen.c	FUNCTION_27	IF_1	FOR_1	ELSE_2	IF_5
0x5e5c	          0x4863d0	                         movsxd rdx, eax	      2980	screen.c	FUNCTION_27	IF_1	FOR_1	ELSE_2	IF_5
0x5e5f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2980	screen.c	FUNCTION_27	IF_1	FOR_1	ELSE_2	IF_5
0x5e63	          0x4801d0	                            add rax, rdx	      2980	screen.c	FUNCTION_27	IF_1	FOR_1	ELSE_2	IF_5
0x5e66	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      2980	screen.c	FUNCTION_27	IF_1	FOR_1	ELSE_2	IF_5
0x5e69	            0x89d1	                            mov ecx, edx	      2980	screen.c	FUNCTION_27	IF_1	FOR_1	ELSE_2	IF_5
0x5e6b	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      2980	screen.c	FUNCTION_27	IF_1	FOR_1	ELSE_2	IF_5
0x5e6e	             0x1ca	                            add edx, ecx	      2980	screen.c	FUNCTION_27	IF_1	FOR_1	ELSE_2	IF_5
0x5e70	          0x83c230	                           add edx, 0x30	      2980	screen.c	FUNCTION_27	IF_1	FOR_1	ELSE_2	IF_5
0x5e73	            0x8810	                      mov byte [rax], dl	      2980	screen.c	FUNCTION_27	IF_1	FOR_1	ELSE_2	IF_5
0x5e75	            0xeb10	                           jmp 0x4005ec7	      2980	screen.c	FUNCTION_27	IF_1	FOR_1	ELSE_2	IF_5
0x5e77	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2982	screen.c	FUNCTION_27	IF_1	FOR_1	ELSE_3
0x5e7a	          0x4863d0	                         movsxd rdx, eax	      2982	screen.c	FUNCTION_27	IF_1	FOR_1	ELSE_3
0x5e7d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2982	screen.c	FUNCTION_27	IF_1	FOR_1	ELSE_3
0x5e81	          0x4801d0	                            add rax, rdx	      2982	screen.c	FUNCTION_27	IF_1	FOR_1	ELSE_3
0x5e84	          0xc6003e	                    mov byte [rax], 0x3e	      2982	screen.c	FUNCTION_27	IF_1	FOR_1	ELSE_3
0x5e87	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      2983	screen.c	FUNCTION_27	IF_1	FOR_1	IF_6
0x5e8a	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2983	screen.c	FUNCTION_27	IF_1	FOR_1	IF_6
0x5e8d	             0x1d0	                            add eax, edx	      2983	screen.c	FUNCTION_27	IF_1	FOR_1	IF_6
0x5e8f	          0x3b45f8	                cmp eax, dword [rbp - 8]	      2983	screen.c	FUNCTION_27	IF_1	FOR_1	IF_6
0x5e92	            0x7417	                            je 0x4005eeb	      2983	screen.c	FUNCTION_27	IF_1	FOR_1	IF_6
0x5e94	        0x8345ec01	               add dword [rbp - 0x14], 1	      2972	screen.c	FUNCTION_27	IF_1	FOR_1
0x5e98	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      2972	screen.c	FUNCTION_27	IF_1	FOR_1
0x5e9b	          0x8b45fc	                mov eax, dword [rbp - 4]	      2972	screen.c	FUNCTION_27	IF_1	FOR_1
0x5e9e	             0x1d0	                            add eax, edx	      2972	screen.c	FUNCTION_27	IF_1	FOR_1
0x5ea0	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	      2972	screen.c	FUNCTION_27	IF_1	FOR_1
0x5ea3	     0xf8c59ffffff	                            jl 0x4005e42	      2972	screen.c	FUNCTION_27	IF_1	FOR_1
0x5ea9	            0xeb01	                           jmp 0x4005eec	      2972	screen.c	FUNCTION_27	IF_1	FOR_1
0x5eab	              0x90	                                     nop	      2984	screen.c	FUNCTION_27	IF_1	FOR_1	IF_6
0x5eac	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      2987	screen.c	FUNCTION_27	IF_7
0x5eb0	            0x7421	                            je 0x4005f13	      2987	screen.c	FUNCTION_27	IF_7
0x5eb2	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2988	screen.c	FUNCTION_27	IF_7
0x5eb5	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	      2988	screen.c	FUNCTION_27	IF_7
0x5eb8	            0x7c0a	                            jl 0x4005f04	      2988	screen.c	FUNCTION_27	IF_7
0x5eba	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2988	screen.c	FUNCTION_27	IF_7
0x5ebd	          0x83e801	                              sub eax, 1	      2988	screen.c	FUNCTION_27	IF_7
0x5ec0	            0x4898	                                    cdqe	      2988	screen.c	FUNCTION_27	IF_7
0x5ec2	            0xeb05	                           jmp 0x4005f09	      2988	screen.c	FUNCTION_27	IF_7
0x5ec4	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2988	screen.c	FUNCTION_27	IF_7
0x5ec7	            0x4898	                                    cdqe	      2988	screen.c	FUNCTION_27	IF_7
0x5ec9	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2988	screen.c	FUNCTION_27	IF_7
0x5ecd	          0x4801d0	                            add rax, rdx	      2988	screen.c	FUNCTION_27	IF_7
0x5ed0	          0xc6002b	                    mov byte [rax], 0x2b	      2988	screen.c	FUNCTION_27	IF_7
0x5ed3	              0x90	                                     nop	      2989	screen.c	FUNCTION_27
0x5ed4	              0xc9	                                   leave	      2989	screen.c	FUNCTION_27
0x5ed5	              0xc3	                                     ret	      2989	screen.c	FUNCTION_27
screen_ins_lines	DO,0:functions,0:CALL,30:ELSE,16:IF,23:WHILE,2:FOR,3:SWITCH,0	420
0x1328b	              0x55	                                push rbp	      9748	screen.c	FUNCTION_84
0x1328c	          0x4889e5	                            mov rbp, rsp	      9748	screen.c	FUNCTION_84
0x1328f	        0x4883ec40	                           sub rsp, 0x40	      9748	screen.c	FUNCTION_84
0x13293	          0x897ddc	             mov dword [rbp - 0x24], edi	      9748	screen.c	FUNCTION_84
0x13296	          0x8975d8	             mov dword [rbp - 0x28], esi	      9748	screen.c	FUNCTION_84
0x13299	          0x8955d4	             mov dword [rbp - 0x2c], edx	      9748	screen.c	FUNCTION_84
0x1329c	          0x894dd0	             mov dword [rbp - 0x30], ecx	      9748	screen.c	FUNCTION_84
0x1329f	        0x448945cc	             mov dword [rbp - 0x34], r8d	      9748	screen.c	FUNCTION_84
0x132a3	        0x4c894dc0	              mov qword [rbp - 0x40], r9	      9748	screen.c	FUNCTION_84
0x132a7	    0x488b05000000	            mov rax, qword [0x040132ee] 	      9755	screen.c	FUNCTION_84	CALL_1
0x132ae	          0x4889c7	                            mov rdi, rax	      9755	screen.c	FUNCTION_84	CALL_1
0x132b1	      0xe800000000	                          call 0x40132f6	      9755	screen.c	FUNCTION_84	CALL_1
0x132b6	          0x8945f4	              mov dword [rbp - 0xc], eax	      9755	screen.c	FUNCTION_84	CALL_1
0x132b9	      0xbf01000000	                              mov edi, 1	      9765	screen.c	FUNCTION_84	IF_1	CALL_2
0x132be	      0xe800000000	                          call 0x4013303	      9765	screen.c	FUNCTION_84	IF_1	CALL_2
0x132c3	            0x85c0	                           test eax, eax	      9765	screen.c	FUNCTION_84	IF_1	CALL_2
0x132c5	            0x742e	                            je 0x4013335	      9765	screen.c	FUNCTION_84	IF_1	CALL_2
0x132c7	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      9765	screen.c	FUNCTION_84	IF_1	CALL_2
0x132cb	            0x7e28	                           jle 0x4013335	      9765	screen.c	FUNCTION_84	IF_1	CALL_2
0x132cd	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      9765	screen.c	FUNCTION_84	IF_1	CALL_2
0x132d0	          0x4863d0	                         movsxd rdx, eax	      9765	screen.c	FUNCTION_84	IF_1	CALL_2
0x132d3	    0x488b05000000	            mov rax, qword [0x0401331a] 	      9765	screen.c	FUNCTION_84	IF_1	CALL_2
0x132da	          0x4839c2	                            cmp rdx, rax	      9765	screen.c	FUNCTION_84	IF_1	CALL_2
0x132dd	            0x7f16	                            jg 0x4013335	      9765	screen.c	FUNCTION_84	IF_1	CALL_2
0x132df	     0xfb705000000	           movzx eax, word [0x04013326] 	      9767	screen.c	FUNCTION_84	IF_1
0x132e6	          0x6685c0	                             test ax, ax	      9767	screen.c	FUNCTION_84	IF_1
0x132e9	            0x7414	                            je 0x401333f	      9767	screen.c	FUNCTION_84	IF_1
0x132eb	    0x8b0500000000	            mov eax, dword [0x04013331] 	      9768	screen.c	FUNCTION_84	IF_1
0x132f1	            0x85c0	                           test eax, eax	      9768	screen.c	FUNCTION_84	IF_1
0x132f3	            0x7e0a	                           jle 0x401333f	      9768	screen.c	FUNCTION_84	IF_1
0x132f5	      0xb800000000	                              mov eax, 0	      9771	screen.c	FUNCTION_84	IF_1
0x132fa	      0xe960050000	                           jmp 0x401389f	      9771	screen.c	FUNCTION_84	IF_1
0x132ff	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      9798	screen.c	FUNCTION_84
0x13302	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      9798	screen.c	FUNCTION_84
0x13305	             0x1d0	                            add eax, edx	      9798	screen.c	FUNCTION_84
0x13307	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	      9798	screen.c	FUNCTION_84
0x1330a	           0xf9dc0	                                setge al	      9798	screen.c	FUNCTION_84
0x1330d	           0xfb6c0	                           movzx eax, al	      9798	screen.c	FUNCTION_84
0x13310	          0x8945f8	                mov dword [rbp - 8], eax	      9798	screen.c	FUNCTION_84
0x13313	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      9799	screen.c	FUNCTION_84	IF_2
0x13318	            0x7433	                            je 0x401338d	      9799	screen.c	FUNCTION_84	IF_2
0x1331a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      9799	screen.c	FUNCTION_84	IF_2
0x1331e	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      9799	screen.c	FUNCTION_84	IF_2
0x13324	          0x4863d0	                         movsxd rdx, eax	      9799	screen.c	FUNCTION_84	IF_2
0x13327	    0x488b05000000	            mov rax, qword [0x0401336e] 	      9799	screen.c	FUNCTION_84	IF_2
0x1332e	          0x4839c2	                            cmp rdx, rax	      9799	screen.c	FUNCTION_84	IF_2
0x13331	            0x741a	                            je 0x401338d	      9799	screen.c	FUNCTION_84	IF_2
0x13333	    0x488b05000000	            mov rax, qword [0x0401337a] 	      9799	screen.c	FUNCTION_84	IF_2
0x1333a	           0xfb600	                   movzx eax, byte [rax]	      9799	screen.c	FUNCTION_84	IF_2
0x1333d	            0x84c0	                             test al, al	      9799	screen.c	FUNCTION_84	IF_2
0x1333f	            0x750c	                           jne 0x401338d	      9799	screen.c	FUNCTION_84	IF_2
0x13341	    0xc745f0090000	               mov dword [rbp - 0x10], 9	      9800	screen.c	FUNCTION_84	IF_2
0x13348	      0xe903010000	                           jmp 0x4013490	      9800	screen.c	FUNCTION_84	IF_2
0x1334d	    0x488b05000000	            mov rax, qword [0x04013394] 	      9801	screen.c	FUNCTION_84	ELSE_1	IF_3	CALL_3
0x13354	          0x4889c7	                            mov rdi, rax	      9801	screen.c	FUNCTION_84	ELSE_1	IF_3	CALL_3
0x13357	      0xe800000000	                          call 0x401339c	      9801	screen.c	FUNCTION_84	ELSE_1	IF_3	CALL_3
0x1335c	            0x85c0	                           test eax, eax	      9801	screen.c	FUNCTION_84	ELSE_1	IF_3	CALL_3
0x1335e	            0x7412	                            je 0x40133b2	      9801	screen.c	FUNCTION_84	ELSE_1	IF_3	CALL_3
0x13360	        0x837df800	                  cmp dword [rbp - 8], 0	      9801	screen.c	FUNCTION_84	ELSE_1	IF_3	CALL_3
0x13364	            0x740c	                            je 0x40133b2	      9801	screen.c	FUNCTION_84	ELSE_1	IF_3	CALL_3
0x13366	    0xc745f0080000	               mov dword [rbp - 0x10], 8	      9802	screen.c	FUNCTION_84	ELSE_1	IF_3
0x1336d	      0xe9de000000	                           jmp 0x4013490	      9802	screen.c	FUNCTION_84	ELSE_1	IF_3
0x13372	    0x488b05000000	            mov rax, qword [0x040133b9] 	      9803	screen.c	FUNCTION_84	ELSE_2	IF_4
0x13379	           0xfb600	                   movzx eax, byte [rax]	      9803	screen.c	FUNCTION_84	ELSE_2	IF_4
0x1337c	            0x84c0	                             test al, al	      9803	screen.c	FUNCTION_84	ELSE_2	IF_4
0x1337e	            0x7420	                            je 0x40133e0	      9803	screen.c	FUNCTION_84	ELSE_2	IF_4
0x13380	        0x837dd401	               cmp dword [rbp - 0x2c], 1	      9803	screen.c	FUNCTION_84	ELSE_2	IF_4
0x13384	            0x7f0e	                            jg 0x40133d4	      9803	screen.c	FUNCTION_84	ELSE_2	IF_4
0x13386	    0x488b05000000	            mov rax, qword [0x040133cd] 	      9803	screen.c	FUNCTION_84	ELSE_2	IF_4
0x1338d	           0xfb600	                   movzx eax, byte [rax]	      9803	screen.c	FUNCTION_84	ELSE_2	IF_4
0x13390	            0x84c0	                             test al, al	      9803	screen.c	FUNCTION_84	ELSE_2	IF_4
0x13392	            0x750c	                           jne 0x40133e0	      9803	screen.c	FUNCTION_84	ELSE_2	IF_4
0x13394	    0xc745f0010000	               mov dword [rbp - 0x10], 1	      9804	screen.c	FUNCTION_84	ELSE_2	IF_4
0x1339b	      0xe9b0000000	                           jmp 0x4013490	      9804	screen.c	FUNCTION_84	ELSE_2	IF_4
0x133a0	    0x488b05000000	            mov rax, qword [0x040133e7] 	      9805	screen.c	FUNCTION_84	ELSE_3	IF_5
0x133a7	           0xfb600	                   movzx eax, byte [rax]	      9805	screen.c	FUNCTION_84	ELSE_3	IF_5
0x133aa	            0x84c0	                             test al, al	      9805	screen.c	FUNCTION_84	ELSE_3	IF_5
0x133ac	            0x741e	                            je 0x401340c	      9805	screen.c	FUNCTION_84	ELSE_3	IF_5
0x133ae	        0x837df800	                  cmp dword [rbp - 8], 0	      9805	screen.c	FUNCTION_84	ELSE_3	IF_5
0x133b2	            0x7418	                            je 0x401340c	      9805	screen.c	FUNCTION_84	ELSE_3	IF_5
0x133b4	        0x837dd401	               cmp dword [rbp - 0x2c], 1	      9805	screen.c	FUNCTION_84	ELSE_3	IF_5
0x133b8	            0x7f06	                            jg 0x4013400	      9805	screen.c	FUNCTION_84	ELSE_3	IF_5
0x133ba	        0x837df400	                cmp dword [rbp - 0xc], 0	      9805	screen.c	FUNCTION_84	ELSE_3	IF_5
0x133be	            0x750c	                           jne 0x401340c	      9805	screen.c	FUNCTION_84	ELSE_3	IF_5
0x133c0	    0xc745f0020000	               mov dword [rbp - 0x10], 2	      9806	screen.c	FUNCTION_84	ELSE_3	IF_5
0x133c7	      0xe984000000	                           jmp 0x4013490	      9806	screen.c	FUNCTION_84	ELSE_3	IF_5
0x133cc	    0x488b05000000	            mov rax, qword [0x04013413] 	      9807	screen.c	FUNCTION_84	ELSE_4	IF_6
0x133d3	           0xfb600	                   movzx eax, byte [rax]	      9807	screen.c	FUNCTION_84	ELSE_4	IF_6
0x133d6	            0x84c0	                             test al, al	      9807	screen.c	FUNCTION_84	ELSE_4	IF_6
0x133d8	            0x7409	                            je 0x4013423	      9807	screen.c	FUNCTION_84	ELSE_4	IF_6
0x133da	    0xc745f0030000	               mov dword [rbp - 0x10], 3	      9808	screen.c	FUNCTION_84	ELSE_4	IF_6
0x133e1	            0xeb6d	                           jmp 0x4013490	      9808	screen.c	FUNCTION_84	ELSE_4	IF_6
0x133e3	        0x837df400	                cmp dword [rbp - 0xc], 0	      9809	screen.c	FUNCTION_84	ELSE_5	IF_7
0x133e7	            0x740f	                            je 0x4013438	      9809	screen.c	FUNCTION_84	ELSE_5	IF_7
0x133e9	        0x837df800	                  cmp dword [rbp - 8], 0	      9809	screen.c	FUNCTION_84	ELSE_5	IF_7
0x133ed	            0x7409	                            je 0x4013438	      9809	screen.c	FUNCTION_84	ELSE_5	IF_7
0x133ef	    0xc745f0040000	               mov dword [rbp - 0x10], 4	      9810	screen.c	FUNCTION_84	ELSE_5	IF_7
0x133f6	            0xeb58	                           jmp 0x4013490	      9810	screen.c	FUNCTION_84	ELSE_5	IF_7
0x133f8	    0x488b05000000	            mov rax, qword [0x0401343f] 	      9811	screen.c	FUNCTION_84	ELSE_6	IF_8
0x133ff	           0xfb600	                   movzx eax, byte [rax]	      9811	screen.c	FUNCTION_84	ELSE_6	IF_8
0x13402	            0x84c0	                             test al, al	      9811	screen.c	FUNCTION_84	ELSE_6	IF_8
0x13404	            0x740f	                            je 0x4013455	      9811	screen.c	FUNCTION_84	ELSE_6	IF_8
0x13406	        0x837df800	                  cmp dword [rbp - 8], 0	      9811	screen.c	FUNCTION_84	ELSE_6	IF_8
0x1340a	            0x7409	                            je 0x4013455	      9811	screen.c	FUNCTION_84	ELSE_6	IF_8
0x1340c	    0xc745f0050000	               mov dword [rbp - 0x10], 5	      9812	screen.c	FUNCTION_84	ELSE_6	IF_8
0x13413	            0xeb3b	                           jmp 0x4013490	      9812	screen.c	FUNCTION_84	ELSE_6	IF_8
0x13415	    0x488b05000000	            mov rax, qword [0x0401345c] 	      9813	screen.c	FUNCTION_84	ELSE_7	IF_9
0x1341c	           0xfb600	                   movzx eax, byte [rax]	      9813	screen.c	FUNCTION_84	ELSE_7	IF_9
0x1341f	            0x84c0	                             test al, al	      9813	screen.c	FUNCTION_84	ELSE_7	IF_9
0x13421	            0x7423	                            je 0x4013486	      9813	screen.c	FUNCTION_84	ELSE_7	IF_9
0x13423	        0x837dd800	               cmp dword [rbp - 0x28], 0	      9813	screen.c	FUNCTION_84	ELSE_7	IF_9
0x13427	            0x751d	                           jne 0x4013486	      9813	screen.c	FUNCTION_84	ELSE_7	IF_9
0x13429	    0x488b05000000	            mov rax, qword [0x04013470] 	      9813	screen.c	FUNCTION_84	ELSE_7	IF_9
0x13430	           0xfb600	                   movzx eax, byte [rax]	      9813	screen.c	FUNCTION_84	ELSE_7	IF_9
0x13433	            0x84c0	                             test al, al	      9813	screen.c	FUNCTION_84	ELSE_7	IF_9
0x13435	            0x7406	                            je 0x401347d	      9813	screen.c	FUNCTION_84	ELSE_7	IF_9
0x13437	        0x837df400	                cmp dword [rbp - 0xc], 0	      9813	screen.c	FUNCTION_84	ELSE_7	IF_9
0x1343b	            0x7409	                            je 0x4013486	      9813	screen.c	FUNCTION_84	ELSE_7	IF_9
0x1343d	    0xc745f0060000	               mov dword [rbp - 0x10], 6	      9814	screen.c	FUNCTION_84	ELSE_7	IF_9
0x13444	            0xeb0a	                           jmp 0x4013490	      9814	screen.c	FUNCTION_84	ELSE_7	IF_9
0x13446	      0xb800000000	                              mov eax, 0	      9816	screen.c	FUNCTION_84	ELSE_8
0x1344b	      0xe90f040000	                           jmp 0x401389f	      9816	screen.c	FUNCTION_84	ELSE_8
0x13450	        0x837df008	               cmp dword [rbp - 0x10], 8	      9822	screen.c	FUNCTION_84	IF_10
0x13454	            0x7412	                            je 0x40134a8	      9822	screen.c	FUNCTION_84	IF_10
0x13456	        0x837df002	               cmp dword [rbp - 0x10], 2	      9822	screen.c	FUNCTION_84	IF_10
0x1345a	            0x740c	                            je 0x40134a8	      9822	screen.c	FUNCTION_84	IF_10
0x1345c	        0x837df004	               cmp dword [rbp - 0x10], 4	      9822	screen.c	FUNCTION_84	IF_10
0x13460	            0x7406	                            je 0x40134a8	      9822	screen.c	FUNCTION_84	IF_10
0x13462	        0x837df005	               cmp dword [rbp - 0x10], 5	      9823	screen.c	FUNCTION_84	IF_10
0x13466	            0x752f	                           jne 0x40134d7	      9823	screen.c	FUNCTION_84	IF_10
0x13468	          0x8b4dd0	             mov ecx, dword [rbp - 0x30]	      9824	screen.c	FUNCTION_84	CALL_4
0x1346b	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      9824	screen.c	FUNCTION_84	CALL_4
0x1346e	          0x8b75d8	             mov esi, dword [rbp - 0x28]	      9824	screen.c	FUNCTION_84	CALL_4
0x13471	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9824	screen.c	FUNCTION_84	CALL_4
0x13474	        0x4883ec08	                              sub rsp, 8	      9824	screen.c	FUNCTION_84	CALL_4
0x13478	          0xff75c0	                 push qword [rbp - 0x40]	      9824	screen.c	FUNCTION_84	CALL_4
0x1347b	    0x41b900000000	                              mov r9d, 0	      9824	screen.c	FUNCTION_84	CALL_4
0x13481	    0x41b800000000	                              mov r8d, 0	      9824	screen.c	FUNCTION_84	CALL_4
0x13487	            0x89c7	                            mov edi, eax	      9824	screen.c	FUNCTION_84	CALL_4
0x13489	      0xe800000000	                          call 0x40134ce	      9824	screen.c	FUNCTION_84	CALL_4
0x1348e	        0x4883c410	                           add rsp, 0x10	      9824	screen.c	FUNCTION_84	CALL_4
0x13492	      0xe9c8030000	                           jmp 0x401389f	      9824	screen.c	FUNCTION_84	CALL_4
0x13497	    0x488b05000000	            mov rax, qword [0x040134de] 	      9831	screen.c	FUNCTION_84	IF_11
0x1349e	           0xfb600	                   movzx eax, byte [rax]	      9831	screen.c	FUNCTION_84	IF_11
0x134a1	            0x84c0	                             test al, al	      9831	screen.c	FUNCTION_84	IF_11
0x134a3	            0x742f	                            je 0x4013514	      9831	screen.c	FUNCTION_84	IF_11
0x134a5	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      9832	screen.c	FUNCTION_84	CALL_5
0x134a8	          0x2b45d4	             sub eax, dword [rbp - 0x2c]	      9832	screen.c	FUNCTION_84	CALL_5
0x134ab	            0x89c6	                            mov esi, eax	      9832	screen.c	FUNCTION_84	CALL_5
0x134ad	          0x8b4dd0	             mov ecx, dword [rbp - 0x30]	      9832	screen.c	FUNCTION_84	CALL_5
0x134b0	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      9832	screen.c	FUNCTION_84	CALL_5
0x134b3	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9832	screen.c	FUNCTION_84	CALL_5
0x134b6	        0x4883ec08	                              sub rsp, 8	      9832	screen.c	FUNCTION_84	CALL_5
0x134ba	          0xff75c0	                 push qword [rbp - 0x40]	      9832	screen.c	FUNCTION_84	CALL_5
0x134bd	    0x41b900000000	                              mov r9d, 0	      9832	screen.c	FUNCTION_84	CALL_5
0x134c3	    0x41b800000000	                              mov r8d, 0	      9832	screen.c	FUNCTION_84	CALL_5
0x134c9	            0x89c7	                            mov edi, eax	      9832	screen.c	FUNCTION_84	CALL_5
0x134cb	      0xe800000000	                          call 0x4013510	      9832	screen.c	FUNCTION_84	CALL_5
0x134d0	        0x4883c410	                           add rsp, 0x10	      9832	screen.c	FUNCTION_84	CALL_5
0x134d4	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      9837	screen.c	FUNCTION_84	IF_12
0x134d7	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      9837	screen.c	FUNCTION_84	IF_12
0x134da	             0x1d0	                            add eax, edx	      9837	screen.c	FUNCTION_84	IF_12
0x134dc	            0x85c0	                           test eax, eax	      9837	screen.c	FUNCTION_84	IF_12
0x134de	            0x7f20	                            jg 0x4013540	      9837	screen.c	FUNCTION_84	IF_12
0x134e0	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      9837	screen.c	FUNCTION_84	IF_12
0x134e5	            0x7425	                            je 0x401354c	      9837	screen.c	FUNCTION_84	IF_12
0x134e7	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      9837	screen.c	FUNCTION_84	IF_12
0x134eb	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      9837	screen.c	FUNCTION_84	IF_12
0x134f1	          0x4863d0	                         movsxd rdx, eax	      9837	screen.c	FUNCTION_84	IF_12
0x134f4	    0x488b05000000	            mov rax, qword [0x0401353b] 	      9837	screen.c	FUNCTION_84	IF_12
0x134fb	          0x4839c2	                            cmp rdx, rax	      9837	screen.c	FUNCTION_84	IF_12
0x134fe	            0x740c	                            je 0x401354c	      9837	screen.c	FUNCTION_84	IF_12
0x13500	      0xbf00000000	                              mov edi, 0	      9838	screen.c	FUNCTION_84	CALL_6
0x13505	      0xe800000000	                          call 0x401354a	      9838	screen.c	FUNCTION_84	CALL_6
0x1350a	            0xeb0c	                           jmp 0x4013558	      9838	screen.c	FUNCTION_84	CALL_6
0x1350c	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      9840	screen.c	FUNCTION_84	CALL_7
0x1350f	            0xf7d8	                                 neg eax	      9840	screen.c	FUNCTION_84	CALL_7
0x13511	            0x89c7	                            mov edi, eax	      9840	screen.c	FUNCTION_84	CALL_7
0x13513	      0xe800000000	                          call 0x4013558	      9840	screen.c	FUNCTION_84	CALL_7
0x13518	    0x488b05000000	            mov rax, qword [0x0401355f] 	      9849	screen.c	FUNCTION_84	IF_13
0x1351f	           0xfb600	                   movzx eax, byte [rax]	      9849	screen.c	FUNCTION_84	IF_13
0x13522	            0x84c0	                             test al, al	      9849	screen.c	FUNCTION_84	IF_13
0x13524	            0x7408	                            je 0x401356e	      9849	screen.c	FUNCTION_84	IF_13
0x13526	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      9850	screen.c	FUNCTION_84	IF_13
0x13529	          0x8945ec	             mov dword [rbp - 0x14], eax	      9850	screen.c	FUNCTION_84	IF_13
0x1352c	            0xeb0b	                           jmp 0x4013579	      9850	screen.c	FUNCTION_84	IF_13
0x1352e	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      9852	screen.c	FUNCTION_84	ELSE_10
0x13531	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9852	screen.c	FUNCTION_84	ELSE_10
0x13534	             0x1d0	                            add eax, edx	      9852	screen.c	FUNCTION_84	ELSE_10
0x13536	          0x8945ec	             mov dword [rbp - 0x14], eax	      9852	screen.c	FUNCTION_84	ELSE_10
0x13539	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9858	screen.c	FUNCTION_84	ELSE_10
0x1353c	           0x145d8	             add dword [rbp - 0x28], eax	      9858	screen.c	FUNCTION_84	ELSE_10
0x1353f	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9859	screen.c	FUNCTION_84	ELSE_10
0x13542	           0x145d0	             add dword [rbp - 0x30], eax	      9859	screen.c	FUNCTION_84	ELSE_10
0x13545	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      9860	screen.c	FUNCTION_84	ELSE_10	FOR_1
0x1354c	      0xe9fb010000	                           jmp 0x401378c	      9860	screen.c	FUNCTION_84	ELSE_10	FOR_1
0x13551	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      9862	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14
0x13556	     0xf84ec000000	                            je 0x4013688	      9862	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14
0x1355c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      9862	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14
0x13560	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      9862	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14
0x13566	          0x4863d0	                         movsxd rdx, eax	      9862	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14
0x13569	    0x488b05000000	            mov rax, qword [0x040135b0] 	      9862	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14
0x13570	          0x4839c2	                            cmp rdx, rax	      9862	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14
0x13573	     0xf84cf000000	                            je 0x4013688	      9862	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14
0x13579	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      9865	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14
0x1357c	          0x83e801	                              sub eax, 1	      9865	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14
0x1357f	          0x2b45e4	             sub eax, dword [rbp - 0x1c]	      9865	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14
0x13582	          0x8945e8	             mov dword [rbp - 0x18], eax	      9865	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14
0x13585	            0xeb19	                           jmp 0x40135e0	      9866	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14	WHILE_1
0x13587	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      9867	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14	CALL_9
0x1358a	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      9867	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14	CALL_9
0x1358d	          0x8d0c02	                    lea ecx, [rdx + rax]	      9867	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14	CALL_9
0x13590	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      9867	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14	CALL_9
0x13594	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      9867	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14	CALL_9
0x13597	            0x89c6	                            mov esi, eax	      9867	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14	CALL_9
0x13599	            0x89cf	                            mov edi, ecx	      9867	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14	CALL_9
0x1359b	      0xe832edffff	                       call sym.linecopy	      9867	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14	CALL_9
0x135a0	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      9866	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14	WHILE_1
0x135a3	          0x2945e8	             sub dword [rbp - 0x18], eax	      9866	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14	WHILE_1
0x135a6	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      9866	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14	WHILE_1
0x135a9	          0x3b45d8	             cmp eax, dword [rbp - 0x28]	      9866	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14	WHILE_1
0x135ac	            0x7dd9	                           jge 0x40135c7	      9866	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14	WHILE_1
0x135ae	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      9868	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14
0x135b1	           0x145e8	             add dword [rbp - 0x18], eax	      9868	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14
0x135b4	      0xbf00000000	                              mov edi, 0	      9869	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14	IF_15	CALL_10
0x135b9	      0xe800000000	                          call 0x40135fe	      9869	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14	IF_15	CALL_10
0x135be	            0x85c0	                           test eax, eax	      9869	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14	IF_15	CALL_10
0x135c0	            0x743a	                            je 0x401363c	      9869	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14	IF_15	CALL_10
0x135c2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      9870	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14	IF_15	CALL_11
0x135c6	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      9870	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14	IF_15	CALL_11
0x135cc	    0x488b15000000	            mov rdx, qword [0x04013613] 	      9870	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14	IF_15	CALL_11
0x135d3	          0x8b4de8	             mov ecx, dword [rbp - 0x18]	      9870	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14	IF_15	CALL_11
0x135d6	          0x4863c9	                         movsxd rcx, ecx	      9870	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14	IF_15	CALL_11
0x135d9	        0x48c1e102	                              shl rcx, 2	      9870	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14	IF_15	CALL_11
0x135dd	          0x4801ca	                            add rdx, rcx	      9870	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14	IF_15	CALL_11
0x135e0	            0x8b0a	                    mov ecx, dword [rdx]	      9870	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14	IF_15	CALL_11
0x135e2	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      9870	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14	IF_15	CALL_11
0x135e6	    0x8b92a8000000	            mov edx, dword [rdx + 0xa8] 	      9870	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14	IF_15	CALL_11
0x135ec	             0x1d1	                            add ecx, edx	      9870	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14	IF_15	CALL_11
0x135ee	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      9870	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14	IF_15	CALL_11
0x135f1	            0x89c6	                            mov esi, eax	      9870	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14	IF_15	CALL_11
0x135f3	            0x89cf	                            mov edi, ecx	      9870	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14	IF_15	CALL_11
0x135f5	      0xe810ecffff	                      call sym.lineclear	      9870	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14	IF_15	CALL_11
0x135fa	            0xeb35	                           jmp 0x4013671	      9870	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14	IF_15	CALL_11
0x135fc	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      9873	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14	CALL_12
0x13600	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      9873	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14	CALL_12
0x13606	    0x488b15000000	            mov rdx, qword [0x0401364d] 	      9873	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14	CALL_12
0x1360d	          0x8b4de8	             mov ecx, dword [rbp - 0x18]	      9873	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14	CALL_12
0x13610	          0x4863c9	                         movsxd rcx, ecx	      9873	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14	CALL_12
0x13613	        0x48c1e102	                              shl rcx, 2	      9873	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14	CALL_12
0x13617	          0x4801ca	                            add rdx, rcx	      9873	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14	CALL_12
0x1361a	            0x8b0a	                    mov ecx, dword [rdx]	      9873	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14	CALL_12
0x1361c	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      9873	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14	CALL_12
0x13620	    0x8b92a8000000	            mov edx, dword [rdx + 0xa8] 	      9873	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14	CALL_12
0x13626	             0x1ca	                            add edx, ecx	      9873	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14	CALL_12
0x13628	            0x89c6	                            mov esi, eax	      9873	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14	CALL_12
0x1362a	            0x89d7	                            mov edi, edx	      9873	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14	CALL_12
0x1362c	      0xe86aecffff	                    call sym.lineinvalid	      9873	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14	CALL_12
0x13631	    0x488b15000000	            mov rdx, qword [0x04013678] 	      9874	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14
0x13638	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      9874	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14
0x1363b	            0x4898	                                    cdqe	      9874	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14
0x1363d	          0x4801d0	                            add rax, rdx	      9874	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14
0x13640	          0xc60000	                       mov byte [rax], 0	      9874	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14
0x13643	      0xe900010000	                           jmp 0x4013788	      9874	screen.c	FUNCTION_84	ELSE_10	FOR_1	IF_14
0x13648	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      9878	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12
0x1364b	          0x83e801	                              sub eax, 1	      9878	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12
0x1364e	          0x2b45e4	             sub eax, dword [rbp - 0x1c]	      9878	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12
0x13651	          0x8945e8	             mov dword [rbp - 0x18], eax	      9878	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12
0x13654	    0x488b05000000	            mov rax, qword [0x0401369b] 	      9879	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12
0x1365b	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      9879	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12
0x1365e	          0x4863d2	                         movsxd rdx, edx	      9879	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12
0x13661	        0x48c1e202	                              shl rdx, 2	      9879	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12
0x13665	          0x4801d0	                            add rax, rdx	      9879	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12
0x13668	            0x8b00	                    mov eax, dword [rax]	      9879	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12
0x1366a	          0x8945fc	                mov dword [rbp - 4], eax	      9879	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12
0x1366d	            0xeb59	                           jmp 0x4013708	      9880	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x1366f	    0x488b05000000	            mov rax, qword [0x040136b6] 	      9882	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x13676	          0x8b4de8	             mov ecx, dword [rbp - 0x18]	      9882	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x13679	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      9882	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x1367c	             0x1ca	                            add edx, ecx	      9882	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x1367e	          0x4863d2	                         movsxd rdx, edx	      9882	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x13681	        0x48c1e202	                              shl rdx, 2	      9882	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x13685	          0x4801c2	                            add rdx, rax	      9882	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x13688	    0x488b05000000	            mov rax, qword [0x040136cf] 	      9882	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x1368f	          0x8b4de8	             mov ecx, dword [rbp - 0x18]	      9882	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x13692	          0x4863c9	                         movsxd rcx, ecx	      9882	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x13695	        0x48c1e102	                              shl rcx, 2	      9882	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x13699	          0x4801c8	                            add rax, rcx	      9882	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x1369c	            0x8b00	                    mov eax, dword [rax]	      9882	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x1369e	            0x8902	                    mov dword [rdx], eax	      9882	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x136a0	    0x488b15000000	            mov rdx, qword [0x040136e7] 	      9883	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x136a7	          0x8b4de8	             mov ecx, dword [rbp - 0x18]	      9883	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x136aa	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      9883	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x136ad	             0x1c8	                            add eax, ecx	      9883	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x136af	            0x4898	                                    cdqe	      9883	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x136b1	          0x4801c2	                            add rdx, rax	      9883	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x136b4	    0x488b0d000000	            mov rcx, qword [0x040136fb] 	      9883	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x136bb	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      9883	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x136be	            0x4898	                                    cdqe	      9883	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x136c0	          0x4801c8	                            add rax, rcx	      9883	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x136c3	           0xfb600	                   movzx eax, byte [rax]	      9883	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x136c6	            0x8802	                      mov byte [rdx], al	      9883	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x136c8	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      9880	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x136cb	          0x2945e8	             sub dword [rbp - 0x18], eax	      9880	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x136ce	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      9880	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x136d1	          0x3b45d8	             cmp eax, dword [rbp - 0x28]	      9880	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x136d4	            0x7d99	                           jge 0x40136af	      9880	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12	WHILE_2
0x136d6	    0x488b05000000	            mov rax, qword [0x0401371d] 	      9885	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12
0x136dd	          0x8b4de8	             mov ecx, dword [rbp - 0x18]	      9885	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12
0x136e0	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      9885	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12
0x136e3	             0x1ca	                            add edx, ecx	      9885	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12
0x136e5	          0x4863d2	                         movsxd rdx, edx	      9885	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12
0x136e8	        0x48c1e202	                              shl rdx, 2	      9885	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12
0x136ec	          0x4801c2	                            add rdx, rax	      9885	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12
0x136ef	          0x8b45fc	                mov eax, dword [rbp - 4]	      9885	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12
0x136f2	            0x8902	                    mov dword [rdx], eax	      9885	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12
0x136f4	    0x488b15000000	            mov rdx, qword [0x0401373b] 	      9886	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12
0x136fb	          0x8b4de8	             mov ecx, dword [rbp - 0x18]	      9886	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12
0x136fe	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      9886	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12
0x13701	             0x1c8	                            add eax, ecx	      9886	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12
0x13703	            0x4898	                                    cdqe	      9886	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12
0x13705	          0x4801d0	                            add rax, rdx	      9886	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12
0x13708	          0xc60000	                       mov byte [rax], 0	      9886	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12
0x1370b	      0xbf00000000	                              mov edi, 0	      9887	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12	IF_16	CALL_13
0x13710	      0xe800000000	                          call 0x4013755	      9887	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12	IF_16	CALL_13
0x13715	            0x85c0	                           test eax, eax	      9887	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12	IF_16	CALL_13
0x13717	            0x741a	                            je 0x4013773	      9887	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12	IF_16	CALL_13
0x13719	    0x488b05000000	            mov rax, qword [0x04013760] 	      9888	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12	CALL_14
0x13720	            0x89c1	                            mov ecx, eax	      9888	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12	CALL_14
0x13722	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      9888	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12	CALL_14
0x13725	          0x8b45fc	                mov eax, dword [rbp - 4]	      9888	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12	CALL_14
0x13728	            0x89ce	                            mov esi, ecx	      9888	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12	CALL_14
0x1372a	            0x89c7	                            mov edi, eax	      9888	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12	CALL_14
0x1372c	      0xe8d9eaffff	                      call sym.lineclear	      9888	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12	CALL_14
0x13731	            0xeb15	                           jmp 0x4013788	      9888	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12	CALL_14
0x13733	    0x488b05000000	            mov rax, qword [0x0401377a] 	      9890	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12	CALL_15
0x1373a	            0x89c2	                            mov edx, eax	      9890	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12	CALL_15
0x1373c	          0x8b45fc	                mov eax, dword [rbp - 4]	      9890	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12	CALL_15
0x1373f	            0x89d6	                            mov esi, edx	      9890	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12	CALL_15
0x13741	            0x89c7	                            mov edi, eax	      9890	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12	CALL_15
0x13743	      0xe853ebffff	                    call sym.lineinvalid	      9890	screen.c	FUNCTION_84	ELSE_10	FOR_1	ELSE_12	CALL_15
0x13748	        0x8345e401	               add dword [rbp - 0x1c], 1	      9860	screen.c	FUNCTION_84	ELSE_10	FOR_1
0x1374c	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      9860	screen.c	FUNCTION_84	ELSE_10	FOR_1
0x1374f	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      9860	screen.c	FUNCTION_84	ELSE_10	FOR_1
0x13752	     0xf8cf9fdffff	                            jl 0x4013591	      9860	screen.c	FUNCTION_84	ELSE_10	FOR_1
0x13758	      0xe800000000	                          call 0x401379d	      9894	screen.c	FUNCTION_84	CALL_16
0x1375d	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9895	screen.c	FUNCTION_84	CALL_17
0x13760	      0xbe00000000	                              mov esi, 0	      9895	screen.c	FUNCTION_84	CALL_17
0x13765	            0x89c7	                            mov edi, eax	      9895	screen.c	FUNCTION_84	CALL_17
0x13767	      0xe800000000	                          call 0x40137ac	      9895	screen.c	FUNCTION_84	CALL_17
0x1376c	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      9896	screen.c	FUNCTION_84	IF_17
0x13770	            0x740a	                            je 0x40137bc	      9896	screen.c	FUNCTION_84	IF_17
0x13772	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      9897	screen.c	FUNCTION_84	CALL_18
0x13775	            0x89c7	                            mov edi, eax	      9897	screen.c	FUNCTION_84	CALL_18
0x13777	      0xe8e8c9ffff	         call sym.screen_start_highlight	      9897	screen.c	FUNCTION_84	CALL_18
0x1377c	        0x837df009	               cmp dword [rbp - 0x10], 9	      9900	screen.c	FUNCTION_84	IF_18
0x13780	            0x7515	                           jne 0x40137d7	      9900	screen.c	FUNCTION_84	IF_18
0x13782	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      9901	screen.c	FUNCTION_84	CALL_19
0x13786	          0x8b4dd0	             mov ecx, dword [rbp - 0x30]	      9901	screen.c	FUNCTION_84	CALL_19
0x13789	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      9901	screen.c	FUNCTION_84	CALL_19
0x1378c	            0x89ce	                            mov esi, ecx	      9901	screen.c	FUNCTION_84	CALL_19
0x1378e	            0x89c7	                            mov edi, eax	      9901	screen.c	FUNCTION_84	CALL_19
0x13790	      0xe8f4d4ffff	                   call sym.redraw_block	      9901	screen.c	FUNCTION_84	CALL_19
0x13795	            0xeb72	                           jmp 0x4013849	      9901	screen.c	FUNCTION_84	CALL_19
0x13797	        0x837df001	               cmp dword [rbp - 0x10], 1	      9902	screen.c	FUNCTION_84	ELSE_14	IF_19
0x1379b	            0x7511	                           jne 0x40137ee	      9902	screen.c	FUNCTION_84	ELSE_14	IF_19
0x1379d	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      9904	screen.c	FUNCTION_84	ELSE_14	IF_19	CALL_20
0x137a0	            0x89c7	                            mov edi, eax	      9904	screen.c	FUNCTION_84	ELSE_14	IF_19	CALL_20
0x137a2	      0xe800000000	                          call 0x40137e7	      9904	screen.c	FUNCTION_84	ELSE_14	IF_19	CALL_20
0x137a7	      0xe800000000	                          call 0x40137ec	      9905	screen.c	FUNCTION_84	ELSE_14	IF_19	CALL_21
0x137ac	            0xeb5b	                           jmp 0x4013849	      9905	screen.c	FUNCTION_84	ELSE_14	IF_19	CALL_21
0x137ae	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      9909	screen.c	FUNCTION_84	ELSE_15	FOR_2
0x137b5	            0xeb4a	                           jmp 0x4013841	      9909	screen.c	FUNCTION_84	ELSE_15	FOR_2
0x137b7	        0x837df003	               cmp dword [rbp - 0x10], 3	      9911	screen.c	FUNCTION_84	ELSE_15	FOR_2	IF_20
0x137bb	            0x752c	                           jne 0x4013829	      9911	screen.c	FUNCTION_84	ELSE_15	FOR_2	IF_20
0x137bd	        0x837de400	               cmp dword [rbp - 0x1c], 0	      9913	screen.c	FUNCTION_84	ELSE_15	FOR_2	IF_20	IF_21
0x137c1	            0x7415	                            je 0x4013818	      9913	screen.c	FUNCTION_84	ELSE_15	FOR_2	IF_20	IF_21
0x137c3	        0x837dec00	               cmp dword [rbp - 0x14], 0	      9913	screen.c	FUNCTION_84	ELSE_15	FOR_2	IF_20	IF_21
0x137c7	            0x740f	                            je 0x4013818	      9913	screen.c	FUNCTION_84	ELSE_15	FOR_2	IF_20	IF_21
0x137c9	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9914	screen.c	FUNCTION_84	ELSE_15	FOR_2	IF_20	CALL_22
0x137cc	      0xbe00000000	                              mov esi, 0	      9914	screen.c	FUNCTION_84	ELSE_15	FOR_2	IF_20	CALL_22
0x137d1	            0x89c7	                            mov edi, eax	      9914	screen.c	FUNCTION_84	ELSE_15	FOR_2	IF_20	CALL_22
0x137d3	      0xe800000000	                          call 0x4013818	      9914	screen.c	FUNCTION_84	ELSE_15	FOR_2	IF_20	CALL_22
0x137d8	    0x488b05000000	            mov rax, qword [0x0401381f] 	      9915	screen.c	FUNCTION_84	ELSE_15	FOR_2	IF_20	CALL_23
0x137df	          0x4889c7	                            mov rdi, rax	      9915	screen.c	FUNCTION_84	ELSE_15	FOR_2	IF_20	CALL_23
0x137e2	      0xe800000000	                          call 0x4013827	      9915	screen.c	FUNCTION_84	ELSE_15	FOR_2	IF_20	CALL_23
0x137e7	            0xeb0f	                           jmp 0x4013838	      9915	screen.c	FUNCTION_84	ELSE_15	FOR_2	IF_20	CALL_23
0x137e9	    0x488b05000000	            mov rax, qword [0x04013830] 	      9918	screen.c	FUNCTION_84	ELSE_15	FOR_2	CALL_24
0x137f0	          0x4889c7	                            mov rdi, rax	      9918	screen.c	FUNCTION_84	ELSE_15	FOR_2	CALL_24
0x137f3	      0xe800000000	                          call 0x4013838	      9918	screen.c	FUNCTION_84	ELSE_15	FOR_2	CALL_24
0x137f8	      0xe800000000	                          call 0x401383d	      9919	screen.c	FUNCTION_84	ELSE_15	FOR_2	CALL_25
0x137fd	        0x8345e401	               add dword [rbp - 0x1c], 1	      9909	screen.c	FUNCTION_84	ELSE_15	FOR_2
0x13801	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      9909	screen.c	FUNCTION_84	ELSE_15	FOR_2
0x13804	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      9909	screen.c	FUNCTION_84	ELSE_15	FOR_2
0x13807	            0x7cae	                            jl 0x40137f7	      9909	screen.c	FUNCTION_84	ELSE_15	FOR_2
0x13809	        0x837df006	               cmp dword [rbp - 0x10], 6	      9927	screen.c	FUNCTION_84	IF_22
0x1380d	            0x754b	                           jne 0x401389a	      9927	screen.c	FUNCTION_84	IF_22
0x1380f	    0x488b05000000	            mov rax, qword [0x04013856] 	      9927	screen.c	FUNCTION_84	IF_22
0x13816	           0xfb600	                   movzx eax, byte [rax]	      9927	screen.c	FUNCTION_84	IF_22
0x13819	            0x84c0	                             test al, al	      9927	screen.c	FUNCTION_84	IF_22
0x1381b	            0x743d	                            je 0x401389a	      9927	screen.c	FUNCTION_84	IF_22
0x1381d	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      9929	screen.c	FUNCTION_84	IF_22	FOR_3
0x13824	            0xeb2c	                           jmp 0x4013892	      9929	screen.c	FUNCTION_84	IF_22	FOR_3
0x13826	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      9931	screen.c	FUNCTION_84	IF_22	FOR_3	CALL_26
0x13829	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      9931	screen.c	FUNCTION_84	IF_22	FOR_3	CALL_26
0x1382c	             0x1d0	                            add eax, edx	      9931	screen.c	FUNCTION_84	IF_22	FOR_3	CALL_26
0x1382e	      0xbe00000000	                              mov esi, 0	      9931	screen.c	FUNCTION_84	IF_22	FOR_3	CALL_26
0x13833	            0x89c7	                            mov edi, eax	      9931	screen.c	FUNCTION_84	IF_22	FOR_3	CALL_26
0x13835	      0xe800000000	                          call 0x401387a	      9931	screen.c	FUNCTION_84	IF_22	FOR_3	CALL_26
0x1383a	    0x488b05000000	            mov rax, qword [0x04013881] 	      9932	screen.c	FUNCTION_84	IF_22	FOR_3	CALL_27
0x13841	          0x4889c7	                            mov rdi, rax	      9932	screen.c	FUNCTION_84	IF_22	FOR_3	CALL_27
0x13844	      0xe800000000	                          call 0x4013889	      9932	screen.c	FUNCTION_84	IF_22	FOR_3	CALL_27
0x13849	      0xe800000000	                          call 0x401388e	      9933	screen.c	FUNCTION_84	IF_22	FOR_3	CALL_28
0x1384e	        0x8345e401	               add dword [rbp - 0x1c], 1	      9929	screen.c	FUNCTION_84	IF_22	FOR_3
0x13852	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      9929	screen.c	FUNCTION_84	IF_22	FOR_3
0x13855	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      9929	screen.c	FUNCTION_84	IF_22	FOR_3
0x13858	            0x7ccc	                            jl 0x4013866	      9929	screen.c	FUNCTION_84	IF_22	FOR_3
0x1385a	      0xb801000000	                              mov eax, 1	      9942	screen.c	FUNCTION_84
0x1385f	              0xc9	                                   leave	      9943	screen.c	FUNCTION_84
0x13860	              0xc3	                                     ret	      9943	screen.c	FUNCTION_84
update_screen	DO,0:functions,3:CALL,24:ELSE,1:IF,26:WHILE,0:FOR,0:SWITCH,0	402
0x997	              0x55	                                push rbp	       537	screen.c	FUNCTION_12
0x998	          0x4889e5	                            mov rbp, rsp	       537	screen.c	FUNCTION_12
0x99b	              0x53	                                push rbx	       537	screen.c	FUNCTION_12
0x99c	        0x4883ec38	                           sub rsp, 0x38	       537	screen.c	FUNCTION_12
0x9a0	          0x897dcc	             mov dword [rbp - 0x34], edi	       537	screen.c	FUNCTION_12
0x9a3	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       538	screen.c	FUNCTION_12
0x9a6	          0x8945d4	             mov dword [rbp - 0x2c], eax	       538	screen.c	FUNCTION_12
0x9a9	    0xc745dc000000	               mov dword [rbp - 0x24], 0	       549	screen.c	FUNCTION_12
0x9b0	      0xbf01000000	                              mov edi, 1	       552	screen.c	FUNCTION_12	IF_1	CALL_1
0x9b5	      0xe800000000	                          call 0x40009fa	       552	screen.c	FUNCTION_12	IF_1	CALL_1
0x9ba	            0x85c0	                           test eax, eax	       552	screen.c	FUNCTION_12	IF_1	CALL_1
0x9bc	            0x750a	                           jne 0x4000a08	       552	screen.c	FUNCTION_12	IF_1	CALL_1
0x9be	      0xb800000000	                              mov eax, 0	       553	screen.c	FUNCTION_12	IF_1
0x9c3	      0xe99d060000	                           jmp 0x40010a5	       553	screen.c	FUNCTION_12	IF_1
0x9c8	        0x837dd405	               cmp dword [rbp - 0x2c], 5	       555	screen.c	FUNCTION_12	IF_2
0x9cc	            0x750e	                           jne 0x4000a1c	       555	screen.c	FUNCTION_12	IF_2
0x9ce	    0xc745dc010000	               mov dword [rbp - 0x24], 1	       557	screen.c	FUNCTION_12	IF_2
0x9d5	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	       558	screen.c	FUNCTION_12	IF_2
0x9dc	    0x8b0500000000	            mov eax, dword [0x04000a22] 	       561	screen.c	FUNCTION_12	IF_3
0x9e2	            0x85c0	                           test eax, eax	       561	screen.c	FUNCTION_12	IF_3
0x9e4	            0x741e	                            je 0x4000a44	       561	screen.c	FUNCTION_12	IF_3
0x9e6	    0x8b0500000000	            mov eax, dword [0x04000a2c] 	       563	screen.c	FUNCTION_12	IF_3	IF_4
0x9ec	          0x3945d4	            cmp dword [rbp - 0x2c], eax 	       563	screen.c	FUNCTION_12	IF_3	IF_4
0x9ef	            0x7d09	                           jge 0x4000a3a	       563	screen.c	FUNCTION_12	IF_3	IF_4
0x9f1	    0x8b0500000000	            mov eax, dword [0x04000a37] 	       564	screen.c	FUNCTION_12	IF_3	IF_4
0x9f7	          0x8945d4	             mov dword [rbp - 0x2c], eax	       564	screen.c	FUNCTION_12	IF_3	IF_4
0x9fa	    0xc70500000000	               mov dword [0x04000a44], 0	       570	screen.c	FUNCTION_12	IF_3
0xa04	    0x488b05000000	            mov rax, qword [0x04000a4b] 	       574	screen.c	FUNCTION_12	IF_5
0xa0b	    0x8b80f8000000	            mov eax, dword [rax + 0xf8] 	       574	screen.c	FUNCTION_12	IF_5
0xa11	            0x85c0	                           test eax, eax	       574	screen.c	FUNCTION_12	IF_5
0xa13	            0x750d	                           jne 0x4000a62	       574	screen.c	FUNCTION_12	IF_5
0xa15	        0x837dd427	           cmp dword [rbp - 0x2c], 0x27 	       574	screen.c	FUNCTION_12	IF_5
0xa19	            0x7f07	                            jg 0x4000a62	       574	screen.c	FUNCTION_12	IF_5
0xa1b	    0xc745d4280000	           mov dword [rbp - 0x2c], 0x28 	       575	screen.c	FUNCTION_12	IF_5
0xa22	      0xe800000000	                          call 0x4000a67	       579	screen.c	FUNCTION_12	IF_6	CALL_2
0xa27	            0x85c0	                           test eax, eax	       579	screen.c	FUNCTION_12	IF_6	CALL_2
0xa29	            0x740a	                            je 0x4000a75	       579	screen.c	FUNCTION_12	IF_6	CALL_2
0xa2b	    0x8b0500000000	            mov eax, dword [0x04000a71] 	       579	screen.c	FUNCTION_12	IF_6	CALL_2
0xa31	            0x85c0	                           test eax, eax	       579	screen.c	FUNCTION_12	IF_6	CALL_2
0xa33	            0x7434	                            je 0x4000aa9	       579	screen.c	FUNCTION_12	IF_6	CALL_2
0xa35	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       581	screen.c	FUNCTION_12	IF_6	CALL_3
0xa38	            0x89c7	                            mov edi, eax	       581	screen.c	FUNCTION_12	IF_6	CALL_3
0xa3a	      0xe800000000	                          call 0x4000a7f	       581	screen.c	FUNCTION_12	IF_6	CALL_3
0xa3f	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       582	screen.c	FUNCTION_12	IF_6
0xa42	    0x890500000000	            mov dword [0x04000a88], eax 	       582	screen.c	FUNCTION_12	IF_6
0xa48	        0x837dd419	           cmp dword [rbp - 0x2c], 0x19 	       583	screen.c	FUNCTION_12	IF_6	IF_7
0xa4c	            0x7e11	                           jle 0x4000a9f	       583	screen.c	FUNCTION_12	IF_6	IF_7
0xa4e	    0x488b05000000	            mov rax, qword [0x04000a95] 	       584	screen.c	FUNCTION_12	IF_6	IF_7
0xa55	    0xc780f8000000	               mov dword [rax + 0xf8], 0	       584	screen.c	FUNCTION_12	IF_6	IF_7
0xa5f	      0xb800000000	                              mov eax, 0	       585	screen.c	FUNCTION_12	IF_6
0xa64	      0xe9fc050000	                           jmp 0x40010a5	       585	screen.c	FUNCTION_12	IF_6
0xa69	    0xc70500000000	               mov dword [0x04000ab3], 1	       588	screen.c	FUNCTION_12
0xa73	     0xfb705000000	           movzx eax, word [0x04000aba] 	       590	screen.c	FUNCTION_12
0xa7a	          0x83c001	                              add eax, 1	       590	screen.c	FUNCTION_12
0xa7d	    0x668905000000	               mov word [0x04000ac4], ax	       590	screen.c	FUNCTION_12
0xa84	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       593	screen.c	FUNCTION_12	IF_8
0xa88	            0x740f	                            je 0x4000ad9	       593	screen.c	FUNCTION_12	IF_8
0xa8a	    0x8b0500000000	            mov eax, dword [0x04000ad0] 	       594	screen.c	FUNCTION_12	IF_8
0xa90	          0x83c001	                              add eax, 1	       594	screen.c	FUNCTION_12	IF_8
0xa93	    0x890500000000	            mov dword [0x04000ad9], eax 	       594	screen.c	FUNCTION_12	IF_8
0xa99	    0x8b0500000000	            mov eax, dword [0x04000adf] 	       599	screen.c	FUNCTION_12	IF_9
0xa9f	            0x85c0	                           test eax, eax	       599	screen.c	FUNCTION_12	IF_9
0xaa1	     0xf84e4010000	                            je 0x4000ccb	       599	screen.c	FUNCTION_12	IF_9
0xaa7	    0xc70500000000	               mov dword [0x04000af1], 1	       601	screen.c	FUNCTION_12	IF_9
0xab1	    0x8b0500000000	            mov eax, dword [0x04000af7] 	       602	screen.c	FUNCTION_12	IF_9	IF_10
0xab7	            0x4898	                                    cdqe	       602	screen.c	FUNCTION_12	IF_9	IF_10
0xab9	    0x488b15000000	            mov rdx, qword [0x04000b00] 	       602	screen.c	FUNCTION_12	IF_9	IF_10
0xac0	        0x4883ea05	                              sub rdx, 5	       602	screen.c	FUNCTION_12	IF_9	IF_10
0xac4	          0x4839d0	                            cmp rax, rdx	       602	screen.c	FUNCTION_12	IF_9	IF_10
0xac7	            0x7e0c	                           jle 0x4000b15	       602	screen.c	FUNCTION_12	IF_9	IF_10
0xac9	    0xc745d4320000	           mov dword [rbp - 0x2c], 0x32 	       603	screen.c	FUNCTION_12	IF_9	IF_10
0xad0	      0xe9a2010000	                           jmp 0x4000cb7	       603	screen.c	FUNCTION_12	IF_9	IF_10
0xad5	        0x837dd432	           cmp dword [rbp - 0x2c], 0x32 	       604	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11
0xad9	     0xf8498010000	                            je 0x4000cb7	       604	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11
0xadf	      0xbf00000000	                              mov edi, 0	       606	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	CALL_4
0xae4	      0xe800000000	                          call 0x4000b29	       606	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	CALL_4
0xae9	    0x488b05000000	            mov rax, qword [0x04000b30] 	       607	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	IF_12	CALL_5
0xaf0	            0x89c2	                            mov edx, eax	       607	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	IF_12	CALL_5
0xaf2	    0x8b0500000000	            mov eax, dword [0x04000b38] 	       607	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	IF_12	CALL_5
0xaf8	    0x41b900000000	                              mov r9d, 0	       607	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	IF_12	CALL_5
0xafe	    0x41b800000000	                              mov r8d, 0	       607	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	IF_12	CALL_5
0xb04	            0x89d1	                            mov ecx, edx	       607	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	IF_12	CALL_5
0xb06	            0x89c2	                            mov edx, eax	       607	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	IF_12	CALL_5
0xb08	      0xbe00000000	                              mov esi, 0	       607	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	IF_12	CALL_5
0xb0d	      0xbf00000000	                              mov edi, 0	       607	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	IF_12	CALL_5
0xb12	      0xe800000000	                          call 0x4000b57	       607	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	IF_12	CALL_5
0xb17	            0x85c0	                           test eax, eax	       607	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	IF_12	CALL_5
0xb19	            0x7507	                           jne 0x4000b62	       607	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	IF_12	CALL_5
0xb1b	    0xc745d4320000	           mov dword [rbp - 0x2c], 0x32 	       609	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	IF_12
0xb22	    0x488b05000000	            mov rax, qword [0x04000b69] 	       610	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11
0xb29	        0x488945e0	             mov qword [rbp - 0x20], rax	       610	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11
0xb2d	      0xe920010000	                           jmp 0x4000c92	       610	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11
0xb32	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       612	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	CALL_1
0xb36	    0x8b909c000000	            mov edx, dword [rax + 0x9c] 	       612	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	CALL_1
0xb3c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       612	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	CALL_1
0xb40	    0x8b80a8010000	           mov eax, dword [rax + 0x1a8] 	       612	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	CALL_1
0xb46	             0x1c2	                            add edx, eax	       612	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	CALL_1
0xb48	    0x8b0500000000	            mov eax, dword [0x04000b8e] 	       612	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	CALL_1
0xb4e	            0x39c2	                            cmp edx, eax	       612	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	CALL_1
0xb50	     0xf8df0000000	                           jge 0x4000c86	       612	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	CALL_1
0xb56	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       614	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2	CALL_2
0xb5a	    0x8b909c000000	            mov edx, dword [rax + 0x9c] 	       614	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2	CALL_2
0xb60	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       614	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2	CALL_2
0xb64	    0x8b80a8010000	           mov eax, dword [rax + 0x1a8] 	       614	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2	CALL_2
0xb6a	             0x1c2	                            add edx, eax	       614	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2	CALL_2
0xb6c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       614	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2	CALL_2
0xb70	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	       614	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2	CALL_2
0xb76	             0x1c2	                            add edx, eax	       614	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2	CALL_2
0xb78	    0x8b0500000000	            mov eax, dword [0x04000bbe] 	       614	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2	CALL_2
0xb7e	            0x39c2	                            cmp edx, eax	       614	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2	CALL_2
0xb80	            0x7e70	                           jle 0x4000c32	       614	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2	CALL_2
0xb82	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       615	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2
0xb86	    0x8b8028010000	           mov eax, dword [rax + 0x128] 	       615	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2
0xb8c	          0x83f81d	                           cmp eax, 0x1d	       615	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2
0xb8f	            0x7f61	                            jg 0x4000c32	       615	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2
0xb91	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       616	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2
0xb95	    0x8b80f8000000	            mov eax, dword [rax + 0xf8] 	       616	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2
0xb9b	            0x85c0	                           test eax, eax	       616	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2
0xb9d	            0x7e53	                           jle 0x4000c32	       616	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2
0xb9f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       617	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2
0xba3	        0x488b5078	            mov rdx, qword [rax + 0x78] 	       617	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2
0xba7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       617	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2
0xbab	    0x488b80000100	           mov rax, qword [rax + 0x100] 	       617	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2
0xbb2	          0x488b00	                    mov rax, qword [rax]	       617	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2
0xbb5	          0x4839c2	                            cmp rdx, rax	       617	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2
0xbb8	            0x7538	                           jne 0x4000c32	       617	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2
0xbba	    0x8b1500000000	            mov edx, dword [0x04000c00] 	       619	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2	CALL_3
0xbc0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       619	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2	CALL_3
0xbc4	    0x8b889c000000	            mov ecx, dword [rax + 0x9c] 	       619	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2	CALL_3
0xbca	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       619	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2	CALL_3
0xbce	    0x8b80a8010000	           mov eax, dword [rax + 0x1a8] 	       619	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2	CALL_3
0xbd4	             0x1c8	                            add eax, ecx	       619	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2	CALL_3
0xbd6	            0x29c2	                            sub edx, eax	       619	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2	CALL_3
0xbd8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       619	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2	CALL_3
0xbdc	    0x89902c010000	            mov dword [rax + 0x12c], edx	       619	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2	CALL_3
0xbe2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       620	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2
0xbe6	    0xc78028010000	          mov dword [rax + 0x128], 0x1e 	       620	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2
0xbf0	            0xeb54	                           jmp 0x4000c86	       620	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11	FUNCTION_1	IF_1	IF_2
0xbf2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       624	screen.c	FUNCTION_12	IF_9	IF_11	FUNCTION_1	IF_1
0xbf6	    0xc78028010000	          mov dword [rax + 0x128], 0x28 	       624	screen.c	FUNCTION_12	IF_9	IF_11	FUNCTION_1	IF_1
0xc00	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       625	screen.c	FUNCTION_12	IF_9	IF_11	FUNCTION_1	IF_1	IF_3	CALL_4
0xc04	    0x8b909c000000	            mov edx, dword [rax + 0x9c] 	       625	screen.c	FUNCTION_12	IF_9	IF_11	FUNCTION_1	IF_1	IF_3	CALL_4
0xc0a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       625	screen.c	FUNCTION_12	IF_9	IF_11	FUNCTION_1	IF_1	IF_3	CALL_4
0xc0e	    0x8b80a8010000	           mov eax, dword [rax + 0x1a8] 	       625	screen.c	FUNCTION_12	IF_9	IF_11	FUNCTION_1	IF_1	IF_3	CALL_4
0xc14	             0x1c2	                            add edx, eax	       625	screen.c	FUNCTION_12	IF_9	IF_11	FUNCTION_1	IF_1	IF_3	CALL_4
0xc16	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       625	screen.c	FUNCTION_12	IF_9	IF_11	FUNCTION_1	IF_1	IF_3	CALL_4
0xc1a	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	       625	screen.c	FUNCTION_12	IF_9	IF_11	FUNCTION_1	IF_1	IF_3	CALL_4
0xc20	             0x1c2	                            add edx, eax	       625	screen.c	FUNCTION_12	IF_9	IF_11	FUNCTION_1	IF_1	IF_3	CALL_4
0xc22	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       625	screen.c	FUNCTION_12	IF_9	IF_11	FUNCTION_1	IF_1	IF_3	CALL_4
0xc26	    0x8b80a4000000	            mov eax, dword [rax + 0xa4] 	       625	screen.c	FUNCTION_12	IF_9	IF_11	FUNCTION_1	IF_1	IF_3	CALL_4
0xc2c	             0x1c2	                            add edx, eax	       625	screen.c	FUNCTION_12	IF_9	IF_11	FUNCTION_1	IF_1	IF_3	CALL_4
0xc2e	    0x8b0500000000	            mov eax, dword [0x04000c74] 	       626	screen.c	FUNCTION_12	IF_9	IF_11	FUNCTION_1	IF_1	IF_3
0xc34	            0x39c2	                            cmp edx, eax	       625	screen.c	FUNCTION_12	IF_9	IF_11	FUNCTION_1	IF_1	IF_3	CALL_4
0xc36	            0x7f0e	                            jg 0x4000c86	       625	screen.c	FUNCTION_12	IF_9	IF_11	FUNCTION_1	IF_1	IF_3	CALL_4
0xc38	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       627	screen.c	FUNCTION_12	IF_9	IF_11	FUNCTION_1	IF_1	IF_3
0xc3c	    0xc78040010000	              mov dword [rax + 0x140], 1	       627	screen.c	FUNCTION_12	IF_9	IF_11	FUNCTION_1	IF_1	IF_3
0xc46	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       610	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11
0xc4a	        0x488b4020	            mov rax, qword [rax + 0x20] 	       610	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11
0xc4e	        0x488945e0	             mov qword [rbp - 0x20], rax	       610	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11
0xc52	      0x48837de000	               cmp qword [rbp - 0x20], 0	       610	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11
0xc57	     0xf85d5feffff	                           jne 0x4000b72	       610	screen.c	FUNCTION_12	IF_9	ELSE_1	IF_11
0xc5d	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       631	screen.c	FUNCTION_12	IF_9	IF_11	ELSE_1	IF_13
0xc61	            0x750a	                           jne 0x4000cad	       631	screen.c	FUNCTION_12	IF_9	IF_11	ELSE_1	IF_13
0xc63	    0xc70500000000	               mov dword [0x04000cad], 1	       632	screen.c	FUNCTION_12	IF_9	IF_11	ELSE_1	IF_13
0xc6d	    0xc70500000000	               mov dword [0x04000cb7], 1	       633	screen.c	FUNCTION_12	IF_9	IF_11	ELSE_1
0xc77	    0xc70500000000	               mov dword [0x04000cc1], 0	       635	screen.c	FUNCTION_12	IF_9
0xc81	    0xc70500000000	               mov dword [0x04000ccb], 0	       636	screen.c	FUNCTION_12	IF_9
0xc8b	      0xe800000000	                          call 0x4000cd0	       640	screen.c	FUNCTION_12	CALL_6
0xc90	    0x8b0500000000	            mov eax, dword [0x04000cd6] 	       643	screen.c	FUNCTION_12	IF_14
0xc96	            0x85c0	                           test eax, eax	       643	screen.c	FUNCTION_12	IF_14
0xc98	            0x7405	                            je 0x4000cdf	       643	screen.c	FUNCTION_12	IF_14
0xc9a	      0xe800000000	                          call 0x4000cdf	       644	screen.c	FUNCTION_12	CALL_7
0xc9f	        0x837dd432	           cmp dword [rbp - 0x2c], 0x32 	       646	screen.c	FUNCTION_12	IF_15
0xca3	            0x7516	                           jne 0x4000cfb	       646	screen.c	FUNCTION_12	IF_15
0xca5	      0xe800000000	                          call 0x4000cea	       648	screen.c	FUNCTION_12	IF_15	CALL_8
0xcaa	    0xc745d4280000	           mov dword [rbp - 0x2c], 0x28 	       649	screen.c	FUNCTION_12	IF_15
0xcb1	    0xc70500000000	               mov dword [0x04000cfb], 0	       651	screen.c	FUNCTION_12	IF_15
0xcbb	    0x8b0500000000	            mov eax, dword [0x04000d01] 	       654	screen.c	FUNCTION_12	IF_16
0xcc1	            0x85c0	                           test eax, eax	       654	screen.c	FUNCTION_12	IF_16
0xcc3	            0x740a	                            je 0x4000d0f	       654	screen.c	FUNCTION_12	IF_16
0xcc5	      0xbf00000000	                              mov edi, 0	       655	screen.c	FUNCTION_12	CALL_9
0xcca	      0xe800000000	                          call 0x4000d0f	       655	screen.c	FUNCTION_12	CALL_9
0xccf	    0x488b05000000	            mov rax, qword [0x04000d16] 	       660	screen.c	FUNCTION_12	IF_17
0xcd6	    0x8b8028010000	           mov eax, dword [rax + 0x128] 	       660	screen.c	FUNCTION_12	IF_17
0xcdc	          0x83f827	                           cmp eax, 0x27	       660	screen.c	FUNCTION_12	IF_17
0xcdf	            0x7f5a	                            jg 0x4000d7b	       660	screen.c	FUNCTION_12	IF_17
0xce1	    0x488b05000000	            mov rax, qword [0x04000d28] 	       661	screen.c	FUNCTION_12	IF_17
0xce8	    0x8b9824010000	           mov ebx, dword [rax + 0x124] 	       661	screen.c	FUNCTION_12	IF_17
0xcee	    0x488b05000000	            mov rax, qword [0x04000d35] 	       661	screen.c	FUNCTION_12	IF_17
0xcf5	    0x8b8038020000	           mov eax, dword [rax + 0x238] 	       661	screen.c	FUNCTION_12	IF_17
0xcfb	            0x85c0	                           test eax, eax	       662	screen.c	FUNCTION_12	IF_17	CALL_10
0xcfd	            0x7511	                           jne 0x4000d50	       662	screen.c	FUNCTION_12	IF_17	CALL_10
0xcff	    0x488b05000000	            mov rax, qword [0x04000d46] 	       661	screen.c	FUNCTION_12	IF_17
0xd06	    0x8b803c020000	           mov eax, dword [rax + 0x23c] 	       661	screen.c	FUNCTION_12	IF_17
0xd0c	            0x85c0	                           test eax, eax	       661	screen.c	FUNCTION_12	IF_17
0xd0e	            0x7411	                            je 0x4000d61	       661	screen.c	FUNCTION_12	IF_17
0xd10	    0x488b05000000	            mov rax, qword [0x04000d57] 	       662	screen.c	FUNCTION_12	IF_17	CALL_10
0xd17	          0x4889c7	                            mov rdi, rax	       662	screen.c	FUNCTION_12	IF_17	CALL_10
0xd1a	      0xe800000000	                          call 0x4000d5f	       662	screen.c	FUNCTION_12	IF_17	CALL_10
0xd1f	            0xeb05	                           jmp 0x4000d66	       662	screen.c	FUNCTION_12	IF_17	CALL_10
0xd21	      0xb800000000	                              mov eax, 0	       662	screen.c	FUNCTION_12	IF_17	CALL_10
0xd26	            0x39c3	                            cmp ebx, eax	       661	screen.c	FUNCTION_12	IF_17
0xd28	            0x7411	                            je 0x4000d7b	       661	screen.c	FUNCTION_12	IF_17
0xd2a	    0x488b05000000	            mov rax, qword [0x04000d71] 	       663	screen.c	FUNCTION_12	IF_17
0xd31	    0xc78028010000	          mov dword [rax + 0x128], 0x28 	       663	screen.c	FUNCTION_12	IF_17
0xd3b	        0x837dd414	           cmp dword [rbp - 0x2c], 0x14 	       669	screen.c	FUNCTION_12	IF_18
0xd3f	            0x7505	                           jne 0x4000d86	       669	screen.c	FUNCTION_12	IF_18
0xd41	      0xe800000000	                          call 0x4000d86	       670	screen.c	FUNCTION_12	CALL_11
0xd46	    0x488b05000000	            mov rax, qword [0x04000d8d] 	       671	screen.c	FUNCTION_12	IF_19
0xd4d	    0x8b8028010000	           mov eax, dword [rax + 0x128] 	       671	screen.c	FUNCTION_12	IF_19
0xd53	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	       671	screen.c	FUNCTION_12	IF_19
0xd56	     0xf8df8000000	                           jge 0x4000e94	       671	screen.c	FUNCTION_12	IF_19
0xd5c	        0x837dd40a	            cmp dword [rbp - 0x2c], 0xa 	       672	screen.c	FUNCTION_12	IF_19
0xd60	            0x7573	                           jne 0x4000e15	       672	screen.c	FUNCTION_12	IF_19
0xd62	    0x488b05000000	            mov rax, qword [0x04000da9] 	       673	screen.c	FUNCTION_12	IF_19
0xd69	    0x488b80000100	           mov rax, qword [rax + 0x100] 	       673	screen.c	FUNCTION_12	IF_19
0xd70	         0xfb6400a	            movzx eax, byte [rax + 0xa] 	       673	screen.c	FUNCTION_12	IF_19
0xd74	            0x84c0	                             test al, al	       673	screen.c	FUNCTION_12	IF_19
0xd76	            0x745d	                            je 0x4000e15	       673	screen.c	FUNCTION_12	IF_19
0xd78	    0x488b05000000	            mov rax, qword [0x04000dbf] 	       675	screen.c	FUNCTION_12	IF_19
0xd7f	    0x8b9084000000	            mov edx, dword [rax + 0x84] 	       675	screen.c	FUNCTION_12	IF_19
0xd85	    0x488b05000000	            mov rax, qword [0x04000dcc] 	       675	screen.c	FUNCTION_12	IF_19
0xd8c	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	       675	screen.c	FUNCTION_12	IF_19
0xd92	            0x39c2	                            cmp edx, eax	       675	screen.c	FUNCTION_12	IF_19
0xd94	            0x753f	                           jne 0x4000e15	       675	screen.c	FUNCTION_12	IF_19
0xd96	    0x488b05000000	            mov rax, qword [0x04000ddd] 	       676	screen.c	FUNCTION_12	IF_19
0xd9d	    0x8b908c000000	            mov edx, dword [rax + 0x8c] 	       676	screen.c	FUNCTION_12	IF_19
0xda3	    0x488b05000000	            mov rax, qword [0x04000dea] 	       676	screen.c	FUNCTION_12	IF_19
0xdaa	    0x8b8090000000	            mov eax, dword [rax + 0x90] 	       676	screen.c	FUNCTION_12	IF_19
0xdb0	            0x39c2	                            cmp edx, eax	       676	screen.c	FUNCTION_12	IF_19
0xdb2	            0x7521	                           jne 0x4000e15	       676	screen.c	FUNCTION_12	IF_19
0xdb4	    0x488b05000000	            mov rax, qword [0x04000dfb] 	       678	screen.c	FUNCTION_12	IF_19
0xdbb	        0x488b5078	            mov rdx, qword [rax + 0x78] 	       678	screen.c	FUNCTION_12	IF_19
0xdbf	    0x488b05000000	            mov rax, qword [0x04000e06] 	       678	screen.c	FUNCTION_12	IF_19
0xdc6	    0x488b80000100	           mov rax, qword [rax + 0x100] 	       678	screen.c	FUNCTION_12	IF_19
0xdcd	          0x488b00	                    mov rax, qword [rax]	       678	screen.c	FUNCTION_12	IF_19
0xdd0	          0x4839c2	                            cmp rdx, rax	       678	screen.c	FUNCTION_12	IF_19
0xdd3	            0x747f	                            je 0x4000e94	       678	screen.c	FUNCTION_12	IF_19
0xdd5	        0x837dd414	           cmp dword [rbp - 0x2c], 0x14 	       672	screen.c	FUNCTION_12	IF_19
0xdd9	            0x7569	                           jne 0x4000e84	       672	screen.c	FUNCTION_12	IF_19
0xddb	    0x8b0500000000	            mov eax, dword [0x04000e21] 	       680	screen.c	FUNCTION_12	IF_19
0xde1	            0x85c0	                           test eax, eax	       680	screen.c	FUNCTION_12	IF_19
0xde3	            0x745f	                            je 0x4000e84	       680	screen.c	FUNCTION_12	IF_19
0xde5	    0x488b05000000	            mov rax, qword [0x04000e2c] 	       681	screen.c	FUNCTION_12	IF_19
0xdec	        0x488b5058	            mov rdx, qword [rax + 0x58] 	       681	screen.c	FUNCTION_12	IF_19
0xdf0	    0x488b05000000	            mov rax, qword [0x04000e37] 	       681	screen.c	FUNCTION_12	IF_19
0xdf7	        0x488b4038	            mov rax, qword [rax + 0x38] 	       681	screen.c	FUNCTION_12	IF_19
0xdfb	          0x4839c2	                            cmp rdx, rax	       681	screen.c	FUNCTION_12	IF_19
0xdfe	            0x7544	                           jne 0x4000e84	       681	screen.c	FUNCTION_12	IF_19
0xe00	    0x488b05000000	            mov rax, qword [0x04000e47] 	       682	screen.c	FUNCTION_12	IF_19
0xe07	         0xfb64050	           movzx eax, byte [rax + 0x50] 	       682	screen.c	FUNCTION_12	IF_19
0xe0b	           0xfbed0	                           movsx edx, al	       682	screen.c	FUNCTION_12	IF_19
0xe0e	    0x8b0500000000	            mov eax, dword [0x04000e54] 	       682	screen.c	FUNCTION_12	IF_19
0xe14	            0x39c2	                            cmp edx, eax	       682	screen.c	FUNCTION_12	IF_19
0xe16	            0x752c	                           jne 0x4000e84	       682	screen.c	FUNCTION_12	IF_19
0xe18	    0x488b05000000	            mov rax, qword [0x04000e5f] 	       683	screen.c	FUNCTION_12	IF_19
0xe1f	    0x8b80b4000000	            mov eax, dword [rax + 0xb4] 	       683	screen.c	FUNCTION_12	IF_19
0xe25	          0x83e004	                              and eax, 4	       683	screen.c	FUNCTION_12	IF_19
0xe28	            0x85c0	                           test eax, eax	       683	screen.c	FUNCTION_12	IF_19
0xe2a	            0x7418	                            je 0x4000e84	       683	screen.c	FUNCTION_12	IF_19
0xe2c	    0x488b05000000	            mov rax, qword [0x04000e73] 	       684	screen.c	FUNCTION_12	IF_19
0xe33	          0x8b5074	            mov edx, dword [rax + 0x74] 	       684	screen.c	FUNCTION_12	IF_19
0xe36	    0x488b05000000	            mov rax, qword [0x04000e7d] 	       684	screen.c	FUNCTION_12	IF_19
0xe3d	          0x8b4048	            mov eax, dword [rax + 0x48] 	       684	screen.c	FUNCTION_12	IF_19
0xe40	            0x39c2	                            cmp edx, eax	       684	screen.c	FUNCTION_12	IF_19
0xe42	            0x7410	                            je 0x4000e94	       684	screen.c	FUNCTION_12	IF_19
0xe44	    0x488b05000000	            mov rax, qword [0x04000e8b] 	       686	screen.c	FUNCTION_12	IF_19
0xe4b	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	       686	screen.c	FUNCTION_12	IF_19
0xe4e	    0x899028010000	            mov dword [rax + 0x128], edx	       686	screen.c	FUNCTION_12	IF_19
0xe54	    0x8b0500000000	            mov eax, dword [0x04000e9a] 	       689	screen.c	FUNCTION_12	IF_20
0xe5a	            0x85c0	                           test eax, eax	       689	screen.c	FUNCTION_12	IF_20
0xe5c	            0x7506	                           jne 0x4000ea4	       689	screen.c	FUNCTION_12	IF_20
0xe5e	        0x837dd427	           cmp dword [rbp - 0x2c], 0x27 	       689	screen.c	FUNCTION_12	IF_20
0xe62	            0x7e05	                           jle 0x4000ea9	       689	screen.c	FUNCTION_12	IF_20
0xe64	      0xe8e3360100	                   call sym.draw_tabline	       690	screen.c	FUNCTION_12	CALL_12
0xe69	    0x488b05000000	            mov rax, qword [0x04000eb0] 	       697	screen.c	FUNCTION_12
0xe70	        0x488945e0	             mov qword [rbp - 0x20], rax	       697	screen.c	FUNCTION_12
0xe74	      0xe983000000	                           jmp 0x4000f3c	       697	screen.c	FUNCTION_12
0xe79	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       699	screen.c	FUNCTION_12	FUNCTION_2	IF_1
0xe7d	        0x488b4008	                mov rax, qword [rax + 8]	       699	screen.c	FUNCTION_12	FUNCTION_2	IF_1
0xe81	    0x8b80fc000000	            mov eax, dword [rax + 0xfc] 	       699	screen.c	FUNCTION_12	FUNCTION_2	IF_1
0xe87	            0x85c0	                           test eax, eax	       699	screen.c	FUNCTION_12	FUNCTION_2	IF_1
0xe89	            0x7465	                            je 0x4000f30	       699	screen.c	FUNCTION_12	FUNCTION_2	IF_1
0xe8b	    0x488b05000000	            mov rax, qword [0x04000ed2] 	       704	screen.c	FUNCTION_12	FUNCTION_2	IF_1	FOR_1
0xe92	        0x488945e8	             mov qword [rbp - 0x18], rax	       704	screen.c	FUNCTION_12	FUNCTION_2	IF_1	FOR_1
0xe96	            0xeb21	                           jmp 0x4000ef9	       704	screen.c	FUNCTION_12	FUNCTION_2	IF_1	FOR_1
0xe98	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       705	screen.c	FUNCTION_12	FUNCTION_2	IF_1	FOR_1	IF_2
0xe9c	        0x488b5008	                mov rdx, qword [rax + 8]	       705	screen.c	FUNCTION_12	FUNCTION_2	IF_1	FOR_1	IF_2
0xea0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       705	screen.c	FUNCTION_12	FUNCTION_2	IF_1	FOR_1	IF_2
0xea4	        0x488b4008	                mov rax, qword [rax + 8]	       705	screen.c	FUNCTION_12	FUNCTION_2	IF_1	FOR_1	IF_2
0xea8	          0x4839c2	                            cmp rdx, rax	       705	screen.c	FUNCTION_12	FUNCTION_2	IF_1	FOR_1	IF_2
0xeab	            0x7418	                            je 0x4000f05	       705	screen.c	FUNCTION_12	FUNCTION_2	IF_1	FOR_1	IF_2
0xead	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       704	screen.c	FUNCTION_12	FUNCTION_2	IF_1	FOR_1
0xeb1	        0x488b4020	            mov rax, qword [rax + 0x20] 	       704	screen.c	FUNCTION_12	FUNCTION_2	IF_1	FOR_1
0xeb5	        0x488945e8	             mov qword [rbp - 0x18], rax	       704	screen.c	FUNCTION_12	FUNCTION_2	IF_1	FOR_1
0xeb9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       704	screen.c	FUNCTION_12	FUNCTION_2	IF_1	FOR_1
0xebd	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       704	screen.c	FUNCTION_12	FUNCTION_2	IF_1	FOR_1
0xec1	            0x75d5	                           jne 0x4000ed8	       704	screen.c	FUNCTION_12	FUNCTION_2	IF_1	FOR_1
0xec3	            0xeb01	                           jmp 0x4000f06	       704	screen.c	FUNCTION_12	FUNCTION_2	IF_1	FOR_1
0xec5	              0x90	                                     nop	       706	screen.c	FUNCTION_12	FUNCTION_2	IF_1	FOR_1	IF_2
0xec6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       707	screen.c	FUNCTION_12	FUNCTION_2	IF_1	IF_3	CALL_1
0xeca	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       707	screen.c	FUNCTION_12	FUNCTION_2	IF_1	IF_3	CALL_1
0xece	            0x7520	                           jne 0x4000f30	       707	screen.c	FUNCTION_12	FUNCTION_2	IF_1	IF_3	CALL_1
0xed0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       707	screen.c	FUNCTION_12	FUNCTION_2	IF_1	IF_3	CALL_1
0xed4	          0x4889c7	                            mov rdi, rax	       707	screen.c	FUNCTION_12	FUNCTION_2	IF_1	IF_3	CALL_1
0xed7	      0xe800000000	                          call 0x4000f1c	       707	screen.c	FUNCTION_12	FUNCTION_2	IF_1	IF_3	CALL_1
0xedc	            0x85c0	                           test eax, eax	       707	screen.c	FUNCTION_12	FUNCTION_2	IF_1	IF_3	CALL_1
0xede	            0x7410	                            je 0x4000f30	       707	screen.c	FUNCTION_12	FUNCTION_2	IF_1	IF_3	CALL_1
0xee0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       708	screen.c	FUNCTION_12	FUNCTION_2	IF_1	CALL_2
0xee4	        0x488b4008	                mov rax, qword [rax + 8]	       708	screen.c	FUNCTION_12	FUNCTION_2	IF_1	CALL_2
0xee8	          0x4889c7	                            mov rdi, rax	       708	screen.c	FUNCTION_12	FUNCTION_2	IF_1	CALL_2
0xeeb	      0xe800000000	                          call 0x4000f30	       708	screen.c	FUNCTION_12	FUNCTION_2	IF_1	CALL_2
0xef0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       697	screen.c	FUNCTION_12
0xef4	        0x488b4020	            mov rax, qword [rax + 0x20] 	       697	screen.c	FUNCTION_12
0xef8	        0x488945e0	             mov qword [rbp - 0x20], rax	       697	screen.c	FUNCTION_12
0xefc	      0x48837de000	               cmp qword [rbp - 0x20], 0	       697	screen.c	FUNCTION_12
0xf01	     0xf8572ffffff	                           jne 0x4000eb9	       697	screen.c	FUNCTION_12
0xf07	    0xc745d8000000	               mov dword [rbp - 0x28], 0	       718	screen.c	FUNCTION_12
0xf0e	    0x48c705000000	               mov qword [0x04000f59], 0	       721	screen.c	FUNCTION_12
0xf19	    0x488b05000000	            mov rax, qword [0x04000f60] 	       723	screen.c	FUNCTION_12
0xf20	        0x488945e0	             mov qword [rbp - 0x20], rax	       723	screen.c	FUNCTION_12
0xf24	      0xe996000000	                           jmp 0x4000fff	       723	screen.c	FUNCTION_12
0xf29	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       725	screen.c	FUNCTION_12	FUNCTION_3	IF_1
0xf2d	    0x8b8028010000	           mov eax, dword [rax + 0x128] 	       725	screen.c	FUNCTION_12	FUNCTION_3	IF_1
0xf33	            0x85c0	                           test eax, eax	       725	screen.c	FUNCTION_12	FUNCTION_3	IF_1
0xf35	            0x745d	                            je 0x4000fd4	       725	screen.c	FUNCTION_12	FUNCTION_3	IF_1
0xf37	      0xe800000000	                          call 0x4000f7c	       727	screen.c	FUNCTION_12	FUNCTION_3	IF_1	CALL_1
0xf3c	        0x837dd800	               cmp dword [rbp - 0x28], 0	       729	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2
0xf40	            0x7546	                           jne 0x4000fc8	       729	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2
0xf42	    0xc745d8010000	               mov dword [rbp - 0x28], 1	       731	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2
0xf49	      0xe834e80000	                call sym.start_search_hl	       733	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2	CALL_2
0xf4e	    0x8b0500000000	            mov eax, dword [0x04000f94] 	       737	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2	IF_3	CALL_3
0xf54	            0x85c0	                           test eax, eax	       737	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2	IF_3	CALL_3
0xf56	            0x7413	                            je 0x4000fab	       737	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2	IF_3	CALL_3
0xf58	      0xe800000000	                          call 0x4000f9d	       737	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2	IF_3	CALL_3
0xf5d	            0x85c0	                           test eax, eax	       737	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2	IF_3	CALL_3
0xf5f	            0x740a	                            je 0x4000fab	       737	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2	IF_3	CALL_3
0xf61	      0xbf00000000	                              mov edi, 0	       738	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2	CALL_4
0xf66	      0xe800000000	                          call 0x4000fab	       738	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2	CALL_4
0xf6b	    0x8b0500000000	            mov eax, dword [0x04000fb1] 	       739	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2	IF_4	CALL_5
0xf71	            0x85c0	                           test eax, eax	       739	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2	IF_4	CALL_5
0xf73	            0x7413	                            je 0x4000fc8	       739	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2	IF_4	CALL_5
0xf75	      0xe800000000	                          call 0x4000fba	       739	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2	IF_4	CALL_5
0xf7a	            0x85c0	                           test eax, eax	       739	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2	IF_4	CALL_5
0xf7c	            0x740a	                            je 0x4000fc8	       739	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2	IF_4	CALL_5
0xf7e	      0xbf00000000	                              mov edi, 0	       740	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2	CALL_6
0xf83	      0xe800000000	                          call 0x4000fc8	       740	screen.c	FUNCTION_12	FUNCTION_3	IF_1	IF_2	CALL_6
0xf88	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       756	screen.c	FUNCTION_12	FUNCTION_3	IF_1	CALL_8
0xf8c	          0x4889c7	                            mov rdi, rax	       756	screen.c	FUNCTION_12	FUNCTION_3	IF_1	CALL_8
0xf8f	      0xe8b5050000	                     call sym.win_update	       756	screen.c	FUNCTION_12	FUNCTION_3	IF_1	CALL_8
0xf94	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       760	screen.c	FUNCTION_12	FUNCTION_3	IF_6
0xf98	    0x8b8040010000	           mov eax, dword [rax + 0x140] 	       760	screen.c	FUNCTION_12	FUNCTION_3	IF_6
0xf9e	            0x85c0	                           test eax, eax	       760	screen.c	FUNCTION_12	FUNCTION_3	IF_6
0xfa0	            0x7411	                            je 0x4000ff3	       760	screen.c	FUNCTION_12	FUNCTION_3	IF_6
0xfa2	      0xe800000000	                          call 0x4000fe7	       762	screen.c	FUNCTION_12	FUNCTION_3	IF_6	CALL_9
0xfa7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       763	screen.c	FUNCTION_12	FUNCTION_3	IF_6	CALL_10
0xfab	          0x4889c7	                            mov rdi, rax	       763	screen.c	FUNCTION_12	FUNCTION_3	IF_6	CALL_10
0xfae	      0xe800000000	                          call 0x4000ff3	       763	screen.c	FUNCTION_12	FUNCTION_3	IF_6	CALL_10
0xfb3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       723	screen.c	FUNCTION_12
0xfb7	        0x488b4020	            mov rax, qword [rax + 0x20] 	       723	screen.c	FUNCTION_12
0xfbb	        0x488945e0	             mov qword [rbp - 0x20], rax	       723	screen.c	FUNCTION_12
0xfbf	      0x48837de000	               cmp qword [rbp - 0x20], 0	       723	screen.c	FUNCTION_12
0xfc4	     0xf855fffffff	                           jne 0x4000f69	       723	screen.c	FUNCTION_12
0xfca	      0xe8f8e70000	                  call sym.end_search_hl	       767	screen.c	FUNCTION_12	CALL_13
0xfcf	      0xe800000000	                          call 0x4001014	       771	screen.c	FUNCTION_12	IF_21	CALL_14
0xfd4	            0x85c0	                           test eax, eax	       771	screen.c	FUNCTION_12	IF_21	CALL_14
0xfd6	            0x7405	                            je 0x400101d	       771	screen.c	FUNCTION_12	IF_21	CALL_14
0xfd8	      0xe800000000	                          call 0x400101d	       772	screen.c	FUNCTION_12	CALL_15
0xfdd	    0x488b05000000	            mov rax, qword [0x04001024] 	       777	screen.c	FUNCTION_12	CALL_16
0xfe4	        0x488945e0	             mov qword [rbp - 0x20], rax	       777	screen.c	FUNCTION_12	CALL_16
0xfe8	            0xeb1e	                           jmp 0x4001048	       777	screen.c	FUNCTION_12	CALL_16
0xfea	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       778	screen.c	FUNCTION_12
0xfee	        0x488b4008	                mov rax, qword [rax + 8]	       778	screen.c	FUNCTION_12
0xff2	    0xc780fc000000	               mov dword [rax + 0xfc], 0	       778	screen.c	FUNCTION_12
0xffc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       777	screen.c	FUNCTION_12	CALL_16
0x1000	        0x488b4020	            mov rax, qword [rax + 0x20] 	       777	screen.c	FUNCTION_12	CALL_16
0x1004	        0x488945e0	             mov qword [rbp - 0x20], rax	       777	screen.c	FUNCTION_12	CALL_16
0x1008	      0x48837de000	               cmp qword [rbp - 0x20], 0	       777	screen.c	FUNCTION_12	CALL_16
0x100d	            0x75db	                           jne 0x400102a	       777	screen.c	FUNCTION_12	CALL_16
0x100f	    0xc70500000000	               mov dword [0x04001059], 0	       780	screen.c	FUNCTION_12
0x1019	    0x8b0500000000	            mov eax, dword [0x0400105f] 	       787	screen.c	FUNCTION_12	IF_22
0x101f	            0x85c0	                           test eax, eax	       787	screen.c	FUNCTION_12	IF_22
0x1021	            0x750a	                           jne 0x400106d	       787	screen.c	FUNCTION_12	IF_22
0x1023	    0x8b0500000000	            mov eax, dword [0x04001069] 	       787	screen.c	FUNCTION_12	IF_22
0x1029	            0x85c0	                           test eax, eax	       787	screen.c	FUNCTION_12	IF_22
0x102b	            0x7405	                            je 0x4001072	       787	screen.c	FUNCTION_12	IF_22
0x102d	      0xe800000000	                          call 0x4001072	       788	screen.c	FUNCTION_12	CALL_18
0x1032	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       790	screen.c	FUNCTION_12	IF_23
0x1036	            0x740f	                            je 0x4001087	       790	screen.c	FUNCTION_12	IF_23
0x1038	    0x8b0500000000	            mov eax, dword [0x0400107e] 	       791	screen.c	FUNCTION_12	IF_23
0x103e	          0x83e801	                              sub eax, 1	       791	screen.c	FUNCTION_12	IF_23
0x1041	    0x890500000000	            mov dword [0x04001087], eax 	       791	screen.c	FUNCTION_12	IF_23
0x1047	    0x8b0500000000	            mov eax, dword [0x0400108d] 	       794	screen.c	FUNCTION_12	IF_24
0x104d	            0x85c0	                           test eax, eax	       794	screen.c	FUNCTION_12	IF_24
0x104f	            0x7505	                           jne 0x4001096	       794	screen.c	FUNCTION_12	IF_24
0x1051	      0xe800000000	                          call 0x4001096	       795	screen.c	FUNCTION_12	CALL_19
0x1056	    0xc70500000000	               mov dword [0x040010a0], 1	       796	screen.c	FUNCTION_12
0x1060	      0xb801000000	                              mov eax, 1	       820	screen.c	FUNCTION_12
0x1065	        0x4883c438	                           add rsp, 0x38	       821	screen.c	FUNCTION_12
0x1069	              0x5b	                                 pop rbx	       821	screen.c	FUNCTION_12
0x106a	              0x5d	                                 pop rbp	       821	screen.c	FUNCTION_12
0x106b	              0xc3	                                     ret	       821	screen.c	FUNCTION_12
prepare_search_hl	DO,0:functions,0:CALL,3:ELSE,2:IF,7:WHILE,2:FOR,1:SWITCH,0	145
0xf8f5	              0x55	                                push rbp	      7738	screen.c	FUNCTION_55
0xf8f6	          0x4889e5	                            mov rbp, rsp	      7738	screen.c	FUNCTION_55
0xf8f9	        0x4883ec30	                           sub rsp, 0x30	      7738	screen.c	FUNCTION_55
0xf8fd	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      7738	screen.c	FUNCTION_55
0xf901	        0x488975d0	             mov qword [rbp - 0x30], rsi	      7738	screen.c	FUNCTION_55
0xf905	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7752	screen.c	FUNCTION_55
0xf909	    0x488b80501500	          mov rax, qword [rax + 0x1550] 	      7752	screen.c	FUNCTION_55
0xf910	        0x488945f0	             mov qword [rbp - 0x10], rax	      7752	screen.c	FUNCTION_55
0xf914	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      7753	screen.c	FUNCTION_55
0xf91b	      0xe92a020000	                           jmp 0x400fb8a	      7754	screen.c	FUNCTION_55	WHILE_1
0xf920	        0x837de400	               cmp dword [rbp - 0x1c], 0	      7756	screen.c	FUNCTION_55	WHILE_1	IF_1
0xf924	            0x7511	                           jne 0x400f977	      7756	screen.c	FUNCTION_55	WHILE_1	IF_1
0xf926	    0x48c745f80000	                  mov qword [rbp - 8], 0	      7758	screen.c	FUNCTION_55	WHILE_1	IF_1
0xf92e	    0xc745e4010000	               mov dword [rbp - 0x1c], 1	      7759	screen.c	FUNCTION_55	WHILE_1	IF_1
0xf935	            0xeb0e	                           jmp 0x400f985	      7759	screen.c	FUNCTION_55	WHILE_1	IF_1
0xf937	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7762	screen.c	FUNCTION_55	WHILE_1	ELSE_1
0xf93b	    0x480508020000	                          add rax, 0x208	      7762	screen.c	FUNCTION_55	WHILE_1	ELSE_1
0xf941	        0x488945f8	                mov qword [rbp - 8], rax	      7762	screen.c	FUNCTION_55	WHILE_1	ELSE_1
0xf945	        0x488b45f8	                mov rax, qword [rbp - 8]	      7763	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2
0xf949	          0x488b00	                    mov rax, qword [rax]	      7763	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2
0xf94c	          0x4885c0	                           test rax, rax	      7763	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2
0xf94f	     0xf84d9010000	                            je 0x400fb6e	      7763	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2
0xf955	        0x488b45f8	                mov rax, qword [rbp - 8]	      7764	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2
0xf959	    0x488b80580100	           mov rax, qword [rax + 0x158] 	      7764	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2
0xf960	          0x4885c0	                           test rax, rax	      7764	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2
0xf963	     0xf85c5010000	                           jne 0x400fb6e	      7764	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2
0xf969	        0x488b45f8	                mov rax, qword [rbp - 8]	      7765	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	CALL_1
0xf96d	          0x488b00	                    mov rax, qword [rax]	      7765	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	CALL_1
0xf970	          0x4889c7	                            mov rdi, rax	      7765	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	CALL_1
0xf973	      0xe800000000	                          call 0x400f9b8	      7765	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	CALL_1
0xf978	            0x85c0	                           test eax, eax	      7765	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	CALL_1
0xf97a	     0xf84ae010000	                            je 0x400fb6e	      7765	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	CALL_1
0xf980	        0x488b45f8	                mov rax, qword [rbp - 8]	      7767	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3
0xf984	    0x488b80680100	           mov rax, qword [rax + 0x168] 	      7767	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3
0xf98b	          0x4885c0	                           test rax, rax	      7767	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3
0xf98e	            0x757b	                           jne 0x400fa4b	      7767	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3
0xf990	        0x488b45f8	                mov rax, qword [rbp - 8]	      7770	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3	FOR_1
0xf994	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      7770	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3	FOR_1
0xf998	    0x488990680100	            mov qword [rax + 0x168], rdx	      7770	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3	FOR_1
0xf99f	            0xeb4f	                           jmp 0x400fa30	      7770	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3	FOR_1
0xf9a1	        0x488b45f8	                mov rax, qword [rbp - 8]	      7772	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3	FOR_1	IF_4	CALL_2
0xf9a5	    0x488b80680100	           mov rax, qword [rax + 0x168] 	      7772	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3	FOR_1	IF_4	CALL_2
0xf9ac	        0x488d70ff	                      lea rsi, [rax - 1]	      7772	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3	FOR_1	IF_4	CALL_2
0xf9b0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7772	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3	FOR_1	IF_4	CALL_2
0xf9b4	    0x41b900000000	                              mov r9d, 0	      7772	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3	FOR_1	IF_4	CALL_2
0xf9ba	    0x41b801000000	                              mov r8d, 1	      7772	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3	FOR_1	IF_4	CALL_2
0xf9c0	      0xb900000000	                              mov ecx, 0	      7772	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3	FOR_1	IF_4	CALL_2
0xf9c5	      0xba00000000	                              mov edx, 0	      7772	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3	FOR_1	IF_4	CALL_2
0xf9ca	          0x4889c7	                            mov rdi, rax	      7772	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3	FOR_1	IF_4	CALL_2
0xf9cd	      0xe800000000	                          call 0x400fa12	      7772	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3	FOR_1	IF_4	CALL_2
0xf9d2	            0x85c0	                           test eax, eax	      7772	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3	FOR_1	IF_4	CALL_2
0xf9d4	            0x7534	                           jne 0x400fa4a	      7772	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3	FOR_1	IF_4	CALL_2
0xf9d6	        0x488b45f8	                mov rax, qword [rbp - 8]	      7771	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3	FOR_1
0xf9da	    0x488b80680100	           mov rax, qword [rax + 0x168] 	      7771	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3	FOR_1
0xf9e1	        0x488d50ff	                      lea rdx, [rax - 1]	      7771	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3	FOR_1
0xf9e5	        0x488b45f8	                mov rax, qword [rbp - 8]	      7771	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3	FOR_1
0xf9e9	    0x488990680100	            mov qword [rax + 0x168], rdx	      7771	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3	FOR_1
0xf9f0	        0x488b45f8	                mov rax, qword [rbp - 8]	      7771	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3	FOR_1
0xf9f4	    0x488b90680100	           mov rdx, qword [rax + 0x168] 	      7771	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3	FOR_1
0xf9fb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7771	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3	FOR_1
0xf9ff	        0x488b4078	            mov rax, qword [rax + 0x78] 	      7771	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3	FOR_1
0xfa03	          0x4839c2	                            cmp rdx, rax	      7770	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3	FOR_1
0xfa06	            0x7f99	                            jg 0x400f9e1	      7770	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3	FOR_1
0xfa08	            0xeb01	                           jmp 0x400fa4b	      7770	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3	FOR_1
0xfa0a	              0x90	                                     nop	      7774	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_3	FOR_1	IF_4
0xfa0b	      0x48837df000	               cmp qword [rbp - 0x10], 0	      7779	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_5
0xfa10	            0x740e	                            je 0x400fa60	      7779	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_5
0xfa12	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7780	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_5
0xfa16	    0xc780f0010000	              mov dword [rax + 0x1f0], 0	      7780	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	IF_5
0xfa20	    0xc745e8010000	               mov dword [rbp - 0x18], 1	      7781	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2
0xfa27	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      7782	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2
0xfa2e	      0xe9c9000000	                           jmp 0x400fb3c	      7783	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2
0xfa33	    0x48817df80000	                  cmp qword [rbp - 8], 0	      7786	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	CALL_3
0xfa3b	            0x7406	                            je 0x400fa83	      7786	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	CALL_3
0xfa3d	        0x488b7df0	             mov rdi, qword [rbp - 0x10]	      7786	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	CALL_3
0xfa41	            0xeb05	                           jmp 0x400fa88	      7786	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	CALL_3
0xfa43	      0xbf00000000	                              mov edi, 0	      7786	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	CALL_3
0xfa48	        0x488b45f8	                mov rax, qword [rbp - 8]	      7786	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	CALL_3
0xfa4c	    0x488b90680100	           mov rdx, qword [rax + 0x168] 	      7786	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	CALL_3
0xfa53	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	      7786	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	CALL_3
0xfa56	        0x488b75f8	                mov rsi, qword [rbp - 8]	      7786	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	CALL_3
0xfa5a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7786	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	CALL_3
0xfa5e	          0x4989f8	                             mov r8, rdi	      7786	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	CALL_3
0xfa61	          0x4889c7	                            mov rdi, rax	      7786	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	CALL_3
0xfa64	      0xe8f9000000	                 call sym.next_search_hl	      7786	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	CALL_3
0xfa69	      0x48837df000	               cmp qword [rbp - 0x10], 0	      7789	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2
0xfa6e	            0x7415	                            je 0x400fac5	      7789	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2
0xfa70	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7788	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2
0xfa74	    0x8b80f0010000	           mov eax, dword [rax + 0x1f0] 	      7788	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2
0xfa7a	            0x85c0	                           test eax, eax	      7789	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2
0xfa7c	            0x7407	                            je 0x400fac5	      7789	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2
0xfa7e	      0xb801000000	                              mov eax, 1	      7789	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2
0xfa83	            0xeb05	                           jmp 0x400faca	      7789	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2
0xfa85	      0xb800000000	                              mov eax, 0	      7789	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2
0xfa8a	          0x8945e8	             mov dword [rbp - 0x18], eax	      7788	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2
0xfa8d	        0x488b45f8	                mov rax, qword [rbp - 8]	      7790	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	IF_6
0xfa91	    0x488b80580100	           mov rax, qword [rax + 0x158] 	      7790	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	IF_6
0xfa98	          0x4885c0	                           test rax, rax	      7790	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	IF_6
0xfa9b	            0x743e	                            je 0x400fb1b	      7790	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	IF_6
0xfa9d	        0x488b45f8	                mov rax, qword [rbp - 8]	      7792	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	IF_6
0xfaa1	    0x488b90580100	           mov rdx, qword [rax + 0x158] 	      7792	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	IF_6
0xfaa8	        0x488b45f8	                mov rax, qword [rbp - 8]	      7793	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	IF_6
0xfaac	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	      7793	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	IF_6
0xfab3	          0x4801c2	                            add rdx, rax	      7793	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	IF_6
0xfab6	        0x488b45f8	                mov rax, qword [rbp - 8]	      7794	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	IF_6
0xfaba	        0x488b4008	                mov rax, qword [rax + 8]	      7794	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	IF_6
0xfabe	          0x4829c2	                            sub rdx, rax	      7794	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	IF_6
0xfac1	        0x488b45f8	                mov rax, qword [rbp - 8]	      7792	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	IF_6
0xfac5	    0x488990680100	            mov qword [rax + 0x168], rdx	      7792	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	IF_6
0xfacc	        0x488b45f8	                mov rax, qword [rbp - 8]	      7795	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	IF_6
0xfad0	    0x8b80b0000000	            mov eax, dword [rax + 0xb0] 	      7795	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	IF_6
0xfad6	          0x8945ec	             mov dword [rbp - 0x14], eax	      7795	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	IF_6
0xfad9	            0xeb21	                           jmp 0x400fb3c	      7795	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	IF_6
0xfadb	        0x488b45f8	                mov rax, qword [rbp - 8]	      7799	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	ELSE_2
0xfadf	    0x488b80680100	           mov rax, qword [rax + 0x168] 	      7799	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	ELSE_2
0xfae6	        0x488d5001	                      lea rdx, [rax + 1]	      7799	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	ELSE_2
0xfaea	        0x488b45f8	                mov rax, qword [rbp - 8]	      7799	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	ELSE_2
0xfaee	    0x488990680100	            mov qword [rax + 0x168], rdx	      7799	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	ELSE_2
0xfaf5	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      7800	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2	ELSE_2
0xfafc	        0x488b45f8	                mov rax, qword [rbp - 8]	      7783	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2
0xfb00	    0x488b80680100	           mov rax, qword [rax + 0x168] 	      7783	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2
0xfb07	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      7783	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2
0xfb0b	            0x7d21	                           jge 0x400fb6e	      7783	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2
0xfb0d	        0x488b45f8	                mov rax, qword [rbp - 8]	      7783	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2
0xfb11	          0x488b00	                    mov rax, qword [rax]	      7783	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2
0xfb14	          0x4885c0	                           test rax, rax	      7783	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2
0xfb17	     0xf8516ffffff	                           jne 0x400fa73	      7783	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2
0xfb1d	      0x48837df000	               cmp qword [rbp - 0x10], 0	      7784	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2
0xfb22	            0x740a	                            je 0x400fb6e	      7784	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2
0xfb24	        0x837de800	               cmp dword [rbp - 0x18], 0	      7784	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2
0xfb28	     0xf8505ffffff	                           jne 0x400fa73	      7784	screen.c	FUNCTION_55	WHILE_1	ELSE_1	IF_2	WHILE_2
0xfb2e	    0x48817df80000	                  cmp qword [rbp - 8], 0	      7804	screen.c	FUNCTION_55	WHILE_1	IF_7
0xfb36	            0x7412	                            je 0x400fb8a	      7804	screen.c	FUNCTION_55	WHILE_1	IF_7
0xfb38	      0x48837df000	               cmp qword [rbp - 0x10], 0	      7804	screen.c	FUNCTION_55	WHILE_1	IF_7
0xfb3d	            0x740b	                            je 0x400fb8a	      7804	screen.c	FUNCTION_55	WHILE_1	IF_7
0xfb3f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7805	screen.c	FUNCTION_55	WHILE_1	IF_7
0xfb43	          0x488b00	                    mov rax, qword [rax]	      7805	screen.c	FUNCTION_55	WHILE_1	IF_7
0xfb46	        0x488945f0	             mov qword [rbp - 0x10], rax	      7805	screen.c	FUNCTION_55	WHILE_1	IF_7
0xfb4a	      0x48837df000	               cmp qword [rbp - 0x10], 0	      7754	screen.c	FUNCTION_55	WHILE_1
0xfb4f	     0xf85cbfdffff	                           jne 0x400f960	      7754	screen.c	FUNCTION_55	WHILE_1
0xfb55	        0x837de400	               cmp dword [rbp - 0x1c], 0	      7754	screen.c	FUNCTION_55	WHILE_1
0xfb59	     0xf84c1fdffff	                            je 0x400f960	      7754	screen.c	FUNCTION_55	WHILE_1
0xfb5f	              0x90	                                     nop	      7807	screen.c	FUNCTION_55
0xfb60	              0xc9	                                   leave	      7807	screen.c	FUNCTION_55
0xfb61	              0xc3	                                     ret	      7807	screen.c	FUNCTION_55
fillchar_vsep	DO,0:functions,0:CALL,1:ELSE,1:IF,1:WHILE,0:FOR,0:SWITCH,0	18
0x14cb3	              0x55	                                push rbp	     10718	screen.c	FUNCTION_94
0x14cb4	          0x4889e5	                            mov rbp, rsp	     10718	screen.c	FUNCTION_94
0x14cb7	        0x48897df8	                mov qword [rbp - 8], rdi	     10718	screen.c	FUNCTION_94
0x14cbb	    0x8b1500000000	            mov edx, dword [0x04014d01] 	     10719	screen.c	FUNCTION_94	CALL_1
0x14cc1	        0x488b45f8	                mov rax, qword [rbp - 8]	     10719	screen.c	FUNCTION_94	CALL_1
0x14cc5	            0x8910	                    mov dword [rax], edx	     10719	screen.c	FUNCTION_94	CALL_1
0x14cc7	        0x488b45f8	                mov rax, qword [rbp - 8]	     10720	screen.c	FUNCTION_94	IF_1
0x14ccb	            0x8b00	                    mov eax, dword [rax]	     10720	screen.c	FUNCTION_94	IF_1
0x14ccd	            0x85c0	                           test eax, eax	     10720	screen.c	FUNCTION_94	IF_1
0x14ccf	            0x7512	                           jne 0x4014d23	     10720	screen.c	FUNCTION_94	IF_1
0x14cd1	    0x8b0500000000	            mov eax, dword [0x04014d17] 	     10720	screen.c	FUNCTION_94	IF_1
0x14cd7	          0x83f820	                           cmp eax, 0x20	     10720	screen.c	FUNCTION_94	IF_1
0x14cda	            0x7507	                           jne 0x4014d23	     10720	screen.c	FUNCTION_94	IF_1
0x14cdc	      0xb87c000000	                           mov eax, 0x7c	     10721	screen.c	FUNCTION_94	IF_1
0x14ce1	            0xeb06	                           jmp 0x4014d29	     10721	screen.c	FUNCTION_94	IF_1
0x14ce3	    0x8b0500000000	            mov eax, dword [0x04014d29] 	     10723	screen.c	FUNCTION_94	ELSE_1
0x14ce9	              0x5d	                                 pop rbp	     10724	screen.c	FUNCTION_94	ELSE_1
0x14cea	              0xc3	                                     ret	     10724	screen.c	FUNCTION_94	ELSE_1
conceal_check_cursur_line	DO,0:functions,0:CALL,2:ELSE,0:IF,1:WHILE,0:FOR,0:SWITCH,0	17
0x1152	              0x55	                                push rbp	       904	screen.c	FUNCTION_16
0x1153	          0x4889e5	                            mov rbp, rsp	       904	screen.c	FUNCTION_16
0x1156	    0x488b05000000	            mov rax, qword [0x0400119d] 	       905	screen.c	FUNCTION_16	IF_1	CALL_1
0x115d	    0x488b80a80200	           mov rax, qword [rax + 0x2a8] 	       905	screen.c	FUNCTION_16	IF_1	CALL_1
0x1164	          0x4885c0	                           test rax, rax	       905	screen.c	FUNCTION_16	IF_1	CALL_1
0x1167	            0x7e27	                           jle 0x40011d0	       905	screen.c	FUNCTION_16	IF_1	CALL_1
0x1169	    0x488b05000000	            mov rax, qword [0x040011b0] 	       905	screen.c	FUNCTION_16	IF_1	CALL_1
0x1170	          0x4889c7	                            mov rdi, rax	       905	screen.c	FUNCTION_16	IF_1	CALL_1
0x1173	      0xe800000000	                          call 0x40011b8	       905	screen.c	FUNCTION_16	IF_1	CALL_1
0x1178	            0x85c0	                           test eax, eax	       905	screen.c	FUNCTION_16	IF_1	CALL_1
0x117a	            0x7414	                            je 0x40011d0	       905	screen.c	FUNCTION_16	IF_1	CALL_1
0x117c	    0xc70500000000	               mov dword [0x040011c6], 1	       907	screen.c	FUNCTION_16	IF_1
0x1186	      0xbf01000000	                              mov edi, 1	       910	screen.c	FUNCTION_16	IF_1	CALL_2
0x118b	      0xe800000000	                          call 0x40011d0	       910	screen.c	FUNCTION_16	IF_1	CALL_2
0x1190	              0x90	                                     nop	       912	screen.c	FUNCTION_16
0x1191	              0x5d	                                 pop rbp	       912	screen.c	FUNCTION_16
0x1192	              0xc3	                                     ret	       912	screen.c	FUNCTION_16
next_search_hl	DO,0:functions,0:CALL,8:ELSE,6:IF,15:WHILE,0:FOR,1:SWITCH,0	238
0xfb62	              0x55	                                push rbp	      7824	screen.c	FUNCTION_56
0xfb63	          0x4889e5	                            mov rbp, rsp	      7824	screen.c	FUNCTION_56
0xfb66	        0x4883ec60	                           sub rsp, 0x60	      7824	screen.c	FUNCTION_56
0xfb6a	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      7824	screen.c	FUNCTION_56
0xfb6e	        0x488975c0	             mov qword [rbp - 0x40], rsi	      7824	screen.c	FUNCTION_56
0xfb72	        0x488955b8	             mov qword [rbp - 0x48], rdx	      7824	screen.c	FUNCTION_56
0xfb76	          0x894db4	             mov dword [rbp - 0x4c], ecx	      7824	screen.c	FUNCTION_56
0xfb79	        0x4c8945a8	              mov qword [rbp - 0x58], r8	      7824	screen.c	FUNCTION_56
0xfb7d	    0x64488b042528	                mov rax, qword fs:[0x28]	      7824	screen.c	FUNCTION_56
0xfb86	        0x488945f8	                mov qword [rbp - 8], rax	      7824	screen.c	FUNCTION_56
0xfb8a	            0x31c0	                            xor eax, eax	      7824	screen.c	FUNCTION_56
0xfb8c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7829	screen.c	FUNCTION_56	IF_1
0xfb90	    0x488b80580100	           mov rax, qword [rax + 0x158] 	      7829	screen.c	FUNCTION_56	IF_1
0xfb97	          0x4885c0	                           test rax, rax	      7829	screen.c	FUNCTION_56	IF_1
0xfb9a	            0x7467	                            je 0x400fc43	      7829	screen.c	FUNCTION_56	IF_1
0xfb9c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7836	screen.c	FUNCTION_56	IF_1
0xfba0	    0x488b90580100	           mov rdx, qword [rax + 0x158] 	      7836	screen.c	FUNCTION_56	IF_1
0xfba7	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7836	screen.c	FUNCTION_56	IF_1
0xfbab	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	      7836	screen.c	FUNCTION_56	IF_1
0xfbb2	          0x4801c2	                            add rdx, rax	      7836	screen.c	FUNCTION_56	IF_1
0xfbb5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7836	screen.c	FUNCTION_56	IF_1
0xfbb9	        0x488b4008	                mov rax, qword [rax + 8]	      7836	screen.c	FUNCTION_56	IF_1
0xfbbd	          0x4829c2	                            sub rdx, rax	      7836	screen.c	FUNCTION_56	IF_1
0xfbc0	          0x4889d0	                            mov rax, rdx	      7836	screen.c	FUNCTION_56	IF_1
0xfbc3	        0x488945e8	             mov qword [rbp - 0x18], rax	      7836	screen.c	FUNCTION_56	IF_1
0xfbc7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7837	screen.c	FUNCTION_56	IF_1	IF_2
0xfbcb	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      7837	screen.c	FUNCTION_56	IF_1	IF_2
0xfbcf	            0x7e11	                           jle 0x400fc22	      7837	screen.c	FUNCTION_56	IF_1	IF_2
0xfbd1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7838	screen.c	FUNCTION_56	IF_1	IF_2
0xfbd5	    0x48c780580100	              mov qword [rax + 0x158], 0	      7838	screen.c	FUNCTION_56	IF_1	IF_2
0xfbe0	            0xeb21	                           jmp 0x400fc43	      7838	screen.c	FUNCTION_56	IF_1	IF_2
0xfbe2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7839	screen.c	FUNCTION_56	IF_1	ELSE_1	IF_3
0xfbe6	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      7839	screen.c	FUNCTION_56	IF_1	ELSE_1	IF_3
0xfbea	     0xf8c3e030000	                            jl 0x400ff6e	      7839	screen.c	FUNCTION_56	IF_1	ELSE_1	IF_3
0xfbf0	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7839	screen.c	FUNCTION_56	IF_1	ELSE_1	IF_3
0xfbf4	    0x8b80b0000000	            mov eax, dword [rax + 0xb0] 	      7839	screen.c	FUNCTION_56	IF_1	ELSE_1	IF_3
0xfbfa	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	      7839	screen.c	FUNCTION_56	IF_1	ELSE_1	IF_3
0xfbfd	     0xf8f2b030000	                            jg 0x400ff6e	      7839	screen.c	FUNCTION_56	IF_1	ELSE_1	IF_3
0xfc03	    0xc70500000000	               mov dword [0x0400fc4d], 0	      7847	screen.c	FUNCTION_56
0xfc0d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7852	screen.c	FUNCTION_56	FOR_1	IF_4	CALL_1
0xfc11	    0x480580010000	                          add rax, 0x180	      7852	screen.c	FUNCTION_56	FOR_1	IF_4	CALL_1
0xfc17	          0x4889c7	                            mov rdi, rax	      7852	screen.c	FUNCTION_56	FOR_1	IF_4	CALL_1
0xfc1a	      0xe800000000	                          call 0x400fc5f	      7852	screen.c	FUNCTION_56	FOR_1	IF_4	CALL_1
0xfc1f	            0x85c0	                           test eax, eax	      7852	screen.c	FUNCTION_56	FOR_1	IF_4	CALL_1
0xfc21	            0x7414	                            je 0x400fc77	      7852	screen.c	FUNCTION_56	FOR_1	IF_4	CALL_1
0xfc23	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7854	screen.c	FUNCTION_56	FOR_1	IF_4
0xfc27	    0x48c780580100	              mov qword [rax + 0x158], 0	      7854	screen.c	FUNCTION_56	FOR_1	IF_4
0xfc32	      0xe9f8020000	                           jmp 0x400ff6f	      7855	screen.c	FUNCTION_56	FOR_1	IF_4
0xfc37	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7864	screen.c	FUNCTION_56	FOR_1	IF_5
0xfc3b	    0x488b80580100	           mov rax, qword [rax + 0x158] 	      7864	screen.c	FUNCTION_56	FOR_1	IF_5
0xfc42	          0x4885c0	                           test rax, rax	      7864	screen.c	FUNCTION_56	FOR_1	IF_5
0xfc45	            0x750c	                           jne 0x400fc93	      7864	screen.c	FUNCTION_56	FOR_1	IF_5
0xfc47	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      7865	screen.c	FUNCTION_56	FOR_1	IF_5
0xfc4e	      0xe9d3000000	                           jmp 0x400fd66	      7865	screen.c	FUNCTION_56	FOR_1	IF_5
0xfc53	    0x488b05000000	            mov rax, qword [0x0400fc9a] 	      7866	screen.c	FUNCTION_56	FOR_1	ELSE_2	IF_6	CALL_2
0xfc5a	      0xbe63000000	                           mov esi, 0x63	      7866	screen.c	FUNCTION_56	FOR_1	ELSE_2	IF_6	CALL_2
0xfc5f	          0x4889c7	                            mov rdi, rax	      7866	screen.c	FUNCTION_56	FOR_1	ELSE_2	IF_6	CALL_2
0xfc62	      0xe800000000	                          call 0x400fca7	      7866	screen.c	FUNCTION_56	FOR_1	ELSE_2	IF_6	CALL_2
0xfc67	          0x4885c0	                           test rax, rax	      7866	screen.c	FUNCTION_56	FOR_1	ELSE_2	IF_6	CALL_2
0xfc6a	            0x742d	                            je 0x400fcd9	      7866	screen.c	FUNCTION_56	FOR_1	ELSE_2	IF_6	CALL_2
0xfc6c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7867	screen.c	FUNCTION_56	FOR_1	ELSE_2	IF_6
0xfc70	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	      7867	screen.c	FUNCTION_56	FOR_1	ELSE_2	IF_6
0xfc77	          0x4885c0	                           test rax, rax	      7867	screen.c	FUNCTION_56	FOR_1	ELSE_2	IF_6
0xfc7a	     0xf8599000000	                           jne 0x400fd59	      7867	screen.c	FUNCTION_56	FOR_1	ELSE_2	IF_6
0xfc80	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7868	screen.c	FUNCTION_56	FOR_1	ELSE_2	IF_6
0xfc84	    0x8b90b0000000	            mov edx, dword [rax + 0xb0] 	      7868	screen.c	FUNCTION_56	FOR_1	ELSE_2	IF_6
0xfc8a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7868	screen.c	FUNCTION_56	FOR_1	ELSE_2	IF_6
0xfc8e	          0x8b4010	            mov eax, dword [rax + 0x10] 	      7868	screen.c	FUNCTION_56	FOR_1	ELSE_2	IF_6
0xfc91	            0x39c2	                            cmp edx, eax	      7868	screen.c	FUNCTION_56	FOR_1	ELSE_2	IF_6
0xfc93	     0xf8f80000000	                            jg 0x400fd59	      7868	screen.c	FUNCTION_56	FOR_1	ELSE_2	IF_6
0xfc99	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7872	screen.c	FUNCTION_56	FOR_1	ELSE_2	IF_6
0xfc9d	          0x8b4010	            mov eax, dword [rax + 0x10] 	      7872	screen.c	FUNCTION_56	FOR_1	ELSE_2	IF_6
0xfca0	          0x8945d8	             mov dword [rbp - 0x28], eax	      7872	screen.c	FUNCTION_56	FOR_1	ELSE_2	IF_6
0xfca3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7873	screen.c	FUNCTION_56	FOR_1	ELSE_2	IF_6	CALL_3
0xfca7	    0x488b80500100	           mov rax, qword [rax + 0x150] 	      7873	screen.c	FUNCTION_56	FOR_1	ELSE_2	IF_6	CALL_3
0xfcae	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	      7873	screen.c	FUNCTION_56	FOR_1	ELSE_2	IF_6	CALL_3
0xfcb2	      0xba00000000	                              mov edx, 0	      7873	screen.c	FUNCTION_56	FOR_1	ELSE_2	IF_6	CALL_3
0xfcb7	          0x4889ce	                            mov rsi, rcx	      7873	screen.c	FUNCTION_56	FOR_1	ELSE_2	IF_6	CALL_3
0xfcba	          0x4889c7	                            mov rdi, rax	      7873	screen.c	FUNCTION_56	FOR_1	ELSE_2	IF_6	CALL_3
0xfcbd	      0xe800000000	                          call 0x400fd02	      7873	screen.c	FUNCTION_56	FOR_1	ELSE_2	IF_6	CALL_3
0xfcc2	          0x4889c2	                            mov rdx, rax	      7873	screen.c	FUNCTION_56	FOR_1	ELSE_2	IF_6	CALL_3
0xfcc5	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      7873	screen.c	FUNCTION_56	FOR_1	ELSE_2	IF_6	CALL_3
0xfcc8	            0x4898	                                    cdqe	      7873	screen.c	FUNCTION_56	FOR_1	ELSE_2	IF_6	CALL_3
0xfcca	          0x4801d0	                            add rax, rdx	      7873	screen.c	FUNCTION_56	FOR_1	ELSE_2	IF_6	CALL_3
0xfccd	        0x488945f0	             mov qword [rbp - 0x10], rax	      7873	screen.c	FUNCTION_56	FOR_1	ELSE_2	IF_6	CALL_3
0xfcd1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7874	screen.c	FUNCTION_56	FOR_1	ELSE_2	IF_6	IF_7
0xfcd5	           0xfb600	                   movzx eax, byte [rax]	      7874	screen.c	FUNCTION_56	FOR_1	ELSE_2	IF_6	IF_7
0xfcd8	            0x84c0	                             test al, al	      7874	screen.c	FUNCTION_56	FOR_1	ELSE_2	IF_6	IF_7
0xfcda	            0x7518	                           jne 0x400fd34	      7874	screen.c	FUNCTION_56	FOR_1	ELSE_2	IF_6	IF_7
0xfcdc	        0x8345d801	               add dword [rbp - 0x28], 1	      7876	screen.c	FUNCTION_56	FOR_1	ELSE_2	IF_6	IF_7
0xfce0	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7877	screen.c	FUNCTION_56	FOR_1	ELSE_2	IF_6	IF_7
0xfce4	    0x48c780580100	              mov qword [rax + 0x158], 0	      7877	screen.c	FUNCTION_56	FOR_1	ELSE_2	IF_6	IF_7
0xfcef	      0xe93b020000	                           jmp 0x400ff6f	      7878	screen.c	FUNCTION_56	FOR_1	ELSE_2	IF_6	IF_7
0xfcf4	    0x8b0500000000	            mov eax, dword [0x0400fd3a] 	      7881	screen.c	FUNCTION_56	FOR_1	ELSE_2	IF_6	IF_8
0xfcfa	            0x85c0	                           test eax, eax	      7881	screen.c	FUNCTION_56	FOR_1	ELSE_2	IF_6	IF_8
0xfcfc	            0x7415	                            je 0x400fd53	      7881	screen.c	FUNCTION_56	FOR_1	ELSE_2	IF_6	IF_8
0xfcfe	    0x488b05000000	            mov rax, qword [0x0400fd45] 	      7882	screen.c	FUNCTION_56	FOR_1	ELSE_2	IF_6	CALL_4
0xfd05	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      7882	screen.c	FUNCTION_56	FOR_1	ELSE_2	IF_6	CALL_4
0xfd09	          0x4889d7	                            mov rdi, rdx	      7882	screen.c	FUNCTION_56	FOR_1	ELSE_2	IF_6	CALL_4
0xfd0c	            0xffd0	                                call rax	      7882	screen.c	FUNCTION_56	FOR_1	ELSE_2	IF_6	CALL_4
0xfd0e	           0x145d8	             add dword [rbp - 0x28], eax	      7882	screen.c	FUNCTION_56	FOR_1	ELSE_2	IF_6	CALL_4
0xfd11	            0xeb13	                           jmp 0x400fd66	      7869	screen.c	FUNCTION_56	FOR_1	ELSE_2	IF_6
0xfd13	        0x8345d801	               add dword [rbp - 0x28], 1	      7885	screen.c	FUNCTION_56	FOR_1	ELSE_2	IF_6	ELSE_3
0xfd17	            0xeb0d	                           jmp 0x400fd66	      7869	screen.c	FUNCTION_56	FOR_1	ELSE_2	IF_6
0xfd19	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7888	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4
0xfd1d	    0x8b80b0000000	            mov eax, dword [rax + 0xb0] 	      7888	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4
0xfd23	          0x8945d8	             mov dword [rbp - 0x28], eax	      7888	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4
0xfd26	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7890	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4
0xfd2a	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      7890	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4
0xfd2e	    0x488990580100	            mov qword [rax + 0x158], rdx	      7890	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4
0xfd35	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7891	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9
0xfd39	          0x488b00	                    mov rax, qword [rax]	      7891	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9
0xfd3c	          0x4885c0	                           test rax, rax	      7891	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9
0xfd3f	     0xf8441010000	                            je 0x400fec6	      7891	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9
0xfd45	    0x48817dc00000	               cmp qword [rbp - 0x40], 0	      7897	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9
0xfd4d	            0x7436	                            je 0x400fdc5	      7897	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9
0xfd4f	      0x48837da800	               cmp qword [rbp - 0x58], 0	      7895	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9
0xfd54	            0x742f	                            je 0x400fdc5	      7895	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9
0xfd56	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      7896	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9
0xfd5a	    0x480508020000	                          add rax, 0x208	      7896	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9
0xfd60	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      7896	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9
0xfd64	            0x751f	                           jne 0x400fdc5	      7896	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9
0xfd66	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      7897	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9
0xfd6a	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      7897	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9
0xfd6e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      7897	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9
0xfd72	    0x488b80080200	           mov rax, qword [rax + 0x208] 	      7897	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9
0xfd79	          0x4839c2	                            cmp rdx, rax	      7897	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9
0xfd7c	            0x7507	                           jne 0x400fdc5	      7897	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9
0xfd7e	      0xb801000000	                              mov eax, 1	      7897	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9
0xfd83	            0xeb05	                           jmp 0x400fdca	      7897	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9
0xfd85	      0xb800000000	                              mov eax, 0	      7897	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9
0xfd8a	          0x8945dc	             mov dword [rbp - 0x24], eax	      7895	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9
0xfd8d	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      7898	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9
0xfd94	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7900	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	CALL_5
0xfd98	    0x4c8d88800100	                   lea r9, [rax + 0x180]	      7900	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	CALL_5
0xfd9f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7900	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	CALL_5
0xfda3	    0x488b90500100	           mov rdx, qword [rax + 0x150] 	      7900	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	CALL_5
0xfdaa	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7900	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	CALL_5
0xfdae	        0x448b45d8	             mov r8d, dword [rbp - 0x28]	      7900	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	CALL_5
0xfdb2	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	      7900	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	CALL_5
0xfdb6	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	      7900	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	CALL_5
0xfdba	        0x4883ec08	                              sub rsp, 8	      7900	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	CALL_5
0xfdbe	        0x488d7dd4	                   lea rdi, [rbp - 0x2c]	      7900	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	CALL_5
0xfdc2	              0x57	                                push rdi	      7900	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	CALL_5
0xfdc3	          0x4889c7	                            mov rdi, rax	      7900	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	CALL_5
0xfdc6	      0xe800000000	                          call 0x400fe0b	      7900	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	CALL_5
0xfdcb	        0x4883c410	                           add rsp, 0x10	      7900	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	CALL_5
0xfdcf	        0x488945e0	             mov qword [rbp - 0x20], rax	      7900	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	CALL_5
0xfdd3	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      7909	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	IF_10
0xfdd7	            0x7413	                            je 0x400fe2c	      7909	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	IF_10
0xfdd9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      7910	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	IF_10
0xfddd	    0x488b90080200	           mov rdx, qword [rax + 0x208] 	      7910	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	IF_10
0xfde4	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      7910	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	IF_10
0xfde8	        0x48895020	             mov qword [rax + 0x20], rdx	      7910	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	IF_10
0xfdec	    0x8b0500000000	            mov eax, dword [0x0400fe32] 	      7912	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	IF_11
0xfdf2	            0x85c0	                           test eax, eax	      7912	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	IF_11
0xfdf4	            0x7515	                           jne 0x400fe4b	      7912	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	IF_11
0xfdf6	    0x8b0500000000	            mov eax, dword [0x0400fe3c] 	      7912	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	IF_11
0xfdfc	            0x85c0	                           test eax, eax	      7912	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	IF_11
0xfdfe	            0x750b	                           jne 0x400fe4b	      7912	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	IF_11
0xfe00	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      7912	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	IF_11
0xfe03	            0x85c0	                           test eax, eax	      7912	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	IF_11
0xfe05	     0xf84b5000000	                            je 0x400ff00	      7912	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	IF_11
0xfe0b	    0x48817dc00000	               cmp qword [rbp - 0x40], 0	      7915	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	IF_11	IF_12
0xfe13	            0x7548	                           jne 0x400fe9d	      7915	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	IF_11	IF_12
0xfe15	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7918	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	IF_11	IF_12	CALL_6
0xfe19	          0x488b00	                    mov rax, qword [rax]	      7918	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	IF_11	IF_12	CALL_6
0xfe1c	          0x4889c7	                            mov rdi, rax	      7918	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	IF_11	IF_12	CALL_6
0xfe1f	      0xe800000000	                          call 0x400fe64	      7918	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	IF_11	IF_12	CALL_6
0xfe24	    0xc70500000000	               mov dword [0x0400fe6e], 1	      7919	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	IF_11	IF_12	CALL_7
0xfe2e	    0x8b0500000000	            mov eax, dword [0x0400fe74] 	      7919	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	IF_11	IF_12	CALL_7
0xfe34	            0x85c0	                           test eax, eax	      7919	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	IF_11	IF_12	CALL_7
0xfe36	            0x7511	                           jne 0x400fe89	      7919	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	IF_11	IF_12	CALL_7
0xfe38	    0x8b0500000000	            mov eax, dword [0x0400fe7e] 	      7919	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	IF_11	IF_12	CALL_7
0xfe3e	            0x85c0	                           test eax, eax	      7919	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	IF_11	IF_12	CALL_7
0xfe40	            0x7407	                            je 0x400fe89	      7919	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	IF_11	IF_12	CALL_7
0xfe42	      0xb801000000	                              mov eax, 1	      7919	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	IF_11	IF_12	CALL_7
0xfe47	            0xeb05	                           jmp 0x400fe8e	      7919	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	IF_11	IF_12	CALL_7
0xfe49	      0xb800000000	                              mov eax, 0	      7919	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	IF_11	IF_12	CALL_7
0xfe4e	            0x4898	                                    cdqe	      7919	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	IF_11	IF_12	CALL_7
0xfe50	          0x4889c6	                            mov rsi, rax	      7919	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	IF_11	IF_12	CALL_7
0xfe53	      0xbf38000000	                           mov edi, 0x38	      7919	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	IF_11	IF_12	CALL_7
0xfe58	      0xe800000000	                          call 0x400fe9d	      7919	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	IF_11	IF_12	CALL_7
0xfe5d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7921	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	IF_11
0xfe61	    0x48c700000000	                      mov qword [rax], 0	      7921	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	IF_11
0xfe68	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7922	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	IF_11
0xfe6c	    0x48c780580100	              mov qword [rax + 0x158], 0	      7922	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	IF_11
0xfe77	    0xc70500000000	               mov dword [0x0400fec1], 0	      7923	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	IF_11
0xfe81	      0xe9a9000000	                           jmp 0x400ff6f	      7923	screen.c	FUNCTION_56	FOR_1	ELSE_3	ELSE_4	IF_9	IF_11
0xfe86	      0x48837da800	               cmp qword [rbp - 0x58], 0	      7928	screen.c	FUNCTION_56	FOR_1	ELSE_5	IF_13
0xfe8b	            0x742b	                            je 0x400fef8	      7928	screen.c	FUNCTION_56	FOR_1	ELSE_5	IF_13
0xfe8d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      7929	screen.c	FUNCTION_56	FOR_1	ELSE_5	IF_13
0xfe91	    0x488db8700100	                  lea rdi, [rax + 0x170]	      7929	screen.c	FUNCTION_56	FOR_1	ELSE_5	IF_13
0xfe98	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      7929	screen.c	FUNCTION_56	FOR_1	ELSE_5	IF_13
0xfe9b	        0x488b75b8	             mov rsi, qword [rbp - 0x48]	      7929	screen.c	FUNCTION_56	FOR_1	ELSE_5	IF_13
0xfe9f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7929	screen.c	FUNCTION_56	FOR_1	ELSE_5	IF_13
0xfea3	            0x89d1	                            mov ecx, edx	      7929	screen.c	FUNCTION_56	FOR_1	ELSE_5	IF_13
0xfea5	          0x4889fa	                            mov rdx, rdi	      7929	screen.c	FUNCTION_56	FOR_1	ELSE_5	IF_13
0xfea8	          0x4889c7	                            mov rdi, rax	      7929	screen.c	FUNCTION_56	FOR_1	ELSE_5	IF_13
0xfeab	      0xe895000000	             call sym.next_search_hl_pos	      7929	screen.c	FUNCTION_56	FOR_1	ELSE_5	IF_13
0xfeb0	            0x4898	                                    cdqe	      7929	screen.c	FUNCTION_56	FOR_1	ELSE_5	IF_13
0xfeb2	        0x488945e0	             mov qword [rbp - 0x20], rax	      7929	screen.c	FUNCTION_56	FOR_1	ELSE_5	IF_13
0xfeb6	            0xeb08	                           jmp 0x400ff00	      7929	screen.c	FUNCTION_56	FOR_1	ELSE_5	IF_13
0xfeb8	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      7931	screen.c	FUNCTION_56	FOR_1	ELSE_6
0xfec0	      0x48837de000	               cmp qword [rbp - 0x20], 0	      7932	screen.c	FUNCTION_56	FOR_1	ELSE_6	IF_14
0xfec5	            0x7511	                           jne 0x400ff18	      7932	screen.c	FUNCTION_56	FOR_1	ELSE_6	IF_14
0xfec7	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7934	screen.c	FUNCTION_56	FOR_1	ELSE_6	IF_14
0xfecb	    0x48c780580100	              mov qword [rax + 0x158], 0	      7934	screen.c	FUNCTION_56	FOR_1	ELSE_6	IF_14
0xfed6	            0xeb57	                           jmp 0x400ff6f	      7935	screen.c	FUNCTION_56	FOR_1	ELSE_6	IF_14
0xfed8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7937	screen.c	FUNCTION_56	FOR_1	IF_15
0xfedc	        0x488b4008	                mov rax, qword [rax + 8]	      7937	screen.c	FUNCTION_56	FOR_1	IF_15
0xfee0	          0x4885c0	                           test rax, rax	      7937	screen.c	FUNCTION_56	FOR_1	IF_15
0xfee3	            0x7f26	                            jg 0x400ff4b	      7937	screen.c	FUNCTION_56	FOR_1	IF_15
0xfee5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7938	screen.c	FUNCTION_56	FOR_1	IF_15
0xfee9	          0x8b4010	            mov eax, dword [rax + 0x10] 	      7938	screen.c	FUNCTION_56	FOR_1	IF_15
0xfeec	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	      7938	screen.c	FUNCTION_56	FOR_1	IF_15
0xfeef	            0x7d1a	                           jge 0x400ff4b	      7938	screen.c	FUNCTION_56	FOR_1	IF_15
0xfef1	      0x48837de001	               cmp qword [rbp - 0x20], 1	      7939	screen.c	FUNCTION_56	FOR_1	IF_15
0xfef6	            0x7f13	                            jg 0x400ff4b	      7939	screen.c	FUNCTION_56	FOR_1	IF_15
0xfef8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7940	screen.c	FUNCTION_56	FOR_1	IF_15
0xfefc	    0x8b80b0000000	            mov eax, dword [rax + 0xb0] 	      7940	screen.c	FUNCTION_56	FOR_1	IF_15
0xff02	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	      7940	screen.c	FUNCTION_56	FOR_1	IF_15
0xff05	     0xf8e02fdffff	                           jle 0x400fc4d	      7940	screen.c	FUNCTION_56	FOR_1	IF_15
0xff0b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7942	screen.c	FUNCTION_56	FOR_1	IF_15
0xff0f	    0x488b90580100	           mov rdx, qword [rax + 0x158] 	      7942	screen.c	FUNCTION_56	FOR_1	IF_15
0xff16	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7942	screen.c	FUNCTION_56	FOR_1	IF_15
0xff1a	        0x488b4008	                mov rax, qword [rax + 8]	      7942	screen.c	FUNCTION_56	FOR_1	IF_15
0xff1e	          0x4801c2	                            add rdx, rax	      7942	screen.c	FUNCTION_56	FOR_1	IF_15
0xff21	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7942	screen.c	FUNCTION_56	FOR_1	IF_15
0xff25	    0x488990580100	            mov qword [rax + 0x158], rdx	      7942	screen.c	FUNCTION_56	FOR_1	IF_15
0xff2c	            0xeb01	                           jmp 0x400ff6f	      7943	screen.c	FUNCTION_56	FOR_1	IF_15
0xff2e	              0x90	                                     nop	      7840	screen.c	FUNCTION_56	IF_1	ELSE_1	IF_3
0xff2f	        0x488b45f8	                mov rax, qword [rbp - 8]	      7946	screen.c	FUNCTION_56
0xff33	    0x644833042528	                xor rax, qword fs:[0x28]	      7946	screen.c	FUNCTION_56
0xff3c	            0x7405	                            je 0x400ff83	      7946	screen.c	FUNCTION_56
0xff3e	      0xe800000000	                          call 0x400ff83	      7946	screen.c	FUNCTION_56
0xff43	              0xc9	                                   leave	      7946	screen.c	FUNCTION_56
0xff44	              0xc3	                                     ret	      7946	screen.c	FUNCTION_56
redraw_custom_statusline	DO,0:functions,0:CALL,2:ELSE,0:IF,2:WHILE,0:FOR,0:SWITCH,0	40
0xdeca	              0x55	                                push rbp	      6987	screen.c	FUNCTION_43
0xdecb	          0x4889e5	                            mov rbp, rsp	      6987	screen.c	FUNCTION_43
0xdece	        0x4883ec20	                           sub rsp, 0x20	      6987	screen.c	FUNCTION_43
0xded2	        0x48897de8	             mov qword [rbp - 0x18], rdi	      6987	screen.c	FUNCTION_43
0xded6	    0x8b0500000000	            mov eax, dword [0x0400df1c] 	      6989	screen.c	FUNCTION_43
0xdedc	          0x8945fc	                mov dword [rbp - 4], eax	      6989	screen.c	FUNCTION_43
0xdedf	    0x8b0500000000	            mov eax, dword [0x0400df25] 	      6993	screen.c	FUNCTION_43	IF_1
0xdee5	            0x85c0	                           test eax, eax	      6993	screen.c	FUNCTION_43	IF_1
0xdee7	     0xf8584000000	                           jne 0x400dfb1	      6993	screen.c	FUNCTION_43	IF_1
0xdeed	    0xc70500000000	               mov dword [0x0400df37], 1	      6995	screen.c	FUNCTION_43
0xdef7	    0xc70500000000	               mov dword [0x0400df41], 0	      6997	screen.c	FUNCTION_43
0xdf01	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6998	screen.c	FUNCTION_43	CALL_1
0xdf05	      0xbe00000000	                              mov esi, 0	      6998	screen.c	FUNCTION_43	CALL_1
0xdf0a	          0x4889c7	                            mov rdi, rax	      6998	screen.c	FUNCTION_43	CALL_1
0xdf0d	      0xe839020000	                call sym.win_redr_custom	      6998	screen.c	FUNCTION_43	CALL_1
0xdf12	    0x8b0500000000	            mov eax, dword [0x0400df58] 	      6999	screen.c	FUNCTION_43	IF_2
0xdf18	            0x85c0	                           test eax, eax	      6999	screen.c	FUNCTION_43	IF_2
0xdf1a	            0x743a	                            je 0x400df96	      6999	screen.c	FUNCTION_43	IF_2
0xdf1c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7005	screen.c	FUNCTION_43	IF_2
0xdf20	    0x488b80800200	           mov rax, qword [rax + 0x280] 	      7005	screen.c	FUNCTION_43	IF_2
0xdf27	           0xfb600	                   movzx eax, byte [rax]	      7005	screen.c	FUNCTION_43	IF_2
0xdf2a	            0x84c0	                             test al, al	      7004	screen.c	FUNCTION_43	IF_2	CALL_2
0xdf2c	            0x7407	                            je 0x400df75	      7004	screen.c	FUNCTION_43	IF_2	CALL_2
0xdf2e	      0xb805000000	                              mov eax, 5	      7004	screen.c	FUNCTION_43	IF_2	CALL_2
0xdf33	            0xeb05	                           jmp 0x400df7a	      7004	screen.c	FUNCTION_43	IF_2	CALL_2
0xdf35	      0xb803000000	                              mov eax, 3	      7004	screen.c	FUNCTION_43	IF_2	CALL_2
0xdf3a	    0x41b8fbffffff	                     mov r8d, 0xfffffffb	      7004	screen.c	FUNCTION_43	IF_2	CALL_2
0xdf40	            0x89c1	                            mov ecx, eax	      7004	screen.c	FUNCTION_43	IF_2	CALL_2
0xdf42	      0xba00000000	                              mov edx, 0	      7004	screen.c	FUNCTION_43	IF_2	CALL_2
0xdf47	      0xbeffffffff	                     mov esi, 0xffffffff	      7004	screen.c	FUNCTION_43	IF_2	CALL_2
0xdf4c	      0xbf00000000	                              mov edi, 0	      7004	screen.c	FUNCTION_43	IF_2	CALL_2
0xdf51	      0xe800000000	                          call 0x400df96	      7004	screen.c	FUNCTION_43	IF_2	CALL_2
0xdf56	    0x8b0500000000	            mov eax, dword [0x0400df9c] 	      7008	screen.c	FUNCTION_43
0xdf5c	           0xb45fc	                 or eax, dword [rbp - 4]	      7008	screen.c	FUNCTION_43
0xdf5f	    0x890500000000	            mov dword [0x0400dfa5], eax 	      7008	screen.c	FUNCTION_43
0xdf65	    0xc70500000000	               mov dword [0x0400dfaf], 0	      7009	screen.c	FUNCTION_43
0xdf6f	            0xeb01	                           jmp 0x400dfb2	      7009	screen.c	FUNCTION_43
0xdf71	              0x90	                                     nop	      6994	screen.c	FUNCTION_43	IF_1
0xdf72	              0xc9	                                   leave	      7010	screen.c	FUNCTION_43
0xdf73	              0xc3	                                     ret	      7010	screen.c	FUNCTION_43
win_do_lines	DO,0:functions,0:CALL,12:ELSE,1:IF,11:WHILE,0:FOR,0:SWITCH,0	188
0x12f78	              0x55	                                push rbp	      9626	screen.c	ELSE_1	FUNCTION_82
0x12f79	          0x4889e5	                            mov rbp, rsp	      9626	screen.c	ELSE_1	FUNCTION_82
0x12f7c	        0x4883ec30	                           sub rsp, 0x30	      9626	screen.c	ELSE_1	FUNCTION_82
0x12f80	        0x48897de8	             mov qword [rbp - 0x18], rdi	      9626	screen.c	ELSE_1	FUNCTION_82
0x12f84	          0x8975e4	             mov dword [rbp - 0x1c], esi	      9626	screen.c	ELSE_1	FUNCTION_82
0x12f87	          0x8955e0	             mov dword [rbp - 0x20], edx	      9626	screen.c	ELSE_1	FUNCTION_82
0x12f8a	          0x894ddc	             mov dword [rbp - 0x24], ecx	      9626	screen.c	ELSE_1	FUNCTION_82
0x12f8d	        0x448945d8	             mov dword [rbp - 0x28], r8d	      9626	screen.c	ELSE_1	FUNCTION_82
0x12f91	        0x44894dd4	             mov dword [rbp - 0x2c], r9d	      9626	screen.c	ELSE_1	FUNCTION_82
0x12f95	      0xe800000000	                          call 0x4012fda	      9629	screen.c	ELSE_1	FUNCTION_82	IF_1	CALL_1
0x12f9a	            0x85c0	                           test eax, eax	      9629	screen.c	ELSE_1	FUNCTION_82	IF_1	CALL_1
0x12f9c	            0x7406	                            je 0x4012fe4	      9629	screen.c	ELSE_1	FUNCTION_82	IF_1	CALL_1
0x12f9e	        0x837de000	               cmp dword [rbp - 0x20], 0	      9629	screen.c	ELSE_1	FUNCTION_82	IF_1	CALL_1
0x12fa2	            0x7f0a	                            jg 0x4012fee	      9629	screen.c	ELSE_1	FUNCTION_82	IF_1	CALL_1
0x12fa4	      0xb800000000	                              mov eax, 0	      9630	screen.c	ELSE_1	FUNCTION_82	IF_1
0x12fa9	      0xe98e020000	                           jmp 0x401327c	      9630	screen.c	ELSE_1	FUNCTION_82	IF_1
0x12fae	    0x8b0500000000	            mov eax, dword [0x04012ff4] 	      9634	screen.c	ELSE_1	FUNCTION_82	IF_2
0x12fb4	            0x85c0	                           test eax, eax	      9634	screen.c	ELSE_1	FUNCTION_82	IF_2
0x12fb6	            0x7410	                            je 0x4013008	      9634	screen.c	ELSE_1	FUNCTION_82	IF_2
0x12fb8	        0x837dd800	               cmp dword [rbp - 0x28], 0	      9634	screen.c	ELSE_1	FUNCTION_82	IF_2
0x12fbc	            0x750a	                           jne 0x4013008	      9634	screen.c	ELSE_1	FUNCTION_82	IF_2
0x12fbe	      0xb800000000	                              mov eax, 0	      9635	screen.c	ELSE_1	FUNCTION_82	IF_2
0x12fc3	      0xe974020000	                           jmp 0x401327c	      9635	screen.c	ELSE_1	FUNCTION_82	IF_2
0x12fc8	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      9638	screen.c	ELSE_1	FUNCTION_82	IF_3
0x12fcc	            0x744a	                            je 0x4013058	      9638	screen.c	ELSE_1	FUNCTION_82	IF_3
0x12fce	    0x488b15000000	            mov rdx, qword [0x04013015] 	      9638	screen.c	ELSE_1	FUNCTION_82	IF_3
0x12fd5	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      9638	screen.c	ELSE_1	FUNCTION_82	IF_3
0x12fd8	            0x4898	                                    cdqe	      9638	screen.c	ELSE_1	FUNCTION_82	IF_3
0x12fda	          0x4829c2	                            sub rdx, rax	      9638	screen.c	ELSE_1	FUNCTION_82	IF_3
0x12fdd	          0x4889d0	                            mov rax, rdx	      9638	screen.c	ELSE_1	FUNCTION_82	IF_3
0x12fe0	        0x4883f804	                              cmp rax, 4	      9638	screen.c	ELSE_1	FUNCTION_82	IF_3
0x12fe4	            0x7f32	                            jg 0x4013058	      9638	screen.c	ELSE_1	FUNCTION_82	IF_3
0x12fe6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9638	screen.c	ELSE_1	FUNCTION_82	IF_3
0x12fea	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      9638	screen.c	ELSE_1	FUNCTION_82	IF_3
0x12ff0	          0x4863d0	                         movsxd rdx, eax	      9638	screen.c	ELSE_1	FUNCTION_82	IF_3
0x12ff3	    0x488b05000000	            mov rax, qword [0x0401303a] 	      9638	screen.c	ELSE_1	FUNCTION_82	IF_3
0x12ffa	          0x4839c2	                            cmp rdx, rax	      9638	screen.c	ELSE_1	FUNCTION_82	IF_3
0x12ffd	            0x7519	                           jne 0x4013058	      9638	screen.c	ELSE_1	FUNCTION_82	IF_3
0x12fff	    0x8b0500000000	            mov eax, dword [0x04013045] 	      9640	screen.c	ELSE_1	FUNCTION_82	IF_3	IF_4
0x13005	            0x85c0	                           test eax, eax	      9640	screen.c	ELSE_1	FUNCTION_82	IF_3	IF_4
0x13007	            0x7505	                           jne 0x401304e	      9640	screen.c	ELSE_1	FUNCTION_82	IF_3	IF_4
0x13009	      0xe800000000	                          call 0x401304e	      9641	screen.c	ELSE_1	FUNCTION_82	IF_3	CALL_2
0x1300e	      0xb800000000	                              mov eax, 0	      9642	screen.c	ELSE_1	FUNCTION_82	IF_3
0x13013	      0xe924020000	                           jmp 0x401327c	      9642	screen.c	ELSE_1	FUNCTION_82	IF_3
0x13018	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      9648	screen.c	ELSE_1	FUNCTION_82	IF_5
0x1301b	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      9648	screen.c	ELSE_1	FUNCTION_82	IF_5
0x1301e	             0x1c2	                            add edx, eax	      9648	screen.c	ELSE_1	FUNCTION_82	IF_5
0x13020	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9648	screen.c	ELSE_1	FUNCTION_82	IF_5
0x13024	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      9648	screen.c	ELSE_1	FUNCTION_82	IF_5
0x1302a	            0x39c2	                            cmp edx, eax	      9648	screen.c	ELSE_1	FUNCTION_82	IF_5
0x1302c	     0xf8c85000000	                            jl 0x40130f7	      9648	screen.c	ELSE_1	FUNCTION_82	IF_5
0x13032	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9651	screen.c	ELSE_1	FUNCTION_82	IF_5	CALL_6
0x13036	    0x8b90a8000000	            mov edx, dword [rax + 0xa8] 	      9651	screen.c	ELSE_1	FUNCTION_82	IF_5	CALL_6
0x1303c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9651	screen.c	ELSE_1	FUNCTION_82	IF_5	CALL_6
0x13040	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      9651	screen.c	ELSE_1	FUNCTION_82	IF_5	CALL_6
0x13046	          0x8d0c02	                    lea ecx, [rdx + rax]	      9650	screen.c	ELSE_1	FUNCTION_82	IF_5	CALL_5
0x13049	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9650	screen.c	ELSE_1	FUNCTION_82	IF_5	CALL_5
0x1304d	    0x8b80a8000000	            mov eax, dword [rax + 0xa8] 	      9650	screen.c	ELSE_1	FUNCTION_82	IF_5	CALL_5
0x13053	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      9650	screen.c	ELSE_1	FUNCTION_82	IF_5	CALL_5
0x13057	    0x8bb29c000000	            mov esi, dword [rdx + 0x9c] 	      9650	screen.c	ELSE_1	FUNCTION_82	IF_5	CALL_5
0x1305d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      9650	screen.c	ELSE_1	FUNCTION_82	IF_5	CALL_5
0x13061	    0x8b92a8010000	           mov edx, dword [rdx + 0x1a8] 	      9650	screen.c	ELSE_1	FUNCTION_82	IF_5	CALL_5
0x13067	             0x1d6	                            add esi, edx	      9650	screen.c	ELSE_1	FUNCTION_82	IF_5	CALL_5
0x13069	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      9650	screen.c	ELSE_1	FUNCTION_82	IF_5	CALL_5
0x1306d	    0x8b92a0000000	            mov edx, dword [rdx + 0xa0] 	      9650	screen.c	ELSE_1	FUNCTION_82	IF_5	CALL_5
0x13073	             0x1d6	                            add esi, edx	      9650	screen.c	ELSE_1	FUNCTION_82	IF_5	CALL_5
0x13075	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      9650	screen.c	ELSE_1	FUNCTION_82	IF_5	CALL_5
0x13079	    0x8bba9c000000	            mov edi, dword [rdx + 0x9c] 	      9650	screen.c	ELSE_1	FUNCTION_82	IF_5	CALL_5
0x1307f	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      9650	screen.c	ELSE_1	FUNCTION_82	IF_5	CALL_5
0x13083	    0x8b92a8010000	           mov edx, dword [rdx + 0x1a8] 	      9650	screen.c	ELSE_1	FUNCTION_82	IF_5	CALL_5
0x13089	             0x1d7	                            add edi, edx	      9650	screen.c	ELSE_1	FUNCTION_82	IF_5	CALL_5
0x1308b	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      9650	screen.c	ELSE_1	FUNCTION_82	IF_5	CALL_5
0x1308e	             0x1d7	                            add edi, edx	      9650	screen.c	ELSE_1	FUNCTION_82	IF_5	CALL_5
0x13090	        0x4883ec08	                              sub rsp, 8	      9650	screen.c	ELSE_1	FUNCTION_82	IF_5	CALL_5
0x13094	            0x6a00	                                  push 0	      9650	screen.c	ELSE_1	FUNCTION_82	IF_5	CALL_5
0x13096	    0x41b920000000	                           mov r9d, 0x20	      9650	screen.c	ELSE_1	FUNCTION_82	IF_5	CALL_5
0x1309c	    0x41b820000000	                           mov r8d, 0x20	      9650	screen.c	ELSE_1	FUNCTION_82	IF_5	CALL_5
0x130a2	            0x89c2	                            mov edx, eax	      9650	screen.c	ELSE_1	FUNCTION_82	IF_5	CALL_5
0x130a4	      0xe800000000	                          call 0x40130e9	      9650	screen.c	ELSE_1	FUNCTION_82	IF_5	CALL_5
0x130a9	        0x4883c410	                           add rsp, 0x10	      9650	screen.c	ELSE_1	FUNCTION_82	IF_5	CALL_5
0x130ad	      0xb801000000	                              mov eax, 1	      9653	screen.c	ELSE_1	FUNCTION_82	IF_5
0x130b2	      0xe985010000	                           jmp 0x401327c	      9653	screen.c	ELSE_1	FUNCTION_82	IF_5
0x130b7	    0x8b0500000000	            mov eax, dword [0x040130fd] 	      9661	screen.c	ELSE_1	FUNCTION_82	IF_6
0x130bd	            0x85c0	                           test eax, eax	      9661	screen.c	ELSE_1	FUNCTION_82	IF_6
0x130bf	            0x750a	                           jne 0x401310b	      9661	screen.c	ELSE_1	FUNCTION_82	IF_6
0x130c1	    0xc70500000000	               mov dword [0x0401310b], 1	      9662	screen.c	ELSE_1	FUNCTION_82	IF_6
0x130cb	    0x8b0500000000	            mov eax, dword [0x04013111] 	      9673	screen.c	ELSE_1	FUNCTION_82	IF_7
0x130d1	            0x85c0	                           test eax, eax	      9673	screen.c	ELSE_1	FUNCTION_82	IF_7
0x130d3	            0x751d	                           jne 0x4013132	      9673	screen.c	ELSE_1	FUNCTION_82	IF_7
0x130d5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9673	screen.c	ELSE_1	FUNCTION_82	IF_7
0x130d9	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      9673	screen.c	ELSE_1	FUNCTION_82	IF_7
0x130df	          0x4863d0	                         movsxd rdx, eax	      9673	screen.c	ELSE_1	FUNCTION_82	IF_7
0x130e2	    0x488b05000000	            mov rax, qword [0x04013129] 	      9673	screen.c	ELSE_1	FUNCTION_82	IF_7
0x130e9	          0x4839c2	                            cmp rdx, rax	      9673	screen.c	ELSE_1	FUNCTION_82	IF_7
0x130ec	     0xf8427010000	                            je 0x4013259	      9673	screen.c	ELSE_1	FUNCTION_82	IF_7
0x130f2	    0x8b0500000000	            mov eax, dword [0x04013138] 	      9675	screen.c	ELSE_1	FUNCTION_82	IF_7	IF_8
0x130f8	            0x85c0	                           test eax, eax	      9675	screen.c	ELSE_1	FUNCTION_82	IF_7	IF_8
0x130fa	            0x7438	                            je 0x4013174	      9675	screen.c	ELSE_1	FUNCTION_82	IF_7	IF_8
0x130fc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9675	screen.c	ELSE_1	FUNCTION_82	IF_7	IF_8
0x13100	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      9675	screen.c	ELSE_1	FUNCTION_82	IF_7	IF_8
0x13106	          0x4863d0	                         movsxd rdx, eax	      9675	screen.c	ELSE_1	FUNCTION_82	IF_7	IF_8
0x13109	    0x488b05000000	            mov rax, qword [0x04013150] 	      9675	screen.c	ELSE_1	FUNCTION_82	IF_7	IF_8
0x13110	          0x4839c2	                            cmp rdx, rax	      9675	screen.c	ELSE_1	FUNCTION_82	IF_7	IF_8
0x13113	            0x740e	                            je 0x4013163	      9675	screen.c	ELSE_1	FUNCTION_82	IF_7	IF_8
0x13115	    0x488b05000000	            mov rax, qword [0x0401315c] 	      9675	screen.c	ELSE_1	FUNCTION_82	IF_7	IF_8
0x1311c	           0xfb600	                   movzx eax, byte [rax]	      9675	screen.c	ELSE_1	FUNCTION_82	IF_7	IF_8
0x1311f	            0x84c0	                             test al, al	      9675	screen.c	ELSE_1	FUNCTION_82	IF_7	IF_8
0x13121	            0x7411	                            je 0x4013174	      9675	screen.c	ELSE_1	FUNCTION_82	IF_7	IF_8
0x13123	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      9676	screen.c	ELSE_1	FUNCTION_82	IF_7	CALL_7
0x13126	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9676	screen.c	ELSE_1	FUNCTION_82	IF_7	CALL_7
0x1312a	            0x89d6	                            mov esi, edx	      9676	screen.c	ELSE_1	FUNCTION_82	IF_7	CALL_7
0x1312c	          0x4889c7	                            mov rdi, rax	      9676	screen.c	ELSE_1	FUNCTION_82	IF_7	CALL_7
0x1312f	      0xe800000000	                          call 0x4013174	      9676	screen.c	ELSE_1	FUNCTION_82	IF_7	CALL_7
0x13134	        0x837dd800	               cmp dword [rbp - 0x28], 0	      9677	screen.c	ELSE_1	FUNCTION_82	IF_7	IF_9
0x13138	            0x7458	                            je 0x40131d2	      9677	screen.c	ELSE_1	FUNCTION_82	IF_7	IF_9
0x1313a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9679	screen.c	ELSE_1	FUNCTION_82	IF_7	IF_9
0x1313e	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      9679	screen.c	ELSE_1	FUNCTION_82	IF_7	IF_9
0x13144	          0x2b45e4	             sub eax, dword [rbp - 0x1c]	      9678	screen.c	ELSE_1	FUNCTION_82	IF_7	IF_9	CALL_9
0x13147	            0x89c2	                            mov edx, eax	      9678	screen.c	ELSE_1	FUNCTION_82	IF_7	IF_9	CALL_9
0x13149	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9678	screen.c	ELSE_1	FUNCTION_82	IF_7	IF_9	CALL_9
0x1314d	    0x8b889c000000	            mov ecx, dword [rax + 0x9c] 	      9678	screen.c	ELSE_1	FUNCTION_82	IF_7	IF_9	CALL_9
0x13153	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9678	screen.c	ELSE_1	FUNCTION_82	IF_7	IF_9	CALL_9
0x13157	    0x8b80a8010000	           mov eax, dword [rax + 0x1a8] 	      9678	screen.c	ELSE_1	FUNCTION_82	IF_7	IF_9	CALL_9
0x1315d	             0x1c1	                            add ecx, eax	      9678	screen.c	ELSE_1	FUNCTION_82	IF_7	IF_9	CALL_9
0x1315f	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      9678	screen.c	ELSE_1	FUNCTION_82	IF_7	IF_9	CALL_9
0x13162	          0x8d3c01	                    lea edi, [rcx + rax]	      9678	screen.c	ELSE_1	FUNCTION_82	IF_7	IF_9	CALL_9
0x13165	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	      9678	screen.c	ELSE_1	FUNCTION_82	IF_7	IF_9	CALL_9
0x13168	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      9678	screen.c	ELSE_1	FUNCTION_82	IF_7	IF_9	CALL_9
0x1316b	        0x4883ec08	                              sub rsp, 8	      9678	screen.c	ELSE_1	FUNCTION_82	IF_7	IF_9	CALL_9
0x1316f	          0xff75e8	                 push qword [rbp - 0x18]	      9678	screen.c	ELSE_1	FUNCTION_82	IF_7	IF_9	CALL_9
0x13172	          0x4189c9	                            mov r9d, ecx	      9678	screen.c	ELSE_1	FUNCTION_82	IF_7	IF_9	CALL_9
0x13175	    0x41b800000000	                              mov r8d, 0	      9678	screen.c	ELSE_1	FUNCTION_82	IF_7	IF_9	CALL_9
0x1317b	            0x89d1	                            mov ecx, edx	      9678	screen.c	ELSE_1	FUNCTION_82	IF_7	IF_9	CALL_9
0x1317d	            0x89c2	                            mov edx, eax	      9678	screen.c	ELSE_1	FUNCTION_82	IF_7	IF_9	CALL_9
0x1317f	      0xbe00000000	                              mov esi, 0	      9678	screen.c	ELSE_1	FUNCTION_82	IF_7	IF_9	CALL_9
0x13184	      0xe800000000	                          call 0x40131c9	      9678	screen.c	ELSE_1	FUNCTION_82	IF_7	IF_9	CALL_9
0x13189	        0x4883c410	                           add rsp, 0x10	      9678	screen.c	ELSE_1	FUNCTION_82	IF_7	IF_9	CALL_9
0x1318d	          0x8945fc	                mov dword [rbp - 4], eax	      9678	screen.c	ELSE_1	FUNCTION_82	IF_7	IF_9	CALL_9
0x13190	            0xeb4c	                           jmp 0x401321e	      9678	screen.c	ELSE_1	FUNCTION_82	IF_7	IF_9	CALL_9
0x13192	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9682	screen.c	FUNCTION_82	IF_7	ELSE_1
0x13196	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      9682	screen.c	FUNCTION_82	IF_7	ELSE_1
0x1319c	          0x2b45e4	             sub eax, dword [rbp - 0x1c]	      9681	screen.c	FUNCTION_82	IF_7	CALL_11
0x1319f	            0x89c2	                            mov edx, eax	      9681	screen.c	FUNCTION_82	IF_7	CALL_11
0x131a1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9681	screen.c	FUNCTION_82	IF_7	CALL_11
0x131a5	    0x8b889c000000	            mov ecx, dword [rax + 0x9c] 	      9681	screen.c	FUNCTION_82	IF_7	CALL_11
0x131ab	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9681	screen.c	FUNCTION_82	IF_7	CALL_11
0x131af	    0x8b80a8010000	           mov eax, dword [rax + 0x1a8] 	      9681	screen.c	FUNCTION_82	IF_7	CALL_11
0x131b5	             0x1c1	                            add ecx, eax	      9681	screen.c	FUNCTION_82	IF_7	CALL_11
0x131b7	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      9681	screen.c	FUNCTION_82	IF_7	CALL_11
0x131ba	          0x8d3c01	                    lea edi, [rcx + rax]	      9681	screen.c	FUNCTION_82	IF_7	CALL_11
0x131bd	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	      9681	screen.c	FUNCTION_82	IF_7	CALL_11
0x131c1	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	      9681	screen.c	FUNCTION_82	IF_7	CALL_11
0x131c4	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      9681	screen.c	FUNCTION_82	IF_7	CALL_11
0x131c7	          0x4989f1	                             mov r9, rsi	      9681	screen.c	FUNCTION_82	IF_7	CALL_11
0x131ca	          0x4189c8	                            mov r8d, ecx	      9681	screen.c	FUNCTION_82	IF_7	CALL_11
0x131cd	            0x89d1	                            mov ecx, edx	      9681	screen.c	FUNCTION_82	IF_7	CALL_11
0x131cf	            0x89c2	                            mov edx, eax	      9681	screen.c	FUNCTION_82	IF_7	CALL_11
0x131d1	      0xbe00000000	                              mov esi, 0	      9681	screen.c	FUNCTION_82	IF_7	CALL_11
0x131d6	      0xe800000000	                          call 0x401321b	      9681	screen.c	FUNCTION_82	IF_7	CALL_11
0x131db	          0x8945fc	                mov dword [rbp - 4], eax	      9681	screen.c	FUNCTION_82	IF_7	CALL_11
0x131de	    0x8b0500000000	            mov eax, dword [0x04013224] 	      9683	screen.c	FUNCTION_82	IF_7	ELSE_1	IF_10
0x131e4	            0x85c0	                           test eax, eax	      9683	screen.c	FUNCTION_82	IF_7	ELSE_1	IF_10
0x131e6	            0x742c	                            je 0x4013254	      9683	screen.c	FUNCTION_82	IF_7	ELSE_1	IF_10
0x131e8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9683	screen.c	FUNCTION_82	IF_7	ELSE_1	IF_10
0x131ec	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      9683	screen.c	FUNCTION_82	IF_7	ELSE_1	IF_10
0x131f2	          0x4863d0	                         movsxd rdx, eax	      9683	screen.c	FUNCTION_82	IF_7	ELSE_1	IF_10
0x131f5	    0x488b05000000	            mov rax, qword [0x0401323c] 	      9683	screen.c	FUNCTION_82	IF_7	ELSE_1	IF_10
0x131fc	          0x4839c2	                            cmp rdx, rax	      9683	screen.c	FUNCTION_82	IF_7	ELSE_1	IF_10
0x131ff	            0x740e	                            je 0x401324f	      9683	screen.c	FUNCTION_82	IF_7	ELSE_1	IF_10
0x13201	    0x488b05000000	            mov rax, qword [0x04013248] 	      9683	screen.c	FUNCTION_82	IF_7	ELSE_1	IF_10
0x13208	           0xfb600	                   movzx eax, byte [rax]	      9683	screen.c	FUNCTION_82	IF_7	ELSE_1	IF_10
0x1320b	            0x84c0	                             test al, al	      9683	screen.c	FUNCTION_82	IF_7	ELSE_1	IF_10
0x1320d	            0x7405	                            je 0x4013254	      9683	screen.c	FUNCTION_82	IF_7	ELSE_1	IF_10
0x1320f	      0xe800000000	                          call 0x4013254	      9684	screen.c	FUNCTION_82	IF_7	ELSE_1	CALL_12
0x13214	          0x8b45fc	                mov eax, dword [rbp - 4]	      9685	screen.c	FUNCTION_82	IF_7	ELSE_1
0x13217	            0xeb23	                           jmp 0x401327c	      9685	screen.c	FUNCTION_82	IF_7	ELSE_1
0x13219	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9688	screen.c	FUNCTION_82	ELSE_1	IF_11
0x1321d	        0x488b4020	            mov rax, qword [rax + 0x20] 	      9688	screen.c	FUNCTION_82	ELSE_1	IF_11
0x13221	          0x4885c0	                           test rax, rax	      9688	screen.c	FUNCTION_82	ELSE_1	IF_11
0x13224	            0x7411	                            je 0x4013277	      9688	screen.c	FUNCTION_82	ELSE_1	IF_11
0x13226	    0x8b0500000000	            mov eax, dword [0x0401326c] 	      9688	screen.c	FUNCTION_82	ELSE_1	IF_11
0x1322c	            0x85c0	                           test eax, eax	      9688	screen.c	FUNCTION_82	ELSE_1	IF_11
0x1322e	            0x7407	                            je 0x4013277	      9688	screen.c	FUNCTION_82	ELSE_1	IF_11
0x13230	      0xb800000000	                              mov eax, 0	      9689	screen.c	FUNCTION_82	ELSE_1	IF_11
0x13235	            0xeb05	                           jmp 0x401327c	      9689	screen.c	FUNCTION_82	ELSE_1	IF_11
0x13237	      0xb802000000	                              mov eax, 2	      9691	screen.c	FUNCTION_82	ELSE_1
0x1323c	              0xc9	                                   leave	      9692	screen.c	FUNCTION_82	ELSE_1
0x1323d	              0xc3	                                     ret	      9692	screen.c	FUNCTION_82	ELSE_1
init_search_hl	DO,0:functions,0:CALL,2:ELSE,1:IF,1:WHILE,1:FOR,0:SWITCH,0	57
0xf7f4	              0x55	                                push rbp	      7705	screen.c	FUNCTION_54
0xf7f5	          0x4889e5	                            mov rbp, rsp	      7705	screen.c	FUNCTION_54
0xf7f8	        0x4883ec20	                           sub rsp, 0x20	      7705	screen.c	FUNCTION_54
0xf7fc	        0x48897de8	             mov qword [rbp - 0x18], rdi	      7705	screen.c	FUNCTION_54
0xf800	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7710	screen.c	FUNCTION_54
0xf804	    0x488b80501500	          mov rax, qword [rax + 0x1550] 	      7710	screen.c	FUNCTION_54
0xf80b	        0x488945f8	                mov qword [rbp - 8], rax	      7710	screen.c	FUNCTION_54
0xf80f	      0xe9ae000000	                           jmp 0x400f902	      7711	screen.c	FUNCTION_54	WHILE_1
0xf814	        0x488b45f8	                mov rax, qword [rbp - 8]	      7713	screen.c	FUNCTION_54	WHILE_1
0xf818	        0x488b55f8	                mov rdx, qword [rbp - 8]	      7713	screen.c	FUNCTION_54	WHILE_1
0xf81c	    0x480508020000	                          add rax, 0x208	      7713	screen.c	FUNCTION_54	WHILE_1
0xf822	        0x4883c220	                           add rdx, 0x20	      7713	screen.c	FUNCTION_54	WHILE_1
0xf826	      0xb92a000000	                           mov ecx, 0x2a	      7713	screen.c	FUNCTION_54	WHILE_1
0xf82b	          0x4889c7	                            mov rdi, rax	      7713	screen.c	FUNCTION_54	WHILE_1
0xf82e	          0x4889d6	                            mov rsi, rdx	      7713	screen.c	FUNCTION_54	WHILE_1
0xf831	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	      7713	screen.c	FUNCTION_54	WHILE_1
0xf834	        0x488b45f8	                mov rax, qword [rbp - 8]	      7714	screen.c	FUNCTION_54	WHILE_1	IF_1
0xf838	          0x8b4018	            mov eax, dword [rax + 0x18] 	      7714	screen.c	FUNCTION_54	WHILE_1	IF_1
0xf83b	            0x85c0	                           test eax, eax	      7714	screen.c	FUNCTION_54	WHILE_1	IF_1
0xf83d	            0x7510	                           jne 0x400f88f	      7714	screen.c	FUNCTION_54	WHILE_1	IF_1
0xf83f	        0x488b45f8	                mov rax, qword [rbp - 8]	      7715	screen.c	FUNCTION_54	WHILE_1	IF_1
0xf843	    0xc78068030000	              mov dword [rax + 0x368], 0	      7715	screen.c	FUNCTION_54	WHILE_1	IF_1
0xf84d	            0xeb1a	                           jmp 0x400f8a9	      7715	screen.c	FUNCTION_54	WHILE_1	IF_1
0xf84f	        0x488b45f8	                mov rax, qword [rbp - 8]	      7717	screen.c	FUNCTION_54	WHILE_1	CALL_1
0xf853	          0x8b4018	            mov eax, dword [rax + 0x18] 	      7717	screen.c	FUNCTION_54	WHILE_1	CALL_1
0xf856	            0x89c7	                            mov edi, eax	      7717	screen.c	FUNCTION_54	WHILE_1	CALL_1
0xf858	      0xe800000000	                          call 0x400f89d	      7717	screen.c	FUNCTION_54	WHILE_1	CALL_1
0xf85d	            0x89c2	                            mov edx, eax	      7717	screen.c	FUNCTION_54	WHILE_1	CALL_1
0xf85f	        0x488b45f8	                mov rax, qword [rbp - 8]	      7717	screen.c	FUNCTION_54	WHILE_1	CALL_1
0xf863	    0x899068030000	            mov dword [rax + 0x368], edx	      7717	screen.c	FUNCTION_54	WHILE_1	CALL_1
0xf869	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7718	screen.c	FUNCTION_54	WHILE_1
0xf86d	        0x488b5008	                mov rdx, qword [rax + 8]	      7718	screen.c	FUNCTION_54	WHILE_1
0xf871	        0x488b45f8	                mov rax, qword [rbp - 8]	      7718	screen.c	FUNCTION_54	WHILE_1
0xf875	    0x488990580300	            mov qword [rax + 0x358], rdx	      7718	screen.c	FUNCTION_54	WHILE_1
0xf87c	        0x488b45f8	                mov rax, qword [rbp - 8]	      7719	screen.c	FUNCTION_54	WHILE_1
0xf880	    0x48c780600300	              mov qword [rax + 0x360], 0	      7719	screen.c	FUNCTION_54	WHILE_1
0xf88b	        0x488b45f8	                mov rax, qword [rbp - 8]	      7720	screen.c	FUNCTION_54	WHILE_1
0xf88f	    0x48c780700300	              mov qword [rax + 0x370], 0	      7720	screen.c	FUNCTION_54	WHILE_1
0xf89a	        0x488b45f8	                mov rax, qword [rbp - 8]	      7723	screen.c	FUNCTION_54	WHILE_1	CALL_2
0xf89e	    0x488d90880300	                  lea rdx, [rax + 0x388]	      7723	screen.c	FUNCTION_54	WHILE_1	CALL_2
0xf8a5	    0x488b05000000	            mov rax, qword [0x0400f8ec] 	      7723	screen.c	FUNCTION_54	WHILE_1	CALL_2
0xf8ac	          0x4889d6	                            mov rsi, rdx	      7723	screen.c	FUNCTION_54	WHILE_1	CALL_2
0xf8af	          0x4889c7	                            mov rdi, rax	      7723	screen.c	FUNCTION_54	WHILE_1	CALL_2
0xf8b2	      0xe800000000	                          call 0x400f8f7	      7723	screen.c	FUNCTION_54	WHILE_1	CALL_2
0xf8b7	        0x488b45f8	                mov rax, qword [rbp - 8]	      7725	screen.c	FUNCTION_54	WHILE_1
0xf8bb	          0x488b00	                    mov rax, qword [rax]	      7725	screen.c	FUNCTION_54	WHILE_1
0xf8be	        0x488945f8	                mov qword [rbp - 8], rax	      7725	screen.c	FUNCTION_54	WHILE_1
0xf8c2	      0x48837df800	                  cmp qword [rbp - 8], 0	      7711	screen.c	FUNCTION_54	WHILE_1
0xf8c7	     0xf8547ffffff	                           jne 0x400f854	      7711	screen.c	FUNCTION_54	WHILE_1
0xf8cd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7727	screen.c	FUNCTION_54
0xf8d1	        0x488b4008	                mov rax, qword [rax + 8]	      7727	screen.c	FUNCTION_54
0xf8d5	    0x488905000000	            mov qword [0x0400f91c], rax 	      7727	screen.c	FUNCTION_54
0xf8dc	    0x48c705000000	               mov qword [0x0400f927], 0	      7728	screen.c	FUNCTION_54
0xf8e7	    0x48c705000000	               mov qword [0x0400f932], 0	      7729	screen.c	FUNCTION_54
0xf8f2	              0x90	                                     nop	      7731	screen.c	FUNCTION_54
0xf8f3	              0xc9	                                   leave	      7731	screen.c	FUNCTION_54
0xf8f4	              0xc3	                                     ret	      7731	screen.c	FUNCTION_54
redraw_win_toolbar	DO,0:functions,0:CALL,11:ELSE,0:IF,5:WHILE,2:FOR,2:SWITCH,0	195
0x14d6f	              0x55	                                push rbp	     10756	screen.c	FUNCTION_97
0x14d70	          0x4889e5	                            mov rbp, rsp	     10756	screen.c	FUNCTION_97
0x14d73	        0x4883ec40	                           sub rsp, 0x40	     10756	screen.c	FUNCTION_97
0x14d77	        0x48897dc8	             mov qword [rbp - 0x38], rdi	     10756	screen.c	FUNCTION_97
0x14d7b	    0xc745dc000000	               mov dword [rbp - 0x24], 0	     10758	screen.c	FUNCTION_97
0x14d82	    0xc745e0000000	               mov dword [rbp - 0x20], 0	     10759	screen.c	FUNCTION_97
0x14d89	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	     10760	screen.c	FUNCTION_97
0x14d90	    0x488b05000000	            mov rax, qword [0x04014dd7] 	     10762	screen.c	FUNCTION_97
0x14d97	          0x4889c2	                            mov rdx, rax	     10762	screen.c	FUNCTION_97
0x14d9a	    0x488b05000000	            mov rax, qword [0x04014de1] 	     10762	screen.c	FUNCTION_97
0x14da1	          0x4829c2	                            sub rdx, rax	     10762	screen.c	FUNCTION_97
0x14da4	          0x4889d0	                            mov rax, rdx	     10762	screen.c	FUNCTION_97
0x14da7	          0x8945e8	             mov dword [rbp - 0x18], eax	     10762	screen.c	FUNCTION_97
0x14daa	      0xbf00000000	                              mov edi, 0	     10763	screen.c	FUNCTION_97	CALL_1
0x14daf	      0xe800000000	                          call 0x4014df4	     10763	screen.c	FUNCTION_97	CALL_1
0x14db4	          0x8945ec	             mov dword [rbp - 0x14], eax	     10763	screen.c	FUNCTION_97	CALL_1
0x14db7	      0xbf00000000	                              mov edi, 0	     10764	screen.c	FUNCTION_97	CALL_2
0x14dbc	      0xe800000000	                          call 0x4014e01	     10764	screen.c	FUNCTION_97	CALL_2
0x14dc1	          0x8945f0	             mov dword [rbp - 0x10], eax	     10764	screen.c	FUNCTION_97	CALL_2
0x14dc4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10766	screen.c	FUNCTION_97	CALL_3
0x14dc8	    0x488b80a00100	           mov rax, qword [rax + 0x1a0] 	     10766	screen.c	FUNCTION_97	CALL_3
0x14dcf	          0x4889c7	                            mov rdi, rax	     10766	screen.c	FUNCTION_97	CALL_3
0x14dd2	      0xe800000000	                          call 0x4014e17	     10766	screen.c	FUNCTION_97	CALL_3
0x14dd7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10767	screen.c	FUNCTION_97	FOR_1
0x14ddb	    0x488b80980100	           mov rax, qword [rax + 0x198] 	     10767	screen.c	FUNCTION_97	FOR_1
0x14de2	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	     10767	screen.c	FUNCTION_97	FOR_1
0x14de9	        0x488945f8	                mov qword [rbp - 8], rax	     10767	screen.c	FUNCTION_97	FOR_1
0x14ded	            0xeb13	                           jmp 0x4014e42	     10767	screen.c	FUNCTION_97	FOR_1
0x14def	        0x8345e001	               add dword [rbp - 0x20], 1	     10768	screen.c	FUNCTION_97	FOR_1
0x14df3	        0x488b45f8	                mov rax, qword [rbp - 8]	     10767	screen.c	FUNCTION_97	FOR_1
0x14df7	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	     10767	screen.c	FUNCTION_97	FOR_1
0x14dfe	        0x488945f8	                mov qword [rbp - 8], rax	     10767	screen.c	FUNCTION_97	FOR_1
0x14e02	      0x48837df800	                  cmp qword [rbp - 8], 0	     10767	screen.c	FUNCTION_97	FOR_1
0x14e07	            0x75e6	                           jne 0x4014e2f	     10767	screen.c	FUNCTION_97	FOR_1
0x14e09	          0x8b45e0	             mov eax, dword [rbp - 0x20]	     10770	screen.c	FUNCTION_97
0x14e0c	          0x83c001	                              add eax, 1	     10770	screen.c	FUNCTION_97
0x14e0f	          0xc1e004	                              shl eax, 4	     10769	screen.c	FUNCTION_97	CALL_4
0x14e12	            0x89c7	                            mov edi, eax	     10769	screen.c	FUNCTION_97	CALL_4
0x14e14	      0xe800000000	                          call 0x4014e59	     10769	screen.c	FUNCTION_97	CALL_4
0x14e19	          0x4889c2	                            mov rdx, rax	     10769	screen.c	FUNCTION_97	CALL_4
0x14e1c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10769	screen.c	FUNCTION_97	CALL_4
0x14e20	    0x488990a00100	            mov qword [rax + 0x1a0], rdx	     10769	screen.c	FUNCTION_97	CALL_4
0x14e27	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10773	screen.c	FUNCTION_97	FOR_2
0x14e2b	    0x488b80980100	           mov rax, qword [rax + 0x198] 	     10773	screen.c	FUNCTION_97	FOR_2
0x14e32	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	     10773	screen.c	FUNCTION_97	FOR_2
0x14e39	        0x488945f8	                mov qword [rbp - 8], rax	     10773	screen.c	FUNCTION_97	FOR_2
0x14e3d	      0xe965010000	                           jmp 0x4014fe7	     10773	screen.c	FUNCTION_97	FOR_2
0x14e42	          0x8b55e8	             mov edx, dword [rbp - 0x18]	     10776	screen.c	FUNCTION_97	FOR_2	CALL_5
0x14e45	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	     10776	screen.c	FUNCTION_97	FOR_2	CALL_5
0x14e48	             0x1c2	                            add edx, eax	     10776	screen.c	FUNCTION_97	FOR_2	CALL_5
0x14e4a	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     10776	screen.c	FUNCTION_97	FOR_2	CALL_5
0x14e4d	            0x89c6	                            mov esi, eax	     10776	screen.c	FUNCTION_97	FOR_2	CALL_5
0x14e4f	            0x89d7	                            mov edi, edx	     10776	screen.c	FUNCTION_97	FOR_2	CALL_5
0x14e51	      0xe8acbeffff	            call sym.space_to_screenline	     10776	screen.c	FUNCTION_97	FOR_2	CALL_5
0x14e56	        0x8345e401	               add dword [rbp - 0x1c], 1	     10777	screen.c	FUNCTION_97	FOR_2	IF_1
0x14e5a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10777	screen.c	FUNCTION_97	FOR_2	IF_1
0x14e5e	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	     10777	screen.c	FUNCTION_97	FOR_2	IF_1
0x14e64	          0x3945e4	            cmp dword [rbp - 0x1c], eax 	     10777	screen.c	FUNCTION_97	FOR_2	IF_1
0x14e67	     0xf8d56010000	                           jge 0x4015003	     10777	screen.c	FUNCTION_97	FOR_2	IF_1
0x14e6d	        0x837de401	               cmp dword [rbp - 0x1c], 1	     10779	screen.c	FUNCTION_97	FOR_2	IF_2
0x14e71	            0x7e2b	                           jle 0x4014ede	     10779	screen.c	FUNCTION_97	FOR_2	IF_2
0x14e73	          0x8b55e8	             mov edx, dword [rbp - 0x18]	     10781	screen.c	FUNCTION_97	FOR_2	IF_2	CALL_6
0x14e76	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	     10781	screen.c	FUNCTION_97	FOR_2	IF_2	CALL_6
0x14e79	             0x1c2	                            add edx, eax	     10781	screen.c	FUNCTION_97	FOR_2	IF_2	CALL_6
0x14e7b	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     10781	screen.c	FUNCTION_97	FOR_2	IF_2	CALL_6
0x14e7e	            0x89c6	                            mov esi, eax	     10781	screen.c	FUNCTION_97	FOR_2	IF_2	CALL_6
0x14e80	            0x89d7	                            mov edi, edx	     10781	screen.c	FUNCTION_97	FOR_2	IF_2	CALL_6
0x14e82	      0xe87bbeffff	            call sym.space_to_screenline	     10781	screen.c	FUNCTION_97	FOR_2	IF_2	CALL_6
0x14e87	        0x8345e401	               add dword [rbp - 0x1c], 1	     10782	screen.c	FUNCTION_97	FOR_2	IF_2	IF_3
0x14e8b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10782	screen.c	FUNCTION_97	FOR_2	IF_2	IF_3
0x14e8f	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	     10782	screen.c	FUNCTION_97	FOR_2	IF_2	IF_3
0x14e95	          0x3945e4	            cmp dword [rbp - 0x1c], eax 	     10782	screen.c	FUNCTION_97	FOR_2	IF_2	IF_3
0x14e98	     0xf8d28010000	                           jge 0x4015006	     10782	screen.c	FUNCTION_97	FOR_2	IF_2	IF_3
0x14e9e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10786	screen.c	FUNCTION_97	FOR_2
0x14ea2	    0x488b80a00100	           mov rax, qword [rax + 0x1a0] 	     10786	screen.c	FUNCTION_97	FOR_2
0x14ea9	          0x8b55dc	             mov edx, dword [rbp - 0x24]	     10786	screen.c	FUNCTION_97	FOR_2
0x14eac	          0x4863d2	                         movsxd rdx, edx	     10786	screen.c	FUNCTION_97	FOR_2
0x14eaf	        0x48c1e204	                              shl rdx, 4	     10786	screen.c	FUNCTION_97	FOR_2
0x14eb3	          0x4801c2	                            add rdx, rax	     10786	screen.c	FUNCTION_97	FOR_2
0x14eb6	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	     10786	screen.c	FUNCTION_97	FOR_2
0x14eb9	            0x8902	                    mov dword [rdx], eax	     10786	screen.c	FUNCTION_97	FOR_2
0x14ebb	          0x8b55e8	             mov edx, dword [rbp - 0x18]	     10787	screen.c	FUNCTION_97	FOR_2	CALL_7
0x14ebe	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	     10787	screen.c	FUNCTION_97	FOR_2	CALL_7
0x14ec1	             0x1c2	                            add edx, eax	     10787	screen.c	FUNCTION_97	FOR_2	CALL_7
0x14ec3	          0x8b45f0	             mov eax, dword [rbp - 0x10]	     10787	screen.c	FUNCTION_97	FOR_2	CALL_7
0x14ec6	            0x89c6	                            mov esi, eax	     10787	screen.c	FUNCTION_97	FOR_2	CALL_7
0x14ec8	            0x89d7	                            mov edi, edx	     10787	screen.c	FUNCTION_97	FOR_2	CALL_7
0x14eca	      0xe833beffff	            call sym.space_to_screenline	     10787	screen.c	FUNCTION_97	FOR_2	CALL_7
0x14ecf	        0x8345e401	               add dword [rbp - 0x1c], 1	     10788	screen.c	FUNCTION_97	FOR_2	IF_4
0x14ed3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10788	screen.c	FUNCTION_97	FOR_2	IF_4
0x14ed7	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	     10788	screen.c	FUNCTION_97	FOR_2	IF_4
0x14edd	          0x3945e4	            cmp dword [rbp - 0x1c], eax 	     10788	screen.c	FUNCTION_97	FOR_2	IF_4
0x14ee0	     0xf8de3000000	                           jge 0x4015009	     10788	screen.c	FUNCTION_97	FOR_2	IF_4
0x14ee6	        0x488b45f8	                mov rax, qword [rbp - 8]	     10791	screen.c	FUNCTION_97	FOR_2	CALL_8
0x14eea	        0x488b4808	                mov rcx, qword [rax + 8]	     10791	screen.c	FUNCTION_97	FOR_2	CALL_8
0x14eee	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	     10791	screen.c	FUNCTION_97	FOR_2	CALL_8
0x14ef1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10791	screen.c	FUNCTION_97	FOR_2	CALL_8
0x14ef5	          0x4889ce	                            mov rsi, rcx	     10791	screen.c	FUNCTION_97	FOR_2	CALL_8
0x14ef8	          0x4889c7	                            mov rdi, rax	     10791	screen.c	FUNCTION_97	FOR_2	CALL_8
0x14efb	      0xe846fafeff	             call sym.text_to_screenline	     10791	screen.c	FUNCTION_97	FOR_2	CALL_8
0x14f00	          0x8945f4	              mov dword [rbp - 0xc], eax	     10791	screen.c	FUNCTION_97	FOR_2	CALL_8
0x14f03	            0xeb22	                           jmp 0x4014f67	     10792	screen.c	FUNCTION_97	FOR_2	WHILE_1
0x14f05	    0x488b05000000	            mov rax, qword [0x04014f4c] 	     10794	screen.c	FUNCTION_97	FOR_2	WHILE_1
0x14f0c	          0x8b4de8	             mov ecx, dword [rbp - 0x18]	     10794	screen.c	FUNCTION_97	FOR_2	WHILE_1
0x14f0f	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	     10794	screen.c	FUNCTION_97	FOR_2	WHILE_1
0x14f12	             0x1ca	                            add edx, ecx	     10794	screen.c	FUNCTION_97	FOR_2	WHILE_1
0x14f14	          0x4863d2	                         movsxd rdx, edx	     10794	screen.c	FUNCTION_97	FOR_2	WHILE_1
0x14f17	          0x4801d2	                            add rdx, rdx	     10794	screen.c	FUNCTION_97	FOR_2	WHILE_1
0x14f1a	          0x4801d0	                            add rax, rdx	     10794	screen.c	FUNCTION_97	FOR_2	WHILE_1
0x14f1d	          0x8b55f0	             mov edx, dword [rbp - 0x10]	     10794	screen.c	FUNCTION_97	FOR_2	WHILE_1
0x14f20	          0x668910	                      mov word [rax], dx	     10794	screen.c	FUNCTION_97	FOR_2	WHILE_1
0x14f23	        0x8345e401	               add dword [rbp - 0x1c], 1	     10795	screen.c	FUNCTION_97	FOR_2	WHILE_1
0x14f27	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	     10792	screen.c	FUNCTION_97	FOR_2	WHILE_1
0x14f2a	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	     10792	screen.c	FUNCTION_97	FOR_2	WHILE_1
0x14f2d	            0x7cd6	                            jl 0x4014f45	     10792	screen.c	FUNCTION_97	FOR_2	WHILE_1
0x14f2f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10797	screen.c	FUNCTION_97	FOR_2
0x14f33	    0x488b80a00100	           mov rax, qword [rax + 0x1a0] 	     10797	screen.c	FUNCTION_97	FOR_2
0x14f3a	          0x8b55dc	             mov edx, dword [rbp - 0x24]	     10797	screen.c	FUNCTION_97	FOR_2
0x14f3d	          0x4863d2	                         movsxd rdx, edx	     10797	screen.c	FUNCTION_97	FOR_2
0x14f40	        0x48c1e204	                              shl rdx, 4	     10797	screen.c	FUNCTION_97	FOR_2
0x14f44	          0x4801c2	                            add rdx, rax	     10797	screen.c	FUNCTION_97	FOR_2
0x14f47	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	     10797	screen.c	FUNCTION_97	FOR_2
0x14f4a	          0x894204	                mov dword [rdx + 4], eax	     10797	screen.c	FUNCTION_97	FOR_2
0x14f4d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10798	screen.c	FUNCTION_97	FOR_2
0x14f51	    0x488b80a00100	           mov rax, qword [rax + 0x1a0] 	     10798	screen.c	FUNCTION_97	FOR_2
0x14f58	          0x8b55dc	             mov edx, dword [rbp - 0x24]	     10798	screen.c	FUNCTION_97	FOR_2
0x14f5b	          0x4863d2	                         movsxd rdx, edx	     10798	screen.c	FUNCTION_97	FOR_2
0x14f5e	        0x48c1e204	                              shl rdx, 4	     10798	screen.c	FUNCTION_97	FOR_2
0x14f62	          0x4801c2	                            add rdx, rax	     10798	screen.c	FUNCTION_97	FOR_2
0x14f65	        0x488b45f8	                mov rax, qword [rbp - 8]	     10798	screen.c	FUNCTION_97	FOR_2
0x14f69	        0x48894208	                mov qword [rdx + 8], rax	     10798	screen.c	FUNCTION_97	FOR_2
0x14f6d	        0x8345dc01	               add dword [rbp - 0x24], 1	     10799	screen.c	FUNCTION_97	FOR_2
0x14f71	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10801	screen.c	FUNCTION_97	FOR_2	IF_5
0x14f75	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	     10801	screen.c	FUNCTION_97	FOR_2	IF_5
0x14f7b	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	     10801	screen.c	FUNCTION_97	FOR_2	IF_5
0x14f7e	            0x7e4c	                           jle 0x401500c	     10801	screen.c	FUNCTION_97	FOR_2	IF_5
0x14f80	          0x8b55e8	             mov edx, dword [rbp - 0x18]	     10803	screen.c	FUNCTION_97	FOR_2	CALL_9
0x14f83	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	     10803	screen.c	FUNCTION_97	FOR_2	CALL_9
0x14f86	             0x1c2	                            add edx, eax	     10803	screen.c	FUNCTION_97	FOR_2	CALL_9
0x14f88	          0x8b45f0	             mov eax, dword [rbp - 0x10]	     10803	screen.c	FUNCTION_97	FOR_2	CALL_9
0x14f8b	            0x89c6	                            mov esi, eax	     10803	screen.c	FUNCTION_97	FOR_2	CALL_9
0x14f8d	            0x89d7	                            mov edi, edx	     10803	screen.c	FUNCTION_97	FOR_2	CALL_9
0x14f8f	      0xe86ebdffff	            call sym.space_to_screenline	     10803	screen.c	FUNCTION_97	FOR_2	CALL_9
0x14f94	        0x8345e401	               add dword [rbp - 0x1c], 1	     10804	screen.c	FUNCTION_97	FOR_2
0x14f98	        0x488b45f8	                mov rax, qword [rbp - 8]	     10774	screen.c	FUNCTION_97	FOR_2
0x14f9c	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	     10774	screen.c	FUNCTION_97	FOR_2
0x14fa3	        0x488945f8	                mov qword [rbp - 8], rax	     10774	screen.c	FUNCTION_97	FOR_2
0x14fa7	      0x48837df800	                  cmp qword [rbp - 8], 0	     10773	screen.c	FUNCTION_97	FOR_2
0x14fac	            0x7439	                            je 0x4015027	     10773	screen.c	FUNCTION_97	FOR_2
0x14fae	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10774	screen.c	FUNCTION_97	FOR_2
0x14fb2	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	     10774	screen.c	FUNCTION_97	FOR_2
0x14fb8	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	     10774	screen.c	FUNCTION_97	FOR_2
0x14fbb	     0xf8f81feffff	                            jg 0x4014e82	     10774	screen.c	FUNCTION_97	FOR_2
0x14fc1	            0xeb24	                           jmp 0x4015027	     10774	screen.c	FUNCTION_97	FOR_2
0x14fc3	              0x90	                                     nop	     10778	screen.c	FUNCTION_97	FOR_2	IF_1
0x14fc4	            0xeb21	                           jmp 0x4015027	     10778	screen.c	FUNCTION_97	FOR_2	IF_1
0x14fc6	              0x90	                                     nop	     10783	screen.c	FUNCTION_97	FOR_2	IF_2	IF_3
0x14fc7	            0xeb1e	                           jmp 0x4015027	     10783	screen.c	FUNCTION_97	FOR_2	IF_2	IF_3
0x14fc9	              0x90	                                     nop	     10789	screen.c	FUNCTION_97	FOR_2	IF_4
0x14fca	            0xeb1b	                           jmp 0x4015027	     10789	screen.c	FUNCTION_97	FOR_2	IF_4
0x14fcc	              0x90	                                     nop	     10802	screen.c	FUNCTION_97	FOR_2	IF_5
0x14fcd	            0xeb18	                           jmp 0x4015027	     10806	screen.c	FUNCTION_97	WHILE_2
0x14fcf	          0x8b55e8	             mov edx, dword [rbp - 0x18]	     10808	screen.c	FUNCTION_97	WHILE_2	CALL_10
0x14fd2	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	     10808	screen.c	FUNCTION_97	WHILE_2	CALL_10
0x14fd5	             0x1c2	                            add edx, eax	     10808	screen.c	FUNCTION_97	WHILE_2	CALL_10
0x14fd7	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     10808	screen.c	FUNCTION_97	WHILE_2	CALL_10
0x14fda	            0x89c6	                            mov esi, eax	     10808	screen.c	FUNCTION_97	WHILE_2	CALL_10
0x14fdc	            0x89d7	                            mov edi, edx	     10808	screen.c	FUNCTION_97	WHILE_2	CALL_10
0x14fde	      0xe81fbdffff	            call sym.space_to_screenline	     10808	screen.c	FUNCTION_97	WHILE_2	CALL_10
0x14fe3	        0x8345e401	               add dword [rbp - 0x1c], 1	     10809	screen.c	FUNCTION_97	WHILE_2
0x14fe7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10806	screen.c	FUNCTION_97	WHILE_2
0x14feb	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	     10806	screen.c	FUNCTION_97	WHILE_2
0x14ff1	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	     10806	screen.c	FUNCTION_97	WHILE_2
0x14ff4	            0x7fd9	                            jg 0x401500f	     10806	screen.c	FUNCTION_97	WHILE_2
0x14ff6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10811	screen.c	FUNCTION_97
0x14ffa	    0x488b80a00100	           mov rax, qword [rax + 0x1a0] 	     10811	screen.c	FUNCTION_97
0x15001	          0x8b55dc	             mov edx, dword [rbp - 0x24]	     10811	screen.c	FUNCTION_97
0x15004	          0x4863d2	                         movsxd rdx, edx	     10811	screen.c	FUNCTION_97
0x15007	        0x48c1e204	                              shl rdx, 4	     10811	screen.c	FUNCTION_97
0x1500b	          0x4801d0	                            add rax, rdx	     10811	screen.c	FUNCTION_97
0x1500e	    0x48c740080000	                  mov qword [rax + 8], 0	     10811	screen.c	FUNCTION_97
0x15016	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10813	screen.c	FUNCTION_97	CALL_11
0x1501a	    0x8b88ac000000	            mov ecx, dword [rax + 0xac] 	     10813	screen.c	FUNCTION_97	CALL_11
0x15020	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10813	screen.c	FUNCTION_97	CALL_11
0x15024	    0x8b90ac000000	            mov edx, dword [rax + 0xac] 	     10813	screen.c	FUNCTION_97	CALL_11
0x1502a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10813	screen.c	FUNCTION_97	CALL_11
0x1502e	    0x8bb0a8000000	            mov esi, dword [rax + 0xa8] 	     10813	screen.c	FUNCTION_97	CALL_11
0x15034	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     10813	screen.c	FUNCTION_97	CALL_11
0x15038	    0x8b809c000000	            mov eax, dword [rax + 0x9c] 	     10813	screen.c	FUNCTION_97	CALL_11
0x1503e	    0x41b800000000	                              mov r8d, 0	     10813	screen.c	FUNCTION_97	CALL_11
0x15044	            0x89c7	                            mov edi, eax	     10813	screen.c	FUNCTION_97	CALL_11
0x15046	      0xe800000000	                          call 0x401508b	     10813	screen.c	FUNCTION_97	CALL_11
0x1504b	              0x90	                                     nop	     10815	screen.c	FUNCTION_97
0x1504c	              0xc9	                                   leave	     10815	screen.c	FUNCTION_97
0x1504d	              0xc3	                                     ret	     10815	screen.c	FUNCTION_97
windgoto	DO,0:functions,0:CALL,15:ELSE,11:IF,35:WHILE,6:FOR,1:SWITCH,0	375
0x1251c	              0x55	                                push rbp	      9206	screen.c	FUNCTION_78
0x1251d	          0x4889e5	                            mov rbp, rsp	      9206	screen.c	FUNCTION_78
0x12520	              0x53	                                push rbx	      9206	screen.c	FUNCTION_78
0x12521	        0x4883ec48	                           sub rsp, 0x48	      9206	screen.c	FUNCTION_78
0x12525	          0x897dbc	             mov dword [rbp - 0x44], edi	      9206	screen.c	FUNCTION_78
0x12528	          0x8975b8	             mov dword [rbp - 0x48], esi	      9206	screen.c	FUNCTION_78
0x1252b	    0x488b05000000	            mov rax, qword [0x04012572] 	      9225	screen.c	FUNCTION_78	IF_1
0x12532	          0x4885c0	                           test rax, rax	      9225	screen.c	FUNCTION_78	IF_1
0x12535	     0xf8443050000	                            je 0x4012abe	      9225	screen.c	FUNCTION_78	IF_1
0x1253b	    0x8b0500000000	            mov eax, dword [0x04012581] 	      9228	screen.c	FUNCTION_78	IF_2
0x12541	          0x3945b8	            cmp dword [rbp - 0x48], eax 	      9228	screen.c	FUNCTION_78	IF_2
0x12544	            0x750f	                           jne 0x4012595	      9228	screen.c	FUNCTION_78	IF_2
0x12546	    0x8b0500000000	            mov eax, dword [0x0401258c] 	      9228	screen.c	FUNCTION_78	IF_2
0x1254c	          0x3945bc	            cmp dword [rbp - 0x44], eax 	      9228	screen.c	FUNCTION_78	IF_2
0x1254f	     0xf842a050000	                            je 0x4012abf	      9228	screen.c	FUNCTION_78	IF_2
0x12555	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      9231	screen.c	FUNCTION_78	IF_2	IF_3
0x12559	            0x7907	                           jns 0x40125a2	      9231	screen.c	FUNCTION_78	IF_2	IF_3
0x1255b	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      9232	screen.c	FUNCTION_78	IF_2	IF_3
0x12562	    0x8b0500000000	            mov eax, dword [0x040125a8] 	      9233	screen.c	FUNCTION_78	IF_2	IF_4
0x12568	          0x3945bc	            cmp dword [rbp - 0x44], eax 	      9233	screen.c	FUNCTION_78	IF_2	IF_4
0x1256b	            0x7c0c	                            jl 0x40125b9	      9233	screen.c	FUNCTION_78	IF_2	IF_4
0x1256d	    0x8b0500000000	            mov eax, dword [0x040125b3] 	      9234	screen.c	FUNCTION_78	IF_2	IF_4
0x12573	          0x83e801	                              sub eax, 1	      9234	screen.c	FUNCTION_78	IF_2	IF_4
0x12576	          0x8945bc	             mov dword [rbp - 0x44], eax	      9234	screen.c	FUNCTION_78	IF_2	IF_4
0x12579	    0x8b0500000000	            mov eax, dword [0x040125bf] 	      9235	screen.c	FUNCTION_78	IF_2	IF_5
0x1257f	          0x3945b8	            cmp dword [rbp - 0x48], eax 	      9235	screen.c	FUNCTION_78	IF_2	IF_5
0x12582	            0x7c0c	                            jl 0x40125d0	      9235	screen.c	FUNCTION_78	IF_2	IF_5
0x12584	    0x8b0500000000	            mov eax, dword [0x040125ca] 	      9236	screen.c	FUNCTION_78	IF_2	IF_5
0x1258a	          0x83e801	                              sub eax, 1	      9236	screen.c	FUNCTION_78	IF_2	IF_5
0x1258d	          0x8945b8	             mov dword [rbp - 0x48], eax	      9236	screen.c	FUNCTION_78	IF_2	IF_5
0x12590	    0x8b0500000000	            mov eax, dword [0x040125d6] 	      9239	screen.c	FUNCTION_78	IF_2	IF_6
0x12596	            0x85c0	                           test eax, eax	      9239	screen.c	FUNCTION_78	IF_2	IF_6
0x12598	            0x7417	                            je 0x40125f1	      9239	screen.c	FUNCTION_78	IF_2	IF_6
0x1259a	    0x488b05000000	            mov rax, qword [0x040125e1] 	      9239	screen.c	FUNCTION_78	IF_2	IF_6
0x125a1	           0xfb600	                   movzx eax, byte [rax]	      9239	screen.c	FUNCTION_78	IF_2	IF_6
0x125a4	            0x84c0	                             test al, al	      9239	screen.c	FUNCTION_78	IF_2	IF_6
0x125a6	            0x7509	                           jne 0x40125f1	      9239	screen.c	FUNCTION_78	IF_2	IF_6
0x125a8	    0xc745d0050000	               mov dword [rbp - 0x30], 5	      9240	screen.c	FUNCTION_78	IF_2	IF_6
0x125af	            0xeb07	                           jmp 0x40125f8	      9240	screen.c	FUNCTION_78	IF_2	IF_6
0x125b1	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      9242	screen.c	FUNCTION_78	IF_2	ELSE_1
0x125b8	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      9243	screen.c	FUNCTION_78	IF_2	ELSE_1
0x125bb	          0x83c007	                              add eax, 7	      9243	screen.c	FUNCTION_78	IF_2	ELSE_1
0x125be	          0x8945dc	             mov dword [rbp - 0x24], eax	      9243	screen.c	FUNCTION_78	IF_2	ELSE_1
0x125c1	    0x8b0500000000	            mov eax, dword [0x04012607] 	      9258	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7
0x125c7	          0x3945bc	            cmp dword [rbp - 0x44], eax 	      9258	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7
0x125ca	     0xf8c34040000	                            jl 0x4012a44	      9258	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7
0x125d0	    0x8b0500000000	            mov eax, dword [0x04012616] 	      9258	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7
0x125d6	          0x4863d0	                         movsxd rdx, eax	      9258	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7
0x125d9	    0x488b05000000	            mov rax, qword [0x04012620] 	      9258	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7
0x125e0	          0x4839c2	                            cmp rdx, rax	      9258	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7
0x125e3	     0xf8d1b040000	                           jge 0x4012a44	      9258	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7
0x125e9	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      9264	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7
0x125f1	    0x8b0500000000	            mov eax, dword [0x04012637] 	      9265	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7
0x125f7	          0x8945d4	             mov dword [rbp - 0x2c], eax	      9265	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7
0x125fa	    0x8b0500000000	            mov eax, dword [0x04012640] 	      9266	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8
0x12600	          0x3945bc	            cmp dword [rbp - 0x44], eax 	      9266	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8
0x12603	     0xf85aa000000	                           jne 0x40126f3	      9266	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8
0x12609	    0x8b0500000000	            mov eax, dword [0x0401264f] 	      9266	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8
0x1260f	          0x3945b8	            cmp dword [rbp - 0x48], eax 	      9266	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8
0x12612	     0xf8d9b000000	                           jge 0x40126f3	      9266	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8
0x12618	    0x488b05000000	            mov rax, qword [0x0401265f] 	      9269	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	IF_9
0x1261f	           0xfb600	                   movzx eax, byte [rax]	      9269	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	IF_9
0x12622	            0x84c0	                             test al, al	      9269	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	IF_9
0x12624	            0x740d	                            je 0x4012673	      9269	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	IF_9
0x12626	    0x488b05000000	            mov rax, qword [0x0401266d] 	      9270	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	IF_9
0x1262d	        0x488945e8	             mov qword [rbp - 0x18], rax	      9270	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	IF_9
0x12631	            0xeb0b	                           jmp 0x401267e	      9270	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	IF_9
0x12633	    0x488b05000000	            mov rax, qword [0x0401267a] 	      9272	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	ELSE_2
0x1263a	        0x488945e8	             mov qword [rbp - 0x18], rax	      9272	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	ELSE_2
0x1263e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9273	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	IF_10
0x12642	           0xfb600	                   movzx eax, byte [rax]	      9273	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	IF_10
0x12645	            0x84c0	                             test al, al	      9273	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	IF_10
0x12647	            0x741f	                            je 0x40126a8	      9273	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	IF_10
0x12649	    0x8b0500000000	            mov eax, dword [0x0401268f] 	      9274	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	CALL_1
0x1264f	          0x2b45b8	             sub eax, dword [rbp - 0x48]	      9274	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	CALL_1
0x12652	            0x89c3	                            mov ebx, eax	      9274	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	CALL_1
0x12654	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9274	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	CALL_1
0x12658	          0x4889c7	                            mov rdi, rax	      9274	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	CALL_1
0x1265b	      0xe800000000	                          call 0x40126a0	      9274	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	CALL_1
0x12660	           0xfafc3	                           imul eax, ebx	      9274	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	CALL_1
0x12663	          0x8945c8	             mov dword [rbp - 0x38], eax	      9274	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	CALL_1
0x12666	            0xeb07	                           jmp 0x40126af	      9274	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	CALL_1
0x12668	    0xc745c8e70300	          mov dword [rbp - 0x38], 0x3e7 	      9276	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	ELSE_3
0x1266f	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      9277	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	ELSE_3	IF_11
0x12672	          0x83c001	                              add eax, 1	      9277	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	ELSE_3	IF_11
0x12675	          0x3b45c8	             cmp eax, dword [rbp - 0x38]	      9277	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	ELSE_3	IF_11
0x12678	            0x7d17	                           jge 0x40126d1	      9277	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	ELSE_3	IF_11
0x1267a	    0xc745c4020000	               mov dword [rbp - 0x3c], 2	      9279	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	ELSE_3	IF_11
0x12681	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      9280	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	ELSE_3	IF_11
0x12688	    0xc745c8010000	               mov dword [rbp - 0x38], 1	      9281	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	ELSE_3	IF_11
0x1268f	            0xeb0d	                           jmp 0x40126de	      9281	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	ELSE_3	IF_11
0x12691	    0xc745c4010000	               mov dword [rbp - 0x3c], 1	      9285	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	ELSE_4
0x12698	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      9286	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	ELSE_4
0x1269b	          0x8945cc	             mov dword [rbp - 0x34], eax	      9286	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	ELSE_4
0x1269e	        0x837dd000	               cmp dword [rbp - 0x30], 0	      9288	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	IF_12
0x126a2	            0x7466	                            je 0x401274a	      9288	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	IF_12
0x126a4	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      9290	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	IF_12
0x126a7	           0x145c8	             add dword [rbp - 0x38], eax	      9290	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	IF_12
0x126aa	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      9291	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	IF_12
0x126b1	            0xeb57	                           jmp 0x401274a	      9288	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_8	IF_12
0x126b3	    0x8b0500000000	            mov eax, dword [0x040126f9] 	      9298	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	ELSE_5	IF_13
0x126b9	          0x3945bc	            cmp dword [rbp - 0x44], eax 	      9298	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	ELSE_5	IF_13
0x126bc	            0x7e35	                           jle 0x4012733	      9298	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	ELSE_5	IF_13
0x126be	    0xc745c4030000	               mov dword [rbp - 0x3c], 3	      9300	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	ELSE_5	IF_13
0x126c5	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      9301	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	ELSE_5	IF_13
0x126cc	    0x8b0500000000	            mov eax, dword [0x04012712] 	      9302	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	ELSE_5	IF_13
0x126d2	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      9302	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	ELSE_5	IF_13
0x126d5	            0x29c2	                            sub edx, eax	      9302	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	ELSE_5	IF_13
0x126d7	            0x89d0	                            mov eax, edx	      9302	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	ELSE_5	IF_13
0x126d9	             0x1c0	                            add eax, eax	      9302	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	ELSE_5	IF_13
0x126db	          0x8945c8	             mov dword [rbp - 0x38], eax	      9302	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	ELSE_5	IF_13
0x126de	        0x837dd000	               cmp dword [rbp - 0x30], 0	      9303	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	ELSE_5	IF_13	IF_14
0x126e2	            0x7426	                            je 0x401274a	      9303	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	ELSE_5	IF_13	IF_14
0x126e4	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      9305	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	ELSE_5	IF_13	IF_14
0x126e7	           0x145c8	             add dword [rbp - 0x38], eax	      9305	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	ELSE_5	IF_13	IF_14
0x126ea	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      9306	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	ELSE_5	IF_13	IF_14
0x126f1	            0xeb17	                           jmp 0x401274a	      9306	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	ELSE_5	IF_13	IF_14
0x126f3	    0xc745c4040000	               mov dword [rbp - 0x3c], 4	      9315	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	ELSE_6
0x126fa	    0x8b0500000000	            mov eax, dword [0x04012740] 	      9316	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	ELSE_6
0x12700	          0x8945cc	             mov dword [rbp - 0x34], eax	      9316	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	ELSE_6
0x12703	    0xc745c8000000	               mov dword [rbp - 0x38], 0	      9317	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	ELSE_6
0x1270a	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      9324	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7
0x1270d	          0x2b45cc	             sub eax, dword [rbp - 0x34]	      9324	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7
0x12710	          0x8945c0	             mov dword [rbp - 0x40], eax	      9324	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7
0x12713	        0x837dc000	               cmp dword [rbp - 0x40], 0	      9325	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_15
0x12717	            0x7e06	                           jle 0x401275f	      9325	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_15
0x12719	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      9326	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_15
0x1271c	           0x145c8	             add dword [rbp - 0x38], eax	      9326	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_15
0x1271f	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      9327	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16
0x12722	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      9327	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16
0x12725	     0xf8d01010000	                           jge 0x401286c	      9327	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16
0x1272b	        0x837dc000	               cmp dword [rbp - 0x40], 0	      9327	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16
0x1272f	     0xf8ef7000000	                           jle 0x401286c	      9327	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16
0x12735	    0x488b05000000	            mov rax, qword [0x0401277c] 	      9333	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16
0x1273c	    0x488b15000000	            mov rdx, qword [0x04012783] 	      9333	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16
0x12743	          0x8b4dbc	             mov ecx, dword [rbp - 0x44]	      9333	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16
0x12746	          0x4863c9	                         movsxd rcx, ecx	      9333	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16
0x12749	        0x48c1e102	                              shl rcx, 2	      9333	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16
0x1274d	          0x4801ca	                            add rdx, rcx	      9333	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16
0x12750	            0x8b12	                    mov edx, dword [rdx]	      9333	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16
0x12752	            0x89d1	                            mov ecx, edx	      9333	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16
0x12754	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      9333	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16
0x12757	          0x4863d2	                         movsxd rdx, edx	      9333	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16
0x1275a	          0x4801ca	                            add rdx, rcx	      9333	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16
0x1275d	          0x4801d2	                            add rdx, rdx	      9333	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16
0x12760	          0x4801d0	                            add rax, rdx	      9333	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16
0x12763	        0x488945e0	             mov qword [rbp - 0x20], rax	      9333	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16
0x12767	            0xeb04	                           jmp 0x40127ad	      9334	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	WHILE_1
0x12769	        0x836dc001	               sub dword [rbp - 0x40], 1	      9335	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	WHILE_1
0x1276d	        0x837dc000	               cmp dword [rbp - 0x40], 0	      9334	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	WHILE_1
0x12771	            0x7417	                            je 0x40127ca	      9334	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	WHILE_1
0x12773	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9334	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	WHILE_1
0x12777	        0x488d5002	                      lea rdx, [rax + 2]	      9334	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	WHILE_1
0x1277b	        0x488955e0	             mov qword [rbp - 0x20], rdx	      9334	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	WHILE_1
0x1277f	           0xfb700	                   movzx eax, word [rax]	      9334	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	WHILE_1
0x12782	           0xfb7c0	                           movzx eax, ax	      9334	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	WHILE_1
0x12785	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      9334	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	WHILE_1
0x12788	            0x74df	                            je 0x40127a9	      9334	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	WHILE_1
0x1278a	        0x837dc000	               cmp dword [rbp - 0x40], 0	      9336	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_17
0x1278e	            0x7444	                            je 0x4012814	      9336	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_17
0x12790	      0x48836de002	               sub qword [rbp - 0x20], 2	      9341	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_17	IF_18
0x12795	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9341	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_17	IF_18
0x12799	           0xfb700	                   movzx eax, word [rax]	      9341	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_17	IF_18
0x1279c	          0x6685c0	                             test ax, ax	      9341	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_17	IF_18
0x1279f	            0x7526	                           jne 0x4012807	      9341	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_17	IF_18
0x127a1	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      9343	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_17	IF_18
0x127a4	           0x145c8	             add dword [rbp - 0x38], eax	      9343	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_17	IF_18
0x127a7	            0xeb04	                           jmp 0x40127ed	      9344	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_17	IF_18	WHILE_2
0x127a9	        0x836dc001	               sub dword [rbp - 0x40], 1	      9345	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_17	IF_18	WHILE_2
0x127ad	        0x837dc000	               cmp dword [rbp - 0x40], 0	      9344	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_17	IF_18	WHILE_2
0x127b1	            0x7414	                            je 0x4012807	      9344	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_17	IF_18	WHILE_2
0x127b3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9344	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_17	IF_18	WHILE_2
0x127b7	        0x488d5002	                      lea rdx, [rax + 2]	      9344	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_17	IF_18	WHILE_2
0x127bb	        0x488955e0	             mov qword [rbp - 0x20], rdx	      9344	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_17	IF_18	WHILE_2
0x127bf	           0xfb700	                   movzx eax, word [rax]	      9344	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_17	IF_18	WHILE_2
0x127c2	          0x6685c0	                             test ax, ax	      9344	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_17	IF_18	WHILE_2
0x127c5	            0x74e2	                            je 0x40127e9	      9344	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_17	IF_18	WHILE_2
0x127c7	        0x837dc000	               cmp dword [rbp - 0x40], 0	      9347	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_17	IF_19
0x127cb	            0x7407	                            je 0x4012814	      9347	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_17	IF_19
0x127cd	    0xc745c8e70300	          mov dword [rbp - 0x38], 0x3e7 	      9348	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_17	IF_19
0x127d4	    0x8b0500000000	            mov eax, dword [0x0401281a] 	      9351	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20
0x127da	            0x85c0	                           test eax, eax	      9351	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20
0x127dc	            0x744e	                            je 0x401286c	      9351	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20
0x127de	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      9354	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20	FOR_1
0x127e1	          0x8945c0	             mov dword [rbp - 0x40], eax	      9354	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20	FOR_1
0x127e4	            0xeb3e	                           jmp 0x4012864	      9354	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20	FOR_1
0x127e6	    0x488b05000000	            mov rax, qword [0x0401282d] 	      9355	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20	FOR_1	IF_21
0x127ed	    0x488b15000000	            mov rdx, qword [0x04012834] 	      9355	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20	FOR_1	IF_21
0x127f4	          0x8b4dbc	             mov ecx, dword [rbp - 0x44]	      9355	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20	FOR_1	IF_21
0x127f7	          0x4863c9	                         movsxd rcx, ecx	      9355	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20	FOR_1	IF_21
0x127fa	        0x48c1e102	                              shl rcx, 2	      9355	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20	FOR_1	IF_21
0x127fe	          0x4801ca	                            add rdx, rcx	      9355	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20	FOR_1	IF_21
0x12801	            0x8b0a	                    mov ecx, dword [rdx]	      9355	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20	FOR_1	IF_21
0x12803	          0x8b55c0	             mov edx, dword [rbp - 0x40]	      9355	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20	FOR_1	IF_21
0x12806	             0x1ca	                            add edx, ecx	      9355	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20	FOR_1	IF_21
0x12808	            0x89d2	                            mov edx, edx	      9355	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20	FOR_1	IF_21
0x1280a	        0x48c1e202	                              shl rdx, 2	      9355	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20	FOR_1	IF_21
0x1280e	          0x4801d0	                            add rax, rdx	      9355	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20	FOR_1	IF_21
0x12811	            0x8b00	                    mov eax, dword [rax]	      9355	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20	FOR_1	IF_21
0x12813	            0x85c0	                           test eax, eax	      9355	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20	FOR_1	IF_21
0x12815	            0x7409	                            je 0x4012860	      9355	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20	FOR_1	IF_21
0x12817	    0xc745c8e70300	          mov dword [rbp - 0x38], 0x3e7 	      9357	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20	FOR_1	IF_21
0x1281e	            0xeb0c	                           jmp 0x401286c	      9358	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20	FOR_1	IF_21
0x12820	        0x8345c001	               add dword [rbp - 0x40], 1	      9354	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20	FOR_1
0x12824	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      9354	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20	FOR_1
0x12827	          0x3b45b8	             cmp eax, dword [rbp - 0x48]	      9354	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20	FOR_1
0x1282a	            0x7cba	                            jl 0x4012826	      9354	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_16	IF_20	FOR_1
0x1282c	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      9367	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22
0x1282f	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      9367	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22
0x12832	     0xf8dd5010000	                           jge 0x4012a4d	      9367	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22
0x12838	        0x837dc401	               cmp dword [rbp - 0x3c], 1	      9369	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_23
0x1283c	            0x7535	                           jne 0x40128b3	      9369	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_23
0x1283e	        0x837dd000	               cmp dword [rbp - 0x30], 0	      9371	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_23	IF_24
0x12842	            0x7422	                            je 0x40128a6	      9371	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_23	IF_24
0x12844	      0xe800000000	                          call 0x4012889	      9372	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_23	CALL_2
0x12849	            0xeb1b	                           jmp 0x40128a6	      9373	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_23	WHILE_3
0x1284b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9375	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_23	WHILE_3	CALL_3
0x1284f	          0x4889c7	                            mov rdi, rax	      9375	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_23	WHILE_3	CALL_3
0x12852	      0xe800000000	                          call 0x4012897	      9375	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_23	WHILE_3	CALL_3
0x12857	    0x8b0500000000	            mov eax, dword [0x0401289d] 	      9376	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_23	WHILE_3
0x1285d	          0x83e801	                              sub eax, 1	      9376	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_23	WHILE_3
0x12860	    0x890500000000	            mov dword [0x040128a6], eax 	      9376	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_23	WHILE_3
0x12866	    0x8b0500000000	            mov eax, dword [0x040128ac] 	      9373	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_23	WHILE_3
0x1286c	          0x3b45b8	             cmp eax, dword [rbp - 0x48]	      9373	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_23	WHILE_3
0x1286f	            0x7fda	                            jg 0x401288b	      9373	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_23	WHILE_3
0x12871	            0xeb68	                           jmp 0x401291b	      9373	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_23	WHILE_3
0x12873	        0x837dc402	               cmp dword [rbp - 0x3c], 2	      9379	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_7	IF_25
0x12877	            0x7521	                           jne 0x40128da	      9379	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_7	IF_25
0x12879	        0x837dd000	               cmp dword [rbp - 0x30], 0	      9381	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_7	IF_25	IF_26
0x1287d	            0x7405	                            je 0x40128c4	      9381	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_7	IF_25	IF_26
0x1287f	      0xe800000000	                          call 0x40128c4	      9382	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_7	IF_25	CALL_4
0x12884	      0xbf0d000000	                            mov edi, 0xd	      9383	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_7	IF_25	CALL_5
0x12889	      0xe800000000	                          call 0x40128ce	      9383	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_7	IF_25	CALL_5
0x1288e	    0xc70500000000	               mov dword [0x040128d8], 0	      9384	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_7	IF_25
0x12898	            0xeb41	                           jmp 0x401291b	      9384	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_7	IF_25
0x1289a	        0x837dc403	               cmp dword [rbp - 0x3c], 3	      9386	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_8	IF_27
0x1289e	            0x753b	                           jne 0x401291b	      9386	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_8	IF_27
0x128a0	        0x837dd000	               cmp dword [rbp - 0x30], 0	      9388	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_8	IF_27	IF_28
0x128a4	            0x7420	                            je 0x4012906	      9388	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_8	IF_27	IF_28
0x128a6	      0xe800000000	                          call 0x40128eb	      9389	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_8	IF_27	CALL_6
0x128ab	            0xeb19	                           jmp 0x4012906	      9390	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_8	IF_27	WHILE_4
0x128ad	      0xbf0a000000	                            mov edi, 0xa	      9392	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_8	IF_27	WHILE_4	CALL_7
0x128b2	      0xe800000000	                          call 0x40128f7	      9392	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_8	IF_27	WHILE_4	CALL_7
0x128b7	    0x8b0500000000	            mov eax, dword [0x040128fd] 	      9393	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_8	IF_27	WHILE_4
0x128bd	          0x83c001	                              add eax, 1	      9393	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_8	IF_27	WHILE_4
0x128c0	    0x890500000000	            mov dword [0x04012906], eax 	      9393	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_8	IF_27	WHILE_4
0x128c6	    0x8b0500000000	            mov eax, dword [0x0401290c] 	      9390	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_8	IF_27	WHILE_4
0x128cc	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	      9390	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_8	IF_27	WHILE_4
0x128cf	            0x7cdc	                            jl 0x40128ed	      9390	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_8	IF_27	WHILE_4
0x128d1	    0xc70500000000	               mov dword [0x0401291b], 0	      9395	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	ELSE_8	IF_27
0x128db	    0x8b0500000000	            mov eax, dword [0x04012921] 	      9398	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22
0x128e1	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      9398	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22
0x128e4	            0x29c2	                            sub edx, eax	      9398	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22
0x128e6	            0x89d0	                            mov eax, edx	      9398	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22
0x128e8	          0x8945c0	             mov dword [rbp - 0x40], eax	      9398	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22
0x128eb	        0x837dc000	               cmp dword [rbp - 0x40], 0	      9399	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29
0x128ef	     0xf8e18010000	                           jle 0x4012a4d	      9399	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29
0x128f5	    0x488b05000000	            mov rax, qword [0x0401293c] 	      9406	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	IF_30
0x128fc	           0xfb600	                   movzx eax, byte [rax]	      9406	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	IF_30
0x128ff	            0x84c0	                             test al, al	      9406	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	IF_30
0x12901	            0x743a	                            je 0x401297d	      9406	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	IF_30
0x12903	    0x488b05000000	            mov rax, qword [0x0401294a] 	      9406	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	IF_30
0x1290a	        0x4883c001	                              add rax, 1	      9406	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	IF_30
0x1290e	           0xfb600	                   movzx eax, byte [rax]	      9406	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	IF_30
0x12911	            0x84c0	                             test al, al	      9406	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	IF_30
0x12913	            0x7528	                           jne 0x401297d	      9406	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	IF_30
0x12915	            0xeb14	                           jmp 0x401296b	      9408	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	IF_30	WHILE_5
0x12917	    0x488b05000000	            mov rax, qword [0x0401295e] 	      9409	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	IF_30	CALL_8
0x1291e	           0xfb600	                   movzx eax, byte [rax]	      9409	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	IF_30	CALL_8
0x12921	           0xfb6c0	                           movzx eax, al	      9409	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	IF_30	CALL_8
0x12924	            0x89c7	                            mov edi, eax	      9409	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	IF_30	CALL_8
0x12926	      0xe800000000	                          call 0x401296b	      9409	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	IF_30	CALL_8
0x1292b	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      9408	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	IF_30	WHILE_5
0x1292e	          0x8d50ff	                      lea edx, [rax - 1]	      9408	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	IF_30	WHILE_5
0x12931	          0x8955c0	             mov dword [rbp - 0x40], edx	      9408	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	IF_30	WHILE_5
0x12934	            0x85c0	                           test eax, eax	      9408	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	IF_30	WHILE_5
0x12936	            0x7fdf	                            jg 0x4012957	      9408	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	IF_30	WHILE_5
0x12938	      0xe9c5000000	                           jmp 0x4012a42	      9406	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	IF_30
0x1293d	    0x488b05000000	            mov rax, qword [0x04012984] 	      9415	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9
0x12944	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      9415	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9
0x12947	          0x4863d2	                         movsxd rdx, edx	      9415	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9
0x1294a	        0x48c1e202	                              shl rdx, 2	      9415	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9
0x1294e	          0x4801d0	                            add rax, rdx	      9415	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9
0x12951	            0x8b00	                    mov eax, dword [rax]	      9415	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9
0x12953	    0x8b1500000000	            mov edx, dword [0x04012999] 	      9415	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9
0x12959	             0x1d0	                            add eax, edx	      9415	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9
0x1295b	          0x8945d8	             mov dword [rbp - 0x28], eax	      9415	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9
0x1295e	      0xe98c000000	                           jmp 0x4012a2f	      9416	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6
0x12963	    0x488b05000000	            mov rax, qword [0x040129aa] 	      9418	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	IF_31
0x1296a	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      9418	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	IF_31
0x1296d	          0x4863d2	                         movsxd rdx, edx	      9418	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	IF_31
0x12970	          0x4801d2	                            add rdx, rdx	      9418	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	IF_31
0x12973	          0x4801d0	                            add rax, rdx	      9418	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	IF_31
0x12976	           0xfb700	                   movzx eax, word [rax]	      9418	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	IF_31
0x12979	           0xfb7d0	                           movzx edx, ax	      9418	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	IF_31
0x1297c	    0x8b0500000000	            mov eax, dword [0x040129c2] 	      9418	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	IF_31
0x12982	            0x39c2	                            cmp edx, eax	      9418	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	IF_31
0x12984	            0x7405	                            je 0x40129cb	      9418	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	IF_31
0x12986	      0xe800000000	                          call 0x40129cb	      9419	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	CALL_9
0x1298b	      0xe800000000	                          call 0x40129d0	      9421	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	CALL_10
0x12990	    0x488b15000000	            mov rdx, qword [0x040129d7] 	      9423	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	CALL_11
0x12997	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      9423	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	CALL_11
0x1299a	            0x4898	                                    cdqe	      9423	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	CALL_11
0x1299c	          0x4801d0	                            add rax, rdx	      9423	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	CALL_11
0x1299f	           0xfb600	                   movzx eax, byte [rax]	      9423	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	CALL_11
0x129a2	           0xfb6c0	                           movzx eax, al	      9423	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	CALL_11
0x129a5	            0x89c7	                            mov edi, eax	      9423	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	CALL_11
0x129a7	      0xe800000000	                          call 0x40129ec	      9423	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	CALL_11
0x129ac	    0x8b0500000000	            mov eax, dword [0x040129f2] 	      9425	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	IF_32
0x129b2	      0x3dcc260000	                         cmp eax, 0x26cc	      9425	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	IF_32
0x129b7	            0x7532	                           jne 0x4012a2b	      9425	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	IF_32
0x129b9	    0x488b15000000	            mov rdx, qword [0x04012a00] 	      9426	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	IF_32
0x129c0	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      9426	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	IF_32
0x129c3	            0x4898	                                    cdqe	      9426	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	IF_32
0x129c5	          0x4801d0	                            add rax, rdx	      9426	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	IF_32
0x129c8	           0xfb600	                   movzx eax, byte [rax]	      9426	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	IF_32
0x129cb	            0x3c8e	                            cmp al, 0x8e	      9426	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	IF_32
0x129cd	            0x751c	                           jne 0x4012a2b	      9426	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	IF_32
0x129cf	    0x488b15000000	            mov rdx, qword [0x04012a16] 	      9427	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	CALL_12
0x129d6	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      9427	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	CALL_12
0x129d9	            0x4898	                                    cdqe	      9427	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	CALL_12
0x129db	          0x4801d0	                            add rax, rdx	      9427	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	CALL_12
0x129de	           0xfb600	                   movzx eax, byte [rax]	      9427	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	CALL_12
0x129e1	           0xfb6c0	                           movzx eax, al	      9427	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	CALL_12
0x129e4	            0x89c7	                            mov edi, eax	      9427	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	CALL_12
0x129e6	      0xe800000000	                          call 0x4012a2b	      9427	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6	CALL_12
0x129eb	        0x8345d801	               add dword [rbp - 0x28], 1	      9429	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6
0x129ef	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      9416	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6
0x129f2	          0x8d50ff	                      lea edx, [rax - 1]	      9416	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6
0x129f5	          0x8955c0	             mov dword [rbp - 0x40], edx	      9416	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6
0x129f8	            0x85c0	                           test eax, eax	      9416	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6
0x129fa	     0xf8f63ffffff	                            jg 0x40129a3	      9416	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22	IF_29	ELSE_9	WHILE_6
0x12a00	            0xeb0b	                           jmp 0x4012a4d	      9367	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22
0x12a02	            0xeb09	                           jmp 0x4012a4d	      9367	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22
0x12a04	    0xc745c8e70300	          mov dword [rbp - 0x38], 0x3e7 	      9436	screen.c	FUNCTION_78	IF_2	ELSE_10
0x12a0b	            0xeb01	                           jmp 0x4012a4e	      9436	screen.c	FUNCTION_78	IF_2	ELSE_10
0x12a0d	              0x90	                                     nop	      9367	screen.c	FUNCTION_78	IF_2	ELSE_1	IF_7	IF_22
0x12a0e	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      9438	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33
0x12a11	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      9438	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33
0x12a14	            0x7c54	                            jl 0x4012aaa	      9438	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33
0x12a16	        0x837dd000	               cmp dword [rbp - 0x30], 0	      9440	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33	IF_34
0x12a1a	            0x7405	                            je 0x4012a61	      9440	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33	IF_34
0x12a1c	      0xe800000000	                          call 0x4012a61	      9441	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33	CALL_13
0x12a21	    0x8b0500000000	            mov eax, dword [0x04012a67] 	      9442	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33	IF_35
0x12a27	          0x3945bc	            cmp dword [rbp - 0x44], eax 	      9442	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33	IF_35
0x12a2a	            0x752f	                           jne 0x4012a9b	      9442	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33	IF_35
0x12a2c	    0x8b0500000000	            mov eax, dword [0x04012a72] 	      9442	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33	IF_35
0x12a32	          0x3945b8	            cmp dword [rbp - 0x48], eax 	      9442	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33	IF_35
0x12a35	            0x7e24	                           jle 0x4012a9b	      9442	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33	IF_35
0x12a37	    0x488b05000000	            mov rax, qword [0x04012a7e] 	      9443	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33	IF_35
0x12a3e	           0xfb600	                   movzx eax, byte [rax]	      9443	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33	IF_35
0x12a41	            0x84c0	                             test al, al	      9443	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33	IF_35
0x12a43	            0x7416	                            je 0x4012a9b	      9443	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33	IF_35
0x12a45	    0x8b0500000000	            mov eax, dword [0x04012a8b] 	      9444	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33	CALL_14
0x12a4b	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      9444	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33	CALL_14
0x12a4e	            0x29c2	                            sub edx, eax	      9444	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33	CALL_14
0x12a50	            0x89d0	                            mov eax, edx	      9444	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33	CALL_14
0x12a52	            0x89c7	                            mov edi, eax	      9444	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33	CALL_14
0x12a54	      0xe800000000	                          call 0x4012a99	      9444	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33	CALL_14
0x12a59	            0xeb0f	                           jmp 0x4012aaa	      9444	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33	CALL_14
0x12a5b	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      9446	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33	CALL_15
0x12a5e	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      9446	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33	CALL_15
0x12a61	            0x89d6	                            mov esi, edx	      9446	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33	CALL_15
0x12a63	            0x89c7	                            mov edi, eax	      9446	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33	CALL_15
0x12a65	      0xe800000000	                          call 0x4012aaa	      9446	screen.c	FUNCTION_78	IF_2	ELSE_10	IF_33	CALL_15
0x12a6a	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      9448	screen.c	FUNCTION_78	IF_2
0x12a6d	    0x890500000000	            mov dword [0x04012ab3], eax 	      9448	screen.c	FUNCTION_78	IF_2
0x12a73	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      9449	screen.c	FUNCTION_78	IF_2
0x12a76	    0x890500000000	            mov dword [0x04012abc], eax 	      9449	screen.c	FUNCTION_78	IF_2
0x12a7c	            0xeb01	                           jmp 0x4012abf	      9449	screen.c	FUNCTION_78	IF_2
0x12a7e	              0x90	                                     nop	      9226	screen.c	FUNCTION_78	IF_1
0x12a7f	        0x4883c448	                           add rsp, 0x48	      9451	screen.c	FUNCTION_78
0x12a83	              0x5b	                                 pop rbx	      9451	screen.c	FUNCTION_78
0x12a84	              0x5d	                                 pop rbp	      9451	screen.c	FUNCTION_78
0x12a85	              0xc3	                                     ret	      9451	screen.c	FUNCTION_78
check_for_delay	DO,0:functions,0:CALL,2:ELSE,0:IF,2:WHILE,0:FOR,0:SWITCH,0	29
0x112c7	              0x55	                                push rbp	      8677	screen.c	FUNCTION_67
0x112c8	          0x4889e5	                            mov rbp, rsp	      8677	screen.c	FUNCTION_67
0x112cb	        0x4883ec10	                           sub rsp, 0x10	      8677	screen.c	FUNCTION_67
0x112cf	          0x897dfc	                mov dword [rbp - 4], edi	      8677	screen.c	FUNCTION_67
0x112d2	    0x8b0500000000	            mov eax, dword [0x04011318] 	      8678	screen.c	FUNCTION_67	IF_1
0x112d8	            0x85c0	                           test eax, eax	      8678	screen.c	FUNCTION_67	IF_1
0x112da	            0x7510	                           jne 0x401132c	      8678	screen.c	FUNCTION_67	IF_1
0x112dc	        0x837dfc00	                  cmp dword [rbp - 4], 0	      8678	screen.c	FUNCTION_67	IF_1
0x112e0	            0x744c	                            je 0x401136e	      8678	screen.c	FUNCTION_67	IF_1
0x112e2	    0x8b0500000000	            mov eax, dword [0x04011328] 	      8678	screen.c	FUNCTION_67	IF_1
0x112e8	            0x85c0	                           test eax, eax	      8678	screen.c	FUNCTION_67	IF_1
0x112ea	            0x7442	                            je 0x401136e	      8678	screen.c	FUNCTION_67	IF_1
0x112ec	    0x8b0500000000	            mov eax, dword [0x04011332] 	      8679	screen.c	FUNCTION_67	IF_1
0x112f2	            0x85c0	                           test eax, eax	      8679	screen.c	FUNCTION_67	IF_1
0x112f4	            0x7538	                           jne 0x401136e	      8679	screen.c	FUNCTION_67	IF_1
0x112f6	    0x8b0500000000	            mov eax, dword [0x0401133c] 	      8680	screen.c	FUNCTION_67	IF_1
0x112fc	            0x85c0	                           test eax, eax	      8680	screen.c	FUNCTION_67	IF_1
0x112fe	            0x752e	                           jne 0x401136e	      8680	screen.c	FUNCTION_67	IF_1
0x11300	      0xe800000000	                          call 0x4011345	      8682	screen.c	FUNCTION_67	IF_1	CALL_1
0x11305	      0xbe01000000	                              mov esi, 1	      8683	screen.c	FUNCTION_67	IF_1	CALL_2
0x1130a	      0xbfe8030000	                          mov edi, 0x3e8	      8683	screen.c	FUNCTION_67	IF_1	CALL_2
0x1130f	      0xe800000000	                          call 0x4011354	      8683	screen.c	FUNCTION_67	IF_1	CALL_2
0x11314	    0xc70500000000	               mov dword [0x0401135e], 0	      8684	screen.c	FUNCTION_67	IF_1
0x1131e	        0x837dfc00	                  cmp dword [rbp - 4], 0	      8685	screen.c	FUNCTION_67	IF_1	IF_2
0x11322	            0x740a	                            je 0x401136e	      8685	screen.c	FUNCTION_67	IF_1	IF_2
0x11324	    0xc70500000000	               mov dword [0x0401136e], 0	      8686	screen.c	FUNCTION_67	IF_1	IF_2
0x1132e	              0x90	                                     nop	      8688	screen.c	FUNCTION_67
0x1132f	              0xc9	                                   leave	      8688	screen.c	FUNCTION_67
0x11330	              0xc3	                                     ret	      8688	screen.c	FUNCTION_67
win_draw_end	DO,0:functions,0:CALL,44:ELSE,1:IF,11:WHILE,0:FOR,0:SWITCH,0	377
0x4339	              0x55	                                push rbp	      2339	screen.c	FUNCTION_21
0x433a	          0x4889e5	                            mov rbp, rsp	      2339	screen.c	FUNCTION_21
0x433d	        0x4883ec40	                           sub rsp, 0x40	      2339	screen.c	FUNCTION_21
0x4341	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      2339	screen.c	FUNCTION_21
0x4345	          0x8975d4	             mov dword [rbp - 0x2c], esi	      2339	screen.c	FUNCTION_21
0x4348	          0x8955d0	             mov dword [rbp - 0x30], edx	      2339	screen.c	FUNCTION_21
0x434b	          0x894dcc	             mov dword [rbp - 0x34], ecx	      2339	screen.c	FUNCTION_21
0x434e	        0x448945c8	             mov dword [rbp - 0x38], r8d	      2339	screen.c	FUNCTION_21
0x4352	        0x44894dc4	             mov dword [rbp - 0x3c], r9d	      2339	screen.c	FUNCTION_21
0x4356	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      2341	screen.c	FUNCTION_21
0x435d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2347	screen.c	FUNCTION_21	CALL_1
0x4361	      0xbe00000000	                              mov esi, 0	      2347	screen.c	FUNCTION_21	CALL_1
0x4366	          0x4889c7	                            mov rdi, rax	      2347	screen.c	FUNCTION_21	CALL_1
0x4369	      0xe8130a0000	             call sym.compute_foldcolumn	      2347	screen.c	FUNCTION_21	CALL_1
0x436e	          0x8945fc	                mov dword [rbp - 4], eax	      2347	screen.c	FUNCTION_21	CALL_1
0x4371	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2351	screen.c	FUNCTION_21	IF_1
0x4375	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      2351	screen.c	FUNCTION_21	IF_1
0x437b	            0x85c0	                           test eax, eax	      2351	screen.c	FUNCTION_21	IF_1
0x437d	     0xf84ba020000	                            je 0x400467d	      2351	screen.c	FUNCTION_21	IF_1
0x4383	          0x8b45fc	                mov eax, dword [rbp - 4]	      2355	screen.c	FUNCTION_21	IF_1
0x4386	          0x8945ec	             mov dword [rbp - 0x14], eax	      2355	screen.c	FUNCTION_21	IF_1
0x4389	        0x837dec00	               cmp dword [rbp - 0x14], 0	      2357	screen.c	FUNCTION_21	IF_1	IF_2
0x438d	     0xf8ea8000000	                           jle 0x400447b	      2357	screen.c	FUNCTION_21	IF_1	IF_2
0x4393	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2360	screen.c	FUNCTION_21	IF_1	IF_2	IF_3
0x4397	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2360	screen.c	FUNCTION_21	IF_1	IF_2	IF_3
0x439d	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      2360	screen.c	FUNCTION_21	IF_1	IF_2	IF_3
0x43a0	            0x7d0d	                           jge 0x40043ef	      2360	screen.c	FUNCTION_21	IF_1	IF_2	IF_3
0x43a2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2361	screen.c	FUNCTION_21	IF_1	IF_2	IF_3
0x43a6	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2361	screen.c	FUNCTION_21	IF_1	IF_2	IF_3
0x43ac	          0x8945ec	             mov dword [rbp - 0x14], eax	      2361	screen.c	FUNCTION_21	IF_1	IF_2	IF_3
0x43af	    0x8b1500000000	            mov edx, dword [0x040043f5] 	      2362	screen.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x43b5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2363	screen.c	FUNCTION_21	IF_1	IF_2	CALL_6
0x43b9	    0x8b88a8000000	            mov ecx, dword [rax + 0xa8] 	      2363	screen.c	FUNCTION_21	IF_1	IF_2	CALL_6
0x43bf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2363	screen.c	FUNCTION_21	IF_1	IF_2	CALL_6
0x43c3	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2363	screen.c	FUNCTION_21	IF_1	IF_2	CALL_6
0x43c9	        0x448d1401	                   lea r10d, [rcx + rax]	      2362	screen.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x43cd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2363	screen.c	FUNCTION_21	IF_1	IF_2	CALL_6
0x43d1	    0x8b88a8000000	            mov ecx, dword [rax + 0xa8] 	      2363	screen.c	FUNCTION_21	IF_1	IF_2	CALL_6
0x43d7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2363	screen.c	FUNCTION_21	IF_1	IF_2	CALL_6
0x43db	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2363	screen.c	FUNCTION_21	IF_1	IF_2	CALL_6
0x43e1	             0x1c8	                            add eax, ecx	      2363	screen.c	FUNCTION_21	IF_1	IF_2	CALL_6
0x43e3	          0x2b45ec	             sub eax, dword [rbp - 0x14]	      2362	screen.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x43e6	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      2362	screen.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x43ea	    0x8bb19c000000	            mov esi, dword [rcx + 0x9c] 	      2362	screen.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x43f0	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      2362	screen.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x43f4	    0x8b89a8010000	           mov ecx, dword [rcx + 0x1a8] 	      2362	screen.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x43fa	             0x1ce	                            add esi, ecx	      2362	screen.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x43fc	          0x8b4dc8	             mov ecx, dword [rbp - 0x38]	      2362	screen.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x43ff	             0x1ce	                            add esi, ecx	      2362	screen.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x4401	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      2362	screen.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x4405	    0x8bb99c000000	            mov edi, dword [rcx + 0x9c] 	      2362	screen.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x440b	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      2362	screen.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x440f	    0x8b89a8010000	           mov ecx, dword [rcx + 0x1a8] 	      2362	screen.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x4415	             0x1cf	                            add edi, ecx	      2362	screen.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x4417	          0x8b4dcc	             mov ecx, dword [rbp - 0x34]	      2362	screen.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x441a	             0x1cf	                            add edi, ecx	      2362	screen.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x441c	        0x4883ec08	                              sub rsp, 8	      2362	screen.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x4420	              0x52	                                push rdx	      2362	screen.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x4421	    0x41b920000000	                           mov r9d, 0x20	      2362	screen.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x4427	    0x41b820000000	                           mov r8d, 0x20	      2362	screen.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x442d	          0x4489d1	                           mov ecx, r10d	      2362	screen.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x4430	            0x89c2	                            mov edx, eax	      2362	screen.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x4432	      0xe800000000	                          call 0x4004477	      2362	screen.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x4437	        0x4883c410	                           add rsp, 0x10	      2362	screen.c	FUNCTION_21	IF_1	IF_2	CALL_4
0x443b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2368	screen.c	FUNCTION_21	IF_1	IF_4	CALL_8
0x443f	          0x4889c7	                            mov rdi, rax	      2368	screen.c	FUNCTION_21	IF_1	IF_4	CALL_8
0x4442	      0xe800000000	                          call 0x4004487	      2368	screen.c	FUNCTION_21	IF_1	IF_4	CALL_8
0x4447	            0x85c0	                           test eax, eax	      2368	screen.c	FUNCTION_21	IF_1	IF_4	CALL_8
0x4449	     0xf84be000000	                            je 0x400454d	      2368	screen.c	FUNCTION_21	IF_1	IF_4	CALL_8
0x444f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2370	screen.c	FUNCTION_21	IF_1	IF_4
0x4452	          0x83c002	                              add eax, 2	      2370	screen.c	FUNCTION_21	IF_1	IF_4
0x4455	          0x8945f0	             mov dword [rbp - 0x10], eax	      2370	screen.c	FUNCTION_21	IF_1	IF_4
0x4458	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2373	screen.c	FUNCTION_21	IF_1	IF_4	IF_5
0x445c	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2373	screen.c	FUNCTION_21	IF_1	IF_4	IF_5
0x4462	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	      2373	screen.c	FUNCTION_21	IF_1	IF_4	IF_5
0x4465	            0x7d0d	                           jge 0x40044b4	      2373	screen.c	FUNCTION_21	IF_1	IF_4	IF_5
0x4467	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2374	screen.c	FUNCTION_21	IF_1	IF_4	IF_5
0x446b	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2374	screen.c	FUNCTION_21	IF_1	IF_4	IF_5
0x4471	          0x8945f0	             mov dword [rbp - 0x10], eax	      2374	screen.c	FUNCTION_21	IF_1	IF_4	IF_5
0x4474	    0x8b0d00000000	            mov ecx, dword [0x040044ba] 	      2375	screen.c	FUNCTION_21	IF_1	IF_4	CALL_11
0x447a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2376	screen.c	FUNCTION_21	IF_1	IF_4	CALL_13
0x447e	    0x8b90a8000000	            mov edx, dword [rax + 0xa8] 	      2376	screen.c	FUNCTION_21	IF_1	IF_4	CALL_13
0x4484	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2376	screen.c	FUNCTION_21	IF_1	IF_4	CALL_13
0x4488	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2376	screen.c	FUNCTION_21	IF_1	IF_4	CALL_13
0x448e	             0x1d0	                            add eax, edx	      2376	screen.c	FUNCTION_21	IF_1	IF_4	CALL_13
0x4490	          0x2b45ec	             sub eax, dword [rbp - 0x14]	      2375	screen.c	FUNCTION_21	IF_1	IF_4	CALL_11
0x4493	            0x89c2	                            mov edx, eax	      2375	screen.c	FUNCTION_21	IF_1	IF_4	CALL_11
0x4495	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2376	screen.c	FUNCTION_21	IF_1	IF_4	CALL_13
0x4499	    0x8bb0a8000000	            mov esi, dword [rax + 0xa8] 	      2376	screen.c	FUNCTION_21	IF_1	IF_4	CALL_13
0x449f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2376	screen.c	FUNCTION_21	IF_1	IF_4	CALL_13
0x44a3	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2376	screen.c	FUNCTION_21	IF_1	IF_4	CALL_13
0x44a9	             0x1f0	                            add eax, esi	      2376	screen.c	FUNCTION_21	IF_1	IF_4	CALL_13
0x44ab	          0x2b45f0	             sub eax, dword [rbp - 0x10]	      2375	screen.c	FUNCTION_21	IF_1	IF_4	CALL_11
0x44ae	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	      2375	screen.c	FUNCTION_21	IF_1	IF_4	CALL_11
0x44b2	    0x8bbe9c000000	            mov edi, dword [rsi + 0x9c] 	      2375	screen.c	FUNCTION_21	IF_1	IF_4	CALL_11
0x44b8	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	      2375	screen.c	FUNCTION_21	IF_1	IF_4	CALL_11
0x44bc	    0x8bb6a8010000	           mov esi, dword [rsi + 0x1a8] 	      2375	screen.c	FUNCTION_21	IF_1	IF_4	CALL_11
0x44c2	             0x1f7	                            add edi, esi	      2375	screen.c	FUNCTION_21	IF_1	IF_4	CALL_11
0x44c4	          0x8b75c8	             mov esi, dword [rbp - 0x38]	      2375	screen.c	FUNCTION_21	IF_1	IF_4	CALL_11
0x44c7	        0x448d1437	                   lea r10d, [rdi + rsi]	      2375	screen.c	FUNCTION_21	IF_1	IF_4	CALL_11
0x44cb	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	      2375	screen.c	FUNCTION_21	IF_1	IF_4	CALL_11
0x44cf	    0x8bbe9c000000	            mov edi, dword [rsi + 0x9c] 	      2375	screen.c	FUNCTION_21	IF_1	IF_4	CALL_11
0x44d5	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	      2375	screen.c	FUNCTION_21	IF_1	IF_4	CALL_11
0x44d9	    0x8bb6a8010000	           mov esi, dword [rsi + 0x1a8] 	      2375	screen.c	FUNCTION_21	IF_1	IF_4	CALL_11
0x44df	             0x1f7	                            add edi, esi	      2375	screen.c	FUNCTION_21	IF_1	IF_4	CALL_11
0x44e1	          0x8b75cc	             mov esi, dword [rbp - 0x34]	      2375	screen.c	FUNCTION_21	IF_1	IF_4	CALL_11
0x44e4	             0x1f7	                            add edi, esi	      2375	screen.c	FUNCTION_21	IF_1	IF_4	CALL_11
0x44e6	        0x4883ec08	                              sub rsp, 8	      2375	screen.c	FUNCTION_21	IF_1	IF_4	CALL_11
0x44ea	              0x51	                                push rcx	      2375	screen.c	FUNCTION_21	IF_1	IF_4	CALL_11
0x44eb	    0x41b920000000	                           mov r9d, 0x20	      2375	screen.c	FUNCTION_21	IF_1	IF_4	CALL_11
0x44f1	    0x41b820000000	                           mov r8d, 0x20	      2375	screen.c	FUNCTION_21	IF_1	IF_4	CALL_11
0x44f7	            0x89d1	                            mov ecx, edx	      2375	screen.c	FUNCTION_21	IF_1	IF_4	CALL_11
0x44f9	            0x89c2	                            mov edx, eax	      2375	screen.c	FUNCTION_21	IF_1	IF_4	CALL_11
0x44fb	          0x4489d6	                           mov esi, r10d	      2375	screen.c	FUNCTION_21	IF_1	IF_4	CALL_11
0x44fe	      0xe800000000	                          call 0x4004543	      2375	screen.c	FUNCTION_21	IF_1	IF_4	CALL_11
0x4503	        0x4883c410	                           add rsp, 0x10	      2375	screen.c	FUNCTION_21	IF_1	IF_4	CALL_11
0x4507	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      2378	screen.c	FUNCTION_21	IF_1	IF_4
0x450a	          0x8945ec	             mov dword [rbp - 0x14], eax	      2378	screen.c	FUNCTION_21	IF_1	IF_4
0x450d	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2383	screen.c	FUNCTION_21	IF_1	CALL_19
0x4510	            0x4898	                                    cdqe	      2381	screen.c	FUNCTION_21	IF_1	CALL_17
0x4512	    0x8b0c85000000	                  mov ecx, dword [rax*4]	      2381	screen.c	FUNCTION_21	IF_1	CALL_17
0x4519	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2382	screen.c	FUNCTION_21	IF_1	CALL_18
0x451d	    0x8b90a8000000	            mov edx, dword [rax + 0xa8] 	      2382	screen.c	FUNCTION_21	IF_1	CALL_18
0x4523	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2382	screen.c	FUNCTION_21	IF_1	CALL_18
0x4527	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2382	screen.c	FUNCTION_21	IF_1	CALL_18
0x452d	             0x1d0	                            add eax, edx	      2382	screen.c	FUNCTION_21	IF_1	CALL_18
0x452f	          0x83e801	                              sub eax, 1	      2382	screen.c	FUNCTION_21	IF_1	CALL_18
0x4532	          0x2b45ec	             sub eax, dword [rbp - 0x14]	      2381	screen.c	FUNCTION_21	IF_1	CALL_17
0x4535	            0x89c2	                            mov edx, eax	      2381	screen.c	FUNCTION_21	IF_1	CALL_17
0x4537	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2381	screen.c	FUNCTION_21	IF_1	CALL_17
0x453b	    0x8b80a8000000	            mov eax, dword [rax + 0xa8] 	      2381	screen.c	FUNCTION_21	IF_1	CALL_17
0x4541	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	      2381	screen.c	FUNCTION_21	IF_1	CALL_17
0x4545	    0x8bbe9c000000	            mov edi, dword [rsi + 0x9c] 	      2381	screen.c	FUNCTION_21	IF_1	CALL_17
0x454b	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	      2381	screen.c	FUNCTION_21	IF_1	CALL_17
0x454f	    0x8bb6a8010000	           mov esi, dword [rsi + 0x1a8] 	      2381	screen.c	FUNCTION_21	IF_1	CALL_17
0x4555	             0x1f7	                            add edi, esi	      2381	screen.c	FUNCTION_21	IF_1	CALL_17
0x4557	          0x8b75c8	             mov esi, dword [rbp - 0x38]	      2381	screen.c	FUNCTION_21	IF_1	CALL_17
0x455a	        0x448d1437	                   lea r10d, [rdi + rsi]	      2381	screen.c	FUNCTION_21	IF_1	CALL_17
0x455e	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	      2381	screen.c	FUNCTION_21	IF_1	CALL_17
0x4562	    0x8bbe9c000000	            mov edi, dword [rsi + 0x9c] 	      2381	screen.c	FUNCTION_21	IF_1	CALL_17
0x4568	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	      2381	screen.c	FUNCTION_21	IF_1	CALL_17
0x456c	    0x8bb6a8010000	           mov esi, dword [rsi + 0x1a8] 	      2381	screen.c	FUNCTION_21	IF_1	CALL_17
0x4572	             0x1f7	                            add edi, esi	      2381	screen.c	FUNCTION_21	IF_1	CALL_17
0x4574	          0x8b75cc	             mov esi, dword [rbp - 0x34]	      2381	screen.c	FUNCTION_21	IF_1	CALL_17
0x4577	             0x1f7	                            add edi, esi	      2381	screen.c	FUNCTION_21	IF_1	CALL_17
0x4579	        0x448b45d0	             mov r8d, dword [rbp - 0x30]	      2381	screen.c	FUNCTION_21	IF_1	CALL_17
0x457d	          0x8b75d0	             mov esi, dword [rbp - 0x30]	      2381	screen.c	FUNCTION_21	IF_1	CALL_17
0x4580	        0x4883ec08	                              sub rsp, 8	      2381	screen.c	FUNCTION_21	IF_1	CALL_17
0x4584	              0x51	                                push rcx	      2381	screen.c	FUNCTION_21	IF_1	CALL_17
0x4585	          0x4589c1	                            mov r9d, r8d	      2381	screen.c	FUNCTION_21	IF_1	CALL_17
0x4588	          0x4189f0	                            mov r8d, esi	      2381	screen.c	FUNCTION_21	IF_1	CALL_17
0x458b	            0x89d1	                            mov ecx, edx	      2381	screen.c	FUNCTION_21	IF_1	CALL_17
0x458d	            0x89c2	                            mov edx, eax	      2381	screen.c	FUNCTION_21	IF_1	CALL_17
0x458f	          0x4489d6	                           mov esi, r10d	      2381	screen.c	FUNCTION_21	IF_1	CALL_17
0x4592	      0xe800000000	                          call 0x40045d7	      2381	screen.c	FUNCTION_21	IF_1	CALL_17
0x4597	        0x4883c410	                           add rsp, 0x10	      2381	screen.c	FUNCTION_21	IF_1	CALL_17
0x459b	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2386	screen.c	FUNCTION_21	IF_1	CALL_25
0x459e	            0x4898	                                    cdqe	      2384	screen.c	FUNCTION_21	IF_1	CALL_22
0x45a0	    0x8b0c85000000	                  mov ecx, dword [rax*4]	      2384	screen.c	FUNCTION_21	IF_1	CALL_22
0x45a7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2385	screen.c	FUNCTION_21	IF_1	CALL_24
0x45ab	    0x8b90a8000000	            mov edx, dword [rax + 0xa8] 	      2385	screen.c	FUNCTION_21	IF_1	CALL_24
0x45b1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2385	screen.c	FUNCTION_21	IF_1	CALL_24
0x45b5	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2385	screen.c	FUNCTION_21	IF_1	CALL_24
0x45bb	             0x1d0	                            add eax, edx	      2385	screen.c	FUNCTION_21	IF_1	CALL_24
0x45bd	          0x2b45ec	             sub eax, dword [rbp - 0x14]	      2384	screen.c	FUNCTION_21	IF_1	CALL_22
0x45c0	            0x89c2	                            mov edx, eax	      2384	screen.c	FUNCTION_21	IF_1	CALL_22
0x45c2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2385	screen.c	FUNCTION_21	IF_1	CALL_24
0x45c6	    0x8bb0a8000000	            mov esi, dword [rax + 0xa8] 	      2385	screen.c	FUNCTION_21	IF_1	CALL_24
0x45cc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2385	screen.c	FUNCTION_21	IF_1	CALL_24
0x45d0	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2385	screen.c	FUNCTION_21	IF_1	CALL_24
0x45d6	             0x1f0	                            add eax, esi	      2385	screen.c	FUNCTION_21	IF_1	CALL_24
0x45d8	          0x83e801	                              sub eax, 1	      2385	screen.c	FUNCTION_21	IF_1	CALL_24
0x45db	          0x2b45ec	             sub eax, dword [rbp - 0x14]	      2384	screen.c	FUNCTION_21	IF_1	CALL_22
0x45de	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	      2384	screen.c	FUNCTION_21	IF_1	CALL_22
0x45e2	    0x8bbe9c000000	            mov edi, dword [rsi + 0x9c] 	      2384	screen.c	FUNCTION_21	IF_1	CALL_22
0x45e8	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	      2384	screen.c	FUNCTION_21	IF_1	CALL_22
0x45ec	    0x8bb6a8010000	           mov esi, dword [rsi + 0x1a8] 	      2384	screen.c	FUNCTION_21	IF_1	CALL_22
0x45f2	             0x1f7	                            add edi, esi	      2384	screen.c	FUNCTION_21	IF_1	CALL_22
0x45f4	          0x8b75c8	             mov esi, dword [rbp - 0x38]	      2384	screen.c	FUNCTION_21	IF_1	CALL_22
0x45f7	        0x448d1437	                   lea r10d, [rdi + rsi]	      2384	screen.c	FUNCTION_21	IF_1	CALL_22
0x45fb	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	      2384	screen.c	FUNCTION_21	IF_1	CALL_22
0x45ff	    0x8bbe9c000000	            mov edi, dword [rsi + 0x9c] 	      2384	screen.c	FUNCTION_21	IF_1	CALL_22
0x4605	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	      2384	screen.c	FUNCTION_21	IF_1	CALL_22
0x4609	    0x8bb6a8010000	           mov esi, dword [rsi + 0x1a8] 	      2384	screen.c	FUNCTION_21	IF_1	CALL_22
0x460f	             0x1f7	                            add edi, esi	      2384	screen.c	FUNCTION_21	IF_1	CALL_22
0x4611	          0x8b75cc	             mov esi, dword [rbp - 0x34]	      2384	screen.c	FUNCTION_21	IF_1	CALL_22
0x4614	             0x1f7	                            add edi, esi	      2384	screen.c	FUNCTION_21	IF_1	CALL_22
0x4616	        0x448b45d0	             mov r8d, dword [rbp - 0x30]	      2384	screen.c	FUNCTION_21	IF_1	CALL_22
0x461a	          0x8b75d4	             mov esi, dword [rbp - 0x2c]	      2384	screen.c	FUNCTION_21	IF_1	CALL_22
0x461d	        0x4883ec08	                              sub rsp, 8	      2384	screen.c	FUNCTION_21	IF_1	CALL_22
0x4621	              0x51	                                push rcx	      2384	screen.c	FUNCTION_21	IF_1	CALL_22
0x4622	          0x4589c1	                            mov r9d, r8d	      2384	screen.c	FUNCTION_21	IF_1	CALL_22
0x4625	          0x4189f0	                            mov r8d, esi	      2384	screen.c	FUNCTION_21	IF_1	CALL_22
0x4628	            0x89d1	                            mov ecx, edx	      2384	screen.c	FUNCTION_21	IF_1	CALL_22
0x462a	            0x89c2	                            mov edx, eax	      2384	screen.c	FUNCTION_21	IF_1	CALL_22
0x462c	          0x4489d6	                           mov esi, r10d	      2384	screen.c	FUNCTION_21	IF_1	CALL_22
0x462f	      0xe800000000	                          call 0x4004674	      2384	screen.c	FUNCTION_21	IF_1	CALL_22
0x4634	        0x4883c410	                           add rsp, 0x10	      2384	screen.c	FUNCTION_21	IF_1	CALL_22
0x4638	      0xe9a8020000	                           jmp 0x4004925	      2384	screen.c	FUNCTION_21	IF_1	CALL_22
0x463d	    0x8b0500000000	            mov eax, dword [0x04004683] 	      2392	screen.c	FUNCTION_21	ELSE_1	IF_6
0x4643	            0x85c0	                           test eax, eax	      2392	screen.c	FUNCTION_21	ELSE_1	IF_6
0x4645	     0xf84ab000000	                            je 0x4004736	      2392	screen.c	FUNCTION_21	ELSE_1	IF_6
0x464b	    0x488b05000000	            mov rax, qword [0x04004692] 	      2392	screen.c	FUNCTION_21	ELSE_1	IF_6
0x4652	        0x483945d8	            cmp qword [rbp - 0x28], rax 	      2392	screen.c	FUNCTION_21	ELSE_1	IF_6
0x4656	     0xf859a000000	                           jne 0x4004736	      2392	screen.c	FUNCTION_21	ELSE_1	IF_6
0x465c	    0xc745ec010000	               mov dword [rbp - 0x14], 1	      2395	screen.c	FUNCTION_21	ELSE_1	IF_6
0x4663	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2396	screen.c	FUNCTION_21	ELSE_1	IF_6	IF_7
0x4667	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2396	screen.c	FUNCTION_21	ELSE_1	IF_6	IF_7
0x466d	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      2396	screen.c	FUNCTION_21	ELSE_1	IF_6	IF_7
0x4670	            0x7d0d	                           jge 0x40046bf	      2396	screen.c	FUNCTION_21	ELSE_1	IF_6	IF_7
0x4672	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2397	screen.c	FUNCTION_21	ELSE_1	IF_6	IF_7
0x4676	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2397	screen.c	FUNCTION_21	ELSE_1	IF_6	IF_7
0x467c	          0x8945ec	             mov dword [rbp - 0x14], eax	      2397	screen.c	FUNCTION_21	ELSE_1	IF_6	IF_7
0x467f	    0x8b1500000000	            mov edx, dword [0x040046c5] 	      2398	screen.c	FUNCTION_21	ELSE_1	IF_6	CALL_28
0x4685	    0x448b05000000	            mov r8d, dword [0x040046cc] 	      2398	screen.c	FUNCTION_21	ELSE_1	IF_6	CALL_28
0x468c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2399	screen.c	FUNCTION_21	ELSE_1	IF_6
0x4690	    0x8b88a8000000	            mov ecx, dword [rax + 0xa8] 	      2399	screen.c	FUNCTION_21	ELSE_1	IF_6
0x4696	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2398	screen.c	FUNCTION_21	ELSE_1	IF_6	CALL_28
0x4699	        0x448d1401	                   lea r10d, [rcx + rax]	      2398	screen.c	FUNCTION_21	ELSE_1	IF_6	CALL_28
0x469d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2398	screen.c	FUNCTION_21	ELSE_1	IF_6	CALL_28
0x46a1	    0x8b80a8000000	            mov eax, dword [rax + 0xa8] 	      2398	screen.c	FUNCTION_21	ELSE_1	IF_6	CALL_28
0x46a7	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      2398	screen.c	FUNCTION_21	ELSE_1	IF_6	CALL_28
0x46ab	    0x8bb19c000000	            mov esi, dword [rcx + 0x9c] 	      2398	screen.c	FUNCTION_21	ELSE_1	IF_6	CALL_28
0x46b1	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      2398	screen.c	FUNCTION_21	ELSE_1	IF_6	CALL_28
0x46b5	    0x8b89a8010000	           mov ecx, dword [rcx + 0x1a8] 	      2398	screen.c	FUNCTION_21	ELSE_1	IF_6	CALL_28
0x46bb	             0x1ce	                            add esi, ecx	      2398	screen.c	FUNCTION_21	ELSE_1	IF_6	CALL_28
0x46bd	          0x8b4dc8	             mov ecx, dword [rbp - 0x38]	      2398	screen.c	FUNCTION_21	ELSE_1	IF_6	CALL_28
0x46c0	             0x1ce	                            add esi, ecx	      2398	screen.c	FUNCTION_21	ELSE_1	IF_6	CALL_28
0x46c2	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      2398	screen.c	FUNCTION_21	ELSE_1	IF_6	CALL_28
0x46c6	    0x8bb99c000000	            mov edi, dword [rcx + 0x9c] 	      2398	screen.c	FUNCTION_21	ELSE_1	IF_6	CALL_28
0x46cc	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      2398	screen.c	FUNCTION_21	ELSE_1	IF_6	CALL_28
0x46d0	    0x8b89a8010000	           mov ecx, dword [rcx + 0x1a8] 	      2398	screen.c	FUNCTION_21	ELSE_1	IF_6	CALL_28
0x46d6	             0x1cf	                            add edi, ecx	      2398	screen.c	FUNCTION_21	ELSE_1	IF_6	CALL_28
0x46d8	          0x8b4dcc	             mov ecx, dword [rbp - 0x34]	      2398	screen.c	FUNCTION_21	ELSE_1	IF_6	CALL_28
0x46db	             0x1cf	                            add edi, ecx	      2398	screen.c	FUNCTION_21	ELSE_1	IF_6	CALL_28
0x46dd	        0x4883ec08	                              sub rsp, 8	      2398	screen.c	FUNCTION_21	ELSE_1	IF_6	CALL_28
0x46e1	              0x52	                                push rdx	      2398	screen.c	FUNCTION_21	ELSE_1	IF_6	CALL_28
0x46e2	    0x41b920000000	                           mov r9d, 0x20	      2398	screen.c	FUNCTION_21	ELSE_1	IF_6	CALL_28
0x46e8	          0x4489d1	                           mov ecx, r10d	      2398	screen.c	FUNCTION_21	ELSE_1	IF_6	CALL_28
0x46eb	            0x89c2	                            mov edx, eax	      2398	screen.c	FUNCTION_21	ELSE_1	IF_6	CALL_28
0x46ed	      0xe800000000	                          call 0x4004732	      2398	screen.c	FUNCTION_21	ELSE_1	IF_6	CALL_28
0x46f2	        0x4883c410	                           add rsp, 0x10	      2398	screen.c	FUNCTION_21	ELSE_1	IF_6	CALL_28
0x46f6	        0x837dfc00	                  cmp dword [rbp - 4], 0	      2404	screen.c	FUNCTION_21	ELSE_1	IF_8
0x46fa	     0xf8ea6000000	                           jle 0x40047e6	      2404	screen.c	FUNCTION_21	ELSE_1	IF_8
0x4700	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      2406	screen.c	FUNCTION_21	ELSE_1	IF_8
0x4703	          0x8b45fc	                mov eax, dword [rbp - 4]	      2406	screen.c	FUNCTION_21	ELSE_1	IF_8
0x4706	             0x1d0	                            add eax, edx	      2406	screen.c	FUNCTION_21	ELSE_1	IF_8
0x4708	          0x8945f4	              mov dword [rbp - 0xc], eax	      2406	screen.c	FUNCTION_21	ELSE_1	IF_8
0x470b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2409	screen.c	FUNCTION_21	ELSE_1	IF_8	IF_9
0x470f	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2409	screen.c	FUNCTION_21	ELSE_1	IF_8	IF_9
0x4715	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	      2409	screen.c	FUNCTION_21	ELSE_1	IF_8	IF_9
0x4718	            0x7d0d	                           jge 0x4004767	      2409	screen.c	FUNCTION_21	ELSE_1	IF_8	IF_9
0x471a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2410	screen.c	FUNCTION_21	ELSE_1	IF_8	IF_9
0x471e	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2410	screen.c	FUNCTION_21	ELSE_1	IF_8	IF_9
0x4724	          0x8945f4	              mov dword [rbp - 0xc], eax	      2410	screen.c	FUNCTION_21	ELSE_1	IF_8	IF_9
0x4727	    0x8b0500000000	            mov eax, dword [0x0400476d] 	      2411	screen.c	FUNCTION_21	ELSE_1	IF_8	CALL_32
0x472d	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2412	screen.c	FUNCTION_21	ELSE_1	IF_8
0x4731	    0x8b8aa8000000	            mov ecx, dword [rdx + 0xa8] 	      2412	screen.c	FUNCTION_21	ELSE_1	IF_8
0x4737	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      2411	screen.c	FUNCTION_21	ELSE_1	IF_8	CALL_32
0x473a	             0x1d1	                            add ecx, edx	      2411	screen.c	FUNCTION_21	ELSE_1	IF_8	CALL_32
0x473c	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2412	screen.c	FUNCTION_21	ELSE_1	IF_8
0x4740	    0x8bb2a8000000	            mov esi, dword [rdx + 0xa8] 	      2412	screen.c	FUNCTION_21	ELSE_1	IF_8
0x4746	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      2411	screen.c	FUNCTION_21	ELSE_1	IF_8	CALL_32
0x4749	        0x448d1416	                   lea r10d, [rsi + rdx]	      2411	screen.c	FUNCTION_21	ELSE_1	IF_8	CALL_32
0x474d	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2411	screen.c	FUNCTION_21	ELSE_1	IF_8	CALL_32
0x4751	    0x8bb29c000000	            mov esi, dword [rdx + 0x9c] 	      2411	screen.c	FUNCTION_21	ELSE_1	IF_8	CALL_32
0x4757	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2411	screen.c	FUNCTION_21	ELSE_1	IF_8	CALL_32
0x475b	    0x8b92a8010000	           mov edx, dword [rdx + 0x1a8] 	      2411	screen.c	FUNCTION_21	ELSE_1	IF_8	CALL_32
0x4761	             0x1d6	                            add esi, edx	      2411	screen.c	FUNCTION_21	ELSE_1	IF_8	CALL_32
0x4763	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      2411	screen.c	FUNCTION_21	ELSE_1	IF_8	CALL_32
0x4766	             0x1d6	                            add esi, edx	      2411	screen.c	FUNCTION_21	ELSE_1	IF_8	CALL_32
0x4768	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2411	screen.c	FUNCTION_21	ELSE_1	IF_8	CALL_32
0x476c	    0x8bba9c000000	            mov edi, dword [rdx + 0x9c] 	      2411	screen.c	FUNCTION_21	ELSE_1	IF_8	CALL_32
0x4772	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2411	screen.c	FUNCTION_21	ELSE_1	IF_8	CALL_32
0x4776	    0x8b92a8010000	           mov edx, dword [rdx + 0x1a8] 	      2411	screen.c	FUNCTION_21	ELSE_1	IF_8	CALL_32
0x477c	             0x1d7	                            add edi, edx	      2411	screen.c	FUNCTION_21	ELSE_1	IF_8	CALL_32
0x477e	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      2411	screen.c	FUNCTION_21	ELSE_1	IF_8	CALL_32
0x4781	             0x1d7	                            add edi, edx	      2411	screen.c	FUNCTION_21	ELSE_1	IF_8	CALL_32
0x4783	        0x4883ec08	                              sub rsp, 8	      2411	screen.c	FUNCTION_21	ELSE_1	IF_8	CALL_32
0x4787	              0x50	                                push rax	      2411	screen.c	FUNCTION_21	ELSE_1	IF_8	CALL_32
0x4788	    0x41b920000000	                           mov r9d, 0x20	      2411	screen.c	FUNCTION_21	ELSE_1	IF_8	CALL_32
0x478e	    0x41b820000000	                           mov r8d, 0x20	      2411	screen.c	FUNCTION_21	ELSE_1	IF_8	CALL_32
0x4794	          0x4489d2	                           mov edx, r10d	      2411	screen.c	FUNCTION_21	ELSE_1	IF_8	CALL_32
0x4797	      0xe800000000	                          call 0x40047dc	      2411	screen.c	FUNCTION_21	ELSE_1	IF_8	CALL_32
0x479c	        0x4883c410	                           add rsp, 0x10	      2411	screen.c	FUNCTION_21	ELSE_1	IF_8	CALL_32
0x47a0	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2414	screen.c	FUNCTION_21	ELSE_1	IF_8
0x47a3	          0x8945ec	             mov dword [rbp - 0x14], eax	      2414	screen.c	FUNCTION_21	ELSE_1	IF_8
0x47a6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2418	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_34
0x47aa	          0x4889c7	                            mov rdi, rax	      2418	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_34
0x47ad	      0xe800000000	                          call 0x40047f2	      2418	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_34
0x47b2	            0x85c0	                           test eax, eax	      2418	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_34
0x47b4	     0xf84a4000000	                            je 0x400489e	      2418	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_34
0x47ba	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2420	screen.c	FUNCTION_21	ELSE_1	IF_10
0x47bd	          0x83c002	                              add eax, 2	      2420	screen.c	FUNCTION_21	ELSE_1	IF_10
0x47c0	          0x8945f8	                mov dword [rbp - 8], eax	      2420	screen.c	FUNCTION_21	ELSE_1	IF_10
0x47c3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2423	screen.c	FUNCTION_21	ELSE_1	IF_10	IF_11
0x47c7	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2423	screen.c	FUNCTION_21	ELSE_1	IF_10	IF_11
0x47cd	          0x3b45f8	                cmp eax, dword [rbp - 8]	      2423	screen.c	FUNCTION_21	ELSE_1	IF_10	IF_11
0x47d0	            0x7d0d	                           jge 0x400481f	      2423	screen.c	FUNCTION_21	ELSE_1	IF_10	IF_11
0x47d2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2424	screen.c	FUNCTION_21	ELSE_1	IF_10	IF_11
0x47d6	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2424	screen.c	FUNCTION_21	ELSE_1	IF_10	IF_11
0x47dc	          0x8945f8	                mov dword [rbp - 8], eax	      2424	screen.c	FUNCTION_21	ELSE_1	IF_10	IF_11
0x47df	    0x8b0500000000	            mov eax, dword [0x04004825] 	      2425	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_37
0x47e5	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2426	screen.c	FUNCTION_21	ELSE_1	IF_10
0x47e9	    0x8b8aa8000000	            mov ecx, dword [rdx + 0xa8] 	      2426	screen.c	FUNCTION_21	ELSE_1	IF_10
0x47ef	          0x8b55f8	                mov edx, dword [rbp - 8]	      2425	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_37
0x47f2	             0x1d1	                            add ecx, edx	      2425	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_37
0x47f4	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2426	screen.c	FUNCTION_21	ELSE_1	IF_10
0x47f8	    0x8bb2a8000000	            mov esi, dword [rdx + 0xa8] 	      2426	screen.c	FUNCTION_21	ELSE_1	IF_10
0x47fe	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      2425	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_37
0x4801	        0x448d1416	                   lea r10d, [rsi + rdx]	      2425	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_37
0x4805	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2425	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_37
0x4809	    0x8bb29c000000	            mov esi, dword [rdx + 0x9c] 	      2425	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_37
0x480f	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2425	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_37
0x4813	    0x8b92a8010000	           mov edx, dword [rdx + 0x1a8] 	      2425	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_37
0x4819	             0x1d6	                            add esi, edx	      2425	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_37
0x481b	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      2425	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_37
0x481e	             0x1d6	                            add esi, edx	      2425	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_37
0x4820	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2425	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_37
0x4824	    0x8bba9c000000	            mov edi, dword [rdx + 0x9c] 	      2425	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_37
0x482a	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2425	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_37
0x482e	    0x8b92a8010000	           mov edx, dword [rdx + 0x1a8] 	      2425	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_37
0x4834	             0x1d7	                            add edi, edx	      2425	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_37
0x4836	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      2425	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_37
0x4839	             0x1d7	                            add edi, edx	      2425	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_37
0x483b	        0x4883ec08	                              sub rsp, 8	      2425	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_37
0x483f	              0x50	                                push rax	      2425	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_37
0x4840	    0x41b920000000	                           mov r9d, 0x20	      2425	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_37
0x4846	    0x41b820000000	                           mov r8d, 0x20	      2425	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_37
0x484c	          0x4489d2	                           mov edx, r10d	      2425	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_37
0x484f	      0xe800000000	                          call 0x4004894	      2425	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_37
0x4854	        0x4883c410	                           add rsp, 0x10	      2425	screen.c	FUNCTION_21	ELSE_1	IF_10	CALL_37
0x4858	          0x8b45f8	                mov eax, dword [rbp - 8]	      2428	screen.c	FUNCTION_21	ELSE_1	IF_10
0x485b	          0x8945ec	             mov dword [rbp - 0x14], eax	      2428	screen.c	FUNCTION_21	ELSE_1	IF_10
0x485e	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2433	screen.c	FUNCTION_21	ELSE_1	CALL_43
0x4861	            0x4898	                                    cdqe	      2431	screen.c	FUNCTION_21	ELSE_1	CALL_41
0x4863	    0x8b0485000000	                  mov eax, dword [rax*4]	      2431	screen.c	FUNCTION_21	ELSE_1	CALL_41
0x486a	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2432	screen.c	FUNCTION_21	ELSE_1	CALL_42
0x486e	    0x8b8aa8000000	            mov ecx, dword [rdx + 0xa8] 	      2432	screen.c	FUNCTION_21	ELSE_1	CALL_42
0x4874	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2432	screen.c	FUNCTION_21	ELSE_1	CALL_42
0x4878	    0x8b92ac000000	            mov edx, dword [rdx + 0xac] 	      2432	screen.c	FUNCTION_21	ELSE_1	CALL_42
0x487e	             0x1d1	                            add ecx, edx	      2431	screen.c	FUNCTION_21	ELSE_1	CALL_41
0x4880	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2432	screen.c	FUNCTION_21	ELSE_1	CALL_42
0x4884	    0x8bb2a8000000	            mov esi, dword [rdx + 0xa8] 	      2432	screen.c	FUNCTION_21	ELSE_1	CALL_42
0x488a	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      2431	screen.c	FUNCTION_21	ELSE_1	CALL_41
0x488d	        0x448d1416	                   lea r10d, [rsi + rdx]	      2431	screen.c	FUNCTION_21	ELSE_1	CALL_41
0x4891	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2431	screen.c	FUNCTION_21	ELSE_1	CALL_41
0x4895	    0x8bb29c000000	            mov esi, dword [rdx + 0x9c] 	      2431	screen.c	FUNCTION_21	ELSE_1	CALL_41
0x489b	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2431	screen.c	FUNCTION_21	ELSE_1	CALL_41
0x489f	    0x8b92a8010000	           mov edx, dword [rdx + 0x1a8] 	      2431	screen.c	FUNCTION_21	ELSE_1	CALL_41
0x48a5	             0x1d6	                            add esi, edx	      2431	screen.c	FUNCTION_21	ELSE_1	CALL_41
0x48a7	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      2431	screen.c	FUNCTION_21	ELSE_1	CALL_41
0x48aa	             0x1d6	                            add esi, edx	      2431	screen.c	FUNCTION_21	ELSE_1	CALL_41
0x48ac	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2431	screen.c	FUNCTION_21	ELSE_1	CALL_41
0x48b0	    0x8bba9c000000	            mov edi, dword [rdx + 0x9c] 	      2431	screen.c	FUNCTION_21	ELSE_1	CALL_41
0x48b6	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2431	screen.c	FUNCTION_21	ELSE_1	CALL_41
0x48ba	    0x8b92a8010000	           mov edx, dword [rdx + 0x1a8] 	      2431	screen.c	FUNCTION_21	ELSE_1	CALL_41
0x48c0	             0x1d7	                            add edi, edx	      2431	screen.c	FUNCTION_21	ELSE_1	CALL_41
0x48c2	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      2431	screen.c	FUNCTION_21	ELSE_1	CALL_41
0x48c5	             0x1d7	                            add edi, edx	      2431	screen.c	FUNCTION_21	ELSE_1	CALL_41
0x48c7	        0x448b45d0	             mov r8d, dword [rbp - 0x30]	      2431	screen.c	FUNCTION_21	ELSE_1	CALL_41
0x48cb	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      2431	screen.c	FUNCTION_21	ELSE_1	CALL_41
0x48ce	        0x4883ec08	                              sub rsp, 8	      2431	screen.c	FUNCTION_21	ELSE_1	CALL_41
0x48d2	              0x50	                                push rax	      2431	screen.c	FUNCTION_21	ELSE_1	CALL_41
0x48d3	          0x4589c1	                            mov r9d, r8d	      2431	screen.c	FUNCTION_21	ELSE_1	CALL_41
0x48d6	          0x4189d0	                            mov r8d, edx	      2431	screen.c	FUNCTION_21	ELSE_1	CALL_41
0x48d9	          0x4489d2	                           mov edx, r10d	      2431	screen.c	FUNCTION_21	ELSE_1	CALL_41
0x48dc	      0xe800000000	                          call 0x4004921	      2431	screen.c	FUNCTION_21	ELSE_1	CALL_41
0x48e1	        0x4883c410	                           add rsp, 0x10	      2431	screen.c	FUNCTION_21	ELSE_1	CALL_41
0x48e5	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      2435	screen.c	FUNCTION_21	CALL_44
0x48e8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2435	screen.c	FUNCTION_21	CALL_44
0x48ec	            0x89d6	                            mov esi, edx	      2435	screen.c	FUNCTION_21	CALL_44
0x48ee	          0x4889c7	                            mov rdi, rax	      2435	screen.c	FUNCTION_21	CALL_44
0x48f1	      0xe800000000	                          call 0x4004936	      2435	screen.c	FUNCTION_21	CALL_44
0x48f6	              0x90	                                     nop	      2436	screen.c	FUNCTION_21
0x48f7	              0xc9	                                   leave	      2436	screen.c	FUNCTION_21
0x48f8	              0xc3	                                     ret	      2436	screen.c	FUNCTION_21
clearmode	DO,0:functions,0:CALL,4:ELSE,0:IF,1:WHILE,0:FOR,0:SWITCH,0	13
0x1449e	              0x55	                                push rbp	     10444	screen.c	FUNCTION_89
0x1449f	          0x4889e5	                            mov rbp, rsp	     10444	screen.c	FUNCTION_89
0x144a2	      0xe895ffffff	                   call sym.msg_pos_mode	     10445	screen.c	FUNCTION_89	CALL_1
0x144a7	    0x8b0500000000	            mov eax, dword [0x040144ed] 	     10446	screen.c	FUNCTION_89	IF_1
0x144ad	            0x85c0	                           test eax, eax	     10446	screen.c	FUNCTION_89	IF_1
0x144af	            0x740d	                            je 0x40144fe	     10446	screen.c	FUNCTION_89	IF_1
0x144b1	    0x8b0500000000	            mov eax, dword [0x040144f7] 	     10447	screen.c	FUNCTION_89	CALL_3
0x144b7	            0x89c7	                            mov edi, eax	     10447	screen.c	FUNCTION_89	CALL_3
0x144b9	      0xe808000000	                 call sym.recording_mode	     10447	screen.c	FUNCTION_89	CALL_3
0x144be	      0xe800000000	                          call 0x4014503	     10448	screen.c	FUNCTION_89	CALL_4
0x144c3	              0x90	                                     nop	     10449	screen.c	FUNCTION_89
0x144c4	              0x5d	                                 pop rbp	     10449	screen.c	FUNCTION_89
0x144c5	              0xc3	                                     ret	     10449	screen.c	FUNCTION_89
screen_getbytes	DO,0:functions,0:CALL,2:ELSE,2:IF,4:WHILE,0:FOR,0:SWITCH,0	114
0xeac9	              0x55	                                push rbp	      7311	screen.c	FUNCTION_48
0xeaca	          0x4889e5	                            mov rbp, rsp	      7311	screen.c	FUNCTION_48
0xeacd	        0x4883ec30	                           sub rsp, 0x30	      7311	screen.c	FUNCTION_48
0xead1	          0x897dec	             mov dword [rbp - 0x14], edi	      7311	screen.c	FUNCTION_48
0xead4	          0x8975e8	             mov dword [rbp - 0x18], esi	      7311	screen.c	FUNCTION_48
0xead7	        0x488955e0	             mov qword [rbp - 0x20], rdx	      7311	screen.c	FUNCTION_48
0xeadb	        0x48894dd8	             mov qword [rbp - 0x28], rcx	      7311	screen.c	FUNCTION_48
0xeadf	    0x488b05000000	            mov rax, qword [0x0400eb26] 	      7315	screen.c	FUNCTION_48	IF_1
0xeae6	          0x4885c0	                           test rax, rax	      7315	screen.c	FUNCTION_48	IF_1
0xeae9	     0xf8468010000	                            je 0x400ec97	      7315	screen.c	FUNCTION_48	IF_1
0xeaef	    0x8b0500000000	            mov eax, dword [0x0400eb35] 	      7315	screen.c	FUNCTION_48	IF_1
0xeaf5	          0x3945ec	            cmp dword [rbp - 0x14], eax 	      7315	screen.c	FUNCTION_48	IF_1
0xeaf8	     0xf8d59010000	                           jge 0x400ec97	      7315	screen.c	FUNCTION_48	IF_1
0xeafe	    0x8b0500000000	            mov eax, dword [0x0400eb44] 	      7315	screen.c	FUNCTION_48	IF_1
0xeb04	          0x3945e8	            cmp dword [rbp - 0x18], eax 	      7315	screen.c	FUNCTION_48	IF_1
0xeb07	     0xf8d4a010000	                           jge 0x400ec97	      7315	screen.c	FUNCTION_48	IF_1
0xeb0d	    0x488b05000000	            mov rax, qword [0x0400eb54] 	      7317	screen.c	FUNCTION_48	IF_1
0xeb14	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      7317	screen.c	FUNCTION_48	IF_1
0xeb17	          0x4863d2	                         movsxd rdx, edx	      7317	screen.c	FUNCTION_48	IF_1
0xeb1a	        0x48c1e202	                              shl rdx, 2	      7317	screen.c	FUNCTION_48	IF_1
0xeb1e	          0x4801d0	                            add rax, rdx	      7317	screen.c	FUNCTION_48	IF_1
0xeb21	            0x8b10	                    mov edx, dword [rax]	      7317	screen.c	FUNCTION_48	IF_1
0xeb23	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      7317	screen.c	FUNCTION_48	IF_1
0xeb26	             0x1d0	                            add eax, edx	      7317	screen.c	FUNCTION_48	IF_1
0xeb28	          0x8945fc	                mov dword [rbp - 4], eax	      7317	screen.c	FUNCTION_48	IF_1
0xeb2b	    0x488b05000000	            mov rax, qword [0x0400eb72] 	      7318	screen.c	FUNCTION_48	IF_1
0xeb32	          0x8b55fc	                mov edx, dword [rbp - 4]	      7318	screen.c	FUNCTION_48	IF_1
0xeb35	          0x4801d2	                            add rdx, rdx	      7318	screen.c	FUNCTION_48	IF_1
0xeb38	          0x4801d0	                            add rax, rdx	      7318	screen.c	FUNCTION_48	IF_1
0xeb3b	           0xfb700	                   movzx eax, word [rax]	      7318	screen.c	FUNCTION_48	IF_1
0xeb3e	           0xfb7d0	                           movzx edx, ax	      7318	screen.c	FUNCTION_48	IF_1
0xeb41	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7318	screen.c	FUNCTION_48	IF_1
0xeb45	            0x8910	                    mov dword [rax], edx	      7318	screen.c	FUNCTION_48	IF_1
0xeb47	    0x488b15000000	            mov rdx, qword [0x0400eb8e] 	      7319	screen.c	FUNCTION_48	IF_1
0xeb4e	          0x8b45fc	                mov eax, dword [rbp - 4]	      7319	screen.c	FUNCTION_48	IF_1
0xeb51	          0x4801d0	                            add rax, rdx	      7319	screen.c	FUNCTION_48	IF_1
0xeb54	           0xfb610	                   movzx edx, byte [rax]	      7319	screen.c	FUNCTION_48	IF_1
0xeb57	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7319	screen.c	FUNCTION_48	IF_1
0xeb5b	            0x8810	                      mov byte [rax], dl	      7319	screen.c	FUNCTION_48	IF_1
0xeb5d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7320	screen.c	FUNCTION_48	IF_1
0xeb61	        0x4883c001	                              add rax, 1	      7320	screen.c	FUNCTION_48	IF_1
0xeb65	          0xc60000	                       mov byte [rax], 0	      7320	screen.c	FUNCTION_48	IF_1
0xeb68	    0x8b0500000000	            mov eax, dword [0x0400ebae] 	      7323	screen.c	FUNCTION_48	IF_1	IF_2
0xeb6e	            0x85c0	                           test eax, eax	      7323	screen.c	FUNCTION_48	IF_1	IF_2
0xeb70	            0x743a	                            je 0x400ebec	      7323	screen.c	FUNCTION_48	IF_1	IF_2
0xeb72	    0x488b05000000	            mov rax, qword [0x0400ebb9] 	      7323	screen.c	FUNCTION_48	IF_1	IF_2
0xeb79	          0x8b55fc	                mov edx, dword [rbp - 4]	      7323	screen.c	FUNCTION_48	IF_1	IF_2
0xeb7c	        0x48c1e202	                              shl rdx, 2	      7323	screen.c	FUNCTION_48	IF_1	IF_2
0xeb80	          0x4801d0	                            add rax, rdx	      7323	screen.c	FUNCTION_48	IF_1	IF_2
0xeb83	            0x8b00	                    mov eax, dword [rax]	      7323	screen.c	FUNCTION_48	IF_1	IF_2
0xeb85	            0x85c0	                           test eax, eax	      7323	screen.c	FUNCTION_48	IF_1	IF_2
0xeb87	            0x7423	                            je 0x400ebec	      7323	screen.c	FUNCTION_48	IF_1	IF_2
0xeb89	          0x8b45fc	                mov eax, dword [rbp - 4]	      7324	screen.c	FUNCTION_48	IF_1	CALL_1
0xeb8c	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      7324	screen.c	FUNCTION_48	IF_1	CALL_1
0xeb90	          0x4889d6	                            mov rsi, rdx	      7324	screen.c	FUNCTION_48	IF_1	CALL_1
0xeb93	            0x89c7	                            mov edi, eax	      7324	screen.c	FUNCTION_48	IF_1	CALL_1
0xeb95	      0xe800000000	                          call 0x400ebda	      7324	screen.c	FUNCTION_48	IF_1	CALL_1
0xeb9a	          0x4863d0	                         movsxd rdx, eax	      7324	screen.c	FUNCTION_48	IF_1	CALL_1
0xeb9d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7324	screen.c	FUNCTION_48	IF_1	CALL_1
0xeba1	          0x4801d0	                            add rax, rdx	      7324	screen.c	FUNCTION_48	IF_1	CALL_1
0xeba4	          0xc60000	                       mov byte [rax], 0	      7324	screen.c	FUNCTION_48	IF_1	CALL_1
0xeba7	      0xe9ab000000	                           jmp 0x400ec97	      7324	screen.c	FUNCTION_48	IF_1	CALL_1
0xebac	    0x8b0500000000	            mov eax, dword [0x0400ebf2] 	      7325	screen.c	FUNCTION_48	IF_1	ELSE_1	IF_3
0xebb2	      0x3dcc260000	                         cmp eax, 0x26cc	      7325	screen.c	FUNCTION_48	IF_1	ELSE_1	IF_3
0xebb7	            0x7551	                           jne 0x400ec4a	      7325	screen.c	FUNCTION_48	IF_1	ELSE_1	IF_3
0xebb9	    0x488b15000000	            mov rdx, qword [0x0400ec00] 	      7325	screen.c	FUNCTION_48	IF_1	ELSE_1	IF_3
0xebc0	          0x8b45fc	                mov eax, dword [rbp - 4]	      7325	screen.c	FUNCTION_48	IF_1	ELSE_1	IF_3
0xebc3	          0x4801d0	                            add rax, rdx	      7325	screen.c	FUNCTION_48	IF_1	ELSE_1	IF_3
0xebc6	           0xfb600	                   movzx eax, byte [rax]	      7325	screen.c	FUNCTION_48	IF_1	ELSE_1	IF_3
0xebc9	            0x3c8e	                            cmp al, 0x8e	      7325	screen.c	FUNCTION_48	IF_1	ELSE_1	IF_3
0xebcb	            0x753d	                           jne 0x400ec4a	      7325	screen.c	FUNCTION_48	IF_1	ELSE_1	IF_3
0xebcd	    0x488b15000000	            mov rdx, qword [0x0400ec14] 	      7327	screen.c	FUNCTION_48	IF_1	ELSE_1	IF_3
0xebd4	          0x8b45fc	                mov eax, dword [rbp - 4]	      7327	screen.c	FUNCTION_48	IF_1	ELSE_1	IF_3
0xebd7	          0x4801d0	                            add rax, rdx	      7327	screen.c	FUNCTION_48	IF_1	ELSE_1	IF_3
0xebda	           0xfb610	                   movzx edx, byte [rax]	      7327	screen.c	FUNCTION_48	IF_1	ELSE_1	IF_3
0xebdd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7327	screen.c	FUNCTION_48	IF_1	ELSE_1	IF_3
0xebe1	            0x8810	                      mov byte [rax], dl	      7327	screen.c	FUNCTION_48	IF_1	ELSE_1	IF_3
0xebe3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7328	screen.c	FUNCTION_48	IF_1	ELSE_1	IF_3
0xebe7	        0x488d5001	                      lea rdx, [rax + 1]	      7328	screen.c	FUNCTION_48	IF_1	ELSE_1	IF_3
0xebeb	    0x488b0d000000	            mov rcx, qword [0x0400ec32] 	      7328	screen.c	FUNCTION_48	IF_1	ELSE_1	IF_3
0xebf2	          0x8b45fc	                mov eax, dword [rbp - 4]	      7328	screen.c	FUNCTION_48	IF_1	ELSE_1	IF_3
0xebf5	          0x4801c8	                            add rax, rcx	      7328	screen.c	FUNCTION_48	IF_1	ELSE_1	IF_3
0xebf8	           0xfb600	                   movzx eax, byte [rax]	      7328	screen.c	FUNCTION_48	IF_1	ELSE_1	IF_3
0xebfb	            0x8802	                      mov byte [rdx], al	      7328	screen.c	FUNCTION_48	IF_1	ELSE_1	IF_3
0xebfd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7329	screen.c	FUNCTION_48	IF_1	ELSE_1	IF_3
0xec01	        0x4883c002	                              add rax, 2	      7329	screen.c	FUNCTION_48	IF_1	ELSE_1	IF_3
0xec05	          0xc60000	                       mov byte [rax], 0	      7329	screen.c	FUNCTION_48	IF_1	ELSE_1	IF_3
0xec08	            0xeb4d	                           jmp 0x400ec97	      7329	screen.c	FUNCTION_48	IF_1	ELSE_1	IF_3
0xec0a	    0x8b0500000000	            mov eax, dword [0x0400ec50] 	      7331	screen.c	FUNCTION_48	IF_1	ELSE_2	IF_4	CALL_2
0xec10	            0x85c0	                           test eax, eax	      7331	screen.c	FUNCTION_48	IF_1	ELSE_2	IF_4	CALL_2
0xec12	            0x7443	                            je 0x400ec97	      7331	screen.c	FUNCTION_48	IF_1	ELSE_2	IF_4	CALL_2
0xec14	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7331	screen.c	FUNCTION_48	IF_1	ELSE_2	IF_4	CALL_2
0xec18	           0xfb600	                   movzx eax, byte [rax]	      7331	screen.c	FUNCTION_48	IF_1	ELSE_2	IF_4	CALL_2
0xec1b	           0xfb6c0	                           movzx eax, al	      7331	screen.c	FUNCTION_48	IF_1	ELSE_2	IF_4	CALL_2
0xec1e	            0x4898	                                    cdqe	      7331	screen.c	FUNCTION_48	IF_1	ELSE_2	IF_4	CALL_2
0xec20	     0xfb680000000	                   movzx eax, byte [rax]	      7331	screen.c	FUNCTION_48	IF_1	ELSE_2	IF_4	CALL_2
0xec27	            0x3c01	                               cmp al, 1	      7331	screen.c	FUNCTION_48	IF_1	ELSE_2	IF_4	CALL_2
0xec29	            0x7e2c	                           jle 0x400ec97	      7331	screen.c	FUNCTION_48	IF_1	ELSE_2	IF_4	CALL_2
0xec2b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7333	screen.c	FUNCTION_48	IF_1	ELSE_2	IF_4
0xec2f	        0x488d5001	                      lea rdx, [rax + 1]	      7333	screen.c	FUNCTION_48	IF_1	ELSE_2	IF_4
0xec33	    0x488b05000000	            mov rax, qword [0x0400ec7a] 	      7333	screen.c	FUNCTION_48	IF_1	ELSE_2	IF_4
0xec3a	          0x8b4dfc	                mov ecx, dword [rbp - 4]	      7333	screen.c	FUNCTION_48	IF_1	ELSE_2	IF_4
0xec3d	          0x83c101	                              add ecx, 1	      7333	screen.c	FUNCTION_48	IF_1	ELSE_2	IF_4
0xec40	            0x89c9	                            mov ecx, ecx	      7333	screen.c	FUNCTION_48	IF_1	ELSE_2	IF_4
0xec42	          0x4801c8	                            add rax, rcx	      7333	screen.c	FUNCTION_48	IF_1	ELSE_2	IF_4
0xec45	           0xfb600	                   movzx eax, byte [rax]	      7333	screen.c	FUNCTION_48	IF_1	ELSE_2	IF_4
0xec48	            0x8802	                      mov byte [rdx], al	      7333	screen.c	FUNCTION_48	IF_1	ELSE_2	IF_4
0xec4a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7334	screen.c	FUNCTION_48	IF_1	ELSE_2	IF_4
0xec4e	        0x4883c002	                              add rax, 2	      7334	screen.c	FUNCTION_48	IF_1	ELSE_2	IF_4
0xec52	          0xc60000	                       mov byte [rax], 0	      7334	screen.c	FUNCTION_48	IF_1	ELSE_2	IF_4
0xec55	            0xeb00	                           jmp 0x400ec97	      7338	screen.c	FUNCTION_48
0xec57	              0x90	                                     nop	      7338	screen.c	FUNCTION_48
0xec58	              0xc9	                                   leave	      7338	screen.c	FUNCTION_48
0xec59	              0xc3	                                     ret	      7338	screen.c	FUNCTION_48
space_to_screenline	DO,0:functions,0:CALL,0:ELSE,0:IF,1:WHILE,0:FOR,0:SWITCH,0	28
0x10d02	              0x55	                                push rbp	      8472	screen.c	FUNCTION_65
0x10d03	          0x4889e5	                            mov rbp, rsp	      8472	screen.c	FUNCTION_65
0x10d06	          0x897dfc	                mov dword [rbp - 4], edi	      8472	screen.c	FUNCTION_65
0x10d09	          0x8975f8	                mov dword [rbp - 8], esi	      8472	screen.c	FUNCTION_65
0x10d0c	    0x488b15000000	            mov rdx, qword [0x04010d53] 	      8473	screen.c	FUNCTION_65
0x10d13	          0x8b45fc	                mov eax, dword [rbp - 4]	      8473	screen.c	FUNCTION_65
0x10d16	            0x4898	                                    cdqe	      8473	screen.c	FUNCTION_65
0x10d18	          0x4801d0	                            add rax, rdx	      8473	screen.c	FUNCTION_65
0x10d1b	          0xc60020	                    mov byte [rax], 0x20	      8473	screen.c	FUNCTION_65
0x10d1e	    0x488b05000000	            mov rax, qword [0x04010d65] 	      8474	screen.c	FUNCTION_65
0x10d25	          0x8b55fc	                mov edx, dword [rbp - 4]	      8474	screen.c	FUNCTION_65
0x10d28	          0x4863d2	                         movsxd rdx, edx	      8474	screen.c	FUNCTION_65
0x10d2b	          0x4801d2	                            add rdx, rdx	      8474	screen.c	FUNCTION_65
0x10d2e	          0x4801d0	                            add rax, rdx	      8474	screen.c	FUNCTION_65
0x10d31	          0x8b55f8	                mov edx, dword [rbp - 8]	      8474	screen.c	FUNCTION_65
0x10d34	          0x668910	                      mov word [rax], dx	      8474	screen.c	FUNCTION_65
0x10d37	    0x8b0500000000	            mov eax, dword [0x04010d7d] 	      8476	screen.c	FUNCTION_65	IF_1
0x10d3d	            0x85c0	                           test eax, eax	      8476	screen.c	FUNCTION_65	IF_1
0x10d3f	            0x741a	                            je 0x4010d9b	      8476	screen.c	FUNCTION_65	IF_1
0x10d41	    0x488b05000000	            mov rax, qword [0x04010d88] 	      8477	screen.c	FUNCTION_65	IF_1
0x10d48	          0x8b55fc	                mov edx, dword [rbp - 4]	      8477	screen.c	FUNCTION_65	IF_1
0x10d4b	          0x4863d2	                         movsxd rdx, edx	      8477	screen.c	FUNCTION_65	IF_1
0x10d4e	        0x48c1e202	                              shl rdx, 2	      8477	screen.c	FUNCTION_65	IF_1
0x10d52	          0x4801d0	                            add rax, rdx	      8477	screen.c	FUNCTION_65	IF_1
0x10d55	    0xc70000000000	                      mov dword [rax], 0	      8477	screen.c	FUNCTION_65	IF_1
0x10d5b	              0x90	                                     nop	      8479	screen.c	FUNCTION_65
0x10d5c	              0x5d	                                 pop rbp	      8479	screen.c	FUNCTION_65
0x10d5d	              0xc3	                                     ret	      8479	screen.c	FUNCTION_65
showruler	DO,0:functions,0:CALL,6:ELSE,1:IF,5:WHILE,0:FOR,0:SWITCH,0	63
0x1504e	              0x55	                                push rbp	     10823	screen.c	FUNCTION_98
0x1504f	          0x4889e5	                            mov rbp, rsp	     10823	screen.c	FUNCTION_98
0x15052	        0x4883ec10	                           sub rsp, 0x10	     10823	screen.c	FUNCTION_98
0x15056	          0x897dfc	                mov dword [rbp - 4], edi	     10823	screen.c	FUNCTION_98
0x15059	        0x837dfc00	                  cmp dword [rbp - 4], 0	     10824	screen.c	FUNCTION_98	IF_1	CALL_1
0x1505d	            0x750d	                           jne 0x40150ac	     10824	screen.c	FUNCTION_98	IF_1	CALL_1
0x1505f	      0xe800000000	                          call 0x40150a4	     10824	screen.c	FUNCTION_98	IF_1	CALL_1
0x15064	            0x85c0	                           test eax, eax	     10824	screen.c	FUNCTION_98	IF_1	CALL_1
0x15066	     0xf84c6000000	                            je 0x4015172	     10824	screen.c	FUNCTION_98	IF_1	CALL_1
0x1506c	      0xe800000000	                          call 0x40150b1	     10827	screen.c	FUNCTION_98	IF_2	CALL_2
0x15071	            0x85c0	                           test eax, eax	     10827	screen.c	FUNCTION_98	IF_2	CALL_2
0x15073	            0x7416	                            je 0x40150cb	     10827	screen.c	FUNCTION_98	IF_2	CALL_2
0x15075	    0x488b05000000	            mov rax, qword [0x040150bc] 	     10830	screen.c	FUNCTION_98	IF_2
0x1507c	    0xc78040010000	              mov dword [rax + 0x140], 1	     10830	screen.c	FUNCTION_98	IF_2
0x15086	      0xe9a8000000	                           jmp 0x4015173	     10831	screen.c	FUNCTION_98	IF_2
0x1508b	    0x488b05000000	            mov rax, qword [0x040150d2] 	     10835	screen.c	FUNCTION_98	IF_3
0x15092	           0xfb600	                   movzx eax, byte [rax]	     10835	screen.c	FUNCTION_98	IF_3
0x15095	            0x84c0	                             test al, al	     10835	screen.c	FUNCTION_98	IF_3
0x15097	            0x7515	                           jne 0x40150ee	     10835	screen.c	FUNCTION_98	IF_3
0x15099	    0x488b05000000	            mov rax, qword [0x040150e0] 	     10835	screen.c	FUNCTION_98	IF_3
0x150a0	    0x488b80800200	           mov rax, qword [rax + 0x280] 	     10835	screen.c	FUNCTION_98	IF_3
0x150a7	           0xfb600	                   movzx eax, byte [rax]	     10835	screen.c	FUNCTION_98	IF_3
0x150aa	            0x84c0	                             test al, al	     10835	screen.c	FUNCTION_98	IF_3
0x150ac	            0x7422	                            je 0x4015110	     10835	screen.c	FUNCTION_98	IF_3
0x150ae	    0x488b05000000	            mov rax, qword [0x040150f5] 	     10835	screen.c	FUNCTION_98	IF_3
0x150b5	    0x8b80a4000000	            mov eax, dword [rax + 0xa4] 	     10835	screen.c	FUNCTION_98	IF_3
0x150bb	            0x85c0	                           test eax, eax	     10835	screen.c	FUNCTION_98	IF_3
0x150bd	            0x7411	                            je 0x4015110	     10835	screen.c	FUNCTION_98	IF_3
0x150bf	    0x488b05000000	            mov rax, qword [0x04015106] 	     10837	screen.c	FUNCTION_98	IF_3	CALL_3
0x150c6	          0x4889c7	                            mov rdi, rax	     10837	screen.c	FUNCTION_98	IF_3	CALL_3
0x150c9	      0xe8fc8dffff	       call sym.redraw_custom_statusline	     10837	screen.c	FUNCTION_98	IF_3	CALL_3
0x150ce	            0xeb14	                           jmp 0x4015124	     10837	screen.c	FUNCTION_98	IF_3	CALL_3
0x150d0	    0x488b05000000	            mov rax, qword [0x04015117] 	     10842	screen.c	FUNCTION_98	CALL_4
0x150d7	          0x8b55fc	                mov edx, dword [rbp - 4]	     10842	screen.c	FUNCTION_98	CALL_4
0x150da	            0x89d6	                            mov esi, edx	     10842	screen.c	FUNCTION_98	CALL_4
0x150dc	          0x4889c7	                            mov rdi, rax	     10842	screen.c	FUNCTION_98	CALL_4
0x150df	      0xe851000000	                 call sym.win_redr_ruler	     10842	screen.c	FUNCTION_98	CALL_4
0x150e4	    0x8b0500000000	            mov eax, dword [0x0401512a] 	     10846	screen.c	FUNCTION_98	IF_4
0x150ea	            0x85c0	                           test eax, eax	     10846	screen.c	FUNCTION_98	IF_4
0x150ec	            0x752e	                           jne 0x401515c	     10846	screen.c	FUNCTION_98	IF_4
0x150ee	    0x8b0500000000	            mov eax, dword [0x04015134] 	     10848	screen.c	FUNCTION_98	IF_4
0x150f4	            0x85c0	                           test eax, eax	     10848	screen.c	FUNCTION_98	IF_4
0x150f6	            0x740d	                            je 0x4015145	     10848	screen.c	FUNCTION_98	IF_4
0x150f8	    0x8b0500000000	            mov eax, dword [0x0401513e] 	     10848	screen.c	FUNCTION_98	IF_4
0x150fe	          0x83e001	                              and eax, 1	     10848	screen.c	FUNCTION_98	IF_4
0x15101	            0x85c0	                           test eax, eax	     10848	screen.c	FUNCTION_98	IF_4
0x15103	            0x7517	                           jne 0x401515c	     10848	screen.c	FUNCTION_98	IF_4
0x15105	    0x8b0500000000	            mov eax, dword [0x0401514b] 	     10849	screen.c	FUNCTION_98	IF_4
0x1510b	            0x85c0	                           test eax, eax	     10849	screen.c	FUNCTION_98	IF_4
0x1510d	            0x7412	                            je 0x4015161	     10849	screen.c	FUNCTION_98	IF_4
0x1510f	    0x8b0500000000	            mov eax, dword [0x04015155] 	     10849	screen.c	FUNCTION_98	IF_4
0x15115	          0x83e002	                              and eax, 2	     10849	screen.c	FUNCTION_98	IF_4
0x15118	            0x85c0	                           test eax, eax	     10849	screen.c	FUNCTION_98	IF_4
0x1511a	            0x7405	                            je 0x4015161	     10849	screen.c	FUNCTION_98	IF_4
0x1511c	      0xe800000000	                          call 0x4015161	     10852	screen.c	FUNCTION_98	CALL_5
0x15121	    0x8b0500000000	            mov eax, dword [0x04015167] 	     10855	screen.c	FUNCTION_98	IF_5
0x15127	            0x85c0	                           test eax, eax	     10855	screen.c	FUNCTION_98	IF_5
0x15129	            0x7408	                            je 0x4015173	     10855	screen.c	FUNCTION_98	IF_5
0x1512b	      0xe81cf4ffff	                   call sym.draw_tabline	     10856	screen.c	FUNCTION_98	CALL_6
0x15130	            0xeb01	                           jmp 0x4015173	     10856	screen.c	FUNCTION_98	CALL_6
0x15132	              0x90	                                     nop	     10825	screen.c	FUNCTION_98	IF_1
0x15133	              0xc9	                                   leave	     10857	screen.c	FUNCTION_98
0x15134	              0xc3	                                     ret	     10857	screen.c	FUNCTION_98
screen_comp_differs	DO,0:functions,0:CALL,0:ELSE,0:IF,2:WHILE,0:FOR,1:SWITCH,0	41
0xec5a	              0x55	                                push rbp	      7350	screen.c	FUNCTION_49
0xec5b	          0x4889e5	                            mov rbp, rsp	      7350	screen.c	FUNCTION_49
0xec5e	          0x897dec	             mov dword [rbp - 0x14], edi	      7350	screen.c	FUNCTION_49
0xec61	        0x488975e0	             mov qword [rbp - 0x20], rsi	      7350	screen.c	FUNCTION_49
0xec65	    0xc745fc000000	                  mov dword [rbp - 4], 0	      7353	screen.c	FUNCTION_49	FOR_1
0xec6c	            0xeb5c	                           jmp 0x400ed0a	      7353	screen.c	FUNCTION_49	FOR_1
0xec6e	          0x8b45fc	                mov eax, dword [rbp - 4]	      7355	screen.c	FUNCTION_49	FOR_1	IF_1
0xec71	            0x4898	                                    cdqe	      7355	screen.c	FUNCTION_49	FOR_1	IF_1
0xec73	    0x488b04c50000	                  mov rax, qword [rax*8]	      7355	screen.c	FUNCTION_49	FOR_1	IF_1
0xec7b	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      7355	screen.c	FUNCTION_49	FOR_1	IF_1
0xec7e	          0x4863d2	                         movsxd rdx, edx	      7355	screen.c	FUNCTION_49	FOR_1	IF_1
0xec81	        0x48c1e202	                              shl rdx, 2	      7355	screen.c	FUNCTION_49	FOR_1	IF_1
0xec85	          0x4801d0	                            add rax, rdx	      7355	screen.c	FUNCTION_49	FOR_1	IF_1
0xec88	            0x8b00	                    mov eax, dword [rax]	      7355	screen.c	FUNCTION_49	FOR_1	IF_1
0xec8a	          0x8b55fc	                mov edx, dword [rbp - 4]	      7355	screen.c	FUNCTION_49	FOR_1	IF_1
0xec8d	          0x4863d2	                         movsxd rdx, edx	      7355	screen.c	FUNCTION_49	FOR_1	IF_1
0xec90	    0x488d0c950000	                        lea rcx, [rdx*4]	      7355	screen.c	FUNCTION_49	FOR_1	IF_1
0xec98	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      7355	screen.c	FUNCTION_49	FOR_1	IF_1
0xec9c	          0x4801ca	                            add rdx, rcx	      7355	screen.c	FUNCTION_49	FOR_1	IF_1
0xec9f	            0x8b12	                    mov edx, dword [rdx]	      7355	screen.c	FUNCTION_49	FOR_1	IF_1
0xeca1	            0x39d0	                            cmp eax, edx	      7355	screen.c	FUNCTION_49	FOR_1	IF_1
0xeca3	            0x7407	                            je 0x400ecec	      7355	screen.c	FUNCTION_49	FOR_1	IF_1
0xeca5	      0xb801000000	                              mov eax, 1	      7356	screen.c	FUNCTION_49	FOR_1	IF_1
0xecaa	            0xeb31	                           jmp 0x400ed1d	      7356	screen.c	FUNCTION_49	FOR_1	IF_1
0xecac	          0x8b45fc	                mov eax, dword [rbp - 4]	      7357	screen.c	FUNCTION_49	FOR_1	IF_2
0xecaf	            0x4898	                                    cdqe	      7357	screen.c	FUNCTION_49	FOR_1	IF_2
0xecb1	    0x488d14850000	                        lea rdx, [rax*4]	      7357	screen.c	FUNCTION_49	FOR_1	IF_2
0xecb9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7357	screen.c	FUNCTION_49	FOR_1	IF_2
0xecbd	          0x4801d0	                            add rax, rdx	      7357	screen.c	FUNCTION_49	FOR_1	IF_2
0xecc0	            0x8b00	                    mov eax, dword [rax]	      7357	screen.c	FUNCTION_49	FOR_1	IF_2
0xecc2	            0x85c0	                           test eax, eax	      7357	screen.c	FUNCTION_49	FOR_1	IF_2
0xecc4	            0x7411	                            je 0x400ed17	      7357	screen.c	FUNCTION_49	FOR_1	IF_2
0xecc6	        0x8345fc01	                  add dword [rbp - 4], 1	      7353	screen.c	FUNCTION_49	FOR_1
0xecca	    0x8b0500000000	            mov eax, dword [0x0400ed10] 	      7353	screen.c	FUNCTION_49	FOR_1
0xecd0	          0x3945fc	                cmp dword [rbp - 4], eax	      7353	screen.c	FUNCTION_49	FOR_1
0xecd3	            0x7c99	                            jl 0x400ecae	      7353	screen.c	FUNCTION_49	FOR_1
0xecd5	            0xeb01	                           jmp 0x400ed18	      7353	screen.c	FUNCTION_49	FOR_1
0xecd7	              0x90	                                     nop	      7358	screen.c	FUNCTION_49	FOR_1	IF_2
0xecd8	      0xb800000000	                              mov eax, 0	      7360	screen.c	FUNCTION_49
0xecdd	              0x5d	                                 pop rbp	      7361	screen.c	FUNCTION_49
0xecde	              0xc3	                                     ret	      7361	screen.c	FUNCTION_49
start_search_hl	DO,0:functions,0:CALL,3:ELSE,0:IF,1:WHILE,0:FOR,0:SWITCH,0	19
0xf782	              0x55	                                push rbp	      7675	screen.c	FUNCTION_52
0xf783	          0x4889e5	                            mov rbp, rsp	      7675	screen.c	FUNCTION_52
0xf786	    0x8b0500000000	            mov eax, dword [0x0400f7cc] 	      7676	screen.c	FUNCTION_52	IF_1
0xf78c	            0x85c0	                           test eax, eax	      7676	screen.c	FUNCTION_52	IF_1
0xf78e	            0x7434	                            je 0x400f804	      7676	screen.c	FUNCTION_52	IF_1
0xf790	    0x8b0500000000	            mov eax, dword [0x0400f7d6] 	      7676	screen.c	FUNCTION_52	IF_1
0xf796	            0x85c0	                           test eax, eax	      7676	screen.c	FUNCTION_52	IF_1
0xf798	            0x752a	                           jne 0x400f804	      7676	screen.c	FUNCTION_52	IF_1
0xf79a	      0xbf00000000	                              mov edi, 0	      7678	screen.c	FUNCTION_52	IF_1	CALL_1
0xf79f	      0xe800000000	                          call 0x400f7e4	      7678	screen.c	FUNCTION_52	IF_1	CALL_1
0xf7a4	    0x8b0500000000	            mov eax, dword [0x0400f7ea] 	      7679	screen.c	FUNCTION_52	IF_1	CALL_2
0xf7aa	    0x890500000000	            mov dword [0x0400f7f0], eax 	      7679	screen.c	FUNCTION_52	IF_1	CALL_2
0xf7b0	    0x488b05000000	            mov rax, qword [0x0400f7f7] 	      7682	screen.c	FUNCTION_52	IF_1	CALL_3
0xf7b7	      0xbe00000000	                              mov esi, 0	      7682	screen.c	FUNCTION_52	IF_1	CALL_3
0xf7bc	          0x4889c7	                            mov rdi, rax	      7682	screen.c	FUNCTION_52	IF_1	CALL_3
0xf7bf	      0xe800000000	                          call 0x400f804	      7682	screen.c	FUNCTION_52	IF_1	CALL_3
0xf7c4	              0x90	                                     nop	      7685	screen.c	FUNCTION_52
0xf7c5	              0x5d	                                 pop rbp	      7685	screen.c	FUNCTION_52
0xf7c6	              0xc3	                                     ret	      7685	screen.c	FUNCTION_52
redrawWinline	DO,0:functions,0:CALL,2:ELSE,0:IF,4:WHILE,0:FOR,0:SWITCH,0	52
0x89a	              0x55	                                push rbp	       498	screen.c	FUNCTION_10
0x89b	          0x4889e5	                            mov rbp, rsp	       498	screen.c	FUNCTION_10
0x89e	        0x4883ec20	                           sub rsp, 0x20	       498	screen.c	FUNCTION_10
0x8a2	        0x48897de8	             mov qword [rbp - 0x18], rdi	       498	screen.c	FUNCTION_10
0x8a6	          0x8975e4	             mov dword [rbp - 0x1c], esi	       498	screen.c	FUNCTION_10
0x8a9	    0x488b05000000	            mov rax, qword [0x040008f0] 	       503	screen.c	FUNCTION_10	IF_1
0x8b0	    0x488b80300100	           mov rax, qword [rax + 0x130] 	       503	screen.c	FUNCTION_10	IF_1
0x8b7	          0x4885c0	                           test rax, rax	       503	screen.c	FUNCTION_10	IF_1
0x8ba	            0x7414	                            je 0x4000910	       503	screen.c	FUNCTION_10	IF_1
0x8bc	    0x488b05000000	            mov rax, qword [0x04000903] 	       503	screen.c	FUNCTION_10	IF_1
0x8c3	    0x488b80300100	           mov rax, qword [rax + 0x130] 	       503	screen.c	FUNCTION_10	IF_1
0x8ca	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       503	screen.c	FUNCTION_10	IF_1
0x8ce	            0x7e12	                           jle 0x4000922	       503	screen.c	FUNCTION_10	IF_1
0x8d0	    0x488b05000000	            mov rax, qword [0x04000917] 	       504	screen.c	FUNCTION_10	IF_1
0x8d7	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       504	screen.c	FUNCTION_10	IF_1
0x8db	    0x488990300100	            mov qword [rax + 0x130], rdx	       504	screen.c	FUNCTION_10	IF_1
0x8e2	    0x488b05000000	            mov rax, qword [0x04000929] 	       505	screen.c	FUNCTION_10	IF_2
0x8e9	    0x488b80380100	           mov rax, qword [rax + 0x138] 	       505	screen.c	FUNCTION_10	IF_2
0x8f0	          0x4885c0	                           test rax, rax	       505	screen.c	FUNCTION_10	IF_2
0x8f3	            0x7414	                            je 0x4000949	       505	screen.c	FUNCTION_10	IF_2
0x8f5	    0x488b05000000	            mov rax, qword [0x0400093c] 	       505	screen.c	FUNCTION_10	IF_2
0x8fc	    0x488b80380100	           mov rax, qword [rax + 0x138] 	       505	screen.c	FUNCTION_10	IF_2
0x903	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       505	screen.c	FUNCTION_10	IF_2
0x907	            0x7d12	                           jge 0x400095b	       505	screen.c	FUNCTION_10	IF_2
0x909	    0x488b05000000	            mov rax, qword [0x04000950] 	       506	screen.c	FUNCTION_10	IF_2
0x910	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       506	screen.c	FUNCTION_10	IF_2
0x914	    0x488990380100	            mov qword [rax + 0x138], rdx	       506	screen.c	FUNCTION_10	IF_2
0x91b	      0xbf0a000000	                            mov edi, 0xa	       507	screen.c	FUNCTION_10	CALL_1
0x920	      0xe800000000	                          call 0x4000965	       507	screen.c	FUNCTION_10	CALL_1
0x925	        0x837de400	               cmp dword [rbp - 0x1c], 0	       510	screen.c	FUNCTION_10	IF_3
0x929	            0x7447	                            je 0x40009b2	       510	screen.c	FUNCTION_10	IF_3
0x92b	    0x488b05000000	            mov rax, qword [0x04000972] 	       513	screen.c	FUNCTION_10	IF_3	CALL_2
0x932	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       513	screen.c	FUNCTION_10	IF_3	CALL_2
0x936	          0x4889d6	                            mov rsi, rdx	       513	screen.c	FUNCTION_10	IF_3	CALL_2
0x939	          0x4889c7	                            mov rdi, rax	       513	screen.c	FUNCTION_10	IF_3	CALL_2
0x93c	      0xe800000000	                          call 0x4000981	       513	screen.c	FUNCTION_10	IF_3	CALL_2
0x941	          0x8945fc	                mov dword [rbp - 4], eax	       513	screen.c	FUNCTION_10	IF_3	CALL_2
0x944	        0x837dfc00	                  cmp dword [rbp - 4], 0	       514	screen.c	FUNCTION_10	IF_3	IF_4
0x948	            0x7828	                            js 0x40009b2	       514	screen.c	FUNCTION_10	IF_3	IF_4
0x94a	    0x488b05000000	            mov rax, qword [0x04000991] 	       515	screen.c	FUNCTION_10	IF_3	IF_4
0x951	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	       515	screen.c	FUNCTION_10	IF_3	IF_4
0x958	          0x8b45fc	                mov eax, dword [rbp - 4]	       515	screen.c	FUNCTION_10	IF_3	IF_4
0x95b	          0x4863d0	                         movsxd rdx, eax	       515	screen.c	FUNCTION_10	IF_3	IF_4
0x95e	          0x4889d0	                            mov rax, rdx	       515	screen.c	FUNCTION_10	IF_3	IF_4
0x961	          0x4801c0	                            add rax, rax	       515	screen.c	FUNCTION_10	IF_3	IF_4
0x964	          0x4801d0	                            add rax, rdx	       515	screen.c	FUNCTION_10	IF_3	IF_4
0x967	        0x48c1e003	                              shl rax, 3	       515	screen.c	FUNCTION_10	IF_3	IF_4
0x96b	          0x4801c8	                            add rax, rcx	       515	screen.c	FUNCTION_10	IF_3	IF_4
0x96e	        0xc6400a00	                 mov byte [rax + 0xa], 0	       515	screen.c	FUNCTION_10	IF_3	IF_4
0x972	              0x90	                                     nop	       518	screen.c	FUNCTION_10
0x973	              0xc9	                                   leave	       518	screen.c	FUNCTION_10
0x974	              0xc3	                                     ret	       518	screen.c	FUNCTION_10
setcursor	DO,0:functions,0:CALL,7:ELSE,0:IF,1:WHILE,0:FOR,0:SWITCH,0	63
0x12a86	              0x55	                                push rbp	      9458	screen.c	FUNCTION_79
0x12a87	          0x4889e5	                            mov rbp, rsp	      9458	screen.c	FUNCTION_79
0x12a8a	            0x4155	                                push r13	      9458	screen.c	FUNCTION_79
0x12a8c	            0x4154	                                push r12	      9458	screen.c	FUNCTION_79
0x12a8e	              0x53	                                push rbx	      9458	screen.c	FUNCTION_79
0x12a8f	        0x4883ec08	                              sub rsp, 8	      9458	screen.c	FUNCTION_79
0x12a93	      0xe800000000	                          call 0x4012ad8	      9459	screen.c	FUNCTION_79	IF_1	CALL_1
0x12a98	            0x85c0	                           test eax, eax	      9459	screen.c	FUNCTION_79	IF_1	CALL_1
0x12a9a	     0xf84cc000000	                            je 0x4012bac	      9459	screen.c	FUNCTION_79	IF_1	CALL_1
0x12aa0	      0xe800000000	                          call 0x4012ae5	      9461	screen.c	FUNCTION_79	IF_1	CALL_2
0x12aa5	    0x488b05000000	            mov rax, qword [0x04012aec] 	      9463	screen.c	FUNCTION_79	IF_1
0x12aac	    0x448ba0a80000	           mov r12d, dword [rax + 0xa8] 	      9463	screen.c	FUNCTION_79	IF_1
0x12ab3	    0x488b05000000	            mov rax, qword [0x04012afa] 	      9467	screen.c	FUNCTION_79	IF_1
0x12aba	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      9467	screen.c	FUNCTION_79	IF_1
0x12ac0	            0x85c0	                           test eax, eax	      9473	screen.c	FUNCTION_79	IF_1
0x12ac2	            0x7463	                            je 0x4012b67	      9473	screen.c	FUNCTION_79	IF_1
0x12ac4	    0x488b05000000	            mov rax, qword [0x04012b0b] 	      9467	screen.c	FUNCTION_79	IF_1
0x12acb	    0x8b90ac000000	            mov edx, dword [rax + 0xac] 	      9467	screen.c	FUNCTION_79	IF_1
0x12ad1	    0x488b05000000	            mov rax, qword [0x04012b18] 	      9467	screen.c	FUNCTION_79	IF_1
0x12ad8	    0x8b80e0000000	            mov eax, dword [rax + 0xe0] 	      9467	screen.c	FUNCTION_79	IF_1
0x12ade	            0x29c2	                            sub edx, eax	      9467	screen.c	FUNCTION_79	IF_1
0x12ae0	          0x4189d5	                           mov r13d, edx	      9467	screen.c	FUNCTION_79	IF_1
0x12ae3	    0x8b0500000000	            mov eax, dword [0x04012b29] 	      9469	screen.c	FUNCTION_79	IF_1
0x12ae9	            0x85c0	                           test eax, eax	      9471	screen.c	FUNCTION_79	IF_1	CALL_7
0x12aeb	            0x742d	                            je 0x4012b5a	      9471	screen.c	FUNCTION_79	IF_1	CALL_7
0x12aed	    0x488b1d000000	            mov rbx, qword [0x04012b34] 	      9470	screen.c	FUNCTION_79	IF_1	CALL_5
0x12af4	      0xe800000000	                          call 0x4012b39	      9470	screen.c	FUNCTION_79	IF_1	CALL_5
0x12af9	          0x4889c7	                            mov rdi, rax	      9470	screen.c	FUNCTION_79	IF_1	CALL_5
0x12afc	            0xffd3	                                call rbx	      9470	screen.c	FUNCTION_79	IF_1	CALL_5
0x12afe	          0x83f802	                              cmp eax, 2	      9470	screen.c	FUNCTION_79	IF_1	CALL_5
0x12b01	            0x7517	                           jne 0x4012b5a	      9470	screen.c	FUNCTION_79	IF_1	CALL_5
0x12b03	      0xe800000000	                          call 0x4012b48	      9471	screen.c	FUNCTION_79	IF_1	CALL_7
0x12b08	            0x89c7	                            mov edi, eax	      9471	screen.c	FUNCTION_79	IF_1	CALL_7
0x12b0a	      0xe800000000	                          call 0x4012b4f	      9471	screen.c	FUNCTION_79	IF_1	CALL_7
0x12b0f	            0x85c0	                           test eax, eax	      9471	screen.c	FUNCTION_79	IF_1	CALL_7
0x12b11	            0x7407	                            je 0x4012b5a	      9471	screen.c	FUNCTION_79	IF_1	CALL_7
0x12b13	      0xb802000000	                              mov eax, 2	      9471	screen.c	FUNCTION_79	IF_1	CALL_7
0x12b18	            0xeb05	                           jmp 0x4012b5f	      9471	screen.c	FUNCTION_79	IF_1	CALL_7
0x12b1a	      0xb801000000	                              mov eax, 1	      9471	screen.c	FUNCTION_79	IF_1	CALL_7
0x12b1f	          0x4129c5	                           sub r13d, eax	      9473	screen.c	FUNCTION_79	IF_1
0x12b22	          0x4489e8	                           mov eax, r13d	      9473	screen.c	FUNCTION_79	IF_1
0x12b25	            0xeb0d	                           jmp 0x4012b74	      9473	screen.c	FUNCTION_79	IF_1
0x12b27	    0x488b05000000	            mov rax, qword [0x04012b6e] 	      9475	screen.c	FUNCTION_79	IF_1
0x12b2e	    0x8b80e0000000	            mov eax, dword [rax + 0xe0] 	      9473	screen.c	FUNCTION_79	IF_1
0x12b34	        0x418d1404	                    lea edx, [r12 + rax]	      9462	screen.c	FUNCTION_79	IF_1	CALL_4
0x12b38	    0x488b05000000	            mov rax, qword [0x04012b7f] 	      9462	screen.c	FUNCTION_79	IF_1	CALL_4
0x12b3f	    0x8b889c000000	            mov ecx, dword [rax + 0x9c] 	      9462	screen.c	FUNCTION_79	IF_1	CALL_4
0x12b45	    0x488b05000000	            mov rax, qword [0x04012b8c] 	      9462	screen.c	FUNCTION_79	IF_1	CALL_4
0x12b4c	    0x8b80a8010000	           mov eax, dword [rax + 0x1a8] 	      9462	screen.c	FUNCTION_79	IF_1	CALL_4
0x12b52	             0x1c1	                            add ecx, eax	      9462	screen.c	FUNCTION_79	IF_1	CALL_4
0x12b54	    0x488b05000000	            mov rax, qword [0x04012b9b] 	      9462	screen.c	FUNCTION_79	IF_1	CALL_4
0x12b5b	    0x8b80dc000000	            mov eax, dword [rax + 0xdc] 	      9462	screen.c	FUNCTION_79	IF_1	CALL_4
0x12b61	             0x1c8	                            add eax, ecx	      9462	screen.c	FUNCTION_79	IF_1	CALL_4
0x12b63	            0x89d6	                            mov esi, edx	      9462	screen.c	FUNCTION_79	IF_1	CALL_4
0x12b65	            0x89c7	                            mov edi, eax	      9462	screen.c	FUNCTION_79	IF_1	CALL_4
0x12b67	      0xe800000000	                          call 0x4012bac	      9462	screen.c	FUNCTION_79	IF_1	CALL_4
0x12b6c	              0x90	                                     nop	      9477	screen.c	FUNCTION_79
0x12b6d	        0x4883c408	                              add rsp, 8	      9477	screen.c	FUNCTION_79
0x12b71	              0x5b	                                 pop rbx	      9477	screen.c	FUNCTION_79
0x12b72	            0x415c	                                 pop r12	      9477	screen.c	FUNCTION_79
0x12b74	            0x415d	                                 pop r13	      9477	screen.c	FUNCTION_79
0x12b76	              0x5d	                                 pop rbp	      9477	screen.c	FUNCTION_79
0x12b77	              0xc3	                                     ret	      9477	screen.c	FUNCTION_79
redraw_later_clear	DO,0:functions,0:CALL,1:ELSE,1:IF,1:WHILE,0:FOR,0:SWITCH,0	8
0x7e	              0x55	                                push rbp	       222	screen.c	FUNCTION_3
0x7f	          0x4889e5	                            mov rbp, rsp	       222	screen.c	FUNCTION_3
0x82	      0xbf32000000	                           mov edi, 0x32	       223	screen.c	FUNCTION_3	CALL_1
0x87	      0xe800000000	                          call 0x40000cc	       223	screen.c	FUNCTION_3	CALL_1
0x8c	    0xc70500000000	           mov dword [0x040000d6], 0x8b 	       232	screen.c	FUNCTION_3	ELSE_1
0x96	              0x90	                                     nop	       233	screen.c	FUNCTION_3	ELSE_1
0x97	              0x5d	                                 pop rbp	       233	screen.c	FUNCTION_3	ELSE_1
0x98	              0xc3	                                     ret	       233	screen.c	FUNCTION_3	ELSE_1
end_search_hl	DO,0:functions,0:CALL,1:ELSE,0:IF,1:WHILE,0:FOR,0:SWITCH,0	12
0xf7c7	              0x55	                                push rbp	      7692	screen.c	FUNCTION_53
0xf7c8	          0x4889e5	                            mov rbp, rsp	      7692	screen.c	FUNCTION_53
0xf7cb	    0x488b05000000	            mov rax, qword [0x0400f812] 	      7693	screen.c	FUNCTION_53	IF_1
0xf7d2	          0x4885c0	                           test rax, rax	      7693	screen.c	FUNCTION_53	IF_1
0xf7d5	            0x741a	                            je 0x400f831	      7693	screen.c	FUNCTION_53	IF_1
0xf7d7	    0x488b05000000	            mov rax, qword [0x0400f81e] 	      7695	screen.c	FUNCTION_53	IF_1	CALL_1
0xf7de	          0x4889c7	                            mov rdi, rax	      7695	screen.c	FUNCTION_53	IF_1	CALL_1
0xf7e1	      0xe800000000	                          call 0x400f826	      7695	screen.c	FUNCTION_53	IF_1	CALL_1
0xf7e6	    0x48c705000000	               mov qword [0x0400f831], 0	      7696	screen.c	FUNCTION_53	IF_1
0xf7f1	              0x90	                                     nop	      7698	screen.c	FUNCTION_53
0xf7f2	              0x5d	                                 pop rbp	      7698	screen.c	FUNCTION_53
0xf7f3	              0xc3	                                     ret	      7698	screen.c	FUNCTION_53
screen_fill	DO,0:functions,0:CALL,11:ELSE,3:IF,22:WHILE,3:FOR,2:SWITCH,0	392
0x10d5e	              0x55	                                push rbp	      8495	screen.c	FUNCTION_66
0x10d5f	          0x4889e5	                            mov rbp, rsp	      8495	screen.c	FUNCTION_66
0x10d62	        0x4883ec40	                           sub rsp, 0x40	      8495	screen.c	FUNCTION_66
0x10d66	          0x897ddc	             mov dword [rbp - 0x24], edi	      8495	screen.c	FUNCTION_66
0x10d69	          0x8975d8	             mov dword [rbp - 0x28], esi	      8495	screen.c	FUNCTION_66
0x10d6c	          0x8955d4	             mov dword [rbp - 0x2c], edx	      8495	screen.c	FUNCTION_66
0x10d6f	          0x894dd0	             mov dword [rbp - 0x30], ecx	      8495	screen.c	FUNCTION_66
0x10d72	        0x448945cc	             mov dword [rbp - 0x34], r8d	      8495	screen.c	FUNCTION_66
0x10d76	        0x44894dc8	             mov dword [rbp - 0x38], r9d	      8495	screen.c	FUNCTION_66
0x10d7a	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      8504	screen.c	FUNCTION_66
0x10d81	    0x8b0500000000	            mov eax, dword [0x04010dc7] 	      8507	screen.c	FUNCTION_66	IF_1
0x10d87	          0x3945d8	            cmp dword [rbp - 0x28], eax 	      8507	screen.c	FUNCTION_66	IF_1
0x10d8a	            0x7e09	                           jle 0x4010dd5	      8507	screen.c	FUNCTION_66	IF_1
0x10d8c	    0x8b0500000000	            mov eax, dword [0x04010dd2] 	      8508	screen.c	FUNCTION_66	IF_1
0x10d92	          0x8945d8	             mov dword [rbp - 0x28], eax	      8508	screen.c	FUNCTION_66	IF_1
0x10d95	    0x8b0500000000	            mov eax, dword [0x04010ddb] 	      8509	screen.c	FUNCTION_66	IF_2
0x10d9b	          0x3945d0	            cmp dword [rbp - 0x30], eax 	      8509	screen.c	FUNCTION_66	IF_2
0x10d9e	            0x7e09	                           jle 0x4010de9	      8509	screen.c	FUNCTION_66	IF_2
0x10da0	    0x8b0500000000	            mov eax, dword [0x04010de6] 	      8510	screen.c	FUNCTION_66	IF_2
0x10da6	          0x8945d0	             mov dword [rbp - 0x30], eax	      8510	screen.c	FUNCTION_66	IF_2
0x10da9	    0x488b05000000	            mov rax, qword [0x04010df0] 	      8511	screen.c	FUNCTION_66	IF_3
0x10db0	          0x4885c0	                           test rax, rax	      8511	screen.c	FUNCTION_66	IF_3
0x10db3	     0xf840b050000	                            je 0x4011304	      8511	screen.c	FUNCTION_66	IF_3
0x10db9	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      8512	screen.c	FUNCTION_66	IF_3
0x10dbc	          0x3b45d8	             cmp eax, dword [rbp - 0x28]	      8512	screen.c	FUNCTION_66	IF_3
0x10dbf	     0xf8dff040000	                           jge 0x4011304	      8512	screen.c	FUNCTION_66	IF_3
0x10dc5	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      8513	screen.c	FUNCTION_66	IF_3
0x10dc8	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	      8513	screen.c	FUNCTION_66	IF_3
0x10dcb	     0xf8df3040000	                           jge 0x4011304	      8513	screen.c	FUNCTION_66	IF_3
0x10dd1	    0x8b0500000000	            mov eax, dword [0x04010e17] 	      8521	screen.c	FUNCTION_66
0x10dd7	          0x83f801	                              cmp eax, 1	      8521	screen.c	FUNCTION_66
0x10dda	            0x7f11	                            jg 0x4010e2d	      8521	screen.c	FUNCTION_66
0x10ddc	    0x8b0500000000	            mov eax, dword [0x04010e22] 	      8521	screen.c	FUNCTION_66
0x10de2	            0x85c0	                           test eax, eax	      8521	screen.c	FUNCTION_66
0x10de4	            0x7507	                           jne 0x4010e2d	      8521	screen.c	FUNCTION_66
0x10de6	      0xb801000000	                              mov eax, 1	      8521	screen.c	FUNCTION_66
0x10deb	            0xeb05	                           jmp 0x4010e32	      8521	screen.c	FUNCTION_66
0x10ded	      0xb800000000	                              mov eax, 0	      8521	screen.c	FUNCTION_66
0x10df2	          0x8945f8	                mov dword [rbp - 8], eax	      8517	screen.c	FUNCTION_66
0x10df5	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      8522	screen.c	FUNCTION_66	FOR_1
0x10df8	          0x8945e0	             mov dword [rbp - 0x20], eax	      8522	screen.c	FUNCTION_66	FOR_1
0x10dfb	      0xe9b6040000	                           jmp 0x40112f6	      8522	screen.c	FUNCTION_66	FOR_1
0x10e00	    0x8b0500000000	            mov eax, dword [0x04010e46] 	      8525	screen.c	FUNCTION_66	FOR_1	IF_4
0x10e06	            0x85c0	                           test eax, eax	      8525	screen.c	FUNCTION_66	FOR_1	IF_4
0x10e08	            0x747a	                            je 0x4010ec4	      8525	screen.c	FUNCTION_66	FOR_1	IF_4
0x10e0a	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      8535	screen.c	FUNCTION_66	FOR_1	IF_4	IF_5	CALL_1
0x10e0e	            0x7e36	                           jle 0x4010e86	      8535	screen.c	FUNCTION_66	FOR_1	IF_4	IF_5	CALL_1
0x10e10	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      8535	screen.c	FUNCTION_66	FOR_1	IF_4	IF_5	CALL_1
0x10e13	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      8535	screen.c	FUNCTION_66	FOR_1	IF_4	IF_5	CALL_1
0x10e16	            0x89d6	                            mov esi, edx	      8535	screen.c	FUNCTION_66	FOR_1	IF_4	IF_5	CALL_1
0x10e18	            0x89c7	                            mov edi, eax	      8535	screen.c	FUNCTION_66	FOR_1	IF_4	IF_5	CALL_1
0x10e1a	      0xe800000000	                          call 0x4010e5f	      8535	screen.c	FUNCTION_66	FOR_1	IF_4	IF_5	CALL_1
0x10e1f	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      8535	screen.c	FUNCTION_66	FOR_1	IF_4	IF_5	CALL_1
0x10e22	            0x7422	                            je 0x4010e86	      8535	screen.c	FUNCTION_66	FOR_1	IF_4	IF_5	CALL_1
0x10e24	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      8536	screen.c	FUNCTION_66	FOR_1	IF_4	CALL_2
0x10e27	          0x8d50ff	                      lea edx, [rax - 1]	      8536	screen.c	FUNCTION_66	FOR_1	IF_4	CALL_2
0x10e2a	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      8536	screen.c	FUNCTION_66	FOR_1	IF_4	CALL_2
0x10e2d	    0x41b800000000	                              mov r8d, 0	      8536	screen.c	FUNCTION_66	FOR_1	IF_4	CALL_2
0x10e33	            0x89d1	                            mov ecx, edx	      8536	screen.c	FUNCTION_66	FOR_1	IF_4	CALL_2
0x10e35	            0x89c2	                            mov edx, eax	      8536	screen.c	FUNCTION_66	FOR_1	IF_4	CALL_2
0x10e37	      0xbe01000000	                              mov esi, 1	      8536	screen.c	FUNCTION_66	FOR_1	IF_4	CALL_2
0x10e3c	      0xbf00000000	                              mov edi, 0	      8536	screen.c	FUNCTION_66	FOR_1	IF_4	CALL_2
0x10e41	      0xe800000000	                          call 0x4010e86	      8536	screen.c	FUNCTION_66	FOR_1	IF_4	CALL_2
0x10e46	    0x8b0500000000	            mov eax, dword [0x04010e8c] 	      8537	screen.c	FUNCTION_66	FOR_1	IF_4	IF_6	CALL_3
0x10e4c	          0x3945d0	            cmp dword [rbp - 0x30], eax 	      8537	screen.c	FUNCTION_66	FOR_1	IF_4	IF_6	CALL_3
0x10e4f	            0x7d33	                           jge 0x4010ec4	      8537	screen.c	FUNCTION_66	FOR_1	IF_4	IF_6	CALL_3
0x10e51	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      8537	screen.c	FUNCTION_66	FOR_1	IF_4	IF_6	CALL_3
0x10e54	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      8537	screen.c	FUNCTION_66	FOR_1	IF_4	IF_6	CALL_3
0x10e57	            0x89d6	                            mov esi, edx	      8537	screen.c	FUNCTION_66	FOR_1	IF_4	IF_6	CALL_3
0x10e59	            0x89c7	                            mov edi, eax	      8537	screen.c	FUNCTION_66	FOR_1	IF_4	IF_6	CALL_3
0x10e5b	      0xe800000000	                          call 0x4010ea0	      8537	screen.c	FUNCTION_66	FOR_1	IF_4	IF_6	CALL_3
0x10e60	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	      8537	screen.c	FUNCTION_66	FOR_1	IF_4	IF_6	CALL_3
0x10e63	            0x741f	                            je 0x4010ec4	      8537	screen.c	FUNCTION_66	FOR_1	IF_4	IF_6	CALL_3
0x10e65	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      8538	screen.c	FUNCTION_66	FOR_1	IF_4	CALL_4
0x10e68	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      8538	screen.c	FUNCTION_66	FOR_1	IF_4	CALL_4
0x10e6b	    0x41b800000000	                              mov r8d, 0	      8538	screen.c	FUNCTION_66	FOR_1	IF_4	CALL_4
0x10e71	            0x89d1	                            mov ecx, edx	      8538	screen.c	FUNCTION_66	FOR_1	IF_4	CALL_4
0x10e73	            0x89c2	                            mov edx, eax	      8538	screen.c	FUNCTION_66	FOR_1	IF_4	CALL_4
0x10e75	      0xbe01000000	                              mov esi, 1	      8538	screen.c	FUNCTION_66	FOR_1	IF_4	CALL_4
0x10e7a	      0xbf00000000	                              mov edi, 0	      8538	screen.c	FUNCTION_66	FOR_1	IF_4	CALL_4
0x10e7f	      0xe800000000	                          call 0x4010ec4	      8538	screen.c	FUNCTION_66	FOR_1	IF_4	CALL_4
0x10e84	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      8546	screen.c	FUNCTION_66	FOR_1
0x10e8b	        0x837dc820	           cmp dword [rbp - 0x38], 0x20 	      8547	screen.c	FUNCTION_66	FOR_1	IF_7
0x10e8f	     0xf85cc010000	                           jne 0x40110a1	      8547	screen.c	FUNCTION_66	FOR_1	IF_7
0x10e95	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      8548	screen.c	FUNCTION_66	FOR_1	IF_7
0x10e98	          0x4863d0	                         movsxd rdx, eax	      8548	screen.c	FUNCTION_66	FOR_1	IF_7
0x10e9b	    0x488b05000000	            mov rax, qword [0x04010ee2] 	      8548	screen.c	FUNCTION_66	FOR_1	IF_7
0x10ea2	          0x4839c2	                            cmp rdx, rax	      8548	screen.c	FUNCTION_66	FOR_1	IF_7
0x10ea5	     0xf85b6010000	                           jne 0x40110a1	      8548	screen.c	FUNCTION_66	FOR_1	IF_7
0x10eab	    0x488b05000000	            mov rax, qword [0x04010ef2] 	      8549	screen.c	FUNCTION_66	FOR_1	IF_7	CALL_5
0x10eb2	          0x4889c7	                            mov rdi, rax	      8549	screen.c	FUNCTION_66	FOR_1	IF_7	CALL_5
0x10eb5	      0xe800000000	                          call 0x4010efa	      8549	screen.c	FUNCTION_66	FOR_1	IF_7	CALL_5
0x10eba	            0x85c0	                           test eax, eax	      8549	screen.c	FUNCTION_66	FOR_1	IF_7	CALL_5
0x10ebc	     0xf849f010000	                            je 0x40110a1	      8549	screen.c	FUNCTION_66	FOR_1	IF_7	CALL_5
0x10ec2	        0x837d1000	               cmp dword [rbp + 0x10], 0	      8550	screen.c	FUNCTION_66	FOR_1	IF_7
0x10ec6	            0x7425	                            je 0x4010f2d	      8550	screen.c	FUNCTION_66	FOR_1	IF_7
0x10ec8	        0x837df800	                  cmp dword [rbp - 8], 0	      8551	screen.c	FUNCTION_66	FOR_1	IF_7
0x10ecc	     0xf848f010000	                            je 0x40110a1	      8551	screen.c	FUNCTION_66	FOR_1	IF_7
0x10ed2	    0x817d10ff0000	           cmp dword [rbp + 0x10], 0xff 	      8552	screen.c	FUNCTION_66	FOR_1	IF_7
0x10ed9	     0xf8f82010000	                            jg 0x40110a1	      8552	screen.c	FUNCTION_66	FOR_1	IF_7
0x10edf	          0x8b4510	            mov eax, dword [rbp + 0x10] 	      8553	screen.c	FUNCTION_66	FOR_1	IF_7
0x10ee2	          0x83e0f9	                     and eax, 0xfffffff9	      8553	screen.c	FUNCTION_66	FOR_1	IF_7
0x10ee5	            0x85c0	                           test eax, eax	      8553	screen.c	FUNCTION_66	FOR_1	IF_7
0x10ee7	     0xf8574010000	                           jne 0x40110a1	      8553	screen.c	FUNCTION_66	FOR_1	IF_7
0x10eed	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      8558	screen.c	FUNCTION_66	FOR_1	IF_7
0x10ef0	          0x8945e4	             mov dword [rbp - 0x1c], eax	      8558	screen.c	FUNCTION_66	FOR_1	IF_7
0x10ef3	        0x837dcc20	           cmp dword [rbp - 0x34], 0x20 	      8559	screen.c	FUNCTION_66	FOR_1	IF_7	IF_8
0x10ef7	            0x7404	                            je 0x4010f3d	      8559	screen.c	FUNCTION_66	FOR_1	IF_7	IF_8
0x10ef9	        0x8345e401	               add dword [rbp - 0x1c], 1	      8560	screen.c	FUNCTION_66	FOR_1	IF_7	IF_8
0x10efd	    0x488b05000000	            mov rax, qword [0x04010f44] 	      8562	screen.c	FUNCTION_66	FOR_1	IF_7
0x10f04	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      8562	screen.c	FUNCTION_66	FOR_1	IF_7
0x10f07	          0x4863d2	                         movsxd rdx, edx	      8562	screen.c	FUNCTION_66	FOR_1	IF_7
0x10f0a	        0x48c1e202	                              shl rdx, 2	      8562	screen.c	FUNCTION_66	FOR_1	IF_7
0x10f0e	          0x4801d0	                            add rax, rdx	      8562	screen.c	FUNCTION_66	FOR_1	IF_7
0x10f11	            0x8b10	                    mov edx, dword [rax]	      8562	screen.c	FUNCTION_66	FOR_1	IF_7
0x10f13	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      8562	screen.c	FUNCTION_66	FOR_1	IF_7
0x10f16	             0x1d0	                            add eax, edx	      8562	screen.c	FUNCTION_66	FOR_1	IF_7
0x10f18	          0x8945e8	             mov dword [rbp - 0x18], eax	      8562	screen.c	FUNCTION_66	FOR_1	IF_7
0x10f1b	    0x488b05000000	            mov rax, qword [0x04010f62] 	      8563	screen.c	FUNCTION_66	FOR_1	IF_7
0x10f22	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      8563	screen.c	FUNCTION_66	FOR_1	IF_7
0x10f25	          0x4863d2	                         movsxd rdx, edx	      8563	screen.c	FUNCTION_66	FOR_1	IF_7
0x10f28	        0x48c1e202	                              shl rdx, 2	      8563	screen.c	FUNCTION_66	FOR_1	IF_7
0x10f2c	          0x4801d0	                            add rax, rdx	      8563	screen.c	FUNCTION_66	FOR_1	IF_7
0x10f2f	            0x8b10	                    mov edx, dword [rax]	      8563	screen.c	FUNCTION_66	FOR_1	IF_7
0x10f31	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      8563	screen.c	FUNCTION_66	FOR_1	IF_7
0x10f34	             0x1d0	                            add eax, edx	      8563	screen.c	FUNCTION_66	FOR_1	IF_7
0x10f36	          0x8945fc	                mov dword [rbp - 4], eax	      8563	screen.c	FUNCTION_66	FOR_1	IF_7
0x10f39	    0x8b0500000000	            mov eax, dword [0x04010f7f] 	      8567	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9
0x10f3f	            0x85c0	                           test eax, eax	      8567	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9
0x10f41	            0x7463	                            je 0x4010fe6	      8567	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9
0x10f43	            0xeb04	                           jmp 0x4010f89	      8568	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x10f45	        0x8345e801	               add dword [rbp - 0x18], 1	      8570	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x10f49	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      8568	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x10f4c	          0x3b45fc	                cmp eax, dword [rbp - 4]	      8568	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x10f4f	     0xf8d8a000000	                           jge 0x401101f	      8568	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x10f55	    0x488b15000000	            mov rdx, qword [0x04010f9c] 	      8568	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x10f5c	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      8568	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x10f5f	            0x4898	                                    cdqe	      8568	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x10f61	          0x4801d0	                            add rax, rdx	      8568	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x10f64	           0xfb600	                   movzx eax, byte [rax]	      8568	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x10f67	            0x3c20	                            cmp al, 0x20	      8568	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x10f69	            0x7574	                           jne 0x401101f	      8568	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x10f6b	    0x488b05000000	            mov rax, qword [0x04010fb2] 	      8569	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x10f72	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      8569	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x10f75	          0x4863d2	                         movsxd rdx, edx	      8569	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x10f78	          0x4801d2	                            add rdx, rdx	      8569	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x10f7b	          0x4801d0	                            add rax, rdx	      8569	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x10f7e	           0xfb700	                   movzx eax, word [rax]	      8569	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x10f81	          0x6685c0	                             test ax, ax	      8569	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x10f84	            0x7559	                           jne 0x401101f	      8569	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x10f86	    0x488b05000000	            mov rax, qword [0x04010fcd] 	      8569	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x10f8d	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      8569	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x10f90	          0x4863d2	                         movsxd rdx, edx	      8569	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x10f93	        0x48c1e202	                              shl rdx, 2	      8569	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x10f97	          0x4801d0	                            add rax, rdx	      8569	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x10f9a	            0x8b00	                    mov eax, dword [rax]	      8569	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x10f9c	            0x85c0	                           test eax, eax	      8569	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x10f9e	            0x74a5	                            je 0x4010f85	      8569	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x10fa0	            0xeb3d	                           jmp 0x401101f	      8569	screen.c	FUNCTION_66	FOR_1	IF_7	IF_9	WHILE_1
0x10fa2	        0x8345e801	               add dword [rbp - 0x18], 1	      8575	screen.c	FUNCTION_66	FOR_1	IF_7	ELSE_1	WHILE_2
0x10fa6	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      8573	screen.c	FUNCTION_66	FOR_1	IF_7	ELSE_1	WHILE_2
0x10fa9	          0x3b45fc	                cmp eax, dword [rbp - 4]	      8573	screen.c	FUNCTION_66	FOR_1	IF_7	ELSE_1	WHILE_2
0x10fac	            0x7d31	                           jge 0x401101f	      8573	screen.c	FUNCTION_66	FOR_1	IF_7	ELSE_1	WHILE_2
0x10fae	    0x488b15000000	            mov rdx, qword [0x04010ff5] 	      8573	screen.c	FUNCTION_66	FOR_1	IF_7	ELSE_1	WHILE_2
0x10fb5	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      8573	screen.c	FUNCTION_66	FOR_1	IF_7	ELSE_1	WHILE_2
0x10fb8	            0x4898	                                    cdqe	      8573	screen.c	FUNCTION_66	FOR_1	IF_7	ELSE_1	WHILE_2
0x10fba	          0x4801d0	                            add rax, rdx	      8573	screen.c	FUNCTION_66	FOR_1	IF_7	ELSE_1	WHILE_2
0x10fbd	           0xfb600	                   movzx eax, byte [rax]	      8573	screen.c	FUNCTION_66	FOR_1	IF_7	ELSE_1	WHILE_2
0x10fc0	            0x3c20	                            cmp al, 0x20	      8573	screen.c	FUNCTION_66	FOR_1	IF_7	ELSE_1	WHILE_2
0x10fc2	            0x751b	                           jne 0x401101f	      8573	screen.c	FUNCTION_66	FOR_1	IF_7	ELSE_1	WHILE_2
0x10fc4	    0x488b05000000	            mov rax, qword [0x0401100b] 	      8574	screen.c	FUNCTION_66	FOR_1	IF_7	ELSE_1	WHILE_2
0x10fcb	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      8574	screen.c	FUNCTION_66	FOR_1	IF_7	ELSE_1	WHILE_2
0x10fce	          0x4863d2	                         movsxd rdx, edx	      8574	screen.c	FUNCTION_66	FOR_1	IF_7	ELSE_1	WHILE_2
0x10fd1	          0x4801d2	                            add rdx, rdx	      8574	screen.c	FUNCTION_66	FOR_1	IF_7	ELSE_1	WHILE_2
0x10fd4	          0x4801d0	                            add rax, rdx	      8574	screen.c	FUNCTION_66	FOR_1	IF_7	ELSE_1	WHILE_2
0x10fd7	           0xfb700	                   movzx eax, word [rax]	      8574	screen.c	FUNCTION_66	FOR_1	IF_7	ELSE_1	WHILE_2
0x10fda	          0x6685c0	                             test ax, ax	      8574	screen.c	FUNCTION_66	FOR_1	IF_7	ELSE_1	WHILE_2
0x10fdd	            0x74c3	                            je 0x4010fe2	      8574	screen.c	FUNCTION_66	FOR_1	IF_7	ELSE_1	WHILE_2
0x10fdf	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      8576	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10
0x10fe2	          0x3b45fc	                cmp eax, dword [rbp - 4]	      8576	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10
0x10fe5	            0x7d73	                           jge 0x401109a	      8576	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10
0x10fe7	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      8578	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10
0x10fea	    0x488b05000000	            mov rax, qword [0x04011031] 	      8578	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10
0x10ff1	          0x8b4de0	             mov ecx, dword [rbp - 0x20]	      8578	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10
0x10ff4	          0x4863c9	                         movsxd rcx, ecx	      8578	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10
0x10ff7	        0x48c1e102	                              shl rcx, 2	      8578	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10
0x10ffb	          0x4801c8	                            add rax, rcx	      8578	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10
0x10ffe	            0x8b00	                    mov eax, dword [rax]	      8578	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10
0x11000	            0x29c2	                            sub edx, eax	      8578	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10
0x11002	            0x89d0	                            mov eax, edx	      8578	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10
0x11004	          0x8945e4	             mov dword [rbp - 0x1c], eax	      8578	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10
0x11007	      0xe800000000	                          call 0x401104c	      8579	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10	CALL_6
0x1100c	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      8580	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10	CALL_7
0x1100f	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      8580	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10	CALL_7
0x11012	            0x89d6	                            mov esi, edx	      8580	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10	CALL_7
0x11014	            0x89c7	                            mov edi, eax	      8580	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10	CALL_7
0x11016	      0xe800000000	                          call 0x401105b	      8580	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10	CALL_7
0x1101b	    0x488b05000000	            mov rax, qword [0x04011062] 	      8581	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10	CALL_8
0x11022	          0x4889c7	                            mov rdi, rax	      8581	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10	CALL_8
0x11025	      0xe800000000	                          call 0x401106a	      8581	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10	CALL_8
0x1102a	      0xe800000000	                          call 0x401106f	      8582	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10	CALL_9
0x1102f	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      8583	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10
0x11032	          0x2b45e4	             sub eax, dword [rbp - 0x1c]	      8583	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10
0x11035	          0x8945e4	             mov dword [rbp - 0x1c], eax	      8583	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10
0x11038	            0xeb13	                           jmp 0x401108d	      8584	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10	WHILE_3
0x1103a	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      8586	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10	WHILE_3	CALL_10
0x1103d	      0xbe00000000	                              mov esi, 0	      8586	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10	WHILE_3	CALL_10
0x11042	            0x89c7	                            mov edi, eax	      8586	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10	WHILE_3	CALL_10
0x11044	      0xe8b9fcffff	            call sym.space_to_screenline	      8586	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10	WHILE_3	CALL_10
0x11049	        0x8345e801	               add dword [rbp - 0x18], 1	      8587	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10	WHILE_3
0x1104d	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      8584	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10	WHILE_3
0x11050	          0x8d50ff	                      lea edx, [rax - 1]	      8584	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10	WHILE_3
0x11053	          0x8955e4	             mov dword [rbp - 0x1c], edx	      8584	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10	WHILE_3
0x11056	            0x85c0	                           test eax, eax	      8584	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10	WHILE_3
0x11058	            0x75e0	                           jne 0x401107a	      8584	screen.c	FUNCTION_66	FOR_1	IF_7	IF_10	WHILE_3
0x1105a	    0xc745ec010000	               mov dword [rbp - 0x14], 1	      8590	screen.c	FUNCTION_66	FOR_1	IF_7
0x11061	    0x488b05000000	            mov rax, qword [0x040110a8] 	      8593	screen.c	FUNCTION_66	FOR_1
0x11068	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      8593	screen.c	FUNCTION_66	FOR_1
0x1106b	          0x4863d2	                         movsxd rdx, edx	      8593	screen.c	FUNCTION_66	FOR_1
0x1106e	        0x48c1e202	                              shl rdx, 2	      8593	screen.c	FUNCTION_66	FOR_1
0x11072	          0x4801d0	                            add rax, rdx	      8593	screen.c	FUNCTION_66	FOR_1
0x11075	            0x8b10	                    mov edx, dword [rax]	      8593	screen.c	FUNCTION_66	FOR_1
0x11077	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      8593	screen.c	FUNCTION_66	FOR_1
0x1107a	             0x1d0	                            add eax, edx	      8593	screen.c	FUNCTION_66	FOR_1
0x1107c	          0x8945e8	             mov dword [rbp - 0x18], eax	      8593	screen.c	FUNCTION_66	FOR_1
0x1107f	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      8594	screen.c	FUNCTION_66	FOR_1
0x11082	          0x8945f0	             mov dword [rbp - 0x10], eax	      8594	screen.c	FUNCTION_66	FOR_1
0x11085	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      8595	screen.c	FUNCTION_66	FOR_1	FOR_2
0x11088	          0x8945e4	             mov dword [rbp - 0x1c], eax	      8595	screen.c	FUNCTION_66	FOR_1	FOR_2
0x1108b	      0xe9aa010000	                           jmp 0x401127a	      8595	screen.c	FUNCTION_66	FOR_1	FOR_2
0x11090	    0x488b15000000	            mov rdx, qword [0x040110d7] 	      8597	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x11097	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      8597	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x1109a	            0x4898	                                    cdqe	      8597	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x1109c	          0x4801d0	                            add rax, rdx	      8597	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x1109f	           0xfb600	                   movzx eax, byte [rax]	      8597	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x110a2	           0xfb6c0	                           movzx eax, al	      8597	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x110a5	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	      8597	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x110a8	            0x755e	                           jne 0x4011148	      8597	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x110aa	    0x8b0500000000	            mov eax, dword [0x040110f0] 	      8599	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x110b0	            0x85c0	                           test eax, eax	      8599	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x110b2	            0x742c	                            je 0x4011120	      8599	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x110b4	    0x488b05000000	            mov rax, qword [0x040110fb] 	      8599	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x110bb	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      8599	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x110be	          0x4863d2	                         movsxd rdx, edx	      8599	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x110c1	        0x48c1e202	                              shl rdx, 2	      8599	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x110c5	          0x4801d0	                            add rax, rdx	      8599	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x110c8	            0x8b00	                    mov eax, dword [rax]	      8599	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x110ca	            0x89c2	                            mov edx, eax	      8599	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x110cc	        0x837df07f	           cmp dword [rbp - 0x10], 0x7f 	      8600	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x110d0	            0x7e05	                           jle 0x4011117	      8600	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x110d2	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      8600	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x110d5	            0xeb05	                           jmp 0x401111c	      8600	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x110d7	      0xb800000000	                              mov eax, 0	      8600	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x110dc	            0x39c2	                            cmp edx, eax	      8599	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x110de	            0x7528	                           jne 0x4011148	      8599	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x110e0	    0x488b05000000	            mov rax, qword [0x04011127] 	      8602	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x110e7	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      8602	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x110ea	          0x4863d2	                         movsxd rdx, edx	      8602	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x110ed	          0x4801d2	                            add rdx, rdx	      8602	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x110f0	          0x4801d0	                            add rax, rdx	      8602	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x110f3	           0xfb700	                   movzx eax, word [rax]	      8602	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x110f6	           0xfb7c0	                           movzx eax, ax	      8602	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x110f9	          0x3b4510	            cmp eax, dword [rbp + 0x10] 	      8602	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x110fc	            0x750a	                           jne 0x4011148	      8602	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x110fe	        0x837df400	                cmp dword [rbp - 0xc], 0	      8604	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x11102	     0xf8416010000	                            je 0x401125e	      8604	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x11108	    0x8b0500000000	            mov eax, dword [0x0401114e] 	      8621	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_12
0x1110e	            0x85c0	                           test eax, eax	      8613	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_12
0x11110	            0x7462	                            je 0x40111b4	      8613	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_12
0x11112	    0x488b15000000	            mov rdx, qword [0x04011159] 	      8625	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_12	IF_13
0x11119	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      8625	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_12	IF_13
0x1111c	            0x4898	                                    cdqe	      8625	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_12	IF_13
0x1111e	          0x4801d0	                            add rax, rdx	      8625	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_12	IF_13
0x11121	           0xfb600	                   movzx eax, byte [rax]	      8625	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_12	IF_13
0x11124	            0x3c20	                            cmp al, 0x20	      8625	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_12	IF_13
0x11126	            0x7445	                            je 0x40111ad	      8625	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_12	IF_13
0x11128	    0x488b05000000	            mov rax, qword [0x0401116f] 	      8626	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_12	IF_13
0x1112f	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      8626	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_12	IF_13
0x11132	          0x4863d2	                         movsxd rdx, edx	      8626	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_12	IF_13
0x11135	          0x4801d2	                            add rdx, rdx	      8626	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_12	IF_13
0x11138	          0x4801d0	                            add rax, rdx	      8626	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_12	IF_13
0x1113b	           0xfb700	                   movzx eax, word [rax]	      8626	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_12	IF_13
0x1113e	        0x663dff00	                            cmp ax, 0xff	      8626	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_12	IF_13
0x11142	            0x7720	                            ja 0x40111a4	      8626	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_12	IF_13
0x11144	    0x488b05000000	            mov rax, qword [0x0401118b] 	      8627	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_12	IF_13
0x1114b	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      8627	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_12	IF_13
0x1114e	          0x4863d2	                         movsxd rdx, edx	      8627	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_12	IF_13
0x11151	          0x4801d2	                            add rdx, rdx	      8627	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_12	IF_13
0x11154	          0x4801d0	                            add rax, rdx	      8627	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_12	IF_13
0x11157	           0xfb700	                   movzx eax, word [rax]	      8627	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_12	IF_13
0x1115a	           0xfb7c0	                           movzx eax, ax	      8627	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_12	IF_13
0x1115d	          0x83e002	                              and eax, 2	      8627	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_12	IF_13
0x11160	            0x85c0	                           test eax, eax	      8627	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_12	IF_13
0x11162	            0x7409	                            je 0x40111ad	      8627	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_12	IF_13
0x11164	    0xc745f4010000	                mov dword [rbp - 0xc], 1	      8628	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_12	IF_13
0x1116b	            0xeb07	                           jmp 0x40111b4	      8628	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_12	IF_13
0x1116d	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      8630	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_12	ELSE_2
0x11174	    0x488b15000000	            mov rdx, qword [0x040111bb] 	      8633	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	ELSE_2
0x1117b	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      8633	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	ELSE_2
0x1117e	            0x4898	                                    cdqe	      8633	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	ELSE_2
0x11180	          0x4801d0	                            add rax, rdx	      8633	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	ELSE_2
0x11183	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      8633	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	ELSE_2
0x11186	            0x8810	                      mov byte [rax], dl	      8633	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	ELSE_2
0x11188	    0x8b0500000000	            mov eax, dword [0x040111ce] 	      8635	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	ELSE_2	IF_14
0x1118e	            0x85c0	                           test eax, eax	      8635	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	ELSE_2	IF_14
0x11190	            0x7455	                            je 0x4011227	      8635	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	ELSE_2	IF_14
0x11192	        0x837df07f	           cmp dword [rbp - 0x10], 0x7f 	      8637	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	ELSE_2	IF_14	IF_15
0x11196	            0x7e35	                           jle 0x401120d	      8637	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	ELSE_2	IF_14	IF_15
0x11198	    0x488b05000000	            mov rax, qword [0x040111df] 	      8639	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	ELSE_2	IF_14	IF_15
0x1119f	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      8639	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	ELSE_2	IF_14	IF_15
0x111a2	          0x4863d2	                         movsxd rdx, edx	      8639	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	ELSE_2	IF_14	IF_15
0x111a5	        0x48c1e202	                              shl rdx, 2	      8639	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	ELSE_2	IF_14	IF_15
0x111a9	          0x4801c2	                            add rdx, rax	      8639	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	ELSE_2	IF_14	IF_15
0x111ac	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      8639	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	ELSE_2	IF_14	IF_15
0x111af	            0x8902	                    mov dword [rdx], eax	      8639	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	ELSE_2	IF_14	IF_15
0x111b1	    0x488b05000000	            mov rax, qword [0x040111f8] 	      8640	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	ELSE_2	IF_14	IF_15
0x111b8	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      8640	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	ELSE_2	IF_14	IF_15
0x111bb	          0x4863d2	                         movsxd rdx, edx	      8640	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	ELSE_2	IF_14	IF_15
0x111be	        0x48c1e202	                              shl rdx, 2	      8640	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	ELSE_2	IF_14	IF_15
0x111c2	          0x4801d0	                            add rax, rdx	      8640	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	ELSE_2	IF_14	IF_15
0x111c5	    0xc70000000000	                      mov dword [rax], 0	      8640	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	ELSE_2	IF_14	IF_15
0x111cb	            0xeb1a	                           jmp 0x4011227	      8640	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	ELSE_2	IF_14	IF_15
0x111cd	    0x488b05000000	            mov rax, qword [0x04011214] 	      8643	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	ELSE_2	IF_14	ELSE_3
0x111d4	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      8643	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	ELSE_2	IF_14	ELSE_3
0x111d7	          0x4863d2	                         movsxd rdx, edx	      8643	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	ELSE_2	IF_14	ELSE_3
0x111da	        0x48c1e202	                              shl rdx, 2	      8643	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	ELSE_2	IF_14	ELSE_3
0x111de	          0x4801d0	                            add rax, rdx	      8643	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	ELSE_2	IF_14	ELSE_3
0x111e1	    0xc70000000000	                      mov dword [rax], 0	      8643	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	ELSE_2	IF_14	ELSE_3
0x111e7	    0x488b05000000	            mov rax, qword [0x0401122e] 	      8646	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x111ee	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      8646	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x111f1	          0x4863d2	                         movsxd rdx, edx	      8646	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x111f4	          0x4801d2	                            add rdx, rdx	      8646	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x111f7	          0x4801d0	                            add rax, rdx	      8646	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x111fa	          0x8b5510	            mov edx, dword [rbp + 0x10] 	      8646	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x111fd	          0x668910	                      mov word [rax], dx	      8646	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11
0x11200	        0x837dec00	               cmp dword [rbp - 0x14], 0	      8647	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_16
0x11204	            0x7406	                            je 0x401124c	      8647	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_16
0x11206	        0x837df020	           cmp dword [rbp - 0x10], 0x20 	      8647	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_16
0x1120a	            0x7412	                            je 0x401125e	      8647	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	IF_16
0x1120c	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      8648	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	CALL_11
0x1120f	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      8648	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	CALL_11
0x11212	          0x8b4de0	             mov ecx, dword [rbp - 0x20]	      8648	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	CALL_11
0x11215	            0x89ce	                            mov esi, ecx	      8648	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	CALL_11
0x11217	            0x89c7	                            mov edi, eax	      8648	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	CALL_11
0x11219	      0xe868f6ffff	                    call sym.screen_char	      8648	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_11	CALL_11
0x1121e	        0x8345e801	               add dword [rbp - 0x18], 1	      8650	screen.c	FUNCTION_66	FOR_1	FOR_2
0x11222	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      8651	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_17
0x11225	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      8651	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_17
0x11228	            0x750c	                           jne 0x4011276	      8651	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_17
0x1122a	        0x837dec00	               cmp dword [rbp - 0x14], 0	      8653	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_17	IF_18
0x1122e	            0x7518	                           jne 0x4011288	      8653	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_17	IF_18
0x11230	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      8655	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_17
0x11233	          0x8945f0	             mov dword [rbp - 0x10], eax	      8655	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_17
0x11236	        0x8345e401	               add dword [rbp - 0x1c], 1	      8595	screen.c	FUNCTION_66	FOR_1	FOR_2
0x1123a	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      8595	screen.c	FUNCTION_66	FOR_1	FOR_2
0x1123d	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	      8595	screen.c	FUNCTION_66	FOR_1	FOR_2
0x11240	     0xf8c4afeffff	                            jl 0x40110d0	      8595	screen.c	FUNCTION_66	FOR_1	FOR_2
0x11246	            0xeb01	                           jmp 0x4011289	      8595	screen.c	FUNCTION_66	FOR_1	FOR_2
0x11248	              0x90	                                     nop	      8654	screen.c	FUNCTION_66	FOR_1	FOR_2	IF_17	IF_18
0x11249	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      8658	screen.c	FUNCTION_66	FOR_1	IF_19
0x1124c	          0x4863d0	                         movsxd rdx, eax	      8658	screen.c	FUNCTION_66	FOR_1	IF_19
0x1124f	    0x488b05000000	            mov rax, qword [0x04011296] 	      8658	screen.c	FUNCTION_66	FOR_1	IF_19
0x11256	          0x4839c2	                            cmp rdx, rax	      8658	screen.c	FUNCTION_66	FOR_1	IF_19
0x11259	            0x7512	                           jne 0x40112ad	      8658	screen.c	FUNCTION_66	FOR_1	IF_19
0x1125b	    0x488b15000000	            mov rdx, qword [0x040112a2] 	      8659	screen.c	FUNCTION_66	FOR_1	IF_19
0x11262	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      8659	screen.c	FUNCTION_66	FOR_1	IF_19
0x11265	            0x4898	                                    cdqe	      8659	screen.c	FUNCTION_66	FOR_1	IF_19
0x11267	          0x4801d0	                            add rax, rdx	      8659	screen.c	FUNCTION_66	FOR_1	IF_19
0x1126a	          0xc60000	                       mov byte [rax], 0	      8659	screen.c	FUNCTION_66	FOR_1	IF_19
0x1126d	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      8660	screen.c	FUNCTION_66	FOR_1	IF_20
0x11270	            0x4898	                                    cdqe	      8660	screen.c	FUNCTION_66	FOR_1	IF_20
0x11272	    0x488b15000000	            mov rdx, qword [0x040112b9] 	      8660	screen.c	FUNCTION_66	FOR_1	IF_20
0x11279	        0x4883ea01	                              sub rdx, 1	      8660	screen.c	FUNCTION_66	FOR_1	IF_20
0x1127d	          0x4839d0	                            cmp rax, rdx	      8660	screen.c	FUNCTION_66	FOR_1	IF_20
0x11280	            0x7530	                           jne 0x40112f2	      8660	screen.c	FUNCTION_66	FOR_1	IF_20
0x11282	    0xc70500000000	               mov dword [0x040112cc], 1	      8662	screen.c	FUNCTION_66	FOR_1	IF_20
0x1128c	        0x837dcc20	           cmp dword [rbp - 0x34], 0x20 	      8663	screen.c	FUNCTION_66	FOR_1	IF_20	IF_21
0x11290	            0x7510	                           jne 0x40112e2	      8663	screen.c	FUNCTION_66	FOR_1	IF_20	IF_21
0x11292	        0x837dc820	           cmp dword [rbp - 0x38], 0x20 	      8663	screen.c	FUNCTION_66	FOR_1	IF_20	IF_21
0x11296	            0x750a	                           jne 0x40112e2	      8663	screen.c	FUNCTION_66	FOR_1	IF_20	IF_21
0x11298	    0xc70500000000	               mov dword [0x040112e2], 0	      8664	screen.c	FUNCTION_66	FOR_1	IF_20	IF_21
0x112a2	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      8665	screen.c	FUNCTION_66	FOR_1	IF_20	IF_22
0x112a6	            0x750a	                           jne 0x40112f2	      8665	screen.c	FUNCTION_66	FOR_1	IF_20	IF_22
0x112a8	    0xc70500000000	               mov dword [0x040112f2], 0	      8666	screen.c	FUNCTION_66	FOR_1	IF_20	IF_22
0x112b2	        0x8345e001	               add dword [rbp - 0x20], 1	      8522	screen.c	FUNCTION_66	FOR_1
0x112b6	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      8522	screen.c	FUNCTION_66	FOR_1
0x112b9	          0x3b45d8	             cmp eax, dword [rbp - 0x28]	      8522	screen.c	FUNCTION_66	FOR_1
0x112bc	     0xf8c3efbffff	                            jl 0x4010e40	      8522	screen.c	FUNCTION_66	FOR_1
0x112c2	            0xeb01	                           jmp 0x4011305	      8522	screen.c	FUNCTION_66	FOR_1
0x112c4	              0x90	                                     nop	      8514	screen.c	FUNCTION_66	IF_3
0x112c5	              0xc9	                                   leave	      8669	screen.c	FUNCTION_66
0x112c6	              0xc3	                                     ret	      8669	screen.c	FUNCTION_66
redraw_buf_later	DO,0:functions,1:CALL,0:ELSE,0:IF,0:WHILE,0:FOR,0:SWITCH,0	25
0xfa	              0x55	                                push rbp	       260	screen.c	FUNCTION_6
0xfb	          0x4889e5	                            mov rbp, rsp	       260	screen.c	FUNCTION_6
0xfe	        0x4883ec20	                           sub rsp, 0x20	       260	screen.c	FUNCTION_6
0x102	        0x48897de8	             mov qword [rbp - 0x18], rdi	       260	screen.c	FUNCTION_6
0x106	          0x8975e4	             mov dword [rbp - 0x1c], esi	       260	screen.c	FUNCTION_6
0x109	    0x488b05000000	            mov rax, qword [0x04000150] 	       263	screen.c	FUNCTION_6
0x110	        0x488945f8	                mov qword [rbp - 8], rax	       263	screen.c	FUNCTION_6
0x114	            0xeb2b	                           jmp 0x4000181	       263	screen.c	FUNCTION_6
0x116	        0x488b45f8	                mov rax, qword [rbp - 8]	       265	screen.c	FUNCTION_6	FUNCTION_1	IF_1
0x11a	        0x488b4008	                mov rax, qword [rax + 8]	       265	screen.c	FUNCTION_6	FUNCTION_1	IF_1
0x11e	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       265	screen.c	FUNCTION_6	FUNCTION_1	IF_1
0x122	            0x7511	                           jne 0x4000175	       265	screen.c	FUNCTION_6	FUNCTION_1	IF_1
0x124	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       266	screen.c	FUNCTION_6	FUNCTION_1	CALL_1
0x127	        0x488b45f8	                mov rax, qword [rbp - 8]	       266	screen.c	FUNCTION_6	FUNCTION_1	CALL_1
0x12b	            0x89d6	                            mov esi, edx	       266	screen.c	FUNCTION_6	FUNCTION_1	CALL_1
0x12d	          0x4889c7	                            mov rdi, rax	       266	screen.c	FUNCTION_6	FUNCTION_1	CALL_1
0x130	      0xe800000000	                          call 0x4000175	       266	screen.c	FUNCTION_6	FUNCTION_1	CALL_1
0x135	        0x488b45f8	                mov rax, qword [rbp - 8]	       263	screen.c	FUNCTION_6
0x139	        0x488b4020	            mov rax, qword [rax + 0x20] 	       263	screen.c	FUNCTION_6
0x13d	        0x488945f8	                mov qword [rbp - 8], rax	       263	screen.c	FUNCTION_6
0x141	      0x48837df800	                  cmp qword [rbp - 8], 0	       263	screen.c	FUNCTION_6
0x146	            0x75ce	                           jne 0x4000156	       263	screen.c	FUNCTION_6
0x148	              0x90	                                     nop	       268	screen.c	FUNCTION_6
0x149	              0xc9	                                   leave	       268	screen.c	FUNCTION_6
0x14a	              0xc3	                                     ret	       268	screen.c	FUNCTION_6
win_redraw_last_status	DO,0:functions,0:CALL,2:ELSE,2:IF,2:WHILE,1:FOR,1:SWITCH,0	46
0xce59	              0x55	                                push rbp	      6508	screen.c	FUNCTION_37
0xce5a	          0x4889e5	                            mov rbp, rsp	      6508	screen.c	FUNCTION_37
0xce5d	        0x4883ec10	                           sub rsp, 0x10	      6508	screen.c	FUNCTION_37
0xce61	        0x48897df8	                mov qword [rbp - 8], rdi	      6508	screen.c	FUNCTION_37
0xce65	        0x488b45f8	                mov rax, qword [rbp - 8]	      6509	screen.c	FUNCTION_37	IF_1
0xce69	           0xfb600	                   movzx eax, byte [rax]	      6509	screen.c	FUNCTION_37	IF_1
0xce6c	            0x84c0	                             test al, al	      6509	screen.c	FUNCTION_37	IF_1
0xce6e	            0x7514	                           jne 0x400cec4	      6509	screen.c	FUNCTION_37	IF_1
0xce70	        0x488b45f8	                mov rax, qword [rbp - 8]	      6510	screen.c	FUNCTION_37	IF_1
0xce74	        0x488b4038	            mov rax, qword [rax + 0x38] 	      6510	screen.c	FUNCTION_37	IF_1
0xce78	    0xc78040010000	              mov dword [rax + 0x140], 1	      6510	screen.c	FUNCTION_37	IF_1
0xce82	            0xeb6d	                           jmp 0x400cf31	      6523	screen.c	FUNCTION_37
0xce84	        0x488b45f8	                mov rax, qword [rbp - 8]	      6511	screen.c	FUNCTION_37	ELSE_1	IF_2
0xce88	           0xfb600	                   movzx eax, byte [rax]	      6511	screen.c	FUNCTION_37	ELSE_1	IF_2
0xce8b	            0x3c01	                               cmp al, 1	      6511	screen.c	FUNCTION_37	ELSE_1	IF_2
0xce8d	            0x752f	                           jne 0x400cefe	      6511	screen.c	FUNCTION_37	ELSE_1	IF_2
0xce8f	        0x488b45f8	                mov rax, qword [rbp - 8]	      6513	screen.c	FUNCTION_37	ELSE_1	IF_2	FOR_1
0xce93	        0x488b4030	            mov rax, qword [rax + 0x30] 	      6513	screen.c	FUNCTION_37	ELSE_1	IF_2	FOR_1
0xce97	        0x488945f8	                mov qword [rbp - 8], rax	      6513	screen.c	FUNCTION_37	ELSE_1	IF_2	FOR_1
0xce9b	            0xeb18	                           jmp 0x400cef5	      6513	screen.c	FUNCTION_37	ELSE_1	IF_2	FOR_1
0xce9d	        0x488b45f8	                mov rax, qword [rbp - 8]	      6514	screen.c	FUNCTION_37	ELSE_1	IF_2	CALL_1
0xcea1	          0x4889c7	                            mov rdi, rax	      6514	screen.c	FUNCTION_37	ELSE_1	IF_2	CALL_1
0xcea4	      0xe800000000	                          call 0x400cee9	      6514	screen.c	FUNCTION_37	ELSE_1	IF_2	CALL_1
0xcea9	        0x488b45f8	                mov rax, qword [rbp - 8]	      6513	screen.c	FUNCTION_37	ELSE_1	IF_2	FOR_1
0xcead	        0x488b4020	            mov rax, qword [rax + 0x20] 	      6513	screen.c	FUNCTION_37	ELSE_1	IF_2	FOR_1
0xceb1	        0x488945f8	                mov qword [rbp - 8], rax	      6513	screen.c	FUNCTION_37	ELSE_1	IF_2	FOR_1
0xceb5	      0x48837df800	                  cmp qword [rbp - 8], 0	      6513	screen.c	FUNCTION_37	ELSE_1	IF_2	FOR_1
0xceba	            0x75e1	                           jne 0x400cedd	      6513	screen.c	FUNCTION_37	ELSE_1	IF_2	FOR_1
0xcebc	            0xeb33	                           jmp 0x400cf31	      6523	screen.c	FUNCTION_37
0xcebe	        0x488b45f8	                mov rax, qword [rbp - 8]	      6518	screen.c	FUNCTION_37	ELSE_2
0xcec2	        0x488b4030	            mov rax, qword [rax + 0x30] 	      6518	screen.c	FUNCTION_37	ELSE_2
0xcec6	        0x488945f8	                mov qword [rbp - 8], rax	      6518	screen.c	FUNCTION_37	ELSE_2
0xceca	            0xeb0c	                           jmp 0x400cf18	      6519	screen.c	FUNCTION_37	ELSE_2	WHILE_1
0xcecc	        0x488b45f8	                mov rax, qword [rbp - 8]	      6520	screen.c	FUNCTION_37	ELSE_2	WHILE_1
0xced0	        0x488b4020	            mov rax, qword [rax + 0x20] 	      6520	screen.c	FUNCTION_37	ELSE_2	WHILE_1
0xced4	        0x488945f8	                mov qword [rbp - 8], rax	      6520	screen.c	FUNCTION_37	ELSE_2	WHILE_1
0xced8	        0x488b45f8	                mov rax, qword [rbp - 8]	      6519	screen.c	FUNCTION_37	ELSE_2	WHILE_1
0xcedc	        0x488b4020	            mov rax, qword [rax + 0x20] 	      6519	screen.c	FUNCTION_37	ELSE_2	WHILE_1
0xcee0	          0x4885c0	                           test rax, rax	      6519	screen.c	FUNCTION_37	ELSE_2	WHILE_1
0xcee3	            0x75e7	                           jne 0x400cf0c	      6519	screen.c	FUNCTION_37	ELSE_2	WHILE_1
0xcee5	        0x488b45f8	                mov rax, qword [rbp - 8]	      6521	screen.c	FUNCTION_37	ELSE_2	CALL_2
0xcee9	          0x4889c7	                            mov rdi, rax	      6521	screen.c	FUNCTION_37	ELSE_2	CALL_2
0xceec	      0xe800000000	                          call 0x400cf31	      6521	screen.c	FUNCTION_37	ELSE_2	CALL_2
0xcef1	              0x90	                                     nop	      6523	screen.c	FUNCTION_37
0xcef2	              0xc9	                                   leave	      6523	screen.c	FUNCTION_37
0xcef3	              0xc3	                                     ret	      6523	screen.c	FUNCTION_37
screen_start_highlight	DO,0:functions,0:CALL,18:ELSE,6:IF,21:WHILE,0:FOR,0:SWITCH,0	199
0x10164	              0x55	                                push rbp	      8011	screen.c	FUNCTION_58
0x10165	          0x4889e5	                            mov rbp, rsp	      8011	screen.c	FUNCTION_58
0x10168	        0x4883ec20	                           sub rsp, 0x20	      8011	screen.c	FUNCTION_58
0x1016c	          0x897dec	             mov dword [rbp - 0x14], edi	      8011	screen.c	FUNCTION_58
0x1016f	    0x48c745f80000	                  mov qword [rbp - 8], 0	      8012	screen.c	FUNCTION_58
0x10177	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      8014	screen.c	FUNCTION_58
0x1017a	    0x890500000000	            mov dword [0x040101c0], eax 	      8014	screen.c	FUNCTION_58
0x10180	    0x8b0500000000	            mov eax, dword [0x040101c6] 	      8015	screen.c	FUNCTION_58	IF_1
0x10186	            0x85c0	                           test eax, eax	      8015	screen.c	FUNCTION_58	IF_1
0x10188	     0xf84a5020000	                            je 0x4010473	      8015	screen.c	FUNCTION_58	IF_1
0x1018e	    0x817decff0000	           cmp dword [rbp - 0x14], 0xff 	      8033	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_3
0x10195	            0x7e4e	                           jle 0x4010225	      8033	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_3
0x10197	    0x8b0500000000	            mov eax, dword [0x040101dd] 	      8035	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_3	IF_4
0x1019d	          0x83f801	                              cmp eax, 1	      8035	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_3	IF_4
0x101a0	            0x7f0a	                            jg 0x40101ec	      8035	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_3	IF_4
0x101a2	    0x8b0500000000	            mov eax, dword [0x040101e8] 	      8035	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_3	IF_4
0x101a8	            0x85c0	                           test eax, eax	      8035	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_3	IF_4
0x101aa	            0x7410	                            je 0x40101fc	      8035	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_3	IF_4
0x101ac	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      8036	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_3	CALL_4
0x101af	            0x89c7	                            mov edi, eax	      8036	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_3	CALL_4
0x101b1	      0xe800000000	                          call 0x40101f6	      8036	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_3	CALL_4
0x101b6	        0x488945f8	                mov qword [rbp - 8], rax	      8036	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_3	CALL_4
0x101ba	            0xeb0e	                           jmp 0x401020a	      8036	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_3	CALL_4
0x101bc	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      8038	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_3	CALL_5
0x101bf	            0x89c7	                            mov edi, eax	      8038	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_3	CALL_5
0x101c1	      0xe800000000	                          call 0x4010206	      8038	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_3	CALL_5
0x101c6	        0x488945f8	                mov qword [rbp - 8], rax	      8038	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_3	CALL_5
0x101ca	      0x48837df800	                  cmp qword [rbp - 8], 0	      8039	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_3	IF_5
0x101cf	            0x7509	                           jne 0x401021a	      8039	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_3	IF_5
0x101d1	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      8040	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_3	IF_5
0x101d8	            0xeb0b	                           jmp 0x4010225	      8040	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_3	IF_5
0x101da	        0x488b45f8	                mov rax, qword [rbp - 8]	      8042	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_3	ELSE_3
0x101de	           0xfb700	                   movzx eax, word [rax]	      8042	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_3	ELSE_3
0x101e1	              0x98	                                    cwde	      8042	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_3	ELSE_3
0x101e2	          0x8945ec	             mov dword [rbp - 0x14], eax	      8042	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_3	ELSE_3
0x101e5	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      8044	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_6
0x101e8	          0x83e002	                              and eax, 2	      8044	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_6
0x101eb	            0x85c0	                           test eax, eax	      8044	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_6
0x101ed	            0x741d	                            je 0x401024c	      8044	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_6
0x101ef	    0x488b05000000	            mov rax, qword [0x04010236] 	      8044	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_6
0x101f6	          0x4885c0	                           test rax, rax	      8044	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_6
0x101f9	            0x7411	                            je 0x401024c	      8044	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_6
0x101fb	    0x488b05000000	            mov rax, qword [0x04010242] 	      8045	screen.c	FUNCTION_58	IF_1	ELSE_1	CALL_6
0x10202	          0x4889c7	                            mov rdi, rax	      8045	screen.c	FUNCTION_58	IF_1	ELSE_1	CALL_6
0x10205	      0xe800000000	                          call 0x401024a	      8045	screen.c	FUNCTION_58	IF_1	ELSE_1	CALL_6
0x1020a	            0xeb68	                           jmp 0x40102b4	      8045	screen.c	FUNCTION_58	IF_1	ELSE_1	CALL_6
0x1020c	      0x48837df800	                  cmp qword [rbp - 8], 0	      8046	screen.c	FUNCTION_58	IF_1	ELSE_1	ELSE_4	IF_7
0x10211	            0x7461	                            je 0x40102b4	      8046	screen.c	FUNCTION_58	IF_1	ELSE_1	ELSE_4	IF_7
0x10213	    0x8b0500000000	            mov eax, dword [0x04010259] 	      8046	screen.c	FUNCTION_58	IF_1	ELSE_1	ELSE_4	IF_7
0x10219	            0x85c0	                           test eax, eax	      8046	screen.c	FUNCTION_58	IF_1	ELSE_1	ELSE_4	IF_7
0x1021b	            0x7457	                            je 0x40102b4	      8046	screen.c	FUNCTION_58	IF_1	ELSE_1	ELSE_4	IF_7
0x1021d	    0x8b0500000000	            mov eax, dword [0x04010263] 	      8048	screen.c	FUNCTION_58	IF_1	ELSE_1	ELSE_4	IF_7
0x10223	            0x85c0	                           test eax, eax	      8046	screen.c	FUNCTION_58	IF_1	ELSE_1	ELSE_4	IF_7
0x10225	            0x7413	                            je 0x401027a	      8046	screen.c	FUNCTION_58	IF_1	ELSE_1	ELSE_4	IF_7
0x10227	        0x488b45f8	                mov rax, qword [rbp - 8]	      8049	screen.c	FUNCTION_58	IF_1	ELSE_1	ELSE_4	IF_7
0x1022b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      8049	screen.c	FUNCTION_58	IF_1	ELSE_1	ELSE_4	IF_7
0x1022f	    0x483dffffff01	                      cmp rax, 0x1ffffff	      8046	screen.c	FUNCTION_58	IF_1	ELSE_1	ELSE_4	IF_7
0x10235	           0xf95c0	                                setne al	      8046	screen.c	FUNCTION_58	IF_1	ELSE_1	ELSE_4	IF_7
0x10238	            0xeb27	                           jmp 0x40102a1	      8046	screen.c	FUNCTION_58	IF_1	ELSE_1	ELSE_4	IF_7
0x1023a	    0x8b0500000000	            mov eax, dword [0x04010280] 	      8051	screen.c	FUNCTION_58	IF_1	ELSE_1	ELSE_4	IF_7
0x10240	          0x83f801	                              cmp eax, 1	      8051	screen.c	FUNCTION_58	IF_1	ELSE_1	ELSE_4	IF_7
0x10243	            0x7e14	                           jle 0x4010299	      8051	screen.c	FUNCTION_58	IF_1	ELSE_1	ELSE_4	IF_7
0x10245	        0x488b45f8	                mov rax, qword [rbp - 8]	      8051	screen.c	FUNCTION_58	IF_1	ELSE_1	ELSE_4	IF_7
0x10249	         0xfb74008	               movzx eax, word [rax + 8]	      8051	screen.c	FUNCTION_58	IF_1	ELSE_1	ELSE_4	IF_7
0x1024d	          0x6685c0	                             test ax, ax	      8051	screen.c	FUNCTION_58	IF_1	ELSE_1	ELSE_4	IF_7
0x10250	            0x7407	                            je 0x4010299	      8051	screen.c	FUNCTION_58	IF_1	ELSE_1	ELSE_4	IF_7
0x10252	      0xb801000000	                              mov eax, 1	      8051	screen.c	FUNCTION_58	IF_1	ELSE_1	ELSE_4	IF_7
0x10257	            0xeb05	                           jmp 0x401029e	      8051	screen.c	FUNCTION_58	IF_1	ELSE_1	ELSE_4	IF_7
0x10259	      0xb800000000	                              mov eax, 0	      8051	screen.c	FUNCTION_58	IF_1	ELSE_1	ELSE_4	IF_7
0x1025e	          0x83e001	                              and eax, 1	      8046	screen.c	FUNCTION_58	IF_1	ELSE_1	ELSE_4	IF_7
0x10261	            0x84c0	                             test al, al	      8046	screen.c	FUNCTION_58	IF_1	ELSE_1	ELSE_4	IF_7
0x10263	            0x740f	                            je 0x40102b4	      8046	screen.c	FUNCTION_58	IF_1	ELSE_1	ELSE_4	IF_7
0x10265	    0x488b05000000	            mov rax, qword [0x040102ac] 	      8058	screen.c	FUNCTION_58	IF_1	ELSE_1	ELSE_4	IF_7
0x1026c	          0x4889c7	                            mov rdi, rax	      8058	screen.c	FUNCTION_58	IF_1	ELSE_1	ELSE_4	IF_7
0x1026f	      0xe800000000	                          call 0x40102b4	      8058	screen.c	FUNCTION_58	IF_1	ELSE_1	ELSE_4	IF_7
0x10274	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      8059	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_8
0x10277	          0x83e020	                           and eax, 0x20	      8059	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_8
0x1027a	            0x85c0	                           test eax, eax	      8059	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_8
0x1027c	            0x741b	                            je 0x40102d9	      8059	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_8
0x1027e	    0x488b05000000	            mov rax, qword [0x040102c5] 	      8059	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_8
0x10285	          0x4885c0	                           test rax, rax	      8059	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_8
0x10288	            0x740f	                            je 0x40102d9	      8059	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_8
0x1028a	    0x488b05000000	            mov rax, qword [0x040102d1] 	      8060	screen.c	FUNCTION_58	IF_1	ELSE_1	CALL_8
0x10291	          0x4889c7	                            mov rdi, rax	      8060	screen.c	FUNCTION_58	IF_1	ELSE_1	CALL_8
0x10294	      0xe800000000	                          call 0x40102d9	      8060	screen.c	FUNCTION_58	IF_1	ELSE_1	CALL_8
0x10299	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      8061	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_9
0x1029c	          0x83e010	                           and eax, 0x10	      8061	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_9
0x1029f	            0x85c0	                           test eax, eax	      8061	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_9
0x102a1	            0x741b	                            je 0x40102fe	      8061	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_9
0x102a3	    0x488b05000000	            mov rax, qword [0x040102ea] 	      8061	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_9
0x102aa	          0x4885c0	                           test rax, rax	      8061	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_9
0x102ad	            0x740f	                            je 0x40102fe	      8061	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_9
0x102af	    0x488b05000000	            mov rax, qword [0x040102f6] 	      8062	screen.c	FUNCTION_58	IF_1	ELSE_1	CALL_9
0x102b6	          0x4889c7	                            mov rdi, rax	      8062	screen.c	FUNCTION_58	IF_1	ELSE_1	CALL_9
0x102b9	      0xe800000000	                          call 0x40102fe	      8062	screen.c	FUNCTION_58	IF_1	ELSE_1	CALL_9
0x102be	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      8063	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_10
0x102c1	          0x83e008	                              and eax, 8	      8063	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_10
0x102c4	            0x85c0	                           test eax, eax	      8063	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_10
0x102c6	            0x7516	                           jne 0x401031e	      8063	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_10
0x102c8	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      8064	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_10
0x102cb	          0x83e010	                           and eax, 0x10	      8064	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_10
0x102ce	            0x85c0	                           test eax, eax	      8064	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_10
0x102d0	            0x7427	                            je 0x4010339	      8064	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_10
0x102d2	    0x488b05000000	            mov rax, qword [0x04010319] 	      8064	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_10
0x102d9	          0x4885c0	                           test rax, rax	      8064	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_10
0x102dc	            0x751b	                           jne 0x4010339	      8064	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_10
0x102de	    0x488b05000000	            mov rax, qword [0x04010325] 	      8065	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_10
0x102e5	          0x4885c0	                           test rax, rax	      8065	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_10
0x102e8	            0x740f	                            je 0x4010339	      8065	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_10
0x102ea	    0x488b05000000	            mov rax, qword [0x04010331] 	      8066	screen.c	FUNCTION_58	IF_1	ELSE_1	CALL_10
0x102f1	          0x4889c7	                            mov rdi, rax	      8066	screen.c	FUNCTION_58	IF_1	ELSE_1	CALL_10
0x102f4	      0xe800000000	                          call 0x4010339	      8066	screen.c	FUNCTION_58	IF_1	ELSE_1	CALL_10
0x102f9	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      8067	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_11
0x102fc	          0x83e004	                              and eax, 4	      8067	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_11
0x102ff	            0x85c0	                           test eax, eax	      8067	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_11
0x10301	            0x741b	                            je 0x401035e	      8067	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_11
0x10303	    0x488b05000000	            mov rax, qword [0x0401034a] 	      8067	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_11
0x1030a	          0x4885c0	                           test rax, rax	      8067	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_11
0x1030d	            0x740f	                            je 0x401035e	      8067	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_11
0x1030f	    0x488b05000000	            mov rax, qword [0x04010356] 	      8068	screen.c	FUNCTION_58	IF_1	ELSE_1	CALL_11
0x10316	          0x4889c7	                            mov rdi, rax	      8068	screen.c	FUNCTION_58	IF_1	ELSE_1	CALL_11
0x10319	      0xe800000000	                          call 0x401035e	      8068	screen.c	FUNCTION_58	IF_1	ELSE_1	CALL_11
0x1031e	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      8069	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_12
0x10321	          0x83e001	                              and eax, 1	      8069	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_12
0x10324	            0x85c0	                           test eax, eax	      8069	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_12
0x10326	            0x741b	                            je 0x4010383	      8069	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_12
0x10328	    0x488b05000000	            mov rax, qword [0x0401036f] 	      8069	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_12
0x1032f	          0x4885c0	                           test rax, rax	      8069	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_12
0x10332	            0x740f	                            je 0x4010383	      8069	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_12
0x10334	    0x488b05000000	            mov rax, qword [0x0401037b] 	      8070	screen.c	FUNCTION_58	IF_1	ELSE_1	CALL_12
0x1033b	          0x4889c7	                            mov rdi, rax	      8070	screen.c	FUNCTION_58	IF_1	ELSE_1	CALL_12
0x1033e	      0xe800000000	                          call 0x4010383	      8070	screen.c	FUNCTION_58	IF_1	ELSE_1	CALL_12
0x10343	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      8071	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_13
0x10346	      0x2580000000	                           and eax, 0x80	      8071	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_13
0x1034b	            0x85c0	                           test eax, eax	      8071	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_13
0x1034d	            0x741b	                            je 0x40103aa	      8071	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_13
0x1034f	    0x488b05000000	            mov rax, qword [0x04010396] 	      8071	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_13
0x10356	          0x4885c0	                           test rax, rax	      8071	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_13
0x10359	            0x740f	                            je 0x40103aa	      8071	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_13
0x1035b	    0x488b05000000	            mov rax, qword [0x040103a2] 	      8072	screen.c	FUNCTION_58	IF_1	ELSE_1	CALL_13
0x10362	          0x4889c7	                            mov rdi, rax	      8072	screen.c	FUNCTION_58	IF_1	ELSE_1	CALL_13
0x10365	      0xe800000000	                          call 0x40103aa	      8072	screen.c	FUNCTION_58	IF_1	ELSE_1	CALL_13
0x1036a	      0x48837df800	                  cmp qword [rbp - 8], 0	      8078	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14
0x1036f	     0xf84be000000	                            je 0x4010473	      8078	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14
0x10375	    0x8b0500000000	            mov eax, dword [0x040103bb] 	      8081	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14	IF_15
0x1037b	            0x85c0	                           test eax, eax	      8081	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14	IF_15
0x1037d	            0x7446	                            je 0x4010405	      8081	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14	IF_15
0x1037f	        0x488b45f8	                mov rax, qword [rbp - 8]	      8083	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14	IF_15	IF_16
0x10383	        0x488b4010	            mov rax, qword [rax + 0x10] 	      8083	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14	IF_15	IF_16
0x10387	    0x483dffffff01	                      cmp rax, 0x1ffffff	      8083	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14	IF_15	IF_16
0x1038d	            0x7410	                            je 0x40103df	      8083	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14	IF_15	IF_16
0x1038f	        0x488b45f8	                mov rax, qword [rbp - 8]	      8084	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14	IF_15	CALL_14
0x10393	        0x488b4010	            mov rax, qword [rax + 0x10] 	      8084	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14	IF_15	CALL_14
0x10397	          0x4889c7	                            mov rdi, rax	      8084	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14	IF_15	CALL_14
0x1039a	      0xe800000000	                          call 0x40103df	      8084	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14	IF_15	CALL_14
0x1039f	        0x488b45f8	                mov rax, qword [rbp - 8]	      8085	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14	IF_15	IF_17
0x103a3	        0x488b4018	            mov rax, qword [rax + 0x18] 	      8085	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14	IF_15	IF_17
0x103a7	    0x483dffffff01	                      cmp rax, 0x1ffffff	      8085	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14	IF_15	IF_17
0x103ad	     0xf8480000000	                            je 0x4010473	      8085	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14	IF_15	IF_17
0x103b3	        0x488b45f8	                mov rax, qword [rbp - 8]	      8086	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14	IF_15	CALL_15
0x103b7	        0x488b4018	            mov rax, qword [rax + 0x18] 	      8086	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14	IF_15	CALL_15
0x103bb	          0x4889c7	                            mov rdi, rax	      8086	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14	IF_15	CALL_15
0x103be	      0xe800000000	                          call 0x4010403	      8086	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14	IF_15	CALL_15
0x103c3	            0xeb6e	                           jmp 0x4010473	      8107	screen.c	FUNCTION_58
0x103c5	    0x8b0500000000	            mov eax, dword [0x0401040b] 	      8091	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14	ELSE_5	IF_18
0x103cb	          0x83f801	                              cmp eax, 1	      8091	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14	ELSE_5	IF_18
0x103ce	            0x7e46	                           jle 0x4010456	      8091	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14	ELSE_5	IF_18
0x103d0	        0x488b45f8	                mov rax, qword [rbp - 8]	      8093	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14	ELSE_5	IF_18	IF_19
0x103d4	         0xfb74008	               movzx eax, word [rax + 8]	      8093	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14	ELSE_5	IF_18	IF_19
0x103d8	          0x6685c0	                             test ax, ax	      8093	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14	ELSE_5	IF_18	IF_19
0x103db	            0x7415	                            je 0x4010432	      8093	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14	ELSE_5	IF_18	IF_19
0x103dd	        0x488b45f8	                mov rax, qword [rbp - 8]	      8094	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14	ELSE_5	IF_18	CALL_16
0x103e1	         0xfb74008	               movzx eax, word [rax + 8]	      8094	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14	ELSE_5	IF_18	CALL_16
0x103e5	           0xfb7c0	                           movzx eax, ax	      8094	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14	ELSE_5	IF_18	CALL_16
0x103e8	          0x83e801	                              sub eax, 1	      8094	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14	ELSE_5	IF_18	CALL_16
0x103eb	            0x89c7	                            mov edi, eax	      8094	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14	ELSE_5	IF_18	CALL_16
0x103ed	      0xe800000000	                          call 0x4010432	      8094	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14	ELSE_5	IF_18	CALL_16
0x103f2	        0x488b45f8	                mov rax, qword [rbp - 8]	      8095	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14	ELSE_5	IF_18	IF_20
0x103f6	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      8095	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14	ELSE_5	IF_18	IF_20
0x103fa	          0x6685c0	                             test ax, ax	      8095	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14	ELSE_5	IF_18	IF_20
0x103fd	            0x7434	                            je 0x4010473	      8095	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14	ELSE_5	IF_18	IF_20
0x103ff	        0x488b45f8	                mov rax, qword [rbp - 8]	      8096	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14	ELSE_5	IF_18	CALL_17
0x10403	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      8096	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14	ELSE_5	IF_18	CALL_17
0x10407	           0xfb7c0	                           movzx eax, ax	      8096	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14	ELSE_5	IF_18	CALL_17
0x1040a	          0x83e801	                              sub eax, 1	      8096	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14	ELSE_5	IF_18	CALL_17
0x1040d	            0x89c7	                            mov edi, eax	      8096	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14	ELSE_5	IF_18	CALL_17
0x1040f	      0xe800000000	                          call 0x4010454	      8096	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14	ELSE_5	IF_18	CALL_17
0x10414	            0xeb1d	                           jmp 0x4010473	      8107	screen.c	FUNCTION_58
0x10416	        0x488b45f8	                mov rax, qword [rbp - 8]	      8100	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14	ELSE_5	ELSE_6	IF_21
0x1041a	        0x488b4008	                mov rax, qword [rax + 8]	      8100	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14	ELSE_5	ELSE_6	IF_21
0x1041e	          0x4885c0	                           test rax, rax	      8100	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14	ELSE_5	ELSE_6	IF_21
0x10421	            0x7410	                            je 0x4010473	      8100	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14	ELSE_5	ELSE_6	IF_21
0x10423	        0x488b45f8	                mov rax, qword [rbp - 8]	      8101	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14	ELSE_5	ELSE_6	CALL_18
0x10427	        0x488b4008	                mov rax, qword [rax + 8]	      8101	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14	ELSE_5	ELSE_6	CALL_18
0x1042b	          0x4889c7	                            mov rdi, rax	      8101	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14	ELSE_5	ELSE_6	CALL_18
0x1042e	      0xe800000000	                          call 0x4010473	      8101	screen.c	FUNCTION_58	IF_1	ELSE_1	IF_14	ELSE_5	ELSE_6	CALL_18
0x10433	              0x90	                                     nop	      8107	screen.c	FUNCTION_58
0x10434	              0xc9	                                   leave	      8107	screen.c	FUNCTION_58
0x10435	              0xc3	                                     ret	      8107	screen.c	FUNCTION_58
redraw_block	DO,0:functions,0:CALL,2:ELSE,1:IF,1:WHILE,0:FOR,0:SWITCH,0	36
0x10c89	              0x55	                                push rbp	      8449	screen.c	FUNCTION_64
0x10c8a	          0x4889e5	                            mov rbp, rsp	      8449	screen.c	FUNCTION_64
0x10c8d	        0x4883ec20	                           sub rsp, 0x20	      8449	screen.c	FUNCTION_64
0x10c91	          0x897dec	             mov dword [rbp - 0x14], edi	      8449	screen.c	FUNCTION_64
0x10c94	          0x8975e8	             mov dword [rbp - 0x18], esi	      8449	screen.c	FUNCTION_64
0x10c97	        0x488955e0	             mov qword [rbp - 0x20], rdx	      8449	screen.c	FUNCTION_64
0x10c9b	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      8454	screen.c	FUNCTION_64	CALL_1
0x10c9e	          0x8d50ff	                      lea edx, [rax - 1]	      8454	screen.c	FUNCTION_64	CALL_1
0x10ca1	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      8454	screen.c	FUNCTION_64	CALL_1
0x10ca4	            0x89d6	                            mov esi, edx	      8454	screen.c	FUNCTION_64	CALL_1
0x10ca6	            0x89c7	                            mov edi, eax	      8454	screen.c	FUNCTION_64	CALL_1
0x10ca8	      0xe800000000	                          call 0x4010ced	      8454	screen.c	FUNCTION_64	CALL_1
0x10cad	      0x48837de000	               cmp qword [rbp - 0x20], 0	      8457	screen.c	FUNCTION_64	IF_1
0x10cb2	            0x7513	                           jne 0x4010d07	      8457	screen.c	FUNCTION_64	IF_1
0x10cb4	    0xc745f8000000	                  mov dword [rbp - 8], 0	      8459	screen.c	FUNCTION_64	IF_1
0x10cbb	    0x488b05000000	            mov rax, qword [0x04010d02] 	      8460	screen.c	FUNCTION_64	IF_1
0x10cc2	          0x8945fc	                mov dword [rbp - 4], eax	      8460	screen.c	FUNCTION_64	IF_1
0x10cc5	            0xeb1a	                           jmp 0x4010d21	      8460	screen.c	FUNCTION_64	IF_1
0x10cc7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8464	screen.c	FUNCTION_64	ELSE_1
0x10ccb	    0x8b80a8000000	            mov eax, dword [rax + 0xa8] 	      8464	screen.c	FUNCTION_64	ELSE_1
0x10cd1	          0x8945f8	                mov dword [rbp - 8], eax	      8464	screen.c	FUNCTION_64	ELSE_1
0x10cd4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8465	screen.c	FUNCTION_64	ELSE_1
0x10cd8	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      8465	screen.c	FUNCTION_64	ELSE_1
0x10cde	          0x8945fc	                mov dword [rbp - 4], eax	      8465	screen.c	FUNCTION_64	ELSE_1
0x10ce1	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      8467	screen.c	FUNCTION_64	CALL_2
0x10ce4	          0x2b45ec	             sub eax, dword [rbp - 0x14]	      8467	screen.c	FUNCTION_64	CALL_2
0x10ce7	            0x89c2	                            mov edx, eax	      8467	screen.c	FUNCTION_64	CALL_2
0x10ce9	          0x8b4dfc	                mov ecx, dword [rbp - 4]	      8467	screen.c	FUNCTION_64	CALL_2
0x10cec	          0x8b75f8	                mov esi, dword [rbp - 8]	      8467	screen.c	FUNCTION_64	CALL_2
0x10cef	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      8467	screen.c	FUNCTION_64	CALL_2
0x10cf2	    0x41b800000000	                              mov r8d, 0	      8467	screen.c	FUNCTION_64	CALL_2
0x10cf8	            0x89c7	                            mov edi, eax	      8467	screen.c	FUNCTION_64	CALL_2
0x10cfa	      0xe800000000	                          call 0x4010d3f	      8467	screen.c	FUNCTION_64	CALL_2
0x10cff	              0x90	                                     nop	      8468	screen.c	FUNCTION_64
0x10d00	              0xc9	                                   leave	      8468	screen.c	FUNCTION_64
0x10d01	              0xc3	                                     ret	      8468	screen.c	FUNCTION_64
screen_char	DO,0:functions,0:CALL,12:ELSE,3:IF,10:WHILE,0:FOR,0:SWITCH,0	154
0x10886	              0x55	                                push rbp	      8277	screen.c	FUNCTION_61
0x10887	          0x4889e5	                            mov rbp, rsp	      8277	screen.c	FUNCTION_61
0x1088a	        0x4883ec40	                           sub rsp, 0x40	      8277	screen.c	FUNCTION_61
0x1088e	          0x897dcc	             mov dword [rbp - 0x34], edi	      8277	screen.c	FUNCTION_61
0x10891	          0x8975c8	             mov dword [rbp - 0x38], esi	      8277	screen.c	FUNCTION_61
0x10894	          0x8955c4	             mov dword [rbp - 0x3c], edx	      8277	screen.c	FUNCTION_61
0x10897	    0x64488b042528	                mov rax, qword fs:[0x28]	      8277	screen.c	FUNCTION_61
0x108a0	        0x488945f8	                mov qword [rbp - 8], rax	      8277	screen.c	FUNCTION_61
0x108a4	            0x31c0	                            xor eax, eax	      8277	screen.c	FUNCTION_61
0x108a6	    0x8b0500000000	            mov eax, dword [0x040108ec] 	      8282	screen.c	FUNCTION_61	IF_1
0x108ac	          0x3945c8	            cmp dword [rbp - 0x38], eax 	      8282	screen.c	FUNCTION_61	IF_1
0x108af	     0xf8df8010000	                           jge 0x4010aed	      8282	screen.c	FUNCTION_61	IF_1
0x108b5	    0x8b0500000000	            mov eax, dword [0x040108fb] 	      8282	screen.c	FUNCTION_61	IF_1
0x108bb	          0x3945c4	            cmp dword [rbp - 0x3c], eax 	      8282	screen.c	FUNCTION_61	IF_1
0x108be	     0xf8de9010000	                           jge 0x4010aed	      8282	screen.c	FUNCTION_61	IF_1
0x108c4	    0x488b05000000	            mov rax, qword [0x0401090b] 	      8288	screen.c	FUNCTION_61	IF_2
0x108cb	           0xfb600	                   movzx eax, byte [rax]	      8288	screen.c	FUNCTION_61	IF_2
0x108ce	            0x84c0	                             test al, al	      8288	screen.c	FUNCTION_61	IF_2
0x108d0	            0x7540	                           jne 0x4010952	      8288	screen.c	FUNCTION_61	IF_2
0x108d2	    0x8b0500000000	            mov eax, dword [0x04010918] 	      8289	screen.c	FUNCTION_61	IF_2
0x108d8	          0x83e801	                              sub eax, 1	      8289	screen.c	FUNCTION_61	IF_2
0x108db	          0x3b45c8	             cmp eax, dword [rbp - 0x38]	      8289	screen.c	FUNCTION_61	IF_2
0x108de	            0x7532	                           jne 0x4010952	      8289	screen.c	FUNCTION_61	IF_2
0x108e0	    0x8b0500000000	            mov eax, dword [0x04010926] 	      8289	screen.c	FUNCTION_61	IF_2
0x108e6	          0x83e801	                              sub eax, 1	      8289	screen.c	FUNCTION_61	IF_2
0x108e9	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	      8289	screen.c	FUNCTION_61	IF_2
0x108ec	            0x7524	                           jne 0x4010952	      8289	screen.c	FUNCTION_61	IF_2
0x108ee	    0x8b0500000000	            mov eax, dword [0x04010934] 	      8292	screen.c	FUNCTION_61	IF_2
0x108f4	            0x85c0	                           test eax, eax	      8292	screen.c	FUNCTION_61	IF_2
0x108f6	            0x751a	                           jne 0x4010952	      8292	screen.c	FUNCTION_61	IF_2
0x108f8	    0x488b05000000	            mov rax, qword [0x0401093f] 	      8296	screen.c	FUNCTION_61	IF_2
0x108ff	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      8296	screen.c	FUNCTION_61	IF_2
0x10902	          0x4801d2	                            add rdx, rdx	      8296	screen.c	FUNCTION_61	IF_2
0x10905	          0x4801d0	                            add rax, rdx	      8296	screen.c	FUNCTION_61	IF_2
0x10908	      0x66c700ffff	                  mov word [rax], 0xffff	      8296	screen.c	FUNCTION_61	IF_2
0x1090d	      0xe99c010000	                           jmp 0x4010aee	      8297	screen.c	FUNCTION_61	IF_2
0x10912	    0x8b0500000000	            mov eax, dword [0x04010958] 	      8303	screen.c	FUNCTION_61	IF_3
0x10918	            0x85c0	                           test eax, eax	      8303	screen.c	FUNCTION_61	IF_3
0x1091a	            0x740b	                            je 0x4010967	      8303	screen.c	FUNCTION_61	IF_3
0x1091c	    0x8b0500000000	            mov eax, dword [0x04010962] 	      8304	screen.c	FUNCTION_61	IF_3
0x10922	          0x8945dc	             mov dword [rbp - 0x24], eax	      8304	screen.c	FUNCTION_61	IF_3
0x10925	            0xeb19	                           jmp 0x4010980	      8304	screen.c	FUNCTION_61	IF_3
0x10927	    0x488b05000000	            mov rax, qword [0x0401096e] 	      8306	screen.c	FUNCTION_61	ELSE_1
0x1092e	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      8306	screen.c	FUNCTION_61	ELSE_1
0x10931	          0x4801d2	                            add rdx, rdx	      8306	screen.c	FUNCTION_61	ELSE_1
0x10934	          0x4801d0	                            add rax, rdx	      8306	screen.c	FUNCTION_61	ELSE_1
0x10937	           0xfb700	                   movzx eax, word [rax]	      8306	screen.c	FUNCTION_61	ELSE_1
0x1093a	           0xfb7c0	                           movzx eax, ax	      8306	screen.c	FUNCTION_61	ELSE_1
0x1093d	          0x8945dc	             mov dword [rbp - 0x24], eax	      8306	screen.c	FUNCTION_61	ELSE_1
0x10940	    0x8b0500000000	            mov eax, dword [0x04010986] 	      8307	screen.c	FUNCTION_61	IF_4
0x10946	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      8307	screen.c	FUNCTION_61	IF_4
0x10949	            0x7405	                            je 0x4010990	      8307	screen.c	FUNCTION_61	IF_4
0x1094b	      0xe800000000	                          call 0x4010990	      8308	screen.c	FUNCTION_61	CALL_1
0x10950	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      8310	screen.c	FUNCTION_61	CALL_2
0x10953	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      8310	screen.c	FUNCTION_61	CALL_2
0x10956	            0x89d6	                            mov esi, edx	      8310	screen.c	FUNCTION_61	CALL_2
0x10958	            0x89c7	                            mov edi, eax	      8310	screen.c	FUNCTION_61	CALL_2
0x1095a	      0xe800000000	                          call 0x401099f	      8310	screen.c	FUNCTION_61	CALL_2
0x1095f	    0x8b0500000000	            mov eax, dword [0x040109a5] 	      8312	screen.c	FUNCTION_61	IF_5
0x10965	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      8312	screen.c	FUNCTION_61	IF_5
0x10968	            0x740a	                            je 0x40109b4	      8312	screen.c	FUNCTION_61	IF_5
0x1096a	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      8313	screen.c	FUNCTION_61	CALL_3
0x1096d	            0x89c7	                            mov edi, eax	      8313	screen.c	FUNCTION_61	CALL_3
0x1096f	      0xe8f0f7ffff	         call sym.screen_start_highlight	      8313	screen.c	FUNCTION_61	CALL_3
0x10974	    0x8b0500000000	            mov eax, dword [0x040109ba] 	      8316	screen.c	FUNCTION_61	IF_6
0x1097a	            0x85c0	                           test eax, eax	      8316	screen.c	FUNCTION_61	IF_6
0x1097c	     0xf84c0000000	                            je 0x4010a82	      8316	screen.c	FUNCTION_61	IF_6
0x10982	    0x488b05000000	            mov rax, qword [0x040109c9] 	      8316	screen.c	FUNCTION_61	IF_6
0x10989	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      8316	screen.c	FUNCTION_61	IF_6
0x1098c	        0x48c1e202	                              shl rdx, 2	      8316	screen.c	FUNCTION_61	IF_6
0x10990	          0x4801d0	                            add rax, rdx	      8316	screen.c	FUNCTION_61	IF_6
0x10993	            0x8b00	                    mov eax, dword [rax]	      8316	screen.c	FUNCTION_61	IF_6
0x10995	            0x85c0	                           test eax, eax	      8316	screen.c	FUNCTION_61	IF_6
0x10997	     0xf84a5000000	                            je 0x4010a82	      8316	screen.c	FUNCTION_61	IF_6
0x1099d	    0x488b05000000	            mov rax, qword [0x040109e4] 	      8320	screen.c	FUNCTION_61	IF_6	IF_7	CALL_4
0x109a4	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      8320	screen.c	FUNCTION_61	IF_6	IF_7	CALL_4
0x109a7	        0x48c1e202	                              shl rdx, 2	      8320	screen.c	FUNCTION_61	IF_6	IF_7	CALL_4
0x109ab	          0x4801d0	                            add rax, rdx	      8320	screen.c	FUNCTION_61	IF_6	IF_7	CALL_4
0x109ae	            0x8b00	                    mov eax, dword [rax]	      8320	screen.c	FUNCTION_61	IF_6	IF_7	CALL_4
0x109b0	            0x89c7	                            mov edi, eax	      8320	screen.c	FUNCTION_61	IF_6	IF_7	CALL_4
0x109b2	      0xe800000000	                          call 0x40109f7	      8320	screen.c	FUNCTION_61	IF_6	IF_7	CALL_4
0x109b7	            0x85c0	                           test eax, eax	      8320	screen.c	FUNCTION_61	IF_6	IF_7	CALL_4
0x109b9	            0x7433	                            je 0x4010a2e	      8320	screen.c	FUNCTION_61	IF_6	IF_7	CALL_4
0x109bb	    0x488b05000000	            mov rax, qword [0x04010a02] 	      8322	screen.c	FUNCTION_61	IF_6	IF_7	IF_8
0x109c2	           0xfb600	                   movzx eax, byte [rax]	      8322	screen.c	FUNCTION_61	IF_6	IF_7	IF_8
0x109c5	            0x3c64	                            cmp al, 0x64	      8322	screen.c	FUNCTION_61	IF_6	IF_7	IF_8
0x109c7	            0x7519	                           jne 0x4010a22	      8322	screen.c	FUNCTION_61	IF_6	IF_7	IF_8
0x109c9	      0xbf00000000	                              mov edi, 0	      8330	screen.c	FUNCTION_61	IF_6	IF_7	IF_8	CALL_5
0x109ce	      0xe800000000	                          call 0x4010a13	      8330	screen.c	FUNCTION_61	IF_6	IF_7	IF_8	CALL_5
0x109d3	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      8331	screen.c	FUNCTION_61	IF_6	IF_7	IF_8	CALL_6
0x109d6	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      8331	screen.c	FUNCTION_61	IF_6	IF_7	IF_8	CALL_6
0x109d9	            0x89d6	                            mov esi, edx	      8331	screen.c	FUNCTION_61	IF_6	IF_7	IF_8	CALL_6
0x109db	            0x89c7	                            mov edi, eax	      8331	screen.c	FUNCTION_61	IF_6	IF_7	IF_8	CALL_6
0x109dd	      0xe800000000	                          call 0x4010a22	      8331	screen.c	FUNCTION_61	IF_6	IF_7	IF_8	CALL_6
0x109e2	    0xc70500000000	         mov dword [0x04010a2c], 0x270f 	      8335	screen.c	FUNCTION_61	IF_6	IF_7
0x109ec	            0xeb2e	                           jmp 0x4010a5c	      8335	screen.c	FUNCTION_61	IF_6	IF_7
0x109ee	    0x488b05000000	            mov rax, qword [0x04010a35] 	      8337	screen.c	FUNCTION_61	IF_6	ELSE_2	IF_9	CALL_7
0x109f5	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      8337	screen.c	FUNCTION_61	IF_6	ELSE_2	IF_9	CALL_7
0x109f8	        0x48c1e202	                              shl rdx, 2	      8337	screen.c	FUNCTION_61	IF_6	ELSE_2	IF_9	CALL_7
0x109fc	          0x4801d0	                            add rax, rdx	      8337	screen.c	FUNCTION_61	IF_6	ELSE_2	IF_9	CALL_7
0x109ff	            0x8b00	                    mov eax, dword [rax]	      8337	screen.c	FUNCTION_61	IF_6	ELSE_2	IF_9	CALL_7
0x10a01	            0x89c7	                            mov edi, eax	      8337	screen.c	FUNCTION_61	IF_6	ELSE_2	IF_9	CALL_7
0x10a03	      0xe800000000	                          call 0x4010a48	      8337	screen.c	FUNCTION_61	IF_6	ELSE_2	IF_9	CALL_7
0x10a08	          0x83f801	                              cmp eax, 1	      8337	screen.c	FUNCTION_61	IF_6	ELSE_2	IF_9	CALL_7
0x10a0b	            0x7e0f	                           jle 0x4010a5c	      8337	screen.c	FUNCTION_61	IF_6	ELSE_2	IF_9	CALL_7
0x10a0d	    0x8b0500000000	            mov eax, dword [0x04010a53] 	      8338	screen.c	FUNCTION_61	IF_6	ELSE_2	IF_9
0x10a13	          0x83c001	                              add eax, 1	      8338	screen.c	FUNCTION_61	IF_6	ELSE_2	IF_9
0x10a16	    0x890500000000	            mov dword [0x04010a5c], eax 	      8338	screen.c	FUNCTION_61	IF_6	ELSE_2	IF_9
0x10a1c	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      8341	screen.c	FUNCTION_61	IF_6	CALL_8
0x10a1f	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      8341	screen.c	FUNCTION_61	IF_6	CALL_8
0x10a23	          0x4889d6	                            mov rsi, rdx	      8341	screen.c	FUNCTION_61	IF_6	CALL_8
0x10a26	            0x89c7	                            mov edi, eax	      8341	screen.c	FUNCTION_61	IF_6	CALL_8
0x10a28	      0xe800000000	                          call 0x4010a6d	      8341	screen.c	FUNCTION_61	IF_6	CALL_8
0x10a2d	            0x4898	                                    cdqe	      8341	screen.c	FUNCTION_61	IF_6	CALL_8
0x10a2f	      0xc64405e000	          mov byte [rbp + rax - 0x20], 0	      8341	screen.c	FUNCTION_61	IF_6	CALL_8
0x10a34	        0x488d45e0	                   lea rax, [rbp - 0x20]	      8342	screen.c	FUNCTION_61	IF_6	CALL_9
0x10a38	          0x4889c7	                            mov rdi, rax	      8342	screen.c	FUNCTION_61	IF_6	CALL_9
0x10a3b	      0xe800000000	                          call 0x4010a80	      8342	screen.c	FUNCTION_61	IF_6	CALL_9
0x10a40	            0xeb5a	                           jmp 0x4010adc	      8317	screen.c	FUNCTION_61	IF_6
0x10a42	      0xe800000000	                          call 0x4010a87	      8348	screen.c	FUNCTION_61	ELSE_3	CALL_10
0x10a47	    0x488b15000000	            mov rdx, qword [0x04010a8e] 	      8350	screen.c	FUNCTION_61	ELSE_3	CALL_11
0x10a4e	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      8350	screen.c	FUNCTION_61	ELSE_3	CALL_11
0x10a51	          0x4801d0	                            add rax, rdx	      8350	screen.c	FUNCTION_61	ELSE_3	CALL_11
0x10a54	           0xfb600	                   movzx eax, byte [rax]	      8350	screen.c	FUNCTION_61	ELSE_3	CALL_11
0x10a57	           0xfb6c0	                           movzx eax, al	      8350	screen.c	FUNCTION_61	ELSE_3	CALL_11
0x10a5a	            0x89c7	                            mov edi, eax	      8350	screen.c	FUNCTION_61	ELSE_3	CALL_11
0x10a5c	      0xe800000000	                          call 0x4010aa1	      8350	screen.c	FUNCTION_61	ELSE_3	CALL_11
0x10a61	    0x8b0500000000	            mov eax, dword [0x04010aa7] 	      8353	screen.c	FUNCTION_61	ELSE_3	IF_10
0x10a67	      0x3dcc260000	                         cmp eax, 0x26cc	      8353	screen.c	FUNCTION_61	ELSE_3	IF_10
0x10a6c	            0x752e	                           jne 0x4010adc	      8353	screen.c	FUNCTION_61	ELSE_3	IF_10
0x10a6e	    0x488b15000000	            mov rdx, qword [0x04010ab5] 	      8353	screen.c	FUNCTION_61	ELSE_3	IF_10
0x10a75	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      8353	screen.c	FUNCTION_61	ELSE_3	IF_10
0x10a78	          0x4801d0	                            add rax, rdx	      8353	screen.c	FUNCTION_61	ELSE_3	IF_10
0x10a7b	           0xfb600	                   movzx eax, byte [rax]	      8353	screen.c	FUNCTION_61	ELSE_3	IF_10
0x10a7e	            0x3c8e	                            cmp al, 0x8e	      8353	screen.c	FUNCTION_61	ELSE_3	IF_10
0x10a80	            0x751a	                           jne 0x4010adc	      8353	screen.c	FUNCTION_61	ELSE_3	IF_10
0x10a82	    0x488b15000000	            mov rdx, qword [0x04010ac9] 	      8354	screen.c	FUNCTION_61	ELSE_3	CALL_12
0x10a89	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      8354	screen.c	FUNCTION_61	ELSE_3	CALL_12
0x10a8c	          0x4801d0	                            add rax, rdx	      8354	screen.c	FUNCTION_61	ELSE_3	CALL_12
0x10a8f	           0xfb600	                   movzx eax, byte [rax]	      8354	screen.c	FUNCTION_61	ELSE_3	CALL_12
0x10a92	           0xfb6c0	                           movzx eax, al	      8354	screen.c	FUNCTION_61	ELSE_3	CALL_12
0x10a95	            0x89c7	                            mov edi, eax	      8354	screen.c	FUNCTION_61	ELSE_3	CALL_12
0x10a97	      0xe800000000	                          call 0x4010adc	      8354	screen.c	FUNCTION_61	ELSE_3	CALL_12
0x10a9c	    0x8b0500000000	            mov eax, dword [0x04010ae2] 	      8358	screen.c	FUNCTION_61
0x10aa2	          0x83c001	                              add eax, 1	      8358	screen.c	FUNCTION_61
0x10aa5	    0x890500000000	            mov dword [0x04010aeb], eax 	      8358	screen.c	FUNCTION_61
0x10aab	            0xeb01	                           jmp 0x4010aee	      8358	screen.c	FUNCTION_61
0x10aad	              0x90	                                     nop	      8283	screen.c	FUNCTION_61	IF_1
0x10aae	        0x488b45f8	                mov rax, qword [rbp - 8]	      8359	screen.c	FUNCTION_61
0x10ab2	    0x644833042528	                xor rax, qword fs:[0x28]	      8359	screen.c	FUNCTION_61
0x10abb	            0x7405	                            je 0x4010b02	      8359	screen.c	FUNCTION_61
0x10abd	      0xe800000000	                          call 0x4010b02	      8359	screen.c	FUNCTION_61
0x10ac2	              0xc9	                                   leave	      8359	screen.c	FUNCTION_61
0x10ac3	              0xc3	                                     ret	      8359	screen.c	FUNCTION_61
compute_foldcolumn	DO,0:functions,0:CALL,0:ELSE,0:IF,1:WHILE,0:FOR,0:SWITCH,0	36
0x4d81	              0x55	                                push rbp	      2597	screen.c	FUNCTION_24
0x4d82	          0x4889e5	                            mov rbp, rsp	      2597	screen.c	FUNCTION_24
0x4d85	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2597	screen.c	FUNCTION_24
0x4d89	          0x8975e4	             mov dword [rbp - 0x1c], esi	      2597	screen.c	FUNCTION_24
0x4d8c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2598	screen.c	FUNCTION_24
0x4d90	    0x488b80c80100	           mov rax, qword [rax + 0x1c8] 	      2598	screen.c	FUNCTION_24
0x4d97	          0x8945f4	              mov dword [rbp - 0xc], eax	      2598	screen.c	FUNCTION_24
0x4d9a	    0x488b05000000	            mov rax, qword [0x04004de1] 	      2599	screen.c	FUNCTION_24
0x4da1	        0x483945e8	            cmp qword [rbp - 0x18], rax 	      2599	screen.c	FUNCTION_24
0x4da5	            0x750c	                           jne 0x4004df3	      2599	screen.c	FUNCTION_24
0x4da7	    0x488b05000000	            mov rax, qword [0x04004dee] 	      2599	screen.c	FUNCTION_24
0x4dae	          0x4885c0	                           test rax, rax	      2599	screen.c	FUNCTION_24
0x4db1	            0x7409	                            je 0x4004dfc	      2599	screen.c	FUNCTION_24
0x4db3	    0x488b05000000	            mov rax, qword [0x04004dfa] 	      2599	screen.c	FUNCTION_24
0x4dba	            0xeb05	                           jmp 0x4004e01	      2599	screen.c	FUNCTION_24
0x4dbc	      0xb801000000	                              mov eax, 1	      2599	screen.c	FUNCTION_24
0x4dc1	          0x8945f8	                mov dword [rbp - 8], eax	      2599	screen.c	FUNCTION_24
0x4dc4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2600	screen.c	FUNCTION_24
0x4dc8	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2600	screen.c	FUNCTION_24
0x4dce	          0x8945fc	                mov dword [rbp - 4], eax	      2600	screen.c	FUNCTION_24
0x4dd1	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      2602	screen.c	FUNCTION_24	IF_1
0x4dd4	          0x8b45f8	                mov eax, dword [rbp - 8]	      2602	screen.c	FUNCTION_24	IF_1
0x4dd7	             0x1c2	                            add edx, eax	      2602	screen.c	FUNCTION_24	IF_1
0x4dd9	          0x8b45fc	                mov eax, dword [rbp - 4]	      2602	screen.c	FUNCTION_24	IF_1
0x4ddc	            0x29d0	                            sub eax, edx	      2602	screen.c	FUNCTION_24	IF_1
0x4dde	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	      2602	screen.c	FUNCTION_24	IF_1
0x4de1	            0x7d10	                           jge 0x4004e33	      2602	screen.c	FUNCTION_24	IF_1
0x4de3	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      2603	screen.c	FUNCTION_24	IF_1
0x4de6	          0x8b45f8	                mov eax, dword [rbp - 8]	      2603	screen.c	FUNCTION_24	IF_1
0x4de9	             0x1c2	                            add edx, eax	      2603	screen.c	FUNCTION_24	IF_1
0x4deb	          0x8b45fc	                mov eax, dword [rbp - 4]	      2603	screen.c	FUNCTION_24	IF_1
0x4dee	            0x29d0	                            sub eax, edx	      2603	screen.c	FUNCTION_24	IF_1
0x4df0	          0x8945f4	              mov dword [rbp - 0xc], eax	      2603	screen.c	FUNCTION_24	IF_1
0x4df3	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2604	screen.c	FUNCTION_24
0x4df6	              0x5d	                                 pop rbp	      2605	screen.c	FUNCTION_24
0x4df7	              0xc3	                                     ret	      2605	screen.c	FUNCTION_24
update_single_line	DO,0:functions,0:CALL,13:ELSE,0:IF,3:WHILE,0:FOR,1:SWITCH,0	115
0x1193	              0x55	                                push rbp	       916	screen.c	FUNCTION_17
0x1194	          0x4889e5	                            mov rbp, rsp	       916	screen.c	FUNCTION_17
0x1197	        0x4883ec40	                           sub rsp, 0x40	       916	screen.c	FUNCTION_17
0x119b	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       916	screen.c	FUNCTION_17
0x119f	        0x488975c0	             mov qword [rbp - 0x40], rsi	       916	screen.c	FUNCTION_17
0x11a3	    0x64488b042528	                mov rax, qword fs:[0x28]	       916	screen.c	FUNCTION_17
0x11ac	        0x488945f8	                mov qword [rbp - 8], rax	       916	screen.c	FUNCTION_17
0x11b0	            0x31c0	                            xor eax, eax	       916	screen.c	FUNCTION_17
0x11b2	      0xbf01000000	                              mov edi, 1	       924	screen.c	FUNCTION_17	IF_1	CALL_1
0x11b7	      0xe800000000	                          call 0x40011fc	       924	screen.c	FUNCTION_17	IF_1	CALL_1
0x11bc	            0x85c0	                           test eax, eax	       924	screen.c	FUNCTION_17	IF_1	CALL_1
0x11be	     0xf848e010000	                            je 0x4001392	       924	screen.c	FUNCTION_17	IF_1	CALL_1
0x11c4	    0x8b0500000000	            mov eax, dword [0x0400120a] 	       924	screen.c	FUNCTION_17	IF_1	CALL_1
0x11ca	            0x85c0	                           test eax, eax	       924	screen.c	FUNCTION_17	IF_1	CALL_1
0x11cc	     0xf8580010000	                           jne 0x4001392	       924	screen.c	FUNCTION_17	IF_1	CALL_1
0x11d2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       927	screen.c	FUNCTION_17	IF_2
0x11d6	        0x488b4078	            mov rax, qword [rax + 0x78] 	       927	screen.c	FUNCTION_17	IF_2
0x11da	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	       927	screen.c	FUNCTION_17	IF_2
0x11de	     0xf8f62010000	                            jg 0x4001386	       927	screen.c	FUNCTION_17	IF_2
0x11e4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       927	screen.c	FUNCTION_17	IF_2
0x11e8	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	       927	screen.c	FUNCTION_17	IF_2
0x11ef	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	       927	screen.c	FUNCTION_17	IF_2
0x11f3	     0xf8e4d010000	                           jle 0x4001386	       927	screen.c	FUNCTION_17	IF_2
0x11f9	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       928	screen.c	FUNCTION_17	IF_2	CALL_2
0x11fd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       928	screen.c	FUNCTION_17	IF_2	CALL_2
0x1201	      0xba00000000	                              mov edx, 0	       928	screen.c	FUNCTION_17	IF_2	CALL_2
0x1206	          0x4889ce	                            mov rsi, rcx	       928	screen.c	FUNCTION_17	IF_2	CALL_2
0x1209	          0x4889c7	                            mov rdi, rax	       928	screen.c	FUNCTION_17	IF_2	CALL_2
0x120c	      0xe800000000	                          call 0x4001251	       928	screen.c	FUNCTION_17	IF_2	CALL_2
0x1211	          0x4885c0	                           test rax, rax	       928	screen.c	FUNCTION_17	IF_2	CALL_2
0x1214	     0xf852c010000	                           jne 0x4001386	       928	screen.c	FUNCTION_17	IF_2	CALL_2
0x121a	    0x488b05000000	            mov rax, qword [0x04001261] 	       932	screen.c	FUNCTION_17	IF_2	CALL_3
0x1221	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       932	screen.c	FUNCTION_17	IF_2	CALL_3
0x1225	          0x4889d6	                            mov rsi, rdx	       932	screen.c	FUNCTION_17	IF_2	CALL_3
0x1228	          0x4889c7	                            mov rdi, rax	       932	screen.c	FUNCTION_17	IF_2	CALL_3
0x122b	      0xe800000000	                          call 0x4001270	       932	screen.c	FUNCTION_17	IF_2	CALL_3
0x1230	        0x488d45e0	                   lea rax, [rbp - 0x20]	       933	screen.c	FUNCTION_17	IF_2	CALL_4
0x1234	          0x4889c7	                            mov rdi, rax	       933	screen.c	FUNCTION_17	IF_2	CALL_4
0x1237	      0xe800000000	                          call 0x400127c	       933	screen.c	FUNCTION_17	IF_2	CALL_4
0x123c	      0xe82bfeffff	                 call sym.update_prepare	       935	screen.c	FUNCTION_17	IF_2	CALL_5
0x1241	    0xc745d8000000	               mov dword [rbp - 0x28], 0	       937	screen.c	FUNCTION_17	IF_2
0x1248	    0xc745dc000000	               mov dword [rbp - 0x24], 0	       938	screen.c	FUNCTION_17	IF_2	FOR_1
0x124f	      0xe9d0000000	                           jmp 0x4001364	       938	screen.c	FUNCTION_17	IF_2	FOR_1
0x1254	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       940	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3
0x1258	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	       940	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3
0x125f	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       940	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3
0x1262	          0x4863d0	                         movsxd rdx, eax	       940	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3
0x1265	          0x4889d0	                            mov rax, rdx	       940	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3
0x1268	          0x4801c0	                            add rax, rax	       940	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3
0x126b	          0x4801d0	                            add rax, rdx	       940	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3
0x126e	        0x48c1e003	                              shl rax, 3	       940	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3
0x1272	          0x4801c8	                            add rax, rcx	       940	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3
0x1275	          0x488b00	                    mov rax, qword [rax]	       940	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3
0x1278	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	       940	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3
0x127c	            0x7577	                           jne 0x4001335	       940	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3
0x127e	      0xe800000000	                          call 0x40012c3	       942	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_6
0x1283	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       944	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_7
0x1287	          0x4889c7	                            mov rdi, rax	       944	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_7
0x128a	      0xe865e50000	                 call sym.init_search_hl	       944	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_7
0x128f	      0xe8eee40000	                call sym.start_search_hl	       945	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_8
0x1294	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       946	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_9
0x1298	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       946	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_9
0x129c	          0x4889d6	                            mov rsi, rdx	       946	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_9
0x129f	          0x4889c7	                            mov rdi, rax	       946	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_9
0x12a2	      0xe84ee60000	              call sym.prepare_search_hl	       946	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_9
0x12a7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       948	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_10
0x12ab	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	       948	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_10
0x12b2	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       948	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_10
0x12b5	          0x4863d0	                         movsxd rdx, eax	       948	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_10
0x12b8	          0x4889d0	                            mov rax, rdx	       948	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_10
0x12bb	          0x4801c0	                            add rax, rax	       948	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_10
0x12be	          0x4801d0	                            add rax, rdx	       948	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_10
0x12c1	        0x48c1e003	                              shl rax, 3	       948	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_10
0x12c5	          0x4801c8	                            add rax, rcx	       948	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_10
0x12c8	         0xfb74008	               movzx eax, word [rax + 8]	       948	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_10
0x12cc	           0xfb7d0	                           movzx edx, ax	       948	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_10
0x12cf	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       948	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_10
0x12d2	          0x8d0c02	                    lea ecx, [rdx + rax]	       948	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_10
0x12d5	          0x8b55d8	             mov edx, dword [rbp - 0x28]	       948	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_10
0x12d8	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	       948	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_10
0x12dc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       948	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_10
0x12e0	    0x41b800000000	                              mov r8d, 0	       948	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_10
0x12e6	          0x4889c7	                            mov rdi, rax	       948	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_10
0x12e9	      0xe8e84b0000	                       call sym.win_line	       948	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_10
0x12ee	      0xe8d4e40000	                  call sym.end_search_hl	       950	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3	CALL_11
0x12f3	            0xeb42	                           jmp 0x4001377	       952	screen.c	FUNCTION_17	IF_2	FOR_1	IF_3
0x12f5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       954	screen.c	FUNCTION_17	IF_2	FOR_1
0x12f9	    0x488b88000100	           mov rcx, qword [rax + 0x100] 	       954	screen.c	FUNCTION_17	IF_2	FOR_1
0x1300	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       954	screen.c	FUNCTION_17	IF_2	FOR_1
0x1303	          0x4863d0	                         movsxd rdx, eax	       954	screen.c	FUNCTION_17	IF_2	FOR_1
0x1306	          0x4889d0	                            mov rax, rdx	       954	screen.c	FUNCTION_17	IF_2	FOR_1
0x1309	          0x4801c0	                            add rax, rax	       954	screen.c	FUNCTION_17	IF_2	FOR_1
0x130c	          0x4801d0	                            add rax, rdx	       954	screen.c	FUNCTION_17	IF_2	FOR_1
0x130f	        0x48c1e003	                              shl rax, 3	       954	screen.c	FUNCTION_17	IF_2	FOR_1
0x1313	          0x4801c8	                            add rax, rcx	       954	screen.c	FUNCTION_17	IF_2	FOR_1
0x1316	         0xfb74008	               movzx eax, word [rax + 8]	       954	screen.c	FUNCTION_17	IF_2	FOR_1
0x131a	           0xfb7c0	                           movzx eax, ax	       954	screen.c	FUNCTION_17	IF_2	FOR_1
0x131d	           0x145d8	             add dword [rbp - 0x28], eax	       954	screen.c	FUNCTION_17	IF_2	FOR_1
0x1320	        0x8345dc01	               add dword [rbp - 0x24], 1	       938	screen.c	FUNCTION_17	IF_2	FOR_1
0x1324	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       938	screen.c	FUNCTION_17	IF_2	FOR_1
0x1328	    0x8b80f8000000	            mov eax, dword [rax + 0xf8] 	       938	screen.c	FUNCTION_17	IF_2	FOR_1
0x132e	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	       938	screen.c	FUNCTION_17	IF_2	FOR_1
0x1331	     0xf8f1dffffff	                            jg 0x4001294	       938	screen.c	FUNCTION_17	IF_2	FOR_1
0x1337	      0xe84bfdffff	                  call sym.update_finish	       957	screen.c	FUNCTION_17	IF_2	CALL_12
0x133c	      0xbf00000000	                              mov edi, 0	       960	screen.c	FUNCTION_17	IF_2	CALL_13
0x1341	      0xe800000000	                          call 0x4001386	       960	screen.c	FUNCTION_17	IF_2	CALL_13
0x1346	    0xc70500000000	               mov dword [0x04001390], 0	       963	screen.c	FUNCTION_17
0x1350	            0xeb01	                           jmp 0x4001393	       963	screen.c	FUNCTION_17
0x1352	              0x90	                                     nop	       925	screen.c	FUNCTION_17	IF_1
0x1353	        0x488b45f8	                mov rax, qword [rbp - 8]	       964	screen.c	FUNCTION_17
0x1357	    0x644833042528	                xor rax, qword fs:[0x28]	       964	screen.c	FUNCTION_17
0x1360	            0x7405	                            je 0x40013a7	       964	screen.c	FUNCTION_17
0x1362	      0xe800000000	                          call 0x40013a7	       964	screen.c	FUNCTION_17
0x1367	              0xc9	                                   leave	       964	screen.c	FUNCTION_17
0x1368	              0xc3	                                     ret	       964	screen.c	FUNCTION_17
number_width	DO,1:functions,0:CALL,0:ELSE,1:IF,3:WHILE,0:FOR,0:SWITCH,0	71
0x1597d	              0x55	                                push rbp	     11059	screen.c	FUNCTION_100
0x1597e	          0x4889e5	                            mov rbp, rsp	     11059	screen.c	FUNCTION_100
0x15981	        0x48897de8	             mov qword [rbp - 0x18], rdi	     11059	screen.c	FUNCTION_100
0x15985	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11063	screen.c	FUNCTION_100	IF_1
0x15989	    0x8b803c020000	           mov eax, dword [rax + 0x23c] 	     11063	screen.c	FUNCTION_100	IF_1
0x1598f	            0x85c0	                           test eax, eax	     11063	screen.c	FUNCTION_100	IF_1
0x15991	            0x7420	                            je 0x40159f3	     11063	screen.c	FUNCTION_100	IF_1
0x15993	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11063	screen.c	FUNCTION_100	IF_1
0x15997	    0x8b8038020000	           mov eax, dword [rax + 0x238] 	     11063	screen.c	FUNCTION_100	IF_1
0x1599d	            0x85c0	                           test eax, eax	     11063	screen.c	FUNCTION_100	IF_1
0x1599f	            0x7512	                           jne 0x40159f3	     11063	screen.c	FUNCTION_100	IF_1
0x159a1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11065	screen.c	FUNCTION_100	IF_1
0x159a5	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	     11065	screen.c	FUNCTION_100	IF_1
0x159ab	            0x4898	                                    cdqe	     11065	screen.c	FUNCTION_100	IF_1
0x159ad	        0x488945f8	                mov qword [rbp - 8], rax	     11065	screen.c	FUNCTION_100	IF_1
0x159b1	            0xeb0f	                           jmp 0x4015a02	     11065	screen.c	FUNCTION_100	IF_1
0x159b3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11068	screen.c	FUNCTION_100	ELSE_1
0x159b7	        0x488b4008	                mov rax, qword [rax + 8]	     11068	screen.c	FUNCTION_100	ELSE_1
0x159bb	          0x488b00	                    mov rax, qword [rax]	     11068	screen.c	FUNCTION_100	ELSE_1
0x159be	        0x488945f8	                mov qword [rbp - 8], rax	     11068	screen.c	FUNCTION_100	ELSE_1
0x159c2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11070	screen.c	FUNCTION_100	IF_2
0x159c6	    0x488b80901800	          mov rax, qword [rax + 0x1890] 	     11070	screen.c	FUNCTION_100	IF_2
0x159cd	        0x483b45f8	                cmp rax, qword [rbp - 8]	     11070	screen.c	FUNCTION_100	IF_2
0x159d1	            0x752a	                           jne 0x4015a3d	     11070	screen.c	FUNCTION_100	IF_2
0x159d3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11070	screen.c	FUNCTION_100	IF_2
0x159d7	    0x488b90981800	          mov rdx, qword [rax + 0x1898] 	     11070	screen.c	FUNCTION_100	IF_2
0x159de	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11070	screen.c	FUNCTION_100	IF_2
0x159e2	    0x488b80400200	           mov rax, qword [rax + 0x240] 	     11070	screen.c	FUNCTION_100	IF_2
0x159e9	          0x4839c2	                            cmp rdx, rax	     11070	screen.c	FUNCTION_100	IF_2
0x159ec	            0x750f	                           jne 0x4015a3d	     11070	screen.c	FUNCTION_100	IF_2
0x159ee	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11071	screen.c	FUNCTION_100	IF_2
0x159f2	    0x8b80a0180000	          mov eax, dword [rax + 0x18a0] 	     11071	screen.c	FUNCTION_100	IF_2
0x159f8	      0xe99b000000	                           jmp 0x4015ad8	     11071	screen.c	FUNCTION_100	IF_2
0x159fd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11072	screen.c	FUNCTION_100
0x15a01	        0x488b55f8	                mov rdx, qword [rbp - 8]	     11072	screen.c	FUNCTION_100
0x15a05	    0x488990901800	          mov qword [rax + 0x1890], rdx 	     11072	screen.c	FUNCTION_100
0x15a0c	    0xc745f4000000	                mov dword [rbp - 0xc], 0	     11074	screen.c	FUNCTION_100
0x15a13	        0x488b4df8	                mov rcx, qword [rbp - 8]	     11077	screen.c	FUNCTION_100	DO_1
0x15a17	    0x48ba67666666	          movabs rdx, 0x6666666666666667	     11077	screen.c	FUNCTION_100	DO_1
0x15a21	          0x4889c8	                            mov rax, rcx	     11077	screen.c	FUNCTION_100	DO_1
0x15a24	          0x48f7ea	                                imul rdx	     11077	screen.c	FUNCTION_100	DO_1
0x15a27	        0x48c1fa02	                              sar rdx, 2	     11077	screen.c	FUNCTION_100	DO_1
0x15a2b	          0x4889c8	                            mov rax, rcx	     11077	screen.c	FUNCTION_100	DO_1
0x15a2e	        0x48c1f83f	                           sar rax, 0x3f	     11077	screen.c	FUNCTION_100	DO_1
0x15a32	          0x4829c2	                            sub rdx, rax	     11077	screen.c	FUNCTION_100	DO_1
0x15a35	          0x4889d0	                            mov rax, rdx	     11077	screen.c	FUNCTION_100	DO_1
0x15a38	        0x488945f8	                mov qword [rbp - 8], rax	     11077	screen.c	FUNCTION_100	DO_1
0x15a3c	        0x8345f401	                add dword [rbp - 0xc], 1	     11078	screen.c	FUNCTION_100	DO_1
0x15a40	      0x48837df800	                  cmp qword [rbp - 8], 0	     11079	screen.c	FUNCTION_100	DO_1
0x15a45	            0x7fcc	                            jg 0x4015a53	     11079	screen.c	FUNCTION_100	DO_1
0x15a47	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     11082	screen.c	FUNCTION_100	IF_3
0x15a4a	          0x4863d0	                         movsxd rdx, eax	     11082	screen.c	FUNCTION_100	IF_3
0x15a4d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11082	screen.c	FUNCTION_100	IF_3
0x15a51	    0x488b80400200	           mov rax, qword [rax + 0x240] 	     11082	screen.c	FUNCTION_100	IF_3
0x15a58	        0x4883e801	                              sub rax, 1	     11082	screen.c	FUNCTION_100	IF_3
0x15a5c	          0x4839c2	                            cmp rdx, rax	     11082	screen.c	FUNCTION_100	IF_3
0x15a5f	            0x7d11	                           jge 0x4015ab2	     11082	screen.c	FUNCTION_100	IF_3
0x15a61	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11083	screen.c	FUNCTION_100	IF_3
0x15a65	    0x488b80400200	           mov rax, qword [rax + 0x240] 	     11083	screen.c	FUNCTION_100	IF_3
0x15a6c	          0x83e801	                              sub eax, 1	     11083	screen.c	FUNCTION_100	IF_3
0x15a6f	          0x8945f4	              mov dword [rbp - 0xc], eax	     11083	screen.c	FUNCTION_100	IF_3
0x15a72	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11085	screen.c	FUNCTION_100
0x15a76	          0x8b55f4	              mov edx, dword [rbp - 0xc]	     11085	screen.c	FUNCTION_100
0x15a79	    0x8990a0180000	          mov dword [rax + 0x18a0], edx 	     11085	screen.c	FUNCTION_100
0x15a7f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11086	screen.c	FUNCTION_100
0x15a83	    0x488b90400200	           mov rdx, qword [rax + 0x240] 	     11086	screen.c	FUNCTION_100
0x15a8a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11086	screen.c	FUNCTION_100
0x15a8e	    0x488990981800	          mov qword [rax + 0x1898], rdx 	     11086	screen.c	FUNCTION_100
0x15a95	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     11087	screen.c	FUNCTION_100
0x15a98	              0x5d	                                 pop rbp	     11088	screen.c	FUNCTION_100
0x15a99	              0xc3	                                     ret	     11088	screen.c	FUNCTION_100
rl_mirror	DO,0:functions,0:CALL,1:ELSE,0:IF,0:WHILE,0:FOR,1:SWITCH,0	34
0xcce2	              0x55	                                push rbp	      6442	screen.c	ELSE_10	FUNCTION_33
0xcce3	          0x4889e5	                            mov rbp, rsp	      6442	screen.c	ELSE_10	FUNCTION_33
0xcce6	        0x4883ec30	                           sub rsp, 0x30	      6442	screen.c	ELSE_10	FUNCTION_33
0xccea	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      6442	screen.c	ELSE_10	FUNCTION_33
0xccee	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6446	screen.c	ELSE_10	FUNCTION_33	FOR_1	CALL_1
0xccf2	        0x488945f0	             mov qword [rbp - 0x10], rax	      6446	screen.c	ELSE_10	FUNCTION_33	FOR_1	CALL_1
0xccf6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6446	screen.c	ELSE_10	FUNCTION_33	FOR_1	CALL_1
0xccfa	          0x4889c7	                            mov rdi, rax	      6446	screen.c	ELSE_10	FUNCTION_33	FOR_1	CALL_1
0xccfd	      0xe800000000	                          call 0x400cd42	      6446	screen.c	ELSE_10	FUNCTION_33	FOR_1	CALL_1
0xcd02	        0x488d50ff	                      lea rdx, [rax - 1]	      6446	screen.c	ELSE_10	FUNCTION_33	FOR_1	CALL_1
0xcd06	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6446	screen.c	ELSE_10	FUNCTION_33	FOR_1	CALL_1
0xcd0a	          0x4801d0	                            add rax, rdx	      6446	screen.c	ELSE_10	FUNCTION_33	FOR_1	CALL_1
0xcd0d	        0x488945f8	                mov qword [rbp - 8], rax	      6446	screen.c	ELSE_10	FUNCTION_33	FOR_1	CALL_1
0xcd11	            0xeb2f	                           jmp 0x400cd82	      6446	screen.c	ELSE_10	FUNCTION_33	FOR_1	CALL_1
0xcd13	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6448	screen.c	ELSE_10	FUNCTION_33	FOR_1
0xcd17	           0xfb600	                   movzx eax, byte [rax]	      6448	screen.c	ELSE_10	FUNCTION_33	FOR_1
0xcd1a	           0xfb6c0	                           movzx eax, al	      6448	screen.c	ELSE_10	FUNCTION_33	FOR_1
0xcd1d	          0x8945ec	             mov dword [rbp - 0x14], eax	      6448	screen.c	ELSE_10	FUNCTION_33	FOR_1
0xcd20	        0x488b45f8	                mov rax, qword [rbp - 8]	      6449	screen.c	ELSE_10	FUNCTION_33	FOR_1
0xcd24	           0xfb610	                   movzx edx, byte [rax]	      6449	screen.c	ELSE_10	FUNCTION_33	FOR_1
0xcd27	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6449	screen.c	ELSE_10	FUNCTION_33	FOR_1
0xcd2b	            0x8810	                      mov byte [rax], dl	      6449	screen.c	ELSE_10	FUNCTION_33	FOR_1
0xcd2d	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      6450	screen.c	ELSE_10	FUNCTION_33	FOR_1
0xcd30	            0x89c2	                            mov edx, eax	      6450	screen.c	ELSE_10	FUNCTION_33	FOR_1
0xcd32	        0x488b45f8	                mov rax, qword [rbp - 8]	      6450	screen.c	ELSE_10	FUNCTION_33	FOR_1
0xcd36	            0x8810	                      mov byte [rax], dl	      6450	screen.c	ELSE_10	FUNCTION_33	FOR_1
0xcd38	      0x488345f001	               add qword [rbp - 0x10], 1	      6446	screen.c	ELSE_10	FUNCTION_33	FOR_1	CALL_1
0xcd3d	      0x48836df801	                  sub qword [rbp - 8], 1	      6446	screen.c	ELSE_10	FUNCTION_33	FOR_1	CALL_1
0xcd42	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6446	screen.c	ELSE_10	FUNCTION_33	FOR_1	CALL_1
0xcd46	        0x483b45f8	                cmp rax, qword [rbp - 8]	      6446	screen.c	ELSE_10	FUNCTION_33	FOR_1	CALL_1
0xcd4a	            0x72c7	                            jb 0x400cd53	      6446	screen.c	ELSE_10	FUNCTION_33	FOR_1	CALL_1
0xcd4c	              0x90	                                     nop	      6452	screen.c	ELSE_10	FUNCTION_33
0xcd4d	              0xc9	                                   leave	      6452	screen.c	ELSE_10	FUNCTION_33
0xcd4e	              0xc3	                                     ret	      6452	screen.c	ELSE_10	FUNCTION_33
screen_del_lines	DO,0:functions,0:CALL,35:ELSE,18:IF,23:WHILE,2:FOR,4:SWITCH,0	424
0x13861	              0x55	                                push rbp	      9962	screen.c	FUNCTION_85
0x13862	          0x4889e5	                            mov rbp, rsp	      9962	screen.c	FUNCTION_85
0x13865	        0x4883ec40	                           sub rsp, 0x40	      9962	screen.c	FUNCTION_85
0x13869	          0x897ddc	             mov dword [rbp - 0x24], edi	      9962	screen.c	FUNCTION_85
0x1386c	          0x8975d8	             mov dword [rbp - 0x28], esi	      9962	screen.c	FUNCTION_85
0x1386f	          0x8955d4	             mov dword [rbp - 0x2c], edx	      9962	screen.c	FUNCTION_85
0x13872	          0x894dd0	             mov dword [rbp - 0x30], ecx	      9962	screen.c	FUNCTION_85
0x13875	        0x448945cc	             mov dword [rbp - 0x34], r8d	      9962	screen.c	FUNCTION_85
0x13879	        0x44894dc8	             mov dword [rbp - 0x38], r9d	      9962	screen.c	FUNCTION_85
0x1387d	      0xbf01000000	                              mov edi, 1	      9980	screen.c	FUNCTION_85	IF_1	CALL_1
0x13882	      0xe800000000	                          call 0x40138c7	      9980	screen.c	FUNCTION_85	IF_1	CALL_1
0x13887	            0x85c0	                           test eax, eax	      9980	screen.c	FUNCTION_85	IF_1	CALL_1
0x13889	            0x7434	                            je 0x40138ff	      9980	screen.c	FUNCTION_85	IF_1	CALL_1
0x1388b	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      9980	screen.c	FUNCTION_85	IF_1	CALL_1
0x1388f	            0x7e2e	                           jle 0x40138ff	      9980	screen.c	FUNCTION_85	IF_1	CALL_1
0x13891	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      9981	screen.c	FUNCTION_85	IF_1
0x13895	            0x7512	                           jne 0x40138e9	      9981	screen.c	FUNCTION_85	IF_1
0x13897	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      9981	screen.c	FUNCTION_85	IF_1
0x1389a	          0x4863d0	                         movsxd rdx, eax	      9981	screen.c	FUNCTION_85	IF_1
0x1389d	    0x488b05000000	            mov rax, qword [0x040138e4] 	      9981	screen.c	FUNCTION_85	IF_1
0x138a4	          0x4839c2	                            cmp rdx, rax	      9981	screen.c	FUNCTION_85	IF_1
0x138a7	            0x7f16	                            jg 0x40138ff	      9981	screen.c	FUNCTION_85	IF_1
0x138a9	     0xfb705000000	           movzx eax, word [0x040138f0] 	      9983	screen.c	FUNCTION_85	IF_1
0x138b0	          0x6685c0	                             test ax, ax	      9983	screen.c	FUNCTION_85	IF_1
0x138b3	            0x7414	                            je 0x4013909	      9983	screen.c	FUNCTION_85	IF_1
0x138b5	    0x8b0500000000	            mov eax, dword [0x040138fb] 	      9984	screen.c	FUNCTION_85	IF_1
0x138bb	            0x85c0	                           test eax, eax	      9984	screen.c	FUNCTION_85	IF_1
0x138bd	            0x7e0a	                           jle 0x4013909	      9984	screen.c	FUNCTION_85	IF_1
0x138bf	      0xb800000000	                              mov eax, 0	      9987	screen.c	FUNCTION_85	IF_1
0x138c4	      0xe981050000	                           jmp 0x4013e8a	      9987	screen.c	FUNCTION_85	IF_1
0x138c9	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      9992	screen.c	FUNCTION_85
0x138cc	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      9992	screen.c	FUNCTION_85
0x138cf	             0x1d0	                            add eax, edx	      9992	screen.c	FUNCTION_85
0x138d1	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	      9992	screen.c	FUNCTION_85
0x138d4	           0xf9dc0	                                setge al	      9992	screen.c	FUNCTION_85
0x138d7	           0xfb6c0	                           movzx eax, al	      9992	screen.c	FUNCTION_85
0x138da	          0x8945f4	              mov dword [rbp - 0xc], eax	      9992	screen.c	FUNCTION_85
0x138dd	    0x488b05000000	            mov rax, qword [0x04013924] 	      9998	screen.c	FUNCTION_85	CALL_2
0x138e4	           0xfb600	                   movzx eax, byte [rax]	      9998	screen.c	FUNCTION_85	CALL_2
0x138e7	            0x84c0	                             test al, al	      9998	screen.c	FUNCTION_85	CALL_2
0x138e9	            0x7413	                            je 0x401393e	      9998	screen.c	FUNCTION_85	CALL_2
0x138eb	    0x488b05000000	            mov rax, qword [0x04013932] 	      9998	screen.c	FUNCTION_85	CALL_2
0x138f2	          0x4889c7	                            mov rdi, rax	      9998	screen.c	FUNCTION_85	CALL_2
0x138f5	      0xe800000000	                          call 0x401393a	      9998	screen.c	FUNCTION_85	CALL_2
0x138fa	            0x85c0	                           test eax, eax	      9998	screen.c	FUNCTION_85	CALL_2
0x138fc	            0x7407	                            je 0x4013945	      9998	screen.c	FUNCTION_85	CALL_2
0x138fe	      0xb801000000	                              mov eax, 1	      9998	screen.c	FUNCTION_85	CALL_2
0x13903	            0xeb05	                           jmp 0x401394a	      9998	screen.c	FUNCTION_85	CALL_2
0x13905	      0xb800000000	                              mov eax, 0	      9998	screen.c	FUNCTION_85	CALL_2
0x1390a	          0x8945f8	                mov dword [rbp - 8], eax	      9998	screen.c	FUNCTION_85	CALL_2
0x1390d	      0x48837d1000	               cmp qword [rbp + 0x10], 0	     10012	screen.c	FUNCTION_85	IF_2
0x13912	            0x7433	                            je 0x4013987	     10012	screen.c	FUNCTION_85	IF_2
0x13914	        0x488b4510	            mov rax, qword [rbp + 0x10] 	     10012	screen.c	FUNCTION_85	IF_2
0x13918	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	     10012	screen.c	FUNCTION_85	IF_2
0x1391e	          0x4863d0	                         movsxd rdx, eax	     10012	screen.c	FUNCTION_85	IF_2
0x13921	    0x488b05000000	            mov rax, qword [0x04013968] 	     10012	screen.c	FUNCTION_85	IF_2
0x13928	          0x4839c2	                            cmp rdx, rax	     10012	screen.c	FUNCTION_85	IF_2
0x1392b	            0x741a	                            je 0x4013987	     10012	screen.c	FUNCTION_85	IF_2
0x1392d	    0x488b05000000	            mov rax, qword [0x04013974] 	     10012	screen.c	FUNCTION_85	IF_2
0x13934	           0xfb600	                   movzx eax, byte [rax]	     10012	screen.c	FUNCTION_85	IF_2
0x13937	            0x84c0	                             test al, al	     10012	screen.c	FUNCTION_85	IF_2
0x13939	            0x750c	                           jne 0x4013987	     10012	screen.c	FUNCTION_85	IF_2
0x1393b	    0xc745f0090000	               mov dword [rbp - 0x10], 9	     10013	screen.c	FUNCTION_85	IF_2
0x13942	      0xe9f7000000	                           jmp 0x4013a7e	     10013	screen.c	FUNCTION_85	IF_2
0x13947	    0x488b05000000	            mov rax, qword [0x0401398e] 	     10014	screen.c	FUNCTION_85	ELSE_1	IF_3	CALL_3
0x1394e	          0x4889c7	                            mov rdi, rax	     10014	screen.c	FUNCTION_85	ELSE_1	IF_3	CALL_3
0x13951	      0xe800000000	                          call 0x4013996	     10014	screen.c	FUNCTION_85	ELSE_1	IF_3	CALL_3
0x13956	            0x85c0	                           test eax, eax	     10014	screen.c	FUNCTION_85	ELSE_1	IF_3	CALL_3
0x13958	            0x7412	                            je 0x40139ac	     10014	screen.c	FUNCTION_85	ELSE_1	IF_3	CALL_3
0x1395a	        0x837df400	                cmp dword [rbp - 0xc], 0	     10014	screen.c	FUNCTION_85	ELSE_1	IF_3	CALL_3
0x1395e	            0x740c	                            je 0x40139ac	     10014	screen.c	FUNCTION_85	ELSE_1	IF_3	CALL_3
0x13960	    0xc745f0080000	               mov dword [rbp - 0x10], 8	     10015	screen.c	FUNCTION_85	ELSE_1	IF_3
0x13967	      0xe9d2000000	                           jmp 0x4013a7e	     10015	screen.c	FUNCTION_85	ELSE_1	IF_3
0x1396c	        0x837dd800	               cmp dword [rbp - 0x28], 0	     10029	screen.c	FUNCTION_85	ELSE_2	IF_4	ELSE_3	IF_5
0x13970	            0x7520	                           jne 0x40139d2	     10029	screen.c	FUNCTION_85	ELSE_2	IF_4	ELSE_3	IF_5
0x13972	        0x837dd401	               cmp dword [rbp - 0x2c], 1	     10029	screen.c	FUNCTION_85	ELSE_2	IF_4	ELSE_3	IF_5
0x13976	            0x740e	                            je 0x40139c6	     10029	screen.c	FUNCTION_85	ELSE_2	IF_4	ELSE_3	IF_5
0x13978	    0x488b05000000	            mov rax, qword [0x040139bf] 	     10035	screen.c	FUNCTION_85	ELSE_2	IF_4	ELSE_3	IF_5
0x1397f	           0xfb600	                   movzx eax, byte [rax]	     10035	screen.c	FUNCTION_85	ELSE_2	IF_4	ELSE_3	IF_5
0x13982	            0x84c0	                             test al, al	     10033	screen.c	FUNCTION_85	ELSE_2	IF_4	ELSE_3	IF_5
0x13984	            0x750c	                           jne 0x40139d2	     10033	screen.c	FUNCTION_85	ELSE_2	IF_4	ELSE_3	IF_5
0x13986	    0xc745f0070000	               mov dword [rbp - 0x10], 7	     10037	screen.c	FUNCTION_85	ELSE_2	IF_4	ELSE_3	IF_5
0x1398d	      0xe9ac000000	                           jmp 0x4013a7e	     10037	screen.c	FUNCTION_85	ELSE_2	IF_4	ELSE_3	IF_5
0x13992	    0x488b05000000	            mov rax, qword [0x040139d9] 	     10038	screen.c	FUNCTION_85	ELSE_4	IF_6
0x13999	           0xfb600	                   movzx eax, byte [rax]	     10038	screen.c	FUNCTION_85	ELSE_4	IF_6
0x1399c	            0x84c0	                             test al, al	     10038	screen.c	FUNCTION_85	ELSE_4	IF_6
0x1399e	            0x7418	                            je 0x40139f8	     10038	screen.c	FUNCTION_85	ELSE_4	IF_6
0x139a0	        0x837dd401	               cmp dword [rbp - 0x2c], 1	     10038	screen.c	FUNCTION_85	ELSE_4	IF_6
0x139a4	            0x7e12	                           jle 0x40139f8	     10038	screen.c	FUNCTION_85	ELSE_4	IF_6
0x139a6	        0x837df800	                  cmp dword [rbp - 8], 0	     10038	screen.c	FUNCTION_85	ELSE_4	IF_6
0x139aa	            0x740c	                            je 0x40139f8	     10038	screen.c	FUNCTION_85	ELSE_4	IF_6
0x139ac	    0xc745f0020000	               mov dword [rbp - 0x10], 2	     10039	screen.c	FUNCTION_85	ELSE_4	IF_6
0x139b3	      0xe986000000	                           jmp 0x4013a7e	     10039	screen.c	FUNCTION_85	ELSE_4	IF_6
0x139b8	    0x488b05000000	            mov rax, qword [0x040139ff] 	     10040	screen.c	FUNCTION_85	ELSE_5	IF_7	CALL_4
0x139bf	          0x4889c7	                            mov rdi, rax	     10040	screen.c	FUNCTION_85	ELSE_5	IF_7	CALL_4
0x139c2	      0xe800000000	                          call 0x4013a07	     10040	screen.c	FUNCTION_85	ELSE_5	IF_7	CALL_4
0x139c7	            0x85c0	                           test eax, eax	     10040	screen.c	FUNCTION_85	ELSE_5	IF_7	CALL_4
0x139c9	            0x742f	                            je 0x4013a3a	     10040	screen.c	FUNCTION_85	ELSE_5	IF_7	CALL_4
0x139cb	        0x837df400	                cmp dword [rbp - 0xc], 0	     10040	screen.c	FUNCTION_85	ELSE_5	IF_7	CALL_4
0x139cf	            0x7429	                            je 0x4013a3a	     10040	screen.c	FUNCTION_85	ELSE_5	IF_7	CALL_4
0x139d1	      0x48837d1000	               cmp qword [rbp + 0x10], 0	     10041	screen.c	FUNCTION_85	ELSE_5	IF_7
0x139d6	            0x7419	                            je 0x4013a31	     10041	screen.c	FUNCTION_85	ELSE_5	IF_7
0x139d8	        0x488b4510	            mov rax, qword [rbp + 0x10] 	     10041	screen.c	FUNCTION_85	ELSE_5	IF_7
0x139dc	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	     10041	screen.c	FUNCTION_85	ELSE_5	IF_7
0x139e2	          0x4863d0	                         movsxd rdx, eax	     10041	screen.c	FUNCTION_85	ELSE_5	IF_7
0x139e5	    0x488b05000000	            mov rax, qword [0x04013a2c] 	     10041	screen.c	FUNCTION_85	ELSE_5	IF_7
0x139ec	          0x4839c2	                            cmp rdx, rax	     10041	screen.c	FUNCTION_85	ELSE_5	IF_7
0x139ef	            0x7509	                           jne 0x4013a3a	     10041	screen.c	FUNCTION_85	ELSE_5	IF_7
0x139f1	    0xc745f0040000	               mov dword [rbp - 0x10], 4	     10042	screen.c	FUNCTION_85	ELSE_5	IF_7
0x139f8	            0xeb44	                           jmp 0x4013a7e	     10042	screen.c	FUNCTION_85	ELSE_5	IF_7
0x139fa	    0x488b05000000	            mov rax, qword [0x04013a41] 	     10043	screen.c	FUNCTION_85	ELSE_6	IF_8
0x13a01	           0xfb600	                   movzx eax, byte [rax]	     10043	screen.c	FUNCTION_85	ELSE_6	IF_8
0x13a04	            0x84c0	                             test al, al	     10043	screen.c	FUNCTION_85	ELSE_6	IF_8
0x13a06	            0x740f	                            je 0x4013a57	     10043	screen.c	FUNCTION_85	ELSE_6	IF_8
0x13a08	        0x837df800	                  cmp dword [rbp - 8], 0	     10043	screen.c	FUNCTION_85	ELSE_6	IF_8
0x13a0c	            0x7409	                            je 0x4013a57	     10043	screen.c	FUNCTION_85	ELSE_6	IF_8
0x13a0e	    0xc745f0050000	               mov dword [rbp - 0x10], 5	     10044	screen.c	FUNCTION_85	ELSE_6	IF_8
0x13a15	            0xeb27	                           jmp 0x4013a7e	     10044	screen.c	FUNCTION_85	ELSE_6	IF_8
0x13a17	    0x488b05000000	            mov rax, qword [0x04013a5e] 	     10045	screen.c	FUNCTION_85	ELSE_7	IF_9
0x13a1e	           0xfb600	                   movzx eax, byte [rax]	     10045	screen.c	FUNCTION_85	ELSE_7	IF_9
0x13a21	            0x84c0	                             test al, al	     10045	screen.c	FUNCTION_85	ELSE_7	IF_9
0x13a23	            0x740f	                            je 0x4013a74	     10045	screen.c	FUNCTION_85	ELSE_7	IF_9
0x13a25	        0x837df800	                  cmp dword [rbp - 8], 0	     10045	screen.c	FUNCTION_85	ELSE_7	IF_9
0x13a29	            0x7409	                            je 0x4013a74	     10045	screen.c	FUNCTION_85	ELSE_7	IF_9
0x13a2b	    0xc745f0020000	               mov dword [rbp - 0x10], 2	     10046	screen.c	FUNCTION_85	ELSE_7	IF_9
0x13a32	            0xeb0a	                           jmp 0x4013a7e	     10046	screen.c	FUNCTION_85	ELSE_7	IF_9
0x13a34	      0xb800000000	                              mov eax, 0	     10048	screen.c	FUNCTION_85	ELSE_8
0x13a39	      0xe90c040000	                           jmp 0x4013e8a	     10048	screen.c	FUNCTION_85	ELSE_8
0x13a3e	          0x8b55dc	             mov edx, dword [rbp - 0x24]	     10053	screen.c	FUNCTION_85	IF_10
0x13a41	          0x8b45d8	             mov eax, dword [rbp - 0x28]	     10053	screen.c	FUNCTION_85	IF_10
0x13a44	             0x1d0	                            add eax, edx	     10053	screen.c	FUNCTION_85	IF_10
0x13a46	            0x85c0	                           test eax, eax	     10053	screen.c	FUNCTION_85	IF_10
0x13a48	            0x7f20	                            jg 0x4013aaa	     10053	screen.c	FUNCTION_85	IF_10
0x13a4a	      0x48837d1000	               cmp qword [rbp + 0x10], 0	     10053	screen.c	FUNCTION_85	IF_10
0x13a4f	            0x7425	                            je 0x4013ab6	     10053	screen.c	FUNCTION_85	IF_10
0x13a51	        0x488b4510	            mov rax, qword [rbp + 0x10] 	     10053	screen.c	FUNCTION_85	IF_10
0x13a55	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	     10053	screen.c	FUNCTION_85	IF_10
0x13a5b	          0x4863d0	                         movsxd rdx, eax	     10053	screen.c	FUNCTION_85	IF_10
0x13a5e	    0x488b05000000	            mov rax, qword [0x04013aa5] 	     10053	screen.c	FUNCTION_85	IF_10
0x13a65	          0x4839c2	                            cmp rdx, rax	     10053	screen.c	FUNCTION_85	IF_10
0x13a68	            0x740c	                            je 0x4013ab6	     10053	screen.c	FUNCTION_85	IF_10
0x13a6a	      0xbf00000000	                              mov edi, 0	     10054	screen.c	FUNCTION_85	CALL_5
0x13a6f	      0xe800000000	                          call 0x4013ab4	     10054	screen.c	FUNCTION_85	CALL_5
0x13a74	            0xeb0a	                           jmp 0x4013ac0	     10054	screen.c	FUNCTION_85	CALL_5
0x13a76	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	     10056	screen.c	FUNCTION_85	CALL_6
0x13a79	            0x89c7	                            mov edi, eax	     10056	screen.c	FUNCTION_85	CALL_6
0x13a7b	      0xe800000000	                          call 0x4013ac0	     10056	screen.c	FUNCTION_85	CALL_6
0x13a80	    0x488b05000000	            mov rax, qword [0x04013ac7] 	     10066	screen.c	FUNCTION_85	IF_11
0x13a87	           0xfb600	                   movzx eax, byte [rax]	     10066	screen.c	FUNCTION_85	IF_11
0x13a8a	            0x84c0	                             test al, al	     10066	screen.c	FUNCTION_85	IF_11
0x13a8c	            0x740e	                            je 0x4013adc	     10066	screen.c	FUNCTION_85	IF_11
0x13a8e	          0x8b45d8	             mov eax, dword [rbp - 0x28]	     10068	screen.c	FUNCTION_85	IF_11
0x13a91	          0x8945e8	             mov dword [rbp - 0x18], eax	     10068	screen.c	FUNCTION_85	IF_11
0x13a94	          0x8b45d0	             mov eax, dword [rbp - 0x30]	     10069	screen.c	FUNCTION_85	IF_11
0x13a97	          0x8945ec	             mov dword [rbp - 0x14], eax	     10069	screen.c	FUNCTION_85	IF_11
0x13a9a	            0xeb16	                           jmp 0x4013af2	     10069	screen.c	FUNCTION_85	IF_11
0x13a9c	          0x8b55d8	             mov edx, dword [rbp - 0x28]	     10073	screen.c	FUNCTION_85	ELSE_10
0x13a9f	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     10073	screen.c	FUNCTION_85	ELSE_10
0x13aa2	             0x1d0	                            add eax, edx	     10073	screen.c	FUNCTION_85	ELSE_10
0x13aa4	          0x8945e8	             mov dword [rbp - 0x18], eax	     10073	screen.c	FUNCTION_85	ELSE_10
0x13aa7	          0x8b55d0	             mov edx, dword [rbp - 0x30]	     10074	screen.c	FUNCTION_85	ELSE_10
0x13aaa	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     10074	screen.c	FUNCTION_85	ELSE_10
0x13aad	             0x1d0	                            add eax, edx	     10074	screen.c	FUNCTION_85	ELSE_10
0x13aaf	          0x8945ec	             mov dword [rbp - 0x14], eax	     10074	screen.c	FUNCTION_85	ELSE_10
0x13ab2	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     10081	screen.c	FUNCTION_85
0x13ab5	           0x145d8	             add dword [rbp - 0x28], eax	     10081	screen.c	FUNCTION_85
0x13ab8	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     10082	screen.c	FUNCTION_85
0x13abb	           0x145d0	             add dword [rbp - 0x30], eax	     10082	screen.c	FUNCTION_85
0x13abe	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	     10083	screen.c	FUNCTION_85	FOR_1
0x13ac5	      0xe9f2010000	                           jmp 0x4013cfc	     10083	screen.c	FUNCTION_85	FOR_1
0x13aca	      0x48837d1000	               cmp qword [rbp + 0x10], 0	     10085	screen.c	FUNCTION_85	FOR_1	IF_12
0x13acf	     0xf84eb000000	                            je 0x4013c00	     10085	screen.c	FUNCTION_85	FOR_1	IF_12
0x13ad5	        0x488b4510	            mov rax, qword [rbp + 0x10] 	     10085	screen.c	FUNCTION_85	FOR_1	IF_12
0x13ad9	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	     10085	screen.c	FUNCTION_85	FOR_1	IF_12
0x13adf	          0x4863d0	                         movsxd rdx, eax	     10085	screen.c	FUNCTION_85	FOR_1	IF_12
0x13ae2	    0x488b05000000	            mov rax, qword [0x04013b29] 	     10085	screen.c	FUNCTION_85	FOR_1	IF_12
0x13ae9	          0x4839c2	                            cmp rdx, rax	     10085	screen.c	FUNCTION_85	FOR_1	IF_12
0x13aec	     0xf84ce000000	                            je 0x4013c00	     10085	screen.c	FUNCTION_85	FOR_1	IF_12
0x13af2	          0x8b55d8	             mov edx, dword [rbp - 0x28]	     10088	screen.c	FUNCTION_85	FOR_1	IF_12
0x13af5	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	     10088	screen.c	FUNCTION_85	FOR_1	IF_12
0x13af8	             0x1d0	                            add eax, edx	     10088	screen.c	FUNCTION_85	FOR_1	IF_12
0x13afa	          0x8945e0	             mov dword [rbp - 0x20], eax	     10088	screen.c	FUNCTION_85	FOR_1	IF_12
0x13afd	            0xeb16	                           jmp 0x4013b55	     10089	screen.c	FUNCTION_85	FOR_1	IF_12	WHILE_1
0x13aff	          0x8b45e0	             mov eax, dword [rbp - 0x20]	     10090	screen.c	FUNCTION_85	FOR_1	IF_12	CALL_8
0x13b02	          0x2b45d4	             sub eax, dword [rbp - 0x2c]	     10090	screen.c	FUNCTION_85	FOR_1	IF_12	CALL_8
0x13b05	          0x8b4de0	             mov ecx, dword [rbp - 0x20]	     10090	screen.c	FUNCTION_85	FOR_1	IF_12	CALL_8
0x13b08	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	     10090	screen.c	FUNCTION_85	FOR_1	IF_12	CALL_8
0x13b0c	            0x89ce	                            mov esi, ecx	     10090	screen.c	FUNCTION_85	FOR_1	IF_12	CALL_8
0x13b0e	            0x89c7	                            mov edi, eax	     10090	screen.c	FUNCTION_85	FOR_1	IF_12	CALL_8
0x13b10	      0xe8bde7ffff	                       call sym.linecopy	     10090	screen.c	FUNCTION_85	FOR_1	IF_12	CALL_8
0x13b15	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	     10089	screen.c	FUNCTION_85	FOR_1	IF_12	WHILE_1
0x13b18	           0x145e0	             add dword [rbp - 0x20], eax	     10089	screen.c	FUNCTION_85	FOR_1	IF_12	WHILE_1
0x13b1b	          0x8b45d0	             mov eax, dword [rbp - 0x30]	     10089	screen.c	FUNCTION_85	FOR_1	IF_12	WHILE_1
0x13b1e	          0x83e801	                              sub eax, 1	     10089	screen.c	FUNCTION_85	FOR_1	IF_12	WHILE_1
0x13b21	          0x3945e0	            cmp dword [rbp - 0x20], eax 	     10089	screen.c	FUNCTION_85	FOR_1	IF_12	WHILE_1
0x13b24	            0x7ed9	                           jle 0x4013b3f	     10089	screen.c	FUNCTION_85	FOR_1	IF_12	WHILE_1
0x13b26	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	     10091	screen.c	FUNCTION_85	FOR_1	IF_12
0x13b29	          0x2945e0	             sub dword [rbp - 0x20], eax	     10091	screen.c	FUNCTION_85	FOR_1	IF_12
0x13b2c	      0xbf00000000	                              mov edi, 0	     10092	screen.c	FUNCTION_85	FOR_1	IF_12	IF_13	CALL_9
0x13b31	      0xe800000000	                          call 0x4013b76	     10092	screen.c	FUNCTION_85	FOR_1	IF_12	IF_13	CALL_9
0x13b36	            0x85c0	                           test eax, eax	     10092	screen.c	FUNCTION_85	FOR_1	IF_12	IF_13	CALL_9
0x13b38	            0x743a	                            je 0x4013bb4	     10092	screen.c	FUNCTION_85	FOR_1	IF_12	IF_13	CALL_9
0x13b3a	        0x488b4510	            mov rax, qword [rbp + 0x10] 	     10093	screen.c	FUNCTION_85	FOR_1	IF_12	IF_13	CALL_10
0x13b3e	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	     10093	screen.c	FUNCTION_85	FOR_1	IF_12	IF_13	CALL_10
0x13b44	    0x488b15000000	            mov rdx, qword [0x04013b8b] 	     10093	screen.c	FUNCTION_85	FOR_1	IF_12	IF_13	CALL_10
0x13b4b	          0x8b4de0	             mov ecx, dword [rbp - 0x20]	     10093	screen.c	FUNCTION_85	FOR_1	IF_12	IF_13	CALL_10
0x13b4e	          0x4863c9	                         movsxd rcx, ecx	     10093	screen.c	FUNCTION_85	FOR_1	IF_12	IF_13	CALL_10
0x13b51	        0x48c1e102	                              shl rcx, 2	     10093	screen.c	FUNCTION_85	FOR_1	IF_12	IF_13	CALL_10
0x13b55	          0x4801ca	                            add rdx, rcx	     10093	screen.c	FUNCTION_85	FOR_1	IF_12	IF_13	CALL_10
0x13b58	            0x8b0a	                    mov ecx, dword [rdx]	     10093	screen.c	FUNCTION_85	FOR_1	IF_12	IF_13	CALL_10
0x13b5a	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	     10093	screen.c	FUNCTION_85	FOR_1	IF_12	IF_13	CALL_10
0x13b5e	    0x8b92a8000000	            mov edx, dword [rdx + 0xa8] 	     10093	screen.c	FUNCTION_85	FOR_1	IF_12	IF_13	CALL_10
0x13b64	             0x1d1	                            add ecx, edx	     10093	screen.c	FUNCTION_85	FOR_1	IF_12	IF_13	CALL_10
0x13b66	          0x8b55c8	             mov edx, dword [rbp - 0x38]	     10093	screen.c	FUNCTION_85	FOR_1	IF_12	IF_13	CALL_10
0x13b69	            0x89c6	                            mov esi, eax	     10093	screen.c	FUNCTION_85	FOR_1	IF_12	IF_13	CALL_10
0x13b6b	            0x89cf	                            mov edi, ecx	     10093	screen.c	FUNCTION_85	FOR_1	IF_12	IF_13	CALL_10
0x13b6d	      0xe898e6ffff	                      call sym.lineclear	     10093	screen.c	FUNCTION_85	FOR_1	IF_12	IF_13	CALL_10
0x13b72	            0xeb35	                           jmp 0x4013be9	     10093	screen.c	FUNCTION_85	FOR_1	IF_12	IF_13	CALL_10
0x13b74	        0x488b4510	            mov rax, qword [rbp + 0x10] 	     10096	screen.c	FUNCTION_85	FOR_1	IF_12	CALL_11
0x13b78	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	     10096	screen.c	FUNCTION_85	FOR_1	IF_12	CALL_11
0x13b7e	    0x488b15000000	            mov rdx, qword [0x04013bc5] 	     10096	screen.c	FUNCTION_85	FOR_1	IF_12	CALL_11
0x13b85	          0x8b4de0	             mov ecx, dword [rbp - 0x20]	     10096	screen.c	FUNCTION_85	FOR_1	IF_12	CALL_11
0x13b88	          0x4863c9	                         movsxd rcx, ecx	     10096	screen.c	FUNCTION_85	FOR_1	IF_12	CALL_11
0x13b8b	        0x48c1e102	                              shl rcx, 2	     10096	screen.c	FUNCTION_85	FOR_1	IF_12	CALL_11
0x13b8f	          0x4801ca	                            add rdx, rcx	     10096	screen.c	FUNCTION_85	FOR_1	IF_12	CALL_11
0x13b92	            0x8b0a	                    mov ecx, dword [rdx]	     10096	screen.c	FUNCTION_85	FOR_1	IF_12	CALL_11
0x13b94	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	     10096	screen.c	FUNCTION_85	FOR_1	IF_12	CALL_11
0x13b98	    0x8b92a8000000	            mov edx, dword [rdx + 0xa8] 	     10096	screen.c	FUNCTION_85	FOR_1	IF_12	CALL_11
0x13b9e	             0x1ca	                            add edx, ecx	     10096	screen.c	FUNCTION_85	FOR_1	IF_12	CALL_11
0x13ba0	            0x89c6	                            mov esi, eax	     10096	screen.c	FUNCTION_85	FOR_1	IF_12	CALL_11
0x13ba2	            0x89d7	                            mov edi, edx	     10096	screen.c	FUNCTION_85	FOR_1	IF_12	CALL_11
0x13ba4	      0xe8f2e6ffff	                    call sym.lineinvalid	     10096	screen.c	FUNCTION_85	FOR_1	IF_12	CALL_11
0x13ba9	    0x488b15000000	            mov rdx, qword [0x04013bf0] 	     10097	screen.c	FUNCTION_85	FOR_1	IF_12
0x13bb0	          0x8b45e0	             mov eax, dword [rbp - 0x20]	     10097	screen.c	FUNCTION_85	FOR_1	IF_12
0x13bb3	            0x4898	                                    cdqe	     10097	screen.c	FUNCTION_85	FOR_1	IF_12
0x13bb5	          0x4801d0	                            add rax, rdx	     10097	screen.c	FUNCTION_85	FOR_1	IF_12
0x13bb8	          0xc60000	                       mov byte [rax], 0	     10097	screen.c	FUNCTION_85	FOR_1	IF_12
0x13bbb	      0xe9f8000000	                           jmp 0x4013cf8	     10097	screen.c	FUNCTION_85	FOR_1	IF_12
0x13bc0	          0x8b55d8	             mov edx, dword [rbp - 0x28]	     10102	screen.c	FUNCTION_85	FOR_1	ELSE_12
0x13bc3	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	     10102	screen.c	FUNCTION_85	FOR_1	ELSE_12
0x13bc6	             0x1d0	                            add eax, edx	     10102	screen.c	FUNCTION_85	FOR_1	ELSE_12
0x13bc8	          0x8945e0	             mov dword [rbp - 0x20], eax	     10102	screen.c	FUNCTION_85	FOR_1	ELSE_12
0x13bcb	    0x488b05000000	            mov rax, qword [0x04013c12] 	     10103	screen.c	FUNCTION_85	FOR_1	ELSE_12
0x13bd2	          0x8b55e0	             mov edx, dword [rbp - 0x20]	     10103	screen.c	FUNCTION_85	FOR_1	ELSE_12
0x13bd5	          0x4863d2	                         movsxd rdx, edx	     10103	screen.c	FUNCTION_85	FOR_1	ELSE_12
0x13bd8	        0x48c1e202	                              shl rdx, 2	     10103	screen.c	FUNCTION_85	FOR_1	ELSE_12
0x13bdc	          0x4801d0	                            add rax, rdx	     10103	screen.c	FUNCTION_85	FOR_1	ELSE_12
0x13bdf	            0x8b00	                    mov eax, dword [rax]	     10103	screen.c	FUNCTION_85	FOR_1	ELSE_12
0x13be1	          0x8945fc	                mov dword [rbp - 4], eax	     10103	screen.c	FUNCTION_85	FOR_1	ELSE_12
0x13be4	            0xeb54	                           jmp 0x4013c7a	     10104	screen.c	FUNCTION_85	FOR_1	ELSE_12	WHILE_2
0x13be6	    0x488b15000000	            mov rdx, qword [0x04013c2d] 	     10106	screen.c	FUNCTION_85	FOR_1	ELSE_12	WHILE_2
0x13bed	          0x8b45e0	             mov eax, dword [rbp - 0x20]	     10106	screen.c	FUNCTION_85	FOR_1	ELSE_12	WHILE_2
0x13bf0	          0x2b45d4	             sub eax, dword [rbp - 0x2c]	     10106	screen.c	FUNCTION_85	FOR_1	ELSE_12	WHILE_2
0x13bf3	            0x4898	                                    cdqe	     10106	screen.c	FUNCTION_85	FOR_1	ELSE_12	WHILE_2
0x13bf5	        0x48c1e002	                              shl rax, 2	     10106	screen.c	FUNCTION_85	FOR_1	ELSE_12	WHILE_2
0x13bf9	          0x4801c2	                            add rdx, rax	     10106	screen.c	FUNCTION_85	FOR_1	ELSE_12	WHILE_2
0x13bfc	    0x488b05000000	            mov rax, qword [0x04013c43] 	     10106	screen.c	FUNCTION_85	FOR_1	ELSE_12	WHILE_2
0x13c03	          0x8b4de0	             mov ecx, dword [rbp - 0x20]	     10106	screen.c	FUNCTION_85	FOR_1	ELSE_12	WHILE_2
0x13c06	          0x4863c9	                         movsxd rcx, ecx	     10106	screen.c	FUNCTION_85	FOR_1	ELSE_12	WHILE_2
0x13c09	        0x48c1e102	                              shl rcx, 2	     10106	screen.c	FUNCTION_85	FOR_1	ELSE_12	WHILE_2
0x13c0d	          0x4801c8	                            add rax, rcx	     10106	screen.c	FUNCTION_85	FOR_1	ELSE_12	WHILE_2
0x13c10	            0x8b00	                    mov eax, dword [rax]	     10106	screen.c	FUNCTION_85	FOR_1	ELSE_12	WHILE_2
0x13c12	            0x8902	                    mov dword [rdx], eax	     10106	screen.c	FUNCTION_85	FOR_1	ELSE_12	WHILE_2
0x13c14	    0x488b15000000	            mov rdx, qword [0x04013c5b] 	     10107	screen.c	FUNCTION_85	FOR_1	ELSE_12	WHILE_2
0x13c1b	          0x8b45e0	             mov eax, dword [rbp - 0x20]	     10107	screen.c	FUNCTION_85	FOR_1	ELSE_12	WHILE_2
0x13c1e	          0x2b45d4	             sub eax, dword [rbp - 0x2c]	     10107	screen.c	FUNCTION_85	FOR_1	ELSE_12	WHILE_2
0x13c21	            0x4898	                                    cdqe	     10107	screen.c	FUNCTION_85	FOR_1	ELSE_12	WHILE_2
0x13c23	          0x4801c2	                            add rdx, rax	     10107	screen.c	FUNCTION_85	FOR_1	ELSE_12	WHILE_2
0x13c26	    0x488b0d000000	            mov rcx, qword [0x04013c6d] 	     10107	screen.c	FUNCTION_85	FOR_1	ELSE_12	WHILE_2
0x13c2d	          0x8b45e0	             mov eax, dword [rbp - 0x20]	     10107	screen.c	FUNCTION_85	FOR_1	ELSE_12	WHILE_2
0x13c30	            0x4898	                                    cdqe	     10107	screen.c	FUNCTION_85	FOR_1	ELSE_12	WHILE_2
0x13c32	          0x4801c8	                            add rax, rcx	     10107	screen.c	FUNCTION_85	FOR_1	ELSE_12	WHILE_2
0x13c35	           0xfb600	                   movzx eax, byte [rax]	     10107	screen.c	FUNCTION_85	FOR_1	ELSE_12	WHILE_2
0x13c38	            0x8802	                      mov byte [rdx], al	     10107	screen.c	FUNCTION_85	FOR_1	ELSE_12	WHILE_2
0x13c3a	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	     10104	screen.c	FUNCTION_85	FOR_1	ELSE_12	WHILE_2
0x13c3d	           0x145e0	             add dword [rbp - 0x20], eax	     10104	screen.c	FUNCTION_85	FOR_1	ELSE_12	WHILE_2
0x13c40	          0x8b45d0	             mov eax, dword [rbp - 0x30]	     10104	screen.c	FUNCTION_85	FOR_1	ELSE_12	WHILE_2
0x13c43	          0x83e801	                              sub eax, 1	     10104	screen.c	FUNCTION_85	FOR_1	ELSE_12	WHILE_2
0x13c46	          0x3945e0	            cmp dword [rbp - 0x20], eax 	     10104	screen.c	FUNCTION_85	FOR_1	ELSE_12	WHILE_2
0x13c49	            0x7e9b	                           jle 0x4013c26	     10104	screen.c	FUNCTION_85	FOR_1	ELSE_12	WHILE_2
0x13c4b	    0x488b15000000	            mov rdx, qword [0x04013c92] 	     10109	screen.c	FUNCTION_85	FOR_1	ELSE_12
0x13c52	          0x8b45e0	             mov eax, dword [rbp - 0x20]	     10109	screen.c	FUNCTION_85	FOR_1	ELSE_12
0x13c55	          0x2b45d4	             sub eax, dword [rbp - 0x2c]	     10109	screen.c	FUNCTION_85	FOR_1	ELSE_12
0x13c58	            0x4898	                                    cdqe	     10109	screen.c	FUNCTION_85	FOR_1	ELSE_12
0x13c5a	        0x48c1e002	                              shl rax, 2	     10109	screen.c	FUNCTION_85	FOR_1	ELSE_12
0x13c5e	          0x4801c2	                            add rdx, rax	     10109	screen.c	FUNCTION_85	FOR_1	ELSE_12
0x13c61	          0x8b45fc	                mov eax, dword [rbp - 4]	     10109	screen.c	FUNCTION_85	FOR_1	ELSE_12
0x13c64	            0x8902	                    mov dword [rdx], eax	     10109	screen.c	FUNCTION_85	FOR_1	ELSE_12
0x13c66	    0x488b15000000	            mov rdx, qword [0x04013cad] 	     10110	screen.c	FUNCTION_85	FOR_1	ELSE_12
0x13c6d	          0x8b45e0	             mov eax, dword [rbp - 0x20]	     10110	screen.c	FUNCTION_85	FOR_1	ELSE_12
0x13c70	          0x2b45d4	             sub eax, dword [rbp - 0x2c]	     10110	screen.c	FUNCTION_85	FOR_1	ELSE_12
0x13c73	            0x4898	                                    cdqe	     10110	screen.c	FUNCTION_85	FOR_1	ELSE_12
0x13c75	          0x4801d0	                            add rax, rdx	     10110	screen.c	FUNCTION_85	FOR_1	ELSE_12
0x13c78	          0xc60000	                       mov byte [rax], 0	     10110	screen.c	FUNCTION_85	FOR_1	ELSE_12
0x13c7b	      0xbf00000000	                              mov edi, 0	     10111	screen.c	FUNCTION_85	FOR_1	ELSE_12	IF_14	CALL_12
0x13c80	      0xe800000000	                          call 0x4013cc5	     10111	screen.c	FUNCTION_85	FOR_1	ELSE_12	IF_14	CALL_12
0x13c85	            0x85c0	                           test eax, eax	     10111	screen.c	FUNCTION_85	FOR_1	ELSE_12	IF_14	CALL_12
0x13c87	            0x741a	                            je 0x4013ce3	     10111	screen.c	FUNCTION_85	FOR_1	ELSE_12	IF_14	CALL_12
0x13c89	    0x488b05000000	            mov rax, qword [0x04013cd0] 	     10112	screen.c	FUNCTION_85	FOR_1	ELSE_12	CALL_13
0x13c90	            0x89c1	                            mov ecx, eax	     10112	screen.c	FUNCTION_85	FOR_1	ELSE_12	CALL_13
0x13c92	          0x8b55c8	             mov edx, dword [rbp - 0x38]	     10112	screen.c	FUNCTION_85	FOR_1	ELSE_12	CALL_13
0x13c95	          0x8b45fc	                mov eax, dword [rbp - 4]	     10112	screen.c	FUNCTION_85	FOR_1	ELSE_12	CALL_13
0x13c98	            0x89ce	                            mov esi, ecx	     10112	screen.c	FUNCTION_85	FOR_1	ELSE_12	CALL_13
0x13c9a	            0x89c7	                            mov edi, eax	     10112	screen.c	FUNCTION_85	FOR_1	ELSE_12	CALL_13
0x13c9c	      0xe869e5ffff	                      call sym.lineclear	     10112	screen.c	FUNCTION_85	FOR_1	ELSE_12	CALL_13
0x13ca1	            0xeb15	                           jmp 0x4013cf8	     10112	screen.c	FUNCTION_85	FOR_1	ELSE_12	CALL_13
0x13ca3	    0x488b05000000	            mov rax, qword [0x04013cea] 	     10114	screen.c	FUNCTION_85	FOR_1	ELSE_12	CALL_14
0x13caa	            0x89c2	                            mov edx, eax	     10114	screen.c	FUNCTION_85	FOR_1	ELSE_12	CALL_14
0x13cac	          0x8b45fc	                mov eax, dword [rbp - 4]	     10114	screen.c	FUNCTION_85	FOR_1	ELSE_12	CALL_14
0x13caf	            0x89d6	                            mov esi, edx	     10114	screen.c	FUNCTION_85	FOR_1	ELSE_12	CALL_14
0x13cb1	            0x89c7	                            mov edi, eax	     10114	screen.c	FUNCTION_85	FOR_1	ELSE_12	CALL_14
0x13cb3	      0xe8e3e5ffff	                    call sym.lineinvalid	     10114	screen.c	FUNCTION_85	FOR_1	ELSE_12	CALL_14
0x13cb8	        0x8345e401	               add dword [rbp - 0x1c], 1	     10083	screen.c	FUNCTION_85	FOR_1
0x13cbc	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	     10083	screen.c	FUNCTION_85	FOR_1
0x13cbf	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	     10083	screen.c	FUNCTION_85	FOR_1
0x13cc2	     0xf8c02feffff	                            jl 0x4013b0a	     10083	screen.c	FUNCTION_85	FOR_1
0x13cc8	    0x8b0500000000	            mov eax, dword [0x04013d0e] 	     10118	screen.c	FUNCTION_85	IF_15
0x13cce	          0x3b45c8	             cmp eax, dword [rbp - 0x38]	     10118	screen.c	FUNCTION_85	IF_15
0x13cd1	            0x7405	                            je 0x4013d18	     10118	screen.c	FUNCTION_85	IF_15
0x13cd3	      0xe800000000	                          call 0x4013d18	     10119	screen.c	FUNCTION_85	CALL_15
0x13cd8	        0x837dc800	               cmp dword [rbp - 0x38], 0	     10120	screen.c	FUNCTION_85	IF_16
0x13cdc	            0x740a	                            je 0x4013d28	     10120	screen.c	FUNCTION_85	IF_16
0x13cde	          0x8b45c8	             mov eax, dword [rbp - 0x38]	     10121	screen.c	FUNCTION_85	CALL_16
0x13ce1	            0x89c7	                            mov edi, eax	     10121	screen.c	FUNCTION_85	CALL_16
0x13ce3	      0xe87cc4ffff	         call sym.screen_start_highlight	     10121	screen.c	FUNCTION_85	CALL_16
0x13ce8	        0x837df009	               cmp dword [rbp - 0x10], 9	     10124	screen.c	FUNCTION_85	IF_17
0x13cec	            0x7518	                           jne 0x4013d46	     10124	screen.c	FUNCTION_85	IF_17
0x13cee	          0x8b4dd0	             mov ecx, dword [rbp - 0x30]	     10125	screen.c	FUNCTION_85	CALL_17
0x13cf1	          0x8b45d8	             mov eax, dword [rbp - 0x28]	     10125	screen.c	FUNCTION_85	CALL_17
0x13cf4	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	     10125	screen.c	FUNCTION_85	CALL_17
0x13cf8	            0x89ce	                            mov esi, ecx	     10125	screen.c	FUNCTION_85	CALL_17
0x13cfa	            0x89c7	                            mov edi, eax	     10125	screen.c	FUNCTION_85	CALL_17
0x13cfc	      0xe888cfffff	                   call sym.redraw_block	     10125	screen.c	FUNCTION_85	CALL_17
0x13d01	      0xe9ed000000	                           jmp 0x4013e33	     10125	screen.c	FUNCTION_85	CALL_17
0x13d06	        0x837df008	               cmp dword [rbp - 0x10], 8	     10126	screen.c	FUNCTION_85	ELSE_14	IF_18
0x13d0a	            0x7528	                           jne 0x4013d74	     10126	screen.c	FUNCTION_85	ELSE_14	IF_18
0x13d0c	          0x8b45e8	             mov eax, dword [rbp - 0x18]	     10128	screen.c	FUNCTION_85	ELSE_14	IF_18	CALL_18
0x13d0f	      0xbe00000000	                              mov esi, 0	     10128	screen.c	FUNCTION_85	ELSE_14	IF_18	CALL_18
0x13d14	            0x89c7	                            mov edi, eax	     10128	screen.c	FUNCTION_85	ELSE_14	IF_18	CALL_18
0x13d16	      0xe800000000	                          call 0x4013d5b	     10128	screen.c	FUNCTION_85	ELSE_14	IF_18	CALL_18
0x13d1b	    0x488b05000000	            mov rax, qword [0x04013d62] 	     10129	screen.c	FUNCTION_85	ELSE_14	IF_18	CALL_19
0x13d22	          0x4889c7	                            mov rdi, rax	     10129	screen.c	FUNCTION_85	ELSE_14	IF_18	CALL_19
0x13d25	      0xe800000000	                          call 0x4013d6a	     10129	screen.c	FUNCTION_85	ELSE_14	IF_18	CALL_19
0x13d2a	      0xe800000000	                          call 0x4013d6f	     10130	screen.c	FUNCTION_85	ELSE_14	IF_18	CALL_20
0x13d2f	      0xe9bf000000	                           jmp 0x4013e33	     10130	screen.c	FUNCTION_85	ELSE_14	IF_18	CALL_20
0x13d34	        0x837df002	               cmp dword [rbp - 0x10], 2	     10132	screen.c	FUNCTION_85	ELSE_15	IF_19
0x13d38	            0x7523	                           jne 0x4013d9d	     10132	screen.c	FUNCTION_85	ELSE_15	IF_19
0x13d3a	          0x8b45e8	             mov eax, dword [rbp - 0x18]	     10134	screen.c	FUNCTION_85	ELSE_15	IF_19	CALL_21
0x13d3d	      0xbe00000000	                              mov esi, 0	     10134	screen.c	FUNCTION_85	ELSE_15	IF_19	CALL_21
0x13d42	            0x89c7	                            mov edi, eax	     10134	screen.c	FUNCTION_85	ELSE_15	IF_19	CALL_21
0x13d44	      0xe800000000	                          call 0x4013d89	     10134	screen.c	FUNCTION_85	ELSE_15	IF_19	CALL_21
0x13d49	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	     10135	screen.c	FUNCTION_85	ELSE_15	IF_19	CALL_22
0x13d4c	            0x89c7	                            mov edi, eax	     10135	screen.c	FUNCTION_85	ELSE_15	IF_19	CALL_22
0x13d4e	      0xe800000000	                          call 0x4013d93	     10135	screen.c	FUNCTION_85	ELSE_15	IF_19	CALL_22
0x13d53	      0xe800000000	                          call 0x4013d98	     10136	screen.c	FUNCTION_85	ELSE_15	IF_19	CALL_23
0x13d58	      0xe996000000	                           jmp 0x4013e33	     10136	screen.c	FUNCTION_85	ELSE_15	IF_19	CALL_23
0x13d5d	        0x837df007	               cmp dword [rbp - 0x10], 7	     10143	screen.c	FUNCTION_85	ELSE_16	IF_20
0x13d61	            0x7530	                           jne 0x4013dd3	     10143	screen.c	FUNCTION_85	ELSE_16	IF_20
0x13d63	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     10145	screen.c	FUNCTION_85	ELSE_16	IF_20	CALL_24
0x13d66	          0x83e801	                              sub eax, 1	     10145	screen.c	FUNCTION_85	ELSE_16	IF_20	CALL_24
0x13d69	      0xbe00000000	                              mov esi, 0	     10145	screen.c	FUNCTION_85	ELSE_16	IF_20	CALL_24
0x13d6e	            0x89c7	                            mov edi, eax	     10145	screen.c	FUNCTION_85	ELSE_16	IF_20	CALL_24
0x13d70	      0xe800000000	                          call 0x4013db5	     10145	screen.c	FUNCTION_85	ELSE_16	IF_20	CALL_24
0x13d75	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	     10146	screen.c	FUNCTION_85	ELSE_16	IF_20	FOR_2
0x13d78	          0x8945e4	             mov dword [rbp - 0x1c], eax	     10146	screen.c	FUNCTION_85	ELSE_16	IF_20	FOR_2
0x13d7b	            0xeb0a	                           jmp 0x4013dc7	     10146	screen.c	FUNCTION_85	ELSE_16	IF_20	FOR_2
0x13d7d	      0xbf0a000000	                            mov edi, 0xa	     10147	screen.c	FUNCTION_85	ELSE_16	IF_20	CALL_25
0x13d82	      0xe800000000	                          call 0x4013dc7	     10147	screen.c	FUNCTION_85	ELSE_16	IF_20	CALL_25
0x13d87	        0x836de401	               sub dword [rbp - 0x1c], 1	     10146	screen.c	FUNCTION_85	ELSE_16	IF_20	FOR_2
0x13d8b	        0x837de400	               cmp dword [rbp - 0x1c], 0	     10146	screen.c	FUNCTION_85	ELSE_16	IF_20	FOR_2
0x13d8f	            0x79ec	                           jns 0x4013dbd	     10146	screen.c	FUNCTION_85	ELSE_16	IF_20	FOR_2
0x13d91	            0xeb60	                           jmp 0x4013e33	     10146	screen.c	FUNCTION_85	ELSE_16	IF_20	FOR_2
0x13d93	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	     10151	screen.c	FUNCTION_85	ELSE_17	FOR_3
0x13d96	          0x8945e4	             mov dword [rbp - 0x1c], eax	     10151	screen.c	FUNCTION_85	ELSE_17	FOR_3
0x13d99	            0xeb4e	                           jmp 0x4013e29	     10151	screen.c	FUNCTION_85	ELSE_17	FOR_3
0x13d9b	        0x837df005	               cmp dword [rbp - 0x10], 5	     10153	screen.c	FUNCTION_85	ELSE_17	FOR_3	IF_21
0x13d9f	            0x7520	                           jne 0x4013e01	     10153	screen.c	FUNCTION_85	ELSE_17	FOR_3	IF_21
0x13da1	          0x8b45e8	             mov eax, dword [rbp - 0x18]	     10155	screen.c	FUNCTION_85	ELSE_17	FOR_3	IF_21	CALL_26
0x13da4	      0xbe00000000	                              mov esi, 0	     10155	screen.c	FUNCTION_85	ELSE_17	FOR_3	IF_21	CALL_26
0x13da9	            0x89c7	                            mov edi, eax	     10155	screen.c	FUNCTION_85	ELSE_17	FOR_3	IF_21	CALL_26
0x13dab	      0xe800000000	                          call 0x4013df0	     10155	screen.c	FUNCTION_85	ELSE_17	FOR_3	IF_21	CALL_26
0x13db0	    0x488b05000000	            mov rax, qword [0x04013df7] 	     10156	screen.c	FUNCTION_85	ELSE_17	FOR_3	IF_21	CALL_27
0x13db7	          0x4889c7	                            mov rdi, rax	     10156	screen.c	FUNCTION_85	ELSE_17	FOR_3	IF_21	CALL_27
0x13dba	      0xe800000000	                          call 0x4013dff	     10156	screen.c	FUNCTION_85	ELSE_17	FOR_3	IF_21	CALL_27
0x13dbf	            0xeb23	                           jmp 0x4013e24	     10156	screen.c	FUNCTION_85	ELSE_17	FOR_3	IF_21	CALL_27
0x13dc1	          0x8b55e8	             mov edx, dword [rbp - 0x18]	     10160	screen.c	FUNCTION_85	ELSE_17	FOR_3	ELSE_18	CALL_28
0x13dc4	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	     10160	screen.c	FUNCTION_85	ELSE_17	FOR_3	ELSE_18	CALL_28
0x13dc7	             0x1d0	                            add eax, edx	     10160	screen.c	FUNCTION_85	ELSE_17	FOR_3	ELSE_18	CALL_28
0x13dc9	      0xbe00000000	                              mov esi, 0	     10160	screen.c	FUNCTION_85	ELSE_17	FOR_3	ELSE_18	CALL_28
0x13dce	            0x89c7	                            mov edi, eax	     10160	screen.c	FUNCTION_85	ELSE_17	FOR_3	ELSE_18	CALL_28
0x13dd0	      0xe800000000	                          call 0x4013e15	     10160	screen.c	FUNCTION_85	ELSE_17	FOR_3	ELSE_18	CALL_28
0x13dd5	    0x488b05000000	            mov rax, qword [0x04013e1c] 	     10161	screen.c	FUNCTION_85	ELSE_17	FOR_3	ELSE_18	CALL_29
0x13ddc	          0x4889c7	                            mov rdi, rax	     10161	screen.c	FUNCTION_85	ELSE_17	FOR_3	ELSE_18	CALL_29
0x13ddf	      0xe800000000	                          call 0x4013e24	     10161	screen.c	FUNCTION_85	ELSE_17	FOR_3	ELSE_18	CALL_29
0x13de4	      0xe800000000	                          call 0x4013e29	     10163	screen.c	FUNCTION_85	ELSE_17	FOR_3	CALL_30
0x13de9	        0x836de401	               sub dword [rbp - 0x1c], 1	     10151	screen.c	FUNCTION_85	ELSE_17	FOR_3
0x13ded	        0x837de400	               cmp dword [rbp - 0x1c], 0	     10151	screen.c	FUNCTION_85	ELSE_17	FOR_3
0x13df1	            0x79a8	                           jns 0x4013ddb	     10151	screen.c	FUNCTION_85	ELSE_17	FOR_3
0x13df3	    0x488b05000000	            mov rax, qword [0x04013e3a] 	     10171	screen.c	FUNCTION_85	IF_22
0x13dfa	           0xfb600	                   movzx eax, byte [rax]	     10171	screen.c	FUNCTION_85	IF_22
0x13dfd	            0x84c0	                             test al, al	     10171	screen.c	FUNCTION_85	IF_22
0x13dff	            0x7444	                            je 0x4013e85	     10171	screen.c	FUNCTION_85	IF_22
0x13e01	        0x837df005	               cmp dword [rbp - 0x10], 5	     10171	screen.c	FUNCTION_85	IF_22
0x13e05	            0x7406	                            je 0x4013e4d	     10171	screen.c	FUNCTION_85	IF_22
0x13e07	        0x837df002	               cmp dword [rbp - 0x10], 2	     10171	screen.c	FUNCTION_85	IF_22
0x13e0b	            0x7538	                           jne 0x4013e85	     10171	screen.c	FUNCTION_85	IF_22
0x13e0d	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	     10173	screen.c	FUNCTION_85	IF_22	FOR_4
0x13e10	          0x8945e4	             mov dword [rbp - 0x1c], eax	     10173	screen.c	FUNCTION_85	IF_22	FOR_4
0x13e13	            0xeb2a	                           jmp 0x4013e7f	     10173	screen.c	FUNCTION_85	IF_22	FOR_4
0x13e15	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     10175	screen.c	FUNCTION_85	IF_22	FOR_4	CALL_31
0x13e18	          0x2b45e4	             sub eax, dword [rbp - 0x1c]	     10175	screen.c	FUNCTION_85	IF_22	FOR_4	CALL_31
0x13e1b	      0xbe00000000	                              mov esi, 0	     10175	screen.c	FUNCTION_85	IF_22	FOR_4	CALL_31
0x13e20	            0x89c7	                            mov edi, eax	     10175	screen.c	FUNCTION_85	IF_22	FOR_4	CALL_31
0x13e22	      0xe800000000	                          call 0x4013e67	     10175	screen.c	FUNCTION_85	IF_22	FOR_4	CALL_31
0x13e27	    0x488b05000000	            mov rax, qword [0x04013e6e] 	     10176	screen.c	FUNCTION_85	IF_22	FOR_4	CALL_32
0x13e2e	          0x4889c7	                            mov rdi, rax	     10176	screen.c	FUNCTION_85	IF_22	FOR_4	CALL_32
0x13e31	      0xe800000000	                          call 0x4013e76	     10176	screen.c	FUNCTION_85	IF_22	FOR_4	CALL_32
0x13e36	      0xe800000000	                          call 0x4013e7b	     10177	screen.c	FUNCTION_85	IF_22	FOR_4	CALL_33
0x13e3b	        0x836de401	               sub dword [rbp - 0x1c], 1	     10173	screen.c	FUNCTION_85	IF_22	FOR_4
0x13e3f	        0x837de400	               cmp dword [rbp - 0x1c], 0	     10173	screen.c	FUNCTION_85	IF_22	FOR_4
0x13e43	            0x7fd0	                            jg 0x4013e55	     10173	screen.c	FUNCTION_85	IF_22	FOR_4
0x13e45	      0xb801000000	                              mov eax, 1	     10187	screen.c	FUNCTION_85
0x13e4a	              0xc9	                                   leave	     10188	screen.c	FUNCTION_85
0x13e4b	              0xc3	                                     ret	     10188	screen.c	FUNCTION_85
char_needs_redraw	DO,0:functions,0:CALL,2:ELSE,0:IF,1:WHILE,0:FOR,0:SWITCH,0	154
0xc10a	              0x55	                                push rbp	      5994	screen.c	FUNCTION_30
0xc10b	          0x4889e5	                            mov rbp, rsp	      5994	screen.c	FUNCTION_30
0xc10e	        0x4883ec10	                           sub rsp, 0x10	      5994	screen.c	FUNCTION_30
0xc112	          0x897dfc	                mov dword [rbp - 4], edi	      5994	screen.c	FUNCTION_30
0xc115	          0x8975f8	                mov dword [rbp - 8], esi	      5994	screen.c	FUNCTION_30
0xc118	          0x8955f4	              mov dword [rbp - 0xc], edx	      5994	screen.c	FUNCTION_30
0xc11b	        0x837df400	                cmp dword [rbp - 0xc], 0	      5995	screen.c	FUNCTION_30	IF_1
0xc11f	     0xf8ef8010000	                           jle 0x400c35d	      5995	screen.c	FUNCTION_30	IF_1
0xc125	    0x488b15000000	            mov rdx, qword [0x0400c16c] 	      5996	screen.c	FUNCTION_30	IF_1
0xc12c	          0x8b45fc	                mov eax, dword [rbp - 4]	      5996	screen.c	FUNCTION_30	IF_1
0xc12f	            0x4898	                                    cdqe	      5996	screen.c	FUNCTION_30	IF_1
0xc131	          0x4801d0	                            add rax, rdx	      5996	screen.c	FUNCTION_30	IF_1
0xc134	           0xfb610	                   movzx edx, byte [rax]	      5996	screen.c	FUNCTION_30	IF_1
0xc137	    0x488b0d000000	            mov rcx, qword [0x0400c17e] 	      5996	screen.c	FUNCTION_30	IF_1
0xc13e	          0x8b45f8	                mov eax, dword [rbp - 8]	      5996	screen.c	FUNCTION_30	IF_1
0xc141	            0x4898	                                    cdqe	      5996	screen.c	FUNCTION_30	IF_1
0xc143	          0x4801c8	                            add rax, rcx	      5996	screen.c	FUNCTION_30	IF_1
0xc146	           0xfb600	                   movzx eax, byte [rax]	      5996	screen.c	FUNCTION_30	IF_1
0xc149	            0x38c2	                              cmp dl, al	      5996	screen.c	FUNCTION_30	IF_1
0xc14b	     0xf85c5010000	                           jne 0x400c356	      5996	screen.c	FUNCTION_30	IF_1
0xc151	    0x488b05000000	            mov rax, qword [0x0400c198] 	      5997	screen.c	FUNCTION_30	IF_1
0xc158	          0x8b55fc	                mov edx, dword [rbp - 4]	      5997	screen.c	FUNCTION_30	IF_1
0xc15b	          0x4863d2	                         movsxd rdx, edx	      5997	screen.c	FUNCTION_30	IF_1
0xc15e	          0x4801d2	                            add rdx, rdx	      5997	screen.c	FUNCTION_30	IF_1
0xc161	          0x4801d0	                            add rax, rdx	      5997	screen.c	FUNCTION_30	IF_1
0xc164	           0xfb710	                   movzx edx, word [rax]	      5997	screen.c	FUNCTION_30	IF_1
0xc167	    0x488b05000000	            mov rax, qword [0x0400c1ae] 	      5997	screen.c	FUNCTION_30	IF_1
0xc16e	          0x8b4df8	                mov ecx, dword [rbp - 8]	      5997	screen.c	FUNCTION_30	IF_1
0xc171	          0x4863c9	                         movsxd rcx, ecx	      5997	screen.c	FUNCTION_30	IF_1
0xc174	          0x4801c9	                            add rcx, rcx	      5997	screen.c	FUNCTION_30	IF_1
0xc177	          0x4801c8	                            add rax, rcx	      5997	screen.c	FUNCTION_30	IF_1
0xc17a	           0xfb700	                   movzx eax, word [rax]	      5997	screen.c	FUNCTION_30	IF_1
0xc17d	          0x6639c2	                              cmp dx, ax	      5997	screen.c	FUNCTION_30	IF_1
0xc180	     0xf8590010000	                           jne 0x400c356	      5997	screen.c	FUNCTION_30	IF_1
0xc186	    0x8b0500000000	            mov eax, dword [0x0400c1cc] 	      6000	screen.c	FUNCTION_30	IF_1
0xc18c	            0x85c0	                           test eax, eax	      6000	screen.c	FUNCTION_30	IF_1
0xc18e	     0xf84c6000000	                            je 0x400c29a	      6000	screen.c	FUNCTION_30	IF_1
0xc194	    0x488b15000000	            mov rdx, qword [0x0400c1db] 	      6001	screen.c	FUNCTION_30	IF_1	CALL_1
0xc19b	          0x8b45fc	                mov eax, dword [rbp - 4]	      6001	screen.c	FUNCTION_30	IF_1	CALL_1
0xc19e	            0x4898	                                    cdqe	      6001	screen.c	FUNCTION_30	IF_1	CALL_1
0xc1a0	          0x4801d0	                            add rax, rdx	      6001	screen.c	FUNCTION_30	IF_1	CALL_1
0xc1a3	           0xfb600	                   movzx eax, byte [rax]	      6001	screen.c	FUNCTION_30	IF_1	CALL_1
0xc1a6	           0xfb6c0	                           movzx eax, al	      6001	screen.c	FUNCTION_30	IF_1	CALL_1
0xc1a9	            0x4898	                                    cdqe	      6001	screen.c	FUNCTION_30	IF_1	CALL_1
0xc1ab	     0xfb680000000	                   movzx eax, byte [rax]	      6001	screen.c	FUNCTION_30	IF_1	CALL_1
0xc1b2	            0x3c01	                               cmp al, 1	      6001	screen.c	FUNCTION_30	IF_1	CALL_1
0xc1b4	     0xf8ea0000000	                           jle 0x400c29a	      6001	screen.c	FUNCTION_30	IF_1	CALL_1
0xc1ba	    0x8b0500000000	            mov eax, dword [0x0400c200] 	      6002	screen.c	FUNCTION_30	IF_1
0xc1c0	      0x3dcc260000	                         cmp eax, 0x26cc	      5995	screen.c	FUNCTION_30	IF_1
0xc1c5	            0x7544	                           jne 0x400c24b	      5995	screen.c	FUNCTION_30	IF_1
0xc1c7	    0x488b15000000	            mov rdx, qword [0x0400c20e] 	      6002	screen.c	FUNCTION_30	IF_1
0xc1ce	          0x8b45fc	                mov eax, dword [rbp - 4]	      6002	screen.c	FUNCTION_30	IF_1
0xc1d1	            0x4898	                                    cdqe	      6002	screen.c	FUNCTION_30	IF_1
0xc1d3	          0x4801d0	                            add rax, rdx	      6002	screen.c	FUNCTION_30	IF_1
0xc1d6	           0xfb600	                   movzx eax, byte [rax]	      6002	screen.c	FUNCTION_30	IF_1
0xc1d9	            0x3c8e	                            cmp al, 0x8e	      6002	screen.c	FUNCTION_30	IF_1
0xc1db	            0x752e	                           jne 0x400c24b	      6002	screen.c	FUNCTION_30	IF_1
0xc1dd	    0x488b15000000	            mov rdx, qword [0x0400c224] 	      6003	screen.c	FUNCTION_30	IF_1
0xc1e4	          0x8b45fc	                mov eax, dword [rbp - 4]	      6003	screen.c	FUNCTION_30	IF_1
0xc1e7	            0x4898	                                    cdqe	      6003	screen.c	FUNCTION_30	IF_1
0xc1e9	          0x4801d0	                            add rax, rdx	      6003	screen.c	FUNCTION_30	IF_1
0xc1ec	           0xfb610	                   movzx edx, byte [rax]	      6003	screen.c	FUNCTION_30	IF_1
0xc1ef	    0x488b0d000000	            mov rcx, qword [0x0400c236] 	      6003	screen.c	FUNCTION_30	IF_1
0xc1f6	          0x8b45f8	                mov eax, dword [rbp - 8]	      6003	screen.c	FUNCTION_30	IF_1
0xc1f9	            0x4898	                                    cdqe	      6003	screen.c	FUNCTION_30	IF_1
0xc1fb	          0x4801c8	                            add rax, rcx	      6003	screen.c	FUNCTION_30	IF_1
0xc1fe	           0xfb600	                   movzx eax, byte [rax]	      6003	screen.c	FUNCTION_30	IF_1
0xc201	            0x38c2	                              cmp dl, al	      6002	screen.c	FUNCTION_30	IF_1
0xc203	     0xf850d010000	                           jne 0x400c356	      6002	screen.c	FUNCTION_30	IF_1
0xc209	            0xeb4f	                           jmp 0x400c29a	      6002	screen.c	FUNCTION_30	IF_1
0xc20b	        0x837df401	                cmp dword [rbp - 0xc], 1	      6004	screen.c	FUNCTION_30	IF_1
0xc20f	            0x7e39	                           jle 0x400c28a	      6004	screen.c	FUNCTION_30	IF_1
0xc211	    0x488b05000000	            mov rax, qword [0x0400c258] 	      6004	screen.c	FUNCTION_30	IF_1
0xc218	          0x8b55fc	                mov edx, dword [rbp - 4]	      6004	screen.c	FUNCTION_30	IF_1
0xc21b	          0x4863d2	                         movsxd rdx, edx	      6004	screen.c	FUNCTION_30	IF_1
0xc21e	        0x4883c201	                              add rdx, 1	      6004	screen.c	FUNCTION_30	IF_1
0xc222	          0x4801d0	                            add rax, rdx	      6004	screen.c	FUNCTION_30	IF_1
0xc225	           0xfb610	                   movzx edx, byte [rax]	      6004	screen.c	FUNCTION_30	IF_1
0xc228	    0x488b05000000	            mov rax, qword [0x0400c26f] 	      6005	screen.c	FUNCTION_30	IF_1
0xc22f	          0x8b4df8	                mov ecx, dword [rbp - 8]	      6005	screen.c	FUNCTION_30	IF_1
0xc232	          0x4863c9	                         movsxd rcx, ecx	      6005	screen.c	FUNCTION_30	IF_1
0xc235	        0x4883c101	                              add rcx, 1	      6005	screen.c	FUNCTION_30	IF_1
0xc239	          0x4801c8	                            add rax, rcx	      6005	screen.c	FUNCTION_30	IF_1
0xc23c	           0xfb600	                   movzx eax, byte [rax]	      6005	screen.c	FUNCTION_30	IF_1
0xc23f	            0x38c2	                              cmp dl, al	      6004	screen.c	FUNCTION_30	IF_1
0xc241	            0x7407	                            je 0x400c28a	      6004	screen.c	FUNCTION_30	IF_1
0xc243	      0xb801000000	                              mov eax, 1	      6004	screen.c	FUNCTION_30	IF_1
0xc248	            0xeb05	                           jmp 0x400c28f	      6004	screen.c	FUNCTION_30	IF_1
0xc24a	      0xb800000000	                              mov eax, 0	      6004	screen.c	FUNCTION_30	IF_1
0xc24f	          0x83e001	                              and eax, 1	      6002	screen.c	FUNCTION_30	IF_1
0xc252	            0x84c0	                             test al, al	      6002	screen.c	FUNCTION_30	IF_1
0xc254	     0xf85bc000000	                           jne 0x400c356	      6002	screen.c	FUNCTION_30	IF_1
0xc25a	    0x8b0500000000	            mov eax, dword [0x0400c2a0] 	      6006	screen.c	FUNCTION_30	IF_1
0xc260	            0x85c0	                           test eax, eax	      6006	screen.c	FUNCTION_30	IF_1
0xc262	     0xf84b5000000	                            je 0x400c35d	      6006	screen.c	FUNCTION_30	IF_1
0xc268	    0x488b05000000	            mov rax, qword [0x0400c2af] 	      6007	screen.c	FUNCTION_30	IF_1
0xc26f	          0x8b55fc	                mov edx, dword [rbp - 4]	      6007	screen.c	FUNCTION_30	IF_1
0xc272	          0x4863d2	                         movsxd rdx, edx	      6007	screen.c	FUNCTION_30	IF_1
0xc275	        0x48c1e202	                              shl rdx, 2	      6007	screen.c	FUNCTION_30	IF_1
0xc279	          0x4801d0	                            add rax, rdx	      6007	screen.c	FUNCTION_30	IF_1
0xc27c	            0x8b10	                    mov edx, dword [rax]	      6007	screen.c	FUNCTION_30	IF_1
0xc27e	    0x488b05000000	            mov rax, qword [0x0400c2c5] 	      6007	screen.c	FUNCTION_30	IF_1
0xc285	          0x8b4df8	                mov ecx, dword [rbp - 8]	      6007	screen.c	FUNCTION_30	IF_1
0xc288	          0x4863c9	                         movsxd rcx, ecx	      6007	screen.c	FUNCTION_30	IF_1
0xc28b	        0x48c1e102	                              shl rcx, 2	      6007	screen.c	FUNCTION_30	IF_1
0xc28f	          0x4801c8	                            add rax, rcx	      6007	screen.c	FUNCTION_30	IF_1
0xc292	            0x8b00	                    mov eax, dword [rax]	      6007	screen.c	FUNCTION_30	IF_1
0xc294	            0x39c2	                            cmp edx, eax	      6007	screen.c	FUNCTION_30	IF_1
0xc296	            0x757e	                           jne 0x400c356	      6007	screen.c	FUNCTION_30	IF_1
0xc298	    0x488b05000000	            mov rax, qword [0x0400c2df] 	      6008	screen.c	FUNCTION_30	IF_1
0xc29f	          0x8b55fc	                mov edx, dword [rbp - 4]	      6008	screen.c	FUNCTION_30	IF_1
0xc2a2	          0x4863d2	                         movsxd rdx, edx	      6008	screen.c	FUNCTION_30	IF_1
0xc2a5	        0x48c1e202	                              shl rdx, 2	      6008	screen.c	FUNCTION_30	IF_1
0xc2a9	          0x4801d0	                            add rax, rdx	      6008	screen.c	FUNCTION_30	IF_1
0xc2ac	            0x8b00	                    mov eax, dword [rax]	      6008	screen.c	FUNCTION_30	IF_1
0xc2ae	            0x85c0	                           test eax, eax	      6008	screen.c	FUNCTION_30	IF_1
0xc2b0	            0x7413	                            je 0x400c305	      6008	screen.c	FUNCTION_30	IF_1
0xc2b2	          0x8b55f8	                mov edx, dword [rbp - 8]	      6009	screen.c	FUNCTION_30	IF_1	CALL_2
0xc2b5	          0x8b45fc	                mov eax, dword [rbp - 4]	      6009	screen.c	FUNCTION_30	IF_1	CALL_2
0xc2b8	            0x89d6	                            mov esi, edx	      6009	screen.c	FUNCTION_30	IF_1	CALL_2
0xc2ba	            0x89c7	                            mov edi, eax	      6009	screen.c	FUNCTION_30	IF_1	CALL_2
0xc2bc	      0xe8bafdffff	              call sym.comp_char_differs	      6009	screen.c	FUNCTION_30	IF_1	CALL_2
0xc2c1	            0x85c0	                           test eax, eax	      6009	screen.c	FUNCTION_30	IF_1	CALL_2
0xc2c3	            0x7551	                           jne 0x400c356	      6009	screen.c	FUNCTION_30	IF_1	CALL_2
0xc2c5	    0x488b05000000	            mov rax, qword [0x0400c30c] 	      6010	screen.c	FUNCTION_30	IF_1
0xc2cc	          0x8b4dfc	                mov ecx, dword [rbp - 4]	      6010	screen.c	FUNCTION_30	IF_1
0xc2cf	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      6010	screen.c	FUNCTION_30	IF_1
0xc2d2	             0x1ca	                            add edx, ecx	      6010	screen.c	FUNCTION_30	IF_1
0xc2d4	            0x89d1	                            mov ecx, edx	      6010	screen.c	FUNCTION_30	IF_1
0xc2d6	          0x8b55fc	                mov edx, dword [rbp - 4]	      6010	screen.c	FUNCTION_30	IF_1
0xc2d9	            0x89ce	                            mov esi, ecx	      6010	screen.c	FUNCTION_30	IF_1
0xc2db	            0x89d7	                            mov edi, edx	      6010	screen.c	FUNCTION_30	IF_1
0xc2dd	            0xffd0	                                call rax	      6010	screen.c	FUNCTION_30	IF_1
0xc2df	          0x83f801	                              cmp eax, 1	      6010	screen.c	FUNCTION_30	IF_1
0xc2e2	            0x7e39	                           jle 0x400c35d	      6010	screen.c	FUNCTION_30	IF_1
0xc2e4	    0x488b05000000	            mov rax, qword [0x0400c32b] 	      6011	screen.c	FUNCTION_30	IF_1
0xc2eb	          0x8b55fc	                mov edx, dword [rbp - 4]	      6011	screen.c	FUNCTION_30	IF_1
0xc2ee	          0x4863d2	                         movsxd rdx, edx	      6011	screen.c	FUNCTION_30	IF_1
0xc2f1	        0x4883c201	                              add rdx, 1	      6011	screen.c	FUNCTION_30	IF_1
0xc2f5	          0x4801d0	                            add rax, rdx	      6011	screen.c	FUNCTION_30	IF_1
0xc2f8	           0xfb610	                   movzx edx, byte [rax]	      6011	screen.c	FUNCTION_30	IF_1
0xc2fb	    0x488b05000000	            mov rax, qword [0x0400c342] 	      6012	screen.c	FUNCTION_30	IF_1
0xc302	          0x8b4df8	                mov ecx, dword [rbp - 8]	      6012	screen.c	FUNCTION_30	IF_1
0xc305	          0x4863c9	                         movsxd rcx, ecx	      6012	screen.c	FUNCTION_30	IF_1
0xc308	        0x4883c101	                              add rcx, 1	      6012	screen.c	FUNCTION_30	IF_1
0xc30c	          0x4801c8	                            add rax, rcx	      6012	screen.c	FUNCTION_30	IF_1
0xc30f	           0xfb600	                   movzx eax, byte [rax]	      6012	screen.c	FUNCTION_30	IF_1
0xc312	            0x38c2	                              cmp dl, al	      6011	screen.c	FUNCTION_30	IF_1
0xc314	            0x7407	                            je 0x400c35d	      6011	screen.c	FUNCTION_30	IF_1
0xc316	      0xb801000000	                              mov eax, 1	      6015	screen.c	FUNCTION_30	IF_1
0xc31b	            0xeb05	                           jmp 0x400c362	      6015	screen.c	FUNCTION_30	IF_1
0xc31d	      0xb800000000	                              mov eax, 0	      6016	screen.c	FUNCTION_30
0xc322	              0xc9	                                   leave	      6017	screen.c	FUNCTION_30
0xc323	              0xc3	                                     ret	      6017	screen.c	FUNCTION_30
screen_putchar	DO,0:functions,0:CALL,1:ELSE,1:IF,1:WHILE,0:FOR,0:SWITCH,0	38
0xea48	              0x55	                                push rbp	      7290	screen.c	FUNCTION_47
0xea49	          0x4889e5	                            mov rbp, rsp	      7290	screen.c	FUNCTION_47
0xea4c	        0x4883ec30	                           sub rsp, 0x30	      7290	screen.c	FUNCTION_47
0xea50	          0x897ddc	             mov dword [rbp - 0x24], edi	      7290	screen.c	FUNCTION_47
0xea53	          0x8975d8	             mov dword [rbp - 0x28], esi	      7290	screen.c	FUNCTION_47
0xea56	          0x8955d4	             mov dword [rbp - 0x2c], edx	      7290	screen.c	FUNCTION_47
0xea59	          0x894dd0	             mov dword [rbp - 0x30], ecx	      7290	screen.c	FUNCTION_47
0xea5c	    0x64488b042528	                mov rax, qword fs:[0x28]	      7290	screen.c	FUNCTION_47
0xea65	        0x488945f8	                mov qword [rbp - 8], rax	      7290	screen.c	FUNCTION_47
0xea69	            0x31c0	                            xor eax, eax	      7290	screen.c	FUNCTION_47
0xea6b	    0x8b0500000000	            mov eax, dword [0x0400eab1] 	      7294	screen.c	FUNCTION_47	IF_1
0xea71	            0x85c0	                           test eax, eax	      7294	screen.c	FUNCTION_47	IF_1
0xea73	            0x741e	                            je 0x400ead3	      7294	screen.c	FUNCTION_47	IF_1
0xea75	    0x488b05000000	            mov rax, qword [0x0400eabc] 	      7295	screen.c	FUNCTION_47	IF_1
0xea7c	        0x488d4de0	                   lea rcx, [rbp - 0x20]	      7295	screen.c	FUNCTION_47	IF_1
0xea80	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      7295	screen.c	FUNCTION_47	IF_1
0xea83	          0x4889ce	                            mov rsi, rcx	      7295	screen.c	FUNCTION_47	IF_1
0xea86	            0x89d7	                            mov edi, edx	      7295	screen.c	FUNCTION_47	IF_1
0xea88	            0xffd0	                                call rax	      7295	screen.c	FUNCTION_47	IF_1
0xea8a	            0x4898	                                    cdqe	      7295	screen.c	FUNCTION_47	IF_1
0xea8c	      0xc64405e000	          mov byte [rbp + rax - 0x20], 0	      7295	screen.c	FUNCTION_47	IF_1
0xea91	            0xeb0a	                           jmp 0x400eadd	      7295	screen.c	FUNCTION_47	IF_1
0xea93	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      7299	screen.c	FUNCTION_47	ELSE_1
0xea96	          0x8845e0	               mov byte [rbp - 0x20], al	      7299	screen.c	FUNCTION_47	ELSE_1
0xea99	        0xc645e100	                mov byte [rbp - 0x1f], 0	      7300	screen.c	FUNCTION_47	ELSE_1
0xea9d	          0x8b4dd0	             mov ecx, dword [rbp - 0x30]	      7302	screen.c	FUNCTION_47	CALL_1
0xeaa0	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      7302	screen.c	FUNCTION_47	CALL_1
0xeaa3	          0x8b75d8	             mov esi, dword [rbp - 0x28]	      7302	screen.c	FUNCTION_47	CALL_1
0xeaa6	        0x488d45e0	                   lea rax, [rbp - 0x20]	      7302	screen.c	FUNCTION_47	CALL_1
0xeaaa	          0x4889c7	                            mov rdi, rax	      7302	screen.c	FUNCTION_47	CALL_1
0xeaad	      0xe800000000	                          call 0x400eaf2	      7302	screen.c	FUNCTION_47	CALL_1
0xeab2	              0x90	                                     nop	      7303	screen.c	FUNCTION_47
0xeab3	        0x488b45f8	                mov rax, qword [rbp - 8]	      7303	screen.c	FUNCTION_47
0xeab7	    0x644833042528	                xor rax, qword fs:[0x28]	      7303	screen.c	FUNCTION_47
0xeac0	            0x7405	                            je 0x400eb07	      7303	screen.c	FUNCTION_47
0xeac2	      0xe800000000	                          call 0x400eb07	      7303	screen.c	FUNCTION_47
0xeac7	              0xc9	                                   leave	      7303	screen.c	FUNCTION_47
0xeac8	              0xc3	                                     ret	      7303	screen.c	FUNCTION_47
update_debug_sign	DO,0:functions,2:CALL,2:ELSE,0:IF,1:WHILE,0:FOR,0:SWITCH,0	114
0x1369	              0x55	                                push rbp	       970	screen.c	FUNCTION_18
0x136a	          0x4889e5	                            mov rbp, rsp	       970	screen.c	FUNCTION_18
0x136d	        0x4883ec20	                           sub rsp, 0x20	       970	screen.c	FUNCTION_18
0x1371	        0x48897de8	             mov qword [rbp - 0x18], rdi	       970	screen.c	FUNCTION_18
0x1375	        0x488975e0	             mov qword [rbp - 0x20], rsi	       970	screen.c	FUNCTION_18
0x1379	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       972	screen.c	FUNCTION_18
0x1380	    0xc70500000000	               mov dword [0x040013ca], 0	       975	screen.c	FUNCTION_18
0x138a	    0x488b05000000	            mov rax, qword [0x040013d1] 	       979	screen.c	FUNCTION_18
0x1391	        0x488945f8	                mov qword [rbp - 8], rax	       979	screen.c	FUNCTION_18
0x1395	      0xe9f7000000	                           jmp 0x40014d1	       979	screen.c	FUNCTION_18
0x139a	      0x48837de800	               cmp qword [rbp - 0x18], 0	       981	screen.c	FUNCTION_18	FUNCTION_1	IF_1
0x139f	     0xf84b7000000	                            je 0x400149c	       981	screen.c	FUNCTION_18	FUNCTION_1	IF_1
0x13a5	      0x48837de000	               cmp qword [rbp - 0x20], 0	       981	screen.c	FUNCTION_18	FUNCTION_1	IF_1
0x13aa	     0xf8eac000000	                           jle 0x400149c	       981	screen.c	FUNCTION_18	FUNCTION_1	IF_1
0x13b0	        0x488b45f8	                mov rax, qword [rbp - 8]	       983	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2
0x13b4	        0x488b4008	                mov rax, qword [rax + 8]	       983	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2
0x13b8	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       983	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2
0x13bc	     0xf85ad000000	                           jne 0x40014af	       983	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2
0x13c2	        0x488b45f8	                mov rax, qword [rbp - 8]	       983	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2
0x13c6	        0x488b4078	            mov rax, qword [rax + 0x78] 	       983	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2
0x13ca	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       983	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2
0x13ce	     0xf8f9b000000	                            jg 0x40014af	       983	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2
0x13d4	        0x488b45f8	                mov rax, qword [rbp - 8]	       984	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2
0x13d8	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	       984	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2
0x13df	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       984	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2
0x13e3	     0xf8e86000000	                           jle 0x40014af	       984	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2
0x13e9	        0x488b45f8	                mov rax, qword [rbp - 8]	       986	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2	IF_3
0x13ed	    0x488b80300100	           mov rax, qword [rax + 0x130] 	       986	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2	IF_3
0x13f4	          0x4885c0	                           test rax, rax	       986	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2	IF_3
0x13f7	            0x7411	                            je 0x400144a	       986	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2	IF_3
0x13f9	        0x488b45f8	                mov rax, qword [rbp - 8]	       986	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2	IF_3
0x13fd	    0x488b80300100	           mov rax, qword [rax + 0x130] 	       986	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2	IF_3
0x1404	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       986	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2	IF_3
0x1408	            0x7e0f	                           jle 0x4001459	       986	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2	IF_3
0x140a	        0x488b45f8	                mov rax, qword [rbp - 8]	       987	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2	IF_3
0x140e	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       987	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2	IF_3
0x1412	    0x488990300100	            mov qword [rax + 0x130], rdx	       987	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2	IF_3
0x1419	        0x488b45f8	                mov rax, qword [rbp - 8]	       988	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2	IF_4
0x141d	    0x488b80380100	           mov rax, qword [rax + 0x138] 	       988	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2	IF_4
0x1424	          0x4885c0	                           test rax, rax	       988	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2	IF_4
0x1427	            0x7411	                            je 0x400147a	       988	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2	IF_4
0x1429	        0x488b45f8	                mov rax, qword [rbp - 8]	       988	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2	IF_4
0x142d	    0x488b80380100	           mov rax, qword [rax + 0x138] 	       988	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2	IF_4
0x1434	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       988	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2	IF_4
0x1438	            0x7d0f	                           jge 0x4001489	       988	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2	IF_4
0x143a	        0x488b45f8	                mov rax, qword [rbp - 8]	       989	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2	IF_4
0x143e	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       989	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2	IF_4
0x1442	    0x488990380100	            mov qword [rax + 0x138], rdx	       989	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2	IF_4
0x1449	        0x488b45f8	                mov rax, qword [rbp - 8]	       990	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2	CALL_1
0x144d	      0xbe0a000000	                            mov esi, 0xa	       990	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2	CALL_1
0x1452	          0x4889c7	                            mov rdi, rax	       990	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2	CALL_1
0x1455	      0xe800000000	                          call 0x400149a	       990	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2	CALL_1
0x145a	            0xeb13	                           jmp 0x40014af	       983	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2
0x145c	        0x488b45f8	                mov rax, qword [rbp - 8]	       994	screen.c	FUNCTION_18	FUNCTION_1	CALL_2
0x1460	      0xbe0a000000	                            mov esi, 0xa	       994	screen.c	FUNCTION_18	FUNCTION_1	CALL_2
0x1465	          0x4889c7	                            mov rdi, rax	       994	screen.c	FUNCTION_18	FUNCTION_1	CALL_2
0x1468	      0xe800000000	                          call 0x40014ad	       994	screen.c	FUNCTION_18	FUNCTION_1	CALL_2
0x146d	            0xeb01	                           jmp 0x40014b0	       994	screen.c	FUNCTION_18	FUNCTION_1	CALL_2
0x146f	              0x90	                                     nop	       983	screen.c	FUNCTION_18	FUNCTION_1	IF_1	IF_2
0x1470	        0x488b45f8	                mov rax, qword [rbp - 8]	       995	screen.c	FUNCTION_18	FUNCTION_1	IF_5
0x1474	    0x8b8028010000	           mov eax, dword [rax + 0x128] 	       995	screen.c	FUNCTION_18	FUNCTION_1	IF_5
0x147a	            0x85c0	                           test eax, eax	       995	screen.c	FUNCTION_18	FUNCTION_1	IF_5
0x147c	            0x7407	                            je 0x40014c5	       995	screen.c	FUNCTION_18	FUNCTION_1	IF_5
0x147e	    0xc745f4010000	                mov dword [rbp - 0xc], 1	       996	screen.c	FUNCTION_18	FUNCTION_1	IF_5
0x1485	        0x488b45f8	                mov rax, qword [rbp - 8]	       979	screen.c	FUNCTION_18
0x1489	        0x488b4020	            mov rax, qword [rax + 0x20] 	       979	screen.c	FUNCTION_18
0x148d	        0x488945f8	                mov qword [rbp - 8], rax	       979	screen.c	FUNCTION_18
0x1491	      0x48837df800	                  cmp qword [rbp - 8], 0	       979	screen.c	FUNCTION_18
0x1496	     0xf85fefeffff	                           jne 0x40013da	       979	screen.c	FUNCTION_18
0x149c	        0x837df400	                cmp dword [rbp - 0xc], 0	      1002	screen.c	FUNCTION_18	IF_1
0x14a0	     0xf84a0000000	                            je 0x4001586	      1002	screen.c	FUNCTION_18	IF_1
0x14a6	    0x8b0500000000	            mov eax, dword [0x040014ec] 	      1002	screen.c	FUNCTION_18	IF_1
0x14ac	            0x85c0	                           test eax, eax	      1002	screen.c	FUNCTION_18	IF_1
0x14ae	     0xf8592000000	                           jne 0x4001586	      1002	screen.c	FUNCTION_18	IF_1
0x14b4	    0x8b0500000000	            mov eax, dword [0x040014fa] 	      1003	screen.c	FUNCTION_18	IF_1
0x14ba	      0x3d00030000	                          cmp eax, 0x300	      1003	screen.c	FUNCTION_18	IF_1
0x14bf	     0xf8481000000	                            je 0x4001586	      1003	screen.c	FUNCTION_18	IF_1
0x14c5	    0x8b0500000000	            mov eax, dword [0x0400150b] 	      1003	screen.c	FUNCTION_18	IF_1
0x14cb	      0x3d01020000	                          cmp eax, 0x201	      1003	screen.c	FUNCTION_18	IF_1
0x14d0	            0x7474	                            je 0x4001586	      1003	screen.c	FUNCTION_18	IF_1
0x14d2	    0x8b0500000000	            mov eax, dword [0x04001518] 	      1004	screen.c	FUNCTION_18	IF_1
0x14d8	            0x85c0	                           test eax, eax	      1004	screen.c	FUNCTION_18	IF_1
0x14da	            0x756a	                           jne 0x4001586	      1004	screen.c	FUNCTION_18	IF_1
0x14dc	    0x8b0500000000	            mov eax, dword [0x04001522] 	      1008	screen.c	FUNCTION_18	IF_1
0x14e2	            0x85c0	                           test eax, eax	      1008	screen.c	FUNCTION_18	IF_1
0x14e4	            0x7560	                           jne 0x4001586	      1008	screen.c	FUNCTION_18	IF_1
0x14e6	      0xe881fbffff	                 call sym.update_prepare	      1012	screen.c	FUNCTION_18	CALL_1
0x14eb	    0x488b05000000	            mov rax, qword [0x04001532] 	      1014	screen.c	FUNCTION_18
0x14f2	        0x488945f8	                mov qword [rbp - 8], rax	      1014	screen.c	FUNCTION_18
0x14f6	            0xeb40	                           jmp 0x4001578	      1014	screen.c	FUNCTION_18
0x14f8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1016	screen.c	FUNCTION_18	FUNCTION_2	IF_1
0x14fc	    0x8b8028010000	           mov eax, dword [rax + 0x128] 	      1016	screen.c	FUNCTION_18	FUNCTION_2	IF_1
0x1502	            0x85c0	                           test eax, eax	      1016	screen.c	FUNCTION_18	FUNCTION_2	IF_1
0x1504	            0x740c	                            je 0x4001552	      1016	screen.c	FUNCTION_18	FUNCTION_2	IF_1
0x1506	        0x488b45f8	                mov rax, qword [rbp - 8]	      1017	screen.c	FUNCTION_18	FUNCTION_2	CALL_1
0x150a	          0x4889c7	                            mov rdi, rax	      1017	screen.c	FUNCTION_18	FUNCTION_2	CALL_1
0x150d	      0xe837000000	                     call sym.win_update	      1017	screen.c	FUNCTION_18	FUNCTION_2	CALL_1
0x1512	        0x488b45f8	                mov rax, qword [rbp - 8]	      1018	screen.c	FUNCTION_18	FUNCTION_2	IF_2
0x1516	    0x8b8040010000	           mov eax, dword [rax + 0x140] 	      1018	screen.c	FUNCTION_18	FUNCTION_2	IF_2
0x151c	            0x85c0	                           test eax, eax	      1018	screen.c	FUNCTION_18	FUNCTION_2	IF_2
0x151e	            0x740c	                            je 0x400156c	      1018	screen.c	FUNCTION_18	FUNCTION_2	IF_2
0x1520	        0x488b45f8	                mov rax, qword [rbp - 8]	      1019	screen.c	FUNCTION_18	FUNCTION_2	CALL_2
0x1524	          0x4889c7	                            mov rdi, rax	      1019	screen.c	FUNCTION_18	FUNCTION_2	CALL_2
0x1527	      0xe800000000	                          call 0x400156c	      1019	screen.c	FUNCTION_18	FUNCTION_2	CALL_2
0x152c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1014	screen.c	FUNCTION_18
0x1530	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1014	screen.c	FUNCTION_18
0x1534	        0x488945f8	                mov qword [rbp - 8], rax	      1014	screen.c	FUNCTION_18
0x1538	      0x48837df800	                  cmp qword [rbp - 8], 0	      1014	screen.c	FUNCTION_18
0x153d	            0x75b9	                           jne 0x4001538	      1014	screen.c	FUNCTION_18
0x153f	      0xe843fbffff	                  call sym.update_finish	      1022	screen.c	FUNCTION_18	CALL_2
0x1544	            0xeb01	                           jmp 0x4001587	      1022	screen.c	FUNCTION_18	CALL_2
0x1546	              0x90	                                     nop	      1009	screen.c	FUNCTION_18	IF_1
0x1547	              0xc9	                                   leave	      1023	screen.c	FUNCTION_18
0x1548	              0xc3	                                     ret	      1023	screen.c	FUNCTION_18
screen_get_current_line_off	DO,0:functions,0:CALL,0:ELSE,0:IF,0:WHILE,0:FOR,0:SWITCH,0	9
0xc324	              0x55	                                push rbp	      6025	screen.c	FUNCTION_31
0xc325	          0x4889e5	                            mov rbp, rsp	      6025	screen.c	FUNCTION_31
0xc328	    0x488b05000000	            mov rax, qword [0x0400c36f] 	      6026	screen.c	FUNCTION_31
0xc32f	          0x4889c2	                            mov rdx, rax	      6026	screen.c	FUNCTION_31
0xc332	    0x488b05000000	            mov rax, qword [0x0400c379] 	      6026	screen.c	FUNCTION_31
0xc339	          0x4829c2	                            sub rdx, rax	      6026	screen.c	FUNCTION_31
0xc33c	          0x4889d0	                            mov rax, rdx	      6026	screen.c	FUNCTION_31
0xc33f	              0x5d	                                 pop rbp	      6027	screen.c	FUNCTION_31
0xc340	              0xc3	                                     ret	      6027	screen.c	FUNCTION_31
update_finish	DO,0:functions,0:CALL,6:ELSE,0:IF,2:WHILE,0:FOR,0:SWITCH,0	11
0x1087	              0x55	                                push rbp	       849	screen.c	FUNCTION_14
0x1088	          0x4889e5	                            mov rbp, rsp	       849	screen.c	FUNCTION_14
0x108b	    0x8b0500000000	            mov eax, dword [0x040010d1] 	       850	screen.c	FUNCTION_14	IF_1
0x1091	            0x85c0	                           test eax, eax	       850	screen.c	FUNCTION_14	IF_1
0x1093	            0x7405	                            je 0x40010da	       850	screen.c	FUNCTION_14	IF_1
0x1095	      0xe800000000	                          call 0x40010da	       851	screen.c	FUNCTION_14	CALL_1
0x109a	      0xe828e70000	                  call sym.end_search_hl	       854	screen.c	FUNCTION_14	CALL_2
0x109f	    0xc70500000000	               mov dword [0x040010e9], 0	       857	screen.c	FUNCTION_14
0x10a9	              0x90	                                     nop	       871	screen.c	FUNCTION_14
0x10aa	              0x5d	                                 pop rbp	       871	screen.c	FUNCTION_14
0x10ab	              0xc3	                                     ret	       871	screen.c	FUNCTION_14
lineclear	DO,0:functions,0:CALL,3:ELSE,0:IF,1:WHILE,0:FOR,0:SWITCH,0	42
0x1220a	              0x55	                                push rbp	      9118	screen.c	FUNCTION_73
0x1220b	          0x4889e5	                            mov rbp, rsp	      9118	screen.c	FUNCTION_73
0x1220e	        0x4883ec10	                           sub rsp, 0x10	      9118	screen.c	FUNCTION_73
0x12212	          0x897dfc	                mov dword [rbp - 4], edi	      9118	screen.c	FUNCTION_73
0x12215	          0x8975f8	                mov dword [rbp - 8], esi	      9118	screen.c	FUNCTION_73
0x12218	          0x8955f4	              mov dword [rbp - 0xc], edx	      9118	screen.c	FUNCTION_73
0x1221b	          0x8b45f8	                mov eax, dword [rbp - 8]	      9119	screen.c	FUNCTION_73	CALL_1
0x1221e	            0x4898	                                    cdqe	      9119	screen.c	FUNCTION_73	CALL_1
0x12220	    0x488b0d000000	            mov rcx, qword [0x04012267] 	      9119	screen.c	FUNCTION_73	CALL_1
0x12227	          0x8b55fc	                mov edx, dword [rbp - 4]	      9119	screen.c	FUNCTION_73	CALL_1
0x1222a	          0x4801d1	                            add rcx, rdx	      9119	screen.c	FUNCTION_73	CALL_1
0x1222d	          0x4889c2	                            mov rdx, rax	      9119	screen.c	FUNCTION_73	CALL_1
0x12230	      0xbe20000000	                           mov esi, 0x20	      9119	screen.c	FUNCTION_73	CALL_1
0x12235	          0x4889cf	                            mov rdi, rcx	      9119	screen.c	FUNCTION_73	CALL_1
0x12238	      0xe800000000	                          call 0x401227d	      9119	screen.c	FUNCTION_73	CALL_1
0x1223d	    0x8b0500000000	            mov eax, dword [0x04012283] 	      9121	screen.c	FUNCTION_73	IF_1
0x12243	            0x85c0	                           test eax, eax	      9121	screen.c	FUNCTION_73	IF_1
0x12245	            0x742b	                            je 0x40122b2	      9121	screen.c	FUNCTION_73	IF_1
0x12247	          0x8b45f8	                mov eax, dword [rbp - 8]	      9122	screen.c	FUNCTION_73	IF_1	CALL_2
0x1224a	            0x4898	                                    cdqe	      9122	screen.c	FUNCTION_73	IF_1	CALL_2
0x1224c	    0x488d14850000	                        lea rdx, [rax*4]	      9122	screen.c	FUNCTION_73	IF_1	CALL_2
0x12254	    0x488b05000000	            mov rax, qword [0x0401229b] 	      9122	screen.c	FUNCTION_73	IF_1	CALL_2
0x1225b	          0x8b4dfc	                mov ecx, dword [rbp - 4]	      9122	screen.c	FUNCTION_73	IF_1	CALL_2
0x1225e	        0x48c1e102	                              shl rcx, 2	      9122	screen.c	FUNCTION_73	IF_1	CALL_2
0x12262	          0x4801c8	                            add rax, rcx	      9122	screen.c	FUNCTION_73	IF_1	CALL_2
0x12265	      0xbe00000000	                              mov esi, 0	      9122	screen.c	FUNCTION_73	IF_1	CALL_2
0x1226a	          0x4889c7	                            mov rdi, rax	      9122	screen.c	FUNCTION_73	IF_1	CALL_2
0x1226d	      0xe800000000	                          call 0x40122b2	      9122	screen.c	FUNCTION_73	IF_1	CALL_2
0x12272	          0x8b45f8	                mov eax, dword [rbp - 8]	      9125	screen.c	FUNCTION_73	CALL_3
0x12275	            0x4898	                                    cdqe	      9125	screen.c	FUNCTION_73	CALL_3
0x12277	        0x488d1400	                    lea rdx, [rax + rax]	      9125	screen.c	FUNCTION_73	CALL_3
0x1227b	    0x488b05000000	            mov rax, qword [0x040122c2] 	      9125	screen.c	FUNCTION_73	CALL_3
0x12282	          0x8b4dfc	                mov ecx, dword [rbp - 4]	      9125	screen.c	FUNCTION_73	CALL_3
0x12285	          0x4801c9	                            add rcx, rcx	      9125	screen.c	FUNCTION_73	CALL_3
0x12288	          0x4801c1	                            add rcx, rax	      9125	screen.c	FUNCTION_73	CALL_3
0x1228b	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      9125	screen.c	FUNCTION_73	CALL_3
0x1228e	            0x89c6	                            mov esi, eax	      9125	screen.c	FUNCTION_73	CALL_3
0x12290	          0x4889cf	                            mov rdi, rcx	      9125	screen.c	FUNCTION_73	CALL_3
0x12293	      0xe800000000	                          call 0x40122d8	      9125	screen.c	FUNCTION_73	CALL_3
0x12298	              0x90	                                     nop	      9126	screen.c	FUNCTION_73
0x12299	              0xc9	                                   leave	      9126	screen.c	FUNCTION_73
0x1229a	              0xc3	                                     ret	      9126	screen.c	FUNCTION_73
get_keymap_str	DO,0:functions,0:CALL,4:ELSE,1:IF,4:WHILE,0:FOR,0:SWITCH,0	90
0xdfdc	              0x55	                                push rbp	      7051	screen.c	FUNCTION_45
0xdfdd	          0x4889e5	                            mov rbp, rsp	      7051	screen.c	FUNCTION_45
0xdfe0	        0x4883ec40	                           sub rsp, 0x40	      7051	screen.c	FUNCTION_45
0xdfe4	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      7051	screen.c	FUNCTION_45
0xdfe8	        0x488975d0	             mov qword [rbp - 0x30], rsi	      7051	screen.c	FUNCTION_45
0xdfec	        0x488955c8	             mov qword [rbp - 0x38], rdx	      7051	screen.c	FUNCTION_45
0xdff0	          0x894dc4	             mov dword [rbp - 0x3c], ecx	      7051	screen.c	FUNCTION_45
0xdff3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7054	screen.c	FUNCTION_45	IF_1
0xdff7	        0x488b4008	                mov rax, qword [rax + 8]	      7054	screen.c	FUNCTION_45	IF_1
0xdffb	    0x488b80681200	          mov rax, qword [rax + 0x1268] 	      7054	screen.c	FUNCTION_45	IF_1
0xe002	        0x4883f801	                              cmp rax, 1	      7054	screen.c	FUNCTION_45	IF_1
0xe006	            0x740a	                            je 0x400e052	      7054	screen.c	FUNCTION_45	IF_1
0xe008	      0xb800000000	                              mov eax, 0	      7055	screen.c	FUNCTION_45	IF_1
0xe00d	      0xe937010000	                           jmp 0x400e189	      7055	screen.c	FUNCTION_45	IF_1
0xe012	    0x488b05000000	            mov rax, qword [0x0400e059] 	      7059	screen.c	FUNCTION_45
0xe019	        0x488945e8	             mov qword [rbp - 0x18], rax	      7059	screen.c	FUNCTION_45
0xe01d	    0x488b05000000	            mov rax, qword [0x0400e064] 	      7060	screen.c	FUNCTION_45
0xe024	        0x488945f0	             mov qword [rbp - 0x10], rax	      7060	screen.c	FUNCTION_45
0xe028	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7063	screen.c	FUNCTION_45
0xe02c	        0x488b4008	                mov rax, qword [rax + 8]	      7063	screen.c	FUNCTION_45
0xe030	    0x488905000000	            mov qword [0x0400e077], rax 	      7063	screen.c	FUNCTION_45
0xe037	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7064	screen.c	FUNCTION_45
0xe03b	    0x488905000000	            mov qword [0x0400e082], rax 	      7064	screen.c	FUNCTION_45
0xe042	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7065	screen.c	FUNCTION_45	CALL_1
0xe046	    0x48b9623a6b65	          movabs rcx, 0x70616d79656b3a62	      7065	screen.c	FUNCTION_45	CALL_1
0xe050	          0x488908	                    mov qword [rax], rcx	      7065	screen.c	FUNCTION_45	CALL_1
0xe053	    0xc740085f6e61	        mov dword [rax + 8], 0x6d616e5f 	      7065	screen.c	FUNCTION_45	CALL_1
0xe05a	    0x66c7400c6500	              mov word [rax + 0xc], 0x65	      7065	screen.c	FUNCTION_45	CALL_1
0xe060	    0x8b0500000000	            mov eax, dword [0x0400e0a6] 	      7066	screen.c	FUNCTION_45
0xe066	          0x83c001	                              add eax, 1	      7066	screen.c	FUNCTION_45
0xe069	    0x890500000000	            mov dword [0x0400e0af], eax 	      7066	screen.c	FUNCTION_45
0xe06f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7067	screen.c	FUNCTION_45	CALL_2
0xe073	      0xba00000000	                              mov edx, 0	      7067	screen.c	FUNCTION_45	CALL_2
0xe078	      0xbe00000000	                              mov esi, 0	      7067	screen.c	FUNCTION_45	CALL_2
0xe07d	          0x4889c7	                            mov rdi, rax	      7067	screen.c	FUNCTION_45	CALL_2
0xe080	      0xe800000000	                          call 0x400e0c5	      7067	screen.c	FUNCTION_45	CALL_2
0xe085	        0x488945e0	             mov qword [rbp - 0x20], rax	      7067	screen.c	FUNCTION_45	CALL_2
0xe089	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7067	screen.c	FUNCTION_45	CALL_2
0xe08d	        0x488945f8	                mov qword [rbp - 8], rax	      7067	screen.c	FUNCTION_45	CALL_2
0xe091	    0x8b0500000000	            mov eax, dword [0x0400e0d7] 	      7068	screen.c	FUNCTION_45
0xe097	          0x83e801	                              sub eax, 1	      7068	screen.c	FUNCTION_45
0xe09a	    0x890500000000	            mov dword [0x0400e0e0], eax 	      7068	screen.c	FUNCTION_45
0xe0a0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7069	screen.c	FUNCTION_45
0xe0a4	    0x488905000000	            mov qword [0x0400e0eb], rax 	      7069	screen.c	FUNCTION_45
0xe0ab	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7070	screen.c	FUNCTION_45
0xe0af	    0x488905000000	            mov qword [0x0400e0f6], rax 	      7070	screen.c	FUNCTION_45
0xe0b6	      0x48837de000	               cmp qword [rbp - 0x20], 0	      7071	screen.c	FUNCTION_45	IF_2
0xe0bb	            0x740b	                            je 0x400e108	      7071	screen.c	FUNCTION_45	IF_2
0xe0bd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7071	screen.c	FUNCTION_45	IF_2
0xe0c1	           0xfb600	                   movzx eax, byte [rax]	      7071	screen.c	FUNCTION_45	IF_2
0xe0c4	            0x84c0	                             test al, al	      7071	screen.c	FUNCTION_45	IF_2
0xe0c6	            0x7534	                           jne 0x400e13c	      7071	screen.c	FUNCTION_45	IF_2
0xe0c8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7075	screen.c	FUNCTION_45	IF_2	IF_3
0xe0cc	        0x488b4008	                mov rax, qword [rax + 8]	      7075	screen.c	FUNCTION_45	IF_2	IF_3
0xe0d0	     0xfb780781200	         movzx eax, word [rax + 0x1278] 	      7075	screen.c	FUNCTION_45	IF_2	IF_3
0xe0d7	              0x98	                                    cwde	      7075	screen.c	FUNCTION_45	IF_2	IF_3
0xe0d8	          0x83e002	                              and eax, 2	      7075	screen.c	FUNCTION_45	IF_2	IF_3
0xe0db	            0x85c0	                           test eax, eax	      7075	screen.c	FUNCTION_45	IF_2	IF_3
0xe0dd	            0x7415	                            je 0x400e134	      7075	screen.c	FUNCTION_45	IF_2	IF_3
0xe0df	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7076	screen.c	FUNCTION_45	IF_2	IF_3
0xe0e3	        0x488b4008	                mov rax, qword [rax + 8]	      7076	screen.c	FUNCTION_45	IF_2	IF_3
0xe0e7	    0x488b80d01500	          mov rax, qword [rax + 0x15d0] 	      7076	screen.c	FUNCTION_45	IF_2	IF_3
0xe0ee	        0x488945e0	             mov qword [rbp - 0x20], rax	      7076	screen.c	FUNCTION_45	IF_2	IF_3
0xe0f2	            0xeb08	                           jmp 0x400e13c	      7076	screen.c	FUNCTION_45	IF_2	IF_3
0xe0f4	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      7079	screen.c	FUNCTION_45	IF_2	ELSE_1
0xe0fc	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      7081	screen.c	FUNCTION_45	IF_4	CALL_3
0xe0ff	          0x4863f0	                         movsxd rsi, eax	      7081	screen.c	FUNCTION_45	IF_4	CALL_3
0xe102	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      7081	screen.c	FUNCTION_45	IF_4	CALL_3
0xe106	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      7081	screen.c	FUNCTION_45	IF_4	CALL_3
0xe10a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7081	screen.c	FUNCTION_45	IF_4	CALL_3
0xe10e	          0x4889c7	                            mov rdi, rax	      7081	screen.c	FUNCTION_45	IF_4	CALL_3
0xe111	      0xb800000000	                              mov eax, 0	      7081	screen.c	FUNCTION_45	IF_4	CALL_3
0xe116	      0xe800000000	                          call 0x400e15b	      7081	screen.c	FUNCTION_45	IF_4	CALL_3
0xe11b	            0x89c2	                            mov edx, eax	      7081	screen.c	FUNCTION_45	IF_4	CALL_3
0xe11d	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      7081	screen.c	FUNCTION_45	IF_4	CALL_3
0xe120	          0x83e801	                              sub eax, 1	      7081	screen.c	FUNCTION_45	IF_4	CALL_3
0xe123	            0x39c2	                            cmp edx, eax	      7081	screen.c	FUNCTION_45	IF_4	CALL_3
0xe125	            0x7e07	                           jle 0x400e16e	      7081	screen.c	FUNCTION_45	IF_4	CALL_3
0xe127	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7082	screen.c	FUNCTION_45	IF_4
0xe12b	          0xc60000	                       mov byte [rax], 0	      7082	screen.c	FUNCTION_45	IF_4
0xe12e	        0x488b45f8	                mov rax, qword [rbp - 8]	      7084	screen.c	FUNCTION_45	CALL_4
0xe132	          0x4889c7	                            mov rdi, rax	      7084	screen.c	FUNCTION_45	CALL_4
0xe135	      0xe800000000	                          call 0x400e17a	      7084	screen.c	FUNCTION_45	CALL_4
0xe13a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7087	screen.c	FUNCTION_45
0xe13e	           0xfb600	                   movzx eax, byte [rax]	      7087	screen.c	FUNCTION_45
0xe141	            0x84c0	                             test al, al	      7087	screen.c	FUNCTION_45
0xe143	           0xf95c0	                                setne al	      7087	screen.c	FUNCTION_45
0xe146	           0xfb6c0	                           movzx eax, al	      7087	screen.c	FUNCTION_45
0xe149	              0xc9	                                   leave	      7088	screen.c	FUNCTION_45
0xe14a	              0xc3	                                     ret	      7088	screen.c	FUNCTION_45
screen_stop_highlight	DO,0:functions,0:CALL,23:ELSE,10:IF,26:WHILE,0:FOR,0:SWITCH,0	230
0x10436	              0x55	                                push rbp	      8111	screen.c	FUNCTION_59
0x10437	          0x4889e5	                            mov rbp, rsp	      8111	screen.c	FUNCTION_59
0x1043a	        0x4883ec10	                           sub rsp, 0x10	      8111	screen.c	FUNCTION_59
0x1043e	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      8112	screen.c	FUNCTION_59
0x10445	    0x8b0500000000	            mov eax, dword [0x0401048b] 	      8114	screen.c	FUNCTION_59	IF_1
0x1044b	            0x85c0	                           test eax, eax	      8114	screen.c	FUNCTION_59	IF_1
0x1044d	     0xf846a030000	                            je 0x40107fd	      8114	screen.c	FUNCTION_59	IF_1
0x10453	    0x8b0500000000	            mov eax, dword [0x04010499] 	      8132	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3
0x10459	      0x3dff000000	                           cmp eax, 0xff	      8132	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3
0x1045e	     0xf8e26010000	                           jle 0x40105ca	      8132	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3
0x10464	    0x8b0500000000	            mov eax, dword [0x040104aa] 	      8136	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4
0x1046a	          0x83f801	                              cmp eax, 1	      8136	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4
0x1046d	            0x7f0e	                            jg 0x40104bd	      8136	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4
0x1046f	    0x8b0500000000	            mov eax, dword [0x040104b5] 	      8136	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4
0x10475	            0x85c0	                           test eax, eax	      8136	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4
0x10477	     0xf848d000000	                            je 0x401054a	      8136	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4
0x1047d	    0x8b0500000000	            mov eax, dword [0x040104c3] 	      8141	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	CALL_4
0x10483	            0x89c7	                            mov edi, eax	      8141	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	CALL_4
0x10485	      0xe800000000	                          call 0x40104ca	      8141	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	CALL_4
0x1048a	        0x488945f8	                mov qword [rbp - 8], rax	      8141	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	CALL_4
0x1048e	      0x48837df800	                  cmp qword [rbp - 8], 0	      8142	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x10493	     0xf84cf000000	                            je 0x40105a8	      8142	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x10499	    0x8b0500000000	            mov eax, dword [0x040104df] 	      8144	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x1049f	            0x85c0	                           test eax, eax	      8142	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x104a1	            0x7431	                            je 0x4010514	      8142	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x104a3	        0x488b45f8	                mov rax, qword [rbp - 8]	      8145	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x104a7	        0x488b4010	            mov rax, qword [rax + 0x10] 	      8145	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x104ab	    0x483dffffff01	                      cmp rax, 0x1ffffff	      8146	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x104b1	            0x7510	                           jne 0x4010503	      8146	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x104b3	        0x488b45f8	                mov rax, qword [rbp - 8]	      8146	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x104b7	        0x488b4018	            mov rax, qword [rax + 0x18] 	      8146	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x104bb	    0x483dffffff01	                      cmp rax, 0x1ffffff	      8146	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x104c1	            0x7407	                            je 0x401050a	      8146	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x104c3	      0xb801000000	                              mov eax, 1	      8146	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x104c8	            0xeb05	                           jmp 0x401050f	      8146	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x104ca	      0xb800000000	                              mov eax, 0	      8146	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x104cf	          0x83e001	                              and eax, 1	      8142	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x104d2	            0xeb29	                           jmp 0x401053d	      8142	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x104d4	        0x488b45f8	                mov rax, qword [rbp - 8]	      8148	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x104d8	         0xfb74008	               movzx eax, word [rax + 8]	      8148	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x104dc	          0x6685c0	                             test ax, ax	      8148	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x104df	            0x750d	                           jne 0x401052e	      8148	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x104e1	        0x488b45f8	                mov rax, qword [rbp - 8]	      8148	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x104e5	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      8148	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x104e9	          0x6685c0	                             test ax, ax	      8148	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x104ec	            0x7407	                            je 0x4010535	      8148	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x104ee	      0xb801000000	                              mov eax, 1	      8148	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x104f3	            0xeb05	                           jmp 0x401053a	      8148	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x104f5	      0xb800000000	                              mov eax, 0	      8148	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x104fa	          0x83e001	                              and eax, 1	      8142	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x104fd	            0x84c0	                             test al, al	      8142	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x104ff	            0x7467	                            je 0x40105a8	      8142	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x10501	    0xc745f4010000	                mov dword [rbp - 0xc], 1	      8153	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x10508	            0xeb5e	                           jmp 0x40105a8	      8142	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x1050a	    0x8b0500000000	            mov eax, dword [0x04010550] 	      8157	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	ELSE_2	CALL_5
0x10510	            0x89c7	                            mov edi, eax	      8157	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	ELSE_2	CALL_5
0x10512	      0xe800000000	                          call 0x4010557	      8157	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	ELSE_2	CALL_5
0x10517	        0x488945f8	                mov qword [rbp - 8], rax	      8157	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	ELSE_2	CALL_5
0x1051b	      0x48837df800	                  cmp qword [rbp - 8], 0	      8158	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	ELSE_2	IF_6
0x10520	            0x7447	                            je 0x40105a9	      8158	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	ELSE_2	IF_6
0x10522	        0x488b45f8	                mov rax, qword [rbp - 8]	      8158	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	ELSE_2	IF_6
0x10526	        0x488b4010	            mov rax, qword [rax + 0x10] 	      8158	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	ELSE_2	IF_6
0x1052a	          0x4885c0	                           test rax, rax	      8158	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	ELSE_2	IF_6
0x1052d	            0x743a	                            je 0x40105a9	      8158	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	ELSE_2	IF_6
0x1052f	    0x488b15000000	            mov rdx, qword [0x04010576] 	      8160	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	ELSE_2	IF_6	IF_7	CALL_6
0x10536	        0x488b45f8	                mov rax, qword [rbp - 8]	      8160	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	ELSE_2	IF_6	IF_7	CALL_6
0x1053a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      8160	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	ELSE_2	IF_6	IF_7	CALL_6
0x1053e	          0x4889d6	                            mov rsi, rdx	      8160	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	ELSE_2	IF_6	IF_7	CALL_6
0x10541	          0x4889c7	                            mov rdi, rax	      8160	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	ELSE_2	IF_6	IF_7	CALL_6
0x10544	      0xe800000000	                          call 0x4010589	      8160	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	ELSE_2	IF_6	IF_7	CALL_6
0x10549	            0x85c0	                           test eax, eax	      8160	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	ELSE_2	IF_6	IF_7	CALL_6
0x1054b	            0x7509	                           jne 0x4010596	      8160	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	ELSE_2	IF_6	IF_7	CALL_6
0x1054d	    0xc745f4010000	                mov dword [rbp - 0xc], 1	      8161	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x10554	            0xeb13	                           jmp 0x40105a9	      8161	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x10556	        0x488b45f8	                mov rax, qword [rbp - 8]	      8163	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	ELSE_2	IF_6	CALL_7
0x1055a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      8163	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	ELSE_2	IF_6	CALL_7
0x1055e	          0x4889c7	                            mov rdi, rax	      8163	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	ELSE_2	IF_6	CALL_7
0x10561	      0xe800000000	                          call 0x40105a6	      8163	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	ELSE_2	IF_6	CALL_7
0x10566	            0xeb01	                           jmp 0x40105a9	      8163	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	ELSE_2	IF_6	CALL_7
0x10568	              0x90	                                     nop	      8142	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_4	IF_5
0x10569	      0x48837df800	                  cmp qword [rbp - 8], 0	      8166	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_8
0x1056e	            0x750c	                           jne 0x40105bc	      8166	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_8
0x10570	    0xc70500000000	               mov dword [0x040105ba], 0	      8167	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_8
0x1057a	            0xeb0e	                           jmp 0x40105ca	      8167	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	IF_8
0x1057c	        0x488b45f8	                mov rax, qword [rbp - 8]	      8169	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	ELSE_4
0x10580	           0xfb700	                   movzx eax, word [rax]	      8169	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	ELSE_4
0x10583	              0x98	                                    cwde	      8169	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	ELSE_4
0x10584	    0x890500000000	            mov dword [0x040105ca], eax 	      8169	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_3	ELSE_4
0x1058a	    0x8b0500000000	            mov eax, dword [0x040105d0] 	      8176	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_4	IF_9
0x10590	          0x83e020	                           and eax, 0x20	      8176	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_4	IF_9
0x10593	            0x85c0	                           test eax, eax	      8176	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_4	IF_9
0x10595	            0x7435	                            je 0x401060c	      8176	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_4	IF_9
0x10597	    0x488b15000000	            mov rdx, qword [0x040105de] 	      8178	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_4	IF_9	IF_10	CALL_8
0x1059e	    0x488b05000000	            mov rax, qword [0x040105e5] 	      8178	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_4	IF_9	IF_10	CALL_8
0x105a5	          0x4889d6	                            mov rsi, rdx	      8178	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_4	IF_9	IF_10	CALL_8
0x105a8	          0x4889c7	                            mov rdi, rax	      8178	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_4	IF_9	IF_10	CALL_8
0x105ab	      0xe800000000	                          call 0x40105f0	      8178	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_4	IF_9	IF_10	CALL_8
0x105b0	            0x85c0	                           test eax, eax	      8178	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_4	IF_9	IF_10	CALL_8
0x105b2	            0x7509	                           jne 0x40105fd	      8178	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_4	IF_9	IF_10	CALL_8
0x105b4	    0xc745f4010000	                mov dword [rbp - 0xc], 1	      8179	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_4	IF_9	IF_10
0x105bb	            0xeb0f	                           jmp 0x401060c	      8179	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_4	IF_9	IF_10
0x105bd	    0x488b05000000	            mov rax, qword [0x04010604] 	      8181	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_4	IF_9	CALL_9
0x105c4	          0x4889c7	                            mov rdi, rax	      8181	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_4	IF_9	CALL_9
0x105c7	      0xe800000000	                          call 0x401060c	      8181	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_4	IF_9	CALL_9
0x105cc	    0x8b0500000000	            mov eax, dword [0x04010612] 	      8183	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_11
0x105d2	          0x83e010	                           and eax, 0x10	      8183	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_11
0x105d5	            0x85c0	                           test eax, eax	      8183	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_11
0x105d7	            0x7441	                            je 0x401065a	      8183	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_11
0x105d9	    0x488b05000000	            mov rax, qword [0x04010620] 	      8183	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_11
0x105e0	          0x4885c0	                           test rax, rax	      8183	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_11
0x105e3	            0x7435	                            je 0x401065a	      8183	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_11
0x105e5	    0x488b15000000	            mov rdx, qword [0x0401062c] 	      8185	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_11	IF_12	CALL_10
0x105ec	    0x488b05000000	            mov rax, qword [0x04010633] 	      8185	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_11	IF_12	CALL_10
0x105f3	          0x4889d6	                            mov rsi, rdx	      8185	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_11	IF_12	CALL_10
0x105f6	          0x4889c7	                            mov rdi, rax	      8185	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_11	IF_12	CALL_10
0x105f9	      0xe800000000	                          call 0x401063e	      8185	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_11	IF_12	CALL_10
0x105fe	            0x85c0	                           test eax, eax	      8185	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_11	IF_12	CALL_10
0x10600	            0x7509	                           jne 0x401064b	      8185	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_11	IF_12	CALL_10
0x10602	    0xc745f4010000	                mov dword [rbp - 0xc], 1	      8186	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_11	IF_12
0x10609	            0xeb0f	                           jmp 0x401065a	      8186	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_11	IF_12
0x1060b	    0x488b05000000	            mov rax, qword [0x04010652] 	      8188	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_11	CALL_11
0x10612	          0x4889c7	                            mov rdi, rax	      8188	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_11	CALL_11
0x10615	      0xe800000000	                          call 0x401065a	      8188	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_11	CALL_11
0x1061a	    0x8b0500000000	            mov eax, dword [0x04010660] 	      8190	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13
0x10620	          0x83e008	                              and eax, 8	      8190	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13
0x10623	            0x85c0	                           test eax, eax	      8190	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13
0x10625	            0x7519	                           jne 0x4010680	      8190	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13
0x10627	    0x8b0500000000	            mov eax, dword [0x0401066d] 	      8191	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13
0x1062d	          0x83e010	                           and eax, 0x10	      8191	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13
0x10630	            0x85c0	                           test eax, eax	      8191	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13
0x10632	            0x7441	                            je 0x40106b5	      8191	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13
0x10634	    0x488b05000000	            mov rax, qword [0x0401067b] 	      8191	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13
0x1063b	          0x4885c0	                           test rax, rax	      8191	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13
0x1063e	            0x7535	                           jne 0x40106b5	      8191	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13
0x10640	    0x488b15000000	            mov rdx, qword [0x04010687] 	      8193	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13	IF_14	CALL_12
0x10647	    0x488b05000000	            mov rax, qword [0x0401068e] 	      8193	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13	IF_14	CALL_12
0x1064e	          0x4889d6	                            mov rsi, rdx	      8193	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13	IF_14	CALL_12
0x10651	          0x4889c7	                            mov rdi, rax	      8193	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13	IF_14	CALL_12
0x10654	      0xe800000000	                          call 0x4010699	      8193	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13	IF_14	CALL_12
0x10659	            0x85c0	                           test eax, eax	      8193	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13	IF_14	CALL_12
0x1065b	            0x7509	                           jne 0x40106a6	      8193	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13	IF_14	CALL_12
0x1065d	    0xc745f4010000	                mov dword [rbp - 0xc], 1	      8194	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13	IF_14
0x10664	            0xeb0f	                           jmp 0x40106b5	      8194	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13	IF_14
0x10666	    0x488b05000000	            mov rax, qword [0x040106ad] 	      8196	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13	CALL_13
0x1066d	          0x4889c7	                            mov rdi, rax	      8196	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13	CALL_13
0x10670	      0xe800000000	                          call 0x40106b5	      8196	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_13	CALL_13
0x10675	    0x8b0500000000	            mov eax, dword [0x040106bb] 	      8198	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_15
0x1067b	          0x83e004	                              and eax, 4	      8198	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_15
0x1067e	            0x85c0	                           test eax, eax	      8198	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_15
0x10680	            0x7435	                            je 0x40106f7	      8198	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_15
0x10682	    0x488b15000000	            mov rdx, qword [0x040106c9] 	      8200	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_15	IF_16	CALL_14
0x10689	    0x488b05000000	            mov rax, qword [0x040106d0] 	      8200	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_15	IF_16	CALL_14
0x10690	          0x4889d6	                            mov rsi, rdx	      8200	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_15	IF_16	CALL_14
0x10693	          0x4889c7	                            mov rdi, rax	      8200	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_15	IF_16	CALL_14
0x10696	      0xe800000000	                          call 0x40106db	      8200	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_15	IF_16	CALL_14
0x1069b	            0x85c0	                           test eax, eax	      8200	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_15	IF_16	CALL_14
0x1069d	            0x7509	                           jne 0x40106e8	      8200	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_15	IF_16	CALL_14
0x1069f	    0xc745f4010000	                mov dword [rbp - 0xc], 1	      8201	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_15	IF_16
0x106a6	            0xeb0f	                           jmp 0x40106f7	      8201	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_15	IF_16
0x106a8	    0x488b05000000	            mov rax, qword [0x040106ef] 	      8203	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_15	CALL_15
0x106af	          0x4889c7	                            mov rdi, rax	      8203	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_15	CALL_15
0x106b2	      0xe800000000	                          call 0x40106f7	      8203	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_15	CALL_15
0x106b7	    0x8b0500000000	            mov eax, dword [0x040106fd] 	      8205	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_17
0x106bd	      0x2580000000	                           and eax, 0x80	      8205	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_17
0x106c2	            0x85c0	                           test eax, eax	      8205	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_17
0x106c4	            0x7435	                            je 0x401073b	      8205	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_17
0x106c6	    0x488b15000000	            mov rdx, qword [0x0401070d] 	      8207	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_17	IF_18	CALL_16
0x106cd	    0x488b05000000	            mov rax, qword [0x04010714] 	      8207	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_17	IF_18	CALL_16
0x106d4	          0x4889d6	                            mov rsi, rdx	      8207	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_17	IF_18	CALL_16
0x106d7	          0x4889c7	                            mov rdi, rax	      8207	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_17	IF_18	CALL_16
0x106da	      0xe800000000	                          call 0x401071f	      8207	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_17	IF_18	CALL_16
0x106df	            0x85c0	                           test eax, eax	      8207	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_17	IF_18	CALL_16
0x106e1	            0x7509	                           jne 0x401072c	      8207	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_17	IF_18	CALL_16
0x106e3	    0xc745f4010000	                mov dword [rbp - 0xc], 1	      8208	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_17	IF_18
0x106ea	            0xeb0f	                           jmp 0x401073b	      8208	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_17	IF_18
0x106ec	    0x488b05000000	            mov rax, qword [0x04010733] 	      8210	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_17	CALL_17
0x106f3	          0x4889c7	                            mov rdi, rax	      8210	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_17	CALL_17
0x106f6	      0xe800000000	                          call 0x401073b	      8210	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_17	CALL_17
0x106fb	        0x837df400	                cmp dword [rbp - 0xc], 0	      8212	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_19
0x106ff	            0x750d	                           jne 0x401074e	      8212	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_19
0x10701	    0x8b0500000000	            mov eax, dword [0x04010747] 	      8212	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_19
0x10707	          0x83e003	                              and eax, 3	      8212	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_19
0x1070a	            0x85c0	                           test eax, eax	      8212	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_19
0x1070c	            0x740f	                            je 0x401075d	      8212	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_19
0x1070e	    0x488b05000000	            mov rax, qword [0x04010755] 	      8213	screen.c	FUNCTION_59	IF_1	ELSE_1	CALL_18
0x10715	          0x4889c7	                            mov rdi, rax	      8213	screen.c	FUNCTION_59	IF_1	ELSE_1	CALL_18
0x10718	      0xe800000000	                          call 0x401075d	      8213	screen.c	FUNCTION_59	IF_1	ELSE_1	CALL_18
0x1071d	    0x8b0500000000	            mov eax, dword [0x04010763] 	      8216	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_20
0x10723	            0x85c0	                           test eax, eax	      8216	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_20
0x10725	            0x743e	                            je 0x40107a5	      8216	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_20
0x10727	    0x488b05000000	            mov rax, qword [0x0401076e] 	      8218	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_20	IF_21
0x1072e	    0x483dffffff01	                      cmp rax, 0x1ffffff	      8218	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_20	IF_21
0x10734	            0x740f	                            je 0x4010785	      8218	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_20	IF_21
0x10736	    0x488b05000000	            mov rax, qword [0x0401077d] 	      8219	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_20	CALL_19
0x1073d	          0x4889c7	                            mov rdi, rax	      8219	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_20	CALL_19
0x10740	      0xe800000000	                          call 0x4010785	      8219	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_20	CALL_19
0x10745	    0x488b05000000	            mov rax, qword [0x0401078c] 	      8220	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_20	IF_22
0x1074c	    0x483dffffff01	                      cmp rax, 0x1ffffff	      8220	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_20	IF_22
0x10752	            0x7469	                            je 0x40107fd	      8220	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_20	IF_22
0x10754	    0x488b05000000	            mov rax, qword [0x0401079b] 	      8221	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_20	CALL_20
0x1075b	          0x4889c7	                            mov rdi, rax	      8221	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_20	CALL_20
0x1075e	      0xe800000000	                          call 0x40107a3	      8221	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_20	CALL_20
0x10763	            0xeb58	                           jmp 0x40107fd	      8221	screen.c	FUNCTION_59	IF_1	ELSE_1	IF_20	CALL_20
0x10765	    0x8b0500000000	            mov eax, dword [0x040107ab] 	      8226	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_10	IF_23
0x1076b	          0x83f801	                              cmp eax, 1	      8226	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_10	IF_23
0x1076e	            0x7e4d	                           jle 0x40107fd	      8226	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_10	IF_23
0x10770	    0x8b0500000000	            mov eax, dword [0x040107b6] 	      8229	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_10	IF_23	IF_24
0x10776	            0x85c0	                           test eax, eax	      8229	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_10	IF_23	IF_24
0x10778	            0x7410	                            je 0x40107ca	      8229	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_10	IF_23	IF_24
0x1077a	    0x8b0500000000	            mov eax, dword [0x040107c0] 	      8230	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_10	IF_23	CALL_21
0x10780	          0x83e801	                              sub eax, 1	      8230	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_10	IF_23	CALL_21
0x10783	            0x89c7	                            mov edi, eax	      8230	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_10	IF_23	CALL_21
0x10785	      0xe800000000	                          call 0x40107ca	      8230	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_10	IF_23	CALL_21
0x1078a	    0x8b0500000000	            mov eax, dword [0x040107d0] 	      8231	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_10	IF_23	IF_25
0x10790	            0x85c0	                           test eax, eax	      8231	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_10	IF_23	IF_25
0x10792	            0x7410	                            je 0x40107e4	      8231	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_10	IF_23	IF_25
0x10794	    0x8b0500000000	            mov eax, dword [0x040107da] 	      8232	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_10	IF_23	CALL_22
0x1079a	          0x83e801	                              sub eax, 1	      8232	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_10	IF_23	CALL_22
0x1079d	            0x89c7	                            mov edi, eax	      8232	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_10	IF_23	CALL_22
0x1079f	      0xe800000000	                          call 0x40107e4	      8232	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_10	IF_23	CALL_22
0x107a4	    0x8b0500000000	            mov eax, dword [0x040107ea] 	      8233	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_10	IF_23	IF_26
0x107aa	            0x85c0	                           test eax, eax	      8233	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_10	IF_23	IF_26
0x107ac	            0x740f	                            je 0x40107fd	      8233	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_10	IF_23	IF_26
0x107ae	    0x488b05000000	            mov rax, qword [0x040107f5] 	      8234	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_10	IF_23	CALL_23
0x107b5	          0x4889c7	                            mov rdi, rax	      8234	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_10	IF_23	CALL_23
0x107b8	      0xe800000000	                          call 0x40107fd	      8234	screen.c	FUNCTION_59	IF_1	ELSE_1	ELSE_10	IF_23	CALL_23
0x107bd	    0xc70500000000	               mov dword [0x04010807], 0	      8239	screen.c	FUNCTION_59
0x107c7	              0x90	                                     nop	      8240	screen.c	FUNCTION_59
0x107c8	              0xc9	                                   leave	      8240	screen.c	FUNCTION_59
0x107c9	              0xc3	                                     ret	      8240	screen.c	FUNCTION_59
stl_connected	DO,0:functions,0:CALL,0:ELSE,1:IF,3:WHILE,1:FOR,0:SWITCH,0	33
0xdf74	              0x55	                                push rbp	      7020	screen.c	FUNCTION_44
0xdf75	          0x4889e5	                            mov rbp, rsp	      7020	screen.c	FUNCTION_44
0xdf78	        0x48897de8	             mov qword [rbp - 0x18], rdi	      7020	screen.c	FUNCTION_44
0xdf7c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7023	screen.c	FUNCTION_44
0xdf80	        0x488b4030	            mov rax, qword [rax + 0x30] 	      7023	screen.c	FUNCTION_44
0xdf84	        0x488945f8	                mov qword [rbp - 8], rax	      7023	screen.c	FUNCTION_44
0xdf88	            0xeb3e	                           jmp 0x400e008	      7024	screen.c	FUNCTION_44	WHILE_1
0xdf8a	        0x488b45f8	                mov rax, qword [rbp - 8]	      7026	screen.c	FUNCTION_44	WHILE_1	IF_1
0xdf8e	        0x488b4018	            mov rax, qword [rax + 0x18] 	      7026	screen.c	FUNCTION_44	WHILE_1	IF_1
0xdf92	           0xfb600	                   movzx eax, byte [rax]	      7026	screen.c	FUNCTION_44	WHILE_1	IF_1
0xdf95	            0x3c02	                               cmp al, 2	      7026	screen.c	FUNCTION_44	WHILE_1	IF_1
0xdf97	            0x750f	                           jne 0x400dfe8	      7026	screen.c	FUNCTION_44	WHILE_1	IF_1
0xdf99	        0x488b45f8	                mov rax, qword [rbp - 8]	      7028	screen.c	FUNCTION_44	WHILE_1	IF_1	IF_2
0xdf9d	        0x488b4020	            mov rax, qword [rax + 0x20] 	      7028	screen.c	FUNCTION_44	WHILE_1	IF_1	IF_2
0xdfa1	          0x4885c0	                           test rax, rax	      7028	screen.c	FUNCTION_44	WHILE_1	IF_1	IF_2
0xdfa4	            0x7416	                            je 0x400dffc	      7028	screen.c	FUNCTION_44	WHILE_1	IF_1	IF_2
0xdfa6	            0xeb2d	                           jmp 0x400e015	      7029	screen.c	FUNCTION_44	WHILE_1	IF_1	IF_2
0xdfa8	        0x488b45f8	                mov rax, qword [rbp - 8]	      7033	screen.c	FUNCTION_44	WHILE_1	ELSE_1	IF_3
0xdfac	        0x488b4020	            mov rax, qword [rax + 0x20] 	      7033	screen.c	FUNCTION_44	WHILE_1	ELSE_1	IF_3
0xdfb0	          0x4885c0	                           test rax, rax	      7033	screen.c	FUNCTION_44	WHILE_1	ELSE_1	IF_3
0xdfb3	            0x7407	                            je 0x400dffc	      7033	screen.c	FUNCTION_44	WHILE_1	ELSE_1	IF_3
0xdfb5	      0xb801000000	                              mov eax, 1	      7034	screen.c	FUNCTION_44	WHILE_1	ELSE_1	IF_3
0xdfba	            0xeb1e	                           jmp 0x400e01a	      7034	screen.c	FUNCTION_44	WHILE_1	ELSE_1	IF_3
0xdfbc	        0x488b45f8	                mov rax, qword [rbp - 8]	      7036	screen.c	FUNCTION_44	WHILE_1
0xdfc0	        0x488b4018	            mov rax, qword [rax + 0x18] 	      7036	screen.c	FUNCTION_44	WHILE_1
0xdfc4	        0x488945f8	                mov qword [rbp - 8], rax	      7036	screen.c	FUNCTION_44	WHILE_1
0xdfc8	        0x488b45f8	                mov rax, qword [rbp - 8]	      7024	screen.c	FUNCTION_44	WHILE_1
0xdfcc	        0x488b4018	            mov rax, qword [rax + 0x18] 	      7024	screen.c	FUNCTION_44	WHILE_1
0xdfd0	          0x4885c0	                           test rax, rax	      7024	screen.c	FUNCTION_44	WHILE_1
0xdfd3	            0x75b5	                           jne 0x400dfca	      7024	screen.c	FUNCTION_44	WHILE_1
0xdfd5	      0xb800000000	                              mov eax, 0	      7038	screen.c	FUNCTION_44
0xdfda	              0x5d	                                 pop rbp	      7039	screen.c	FUNCTION_44
0xdfdb	              0xc3	                                     ret	      7039	screen.c	FUNCTION_44
next_search_hl_pos	DO,0:functions,0:CALL,0:ELSE,1:IF,6:WHILE,0:FOR,1:SWITCH,0	150
0xff45	              0x55	                                push rbp	      7958	screen.c	FUNCTION_57
0xff46	          0x4889e5	                            mov rbp, rsp	      7958	screen.c	FUNCTION_57
0xff49	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      7958	screen.c	FUNCTION_57
0xff4d	        0x488975c0	             mov qword [rbp - 0x40], rsi	      7958	screen.c	FUNCTION_57
0xff51	        0x488955b8	             mov qword [rbp - 0x48], rdx	      7958	screen.c	FUNCTION_57
0xff55	          0x894db4	             mov dword [rbp - 0x4c], ecx	      7958	screen.c	FUNCTION_57
0xff58	    0xc745dcffffff	     mov dword [rbp - 0x24], 0xffffffff 	      7960	screen.c	FUNCTION_57
0xff5f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7962	screen.c	FUNCTION_57	FOR_1
0xff63	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	      7962	screen.c	FUNCTION_57	FOR_1
0xff69	          0x8945d8	             mov dword [rbp - 0x28], eax	      7962	screen.c	FUNCTION_57	FOR_1
0xff6c	      0xe9e1000000	                           jmp 0x4010092	      7962	screen.c	FUNCTION_57	FOR_1
0xff71	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      7964	screen.c	FUNCTION_57	FOR_1
0xff74	            0x4898	                                    cdqe	      7964	screen.c	FUNCTION_57	FOR_1
0xff76	        0x48c1e004	                              shl rax, 4	      7964	screen.c	FUNCTION_57	FOR_1
0xff7a	          0x4889c2	                            mov rdx, rax	      7964	screen.c	FUNCTION_57	FOR_1
0xff7d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7964	screen.c	FUNCTION_57	FOR_1
0xff81	          0x4801d0	                            add rax, rdx	      7964	screen.c	FUNCTION_57	FOR_1
0xff84	        0x488945e8	             mov qword [rbp - 0x18], rax	      7964	screen.c	FUNCTION_57	FOR_1
0xff88	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7966	screen.c	FUNCTION_57	FOR_1	IF_1
0xff8c	          0x488b00	                    mov rax, qword [rax]	      7966	screen.c	FUNCTION_57	FOR_1	IF_1
0xff8f	          0x4885c0	                           test rax, rax	      7966	screen.c	FUNCTION_57	FOR_1	IF_1
0xff92	     0xf84c6000000	                            je 0x401009e	      7966	screen.c	FUNCTION_57	FOR_1	IF_1
0xff98	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7968	screen.c	FUNCTION_57	FOR_1	IF_2
0xff9c	          0x8b400c	              mov eax, dword [rax + 0xc]	      7968	screen.c	FUNCTION_57	FOR_1	IF_2
0xff9f	            0x85c0	                           test eax, eax	      7968	screen.c	FUNCTION_57	FOR_1	IF_2
0xffa1	            0x7510	                           jne 0x400fff3	      7968	screen.c	FUNCTION_57	FOR_1	IF_2
0xffa3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7968	screen.c	FUNCTION_57	FOR_1	IF_2
0xffa7	          0x8b4008	                mov eax, dword [rax + 8]	      7968	screen.c	FUNCTION_57	FOR_1	IF_2
0xffaa	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	      7968	screen.c	FUNCTION_57	FOR_1	IF_2
0xffad	     0xf8c9a000000	                            jl 0x401008d	      7968	screen.c	FUNCTION_57	FOR_1	IF_2
0xffb3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7970	screen.c	FUNCTION_57	FOR_1	IF_3
0xffb7	          0x488b00	                    mov rax, qword [rax]	      7970	screen.c	FUNCTION_57	FOR_1	IF_3
0xffba	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      7970	screen.c	FUNCTION_57	FOR_1	IF_3
0xffbe	     0xf858a000000	                           jne 0x401008e	      7970	screen.c	FUNCTION_57	FOR_1	IF_3
0xffc4	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      7972	screen.c	FUNCTION_57	FOR_1	IF_3	IF_4
0xffc8	            0x787b	                            js 0x4010085	      7972	screen.c	FUNCTION_57	FOR_1	IF_3	IF_4
0xffca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7976	screen.c	FUNCTION_57	FOR_1	IF_3	IF_4	IF_5
0xffce	          0x8b5008	                mov edx, dword [rax + 8]	      7976	screen.c	FUNCTION_57	FOR_1	IF_3	IF_4	IF_5
0xffd1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7976	screen.c	FUNCTION_57	FOR_1	IF_3	IF_4	IF_5
0xffd5	          0x8b4ddc	             mov ecx, dword [rbp - 0x24]	      7976	screen.c	FUNCTION_57	FOR_1	IF_3	IF_4	IF_5
0xffd8	          0x4863c9	                         movsxd rcx, ecx	      7976	screen.c	FUNCTION_57	FOR_1	IF_3	IF_4	IF_5
0xffdb	        0x48c1e104	                              shl rcx, 4	      7976	screen.c	FUNCTION_57	FOR_1	IF_3	IF_4	IF_5
0xffdf	          0x4801c8	                            add rax, rcx	      7976	screen.c	FUNCTION_57	FOR_1	IF_3	IF_4	IF_5
0xffe2	        0x4883c008	                              add rax, 8	      7976	screen.c	FUNCTION_57	FOR_1	IF_3	IF_4	IF_5
0xffe6	            0x8b00	                    mov eax, dword [rax]	      7976	screen.c	FUNCTION_57	FOR_1	IF_3	IF_4	IF_5
0xffe8	            0x39c2	                            cmp edx, eax	      7976	screen.c	FUNCTION_57	FOR_1	IF_3	IF_4	IF_5
0xffea	            0x7d62	                           jge 0x401008e	      7976	screen.c	FUNCTION_57	FOR_1	IF_3	IF_4	IF_5
0xffec	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7978	screen.c	FUNCTION_57	FOR_1	IF_3	IF_4	IF_5
0xfff0	        0x488b5008	                mov rdx, qword [rax + 8]	      7978	screen.c	FUNCTION_57	FOR_1	IF_3	IF_4	IF_5
0xfff4	          0x488b00	                    mov rax, qword [rax]	      7978	screen.c	FUNCTION_57	FOR_1	IF_3	IF_4	IF_5
0xfff7	        0x488945f0	             mov qword [rbp - 0x10], rax	      7978	screen.c	FUNCTION_57	FOR_1	IF_3	IF_4	IF_5
0xfffb	        0x488955f8	                mov qword [rbp - 8], rdx	      7978	screen.c	FUNCTION_57	FOR_1	IF_3	IF_4	IF_5
0xffff	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      7980	screen.c	FUNCTION_57	FOR_1	IF_3	IF_4	IF_5
0x10003	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7980	screen.c	FUNCTION_57	FOR_1	IF_3	IF_4	IF_5
0x10007	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      7980	screen.c	FUNCTION_57	FOR_1	IF_3	IF_4	IF_5
0x1000a	          0x4863d2	                         movsxd rdx, edx	      7980	screen.c	FUNCTION_57	FOR_1	IF_3	IF_4	IF_5
0x1000d	        0x48c1e204	                              shl rdx, 4	      7980	screen.c	FUNCTION_57	FOR_1	IF_3	IF_4	IF_5
0x10011	          0x4801d0	                            add rax, rdx	      7980	screen.c	FUNCTION_57	FOR_1	IF_3	IF_4	IF_5
0x10014	        0x488b5008	                mov rdx, qword [rax + 8]	      7980	screen.c	FUNCTION_57	FOR_1	IF_3	IF_4	IF_5
0x10018	          0x488b00	                    mov rax, qword [rax]	      7980	screen.c	FUNCTION_57	FOR_1	IF_3	IF_4	IF_5
0x1001b	          0x488901	                    mov qword [rcx], rax	      7980	screen.c	FUNCTION_57	FOR_1	IF_3	IF_4	IF_5
0x1001e	        0x48895108	                mov qword [rcx + 8], rdx	      7980	screen.c	FUNCTION_57	FOR_1	IF_3	IF_4	IF_5
0x10022	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7981	screen.c	FUNCTION_57	FOR_1	IF_3	IF_4	IF_5
0x10026	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      7981	screen.c	FUNCTION_57	FOR_1	IF_3	IF_4	IF_5
0x10029	          0x4863d2	                         movsxd rdx, edx	      7981	screen.c	FUNCTION_57	FOR_1	IF_3	IF_4	IF_5
0x1002c	        0x48c1e204	                              shl rdx, 4	      7981	screen.c	FUNCTION_57	FOR_1	IF_3	IF_4	IF_5
0x10030	        0x488d0c10	                    lea rcx, [rax + rdx]	      7981	screen.c	FUNCTION_57	FOR_1	IF_3	IF_4	IF_5
0x10034	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7981	screen.c	FUNCTION_57	FOR_1	IF_3	IF_4	IF_5
0x10038	        0x488b55f8	                mov rdx, qword [rbp - 8]	      7981	screen.c	FUNCTION_57	FOR_1	IF_3	IF_4	IF_5
0x1003c	          0x488901	                    mov qword [rcx], rax	      7981	screen.c	FUNCTION_57	FOR_1	IF_3	IF_4	IF_5
0x1003f	        0x48895108	                mov qword [rcx + 8], rdx	      7981	screen.c	FUNCTION_57	FOR_1	IF_3	IF_4	IF_5
0x10043	            0xeb09	                           jmp 0x401008e	      7981	screen.c	FUNCTION_57	FOR_1	IF_3	IF_4	IF_5
0x10045	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      7985	screen.c	FUNCTION_57	FOR_1	IF_3	ELSE_1
0x10048	          0x8945dc	             mov dword [rbp - 0x24], eax	      7985	screen.c	FUNCTION_57	FOR_1	IF_3	ELSE_1
0x1004b	            0xeb01	                           jmp 0x401008e	      7985	screen.c	FUNCTION_57	FOR_1	IF_3	ELSE_1
0x1004d	              0x90	                                     nop	      7969	screen.c	FUNCTION_57	FOR_1	IF_2
0x1004e	        0x8345d801	               add dword [rbp - 0x28], 1	      7962	screen.c	FUNCTION_57	FOR_1
0x10052	        0x837dd807	               cmp dword [rbp - 0x28], 7	      7962	screen.c	FUNCTION_57	FOR_1
0x10056	     0xf8e15ffffff	                           jle 0x400ffb1	      7962	screen.c	FUNCTION_57	FOR_1
0x1005c	            0xeb01	                           jmp 0x401009f	      7962	screen.c	FUNCTION_57	FOR_1
0x1005e	              0x90	                                     nop	      7967	screen.c	FUNCTION_57	FOR_1	IF_1
0x1005f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7988	screen.c	FUNCTION_57	ELSE_1
0x10063	    0xc78080000000	               mov dword [rax + 0x80], 0	      7988	screen.c	FUNCTION_57	ELSE_1
0x1006d	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      7989	screen.c	FUNCTION_57	ELSE_1	IF_6
0x10071	     0xf88e6000000	                            js 0x401019d	      7989	screen.c	FUNCTION_57	ELSE_1	IF_6
0x10077	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7991	screen.c	FUNCTION_57	ELSE_1	IF_6
0x1007b	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      7991	screen.c	FUNCTION_57	ELSE_1	IF_6
0x1007e	          0x4863d2	                         movsxd rdx, edx	      7991	screen.c	FUNCTION_57	ELSE_1	IF_6
0x10081	        0x48c1e204	                              shl rdx, 4	      7991	screen.c	FUNCTION_57	ELSE_1	IF_6
0x10085	          0x4801d0	                            add rax, rdx	      7991	screen.c	FUNCTION_57	ELSE_1	IF_6
0x10088	        0x4883c008	                              add rax, 8	      7991	screen.c	FUNCTION_57	ELSE_1	IF_6
0x1008c	            0x8b00	                    mov eax, dword [rax]	      7991	screen.c	FUNCTION_57	ELSE_1	IF_6
0x1008e	            0x85c0	                           test eax, eax	      7992	screen.c	FUNCTION_57	ELSE_1	IF_6
0x10090	            0x741c	                            je 0x40100ee	      7992	screen.c	FUNCTION_57	ELSE_1	IF_6
0x10092	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7992	screen.c	FUNCTION_57	ELSE_1	IF_6
0x10096	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      7992	screen.c	FUNCTION_57	ELSE_1	IF_6
0x10099	          0x4863d2	                         movsxd rdx, edx	      7992	screen.c	FUNCTION_57	ELSE_1	IF_6
0x1009c	        0x48c1e204	                              shl rdx, 4	      7992	screen.c	FUNCTION_57	ELSE_1	IF_6
0x100a0	          0x4801d0	                            add rax, rdx	      7992	screen.c	FUNCTION_57	ELSE_1	IF_6
0x100a3	        0x4883c008	                              add rax, 8	      7992	screen.c	FUNCTION_57	ELSE_1	IF_6
0x100a7	            0x8b00	                    mov eax, dword [rax]	      7992	screen.c	FUNCTION_57	ELSE_1	IF_6
0x100a9	          0x83e801	                              sub eax, 1	      7992	screen.c	FUNCTION_57	ELSE_1	IF_6
0x100ac	            0xeb05	                           jmp 0x40100f3	      7992	screen.c	FUNCTION_57	ELSE_1	IF_6
0x100ae	      0xb800000000	                              mov eax, 0	      7992	screen.c	FUNCTION_57	ELSE_1	IF_6
0x100b3	          0x8945e0	             mov dword [rbp - 0x20], eax	      7991	screen.c	FUNCTION_57	ELSE_1	IF_6
0x100b6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7993	screen.c	FUNCTION_57	ELSE_1	IF_6
0x100ba	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      7993	screen.c	FUNCTION_57	ELSE_1	IF_6
0x100bd	          0x4863d2	                         movsxd rdx, edx	      7993	screen.c	FUNCTION_57	ELSE_1	IF_6
0x100c0	        0x48c1e204	                              shl rdx, 4	      7993	screen.c	FUNCTION_57	ELSE_1	IF_6
0x100c4	          0x4801d0	                            add rax, rdx	      7993	screen.c	FUNCTION_57	ELSE_1	IF_6
0x100c7	        0x4883c008	                              add rax, 8	      7993	screen.c	FUNCTION_57	ELSE_1	IF_6
0x100cb	            0x8b00	                    mov eax, dword [rax]	      7993	screen.c	FUNCTION_57	ELSE_1	IF_6
0x100cd	            0x85c0	                           test eax, eax	      7993	screen.c	FUNCTION_57	ELSE_1	IF_6
0x100cf	            0x741e	                            je 0x401012f	      7993	screen.c	FUNCTION_57	ELSE_1	IF_6
0x100d1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7994	screen.c	FUNCTION_57	ELSE_1	IF_6
0x100d5	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      7994	screen.c	FUNCTION_57	ELSE_1	IF_6
0x100d8	          0x4863d2	                         movsxd rdx, edx	      7994	screen.c	FUNCTION_57	ELSE_1	IF_6
0x100db	        0x48c1e204	                              shl rdx, 4	      7994	screen.c	FUNCTION_57	ELSE_1	IF_6
0x100df	          0x4801d0	                            add rax, rdx	      7994	screen.c	FUNCTION_57	ELSE_1	IF_6
0x100e2	        0x4883c00c	                            add rax, 0xc	      7994	screen.c	FUNCTION_57	ELSE_1	IF_6
0x100e6	            0x8b10	                    mov edx, dword [rax]	      7994	screen.c	FUNCTION_57	ELSE_1	IF_6
0x100e8	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      7993	screen.c	FUNCTION_57	ELSE_1	IF_6
0x100eb	             0x1d0	                            add eax, edx	      7993	screen.c	FUNCTION_57	ELSE_1	IF_6
0x100ed	            0xeb05	                           jmp 0x4010134	      7993	screen.c	FUNCTION_57	ELSE_1	IF_6
0x100ef	      0xb8ffffff7f	                     mov eax, 0x7fffffff	      7993	screen.c	FUNCTION_57	ELSE_1	IF_6
0x100f4	          0x8945e4	             mov dword [rbp - 0x1c], eax	      7993	screen.c	FUNCTION_57	ELSE_1	IF_6
0x100f7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7996	screen.c	FUNCTION_57	ELSE_1	IF_6
0x100fb	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      7996	screen.c	FUNCTION_57	ELSE_1	IF_6
0x100ff	    0x488990580100	            mov qword [rax + 0x158], rdx	      7996	screen.c	FUNCTION_57	ELSE_1	IF_6
0x10106	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7997	screen.c	FUNCTION_57	ELSE_1	IF_6
0x1010a	    0x48c740080000	                  mov qword [rax + 8], 0	      7997	screen.c	FUNCTION_57	ELSE_1	IF_6
0x10112	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7998	screen.c	FUNCTION_57	ELSE_1	IF_6
0x10116	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      7998	screen.c	FUNCTION_57	ELSE_1	IF_6
0x10119	          0x895010	             mov dword [rax + 0x10], edx	      7998	screen.c	FUNCTION_57	ELSE_1	IF_6
0x1011c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7999	screen.c	FUNCTION_57	ELSE_1	IF_6
0x10120	    0x48c780a80000	               mov qword [rax + 0xa8], 0	      7999	screen.c	FUNCTION_57	ELSE_1	IF_6
0x1012b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      8000	screen.c	FUNCTION_57	ELSE_1	IF_6
0x1012f	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      8000	screen.c	FUNCTION_57	ELSE_1	IF_6
0x10132	    0x8990b0000000	             mov dword [rax + 0xb0], edx	      8000	screen.c	FUNCTION_57	ELSE_1	IF_6
0x10138	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      8001	screen.c	FUNCTION_57	ELSE_1	IF_6
0x1013c	    0xc78078010000	              mov dword [rax + 0x178], 1	      8001	screen.c	FUNCTION_57	ELSE_1	IF_6
0x10146	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      8002	screen.c	FUNCTION_57	ELSE_1	IF_6
0x10149	          0x8d5001	                      lea edx, [rax + 1]	      8002	screen.c	FUNCTION_57	ELSE_1	IF_6
0x1014c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      8002	screen.c	FUNCTION_57	ELSE_1	IF_6
0x10150	    0x899080000000	             mov dword [rax + 0x80], edx	      8002	screen.c	FUNCTION_57	ELSE_1	IF_6
0x10156	      0xb801000000	                              mov eax, 1	      8003	screen.c	FUNCTION_57	ELSE_1	IF_6
0x1015b	            0xeb05	                           jmp 0x40101a2	      8003	screen.c	FUNCTION_57	ELSE_1	IF_6
0x1015d	      0xb800000000	                              mov eax, 0	      8005	screen.c	FUNCTION_57
0x10162	              0x5d	                                 pop rbp	      8006	screen.c	FUNCTION_57
0x10163	              0xc3	                                     ret	      8006	screen.c	FUNCTION_57
screen_char_2	DO,0:functions,0:CALL,2:ELSE,0:IF,2:WHILE,0:FOR,0:SWITCH,0	49
0x10ac4	              0x55	                                push rbp	      8371	screen.c	FUNCTION_62
0x10ac5	          0x4889e5	                            mov rbp, rsp	      8371	screen.c	FUNCTION_62
0x10ac8	        0x4883ec10	                           sub rsp, 0x10	      8371	screen.c	FUNCTION_62
0x10acc	          0x897dfc	                mov dword [rbp - 4], edi	      8371	screen.c	FUNCTION_62
0x10acf	          0x8975f8	                mov dword [rbp - 8], esi	      8371	screen.c	FUNCTION_62
0x10ad2	          0x8955f4	              mov dword [rbp - 0xc], edx	      8371	screen.c	FUNCTION_62
0x10ad5	          0x8b45fc	                mov eax, dword [rbp - 4]	      8373	screen.c	FUNCTION_62	IF_1
0x10ad8	          0x8d4801	                      lea ecx, [rax + 1]	      8373	screen.c	FUNCTION_62	IF_1
0x10adb	    0x8b1500000000	            mov edx, dword [0x04010b21] 	      8373	screen.c	FUNCTION_62	IF_1
0x10ae1	    0x8b0500000000	            mov eax, dword [0x04010b27] 	      8373	screen.c	FUNCTION_62	IF_1
0x10ae7	           0xfafc2	                           imul eax, edx	      8373	screen.c	FUNCTION_62	IF_1
0x10aea	            0x39c1	                            cmp ecx, eax	      8373	screen.c	FUNCTION_62	IF_1
0x10aec	            0x7375	                           jae 0x4010ba3	      8373	screen.c	FUNCTION_62	IF_1
0x10aee	    0x8b0500000000	            mov eax, dword [0x04010b34] 	      8378	screen.c	FUNCTION_62	IF_2
0x10af4	          0x83e801	                              sub eax, 1	      8378	screen.c	FUNCTION_62	IF_2
0x10af7	          0x3b45f8	                cmp eax, dword [rbp - 8]	      8378	screen.c	FUNCTION_62	IF_2
0x10afa	            0x7525	                           jne 0x4010b61	      8378	screen.c	FUNCTION_62	IF_2
0x10afc	    0x8b0500000000	            mov eax, dword [0x04010b42] 	      8378	screen.c	FUNCTION_62	IF_2
0x10b02	          0x83e802	                              sub eax, 2	      8378	screen.c	FUNCTION_62	IF_2
0x10b05	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	      8378	screen.c	FUNCTION_62	IF_2
0x10b08	            0x7f17	                            jg 0x4010b61	      8378	screen.c	FUNCTION_62	IF_2
0x10b0a	    0x488b05000000	            mov rax, qword [0x04010b51] 	      8380	screen.c	FUNCTION_62	IF_2
0x10b11	          0x8b55fc	                mov edx, dword [rbp - 4]	      8380	screen.c	FUNCTION_62	IF_2
0x10b14	          0x4801d2	                            add rdx, rdx	      8380	screen.c	FUNCTION_62	IF_2
0x10b17	          0x4801d0	                            add rax, rdx	      8380	screen.c	FUNCTION_62	IF_2
0x10b1a	      0x66c700ffff	                  mov word [rax], 0xffff	      8380	screen.c	FUNCTION_62	IF_2
0x10b1f	            0xeb43	                           jmp 0x4010ba4	      8381	screen.c	FUNCTION_62	IF_2
0x10b21	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      8386	screen.c	FUNCTION_62	CALL_1
0x10b24	          0x8b4df8	                mov ecx, dword [rbp - 8]	      8386	screen.c	FUNCTION_62	CALL_1
0x10b27	          0x8b45fc	                mov eax, dword [rbp - 4]	      8386	screen.c	FUNCTION_62	CALL_1
0x10b2a	            0x89ce	                            mov esi, ecx	      8386	screen.c	FUNCTION_62	CALL_1
0x10b2c	            0x89c7	                            mov edi, eax	      8386	screen.c	FUNCTION_62	CALL_1
0x10b2e	      0xe853fdffff	                    call sym.screen_char	      8386	screen.c	FUNCTION_62	CALL_1
0x10b33	    0x488b05000000	            mov rax, qword [0x04010b7a] 	      8387	screen.c	FUNCTION_62	CALL_2
0x10b3a	          0x8b55fc	                mov edx, dword [rbp - 4]	      8387	screen.c	FUNCTION_62	CALL_2
0x10b3d	          0x83c201	                              add edx, 1	      8387	screen.c	FUNCTION_62	CALL_2
0x10b40	            0x89d2	                            mov edx, edx	      8387	screen.c	FUNCTION_62	CALL_2
0x10b42	          0x4801d0	                            add rax, rdx	      8387	screen.c	FUNCTION_62	CALL_2
0x10b45	           0xfb600	                   movzx eax, byte [rax]	      8387	screen.c	FUNCTION_62	CALL_2
0x10b48	           0xfb6c0	                           movzx eax, al	      8387	screen.c	FUNCTION_62	CALL_2
0x10b4b	            0x89c7	                            mov edi, eax	      8387	screen.c	FUNCTION_62	CALL_2
0x10b4d	      0xe800000000	                          call 0x4010b92	      8387	screen.c	FUNCTION_62	CALL_2
0x10b52	    0x8b0500000000	            mov eax, dword [0x04010b98] 	      8388	screen.c	FUNCTION_62
0x10b58	          0x83c001	                              add eax, 1	      8388	screen.c	FUNCTION_62
0x10b5b	    0x890500000000	            mov dword [0x04010ba1], eax 	      8388	screen.c	FUNCTION_62
0x10b61	            0xeb01	                           jmp 0x4010ba4	      8388	screen.c	FUNCTION_62
0x10b63	              0x90	                                     nop	      8374	screen.c	FUNCTION_62	IF_1
0x10b64	              0xc9	                                   leave	      8389	screen.c	FUNCTION_62
0x10b65	              0xc3	                                     ret	      8389	screen.c	FUNCTION_62
win_del_lines	DO,0:functions,0:CALL,6:ELSE,1:IF,6:WHILE,0:FOR,0:SWITCH,0	105
0x12de8	              0x55	                                push rbp	      9574	screen.c	FUNCTION_81
0x12de9	          0x4889e5	                            mov rbp, rsp	      9574	screen.c	FUNCTION_81
0x12dec	        0x4883ec30	                           sub rsp, 0x30	      9574	screen.c	FUNCTION_81
0x12df0	        0x48897de8	             mov qword [rbp - 0x18], rdi	      9574	screen.c	FUNCTION_81
0x12df4	          0x8975e4	             mov dword [rbp - 0x1c], esi	      9574	screen.c	FUNCTION_81
0x12df7	          0x8955e0	             mov dword [rbp - 0x20], edx	      9574	screen.c	FUNCTION_81
0x12dfa	          0x894ddc	             mov dword [rbp - 0x24], ecx	      9574	screen.c	FUNCTION_81
0x12dfd	        0x448945d8	             mov dword [rbp - 0x28], r8d	      9574	screen.c	FUNCTION_81
0x12e01	        0x44894dd4	             mov dword [rbp - 0x2c], r9d	      9574	screen.c	FUNCTION_81
0x12e05	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      9577	screen.c	FUNCTION_81	IF_1
0x12e09	            0x740e	                            je 0x4012e59	      9577	screen.c	FUNCTION_81	IF_1
0x12e0b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9578	screen.c	FUNCTION_81	IF_1
0x12e0f	    0xc780f8000000	               mov dword [rax + 0xf8], 0	      9578	screen.c	FUNCTION_81	IF_1
0x12e19	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9580	screen.c	FUNCTION_81	IF_2
0x12e1d	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      9580	screen.c	FUNCTION_81	IF_2
0x12e23	          0x2b45e4	             sub eax, dword [rbp - 0x1c]	      9580	screen.c	FUNCTION_81	IF_2
0x12e26	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	      9580	screen.c	FUNCTION_81	IF_2
0x12e29	            0x7d10	                           jge 0x4012e7b	      9580	screen.c	FUNCTION_81	IF_2
0x12e2b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9581	screen.c	FUNCTION_81	IF_2
0x12e2f	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      9581	screen.c	FUNCTION_81	IF_2
0x12e35	          0x2b45e4	             sub eax, dword [rbp - 0x1c]	      9581	screen.c	FUNCTION_81	IF_2
0x12e38	          0x8945e0	             mov dword [rbp - 0x20], eax	      9581	screen.c	FUNCTION_81	IF_2
0x12e3b	          0x8b7dd4	             mov edi, dword [rbp - 0x2c]	      9583	screen.c	FUNCTION_81	CALL_1
0x12e3e	          0x8b4dd8	             mov ecx, dword [rbp - 0x28]	      9583	screen.c	FUNCTION_81	CALL_1
0x12e41	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      9583	screen.c	FUNCTION_81	CALL_1
0x12e44	          0x8b75e4	             mov esi, dword [rbp - 0x1c]	      9583	screen.c	FUNCTION_81	CALL_1
0x12e47	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9583	screen.c	FUNCTION_81	CALL_1
0x12e4b	          0x4189f9	                            mov r9d, edi	      9583	screen.c	FUNCTION_81	CALL_1
0x12e4e	    0x41b801000000	                              mov r8d, 1	      9583	screen.c	FUNCTION_81	CALL_1
0x12e54	          0x4889c7	                            mov rdi, rax	      9583	screen.c	FUNCTION_81	CALL_1
0x12e57	      0xe81c010000	                   call sym.win_do_lines	      9583	screen.c	FUNCTION_81	CALL_1
0x12e5c	          0x8945fc	                mov dword [rbp - 4], eax	      9583	screen.c	FUNCTION_81	CALL_1
0x12e5f	        0x837dfc02	                  cmp dword [rbp - 4], 2	      9584	screen.c	FUNCTION_81	IF_3
0x12e63	            0x7408	                            je 0x4012ead	      9584	screen.c	FUNCTION_81	IF_3
0x12e65	          0x8b45fc	                mov eax, dword [rbp - 4]	      9585	screen.c	FUNCTION_81	IF_3
0x12e68	      0xe909010000	                           jmp 0x4012fb6	      9585	screen.c	FUNCTION_81	IF_3
0x12e6d	    0x488b05000000	            mov rax, qword [0x04012eb4] 	      9587	screen.c	FUNCTION_81	IF_4	CALL_3
0x12e74	            0x89c1	                            mov ecx, eax	      9587	screen.c	FUNCTION_81	IF_4	CALL_3
0x12e76	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9587	screen.c	FUNCTION_81	IF_4	CALL_3
0x12e7a	    0x8b909c000000	            mov edx, dword [rax + 0x9c] 	      9587	screen.c	FUNCTION_81	IF_4	CALL_3
0x12e80	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9587	screen.c	FUNCTION_81	IF_4	CALL_3
0x12e84	    0x8b80a8010000	           mov eax, dword [rax + 0x1a8] 	      9587	screen.c	FUNCTION_81	IF_4	CALL_3
0x12e8a	             0x1c2	                            add edx, eax	      9587	screen.c	FUNCTION_81	IF_4	CALL_3
0x12e8c	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      9587	screen.c	FUNCTION_81	IF_4	CALL_3
0x12e8f	          0x8d3402	                    lea esi, [rdx + rax]	      9587	screen.c	FUNCTION_81	IF_4	CALL_3
0x12e92	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      9587	screen.c	FUNCTION_81	IF_4	CALL_3
0x12e95	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      9587	screen.c	FUNCTION_81	IF_4	CALL_3
0x12e98	        0x4883ec08	                              sub rsp, 8	      9587	screen.c	FUNCTION_81	IF_4	CALL_3
0x12e9c	            0x6a00	                                  push 0	      9587	screen.c	FUNCTION_81	IF_4	CALL_3
0x12e9e	          0x4189d1	                            mov r9d, edx	      9587	screen.c	FUNCTION_81	IF_4	CALL_3
0x12ea1	    0x41b800000000	                              mov r8d, 0	      9587	screen.c	FUNCTION_81	IF_4	CALL_3
0x12ea7	            0x89c2	                            mov edx, eax	      9587	screen.c	FUNCTION_81	IF_4	CALL_3
0x12ea9	      0xbf00000000	                              mov edi, 0	      9587	screen.c	FUNCTION_81	IF_4	CALL_3
0x12eae	      0xe800000000	                          call 0x4012ef3	      9587	screen.c	FUNCTION_81	IF_4	CALL_3
0x12eb3	        0x4883c410	                           add rsp, 0x10	      9587	screen.c	FUNCTION_81	IF_4	CALL_3
0x12eb7	            0x85c0	                           test eax, eax	      9587	screen.c	FUNCTION_81	IF_4	CALL_3
0x12eb9	            0x750a	                           jne 0x4012f05	      9587	screen.c	FUNCTION_81	IF_4	CALL_3
0x12ebb	      0xb800000000	                              mov eax, 0	      9589	screen.c	FUNCTION_81	IF_4
0x12ec0	      0xe9b1000000	                           jmp 0x4012fb6	      9589	screen.c	FUNCTION_81	IF_4
0x12ec5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9595	screen.c	FUNCTION_81	IF_5
0x12ec9	        0x488b4020	            mov rax, qword [rax + 0x20] 	      9595	screen.c	FUNCTION_81	IF_5
0x12ecd	          0x4885c0	                           test rax, rax	      9595	screen.c	FUNCTION_81	IF_5
0x12ed0	            0x7526	                           jne 0x4012f38	      9595	screen.c	FUNCTION_81	IF_5
0x12ed2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9595	screen.c	FUNCTION_81	IF_5
0x12ed6	    0x8b80a4000000	            mov eax, dword [rax + 0xa4] 	      9595	screen.c	FUNCTION_81	IF_5
0x12edc	            0x85c0	                           test eax, eax	      9595	screen.c	FUNCTION_81	IF_5
0x12ede	            0x7518	                           jne 0x4012f38	      9595	screen.c	FUNCTION_81	IF_5
0x12ee0	    0x8b0500000000	            mov eax, dword [0x04012f26] 	      9595	screen.c	FUNCTION_81	IF_5
0x12ee6	            0x4898	                                    cdqe	      9595	screen.c	FUNCTION_81	IF_5
0x12ee8	    0x488b15000000	            mov rdx, qword [0x04012f2f] 	      9595	screen.c	FUNCTION_81	IF_5
0x12eef	        0x4883ea01	                              sub rdx, 1	      9595	screen.c	FUNCTION_81	IF_5
0x12ef3	          0x4839d0	                            cmp rax, rdx	      9595	screen.c	FUNCTION_81	IF_5
0x12ef6	            0x7d6f	                           jge 0x4012fa7	      9595	screen.c	FUNCTION_81	IF_5
0x12ef8	    0x488b05000000	            mov rax, qword [0x04012f3f] 	      9597	screen.c	FUNCTION_81	IF_5	IF_6	CALL_5
0x12eff	            0x89c6	                            mov esi, eax	      9597	screen.c	FUNCTION_81	IF_5	IF_6	CALL_5
0x12f01	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9597	screen.c	FUNCTION_81	IF_5	IF_6	CALL_5
0x12f05	    0x8b909c000000	            mov edx, dword [rax + 0x9c] 	      9597	screen.c	FUNCTION_81	IF_5	IF_6	CALL_5
0x12f0b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9597	screen.c	FUNCTION_81	IF_5	IF_6	CALL_5
0x12f0f	    0x8b80a8010000	           mov eax, dword [rax + 0x1a8] 	      9597	screen.c	FUNCTION_81	IF_5	IF_6	CALL_5
0x12f15	             0x1c2	                            add edx, eax	      9597	screen.c	FUNCTION_81	IF_5	IF_6	CALL_5
0x12f17	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9597	screen.c	FUNCTION_81	IF_5	IF_6	CALL_5
0x12f1b	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      9597	screen.c	FUNCTION_81	IF_5	IF_6	CALL_5
0x12f21	             0x1d0	                            add eax, edx	      9597	screen.c	FUNCTION_81	IF_5	IF_6	CALL_5
0x12f23	          0x2b45e0	             sub eax, dword [rbp - 0x20]	      9597	screen.c	FUNCTION_81	IF_5	IF_6	CALL_5
0x12f26	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	      9597	screen.c	FUNCTION_81	IF_5	IF_6	CALL_5
0x12f29	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      9597	screen.c	FUNCTION_81	IF_5	IF_6	CALL_5
0x12f2c	    0x41b900000000	                              mov r9d, 0	      9597	screen.c	FUNCTION_81	IF_5	IF_6	CALL_5
0x12f32	          0x4189c8	                            mov r8d, ecx	      9597	screen.c	FUNCTION_81	IF_5	IF_6	CALL_5
0x12f35	            0x89f1	                            mov ecx, esi	      9597	screen.c	FUNCTION_81	IF_5	IF_6	CALL_5
0x12f37	            0x89c6	                            mov esi, eax	      9597	screen.c	FUNCTION_81	IF_5	IF_6	CALL_5
0x12f39	      0xbf00000000	                              mov edi, 0	      9597	screen.c	FUNCTION_81	IF_5	IF_6	CALL_5
0x12f3e	      0xe800000000	                          call 0x4012f83	      9597	screen.c	FUNCTION_81	IF_5	IF_6	CALL_5
0x12f43	            0x85c0	                           test eax, eax	      9597	screen.c	FUNCTION_81	IF_5	IF_6	CALL_5
0x12f45	            0x752a	                           jne 0x4012fb1	      9597	screen.c	FUNCTION_81	IF_5	IF_6	CALL_5
0x12f47	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9600	screen.c	FUNCTION_81	IF_5	IF_6
0x12f4b	    0xc78040010000	              mov dword [rax + 0x140], 1	      9600	screen.c	FUNCTION_81	IF_5	IF_6
0x12f55	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9601	screen.c	FUNCTION_81	IF_5	IF_6	CALL_6
0x12f59	        0x488b4020	            mov rax, qword [rax + 0x20] 	      9601	screen.c	FUNCTION_81	IF_5	IF_6	CALL_6
0x12f5d	          0x4889c7	                            mov rdi, rax	      9601	screen.c	FUNCTION_81	IF_5	IF_6	CALL_6
0x12f60	      0xe8d9020000	               call sym.win_rest_invalid	      9601	screen.c	FUNCTION_81	IF_5	IF_6	CALL_6
0x12f65	            0xeb0a	                           jmp 0x4012fb1	      9597	screen.c	FUNCTION_81	IF_5	IF_6	CALL_5
0x12f67	    0xc70500000000	               mov dword [0x04012fb1], 1	      9609	screen.c	FUNCTION_81	ELSE_1
0x12f71	      0xb801000000	                              mov eax, 1	      9610	screen.c	FUNCTION_81	ELSE_1
0x12f76	              0xc9	                                   leave	      9611	screen.c	FUNCTION_81	ELSE_1
0x12f77	              0xc3	                                     ret	      9611	screen.c	FUNCTION_81	ELSE_1
reset_cterm_colors	DO,0:functions,0:CALL,2:ELSE,0:IF,4:WHILE,0:FOR,0:SWITCH,0	48
0x107ca	              0x55	                                push rbp	      8248	screen.c	FUNCTION_60
0x107cb	          0x4889e5	                            mov rbp, rsp	      8248	screen.c	FUNCTION_60
0x107ce	    0x8b0500000000	            mov eax, dword [0x04010814] 	      8249	screen.c	FUNCTION_60	IF_1
0x107d4	          0x83f801	                              cmp eax, 1	      8249	screen.c	FUNCTION_60	IF_1
0x107d7	            0x7f0e	                            jg 0x4010827	      8249	screen.c	FUNCTION_60	IF_1
0x107d9	    0x8b0500000000	            mov eax, dword [0x0401081f] 	      8249	screen.c	FUNCTION_60	IF_1
0x107df	            0x85c0	                           test eax, eax	      8249	screen.c	FUNCTION_60	IF_1
0x107e1	     0xf849c000000	                            je 0x40108c3	      8249	screen.c	FUNCTION_60	IF_1
0x107e7	    0x8b0500000000	            mov eax, dword [0x0401082d] 	      8253	screen.c	FUNCTION_60	IF_1	IF_2
0x107ed	            0x85c0	                           test eax, eax	      8253	screen.c	FUNCTION_60	IF_1	IF_2
0x107ef	            0x742f	                            je 0x4010860	      8253	screen.c	FUNCTION_60	IF_1	IF_2
0x107f1	    0x488b05000000	            mov rax, qword [0x04010838] 	      8253	screen.c	FUNCTION_60	IF_1	IF_2
0x107f8	    0x483dffffff01	                      cmp rax, 0x1ffffff	      8254	screen.c	FUNCTION_60	IF_1	IF_2
0x107fe	            0x750f	                           jne 0x401084f	      8254	screen.c	FUNCTION_60	IF_1	IF_2
0x10800	    0x488b05000000	            mov rax, qword [0x04010847] 	      8254	screen.c	FUNCTION_60	IF_1	IF_2
0x10807	    0x483dffffff01	                      cmp rax, 0x1ffffff	      8254	screen.c	FUNCTION_60	IF_1	IF_2
0x1080d	            0x7407	                            je 0x4010856	      8254	screen.c	FUNCTION_60	IF_1	IF_2
0x1080f	      0xb801000000	                              mov eax, 1	      8254	screen.c	FUNCTION_60	IF_1	IF_2
0x10814	            0xeb05	                           jmp 0x401085b	      8254	screen.c	FUNCTION_60	IF_1	IF_2
0x10816	      0xb800000000	                              mov eax, 0	      8254	screen.c	FUNCTION_60	IF_1	IF_2
0x1081b	          0x83e001	                              and eax, 1	      8253	screen.c	FUNCTION_60	IF_1	IF_2
0x1081e	            0xeb23	                           jmp 0x4010883	      8253	screen.c	FUNCTION_60	IF_1	IF_2
0x10820	    0x8b0500000000	            mov eax, dword [0x04010866] 	      8255	screen.c	FUNCTION_60	IF_1	IF_2
0x10826	            0x85c0	                           test eax, eax	      8255	screen.c	FUNCTION_60	IF_1	IF_2
0x10828	            0x7f0a	                            jg 0x4010874	      8255	screen.c	FUNCTION_60	IF_1	IF_2
0x1082a	    0x8b0500000000	            mov eax, dword [0x04010870] 	      8255	screen.c	FUNCTION_60	IF_1	IF_2
0x10830	            0x85c0	                           test eax, eax	      8255	screen.c	FUNCTION_60	IF_1	IF_2
0x10832	            0x7e07	                           jle 0x401087b	      8255	screen.c	FUNCTION_60	IF_1	IF_2
0x10834	      0xb801000000	                              mov eax, 1	      8255	screen.c	FUNCTION_60	IF_1	IF_2
0x10839	            0xeb05	                           jmp 0x4010880	      8255	screen.c	FUNCTION_60	IF_1	IF_2
0x1083b	      0xb800000000	                              mov eax, 0	      8255	screen.c	FUNCTION_60	IF_1	IF_2
0x10840	          0x83e001	                              and eax, 1	      8253	screen.c	FUNCTION_60	IF_1	IF_2
0x10843	            0x84c0	                             test al, al	      8253	screen.c	FUNCTION_60	IF_1	IF_2
0x10845	            0x7419	                            je 0x40108a0	      8253	screen.c	FUNCTION_60	IF_1	IF_2
0x10847	    0x488b05000000	            mov rax, qword [0x0401088e] 	      8260	screen.c	FUNCTION_60	IF_1	IF_2	IF_3	CALL_1
0x1084e	          0x4889c7	                            mov rdi, rax	      8260	screen.c	FUNCTION_60	IF_1	IF_2	IF_3	CALL_1
0x10851	      0xe800000000	                          call 0x4010896	      8260	screen.c	FUNCTION_60	IF_1	IF_2	IF_3	CALL_1
0x10856	    0xc70500000000	     mov dword [0x040108a0], 0xffffffff 	      8261	screen.c	FUNCTION_60	IF_1	IF_2	IF_3
0x10860	    0x8b0500000000	            mov eax, dword [0x040108a6] 	      8263	screen.c	FUNCTION_60	IF_1	IF_4
0x10866	            0x85c0	                           test eax, eax	      8263	screen.c	FUNCTION_60	IF_1	IF_4
0x10868	            0x7419	                            je 0x40108c3	      8263	screen.c	FUNCTION_60	IF_1	IF_4
0x1086a	    0x488b05000000	            mov rax, qword [0x040108b1] 	      8265	screen.c	FUNCTION_60	IF_1	IF_4	CALL_2
0x10871	          0x4889c7	                            mov rdi, rax	      8265	screen.c	FUNCTION_60	IF_1	IF_4	CALL_2
0x10874	      0xe800000000	                          call 0x40108b9	      8265	screen.c	FUNCTION_60	IF_1	IF_4	CALL_2
0x10879	    0xc70500000000	     mov dword [0x040108c3], 0xffffffff 	      8266	screen.c	FUNCTION_60	IF_1	IF_4
0x10883	              0x90	                                     nop	      8269	screen.c	FUNCTION_60
0x10884	              0x5d	                                 pop rbp	      8269	screen.c	FUNCTION_60
0x10885	              0xc3	                                     ret	      8269	screen.c	FUNCTION_60
copy_text_attr	DO,0:functions,0:CALL,2:ELSE,0:IF,1:WHILE,0:FOR,1:SWITCH,0	49
0x5cc5	              0x55	                                push rbp	      2928	screen.c	FUNCTION_26
0x5cc6	          0x4889e5	                            mov rbp, rsp	      2928	screen.c	FUNCTION_26
0x5cc9	        0x4883ec30	                           sub rsp, 0x30	      2928	screen.c	FUNCTION_26
0x5ccd	          0x897dec	             mov dword [rbp - 0x14], edi	      2928	screen.c	FUNCTION_26
0x5cd0	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2928	screen.c	FUNCTION_26
0x5cd4	          0x8955e8	             mov dword [rbp - 0x18], edx	      2928	screen.c	FUNCTION_26
0x5cd7	          0x894ddc	             mov dword [rbp - 0x24], ecx	      2928	screen.c	FUNCTION_26
0x5cda	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      2931	screen.c	FUNCTION_26	CALL_1
0x5cdd	          0x4863d0	                         movsxd rdx, eax	      2931	screen.c	FUNCTION_26	CALL_1
0x5ce0	    0x488b0d000000	            mov rcx, qword [0x04005d27] 	      2931	screen.c	FUNCTION_26	CALL_1
0x5ce7	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2931	screen.c	FUNCTION_26	CALL_1
0x5cea	            0x4898	                                    cdqe	      2931	screen.c	FUNCTION_26	CALL_1
0x5cec	          0x4801c1	                            add rcx, rax	      2931	screen.c	FUNCTION_26	CALL_1
0x5cef	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2931	screen.c	FUNCTION_26	CALL_1
0x5cf3	          0x4889c6	                            mov rsi, rax	      2931	screen.c	FUNCTION_26	CALL_1
0x5cf6	          0x4889cf	                            mov rdi, rcx	      2931	screen.c	FUNCTION_26	CALL_1
0x5cf9	      0xe800000000	                          call 0x4005d3e	      2931	screen.c	FUNCTION_26	CALL_1
0x5cfe	    0x8b0500000000	            mov eax, dword [0x04005d44] 	      2933	screen.c	FUNCTION_26	IF_1
0x5d04	            0x85c0	                           test eax, eax	      2933	screen.c	FUNCTION_26	IF_1
0x5d06	            0x742e	                            je 0x4005d76	      2933	screen.c	FUNCTION_26	IF_1
0x5d08	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      2934	screen.c	FUNCTION_26	CALL_2
0x5d0b	            0x4898	                                    cdqe	      2934	screen.c	FUNCTION_26	CALL_2
0x5d0d	    0x488d14850000	                        lea rdx, [rax*4]	      2934	screen.c	FUNCTION_26	CALL_2
0x5d15	    0x488b05000000	            mov rax, qword [0x04005d5c] 	      2934	screen.c	FUNCTION_26	CALL_2
0x5d1c	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	      2934	screen.c	FUNCTION_26	CALL_2
0x5d1f	          0x4863c9	                         movsxd rcx, ecx	      2934	screen.c	FUNCTION_26	CALL_2
0x5d22	        0x48c1e102	                              shl rcx, 2	      2934	screen.c	FUNCTION_26	CALL_2
0x5d26	          0x4801c8	                            add rax, rcx	      2934	screen.c	FUNCTION_26	CALL_2
0x5d29	      0xbe00000000	                              mov esi, 0	      2934	screen.c	FUNCTION_26	CALL_2
0x5d2e	          0x4889c7	                            mov rdi, rax	      2934	screen.c	FUNCTION_26	CALL_2
0x5d31	      0xe800000000	                          call 0x4005d76	      2934	screen.c	FUNCTION_26	CALL_2
0x5d36	    0xc745fc000000	                  mov dword [rbp - 4], 0	      2936	screen.c	FUNCTION_26	FOR_1
0x5d3d	            0xeb22	                           jmp 0x4005da1	      2936	screen.c	FUNCTION_26	FOR_1
0x5d3f	    0x488b05000000	            mov rax, qword [0x04005d86] 	      2937	screen.c	FUNCTION_26	FOR_1
0x5d46	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	      2937	screen.c	FUNCTION_26	FOR_1
0x5d49	          0x8b55fc	                mov edx, dword [rbp - 4]	      2937	screen.c	FUNCTION_26	FOR_1
0x5d4c	             0x1ca	                            add edx, ecx	      2937	screen.c	FUNCTION_26	FOR_1
0x5d4e	          0x4863d2	                         movsxd rdx, edx	      2937	screen.c	FUNCTION_26	FOR_1
0x5d51	          0x4801d2	                            add rdx, rdx	      2937	screen.c	FUNCTION_26	FOR_1
0x5d54	          0x4801d0	                            add rax, rdx	      2937	screen.c	FUNCTION_26	FOR_1
0x5d57	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      2937	screen.c	FUNCTION_26	FOR_1
0x5d5a	          0x668910	                      mov word [rax], dx	      2937	screen.c	FUNCTION_26	FOR_1
0x5d5d	        0x8345fc01	                  add dword [rbp - 4], 1	      2936	screen.c	FUNCTION_26	FOR_1
0x5d61	          0x8b45fc	                mov eax, dword [rbp - 4]	      2936	screen.c	FUNCTION_26	FOR_1
0x5d64	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	      2936	screen.c	FUNCTION_26	FOR_1
0x5d67	            0x7cd6	                            jl 0x4005d7f	      2936	screen.c	FUNCTION_26	FOR_1
0x5d69	              0x90	                                     nop	      2938	screen.c	FUNCTION_26
0x5d6a	              0xc9	                                   leave	      2938	screen.c	FUNCTION_26
0x5d6b	              0xc3	                                     ret	      2938	screen.c	FUNCTION_26
conceal_cursor_line	DO,0:functions,0:CALL,2:ELSE,4:IF,5:WHILE,0:FOR,0:SWITCH,0	48
0x10ac	              0x55	                                push rbp	       881	screen.c	FUNCTION_15
0x10ad	          0x4889e5	                            mov rbp, rsp	       881	screen.c	FUNCTION_15
0x10b0	        0x4883ec20	                           sub rsp, 0x20	       881	screen.c	FUNCTION_15
0x10b4	        0x48897de8	             mov qword [rbp - 0x18], rdi	       881	screen.c	FUNCTION_15
0x10b8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       884	screen.c	FUNCTION_15	IF_1
0x10bc	    0x488b80a00200	           mov rax, qword [rax + 0x2a0] 	       884	screen.c	FUNCTION_15	IF_1
0x10c3	           0xfb600	                   movzx eax, byte [rax]	       884	screen.c	FUNCTION_15	IF_1
0x10c6	            0x84c0	                             test al, al	       884	screen.c	FUNCTION_15	IF_1
0x10c8	            0x7507	                           jne 0x4001111	       884	screen.c	FUNCTION_15	IF_1
0x10ca	      0xb800000000	                              mov eax, 0	       885	screen.c	FUNCTION_15	IF_1
0x10cf	            0xeb7f	                           jmp 0x4001190	       885	screen.c	FUNCTION_15	IF_1
0x10d1	      0xe800000000	                          call 0x4001116	       886	screen.c	FUNCTION_15	IF_2	CALL_1
0x10d6	          0x83e002	                              and eax, 2	       886	screen.c	FUNCTION_15	IF_2	CALL_1
0x10d9	            0x85c0	                           test eax, eax	       886	screen.c	FUNCTION_15	IF_2	CALL_1
0x10db	            0x7409	                            je 0x4001126	       886	screen.c	FUNCTION_15	IF_2	CALL_1
0x10dd	    0xc745fc760000	               mov dword [rbp - 4], 0x76	       887	screen.c	FUNCTION_15	IF_2
0x10e4	            0xeb49	                           jmp 0x400116f	       887	screen.c	FUNCTION_15	IF_2
0x10e6	    0x8b0500000000	            mov eax, dword [0x0400112c] 	       888	screen.c	FUNCTION_15	ELSE_1	IF_3
0x10ec	          0x83e010	                           and eax, 0x10	       888	screen.c	FUNCTION_15	ELSE_1	IF_3
0x10ef	            0x85c0	                           test eax, eax	       888	screen.c	FUNCTION_15	ELSE_1	IF_3
0x10f1	            0x7409	                            je 0x400113c	       888	screen.c	FUNCTION_15	ELSE_1	IF_3
0x10f3	    0xc745fc690000	               mov dword [rbp - 4], 0x69	       889	screen.c	FUNCTION_15	ELSE_1	IF_3
0x10fa	            0xeb33	                           jmp 0x400116f	       889	screen.c	FUNCTION_15	ELSE_1	IF_3
0x10fc	    0x8b0500000000	            mov eax, dword [0x04001142] 	       890	screen.c	FUNCTION_15	ELSE_2	IF_4
0x1102	          0x83e001	                              and eax, 1	       890	screen.c	FUNCTION_15	ELSE_2	IF_4
0x1105	            0x85c0	                           test eax, eax	       890	screen.c	FUNCTION_15	ELSE_2	IF_4
0x1107	            0x7409	                            je 0x4001152	       890	screen.c	FUNCTION_15	ELSE_2	IF_4
0x1109	    0xc745fc6e0000	               mov dword [rbp - 4], 0x6e	       891	screen.c	FUNCTION_15	ELSE_2	IF_4
0x1110	            0xeb1d	                           jmp 0x400116f	       891	screen.c	FUNCTION_15	ELSE_2	IF_4
0x1112	    0x8b0500000000	            mov eax, dword [0x04001158] 	       892	screen.c	FUNCTION_15	ELSE_3	IF_5
0x1118	          0x83e008	                              and eax, 8	       892	screen.c	FUNCTION_15	ELSE_3	IF_5
0x111b	            0x85c0	                           test eax, eax	       892	screen.c	FUNCTION_15	ELSE_3	IF_5
0x111d	            0x7409	                            je 0x4001168	       892	screen.c	FUNCTION_15	ELSE_3	IF_5
0x111f	    0xc745fc630000	               mov dword [rbp - 4], 0x63	       893	screen.c	FUNCTION_15	ELSE_3	IF_5
0x1126	            0xeb07	                           jmp 0x400116f	       893	screen.c	FUNCTION_15	ELSE_3	IF_5
0x1128	      0xb800000000	                              mov eax, 0	       895	screen.c	FUNCTION_15	ELSE_4
0x112d	            0xeb21	                           jmp 0x4001190	       895	screen.c	FUNCTION_15	ELSE_4
0x112f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       896	screen.c	FUNCTION_15	CALL_2
0x1133	    0x488b80a00200	           mov rax, qword [rax + 0x2a0] 	       896	screen.c	FUNCTION_15	CALL_2
0x113a	          0x8b55fc	                mov edx, dword [rbp - 4]	       896	screen.c	FUNCTION_15	CALL_2
0x113d	            0x89d6	                            mov esi, edx	       896	screen.c	FUNCTION_15	CALL_2
0x113f	          0x4889c7	                            mov rdi, rax	       896	screen.c	FUNCTION_15	CALL_2
0x1142	      0xe800000000	                          call 0x4001187	       896	screen.c	FUNCTION_15	CALL_2
0x1147	          0x4885c0	                           test rax, rax	       896	screen.c	FUNCTION_15	CALL_2
0x114a	           0xf95c0	                                setne al	       896	screen.c	FUNCTION_15	CALL_2
0x114d	           0xfb6c0	                           movzx eax, al	       896	screen.c	FUNCTION_15	CALL_2
0x1150	              0xc9	                                   leave	       897	screen.c	FUNCTION_15
0x1151	              0xc3	                                     ret	       897	screen.c	FUNCTION_15
status_match_len	DO,0:functions,0:CALL,4:ELSE,0:IF,1:WHILE,1:FOR,0:SWITCH,0	56
0xcfd8	              0x55	                                push rbp	      6554	screen.c	FUNCTION_39
0xcfd9	          0x4889e5	                            mov rbp, rsp	      6554	screen.c	FUNCTION_39
0xcfdc	        0x4883ec20	                           sub rsp, 0x20	      6554	screen.c	FUNCTION_39
0xcfe0	        0x48897de8	             mov qword [rbp - 0x18], rdi	      6554	screen.c	FUNCTION_39
0xcfe4	        0x488975e0	             mov qword [rbp - 0x20], rsi	      6554	screen.c	FUNCTION_39
0xcfe8	    0xc745f8000000	                  mov dword [rbp - 8], 0	      6555	screen.c	FUNCTION_39
0xcfef	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6558	screen.c	FUNCTION_39
0xcff3	            0x8b00	                    mov eax, dword [rax]	      6558	screen.c	FUNCTION_39
0xcff5	          0x83f80b	                            cmp eax, 0xb	      6559	screen.c	FUNCTION_39
0xcff8	            0x740b	                            je 0x400d045	      6559	screen.c	FUNCTION_39
0xcffa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6559	screen.c	FUNCTION_39
0xcffe	            0x8b00	                    mov eax, dword [rax]	      6559	screen.c	FUNCTION_39
0xd000	          0x83f815	                           cmp eax, 0x15	      6559	screen.c	FUNCTION_39
0xd003	            0x7507	                           jne 0x400d04c	      6559	screen.c	FUNCTION_39
0xd005	      0xb801000000	                              mov eax, 1	      6559	screen.c	FUNCTION_39
0xd00a	            0xeb05	                           jmp 0x400d051	      6559	screen.c	FUNCTION_39
0xd00c	      0xb800000000	                              mov eax, 0	      6559	screen.c	FUNCTION_39
0xd011	          0x8945fc	                mov dword [rbp - 4], eax	      6558	screen.c	FUNCTION_39
0xd014	        0x837dfc00	                  cmp dword [rbp - 4], 0	      6562	screen.c	FUNCTION_39	IF_1	CALL_1
0xd018	            0x7466	                            je 0x400d0c0	      6562	screen.c	FUNCTION_39	IF_1	CALL_1
0xd01a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6562	screen.c	FUNCTION_39	IF_1	CALL_1
0xd01e	          0x4889c7	                            mov rdi, rax	      6562	screen.c	FUNCTION_39	IF_1	CALL_1
0xd021	      0xe800000000	                          call 0x400d066	      6562	screen.c	FUNCTION_39	IF_1	CALL_1
0xd026	            0x85c0	                           test eax, eax	      6562	screen.c	FUNCTION_39	IF_1	CALL_1
0xd028	            0x7456	                            je 0x400d0c0	      6562	screen.c	FUNCTION_39	IF_1	CALL_1
0xd02a	      0xb801000000	                              mov eax, 1	      6563	screen.c	FUNCTION_39	IF_1
0xd02f	            0xeb5d	                           jmp 0x400d0ce	      6563	screen.c	FUNCTION_39	IF_1
0xd031	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      6568	screen.c	FUNCTION_39	WHILE_1	CALL_2
0xd035	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6568	screen.c	FUNCTION_39	WHILE_1	CALL_2
0xd039	          0x4889d6	                            mov rsi, rdx	      6568	screen.c	FUNCTION_39	WHILE_1	CALL_2
0xd03c	          0x4889c7	                            mov rdi, rax	      6568	screen.c	FUNCTION_39	WHILE_1	CALL_2
0xd03f	      0xe84c000000	         call sym.skip_status_match_char	      6568	screen.c	FUNCTION_39	WHILE_1	CALL_2
0xd044	            0x4898	                                    cdqe	      6568	screen.c	FUNCTION_39	WHILE_1	CALL_2
0xd046	        0x480145e0	            add qword [rbp - 0x20], rax 	      6568	screen.c	FUNCTION_39	WHILE_1	CALL_2
0xd04a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6569	screen.c	FUNCTION_39	WHILE_1	CALL_3
0xd04e	          0x4889c7	                            mov rdi, rax	      6569	screen.c	FUNCTION_39	WHILE_1	CALL_3
0xd051	      0xe800000000	                          call 0x400d096	      6569	screen.c	FUNCTION_39	WHILE_1	CALL_3
0xd056	           0x145f8	                add dword [rbp - 8], eax	      6569	screen.c	FUNCTION_39	WHILE_1	CALL_3
0xd059	    0x8b0500000000	            mov eax, dword [0x0400d09f] 	      6570	screen.c	FUNCTION_39	WHILE_1	CALL_4
0xd05f	            0x85c0	                           test eax, eax	      6570	screen.c	FUNCTION_39	WHILE_1	CALL_4
0xd061	            0x7412	                            je 0x400d0b5	      6570	screen.c	FUNCTION_39	WHILE_1	CALL_4
0xd063	    0x488b05000000	            mov rax, qword [0x0400d0aa] 	      6570	screen.c	FUNCTION_39	WHILE_1	CALL_4
0xd06a	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      6570	screen.c	FUNCTION_39	WHILE_1	CALL_4
0xd06e	          0x4889d7	                            mov rdi, rdx	      6570	screen.c	FUNCTION_39	WHILE_1	CALL_4
0xd071	            0xffd0	                                call rax	      6570	screen.c	FUNCTION_39	WHILE_1	CALL_4
0xd073	            0xeb05	                           jmp 0x400d0ba	      6570	screen.c	FUNCTION_39	WHILE_1	CALL_4
0xd075	      0xb801000000	                              mov eax, 1	      6570	screen.c	FUNCTION_39	WHILE_1	CALL_4
0xd07a	            0x4898	                                    cdqe	      6570	screen.c	FUNCTION_39	WHILE_1	CALL_4
0xd07c	        0x480145e0	            add qword [rbp - 0x20], rax 	      6570	screen.c	FUNCTION_39	WHILE_1	CALL_4
0xd080	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6566	screen.c	FUNCTION_39	WHILE_1
0xd084	           0xfb600	                   movzx eax, byte [rax]	      6566	screen.c	FUNCTION_39	WHILE_1
0xd087	            0x84c0	                             test al, al	      6566	screen.c	FUNCTION_39	WHILE_1
0xd089	            0x75a6	                           jne 0x400d071	      6566	screen.c	FUNCTION_39	WHILE_1
0xd08b	          0x8b45f8	                mov eax, dword [rbp - 8]	      6573	screen.c	FUNCTION_39
0xd08e	              0xc9	                                   leave	      6574	screen.c	FUNCTION_39
0xd08f	              0xc3	                                     ret	      6574	screen.c	FUNCTION_39
redrawing	DO,0:functions,0:CALL,1:ELSE,1:IF,1:WHILE,0:FOR,0:SWITCH,0	28
0x14ceb	              0x55	                                push rbp	     10731	screen.c	ELSE_1	FUNCTION_95
0x14cec	          0x4889e5	                            mov rbp, rsp	     10731	screen.c	ELSE_1	FUNCTION_95
0x14cef	    0x8b0500000000	            mov eax, dword [0x04014d35] 	     10733	screen.c	ELSE_1	FUNCTION_95	IF_1
0x14cf5	            0x85c0	                           test eax, eax	     10733	screen.c	ELSE_1	FUNCTION_95	IF_1
0x14cf7	            0x7407	                            je 0x4014d40	     10733	screen.c	ELSE_1	FUNCTION_95	IF_1
0x14cf9	      0xb800000000	                              mov eax, 0	     10734	screen.c	ELSE_1	FUNCTION_95	IF_1
0x14cfe	            0xeb3e	                           jmp 0x4014d7e	     10734	screen.c	ELSE_1	FUNCTION_95	IF_1
0x14d00	    0x8b0500000000	            mov eax, dword [0x04014d46] 	     10737	screen.c	FUNCTION_95
0x14d06	            0x85c0	                           test eax, eax	     10738	screen.c	FUNCTION_95	ELSE_1	CALL_1
0x14d08	            0x752e	                           jne 0x4014d78	     10738	screen.c	FUNCTION_95	ELSE_1	CALL_1
0x14d0a	    0x8b0500000000	            mov eax, dword [0x04014d50] 	     10738	screen.c	FUNCTION_95	ELSE_1	CALL_1
0x14d10	            0x85c0	                           test eax, eax	     10738	screen.c	FUNCTION_95	ELSE_1	CALL_1
0x14d12	            0x741d	                            je 0x4014d71	     10738	screen.c	FUNCTION_95	ELSE_1	CALL_1
0x14d14	      0xe800000000	                          call 0x4014d59	     10738	screen.c	FUNCTION_95	ELSE_1	CALL_1
0x14d19	            0x85c0	                           test eax, eax	     10738	screen.c	FUNCTION_95	ELSE_1	CALL_1
0x14d1b	            0x7414	                            je 0x4014d71	     10738	screen.c	FUNCTION_95	ELSE_1	CALL_1
0x14d1d	    0x8b0500000000	            mov eax, dword [0x04014d63] 	     10738	screen.c	FUNCTION_95	ELSE_1	CALL_1
0x14d23	            0x85c0	                           test eax, eax	     10738	screen.c	FUNCTION_95	ELSE_1	CALL_1
0x14d25	            0x750a	                           jne 0x4014d71	     10738	screen.c	FUNCTION_95	ELSE_1	CALL_1
0x14d27	    0x8b0500000000	            mov eax, dword [0x04014d6d] 	     10738	screen.c	FUNCTION_95	ELSE_1	CALL_1
0x14d2d	            0x85c0	                           test eax, eax	     10738	screen.c	FUNCTION_95	ELSE_1	CALL_1
0x14d2f	            0x7407	                            je 0x4014d78	     10738	screen.c	FUNCTION_95	ELSE_1	CALL_1
0x14d31	      0xb801000000	                              mov eax, 1	     10738	screen.c	FUNCTION_95	ELSE_1	CALL_1
0x14d36	            0xeb05	                           jmp 0x4014d7d	     10737	screen.c	FUNCTION_95
0x14d38	      0xb800000000	                              mov eax, 0	     10738	screen.c	FUNCTION_95	ELSE_1	CALL_1
0x14d3d	              0x90	                                     nop	     10737	screen.c	FUNCTION_95
0x14d3e	              0x5d	                                 pop rbp	     10739	screen.c	FUNCTION_95	ELSE_1
0x14d3f	              0xc3	                                     ret	     10739	screen.c	FUNCTION_95	ELSE_1
win_redr_status	DO,0:functions,0:CALL,37:ELSE,6:IF,17:WHILE,0:FOR,1:SWITCH,0	398
0xd90f	              0x55	                                push rbp	      6829	screen.c	FUNCTION_42
0xd910	          0x4889e5	                            mov rbp, rsp	      6829	screen.c	FUNCTION_42
0xd913	            0x4154	                                push r12	      6829	screen.c	FUNCTION_42
0xd915	              0x53	                                push rbx	      6829	screen.c	FUNCTION_42
0xd916	        0x4883ec40	                           sub rsp, 0x40	      6829	screen.c	FUNCTION_42
0xd91a	        0x48897db8	             mov qword [rbp - 0x48], rdi	      6829	screen.c	FUNCTION_42
0xd91e	    0x64488b042528	                mov rax, qword fs:[0x28]	      6829	screen.c	FUNCTION_42
0xd927	        0x488945e8	             mov qword [rbp - 0x18], rax	      6829	screen.c	FUNCTION_42
0xd92b	            0x31c0	                            xor eax, eax	      6829	screen.c	FUNCTION_42
0xd92d	    0x8b0500000000	            mov eax, dword [0x0400d973] 	      6840	screen.c	FUNCTION_42	IF_1
0xd933	            0x85c0	                           test eax, eax	      6840	screen.c	FUNCTION_42	IF_1
0xd935	     0xf8571050000	                           jne 0x400deec	      6840	screen.c	FUNCTION_42	IF_1
0xd93b	    0xc70500000000	               mov dword [0x0400d985], 1	      6842	screen.c	FUNCTION_42
0xd945	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6844	screen.c	FUNCTION_42
0xd949	    0xc78040010000	              mov dword [rax + 0x140], 0	      6844	screen.c	FUNCTION_42
0xd953	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6845	screen.c	FUNCTION_42	IF_2
0xd957	    0x8b80a4000000	            mov eax, dword [rax + 0xa4] 	      6845	screen.c	FUNCTION_42	IF_2
0xd95d	            0x85c0	                           test eax, eax	      6845	screen.c	FUNCTION_42	IF_2
0xd95f	            0x750f	                           jne 0x400d9b0	      6845	screen.c	FUNCTION_42	IF_2
0xd961	    0xc70500000000	               mov dword [0x0400d9ab], 1	      6848	screen.c	FUNCTION_42	IF_2
0xd96b	      0xe97d040000	                           jmp 0x400de2d	      6848	screen.c	FUNCTION_42	IF_2
0xd970	      0xe800000000	                          call 0x400d9b5	      6850	screen.c	FUNCTION_42	ELSE_1	IF_3	CALL_1
0xd975	            0x85c0	                           test eax, eax	      6850	screen.c	FUNCTION_42	ELSE_1	IF_3	CALL_1
0xd977	            0x7409	                            je 0x400d9c2	      6850	screen.c	FUNCTION_42	ELSE_1	IF_3	CALL_1
0xd979	      0xe800000000	                          call 0x400d9be	      6854	screen.c	FUNCTION_42	ELSE_1	IF_3	CALL_2
0xd97e	            0x85c0	                           test eax, eax	      6854	screen.c	FUNCTION_42	ELSE_1	IF_3	CALL_2
0xd980	            0x7413	                            je 0x400d9d5	      6854	screen.c	FUNCTION_42	ELSE_1	IF_3	CALL_2
0xd982	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6859	screen.c	FUNCTION_42	ELSE_1	IF_3
0xd986	    0xc78040010000	              mov dword [rax + 0x140], 1	      6859	screen.c	FUNCTION_42	ELSE_1	IF_3
0xd990	      0xe958040000	                           jmp 0x400de2d	      6859	screen.c	FUNCTION_42	ELSE_1	IF_3
0xd995	    0x488b05000000	            mov rax, qword [0x0400d9dc] 	      6862	screen.c	FUNCTION_42	ELSE_2	IF_4
0xd99c	           0xfb600	                   movzx eax, byte [rax]	      6862	screen.c	FUNCTION_42	ELSE_2	IF_4
0xd99f	            0x84c0	                             test al, al	      6862	screen.c	FUNCTION_42	ELSE_2	IF_4
0xd9a1	            0x7512	                           jne 0x400d9f5	      6862	screen.c	FUNCTION_42	ELSE_2	IF_4
0xd9a3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6862	screen.c	FUNCTION_42	ELSE_2	IF_4
0xd9a7	    0x488b80800200	           mov rax, qword [rax + 0x280] 	      6862	screen.c	FUNCTION_42	ELSE_2	IF_4
0xd9ae	           0xfb600	                   movzx eax, byte [rax]	      6862	screen.c	FUNCTION_42	ELSE_2	IF_4
0xd9b1	            0x84c0	                             test al, al	      6862	screen.c	FUNCTION_42	ELSE_2	IF_4
0xd9b3	            0x7411	                            je 0x400da06	      6862	screen.c	FUNCTION_42	ELSE_2	IF_4
0xd9b5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6865	screen.c	FUNCTION_42	ELSE_2	IF_4	CALL_3
0xd9b9	          0x4889c7	                            mov rdi, rax	      6865	screen.c	FUNCTION_42	ELSE_2	IF_4	CALL_3
0xd9bc	      0xe809050000	       call sym.redraw_custom_statusline	      6865	screen.c	FUNCTION_42	ELSE_2	IF_4	CALL_3
0xd9c1	      0xe927040000	                           jmp 0x400de2d	      6865	screen.c	FUNCTION_42	ELSE_2	IF_4	CALL_3
0xd9c6	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      6870	screen.c	FUNCTION_42	ELSE_3	CALL_4
0xd9ca	        0x488d45c4	                   lea rax, [rbp - 0x3c]	      6870	screen.c	FUNCTION_42	ELSE_3	CALL_4
0xd9ce	          0x4889d6	                            mov rsi, rdx	      6870	screen.c	FUNCTION_42	ELSE_3	CALL_4
0xd9d1	          0x4889c7	                            mov rdi, rax	      6870	screen.c	FUNCTION_42	ELSE_3	CALL_4
0xd9d4	      0xe8d8710000	                call sym.fillchar_status	      6870	screen.c	FUNCTION_42	ELSE_3	CALL_4
0xd9d9	          0x8945cc	             mov dword [rbp - 0x34], eax	      6870	screen.c	FUNCTION_42	ELSE_3	CALL_4
0xd9dc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6872	screen.c	FUNCTION_42	ELSE_3	CALL_5
0xd9e0	        0x488b4008	                mov rax, qword [rax + 8]	      6872	screen.c	FUNCTION_42	ELSE_3	CALL_5
0xd9e4	          0x4889c7	                            mov rdi, rax	      6872	screen.c	FUNCTION_42	ELSE_3	CALL_5
0xd9e7	      0xe800000000	                          call 0x400da2c	      6872	screen.c	FUNCTION_42	ELSE_3	CALL_5
0xd9ec	    0x488b05000000	            mov rax, qword [0x0400da33] 	      6873	screen.c	FUNCTION_42	ELSE_3
0xd9f3	        0x488945e0	             mov qword [rbp - 0x20], rax	      6873	screen.c	FUNCTION_42	ELSE_3
0xd9f7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6874	screen.c	FUNCTION_42	ELSE_3	CALL_6
0xd9fb	          0x4889c7	                            mov rdi, rax	      6874	screen.c	FUNCTION_42	ELSE_3	CALL_6
0xd9fe	      0xe800000000	                          call 0x400da43	      6874	screen.c	FUNCTION_42	ELSE_3	CALL_6
0xda03	          0x8945c8	             mov dword [rbp - 0x38], eax	      6874	screen.c	FUNCTION_42	ELSE_3	CALL_6
0xda06	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6876	screen.c	FUNCTION_42	ELSE_3	IF_5	CALL_7
0xda0a	        0x488b4008	                mov rax, qword [rax + 8]	      6876	screen.c	FUNCTION_42	ELSE_3	IF_5	CALL_7
0xda0e	          0x4889c7	                            mov rdi, rax	      6876	screen.c	FUNCTION_42	ELSE_3	IF_5	CALL_7
0xda11	      0xe800000000	                          call 0x400da56	      6876	screen.c	FUNCTION_42	ELSE_3	IF_5	CALL_7
0xda16	            0x85c0	                           test eax, eax	      6876	screen.c	FUNCTION_42	ELSE_3	IF_5	CALL_7
0xda18	            0x7534	                           jne 0x400da8e	      6876	screen.c	FUNCTION_42	ELSE_3	IF_5	CALL_7
0xda1a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6878	screen.c	FUNCTION_42	ELSE_3	IF_5
0xda1e	    0x8b8050020000	           mov eax, dword [rax + 0x250] 	      6878	screen.c	FUNCTION_42	ELSE_3	IF_5
0xda24	            0x85c0	                           test eax, eax	      6878	screen.c	FUNCTION_42	ELSE_3	IF_5
0xda26	            0x7526	                           jne 0x400da8e	      6878	screen.c	FUNCTION_42	ELSE_3	IF_5
0xda28	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6880	screen.c	FUNCTION_42	ELSE_3	IF_5	CALL_8
0xda2c	        0x488b4008	                mov rax, qword [rax + 8]	      6880	screen.c	FUNCTION_42	ELSE_3	IF_5	CALL_8
0xda30	          0x4889c7	                            mov rdi, rax	      6880	screen.c	FUNCTION_42	ELSE_3	IF_5	CALL_8
0xda33	      0xe800000000	                          call 0x400da78	      6880	screen.c	FUNCTION_42	ELSE_3	IF_5	CALL_8
0xda38	            0x85c0	                           test eax, eax	      6880	screen.c	FUNCTION_42	ELSE_3	IF_5	CALL_8
0xda3a	            0x7512	                           jne 0x400da8e	      6880	screen.c	FUNCTION_42	ELSE_3	IF_5	CALL_8
0xda3c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6881	screen.c	FUNCTION_42	ELSE_3	IF_5
0xda40	        0x488b4008	                mov rax, qword [rax + 8]	      6881	screen.c	FUNCTION_42	ELSE_3	IF_5
0xda44	    0x8b8048150000	          mov eax, dword [rax + 0x1548] 	      6881	screen.c	FUNCTION_42	ELSE_3	IF_5
0xda4a	            0x85c0	                           test eax, eax	      6881	screen.c	FUNCTION_42	ELSE_3	IF_5
0xda4c	            0x7416	                            je 0x400daa4	      6881	screen.c	FUNCTION_42	ELSE_3	IF_5
0xda4e	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      6882	screen.c	FUNCTION_42	ELSE_3	IF_5
0xda51	          0x8d5001	                      lea edx, [rax + 1]	      6882	screen.c	FUNCTION_42	ELSE_3	IF_5
0xda54	          0x8955c8	             mov dword [rbp - 0x38], edx	      6882	screen.c	FUNCTION_42	ELSE_3	IF_5
0xda57	          0x4863d0	                         movsxd rdx, eax	      6882	screen.c	FUNCTION_42	ELSE_3	IF_5
0xda5a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6882	screen.c	FUNCTION_42	ELSE_3	IF_5
0xda5e	          0x4801d0	                            add rax, rdx	      6882	screen.c	FUNCTION_42	ELSE_3	IF_5
0xda61	          0xc60020	                    mov byte [rax], 0x20	      6882	screen.c	FUNCTION_42	ELSE_3	IF_5
0xda64	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6883	screen.c	FUNCTION_42	ELSE_3	IF_6	CALL_9
0xda68	        0x488b4008	                mov rax, qword [rax + 8]	      6883	screen.c	FUNCTION_42	ELSE_3	IF_6	CALL_9
0xda6c	          0x4889c7	                            mov rdi, rax	      6883	screen.c	FUNCTION_42	ELSE_3	IF_6	CALL_9
0xda6f	      0xe800000000	                          call 0x400dab4	      6883	screen.c	FUNCTION_42	ELSE_3	IF_6	CALL_9
0xda74	            0x85c0	                           test eax, eax	      6883	screen.c	FUNCTION_42	ELSE_3	IF_6	CALL_9
0xda76	            0x743d	                            je 0x400daf5	      6883	screen.c	FUNCTION_42	ELSE_3	IF_6	CALL_9
0xda78	      0xbf00000000	                              mov edi, 0	      6885	screen.c	FUNCTION_42	ELSE_3	IF_6	CALL_11
0xda7d	      0xe800000000	                          call 0x400dac2	      6885	screen.c	FUNCTION_42	ELSE_3	IF_6	CALL_11
0xda82	          0x4889c1	                            mov rcx, rax	      6885	screen.c	FUNCTION_42	ELSE_3	IF_6	CALL_11
0xda85	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      6885	screen.c	FUNCTION_42	ELSE_3	IF_6	CALL_11
0xda88	          0x4863d0	                         movsxd rdx, eax	      6885	screen.c	FUNCTION_42	ELSE_3	IF_6	CALL_11
0xda8b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6885	screen.c	FUNCTION_42	ELSE_3	IF_6	CALL_11
0xda8f	          0x4801d0	                            add rax, rdx	      6885	screen.c	FUNCTION_42	ELSE_3	IF_6	CALL_11
0xda92	          0x4889ce	                            mov rsi, rcx	      6885	screen.c	FUNCTION_42	ELSE_3	IF_6	CALL_11
0xda95	          0x4889c7	                            mov rdi, rax	      6885	screen.c	FUNCTION_42	ELSE_3	IF_6	CALL_11
0xda98	      0xe800000000	                          call 0x400dadd	      6885	screen.c	FUNCTION_42	ELSE_3	IF_6	CALL_11
0xda9d	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      6886	screen.c	FUNCTION_42	ELSE_3	IF_6	CALL_12
0xdaa0	          0x4863d0	                         movsxd rdx, eax	      6886	screen.c	FUNCTION_42	ELSE_3	IF_6	CALL_12
0xdaa3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6886	screen.c	FUNCTION_42	ELSE_3	IF_6	CALL_12
0xdaa7	          0x4801d0	                            add rax, rdx	      6886	screen.c	FUNCTION_42	ELSE_3	IF_6	CALL_12
0xdaaa	          0x4889c7	                            mov rdi, rax	      6886	screen.c	FUNCTION_42	ELSE_3	IF_6	CALL_12
0xdaad	      0xe800000000	                          call 0x400daf2	      6886	screen.c	FUNCTION_42	ELSE_3	IF_6	CALL_12
0xdab2	           0x145c8	             add dword [rbp - 0x38], eax	      6886	screen.c	FUNCTION_42	ELSE_3	IF_6	CALL_12
0xdab5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6889	screen.c	FUNCTION_42	ELSE_3	IF_7
0xdab9	    0x8b8050020000	           mov eax, dword [rax + 0x250] 	      6889	screen.c	FUNCTION_42	ELSE_3	IF_7
0xdabf	            0x85c0	                           test eax, eax	      6889	screen.c	FUNCTION_42	ELSE_3	IF_7
0xdac1	            0x743d	                            je 0x400db40	      6889	screen.c	FUNCTION_42	ELSE_3	IF_7
0xdac3	      0xbf00000000	                              mov edi, 0	      6891	screen.c	FUNCTION_42	ELSE_3	IF_7	CALL_14
0xdac8	      0xe800000000	                          call 0x400db0d	      6891	screen.c	FUNCTION_42	ELSE_3	IF_7	CALL_14
0xdacd	          0x4889c1	                            mov rcx, rax	      6891	screen.c	FUNCTION_42	ELSE_3	IF_7	CALL_14
0xdad0	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      6891	screen.c	FUNCTION_42	ELSE_3	IF_7	CALL_14
0xdad3	          0x4863d0	                         movsxd rdx, eax	      6891	screen.c	FUNCTION_42	ELSE_3	IF_7	CALL_14
0xdad6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6891	screen.c	FUNCTION_42	ELSE_3	IF_7	CALL_14
0xdada	          0x4801d0	                            add rax, rdx	      6891	screen.c	FUNCTION_42	ELSE_3	IF_7	CALL_14
0xdadd	          0x4889ce	                            mov rsi, rcx	      6891	screen.c	FUNCTION_42	ELSE_3	IF_7	CALL_14
0xdae0	          0x4889c7	                            mov rdi, rax	      6891	screen.c	FUNCTION_42	ELSE_3	IF_7	CALL_14
0xdae3	      0xe800000000	                          call 0x400db28	      6891	screen.c	FUNCTION_42	ELSE_3	IF_7	CALL_14
0xdae8	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      6892	screen.c	FUNCTION_42	ELSE_3	IF_7	CALL_15
0xdaeb	          0x4863d0	                         movsxd rdx, eax	      6892	screen.c	FUNCTION_42	ELSE_3	IF_7	CALL_15
0xdaee	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6892	screen.c	FUNCTION_42	ELSE_3	IF_7	CALL_15
0xdaf2	          0x4801d0	                            add rax, rdx	      6892	screen.c	FUNCTION_42	ELSE_3	IF_7	CALL_15
0xdaf5	          0x4889c7	                            mov rdi, rax	      6892	screen.c	FUNCTION_42	ELSE_3	IF_7	CALL_15
0xdaf8	      0xe800000000	                          call 0x400db3d	      6892	screen.c	FUNCTION_42	ELSE_3	IF_7	CALL_15
0xdafd	           0x145c8	             add dword [rbp - 0x38], eax	      6892	screen.c	FUNCTION_42	ELSE_3	IF_7	CALL_15
0xdb00	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6895	screen.c	FUNCTION_42	ELSE_3	IF_8	CALL_16
0xdb04	        0x488b4008	                mov rax, qword [rax + 8]	      6895	screen.c	FUNCTION_42	ELSE_3	IF_8	CALL_16
0xdb08	          0x4889c7	                            mov rdi, rax	      6895	screen.c	FUNCTION_42	ELSE_3	IF_8	CALL_16
0xdb0b	      0xe800000000	                          call 0x400db50	      6895	screen.c	FUNCTION_42	ELSE_3	IF_8	CALL_16
0xdb10	            0x85c0	                           test eax, eax	      6895	screen.c	FUNCTION_42	ELSE_3	IF_8	CALL_16
0xdb12	            0x742b	                            je 0x400db7f	      6895	screen.c	FUNCTION_42	ELSE_3	IF_8	CALL_16
0xdb14	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6897	screen.c	FUNCTION_42	ELSE_3	IF_8	CALL_17
0xdb18	        0x488b4008	                mov rax, qword [rax + 8]	      6897	screen.c	FUNCTION_42	ELSE_3	IF_8	CALL_17
0xdb1c	          0x4889c7	                            mov rdi, rax	      6897	screen.c	FUNCTION_42	ELSE_3	IF_8	CALL_17
0xdb1f	      0xe800000000	                          call 0x400db64	      6897	screen.c	FUNCTION_42	ELSE_3	IF_8	CALL_17
0xdb24	            0x85c0	                           test eax, eax	      6897	screen.c	FUNCTION_42	ELSE_3	IF_8	CALL_17
0xdb26	            0x7517	                           jne 0x400db7f	      6897	screen.c	FUNCTION_42	ELSE_3	IF_8	CALL_17
0xdb28	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      6901	screen.c	FUNCTION_42	ELSE_3	IF_8	CALL_18
0xdb2b	          0x4863d0	                         movsxd rdx, eax	      6901	screen.c	FUNCTION_42	ELSE_3	IF_8	CALL_18
0xdb2e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6901	screen.c	FUNCTION_42	ELSE_3	IF_8	CALL_18
0xdb32	          0x4801d0	                            add rax, rdx	      6901	screen.c	FUNCTION_42	ELSE_3	IF_8	CALL_18
0xdb35	    0xc7005b2b5d00	               mov dword [rax], 0x5d2b5b	      6901	screen.c	FUNCTION_42	ELSE_3	IF_8	CALL_18
0xdb3b	        0x8345c803	               add dword [rbp - 0x38], 3	      6902	screen.c	FUNCTION_42	ELSE_3	IF_8
0xdb3f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6904	screen.c	FUNCTION_42	ELSE_3	IF_9
0xdb43	        0x488b4008	                mov rax, qword [rax + 8]	      6904	screen.c	FUNCTION_42	ELSE_3	IF_9
0xdb47	    0x8b8048150000	          mov eax, dword [rax + 0x1548] 	      6904	screen.c	FUNCTION_42	ELSE_3	IF_9
0xdb4d	            0x85c0	                           test eax, eax	      6904	screen.c	FUNCTION_42	ELSE_3	IF_9
0xdb4f	            0x743d	                            je 0x400dbce	      6904	screen.c	FUNCTION_42	ELSE_3	IF_9
0xdb51	      0xbf00000000	                              mov edi, 0	      6906	screen.c	FUNCTION_42	ELSE_3	IF_9	CALL_20
0xdb56	      0xe800000000	                          call 0x400db9b	      6906	screen.c	FUNCTION_42	ELSE_3	IF_9	CALL_20
0xdb5b	          0x4889c1	                            mov rcx, rax	      6906	screen.c	FUNCTION_42	ELSE_3	IF_9	CALL_20
0xdb5e	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      6906	screen.c	FUNCTION_42	ELSE_3	IF_9	CALL_20
0xdb61	          0x4863d0	                         movsxd rdx, eax	      6906	screen.c	FUNCTION_42	ELSE_3	IF_9	CALL_20
0xdb64	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6906	screen.c	FUNCTION_42	ELSE_3	IF_9	CALL_20
0xdb68	          0x4801d0	                            add rax, rdx	      6906	screen.c	FUNCTION_42	ELSE_3	IF_9	CALL_20
0xdb6b	          0x4889ce	                            mov rsi, rcx	      6906	screen.c	FUNCTION_42	ELSE_3	IF_9	CALL_20
0xdb6e	          0x4889c7	                            mov rdi, rax	      6906	screen.c	FUNCTION_42	ELSE_3	IF_9	CALL_20
0xdb71	      0xe800000000	                          call 0x400dbb6	      6906	screen.c	FUNCTION_42	ELSE_3	IF_9	CALL_20
0xdb76	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      6907	screen.c	FUNCTION_42	ELSE_3	IF_9	CALL_21
0xdb79	          0x4863d0	                         movsxd rdx, eax	      6907	screen.c	FUNCTION_42	ELSE_3	IF_9	CALL_21
0xdb7c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6907	screen.c	FUNCTION_42	ELSE_3	IF_9	CALL_21
0xdb80	          0x4801d0	                            add rax, rdx	      6907	screen.c	FUNCTION_42	ELSE_3	IF_9	CALL_21
0xdb83	          0x4889c7	                            mov rdi, rax	      6907	screen.c	FUNCTION_42	ELSE_3	IF_9	CALL_21
0xdb86	      0xe800000000	                          call 0x400dbcb	      6907	screen.c	FUNCTION_42	ELSE_3	IF_9	CALL_21
0xdb8b	           0x145c8	             add dword [rbp - 0x38], eax	      6907	screen.c	FUNCTION_42	ELSE_3	IF_9	CALL_21
0xdb8e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6910	screen.c	FUNCTION_42	ELSE_3
0xdb92	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      6910	screen.c	FUNCTION_42	ELSE_3
0xdb98	            0x89c2	                            mov edx, eax	      6910	screen.c	FUNCTION_42	ELSE_3
0xdb9a	    0x488b05000000	            mov rax, qword [0x0400dbe1] 	      6910	screen.c	FUNCTION_42	ELSE_3
0xdba1	            0x29c2	                            sub edx, eax	      6910	screen.c	FUNCTION_42	ELSE_3
0xdba3	    0x8b0500000000	            mov eax, dword [0x0400dbe9] 	      6910	screen.c	FUNCTION_42	ELSE_3
0xdba9	             0x1d0	                            add eax, edx	      6910	screen.c	FUNCTION_42	ELSE_3
0xdbab	          0x8945d0	             mov dword [rbp - 0x30], eax	      6910	screen.c	FUNCTION_42	ELSE_3
0xdbae	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6911	screen.c	FUNCTION_42	ELSE_3	IF_10
0xdbb2	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      6911	screen.c	FUNCTION_42	ELSE_3	IF_10
0xdbb8	          0x83c001	                              add eax, 1	      6911	screen.c	FUNCTION_42	ELSE_3	IF_10
0xdbbb	            0x89c2	                            mov edx, eax	      6911	screen.c	FUNCTION_42	ELSE_3	IF_10
0xdbbd	          0xc1ea1f	                           shr edx, 0x1f	      6911	screen.c	FUNCTION_42	ELSE_3	IF_10
0xdbc0	             0x1d0	                            add eax, edx	      6911	screen.c	FUNCTION_42	ELSE_3	IF_10
0xdbc2	            0xd1f8	                              sar eax, 1	      6911	screen.c	FUNCTION_42	ELSE_3	IF_10
0xdbc4	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	      6911	screen.c	FUNCTION_42	ELSE_3	IF_10
0xdbc7	            0x7e19	                           jle 0x400dc22	      6911	screen.c	FUNCTION_42	ELSE_3	IF_10
0xdbc9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6912	screen.c	FUNCTION_42	ELSE_3	IF_10
0xdbcd	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      6912	screen.c	FUNCTION_42	ELSE_3	IF_10
0xdbd3	          0x83c001	                              add eax, 1	      6912	screen.c	FUNCTION_42	ELSE_3	IF_10
0xdbd6	            0x89c2	                            mov edx, eax	      6912	screen.c	FUNCTION_42	ELSE_3	IF_10
0xdbd8	          0xc1ea1f	                           shr edx, 0x1f	      6912	screen.c	FUNCTION_42	ELSE_3	IF_10
0xdbdb	             0x1d0	                            add eax, edx	      6912	screen.c	FUNCTION_42	ELSE_3	IF_10
0xdbdd	            0xd1f8	                              sar eax, 1	      6912	screen.c	FUNCTION_42	ELSE_3	IF_10
0xdbdf	          0x8945d0	             mov dword [rbp - 0x30], eax	      6912	screen.c	FUNCTION_42	ELSE_3	IF_10
0xdbe2	        0x837dd001	               cmp dword [rbp - 0x30], 1	      6913	screen.c	FUNCTION_42	ELSE_3	IF_11
0xdbe6	            0x7f14	                            jg 0x400dc3c	      6913	screen.c	FUNCTION_42	ELSE_3	IF_11
0xdbe8	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      6915	screen.c	FUNCTION_42	ELSE_3	IF_11
0xdbf0	    0xc745c8010000	               mov dword [rbp - 0x38], 1	      6916	screen.c	FUNCTION_42	ELSE_3	IF_11
0xdbf7	      0xe9db000000	                           jmp 0x400dd17	      6916	screen.c	FUNCTION_42	ELSE_3	IF_11
0xdbfc	    0x8b0500000000	            mov eax, dword [0x0400dc42] 	      6920	screen.c	FUNCTION_42	ELSE_3	ELSE_4	IF_12
0xdc02	            0x85c0	                           test eax, eax	      6920	screen.c	FUNCTION_42	ELSE_3	ELSE_4	IF_12
0xdc04	     0xf84a1000000	                            je 0x400dceb	      6920	screen.c	FUNCTION_42	ELSE_3	ELSE_4	IF_12
0xdc0a	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      6922	screen.c	FUNCTION_42	ELSE_3	ELSE_4	IF_12
0xdc11	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6925	screen.c	FUNCTION_42	ELSE_3	ELSE_4	IF_12	CALL_22
0xdc15	      0xbeffffffff	                     mov esi, 0xffffffff	      6925	screen.c	FUNCTION_42	ELSE_3	ELSE_4	IF_12	CALL_22
0xdc1a	          0x4889c7	                            mov rdi, rax	      6925	screen.c	FUNCTION_42	ELSE_3	ELSE_4	IF_12	CALL_22
0xdc1d	      0xe800000000	                          call 0x400dc62	      6925	screen.c	FUNCTION_42	ELSE_3	ELSE_4	IF_12	CALL_22
0xdc22	          0x8945d4	             mov dword [rbp - 0x2c], eax	      6925	screen.c	FUNCTION_42	ELSE_3	ELSE_4	IF_12	CALL_22
0xdc25	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      6929	screen.c	FUNCTION_42	ELSE_3	ELSE_4	IF_12	FOR_1
0xdc2c	            0xeb38	                           jmp 0x400dca6	      6929	screen.c	FUNCTION_42	ELSE_3	ELSE_4	IF_12	FOR_1
0xdc2e	    0x488b05000000	            mov rax, qword [0x0400dc75] 	      6931	screen.c	FUNCTION_42	ELSE_3	ELSE_4	IF_12	FOR_1
0xdc35	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      6931	screen.c	FUNCTION_42	ELSE_3	ELSE_4	IF_12	FOR_1
0xdc38	          0x4863ca	                         movsxd rcx, edx	      6931	screen.c	FUNCTION_42	ELSE_3	ELSE_4	IF_12	FOR_1
0xdc3b	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      6931	screen.c	FUNCTION_42	ELSE_3	ELSE_4	IF_12	FOR_1
0xdc3f	          0x4801ca	                            add rdx, rcx	      6931	screen.c	FUNCTION_42	ELSE_3	ELSE_4	IF_12	FOR_1
0xdc42	          0x4889d7	                            mov rdi, rdx	      6931	screen.c	FUNCTION_42	ELSE_3	ELSE_4	IF_12	FOR_1
0xdc45	            0xffd0	                                call rax	      6931	screen.c	FUNCTION_42	ELSE_3	ELSE_4	IF_12	FOR_1
0xdc47	          0x2945d4	             sub dword [rbp - 0x2c], eax	      6931	screen.c	FUNCTION_42	ELSE_3	ELSE_4	IF_12	FOR_1
0xdc4a	    0x488b05000000	            mov rax, qword [0x0400dc91] 	      6930	screen.c	FUNCTION_42	ELSE_3	ELSE_4	IF_12	FOR_1
0xdc51	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      6930	screen.c	FUNCTION_42	ELSE_3	ELSE_4	IF_12	FOR_1
0xdc54	          0x4863ca	                         movsxd rcx, edx	      6930	screen.c	FUNCTION_42	ELSE_3	ELSE_4	IF_12	FOR_1
0xdc57	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      6930	screen.c	FUNCTION_42	ELSE_3	ELSE_4	IF_12	FOR_1
0xdc5b	          0x4801ca	                            add rdx, rcx	      6930	screen.c	FUNCTION_42	ELSE_3	ELSE_4	IF_12	FOR_1
0xdc5e	          0x4889d7	                            mov rdi, rdx	      6930	screen.c	FUNCTION_42	ELSE_3	ELSE_4	IF_12	FOR_1
0xdc61	            0xffd0	                                call rax	      6930	screen.c	FUNCTION_42	ELSE_3	ELSE_4	IF_12	FOR_1
0xdc63	           0x145d8	             add dword [rbp - 0x28], eax	      6930	screen.c	FUNCTION_42	ELSE_3	ELSE_4	IF_12	FOR_1
0xdc66	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      6929	screen.c	FUNCTION_42	ELSE_3	ELSE_4	IF_12	FOR_1
0xdc69	          0x4863d0	                         movsxd rdx, eax	      6929	screen.c	FUNCTION_42	ELSE_3	ELSE_4	IF_12	FOR_1
0xdc6c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6929	screen.c	FUNCTION_42	ELSE_3	ELSE_4	IF_12	FOR_1
0xdc70	          0x4801d0	                            add rax, rdx	      6929	screen.c	FUNCTION_42	ELSE_3	ELSE_4	IF_12	FOR_1
0xdc73	           0xfb600	                   movzx eax, byte [rax]	      6929	screen.c	FUNCTION_42	ELSE_3	ELSE_4	IF_12	FOR_1
0xdc76	            0x84c0	                             test al, al	      6929	screen.c	FUNCTION_42	ELSE_3	ELSE_4	IF_12	FOR_1
0xdc78	            0x740b	                            je 0x400dcc5	      6929	screen.c	FUNCTION_42	ELSE_3	ELSE_4	IF_12	FOR_1
0xdc7a	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      6929	screen.c	FUNCTION_42	ELSE_3	ELSE_4	IF_12	FOR_1
0xdc7d	          0x83e801	                              sub eax, 1	      6929	screen.c	FUNCTION_42	ELSE_3	ELSE_4	IF_12	FOR_1
0xdc80	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      6929	screen.c	FUNCTION_42	ELSE_3	ELSE_4	IF_12	FOR_1
0xdc83	            0x7ea9	                           jle 0x400dc6e	      6929	screen.c	FUNCTION_42	ELSE_3	ELSE_4	IF_12	FOR_1
0xdc85	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      6932	screen.c	FUNCTION_42	ELSE_3	ELSE_4	IF_12
0xdc88	          0x8945c8	             mov dword [rbp - 0x38], eax	      6932	screen.c	FUNCTION_42	ELSE_3	ELSE_4	IF_12
0xdc8b	        0x837dd800	               cmp dword [rbp - 0x28], 0	      6933	screen.c	FUNCTION_42	ELSE_3	ELSE_4	IF_12	IF_13
0xdc8f	            0x7e46	                           jle 0x400dd17	      6933	screen.c	FUNCTION_42	ELSE_3	ELSE_4	IF_12	IF_13
0xdc91	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      6935	screen.c	FUNCTION_42	ELSE_3	ELSE_4	IF_12	IF_13
0xdc94	            0x4898	                                    cdqe	      6935	screen.c	FUNCTION_42	ELSE_3	ELSE_4	IF_12	IF_13
0xdc96	        0x4883e801	                              sub rax, 1	      6935	screen.c	FUNCTION_42	ELSE_3	ELSE_4	IF_12	IF_13
0xdc9a	        0x480145e0	            add qword [rbp - 0x20], rax 	      6935	screen.c	FUNCTION_42	ELSE_3	ELSE_4	IF_12	IF_13
0xdc9e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6936	screen.c	FUNCTION_42	ELSE_3	ELSE_4	IF_12	IF_13
0xdca2	          0xc6003c	                    mov byte [rax], 0x3c	      6936	screen.c	FUNCTION_42	ELSE_3	ELSE_4	IF_12	IF_13
0xdca5	        0x8345c801	               add dword [rbp - 0x38], 1	      6937	screen.c	FUNCTION_42	ELSE_3	ELSE_4	IF_12	IF_13
0xdca9	            0xeb2c	                           jmp 0x400dd17	      6937	screen.c	FUNCTION_42	ELSE_3	ELSE_4	IF_12	IF_13
0xdcab	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      6943	screen.c	FUNCTION_42	ELSE_3	ELSE_5	IF_14
0xdcae	          0x83e801	                              sub eax, 1	      6943	screen.c	FUNCTION_42	ELSE_3	ELSE_5	IF_14
0xdcb1	          0x3b45c8	             cmp eax, dword [rbp - 0x38]	      6943	screen.c	FUNCTION_42	ELSE_3	ELSE_5	IF_14
0xdcb4	            0x7d21	                           jge 0x400dd17	      6943	screen.c	FUNCTION_42	ELSE_3	ELSE_5	IF_14
0xdcb6	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      6945	screen.c	FUNCTION_42	ELSE_3	ELSE_5	IF_14
0xdcb9	          0x8d50ff	                      lea edx, [rax - 1]	      6945	screen.c	FUNCTION_42	ELSE_3	ELSE_5	IF_14
0xdcbc	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      6945	screen.c	FUNCTION_42	ELSE_3	ELSE_5	IF_14
0xdcbf	            0x29d0	                            sub eax, edx	      6945	screen.c	FUNCTION_42	ELSE_3	ELSE_5	IF_14
0xdcc1	            0x4898	                                    cdqe	      6945	screen.c	FUNCTION_42	ELSE_3	ELSE_5	IF_14
0xdcc3	        0x480145e0	            add qword [rbp - 0x20], rax 	      6945	screen.c	FUNCTION_42	ELSE_3	ELSE_5	IF_14
0xdcc7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6946	screen.c	FUNCTION_42	ELSE_3	ELSE_5	IF_14
0xdccb	          0xc6003c	                    mov byte [rax], 0x3c	      6946	screen.c	FUNCTION_42	ELSE_3	ELSE_5	IF_14
0xdcce	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      6947	screen.c	FUNCTION_42	ELSE_3	ELSE_5	IF_14
0xdcd1	          0x83e801	                              sub eax, 1	      6947	screen.c	FUNCTION_42	ELSE_3	ELSE_5	IF_14
0xdcd4	          0x8945c8	             mov dword [rbp - 0x38], eax	      6947	screen.c	FUNCTION_42	ELSE_3	ELSE_5	IF_14
0xdcd7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6950	screen.c	FUNCTION_42	ELSE_3	CALL_23
0xdcdb	    0x8b909c000000	            mov edx, dword [rax + 0x9c] 	      6950	screen.c	FUNCTION_42	ELSE_3	CALL_23
0xdce1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6950	screen.c	FUNCTION_42	ELSE_3	CALL_23
0xdce5	    0x8b80a8010000	           mov eax, dword [rax + 0x1a8] 	      6950	screen.c	FUNCTION_42	ELSE_3	CALL_23
0xdceb	             0x1c2	                            add edx, eax	      6950	screen.c	FUNCTION_42	ELSE_3	CALL_23
0xdced	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6950	screen.c	FUNCTION_42	ELSE_3	CALL_23
0xdcf1	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      6950	screen.c	FUNCTION_42	ELSE_3	CALL_23
0xdcf7	             0x1d0	                            add eax, edx	      6950	screen.c	FUNCTION_42	ELSE_3	CALL_23
0xdcf9	          0x8945dc	             mov dword [rbp - 0x24], eax	      6950	screen.c	FUNCTION_42	ELSE_3	CALL_23
0xdcfc	          0x8b4dc4	             mov ecx, dword [rbp - 0x3c]	      6951	screen.c	FUNCTION_42	ELSE_3	CALL_24
0xdcff	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6951	screen.c	FUNCTION_42	ELSE_3	CALL_24
0xdd03	    0x8b90a8000000	            mov edx, dword [rax + 0xa8] 	      6951	screen.c	FUNCTION_42	ELSE_3	CALL_24
0xdd09	          0x8b75dc	             mov esi, dword [rbp - 0x24]	      6951	screen.c	FUNCTION_42	ELSE_3	CALL_24
0xdd0c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6951	screen.c	FUNCTION_42	ELSE_3	CALL_24
0xdd10	          0x4889c7	                            mov rdi, rax	      6951	screen.c	FUNCTION_42	ELSE_3	CALL_24
0xdd13	      0xe800000000	                          call 0x400dd58	      6951	screen.c	FUNCTION_42	ELSE_3	CALL_24
0xdd18	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      6952	screen.c	FUNCTION_42	ELSE_3	CALL_25
0xdd1b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6953	screen.c	FUNCTION_42	ELSE_3
0xdd1f	    0x8b88a8000000	            mov ecx, dword [rax + 0xa8] 	      6953	screen.c	FUNCTION_42	ELSE_3
0xdd25	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      6952	screen.c	FUNCTION_42	ELSE_3	CALL_25
0xdd28	             0x1c1	                            add ecx, eax	      6952	screen.c	FUNCTION_42	ELSE_3	CALL_25
0xdd2a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6952	screen.c	FUNCTION_42	ELSE_3	CALL_25
0xdd2e	    0x8bb0a8000000	            mov esi, dword [rax + 0xa8] 	      6952	screen.c	FUNCTION_42	ELSE_3	CALL_25
0xdd34	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      6952	screen.c	FUNCTION_42	ELSE_3	CALL_25
0xdd37	          0x8d3c06	                    lea edi, [rsi + rax]	      6952	screen.c	FUNCTION_42	ELSE_3	CALL_25
0xdd3a	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      6952	screen.c	FUNCTION_42	ELSE_3	CALL_25
0xdd3d	          0x8d7001	                      lea esi, [rax + 1]	      6952	screen.c	FUNCTION_42	ELSE_3	CALL_25
0xdd40	        0x448b4dcc	             mov r9d, dword [rbp - 0x34]	      6952	screen.c	FUNCTION_42	ELSE_3	CALL_25
0xdd44	        0x448b45cc	             mov r8d, dword [rbp - 0x34]	      6952	screen.c	FUNCTION_42	ELSE_3	CALL_25
0xdd48	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      6952	screen.c	FUNCTION_42	ELSE_3	CALL_25
0xdd4b	        0x4883ec08	                              sub rsp, 8	      6952	screen.c	FUNCTION_42	ELSE_3	CALL_25
0xdd4f	              0x52	                                push rdx	      6952	screen.c	FUNCTION_42	ELSE_3	CALL_25
0xdd50	            0x89fa	                            mov edx, edi	      6952	screen.c	FUNCTION_42	ELSE_3	CALL_25
0xdd52	            0x89c7	                            mov edi, eax	      6952	screen.c	FUNCTION_42	ELSE_3	CALL_25
0xdd54	      0xe800000000	                          call 0x400dd99	      6952	screen.c	FUNCTION_42	ELSE_3	CALL_25
0xdd59	        0x4883c410	                           add rsp, 0x10	      6952	screen.c	FUNCTION_42	ELSE_3	CALL_25
0xdd5d	    0x488b15000000	            mov rdx, qword [0x0400dda4] 	      6955	screen.c	FUNCTION_42	ELSE_3	IF_15	CALL_26
0xdd64	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6955	screen.c	FUNCTION_42	ELSE_3	IF_15	CALL_26
0xdd68	      0xb900100000	                         mov ecx, 0x1000	      6955	screen.c	FUNCTION_42	ELSE_3	IF_15	CALL_26
0xdd6d	      0xbe00000000	                              mov esi, 0	      6955	screen.c	FUNCTION_42	ELSE_3	IF_15	CALL_26
0xdd72	          0x4889c7	                            mov rdi, rax	      6955	screen.c	FUNCTION_42	ELSE_3	IF_15	CALL_26
0xdd75	      0xe800000000	                          call 0x400ddba	      6955	screen.c	FUNCTION_42	ELSE_3	IF_15	CALL_26
0xdd7a	            0x85c0	                           test eax, eax	      6955	screen.c	FUNCTION_42	ELSE_3	IF_15	CALL_26
0xdd7c	            0x745e	                            je 0x400de1c	      6955	screen.c	FUNCTION_42	ELSE_3	IF_15	CALL_26
0xdd7e	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      6956	screen.c	FUNCTION_42	ELSE_3	IF_15	CALL_27
0xdd81	          0x2b45c8	             sub eax, dword [rbp - 0x38]	      6956	screen.c	FUNCTION_42	ELSE_3	IF_15	CALL_27
0xdd84	            0x89c3	                            mov ebx, eax	      6956	screen.c	FUNCTION_42	ELSE_3	IF_15	CALL_27
0xdd86	    0x488b05000000	            mov rax, qword [0x0400ddcd] 	      6956	screen.c	FUNCTION_42	ELSE_3	IF_15	CALL_27
0xdd8d	          0x4889c7	                            mov rdi, rax	      6956	screen.c	FUNCTION_42	ELSE_3	IF_15	CALL_27
0xdd90	      0xe800000000	                          call 0x400ddd5	      6956	screen.c	FUNCTION_42	ELSE_3	IF_15	CALL_27
0xdd95	          0x83c001	                              add eax, 1	      6956	screen.c	FUNCTION_42	ELSE_3	IF_15	CALL_27
0xdd98	            0x39c3	                            cmp ebx, eax	      6956	screen.c	FUNCTION_42	ELSE_3	IF_15	CALL_27
0xdd9a	            0x7e40	                           jle 0x400de1c	      6956	screen.c	FUNCTION_42	ELSE_3	IF_15	CALL_27
0xdd9c	          0x8b5dc4	             mov ebx, dword [rbp - 0x3c]	      6957	screen.c	FUNCTION_42	ELSE_3	IF_15	CALL_29
0xdd9f	        0x448b65d0	            mov r12d, dword [rbp - 0x30]	      6957	screen.c	FUNCTION_42	ELSE_3	IF_15	CALL_29
0xdda3	    0x488b05000000	            mov rax, qword [0x0400ddea] 	      6957	screen.c	FUNCTION_42	ELSE_3	IF_15	CALL_29
0xddaa	          0x4889c7	                            mov rdi, rax	      6957	screen.c	FUNCTION_42	ELSE_3	IF_15	CALL_29
0xddad	      0xe800000000	                          call 0x400ddf2	      6957	screen.c	FUNCTION_42	ELSE_3	IF_15	CALL_29
0xddb2	          0x4489e2	                           mov edx, r12d	      6957	screen.c	FUNCTION_42	ELSE_3	IF_15	CALL_29
0xddb5	            0x29c2	                            sub edx, eax	      6957	screen.c	FUNCTION_42	ELSE_3	IF_15	CALL_29
0xddb7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6958	screen.c	FUNCTION_42	ELSE_3	IF_15
0xddbb	    0x8b80a8000000	            mov eax, dword [rax + 0xa8] 	      6958	screen.c	FUNCTION_42	ELSE_3	IF_15
0xddc1	             0x1d0	                            add eax, edx	      6957	screen.c	FUNCTION_42	ELSE_3	IF_15	CALL_29
0xddc3	          0x83e801	                              sub eax, 1	      6957	screen.c	FUNCTION_42	ELSE_3	IF_15	CALL_29
0xddc6	            0x89c2	                            mov edx, eax	      6957	screen.c	FUNCTION_42	ELSE_3	IF_15	CALL_29
0xddc8	    0x488b05000000	            mov rax, qword [0x0400de0f] 	      6957	screen.c	FUNCTION_42	ELSE_3	IF_15	CALL_29
0xddcf	          0x8b75dc	             mov esi, dword [rbp - 0x24]	      6957	screen.c	FUNCTION_42	ELSE_3	IF_15	CALL_29
0xddd2	            0x89d9	                            mov ecx, ebx	      6957	screen.c	FUNCTION_42	ELSE_3	IF_15	CALL_29
0xddd4	          0x4889c7	                            mov rdi, rax	      6957	screen.c	FUNCTION_42	ELSE_3	IF_15	CALL_29
0xddd7	      0xe800000000	                          call 0x400de1c	      6957	screen.c	FUNCTION_42	ELSE_3	IF_15	CALL_29
0xdddc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6961	screen.c	FUNCTION_42	ELSE_3	CALL_30
0xdde0	      0xbe01000000	                              mov esi, 1	      6961	screen.c	FUNCTION_42	ELSE_3	CALL_30
0xdde5	          0x4889c7	                            mov rdi, rax	      6961	screen.c	FUNCTION_42	ELSE_3	CALL_30
0xdde8	      0xe848730000	                 call sym.win_redr_ruler	      6961	screen.c	FUNCTION_42	ELSE_3	CALL_30
0xdded	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6968	screen.c	FUNCTION_42	IF_16	CALL_31
0xddf1	    0x8b80b0000000	            mov eax, dword [rax + 0xb0] 	      6968	screen.c	FUNCTION_42	IF_16	CALL_31
0xddf7	            0x85c0	                           test eax, eax	      6968	screen.c	FUNCTION_42	IF_16	CALL_31
0xddf9	     0xf84a1000000	                            je 0x400dee0	      6968	screen.c	FUNCTION_42	IF_16	CALL_31
0xddff	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6968	screen.c	FUNCTION_42	IF_16	CALL_31
0xde03	    0x8b80a4000000	            mov eax, dword [rax + 0xa4] 	      6968	screen.c	FUNCTION_42	IF_16	CALL_31
0xde09	            0x85c0	                           test eax, eax	      6968	screen.c	FUNCTION_42	IF_16	CALL_31
0xde0b	     0xf848f000000	                            je 0x400dee0	      6968	screen.c	FUNCTION_42	IF_16	CALL_31
0xde11	      0xe800000000	                          call 0x400de56	      6968	screen.c	FUNCTION_42	IF_16	CALL_31
0xde16	            0x85c0	                           test eax, eax	      6968	screen.c	FUNCTION_42	IF_16	CALL_31
0xde18	     0xf8482000000	                            je 0x400dee0	      6968	screen.c	FUNCTION_42	IF_16	CALL_31
0xde1e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6970	screen.c	FUNCTION_42	IF_16	IF_17	CALL_32
0xde22	          0x4889c7	                            mov rdi, rax	      6970	screen.c	FUNCTION_42	IF_16	IF_17	CALL_32
0xde25	      0xe800000000	                          call 0x400de6a	      6970	screen.c	FUNCTION_42	IF_16	IF_17	CALL_32
0xde2a	            0x85c0	                           test eax, eax	      6970	screen.c	FUNCTION_42	IF_16	IF_17	CALL_32
0xde2c	            0x7418	                            je 0x400de86	      6970	screen.c	FUNCTION_42	IF_16	IF_17	CALL_32
0xde2e	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      6971	screen.c	FUNCTION_42	IF_16	CALL_33
0xde32	        0x488d45c4	                   lea rax, [rbp - 0x3c]	      6971	screen.c	FUNCTION_42	IF_16	CALL_33
0xde36	          0x4889d6	                            mov rsi, rdx	      6971	screen.c	FUNCTION_42	IF_16	CALL_33
0xde39	          0x4889c7	                            mov rdi, rax	      6971	screen.c	FUNCTION_42	IF_16	CALL_33
0xde3c	      0xe8706d0000	                call sym.fillchar_status	      6971	screen.c	FUNCTION_42	IF_16	CALL_33
0xde41	          0x8945cc	             mov dword [rbp - 0x34], eax	      6971	screen.c	FUNCTION_42	IF_16	CALL_33
0xde44	            0xeb0f	                           jmp 0x400de95	      6971	screen.c	FUNCTION_42	IF_16	CALL_33
0xde46	        0x488d45c4	                   lea rax, [rbp - 0x3c]	      6973	screen.c	FUNCTION_42	IF_16	CALL_34
0xde4a	          0x4889c7	                            mov rdi, rax	      6973	screen.c	FUNCTION_42	IF_16	CALL_34
0xde4d	      0xe8616e0000	                  call sym.fillchar_vsep	      6973	screen.c	FUNCTION_42	IF_16	CALL_34
0xde52	          0x8945cc	             mov dword [rbp - 0x34], eax	      6973	screen.c	FUNCTION_42	IF_16	CALL_34
0xde55	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      6974	screen.c	FUNCTION_42	IF_16	CALL_37
0xde58	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6974	screen.c	FUNCTION_42	IF_16	CALL_37
0xde5c	    0x8b88a8000000	            mov ecx, dword [rax + 0xa8] 	      6974	screen.c	FUNCTION_42	IF_16	CALL_37
0xde62	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6974	screen.c	FUNCTION_42	IF_16	CALL_37
0xde66	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      6974	screen.c	FUNCTION_42	IF_16	CALL_37
0xde6c	          0x8d3c01	                    lea edi, [rcx + rax]	      6974	screen.c	FUNCTION_42	IF_16	CALL_37
0xde6f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6974	screen.c	FUNCTION_42	IF_16	CALL_37
0xde73	    0x8b889c000000	            mov ecx, dword [rax + 0x9c] 	      6974	screen.c	FUNCTION_42	IF_16	CALL_37
0xde79	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6974	screen.c	FUNCTION_42	IF_16	CALL_37
0xde7d	    0x8b80a8010000	           mov eax, dword [rax + 0x1a8] 	      6974	screen.c	FUNCTION_42	IF_16	CALL_37
0xde83	             0x1c1	                            add ecx, eax	      6974	screen.c	FUNCTION_42	IF_16	CALL_37
0xde85	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6974	screen.c	FUNCTION_42	IF_16	CALL_37
0xde89	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      6974	screen.c	FUNCTION_42	IF_16	CALL_37
0xde8f	          0x8d3401	                    lea esi, [rcx + rax]	      6974	screen.c	FUNCTION_42	IF_16	CALL_37
0xde92	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6974	screen.c	FUNCTION_42	IF_16	CALL_37
0xde95	            0x89d1	                            mov ecx, edx	      6974	screen.c	FUNCTION_42	IF_16	CALL_37
0xde97	            0x89fa	                            mov edx, edi	      6974	screen.c	FUNCTION_42	IF_16	CALL_37
0xde99	            0x89c7	                            mov edi, eax	      6974	screen.c	FUNCTION_42	IF_16	CALL_37
0xde9b	      0xe800000000	                          call 0x400dee0	      6974	screen.c	FUNCTION_42	IF_16	CALL_37
0xdea0	    0xc70500000000	               mov dword [0x0400deea], 0	      6977	screen.c	FUNCTION_42
0xdeaa	            0xeb01	                           jmp 0x400deed	      6977	screen.c	FUNCTION_42
0xdeac	              0x90	                                     nop	      6841	screen.c	FUNCTION_42	IF_1
0xdead	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6978	screen.c	FUNCTION_42
0xdeb1	    0x644833042528	                xor rax, qword fs:[0x28]	      6978	screen.c	FUNCTION_42
0xdeba	            0x7405	                            je 0x400df01	      6978	screen.c	FUNCTION_42
0xdebc	      0xe800000000	                          call 0x400df01	      6978	screen.c	FUNCTION_42
0xdec1	        0x488d65f0	                   lea rsp, [rbp - 0x10]	      6978	screen.c	FUNCTION_42
0xdec5	              0x5b	                                 pop rbx	      6978	screen.c	FUNCTION_42
0xdec6	            0x415c	                                 pop r12	      6978	screen.c	FUNCTION_42
0xdec8	              0x5d	                                 pop rbp	      6978	screen.c	FUNCTION_42
0xdec9	              0xc3	                                     ret	      6978	screen.c	FUNCTION_42
text_to_screenline	DO,0:functions,0:CALL,8:ELSE,9:IF,15:WHILE,0:FOR,2:SWITCH,0	284
0x4946	              0x55	                                push rbp	      2460	screen.c	FUNCTION_23
0x4947	          0x4889e5	                            mov rbp, rsp	      2460	screen.c	FUNCTION_23
0x494a	    0x4881eca00000	                           sub rsp, 0xa0	      2460	screen.c	FUNCTION_23
0x4951	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	      2460	screen.c	FUNCTION_23
0x4958	    0x4889b570ffff	             mov qword [rbp - 0x90], rsi	      2460	screen.c	FUNCTION_23
0x495f	    0x89956cffffff	             mov dword [rbp - 0x94], edx	      2460	screen.c	FUNCTION_23
0x4965	    0x64488b042528	                mov rax, qword fs:[0x28]	      2460	screen.c	FUNCTION_23
0x496e	        0x488945f8	                mov qword [rbp - 8], rax	      2460	screen.c	FUNCTION_23
0x4972	            0x31c0	                            xor eax, eax	      2460	screen.c	FUNCTION_23
0x4974	    0x488b05000000	            mov rax, qword [0x040049bb] 	      2461	screen.c	FUNCTION_23
0x497b	          0x4889c2	                            mov rdx, rax	      2461	screen.c	FUNCTION_23
0x497e	    0x488b05000000	            mov rax, qword [0x040049c5] 	      2461	screen.c	FUNCTION_23
0x4985	          0x4829c2	                            sub rdx, rax	      2461	screen.c	FUNCTION_23
0x4988	          0x4889d0	                            mov rax, rdx	      2461	screen.c	FUNCTION_23
0x498b	          0x8945ac	             mov dword [rbp - 0x54], eax	      2461	screen.c	FUNCTION_23
0x498e	    0x8b0500000000	            mov eax, dword [0x040049d4] 	      2464	screen.c	FUNCTION_23	IF_1
0x4994	            0x85c0	                           test eax, eax	      2464	screen.c	FUNCTION_23	IF_1
0x4996	     0xf841b030000	                            je 0x4004cf7	      2464	screen.c	FUNCTION_23	IF_1
0x499c	    0xc74594000000	               mov dword [rbp - 0x6c], 0	      2473	screen.c	FUNCTION_23	IF_1
0x49a3	    0xc74598000000	               mov dword [rbp - 0x68], 0	      2474	screen.c	FUNCTION_23	IF_1
0x49aa	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2478	screen.c	FUNCTION_23	IF_1	IF_2
0x49b1	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      2478	screen.c	FUNCTION_23	IF_1	IF_2
0x49b7	            0x85c0	                           test eax, eax	      2478	screen.c	FUNCTION_23	IF_1	IF_2
0x49b9	            0x7408	                            je 0x4004a03	      2478	screen.c	FUNCTION_23	IF_1	IF_2
0x49bb	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      2479	screen.c	FUNCTION_23	IF_1	IF_2
0x49be	          0x894590	             mov dword [rbp - 0x70], eax	      2479	screen.c	FUNCTION_23	IF_1	IF_2
0x49c1	            0xeb0e	                           jmp 0x4004a11	      2479	screen.c	FUNCTION_23	IF_1	IF_2
0x49c3	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      2482	screen.c	FUNCTION_23	IF_1	ELSE_1
0x49c6	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      2482	screen.c	FUNCTION_23	IF_1	ELSE_1
0x49cc	             0x1d0	                            add eax, edx	      2482	screen.c	FUNCTION_23	IF_1	ELSE_1
0x49ce	          0x894590	             mov dword [rbp - 0x70], eax	      2482	screen.c	FUNCTION_23	IF_1	ELSE_1
0x49d1	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2485	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1
0x49d8	        0x488945b8	             mov qword [rbp - 0x48], rax	      2485	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1
0x49dc	      0xe9c2020000	                           jmp 0x4004ce3	      2485	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1
0x49e1	    0x488b05000000	            mov rax, qword [0x04004a28] 	      2487	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1
0x49e8	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      2487	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1
0x49ec	          0x4889d7	                            mov rdi, rdx	      2487	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1
0x49ef	            0xffd0	                                call rax	      2487	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1
0x49f1	          0x8945b0	             mov dword [rbp - 0x50], eax	      2487	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1
0x49f4	    0x488b05000000	            mov rax, qword [0x04004a3b] 	      2488	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1
0x49fb	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      2488	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1
0x49ff	          0x4889d7	                            mov rdi, rdx	      2488	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1
0x4a02	            0xffd0	                                call rax	      2488	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1
0x4a04	          0x8945b4	             mov dword [rbp - 0x4c], eax	      2488	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1
0x4a07	    0x8b956cffffff	             mov edx, dword [rbp - 0x94]	      2489	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_3
0x4a0d	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      2489	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_3
0x4a10	          0x8d0c02	                    lea ecx, [rdx + rax]	      2489	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_3
0x4a13	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2489	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_3
0x4a1a	    0x8b90ac000000	            mov edx, dword [rax + 0xac] 	      2489	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_3
0x4a20	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2491	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_3
0x4a27	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      2491	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_3
0x4a2d	            0x85c0	                           test eax, eax	      2491	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_3
0x4a2f	            0x7408	                            je 0x4004a79	      2491	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_3
0x4a31	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      2491	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_3
0x4a37	            0xeb05	                           jmp 0x4004a7e	      2491	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_3
0x4a39	      0xb800000000	                              mov eax, 0	      2491	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_3
0x4a3e	            0x29c2	                            sub edx, eax	      2491	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_3
0x4a40	            0x89d0	                            mov eax, edx	      2491	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_3
0x4a42	            0x39c1	                            cmp ecx, eax	      2489	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_3
0x4a44	     0xf8f1a030000	                            jg 0x4004da4	      2489	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_3
0x4a4a	    0x488b15000000	            mov rdx, qword [0x04004a91] 	      2495	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1
0x4a51	          0x8b4590	             mov eax, dword [rbp - 0x70]	      2495	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1
0x4a54	            0x4898	                                    cdqe	      2495	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1
0x4a56	          0x4801c2	                            add rdx, rax	      2495	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1
0x4a59	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2495	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1
0x4a5d	           0xfb600	                   movzx eax, byte [rax]	      2495	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1
0x4a60	            0x8802	                      mov byte [rdx], al	      2495	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1
0x4a62	    0x8b0500000000	            mov eax, dword [0x04004aa8] 	      2496	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4
0x4a68	            0x85c0	                           test eax, eax	      2496	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4
0x4a6a	     0xf84c4010000	                            je 0x4004c74	      2496	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4
0x4a70	        0x488d55c0	                   lea rdx, [rbp - 0x40]	      2498	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	CALL_1
0x4a74	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2498	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	CALL_1
0x4a78	          0x4889d6	                            mov rsi, rdx	      2498	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	CALL_1
0x4a7b	          0x4889c7	                            mov rdi, rax	      2498	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	CALL_1
0x4a7e	      0xe800000000	                          call 0x4004ac3	      2498	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	CALL_1
0x4a83	          0x894588	             mov dword [rbp - 0x78], eax	      2498	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	CALL_1
0x4a86	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2499	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	IF_5
0x4a8a	           0xfb600	                   movzx eax, byte [rax]	      2499	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	IF_5
0x4a8d	            0x84c0	                             test al, al	      2499	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	IF_5
0x4a8f	            0x782c	                            js 0x4004afd	      2499	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	IF_5
0x4a91	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      2499	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	IF_5
0x4a94	            0x85c0	                           test eax, eax	      2499	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	IF_5
0x4a96	            0x7525	                           jne 0x4004afd	      2499	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	IF_5
0x4a98	    0x488b05000000	            mov rax, qword [0x04004adf] 	      2501	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	IF_5
0x4a9f	          0x8b5590	             mov edx, dword [rbp - 0x70]	      2501	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	IF_5
0x4aa2	          0x4863d2	                         movsxd rdx, edx	      2501	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	IF_5
0x4aa5	        0x48c1e202	                              shl rdx, 2	      2501	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	IF_5
0x4aa9	          0x4801d0	                            add rax, rdx	      2501	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	IF_5
0x4aac	    0xc70000000000	                      mov dword [rax], 0	      2501	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	IF_5
0x4ab2	          0x8b4588	             mov eax, dword [rbp - 0x78]	      2503	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	IF_5
0x4ab5	          0x894594	             mov dword [rbp - 0x6c], eax	      2503	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	IF_5
0x4ab8	      0xe958010000	                           jmp 0x4004c55	      2503	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	IF_5
0x4abd	    0x8b0500000000	            mov eax, dword [0x04004b03] 	      2509	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	CALL_2
0x4ac3	            0x85c0	                           test eax, eax	      2509	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	CALL_2
0x4ac5	     0xf84de000000	                            je 0x4004be9	      2509	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	CALL_2
0x4acb	    0x8b0500000000	            mov eax, dword [0x04004b11] 	      2509	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	CALL_2
0x4ad1	            0x85c0	                           test eax, eax	      2509	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	CALL_2
0x4ad3	     0xf85d0000000	                           jne 0x4004be9	      2509	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	CALL_2
0x4ad9	    0x817d88200600	          cmp dword [rbp - 0x78], 0x620 	      2509	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	CALL_2
0x4ae0	     0xf8ec3000000	                           jle 0x4004be9	      2509	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	CALL_2
0x4ae6	    0x817d88700600	          cmp dword [rbp - 0x78], 0x670 	      2509	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	CALL_2
0x4aed	     0xf8fb6000000	                            jg 0x4004be9	      2509	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	CALL_2
0x4af3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2514	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6
0x4af7	           0xfb600	                   movzx eax, byte [rax]	      2514	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6
0x4afa	           0xfb6c0	                           movzx eax, al	      2514	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6
0x4afd	          0x894584	             mov dword [rbp - 0x7c], eax	      2514	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6
0x4b00	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2518	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	IF_7
0x4b07	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      2518	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	IF_7
0x4b0d	            0x85c0	                           test eax, eax	      2518	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	IF_7
0x4b0f	            0x742c	                            je 0x4004b7d	      2518	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	IF_7
0x4b11	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      2520	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	IF_7
0x4b14	          0x89459c	             mov dword [rbp - 0x64], eax	      2520	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	IF_7
0x4b17	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2521	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	IF_7
0x4b1a	          0x8945a0	             mov dword [rbp - 0x60], eax	      2521	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	IF_7
0x4b1d	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      2522	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	IF_7	CALL_3
0x4b20	          0x4863d0	                         movsxd rdx, eax	      2522	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	IF_7	CALL_3
0x4b23	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2522	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	IF_7	CALL_3
0x4b27	          0x4801d0	                            add rax, rdx	      2522	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	IF_7	CALL_3
0x4b2a	          0x4889c7	                            mov rdi, rax	      2522	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	IF_7	CALL_3
0x4b2d	      0xe800000000	                          call 0x4004b72	      2522	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	IF_7	CALL_3
0x4b32	          0x8945a4	             mov dword [rbp - 0x5c], eax	      2522	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	IF_7	CALL_3
0x4b35	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      2523	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	IF_7
0x4b38	          0x894598	             mov dword [rbp - 0x68], eax	      2523	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	IF_7
0x4b3b	            0xeb2b	                           jmp 0x4004ba8	      2523	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	IF_7
0x4b3d	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      2527	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	ELSE_3	CALL_4
0x4b40	          0x4863d0	                         movsxd rdx, eax	      2527	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	ELSE_3	CALL_4
0x4b43	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2527	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	ELSE_3	CALL_4
0x4b47	          0x4801c2	                            add rdx, rax	      2527	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	ELSE_3	CALL_4
0x4b4a	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2527	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	ELSE_3	CALL_4
0x4b4e	          0x4889c6	                            mov rsi, rax	      2527	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	ELSE_3	CALL_4
0x4b51	          0x4889d7	                            mov rdi, rdx	      2527	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	ELSE_3	CALL_4
0x4b54	      0xe800000000	                          call 0x4004b99	      2527	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	ELSE_3	CALL_4
0x4b59	          0x89459c	             mov dword [rbp - 0x64], eax	      2527	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	ELSE_3	CALL_4
0x4b5c	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      2528	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	ELSE_3
0x4b5f	          0x8945a4	             mov dword [rbp - 0x5c], eax	      2528	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	ELSE_3
0x4b62	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      2529	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	ELSE_3
0x4b65	          0x8945a0	             mov dword [rbp - 0x60], eax	      2529	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	ELSE_3
0x4b68	          0x8b4588	             mov eax, dword [rbp - 0x78]	      2531	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6
0x4b6b	          0x894594	             mov dword [rbp - 0x6c], eax	      2531	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6
0x4b6e	        0x448b45a4	             mov r8d, dword [rbp - 0x5c]	      2533	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	CALL_5
0x4b72	          0x8b7da0	             mov edi, dword [rbp - 0x60]	      2533	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	CALL_5
0x4b75	          0x8b4d9c	             mov ecx, dword [rbp - 0x64]	      2533	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	CALL_5
0x4b78	        0x488d55c0	                   lea rdx, [rbp - 0x40]	      2533	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	CALL_5
0x4b7c	        0x488d7584	                   lea rsi, [rbp - 0x7c]	      2533	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	CALL_5
0x4b80	          0x8b4588	             mov eax, dword [rbp - 0x78]	      2533	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	CALL_5
0x4b83	          0x4589c1	                            mov r9d, r8d	      2533	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	CALL_5
0x4b86	          0x4189f8	                            mov r8d, edi	      2533	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	CALL_5
0x4b89	            0x89c7	                            mov edi, eax	      2533	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	CALL_5
0x4b8b	      0xe800000000	                          call 0x4004bd0	      2533	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	CALL_5
0x4b90	          0x894588	             mov dword [rbp - 0x78], eax	      2533	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6	CALL_5
0x4b93	    0x488b15000000	            mov rdx, qword [0x04004bda] 	      2535	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6
0x4b9a	          0x8b4590	             mov eax, dword [rbp - 0x70]	      2535	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6
0x4b9d	            0x4898	                                    cdqe	      2535	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6
0x4b9f	          0x4801d0	                            add rax, rdx	      2535	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6
0x4ba2	          0x8b5584	             mov edx, dword [rbp - 0x7c]	      2535	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6
0x4ba5	            0x8810	                      mov byte [rax], dl	      2535	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6
0x4ba7	            0xeb06	                           jmp 0x4004bef	      2510	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	IF_6
0x4ba9	          0x8b4588	             mov eax, dword [rbp - 0x78]	      2538	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	ELSE_4
0x4bac	          0x894594	             mov dword [rbp - 0x6c], eax	      2538	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	ELSE_4
0x4baf	    0x488b05000000	            mov rax, qword [0x04004bf6] 	      2546	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	ELSE_5
0x4bb6	          0x8b5590	             mov edx, dword [rbp - 0x70]	      2546	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	ELSE_5
0x4bb9	          0x4863d2	                         movsxd rdx, edx	      2546	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	ELSE_5
0x4bbc	        0x48c1e202	                              shl rdx, 2	      2546	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	ELSE_5
0x4bc0	          0x4801c2	                            add rdx, rax	      2546	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	ELSE_5
0x4bc3	          0x8b4588	             mov eax, dword [rbp - 0x78]	      2546	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	ELSE_5
0x4bc6	            0x8902	                    mov dword [rdx], eax	      2546	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	ELSE_5
0x4bc8	    0xc7458c000000	               mov dword [rbp - 0x74], 0	      2547	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	ELSE_5	FOR_2
0x4bcf	            0xeb36	                           jmp 0x4004c47	      2547	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	ELSE_5	FOR_2
0x4bd1	          0x8b458c	             mov eax, dword [rbp - 0x74]	      2549	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	ELSE_5	FOR_2
0x4bd4	            0x4898	                                    cdqe	      2549	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	ELSE_5	FOR_2
0x4bd6	    0x488b04c50000	                  mov rax, qword [rax*8]	      2549	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	ELSE_5	FOR_2
0x4bde	          0x8b5590	             mov edx, dword [rbp - 0x70]	      2549	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	ELSE_5	FOR_2
0x4be1	          0x4863d2	                         movsxd rdx, edx	      2549	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	ELSE_5	FOR_2
0x4be4	        0x48c1e202	                              shl rdx, 2	      2549	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	ELSE_5	FOR_2
0x4be8	          0x4801c2	                            add rdx, rax	      2549	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	ELSE_5	FOR_2
0x4beb	          0x8b458c	             mov eax, dword [rbp - 0x74]	      2549	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	ELSE_5	FOR_2
0x4bee	            0x4898	                                    cdqe	      2549	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	ELSE_5	FOR_2
0x4bf0	        0x8b4485c0	     mov eax, dword [rbp + rax*4 - 0x40]	      2549	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	ELSE_5	FOR_2
0x4bf4	            0x8902	                    mov dword [rdx], eax	      2549	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	ELSE_5	FOR_2
0x4bf6	          0x8b458c	             mov eax, dword [rbp - 0x74]	      2550	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	ELSE_5	FOR_2	IF_9
0x4bf9	            0x4898	                                    cdqe	      2550	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	ELSE_5	FOR_2	IF_9
0x4bfb	        0x8b4485c0	     mov eax, dword [rbp + rax*4 - 0x40]	      2550	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	ELSE_5	FOR_2	IF_9
0x4bff	            0x85c0	                           test eax, eax	      2550	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	ELSE_5	FOR_2	IF_9
0x4c01	            0x7411	                            je 0x4004c54	      2550	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	ELSE_5	FOR_2	IF_9
0x4c03	        0x83458c01	               add dword [rbp - 0x74], 1	      2547	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	ELSE_5	FOR_2
0x4c07	    0x8b0500000000	            mov eax, dword [0x04004c4d] 	      2547	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	ELSE_5	FOR_2
0x4c0d	          0x39458c	            cmp dword [rbp - 0x74], eax 	      2547	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	ELSE_5	FOR_2
0x4c10	            0x7cbf	                            jl 0x4004c11	      2547	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	ELSE_5	FOR_2
0x4c12	            0xeb01	                           jmp 0x4004c55	      2547	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	ELSE_5	FOR_2
0x4c14	              0x90	                                     nop	      2551	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	ELSE_2	ELSE_5	FOR_2	IF_9
0x4c15	        0x837db001	               cmp dword [rbp - 0x50], 1	      2554	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	IF_10
0x4c19	            0x7e70	                           jle 0x4004ccb	      2554	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	IF_10
0x4c1b	    0x488b05000000	            mov rax, qword [0x04004c62] 	      2555	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	IF_10
0x4c22	          0x8b5590	             mov edx, dword [rbp - 0x70]	      2555	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	IF_10
0x4c25	          0x4863d2	                         movsxd rdx, edx	      2555	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	IF_10
0x4c28	        0x4883c201	                              add rdx, 1	      2555	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	IF_10
0x4c2c	          0x4801d0	                            add rax, rdx	      2555	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	IF_10
0x4c2f	          0xc60000	                       mov byte [rax], 0	      2555	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	IF_10
0x4c32	            0xeb57	                           jmp 0x4004ccb	      2555	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_4	IF_10
0x4c34	    0x8b0500000000	            mov eax, dword [0x04004c7a] 	      2557	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	ELSE_6	IF_11
0x4c3a	      0x3dcc260000	                         cmp eax, 0x26cc	      2557	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	ELSE_6	IF_11
0x4c3f	            0x7526	                           jne 0x4004ca7	      2557	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	ELSE_6	IF_11
0x4c41	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2557	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	ELSE_6	IF_11
0x4c45	           0xfb600	                   movzx eax, byte [rax]	      2557	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	ELSE_6	IF_11
0x4c48	            0x3c8e	                            cmp al, 0x8e	      2557	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	ELSE_6	IF_11
0x4c4a	            0x751b	                           jne 0x4004ca7	      2557	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	ELSE_6	IF_11
0x4c4c	    0x488b15000000	            mov rdx, qword [0x04004c93] 	      2559	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	ELSE_6	IF_11
0x4c53	          0x8b4590	             mov eax, dword [rbp - 0x70]	      2559	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	ELSE_6	IF_11
0x4c56	            0x4898	                                    cdqe	      2559	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	ELSE_6	IF_11
0x4c58	          0x4801c2	                            add rdx, rax	      2559	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	ELSE_6	IF_11
0x4c5b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2559	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	ELSE_6	IF_11
0x4c5f	         0xfb64001	               movzx eax, byte [rax + 1]	      2559	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	ELSE_6	IF_11
0x4c63	            0x8802	                      mov byte [rdx], al	      2559	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	ELSE_6	IF_11
0x4c65	            0xeb24	                           jmp 0x4004ccb	      2559	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	ELSE_6	IF_11
0x4c67	        0x837db001	               cmp dword [rbp - 0x50], 1	      2560	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	ELSE_7	IF_12
0x4c6b	            0x7e1e	                           jle 0x4004ccb	      2560	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	ELSE_7	IF_12
0x4c6d	    0x488b05000000	            mov rax, qword [0x04004cb4] 	      2562	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	ELSE_7	IF_12
0x4c74	          0x8b5590	             mov edx, dword [rbp - 0x70]	      2562	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	ELSE_7	IF_12
0x4c77	          0x4863d2	                         movsxd rdx, edx	      2562	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	ELSE_7	IF_12
0x4c7a	        0x4883c201	                              add rdx, 1	      2562	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	ELSE_7	IF_12
0x4c7e	          0x4801c2	                            add rdx, rax	      2562	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	ELSE_7	IF_12
0x4c81	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2562	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	ELSE_7	IF_12
0x4c85	         0xfb64001	               movzx eax, byte [rax + 1]	      2562	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	ELSE_7	IF_12
0x4c89	            0x8802	                      mov byte [rdx], al	      2562	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	ELSE_7	IF_12
0x4c8b	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      2563	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1
0x4c8e	     0x1856cffffff	             add dword [rbp - 0x94], eax	      2563	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1
0x4c94	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      2564	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1
0x4c97	           0x14590	             add dword [rbp - 0x70], eax	      2564	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1
0x4c9a	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      2565	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1
0x4c9d	            0x4898	                                    cdqe	      2565	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1
0x4c9f	        0x480145b8	            add qword [rbp - 0x48], rax 	      2565	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1
0x4ca3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2485	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1
0x4ca7	           0xfb600	                   movzx eax, byte [rax]	      2485	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1
0x4caa	            0x84c0	                             test al, al	      2485	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1
0x4cac	     0xf852ffdffff	                           jne 0x4004a21	      2485	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1
0x4cb2	      0xe9ae000000	                           jmp 0x4004da5	      2485	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1
0x4cb7	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2571	screen.c	FUNCTION_23	ELSE_8	CALL_6
0x4cbe	          0x4889c7	                            mov rdi, rax	      2571	screen.c	FUNCTION_23	ELSE_8	CALL_6
0x4cc1	      0xe800000000	                          call 0x4004d06	      2571	screen.c	FUNCTION_23	ELSE_8	CALL_6
0x4cc6	          0x8945a8	             mov dword [rbp - 0x58], eax	      2571	screen.c	FUNCTION_23	ELSE_8	CALL_6
0x4cc9	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2573	screen.c	FUNCTION_23	ELSE_8	IF_13
0x4cd0	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2573	screen.c	FUNCTION_23	ELSE_8	IF_13
0x4cd6	    0x2b856cffffff	             sub eax, dword [rbp - 0x94]	      2573	screen.c	FUNCTION_23	ELSE_8	IF_13
0x4cdc	          0x3b45a8	             cmp eax, dword [rbp - 0x58]	      2573	screen.c	FUNCTION_23	ELSE_8	IF_13
0x4cdf	            0x7d16	                           jge 0x4004d37	      2573	screen.c	FUNCTION_23	ELSE_8	IF_13
0x4ce1	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2574	screen.c	FUNCTION_23	ELSE_8	IF_13
0x4ce8	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2574	screen.c	FUNCTION_23	ELSE_8	IF_13
0x4cee	    0x2b856cffffff	             sub eax, dword [rbp - 0x94]	      2574	screen.c	FUNCTION_23	ELSE_8	IF_13
0x4cf4	          0x8945a8	             mov dword [rbp - 0x58], eax	      2574	screen.c	FUNCTION_23	ELSE_8	IF_13
0x4cf7	        0x837da800	               cmp dword [rbp - 0x58], 0	      2575	screen.c	FUNCTION_23	ELSE_8	IF_14
0x4cfb	            0x7e68	                           jle 0x4004da5	      2575	screen.c	FUNCTION_23	ELSE_8	IF_14
0x4cfd	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2578	screen.c	FUNCTION_23	ELSE_8	IF_14	IF_15
0x4d04	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      2578	screen.c	FUNCTION_23	ELSE_8	IF_14	IF_15
0x4d0a	            0x85c0	                           test eax, eax	      2578	screen.c	FUNCTION_23	ELSE_8	IF_14	IF_15
0x4d0c	            0x7421	                            je 0x4004d6f	      2578	screen.c	FUNCTION_23	ELSE_8	IF_14	IF_15
0x4d0e	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      2579	screen.c	FUNCTION_23	ELSE_8	IF_14	CALL_7
0x4d11	          0x4863d0	                         movsxd rdx, eax	      2579	screen.c	FUNCTION_23	ELSE_8	IF_14	CALL_7
0x4d14	    0x488b05000000	            mov rax, qword [0x04004d5b] 	      2579	screen.c	FUNCTION_23	ELSE_8	IF_14	CALL_7
0x4d1b	    0x488b8d70ffff	             mov rcx, qword [rbp - 0x90]	      2579	screen.c	FUNCTION_23	ELSE_8	IF_14	CALL_7
0x4d22	          0x4889ce	                            mov rsi, rcx	      2579	screen.c	FUNCTION_23	ELSE_8	IF_14	CALL_7
0x4d25	          0x4889c7	                            mov rdi, rax	      2579	screen.c	FUNCTION_23	ELSE_8	IF_14	CALL_7
0x4d28	      0xe800000000	                          call 0x4004d6d	      2579	screen.c	FUNCTION_23	ELSE_8	IF_14	CALL_7
0x4d2d	            0xeb2a	                           jmp 0x4004d99	      2579	screen.c	FUNCTION_23	ELSE_8	IF_14	CALL_7
0x4d2f	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      2582	screen.c	FUNCTION_23	ELSE_8	IF_14	CALL_8
0x4d32	          0x4863d0	                         movsxd rdx, eax	      2582	screen.c	FUNCTION_23	ELSE_8	IF_14	CALL_8
0x4d35	    0x488b0d000000	            mov rcx, qword [0x04004d7c] 	      2582	screen.c	FUNCTION_23	ELSE_8	IF_14	CALL_8
0x4d3c	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      2582	screen.c	FUNCTION_23	ELSE_8	IF_14	CALL_8
0x4d42	            0x4898	                                    cdqe	      2582	screen.c	FUNCTION_23	ELSE_8	IF_14	CALL_8
0x4d44	          0x4801c1	                            add rcx, rax	      2582	screen.c	FUNCTION_23	ELSE_8	IF_14	CALL_8
0x4d47	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2582	screen.c	FUNCTION_23	ELSE_8	IF_14	CALL_8
0x4d4e	          0x4889c6	                            mov rsi, rax	      2582	screen.c	FUNCTION_23	ELSE_8	IF_14	CALL_8
0x4d51	          0x4889cf	                            mov rdi, rcx	      2582	screen.c	FUNCTION_23	ELSE_8	IF_14	CALL_8
0x4d54	      0xe800000000	                          call 0x4004d99	      2582	screen.c	FUNCTION_23	ELSE_8	IF_14	CALL_8
0x4d59	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      2583	screen.c	FUNCTION_23	ELSE_8	IF_14
0x4d5c	     0x1856cffffff	             add dword [rbp - 0x94], eax	      2583	screen.c	FUNCTION_23	ELSE_8	IF_14
0x4d62	            0xeb01	                           jmp 0x4004da5	      2583	screen.c	FUNCTION_23	ELSE_8	IF_14
0x4d64	              0x90	                                     nop	      2494	screen.c	FUNCTION_23	IF_1	ELSE_1	FOR_1	IF_3
0x4d65	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      2586	screen.c	FUNCTION_23
0x4d6b	        0x488b75f8	                mov rsi, qword [rbp - 8]	      2587	screen.c	FUNCTION_23
0x4d6f	    0x644833342528	                xor rsi, qword fs:[0x28]	      2587	screen.c	FUNCTION_23
0x4d78	            0x7405	                            je 0x4004dbf	      2587	screen.c	FUNCTION_23
0x4d7a	      0xe800000000	                          call 0x4004dbf	      2587	screen.c	FUNCTION_23
0x4d7f	              0xc9	                                   leave	      2587	screen.c	FUNCTION_23
0x4d80	              0xc3	                                     ret	      2587	screen.c	FUNCTION_23
screen_puts	DO,0:functions,0:CALL,1:ELSE,0:IF,0:WHILE,0:FOR,0:SWITCH,0	18
0xecdf	              0x55	                                push rbp	      7376	screen.c	FUNCTION_50
0xece0	          0x4889e5	                            mov rbp, rsp	      7376	screen.c	FUNCTION_50
0xece3	        0x4883ec20	                           sub rsp, 0x20	      7376	screen.c	FUNCTION_50
0xece7	        0x48897df8	                mov qword [rbp - 8], rdi	      7376	screen.c	FUNCTION_50
0xeceb	          0x8975f4	              mov dword [rbp - 0xc], esi	      7376	screen.c	FUNCTION_50
0xecee	          0x8955f0	             mov dword [rbp - 0x10], edx	      7376	screen.c	FUNCTION_50
0xecf1	          0x894dec	             mov dword [rbp - 0x14], ecx	      7376	screen.c	FUNCTION_50
0xecf4	          0x8b75ec	             mov esi, dword [rbp - 0x14]	      7377	screen.c	FUNCTION_50	CALL_1
0xecf7	          0x8b4df0	             mov ecx, dword [rbp - 0x10]	      7377	screen.c	FUNCTION_50	CALL_1
0xecfa	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      7377	screen.c	FUNCTION_50	CALL_1
0xecfd	        0x488b45f8	                mov rax, qword [rbp - 8]	      7377	screen.c	FUNCTION_50	CALL_1
0xed01	          0x4189f0	                            mov r8d, esi	      7377	screen.c	FUNCTION_50	CALL_1
0xed04	      0xbeffffffff	                     mov esi, 0xffffffff	      7377	screen.c	FUNCTION_50	CALL_1
0xed09	          0x4889c7	                            mov rdi, rax	      7377	screen.c	FUNCTION_50	CALL_1
0xed0c	      0xe800000000	                          call 0x400ed51	      7377	screen.c	FUNCTION_50	CALL_1
0xed11	              0x90	                                     nop	      7378	screen.c	FUNCTION_50
0xed12	              0xc9	                                   leave	      7378	screen.c	FUNCTION_50
0xed13	              0xc3	                                     ret	      7378	screen.c	FUNCTION_50
lineinvalid	DO,0:functions,0:CALL,1:ELSE,0:IF,0:WHILE,0:FOR,0:SWITCH,0	18
0x1229b	              0x55	                                push rbp	      9134	screen.c	FUNCTION_74
0x1229c	          0x4889e5	                            mov rbp, rsp	      9134	screen.c	FUNCTION_74
0x1229f	        0x4883ec10	                           sub rsp, 0x10	      9134	screen.c	FUNCTION_74
0x122a3	          0x897dfc	                mov dword [rbp - 4], edi	      9134	screen.c	FUNCTION_74
0x122a6	          0x8975f8	                mov dword [rbp - 8], esi	      9134	screen.c	FUNCTION_74
0x122a9	          0x8b45f8	                mov eax, dword [rbp - 8]	      9135	screen.c	FUNCTION_74	CALL_1
0x122ac	            0x4898	                                    cdqe	      9135	screen.c	FUNCTION_74	CALL_1
0x122ae	        0x488d1400	                    lea rdx, [rax + rax]	      9135	screen.c	FUNCTION_74	CALL_1
0x122b2	    0x488b05000000	            mov rax, qword [0x040122f9] 	      9135	screen.c	FUNCTION_74	CALL_1
0x122b9	          0x8b4dfc	                mov ecx, dword [rbp - 4]	      9135	screen.c	FUNCTION_74	CALL_1
0x122bc	          0x4801c9	                            add rcx, rcx	      9135	screen.c	FUNCTION_74	CALL_1
0x122bf	          0x4801c8	                            add rax, rcx	      9135	screen.c	FUNCTION_74	CALL_1
0x122c2	      0xbeffffffff	                     mov esi, 0xffffffff	      9135	screen.c	FUNCTION_74	CALL_1
0x122c7	          0x4889c7	                            mov rdi, rax	      9135	screen.c	FUNCTION_74	CALL_1
0x122ca	      0xe800000000	                          call 0x401230f	      9135	screen.c	FUNCTION_74	CALL_1
0x122cf	              0x90	                                     nop	      9136	screen.c	FUNCTION_74
0x122d0	              0xc9	                                   leave	      9136	screen.c	FUNCTION_74
0x122d1	              0xc3	                                     ret	      9136	screen.c	FUNCTION_74
get_trans_bufname	DO,0:functions,0:CALL,5:ELSE,1:IF,1:WHILE,0:FOR,0:SWITCH,0	34
0x14b2c	              0x55	                                push rbp	     10658	screen.c	FUNCTION_92
0x14b2d	          0x4889e5	                            mov rbp, rsp	     10658	screen.c	FUNCTION_92
0x14b30	        0x4883ec10	                           sub rsp, 0x10	     10658	screen.c	FUNCTION_92
0x14b34	        0x48897df8	                mov qword [rbp - 8], rdi	     10658	screen.c	FUNCTION_92
0x14b38	        0x488b45f8	                mov rax, qword [rbp - 8]	     10659	screen.c	FUNCTION_92	IF_1	CALL_1
0x14b3c	          0x4889c7	                            mov rdi, rax	     10659	screen.c	FUNCTION_92	IF_1	CALL_1
0x14b3f	      0xe800000000	                          call 0x4014b84	     10659	screen.c	FUNCTION_92	IF_1	CALL_1
0x14b44	          0x4885c0	                           test rax, rax	     10659	screen.c	FUNCTION_92	IF_1	CALL_1
0x14b47	            0x7428	                            je 0x4014bb1	     10659	screen.c	FUNCTION_92	IF_1	CALL_1
0x14b49	        0x488b45f8	                mov rax, qword [rbp - 8]	     10660	screen.c	FUNCTION_92	CALL_3
0x14b4d	          0x4889c7	                            mov rdi, rax	     10660	screen.c	FUNCTION_92	CALL_3
0x14b50	      0xe800000000	                          call 0x4014b95	     10660	screen.c	FUNCTION_92	CALL_3
0x14b55	          0x4889c1	                            mov rcx, rax	     10660	screen.c	FUNCTION_92	CALL_3
0x14b58	    0x488b05000000	            mov rax, qword [0x04014b9f] 	     10660	screen.c	FUNCTION_92	CALL_3
0x14b5f	      0xbaff0f0000	                          mov edx, 0xfff	     10660	screen.c	FUNCTION_92	CALL_3
0x14b64	          0x4889ce	                            mov rsi, rcx	     10660	screen.c	FUNCTION_92	CALL_3
0x14b67	          0x4889c7	                            mov rdi, rax	     10660	screen.c	FUNCTION_92	CALL_3
0x14b6a	      0xe800000000	                          call 0x4014baf	     10660	screen.c	FUNCTION_92	CALL_3
0x14b6f	            0xeb29	                           jmp 0x4014bda	     10660	screen.c	FUNCTION_92	CALL_3
0x14b71	    0x488b15000000	            mov rdx, qword [0x04014bb8] 	     10662	screen.c	FUNCTION_92	CALL_4
0x14b78	        0x488b45f8	                mov rax, qword [rbp - 8]	     10662	screen.c	FUNCTION_92	CALL_4
0x14b7c	    0x488bb0980000	            mov rsi, qword [rax + 0x98] 	     10662	screen.c	FUNCTION_92	CALL_4
0x14b83	        0x488b45f8	                mov rax, qword [rbp - 8]	     10662	screen.c	FUNCTION_92	CALL_4
0x14b87	    0x41b801000000	                              mov r8d, 1	     10662	screen.c	FUNCTION_92	CALL_4
0x14b8d	      0xb900100000	                         mov ecx, 0x1000	     10662	screen.c	FUNCTION_92	CALL_4
0x14b92	          0x4889c7	                            mov rdi, rax	     10662	screen.c	FUNCTION_92	CALL_4
0x14b95	      0xe800000000	                          call 0x4014bda	     10662	screen.c	FUNCTION_92	CALL_4
0x14b9a	    0x488b05000000	            mov rax, qword [0x04014be1] 	     10663	screen.c	FUNCTION_92	CALL_5
0x14ba1	      0xbe00100000	                         mov esi, 0x1000	     10663	screen.c	FUNCTION_92	CALL_5
0x14ba6	          0x4889c7	                            mov rdi, rax	     10663	screen.c	FUNCTION_92	CALL_5
0x14ba9	      0xe800000000	                          call 0x4014bee	     10663	screen.c	FUNCTION_92	CALL_5
0x14bae	              0x90	                                     nop	     10664	screen.c	FUNCTION_92
0x14baf	              0xc9	                                   leave	     10664	screen.c	FUNCTION_92
0x14bb0	              0xc3	                                     ret	     10664	screen.c	FUNCTION_92
draw_tabline	DO,0:functions,0:CALL,29:ELSE,4:IF,21:WHILE,2:FOR,3:SWITCH,0	396
0x1454c	              0x55	                                push rbp	     10468	screen.c	FUNCTION_91
0x1454d	          0x4889e5	                            mov rbp, rsp	     10468	screen.c	FUNCTION_91
0x14550	        0x4883ec60	                           sub rsp, 0x60	     10468	screen.c	FUNCTION_91
0x14554	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	     10469	screen.c	FUNCTION_91
0x1455b	    0xc745ac000000	               mov dword [rbp - 0x54], 0	     10472	screen.c	FUNCTION_91
0x14562	    0xc745b0000000	               mov dword [rbp - 0x50], 0	     10473	screen.c	FUNCTION_91
0x14569	    0x8b0500000000	            mov eax, dword [0x040145af] 	     10481	screen.c	FUNCTION_91	CALL_1
0x1456f	          0x8945c8	             mov dword [rbp - 0x38], eax	     10481	screen.c	FUNCTION_91	CALL_1
0x14572	    0x8b0500000000	            mov eax, dword [0x040145b8] 	     10482	screen.c	FUNCTION_91	CALL_2
0x14578	          0x8945cc	             mov dword [rbp - 0x34], eax	     10482	screen.c	FUNCTION_91	CALL_2
0x1457b	    0x8b0500000000	            mov eax, dword [0x040145c1] 	     10483	screen.c	FUNCTION_91	CALL_3
0x14581	          0x8945d0	             mov dword [rbp - 0x30], eax	     10483	screen.c	FUNCTION_91	CALL_3
0x14584	    0x8b0500000000	            mov eax, dword [0x040145ca] 	     10486	screen.c	FUNCTION_91
0x1458a	          0x83f807	                              cmp eax, 7	     10491	screen.c	FUNCTION_91
0x1458d	            0x7f11	                            jg 0x40145e0	     10491	screen.c	FUNCTION_91
0x1458f	    0x8b0500000000	            mov eax, dword [0x040145d5] 	     10491	screen.c	FUNCTION_91
0x14595	            0x85c0	                           test eax, eax	     10491	screen.c	FUNCTION_91
0x14597	            0x7507	                           jne 0x40145e0	     10491	screen.c	FUNCTION_91
0x14599	      0xb801000000	                              mov eax, 1	     10491	screen.c	FUNCTION_91
0x1459e	            0xeb05	                           jmp 0x40145e5	     10491	screen.c	FUNCTION_91
0x145a0	      0xb800000000	                              mov eax, 0	     10491	screen.c	FUNCTION_91
0x145a5	          0x8945d4	             mov dword [rbp - 0x2c], eax	     10486	screen.c	FUNCTION_91
0x145a8	    0x488b05000000	            mov rax, qword [0x040145ef] 	     10495	screen.c	FUNCTION_91	IF_1
0x145af	          0x4885c0	                           test rax, rax	     10495	screen.c	FUNCTION_91	IF_1
0x145b2	     0xf846e050000	                            je 0x4014b66	     10495	screen.c	FUNCTION_91	IF_1
0x145b8	    0xc70500000000	               mov dword [0x04014602], 0	     10497	screen.c	FUNCTION_91
0x145c2	      0xe800000000	                          call 0x4014607	     10508	screen.c	FUNCTION_91	IF_3	CALL_6
0x145c7	            0x85c0	                           test eax, eax	     10508	screen.c	FUNCTION_91	IF_3	CALL_6
0x145c9	     0xf8e5a050000	                           jle 0x4014b69	     10508	screen.c	FUNCTION_91	IF_3	CALL_6
0x145cf	    0xc745b0000000	               mov dword [rbp - 0x50], 0	     10514	screen.c	FUNCTION_91	FOR_1
0x145d6	            0xeb1c	                           jmp 0x4014634	     10514	screen.c	FUNCTION_91	FOR_1
0x145d8	    0x488b05000000	            mov rax, qword [0x0401461f] 	     10515	screen.c	FUNCTION_91	FOR_1
0x145df	          0x8b55b0	             mov edx, dword [rbp - 0x50]	     10515	screen.c	FUNCTION_91	FOR_1
0x145e2	          0x4863d2	                         movsxd rdx, edx	     10515	screen.c	FUNCTION_91	FOR_1
0x145e5	          0x4801d2	                            add rdx, rdx	     10515	screen.c	FUNCTION_91	FOR_1
0x145e8	          0x4801d0	                            add rax, rdx	     10515	screen.c	FUNCTION_91	FOR_1
0x145eb	      0x66c7000000	                       mov word [rax], 0	     10515	screen.c	FUNCTION_91	FOR_1
0x145f0	        0x8345b001	               add dword [rbp - 0x50], 1	     10514	screen.c	FUNCTION_91	FOR_1
0x145f4	          0x8b45b0	             mov eax, dword [rbp - 0x50]	     10514	screen.c	FUNCTION_91	FOR_1
0x145f7	          0x4863d0	                         movsxd rdx, eax	     10514	screen.c	FUNCTION_91	FOR_1
0x145fa	    0x488b05000000	            mov rax, qword [0x04014641] 	     10514	screen.c	FUNCTION_91	FOR_1
0x14601	          0x4839c2	                            cmp rdx, rax	     10514	screen.c	FUNCTION_91	FOR_1
0x14604	            0x7cd2	                            jl 0x4014618	     10514	screen.c	FUNCTION_91	FOR_1
0x14606	    0x488b05000000	            mov rax, qword [0x0401464d] 	     10518	screen.c	FUNCTION_91	IF_4
0x1460d	           0xfb600	                   movzx eax, byte [rax]	     10518	screen.c	FUNCTION_91	IF_4
0x14610	            0x84c0	                             test al, al	     10518	screen.c	FUNCTION_91	IF_4
0x14612	            0x745f	                            je 0x40146b3	     10518	screen.c	FUNCTION_91	IF_4
0x14614	    0x8b0500000000	            mov eax, dword [0x0401465a] 	     10520	screen.c	FUNCTION_91	IF_4
0x1461a	          0x8945d8	             mov dword [rbp - 0x28], eax	     10520	screen.c	FUNCTION_91	IF_4
0x1461d	    0xc70500000000	               mov dword [0x04014667], 0	     10524	screen.c	FUNCTION_91	IF_4
0x14627	      0xbe00000000	                              mov esi, 0	     10525	screen.c	FUNCTION_91	IF_4	CALL_7
0x1462c	      0xbf00000000	                              mov edi, 0	     10525	screen.c	FUNCTION_91	IF_4	CALL_7
0x14631	      0xe8159bffff	                call sym.win_redr_custom	     10525	screen.c	FUNCTION_91	IF_4	CALL_7
0x14636	    0x8b0500000000	            mov eax, dword [0x0401467c] 	     10526	screen.c	FUNCTION_91	IF_4	IF_5
0x1463c	            0x85c0	                           test eax, eax	     10526	screen.c	FUNCTION_91	IF_4	IF_5
0x1463e	            0x741f	                            je 0x401469f	     10526	screen.c	FUNCTION_91	IF_4	IF_5
0x14640	    0x41b8fbffffff	                     mov r8d, 0xfffffffb	     10527	screen.c	FUNCTION_91	IF_4	IF_5	CALL_8
0x14646	      0xb901000000	                              mov ecx, 1	     10527	screen.c	FUNCTION_91	IF_4	IF_5	CALL_8
0x1464b	      0xba00000000	                              mov edx, 0	     10527	screen.c	FUNCTION_91	IF_4	IF_5	CALL_8
0x14650	      0xbeffffffff	                     mov esi, 0xffffffff	     10527	screen.c	FUNCTION_91	IF_4	IF_5	CALL_8
0x14655	      0xbf00000000	                              mov edi, 0	     10527	screen.c	FUNCTION_91	IF_4	IF_5	CALL_8
0x1465a	      0xe800000000	                          call 0x401469f	     10527	screen.c	FUNCTION_91	IF_4	IF_5	CALL_8
0x1465f	    0x8b0500000000	            mov eax, dword [0x040146a5] 	     10529	screen.c	FUNCTION_91	IF_4
0x14665	           0xb45d8	              or eax, dword [rbp - 0x28]	     10529	screen.c	FUNCTION_91	IF_4
0x14668	    0x890500000000	            mov dword [0x040146ae], eax 	     10529	screen.c	FUNCTION_91	IF_4
0x1466e	      0xe9a7040000	                           jmp 0x4014b5a	     10529	screen.c	FUNCTION_91	IF_4
0x14673	    0x488b05000000	            mov rax, qword [0x040146ba] 	     10534	screen.c	FUNCTION_91	ELSE_1	CALL_9
0x1467a	        0x488945e0	             mov qword [rbp - 0x20], rax	     10534	screen.c	FUNCTION_91	ELSE_1	CALL_9
0x1467e	            0xeb0f	                           jmp 0x40146cf	     10534	screen.c	FUNCTION_91	ELSE_1	CALL_9
0x14680	        0x8345a401	               add dword [rbp - 0x5c], 1	     10535	screen.c	FUNCTION_91	ELSE_1
0x14684	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10534	screen.c	FUNCTION_91	ELSE_1	CALL_9
0x14688	          0x488b00	                    mov rax, qword [rax]	     10534	screen.c	FUNCTION_91	ELSE_1	CALL_9
0x1468b	        0x488945e0	             mov qword [rbp - 0x20], rax	     10534	screen.c	FUNCTION_91	ELSE_1	CALL_9
0x1468f	      0x48837de000	               cmp qword [rbp - 0x20], 0	     10534	screen.c	FUNCTION_91	ELSE_1	CALL_9
0x14694	            0x75ea	                           jne 0x40146c0	     10534	screen.c	FUNCTION_91	ELSE_1	CALL_9
0x14696	    0x488b05000000	            mov rax, qword [0x040146dd] 	     10537	screen.c	FUNCTION_91	ELSE_1
0x1469d	        0x488d50ff	                      lea rdx, [rax - 1]	     10537	screen.c	FUNCTION_91	ELSE_1
0x146a1	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	     10537	screen.c	FUNCTION_91	ELSE_1
0x146a4	            0x89c1	                            mov ecx, eax	     10537	screen.c	FUNCTION_91	ELSE_1
0x146a6	          0xc1e91f	                           shr ecx, 0x1f	     10537	screen.c	FUNCTION_91	ELSE_1
0x146a9	             0x1c8	                            add eax, ecx	     10537	screen.c	FUNCTION_91	ELSE_1
0x146ab	            0xd1f8	                              sar eax, 1	     10537	screen.c	FUNCTION_91	ELSE_1
0x146ad	            0x4898	                                    cdqe	     10537	screen.c	FUNCTION_91	ELSE_1
0x146af	          0x4801d0	                            add rax, rdx	     10537	screen.c	FUNCTION_91	ELSE_1
0x146b2	          0x8b55a4	             mov edx, dword [rbp - 0x5c]	     10537	screen.c	FUNCTION_91	ELSE_1
0x146b5	          0x4863f2	                         movsxd rsi, edx	     10537	screen.c	FUNCTION_91	ELSE_1
0x146b8	            0x4899	                                     cqo	     10537	screen.c	FUNCTION_91	ELSE_1
0x146ba	          0x48f7fe	                                idiv rsi	     10537	screen.c	FUNCTION_91	ELSE_1
0x146bd	          0x8945a8	             mov dword [rbp - 0x58], eax	     10537	screen.c	FUNCTION_91	ELSE_1
0x146c0	        0x837da805	               cmp dword [rbp - 0x58], 5	     10538	screen.c	FUNCTION_91	ELSE_1	IF_6
0x146c4	            0x7f07	                            jg 0x401470d	     10538	screen.c	FUNCTION_91	ELSE_1	IF_6
0x146c6	    0xc745a8060000	               mov dword [rbp - 0x58], 6	     10539	screen.c	FUNCTION_91	ELSE_1	IF_6
0x146cd	          0x8b45cc	             mov eax, dword [rbp - 0x34]	     10541	screen.c	FUNCTION_91	ELSE_1
0x146d0	          0x8945b4	             mov dword [rbp - 0x4c], eax	     10541	screen.c	FUNCTION_91	ELSE_1
0x146d3	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	     10542	screen.c	FUNCTION_91	ELSE_1
0x146da	    0xc745b0000000	               mov dword [rbp - 0x50], 0	     10543	screen.c	FUNCTION_91	ELSE_1
0x146e1	    0x488b05000000	            mov rax, qword [0x04014728] 	     10544	screen.c	FUNCTION_91	ELSE_1	FOR_2
0x146e8	        0x488945e0	             mov qword [rbp - 0x20], rax	     10544	screen.c	FUNCTION_91	ELSE_1	FOR_2
0x146ec	      0xe96f030000	                           jmp 0x4014aa0	     10544	screen.c	FUNCTION_91	ELSE_1	FOR_2
0x146f1	          0x8b45ac	             mov eax, dword [rbp - 0x54]	     10547	screen.c	FUNCTION_91	ELSE_1	FOR_2
0x146f4	          0x8945b0	             mov dword [rbp - 0x50], eax	     10547	screen.c	FUNCTION_91	ELSE_1	FOR_2
0x146f7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10549	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_7
0x146fb	        0x488b5008	                mov rdx, qword [rax + 8]	     10549	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_7
0x146ff	    0x488b05000000	            mov rax, qword [0x04014746] 	     10549	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_7
0x14706	          0x4839c2	                            cmp rdx, rax	     10549	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_7
0x14709	            0x7506	                           jne 0x4014751	     10549	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_7
0x1470b	          0x8b45c8	             mov eax, dword [rbp - 0x38]	     10550	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_7
0x1470e	          0x8945b4	             mov dword [rbp - 0x4c], eax	     10550	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_7
0x14711	        0x837dd400	               cmp dword [rbp - 0x2c], 0	     10551	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_8
0x14715	            0x7425	                            je 0x401477c	     10551	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_8
0x14717	        0x837dac00	               cmp dword [rbp - 0x54], 0	     10551	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_8
0x1471b	            0x7e1f	                           jle 0x401477c	     10551	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_8
0x1471d	          0x8b45ac	             mov eax, dword [rbp - 0x54]	     10552	screen.c	FUNCTION_91	ELSE_1	FOR_2	CALL_10
0x14720	          0x8d5001	                      lea edx, [rax + 1]	     10552	screen.c	FUNCTION_91	ELSE_1	FOR_2	CALL_10
0x14723	          0x8955ac	             mov dword [rbp - 0x54], edx	     10552	screen.c	FUNCTION_91	ELSE_1	FOR_2	CALL_10
0x14726	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	     10552	screen.c	FUNCTION_91	ELSE_1	FOR_2	CALL_10
0x14729	            0x89d1	                            mov ecx, edx	     10552	screen.c	FUNCTION_91	ELSE_1	FOR_2	CALL_10
0x1472b	            0x89c2	                            mov edx, eax	     10552	screen.c	FUNCTION_91	ELSE_1	FOR_2	CALL_10
0x1472d	      0xbe00000000	                              mov esi, 0	     10552	screen.c	FUNCTION_91	ELSE_1	FOR_2	CALL_10
0x14732	      0xbf7c000000	                           mov edi, 0x7c	     10552	screen.c	FUNCTION_91	ELSE_1	FOR_2	CALL_10
0x14737	      0xe800000000	                          call 0x401477c	     10552	screen.c	FUNCTION_91	ELSE_1	FOR_2	CALL_10
0x1473c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10554	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_9
0x14740	        0x488b5008	                mov rdx, qword [rax + 8]	     10554	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_9
0x14744	    0x488b05000000	            mov rax, qword [0x0401478b] 	     10554	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_9
0x1474b	          0x4839c2	                            cmp rdx, rax	     10554	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_9
0x1474e	            0x7406	                            je 0x4014796	     10554	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_9
0x14750	          0x8b45cc	             mov eax, dword [rbp - 0x34]	     10555	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_9
0x14753	          0x8945b4	             mov dword [rbp - 0x4c], eax	     10555	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_9
0x14756	          0x8b45ac	             mov eax, dword [rbp - 0x54]	     10557	screen.c	FUNCTION_91	ELSE_1	FOR_2	CALL_11
0x14759	          0x8d5001	                      lea edx, [rax + 1]	     10557	screen.c	FUNCTION_91	ELSE_1	FOR_2	CALL_11
0x1475c	          0x8955ac	             mov dword [rbp - 0x54], edx	     10557	screen.c	FUNCTION_91	ELSE_1	FOR_2	CALL_11
0x1475f	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	     10557	screen.c	FUNCTION_91	ELSE_1	FOR_2	CALL_11
0x14762	            0x89d1	                            mov ecx, edx	     10557	screen.c	FUNCTION_91	ELSE_1	FOR_2	CALL_11
0x14764	            0x89c2	                            mov edx, eax	     10557	screen.c	FUNCTION_91	ELSE_1	FOR_2	CALL_11
0x14766	      0xbe00000000	                              mov esi, 0	     10557	screen.c	FUNCTION_91	ELSE_1	FOR_2	CALL_11
0x1476b	      0xbf20000000	                           mov edi, 0x20	     10557	screen.c	FUNCTION_91	ELSE_1	FOR_2	CALL_11
0x14770	      0xe800000000	                          call 0x40147b5	     10557	screen.c	FUNCTION_91	ELSE_1	FOR_2	CALL_11
0x14775	    0x488b05000000	            mov rax, qword [0x040147bc] 	     10559	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_10
0x1477c	        0x483945e0	            cmp qword [rbp - 0x20], rax 	     10559	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_10
0x14780	            0x7518	                           jne 0x40147da	     10559	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_10
0x14782	    0x488b05000000	            mov rax, qword [0x040147c9] 	     10561	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_10
0x14789	        0x488945f0	             mov qword [rbp - 0x10], rax	     10561	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_10
0x1478d	    0x488b05000000	            mov rax, qword [0x040147d4] 	     10562	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_10
0x14794	        0x488945e8	             mov qword [rbp - 0x18], rax	     10562	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_10
0x14798	            0xeb18	                           jmp 0x40147f2	     10562	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_10
0x1479a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10566	screen.c	FUNCTION_91	ELSE_1	FOR_2	ELSE_2
0x1479e	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10566	screen.c	FUNCTION_91	ELSE_1	FOR_2	ELSE_2
0x147a2	        0x488945f0	             mov qword [rbp - 0x10], rax	     10566	screen.c	FUNCTION_91	ELSE_1	FOR_2	ELSE_2
0x147a6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10567	screen.c	FUNCTION_91	ELSE_1	FOR_2	ELSE_2
0x147aa	        0x488b4020	            mov rax, qword [rax + 0x20] 	     10567	screen.c	FUNCTION_91	ELSE_1	FOR_2	ELSE_2
0x147ae	        0x488945e8	             mov qword [rbp - 0x18], rax	     10567	screen.c	FUNCTION_91	ELSE_1	FOR_2	ELSE_2
0x147b2	    0xc745bc000000	               mov dword [rbp - 0x44], 0	     10570	screen.c	FUNCTION_91	ELSE_1	FOR_2
0x147b9	    0xc745b8000000	               mov dword [rbp - 0x48], 0	     10571	screen.c	FUNCTION_91	ELSE_1	FOR_2	FOR_3
0x147c0	            0xeb2b	                           jmp 0x401482d	     10571	screen.c	FUNCTION_91	ELSE_1	FOR_2	FOR_3
0x147c2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10572	screen.c	FUNCTION_91	ELSE_1	FOR_2	FOR_3	IF_11	CALL_12
0x147c6	        0x488b4008	                mov rax, qword [rax + 8]	     10572	screen.c	FUNCTION_91	ELSE_1	FOR_2	FOR_3	IF_11	CALL_12
0x147ca	          0x4889c7	                            mov rdi, rax	     10572	screen.c	FUNCTION_91	ELSE_1	FOR_2	FOR_3	IF_11	CALL_12
0x147cd	      0xe800000000	                          call 0x4014812	     10572	screen.c	FUNCTION_91	ELSE_1	FOR_2	FOR_3	IF_11	CALL_12
0x147d2	            0x85c0	                           test eax, eax	     10572	screen.c	FUNCTION_91	ELSE_1	FOR_2	FOR_3	IF_11	CALL_12
0x147d4	            0x7407	                            je 0x401481d	     10572	screen.c	FUNCTION_91	ELSE_1	FOR_2	FOR_3	IF_11	CALL_12
0x147d6	    0xc745bc010000	               mov dword [rbp - 0x44], 1	     10573	screen.c	FUNCTION_91	ELSE_1	FOR_2	FOR_3	IF_11
0x147dd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10571	screen.c	FUNCTION_91	ELSE_1	FOR_2	FOR_3
0x147e1	        0x488b4020	            mov rax, qword [rax + 0x20] 	     10571	screen.c	FUNCTION_91	ELSE_1	FOR_2	FOR_3
0x147e5	        0x488945e8	             mov qword [rbp - 0x18], rax	     10571	screen.c	FUNCTION_91	ELSE_1	FOR_2	FOR_3
0x147e9	        0x8345b801	               add dword [rbp - 0x48], 1	     10571	screen.c	FUNCTION_91	ELSE_1	FOR_2	FOR_3
0x147ed	      0x48837de800	               cmp qword [rbp - 0x18], 0	     10571	screen.c	FUNCTION_91	ELSE_1	FOR_2	FOR_3
0x147f2	            0x75ce	                           jne 0x4014802	     10571	screen.c	FUNCTION_91	ELSE_1	FOR_2	FOR_3
0x147f4	        0x837dbc00	               cmp dword [rbp - 0x44], 0	     10574	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12
0x147f8	            0x750a	                           jne 0x4014844	     10574	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12
0x147fa	        0x837db801	               cmp dword [rbp - 0x48], 1	     10574	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12
0x147fe	     0xf8ee0000000	                           jle 0x4014924	     10574	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12
0x14804	        0x837db801	               cmp dword [rbp - 0x48], 1	     10576	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	IF_13
0x14808	     0xf8e8c000000	                           jle 0x40148da	     10576	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	IF_13
0x1480e	    0x488b05000000	            mov rax, qword [0x04014855] 	     10578	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	IF_13	CALL_13
0x14815	          0x8b55b8	             mov edx, dword [rbp - 0x48]	     10578	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	IF_13	CALL_13
0x14818	            0x89d1	                            mov ecx, edx	     10578	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	IF_13	CALL_13
0x1481a	      0xba00000000	                              mov edx, 0	     10578	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	IF_13	CALL_13
0x1481f	      0xbe00100000	                         mov esi, 0x1000	     10578	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	IF_13	CALL_13
0x14824	          0x4889c7	                            mov rdi, rax	     10578	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	IF_13	CALL_13
0x14827	      0xb800000000	                              mov eax, 0	     10578	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	IF_13	CALL_13
0x1482c	      0xe800000000	                          call 0x4014871	     10578	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	IF_13	CALL_13
0x14831	    0x488b05000000	            mov rax, qword [0x04014878] 	     10579	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	IF_13	CALL_14
0x14838	          0x4889c7	                            mov rdi, rax	     10579	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	IF_13	CALL_14
0x1483b	      0xe800000000	                          call 0x4014880	     10579	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	IF_13	CALL_14
0x14840	          0x8945c4	             mov dword [rbp - 0x3c], eax	     10579	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	IF_13	CALL_14
0x14843	          0x8b55ac	             mov edx, dword [rbp - 0x54]	     10580	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	IF_13	IF_14
0x14846	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     10580	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	IF_13	IF_14
0x14849	             0x1d0	                            add eax, edx	     10580	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	IF_13	IF_14
0x1484b	            0x4898	                                    cdqe	     10580	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	IF_13	IF_14
0x1484d	    0x488b15000000	            mov rdx, qword [0x04014894] 	     10580	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	IF_13	IF_14
0x14854	        0x4883ea03	                              sub rdx, 3	     10580	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	IF_13	IF_14
0x14858	          0x4839d0	                            cmp rax, rdx	     10580	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	IF_13	IF_14
0x1485b	     0xf8d21020000	                           jge 0x4014ac2	     10580	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	IF_13	IF_14
0x14861	    0x8b1500000000	            mov edx, dword [0x040148a7] 	     10582	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	IF_13	CALL_15
0x14867	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	     10582	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	IF_13	CALL_15
0x1486a	            0x89d6	                            mov esi, edx	     10582	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	IF_13	CALL_15
0x1486c	            0x89c7	                            mov edi, eax	     10582	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	IF_13	CALL_15
0x1486e	      0xe800000000	                          call 0x40148b3	     10582	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	IF_13	CALL_15
0x14873	            0x89c1	                            mov ecx, eax	     10582	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	IF_13	CALL_15
0x14875	    0x488b05000000	            mov rax, qword [0x040148bc] 	     10582	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	IF_13	CALL_15
0x1487c	          0x8b55ac	             mov edx, dword [rbp - 0x54]	     10582	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	IF_13	CALL_15
0x1487f	          0x8b75c4	             mov esi, dword [rbp - 0x3c]	     10582	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	IF_13	CALL_15
0x14882	          0x4189c8	                            mov r8d, ecx	     10582	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	IF_13	CALL_15
0x14885	            0x89d1	                            mov ecx, edx	     10582	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	IF_13	CALL_15
0x14887	      0xba00000000	                              mov edx, 0	     10582	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	IF_13	CALL_15
0x1488c	          0x4889c7	                            mov rdi, rax	     10582	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	IF_13	CALL_15
0x1488f	      0xe800000000	                          call 0x40148d4	     10582	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	IF_13	CALL_15
0x14894	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     10589	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	IF_13
0x14897	           0x145ac	             add dword [rbp - 0x54], eax	     10589	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	IF_13
0x1489a	        0x837dbc00	               cmp dword [rbp - 0x44], 0	     10591	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	IF_15
0x1489e	            0x7425	                            je 0x4014905	     10591	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	IF_15
0x148a0	          0x8b45ac	             mov eax, dword [rbp - 0x54]	     10592	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	CALL_18
0x148a3	          0x8d5001	                      lea edx, [rax + 1]	     10592	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	CALL_18
0x148a6	          0x8955ac	             mov dword [rbp - 0x54], edx	     10592	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	CALL_18
0x148a9	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	     10592	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	CALL_18
0x148ac	          0x4189d0	                            mov r8d, edx	     10592	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	CALL_18
0x148af	            0x89c1	                            mov ecx, eax	     10592	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	CALL_18
0x148b1	      0xba00000000	                              mov edx, 0	     10592	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	CALL_18
0x148b6	      0xbe01000000	                              mov esi, 1	     10592	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	CALL_18
0x148bb	      0xbf00000000	                              mov edi, 0	     10592	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	CALL_18
0x148c0	      0xe800000000	                          call 0x4014905	     10592	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	CALL_18
0x148c5	          0x8b45ac	             mov eax, dword [rbp - 0x54]	     10593	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	CALL_19
0x148c8	          0x8d5001	                      lea edx, [rax + 1]	     10593	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	CALL_19
0x148cb	          0x8955ac	             mov dword [rbp - 0x54], edx	     10593	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	CALL_19
0x148ce	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	     10593	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	CALL_19
0x148d1	            0x89d1	                            mov ecx, edx	     10593	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	CALL_19
0x148d3	            0x89c2	                            mov edx, eax	     10593	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	CALL_19
0x148d5	      0xbe00000000	                              mov esi, 0	     10593	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	CALL_19
0x148da	      0xbf20000000	                           mov edi, 0x20	     10593	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	CALL_19
0x148df	      0xe800000000	                          call 0x4014924	     10593	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	CALL_19
0x148e4	          0x8b45b0	             mov eax, dword [rbp - 0x50]	     10596	screen.c	FUNCTION_91	ELSE_1	FOR_2
0x148e7	          0x2b45ac	             sub eax, dword [rbp - 0x54]	     10596	screen.c	FUNCTION_91	ELSE_1	FOR_2
0x148ea	            0x89c2	                            mov edx, eax	     10596	screen.c	FUNCTION_91	ELSE_1	FOR_2
0x148ec	          0x8b45a8	             mov eax, dword [rbp - 0x58]	     10596	screen.c	FUNCTION_91	ELSE_1	FOR_2
0x148ef	             0x1d0	                            add eax, edx	     10596	screen.c	FUNCTION_91	ELSE_1	FOR_2
0x148f1	          0x83e801	                              sub eax, 1	     10596	screen.c	FUNCTION_91	ELSE_1	FOR_2
0x148f4	          0x8945dc	             mov dword [rbp - 0x24], eax	     10596	screen.c	FUNCTION_91	ELSE_1	FOR_2
0x148f7	        0x837ddc00	               cmp dword [rbp - 0x24], 0	     10597	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16
0x148fb	     0xf8e09010000	                           jle 0x4014a4a	     10597	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16
0x14901	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10600	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	CALL_20
0x14905	        0x488b4008	                mov rax, qword [rax + 8]	     10600	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	CALL_20
0x14909	          0x4889c7	                            mov rdi, rax	     10600	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	CALL_20
0x1490c	      0xe800000000	                          call 0x4014951	     10600	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	CALL_20
0x14911	    0x488b05000000	            mov rax, qword [0x04014958] 	     10601	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	CALL_21
0x14918	          0x4889c7	                            mov rdi, rax	     10601	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	CALL_21
0x1491b	      0xe800000000	                          call 0x4014960	     10601	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	CALL_21
0x14920	    0x488b05000000	            mov rax, qword [0x04014967] 	     10602	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	CALL_22
0x14927	          0x4889c7	                            mov rdi, rax	     10602	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	CALL_22
0x1492a	      0xe800000000	                          call 0x401496f	     10602	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	CALL_22
0x1492f	          0x8945c4	             mov dword [rbp - 0x3c], eax	     10602	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	CALL_22
0x14932	    0x488b05000000	            mov rax, qword [0x04014979] 	     10603	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16
0x14939	        0x488945f8	                mov qword [rbp - 8], rax	     10603	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16
0x1493d	    0x8b0500000000	            mov eax, dword [0x04014983] 	     10605	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	IF_17
0x14943	            0x85c0	                           test eax, eax	     10605	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	IF_17
0x14945	            0x7442	                            je 0x40149c9	     10605	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	IF_17
0x14947	            0xeb36	                           jmp 0x40149bf	     10606	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	IF_17	WHILE_1
0x14949	        0x488b45f8	                mov rax, qword [rbp - 8]	     10608	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	IF_17	WHILE_1	CALL_23
0x1494d	          0x4889c7	                            mov rdi, rax	     10608	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	IF_17	WHILE_1	CALL_23
0x14950	      0xe800000000	                          call 0x4014995	     10608	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	IF_17	WHILE_1	CALL_23
0x14955	          0x2945c4	             sub dword [rbp - 0x3c], eax	     10608	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	IF_17	WHILE_1	CALL_23
0x14958	    0x8b0500000000	            mov eax, dword [0x0401499e] 	     10609	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	IF_17	WHILE_1	CALL_24
0x1495e	            0x85c0	                           test eax, eax	     10609	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	IF_17	WHILE_1	CALL_24
0x14960	            0x7412	                            je 0x40149b4	     10609	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	IF_17	WHILE_1	CALL_24
0x14962	    0x488b05000000	            mov rax, qword [0x040149a9] 	     10609	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	IF_17	WHILE_1	CALL_24
0x14969	        0x488b55f8	                mov rdx, qword [rbp - 8]	     10609	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	IF_17	WHILE_1	CALL_24
0x1496d	          0x4889d7	                            mov rdi, rdx	     10609	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	IF_17	WHILE_1	CALL_24
0x14970	            0xffd0	                                call rax	     10609	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	IF_17	WHILE_1	CALL_24
0x14972	            0xeb05	                           jmp 0x40149b9	     10609	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	IF_17	WHILE_1	CALL_24
0x14974	      0xb801000000	                              mov eax, 1	     10609	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	IF_17	WHILE_1	CALL_24
0x14979	            0x4898	                                    cdqe	     10609	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	IF_17	WHILE_1	CALL_24
0x1497b	        0x480145f8	                add qword [rbp - 8], rax	     10609	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	IF_17	WHILE_1	CALL_24
0x1497f	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     10606	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	IF_17	WHILE_1
0x14982	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	     10606	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	IF_17	WHILE_1
0x14985	            0x7fc2	                            jg 0x4014989	     10606	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	IF_17	WHILE_1
0x14987	            0xeb1a	                           jmp 0x40149e3	     10606	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	IF_17	WHILE_1
0x14989	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     10613	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	ELSE_3	IF_18
0x1498c	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	     10613	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	ELSE_3	IF_18
0x1498f	            0x7e12	                           jle 0x40149e3	     10613	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	ELSE_3	IF_18
0x14991	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     10615	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	ELSE_3	IF_18
0x14994	          0x2b45dc	             sub eax, dword [rbp - 0x24]	     10615	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	ELSE_3	IF_18
0x14997	            0x4898	                                    cdqe	     10615	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	ELSE_3	IF_18
0x14999	        0x480145f8	                add qword [rbp - 8], rax	     10615	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	ELSE_3	IF_18
0x1499d	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     10616	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	ELSE_3	IF_18
0x149a0	          0x8945c4	             mov dword [rbp - 0x3c], eax	     10616	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	ELSE_3	IF_18
0x149a3	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     10618	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	IF_19
0x149a6	            0x4898	                                    cdqe	     10618	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	IF_19
0x149a8	    0x488b0d000000	            mov rcx, qword [0x040149ef] 	     10618	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	IF_19
0x149af	          0x8b55ac	             mov edx, dword [rbp - 0x54]	     10618	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	IF_19
0x149b2	          0x4863d2	                         movsxd rdx, edx	     10618	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	IF_19
0x149b5	          0x4829d1	                            sub rcx, rdx	     10618	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	IF_19
0x149b8	          0x4889ca	                            mov rdx, rcx	     10618	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	IF_19
0x149bb	        0x4883ea01	                              sub rdx, 1	     10618	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	IF_19
0x149bf	          0x4839d0	                            cmp rax, rdx	     10618	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	IF_19
0x149c2	            0x7e16	                           jle 0x4014a1a	     10618	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	IF_19
0x149c4	    0x488b05000000	            mov rax, qword [0x04014a0b] 	     10619	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	IF_19
0x149cb	            0x89c2	                            mov edx, eax	     10619	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	IF_19
0x149cd	          0x8b45ac	             mov eax, dword [rbp - 0x54]	     10619	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	IF_19
0x149d0	            0x29c2	                            sub edx, eax	     10619	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	IF_19
0x149d2	            0x89d0	                            mov eax, edx	     10619	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	IF_19
0x149d4	          0x83e801	                              sub eax, 1	     10619	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	IF_19
0x149d7	          0x8945c4	             mov dword [rbp - 0x3c], eax	     10619	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	IF_19
0x149da	        0x488b45f8	                mov rax, qword [rbp - 8]	     10621	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	CALL_26
0x149de	          0x4889c7	                            mov rdi, rax	     10621	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	CALL_26
0x149e1	      0xe800000000	                          call 0x4014a26	     10621	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	CALL_26
0x149e6	            0x89c6	                            mov esi, eax	     10621	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	CALL_26
0x149e8	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	     10621	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	CALL_26
0x149eb	          0x8b55ac	             mov edx, dword [rbp - 0x54]	     10621	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	CALL_26
0x149ee	        0x488b45f8	                mov rax, qword [rbp - 8]	     10621	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	CALL_26
0x149f2	          0x4189c8	                            mov r8d, ecx	     10621	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	CALL_26
0x149f5	            0x89d1	                            mov ecx, edx	     10621	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	CALL_26
0x149f7	      0xba00000000	                              mov edx, 0	     10621	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	CALL_26
0x149fc	          0x4889c7	                            mov rdi, rax	     10621	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	CALL_26
0x149ff	      0xe800000000	                          call 0x4014a44	     10621	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16	CALL_26
0x14a04	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	     10622	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16
0x14a07	           0x145ac	             add dword [rbp - 0x54], eax	     10622	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_16
0x14a0a	          0x8b45ac	             mov eax, dword [rbp - 0x54]	     10624	screen.c	FUNCTION_91	ELSE_1	FOR_2	CALL_27
0x14a0d	          0x8d5001	                      lea edx, [rax + 1]	     10624	screen.c	FUNCTION_91	ELSE_1	FOR_2	CALL_27
0x14a10	          0x8955ac	             mov dword [rbp - 0x54], edx	     10624	screen.c	FUNCTION_91	ELSE_1	FOR_2	CALL_27
0x14a13	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	     10624	screen.c	FUNCTION_91	ELSE_1	FOR_2	CALL_27
0x14a16	            0x89d1	                            mov ecx, edx	     10624	screen.c	FUNCTION_91	ELSE_1	FOR_2	CALL_27
0x14a18	            0x89c2	                            mov edx, eax	     10624	screen.c	FUNCTION_91	ELSE_1	FOR_2	CALL_27
0x14a1a	      0xbe00000000	                              mov esi, 0	     10624	screen.c	FUNCTION_91	ELSE_1	FOR_2	CALL_27
0x14a1f	      0xbf20000000	                           mov edi, 0x20	     10624	screen.c	FUNCTION_91	ELSE_1	FOR_2	CALL_27
0x14a24	      0xe800000000	                          call 0x4014a69	     10624	screen.c	FUNCTION_91	ELSE_1	FOR_2	CALL_27
0x14a29	        0x8345a401	               add dword [rbp - 0x5c], 1	     10628	screen.c	FUNCTION_91	ELSE_1	FOR_2
0x14a2d	            0xeb1e	                           jmp 0x4014a8d	     10629	screen.c	FUNCTION_91	ELSE_1	FOR_2	WHILE_2
0x14a2f	    0x488b0d000000	            mov rcx, qword [0x04014a76] 	     10630	screen.c	FUNCTION_91	ELSE_1	FOR_2	WHILE_2
0x14a36	          0x8b45b0	             mov eax, dword [rbp - 0x50]	     10630	screen.c	FUNCTION_91	ELSE_1	FOR_2	WHILE_2
0x14a39	          0x8d5001	                      lea edx, [rax + 1]	     10630	screen.c	FUNCTION_91	ELSE_1	FOR_2	WHILE_2
0x14a3c	          0x8955b0	             mov dword [rbp - 0x50], edx	     10630	screen.c	FUNCTION_91	ELSE_1	FOR_2	WHILE_2
0x14a3f	            0x4898	                                    cdqe	     10630	screen.c	FUNCTION_91	ELSE_1	FOR_2	WHILE_2
0x14a41	          0x4801c0	                            add rax, rax	     10630	screen.c	FUNCTION_91	ELSE_1	FOR_2	WHILE_2
0x14a44	          0x4801c8	                            add rax, rcx	     10630	screen.c	FUNCTION_91	ELSE_1	FOR_2	WHILE_2
0x14a47	          0x8b55a4	             mov edx, dword [rbp - 0x5c]	     10630	screen.c	FUNCTION_91	ELSE_1	FOR_2	WHILE_2
0x14a4a	          0x668910	                      mov word [rax], dx	     10630	screen.c	FUNCTION_91	ELSE_1	FOR_2	WHILE_2
0x14a4d	          0x8b45b0	             mov eax, dword [rbp - 0x50]	     10629	screen.c	FUNCTION_91	ELSE_1	FOR_2	WHILE_2
0x14a50	          0x3b45ac	             cmp eax, dword [rbp - 0x54]	     10629	screen.c	FUNCTION_91	ELSE_1	FOR_2	WHILE_2
0x14a53	            0x7cda	                            jl 0x4014a6f	     10629	screen.c	FUNCTION_91	ELSE_1	FOR_2	WHILE_2
0x14a55	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10545	screen.c	FUNCTION_91	ELSE_1	FOR_2
0x14a59	          0x488b00	                    mov rax, qword [rax]	     10545	screen.c	FUNCTION_91	ELSE_1	FOR_2
0x14a5c	        0x488945e0	             mov qword [rbp - 0x20], rax	     10545	screen.c	FUNCTION_91	ELSE_1	FOR_2
0x14a60	      0x48837de000	               cmp qword [rbp - 0x20], 0	     10544	screen.c	FUNCTION_91	ELSE_1	FOR_2
0x14a65	            0x741c	                            je 0x4014ac3	     10544	screen.c	FUNCTION_91	ELSE_1	FOR_2
0x14a67	          0x8b45ac	             mov eax, dword [rbp - 0x54]	     10544	screen.c	FUNCTION_91	ELSE_1	FOR_2
0x14a6a	            0x4898	                                    cdqe	     10544	screen.c	FUNCTION_91	ELSE_1	FOR_2
0x14a6c	    0x488b15000000	            mov rdx, qword [0x04014ab3] 	     10544	screen.c	FUNCTION_91	ELSE_1	FOR_2
0x14a73	        0x4883ea04	                              sub rdx, 4	     10544	screen.c	FUNCTION_91	ELSE_1	FOR_2
0x14a77	          0x4839d0	                            cmp rax, rdx	     10544	screen.c	FUNCTION_91	ELSE_1	FOR_2
0x14a7a	     0xf8c71fcffff	                            jl 0x4014731	     10544	screen.c	FUNCTION_91	ELSE_1	FOR_2
0x14a80	            0xeb01	                           jmp 0x4014ac3	     10544	screen.c	FUNCTION_91	ELSE_1	FOR_2
0x14a82	              0x90	                                     nop	     10581	screen.c	FUNCTION_91	ELSE_1	FOR_2	IF_12	IF_13	IF_14
0x14a83	        0x837dd400	               cmp dword [rbp - 0x2c], 0	     10633	screen.c	FUNCTION_91	ELSE_1	IF_20
0x14a87	            0x7409	                            je 0x4014ad2	     10633	screen.c	FUNCTION_91	ELSE_1	IF_20
0x14a89	    0xc745c05f0000	           mov dword [rbp - 0x40], 0x5f 	     10634	screen.c	FUNCTION_91	ELSE_1	IF_20
0x14a90	            0xeb07	                           jmp 0x4014ad9	     10634	screen.c	FUNCTION_91	ELSE_1	IF_20
0x14a92	    0xc745c0200000	           mov dword [rbp - 0x40], 0x20 	     10636	screen.c	FUNCTION_91	ELSE_1	ELSE_4
0x14a99	    0x488b05000000	            mov rax, qword [0x04014ae0] 	     10637	screen.c	FUNCTION_91	ELSE_1	CALL_28
0x14aa0	            0x89c7	                            mov edi, eax	     10637	screen.c	FUNCTION_91	ELSE_1	CALL_28
0x14aa2	          0x8b75c0	             mov esi, dword [rbp - 0x40]	     10637	screen.c	FUNCTION_91	ELSE_1	CALL_28
0x14aa5	          0x8b4dc0	             mov ecx, dword [rbp - 0x40]	     10637	screen.c	FUNCTION_91	ELSE_1	CALL_28
0x14aa8	          0x8b45ac	             mov eax, dword [rbp - 0x54]	     10637	screen.c	FUNCTION_91	ELSE_1	CALL_28
0x14aab	        0x4883ec08	                              sub rsp, 8	     10637	screen.c	FUNCTION_91	ELSE_1	CALL_28
0x14aaf	          0x8b55d0	             mov edx, dword [rbp - 0x30]	     10637	screen.c	FUNCTION_91	ELSE_1	CALL_28
0x14ab2	              0x52	                                push rdx	     10637	screen.c	FUNCTION_91	ELSE_1	CALL_28
0x14ab3	          0x4189f1	                            mov r9d, esi	     10637	screen.c	FUNCTION_91	ELSE_1	CALL_28
0x14ab6	          0x4189c8	                            mov r8d, ecx	     10637	screen.c	FUNCTION_91	ELSE_1	CALL_28
0x14ab9	            0x89f9	                            mov ecx, edi	     10637	screen.c	FUNCTION_91	ELSE_1	CALL_28
0x14abb	            0x89c2	                            mov edx, eax	     10637	screen.c	FUNCTION_91	ELSE_1	CALL_28
0x14abd	      0xbe01000000	                              mov esi, 1	     10637	screen.c	FUNCTION_91	ELSE_1	CALL_28
0x14ac2	      0xbf00000000	                              mov edi, 0	     10637	screen.c	FUNCTION_91	ELSE_1	CALL_28
0x14ac7	      0xe800000000	                          call 0x4014b0c	     10637	screen.c	FUNCTION_91	ELSE_1	CALL_28
0x14acc	        0x4883c410	                           add rsp, 0x10	     10637	screen.c	FUNCTION_91	ELSE_1	CALL_28
0x14ad0	    0x488b05000000	            mov rax, qword [0x04014b17] 	     10640	screen.c	FUNCTION_91	ELSE_1	IF_21
0x14ad7	          0x488b00	                    mov rax, qword [rax]	     10640	screen.c	FUNCTION_91	ELSE_1	IF_21
0x14ada	          0x4885c0	                           test rax, rax	     10640	screen.c	FUNCTION_91	ELSE_1	IF_21
0x14add	            0x743b	                            je 0x4014b5a	     10640	screen.c	FUNCTION_91	ELSE_1	IF_21
0x14adf	    0x488b05000000	            mov rax, qword [0x04014b26] 	     10642	screen.c	FUNCTION_91	ELSE_1	IF_21	CALL_29
0x14ae6	          0x8d50ff	                      lea edx, [rax - 1]	     10642	screen.c	FUNCTION_91	ELSE_1	IF_21	CALL_29
0x14ae9	          0x8b45cc	             mov eax, dword [rbp - 0x34]	     10642	screen.c	FUNCTION_91	ELSE_1	IF_21	CALL_29
0x14aec	            0x89c1	                            mov ecx, eax	     10642	screen.c	FUNCTION_91	ELSE_1	IF_21	CALL_29
0x14aee	      0xbe00000000	                              mov esi, 0	     10642	screen.c	FUNCTION_91	ELSE_1	IF_21	CALL_29
0x14af3	      0xbf58000000	                           mov edi, 0x58	     10642	screen.c	FUNCTION_91	ELSE_1	IF_21	CALL_29
0x14af8	      0xe800000000	                          call 0x4014b3d	     10642	screen.c	FUNCTION_91	ELSE_1	IF_21	CALL_29
0x14afd	    0x488b05000000	            mov rax, qword [0x04014b44] 	     10643	screen.c	FUNCTION_91	ELSE_1	IF_21
0x14b04	    0x488b15000000	            mov rdx, qword [0x04014b4b] 	     10643	screen.c	FUNCTION_91	ELSE_1	IF_21
0x14b0b	          0x4801d2	                            add rdx, rdx	     10643	screen.c	FUNCTION_91	ELSE_1	IF_21
0x14b0e	        0x4883ea02	                              sub rdx, 2	     10643	screen.c	FUNCTION_91	ELSE_1	IF_21
0x14b12	          0x4801d0	                            add rax, rdx	     10643	screen.c	FUNCTION_91	ELSE_1	IF_21
0x14b15	      0x66c70019fc	                  mov word [rax], 0xfc19	     10643	screen.c	FUNCTION_91	ELSE_1	IF_21
0x14b1a	    0xc70500000000	               mov dword [0x04014b64], 0	     10649	screen.c	FUNCTION_91
0x14b24	            0xeb04	                           jmp 0x4014b6a	     10649	screen.c	FUNCTION_91
0x14b26	              0x90	                                     nop	     10496	screen.c	FUNCTION_91	IF_1
0x14b27	            0xeb01	                           jmp 0x4014b6a	     10496	screen.c	FUNCTION_91	IF_1
0x14b29	              0x90	                                     nop	     10509	screen.c	FUNCTION_91	IF_3
0x14b2a	              0xc9	                                   leave	     10650	screen.c	FUNCTION_91
0x14b2b	              0xc3	                                     ret	     10650	screen.c	FUNCTION_91
screenalloc	DO,0:functions,1:CALL,38:ELSE,4:IF,23:WHILE,0:FOR,7:SWITCH,0	684
0x11358	              0x55	                                push rbp	      8715	screen.c	FUNCTION_69
0x11359	          0x4889e5	                            mov rbp, rsp	      8715	screen.c	FUNCTION_69
0x1135c	    0x4881ecb00000	                           sub rsp, 0xb0	      8715	screen.c	FUNCTION_69
0x11363	    0x89bd5cffffff	             mov dword [rbp - 0xa4], edi	      8715	screen.c	FUNCTION_69
0x11369	    0x64488b042528	                mov rax, qword fs:[0x28]	      8715	screen.c	FUNCTION_69
0x11372	        0x488945f8	                mov qword [rbp - 8], rax	      8715	screen.c	FUNCTION_69
0x11376	            0x31c0	                            xor eax, eax	      8715	screen.c	FUNCTION_69
0x11378	    0xc78564ffffff	               mov dword [rbp - 0x9c], 0	      8721	screen.c	FUNCTION_69
0x11382	    0x48c745880000	               mov qword [rbp - 0x78], 0	      8725	screen.c	FUNCTION_69
0x1138a	    0x48c745900000	               mov qword [rbp - 0x70], 0	      8727	screen.c	FUNCTION_69
0x11392	    0xc78570ffffff	               mov dword [rbp - 0x90], 0	      8738	screen.c	FUNCTION_69
0x1139c	    0x488b05000000	            mov rax, qword [0x040113e3] 	      8747	screen.c	FUNCTION_69	IF_1
0x113a3	          0x4885c0	                           test rax, rax	      8747	screen.c	FUNCTION_69	IF_1
0x113a6	            0x747e	                            je 0x4011466	      8747	screen.c	FUNCTION_69	IF_1
0x113a8	    0x8b0500000000	            mov eax, dword [0x040113ee] 	      8748	screen.c	FUNCTION_69	IF_1
0x113ae	          0x4863d0	                         movsxd rdx, eax	      8748	screen.c	FUNCTION_69	IF_1
0x113b1	    0x488b05000000	            mov rax, qword [0x040113f8] 	      8748	screen.c	FUNCTION_69	IF_1
0x113b8	          0x4839c2	                            cmp rdx, rax	      8748	screen.c	FUNCTION_69	IF_1
0x113bb	            0x7569	                           jne 0x4011466	      8748	screen.c	FUNCTION_69	IF_1
0x113bd	    0x8b0500000000	            mov eax, dword [0x04011403] 	      8749	screen.c	FUNCTION_69	IF_1
0x113c3	          0x4863d0	                         movsxd rdx, eax	      8749	screen.c	FUNCTION_69	IF_1
0x113c6	    0x488b05000000	            mov rax, qword [0x0401140d] 	      8749	screen.c	FUNCTION_69	IF_1
0x113cd	          0x4839c2	                            cmp rdx, rax	      8749	screen.c	FUNCTION_69	IF_1
0x113d0	            0x7554	                           jne 0x4011466	      8749	screen.c	FUNCTION_69	IF_1
0x113d2	    0x488b05000000	            mov rax, qword [0x04011419] 	      8751	screen.c	FUNCTION_69	IF_1
0x113d9	          0x4885c0	                           test rax, rax	      8751	screen.c	FUNCTION_69	IF_1
0x113dc	           0xf95c0	                                setne al	      8751	screen.c	FUNCTION_69	IF_1
0x113df	           0xfb6d0	                           movzx edx, al	      8751	screen.c	FUNCTION_69	IF_1
0x113e2	    0x8b0500000000	            mov eax, dword [0x04011428] 	      8751	screen.c	FUNCTION_69	IF_1
0x113e8	            0x39c2	                            cmp edx, eax	      8751	screen.c	FUNCTION_69	IF_1
0x113ea	            0x753a	                           jne 0x4011466	      8751	screen.c	FUNCTION_69	IF_1
0x113ec	    0x8b0500000000	            mov eax, dword [0x04011432] 	      8752	screen.c	FUNCTION_69	IF_1
0x113f2	      0x3dcc260000	                         cmp eax, 0x26cc	      8752	screen.c	FUNCTION_69	IF_1
0x113f7	           0xf95c2	                                setne dl	      8752	screen.c	FUNCTION_69	IF_1
0x113fa	    0x488b05000000	            mov rax, qword [0x04011441] 	      8752	screen.c	FUNCTION_69	IF_1
0x11401	          0x4885c0	                           test rax, rax	      8752	screen.c	FUNCTION_69	IF_1
0x11404	           0xf95c0	                                setne al	      8752	screen.c	FUNCTION_69	IF_1
0x11407	            0x31d0	                            xor eax, edx	      8752	screen.c	FUNCTION_69	IF_1
0x11409	            0x84c0	                             test al, al	      8752	screen.c	FUNCTION_69	IF_1
0x1140b	            0x7419	                            je 0x4011466	      8752	screen.c	FUNCTION_69	IF_1
0x1140d	    0x8b0500000000	            mov eax, dword [0x04011453] 	      8753	screen.c	FUNCTION_69	IF_1
0x11413	          0x4863d0	                         movsxd rdx, eax	      8753	screen.c	FUNCTION_69	IF_1
0x11416	    0x488b05000000	            mov rax, qword [0x0401145d] 	      8753	screen.c	FUNCTION_69	IF_1
0x1141d	          0x4839c2	                            cmp rdx, rax	      8753	screen.c	FUNCTION_69	IF_1
0x11420	     0xf845d0b0000	                            je 0x4011fc3	      8753	screen.c	FUNCTION_69	IF_1
0x11426	    0x488b05000000	            mov rax, qword [0x0401146d] 	      8756	screen.c	FUNCTION_69	IF_1
0x1142d	          0x4885c0	                           test rax, rax	      8756	screen.c	FUNCTION_69	IF_1
0x11430	     0xf844d0b0000	                            je 0x4011fc3	      8756	screen.c	FUNCTION_69	IF_1
0x11436	    0x488b05000000	            mov rax, qword [0x0401147d] 	      8757	screen.c	FUNCTION_69	IF_1
0x1143d	          0x4885c0	                           test rax, rax	      8757	screen.c	FUNCTION_69	IF_1
0x11440	     0xf843d0b0000	                            je 0x4011fc3	      8757	screen.c	FUNCTION_69	IF_1
0x11446	    0x8b0500000000	            mov eax, dword [0x0401148c] 	      8758	screen.c	FUNCTION_69	IF_1
0x1144c	            0x85c0	                           test eax, eax	      8758	screen.c	FUNCTION_69	IF_1
0x1144e	            0x7510	                           jne 0x40114a0	      8758	screen.c	FUNCTION_69	IF_1
0x11450	    0x488b05000000	            mov rax, qword [0x04011497] 	      8758	screen.c	FUNCTION_69	IF_1
0x11457	          0x4885c0	                           test rax, rax	      8758	screen.c	FUNCTION_69	IF_1
0x1145a	     0xf84230b0000	                            je 0x4011fc3	      8758	screen.c	FUNCTION_69	IF_1
0x11460	    0x8b0500000000	            mov eax, dword [0x040114a6] 	      8766	screen.c	FUNCTION_69	IF_2
0x11466	            0x85c0	                           test eax, eax	      8766	screen.c	FUNCTION_69	IF_2
0x11468	     0xf85180b0000	                           jne 0x4011fc6	      8766	screen.c	FUNCTION_69	IF_2
0x1146e	    0xc70500000000	               mov dword [0x040114b8], 1	      8768	screen.c	FUNCTION_69
0x11478	    0x8b0500000000	            mov eax, dword [0x040114be] 	      8774	screen.c	FUNCTION_69
0x1147e	          0x83c001	                              add eax, 1	      8774	screen.c	FUNCTION_69
0x11481	    0x890500000000	            mov dword [0x040114c7], eax 	      8774	screen.c	FUNCTION_69
0x11487	      0xe800000000	                          call 0x40114cc	      8776	screen.c	FUNCTION_69	CALL_1
0x1148c	      0xe800000000	                          call 0x40114d1	      8778	screen.c	FUNCTION_69	CALL_2
0x11491	    0x488b05000000	            mov rax, qword [0x040114d8] 	      8791	screen.c	FUNCTION_69	CALL_3
0x11498	        0x488945b8	             mov qword [rbp - 0x48], rax	      8791	screen.c	FUNCTION_69	CALL_3
0x1149c	            0xeb5d	                           jmp 0x401153b	      8791	screen.c	FUNCTION_69	CALL_3
0x1149e	    0x488b05000000	            mov rax, qword [0x040114e5] 	      8791	screen.c	FUNCTION_69	CALL_3
0x114a5	        0x483945b8	            cmp qword [rbp - 0x48], rax 	      8791	screen.c	FUNCTION_69	CALL_3
0x114a9	            0x740a	                            je 0x40114f5	      8791	screen.c	FUNCTION_69	CALL_3
0x114ab	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      8791	screen.c	FUNCTION_69	CALL_3
0x114af	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8791	screen.c	FUNCTION_69	CALL_3
0x114b3	            0xeb07	                           jmp 0x40114fc	      8791	screen.c	FUNCTION_69	CALL_3
0x114b5	    0x488b05000000	            mov rax, qword [0x040114fc] 	      8791	screen.c	FUNCTION_69	CALL_3
0x114bc	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      8791	screen.c	FUNCTION_69	CALL_3
0x114c3	            0xeb21	                           jmp 0x4011526	      8791	screen.c	FUNCTION_69	CALL_3
0x114c5	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      8792	screen.c	FUNCTION_69	CALL_4
0x114cc	          0x4889c7	                            mov rdi, rax	      8792	screen.c	FUNCTION_69	CALL_4
0x114cf	      0xe800000000	                          call 0x4011514	      8792	screen.c	FUNCTION_69	CALL_4
0x114d4	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      8791	screen.c	FUNCTION_69	CALL_3
0x114db	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8791	screen.c	FUNCTION_69	CALL_3
0x114df	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      8791	screen.c	FUNCTION_69	CALL_3
0x114e6	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      8791	screen.c	FUNCTION_69	CALL_3
0x114ee	            0x75d5	                           jne 0x4011505	      8791	screen.c	FUNCTION_69	CALL_3
0x114f0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      8791	screen.c	FUNCTION_69	CALL_3
0x114f4	          0x488b00	                    mov rax, qword [rax]	      8791	screen.c	FUNCTION_69	CALL_3
0x114f7	        0x488945b8	             mov qword [rbp - 0x48], rax	      8791	screen.c	FUNCTION_69	CALL_3
0x114fb	      0x48837db800	               cmp qword [rbp - 0x48], 0	      8791	screen.c	FUNCTION_69	CALL_3
0x11500	            0x759c	                           jne 0x40114de	      8791	screen.c	FUNCTION_69	CALL_3
0x11502	    0x488b05000000	            mov rax, qword [0x04011549] 	      8794	screen.c	FUNCTION_69	IF_3
0x11509	          0x4885c0	                           test rax, rax	      8794	screen.c	FUNCTION_69	IF_3
0x1150c	            0x740f	                            je 0x401155d	      8794	screen.c	FUNCTION_69	IF_3
0x1150e	    0x488b05000000	            mov rax, qword [0x04011555] 	      8795	screen.c	FUNCTION_69	CALL_5
0x11515	          0x4889c7	                            mov rdi, rax	      8795	screen.c	FUNCTION_69	CALL_5
0x11518	      0xe800000000	                          call 0x401155d	      8795	screen.c	FUNCTION_69	CALL_5
0x1151d	    0x488b05000000	            mov rax, qword [0x04011564] 	      8799	screen.c	FUNCTION_69
0x11524	        0x488d5001	                      lea rdx, [rax + 1]	      8799	screen.c	FUNCTION_69
0x11528	    0x488b05000000	            mov rax, qword [0x0401156f] 	      8799	screen.c	FUNCTION_69
0x1152f	        0x480fafc2	                           imul rax, rdx	      8799	screen.c	FUNCTION_69
0x11533	      0xbe00000000	                              mov esi, 0	      8798	screen.c	FUNCTION_69	CALL_6
0x11538	          0x4889c7	                            mov rdi, rax	      8798	screen.c	FUNCTION_69	CALL_6
0x1153b	      0xe800000000	                          call 0x4011580	      8798	screen.c	FUNCTION_69	CALL_6
0x11540	        0x48894580	             mov qword [rbp - 0x80], rax	      8798	screen.c	FUNCTION_69	CALL_6
0x11544	        0x488d45c0	                   lea rax, [rbp - 0x40]	      8801	screen.c	FUNCTION_69	CALL_7
0x11548	      0xba30000000	                           mov edx, 0x30	      8801	screen.c	FUNCTION_69	CALL_7
0x1154d	      0xbe00000000	                              mov esi, 0	      8801	screen.c	FUNCTION_69	CALL_7
0x11552	          0x4889c7	                            mov rdi, rax	      8801	screen.c	FUNCTION_69	CALL_7
0x11555	      0xe800000000	                          call 0x401159a	      8801	screen.c	FUNCTION_69	CALL_7
0x1155a	    0x8b0500000000	            mov eax, dword [0x040115a0] 	      8802	screen.c	FUNCTION_69	IF_4
0x11560	            0x85c0	                           test eax, eax	      8802	screen.c	FUNCTION_69	IF_4
0x11562	     0xf848a000000	                            je 0x4011632	      8802	screen.c	FUNCTION_69	IF_4
0x11568	    0x488b05000000	            mov rax, qword [0x040115af] 	      8805	screen.c	FUNCTION_69	IF_4
0x1156f	        0x488d5001	                      lea rdx, [rax + 1]	      8805	screen.c	FUNCTION_69	IF_4
0x11573	    0x488b05000000	            mov rax, qword [0x040115ba] 	      8805	screen.c	FUNCTION_69	IF_4
0x1157a	        0x480fafc2	                           imul rax, rdx	      8805	screen.c	FUNCTION_69	IF_4
0x1157e	        0x48c1e002	                              shl rax, 2	      8804	screen.c	FUNCTION_69	IF_4	CALL_8
0x11582	      0xbe00000000	                              mov esi, 0	      8804	screen.c	FUNCTION_69	IF_4	CALL_8
0x11587	          0x4889c7	                            mov rdi, rax	      8804	screen.c	FUNCTION_69	IF_4	CALL_8
0x1158a	      0xe800000000	                          call 0x40115cf	      8804	screen.c	FUNCTION_69	IF_4	CALL_8
0x1158f	        0x48894588	             mov qword [rbp - 0x78], rax	      8804	screen.c	FUNCTION_69	IF_4	CALL_8
0x11593	    0xc7856cffffff	               mov dword [rbp - 0x94], 0	      8806	screen.c	FUNCTION_69	IF_4	FOR_1
0x1159d	            0xeb3e	                           jmp 0x401161d	      8806	screen.c	FUNCTION_69	IF_4	FOR_1
0x1159f	    0x488b05000000	            mov rax, qword [0x040115e6] 	      8808	screen.c	FUNCTION_69	IF_4	FOR_1
0x115a6	        0x488d5001	                      lea rdx, [rax + 1]	      8808	screen.c	FUNCTION_69	IF_4	FOR_1
0x115aa	    0x488b05000000	            mov rax, qword [0x040115f1] 	      8808	screen.c	FUNCTION_69	IF_4	FOR_1
0x115b1	        0x480fafc2	                           imul rax, rdx	      8808	screen.c	FUNCTION_69	IF_4	FOR_1
0x115b5	        0x48c1e002	                              shl rax, 2	      8807	screen.c	FUNCTION_69	IF_4	FOR_1	CALL_9
0x115b9	      0xbe00000000	                              mov esi, 0	      8807	screen.c	FUNCTION_69	IF_4	FOR_1	CALL_9
0x115be	          0x4889c7	                            mov rdi, rax	      8807	screen.c	FUNCTION_69	IF_4	FOR_1	CALL_9
0x115c1	      0xe800000000	                          call 0x4011606	      8807	screen.c	FUNCTION_69	IF_4	FOR_1	CALL_9
0x115c6	          0x4889c2	                            mov rdx, rax	      8807	screen.c	FUNCTION_69	IF_4	FOR_1	CALL_9
0x115c9	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      8807	screen.c	FUNCTION_69	IF_4	FOR_1	CALL_9
0x115cf	            0x4898	                                    cdqe	      8807	screen.c	FUNCTION_69	IF_4	FOR_1	CALL_9
0x115d1	      0x488954c5c0	     mov qword [rbp + rax*8 - 0x40], rdx	      8807	screen.c	FUNCTION_69	IF_4	FOR_1	CALL_9
0x115d6	    0x83856cffffff	               add dword [rbp - 0x94], 1	      8806	screen.c	FUNCTION_69	IF_4	FOR_1
0x115dd	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      8806	screen.c	FUNCTION_69	IF_4	FOR_1
0x115e3	          0x4863d0	                         movsxd rdx, eax	      8806	screen.c	FUNCTION_69	IF_4	FOR_1
0x115e6	    0x488b05000000	            mov rax, qword [0x0401162d] 	      8806	screen.c	FUNCTION_69	IF_4	FOR_1
0x115ed	          0x4839c2	                            cmp rdx, rax	      8806	screen.c	FUNCTION_69	IF_4	FOR_1
0x115f0	            0x7cad	                            jl 0x40115df	      8806	screen.c	FUNCTION_69	IF_4	FOR_1
0x115f2	    0x8b0500000000	            mov eax, dword [0x04011638] 	      8810	screen.c	FUNCTION_69	IF_5
0x115f8	      0x3dcc260000	                         cmp eax, 0x26cc	      8810	screen.c	FUNCTION_69	IF_5
0x115fd	            0x7527	                           jne 0x4011666	      8810	screen.c	FUNCTION_69	IF_5
0x115ff	    0x488b05000000	            mov rax, qword [0x04011646] 	      8812	screen.c	FUNCTION_69	IF_5
0x11606	        0x488d5001	                      lea rdx, [rax + 1]	      8812	screen.c	FUNCTION_69	IF_5
0x1160a	    0x488b05000000	            mov rax, qword [0x04011651] 	      8812	screen.c	FUNCTION_69	IF_5
0x11611	        0x480fafc2	                           imul rax, rdx	      8812	screen.c	FUNCTION_69	IF_5
0x11615	      0xbe00000000	                              mov esi, 0	      8811	screen.c	FUNCTION_69	IF_5	CALL_10
0x1161a	          0x4889c7	                            mov rdi, rax	      8811	screen.c	FUNCTION_69	IF_5	CALL_10
0x1161d	      0xe800000000	                          call 0x4011662	      8811	screen.c	FUNCTION_69	IF_5	CALL_10
0x11622	        0x48894590	             mov qword [rbp - 0x70], rax	      8811	screen.c	FUNCTION_69	IF_5	CALL_10
0x11626	    0x488b05000000	            mov rax, qword [0x0401166d] 	      8815	screen.c	FUNCTION_69
0x1162d	        0x488d5001	                      lea rdx, [rax + 1]	      8815	screen.c	FUNCTION_69
0x11631	    0x488b05000000	            mov rax, qword [0x04011678] 	      8815	screen.c	FUNCTION_69
0x11638	        0x480fafc2	                           imul rax, rdx	      8815	screen.c	FUNCTION_69
0x1163c	          0x4801c0	                            add rax, rax	      8814	screen.c	FUNCTION_69	CALL_11
0x1163f	      0xbe00000000	                              mov esi, 0	      8814	screen.c	FUNCTION_69	CALL_11
0x11644	          0x4889c7	                            mov rdi, rax	      8814	screen.c	FUNCTION_69	CALL_11
0x11647	      0xe800000000	                          call 0x401168c	      8814	screen.c	FUNCTION_69	CALL_11
0x1164c	        0x48894598	             mov qword [rbp - 0x68], rax	      8814	screen.c	FUNCTION_69	CALL_11
0x11650	    0x488b05000000	            mov rax, qword [0x04011697] 	      8816	screen.c	FUNCTION_69	CALL_12
0x11657	        0x48c1e002	                              shl rax, 2	      8816	screen.c	FUNCTION_69	CALL_12
0x1165b	      0xbe00000000	                              mov esi, 0	      8816	screen.c	FUNCTION_69	CALL_12
0x11660	          0x4889c7	                            mov rdi, rax	      8816	screen.c	FUNCTION_69	CALL_12
0x11663	      0xe800000000	                          call 0x40116a8	      8816	screen.c	FUNCTION_69	CALL_12
0x11668	        0x488945a0	             mov qword [rbp - 0x60], rax	      8816	screen.c	FUNCTION_69	CALL_12
0x1166c	    0x488b05000000	            mov rax, qword [0x040116b3] 	      8818	screen.c	FUNCTION_69	CALL_13
0x11673	      0xbe00000000	                              mov esi, 0	      8818	screen.c	FUNCTION_69	CALL_13
0x11678	          0x4889c7	                            mov rdi, rax	      8818	screen.c	FUNCTION_69	CALL_13
0x1167b	      0xe800000000	                          call 0x40116c0	      8818	screen.c	FUNCTION_69	CALL_13
0x11680	        0x488945a8	             mov qword [rbp - 0x58], rax	      8818	screen.c	FUNCTION_69	CALL_13
0x11684	    0x488b05000000	            mov rax, qword [0x040116cb] 	      8819	screen.c	FUNCTION_69	CALL_14
0x1168b	          0x4801c0	                            add rax, rax	      8819	screen.c	FUNCTION_69	CALL_14
0x1168e	      0xbe00000000	                              mov esi, 0	      8819	screen.c	FUNCTION_69	CALL_14
0x11693	          0x4889c7	                            mov rdi, rax	      8819	screen.c	FUNCTION_69	CALL_14
0x11696	      0xe800000000	                          call 0x40116db	      8819	screen.c	FUNCTION_69	CALL_14
0x1169b	        0x488945b0	             mov qword [rbp - 0x50], rax	      8819	screen.c	FUNCTION_69	CALL_14
0x1169f	    0x488b05000000	            mov rax, qword [0x040116e6] 	      8821	screen.c	FUNCTION_69
0x116a6	        0x488945b8	             mov qword [rbp - 0x48], rax	      8821	screen.c	FUNCTION_69
0x116aa	            0xeb6d	                           jmp 0x4011759	      8821	screen.c	FUNCTION_69
0x116ac	    0x488b05000000	            mov rax, qword [0x040116f3] 	      8821	screen.c	FUNCTION_69
0x116b3	        0x483945b8	            cmp qword [rbp - 0x48], rax 	      8821	screen.c	FUNCTION_69
0x116b7	            0x740a	                            je 0x4011703	      8821	screen.c	FUNCTION_69
0x116b9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      8821	screen.c	FUNCTION_69
0x116bd	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8821	screen.c	FUNCTION_69
0x116c1	            0xeb07	                           jmp 0x401170a	      8821	screen.c	FUNCTION_69
0x116c3	    0x488b05000000	            mov rax, qword [0x0401170a] 	      8821	screen.c	FUNCTION_69
0x116ca	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      8821	screen.c	FUNCTION_69
0x116d1	            0xeb31	                           jmp 0x4011744	      8821	screen.c	FUNCTION_69
0x116d3	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      8823	screen.c	FUNCTION_69	FUNCTION_1	IF_1	CALL_1
0x116da	          0x4889c7	                            mov rdi, rax	      8823	screen.c	FUNCTION_69	FUNCTION_1	IF_1	CALL_1
0x116dd	      0xe800000000	                          call 0x4011722	      8823	screen.c	FUNCTION_69	FUNCTION_1	IF_1	CALL_1
0x116e2	            0x85c0	                           test eax, eax	      8823	screen.c	FUNCTION_69	FUNCTION_1	IF_1	CALL_1
0x116e4	            0x750c	                           jne 0x4011732	      8823	screen.c	FUNCTION_69	FUNCTION_1	IF_1	CALL_1
0x116e6	    0xc78564ffffff	               mov dword [rbp - 0x9c], 1	      8825	screen.c	FUNCTION_69	FUNCTION_1	IF_1
0x116f0	            0xeb6a	                           jmp 0x401179c	      8826	screen.c	FUNCTION_69	FUNCTION_1	IF_1
0x116f2	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      8821	screen.c	FUNCTION_69
0x116f9	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8821	screen.c	FUNCTION_69
0x116fd	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      8821	screen.c	FUNCTION_69
0x11704	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      8821	screen.c	FUNCTION_69
0x1170c	            0x75c5	                           jne 0x4011713	      8821	screen.c	FUNCTION_69
0x1170e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      8821	screen.c	FUNCTION_69
0x11712	          0x488b00	                    mov rax, qword [rax]	      8821	screen.c	FUNCTION_69
0x11715	        0x488945b8	             mov qword [rbp - 0x48], rax	      8821	screen.c	FUNCTION_69
0x11719	      0x48837db800	               cmp qword [rbp - 0x48], 0	      8821	screen.c	FUNCTION_69
0x1171e	            0x758c	                           jne 0x40116ec	      8821	screen.c	FUNCTION_69
0x11720	    0x488b05000000	            mov rax, qword [0x04011767] 	      8830	screen.c	FUNCTION_69	IF_6
0x11727	          0x4885c0	                           test rax, rax	      8830	screen.c	FUNCTION_69	IF_6
0x1172a	            0x7430	                            je 0x401179c	      8830	screen.c	FUNCTION_69	IF_6
0x1172c	    0x488b05000000	            mov rax, qword [0x04011773] 	      8830	screen.c	FUNCTION_69	IF_6
0x11733	    0x488b80000100	           mov rax, qword [rax + 0x100] 	      8830	screen.c	FUNCTION_69	IF_6
0x1173a	          0x4885c0	                           test rax, rax	      8830	screen.c	FUNCTION_69	IF_6
0x1173d	            0x751d	                           jne 0x401179c	      8830	screen.c	FUNCTION_69	IF_6
0x1173f	    0x488b05000000	            mov rax, qword [0x04011786] 	      8831	screen.c	FUNCTION_69	IF_6	CALL_15
0x11746	          0x4889c7	                            mov rdi, rax	      8831	screen.c	FUNCTION_69	IF_6	CALL_15
0x11749	      0xe800000000	                          call 0x401178e	      8831	screen.c	FUNCTION_69	IF_6	CALL_15
0x1174e	            0x85c0	                           test eax, eax	      8831	screen.c	FUNCTION_69	IF_6	CALL_15
0x11750	            0x750a	                           jne 0x401179c	      8831	screen.c	FUNCTION_69	IF_6	CALL_15
0x11752	    0xc78564ffffff	               mov dword [rbp - 0x9c], 1	      8832	screen.c	FUNCTION_69	IF_6
0x1175c	    0xc7856cffffff	               mov dword [rbp - 0x94], 0	      8837	screen.c	FUNCTION_69	FOR_2
0x11766	            0xeb19	                           jmp 0x40117c1	      8837	screen.c	FUNCTION_69	FOR_2
0x11768	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      8838	screen.c	FUNCTION_69	FOR_2	IF_7
0x1176e	            0x4898	                                    cdqe	      8838	screen.c	FUNCTION_69	FOR_2	IF_7
0x11770	      0x488b44c5c0	     mov rax, qword [rbp + rax*8 - 0x40]	      8838	screen.c	FUNCTION_69	FOR_2	IF_7
0x11775	          0x4885c0	                           test rax, rax	      8838	screen.c	FUNCTION_69	FOR_2	IF_7
0x11778	            0x741e	                            je 0x40117d8	      8838	screen.c	FUNCTION_69	FOR_2	IF_7
0x1177a	    0x83856cffffff	               add dword [rbp - 0x94], 1	      8837	screen.c	FUNCTION_69	FOR_2
0x11781	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      8837	screen.c	FUNCTION_69	FOR_2
0x11787	          0x4863d0	                         movsxd rdx, eax	      8837	screen.c	FUNCTION_69	FOR_2
0x1178a	    0x488b05000000	            mov rax, qword [0x040117d1] 	      8837	screen.c	FUNCTION_69	FOR_2
0x11791	          0x4839c2	                            cmp rdx, rax	      8837	screen.c	FUNCTION_69	FOR_2
0x11794	            0x7cd2	                            jl 0x40117a8	      8837	screen.c	FUNCTION_69	FOR_2
0x11796	            0xeb01	                           jmp 0x40117d9	      8837	screen.c	FUNCTION_69	FOR_2
0x11798	              0x90	                                     nop	      8839	screen.c	FUNCTION_69	FOR_2	IF_7
0x11799	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      8841	screen.c	FUNCTION_69	IF_8
0x1179e	            0x7463	                            je 0x4011843	      8841	screen.c	FUNCTION_69	IF_8
0x117a0	    0x8b0500000000	            mov eax, dword [0x040117e6] 	      8843	screen.c	FUNCTION_69	IF_8
0x117a6	            0x85c0	                           test eax, eax	      8843	screen.c	FUNCTION_69	IF_8
0x117a8	            0x741c	                            je 0x4011806	      8843	screen.c	FUNCTION_69	IF_8
0x117aa	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      8843	screen.c	FUNCTION_69	IF_8
0x117af	            0x7452	                            je 0x4011843	      8843	screen.c	FUNCTION_69	IF_8
0x117b1	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      8843	screen.c	FUNCTION_69	IF_8
0x117b7	          0x4863d0	                         movsxd rdx, eax	      8843	screen.c	FUNCTION_69	IF_8
0x117ba	    0x488b05000000	            mov rax, qword [0x04011801] 	      8843	screen.c	FUNCTION_69	IF_8
0x117c1	          0x4839c2	                            cmp rdx, rax	      8843	screen.c	FUNCTION_69	IF_8
0x117c4	            0x753d	                           jne 0x4011843	      8843	screen.c	FUNCTION_69	IF_8
0x117c6	    0x8b0500000000	            mov eax, dword [0x0401180c] 	      8844	screen.c	FUNCTION_69	IF_8
0x117cc	      0x3dcc260000	                         cmp eax, 0x26cc	      8844	screen.c	FUNCTION_69	IF_8
0x117d1	            0x7507	                           jne 0x401181a	      8844	screen.c	FUNCTION_69	IF_8
0x117d3	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      8844	screen.c	FUNCTION_69	IF_8
0x117d8	            0x7429	                            je 0x4011843	      8844	screen.c	FUNCTION_69	IF_8
0x117da	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      8846	screen.c	FUNCTION_69	IF_8
0x117df	            0x7422	                            je 0x4011843	      8846	screen.c	FUNCTION_69	IF_8
0x117e1	      0x48837da000	               cmp qword [rbp - 0x60], 0	      8847	screen.c	FUNCTION_69	IF_8
0x117e6	            0x741b	                            je 0x4011843	      8847	screen.c	FUNCTION_69	IF_8
0x117e8	      0x48837da800	               cmp qword [rbp - 0x58], 0	      8848	screen.c	FUNCTION_69	IF_8
0x117ed	            0x7414	                            je 0x4011843	      8848	screen.c	FUNCTION_69	IF_8
0x117ef	      0x48837db000	               cmp qword [rbp - 0x50], 0	      8849	screen.c	FUNCTION_69	IF_8
0x117f4	            0x740d	                            je 0x4011843	      8849	screen.c	FUNCTION_69	IF_8
0x117f6	    0x83bd64ffffff	               cmp dword [rbp - 0x9c], 0	      8850	screen.c	FUNCTION_69	IF_8
0x117fd	     0xf841d010000	                            je 0x4011960	      8850	screen.c	FUNCTION_69	IF_8
0x11803	    0x488b05000000	            mov rax, qword [0x0401184a] 	      8852	screen.c	FUNCTION_69	IF_8	IF_9
0x1180a	          0x4885c0	                           test rax, rax	      8852	screen.c	FUNCTION_69	IF_8	IF_9
0x1180d	            0x750a	                           jne 0x4011859	      8852	screen.c	FUNCTION_69	IF_8	IF_9
0x1180f	    0x8b0500000000	            mov eax, dword [0x04011855] 	      8852	screen.c	FUNCTION_69	IF_8	IF_9
0x11815	            0x85c0	                           test eax, eax	      8852	screen.c	FUNCTION_69	IF_8	IF_9
0x11817	            0x7528	                           jne 0x4011881	      8852	screen.c	FUNCTION_69	IF_8	IF_9
0x11819	    0x488b05000000	            mov rax, qword [0x04011860] 	      8855	screen.c	FUNCTION_69	IF_8	IF_9	CALL_16
0x11820	        0x488d5001	                      lea rdx, [rax + 1]	      8855	screen.c	FUNCTION_69	IF_8	IF_9	CALL_16
0x11824	    0x488b05000000	            mov rax, qword [0x0401186b] 	      8855	screen.c	FUNCTION_69	IF_8	IF_9	CALL_16
0x1182b	        0x480fafc2	                           imul rax, rdx	      8855	screen.c	FUNCTION_69	IF_8	IF_9	CALL_16
0x1182f	          0x4889c7	                            mov rdi, rax	      8855	screen.c	FUNCTION_69	IF_8	IF_9	CALL_16
0x11832	      0xe800000000	                          call 0x4011877	      8855	screen.c	FUNCTION_69	IF_8	IF_9	CALL_16
0x11837	    0xc70500000000	               mov dword [0x04011881], 1	      8859	screen.c	FUNCTION_69	IF_8	IF_9
0x11841	        0x488b4580	             mov rax, qword [rbp - 0x80]	      8861	screen.c	FUNCTION_69	IF_8	CALL_17
0x11845	          0x4889c7	                            mov rdi, rax	      8861	screen.c	FUNCTION_69	IF_8	CALL_17
0x11848	      0xe800000000	                          call 0x401188d	      8861	screen.c	FUNCTION_69	IF_8	CALL_17
0x1184d	    0x48c745800000	               mov qword [rbp - 0x80], 0	      8862	screen.c	FUNCTION_69	IF_8
0x11855	        0x488b4588	             mov rax, qword [rbp - 0x78]	      8864	screen.c	FUNCTION_69	IF_8	CALL_18
0x11859	          0x4889c7	                            mov rdi, rax	      8864	screen.c	FUNCTION_69	IF_8	CALL_18
0x1185c	      0xe800000000	                          call 0x40118a1	      8864	screen.c	FUNCTION_69	IF_8	CALL_18
0x11861	    0x48c745880000	               mov qword [rbp - 0x78], 0	      8865	screen.c	FUNCTION_69	IF_8
0x11869	    0xc7856cffffff	               mov dword [rbp - 0x94], 0	      8866	screen.c	FUNCTION_69	IF_8	FOR_3
0x11873	            0xeb2d	                           jmp 0x40118e2	      8866	screen.c	FUNCTION_69	IF_8	FOR_3
0x11875	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      8868	screen.c	FUNCTION_69	IF_8	FOR_3	CALL_19
0x1187b	            0x4898	                                    cdqe	      8868	screen.c	FUNCTION_69	IF_8	FOR_3	CALL_19
0x1187d	      0x488b44c5c0	     mov rax, qword [rbp + rax*8 - 0x40]	      8868	screen.c	FUNCTION_69	IF_8	FOR_3	CALL_19
0x11882	          0x4889c7	                            mov rdi, rax	      8868	screen.c	FUNCTION_69	IF_8	FOR_3	CALL_19
0x11885	      0xe800000000	                          call 0x40118ca	      8868	screen.c	FUNCTION_69	IF_8	FOR_3	CALL_19
0x1188a	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      8869	screen.c	FUNCTION_69	IF_8	FOR_3
0x11890	            0x4898	                                    cdqe	      8869	screen.c	FUNCTION_69	IF_8	FOR_3
0x11892	    0x48c744c5c000	       mov qword [rbp + rax*8 - 0x40], 0	      8869	screen.c	FUNCTION_69	IF_8	FOR_3
0x1189b	    0x83856cffffff	               add dword [rbp - 0x94], 1	      8866	screen.c	FUNCTION_69	IF_8	FOR_3
0x118a2	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      8866	screen.c	FUNCTION_69	IF_8	FOR_3
0x118a8	          0x4863d0	                         movsxd rdx, eax	      8866	screen.c	FUNCTION_69	IF_8	FOR_3
0x118ab	    0x488b05000000	            mov rax, qword [0x040118f2] 	      8866	screen.c	FUNCTION_69	IF_8	FOR_3
0x118b2	          0x4839c2	                            cmp rdx, rax	      8866	screen.c	FUNCTION_69	IF_8	FOR_3
0x118b5	            0x7cbe	                            jl 0x40118b5	      8866	screen.c	FUNCTION_69	IF_8	FOR_3
0x118b7	        0x488b4590	             mov rax, qword [rbp - 0x70]	      8871	screen.c	FUNCTION_69	IF_8	CALL_20
0x118bb	          0x4889c7	                            mov rdi, rax	      8871	screen.c	FUNCTION_69	IF_8	CALL_20
0x118be	      0xe800000000	                          call 0x4011903	      8871	screen.c	FUNCTION_69	IF_8	CALL_20
0x118c3	    0x48c745900000	               mov qword [rbp - 0x70], 0	      8872	screen.c	FUNCTION_69	IF_8
0x118cb	        0x488b4598	             mov rax, qword [rbp - 0x68]	      8874	screen.c	FUNCTION_69	IF_8	CALL_21
0x118cf	          0x4889c7	                            mov rdi, rax	      8874	screen.c	FUNCTION_69	IF_8	CALL_21
0x118d2	      0xe800000000	                          call 0x4011917	      8874	screen.c	FUNCTION_69	IF_8	CALL_21
0x118d7	    0x48c745980000	               mov qword [rbp - 0x68], 0	      8875	screen.c	FUNCTION_69	IF_8
0x118df	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      8876	screen.c	FUNCTION_69	IF_8	CALL_22
0x118e3	          0x4889c7	                            mov rdi, rax	      8876	screen.c	FUNCTION_69	IF_8	CALL_22
0x118e6	      0xe800000000	                          call 0x401192b	      8876	screen.c	FUNCTION_69	IF_8	CALL_22
0x118eb	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      8877	screen.c	FUNCTION_69	IF_8
0x118f3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8878	screen.c	FUNCTION_69	IF_8	CALL_23
0x118f7	          0x4889c7	                            mov rdi, rax	      8878	screen.c	FUNCTION_69	IF_8	CALL_23
0x118fa	      0xe800000000	                          call 0x401193f	      8878	screen.c	FUNCTION_69	IF_8	CALL_23
0x118ff	    0x48c745a80000	               mov qword [rbp - 0x58], 0	      8879	screen.c	FUNCTION_69	IF_8
0x11907	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      8880	screen.c	FUNCTION_69	IF_8	CALL_24
0x1190b	          0x4889c7	                            mov rdi, rax	      8880	screen.c	FUNCTION_69	IF_8	CALL_24
0x1190e	      0xe800000000	                          call 0x4011953	      8880	screen.c	FUNCTION_69	IF_8	CALL_24
0x11913	    0x48c745b00000	               mov qword [rbp - 0x50], 0	      8881	screen.c	FUNCTION_69	IF_8
0x1191b	      0xe932050000	                           jmp 0x4011e92	      8881	screen.c	FUNCTION_69	IF_8
0x11920	    0xc70500000000	               mov dword [0x0401196a], 0	      8885	screen.c	FUNCTION_69	ELSE_1
0x1192a	    0xc78560ffffff	               mov dword [rbp - 0xa0], 0	      8887	screen.c	FUNCTION_69	ELSE_1	FOR_4
0x11934	      0xe9dd040000	                           jmp 0x4011e56	      8887	screen.c	FUNCTION_69	ELSE_1	FOR_4
0x11939	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	      8889	screen.c	FUNCTION_69	ELSE_1	FOR_4
0x1193f	            0x4898	                                    cdqe	      8889	screen.c	FUNCTION_69	ELSE_1	FOR_4
0x11941	    0x488d14850000	                        lea rdx, [rax*4]	      8889	screen.c	FUNCTION_69	ELSE_1	FOR_4
0x11949	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      8889	screen.c	FUNCTION_69	ELSE_1	FOR_4
0x1194d	          0x4801c2	                            add rdx, rax	      8889	screen.c	FUNCTION_69	ELSE_1	FOR_4
0x11950	    0x488b05000000	            mov rax, qword [0x04011997] 	      8889	screen.c	FUNCTION_69	ELSE_1	FOR_4
0x11957	            0x89c1	                            mov ecx, eax	      8889	screen.c	FUNCTION_69	ELSE_1	FOR_4
0x11959	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	      8889	screen.c	FUNCTION_69	ELSE_1	FOR_4
0x1195f	           0xfafc1	                           imul eax, ecx	      8889	screen.c	FUNCTION_69	ELSE_1	FOR_4
0x11962	            0x8902	                    mov dword [rdx], eax	      8889	screen.c	FUNCTION_69	ELSE_1	FOR_4
0x11964	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	      8890	screen.c	FUNCTION_69	ELSE_1	FOR_4
0x1196a	          0x4863d0	                         movsxd rdx, eax	      8890	screen.c	FUNCTION_69	ELSE_1	FOR_4
0x1196d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8890	screen.c	FUNCTION_69	ELSE_1	FOR_4
0x11971	          0x4801d0	                            add rax, rdx	      8890	screen.c	FUNCTION_69	ELSE_1	FOR_4
0x11974	          0xc60000	                       mov byte [rax], 0	      8890	screen.c	FUNCTION_69	ELSE_1	FOR_4
0x11977	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 0	      8898	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10
0x1197e	     0xf858b040000	                           jne 0x4011e4f	      8898	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10
0x11984	    0x488b05000000	            mov rax, qword [0x040119cb] 	      8900	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	CALL_25
0x1198b	          0x4889c1	                            mov rcx, rax	      8900	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	CALL_25
0x1198e	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	      8900	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	CALL_25
0x11994	          0x4863d0	                         movsxd rdx, eax	      8900	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	CALL_25
0x11997	    0x488b05000000	            mov rax, qword [0x040119de] 	      8900	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	CALL_25
0x1199e	        0x480fafc2	                           imul rax, rdx	      8900	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	CALL_25
0x119a2	          0x4889c2	                            mov rdx, rax	      8900	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	CALL_25
0x119a5	        0x488b4580	             mov rax, qword [rbp - 0x80]	      8900	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	CALL_25
0x119a9	          0x4801d0	                            add rax, rdx	      8900	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	CALL_25
0x119ac	          0x4889ca	                            mov rdx, rcx	      8900	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	CALL_25
0x119af	      0xbe20000000	                           mov esi, 0x20	      8900	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	CALL_25
0x119b4	          0x4889c7	                            mov rdi, rax	      8900	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	CALL_25
0x119b7	      0xe800000000	                          call 0x40119fc	      8900	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	CALL_25
0x119bc	    0x8b0500000000	            mov eax, dword [0x04011a02] 	      8903	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11
0x119c2	            0x85c0	                           test eax, eax	      8903	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11
0x119c4	     0xf84ab000000	                            je 0x4011ab5	      8903	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11
0x119ca	    0x488b05000000	            mov rax, qword [0x04011a11] 	      8905	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11	CALL_26
0x119d1	    0x488d14850000	                        lea rdx, [rax*4]	      8905	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11	CALL_26
0x119d9	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	      8905	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11	CALL_26
0x119df	          0x4863c8	                         movsxd rcx, eax	      8905	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11	CALL_26
0x119e2	    0x488b05000000	            mov rax, qword [0x04011a29] 	      8905	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11	CALL_26
0x119e9	        0x480fafc1	                           imul rax, rcx	      8905	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11	CALL_26
0x119ed	    0x488d0c850000	                        lea rcx, [rax*4]	      8905	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11	CALL_26
0x119f5	        0x488b4588	             mov rax, qword [rbp - 0x78]	      8905	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11	CALL_26
0x119f9	          0x4801c8	                            add rax, rcx	      8905	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11	CALL_26
0x119fc	      0xbe00000000	                              mov esi, 0	      8905	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11	CALL_26
0x11a01	          0x4889c7	                            mov rdi, rax	      8905	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11	CALL_26
0x11a04	      0xe800000000	                          call 0x4011a49	      8905	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11	CALL_26
0x11a09	    0xc7856cffffff	               mov dword [rbp - 0x94], 0	      8907	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11	FOR_5
0x11a13	            0xeb4b	                           jmp 0x4011aa0	      8907	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11	FOR_5
0x11a15	    0x488b05000000	            mov rax, qword [0x04011a5c] 	      8908	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11	FOR_5	CALL_27
0x11a1c	    0x488d14850000	                        lea rdx, [rax*4]	      8908	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11	FOR_5	CALL_27
0x11a24	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      8908	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11	FOR_5	CALL_27
0x11a2a	            0x4898	                                    cdqe	      8908	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11	FOR_5	CALL_27
0x11a2c	      0x488b44c5c0	     mov rax, qword [rbp + rax*8 - 0x40]	      8908	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11	FOR_5	CALL_27
0x11a31	    0x8b8d60ffffff	             mov ecx, dword [rbp - 0xa0]	      8908	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11	FOR_5	CALL_27
0x11a37	          0x4863f1	                         movsxd rsi, ecx	      8908	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11	FOR_5	CALL_27
0x11a3a	    0x488b0d000000	            mov rcx, qword [0x04011a81] 	      8908	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11	FOR_5	CALL_27
0x11a41	        0x480fafce	                           imul rcx, rsi	      8908	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11	FOR_5	CALL_27
0x11a45	        0x48c1e102	                              shl rcx, 2	      8908	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11	FOR_5	CALL_27
0x11a49	          0x4801c8	                            add rax, rcx	      8908	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11	FOR_5	CALL_27
0x11a4c	      0xbe00000000	                              mov esi, 0	      8908	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11	FOR_5	CALL_27
0x11a51	          0x4889c7	                            mov rdi, rax	      8908	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11	FOR_5	CALL_27
0x11a54	      0xe800000000	                          call 0x4011a99	      8908	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11	FOR_5	CALL_27
0x11a59	    0x83856cffffff	               add dword [rbp - 0x94], 1	      8907	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11	FOR_5
0x11a60	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      8907	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11	FOR_5
0x11a66	          0x4863d0	                         movsxd rdx, eax	      8907	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11	FOR_5
0x11a69	    0x488b05000000	            mov rax, qword [0x04011ab0] 	      8907	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11	FOR_5
0x11a70	          0x4839c2	                            cmp rdx, rax	      8907	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11	FOR_5
0x11a73	            0x7ca0	                            jl 0x4011a55	      8907	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_11	FOR_5
0x11a75	    0x8b0500000000	            mov eax, dword [0x04011abb] 	      8912	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_12
0x11a7b	      0x3dcc260000	                         cmp eax, 0x26cc	      8912	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_12
0x11a80	            0x7538	                           jne 0x4011afa	      8912	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_12
0x11a82	    0x488b05000000	            mov rax, qword [0x04011ac9] 	      8913	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_12	CALL_28
0x11a89	          0x4889c1	                            mov rcx, rax	      8913	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_12	CALL_28
0x11a8c	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	      8913	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_12	CALL_28
0x11a92	          0x4863d0	                         movsxd rdx, eax	      8913	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_12	CALL_28
0x11a95	    0x488b05000000	            mov rax, qword [0x04011adc] 	      8913	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_12	CALL_28
0x11a9c	        0x480fafc2	                           imul rax, rdx	      8913	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_12	CALL_28
0x11aa0	          0x4889c2	                            mov rdx, rax	      8913	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_12	CALL_28
0x11aa3	        0x488b4590	             mov rax, qword [rbp - 0x70]	      8913	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_12	CALL_28
0x11aa7	          0x4801d0	                            add rax, rdx	      8913	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_12	CALL_28
0x11aaa	          0x4889ca	                            mov rdx, rcx	      8913	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_12	CALL_28
0x11aad	      0xbe00000000	                              mov esi, 0	      8913	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_12	CALL_28
0x11ab2	          0x4889c7	                            mov rdi, rax	      8913	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_12	CALL_28
0x11ab5	      0xe800000000	                          call 0x4011afa	      8913	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_12	CALL_28
0x11aba	    0x488b05000000	            mov rax, qword [0x04011b01] 	      8916	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	CALL_29
0x11ac1	        0x488d1400	                    lea rdx, [rax + rax]	      8916	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	CALL_29
0x11ac5	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	      8916	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	CALL_29
0x11acb	          0x4863c8	                         movsxd rcx, eax	      8916	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	CALL_29
0x11ace	    0x488b05000000	            mov rax, qword [0x04011b15] 	      8916	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	CALL_29
0x11ad5	        0x480fafc1	                           imul rax, rcx	      8916	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	CALL_29
0x11ad9	        0x488d0c00	                    lea rcx, [rax + rax]	      8916	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	CALL_29
0x11add	        0x488b4598	             mov rax, qword [rbp - 0x68]	      8916	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	CALL_29
0x11ae1	          0x4801c8	                            add rax, rcx	      8916	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	CALL_29
0x11ae4	      0xbe00000000	                              mov esi, 0	      8916	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	CALL_29
0x11ae9	          0x4889c7	                            mov rdi, rax	      8916	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	CALL_29
0x11aec	      0xe800000000	                          call 0x4011b31	      8916	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	CALL_29
0x11af1	    0x8b0500000000	            mov eax, dword [0x04011b37] 	      8918	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10
0x11af7	            0x89c2	                            mov edx, eax	      8918	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10
0x11af9	    0x488b05000000	            mov rax, qword [0x04011b40] 	      8918	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10
0x11b00	            0x29c2	                            sub edx, eax	      8918	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10
0x11b02	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	      8918	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10
0x11b08	             0x1d0	                            add eax, edx	      8918	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10
0x11b0a	    0x898574ffffff	             mov dword [rbp - 0x8c], eax	      8918	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10
0x11b10	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      8919	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13
0x11b17	     0xf88f2020000	                            js 0x4011e4f	      8919	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13
0x11b1d	    0x488b05000000	            mov rax, qword [0x04011b64] 	      8919	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13
0x11b24	          0x4885c0	                           test rax, rax	      8919	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13
0x11b27	     0xf84e2020000	                            je 0x4011e4f	      8919	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13
0x11b2d	    0x8b0500000000	            mov eax, dword [0x04011b73] 	      8921	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_14
0x11b33	          0x4863d0	                         movsxd rdx, eax	      8921	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_14
0x11b36	    0x488b05000000	            mov rax, qword [0x04011b7d] 	      8921	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_14
0x11b3d	          0x4839c2	                            cmp rdx, rax	      8921	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_14
0x11b40	            0x7d0e	                           jge 0x4011b90	      8921	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_14
0x11b42	    0x8b0500000000	            mov eax, dword [0x04011b88] 	      8922	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_14
0x11b48	    0x898568ffffff	             mov dword [rbp - 0x98], eax	      8922	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_14
0x11b4e	            0xeb0d	                           jmp 0x4011b9d	      8922	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_14
0x11b50	    0x488b05000000	            mov rax, qword [0x04011b97] 	      8924	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	ELSE_2
0x11b57	    0x898568ffffff	             mov dword [rbp - 0x98], eax	      8924	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	ELSE_2
0x11b5d	    0x8b0500000000	            mov eax, dword [0x04011ba3] 	      8928	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_15
0x11b63	            0x85c0	                           test eax, eax	      8928	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_15
0x11b65	            0x740c	                            je 0x4011bb3	      8928	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_15
0x11b67	    0x488b05000000	            mov rax, qword [0x04011bae] 	      8928	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_15
0x11b6e	          0x4885c0	                           test rax, rax	      8928	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_15
0x11b71	            0x7471	                            je 0x4011c24	      8928	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_15
0x11b73	    0x8b0500000000	            mov eax, dword [0x04011bb9] 	      8929	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_15
0x11b79	          0x4863d0	                         movsxd rdx, eax	      8929	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_15
0x11b7c	    0x488b05000000	            mov rax, qword [0x04011bc3] 	      8929	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_15
0x11b83	          0x4839c2	                            cmp rdx, rax	      8929	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_15
0x11b86	            0x755c	                           jne 0x4011c24	      8929	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_15
0x11b88	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      8931	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_15	CALL_30
0x11b8e	            0x4898	                                    cdqe	      8931	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_15	CALL_30
0x11b90	    0x488b15000000	            mov rdx, qword [0x04011bd7] 	      8931	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_15	CALL_30
0x11b97	    0x488b0d000000	            mov rcx, qword [0x04011bde] 	      8931	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_15	CALL_30
0x11b9e	    0x8bb574ffffff	             mov esi, dword [rbp - 0x8c]	      8931	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_15	CALL_30
0x11ba4	          0x4863f6	                         movsxd rsi, esi	      8931	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_15	CALL_30
0x11ba7	        0x48c1e602	                              shl rsi, 2	      8931	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_15	CALL_30
0x11bab	          0x4801f1	                            add rcx, rsi	      8931	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_15	CALL_30
0x11bae	            0x8b09	                    mov ecx, dword [rcx]	      8931	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_15	CALL_30
0x11bb0	            0x89c9	                            mov ecx, ecx	      8931	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_15	CALL_30
0x11bb2	        0x488d340a	                    lea rsi, [rdx + rcx]	      8931	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_15	CALL_30
0x11bb6	    0x8b9560ffffff	             mov edx, dword [rbp - 0xa0]	      8931	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_15	CALL_30
0x11bbc	          0x4863d2	                         movsxd rdx, edx	      8931	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_15	CALL_30
0x11bbf	    0x488d0c950000	                        lea rcx, [rdx*4]	      8931	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_15	CALL_30
0x11bc7	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      8931	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_15	CALL_30
0x11bcb	          0x4801ca	                            add rdx, rcx	      8931	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_15	CALL_30
0x11bce	            0x8b12	                    mov edx, dword [rdx]	      8931	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_15	CALL_30
0x11bd0	            0x89d1	                            mov ecx, edx	      8931	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_15	CALL_30
0x11bd2	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      8931	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_15	CALL_30
0x11bd6	          0x4801d1	                            add rcx, rdx	      8931	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_15	CALL_30
0x11bd9	          0x4889c2	                            mov rdx, rax	      8931	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_15	CALL_30
0x11bdc	          0x4889cf	                            mov rdi, rcx	      8931	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_15	CALL_30
0x11bdf	      0xe800000000	                          call 0x4011c24	      8931	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_15	CALL_30
0x11be4	    0x8b0500000000	            mov eax, dword [0x04011c2a] 	      8935	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16
0x11bea	            0x85c0	                           test eax, eax	      8935	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16
0x11bec	     0xf8443010000	                            je 0x4011d75	      8935	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16
0x11bf2	    0x488b05000000	            mov rax, qword [0x04011c39] 	      8935	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16
0x11bf9	          0x4885c0	                           test rax, rax	      8935	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16
0x11bfc	     0xf8433010000	                            je 0x4011d75	      8935	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16
0x11c02	    0x8b0500000000	            mov eax, dword [0x04011c48] 	      8936	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16
0x11c08	          0x4863d0	                         movsxd rdx, eax	      8936	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16
0x11c0b	    0x488b05000000	            mov rax, qword [0x04011c52] 	      8936	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16
0x11c12	          0x4839c2	                            cmp rdx, rax	      8936	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16
0x11c15	     0xf851a010000	                           jne 0x4011d75	      8936	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16
0x11c1b	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      8938	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	CALL_31
0x11c21	            0x4898	                                    cdqe	      8938	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	CALL_31
0x11c23	    0x488d14850000	                        lea rdx, [rax*4]	      8938	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	CALL_31
0x11c2b	    0x488b05000000	            mov rax, qword [0x04011c72] 	      8938	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	CALL_31
0x11c32	    0x488b0d000000	            mov rcx, qword [0x04011c79] 	      8938	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	CALL_31
0x11c39	    0x8bb574ffffff	             mov esi, dword [rbp - 0x8c]	      8938	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	CALL_31
0x11c3f	          0x4863f6	                         movsxd rsi, esi	      8938	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	CALL_31
0x11c42	        0x48c1e602	                              shl rsi, 2	      8938	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	CALL_31
0x11c46	          0x4801f1	                            add rcx, rsi	      8938	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	CALL_31
0x11c49	            0x8b09	                    mov ecx, dword [rcx]	      8938	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	CALL_31
0x11c4b	            0x89c9	                            mov ecx, ecx	      8938	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	CALL_31
0x11c4d	        0x48c1e102	                              shl rcx, 2	      8938	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	CALL_31
0x11c51	          0x4801c1	                            add rcx, rax	      8938	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	CALL_31
0x11c54	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	      8938	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	CALL_31
0x11c5a	            0x4898	                                    cdqe	      8938	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	CALL_31
0x11c5c	    0x488d34850000	                        lea rsi, [rax*4]	      8938	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	CALL_31
0x11c64	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      8938	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	CALL_31
0x11c68	          0x4801f0	                            add rax, rsi	      8938	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	CALL_31
0x11c6b	            0x8b00	                    mov eax, dword [rax]	      8938	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	CALL_31
0x11c6d	            0x89c0	                            mov eax, eax	      8938	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	CALL_31
0x11c6f	    0x488d34850000	                        lea rsi, [rax*4]	      8938	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	CALL_31
0x11c77	        0x488b4588	             mov rax, qword [rbp - 0x78]	      8938	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	CALL_31
0x11c7b	          0x4801f0	                            add rax, rsi	      8938	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	CALL_31
0x11c7e	          0x4889ce	                            mov rsi, rcx	      8938	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	CALL_31
0x11c81	          0x4889c7	                            mov rdi, rax	      8938	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	CALL_31
0x11c84	      0xe800000000	                          call 0x4011cc9	      8938	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	CALL_31
0x11c89	    0xc7856cffffff	               mov dword [rbp - 0x94], 0	      8941	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	FOR_6
0x11c93	      0xe984000000	                           jmp 0x4011d5c	      8941	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	FOR_6
0x11c98	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      8942	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	FOR_6	CALL_32
0x11c9e	            0x4898	                                    cdqe	      8942	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	FOR_6	CALL_32
0x11ca0	    0x488d14850000	                        lea rdx, [rax*4]	      8942	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	FOR_6	CALL_32
0x11ca8	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      8942	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	FOR_6	CALL_32
0x11cae	            0x4898	                                    cdqe	      8942	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	FOR_6	CALL_32
0x11cb0	    0x488b04c50000	                  mov rax, qword [rax*8]	      8942	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	FOR_6	CALL_32
0x11cb8	    0x488b0d000000	            mov rcx, qword [0x04011cff] 	      8942	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	FOR_6	CALL_32
0x11cbf	    0x8bb574ffffff	             mov esi, dword [rbp - 0x8c]	      8942	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	FOR_6	CALL_32
0x11cc5	          0x4863f6	                         movsxd rsi, esi	      8942	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	FOR_6	CALL_32
0x11cc8	        0x48c1e602	                              shl rsi, 2	      8942	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	FOR_6	CALL_32
0x11ccc	          0x4801f1	                            add rcx, rsi	      8942	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	FOR_6	CALL_32
0x11ccf	            0x8b09	                    mov ecx, dword [rcx]	      8942	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	FOR_6	CALL_32
0x11cd1	            0x89c9	                            mov ecx, ecx	      8942	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	FOR_6	CALL_32
0x11cd3	        0x48c1e102	                              shl rcx, 2	      8942	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	FOR_6	CALL_32
0x11cd7	          0x4801c1	                            add rcx, rax	      8942	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	FOR_6	CALL_32
0x11cda	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      8942	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	FOR_6	CALL_32
0x11ce0	            0x4898	                                    cdqe	      8942	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	FOR_6	CALL_32
0x11ce2	      0x488b44c5c0	     mov rax, qword [rbp + rax*8 - 0x40]	      8942	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	FOR_6	CALL_32
0x11ce7	    0x8bb560ffffff	             mov esi, dword [rbp - 0xa0]	      8942	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	FOR_6	CALL_32
0x11ced	          0x4863f6	                         movsxd rsi, esi	      8942	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	FOR_6	CALL_32
0x11cf0	    0x488d3cb50000	                        lea rdi, [rsi*4]	      8942	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	FOR_6	CALL_32
0x11cf8	        0x488b75a0	             mov rsi, qword [rbp - 0x60]	      8942	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	FOR_6	CALL_32
0x11cfc	          0x4801fe	                            add rsi, rdi	      8942	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	FOR_6	CALL_32
0x11cff	            0x8b36	                    mov esi, dword [rsi]	      8942	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	FOR_6	CALL_32
0x11d01	            0x89f6	                            mov esi, esi	      8942	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	FOR_6	CALL_32
0x11d03	        0x48c1e602	                              shl rsi, 2	      8942	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	FOR_6	CALL_32
0x11d07	          0x4801f0	                            add rax, rsi	      8942	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	FOR_6	CALL_32
0x11d0a	          0x4889ce	                            mov rsi, rcx	      8942	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	FOR_6	CALL_32
0x11d0d	          0x4889c7	                            mov rdi, rax	      8942	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	FOR_6	CALL_32
0x11d10	      0xe800000000	                          call 0x4011d55	      8942	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	FOR_6	CALL_32
0x11d15	    0x83856cffffff	               add dword [rbp - 0x94], 1	      8941	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	FOR_6
0x11d1c	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      8941	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	FOR_6
0x11d22	          0x4863d0	                         movsxd rdx, eax	      8941	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	FOR_6
0x11d25	    0x488b05000000	            mov rax, qword [0x04011d6c] 	      8941	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	FOR_6
0x11d2c	          0x4839c2	                            cmp rdx, rax	      8941	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	FOR_6
0x11d2f	     0xf8c63ffffff	                            jl 0x4011cd8	      8941	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_16	FOR_6
0x11d35	    0x8b0500000000	            mov eax, dword [0x04011d7b] 	      8947	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_17
0x11d3b	      0x3dcc260000	                         cmp eax, 0x26cc	      8947	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_17
0x11d40	            0x7568	                           jne 0x4011dea	      8947	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_17
0x11d42	    0x488b05000000	            mov rax, qword [0x04011d89] 	      8947	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_17
0x11d49	          0x4885c0	                           test rax, rax	      8947	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_17
0x11d4c	            0x745c	                            je 0x4011dea	      8947	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_17
0x11d4e	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      8948	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_17	CALL_33
0x11d54	            0x4898	                                    cdqe	      8948	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_17	CALL_33
0x11d56	    0x488b15000000	            mov rdx, qword [0x04011d9d] 	      8948	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_17	CALL_33
0x11d5d	    0x488b0d000000	            mov rcx, qword [0x04011da4] 	      8948	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_17	CALL_33
0x11d64	    0x8bb574ffffff	             mov esi, dword [rbp - 0x8c]	      8948	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_17	CALL_33
0x11d6a	          0x4863f6	                         movsxd rsi, esi	      8948	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_17	CALL_33
0x11d6d	        0x48c1e602	                              shl rsi, 2	      8948	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_17	CALL_33
0x11d71	          0x4801f1	                            add rcx, rsi	      8948	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_17	CALL_33
0x11d74	            0x8b09	                    mov ecx, dword [rcx]	      8948	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_17	CALL_33
0x11d76	            0x89c9	                            mov ecx, ecx	      8948	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_17	CALL_33
0x11d78	        0x488d340a	                    lea rsi, [rdx + rcx]	      8948	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_17	CALL_33
0x11d7c	    0x8b9560ffffff	             mov edx, dword [rbp - 0xa0]	      8948	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_17	CALL_33
0x11d82	          0x4863d2	                         movsxd rdx, edx	      8948	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_17	CALL_33
0x11d85	    0x488d0c950000	                        lea rcx, [rdx*4]	      8948	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_17	CALL_33
0x11d8d	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      8948	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_17	CALL_33
0x11d91	          0x4801ca	                            add rdx, rcx	      8948	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_17	CALL_33
0x11d94	            0x8b12	                    mov edx, dword [rdx]	      8948	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_17	CALL_33
0x11d96	            0x89d1	                            mov ecx, edx	      8948	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_17	CALL_33
0x11d98	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      8948	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_17	CALL_33
0x11d9c	          0x4801d1	                            add rcx, rdx	      8948	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_17	CALL_33
0x11d9f	          0x4889c2	                            mov rdx, rax	      8948	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_17	CALL_33
0x11da2	          0x4889cf	                            mov rdi, rcx	      8948	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_17	CALL_33
0x11da5	      0xe800000000	                          call 0x4011dea	      8948	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	IF_17	CALL_33
0x11daa	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      8952	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	CALL_34
0x11db0	            0x4898	                                    cdqe	      8952	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	CALL_34
0x11db2	        0x488d1400	                    lea rdx, [rax + rax]	      8952	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	CALL_34
0x11db6	    0x488b05000000	            mov rax, qword [0x04011dfd] 	      8952	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	CALL_34
0x11dbd	    0x488b0d000000	            mov rcx, qword [0x04011e04] 	      8952	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	CALL_34
0x11dc4	    0x8bb574ffffff	             mov esi, dword [rbp - 0x8c]	      8952	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	CALL_34
0x11dca	          0x4863f6	                         movsxd rsi, esi	      8952	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	CALL_34
0x11dcd	        0x48c1e602	                              shl rsi, 2	      8952	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	CALL_34
0x11dd1	          0x4801f1	                            add rcx, rsi	      8952	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	CALL_34
0x11dd4	            0x8b09	                    mov ecx, dword [rcx]	      8952	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	CALL_34
0x11dd6	            0x89c9	                            mov ecx, ecx	      8952	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	CALL_34
0x11dd8	          0x4801c9	                            add rcx, rcx	      8952	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	CALL_34
0x11ddb	          0x4801c1	                            add rcx, rax	      8952	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	CALL_34
0x11dde	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	      8952	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	CALL_34
0x11de4	            0x4898	                                    cdqe	      8952	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	CALL_34
0x11de6	    0x488d34850000	                        lea rsi, [rax*4]	      8952	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	CALL_34
0x11dee	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      8952	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	CALL_34
0x11df2	          0x4801f0	                            add rax, rsi	      8952	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	CALL_34
0x11df5	            0x8b00	                    mov eax, dword [rax]	      8952	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	CALL_34
0x11df7	            0x89c0	                            mov eax, eax	      8952	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	CALL_34
0x11df9	        0x488d3400	                    lea rsi, [rax + rax]	      8952	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	CALL_34
0x11dfd	        0x488b4598	             mov rax, qword [rbp - 0x68]	      8952	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	CALL_34
0x11e01	          0x4801f0	                            add rax, rsi	      8952	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	CALL_34
0x11e04	          0x4889ce	                            mov rsi, rcx	      8952	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	CALL_34
0x11e07	          0x4889c7	                            mov rdi, rax	      8952	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	CALL_34
0x11e0a	      0xe800000000	                          call 0x4011e4f	      8952	screen.c	FUNCTION_69	ELSE_1	FOR_4	IF_10	IF_13	CALL_34
0x11e0f	    0x838560ffffff	               add dword [rbp - 0xa0], 1	      8887	screen.c	FUNCTION_69	ELSE_1	FOR_4
0x11e16	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	      8887	screen.c	FUNCTION_69	ELSE_1	FOR_4
0x11e1c	          0x4863d0	                         movsxd rdx, eax	      8887	screen.c	FUNCTION_69	ELSE_1	FOR_4
0x11e1f	    0x488b05000000	            mov rax, qword [0x04011e66] 	      8887	screen.c	FUNCTION_69	ELSE_1	FOR_4
0x11e26	          0x4839c2	                            cmp rdx, rax	      8887	screen.c	FUNCTION_69	ELSE_1	FOR_4
0x11e29	     0xf8c0afbffff	                            jl 0x4011979	      8887	screen.c	FUNCTION_69	ELSE_1	FOR_4
0x11e2f	    0x488b15000000	            mov rdx, qword [0x04011e76] 	      8959	screen.c	FUNCTION_69	ELSE_1
0x11e36	    0x488b05000000	            mov rax, qword [0x04011e7d] 	      8959	screen.c	FUNCTION_69	ELSE_1
0x11e3d	        0x480fafc2	                           imul rax, rdx	      8959	screen.c	FUNCTION_69	ELSE_1
0x11e41	          0x4889c2	                            mov rdx, rax	      8959	screen.c	FUNCTION_69	ELSE_1
0x11e44	        0x488b4580	             mov rax, qword [rbp - 0x80]	      8959	screen.c	FUNCTION_69	ELSE_1
0x11e48	          0x4801d0	                            add rax, rdx	      8959	screen.c	FUNCTION_69	ELSE_1
0x11e4b	    0x488905000000	            mov qword [0x04011e92], rax 	      8959	screen.c	FUNCTION_69	ELSE_1
0x11e52	      0xe800000000	                          call 0x4011e97	      8962	screen.c	FUNCTION_69	CALL_35
0x11e57	        0x488b4580	             mov rax, qword [rbp - 0x80]	      8964	screen.c	FUNCTION_69
0x11e5b	    0x488905000000	            mov qword [0x04011ea2], rax 	      8964	screen.c	FUNCTION_69
0x11e62	        0x488b4588	             mov rax, qword [rbp - 0x78]	      8966	screen.c	FUNCTION_69
0x11e66	    0x488905000000	            mov qword [0x04011ead], rax 	      8966	screen.c	FUNCTION_69
0x11e6d	    0xc7856cffffff	               mov dword [rbp - 0x94], 0	      8967	screen.c	FUNCTION_69	FOR_7
0x11e77	            0xeb24	                           jmp 0x4011edd	      8967	screen.c	FUNCTION_69	FOR_7
0x11e79	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      8968	screen.c	FUNCTION_69	FOR_7
0x11e7f	            0x4898	                                    cdqe	      8968	screen.c	FUNCTION_69	FOR_7
0x11e81	      0x488b54c5c0	     mov rdx, qword [rbp + rax*8 - 0x40]	      8968	screen.c	FUNCTION_69	FOR_7
0x11e86	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      8968	screen.c	FUNCTION_69	FOR_7
0x11e8c	            0x4898	                                    cdqe	      8968	screen.c	FUNCTION_69	FOR_7
0x11e8e	    0x488914c50000	                  mov qword [rax*8], rdx	      8968	screen.c	FUNCTION_69	FOR_7
0x11e96	    0x83856cffffff	               add dword [rbp - 0x94], 1	      8967	screen.c	FUNCTION_69	FOR_7
0x11e9d	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      8967	screen.c	FUNCTION_69	FOR_7
0x11ea3	          0x4863d0	                         movsxd rdx, eax	      8967	screen.c	FUNCTION_69	FOR_7
0x11ea6	    0x488b05000000	            mov rax, qword [0x04011eed] 	      8967	screen.c	FUNCTION_69	FOR_7
0x11ead	          0x4839c2	                            cmp rdx, rax	      8967	screen.c	FUNCTION_69	FOR_7
0x11eb0	            0x7cc7	                            jl 0x4011eb9	      8967	screen.c	FUNCTION_69	FOR_7
0x11eb2	    0x488b05000000	            mov rax, qword [0x04011ef9] 	      8969	screen.c	FUNCTION_69
0x11eb9	    0x890500000000	            mov dword [0x04011eff], eax 	      8969	screen.c	FUNCTION_69
0x11ebf	        0x488b4590	             mov rax, qword [rbp - 0x70]	      8970	screen.c	FUNCTION_69
0x11ec3	    0x488905000000	            mov qword [0x04011f0a], rax 	      8970	screen.c	FUNCTION_69
0x11eca	        0x488b4598	             mov rax, qword [rbp - 0x68]	      8972	screen.c	FUNCTION_69
0x11ece	    0x488905000000	            mov qword [0x04011f15], rax 	      8972	screen.c	FUNCTION_69
0x11ed5	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      8973	screen.c	FUNCTION_69
0x11ed9	    0x488905000000	            mov qword [0x04011f20], rax 	      8973	screen.c	FUNCTION_69
0x11ee0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8974	screen.c	FUNCTION_69
0x11ee4	    0x488905000000	            mov qword [0x04011f2b], rax 	      8974	screen.c	FUNCTION_69
0x11eeb	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      8975	screen.c	FUNCTION_69
0x11eef	    0x488905000000	            mov qword [0x04011f36], rax 	      8975	screen.c	FUNCTION_69
0x11ef6	    0x488b05000000	            mov rax, qword [0x04011f3d] 	      8982	screen.c	FUNCTION_69
0x11efd	    0x890500000000	            mov dword [0x04011f43], eax 	      8982	screen.c	FUNCTION_69
0x11f03	    0x488b05000000	            mov rax, qword [0x04011f4a] 	      8983	screen.c	FUNCTION_69
0x11f0a	    0x890500000000	            mov dword [0x04011f50], eax 	      8983	screen.c	FUNCTION_69
0x11f10	    0xc70500000000	           mov dword [0x04011f5a], 0x32 	      8985	screen.c	FUNCTION_69
0x11f1a	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 0	      8986	screen.c	FUNCTION_69	IF_18
0x11f21	            0x7405	                            je 0x4011f68	      8986	screen.c	FUNCTION_69	IF_18
0x11f23	      0xe836010000	                   call sym.screenclear2	      8987	screen.c	FUNCTION_69	CALL_36
0x11f28	    0xc70500000000	               mov dword [0x04011f72], 0	      9009	screen.c	FUNCTION_69
0x11f32	    0x8b0500000000	            mov eax, dword [0x04011f78] 	      9010	screen.c	FUNCTION_69
0x11f38	          0x83e801	                              sub eax, 1	      9010	screen.c	FUNCTION_69
0x11f3b	    0x890500000000	            mov dword [0x04011f81], eax 	      9010	screen.c	FUNCTION_69
0x11f41	    0x8b0500000000	            mov eax, dword [0x04011f87] 	      9017	screen.c	FUNCTION_69	IF_23
0x11f47	            0x85c0	                           test eax, eax	      9017	screen.c	FUNCTION_69	IF_23
0x11f49	            0x753c	                           jne 0x4011fc7	      9017	screen.c	FUNCTION_69	IF_23
0x11f4b	    0x838570ffffff	               add dword [rbp - 0x90], 1	      9017	screen.c	FUNCTION_69	IF_23
0x11f52	    0x83bd70ffffff	               cmp dword [rbp - 0x90], 3	      9017	screen.c	FUNCTION_69	IF_23
0x11f59	            0x7f2c	                            jg 0x4011fc7	      9017	screen.c	FUNCTION_69	IF_23
0x11f5b	    0x488b05000000	            mov rax, qword [0x04011fa2] 	      9019	screen.c	FUNCTION_69	IF_23	CALL_38
0x11f62	          0x4989c0	                             mov r8, rax	      9019	screen.c	FUNCTION_69	IF_23	CALL_38
0x11f65	      0xb900000000	                              mov ecx, 0	      9019	screen.c	FUNCTION_69	IF_23	CALL_38
0x11f6a	      0xba00000000	                              mov edx, 0	      9019	screen.c	FUNCTION_69	IF_23	CALL_38
0x11f6f	      0xbe00000000	                              mov esi, 0	      9019	screen.c	FUNCTION_69	IF_23	CALL_38
0x11f74	      0xbf3f000000	                           mov edi, 0x3f	      9019	screen.c	FUNCTION_69	IF_23	CALL_38
0x11f79	      0xe800000000	                          call 0x4011fbe	      9019	screen.c	FUNCTION_69	IF_23	CALL_38
0x11f7e	      0xe919f4ffff	                           jmp 0x40113dc	      9022	screen.c	FUNCTION_69	IF_23
0x11f83	              0x90	                                     nop	      8759	screen.c	FUNCTION_69	IF_1
0x11f84	            0xeb01	                           jmp 0x4011fc7	      8759	screen.c	FUNCTION_69	IF_1
0x11f86	              0x90	                                     nop	      8767	screen.c	FUNCTION_69	IF_2
0x11f87	        0x488b45f8	                mov rax, qword [rbp - 8]	      9025	screen.c	FUNCTION_69
0x11f8b	    0x644833042528	                xor rax, qword fs:[0x28]	      9025	screen.c	FUNCTION_69
0x11f94	            0x7405	                            je 0x4011fdb	      9025	screen.c	FUNCTION_69
0x11f96	      0xe800000000	                          call 0x4011fdb	      9025	screen.c	FUNCTION_69
0x11f9b	              0xc9	                                   leave	      9025	screen.c	FUNCTION_69
0x11f9c	              0xc3	                                     ret	      9025	screen.c	FUNCTION_69
win_rest_invalid	DO,0:functions,0:CALL,1:ELSE,0:IF,0:WHILE,1:FOR,0:SWITCH,0	20
0x1323e	              0x55	                                push rbp	      9699	screen.c	FUNCTION_83
0x1323f	          0x4889e5	                            mov rbp, rsp	      9699	screen.c	FUNCTION_83
0x13242	        0x4883ec08	                              sub rsp, 8	      9699	screen.c	FUNCTION_83
0x13246	        0x48897df8	                mov qword [rbp - 8], rdi	      9699	screen.c	FUNCTION_83
0x1324a	            0xeb2b	                           jmp 0x40132b7	      9700	screen.c	FUNCTION_83	WHILE_1
0x1324c	        0x488b45f8	                mov rax, qword [rbp - 8]	      9702	screen.c	FUNCTION_83	WHILE_1	CALL_1
0x13250	      0xbe28000000	                           mov esi, 0x28	      9702	screen.c	FUNCTION_83	WHILE_1	CALL_1
0x13255	          0x4889c7	                            mov rdi, rax	      9702	screen.c	FUNCTION_83	WHILE_1	CALL_1
0x13258	      0xe800000000	                          call 0x401329d	      9702	screen.c	FUNCTION_83	WHILE_1	CALL_1
0x1325d	        0x488b45f8	                mov rax, qword [rbp - 8]	      9703	screen.c	FUNCTION_83	WHILE_1
0x13261	    0xc78040010000	              mov dword [rax + 0x140], 1	      9703	screen.c	FUNCTION_83	WHILE_1
0x1326b	        0x488b45f8	                mov rax, qword [rbp - 8]	      9704	screen.c	FUNCTION_83	WHILE_1
0x1326f	        0x488b4020	            mov rax, qword [rax + 0x20] 	      9704	screen.c	FUNCTION_83	WHILE_1
0x13273	        0x488945f8	                mov qword [rbp - 8], rax	      9704	screen.c	FUNCTION_83	WHILE_1
0x13277	      0x48837df800	                  cmp qword [rbp - 8], 0	      9700	screen.c	FUNCTION_83	WHILE_1
0x1327c	            0x75ce	                           jne 0x401328c	      9700	screen.c	FUNCTION_83	WHILE_1
0x1327e	    0xc70500000000	               mov dword [0x040132c8], 1	      9706	screen.c	FUNCTION_83
0x13288	              0x90	                                     nop	      9707	screen.c	FUNCTION_83
0x13289	              0xc9	                                   leave	      9707	screen.c	FUNCTION_83
0x1328a	              0xc3	                                     ret	      9707	screen.c	FUNCTION_83
recording_mode	DO,0:functions,0:CALL,5:ELSE,0:IF,1:WHILE,0:FOR,0:SWITCH,0	36
0x144c6	              0x55	                                push rbp	     10453	screen.c	FUNCTION_90
0x144c7	          0x4889e5	                            mov rbp, rsp	     10453	screen.c	FUNCTION_90
0x144ca	        0x4883ec20	                           sub rsp, 0x20	     10453	screen.c	FUNCTION_90
0x144ce	          0x897dec	             mov dword [rbp - 0x14], edi	     10453	screen.c	FUNCTION_90
0x144d1	    0x64488b042528	                mov rax, qword fs:[0x28]	     10453	screen.c	FUNCTION_90
0x144da	        0x488945f8	                mov qword [rbp - 8], rax	     10453	screen.c	FUNCTION_90
0x144de	            0x31c0	                            xor eax, eax	     10453	screen.c	FUNCTION_90
0x144e0	      0xbf00000000	                              mov edi, 0	     10454	screen.c	FUNCTION_90	CALL_2
0x144e5	      0xe800000000	                          call 0x401452a	     10454	screen.c	FUNCTION_90	CALL_2
0x144ea	          0x4889c2	                            mov rdx, rax	     10454	screen.c	FUNCTION_90	CALL_2
0x144ed	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     10454	screen.c	FUNCTION_90	CALL_2
0x144f0	            0x89c6	                            mov esi, eax	     10454	screen.c	FUNCTION_90	CALL_2
0x144f2	          0x4889d7	                            mov rdi, rdx	     10454	screen.c	FUNCTION_90	CALL_2
0x144f5	      0xe800000000	                          call 0x401453a	     10454	screen.c	FUNCTION_90	CALL_2
0x144fa	      0xbf71000000	                           mov edi, 0x71	     10455	screen.c	FUNCTION_90	IF_1	CALL_3
0x144ff	      0xe800000000	                          call 0x4014544	     10455	screen.c	FUNCTION_90	IF_1	CALL_3
0x14504	            0x85c0	                           test eax, eax	     10455	screen.c	FUNCTION_90	IF_1	CALL_3
0x14506	            0x752d	                           jne 0x4014575	     10455	screen.c	FUNCTION_90	IF_1	CALL_3
0x14508	    0x8b1500000000	            mov edx, dword [0x0401454e] 	     10458	screen.c	FUNCTION_90	IF_1	CALL_4
0x1450e	        0x488d45f0	                   lea rax, [rbp - 0x10]	     10458	screen.c	FUNCTION_90	IF_1	CALL_4
0x14512	      0xbe00000000	                              mov esi, 0	     10458	screen.c	FUNCTION_90	IF_1	CALL_4
0x14517	          0x4889c7	                            mov rdi, rax	     10458	screen.c	FUNCTION_90	IF_1	CALL_4
0x1451a	      0xb800000000	                              mov eax, 0	     10458	screen.c	FUNCTION_90	IF_1	CALL_4
0x1451f	      0xe800000000	                          call 0x4014564	     10458	screen.c	FUNCTION_90	IF_1	CALL_4
0x14524	          0x8b55ec	             mov edx, dword [rbp - 0x14]	     10459	screen.c	FUNCTION_90	IF_1	CALL_5
0x14527	        0x488d45f0	                   lea rax, [rbp - 0x10]	     10459	screen.c	FUNCTION_90	IF_1	CALL_5
0x1452b	            0x89d6	                            mov esi, edx	     10459	screen.c	FUNCTION_90	IF_1	CALL_5
0x1452d	          0x4889c7	                            mov rdi, rax	     10459	screen.c	FUNCTION_90	IF_1	CALL_5
0x14530	      0xe800000000	                          call 0x4014575	     10459	screen.c	FUNCTION_90	IF_1	CALL_5
0x14535	              0x90	                                     nop	     10461	screen.c	FUNCTION_90
0x14536	        0x488b45f8	                mov rax, qword [rbp - 8]	     10461	screen.c	FUNCTION_90
0x1453a	    0x644833042528	                xor rax, qword fs:[0x28]	     10461	screen.c	FUNCTION_90
0x14543	            0x7405	                            je 0x401458a	     10461	screen.c	FUNCTION_90
0x14545	      0xe800000000	                          call 0x401458a	     10461	screen.c	FUNCTION_90
0x1454a	              0xc9	                                   leave	     10461	screen.c	FUNCTION_90
0x1454b	              0xc3	                                     ret	     10461	screen.c	FUNCTION_90
win_redr_custom	DO,0:functions,0:CALL,22:ELSE,8:IF,18:WHILE,4:FOR,2:SWITCH,0	483
0xe14b	              0x55	                                push rbp	      7099	screen.c	FUNCTION_46
0xe14c	          0x4889e5	                            mov rbp, rsp	      7099	screen.c	FUNCTION_46
0xe14f	    0x4881ec701a00	                         sub rsp, 0x1a70	      7099	screen.c	FUNCTION_46
0xe156	    0x4889bd98e5ff	           mov qword [rbp - 0x1a68], rdi	      7099	screen.c	FUNCTION_46
0xe15d	    0x89b594e5ffff	           mov dword [rbp - 0x1a6c], esi	      7099	screen.c	FUNCTION_46
0xe163	    0x64488b042528	                mov rax, qword fs:[0x28]	      7099	screen.c	FUNCTION_46
0xe16c	        0x488945f8	                mov qword [rbp - 8], rax	      7099	screen.c	FUNCTION_46
0xe170	            0x31c0	                            xor eax, eax	      7099	screen.c	FUNCTION_46
0xe172	    0xc785b8e5ffff	             mov dword [rbp - 0x1a48], 0	      7104	screen.c	FUNCTION_46
0xe17c	    0xc785d0e5ffff	             mov dword [rbp - 0x1a30], 0	      7115	screen.c	FUNCTION_46
0xe186	    0x8b0500000000	            mov eax, dword [0x0400e1cc] 	      7122	screen.c	FUNCTION_46	IF_1
0xe18c	            0x85c0	                           test eax, eax	      7122	screen.c	FUNCTION_46	IF_1
0xe18e	     0xf859d080000	                           jne 0x400ea71	      7122	screen.c	FUNCTION_46	IF_1
0xe194	    0xc70500000000	               mov dword [0x0400e1de], 1	      7124	screen.c	FUNCTION_46
0xe19e	    0x4883bd98e5ff	             cmp qword [rbp - 0x1a68], 0	      7127	screen.c	FUNCTION_46	IF_2
0xe1a6	            0x7555	                           jne 0x400e23d	      7127	screen.c	FUNCTION_46	IF_2
0xe1a8	    0x488b05000000	            mov rax, qword [0x0400e1ef] 	      7130	screen.c	FUNCTION_46	IF_2
0xe1af	    0x488985d8e5ff	           mov qword [rbp - 0x1a28], rax	      7130	screen.c	FUNCTION_46	IF_2
0xe1b6	    0xc785b4e5ffff	             mov dword [rbp - 0x1a4c], 0	      7131	screen.c	FUNCTION_46	IF_2
0xe1c0	    0xc785cce5ffff	         mov dword [rbp - 0x1a34], 0x20 	      7132	screen.c	FUNCTION_46	IF_2
0xe1ca	    0x8b0500000000	            mov eax, dword [0x0400e210] 	      7133	screen.c	FUNCTION_46	IF_2	CALL_1
0xe1d0	    0x8985ace5ffff	           mov dword [rbp - 0x1a54], eax	      7133	screen.c	FUNCTION_46	IF_2	CALL_1
0xe1d6	    0x488b05000000	            mov rax, qword [0x0400e21d] 	      7134	screen.c	FUNCTION_46	IF_2
0xe1dd	    0x8985bce5ffff	           mov dword [rbp - 0x1a44], eax	      7134	screen.c	FUNCTION_46	IF_2
0xe1e3	      0xbe00000000	                              mov esi, 0	      7136	screen.c	FUNCTION_46	IF_2	CALL_2
0xe1e8	      0xbf00000000	                              mov edi, 0	      7136	screen.c	FUNCTION_46	IF_2	CALL_2
0xe1ed	      0xe800000000	                          call 0x400e232	      7136	screen.c	FUNCTION_46	IF_2	CALL_2
0xe1f2	    0x8985d0e5ffff	           mov dword [rbp - 0x1a30], eax	      7136	screen.c	FUNCTION_46	IF_2	CALL_2
0xe1f8	      0xe955020000	                           jmp 0x400e492	      7136	screen.c	FUNCTION_46	IF_2	CALL_2
0xe1fd	    0x488b8598e5ff	           mov rax, qword [rbp - 0x1a68]	      7141	screen.c	FUNCTION_46	ELSE_1	CALL_3
0xe204	    0x8b909c000000	            mov edx, dword [rax + 0x9c] 	      7141	screen.c	FUNCTION_46	ELSE_1	CALL_3
0xe20a	    0x488b8598e5ff	           mov rax, qword [rbp - 0x1a68]	      7141	screen.c	FUNCTION_46	ELSE_1	CALL_3
0xe211	    0x8b80a8010000	           mov eax, dword [rax + 0x1a8] 	      7141	screen.c	FUNCTION_46	ELSE_1	CALL_3
0xe217	             0x1c2	                            add edx, eax	      7141	screen.c	FUNCTION_46	ELSE_1	CALL_3
0xe219	    0x488b8598e5ff	           mov rax, qword [rbp - 0x1a68]	      7141	screen.c	FUNCTION_46	ELSE_1	CALL_3
0xe220	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      7141	screen.c	FUNCTION_46	ELSE_1	CALL_3
0xe226	             0x1d0	                            add eax, edx	      7141	screen.c	FUNCTION_46	ELSE_1	CALL_3
0xe228	    0x8985b4e5ffff	           mov dword [rbp - 0x1a4c], eax	      7141	screen.c	FUNCTION_46	ELSE_1	CALL_3
0xe22e	    0x488b9598e5ff	           mov rdx, qword [rbp - 0x1a68]	      7142	screen.c	FUNCTION_46	ELSE_1	CALL_4
0xe235	    0x488d85ace5ff	                 lea rax, [rbp - 0x1a54]	      7142	screen.c	FUNCTION_46	ELSE_1	CALL_4
0xe23c	          0x4889d6	                            mov rsi, rdx	      7142	screen.c	FUNCTION_46	ELSE_1	CALL_4
0xe23f	          0x4889c7	                            mov rdi, rax	      7142	screen.c	FUNCTION_46	ELSE_1	CALL_4
0xe242	      0xe86a690000	                call sym.fillchar_status	      7142	screen.c	FUNCTION_46	ELSE_1	CALL_4
0xe247	    0x8985cce5ffff	           mov dword [rbp - 0x1a34], eax	      7142	screen.c	FUNCTION_46	ELSE_1	CALL_4
0xe24d	    0x488b8598e5ff	           mov rax, qword [rbp - 0x1a68]	      7143	screen.c	FUNCTION_46	ELSE_1
0xe254	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      7143	screen.c	FUNCTION_46	ELSE_1
0xe25a	    0x8985bce5ffff	           mov dword [rbp - 0x1a44], eax	      7143	screen.c	FUNCTION_46	ELSE_1
0xe260	    0x83bd94e5ffff	             cmp dword [rbp - 0x1a6c], 0	      7145	screen.c	FUNCTION_46	ELSE_1	IF_3
0xe267	     0xf8465010000	                            je 0x400e412	      7145	screen.c	FUNCTION_46	ELSE_1	IF_3
0xe26d	    0x488b05000000	            mov rax, qword [0x0400e2b4] 	      7147	screen.c	FUNCTION_46	ELSE_1	IF_3
0xe274	    0x488985d8e5ff	           mov qword [rbp - 0x1a28], rax	      7147	screen.c	FUNCTION_46	ELSE_1	IF_3
0xe27b	    0x488b85d8e5ff	           mov rax, qword [rbp - 0x1a28]	      7149	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_4
0xe282	           0xfb600	                   movzx eax, byte [rax]	      7149	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_4
0xe285	            0x3c25	                            cmp al, 0x25	      7149	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_4
0xe287	            0x7577	                           jne 0x400e340	      7149	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_4
0xe289	    0x488385d8e5ff	             add qword [rbp - 0x1a28], 1	      7151	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_4	IF_5
0xe291	    0x488b85d8e5ff	           mov rax, qword [rbp - 0x1a28]	      7151	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_4	IF_5
0xe298	           0xfb600	                   movzx eax, byte [rax]	      7151	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_4	IF_5
0xe29b	            0x3c2d	                            cmp al, 0x2d	      7151	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_4	IF_5
0xe29d	            0x7508	                           jne 0x400e2e7	      7151	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_4	IF_5
0xe29f	    0x488385d8e5ff	             add qword [rbp - 0x1a28], 1	      7152	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_4	IF_5
0xe2a7	    0x488b85d8e5ff	           mov rax, qword [rbp - 0x1a28]	      7153	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_4	IF_6	CALL_5
0xe2ae	          0x4889c7	                            mov rdi, rax	      7153	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_4	IF_6	CALL_5
0xe2b1	      0xe800000000	                          call 0x400e2f6	      7153	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_4	IF_6	CALL_5
0xe2b6	            0x85c0	                           test eax, eax	      7153	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_4	IF_6	CALL_5
0xe2b8	            0x741f	                            je 0x400e319	      7153	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_4	IF_6	CALL_5
0xe2ba	            0xeb08	                           jmp 0x400e304	      7154	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_4	IF_6	WHILE_1	CALL_6
0xe2bc	    0x488385d8e5ff	             add qword [rbp - 0x1a28], 1	      7155	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_4	IF_6	WHILE_1
0xe2c4	    0x488b85d8e5ff	           mov rax, qword [rbp - 0x1a28]	      7154	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_4	IF_6	WHILE_1	CALL_6
0xe2cb	           0xfb600	                   movzx eax, byte [rax]	      7154	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_4	IF_6	WHILE_1	CALL_6
0xe2ce	           0xfb6c0	                           movzx eax, al	      7154	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_4	IF_6	WHILE_1	CALL_6
0xe2d1	          0x83e830	                           sub eax, 0x30	      7154	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_4	IF_6	WHILE_1	CALL_6
0xe2d4	          0x83f809	                              cmp eax, 9	      7154	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_4	IF_6	WHILE_1	CALL_6
0xe2d7	            0x76e3	                           jbe 0x400e2fc	      7154	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_4	IF_6	WHILE_1	CALL_6
0xe2d9	    0x488b85d8e5ff	           mov rax, qword [rbp - 0x1a28]	      7156	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_4	IF_7
0xe2e0	        0x488d5001	                      lea rdx, [rax + 1]	      7156	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_4	IF_7
0xe2e4	    0x488995d8e5ff	           mov qword [rbp - 0x1a28], rdx	      7156	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_4	IF_7
0xe2eb	           0xfb600	                   movzx eax, byte [rax]	      7156	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_4	IF_7
0xe2ee	            0x3c28	                            cmp al, 0x28	      7156	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_4	IF_7
0xe2f0	            0x740e	                            je 0x400e340	      7156	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_4	IF_7
0xe2f2	    0x488b05000000	            mov rax, qword [0x0400e339] 	      7157	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_4	IF_7
0xe2f9	    0x488985d8e5ff	           mov qword [rbp - 0x1a28], rax	      7157	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_4	IF_7
0xe300	    0x488b8598e5ff	           mov rax, qword [rbp - 0x1a68]	      7159	screen.c	FUNCTION_46	ELSE_1	IF_3
0xe307	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      7159	screen.c	FUNCTION_46	ELSE_1	IF_3
0xe30d	            0x89c2	                            mov edx, eax	      7159	screen.c	FUNCTION_46	ELSE_1	IF_3
0xe30f	    0x488b05000000	            mov rax, qword [0x0400e356] 	      7159	screen.c	FUNCTION_46	ELSE_1	IF_3
0xe316	            0x29c2	                            sub edx, eax	      7159	screen.c	FUNCTION_46	ELSE_1	IF_3
0xe318	    0x8b0500000000	            mov eax, dword [0x0400e35e] 	      7159	screen.c	FUNCTION_46	ELSE_1	IF_3
0xe31e	             0x1d0	                            add eax, edx	      7159	screen.c	FUNCTION_46	ELSE_1	IF_3
0xe320	    0x8985b8e5ffff	           mov dword [rbp - 0x1a48], eax	      7159	screen.c	FUNCTION_46	ELSE_1	IF_3
0xe326	    0x488b8598e5ff	           mov rax, qword [rbp - 0x1a68]	      7160	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_8
0xe32d	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      7160	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_8
0xe333	          0x83c001	                              add eax, 1	      7160	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_8
0xe336	            0x89c2	                            mov edx, eax	      7160	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_8
0xe338	          0xc1ea1f	                           shr edx, 0x1f	      7160	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_8
0xe33b	             0x1d0	                            add eax, edx	      7160	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_8
0xe33d	            0xd1f8	                              sar eax, 1	      7160	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_8
0xe33f	    0x3b85b8e5ffff	           cmp eax, dword [rbp - 0x1a48]	      7160	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_8
0xe345	            0x7e1f	                           jle 0x400e3a6	      7160	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_8
0xe347	    0x488b8598e5ff	           mov rax, qword [rbp - 0x1a68]	      7161	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_8
0xe34e	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      7161	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_8
0xe354	          0x83c001	                              add eax, 1	      7161	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_8
0xe357	            0x89c2	                            mov edx, eax	      7161	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_8
0xe359	          0xc1ea1f	                           shr edx, 0x1f	      7161	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_8
0xe35c	             0x1d0	                            add eax, edx	      7161	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_8
0xe35e	            0xd1f8	                              sar eax, 1	      7161	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_8
0xe360	    0x8985b8e5ffff	           mov dword [rbp - 0x1a48], eax	      7161	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_8
0xe366	    0x488b8598e5ff	           mov rax, qword [rbp - 0x1a68]	      7162	screen.c	FUNCTION_46	ELSE_1	IF_3
0xe36d	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      7162	screen.c	FUNCTION_46	ELSE_1	IF_3
0xe373	    0x2b85b8e5ffff	           sub eax, dword [rbp - 0x1a48]	      7162	screen.c	FUNCTION_46	ELSE_1	IF_3
0xe379	    0x8985bce5ffff	           mov dword [rbp - 0x1a44], eax	      7162	screen.c	FUNCTION_46	ELSE_1	IF_3
0xe37f	    0x488b8598e5ff	           mov rax, qword [rbp - 0x1a68]	      7163	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_9
0xe386	    0x8b80a4000000	            mov eax, dword [rax + 0xa4] 	      7163	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_9
0xe38c	            0x85c0	                           test eax, eax	      7163	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_9
0xe38e	            0x752b	                           jne 0x400e3fb	      7163	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_9
0xe390	    0x488b05000000	            mov rax, qword [0x0400e3d7] 	      7165	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_9
0xe397	          0x83e801	                              sub eax, 1	      7165	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_9
0xe39a	    0x8985b4e5ffff	           mov dword [rbp - 0x1a4c], eax	      7165	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_9
0xe3a0	    0x83adbce5ffff	             sub dword [rbp - 0x1a44], 1	      7166	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_9
0xe3a7	    0xc785cce5ffff	         mov dword [rbp - 0x1a34], 0x20 	      7167	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_9
0xe3b1	    0xc785ace5ffff	             mov dword [rbp - 0x1a54], 0	      7168	screen.c	FUNCTION_46	ELSE_1	IF_3	IF_9
0xe3bb	      0xbe00000000	                              mov esi, 0	      7172	screen.c	FUNCTION_46	ELSE_1	IF_3	CALL_7
0xe3c0	      0xbf00000000	                              mov edi, 0	      7172	screen.c	FUNCTION_46	ELSE_1	IF_3	CALL_7
0xe3c5	      0xe800000000	                          call 0x400e40a	      7172	screen.c	FUNCTION_46	ELSE_1	IF_3	CALL_7
0xe3ca	    0x8985d0e5ffff	           mov dword [rbp - 0x1a30], eax	      7172	screen.c	FUNCTION_46	ELSE_1	IF_3	CALL_7
0xe3d0	            0xeb6d	                           jmp 0x400e47f	      7172	screen.c	FUNCTION_46	ELSE_1	IF_3	CALL_7
0xe3d2	    0x488b8598e5ff	           mov rax, qword [rbp - 0x1a68]	      7177	screen.c	FUNCTION_46	ELSE_1	ELSE_2	IF_10
0xe3d9	    0x488b80800200	           mov rax, qword [rax + 0x280] 	      7177	screen.c	FUNCTION_46	ELSE_1	ELSE_2	IF_10
0xe3e0	           0xfb600	                   movzx eax, byte [rax]	      7177	screen.c	FUNCTION_46	ELSE_1	ELSE_2	IF_10
0xe3e3	            0x84c0	                             test al, al	      7177	screen.c	FUNCTION_46	ELSE_1	ELSE_2	IF_10
0xe3e5	            0x7417	                            je 0x400e43e	      7177	screen.c	FUNCTION_46	ELSE_1	ELSE_2	IF_10
0xe3e7	    0x488b8598e5ff	           mov rax, qword [rbp - 0x1a68]	      7178	screen.c	FUNCTION_46	ELSE_1	ELSE_2	IF_10
0xe3ee	    0x488b80800200	           mov rax, qword [rax + 0x280] 	      7178	screen.c	FUNCTION_46	ELSE_1	ELSE_2	IF_10
0xe3f5	    0x488985d8e5ff	           mov qword [rbp - 0x1a28], rax	      7178	screen.c	FUNCTION_46	ELSE_1	ELSE_2	IF_10
0xe3fc	            0xeb0e	                           jmp 0x400e44c	      7178	screen.c	FUNCTION_46	ELSE_1	ELSE_2	IF_10
0xe3fe	    0x488b05000000	            mov rax, qword [0x0400e445] 	      7180	screen.c	FUNCTION_46	ELSE_1	ELSE_2	ELSE_3
0xe405	    0x488985d8e5ff	           mov qword [rbp - 0x1a28], rax	      7180	screen.c	FUNCTION_46	ELSE_1	ELSE_2	ELSE_3
0xe40c	    0x488b8598e5ff	           mov rax, qword [rbp - 0x1a68]	      7183	screen.c	FUNCTION_46	ELSE_1	ELSE_2
0xe413	    0x488b80800200	           mov rax, qword [rax + 0x280] 	      7183	screen.c	FUNCTION_46	ELSE_1	ELSE_2
0xe41a	           0xfb600	                   movzx eax, byte [rax]	      7183	screen.c	FUNCTION_46	ELSE_1	ELSE_2
0xe41d	            0x84c0	                             test al, al	      7182	screen.c	FUNCTION_46	ELSE_1	ELSE_2	CALL_8
0xe41f	            0x7507	                           jne 0x400e468	      7182	screen.c	FUNCTION_46	ELSE_1	ELSE_2	CALL_8
0xe421	      0xb800000000	                              mov eax, 0	      7182	screen.c	FUNCTION_46	ELSE_1	ELSE_2	CALL_8
0xe426	            0xeb05	                           jmp 0x400e46d	      7182	screen.c	FUNCTION_46	ELSE_1	ELSE_2	CALL_8
0xe428	      0xb804000000	                              mov eax, 4	      7182	screen.c	FUNCTION_46	ELSE_1	ELSE_2	CALL_8
0xe42d	            0x89c6	                            mov esi, eax	      7182	screen.c	FUNCTION_46	ELSE_1	ELSE_2	CALL_8
0xe42f	      0xbf00000000	                              mov edi, 0	      7182	screen.c	FUNCTION_46	ELSE_1	ELSE_2	CALL_8
0xe434	      0xe800000000	                          call 0x400e479	      7182	screen.c	FUNCTION_46	ELSE_1	ELSE_2	CALL_8
0xe439	    0x8985d0e5ffff	           mov dword [rbp - 0x1a30], eax	      7182	screen.c	FUNCTION_46	ELSE_1	ELSE_2	CALL_8
0xe43f	    0x488b8598e5ff	           mov rax, qword [rbp - 0x1a68]	      7187	screen.c	FUNCTION_46	ELSE_1
0xe446	    0x8b80a8000000	            mov eax, dword [rax + 0xa8] 	      7187	screen.c	FUNCTION_46	ELSE_1
0xe44c	     0x185b8e5ffff	           add dword [rbp - 0x1a48], eax	      7187	screen.c	FUNCTION_46	ELSE_1
0xe452	    0x83bdbce5ffff	             cmp dword [rbp - 0x1a44], 0	      7190	screen.c	FUNCTION_46	IF_11
0xe459	     0xf8ec5050000	                           jle 0x400ea64	      7190	screen.c	FUNCTION_46	IF_11
0xe45f	    0x4883bd98e5ff	             cmp qword [rbp - 0x1a68], 0	      7195	screen.c	FUNCTION_46
0xe467	            0x7509	                           jne 0x400e4b2	      7195	screen.c	FUNCTION_46
0xe469	    0x488b05000000	            mov rax, qword [0x0400e4b0] 	      7195	screen.c	FUNCTION_46
0xe470	            0xeb07	                           jmp 0x400e4b9	      7195	screen.c	FUNCTION_46
0xe472	    0x488b8598e5ff	           mov rax, qword [rbp - 0x1a68]	      7195	screen.c	FUNCTION_46
0xe479	    0x488985e8e5ff	           mov qword [rbp - 0x1a18], rax	      7195	screen.c	FUNCTION_46
0xe480	    0x488b85e8e5ff	           mov rax, qword [rbp - 0x1a18]	      7196	screen.c	FUNCTION_46
0xe487	    0x8b80b0020000	           mov eax, dword [rax + 0x2b0] 	      7196	screen.c	FUNCTION_46
0xe48d	    0x8985d4e5ffff	           mov dword [rbp - 0x1a2c], eax	      7196	screen.c	FUNCTION_46
0xe493	    0x488b85e8e5ff	           mov rax, qword [rbp - 0x1a18]	      7197	screen.c	FUNCTION_46
0xe49a	    0xc780b0020000	              mov dword [rax + 0x2b0], 0	      7197	screen.c	FUNCTION_46
0xe4a4	    0x488b85d8e5ff	           mov rax, qword [rbp - 0x1a28]	      7201	screen.c	FUNCTION_46	CALL_9
0xe4ab	          0x4889c7	                            mov rdi, rax	      7201	screen.c	FUNCTION_46	CALL_9
0xe4ae	      0xe800000000	                          call 0x400e4f3	      7201	screen.c	FUNCTION_46	CALL_9
0xe4b3	    0x488985d8e5ff	           mov qword [rbp - 0x1a28], rax	      7201	screen.c	FUNCTION_46	CALL_9
0xe4ba	    0x448b85cce5ff	           mov r8d, dword [rbp - 0x1a34]	      7202	screen.c	FUNCTION_46	CALL_10
0xe4c1	    0x8bbdd0e5ffff	           mov edi, dword [rbp - 0x1a30]	      7202	screen.c	FUNCTION_46	CALL_10
0xe4c7	    0x488b95d8e5ff	           mov rdx, qword [rbp - 0x1a28]	      7202	screen.c	FUNCTION_46	CALL_10
0xe4ce	    0x488db5f0efff	                 lea rsi, [rbp - 0x1010]	      7202	screen.c	FUNCTION_46	CALL_10
0xe4d5	    0x488b85e8e5ff	           mov rax, qword [rbp - 0x1a18]	      7202	screen.c	FUNCTION_46	CALL_10
0xe4dc	        0x4883ec08	                              sub rsp, 8	      7202	screen.c	FUNCTION_46	CALL_10
0xe4e0	    0x488d8df0eaff	                 lea rcx, [rbp - 0x1510]	      7202	screen.c	FUNCTION_46	CALL_10
0xe4e7	              0x51	                                push rcx	      7202	screen.c	FUNCTION_46	CALL_10
0xe4e8	    0x488d8df0e5ff	                 lea rcx, [rbp - 0x1a10]	      7202	screen.c	FUNCTION_46	CALL_10
0xe4ef	              0x51	                                push rcx	      7202	screen.c	FUNCTION_46	CALL_10
0xe4f0	    0x8b8dbce5ffff	           mov ecx, dword [rbp - 0x1a44]	      7202	screen.c	FUNCTION_46	CALL_10
0xe4f6	              0x51	                                push rcx	      7202	screen.c	FUNCTION_46	CALL_10
0xe4f7	          0x4589c1	                            mov r9d, r8d	      7202	screen.c	FUNCTION_46	CALL_10
0xe4fa	          0x4189f8	                            mov r8d, edi	      7202	screen.c	FUNCTION_46	CALL_10
0xe4fd	          0x4889d1	                            mov rcx, rdx	      7202	screen.c	FUNCTION_46	CALL_10
0xe500	      0xba00100000	                         mov edx, 0x1000	      7202	screen.c	FUNCTION_46	CALL_10
0xe505	          0x4889c7	                            mov rdi, rax	      7202	screen.c	FUNCTION_46	CALL_10
0xe508	      0xe800000000	                          call 0x400e54d	      7202	screen.c	FUNCTION_46	CALL_10
0xe50d	        0x4883c420	                           add rsp, 0x20	      7202	screen.c	FUNCTION_46	CALL_10
0xe511	    0x8985c0e5ffff	           mov dword [rbp - 0x1a40], eax	      7202	screen.c	FUNCTION_46	CALL_10
0xe517	    0x488b85d8e5ff	           mov rax, qword [rbp - 0x1a28]	      7205	screen.c	FUNCTION_46	CALL_11
0xe51e	          0x4889c7	                            mov rdi, rax	      7205	screen.c	FUNCTION_46	CALL_11
0xe521	      0xe800000000	                          call 0x400e566	      7205	screen.c	FUNCTION_46	CALL_11
0xe526	    0x488b85e8e5ff	           mov rax, qword [rbp - 0x1a18]	      7206	screen.c	FUNCTION_46
0xe52d	    0x8b95d4e5ffff	           mov edx, dword [rbp - 0x1a2c]	      7206	screen.c	FUNCTION_46
0xe533	    0x8990b0020000	            mov dword [rax + 0x2b0], edx	      7206	screen.c	FUNCTION_46
0xe539	    0x488d85f0efff	                 lea rax, [rbp - 0x1010]	      7209	screen.c	FUNCTION_46	CALL_12
0xe540	          0x4889c7	                            mov rdi, rax	      7209	screen.c	FUNCTION_46	CALL_12
0xe543	      0xe800000000	                          call 0x400e588	      7209	screen.c	FUNCTION_46	CALL_12
0xe548	    0x488985e0e5ff	           mov qword [rbp - 0x1a20], rax	      7209	screen.c	FUNCTION_46	CALL_12
0xe54f	    0x4883bde0e5ff	             cmp qword [rbp - 0x1a20], 0	      7210	screen.c	FUNCTION_46	IF_12
0xe557	            0x742d	                            je 0x400e5c6	      7210	screen.c	FUNCTION_46	IF_12
0xe559	    0x488b8de0e5ff	           mov rcx, qword [rbp - 0x1a20]	      7212	screen.c	FUNCTION_46	IF_12	CALL_13
0xe560	    0x488d85f0efff	                 lea rax, [rbp - 0x1010]	      7212	screen.c	FUNCTION_46	IF_12	CALL_13
0xe567	      0xbaff0f0000	                          mov edx, 0xfff	      7212	screen.c	FUNCTION_46	IF_12	CALL_13
0xe56c	          0x4889ce	                            mov rsi, rcx	      7212	screen.c	FUNCTION_46	IF_12	CALL_13
0xe56f	          0x4889c7	                            mov rdi, rax	      7212	screen.c	FUNCTION_46	IF_12	CALL_13
0xe572	      0xe800000000	                          call 0x400e5b7	      7212	screen.c	FUNCTION_46	IF_12	CALL_13
0xe577	    0x488b85e0e5ff	           mov rax, qword [rbp - 0x1a20]	      7213	screen.c	FUNCTION_46	IF_12	CALL_14
0xe57e	          0x4889c7	                            mov rdi, rax	      7213	screen.c	FUNCTION_46	IF_12	CALL_14
0xe581	      0xe800000000	                          call 0x400e5c6	      7213	screen.c	FUNCTION_46	IF_12	CALL_14
0xe586	    0x488d85f0efff	                 lea rax, [rbp - 0x1010]	      7217	screen.c	FUNCTION_46	CALL_15
0xe58d	          0x4889c7	                            mov rdi, rax	      7217	screen.c	FUNCTION_46	CALL_15
0xe590	      0xe800000000	                          call 0x400e5d5	      7217	screen.c	FUNCTION_46	CALL_15
0xe595	    0x8985c8e5ffff	           mov dword [rbp - 0x1a38], eax	      7217	screen.c	FUNCTION_46	CALL_15
0xe59b	            0xeb34	                           jmp 0x400e611	      7218	screen.c	FUNCTION_46	WHILE_2
0xe59d	    0x488b05000000	            mov rax, qword [0x0400e5e4] 	      7221	screen.c	FUNCTION_46	WHILE_2
0xe5a4	    0x8b95c8e5ffff	           mov edx, dword [rbp - 0x1a38]	      7221	screen.c	FUNCTION_46	WHILE_2
0xe5aa	          0x4863d2	                         movsxd rdx, edx	      7221	screen.c	FUNCTION_46	WHILE_2
0xe5ad	    0x488d8df0efff	                 lea rcx, [rbp - 0x1010]	      7221	screen.c	FUNCTION_46	WHILE_2
0xe5b4	          0x4801d1	                            add rcx, rdx	      7221	screen.c	FUNCTION_46	WHILE_2
0xe5b7	    0x8b95cce5ffff	           mov edx, dword [rbp - 0x1a34]	      7221	screen.c	FUNCTION_46	WHILE_2
0xe5bd	          0x4889ce	                            mov rsi, rcx	      7221	screen.c	FUNCTION_46	WHILE_2
0xe5c0	            0x89d7	                            mov edi, edx	      7221	screen.c	FUNCTION_46	WHILE_2
0xe5c2	            0xffd0	                                call rax	      7221	screen.c	FUNCTION_46	WHILE_2
0xe5c4	     0x185c8e5ffff	           add dword [rbp - 0x1a38], eax	      7221	screen.c	FUNCTION_46	WHILE_2
0xe5ca	    0x8385c0e5ffff	             add dword [rbp - 0x1a40], 1	      7225	screen.c	FUNCTION_46	WHILE_2
0xe5d1	    0x8b85c0e5ffff	           mov eax, dword [rbp - 0x1a40]	      7218	screen.c	FUNCTION_46	WHILE_2
0xe5d7	    0x3b85bce5ffff	           cmp eax, dword [rbp - 0x1a44]	      7218	screen.c	FUNCTION_46	WHILE_2
0xe5dd	            0x7d0c	                           jge 0x400e62b	      7218	screen.c	FUNCTION_46	WHILE_2
0xe5df	    0x81bdc8e5ffff	        cmp dword [rbp - 0x1a38], 0xffe 	      7218	screen.c	FUNCTION_46	WHILE_2
0xe5e9	            0x7eb2	                           jle 0x400e5dd	      7218	screen.c	FUNCTION_46	WHILE_2
0xe5eb	    0x8b85c8e5ffff	           mov eax, dword [rbp - 0x1a38]	      7227	screen.c	FUNCTION_46
0xe5f1	            0x4898	                                    cdqe	      7227	screen.c	FUNCTION_46
0xe5f3	    0xc68405f0efff	        mov byte [rbp + rax - 0x1010], 0	      7227	screen.c	FUNCTION_46
0xe5fb	    0x8b85ace5ffff	           mov eax, dword [rbp - 0x1a54]	      7232	screen.c	FUNCTION_46
0xe601	    0x8985b0e5ffff	           mov dword [rbp - 0x1a50], eax	      7232	screen.c	FUNCTION_46
0xe607	    0x488d85f0efff	                 lea rax, [rbp - 0x1010]	      7233	screen.c	FUNCTION_46
0xe60e	    0x488985e0e5ff	           mov qword [rbp - 0x1a20], rax	      7233	screen.c	FUNCTION_46
0xe615	    0xc785c4e5ffff	             mov dword [rbp - 0x1a3c], 0	      7234	screen.c	FUNCTION_46	FOR_1
0xe61f	      0xe959020000	                           jmp 0x400e8bd	      7234	screen.c	FUNCTION_46	FOR_1
0xe624	    0x8b85c4e5ffff	           mov eax, dword [rbp - 0x1a3c]	      7236	screen.c	FUNCTION_46	FOR_1
0xe62a	            0x4898	                                    cdqe	      7236	screen.c	FUNCTION_46	FOR_1
0xe62c	        0x48c1e004	                              shl rax, 4	      7236	screen.c	FUNCTION_46	FOR_1
0xe630	          0x4801e8	                            add rax, rbp	      7236	screen.c	FUNCTION_46	FOR_1
0xe633	    0x482d101a0000	                         sub rax, 0x1a10	      7236	screen.c	FUNCTION_46	FOR_1
0xe639	          0x488b00	                    mov rax, qword [rax]	      7236	screen.c	FUNCTION_46	FOR_1
0xe63c	          0x4889c2	                            mov rdx, rax	      7236	screen.c	FUNCTION_46	FOR_1
0xe63f	    0x488b85e0e5ff	           mov rax, qword [rbp - 0x1a20]	      7236	screen.c	FUNCTION_46	FOR_1
0xe646	          0x4829c2	                            sub rdx, rax	      7236	screen.c	FUNCTION_46	FOR_1
0xe649	          0x4889d0	                            mov rax, rdx	      7236	screen.c	FUNCTION_46	FOR_1
0xe64c	    0x8985c8e5ffff	           mov dword [rbp - 0x1a38], eax	      7236	screen.c	FUNCTION_46	FOR_1
0xe652	    0x8bbdb0e5ffff	           mov edi, dword [rbp - 0x1a50]	      7237	screen.c	FUNCTION_46	FOR_1	CALL_16
0xe658	    0x8b8db8e5ffff	           mov ecx, dword [rbp - 0x1a48]	      7237	screen.c	FUNCTION_46	FOR_1	CALL_16
0xe65e	    0x8b95b4e5ffff	           mov edx, dword [rbp - 0x1a4c]	      7237	screen.c	FUNCTION_46	FOR_1	CALL_16
0xe664	    0x8bb5c8e5ffff	           mov esi, dword [rbp - 0x1a38]	      7237	screen.c	FUNCTION_46	FOR_1	CALL_16
0xe66a	    0x488b85e0e5ff	           mov rax, qword [rbp - 0x1a20]	      7237	screen.c	FUNCTION_46	FOR_1	CALL_16
0xe671	          0x4189f8	                            mov r8d, edi	      7237	screen.c	FUNCTION_46	FOR_1	CALL_16
0xe674	          0x4889c7	                            mov rdi, rax	      7237	screen.c	FUNCTION_46	FOR_1	CALL_16
0xe677	      0xe800000000	                          call 0x400e6bc	      7237	screen.c	FUNCTION_46	FOR_1	CALL_16
0xe67c	    0x8b95c8e5ffff	           mov edx, dword [rbp - 0x1a38]	      7238	screen.c	FUNCTION_46	FOR_1	CALL_17
0xe682	    0x488b85e0e5ff	           mov rax, qword [rbp - 0x1a20]	      7238	screen.c	FUNCTION_46	FOR_1	CALL_17
0xe689	            0x89d6	                            mov esi, edx	      7238	screen.c	FUNCTION_46	FOR_1	CALL_17
0xe68b	          0x4889c7	                            mov rdi, rax	      7238	screen.c	FUNCTION_46	FOR_1	CALL_17
0xe68e	      0xe800000000	                          call 0x400e6d3	      7238	screen.c	FUNCTION_46	FOR_1	CALL_17
0xe693	     0x185b8e5ffff	           add dword [rbp - 0x1a48], eax	      7238	screen.c	FUNCTION_46	FOR_1	CALL_17
0xe699	    0x8b85c4e5ffff	           mov eax, dword [rbp - 0x1a3c]	      7239	screen.c	FUNCTION_46	FOR_1
0xe69f	            0x4898	                                    cdqe	      7239	screen.c	FUNCTION_46	FOR_1
0xe6a1	        0x48c1e004	                              shl rax, 4	      7239	screen.c	FUNCTION_46	FOR_1
0xe6a5	          0x4801e8	                            add rax, rbp	      7239	screen.c	FUNCTION_46	FOR_1
0xe6a8	    0x482d101a0000	                         sub rax, 0x1a10	      7239	screen.c	FUNCTION_46	FOR_1
0xe6ae	          0x488b00	                    mov rax, qword [rax]	      7239	screen.c	FUNCTION_46	FOR_1
0xe6b1	    0x488985e0e5ff	           mov qword [rbp - 0x1a20], rax	      7239	screen.c	FUNCTION_46	FOR_1
0xe6b8	    0x8b85c4e5ffff	           mov eax, dword [rbp - 0x1a3c]	      7241	screen.c	FUNCTION_46	FOR_1	IF_13
0xe6be	            0x4898	                                    cdqe	      7241	screen.c	FUNCTION_46	FOR_1	IF_13
0xe6c0	        0x48c1e004	                              shl rax, 4	      7241	screen.c	FUNCTION_46	FOR_1	IF_13
0xe6c4	          0x4801e8	                            add rax, rbp	      7241	screen.c	FUNCTION_46	FOR_1	IF_13
0xe6c7	    0x482d081a0000	                         sub rax, 0x1a08	      7241	screen.c	FUNCTION_46	FOR_1	IF_13
0xe6cd	            0x8b00	                    mov eax, dword [rax]	      7241	screen.c	FUNCTION_46	FOR_1	IF_13
0xe6cf	            0x85c0	                           test eax, eax	      7241	screen.c	FUNCTION_46	FOR_1	IF_13
0xe6d1	            0x7511	                           jne 0x400e724	      7241	screen.c	FUNCTION_46	FOR_1	IF_13
0xe6d3	    0x8b85ace5ffff	           mov eax, dword [rbp - 0x1a54]	      7242	screen.c	FUNCTION_46	FOR_1	IF_13
0xe6d9	    0x8985b0e5ffff	           mov dword [rbp - 0x1a50], eax	      7242	screen.c	FUNCTION_46	FOR_1	IF_13
0xe6df	      0xe992010000	                           jmp 0x400e8b6	      7242	screen.c	FUNCTION_46	FOR_1	IF_13
0xe6e4	    0x8b85c4e5ffff	           mov eax, dword [rbp - 0x1a3c]	      7243	screen.c	FUNCTION_46	FOR_1	ELSE_4	IF_14
0xe6ea	            0x4898	                                    cdqe	      7243	screen.c	FUNCTION_46	FOR_1	ELSE_4	IF_14
0xe6ec	        0x48c1e004	                              shl rax, 4	      7243	screen.c	FUNCTION_46	FOR_1	ELSE_4	IF_14
0xe6f0	          0x4801e8	                            add rax, rbp	      7243	screen.c	FUNCTION_46	FOR_1	ELSE_4	IF_14
0xe6f3	    0x482d081a0000	                         sub rax, 0x1a08	      7243	screen.c	FUNCTION_46	FOR_1	ELSE_4	IF_14
0xe6f9	            0x8b00	                    mov eax, dword [rax]	      7243	screen.c	FUNCTION_46	FOR_1	ELSE_4	IF_14
0xe6fb	            0x85c0	                           test eax, eax	      7243	screen.c	FUNCTION_46	FOR_1	ELSE_4	IF_14
0xe6fd	            0x792b	                           jns 0x400e76a	      7243	screen.c	FUNCTION_46	FOR_1	ELSE_4	IF_14
0xe6ff	    0x8b85c4e5ffff	           mov eax, dword [rbp - 0x1a3c]	      7244	screen.c	FUNCTION_46	FOR_1	ELSE_4	IF_14
0xe705	            0x4898	                                    cdqe	      7244	screen.c	FUNCTION_46	FOR_1	ELSE_4	IF_14
0xe707	        0x48c1e004	                              shl rax, 4	      7244	screen.c	FUNCTION_46	FOR_1	ELSE_4	IF_14
0xe70b	          0x4801e8	                            add rax, rbp	      7244	screen.c	FUNCTION_46	FOR_1	ELSE_4	IF_14
0xe70e	    0x482d081a0000	                         sub rax, 0x1a08	      7244	screen.c	FUNCTION_46	FOR_1	ELSE_4	IF_14
0xe714	            0x8b00	                    mov eax, dword [rax]	      7244	screen.c	FUNCTION_46	FOR_1	ELSE_4	IF_14
0xe716	            0xf7d8	                                 neg eax	      7244	screen.c	FUNCTION_46	FOR_1	ELSE_4	IF_14
0xe718	            0x89c7	                            mov edi, eax	      7244	screen.c	FUNCTION_46	FOR_1	ELSE_4	IF_14
0xe71a	      0xe800000000	                          call 0x400e75f	      7244	screen.c	FUNCTION_46	FOR_1	ELSE_4	IF_14
0xe71f	    0x8985b0e5ffff	           mov dword [rbp - 0x1a50], eax	      7244	screen.c	FUNCTION_46	FOR_1	ELSE_4	IF_14
0xe725	      0xe94c010000	                           jmp 0x400e8b6	      7244	screen.c	FUNCTION_46	FOR_1	ELSE_4	IF_14
0xe72a	    0x4883bd98e5ff	             cmp qword [rbp - 0x1a68], 0	      7246	screen.c	FUNCTION_46	FOR_1	ELSE_5	IF_15	CALL_19
0xe732	            0x7466	                            je 0x400e7da	      7246	screen.c	FUNCTION_46	FOR_1	ELSE_5	IF_15	CALL_19
0xe734	    0x488b05000000	            mov rax, qword [0x0400e77b] 	      7246	screen.c	FUNCTION_46	FOR_1	ELSE_5	IF_15	CALL_19
0xe73b	    0x48398598e5ff	          cmp qword [rbp - 0x1a68], rax 	      7246	screen.c	FUNCTION_46	FOR_1	ELSE_5	IF_15	CALL_19
0xe742	            0x7456	                            je 0x400e7da	      7246	screen.c	FUNCTION_46	FOR_1	ELSE_5	IF_15	CALL_19
0xe744	    0x488b8598e5ff	           mov rax, qword [rbp - 0x1a68]	      7246	screen.c	FUNCTION_46	FOR_1	ELSE_5	IF_15	CALL_19
0xe74b	        0x488b4008	                mov rax, qword [rax + 8]	      7246	screen.c	FUNCTION_46	FOR_1	ELSE_5	IF_15	CALL_19
0xe74f	          0x4889c7	                            mov rdi, rax	      7246	screen.c	FUNCTION_46	FOR_1	ELSE_5	IF_15	CALL_19
0xe752	      0xe800000000	                          call 0x400e797	      7246	screen.c	FUNCTION_46	FOR_1	ELSE_5	IF_15	CALL_19
0xe757	            0x85c0	                           test eax, eax	      7246	screen.c	FUNCTION_46	FOR_1	ELSE_5	IF_15	CALL_19
0xe759	            0x743f	                            je 0x400e7da	      7246	screen.c	FUNCTION_46	FOR_1	ELSE_5	IF_15	CALL_19
0xe75b	    0x488b8598e5ff	           mov rax, qword [rbp - 0x1a68]	      7247	screen.c	FUNCTION_46	FOR_1	ELSE_5	IF_15
0xe762	    0x8b80a4000000	            mov eax, dword [rax + 0xa4] 	      7247	screen.c	FUNCTION_46	FOR_1	ELSE_5	IF_15
0xe768	            0x85c0	                           test eax, eax	      7247	screen.c	FUNCTION_46	FOR_1	ELSE_5	IF_15
0xe76a	            0x742e	                            je 0x400e7da	      7247	screen.c	FUNCTION_46	FOR_1	ELSE_5	IF_15
0xe76c	    0x8b85c4e5ffff	           mov eax, dword [rbp - 0x1a3c]	      7248	screen.c	FUNCTION_46	FOR_1	ELSE_5	IF_15
0xe772	            0x4898	                                    cdqe	      7248	screen.c	FUNCTION_46	FOR_1	ELSE_5	IF_15
0xe774	        0x48c1e004	                              shl rax, 4	      7248	screen.c	FUNCTION_46	FOR_1	ELSE_5	IF_15
0xe778	          0x4801e8	                            add rax, rbp	      7248	screen.c	FUNCTION_46	FOR_1	ELSE_5	IF_15
0xe77b	    0x482d081a0000	                         sub rax, 0x1a08	      7248	screen.c	FUNCTION_46	FOR_1	ELSE_5	IF_15
0xe781	            0x8b00	                    mov eax, dword [rax]	      7248	screen.c	FUNCTION_46	FOR_1	ELSE_5	IF_15
0xe783	          0x83e801	                              sub eax, 1	      7248	screen.c	FUNCTION_46	FOR_1	ELSE_5	IF_15
0xe786	            0x4898	                                    cdqe	      7248	screen.c	FUNCTION_46	FOR_1	ELSE_5	IF_15
0xe788	    0x8b0485000000	                  mov eax, dword [rax*4]	      7248	screen.c	FUNCTION_46	FOR_1	ELSE_5	IF_15
0xe78f	    0x8985b0e5ffff	           mov dword [rbp - 0x1a50], eax	      7248	screen.c	FUNCTION_46	FOR_1	ELSE_5	IF_15
0xe795	      0xe9dc000000	                           jmp 0x400e8b6	      7248	screen.c	FUNCTION_46	FOR_1	ELSE_5	IF_15
0xe79a	    0x4883bd98e5ff	             cmp qword [rbp - 0x1a68], 0	      7249	screen.c	FUNCTION_46	FOR_1	ELSE_6	IF_16	CALL_20
0xe7a2	            0x7453	                            je 0x400e837	      7249	screen.c	FUNCTION_46	FOR_1	ELSE_6	IF_16	CALL_20
0xe7a4	    0x488b8598e5ff	           mov rax, qword [rbp - 0x1a68]	      7249	screen.c	FUNCTION_46	FOR_1	ELSE_6	IF_16	CALL_20
0xe7ab	        0x488b4008	                mov rax, qword [rax + 8]	      7249	screen.c	FUNCTION_46	FOR_1	ELSE_6	IF_16	CALL_20
0xe7af	          0x4889c7	                            mov rdi, rax	      7249	screen.c	FUNCTION_46	FOR_1	ELSE_6	IF_16	CALL_20
0xe7b2	      0xe800000000	                          call 0x400e7f7	      7249	screen.c	FUNCTION_46	FOR_1	ELSE_6	IF_16	CALL_20
0xe7b7	            0x85c0	                           test eax, eax	      7249	screen.c	FUNCTION_46	FOR_1	ELSE_6	IF_16	CALL_20
0xe7b9	            0x743c	                            je 0x400e837	      7249	screen.c	FUNCTION_46	FOR_1	ELSE_6	IF_16	CALL_20
0xe7bb	    0x488b8598e5ff	           mov rax, qword [rbp - 0x1a68]	      7250	screen.c	FUNCTION_46	FOR_1	ELSE_6	IF_16
0xe7c2	    0x8b80a4000000	            mov eax, dword [rax + 0xa4] 	      7250	screen.c	FUNCTION_46	FOR_1	ELSE_6	IF_16
0xe7c8	            0x85c0	                           test eax, eax	      7250	screen.c	FUNCTION_46	FOR_1	ELSE_6	IF_16
0xe7ca	            0x742b	                            je 0x400e837	      7250	screen.c	FUNCTION_46	FOR_1	ELSE_6	IF_16
0xe7cc	    0x8b85c4e5ffff	           mov eax, dword [rbp - 0x1a3c]	      7251	screen.c	FUNCTION_46	FOR_1	ELSE_6	IF_16
0xe7d2	            0x4898	                                    cdqe	      7251	screen.c	FUNCTION_46	FOR_1	ELSE_6	IF_16
0xe7d4	        0x48c1e004	                              shl rax, 4	      7251	screen.c	FUNCTION_46	FOR_1	ELSE_6	IF_16
0xe7d8	          0x4801e8	                            add rax, rbp	      7251	screen.c	FUNCTION_46	FOR_1	ELSE_6	IF_16
0xe7db	    0x482d081a0000	                         sub rax, 0x1a08	      7251	screen.c	FUNCTION_46	FOR_1	ELSE_6	IF_16
0xe7e1	            0x8b00	                    mov eax, dword [rax]	      7251	screen.c	FUNCTION_46	FOR_1	ELSE_6	IF_16
0xe7e3	          0x83e801	                              sub eax, 1	      7251	screen.c	FUNCTION_46	FOR_1	ELSE_6	IF_16
0xe7e6	            0x4898	                                    cdqe	      7251	screen.c	FUNCTION_46	FOR_1	ELSE_6	IF_16
0xe7e8	    0x8b0485000000	                  mov eax, dword [rax*4]	      7251	screen.c	FUNCTION_46	FOR_1	ELSE_6	IF_16
0xe7ef	    0x8985b0e5ffff	           mov dword [rbp - 0x1a50], eax	      7251	screen.c	FUNCTION_46	FOR_1	ELSE_6	IF_16
0xe7f5	            0xeb7f	                           jmp 0x400e8b6	      7251	screen.c	FUNCTION_46	FOR_1	ELSE_6	IF_16
0xe7f7	    0x4883bd98e5ff	             cmp qword [rbp - 0x1a68], 0	      7253	screen.c	FUNCTION_46	FOR_1	ELSE_7	IF_17
0xe7ff	            0x744c	                            je 0x400e88d	      7253	screen.c	FUNCTION_46	FOR_1	ELSE_7	IF_17
0xe801	    0x488b05000000	            mov rax, qword [0x0400e848] 	      7253	screen.c	FUNCTION_46	FOR_1	ELSE_7	IF_17
0xe808	    0x48398598e5ff	          cmp qword [rbp - 0x1a68], rax 	      7253	screen.c	FUNCTION_46	FOR_1	ELSE_7	IF_17
0xe80f	            0x743c	                            je 0x400e88d	      7253	screen.c	FUNCTION_46	FOR_1	ELSE_7	IF_17
0xe811	    0x488b8598e5ff	           mov rax, qword [rbp - 0x1a68]	      7253	screen.c	FUNCTION_46	FOR_1	ELSE_7	IF_17
0xe818	    0x8b80a4000000	            mov eax, dword [rax + 0xa4] 	      7253	screen.c	FUNCTION_46	FOR_1	ELSE_7	IF_17
0xe81e	            0x85c0	                           test eax, eax	      7253	screen.c	FUNCTION_46	FOR_1	ELSE_7	IF_17
0xe820	            0x742b	                            je 0x400e88d	      7253	screen.c	FUNCTION_46	FOR_1	ELSE_7	IF_17
0xe822	    0x8b85c4e5ffff	           mov eax, dword [rbp - 0x1a3c]	      7254	screen.c	FUNCTION_46	FOR_1	ELSE_7	IF_17
0xe828	            0x4898	                                    cdqe	      7254	screen.c	FUNCTION_46	FOR_1	ELSE_7	IF_17
0xe82a	        0x48c1e004	                              shl rax, 4	      7254	screen.c	FUNCTION_46	FOR_1	ELSE_7	IF_17
0xe82e	          0x4801e8	                            add rax, rbp	      7254	screen.c	FUNCTION_46	FOR_1	ELSE_7	IF_17
0xe831	    0x482d081a0000	                         sub rax, 0x1a08	      7254	screen.c	FUNCTION_46	FOR_1	ELSE_7	IF_17
0xe837	            0x8b00	                    mov eax, dword [rax]	      7254	screen.c	FUNCTION_46	FOR_1	ELSE_7	IF_17
0xe839	          0x83e801	                              sub eax, 1	      7254	screen.c	FUNCTION_46	FOR_1	ELSE_7	IF_17
0xe83c	            0x4898	                                    cdqe	      7254	screen.c	FUNCTION_46	FOR_1	ELSE_7	IF_17
0xe83e	    0x8b0485000000	                  mov eax, dword [rax*4]	      7254	screen.c	FUNCTION_46	FOR_1	ELSE_7	IF_17
0xe845	    0x8985b0e5ffff	           mov dword [rbp - 0x1a50], eax	      7254	screen.c	FUNCTION_46	FOR_1	ELSE_7	IF_17
0xe84b	            0xeb29	                           jmp 0x400e8b6	      7254	screen.c	FUNCTION_46	FOR_1	ELSE_7	IF_17
0xe84d	    0x8b85c4e5ffff	           mov eax, dword [rbp - 0x1a3c]	      7256	screen.c	FUNCTION_46	FOR_1	ELSE_8
0xe853	            0x4898	                                    cdqe	      7256	screen.c	FUNCTION_46	FOR_1	ELSE_8
0xe855	        0x48c1e004	                              shl rax, 4	      7256	screen.c	FUNCTION_46	FOR_1	ELSE_8
0xe859	          0x4801e8	                            add rax, rbp	      7256	screen.c	FUNCTION_46	FOR_1	ELSE_8
0xe85c	    0x482d081a0000	                         sub rax, 0x1a08	      7256	screen.c	FUNCTION_46	FOR_1	ELSE_8
0xe862	            0x8b00	                    mov eax, dword [rax]	      7256	screen.c	FUNCTION_46	FOR_1	ELSE_8
0xe864	          0x83e801	                              sub eax, 1	      7256	screen.c	FUNCTION_46	FOR_1	ELSE_8
0xe867	            0x4898	                                    cdqe	      7256	screen.c	FUNCTION_46	FOR_1	ELSE_8
0xe869	    0x8b0485000000	                  mov eax, dword [rax*4]	      7256	screen.c	FUNCTION_46	FOR_1	ELSE_8
0xe870	    0x8985b0e5ffff	           mov dword [rbp - 0x1a50], eax	      7256	screen.c	FUNCTION_46	FOR_1	ELSE_8
0xe876	    0x8385c4e5ffff	             add dword [rbp - 0x1a3c], 1	      7234	screen.c	FUNCTION_46	FOR_1
0xe87d	    0x8b85c4e5ffff	           mov eax, dword [rbp - 0x1a3c]	      7234	screen.c	FUNCTION_46	FOR_1
0xe883	            0x4898	                                    cdqe	      7234	screen.c	FUNCTION_46	FOR_1
0xe885	        0x48c1e004	                              shl rax, 4	      7234	screen.c	FUNCTION_46	FOR_1
0xe889	          0x4801e8	                            add rax, rbp	      7234	screen.c	FUNCTION_46	FOR_1
0xe88c	    0x482d101a0000	                         sub rax, 0x1a10	      7234	screen.c	FUNCTION_46	FOR_1
0xe892	          0x488b00	                    mov rax, qword [rax]	      7234	screen.c	FUNCTION_46	FOR_1
0xe895	          0x4885c0	                           test rax, rax	      7234	screen.c	FUNCTION_46	FOR_1
0xe898	     0xf8586fdffff	                           jne 0x400e664	      7234	screen.c	FUNCTION_46	FOR_1
0xe89e	    0x8b8db0e5ffff	           mov ecx, dword [rbp - 0x1a50]	      7258	screen.c	FUNCTION_46	CALL_21
0xe8a4	    0x8b95b8e5ffff	           mov edx, dword [rbp - 0x1a48]	      7258	screen.c	FUNCTION_46	CALL_21
0xe8aa	    0x8bb5b4e5ffff	           mov esi, dword [rbp - 0x1a4c]	      7258	screen.c	FUNCTION_46	CALL_21
0xe8b0	    0x488b85e0e5ff	           mov rax, qword [rbp - 0x1a20]	      7258	screen.c	FUNCTION_46	CALL_21
0xe8b7	          0x4889c7	                            mov rdi, rax	      7258	screen.c	FUNCTION_46	CALL_21
0xe8ba	      0xe800000000	                          call 0x400e8ff	      7258	screen.c	FUNCTION_46	CALL_21
0xe8bf	    0x4883bd98e5ff	             cmp qword [rbp - 0x1a68], 0	      7260	screen.c	FUNCTION_46	IF_18
0xe8c7	     0xf8558010000	                           jne 0x400ea65	      7260	screen.c	FUNCTION_46	IF_18
0xe8cd	    0xc785b8e5ffff	             mov dword [rbp - 0x1a48], 0	      7263	screen.c	FUNCTION_46	IF_18
0xe8d7	    0xc785c8e5ffff	             mov dword [rbp - 0x1a38], 0	      7264	screen.c	FUNCTION_46	IF_18
0xe8e1	    0x488d85f0efff	                 lea rax, [rbp - 0x1010]	      7265	screen.c	FUNCTION_46	IF_18
0xe8e8	    0x488985e0e5ff	           mov qword [rbp - 0x1a20], rax	      7265	screen.c	FUNCTION_46	IF_18
0xe8ef	    0xc785cce5ffff	             mov dword [rbp - 0x1a34], 0	      7266	screen.c	FUNCTION_46	IF_18
0xe8f9	    0xc785c4e5ffff	             mov dword [rbp - 0x1a3c], 0	      7267	screen.c	FUNCTION_46	IF_18	FOR_2
0xe903	      0xe9bb000000	                           jmp 0x400ea03	      7267	screen.c	FUNCTION_46	IF_18	FOR_2
0xe908	    0x8b85c4e5ffff	           mov eax, dword [rbp - 0x1a3c]	      7269	screen.c	FUNCTION_46	IF_18	FOR_2	CALL_22
0xe90e	            0x4898	                                    cdqe	      7269	screen.c	FUNCTION_46	IF_18	FOR_2	CALL_22
0xe910	        0x48c1e004	                              shl rax, 4	      7269	screen.c	FUNCTION_46	IF_18	FOR_2	CALL_22
0xe914	          0x4801e8	                            add rax, rbp	      7269	screen.c	FUNCTION_46	IF_18	FOR_2	CALL_22
0xe917	    0x482d10150000	                         sub rax, 0x1510	      7269	screen.c	FUNCTION_46	IF_18	FOR_2	CALL_22
0xe91d	          0x488b00	                    mov rax, qword [rax]	      7269	screen.c	FUNCTION_46	IF_18	FOR_2	CALL_22
0xe920	          0x4889c2	                            mov rdx, rax	      7269	screen.c	FUNCTION_46	IF_18	FOR_2	CALL_22
0xe923	    0x488b85e0e5ff	           mov rax, qword [rbp - 0x1a20]	      7269	screen.c	FUNCTION_46	IF_18	FOR_2	CALL_22
0xe92a	          0x4829c2	                            sub rdx, rax	      7269	screen.c	FUNCTION_46	IF_18	FOR_2	CALL_22
0xe92d	          0x4889d0	                            mov rax, rdx	      7269	screen.c	FUNCTION_46	IF_18	FOR_2	CALL_22
0xe930	            0x89c2	                            mov edx, eax	      7269	screen.c	FUNCTION_46	IF_18	FOR_2	CALL_22
0xe932	    0x488b85e0e5ff	           mov rax, qword [rbp - 0x1a20]	      7269	screen.c	FUNCTION_46	IF_18	FOR_2	CALL_22
0xe939	            0x89d6	                            mov esi, edx	      7269	screen.c	FUNCTION_46	IF_18	FOR_2	CALL_22
0xe93b	          0x4889c7	                            mov rdi, rax	      7269	screen.c	FUNCTION_46	IF_18	FOR_2	CALL_22
0xe93e	      0xe800000000	                          call 0x400e983	      7269	screen.c	FUNCTION_46	IF_18	FOR_2	CALL_22
0xe943	     0x185c8e5ffff	           add dword [rbp - 0x1a38], eax	      7269	screen.c	FUNCTION_46	IF_18	FOR_2	CALL_22
0xe949	            0xeb27	                           jmp 0x400e9b2	      7270	screen.c	FUNCTION_46	IF_18	FOR_2	WHILE_3
0xe94b	    0x488b0d000000	            mov rcx, qword [0x0400e992] 	      7271	screen.c	FUNCTION_46	IF_18	FOR_2	WHILE_3
0xe952	    0x8b85b8e5ffff	           mov eax, dword [rbp - 0x1a48]	      7271	screen.c	FUNCTION_46	IF_18	FOR_2	WHILE_3
0xe958	          0x8d5001	                      lea edx, [rax + 1]	      7271	screen.c	FUNCTION_46	IF_18	FOR_2	WHILE_3
0xe95b	    0x8995b8e5ffff	           mov dword [rbp - 0x1a48], edx	      7271	screen.c	FUNCTION_46	IF_18	FOR_2	WHILE_3
0xe961	            0x4898	                                    cdqe	      7271	screen.c	FUNCTION_46	IF_18	FOR_2	WHILE_3
0xe963	          0x4801c0	                            add rax, rax	      7271	screen.c	FUNCTION_46	IF_18	FOR_2	WHILE_3
0xe966	          0x4801c8	                            add rax, rcx	      7271	screen.c	FUNCTION_46	IF_18	FOR_2	WHILE_3
0xe969	    0x8b95cce5ffff	           mov edx, dword [rbp - 0x1a34]	      7271	screen.c	FUNCTION_46	IF_18	FOR_2	WHILE_3
0xe96f	          0x668910	                      mov word [rax], dx	      7271	screen.c	FUNCTION_46	IF_18	FOR_2	WHILE_3
0xe972	    0x8b85b8e5ffff	           mov eax, dword [rbp - 0x1a48]	      7270	screen.c	FUNCTION_46	IF_18	FOR_2	WHILE_3
0xe978	    0x3b85c8e5ffff	           cmp eax, dword [rbp - 0x1a38]	      7270	screen.c	FUNCTION_46	IF_18	FOR_2	WHILE_3
0xe97e	            0x7ccb	                            jl 0x400e98b	      7270	screen.c	FUNCTION_46	IF_18	FOR_2	WHILE_3
0xe980	    0x8b85c4e5ffff	           mov eax, dword [rbp - 0x1a3c]	      7272	screen.c	FUNCTION_46	IF_18	FOR_2
0xe986	            0x4898	                                    cdqe	      7272	screen.c	FUNCTION_46	IF_18	FOR_2
0xe988	        0x48c1e004	                              shl rax, 4	      7272	screen.c	FUNCTION_46	IF_18	FOR_2
0xe98c	          0x4801e8	                            add rax, rbp	      7272	screen.c	FUNCTION_46	IF_18	FOR_2
0xe98f	    0x482d10150000	                         sub rax, 0x1510	      7272	screen.c	FUNCTION_46	IF_18	FOR_2
0xe995	          0x488b00	                    mov rax, qword [rax]	      7272	screen.c	FUNCTION_46	IF_18	FOR_2
0xe998	    0x488985e0e5ff	           mov qword [rbp - 0x1a20], rax	      7272	screen.c	FUNCTION_46	IF_18	FOR_2
0xe99f	    0x8b85c4e5ffff	           mov eax, dword [rbp - 0x1a3c]	      7273	screen.c	FUNCTION_46	IF_18	FOR_2
0xe9a5	            0x4898	                                    cdqe	      7273	screen.c	FUNCTION_46	IF_18	FOR_2
0xe9a7	        0x48c1e004	                              shl rax, 4	      7273	screen.c	FUNCTION_46	IF_18	FOR_2
0xe9ab	          0x4801e8	                            add rax, rbp	      7273	screen.c	FUNCTION_46	IF_18	FOR_2
0xe9ae	    0x482d08150000	                         sub rax, 0x1508	      7273	screen.c	FUNCTION_46	IF_18	FOR_2
0xe9b4	            0x8b00	                    mov eax, dword [rax]	      7273	screen.c	FUNCTION_46	IF_18	FOR_2
0xe9b6	    0x8985cce5ffff	           mov dword [rbp - 0x1a34], eax	      7273	screen.c	FUNCTION_46	IF_18	FOR_2
0xe9bc	    0x8385c4e5ffff	             add dword [rbp - 0x1a3c], 1	      7267	screen.c	FUNCTION_46	IF_18	FOR_2
0xe9c3	    0x8b85c4e5ffff	           mov eax, dword [rbp - 0x1a3c]	      7267	screen.c	FUNCTION_46	IF_18	FOR_2
0xe9c9	            0x4898	                                    cdqe	      7267	screen.c	FUNCTION_46	IF_18	FOR_2
0xe9cb	        0x48c1e004	                              shl rax, 4	      7267	screen.c	FUNCTION_46	IF_18	FOR_2
0xe9cf	          0x4801e8	                            add rax, rbp	      7267	screen.c	FUNCTION_46	IF_18	FOR_2
0xe9d2	    0x482d10150000	                         sub rax, 0x1510	      7267	screen.c	FUNCTION_46	IF_18	FOR_2
0xe9d8	          0x488b00	                    mov rax, qword [rax]	      7267	screen.c	FUNCTION_46	IF_18	FOR_2
0xe9db	          0x4885c0	                           test rax, rax	      7267	screen.c	FUNCTION_46	IF_18	FOR_2
0xe9de	     0xf8524ffffff	                           jne 0x400e948	      7267	screen.c	FUNCTION_46	IF_18	FOR_2
0xe9e4	            0xeb27	                           jmp 0x400ea4d	      7275	screen.c	FUNCTION_46	IF_18	WHILE_4
0xe9e6	    0x488b0d000000	            mov rcx, qword [0x0400ea2d] 	      7276	screen.c	FUNCTION_46	IF_18	WHILE_4
0xe9ed	    0x8b85b8e5ffff	           mov eax, dword [rbp - 0x1a48]	      7276	screen.c	FUNCTION_46	IF_18	WHILE_4
0xe9f3	          0x8d5001	                      lea edx, [rax + 1]	      7276	screen.c	FUNCTION_46	IF_18	WHILE_4
0xe9f6	    0x8995b8e5ffff	           mov dword [rbp - 0x1a48], edx	      7276	screen.c	FUNCTION_46	IF_18	WHILE_4
0xe9fc	            0x4898	                                    cdqe	      7276	screen.c	FUNCTION_46	IF_18	WHILE_4
0xe9fe	          0x4801c0	                            add rax, rax	      7276	screen.c	FUNCTION_46	IF_18	WHILE_4
0xea01	          0x4801c8	                            add rax, rcx	      7276	screen.c	FUNCTION_46	IF_18	WHILE_4
0xea04	    0x8b95cce5ffff	           mov edx, dword [rbp - 0x1a34]	      7276	screen.c	FUNCTION_46	IF_18	WHILE_4
0xea0a	          0x668910	                      mov word [rax], dx	      7276	screen.c	FUNCTION_46	IF_18	WHILE_4
0xea0d	    0x8b85b8e5ffff	           mov eax, dword [rbp - 0x1a48]	      7275	screen.c	FUNCTION_46	IF_18	WHILE_4
0xea13	          0x4863d0	                         movsxd rdx, eax	      7275	screen.c	FUNCTION_46	IF_18	WHILE_4
0xea16	    0x488b05000000	            mov rax, qword [0x0400ea5d] 	      7275	screen.c	FUNCTION_46	IF_18	WHILE_4
0xea1d	          0x4839c2	                            cmp rdx, rax	      7275	screen.c	FUNCTION_46	IF_18	WHILE_4
0xea20	            0x7cc4	                            jl 0x400ea26	      7275	screen.c	FUNCTION_46	IF_18	WHILE_4
0xea22	            0xeb01	                           jmp 0x400ea65	      7275	screen.c	FUNCTION_46	IF_18	WHILE_4
0xea24	              0x90	                                     nop	      7191	screen.c	FUNCTION_46	IF_11
0xea25	    0xc70500000000	               mov dword [0x0400ea6f], 0	      7280	screen.c	FUNCTION_46
0xea2f	            0xeb01	                           jmp 0x400ea72	      7280	screen.c	FUNCTION_46
0xea31	              0x90	                                     nop	      7123	screen.c	FUNCTION_46	IF_1
0xea32	        0x488b45f8	                mov rax, qword [rbp - 8]	      7281	screen.c	FUNCTION_46
0xea36	    0x644833042528	                xor rax, qword fs:[0x28]	      7281	screen.c	FUNCTION_46
0xea3f	            0x7405	                            je 0x400ea86	      7281	screen.c	FUNCTION_46
0xea41	      0xe800000000	                          call 0x400ea86	      7281	screen.c	FUNCTION_46
0xea46	              0xc9	                                   leave	      7281	screen.c	FUNCTION_46
0xea47	              0xc3	                                     ret	      7281	screen.c	FUNCTION_46
update_curbuf	DO,0:functions,0:CALL,2:ELSE,0:IF,0:WHILE,0:FOR,0:SWITCH,0	13
0x975	              0x55	                                push rbp	       525	screen.c	FUNCTION_11
0x976	          0x4889e5	                            mov rbp, rsp	       525	screen.c	FUNCTION_11
0x979	        0x4883ec10	                           sub rsp, 0x10	       525	screen.c	FUNCTION_11
0x97d	          0x897dfc	                mov dword [rbp - 4], edi	       525	screen.c	FUNCTION_11
0x980	          0x8b45fc	                mov eax, dword [rbp - 4]	       526	screen.c	FUNCTION_11	CALL_1
0x983	            0x89c7	                            mov edi, eax	       526	screen.c	FUNCTION_11	CALL_1
0x985	      0xe800000000	                          call 0x40009ca	       526	screen.c	FUNCTION_11	CALL_1
0x98a	          0x8b45fc	                mov eax, dword [rbp - 4]	       527	screen.c	FUNCTION_11	CALL_2
0x98d	            0x89c7	                            mov edi, eax	       527	screen.c	FUNCTION_11	CALL_2
0x98f	      0xe800000000	                          call 0x40009d4	       527	screen.c	FUNCTION_11	CALL_2
0x994	              0x90	                                     nop	       528	screen.c	FUNCTION_11
0x995	              0xc9	                                   leave	       528	screen.c	FUNCTION_11
0x996	              0xc3	                                     ret	       528	screen.c	FUNCTION_11
status_redraw_all	DO,0:functions,0:CALL,2:ELSE,0:IF,1:WHILE,0:FOR,0:SWITCH,0	22
0xcd4f	              0x55	                                push rbp	      6460	screen.c	FUNCTION_34
0xcd50	          0x4889e5	                            mov rbp, rsp	      6460	screen.c	FUNCTION_34
0xcd53	        0x4883ec10	                           sub rsp, 0x10	      6460	screen.c	FUNCTION_34
0xcd57	    0x488b05000000	            mov rax, qword [0x0400cd9e] 	      6463	screen.c	FUNCTION_34	CALL_1
0xcd5e	        0x488945f8	                mov qword [rbp - 8], rax	      6463	screen.c	FUNCTION_34	CALL_1
0xcd62	            0xeb32	                           jmp 0x400cdd6	      6463	screen.c	FUNCTION_34	CALL_1
0xcd64	        0x488b45f8	                mov rax, qword [rbp - 8]	      6464	screen.c	FUNCTION_34	IF_1
0xcd68	    0x8b80a4000000	            mov eax, dword [rax + 0xa4] 	      6464	screen.c	FUNCTION_34	IF_1
0xcd6e	            0x85c0	                           test eax, eax	      6464	screen.c	FUNCTION_34	IF_1
0xcd70	            0x7418	                            je 0x400cdca	      6464	screen.c	FUNCTION_34	IF_1
0xcd72	        0x488b45f8	                mov rax, qword [rbp - 8]	      6466	screen.c	FUNCTION_34	IF_1
0xcd76	    0xc78040010000	              mov dword [rax + 0x140], 1	      6466	screen.c	FUNCTION_34	IF_1
0xcd80	      0xbf0a000000	                            mov edi, 0xa	      6467	screen.c	FUNCTION_34	IF_1	CALL_2
0xcd85	      0xe800000000	                          call 0x400cdca	      6467	screen.c	FUNCTION_34	IF_1	CALL_2
0xcd8a	        0x488b45f8	                mov rax, qword [rbp - 8]	      6463	screen.c	FUNCTION_34	CALL_1
0xcd8e	        0x488b4020	            mov rax, qword [rax + 0x20] 	      6463	screen.c	FUNCTION_34	CALL_1
0xcd92	        0x488945f8	                mov qword [rbp - 8], rax	      6463	screen.c	FUNCTION_34	CALL_1
0xcd96	      0x48837df800	                  cmp qword [rbp - 8], 0	      6463	screen.c	FUNCTION_34	CALL_1
0xcd9b	            0x75c7	                           jne 0x400cda4	      6463	screen.c	FUNCTION_34	CALL_1
0xcd9d	              0x90	                                     nop	      6469	screen.c	FUNCTION_34
0xcd9e	              0xc9	                                   leave	      6469	screen.c	FUNCTION_34
0xcd9f	              0xc3	                                     ret	      6469	screen.c	FUNCTION_34
redraw_all_later	DO,0:functions,1:CALL,0:ELSE,0:IF,0:WHILE,0:FOR,0:SWITCH,0	20
0x99	              0x55	                                push rbp	       240	screen.c	ELSE_1	FUNCTION_4
0x9a	          0x4889e5	                            mov rbp, rsp	       240	screen.c	ELSE_1	FUNCTION_4
0x9d	        0x4883ec18	                           sub rsp, 0x18	       240	screen.c	ELSE_1	FUNCTION_4
0xa1	          0x897dec	             mov dword [rbp - 0x14], edi	       240	screen.c	ELSE_1	FUNCTION_4
0xa4	    0x488b05000000	            mov rax, qword [0x040000eb] 	       243	screen.c	ELSE_1	FUNCTION_4
0xab	        0x488945f8	                mov qword [rbp - 8], rax	       243	screen.c	ELSE_1	FUNCTION_4
0xaf	            0xeb1d	                           jmp 0x400010e	       243	screen.c	ELSE_1	FUNCTION_4
0xb1	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       245	screen.c	ELSE_1	FUNCTION_4	FUNCTION_1	CALL_1
0xb4	        0x488b45f8	                mov rax, qword [rbp - 8]	       245	screen.c	ELSE_1	FUNCTION_4	FUNCTION_1	CALL_1
0xb8	            0x89d6	                            mov esi, edx	       245	screen.c	ELSE_1	FUNCTION_4	FUNCTION_1	CALL_1
0xba	          0x4889c7	                            mov rdi, rax	       245	screen.c	ELSE_1	FUNCTION_4	FUNCTION_1	CALL_1
0xbd	      0xe800000000	                          call 0x4000102	       245	screen.c	ELSE_1	FUNCTION_4	FUNCTION_1	CALL_1
0xc2	        0x488b45f8	                mov rax, qword [rbp - 8]	       243	screen.c	ELSE_1	FUNCTION_4
0xc6	        0x488b4020	            mov rax, qword [rax + 0x20] 	       243	screen.c	ELSE_1	FUNCTION_4
0xca	        0x488945f8	                mov qword [rbp - 8], rax	       243	screen.c	ELSE_1	FUNCTION_4
0xce	      0x48837df800	                  cmp qword [rbp - 8], 0	       243	screen.c	ELSE_1	FUNCTION_4
0xd3	            0x75dc	                           jne 0x40000f1	       243	screen.c	ELSE_1	FUNCTION_4
0xd5	              0x90	                                     nop	       247	screen.c	ELSE_1	FUNCTION_4
0xd6	              0xc9	                                   leave	       247	screen.c	ELSE_1	FUNCTION_4
0xd7	              0xc3	                                     ret	       247	screen.c	ELSE_1	FUNCTION_4
messaging	DO,0:functions,0:CALL,1:ELSE,0:IF,0:WHILE,0:FOR,0:SWITCH,0	16
0x14d40	              0x55	                                push rbp	     10746	screen.c	FUNCTION_96
0x14d41	          0x4889e5	                            mov rbp, rsp	     10746	screen.c	FUNCTION_96
0x14d44	    0x8b0500000000	            mov eax, dword [0x04014d8a] 	     10747	screen.c	FUNCTION_96	CALL_1
0x14d4a	            0x85c0	                           test eax, eax	     10747	screen.c	FUNCTION_96	CALL_1
0x14d4c	            0x7413	                            je 0x4014da1	     10747	screen.c	FUNCTION_96	CALL_1
0x14d4e	      0xe800000000	                          call 0x4014d93	     10747	screen.c	FUNCTION_96	CALL_1
0x14d53	            0x85c0	                           test eax, eax	     10747	screen.c	FUNCTION_96	CALL_1
0x14d55	            0x740a	                            je 0x4014da1	     10747	screen.c	FUNCTION_96	CALL_1
0x14d57	    0x8b0500000000	            mov eax, dword [0x04014d9d] 	     10747	screen.c	FUNCTION_96	CALL_1
0x14d5d	            0x85c0	                           test eax, eax	     10747	screen.c	FUNCTION_96	CALL_1
0x14d5f	            0x7407	                            je 0x4014da8	     10747	screen.c	FUNCTION_96	CALL_1
0x14d61	      0xb801000000	                              mov eax, 1	     10747	screen.c	FUNCTION_96	CALL_1
0x14d66	            0xeb05	                           jmp 0x4014dad	     10747	screen.c	FUNCTION_96	CALL_1
0x14d68	      0xb800000000	                              mov eax, 0	     10747	screen.c	FUNCTION_96	CALL_1
0x14d6d	              0x5d	                                 pop rbp	     10748	screen.c	FUNCTION_96
0x14d6e	              0xc3	                                     ret	     10748	screen.c	FUNCTION_96
win_redr_ruler	DO,0:functions,0:CALL,20:ELSE,3:IF,19:WHILE,1:FOR,1:SWITCH,0	464
0x15135	              0x55	                                push rbp	     10862	screen.c	FUNCTION_99
0x15136	          0x4889e5	                            mov rbp, rsp	     10862	screen.c	FUNCTION_99
0x15139	            0x4155	                                push r13	     10862	screen.c	FUNCTION_99
0x1513b	            0x4154	                                push r12	     10862	screen.c	FUNCTION_99
0x1513d	              0x53	                                push rbx	     10862	screen.c	FUNCTION_99
0x1513e	    0x4881eca80000	                           sub rsp, 0xa8	     10862	screen.c	FUNCTION_99
0x15145	    0x4889bd48ffff	             mov qword [rbp - 0xb8], rdi	     10862	screen.c	FUNCTION_99
0x1514c	    0x89b544ffffff	             mov dword [rbp - 0xbc], esi	     10862	screen.c	FUNCTION_99
0x15152	    0x64488b042528	                mov rax, qword fs:[0x28]	     10862	screen.c	FUNCTION_99
0x1515b	        0x488945d8	             mov qword [rbp - 0x28], rax	     10862	screen.c	FUNCTION_99
0x1515f	            0x31c0	                            xor eax, eax	     10862	screen.c	FUNCTION_99
0x15161	    0xc7856cffffff	               mov dword [rbp - 0x94], 0	     10868	screen.c	FUNCTION_99
0x1516b	    0xc7857cffffff	               mov dword [rbp - 0x84], 0	     10874	screen.c	FUNCTION_99
0x15175	    0x488b05000000	            mov rax, qword [0x040151bc] 	     10875	screen.c	FUNCTION_99
0x1517c	          0x894580	             mov dword [rbp - 0x80], eax	     10875	screen.c	FUNCTION_99
0x1517f	    0x8b0500000000	            mov eax, dword [0x040151c5] 	     10878	screen.c	FUNCTION_99	IF_1
0x15185	            0x85c0	                           test eax, eax	     10878	screen.c	FUNCTION_99	IF_1
0x15187	     0xf84c7070000	                            je 0x4015994	     10878	screen.c	FUNCTION_99	IF_1
0x1518d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     10885	screen.c	FUNCTION_99	IF_2
0x15194	        0x488b5038	            mov rdx, qword [rax + 0x38] 	     10885	screen.c	FUNCTION_99	IF_2
0x15198	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     10885	screen.c	FUNCTION_99	IF_2
0x1519f	        0x488b4008	                mov rax, qword [rax + 8]	     10885	screen.c	FUNCTION_99	IF_2
0x151a3	          0x488b00	                    mov rax, qword [rax]	     10885	screen.c	FUNCTION_99	IF_2
0x151a6	          0x4839c2	                            cmp rdx, rax	     10885	screen.c	FUNCTION_99	IF_2
0x151a9	     0xf8fa8070000	                            jg 0x4015997	     10885	screen.c	FUNCTION_99	IF_2
0x151af	    0x488b05000000	            mov rax, qword [0x040151f6] 	     10891	screen.c	FUNCTION_99	IF_3
0x151b6	    0x48398548ffff	            cmp qword [rbp - 0xb8], rax 	     10891	screen.c	FUNCTION_99	IF_3
0x151bd	            0x7521	                           jne 0x4015220	     10891	screen.c	FUNCTION_99	IF_3
0x151bf	    0x488b05000000	            mov rax, qword [0x04015206] 	     10891	screen.c	FUNCTION_99	IF_3
0x151c6	    0x8b80a4000000	            mov eax, dword [rax + 0xa4] 	     10891	screen.c	FUNCTION_99	IF_3
0x151cc	            0x85c0	                           test eax, eax	     10891	screen.c	FUNCTION_99	IF_3
0x151ce	            0x7510	                           jne 0x4015220	     10891	screen.c	FUNCTION_99	IF_3
0x151d0	    0x488b05000000	            mov rax, qword [0x04015217] 	     10892	screen.c	FUNCTION_99	IF_3	IF_4
0x151d7	          0x4885c0	                           test rax, rax	     10892	screen.c	FUNCTION_99	IF_3	IF_4
0x151da	     0xf857a070000	                           jne 0x401599a	     10892	screen.c	FUNCTION_99	IF_3	IF_4
0x151e0	      0xe800000000	                          call 0x4015225	     10895	screen.c	FUNCTION_99	IF_5	CALL_1
0x151e5	            0x85c0	                           test eax, eax	     10895	screen.c	FUNCTION_99	IF_5	CALL_1
0x151e7	     0xf8570070000	                           jne 0x401599d	     10895	screen.c	FUNCTION_99	IF_5	CALL_1
0x151ed	    0x488b05000000	            mov rax, qword [0x04015234] 	     10900	screen.c	FUNCTION_99	IF_6
0x151f4	           0xfb600	                   movzx eax, byte [rax]	     10900	screen.c	FUNCTION_99	IF_6
0x151f7	            0x84c0	                             test al, al	     10900	screen.c	FUNCTION_99	IF_6
0x151f9	            0x7464	                            je 0x401529f	     10900	screen.c	FUNCTION_99	IF_6
0x151fb	    0x8b0500000000	            mov eax, dword [0x04015241] 	     10902	screen.c	FUNCTION_99	IF_6
0x15201	          0x894584	             mov dword [rbp - 0x7c], eax	     10902	screen.c	FUNCTION_99	IF_6
0x15204	    0xc70500000000	               mov dword [0x0401524e], 0	     10904	screen.c	FUNCTION_99	IF_6
0x1520e	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     10905	screen.c	FUNCTION_99	IF_6	CALL_2
0x15215	      0xbe01000000	                              mov esi, 1	     10905	screen.c	FUNCTION_99	IF_6	CALL_2
0x1521a	          0x4889c7	                            mov rdi, rax	     10905	screen.c	FUNCTION_99	IF_6	CALL_2
0x1521d	      0xe8298fffff	                call sym.win_redr_custom	     10905	screen.c	FUNCTION_99	IF_6	CALL_2
0x15222	    0x8b0500000000	            mov eax, dword [0x04015268] 	     10906	screen.c	FUNCTION_99	IF_6	IF_7
0x15228	            0x85c0	                           test eax, eax	     10906	screen.c	FUNCTION_99	IF_6	IF_7
0x1522a	            0x741f	                            je 0x401528b	     10906	screen.c	FUNCTION_99	IF_6	IF_7
0x1522c	    0x41b8fbffffff	                     mov r8d, 0xfffffffb	     10907	screen.c	FUNCTION_99	IF_6	IF_7	CALL_3
0x15232	      0xb901000000	                              mov ecx, 1	     10907	screen.c	FUNCTION_99	IF_6	IF_7	CALL_3
0x15237	      0xba00000000	                              mov edx, 0	     10907	screen.c	FUNCTION_99	IF_6	IF_7	CALL_3
0x1523c	      0xbeffffffff	                     mov esi, 0xffffffff	     10907	screen.c	FUNCTION_99	IF_6	IF_7	CALL_3
0x15241	      0xbf00000000	                              mov edi, 0	     10907	screen.c	FUNCTION_99	IF_6	IF_7	CALL_3
0x15246	      0xe800000000	                          call 0x401528b	     10907	screen.c	FUNCTION_99	IF_6	IF_7	CALL_3
0x1524b	    0x8b0500000000	            mov eax, dword [0x04015291] 	     10909	screen.c	FUNCTION_99	IF_6
0x15251	           0xb4584	              or eax, dword [rbp - 0x7c]	     10909	screen.c	FUNCTION_99	IF_6
0x15254	    0x890500000000	            mov dword [0x0401529a], eax 	     10909	screen.c	FUNCTION_99	IF_6
0x1525a	      0xe9ff060000	                           jmp 0x401599e	     10910	screen.c	FUNCTION_99	IF_6
0x1525f	    0x8b0500000000	            mov eax, dword [0x040152a5] 	     10917	screen.c	FUNCTION_99	IF_8
0x15265	          0x83e010	                           and eax, 0x10	     10917	screen.c	FUNCTION_99	IF_8
0x15268	            0x85c0	                           test eax, eax	     10917	screen.c	FUNCTION_99	IF_8
0x1526a	            0x7537	                           jne 0x40152e3	     10917	screen.c	FUNCTION_99	IF_8
0x1526c	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     10918	screen.c	FUNCTION_99	IF_8	CALL_4
0x15273	        0x488b4838	            mov rcx, qword [rax + 0x38] 	     10918	screen.c	FUNCTION_99	IF_8	CALL_4
0x15277	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     10918	screen.c	FUNCTION_99	IF_8	CALL_4
0x1527e	        0x488b4008	                mov rax, qword [rax + 8]	     10918	screen.c	FUNCTION_99	IF_8	CALL_4
0x15282	      0xba00000000	                              mov edx, 0	     10918	screen.c	FUNCTION_99	IF_8	CALL_4
0x15287	          0x4889ce	                            mov rsi, rcx	     10918	screen.c	FUNCTION_99	IF_8	CALL_4
0x1528a	          0x4889c7	                            mov rdi, rax	     10918	screen.c	FUNCTION_99	IF_8	CALL_4
0x1528d	      0xe800000000	                          call 0x40152d2	     10918	screen.c	FUNCTION_99	IF_8	CALL_4
0x15292	           0xfb600	                   movzx eax, byte [rax]	     10918	screen.c	FUNCTION_99	IF_8	CALL_4
0x15295	            0x84c0	                             test al, al	     10918	screen.c	FUNCTION_99	IF_8	CALL_4
0x15297	            0x750a	                           jne 0x40152e3	     10918	screen.c	FUNCTION_99	IF_8	CALL_4
0x15299	    0xc7856cffffff	               mov dword [rbp - 0x94], 1	     10919	screen.c	FUNCTION_99	IF_8
0x152a3	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     10924	screen.c	FUNCTION_99	CALL_5
0x152aa	          0x4889c7	                            mov rdi, rax	     10924	screen.c	FUNCTION_99	CALL_5
0x152ad	      0xe800000000	                          call 0x40152f2	     10924	screen.c	FUNCTION_99	CALL_5
0x152b2	    0x8b0500000000	            mov eax, dword [0x040152f8] 	     10925	screen.c	FUNCTION_99	IF_9
0x152b8	            0x85c0	                           test eax, eax	     10925	screen.c	FUNCTION_99	IF_9
0x152ba	     0xf8505010000	                           jne 0x4015405	     10925	screen.c	FUNCTION_99	IF_9
0x152c0	    0x83bd44ffffff	               cmp dword [rbp - 0xbc], 0	     10926	screen.c	FUNCTION_99	IF_9
0x152c7	     0xf85f8000000	                           jne 0x4015405	     10926	screen.c	FUNCTION_99	IF_9
0x152cd	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     10927	screen.c	FUNCTION_99	IF_9
0x152d4	        0x488b5038	            mov rdx, qword [rax + 0x38] 	     10927	screen.c	FUNCTION_99	IF_9
0x152d8	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     10927	screen.c	FUNCTION_99	IF_9
0x152df	    0x488b80480100	           mov rax, qword [rax + 0x148] 	     10927	screen.c	FUNCTION_99	IF_9
0x152e6	          0x4839c2	                            cmp rdx, rax	     10927	screen.c	FUNCTION_99	IF_9
0x152e9	     0xf85d6000000	                           jne 0x4015405	     10927	screen.c	FUNCTION_99	IF_9
0x152ef	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     10928	screen.c	FUNCTION_99	IF_9
0x152f6	          0x8b5040	            mov edx, dword [rax + 0x40] 	     10928	screen.c	FUNCTION_99	IF_9
0x152f9	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     10928	screen.c	FUNCTION_99	IF_9
0x15300	    0x8b8050010000	           mov eax, dword [rax + 0x150] 	     10928	screen.c	FUNCTION_99	IF_9
0x15306	            0x39c2	                            cmp edx, eax	     10928	screen.c	FUNCTION_99	IF_9
0x15308	     0xf85b7000000	                           jne 0x4015405	     10928	screen.c	FUNCTION_99	IF_9
0x1530e	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     10929	screen.c	FUNCTION_99	IF_9
0x15315	    0x8b90d8000000	            mov edx, dword [rax + 0xd8] 	     10929	screen.c	FUNCTION_99	IF_9
0x1531b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     10929	screen.c	FUNCTION_99	IF_9
0x15322	    0x8b8058010000	           mov eax, dword [rax + 0x158] 	     10929	screen.c	FUNCTION_99	IF_9
0x15328	            0x39c2	                            cmp edx, eax	     10929	screen.c	FUNCTION_99	IF_9
0x1532a	     0xf8595000000	                           jne 0x4015405	     10929	screen.c	FUNCTION_99	IF_9
0x15330	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     10931	screen.c	FUNCTION_99	IF_9
0x15337	          0x8b5044	            mov edx, dword [rax + 0x44] 	     10931	screen.c	FUNCTION_99	IF_9
0x1533a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     10931	screen.c	FUNCTION_99	IF_9
0x15341	    0x8b8054010000	           mov eax, dword [rax + 0x154] 	     10931	screen.c	FUNCTION_99	IF_9
0x15347	            0x39c2	                            cmp edx, eax	     10931	screen.c	FUNCTION_99	IF_9
0x15349	            0x757a	                           jne 0x4015405	     10931	screen.c	FUNCTION_99	IF_9
0x1534b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     10933	screen.c	FUNCTION_99	IF_9
0x15352	        0x488b5078	            mov rdx, qword [rax + 0x78] 	     10933	screen.c	FUNCTION_99	IF_9
0x15356	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     10933	screen.c	FUNCTION_99	IF_9
0x1535d	    0x488b80600100	           mov rax, qword [rax + 0x160] 	     10933	screen.c	FUNCTION_99	IF_9
0x15364	          0x4839c2	                            cmp rdx, rax	     10933	screen.c	FUNCTION_99	IF_9
0x15367	            0x755c	                           jne 0x4015405	     10933	screen.c	FUNCTION_99	IF_9
0x15369	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     10934	screen.c	FUNCTION_99	IF_9
0x15370	        0x488b4008	                mov rax, qword [rax + 8]	     10934	screen.c	FUNCTION_99	IF_9
0x15374	          0x488b10	                    mov rdx, qword [rax]	     10934	screen.c	FUNCTION_99	IF_9
0x15377	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     10934	screen.c	FUNCTION_99	IF_9
0x1537e	    0x488b80680100	           mov rax, qword [rax + 0x168] 	     10934	screen.c	FUNCTION_99	IF_9
0x15385	          0x4839c2	                            cmp rdx, rax	     10934	screen.c	FUNCTION_99	IF_9
0x15388	            0x753b	                           jne 0x4015405	     10934	screen.c	FUNCTION_99	IF_9
0x1538a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     10936	screen.c	FUNCTION_99	IF_9
0x15391	    0x8b9084000000	            mov edx, dword [rax + 0x84] 	     10936	screen.c	FUNCTION_99	IF_9
0x15397	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     10936	screen.c	FUNCTION_99	IF_9
0x1539e	    0x8b8070010000	           mov eax, dword [rax + 0x170] 	     10936	screen.c	FUNCTION_99	IF_9
0x153a4	            0x39c2	                            cmp edx, eax	     10936	screen.c	FUNCTION_99	IF_9
0x153a6	            0x751d	                           jne 0x4015405	     10936	screen.c	FUNCTION_99	IF_9
0x153a8	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     10938	screen.c	FUNCTION_99	IF_9
0x153af	     0xfb680740100	          movzx eax, byte [rax + 0x174] 	     10938	screen.c	FUNCTION_99	IF_9
0x153b6	           0xfbec0	                           movsx eax, al	     10938	screen.c	FUNCTION_99	IF_9
0x153b9	    0x3b856cffffff	             cmp eax, dword [rbp - 0x94]	     10938	screen.c	FUNCTION_99	IF_9
0x153bf	     0xf8499050000	                            je 0x401599e	     10938	screen.c	FUNCTION_99	IF_9
0x153c5	      0xe800000000	                          call 0x401540a	     10940	screen.c	FUNCTION_99	IF_9	CALL_6
0x153ca	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     10941	screen.c	FUNCTION_99	IF_9	IF_10
0x153d1	    0x8b80a4000000	            mov eax, dword [rax + 0xa4] 	     10941	screen.c	FUNCTION_99	IF_9	IF_10
0x153d7	            0x85c0	                           test eax, eax	     10941	screen.c	FUNCTION_99	IF_9	IF_10
0x153d9	            0x7475	                            je 0x4015490	     10941	screen.c	FUNCTION_99	IF_9	IF_10
0x153db	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     10943	screen.c	FUNCTION_99	IF_9	IF_10	CALL_7
0x153e2	    0x8b909c000000	            mov edx, dword [rax + 0x9c] 	     10943	screen.c	FUNCTION_99	IF_9	IF_10	CALL_7
0x153e8	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     10943	screen.c	FUNCTION_99	IF_9	IF_10	CALL_7
0x153ef	    0x8b80a8010000	           mov eax, dword [rax + 0x1a8] 	     10943	screen.c	FUNCTION_99	IF_9	IF_10	CALL_7
0x153f5	             0x1c2	                            add edx, eax	     10943	screen.c	FUNCTION_99	IF_9	IF_10	CALL_7
0x153f7	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     10943	screen.c	FUNCTION_99	IF_9	IF_10	CALL_7
0x153fe	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	     10943	screen.c	FUNCTION_99	IF_9	IF_10	CALL_7
0x15404	             0x1d0	                            add eax, edx	     10943	screen.c	FUNCTION_99	IF_9	IF_10	CALL_7
0x15406	    0x898564ffffff	             mov dword [rbp - 0x9c], eax	     10943	screen.c	FUNCTION_99	IF_9	IF_10	CALL_7
0x1540c	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	     10944	screen.c	FUNCTION_99	IF_9	IF_10	CALL_8
0x15413	    0x488d855cffff	                   lea rax, [rbp - 0xa4]	     10944	screen.c	FUNCTION_99	IF_9	IF_10	CALL_8
0x1541a	          0x4889d6	                            mov rsi, rdx	     10944	screen.c	FUNCTION_99	IF_9	IF_10	CALL_8
0x1541d	          0x4889c7	                            mov rdi, rax	     10944	screen.c	FUNCTION_99	IF_9	IF_10	CALL_8
0x15420	      0xe88cf7ffff	                call sym.fillchar_status	     10944	screen.c	FUNCTION_99	IF_9	IF_10	CALL_8
0x15425	    0x898568ffffff	             mov dword [rbp - 0x98], eax	     10944	screen.c	FUNCTION_99	IF_9	IF_10	CALL_8
0x1542b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     10945	screen.c	FUNCTION_99	IF_9	IF_10
0x15432	    0x8b80a8000000	            mov eax, dword [rax + 0xa8] 	     10945	screen.c	FUNCTION_99	IF_9	IF_10
0x15438	    0x89857cffffff	             mov dword [rbp - 0x84], eax	     10945	screen.c	FUNCTION_99	IF_9	IF_10
0x1543e	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     10946	screen.c	FUNCTION_99	IF_9	IF_10
0x15445	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	     10946	screen.c	FUNCTION_99	IF_9	IF_10
0x1544b	          0x894580	             mov dword [rbp - 0x80], eax	     10946	screen.c	FUNCTION_99	IF_9	IF_10
0x1544e	            0xeb38	                           jmp 0x40154c8	     10946	screen.c	FUNCTION_99	IF_9	IF_10
0x15450	    0x488b05000000	            mov rax, qword [0x04015497] 	     10950	screen.c	FUNCTION_99	IF_9	ELSE_1
0x15457	          0x83e801	                              sub eax, 1	     10950	screen.c	FUNCTION_99	IF_9	ELSE_1
0x1545a	    0x898564ffffff	             mov dword [rbp - 0x9c], eax	     10950	screen.c	FUNCTION_99	IF_9	ELSE_1
0x15460	    0xc78568ffffff	           mov dword [rbp - 0x98], 0x20 	     10951	screen.c	FUNCTION_99	IF_9	ELSE_1
0x1546a	    0xc7855cffffff	               mov dword [rbp - 0xa4], 0	     10952	screen.c	FUNCTION_99	IF_9	ELSE_1
0x15474	    0x488b05000000	            mov rax, qword [0x040154bb] 	     10953	screen.c	FUNCTION_99	IF_9	ELSE_1
0x1547b	          0x894580	             mov dword [rbp - 0x80], eax	     10953	screen.c	FUNCTION_99	IF_9	ELSE_1
0x1547e	    0xc7857cffffff	               mov dword [rbp - 0x84], 0	     10954	screen.c	FUNCTION_99	IF_9	ELSE_1
0x15488	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     10958	screen.c	FUNCTION_99	IF_9
0x1548f	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	     10958	screen.c	FUNCTION_99	IF_9
0x15495	    0x898560ffffff	             mov dword [rbp - 0xa0], eax	     10958	screen.c	FUNCTION_99	IF_9
0x1549b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     10959	screen.c	FUNCTION_99	IF_9	IF_11
0x154a2	    0x8b8034020000	           mov eax, dword [rax + 0x234] 	     10959	screen.c	FUNCTION_99	IF_9	IF_11
0x154a8	            0x85c0	                           test eax, eax	     10959	screen.c	FUNCTION_99	IF_9	IF_11
0x154aa	            0x745b	                            je 0x4015547	     10959	screen.c	FUNCTION_99	IF_9	IF_11
0x154ac	    0x8b0500000000	            mov eax, dword [0x040154f2] 	     10959	screen.c	FUNCTION_99	IF_9	IF_11
0x154b2	            0x85c0	                           test eax, eax	     10959	screen.c	FUNCTION_99	IF_9	IF_11
0x154b4	            0x7551	                           jne 0x4015547	     10959	screen.c	FUNCTION_99	IF_9	IF_11
0x154b6	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     10961	screen.c	FUNCTION_99	IF_9	IF_11
0x154bd	    0xc78034020000	              mov dword [rax + 0x234], 0	     10961	screen.c	FUNCTION_99	IF_9	IF_11
0x154c7	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     10962	screen.c	FUNCTION_99	IF_9	IF_11	CALL_9
0x154ce	        0x488d7038	                   lea rsi, [rax + 0x38]	     10962	screen.c	FUNCTION_99	IF_9	IF_11	CALL_9
0x154d2	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	     10962	screen.c	FUNCTION_99	IF_9	IF_11	CALL_9
0x154d9	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     10962	screen.c	FUNCTION_99	IF_9	IF_11	CALL_9
0x154e0	    0x41b800000000	                              mov r8d, 0	     10962	screen.c	FUNCTION_99	IF_9	IF_11	CALL_9
0x154e6	          0x4889d1	                            mov rcx, rdx	     10962	screen.c	FUNCTION_99	IF_9	IF_11	CALL_9
0x154e9	      0xba00000000	                              mov edx, 0	     10962	screen.c	FUNCTION_99	IF_9	IF_11	CALL_9
0x154ee	          0x4889c7	                            mov rdi, rax	     10962	screen.c	FUNCTION_99	IF_9	IF_11	CALL_9
0x154f1	      0xe800000000	                          call 0x4015536	     10962	screen.c	FUNCTION_99	IF_9	IF_11	CALL_9
0x154f6	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     10963	screen.c	FUNCTION_99	IF_9	IF_11
0x154fd	    0xc78034020000	              mov dword [rax + 0x234], 1	     10963	screen.c	FUNCTION_99	IF_9	IF_11
0x15507	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     10971	screen.c	FUNCTION_99	IF_9
0x1550e	        0x488b4008	                mov rax, qword [rax + 8]	     10971	screen.c	FUNCTION_99	IF_9
0x15512	          0x8b4010	            mov eax, dword [rax + 0x10] 	     10971	screen.c	FUNCTION_99	IF_9
0x15515	          0x83e001	                              and eax, 1	     10971	screen.c	FUNCTION_99	IF_9
0x15518	            0x85c0	                           test eax, eax	     10970	screen.c	FUNCTION_99	IF_9	CALL_10
0x1551a	            0x750d	                           jne 0x4015569	     10970	screen.c	FUNCTION_99	IF_9	CALL_10
0x1551c	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     10970	screen.c	FUNCTION_99	IF_9	CALL_10
0x15523	        0x488b4038	            mov rax, qword [rax + 0x38] 	     10970	screen.c	FUNCTION_99	IF_9	CALL_10
0x15527	            0xeb05	                           jmp 0x401556e	     10970	screen.c	FUNCTION_99	IF_9	CALL_10
0x15529	      0xb800000000	                              mov eax, 0	     10970	screen.c	FUNCTION_99	IF_9	CALL_10
0x1552e	        0x488d7d90	                   lea rdi, [rbp - 0x70]	     10970	screen.c	FUNCTION_99	IF_9	CALL_10
0x15532	          0x4889c1	                            mov rcx, rax	     10970	screen.c	FUNCTION_99	IF_9	CALL_10
0x15535	      0xba00000000	                              mov edx, 0	     10970	screen.c	FUNCTION_99	IF_9	CALL_10
0x1553a	      0xbe46000000	                           mov esi, 0x46	     10970	screen.c	FUNCTION_99	IF_9	CALL_10
0x1553f	      0xb800000000	                              mov eax, 0	     10970	screen.c	FUNCTION_99	IF_9	CALL_10
0x15544	      0xe800000000	                          call 0x4015589	     10970	screen.c	FUNCTION_99	IF_9	CALL_10
0x15549	        0x488d4590	                   lea rax, [rbp - 0x70]	     10974	screen.c	FUNCTION_99	IF_9	CALL_11
0x1554d	          0x4889c7	                            mov rdi, rax	     10974	screen.c	FUNCTION_99	IF_9	CALL_11
0x15550	      0xe800000000	                          call 0x4015595	     10974	screen.c	FUNCTION_99	IF_9	CALL_11
0x15555	        0x48894588	             mov qword [rbp - 0x78], rax	     10974	screen.c	FUNCTION_99	IF_9	CALL_11
0x15559	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	     10977	screen.c	FUNCTION_99	IF_9
0x1555f	          0x8d4801	                      lea ecx, [rax + 1]	     10975	screen.c	FUNCTION_99	IF_9	CALL_12
0x15562	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	     10975	screen.c	FUNCTION_99	IF_9	CALL_12
0x15569	            0x750f	                           jne 0x40155ba	     10975	screen.c	FUNCTION_99	IF_9	CALL_12
0x1556b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     10976	screen.c	FUNCTION_99	IF_9
0x15572	          0x8b4040	            mov eax, dword [rax + 0x40] 	     10976	screen.c	FUNCTION_99	IF_9
0x15575	          0x8d5001	                      lea edx, [rax + 1]	     10975	screen.c	FUNCTION_99	IF_9	CALL_12
0x15578	            0xeb05	                           jmp 0x40155bf	     10975	screen.c	FUNCTION_99	IF_9	CALL_12
0x1557a	      0xba00000000	                              mov edx, 0	     10975	screen.c	FUNCTION_99	IF_9	CALL_12
0x1557f	      0xb846000000	                           mov eax, 0x46	     10975	screen.c	FUNCTION_99	IF_9	CALL_12
0x15584	        0x482b4588	             sub rax, qword [rbp - 0x78]	     10975	screen.c	FUNCTION_99	IF_9	CALL_12
0x15588	        0x488d7d90	                   lea rdi, [rbp - 0x70]	     10975	screen.c	FUNCTION_99	IF_9	CALL_12
0x1558c	        0x488b7588	             mov rsi, qword [rbp - 0x78]	     10975	screen.c	FUNCTION_99	IF_9	CALL_12
0x15590	          0x4801f7	                            add rdi, rsi	     10975	screen.c	FUNCTION_99	IF_9	CALL_12
0x15593	          0x4889c6	                            mov rsi, rax	     10975	screen.c	FUNCTION_99	IF_9	CALL_12
0x15596	      0xe800000000	                          call 0x40155db	     10975	screen.c	FUNCTION_99	IF_9	CALL_12
0x1559b	        0x488d4590	                   lea rax, [rbp - 0x70]	     10984	screen.c	FUNCTION_99	IF_9	CALL_13
0x1559f	          0x4889c7	                            mov rdi, rax	     10984	screen.c	FUNCTION_99	IF_9	CALL_13
0x155a2	      0xe800000000	                          call 0x40155e7	     10984	screen.c	FUNCTION_99	IF_9	CALL_13
0x155a7	    0x898570ffffff	             mov dword [rbp - 0x90], eax	     10984	screen.c	FUNCTION_99	IF_9	CALL_13
0x155ad	      0xb845000000	                           mov eax, 0x45	     10985	screen.c	FUNCTION_99	IF_9	CALL_14
0x155b2	    0x2b8570ffffff	             sub eax, dword [rbp - 0x90]	     10985	screen.c	FUNCTION_99	IF_9	CALL_14
0x155b8	            0x89c2	                            mov edx, eax	     10985	screen.c	FUNCTION_99	IF_9	CALL_14
0x155ba	    0x8b8570ffffff	             mov eax, dword [rbp - 0x90]	     10985	screen.c	FUNCTION_99	IF_9	CALL_14
0x155c0	            0x4898	                                    cdqe	     10985	screen.c	FUNCTION_99	IF_9	CALL_14
0x155c2	        0x488d4801	                      lea rcx, [rax + 1]	     10985	screen.c	FUNCTION_99	IF_9	CALL_14
0x155c6	        0x488d4590	                   lea rax, [rbp - 0x70]	     10985	screen.c	FUNCTION_99	IF_9	CALL_14
0x155ca	          0x4801c1	                            add rcx, rax	     10985	screen.c	FUNCTION_99	IF_9	CALL_14
0x155cd	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     10985	screen.c	FUNCTION_99	IF_9	CALL_14
0x155d4	          0x4889ce	                            mov rsi, rcx	     10985	screen.c	FUNCTION_99	IF_9	CALL_14
0x155d7	          0x4889c7	                            mov rdi, rax	     10985	screen.c	FUNCTION_99	IF_9	CALL_14
0x155da	      0xe800000000	                          call 0x401561f	     10985	screen.c	FUNCTION_99	IF_9	CALL_14
0x155df	    0x8b8570ffffff	             mov eax, dword [rbp - 0x90]	     10986	screen.c	FUNCTION_99	IF_9	CALL_15
0x155e5	            0x4898	                                    cdqe	     10986	screen.c	FUNCTION_99	IF_9	CALL_15
0x155e7	        0x488d5001	                      lea rdx, [rax + 1]	     10986	screen.c	FUNCTION_99	IF_9	CALL_15
0x155eb	        0x488d4590	                   lea rax, [rbp - 0x70]	     10986	screen.c	FUNCTION_99	IF_9	CALL_15
0x155ef	          0x4801d0	                            add rax, rdx	     10986	screen.c	FUNCTION_99	IF_9	CALL_15
0x155f2	          0x4889c7	                            mov rdi, rax	     10986	screen.c	FUNCTION_99	IF_9	CALL_15
0x155f5	      0xe800000000	                          call 0x401563a	     10986	screen.c	FUNCTION_99	IF_9	CALL_15
0x155fa	            0x89c2	                            mov edx, eax	     10986	screen.c	FUNCTION_99	IF_9	CALL_15
0x155fc	    0x8b8570ffffff	             mov eax, dword [rbp - 0x90]	     10986	screen.c	FUNCTION_99	IF_9	CALL_15
0x15602	             0x1d0	                            add eax, edx	     10986	screen.c	FUNCTION_99	IF_9	CALL_15
0x15604	    0x898574ffffff	             mov dword [rbp - 0x8c], eax	     10986	screen.c	FUNCTION_99	IF_9	CALL_15
0x1560a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     10987	screen.c	FUNCTION_99	IF_9	IF_12
0x15611	    0x8b80a4000000	            mov eax, dword [rax + 0xa4] 	     10987	screen.c	FUNCTION_99	IF_9	IF_12
0x15617	            0x85c0	                           test eax, eax	     10987	screen.c	FUNCTION_99	IF_9	IF_12
0x15619	            0x7507	                           jne 0x4015662	     10987	screen.c	FUNCTION_99	IF_9	IF_12
0x1561b	    0x838574ffffff	               add dword [rbp - 0x8c], 1	     10988	screen.c	FUNCTION_99	IF_9	IF_12
0x15622	          0x8b4580	             mov eax, dword [rbp - 0x80]	     10989	screen.c	FUNCTION_99	IF_9
0x15625	    0x488b15000000	            mov rdx, qword [0x0401566c] 	     10989	screen.c	FUNCTION_99	IF_9
0x1562c	            0x29d0	                            sub eax, edx	     10989	screen.c	FUNCTION_99	IF_9
0x1562e	            0x89c2	                            mov edx, eax	     10989	screen.c	FUNCTION_99	IF_9
0x15630	    0x8b0500000000	            mov eax, dword [0x04015676] 	     10989	screen.c	FUNCTION_99	IF_9
0x15636	             0x1d0	                            add eax, edx	     10989	screen.c	FUNCTION_99	IF_9
0x15638	    0x898578ffffff	             mov dword [rbp - 0x88], eax	     10989	screen.c	FUNCTION_99	IF_9
0x1563e	    0x83bd78ffffff	               cmp dword [rbp - 0x88], 0	     10990	screen.c	FUNCTION_99	IF_9	IF_13
0x15645	            0x790a	                           jns 0x4015691	     10990	screen.c	FUNCTION_99	IF_9	IF_13
0x15647	    0xc78578ffffff	               mov dword [rbp - 0x88], 0	     10991	screen.c	FUNCTION_99	IF_9	IF_13
0x15651	          0x8b4580	             mov eax, dword [rbp - 0x80]	     10994	screen.c	FUNCTION_99	IF_9	IF_14
0x15654	          0x83c001	                              add eax, 1	     10994	screen.c	FUNCTION_99	IF_9	IF_14
0x15657	            0x89c2	                            mov edx, eax	     10994	screen.c	FUNCTION_99	IF_9	IF_14
0x15659	          0xc1ea1f	                           shr edx, 0x1f	     10994	screen.c	FUNCTION_99	IF_9	IF_14
0x1565c	             0x1d0	                            add eax, edx	     10994	screen.c	FUNCTION_99	IF_9	IF_14
0x1565e	            0xd1f8	                              sar eax, 1	     10994	screen.c	FUNCTION_99	IF_9	IF_14
0x15660	    0x3b8578ffffff	             cmp eax, dword [rbp - 0x88]	     10994	screen.c	FUNCTION_99	IF_9	IF_14
0x15666	            0x7e15	                           jle 0x40156bd	     10994	screen.c	FUNCTION_99	IF_9	IF_14
0x15668	          0x8b4580	             mov eax, dword [rbp - 0x80]	     10995	screen.c	FUNCTION_99	IF_9	IF_14
0x1566b	          0x83c001	                              add eax, 1	     10995	screen.c	FUNCTION_99	IF_9	IF_14
0x1566e	            0x89c2	                            mov edx, eax	     10995	screen.c	FUNCTION_99	IF_9	IF_14
0x15670	          0xc1ea1f	                           shr edx, 0x1f	     10995	screen.c	FUNCTION_99	IF_9	IF_14
0x15673	             0x1d0	                            add eax, edx	     10995	screen.c	FUNCTION_99	IF_9	IF_14
0x15675	            0xd1f8	                              sar eax, 1	     10995	screen.c	FUNCTION_99	IF_9	IF_14
0x15677	    0x898578ffffff	             mov dword [rbp - 0x88], eax	     10995	screen.c	FUNCTION_99	IF_9	IF_14
0x1567d	    0x8b9578ffffff	             mov edx, dword [rbp - 0x88]	     10996	screen.c	FUNCTION_99	IF_9	IF_15
0x15683	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	     10996	screen.c	FUNCTION_99	IF_9	IF_15
0x15689	             0x1d0	                            add eax, edx	     10996	screen.c	FUNCTION_99	IF_9	IF_15
0x1568b	          0x3b4580	             cmp eax, dword [rbp - 0x80]	     10996	screen.c	FUNCTION_99	IF_9	IF_15
0x1568e	     0xf8da9000000	                           jge 0x401577d	     10996	screen.c	FUNCTION_99	IF_9	IF_15
0x15694	            0xeb58	                           jmp 0x401572e	     10999	screen.c	FUNCTION_99	IF_9	IF_15	WHILE_1
0x15696	    0x8b0500000000	            mov eax, dword [0x040156dc] 	     11002	screen.c	FUNCTION_99	IF_9	IF_15	WHILE_1	IF_16
0x1569c	            0x85c0	                           test eax, eax	     11002	screen.c	FUNCTION_99	IF_9	IF_15	WHILE_1	IF_16
0x1569e	            0x742c	                            je 0x401570c	     11002	screen.c	FUNCTION_99	IF_9	IF_15	WHILE_1	IF_16
0x156a0	    0x488b05000000	            mov rax, qword [0x040156e7] 	     11003	screen.c	FUNCTION_99	IF_9	IF_15	WHILE_1	IF_16
0x156a7	    0x8b9570ffffff	             mov edx, dword [rbp - 0x90]	     11003	screen.c	FUNCTION_99	IF_9	IF_15	WHILE_1	IF_16
0x156ad	          0x4863d2	                         movsxd rdx, edx	     11003	screen.c	FUNCTION_99	IF_9	IF_15	WHILE_1	IF_16
0x156b0	        0x488d4d90	                   lea rcx, [rbp - 0x70]	     11003	screen.c	FUNCTION_99	IF_9	IF_15	WHILE_1	IF_16
0x156b4	          0x4801d1	                            add rcx, rdx	     11003	screen.c	FUNCTION_99	IF_9	IF_15	WHILE_1	IF_16
0x156b7	    0x8b9568ffffff	             mov edx, dword [rbp - 0x98]	     11003	screen.c	FUNCTION_99	IF_9	IF_15	WHILE_1	IF_16
0x156bd	          0x4889ce	                            mov rsi, rcx	     11003	screen.c	FUNCTION_99	IF_9	IF_15	WHILE_1	IF_16
0x156c0	            0x89d7	                            mov edi, edx	     11003	screen.c	FUNCTION_99	IF_9	IF_15	WHILE_1	IF_16
0x156c2	            0xffd0	                                call rax	     11003	screen.c	FUNCTION_99	IF_9	IF_15	WHILE_1	IF_16
0x156c4	     0x18570ffffff	             add dword [rbp - 0x90], eax	     11003	screen.c	FUNCTION_99	IF_9	IF_15	WHILE_1	IF_16
0x156ca	            0xeb1b	                           jmp 0x4015727	     11003	screen.c	FUNCTION_99	IF_9	IF_15	WHILE_1	IF_16
0x156cc	    0x8b8570ffffff	             mov eax, dword [rbp - 0x90]	     11006	screen.c	FUNCTION_99	IF_9	IF_15	WHILE_1	ELSE_2
0x156d2	          0x8d5001	                      lea edx, [rax + 1]	     11006	screen.c	FUNCTION_99	IF_9	IF_15	WHILE_1	ELSE_2
0x156d5	    0x899570ffffff	             mov dword [rbp - 0x90], edx	     11006	screen.c	FUNCTION_99	IF_9	IF_15	WHILE_1	ELSE_2
0x156db	    0x8b9568ffffff	             mov edx, dword [rbp - 0x98]	     11006	screen.c	FUNCTION_99	IF_9	IF_15	WHILE_1	ELSE_2
0x156e1	            0x4898	                                    cdqe	     11006	screen.c	FUNCTION_99	IF_9	IF_15	WHILE_1	ELSE_2
0x156e3	        0x88540590	         mov byte [rbp + rax - 0x70], dl	     11006	screen.c	FUNCTION_99	IF_9	IF_15	WHILE_1	ELSE_2
0x156e7	    0x838574ffffff	               add dword [rbp - 0x8c], 1	     11007	screen.c	FUNCTION_99	IF_9	IF_15	WHILE_1
0x156ee	    0x8b9578ffffff	             mov edx, dword [rbp - 0x88]	     10999	screen.c	FUNCTION_99	IF_9	IF_15	WHILE_1
0x156f4	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	     10999	screen.c	FUNCTION_99	IF_9	IF_15	WHILE_1
0x156fa	             0x1d0	                            add eax, edx	     10999	screen.c	FUNCTION_99	IF_9	IF_15	WHILE_1
0x156fc	          0x3b4580	             cmp eax, dword [rbp - 0x80]	     10999	screen.c	FUNCTION_99	IF_9	IF_15	WHILE_1
0x156ff	            0x7d0e	                           jge 0x401574f	     10999	screen.c	FUNCTION_99	IF_9	IF_15	WHILE_1
0x15701	    0x8b8570ffffff	             mov eax, dword [rbp - 0x90]	     10999	screen.c	FUNCTION_99	IF_9	IF_15	WHILE_1
0x15707	          0x83c004	                              add eax, 4	     10999	screen.c	FUNCTION_99	IF_9	IF_15	WHILE_1
0x1570a	          0x83f845	                           cmp eax, 0x45	     10999	screen.c	FUNCTION_99	IF_9	IF_15	WHILE_1
0x1570d	            0x7e87	                           jle 0x40156d6	     10999	screen.c	FUNCTION_99	IF_9	IF_15	WHILE_1
0x1570f	      0xb846000000	                           mov eax, 0x46	     11009	screen.c	FUNCTION_99	IF_9	IF_15	CALL_16
0x15714	    0x2b8570ffffff	             sub eax, dword [rbp - 0x90]	     11009	screen.c	FUNCTION_99	IF_9	IF_15	CALL_16
0x1571a	            0x89c2	                            mov edx, eax	     11009	screen.c	FUNCTION_99	IF_9	IF_15	CALL_16
0x1571c	    0x8b8570ffffff	             mov eax, dword [rbp - 0x90]	     11009	screen.c	FUNCTION_99	IF_9	IF_15	CALL_16
0x15722	            0x4898	                                    cdqe	     11009	screen.c	FUNCTION_99	IF_9	IF_15	CALL_16
0x15724	        0x488d4d90	                   lea rcx, [rbp - 0x70]	     11009	screen.c	FUNCTION_99	IF_9	IF_15	CALL_16
0x15728	          0x4801c1	                            add rcx, rax	     11009	screen.c	FUNCTION_99	IF_9	IF_15	CALL_16
0x1572b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     11009	screen.c	FUNCTION_99	IF_9	IF_15	CALL_16
0x15732	          0x4889ce	                            mov rsi, rcx	     11009	screen.c	FUNCTION_99	IF_9	IF_15	CALL_16
0x15735	          0x4889c7	                            mov rdi, rax	     11009	screen.c	FUNCTION_99	IF_9	IF_15	CALL_16
0x15738	      0xe800000000	                          call 0x401577d	     11009	screen.c	FUNCTION_99	IF_9	IF_15	CALL_16
0x1573d	    0x8b0500000000	            mov eax, dword [0x04015783] 	     11013	screen.c	FUNCTION_99	IF_9	IF_17
0x15743	            0x85c0	                           test eax, eax	     11013	screen.c	FUNCTION_99	IF_9	IF_17
0x15745	     0xf848f000000	                            je 0x401581a	     11013	screen.c	FUNCTION_99	IF_9	IF_17
0x1574b	    0xc78574ffffff	               mov dword [rbp - 0x8c], 0	     11015	screen.c	FUNCTION_99	IF_9	IF_17
0x15755	    0xc78570ffffff	               mov dword [rbp - 0x90], 0	     11016	screen.c	FUNCTION_99	IF_9	IF_17	FOR_1
0x1575f	            0xeb66	                           jmp 0x4015807	     11016	screen.c	FUNCTION_99	IF_9	IF_17	FOR_1
0x15761	    0x488b05000000	            mov rax, qword [0x040157a8] 	     11018	screen.c	FUNCTION_99	IF_9	IF_17	FOR_1
0x15768	    0x8b9570ffffff	             mov edx, dword [rbp - 0x90]	     11018	screen.c	FUNCTION_99	IF_9	IF_17	FOR_1
0x1576e	          0x4863d2	                         movsxd rdx, edx	     11018	screen.c	FUNCTION_99	IF_9	IF_17	FOR_1
0x15771	        0x488d4d90	                   lea rcx, [rbp - 0x70]	     11018	screen.c	FUNCTION_99	IF_9	IF_17	FOR_1
0x15775	          0x4801ca	                            add rdx, rcx	     11018	screen.c	FUNCTION_99	IF_9	IF_17	FOR_1
0x15778	          0x4889d7	                            mov rdi, rdx	     11018	screen.c	FUNCTION_99	IF_9	IF_17	FOR_1
0x1577b	            0xffd0	                                call rax	     11018	screen.c	FUNCTION_99	IF_9	IF_17	FOR_1
0x1577d	     0x18574ffffff	             add dword [rbp - 0x8c], eax	     11018	screen.c	FUNCTION_99	IF_9	IF_17	FOR_1
0x15783	    0x8b9578ffffff	             mov edx, dword [rbp - 0x88]	     11019	screen.c	FUNCTION_99	IF_9	IF_17	FOR_1	IF_18
0x15789	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	     11019	screen.c	FUNCTION_99	IF_9	IF_17	FOR_1	IF_18
0x1578f	             0x1d0	                            add eax, edx	     11019	screen.c	FUNCTION_99	IF_9	IF_17	FOR_1	IF_18
0x15791	          0x3b4580	             cmp eax, dword [rbp - 0x80]	     11019	screen.c	FUNCTION_99	IF_9	IF_17	FOR_1	IF_18
0x15794	            0x7e0f	                           jle 0x40157e5	     11019	screen.c	FUNCTION_99	IF_9	IF_17	FOR_1	IF_18
0x15796	    0x8b8570ffffff	             mov eax, dword [rbp - 0x90]	     11021	screen.c	FUNCTION_99	IF_9	IF_17	FOR_1	IF_18
0x1579c	            0x4898	                                    cdqe	     11021	screen.c	FUNCTION_99	IF_9	IF_17	FOR_1	IF_18
0x1579e	      0xc644059000	          mov byte [rbp + rax - 0x70], 0	     11021	screen.c	FUNCTION_99	IF_9	IF_17	FOR_1	IF_18
0x157a3	            0xeb60	                           jmp 0x4015845	     11022	screen.c	FUNCTION_99	IF_9	IF_17	FOR_1	IF_18
0x157a5	    0x488b05000000	            mov rax, qword [0x040157ec] 	     11016	screen.c	FUNCTION_99	IF_9	IF_17	FOR_1
0x157ac	    0x8b9570ffffff	             mov edx, dword [rbp - 0x90]	     11016	screen.c	FUNCTION_99	IF_9	IF_17	FOR_1
0x157b2	          0x4863d2	                         movsxd rdx, edx	     11016	screen.c	FUNCTION_99	IF_9	IF_17	FOR_1
0x157b5	        0x488d4d90	                   lea rcx, [rbp - 0x70]	     11016	screen.c	FUNCTION_99	IF_9	IF_17	FOR_1
0x157b9	          0x4801ca	                            add rdx, rcx	     11016	screen.c	FUNCTION_99	IF_9	IF_17	FOR_1
0x157bc	          0x4889d7	                            mov rdi, rdx	     11016	screen.c	FUNCTION_99	IF_9	IF_17	FOR_1
0x157bf	            0xffd0	                                call rax	     11016	screen.c	FUNCTION_99	IF_9	IF_17	FOR_1
0x157c1	     0x18570ffffff	             add dword [rbp - 0x90], eax	     11016	screen.c	FUNCTION_99	IF_9	IF_17	FOR_1
0x157c7	    0x8b8570ffffff	             mov eax, dword [rbp - 0x90]	     11016	screen.c	FUNCTION_99	IF_9	IF_17	FOR_1
0x157cd	            0x4898	                                    cdqe	     11016	screen.c	FUNCTION_99	IF_9	IF_17	FOR_1
0x157cf	       0xfb6440590	      movzx eax, byte [rbp + rax - 0x70]	     11016	screen.c	FUNCTION_99	IF_9	IF_17	FOR_1
0x157d4	            0x84c0	                             test al, al	     11016	screen.c	FUNCTION_99	IF_9	IF_17	FOR_1
0x157d6	            0x7589	                           jne 0x40157a1	     11016	screen.c	FUNCTION_99	IF_9	IF_17	FOR_1
0x157d8	            0xeb2b	                           jmp 0x4015845	     11016	screen.c	FUNCTION_99	IF_9	IF_17	FOR_1
0x157da	        0x488d4590	                   lea rax, [rbp - 0x70]	     11028	screen.c	FUNCTION_99	IF_9	ELSE_3	IF_19	CALL_17
0x157de	          0x4889c7	                            mov rdi, rax	     11028	screen.c	FUNCTION_99	IF_9	ELSE_3	IF_19	CALL_17
0x157e1	      0xe800000000	                          call 0x4015826	     11028	screen.c	FUNCTION_99	IF_9	ELSE_3	IF_19	CALL_17
0x157e6	            0x89c2	                            mov edx, eax	     11028	screen.c	FUNCTION_99	IF_9	ELSE_3	IF_19	CALL_17
0x157e8	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	     11028	screen.c	FUNCTION_99	IF_9	ELSE_3	IF_19	CALL_17
0x157ee	             0x1d0	                            add eax, edx	     11028	screen.c	FUNCTION_99	IF_9	ELSE_3	IF_19	CALL_17
0x157f0	          0x3b4580	             cmp eax, dword [rbp - 0x80]	     11028	screen.c	FUNCTION_99	IF_9	ELSE_3	IF_19	CALL_17
0x157f3	            0x7e10	                           jle 0x4015845	     11028	screen.c	FUNCTION_99	IF_9	ELSE_3	IF_19	CALL_17
0x157f5	          0x8b4580	             mov eax, dword [rbp - 0x80]	     11029	screen.c	FUNCTION_99	IF_9	ELSE_3	IF_19
0x157f8	    0x2b8578ffffff	             sub eax, dword [rbp - 0x88]	     11029	screen.c	FUNCTION_99	IF_9	ELSE_3	IF_19
0x157fe	            0x4898	                                    cdqe	     11029	screen.c	FUNCTION_99	IF_9	ELSE_3	IF_19
0x15800	      0xc644059000	          mov byte [rbp + rax - 0x70], 0	     11029	screen.c	FUNCTION_99	IF_9	ELSE_3	IF_19
0x15805	    0x8b955cffffff	             mov edx, dword [rbp - 0xa4]	     11031	screen.c	FUNCTION_99	IF_9	CALL_18
0x1580b	    0x8b8d78ffffff	             mov ecx, dword [rbp - 0x88]	     11031	screen.c	FUNCTION_99	IF_9	CALL_18
0x15811	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	     11031	screen.c	FUNCTION_99	IF_9	CALL_18
0x15817	          0x8d3c01	                    lea edi, [rcx + rax]	     11031	screen.c	FUNCTION_99	IF_9	CALL_18
0x1581a	    0x8bb564ffffff	             mov esi, dword [rbp - 0x9c]	     11031	screen.c	FUNCTION_99	IF_9	CALL_18
0x15820	        0x488d4590	                   lea rax, [rbp - 0x70]	     11031	screen.c	FUNCTION_99	IF_9	CALL_18
0x15824	            0x89d1	                            mov ecx, edx	     11031	screen.c	FUNCTION_99	IF_9	CALL_18
0x15826	            0x89fa	                            mov edx, edi	     11031	screen.c	FUNCTION_99	IF_9	CALL_18
0x15828	          0x4889c7	                            mov rdi, rax	     11031	screen.c	FUNCTION_99	IF_9	CALL_18
0x1582b	      0xe800000000	                          call 0x4015870	     11031	screen.c	FUNCTION_99	IF_9	CALL_18
0x15830	    0x8b0500000000	            mov eax, dword [0x04015876] 	     11032	screen.c	FUNCTION_99	IF_9
0x15836	    0x898570ffffff	             mov dword [rbp - 0x90], eax	     11032	screen.c	FUNCTION_99	IF_9
0x1583c	    0x8b9d5cffffff	             mov ebx, dword [rbp - 0xa4]	     11033	screen.c	FUNCTION_99	IF_9	CALL_19
0x15842	    0x8b957cffffff	             mov edx, dword [rbp - 0x84]	     11033	screen.c	FUNCTION_99	IF_9	CALL_19
0x15848	          0x8b4580	             mov eax, dword [rbp - 0x80]	     11033	screen.c	FUNCTION_99	IF_9	CALL_19
0x1584b	        0x448d2402	                   lea r12d, [rdx + rax]	     11033	screen.c	FUNCTION_99	IF_9	CALL_19
0x1584f	    0x8b9578ffffff	             mov edx, dword [rbp - 0x88]	     11034	screen.c	FUNCTION_99	IF_9	CALL_20
0x15855	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	     11034	screen.c	FUNCTION_99	IF_9	CALL_20
0x1585b	        0x448d2c02	                   lea r13d, [rdx + rax]	     11034	screen.c	FUNCTION_99	IF_9	CALL_20
0x1585f	        0x488d4590	                   lea rax, [rbp - 0x70]	     11034	screen.c	FUNCTION_99	IF_9	CALL_20
0x15863	          0x4889c7	                            mov rdi, rax	     11034	screen.c	FUNCTION_99	IF_9	CALL_20
0x15866	      0xe800000000	                          call 0x40158ab	     11034	screen.c	FUNCTION_99	IF_9	CALL_20
0x1586b	      0x418d540500	                    lea edx, [r13 + rax]	     11033	screen.c	FUNCTION_99	IF_9	CALL_19
0x15870	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	     11033	screen.c	FUNCTION_99	IF_9	CALL_19
0x15876	          0x8d7001	                      lea esi, [rax + 1]	     11033	screen.c	FUNCTION_99	IF_9	CALL_19
0x15879	    0x8bbd68ffffff	             mov edi, dword [rbp - 0x98]	     11033	screen.c	FUNCTION_99	IF_9	CALL_19
0x1587f	    0x8b8d68ffffff	             mov ecx, dword [rbp - 0x98]	     11033	screen.c	FUNCTION_99	IF_9	CALL_19
0x15885	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	     11033	screen.c	FUNCTION_99	IF_9	CALL_19
0x1588b	        0x4883ec08	                              sub rsp, 8	     11033	screen.c	FUNCTION_99	IF_9	CALL_19
0x1588f	              0x53	                                push rbx	     11033	screen.c	FUNCTION_99	IF_9	CALL_19
0x15890	          0x4189f9	                            mov r9d, edi	     11033	screen.c	FUNCTION_99	IF_9	CALL_19
0x15893	          0x4189c8	                            mov r8d, ecx	     11033	screen.c	FUNCTION_99	IF_9	CALL_19
0x15896	          0x4489e1	                           mov ecx, r12d	     11033	screen.c	FUNCTION_99	IF_9	CALL_19
0x15899	            0x89c7	                            mov edi, eax	     11033	screen.c	FUNCTION_99	IF_9	CALL_19
0x1589b	      0xe800000000	                          call 0x40158e0	     11033	screen.c	FUNCTION_99	IF_9	CALL_19
0x158a0	        0x4883c410	                           add rsp, 0x10	     11033	screen.c	FUNCTION_99	IF_9	CALL_19
0x158a4	    0x8b8570ffffff	             mov eax, dword [rbp - 0x90]	     11038	screen.c	FUNCTION_99	IF_9
0x158aa	    0x890500000000	            mov dword [0x040158f0], eax 	     11038	screen.c	FUNCTION_99	IF_9
0x158b0	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	     11039	screen.c	FUNCTION_99	IF_9
0x158b7	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     11039	screen.c	FUNCTION_99	IF_9
0x158be	        0x488b5040	            mov rdx, qword [rax + 0x40] 	     11039	screen.c	FUNCTION_99	IF_9
0x158c2	        0x488b4038	            mov rax, qword [rax + 0x38] 	     11039	screen.c	FUNCTION_99	IF_9
0x158c6	    0x488981480100	            mov qword [rcx + 0x148], rax	     11039	screen.c	FUNCTION_99	IF_9
0x158cd	    0x488991500100	            mov qword [rcx + 0x150], rdx	     11039	screen.c	FUNCTION_99	IF_9
0x158d4	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     11040	screen.c	FUNCTION_99	IF_9
0x158db	    0x8b90d8000000	            mov edx, dword [rax + 0xd8] 	     11040	screen.c	FUNCTION_99	IF_9
0x158e1	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     11040	screen.c	FUNCTION_99	IF_9
0x158e8	    0x899058010000	            mov dword [rax + 0x158], edx	     11040	screen.c	FUNCTION_99	IF_9
0x158ee	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	     11041	screen.c	FUNCTION_99	IF_9
0x158f4	            0x89c2	                            mov edx, eax	     11041	screen.c	FUNCTION_99	IF_9
0x158f6	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     11041	screen.c	FUNCTION_99	IF_9
0x158fd	    0x889074010000	              mov byte [rax + 0x174], dl	     11041	screen.c	FUNCTION_99	IF_9
0x15903	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     11042	screen.c	FUNCTION_99	IF_9
0x1590a	        0x488b5078	            mov rdx, qword [rax + 0x78] 	     11042	screen.c	FUNCTION_99	IF_9
0x1590e	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     11042	screen.c	FUNCTION_99	IF_9
0x15915	    0x488990600100	            mov qword [rax + 0x160], rdx	     11042	screen.c	FUNCTION_99	IF_9
0x1591c	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     11043	screen.c	FUNCTION_99	IF_9
0x15923	        0x488b4008	                mov rax, qword [rax + 8]	     11043	screen.c	FUNCTION_99	IF_9
0x15927	          0x488b10	                    mov rdx, qword [rax]	     11043	screen.c	FUNCTION_99	IF_9
0x1592a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     11043	screen.c	FUNCTION_99	IF_9
0x15931	    0x488990680100	            mov qword [rax + 0x168], rdx	     11043	screen.c	FUNCTION_99	IF_9
0x15938	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     11045	screen.c	FUNCTION_99	IF_9
0x1593f	    0x8b9084000000	            mov edx, dword [rax + 0x84] 	     11045	screen.c	FUNCTION_99	IF_9
0x15945	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	     11045	screen.c	FUNCTION_99	IF_9
0x1594c	    0x899070010000	            mov dword [rax + 0x170], edx	     11045	screen.c	FUNCTION_99	IF_9
0x15952	            0xeb0a	                           jmp 0x401599e	     11045	screen.c	FUNCTION_99	IF_9
0x15954	              0x90	                                     nop	     10879	screen.c	FUNCTION_99	IF_1
0x15955	            0xeb07	                           jmp 0x401599e	     10879	screen.c	FUNCTION_99	IF_1
0x15957	              0x90	                                     nop	     10886	screen.c	FUNCTION_99	IF_2
0x15958	            0xeb04	                           jmp 0x401599e	     10886	screen.c	FUNCTION_99	IF_2
0x1595a	              0x90	                                     nop	     10893	screen.c	FUNCTION_99	IF_3	IF_4
0x1595b	            0xeb01	                           jmp 0x401599e	     10893	screen.c	FUNCTION_99	IF_3	IF_4
0x1595d	              0x90	                                     nop	     10896	screen.c	FUNCTION_99	IF_5
0x1595e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11048	screen.c	FUNCTION_99
0x15962	    0x644833042528	                xor rax, qword fs:[0x28]	     11048	screen.c	FUNCTION_99
0x1596b	            0x7405	                            je 0x40159b2	     11048	screen.c	FUNCTION_99
0x1596d	      0xe800000000	                          call 0x40159b2	     11048	screen.c	FUNCTION_99
0x15972	        0x488d65e8	                   lea rsp, [rbp - 0x18]	     11048	screen.c	FUNCTION_99
0x15976	              0x5b	                                 pop rbx	     11048	screen.c	FUNCTION_99
0x15977	            0x415c	                                 pop r12	     11048	screen.c	FUNCTION_99
0x15979	            0x415d	                                 pop r13	     11048	screen.c	FUNCTION_99
0x1597b	              0x5d	                                 pop rbp	     11048	screen.c	FUNCTION_99
0x1597c	              0xc3	                                     ret	     11048	screen.c	FUNCTION_99
showmode	DO,0:functions,0:CALL,62:ELSE,10:IF,35:WHILE,0:FOR,0:SWITCH,1	388
0x13e4c	              0x55	                                push rbp	     10200	screen.c	FUNCTION_86
0x13e4d	          0x4889e5	                            mov rbp, rsp	     10200	screen.c	FUNCTION_86
0x13e50	        0x4883ec20	                           sub rsp, 0x20	     10200	screen.c	FUNCTION_86
0x13e54	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	     10202	screen.c	FUNCTION_86
0x13e5b	    0x8b0500000000	            mov eax, dword [0x04013ea1] 	     10210	screen.c	FUNCTION_86
0x13e61	            0x85c0	                           test eax, eax	     10211	screen.c	FUNCTION_86
0x13e63	            0x7432	                            je 0x4013ed7	     10211	screen.c	FUNCTION_86
0x13e65	    0x8b0500000000	            mov eax, dword [0x04013eab] 	     10210	screen.c	FUNCTION_86
0x13e6b	            0x85c0	                           test eax, eax	     10210	screen.c	FUNCTION_86
0x13e6d	            0x7528	                           jne 0x4013ed7	     10210	screen.c	FUNCTION_86
0x13e6f	    0x8b0500000000	            mov eax, dword [0x04013eb5] 	     10211	screen.c	FUNCTION_86
0x13e75	          0x83e010	                           and eax, 0x10	     10211	screen.c	FUNCTION_86
0x13e78	            0x85c0	                           test eax, eax	     10211	screen.c	FUNCTION_86
0x13e7a	            0x7514	                           jne 0x4013ed0	     10211	screen.c	FUNCTION_86
0x13e7c	    0x8b0500000000	            mov eax, dword [0x04013ec2] 	     10212	screen.c	FUNCTION_86
0x13e82	            0x85c0	                           test eax, eax	     10212	screen.c	FUNCTION_86
0x13e84	            0x750a	                           jne 0x4013ed0	     10212	screen.c	FUNCTION_86
0x13e86	    0x8b0500000000	            mov eax, dword [0x04013ecc] 	     10213	screen.c	FUNCTION_86
0x13e8c	            0x85c0	                           test eax, eax	     10213	screen.c	FUNCTION_86
0x13e8e	            0x7407	                            je 0x4013ed7	     10213	screen.c	FUNCTION_86
0x13e90	      0xb801000000	                              mov eax, 1	     10211	screen.c	FUNCTION_86
0x13e95	            0xeb05	                           jmp 0x4013edc	     10211	screen.c	FUNCTION_86
0x13e97	      0xb800000000	                              mov eax, 0	     10211	screen.c	FUNCTION_86
0x13e9c	          0x8945ec	             mov dword [rbp - 0x14], eax	     10210	screen.c	FUNCTION_86
0x13e9f	        0x837dec00	               cmp dword [rbp - 0x14], 0	     10214	screen.c	FUNCTION_86	IF_1
0x13ea3	            0x750e	                           jne 0x4013ef3	     10214	screen.c	FUNCTION_86	IF_1
0x13ea5	    0x8b0500000000	            mov eax, dword [0x04013eeb] 	     10214	screen.c	FUNCTION_86	IF_1
0x13eab	            0x85c0	                           test eax, eax	     10214	screen.c	FUNCTION_86	IF_1
0x13ead	     0xf841a050000	                            je 0x401440d	     10214	screen.c	FUNCTION_86	IF_1
0x13eb3	      0xe800000000	                          call 0x4013ef8	     10221	screen.c	FUNCTION_86	IF_1	IF_2	CALL_2
0x13eb8	            0x85c0	                           test eax, eax	     10221	screen.c	FUNCTION_86	IF_1	IF_2	CALL_2
0x13eba	            0x741d	                            je 0x4013f19	     10221	screen.c	FUNCTION_86	IF_1	IF_2	CALL_2
0x13ebc	      0xe800000000	                          call 0x4013f01	     10221	screen.c	FUNCTION_86	IF_1	IF_2	CALL_2
0x13ec1	            0x85c0	                           test eax, eax	     10221	screen.c	FUNCTION_86	IF_1	IF_2	CALL_2
0x13ec3	            0x740a	                            je 0x4013f0f	     10221	screen.c	FUNCTION_86	IF_1	IF_2	CALL_2
0x13ec5	    0x8b0500000000	            mov eax, dword [0x04013f0b] 	     10221	screen.c	FUNCTION_86	IF_1	IF_2	CALL_2
0x13ecb	            0x85c0	                           test eax, eax	     10221	screen.c	FUNCTION_86	IF_1	IF_2	CALL_2
0x13ecd	            0x740a	                            je 0x4013f19	     10221	screen.c	FUNCTION_86	IF_1	IF_2	CALL_2
0x13ecf	    0x8b0500000000	            mov eax, dword [0x04013f15] 	     10221	screen.c	FUNCTION_86	IF_1	IF_2	CALL_2
0x13ed5	            0x85c0	                           test eax, eax	     10221	screen.c	FUNCTION_86	IF_1	IF_2	CALL_2
0x13ed7	            0x7414	                            je 0x4013f2d	     10221	screen.c	FUNCTION_86	IF_1	IF_2	CALL_2
0x13ed9	    0xc70500000000	               mov dword [0x04013f23], 1	     10223	screen.c	FUNCTION_86	IF_1	IF_2
0x13ee3	      0xb800000000	                              mov eax, 0	     10224	screen.c	FUNCTION_86	IF_1	IF_2
0x13ee8	      0xe94d050000	                           jmp 0x401447a	     10224	screen.c	FUNCTION_86	IF_1	IF_2
0x13eed	    0x8b0500000000	            mov eax, dword [0x04013f33] 	     10227	screen.c	FUNCTION_86	IF_1
0x13ef3	          0x8945f0	             mov dword [rbp - 0x10], eax	     10227	screen.c	FUNCTION_86	IF_1
0x13ef6	      0xbf00000000	                              mov edi, 0	     10230	screen.c	FUNCTION_86	IF_1	CALL_3
0x13efb	      0xe800000000	                          call 0x4013f40	     10230	screen.c	FUNCTION_86	IF_1	CALL_3
0x13f00	    0x8b0500000000	            mov eax, dword [0x04013f46] 	     10233	screen.c	FUNCTION_86	IF_1
0x13f06	          0x8945e0	             mov dword [rbp - 0x20], eax	     10233	screen.c	FUNCTION_86	IF_1
0x13f09	    0x8b0500000000	            mov eax, dword [0x04013f4f] 	     10234	screen.c	FUNCTION_86	IF_1	IF_3
0x13f0f	            0x85c0	                           test eax, eax	     10234	screen.c	FUNCTION_86	IF_1	IF_3
0x13f11	            0x741d	                            je 0x4013f70	     10234	screen.c	FUNCTION_86	IF_1	IF_3
0x13f13	    0x8b0500000000	            mov eax, dword [0x04013f59] 	     10234	screen.c	FUNCTION_86	IF_1	IF_3
0x13f19	            0x4898	                                    cdqe	     10234	screen.c	FUNCTION_86	IF_1	IF_3
0x13f1b	    0x488b15000000	            mov rdx, qword [0x04013f62] 	     10234	screen.c	FUNCTION_86	IF_1	IF_3
0x13f22	        0x4883ea01	                              sub rdx, 1	     10234	screen.c	FUNCTION_86	IF_1	IF_3
0x13f26	          0x4839d0	                            cmp rax, rdx	     10234	screen.c	FUNCTION_86	IF_1	IF_3
0x13f29	            0x7d05	                           jge 0x4013f70	     10234	screen.c	FUNCTION_86	IF_1	IF_3
0x13f2b	      0xe800000000	                          call 0x4013f70	     10235	screen.c	FUNCTION_86	IF_1	CALL_4
0x13f30	      0xe807050000	                   call sym.msg_pos_mode	     10238	screen.c	FUNCTION_86	IF_1	CALL_5
0x13f35	      0xe800000000	                          call 0x4013f7a	     10239	screen.c	FUNCTION_86	IF_1	CALL_6
0x13f3a	    0x8b0500000000	            mov eax, dword [0x04013f80] 	     10240	screen.c	FUNCTION_86	IF_1	CALL_7
0x13f40	          0x8945f4	              mov dword [rbp - 0xc], eax	     10240	screen.c	FUNCTION_86	IF_1	CALL_7
0x13f43	        0x837dec00	               cmp dword [rbp - 0x14], 0	     10241	screen.c	FUNCTION_86	IF_1	IF_4
0x13f47	     0xf8412040000	                            je 0x401439f	     10241	screen.c	FUNCTION_86	IF_1	IF_4
0x13f4d	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     10243	screen.c	FUNCTION_86	IF_1	IF_4	CALL_8
0x13f50	            0x89c6	                            mov esi, eax	     10243	screen.c	FUNCTION_86	IF_1	IF_4	CALL_8
0x13f52	      0xbf00000000	                              mov edi, 0	     10243	screen.c	FUNCTION_86	IF_1	IF_4	CALL_8
0x13f57	      0xe800000000	                          call 0x4013f9c	     10243	screen.c	FUNCTION_86	IF_1	IF_4	CALL_8
0x13f5c	    0x488b05000000	            mov rax, qword [0x04013fa3] 	     10273	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	CALL_16
0x13f63	          0x4885c0	                           test rax, rax	     10273	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	CALL_16
0x13f66	     0xf842d010000	                            je 0x40140d9	     10273	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	CALL_16
0x13f6c	      0xbf63000000	                           mov edi, 0x63	     10273	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	CALL_16
0x13f71	      0xe800000000	                          call 0x4013fb6	     10273	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	CALL_16
0x13f76	            0x85c0	                           test eax, eax	     10273	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	CALL_16
0x13f78	     0xf851b010000	                           jne 0x40140d9	     10273	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	CALL_16
0x13f7e	    0x488b15000000	            mov rdx, qword [0x04013fc5] 	     10277	screen.c	FUNCTION_86	IF_1	IF_4	IF_9
0x13f85	    0x8b0500000000	            mov eax, dword [0x04013fcb] 	     10277	screen.c	FUNCTION_86	IF_1	IF_4	IF_9
0x13f8b	            0x4898	                                    cdqe	     10277	screen.c	FUNCTION_86	IF_1	IF_4	IF_9
0x13f8d	          0x4829c2	                            sub rdx, rax	     10277	screen.c	FUNCTION_86	IF_1	IF_4	IF_9
0x13f90	          0x4889d0	                            mov rax, rdx	     10277	screen.c	FUNCTION_86	IF_1	IF_4	IF_9
0x13f93	            0x89c2	                            mov edx, eax	     10277	screen.c	FUNCTION_86	IF_1	IF_4	IF_9
0x13f95	    0x488b05000000	            mov rax, qword [0x04013fdc] 	     10277	screen.c	FUNCTION_86	IF_1	IF_4	IF_9
0x13f9c	           0xfafc2	                           imul eax, edx	     10277	screen.c	FUNCTION_86	IF_1	IF_4	IF_9
0x13f9f	          0x83e803	                              sub eax, 3	     10277	screen.c	FUNCTION_86	IF_1	IF_4	IF_9
0x13fa2	          0x8945e4	             mov dword [rbp - 0x1c], eax	     10277	screen.c	FUNCTION_86	IF_1	IF_4	IF_9
0x13fa5	    0x488b05000000	            mov rax, qword [0x04013fec] 	     10278	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_10
0x13fac	          0x4885c0	                           test rax, rax	     10278	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_10
0x13faf	            0x7412	                            je 0x4014003	     10278	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_10
0x13fb1	    0x488b05000000	            mov rax, qword [0x04013ff8] 	     10279	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	CALL_17
0x13fb8	          0x4889c7	                            mov rdi, rax	     10279	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	CALL_17
0x13fbb	      0xe800000000	                          call 0x4014000	     10279	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	CALL_17
0x13fc0	          0x2945e4	             sub dword [rbp - 0x1c], eax	     10279	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	CALL_17
0x13fc3	        0x837de400	               cmp dword [rbp - 0x1c], 0	     10280	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11
0x13fc7	     0xf8ec0000000	                           jle 0x40140cd	     10280	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11
0x13fcd	    0x488b05000000	            mov rax, qword [0x04014014] 	     10282	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11	IF_12
0x13fd4	          0x4885c0	                           test rax, rax	     10282	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11	IF_12
0x13fd7	            0x7412	                            je 0x401402b	     10282	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11	IF_12
0x13fd9	    0x488b05000000	            mov rax, qword [0x04014020] 	     10283	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11	CALL_18
0x13fe0	          0x4889c7	                            mov rdi, rax	     10283	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11	CALL_18
0x13fe3	      0xe800000000	                          call 0x4014028	     10283	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11	CALL_18
0x13fe8	          0x2945e4	             sub dword [rbp - 0x1c], eax	     10283	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11	CALL_18
0x13feb	    0x488b05000000	            mov rax, qword [0x04014032] 	     10284	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11	IF_13	CALL_19
0x13ff2	          0x4889c7	                            mov rdi, rax	     10284	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11	IF_13	CALL_19
0x13ff5	      0xe800000000	                          call 0x401403a	     10284	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11	IF_13	CALL_19
0x13ffa	            0x89c2	                            mov edx, eax	     10284	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11	IF_13	CALL_19
0x13ffc	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	     10284	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11	IF_13	CALL_19
0x13fff	            0x29d0	                            sub eax, edx	     10284	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11	IF_13	CALL_19
0x14001	            0x85c0	                           test eax, eax	     10284	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11	IF_13	CALL_19
0x14003	            0x7e34	                           jle 0x4014079	     10284	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11	IF_13	CALL_19
0x14005	    0x488b05000000	            mov rax, qword [0x0401404c] 	     10286	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11	IF_13	IF_14
0x1400c	          0x4885c0	                           test rax, rax	     10286	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11	IF_13	IF_14
0x1400f	            0x7414	                            je 0x4014065	     10286	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11	IF_13	IF_14
0x14011	    0x488b05000000	            mov rax, qword [0x04014058] 	     10287	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11	IF_13	CALL_20
0x14018	          0x8b55f4	              mov edx, dword [rbp - 0xc]	     10287	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11	IF_13	CALL_20
0x1401b	            0x89d6	                            mov esi, edx	     10287	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11	IF_13	CALL_20
0x1401d	          0x4889c7	                            mov rdi, rax	     10287	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11	IF_13	CALL_20
0x14020	      0xe800000000	                          call 0x4014065	     10287	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11	IF_13	CALL_20
0x14025	    0x488b05000000	            mov rax, qword [0x0401406c] 	     10288	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11	IF_13	CALL_21
0x1402c	          0x8b55f4	              mov edx, dword [rbp - 0xc]	     10288	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11	IF_13	CALL_21
0x1402f	            0x89d6	                            mov esi, edx	     10288	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11	IF_13	CALL_21
0x14031	          0x4889c7	                            mov rdi, rax	     10288	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11	IF_13	CALL_21
0x14034	      0xe800000000	                          call 0x4014079	     10288	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11	IF_13	CALL_21
0x14039	    0x488b05000000	            mov rax, qword [0x04014080] 	     10290	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11	IF_15
0x14040	          0x4885c0	                           test rax, rax	     10290	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11	IF_15
0x14043	            0x7448	                            je 0x40140cd	     10290	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11	IF_15
0x14045	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     10292	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11	IF_15	CALL_22
0x14048	            0x89c6	                            mov esi, eax	     10292	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11	IF_15	CALL_22
0x1404a	      0xbf00000000	                              mov edi, 0	     10292	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11	IF_15	CALL_22
0x1404f	      0xe800000000	                          call 0x4014094	     10292	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11	IF_15	CALL_22
0x14054	    0x8b0500000000	            mov eax, dword [0x0401409a] 	     10293	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11	IF_15	IF_16
0x1405a	          0x83f82d	                           cmp eax, 0x2d	     10293	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11	IF_15	IF_16
0x1405d	            0x7f14	                            jg 0x40140b3	     10293	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11	IF_15	IF_16
0x1405f	    0x8b0500000000	            mov eax, dword [0x040140a5] 	     10294	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11	IF_15	CALL_23
0x14065	            0x4898	                                    cdqe	     10294	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11	IF_15	CALL_23
0x14067	    0x8b0485000000	                  mov eax, dword [rax*4]	     10294	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11	IF_15	CALL_23
0x1406e	          0x8945e8	             mov dword [rbp - 0x18], eax	     10294	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11	IF_15	CALL_23
0x14071	            0xeb06	                           jmp 0x40140b9	     10294	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11	IF_15	CALL_23
0x14073	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     10296	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11	IF_15	ELSE_2
0x14076	          0x8945e8	             mov dword [rbp - 0x18], eax	     10296	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11	IF_15	ELSE_2
0x14079	    0x488b05000000	            mov rax, qword [0x040140c0] 	     10297	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11	IF_15	CALL_24
0x14080	          0x8b55e8	             mov edx, dword [rbp - 0x18]	     10297	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11	IF_15	CALL_24
0x14083	            0x89d6	                            mov esi, edx	     10297	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11	IF_15	CALL_24
0x14085	          0x4889c7	                            mov rdi, rax	     10297	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11	IF_15	CALL_24
0x14088	      0xe800000000	                          call 0x40140cd	     10297	screen.c	FUNCTION_86	IF_1	IF_4	IF_9	IF_11	IF_15	CALL_24
0x1408d	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	     10300	screen.c	FUNCTION_86	IF_1	IF_4	IF_9
0x14094	      0xe9bf020000	                           jmp 0x4014398	     10300	screen.c	FUNCTION_86	IF_1	IF_4	IF_9
0x14099	    0x8b0500000000	            mov eax, dword [0x040140df] 	     10306	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_17
0x1409f	      0x2580000000	                           and eax, 0x80	     10306	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_17
0x140a4	            0x85c0	                           test eax, eax	     10306	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_17
0x140a6	            0x741f	                            je 0x4014107	     10306	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_17
0x140a8	      0xbf00000000	                              mov edi, 0	     10307	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	CALL_26
0x140ad	      0xe800000000	                          call 0x40140f2	     10307	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	CALL_26
0x140b2	          0x4889c2	                            mov rdx, rax	     10307	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	CALL_26
0x140b5	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     10307	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	CALL_26
0x140b8	            0x89c6	                            mov esi, eax	     10307	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	CALL_26
0x140ba	          0x4889d7	                            mov rdi, rdx	     10307	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	CALL_26
0x140bd	      0xe800000000	                          call 0x4014102	     10307	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	CALL_26
0x140c2	      0xe9ec000000	                           jmp 0x40141f3	     10307	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	CALL_26
0x140c7	    0x8b0500000000	            mov eax, dword [0x0401410d] 	     10310	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_4	IF_18
0x140cd	          0x83e040	                           and eax, 0x40	     10310	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_4	IF_18
0x140d0	            0x85c0	                           test eax, eax	     10310	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_4	IF_18
0x140d2	            0x741f	                            je 0x4014133	     10310	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_4	IF_18
0x140d4	      0xbf00000000	                              mov edi, 0	     10311	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_4	IF_18
0x140d9	      0xe800000000	                          call 0x401411e	     10311	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_4	IF_18
0x140de	          0x4889c2	                            mov rdx, rax	     10311	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_4	IF_18
0x140e1	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     10311	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_4	IF_18
0x140e4	            0x89c6	                            mov esi, eax	     10311	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_4	IF_18
0x140e6	          0x4889d7	                            mov rdi, rdx	     10311	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_4	IF_18
0x140e9	      0xe800000000	                          call 0x401412e	     10311	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_4	IF_18
0x140ee	      0xe9c0000000	                           jmp 0x40141f3	     10311	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_4	IF_18
0x140f3	    0x8b0500000000	            mov eax, dword [0x04014139] 	     10312	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_5	IF_19
0x140f9	          0x83e010	                           and eax, 0x10	     10312	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_5	IF_19
0x140fc	            0x85c0	                           test eax, eax	     10312	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_5	IF_19
0x140fe	            0x7440	                            je 0x4014180	     10312	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_5	IF_19
0x14100	    0x8b0500000000	            mov eax, dword [0x04014146] 	     10315	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_5	IF_19	IF_20
0x14106	            0x85c0	                           test eax, eax	     10315	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_5	IF_19	IF_20
0x14108	            0x741a	                            je 0x4014164	     10315	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_5	IF_19	IF_20
0x1410a	      0xbf00000000	                              mov edi, 0	     10316	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_5	IF_19	CALL_30
0x1410f	      0xe800000000	                          call 0x4014154	     10316	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_5	IF_19	CALL_30
0x14114	          0x4889c2	                            mov rdx, rax	     10316	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_5	IF_19	CALL_30
0x14117	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     10316	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_5	IF_19	CALL_30
0x1411a	            0x89c6	                            mov esi, eax	     10316	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_5	IF_19	CALL_30
0x1411c	          0x4889d7	                            mov rdi, rdx	     10316	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_5	IF_19	CALL_30
0x1411f	      0xe800000000	                          call 0x4014164	     10316	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_5	IF_19	CALL_30
0x14124	      0xbf00000000	                              mov edi, 0	     10318	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_5	IF_19	CALL_32
0x14129	      0xe800000000	                          call 0x401416e	     10318	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_5	IF_19	CALL_32
0x1412e	          0x4889c2	                            mov rdx, rax	     10318	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_5	IF_19	CALL_32
0x14131	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     10318	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_5	IF_19	CALL_32
0x14134	            0x89c6	                            mov esi, eax	     10318	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_5	IF_19	CALL_32
0x14136	          0x4889d7	                            mov rdi, rdx	     10318	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_5	IF_19	CALL_32
0x14139	      0xe800000000	                          call 0x401417e	     10318	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_5	IF_19	CALL_32
0x1413e	            0xeb73	                           jmp 0x40141f3	     10318	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_5	IF_19	CALL_32
0x14140	    0x8b0500000000	            mov eax, dword [0x04014186] 	     10320	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_6	IF_21
0x14146	          0x83f849	                           cmp eax, 0x49	     10320	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_6	IF_21
0x14149	            0x751c	                           jne 0x40141a7	     10320	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_6	IF_21
0x1414b	      0xbf00000000	                              mov edi, 0	     10321	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_6	IF_21
0x14150	      0xe800000000	                          call 0x4014195	     10321	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_6	IF_21
0x14155	          0x4889c2	                            mov rdx, rax	     10321	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_6	IF_21
0x14158	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     10321	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_6	IF_21
0x1415b	            0x89c6	                            mov esi, eax	     10321	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_6	IF_21
0x1415d	          0x4889d7	                            mov rdi, rdx	     10321	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_6	IF_21
0x14160	      0xe800000000	                          call 0x40141a5	     10321	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_6	IF_21
0x14165	            0xeb4c	                           jmp 0x40141f3	     10321	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_6	IF_21
0x14167	    0x8b0500000000	            mov eax, dword [0x040141ad] 	     10322	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_7	IF_22
0x1416d	          0x83f852	                           cmp eax, 0x52	     10322	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_7	IF_22
0x14170	            0x751c	                           jne 0x40141ce	     10322	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_7	IF_22
0x14172	      0xbf00000000	                              mov edi, 0	     10323	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_7	IF_22
0x14177	      0xe800000000	                          call 0x40141bc	     10323	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_7	IF_22
0x1417c	          0x4889c2	                            mov rdx, rax	     10323	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_7	IF_22
0x1417f	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     10323	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_7	IF_22
0x14182	            0x89c6	                            mov esi, eax	     10323	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_7	IF_22
0x14184	          0x4889d7	                            mov rdi, rdx	     10323	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_7	IF_22
0x14187	      0xe800000000	                          call 0x40141cc	     10323	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_7	IF_22
0x1418c	            0xeb25	                           jmp 0x40141f3	     10323	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_7	IF_22
0x1418e	    0x8b0500000000	            mov eax, dword [0x040141d4] 	     10324	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_8	IF_23
0x14194	          0x83f856	                           cmp eax, 0x56	     10324	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_8	IF_23
0x14197	            0x751a	                           jne 0x40141f3	     10324	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_8	IF_23
0x14199	      0xbf00000000	                              mov edi, 0	     10325	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_8	IF_23
0x1419e	      0xe800000000	                          call 0x40141e3	     10325	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_8	IF_23
0x141a3	          0x4889c2	                            mov rdx, rax	     10325	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_8	IF_23
0x141a6	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     10325	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_8	IF_23
0x141a9	            0x89c6	                            mov esi, eax	     10325	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_8	IF_23
0x141ab	          0x4889d7	                            mov rdi, rdx	     10325	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_8	IF_23
0x141ae	      0xe800000000	                          call 0x40141f3	     10325	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	ELSE_8	IF_23
0x141b3	    0x8b0500000000	            mov eax, dword [0x040141f9] 	     10327	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_24
0x141b9	            0x85c0	                           test eax, eax	     10327	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_24
0x141bb	            0x741a	                            je 0x4014217	     10327	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_24
0x141bd	      0xbf00000000	                              mov edi, 0	     10328	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	CALL_40
0x141c2	      0xe800000000	                          call 0x4014207	     10328	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	CALL_40
0x141c7	          0x4889c2	                            mov rdx, rax	     10328	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	CALL_40
0x141ca	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     10328	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	CALL_40
0x141cd	            0x89c6	                            mov esi, eax	     10328	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	CALL_40
0x141cf	          0x4889d7	                            mov rdi, rdx	     10328	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	CALL_40
0x141d2	      0xe800000000	                          call 0x4014217	     10328	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	CALL_40
0x141d7	    0x8b0500000000	            mov eax, dword [0x0401421d] 	     10330	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_25
0x141dd	            0x85c0	                           test eax, eax	     10330	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_25
0x141df	            0x740f	                            je 0x4014230	     10330	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_25
0x141e1	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     10331	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	CALL_41
0x141e4	            0x89c6	                            mov esi, eax	     10331	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	CALL_41
0x141e6	      0xbf00000000	                              mov edi, 0	     10331	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	CALL_41
0x141eb	      0xe800000000	                          call 0x4014230	     10331	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	CALL_41
0x141f0	    0x8b0500000000	            mov eax, dword [0x04014236] 	     10335	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_26
0x141f6	          0x83e020	                           and eax, 0x20	     10335	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_26
0x141f9	            0x85c0	                           test eax, eax	     10335	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_26
0x141fb	            0x7465	                            je 0x40142a2	     10335	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_26
0x141fd	    0x488b05000000	            mov rax, qword [0x04014244] 	     10338	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_26	IF_27
0x14204	    0x8b80b0010000	           mov eax, dword [rax + 0x1b0] 	     10338	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_26	IF_27
0x1420a	            0x85c0	                           test eax, eax	     10338	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_26	IF_27
0x1420c	            0x741c	                            je 0x401426a	     10338	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_26	IF_27
0x1420e	      0xbf00000000	                              mov edi, 0	     10339	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_26	CALL_43
0x14213	      0xe800000000	                          call 0x4014258	     10339	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_26	CALL_43
0x14218	          0x4889c2	                            mov rdx, rax	     10339	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_26	CALL_43
0x1421b	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     10339	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_26	CALL_43
0x1421e	            0x89c6	                            mov esi, eax	     10339	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_26	CALL_43
0x14220	          0x4889d7	                            mov rdi, rdx	     10339	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_26	CALL_43
0x14223	      0xe800000000	                          call 0x4014268	     10339	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_26	CALL_43
0x14228	            0xeb38	                           jmp 0x40142a2	     10339	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_26	CALL_43
0x1422a	    0x488b15000000	            mov rdx, qword [0x04014271] 	     10342	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_26	ELSE_9	IF_28	CALL_44
0x14231	    0x488b05000000	            mov rax, qword [0x04014278] 	     10342	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_26	ELSE_9	IF_28	CALL_44
0x14238	      0xb900100000	                         mov ecx, 0x1000	     10342	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_26	ELSE_9	IF_28	CALL_44
0x1423d	      0xbe00000000	                              mov esi, 0	     10342	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_26	ELSE_9	IF_28	CALL_44
0x14242	          0x4889c7	                            mov rdi, rax	     10342	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_26	ELSE_9	IF_28	CALL_44
0x14245	      0xe800000000	                          call 0x401428a	     10342	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_26	ELSE_9	IF_28	CALL_44
0x1424a	            0x85c0	                           test eax, eax	     10342	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_26	ELSE_9	IF_28	CALL_44
0x1424c	            0x7414	                            je 0x40142a2	     10342	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_26	ELSE_9	IF_28	CALL_44
0x1424e	    0x488b05000000	            mov rax, qword [0x04014295] 	     10344	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_26	ELSE_9	IF_28
0x14255	          0x8b55f4	              mov edx, dword [rbp - 0xc]	     10344	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_26	ELSE_9	IF_28
0x14258	            0x89d6	                            mov esi, edx	     10344	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_26	ELSE_9	IF_28
0x1425a	          0x4889c7	                            mov rdi, rax	     10344	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_26	ELSE_9	IF_28
0x1425d	      0xe800000000	                          call 0x40142a2	     10344	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_26	ELSE_9	IF_28
0x14262	    0x8b0500000000	            mov eax, dword [0x040142a8] 	     10347	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_29
0x14268	          0x83e010	                           and eax, 0x10	     10347	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_29
0x1426b	            0x85c0	                           test eax, eax	     10347	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_29
0x1426d	            0x7424	                            je 0x40142d3	     10347	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_29
0x1426f	    0x8b0500000000	            mov eax, dword [0x040142b5] 	     10347	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_29
0x14275	            0x85c0	                           test eax, eax	     10347	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_29
0x14277	            0x741a	                            je 0x40142d3	     10347	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_29
0x14279	      0xbf00000000	                              mov edi, 0	     10348	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	CALL_47
0x1427e	      0xe800000000	                          call 0x40142c3	     10348	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	CALL_47
0x14283	          0x4889c2	                            mov rdx, rax	     10348	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	CALL_47
0x14286	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     10348	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	CALL_47
0x14289	            0x89c6	                            mov esi, eax	     10348	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	CALL_47
0x1428b	          0x4889d7	                            mov rdi, rdx	     10348	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	CALL_47
0x1428e	      0xe800000000	                          call 0x40142d3	     10348	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	CALL_47
0x14293	    0x8b0500000000	            mov eax, dword [0x040142d9] 	     10350	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_30
0x14299	            0x85c0	                           test eax, eax	     10350	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_30
0x1429b	     0xf84a8000000	                            je 0x4014389	     10350	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_30
0x142a1	    0x8b0500000000	            mov eax, dword [0x040142e7] 	     10356	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1
0x142a7	            0x85c0	                           test eax, eax	     10356	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1
0x142a9	            0x7407	                            je 0x40142f2	     10356	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1
0x142ab	      0xba04000000	                              mov edx, 4	     10356	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1
0x142b0	            0xeb05	                           jmp 0x40142f7	     10356	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1
0x142b2	      0xba00000000	                              mov edx, 0	     10356	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1
0x142b7	    0x8b0500000000	            mov eax, dword [0x040142fd] 	     10357	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1
0x142bd	          0x83f816	                           cmp eax, 0x16	     10357	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1
0x142c0	            0x7507	                           jne 0x4014309	     10357	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1
0x142c2	      0xb802000000	                              mov eax, 2	     10357	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1
0x142c7	            0xeb05	                           jmp 0x401430e	     10357	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1
0x142c9	      0xb800000000	                              mov eax, 0	     10357	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1
0x142ce	             0x1c2	                            add edx, eax	     10357	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1
0x142d0	    0x8b0500000000	            mov eax, dword [0x04014316] 	     10358	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1
0x142d6	          0x83f856	                           cmp eax, 0x56	     10358	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1
0x142d9	           0xf94c0	                                 sete al	     10358	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1
0x142dc	           0xfb6c0	                           movzx eax, al	     10358	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1
0x142df	             0x1d0	                            add eax, edx	     10358	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1
0x142e1	          0x83f805	                              cmp eax, 5	     10356	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1
0x142e4	            0x773e	                            ja 0x4014364	     10356	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1
0x142e6	            0x89c0	                            mov eax, eax	     10356	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1
0x142e8	    0x488b04c50000	                  mov rax, qword [rax*8]	     10356	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1
0x142f0	            0xffe0	                                 jmp rax	     10356	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1
0x142f2	    0x48c745f80000	                  mov qword [rbp - 8], 0	     10360	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1	CALL_48
0x142fa	            0xeb31	                           jmp 0x401436d	     10360	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1	CALL_48
0x142fc	    0x48c745f80000	                  mov qword [rbp - 8], 0	     10361	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1	CALL_49
0x14304	            0xeb27	                           jmp 0x401436d	     10361	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1	CALL_49
0x14306	    0x48c745f80000	                  mov qword [rbp - 8], 0	     10362	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1	CALL_50
0x1430e	            0xeb1d	                           jmp 0x401436d	     10362	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1	CALL_50
0x14310	    0x48c745f80000	                  mov qword [rbp - 8], 0	     10363	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1	CALL_51
0x14318	            0xeb13	                           jmp 0x401436d	     10363	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1	CALL_51
0x1431a	    0x48c745f80000	                  mov qword [rbp - 8], 0	     10364	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1	CALL_52
0x14322	            0xeb09	                           jmp 0x401436d	     10364	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1	CALL_52
0x14324	    0x48c745f80000	                  mov qword [rbp - 8], 0	     10365	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1	CALL_53
0x1432c	              0x90	                                     nop	     10365	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_30	SWITCH_1	CALL_53
0x1432d	        0x488b45f8	                mov rax, qword [rbp - 8]	     10367	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_30	CALL_55
0x14331	          0x4889c7	                            mov rdi, rax	     10367	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_30	CALL_55
0x14334	      0xe800000000	                          call 0x4014379	     10367	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_30	CALL_55
0x14339	          0x4889c2	                            mov rdx, rax	     10367	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_30	CALL_55
0x1433c	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     10367	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_30	CALL_55
0x1433f	            0x89c6	                            mov esi, eax	     10367	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_30	CALL_55
0x14341	          0x4889d7	                            mov rdi, rdx	     10367	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_30	CALL_55
0x14344	      0xe800000000	                          call 0x4014389	     10367	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	IF_30	CALL_55
0x14349	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     10369	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	CALL_56
0x1434c	            0x89c6	                            mov esi, eax	     10369	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	CALL_56
0x1434e	      0xbf00000000	                              mov edi, 0	     10369	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	CALL_56
0x14353	      0xe800000000	                          call 0x4014398	     10369	screen.c	FUNCTION_86	IF_1	IF_4	ELSE_3	CALL_56
0x14358	    0xc745e0010000	               mov dword [rbp - 0x20], 1	     10372	screen.c	FUNCTION_86	IF_1	IF_4
0x1435f	    0x8b0500000000	            mov eax, dword [0x040143a5] 	     10374	screen.c	FUNCTION_86	IF_1	IF_31
0x14365	            0x85c0	                           test eax, eax	     10374	screen.c	FUNCTION_86	IF_1	IF_31
0x14367	            0x741d	                            je 0x40143c6	     10374	screen.c	FUNCTION_86	IF_1	IF_31
0x14369	    0x488b05000000	            mov rax, qword [0x040143b0] 	     10376	screen.c	FUNCTION_86	IF_1	IF_31
0x14370	          0x4885c0	                           test rax, rax	     10376	screen.c	FUNCTION_86	IF_1	IF_31
0x14373	            0x7511	                           jne 0x40143c6	     10376	screen.c	FUNCTION_86	IF_1	IF_31
0x14375	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     10380	screen.c	FUNCTION_86	IF_1	IF_31	CALL_57
0x14378	            0x89c7	                            mov edi, eax	     10380	screen.c	FUNCTION_86	IF_1	IF_31	CALL_57
0x1437a	      0xe847010000	                 call sym.recording_mode	     10380	screen.c	FUNCTION_86	IF_1	IF_31	CALL_57
0x1437f	    0xc745e0010000	               mov dword [rbp - 0x20], 1	     10381	screen.c	FUNCTION_86	IF_1	IF_31
0x14386	    0xc70500000000	               mov dword [0x040143d0], 1	     10384	screen.c	FUNCTION_86	IF_1
0x14390	        0x837de000	               cmp dword [rbp - 0x20], 0	     10385	screen.c	FUNCTION_86	IF_1	IF_32
0x14394	            0x750a	                           jne 0x40143e0	     10385	screen.c	FUNCTION_86	IF_1	IF_32
0x14396	    0x8b0500000000	            mov eax, dword [0x040143dc] 	     10385	screen.c	FUNCTION_86	IF_1	IF_32
0x1439c	            0x85c0	                           test eax, eax	     10385	screen.c	FUNCTION_86	IF_1	IF_32
0x1439e	            0x7405	                            je 0x40143e5	     10385	screen.c	FUNCTION_86	IF_1	IF_32
0x143a0	      0xe800000000	                          call 0x40143e5	     10386	screen.c	FUNCTION_86	IF_1	CALL_58
0x143a5	    0xc70500000000	               mov dword [0x040143ef], 0	     10387	screen.c	FUNCTION_86	IF_1
0x143af	    0x8b0500000000	            mov eax, dword [0x040143f5] 	     10388	screen.c	FUNCTION_86	IF_1
0x143b5	          0x8945e4	             mov dword [rbp - 0x1c], eax	     10388	screen.c	FUNCTION_86	IF_1
0x143b8	    0xc70500000000	               mov dword [0x04014402], 0	     10389	screen.c	FUNCTION_86	IF_1
0x143c2	          0x8b45f0	             mov eax, dword [rbp - 0x10]	     10390	screen.c	FUNCTION_86	IF_1
0x143c5	    0x890500000000	            mov dword [0x0401440b], eax 	     10390	screen.c	FUNCTION_86	IF_1
0x143cb	            0xeb19	                           jmp 0x4014426	     10390	screen.c	FUNCTION_86	IF_1
0x143cd	    0x8b0500000000	            mov eax, dword [0x04014413] 	     10392	screen.c	FUNCTION_86	ELSE_10	IF_33
0x143d3	            0x85c0	                           test eax, eax	     10392	screen.c	FUNCTION_86	ELSE_10	IF_33
0x143d5	            0x740f	                            je 0x4014426	     10392	screen.c	FUNCTION_86	ELSE_10	IF_33
0x143d7	    0x8b0500000000	            mov eax, dword [0x0401441d] 	     10392	screen.c	FUNCTION_86	ELSE_10	IF_33
0x143dd	            0x85c0	                           test eax, eax	     10392	screen.c	FUNCTION_86	ELSE_10	IF_33
0x143df	            0x7505	                           jne 0x4014426	     10392	screen.c	FUNCTION_86	ELSE_10	IF_33
0x143e1	      0xe800000000	                          call 0x4014426	     10394	screen.c	FUNCTION_86	ELSE_10	IF_33
0x143e6	    0x8b0500000000	            mov eax, dword [0x0401442c] 	     10398	screen.c	FUNCTION_86	IF_34
0x143ec	            0x85c0	                           test eax, eax	     10398	screen.c	FUNCTION_86	IF_34
0x143ee	            0x7405	                            je 0x4014435	     10398	screen.c	FUNCTION_86	IF_34
0x143f0	      0xe800000000	                          call 0x4014435	     10399	screen.c	FUNCTION_86	CALL_60
0x143f5	      0xe800000000	                          call 0x401443a	     10403	screen.c	FUNCTION_86	IF_35	CALL_61
0x143fa	            0x85c0	                           test eax, eax	     10403	screen.c	FUNCTION_86	IF_35	CALL_61
0x143fc	            0x7425	                            je 0x4014463	     10403	screen.c	FUNCTION_86	IF_35	CALL_61
0x143fe	    0x488b05000000	            mov rax, qword [0x04014445] 	     10403	screen.c	FUNCTION_86	IF_35	CALL_61
0x14405	    0x8b80a4000000	            mov eax, dword [rax + 0xa4] 	     10403	screen.c	FUNCTION_86	IF_35	CALL_61
0x1440b	            0x85c0	                           test eax, eax	     10403	screen.c	FUNCTION_86	IF_35	CALL_61
0x1440d	            0x7514	                           jne 0x4014463	     10403	screen.c	FUNCTION_86	IF_35	CALL_61
0x1440f	    0x488b05000000	            mov rax, qword [0x04014456] 	     10404	screen.c	FUNCTION_86	CALL_62
0x14416	      0xbe01000000	                              mov esi, 1	     10404	screen.c	FUNCTION_86	CALL_62
0x1441b	          0x4889c7	                            mov rdi, rax	     10404	screen.c	FUNCTION_86	CALL_62
0x1441e	      0xe8120d0000	                 call sym.win_redr_ruler	     10404	screen.c	FUNCTION_86	CALL_62
0x14423	    0xc70500000000	               mov dword [0x0401446d], 0	     10406	screen.c	FUNCTION_86
0x1442d	    0xc70500000000	               mov dword [0x04014477], 0	     10407	screen.c	FUNCTION_86
0x14437	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	     10409	screen.c	FUNCTION_86
0x1443a	              0xc9	                                   leave	     10410	screen.c	FUNCTION_86
0x1443b	              0xc3	                                     ret	     10410	screen.c	FUNCTION_86
linecopy	DO,0:functions,0:CALL,5:ELSE,0:IF,2:WHILE,0:FOR,1:SWITCH,0	116
0x122d2	              0x55	                                push rbp	      9143	screen.c	FUNCTION_75
0x122d3	          0x4889e5	                            mov rbp, rsp	      9143	screen.c	FUNCTION_75
0x122d6	        0x4883ec20	                           sub rsp, 0x20	      9143	screen.c	FUNCTION_75
0x122da	          0x897dec	             mov dword [rbp - 0x14], edi	      9143	screen.c	FUNCTION_75
0x122dd	          0x8975e8	             mov dword [rbp - 0x18], esi	      9143	screen.c	FUNCTION_75
0x122e0	        0x488955e0	             mov qword [rbp - 0x20], rdx	      9143	screen.c	FUNCTION_75
0x122e4	    0x488b05000000	            mov rax, qword [0x0401232b] 	      9144	screen.c	FUNCTION_75
0x122eb	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      9144	screen.c	FUNCTION_75
0x122ee	          0x4863d2	                         movsxd rdx, edx	      9144	screen.c	FUNCTION_75
0x122f1	        0x48c1e202	                              shl rdx, 2	      9144	screen.c	FUNCTION_75
0x122f5	          0x4801d0	                            add rax, rdx	      9144	screen.c	FUNCTION_75
0x122f8	            0x8b10	                    mov edx, dword [rax]	      9144	screen.c	FUNCTION_75
0x122fa	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9144	screen.c	FUNCTION_75
0x122fe	    0x8b80a8000000	            mov eax, dword [rax + 0xa8] 	      9144	screen.c	FUNCTION_75
0x12304	             0x1d0	                            add eax, edx	      9144	screen.c	FUNCTION_75
0x12306	          0x8945f8	                mov dword [rbp - 8], eax	      9144	screen.c	FUNCTION_75
0x12309	    0x488b05000000	            mov rax, qword [0x04012350] 	      9145	screen.c	FUNCTION_75
0x12310	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      9145	screen.c	FUNCTION_75
0x12313	          0x4863d2	                         movsxd rdx, edx	      9145	screen.c	FUNCTION_75
0x12316	        0x48c1e202	                              shl rdx, 2	      9145	screen.c	FUNCTION_75
0x1231a	          0x4801d0	                            add rax, rdx	      9145	screen.c	FUNCTION_75
0x1231d	            0x8b10	                    mov edx, dword [rax]	      9145	screen.c	FUNCTION_75
0x1231f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9145	screen.c	FUNCTION_75
0x12323	    0x8b80a8000000	            mov eax, dword [rax + 0xa8] 	      9145	screen.c	FUNCTION_75
0x12329	             0x1d0	                            add eax, edx	      9145	screen.c	FUNCTION_75
0x1232b	          0x8945fc	                mov dword [rbp - 4], eax	      9145	screen.c	FUNCTION_75
0x1232e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9147	screen.c	FUNCTION_75	CALL_1
0x12332	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      9147	screen.c	FUNCTION_75	CALL_1
0x12338	            0x4898	                                    cdqe	      9147	screen.c	FUNCTION_75	CALL_1
0x1233a	    0x488b0d000000	            mov rcx, qword [0x04012381] 	      9147	screen.c	FUNCTION_75	CALL_1
0x12341	          0x8b55fc	                mov edx, dword [rbp - 4]	      9147	screen.c	FUNCTION_75	CALL_1
0x12344	        0x488d3411	                    lea rsi, [rcx + rdx]	      9147	screen.c	FUNCTION_75	CALL_1
0x12348	    0x488b0d000000	            mov rcx, qword [0x0401238f] 	      9147	screen.c	FUNCTION_75	CALL_1
0x1234f	          0x8b55f8	                mov edx, dword [rbp - 8]	      9147	screen.c	FUNCTION_75	CALL_1
0x12352	          0x4801d1	                            add rcx, rdx	      9147	screen.c	FUNCTION_75	CALL_1
0x12355	          0x4889c2	                            mov rdx, rax	      9147	screen.c	FUNCTION_75	CALL_1
0x12358	          0x4889cf	                            mov rdi, rcx	      9147	screen.c	FUNCTION_75	CALL_1
0x1235b	      0xe800000000	                          call 0x40123a0	      9147	screen.c	FUNCTION_75	CALL_1
0x12360	    0x8b0500000000	            mov eax, dword [0x040123a6] 	      9150	screen.c	FUNCTION_75	IF_1
0x12366	            0x85c0	                           test eax, eax	      9150	screen.c	FUNCTION_75	IF_1
0x12368	     0xf84ad000000	                            je 0x401245b	      9150	screen.c	FUNCTION_75	IF_1
0x1236e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9154	screen.c	FUNCTION_75	IF_1	CALL_2
0x12372	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      9154	screen.c	FUNCTION_75	IF_1	CALL_2
0x12378	            0x4898	                                    cdqe	      9154	screen.c	FUNCTION_75	IF_1	CALL_2
0x1237a	    0x488d14850000	                        lea rdx, [rax*4]	      9154	screen.c	FUNCTION_75	IF_1	CALL_2
0x12382	    0x488b05000000	            mov rax, qword [0x040123c9] 	      9154	screen.c	FUNCTION_75	IF_1	CALL_2
0x12389	          0x8b4dfc	                mov ecx, dword [rbp - 4]	      9154	screen.c	FUNCTION_75	IF_1	CALL_2
0x1238c	        0x48c1e102	                              shl rcx, 2	      9154	screen.c	FUNCTION_75	IF_1	CALL_2
0x12390	          0x4801c1	                            add rcx, rax	      9154	screen.c	FUNCTION_75	IF_1	CALL_2
0x12393	    0x488b05000000	            mov rax, qword [0x040123da] 	      9154	screen.c	FUNCTION_75	IF_1	CALL_2
0x1239a	          0x8b75f8	                mov esi, dword [rbp - 8]	      9154	screen.c	FUNCTION_75	IF_1	CALL_2
0x1239d	        0x48c1e602	                              shl rsi, 2	      9154	screen.c	FUNCTION_75	IF_1	CALL_2
0x123a1	          0x4801f0	                            add rax, rsi	      9154	screen.c	FUNCTION_75	IF_1	CALL_2
0x123a4	          0x4889ce	                            mov rsi, rcx	      9154	screen.c	FUNCTION_75	IF_1	CALL_2
0x123a7	          0x4889c7	                            mov rdi, rax	      9154	screen.c	FUNCTION_75	IF_1	CALL_2
0x123aa	      0xe800000000	                          call 0x40123ef	      9154	screen.c	FUNCTION_75	IF_1	CALL_2
0x123af	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      9156	screen.c	FUNCTION_75	IF_1	FOR_1
0x123b6	            0xeb51	                           jmp 0x4012449	      9156	screen.c	FUNCTION_75	IF_1	FOR_1
0x123b8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9157	screen.c	FUNCTION_75	IF_1	FOR_1	CALL_3
0x123bc	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      9157	screen.c	FUNCTION_75	IF_1	FOR_1	CALL_3
0x123c2	            0x4898	                                    cdqe	      9157	screen.c	FUNCTION_75	IF_1	FOR_1	CALL_3
0x123c4	    0x488d14850000	                        lea rdx, [rax*4]	      9157	screen.c	FUNCTION_75	IF_1	FOR_1	CALL_3
0x123cc	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      9157	screen.c	FUNCTION_75	IF_1	FOR_1	CALL_3
0x123cf	            0x4898	                                    cdqe	      9157	screen.c	FUNCTION_75	IF_1	FOR_1	CALL_3
0x123d1	    0x488b04c50000	                  mov rax, qword [rax*8]	      9157	screen.c	FUNCTION_75	IF_1	FOR_1	CALL_3
0x123d9	          0x8b4dfc	                mov ecx, dword [rbp - 4]	      9157	screen.c	FUNCTION_75	IF_1	FOR_1	CALL_3
0x123dc	        0x48c1e102	                              shl rcx, 2	      9157	screen.c	FUNCTION_75	IF_1	FOR_1	CALL_3
0x123e0	          0x4801c1	                            add rcx, rax	      9157	screen.c	FUNCTION_75	IF_1	FOR_1	CALL_3
0x123e3	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      9157	screen.c	FUNCTION_75	IF_1	FOR_1	CALL_3
0x123e6	            0x4898	                                    cdqe	      9157	screen.c	FUNCTION_75	IF_1	FOR_1	CALL_3
0x123e8	    0x488b04c50000	                  mov rax, qword [rax*8]	      9157	screen.c	FUNCTION_75	IF_1	FOR_1	CALL_3
0x123f0	          0x8b75f8	                mov esi, dword [rbp - 8]	      9157	screen.c	FUNCTION_75	IF_1	FOR_1	CALL_3
0x123f3	        0x48c1e602	                              shl rsi, 2	      9157	screen.c	FUNCTION_75	IF_1	FOR_1	CALL_3
0x123f7	          0x4801f0	                            add rax, rsi	      9157	screen.c	FUNCTION_75	IF_1	FOR_1	CALL_3
0x123fa	          0x4889ce	                            mov rsi, rcx	      9157	screen.c	FUNCTION_75	IF_1	FOR_1	CALL_3
0x123fd	          0x4889c7	                            mov rdi, rax	      9157	screen.c	FUNCTION_75	IF_1	FOR_1	CALL_3
0x12400	      0xe800000000	                          call 0x4012445	      9157	screen.c	FUNCTION_75	IF_1	FOR_1	CALL_3
0x12405	        0x8345f401	                add dword [rbp - 0xc], 1	      9156	screen.c	FUNCTION_75	IF_1	FOR_1
0x12409	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      9156	screen.c	FUNCTION_75	IF_1	FOR_1
0x1240c	          0x4863d0	                         movsxd rdx, eax	      9156	screen.c	FUNCTION_75	IF_1	FOR_1
0x1240f	    0x488b05000000	            mov rax, qword [0x04012456] 	      9156	screen.c	FUNCTION_75	IF_1	FOR_1
0x12416	          0x4839c2	                            cmp rdx, rax	      9156	screen.c	FUNCTION_75	IF_1	FOR_1
0x12419	            0x7c9d	                            jl 0x40123f8	      9156	screen.c	FUNCTION_75	IF_1	FOR_1
0x1241b	    0x8b0500000000	            mov eax, dword [0x04012461] 	      9160	screen.c	FUNCTION_75	IF_2
0x12421	      0x3dcc260000	                         cmp eax, 0x26cc	      9160	screen.c	FUNCTION_75	IF_2
0x12426	            0x7532	                           jne 0x401249a	      9160	screen.c	FUNCTION_75	IF_2
0x12428	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9161	screen.c	FUNCTION_75	IF_2	CALL_4
0x1242c	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      9161	screen.c	FUNCTION_75	IF_2	CALL_4
0x12432	            0x4898	                                    cdqe	      9161	screen.c	FUNCTION_75	IF_2	CALL_4
0x12434	    0x488b0d000000	            mov rcx, qword [0x0401247b] 	      9161	screen.c	FUNCTION_75	IF_2	CALL_4
0x1243b	          0x8b55fc	                mov edx, dword [rbp - 4]	      9161	screen.c	FUNCTION_75	IF_2	CALL_4
0x1243e	        0x488d3411	                    lea rsi, [rcx + rdx]	      9161	screen.c	FUNCTION_75	IF_2	CALL_4
0x12442	    0x488b0d000000	            mov rcx, qword [0x04012489] 	      9161	screen.c	FUNCTION_75	IF_2	CALL_4
0x12449	          0x8b55f8	                mov edx, dword [rbp - 8]	      9161	screen.c	FUNCTION_75	IF_2	CALL_4
0x1244c	          0x4801d1	                            add rcx, rdx	      9161	screen.c	FUNCTION_75	IF_2	CALL_4
0x1244f	          0x4889c2	                            mov rdx, rax	      9161	screen.c	FUNCTION_75	IF_2	CALL_4
0x12452	          0x4889cf	                            mov rdi, rcx	      9161	screen.c	FUNCTION_75	IF_2	CALL_4
0x12455	      0xe800000000	                          call 0x401249a	      9161	screen.c	FUNCTION_75	IF_2	CALL_4
0x1245a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9164	screen.c	FUNCTION_75	CALL_5
0x1245e	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      9164	screen.c	FUNCTION_75	CALL_5
0x12464	            0x4898	                                    cdqe	      9164	screen.c	FUNCTION_75	CALL_5
0x12466	        0x488d1400	                    lea rdx, [rax + rax]	      9164	screen.c	FUNCTION_75	CALL_5
0x1246a	    0x488b05000000	            mov rax, qword [0x040124b1] 	      9164	screen.c	FUNCTION_75	CALL_5
0x12471	          0x8b4dfc	                mov ecx, dword [rbp - 4]	      9164	screen.c	FUNCTION_75	CALL_5
0x12474	          0x4801c9	                            add rcx, rcx	      9164	screen.c	FUNCTION_75	CALL_5
0x12477	          0x4801c1	                            add rcx, rax	      9164	screen.c	FUNCTION_75	CALL_5
0x1247a	    0x488b05000000	            mov rax, qword [0x040124c1] 	      9164	screen.c	FUNCTION_75	CALL_5
0x12481	          0x8b75f8	                mov esi, dword [rbp - 8]	      9164	screen.c	FUNCTION_75	CALL_5
0x12484	          0x4801f6	                            add rsi, rsi	      9164	screen.c	FUNCTION_75	CALL_5
0x12487	          0x4801f0	                            add rax, rsi	      9164	screen.c	FUNCTION_75	CALL_5
0x1248a	          0x4889ce	                            mov rsi, rcx	      9164	screen.c	FUNCTION_75	CALL_5
0x1248d	          0x4889c7	                            mov rdi, rax	      9164	screen.c	FUNCTION_75	CALL_5
0x12490	      0xe800000000	                          call 0x40124d5	      9164	screen.c	FUNCTION_75	CALL_5
0x12495	              0x90	                                     nop	      9166	screen.c	FUNCTION_75
0x12496	              0xc9	                                   leave	      9166	screen.c	FUNCTION_75
0x12497	              0xc3	                                     ret	      9166	screen.c	FUNCTION_75
screen_line	DO,0:functions,0:CALL,20:ELSE,10:IF,42:WHILE,4:FOR,1:SWITCH,0	713
0xc341	              0x55	                                push rbp	      6048	screen.c	FUNCTION_32
0xc342	          0x4889e5	                            mov rbp, rsp	      6048	screen.c	FUNCTION_32
0xc345	        0x4883ec60	                           sub rsp, 0x60	      6048	screen.c	FUNCTION_32
0xc349	          0x897dbc	             mov dword [rbp - 0x44], edi	      6048	screen.c	FUNCTION_32
0xc34c	          0x8975b8	             mov dword [rbp - 0x48], esi	      6048	screen.c	FUNCTION_32
0xc34f	          0x8955b4	             mov dword [rbp - 0x4c], edx	      6048	screen.c	FUNCTION_32
0xc352	          0x894db0	             mov dword [rbp - 0x50], ecx	      6048	screen.c	FUNCTION_32
0xc355	        0x448945ac	             mov dword [rbp - 0x54], r8d	      6048	screen.c	FUNCTION_32
0xc359	    0x64488b042528	                mov rax, qword fs:[0x28]	      6048	screen.c	FUNCTION_32
0xc362	        0x488945f8	                mov qword [rbp - 8], rax	      6048	screen.c	FUNCTION_32
0xc366	            0x31c0	                            xor eax, eax	      6048	screen.c	FUNCTION_32
0xc368	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      6055	screen.c	FUNCTION_32
0xc36f	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      6057	screen.c	FUNCTION_32
0xc376	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      6065	screen.c	FUNCTION_32
0xc37d	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6074	screen.c	FUNCTION_32	IF_1
0xc380	          0x4863d0	                         movsxd rdx, eax	      6074	screen.c	FUNCTION_32	IF_1
0xc383	    0x488b05000000	            mov rax, qword [0x0400c3ca] 	      6074	screen.c	FUNCTION_32	IF_1
0xc38a	          0x4839c2	                            cmp rdx, rax	      6074	screen.c	FUNCTION_32	IF_1
0xc38d	            0x7c0d	                            jl 0x400c3dc	      6074	screen.c	FUNCTION_32	IF_1
0xc38f	    0x488b05000000	            mov rax, qword [0x0400c3d6] 	      6075	screen.c	FUNCTION_32	IF_1
0xc396	          0x83e801	                              sub eax, 1	      6075	screen.c	FUNCTION_32	IF_1
0xc399	          0x8945bc	             mov dword [rbp - 0x44], eax	      6075	screen.c	FUNCTION_32	IF_1
0xc39c	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      6076	screen.c	FUNCTION_32	IF_2
0xc39f	          0x4863d0	                         movsxd rdx, eax	      6076	screen.c	FUNCTION_32	IF_2
0xc3a2	    0x488b05000000	            mov rax, qword [0x0400c3e9] 	      6076	screen.c	FUNCTION_32	IF_2
0xc3a9	          0x4839c2	                            cmp rdx, rax	      6076	screen.c	FUNCTION_32	IF_2
0xc3ac	            0x7e0a	                           jle 0x400c3f8	      6076	screen.c	FUNCTION_32	IF_2
0xc3ae	    0x488b05000000	            mov rax, qword [0x0400c3f5] 	      6077	screen.c	FUNCTION_32	IF_2
0xc3b5	          0x8945b4	             mov dword [rbp - 0x4c], eax	      6077	screen.c	FUNCTION_32	IF_2
0xc3b8	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      6080	screen.c	FUNCTION_32	CALL_1
0xc3bb	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6080	screen.c	FUNCTION_32	CALL_1
0xc3be	            0x89d6	                            mov esi, edx	      6080	screen.c	FUNCTION_32	CALL_1
0xc3c0	            0x89c7	                            mov edi, eax	      6080	screen.c	FUNCTION_32	CALL_1
0xc3c2	      0xe800000000	                          call 0x400c407	      6080	screen.c	FUNCTION_32	CALL_1
0xc3c7	    0x488b05000000	            mov rax, qword [0x0400c40e] 	      6083	screen.c	FUNCTION_32
0xc3ce	          0x4889c2	                            mov rdx, rax	      6083	screen.c	FUNCTION_32
0xc3d1	    0x488b05000000	            mov rax, qword [0x0400c418] 	      6083	screen.c	FUNCTION_32
0xc3d8	          0x4829c2	                            sub rdx, rax	      6083	screen.c	FUNCTION_32
0xc3db	          0x4889d0	                            mov rax, rdx	      6083	screen.c	FUNCTION_32
0xc3de	          0x8945c8	             mov dword [rbp - 0x38], eax	      6083	screen.c	FUNCTION_32
0xc3e1	    0x488b05000000	            mov rax, qword [0x0400c428] 	      6084	screen.c	FUNCTION_32
0xc3e8	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      6084	screen.c	FUNCTION_32
0xc3eb	          0x4863d2	                         movsxd rdx, edx	      6084	screen.c	FUNCTION_32
0xc3ee	        0x48c1e202	                              shl rdx, 2	      6084	screen.c	FUNCTION_32
0xc3f2	          0x4801d0	                            add rax, rdx	      6084	screen.c	FUNCTION_32
0xc3f5	            0x8b10	                    mov edx, dword [rax]	      6084	screen.c	FUNCTION_32
0xc3f7	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      6084	screen.c	FUNCTION_32
0xc3fa	             0x1d0	                            add eax, edx	      6084	screen.c	FUNCTION_32
0xc3fc	          0x8945cc	             mov dword [rbp - 0x34], eax	      6084	screen.c	FUNCTION_32
0xc3ff	    0x8b0500000000	            mov eax, dword [0x0400c445] 	      6086	screen.c	FUNCTION_32
0xc405	            0x89c2	                            mov edx, eax	      6086	screen.c	FUNCTION_32
0xc407	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      6086	screen.c	FUNCTION_32
0xc40a	             0x1d0	                            add eax, edx	      6086	screen.c	FUNCTION_32
0xc40c	          0x8945e8	             mov dword [rbp - 0x18], eax	      6086	screen.c	FUNCTION_32
0xc40f	    0x488b05000000	            mov rax, qword [0x0400c456] 	      6087	screen.c	FUNCTION_32
0xc416	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      6087	screen.c	FUNCTION_32
0xc419	          0x4863d2	                         movsxd rdx, edx	      6087	screen.c	FUNCTION_32
0xc41c	        0x48c1e202	                              shl rdx, 2	      6087	screen.c	FUNCTION_32
0xc420	          0x4801d0	                            add rax, rdx	      6087	screen.c	FUNCTION_32
0xc423	            0x8b00	                    mov eax, dword [rax]	      6087	screen.c	FUNCTION_32
0xc425	    0x8b1500000000	            mov edx, dword [0x0400c46b] 	      6087	screen.c	FUNCTION_32
0xc42b	             0x1d0	                            add eax, edx	      6087	screen.c	FUNCTION_32
0xc42d	          0x8945ec	             mov dword [rbp - 0x14], eax	      6087	screen.c	FUNCTION_32
0xc430	        0x837dac00	               cmp dword [rbp - 0x54], 0	      6091	screen.c	FUNCTION_32	IF_3
0xc434	     0xf84ee000000	                            je 0x400c568	      6091	screen.c	FUNCTION_32	IF_3
0xc43a	        0x837db000	               cmp dword [rbp - 0x50], 0	      6094	screen.c	FUNCTION_32	IF_3	IF_4
0xc43e	     0xf8ea0000000	                           jle 0x400c524	      6094	screen.c	FUNCTION_32	IF_3	IF_4
0xc444	            0xeb08	                           jmp 0x400c48e	      6096	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0xc446	        0x8345cc01	               add dword [rbp - 0x34], 1	      6103	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0xc44a	        0x8345d001	               add dword [rbp - 0x30], 1	      6104	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0xc44e	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      6096	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0xc451	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	      6096	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0xc454	            0x7f4d	                            jg 0x400c4e3	      6096	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0xc456	    0x488b15000000	            mov rdx, qword [0x0400c49d] 	      6096	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0xc45d	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6096	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0xc460	          0x4801d0	                            add rax, rdx	      6096	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0xc463	           0xfb600	                   movzx eax, byte [rax]	      6096	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0xc466	            0x3c20	                            cmp al, 0x20	      6096	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0xc468	            0x7539	                           jne 0x400c4e3	      6096	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0xc46a	    0x488b05000000	            mov rax, qword [0x0400c4b1] 	      6097	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0xc471	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      6097	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0xc474	          0x4801d2	                            add rdx, rdx	      6097	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0xc477	          0x4801d0	                            add rax, rdx	      6097	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0xc47a	           0xfb700	                   movzx eax, word [rax]	      6097	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0xc47d	          0x6685c0	                             test ax, ax	      6097	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0xc480	            0x7521	                           jne 0x400c4e3	      6097	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0xc482	    0x8b0500000000	            mov eax, dword [0x0400c4c8] 	      6099	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0xc488	            0x85c0	                           test eax, eax	      6099	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0xc48a	            0x74ba	                            je 0x400c486	      6099	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0xc48c	    0x488b05000000	            mov rax, qword [0x0400c4d3] 	      6099	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0xc493	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      6099	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0xc496	        0x48c1e202	                              shl rdx, 2	      6099	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0xc49a	          0x4801d0	                            add rax, rdx	      6099	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0xc49d	            0x8b00	                    mov eax, dword [rax]	      6099	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0xc49f	            0x85c0	                           test eax, eax	      6099	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0xc4a1	            0x74a3	                            je 0x400c486	      6099	screen.c	FUNCTION_32	IF_3	IF_4	WHILE_1
0xc4a3	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      6106	screen.c	FUNCTION_32	IF_3	IF_4	IF_5
0xc4a6	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	      6106	screen.c	FUNCTION_32	IF_3	IF_4	IF_5
0xc4a9	            0x7f39	                            jg 0x400c524	      6106	screen.c	FUNCTION_32	IF_3	IF_4	IF_5
0xc4ab	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      6108	screen.c	FUNCTION_32	IF_3	IF_4	IF_5
0xc4ae	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      6108	screen.c	FUNCTION_32	IF_3	IF_4	IF_5
0xc4b1	             0x1d0	                            add eax, edx	      6108	screen.c	FUNCTION_32	IF_3	IF_4	IF_5
0xc4b3	          0x8d4801	                      lea ecx, [rax + 1]	      6107	screen.c	FUNCTION_32	IF_3	IF_4	IF_5	CALL_2
0xc4b6	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      6107	screen.c	FUNCTION_32	IF_3	IF_4	IF_5	CALL_2
0xc4b9	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      6107	screen.c	FUNCTION_32	IF_3	IF_4	IF_5	CALL_2
0xc4bc	             0x1c2	                            add edx, eax	      6107	screen.c	FUNCTION_32	IF_3	IF_4	IF_5	CALL_2
0xc4be	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6107	screen.c	FUNCTION_32	IF_3	IF_4	IF_5	CALL_2
0xc4c1	          0x8d7001	                      lea esi, [rax + 1]	      6107	screen.c	FUNCTION_32	IF_3	IF_4	IF_5	CALL_2
0xc4c4	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6107	screen.c	FUNCTION_32	IF_3	IF_4	IF_5	CALL_2
0xc4c7	        0x4883ec08	                              sub rsp, 8	      6107	screen.c	FUNCTION_32	IF_3	IF_4	IF_5	CALL_2
0xc4cb	            0x6a00	                                  push 0	      6107	screen.c	FUNCTION_32	IF_3	IF_4	IF_5	CALL_2
0xc4cd	    0x41b920000000	                           mov r9d, 0x20	      6107	screen.c	FUNCTION_32	IF_3	IF_4	IF_5	CALL_2
0xc4d3	    0x41b820000000	                           mov r8d, 0x20	      6107	screen.c	FUNCTION_32	IF_3	IF_4	IF_5	CALL_2
0xc4d9	            0x89c7	                            mov edi, eax	      6107	screen.c	FUNCTION_32	IF_3	IF_4	IF_5	CALL_2
0xc4db	      0xe800000000	                          call 0x400c520	      6107	screen.c	FUNCTION_32	IF_3	IF_4	IF_5	CALL_2
0xc4e0	        0x4883c410	                           add rsp, 0x10	      6107	screen.c	FUNCTION_32	IF_3	IF_4	IF_5	CALL_2
0xc4e4	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      6110	screen.c	FUNCTION_32	IF_3
0xc4e7	          0x83c001	                              add eax, 1	      6110	screen.c	FUNCTION_32	IF_3
0xc4ea	          0x8945d0	             mov dword [rbp - 0x30], eax	      6110	screen.c	FUNCTION_32	IF_3
0xc4ed	    0x488b05000000	            mov rax, qword [0x0400c534] 	      6111	screen.c	FUNCTION_32	IF_3
0xc4f4	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      6111	screen.c	FUNCTION_32	IF_3
0xc4f7	          0x4863d2	                         movsxd rdx, edx	      6111	screen.c	FUNCTION_32	IF_3
0xc4fa	        0x48c1e202	                              shl rdx, 2	      6111	screen.c	FUNCTION_32	IF_3
0xc4fe	          0x4801d0	                            add rax, rdx	      6111	screen.c	FUNCTION_32	IF_3
0xc501	            0x8b10	                    mov edx, dword [rax]	      6111	screen.c	FUNCTION_32	IF_3
0xc503	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      6111	screen.c	FUNCTION_32	IF_3
0xc506	             0x1c2	                            add edx, eax	      6111	screen.c	FUNCTION_32	IF_3
0xc508	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      6111	screen.c	FUNCTION_32	IF_3
0xc50b	             0x1d0	                            add eax, edx	      6111	screen.c	FUNCTION_32	IF_3
0xc50d	          0x8945cc	             mov dword [rbp - 0x34], eax	      6111	screen.c	FUNCTION_32	IF_3
0xc510	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      6112	screen.c	FUNCTION_32	IF_3
0xc513	           0x145c8	             add dword [rbp - 0x38], eax	      6112	screen.c	FUNCTION_32	IF_3
0xc516	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      6113	screen.c	FUNCTION_32	IF_3
0xc519	          0xc1f81f	                           sar eax, 0x1f	      6113	screen.c	FUNCTION_32	IF_3
0xc51c	            0x89c2	                            mov edx, eax	      6113	screen.c	FUNCTION_32	IF_3
0xc51e	          0x3355b0	             xor edx, dword [rbp - 0x50]	      6113	screen.c	FUNCTION_32	IF_3
0xc521	            0x29c2	                            sub edx, eax	      6113	screen.c	FUNCTION_32	IF_3
0xc523	            0x89d0	                            mov eax, edx	      6113	screen.c	FUNCTION_32	IF_3
0xc525	          0x8945b4	             mov dword [rbp - 0x4c], eax	      6113	screen.c	FUNCTION_32	IF_3
0xc528	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      6117	screen.c	FUNCTION_32	CALL_3
0xc52b	          0x2b45d0	             sub eax, dword [rbp - 0x30]	      6117	screen.c	FUNCTION_32	CALL_3
0xc52e	            0x89c2	                            mov edx, eax	      6117	screen.c	FUNCTION_32	CALL_3
0xc530	          0x8b4dcc	             mov ecx, dword [rbp - 0x34]	      6117	screen.c	FUNCTION_32	CALL_3
0xc533	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      6117	screen.c	FUNCTION_32	CALL_3
0xc536	            0x89ce	                            mov esi, ecx	      6117	screen.c	FUNCTION_32	CALL_3
0xc538	            0x89c7	                            mov edi, eax	      6117	screen.c	FUNCTION_32	CALL_3
0xc53a	      0xe8cbfbffff	              call sym.char_needs_redraw	      6117	screen.c	FUNCTION_32	CALL_3
0xc53f	          0x8945d8	             mov dword [rbp - 0x28], eax	      6117	screen.c	FUNCTION_32	CALL_3
0xc542	      0xe91b050000	                           jmp 0x400caa2	      6119	screen.c	FUNCTION_32	WHILE_2
0xc547	    0x8b0500000000	            mov eax, dword [0x0400c58d] 	      6122	screen.c	FUNCTION_32	WHILE_2	IF_6
0xc54d	            0x85c0	                           test eax, eax	      6122	screen.c	FUNCTION_32	WHILE_2	IF_6
0xc54f	            0x7423	                            je 0x400c5b4	      6122	screen.c	FUNCTION_32	WHILE_2	IF_6
0xc551	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      6122	screen.c	FUNCTION_32	WHILE_2	IF_6
0xc554	          0x83c001	                              add eax, 1	      6122	screen.c	FUNCTION_32	WHILE_2	IF_6
0xc557	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	      6122	screen.c	FUNCTION_32	WHILE_2	IF_6
0xc55a	            0x7d18	                           jge 0x400c5b4	      6122	screen.c	FUNCTION_32	WHILE_2	IF_6
0xc55c	    0x488b05000000	            mov rax, qword [0x0400c5a3] 	      6123	screen.c	FUNCTION_32	WHILE_2	IF_6
0xc563	          0x8b4de8	             mov ecx, dword [rbp - 0x18]	      6123	screen.c	FUNCTION_32	WHILE_2	IF_6
0xc566	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      6123	screen.c	FUNCTION_32	WHILE_2	IF_6
0xc569	            0x89ce	                            mov esi, ecx	      6123	screen.c	FUNCTION_32	WHILE_2	IF_6
0xc56b	            0x89d7	                            mov edi, edx	      6123	screen.c	FUNCTION_32	WHILE_2	IF_6
0xc56d	            0xffd0	                                call rax	      6123	screen.c	FUNCTION_32	WHILE_2	IF_6
0xc56f	          0x8945e0	             mov dword [rbp - 0x20], eax	      6123	screen.c	FUNCTION_32	WHILE_2	IF_6
0xc572	            0xeb07	                           jmp 0x400c5bb	      6123	screen.c	FUNCTION_32	WHILE_2	IF_6
0xc574	    0xc745e0010000	               mov dword [rbp - 0x20], 1	      6125	screen.c	FUNCTION_32	WHILE_2	ELSE_1
0xc57b	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      6128	screen.c	FUNCTION_32	WHILE_2
0xc57e	          0x8945f0	             mov dword [rbp - 0x10], eax	      6128	screen.c	FUNCTION_32	WHILE_2
0xc581	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      6129	screen.c	FUNCTION_32	WHILE_2	CALL_4
0xc585	            0x752a	                           jne 0x400c5f1	      6129	screen.c	FUNCTION_32	WHILE_2	CALL_4
0xc587	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      6130	screen.c	FUNCTION_32	WHILE_2
0xc58a	          0x2b45d0	             sub eax, dword [rbp - 0x30]	      6130	screen.c	FUNCTION_32	WHILE_2
0xc58d	          0x2b45e0	             sub eax, dword [rbp - 0x20]	      6129	screen.c	FUNCTION_32	WHILE_2	CALL_4
0xc590	          0x8b4de0	             mov ecx, dword [rbp - 0x20]	      6130	screen.c	FUNCTION_32	WHILE_2
0xc593	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      6130	screen.c	FUNCTION_32	WHILE_2
0xc596	             0x1ca	                            add edx, ecx	      6130	screen.c	FUNCTION_32	WHILE_2
0xc598	            0x89d6	                            mov esi, edx	      6129	screen.c	FUNCTION_32	WHILE_2	CALL_4
0xc59a	          0x8b4de0	             mov ecx, dword [rbp - 0x20]	      6129	screen.c	FUNCTION_32	WHILE_2	CALL_4
0xc59d	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      6129	screen.c	FUNCTION_32	WHILE_2	CALL_4
0xc5a0	             0x1ca	                            add edx, ecx	      6129	screen.c	FUNCTION_32	WHILE_2	CALL_4
0xc5a2	            0x89d1	                            mov ecx, edx	      6129	screen.c	FUNCTION_32	WHILE_2	CALL_4
0xc5a4	            0x89c2	                            mov edx, eax	      6129	screen.c	FUNCTION_32	WHILE_2	CALL_4
0xc5a6	            0x89cf	                            mov edi, ecx	      6129	screen.c	FUNCTION_32	WHILE_2	CALL_4
0xc5a8	      0xe85dfbffff	              call sym.char_needs_redraw	      6129	screen.c	FUNCTION_32	WHILE_2	CALL_4
0xc5ad	            0x85c0	                           test eax, eax	      6129	screen.c	FUNCTION_32	WHILE_2	CALL_4
0xc5af	            0x7407	                            je 0x400c5f8	      6129	screen.c	FUNCTION_32	WHILE_2	CALL_4
0xc5b1	      0xb801000000	                              mov eax, 1	      6129	screen.c	FUNCTION_32	WHILE_2	CALL_4
0xc5b6	            0xeb05	                           jmp 0x400c5fd	      6129	screen.c	FUNCTION_32	WHILE_2	CALL_4
0xc5b8	      0xb800000000	                              mov eax, 0	      6129	screen.c	FUNCTION_32	WHILE_2	CALL_4
0xc5bd	          0x8945d8	             mov dword [rbp - 0x28], eax	      6129	screen.c	FUNCTION_32	WHILE_2	CALL_4
0xc5c0	        0x837df000	               cmp dword [rbp - 0x10], 0	      6147	screen.c	FUNCTION_32	WHILE_2	IF_10
0xc5c4	     0xf8425040000	                            je 0x400ca2f	      6147	screen.c	FUNCTION_32	WHILE_2	IF_10
0xc5ca	    0x8b0500000000	            mov eax, dword [0x0400c610] 	      6161	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0xc5d0	            0x85c0	                           test eax, eax	      6161	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0xc5d2	     0xf84fa000000	                            je 0x400c712	      6161	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0xc5d8	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      6162	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0xc5dc	     0xf85f0000000	                           jne 0x400c712	      6162	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0xc5e2	    0x488b05000000	            mov rax, qword [0x0400c629] 	      6166	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0xc5e9	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      6166	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0xc5ec	          0x4801d2	                            add rdx, rdx	      6166	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0xc5ef	          0x4801d0	                            add rax, rdx	      6166	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0xc5f2	           0xfb700	                   movzx eax, word [rax]	      6166	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0xc5f5	          0x6685c0	                             test ax, ax	      6166	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0xc5f8	     0xf84d4000000	                            je 0x400c712	      6166	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0xc5fe	    0x488b05000000	            mov rax, qword [0x0400c645] 	      6167	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0xc605	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      6167	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0xc608	          0x4801d2	                            add rdx, rdx	      6167	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0xc60b	          0x4801d0	                            add rax, rdx	      6167	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0xc60e	           0xfb710	                   movzx edx, word [rax]	      6167	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0xc611	    0x488b05000000	            mov rax, qword [0x0400c658] 	      6167	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0xc618	          0x8b4dcc	             mov ecx, dword [rbp - 0x34]	      6167	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0xc61b	          0x4801c9	                            add rcx, rcx	      6167	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0xc61e	          0x4801c8	                            add rax, rcx	      6167	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0xc621	           0xfb700	                   movzx eax, word [rax]	      6167	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0xc624	          0x6639c2	                              cmp dx, ax	      6167	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0xc627	     0xf84a5000000	                            je 0x400c712	      6167	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0xc62d	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      6172	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	CALL_6
0xc630	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      6172	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	CALL_6
0xc633	             0x1c2	                            add edx, eax	      6172	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	CALL_6
0xc635	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6172	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	CALL_6
0xc638	            0x89d6	                            mov esi, edx	      6172	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	CALL_6
0xc63a	            0x89c7	                            mov edi, eax	      6172	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	CALL_6
0xc63c	      0xe800000000	                          call 0x400c681	      6172	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	CALL_6
0xc641	    0x488b05000000	            mov rax, qword [0x0400c688] 	      6173	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	CALL_7
0xc648	          0x4889c7	                            mov rdi, rax	      6173	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	CALL_7
0xc64b	      0xe800000000	                          call 0x400c690	      6173	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	CALL_7
0xc650	      0xe800000000	                          call 0x400c695	      6174	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	CALL_8
0xc655	    0xc745d4010000	               mov dword [rbp - 0x2c], 1	      6175	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0xc65c	    0xc745d8010000	               mov dword [rbp - 0x28], 1	      6176	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11
0xc663	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      6182	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12
0xc666	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      6182	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12
0xc669	             0x1d0	                            add eax, edx	      6182	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12
0xc66b	            0x85c0	                           test eax, eax	      6182	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12
0xc66d	            0x7e59	                           jle 0x400c708	      6182	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12
0xc66f	    0x488b05000000	            mov rax, qword [0x0400c6b6] 	      6182	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12
0xc676	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      6182	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12
0xc679	          0x83ea01	                              sub edx, 1	      6182	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12
0xc67c	            0x89d2	                            mov edx, edx	      6182	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12
0xc67e	          0x4801d2	                            add rdx, rdx	      6182	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12
0xc681	          0x4801d0	                            add rax, rdx	      6182	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12
0xc684	           0xfb700	                   movzx eax, word [rax]	      6182	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12
0xc687	          0x6685c0	                             test ax, ax	      6182	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12
0xc68a	            0x743c	                            je 0x400c708	      6182	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12
0xc68c	    0x488b05000000	            mov rax, qword [0x0400c6d3] 	      6184	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12
0xc693	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      6184	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12
0xc696	          0x83ea01	                              sub edx, 1	      6184	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12
0xc699	            0x89d2	                            mov edx, edx	      6184	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12
0xc69b	          0x4801d2	                            add rdx, rdx	      6184	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12
0xc69e	          0x4801d0	                            add rax, rdx	      6184	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12
0xc6a1	           0xfb700	                   movzx eax, word [rax]	      6184	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12
0xc6a4	           0xfb7c0	                           movzx eax, ax	      6184	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12
0xc6a7	    0x890500000000	            mov dword [0x0400c6ed], eax 	      6184	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12
0xc6ad	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      6185	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12	CALL_9
0xc6b0	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      6185	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12	CALL_9
0xc6b3	             0x1c2	                            add edx, eax	      6185	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12	CALL_9
0xc6b5	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6185	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12	CALL_9
0xc6b8	            0x89d6	                            mov esi, edx	      6185	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12	CALL_9
0xc6ba	            0x89c7	                            mov edi, eax	      6185	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12	CALL_9
0xc6bc	      0xe800000000	                          call 0x400c701	      6185	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12	CALL_9
0xc6c1	      0xe800000000	                          call 0x400c706	      6186	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12	CALL_10
0xc6c6	            0xeb0a	                           jmp 0x400c712	      6186	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	IF_12	CALL_10
0xc6c8	    0xc70500000000	               mov dword [0x0400c712], 0	      6189	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_11	ELSE_2
0xc6d2	    0x8b0500000000	            mov eax, dword [0x0400c718] 	      6192	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13
0xc6d8	            0x85c0	                           test eax, eax	      6192	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13
0xc6da	     0xf84d3000000	                            je 0x400c7f3	      6192	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13
0xc6e0	        0x837de001	               cmp dword [rbp - 0x20], 1	      6198	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_14
0xc6e4	            0x7541	                           jne 0x400c767	      6198	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_14
0xc6e6	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      6199	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_14
0xc6e9	          0x83c001	                              add eax, 1	      6199	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_14
0xc6ec	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	      6199	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_14
0xc6ef	            0x7d36	                           jge 0x400c767	      6199	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_14
0xc6f1	    0x488b05000000	            mov rax, qword [0x0400c738] 	      6200	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_14
0xc6f8	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	      6200	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_14
0xc6fb	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      6200	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_14
0xc6fe	            0x89ce	                            mov esi, ecx	      6200	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_14
0xc700	            0x89d7	                            mov edi, edx	      6200	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_14
0xc702	            0xffd0	                                call rax	      6200	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_14
0xc704	          0x83f801	                              cmp eax, 1	      6200	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_14
0xc707	            0x7e1e	                           jle 0x400c767	      6200	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_14
0xc709	    0x488b05000000	            mov rax, qword [0x0400c750] 	      6204	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_14
0xc710	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      6204	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_14
0xc713	          0x83c201	                              add edx, 1	      6204	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_14
0xc716	            0x89d2	                            mov edx, edx	      6204	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_14
0xc718	          0x4801d0	                            add rax, rdx	      6204	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_14
0xc71b	          0xc60000	                       mov byte [rax], 0	      6204	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_14
0xc71e	    0xc745d8010000	               mov dword [rbp - 0x28], 1	      6205	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_14
0xc725	            0xeb60	                           jmp 0x400c7c7	      6205	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_14
0xc727	        0x837de002	               cmp dword [rbp - 0x20], 2	      6207	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0xc72b	            0x755a	                           jne 0x400c7c7	      6207	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0xc72d	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      6208	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0xc730	          0x83c002	                              add eax, 2	      6208	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0xc733	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	      6208	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0xc736	            0x7d4f	                           jge 0x400c7c7	      6208	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0xc738	    0x488b05000000	            mov rax, qword [0x0400c77f] 	      6209	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0xc73f	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	      6209	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0xc742	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      6209	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0xc745	            0x89ce	                            mov esi, ecx	      6209	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0xc747	            0x89d7	                            mov edi, edx	      6209	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0xc749	            0xffd0	                                call rax	      6209	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0xc74b	          0x83f801	                              cmp eax, 1	      6209	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0xc74e	            0x7537	                           jne 0x400c7c7	      6209	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0xc750	    0x488b05000000	            mov rax, qword [0x0400c797] 	      6210	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0xc757	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      6210	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0xc75a	          0x8d4a01	                      lea ecx, [rdx + 1]	      6210	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0xc75d	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      6210	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0xc760	            0x89d6	                            mov esi, edx	      6210	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0xc762	            0x89cf	                            mov edi, ecx	      6210	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0xc764	            0xffd0	                                call rax	      6210	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0xc766	          0x83f801	                              cmp eax, 1	      6210	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0xc769	            0x7e1c	                           jle 0x400c7c7	      6210	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0xc76b	    0x488b05000000	            mov rax, qword [0x0400c7b2] 	      6215	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0xc772	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      6215	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0xc775	          0x83c202	                              add edx, 2	      6215	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0xc778	            0x89d2	                            mov edx, edx	      6215	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0xc77a	          0x4801d0	                            add rax, rdx	      6215	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0xc77d	          0xc60000	                       mov byte [rax], 0	      6215	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0xc780	    0xc745d8010000	               mov dword [rbp - 0x28], 1	      6216	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	ELSE_3	IF_15
0xc787	    0x8b0500000000	            mov eax, dword [0x0400c7cd] 	      6219	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_16
0xc78d	      0x3dcc260000	                         cmp eax, 0x26cc	      6219	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_16
0xc792	            0x751f	                           jne 0x400c7f3	      6219	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_16
0xc794	    0x488b15000000	            mov rdx, qword [0x0400c7db] 	      6220	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_16
0xc79b	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6220	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_16
0xc79e	          0x4801c2	                            add rdx, rax	      6220	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_16
0xc7a1	    0x488b0d000000	            mov rcx, qword [0x0400c7e8] 	      6220	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_16
0xc7a8	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      6220	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_16
0xc7ab	          0x4801c8	                            add rax, rcx	      6220	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_16
0xc7ae	           0xfb600	                   movzx eax, byte [rax]	      6220	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_16
0xc7b1	            0x8802	                      mov byte [rdx], al	      6220	screen.c	FUNCTION_32	WHILE_2	IF_10	ELSE_2	IF_13	IF_16
0xc7b3	    0x8b0500000000	            mov eax, dword [0x0400c7f9] 	      6227	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0xc7b9	            0x85c0	                           test eax, eax	      6227	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0xc7bb	            0x746b	                            je 0x400c868	      6227	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0xc7bd	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      6227	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0xc7c0	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      6227	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0xc7c3	             0x1d0	                            add eax, edx	      6227	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0xc7c5	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	      6227	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0xc7c8	            0x755e	                           jne 0x400c868	      6227	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0xc7ca	        0x837de001	               cmp dword [rbp - 0x20], 1	      6228	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0xc7ce	            0x7518	                           jne 0x400c828	      6228	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0xc7d0	    0x488b05000000	            mov rax, qword [0x0400c817] 	      6229	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0xc7d7	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	      6229	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0xc7da	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      6229	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0xc7dd	            0x89ce	                            mov esi, ecx	      6229	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0xc7df	            0x89d7	                            mov edi, edx	      6229	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0xc7e1	            0xffd0	                                call rax	      6229	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0xc7e3	          0x83f801	                              cmp eax, 1	      6229	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0xc7e6	            0x7f39	                            jg 0x400c861	      6229	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0xc7e8	        0x837de002	               cmp dword [rbp - 0x20], 2	      6230	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0xc7ec	            0x753a	                           jne 0x400c868	      6230	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0xc7ee	    0x488b05000000	            mov rax, qword [0x0400c835] 	      6231	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0xc7f5	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	      6231	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0xc7f8	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      6231	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0xc7fb	            0x89ce	                            mov esi, ecx	      6231	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0xc7fd	            0x89d7	                            mov edi, edx	      6231	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0xc7ff	            0xffd0	                                call rax	      6231	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0xc801	          0x83f801	                              cmp eax, 1	      6231	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0xc804	            0x7522	                           jne 0x400c868	      6231	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0xc806	    0x488b05000000	            mov rax, qword [0x0400c84d] 	      6232	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0xc80d	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      6232	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0xc810	          0x8d4a01	                      lea ecx, [rdx + 1]	      6232	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0xc813	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      6232	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0xc816	            0x89d6	                            mov esi, edx	      6232	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0xc818	            0x89cf	                            mov edi, ecx	      6232	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0xc81a	            0xffd0	                                call rax	      6232	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0xc81c	          0x83f801	                              cmp eax, 1	      6232	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0xc81f	            0x7e07	                           jle 0x400c868	      6232	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0xc821	    0xc745dc010000	               mov dword [rbp - 0x24], 1	      6233	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_17
0xc828	    0x488b15000000	            mov rdx, qword [0x0400c86f] 	      6236	screen.c	FUNCTION_32	WHILE_2	IF_10
0xc82f	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6236	screen.c	FUNCTION_32	WHILE_2	IF_10
0xc832	          0x4801c2	                            add rdx, rax	      6236	screen.c	FUNCTION_32	WHILE_2	IF_10
0xc835	    0x488b0d000000	            mov rcx, qword [0x0400c87c] 	      6236	screen.c	FUNCTION_32	WHILE_2	IF_10
0xc83c	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      6236	screen.c	FUNCTION_32	WHILE_2	IF_10
0xc83f	          0x4801c8	                            add rax, rcx	      6236	screen.c	FUNCTION_32	WHILE_2	IF_10
0xc842	           0xfb600	                   movzx eax, byte [rax]	      6236	screen.c	FUNCTION_32	WHILE_2	IF_10
0xc845	            0x8802	                      mov byte [rdx], al	      6236	screen.c	FUNCTION_32	WHILE_2	IF_10
0xc847	    0x8b0500000000	            mov eax, dword [0x0400c88d] 	      6238	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18
0xc84d	            0x85c0	                           test eax, eax	      6238	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18
0xc84f	     0xf8487000000	                            je 0x400c91c	      6238	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18
0xc855	    0x488b05000000	            mov rax, qword [0x0400c89c] 	      6240	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18
0xc85c	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      6240	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18
0xc85f	        0x48c1e202	                              shl rdx, 2	      6240	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18
0xc863	          0x4801c2	                            add rdx, rax	      6240	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18
0xc866	    0x488b05000000	            mov rax, qword [0x0400c8ad] 	      6240	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18
0xc86d	          0x8b4dc8	             mov ecx, dword [rbp - 0x38]	      6240	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18
0xc870	        0x48c1e102	                              shl rcx, 2	      6240	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18
0xc874	          0x4801c8	                            add rax, rcx	      6240	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18
0xc877	            0x8b00	                    mov eax, dword [rax]	      6240	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18
0xc879	            0x8902	                    mov dword [rdx], eax	      6240	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18
0xc87b	    0x488b05000000	            mov rax, qword [0x0400c8c2] 	      6241	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18	IF_19
0xc882	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      6241	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18	IF_19
0xc885	        0x48c1e202	                              shl rdx, 2	      6241	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18	IF_19
0xc889	          0x4801d0	                            add rax, rdx	      6241	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18	IF_19
0xc88c	            0x8b00	                    mov eax, dword [rax]	      6241	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18	IF_19
0xc88e	            0x85c0	                           test eax, eax	      6241	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18	IF_19
0xc890	            0x744a	                            je 0x400c91c	      6241	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18	IF_19
0xc892	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      6245	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18	IF_19	FOR_1
0xc899	            0xeb36	                           jmp 0x400c911	      6245	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18	IF_19	FOR_1
0xc89b	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      6246	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18	IF_19	FOR_1
0xc89e	            0x4898	                                    cdqe	      6246	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18	IF_19	FOR_1
0xc8a0	    0x488b04c50000	                  mov rax, qword [rax*8]	      6246	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18	IF_19	FOR_1
0xc8a8	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      6246	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18	IF_19	FOR_1
0xc8ab	        0x48c1e202	                              shl rdx, 2	      6246	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18	IF_19	FOR_1
0xc8af	          0x4801c2	                            add rdx, rax	      6246	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18	IF_19	FOR_1
0xc8b2	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      6246	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18	IF_19	FOR_1
0xc8b5	            0x4898	                                    cdqe	      6246	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18	IF_19	FOR_1
0xc8b7	    0x488b04c50000	                  mov rax, qword [rax*8]	      6246	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18	IF_19	FOR_1
0xc8bf	          0x8b4dc8	             mov ecx, dword [rbp - 0x38]	      6246	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18	IF_19	FOR_1
0xc8c2	        0x48c1e102	                              shl rcx, 2	      6246	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18	IF_19	FOR_1
0xc8c6	          0x4801c8	                            add rax, rcx	      6246	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18	IF_19	FOR_1
0xc8c9	            0x8b00	                    mov eax, dword [rax]	      6246	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18	IF_19	FOR_1
0xc8cb	            0x8902	                    mov dword [rdx], eax	      6246	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18	IF_19	FOR_1
0xc8cd	        0x8345e401	               add dword [rbp - 0x1c], 1	      6245	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18	IF_19	FOR_1
0xc8d1	    0x8b0500000000	            mov eax, dword [0x0400c917] 	      6245	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18	IF_19	FOR_1
0xc8d7	          0x3945e4	            cmp dword [rbp - 0x1c], eax 	      6245	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18	IF_19	FOR_1
0xc8da	            0x7cbf	                            jl 0x400c8db	      6245	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_18	IF_19	FOR_1
0xc8dc	        0x837de002	               cmp dword [rbp - 0x20], 2	      6249	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_20
0xc8e0	            0x7529	                           jne 0x400c94b	      6249	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_20
0xc8e2	    0x488b05000000	            mov rax, qword [0x0400c929] 	      6250	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_20
0xc8e9	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      6250	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_20
0xc8ec	          0x83c201	                              add edx, 1	      6250	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_20
0xc8ef	            0x89d2	                            mov edx, edx	      6250	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_20
0xc8f1	          0x4801c2	                            add rdx, rax	      6250	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_20
0xc8f4	    0x488b05000000	            mov rax, qword [0x0400c93b] 	      6250	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_20
0xc8fb	          0x8b4dc8	             mov ecx, dword [rbp - 0x38]	      6250	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_20
0xc8fe	          0x83c101	                              add ecx, 1	      6250	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_20
0xc901	            0x89c9	                            mov ecx, ecx	      6250	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_20
0xc903	          0x4801c8	                            add rax, rcx	      6250	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_20
0xc906	           0xfb600	                   movzx eax, byte [rax]	      6250	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_20
0xc909	            0x8802	                      mov byte [rdx], al	      6250	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_20
0xc90b	    0x8b0500000000	            mov eax, dword [0x0400c951] 	      6266	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21
0xc911	            0x85c0	                           test eax, eax	      6258	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21
0xc913	            0x7441	                            je 0x400c996	      6258	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21
0xc915	    0x488b05000000	            mov rax, qword [0x0400c95c] 	      6270	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21
0xc91c	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      6270	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21
0xc91f	          0x4801d2	                            add rdx, rdx	      6270	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21
0xc922	          0x4801d0	                            add rax, rdx	      6270	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21
0xc925	           0xfb700	                   movzx eax, word [rax]	      6270	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21
0xc928	           0xfb7c0	                           movzx eax, ax	      6270	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21
0xc92b	          0x8945c4	             mov dword [rbp - 0x3c], eax	      6270	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21
0xc92e	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      6271	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21	IF_22
0xc931	      0x3dff000000	                           cmp eax, 0xff	      6271	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21	IF_22
0xc936	            0x7e0d	                           jle 0x400c985	      6271	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21	IF_22
0xc938	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      6272	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21	CALL_11
0xc93b	            0x89c7	                            mov edi, eax	      6272	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21	CALL_11
0xc93d	      0xe800000000	                          call 0x400c982	      6272	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21	CALL_11
0xc942	          0x8945c4	             mov dword [rbp - 0x3c], eax	      6272	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21	CALL_11
0xc945	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      6273	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21	IF_23
0xc948	          0x83e002	                              and eax, 2	      6273	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21	IF_23
0xc94b	            0x85c0	                           test eax, eax	      6273	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21	IF_23
0xc94d	            0x7407	                            je 0x400c996	      6273	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21	IF_23
0xc94f	    0xc745d8010000	               mov dword [rbp - 0x28], 1	      6274	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_21	IF_23
0xc956	    0x488b05000000	            mov rax, qword [0x0400c99d] 	      6277	screen.c	FUNCTION_32	WHILE_2	IF_10
0xc95d	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      6277	screen.c	FUNCTION_32	WHILE_2	IF_10
0xc960	          0x4801d2	                            add rdx, rdx	      6277	screen.c	FUNCTION_32	WHILE_2	IF_10
0xc963	          0x4801c2	                            add rdx, rax	      6277	screen.c	FUNCTION_32	WHILE_2	IF_10
0xc966	    0x488b05000000	            mov rax, qword [0x0400c9ad] 	      6277	screen.c	FUNCTION_32	WHILE_2	IF_10
0xc96d	          0x8b4dc8	             mov ecx, dword [rbp - 0x38]	      6277	screen.c	FUNCTION_32	WHILE_2	IF_10
0xc970	          0x4801c9	                            add rcx, rcx	      6277	screen.c	FUNCTION_32	WHILE_2	IF_10
0xc973	          0x4801c8	                            add rax, rcx	      6277	screen.c	FUNCTION_32	WHILE_2	IF_10
0xc976	           0xfb700	                   movzx eax, word [rax]	      6277	screen.c	FUNCTION_32	WHILE_2	IF_10
0xc979	          0x668902	                      mov word [rdx], ax	      6277	screen.c	FUNCTION_32	WHILE_2	IF_10
0xc97c	        0x837de002	               cmp dword [rbp - 0x20], 2	      6281	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_24
0xc980	            0x752b	                           jne 0x400c9ed	      6281	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_24
0xc982	    0x488b05000000	            mov rax, qword [0x0400c9c9] 	      6282	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_24
0xc989	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      6282	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_24
0xc98c	          0x83c201	                              add edx, 1	      6282	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_24
0xc98f	            0x89d2	                            mov edx, edx	      6282	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_24
0xc991	          0x4801d2	                            add rdx, rdx	      6282	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_24
0xc994	          0x4801c2	                            add rdx, rax	      6282	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_24
0xc997	    0x488b05000000	            mov rax, qword [0x0400c9de] 	      6282	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_24
0xc99e	          0x8b4dc8	             mov ecx, dword [rbp - 0x38]	      6282	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_24
0xc9a1	          0x4801c9	                            add rcx, rcx	      6282	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_24
0xc9a4	          0x4801c8	                            add rax, rcx	      6282	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_24
0xc9a7	           0xfb700	                   movzx eax, word [rax]	      6282	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_24
0xc9aa	          0x668902	                      mov word [rdx], ax	      6282	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_24
0xc9ad	    0x8b0500000000	            mov eax, dword [0x0400c9f3] 	      6284	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_25
0xc9b3	            0x85c0	                           test eax, eax	      6284	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_25
0xc9b5	            0x741f	                            je 0x400ca16	      6284	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_25
0xc9b7	        0x837de002	               cmp dword [rbp - 0x20], 2	      6284	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_25
0xc9bb	            0x7519	                           jne 0x400ca16	      6284	screen.c	FUNCTION_32	WHILE_2	IF_10	IF_25
0xc9bd	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      6285	screen.c	FUNCTION_32	WHILE_2	IF_10	CALL_12
0xc9c0	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      6285	screen.c	FUNCTION_32	WHILE_2	IF_10	CALL_12
0xc9c3	             0x1c2	                            add edx, eax	      6285	screen.c	FUNCTION_32	WHILE_2	IF_10	CALL_12
0xc9c5	          0x8b4dbc	             mov ecx, dword [rbp - 0x44]	      6285	screen.c	FUNCTION_32	WHILE_2	IF_10	CALL_12
0xc9c8	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6285	screen.c	FUNCTION_32	WHILE_2	IF_10	CALL_12
0xc9cb	            0x89ce	                            mov esi, ecx	      6285	screen.c	FUNCTION_32	WHILE_2	IF_10	CALL_12
0xc9cd	            0x89c7	                            mov edi, eax	      6285	screen.c	FUNCTION_32	WHILE_2	IF_10	CALL_12
0xc9cf	      0xe8f0400000	                  call sym.screen_char_2	      6285	screen.c	FUNCTION_32	WHILE_2	IF_10	CALL_12
0xc9d4	            0xeb7a	                           jmp 0x400ca90	      6285	screen.c	FUNCTION_32	WHILE_2	IF_10	CALL_12
0xc9d6	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      6288	screen.c	FUNCTION_32	WHILE_2	IF_10	CALL_13
0xc9d9	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      6288	screen.c	FUNCTION_32	WHILE_2	IF_10	CALL_13
0xc9dc	             0x1c2	                            add edx, eax	      6288	screen.c	FUNCTION_32	WHILE_2	IF_10	CALL_13
0xc9de	          0x8b4dbc	             mov ecx, dword [rbp - 0x44]	      6288	screen.c	FUNCTION_32	WHILE_2	IF_10	CALL_13
0xc9e1	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6288	screen.c	FUNCTION_32	WHILE_2	IF_10	CALL_13
0xc9e4	            0x89ce	                            mov esi, ecx	      6288	screen.c	FUNCTION_32	WHILE_2	IF_10	CALL_13
0xc9e6	            0x89c7	                            mov edi, eax	      6288	screen.c	FUNCTION_32	WHILE_2	IF_10	CALL_13
0xc9e8	      0xe8993e0000	                    call sym.screen_char	      6288	screen.c	FUNCTION_32	WHILE_2	IF_10	CALL_13
0xc9ed	            0xeb61	                           jmp 0x400ca90	      6288	screen.c	FUNCTION_32	WHILE_2	IF_10	CALL_13
0xc9ef	    0x8b0500000000	            mov eax, dword [0x0400ca35] 	      6290	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26
0xc9f5	            0x85c0	                           test eax, eax	      6290	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26
0xc9f7	            0x7457	                            je 0x400ca90	      6290	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26
0xc9f9	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      6294	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26
0xc9fc	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      6294	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26
0xc9ff	             0x1d0	                            add eax, edx	      6294	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26
0xca01	            0x85c0	                           test eax, eax	      6294	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26
0xca03	            0x7e4b	                           jle 0x400ca90	      6294	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26
0xca05	    0x488b05000000	            mov rax, qword [0x0400ca4c] 	      6296	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26	IF_27
0xca0c	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      6296	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26	IF_27
0xca0f	          0x4801d2	                            add rdx, rdx	      6296	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26	IF_27
0xca12	          0x4801d0	                            add rax, rdx	      6296	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26	IF_27
0xca15	           0xfb710	                   movzx edx, word [rax]	      6296	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26	IF_27
0xca18	    0x488b05000000	            mov rax, qword [0x0400ca5f] 	      6296	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26	IF_27
0xca1f	          0x8b4dcc	             mov ecx, dword [rbp - 0x34]	      6296	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26	IF_27
0xca22	          0x83e901	                              sub ecx, 1	      6296	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26	IF_27
0xca25	            0x89c9	                            mov ecx, ecx	      6296	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26	IF_27
0xca27	          0x4801c9	                            add rcx, rcx	      6296	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26	IF_27
0xca2a	          0x4801c8	                            add rax, rcx	      6296	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26	IF_27
0xca2d	           0xfb700	                   movzx eax, word [rax]	      6296	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26	IF_27
0xca30	          0x6639c2	                              cmp dx, ax	      6296	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26	IF_27
0xca33	            0x750c	                           jne 0x400ca81	      6296	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26	IF_27
0xca35	    0xc70500000000	               mov dword [0x0400ca7f], 0	      6302	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26	IF_27
0xca3f	            0xeb0f	                           jmp 0x400ca90	      6302	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26	IF_27
0xca41	    0x8b0500000000	            mov eax, dword [0x0400ca87] 	      6304	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26	ELSE_6	IF_28
0xca47	            0x85c0	                           test eax, eax	      6304	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26	ELSE_6	IF_28
0xca49	            0x7405	                            je 0x400ca90	      6304	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26	ELSE_6	IF_28
0xca4b	      0xe800000000	                          call 0x400ca90	      6305	screen.c	FUNCTION_32	WHILE_2	ELSE_5	IF_26	ELSE_6	IF_28
0xca50	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      6308	screen.c	FUNCTION_32	WHILE_2
0xca53	           0x145cc	             add dword [rbp - 0x34], eax	      6308	screen.c	FUNCTION_32	WHILE_2
0xca56	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      6309	screen.c	FUNCTION_32	WHILE_2
0xca59	           0x145c8	             add dword [rbp - 0x38], eax	      6309	screen.c	FUNCTION_32	WHILE_2
0xca5c	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      6310	screen.c	FUNCTION_32	WHILE_2
0xca5f	           0x145d0	             add dword [rbp - 0x30], eax	      6310	screen.c	FUNCTION_32	WHILE_2
0xca62	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      6119	screen.c	FUNCTION_32	WHILE_2
0xca65	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	      6119	screen.c	FUNCTION_32	WHILE_2
0xca68	     0xf8cd9faffff	                            jl 0x400c587	      6119	screen.c	FUNCTION_32	WHILE_2
0xca6e	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      6314	screen.c	FUNCTION_32	IF_29
0xca72	            0x7448	                            je 0x400cafc	      6314	screen.c	FUNCTION_32	IF_29
0xca74	    0x488b15000000	            mov rdx, qword [0x0400cabb] 	      6318	screen.c	FUNCTION_32	IF_29
0xca7b	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6318	screen.c	FUNCTION_32	IF_29
0xca7e	          0x4801d0	                            add rax, rdx	      6318	screen.c	FUNCTION_32	IF_29
0xca81	          0xc60020	                    mov byte [rax], 0x20	      6318	screen.c	FUNCTION_32	IF_29
0xca84	    0x8b0500000000	            mov eax, dword [0x0400caca] 	      6319	screen.c	FUNCTION_32	IF_29	IF_30
0xca8a	            0x85c0	                           test eax, eax	      6319	screen.c	FUNCTION_32	IF_29	IF_30
0xca8c	            0x7417	                            je 0x400cae5	      6319	screen.c	FUNCTION_32	IF_29	IF_30
0xca8e	    0x488b05000000	            mov rax, qword [0x0400cad5] 	      6320	screen.c	FUNCTION_32	IF_29	IF_30
0xca95	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      6320	screen.c	FUNCTION_32	IF_29	IF_30
0xca98	        0x48c1e202	                              shl rdx, 2	      6320	screen.c	FUNCTION_32	IF_29	IF_30
0xca9c	          0x4801d0	                            add rax, rdx	      6320	screen.c	FUNCTION_32	IF_29	IF_30
0xca9f	    0xc70000000000	                      mov dword [rax], 0	      6320	screen.c	FUNCTION_32	IF_29	IF_30
0xcaa5	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      6321	screen.c	FUNCTION_32	IF_29	CALL_15
0xcaa8	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      6321	screen.c	FUNCTION_32	IF_29	CALL_15
0xcaab	             0x1c2	                            add edx, eax	      6321	screen.c	FUNCTION_32	IF_29	CALL_15
0xcaad	          0x8b4dbc	             mov ecx, dword [rbp - 0x44]	      6321	screen.c	FUNCTION_32	IF_29	CALL_15
0xcab0	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6321	screen.c	FUNCTION_32	IF_29	CALL_15
0xcab3	            0x89ce	                            mov esi, ecx	      6321	screen.c	FUNCTION_32	IF_29	CALL_15
0xcab5	            0x89c7	                            mov edi, eax	      6321	screen.c	FUNCTION_32	IF_29	CALL_15
0xcab7	      0xe8ca3d0000	                    call sym.screen_char	      6321	screen.c	FUNCTION_32	IF_29	CALL_15
0xcabc	        0x837db000	               cmp dword [rbp - 0x50], 0	      6325	screen.c	FUNCTION_32	IF_31
0xcac0	     0xf8eb7000000	                           jle 0x400cbbd	      6325	screen.c	FUNCTION_32	IF_31
0xcac6	        0x837dac00	               cmp dword [rbp - 0x54], 0	      6327	screen.c	FUNCTION_32	IF_31
0xcaca	     0xf85ad000000	                           jne 0x400cbbd	      6327	screen.c	FUNCTION_32	IF_31
0xcad0	            0xeb08	                           jmp 0x400cb1a	      6336	screen.c	FUNCTION_32	IF_31	WHILE_3
0xcad2	        0x8345cc01	               add dword [rbp - 0x34], 1	      6343	screen.c	FUNCTION_32	IF_31	WHILE_3
0xcad6	        0x8345d001	               add dword [rbp - 0x30], 1	      6344	screen.c	FUNCTION_32	IF_31	WHILE_3
0xcada	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      6336	screen.c	FUNCTION_32	IF_31	WHILE_3
0xcadd	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	      6336	screen.c	FUNCTION_32	IF_31	WHILE_3
0xcae0	            0x7d4d	                           jge 0x400cb6f	      6336	screen.c	FUNCTION_32	IF_31	WHILE_3
0xcae2	    0x488b15000000	            mov rdx, qword [0x0400cb29] 	      6336	screen.c	FUNCTION_32	IF_31	WHILE_3
0xcae9	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6336	screen.c	FUNCTION_32	IF_31	WHILE_3
0xcaec	          0x4801d0	                            add rax, rdx	      6336	screen.c	FUNCTION_32	IF_31	WHILE_3
0xcaef	           0xfb600	                   movzx eax, byte [rax]	      6336	screen.c	FUNCTION_32	IF_31	WHILE_3
0xcaf2	            0x3c20	                            cmp al, 0x20	      6336	screen.c	FUNCTION_32	IF_31	WHILE_3
0xcaf4	            0x7539	                           jne 0x400cb6f	      6336	screen.c	FUNCTION_32	IF_31	WHILE_3
0xcaf6	    0x488b05000000	            mov rax, qword [0x0400cb3d] 	      6337	screen.c	FUNCTION_32	IF_31	WHILE_3
0xcafd	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      6337	screen.c	FUNCTION_32	IF_31	WHILE_3
0xcb00	          0x4801d2	                            add rdx, rdx	      6337	screen.c	FUNCTION_32	IF_31	WHILE_3
0xcb03	          0x4801d0	                            add rax, rdx	      6337	screen.c	FUNCTION_32	IF_31	WHILE_3
0xcb06	           0xfb700	                   movzx eax, word [rax]	      6337	screen.c	FUNCTION_32	IF_31	WHILE_3
0xcb09	          0x6685c0	                             test ax, ax	      6337	screen.c	FUNCTION_32	IF_31	WHILE_3
0xcb0c	            0x7521	                           jne 0x400cb6f	      6337	screen.c	FUNCTION_32	IF_31	WHILE_3
0xcb0e	    0x8b0500000000	            mov eax, dword [0x0400cb54] 	      6339	screen.c	FUNCTION_32	IF_31	WHILE_3
0xcb14	            0x85c0	                           test eax, eax	      6339	screen.c	FUNCTION_32	IF_31	WHILE_3
0xcb16	            0x74ba	                            je 0x400cb12	      6339	screen.c	FUNCTION_32	IF_31	WHILE_3
0xcb18	    0x488b05000000	            mov rax, qword [0x0400cb5f] 	      6339	screen.c	FUNCTION_32	IF_31	WHILE_3
0xcb1f	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      6339	screen.c	FUNCTION_32	IF_31	WHILE_3
0xcb22	        0x48c1e202	                              shl rdx, 2	      6339	screen.c	FUNCTION_32	IF_31	WHILE_3
0xcb26	          0x4801d0	                            add rax, rdx	      6339	screen.c	FUNCTION_32	IF_31	WHILE_3
0xcb29	            0x8b00	                    mov eax, dword [rax]	      6339	screen.c	FUNCTION_32	IF_31	WHILE_3
0xcb2b	            0x85c0	                           test eax, eax	      6339	screen.c	FUNCTION_32	IF_31	WHILE_3
0xcb2d	            0x74a3	                            je 0x400cb12	      6339	screen.c	FUNCTION_32	IF_31	WHILE_3
0xcb2f	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      6346	screen.c	FUNCTION_32	IF_31	IF_32
0xcb32	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	      6346	screen.c	FUNCTION_32	IF_31	IF_32
0xcb35	            0x7d46	                           jge 0x400cbbd	      6346	screen.c	FUNCTION_32	IF_31	IF_32
0xcb37	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      6391	screen.c	FUNCTION_32	IF_31	IF_32	CALL_18
0xcb3a	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      6391	screen.c	FUNCTION_32	IF_31	IF_32	CALL_18
0xcb3d	          0x8d0c02	                    lea ecx, [rdx + rax]	      6391	screen.c	FUNCTION_32	IF_31	IF_32	CALL_18
0xcb40	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      6391	screen.c	FUNCTION_32	IF_31	IF_32	CALL_18
0xcb43	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      6391	screen.c	FUNCTION_32	IF_31	IF_32	CALL_18
0xcb46	             0x1c2	                            add edx, eax	      6391	screen.c	FUNCTION_32	IF_31	IF_32	CALL_18
0xcb48	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6391	screen.c	FUNCTION_32	IF_31	IF_32	CALL_18
0xcb4b	          0x8d7001	                      lea esi, [rax + 1]	      6391	screen.c	FUNCTION_32	IF_31	IF_32	CALL_18
0xcb4e	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6391	screen.c	FUNCTION_32	IF_31	IF_32	CALL_18
0xcb51	        0x4883ec08	                              sub rsp, 8	      6391	screen.c	FUNCTION_32	IF_31	IF_32	CALL_18
0xcb55	            0x6a00	                                  push 0	      6391	screen.c	FUNCTION_32	IF_31	IF_32	CALL_18
0xcb57	    0x41b920000000	                           mov r9d, 0x20	      6391	screen.c	FUNCTION_32	IF_31	IF_32	CALL_18
0xcb5d	    0x41b820000000	                           mov r8d, 0x20	      6391	screen.c	FUNCTION_32	IF_31	IF_32	CALL_18
0xcb63	            0x89c7	                            mov edi, eax	      6391	screen.c	FUNCTION_32	IF_31	IF_32	CALL_18
0xcb65	      0xe800000000	                          call 0x400cbaa	      6391	screen.c	FUNCTION_32	IF_31	IF_32	CALL_18
0xcb6a	        0x4883c410	                           add rsp, 0x10	      6391	screen.c	FUNCTION_32	IF_31	IF_32	CALL_18
0xcb6e	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      6393	screen.c	FUNCTION_32	IF_31	IF_32
0xcb71	          0x2b45d0	             sub eax, dword [rbp - 0x30]	      6393	screen.c	FUNCTION_32	IF_31	IF_32
0xcb74	           0x145cc	             add dword [rbp - 0x34], eax	      6393	screen.c	FUNCTION_32	IF_31	IF_32
0xcb77	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      6394	screen.c	FUNCTION_32	IF_31	IF_32
0xcb7a	          0x8945d0	             mov dword [rbp - 0x30], eax	      6394	screen.c	FUNCTION_32	IF_31	IF_32
0xcb7d	        0x837db000	               cmp dword [rbp - 0x50], 0	      6398	screen.c	FUNCTION_32	IF_38
0xcb81	     0xf8e44010000	                           jle 0x400cd0b	      6398	screen.c	FUNCTION_32	IF_38
0xcb87	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      6401	screen.c	FUNCTION_32	IF_38	IF_39
0xcb8a	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      6401	screen.c	FUNCTION_32	IF_38	IF_39
0xcb8d	             0x1d0	                            add eax, edx	      6401	screen.c	FUNCTION_32	IF_38	IF_39
0xcb8f	          0x4863d0	                         movsxd rdx, eax	      6401	screen.c	FUNCTION_32	IF_38	IF_39
0xcb92	    0x488b05000000	            mov rax, qword [0x0400cbd9] 	      6401	screen.c	FUNCTION_32	IF_38	IF_39
0xcb99	          0x4839c2	                            cmp rdx, rax	      6401	screen.c	FUNCTION_32	IF_38	IF_39
0xcb9c	     0xf8d17010000	                           jge 0x400ccf9	      6401	screen.c	FUNCTION_32	IF_38	IF_39
0xcba2	        0x488d45c4	                   lea rax, [rbp - 0x3c]	      6405	screen.c	FUNCTION_32	IF_38	IF_39	CALL_19
0xcba6	          0x4889c7	                            mov rdi, rax	      6405	screen.c	FUNCTION_32	IF_38	IF_39	CALL_19
0xcba9	      0xe805810000	                  call sym.fillchar_vsep	      6405	screen.c	FUNCTION_32	IF_38	IF_39	CALL_19
0xcbae	          0x8945f4	              mov dword [rbp - 0xc], eax	      6405	screen.c	FUNCTION_32	IF_38	IF_39	CALL_19
0xcbb1	    0x488b15000000	            mov rdx, qword [0x0400cbf8] 	      6406	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0xcbb8	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6406	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0xcbbb	          0x4801d0	                            add rax, rdx	      6406	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0xcbbe	           0xfb600	                   movzx eax, byte [rax]	      6406	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0xcbc1	           0xfb6d0	                           movzx edx, al	      6406	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0xcbc4	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      6406	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0xcbc7	           0xfb6c0	                           movzx eax, al	      6406	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0xcbca	            0x39c2	                            cmp edx, eax	      6406	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0xcbcc	            0x7554	                           jne 0x400cc62	      6406	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0xcbce	    0x8b0500000000	            mov eax, dword [0x0400cc14] 	      6408	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0xcbd4	            0x85c0	                           test eax, eax	      6408	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0xcbd6	            0x7429	                            je 0x400cc41	      6408	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0xcbd8	    0x488b05000000	            mov rax, qword [0x0400cc1f] 	      6408	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0xcbdf	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      6408	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0xcbe2	        0x48c1e202	                              shl rdx, 2	      6408	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0xcbe6	          0x4801d0	                            add rax, rdx	      6408	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0xcbe9	            0x8b00	                    mov eax, dword [rax]	      6408	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0xcbeb	            0x89c2	                            mov edx, eax	      6408	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0xcbed	        0x837df47f	            cmp dword [rbp - 0xc], 0x7f 	      6409	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0xcbf1	            0x7e05	                           jle 0x400cc38	      6409	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0xcbf3	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      6409	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0xcbf6	            0xeb05	                           jmp 0x400cc3d	      6409	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0xcbf8	      0xb800000000	                              mov eax, 0	      6409	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0xcbfd	            0x39c2	                            cmp edx, eax	      6408	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0xcbff	            0x7521	                           jne 0x400cc62	      6408	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0xcc01	    0x488b05000000	            mov rax, qword [0x0400cc48] 	      6411	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0xcc08	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      6411	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0xcc0b	          0x4801d2	                            add rdx, rdx	      6411	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0xcc0e	          0x4801d0	                            add rax, rdx	      6411	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0xcc11	           0xfb700	                   movzx eax, word [rax]	      6411	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0xcc14	           0xfb7d0	                           movzx edx, ax	      6411	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0xcc17	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      6411	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0xcc1a	            0x39c2	                            cmp edx, eax	      6411	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0xcc1c	     0xf84a9000000	                            je 0x400cd0b	      6411	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0xcc22	    0x488b15000000	            mov rdx, qword [0x0400cc69] 	      6413	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0xcc29	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6413	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0xcc2c	          0x4801d0	                            add rax, rdx	      6413	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0xcc2f	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      6413	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0xcc32	            0x8810	                      mov byte [rax], dl	      6413	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0xcc34	    0x488b05000000	            mov rax, qword [0x0400cc7b] 	      6414	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0xcc3b	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      6414	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0xcc3e	          0x4801d2	                            add rdx, rdx	      6414	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0xcc41	          0x4801d0	                            add rax, rdx	      6414	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0xcc44	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      6414	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0xcc47	          0x668910	                      mov word [rax], dx	      6414	screen.c	FUNCTION_32	IF_38	IF_39	IF_40
0xcc4a	    0x8b0500000000	            mov eax, dword [0x0400cc90] 	      6416	screen.c	FUNCTION_32	IF_38	IF_39	IF_40	IF_41
0xcc50	            0x85c0	                           test eax, eax	      6416	screen.c	FUNCTION_32	IF_38	IF_39	IF_40	IF_41
0xcc52	            0x744c	                            je 0x400cce0	      6416	screen.c	FUNCTION_32	IF_38	IF_39	IF_40	IF_41
0xcc54	        0x837df47f	            cmp dword [rbp - 0xc], 0x7f 	      6418	screen.c	FUNCTION_32	IF_38	IF_39	IF_40	IF_41	IF_42
0xcc58	            0x7e2f	                           jle 0x400ccc9	      6418	screen.c	FUNCTION_32	IF_38	IF_39	IF_40	IF_41	IF_42
0xcc5a	    0x488b05000000	            mov rax, qword [0x0400cca1] 	      6420	screen.c	FUNCTION_32	IF_38	IF_39	IF_40	IF_41	IF_42
0xcc61	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      6420	screen.c	FUNCTION_32	IF_38	IF_39	IF_40	IF_41	IF_42
0xcc64	        0x48c1e202	                              shl rdx, 2	      6420	screen.c	FUNCTION_32	IF_38	IF_39	IF_40	IF_41	IF_42
0xcc68	          0x4801c2	                            add rdx, rax	      6420	screen.c	FUNCTION_32	IF_38	IF_39	IF_40	IF_41	IF_42
0xcc6b	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      6420	screen.c	FUNCTION_32	IF_38	IF_39	IF_40	IF_41	IF_42
0xcc6e	            0x8902	                    mov dword [rdx], eax	      6420	screen.c	FUNCTION_32	IF_38	IF_39	IF_40	IF_41	IF_42
0xcc70	    0x488b05000000	            mov rax, qword [0x0400ccb7] 	      6421	screen.c	FUNCTION_32	IF_38	IF_39	IF_40	IF_41	IF_42
0xcc77	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      6421	screen.c	FUNCTION_32	IF_38	IF_39	IF_40	IF_41	IF_42
0xcc7a	        0x48c1e202	                              shl rdx, 2	      6421	screen.c	FUNCTION_32	IF_38	IF_39	IF_40	IF_41	IF_42
0xcc7e	          0x4801d0	                            add rax, rdx	      6421	screen.c	FUNCTION_32	IF_38	IF_39	IF_40	IF_41	IF_42
0xcc81	    0xc70000000000	                      mov dword [rax], 0	      6421	screen.c	FUNCTION_32	IF_38	IF_39	IF_40	IF_41	IF_42
0xcc87	            0xeb17	                           jmp 0x400cce0	      6421	screen.c	FUNCTION_32	IF_38	IF_39	IF_40	IF_41	IF_42
0xcc89	    0x488b05000000	            mov rax, qword [0x0400ccd0] 	      6424	screen.c	FUNCTION_32	IF_38	IF_39	IF_40	IF_41	ELSE_9
0xcc90	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      6424	screen.c	FUNCTION_32	IF_38	IF_39	IF_40	IF_41	ELSE_9
0xcc93	        0x48c1e202	                              shl rdx, 2	      6424	screen.c	FUNCTION_32	IF_38	IF_39	IF_40	IF_41	ELSE_9
0xcc97	          0x4801d0	                            add rax, rdx	      6424	screen.c	FUNCTION_32	IF_38	IF_39	IF_40	IF_41	ELSE_9
0xcc9a	    0xc70000000000	                      mov dword [rax], 0	      6424	screen.c	FUNCTION_32	IF_38	IF_39	IF_40	IF_41	ELSE_9
0xcca0	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      6427	screen.c	FUNCTION_32	IF_38	IF_39	IF_40	CALL_20
0xcca3	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      6427	screen.c	FUNCTION_32	IF_38	IF_39	IF_40	CALL_20
0xcca6	             0x1c2	                            add edx, eax	      6427	screen.c	FUNCTION_32	IF_38	IF_39	IF_40	CALL_20
0xcca8	          0x8b4dbc	             mov ecx, dword [rbp - 0x44]	      6427	screen.c	FUNCTION_32	IF_38	IF_39	IF_40	CALL_20
0xccab	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6427	screen.c	FUNCTION_32	IF_38	IF_39	IF_40	CALL_20
0xccae	            0x89ce	                            mov esi, ecx	      6427	screen.c	FUNCTION_32	IF_38	IF_39	IF_40	CALL_20
0xccb0	            0x89c7	                            mov edi, eax	      6427	screen.c	FUNCTION_32	IF_38	IF_39	IF_40	CALL_20
0xccb2	      0xe8cf3b0000	                    call sym.screen_char	      6427	screen.c	FUNCTION_32	IF_38	IF_39	IF_40	CALL_20
0xccb7	            0xeb12	                           jmp 0x400cd0b	      6433	screen.c	FUNCTION_32	ELSE_10
0xccb9	    0x488b15000000	            mov rdx, qword [0x0400cd00] 	      6431	screen.c	FUNCTION_32	IF_38	ELSE_10
0xccc0	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6431	screen.c	FUNCTION_32	IF_38	ELSE_10
0xccc3	            0x4898	                                    cdqe	      6431	screen.c	FUNCTION_32	IF_38	ELSE_10
0xccc5	          0x4801d0	                            add rax, rdx	      6431	screen.c	FUNCTION_32	IF_38	ELSE_10
0xccc8	          0xc60000	                       mov byte [rax], 0	      6431	screen.c	FUNCTION_32	IF_38	ELSE_10
0xcccb	              0x90	                                     nop	      6433	screen.c	FUNCTION_32	ELSE_10
0xcccc	        0x488b45f8	                mov rax, qword [rbp - 8]	      6433	screen.c	FUNCTION_32	ELSE_10
0xccd0	    0x644833042528	                xor rax, qword fs:[0x28]	      6433	screen.c	FUNCTION_32	ELSE_10
0xccd9	            0x7405	                            je 0x400cd20	      6433	screen.c	FUNCTION_32	ELSE_10
0xccdb	      0xe800000000	                          call 0x400cd20	      6433	screen.c	FUNCTION_32	ELSE_10
0xcce0	              0xc9	                                   leave	      6433	screen.c	FUNCTION_32	ELSE_10
0xcce1	              0xc3	                                     ret	      6433	screen.c	FUNCTION_32	ELSE_10
advance_color_col	DO,0:functions,0:CALL,0:ELSE,0:IF,0:WHILE,1:FOR,0:SWITCH,0	28
0x48f9	              0x55	                                push rbp	      2446	screen.c	FUNCTION_22
0x48fa	          0x4889e5	                            mov rbp, rsp	      2446	screen.c	FUNCTION_22
0x48fd	          0x897dfc	                mov dword [rbp - 4], edi	      2446	screen.c	FUNCTION_22
0x4900	        0x488975f0	             mov qword [rbp - 0x10], rsi	      2446	screen.c	FUNCTION_22
0x4904	            0xeb12	                           jmp 0x4004958	      2447	screen.c	FUNCTION_22	WHILE_1
0x4906	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2448	screen.c	FUNCTION_22	WHILE_1
0x490a	          0x488b00	                    mov rax, qword [rax]	      2448	screen.c	FUNCTION_22	WHILE_1
0x490d	        0x488d5004	                      lea rdx, [rax + 4]	      2448	screen.c	FUNCTION_22	WHILE_1
0x4911	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2448	screen.c	FUNCTION_22	WHILE_1
0x4915	          0x488910	                    mov qword [rax], rdx	      2448	screen.c	FUNCTION_22	WHILE_1
0x4918	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2447	screen.c	FUNCTION_22	WHILE_1
0x491c	          0x488b00	                    mov rax, qword [rax]	      2447	screen.c	FUNCTION_22	WHILE_1
0x491f	            0x8b00	                    mov eax, dword [rax]	      2447	screen.c	FUNCTION_22	WHILE_1
0x4921	            0x85c0	                           test eax, eax	      2447	screen.c	FUNCTION_22	WHILE_1
0x4923	            0x780e	                            js 0x4004973	      2447	screen.c	FUNCTION_22	WHILE_1
0x4925	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2447	screen.c	FUNCTION_22	WHILE_1
0x4929	          0x488b00	                    mov rax, qword [rax]	      2447	screen.c	FUNCTION_22	WHILE_1
0x492c	            0x8b00	                    mov eax, dword [rax]	      2447	screen.c	FUNCTION_22	WHILE_1
0x492e	          0x3b45fc	                cmp eax, dword [rbp - 4]	      2447	screen.c	FUNCTION_22	WHILE_1
0x4931	            0x7cd3	                            jl 0x4004946	      2447	screen.c	FUNCTION_22	WHILE_1
0x4933	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2449	screen.c	FUNCTION_22
0x4937	          0x488b00	                    mov rax, qword [rax]	      2449	screen.c	FUNCTION_22
0x493a	            0x8b00	                    mov eax, dword [rax]	      2449	screen.c	FUNCTION_22
0x493c	            0xf7d0	                                 not eax	      2449	screen.c	FUNCTION_22
0x493e	          0xc1e81f	                           shr eax, 0x1f	      2449	screen.c	FUNCTION_22
0x4941	           0xfb6c0	                           movzx eax, al	      2449	screen.c	FUNCTION_22
0x4944	              0x5d	                                 pop rbp	      2450	screen.c	FUNCTION_22
0x4945	              0xc3	                                     ret	      2450	screen.c	FUNCTION_22
can_clear	DO,0:functions,0:CALL,0:ELSE,0:IF,0:WHILE,0:FOR,0:SWITCH,0	31
0x12498	              0x55	                                push rbp	      9174	screen.c	FUNCTION_76
0x12499	          0x4889e5	                            mov rbp, rsp	      9174	screen.c	FUNCTION_76
0x1249c	        0x48897df8	                mov qword [rbp - 8], rdi	      9174	screen.c	FUNCTION_76
0x124a0	        0x488b45f8	                mov rax, qword [rbp - 8]	      9175	screen.c	FUNCTION_76
0x124a4	           0xfb600	                   movzx eax, byte [rax]	      9175	screen.c	FUNCTION_76
0x124a7	            0x84c0	                             test al, al	      9175	screen.c	FUNCTION_76
0x124a9	            0x744d	                            je 0x4012538	      9175	screen.c	FUNCTION_76
0x124ab	    0x8b0500000000	            mov eax, dword [0x040124f1] 	      9175	screen.c	FUNCTION_76
0x124b1	          0x83f801	                              cmp eax, 1	      9175	screen.c	FUNCTION_76
0x124b4	            0x7e3b	                           jle 0x4012531	      9175	screen.c	FUNCTION_76
0x124b6	    0x8b0500000000	            mov eax, dword [0x040124fc] 	      9180	screen.c	FUNCTION_76
0x124bc	            0x85c0	                           test eax, eax	      9180	screen.c	FUNCTION_76
0x124be	            0x740f	                            je 0x401250f	      9180	screen.c	FUNCTION_76
0x124c0	    0x488b05000000	            mov rax, qword [0x04012507] 	      9180	screen.c	FUNCTION_76
0x124c7	    0x483dffffff01	                      cmp rax, 0x1ffffff	      9180	screen.c	FUNCTION_76
0x124cd	            0x7422	                            je 0x4012531	      9180	screen.c	FUNCTION_76
0x124cf	    0x8b0500000000	            mov eax, dword [0x04012515] 	      9181	screen.c	FUNCTION_76
0x124d5	            0x85c0	                           test eax, eax	      9181	screen.c	FUNCTION_76
0x124d7	            0x750a	                           jne 0x4012523	      9181	screen.c	FUNCTION_76
0x124d9	    0x8b0500000000	            mov eax, dword [0x0401251f] 	      9181	screen.c	FUNCTION_76
0x124df	            0x85c0	                           test eax, eax	      9181	screen.c	FUNCTION_76
0x124e1	            0x740e	                            je 0x4012531	      9181	screen.c	FUNCTION_76
0x124e3	    0x488b05000000	            mov rax, qword [0x0401252a] 	      9185	screen.c	FUNCTION_76
0x124ea	           0xfb600	                   movzx eax, byte [rax]	      9185	screen.c	FUNCTION_76
0x124ed	            0x84c0	                             test al, al	      9185	screen.c	FUNCTION_76
0x124ef	            0x7407	                            je 0x4012538	      9185	screen.c	FUNCTION_76
0x124f1	      0xb801000000	                              mov eax, 1	      9175	screen.c	FUNCTION_76
0x124f6	            0xeb05	                           jmp 0x401253d	      9175	screen.c	FUNCTION_76
0x124f8	      0xb800000000	                              mov eax, 0	      9175	screen.c	FUNCTION_76
0x124fd	              0x5d	                                 pop rbp	      9186	screen.c	FUNCTION_76
0x124fe	              0xc3	                                     ret	      9186	screen.c	FUNCTION_76
redraw_curbuf_later	DO,0:functions,0:CALL,1:ELSE,0:IF,0:WHILE,0:FOR,0:SWITCH,0	12
0xd8	              0x55	                                push rbp	       254	screen.c	FUNCTION_5
0xd9	          0x4889e5	                            mov rbp, rsp	       254	screen.c	FUNCTION_5
0xdc	        0x4883ec10	                           sub rsp, 0x10	       254	screen.c	FUNCTION_5
0xe0	          0x897dfc	                mov dword [rbp - 4], edi	       254	screen.c	FUNCTION_5
0xe3	    0x488b05000000	            mov rax, qword [0x0400012a] 	       255	screen.c	FUNCTION_5	CALL_1
0xea	          0x8b55fc	                mov edx, dword [rbp - 4]	       255	screen.c	FUNCTION_5	CALL_1
0xed	            0x89d6	                            mov esi, edx	       255	screen.c	FUNCTION_5	CALL_1
0xef	          0x4889c7	                            mov rdi, rax	       255	screen.c	FUNCTION_5	CALL_1
0xf2	      0xe800000000	                          call 0x4000137	       255	screen.c	FUNCTION_5	CALL_1
0xf7	              0x90	                                     nop	       256	screen.c	FUNCTION_5
0xf8	              0xc9	                                   leave	       256	screen.c	FUNCTION_5
0xf9	              0xc3	                                     ret	       256	screen.c	FUNCTION_5
screen_screencol	DO,0:functions,0:CALL,0:ELSE,0:IF,0:WHILE,0:FOR,0:SWITCH,0	5
0x15a9a	              0x55	                                push rbp	     11097	screen.c	FUNCTION_101
0x15a9b	          0x4889e5	                            mov rbp, rsp	     11097	screen.c	FUNCTION_101
0x15a9e	    0x8b0500000000	            mov eax, dword [0x04015ae4] 	     11098	screen.c	FUNCTION_101
0x15aa4	              0x5d	                                 pop rbp	     11099	screen.c	FUNCTION_101
0x15aa5	              0xc3	                                     ret	     11099	screen.c	FUNCTION_101
msg_pos_mode	DO,0:functions,0:CALL,0:ELSE,0:IF,0:WHILE,0:FOR,0:SWITCH,0	9
0x1443c	              0x55	                                push rbp	     10417	screen.c	FUNCTION_87
0x1443d	          0x4889e5	                            mov rbp, rsp	     10417	screen.c	FUNCTION_87
0x14440	    0xc70500000000	               mov dword [0x0401448a], 0	     10418	screen.c	FUNCTION_87
0x1444a	    0x488b05000000	            mov rax, qword [0x04014491] 	     10419	screen.c	FUNCTION_87
0x14451	          0x83e801	                              sub eax, 1	     10419	screen.c	FUNCTION_87
0x14454	    0x890500000000	            mov dword [0x0401449a], eax 	     10419	screen.c	FUNCTION_87
0x1445a	              0x90	                                     nop	     10420	screen.c	FUNCTION_87
0x1445b	              0x5d	                                 pop rbp	     10420	screen.c	FUNCTION_87
0x1445c	              0xc3	                                     ret	     10420	screen.c	FUNCTION_87
redraw_buf_and_status_later	DO,0:functions,1:CALL,0:ELSE,0:IF,1:WHILE,0:FOR,0:SWITCH,0	31
0x14b	              0x55	                                push rbp	       272	screen.c	FUNCTION_7
0x14c	          0x4889e5	                            mov rbp, rsp	       272	screen.c	FUNCTION_7
0x14f	        0x4883ec20	                           sub rsp, 0x20	       272	screen.c	FUNCTION_7
0x153	        0x48897de8	             mov qword [rbp - 0x18], rdi	       272	screen.c	FUNCTION_7
0x157	          0x8975e4	             mov dword [rbp - 0x1c], esi	       272	screen.c	FUNCTION_7
0x15a	    0x8b0500000000	            mov eax, dword [0x040001a0] 	       276	screen.c	FUNCTION_7	IF_1
0x160	            0x85c0	                           test eax, eax	       276	screen.c	FUNCTION_7	IF_1
0x162	            0x754f	                           jne 0x40001f3	       276	screen.c	FUNCTION_7	IF_1
0x164	    0x488b05000000	            mov rax, qword [0x040001ab] 	       281	screen.c	FUNCTION_7
0x16b	        0x488945f8	                mov qword [rbp - 8], rax	       281	screen.c	FUNCTION_7
0x16f	            0xeb39	                           jmp 0x40001ea	       281	screen.c	FUNCTION_7
0x171	        0x488b45f8	                mov rax, qword [rbp - 8]	       283	screen.c	FUNCTION_7	FUNCTION_1	IF_1
0x175	        0x488b4008	                mov rax, qword [rax + 8]	       283	screen.c	FUNCTION_7	FUNCTION_1	IF_1
0x179	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       283	screen.c	FUNCTION_7	FUNCTION_1	IF_1
0x17d	            0x751f	                           jne 0x40001de	       283	screen.c	FUNCTION_7	FUNCTION_1	IF_1
0x17f	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       285	screen.c	FUNCTION_7	FUNCTION_1	IF_1	CALL_1
0x182	        0x488b45f8	                mov rax, qword [rbp - 8]	       285	screen.c	FUNCTION_7	FUNCTION_1	IF_1	CALL_1
0x186	            0x89d6	                            mov esi, edx	       285	screen.c	FUNCTION_7	FUNCTION_1	IF_1	CALL_1
0x188	          0x4889c7	                            mov rdi, rax	       285	screen.c	FUNCTION_7	FUNCTION_1	IF_1	CALL_1
0x18b	      0xe800000000	                          call 0x40001d0	       285	screen.c	FUNCTION_7	FUNCTION_1	IF_1	CALL_1
0x190	        0x488b45f8	                mov rax, qword [rbp - 8]	       286	screen.c	FUNCTION_7	FUNCTION_1	IF_1
0x194	    0xc78040010000	              mov dword [rax + 0x140], 1	       286	screen.c	FUNCTION_7	FUNCTION_1	IF_1
0x19e	        0x488b45f8	                mov rax, qword [rbp - 8]	       281	screen.c	FUNCTION_7
0x1a2	        0x488b4020	            mov rax, qword [rax + 0x20] 	       281	screen.c	FUNCTION_7
0x1a6	        0x488945f8	                mov qword [rbp - 8], rax	       281	screen.c	FUNCTION_7
0x1aa	      0x48837df800	                  cmp qword [rbp - 8], 0	       281	screen.c	FUNCTION_7
0x1af	            0x75c0	                           jne 0x40001b1	       281	screen.c	FUNCTION_7
0x1b1	            0xeb01	                           jmp 0x40001f4	       281	screen.c	FUNCTION_7
0x1b3	              0x90	                                     nop	       279	screen.c	FUNCTION_7	IF_1
0x1b4	              0xc9	                                   leave	       289	screen.c	FUNCTION_7
0x1b5	              0xc3	                                     ret	       289	screen.c	FUNCTION_7
screen_start	DO,0:functions,0:CALL,0:ELSE,0:IF,0:WHILE,0:FOR,0:SWITCH,0	8
0x124ff	              0x55	                                push rbp	      9195	screen.c	FUNCTION_77
0x12500	          0x4889e5	                            mov rbp, rsp	      9195	screen.c	FUNCTION_77
0x12503	    0xc70500000000	         mov dword [0x0401254d], 0x270f 	      9196	screen.c	FUNCTION_77
0x1250d	    0x8b0500000000	            mov eax, dword [0x04012553] 	      9196	screen.c	FUNCTION_77
0x12513	    0x890500000000	            mov dword [0x04012559], eax 	      9196	screen.c	FUNCTION_77
0x12519	              0x90	                                     nop	      9197	screen.c	FUNCTION_77
0x1251a	              0x5d	                                 pop rbp	      9197	screen.c	FUNCTION_77
0x1251b	              0xc3	                                     ret	      9197	screen.c	FUNCTION_77
free_screenlines	DO,0:functions,0:CALL,8:ELSE,0:IF,0:WHILE,0:FOR,1:SWITCH,0	38
0x11f9d	              0x55	                                push rbp	      9029	screen.c	FUNCTION_70
0x11f9e	          0x4889e5	                            mov rbp, rsp	      9029	screen.c	FUNCTION_70
0x11fa1	        0x4883ec10	                           sub rsp, 0x10	      9029	screen.c	FUNCTION_70
0x11fa5	    0x488b05000000	            mov rax, qword [0x04011fec] 	      9033	screen.c	FUNCTION_70	CALL_1
0x11fac	          0x4889c7	                            mov rdi, rax	      9033	screen.c	FUNCTION_70	CALL_1
0x11faf	      0xe800000000	                          call 0x4011ff4	      9033	screen.c	FUNCTION_70	CALL_1
0x11fb4	    0xc745fc000000	                  mov dword [rbp - 4], 0	      9034	screen.c	FUNCTION_70	FOR_1
0x11fbb	            0xeb19	                           jmp 0x4012016	      9034	screen.c	FUNCTION_70	FOR_1
0x11fbd	          0x8b45fc	                mov eax, dword [rbp - 4]	      9035	screen.c	FUNCTION_70	CALL_2
0x11fc0	            0x4898	                                    cdqe	      9035	screen.c	FUNCTION_70	CALL_2
0x11fc2	    0x488b04c50000	                  mov rax, qword [rax*8]	      9035	screen.c	FUNCTION_70	CALL_2
0x11fca	          0x4889c7	                            mov rdi, rax	      9035	screen.c	FUNCTION_70	CALL_2
0x11fcd	      0xe800000000	                          call 0x4012012	      9035	screen.c	FUNCTION_70	CALL_2
0x11fd2	        0x8345fc01	                  add dword [rbp - 4], 1	      9034	screen.c	FUNCTION_70	FOR_1
0x11fd6	    0x8b0500000000	            mov eax, dword [0x0401201c] 	      9034	screen.c	FUNCTION_70	FOR_1
0x11fdc	          0x3945fc	                cmp dword [rbp - 4], eax	      9034	screen.c	FUNCTION_70	FOR_1
0x11fdf	            0x7cdc	                            jl 0x4011ffd	      9034	screen.c	FUNCTION_70	FOR_1
0x11fe1	    0x488b05000000	            mov rax, qword [0x04012028] 	      9036	screen.c	FUNCTION_70	CALL_3
0x11fe8	          0x4889c7	                            mov rdi, rax	      9036	screen.c	FUNCTION_70	CALL_3
0x11feb	      0xe800000000	                          call 0x4012030	      9036	screen.c	FUNCTION_70	CALL_3
0x11ff0	    0x488b05000000	            mov rax, qword [0x04012037] 	      9038	screen.c	FUNCTION_70	CALL_4
0x11ff7	          0x4889c7	                            mov rdi, rax	      9038	screen.c	FUNCTION_70	CALL_4
0x11ffa	      0xe800000000	                          call 0x401203f	      9038	screen.c	FUNCTION_70	CALL_4
0x11fff	    0x488b05000000	            mov rax, qword [0x04012046] 	      9039	screen.c	FUNCTION_70	CALL_5
0x12006	          0x4889c7	                            mov rdi, rax	      9039	screen.c	FUNCTION_70	CALL_5
0x12009	      0xe800000000	                          call 0x401204e	      9039	screen.c	FUNCTION_70	CALL_5
0x1200e	    0x488b05000000	            mov rax, qword [0x04012055] 	      9040	screen.c	FUNCTION_70	CALL_6
0x12015	          0x4889c7	                            mov rdi, rax	      9040	screen.c	FUNCTION_70	CALL_6
0x12018	      0xe800000000	                          call 0x401205d	      9040	screen.c	FUNCTION_70	CALL_6
0x1201d	    0x488b05000000	            mov rax, qword [0x04012064] 	      9041	screen.c	FUNCTION_70	CALL_7
0x12024	          0x4889c7	                            mov rdi, rax	      9041	screen.c	FUNCTION_70	CALL_7
0x12027	      0xe800000000	                          call 0x401206c	      9041	screen.c	FUNCTION_70	CALL_7
0x1202c	    0x488b05000000	            mov rax, qword [0x04012073] 	      9042	screen.c	FUNCTION_70	CALL_8
0x12033	          0x4889c7	                            mov rdi, rax	      9042	screen.c	FUNCTION_70	CALL_8
0x12036	      0xe800000000	                          call 0x401207b	      9042	screen.c	FUNCTION_70	CALL_8
0x1203b	              0x90	                                     nop	      9043	screen.c	FUNCTION_70
0x1203c	              0xc9	                                   leave	      9043	screen.c	FUNCTION_70
0x1203d	              0xc3	                                     ret	      9043	screen.c	FUNCTION_70
screen_draw_rectangle	DO,0:functions,0:CALL,4:ELSE,1:IF,4:WHILE,0:FOR,2:SWITCH,0	90
0x10b66	              0x55	                                push rbp	      8403	screen.c	FUNCTION_63
0x10b67	          0x4889e5	                            mov rbp, rsp	      8403	screen.c	FUNCTION_63
0x10b6a	        0x4883ec30	                           sub rsp, 0x30	      8403	screen.c	FUNCTION_63
0x10b6e	          0x897dec	             mov dword [rbp - 0x14], edi	      8403	screen.c	FUNCTION_63
0x10b71	          0x8975e8	             mov dword [rbp - 0x18], esi	      8403	screen.c	FUNCTION_63
0x10b74	          0x8955e4	             mov dword [rbp - 0x1c], edx	      8403	screen.c	FUNCTION_63
0x10b77	          0x894de0	             mov dword [rbp - 0x20], ecx	      8403	screen.c	FUNCTION_63
0x10b7a	        0x448945dc	             mov dword [rbp - 0x24], r8d	      8403	screen.c	FUNCTION_63
0x10b7e	    0x488b05000000	            mov rax, qword [0x04010bc5] 	      8411	screen.c	FUNCTION_63	IF_1
0x10b85	          0x4885c0	                           test rax, rax	      8411	screen.c	FUNCTION_63	IF_1
0x10b88	     0xf84f8000000	                            je 0x4010cc6	      8411	screen.c	FUNCTION_63	IF_1
0x10b8e	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      8414	screen.c	FUNCTION_63	IF_2
0x10b92	            0x740a	                            je 0x4010bde	      8414	screen.c	FUNCTION_63	IF_2
0x10b94	    0xc70500000000	               mov dword [0x04010bde], 1	      8415	screen.c	FUNCTION_63	IF_2
0x10b9e	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      8416	screen.c	FUNCTION_63	FOR_1
0x10ba1	          0x8945f0	             mov dword [rbp - 0x10], eax	      8416	screen.c	FUNCTION_63	FOR_1
0x10ba4	      0xe9c0000000	                           jmp 0x4010ca9	      8416	screen.c	FUNCTION_63	FOR_1
0x10ba9	    0x488b05000000	            mov rax, qword [0x04010bf0] 	      8418	screen.c	FUNCTION_63	FOR_1
0x10bb0	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      8418	screen.c	FUNCTION_63	FOR_1
0x10bb3	          0x4863d2	                         movsxd rdx, edx	      8418	screen.c	FUNCTION_63	FOR_1
0x10bb6	        0x48c1e202	                              shl rdx, 2	      8418	screen.c	FUNCTION_63	FOR_1
0x10bba	          0x4801d0	                            add rax, rdx	      8418	screen.c	FUNCTION_63	FOR_1
0x10bbd	            0x8b00	                    mov eax, dword [rax]	      8418	screen.c	FUNCTION_63	FOR_1
0x10bbf	          0x8945f8	                mov dword [rbp - 8], eax	      8418	screen.c	FUNCTION_63	FOR_1
0x10bc2	    0x8b1500000000	            mov edx, dword [0x04010c08] 	      8420	screen.c	FUNCTION_63	FOR_1
0x10bc8	          0x8b45f8	                mov eax, dword [rbp - 8]	      8420	screen.c	FUNCTION_63	FOR_1
0x10bcb	             0x1d0	                            add eax, edx	      8420	screen.c	FUNCTION_63	FOR_1
0x10bcd	          0x8945fc	                mov dword [rbp - 4], eax	      8420	screen.c	FUNCTION_63	FOR_1
0x10bd0	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      8422	screen.c	FUNCTION_63	FOR_1	FOR_2
0x10bd3	          0x8945f4	              mov dword [rbp - 0xc], eax	      8422	screen.c	FUNCTION_63	FOR_1	FOR_2
0x10bd6	            0xeb7c	                           jmp 0x4010c94	      8422	screen.c	FUNCTION_63	FOR_1	FOR_2
0x10bd8	    0x8b0500000000	            mov eax, dword [0x04010c1e] 	      8425	screen.c	FUNCTION_63	FOR_1	FOR_2	IF_3	CALL_1
0x10bde	            0x85c0	                           test eax, eax	      8425	screen.c	FUNCTION_63	FOR_1	FOR_2	IF_3	CALL_1
0x10be0	            0x7438	                            je 0x4010c5a	      8425	screen.c	FUNCTION_63	FOR_1	FOR_2	IF_3	CALL_1
0x10be2	          0x8b45fc	                mov eax, dword [rbp - 4]	      8425	screen.c	FUNCTION_63	FOR_1	FOR_2	IF_3	CALL_1
0x10be5	          0x8b4df8	                mov ecx, dword [rbp - 8]	      8425	screen.c	FUNCTION_63	FOR_1	FOR_2	IF_3	CALL_1
0x10be8	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      8425	screen.c	FUNCTION_63	FOR_1	FOR_2	IF_3	CALL_1
0x10beb	             0x1ca	                            add edx, ecx	      8425	screen.c	FUNCTION_63	FOR_1	FOR_2	IF_3	CALL_1
0x10bed	            0x89c6	                            mov esi, eax	      8425	screen.c	FUNCTION_63	FOR_1	FOR_2	IF_3	CALL_1
0x10bef	            0x89d7	                            mov edi, edx	      8425	screen.c	FUNCTION_63	FOR_1	FOR_2	IF_3	CALL_1
0x10bf1	      0xe800000000	                          call 0x4010c36	      8425	screen.c	FUNCTION_63	FOR_1	FOR_2	IF_3	CALL_1
0x10bf6	          0x83f801	                              cmp eax, 1	      8425	screen.c	FUNCTION_63	FOR_1	FOR_2	IF_3	CALL_1
0x10bf9	            0x7e1f	                           jle 0x4010c5a	      8425	screen.c	FUNCTION_63	FOR_1	FOR_2	IF_3	CALL_1
0x10bfb	          0x8b55f8	                mov edx, dword [rbp - 8]	      8427	screen.c	FUNCTION_63	FOR_1	FOR_2	IF_3	CALL_2
0x10bfe	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      8427	screen.c	FUNCTION_63	FOR_1	FOR_2	IF_3	CALL_2
0x10c01	             0x1d0	                            add eax, edx	      8427	screen.c	FUNCTION_63	FOR_1	FOR_2	IF_3	CALL_2
0x10c03	            0x89c1	                            mov ecx, eax	      8427	screen.c	FUNCTION_63	FOR_1	FOR_2	IF_3	CALL_2
0x10c05	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      8427	screen.c	FUNCTION_63	FOR_1	FOR_2	IF_3	CALL_2
0x10c08	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      8427	screen.c	FUNCTION_63	FOR_1	FOR_2	IF_3	CALL_2
0x10c0b	            0x89c6	                            mov esi, eax	      8427	screen.c	FUNCTION_63	FOR_1	FOR_2	IF_3	CALL_2
0x10c0d	            0x89cf	                            mov edi, ecx	      8427	screen.c	FUNCTION_63	FOR_1	FOR_2	IF_3	CALL_2
0x10c0f	      0xe8b0feffff	                  call sym.screen_char_2	      8427	screen.c	FUNCTION_63	FOR_1	FOR_2	IF_3	CALL_2
0x10c14	        0x8345f401	                add dword [rbp - 0xc], 1	      8428	screen.c	FUNCTION_63	FOR_1	FOR_2	IF_3
0x10c18	            0xeb36	                           jmp 0x4010c90	      8428	screen.c	FUNCTION_63	FOR_1	FOR_2	IF_3
0x10c1a	          0x8b55f8	                mov edx, dword [rbp - 8]	      8433	screen.c	FUNCTION_63	FOR_1	FOR_2	ELSE_1	CALL_3
0x10c1d	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      8433	screen.c	FUNCTION_63	FOR_1	FOR_2	ELSE_1	CALL_3
0x10c20	             0x1d0	                            add eax, edx	      8433	screen.c	FUNCTION_63	FOR_1	FOR_2	ELSE_1	CALL_3
0x10c22	            0x89c1	                            mov ecx, eax	      8433	screen.c	FUNCTION_63	FOR_1	FOR_2	ELSE_1	CALL_3
0x10c24	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      8433	screen.c	FUNCTION_63	FOR_1	FOR_2	ELSE_1	CALL_3
0x10c27	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      8433	screen.c	FUNCTION_63	FOR_1	FOR_2	ELSE_1	CALL_3
0x10c2a	            0x89c6	                            mov esi, eax	      8433	screen.c	FUNCTION_63	FOR_1	FOR_2	ELSE_1	CALL_3
0x10c2c	            0x89cf	                            mov edi, ecx	      8433	screen.c	FUNCTION_63	FOR_1	FOR_2	ELSE_1	CALL_3
0x10c2e	      0xe853fcffff	                    call sym.screen_char	      8433	screen.c	FUNCTION_63	FOR_1	FOR_2	ELSE_1	CALL_3
0x10c33	          0x8b45fc	                mov eax, dword [rbp - 4]	      8435	screen.c	FUNCTION_63	FOR_1	FOR_2	ELSE_1	IF_4	CALL_4
0x10c36	          0x8b4df8	                mov ecx, dword [rbp - 8]	      8435	screen.c	FUNCTION_63	FOR_1	FOR_2	ELSE_1	IF_4	CALL_4
0x10c39	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      8435	screen.c	FUNCTION_63	FOR_1	FOR_2	ELSE_1	IF_4	CALL_4
0x10c3c	             0x1ca	                            add edx, ecx	      8435	screen.c	FUNCTION_63	FOR_1	FOR_2	ELSE_1	IF_4	CALL_4
0x10c3e	            0x89c6	                            mov esi, eax	      8435	screen.c	FUNCTION_63	FOR_1	FOR_2	ELSE_1	IF_4	CALL_4
0x10c40	            0x89d7	                            mov edi, edx	      8435	screen.c	FUNCTION_63	FOR_1	FOR_2	ELSE_1	IF_4	CALL_4
0x10c42	      0xe800000000	                          call 0x4010c87	      8435	screen.c	FUNCTION_63	FOR_1	FOR_2	ELSE_1	IF_4	CALL_4
0x10c47	          0x83f801	                              cmp eax, 1	      8435	screen.c	FUNCTION_63	FOR_1	FOR_2	ELSE_1	IF_4	CALL_4
0x10c4a	            0x7e04	                           jle 0x4010c90	      8435	screen.c	FUNCTION_63	FOR_1	FOR_2	ELSE_1	IF_4	CALL_4
0x10c4c	        0x8345f401	                add dword [rbp - 0xc], 1	      8436	screen.c	FUNCTION_63	FOR_1	FOR_2	ELSE_1	IF_4
0x10c50	        0x8345f401	                add dword [rbp - 0xc], 1	      8422	screen.c	FUNCTION_63	FOR_1	FOR_2
0x10c54	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      8422	screen.c	FUNCTION_63	FOR_1	FOR_2
0x10c57	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      8422	screen.c	FUNCTION_63	FOR_1	FOR_2
0x10c5a	             0x1d0	                            add eax, edx	      8422	screen.c	FUNCTION_63	FOR_1	FOR_2
0x10c5c	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	      8422	screen.c	FUNCTION_63	FOR_1	FOR_2
0x10c5f	     0xf8f73ffffff	                            jg 0x4010c18	      8422	screen.c	FUNCTION_63	FOR_1	FOR_2
0x10c65	        0x8345f001	               add dword [rbp - 0x10], 1	      8416	screen.c	FUNCTION_63	FOR_1
0x10c69	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      8416	screen.c	FUNCTION_63	FOR_1
0x10c6c	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      8416	screen.c	FUNCTION_63	FOR_1
0x10c6f	             0x1d0	                            add eax, edx	      8416	screen.c	FUNCTION_63	FOR_1
0x10c71	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	      8416	screen.c	FUNCTION_63	FOR_1
0x10c74	     0xf8f2fffffff	                            jg 0x4010be9	      8416	screen.c	FUNCTION_63	FOR_1
0x10c7a	    0xc70500000000	               mov dword [0x04010cc4], 0	      8441	screen.c	FUNCTION_63
0x10c84	            0xeb01	                           jmp 0x4010cc7	      8441	screen.c	FUNCTION_63
0x10c86	              0x90	                                     nop	      8412	screen.c	FUNCTION_63	IF_1
0x10c87	              0xc9	                                   leave	      8442	screen.c	FUNCTION_63
0x10c88	              0xc3	                                     ret	      8442	screen.c	FUNCTION_63
comp_char_differs	DO,0:functions,0:CALL,0:ELSE,0:IF,2:WHILE,0:FOR,1:SWITCH,0	45
0xc07b	              0x55	                                push rbp	      5971	screen.c	FUNCTION_29
0xc07c	          0x4889e5	                            mov rbp, rsp	      5971	screen.c	FUNCTION_29
0xc07f	          0x897dec	             mov dword [rbp - 0x14], edi	      5971	screen.c	FUNCTION_29
0xc082	          0x8975e8	             mov dword [rbp - 0x18], esi	      5971	screen.c	FUNCTION_29
0xc085	    0xc745fc000000	                  mov dword [rbp - 4], 0	      5974	screen.c	FUNCTION_29	FOR_1
0xc08c	            0xeb67	                           jmp 0x400c135	      5974	screen.c	FUNCTION_29	FOR_1
0xc08e	          0x8b45fc	                mov eax, dword [rbp - 4]	      5976	screen.c	FUNCTION_29	FOR_1	IF_1
0xc091	            0x4898	                                    cdqe	      5976	screen.c	FUNCTION_29	FOR_1	IF_1
0xc093	    0x488b04c50000	                  mov rax, qword [rax*8]	      5976	screen.c	FUNCTION_29	FOR_1	IF_1
0xc09b	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      5976	screen.c	FUNCTION_29	FOR_1	IF_1
0xc09e	          0x4863d2	                         movsxd rdx, edx	      5976	screen.c	FUNCTION_29	FOR_1	IF_1
0xc0a1	        0x48c1e202	                              shl rdx, 2	      5976	screen.c	FUNCTION_29	FOR_1	IF_1
0xc0a5	          0x4801d0	                            add rax, rdx	      5976	screen.c	FUNCTION_29	FOR_1	IF_1
0xc0a8	            0x8b10	                    mov edx, dword [rax]	      5976	screen.c	FUNCTION_29	FOR_1	IF_1
0xc0aa	          0x8b45fc	                mov eax, dword [rbp - 4]	      5976	screen.c	FUNCTION_29	FOR_1	IF_1
0xc0ad	            0x4898	                                    cdqe	      5976	screen.c	FUNCTION_29	FOR_1	IF_1
0xc0af	    0x488b04c50000	                  mov rax, qword [rax*8]	      5976	screen.c	FUNCTION_29	FOR_1	IF_1
0xc0b7	          0x8b4de8	             mov ecx, dword [rbp - 0x18]	      5976	screen.c	FUNCTION_29	FOR_1	IF_1
0xc0ba	          0x4863c9	                         movsxd rcx, ecx	      5976	screen.c	FUNCTION_29	FOR_1	IF_1
0xc0bd	        0x48c1e102	                              shl rcx, 2	      5976	screen.c	FUNCTION_29	FOR_1	IF_1
0xc0c1	          0x4801c8	                            add rax, rcx	      5976	screen.c	FUNCTION_29	FOR_1	IF_1
0xc0c4	            0x8b00	                    mov eax, dword [rax]	      5976	screen.c	FUNCTION_29	FOR_1	IF_1
0xc0c6	            0x39c2	                            cmp edx, eax	      5976	screen.c	FUNCTION_29	FOR_1	IF_1
0xc0c8	            0x7407	                            je 0x400c111	      5976	screen.c	FUNCTION_29	FOR_1	IF_1
0xc0ca	      0xb801000000	                              mov eax, 1	      5977	screen.c	FUNCTION_29	FOR_1	IF_1
0xc0cf	            0xeb37	                           jmp 0x400c148	      5977	screen.c	FUNCTION_29	FOR_1	IF_1
0xc0d1	          0x8b45fc	                mov eax, dword [rbp - 4]	      5978	screen.c	FUNCTION_29	FOR_1	IF_2
0xc0d4	            0x4898	                                    cdqe	      5978	screen.c	FUNCTION_29	FOR_1	IF_2
0xc0d6	    0x488b04c50000	                  mov rax, qword [rax*8]	      5978	screen.c	FUNCTION_29	FOR_1	IF_2
0xc0de	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      5978	screen.c	FUNCTION_29	FOR_1	IF_2
0xc0e1	          0x4863d2	                         movsxd rdx, edx	      5978	screen.c	FUNCTION_29	FOR_1	IF_2
0xc0e4	        0x48c1e202	                              shl rdx, 2	      5978	screen.c	FUNCTION_29	FOR_1	IF_2
0xc0e8	          0x4801d0	                            add rax, rdx	      5978	screen.c	FUNCTION_29	FOR_1	IF_2
0xc0eb	            0x8b00	                    mov eax, dword [rax]	      5978	screen.c	FUNCTION_29	FOR_1	IF_2
0xc0ed	            0x85c0	                           test eax, eax	      5978	screen.c	FUNCTION_29	FOR_1	IF_2
0xc0ef	            0x7411	                            je 0x400c142	      5978	screen.c	FUNCTION_29	FOR_1	IF_2
0xc0f1	        0x8345fc01	                  add dword [rbp - 4], 1	      5974	screen.c	FUNCTION_29	FOR_1
0xc0f5	    0x8b0500000000	            mov eax, dword [0x0400c13b] 	      5974	screen.c	FUNCTION_29	FOR_1
0xc0fb	          0x3945fc	                cmp dword [rbp - 4], eax	      5974	screen.c	FUNCTION_29	FOR_1
0xc0fe	            0x7c8e	                            jl 0x400c0ce	      5974	screen.c	FUNCTION_29	FOR_1
0xc100	            0xeb01	                           jmp 0x400c143	      5974	screen.c	FUNCTION_29	FOR_1
0xc102	              0x90	                                     nop	      5979	screen.c	FUNCTION_29	FOR_1	IF_2
0xc103	      0xb800000000	                              mov eax, 0	      5981	screen.c	FUNCTION_29
0xc108	              0x5d	                                 pop rbp	      5982	screen.c	FUNCTION_29
0xc109	              0xc3	                                     ret	      5982	screen.c	FUNCTION_29
fillchar_status	DO,0:functions,0:CALL,7:ELSE,3:IF,5:WHILE,0:FOR,0:SWITCH,0	69
0x14bb1	              0x55	                                push rbp	     10671	screen.c	FUNCTION_93
0x14bb2	          0x4889e5	                            mov rbp, rsp	     10671	screen.c	FUNCTION_93
0x14bb5	        0x4883ec20	                           sub rsp, 0x20	     10671	screen.c	FUNCTION_93
0x14bb9	        0x48897de8	             mov qword [rbp - 0x18], rdi	     10671	screen.c	FUNCTION_93
0x14bbd	        0x488975e0	             mov qword [rbp - 0x20], rsi	     10671	screen.c	FUNCTION_93
0x14bc1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10675	screen.c	FUNCTION_93	IF_1	CALL_1
0x14bc5	        0x488b4008	                mov rax, qword [rax + 8]	     10675	screen.c	FUNCTION_93	IF_1	CALL_1
0x14bc9	          0x4889c7	                            mov rdi, rax	     10675	screen.c	FUNCTION_93	IF_1	CALL_1
0x14bcc	      0xe800000000	                          call 0x4014c11	     10675	screen.c	FUNCTION_93	IF_1	CALL_1
0x14bd1	            0x85c0	                           test eax, eax	     10675	screen.c	FUNCTION_93	IF_1	CALL_1
0x14bd3	            0x743b	                            je 0x4014c50	     10675	screen.c	FUNCTION_93	IF_1	CALL_1
0x14bd5	    0x488b05000000	            mov rax, qword [0x04014c1c] 	     10677	screen.c	FUNCTION_93	IF_1	IF_2
0x14bdc	        0x483945e0	            cmp qword [rbp - 0x20], rax 	     10677	screen.c	FUNCTION_93	IF_1	IF_2
0x14be0	            0x7517	                           jne 0x4014c39	     10677	screen.c	FUNCTION_93	IF_1	IF_2
0x14be2	    0x8b1500000000	            mov edx, dword [0x04014c28] 	     10679	screen.c	FUNCTION_93	IF_1	IF_2	CALL_2
0x14be8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10679	screen.c	FUNCTION_93	IF_1	IF_2	CALL_2
0x14bec	            0x8910	                    mov dword [rax], edx	     10679	screen.c	FUNCTION_93	IF_1	IF_2	CALL_2
0x14bee	    0x8b0500000000	            mov eax, dword [0x04014c34] 	     10680	screen.c	FUNCTION_93	IF_1	IF_2
0x14bf4	          0x8945fc	                mov dword [rbp - 4], eax	     10680	screen.c	FUNCTION_93	IF_1	IF_2
0x14bf7	            0xeb50	                           jmp 0x4014c89	     10680	screen.c	FUNCTION_93	IF_1	IF_2
0x14bf9	    0x8b1500000000	            mov edx, dword [0x04014c3f] 	     10684	screen.c	FUNCTION_93	IF_1	ELSE_1	CALL_3
0x14bff	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10684	screen.c	FUNCTION_93	IF_1	ELSE_1	CALL_3
0x14c03	            0x8910	                    mov dword [rax], edx	     10684	screen.c	FUNCTION_93	IF_1	ELSE_1	CALL_3
0x14c05	    0x8b0500000000	            mov eax, dword [0x04014c4b] 	     10685	screen.c	FUNCTION_93	IF_1	ELSE_1
0x14c0b	          0x8945fc	                mov dword [rbp - 4], eax	     10685	screen.c	FUNCTION_93	IF_1	ELSE_1
0x14c0e	            0xeb39	                           jmp 0x4014c89	     10685	screen.c	FUNCTION_93	IF_1	ELSE_1
0x14c10	    0x488b05000000	            mov rax, qword [0x04014c57] 	     10690	screen.c	FUNCTION_93	ELSE_2	IF_3
0x14c17	        0x483945e0	            cmp qword [rbp - 0x20], rax 	     10690	screen.c	FUNCTION_93	ELSE_2	IF_3
0x14c1b	            0x7517	                           jne 0x4014c74	     10690	screen.c	FUNCTION_93	ELSE_2	IF_3
0x14c1d	    0x8b1500000000	            mov edx, dword [0x04014c63] 	     10692	screen.c	FUNCTION_93	ELSE_2	IF_3	CALL_4
0x14c23	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10692	screen.c	FUNCTION_93	ELSE_2	IF_3	CALL_4
0x14c27	            0x8910	                    mov dword [rax], edx	     10692	screen.c	FUNCTION_93	ELSE_2	IF_3	CALL_4
0x14c29	    0x8b0500000000	            mov eax, dword [0x04014c6f] 	     10693	screen.c	FUNCTION_93	ELSE_2	IF_3
0x14c2f	          0x8945fc	                mov dword [rbp - 4], eax	     10693	screen.c	FUNCTION_93	ELSE_2	IF_3
0x14c32	            0xeb15	                           jmp 0x4014c89	     10693	screen.c	FUNCTION_93	ELSE_2	IF_3
0x14c34	    0x8b1500000000	            mov edx, dword [0x04014c7a] 	     10697	screen.c	FUNCTION_93	ELSE_3	CALL_5
0x14c3a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10697	screen.c	FUNCTION_93	ELSE_3	CALL_5
0x14c3e	            0x8910	                    mov dword [rax], edx	     10697	screen.c	FUNCTION_93	ELSE_3	CALL_5
0x14c40	    0x8b0500000000	            mov eax, dword [0x04014c86] 	     10698	screen.c	FUNCTION_93	ELSE_3
0x14c46	          0x8945fc	                mov dword [rbp - 4], eax	     10698	screen.c	FUNCTION_93	ELSE_3
0x14c49	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10703	screen.c	FUNCTION_93	IF_4	CALL_7
0x14c4d	            0x8b00	                    mov eax, dword [rax]	     10703	screen.c	FUNCTION_93	IF_4	CALL_7
0x14c4f	            0x85c0	                           test eax, eax	     10703	screen.c	FUNCTION_93	IF_4	CALL_7
0x14c51	            0x7445	                            je 0x4014cd8	     10703	screen.c	FUNCTION_93	IF_4	CALL_7
0x14c53	    0x8b1500000000	            mov edx, dword [0x04014c99] 	     10703	screen.c	FUNCTION_93	IF_4	CALL_7
0x14c59	    0x8b0500000000	            mov eax, dword [0x04014c9f] 	     10703	screen.c	FUNCTION_93	IF_4	CALL_7
0x14c5f	            0x39c2	                            cmp edx, eax	     10703	screen.c	FUNCTION_93	IF_4	CALL_7
0x14c61	            0x7530	                           jne 0x4014cd3	     10703	screen.c	FUNCTION_93	IF_4	CALL_7
0x14c63	    0x488b05000000	            mov rax, qword [0x04014caa] 	     10704	screen.c	FUNCTION_93	IF_4
0x14c6a	        0x483945e0	            cmp qword [rbp - 0x20], rax 	     10704	screen.c	FUNCTION_93	IF_4
0x14c6e	            0x7523	                           jne 0x4014cd3	     10704	screen.c	FUNCTION_93	IF_4
0x14c70	    0x488b15000000	            mov rdx, qword [0x04014cb7] 	     10704	screen.c	FUNCTION_93	IF_4
0x14c77	    0x488b05000000	            mov rax, qword [0x04014cbe] 	     10704	screen.c	FUNCTION_93	IF_4
0x14c7e	          0x4839c2	                            cmp rdx, rax	     10704	screen.c	FUNCTION_93	IF_4
0x14c81	            0x7410	                            je 0x4014cd3	     10704	screen.c	FUNCTION_93	IF_4
0x14c83	    0x8b1500000000	            mov edx, dword [0x04014cc9] 	     10705	screen.c	FUNCTION_93	IF_4
0x14c89	    0x8b0500000000	            mov eax, dword [0x04014ccf] 	     10705	screen.c	FUNCTION_93	IF_4
0x14c8f	            0x39c2	                            cmp edx, eax	     10705	screen.c	FUNCTION_93	IF_4
0x14c91	            0x7405	                            je 0x4014cd8	     10705	screen.c	FUNCTION_93	IF_4
0x14c93	          0x8b45fc	                mov eax, dword [rbp - 4]	     10706	screen.c	FUNCTION_93	IF_4
0x14c96	            0xeb19	                           jmp 0x4014cf1	     10706	screen.c	FUNCTION_93	IF_4
0x14c98	    0x488b05000000	            mov rax, qword [0x04014cdf] 	     10707	screen.c	FUNCTION_93	IF_5
0x14c9f	        0x483945e0	            cmp qword [rbp - 0x20], rax 	     10707	screen.c	FUNCTION_93	IF_5
0x14ca3	            0x7507	                           jne 0x4014cec	     10707	screen.c	FUNCTION_93	IF_5
0x14ca5	      0xb85e000000	                           mov eax, 0x5e	     10708	screen.c	FUNCTION_93	IF_5
0x14caa	            0xeb05	                           jmp 0x4014cf1	     10708	screen.c	FUNCTION_93	IF_5
0x14cac	      0xb83d000000	                           mov eax, 0x3d	     10709	screen.c	FUNCTION_93
0x14cb1	              0xc9	                                   leave	     10710	screen.c	FUNCTION_93
0x14cb2	              0xc3	                                     ret	     10710	screen.c	FUNCTION_93
update_prepare	DO,0:functions,0:CALL,3:ELSE,0:IF,1:WHILE,0:FOR,0:SWITCH,0	8
0x106c	              0x55	                                push rbp	       830	screen.c	FUNCTION_13
0x106d	          0x4889e5	                            mov rbp, rsp	       830	screen.c	FUNCTION_13
0x1070	      0xe800000000	                          call 0x40010b5	       831	screen.c	FUNCTION_13	CALL_1
0x1075	    0xc70500000000	               mov dword [0x040010bf], 1	       832	screen.c	FUNCTION_13
0x107f	      0xe8fee60000	                call sym.start_search_hl	       840	screen.c	FUNCTION_13	CALL_3
0x1084	              0x90	                                     nop	       842	screen.c	FUNCTION_13
0x1085	              0x5d	                                 pop rbp	       842	screen.c	FUNCTION_13
0x1086	              0xc3	                                     ret	       842	screen.c	FUNCTION_13
screen_puts_len	DO,0:functions,0:CALL,19:ELSE,13:IF,30:WHILE,1:FOR,1:SWITCH,0	671
0xed14	              0x55	                                push rbp	      7391	screen.c	FUNCTION_51
0xed15	          0x4889e5	                            mov rbp, rsp	      7391	screen.c	FUNCTION_51
0xed18	    0x4881ecb00000	                           sub rsp, 0xb0	      7391	screen.c	FUNCTION_51
0xed1f	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	      7391	screen.c	FUNCTION_51
0xed26	    0x89b564ffffff	             mov dword [rbp - 0x9c], esi	      7391	screen.c	FUNCTION_51
0xed2c	    0x899560ffffff	             mov dword [rbp - 0xa0], edx	      7391	screen.c	FUNCTION_51
0xed32	    0x898d5cffffff	             mov dword [rbp - 0xa4], ecx	      7391	screen.c	FUNCTION_51
0xed38	    0x44898558ffff	             mov dword [rbp - 0xa8], r8d	      7391	screen.c	FUNCTION_51
0xed3f	    0x64488b042528	                mov rax, qword fs:[0x28]	      7391	screen.c	FUNCTION_51
0xed48	        0x488945f8	                mov qword [rbp - 8], rax	      7391	screen.c	FUNCTION_51
0xed4c	            0x31c0	                            xor eax, eax	      7391	screen.c	FUNCTION_51
0xed4e	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      7393	screen.c	FUNCTION_51
0xed55	        0x488945b8	             mov qword [rbp - 0x48], rax	      7393	screen.c	FUNCTION_51
0xed59	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	      7394	screen.c	FUNCTION_51
0xed5f	    0x89857cffffff	             mov dword [rbp - 0x84], eax	      7394	screen.c	FUNCTION_51
0xed65	    0xc74580010000	               mov dword [rbp - 0x80], 1	      7398	screen.c	FUNCTION_51
0xed6c	    0xc74584010000	               mov dword [rbp - 0x7c], 1	      7399	screen.c	FUNCTION_51
0xed73	    0xc74588000000	               mov dword [rbp - 0x78], 0	      7400	screen.c	FUNCTION_51
0xed7a	    0xc7458c000000	               mov dword [rbp - 0x74], 0	      7402	screen.c	FUNCTION_51
0xed81	    0xc74590000000	               mov dword [rbp - 0x70], 0	      7404	screen.c	FUNCTION_51
0xed88	    0xc7459c000000	               mov dword [rbp - 0x64], 0	      7411	screen.c	FUNCTION_51
0xed8f	    0x488b05000000	            mov rax, qword [0x0400edd6] 	      7415	screen.c	FUNCTION_51	IF_1
0xed96	          0x4885c0	                           test rax, rax	      7415	screen.c	FUNCTION_51	IF_1
0xed99	     0xf84cc090000	                            je 0x400f7ab	      7415	screen.c	FUNCTION_51	IF_1
0xed9f	    0x8b0500000000	            mov eax, dword [0x0400ede5] 	      7415	screen.c	FUNCTION_51	IF_1
0xeda5	    0x398560ffffff	            cmp dword [rbp - 0xa0], eax 	      7415	screen.c	FUNCTION_51	IF_1
0xedab	     0xf8dba090000	                           jge 0x400f7ab	      7415	screen.c	FUNCTION_51	IF_1
0xedb1	    0x488b05000000	            mov rax, qword [0x0400edf8] 	      7417	screen.c	FUNCTION_51
0xedb8	    0x8b9560ffffff	             mov edx, dword [rbp - 0xa0]	      7417	screen.c	FUNCTION_51
0xedbe	          0x4863d2	                         movsxd rdx, edx	      7417	screen.c	FUNCTION_51
0xedc1	        0x48c1e202	                              shl rdx, 2	      7417	screen.c	FUNCTION_51
0xedc5	          0x4801d0	                            add rax, rdx	      7417	screen.c	FUNCTION_51
0xedc8	            0x8b10	                    mov edx, dword [rax]	      7417	screen.c	FUNCTION_51
0xedca	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      7417	screen.c	FUNCTION_51
0xedd0	             0x1d0	                            add eax, edx	      7417	screen.c	FUNCTION_51
0xedd2	    0x898578ffffff	             mov dword [rbp - 0x88], eax	      7417	screen.c	FUNCTION_51
0xedd8	    0x8b0500000000	            mov eax, dword [0x0400ee1e] 	      7422	screen.c	FUNCTION_51	IF_2
0xedde	            0x85c0	                           test eax, eax	      7422	screen.c	FUNCTION_51	IF_2
0xede0	     0xf84e5000000	                            je 0x400ef0b	      7422	screen.c	FUNCTION_51	IF_2
0xede6	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 0	      7422	screen.c	FUNCTION_51	IF_2
0xeded	     0xf8ed8000000	                           jle 0x400ef0b	      7422	screen.c	FUNCTION_51	IF_2
0xedf3	    0x8b0500000000	            mov eax, dword [0x0400ee39] 	      7422	screen.c	FUNCTION_51	IF_2
0xedf9	    0x39855cffffff	            cmp dword [rbp - 0xa4], eax 	      7422	screen.c	FUNCTION_51	IF_2
0xedff	     0xf8dc6000000	                           jge 0x400ef0b	      7422	screen.c	FUNCTION_51	IF_2
0xee05	    0x8b9560ffffff	             mov edx, dword [rbp - 0xa0]	      7426	screen.c	FUNCTION_51	IF_2	CALL_1
0xee0b	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      7426	screen.c	FUNCTION_51	IF_2	CALL_1
0xee11	            0x89d6	                            mov esi, edx	      7426	screen.c	FUNCTION_51	IF_2	CALL_1
0xee13	            0x89c7	                            mov edi, eax	      7426	screen.c	FUNCTION_51	IF_2	CALL_1
0xee15	      0xe800000000	                          call 0x400ee5a	      7426	screen.c	FUNCTION_51	IF_2	CALL_1
0xee1a	    0x3b855cffffff	             cmp eax, dword [rbp - 0xa4]	      7426	screen.c	FUNCTION_51	IF_2	CALL_1
0xee20	     0xf84a5000000	                            je 0x400ef0b	      7426	screen.c	FUNCTION_51	IF_2	CALL_1
0xee26	    0x488b05000000	            mov rax, qword [0x0400ee6d] 	      7428	screen.c	FUNCTION_51	IF_2
0xee2d	    0x8b9578ffffff	             mov edx, dword [rbp - 0x88]	      7428	screen.c	FUNCTION_51	IF_2
0xee33	          0x83ea01	                              sub edx, 1	      7428	screen.c	FUNCTION_51	IF_2
0xee36	            0x89d2	                            mov edx, edx	      7428	screen.c	FUNCTION_51	IF_2
0xee38	          0x4801d0	                            add rax, rdx	      7428	screen.c	FUNCTION_51	IF_2
0xee3b	          0xc60020	                    mov byte [rax], 0x20	      7428	screen.c	FUNCTION_51	IF_2
0xee3e	    0x488b05000000	            mov rax, qword [0x0400ee85] 	      7429	screen.c	FUNCTION_51	IF_2
0xee45	    0x8b9578ffffff	             mov edx, dword [rbp - 0x88]	      7429	screen.c	FUNCTION_51	IF_2
0xee4b	          0x83ea01	                              sub edx, 1	      7429	screen.c	FUNCTION_51	IF_2
0xee4e	            0x89d2	                            mov edx, edx	      7429	screen.c	FUNCTION_51	IF_2
0xee50	          0x4801d2	                            add rdx, rdx	      7429	screen.c	FUNCTION_51	IF_2
0xee53	          0x4801d0	                            add rax, rdx	      7429	screen.c	FUNCTION_51	IF_2
0xee56	      0x66c7000000	                       mov word [rax], 0	      7429	screen.c	FUNCTION_51	IF_2
0xee5b	    0x8b0500000000	            mov eax, dword [0x0400eea1] 	      7430	screen.c	FUNCTION_51	IF_2	IF_3
0xee61	            0x85c0	                           test eax, eax	      7430	screen.c	FUNCTION_51	IF_2	IF_3
0xee63	            0x743e	                            je 0x400eee3	      7430	screen.c	FUNCTION_51	IF_2	IF_3
0xee65	    0x488b05000000	            mov rax, qword [0x0400eeac] 	      7432	screen.c	FUNCTION_51	IF_2	IF_3
0xee6c	    0x8b9578ffffff	             mov edx, dword [rbp - 0x88]	      7432	screen.c	FUNCTION_51	IF_2	IF_3
0xee72	          0x83ea01	                              sub edx, 1	      7432	screen.c	FUNCTION_51	IF_2	IF_3
0xee75	            0x89d2	                            mov edx, edx	      7432	screen.c	FUNCTION_51	IF_2	IF_3
0xee77	        0x48c1e202	                              shl rdx, 2	      7432	screen.c	FUNCTION_51	IF_2	IF_3
0xee7b	          0x4801d0	                            add rax, rdx	      7432	screen.c	FUNCTION_51	IF_2	IF_3
0xee7e	    0xc70000000000	                      mov dword [rax], 0	      7432	screen.c	FUNCTION_51	IF_2	IF_3
0xee84	    0x488b05000000	            mov rax, qword [0x0400eecb] 	      7433	screen.c	FUNCTION_51	IF_2	IF_3
0xee8b	    0x8b9578ffffff	             mov edx, dword [rbp - 0x88]	      7433	screen.c	FUNCTION_51	IF_2	IF_3
0xee91	          0x83ea01	                              sub edx, 1	      7433	screen.c	FUNCTION_51	IF_2	IF_3
0xee94	            0x89d2	                            mov edx, edx	      7433	screen.c	FUNCTION_51	IF_2	IF_3
0xee96	        0x48c1e202	                              shl rdx, 2	      7433	screen.c	FUNCTION_51	IF_2	IF_3
0xee9a	          0x4801d0	                            add rax, rdx	      7433	screen.c	FUNCTION_51	IF_2	IF_3
0xee9d	    0xc70000000000	                      mov dword [rax], 0	      7433	screen.c	FUNCTION_51	IF_2	IF_3
0xeea3	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      7436	screen.c	FUNCTION_51	IF_2	CALL_2
0xeea9	          0x8d50ff	                      lea edx, [rax - 1]	      7436	screen.c	FUNCTION_51	IF_2	CALL_2
0xeeac	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      7436	screen.c	FUNCTION_51	IF_2	CALL_2
0xeeb2	          0x8d48ff	                      lea ecx, [rax - 1]	      7436	screen.c	FUNCTION_51	IF_2	CALL_2
0xeeb5	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	      7436	screen.c	FUNCTION_51	IF_2	CALL_2
0xeebb	            0x89c6	                            mov esi, eax	      7436	screen.c	FUNCTION_51	IF_2	CALL_2
0xeebd	            0x89cf	                            mov edi, ecx	      7436	screen.c	FUNCTION_51	IF_2	CALL_2
0xeebf	      0xe8c2190000	                    call sym.screen_char	      7436	screen.c	FUNCTION_51	IF_2	CALL_2
0xeec4	    0xc7459c010000	               mov dword [rbp - 0x64], 1	      7438	screen.c	FUNCTION_51	IF_2
0xeecb	    0x488b05000000	            mov rax, qword [0x0400ef12] 	      7443	screen.c	FUNCTION_51
0xeed2	    0x8b9560ffffff	             mov edx, dword [rbp - 0xa0]	      7443	screen.c	FUNCTION_51
0xeed8	          0x4863d2	                         movsxd rdx, edx	      7443	screen.c	FUNCTION_51
0xeedb	        0x48c1e202	                              shl rdx, 2	      7443	screen.c	FUNCTION_51
0xeedf	          0x4801d0	                            add rax, rdx	      7443	screen.c	FUNCTION_51
0xeee2	            0x8b00	                    mov eax, dword [rax]	      7443	screen.c	FUNCTION_51
0xeee4	    0x8b1500000000	            mov edx, dword [0x0400ef2a] 	      7443	screen.c	FUNCTION_51
0xeeea	             0x1d0	                            add eax, edx	      7443	screen.c	FUNCTION_51
0xeeec	          0x8945a8	             mov dword [rbp - 0x58], eax	      7443	screen.c	FUNCTION_51
0xeeef	      0xe9c9070000	                           jmp 0x400f6fd	      7445	screen.c	FUNCTION_51	WHILE_1
0xeef4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7449	screen.c	FUNCTION_51	WHILE_1
0xeef8	           0xfb600	                   movzx eax, byte [rax]	      7449	screen.c	FUNCTION_51	WHILE_1
0xeefb	           0xfb6c0	                           movzx eax, al	      7449	screen.c	FUNCTION_51	WHILE_1
0xeefe	    0x898574ffffff	             mov dword [rbp - 0x8c], eax	      7449	screen.c	FUNCTION_51	WHILE_1
0xef04	    0x8b0500000000	            mov eax, dword [0x0400ef4a] 	      7452	screen.c	FUNCTION_51	WHILE_1	IF_4
0xef0a	            0x85c0	                           test eax, eax	      7452	screen.c	FUNCTION_51	WHILE_1	IF_4
0xef0c	     0xf8420020000	                            je 0x400f172	      7452	screen.c	FUNCTION_51	WHILE_1	IF_4
0xef12	    0x8b0500000000	            mov eax, dword [0x0400ef58] 	      7454	screen.c	FUNCTION_51	WHILE_1	IF_4	IF_5
0xef18	            0x85c0	                           test eax, eax	      7454	screen.c	FUNCTION_51	WHILE_1	IF_4	IF_5
0xef1a	            0x743e	                            je 0x400ef9a	      7454	screen.c	FUNCTION_51	WHILE_1	IF_4	IF_5
0xef1c	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      7454	screen.c	FUNCTION_51	WHILE_1	IF_4	IF_5
0xef23	            0x7e35	                           jle 0x400ef9a	      7454	screen.c	FUNCTION_51	WHILE_1	IF_4	IF_5
0xef25	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	      7455	screen.c	FUNCTION_51	WHILE_1	IF_4	CALL_3
0xef2b	          0x4863d0	                         movsxd rdx, eax	      7455	screen.c	FUNCTION_51	WHILE_1	IF_4	CALL_3
0xef2e	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      7455	screen.c	FUNCTION_51	WHILE_1	IF_4	CALL_3
0xef35	          0x4801d0	                            add rax, rdx	      7455	screen.c	FUNCTION_51	WHILE_1	IF_4	CALL_3
0xef38	          0x4889c2	                            mov rdx, rax	      7455	screen.c	FUNCTION_51	WHILE_1	IF_4	CALL_3
0xef3b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7455	screen.c	FUNCTION_51	WHILE_1	IF_4	CALL_3
0xef3f	          0x4829c2	                            sub rdx, rax	      7455	screen.c	FUNCTION_51	WHILE_1	IF_4	CALL_3
0xef42	          0x4889d0	                            mov rax, rdx	      7455	screen.c	FUNCTION_51	WHILE_1	IF_4	CALL_3
0xef45	            0x89c2	                            mov edx, eax	      7455	screen.c	FUNCTION_51	WHILE_1	IF_4	CALL_3
0xef47	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7455	screen.c	FUNCTION_51	WHILE_1	IF_4	CALL_3
0xef4b	            0x89d6	                            mov esi, edx	      7455	screen.c	FUNCTION_51	WHILE_1	IF_4	CALL_3
0xef4d	          0x4889c7	                            mov rdi, rax	      7455	screen.c	FUNCTION_51	WHILE_1	IF_4	CALL_3
0xef50	      0xe800000000	                          call 0x400ef95	      7455	screen.c	FUNCTION_51	WHILE_1	IF_4	CALL_3
0xef55	          0x894580	             mov dword [rbp - 0x80], eax	      7455	screen.c	FUNCTION_51	WHILE_1	IF_4	CALL_3
0xef58	            0xeb13	                           jmp 0x400efad	      7455	screen.c	FUNCTION_51	WHILE_1	IF_4	CALL_3
0xef5a	    0x488b05000000	            mov rax, qword [0x0400efa1] 	      7457	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_1
0xef61	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      7457	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_1
0xef65	          0x4889d7	                            mov rdi, rdx	      7457	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_1
0xef68	            0xffd0	                                call rax	      7457	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_1
0xef6a	          0x894580	             mov dword [rbp - 0x80], eax	      7457	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_1
0xef6d	    0x8b0500000000	            mov eax, dword [0x0400efb3] 	      7458	screen.c	FUNCTION_51	WHILE_1	IF_4	IF_6
0xef73	      0x3dcc260000	                         cmp eax, 0x26cc	      7458	screen.c	FUNCTION_51	WHILE_1	IF_4	IF_6
0xef78	            0x7519	                           jne 0x400efd3	      7458	screen.c	FUNCTION_51	WHILE_1	IF_4	IF_6
0xef7a	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	      7458	screen.c	FUNCTION_51	WHILE_1	IF_4	IF_6
0xef80	      0x3d8e000000	                           cmp eax, 0x8e	      7458	screen.c	FUNCTION_51	WHILE_1	IF_4	IF_6
0xef85	            0x750c	                           jne 0x400efd3	      7458	screen.c	FUNCTION_51	WHILE_1	IF_4	IF_6
0xef87	    0xc74584010000	               mov dword [rbp - 0x7c], 1	      7459	screen.c	FUNCTION_51	WHILE_1	IF_4	IF_6
0xef8e	      0xe99f010000	                           jmp 0x400f172	      7459	screen.c	FUNCTION_51	WHILE_1	IF_4	IF_6
0xef93	    0x8b0500000000	            mov eax, dword [0x0400efd9] 	      7460	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_2	IF_7
0xef99	            0x85c0	                           test eax, eax	      7460	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_2	IF_7
0xef9b	            0x740b	                            je 0x400efe8	      7460	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_2	IF_7
0xef9d	          0x8b4580	             mov eax, dword [rbp - 0x80]	      7461	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_2	IF_7
0xefa0	          0x894584	             mov dword [rbp - 0x7c], eax	      7461	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_2	IF_7
0xefa3	      0xe98a010000	                           jmp 0x400f172	      7461	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_2	IF_7
0xefa8	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      7464	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_8
0xefaf	            0x783a	                            js 0x400f02b	      7464	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_8
0xefb1	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	      7466	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_8
0xefb7	          0x4863d0	                         movsxd rdx, eax	      7466	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_8
0xefba	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      7466	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_8
0xefc1	          0x4801d0	                            add rax, rdx	      7466	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_8
0xefc4	          0x4889c2	                            mov rdx, rax	      7466	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_8
0xefc7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7466	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_8
0xefcb	          0x4829c2	                            sub rdx, rax	      7466	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_8
0xefce	          0x4889d0	                            mov rax, rdx	      7466	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_8
0xefd1	            0x89c2	                            mov edx, eax	      7465	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_8	CALL_4
0xefd3	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	      7465	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_8	CALL_4
0xefd7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7465	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_8	CALL_4
0xefdb	          0x4889ce	                            mov rsi, rcx	      7465	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_8	CALL_4
0xefde	          0x4889c7	                            mov rdi, rax	      7465	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_8	CALL_4
0xefe1	      0xe800000000	                          call 0x400f026	      7465	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_8	CALL_4
0xefe6	          0x894588	             mov dword [rbp - 0x78], eax	      7465	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_8	CALL_4
0xefe9	            0xeb16	                           jmp 0x400f041	      7465	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_8	CALL_4
0xefeb	        0x488d55c0	                   lea rdx, [rbp - 0x40]	      7468	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	CALL_5
0xefef	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7468	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	CALL_5
0xeff3	          0x4889d6	                            mov rsi, rdx	      7468	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	CALL_5
0xeff6	          0x4889c7	                            mov rdi, rax	      7468	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	CALL_5
0xeff9	      0xe800000000	                          call 0x400f03e	      7468	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	CALL_5
0xeffe	          0x894588	             mov dword [rbp - 0x78], eax	      7468	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	CALL_5
0xf001	          0x8b4588	             mov eax, dword [rbp - 0x78]	      7469	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	CALL_6
0xf004	            0x89c7	                            mov edi, eax	      7469	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	CALL_6
0xf006	      0xe800000000	                          call 0x400f04b	      7469	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	CALL_6
0xf00b	          0x894584	             mov dword [rbp - 0x7c], eax	      7469	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	CALL_6
0xf00e	    0x8b0500000000	            mov eax, dword [0x0400f054] 	      7480	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	CALL_8
0xf014	            0x85c0	                           test eax, eax	      7480	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	CALL_8
0xf016	     0xf84ea000000	                            je 0x400f146	      7480	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	CALL_8
0xf01c	    0x8b0500000000	            mov eax, dword [0x0400f062] 	      7480	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	CALL_8
0xf022	            0x85c0	                           test eax, eax	      7480	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	CALL_8
0xf024	     0xf85dc000000	                           jne 0x400f146	      7480	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	CALL_8
0xf02a	    0x817d88200600	          cmp dword [rbp - 0x78], 0x620 	      7480	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	CALL_8
0xf031	     0xf8ecf000000	                           jle 0x400f146	      7480	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	CALL_8
0xf037	    0x817d88700600	          cmp dword [rbp - 0x78], 0x670 	      7480	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	CALL_8
0xf03e	     0xf8fc2000000	                            jg 0x400f146	      7480	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	CALL_8
0xf044	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      7483	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	IF_12
0xf04b	            0x7830	                            js 0x400f0bd	      7483	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	IF_12
0xf04d	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      7483	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	IF_12
0xf051	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      7483	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	IF_12
0xf058	          0x4829c2	                            sub rdx, rax	      7483	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	IF_12
0xf05b	          0x4889d0	                            mov rax, rdx	      7483	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	IF_12
0xf05e	            0x89c2	                            mov edx, eax	      7483	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	IF_12
0xf060	          0x8b4580	             mov eax, dword [rbp - 0x80]	      7483	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	IF_12
0xf063	             0x1d0	                            add eax, edx	      7483	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	IF_12
0xf065	    0x3b857cffffff	             cmp eax, dword [rbp - 0x84]	      7483	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	IF_12
0xf06b	            0x7c10	                            jl 0x400f0bd	      7483	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	IF_12
0xf06d	    0xc74594000000	               mov dword [rbp - 0x6c], 0	      7486	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	IF_12
0xf074	    0xc74598000000	               mov dword [rbp - 0x68], 0	      7487	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	IF_12
0xf07b	            0xeb53	                           jmp 0x400f110	      7487	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	IF_12
0xf07d	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	      7492	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	ELSE_5
0xf083	          0x4863d0	                         movsxd rdx, eax	      7492	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	ELSE_5
0xf086	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      7492	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	ELSE_5
0xf08d	          0x4801d0	                            add rax, rdx	      7492	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	ELSE_5
0xf090	          0x4889c2	                            mov rdx, rax	      7492	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	ELSE_5
0xf093	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7492	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	ELSE_5
0xf097	          0x4829c2	                            sub rdx, rax	      7492	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	ELSE_5
0xf09a	          0x4889d0	                            mov rax, rdx	      7492	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	ELSE_5
0xf09d	            0x89c2	                            mov edx, eax	      7491	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	ELSE_5	CALL_9
0xf09f	          0x8b4580	             mov eax, dword [rbp - 0x80]	      7491	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	ELSE_5	CALL_9
0xf0a2	            0x29c2	                            sub edx, eax	      7491	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	ELSE_5	CALL_9
0xf0a4	            0x89d0	                            mov eax, edx	      7491	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	ELSE_5	CALL_9
0xf0a6	            0x89c6	                            mov esi, eax	      7491	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	ELSE_5	CALL_9
0xf0a8	          0x8b4580	             mov eax, dword [rbp - 0x80]	      7491	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	ELSE_5	CALL_9
0xf0ab	          0x4863d0	                         movsxd rdx, eax	      7491	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	ELSE_5	CALL_9
0xf0ae	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7491	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	ELSE_5	CALL_9
0xf0b2	        0x488d0c02	                    lea rcx, [rdx + rax]	      7491	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	ELSE_5	CALL_9
0xf0b6	        0x488d45e0	                   lea rax, [rbp - 0x20]	      7491	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	ELSE_5	CALL_9
0xf0ba	            0x89f2	                            mov edx, esi	      7491	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	ELSE_5	CALL_9
0xf0bc	          0x4889c6	                            mov rsi, rax	      7491	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	ELSE_5	CALL_9
0xf0bf	          0x4889cf	                            mov rdi, rcx	      7491	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	ELSE_5	CALL_9
0xf0c2	      0xe800000000	                          call 0x400f107	      7491	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	ELSE_5	CALL_9
0xf0c7	          0x894594	             mov dword [rbp - 0x6c], eax	      7491	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	ELSE_5	CALL_9
0xf0ca	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      7493	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	ELSE_5
0xf0cd	          0x894598	             mov dword [rbp - 0x68], eax	      7493	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	ELSE_5
0xf0d0	          0x8b4590	             mov eax, dword [rbp - 0x70]	      7495	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11
0xf0d3	          0x8945ac	             mov dword [rbp - 0x54], eax	      7495	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11
0xf0d6	          0x8b4588	             mov eax, dword [rbp - 0x78]	      7496	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11
0xf0d9	          0x894590	             mov dword [rbp - 0x70], eax	      7496	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11
0xf0dc	        0x448b45ac	             mov r8d, dword [rbp - 0x54]	      7497	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	CALL_10
0xf0e0	          0x8b7d98	             mov edi, dword [rbp - 0x68]	      7497	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	CALL_10
0xf0e3	          0x8b4d94	             mov ecx, dword [rbp - 0x6c]	      7497	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	CALL_10
0xf0e6	        0x488d55c0	                   lea rdx, [rbp - 0x40]	      7497	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	CALL_10
0xf0ea	    0x488db574ffff	                   lea rsi, [rbp - 0x8c]	      7497	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	CALL_10
0xf0f1	          0x8b4588	             mov eax, dword [rbp - 0x78]	      7497	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	CALL_10
0xf0f4	          0x4589c1	                            mov r9d, r8d	      7497	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	CALL_10
0xf0f7	          0x4189f8	                            mov r8d, edi	      7497	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	CALL_10
0xf0fa	            0x89c7	                            mov edi, eax	      7497	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	CALL_10
0xf0fc	      0xe800000000	                          call 0x400f141	      7497	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	CALL_10
0xf101	          0x894588	             mov dword [rbp - 0x78], eax	      7497	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	CALL_10
0xf104	            0xeb06	                           jmp 0x400f14c	      7497	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	IF_11	CALL_10
0xf106	          0x8b4588	             mov eax, dword [rbp - 0x78]	      7500	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	ELSE_6
0xf109	          0x894590	             mov dword [rbp - 0x70], eax	      7500	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	ELSE_6
0xf10c	    0x8b955cffffff	             mov edx, dword [rbp - 0xa4]	      7502	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	ELSE_6	IF_13
0xf112	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      7502	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	ELSE_6	IF_13
0xf115	             0x1c2	                            add edx, eax	      7502	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	ELSE_6	IF_13
0xf117	    0x8b0500000000	            mov eax, dword [0x0400f15d] 	      7502	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	ELSE_6	IF_13
0xf11d	            0x39c2	                            cmp edx, eax	      7502	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	ELSE_6	IF_13
0xf11f	            0x7e11	                           jle 0x400f172	      7502	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	ELSE_6	IF_13
0xf121	    0xc78574ffffff	           mov dword [rbp - 0x8c], 0x3e 	      7506	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	ELSE_6	IF_13
0xf12b	    0xc74584010000	               mov dword [rbp - 0x7c], 1	      7507	screen.c	FUNCTION_51	WHILE_1	IF_4	ELSE_3	ELSE_6	IF_13
0xf132	          0x8b459c	             mov eax, dword [rbp - 0x64]	      7514	screen.c	FUNCTION_51	WHILE_1
0xf135	          0x8945b0	             mov dword [rbp - 0x50], eax	      7514	screen.c	FUNCTION_51	WHILE_1
0xf138	    0xc7459c000000	               mov dword [rbp - 0x64], 0	      7515	screen.c	FUNCTION_51	WHILE_1
0xf13f	    0x488b15000000	            mov rdx, qword [0x0400f186] 	      7518	screen.c	FUNCTION_51	WHILE_1
0xf146	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      7518	screen.c	FUNCTION_51	WHILE_1
0xf14c	          0x4801d0	                            add rax, rdx	      7518	screen.c	FUNCTION_51	WHILE_1
0xf14f	           0xfb600	                   movzx eax, byte [rax]	      7518	screen.c	FUNCTION_51	WHILE_1
0xf152	           0xfb6d0	                           movzx edx, al	      7518	screen.c	FUNCTION_51	WHILE_1
0xf155	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	      7518	screen.c	FUNCTION_51	WHILE_1
0xf15b	            0x39c2	                            cmp edx, eax	      7532	screen.c	FUNCTION_51	WHILE_1
0xf15d	     0xf8525010000	                           jne 0x400f2c8	      7532	screen.c	FUNCTION_51	WHILE_1
0xf163	        0x837d8402	               cmp dword [rbp - 0x7c], 2	      7520	screen.c	FUNCTION_51	WHILE_1
0xf167	            0x7542	                           jne 0x400f1eb	      7520	screen.c	FUNCTION_51	WHILE_1
0xf169	    0x488b05000000	            mov rax, qword [0x0400f1b0] 	      7521	screen.c	FUNCTION_51	WHILE_1
0xf170	    0x8b9578ffffff	             mov edx, dword [rbp - 0x88]	      7521	screen.c	FUNCTION_51	WHILE_1
0xf176	          0x83c201	                              add edx, 1	      7521	screen.c	FUNCTION_51	WHILE_1
0xf179	            0x89d2	                            mov edx, edx	      7521	screen.c	FUNCTION_51	WHILE_1
0xf17b	          0x4801d0	                            add rax, rdx	      7521	screen.c	FUNCTION_51	WHILE_1
0xf17e	           0xfb600	                   movzx eax, byte [rax]	      7521	screen.c	FUNCTION_51	WHILE_1
0xf181	           0xfb6d0	                           movzx edx, al	      7521	screen.c	FUNCTION_51	WHILE_1
0xf184	    0x8b0500000000	            mov eax, dword [0x0400f1ca] 	      7521	screen.c	FUNCTION_51	WHILE_1
0xf18a	            0x85c0	                           test eax, eax	      7521	screen.c	FUNCTION_51	WHILE_1
0xf18c	            0x7410	                            je 0x400f1de	      7521	screen.c	FUNCTION_51	WHILE_1
0xf18e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7521	screen.c	FUNCTION_51	WHILE_1
0xf192	        0x4883c001	                              add rax, 1	      7521	screen.c	FUNCTION_51	WHILE_1
0xf196	           0xfb600	                   movzx eax, byte [rax]	      7521	screen.c	FUNCTION_51	WHILE_1
0xf199	           0xfb6c0	                           movzx eax, al	      7521	screen.c	FUNCTION_51	WHILE_1
0xf19c	            0xeb05	                           jmp 0x400f1e3	      7521	screen.c	FUNCTION_51	WHILE_1
0xf19e	      0xb800000000	                              mov eax, 0	      7521	screen.c	FUNCTION_51	WHILE_1
0xf1a3	            0x39c2	                            cmp edx, eax	      7521	screen.c	FUNCTION_51	WHILE_1
0xf1a5	     0xf85dd000000	                           jne 0x400f2c8	      7521	screen.c	FUNCTION_51	WHILE_1
0xf1ab	    0x8b0500000000	            mov eax, dword [0x0400f1f1] 	      7522	screen.c	FUNCTION_51	WHILE_1
0xf1b1	      0x3dcc260000	                         cmp eax, 0x26cc	      7522	screen.c	FUNCTION_51	WHILE_1
0xf1b6	            0x7533	                           jne 0x400f22b	      7522	screen.c	FUNCTION_51	WHILE_1
0xf1b8	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	      7523	screen.c	FUNCTION_51	WHILE_1
0xf1be	      0x3d8e000000	                           cmp eax, 0x8e	      7523	screen.c	FUNCTION_51	WHILE_1
0xf1c3	            0x7526	                           jne 0x400f22b	      7523	screen.c	FUNCTION_51	WHILE_1
0xf1c5	    0x488b15000000	            mov rdx, qword [0x0400f20c] 	      7524	screen.c	FUNCTION_51	WHILE_1
0xf1cc	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      7524	screen.c	FUNCTION_51	WHILE_1
0xf1d2	          0x4801d0	                            add rax, rdx	      7524	screen.c	FUNCTION_51	WHILE_1
0xf1d5	           0xfb610	                   movzx edx, byte [rax]	      7524	screen.c	FUNCTION_51	WHILE_1
0xf1d8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7524	screen.c	FUNCTION_51	WHILE_1
0xf1dc	        0x4883c001	                              add rax, 1	      7524	screen.c	FUNCTION_51	WHILE_1
0xf1e0	           0xfb600	                   movzx eax, byte [rax]	      7524	screen.c	FUNCTION_51	WHILE_1
0xf1e3	            0x38c2	                              cmp dl, al	      7524	screen.c	FUNCTION_51	WHILE_1
0xf1e5	     0xf859d000000	                           jne 0x400f2c8	      7524	screen.c	FUNCTION_51	WHILE_1
0xf1eb	    0x8b0500000000	            mov eax, dword [0x0400f231] 	      7525	screen.c	FUNCTION_51	WHILE_1
0xf1f1	            0x85c0	                           test eax, eax	      7525	screen.c	FUNCTION_51	WHILE_1
0xf1f3	            0x7468	                            je 0x400f29d	      7525	screen.c	FUNCTION_51	WHILE_1
0xf1f5	    0x488b05000000	            mov rax, qword [0x0400f23c] 	      7526	screen.c	FUNCTION_51	WHILE_1
0xf1fc	    0x8b9578ffffff	             mov edx, dword [rbp - 0x88]	      7526	screen.c	FUNCTION_51	WHILE_1
0xf202	        0x48c1e202	                              shl rdx, 2	      7526	screen.c	FUNCTION_51	WHILE_1
0xf206	          0x4801d0	                            add rax, rdx	      7526	screen.c	FUNCTION_51	WHILE_1
0xf209	            0x8b10	                    mov edx, dword [rax]	      7526	screen.c	FUNCTION_51	WHILE_1
0xf20b	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	      7527	screen.c	FUNCTION_51	WHILE_1
0xf211	          0x83f87f	                           cmp eax, 0x7f	      7527	screen.c	FUNCTION_51	WHILE_1
0xf214	            0x7f07	                            jg 0x400f25d	      7527	screen.c	FUNCTION_51	WHILE_1
0xf216	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      7527	screen.c	FUNCTION_51	WHILE_1
0xf219	            0x85c0	                           test eax, eax	      7527	screen.c	FUNCTION_51	WHILE_1
0xf21b	            0x7405	                            je 0x400f262	      7527	screen.c	FUNCTION_51	WHILE_1
0xf21d	          0x8b4588	             mov eax, dword [rbp - 0x78]	      7527	screen.c	FUNCTION_51	WHILE_1
0xf220	            0xeb05	                           jmp 0x400f267	      7527	screen.c	FUNCTION_51	WHILE_1
0xf222	      0xb800000000	                              mov eax, 0	      7527	screen.c	FUNCTION_51	WHILE_1
0xf227	            0x39c2	                            cmp edx, eax	      7526	screen.c	FUNCTION_51	WHILE_1
0xf229	            0x755d	                           jne 0x400f2c8	      7526	screen.c	FUNCTION_51	WHILE_1
0xf22b	    0x488b05000000	            mov rax, qword [0x0400f272] 	      7528	screen.c	FUNCTION_51	WHILE_1
0xf232	    0x8b9578ffffff	             mov edx, dword [rbp - 0x88]	      7528	screen.c	FUNCTION_51	WHILE_1
0xf238	        0x48c1e202	                              shl rdx, 2	      7528	screen.c	FUNCTION_51	WHILE_1
0xf23c	          0x4801d0	                            add rax, rdx	      7528	screen.c	FUNCTION_51	WHILE_1
0xf23f	            0x8b00	                    mov eax, dword [rax]	      7528	screen.c	FUNCTION_51	WHILE_1
0xf241	            0x85c0	                           test eax, eax	      7528	screen.c	FUNCTION_51	WHILE_1
0xf243	            0x7418	                            je 0x400f29d	      7528	screen.c	FUNCTION_51	WHILE_1
0xf245	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      7529	screen.c	FUNCTION_51	WHILE_1	CALL_11
0xf24b	        0x488d55c0	                   lea rdx, [rbp - 0x40]	      7529	screen.c	FUNCTION_51	WHILE_1	CALL_11
0xf24f	          0x4889d6	                            mov rsi, rdx	      7529	screen.c	FUNCTION_51	WHILE_1	CALL_11
0xf252	            0x89c7	                            mov edi, eax	      7529	screen.c	FUNCTION_51	WHILE_1	CALL_11
0xf254	      0xe801faffff	            call sym.screen_comp_differs	      7529	screen.c	FUNCTION_51	WHILE_1	CALL_11
0xf259	            0x85c0	                           test eax, eax	      7529	screen.c	FUNCTION_51	WHILE_1	CALL_11
0xf25b	            0x752b	                           jne 0x400f2c8	      7529	screen.c	FUNCTION_51	WHILE_1	CALL_11
0xf25d	    0x488b05000000	            mov rax, qword [0x0400f2a4] 	      7531	screen.c	FUNCTION_51	WHILE_1
0xf264	    0x8b9578ffffff	             mov edx, dword [rbp - 0x88]	      7531	screen.c	FUNCTION_51	WHILE_1
0xf26a	          0x4801d2	                            add rdx, rdx	      7531	screen.c	FUNCTION_51	WHILE_1
0xf26d	          0x4801d0	                            add rax, rdx	      7531	screen.c	FUNCTION_51	WHILE_1
0xf270	           0xfb700	                   movzx eax, word [rax]	      7531	screen.c	FUNCTION_51	WHILE_1
0xf273	           0xfb7c0	                           movzx eax, ax	      7531	screen.c	FUNCTION_51	WHILE_1
0xf276	    0x3b8558ffffff	             cmp eax, dword [rbp - 0xa8]	      7531	screen.c	FUNCTION_51	WHILE_1
0xf27c	            0x750a	                           jne 0x400f2c8	      7531	screen.c	FUNCTION_51	WHILE_1
0xf27e	    0x8b0500000000	            mov eax, dword [0x0400f2c4] 	      7532	screen.c	FUNCTION_51	WHILE_1
0xf284	            0x85c0	                           test eax, eax	      7532	screen.c	FUNCTION_51	WHILE_1
0xf286	            0x7407	                            je 0x400f2cf	      7532	screen.c	FUNCTION_51	WHILE_1
0xf288	      0xb801000000	                              mov eax, 1	      7532	screen.c	FUNCTION_51	WHILE_1
0xf28d	            0xeb05	                           jmp 0x400f2d4	      7532	screen.c	FUNCTION_51	WHILE_1
0xf28f	      0xb800000000	                              mov eax, 0	      7532	screen.c	FUNCTION_51	WHILE_1
0xf294	          0x8945b4	             mov dword [rbp - 0x4c], eax	      7518	screen.c	FUNCTION_51	WHILE_1
0xf297	        0x837db400	               cmp dword [rbp - 0x4c], 0	      7534	screen.c	FUNCTION_51	WHILE_1	IF_14
0xf29b	            0x750a	                           jne 0x400f2e7	      7534	screen.c	FUNCTION_51	WHILE_1	IF_14
0xf29d	        0x837db000	               cmp dword [rbp - 0x50], 0	      7536	screen.c	FUNCTION_51	WHILE_1	IF_14
0xf2a1	     0xf84c4030000	                            je 0x400f6ab	      7536	screen.c	FUNCTION_51	WHILE_1	IF_14
0xf2a7	        0x837db400	               cmp dword [rbp - 0x4c], 0	      7545	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_15
0xf2ab	            0x7464	                            je 0x400f351	      7545	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_15
0xf2ad	    0x488b15000000	            mov rdx, qword [0x0400f2f4] 	      7545	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_15
0xf2b4	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      7545	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_15
0xf2ba	          0x4801d0	                            add rax, rdx	      7545	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_15
0xf2bd	           0xfb600	                   movzx eax, byte [rax]	      7545	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_15
0xf2c0	            0x3c20	                            cmp al, 0x20	      7545	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_15
0xf2c2	            0x744d	                            je 0x400f351	      7545	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_15
0xf2c4	    0x8b0500000000	            mov eax, dword [0x0400f30a] 	      7545	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_15
0xf2ca	            0x85c0	                           test eax, eax	      7545	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_15
0xf2cc	            0x7443	                            je 0x400f351	      7545	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_15
0xf2ce	    0x488b05000000	            mov rax, qword [0x0400f315] 	      7557	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_15
0xf2d5	    0x8b9578ffffff	             mov edx, dword [rbp - 0x88]	      7557	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_15
0xf2db	          0x4801d2	                            add rdx, rdx	      7557	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_15
0xf2de	          0x4801d0	                            add rax, rdx	      7557	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_15
0xf2e1	           0xfb700	                   movzx eax, word [rax]	      7557	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_15
0xf2e4	           0xfb7c0	                           movzx eax, ax	      7557	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_15
0xf2e7	          0x8945a0	             mov dword [rbp - 0x60], eax	      7557	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_15
0xf2ea	    0x817da0ff0000	           cmp dword [rbp - 0x60], 0xff 	      7559	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_15	IF_16
0xf2f1	            0x7e0d	                           jle 0x400f340	      7559	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_15	IF_16
0xf2f3	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      7560	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_15	CALL_12
0xf2f6	            0x89c7	                            mov edi, eax	      7560	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_15	CALL_12
0xf2f8	      0xe800000000	                          call 0x400f33d	      7560	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_15	CALL_12
0xf2fd	          0x8945a0	             mov dword [rbp - 0x60], eax	      7560	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_15	CALL_12
0xf300	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      7561	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_15	IF_17
0xf303	          0x83e002	                              and eax, 2	      7561	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_15	IF_17
0xf306	            0x85c0	                           test eax, eax	      7561	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_15	IF_17
0xf308	            0x7407	                            je 0x400f351	      7561	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_15	IF_17
0xf30a	    0xc7459c010000	               mov dword [rbp - 0x64], 1	      7562	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_15	IF_17
0xf311	        0x837d8c00	               cmp dword [rbp - 0x74], 0	      7571	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_18
0xf315	            0x740c	                            je 0x400f363	      7571	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_18
0xf317	    0xc7458c000000	               mov dword [rbp - 0x74], 0	      7572	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_18
0xf31e	      0xe9c0000000	                           jmp 0x400f423	      7572	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_18
0xf323	    0x8b0500000000	            mov eax, dword [0x0400f369] 	      7573	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf329	            0x85c0	                           test eax, eax	      7573	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf32b	     0xf84b2000000	                            je 0x400f423	      7573	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf331	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      7574	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf338	            0x7917	                           jns 0x400f391	      7574	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf33a	          0x8b4580	             mov eax, dword [rbp - 0x80]	      7574	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf33d	          0x4863d0	                         movsxd rdx, eax	      7574	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf340	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7574	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf344	          0x4801d0	                            add rax, rdx	      7574	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf347	           0xfb600	                   movzx eax, byte [rax]	      7574	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf34a	            0x84c0	                             test al, al	      7574	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf34c	           0xf94c0	                                 sete al	      7574	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf34f	            0xeb27	                           jmp 0x400f3b8	      7574	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf351	          0x8b4580	             mov eax, dword [rbp - 0x80]	      7575	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf354	          0x4863d0	                         movsxd rdx, eax	      7575	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf357	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7575	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf35b	        0x488d0c02	                    lea rcx, [rdx + rax]	      7575	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf35f	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	      7575	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf365	          0x4863d0	                         movsxd rdx, eax	      7575	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf368	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      7575	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf36f	          0x4801d0	                            add rax, rdx	      7575	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf372	          0x4839c1	                            cmp rcx, rax	      7574	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf375	           0xf93c0	                                setae al	      7574	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf378	            0x84c0	                             test al, al	      7574	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf37a	            0x7467	                            je 0x400f423	      7574	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf37c	        0x837d8401	               cmp dword [rbp - 0x7c], 1	      7576	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf380	            0x751b	                           jne 0x400f3dd	      7576	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf382	    0x488b05000000	            mov rax, qword [0x0400f3c9] 	      7576	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf389	          0x8b4da8	             mov ecx, dword [rbp - 0x58]	      7576	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf38c	    0x8b9578ffffff	             mov edx, dword [rbp - 0x88]	      7576	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf392	            0x89ce	                            mov esi, ecx	      7576	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf394	            0x89d7	                            mov edi, edx	      7576	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf396	            0xffd0	                                call rax	      7576	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf398	          0x83f801	                              cmp eax, 1	      7576	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf39b	            0x7f3f	                            jg 0x400f41c	      7576	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf39d	        0x837d8402	               cmp dword [rbp - 0x7c], 2	      7577	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf3a1	            0x7540	                           jne 0x400f423	      7577	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf3a3	    0x488b05000000	            mov rax, qword [0x0400f3ea] 	      7578	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf3aa	          0x8b4da8	             mov ecx, dword [rbp - 0x58]	      7578	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf3ad	    0x8b9578ffffff	             mov edx, dword [rbp - 0x88]	      7578	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf3b3	            0x89ce	                            mov esi, ecx	      7578	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf3b5	            0x89d7	                            mov edi, edx	      7578	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf3b7	            0xffd0	                                call rax	      7578	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf3b9	          0x83f801	                              cmp eax, 1	      7578	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf3bc	            0x7525	                           jne 0x400f423	      7578	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf3be	    0x488b05000000	            mov rax, qword [0x0400f405] 	      7579	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf3c5	    0x8b9578ffffff	             mov edx, dword [rbp - 0x88]	      7579	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf3cb	          0x8d4a01	                      lea ecx, [rdx + 1]	      7579	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf3ce	          0x8b55a8	             mov edx, dword [rbp - 0x58]	      7579	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf3d1	            0x89d6	                            mov esi, edx	      7579	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf3d3	            0x89cf	                            mov edi, ecx	      7579	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf3d5	            0xffd0	                                call rax	      7579	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf3d7	          0x83f801	                              cmp eax, 1	      7579	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf3da	            0x7e07	                           jle 0x400f423	      7579	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf3dc	    0xc7458c010000	               mov dword [rbp - 0x74], 1	      7580	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_7	IF_19
0xf3e3	    0x8b0500000000	            mov eax, dword [0x0400f429] 	      7584	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_20
0xf3e9	            0x85c0	                           test eax, eax	      7584	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_20
0xf3eb	            0x747a	                            je 0x400f4a7	      7584	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_20
0xf3ed	        0x837d8401	               cmp dword [rbp - 0x7c], 1	      7585	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_20
0xf3f1	            0x751b	                           jne 0x400f44e	      7585	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_20
0xf3f3	    0x488b05000000	            mov rax, qword [0x0400f43a] 	      7585	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_20
0xf3fa	          0x8b4da8	             mov ecx, dword [rbp - 0x58]	      7585	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_20
0xf3fd	    0x8b9578ffffff	             mov edx, dword [rbp - 0x88]	      7585	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_20
0xf403	            0x89ce	                            mov esi, ecx	      7585	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_20
0xf405	            0x89d7	                            mov edi, edx	      7585	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_20
0xf407	            0xffd0	                                call rax	      7585	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_20
0xf409	          0x83f801	                              cmp eax, 1	      7585	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_20
0xf40c	            0x7f3f	                            jg 0x400f48d	      7585	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_20
0xf40e	        0x837d8402	               cmp dword [rbp - 0x7c], 2	      7586	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_20
0xf412	            0x7553	                           jne 0x400f4a7	      7586	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_20
0xf414	    0x488b05000000	            mov rax, qword [0x0400f45b] 	      7587	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_20
0xf41b	          0x8b4da8	             mov ecx, dword [rbp - 0x58]	      7587	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_20
0xf41e	    0x8b9578ffffff	             mov edx, dword [rbp - 0x88]	      7587	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_20
0xf424	            0x89ce	                            mov esi, ecx	      7587	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_20
0xf426	            0x89d7	                            mov edi, edx	      7587	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_20
0xf428	            0xffd0	                                call rax	      7587	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_20
0xf42a	          0x83f801	                              cmp eax, 1	      7587	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_20
0xf42d	            0x7538	                           jne 0x400f4a7	      7587	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_20
0xf42f	    0x488b05000000	            mov rax, qword [0x0400f476] 	      7588	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_20
0xf436	    0x8b9578ffffff	             mov edx, dword [rbp - 0x88]	      7588	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_20
0xf43c	          0x8d4a01	                      lea ecx, [rdx + 1]	      7588	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_20
0xf43f	          0x8b55a8	             mov edx, dword [rbp - 0x58]	      7588	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_20
0xf442	            0x89d6	                            mov esi, edx	      7588	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_20
0xf444	            0x89cf	                            mov edi, ecx	      7588	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_20
0xf446	            0xffd0	                                call rax	      7588	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_20
0xf448	          0x83f801	                              cmp eax, 1	      7588	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_20
0xf44b	            0x7e1a	                           jle 0x400f4a7	      7588	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_20
0xf44d	    0x488b05000000	            mov rax, qword [0x0400f494] 	      7589	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_20
0xf454	          0x8b4d80	             mov ecx, dword [rbp - 0x80]	      7589	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_20
0xf457	    0x8b9578ffffff	             mov edx, dword [rbp - 0x88]	      7589	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_20
0xf45d	             0x1ca	                            add edx, ecx	      7589	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_20
0xf45f	            0x89d2	                            mov edx, edx	      7589	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_20
0xf461	          0x4801d0	                            add rax, rdx	      7589	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_20
0xf464	          0xc60000	                       mov byte [rax], 0	      7589	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_20
0xf467	    0x488b15000000	            mov rdx, qword [0x0400f4ae] 	      7591	screen.c	FUNCTION_51	WHILE_1	IF_14
0xf46e	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      7591	screen.c	FUNCTION_51	WHILE_1	IF_14
0xf474	          0x4801d0	                            add rax, rdx	      7591	screen.c	FUNCTION_51	WHILE_1	IF_14
0xf477	    0x8b9574ffffff	             mov edx, dword [rbp - 0x8c]	      7591	screen.c	FUNCTION_51	WHILE_1	IF_14
0xf47d	            0x8810	                      mov byte [rax], dl	      7591	screen.c	FUNCTION_51	WHILE_1	IF_14
0xf47f	    0x488b05000000	            mov rax, qword [0x0400f4c6] 	      7592	screen.c	FUNCTION_51	WHILE_1	IF_14
0xf486	    0x8b9578ffffff	             mov edx, dword [rbp - 0x88]	      7592	screen.c	FUNCTION_51	WHILE_1	IF_14
0xf48c	          0x4801d2	                            add rdx, rdx	      7592	screen.c	FUNCTION_51	WHILE_1	IF_14
0xf48f	          0x4801d0	                            add rax, rdx	      7592	screen.c	FUNCTION_51	WHILE_1	IF_14
0xf492	    0x8b9558ffffff	             mov edx, dword [rbp - 0xa8]	      7592	screen.c	FUNCTION_51	WHILE_1	IF_14
0xf498	          0x668910	                      mov word [rax], dx	      7592	screen.c	FUNCTION_51	WHILE_1	IF_14
0xf49b	    0x8b0500000000	            mov eax, dword [0x0400f4e1] 	      7594	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21
0xf4a1	            0x85c0	                           test eax, eax	      7594	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21
0xf4a3	     0xf84f3000000	                            je 0x400f5dc	      7594	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21
0xf4a9	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	      7596	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	IF_22
0xf4af	          0x83f87f	                           cmp eax, 0x7f	      7596	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	IF_22
0xf4b2	            0x7f23	                            jg 0x400f517	      7596	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	IF_22
0xf4b4	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      7596	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	IF_22
0xf4b7	            0x85c0	                           test eax, eax	      7596	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	IF_22
0xf4b9	            0x751c	                           jne 0x400f517	      7596	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	IF_22
0xf4bb	    0x488b05000000	            mov rax, qword [0x0400f502] 	      7597	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	IF_22
0xf4c2	    0x8b9578ffffff	             mov edx, dword [rbp - 0x88]	      7597	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	IF_22
0xf4c8	        0x48c1e202	                              shl rdx, 2	      7597	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	IF_22
0xf4cc	          0x4801d0	                            add rax, rdx	      7597	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	IF_22
0xf4cf	    0xc70000000000	                      mov dword [rax], 0	      7597	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	IF_22
0xf4d5	            0xeb66	                           jmp 0x400f57d	      7597	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	IF_22
0xf4d7	    0x488b05000000	            mov rax, qword [0x0400f51e] 	      7602	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	ELSE_8
0xf4de	    0x8b9578ffffff	             mov edx, dword [rbp - 0x88]	      7602	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	ELSE_8
0xf4e4	        0x48c1e202	                              shl rdx, 2	      7602	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	ELSE_8
0xf4e8	          0x4801c2	                            add rdx, rax	      7602	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	ELSE_8
0xf4eb	          0x8b4588	             mov eax, dword [rbp - 0x78]	      7602	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	ELSE_8
0xf4ee	            0x8902	                    mov dword [rdx], eax	      7602	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	ELSE_8
0xf4f0	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	      7603	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	ELSE_8	FOR_1
0xf4f7	            0xeb36	                           jmp 0x400f56f	      7603	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	ELSE_8	FOR_1
0xf4f9	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      7605	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	ELSE_8	FOR_1
0xf4fc	            0x4898	                                    cdqe	      7605	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	ELSE_8	FOR_1
0xf4fe	    0x488b04c50000	                  mov rax, qword [rax*8]	      7605	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	ELSE_8	FOR_1
0xf506	    0x8b9578ffffff	             mov edx, dword [rbp - 0x88]	      7605	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	ELSE_8	FOR_1
0xf50c	        0x48c1e202	                              shl rdx, 2	      7605	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	ELSE_8	FOR_1
0xf510	          0x4801c2	                            add rdx, rax	      7605	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	ELSE_8	FOR_1
0xf513	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      7605	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	ELSE_8	FOR_1
0xf516	            0x4898	                                    cdqe	      7605	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	ELSE_8	FOR_1
0xf518	        0x8b4485c0	     mov eax, dword [rbp + rax*4 - 0x40]	      7605	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	ELSE_8	FOR_1
0xf51c	            0x8902	                    mov dword [rdx], eax	      7605	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	ELSE_8	FOR_1
0xf51e	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      7606	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	ELSE_8	FOR_1	IF_23
0xf521	            0x4898	                                    cdqe	      7606	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	ELSE_8	FOR_1	IF_23
0xf523	        0x8b4485c0	     mov eax, dword [rbp + rax*4 - 0x40]	      7606	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	ELSE_8	FOR_1	IF_23
0xf527	            0x85c0	                           test eax, eax	      7606	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	ELSE_8	FOR_1	IF_23
0xf529	            0x7411	                            je 0x400f57c	      7606	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	ELSE_8	FOR_1	IF_23
0xf52b	        0x8345a401	               add dword [rbp - 0x5c], 1	      7603	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	ELSE_8	FOR_1
0xf52f	    0x8b0500000000	            mov eax, dword [0x0400f575] 	      7603	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	ELSE_8	FOR_1
0xf535	          0x3945a4	            cmp dword [rbp - 0x5c], eax 	      7603	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	ELSE_8	FOR_1
0xf538	            0x7cbf	                            jl 0x400f539	      7603	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	ELSE_8	FOR_1
0xf53a	            0xeb01	                           jmp 0x400f57d	      7603	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	ELSE_8	FOR_1
0xf53c	              0x90	                                     nop	      7607	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	ELSE_8	FOR_1	IF_23
0xf53d	        0x837d8402	               cmp dword [rbp - 0x7c], 2	      7610	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	IF_24
0xf541	            0x7539	                           jne 0x400f5bc	      7610	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	IF_24
0xf543	    0x488b05000000	            mov rax, qword [0x0400f58a] 	      7612	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	IF_24
0xf54a	    0x8b9578ffffff	             mov edx, dword [rbp - 0x88]	      7612	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	IF_24
0xf550	          0x83c201	                              add edx, 1	      7612	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	IF_24
0xf553	            0x89d2	                            mov edx, edx	      7612	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	IF_24
0xf555	          0x4801d0	                            add rax, rdx	      7612	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	IF_24
0xf558	          0xc60000	                       mov byte [rax], 0	      7612	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	IF_24
0xf55b	    0x488b05000000	            mov rax, qword [0x0400f5a2] 	      7613	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	IF_24
0xf562	    0x8b9578ffffff	             mov edx, dword [rbp - 0x88]	      7613	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	IF_24
0xf568	          0x83c201	                              add edx, 1	      7613	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	IF_24
0xf56b	            0x89d2	                            mov edx, edx	      7613	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	IF_24
0xf56d	          0x4801d2	                            add rdx, rdx	      7613	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	IF_24
0xf570	          0x4801d0	                            add rax, rdx	      7613	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	IF_24
0xf573	    0x8b9558ffffff	             mov edx, dword [rbp - 0xa8]	      7613	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	IF_24
0xf579	          0x668910	                      mov word [rax], dx	      7613	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	IF_24
0xf57c	    0x8b955cffffff	             mov edx, dword [rbp - 0xa4]	      7615	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	CALL_13
0xf582	    0x8b8d60ffffff	             mov ecx, dword [rbp - 0xa0]	      7615	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	CALL_13
0xf588	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      7615	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	CALL_13
0xf58e	            0x89ce	                            mov esi, ecx	      7615	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	CALL_13
0xf590	            0x89c7	                            mov edi, eax	      7615	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	CALL_13
0xf592	      0xe8ef120000	                    call sym.screen_char	      7615	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	CALL_13
0xf597	      0xe9cf000000	                           jmp 0x400f6ab	      7615	screen.c	FUNCTION_51	WHILE_1	IF_14	IF_21	CALL_13
0xf59c	        0x837d8402	               cmp dword [rbp - 0x7c], 2	      7617	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_9	IF_25
0xf5a0	            0x755d	                           jne 0x400f63f	      7617	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_9	IF_25
0xf5a2	    0x488b05000000	            mov rax, qword [0x0400f5e9] 	      7619	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_9	IF_25
0xf5a9	    0x8b9578ffffff	             mov edx, dword [rbp - 0x88]	      7619	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_9	IF_25
0xf5af	          0x83c201	                              add edx, 1	      7619	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_9	IF_25
0xf5b2	            0x89d2	                            mov edx, edx	      7619	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_9	IF_25
0xf5b4	          0x4801c2	                            add rdx, rax	      7619	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_9	IF_25
0xf5b7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7619	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_9	IF_25
0xf5bb	         0xfb64001	               movzx eax, byte [rax + 1]	      7619	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_9	IF_25
0xf5bf	            0x8802	                      mov byte [rdx], al	      7619	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_9	IF_25
0xf5c1	    0x488b05000000	            mov rax, qword [0x0400f608] 	      7620	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_9	IF_25
0xf5c8	    0x8b9578ffffff	             mov edx, dword [rbp - 0x88]	      7620	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_9	IF_25
0xf5ce	          0x83c201	                              add edx, 1	      7620	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_9	IF_25
0xf5d1	            0x89d2	                            mov edx, edx	      7620	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_9	IF_25
0xf5d3	          0x4801d2	                            add rdx, rdx	      7620	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_9	IF_25
0xf5d6	          0x4801d0	                            add rax, rdx	      7620	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_9	IF_25
0xf5d9	    0x8b9558ffffff	             mov edx, dword [rbp - 0xa8]	      7620	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_9	IF_25
0xf5df	          0x668910	                      mov word [rax], dx	      7620	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_9	IF_25
0xf5e2	    0x8b955cffffff	             mov edx, dword [rbp - 0xa4]	      7621	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_9	IF_25	CALL_14
0xf5e8	    0x8b8d60ffffff	             mov ecx, dword [rbp - 0xa0]	      7621	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_9	IF_25	CALL_14
0xf5ee	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      7621	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_9	IF_25	CALL_14
0xf5f4	            0x89ce	                            mov esi, ecx	      7621	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_9	IF_25	CALL_14
0xf5f6	            0x89c7	                            mov edi, eax	      7621	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_9	IF_25	CALL_14
0xf5f8	      0xe8c7140000	                  call sym.screen_char_2	      7621	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_9	IF_25	CALL_14
0xf5fd	            0xeb6c	                           jmp 0x400f6ab	      7621	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_9	IF_25	CALL_14
0xf5ff	    0x8b0500000000	            mov eax, dword [0x0400f645] 	      7623	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_10	IF_26
0xf605	      0x3dcc260000	                         cmp eax, 0x26cc	      7623	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_10	IF_26
0xf60a	            0x7544	                           jne 0x400f690	      7623	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_10	IF_26
0xf60c	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	      7623	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_10	IF_26
0xf612	      0x3d8e000000	                           cmp eax, 0x8e	      7623	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_10	IF_26
0xf617	            0x7537	                           jne 0x400f690	      7623	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_10	IF_26
0xf619	    0x488b15000000	            mov rdx, qword [0x0400f660] 	      7625	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_10	IF_26
0xf620	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      7625	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_10	IF_26
0xf626	          0x4801c2	                            add rdx, rax	      7625	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_10	IF_26
0xf629	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7625	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_10	IF_26
0xf62d	         0xfb64001	               movzx eax, byte [rax + 1]	      7625	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_10	IF_26
0xf631	            0x8802	                      mov byte [rdx], al	      7625	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_10	IF_26
0xf633	    0x8b955cffffff	             mov edx, dword [rbp - 0xa4]	      7626	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_10	IF_26	CALL_15
0xf639	    0x8b8d60ffffff	             mov ecx, dword [rbp - 0xa0]	      7626	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_10	IF_26	CALL_15
0xf63f	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      7626	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_10	IF_26	CALL_15
0xf645	            0x89ce	                            mov esi, ecx	      7626	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_10	IF_26	CALL_15
0xf647	            0x89c7	                            mov edi, eax	      7626	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_10	IF_26	CALL_15
0xf649	      0xe838120000	                    call sym.screen_char	      7626	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_10	IF_26	CALL_15
0xf64e	            0xeb1b	                           jmp 0x400f6ab	      7626	screen.c	FUNCTION_51	WHILE_1	IF_14	ELSE_10	IF_26	CALL_15
0xf650	    0x8b955cffffff	             mov edx, dword [rbp - 0xa4]	      7630	screen.c	FUNCTION_51	WHILE_1	IF_14	CALL_16
0xf656	    0x8b8d60ffffff	             mov ecx, dword [rbp - 0xa0]	      7630	screen.c	FUNCTION_51	WHILE_1	IF_14	CALL_16
0xf65c	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      7630	screen.c	FUNCTION_51	WHILE_1	IF_14	CALL_16
0xf662	            0x89ce	                            mov esi, ecx	      7630	screen.c	FUNCTION_51	WHILE_1	IF_14	CALL_16
0xf664	            0x89c7	                            mov edi, eax	      7630	screen.c	FUNCTION_51	WHILE_1	IF_14	CALL_16
0xf666	      0xe81b120000	                    call sym.screen_char	      7630	screen.c	FUNCTION_51	WHILE_1	IF_14	CALL_16
0xf66b	    0x8b0500000000	            mov eax, dword [0x0400f6b1] 	      7633	screen.c	FUNCTION_51	WHILE_1	IF_27
0xf671	            0x85c0	                           test eax, eax	      7633	screen.c	FUNCTION_51	WHILE_1	IF_27
0xf673	            0x7435	                            je 0x400f6ea	      7633	screen.c	FUNCTION_51	WHILE_1	IF_27
0xf675	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      7635	screen.c	FUNCTION_51	WHILE_1	IF_27
0xf678	     0x18578ffffff	             add dword [rbp - 0x88], eax	      7635	screen.c	FUNCTION_51	WHILE_1	IF_27
0xf67e	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      7636	screen.c	FUNCTION_51	WHILE_1	IF_27
0xf681	     0x1855cffffff	             add dword [rbp - 0xa4], eax	      7636	screen.c	FUNCTION_51	WHILE_1	IF_27
0xf687	          0x8b4580	             mov eax, dword [rbp - 0x80]	      7637	screen.c	FUNCTION_51	WHILE_1	IF_27
0xf68a	            0x4898	                                    cdqe	      7637	screen.c	FUNCTION_51	WHILE_1	IF_27
0xf68c	        0x480145b8	            add qword [rbp - 0x48], rax 	      7637	screen.c	FUNCTION_51	WHILE_1	IF_27
0xf690	        0x837d8c00	               cmp dword [rbp - 0x74], 0	      7638	screen.c	FUNCTION_51	WHILE_1	IF_27	IF_28
0xf694	            0x7427	                            je 0x400f6fd	      7638	screen.c	FUNCTION_51	WHILE_1	IF_27	IF_28
0xf696	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      7641	screen.c	FUNCTION_51	WHILE_1	IF_27	IF_28
0xf69e	    0xc7857cffffff	     mov dword [rbp - 0x84], 0xffffffff 	      7642	screen.c	FUNCTION_51	WHILE_1	IF_27	IF_28
0xf6a8	            0xeb13	                           jmp 0x400f6fd	      7642	screen.c	FUNCTION_51	WHILE_1	IF_27	IF_28
0xf6aa	    0x838578ffffff	               add dword [rbp - 0x88], 1	      7648	screen.c	FUNCTION_51	WHILE_1	ELSE_12
0xf6b1	    0x83855cffffff	               add dword [rbp - 0xa4], 1	      7649	screen.c	FUNCTION_51	WHILE_1	ELSE_12
0xf6b8	      0x488345b801	               add qword [rbp - 0x48], 1	      7650	screen.c	FUNCTION_51	WHILE_1	ELSE_12
0xf6bd	    0x8b0500000000	            mov eax, dword [0x0400f703] 	      7445	screen.c	FUNCTION_51	WHILE_1
0xf6c3	    0x39855cffffff	            cmp dword [rbp - 0xa4], eax 	      7445	screen.c	FUNCTION_51	WHILE_1
0xf6c9	            0x7d31	                           jge 0x400f73c	      7445	screen.c	FUNCTION_51	WHILE_1
0xf6cb	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      7446	screen.c	FUNCTION_51	WHILE_1
0xf6d2	            0x7819	                            js 0x400f72d	      7446	screen.c	FUNCTION_51	WHILE_1
0xf6d4	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      7446	screen.c	FUNCTION_51	WHILE_1
0xf6d8	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      7446	screen.c	FUNCTION_51	WHILE_1
0xf6df	          0x4829c2	                            sub rdx, rax	      7446	screen.c	FUNCTION_51	WHILE_1
0xf6e2	          0x4889d0	                            mov rax, rdx	      7446	screen.c	FUNCTION_51	WHILE_1
0xf6e5	    0x3b857cffffff	             cmp eax, dword [rbp - 0x84]	      7446	screen.c	FUNCTION_51	WHILE_1
0xf6eb	            0x7d0f	                           jge 0x400f73c	      7446	screen.c	FUNCTION_51	WHILE_1
0xf6ed	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7447	screen.c	FUNCTION_51	WHILE_1
0xf6f1	           0xfb600	                   movzx eax, byte [rax]	      7447	screen.c	FUNCTION_51	WHILE_1
0xf6f4	            0x84c0	                             test al, al	      7447	screen.c	FUNCTION_51	WHILE_1
0xf6f6	     0xf85f8f7ffff	                           jne 0x400ef34	      7447	screen.c	FUNCTION_51	WHILE_1
0xf6fc	        0x837d9c00	               cmp dword [rbp - 0x64], 0	      7657	screen.c	FUNCTION_51	IF_29
0xf700	            0x746a	                            je 0x400f7ac	      7657	screen.c	FUNCTION_51	IF_29
0xf702	    0x8b0500000000	            mov eax, dword [0x0400f748] 	      7657	screen.c	FUNCTION_51	IF_29
0xf708	    0x39855cffffff	            cmp dword [rbp - 0xa4], eax 	      7657	screen.c	FUNCTION_51	IF_29
0xf70e	            0x7d5c	                           jge 0x400f7ac	      7657	screen.c	FUNCTION_51	IF_29
0xf710	    0x8b0500000000	            mov eax, dword [0x0400f756] 	      7660	screen.c	FUNCTION_51	IF_29	IF_30	CALL_17
0xf716	            0x85c0	                           test eax, eax	      7660	screen.c	FUNCTION_51	IF_29	IF_30	CALL_17
0xf718	            0x7434	                            je 0x400f78e	      7660	screen.c	FUNCTION_51	IF_29	IF_30	CALL_17
0xf71a	          0x8b55a8	             mov edx, dword [rbp - 0x58]	      7660	screen.c	FUNCTION_51	IF_29	IF_30	CALL_17
0xf71d	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      7660	screen.c	FUNCTION_51	IF_29	IF_30	CALL_17
0xf723	            0x89d6	                            mov esi, edx	      7660	screen.c	FUNCTION_51	IF_29	IF_30	CALL_17
0xf725	            0x89c7	                            mov edi, eax	      7660	screen.c	FUNCTION_51	IF_29	IF_30	CALL_17
0xf727	      0xe800000000	                          call 0x400f76c	      7660	screen.c	FUNCTION_51	IF_29	IF_30	CALL_17
0xf72c	          0x83f801	                              cmp eax, 1	      7660	screen.c	FUNCTION_51	IF_29	IF_30	CALL_17
0xf72f	            0x7e1d	                           jle 0x400f78e	      7660	screen.c	FUNCTION_51	IF_29	IF_30	CALL_17
0xf731	    0x8b955cffffff	             mov edx, dword [rbp - 0xa4]	      7661	screen.c	FUNCTION_51	IF_29	CALL_18
0xf737	    0x8b8d60ffffff	             mov ecx, dword [rbp - 0xa0]	      7661	screen.c	FUNCTION_51	IF_29	CALL_18
0xf73d	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      7661	screen.c	FUNCTION_51	IF_29	CALL_18
0xf743	            0x89ce	                            mov esi, ecx	      7661	screen.c	FUNCTION_51	IF_29	CALL_18
0xf745	            0x89c7	                            mov edi, eax	      7661	screen.c	FUNCTION_51	IF_29	CALL_18
0xf747	      0xe878130000	                  call sym.screen_char_2	      7661	screen.c	FUNCTION_51	IF_29	CALL_18
0xf74c	            0xeb1e	                           jmp 0x400f7ac	      7661	screen.c	FUNCTION_51	IF_29	CALL_18
0xf74e	    0x8b955cffffff	             mov edx, dword [rbp - 0xa4]	      7664	screen.c	FUNCTION_51	IF_29	CALL_19
0xf754	    0x8b8d60ffffff	             mov ecx, dword [rbp - 0xa0]	      7664	screen.c	FUNCTION_51	IF_29	CALL_19
0xf75a	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      7664	screen.c	FUNCTION_51	IF_29	CALL_19
0xf760	            0x89ce	                            mov esi, ecx	      7664	screen.c	FUNCTION_51	IF_29	CALL_19
0xf762	            0x89c7	                            mov edi, eax	      7664	screen.c	FUNCTION_51	IF_29	CALL_19
0xf764	      0xe81d110000	                    call sym.screen_char	      7664	screen.c	FUNCTION_51	IF_29	CALL_19
0xf769	            0xeb01	                           jmp 0x400f7ac	      7664	screen.c	FUNCTION_51	IF_29	CALL_19
0xf76b	              0x90	                                     nop	      7416	screen.c	FUNCTION_51	IF_1
0xf76c	        0x488b45f8	                mov rax, qword [rbp - 8]	      7667	screen.c	FUNCTION_51
0xf770	    0x644833042528	                xor rax, qword fs:[0x28]	      7667	screen.c	FUNCTION_51
0xf779	            0x7405	                            je 0x400f7c0	      7667	screen.c	FUNCTION_51
0xf77b	      0xe800000000	                          call 0x400f7c0	      7667	screen.c	FUNCTION_51
0xf780	              0xc9	                                   leave	      7667	screen.c	FUNCTION_51
0xf781	              0xc3	                                     ret	      7667	screen.c	FUNCTION_51
unshowmode	DO,0:functions,0:CALL,3:ELSE,1:IF,1:WHILE,0:FOR,0:SWITCH,0	21
0x1445d	              0x55	                                push rbp	     10429	screen.c	FUNCTION_88
0x1445e	          0x4889e5	                            mov rbp, rsp	     10429	screen.c	FUNCTION_88
0x14461	        0x4883ec10	                           sub rsp, 0x10	     10429	screen.c	FUNCTION_88
0x14465	          0x897dfc	                mov dword [rbp - 4], edi	     10429	screen.c	FUNCTION_88
0x14468	      0xe800000000	                          call 0x40144ad	     10433	screen.c	FUNCTION_88	IF_1	CALL_2
0x1446d	            0x85c0	                           test eax, eax	     10433	screen.c	FUNCTION_88	IF_1	CALL_2
0x1446f	            0x7419	                            je 0x40144ca	     10433	screen.c	FUNCTION_88	IF_1	CALL_2
0x14471	        0x837dfc00	                  cmp dword [rbp - 4], 0	     10433	screen.c	FUNCTION_88	IF_1	CALL_2
0x14475	            0x751f	                           jne 0x40144d6	     10433	screen.c	FUNCTION_88	IF_1	CALL_2
0x14477	      0xe800000000	                          call 0x40144bc	     10433	screen.c	FUNCTION_88	IF_1	CALL_2
0x1447c	            0x85c0	                           test eax, eax	     10433	screen.c	FUNCTION_88	IF_1	CALL_2
0x1447e	            0x7416	                            je 0x40144d6	     10433	screen.c	FUNCTION_88	IF_1	CALL_2
0x14480	    0x8b0500000000	            mov eax, dword [0x040144c6] 	     10433	screen.c	FUNCTION_88	IF_1	CALL_2
0x14486	            0x85c0	                           test eax, eax	     10433	screen.c	FUNCTION_88	IF_1	CALL_2
0x14488	            0x750c	                           jne 0x40144d6	     10433	screen.c	FUNCTION_88	IF_1	CALL_2
0x1448a	    0xc70500000000	               mov dword [0x040144d4], 1	     10434	screen.c	FUNCTION_88	IF_1
0x14494	            0xeb05	                           jmp 0x40144db	     10434	screen.c	FUNCTION_88	IF_1
0x14496	      0xe800000000	                          call 0x40144db	     10436	screen.c	FUNCTION_88	CALL_3
0x1449b	              0x90	                                     nop	     10437	screen.c	FUNCTION_88
0x1449c	              0xc9	                                   leave	     10437	screen.c	FUNCTION_88
0x1449d	              0xc3	                                     ret	     10437	screen.c	FUNCTION_88
status_redraw_curbuf	DO,0:functions,0:CALL,2:ELSE,0:IF,1:WHILE,0:FOR,0:SWITCH,0	27
0xcda0	              0x55	                                push rbp	      6476	screen.c	FUNCTION_35
0xcda1	          0x4889e5	                            mov rbp, rsp	      6476	screen.c	FUNCTION_35
0xcda4	        0x4883ec10	                           sub rsp, 0x10	      6476	screen.c	FUNCTION_35
0xcda8	    0x488b05000000	            mov rax, qword [0x0400cdef] 	      6479	screen.c	FUNCTION_35	CALL_1
0xcdaf	        0x488945f8	                mov qword [rbp - 8], rax	      6479	screen.c	FUNCTION_35	CALL_1
0xcdb3	            0xeb46	                           jmp 0x400ce3b	      6479	screen.c	FUNCTION_35	CALL_1
0xcdb5	        0x488b45f8	                mov rax, qword [rbp - 8]	      6480	screen.c	FUNCTION_35	IF_1
0xcdb9	    0x8b80a4000000	            mov eax, dword [rax + 0xa4] 	      6480	screen.c	FUNCTION_35	IF_1
0xcdbf	            0x85c0	                           test eax, eax	      6480	screen.c	FUNCTION_35	IF_1
0xcdc1	            0x742c	                            je 0x400ce2f	      6480	screen.c	FUNCTION_35	IF_1
0xcdc3	        0x488b45f8	                mov rax, qword [rbp - 8]	      6480	screen.c	FUNCTION_35	IF_1
0xcdc7	        0x488b5008	                mov rdx, qword [rax + 8]	      6480	screen.c	FUNCTION_35	IF_1
0xcdcb	    0x488b05000000	            mov rax, qword [0x0400ce12] 	      6480	screen.c	FUNCTION_35	IF_1
0xcdd2	          0x4839c2	                            cmp rdx, rax	      6480	screen.c	FUNCTION_35	IF_1
0xcdd5	            0x7518	                           jne 0x400ce2f	      6480	screen.c	FUNCTION_35	IF_1
0xcdd7	        0x488b45f8	                mov rax, qword [rbp - 8]	      6482	screen.c	FUNCTION_35	IF_1
0xcddb	    0xc78040010000	              mov dword [rax + 0x140], 1	      6482	screen.c	FUNCTION_35	IF_1
0xcde5	      0xbf0a000000	                            mov edi, 0xa	      6483	screen.c	FUNCTION_35	IF_1	CALL_2
0xcdea	      0xe800000000	                          call 0x400ce2f	      6483	screen.c	FUNCTION_35	IF_1	CALL_2
0xcdef	        0x488b45f8	                mov rax, qword [rbp - 8]	      6479	screen.c	FUNCTION_35	CALL_1
0xcdf3	        0x488b4020	            mov rax, qword [rax + 0x20] 	      6479	screen.c	FUNCTION_35	CALL_1
0xcdf7	        0x488945f8	                mov qword [rbp - 8], rax	      6479	screen.c	FUNCTION_35	CALL_1
0xcdfb	      0x48837df800	                  cmp qword [rbp - 8], 0	      6479	screen.c	FUNCTION_35	CALL_1
0xce00	            0x75b3	                           jne 0x400cdf5	      6479	screen.c	FUNCTION_35	CALL_1
0xce02	              0x90	                                     nop	      6485	screen.c	FUNCTION_35
0xce03	              0xc9	                                   leave	      6485	screen.c	FUNCTION_35
0xce04	              0xc3	                                     ret	      6485	screen.c	FUNCTION_35
win_redr_status_matches	DO,0:functions,0:CALL,33:ELSE,8:IF,25:WHILE,2:FOR,3:SWITCH,0	533
0xd13d	              0x55	                                push rbp	      6614	screen.c	FUNCTION_41
0xd13e	          0x4889e5	                            mov rbp, rsp	      6614	screen.c	FUNCTION_41
0xd141	        0x4883c480	             add rsp, 0xffffffffffffff80	      6614	screen.c	FUNCTION_41
0xd145	        0x48897d98	             mov qword [rbp - 0x68], rdi	      6614	screen.c	FUNCTION_41
0xd149	          0x897594	             mov dword [rbp - 0x6c], esi	      6614	screen.c	FUNCTION_41
0xd14c	        0x48895588	             mov qword [rbp - 0x78], rdx	      6614	screen.c	FUNCTION_41
0xd150	          0x894d90	             mov dword [rbp - 0x70], ecx	      6614	screen.c	FUNCTION_41
0xd153	        0x44894584	             mov dword [rbp - 0x7c], r8d	      6614	screen.c	FUNCTION_41
0xd157	    0x64488b042528	                mov rax, qword fs:[0x28]	      6614	screen.c	FUNCTION_41
0xd160	        0x488945f8	                mov qword [rbp - 8], rax	      6614	screen.c	FUNCTION_41
0xd164	            0x31c0	                            xor eax, eax	      6614	screen.c	FUNCTION_41
0xd166	    0xc745c0010000	               mov dword [rbp - 0x40], 1	      6623	screen.c	FUNCTION_41
0xd16d	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      6624	screen.c	FUNCTION_41
0xd175	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	      6625	screen.c	FUNCTION_41
0xd17c	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      6626	screen.c	FUNCTION_41
0xd184	    0xc745c8000000	               mov dword [rbp - 0x38], 0	      6628	screen.c	FUNCTION_41
0xd18b	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      6637	screen.c	FUNCTION_41	IF_1
0xd190	     0xf845f070000	                            je 0x400d935	      6637	screen.c	FUNCTION_41	IF_1
0xd196	    0x8b0500000000	            mov eax, dword [0x0400d1dc] 	      6641	screen.c	FUNCTION_41	IF_2
0xd19c	            0x85c0	                           test eax, eax	      6641	screen.c	FUNCTION_41	IF_2
0xd19e	            0x7425	                            je 0x400d205	      6641	screen.c	FUNCTION_41	IF_2
0xd1a0	    0x488b05000000	            mov rax, qword [0x0400d1e7] 	      6642	screen.c	FUNCTION_41	CALL_1
0xd1a7	            0x89c2	                            mov edx, eax	      6642	screen.c	FUNCTION_41	CALL_1
0xd1a9	            0x89d0	                            mov eax, edx	      6642	screen.c	FUNCTION_41	CALL_1
0xd1ab	          0xc1e002	                              shl eax, 2	      6642	screen.c	FUNCTION_41	CALL_1
0xd1ae	             0x1d0	                            add eax, edx	      6642	screen.c	FUNCTION_41	CALL_1
0xd1b0	          0xc1e002	                              shl eax, 2	      6642	screen.c	FUNCTION_41	CALL_1
0xd1b3	             0x1d0	                            add eax, edx	      6642	screen.c	FUNCTION_41	CALL_1
0xd1b5	          0x83c001	                              add eax, 1	      6642	screen.c	FUNCTION_41	CALL_1
0xd1b8	            0x89c7	                            mov edi, eax	      6642	screen.c	FUNCTION_41	CALL_1
0xd1ba	      0xe800000000	                          call 0x400d1ff	      6642	screen.c	FUNCTION_41	CALL_1
0xd1bf	        0x488945d8	             mov qword [rbp - 0x28], rax	      6642	screen.c	FUNCTION_41	CALL_1
0xd1c3	            0xeb15	                           jmp 0x400d21a	      6642	screen.c	FUNCTION_41	CALL_1
0xd1c5	    0x488b05000000	            mov rax, qword [0x0400d20c] 	      6645	screen.c	FUNCTION_41	CALL_2
0xd1cc	          0x83c001	                              add eax, 1	      6645	screen.c	FUNCTION_41	CALL_2
0xd1cf	            0x89c7	                            mov edi, eax	      6645	screen.c	FUNCTION_41	CALL_2
0xd1d1	      0xe800000000	                          call 0x400d216	      6645	screen.c	FUNCTION_41	CALL_2
0xd1d6	        0x488945d8	             mov qword [rbp - 0x28], rax	      6645	screen.c	FUNCTION_41	CALL_2
0xd1da	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      6646	screen.c	FUNCTION_41	IF_3
0xd1df	     0xf8413070000	                            je 0x400d938	      6646	screen.c	FUNCTION_41	IF_3
0xd1e5	        0x837d90ff	cmp dword [rbp - 0x70], 0xffffffffffffffff	      6649	screen.c	FUNCTION_41	IF_4
0xd1e9	            0x750e	                           jne 0x400d239	      6649	screen.c	FUNCTION_41	IF_4
0xd1eb	    0xc74590000000	               mov dword [rbp - 0x70], 0	      6651	screen.c	FUNCTION_41	IF_4
0xd1f2	    0xc745c0000000	               mov dword [rbp - 0x40], 0	      6652	screen.c	FUNCTION_41	IF_4
0xd1f9	        0x837d8400	               cmp dword [rbp - 0x7c], 0	      6655	screen.c	FUNCTION_41	CALL_4
0xd1fd	            0x7421	                            je 0x400d260	      6655	screen.c	FUNCTION_41	CALL_4
0xd1ff	          0x8b4590	             mov eax, dword [rbp - 0x70]	      6655	screen.c	FUNCTION_41	CALL_4
0xd202	            0x4898	                                    cdqe	      6655	screen.c	FUNCTION_41	CALL_4
0xd204	    0x488d14c50000	                        lea rdx, [rax*8]	      6655	screen.c	FUNCTION_41	CALL_4
0xd20c	        0x488b4588	             mov rax, qword [rbp - 0x78]	      6655	screen.c	FUNCTION_41	CALL_4
0xd210	          0x4801d0	                            add rax, rdx	      6655	screen.c	FUNCTION_41	CALL_4
0xd213	          0x488b00	                    mov rax, qword [rax]	      6655	screen.c	FUNCTION_41	CALL_4
0xd216	          0x4889c7	                            mov rdi, rax	      6655	screen.c	FUNCTION_41	CALL_4
0xd219	      0xe800000000	                          call 0x400d25e	      6655	screen.c	FUNCTION_41	CALL_4
0xd21e	            0xeb17	                           jmp 0x400d277	      6655	screen.c	FUNCTION_41	CALL_4
0xd220	          0x8b4590	             mov eax, dword [rbp - 0x70]	      6655	screen.c	FUNCTION_41	CALL_4
0xd223	            0x4898	                                    cdqe	      6655	screen.c	FUNCTION_41	CALL_4
0xd225	    0x488d14c50000	                        lea rdx, [rax*8]	      6655	screen.c	FUNCTION_41	CALL_4
0xd22d	        0x488b4588	             mov rax, qword [rbp - 0x78]	      6655	screen.c	FUNCTION_41	CALL_4
0xd231	          0x4801d0	                            add rax, rdx	      6655	screen.c	FUNCTION_41	CALL_4
0xd234	          0x488b00	                    mov rax, qword [rax]	      6655	screen.c	FUNCTION_41	CALL_4
0xd237	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      6655	screen.c	FUNCTION_41	CALL_4
0xd23b	          0x4889c6	                            mov rsi, rax	      6655	screen.c	FUNCTION_41	CALL_4
0xd23e	          0x4889d7	                            mov rdi, rdx	      6655	screen.c	FUNCTION_41	CALL_4
0xd241	      0xe892fdffff	               call sym.status_match_len	      6655	screen.c	FUNCTION_41	CALL_4
0xd246	          0x83c003	                              add eax, 3	      6655	screen.c	FUNCTION_41	CALL_4
0xd249	          0x8945b8	             mov dword [rbp - 0x48], eax	      6655	screen.c	FUNCTION_41	CALL_4
0xd24c	        0x837d9000	               cmp dword [rbp - 0x70], 0	      6656	screen.c	FUNCTION_41	IF_5
0xd250	            0x750f	                           jne 0x400d2a1	      6656	screen.c	FUNCTION_41	IF_5
0xd252	    0xc70500000000	               mov dword [0x0400d29c], 0	      6657	screen.c	FUNCTION_41	IF_5
0xd25c	      0xe949010000	                           jmp 0x400d3ea	      6657	screen.c	FUNCTION_41	IF_5
0xd261	    0x8b0500000000	            mov eax, dword [0x0400d2a7] 	      6658	screen.c	FUNCTION_41	ELSE_2	IF_6
0xd267	          0x394590	            cmp dword [rbp - 0x70], eax 	      6658	screen.c	FUNCTION_41	ELSE_2	IF_6
0xd26a	            0x7d15	                           jge 0x400d2c1	      6658	screen.c	FUNCTION_41	ELSE_2	IF_6
0xd26c	          0x8b4590	             mov eax, dword [rbp - 0x70]	      6661	screen.c	FUNCTION_41	ELSE_2	IF_6
0xd26f	    0x890500000000	            mov dword [0x0400d2b5], eax 	      6661	screen.c	FUNCTION_41	ELSE_2	IF_6
0xd275	    0xc745c8010000	               mov dword [rbp - 0x38], 1	      6662	screen.c	FUNCTION_41	ELSE_2	IF_6
0xd27c	      0xe929010000	                           jmp 0x400d3ea	      6662	screen.c	FUNCTION_41	ELSE_2	IF_6
0xd281	    0x8b0500000000	            mov eax, dword [0x0400d2c7] 	      6667	screen.c	FUNCTION_41	ELSE_3	FOR_1
0xd287	          0x8945bc	             mov dword [rbp - 0x44], eax	      6667	screen.c	FUNCTION_41	ELSE_3	FOR_1
0xd28a	            0xeb57	                           jmp 0x400d323	      6667	screen.c	FUNCTION_41	ELSE_3	FOR_1
0xd28c	        0x837d8400	               cmp dword [rbp - 0x7c], 0	      6668	screen.c	FUNCTION_41	ELSE_3	CALL_6
0xd290	            0x7421	                            je 0x400d2f3	      6668	screen.c	FUNCTION_41	ELSE_3	CALL_6
0xd292	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6668	screen.c	FUNCTION_41	ELSE_3	CALL_6
0xd295	            0x4898	                                    cdqe	      6668	screen.c	FUNCTION_41	ELSE_3	CALL_6
0xd297	    0x488d14c50000	                        lea rdx, [rax*8]	      6668	screen.c	FUNCTION_41	ELSE_3	CALL_6
0xd29f	        0x488b4588	             mov rax, qword [rbp - 0x78]	      6668	screen.c	FUNCTION_41	ELSE_3	CALL_6
0xd2a3	          0x4801d0	                            add rax, rdx	      6668	screen.c	FUNCTION_41	ELSE_3	CALL_6
0xd2a6	          0x488b00	                    mov rax, qword [rax]	      6668	screen.c	FUNCTION_41	ELSE_3	CALL_6
0xd2a9	          0x4889c7	                            mov rdi, rax	      6668	screen.c	FUNCTION_41	ELSE_3	CALL_6
0xd2ac	      0xe800000000	                          call 0x400d2f1	      6668	screen.c	FUNCTION_41	ELSE_3	CALL_6
0xd2b1	            0xeb17	                           jmp 0x400d30a	      6668	screen.c	FUNCTION_41	ELSE_3	CALL_6
0xd2b3	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6668	screen.c	FUNCTION_41	ELSE_3	CALL_6
0xd2b6	            0x4898	                                    cdqe	      6668	screen.c	FUNCTION_41	ELSE_3	CALL_6
0xd2b8	    0x488d14c50000	                        lea rdx, [rax*8]	      6668	screen.c	FUNCTION_41	ELSE_3	CALL_6
0xd2c0	        0x488b4588	             mov rax, qword [rbp - 0x78]	      6668	screen.c	FUNCTION_41	ELSE_3	CALL_6
0xd2c4	          0x4801d0	                            add rax, rdx	      6668	screen.c	FUNCTION_41	ELSE_3	CALL_6
0xd2c7	          0x488b00	                    mov rax, qword [rax]	      6668	screen.c	FUNCTION_41	ELSE_3	CALL_6
0xd2ca	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      6668	screen.c	FUNCTION_41	ELSE_3	CALL_6
0xd2ce	          0x4889c6	                            mov rsi, rax	      6668	screen.c	FUNCTION_41	ELSE_3	CALL_6
0xd2d1	          0x4889d7	                            mov rdi, rdx	      6668	screen.c	FUNCTION_41	ELSE_3	CALL_6
0xd2d4	      0xe8fffcffff	               call sym.status_match_len	      6668	screen.c	FUNCTION_41	ELSE_3	CALL_6
0xd2d9	          0x83c002	                              add eax, 2	      6668	screen.c	FUNCTION_41	ELSE_3	CALL_6
0xd2dc	           0x145b8	             add dword [rbp - 0x48], eax	      6668	screen.c	FUNCTION_41	ELSE_3	CALL_6
0xd2df	        0x8345bc01	               add dword [rbp - 0x44], 1	      6667	screen.c	FUNCTION_41	ELSE_3	FOR_1
0xd2e3	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6667	screen.c	FUNCTION_41	ELSE_3	FOR_1
0xd2e6	          0x3b4590	             cmp eax, dword [rbp - 0x70]	      6667	screen.c	FUNCTION_41	ELSE_3	FOR_1
0xd2e9	            0x7ca1	                            jl 0x400d2cc	      6667	screen.c	FUNCTION_41	ELSE_3	FOR_1
0xd2eb	    0x8b0500000000	            mov eax, dword [0x0400d331] 	      6669	screen.c	FUNCTION_41	ELSE_3	IF_7
0xd2f1	            0x85c0	                           test eax, eax	      6669	screen.c	FUNCTION_41	ELSE_3	IF_7
0xd2f3	            0x7e04	                           jle 0x400d339	      6669	screen.c	FUNCTION_41	ELSE_3	IF_7
0xd2f5	        0x8345b802	               add dword [rbp - 0x48], 2	      6670	screen.c	FUNCTION_41	ELSE_3	IF_7
0xd2f9	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      6672	screen.c	FUNCTION_41	ELSE_3	IF_8
0xd2fc	          0x4863d0	                         movsxd rdx, eax	      6672	screen.c	FUNCTION_41	ELSE_3	IF_8
0xd2ff	    0x488b05000000	            mov rax, qword [0x0400d346] 	      6672	screen.c	FUNCTION_41	ELSE_3	IF_8
0xd306	          0x4839c2	                            cmp rdx, rax	      6672	screen.c	FUNCTION_41	ELSE_3	IF_8
0xd309	     0xf8e9b000000	                           jle 0x400d3ea	      6672	screen.c	FUNCTION_41	ELSE_3	IF_8
0xd30f	          0x8b4590	             mov eax, dword [rbp - 0x70]	      6674	screen.c	FUNCTION_41	ELSE_3	IF_8
0xd312	    0x890500000000	            mov dword [0x0400d358], eax 	      6674	screen.c	FUNCTION_41	ELSE_3	IF_8
0xd318	    0xc745b8020000	               mov dword [rbp - 0x48], 2	      6676	screen.c	FUNCTION_41	ELSE_3	IF_8
0xd31f	          0x8b4590	             mov eax, dword [rbp - 0x70]	      6677	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2
0xd322	          0x8945bc	             mov dword [rbp - 0x44], eax	      6677	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2
0xd325	            0xeb69	                           jmp 0x400d3d0	      6677	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2
0xd327	        0x837d8400	               cmp dword [rbp - 0x7c], 0	      6679	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	CALL_8
0xd32b	            0x7421	                            je 0x400d38e	      6679	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	CALL_8
0xd32d	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6679	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	CALL_8
0xd330	            0x4898	                                    cdqe	      6679	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	CALL_8
0xd332	    0x488d14c50000	                        lea rdx, [rax*8]	      6679	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	CALL_8
0xd33a	        0x488b4588	             mov rax, qword [rbp - 0x78]	      6679	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	CALL_8
0xd33e	          0x4801d0	                            add rax, rdx	      6679	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	CALL_8
0xd341	          0x488b00	                    mov rax, qword [rax]	      6679	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	CALL_8
0xd344	          0x4889c7	                            mov rdi, rax	      6679	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	CALL_8
0xd347	      0xe800000000	                          call 0x400d38c	      6679	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	CALL_8
0xd34c	            0xeb17	                           jmp 0x400d3a5	      6679	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	CALL_8
0xd34e	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6679	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	CALL_8
0xd351	            0x4898	                                    cdqe	      6679	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	CALL_8
0xd353	    0x488d14c50000	                        lea rdx, [rax*8]	      6679	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	CALL_8
0xd35b	        0x488b4588	             mov rax, qword [rbp - 0x78]	      6679	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	CALL_8
0xd35f	          0x4801d0	                            add rax, rdx	      6679	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	CALL_8
0xd362	          0x488b00	                    mov rax, qword [rax]	      6679	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	CALL_8
0xd365	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      6679	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	CALL_8
0xd369	          0x4889c6	                            mov rsi, rax	      6679	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	CALL_8
0xd36c	          0x4889d7	                            mov rdi, rdx	      6679	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	CALL_8
0xd36f	      0xe864fcffff	               call sym.status_match_len	      6679	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	CALL_8
0xd374	          0x83c002	                              add eax, 2	      6679	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	CALL_8
0xd377	           0x145b8	             add dword [rbp - 0x48], eax	      6679	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	CALL_8
0xd37a	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      6680	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	IF_9
0xd37d	          0x4863d0	                         movsxd rdx, eax	      6680	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	IF_9
0xd380	    0x488b05000000	            mov rax, qword [0x0400d3c7] 	      6680	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	IF_9
0xd387	          0x4839c2	                            cmp rdx, rax	      6680	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	IF_9
0xd38a	            0x7d0e	                           jge 0x400d3da	      6680	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	IF_9
0xd38c	        0x8345bc01	               add dword [rbp - 0x44], 1	      6677	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2
0xd390	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6677	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2
0xd393	          0x3b4594	             cmp eax, dword [rbp - 0x6c]	      6677	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2
0xd396	            0x7c8f	                            jl 0x400d367	      6677	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2
0xd398	            0xeb01	                           jmp 0x400d3db	      6677	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2
0xd39a	              0x90	                                     nop	      6681	screen.c	FUNCTION_41	ELSE_3	IF_8	FOR_2	IF_9
0xd39b	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6683	screen.c	FUNCTION_41	ELSE_3	IF_8	IF_10
0xd39e	          0x3b4594	             cmp eax, dword [rbp - 0x6c]	      6683	screen.c	FUNCTION_41	ELSE_3	IF_8	IF_10
0xd3a1	            0x7507	                           jne 0x400d3ea	      6683	screen.c	FUNCTION_41	ELSE_3	IF_8	IF_10
0xd3a3	    0xc745c8010000	               mov dword [rbp - 0x38], 1	      6684	screen.c	FUNCTION_41	ELSE_3	IF_8	IF_10
0xd3aa	        0x837dc800	               cmp dword [rbp - 0x38], 0	      6687	screen.c	FUNCTION_41	IF_11
0xd3ae	     0xf848d000000	                            je 0x400d481	      6687	screen.c	FUNCTION_41	IF_11
0xd3b4	            0xeb7a	                           jmp 0x400d470	      6688	screen.c	FUNCTION_41	IF_11	WHILE_1
0xd3b6	        0x837d8400	               cmp dword [rbp - 0x7c], 0	      6690	screen.c	FUNCTION_41	IF_11	WHILE_1	CALL_10
0xd3ba	            0x7424	                            je 0x400d420	      6690	screen.c	FUNCTION_41	IF_11	WHILE_1	CALL_10
0xd3bc	    0x8b0500000000	            mov eax, dword [0x0400d402] 	      6690	screen.c	FUNCTION_41	IF_11	WHILE_1	CALL_10
0xd3c2	            0x4898	                                    cdqe	      6690	screen.c	FUNCTION_41	IF_11	WHILE_1	CALL_10
0xd3c4	        0x48c1e003	                              shl rax, 3	      6690	screen.c	FUNCTION_41	IF_11	WHILE_1	CALL_10
0xd3c8	        0x488d50f8	                      lea rdx, [rax - 8]	      6690	screen.c	FUNCTION_41	IF_11	WHILE_1	CALL_10
0xd3cc	        0x488b4588	             mov rax, qword [rbp - 0x78]	      6690	screen.c	FUNCTION_41	IF_11	WHILE_1	CALL_10
0xd3d0	          0x4801d0	                            add rax, rdx	      6690	screen.c	FUNCTION_41	IF_11	WHILE_1	CALL_10
0xd3d3	          0x488b00	                    mov rax, qword [rax]	      6690	screen.c	FUNCTION_41	IF_11	WHILE_1	CALL_10
0xd3d6	          0x4889c7	                            mov rdi, rax	      6690	screen.c	FUNCTION_41	IF_11	WHILE_1	CALL_10
0xd3d9	      0xe800000000	                          call 0x400d41e	      6690	screen.c	FUNCTION_41	IF_11	WHILE_1	CALL_10
0xd3de	            0xeb1a	                           jmp 0x400d43a	      6690	screen.c	FUNCTION_41	IF_11	WHILE_1	CALL_10
0xd3e0	    0x8b0500000000	            mov eax, dword [0x0400d426] 	      6690	screen.c	FUNCTION_41	IF_11	WHILE_1	CALL_10
0xd3e6	            0x4898	                                    cdqe	      6690	screen.c	FUNCTION_41	IF_11	WHILE_1	CALL_10
0xd3e8	        0x48c1e003	                              shl rax, 3	      6690	screen.c	FUNCTION_41	IF_11	WHILE_1	CALL_10
0xd3ec	        0x488d50f8	                      lea rdx, [rax - 8]	      6690	screen.c	FUNCTION_41	IF_11	WHILE_1	CALL_10
0xd3f0	        0x488b4588	             mov rax, qword [rbp - 0x78]	      6690	screen.c	FUNCTION_41	IF_11	WHILE_1	CALL_10
0xd3f4	          0x4801d0	                            add rax, rdx	      6690	screen.c	FUNCTION_41	IF_11	WHILE_1	CALL_10
0xd3f7	          0x488b00	                    mov rax, qword [rax]	      6690	screen.c	FUNCTION_41	IF_11	WHILE_1	CALL_10
0xd3fa	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      6690	screen.c	FUNCTION_41	IF_11	WHILE_1	CALL_10
0xd3fe	          0x4889c6	                            mov rsi, rax	      6690	screen.c	FUNCTION_41	IF_11	WHILE_1	CALL_10
0xd401	          0x4889d7	                            mov rdi, rdx	      6690	screen.c	FUNCTION_41	IF_11	WHILE_1	CALL_10
0xd404	      0xe8cffbffff	               call sym.status_match_len	      6690	screen.c	FUNCTION_41	IF_11	WHILE_1	CALL_10
0xd409	          0x83c002	                              add eax, 2	      6690	screen.c	FUNCTION_41	IF_11	WHILE_1	CALL_10
0xd40c	           0x145b8	             add dword [rbp - 0x48], eax	      6690	screen.c	FUNCTION_41	IF_11	WHILE_1	CALL_10
0xd40f	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      6691	screen.c	FUNCTION_41	IF_11	WHILE_1	IF_12
0xd412	          0x4863d0	                         movsxd rdx, eax	      6691	screen.c	FUNCTION_41	IF_11	WHILE_1	IF_12
0xd415	    0x488b05000000	            mov rax, qword [0x0400d45c] 	      6691	screen.c	FUNCTION_41	IF_11	WHILE_1	IF_12
0xd41c	          0x4839c2	                            cmp rdx, rax	      6691	screen.c	FUNCTION_41	IF_11	WHILE_1	IF_12
0xd41f	            0x7d1f	                           jge 0x400d480	      6691	screen.c	FUNCTION_41	IF_11	WHILE_1	IF_12
0xd421	    0x8b0500000000	            mov eax, dword [0x0400d467] 	      6693	screen.c	FUNCTION_41	IF_11	WHILE_1
0xd427	          0x83e801	                              sub eax, 1	      6693	screen.c	FUNCTION_41	IF_11	WHILE_1
0xd42a	    0x890500000000	            mov dword [0x0400d470], eax 	      6693	screen.c	FUNCTION_41	IF_11	WHILE_1
0xd430	    0x8b0500000000	            mov eax, dword [0x0400d476] 	      6688	screen.c	FUNCTION_41	IF_11	WHILE_1
0xd436	            0x85c0	                           test eax, eax	      6688	screen.c	FUNCTION_41	IF_11	WHILE_1
0xd438	     0xf8f78ffffff	                            jg 0x400d3f6	      6688	screen.c	FUNCTION_41	IF_11	WHILE_1
0xd43e	            0xeb01	                           jmp 0x400d481	      6688	screen.c	FUNCTION_41	IF_11	WHILE_1
0xd440	              0x90	                                     nop	      6692	screen.c	FUNCTION_41	IF_11	WHILE_1	IF_12
0xd441	    0x488b15000000	            mov rdx, qword [0x0400d488] 	      6696	screen.c	FUNCTION_41	CALL_11
0xd448	        0x488d45ac	                   lea rax, [rbp - 0x54]	      6696	screen.c	FUNCTION_41	CALL_11
0xd44c	          0x4889d6	                            mov rsi, rdx	      6696	screen.c	FUNCTION_41	CALL_11
0xd44f	          0x4889c7	                            mov rdi, rax	      6696	screen.c	FUNCTION_41	CALL_11
0xd452	      0xe85a770000	                call sym.fillchar_status	      6696	screen.c	FUNCTION_41	CALL_11
0xd457	          0x8945cc	             mov dword [rbp - 0x34], eax	      6696	screen.c	FUNCTION_41	CALL_11
0xd45a	    0x8b0500000000	            mov eax, dword [0x0400d4a0] 	      6698	screen.c	FUNCTION_41	IF_13
0xd460	            0x85c0	                           test eax, eax	      6698	screen.c	FUNCTION_41	IF_13
0xd462	            0x7510	                           jne 0x400d4b4	      6698	screen.c	FUNCTION_41	IF_13
0xd464	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6700	screen.c	FUNCTION_41	IF_13
0xd468	          0xc60000	                       mov byte [rax], 0	      6700	screen.c	FUNCTION_41	IF_13
0xd46b	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	      6701	screen.c	FUNCTION_41	IF_13
0xd472	            0xeb14	                           jmp 0x400d4c8	      6701	screen.c	FUNCTION_41	IF_13
0xd474	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6705	screen.c	FUNCTION_41	ELSE_4	CALL_12
0xd478	      0x66c7003c20	                  mov word [rax], 0x203c	      6705	screen.c	FUNCTION_41	ELSE_4	CALL_12
0xd47d	        0xc6400200	                   mov byte [rax + 2], 0	      6705	screen.c	FUNCTION_41	ELSE_4	CALL_12
0xd481	    0xc745b4020000	               mov dword [rbp - 0x4c], 2	      6706	screen.c	FUNCTION_41	ELSE_4
0xd488	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      6708	screen.c	FUNCTION_41
0xd48b	          0x8945b8	             mov dword [rbp - 0x48], eax	      6708	screen.c	FUNCTION_41
0xd48e	    0x8b0500000000	            mov eax, dword [0x0400d4d4] 	      6710	screen.c	FUNCTION_41
0xd494	          0x8945bc	             mov dword [rbp - 0x44], eax	      6710	screen.c	FUNCTION_41
0xd497	      0xe921020000	                           jmp 0x400d6fd	      6711	screen.c	FUNCTION_41	WHILE_2	CALL_14
0xd49c	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6713	screen.c	FUNCTION_41	WHILE_2	IF_14
0xd49f	          0x3b4590	             cmp eax, dword [rbp - 0x70]	      6713	screen.c	FUNCTION_41	WHILE_2	IF_14
0xd4a2	            0x7517	                           jne 0x400d4fb	      6713	screen.c	FUNCTION_41	WHILE_2	IF_14
0xd4a4	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      6715	screen.c	FUNCTION_41	WHILE_2	IF_14
0xd4a7	          0x4863d0	                         movsxd rdx, eax	      6715	screen.c	FUNCTION_41	WHILE_2	IF_14
0xd4aa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6715	screen.c	FUNCTION_41	WHILE_2	IF_14
0xd4ae	          0x4801d0	                            add rax, rdx	      6715	screen.c	FUNCTION_41	WHILE_2	IF_14
0xd4b1	        0x488945e0	             mov qword [rbp - 0x20], rax	      6715	screen.c	FUNCTION_41	WHILE_2	IF_14
0xd4b5	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      6716	screen.c	FUNCTION_41	WHILE_2	IF_14
0xd4b8	          0x8945c4	             mov dword [rbp - 0x3c], eax	      6716	screen.c	FUNCTION_41	WHILE_2	IF_14
0xd4bb	        0x837d8400	               cmp dword [rbp - 0x7c], 0	      6719	screen.c	FUNCTION_41	WHILE_2	CALL_15
0xd4bf	            0x7421	                            je 0x400d522	      6719	screen.c	FUNCTION_41	WHILE_2	CALL_15
0xd4c1	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6719	screen.c	FUNCTION_41	WHILE_2	CALL_15
0xd4c4	            0x4898	                                    cdqe	      6719	screen.c	FUNCTION_41	WHILE_2	CALL_15
0xd4c6	    0x488d14c50000	                        lea rdx, [rax*8]	      6719	screen.c	FUNCTION_41	WHILE_2	CALL_15
0xd4ce	        0x488b4588	             mov rax, qword [rbp - 0x78]	      6719	screen.c	FUNCTION_41	WHILE_2	CALL_15
0xd4d2	          0x4801d0	                            add rax, rdx	      6719	screen.c	FUNCTION_41	WHILE_2	CALL_15
0xd4d5	          0x488b00	                    mov rax, qword [rax]	      6719	screen.c	FUNCTION_41	WHILE_2	CALL_15
0xd4d8	          0x4889c7	                            mov rdi, rax	      6719	screen.c	FUNCTION_41	WHILE_2	CALL_15
0xd4db	      0xe800000000	                          call 0x400d520	      6719	screen.c	FUNCTION_41	WHILE_2	CALL_15
0xd4e0	            0xeb17	                           jmp 0x400d539	      6719	screen.c	FUNCTION_41	WHILE_2	CALL_15
0xd4e2	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6719	screen.c	FUNCTION_41	WHILE_2	CALL_15
0xd4e5	            0x4898	                                    cdqe	      6719	screen.c	FUNCTION_41	WHILE_2	CALL_15
0xd4e7	    0x488d14c50000	                        lea rdx, [rax*8]	      6719	screen.c	FUNCTION_41	WHILE_2	CALL_15
0xd4ef	        0x488b4588	             mov rax, qword [rbp - 0x78]	      6719	screen.c	FUNCTION_41	WHILE_2	CALL_15
0xd4f3	          0x4801d0	                            add rax, rdx	      6719	screen.c	FUNCTION_41	WHILE_2	CALL_15
0xd4f6	          0x488b00	                    mov rax, qword [rax]	      6719	screen.c	FUNCTION_41	WHILE_2	CALL_15
0xd4f9	        0x488945f0	             mov qword [rbp - 0x10], rax	      6719	screen.c	FUNCTION_41	WHILE_2	CALL_15
0xd4fd	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6722	screen.c	FUNCTION_41	WHILE_2
0xd501	            0x8b00	                    mov eax, dword [rax]	      6722	screen.c	FUNCTION_41	WHILE_2
0xd503	          0x83f80b	                            cmp eax, 0xb	      6723	screen.c	FUNCTION_41	WHILE_2
0xd506	            0x740b	                            je 0x400d553	      6723	screen.c	FUNCTION_41	WHILE_2
0xd508	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6723	screen.c	FUNCTION_41	WHILE_2
0xd50c	            0x8b00	                    mov eax, dword [rax]	      6723	screen.c	FUNCTION_41	WHILE_2
0xd50e	          0x83f815	                           cmp eax, 0x15	      6723	screen.c	FUNCTION_41	WHILE_2
0xd511	            0x7507	                           jne 0x400d55a	      6723	screen.c	FUNCTION_41	WHILE_2
0xd513	      0xb801000000	                              mov eax, 1	      6723	screen.c	FUNCTION_41	WHILE_2
0xd518	            0xeb05	                           jmp 0x400d55f	      6723	screen.c	FUNCTION_41	WHILE_2
0xd51a	      0xb800000000	                              mov eax, 0	      6723	screen.c	FUNCTION_41	WHILE_2
0xd51f	          0x8945d0	             mov dword [rbp - 0x30], eax	      6722	screen.c	FUNCTION_41	WHILE_2
0xd522	        0x837dd000	               cmp dword [rbp - 0x30], 0	      6724	screen.c	FUNCTION_41	WHILE_2	IF_15	CALL_16
0xd526	     0xf842d010000	                            je 0x400d699	      6724	screen.c	FUNCTION_41	WHILE_2	IF_15	CALL_16
0xd52c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6724	screen.c	FUNCTION_41	WHILE_2	IF_15	CALL_16
0xd530	          0x4889c7	                            mov rdi, rax	      6724	screen.c	FUNCTION_41	WHILE_2	IF_15	CALL_16
0xd533	      0xe800000000	                          call 0x400d578	      6724	screen.c	FUNCTION_41	WHILE_2	IF_15	CALL_16
0xd538	            0x85c0	                           test eax, eax	      6724	screen.c	FUNCTION_41	WHILE_2	IF_15	CALL_16
0xd53a	     0xf8419010000	                            je 0x400d699	      6724	screen.c	FUNCTION_41	WHILE_2	IF_15	CALL_16
0xd540	      0xbf7c000000	                           mov edi, 0x7c	      6726	screen.c	FUNCTION_41	WHILE_2	IF_15	CALL_18
0xd545	      0xe800000000	                          call 0x400d58a	      6726	screen.c	FUNCTION_41	WHILE_2	IF_15	CALL_18
0xd54a	          0x4889c1	                            mov rcx, rax	      6726	screen.c	FUNCTION_41	WHILE_2	IF_15	CALL_18
0xd54d	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      6726	screen.c	FUNCTION_41	WHILE_2	IF_15	CALL_18
0xd550	          0x4863d0	                         movsxd rdx, eax	      6726	screen.c	FUNCTION_41	WHILE_2	IF_15	CALL_18
0xd553	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6726	screen.c	FUNCTION_41	WHILE_2	IF_15	CALL_18
0xd557	          0x4801d0	                            add rax, rdx	      6726	screen.c	FUNCTION_41	WHILE_2	IF_15	CALL_18
0xd55a	          0x4889ce	                            mov rsi, rcx	      6726	screen.c	FUNCTION_41	WHILE_2	IF_15	CALL_18
0xd55d	          0x4889c7	                            mov rdi, rax	      6726	screen.c	FUNCTION_41	WHILE_2	IF_15	CALL_18
0xd560	      0xe800000000	                          call 0x400d5a5	      6726	screen.c	FUNCTION_41	WHILE_2	IF_15	CALL_18
0xd565	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      6727	screen.c	FUNCTION_41	WHILE_2	IF_15	CALL_19
0xd568	          0x4863d0	                         movsxd rdx, eax	      6727	screen.c	FUNCTION_41	WHILE_2	IF_15	CALL_19
0xd56b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6727	screen.c	FUNCTION_41	WHILE_2	IF_15	CALL_19
0xd56f	          0x4801d0	                            add rax, rdx	      6727	screen.c	FUNCTION_41	WHILE_2	IF_15	CALL_19
0xd572	          0x4889c7	                            mov rdi, rax	      6727	screen.c	FUNCTION_41	WHILE_2	IF_15	CALL_19
0xd575	      0xe800000000	                          call 0x400d5ba	      6727	screen.c	FUNCTION_41	WHILE_2	IF_15	CALL_19
0xd57a	          0x8945d4	             mov dword [rbp - 0x2c], eax	      6727	screen.c	FUNCTION_41	WHILE_2	IF_15	CALL_19
0xd57d	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      6728	screen.c	FUNCTION_41	WHILE_2	IF_15
0xd580	           0x145b4	             add dword [rbp - 0x4c], eax	      6728	screen.c	FUNCTION_41	WHILE_2	IF_15
0xd583	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      6729	screen.c	FUNCTION_41	WHILE_2	IF_15
0xd586	           0x145b8	             add dword [rbp - 0x48], eax	      6729	screen.c	FUNCTION_41	WHILE_2	IF_15
0xd589	      0xe9da000000	                           jmp 0x400d6a8	      6729	screen.c	FUNCTION_41	WHILE_2	IF_15
0xd58e	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      6735	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	CALL_20
0xd592	        0x488b4598	             mov rax, qword [rbp - 0x68]	      6735	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	CALL_20
0xd596	          0x4889d6	                            mov rsi, rdx	      6735	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	CALL_20
0xd599	          0x4889c7	                            mov rdi, rax	      6735	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	CALL_20
0xd59c	      0xe8effaffff	         call sym.skip_status_match_char	      6735	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	CALL_20
0xd5a1	            0x4898	                                    cdqe	      6735	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	CALL_20
0xd5a3	        0x480145f0	            add qword [rbp - 0x10], rax 	      6735	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	CALL_20
0xd5a7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6736	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	CALL_21
0xd5ab	          0x4889c7	                            mov rdi, rax	      6736	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	CALL_21
0xd5ae	      0xe800000000	                          call 0x400d5f3	      6736	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	CALL_21
0xd5b3	           0x145b8	             add dword [rbp - 0x48], eax	      6736	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	CALL_21
0xd5b6	    0x8b0500000000	            mov eax, dword [0x0400d5fc] 	      6738	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	IF_16
0xd5bc	            0x85c0	                           test eax, eax	      6738	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	IF_16
0xd5be	            0x7450	                            je 0x400d650	      6738	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	IF_16
0xd5c0	    0x488b05000000	            mov rax, qword [0x0400d607] 	      6738	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	IF_16
0xd5c7	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      6738	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	IF_16
0xd5cb	          0x4889d7	                            mov rdi, rdx	      6738	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	IF_16
0xd5ce	            0xffd0	                                call rax	      6738	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	IF_16
0xd5d0	          0x8945d4	             mov dword [rbp - 0x2c], eax	      6738	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	IF_16
0xd5d3	        0x837dd401	               cmp dword [rbp - 0x2c], 1	      6738	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	IF_16
0xd5d7	            0x7e37	                           jle 0x400d650	      6738	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	IF_16
0xd5d9	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      6740	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	IF_16	CALL_22
0xd5dc	          0x4863d0	                         movsxd rdx, eax	      6740	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	IF_16	CALL_22
0xd5df	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      6740	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	IF_16	CALL_22
0xd5e2	          0x4863c8	                         movsxd rcx, eax	      6740	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	IF_16	CALL_22
0xd5e5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6740	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	IF_16	CALL_22
0xd5e9	          0x4801c1	                            add rcx, rax	      6740	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	IF_16	CALL_22
0xd5ec	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6740	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	IF_16	CALL_22
0xd5f0	          0x4889c6	                            mov rsi, rax	      6740	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	IF_16	CALL_22
0xd5f3	          0x4889cf	                            mov rdi, rcx	      6740	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	IF_16	CALL_22
0xd5f6	      0xe800000000	                          call 0x400d63b	      6740	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	IF_16	CALL_22
0xd5fb	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      6741	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	IF_16
0xd5fe	            0x4898	                                    cdqe	      6741	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	IF_16
0xd600	        0x4883e801	                              sub rax, 1	      6741	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	IF_16
0xd604	        0x480145f0	            add qword [rbp - 0x10], rax 	      6741	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	IF_16
0xd608	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      6742	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	IF_16
0xd60b	           0x145b4	             add dword [rbp - 0x4c], eax	      6742	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	IF_16
0xd60e	            0xeb44	                           jmp 0x400d694	      6742	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	IF_16
0xd610	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6747	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	ELSE_6	CALL_24
0xd614	           0xfb600	                   movzx eax, byte [rax]	      6747	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	ELSE_6	CALL_24
0xd617	           0xfb6c0	                           movzx eax, al	      6747	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	ELSE_6	CALL_24
0xd61a	            0x89c7	                            mov edi, eax	      6747	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	ELSE_6	CALL_24
0xd61c	      0xe800000000	                          call 0x400d661	      6747	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	ELSE_6	CALL_24
0xd621	          0x4889c1	                            mov rcx, rax	      6747	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	ELSE_6	CALL_24
0xd624	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      6747	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	ELSE_6	CALL_24
0xd627	          0x4863d0	                         movsxd rdx, eax	      6747	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	ELSE_6	CALL_24
0xd62a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6747	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	ELSE_6	CALL_24
0xd62e	          0x4801d0	                            add rax, rdx	      6747	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	ELSE_6	CALL_24
0xd631	          0x4889ce	                            mov rsi, rcx	      6747	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	ELSE_6	CALL_24
0xd634	          0x4889c7	                            mov rdi, rax	      6747	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	ELSE_6	CALL_24
0xd637	      0xe800000000	                          call 0x400d67c	      6747	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	ELSE_6	CALL_24
0xd63c	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      6748	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	ELSE_6	CALL_25
0xd63f	          0x4863d0	                         movsxd rdx, eax	      6748	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	ELSE_6	CALL_25
0xd642	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6748	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	ELSE_6	CALL_25
0xd646	          0x4801d0	                            add rax, rdx	      6748	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	ELSE_6	CALL_25
0xd649	          0x4889c7	                            mov rdi, rax	      6748	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	ELSE_6	CALL_25
0xd64c	      0xe800000000	                          call 0x400d691	      6748	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	ELSE_6	CALL_25
0xd651	           0x145b4	             add dword [rbp - 0x4c], eax	      6748	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3	ELSE_6	CALL_25
0xd654	      0x488345f001	               add qword [rbp - 0x10], 1	      6733	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3
0xd659	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6733	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3
0xd65d	           0xfb600	                   movzx eax, byte [rax]	      6733	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3
0xd660	            0x84c0	                             test al, al	      6733	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3
0xd662	     0xf8526ffffff	                           jne 0x400d5ce	      6733	screen.c	FUNCTION_41	WHILE_2	ELSE_5	FOR_3
0xd668	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6751	screen.c	FUNCTION_41	WHILE_2	IF_17
0xd66b	          0x3b4590	             cmp eax, dword [rbp - 0x70]	      6751	screen.c	FUNCTION_41	WHILE_2	IF_17
0xd66e	            0x7511	                           jne 0x400d6c1	      6751	screen.c	FUNCTION_41	WHILE_2	IF_17
0xd670	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      6752	screen.c	FUNCTION_41	WHILE_2	IF_17
0xd673	          0x4863d0	                         movsxd rdx, eax	      6752	screen.c	FUNCTION_41	WHILE_2	IF_17
0xd676	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6752	screen.c	FUNCTION_41	WHILE_2	IF_17
0xd67a	          0x4801d0	                            add rax, rdx	      6752	screen.c	FUNCTION_41	WHILE_2	IF_17
0xd67d	        0x488945e8	             mov qword [rbp - 0x18], rax	      6752	screen.c	FUNCTION_41	WHILE_2	IF_17
0xd681	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      6754	screen.c	FUNCTION_41	WHILE_2
0xd684	          0x8d5001	                      lea edx, [rax + 1]	      6754	screen.c	FUNCTION_41	WHILE_2
0xd687	          0x8955b4	             mov dword [rbp - 0x4c], edx	      6754	screen.c	FUNCTION_41	WHILE_2
0xd68a	          0x4863d0	                         movsxd rdx, eax	      6754	screen.c	FUNCTION_41	WHILE_2
0xd68d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6754	screen.c	FUNCTION_41	WHILE_2
0xd691	          0x4801d0	                            add rax, rdx	      6754	screen.c	FUNCTION_41	WHILE_2
0xd694	          0xc60020	                    mov byte [rax], 0x20	      6754	screen.c	FUNCTION_41	WHILE_2
0xd697	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      6755	screen.c	FUNCTION_41	WHILE_2
0xd69a	          0x8d5001	                      lea edx, [rax + 1]	      6755	screen.c	FUNCTION_41	WHILE_2
0xd69d	          0x8955b4	             mov dword [rbp - 0x4c], edx	      6755	screen.c	FUNCTION_41	WHILE_2
0xd6a0	          0x4863d0	                         movsxd rdx, eax	      6755	screen.c	FUNCTION_41	WHILE_2
0xd6a3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6755	screen.c	FUNCTION_41	WHILE_2
0xd6a7	          0x4801d0	                            add rax, rdx	      6755	screen.c	FUNCTION_41	WHILE_2
0xd6aa	          0xc60020	                    mov byte [rax], 0x20	      6755	screen.c	FUNCTION_41	WHILE_2
0xd6ad	        0x8345b802	               add dword [rbp - 0x48], 2	      6756	screen.c	FUNCTION_41	WHILE_2
0xd6b1	        0x8345bc01	               add dword [rbp - 0x44], 1	      6757	screen.c	FUNCTION_41	WHILE_2	IF_18
0xd6b5	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6757	screen.c	FUNCTION_41	WHILE_2	IF_18
0xd6b8	          0x3b4594	             cmp eax, dword [rbp - 0x6c]	      6757	screen.c	FUNCTION_41	WHILE_2	IF_18
0xd6bb	            0x746c	                            je 0x400d769	      6757	screen.c	FUNCTION_41	WHILE_2	IF_18
0xd6bd	        0x837d8400	               cmp dword [rbp - 0x7c], 0	      6711	screen.c	FUNCTION_41	WHILE_2	CALL_14
0xd6c1	            0x7421	                            je 0x400d724	      6711	screen.c	FUNCTION_41	WHILE_2	CALL_14
0xd6c3	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6711	screen.c	FUNCTION_41	WHILE_2	CALL_14
0xd6c6	            0x4898	                                    cdqe	      6711	screen.c	FUNCTION_41	WHILE_2	CALL_14
0xd6c8	    0x488d14c50000	                        lea rdx, [rax*8]	      6711	screen.c	FUNCTION_41	WHILE_2	CALL_14
0xd6d0	        0x488b4588	             mov rax, qword [rbp - 0x78]	      6711	screen.c	FUNCTION_41	WHILE_2	CALL_14
0xd6d4	          0x4801d0	                            add rax, rdx	      6711	screen.c	FUNCTION_41	WHILE_2	CALL_14
0xd6d7	          0x488b00	                    mov rax, qword [rax]	      6711	screen.c	FUNCTION_41	WHILE_2	CALL_14
0xd6da	          0x4889c7	                            mov rdi, rax	      6711	screen.c	FUNCTION_41	WHILE_2	CALL_14
0xd6dd	      0xe800000000	                          call 0x400d722	      6711	screen.c	FUNCTION_41	WHILE_2	CALL_14
0xd6e2	            0xeb17	                           jmp 0x400d73b	      6711	screen.c	FUNCTION_41	WHILE_2	CALL_14
0xd6e4	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6711	screen.c	FUNCTION_41	WHILE_2	CALL_14
0xd6e7	            0x4898	                                    cdqe	      6711	screen.c	FUNCTION_41	WHILE_2	CALL_14
0xd6e9	    0x488d14c50000	                        lea rdx, [rax*8]	      6711	screen.c	FUNCTION_41	WHILE_2	CALL_14
0xd6f1	        0x488b4588	             mov rax, qword [rbp - 0x78]	      6711	screen.c	FUNCTION_41	WHILE_2	CALL_14
0xd6f5	          0x4801d0	                            add rax, rdx	      6711	screen.c	FUNCTION_41	WHILE_2	CALL_14
0xd6f8	          0x488b00	                    mov rax, qword [rax]	      6711	screen.c	FUNCTION_41	WHILE_2	CALL_14
0xd6fb	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      6711	screen.c	FUNCTION_41	WHILE_2	CALL_14
0xd6ff	          0x4889c6	                            mov rsi, rax	      6711	screen.c	FUNCTION_41	WHILE_2	CALL_14
0xd702	          0x4889d7	                            mov rdi, rdx	      6711	screen.c	FUNCTION_41	WHILE_2	CALL_14
0xd705	      0xe8cef8ffff	               call sym.status_match_len	      6711	screen.c	FUNCTION_41	WHILE_2	CALL_14
0xd70a	            0x89c2	                            mov edx, eax	      6711	screen.c	FUNCTION_41	WHILE_2	CALL_14
0xd70c	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      6711	screen.c	FUNCTION_41	WHILE_2	CALL_14
0xd70f	             0x1d0	                            add eax, edx	      6711	screen.c	FUNCTION_41	WHILE_2	CALL_14
0xd711	          0x83c002	                              add eax, 2	      6711	screen.c	FUNCTION_41	WHILE_2	CALL_14
0xd714	          0x4863d0	                         movsxd rdx, eax	      6711	screen.c	FUNCTION_41	WHILE_2	CALL_14
0xd717	    0x488b05000000	            mov rax, qword [0x0400d75e] 	      6711	screen.c	FUNCTION_41	WHILE_2	CALL_14
0xd71e	          0x4839c2	                            cmp rdx, rax	      6711	screen.c	FUNCTION_41	WHILE_2	CALL_14
0xd721	     0xf8c75fdffff	                            jl 0x400d4dc	      6711	screen.c	FUNCTION_41	WHILE_2	CALL_14
0xd727	            0xeb01	                           jmp 0x400d76a	      6711	screen.c	FUNCTION_41	WHILE_2	CALL_14
0xd729	              0x90	                                     nop	      6758	screen.c	FUNCTION_41	WHILE_2	IF_18
0xd72a	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6761	screen.c	FUNCTION_41	IF_19
0xd72d	          0x3b4594	             cmp eax, dword [rbp - 0x6c]	      6761	screen.c	FUNCTION_41	IF_19
0xd730	            0x741a	                            je 0x400d78c	      6761	screen.c	FUNCTION_41	IF_19
0xd732	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      6763	screen.c	FUNCTION_41	IF_19
0xd735	          0x8d5001	                      lea edx, [rax + 1]	      6763	screen.c	FUNCTION_41	IF_19
0xd738	          0x8955b4	             mov dword [rbp - 0x4c], edx	      6763	screen.c	FUNCTION_41	IF_19
0xd73b	          0x4863d0	                         movsxd rdx, eax	      6763	screen.c	FUNCTION_41	IF_19
0xd73e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6763	screen.c	FUNCTION_41	IF_19
0xd742	          0x4801d0	                            add rax, rdx	      6763	screen.c	FUNCTION_41	IF_19
0xd745	          0xc6003e	                    mov byte [rax], 0x3e	      6763	screen.c	FUNCTION_41	IF_19
0xd748	        0x8345b801	               add dword [rbp - 0x48], 1	      6764	screen.c	FUNCTION_41	IF_19
0xd74c	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      6767	screen.c	FUNCTION_41
0xd74f	          0x4863d0	                         movsxd rdx, eax	      6767	screen.c	FUNCTION_41
0xd752	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6767	screen.c	FUNCTION_41
0xd756	          0x4801d0	                            add rax, rdx	      6767	screen.c	FUNCTION_41
0xd759	          0xc60000	                       mov byte [rax], 0	      6767	screen.c	FUNCTION_41
0xd75c	    0x8b0500000000	            mov eax, dword [0x0400d7a2] 	      6769	screen.c	FUNCTION_41
0xd762	          0x83e801	                              sub eax, 1	      6769	screen.c	FUNCTION_41
0xd765	          0x8945b0	             mov dword [rbp - 0x50], eax	      6769	screen.c	FUNCTION_41
0xd768	        0x837db000	               cmp dword [rbp - 0x50], 0	      6770	screen.c	FUNCTION_41	IF_20
0xd76c	     0xf8866010000	                            js 0x400d918	      6770	screen.c	FUNCTION_41	IF_20
0xd772	    0x8b0500000000	            mov eax, dword [0x0400d7b8] 	      6772	screen.c	FUNCTION_41	IF_20	IF_21
0xd778	            0x85c0	                           test eax, eax	      6772	screen.c	FUNCTION_41	IF_20	IF_21
0xd77a	     0xf85da000000	                           jne 0x400d89a	      6772	screen.c	FUNCTION_41	IF_20	IF_21
0xd780	    0x8b0500000000	            mov eax, dword [0x0400d7c6] 	      6774	screen.c	FUNCTION_41	IF_20	IF_21	IF_22
0xd786	            0x85c0	                           test eax, eax	      6774	screen.c	FUNCTION_41	IF_20	IF_21	IF_22
0xd788	            0x7e7b	                           jle 0x400d845	      6774	screen.c	FUNCTION_41	IF_20	IF_21	IF_22
0xd78a	    0x8b0500000000	            mov eax, dword [0x0400d7d0] 	      6778	screen.c	FUNCTION_41	IF_20	IF_21	IF_22	IF_23
0xd790	            0x4898	                                    cdqe	      6778	screen.c	FUNCTION_41	IF_20	IF_21	IF_22	IF_23
0xd792	    0x488b15000000	            mov rdx, qword [0x0400d7d9] 	      6778	screen.c	FUNCTION_41	IF_20	IF_21	IF_22	IF_23
0xd799	        0x4883ea01	                              sub rdx, 1	      6778	screen.c	FUNCTION_41	IF_20	IF_21	IF_22	IF_23
0xd79d	          0x4839d0	                            cmp rax, rdx	      6778	screen.c	FUNCTION_41	IF_20	IF_21	IF_22	IF_23
0xd7a0	            0x7544	                           jne 0x400d826	      6778	screen.c	FUNCTION_41	IF_20	IF_21	IF_22	IF_23
0xd7a2	    0x488b05000000	            mov rax, qword [0x0400d7e9] 	      6780	screen.c	FUNCTION_41	IF_20	IF_21	IF_22	IF_23	CALL_26
0xd7a9	        0x4883ec08	                              sub rsp, 8	      6780	screen.c	FUNCTION_41	IF_20	IF_21	IF_22	IF_23	CALL_26
0xd7ad	            0x6a00	                                  push 0	      6780	screen.c	FUNCTION_41	IF_20	IF_21	IF_22	IF_23	CALL_26
0xd7af	    0x41b900000000	                              mov r9d, 0	      6780	screen.c	FUNCTION_41	IF_20	IF_21	IF_22	IF_23	CALL_26
0xd7b5	    0x41b801000000	                              mov r8d, 1	      6780	screen.c	FUNCTION_41	IF_20	IF_21	IF_22	IF_23	CALL_26
0xd7bb	            0x89c1	                            mov ecx, eax	      6780	screen.c	FUNCTION_41	IF_20	IF_21	IF_22	IF_23	CALL_26
0xd7bd	      0xba01000000	                              mov edx, 1	      6780	screen.c	FUNCTION_41	IF_20	IF_21	IF_22	IF_23	CALL_26
0xd7c2	      0xbe00000000	                              mov esi, 0	      6780	screen.c	FUNCTION_41	IF_20	IF_21	IF_22	IF_23	CALL_26
0xd7c7	      0xbf00000000	                              mov edi, 0	      6780	screen.c	FUNCTION_41	IF_20	IF_21	IF_22	IF_23	CALL_26
0xd7cc	      0xe800000000	                          call 0x400d811	      6780	screen.c	FUNCTION_41	IF_20	IF_21	IF_22	IF_23	CALL_26
0xd7d1	        0x4883c410	                           add rsp, 0x10	      6780	screen.c	FUNCTION_41	IF_20	IF_21	IF_22	IF_23	CALL_26
0xd7d5	    0x8b0500000000	            mov eax, dword [0x0400d81b] 	      6781	screen.c	FUNCTION_41	IF_20	IF_21	IF_22	IF_23
0xd7db	          0x83c001	                              add eax, 1	      6781	screen.c	FUNCTION_41	IF_20	IF_21	IF_22	IF_23
0xd7de	    0x890500000000	            mov dword [0x0400d824], eax 	      6781	screen.c	FUNCTION_41	IF_20	IF_21	IF_22	IF_23
0xd7e4	            0xeb13	                           jmp 0x400d839	      6781	screen.c	FUNCTION_41	IF_20	IF_21	IF_22	IF_23
0xd7e6	    0x8b0500000000	            mov eax, dword [0x0400d82c] 	      6785	screen.c	FUNCTION_41	IF_20	IF_21	IF_22	ELSE_7
0xd7ec	          0x83c001	                              add eax, 1	      6785	screen.c	FUNCTION_41	IF_20	IF_21	IF_22	ELSE_7
0xd7ef	    0x890500000000	            mov dword [0x0400d835], eax 	      6785	screen.c	FUNCTION_41	IF_20	IF_21	IF_22	ELSE_7
0xd7f5	        0x8345b001	               add dword [rbp - 0x50], 1	      6786	screen.c	FUNCTION_41	IF_20	IF_21	IF_22	ELSE_7
0xd7f9	    0xc70500000000	               mov dword [0x0400d843], 2	      6788	screen.c	FUNCTION_41	IF_20	IF_21	IF_22
0xd803	            0xeb55	                           jmp 0x400d89a	      6788	screen.c	FUNCTION_41	IF_20	IF_21	IF_22
0xd805	    0x488b05000000	            mov rax, qword [0x0400d84c] 	      6795	screen.c	FUNCTION_41	IF_20	IF_21	ELSE_8	IF_24
0xd80c	    0x8b80a4000000	            mov eax, dword [rax + 0xa4] 	      6795	screen.c	FUNCTION_41	IF_20	IF_21	ELSE_8	IF_24
0xd812	            0x85c0	                           test eax, eax	      6795	screen.c	FUNCTION_41	IF_20	IF_21	ELSE_8	IF_24
0xd814	            0x753a	                           jne 0x400d890	      6795	screen.c	FUNCTION_41	IF_20	IF_21	ELSE_8	IF_24
0xd816	    0x488b05000000	            mov rax, qword [0x0400d85d] 	      6797	screen.c	FUNCTION_41	IF_20	IF_21	ELSE_8	IF_24
0xd81d	    0x890500000000	            mov dword [0x0400d863], eax 	      6797	screen.c	FUNCTION_41	IF_20	IF_21	ELSE_8	IF_24
0xd823	    0x488b05000000	            mov rax, qword [0x0400d86a] 	      6798	screen.c	FUNCTION_41	IF_20	IF_21	ELSE_8	IF_24
0xd82a	    0x890500000000	            mov dword [0x0400d870], eax 	      6798	screen.c	FUNCTION_41	IF_20	IF_21	ELSE_8	IF_24
0xd830	    0x48c705000000	               mov qword [0x0400d87b], 2	      6799	screen.c	FUNCTION_41	IF_20	IF_21	ELSE_8	IF_24
0xd83b	    0x48c705000000	               mov qword [0x0400d886], 0	      6800	screen.c	FUNCTION_41	IF_20	IF_21	ELSE_8	IF_24
0xd846	      0xbf00000000	                              mov edi, 0	      6801	screen.c	FUNCTION_41	IF_20	IF_21	ELSE_8	IF_24	CALL_27
0xd84b	      0xe800000000	                          call 0x400d890	      6801	screen.c	FUNCTION_41	IF_20	IF_21	ELSE_8	IF_24	CALL_27
0xd850	    0xc70500000000	               mov dword [0x0400d89a], 1	      6803	screen.c	FUNCTION_41	IF_20	IF_21	ELSE_8
0xd85a	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      6807	screen.c	FUNCTION_41	IF_20	CALL_28
0xd85d	          0x8b75b0	             mov esi, dword [rbp - 0x50]	      6807	screen.c	FUNCTION_41	IF_20	CALL_28
0xd860	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6807	screen.c	FUNCTION_41	IF_20	CALL_28
0xd864	            0x89d1	                            mov ecx, edx	      6807	screen.c	FUNCTION_41	IF_20	CALL_28
0xd866	      0xba00000000	                              mov edx, 0	      6807	screen.c	FUNCTION_41	IF_20	CALL_28
0xd86b	          0x4889c7	                            mov rdi, rax	      6807	screen.c	FUNCTION_41	IF_20	CALL_28
0xd86e	      0xe800000000	                          call 0x400d8b3	      6807	screen.c	FUNCTION_41	IF_20	CALL_28
0xd873	      0x48837de000	               cmp qword [rbp - 0x20], 0	      6808	screen.c	FUNCTION_41	IF_20	IF_25
0xd878	            0x7425	                            je 0x400d8df	      6808	screen.c	FUNCTION_41	IF_20	IF_25
0xd87a	        0x837dc000	               cmp dword [rbp - 0x40], 0	      6808	screen.c	FUNCTION_41	IF_20	IF_25
0xd87e	            0x741f	                            je 0x400d8df	      6808	screen.c	FUNCTION_41	IF_20	IF_25
0xd880	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6810	screen.c	FUNCTION_41	IF_20	IF_25
0xd884	          0xc60000	                       mov byte [rax], 0	      6810	screen.c	FUNCTION_41	IF_20	IF_25
0xd887	    0x8b0d00000000	            mov ecx, dword [0x0400d8cd] 	      6811	screen.c	FUNCTION_41	IF_20	IF_25	CALL_30
0xd88d	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      6811	screen.c	FUNCTION_41	IF_20	IF_25	CALL_30
0xd890	          0x8b75b0	             mov esi, dword [rbp - 0x50]	      6811	screen.c	FUNCTION_41	IF_20	IF_25	CALL_30
0xd893	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6811	screen.c	FUNCTION_41	IF_20	IF_25	CALL_30
0xd897	          0x4889c7	                            mov rdi, rax	      6811	screen.c	FUNCTION_41	IF_20	IF_25	CALL_30
0xd89a	      0xe800000000	                          call 0x400d8df	      6811	screen.c	FUNCTION_41	IF_20	IF_25	CALL_30
0xd89f	          0x8b4dac	             mov ecx, dword [rbp - 0x54]	      6814	screen.c	FUNCTION_41	IF_20	CALL_31
0xd8a2	    0x488b05000000	            mov rax, qword [0x0400d8e9] 	      6814	screen.c	FUNCTION_41	IF_20	CALL_31
0xd8a9	          0x4189c2	                           mov r10d, eax	      6814	screen.c	FUNCTION_41	IF_20	CALL_31
0xd8ac	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      6814	screen.c	FUNCTION_41	IF_20	CALL_31
0xd8af	          0x8d7001	                      lea esi, [rax + 1]	      6814	screen.c	FUNCTION_41	IF_20	CALL_31
0xd8b2	        0x448b45cc	             mov r8d, dword [rbp - 0x34]	      6814	screen.c	FUNCTION_41	IF_20	CALL_31
0xd8b6	          0x8b7dcc	             mov edi, dword [rbp - 0x34]	      6814	screen.c	FUNCTION_41	IF_20	CALL_31
0xd8b9	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      6814	screen.c	FUNCTION_41	IF_20	CALL_31
0xd8bc	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      6814	screen.c	FUNCTION_41	IF_20	CALL_31
0xd8bf	        0x4883ec08	                              sub rsp, 8	      6814	screen.c	FUNCTION_41	IF_20	CALL_31
0xd8c3	              0x51	                                push rcx	      6814	screen.c	FUNCTION_41	IF_20	CALL_31
0xd8c4	          0x4589c1	                            mov r9d, r8d	      6814	screen.c	FUNCTION_41	IF_20	CALL_31
0xd8c7	          0x4189f8	                            mov r8d, edi	      6814	screen.c	FUNCTION_41	IF_20	CALL_31
0xd8ca	          0x4489d1	                           mov ecx, r10d	      6814	screen.c	FUNCTION_41	IF_20	CALL_31
0xd8cd	            0x89c7	                            mov edi, eax	      6814	screen.c	FUNCTION_41	IF_20	CALL_31
0xd8cf	      0xe800000000	                          call 0x400d914	      6814	screen.c	FUNCTION_41	IF_20	CALL_31
0xd8d4	        0x4883c410	                           add rsp, 0x10	      6814	screen.c	FUNCTION_41	IF_20	CALL_31
0xd8d8	    0x488b05000000	            mov rax, qword [0x0400d91f] 	      6817	screen.c	FUNCTION_41	CALL_32
0xd8df	          0x4889c7	                            mov rdi, rax	      6817	screen.c	FUNCTION_41	CALL_32
0xd8e2	      0xe800000000	                          call 0x400d927	      6817	screen.c	FUNCTION_41	CALL_32
0xd8e7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6818	screen.c	FUNCTION_41	CALL_33
0xd8eb	          0x4889c7	                            mov rdi, rax	      6818	screen.c	FUNCTION_41	CALL_33
0xd8ee	      0xe800000000	                          call 0x400d933	      6818	screen.c	FUNCTION_41	CALL_33
0xd8f3	            0xeb04	                           jmp 0x400d939	      6818	screen.c	FUNCTION_41	CALL_33
0xd8f5	              0x90	                                     nop	      6638	screen.c	FUNCTION_41	IF_1
0xd8f6	            0xeb01	                           jmp 0x400d939	      6638	screen.c	FUNCTION_41	IF_1
0xd8f8	              0x90	                                     nop	      6647	screen.c	FUNCTION_41	IF_3
0xd8f9	        0x488b45f8	                mov rax, qword [rbp - 8]	      6819	screen.c	FUNCTION_41
0xd8fd	    0x644833042528	                xor rax, qword fs:[0x28]	      6819	screen.c	FUNCTION_41
0xd906	            0x7405	                            je 0x400d94d	      6819	screen.c	FUNCTION_41
0xd908	      0xe800000000	                          call 0x400d94d	      6819	screen.c	FUNCTION_41
0xd90d	              0xc9	                                   leave	      6819	screen.c	FUNCTION_41
0xd90e	              0xc3	                                     ret	      6819	screen.c	FUNCTION_41
redraw_asap	DO,0:functions,0:CALL,25:ELSE,0:IF,15:WHILE,0:FOR,6:SWITCH,0	409
0x1b6	              0x55	                                push rbp	       298	screen.c	FUNCTION_8
0x1b7	          0x4889e5	                            mov rbp, rsp	       298	screen.c	FUNCTION_8
0x1ba	    0x4881ec900000	                           sub rsp, 0x90	       298	screen.c	FUNCTION_8
0x1c1	    0x89bd7cffffff	             mov dword [rbp - 0x84], edi	       298	screen.c	FUNCTION_8
0x1c7	    0x64488b042528	                mov rax, qword fs:[0x28]	       298	screen.c	FUNCTION_8
0x1d0	        0x488945f8	                mov qword [rbp - 8], rax	       298	screen.c	FUNCTION_8
0x1d4	            0x31c0	                            xor eax, eax	       298	screen.c	FUNCTION_8
0x1d6	    0x8b0500000000	            mov eax, dword [0x0400021c] 	       300	screen.c	FUNCTION_8
0x1dc	          0x894594	             mov dword [rbp - 0x6c], eax	       300	screen.c	FUNCTION_8
0x1df	    0xc7458c000000	               mov dword [rbp - 0x74], 0	       302	screen.c	FUNCTION_8
0x1e6	    0x48c745a00000	               mov qword [rbp - 0x60], 0	       307	screen.c	FUNCTION_8
0x1ee	    0x48c745a80000	               mov qword [rbp - 0x58], 0	       309	screen.c	FUNCTION_8
0x1f6	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	       312	screen.c	FUNCTION_8	CALL_1
0x1fc	            0x89c7	                            mov edi, eax	       312	screen.c	FUNCTION_8	CALL_1
0x1fe	      0xe800000000	                          call 0x4000243	       312	screen.c	FUNCTION_8	CALL_1
0x203	    0x8b0500000000	            mov eax, dword [0x04000249] 	       313	screen.c	FUNCTION_8	IF_1
0x209	            0x85c0	                           test eax, eax	       313	screen.c	FUNCTION_8	IF_1
0x20b	            0x7522	                           jne 0x400026f	       313	screen.c	FUNCTION_8	IF_1
0x20d	    0x8b0500000000	            mov eax, dword [0x04000253] 	       313	screen.c	FUNCTION_8	IF_1
0x213	          0x83f801	                              cmp eax, 1	       313	screen.c	FUNCTION_8	IF_1
0x216	            0x740d	                            je 0x4000265	       313	screen.c	FUNCTION_8	IF_1
0x218	    0x8b0500000000	            mov eax, dword [0x0400025e] 	       313	screen.c	FUNCTION_8	IF_1
0x21e	      0x3d01010000	                          cmp eax, 0x101	       313	screen.c	FUNCTION_8	IF_1
0x223	            0x750a	                           jne 0x400026f	       313	screen.c	FUNCTION_8	IF_1
0x225	    0x8b0500000000	            mov eax, dword [0x0400026b] 	       313	screen.c	FUNCTION_8	IF_1
0x22b	            0x85c0	                           test eax, eax	       313	screen.c	FUNCTION_8	IF_1
0x22d	            0x7408	                            je 0x4000277	       313	screen.c	FUNCTION_8	IF_1
0x22f	          0x8b458c	             mov eax, dword [rbp - 0x74]	       314	screen.c	FUNCTION_8	IF_1
0x232	      0xe9a2050000	                           jmp 0x4000819	       314	screen.c	FUNCTION_8	IF_1
0x237	    0x8b1500000000	            mov edx, dword [0x0400027d] 	       317	screen.c	FUNCTION_8
0x23d	    0x8b0500000000	            mov eax, dword [0x04000283] 	       317	screen.c	FUNCTION_8
0x243	            0x29c2	                            sub edx, eax	       317	screen.c	FUNCTION_8
0x245	            0x89d0	                            mov eax, edx	       317	screen.c	FUNCTION_8
0x247	          0x894598	             mov dword [rbp - 0x68], eax	       317	screen.c	FUNCTION_8
0x24a	          0x8b4598	             mov eax, dword [rbp - 0x68]	       319	screen.c	FUNCTION_8
0x24d	         0xfaf4594	            imul eax, dword [rbp - 0x6c]	       319	screen.c	FUNCTION_8
0x251	            0x4898	                                    cdqe	       318	screen.c	FUNCTION_8	CALL_2
0x253	      0xbe00000000	                              mov esi, 0	       318	screen.c	FUNCTION_8	CALL_2
0x258	          0x4889c7	                            mov rdi, rax	       318	screen.c	FUNCTION_8	CALL_2
0x25b	      0xe800000000	                          call 0x40002a0	       318	screen.c	FUNCTION_8	CALL_2
0x260	        0x488945b0	             mov qword [rbp - 0x50], rax	       318	screen.c	FUNCTION_8	CALL_2
0x264	          0x8b4598	             mov eax, dword [rbp - 0x68]	       321	screen.c	FUNCTION_8
0x267	         0xfaf4594	            imul eax, dword [rbp - 0x6c]	       321	screen.c	FUNCTION_8
0x26b	            0x4898	                                    cdqe	       320	screen.c	FUNCTION_8	CALL_3
0x26d	          0x4801c0	                            add rax, rax	       320	screen.c	FUNCTION_8	CALL_3
0x270	      0xbe00000000	                              mov esi, 0	       320	screen.c	FUNCTION_8	CALL_3
0x275	          0x4889c7	                            mov rdi, rax	       320	screen.c	FUNCTION_8	CALL_3
0x278	      0xe800000000	                          call 0x40002bd	       320	screen.c	FUNCTION_8	CALL_3
0x27d	        0x488945b8	             mov qword [rbp - 0x48], rax	       320	screen.c	FUNCTION_8	CALL_3
0x281	      0x48837db000	               cmp qword [rbp - 0x50], 0	       322	screen.c	FUNCTION_8	IF_2
0x286	            0x7407	                            je 0x40002cf	       322	screen.c	FUNCTION_8	IF_2
0x288	      0x48837db800	               cmp qword [rbp - 0x48], 0	       322	screen.c	FUNCTION_8	IF_2
0x28d	            0x7507	                           jne 0x40002d6	       322	screen.c	FUNCTION_8	IF_2
0x28f	    0xc7458c020000	               mov dword [rbp - 0x74], 2	       323	screen.c	FUNCTION_8	IF_2
0x296	    0x8b0500000000	            mov eax, dword [0x040002dc] 	       325	screen.c	FUNCTION_8	IF_3
0x29c	            0x85c0	                           test eax, eax	       325	screen.c	FUNCTION_8	IF_3
0x29e	     0xf8488000000	                            je 0x400036c	       325	screen.c	FUNCTION_8	IF_3
0x2a4	          0x8b4598	             mov eax, dword [rbp - 0x68]	       328	screen.c	FUNCTION_8	IF_3
0x2a7	         0xfaf4594	            imul eax, dword [rbp - 0x6c]	       328	screen.c	FUNCTION_8	IF_3
0x2ab	            0x4898	                                    cdqe	       327	screen.c	FUNCTION_8	IF_3	CALL_4
0x2ad	        0x48c1e002	                              shl rax, 2	       327	screen.c	FUNCTION_8	IF_3	CALL_4
0x2b1	      0xbe00000000	                              mov esi, 0	       327	screen.c	FUNCTION_8	IF_3	CALL_4
0x2b6	          0x4889c7	                            mov rdi, rax	       327	screen.c	FUNCTION_8	IF_3	CALL_4
0x2b9	      0xe800000000	                          call 0x40002fe	       327	screen.c	FUNCTION_8	IF_3	CALL_4
0x2be	        0x488945a0	             mov qword [rbp - 0x60], rax	       327	screen.c	FUNCTION_8	IF_3	CALL_4
0x2c2	      0x48837da000	               cmp qword [rbp - 0x60], 0	       329	screen.c	FUNCTION_8	IF_3	IF_4
0x2c7	            0x7507	                           jne 0x4000310	       329	screen.c	FUNCTION_8	IF_3	IF_4
0x2c9	    0xc7458c020000	               mov dword [rbp - 0x74], 2	       330	screen.c	FUNCTION_8	IF_3	IF_4
0x2d0	    0xc74590000000	               mov dword [rbp - 0x70], 0	       331	screen.c	FUNCTION_8	IF_3	FOR_1
0x2d7	            0xeb41	                           jmp 0x400035a	       331	screen.c	FUNCTION_8	IF_3	FOR_1
0x2d9	          0x8b4598	             mov eax, dword [rbp - 0x68]	       334	screen.c	FUNCTION_8	IF_3	FOR_1
0x2dc	         0xfaf4594	            imul eax, dword [rbp - 0x6c]	       334	screen.c	FUNCTION_8	IF_3	FOR_1
0x2e0	            0x4898	                                    cdqe	       333	screen.c	FUNCTION_8	IF_3	FOR_1	CALL_5
0x2e2	        0x48c1e002	                              shl rax, 2	       333	screen.c	FUNCTION_8	IF_3	FOR_1	CALL_5
0x2e6	      0xbe00000000	                              mov esi, 0	       333	screen.c	FUNCTION_8	IF_3	FOR_1	CALL_5
0x2eb	          0x4889c7	                            mov rdi, rax	       333	screen.c	FUNCTION_8	IF_3	FOR_1	CALL_5
0x2ee	      0xe800000000	                          call 0x4000333	       333	screen.c	FUNCTION_8	IF_3	FOR_1	CALL_5
0x2f3	          0x4889c2	                            mov rdx, rax	       333	screen.c	FUNCTION_8	IF_3	FOR_1	CALL_5
0x2f6	          0x8b4590	             mov eax, dword [rbp - 0x70]	       333	screen.c	FUNCTION_8	IF_3	FOR_1	CALL_5
0x2f9	            0x4898	                                    cdqe	       333	screen.c	FUNCTION_8	IF_3	FOR_1	CALL_5
0x2fb	      0x488954c5c0	     mov qword [rbp + rax*8 - 0x40], rdx	       333	screen.c	FUNCTION_8	IF_3	FOR_1	CALL_5
0x300	          0x8b4590	             mov eax, dword [rbp - 0x70]	       335	screen.c	FUNCTION_8	IF_3	FOR_1	IF_5
0x303	            0x4898	                                    cdqe	       335	screen.c	FUNCTION_8	IF_3	FOR_1	IF_5
0x305	      0x488b44c5c0	     mov rax, qword [rbp + rax*8 - 0x40]	       335	screen.c	FUNCTION_8	IF_3	FOR_1	IF_5
0x30a	          0x4885c0	                           test rax, rax	       335	screen.c	FUNCTION_8	IF_3	FOR_1	IF_5
0x30d	            0x7507	                           jne 0x4000356	       335	screen.c	FUNCTION_8	IF_3	FOR_1	IF_5
0x30f	    0xc7458c020000	               mov dword [rbp - 0x74], 2	       336	screen.c	FUNCTION_8	IF_3	FOR_1	IF_5
0x316	        0x83459001	               add dword [rbp - 0x70], 1	       331	screen.c	FUNCTION_8	IF_3	FOR_1
0x31a	          0x8b4590	             mov eax, dword [rbp - 0x70]	       331	screen.c	FUNCTION_8	IF_3	FOR_1
0x31d	          0x4863d0	                         movsxd rdx, eax	       331	screen.c	FUNCTION_8	IF_3	FOR_1
0x320	    0x488b05000000	            mov rax, qword [0x04000367] 	       331	screen.c	FUNCTION_8	IF_3	FOR_1
0x327	          0x4839c2	                            cmp rdx, rax	       331	screen.c	FUNCTION_8	IF_3	FOR_1
0x32a	            0x7cad	                            jl 0x4000319	       331	screen.c	FUNCTION_8	IF_3	FOR_1
0x32c	    0x8b0500000000	            mov eax, dword [0x04000372] 	       339	screen.c	FUNCTION_8	IF_6
0x332	      0x3dcc260000	                         cmp eax, 0x26cc	       339	screen.c	FUNCTION_8	IF_6
0x337	            0x7528	                           jne 0x40003a1	       339	screen.c	FUNCTION_8	IF_6
0x339	          0x8b4598	             mov eax, dword [rbp - 0x68]	       342	screen.c	FUNCTION_8	IF_6
0x33c	         0xfaf4594	            imul eax, dword [rbp - 0x6c]	       342	screen.c	FUNCTION_8	IF_6
0x340	            0x4898	                                    cdqe	       341	screen.c	FUNCTION_8	IF_6	CALL_6
0x342	      0xbe00000000	                              mov esi, 0	       341	screen.c	FUNCTION_8	IF_6	CALL_6
0x347	          0x4889c7	                            mov rdi, rax	       341	screen.c	FUNCTION_8	IF_6	CALL_6
0x34a	      0xe800000000	                          call 0x400038f	       341	screen.c	FUNCTION_8	IF_6	CALL_6
0x34f	        0x488945a8	             mov qword [rbp - 0x58], rax	       341	screen.c	FUNCTION_8	IF_6	CALL_6
0x353	      0x48837da800	               cmp qword [rbp - 0x58], 0	       343	screen.c	FUNCTION_8	IF_6	IF_7
0x358	            0x7507	                           jne 0x40003a1	       343	screen.c	FUNCTION_8	IF_6	IF_7
0x35a	    0xc7458c020000	               mov dword [rbp - 0x74], 2	       344	screen.c	FUNCTION_8	IF_6	IF_7
0x361	        0x837d8c02	               cmp dword [rbp - 0x74], 2	       348	screen.c	FUNCTION_8	IF_8
0x365	     0xf84e9030000	                            je 0x4000794	       348	screen.c	FUNCTION_8	IF_8
0x36b	    0xc74588000000	               mov dword [rbp - 0x78], 0	       351	screen.c	FUNCTION_8	IF_8	FOR_2
0x372	      0xe9ef010000	                           jmp 0x40005a6	       351	screen.c	FUNCTION_8	IF_8	FOR_2
0x377	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       353	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_7
0x37a	            0x4898	                                    cdqe	       353	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_7
0x37c	    0x488b15000000	            mov rdx, qword [0x040003c3] 	       353	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_7
0x383	    0x488b0d000000	            mov rcx, qword [0x040003ca] 	       353	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_7
0x38a	    0x8b3d00000000	            mov edi, dword [0x040003d0] 	       353	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_7
0x390	          0x8b7588	             mov esi, dword [rbp - 0x78]	       353	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_7
0x393	             0x1fe	                            add esi, edi	       353	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_7
0x395	          0x4863f6	                         movsxd rsi, esi	       353	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_7
0x398	        0x48c1e602	                              shl rsi, 2	       353	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_7
0x39c	          0x4801f1	                            add rcx, rsi	       353	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_7
0x39f	            0x8b09	                    mov ecx, dword [rcx]	       353	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_7
0x3a1	            0x89c9	                            mov ecx, ecx	       353	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_7
0x3a3	        0x488d340a	                    lea rsi, [rdx + rcx]	       353	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_7
0x3a7	          0x8b5588	             mov edx, dword [rbp - 0x78]	       353	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_7
0x3aa	         0xfaf5594	            imul edx, dword [rbp - 0x6c]	       353	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_7
0x3ae	          0x4863ca	                         movsxd rcx, edx	       353	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_7
0x3b1	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       353	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_7
0x3b5	          0x4801d1	                            add rcx, rdx	       353	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_7
0x3b8	          0x4889c2	                            mov rdx, rax	       353	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_7
0x3bb	          0x4889cf	                            mov rdi, rcx	       353	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_7
0x3be	      0xe800000000	                          call 0x4000403	       353	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_7
0x3c3	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       356	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_8
0x3c6	            0x4898	                                    cdqe	       356	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_8
0x3c8	        0x488d1400	                    lea rdx, [rax + rax]	       356	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_8
0x3cc	    0x488b05000000	            mov rax, qword [0x04000413] 	       356	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_8
0x3d3	    0x488b0d000000	            mov rcx, qword [0x0400041a] 	       356	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_8
0x3da	    0x8b3d00000000	            mov edi, dword [0x04000420] 	       356	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_8
0x3e0	          0x8b7588	             mov esi, dword [rbp - 0x78]	       356	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_8
0x3e3	             0x1fe	                            add esi, edi	       356	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_8
0x3e5	          0x4863f6	                         movsxd rsi, esi	       356	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_8
0x3e8	        0x48c1e602	                              shl rsi, 2	       356	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_8
0x3ec	          0x4801f1	                            add rcx, rsi	       356	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_8
0x3ef	            0x8b09	                    mov ecx, dword [rcx]	       356	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_8
0x3f1	            0x89c9	                            mov ecx, ecx	       356	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_8
0x3f3	          0x4801c9	                            add rcx, rcx	       356	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_8
0x3f6	          0x4801c1	                            add rcx, rax	       356	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_8
0x3f9	          0x8b4588	             mov eax, dword [rbp - 0x78]	       356	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_8
0x3fc	         0xfaf4594	            imul eax, dword [rbp - 0x6c]	       356	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_8
0x400	            0x4898	                                    cdqe	       356	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_8
0x402	        0x488d3400	                    lea rsi, [rax + rax]	       356	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_8
0x406	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       356	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_8
0x40a	          0x4801f0	                            add rax, rsi	       356	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_8
0x40d	          0x4889ce	                            mov rsi, rcx	       356	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_8
0x410	          0x4889c7	                            mov rdi, rax	       356	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_8
0x413	      0xe800000000	                          call 0x4000458	       356	screen.c	FUNCTION_8	IF_8	FOR_2	CALL_8
0x418	    0x8b0500000000	            mov eax, dword [0x0400045e] 	       360	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9
0x41e	            0x85c0	                           test eax, eax	       360	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9
0x420	     0xf84e3000000	                            je 0x4000549	       360	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9
0x426	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       362	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	CALL_9
0x429	            0x4898	                                    cdqe	       362	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	CALL_9
0x42b	    0x488d14850000	                        lea rdx, [rax*4]	       362	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	CALL_9
0x433	    0x488b05000000	            mov rax, qword [0x0400047a] 	       362	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	CALL_9
0x43a	    0x488b0d000000	            mov rcx, qword [0x04000481] 	       362	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	CALL_9
0x441	    0x8b3d00000000	            mov edi, dword [0x04000487] 	       362	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	CALL_9
0x447	          0x8b7588	             mov esi, dword [rbp - 0x78]	       362	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	CALL_9
0x44a	             0x1fe	                            add esi, edi	       362	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	CALL_9
0x44c	          0x4863f6	                         movsxd rsi, esi	       362	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	CALL_9
0x44f	        0x48c1e602	                              shl rsi, 2	       362	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	CALL_9
0x453	          0x4801f1	                            add rcx, rsi	       362	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	CALL_9
0x456	            0x8b09	                    mov ecx, dword [rcx]	       362	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	CALL_9
0x458	            0x89c9	                            mov ecx, ecx	       362	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	CALL_9
0x45a	        0x48c1e102	                              shl rcx, 2	       362	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	CALL_9
0x45e	          0x4801c1	                            add rcx, rax	       362	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	CALL_9
0x461	          0x8b4588	             mov eax, dword [rbp - 0x78]	       362	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	CALL_9
0x464	         0xfaf4594	            imul eax, dword [rbp - 0x6c]	       362	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	CALL_9
0x468	            0x4898	                                    cdqe	       362	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	CALL_9
0x46a	    0x488d34850000	                        lea rsi, [rax*4]	       362	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	CALL_9
0x472	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       362	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	CALL_9
0x476	          0x4801f0	                            add rax, rsi	       362	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	CALL_9
0x479	          0x4889ce	                            mov rsi, rcx	       362	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	CALL_9
0x47c	          0x4889c7	                            mov rdi, rax	       362	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	CALL_9
0x47f	      0xe800000000	                          call 0x40004c4	       362	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	CALL_9
0x484	    0xc74590000000	               mov dword [rbp - 0x70], 0	       365	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3
0x48b	            0xeb6a	                           jmp 0x4000537	       365	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3
0x48d	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       366	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3	CALL_10
0x490	            0x4898	                                    cdqe	       366	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3	CALL_10
0x492	    0x488d14850000	                        lea rdx, [rax*4]	       366	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3	CALL_10
0x49a	          0x8b4590	             mov eax, dword [rbp - 0x70]	       366	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3	CALL_10
0x49d	            0x4898	                                    cdqe	       366	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3	CALL_10
0x49f	    0x488b04c50000	                  mov rax, qword [rax*8]	       366	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3	CALL_10
0x4a7	    0x488b0d000000	            mov rcx, qword [0x040004ee] 	       366	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3	CALL_10
0x4ae	    0x8b3d00000000	            mov edi, dword [0x040004f4] 	       366	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3	CALL_10
0x4b4	          0x8b7588	             mov esi, dword [rbp - 0x78]	       366	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3	CALL_10
0x4b7	             0x1fe	                            add esi, edi	       366	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3	CALL_10
0x4b9	          0x4863f6	                         movsxd rsi, esi	       366	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3	CALL_10
0x4bc	        0x48c1e602	                              shl rsi, 2	       366	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3	CALL_10
0x4c0	          0x4801f1	                            add rcx, rsi	       366	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3	CALL_10
0x4c3	            0x8b09	                    mov ecx, dword [rcx]	       366	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3	CALL_10
0x4c5	            0x89c9	                            mov ecx, ecx	       366	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3	CALL_10
0x4c7	        0x48c1e102	                              shl rcx, 2	       366	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3	CALL_10
0x4cb	          0x4801c1	                            add rcx, rax	       366	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3	CALL_10
0x4ce	          0x8b4590	             mov eax, dword [rbp - 0x70]	       366	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3	CALL_10
0x4d1	            0x4898	                                    cdqe	       366	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3	CALL_10
0x4d3	      0x488b74c5c0	     mov rsi, qword [rbp + rax*8 - 0x40]	       366	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3	CALL_10
0x4d8	          0x8b4588	             mov eax, dword [rbp - 0x78]	       366	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3	CALL_10
0x4db	         0xfaf4594	            imul eax, dword [rbp - 0x6c]	       366	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3	CALL_10
0x4df	            0x4898	                                    cdqe	       366	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3	CALL_10
0x4e1	        0x48c1e002	                              shl rax, 2	       366	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3	CALL_10
0x4e5	          0x4801f0	                            add rax, rsi	       366	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3	CALL_10
0x4e8	          0x4889ce	                            mov rsi, rcx	       366	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3	CALL_10
0x4eb	          0x4889c7	                            mov rdi, rax	       366	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3	CALL_10
0x4ee	      0xe800000000	                          call 0x4000533	       366	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3	CALL_10
0x4f3	        0x83459001	               add dword [rbp - 0x70], 1	       365	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3
0x4f7	          0x8b4590	             mov eax, dword [rbp - 0x70]	       365	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3
0x4fa	          0x4863d0	                         movsxd rdx, eax	       365	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3
0x4fd	    0x488b05000000	            mov rax, qword [0x04000544] 	       365	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3
0x504	          0x4839c2	                            cmp rdx, rax	       365	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3
0x507	            0x7c84	                            jl 0x40004cd	       365	screen.c	FUNCTION_8	IF_8	FOR_2	IF_9	FOR_3
0x509	    0x8b0500000000	            mov eax, dword [0x0400054f] 	       370	screen.c	FUNCTION_8	IF_8	FOR_2	IF_10
0x50f	      0x3dcc260000	                         cmp eax, 0x26cc	       370	screen.c	FUNCTION_8	IF_8	FOR_2	IF_10
0x514	            0x754c	                           jne 0x40005a2	       370	screen.c	FUNCTION_8	IF_8	FOR_2	IF_10
0x516	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       371	screen.c	FUNCTION_8	IF_8	FOR_2	IF_10	CALL_11
0x519	            0x4898	                                    cdqe	       371	screen.c	FUNCTION_8	IF_8	FOR_2	IF_10	CALL_11
0x51b	    0x488b15000000	            mov rdx, qword [0x04000562] 	       371	screen.c	FUNCTION_8	IF_8	FOR_2	IF_10	CALL_11
0x522	    0x488b0d000000	            mov rcx, qword [0x04000569] 	       371	screen.c	FUNCTION_8	IF_8	FOR_2	IF_10	CALL_11
0x529	    0x8b3d00000000	            mov edi, dword [0x0400056f] 	       371	screen.c	FUNCTION_8	IF_8	FOR_2	IF_10	CALL_11
0x52f	          0x8b7588	             mov esi, dword [rbp - 0x78]	       371	screen.c	FUNCTION_8	IF_8	FOR_2	IF_10	CALL_11
0x532	             0x1fe	                            add esi, edi	       371	screen.c	FUNCTION_8	IF_8	FOR_2	IF_10	CALL_11
0x534	          0x4863f6	                         movsxd rsi, esi	       371	screen.c	FUNCTION_8	IF_8	FOR_2	IF_10	CALL_11
0x537	        0x48c1e602	                              shl rsi, 2	       371	screen.c	FUNCTION_8	IF_8	FOR_2	IF_10	CALL_11
0x53b	          0x4801f1	                            add rcx, rsi	       371	screen.c	FUNCTION_8	IF_8	FOR_2	IF_10	CALL_11
0x53e	            0x8b09	                    mov ecx, dword [rcx]	       371	screen.c	FUNCTION_8	IF_8	FOR_2	IF_10	CALL_11
0x540	            0x89c9	                            mov ecx, ecx	       371	screen.c	FUNCTION_8	IF_8	FOR_2	IF_10	CALL_11
0x542	        0x488d340a	                    lea rsi, [rdx + rcx]	       371	screen.c	FUNCTION_8	IF_8	FOR_2	IF_10	CALL_11
0x546	          0x8b5588	             mov edx, dword [rbp - 0x78]	       371	screen.c	FUNCTION_8	IF_8	FOR_2	IF_10	CALL_11
0x549	         0xfaf5594	            imul edx, dword [rbp - 0x6c]	       371	screen.c	FUNCTION_8	IF_8	FOR_2	IF_10	CALL_11
0x54d	          0x4863ca	                         movsxd rcx, edx	       371	screen.c	FUNCTION_8	IF_8	FOR_2	IF_10	CALL_11
0x550	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       371	screen.c	FUNCTION_8	IF_8	FOR_2	IF_10	CALL_11
0x554	          0x4801d1	                            add rcx, rdx	       371	screen.c	FUNCTION_8	IF_8	FOR_2	IF_10	CALL_11
0x557	          0x4889c2	                            mov rdx, rax	       371	screen.c	FUNCTION_8	IF_8	FOR_2	IF_10	CALL_11
0x55a	          0x4889cf	                            mov rdi, rcx	       371	screen.c	FUNCTION_8	IF_8	FOR_2	IF_10	CALL_11
0x55d	      0xe800000000	                          call 0x40005a2	       371	screen.c	FUNCTION_8	IF_8	FOR_2	IF_10	CALL_11
0x562	        0x83458801	               add dword [rbp - 0x78], 1	       351	screen.c	FUNCTION_8	IF_8	FOR_2
0x566	          0x8b4588	             mov eax, dword [rbp - 0x78]	       351	screen.c	FUNCTION_8	IF_8	FOR_2
0x569	          0x3b4598	             cmp eax, dword [rbp - 0x68]	       351	screen.c	FUNCTION_8	IF_8	FOR_2
0x56c	     0xf8c05feffff	                            jl 0x40003b7	       351	screen.c	FUNCTION_8	IF_8	FOR_2
0x572	      0xbf00000000	                              mov edi, 0	       377	screen.c	FUNCTION_8	IF_8	CALL_12
0x577	      0xe800000000	                          call 0x40005bc	       377	screen.c	FUNCTION_8	IF_8	CALL_12
0x57c	    0xc7458c030000	               mov dword [rbp - 0x74], 3	       378	screen.c	FUNCTION_8	IF_8
0x583	    0x8b0500000000	            mov eax, dword [0x040005c9] 	       380	screen.c	FUNCTION_8	IF_8	IF_11
0x589	            0x85c0	                           test eax, eax	       380	screen.c	FUNCTION_8	IF_8	IF_11
0x58b	     0xf85c3010000	                           jne 0x4000794	       380	screen.c	FUNCTION_8	IF_8	IF_11
0x591	    0x488b05000000	            mov rax, qword [0x040005d8] 	       382	screen.c	FUNCTION_8	IF_8	IF_11
0x598	          0x4889c2	                            mov rdx, rax	       382	screen.c	FUNCTION_8	IF_8	IF_11
0x59b	    0x488b05000000	            mov rax, qword [0x040005e2] 	       382	screen.c	FUNCTION_8	IF_8	IF_11
0x5a2	          0x4829c2	                            sub rdx, rax	       382	screen.c	FUNCTION_8	IF_8	IF_11
0x5a5	          0x4889d0	                            mov rax, rdx	       382	screen.c	FUNCTION_8	IF_8	IF_11
0x5a8	          0x89459c	             mov dword [rbp - 0x64], eax	       382	screen.c	FUNCTION_8	IF_8	IF_11
0x5ab	    0xc74588000000	               mov dword [rbp - 0x78], 0	       385	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4
0x5b2	      0xe98a010000	                           jmp 0x4000781	       385	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4
0x5b7	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       387	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	CALL_13
0x5ba	          0x4863d0	                         movsxd rdx, eax	       387	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	CALL_13
0x5bd	          0x8b4588	             mov eax, dword [rbp - 0x78]	       387	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	CALL_13
0x5c0	         0xfaf4594	            imul eax, dword [rbp - 0x6c]	       387	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	CALL_13
0x5c4	          0x4863c8	                         movsxd rcx, eax	       387	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	CALL_13
0x5c7	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       387	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	CALL_13
0x5cb	          0x4801c1	                            add rcx, rax	       387	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	CALL_13
0x5ce	    0x488b05000000	            mov rax, qword [0x04000615] 	       387	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	CALL_13
0x5d5	          0x4889ce	                            mov rsi, rcx	       387	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	CALL_13
0x5d8	          0x4889c7	                            mov rdi, rax	       387	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	CALL_13
0x5db	      0xe800000000	                          call 0x4000620	       387	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	CALL_13
0x5e0	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       390	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	CALL_14
0x5e3	            0x4898	                                    cdqe	       390	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	CALL_14
0x5e5	        0x488d1400	                    lea rdx, [rax + rax]	       390	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	CALL_14
0x5e9	          0x8b4588	             mov eax, dword [rbp - 0x78]	       390	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	CALL_14
0x5ec	         0xfaf4594	            imul eax, dword [rbp - 0x6c]	       390	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	CALL_14
0x5f0	            0x4898	                                    cdqe	       390	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	CALL_14
0x5f2	        0x488d0c00	                    lea rcx, [rax + rax]	       390	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	CALL_14
0x5f6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       390	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	CALL_14
0x5fa	          0x4801c1	                            add rcx, rax	       390	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	CALL_14
0x5fd	    0x488b05000000	            mov rax, qword [0x04000644] 	       390	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	CALL_14
0x604	          0x8b759c	             mov esi, dword [rbp - 0x64]	       390	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	CALL_14
0x607	          0x4863f6	                         movsxd rsi, esi	       390	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	CALL_14
0x60a	          0x4801f6	                            add rsi, rsi	       390	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	CALL_14
0x60d	          0x4801f0	                            add rax, rsi	       390	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	CALL_14
0x610	          0x4889ce	                            mov rsi, rcx	       390	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	CALL_14
0x613	          0x4889c7	                            mov rdi, rax	       390	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	CALL_14
0x616	      0xe800000000	                          call 0x400065b	       390	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	CALL_14
0x61b	    0x8b0500000000	            mov eax, dword [0x04000661] 	       394	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12
0x621	            0x85c0	                           test eax, eax	       394	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12
0x623	     0xf84af000000	                            je 0x4000718	       394	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12
0x629	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       396	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	CALL_15
0x62c	            0x4898	                                    cdqe	       396	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	CALL_15
0x62e	    0x488d14850000	                        lea rdx, [rax*4]	       396	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	CALL_15
0x636	          0x8b4588	             mov eax, dword [rbp - 0x78]	       396	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	CALL_15
0x639	         0xfaf4594	            imul eax, dword [rbp - 0x6c]	       396	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	CALL_15
0x63d	            0x4898	                                    cdqe	       396	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	CALL_15
0x63f	    0x488d0c850000	                        lea rcx, [rax*4]	       396	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	CALL_15
0x647	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       396	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	CALL_15
0x64b	          0x4801c1	                            add rcx, rax	       396	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	CALL_15
0x64e	    0x488b05000000	            mov rax, qword [0x04000695] 	       396	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	CALL_15
0x655	          0x8b759c	             mov esi, dword [rbp - 0x64]	       396	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	CALL_15
0x658	          0x4863f6	                         movsxd rsi, esi	       396	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	CALL_15
0x65b	        0x48c1e602	                              shl rsi, 2	       396	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	CALL_15
0x65f	          0x4801f0	                            add rax, rsi	       396	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	CALL_15
0x662	          0x4889ce	                            mov rsi, rcx	       396	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	CALL_15
0x665	          0x4889c7	                            mov rdi, rax	       396	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	CALL_15
0x668	      0xe800000000	                          call 0x40006ad	       396	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	CALL_15
0x66d	    0xc74590000000	               mov dword [rbp - 0x70], 0	       399	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	FOR_5
0x674	            0xeb50	                           jmp 0x4000706	       399	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	FOR_5
0x676	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       400	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	FOR_5	CALL_16
0x679	            0x4898	                                    cdqe	       400	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	FOR_5	CALL_16
0x67b	    0x488d14850000	                        lea rdx, [rax*4]	       400	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	FOR_5	CALL_16
0x683	          0x8b4590	             mov eax, dword [rbp - 0x70]	       400	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	FOR_5	CALL_16
0x686	            0x4898	                                    cdqe	       400	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	FOR_5	CALL_16
0x688	      0x488b4cc5c0	     mov rcx, qword [rbp + rax*8 - 0x40]	       400	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	FOR_5	CALL_16
0x68d	          0x8b4588	             mov eax, dword [rbp - 0x78]	       400	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	FOR_5	CALL_16
0x690	         0xfaf4594	            imul eax, dword [rbp - 0x6c]	       400	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	FOR_5	CALL_16
0x694	            0x4898	                                    cdqe	       400	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	FOR_5	CALL_16
0x696	        0x48c1e002	                              shl rax, 2	       400	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	FOR_5	CALL_16
0x69a	          0x4801c1	                            add rcx, rax	       400	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	FOR_5	CALL_16
0x69d	          0x8b4590	             mov eax, dword [rbp - 0x70]	       400	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	FOR_5	CALL_16
0x6a0	            0x4898	                                    cdqe	       400	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	FOR_5	CALL_16
0x6a2	    0x488b04c50000	                  mov rax, qword [rax*8]	       400	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	FOR_5	CALL_16
0x6aa	          0x8b759c	             mov esi, dword [rbp - 0x64]	       400	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	FOR_5	CALL_16
0x6ad	          0x4863f6	                         movsxd rsi, esi	       400	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	FOR_5	CALL_16
0x6b0	        0x48c1e602	                              shl rsi, 2	       400	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	FOR_5	CALL_16
0x6b4	          0x4801f0	                            add rax, rsi	       400	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	FOR_5	CALL_16
0x6b7	          0x4889ce	                            mov rsi, rcx	       400	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	FOR_5	CALL_16
0x6ba	          0x4889c7	                            mov rdi, rax	       400	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	FOR_5	CALL_16
0x6bd	      0xe800000000	                          call 0x4000702	       400	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	FOR_5	CALL_16
0x6c2	        0x83459001	               add dword [rbp - 0x70], 1	       399	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	FOR_5
0x6c6	          0x8b4590	             mov eax, dword [rbp - 0x70]	       399	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	FOR_5
0x6c9	          0x4863d0	                         movsxd rdx, eax	       399	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	FOR_5
0x6cc	    0x488b05000000	            mov rax, qword [0x04000713] 	       399	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	FOR_5
0x6d3	          0x4839c2	                            cmp rdx, rax	       399	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	FOR_5
0x6d6	            0x7c9e	                            jl 0x40006b6	       399	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_12	FOR_5
0x6d8	    0x8b0500000000	            mov eax, dword [0x0400071e] 	       404	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_13
0x6de	      0x3dcc260000	                         cmp eax, 0x26cc	       404	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_13
0x6e3	            0x7532	                           jne 0x4000757	       404	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_13
0x6e5	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       405	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_13	CALL_17
0x6e8	            0x4898	                                    cdqe	       405	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_13	CALL_17
0x6ea	          0x8b5588	             mov edx, dword [rbp - 0x78]	       405	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_13	CALL_17
0x6ed	         0xfaf5594	            imul edx, dword [rbp - 0x6c]	       405	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_13	CALL_17
0x6f1	          0x4863ca	                         movsxd rcx, edx	       405	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_13	CALL_17
0x6f4	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       405	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_13	CALL_17
0x6f8	        0x488d3411	                    lea rsi, [rcx + rdx]	       405	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_13	CALL_17
0x6fc	    0x488b0d000000	            mov rcx, qword [0x04000743] 	       405	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_13	CALL_17
0x703	          0x8b559c	             mov edx, dword [rbp - 0x64]	       405	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_13	CALL_17
0x706	          0x4863d2	                         movsxd rdx, edx	       405	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_13	CALL_17
0x709	          0x4801d1	                            add rcx, rdx	       405	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_13	CALL_17
0x70c	          0x4889c2	                            mov rdx, rax	       405	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_13	CALL_17
0x70f	          0x4889cf	                            mov rdi, rcx	       405	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_13	CALL_17
0x712	      0xe800000000	                          call 0x4000757	       405	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	IF_13	CALL_17
0x717	    0x8b1500000000	            mov edx, dword [0x0400075d] 	       409	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	CALL_18
0x71d	          0x8b4588	             mov eax, dword [rbp - 0x78]	       409	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	CALL_18
0x720	          0x8d3c02	                    lea edi, [rdx + rax]	       409	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	CALL_18
0x723	          0x8b5594	             mov edx, dword [rbp - 0x6c]	       409	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	CALL_18
0x726	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       409	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	CALL_18
0x729	    0x41b800000000	                              mov r8d, 0	       409	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	CALL_18
0x72f	            0x89d1	                            mov ecx, edx	       409	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	CALL_18
0x731	            0x89c2	                            mov edx, eax	       409	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	CALL_18
0x733	      0xbe00000000	                              mov esi, 0	       409	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	CALL_18
0x738	      0xe800000000	                          call 0x400077d	       409	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4	CALL_18
0x73d	        0x83458801	               add dword [rbp - 0x78], 1	       385	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4
0x741	          0x8b4588	             mov eax, dword [rbp - 0x78]	       385	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4
0x744	          0x3b4598	             cmp eax, dword [rbp - 0x68]	       385	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4
0x747	     0xf8c6afeffff	                            jl 0x40005f7	       385	screen.c	FUNCTION_8	IF_8	IF_11	FOR_4
0x74d	    0xc7458c040000	               mov dword [rbp - 0x74], 4	       411	screen.c	FUNCTION_8	IF_8	IF_11
0x754	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       415	screen.c	FUNCTION_8	CALL_19
0x758	          0x4889c7	                            mov rdi, rax	       415	screen.c	FUNCTION_8	CALL_19
0x75b	      0xe800000000	                          call 0x40007a0	       415	screen.c	FUNCTION_8	CALL_19
0x760	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       416	screen.c	FUNCTION_8	CALL_20
0x764	          0x4889c7	                            mov rdi, rax	       416	screen.c	FUNCTION_8	CALL_20
0x767	      0xe800000000	                          call 0x40007ac	       416	screen.c	FUNCTION_8	CALL_20
0x76c	    0x8b0500000000	            mov eax, dword [0x040007b2] 	       418	screen.c	FUNCTION_8	IF_14
0x772	            0x85c0	                           test eax, eax	       418	screen.c	FUNCTION_8	IF_14
0x774	            0x743d	                            je 0x40007f3	       418	screen.c	FUNCTION_8	IF_14
0x776	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       420	screen.c	FUNCTION_8	IF_14	CALL_21
0x77a	          0x4889c7	                            mov rdi, rax	       420	screen.c	FUNCTION_8	IF_14	CALL_21
0x77d	      0xe800000000	                          call 0x40007c2	       420	screen.c	FUNCTION_8	IF_14	CALL_21
0x782	    0xc74590000000	               mov dword [rbp - 0x70], 0	       421	screen.c	FUNCTION_8	IF_14	FOR_6
0x789	            0xeb16	                           jmp 0x40007e1	       421	screen.c	FUNCTION_8	IF_14	FOR_6
0x78b	          0x8b4590	             mov eax, dword [rbp - 0x70]	       422	screen.c	FUNCTION_8	IF_14	CALL_22
0x78e	            0x4898	                                    cdqe	       422	screen.c	FUNCTION_8	IF_14	CALL_22
0x790	      0x488b44c5c0	     mov rax, qword [rbp + rax*8 - 0x40]	       422	screen.c	FUNCTION_8	IF_14	CALL_22
0x795	          0x4889c7	                            mov rdi, rax	       422	screen.c	FUNCTION_8	IF_14	CALL_22
0x798	      0xe800000000	                          call 0x40007dd	       422	screen.c	FUNCTION_8	IF_14	CALL_22
0x79d	        0x83459001	               add dword [rbp - 0x70], 1	       421	screen.c	FUNCTION_8	IF_14	FOR_6
0x7a1	          0x8b4590	             mov eax, dword [rbp - 0x70]	       421	screen.c	FUNCTION_8	IF_14	FOR_6
0x7a4	          0x4863d0	                         movsxd rdx, eax	       421	screen.c	FUNCTION_8	IF_14	FOR_6
0x7a7	    0x488b05000000	            mov rax, qword [0x040007ee] 	       421	screen.c	FUNCTION_8	IF_14	FOR_6
0x7ae	          0x4839c2	                            cmp rdx, rax	       421	screen.c	FUNCTION_8	IF_14	FOR_6
0x7b1	            0x7cd8	                            jl 0x40007cb	       421	screen.c	FUNCTION_8	IF_14	FOR_6
0x7b3	    0x8b0500000000	            mov eax, dword [0x040007f9] 	       424	screen.c	FUNCTION_8	IF_15
0x7b9	      0x3dcc260000	                         cmp eax, 0x26cc	       424	screen.c	FUNCTION_8	IF_15
0x7be	            0x750c	                           jne 0x400080c	       424	screen.c	FUNCTION_8	IF_15
0x7c0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       425	screen.c	FUNCTION_8	CALL_23
0x7c4	          0x4889c7	                            mov rdi, rax	       425	screen.c	FUNCTION_8	CALL_23
0x7c7	      0xe800000000	                          call 0x400080c	       425	screen.c	FUNCTION_8	CALL_23
0x7cc	      0xe800000000	                          call 0x4000811	       429	screen.c	FUNCTION_8	CALL_24
0x7d1	      0xe800000000	                          call 0x4000816	       431	screen.c	FUNCTION_8	CALL_25
0x7d6	          0x8b458c	             mov eax, dword [rbp - 0x74]	       433	screen.c	FUNCTION_8
0x7d9	        0x488b7df8	                mov rdi, qword [rbp - 8]	       434	screen.c	FUNCTION_8
0x7dd	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       434	screen.c	FUNCTION_8
0x7e6	            0x7405	                            je 0x400082d	       434	screen.c	FUNCTION_8
0x7e8	      0xe800000000	                          call 0x400082d	       434	screen.c	FUNCTION_8
0x7ed	              0xc9	                                   leave	       434	screen.c	FUNCTION_8
0x7ee	              0xc3	                                     ret	       434	screen.c	FUNCTION_8
fold_line	DO,0:functions,0:CALL,38:ELSE,11:IF,31:WHILE,2:FOR,1:SWITCH,0	803
0x4df8	              0x55	                                push rbp	      2617	screen.c	FUNCTION_25
0x4df9	          0x4889e5	                            mov rbp, rsp	      2617	screen.c	FUNCTION_25
0x4dfc	              0x53	                                push rbx	      2617	screen.c	FUNCTION_25
0x4dfd	    0x4881ecd80000	                           sub rsp, 0xd8	      2617	screen.c	FUNCTION_25
0x4e04	    0x4889bd48ffff	             mov qword [rbp - 0xb8], rdi	      2617	screen.c	FUNCTION_25
0x4e0b	    0x4889b540ffff	             mov qword [rbp - 0xc0], rsi	      2617	screen.c	FUNCTION_25
0x4e12	    0x48899538ffff	             mov qword [rbp - 0xc8], rdx	      2617	screen.c	FUNCTION_25
0x4e19	    0x48898d30ffff	             mov qword [rbp - 0xd0], rcx	      2617	screen.c	FUNCTION_25
0x4e20	    0x4489852cffff	             mov dword [rbp - 0xd4], r8d	      2617	screen.c	FUNCTION_25
0x4e27	    0x64488b042528	                mov rax, qword fs:[0x28]	      2617	screen.c	FUNCTION_25
0x4e30	        0x488945e8	             mov qword [rbp - 0x18], rax	      2617	screen.c	FUNCTION_25
0x4e34	            0x31c0	                            xor eax, eax	      2617	screen.c	FUNCTION_25
0x4e36	    0x488b9530ffff	             mov rdx, qword [rbp - 0xd0]	      2620	screen.c	FUNCTION_25
0x4e3d	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      2620	screen.c	FUNCTION_25
0x4e44	          0x4801d0	                            add rax, rdx	      2620	screen.c	FUNCTION_25
0x4e47	        0x4883e801	                              sub rax, 1	      2620	screen.c	FUNCTION_25
0x4e4b	        0x488945a0	             mov qword [rbp - 0x60], rax	      2620	screen.c	FUNCTION_25
0x4e4f	    0x488b05000000	            mov rax, qword [0x04004e96] 	      2626	screen.c	FUNCTION_25
0x4e56	          0x4889c2	                            mov rdx, rax	      2626	screen.c	FUNCTION_25
0x4e59	    0x488b05000000	            mov rax, qword [0x04004ea0] 	      2626	screen.c	FUNCTION_25
0x4e60	          0x4829c2	                            sub rdx, rax	      2626	screen.c	FUNCTION_25
0x4e63	          0x4889d0	                            mov rax, rdx	      2626	screen.c	FUNCTION_25
0x4e66	    0x898570ffffff	             mov dword [rbp - 0x90], eax	      2626	screen.c	FUNCTION_25
0x4e6c	    0xc78558ffffff	               mov dword [rbp - 0xa8], 0	      2637	screen.c	FUNCTION_25
0x4e76	    0x8b0500000000	            mov eax, dword [0x04004ebc] 	      2644	screen.c	FUNCTION_25	IF_1
0x4e7c	            0x85c0	                           test eax, eax	      2644	screen.c	FUNCTION_25	IF_1
0x4e7e	            0x7477	                            je 0x4004f37	      2644	screen.c	FUNCTION_25	IF_1
0x4e80	    0x488b05000000	            mov rax, qword [0x04004ec7] 	      2644	screen.c	FUNCTION_25	IF_1
0x4e87	    0x48398548ffff	            cmp qword [rbp - 0xb8], rax 	      2644	screen.c	FUNCTION_25	IF_1
0x4e8e	            0x7567	                           jne 0x4004f37	      2644	screen.c	FUNCTION_25	IF_1
0x4e90	    0x488b15000000	            mov rdx, qword [0x04004ed7] 	      2646	screen.c	FUNCTION_25	IF_1
0x4e97	    0x8b8570ffffff	             mov eax, dword [rbp - 0x90]	      2646	screen.c	FUNCTION_25	IF_1
0x4e9d	            0x4898	                                    cdqe	      2646	screen.c	FUNCTION_25	IF_1
0x4e9f	          0x4801d0	                            add rax, rdx	      2646	screen.c	FUNCTION_25	IF_1
0x4ea2	    0x8b1500000000	            mov edx, dword [0x04004ee8] 	      2646	screen.c	FUNCTION_25	IF_1
0x4ea8	            0x8810	                      mov byte [rax], dl	      2646	screen.c	FUNCTION_25	IF_1
0x4eaa	    0x488b05000000	            mov rax, qword [0x04004ef1] 	      2647	screen.c	FUNCTION_25	IF_1	CALL_1
0x4eb1	    0x8b9570ffffff	             mov edx, dword [rbp - 0x90]	      2647	screen.c	FUNCTION_25	IF_1	CALL_1
0x4eb7	          0x4863d2	                         movsxd rdx, edx	      2647	screen.c	FUNCTION_25	IF_1	CALL_1
0x4eba	          0x4801d2	                            add rdx, rdx	      2647	screen.c	FUNCTION_25	IF_1	CALL_1
0x4ebd	          0x4801d0	                            add rax, rdx	      2647	screen.c	FUNCTION_25	IF_1	CALL_1
0x4ec0	    0x8b1500000000	            mov edx, dword [0x04004f06] 	      2647	screen.c	FUNCTION_25	IF_1	CALL_1
0x4ec6	          0x668910	                      mov word [rax], dx	      2647	screen.c	FUNCTION_25	IF_1	CALL_1
0x4ec9	    0x8b0500000000	            mov eax, dword [0x04004f0f] 	      2649	screen.c	FUNCTION_25	IF_1	IF_2
0x4ecf	            0x85c0	                           test eax, eax	      2649	screen.c	FUNCTION_25	IF_1	IF_2
0x4ed1	            0x741d	                            je 0x4004f30	      2649	screen.c	FUNCTION_25	IF_1	IF_2
0x4ed3	    0x488b05000000	            mov rax, qword [0x04004f1a] 	      2650	screen.c	FUNCTION_25	IF_1	IF_2
0x4eda	    0x8b9570ffffff	             mov edx, dword [rbp - 0x90]	      2650	screen.c	FUNCTION_25	IF_1	IF_2
0x4ee0	          0x4863d2	                         movsxd rdx, edx	      2650	screen.c	FUNCTION_25	IF_1	IF_2
0x4ee3	        0x48c1e202	                              shl rdx, 2	      2650	screen.c	FUNCTION_25	IF_1	IF_2
0x4ee7	          0x4801d0	                            add rax, rdx	      2650	screen.c	FUNCTION_25	IF_1	IF_2
0x4eea	    0xc70000000000	                      mov dword [rax], 0	      2650	screen.c	FUNCTION_25	IF_1	IF_2
0x4ef0	    0x838558ffffff	               add dword [rbp - 0xa8], 1	      2652	screen.c	FUNCTION_25	IF_1
0x4ef7	    0x8b9558ffffff	             mov edx, dword [rbp - 0xa8]	      2660	screen.c	FUNCTION_25	CALL_2
0x4efd	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2660	screen.c	FUNCTION_25	CALL_2
0x4f04	            0x89d6	                            mov esi, edx	      2660	screen.c	FUNCTION_25	CALL_2
0x4f06	          0x4889c7	                            mov rdi, rax	      2660	screen.c	FUNCTION_25	CALL_2
0x4f09	      0xe873feffff	             call sym.compute_foldcolumn	      2660	screen.c	FUNCTION_25	CALL_2
0x4f0e	    0x898574ffffff	             mov dword [rbp - 0x8c], eax	      2660	screen.c	FUNCTION_25	CALL_2
0x4f14	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      2661	screen.c	FUNCTION_25	IF_3
0x4f1b	     0xf8e04010000	                           jle 0x4005065	      2661	screen.c	FUNCTION_25	IF_3
0x4f21	    0x488b9530ffff	             mov rdx, qword [rbp - 0xd0]	      2663	screen.c	FUNCTION_25	IF_3	CALL_3
0x4f28	    0x488bb548ffff	             mov rsi, qword [rbp - 0xb8]	      2663	screen.c	FUNCTION_25	IF_3	CALL_3
0x4f2f	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2663	screen.c	FUNCTION_25	IF_3	CALL_3
0x4f33	          0x4889d1	                            mov rcx, rdx	      2663	screen.c	FUNCTION_25	IF_3	CALL_3
0x4f36	      0xba01000000	                              mov edx, 1	      2663	screen.c	FUNCTION_25	IF_3	CALL_3
0x4f3b	          0x4889c7	                            mov rdi, rax	      2663	screen.c	FUNCTION_25	IF_3	CALL_3
0x4f3e	      0xe8290e0000	                call sym.fill_foldcolumn	      2663	screen.c	FUNCTION_25	IF_3	CALL_3
0x4f43	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2665	screen.c	FUNCTION_25	IF_3	IF_4
0x4f4a	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      2665	screen.c	FUNCTION_25	IF_3	IF_4
0x4f50	            0x85c0	                           test eax, eax	      2665	screen.c	FUNCTION_25	IF_3	IF_4
0x4f52	     0xf849a000000	                            je 0x4005032	      2665	screen.c	FUNCTION_25	IF_3	IF_4
0x4f58	    0x8b0d00000000	            mov ecx, dword [0x04004f9e] 	      2669	screen.c	FUNCTION_25	IF_3	IF_4	CALL_4
0x4f5e	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2669	screen.c	FUNCTION_25	IF_3	IF_4	CALL_4
0x4f65	    0x8b90ac000000	            mov edx, dword [rax + 0xac] 	      2669	screen.c	FUNCTION_25	IF_3	IF_4	CALL_4
0x4f6b	    0x8b8570ffffff	             mov eax, dword [rbp - 0x90]	      2669	screen.c	FUNCTION_25	IF_3	IF_4	CALL_4
0x4f71	             0x1d0	                            add eax, edx	      2669	screen.c	FUNCTION_25	IF_3	IF_4	CALL_4
0x4f73	    0x2b8574ffffff	             sub eax, dword [rbp - 0x8c]	      2669	screen.c	FUNCTION_25	IF_3	IF_4	CALL_4
0x4f79	    0x2b8558ffffff	             sub eax, dword [rbp - 0xa8]	      2669	screen.c	FUNCTION_25	IF_3	IF_4	CALL_4
0x4f7f	    0x8b9574ffffff	             mov edx, dword [rbp - 0x8c]	      2669	screen.c	FUNCTION_25	IF_3	IF_4	CALL_4
0x4f85	        0x488d75b0	                   lea rsi, [rbp - 0x50]	      2669	screen.c	FUNCTION_25	IF_3	IF_4	CALL_4
0x4f89	            0x89c7	                            mov edi, eax	      2669	screen.c	FUNCTION_25	IF_3	IF_4	CALL_4
0x4f8b	      0xe8350d0000	                 call sym.copy_text_attr	      2669	screen.c	FUNCTION_25	IF_3	IF_4	CALL_4
0x4f90	    0xc78564ffffff	               mov dword [rbp - 0x9c], 0	      2672	screen.c	FUNCTION_25	IF_3	IF_4	FOR_1
0x4f9a	            0xeb46	                           jmp 0x4005022	      2672	screen.c	FUNCTION_25	IF_3	IF_4	FOR_1
0x4f9c	    0x488b15000000	            mov rdx, qword [0x04004fe3] 	      2673	screen.c	FUNCTION_25	IF_3	IF_4	FOR_1
0x4fa3	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2673	screen.c	FUNCTION_25	IF_3	IF_4	FOR_1
0x4faa	    0x8b88ac000000	            mov ecx, dword [rax + 0xac] 	      2673	screen.c	FUNCTION_25	IF_3	IF_4	FOR_1
0x4fb0	    0x8b8570ffffff	             mov eax, dword [rbp - 0x90]	      2673	screen.c	FUNCTION_25	IF_3	IF_4	FOR_1
0x4fb6	             0x1c8	                            add eax, ecx	      2673	screen.c	FUNCTION_25	IF_3	IF_4	FOR_1
0x4fb8	    0x2b8564ffffff	             sub eax, dword [rbp - 0x9c]	      2673	screen.c	FUNCTION_25	IF_3	IF_4	FOR_1
0x4fbe	          0x83e801	                              sub eax, 1	      2673	screen.c	FUNCTION_25	IF_3	IF_4	FOR_1
0x4fc1	    0x2b8558ffffff	             sub eax, dword [rbp - 0xa8]	      2673	screen.c	FUNCTION_25	IF_3	IF_4	FOR_1
0x4fc7	            0x4898	                                    cdqe	      2673	screen.c	FUNCTION_25	IF_3	IF_4	FOR_1
0x4fc9	          0x4801c2	                            add rdx, rax	      2673	screen.c	FUNCTION_25	IF_3	IF_4	FOR_1
0x4fcc	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	      2673	screen.c	FUNCTION_25	IF_3	IF_4	FOR_1
0x4fd2	            0x4898	                                    cdqe	      2673	screen.c	FUNCTION_25	IF_3	IF_4	FOR_1
0x4fd4	       0xfb64405b0	      movzx eax, byte [rbp + rax - 0x50]	      2673	screen.c	FUNCTION_25	IF_3	IF_4	FOR_1
0x4fd9	            0x8802	                      mov byte [rdx], al	      2673	screen.c	FUNCTION_25	IF_3	IF_4	FOR_1
0x4fdb	    0x838564ffffff	               add dword [rbp - 0x9c], 1	      2672	screen.c	FUNCTION_25	IF_3	IF_4	FOR_1
0x4fe2	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	      2672	screen.c	FUNCTION_25	IF_3	IF_4	FOR_1
0x4fe8	    0x3b8574ffffff	             cmp eax, dword [rbp - 0x8c]	      2672	screen.c	FUNCTION_25	IF_3	IF_4	FOR_1
0x4fee	            0x7cac	                            jl 0x4004fdc	      2672	screen.c	FUNCTION_25	IF_3	IF_4	FOR_1
0x4ff0	            0xeb27	                           jmp 0x4005059	      2672	screen.c	FUNCTION_25	IF_3	IF_4	FOR_1
0x4ff2	    0x8b0d00000000	            mov ecx, dword [0x04005038] 	      2677	screen.c	FUNCTION_25	IF_3	CALL_7
0x4ff8	    0x8b9570ffffff	             mov edx, dword [rbp - 0x90]	      2677	screen.c	FUNCTION_25	IF_3	CALL_7
0x4ffe	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	      2677	screen.c	FUNCTION_25	IF_3	CALL_7
0x5004	          0x8d3c02	                    lea edi, [rdx + rax]	      2677	screen.c	FUNCTION_25	IF_3	CALL_7
0x5007	    0x8b9574ffffff	             mov edx, dword [rbp - 0x8c]	      2677	screen.c	FUNCTION_25	IF_3	CALL_7
0x500d	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2677	screen.c	FUNCTION_25	IF_3	CALL_7
0x5011	          0x4889c6	                            mov rsi, rax	      2677	screen.c	FUNCTION_25	IF_3	CALL_7
0x5014	      0xe8ac0c0000	                 call sym.copy_text_attr	      2677	screen.c	FUNCTION_25	IF_3	CALL_7
0x5019	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	      2678	screen.c	FUNCTION_25	IF_3
0x501f	     0x18558ffffff	             add dword [rbp - 0xa8], eax	      2678	screen.c	FUNCTION_25	IF_3
0x5025	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2695	screen.c	FUNCTION_25	CALL_9
0x502c	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      2695	screen.c	FUNCTION_25	CALL_9
0x5032	            0x85c0	                           test eax, eax	      2695	screen.c	FUNCTION_25	CALL_9
0x5034	            0x7457	                            je 0x40050cd	      2695	screen.c	FUNCTION_25	CALL_9
0x5036	    0xc78560ffffff	               mov dword [rbp - 0xa0], 0	      2695	screen.c	FUNCTION_25	CALL_9
0x5040	            0xeb2e	                           jmp 0x40050b0	      2695	screen.c	FUNCTION_25	CALL_9
0x5042	    0x488b05000000	            mov rax, qword [0x04005089] 	      2695	screen.c	FUNCTION_25	CALL_9
0x5049	    0x8b8d70ffffff	             mov ecx, dword [rbp - 0x90]	      2695	screen.c	FUNCTION_25	CALL_9
0x504f	    0x8b9560ffffff	             mov edx, dword [rbp - 0xa0]	      2695	screen.c	FUNCTION_25	CALL_9
0x5055	             0x1ca	                            add edx, ecx	      2695	screen.c	FUNCTION_25	CALL_9
0x5057	          0x4863d2	                         movsxd rdx, edx	      2695	screen.c	FUNCTION_25	CALL_9
0x505a	          0x4801d2	                            add rdx, rdx	      2695	screen.c	FUNCTION_25	CALL_9
0x505d	          0x4801d0	                            add rax, rdx	      2695	screen.c	FUNCTION_25	CALL_9
0x5060	    0x8b1500000000	            mov edx, dword [0x040050a6] 	      2695	screen.c	FUNCTION_25	CALL_9
0x5066	          0x668910	                      mov word [rax], dx	      2695	screen.c	FUNCTION_25	CALL_9
0x5069	    0x838560ffffff	               add dword [rbp - 0xa0], 1	      2695	screen.c	FUNCTION_25	CALL_9
0x5070	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2695	screen.c	FUNCTION_25	CALL_9
0x5077	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2695	screen.c	FUNCTION_25	CALL_9
0x507d	    0x2b8558ffffff	             sub eax, dword [rbp - 0xa8]	      2695	screen.c	FUNCTION_25	CALL_9
0x5083	    0x3b8560ffffff	             cmp eax, dword [rbp - 0xa0]	      2695	screen.c	FUNCTION_25	CALL_9
0x5089	            0x7fb7	                            jg 0x4005082	      2695	screen.c	FUNCTION_25	CALL_9
0x508b	            0xeb5d	                           jmp 0x400512a	      2695	screen.c	FUNCTION_25	CALL_9
0x508d	    0xc78560ffffff	               mov dword [rbp - 0xa0], 0	      2695	screen.c	FUNCTION_25	CALL_9
0x5097	            0xeb36	                           jmp 0x400510f	      2695	screen.c	FUNCTION_25	CALL_9
0x5099	    0x488b05000000	            mov rax, qword [0x040050e0] 	      2695	screen.c	FUNCTION_25	CALL_9
0x50a0	    0x8b8d70ffffff	             mov ecx, dword [rbp - 0x90]	      2695	screen.c	FUNCTION_25	CALL_9
0x50a6	    0x8b9558ffffff	             mov edx, dword [rbp - 0xa8]	      2695	screen.c	FUNCTION_25	CALL_9
0x50ac	             0x1d1	                            add ecx, edx	      2695	screen.c	FUNCTION_25	CALL_9
0x50ae	    0x8b9560ffffff	             mov edx, dword [rbp - 0xa0]	      2695	screen.c	FUNCTION_25	CALL_9
0x50b4	             0x1ca	                            add edx, ecx	      2695	screen.c	FUNCTION_25	CALL_9
0x50b6	          0x4863d2	                         movsxd rdx, edx	      2695	screen.c	FUNCTION_25	CALL_9
0x50b9	          0x4801d2	                            add rdx, rdx	      2695	screen.c	FUNCTION_25	CALL_9
0x50bc	          0x4801d0	                            add rax, rdx	      2695	screen.c	FUNCTION_25	CALL_9
0x50bf	    0x8b1500000000	            mov edx, dword [0x04005105] 	      2695	screen.c	FUNCTION_25	CALL_9
0x50c5	          0x668910	                      mov word [rax], dx	      2695	screen.c	FUNCTION_25	CALL_9
0x50c8	    0x838560ffffff	               add dword [rbp - 0xa0], 1	      2695	screen.c	FUNCTION_25	CALL_9
0x50cf	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2695	screen.c	FUNCTION_25	CALL_9
0x50d6	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2695	screen.c	FUNCTION_25	CALL_9
0x50dc	    0x2b8558ffffff	             sub eax, dword [rbp - 0xa8]	      2695	screen.c	FUNCTION_25	CALL_9
0x50e2	    0x3b8560ffffff	             cmp eax, dword [rbp - 0xa0]	      2695	screen.c	FUNCTION_25	CALL_9
0x50e8	            0x7faf	                            jg 0x40050d9	      2695	screen.c	FUNCTION_25	CALL_9
0x50ea	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2699	screen.c	FUNCTION_25	IF_5	CALL_10
0x50f1	          0x4889c7	                            mov rdi, rax	      2699	screen.c	FUNCTION_25	IF_5	CALL_10
0x50f4	      0xe800000000	                          call 0x4005139	      2699	screen.c	FUNCTION_25	IF_5	CALL_10
0x50f9	            0x85c0	                           test eax, eax	      2699	screen.c	FUNCTION_25	IF_5	CALL_10
0x50fb	     0xf84ba000000	                            je 0x40051fb	      2699	screen.c	FUNCTION_25	IF_5	CALL_10
0x5101	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2701	screen.c	FUNCTION_25	IF_5
0x5108	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2701	screen.c	FUNCTION_25	IF_5
0x510e	    0x2b8558ffffff	             sub eax, dword [rbp - 0xa8]	      2701	screen.c	FUNCTION_25	IF_5
0x5114	    0x898554ffffff	             mov dword [rbp - 0xac], eax	      2701	screen.c	FUNCTION_25	IF_5
0x511a	    0x83bd54ffffff	               cmp dword [rbp - 0xac], 0	      2702	screen.c	FUNCTION_25	IF_5	IF_6
0x5121	     0xf8e94000000	                           jle 0x40051fb	      2702	screen.c	FUNCTION_25	IF_5	IF_6
0x5127	    0x83bd54ffffff	               cmp dword [rbp - 0xac], 2	      2704	screen.c	FUNCTION_25	IF_5	IF_6	IF_7
0x512e	            0x7e0a	                           jle 0x400517a	      2704	screen.c	FUNCTION_25	IF_5	IF_6	IF_7
0x5130	    0xc78554ffffff	               mov dword [rbp - 0xac], 2	      2705	screen.c	FUNCTION_25	IF_5	IF_6	IF_7
0x513a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2707	screen.c	FUNCTION_25	IF_5	IF_6	IF_8
0x5141	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      2707	screen.c	FUNCTION_25	IF_5	IF_6	IF_8
0x5147	            0x85c0	                           test eax, eax	      2707	screen.c	FUNCTION_25	IF_5	IF_6	IF_8
0x5149	            0x743b	                            je 0x40051c6	      2707	screen.c	FUNCTION_25	IF_5	IF_6	IF_8
0x514b	    0x8b0d00000000	            mov ecx, dword [0x04005191] 	      2709	screen.c	FUNCTION_25	IF_5	IF_6	IF_8	CALL_11
0x5151	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2709	screen.c	FUNCTION_25	IF_5	IF_6	IF_8	CALL_11
0x5158	    0x8b90ac000000	            mov edx, dword [rax + 0xac] 	      2709	screen.c	FUNCTION_25	IF_5	IF_6	IF_8	CALL_11
0x515e	    0x8b8570ffffff	             mov eax, dword [rbp - 0x90]	      2709	screen.c	FUNCTION_25	IF_5	IF_6	IF_8	CALL_11
0x5164	             0x1d0	                            add eax, edx	      2709	screen.c	FUNCTION_25	IF_5	IF_6	IF_8	CALL_11
0x5166	    0x2b8554ffffff	             sub eax, dword [rbp - 0xac]	      2709	screen.c	FUNCTION_25	IF_5	IF_6	IF_8	CALL_11
0x516c	    0x2b8558ffffff	             sub eax, dword [rbp - 0xa8]	      2709	screen.c	FUNCTION_25	IF_5	IF_6	IF_8	CALL_11
0x5172	    0x8b9554ffffff	             mov edx, dword [rbp - 0xac]	      2709	screen.c	FUNCTION_25	IF_5	IF_6	IF_8	CALL_11
0x5178	      0xbe00000000	                              mov esi, 0	      2709	screen.c	FUNCTION_25	IF_5	IF_6	IF_8	CALL_11
0x517d	            0x89c7	                            mov edi, eax	      2709	screen.c	FUNCTION_25	IF_5	IF_6	IF_8	CALL_11
0x517f	      0xe8410b0000	                 call sym.copy_text_attr	      2709	screen.c	FUNCTION_25	IF_5	IF_6	IF_8	CALL_11
0x5184	            0xeb29	                           jmp 0x40051ef	      2709	screen.c	FUNCTION_25	IF_5	IF_6	IF_8	CALL_11
0x5186	    0x8b1500000000	            mov edx, dword [0x040051cc] 	      2713	screen.c	FUNCTION_25	IF_5	IF_6	CALL_14
0x518c	    0x8b8d70ffffff	             mov ecx, dword [rbp - 0x90]	      2713	screen.c	FUNCTION_25	IF_5	IF_6	CALL_14
0x5192	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	      2713	screen.c	FUNCTION_25	IF_5	IF_6	CALL_14
0x5198	          0x8d3c01	                    lea edi, [rcx + rax]	      2713	screen.c	FUNCTION_25	IF_5	IF_6	CALL_14
0x519b	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      2713	screen.c	FUNCTION_25	IF_5	IF_6	CALL_14
0x51a1	            0x89d1	                            mov ecx, edx	      2713	screen.c	FUNCTION_25	IF_5	IF_6	CALL_14
0x51a3	            0x89c2	                            mov edx, eax	      2713	screen.c	FUNCTION_25	IF_5	IF_6	CALL_14
0x51a5	      0xbe00000000	                              mov esi, 0	      2713	screen.c	FUNCTION_25	IF_5	IF_6	CALL_14
0x51aa	      0xe8160b0000	                 call sym.copy_text_attr	      2713	screen.c	FUNCTION_25	IF_5	IF_6	CALL_14
0x51af	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      2714	screen.c	FUNCTION_25	IF_5	IF_6
0x51b5	     0x18558ffffff	             add dword [rbp - 0xa8], eax	      2714	screen.c	FUNCTION_25	IF_5	IF_6
0x51bb	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2722	screen.c	FUNCTION_25	IF_9
0x51c2	    0x8b8038020000	           mov eax, dword [rax + 0x238] 	      2722	screen.c	FUNCTION_25	IF_9
0x51c8	            0x85c0	                           test eax, eax	      2722	screen.c	FUNCTION_25	IF_9
0x51ca	            0x7515	                           jne 0x4005221	      2722	screen.c	FUNCTION_25	IF_9
0x51cc	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2722	screen.c	FUNCTION_25	IF_9
0x51d3	    0x8b803c020000	           mov eax, dword [rax + 0x23c] 	      2722	screen.c	FUNCTION_25	IF_9
0x51d9	            0x85c0	                           test eax, eax	      2722	screen.c	FUNCTION_25	IF_9
0x51db	     0xf8499010000	                            je 0x40053ba	      2722	screen.c	FUNCTION_25	IF_9
0x51e1	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2724	screen.c	FUNCTION_25	IF_9
0x51e8	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2724	screen.c	FUNCTION_25	IF_9
0x51ee	    0x2b8558ffffff	             sub eax, dword [rbp - 0xa8]	      2724	screen.c	FUNCTION_25	IF_9
0x51f4	    0x898554ffffff	             mov dword [rbp - 0xac], eax	      2724	screen.c	FUNCTION_25	IF_9
0x51fa	    0x83bd54ffffff	               cmp dword [rbp - 0xac], 0	      2725	screen.c	FUNCTION_25	IF_9	IF_10
0x5201	     0xf8e73010000	                           jle 0x40053ba	      2725	screen.c	FUNCTION_25	IF_9	IF_10
0x5207	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2727	screen.c	FUNCTION_25	IF_9	IF_10	CALL_15
0x520e	          0x4889c7	                            mov rdi, rax	      2727	screen.c	FUNCTION_25	IF_9	IF_10	CALL_15
0x5211	      0xe800000000	                          call 0x4005256	      2727	screen.c	FUNCTION_25	IF_9	IF_10	CALL_15
0x5216	    0x898578ffffff	             mov dword [rbp - 0x88], eax	      2727	screen.c	FUNCTION_25	IF_9	IF_10	CALL_15
0x521c	    0x48c745980000	               mov qword [rbp - 0x68], 0	      2729	screen.c	FUNCTION_25	IF_9	IF_10
0x5224	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      2731	screen.c	FUNCTION_25	IF_9	IF_10	IF_11
0x522a	          0x83c001	                              add eax, 1	      2731	screen.c	FUNCTION_25	IF_9	IF_10	IF_11
0x522d	    0x3b8554ffffff	             cmp eax, dword [rbp - 0xac]	      2731	screen.c	FUNCTION_25	IF_9	IF_10	IF_11
0x5233	            0x7d0f	                           jge 0x4005284	      2731	screen.c	FUNCTION_25	IF_9	IF_10	IF_11
0x5235	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      2732	screen.c	FUNCTION_25	IF_9	IF_10	IF_11
0x523b	          0x83c001	                              add eax, 1	      2732	screen.c	FUNCTION_25	IF_9	IF_10	IF_11
0x523e	    0x898554ffffff	             mov dword [rbp - 0xac], eax	      2732	screen.c	FUNCTION_25	IF_9	IF_10	IF_11
0x5244	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2734	screen.c	FUNCTION_25	IF_9	IF_10	IF_12
0x524b	    0x8b8038020000	           mov eax, dword [rax + 0x238] 	      2734	screen.c	FUNCTION_25	IF_9	IF_10	IF_12
0x5251	            0x85c0	                           test eax, eax	      2734	screen.c	FUNCTION_25	IF_9	IF_10	IF_12
0x5253	            0x741e	                            je 0x40052b3	      2734	screen.c	FUNCTION_25	IF_9	IF_10	IF_12
0x5255	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2734	screen.c	FUNCTION_25	IF_9	IF_10	IF_12
0x525c	    0x8b803c020000	           mov eax, dword [rax + 0x23c] 	      2734	screen.c	FUNCTION_25	IF_9	IF_10	IF_12
0x5262	            0x85c0	                           test eax, eax	      2734	screen.c	FUNCTION_25	IF_9	IF_10	IF_12
0x5264	            0x750d	                           jne 0x40052b3	      2734	screen.c	FUNCTION_25	IF_9	IF_10	IF_12
0x5266	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      2736	screen.c	FUNCTION_25	IF_9	IF_10	IF_12
0x526d	        0x48894590	             mov qword [rbp - 0x70], rax	      2736	screen.c	FUNCTION_25	IF_9	IF_10	IF_12
0x5271	            0xeb6a	                           jmp 0x400531d	      2736	screen.c	FUNCTION_25	IF_9	IF_10	IF_12
0x5273	    0x488b9530ffff	             mov rdx, qword [rbp - 0xd0]	      2740	screen.c	FUNCTION_25	IF_9	IF_10	ELSE_3	CALL_17
0x527a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2740	screen.c	FUNCTION_25	IF_9	IF_10	ELSE_3	CALL_17
0x5281	          0x4889d6	                            mov rsi, rdx	      2740	screen.c	FUNCTION_25	IF_9	IF_10	ELSE_3	CALL_17
0x5284	          0x4889c7	                            mov rdi, rax	      2740	screen.c	FUNCTION_25	IF_9	IF_10	ELSE_3	CALL_17
0x5287	      0xe800000000	                          call 0x40052cc	      2740	screen.c	FUNCTION_25	IF_9	IF_10	ELSE_3	CALL_17
0x528c	          0x4889c2	                            mov rdx, rax	      2740	screen.c	FUNCTION_25	IF_9	IF_10	ELSE_3	CALL_17
0x528f	          0x4889d0	                            mov rax, rdx	      2740	screen.c	FUNCTION_25	IF_9	IF_10	ELSE_3	CALL_17
0x5292	        0x48c1f83f	                           sar rax, 0x3f	      2740	screen.c	FUNCTION_25	IF_9	IF_10	ELSE_3	CALL_17
0x5296	          0x4831c2	                            xor rdx, rax	      2740	screen.c	FUNCTION_25	IF_9	IF_10	ELSE_3	CALL_17
0x5299	        0x48895590	             mov qword [rbp - 0x70], rdx	      2740	screen.c	FUNCTION_25	IF_9	IF_10	ELSE_3	CALL_17
0x529d	        0x48294590	             sub qword [rbp - 0x70], rax	      2740	screen.c	FUNCTION_25	IF_9	IF_10	ELSE_3	CALL_17
0x52a1	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      2741	screen.c	FUNCTION_25	IF_9	IF_10	ELSE_3	IF_13
0x52a6	            0x7535	                           jne 0x400531d	      2741	screen.c	FUNCTION_25	IF_9	IF_10	ELSE_3	IF_13
0x52a8	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2741	screen.c	FUNCTION_25	IF_9	IF_10	ELSE_3	IF_13
0x52af	    0x8b8038020000	           mov eax, dword [rax + 0x238] 	      2741	screen.c	FUNCTION_25	IF_9	IF_10	ELSE_3	IF_13
0x52b5	            0x85c0	                           test eax, eax	      2741	screen.c	FUNCTION_25	IF_9	IF_10	ELSE_3	IF_13
0x52b7	            0x7424	                            je 0x400531d	      2741	screen.c	FUNCTION_25	IF_9	IF_10	ELSE_3	IF_13
0x52b9	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2741	screen.c	FUNCTION_25	IF_9	IF_10	ELSE_3	IF_13
0x52c0	    0x8b803c020000	           mov eax, dword [rax + 0x23c] 	      2741	screen.c	FUNCTION_25	IF_9	IF_10	ELSE_3	IF_13
0x52c6	            0x85c0	                           test eax, eax	      2741	screen.c	FUNCTION_25	IF_9	IF_10	ELSE_3	IF_13
0x52c8	            0x7413	                            je 0x400531d	      2741	screen.c	FUNCTION_25	IF_9	IF_10	ELSE_3	IF_13
0x52ca	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      2745	screen.c	FUNCTION_25	IF_9	IF_10	ELSE_3	IF_13
0x52d1	        0x48894590	             mov qword [rbp - 0x70], rax	      2745	screen.c	FUNCTION_25	IF_9	IF_10	ELSE_3	IF_13
0x52d5	    0x48c745980000	               mov qword [rbp - 0x68], 0	      2746	screen.c	FUNCTION_25	IF_9	IF_10	ELSE_3	IF_13
0x52dd	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	      2750	screen.c	FUNCTION_25	IF_9	IF_10	CALL_18
0x52e1	    0x8b9578ffffff	             mov edx, dword [rbp - 0x88]	      2750	screen.c	FUNCTION_25	IF_9	IF_10	CALL_18
0x52e7	        0x488b7598	             mov rsi, qword [rbp - 0x68]	      2750	screen.c	FUNCTION_25	IF_9	IF_10	CALL_18
0x52eb	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2750	screen.c	FUNCTION_25	IF_9	IF_10	CALL_18
0x52ef	          0x4889c7	                            mov rdi, rax	      2750	screen.c	FUNCTION_25	IF_9	IF_10	CALL_18
0x52f2	      0xb800000000	                              mov eax, 0	      2750	screen.c	FUNCTION_25	IF_9	IF_10	CALL_18
0x52f7	      0xe800000000	                          call 0x400533c	      2750	screen.c	FUNCTION_25	IF_9	IF_10	CALL_18
0x52fc	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2752	screen.c	FUNCTION_25	IF_9	IF_10	IF_14
0x5303	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      2752	screen.c	FUNCTION_25	IF_9	IF_10	IF_14
0x5309	            0x85c0	                           test eax, eax	      2752	screen.c	FUNCTION_25	IF_9	IF_10	IF_14
0x530b	            0x743a	                            je 0x4005387	      2752	screen.c	FUNCTION_25	IF_9	IF_10	IF_14
0x530d	    0x8b0d00000000	            mov ecx, dword [0x04005353] 	      2754	screen.c	FUNCTION_25	IF_9	IF_10	IF_14	CALL_19
0x5313	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2754	screen.c	FUNCTION_25	IF_9	IF_10	IF_14	CALL_19
0x531a	    0x8b90ac000000	            mov edx, dword [rax + 0xac] 	      2754	screen.c	FUNCTION_25	IF_9	IF_10	IF_14	CALL_19
0x5320	    0x8b8570ffffff	             mov eax, dword [rbp - 0x90]	      2754	screen.c	FUNCTION_25	IF_9	IF_10	IF_14	CALL_19
0x5326	             0x1d0	                            add eax, edx	      2754	screen.c	FUNCTION_25	IF_9	IF_10	IF_14	CALL_19
0x5328	    0x2b8554ffffff	             sub eax, dword [rbp - 0xac]	      2754	screen.c	FUNCTION_25	IF_9	IF_10	IF_14	CALL_19
0x532e	    0x2b8558ffffff	             sub eax, dword [rbp - 0xa8]	      2754	screen.c	FUNCTION_25	IF_9	IF_10	IF_14	CALL_19
0x5334	    0x8b9554ffffff	             mov edx, dword [rbp - 0xac]	      2754	screen.c	FUNCTION_25	IF_9	IF_10	IF_14	CALL_19
0x533a	        0x488d75b0	                   lea rsi, [rbp - 0x50]	      2754	screen.c	FUNCTION_25	IF_9	IF_10	IF_14	CALL_19
0x533e	            0x89c7	                            mov edi, eax	      2754	screen.c	FUNCTION_25	IF_9	IF_10	IF_14	CALL_19
0x5340	      0xe880090000	                 call sym.copy_text_attr	      2754	screen.c	FUNCTION_25	IF_9	IF_10	IF_14	CALL_19
0x5345	            0xeb27	                           jmp 0x40053ae	      2754	screen.c	FUNCTION_25	IF_9	IF_10	IF_14	CALL_19
0x5347	    0x8b0d00000000	            mov ecx, dword [0x0400538d] 	      2758	screen.c	FUNCTION_25	IF_9	IF_10	CALL_22
0x534d	    0x8b9570ffffff	             mov edx, dword [rbp - 0x90]	      2758	screen.c	FUNCTION_25	IF_9	IF_10	CALL_22
0x5353	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	      2758	screen.c	FUNCTION_25	IF_9	IF_10	CALL_22
0x5359	          0x8d3c02	                    lea edi, [rdx + rax]	      2758	screen.c	FUNCTION_25	IF_9	IF_10	CALL_22
0x535c	    0x8b9554ffffff	             mov edx, dword [rbp - 0xac]	      2758	screen.c	FUNCTION_25	IF_9	IF_10	CALL_22
0x5362	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2758	screen.c	FUNCTION_25	IF_9	IF_10	CALL_22
0x5366	          0x4889c6	                            mov rsi, rax	      2758	screen.c	FUNCTION_25	IF_9	IF_10	CALL_22
0x5369	      0xe857090000	                 call sym.copy_text_attr	      2758	screen.c	FUNCTION_25	IF_9	IF_10	CALL_22
0x536e	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      2759	screen.c	FUNCTION_25	IF_9	IF_10
0x5374	     0x18558ffffff	             add dword [rbp - 0xa8], eax	      2759	screen.c	FUNCTION_25	IF_9	IF_10
0x537a	        0x488d7db0	                   lea rdi, [rbp - 0x50]	      2766	screen.c	FUNCTION_25	CALL_23
0x537e	    0x488b8d38ffff	             mov rcx, qword [rbp - 0xc8]	      2766	screen.c	FUNCTION_25	CALL_23
0x5385	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      2766	screen.c	FUNCTION_25	CALL_23
0x5389	    0x488bb530ffff	             mov rsi, qword [rbp - 0xd0]	      2766	screen.c	FUNCTION_25	CALL_23
0x5390	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2766	screen.c	FUNCTION_25	CALL_23
0x5397	          0x4989f8	                             mov r8, rdi	      2766	screen.c	FUNCTION_25	CALL_23
0x539a	          0x4889c7	                            mov rdi, rax	      2766	screen.c	FUNCTION_25	CALL_23
0x539d	      0xe800000000	                          call 0x40053e2	      2766	screen.c	FUNCTION_25	CALL_23
0x53a2	        0x488945a8	             mov qword [rbp - 0x58], rax	      2766	screen.c	FUNCTION_25	CALL_23
0x53a6	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	      2768	screen.c	FUNCTION_25
0x53ac	    0x89855cffffff	             mov dword [rbp - 0xa4], eax	      2768	screen.c	FUNCTION_25
0x53b2	    0x8b9558ffffff	             mov edx, dword [rbp - 0xa8]	      2775	screen.c	FUNCTION_25	CALL_24
0x53b8	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      2775	screen.c	FUNCTION_25	CALL_24
0x53bc	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2775	screen.c	FUNCTION_25	CALL_24
0x53c3	          0x4889ce	                            mov rsi, rcx	      2775	screen.c	FUNCTION_25	CALL_24
0x53c6	          0x4889c7	                            mov rdi, rax	      2775	screen.c	FUNCTION_25	CALL_24
0x53c9	      0xe878f5ffff	             call sym.text_to_screenline	      2775	screen.c	FUNCTION_25	CALL_24
0x53ce	    0x898558ffffff	             mov dword [rbp - 0xa8], eax	      2775	screen.c	FUNCTION_25	CALL_24
0x53d4	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2779	screen.c	FUNCTION_25	IF_15
0x53db	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      2779	screen.c	FUNCTION_25	IF_15
0x53e1	            0x85c0	                           test eax, eax	      2779	screen.c	FUNCTION_25	IF_15
0x53e3	     0xf8410010000	                            je 0x4005539	      2779	screen.c	FUNCTION_25	IF_15
0x53e9	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      2780	screen.c	FUNCTION_25	IF_15
0x53ef	    0x298558ffffff	             sub dword [rbp - 0xa8], eax	      2780	screen.c	FUNCTION_25	IF_15
0x53f5	      0xe9ff000000	                           jmp 0x4005539	      2782	screen.c	FUNCTION_25	WHILE_1
0x53fa	    0x8b0500000000	            mov eax, dword [0x04005440] 	      2789	screen.c	FUNCTION_25	WHILE_1	IF_16
0x5400	            0x85c0	                           test eax, eax	      2789	screen.c	FUNCTION_25	WHILE_1	IF_16
0x5402	     0xf84c6000000	                            je 0x400550e	      2789	screen.c	FUNCTION_25	WHILE_1	IF_16
0x5408	    0x8b0500000000	            mov eax, dword [0x0400544e] 	      2791	screen.c	FUNCTION_25	WHILE_1	IF_16	IF_17
0x540e	          0x83f87f	                           cmp eax, 0x7f	      2791	screen.c	FUNCTION_25	WHILE_1	IF_16	IF_17
0x5411	            0x7e6b	                           jle 0x40054be	      2791	screen.c	FUNCTION_25	WHILE_1	IF_16	IF_17
0x5413	    0x488b05000000	            mov rax, qword [0x0400545a] 	      2793	screen.c	FUNCTION_25	WHILE_1	IF_16	IF_17
0x541a	    0x8b8d70ffffff	             mov ecx, dword [rbp - 0x90]	      2793	screen.c	FUNCTION_25	WHILE_1	IF_16	IF_17
0x5420	    0x8b9558ffffff	             mov edx, dword [rbp - 0xa8]	      2793	screen.c	FUNCTION_25	WHILE_1	IF_16	IF_17
0x5426	             0x1ca	                            add edx, ecx	      2793	screen.c	FUNCTION_25	WHILE_1	IF_16	IF_17
0x5428	          0x4863d2	                         movsxd rdx, edx	      2793	screen.c	FUNCTION_25	WHILE_1	IF_16	IF_17
0x542b	        0x48c1e202	                              shl rdx, 2	      2793	screen.c	FUNCTION_25	WHILE_1	IF_16	IF_17
0x542f	          0x4801d0	                            add rax, rdx	      2793	screen.c	FUNCTION_25	WHILE_1	IF_16	IF_17
0x5432	    0x8b1500000000	            mov edx, dword [0x04005478] 	      2793	screen.c	FUNCTION_25	WHILE_1	IF_16	IF_17
0x5438	            0x8910	                    mov dword [rax], edx	      2793	screen.c	FUNCTION_25	WHILE_1	IF_16	IF_17
0x543a	    0x488b05000000	            mov rax, qword [0x04005481] 	      2794	screen.c	FUNCTION_25	WHILE_1	IF_16	IF_17
0x5441	    0x8b8d70ffffff	             mov ecx, dword [rbp - 0x90]	      2794	screen.c	FUNCTION_25	WHILE_1	IF_16	IF_17
0x5447	    0x8b9558ffffff	             mov edx, dword [rbp - 0xa8]	      2794	screen.c	FUNCTION_25	WHILE_1	IF_16	IF_17
0x544d	             0x1ca	                            add edx, ecx	      2794	screen.c	FUNCTION_25	WHILE_1	IF_16	IF_17
0x544f	          0x4863d2	                         movsxd rdx, edx	      2794	screen.c	FUNCTION_25	WHILE_1	IF_16	IF_17
0x5452	        0x48c1e202	                              shl rdx, 2	      2794	screen.c	FUNCTION_25	WHILE_1	IF_16	IF_17
0x5456	          0x4801d0	                            add rax, rdx	      2794	screen.c	FUNCTION_25	WHILE_1	IF_16	IF_17
0x5459	    0xc70000000000	                      mov dword [rax], 0	      2794	screen.c	FUNCTION_25	WHILE_1	IF_16	IF_17
0x545f	    0x488b15000000	            mov rdx, qword [0x040054a6] 	      2795	screen.c	FUNCTION_25	WHILE_1	IF_16	IF_17
0x5466	    0x8b8d70ffffff	             mov ecx, dword [rbp - 0x90]	      2795	screen.c	FUNCTION_25	WHILE_1	IF_16	IF_17
0x546c	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	      2795	screen.c	FUNCTION_25	WHILE_1	IF_16	IF_17
0x5472	             0x1c8	                            add eax, ecx	      2795	screen.c	FUNCTION_25	WHILE_1	IF_16	IF_17
0x5474	            0x4898	                                    cdqe	      2795	screen.c	FUNCTION_25	WHILE_1	IF_16	IF_17
0x5476	          0x4801d0	                            add rax, rdx	      2795	screen.c	FUNCTION_25	WHILE_1	IF_16	IF_17
0x5479	          0xc60080	                    mov byte [rax], 0x80	      2795	screen.c	FUNCTION_25	WHILE_1	IF_16	IF_17
0x547c	            0xeb47	                           jmp 0x4005505	      2795	screen.c	FUNCTION_25	WHILE_1	IF_16	IF_17
0x547e	    0x488b05000000	            mov rax, qword [0x040054c5] 	      2799	screen.c	FUNCTION_25	WHILE_1	IF_16	ELSE_5
0x5485	    0x8b8d70ffffff	             mov ecx, dword [rbp - 0x90]	      2799	screen.c	FUNCTION_25	WHILE_1	IF_16	ELSE_5
0x548b	    0x8b9558ffffff	             mov edx, dword [rbp - 0xa8]	      2799	screen.c	FUNCTION_25	WHILE_1	IF_16	ELSE_5
0x5491	             0x1ca	                            add edx, ecx	      2799	screen.c	FUNCTION_25	WHILE_1	IF_16	ELSE_5
0x5493	          0x4863d2	                         movsxd rdx, edx	      2799	screen.c	FUNCTION_25	WHILE_1	IF_16	ELSE_5
0x5496	        0x48c1e202	                              shl rdx, 2	      2799	screen.c	FUNCTION_25	WHILE_1	IF_16	ELSE_5
0x549a	          0x4801d0	                            add rax, rdx	      2799	screen.c	FUNCTION_25	WHILE_1	IF_16	ELSE_5
0x549d	    0xc70000000000	                      mov dword [rax], 0	      2799	screen.c	FUNCTION_25	WHILE_1	IF_16	ELSE_5
0x54a3	    0x488b15000000	            mov rdx, qword [0x040054ea] 	      2800	screen.c	FUNCTION_25	WHILE_1	IF_16	ELSE_5
0x54aa	    0x8b8d70ffffff	             mov ecx, dword [rbp - 0x90]	      2800	screen.c	FUNCTION_25	WHILE_1	IF_16	ELSE_5
0x54b0	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	      2800	screen.c	FUNCTION_25	WHILE_1	IF_16	ELSE_5
0x54b6	             0x1c8	                            add eax, ecx	      2800	screen.c	FUNCTION_25	WHILE_1	IF_16	ELSE_5
0x54b8	            0x4898	                                    cdqe	      2800	screen.c	FUNCTION_25	WHILE_1	IF_16	ELSE_5
0x54ba	          0x4801d0	                            add rax, rdx	      2800	screen.c	FUNCTION_25	WHILE_1	IF_16	ELSE_5
0x54bd	    0x8b1500000000	            mov edx, dword [0x04005503] 	      2800	screen.c	FUNCTION_25	WHILE_1	IF_16	ELSE_5
0x54c3	            0x8810	                      mov byte [rax], dl	      2800	screen.c	FUNCTION_25	WHILE_1	IF_16	ELSE_5
0x54c5	    0x838558ffffff	               add dword [rbp - 0xa8], 1	      2802	screen.c	FUNCTION_25	WHILE_1	IF_16
0x54cc	            0xeb2b	                           jmp 0x4005539	      2802	screen.c	FUNCTION_25	WHILE_1	IF_16
0x54ce	    0x488b0d000000	            mov rcx, qword [0x04005515] 	      2806	screen.c	FUNCTION_25	WHILE_1	ELSE_6
0x54d5	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	      2806	screen.c	FUNCTION_25	WHILE_1	ELSE_6
0x54db	          0x8d5001	                      lea edx, [rax + 1]	      2806	screen.c	FUNCTION_25	WHILE_1	ELSE_6
0x54de	    0x899558ffffff	             mov dword [rbp - 0xa8], edx	      2806	screen.c	FUNCTION_25	WHILE_1	ELSE_6
0x54e4	    0x8b9570ffffff	             mov edx, dword [rbp - 0x90]	      2806	screen.c	FUNCTION_25	WHILE_1	ELSE_6
0x54ea	             0x1d0	                            add eax, edx	      2806	screen.c	FUNCTION_25	WHILE_1	ELSE_6
0x54ec	            0x4898	                                    cdqe	      2806	screen.c	FUNCTION_25	WHILE_1	ELSE_6
0x54ee	          0x4801c8	                            add rax, rcx	      2806	screen.c	FUNCTION_25	WHILE_1	ELSE_6
0x54f1	    0x8b1500000000	            mov edx, dword [0x04005537] 	      2806	screen.c	FUNCTION_25	WHILE_1	ELSE_6
0x54f7	            0x8810	                      mov byte [rax], dl	      2806	screen.c	FUNCTION_25	WHILE_1	ELSE_6
0x54f9	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2782	screen.c	FUNCTION_25	WHILE_1
0x5500	    0x8b90ac000000	            mov edx, dword [rax + 0xac] 	      2782	screen.c	FUNCTION_25	WHILE_1
0x5506	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2784	screen.c	FUNCTION_25	WHILE_1
0x550d	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      2784	screen.c	FUNCTION_25	WHILE_1
0x5513	            0x85c0	                           test eax, eax	      2784	screen.c	FUNCTION_25	WHILE_1
0x5515	            0x7408	                            je 0x400555f	      2784	screen.c	FUNCTION_25	WHILE_1
0x5517	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      2784	screen.c	FUNCTION_25	WHILE_1
0x551d	            0xeb05	                           jmp 0x4005564	      2784	screen.c	FUNCTION_25	WHILE_1
0x551f	      0xb800000000	                              mov eax, 0	      2784	screen.c	FUNCTION_25	WHILE_1
0x5524	            0x29c2	                            sub edx, eax	      2784	screen.c	FUNCTION_25	WHILE_1
0x5526	            0x89d0	                            mov eax, edx	      2784	screen.c	FUNCTION_25	WHILE_1
0x5528	    0x3b8558ffffff	             cmp eax, dword [rbp - 0xa8]	      2782	screen.c	FUNCTION_25	WHILE_1
0x552e	     0xf8fc6feffff	                            jg 0x400543a	      2782	screen.c	FUNCTION_25	WHILE_1
0x5534	        0x488d45b0	                   lea rax, [rbp - 0x50]	      2809	screen.c	FUNCTION_25	IF_18
0x5538	        0x483945a8	            cmp qword [rbp - 0x58], rax 	      2809	screen.c	FUNCTION_25	IF_18
0x553c	            0x740c	                            je 0x400558a	      2809	screen.c	FUNCTION_25	IF_18
0x553e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2810	screen.c	FUNCTION_25	CALL_25
0x5542	          0x4889c7	                            mov rdi, rax	      2810	screen.c	FUNCTION_25	CALL_25
0x5545	      0xe800000000	                          call 0x400558a	      2810	screen.c	FUNCTION_25	CALL_25
0x554a	    0x8b0500000000	            mov eax, dword [0x04005590] 	      2816	screen.c	FUNCTION_25	IF_19
0x5550	            0x85c0	                           test eax, eax	      2816	screen.c	FUNCTION_25	IF_19
0x5552	     0xf8445040000	                            je 0x40059dd	      2816	screen.c	FUNCTION_25	IF_19
0x5558	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2816	screen.c	FUNCTION_25	IF_19
0x555f	        0x488b5008	                mov rdx, qword [rax + 8]	      2816	screen.c	FUNCTION_25	IF_19
0x5563	    0x488b05000000	            mov rax, qword [0x040055aa] 	      2816	screen.c	FUNCTION_25	IF_19
0x556a	        0x488b4008	                mov rax, qword [rax + 8]	      2816	screen.c	FUNCTION_25	IF_19
0x556e	          0x4839c2	                            cmp rdx, rax	      2816	screen.c	FUNCTION_25	IF_19
0x5571	     0xf8526040000	                           jne 0x40059dd	      2816	screen.c	FUNCTION_25	IF_19
0x5577	    0x488b05000000	            mov rax, qword [0x040055be] 	      2818	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x557e	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2818	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x5582	    0x488b05000000	            mov rax, qword [0x040055c9] 	      2818	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x5589	          0x4839c2	                            cmp rdx, rax	      2818	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x558c	            0x7419	                            je 0x40055e7	      2818	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x558e	    0x488b05000000	            mov rax, qword [0x040055d5] 	      2818	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x5595	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2818	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x5599	    0x488b05000000	            mov rax, qword [0x040055e0] 	      2818	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x55a0	          0x4839c2	                            cmp rdx, rax	      2818	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x55a3	            0x7c7f	                            jl 0x4005664	      2818	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x55a5	            0xeb3e	                           jmp 0x4005625	      2818	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x55a7	    0x488b05000000	            mov rax, qword [0x040055ee] 	      2818	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x55ae	          0x8b5040	            mov edx, dword [rax + 0x40] 	      2818	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x55b1	    0x8b0500000000	            mov eax, dword [0x040055f7] 	      2818	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x55b7	            0x39c2	                            cmp edx, eax	      2818	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x55b9	            0x7416	                            je 0x4005611	      2818	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x55bb	    0x488b05000000	            mov rax, qword [0x04005602] 	      2818	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x55c2	          0x8b5040	            mov edx, dword [rax + 0x40] 	      2818	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x55c5	    0x8b0500000000	            mov eax, dword [0x0400560b] 	      2818	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x55cb	            0x39c2	                            cmp edx, eax	      2818	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x55cd	            0x7c55	                            jl 0x4005664	      2818	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x55cf	            0xeb14	                           jmp 0x4005625	      2818	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x55d1	    0x488b05000000	            mov rax, qword [0x04005618] 	      2818	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x55d8	          0x8b5044	            mov edx, dword [rax + 0x44] 	      2818	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x55db	    0x8b0500000000	            mov eax, dword [0x04005621] 	      2818	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x55e1	            0x39c2	                            cmp edx, eax	      2818	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x55e3	            0x7c3f	                            jl 0x4005664	      2818	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x55e5	    0x488b05000000	            mov rax, qword [0x0400562c] 	      2818	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x55ec	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2818	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x55f0	    0x488b05000000	            mov rax, qword [0x04005637] 	      2818	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x55f7	          0x4839c2	                            cmp rdx, rax	      2818	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x55fa	            0x7541	                           jne 0x400567d	      2818	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x55fc	    0x488b05000000	            mov rax, qword [0x04005643] 	      2818	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x5603	          0x8b5040	            mov edx, dword [rax + 0x40] 	      2818	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x5606	    0x8b0500000000	            mov eax, dword [0x0400564c] 	      2818	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x560c	            0x39c2	                            cmp edx, eax	      2818	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x560e	            0x752d	                           jne 0x400567d	      2818	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x5610	    0x488b05000000	            mov rax, qword [0x04005657] 	      2818	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x5617	          0x8b5044	            mov edx, dword [rax + 0x44] 	      2818	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x561a	    0x8b0500000000	            mov eax, dword [0x04005660] 	      2818	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x5620	            0x39c2	                            cmp edx, eax	      2818	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x5622	            0x7519	                           jne 0x400567d	      2818	screen.c	FUNCTION_25	IF_19	IF_20	CALL_26
0x5624	    0x488b05000000	            mov rax, qword [0x0400566b] 	      2821	screen.c	FUNCTION_25	IF_19	IF_20
0x562b	        0x4883c038	                           add rax, 0x38	      2821	screen.c	FUNCTION_25	IF_19	IF_20
0x562f	        0x48894580	             mov qword [rbp - 0x80], rax	      2821	screen.c	FUNCTION_25	IF_19	IF_20
0x5633	    0x48c745880000	               mov qword [rbp - 0x78], 0	      2822	screen.c	FUNCTION_25	IF_19	IF_20
0x563b	            0xeb17	                           jmp 0x4005694	      2822	screen.c	FUNCTION_25	IF_19	IF_20
0x563d	    0x48c745800000	               mov qword [rbp - 0x80], 0	      2827	screen.c	FUNCTION_25	IF_19	ELSE_7
0x5645	    0x488b05000000	            mov rax, qword [0x0400568c] 	      2828	screen.c	FUNCTION_25	IF_19	ELSE_7
0x564c	        0x4883c038	                           add rax, 0x38	      2828	screen.c	FUNCTION_25	IF_19	ELSE_7
0x5650	        0x48894588	             mov qword [rbp - 0x78], rax	      2828	screen.c	FUNCTION_25	IF_19	ELSE_7
0x5654	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2830	screen.c	FUNCTION_25	IF_19	IF_21
0x5658	          0x488b00	                    mov rax, qword [rax]	      2830	screen.c	FUNCTION_25	IF_19	IF_21
0x565b	    0x483b8530ffff	             cmp rax, qword [rbp - 0xd0]	      2830	screen.c	FUNCTION_25	IF_19	IF_21
0x5662	     0xf8f35030000	                            jg 0x40059dd	      2830	screen.c	FUNCTION_25	IF_19	IF_21
0x5668	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2831	screen.c	FUNCTION_25	IF_19	IF_21
0x566c	          0x488b00	                    mov rax, qword [rax]	      2831	screen.c	FUNCTION_25	IF_19	IF_21
0x566f	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	      2831	screen.c	FUNCTION_25	IF_19	IF_21
0x5673	     0xf8c24030000	                            jl 0x40059dd	      2831	screen.c	FUNCTION_25	IF_19	IF_21
0x5679	    0x8b0500000000	            mov eax, dword [0x040056bf] 	      2832	screen.c	FUNCTION_25	IF_19	IF_21
0x567f	          0x83f876	                           cmp eax, 0x76	      2832	screen.c	FUNCTION_25	IF_19	IF_21
0x5682	     0xf859d000000	                           jne 0x4005765	      2832	screen.c	FUNCTION_25	IF_19	IF_21
0x5688	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2833	screen.c	FUNCTION_25	IF_19	IF_21
0x568c	          0x488b00	                    mov rax, qword [rax]	      2833	screen.c	FUNCTION_25	IF_19	IF_21
0x568f	    0x483b8530ffff	             cmp rax, qword [rbp - 0xd0]	      2833	screen.c	FUNCTION_25	IF_19	IF_21
0x5696	            0x7c23	                            jl 0x40056fb	      2833	screen.c	FUNCTION_25	IF_19	IF_21
0x5698	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2834	screen.c	FUNCTION_25	IF_19	IF_21
0x569c	          0x488b00	                    mov rax, qword [rax]	      2834	screen.c	FUNCTION_25	IF_19	IF_21
0x569f	    0x483b8530ffff	             cmp rax, qword [rbp - 0xd0]	      2834	screen.c	FUNCTION_25	IF_19	IF_21
0x56a6	     0xf85f1020000	                           jne 0x40059dd	      2834	screen.c	FUNCTION_25	IF_19	IF_21
0x56ac	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2835	screen.c	FUNCTION_25	IF_19	IF_21
0x56b0	          0x8b4008	                mov eax, dword [rax + 8]	      2835	screen.c	FUNCTION_25	IF_19	IF_21
0x56b3	            0x85c0	                           test eax, eax	      2835	screen.c	FUNCTION_25	IF_19	IF_21
0x56b5	     0xf85e2020000	                           jne 0x40059dd	      2835	screen.c	FUNCTION_25	IF_19	IF_21
0x56bb	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2836	screen.c	FUNCTION_25	IF_19	IF_21
0x56bf	          0x488b00	                    mov rax, qword [rax]	      2836	screen.c	FUNCTION_25	IF_19	IF_21
0x56c2	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	      2836	screen.c	FUNCTION_25	IF_19	IF_21
0x56c6	            0x7f5d	                            jg 0x4005765	      2836	screen.c	FUNCTION_25	IF_19	IF_21
0x56c8	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2837	screen.c	FUNCTION_25	IF_19	IF_21
0x56cc	          0x488b00	                    mov rax, qword [rax]	      2837	screen.c	FUNCTION_25	IF_19	IF_21
0x56cf	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	      2837	screen.c	FUNCTION_25	IF_19	IF_21
0x56d3	     0xf85c4020000	                           jne 0x40059dd	      2837	screen.c	FUNCTION_25	IF_19	IF_21
0x56d9	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2838	screen.c	FUNCTION_25	IF_19	IF_21
0x56dd	          0x8b5008	                mov edx, dword [rax + 8]	      2838	screen.c	FUNCTION_25	IF_19	IF_21
0x56e0	    0x488b05000000	            mov rax, qword [0x04005727] 	      2838	screen.c	FUNCTION_25	IF_19	IF_21
0x56e7	           0xfb600	                   movzx eax, byte [rax]	      2838	screen.c	FUNCTION_25	IF_19	IF_21
0x56ea	            0x3c65	                            cmp al, 0x65	      2838	screen.c	FUNCTION_25	IF_19	IF_21
0x56ec	           0xf94c0	                                 sete al	      2838	screen.c	FUNCTION_25	IF_19	IF_21
0x56ef	           0xfb6c0	                           movzx eax, al	      2838	screen.c	FUNCTION_25	IF_19	IF_21
0x56f2	            0x89d3	                            mov ebx, edx	      2838	screen.c	FUNCTION_25	IF_19	IF_21
0x56f4	            0x29c3	                            sub ebx, eax	      2838	screen.c	FUNCTION_25	IF_19	IF_21
0x56f6	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2839	screen.c	FUNCTION_25	IF_19	IF_21	CALL_28
0x56fd	        0x488b4008	                mov rax, qword [rax + 8]	      2839	screen.c	FUNCTION_25	IF_19	IF_21	CALL_28
0x5701	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	      2839	screen.c	FUNCTION_25	IF_19	IF_21	CALL_28
0x5705	      0xba00000000	                              mov edx, 0	      2839	screen.c	FUNCTION_25	IF_19	IF_21	CALL_28
0x570a	          0x4889ce	                            mov rsi, rcx	      2839	screen.c	FUNCTION_25	IF_19	IF_21	CALL_28
0x570d	          0x4889c7	                            mov rdi, rax	      2839	screen.c	FUNCTION_25	IF_19	IF_21	CALL_28
0x5710	      0xe800000000	                          call 0x4005755	      2839	screen.c	FUNCTION_25	IF_19	IF_21	CALL_28
0x5715	          0x4889c7	                            mov rdi, rax	      2839	screen.c	FUNCTION_25	IF_19	IF_21	CALL_28
0x5718	      0xe800000000	                          call 0x400575d	      2839	screen.c	FUNCTION_25	IF_19	IF_21	CALL_28
0x571d	            0x39c3	                            cmp ebx, eax	      2838	screen.c	FUNCTION_25	IF_19	IF_21
0x571f	     0xf8c78020000	                            jl 0x40059dd	      2838	screen.c	FUNCTION_25	IF_19	IF_21
0x5725	    0x8b0500000000	            mov eax, dword [0x0400576b] 	      2841	screen.c	FUNCTION_25	IF_19	IF_21	IF_22
0x572b	          0x83f816	                           cmp eax, 0x16	      2841	screen.c	FUNCTION_25	IF_19	IF_21	IF_22
0x572e	     0xf85a4010000	                           jne 0x4005918	      2841	screen.c	FUNCTION_25	IF_19	IF_21	IF_22
0x5734	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2844	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23
0x573b	          0x8b5060	            mov edx, dword [rax + 0x60] 	      2844	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23
0x573e	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      2844	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23
0x5744	             0x1c2	                            add edx, eax	      2844	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23
0x5746	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2844	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23
0x574d	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2844	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23
0x5753	            0x39c2	                            cmp edx, eax	      2844	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23
0x5755	     0xf8d42020000	                           jge 0x40059dd	      2844	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23
0x575b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2846	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	IF_24
0x5762	          0x8b4064	            mov eax, dword [rax + 0x64] 	      2846	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	IF_24
0x5765	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      2846	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	IF_24
0x576a	            0x7435	                            je 0x40057e1	      2846	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	IF_24
0x576c	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2847	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	IF_24
0x5773	          0x8b5064	            mov edx, dword [rax + 0x64] 	      2847	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	IF_24
0x5776	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      2847	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	IF_24
0x577c	             0x1c2	                            add edx, eax	      2847	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	IF_24
0x577e	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2848	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	IF_24
0x5785	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2848	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	IF_24
0x578b	            0x39c2	                            cmp edx, eax	      2847	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	IF_24
0x578d	            0x7d12	                           jge 0x40057e1	      2847	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	IF_24
0x578f	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2849	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	IF_24
0x5796	          0x8b4064	            mov eax, dword [rax + 0x64] 	      2849	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	IF_24
0x5799	    0x898554ffffff	             mov dword [rbp - 0xac], eax	      2849	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	IF_24
0x579f	            0xeb19	                           jmp 0x40057fa	      2849	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	IF_24
0x57a1	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2851	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	ELSE_8
0x57a8	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2851	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	ELSE_8
0x57ae	    0x2b855cffffff	             sub eax, dword [rbp - 0xa4]	      2851	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	ELSE_8
0x57b4	    0x898554ffffff	             mov dword [rbp - 0xac], eax	      2851	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	ELSE_8
0x57ba	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x57c1	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x57c7	            0x85c0	                           test eax, eax	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x57c9	     0xf849b000000	                            je 0x40058aa	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x57cf	    0xc78560ffffff	               mov dword [rbp - 0xa0], 0	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x57d9	            0xeb6a	                           jmp 0x4005885	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x57db	    0x488b15000000	            mov rdx, qword [0x04005822] 	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x57e2	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x57e9	    0x8b88ac000000	            mov ecx, dword [rax + 0xac] 	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x57ef	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x57f6	          0x8b7060	            mov esi, dword [rax + 0x60] 	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x57f9	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x57ff	             0x1f0	                            add eax, esi	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x5801	            0x89ce	                            mov esi, ecx	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x5803	            0x29c6	                            sub esi, eax	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x5805	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x580c	          0x8b4060	            mov eax, dword [rax + 0x60] 	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x580f	    0x8b8d54ffffff	             mov ecx, dword [rbp - 0xac]	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x5815	            0x29c1	                            sub ecx, eax	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x5817	            0x89c8	                            mov eax, ecx	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x5819	            0x29c6	                            sub esi, eax	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x581b	            0x89f1	                            mov ecx, esi	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x581d	    0x8b8570ffffff	             mov eax, dword [rbp - 0x90]	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x5823	             0x1c1	                            add ecx, eax	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x5825	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x582b	             0x1c8	                            add eax, ecx	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x582d	            0x4898	                                    cdqe	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x582f	          0x4801c0	                            add rax, rax	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x5832	          0x4801d0	                            add rax, rdx	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x5835	    0x8b1500000000	            mov edx, dword [0x0400587b] 	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x583b	          0x668910	                      mov word [rax], dx	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x583e	    0x838560ffffff	               add dword [rbp - 0xa0], 1	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x5845	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x584c	          0x8b4060	            mov eax, dword [rax + 0x60] 	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x584f	    0x8b9554ffffff	             mov edx, dword [rbp - 0xac]	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x5855	            0x29c2	                            sub edx, eax	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x5857	            0x89d0	                            mov eax, edx	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x5859	    0x3b8560ffffff	             cmp eax, dword [rbp - 0xa0]	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x585f	     0xf8f76ffffff	                            jg 0x400581b	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x5865	      0xe933010000	                           jmp 0x40059dd	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x586a	    0xc78560ffffff	               mov dword [rbp - 0xa0], 0	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x5874	            0xeb41	                           jmp 0x40058f7	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x5876	    0x488b15000000	            mov rdx, qword [0x040058bd] 	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x587d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x5884	          0x8b4860	            mov ecx, dword [rax + 0x60] 	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x5887	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x588d	             0x1c1	                            add ecx, eax	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x588f	    0x8b8570ffffff	             mov eax, dword [rbp - 0x90]	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x5895	             0x1c1	                            add ecx, eax	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x5897	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x589d	             0x1c8	                            add eax, ecx	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x589f	            0x4898	                                    cdqe	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x58a1	          0x4801c0	                            add rax, rax	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x58a4	          0x4801d0	                            add rax, rdx	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x58a7	    0x8b1500000000	            mov edx, dword [0x040058ed] 	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x58ad	          0x668910	                      mov word [rax], dx	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x58b0	    0x838560ffffff	               add dword [rbp - 0xa0], 1	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x58b7	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x58be	          0x8b4060	            mov eax, dword [rax + 0x60] 	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x58c1	    0x8b9554ffffff	             mov edx, dword [rbp - 0xac]	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x58c7	            0x29c2	                            sub edx, eax	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x58c9	            0x89d0	                            mov eax, edx	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x58cb	    0x3b8560ffffff	             cmp eax, dword [rbp - 0xa0]	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x58d1	            0x7fa3	                            jg 0x40058b6	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x58d3	      0xe9c5000000	                           jmp 0x40059dd	      2852	screen.c	FUNCTION_25	IF_19	IF_21	IF_22	IF_23	CALL_30
0x58d8	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2859	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x58df	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      2859	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x58e5	            0x85c0	                           test eax, eax	      2859	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x58e7	            0x7457	                            je 0x4005980	      2859	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x58e9	    0xc78560ffffff	               mov dword [rbp - 0xa0], 0	      2859	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x58f3	            0xeb2e	                           jmp 0x4005963	      2859	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x58f5	    0x488b05000000	            mov rax, qword [0x0400593c] 	      2859	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x58fc	    0x8b8d70ffffff	             mov ecx, dword [rbp - 0x90]	      2859	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x5902	    0x8b9560ffffff	             mov edx, dword [rbp - 0xa0]	      2859	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x5908	             0x1ca	                            add edx, ecx	      2859	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x590a	          0x4863d2	                         movsxd rdx, edx	      2859	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x590d	          0x4801d2	                            add rdx, rdx	      2859	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x5910	          0x4801d0	                            add rax, rdx	      2859	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x5913	    0x8b1500000000	            mov edx, dword [0x04005959] 	      2859	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x5919	          0x668910	                      mov word [rax], dx	      2859	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x591c	    0x838560ffffff	               add dword [rbp - 0xa0], 1	      2859	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x5923	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2859	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x592a	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2859	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x5930	    0x2b855cffffff	             sub eax, dword [rbp - 0xa4]	      2859	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x5936	    0x3b8560ffffff	             cmp eax, dword [rbp - 0xa0]	      2859	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x593c	            0x7fb7	                            jg 0x4005935	      2859	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x593e	            0xeb5d	                           jmp 0x40059dd	      2859	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x5940	    0xc78560ffffff	               mov dword [rbp - 0xa0], 0	      2859	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x594a	            0xeb36	                           jmp 0x40059c2	      2859	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x594c	    0x488b05000000	            mov rax, qword [0x04005993] 	      2859	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x5953	    0x8b8d70ffffff	             mov ecx, dword [rbp - 0x90]	      2859	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x5959	    0x8b955cffffff	             mov edx, dword [rbp - 0xa4]	      2859	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x595f	             0x1d1	                            add ecx, edx	      2859	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x5961	    0x8b9560ffffff	             mov edx, dword [rbp - 0xa0]	      2859	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x5967	             0x1ca	                            add edx, ecx	      2859	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x5969	          0x4863d2	                         movsxd rdx, edx	      2859	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x596c	          0x4801d2	                            add rdx, rdx	      2859	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x596f	          0x4801d0	                            add rax, rdx	      2859	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x5972	    0x8b1500000000	            mov edx, dword [0x040059b8] 	      2859	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x5978	          0x668910	                      mov word [rax], dx	      2859	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x597b	    0x838560ffffff	               add dword [rbp - 0xa0], 1	      2859	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x5982	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2859	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x5989	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2859	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x598f	    0x2b855cffffff	             sub eax, dword [rbp - 0xa4]	      2859	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x5995	    0x3b8560ffffff	             cmp eax, dword [rbp - 0xa0]	      2859	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x599b	            0x7faf	                            jg 0x400598c	      2859	screen.c	FUNCTION_25	IF_19	IF_21	ELSE_9	CALL_32
0x599d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2866	screen.c	FUNCTION_25	IF_25
0x59a4	    0x488b80380500	           mov rax, qword [rax + 0x538] 	      2866	screen.c	FUNCTION_25	IF_25
0x59ab	          0x4885c0	                           test rax, rax	      2866	screen.c	FUNCTION_25	IF_25
0x59ae	     0xf843f010000	                            je 0x4005b33	      2866	screen.c	FUNCTION_25	IF_25
0x59b4	    0xc78568ffffff	               mov dword [rbp - 0x98], 0	      2868	screen.c	FUNCTION_25	IF_25
0x59be	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2869	screen.c	FUNCTION_25	IF_25
0x59c5	    0x488b80380500	           mov rax, qword [rax + 0x538] 	      2869	screen.c	FUNCTION_25	IF_25
0x59cc	    0x8b9568ffffff	             mov edx, dword [rbp - 0x98]	      2869	screen.c	FUNCTION_25	IF_25
0x59d2	          0x4863d2	                         movsxd rdx, edx	      2869	screen.c	FUNCTION_25	IF_25
0x59d5	        0x48c1e202	                              shl rdx, 2	      2869	screen.c	FUNCTION_25	IF_25
0x59d9	          0x4801d0	                            add rax, rdx	      2869	screen.c	FUNCTION_25	IF_25
0x59dc	            0x8b00	                    mov eax, dword [rax]	      2869	screen.c	FUNCTION_25	IF_25
0x59de	    0x89856cffffff	             mov dword [rbp - 0x94], eax	      2869	screen.c	FUNCTION_25	IF_25
0x59e4	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      2870	screen.c	FUNCTION_25	IF_25
0x59ea	    0x89857cffffff	             mov dword [rbp - 0x84], eax	      2870	screen.c	FUNCTION_25	IF_25
0x59f0	      0xe9f1000000	                           jmp 0x4005b26	      2872	screen.c	FUNCTION_25	IF_25	WHILE_2
0x59f5	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      2874	screen.c	FUNCTION_25	IF_25	WHILE_2
0x59fb	     0x1855cffffff	             add dword [rbp - 0xa4], eax	      2874	screen.c	FUNCTION_25	IF_25	WHILE_2
0x5a01	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2875	screen.c	FUNCTION_25	IF_25	WHILE_2	IF_26
0x5a08	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      2875	screen.c	FUNCTION_25	IF_25	WHILE_2	IF_26
0x5a0e	            0x85c0	                           test eax, eax	      2875	screen.c	FUNCTION_25	IF_25	WHILE_2	IF_26
0x5a10	            0x7415	                            je 0x4005a67	      2875	screen.c	FUNCTION_25	IF_25	WHILE_2	IF_26
0x5a12	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2876	screen.c	FUNCTION_25	IF_25	WHILE_2	IF_26
0x5a19	    0x8b8098000000	            mov eax, dword [rax + 0x98] 	      2876	screen.c	FUNCTION_25	IF_25	WHILE_2	IF_26
0x5a1f	    0x29855cffffff	             sub dword [rbp - 0xa4], eax	      2876	screen.c	FUNCTION_25	IF_25	WHILE_2	IF_26
0x5a25	            0xeb13	                           jmp 0x4005a7a	      2876	screen.c	FUNCTION_25	IF_25	WHILE_2	IF_26
0x5a27	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2878	screen.c	FUNCTION_25	IF_25	WHILE_2	ELSE_10
0x5a2e	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	      2878	screen.c	FUNCTION_25	IF_25	WHILE_2	ELSE_10
0x5a34	    0x29855cffffff	             sub dword [rbp - 0xa4], eax	      2878	screen.c	FUNCTION_25	IF_25	WHILE_2	ELSE_10
0x5a3a	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 0	      2879	screen.c	FUNCTION_25	IF_25	WHILE_2	IF_27
0x5a41	            0x786a	                            js 0x4005aed	      2879	screen.c	FUNCTION_25	IF_25	WHILE_2	IF_27
0x5a43	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2879	screen.c	FUNCTION_25	IF_25	WHILE_2	IF_27
0x5a4a	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2879	screen.c	FUNCTION_25	IF_25	WHILE_2	IF_27
0x5a50	    0x3b855cffffff	             cmp eax, dword [rbp - 0xa4]	      2879	screen.c	FUNCTION_25	IF_25	WHILE_2	IF_27
0x5a56	            0x7e55	                           jle 0x4005aed	      2879	screen.c	FUNCTION_25	IF_25	WHILE_2	IF_27
0x5a58	    0x488b05000000	            mov rax, qword [0x04005a9f] 	      2880	screen.c	FUNCTION_25	IF_25	WHILE_2	IF_27	CALL_33
0x5a5f	    0x8b8d70ffffff	             mov ecx, dword [rbp - 0x90]	      2880	screen.c	FUNCTION_25	IF_25	WHILE_2	IF_27	CALL_33
0x5a65	    0x8b955cffffff	             mov edx, dword [rbp - 0xa4]	      2880	screen.c	FUNCTION_25	IF_25	WHILE_2	IF_27	CALL_33
0x5a6b	             0x1ca	                            add edx, ecx	      2880	screen.c	FUNCTION_25	IF_25	WHILE_2	IF_27	CALL_33
0x5a6d	          0x4863d2	                         movsxd rdx, edx	      2880	screen.c	FUNCTION_25	IF_25	WHILE_2	IF_27	CALL_33
0x5a70	          0x4801d2	                            add rdx, rdx	      2880	screen.c	FUNCTION_25	IF_25	WHILE_2	IF_27	CALL_33
0x5a73	        0x488d1c10	                    lea rbx, [rax + rdx]	      2880	screen.c	FUNCTION_25	IF_25	WHILE_2	IF_27	CALL_33
0x5a77	    0x8b1500000000	            mov edx, dword [0x04005abd] 	      2880	screen.c	FUNCTION_25	IF_25	WHILE_2	IF_27	CALL_33
0x5a7d	    0x488b05000000	            mov rax, qword [0x04005ac4] 	      2881	screen.c	FUNCTION_25	IF_25	WHILE_2	CALL_34
0x5a84	    0x8bb570ffffff	             mov esi, dword [rbp - 0x90]	      2881	screen.c	FUNCTION_25	IF_25	WHILE_2	CALL_34
0x5a8a	    0x8b8d5cffffff	             mov ecx, dword [rbp - 0xa4]	      2881	screen.c	FUNCTION_25	IF_25	WHILE_2	CALL_34
0x5a90	             0x1f1	                            add ecx, esi	      2881	screen.c	FUNCTION_25	IF_25	WHILE_2	CALL_34
0x5a92	          0x4863c9	                         movsxd rcx, ecx	      2881	screen.c	FUNCTION_25	IF_25	WHILE_2	CALL_34
0x5a95	          0x4801c9	                            add rcx, rcx	      2881	screen.c	FUNCTION_25	IF_25	WHILE_2	CALL_34
0x5a98	          0x4801c8	                            add rax, rcx	      2881	screen.c	FUNCTION_25	IF_25	WHILE_2	CALL_34
0x5a9b	           0xfb700	                   movzx eax, word [rax]	      2881	screen.c	FUNCTION_25	IF_25	WHILE_2	CALL_34
0x5a9e	           0xfb7c0	                           movzx eax, ax	      2880	screen.c	FUNCTION_25	IF_25	WHILE_2	IF_27	CALL_33
0x5aa1	            0x89d6	                            mov esi, edx	      2880	screen.c	FUNCTION_25	IF_25	WHILE_2	IF_27	CALL_33
0x5aa3	            0x89c7	                            mov edi, eax	      2880	screen.c	FUNCTION_25	IF_25	WHILE_2	IF_27	CALL_33
0x5aa5	      0xe800000000	                          call 0x4005aea	      2880	screen.c	FUNCTION_25	IF_25	WHILE_2	IF_27	CALL_33
0x5aaa	          0x668903	                      mov word [rbx], ax	      2880	screen.c	FUNCTION_25	IF_25	WHILE_2	IF_27	CALL_33
0x5aad	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	      2882	screen.c	FUNCTION_25	IF_25	WHILE_2
0x5ab3	    0x89855cffffff	             mov dword [rbp - 0xa4], eax	      2882	screen.c	FUNCTION_25	IF_25	WHILE_2
0x5ab9	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2883	screen.c	FUNCTION_25	IF_25	WHILE_2
0x5ac0	    0x488b80380500	           mov rax, qword [rax + 0x538] 	      2883	screen.c	FUNCTION_25	IF_25	WHILE_2
0x5ac7	    0x838568ffffff	               add dword [rbp - 0x98], 1	      2883	screen.c	FUNCTION_25	IF_25	WHILE_2
0x5ace	    0x8b9568ffffff	             mov edx, dword [rbp - 0x98]	      2883	screen.c	FUNCTION_25	IF_25	WHILE_2
0x5ad4	          0x4863d2	                         movsxd rdx, edx	      2883	screen.c	FUNCTION_25	IF_25	WHILE_2
0x5ad7	        0x48c1e202	                              shl rdx, 2	      2883	screen.c	FUNCTION_25	IF_25	WHILE_2
0x5adb	          0x4801d0	                            add rax, rdx	      2883	screen.c	FUNCTION_25	IF_25	WHILE_2
0x5ade	            0x8b00	                    mov eax, dword [rax]	      2883	screen.c	FUNCTION_25	IF_25	WHILE_2
0x5ae0	    0x89856cffffff	             mov dword [rbp - 0x94], eax	      2883	screen.c	FUNCTION_25	IF_25	WHILE_2
0x5ae6	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	      2872	screen.c	FUNCTION_25	IF_25	WHILE_2
0x5aed	     0xf8902ffffff	                           jns 0x4005a35	      2872	screen.c	FUNCTION_25	IF_25	WHILE_2
0x5af3	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2888	screen.c	FUNCTION_25	IF_28
0x5afa	    0x8b806c020000	           mov eax, dword [rax + 0x26c] 	      2888	screen.c	FUNCTION_25	IF_28
0x5b00	            0x85c0	                           test eax, eax	      2888	screen.c	FUNCTION_25	IF_28
0x5b02	     0xf84bf000000	                            je 0x4005c07	      2888	screen.c	FUNCTION_25	IF_28
0x5b08	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2890	screen.c	FUNCTION_25	IF_28
0x5b0f	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	      2890	screen.c	FUNCTION_25	IF_28
0x5b15	     0x1855cffffff	             add dword [rbp - 0xa4], eax	      2890	screen.c	FUNCTION_25	IF_28
0x5b1b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2891	screen.c	FUNCTION_25	IF_28	IF_29
0x5b22	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      2891	screen.c	FUNCTION_25	IF_28	IF_29
0x5b28	            0x85c0	                           test eax, eax	      2891	screen.c	FUNCTION_25	IF_28	IF_29
0x5b2a	            0x7415	                            je 0x4005b81	      2891	screen.c	FUNCTION_25	IF_28	IF_29
0x5b2c	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2892	screen.c	FUNCTION_25	IF_28	IF_29
0x5b33	    0x8b8098000000	            mov eax, dword [rax + 0x98] 	      2892	screen.c	FUNCTION_25	IF_28	IF_29
0x5b39	    0x29855cffffff	             sub dword [rbp - 0xa4], eax	      2892	screen.c	FUNCTION_25	IF_28	IF_29
0x5b3f	            0xeb13	                           jmp 0x4005b94	      2892	screen.c	FUNCTION_25	IF_28	IF_29
0x5b41	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2894	screen.c	FUNCTION_25	IF_28	ELSE_11
0x5b48	    0x8b8094000000	            mov eax, dword [rax + 0x94] 	      2894	screen.c	FUNCTION_25	IF_28	ELSE_11
0x5b4e	    0x29855cffffff	             sub dword [rbp - 0xa4], eax	      2894	screen.c	FUNCTION_25	IF_28	ELSE_11
0x5b54	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 0	      2895	screen.c	FUNCTION_25	IF_28	IF_30
0x5b5b	            0x786a	                            js 0x4005c07	      2895	screen.c	FUNCTION_25	IF_28	IF_30
0x5b5d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2895	screen.c	FUNCTION_25	IF_28	IF_30
0x5b64	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      2895	screen.c	FUNCTION_25	IF_28	IF_30
0x5b6a	    0x3b855cffffff	             cmp eax, dword [rbp - 0xa4]	      2895	screen.c	FUNCTION_25	IF_28	IF_30
0x5b70	            0x7e55	                           jle 0x4005c07	      2895	screen.c	FUNCTION_25	IF_28	IF_30
0x5b72	    0x488b05000000	            mov rax, qword [0x04005bb9] 	      2896	screen.c	FUNCTION_25	IF_28	IF_30	CALL_35
0x5b79	    0x8b8d70ffffff	             mov ecx, dword [rbp - 0x90]	      2896	screen.c	FUNCTION_25	IF_28	IF_30	CALL_35
0x5b7f	    0x8b955cffffff	             mov edx, dword [rbp - 0xa4]	      2896	screen.c	FUNCTION_25	IF_28	IF_30	CALL_35
0x5b85	             0x1ca	                            add edx, ecx	      2896	screen.c	FUNCTION_25	IF_28	IF_30	CALL_35
0x5b87	          0x4863d2	                         movsxd rdx, edx	      2896	screen.c	FUNCTION_25	IF_28	IF_30	CALL_35
0x5b8a	          0x4801d2	                            add rdx, rdx	      2896	screen.c	FUNCTION_25	IF_28	IF_30	CALL_35
0x5b8d	        0x488d1c10	                    lea rbx, [rax + rdx]	      2896	screen.c	FUNCTION_25	IF_28	IF_30	CALL_35
0x5b91	    0x8b1500000000	            mov edx, dword [0x04005bd7] 	      2896	screen.c	FUNCTION_25	IF_28	IF_30	CALL_35
0x5b97	    0x488b05000000	            mov rax, qword [0x04005bde] 	      2897	screen.c	FUNCTION_25	IF_28	CALL_36
0x5b9e	    0x8bb570ffffff	             mov esi, dword [rbp - 0x90]	      2897	screen.c	FUNCTION_25	IF_28	CALL_36
0x5ba4	    0x8b8d5cffffff	             mov ecx, dword [rbp - 0xa4]	      2897	screen.c	FUNCTION_25	IF_28	CALL_36
0x5baa	             0x1f1	                            add ecx, esi	      2897	screen.c	FUNCTION_25	IF_28	CALL_36
0x5bac	          0x4863c9	                         movsxd rcx, ecx	      2897	screen.c	FUNCTION_25	IF_28	CALL_36
0x5baf	          0x4801c9	                            add rcx, rcx	      2897	screen.c	FUNCTION_25	IF_28	CALL_36
0x5bb2	          0x4801c8	                            add rax, rcx	      2897	screen.c	FUNCTION_25	IF_28	CALL_36
0x5bb5	           0xfb700	                   movzx eax, word [rax]	      2897	screen.c	FUNCTION_25	IF_28	CALL_36
0x5bb8	           0xfb7c0	                           movzx eax, ax	      2896	screen.c	FUNCTION_25	IF_28	IF_30	CALL_35
0x5bbb	            0x89d6	                            mov esi, edx	      2896	screen.c	FUNCTION_25	IF_28	IF_30	CALL_35
0x5bbd	            0x89c7	                            mov edi, eax	      2896	screen.c	FUNCTION_25	IF_28	IF_30	CALL_35
0x5bbf	      0xe800000000	                          call 0x4005c04	      2896	screen.c	FUNCTION_25	IF_28	IF_30	CALL_35
0x5bc4	          0x668903	                      mov word [rbx], ax	      2896	screen.c	FUNCTION_25	IF_28	IF_30	CALL_35
0x5bc7	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2901	screen.c	FUNCTION_25	CALL_38
0x5bce	    0x8b88ac000000	            mov ecx, dword [rax + 0xac] 	      2901	screen.c	FUNCTION_25	CALL_38
0x5bd4	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2901	screen.c	FUNCTION_25	CALL_38
0x5bdb	    0x8b90ac000000	            mov edx, dword [rax + 0xac] 	      2901	screen.c	FUNCTION_25	CALL_38
0x5be1	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2901	screen.c	FUNCTION_25	CALL_38
0x5be8	    0x8b80a8000000	            mov eax, dword [rax + 0xa8] 	      2901	screen.c	FUNCTION_25	CALL_38
0x5bee	    0x488bb548ffff	             mov rsi, qword [rbp - 0xb8]	      2901	screen.c	FUNCTION_25	CALL_38
0x5bf5	    0x8bbe9c000000	            mov edi, dword [rsi + 0x9c] 	      2901	screen.c	FUNCTION_25	CALL_38
0x5bfb	    0x488bb548ffff	             mov rsi, qword [rbp - 0xb8]	      2901	screen.c	FUNCTION_25	CALL_38
0x5c02	    0x8bb6a8010000	           mov esi, dword [rsi + 0x1a8] 	      2901	screen.c	FUNCTION_25	CALL_38
0x5c08	             0x1f7	                            add edi, esi	      2901	screen.c	FUNCTION_25	CALL_38
0x5c0a	    0x8bb52cffffff	             mov esi, dword [rbp - 0xd4]	      2901	screen.c	FUNCTION_25	CALL_38
0x5c10	             0x1f7	                            add edi, esi	      2901	screen.c	FUNCTION_25	CALL_38
0x5c12	    0x41b800000000	                              mov r8d, 0	      2901	screen.c	FUNCTION_25	CALL_38
0x5c18	            0x89c6	                            mov esi, eax	      2901	screen.c	FUNCTION_25	CALL_38
0x5c1a	      0xe800000000	                          call 0x4005c5f	      2901	screen.c	FUNCTION_25	CALL_38
0x5c1f	    0x488b05000000	            mov rax, qword [0x04005c66] 	      2908	screen.c	FUNCTION_25	IF_31
0x5c26	    0x48398548ffff	            cmp qword [rbp - 0xb8], rax 	      2908	screen.c	FUNCTION_25	IF_31
0x5c2d	            0x7577	                           jne 0x4005ce6	      2908	screen.c	FUNCTION_25	IF_31
0x5c2f	    0x488b05000000	            mov rax, qword [0x04005c76] 	      2909	screen.c	FUNCTION_25	IF_31
0x5c36	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2909	screen.c	FUNCTION_25	IF_31
0x5c3a	    0x483b8530ffff	             cmp rax, qword [rbp - 0xd0]	      2909	screen.c	FUNCTION_25	IF_31
0x5c41	            0x7c63	                            jl 0x4005ce6	      2909	screen.c	FUNCTION_25	IF_31
0x5c43	    0x488b05000000	            mov rax, qword [0x04005c8a] 	      2910	screen.c	FUNCTION_25	IF_31
0x5c4a	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2910	screen.c	FUNCTION_25	IF_31
0x5c4e	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	      2910	screen.c	FUNCTION_25	IF_31
0x5c52	            0x7f52	                            jg 0x4005ce6	      2910	screen.c	FUNCTION_25	IF_31
0x5c54	    0x488b05000000	            mov rax, qword [0x04005c9b] 	      2912	screen.c	FUNCTION_25	IF_31
0x5c5b	    0x8b952cffffff	             mov edx, dword [rbp - 0xd4]	      2912	screen.c	FUNCTION_25	IF_31
0x5c61	    0x8990d4000000	             mov dword [rax + 0xd4], edx	      2912	screen.c	FUNCTION_25	IF_31
0x5c67	    0x488b05000000	            mov rax, qword [0x04005cae] 	      2913	screen.c	FUNCTION_25	IF_31
0x5c6e	    0xc780cc000000	               mov dword [rax + 0xcc], 1	      2913	screen.c	FUNCTION_25	IF_31
0x5c78	    0x488b05000000	            mov rax, qword [0x04005cbf] 	      2914	screen.c	FUNCTION_25	IF_31
0x5c7f	    0xc780d0000000	               mov dword [rax + 0xd0], 1	      2914	screen.c	FUNCTION_25	IF_31
0x5c89	    0x488b05000000	            mov rax, qword [0x04005cd0] 	      2915	screen.c	FUNCTION_25	IF_31
0x5c90	    0x488b15000000	            mov rdx, qword [0x04005cd7] 	      2915	screen.c	FUNCTION_25	IF_31
0x5c97	    0x8b92b4000000	            mov edx, dword [rdx + 0xb4] 	      2915	screen.c	FUNCTION_25	IF_31
0x5c9d	          0x83ca18	                            or edx, 0x18	      2915	screen.c	FUNCTION_25	IF_31
0x5ca0	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2915	screen.c	FUNCTION_25	IF_31
0x5ca6	              0x90	                                     nop	      2917	screen.c	FUNCTION_25
0x5ca7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2917	screen.c	FUNCTION_25
0x5cab	    0x644833042528	                xor rax, qword fs:[0x28]	      2917	screen.c	FUNCTION_25
0x5cb4	            0x7405	                            je 0x4005cfb	      2917	screen.c	FUNCTION_25
0x5cb6	      0xe800000000	                          call 0x4005cfb	      2917	screen.c	FUNCTION_25
0x5cbb	    0x4881c4d80000	                           add rsp, 0xd8	      2917	screen.c	FUNCTION_25
0x5cc2	              0x5b	                                 pop rbx	      2917	screen.c	FUNCTION_25
0x5cc3	              0x5d	                                 pop rbp	      2917	screen.c	FUNCTION_25
0x5cc4	              0xc3	                                     ret	      2917	screen.c	FUNCTION_25
screenclear	DO,0:functions,0:CALL,3:ELSE,0:IF,0:WHILE,0:FOR,0:SWITCH,0	10
0x1203e	              0x55	                                push rbp	      9047	screen.c	FUNCTION_71
0x1203f	          0x4889e5	                            mov rbp, rsp	      9047	screen.c	FUNCTION_71
0x12042	      0xbf00000000	                              mov edi, 0	      9048	screen.c	FUNCTION_71	CALL_1
0x12047	      0xe800000000	                          call 0x401208c	      9048	screen.c	FUNCTION_71	CALL_1
0x1204c	      0xbf00000000	                              mov edi, 0	      9049	screen.c	FUNCTION_71	CALL_2
0x12051	      0xe800000000	                          call 0x4012096	      9049	screen.c	FUNCTION_71	CALL_2
0x12056	      0xe803000000	                   call sym.screenclear2	      9050	screen.c	FUNCTION_71	CALL_3
0x1205b	              0x90	                                     nop	      9051	screen.c	FUNCTION_71
0x1205c	              0x5d	                                 pop rbp	      9051	screen.c	FUNCTION_71
0x1205d	              0xc3	                                     ret	      9051	screen.c	FUNCTION_71
skip_status_match_char	DO,0:functions,0:CALL,2:ELSE,0:IF,2:WHILE,0:FOR,0:SWITCH,0	59
0xd090	              0x55	                                push rbp	      6582	screen.c	FUNCTION_40
0xd091	          0x4889e5	                            mov rbp, rsp	      6582	screen.c	FUNCTION_40
0xd094	        0x4883ec10	                           sub rsp, 0x10	      6582	screen.c	FUNCTION_40
0xd098	        0x48897df8	                mov qword [rbp - 8], rdi	      6582	screen.c	FUNCTION_40
0xd09c	        0x488975f0	             mov qword [rbp - 0x10], rsi	      6582	screen.c	FUNCTION_40
0xd0a0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6583	screen.c	FUNCTION_40	IF_1	CALL_1
0xd0a4	          0x4889c7	                            mov rdi, rax	      6583	screen.c	FUNCTION_40	IF_1	CALL_1
0xd0a7	      0xe800000000	                          call 0x400d0ec	      6583	screen.c	FUNCTION_40	IF_1	CALL_1
0xd0ac	            0x85c0	                           test eax, eax	      6583	screen.c	FUNCTION_40	IF_1	CALL_1
0xd0ae	            0x740b	                            je 0x400d0fb	      6583	screen.c	FUNCTION_40	IF_1	CALL_1
0xd0b0	        0x488b45f8	                mov rax, qword [rbp - 8]	      6583	screen.c	FUNCTION_40	IF_1	CALL_1
0xd0b4	            0x8b00	                    mov eax, dword [rax]	      6583	screen.c	FUNCTION_40	IF_1	CALL_1
0xd0b6	          0x83f808	                              cmp eax, 8	      6583	screen.c	FUNCTION_40	IF_1	CALL_1
0xd0b9	            0x753b	                           jne 0x400d136	      6583	screen.c	FUNCTION_40	IF_1	CALL_1
0xd0bb	        0x488b45f8	                mov rax, qword [rbp - 8]	      6585	screen.c	FUNCTION_40	IF_1
0xd0bf	            0x8b00	                    mov eax, dword [rax]	      6585	screen.c	FUNCTION_40	IF_1
0xd0c1	          0x83f80b	                            cmp eax, 0xb	      6585	screen.c	FUNCTION_40	IF_1
0xd0c4	            0x740b	                            je 0x400d111	      6585	screen.c	FUNCTION_40	IF_1
0xd0c6	        0x488b45f8	                mov rax, qword [rbp - 8]	      6586	screen.c	FUNCTION_40	IF_1
0xd0ca	            0x8b00	                    mov eax, dword [rax]	      6586	screen.c	FUNCTION_40	IF_1
0xd0cc	          0x83f815	                           cmp eax, 0x15	      6586	screen.c	FUNCTION_40	IF_1
0xd0cf	            0x7565	                           jne 0x400d176	      6586	screen.c	FUNCTION_40	IF_1
0xd0d1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6587	screen.c	FUNCTION_40	IF_1
0xd0d5	           0xfb600	                   movzx eax, byte [rax]	      6587	screen.c	FUNCTION_40	IF_1
0xd0d8	            0x3c09	                               cmp al, 9	      6587	screen.c	FUNCTION_40	IF_1
0xd0da	            0x741a	                            je 0x400d136	      6587	screen.c	FUNCTION_40	IF_1
0xd0dc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6587	screen.c	FUNCTION_40	IF_1
0xd0e0	           0xfb600	                   movzx eax, byte [rax]	      6587	screen.c	FUNCTION_40	IF_1
0xd0e3	            0x3c5c	                            cmp al, 0x5c	      6587	screen.c	FUNCTION_40	IF_1
0xd0e5	            0x754f	                           jne 0x400d176	      6587	screen.c	FUNCTION_40	IF_1
0xd0e7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6587	screen.c	FUNCTION_40	IF_1
0xd0eb	        0x4883c001	                              add rax, 1	      6587	screen.c	FUNCTION_40	IF_1
0xd0ef	           0xfb600	                   movzx eax, byte [rax]	      6587	screen.c	FUNCTION_40	IF_1
0xd0f2	            0x84c0	                             test al, al	      6587	screen.c	FUNCTION_40	IF_1
0xd0f4	            0x7440	                            je 0x400d176	      6587	screen.c	FUNCTION_40	IF_1
0xd0f6	        0x488b45f8	                mov rax, qword [rbp - 8]	      6592	screen.c	FUNCTION_40	IF_1	IF_2	CALL_2
0xd0fa	          0x8b4028	            mov eax, dword [rax + 0x28] 	      6592	screen.c	FUNCTION_40	IF_1	IF_2	CALL_2
0xd0fd	            0x85c0	                           test eax, eax	      6592	screen.c	FUNCTION_40	IF_1	IF_2	CALL_2
0xd0ff	            0x742e	                            je 0x400d16f	      6592	screen.c	FUNCTION_40	IF_1	IF_2	CALL_2
0xd101	      0xe800000000	                          call 0x400d146	      6592	screen.c	FUNCTION_40	IF_1	IF_2	CALL_2
0xd106	            0x85c0	                           test eax, eax	      6592	screen.c	FUNCTION_40	IF_1	IF_2	CALL_2
0xd108	            0x7425	                            je 0x400d16f	      6592	screen.c	FUNCTION_40	IF_1	IF_2	CALL_2
0xd10a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6592	screen.c	FUNCTION_40	IF_1	IF_2	CALL_2
0xd10e	        0x4883c001	                              add rax, 1	      6592	screen.c	FUNCTION_40	IF_1	IF_2	CALL_2
0xd112	           0xfb600	                   movzx eax, byte [rax]	      6592	screen.c	FUNCTION_40	IF_1	IF_2	CALL_2
0xd115	            0x3c5c	                            cmp al, 0x5c	      6592	screen.c	FUNCTION_40	IF_1	IF_2	CALL_2
0xd117	            0x7516	                           jne 0x400d16f	      6592	screen.c	FUNCTION_40	IF_1	IF_2	CALL_2
0xd119	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6592	screen.c	FUNCTION_40	IF_1	IF_2	CALL_2
0xd11d	        0x4883c002	                              add rax, 2	      6592	screen.c	FUNCTION_40	IF_1	IF_2	CALL_2
0xd121	           0xfb600	                   movzx eax, byte [rax]	      6592	screen.c	FUNCTION_40	IF_1	IF_2	CALL_2
0xd124	            0x3c21	                            cmp al, 0x21	      6592	screen.c	FUNCTION_40	IF_1	IF_2	CALL_2
0xd126	            0x7507	                           jne 0x400d16f	      6592	screen.c	FUNCTION_40	IF_1	IF_2	CALL_2
0xd128	      0xb802000000	                              mov eax, 2	      6593	screen.c	FUNCTION_40	IF_1	IF_2
0xd12d	            0xeb0c	                           jmp 0x400d17b	      6593	screen.c	FUNCTION_40	IF_1	IF_2
0xd12f	      0xb801000000	                              mov eax, 1	      6595	screen.c	FUNCTION_40	IF_1
0xd134	            0xeb05	                           jmp 0x400d17b	      6595	screen.c	FUNCTION_40	IF_1
0xd136	      0xb800000000	                              mov eax, 0	      6597	screen.c	FUNCTION_40
0xd13b	              0xc9	                                   leave	      6598	screen.c	FUNCTION_40
0xd13c	              0xc3	                                     ret	      6598	screen.c	FUNCTION_40
screen_screenrow	DO,0:functions,0:CALL,0:ELSE,0:IF,0:WHILE,0:FOR,0:SWITCH,0	5
0x15aa6	              0x55	                                push rbp	     11107	screen.c	FUNCTION_102
0x15aa7	          0x4889e5	                            mov rbp, rsp	     11107	screen.c	FUNCTION_102
0x15aaa	    0x8b0500000000	            mov eax, dword [0x04015af0] 	     11108	screen.c	FUNCTION_102
0x15ab0	              0x5d	                                 pop rbp	     11109	screen.c	FUNCTION_102
0x15ab1	              0xc3	                                     ret	     11109	screen.c	FUNCTION_102
win_ins_lines	DO,0:functions,0:CALL,10:ELSE,1:IF,11:WHILE,0:FOR,0:SWITCH,0	156
0x12b78	              0x55	                                push rbp	      9494	screen.c	FUNCTION_80
0x12b79	          0x4889e5	                            mov rbp, rsp	      9494	screen.c	FUNCTION_80
0x12b7c	        0x4883ec30	                           sub rsp, 0x30	      9494	screen.c	FUNCTION_80
0x12b80	        0x48897de8	             mov qword [rbp - 0x18], rdi	      9494	screen.c	FUNCTION_80
0x12b84	          0x8975e4	             mov dword [rbp - 0x1c], esi	      9494	screen.c	FUNCTION_80
0x12b87	          0x8955e0	             mov dword [rbp - 0x20], edx	      9494	screen.c	FUNCTION_80
0x12b8a	          0x894ddc	             mov dword [rbp - 0x24], ecx	      9494	screen.c	FUNCTION_80
0x12b8d	        0x448945d8	             mov dword [rbp - 0x28], r8d	      9494	screen.c	FUNCTION_80
0x12b91	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      9500	screen.c	FUNCTION_80	IF_1
0x12b95	            0x740e	                            je 0x4012be5	      9500	screen.c	FUNCTION_80	IF_1
0x12b97	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9501	screen.c	FUNCTION_80	IF_1
0x12b9b	    0xc780f8000000	               mov dword [rax + 0xf8], 0	      9501	screen.c	FUNCTION_80	IF_1
0x12ba5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9503	screen.c	FUNCTION_80	IF_2
0x12ba9	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      9503	screen.c	FUNCTION_80	IF_2
0x12baf	          0x83f804	                              cmp eax, 4	      9503	screen.c	FUNCTION_80	IF_2
0x12bb2	            0x7f0a	                            jg 0x4012bfe	      9503	screen.c	FUNCTION_80	IF_2
0x12bb4	      0xb800000000	                              mov eax, 0	      9504	screen.c	FUNCTION_80	IF_2
0x12bb9	      0xe928020000	                           jmp 0x4012e26	      9504	screen.c	FUNCTION_80	IF_2
0x12bbe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9506	screen.c	FUNCTION_80	IF_3
0x12bc2	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      9506	screen.c	FUNCTION_80	IF_3
0x12bc8	          0x2b45e4	             sub eax, dword [rbp - 0x1c]	      9506	screen.c	FUNCTION_80	IF_3
0x12bcb	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	      9506	screen.c	FUNCTION_80	IF_3
0x12bce	            0x7d10	                           jge 0x4012c20	      9506	screen.c	FUNCTION_80	IF_3
0x12bd0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9507	screen.c	FUNCTION_80	IF_3
0x12bd4	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      9507	screen.c	FUNCTION_80	IF_3
0x12bda	          0x2b45e4	             sub eax, dword [rbp - 0x1c]	      9507	screen.c	FUNCTION_80	IF_3
0x12bdd	          0x8945e0	             mov dword [rbp - 0x20], eax	      9507	screen.c	FUNCTION_80	IF_3
0x12be0	          0x8b4dd8	             mov ecx, dword [rbp - 0x28]	      9509	screen.c	FUNCTION_80	CALL_1
0x12be3	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      9509	screen.c	FUNCTION_80	CALL_1
0x12be6	          0x8b75e4	             mov esi, dword [rbp - 0x1c]	      9509	screen.c	FUNCTION_80	CALL_1
0x12be9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9509	screen.c	FUNCTION_80	CALL_1
0x12bed	    0x41b900000000	                              mov r9d, 0	      9509	screen.c	FUNCTION_80	CALL_1
0x12bf3	    0x41b800000000	                              mov r8d, 0	      9509	screen.c	FUNCTION_80	CALL_1
0x12bf9	          0x4889c7	                            mov rdi, rax	      9509	screen.c	FUNCTION_80	CALL_1
0x12bfc	      0xe877030000	                   call sym.win_do_lines	      9509	screen.c	FUNCTION_80	CALL_1
0x12c01	          0x8945f8	                mov dword [rbp - 8], eax	      9509	screen.c	FUNCTION_80	CALL_1
0x12c04	        0x837df802	                  cmp dword [rbp - 8], 2	      9510	screen.c	FUNCTION_80	IF_4
0x12c08	            0x7408	                            je 0x4012c52	      9510	screen.c	FUNCTION_80	IF_4
0x12c0a	          0x8b45f8	                mov eax, dword [rbp - 8]	      9511	screen.c	FUNCTION_80	IF_4
0x12c0d	      0xe9d4010000	                           jmp 0x4012e26	      9511	screen.c	FUNCTION_80	IF_4
0x12c12	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      9519	screen.c	FUNCTION_80
0x12c19	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9520	screen.c	FUNCTION_80	IF_5
0x12c1d	        0x488b4020	            mov rax, qword [rax + 0x20] 	      9520	screen.c	FUNCTION_80	IF_5
0x12c21	          0x4885c0	                           test rax, rax	      9520	screen.c	FUNCTION_80	IF_5
0x12c24	            0x750e	                           jne 0x4012c74	      9520	screen.c	FUNCTION_80	IF_5
0x12c26	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9520	screen.c	FUNCTION_80	IF_5
0x12c2a	    0x8b80a4000000	            mov eax, dword [rax + 0xa4] 	      9520	screen.c	FUNCTION_80	IF_5
0x12c30	            0x85c0	                           test eax, eax	      9520	screen.c	FUNCTION_80	IF_5
0x12c32	            0x7478	                            je 0x4012cec	      9520	screen.c	FUNCTION_80	IF_5
0x12c34	    0x488b05000000	            mov rax, qword [0x04012c7b] 	      9522	screen.c	FUNCTION_80	IF_5	IF_6	CALL_3
0x12c3b	            0x89c1	                            mov ecx, eax	      9522	screen.c	FUNCTION_80	IF_5	IF_6	CALL_3
0x12c3d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9522	screen.c	FUNCTION_80	IF_5	IF_6	CALL_3
0x12c41	    0x8b909c000000	            mov edx, dword [rax + 0x9c] 	      9522	screen.c	FUNCTION_80	IF_5	IF_6	CALL_3
0x12c47	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9522	screen.c	FUNCTION_80	IF_5	IF_6	CALL_3
0x12c4b	    0x8b80a8010000	           mov eax, dword [rax + 0x1a8] 	      9522	screen.c	FUNCTION_80	IF_5	IF_6	CALL_3
0x12c51	             0x1c2	                            add edx, eax	      9522	screen.c	FUNCTION_80	IF_5	IF_6	CALL_3
0x12c53	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9522	screen.c	FUNCTION_80	IF_5	IF_6	CALL_3
0x12c57	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      9522	screen.c	FUNCTION_80	IF_5	IF_6	CALL_3
0x12c5d	             0x1d0	                            add eax, edx	      9522	screen.c	FUNCTION_80	IF_5	IF_6	CALL_3
0x12c5f	          0x2b45e0	             sub eax, dword [rbp - 0x20]	      9522	screen.c	FUNCTION_80	IF_5	IF_6	CALL_3
0x12c62	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      9522	screen.c	FUNCTION_80	IF_5	IF_6	CALL_3
0x12c65	        0x4883ec08	                              sub rsp, 8	      9522	screen.c	FUNCTION_80	IF_5	IF_6	CALL_3
0x12c69	            0x6a00	                                  push 0	      9522	screen.c	FUNCTION_80	IF_5	IF_6	CALL_3
0x12c6b	    0x41b900000000	                              mov r9d, 0	      9522	screen.c	FUNCTION_80	IF_5	IF_6	CALL_3
0x12c71	    0x41b800000000	                              mov r8d, 0	      9522	screen.c	FUNCTION_80	IF_5	IF_6	CALL_3
0x12c77	            0x89c6	                            mov esi, eax	      9522	screen.c	FUNCTION_80	IF_5	IF_6	CALL_3
0x12c79	      0xbf00000000	                              mov edi, 0	      9522	screen.c	FUNCTION_80	IF_5	IF_6	CALL_3
0x12c7e	      0xe800000000	                          call 0x4012cc3	      9522	screen.c	FUNCTION_80	IF_5	IF_6	CALL_3
0x12c83	        0x4883c410	                           add rsp, 0x10	      9522	screen.c	FUNCTION_80	IF_5	IF_6	CALL_3
0x12c87	          0x83f801	                              cmp eax, 1	      9522	screen.c	FUNCTION_80	IF_5	IF_6	CALL_3
0x12c8a	            0x7509	                           jne 0x4012cd5	      9522	screen.c	FUNCTION_80	IF_5	IF_6	CALL_3
0x12c8c	    0xc745f0010000	               mov dword [rbp - 0x10], 1	      9524	screen.c	FUNCTION_80	IF_5	IF_6
0x12c93	            0xeb17	                           jmp 0x4012cec	      9524	screen.c	FUNCTION_80	IF_5	IF_6
0x12c95	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9525	screen.c	FUNCTION_80	IF_5	ELSE_1	IF_7
0x12c99	        0x488b4020	            mov rax, qword [rax + 0x20] 	      9525	screen.c	FUNCTION_80	IF_5	ELSE_1	IF_7
0x12c9d	          0x4885c0	                           test rax, rax	      9525	screen.c	FUNCTION_80	IF_5	ELSE_1	IF_7
0x12ca0	            0x740a	                            je 0x4012cec	      9525	screen.c	FUNCTION_80	IF_5	ELSE_1	IF_7
0x12ca2	      0xb800000000	                              mov eax, 0	      9526	screen.c	FUNCTION_80	IF_5	ELSE_1	IF_7
0x12ca7	      0xe93a010000	                           jmp 0x4012e26	      9526	screen.c	FUNCTION_80	IF_5	ELSE_1	IF_7
0x12cac	        0x837df000	               cmp dword [rbp - 0x10], 0	      9531	screen.c	FUNCTION_80	IF_8
0x12cb0	     0xf85bc000000	                           jne 0x4012db2	      9531	screen.c	FUNCTION_80	IF_8
0x12cb6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9533	screen.c	FUNCTION_80	IF_8
0x12cba	    0xc78040010000	              mov dword [rax + 0x140], 1	      9533	screen.c	FUNCTION_80	IF_8
0x12cc4	    0xc70500000000	               mov dword [0x04012d0e], 1	      9534	screen.c	FUNCTION_80	IF_8
0x12cce	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9535	screen.c	FUNCTION_80	IF_8	CALL_4
0x12cd2	    0x8b909c000000	            mov edx, dword [rax + 0x9c] 	      9535	screen.c	FUNCTION_80	IF_8	CALL_4
0x12cd8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9535	screen.c	FUNCTION_80	IF_8	CALL_4
0x12cdc	    0x8b80a8010000	           mov eax, dword [rax + 0x1a8] 	      9535	screen.c	FUNCTION_80	IF_8	CALL_4
0x12ce2	             0x1c2	                            add edx, eax	      9535	screen.c	FUNCTION_80	IF_8	CALL_4
0x12ce4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9535	screen.c	FUNCTION_80	IF_8	CALL_4
0x12ce8	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      9535	screen.c	FUNCTION_80	IF_8	CALL_4
0x12cee	             0x1c2	                            add edx, eax	      9535	screen.c	FUNCTION_80	IF_8	CALL_4
0x12cf0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9535	screen.c	FUNCTION_80	IF_8	CALL_4
0x12cf4	    0x8b80a4000000	            mov eax, dword [rax + 0xa4] 	      9535	screen.c	FUNCTION_80	IF_8	CALL_4
0x12cfa	             0x1d0	                            add eax, edx	      9535	screen.c	FUNCTION_80	IF_8	CALL_4
0x12cfc	          0x8945fc	                mov dword [rbp - 4], eax	      9535	screen.c	FUNCTION_80	IF_8	CALL_4
0x12cff	          0x8b55fc	                mov edx, dword [rbp - 4]	      9536	screen.c	FUNCTION_80	IF_8
0x12d02	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      9536	screen.c	FUNCTION_80	IF_8
0x12d05	             0x1d0	                            add eax, edx	      9536	screen.c	FUNCTION_80	IF_8
0x12d07	          0x8945f4	              mov dword [rbp - 0xc], eax	      9536	screen.c	FUNCTION_80	IF_8
0x12d0a	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      9537	screen.c	FUNCTION_80	IF_8	IF_9
0x12d0d	          0x4863d0	                         movsxd rdx, eax	      9537	screen.c	FUNCTION_80	IF_8	IF_9
0x12d10	    0x488b05000000	            mov rax, qword [0x04012d57] 	      9537	screen.c	FUNCTION_80	IF_8	IF_9
0x12d17	          0x4839c2	                            cmp rdx, rax	      9537	screen.c	FUNCTION_80	IF_8	IF_9
0x12d1a	            0x7e0a	                           jle 0x4012d66	      9537	screen.c	FUNCTION_80	IF_8	IF_9
0x12d1c	    0x488b05000000	            mov rax, qword [0x04012d63] 	      9538	screen.c	FUNCTION_80	IF_8	IF_9
0x12d23	          0x8945f4	              mov dword [rbp - 0xc], eax	      9538	screen.c	FUNCTION_80	IF_8	IF_9
0x12d26	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9540	screen.c	FUNCTION_80	IF_8	CALL_6
0x12d2a	    0x8b90a8000000	            mov edx, dword [rax + 0xa8] 	      9540	screen.c	FUNCTION_80	IF_8	CALL_6
0x12d30	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9540	screen.c	FUNCTION_80	IF_8	CALL_6
0x12d34	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      9540	screen.c	FUNCTION_80	IF_8	CALL_6
0x12d3a	          0x8d0c02	                    lea ecx, [rdx + rax]	      9539	screen.c	FUNCTION_80	IF_8	CALL_5
0x12d3d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9539	screen.c	FUNCTION_80	IF_8	CALL_5
0x12d41	    0x8b90a8000000	            mov edx, dword [rax + 0xa8] 	      9539	screen.c	FUNCTION_80	IF_8	CALL_5
0x12d47	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      9539	screen.c	FUNCTION_80	IF_8	CALL_5
0x12d4a	          0x2b45e0	             sub eax, dword [rbp - 0x20]	      9539	screen.c	FUNCTION_80	IF_8	CALL_5
0x12d4d	            0x89c6	                            mov esi, eax	      9539	screen.c	FUNCTION_80	IF_8	CALL_5
0x12d4f	          0x8b45fc	                mov eax, dword [rbp - 4]	      9539	screen.c	FUNCTION_80	IF_8	CALL_5
0x12d52	          0x2b45e0	             sub eax, dword [rbp - 0x20]	      9539	screen.c	FUNCTION_80	IF_8	CALL_5
0x12d55	        0x4883ec08	                              sub rsp, 8	      9539	screen.c	FUNCTION_80	IF_8	CALL_5
0x12d59	            0x6a00	                                  push 0	      9539	screen.c	FUNCTION_80	IF_8	CALL_5
0x12d5b	    0x41b920000000	                           mov r9d, 0x20	      9539	screen.c	FUNCTION_80	IF_8	CALL_5
0x12d61	    0x41b820000000	                           mov r8d, 0x20	      9539	screen.c	FUNCTION_80	IF_8	CALL_5
0x12d67	            0x89c7	                            mov edi, eax	      9539	screen.c	FUNCTION_80	IF_8	CALL_5
0x12d69	      0xe800000000	                          call 0x4012dae	      9539	screen.c	FUNCTION_80	IF_8	CALL_5
0x12d6e	        0x4883c410	                           add rsp, 0x10	      9539	screen.c	FUNCTION_80	IF_8	CALL_5
0x12d72	    0x488b05000000	            mov rax, qword [0x04012db9] 	      9544	screen.c	FUNCTION_80	IF_10	CALL_8
0x12d79	            0x89c1	                            mov ecx, eax	      9544	screen.c	FUNCTION_80	IF_10	CALL_8
0x12d7b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9544	screen.c	FUNCTION_80	IF_10	CALL_8
0x12d7f	    0x8b909c000000	            mov edx, dword [rax + 0x9c] 	      9544	screen.c	FUNCTION_80	IF_10	CALL_8
0x12d85	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9544	screen.c	FUNCTION_80	IF_10	CALL_8
0x12d89	    0x8b80a8010000	           mov eax, dword [rax + 0x1a8] 	      9544	screen.c	FUNCTION_80	IF_10	CALL_8
0x12d8f	             0x1c2	                            add edx, eax	      9544	screen.c	FUNCTION_80	IF_10	CALL_8
0x12d91	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      9544	screen.c	FUNCTION_80	IF_10	CALL_8
0x12d94	          0x8d3402	                    lea esi, [rdx + rax]	      9544	screen.c	FUNCTION_80	IF_10	CALL_8
0x12d97	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      9544	screen.c	FUNCTION_80	IF_10	CALL_8
0x12d9a	    0x41b900000000	                              mov r9d, 0	      9544	screen.c	FUNCTION_80	IF_10	CALL_8
0x12da0	    0x41b800000000	                              mov r8d, 0	      9544	screen.c	FUNCTION_80	IF_10	CALL_8
0x12da6	            0x89c2	                            mov edx, eax	      9544	screen.c	FUNCTION_80	IF_10	CALL_8
0x12da8	      0xbf00000000	                              mov edi, 0	      9544	screen.c	FUNCTION_80	IF_10	CALL_8
0x12dad	      0xe800000000	                          call 0x4012df2	      9544	screen.c	FUNCTION_80	IF_10	CALL_8
0x12db2	            0x85c0	                           test eax, eax	      9544	screen.c	FUNCTION_80	IF_10	CALL_8
0x12db4	            0x752b	                           jne 0x4012e21	      9544	screen.c	FUNCTION_80	IF_10	CALL_8
0x12db6	        0x837df000	               cmp dword [rbp - 0x10], 0	      9548	screen.c	FUNCTION_80	IF_10	IF_11
0x12dba	            0x741e	                            je 0x4012e1a	      9548	screen.c	FUNCTION_80	IF_10	IF_11
0x12dbc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9550	screen.c	FUNCTION_80	IF_10	IF_11
0x12dc0	    0xc78040010000	              mov dword [rax + 0x140], 1	      9550	screen.c	FUNCTION_80	IF_10	IF_11
0x12dca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9551	screen.c	FUNCTION_80	IF_10	IF_11	CALL_10
0x12dce	        0x488b4020	            mov rax, qword [rax + 0x20] 	      9551	screen.c	FUNCTION_80	IF_10	IF_11	CALL_10
0x12dd2	          0x4889c7	                            mov rdi, rax	      9551	screen.c	FUNCTION_80	IF_10	IF_11	CALL_10
0x12dd5	      0xe864040000	               call sym.win_rest_invalid	      9551	screen.c	FUNCTION_80	IF_10	IF_11	CALL_10
0x12dda	      0xb800000000	                              mov eax, 0	      9553	screen.c	FUNCTION_80	IF_10
0x12ddf	            0xeb05	                           jmp 0x4012e26	      9553	screen.c	FUNCTION_80	IF_10
0x12de1	      0xb801000000	                              mov eax, 1	      9556	screen.c	FUNCTION_80
0x12de6	              0xc9	                                   leave	      9557	screen.c	FUNCTION_80
0x12de7	              0xc3	                                     ret	      9557	screen.c	FUNCTION_80
