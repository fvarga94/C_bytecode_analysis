vterm_state_get_mousestate	SWITCH,0:functions,0:ELSE,0:CALL,0:WHILE,0:DO,0:IF,0:FOR,0	23
0x5677	              0x55	                                push rbp	      1806	state.c	FUNCTION_33
0x5678	          0x4889e5	                            mov rbp, rsp	      1806	state.c	FUNCTION_33
0x567b	        0x48897df8	                mov qword [rbp - 8], rdi	      1806	state.c	FUNCTION_33
0x567f	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1806	state.c	FUNCTION_33
0x5683	        0x488b45f8	                mov rax, qword [rbp - 8]	      1807	state.c	FUNCTION_33
0x5687	          0x8b5060	            mov edx, dword [rax + 0x60] 	      1807	state.c	FUNCTION_33
0x568a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1807	state.c	FUNCTION_33
0x568e	          0x895004	                mov dword [rax + 4], edx	      1807	state.c	FUNCTION_33
0x5691	        0x488b45f8	                mov rax, qword [rbp - 8]	      1808	state.c	FUNCTION_33
0x5695	          0x8b5064	            mov edx, dword [rax + 0x64] 	      1808	state.c	FUNCTION_33
0x5698	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1808	state.c	FUNCTION_33
0x569c	            0x8910	                    mov dword [rax], edx	      1808	state.c	FUNCTION_33
0x569e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1809	state.c	FUNCTION_33
0x56a2	          0x8b5068	            mov edx, dword [rax + 0x68] 	      1809	state.c	FUNCTION_33
0x56a5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1809	state.c	FUNCTION_33
0x56a9	          0x895008	                mov dword [rax + 8], edx	      1809	state.c	FUNCTION_33
0x56ac	        0x488b45f8	                mov rax, qword [rbp - 8]	      1810	state.c	FUNCTION_33
0x56b0	          0x8b506c	            mov edx, dword [rax + 0x6c] 	      1810	state.c	FUNCTION_33
0x56b3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1810	state.c	FUNCTION_33
0x56b7	          0x89500c	              mov dword [rax + 0xc], edx	      1810	state.c	FUNCTION_33
0x56ba	              0x90	                                     nop	      1811	state.c	FUNCTION_33
0x56bb	              0x5d	                                 pop rbp	      1811	state.c	FUNCTION_33
0x56bc	              0xc3	                                     ret	      1811	state.c	FUNCTION_33
vterm_state_set_unrecognised_fallbacks	SWITCH,0:functions,0:ELSE,1:CALL,0:WHILE,0:DO,0:IF,1:FOR,0	21
0x5756	              0x55	                                push rbp	      1834	state.c	FUNCTION_36
0x5757	          0x4889e5	                            mov rbp, rsp	      1834	state.c	FUNCTION_36
0x575a	        0x48897df8	                mov qword [rbp - 8], rdi	      1834	state.c	FUNCTION_36
0x575e	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1834	state.c	FUNCTION_36
0x5762	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1834	state.c	FUNCTION_36
0x5766	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1835	state.c	FUNCTION_36	IF_1
0x576b	            0x741a	                            je 0x40057c7	      1835	state.c	FUNCTION_36	IF_1
0x576d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1836	state.c	FUNCTION_36	IF_1
0x5771	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1836	state.c	FUNCTION_36	IF_1
0x5775	        0x48895018	             mov qword [rax + 0x18], rdx	      1836	state.c	FUNCTION_36	IF_1
0x5779	        0x488b45f8	                mov rax, qword [rbp - 8]	      1837	state.c	FUNCTION_36	IF_1
0x577d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1837	state.c	FUNCTION_36	IF_1
0x5781	        0x48895020	             mov qword [rax + 0x20], rdx	      1837	state.c	FUNCTION_36	IF_1
0x5785	            0xeb18	                           jmp 0x40057df	      1843	state.c	FUNCTION_36
0x5787	        0x488b45f8	                mov rax, qword [rbp - 8]	      1840	state.c	FUNCTION_36	ELSE_1
0x578b	    0x48c740180000	               mov qword [rax + 0x18], 0	      1840	state.c	FUNCTION_36	ELSE_1
0x5793	        0x488b45f8	                mov rax, qword [rbp - 8]	      1841	state.c	FUNCTION_36	ELSE_1
0x5797	    0x48c740200000	               mov qword [rax + 0x20], 0	      1841	state.c	FUNCTION_36	ELSE_1
0x579f	              0x90	                                     nop	      1843	state.c	FUNCTION_36
0x57a0	              0x5d	                                 pop rbp	      1843	state.c	FUNCTION_36
0x57a1	              0xc3	                                     ret	      1843	state.c	FUNCTION_36
vterm_state_new	SWITCH,0:functions,0:ELSE,0:CALL,2:WHILE,0:DO,0:IF,0:FOR,0	40
0x214	              0x55	                                push rbp	        53	state.c	FUNCTION_4
0x215	          0x4889e5	                            mov rbp, rsp	        53	state.c	FUNCTION_4
0x218	        0x4883ec20	                           sub rsp, 0x20	        53	state.c	FUNCTION_4
0x21c	        0x48897de8	             mov qword [rbp - 0x18], rdi	        53	state.c	FUNCTION_4
0x220	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        54	state.c	FUNCTION_4	CALL_1
0x224	      0xbe98010000	                          mov esi, 0x198	        54	state.c	FUNCTION_4	CALL_1
0x229	          0x4889c7	                            mov rdi, rax	        54	state.c	FUNCTION_4	CALL_1
0x22c	      0xe800000000	                          call 0x4000271	        54	state.c	FUNCTION_4	CALL_1
0x231	        0x488945f8	                mov qword [rbp - 8], rax	        54	state.c	FUNCTION_4	CALL_1
0x235	        0x488b45f8	                mov rax, qword [rbp - 8]	        56	state.c	FUNCTION_4
0x239	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        56	state.c	FUNCTION_4
0x23d	          0x488910	                    mov qword [rax], rdx	        56	state.c	FUNCTION_4
0x240	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        58	state.c	FUNCTION_4
0x244	          0x8b5010	            mov edx, dword [rax + 0x10] 	        58	state.c	FUNCTION_4
0x247	        0x488b45f8	                mov rax, qword [rbp - 8]	        58	state.c	FUNCTION_4
0x24b	          0x895028	             mov dword [rax + 0x28], edx	        58	state.c	FUNCTION_4
0x24e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        59	state.c	FUNCTION_4
0x252	          0x8b5014	            mov edx, dword [rax + 0x14] 	        59	state.c	FUNCTION_4
0x255	        0x488b45f8	                mov rax, qword [rbp - 8]	        59	state.c	FUNCTION_4
0x259	          0x89502c	             mov dword [rax + 0x2c], edx	        59	state.c	FUNCTION_4
0x25c	        0x488b45f8	                mov rax, qword [rbp - 8]	        61	state.c	FUNCTION_4
0x260	    0xc74060000000	               mov dword [rax + 0x60], 0	        61	state.c	FUNCTION_4
0x267	        0x488b45f8	                mov rax, qword [rbp - 8]	        62	state.c	FUNCTION_4
0x26b	    0xc74064000000	               mov dword [rax + 0x64], 0	        62	state.c	FUNCTION_4
0x272	        0x488b45f8	                mov rax, qword [rbp - 8]	        63	state.c	FUNCTION_4
0x276	    0xc74068000000	               mov dword [rax + 0x68], 0	        63	state.c	FUNCTION_4
0x27d	        0x488b45f8	                mov rax, qword [rbp - 8]	        65	state.c	FUNCTION_4
0x281	    0xc74070000000	               mov dword [rax + 0x70], 0	        65	state.c	FUNCTION_4
0x288	        0x488b45f8	                mov rax, qword [rbp - 8]	        67	state.c	FUNCTION_4
0x28c	    0x48c740080000	                  mov qword [rax + 8], 0	        67	state.c	FUNCTION_4
0x294	        0x488b45f8	                mov rax, qword [rbp - 8]	        68	state.c	FUNCTION_4
0x298	    0x48c740100000	               mov qword [rax + 0x10], 0	        68	state.c	FUNCTION_4
0x2a0	        0x488b45f8	                mov rax, qword [rbp - 8]	        70	state.c	FUNCTION_4	CALL_2
0x2a4	          0x4889c7	                            mov rdi, rax	        70	state.c	FUNCTION_4	CALL_2
0x2a7	      0xe800000000	                          call 0x40002ec	        70	state.c	FUNCTION_4	CALL_2
0x2ac	        0x488b45f8	                mov rax, qword [rbp - 8]	        72	state.c	FUNCTION_4
0x2b0	    0xc78078010000	              mov dword [rax + 0x178], 0	        72	state.c	FUNCTION_4
0x2ba	        0x488b45f8	                mov rax, qword [rbp - 8]	        74	state.c	FUNCTION_4
0x2be	              0xc9	                                   leave	        75	state.c	FUNCTION_4
0x2bf	              0xc3	                                     ret	        75	state.c	FUNCTION_4
vterm_state_free	SWITCH,0:functions,0:ELSE,0:CALL,4:WHILE,0:DO,0:IF,0:FOR,0	34
0x2c0	              0x55	                                push rbp	        78	state.c	FUNCTION_5
0x2c1	          0x4889e5	                            mov rbp, rsp	        78	state.c	FUNCTION_5
0x2c4	        0x4883ec10	                           sub rsp, 0x10	        78	state.c	FUNCTION_5
0x2c8	        0x48897df8	                mov qword [rbp - 8], rdi	        78	state.c	FUNCTION_5
0x2cc	        0x488b45f8	                mov rax, qword [rbp - 8]	        79	state.c	FUNCTION_5	CALL_1
0x2d0	        0x488b5050	            mov rdx, qword [rax + 0x50] 	        79	state.c	FUNCTION_5	CALL_1
0x2d4	        0x488b45f8	                mov rax, qword [rbp - 8]	        79	state.c	FUNCTION_5	CALL_1
0x2d8	          0x488b00	                    mov rax, qword [rax]	        79	state.c	FUNCTION_5	CALL_1
0x2db	          0x4889d6	                            mov rsi, rdx	        79	state.c	FUNCTION_5	CALL_1
0x2de	          0x4889c7	                            mov rdi, rax	        79	state.c	FUNCTION_5	CALL_1
0x2e1	      0xe800000000	                          call 0x4000326	        79	state.c	FUNCTION_5	CALL_1
0x2e6	        0x488b45f8	                mov rax, qword [rbp - 8]	        80	state.c	FUNCTION_5	CALL_2
0x2ea	        0x488b5058	            mov rdx, qword [rax + 0x58] 	        80	state.c	FUNCTION_5	CALL_2
0x2ee	        0x488b45f8	                mov rax, qword [rbp - 8]	        80	state.c	FUNCTION_5	CALL_2
0x2f2	          0x488b00	                    mov rax, qword [rax]	        80	state.c	FUNCTION_5	CALL_2
0x2f5	          0x4889d6	                            mov rsi, rdx	        80	state.c	FUNCTION_5	CALL_2
0x2f8	          0x4889c7	                            mov rdi, rax	        80	state.c	FUNCTION_5	CALL_2
0x2fb	      0xe800000000	                          call 0x4000340	        80	state.c	FUNCTION_5	CALL_2
0x300	        0x488b45f8	                mov rax, qword [rbp - 8]	        81	state.c	FUNCTION_5	CALL_3
0x304	        0x488b5078	            mov rdx, qword [rax + 0x78] 	        81	state.c	FUNCTION_5	CALL_3
0x308	        0x488b45f8	                mov rax, qword [rbp - 8]	        81	state.c	FUNCTION_5	CALL_3
0x30c	          0x488b00	                    mov rax, qword [rax]	        81	state.c	FUNCTION_5	CALL_3
0x30f	          0x4889d6	                            mov rsi, rdx	        81	state.c	FUNCTION_5	CALL_3
0x312	          0x4889c7	                            mov rdi, rax	        81	state.c	FUNCTION_5	CALL_3
0x315	      0xe800000000	                          call 0x400035a	        81	state.c	FUNCTION_5	CALL_3
0x31a	        0x488b45f8	                mov rax, qword [rbp - 8]	        82	state.c	FUNCTION_5	CALL_4
0x31e	          0x488b00	                    mov rax, qword [rax]	        82	state.c	FUNCTION_5	CALL_4
0x321	        0x488b55f8	                mov rdx, qword [rbp - 8]	        82	state.c	FUNCTION_5	CALL_4
0x325	          0x4889d6	                            mov rsi, rdx	        82	state.c	FUNCTION_5	CALL_4
0x328	          0x4889c7	                            mov rdi, rax	        82	state.c	FUNCTION_5	CALL_4
0x32b	      0xe800000000	                          call 0x4000370	        82	state.c	FUNCTION_5	CALL_4
0x330	              0x90	                                     nop	        83	state.c	FUNCTION_5
0x331	              0xc9	                                   leave	        83	state.c	FUNCTION_5
0x332	              0xc3	                                     ret	        83	state.c	FUNCTION_5
tab	SWITCH,0:functions,0:ELSE,1:CALL,2:WHILE,1:DO,0:IF,5:FOR,0	69
0x885	              0x55	                                push rbp	       186	state.c	FUNCTION_13
0x886	          0x4889e5	                            mov rbp, rsp	       186	state.c	FUNCTION_13
0x889	        0x4883ec10	                           sub rsp, 0x10	       186	state.c	FUNCTION_13
0x88d	        0x48897df8	                mov qword [rbp - 8], rdi	       186	state.c	FUNCTION_13
0x891	          0x8975f4	              mov dword [rbp - 0xc], esi	       186	state.c	FUNCTION_13
0x894	          0x8955f0	             mov dword [rbp - 0x10], edx	       186	state.c	FUNCTION_13
0x897	      0xe9a4000000	                           jmp 0x4000980	       187	state.c	FUNCTION_13	WHILE_1
0x89c	        0x837df000	               cmp dword [rbp - 0x10], 0	       188	state.c	FUNCTION_13	WHILE_1	IF_1
0x8a0	            0x7e5f	                           jle 0x4000941	       188	state.c	FUNCTION_13	WHILE_1	IF_1
0x8a2	        0x488b45f8	                mov rax, qword [rbp - 8]	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x8a6	          0x8b5034	            mov edx, dword [rax + 0x34] 	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x8a9	        0x488b45f8	                mov rax, qword [rbp - 8]	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x8ad	        0x488b4858	            mov rcx, qword [rax + 0x58] 	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x8b1	        0x488b45f8	                mov rax, qword [rbp - 8]	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x8b5	          0x8b4030	            mov eax, dword [rax + 0x30] 	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x8b8	            0x4898	                                    cdqe	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x8ba	        0x48c1e002	                              shl rax, 2	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x8be	          0x4801c8	                            add rax, rcx	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x8c1	           0xfb600	                   movzx eax, byte [rax]	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x8c4	          0x83e001	                              and eax, 1	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x8c7	            0x84c0	                             test al, al	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x8c9	            0x7415	                            je 0x4000920	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x8cb	        0x488b45f8	                mov rax, qword [rbp - 8]	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x8cf	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x8d2	            0x89c1	                            mov ecx, eax	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x8d4	          0xc1e91f	                           shr ecx, 0x1f	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x8d7	             0x1c8	                            add eax, ecx	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x8d9	            0xd1f8	                              sar eax, 1	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x8db	          0x83e801	                              sub eax, 1	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x8de	            0xeb0a	                           jmp 0x400092a	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x8e0	        0x488b45f8	                mov rax, qword [rbp - 8]	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x8e4	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x8e7	          0x83e801	                              sub eax, 1	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x8ea	            0x39c2	                            cmp edx, eax	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x8ec	            0x7d5e	                           jge 0x400098c	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x8ee	        0x488b45f8	                mov rax, qword [rbp - 8]	       192	state.c	FUNCTION_13	WHILE_1	IF_1
0x8f2	          0x8b4034	            mov eax, dword [rax + 0x34] 	       192	state.c	FUNCTION_13	WHILE_1	IF_1
0x8f5	          0x8d5001	                      lea edx, [rax + 1]	       192	state.c	FUNCTION_13	WHILE_1	IF_1
0x8f8	        0x488b45f8	                mov rax, qword [rbp - 8]	       192	state.c	FUNCTION_13	WHILE_1	IF_1
0x8fc	          0x895034	             mov dword [rax + 0x34], edx	       192	state.c	FUNCTION_13	WHILE_1	IF_1
0x8ff	            0xeb22	                           jmp 0x4000963	       192	state.c	FUNCTION_13	WHILE_1	IF_1
0x901	        0x837df000	               cmp dword [rbp - 0x10], 0	       194	state.c	FUNCTION_13	WHILE_1	ELSE_1	IF_3
0x905	            0x791c	                           jns 0x4000963	       194	state.c	FUNCTION_13	WHILE_1	ELSE_1	IF_3
0x907	        0x488b45f8	                mov rax, qword [rbp - 8]	       195	state.c	FUNCTION_13	WHILE_1	ELSE_1	IF_3	IF_4
0x90b	          0x8b4034	            mov eax, dword [rax + 0x34] 	       195	state.c	FUNCTION_13	WHILE_1	ELSE_1	IF_3	IF_4
0x90e	            0x85c0	                           test eax, eax	       195	state.c	FUNCTION_13	WHILE_1	ELSE_1	IF_3	IF_4
0x910	            0x7e3d	                           jle 0x400098f	       195	state.c	FUNCTION_13	WHILE_1	ELSE_1	IF_3	IF_4
0x912	        0x488b45f8	                mov rax, qword [rbp - 8]	       198	state.c	FUNCTION_13	WHILE_1	ELSE_1	IF_3
0x916	          0x8b4034	            mov eax, dword [rax + 0x34] 	       198	state.c	FUNCTION_13	WHILE_1	ELSE_1	IF_3
0x919	          0x8d50ff	                      lea edx, [rax - 1]	       198	state.c	FUNCTION_13	WHILE_1	ELSE_1	IF_3
0x91c	        0x488b45f8	                mov rax, qword [rbp - 8]	       198	state.c	FUNCTION_13	WHILE_1	ELSE_1	IF_3
0x920	          0x895034	             mov dword [rax + 0x34], edx	       198	state.c	FUNCTION_13	WHILE_1	ELSE_1	IF_3
0x923	        0x488b45f8	                mov rax, qword [rbp - 8]	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x927	          0x8b5034	            mov edx, dword [rax + 0x34] 	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x92a	        0x488b45f8	                mov rax, qword [rbp - 8]	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x92e	            0x89d6	                            mov esi, edx	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x930	          0x4889c7	                            mov rdi, rax	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x933	      0xe858feffff	                 call sym.is_col_tabstop	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x938	            0x85c0	                           test eax, eax	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x93a	            0x7404	                            je 0x4000980	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x93c	        0x836df401	                sub dword [rbp - 0xc], 1	       202	state.c	FUNCTION_13	WHILE_1	IF_5
0x940	        0x837df400	                cmp dword [rbp - 0xc], 0	       187	state.c	FUNCTION_13	WHILE_1
0x944	     0xf8f52ffffff	                            jg 0x40008dc	       187	state.c	FUNCTION_13	WHILE_1
0x94a	            0xeb04	                           jmp 0x4000990	       187	state.c	FUNCTION_13	WHILE_1
0x94c	              0x90	                                     nop	       190	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2
0x94d	            0xeb01	                           jmp 0x4000990	       190	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2
0x94f	              0x90	                                     nop	       196	state.c	FUNCTION_13	WHILE_1	ELSE_1	IF_3	IF_4
0x950	              0xc9	                                   leave	       204	state.c	FUNCTION_13
0x951	              0xc3	                                     ret	       204	state.c	FUNCTION_13
on_osc	SWITCH,0:functions,0:ELSE,6:CALL,13:WHILE,0:DO,0:IF,9:FOR,0	197
0x45e8	              0x55	                                push rbp	      1498	state.c	FUNCTION_26
0x45e9	          0x4889e5	                            mov rbp, rsp	      1498	state.c	FUNCTION_26
0x45ec	        0x4883ec40	                           sub rsp, 0x40	      1498	state.c	FUNCTION_26
0x45f0	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1498	state.c	FUNCTION_26
0x45f4	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1498	state.c	FUNCTION_26
0x45f8	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1498	state.c	FUNCTION_26
0x45fc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1499	state.c	FUNCTION_26
0x4600	        0x488945f8	                mov qword [rbp - 8], rax	      1499	state.c	FUNCTION_26
0x4604	      0x48837dd001	               cmp qword [rbp - 0x30], 1	      1501	state.c	FUNCTION_26	IF_1
0x4609	            0x770a	                            ja 0x4004655	      1501	state.c	FUNCTION_26	IF_1
0x460b	      0xb800000000	                              mov eax, 0	      1502	state.c	FUNCTION_26	IF_1
0x4610	      0xe9bd020000	                           jmp 0x4004912	      1502	state.c	FUNCTION_26	IF_1
0x4615	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1504	state.c	FUNCTION_26	IF_2	CALL_1
0x4619	      0xba02000000	                              mov edx, 2	      1504	state.c	FUNCTION_26	IF_2	CALL_1
0x461e	      0xbe00000000	                              mov esi, 0	      1504	state.c	FUNCTION_26	IF_2	CALL_1
0x4623	          0x4889c7	                            mov rdi, rax	      1504	state.c	FUNCTION_26	IF_2	CALL_1
0x4626	      0xe800000000	                          call 0x400466b	      1504	state.c	FUNCTION_26	IF_2	CALL_1
0x462b	            0x85c0	                           test eax, eax	      1504	state.c	FUNCTION_26	IF_2	CALL_1
0x462d	            0x754c	                           jne 0x40046bb	      1504	state.c	FUNCTION_26	IF_2	CALL_1
0x462f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1505	state.c	FUNCTION_26	IF_2	CALL_2
0x4633	        0x488d48fe	                      lea rcx, [rax - 2]	      1505	state.c	FUNCTION_26	IF_2	CALL_2
0x4637	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1505	state.c	FUNCTION_26	IF_2	CALL_2
0x463b	        0x488d5002	                      lea rdx, [rax + 2]	      1505	state.c	FUNCTION_26	IF_2	CALL_2
0x463f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1505	state.c	FUNCTION_26	IF_2	CALL_2
0x4643	      0xbe05000000	                              mov esi, 5	      1505	state.c	FUNCTION_26	IF_2	CALL_2
0x4648	          0x4889c7	                            mov rdi, rax	      1505	state.c	FUNCTION_26	IF_2	CALL_2
0x464b	      0xe814cfffff	             call sym.settermprop_string	      1505	state.c	FUNCTION_26	IF_2	CALL_2
0x4650	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1506	state.c	FUNCTION_26	IF_2	CALL_3
0x4654	        0x488d48fe	                      lea rcx, [rax - 2]	      1506	state.c	FUNCTION_26	IF_2	CALL_3
0x4658	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1506	state.c	FUNCTION_26	IF_2	CALL_3
0x465c	        0x488d5002	                      lea rdx, [rax + 2]	      1506	state.c	FUNCTION_26	IF_2	CALL_3
0x4660	        0x488b45f8	                mov rax, qword [rbp - 8]	      1506	state.c	FUNCTION_26	IF_2	CALL_3
0x4664	      0xbe04000000	                              mov esi, 4	      1506	state.c	FUNCTION_26	IF_2	CALL_3
0x4669	          0x4889c7	                            mov rdi, rax	      1506	state.c	FUNCTION_26	IF_2	CALL_3
0x466c	      0xe8f3ceffff	             call sym.settermprop_string	      1506	state.c	FUNCTION_26	IF_2	CALL_3
0x4671	      0xb801000000	                              mov eax, 1	      1507	state.c	FUNCTION_26	IF_2
0x4676	      0xe957020000	                           jmp 0x4004912	      1507	state.c	FUNCTION_26	IF_2
0x467b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1509	state.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x467f	      0xba02000000	                              mov edx, 2	      1509	state.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x4684	      0xbe00000000	                              mov esi, 0	      1509	state.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x4689	          0x4889c7	                            mov rdi, rax	      1509	state.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x468c	      0xe800000000	                          call 0x40046d1	      1509	state.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x4691	            0x85c0	                           test eax, eax	      1509	state.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x4693	            0x752b	                           jne 0x4004700	      1509	state.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x4695	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1510	state.c	FUNCTION_26	ELSE_1	IF_3	CALL_5
0x4699	        0x488d48fe	                      lea rcx, [rax - 2]	      1510	state.c	FUNCTION_26	ELSE_1	IF_3	CALL_5
0x469d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1510	state.c	FUNCTION_26	ELSE_1	IF_3	CALL_5
0x46a1	        0x488d5002	                      lea rdx, [rax + 2]	      1510	state.c	FUNCTION_26	ELSE_1	IF_3	CALL_5
0x46a5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1510	state.c	FUNCTION_26	ELSE_1	IF_3	CALL_5
0x46a9	      0xbe05000000	                              mov esi, 5	      1510	state.c	FUNCTION_26	ELSE_1	IF_3	CALL_5
0x46ae	          0x4889c7	                            mov rdi, rax	      1510	state.c	FUNCTION_26	ELSE_1	IF_3	CALL_5
0x46b1	      0xe8aeceffff	             call sym.settermprop_string	      1510	state.c	FUNCTION_26	ELSE_1	IF_3	CALL_5
0x46b6	      0xb801000000	                              mov eax, 1	      1511	state.c	FUNCTION_26	ELSE_1	IF_3
0x46bb	      0xe912020000	                           jmp 0x4004912	      1511	state.c	FUNCTION_26	ELSE_1	IF_3
0x46c0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1513	state.c	FUNCTION_26	ELSE_2	IF_4	CALL_6
0x46c4	      0xba02000000	                              mov edx, 2	      1513	state.c	FUNCTION_26	ELSE_2	IF_4	CALL_6
0x46c9	      0xbe00000000	                              mov esi, 0	      1513	state.c	FUNCTION_26	ELSE_2	IF_4	CALL_6
0x46ce	          0x4889c7	                            mov rdi, rax	      1513	state.c	FUNCTION_26	ELSE_2	IF_4	CALL_6
0x46d1	      0xe800000000	                          call 0x4004716	      1513	state.c	FUNCTION_26	ELSE_2	IF_4	CALL_6
0x46d6	            0x85c0	                           test eax, eax	      1513	state.c	FUNCTION_26	ELSE_2	IF_4	CALL_6
0x46d8	            0x752b	                           jne 0x4004745	      1513	state.c	FUNCTION_26	ELSE_2	IF_4	CALL_6
0x46da	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1514	state.c	FUNCTION_26	ELSE_2	IF_4	CALL_7
0x46de	        0x488d48fe	                      lea rcx, [rax - 2]	      1514	state.c	FUNCTION_26	ELSE_2	IF_4	CALL_7
0x46e2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1514	state.c	FUNCTION_26	ELSE_2	IF_4	CALL_7
0x46e6	        0x488d5002	                      lea rdx, [rax + 2]	      1514	state.c	FUNCTION_26	ELSE_2	IF_4	CALL_7
0x46ea	        0x488b45f8	                mov rax, qword [rbp - 8]	      1514	state.c	FUNCTION_26	ELSE_2	IF_4	CALL_7
0x46ee	      0xbe04000000	                              mov esi, 4	      1514	state.c	FUNCTION_26	ELSE_2	IF_4	CALL_7
0x46f3	          0x4889c7	                            mov rdi, rax	      1514	state.c	FUNCTION_26	ELSE_2	IF_4	CALL_7
0x46f6	      0xe869ceffff	             call sym.settermprop_string	      1514	state.c	FUNCTION_26	ELSE_2	IF_4	CALL_7
0x46fb	      0xb801000000	                              mov eax, 1	      1515	state.c	FUNCTION_26	ELSE_2	IF_4
0x4700	      0xe9cd010000	                           jmp 0x4004912	      1515	state.c	FUNCTION_26	ELSE_2	IF_4
0x4705	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1517	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_8
0x4709	      0xba03000000	                              mov edx, 3	      1517	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_8
0x470e	      0xbe00000000	                              mov esi, 0	      1517	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_8
0x4713	          0x4889c7	                            mov rdi, rax	      1517	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_8
0x4716	      0xe800000000	                          call 0x400475b	      1517	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_8
0x471b	            0x85c0	                           test eax, eax	      1517	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_8
0x471d	     0xf8580000000	                           jne 0x40047e3	      1517	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_8
0x4723	        0x488b45f8	                mov rax, qword [rbp - 8]	      1519	state.c	FUNCTION_26	ELSE_3	IF_5
0x4727	     0xfb680280100	          movzx eax, byte [rax + 0x128] 	      1519	state.c	FUNCTION_26	ELSE_3	IF_5
0x472e	           0xfb6c0	                           movzx eax, al	      1519	state.c	FUNCTION_26	ELSE_3	IF_5
0x4731	          0x8945e0	             mov dword [rbp - 0x20], eax	      1519	state.c	FUNCTION_26	ELSE_3	IF_5
0x4734	        0x488b45f8	                mov rax, qword [rbp - 8]	      1520	state.c	FUNCTION_26	ELSE_3	IF_5
0x4738	     0xfb6802a0100	          movzx eax, byte [rax + 0x12a] 	      1520	state.c	FUNCTION_26	ELSE_3	IF_5
0x473f	           0xfb6c0	                           movzx eax, al	      1520	state.c	FUNCTION_26	ELSE_3	IF_5
0x4742	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1520	state.c	FUNCTION_26	ELSE_3	IF_5
0x4745	        0x488b45f8	                mov rax, qword [rbp - 8]	      1521	state.c	FUNCTION_26	ELSE_3	IF_5
0x4749	     0xfb680290100	          movzx eax, byte [rax + 0x129] 	      1521	state.c	FUNCTION_26	ELSE_3	IF_5
0x4750	           0xfb6c0	                           movzx eax, al	      1521	state.c	FUNCTION_26	ELSE_3	IF_5
0x4753	          0x8945e8	             mov dword [rbp - 0x18], eax	      1521	state.c	FUNCTION_26	ELSE_3	IF_5
0x4756	        0x488b45f8	                mov rax, qword [rbp - 8]	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_9
0x475a	          0x488b00	                    mov rax, qword [rax]	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_9
0x475d	          0x8b7de8	             mov edi, dword [rbp - 0x18]	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_9
0x4760	          0x8b75e0	             mov esi, dword [rbp - 0x20]	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_9
0x4763	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_9
0x4766	        0x4883ec08	                              sub rsp, 8	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_9
0x476a	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_9
0x476d	              0x51	                                push rcx	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_9
0x476e	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_9
0x4771	              0x51	                                push rcx	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_9
0x4772	          0x8b4de8	             mov ecx, dword [rbp - 0x18]	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_9
0x4775	              0x51	                                push rcx	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_9
0x4776	          0x4189f9	                            mov r9d, edi	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_9
0x4779	          0x4189f0	                            mov r8d, esi	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_9
0x477c	            0x89d1	                            mov ecx, edx	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_9
0x477e	      0xba00000000	                              mov edx, 0	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_9
0x4783	      0xbe9d000000	                           mov esi, 0x9d	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_9
0x4788	          0x4889c7	                            mov rdi, rax	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_9
0x478b	      0xb800000000	                              mov eax, 0	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_9
0x4790	      0xe800000000	                          call 0x40047d5	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_9
0x4795	        0x4883c420	                           add rsp, 0x20	      1522	state.c	FUNCTION_26	ELSE_3	IF_5	CALL_9
0x4799	      0xb801000000	                              mov eax, 1	      1523	state.c	FUNCTION_26	ELSE_3	IF_5
0x479e	      0xe92f010000	                           jmp 0x4004912	      1523	state.c	FUNCTION_26	ELSE_3	IF_5
0x47a3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1525	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_10
0x47a7	      0xba03000000	                              mov edx, 3	      1525	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_10
0x47ac	      0xbe00000000	                              mov esi, 0	      1525	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_10
0x47b1	          0x4889c7	                            mov rdi, rax	      1525	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_10
0x47b4	      0xe800000000	                          call 0x40047f9	      1525	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_10
0x47b9	            0x85c0	                           test eax, eax	      1525	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_10
0x47bb	     0xf8580000000	                           jne 0x4004881	      1525	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_10
0x47c1	        0x488b45f8	                mov rax, qword [rbp - 8]	      1527	state.c	FUNCTION_26	ELSE_4	IF_6
0x47c5	     0xfb6802c0100	          movzx eax, byte [rax + 0x12c] 	      1527	state.c	FUNCTION_26	ELSE_4	IF_6
0x47cc	           0xfb6c0	                           movzx eax, al	      1527	state.c	FUNCTION_26	ELSE_4	IF_6
0x47cf	          0x8945ec	             mov dword [rbp - 0x14], eax	      1527	state.c	FUNCTION_26	ELSE_4	IF_6
0x47d2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1528	state.c	FUNCTION_26	ELSE_4	IF_6
0x47d6	     0xfb6802e0100	          movzx eax, byte [rax + 0x12e] 	      1528	state.c	FUNCTION_26	ELSE_4	IF_6
0x47dd	           0xfb6c0	                           movzx eax, al	      1528	state.c	FUNCTION_26	ELSE_4	IF_6
0x47e0	          0x8945f0	             mov dword [rbp - 0x10], eax	      1528	state.c	FUNCTION_26	ELSE_4	IF_6
0x47e3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1529	state.c	FUNCTION_26	ELSE_4	IF_6
0x47e7	     0xfb6802d0100	          movzx eax, byte [rax + 0x12d] 	      1529	state.c	FUNCTION_26	ELSE_4	IF_6
0x47ee	           0xfb6c0	                           movzx eax, al	      1529	state.c	FUNCTION_26	ELSE_4	IF_6
0x47f1	          0x8945f4	              mov dword [rbp - 0xc], eax	      1529	state.c	FUNCTION_26	ELSE_4	IF_6
0x47f4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_11
0x47f8	          0x488b00	                    mov rax, qword [rax]	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_11
0x47fb	          0x8b7df4	              mov edi, dword [rbp - 0xc]	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_11
0x47fe	          0x8b75ec	             mov esi, dword [rbp - 0x14]	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_11
0x4801	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_11
0x4804	        0x4883ec08	                              sub rsp, 8	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_11
0x4808	          0x8b4df0	             mov ecx, dword [rbp - 0x10]	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_11
0x480b	              0x51	                                push rcx	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_11
0x480c	          0x8b4df0	             mov ecx, dword [rbp - 0x10]	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_11
0x480f	              0x51	                                push rcx	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_11
0x4810	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_11
0x4813	              0x51	                                push rcx	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_11
0x4814	          0x4189f9	                            mov r9d, edi	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_11
0x4817	          0x4189f0	                            mov r8d, esi	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_11
0x481a	            0x89d1	                            mov ecx, edx	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_11
0x481c	      0xba00000000	                              mov edx, 0	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_11
0x4821	      0xbe9d000000	                           mov esi, 0x9d	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_11
0x4826	          0x4889c7	                            mov rdi, rax	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_11
0x4829	      0xb800000000	                              mov eax, 0	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_11
0x482e	      0xe800000000	                          call 0x4004873	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_11
0x4833	        0x4883c420	                           add rsp, 0x20	      1530	state.c	FUNCTION_26	ELSE_4	IF_6	CALL_11
0x4837	      0xb801000000	                              mov eax, 1	      1531	state.c	FUNCTION_26	ELSE_4	IF_6
0x483c	      0xe991000000	                           jmp 0x4004912	      1531	state.c	FUNCTION_26	ELSE_4	IF_6
0x4841	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1533	state.c	FUNCTION_26	ELSE_5	IF_7	CALL_12
0x4845	      0xba03000000	                              mov edx, 3	      1533	state.c	FUNCTION_26	ELSE_5	IF_7	CALL_12
0x484a	      0xbe00000000	                              mov esi, 0	      1533	state.c	FUNCTION_26	ELSE_5	IF_7	CALL_12
0x484f	          0x4889c7	                            mov rdi, rax	      1533	state.c	FUNCTION_26	ELSE_5	IF_7	CALL_12
0x4852	      0xe800000000	                          call 0x4004897	      1533	state.c	FUNCTION_26	ELSE_5	IF_7	CALL_12
0x4857	            0x85c0	                           test eax, eax	      1533	state.c	FUNCTION_26	ELSE_5	IF_7	CALL_12
0x4859	            0x7528	                           jne 0x40048c3	      1533	state.c	FUNCTION_26	ELSE_5	IF_7	CALL_12
0x485b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1534	state.c	FUNCTION_26	ELSE_5	IF_7	CALL_13
0x485f	        0x488d48fd	                      lea rcx, [rax - 3]	      1534	state.c	FUNCTION_26	ELSE_5	IF_7	CALL_13
0x4863	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1534	state.c	FUNCTION_26	ELSE_5	IF_7	CALL_13
0x4867	        0x488d5003	                      lea rdx, [rax + 3]	      1534	state.c	FUNCTION_26	ELSE_5	IF_7	CALL_13
0x486b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1534	state.c	FUNCTION_26	ELSE_5	IF_7	CALL_13
0x486f	      0xbe09000000	                              mov esi, 9	      1534	state.c	FUNCTION_26	ELSE_5	IF_7	CALL_13
0x4874	          0x4889c7	                            mov rdi, rax	      1534	state.c	FUNCTION_26	ELSE_5	IF_7	CALL_13
0x4877	      0xe8e8ccffff	             call sym.settermprop_string	      1534	state.c	FUNCTION_26	ELSE_5	IF_7	CALL_13
0x487c	      0xb801000000	                              mov eax, 1	      1535	state.c	FUNCTION_26	ELSE_5	IF_7
0x4881	            0xeb4f	                           jmp 0x4004912	      1535	state.c	FUNCTION_26	ELSE_5	IF_7
0x4883	        0x488b45f8	                mov rax, qword [rbp - 8]	      1537	state.c	FUNCTION_26	ELSE_6	IF_8
0x4887	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1537	state.c	FUNCTION_26	ELSE_6	IF_8
0x488b	          0x4885c0	                           test rax, rax	      1537	state.c	FUNCTION_26	ELSE_6	IF_8
0x488e	            0x743d	                            je 0x400490d	      1537	state.c	FUNCTION_26	ELSE_6	IF_8
0x4890	        0x488b45f8	                mov rax, qword [rbp - 8]	      1537	state.c	FUNCTION_26	ELSE_6	IF_8
0x4894	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1537	state.c	FUNCTION_26	ELSE_6	IF_8
0x4898	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1537	state.c	FUNCTION_26	ELSE_6	IF_8
0x489c	          0x4885c0	                           test rax, rax	      1537	state.c	FUNCTION_26	ELSE_6	IF_8
0x489f	            0x742c	                            je 0x400490d	      1537	state.c	FUNCTION_26	ELSE_6	IF_8
0x48a1	        0x488b45f8	                mov rax, qword [rbp - 8]	      1538	state.c	FUNCTION_26	ELSE_6	IF_8	IF_9
0x48a5	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1538	state.c	FUNCTION_26	ELSE_6	IF_8	IF_9
0x48a9	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1538	state.c	FUNCTION_26	ELSE_6	IF_8	IF_9
0x48ad	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1538	state.c	FUNCTION_26	ELSE_6	IF_8	IF_9
0x48b1	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      1538	state.c	FUNCTION_26	ELSE_6	IF_8	IF_9
0x48b5	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	      1538	state.c	FUNCTION_26	ELSE_6	IF_8	IF_9
0x48b9	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      1538	state.c	FUNCTION_26	ELSE_6	IF_8	IF_9
0x48bd	          0x4889cf	                            mov rdi, rcx	      1538	state.c	FUNCTION_26	ELSE_6	IF_8	IF_9
0x48c0	            0xffd0	                                call rax	      1538	state.c	FUNCTION_26	ELSE_6	IF_8	IF_9
0x48c2	            0x85c0	                           test eax, eax	      1538	state.c	FUNCTION_26	ELSE_6	IF_8	IF_9
0x48c4	            0x7407	                            je 0x400490d	      1538	state.c	FUNCTION_26	ELSE_6	IF_8	IF_9
0x48c6	      0xb801000000	                              mov eax, 1	      1539	state.c	FUNCTION_26	ELSE_6	IF_8	IF_9
0x48cb	            0xeb05	                           jmp 0x4004912	      1539	state.c	FUNCTION_26	ELSE_6	IF_8	IF_9
0x48cd	      0xb800000000	                              mov eax, 0	      1541	state.c	FUNCTION_26
0x48d2	              0xc9	                                   leave	      1542	state.c	FUNCTION_26
0x48d3	              0xc3	                                     ret	      1542	state.c	FUNCTION_26
vterm_state_reset	SWITCH,0:functions,0:ELSE,1:CALL,10:WHILE,0:DO,0:IF,4:FOR,3	215
0x52db	              0x55	                                push rbp	      1722	state.c	FUNCTION_31
0x52dc	          0x4889e5	                            mov rbp, rsp	      1722	state.c	FUNCTION_31
0x52df	        0x4883ec40	                           sub rsp, 0x40	      1722	state.c	FUNCTION_31
0x52e3	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1722	state.c	FUNCTION_31
0x52e7	          0x8975c4	             mov dword [rbp - 0x3c], esi	      1722	state.c	FUNCTION_31
0x52ea	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1725	state.c	FUNCTION_31
0x52ee	    0xc7403c000000	               mov dword [rax + 0x3c], 0	      1725	state.c	FUNCTION_31
0x52f5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1726	state.c	FUNCTION_31
0x52f9	    0xc74040ffffff	     mov dword [rax + 0x40], 0xffffffff 	      1726	state.c	FUNCTION_31
0x5300	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1727	state.c	FUNCTION_31
0x5304	    0xc74044000000	               mov dword [rax + 0x44], 0	      1727	state.c	FUNCTION_31
0x530b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1728	state.c	FUNCTION_31
0x530f	    0xc74048ffffff	     mov dword [rax + 0x48], 0xffffffff 	      1728	state.c	FUNCTION_31
0x5316	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1730	state.c	FUNCTION_31
0x531a	     0xfb690940000	           movzx edx, byte [rax + 0x94] 	      1730	state.c	FUNCTION_31
0x5321	          0x83e2fe	                     and edx, 0xfffffffe	      1730	state.c	FUNCTION_31
0x5324	    0x889094000000	               mov byte [rax + 0x94], dl	      1730	state.c	FUNCTION_31
0x532a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1731	state.c	FUNCTION_31
0x532e	     0xfb690940000	           movzx edx, byte [rax + 0x94] 	      1731	state.c	FUNCTION_31
0x5335	          0x83e2fd	                     and edx, 0xfffffffd	      1731	state.c	FUNCTION_31
0x5338	    0x889094000000	               mov byte [rax + 0x94], dl	      1731	state.c	FUNCTION_31
0x533e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1732	state.c	FUNCTION_31
0x5342	     0xfb690940000	           movzx edx, byte [rax + 0x94] 	      1732	state.c	FUNCTION_31
0x5349	          0x83ca04	                               or edx, 4	      1732	state.c	FUNCTION_31
0x534c	    0x889094000000	               mov byte [rax + 0x94], dl	      1732	state.c	FUNCTION_31
0x5352	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1733	state.c	FUNCTION_31
0x5356	     0xfb690940000	           movzx edx, byte [rax + 0x94] 	      1733	state.c	FUNCTION_31
0x535d	          0x83e2f7	                     and edx, 0xfffffff7	      1733	state.c	FUNCTION_31
0x5360	    0x889094000000	               mov byte [rax + 0x94], dl	      1733	state.c	FUNCTION_31
0x5366	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1734	state.c	FUNCTION_31
0x536a	     0xfb690940000	           movzx edx, byte [rax + 0x94] 	      1734	state.c	FUNCTION_31
0x5371	          0x83e2ef	                     and edx, 0xffffffef	      1734	state.c	FUNCTION_31
0x5374	    0x889094000000	               mov byte [rax + 0x94], dl	      1734	state.c	FUNCTION_31
0x537a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1735	state.c	FUNCTION_31
0x537e	     0xfb690950000	           movzx edx, byte [rax + 0x95] 	      1735	state.c	FUNCTION_31
0x5385	          0x83e2fd	                     and edx, 0xfffffffd	      1735	state.c	FUNCTION_31
0x5388	    0x889095000000	               mov byte [rax + 0x95], dl	      1735	state.c	FUNCTION_31
0x538e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1736	state.c	FUNCTION_31
0x5392	     0xfb690950000	           movzx edx, byte [rax + 0x95] 	      1736	state.c	FUNCTION_31
0x5399	          0x83e2fb	                     and edx, 0xfffffffb	      1736	state.c	FUNCTION_31
0x539c	    0x889095000000	               mov byte [rax + 0x95], dl	      1736	state.c	FUNCTION_31
0x53a2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1737	state.c	FUNCTION_31
0x53a6	     0xfb690950000	           movzx edx, byte [rax + 0x95] 	      1737	state.c	FUNCTION_31
0x53ad	          0x83e2ef	                     and edx, 0xffffffef	      1737	state.c	FUNCTION_31
0x53b0	    0x889095000000	               mov byte [rax + 0x95], dl	      1737	state.c	FUNCTION_31
0x53b6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1738	state.c	FUNCTION_31
0x53ba	     0xfb690950000	           movzx edx, byte [rax + 0x95] 	      1738	state.c	FUNCTION_31
0x53c1	          0x83e2df	                     and edx, 0xffffffdf	      1738	state.c	FUNCTION_31
0x53c4	    0x889095000000	               mov byte [rax + 0x95], dl	      1738	state.c	FUNCTION_31
0x53ca	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1739	state.c	FUNCTION_31
0x53ce	     0xfb690950000	           movzx edx, byte [rax + 0x95] 	      1739	state.c	FUNCTION_31
0x53d5	          0x83e2bf	                     and edx, 0xffffffbf	      1739	state.c	FUNCTION_31
0x53d8	    0x889095000000	               mov byte [rax + 0x95], dl	      1739	state.c	FUNCTION_31
0x53de	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1741	state.c	FUNCTION_31
0x53e2	          0x488b00	                    mov rax, qword [rax]	      1741	state.c	FUNCTION_31
0x53e5	         0xfb65018	           movzx edx, byte [rax + 0x18] 	      1741	state.c	FUNCTION_31
0x53e9	          0x83e2fd	                     and edx, 0xfffffffd	      1741	state.c	FUNCTION_31
0x53ec	          0x885018	               mov byte [rax + 0x18], dl	      1741	state.c	FUNCTION_31
0x53ef	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      1745	state.c	FUNCTION_31	FOR_1
0x53f6	            0xeb32	                           jmp 0x400546a	      1745	state.c	FUNCTION_31	FOR_1
0x53f8	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1746	state.c	FUNCTION_31	FOR_1	IF_1
0x53fb	          0x83e007	                              and eax, 7	      1746	state.c	FUNCTION_31	FOR_1	IF_1
0x53fe	            0x85c0	                           test eax, eax	      1746	state.c	FUNCTION_31	FOR_1	IF_1
0x5400	            0x7513	                           jne 0x4005455	      1746	state.c	FUNCTION_31	FOR_1	IF_1
0x5402	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1747	state.c	FUNCTION_31	FOR_1	IF_1
0x5405	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1747	state.c	FUNCTION_31	FOR_1	IF_1
0x5409	            0x89d6	                            mov esi, edx	      1747	state.c	FUNCTION_31	FOR_1	IF_1
0x540b	          0x4889c7	                            mov rdi, rax	      1747	state.c	FUNCTION_31	FOR_1	IF_1
0x540e	      0xe8d6b2ffff	                call sym.set_col_tabstop	      1747	state.c	FUNCTION_31	FOR_1	IF_1
0x5413	            0xeb11	                           jmp 0x4005466	      1747	state.c	FUNCTION_31	FOR_1	IF_1
0x5415	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1749	state.c	FUNCTION_31	CALL_2
0x5418	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1749	state.c	FUNCTION_31	CALL_2
0x541c	            0x89d6	                            mov esi, edx	      1749	state.c	FUNCTION_31	CALL_2
0x541e	          0x4889c7	                            mov rdi, rax	      1749	state.c	FUNCTION_31	CALL_2
0x5421	      0xe813b3ffff	              call sym.clear_col_tabstop	      1749	state.c	FUNCTION_31	CALL_2
0x5426	        0x8345dc01	               add dword [rbp - 0x24], 1	      1745	state.c	FUNCTION_31	FOR_1
0x542a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1745	state.c	FUNCTION_31	FOR_1
0x542e	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1745	state.c	FUNCTION_31	FOR_1
0x5431	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      1745	state.c	FUNCTION_31	FOR_1
0x5434	            0x7fc2	                            jg 0x4005438	      1745	state.c	FUNCTION_31	FOR_1
0x5436	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      1754	state.c	FUNCTION_31	FOR_2
0x543d	            0xeb23	                           jmp 0x40054a2	      1754	state.c	FUNCTION_31	FOR_2
0x543f	          0x8b75e0	             mov esi, dword [rbp - 0x20]	      1755	state.c	FUNCTION_31	CALL_3
0x5442	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1755	state.c	FUNCTION_31	CALL_3
0x5446	    0x41b800000000	                              mov r8d, 0	      1755	state.c	FUNCTION_31	CALL_3
0x544c	      0xb900000000	                              mov ecx, 0	      1755	state.c	FUNCTION_31	CALL_3
0x5451	      0xba01000000	                              mov edx, 1	      1755	state.c	FUNCTION_31	CALL_3
0x5456	          0x4889c7	                            mov rdi, rax	      1755	state.c	FUNCTION_31	CALL_3
0x5459	      0xe8f4b4ffff	                   call sym.set_lineinfo	      1755	state.c	FUNCTION_31	CALL_3
0x545e	        0x8345e001	               add dword [rbp - 0x20], 1	      1754	state.c	FUNCTION_31	FOR_2
0x5462	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1754	state.c	FUNCTION_31	FOR_2
0x5466	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1754	state.c	FUNCTION_31	FOR_2
0x5469	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	      1754	state.c	FUNCTION_31	FOR_2
0x546c	            0x7fd1	                            jg 0x400547f	      1754	state.c	FUNCTION_31	FOR_2
0x546e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1758	state.c	FUNCTION_31	IF_2
0x5472	        0x488b4008	                mov rax, qword [rax + 8]	      1758	state.c	FUNCTION_31	IF_2
0x5476	          0x4885c0	                           test rax, rax	      1758	state.c	FUNCTION_31	IF_2
0x5479	            0x742a	                            je 0x40054e5	      1758	state.c	FUNCTION_31	IF_2
0x547b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1758	state.c	FUNCTION_31	IF_2
0x547f	        0x488b4008	                mov rax, qword [rax + 8]	      1758	state.c	FUNCTION_31	IF_2
0x5483	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1758	state.c	FUNCTION_31	IF_2
0x5487	          0x4885c0	                           test rax, rax	      1758	state.c	FUNCTION_31	IF_2
0x548a	            0x7419	                            je 0x40054e5	      1758	state.c	FUNCTION_31	IF_2
0x548c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1759	state.c	FUNCTION_31	IF_2
0x5490	        0x488b4008	                mov rax, qword [rax + 8]	      1759	state.c	FUNCTION_31	IF_2
0x5494	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1759	state.c	FUNCTION_31	IF_2
0x5498	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1759	state.c	FUNCTION_31	IF_2
0x549c	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      1759	state.c	FUNCTION_31	IF_2
0x54a0	          0x4889d7	                            mov rdi, rdx	      1759	state.c	FUNCTION_31	IF_2
0x54a3	            0xffd0	                                call rax	      1759	state.c	FUNCTION_31	IF_2
0x54a5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1761	state.c	FUNCTION_31	CALL_4
0x54a9	          0x4889c7	                            mov rdi, rax	      1761	state.c	FUNCTION_31	CALL_4
0x54ac	      0xe800000000	                          call 0x40054f1	      1761	state.c	FUNCTION_31	CALL_4
0x54b1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1763	state.c	FUNCTION_31
0x54b5	          0x488b00	                    mov rax, qword [rax]	      1763	state.c	FUNCTION_31
0x54b8	         0xfb64018	           movzx eax, byte [rax + 0x18] 	      1763	state.c	FUNCTION_31
0x54bc	          0x83e001	                              and eax, 1	      1763	state.c	FUNCTION_31
0x54bf	            0x84c0	                             test al, al	      1764	state.c	FUNCTION_31	CALL_5
0x54c1	            0x7411	                            je 0x4005514	      1764	state.c	FUNCTION_31	CALL_5
0x54c3	      0xbe75000000	                           mov esi, 0x75	      1764	state.c	FUNCTION_31	CALL_5
0x54c8	      0xbf00000000	                              mov edi, 0	      1764	state.c	FUNCTION_31	CALL_5
0x54cd	      0xe800000000	                          call 0x4005512	      1764	state.c	FUNCTION_31	CALL_5
0x54d2	            0xeb0f	                           jmp 0x4005523	      1764	state.c	FUNCTION_31	CALL_5
0x54d4	      0xbe42000000	                           mov esi, 0x42	      1764	state.c	FUNCTION_31	CALL_5
0x54d9	      0xbf01000000	                              mov edi, 1	      1764	state.c	FUNCTION_31	CALL_5
0x54de	      0xe800000000	                          call 0x4005523	      1764	state.c	FUNCTION_31	CALL_5
0x54e3	        0x488945e8	             mov qword [rbp - 0x18], rax	      1763	state.c	FUNCTION_31
0x54e7	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1769	state.c	FUNCTION_31	FOR_3
0x54ee	            0xeb70	                           jmp 0x40055a0	      1769	state.c	FUNCTION_31	FOR_3
0x54f0	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      1770	state.c	FUNCTION_31	FOR_3
0x54f4	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1770	state.c	FUNCTION_31	FOR_3
0x54f7	          0x4863d0	                         movsxd rdx, eax	      1770	state.c	FUNCTION_31	FOR_3
0x54fa	          0x4889d0	                            mov rax, rdx	      1770	state.c	FUNCTION_31	FOR_3
0x54fd	          0x4801c0	                            add rax, rax	      1770	state.c	FUNCTION_31	FOR_3
0x5500	          0x4801d0	                            add rax, rdx	      1770	state.c	FUNCTION_31	FOR_3
0x5503	        0x48c1e003	                              shl rax, 3	      1770	state.c	FUNCTION_31	FOR_3
0x5507	          0x4801c8	                            add rax, rcx	      1770	state.c	FUNCTION_31	FOR_3
0x550a	    0x488d90980000	                   lea rdx, [rax + 0x98]	      1770	state.c	FUNCTION_31	FOR_3
0x5511	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1770	state.c	FUNCTION_31	FOR_3
0x5515	          0x488902	                    mov qword [rdx], rax	      1770	state.c	FUNCTION_31	FOR_3
0x5518	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1771	state.c	FUNCTION_31	FOR_3	IF_3
0x551c	          0x488b00	                    mov rax, qword [rax]	      1771	state.c	FUNCTION_31	FOR_3	IF_3
0x551f	          0x4885c0	                           test rax, rax	      1771	state.c	FUNCTION_31	FOR_3	IF_3
0x5522	            0x7438	                            je 0x400559c	      1771	state.c	FUNCTION_31	FOR_3	IF_3
0x5524	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1772	state.c	FUNCTION_31	FOR_3	IF_3
0x5528	          0x488b08	                    mov rcx, qword [rax]	      1772	state.c	FUNCTION_31	FOR_3	IF_3
0x552b	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1772	state.c	FUNCTION_31	FOR_3	IF_3
0x552e	          0x4863d0	                         movsxd rdx, eax	      1772	state.c	FUNCTION_31	FOR_3	IF_3
0x5531	          0x4889d0	                            mov rax, rdx	      1772	state.c	FUNCTION_31	FOR_3	IF_3
0x5534	          0x4801c0	                            add rax, rax	      1772	state.c	FUNCTION_31	FOR_3	IF_3
0x5537	          0x4801d0	                            add rax, rdx	      1772	state.c	FUNCTION_31	FOR_3	IF_3
0x553a	        0x48c1e003	                              shl rax, 3	      1772	state.c	FUNCTION_31	FOR_3	IF_3
0x553e	    0x488d90900000	                   lea rdx, [rax + 0x90]	      1772	state.c	FUNCTION_31	FOR_3	IF_3
0x5545	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1772	state.c	FUNCTION_31	FOR_3	IF_3
0x5549	          0x4801d0	                            add rax, rdx	      1772	state.c	FUNCTION_31	FOR_3	IF_3
0x554c	        0x488d5010	                   lea rdx, [rax + 0x10]	      1772	state.c	FUNCTION_31	FOR_3	IF_3
0x5550	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1772	state.c	FUNCTION_31	FOR_3	IF_3
0x5554	          0x4889d6	                            mov rsi, rdx	      1772	state.c	FUNCTION_31	FOR_3	IF_3
0x5557	          0x4889c7	                            mov rdi, rax	      1772	state.c	FUNCTION_31	FOR_3	IF_3
0x555a	            0xffd1	                                call rcx	      1772	state.c	FUNCTION_31	FOR_3	IF_3
0x555c	        0x8345e401	               add dword [rbp - 0x1c], 1	      1769	state.c	FUNCTION_31	FOR_3
0x5560	        0x837de403	               cmp dword [rbp - 0x1c], 3	      1769	state.c	FUNCTION_31	FOR_3
0x5564	            0x7e8a	                           jle 0x4005530	      1769	state.c	FUNCTION_31	FOR_3
0x5566	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1776	state.c	FUNCTION_31
0x556a	    0xc78010010000	              mov dword [rax + 0x110], 0	      1776	state.c	FUNCTION_31
0x5574	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1777	state.c	FUNCTION_31
0x5578	    0xc78014010000	              mov dword [rax + 0x114], 1	      1777	state.c	FUNCTION_31
0x5582	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1778	state.c	FUNCTION_31
0x5586	    0xc78018010000	              mov dword [rax + 0x118], 0	      1778	state.c	FUNCTION_31
0x5590	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1780	state.c	FUNCTION_31
0x5594	     0xfb6907c0100	          movzx edx, byte [rax + 0x17c] 	      1780	state.c	FUNCTION_31
0x559b	          0x83e2fe	                     and edx, 0xfffffffe	      1780	state.c	FUNCTION_31
0x559e	    0x88907c010000	              mov byte [rax + 0x17c], dl	      1780	state.c	FUNCTION_31
0x55a4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1783	state.c	FUNCTION_31	CALL_7
0x55a8	      0xba01000000	                              mov edx, 1	      1783	state.c	FUNCTION_31	CALL_7
0x55ad	      0xbe01000000	                              mov esi, 1	      1783	state.c	FUNCTION_31	CALL_7
0x55b2	          0x4889c7	                            mov rdi, rax	      1783	state.c	FUNCTION_31	CALL_7
0x55b5	      0xe806bfffff	               call sym.settermprop_bool	      1783	state.c	FUNCTION_31	CALL_7
0x55ba	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1784	state.c	FUNCTION_31	CALL_8
0x55be	      0xba01000000	                              mov edx, 1	      1784	state.c	FUNCTION_31	CALL_8
0x55c3	      0xbe02000000	                              mov esi, 2	      1784	state.c	FUNCTION_31	CALL_8
0x55c8	          0x4889c7	                            mov rdi, rax	      1784	state.c	FUNCTION_31	CALL_8
0x55cb	      0xe8f0beffff	               call sym.settermprop_bool	      1784	state.c	FUNCTION_31	CALL_8
0x55d0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1785	state.c	FUNCTION_31	CALL_9
0x55d4	      0xba01000000	                              mov edx, 1	      1785	state.c	FUNCTION_31	CALL_9
0x55d9	      0xbe07000000	                              mov esi, 7	      1785	state.c	FUNCTION_31	CALL_9
0x55de	          0x4889c7	                            mov rdi, rax	      1785	state.c	FUNCTION_31	CALL_9
0x55e1	      0xe82cbfffff	                call sym.settermprop_int	      1785	state.c	FUNCTION_31	CALL_9
0x55e6	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      1787	state.c	FUNCTION_31	IF_4
0x55ea	            0x746a	                            je 0x4005696	      1787	state.c	FUNCTION_31	IF_4
0x55ec	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      1788	state.c	FUNCTION_31	IF_4
0x55f3	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      1788	state.c	FUNCTION_31	IF_4
0x55fa	    0xc745f8000000	                  mov dword [rbp - 8], 0	      1788	state.c	FUNCTION_31	IF_4
0x5601	    0xc745fc000000	                  mov dword [rbp - 4], 0	      1788	state.c	FUNCTION_31	IF_4
0x5608	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1790	state.c	FUNCTION_31	IF_4
0x560c	    0xc74030000000	               mov dword [rax + 0x30], 0	      1790	state.c	FUNCTION_31	IF_4
0x5613	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1791	state.c	FUNCTION_31	IF_4
0x5617	    0xc74034000000	               mov dword [rax + 0x34], 0	      1791	state.c	FUNCTION_31	IF_4
0x561e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1792	state.c	FUNCTION_31	IF_4
0x5622	    0xc74038000000	               mov dword [rax + 0x38], 0	      1792	state.c	FUNCTION_31	IF_4
0x5629	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1794	state.c	FUNCTION_31	IF_4
0x562d	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1794	state.c	FUNCTION_31	IF_4
0x5630	          0x8945f4	              mov dword [rbp - 0xc], eax	      1794	state.c	FUNCTION_31	IF_4
0x5633	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1795	state.c	FUNCTION_31	IF_4
0x5637	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1795	state.c	FUNCTION_31	IF_4
0x563a	          0x8945fc	                mov dword [rbp - 4], eax	      1795	state.c	FUNCTION_31	IF_4
0x563d	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      1796	state.c	FUNCTION_31	IF_4	CALL_10
0x5641	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1796	state.c	FUNCTION_31	IF_4	CALL_10
0x5645	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1796	state.c	FUNCTION_31	IF_4	CALL_10
0x5649	      0xb900000000	                              mov ecx, 0	      1796	state.c	FUNCTION_31	IF_4	CALL_10
0x564e	          0x4889c7	                            mov rdi, rax	      1796	state.c	FUNCTION_31	IF_4	CALL_10
0x5651	      0xe85babffff	                          call sym.erase	      1796	state.c	FUNCTION_31	IF_4	CALL_10
0x5656	              0x90	                                     nop	      1798	state.c	FUNCTION_31
0x5657	              0xc9	                                   leave	      1798	state.c	FUNCTION_31
0x5658	              0xc3	                                     ret	      1798	state.c	FUNCTION_31
linefeed	SWITCH,0:functions,0:ELSE,1:CALL,5:WHILE,0:DO,0:IF,2:FOR,0	80
0x546	              0x55	                                push rbp	       128	state.c	FUNCTION_7
0x547	          0x4889e5	                            mov rbp, rsp	       128	state.c	FUNCTION_7
0x54a	        0x4883ec20	                           sub rsp, 0x20	       128	state.c	FUNCTION_7
0x54e	        0x48897de8	             mov qword [rbp - 0x18], rdi	       128	state.c	FUNCTION_7
0x552	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x556	          0x8b5030	            mov edx, dword [rax + 0x30] 	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x559	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x55d	          0x8b4040	            mov eax, dword [rax + 0x40] 	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x560	            0x85c0	                           test eax, eax	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x562	            0x780c	                            js 0x40005b0	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x564	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x568	          0x8b4040	            mov eax, dword [rax + 0x40] 	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x56b	          0x83e801	                              sub eax, 1	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x56e	            0xeb0a	                           jmp 0x40005ba	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x570	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x574	          0x8b4028	            mov eax, dword [rax + 0x28] 	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x577	          0x83e801	                              sub eax, 1	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x57a	            0x39c2	                            cmp edx, eax	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x57c	     0xf859c000000	                           jne 0x400065e	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x582	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       131	state.c	FUNCTION_7	IF_1
0x586	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       131	state.c	FUNCTION_7	IF_1
0x589	          0x8945f0	             mov dword [rbp - 0x10], eax	       131	state.c	FUNCTION_7	IF_1
0x58c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       132	state.c	FUNCTION_7	IF_1	CALL_2
0x590	          0x8b4040	            mov eax, dword [rax + 0x40] 	       132	state.c	FUNCTION_7	IF_1	CALL_2
0x593	            0x85c0	                           test eax, eax	       132	state.c	FUNCTION_7	IF_1	CALL_2
0x595	            0x7809	                            js 0x40005e0	       132	state.c	FUNCTION_7	IF_1	CALL_2
0x597	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       132	state.c	FUNCTION_7	IF_1	CALL_2
0x59b	          0x8b4040	            mov eax, dword [rax + 0x40] 	       132	state.c	FUNCTION_7	IF_1	CALL_2
0x59e	            0xeb07	                           jmp 0x40005e7	       132	state.c	FUNCTION_7	IF_1	CALL_2
0x5a0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       132	state.c	FUNCTION_7	IF_1	CALL_2
0x5a4	          0x8b4028	            mov eax, dword [rax + 0x28] 	       132	state.c	FUNCTION_7	IF_1	CALL_2
0x5a7	          0x8945f4	              mov dword [rbp - 0xc], eax	       132	state.c	FUNCTION_7	IF_1	CALL_2
0x5aa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       133	state.c	FUNCTION_7	IF_1	CALL_3
0x5ae	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	       133	state.c	FUNCTION_7	IF_1	CALL_3
0x5b5	          0x83e010	                           and eax, 0x10	       133	state.c	FUNCTION_7	IF_1	CALL_3
0x5b8	            0x84c0	                             test al, al	       133	state.c	FUNCTION_7	IF_1	CALL_3
0x5ba	            0x7409	                            je 0x4000605	       133	state.c	FUNCTION_7	IF_1	CALL_3
0x5bc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       133	state.c	FUNCTION_7	IF_1	CALL_3
0x5c0	          0x8b4044	            mov eax, dword [rax + 0x44] 	       133	state.c	FUNCTION_7	IF_1	CALL_3
0x5c3	            0xeb05	                           jmp 0x400060a	       133	state.c	FUNCTION_7	IF_1	CALL_3
0x5c5	      0xb800000000	                              mov eax, 0	       133	state.c	FUNCTION_7	IF_1	CALL_3
0x5ca	          0x8945f8	                mov dword [rbp - 8], eax	       133	state.c	FUNCTION_7	IF_1	CALL_3
0x5cd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x5d1	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x5d8	          0x83e010	                           and eax, 0x10	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x5db	            0x84c0	                             test al, al	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x5dd	            0x7414	                            je 0x4000633	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x5df	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x5e3	          0x8b4048	            mov eax, dword [rax + 0x48] 	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x5e6	            0x85c0	                           test eax, eax	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x5e8	            0x7809	                            js 0x4000633	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x5ea	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x5ee	          0x8b4048	            mov eax, dword [rax + 0x48] 	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x5f1	            0xeb07	                           jmp 0x400063a	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x5f3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x5f7	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x5fa	          0x8945fc	                mov dword [rbp - 4], eax	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x5fd	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       136	state.c	FUNCTION_7	IF_1	CALL_5
0x601	        0x488b55f8	                mov rdx, qword [rbp - 8]	       136	state.c	FUNCTION_7	IF_1	CALL_5
0x605	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       136	state.c	FUNCTION_7	IF_1	CALL_5
0x609	    0x41b800000000	                              mov r8d, 0	       136	state.c	FUNCTION_7	IF_1	CALL_5
0x60f	      0xb901000000	                              mov ecx, 1	       136	state.c	FUNCTION_7	IF_1	CALL_5
0x614	          0x4889c7	                            mov rdi, rax	       136	state.c	FUNCTION_7	IF_1	CALL_5
0x617	      0xe817fdffff	                         call sym.scroll	       136	state.c	FUNCTION_7	IF_1	CALL_5
0x61c	            0xeb26	                           jmp 0x4000684	       140	state.c	FUNCTION_7
0x61e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       138	state.c	FUNCTION_7	ELSE_1	IF_2
0x622	          0x8b5030	            mov edx, dword [rax + 0x30] 	       138	state.c	FUNCTION_7	ELSE_1	IF_2
0x625	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       138	state.c	FUNCTION_7	ELSE_1	IF_2
0x629	          0x8b4028	            mov eax, dword [rax + 0x28] 	       138	state.c	FUNCTION_7	ELSE_1	IF_2
0x62c	          0x83e801	                              sub eax, 1	       138	state.c	FUNCTION_7	ELSE_1	IF_2
0x62f	            0x39c2	                            cmp edx, eax	       138	state.c	FUNCTION_7	ELSE_1	IF_2
0x631	            0x7d11	                           jge 0x4000684	       138	state.c	FUNCTION_7	ELSE_1	IF_2
0x633	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       139	state.c	FUNCTION_7	ELSE_1	IF_2
0x637	          0x8b4030	            mov eax, dword [rax + 0x30] 	       139	state.c	FUNCTION_7	ELSE_1	IF_2
0x63a	          0x8d5001	                      lea edx, [rax + 1]	       139	state.c	FUNCTION_7	ELSE_1	IF_2
0x63d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       139	state.c	FUNCTION_7	ELSE_1	IF_2
0x641	          0x895030	             mov dword [rax + 0x30], edx	       139	state.c	FUNCTION_7	ELSE_1	IF_2
0x644	              0x90	                                     nop	       140	state.c	FUNCTION_7
0x645	              0xc9	                                   leave	       140	state.c	FUNCTION_7
0x646	              0xc3	                                     ret	       140	state.c	FUNCTION_7
on_escape	SWITCH,3:functions,0:ELSE,0:CALL,10:WHILE,0:DO,0:IF,10:FOR,2	316
0x17c4	              0x55	                                push rbp	       571	state.c	FUNCTION_21
0x17c5	          0x4889e5	                            mov rbp, rsp	       571	state.c	FUNCTION_21
0x17c8	        0x4883ec60	                           sub rsp, 0x60	       571	state.c	FUNCTION_21
0x17cc	        0x48897db8	             mov qword [rbp - 0x48], rdi	       571	state.c	FUNCTION_21
0x17d0	        0x488975b0	             mov qword [rbp - 0x50], rsi	       571	state.c	FUNCTION_21
0x17d4	        0x488955a8	             mov qword [rbp - 0x58], rdx	       571	state.c	FUNCTION_21
0x17d8	    0x64488b042528	                mov rax, qword fs:[0x28]	       571	state.c	FUNCTION_21
0x17e1	        0x488945f8	                mov qword [rbp - 8], rax	       571	state.c	FUNCTION_21
0x17e5	            0x31c0	                            xor eax, eax	       571	state.c	FUNCTION_21
0x17e7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       572	state.c	FUNCTION_21
0x17eb	        0x488945e0	             mov qword [rbp - 0x20], rax	       572	state.c	FUNCTION_21
0x17ef	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       577	state.c	FUNCTION_21	SWITCH_1
0x17f3	           0xfb600	                   movzx eax, byte [rax]	       577	state.c	FUNCTION_21	SWITCH_1
0x17f6	           0xfbec0	                           movsx eax, al	       577	state.c	FUNCTION_21	SWITCH_1
0x17f9	          0x83e820	                           sub eax, 0x20	       577	state.c	FUNCTION_21	SWITCH_1
0x17fc	          0x83f85e	                           cmp eax, 0x5e	       577	state.c	FUNCTION_21	SWITCH_1
0x17ff	     0xf877d040000	                            ja 0x4001cc2	       577	state.c	FUNCTION_21	SWITCH_1
0x1805	            0x89c0	                            mov eax, eax	       577	state.c	FUNCTION_21	SWITCH_1
0x1807	    0x488b04c50000	                  mov rax, qword [rax*8]	       577	state.c	FUNCTION_21	SWITCH_1
0x180f	            0xffe0	                                 jmp rax	       577	state.c	FUNCTION_21	SWITCH_1
0x1811	      0x48837db002	               cmp qword [rbp - 0x50], 2	       579	state.c	FUNCTION_21	SWITCH_1	IF_1
0x1816	            0x740a	                            je 0x4001862	       579	state.c	FUNCTION_21	SWITCH_1	IF_1
0x1818	      0xb800000000	                              mov eax, 0	       580	state.c	FUNCTION_21	SWITCH_1	IF_1
0x181d	      0xe965040000	                           jmp 0x4001cc7	       580	state.c	FUNCTION_21	SWITCH_1	IF_1
0x1822	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       582	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x1826	        0x4883c001	                              add rax, 1	       582	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x182a	           0xfb600	                   movzx eax, byte [rax]	       582	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x182d	           0xfbec0	                           movsx eax, al	       582	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x1830	          0x83f846	                           cmp eax, 0x46	       582	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x1833	            0x7407	                            je 0x400187c	       582	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x1835	          0x83f847	                           cmp eax, 0x47	       582	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x1838	            0x7415	                            je 0x400188f	       582	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x183a	            0xeb26	                           jmp 0x40018a2	       582	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x183c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       584	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x1840	          0x488b00	                    mov rax, qword [rax]	       584	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x1843	         0xfb65018	           movzx edx, byte [rax + 0x18] 	       584	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x1847	          0x83e2fd	                     and edx, 0xfffffffd	       584	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x184a	          0x885018	               mov byte [rax + 0x18], dl	       584	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x184d	            0xeb1d	                           jmp 0x40018ac	       585	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x184f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       588	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x1853	          0x488b00	                    mov rax, qword [rax]	       588	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x1856	         0xfb65018	           movzx edx, byte [rax + 0x18] 	       588	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x185a	          0x83ca02	                               or edx, 2	       588	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x185d	          0x885018	               mov byte [rax + 0x18], dl	       588	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x1860	            0xeb0a	                           jmp 0x40018ac	       589	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x1862	      0xb800000000	                              mov eax, 0	       592	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x1867	      0xe91b040000	                           jmp 0x4001cc7	       592	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x186c	      0xb802000000	                              mov eax, 2	       594	state.c	FUNCTION_21	SWITCH_1
0x1871	      0xe911040000	                           jmp 0x4001cc7	       594	state.c	FUNCTION_21	SWITCH_1
0x1876	      0x48837db002	               cmp qword [rbp - 0x50], 2	       597	state.c	FUNCTION_21	SWITCH_1	IF_2
0x187b	            0x740a	                            je 0x40018c7	       597	state.c	FUNCTION_21	SWITCH_1	IF_2
0x187d	      0xb800000000	                              mov eax, 0	       598	state.c	FUNCTION_21	SWITCH_1	IF_2
0x1882	      0xe900040000	                           jmp 0x4001cc7	       598	state.c	FUNCTION_21	SWITCH_1	IF_2
0x1887	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       600	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x188b	        0x4883c001	                              add rax, 1	       600	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x188f	           0xfb600	                   movzx eax, byte [rax]	       600	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x1892	           0xfbec0	                           movsx eax, al	       600	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x1895	          0x83e833	                           sub eax, 0x33	       600	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x1898	          0x83f805	                              cmp eax, 5	       600	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x189b	     0xf87a6010000	                            ja 0x4001a87	       600	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x18a1	            0x89c0	                            mov eax, eax	       600	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x18a3	    0x488b04c50000	                  mov rax, qword [rax*8]	       600	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x18ab	            0xffe0	                                 jmp rax	       600	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x18ad	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       602	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_3
0x18b1	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	       602	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_3
0x18b8	          0x83e010	                           and eax, 0x10	       602	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_3
0x18bb	            0x84c0	                             test al, al	       602	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_3
0x18bd	     0xf858e010000	                           jne 0x4001a91	       602	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_3
0x18c3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       604	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_1
0x18c7	          0x8b7030	            mov esi, dword [rax + 0x30] 	       604	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_1
0x18ca	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       604	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_1
0x18ce	    0x41b801000000	                              mov r8d, 1	       604	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_1
0x18d4	      0xb901000000	                              mov ecx, 1	       604	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_1
0x18d9	      0xba00000000	                              mov edx, 0	       604	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_1
0x18de	          0x4889c7	                            mov rdi, rax	       604	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_1
0x18e1	      0xe86cf0ffff	                   call sym.set_lineinfo	       604	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_1
0x18e6	      0xe970010000	                           jmp 0x4001a9b	       605	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x18eb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       608	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_4
0x18ef	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	       608	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_4
0x18f6	          0x83e010	                           and eax, 0x10	       608	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_4
0x18f9	            0x84c0	                             test al, al	       608	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_4
0x18fb	     0xf8553010000	                           jne 0x4001a94	       608	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_4
0x1901	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       610	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_2
0x1905	          0x8b7030	            mov esi, dword [rax + 0x30] 	       610	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_2
0x1908	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       610	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_2
0x190c	    0x41b802000000	                              mov r8d, 2	       610	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_2
0x1912	      0xb901000000	                              mov ecx, 1	       610	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_2
0x1917	      0xba00000000	                              mov edx, 0	       610	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_2
0x191c	          0x4889c7	                            mov rdi, rax	       610	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_2
0x191f	      0xe82ef0ffff	                   call sym.set_lineinfo	       610	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_2
0x1924	      0xe932010000	                           jmp 0x4001a9b	       611	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x1929	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       614	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_5
0x192d	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	       614	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_5
0x1934	          0x83e010	                           and eax, 0x10	       614	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_5
0x1937	            0x84c0	                             test al, al	       614	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_5
0x1939	     0xf8518010000	                           jne 0x4001a97	       614	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_5
0x193f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       616	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_3
0x1943	          0x8b7030	            mov esi, dword [rax + 0x30] 	       616	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_3
0x1946	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       616	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_3
0x194a	    0x41b800000000	                              mov r8d, 0	       616	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_3
0x1950	      0xb900000000	                              mov ecx, 0	       616	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_3
0x1955	      0xba00000000	                              mov edx, 0	       616	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_3
0x195a	          0x4889c7	                            mov rdi, rax	       616	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_3
0x195d	      0xe8f0efffff	                   call sym.set_lineinfo	       616	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_3
0x1962	      0xe9f4000000	                           jmp 0x4001a9b	       617	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x1967	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       620	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_6
0x196b	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	       620	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_6
0x1972	          0x83e010	                           and eax, 0x10	       620	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_6
0x1975	            0x84c0	                             test al, al	       620	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_6
0x1977	     0xf85dd000000	                           jne 0x4001a9a	       620	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_6
0x197d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       622	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_4
0x1981	          0x8b7030	            mov esi, dword [rax + 0x30] 	       622	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_4
0x1984	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       622	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_4
0x1988	    0x41b800000000	                              mov r8d, 0	       622	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_4
0x198e	      0xb901000000	                              mov ecx, 1	       622	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_4
0x1993	      0xba00000000	                              mov edx, 0	       622	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_4
0x1998	          0x4889c7	                            mov rdi, rax	       622	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_4
0x199b	      0xe8b2efffff	                   call sym.set_lineinfo	       622	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_4
0x19a0	      0xe9b6000000	                           jmp 0x4001a9b	       623	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x19a5	    0xc745f0450000	           mov dword [rbp - 0x10], 0x45 	       628	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x19ac	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       628	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x19b3	    0xc745d0000000	               mov dword [rbp - 0x30], 0	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x19ba	            0xeb76	                           jmp 0x4001a72	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x19bc	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x19c3	            0xeb25	                           jmp 0x4001a2a	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x19c5	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       631	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2
0x19c9	        0x488d75f0	                   lea rsi, [rbp - 0x10]	       631	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2
0x19cd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       631	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2
0x19d1	          0x4889d1	                            mov rcx, rdx	       631	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2
0x19d4	      0xba01000000	                              mov edx, 1	       631	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2
0x19d9	          0x4889c7	                            mov rdi, rax	       631	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2
0x19dc	      0xe81fe6ffff	                       call sym.putglyph	       631	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2
0x19e1	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x19e4	          0x83c001	                              add eax, 1	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x19e7	          0x8945d4	             mov dword [rbp - 0x2c], eax	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x19ea	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x19ed	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x19f1	        0x488b4058	            mov rax, qword [rax + 0x58] 	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x19f5	          0x8b4dd0	             mov ecx, dword [rbp - 0x30]	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x19f8	          0x4863c9	                         movsxd rcx, ecx	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x19fb	        0x48c1e102	                              shl rcx, 2	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x19ff	          0x4801c8	                            add rax, rcx	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x1a02	           0xfb600	                   movzx eax, byte [rax]	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x1a05	          0x83e001	                              and eax, 1	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x1a08	            0x84c0	                             test al, al	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x1a0a	            0x7412	                            je 0x4001a5e	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x1a0c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x1a10	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x1a13	            0x89c1	                            mov ecx, eax	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x1a15	          0xc1e91f	                           shr ecx, 0x1f	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x1a18	             0x1c8	                            add eax, ecx	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x1a1a	            0xd1f8	                              sar eax, 1	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x1a1c	            0xeb07	                           jmp 0x4001a65	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x1a1e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x1a22	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x1a25	            0x39c2	                            cmp edx, eax	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x1a27	            0x7c9c	                            jl 0x4001a05	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x1a29	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x1a2c	          0x83c001	                              add eax, 1	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x1a2f	          0x8945d0	             mov dword [rbp - 0x30], eax	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x1a32	          0x8b55d0	             mov edx, dword [rbp - 0x30]	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x1a35	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x1a39	          0x8b4028	            mov eax, dword [rax + 0x28] 	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x1a3c	            0x39c2	                            cmp edx, eax	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x1a3e	     0xf8c78ffffff	                            jl 0x40019fc	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x1a44	              0x90	                                     nop	       632	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x1a45	            0xeb14	                           jmp 0x4001a9b	       632	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x1a47	      0xb800000000	                              mov eax, 0	       636	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x1a4c	      0xe936020000	                           jmp 0x4001cc7	       636	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x1a51	              0x90	                                     nop	       603	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_3
0x1a52	            0xeb07	                           jmp 0x4001a9b	       603	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_3
0x1a54	              0x90	                                     nop	       609	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_4
0x1a55	            0xeb04	                           jmp 0x4001a9b	       609	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_4
0x1a57	              0x90	                                     nop	       615	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_5
0x1a58	            0xeb01	                           jmp 0x4001a9b	       615	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_5
0x1a5a	              0x90	                                     nop	       621	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_6
0x1a5b	      0xb802000000	                              mov eax, 2	       638	state.c	FUNCTION_21	SWITCH_1
0x1a60	      0xe922020000	                           jmp 0x4001cc7	       638	state.c	FUNCTION_21	SWITCH_1
0x1a65	      0x48837db002	               cmp qword [rbp - 0x50], 2	       641	state.c	FUNCTION_21	SWITCH_1	IF_7
0x1a6a	            0x740a	                            je 0x4001ab6	       641	state.c	FUNCTION_21	SWITCH_1	IF_7
0x1a6c	      0xb800000000	                              mov eax, 0	       642	state.c	FUNCTION_21	SWITCH_1	IF_7
0x1a71	      0xe911020000	                           jmp 0x4001cc7	       642	state.c	FUNCTION_21	SWITCH_1	IF_7
0x1a76	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       645	state.c	FUNCTION_21	SWITCH_1
0x1a7a	           0xfb600	                   movzx eax, byte [rax]	       645	state.c	FUNCTION_21	SWITCH_1
0x1a7d	           0xfbec0	                           movsx eax, al	       645	state.c	FUNCTION_21	SWITCH_1
0x1a80	          0x83e828	                           sub eax, 0x28	       645	state.c	FUNCTION_21	SWITCH_1
0x1a83	          0x8945cc	             mov dword [rbp - 0x34], eax	       645	state.c	FUNCTION_21	SWITCH_1
0x1a86	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       646	state.c	FUNCTION_21	SWITCH_1	CALL_7
0x1a8a	        0x4883c001	                              add rax, 1	       646	state.c	FUNCTION_21	SWITCH_1	CALL_7
0x1a8e	           0xfb600	                   movzx eax, byte [rax]	       646	state.c	FUNCTION_21	SWITCH_1	CALL_7
0x1a91	           0xfbec0	                           movsx eax, al	       646	state.c	FUNCTION_21	SWITCH_1	CALL_7
0x1a94	            0x89c6	                            mov esi, eax	       646	state.c	FUNCTION_21	SWITCH_1	CALL_7
0x1a96	      0xbf01000000	                              mov edi, 1	       646	state.c	FUNCTION_21	SWITCH_1	CALL_7
0x1a9b	      0xe800000000	                          call 0x4001ae0	       646	state.c	FUNCTION_21	SWITCH_1	CALL_7
0x1aa0	        0x488945e8	             mov qword [rbp - 0x18], rax	       646	state.c	FUNCTION_21	SWITCH_1	CALL_7
0x1aa4	      0x48837de800	               cmp qword [rbp - 0x18], 0	       648	state.c	FUNCTION_21	SWITCH_1	IF_8
0x1aa9	            0x746c	                            je 0x4001b57	       648	state.c	FUNCTION_21	SWITCH_1	IF_8
0x1aab	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       649	state.c	FUNCTION_21	SWITCH_1	IF_8
0x1aaf	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       649	state.c	FUNCTION_21	SWITCH_1	IF_8
0x1ab2	          0x4863d0	                         movsxd rdx, eax	       649	state.c	FUNCTION_21	SWITCH_1	IF_8
0x1ab5	          0x4889d0	                            mov rax, rdx	       649	state.c	FUNCTION_21	SWITCH_1	IF_8
0x1ab8	          0x4801c0	                            add rax, rax	       649	state.c	FUNCTION_21	SWITCH_1	IF_8
0x1abb	          0x4801d0	                            add rax, rdx	       649	state.c	FUNCTION_21	SWITCH_1	IF_8
0x1abe	        0x48c1e003	                              shl rax, 3	       649	state.c	FUNCTION_21	SWITCH_1	IF_8
0x1ac2	          0x4801c8	                            add rax, rcx	       649	state.c	FUNCTION_21	SWITCH_1	IF_8
0x1ac5	    0x488d90980000	                   lea rdx, [rax + 0x98]	       649	state.c	FUNCTION_21	SWITCH_1	IF_8
0x1acc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       649	state.c	FUNCTION_21	SWITCH_1	IF_8
0x1ad0	          0x488902	                    mov qword [rdx], rax	       649	state.c	FUNCTION_21	SWITCH_1	IF_8
0x1ad3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       651	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x1ad7	          0x488b00	                    mov rax, qword [rax]	       651	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x1ada	          0x4885c0	                           test rax, rax	       651	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x1add	            0x7438	                            je 0x4001b57	       651	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x1adf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       652	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x1ae3	          0x488b08	                    mov rcx, qword [rax]	       652	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x1ae6	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       652	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x1ae9	          0x4863d0	                         movsxd rdx, eax	       652	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x1aec	          0x4889d0	                            mov rax, rdx	       652	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x1aef	          0x4801c0	                            add rax, rax	       652	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x1af2	          0x4801d0	                            add rax, rdx	       652	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x1af5	        0x48c1e003	                              shl rax, 3	       652	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x1af9	    0x488d90900000	                   lea rdx, [rax + 0x90]	       652	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x1b00	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       652	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x1b04	          0x4801d0	                            add rax, rdx	       652	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x1b07	        0x488d5010	                   lea rdx, [rax + 0x10]	       652	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x1b0b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       652	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x1b0f	          0x4889d6	                            mov rsi, rdx	       652	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x1b12	          0x4889c7	                            mov rdi, rax	       652	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x1b15	            0xffd1	                                call rcx	       652	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x1b17	      0xb802000000	                              mov eax, 2	       656	state.c	FUNCTION_21	SWITCH_1
0x1b1c	      0xe966010000	                           jmp 0x4001cc7	       656	state.c	FUNCTION_21	SWITCH_1
0x1b21	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       659	state.c	FUNCTION_21	SWITCH_1	CALL_8
0x1b25	      0xbe01000000	                              mov esi, 1	       659	state.c	FUNCTION_21	SWITCH_1	CALL_8
0x1b2a	          0x4889c7	                            mov rdi, rax	       659	state.c	FUNCTION_21	SWITCH_1	CALL_8
0x1b2d	      0xe8eafaffff	                     call sym.savecursor	       659	state.c	FUNCTION_21	SWITCH_1	CALL_8
0x1b32	      0xb801000000	                              mov eax, 1	       660	state.c	FUNCTION_21	SWITCH_1
0x1b37	      0xe94b010000	                           jmp 0x4001cc7	       660	state.c	FUNCTION_21	SWITCH_1
0x1b3c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       663	state.c	FUNCTION_21	SWITCH_1	CALL_9
0x1b40	      0xbe00000000	                              mov esi, 0	       663	state.c	FUNCTION_21	SWITCH_1	CALL_9
0x1b45	          0x4889c7	                            mov rdi, rax	       663	state.c	FUNCTION_21	SWITCH_1	CALL_9
0x1b48	      0xe8cffaffff	                     call sym.savecursor	       663	state.c	FUNCTION_21	SWITCH_1	CALL_9
0x1b4d	      0xb801000000	                              mov eax, 1	       664	state.c	FUNCTION_21	SWITCH_1
0x1b52	      0xe930010000	                           jmp 0x4001cc7	       664	state.c	FUNCTION_21	SWITCH_1
0x1b57	      0xb801000000	                              mov eax, 1	       667	state.c	FUNCTION_21	SWITCH_1
0x1b5c	      0xe926010000	                           jmp 0x4001cc7	       667	state.c	FUNCTION_21	SWITCH_1
0x1b61	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       670	state.c	FUNCTION_21	SWITCH_1
0x1b65	     0xfb690940000	           movzx edx, byte [rax + 0x94] 	       670	state.c	FUNCTION_21	SWITCH_1
0x1b6c	          0x83ca01	                               or edx, 1	       670	state.c	FUNCTION_21	SWITCH_1
0x1b6f	    0x889094000000	               mov byte [rax + 0x94], dl	       670	state.c	FUNCTION_21	SWITCH_1
0x1b75	      0xb801000000	                              mov eax, 1	       671	state.c	FUNCTION_21	SWITCH_1
0x1b7a	      0xe908010000	                           jmp 0x4001cc7	       671	state.c	FUNCTION_21	SWITCH_1
0x1b7f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       674	state.c	FUNCTION_21	SWITCH_1
0x1b83	     0xfb690940000	           movzx edx, byte [rax + 0x94] 	       674	state.c	FUNCTION_21	SWITCH_1
0x1b8a	          0x83e2fe	                     and edx, 0xfffffffe	       674	state.c	FUNCTION_21	SWITCH_1
0x1b8d	    0x889094000000	               mov byte [rax + 0x94], dl	       674	state.c	FUNCTION_21	SWITCH_1
0x1b93	      0xb801000000	                              mov eax, 1	       675	state.c	FUNCTION_21	SWITCH_1
0x1b98	      0xe9ea000000	                           jmp 0x4001cc7	       675	state.c	FUNCTION_21	SWITCH_1
0x1b9d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       679	state.c	FUNCTION_21	SWITCH_1
0x1ba1	        0x488b4030	            mov rax, qword [rax + 0x30] 	       679	state.c	FUNCTION_21	SWITCH_1
0x1ba5	        0x488945d0	             mov qword [rbp - 0x30], rax	       679	state.c	FUNCTION_21	SWITCH_1
0x1ba9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       680	state.c	FUNCTION_21	SWITCH_1	CALL_10
0x1bad	      0xbe01000000	                              mov esi, 1	       680	state.c	FUNCTION_21	SWITCH_1	CALL_10
0x1bb2	          0x4889c7	                            mov rdi, rax	       680	state.c	FUNCTION_21	SWITCH_1	CALL_10
0x1bb5	      0xe800000000	                          call 0x4001bfa	       680	state.c	FUNCTION_21	SWITCH_1	CALL_10
0x1bba	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       681	state.c	FUNCTION_21	SWITCH_1	IF_10
0x1bbe	        0x488b4008	                mov rax, qword [rax + 8]	       681	state.c	FUNCTION_21	SWITCH_1	IF_10
0x1bc2	          0x4885c0	                           test rax, rax	       681	state.c	FUNCTION_21	SWITCH_1	IF_10
0x1bc5	            0x744b	                            je 0x4001c52	       681	state.c	FUNCTION_21	SWITCH_1	IF_10
0x1bc7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       681	state.c	FUNCTION_21	SWITCH_1	IF_10
0x1bcb	        0x488b4008	                mov rax, qword [rax + 8]	       681	state.c	FUNCTION_21	SWITCH_1	IF_10
0x1bcf	        0x488b4008	                mov rax, qword [rax + 8]	       681	state.c	FUNCTION_21	SWITCH_1	IF_10
0x1bd3	          0x4885c0	                           test rax, rax	       681	state.c	FUNCTION_21	SWITCH_1	IF_10
0x1bd6	            0x743a	                            je 0x4001c52	       681	state.c	FUNCTION_21	SWITCH_1	IF_10
0x1bd8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x1bdc	        0x488b4008	                mov rax, qword [rax + 8]	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x1be0	        0x4c8b4008	                 mov r8, qword [rax + 8]	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x1be4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x1be8	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x1bec	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x1bf0	     0xfb680940000	           movzx eax, byte [rax + 0x94] 	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x1bf7	          0xc0e805	                               shr al, 5	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x1bfa	          0x83e001	                              and eax, 1	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x1bfd	           0xfb6d0	                           movzx edx, al	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x1c00	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x1c04	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x1c08	        0x488b4030	            mov rax, qword [rax + 0x30] 	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x1c0c	          0x4889c7	                            mov rdi, rax	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x1c0f	          0x41ffd0	                                 call r8	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x1c12	      0xb801000000	                              mov eax, 1	       683	state.c	FUNCTION_21	SWITCH_1
0x1c17	            0xeb6e	                           jmp 0x4001cc7	       683	state.c	FUNCTION_21	SWITCH_1
0x1c19	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       687	state.c	FUNCTION_21	SWITCH_1
0x1c1d	    0xc78010010000	              mov dword [rax + 0x110], 2	       687	state.c	FUNCTION_21	SWITCH_1
0x1c27	      0xb801000000	                              mov eax, 1	       688	state.c	FUNCTION_21	SWITCH_1
0x1c2c	            0xeb59	                           jmp 0x4001cc7	       688	state.c	FUNCTION_21	SWITCH_1
0x1c2e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       691	state.c	FUNCTION_21	SWITCH_1
0x1c32	    0xc78010010000	              mov dword [rax + 0x110], 3	       691	state.c	FUNCTION_21	SWITCH_1
0x1c3c	      0xb801000000	                              mov eax, 1	       692	state.c	FUNCTION_21	SWITCH_1
0x1c41	            0xeb44	                           jmp 0x4001cc7	       692	state.c	FUNCTION_21	SWITCH_1
0x1c43	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       695	state.c	FUNCTION_21	SWITCH_1
0x1c47	    0xc78014010000	              mov dword [rax + 0x114], 1	       695	state.c	FUNCTION_21	SWITCH_1
0x1c51	      0xb801000000	                              mov eax, 1	       696	state.c	FUNCTION_21	SWITCH_1
0x1c56	            0xeb2f	                           jmp 0x4001cc7	       696	state.c	FUNCTION_21	SWITCH_1
0x1c58	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       699	state.c	FUNCTION_21	SWITCH_1
0x1c5c	    0xc78014010000	              mov dword [rax + 0x114], 2	       699	state.c	FUNCTION_21	SWITCH_1
0x1c66	      0xb801000000	                              mov eax, 1	       700	state.c	FUNCTION_21	SWITCH_1
0x1c6b	            0xeb1a	                           jmp 0x4001cc7	       700	state.c	FUNCTION_21	SWITCH_1
0x1c6d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       703	state.c	FUNCTION_21	SWITCH_1
0x1c71	    0xc78014010000	              mov dword [rax + 0x114], 3	       703	state.c	FUNCTION_21	SWITCH_1
0x1c7b	      0xb801000000	                              mov eax, 1	       704	state.c	FUNCTION_21	SWITCH_1
0x1c80	            0xeb05	                           jmp 0x4001cc7	       704	state.c	FUNCTION_21	SWITCH_1
0x1c82	      0xb800000000	                              mov eax, 0	       707	state.c	FUNCTION_21	SWITCH_1
0x1c87	        0x488b7df8	                mov rdi, qword [rbp - 8]	       709	state.c	FUNCTION_21
0x1c8b	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       709	state.c	FUNCTION_21
0x1c94	            0x7405	                            je 0x4001cdb	       709	state.c	FUNCTION_21
0x1c96	      0xe800000000	                          call 0x4001cdb	       709	state.c	FUNCTION_21
0x1c9b	              0xc9	                                   leave	       709	state.c	FUNCTION_21
0x1c9c	              0xc3	                                     ret	       709	state.c	FUNCTION_21
savecursor	SWITCH,0:functions,0:ELSE,1:CALL,6:WHILE,0:DO,0:IF,1:FOR,0	103
0x161c	              0x55	                                push rbp	       546	state.c	FUNCTION_20
0x161d	          0x4889e5	                            mov rbp, rsp	       546	state.c	FUNCTION_20
0x1620	        0x4883ec20	                           sub rsp, 0x20	       546	state.c	FUNCTION_20
0x1624	        0x48897de8	             mov qword [rbp - 0x18], rdi	       546	state.c	FUNCTION_20
0x1628	          0x8975e4	             mov dword [rbp - 0x1c], esi	       546	state.c	FUNCTION_20
0x162b	    0x64488b042528	                mov rax, qword fs:[0x28]	       546	state.c	FUNCTION_20
0x1634	        0x488945f8	                mov qword [rbp - 8], rax	       546	state.c	FUNCTION_20
0x1638	            0x31c0	                            xor eax, eax	       546	state.c	FUNCTION_20
0x163a	        0x837de400	               cmp dword [rbp - 0x1c], 0	       547	state.c	FUNCTION_20	IF_1
0x163e	     0xf84b6000000	                            je 0x400173a	       547	state.c	FUNCTION_20	IF_1
0x1644	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       548	state.c	FUNCTION_20	IF_1
0x1648	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       548	state.c	FUNCTION_20	IF_1
0x164c	        0x488b5230	            mov rdx, qword [rdx + 0x30] 	       548	state.c	FUNCTION_20	IF_1
0x1650	    0x488990800100	            mov qword [rax + 0x180], rdx	       548	state.c	FUNCTION_20	IF_1
0x1657	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       549	state.c	FUNCTION_20	IF_1
0x165b	     0xfb680940000	           movzx eax, byte [rax + 0x94] 	       549	state.c	FUNCTION_20	IF_1
0x1662	          0xc0e805	                               shr al, 5	       549	state.c	FUNCTION_20	IF_1
0x1665	          0x83e001	                              and eax, 1	       549	state.c	FUNCTION_20	IF_1
0x1668	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       549	state.c	FUNCTION_20	IF_1
0x166c	          0x83e001	                              and eax, 1	       549	state.c	FUNCTION_20	IF_1
0x166f	            0x89c1	                            mov ecx, eax	       549	state.c	FUNCTION_20	IF_1
0x1671	     0xfb682940100	          movzx eax, byte [rdx + 0x194] 	       549	state.c	FUNCTION_20	IF_1
0x1678	          0x83e0fe	                     and eax, 0xfffffffe	       549	state.c	FUNCTION_20	IF_1
0x167b	             0x9c8	                             or eax, ecx	       549	state.c	FUNCTION_20	IF_1
0x167d	    0x888294010000	              mov byte [rdx + 0x194], al	       549	state.c	FUNCTION_20	IF_1
0x1683	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       550	state.c	FUNCTION_20	IF_1
0x1687	     0xfb680940000	           movzx eax, byte [rax + 0x94] 	       550	state.c	FUNCTION_20	IF_1
0x168e	          0xc0e806	                               shr al, 6	       550	state.c	FUNCTION_20	IF_1
0x1691	          0x83e001	                              and eax, 1	       550	state.c	FUNCTION_20	IF_1
0x1694	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       550	state.c	FUNCTION_20	IF_1
0x1698	          0x83e001	                              and eax, 1	       550	state.c	FUNCTION_20	IF_1
0x169b	          0x8d0c00	                    lea ecx, [rax + rax]	       550	state.c	FUNCTION_20	IF_1
0x169e	     0xfb682940100	          movzx eax, byte [rdx + 0x194] 	       550	state.c	FUNCTION_20	IF_1
0x16a5	          0x83e0fd	                     and eax, 0xfffffffd	       550	state.c	FUNCTION_20	IF_1
0x16a8	             0x9c8	                             or eax, ecx	       550	state.c	FUNCTION_20	IF_1
0x16aa	    0x888294010000	              mov byte [rdx + 0x194], al	       550	state.c	FUNCTION_20	IF_1
0x16b0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       551	state.c	FUNCTION_20	IF_1
0x16b4	     0xfb780940000	           movzx eax, word [rax + 0x94] 	       551	state.c	FUNCTION_20	IF_1
0x16bb	        0x66c1e807	                               shr ax, 7	       551	state.c	FUNCTION_20	IF_1
0x16bf	            0x89c2	                            mov edx, eax	       551	state.c	FUNCTION_20	IF_1
0x16c1	          0x83e203	                              and edx, 3	       551	state.c	FUNCTION_20	IF_1
0x16c4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       551	state.c	FUNCTION_20	IF_1
0x16c8	          0x83e203	                              and edx, 3	       551	state.c	FUNCTION_20	IF_1
0x16cb	    0x8d0c95000000	                        lea ecx, [rdx*4]	       551	state.c	FUNCTION_20	IF_1
0x16d2	     0xfb690940100	          movzx edx, byte [rax + 0x194] 	       551	state.c	FUNCTION_20	IF_1
0x16d9	          0x83e2f3	                     and edx, 0xfffffff3	       551	state.c	FUNCTION_20	IF_1
0x16dc	             0x9ca	                             or edx, ecx	       551	state.c	FUNCTION_20	IF_1
0x16de	    0x889094010000	              mov byte [rax + 0x194], dl	       551	state.c	FUNCTION_20	IF_1
0x16e4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       553	state.c	FUNCTION_20	IF_1	CALL_1
0x16e8	      0xbe01000000	                              mov esi, 1	       553	state.c	FUNCTION_20	IF_1	CALL_1
0x16ed	          0x4889c7	                            mov rdi, rax	       553	state.c	FUNCTION_20	IF_1	CALL_1
0x16f0	      0xe800000000	                          call 0x4001735	       553	state.c	FUNCTION_20	IF_1	CALL_1
0x16f5	      0xe9b3000000	                           jmp 0x40017ed	       568	state.c	FUNCTION_20
0x16fa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       556	state.c	FUNCTION_20	ELSE_1
0x16fe	        0x488b4030	            mov rax, qword [rax + 0x30] 	       556	state.c	FUNCTION_20	ELSE_1
0x1702	        0x488945f0	             mov qword [rbp - 0x10], rax	       556	state.c	FUNCTION_20	ELSE_1
0x1706	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       558	state.c	FUNCTION_20	ELSE_1
0x170a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       558	state.c	FUNCTION_20	ELSE_1
0x170e	    0x488b92800100	           mov rdx, qword [rdx + 0x180] 	       558	state.c	FUNCTION_20	ELSE_1
0x1715	        0x48895030	             mov qword [rax + 0x30], rdx	       558	state.c	FUNCTION_20	ELSE_1
0x1719	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       560	state.c	FUNCTION_20	ELSE_1	CALL_2
0x171d	     0xfb680940100	          movzx eax, byte [rax + 0x194] 	       560	state.c	FUNCTION_20	ELSE_1	CALL_2
0x1724	          0x83e001	                              and eax, 1	       560	state.c	FUNCTION_20	ELSE_1	CALL_2
0x1727	           0xfb6d0	                           movzx edx, al	       560	state.c	FUNCTION_20	ELSE_1	CALL_2
0x172a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       560	state.c	FUNCTION_20	ELSE_1	CALL_2
0x172e	      0xbe01000000	                              mov esi, 1	       560	state.c	FUNCTION_20	ELSE_1	CALL_2
0x1733	          0x4889c7	                            mov rdi, rax	       560	state.c	FUNCTION_20	ELSE_1	CALL_2
0x1736	      0xe885fdffff	               call sym.settermprop_bool	       560	state.c	FUNCTION_20	ELSE_1	CALL_2
0x173b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       561	state.c	FUNCTION_20	ELSE_1	CALL_3
0x173f	     0xfb680940100	          movzx eax, byte [rax + 0x194] 	       561	state.c	FUNCTION_20	ELSE_1	CALL_3
0x1746	            0xd0e8	                               shr al, 1	       561	state.c	FUNCTION_20	ELSE_1	CALL_3
0x1748	          0x83e001	                              and eax, 1	       561	state.c	FUNCTION_20	ELSE_1	CALL_3
0x174b	           0xfb6d0	                           movzx edx, al	       561	state.c	FUNCTION_20	ELSE_1	CALL_3
0x174e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       561	state.c	FUNCTION_20	ELSE_1	CALL_3
0x1752	      0xbe02000000	                              mov esi, 2	       561	state.c	FUNCTION_20	ELSE_1	CALL_3
0x1757	          0x4889c7	                            mov rdi, rax	       561	state.c	FUNCTION_20	ELSE_1	CALL_3
0x175a	      0xe861fdffff	               call sym.settermprop_bool	       561	state.c	FUNCTION_20	ELSE_1	CALL_3
0x175f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       562	state.c	FUNCTION_20	ELSE_1	CALL_4
0x1763	     0xfb680940100	          movzx eax, byte [rax + 0x194] 	       562	state.c	FUNCTION_20	ELSE_1	CALL_4
0x176a	          0xc0e802	                               shr al, 2	       562	state.c	FUNCTION_20	ELSE_1	CALL_4
0x176d	          0x83e003	                              and eax, 3	       562	state.c	FUNCTION_20	ELSE_1	CALL_4
0x1770	           0xfb6d0	                           movzx edx, al	       562	state.c	FUNCTION_20	ELSE_1	CALL_4
0x1773	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       562	state.c	FUNCTION_20	ELSE_1	CALL_4
0x1777	      0xbe07000000	                              mov esi, 7	       562	state.c	FUNCTION_20	ELSE_1	CALL_4
0x177c	          0x4889c7	                            mov rdi, rax	       562	state.c	FUNCTION_20	ELSE_1	CALL_4
0x177f	      0xe88efdffff	                call sym.settermprop_int	       562	state.c	FUNCTION_20	ELSE_1	CALL_4
0x1784	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       564	state.c	FUNCTION_20	ELSE_1	CALL_5
0x1788	      0xbe00000000	                              mov esi, 0	       564	state.c	FUNCTION_20	ELSE_1	CALL_5
0x178d	          0x4889c7	                            mov rdi, rax	       564	state.c	FUNCTION_20	ELSE_1	CALL_5
0x1790	      0xe800000000	                          call 0x40017d5	       564	state.c	FUNCTION_20	ELSE_1	CALL_5
0x1795	        0x488d4df0	                   lea rcx, [rbp - 0x10]	       566	state.c	FUNCTION_20	ELSE_1	CALL_6
0x1799	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       566	state.c	FUNCTION_20	ELSE_1	CALL_6
0x179d	      0xba01000000	                              mov edx, 1	       566	state.c	FUNCTION_20	ELSE_1	CALL_6
0x17a2	          0x4889ce	                            mov rsi, rcx	       566	state.c	FUNCTION_20	ELSE_1	CALL_6
0x17a5	          0x4889c7	                            mov rdi, rax	       566	state.c	FUNCTION_20	ELSE_1	CALL_6
0x17a8	      0xe85be9ffff	                   call sym.updatecursor	       566	state.c	FUNCTION_20	ELSE_1	CALL_6
0x17ad	              0x90	                                     nop	       568	state.c	FUNCTION_20
0x17ae	        0x488b45f8	                mov rax, qword [rbp - 8]	       568	state.c	FUNCTION_20
0x17b2	    0x644833042528	                xor rax, qword fs:[0x28]	       568	state.c	FUNCTION_20
0x17bb	            0x7405	                            je 0x4001802	       568	state.c	FUNCTION_20
0x17bd	      0xe800000000	                          call 0x4001802	       568	state.c	FUNCTION_20
0x17c2	              0xc9	                                   leave	       568	state.c	FUNCTION_20
0x17c3	              0xc3	                                     ret	       568	state.c	FUNCTION_20
vterm_state_get_lineinfo	SWITCH,0:functions,0:ELSE,0:CALL,0:WHILE,0:DO,0:IF,0:FOR,0	12
0x5a87	              0x55	                                push rbp	      1915	state.c	FUNCTION_41
0x5a88	          0x4889e5	                            mov rbp, rsp	      1915	state.c	FUNCTION_41
0x5a8b	        0x48897df8	                mov qword [rbp - 8], rdi	      1915	state.c	FUNCTION_41
0x5a8f	          0x8975f4	              mov dword [rbp - 0xc], esi	      1915	state.c	FUNCTION_41
0x5a92	        0x488b45f8	                mov rax, qword [rbp - 8]	      1916	state.c	FUNCTION_41
0x5a96	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1916	state.c	FUNCTION_41
0x5a9a	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1916	state.c	FUNCTION_41
0x5a9d	          0x4863d2	                         movsxd rdx, edx	      1916	state.c	FUNCTION_41
0x5aa0	        0x48c1e202	                              shl rdx, 2	      1916	state.c	FUNCTION_41
0x5aa4	          0x4801d0	                            add rax, rdx	      1916	state.c	FUNCTION_41
0x5aa7	              0x5d	                                 pop rbp	      1917	state.c	FUNCTION_41
0x5aa8	              0xc3	                                     ret	      1917	state.c	FUNCTION_41
on_control	SWITCH,1:functions,0:ELSE,1:CALL,12:WHILE,0:DO,0:IF,8:FOR,0	203
0x11b8	              0x55	                                push rbp	       419	state.c	FUNCTION_16
0x11b9	          0x4889e5	                            mov rbp, rsp	       419	state.c	FUNCTION_16
0x11bc	        0x4883ec40	                           sub rsp, 0x40	       419	state.c	FUNCTION_16
0x11c0	            0x89f8	                            mov eax, edi	       419	state.c	FUNCTION_16
0x11c2	        0x488975c0	             mov qword [rbp - 0x40], rsi	       419	state.c	FUNCTION_16
0x11c6	          0x8845cc	               mov byte [rbp - 0x34], al	       419	state.c	FUNCTION_16
0x11c9	    0x64488b042528	                mov rax, qword fs:[0x28]	       419	state.c	FUNCTION_16
0x11d2	        0x488945f8	                mov qword [rbp - 8], rax	       419	state.c	FUNCTION_16
0x11d6	            0x31c0	                            xor eax, eax	       419	state.c	FUNCTION_16
0x11d8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       420	state.c	FUNCTION_16
0x11dc	        0x488945d8	             mov qword [rbp - 0x28], rax	       420	state.c	FUNCTION_16
0x11e0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       422	state.c	FUNCTION_16
0x11e4	        0x488b4030	            mov rax, qword [rax + 0x30] 	       422	state.c	FUNCTION_16
0x11e8	        0x488945d0	             mov qword [rbp - 0x30], rax	       422	state.c	FUNCTION_16
0x11ec	         0xfb645cc	            movzx eax, byte [rbp - 0x34]	       424	state.c	FUNCTION_16	SWITCH_1
0x11f0	          0x83e807	                              sub eax, 7	       424	state.c	FUNCTION_16	SWITCH_1
0x11f3	      0x3d88000000	                           cmp eax, 0x88	       424	state.c	FUNCTION_16	SWITCH_1
0x11f8	     0xf8736020000	                            ja 0x4001474	       424	state.c	FUNCTION_16	SWITCH_1
0x11fe	            0x89c0	                            mov eax, eax	       424	state.c	FUNCTION_16	SWITCH_1
0x1200	    0x488b04c50000	                  mov rax, qword [rax*8]	       424	state.c	FUNCTION_16	SWITCH_1
0x1208	            0xffe0	                                 jmp rax	       424	state.c	FUNCTION_16	SWITCH_1
0x120a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       426	state.c	FUNCTION_16	SWITCH_1	IF_1
0x120e	        0x488b4008	                mov rax, qword [rax + 8]	       426	state.c	FUNCTION_16	SWITCH_1	IF_1
0x1212	          0x4885c0	                           test rax, rax	       426	state.c	FUNCTION_16	SWITCH_1	IF_1
0x1215	     0xf8468020000	                            je 0x40014c3	       426	state.c	FUNCTION_16	SWITCH_1	IF_1
0x121b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       426	state.c	FUNCTION_16	SWITCH_1	IF_1
0x121f	        0x488b4008	                mov rax, qword [rax + 8]	       426	state.c	FUNCTION_16	SWITCH_1	IF_1
0x1223	        0x488b4040	            mov rax, qword [rax + 0x40] 	       426	state.c	FUNCTION_16	SWITCH_1	IF_1
0x1227	          0x4885c0	                           test rax, rax	       426	state.c	FUNCTION_16	SWITCH_1	IF_1
0x122a	     0xf8453020000	                            je 0x40014c3	       426	state.c	FUNCTION_16	SWITCH_1	IF_1
0x1230	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       427	state.c	FUNCTION_16	SWITCH_1	IF_1
0x1234	        0x488b4008	                mov rax, qword [rax + 8]	       427	state.c	FUNCTION_16	SWITCH_1	IF_1
0x1238	        0x488b4040	            mov rax, qword [rax + 0x40] 	       427	state.c	FUNCTION_16	SWITCH_1	IF_1
0x123c	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       427	state.c	FUNCTION_16	SWITCH_1	IF_1
0x1240	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	       427	state.c	FUNCTION_16	SWITCH_1	IF_1
0x1244	          0x4889d7	                            mov rdi, rdx	       427	state.c	FUNCTION_16	SWITCH_1	IF_1
0x1247	            0xffd0	                                call rax	       427	state.c	FUNCTION_16	SWITCH_1	IF_1
0x1249	      0xe935020000	                           jmp 0x40014c3	       428	state.c	FUNCTION_16	SWITCH_1
0x124e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       431	state.c	FUNCTION_16	SWITCH_1	IF_2
0x1252	          0x8b4034	            mov eax, dword [rax + 0x34] 	       431	state.c	FUNCTION_16	SWITCH_1	IF_2
0x1255	            0x85c0	                           test eax, eax	       431	state.c	FUNCTION_16	SWITCH_1	IF_2
0x1257	     0xf8e29020000	                           jle 0x40014c6	       431	state.c	FUNCTION_16	SWITCH_1	IF_2
0x125d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       432	state.c	FUNCTION_16	SWITCH_1	IF_2
0x1261	          0x8b4034	            mov eax, dword [rax + 0x34] 	       432	state.c	FUNCTION_16	SWITCH_1	IF_2
0x1264	          0x8d50ff	                      lea edx, [rax - 1]	       432	state.c	FUNCTION_16	SWITCH_1	IF_2
0x1267	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       432	state.c	FUNCTION_16	SWITCH_1	IF_2
0x126b	          0x895034	             mov dword [rax + 0x34], edx	       432	state.c	FUNCTION_16	SWITCH_1	IF_2
0x126e	      0xe913020000	                           jmp 0x40014c6	       433	state.c	FUNCTION_16	SWITCH_1
0x1273	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       436	state.c	FUNCTION_16	SWITCH_1	CALL_1
0x1277	      0xba01000000	                              mov edx, 1	       436	state.c	FUNCTION_16	SWITCH_1	CALL_1
0x127c	      0xbe01000000	                              mov esi, 1	       436	state.c	FUNCTION_16	SWITCH_1	CALL_1
0x1281	          0x4889c7	                            mov rdi, rax	       436	state.c	FUNCTION_16	SWITCH_1	CALL_1
0x1284	      0xe8fcf5ffff	                            call sym.tab	       436	state.c	FUNCTION_16	SWITCH_1	CALL_1
0x1289	      0xe9ff010000	                           jmp 0x40014cd	       437	state.c	FUNCTION_16	SWITCH_1
0x128e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       442	state.c	FUNCTION_16	SWITCH_1	CALL_2
0x1292	          0x4889c7	                            mov rdi, rax	       442	state.c	FUNCTION_16	SWITCH_1	CALL_2
0x1295	      0xe8acf2ffff	                       call sym.linefeed	       442	state.c	FUNCTION_16	SWITCH_1	CALL_2
0x129a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       443	state.c	FUNCTION_16	SWITCH_1	IF_3
0x129e	     0xfb680940000	           movzx eax, byte [rax + 0x94] 	       443	state.c	FUNCTION_16	SWITCH_1	IF_3
0x12a5	          0x83e010	                           and eax, 0x10	       443	state.c	FUNCTION_16	SWITCH_1	IF_3
0x12a8	            0x84c0	                             test al, al	       443	state.c	FUNCTION_16	SWITCH_1	IF_3
0x12aa	     0xf84d9010000	                            je 0x40014c9	       443	state.c	FUNCTION_16	SWITCH_1	IF_3
0x12b0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       444	state.c	FUNCTION_16	SWITCH_1	IF_3
0x12b4	    0xc74034000000	               mov dword [rax + 0x34], 0	       444	state.c	FUNCTION_16	SWITCH_1	IF_3
0x12bb	      0xe9c9010000	                           jmp 0x40014c9	       445	state.c	FUNCTION_16	SWITCH_1
0x12c0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       448	state.c	FUNCTION_16	SWITCH_1
0x12c4	    0xc74034000000	               mov dword [rax + 0x34], 0	       448	state.c	FUNCTION_16	SWITCH_1
0x12cb	      0xe9bd010000	                           jmp 0x40014cd	       449	state.c	FUNCTION_16	SWITCH_1
0x12d0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       452	state.c	FUNCTION_16	SWITCH_1
0x12d4	    0xc78010010000	              mov dword [rax + 0x110], 1	       452	state.c	FUNCTION_16	SWITCH_1
0x12de	      0xe9aa010000	                           jmp 0x40014cd	       453	state.c	FUNCTION_16	SWITCH_1
0x12e3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       456	state.c	FUNCTION_16	SWITCH_1
0x12e7	    0xc78010010000	              mov dword [rax + 0x110], 0	       456	state.c	FUNCTION_16	SWITCH_1
0x12f1	      0xe997010000	                           jmp 0x40014cd	       457	state.c	FUNCTION_16	SWITCH_1
0x12f6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       460	state.c	FUNCTION_16	SWITCH_1	CALL_3
0x12fa	          0x4889c7	                            mov rdi, rax	       460	state.c	FUNCTION_16	SWITCH_1	CALL_3
0x12fd	      0xe844f2ffff	                       call sym.linefeed	       460	state.c	FUNCTION_16	SWITCH_1	CALL_3
0x1302	      0xe986010000	                           jmp 0x40014cd	       461	state.c	FUNCTION_16	SWITCH_1
0x1307	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       464	state.c	FUNCTION_16	SWITCH_1	CALL_4
0x130b	          0x4889c7	                            mov rdi, rax	       464	state.c	FUNCTION_16	SWITCH_1	CALL_4
0x130e	      0xe833f2ffff	                       call sym.linefeed	       464	state.c	FUNCTION_16	SWITCH_1	CALL_4
0x1313	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       465	state.c	FUNCTION_16	SWITCH_1
0x1317	    0xc74034000000	               mov dword [rax + 0x34], 0	       465	state.c	FUNCTION_16	SWITCH_1
0x131e	      0xe96a010000	                           jmp 0x40014cd	       466	state.c	FUNCTION_16	SWITCH_1
0x1323	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       469	state.c	FUNCTION_16	SWITCH_1	CALL_5
0x1327	          0x8b5034	            mov edx, dword [rax + 0x34] 	       469	state.c	FUNCTION_16	SWITCH_1	CALL_5
0x132a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       469	state.c	FUNCTION_16	SWITCH_1	CALL_5
0x132e	            0x89d6	                            mov esi, edx	       469	state.c	FUNCTION_16	SWITCH_1	CALL_5
0x1330	          0x4889c7	                            mov rdi, rax	       469	state.c	FUNCTION_16	SWITCH_1	CALL_5
0x1333	      0xe8b1f3ffff	                call sym.set_col_tabstop	       469	state.c	FUNCTION_16	SWITCH_1	CALL_5
0x1338	      0xe950010000	                           jmp 0x40014cd	       470	state.c	FUNCTION_16	SWITCH_1
0x133d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       473	state.c	FUNCTION_16	SWITCH_1	IF_4
0x1341	          0x8b5030	            mov edx, dword [rax + 0x30] 	       473	state.c	FUNCTION_16	SWITCH_1	IF_4
0x1344	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       473	state.c	FUNCTION_16	SWITCH_1	IF_4
0x1348	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       473	state.c	FUNCTION_16	SWITCH_1	IF_4
0x134b	            0x39c2	                            cmp edx, eax	       473	state.c	FUNCTION_16	SWITCH_1	IF_4
0x134d	     0xf859f000000	                           jne 0x4001432	       473	state.c	FUNCTION_16	SWITCH_1	IF_4
0x1353	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       475	state.c	FUNCTION_16	SWITCH_1	IF_4
0x1357	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       475	state.c	FUNCTION_16	SWITCH_1	IF_4
0x135a	          0x8945e0	             mov dword [rbp - 0x20], eax	       475	state.c	FUNCTION_16	SWITCH_1	IF_4
0x135d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       476	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_6
0x1361	          0x8b4040	            mov eax, dword [rax + 0x40] 	       476	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_6
0x1364	            0x85c0	                           test eax, eax	       476	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_6
0x1366	            0x7809	                            js 0x40013b1	       476	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_6
0x1368	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       476	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_6
0x136c	          0x8b4040	            mov eax, dword [rax + 0x40] 	       476	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_6
0x136f	            0xeb07	                           jmp 0x40013b8	       476	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_6
0x1371	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       476	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_6
0x1375	          0x8b4028	            mov eax, dword [rax + 0x28] 	       476	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_6
0x1378	          0x8945e4	             mov dword [rbp - 0x1c], eax	       476	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_6
0x137b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       477	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_7
0x137f	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	       477	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_7
0x1386	          0x83e010	                           and eax, 0x10	       477	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_7
0x1389	            0x84c0	                             test al, al	       477	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_7
0x138b	            0x7409	                            je 0x40013d6	       477	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_7
0x138d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       477	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_7
0x1391	          0x8b4044	            mov eax, dword [rax + 0x44] 	       477	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_7
0x1394	            0xeb05	                           jmp 0x40013db	       477	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_7
0x1396	      0xb800000000	                              mov eax, 0	       477	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_7
0x139b	          0x8945e8	             mov dword [rbp - 0x18], eax	       477	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_7
0x139e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       478	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_8
0x13a2	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	       478	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_8
0x13a9	          0x83e010	                           and eax, 0x10	       478	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_8
0x13ac	            0x84c0	                             test al, al	       478	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_8
0x13ae	            0x7414	                            je 0x4001404	       478	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_8
0x13b0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       478	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_8
0x13b4	          0x8b4048	            mov eax, dword [rax + 0x48] 	       478	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_8
0x13b7	            0x85c0	                           test eax, eax	       478	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_8
0x13b9	            0x7809	                            js 0x4001404	       478	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_8
0x13bb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       478	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_8
0x13bf	          0x8b4048	            mov eax, dword [rax + 0x48] 	       478	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_8
0x13c2	            0xeb07	                           jmp 0x400140b	       478	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_8
0x13c4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       478	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_8
0x13c8	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       478	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_8
0x13cb	          0x8945ec	             mov dword [rbp - 0x14], eax	       478	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_8
0x13ce	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       480	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_9
0x13d2	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       480	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_9
0x13d6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       480	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_9
0x13da	    0x41b800000000	                              mov r8d, 0	       480	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_9
0x13e0	      0xb9ffffffff	                     mov ecx, 0xffffffff	       480	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_9
0x13e5	          0x4889c7	                            mov rdi, rax	       480	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_9
0x13e8	      0xe846efffff	                         call sym.scroll	       480	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_9
0x13ed	      0xe99a000000	                           jmp 0x40014cc	       484	state.c	FUNCTION_16	SWITCH_1
0x13f2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       482	state.c	FUNCTION_16	SWITCH_1	ELSE_1	IF_5
0x13f6	          0x8b4030	            mov eax, dword [rax + 0x30] 	       482	state.c	FUNCTION_16	SWITCH_1	ELSE_1	IF_5
0x13f9	            0x85c0	                           test eax, eax	       482	state.c	FUNCTION_16	SWITCH_1	ELSE_1	IF_5
0x13fb	     0xf8e8b000000	                           jle 0x40014cc	       482	state.c	FUNCTION_16	SWITCH_1	ELSE_1	IF_5
0x1401	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       483	state.c	FUNCTION_16	SWITCH_1	ELSE_1	IF_5
0x1405	          0x8b4030	            mov eax, dword [rax + 0x30] 	       483	state.c	FUNCTION_16	SWITCH_1	ELSE_1	IF_5
0x1408	          0x8d50ff	                      lea edx, [rax - 1]	       483	state.c	FUNCTION_16	SWITCH_1	ELSE_1	IF_5
0x140b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       483	state.c	FUNCTION_16	SWITCH_1	ELSE_1	IF_5
0x140f	          0x895030	             mov dword [rax + 0x30], edx	       483	state.c	FUNCTION_16	SWITCH_1	ELSE_1	IF_5
0x1412	            0xeb78	                           jmp 0x40014cc	       484	state.c	FUNCTION_16	SWITCH_1
0x1414	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       487	state.c	FUNCTION_16	SWITCH_1
0x1418	    0xc78018010000	              mov dword [rax + 0x118], 2	       487	state.c	FUNCTION_16	SWITCH_1
0x1422	            0xeb69	                           jmp 0x40014cd	       488	state.c	FUNCTION_16	SWITCH_1
0x1424	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       491	state.c	FUNCTION_16	SWITCH_1
0x1428	    0xc78018010000	              mov dword [rax + 0x118], 3	       491	state.c	FUNCTION_16	SWITCH_1
0x1432	            0xeb59	                           jmp 0x40014cd	       492	state.c	FUNCTION_16	SWITCH_1
0x1434	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       495	state.c	FUNCTION_16	SWITCH_1	IF_6
0x1438	        0x488b4018	            mov rax, qword [rax + 0x18] 	       495	state.c	FUNCTION_16	SWITCH_1	IF_6
0x143c	          0x4885c0	                           test rax, rax	       495	state.c	FUNCTION_16	SWITCH_1	IF_6
0x143f	            0x743b	                            je 0x40014bc	       495	state.c	FUNCTION_16	SWITCH_1	IF_6
0x1441	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       495	state.c	FUNCTION_16	SWITCH_1	IF_6
0x1445	        0x488b4018	            mov rax, qword [rax + 0x18] 	       495	state.c	FUNCTION_16	SWITCH_1	IF_6
0x1449	        0x488b4008	                mov rax, qword [rax + 8]	       495	state.c	FUNCTION_16	SWITCH_1	IF_6
0x144d	          0x4885c0	                           test rax, rax	       495	state.c	FUNCTION_16	SWITCH_1	IF_6
0x1450	            0x742a	                            je 0x40014bc	       495	state.c	FUNCTION_16	SWITCH_1	IF_6
0x1452	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       496	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x1456	        0x488b4018	            mov rax, qword [rax + 0x18] 	       496	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x145a	        0x488b4008	                mov rax, qword [rax + 8]	       496	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x145e	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       496	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x1462	        0x488b4a20	            mov rcx, qword [rdx + 0x20] 	       496	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x1466	         0xfb655cc	            movzx edx, byte [rbp - 0x34]	       496	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x146a	          0x4889ce	                            mov rsi, rcx	       496	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x146d	            0x89d7	                            mov edi, edx	       496	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x146f	            0xffd0	                                call rax	       496	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x1471	            0x85c0	                           test eax, eax	       496	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x1473	            0x7407	                            je 0x40014bc	       496	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x1475	      0xb801000000	                              mov eax, 1	       497	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x147a	            0xeb2e	                           jmp 0x40014ea	       497	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x147c	      0xb800000000	                              mov eax, 0	       499	state.c	FUNCTION_16	SWITCH_1
0x1481	            0xeb27	                           jmp 0x40014ea	       499	state.c	FUNCTION_16	SWITCH_1
0x1483	              0x90	                                     nop	       428	state.c	FUNCTION_16	SWITCH_1
0x1484	            0xeb07	                           jmp 0x40014cd	       428	state.c	FUNCTION_16	SWITCH_1
0x1486	              0x90	                                     nop	       433	state.c	FUNCTION_16	SWITCH_1
0x1487	            0xeb04	                           jmp 0x40014cd	       433	state.c	FUNCTION_16	SWITCH_1
0x1489	              0x90	                                     nop	       445	state.c	FUNCTION_16	SWITCH_1
0x148a	            0xeb01	                           jmp 0x40014cd	       445	state.c	FUNCTION_16	SWITCH_1
0x148c	              0x90	                                     nop	       484	state.c	FUNCTION_16	SWITCH_1
0x148d	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	       502	state.c	FUNCTION_16	CALL_10
0x1491	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       502	state.c	FUNCTION_16	CALL_10
0x1495	      0xba01000000	                              mov edx, 1	       502	state.c	FUNCTION_16	CALL_10
0x149a	          0x4889ce	                            mov rsi, rcx	       502	state.c	FUNCTION_16	CALL_10
0x149d	          0x4889c7	                            mov rdi, rax	       502	state.c	FUNCTION_16	CALL_10
0x14a0	      0xe863ecffff	                   call sym.updatecursor	       502	state.c	FUNCTION_16	CALL_10
0x14a5	      0xb801000000	                              mov eax, 1	       513	state.c	FUNCTION_16
0x14aa	        0x488b4df8	                mov rcx, qword [rbp - 8]	       514	state.c	FUNCTION_16
0x14ae	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       514	state.c	FUNCTION_16
0x14b7	            0x7405	                            je 0x40014fe	       514	state.c	FUNCTION_16
0x14b9	      0xe800000000	                          call 0x40014fe	       514	state.c	FUNCTION_16
0x14be	              0xc9	                                   leave	       514	state.c	FUNCTION_16
0x14bf	              0xc3	                                     ret	       514	state.c	FUNCTION_16
set_lineinfo	SWITCH,0:functions,0:ELSE,3:CALL,0:WHILE,0:DO,0:IF,6:FOR,0	93
0x952	              0x55	                                push rbp	       217	state.c	FUNCTION_14
0x953	          0x4889e5	                            mov rbp, rsp	       217	state.c	FUNCTION_14
0x956	        0x4883ec30	                           sub rsp, 0x30	       217	state.c	FUNCTION_14
0x95a	        0x48897de8	             mov qword [rbp - 0x18], rdi	       217	state.c	FUNCTION_14
0x95e	          0x8975e4	             mov dword [rbp - 0x1c], esi	       217	state.c	FUNCTION_14
0x961	          0x8955e0	             mov dword [rbp - 0x20], edx	       217	state.c	FUNCTION_14
0x964	          0x894ddc	             mov dword [rbp - 0x24], ecx	       217	state.c	FUNCTION_14
0x967	        0x448945d8	             mov dword [rbp - 0x28], r8d	       217	state.c	FUNCTION_14
0x96b	    0x64488b042528	                mov rax, qword fs:[0x28]	       217	state.c	FUNCTION_14
0x974	        0x488945f8	                mov qword [rbp - 8], rax	       217	state.c	FUNCTION_14
0x978	            0x31c0	                            xor eax, eax	       217	state.c	FUNCTION_14
0x97a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       218	state.c	FUNCTION_14
0x97e	        0x488b4058	            mov rax, qword [rax + 0x58] 	       218	state.c	FUNCTION_14
0x982	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       218	state.c	FUNCTION_14
0x985	          0x4863d2	                         movsxd rdx, edx	       218	state.c	FUNCTION_14
0x988	        0x48c1e202	                              shl rdx, 2	       218	state.c	FUNCTION_14
0x98c	          0x4801d0	                            add rax, rdx	       218	state.c	FUNCTION_14
0x98f	            0x8b00	                    mov eax, dword [rax]	       218	state.c	FUNCTION_14
0x991	          0x8945f0	             mov dword [rbp - 0x10], eax	       218	state.c	FUNCTION_14
0x994	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       220	state.c	FUNCTION_14	IF_1
0x998	            0x750c	                           jne 0x40009e6	       220	state.c	FUNCTION_14	IF_1
0x99a	         0xfb645f0	            movzx eax, byte [rbp - 0x10]	       221	state.c	FUNCTION_14	IF_1
0x99e	          0x83e0fe	                     and eax, 0xfffffffe	       221	state.c	FUNCTION_14	IF_1
0x9a1	          0x8845f0	               mov byte [rbp - 0x10], al	       221	state.c	FUNCTION_14	IF_1
0x9a4	            0xeb10	                           jmp 0x40009f6	       221	state.c	FUNCTION_14	IF_1
0x9a6	        0x837ddc01	               cmp dword [rbp - 0x24], 1	       222	state.c	FUNCTION_14	ELSE_1	IF_2
0x9aa	            0x750a	                           jne 0x40009f6	       222	state.c	FUNCTION_14	ELSE_1	IF_2
0x9ac	         0xfb645f0	            movzx eax, byte [rbp - 0x10]	       223	state.c	FUNCTION_14	ELSE_1	IF_2
0x9b0	          0x83c801	                               or eax, 1	       223	state.c	FUNCTION_14	ELSE_1	IF_2
0x9b3	          0x8845f0	               mov byte [rbp - 0x10], al	       223	state.c	FUNCTION_14	ELSE_1	IF_2
0x9b6	        0x837dd800	               cmp dword [rbp - 0x28], 0	       226	state.c	FUNCTION_14	IF_3
0x9ba	            0x750c	                           jne 0x4000a08	       226	state.c	FUNCTION_14	IF_3
0x9bc	         0xfb645f0	            movzx eax, byte [rbp - 0x10]	       227	state.c	FUNCTION_14	IF_3
0x9c0	          0x83e0f9	                     and eax, 0xfffffff9	       227	state.c	FUNCTION_14	IF_3
0x9c3	          0x8845f0	               mov byte [rbp - 0x10], al	       227	state.c	FUNCTION_14	IF_3
0x9c6	            0xeb28	                           jmp 0x4000a30	       227	state.c	FUNCTION_14	IF_3
0x9c8	        0x837dd801	               cmp dword [rbp - 0x28], 1	       228	state.c	FUNCTION_14	ELSE_2	IF_4
0x9cc	            0x750f	                           jne 0x4000a1d	       228	state.c	FUNCTION_14	ELSE_2	IF_4
0x9ce	         0xfb645f0	            movzx eax, byte [rbp - 0x10]	       229	state.c	FUNCTION_14	ELSE_2	IF_4
0x9d2	          0x83e0f9	                     and eax, 0xfffffff9	       229	state.c	FUNCTION_14	ELSE_2	IF_4
0x9d5	          0x83c802	                               or eax, 2	       229	state.c	FUNCTION_14	ELSE_2	IF_4
0x9d8	          0x8845f0	               mov byte [rbp - 0x10], al	       229	state.c	FUNCTION_14	ELSE_2	IF_4
0x9db	            0xeb13	                           jmp 0x4000a30	       229	state.c	FUNCTION_14	ELSE_2	IF_4
0x9dd	        0x837dd802	               cmp dword [rbp - 0x28], 2	       230	state.c	FUNCTION_14	ELSE_3	IF_5
0x9e1	            0x750d	                           jne 0x4000a30	       230	state.c	FUNCTION_14	ELSE_3	IF_5
0x9e3	         0xfb645f0	            movzx eax, byte [rbp - 0x10]	       231	state.c	FUNCTION_14	ELSE_3	IF_5
0x9e7	          0x83e0f9	                     and eax, 0xfffffff9	       231	state.c	FUNCTION_14	ELSE_3	IF_5
0x9ea	          0x83c804	                               or eax, 4	       231	state.c	FUNCTION_14	ELSE_3	IF_5
0x9ed	          0x8845f0	               mov byte [rbp - 0x10], al	       231	state.c	FUNCTION_14	ELSE_3	IF_5
0x9f0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       233	state.c	FUNCTION_14	IF_6
0x9f4	        0x488b4008	                mov rax, qword [rax + 8]	       233	state.c	FUNCTION_14	IF_6
0x9f8	          0x4885c0	                           test rax, rax	       233	state.c	FUNCTION_14	IF_6
0x9fb	            0x744e	                            je 0x4000a8b	       233	state.c	FUNCTION_14	IF_6
0x9fd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       234	state.c	FUNCTION_14	IF_6
0xa01	        0x488b4008	                mov rax, qword [rax + 8]	       234	state.c	FUNCTION_14	IF_6
0xa05	        0x488b4050	            mov rax, qword [rax + 0x50] 	       234	state.c	FUNCTION_14	IF_6
0xa09	          0x4885c0	                           test rax, rax	       233	state.c	FUNCTION_14	IF_6
0xa0c	            0x743d	                            je 0x4000a8b	       233	state.c	FUNCTION_14	IF_6
0xa0e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       235	state.c	FUNCTION_14	IF_6
0xa12	        0x488b4008	                mov rax, qword [rax + 8]	       235	state.c	FUNCTION_14	IF_6
0xa16	        0x488b4050	            mov rax, qword [rax + 0x50] 	       235	state.c	FUNCTION_14	IF_6
0xa1a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       235	state.c	FUNCTION_14	IF_6
0xa1e	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	       235	state.c	FUNCTION_14	IF_6
0xa22	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       235	state.c	FUNCTION_14	IF_6
0xa26	        0x488b4958	            mov rcx, qword [rcx + 0x58] 	       235	state.c	FUNCTION_14	IF_6
0xa2a	          0x8b75e4	             mov esi, dword [rbp - 0x1c]	       235	state.c	FUNCTION_14	IF_6
0xa2d	          0x4863f6	                         movsxd rsi, esi	       235	state.c	FUNCTION_14	IF_6
0xa30	        0x48c1e602	                              shl rsi, 2	       235	state.c	FUNCTION_14	IF_6
0xa34	        0x4c8d0431	                     lea r8, [rcx + rsi]	       235	state.c	FUNCTION_14	IF_6
0xa38	        0x488d75f0	                   lea rsi, [rbp - 0x10]	       235	state.c	FUNCTION_14	IF_6
0xa3c	          0x8b7de4	             mov edi, dword [rbp - 0x1c]	       235	state.c	FUNCTION_14	IF_6
0xa3f	          0x4889d1	                            mov rcx, rdx	       235	state.c	FUNCTION_14	IF_6
0xa42	          0x4c89c2	                             mov rdx, r8	       235	state.c	FUNCTION_14	IF_6
0xa45	            0xffd0	                                call rax	       235	state.c	FUNCTION_14	IF_6
0xa47	            0x85c0	                           test eax, eax	       234	state.c	FUNCTION_14	IF_6
0xa49	            0x7506	                           jne 0x4000a91	       234	state.c	FUNCTION_14	IF_6
0xa4b	        0x837de000	               cmp dword [rbp - 0x20], 0	       236	state.c	FUNCTION_14	IF_6
0xa4f	            0x741a	                            je 0x4000aab	       236	state.c	FUNCTION_14	IF_6
0xa51	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       237	state.c	FUNCTION_14	IF_6
0xa55	        0x488b4058	            mov rax, qword [rax + 0x58] 	       237	state.c	FUNCTION_14	IF_6
0xa59	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       237	state.c	FUNCTION_14	IF_6
0xa5c	          0x4863d2	                         movsxd rdx, edx	       237	state.c	FUNCTION_14	IF_6
0xa5f	        0x48c1e202	                              shl rdx, 2	       237	state.c	FUNCTION_14	IF_6
0xa63	          0x4801c2	                            add rdx, rax	       237	state.c	FUNCTION_14	IF_6
0xa66	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       237	state.c	FUNCTION_14	IF_6
0xa69	            0x8902	                    mov dword [rdx], eax	       237	state.c	FUNCTION_14	IF_6
0xa6b	              0x90	                                     nop	       238	state.c	FUNCTION_14
0xa6c	        0x488b45f8	                mov rax, qword [rbp - 8]	       238	state.c	FUNCTION_14
0xa70	    0x644833042528	                xor rax, qword fs:[0x28]	       238	state.c	FUNCTION_14
0xa79	            0x7405	                            je 0x4000ac0	       238	state.c	FUNCTION_14
0xa7b	      0xe800000000	                          call 0x4000ac0	       238	state.c	FUNCTION_14
0xa80	              0xc9	                                   leave	       238	state.c	FUNCTION_14
0xa81	              0xc3	                                     ret	       238	state.c	FUNCTION_14
on_resize	SWITCH,0:functions,0:ELSE,2:CALL,7:WHILE,0:DO,0:IF,10:FOR,4	323
0x4d3d	              0x55	                                push rbp	      1610	state.c	FUNCTION_29
0x4d3e	          0x4889e5	                            mov rbp, rsp	      1610	state.c	FUNCTION_29
0x4d41	        0x4883ec60	                           sub rsp, 0x60	      1610	state.c	FUNCTION_29
0x4d45	          0x897dac	             mov dword [rbp - 0x54], edi	      1610	state.c	FUNCTION_29
0x4d48	          0x8975a8	             mov dword [rbp - 0x58], esi	      1610	state.c	FUNCTION_29
0x4d4b	        0x488955a0	             mov qword [rbp - 0x60], rdx	      1610	state.c	FUNCTION_29
0x4d4f	    0x64488b042528	                mov rax, qword fs:[0x28]	      1610	state.c	FUNCTION_29
0x4d58	        0x488945f8	                mov qword [rbp - 8], rax	      1610	state.c	FUNCTION_29
0x4d5c	            0x31c0	                            xor eax, eax	      1610	state.c	FUNCTION_29
0x4d5e	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1611	state.c	FUNCTION_29
0x4d62	        0x488945e0	             mov qword [rbp - 0x20], rax	      1611	state.c	FUNCTION_29
0x4d66	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1612	state.c	FUNCTION_29
0x4d6a	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1612	state.c	FUNCTION_29
0x4d6e	        0x488945c0	             mov qword [rbp - 0x40], rax	      1612	state.c	FUNCTION_29
0x4d72	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      1613	state.c	FUNCTION_29
0x4d79	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      1613	state.c	FUNCTION_29
0x4d80	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1615	state.c	FUNCTION_29	IF_1
0x4d84	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1615	state.c	FUNCTION_29	IF_1
0x4d87	          0x3b45a8	             cmp eax, dword [rbp - 0x58]	      1615	state.c	FUNCTION_29	IF_1
0x4d8a	     0xf848f010000	                            je 0x4004f5f	      1615	state.c	FUNCTION_29	IF_1
0x4d90	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      1616	state.c	FUNCTION_29	IF_1	CALL_1
0x4d93	          0x83c007	                              add eax, 7	      1616	state.c	FUNCTION_29	IF_1	CALL_1
0x4d96	          0x8d5007	                      lea edx, [rax + 7]	      1616	state.c	FUNCTION_29	IF_1	CALL_1
0x4d99	            0x85c0	                           test eax, eax	      1616	state.c	FUNCTION_29	IF_1	CALL_1
0x4d9b	           0xf48c2	                          cmovs eax, edx	      1616	state.c	FUNCTION_29	IF_1	CALL_1
0x4d9e	          0xc1f803	                              sar eax, 3	      1616	state.c	FUNCTION_29	IF_1	CALL_1
0x4da1	          0x4863d0	                         movsxd rdx, eax	      1616	state.c	FUNCTION_29	IF_1	CALL_1
0x4da4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1616	state.c	FUNCTION_29	IF_1	CALL_1
0x4da8	          0x488b00	                    mov rax, qword [rax]	      1616	state.c	FUNCTION_29	IF_1	CALL_1
0x4dab	          0x4889d6	                            mov rsi, rdx	      1616	state.c	FUNCTION_29	IF_1	CALL_1
0x4dae	          0x4889c7	                            mov rdi, rax	      1616	state.c	FUNCTION_29	IF_1	CALL_1
0x4db1	      0xe800000000	                          call 0x4004df6	      1616	state.c	FUNCTION_29	IF_1	CALL_1
0x4db6	        0x488945e8	             mov qword [rbp - 0x18], rax	      1616	state.c	FUNCTION_29	IF_1	CALL_1
0x4dba	    0xc745b8000000	               mov dword [rbp - 0x48], 0	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x4dc1	      0xe98e000000	                           jmp 0x4004e94	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x4dc6	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1621	state.c	FUNCTION_29	IF_1	FOR_1
0x4dc9	          0x83e007	                              and eax, 7	      1621	state.c	FUNCTION_29	IF_1	FOR_1
0x4dcc	      0xba01000000	                              mov edx, 1	      1621	state.c	FUNCTION_29	IF_1	FOR_1
0x4dd1	            0x89c1	                            mov ecx, eax	      1621	state.c	FUNCTION_29	IF_1	FOR_1
0x4dd3	            0xd3e2	                             shl edx, cl	      1621	state.c	FUNCTION_29	IF_1	FOR_1
0x4dd5	            0x89d0	                            mov eax, edx	      1621	state.c	FUNCTION_29	IF_1	FOR_1
0x4dd7	          0x8845b6	               mov byte [rbp - 0x4a], al	      1621	state.c	FUNCTION_29	IF_1	FOR_1
0x4dda	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1622	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4dde	        0x488b5050	            mov rdx, qword [rax + 0x50] 	      1622	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4de2	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1622	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4de5	          0xc1f803	                              sar eax, 3	      1622	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4de8	            0x4898	                                    cdqe	      1622	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4dea	          0x4801d0	                            add rax, rdx	      1622	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4ded	           0xfb600	                   movzx eax, byte [rax]	      1622	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4df0	          0x2245b6	               and al, byte [rbp - 0x4a]	      1622	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4df3	            0x84c0	                             test al, al	      1622	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4df5	            0x742a	                            je 0x4004e61	      1622	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4df7	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1623	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4dfa	          0xc1f803	                              sar eax, 3	      1623	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4dfd	          0x4863d0	                         movsxd rdx, eax	      1623	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4e00	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1623	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4e04	          0x4801c2	                            add rdx, rax	      1623	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4e07	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1623	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4e0a	          0xc1f803	                              sar eax, 3	      1623	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4e0d	          0x4863c8	                         movsxd rcx, eax	      1623	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4e10	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1623	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4e14	          0x4801c8	                            add rax, rcx	      1623	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4e17	           0xfb600	                   movzx eax, byte [rax]	      1623	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4e1a	           0xa45b6	                or al, byte [rbp - 0x4a]	      1623	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4e1d	            0x8802	                      mov byte [rdx], al	      1623	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4e1f	            0xeb2f	                           jmp 0x4004e90	      1623	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x4e21	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1625	state.c	FUNCTION_29	IF_1	FOR_1	ELSE_1
0x4e24	          0xc1f803	                              sar eax, 3	      1625	state.c	FUNCTION_29	IF_1	FOR_1	ELSE_1
0x4e27	          0x4863d0	                         movsxd rdx, eax	      1625	state.c	FUNCTION_29	IF_1	FOR_1	ELSE_1
0x4e2a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1625	state.c	FUNCTION_29	IF_1	FOR_1	ELSE_1
0x4e2e	          0x4801d0	                            add rax, rdx	      1625	state.c	FUNCTION_29	IF_1	FOR_1	ELSE_1
0x4e31	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      1625	state.c	FUNCTION_29	IF_1	FOR_1	ELSE_1
0x4e34	          0xc1fa03	                              sar edx, 3	      1625	state.c	FUNCTION_29	IF_1	FOR_1	ELSE_1
0x4e37	          0x4863ca	                         movsxd rcx, edx	      1625	state.c	FUNCTION_29	IF_1	FOR_1	ELSE_1
0x4e3a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1625	state.c	FUNCTION_29	IF_1	FOR_1	ELSE_1
0x4e3e	          0x4801ca	                            add rdx, rcx	      1625	state.c	FUNCTION_29	IF_1	FOR_1	ELSE_1
0x4e41	           0xfb612	                   movzx edx, byte [rdx]	      1625	state.c	FUNCTION_29	IF_1	FOR_1	ELSE_1
0x4e44	            0x89d1	                            mov ecx, edx	      1625	state.c	FUNCTION_29	IF_1	FOR_1	ELSE_1
0x4e46	         0xfb655b6	            movzx edx, byte [rbp - 0x4a]	      1625	state.c	FUNCTION_29	IF_1	FOR_1	ELSE_1
0x4e4a	            0xf7d2	                                 not edx	      1625	state.c	FUNCTION_29	IF_1	FOR_1	ELSE_1
0x4e4c	            0x21ca	                            and edx, ecx	      1625	state.c	FUNCTION_29	IF_1	FOR_1	ELSE_1
0x4e4e	            0x8810	                      mov byte [rax], dl	      1625	state.c	FUNCTION_29	IF_1	FOR_1	ELSE_1
0x4e50	        0x8345b801	               add dword [rbp - 0x48], 1	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x4e54	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x4e58	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x4e5b	          0x3b45b8	             cmp eax, dword [rbp - 0x48]	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x4e5e	     0xf8e89000000	                           jle 0x4004f2d	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x4e64	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x4e67	          0x3b45a8	             cmp eax, dword [rbp - 0x58]	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x4e6a	     0xf8c56ffffff	                            jl 0x4004e06	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x4e70	            0xeb7b	                           jmp 0x4004f2d	      1628	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x4e72	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1629	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x4e75	          0x83e007	                              and eax, 7	      1629	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x4e78	      0xba01000000	                              mov edx, 1	      1629	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x4e7d	            0x89c1	                            mov ecx, eax	      1629	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x4e7f	            0xd3e2	                             shl edx, cl	      1629	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x4e81	            0x89d0	                            mov eax, edx	      1629	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x4e83	          0x8845b7	               mov byte [rbp - 0x49], al	      1629	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x4e86	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1630	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x4e89	          0x83e007	                              and eax, 7	      1630	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x4e8c	            0x85c0	                           test eax, eax	      1630	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x4e8e	            0x752a	                           jne 0x4004efa	      1630	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x4e90	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1631	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x4e93	          0xc1f803	                              sar eax, 3	      1631	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x4e96	          0x4863d0	                         movsxd rdx, eax	      1631	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x4e99	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1631	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x4e9d	          0x4801c2	                            add rdx, rax	      1631	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x4ea0	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1631	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x4ea3	          0xc1f803	                              sar eax, 3	      1631	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x4ea6	          0x4863c8	                         movsxd rcx, eax	      1631	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x4ea9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1631	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x4ead	          0x4801c8	                            add rax, rcx	      1631	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x4eb0	           0xfb600	                   movzx eax, byte [rax]	      1631	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x4eb3	           0xa45b7	                or al, byte [rbp - 0x49]	      1631	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x4eb6	            0x8802	                      mov byte [rdx], al	      1631	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x4eb8	            0xeb2f	                           jmp 0x4004f29	      1631	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x4eba	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1633	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	ELSE_2
0x4ebd	          0xc1f803	                              sar eax, 3	      1633	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	ELSE_2
0x4ec0	          0x4863d0	                         movsxd rdx, eax	      1633	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	ELSE_2
0x4ec3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1633	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	ELSE_2
0x4ec7	          0x4801d0	                            add rax, rdx	      1633	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	ELSE_2
0x4eca	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      1633	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	ELSE_2
0x4ecd	          0xc1fa03	                              sar edx, 3	      1633	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	ELSE_2
0x4ed0	          0x4863ca	                         movsxd rcx, edx	      1633	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	ELSE_2
0x4ed3	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1633	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	ELSE_2
0x4ed7	          0x4801ca	                            add rdx, rcx	      1633	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	ELSE_2
0x4eda	           0xfb612	                   movzx edx, byte [rdx]	      1633	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	ELSE_2
0x4edd	            0x89d1	                            mov ecx, edx	      1633	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	ELSE_2
0x4edf	         0xfb655b7	            movzx edx, byte [rbp - 0x49]	      1633	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	ELSE_2
0x4ee3	            0xf7d2	                                 not edx	      1633	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	ELSE_2
0x4ee5	            0x21ca	                            and edx, ecx	      1633	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	ELSE_2
0x4ee7	            0x8810	                      mov byte [rax], dl	      1633	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	ELSE_2
0x4ee9	        0x8345b801	               add dword [rbp - 0x48], 1	      1628	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x4eed	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1628	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x4ef0	          0x3b45a8	             cmp eax, dword [rbp - 0x58]	      1628	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x4ef3	     0xf8c79ffffff	                            jl 0x4004eb2	      1628	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x4ef9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1636	state.c	FUNCTION_29	IF_1	CALL_2
0x4efd	        0x488b5050	            mov rdx, qword [rax + 0x50] 	      1636	state.c	FUNCTION_29	IF_1	CALL_2
0x4f01	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1636	state.c	FUNCTION_29	IF_1	CALL_2
0x4f05	          0x488b00	                    mov rax, qword [rax]	      1636	state.c	FUNCTION_29	IF_1	CALL_2
0x4f08	          0x4889d6	                            mov rsi, rdx	      1636	state.c	FUNCTION_29	IF_1	CALL_2
0x4f0b	          0x4889c7	                            mov rdi, rax	      1636	state.c	FUNCTION_29	IF_1	CALL_2
0x4f0e	      0xe800000000	                          call 0x4004f53	      1636	state.c	FUNCTION_29	IF_1	CALL_2
0x4f13	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1637	state.c	FUNCTION_29	IF_1
0x4f17	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1637	state.c	FUNCTION_29	IF_1
0x4f1b	        0x48895050	             mov qword [rax + 0x50], rdx	      1637	state.c	FUNCTION_29	IF_1
0x4f1f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1640	state.c	FUNCTION_29	IF_4
0x4f23	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1640	state.c	FUNCTION_29	IF_4
0x4f26	          0x3b45ac	             cmp eax, dword [rbp - 0x54]	      1640	state.c	FUNCTION_29	IF_4
0x4f29	     0xf84dd000000	                            je 0x400504c	      1640	state.c	FUNCTION_29	IF_4
0x4f2f	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1641	state.c	FUNCTION_29	IF_4	CALL_3
0x4f32	            0x4898	                                    cdqe	      1641	state.c	FUNCTION_29	IF_4	CALL_3
0x4f34	    0x488d14850000	                        lea rdx, [rax*4]	      1641	state.c	FUNCTION_29	IF_4	CALL_3
0x4f3c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1641	state.c	FUNCTION_29	IF_4	CALL_3
0x4f40	          0x488b00	                    mov rax, qword [rax]	      1641	state.c	FUNCTION_29	IF_4	CALL_3
0x4f43	          0x4889d6	                            mov rsi, rdx	      1641	state.c	FUNCTION_29	IF_4	CALL_3
0x4f46	          0x4889c7	                            mov rdi, rax	      1641	state.c	FUNCTION_29	IF_4	CALL_3
0x4f49	      0xe800000000	                          call 0x4004f8e	      1641	state.c	FUNCTION_29	IF_4	CALL_3
0x4f4e	        0x488945f0	             mov qword [rbp - 0x10], rax	      1641	state.c	FUNCTION_29	IF_4	CALL_3
0x4f52	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x4f59	            0xeb31	                           jmp 0x4004fcc	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x4f5b	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1645	state.c	FUNCTION_29	IF_4	FOR_3
0x4f5e	            0x4898	                                    cdqe	      1645	state.c	FUNCTION_29	IF_4	FOR_3
0x4f60	    0x488d14850000	                        lea rdx, [rax*4]	      1645	state.c	FUNCTION_29	IF_4	FOR_3
0x4f68	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1645	state.c	FUNCTION_29	IF_4	FOR_3
0x4f6c	          0x4801c2	                            add rdx, rax	      1645	state.c	FUNCTION_29	IF_4	FOR_3
0x4f6f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1645	state.c	FUNCTION_29	IF_4	FOR_3
0x4f73	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1645	state.c	FUNCTION_29	IF_4	FOR_3
0x4f77	          0x8b4dbc	             mov ecx, dword [rbp - 0x44]	      1645	state.c	FUNCTION_29	IF_4	FOR_3
0x4f7a	          0x4863c9	                         movsxd rcx, ecx	      1645	state.c	FUNCTION_29	IF_4	FOR_3
0x4f7d	        0x48c1e102	                              shl rcx, 2	      1645	state.c	FUNCTION_29	IF_4	FOR_3
0x4f81	          0x4801c8	                            add rax, rcx	      1645	state.c	FUNCTION_29	IF_4	FOR_3
0x4f84	            0x8b00	                    mov eax, dword [rax]	      1645	state.c	FUNCTION_29	IF_4	FOR_3
0x4f86	            0x8902	                    mov dword [rdx], eax	      1645	state.c	FUNCTION_29	IF_4	FOR_3
0x4f88	        0x8345bc01	               add dword [rbp - 0x44], 1	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x4f8c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x4f90	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x4f93	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x4f96	            0x7e46	                           jle 0x400501e	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x4f98	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x4f9b	          0x3b45ac	             cmp eax, dword [rbp - 0x54]	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x4f9e	            0x7cbb	                            jl 0x4004f9b	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x4fa0	            0xeb3c	                           jmp 0x400501e	      1648	state.c	FUNCTION_29	IF_4	FOR_4
0x4fa2	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1649	state.c	FUNCTION_29	IF_4	FOR_4
0x4fa5	            0x4898	                                    cdqe	      1649	state.c	FUNCTION_29	IF_4	FOR_4
0x4fa7	    0x488d14850000	                        lea rdx, [rax*4]	      1649	state.c	FUNCTION_29	IF_4	FOR_4
0x4faf	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1649	state.c	FUNCTION_29	IF_4	FOR_4
0x4fb3	          0x4801d0	                            add rax, rdx	      1649	state.c	FUNCTION_29	IF_4	FOR_4
0x4fb6	           0xfb610	                   movzx edx, byte [rax]	      1649	state.c	FUNCTION_29	IF_4	FOR_4
0x4fb9	          0x83e2fe	                     and edx, 0xfffffffe	      1649	state.c	FUNCTION_29	IF_4	FOR_4
0x4fbc	            0x8810	                      mov byte [rax], dl	      1649	state.c	FUNCTION_29	IF_4	FOR_4
0x4fbe	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1650	state.c	FUNCTION_29	IF_4	FOR_4
0x4fc1	            0x4898	                                    cdqe	      1650	state.c	FUNCTION_29	IF_4	FOR_4
0x4fc3	    0x488d14850000	                        lea rdx, [rax*4]	      1650	state.c	FUNCTION_29	IF_4	FOR_4
0x4fcb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1650	state.c	FUNCTION_29	IF_4	FOR_4
0x4fcf	          0x4801d0	                            add rax, rdx	      1650	state.c	FUNCTION_29	IF_4	FOR_4
0x4fd2	           0xfb610	                   movzx edx, byte [rax]	      1650	state.c	FUNCTION_29	IF_4	FOR_4
0x4fd5	          0x83e2f9	                     and edx, 0xfffffff9	      1650	state.c	FUNCTION_29	IF_4	FOR_4
0x4fd8	            0x8810	                      mov byte [rax], dl	      1650	state.c	FUNCTION_29	IF_4	FOR_4
0x4fda	        0x8345bc01	               add dword [rbp - 0x44], 1	      1648	state.c	FUNCTION_29	IF_4	FOR_4
0x4fde	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1648	state.c	FUNCTION_29	IF_4	FOR_4
0x4fe1	          0x3b45ac	             cmp eax, dword [rbp - 0x54]	      1648	state.c	FUNCTION_29	IF_4	FOR_4
0x4fe4	            0x7cbc	                            jl 0x4004fe2	      1648	state.c	FUNCTION_29	IF_4	FOR_4
0x4fe6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1653	state.c	FUNCTION_29	IF_4	CALL_4
0x4fea	        0x488b5058	            mov rdx, qword [rax + 0x58] 	      1653	state.c	FUNCTION_29	IF_4	CALL_4
0x4fee	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1653	state.c	FUNCTION_29	IF_4	CALL_4
0x4ff2	          0x488b00	                    mov rax, qword [rax]	      1653	state.c	FUNCTION_29	IF_4	CALL_4
0x4ff5	          0x4889d6	                            mov rsi, rdx	      1653	state.c	FUNCTION_29	IF_4	CALL_4
0x4ff8	          0x4889c7	                            mov rdi, rax	      1653	state.c	FUNCTION_29	IF_4	CALL_4
0x4ffb	      0xe800000000	                          call 0x4005040	      1653	state.c	FUNCTION_29	IF_4	CALL_4
0x5000	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1654	state.c	FUNCTION_29	IF_4
0x5004	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1654	state.c	FUNCTION_29	IF_4
0x5008	        0x48895058	             mov qword [rax + 0x58], rdx	      1654	state.c	FUNCTION_29	IF_4
0x500c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1657	state.c	FUNCTION_29
0x5010	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      1657	state.c	FUNCTION_29
0x5013	          0x895028	             mov dword [rax + 0x28], edx	      1657	state.c	FUNCTION_29
0x5016	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1658	state.c	FUNCTION_29
0x501a	          0x8b55a8	             mov edx, dword [rbp - 0x58]	      1658	state.c	FUNCTION_29
0x501d	          0x89502c	             mov dword [rax + 0x2c], edx	      1658	state.c	FUNCTION_29
0x5020	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1660	state.c	FUNCTION_29	IF_5
0x5024	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1660	state.c	FUNCTION_29	IF_5
0x5027	            0x85c0	                           test eax, eax	      1660	state.c	FUNCTION_29	IF_5
0x5029	            0x7820	                            js 0x400508b	      1660	state.c	FUNCTION_29	IF_5
0x502b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1661	state.c	FUNCTION_29	CALL_5
0x502f	          0x8b5040	            mov edx, dword [rax + 0x40] 	      1661	state.c	FUNCTION_29	CALL_5
0x5032	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1661	state.c	FUNCTION_29	CALL_5
0x5036	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1661	state.c	FUNCTION_29	CALL_5
0x5039	            0x39c2	                            cmp edx, eax	      1661	state.c	FUNCTION_29	CALL_5
0x503b	            0x7e0e	                           jle 0x400508b	      1661	state.c	FUNCTION_29	CALL_5
0x503d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1661	state.c	FUNCTION_29	CALL_5
0x5041	          0x8b5028	            mov edx, dword [rax + 0x28] 	      1661	state.c	FUNCTION_29	CALL_5
0x5044	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1661	state.c	FUNCTION_29	CALL_5
0x5048	          0x895040	             mov dword [rax + 0x40], edx	      1661	state.c	FUNCTION_29	CALL_5
0x504b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1662	state.c	FUNCTION_29	IF_6
0x504f	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1662	state.c	FUNCTION_29	IF_6
0x5052	            0x85c0	                           test eax, eax	      1662	state.c	FUNCTION_29	IF_6
0x5054	            0x7820	                            js 0x40050b6	      1662	state.c	FUNCTION_29	IF_6
0x5056	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1663	state.c	FUNCTION_29	CALL_6
0x505a	          0x8b5048	            mov edx, dword [rax + 0x48] 	      1663	state.c	FUNCTION_29	CALL_6
0x505d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1663	state.c	FUNCTION_29	CALL_6
0x5061	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1663	state.c	FUNCTION_29	CALL_6
0x5064	            0x39c2	                            cmp edx, eax	      1663	state.c	FUNCTION_29	CALL_6
0x5066	            0x7e0e	                           jle 0x40050b6	      1663	state.c	FUNCTION_29	CALL_6
0x5068	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1663	state.c	FUNCTION_29	CALL_6
0x506c	          0x8b502c	            mov edx, dword [rax + 0x2c] 	      1663	state.c	FUNCTION_29	CALL_6
0x506f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1663	state.c	FUNCTION_29	CALL_6
0x5073	          0x895048	             mov dword [rax + 0x48], edx	      1663	state.c	FUNCTION_29	CALL_6
0x5076	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1665	state.c	FUNCTION_29	IF_7
0x507a	        0x488b4008	                mov rax, qword [rax + 8]	      1665	state.c	FUNCTION_29	IF_7
0x507e	          0x4885c0	                           test rax, rax	      1665	state.c	FUNCTION_29	IF_7
0x5081	            0x7431	                            je 0x40050f4	      1665	state.c	FUNCTION_29	IF_7
0x5083	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1665	state.c	FUNCTION_29	IF_7
0x5087	        0x488b4008	                mov rax, qword [rax + 8]	      1665	state.c	FUNCTION_29	IF_7
0x508b	        0x488b4048	            mov rax, qword [rax + 0x48] 	      1665	state.c	FUNCTION_29	IF_7
0x508f	          0x4885c0	                           test rax, rax	      1665	state.c	FUNCTION_29	IF_7
0x5092	            0x7420	                            je 0x40050f4	      1665	state.c	FUNCTION_29	IF_7
0x5094	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1666	state.c	FUNCTION_29	IF_7
0x5098	        0x488b4008	                mov rax, qword [rax + 8]	      1666	state.c	FUNCTION_29	IF_7
0x509c	        0x488b4048	            mov rax, qword [rax + 0x48] 	      1666	state.c	FUNCTION_29	IF_7
0x50a0	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1666	state.c	FUNCTION_29	IF_7
0x50a4	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      1666	state.c	FUNCTION_29	IF_7
0x50a8	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      1666	state.c	FUNCTION_29	IF_7
0x50ac	          0x8b75a8	             mov esi, dword [rbp - 0x58]	      1666	state.c	FUNCTION_29	IF_7
0x50af	          0x8b7dac	             mov edi, dword [rbp - 0x54]	      1666	state.c	FUNCTION_29	IF_7
0x50b2	            0xffd0	                                call rax	      1666	state.c	FUNCTION_29	IF_7
0x50b4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1668	state.c	FUNCTION_29	IF_8
0x50b8	          0x8b4038	            mov eax, dword [rax + 0x38] 	      1668	state.c	FUNCTION_29	IF_8
0x50bb	            0x85c0	                           test eax, eax	      1668	state.c	FUNCTION_29	IF_8
0x50bd	            0x742d	                            je 0x400512c	      1668	state.c	FUNCTION_29	IF_8
0x50bf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1668	state.c	FUNCTION_29	IF_8
0x50c3	          0x8b4034	            mov eax, dword [rax + 0x34] 	      1668	state.c	FUNCTION_29	IF_8
0x50c6	          0x8b55a8	             mov edx, dword [rbp - 0x58]	      1668	state.c	FUNCTION_29	IF_8
0x50c9	          0x83ea01	                              sub edx, 1	      1668	state.c	FUNCTION_29	IF_8
0x50cc	            0x39d0	                            cmp eax, edx	      1668	state.c	FUNCTION_29	IF_8
0x50ce	            0x7d1c	                           jge 0x400512c	      1668	state.c	FUNCTION_29	IF_8
0x50d0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1669	state.c	FUNCTION_29	IF_8
0x50d4	    0xc74038000000	               mov dword [rax + 0x38], 0	      1669	state.c	FUNCTION_29	IF_8
0x50db	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1670	state.c	FUNCTION_29	IF_8
0x50df	          0x8b4034	            mov eax, dword [rax + 0x34] 	      1670	state.c	FUNCTION_29	IF_8
0x50e2	          0x8d5001	                      lea edx, [rax + 1]	      1670	state.c	FUNCTION_29	IF_8
0x50e5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1670	state.c	FUNCTION_29	IF_8
0x50e9	          0x895034	             mov dword [rax + 0x34], edx	      1670	state.c	FUNCTION_29	IF_8
0x50ec	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1673	state.c	FUNCTION_29
0x50f0	          0x8b5030	            mov edx, dword [rax + 0x30] 	      1673	state.c	FUNCTION_29
0x50f3	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1673	state.c	FUNCTION_29
0x50f6	             0x1c2	                            add edx, eax	      1673	state.c	FUNCTION_29
0x50f8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1673	state.c	FUNCTION_29
0x50fc	          0x895030	             mov dword [rax + 0x30], edx	      1673	state.c	FUNCTION_29
0x50ff	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1674	state.c	FUNCTION_29
0x5103	          0x8b5034	            mov edx, dword [rax + 0x34] 	      1674	state.c	FUNCTION_29
0x5106	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1674	state.c	FUNCTION_29
0x5109	             0x1c2	                            add edx, eax	      1674	state.c	FUNCTION_29
0x510b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1674	state.c	FUNCTION_29
0x510f	          0x895034	             mov dword [rax + 0x34], edx	      1674	state.c	FUNCTION_29
0x5112	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1676	state.c	FUNCTION_29	IF_9
0x5116	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1676	state.c	FUNCTION_29	IF_9
0x5119	          0x3b45ac	             cmp eax, dword [rbp - 0x54]	      1676	state.c	FUNCTION_29	IF_9
0x511c	            0x7c0d	                            jl 0x400516b	      1676	state.c	FUNCTION_29	IF_9
0x511e	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1677	state.c	FUNCTION_29	IF_9
0x5121	          0x8d50ff	                      lea edx, [rax - 1]	      1677	state.c	FUNCTION_29	IF_9
0x5124	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1677	state.c	FUNCTION_29	IF_9
0x5128	          0x895030	             mov dword [rax + 0x30], edx	      1677	state.c	FUNCTION_29	IF_9
0x512b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1678	state.c	FUNCTION_29	IF_10
0x512f	          0x8b4034	            mov eax, dword [rax + 0x34] 	      1678	state.c	FUNCTION_29	IF_10
0x5132	          0x3b45a8	             cmp eax, dword [rbp - 0x58]	      1678	state.c	FUNCTION_29	IF_10
0x5135	            0x7c0d	                            jl 0x4005184	      1678	state.c	FUNCTION_29	IF_10
0x5137	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      1679	state.c	FUNCTION_29	IF_10
0x513a	          0x8d50ff	                      lea edx, [rax - 1]	      1679	state.c	FUNCTION_29	IF_10
0x513d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1679	state.c	FUNCTION_29	IF_10
0x5141	          0x895034	             mov dword [rax + 0x34], edx	      1679	state.c	FUNCTION_29	IF_10
0x5144	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	      1681	state.c	FUNCTION_29	CALL_7
0x5148	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1681	state.c	FUNCTION_29	CALL_7
0x514c	      0xba01000000	                              mov edx, 1	      1681	state.c	FUNCTION_29	CALL_7
0x5151	          0x4889ce	                            mov rsi, rcx	      1681	state.c	FUNCTION_29	CALL_7
0x5154	          0x4889c7	                            mov rdi, rax	      1681	state.c	FUNCTION_29	CALL_7
0x5157	      0xe8acafffff	                   call sym.updatecursor	      1681	state.c	FUNCTION_29	CALL_7
0x515c	      0xb801000000	                              mov eax, 1	      1683	state.c	FUNCTION_29
0x5161	        0x488b75f8	                mov rsi, qword [rbp - 8]	      1684	state.c	FUNCTION_29
0x5165	    0x644833342528	                xor rsi, qword fs:[0x28]	      1684	state.c	FUNCTION_29
0x516e	            0x7405	                            je 0x40051b5	      1684	state.c	FUNCTION_29
0x5170	      0xe800000000	                          call 0x40051b5	      1684	state.c	FUNCTION_29
0x5175	              0xc9	                                   leave	      1684	state.c	FUNCTION_29
0x5176	              0xc3	                                     ret	      1684	state.c	FUNCTION_29
vterm_state_set_termprop	SWITCH,1:functions,0:ELSE,0:CALL,1:WHILE,0:DO,0:IF,6:FOR,0	164
0x57b4	              0x55	                                push rbp	      1851	state.c	FUNCTION_38
0x57b5	          0x4889e5	                            mov rbp, rsp	      1851	state.c	FUNCTION_38
0x57b8	        0x4883ec30	                           sub rsp, 0x30	      1851	state.c	FUNCTION_38
0x57bc	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1851	state.c	FUNCTION_38
0x57c0	          0x8975e4	             mov dword [rbp - 0x1c], esi	      1851	state.c	FUNCTION_38
0x57c3	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1851	state.c	FUNCTION_38
0x57c7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1854	state.c	FUNCTION_38	IF_1
0x57cb	        0x488b4008	                mov rax, qword [rax + 8]	      1854	state.c	FUNCTION_38	IF_1
0x57cf	          0x4885c0	                           test rax, rax	      1854	state.c	FUNCTION_38	IF_1
0x57d2	            0x743e	                            je 0x4005852	      1854	state.c	FUNCTION_38	IF_1
0x57d4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1854	state.c	FUNCTION_38	IF_1
0x57d8	        0x488b4008	                mov rax, qword [rax + 8]	      1854	state.c	FUNCTION_38	IF_1
0x57dc	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1854	state.c	FUNCTION_38	IF_1
0x57e0	          0x4885c0	                           test rax, rax	      1854	state.c	FUNCTION_38	IF_1
0x57e3	            0x742d	                            je 0x4005852	      1854	state.c	FUNCTION_38	IF_1
0x57e5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x57e9	        0x488b4008	                mov rax, qword [rax + 8]	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x57ed	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x57f1	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x57f5	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x57f9	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x57fd	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x5800	            0x89cf	                            mov edi, ecx	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x5802	            0xffd0	                                call rax	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x5804	            0x85c0	                           test eax, eax	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x5806	            0x750a	                           jne 0x4005852	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x5808	      0xb800000000	                              mov eax, 0	      1856	state.c	FUNCTION_38	IF_1	IF_2
0x580d	      0xe9f5010000	                           jmp 0x4005a47	      1856	state.c	FUNCTION_38	IF_1	IF_2
0x5812	        0x837de40a	            cmp dword [rbp - 0x1c], 0xa 	      1858	state.c	FUNCTION_38	SWITCH_1
0x5816	     0xf87e6010000	                            ja 0x4005a42	      1858	state.c	FUNCTION_38	SWITCH_1
0x581c	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1858	state.c	FUNCTION_38	SWITCH_1
0x581f	    0x488b04c50000	                  mov rax, qword [rax*8]	      1858	state.c	FUNCTION_38	SWITCH_1
0x5827	            0xffe0	                                 jmp rax	      1858	state.c	FUNCTION_38	SWITCH_1
0x5829	      0xb801000000	                              mov eax, 1	      1863	state.c	FUNCTION_38	SWITCH_1
0x582e	      0xe9d4010000	                           jmp 0x4005a47	      1863	state.c	FUNCTION_38	SWITCH_1
0x5833	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1865	state.c	FUNCTION_38	SWITCH_1
0x5837	            0x8b00	                    mov eax, dword [rax]	      1865	state.c	FUNCTION_38	SWITCH_1
0x5839	          0x83e001	                              and eax, 1	      1865	state.c	FUNCTION_38	SWITCH_1
0x583c	            0x89c2	                            mov edx, eax	      1865	state.c	FUNCTION_38	SWITCH_1
0x583e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1865	state.c	FUNCTION_38	SWITCH_1
0x5842	          0x83e201	                              and edx, 1	      1865	state.c	FUNCTION_38	SWITCH_1
0x5845	            0x89d1	                            mov ecx, edx	      1865	state.c	FUNCTION_38	SWITCH_1
0x5847	          0xc1e105	                              shl ecx, 5	      1865	state.c	FUNCTION_38	SWITCH_1
0x584a	     0xfb690940000	           movzx edx, byte [rax + 0x94] 	      1865	state.c	FUNCTION_38	SWITCH_1
0x5851	          0x83e2df	                     and edx, 0xffffffdf	      1865	state.c	FUNCTION_38	SWITCH_1
0x5854	             0x9ca	                             or edx, ecx	      1865	state.c	FUNCTION_38	SWITCH_1
0x5856	    0x889094000000	               mov byte [rax + 0x94], dl	      1865	state.c	FUNCTION_38	SWITCH_1
0x585c	      0xb801000000	                              mov eax, 1	      1866	state.c	FUNCTION_38	SWITCH_1
0x5861	      0xe9a1010000	                           jmp 0x4005a47	      1866	state.c	FUNCTION_38	SWITCH_1
0x5866	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1868	state.c	FUNCTION_38	SWITCH_1
0x586a	            0x8b00	                    mov eax, dword [rax]	      1868	state.c	FUNCTION_38	SWITCH_1
0x586c	          0x83e001	                              and eax, 1	      1868	state.c	FUNCTION_38	SWITCH_1
0x586f	            0x89c2	                            mov edx, eax	      1868	state.c	FUNCTION_38	SWITCH_1
0x5871	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1868	state.c	FUNCTION_38	SWITCH_1
0x5875	          0x83e201	                              and edx, 1	      1868	state.c	FUNCTION_38	SWITCH_1
0x5878	            0x89d1	                            mov ecx, edx	      1868	state.c	FUNCTION_38	SWITCH_1
0x587a	          0xc1e106	                              shl ecx, 6	      1868	state.c	FUNCTION_38	SWITCH_1
0x587d	     0xfb690940000	           movzx edx, byte [rax + 0x94] 	      1868	state.c	FUNCTION_38	SWITCH_1
0x5884	          0x83e2bf	                     and edx, 0xffffffbf	      1868	state.c	FUNCTION_38	SWITCH_1
0x5887	             0x9ca	                             or edx, ecx	      1868	state.c	FUNCTION_38	SWITCH_1
0x5889	    0x889094000000	               mov byte [rax + 0x94], dl	      1868	state.c	FUNCTION_38	SWITCH_1
0x588f	      0xb801000000	                              mov eax, 1	      1869	state.c	FUNCTION_38	SWITCH_1
0x5894	      0xe96e010000	                           jmp 0x4005a47	      1869	state.c	FUNCTION_38	SWITCH_1
0x5899	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1871	state.c	FUNCTION_38	SWITCH_1
0x589d	            0x8b00	                    mov eax, dword [rax]	      1871	state.c	FUNCTION_38	SWITCH_1
0x589f	          0x83e003	                              and eax, 3	      1871	state.c	FUNCTION_38	SWITCH_1
0x58a2	            0x89c2	                            mov edx, eax	      1871	state.c	FUNCTION_38	SWITCH_1
0x58a4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1871	state.c	FUNCTION_38	SWITCH_1
0x58a8	           0xfb6d2	                           movzx edx, dl	      1871	state.c	FUNCTION_38	SWITCH_1
0x58ab	          0x83e203	                              and edx, 3	      1871	state.c	FUNCTION_38	SWITCH_1
0x58ae	            0x89d1	                            mov ecx, edx	      1871	state.c	FUNCTION_38	SWITCH_1
0x58b0	          0xc1e107	                              shl ecx, 7	      1871	state.c	FUNCTION_38	SWITCH_1
0x58b3	     0xfb790940000	           movzx edx, word [rax + 0x94] 	      1871	state.c	FUNCTION_38	SWITCH_1
0x58ba	      0x6681e27ffe	                          and dx, 0xfe7f	      1871	state.c	FUNCTION_38	SWITCH_1
0x58bf	             0x9ca	                             or edx, ecx	      1871	state.c	FUNCTION_38	SWITCH_1
0x58c1	    0x668990940000	               mov word [rax + 0x94], dx	      1871	state.c	FUNCTION_38	SWITCH_1
0x58c8	      0xb801000000	                              mov eax, 1	      1872	state.c	FUNCTION_38	SWITCH_1
0x58cd	      0xe935010000	                           jmp 0x4005a47	      1872	state.c	FUNCTION_38	SWITCH_1
0x58d2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1874	state.c	FUNCTION_38	SWITCH_1
0x58d6	            0x8b00	                    mov eax, dword [rax]	      1874	state.c	FUNCTION_38	SWITCH_1
0x58d8	          0x83e001	                              and eax, 1	      1874	state.c	FUNCTION_38	SWITCH_1
0x58db	            0x89c2	                            mov edx, eax	      1874	state.c	FUNCTION_38	SWITCH_1
0x58dd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1874	state.c	FUNCTION_38	SWITCH_1
0x58e1	          0x83e201	                              and edx, 1	      1874	state.c	FUNCTION_38	SWITCH_1
0x58e4	    0x8d0cd5000000	                        lea ecx, [rdx*8]	      1874	state.c	FUNCTION_38	SWITCH_1
0x58eb	     0xfb690950000	           movzx edx, byte [rax + 0x95] 	      1874	state.c	FUNCTION_38	SWITCH_1
0x58f2	          0x83e2f7	                     and edx, 0xfffffff7	      1874	state.c	FUNCTION_38	SWITCH_1
0x58f5	             0x9ca	                             or edx, ecx	      1874	state.c	FUNCTION_38	SWITCH_1
0x58f7	    0x889095000000	               mov byte [rax + 0x95], dl	      1874	state.c	FUNCTION_38	SWITCH_1
0x58fd	      0xb801000000	                              mov eax, 1	      1875	state.c	FUNCTION_38	SWITCH_1
0x5902	      0xe900010000	                           jmp 0x4005a47	      1875	state.c	FUNCTION_38	SWITCH_1
0x5907	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1877	state.c	FUNCTION_38	SWITCH_1
0x590b	            0x8b00	                    mov eax, dword [rax]	      1877	state.c	FUNCTION_38	SWITCH_1
0x590d	          0x83e001	                              and eax, 1	      1877	state.c	FUNCTION_38	SWITCH_1
0x5910	            0x89c2	                            mov edx, eax	      1877	state.c	FUNCTION_38	SWITCH_1
0x5912	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1877	state.c	FUNCTION_38	SWITCH_1
0x5916	          0x83e201	                              and edx, 1	      1877	state.c	FUNCTION_38	SWITCH_1
0x5919	          0x8d0c12	                    lea ecx, [rdx + rdx]	      1877	state.c	FUNCTION_38	SWITCH_1
0x591c	     0xfb690950000	           movzx edx, byte [rax + 0x95] 	      1877	state.c	FUNCTION_38	SWITCH_1
0x5923	          0x83e2fd	                     and edx, 0xfffffffd	      1877	state.c	FUNCTION_38	SWITCH_1
0x5926	             0x9ca	                             or edx, ecx	      1877	state.c	FUNCTION_38	SWITCH_1
0x5928	    0x889095000000	               mov byte [rax + 0x95], dl	      1877	state.c	FUNCTION_38	SWITCH_1
0x592e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1878	state.c	FUNCTION_38	SWITCH_1	IF_3
0x5932	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1878	state.c	FUNCTION_38	SWITCH_1	IF_3
0x5939	          0x83e002	                              and eax, 2	      1878	state.c	FUNCTION_38	SWITCH_1	IF_3
0x593c	            0x84c0	                             test al, al	      1878	state.c	FUNCTION_38	SWITCH_1	IF_3
0x593e	            0x7449	                            je 0x40059c9	      1878	state.c	FUNCTION_38	SWITCH_1	IF_3
0x5940	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      1879	state.c	FUNCTION_38	SWITCH_1	IF_3
0x5947	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      1879	state.c	FUNCTION_38	SWITCH_1	IF_3
0x594e	    0xc745f8000000	                  mov dword [rbp - 8], 0	      1879	state.c	FUNCTION_38	SWITCH_1	IF_3
0x5955	    0xc745fc000000	                  mov dword [rbp - 4], 0	      1879	state.c	FUNCTION_38	SWITCH_1	IF_3
0x595c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1880	state.c	FUNCTION_38	SWITCH_1	IF_3
0x5960	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1880	state.c	FUNCTION_38	SWITCH_1	IF_3
0x5963	          0x8945f4	              mov dword [rbp - 0xc], eax	      1880	state.c	FUNCTION_38	SWITCH_1	IF_3
0x5966	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1881	state.c	FUNCTION_38	SWITCH_1	IF_3
0x596a	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1881	state.c	FUNCTION_38	SWITCH_1	IF_3
0x596d	          0x8945fc	                mov dword [rbp - 4], eax	      1881	state.c	FUNCTION_38	SWITCH_1	IF_3
0x5970	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      1882	state.c	FUNCTION_38	SWITCH_1	IF_3	CALL_1
0x5974	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1882	state.c	FUNCTION_38	SWITCH_1	IF_3	CALL_1
0x5978	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1882	state.c	FUNCTION_38	SWITCH_1	IF_3	CALL_1
0x597c	      0xb900000000	                              mov ecx, 0	      1882	state.c	FUNCTION_38	SWITCH_1	IF_3	CALL_1
0x5981	          0x4889c7	                            mov rdi, rax	      1882	state.c	FUNCTION_38	SWITCH_1	IF_3	CALL_1
0x5984	      0xe828a8ffff	                          call sym.erase	      1882	state.c	FUNCTION_38	SWITCH_1	IF_3	CALL_1
0x5989	      0xb801000000	                              mov eax, 1	      1884	state.c	FUNCTION_38	SWITCH_1
0x598e	            0xeb77	                           jmp 0x4005a47	      1884	state.c	FUNCTION_38	SWITCH_1
0x5990	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1886	state.c	FUNCTION_38	SWITCH_1
0x5994	    0xc7406c000000	               mov dword [rax + 0x6c], 0	      1886	state.c	FUNCTION_38	SWITCH_1
0x599b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1887	state.c	FUNCTION_38	SWITCH_1	IF_4
0x599f	            0x8b00	                    mov eax, dword [rax]	      1887	state.c	FUNCTION_38	SWITCH_1	IF_4
0x59a1	            0x85c0	                           test eax, eax	      1887	state.c	FUNCTION_38	SWITCH_1	IF_4
0x59a3	            0x7413	                            je 0x40059f8	      1887	state.c	FUNCTION_38	SWITCH_1	IF_4
0x59a5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1888	state.c	FUNCTION_38	SWITCH_1	IF_4
0x59a9	          0x8b406c	            mov eax, dword [rax + 0x6c] 	      1888	state.c	FUNCTION_38	SWITCH_1	IF_4
0x59ac	          0x83c801	                               or eax, 1	      1888	state.c	FUNCTION_38	SWITCH_1	IF_4
0x59af	            0x89c2	                            mov edx, eax	      1888	state.c	FUNCTION_38	SWITCH_1	IF_4
0x59b1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1888	state.c	FUNCTION_38	SWITCH_1	IF_4
0x59b5	          0x89506c	             mov dword [rax + 0x6c], edx	      1888	state.c	FUNCTION_38	SWITCH_1	IF_4
0x59b8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1889	state.c	FUNCTION_38	SWITCH_1	IF_5
0x59bc	            0x8b00	                    mov eax, dword [rax]	      1889	state.c	FUNCTION_38	SWITCH_1	IF_5
0x59be	          0x83f802	                              cmp eax, 2	      1889	state.c	FUNCTION_38	SWITCH_1	IF_5
0x59c1	            0x7513	                           jne 0x4005a16	      1889	state.c	FUNCTION_38	SWITCH_1	IF_5
0x59c3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1890	state.c	FUNCTION_38	SWITCH_1	IF_5
0x59c7	          0x8b406c	            mov eax, dword [rax + 0x6c] 	      1890	state.c	FUNCTION_38	SWITCH_1	IF_5
0x59ca	          0x83c802	                               or eax, 2	      1890	state.c	FUNCTION_38	SWITCH_1	IF_5
0x59cd	            0x89c2	                            mov edx, eax	      1890	state.c	FUNCTION_38	SWITCH_1	IF_5
0x59cf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1890	state.c	FUNCTION_38	SWITCH_1	IF_5
0x59d3	          0x89506c	             mov dword [rax + 0x6c], edx	      1890	state.c	FUNCTION_38	SWITCH_1	IF_5
0x59d6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1891	state.c	FUNCTION_38	SWITCH_1	IF_6
0x59da	            0x8b00	                    mov eax, dword [rax]	      1891	state.c	FUNCTION_38	SWITCH_1	IF_6
0x59dc	          0x83f803	                              cmp eax, 3	      1891	state.c	FUNCTION_38	SWITCH_1	IF_6
0x59df	            0x7513	                           jne 0x4005a34	      1891	state.c	FUNCTION_38	SWITCH_1	IF_6
0x59e1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1892	state.c	FUNCTION_38	SWITCH_1	IF_6
0x59e5	          0x8b406c	            mov eax, dword [rax + 0x6c] 	      1892	state.c	FUNCTION_38	SWITCH_1	IF_6
0x59e8	          0x83c804	                               or eax, 4	      1892	state.c	FUNCTION_38	SWITCH_1	IF_6
0x59eb	            0x89c2	                            mov edx, eax	      1892	state.c	FUNCTION_38	SWITCH_1	IF_6
0x59ed	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1892	state.c	FUNCTION_38	SWITCH_1	IF_6
0x59f1	          0x89506c	             mov dword [rax + 0x6c], edx	      1892	state.c	FUNCTION_38	SWITCH_1	IF_6
0x59f4	      0xb801000000	                              mov eax, 1	      1893	state.c	FUNCTION_38	SWITCH_1
0x59f9	            0xeb0c	                           jmp 0x4005a47	      1893	state.c	FUNCTION_38	SWITCH_1
0x59fb	      0xb800000000	                              mov eax, 0	      1896	state.c	FUNCTION_38	SWITCH_1
0x5a00	            0xeb05	                           jmp 0x4005a47	      1896	state.c	FUNCTION_38	SWITCH_1
0x5a02	      0xb800000000	                              mov eax, 0	      1899	state.c	FUNCTION_38
0x5a07	              0xc9	                                   leave	      1900	state.c	FUNCTION_38
0x5a08	              0xc3	                                     ret	      1900	state.c	FUNCTION_38
request_status_string	SWITCH,2:functions,0:ELSE,1:CALL,17:WHILE,0:DO,0:IF,5:FOR,1	210
0x48d4	              0x55	                                push rbp	      1545	state.c	FUNCTION_27
0x48d5	          0x4889e5	                            mov rbp, rsp	      1545	state.c	FUNCTION_27
0x48d8	    0x4881ece00000	                           sub rsp, 0xe0	      1545	state.c	FUNCTION_27
0x48df	    0x4889bd38ffff	             mov qword [rbp - 0xc8], rdi	      1545	state.c	FUNCTION_27
0x48e6	    0x4889b530ffff	             mov qword [rbp - 0xd0], rsi	      1545	state.c	FUNCTION_27
0x48ed	    0x48899528ffff	             mov qword [rbp - 0xd8], rdx	      1545	state.c	FUNCTION_27
0x48f4	    0x64488b042528	                mov rax, qword fs:[0x28]	      1545	state.c	FUNCTION_27
0x48fd	        0x488945f8	                mov qword [rbp - 8], rax	      1545	state.c	FUNCTION_27
0x4901	            0x31c0	                            xor eax, eax	      1545	state.c	FUNCTION_27
0x4903	    0x4883bd28ffff	               cmp qword [rbp - 0xd8], 1	      1546	state.c	FUNCTION_27	IF_1
0x490b	     0xf851c020000	                           jne 0x4004b6d	      1546	state.c	FUNCTION_27	IF_1
0x4911	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      1547	state.c	FUNCTION_27	IF_1	SWITCH_1
0x4918	           0xfb600	                   movzx eax, byte [rax]	      1547	state.c	FUNCTION_27	IF_1	SWITCH_1
0x491b	           0xfbec0	                           movsx eax, al	      1547	state.c	FUNCTION_27	IF_1	SWITCH_1
0x491e	          0x83f872	                           cmp eax, 0x72	      1547	state.c	FUNCTION_27	IF_1	SWITCH_1
0x4921	     0xf8431010000	                            je 0x4004a98	      1547	state.c	FUNCTION_27	IF_1	SWITCH_1
0x4927	          0x83f873	                           cmp eax, 0x73	      1547	state.c	FUNCTION_27	IF_1	SWITCH_1
0x492a	     0xf847b010000	                            je 0x4004aeb	      1547	state.c	FUNCTION_27	IF_1	SWITCH_1
0x4930	          0x83f86d	                           cmp eax, 0x6d	      1547	state.c	FUNCTION_27	IF_1	SWITCH_1
0x4933	     0xf85f4010000	                           jne 0x4004b6d	      1547	state.c	FUNCTION_27	IF_1	SWITCH_1
0x4939	    0x488d8d50ffff	                   lea rcx, [rbp - 0xb0]	      1551	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_1
0x4940	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1551	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_1
0x4947	      0xba14000000	                           mov edx, 0x14	      1551	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_1
0x494c	          0x4889ce	                            mov rsi, rcx	      1551	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_1
0x494f	          0x4889c7	                            mov rdi, rax	      1551	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_1
0x4952	      0xe800000000	                          call 0x4004997	      1551	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_1
0x4957	    0x89854cffffff	             mov dword [rbp - 0xb4], eax	      1551	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_1
0x495d	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1553	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_2
0x4964	          0x488b00	                    mov rax, qword [rax]	      1553	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_2
0x4967	      0xba00000000	                              mov edx, 0	      1553	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_2
0x496c	      0xbe90000000	                           mov esi, 0x90	      1553	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_2
0x4971	          0x4889c7	                            mov rdi, rax	      1553	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_2
0x4974	      0xb800000000	                              mov eax, 0	      1553	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_2
0x4979	      0xe800000000	                          call 0x40049be	      1553	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_2
0x497e	    0xc78544ffffff	               mov dword [rbp - 0xbc], 0	      1554	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1
0x4988	            0xeb7a	                           jmp 0x4004a44	      1554	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1
0x498a	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	      1559	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_5
0x4990	            0x4898	                                    cdqe	      1559	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_5
0x4992	    0x488b84c550ff	     mov rax, qword [rbp + rax*8 - 0xb0]	      1559	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_5
0x499a	      0x25ffffff7f	                     and eax, 0x7fffffff	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x499f	          0x4889c2	                            mov rdx, rax	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x49a2	    0x8b854cffffff	             mov eax, dword [rbp - 0xb4]	      1556	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1
0x49a8	          0x83e801	                              sub eax, 1	      1556	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1
0x49ab	    0x3b8544ffffff	             cmp eax, dword [rbp - 0xbc]	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x49b1	            0x742b	                            je 0x4004a1e	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x49b3	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	      1557	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_4
0x49b9	            0x4898	                                    cdqe	      1557	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_4
0x49bb	    0x488b84c550ff	     mov rax, qword [rbp + rax*8 - 0xb0]	      1557	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_4
0x49c3	      0x2500000080	                     and eax, 0x80000000	      1557	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_4
0x49c8	          0x4885c0	                           test rax, rax	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x49cb	            0x7407	                            je 0x4004a14	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x49cd	      0xb800000000	                              mov eax, 0	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x49d2	            0xeb05	                           jmp 0x4004a19	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x49d4	      0xb800000000	                              mov eax, 0	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x49d9	          0x4889c1	                            mov rcx, rax	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x49dc	            0xeb05	                           jmp 0x4004a23	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x49de	      0xb900000000	                              mov ecx, 0	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x49e3	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x49ea	          0x488b00	                    mov rax, qword [rax]	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x49ed	          0x4889ce	                            mov rsi, rcx	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x49f0	          0x4889c7	                            mov rdi, rax	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x49f3	      0xb800000000	                              mov eax, 0	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x49f8	      0xe800000000	                          call 0x4004a3d	      1555	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1	CALL_3
0x49fd	    0x838544ffffff	               add dword [rbp - 0xbc], 1	      1554	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1
0x4a04	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	      1554	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1
0x4a0a	    0x3b854cffffff	             cmp eax, dword [rbp - 0xb4]	      1554	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1
0x4a10	     0xf8c74ffffff	                            jl 0x40049ca	      1554	state.c	FUNCTION_27	IF_1	SWITCH_1	FOR_1
0x4a16	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1560	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_6
0x4a1d	          0x488b00	                    mov rax, qword [rax]	      1560	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_6
0x4a20	      0xbe00000000	                              mov esi, 0	      1560	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_6
0x4a25	          0x4889c7	                            mov rdi, rax	      1560	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_6
0x4a28	      0xb800000000	                              mov eax, 0	      1560	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_6
0x4a2d	      0xe800000000	                          call 0x4004a72	      1560	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_6
0x4a32	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1561	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_7
0x4a39	          0x488b00	                    mov rax, qword [rax]	      1561	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_7
0x4a3c	      0xba00000000	                              mov edx, 0	      1561	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_7
0x4a41	      0xbe9c000000	                           mov esi, 0x9c	      1561	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_7
0x4a46	          0x4889c7	                            mov rdi, rax	      1561	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_7
0x4a49	      0xb800000000	                              mov eax, 0	      1561	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_7
0x4a4e	      0xe800000000	                          call 0x4004a93	      1561	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_7
0x4a53	      0xe91b020000	                           jmp 0x4004cb3	      1563	state.c	FUNCTION_27	IF_1	SWITCH_1
0x4a58	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1565	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_9
0x4a5f	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1565	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_9
0x4a62	            0x85c0	                           test eax, eax	      1565	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_9
0x4a64	            0x780c	                            js 0x4004ab2	      1565	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_9
0x4a66	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1565	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_9
0x4a6d	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1565	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_9
0x4a70	            0xeb0a	                           jmp 0x4004abc	      1565	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_9
0x4a72	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1565	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_9
0x4a79	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1565	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_9
0x4a7c	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	      1565	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_9
0x4a83	          0x8b523c	            mov edx, dword [rdx + 0x3c] 	      1565	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_9
0x4a86	          0x8d7201	                      lea esi, [rdx + 1]	      1565	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_9
0x4a89	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	      1565	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_9
0x4a90	          0x488b3a	                    mov rdi, qword [rdx]	      1565	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_9
0x4a93	            0x89c1	                            mov ecx, eax	      1565	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_9
0x4a95	            0x89f2	                            mov edx, esi	      1565	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_9
0x4a97	      0xbe00000000	                              mov esi, 0	      1565	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_9
0x4a9c	      0xb800000000	                              mov eax, 0	      1565	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_9
0x4aa1	      0xe800000000	                          call 0x4004ae6	      1565	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_9
0x4aa6	      0xe9c8010000	                           jmp 0x4004cb3	      1566	state.c	FUNCTION_27	IF_1	SWITCH_1
0x4aab	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4ab2	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4ab9	          0x83e010	                           and eax, 0x10	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4abc	            0x84c0	                             test al, al	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4abe	            0x741a	                            je 0x4004b1a	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4ac0	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4ac7	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4aca	            0x85c0	                           test eax, eax	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4acc	            0x780c	                            js 0x4004b1a	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4ace	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4ad5	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4ad8	            0xeb0a	                           jmp 0x4004b24	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4ada	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4ae1	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4ae4	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4aeb	     0xfb692950000	           movzx edx, byte [rdx + 0x95] 	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4af2	          0x83e210	                           and edx, 0x10	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4af5	            0x84d2	                             test dl, dl	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4af7	            0x740f	                            je 0x4004b48	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4af9	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4b00	          0x8b5244	            mov edx, dword [rdx + 0x44] 	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4b03	          0x83c201	                              add edx, 1	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4b06	            0xeb05	                           jmp 0x4004b4d	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4b08	      0xba01000000	                              mov edx, 1	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4b0d	    0x488b8d38ffff	             mov rcx, qword [rbp - 0xc8]	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4b14	          0x488b39	                    mov rdi, qword [rcx]	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4b17	            0x89c1	                            mov ecx, eax	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4b19	      0xbe00000000	                              mov esi, 0	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4b1e	      0xb800000000	                              mov eax, 0	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4b23	      0xe800000000	                          call 0x4004b68	      1568	state.c	FUNCTION_27	IF_1	SWITCH_1	CALL_12
0x4b28	      0xe946010000	                           jmp 0x4004cb3	      1569	state.c	FUNCTION_27	IF_1	SWITCH_1
0x4b2d	    0x4883bd28ffff	               cmp qword [rbp - 0xd8], 2	      1572	state.c	FUNCTION_27	IF_2
0x4b35	     0xf8507010000	                           jne 0x4004c82	      1572	state.c	FUNCTION_27	IF_2
0x4b3b	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      1573	state.c	FUNCTION_27	IF_2	IF_3	CALL_13
0x4b42	      0xba02000000	                              mov edx, 2	      1573	state.c	FUNCTION_27	IF_2	IF_3	CALL_13
0x4b47	      0xbe00000000	                              mov esi, 0	      1573	state.c	FUNCTION_27	IF_2	IF_3	CALL_13
0x4b4c	          0x4889c7	                            mov rdi, rax	      1573	state.c	FUNCTION_27	IF_2	IF_3	CALL_13
0x4b4f	      0xe800000000	                          call 0x4004b94	      1573	state.c	FUNCTION_27	IF_2	IF_3	CALL_13
0x4b54	            0x85c0	                           test eax, eax	      1573	state.c	FUNCTION_27	IF_2	IF_3	CALL_13
0x4b56	     0xf858a000000	                           jne 0x4004c26	      1573	state.c	FUNCTION_27	IF_2	IF_3	CALL_13
0x4b5c	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1575	state.c	FUNCTION_27	IF_2	IF_3	SWITCH_2
0x4b63	     0xfb780940000	           movzx eax, word [rax + 0x94] 	      1575	state.c	FUNCTION_27	IF_2	IF_3	SWITCH_2
0x4b6a	        0x66c1e807	                               shr ax, 7	      1575	state.c	FUNCTION_27	IF_2	IF_3	SWITCH_2
0x4b6e	          0x83e003	                              and eax, 3	      1575	state.c	FUNCTION_27	IF_2	IF_3	SWITCH_2
0x4b71	           0xfb6c0	                           movzx eax, al	      1575	state.c	FUNCTION_27	IF_2	IF_3	SWITCH_2
0x4b74	          0x83f801	                              cmp eax, 1	      1575	state.c	FUNCTION_27	IF_2	IF_3	SWITCH_2
0x4b77	            0x7407	                            je 0x4004bc0	      1575	state.c	FUNCTION_27	IF_2	IF_3	SWITCH_2
0x4b79	          0x83f802	                              cmp eax, 2	      1575	state.c	FUNCTION_27	IF_2	IF_3	SWITCH_2
0x4b7c	            0x740e	                            je 0x4004bcc	      1575	state.c	FUNCTION_27	IF_2	IF_3	SWITCH_2
0x4b7e	            0xeb18	                           jmp 0x4004bd8	      1575	state.c	FUNCTION_27	IF_2	IF_3	SWITCH_2
0x4b80	    0xc78548ffffff	               mov dword [rbp - 0xb8], 2	      1576	state.c	FUNCTION_27	IF_2	IF_3	SWITCH_2
0x4b8a	            0xeb17	                           jmp 0x4004be3	      1576	state.c	FUNCTION_27	IF_2	IF_3	SWITCH_2
0x4b8c	    0xc78548ffffff	               mov dword [rbp - 0xb8], 4	      1577	state.c	FUNCTION_27	IF_2	IF_3	SWITCH_2
0x4b96	            0xeb0b	                           jmp 0x4004be3	      1577	state.c	FUNCTION_27	IF_2	IF_3	SWITCH_2
0x4b98	    0xc78548ffffff	               mov dword [rbp - 0xb8], 6	      1578	state.c	FUNCTION_27	IF_2	IF_3	SWITCH_2
0x4ba2	              0x90	                                     nop	      1578	state.c	FUNCTION_27	IF_2	IF_3	SWITCH_2
0x4ba3	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1580	state.c	FUNCTION_27	IF_2	IF_3	IF_4
0x4baa	     0xfb680940000	           movzx eax, byte [rax + 0x94] 	      1580	state.c	FUNCTION_27	IF_2	IF_3	IF_4
0x4bb1	          0x83e040	                           and eax, 0x40	      1580	state.c	FUNCTION_27	IF_2	IF_3	IF_4
0x4bb4	            0x84c0	                             test al, al	      1580	state.c	FUNCTION_27	IF_2	IF_3	IF_4
0x4bb6	            0x7407	                            je 0x4004bff	      1580	state.c	FUNCTION_27	IF_2	IF_3	IF_4
0x4bb8	    0x83ad48ffffff	               sub dword [rbp - 0xb8], 1	      1581	state.c	FUNCTION_27	IF_2	IF_3	IF_4
0x4bbf	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1582	state.c	FUNCTION_27	IF_2	IF_3	CALL_14
0x4bc6	          0x488b00	                    mov rax, qword [rax]	      1582	state.c	FUNCTION_27	IF_2	IF_3	CALL_14
0x4bc9	    0x8b9548ffffff	             mov edx, dword [rbp - 0xb8]	      1582	state.c	FUNCTION_27	IF_2	IF_3	CALL_14
0x4bcf	      0xbe00000000	                              mov esi, 0	      1582	state.c	FUNCTION_27	IF_2	IF_3	CALL_14
0x4bd4	          0x4889c7	                            mov rdi, rax	      1582	state.c	FUNCTION_27	IF_2	IF_3	CALL_14
0x4bd7	      0xb800000000	                              mov eax, 0	      1582	state.c	FUNCTION_27	IF_2	IF_3	CALL_14
0x4bdc	      0xe800000000	                          call 0x4004c21	      1582	state.c	FUNCTION_27	IF_2	IF_3	CALL_14
0x4be1	      0xe98d000000	                           jmp 0x4004cb3	      1583	state.c	FUNCTION_27	IF_2	IF_3
0x4be6	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      1585	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_15
0x4bed	      0xba02000000	                              mov edx, 2	      1585	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_15
0x4bf2	      0xbe00000000	                              mov esi, 0	      1585	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_15
0x4bf7	          0x4889c7	                            mov rdi, rax	      1585	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_15
0x4bfa	      0xe800000000	                          call 0x4004c3f	      1585	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_15
0x4bff	            0x85c0	                           test eax, eax	      1585	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_15
0x4c01	            0x753f	                           jne 0x4004c82	      1585	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_15
0x4c03	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1586	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_16
0x4c0a	     0xfb6807c0100	          movzx eax, byte [rax + 0x17c] 	      1586	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_16
0x4c11	          0x83e001	                              and eax, 1	      1586	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_16
0x4c14	            0x84c0	                             test al, al	      1586	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_16
0x4c16	            0x7407	                            je 0x4004c5f	      1586	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_16
0x4c18	      0xba01000000	                              mov edx, 1	      1586	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_16
0x4c1d	            0xeb05	                           jmp 0x4004c64	      1586	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_16
0x4c1f	      0xba02000000	                              mov edx, 2	      1586	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_16
0x4c24	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1586	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_16
0x4c2b	          0x488b00	                    mov rax, qword [rax]	      1586	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_16
0x4c2e	      0xbe00000000	                              mov esi, 0	      1586	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_16
0x4c33	          0x4889c7	                            mov rdi, rax	      1586	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_16
0x4c36	      0xb800000000	                              mov eax, 0	      1586	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_16
0x4c3b	      0xe800000000	                          call 0x4004c80	      1586	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5	CALL_16
0x4c40	            0xeb31	                           jmp 0x4004cb3	      1587	state.c	FUNCTION_27	IF_2	ELSE_1	IF_5
0x4c42	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      1591	state.c	FUNCTION_27	CALL_17
0x4c49	            0x89c6	                            mov esi, eax	      1591	state.c	FUNCTION_27	CALL_17
0x4c4b	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1591	state.c	FUNCTION_27	CALL_17
0x4c52	          0x488b00	                    mov rax, qword [rax]	      1591	state.c	FUNCTION_27	CALL_17
0x4c55	    0x488b9530ffff	             mov rdx, qword [rbp - 0xd0]	      1591	state.c	FUNCTION_27	CALL_17
0x4c5c	          0x4889d1	                            mov rcx, rdx	      1591	state.c	FUNCTION_27	CALL_17
0x4c5f	            0x89f2	                            mov edx, esi	      1591	state.c	FUNCTION_27	CALL_17
0x4c61	      0xbe00000000	                              mov esi, 0	      1591	state.c	FUNCTION_27	CALL_17
0x4c66	          0x4889c7	                            mov rdi, rax	      1591	state.c	FUNCTION_27	CALL_17
0x4c69	      0xb800000000	                              mov eax, 0	      1591	state.c	FUNCTION_27	CALL_17
0x4c6e	      0xe800000000	                          call 0x4004cb3	      1591	state.c	FUNCTION_27	CALL_17
0x4c73	        0x488b45f8	                mov rax, qword [rbp - 8]	      1592	state.c	FUNCTION_27
0x4c77	    0x644833042528	                xor rax, qword fs:[0x28]	      1592	state.c	FUNCTION_27
0x4c80	            0x7405	                            je 0x4004cc7	      1592	state.c	FUNCTION_27
0x4c82	      0xe800000000	                          call 0x4004cc7	      1592	state.c	FUNCTION_27
0x4c87	              0xc9	                                   leave	      1592	state.c	FUNCTION_27
0x4c88	              0xc3	                                     ret	      1592	state.c	FUNCTION_27
putglyph	SWITCH,0:functions,0:ELSE,0:CALL,1:WHILE,0:DO,0:IF,2:FOR,0	77
0x0	              0x55	                                push rbp	        17	state.c	FUNCTION_1
0x1	          0x4889e5	                            mov rbp, rsp	        17	state.c	FUNCTION_1
0x4	        0x4883ec40	                           sub rsp, 0x40	        17	state.c	FUNCTION_1
0x8	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        17	state.c	FUNCTION_1
0xc	        0x488975d0	             mov qword [rbp - 0x30], rsi	        17	state.c	FUNCTION_1
0x10	          0x8955cc	             mov dword [rbp - 0x34], edx	        17	state.c	FUNCTION_1
0x13	        0x48894dc0	             mov qword [rbp - 0x40], rcx	        17	state.c	FUNCTION_1
0x17	    0x64488b042528	                mov rax, qword fs:[0x28]	        17	state.c	FUNCTION_1
0x20	        0x488945f8	                mov qword [rbp - 8], rax	        17	state.c	FUNCTION_1
0x24	            0x31c0	                            xor eax, eax	        17	state.c	FUNCTION_1
0x26	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        19	state.c	FUNCTION_1
0x2a	        0x488945e0	             mov qword [rbp - 0x20], rax	        19	state.c	FUNCTION_1
0x2e	          0x8b45cc	             mov eax, dword [rbp - 0x34]	        20	state.c	FUNCTION_1
0x31	          0x8945e8	             mov dword [rbp - 0x18], eax	        20	state.c	FUNCTION_1
0x34	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        21	state.c	FUNCTION_1
0x38	     0xfb6807c0100	          movzx eax, byte [rax + 0x17c] 	        21	state.c	FUNCTION_1
0x3f	          0x83e001	                              and eax, 1	        21	state.c	FUNCTION_1
0x42	          0x83e001	                              and eax, 1	        21	state.c	FUNCTION_1
0x45	            0x89c2	                            mov edx, eax	        21	state.c	FUNCTION_1
0x47	         0xfb645ec	            movzx eax, byte [rbp - 0x14]	        21	state.c	FUNCTION_1
0x4b	          0x83e0fe	                     and eax, 0xfffffffe	        21	state.c	FUNCTION_1
0x4e	             0x9d0	                             or eax, edx	        21	state.c	FUNCTION_1
0x50	          0x8845ec	               mov byte [rbp - 0x14], al	        21	state.c	FUNCTION_1
0x53	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        22	state.c	FUNCTION_1
0x57	        0x488b4058	            mov rax, qword [rax + 0x58] 	        22	state.c	FUNCTION_1
0x5b	          0x8b55c0	             mov edx, dword [rbp - 0x40]	        22	state.c	FUNCTION_1
0x5e	          0x4863d2	                         movsxd rdx, edx	        22	state.c	FUNCTION_1
0x61	        0x48c1e202	                              shl rdx, 2	        22	state.c	FUNCTION_1
0x65	          0x4801d0	                            add rax, rdx	        22	state.c	FUNCTION_1
0x68	           0xfb600	                   movzx eax, byte [rax]	        22	state.c	FUNCTION_1
0x6b	          0x83e001	                              and eax, 1	        22	state.c	FUNCTION_1
0x6e	          0x83e001	                              and eax, 1	        22	state.c	FUNCTION_1
0x71	          0x8d1400	                    lea edx, [rax + rax]	        22	state.c	FUNCTION_1
0x74	         0xfb645ec	            movzx eax, byte [rbp - 0x14]	        22	state.c	FUNCTION_1
0x78	          0x83e0fd	                     and eax, 0xfffffffd	        22	state.c	FUNCTION_1
0x7b	             0x9d0	                             or eax, edx	        22	state.c	FUNCTION_1
0x7d	          0x8845ec	               mov byte [rbp - 0x14], al	        22	state.c	FUNCTION_1
0x80	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        23	state.c	FUNCTION_1
0x84	        0x488b4058	            mov rax, qword [rax + 0x58] 	        23	state.c	FUNCTION_1
0x88	          0x8b55c0	             mov edx, dword [rbp - 0x40]	        23	state.c	FUNCTION_1
0x8b	          0x4863d2	                         movsxd rdx, edx	        23	state.c	FUNCTION_1
0x8e	        0x48c1e202	                              shl rdx, 2	        23	state.c	FUNCTION_1
0x92	          0x4801d0	                            add rax, rdx	        23	state.c	FUNCTION_1
0x95	           0xfb600	                   movzx eax, byte [rax]	        23	state.c	FUNCTION_1
0x98	            0xd0e8	                               shr al, 1	        23	state.c	FUNCTION_1
0x9a	          0x83e003	                              and eax, 3	        23	state.c	FUNCTION_1
0x9d	          0x83e003	                              and eax, 3	        23	state.c	FUNCTION_1
0xa0	    0x8d1485000000	                        lea edx, [rax*4]	        23	state.c	FUNCTION_1
0xa7	         0xfb645ec	            movzx eax, byte [rbp - 0x14]	        23	state.c	FUNCTION_1
0xab	          0x83e0f3	                     and eax, 0xfffffff3	        23	state.c	FUNCTION_1
0xae	             0x9d0	                             or eax, edx	        23	state.c	FUNCTION_1
0xb0	          0x8845ec	               mov byte [rbp - 0x14], al	        23	state.c	FUNCTION_1
0xb3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        25	state.c	FUNCTION_1	IF_1
0xb7	        0x488b4008	                mov rax, qword [rax + 8]	        25	state.c	FUNCTION_1	IF_1
0xbb	          0x4885c0	                           test rax, rax	        25	state.c	FUNCTION_1	IF_1
0xbe	            0x7432	                            je 0x4000132	        25	state.c	FUNCTION_1	IF_1
0xc0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        25	state.c	FUNCTION_1	IF_1
0xc4	        0x488b4008	                mov rax, qword [rax + 8]	        25	state.c	FUNCTION_1	IF_1
0xc8	          0x488b00	                    mov rax, qword [rax]	        25	state.c	FUNCTION_1	IF_1
0xcb	          0x4885c0	                           test rax, rax	        25	state.c	FUNCTION_1	IF_1
0xce	            0x7422	                            je 0x4000132	        25	state.c	FUNCTION_1	IF_1
0xd0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        26	state.c	FUNCTION_1	IF_1	IF_2
0xd4	        0x488b4008	                mov rax, qword [rax + 8]	        26	state.c	FUNCTION_1	IF_1	IF_2
0xd8	          0x488b00	                    mov rax, qword [rax]	        26	state.c	FUNCTION_1	IF_1	IF_2
0xdb	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	        26	state.c	FUNCTION_1	IF_1	IF_2
0xdf	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	        26	state.c	FUNCTION_1	IF_1	IF_2
0xe3	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	        26	state.c	FUNCTION_1	IF_1	IF_2
0xe7	        0x488d4de0	                   lea rcx, [rbp - 0x20]	        26	state.c	FUNCTION_1	IF_1	IF_2
0xeb	          0x4889cf	                            mov rdi, rcx	        26	state.c	FUNCTION_1	IF_1	IF_2
0xee	            0xffd0	                                call rax	        26	state.c	FUNCTION_1	IF_1	IF_2
0xf0	            0x85c0	                           test eax, eax	        26	state.c	FUNCTION_1	IF_1	IF_2
0xf2	        0x488b45f8	                mov rax, qword [rbp - 8]	        30	state.c	FUNCTION_1
0xf6	    0x644833042528	                xor rax, qword fs:[0x28]	        30	state.c	FUNCTION_1
0xff	            0x7405	                            je 0x4000146	        30	state.c	FUNCTION_1
0x101	      0xe800000000	                          call 0x4000146	        30	state.c	FUNCTION_1
0x106	              0xc9	                                   leave	        30	state.c	FUNCTION_1
0x107	              0xc3	                                     ret	        30	state.c	FUNCTION_1
vterm_state_get_cursorpos	SWITCH,0:functions,0:ELSE,0:CALL,0:WHILE,0:DO,0:IF,0:FOR,0	11
0x5659	              0x55	                                push rbp	      1801	state.c	FUNCTION_32
0x565a	          0x4889e5	                            mov rbp, rsp	      1801	state.c	FUNCTION_32
0x565d	        0x48897df8	                mov qword [rbp - 8], rdi	      1801	state.c	FUNCTION_32
0x5661	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1801	state.c	FUNCTION_32
0x5665	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1802	state.c	FUNCTION_32
0x5669	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1802	state.c	FUNCTION_32
0x566d	        0x488b5230	            mov rdx, qword [rdx + 0x30] 	      1802	state.c	FUNCTION_32
0x5671	          0x488910	                    mov qword [rax], rdx	      1802	state.c	FUNCTION_32
0x5674	              0x90	                                     nop	      1803	state.c	FUNCTION_32
0x5675	              0x5d	                                 pop rbp	      1803	state.c	FUNCTION_32
0x5676	              0xc3	                                     ret	      1803	state.c	FUNCTION_32
scroll	SWITCH,0:functions,0:ELSE,3:CALL,4:WHILE,0:DO,0:IF,10:FOR,0	168
0x333	              0x55	                                push rbp	        86	state.c	FUNCTION_6
0x334	          0x4889e5	                            mov rbp, rsp	        86	state.c	FUNCTION_6
0x337	        0x4883ec30	                           sub rsp, 0x30	        86	state.c	FUNCTION_6
0x33b	        0x48897de8	             mov qword [rbp - 0x18], rdi	        86	state.c	FUNCTION_6
0x33f	          0x4889f0	                            mov rax, rsi	        86	state.c	FUNCTION_6
0x342	          0x4889d6	                            mov rsi, rdx	        86	state.c	FUNCTION_6
0x345	          0x4889f2	                            mov rdx, rsi	        86	state.c	FUNCTION_6
0x348	        0x488945d0	             mov qword [rbp - 0x30], rax	        86	state.c	FUNCTION_6
0x34c	        0x488955d8	             mov qword [rbp - 0x28], rdx	        86	state.c	FUNCTION_6
0x350	          0x894de4	             mov dword [rbp - 0x1c], ecx	        86	state.c	FUNCTION_6
0x353	        0x448945e0	             mov dword [rbp - 0x20], r8d	        86	state.c	FUNCTION_6
0x357	        0x837de400	               cmp dword [rbp - 0x1c], 0	        89	state.c	FUNCTION_6	IF_1
0x35b	            0x750a	                           jne 0x40003a7	        89	state.c	FUNCTION_6	IF_1
0x35d	        0x837de000	               cmp dword [rbp - 0x20], 0	        89	state.c	FUNCTION_6	IF_1
0x361	     0xf84d9010000	                            je 0x4000580	        89	state.c	FUNCTION_6	IF_1
0x367	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	        92	state.c	FUNCTION_6
0x36a	          0x8b45d0	             mov eax, dword [rbp - 0x30]	        92	state.c	FUNCTION_6
0x36d	            0x29c2	                            sub edx, eax	        92	state.c	FUNCTION_6
0x36f	            0x89d0	                            mov eax, edx	        92	state.c	FUNCTION_6
0x371	          0x8945f4	              mov dword [rbp - 0xc], eax	        92	state.c	FUNCTION_6
0x374	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        93	state.c	FUNCTION_6	IF_2
0x377	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	        93	state.c	FUNCTION_6	IF_2
0x37a	            0x7e08	                           jle 0x40003c4	        93	state.c	FUNCTION_6	IF_2
0x37c	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        94	state.c	FUNCTION_6	IF_2
0x37f	          0x8945e4	             mov dword [rbp - 0x1c], eax	        94	state.c	FUNCTION_6	IF_2
0x382	            0xeb12	                           jmp 0x40003d6	        94	state.c	FUNCTION_6	IF_2
0x384	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        95	state.c	FUNCTION_6	ELSE_1	IF_3
0x387	            0xf7d8	                                 neg eax	        95	state.c	FUNCTION_6	ELSE_1	IF_3
0x389	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	        95	state.c	FUNCTION_6	ELSE_1	IF_3
0x38c	            0x7e08	                           jle 0x40003d6	        95	state.c	FUNCTION_6	ELSE_1	IF_3
0x38e	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        96	state.c	FUNCTION_6	ELSE_1	IF_3
0x391	            0xf7d8	                                 neg eax	        96	state.c	FUNCTION_6	ELSE_1	IF_3
0x393	          0x8945e4	             mov dword [rbp - 0x1c], eax	        96	state.c	FUNCTION_6	ELSE_1	IF_3
0x396	          0x8b55dc	             mov edx, dword [rbp - 0x24]	        98	state.c	FUNCTION_6
0x399	          0x8b45d8	             mov eax, dword [rbp - 0x28]	        98	state.c	FUNCTION_6
0x39c	            0x29c2	                            sub edx, eax	        98	state.c	FUNCTION_6
0x39e	            0x89d0	                            mov eax, edx	        98	state.c	FUNCTION_6
0x3a0	          0x8945f8	                mov dword [rbp - 8], eax	        98	state.c	FUNCTION_6
0x3a3	          0x8b45e0	             mov eax, dword [rbp - 0x20]	        99	state.c	FUNCTION_6	IF_4
0x3a6	          0x3b45f8	                cmp eax, dword [rbp - 8]	        99	state.c	FUNCTION_6	IF_4
0x3a9	            0x7e08	                           jle 0x40003f3	        99	state.c	FUNCTION_6	IF_4
0x3ab	          0x8b45f8	                mov eax, dword [rbp - 8]	       100	state.c	FUNCTION_6	IF_4
0x3ae	          0x8945e0	             mov dword [rbp - 0x20], eax	       100	state.c	FUNCTION_6	IF_4
0x3b1	            0xeb12	                           jmp 0x4000405	       100	state.c	FUNCTION_6	IF_4
0x3b3	          0x8b45f8	                mov eax, dword [rbp - 8]	       101	state.c	FUNCTION_6	ELSE_2	IF_5
0x3b6	            0xf7d8	                                 neg eax	       101	state.c	FUNCTION_6	ELSE_2	IF_5
0x3b8	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	       101	state.c	FUNCTION_6	ELSE_2	IF_5
0x3bb	            0x7e08	                           jle 0x4000405	       101	state.c	FUNCTION_6	ELSE_2	IF_5
0x3bd	          0x8b45f8	                mov eax, dword [rbp - 8]	       102	state.c	FUNCTION_6	ELSE_2	IF_5
0x3c0	            0xf7d8	                                 neg eax	       102	state.c	FUNCTION_6	ELSE_2	IF_5
0x3c2	          0x8945e0	             mov dword [rbp - 0x20], eax	       102	state.c	FUNCTION_6	ELSE_2	IF_5
0x3c5	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       105	state.c	FUNCTION_6	IF_6
0x3c8	            0x85c0	                           test eax, eax	       105	state.c	FUNCTION_6	IF_6
0x3ca	     0xf85d9000000	                           jne 0x40004e9	       105	state.c	FUNCTION_6	IF_6
0x3d0	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       105	state.c	FUNCTION_6	IF_6
0x3d3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       105	state.c	FUNCTION_6	IF_6
0x3d7	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       105	state.c	FUNCTION_6	IF_6
0x3da	            0x39c2	                            cmp edx, eax	       105	state.c	FUNCTION_6	IF_6
0x3dc	     0xf85c7000000	                           jne 0x40004e9	       105	state.c	FUNCTION_6	IF_6
0x3e2	        0x837de000	               cmp dword [rbp - 0x20], 0	       105	state.c	FUNCTION_6	IF_6
0x3e6	     0xf85bd000000	                           jne 0x40004e9	       105	state.c	FUNCTION_6	IF_6
0x3ec	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	       106	state.c	FUNCTION_6	IF_6	CALL_1
0x3ef	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       106	state.c	FUNCTION_6	IF_6	CALL_1
0x3f2	            0x89d1	                            mov ecx, edx	       106	state.c	FUNCTION_6	IF_6	CALL_1
0x3f4	            0x29c1	                            sub ecx, eax	       106	state.c	FUNCTION_6	IF_6	CALL_1
0x3f6	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       106	state.c	FUNCTION_6	IF_6	CALL_1
0x3f9	              0x99	                                     cdq	       106	state.c	FUNCTION_6	IF_6	CALL_1
0x3fa	            0x89d0	                            mov eax, edx	       106	state.c	FUNCTION_6	IF_6	CALL_1
0x3fc	          0x3345e4	             xor eax, dword [rbp - 0x1c]	       106	state.c	FUNCTION_6	IF_6	CALL_1
0x3ff	            0x29d0	                            sub eax, edx	       106	state.c	FUNCTION_6	IF_6	CALL_1
0x401	            0x29c1	                            sub ecx, eax	       106	state.c	FUNCTION_6	IF_6	CALL_1
0x403	            0x89c8	                            mov eax, ecx	       106	state.c	FUNCTION_6	IF_6	CALL_1
0x405	          0x8945fc	                mov dword [rbp - 4], eax	       106	state.c	FUNCTION_6	IF_6	CALL_1
0x408	        0x837de400	               cmp dword [rbp - 0x1c], 0	       108	state.c	FUNCTION_6	IF_6	IF_7
0x40c	            0x7e4d	                           jle 0x400049b	       108	state.c	FUNCTION_6	IF_6	IF_7
0x40e	          0x8b45fc	                mov eax, dword [rbp - 4]	       109	state.c	FUNCTION_6	IF_6	IF_7	CALL_2
0x411	            0x4898	                                    cdqe	       109	state.c	FUNCTION_6	IF_6	IF_7	CALL_2
0x413	    0x488d14850000	                        lea rdx, [rax*4]	       109	state.c	FUNCTION_6	IF_6	IF_7	CALL_2
0x41b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       110	state.c	FUNCTION_6	IF_6	IF_7
0x41f	        0x488b4058	            mov rax, qword [rax + 0x58] 	       110	state.c	FUNCTION_6	IF_6	IF_7
0x423	          0x8b4dd0	             mov ecx, dword [rbp - 0x30]	       110	state.c	FUNCTION_6	IF_6	IF_7
0x426	          0x4863f1	                         movsxd rsi, ecx	       110	state.c	FUNCTION_6	IF_6	IF_7
0x429	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	       110	state.c	FUNCTION_6	IF_6	IF_7
0x42c	          0x4863c9	                         movsxd rcx, ecx	       110	state.c	FUNCTION_6	IF_6	IF_7
0x42f	          0x4801f1	                            add rcx, rsi	       110	state.c	FUNCTION_6	IF_6	IF_7
0x432	        0x48c1e102	                              shl rcx, 2	       110	state.c	FUNCTION_6	IF_6	IF_7
0x436	          0x4801c1	                            add rcx, rax	       110	state.c	FUNCTION_6	IF_6	IF_7
0x439	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       109	state.c	FUNCTION_6	IF_6	IF_7	CALL_2
0x43d	        0x488b4058	            mov rax, qword [rax + 0x58] 	       109	state.c	FUNCTION_6	IF_6	IF_7	CALL_2
0x441	          0x8b75d0	             mov esi, dword [rbp - 0x30]	       109	state.c	FUNCTION_6	IF_6	IF_7	CALL_2
0x444	          0x4863f6	                         movsxd rsi, esi	       109	state.c	FUNCTION_6	IF_6	IF_7	CALL_2
0x447	        0x48c1e602	                              shl rsi, 2	       109	state.c	FUNCTION_6	IF_6	IF_7	CALL_2
0x44b	          0x4801f0	                            add rax, rsi	       109	state.c	FUNCTION_6	IF_6	IF_7	CALL_2
0x44e	          0x4889ce	                            mov rsi, rcx	       109	state.c	FUNCTION_6	IF_6	IF_7	CALL_2
0x451	          0x4889c7	                            mov rdi, rax	       109	state.c	FUNCTION_6	IF_6	IF_7	CALL_2
0x454	      0xe800000000	                          call 0x4000499	       109	state.c	FUNCTION_6	IF_6	IF_7	CALL_2
0x459	            0xeb4e	                           jmp 0x40004e9	       109	state.c	FUNCTION_6	IF_6	IF_7	CALL_2
0x45b	          0x8b45fc	                mov eax, dword [rbp - 4]	       113	state.c	FUNCTION_6	IF_6	ELSE_3	CALL_3
0x45e	            0x4898	                                    cdqe	       113	state.c	FUNCTION_6	IF_6	ELSE_3	CALL_3
0x460	    0x488d14850000	                        lea rdx, [rax*4]	       113	state.c	FUNCTION_6	IF_6	ELSE_3	CALL_3
0x468	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       114	state.c	FUNCTION_6	IF_6	ELSE_3
0x46c	        0x488b4058	            mov rax, qword [rax + 0x58] 	       114	state.c	FUNCTION_6	IF_6	ELSE_3
0x470	          0x8b4dd0	             mov ecx, dword [rbp - 0x30]	       114	state.c	FUNCTION_6	IF_6	ELSE_3
0x473	          0x4863c9	                         movsxd rcx, ecx	       113	state.c	FUNCTION_6	IF_6	ELSE_3	CALL_3
0x476	        0x48c1e102	                              shl rcx, 2	       114	state.c	FUNCTION_6	IF_6	ELSE_3
0x47a	          0x4801c1	                            add rcx, rax	       113	state.c	FUNCTION_6	IF_6	ELSE_3	CALL_3
0x47d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       113	state.c	FUNCTION_6	IF_6	ELSE_3	CALL_3
0x481	        0x488b4058	            mov rax, qword [rax + 0x58] 	       113	state.c	FUNCTION_6	IF_6	ELSE_3	CALL_3
0x485	          0x8b75d0	             mov esi, dword [rbp - 0x30]	       113	state.c	FUNCTION_6	IF_6	ELSE_3	CALL_3
0x488	          0x4863fe	                         movsxd rdi, esi	       113	state.c	FUNCTION_6	IF_6	ELSE_3	CALL_3
0x48b	          0x8b75e4	             mov esi, dword [rbp - 0x1c]	       113	state.c	FUNCTION_6	IF_6	ELSE_3	CALL_3
0x48e	          0x4863f6	                         movsxd rsi, esi	       113	state.c	FUNCTION_6	IF_6	ELSE_3	CALL_3
0x491	          0x4829f7	                            sub rdi, rsi	       113	state.c	FUNCTION_6	IF_6	ELSE_3	CALL_3
0x494	          0x4889fe	                            mov rsi, rdi	       113	state.c	FUNCTION_6	IF_6	ELSE_3	CALL_3
0x497	        0x48c1e602	                              shl rsi, 2	       113	state.c	FUNCTION_6	IF_6	ELSE_3	CALL_3
0x49b	          0x4801f0	                            add rax, rsi	       113	state.c	FUNCTION_6	IF_6	ELSE_3	CALL_3
0x49e	          0x4889ce	                            mov rsi, rcx	       113	state.c	FUNCTION_6	IF_6	ELSE_3	CALL_3
0x4a1	          0x4889c7	                            mov rdi, rax	       113	state.c	FUNCTION_6	IF_6	ELSE_3	CALL_3
0x4a4	      0xe800000000	                          call 0x40004e9	       113	state.c	FUNCTION_6	IF_6	ELSE_3	CALL_3
0x4a9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       118	state.c	FUNCTION_6	IF_8
0x4ad	        0x488b4008	                mov rax, qword [rax + 8]	       118	state.c	FUNCTION_6	IF_8
0x4b1	          0x4885c0	                           test rax, rax	       118	state.c	FUNCTION_6	IF_8
0x4b4	            0x7439	                            je 0x400052f	       118	state.c	FUNCTION_6	IF_8
0x4b6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       118	state.c	FUNCTION_6	IF_8
0x4ba	        0x488b4008	                mov rax, qword [rax + 8]	       118	state.c	FUNCTION_6	IF_8
0x4be	        0x488b4010	            mov rax, qword [rax + 0x10] 	       118	state.c	FUNCTION_6	IF_8
0x4c2	          0x4885c0	                           test rax, rax	       118	state.c	FUNCTION_6	IF_8
0x4c5	            0x7428	                            je 0x400052f	       118	state.c	FUNCTION_6	IF_8
0x4c7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       119	state.c	FUNCTION_6	IF_8	IF_9
0x4cb	        0x488b4008	                mov rax, qword [rax + 8]	       119	state.c	FUNCTION_6	IF_8	IF_9
0x4cf	        0x488b4010	            mov rax, qword [rax + 0x10] 	       119	state.c	FUNCTION_6	IF_8	IF_9
0x4d3	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       119	state.c	FUNCTION_6	IF_8	IF_9
0x4d7	        0x4c8b4210	              mov r8, qword [rdx + 0x10]	       119	state.c	FUNCTION_6	IF_8	IF_9
0x4db	          0x8b4de0	             mov ecx, dword [rbp - 0x20]	       119	state.c	FUNCTION_6	IF_8	IF_9
0x4de	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       119	state.c	FUNCTION_6	IF_8	IF_9
0x4e1	        0x488b7dd0	             mov rdi, qword [rbp - 0x30]	       119	state.c	FUNCTION_6	IF_8	IF_9
0x4e5	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	       119	state.c	FUNCTION_6	IF_8	IF_9
0x4e9	            0xffd0	                                call rax	       119	state.c	FUNCTION_6	IF_8	IF_9
0x4eb	            0x85c0	                           test eax, eax	       119	state.c	FUNCTION_6	IF_8	IF_9
0x4ed	            0x7554	                           jne 0x4000583	       119	state.c	FUNCTION_6	IF_8	IF_9
0x4ef	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       122	state.c	FUNCTION_6	IF_10
0x4f3	        0x488b4008	                mov rax, qword [rax + 8]	       122	state.c	FUNCTION_6	IF_10
0x4f7	          0x4885c0	                           test rax, rax	       122	state.c	FUNCTION_6	IF_10
0x4fa	            0x7448	                            je 0x4000584	       122	state.c	FUNCTION_6	IF_10
0x4fc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x500	        0x488b7810	            mov rdi, qword [rax + 0x10] 	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x504	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       124	state.c	FUNCTION_6	IF_10
0x508	        0x488b4008	                mov rax, qword [rax + 8]	       124	state.c	FUNCTION_6	IF_10
0x50c	        0x4c8b4820	              mov r9, qword [rax + 0x20]	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x510	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       124	state.c	FUNCTION_6	IF_10
0x514	        0x488b4008	                mov rax, qword [rax + 8]	       124	state.c	FUNCTION_6	IF_10
0x518	        0x4c8b4018	              mov r8, qword [rax + 0x18]	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x51c	          0x8b4de0	             mov ecx, dword [rbp - 0x20]	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x51f	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x522	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x526	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x52a	        0x4883ec08	                              sub rsp, 8	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x52e	              0x57	                                push rdi	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x52f	          0x4889f7	                            mov rdi, rsi	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x532	          0x4889c6	                            mov rsi, rax	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x535	      0xe800000000	                          call 0x400057a	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x53a	        0x4883c410	                           add rsp, 0x10	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x53e	            0xeb04	                           jmp 0x4000584	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x540	              0x90	                                     nop	        90	state.c	FUNCTION_6	IF_1
0x541	            0xeb01	                           jmp 0x4000584	        90	state.c	FUNCTION_6	IF_1
0x543	              0x90	                                     nop	       120	state.c	FUNCTION_6	IF_8	IF_9
0x544	              0xc9	                                   leave	       125	state.c	FUNCTION_6
0x545	              0xc3	                                     ret	       125	state.c	FUNCTION_6
is_col_tabstop	SWITCH,0:functions,0:ELSE,0:CALL,0:WHILE,0:DO,0:IF,0:FOR,0	22
0x790	              0x55	                                push rbp	       168	state.c	FUNCTION_11
0x791	          0x4889e5	                            mov rbp, rsp	       168	state.c	FUNCTION_11
0x794	        0x48897de8	             mov qword [rbp - 0x18], rdi	       168	state.c	FUNCTION_11
0x798	          0x8975e4	             mov dword [rbp - 0x1c], esi	       168	state.c	FUNCTION_11
0x79b	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       169	state.c	FUNCTION_11
0x79e	          0x83e007	                              and eax, 7	       169	state.c	FUNCTION_11
0x7a1	      0xba01000000	                              mov edx, 1	       169	state.c	FUNCTION_11
0x7a6	            0x89c1	                            mov ecx, eax	       169	state.c	FUNCTION_11
0x7a8	            0xd3e2	                             shl edx, cl	       169	state.c	FUNCTION_11
0x7aa	            0x89d0	                            mov eax, edx	       169	state.c	FUNCTION_11
0x7ac	          0x8845ff	                  mov byte [rbp - 1], al	       169	state.c	FUNCTION_11
0x7af	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       170	state.c	FUNCTION_11
0x7b3	        0x488b5050	            mov rdx, qword [rax + 0x50] 	       170	state.c	FUNCTION_11
0x7b7	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       170	state.c	FUNCTION_11
0x7ba	          0xc1f803	                              sar eax, 3	       170	state.c	FUNCTION_11
0x7bd	            0x4898	                                    cdqe	       170	state.c	FUNCTION_11
0x7bf	          0x4801d0	                            add rax, rdx	       170	state.c	FUNCTION_11
0x7c2	           0xfb600	                   movzx eax, byte [rax]	       170	state.c	FUNCTION_11
0x7c5	          0x2245ff	                  and al, byte [rbp - 1]	       170	state.c	FUNCTION_11
0x7c8	           0xfb6c0	                           movzx eax, al	       170	state.c	FUNCTION_11
0x7cb	              0x5d	                                 pop rbp	       171	state.c	FUNCTION_11
0x7cc	              0xc3	                                     ret	       171	state.c	FUNCTION_11
vterm_state_get_unrecognised_fbdata	SWITCH,0:functions,0:ELSE,0:CALL,0:WHILE,0:DO,0:IF,0:FOR,0	7
0x57a2	              0x55	                                push rbp	      1846	state.c	FUNCTION_37
0x57a3	          0x4889e5	                            mov rbp, rsp	      1846	state.c	FUNCTION_37
0x57a6	        0x48897df8	                mov qword [rbp - 8], rdi	      1846	state.c	FUNCTION_37
0x57aa	        0x488b45f8	                mov rax, qword [rbp - 8]	      1847	state.c	FUNCTION_37
0x57ae	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1847	state.c	FUNCTION_37
0x57b2	              0x5d	                                 pop rbp	      1848	state.c	FUNCTION_37
0x57b3	              0xc3	                                     ret	      1848	state.c	FUNCTION_37
settermprop_string	SWITCH,0:functions,0:ELSE,0:CALL,4:WHILE,0:DO,0:IF,0:FOR,0	50
0x1564	              0x55	                                push rbp	       531	state.c	FUNCTION_19
0x1565	          0x4889e5	                            mov rbp, rsp	       531	state.c	FUNCTION_19
0x1568	        0x4883ec50	                           sub rsp, 0x50	       531	state.c	FUNCTION_19
0x156c	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       531	state.c	FUNCTION_19
0x1570	          0x8975c4	             mov dword [rbp - 0x3c], esi	       531	state.c	FUNCTION_19
0x1573	        0x488955b8	             mov qword [rbp - 0x48], rdx	       531	state.c	FUNCTION_19
0x1577	        0x48894db0	             mov qword [rbp - 0x50], rcx	       531	state.c	FUNCTION_19
0x157b	    0x64488b042528	                mov rax, qword fs:[0x28]	       531	state.c	FUNCTION_19
0x1584	        0x488945f8	                mov qword [rbp - 8], rax	       531	state.c	FUNCTION_19
0x1588	            0x31c0	                            xor eax, eax	       531	state.c	FUNCTION_19
0x158a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       535	state.c	FUNCTION_19	CALL_1
0x158e	        0x488d5001	                      lea rdx, [rax + 1]	       535	state.c	FUNCTION_19	CALL_1
0x1592	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       535	state.c	FUNCTION_19	CALL_1
0x1596	          0x488b00	                    mov rax, qword [rax]	       535	state.c	FUNCTION_19	CALL_1
0x1599	          0x4889d6	                            mov rsi, rdx	       535	state.c	FUNCTION_19	CALL_1
0x159c	          0x4889c7	                            mov rdi, rax	       535	state.c	FUNCTION_19	CALL_1
0x159f	      0xe800000000	                          call 0x40015e4	       535	state.c	FUNCTION_19	CALL_1
0x15a4	        0x488945f0	             mov qword [rbp - 0x10], rax	       535	state.c	FUNCTION_19	CALL_1
0x15a8	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       536	state.c	FUNCTION_19	CALL_2
0x15ac	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       536	state.c	FUNCTION_19	CALL_2
0x15b0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       536	state.c	FUNCTION_19	CALL_2
0x15b4	          0x4889ce	                            mov rsi, rcx	       536	state.c	FUNCTION_19	CALL_2
0x15b7	          0x4889c7	                            mov rdi, rax	       536	state.c	FUNCTION_19	CALL_2
0x15ba	      0xe800000000	                          call 0x40015ff	       536	state.c	FUNCTION_19	CALL_2
0x15bf	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       537	state.c	FUNCTION_19
0x15c3	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       537	state.c	FUNCTION_19
0x15c7	          0x4801d0	                            add rax, rdx	       537	state.c	FUNCTION_19
0x15ca	          0xc60000	                       mov byte [rax], 0	       537	state.c	FUNCTION_19
0x15cd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       539	state.c	FUNCTION_19
0x15d1	        0x488945e0	             mov qword [rbp - 0x20], rax	       539	state.c	FUNCTION_19
0x15d5	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       540	state.c	FUNCTION_19	CALL_3
0x15d9	          0x8b4dc4	             mov ecx, dword [rbp - 0x3c]	       540	state.c	FUNCTION_19	CALL_3
0x15dc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       540	state.c	FUNCTION_19	CALL_3
0x15e0	            0x89ce	                            mov esi, ecx	       540	state.c	FUNCTION_19	CALL_3
0x15e2	          0x4889c7	                            mov rdi, rax	       540	state.c	FUNCTION_19	CALL_3
0x15e5	      0xe800000000	                          call 0x400162a	       540	state.c	FUNCTION_19	CALL_3
0x15ea	          0x8945dc	             mov dword [rbp - 0x24], eax	       540	state.c	FUNCTION_19	CALL_3
0x15ed	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       541	state.c	FUNCTION_19	CALL_4
0x15f1	          0x488b00	                    mov rax, qword [rax]	       541	state.c	FUNCTION_19	CALL_4
0x15f4	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       541	state.c	FUNCTION_19	CALL_4
0x15f8	          0x4889d6	                            mov rsi, rdx	       541	state.c	FUNCTION_19	CALL_4
0x15fb	          0x4889c7	                            mov rdi, rax	       541	state.c	FUNCTION_19	CALL_4
0x15fe	      0xe800000000	                          call 0x4001643	       541	state.c	FUNCTION_19	CALL_4
0x1603	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       542	state.c	FUNCTION_19
0x1606	        0x488b4df8	                mov rcx, qword [rbp - 8]	       543	state.c	FUNCTION_19
0x160a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       543	state.c	FUNCTION_19
0x1613	            0x7405	                            je 0x400165a	       543	state.c	FUNCTION_19
0x1615	      0xe800000000	                          call 0x400165a	       543	state.c	FUNCTION_19
0x161a	              0xc9	                                   leave	       543	state.c	FUNCTION_19
0x161b	              0xc3	                                     ret	       543	state.c	FUNCTION_19
settermprop_int	SWITCH,0:functions,0:ELSE,0:CALL,1:WHILE,0:DO,0:IF,0:FOR,0	23
0x1512	              0x55	                                push rbp	       524	state.c	FUNCTION_18
0x1513	          0x4889e5	                            mov rbp, rsp	       524	state.c	FUNCTION_18
0x1516	        0x4883ec20	                           sub rsp, 0x20	       524	state.c	FUNCTION_18
0x151a	        0x48897de8	             mov qword [rbp - 0x18], rdi	       524	state.c	FUNCTION_18
0x151e	          0x8975e4	             mov dword [rbp - 0x1c], esi	       524	state.c	FUNCTION_18
0x1521	          0x8955e0	             mov dword [rbp - 0x20], edx	       524	state.c	FUNCTION_18
0x1524	    0x64488b042528	                mov rax, qword fs:[0x28]	       524	state.c	FUNCTION_18
0x152d	        0x488945f8	                mov qword [rbp - 8], rax	       524	state.c	FUNCTION_18
0x1531	            0x31c0	                            xor eax, eax	       524	state.c	FUNCTION_18
0x1533	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       526	state.c	FUNCTION_18
0x1536	          0x8945f0	             mov dword [rbp - 0x10], eax	       526	state.c	FUNCTION_18
0x1539	        0x488d55f0	                   lea rdx, [rbp - 0x10]	       527	state.c	FUNCTION_18	CALL_1
0x153d	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	       527	state.c	FUNCTION_18	CALL_1
0x1540	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       527	state.c	FUNCTION_18	CALL_1
0x1544	            0x89ce	                            mov esi, ecx	       527	state.c	FUNCTION_18	CALL_1
0x1546	          0x4889c7	                            mov rdi, rax	       527	state.c	FUNCTION_18	CALL_1
0x1549	      0xe800000000	                          call 0x400158e	       527	state.c	FUNCTION_18	CALL_1
0x154e	        0x488b4df8	                mov rcx, qword [rbp - 8]	       528	state.c	FUNCTION_18
0x1552	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       528	state.c	FUNCTION_18
0x155b	            0x7405	                            je 0x40015a2	       528	state.c	FUNCTION_18
0x155d	      0xe800000000	                          call 0x40015a2	       528	state.c	FUNCTION_18
0x1562	              0xc9	                                   leave	       528	state.c	FUNCTION_18
0x1563	              0xc3	                                     ret	       528	state.c	FUNCTION_18
vterm_state_focus_out	SWITCH,0:functions,0:ELSE,0:CALL,1:WHILE,0:DO,0:IF,1:FOR,0	19
0x5a48	              0x55	                                push rbp	      1909	state.c	FUNCTION_40
0x5a49	          0x4889e5	                            mov rbp, rsp	      1909	state.c	FUNCTION_40
0x5a4c	        0x4883ec10	                           sub rsp, 0x10	      1909	state.c	FUNCTION_40
0x5a50	        0x48897df8	                mov qword [rbp - 8], rdi	      1909	state.c	FUNCTION_40
0x5a54	        0x488b45f8	                mov rax, qword [rbp - 8]	      1910	state.c	FUNCTION_40	IF_1
0x5a58	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1910	state.c	FUNCTION_40	IF_1
0x5a5f	          0x83e040	                           and eax, 0x40	      1910	state.c	FUNCTION_40	IF_1
0x5a62	            0x84c0	                             test al, al	      1910	state.c	FUNCTION_40	IF_1
0x5a64	            0x741e	                            je 0x4005ac4	      1910	state.c	FUNCTION_40	IF_1
0x5a66	        0x488b45f8	                mov rax, qword [rbp - 8]	      1911	state.c	FUNCTION_40	CALL_1
0x5a6a	          0x488b00	                    mov rax, qword [rax]	      1911	state.c	FUNCTION_40	CALL_1
0x5a6d	      0xba00000000	                              mov edx, 0	      1911	state.c	FUNCTION_40	CALL_1
0x5a72	      0xbe9b000000	                           mov esi, 0x9b	      1911	state.c	FUNCTION_40	CALL_1
0x5a77	          0x4889c7	                            mov rdi, rax	      1911	state.c	FUNCTION_40	CALL_1
0x5a7a	      0xb800000000	                              mov eax, 0	      1911	state.c	FUNCTION_40	CALL_1
0x5a7f	      0xe800000000	                          call 0x4005ac4	      1911	state.c	FUNCTION_40	CALL_1
0x5a84	              0x90	                                     nop	      1912	state.c	FUNCTION_40
0x5a85	              0xc9	                                   leave	      1912	state.c	FUNCTION_40
0x5a86	              0xc3	                                     ret	      1912	state.c	FUNCTION_40
on_csi	SWITCH,10:functions,0:ELSE,5:CALL,180:WHILE,0:DO,0:IF,36:FOR,4	2394
0x241a	              0x55	                                push rbp	       901	state.c	FUNCTION_25
0x241b	          0x4889e5	                            mov rbp, rsp	       901	state.c	FUNCTION_25
0x241e	    0x4881ec900000	                           sub rsp, 0x90	       901	state.c	FUNCTION_25
0x2425	        0x48897d98	             mov qword [rbp - 0x68], rdi	       901	state.c	FUNCTION_25
0x2429	        0x48897590	             mov qword [rbp - 0x70], rsi	       901	state.c	FUNCTION_25
0x242d	          0x89558c	             mov dword [rbp - 0x74], edx	       901	state.c	FUNCTION_25
0x2430	        0x48894d80	             mov qword [rbp - 0x80], rcx	       901	state.c	FUNCTION_25
0x2434	          0x4489c0	                            mov eax, r8d	       901	state.c	FUNCTION_25
0x2437	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       901	state.c	FUNCTION_25
0x243e	          0x884588	               mov byte [rbp - 0x78], al	       901	state.c	FUNCTION_25
0x2441	    0x64488b042528	                mov rax, qword fs:[0x28]	       901	state.c	FUNCTION_25
0x244a	        0x488945f8	                mov qword [rbp - 8], rax	       901	state.c	FUNCTION_25
0x244e	            0x31c0	                            xor eax, eax	       901	state.c	FUNCTION_25
0x2450	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       902	state.c	FUNCTION_25
0x2457	        0x488945d0	             mov qword [rbp - 0x30], rax	       902	state.c	FUNCTION_25
0x245b	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	       903	state.c	FUNCTION_25
0x2462	    0xc745a8000000	               mov dword [rbp - 0x58], 0	       904	state.c	FUNCTION_25
0x2469	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       905	state.c	FUNCTION_25
0x246d	        0x488b4030	            mov rax, qword [rax + 0x30] 	       905	state.c	FUNCTION_25
0x2471	        0x488945c0	             mov qword [rbp - 0x40], rax	       905	state.c	FUNCTION_25
0x2475	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       913	state.c	FUNCTION_25	IF_1
0x247a	            0x744f	                            je 0x400250b	       913	state.c	FUNCTION_25	IF_1
0x247c	        0x488b4598	             mov rax, qword [rbp - 0x68]	       913	state.c	FUNCTION_25	IF_1
0x2480	           0xfb600	                   movzx eax, byte [rax]	       913	state.c	FUNCTION_25	IF_1
0x2483	            0x84c0	                             test al, al	       913	state.c	FUNCTION_25	IF_1
0x2485	            0x7444	                            je 0x400250b	       913	state.c	FUNCTION_25	IF_1
0x2487	        0x488b4598	             mov rax, qword [rbp - 0x68]	       914	state.c	FUNCTION_25	IF_1	IF_2
0x248b	        0x4883c001	                              add rax, 1	       914	state.c	FUNCTION_25	IF_1	IF_2
0x248f	           0xfb600	                   movzx eax, byte [rax]	       914	state.c	FUNCTION_25	IF_1	IF_2
0x2492	            0x84c0	                             test al, al	       914	state.c	FUNCTION_25	IF_1	IF_2
0x2494	            0x740a	                            je 0x40024e0	       914	state.c	FUNCTION_25	IF_1	IF_2
0x2496	      0xb800000000	                              mov eax, 0	       915	state.c	FUNCTION_25	IF_1	IF_2
0x249b	      0xe932210000	                           jmp 0x4004612	       915	state.c	FUNCTION_25	IF_1	IF_2
0x24a0	        0x488b4598	             mov rax, qword [rbp - 0x68]	       917	state.c	FUNCTION_25	IF_1	SWITCH_1
0x24a4	           0xfb600	                   movzx eax, byte [rax]	       917	state.c	FUNCTION_25	IF_1	SWITCH_1
0x24a7	           0xfbec0	                           movsx eax, al	       917	state.c	FUNCTION_25	IF_1	SWITCH_1
0x24aa	          0x83e83e	                           sub eax, 0x3e	       917	state.c	FUNCTION_25	IF_1	SWITCH_1
0x24ad	          0x83f801	                              cmp eax, 1	       917	state.c	FUNCTION_25	IF_1	SWITCH_1
0x24b0	            0x770f	                            ja 0x4002501	       917	state.c	FUNCTION_25	IF_1	SWITCH_1
0x24b2	        0x488b4598	             mov rax, qword [rbp - 0x68]	       920	state.c	FUNCTION_25	IF_1	SWITCH_1
0x24b6	           0xfb600	                   movzx eax, byte [rax]	       920	state.c	FUNCTION_25	IF_1	SWITCH_1
0x24b9	           0xfbec0	                           movsx eax, al	       920	state.c	FUNCTION_25	IF_1	SWITCH_1
0x24bc	          0x8945a4	             mov dword [rbp - 0x5c], eax	       920	state.c	FUNCTION_25	IF_1	SWITCH_1
0x24bf	            0xeb0a	                           jmp 0x400250b	       921	state.c	FUNCTION_25	IF_1	SWITCH_1
0x24c1	      0xb800000000	                              mov eax, 0	       923	state.c	FUNCTION_25	IF_1	SWITCH_1
0x24c6	      0xe907210000	                           jmp 0x4004612	       923	state.c	FUNCTION_25	IF_1	SWITCH_1
0x24cb	      0x48837d8000	               cmp qword [rbp - 0x80], 0	       927	state.c	FUNCTION_25	IF_3
0x24d0	            0x7462	                            je 0x4002574	       927	state.c	FUNCTION_25	IF_3
0x24d2	        0x488b4580	             mov rax, qword [rbp - 0x80]	       927	state.c	FUNCTION_25	IF_3
0x24d6	           0xfb600	                   movzx eax, byte [rax]	       927	state.c	FUNCTION_25	IF_3
0x24d9	            0x84c0	                             test al, al	       927	state.c	FUNCTION_25	IF_3
0x24db	            0x7457	                            je 0x4002574	       927	state.c	FUNCTION_25	IF_3
0x24dd	        0x488b4580	             mov rax, qword [rbp - 0x80]	       928	state.c	FUNCTION_25	IF_3	IF_4
0x24e1	        0x4883c001	                              add rax, 1	       928	state.c	FUNCTION_25	IF_3	IF_4
0x24e5	           0xfb600	                   movzx eax, byte [rax]	       928	state.c	FUNCTION_25	IF_3	IF_4
0x24e8	            0x84c0	                             test al, al	       928	state.c	FUNCTION_25	IF_3	IF_4
0x24ea	            0x740a	                            je 0x4002536	       928	state.c	FUNCTION_25	IF_3	IF_4
0x24ec	      0xb800000000	                              mov eax, 0	       929	state.c	FUNCTION_25	IF_3	IF_4
0x24f1	      0xe9dc200000	                           jmp 0x4004612	       929	state.c	FUNCTION_25	IF_3	IF_4
0x24f6	        0x488b4580	             mov rax, qword [rbp - 0x80]	       931	state.c	FUNCTION_25	IF_3	SWITCH_2
0x24fa	           0xfb600	                   movzx eax, byte [rax]	       931	state.c	FUNCTION_25	IF_3	SWITCH_2
0x24fd	           0xfbec0	                           movsx eax, al	       931	state.c	FUNCTION_25	IF_3	SWITCH_2
0x2500	          0x83f822	                           cmp eax, 0x22	       931	state.c	FUNCTION_25	IF_3	SWITCH_2
0x2503	            0x7416	                            je 0x400255b	       931	state.c	FUNCTION_25	IF_3	SWITCH_2
0x2505	          0x83f822	                           cmp eax, 0x22	       931	state.c	FUNCTION_25	IF_3	SWITCH_2
0x2508	            0x7f07	                            jg 0x4002551	       931	state.c	FUNCTION_25	IF_3	SWITCH_2
0x250a	          0x83f820	                           cmp eax, 0x20	       931	state.c	FUNCTION_25	IF_3	SWITCH_2
0x250d	            0x740c	                            je 0x400255b	       931	state.c	FUNCTION_25	IF_3	SWITCH_2
0x250f	            0xeb19	                           jmp 0x400256a	       931	state.c	FUNCTION_25	IF_3	SWITCH_2
0x2511	          0x83f824	                           cmp eax, 0x24	       931	state.c	FUNCTION_25	IF_3	SWITCH_2
0x2514	            0x7405	                            je 0x400255b	       931	state.c	FUNCTION_25	IF_3	SWITCH_2
0x2516	          0x83f827	                           cmp eax, 0x27	       931	state.c	FUNCTION_25	IF_3	SWITCH_2
0x2519	            0x750f	                           jne 0x400256a	       931	state.c	FUNCTION_25	IF_3	SWITCH_2
0x251b	        0x488b4580	             mov rax, qword [rbp - 0x80]	       936	state.c	FUNCTION_25	IF_3	SWITCH_2
0x251f	           0xfb600	                   movzx eax, byte [rax]	       936	state.c	FUNCTION_25	IF_3	SWITCH_2
0x2522	           0xfbec0	                           movsx eax, al	       936	state.c	FUNCTION_25	IF_3	SWITCH_2
0x2525	          0x8945a8	             mov dword [rbp - 0x58], eax	       936	state.c	FUNCTION_25	IF_3	SWITCH_2
0x2528	            0xeb0a	                           jmp 0x4002574	       937	state.c	FUNCTION_25	IF_3	SWITCH_2
0x252a	      0xb800000000	                              mov eax, 0	       939	state.c	FUNCTION_25	IF_3	SWITCH_2
0x252f	      0xe99e200000	                           jmp 0x4004612	       939	state.c	FUNCTION_25	IF_3	SWITCH_2
0x2534	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       943	state.c	FUNCTION_25
0x2538	        0x488b4030	            mov rax, qword [rax + 0x30] 	       943	state.c	FUNCTION_25
0x253c	        0x488945c0	             mov qword [rbp - 0x40], rax	       943	state.c	FUNCTION_25
0x2540	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       951	state.c	FUNCTION_25	SWITCH_3
0x2543	          0xc1e010	                           shl eax, 0x10	       951	state.c	FUNCTION_25	SWITCH_3
0x2546	            0x89c2	                            mov edx, eax	       951	state.c	FUNCTION_25	SWITCH_3
0x2548	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       951	state.c	FUNCTION_25	SWITCH_3
0x254b	          0xc1e008	                              shl eax, 8	       951	state.c	FUNCTION_25	SWITCH_3
0x254e	             0x9c2	                             or edx, eax	       951	state.c	FUNCTION_25	SWITCH_3
0x2550	         0xfbe4588	            movsx eax, byte [rbp - 0x78]	       951	state.c	FUNCTION_25	SWITCH_3
0x2554	             0x9d0	                             or eax, edx	       951	state.c	FUNCTION_25	SWITCH_3
0x2556	          0x83f865	                           cmp eax, 0x65	       951	state.c	FUNCTION_25	SWITCH_3
0x2559	     0xf846f120000	                            je 0x400380e	       951	state.c	FUNCTION_25	SWITCH_3
0x255f	          0x83f865	                           cmp eax, 0x65	       951	state.c	FUNCTION_25	SWITCH_3
0x2562	     0xf8f1e010000	                            jg 0x40026c6	       951	state.c	FUNCTION_25	SWITCH_3
0x2568	          0x83f84b	                           cmp eax, 0x4b	       951	state.c	FUNCTION_25	SWITCH_3
0x256b	     0xf8485090000	                            je 0x4002f36	       951	state.c	FUNCTION_25	SWITCH_3
0x2571	          0x83f84b	                           cmp eax, 0x4b	       951	state.c	FUNCTION_25	SWITCH_3
0x2574	     0xf8f86000000	                            jg 0x4002640	       951	state.c	FUNCTION_25	SWITCH_3
0x257a	          0x83f845	                           cmp eax, 0x45	       951	state.c	FUNCTION_25	SWITCH_3
0x257d	     0xf84d3040000	                            je 0x4002a96	       951	state.c	FUNCTION_25	SWITCH_3
0x2583	          0x83f845	                           cmp eax, 0x45	       951	state.c	FUNCTION_25	SWITCH_3
0x2586	            0x7f3c	                            jg 0x4002604	       951	state.c	FUNCTION_25	SWITCH_3
0x2588	          0x83f842	                           cmp eax, 0x42	       951	state.c	FUNCTION_25	SWITCH_3
0x258b	     0xf84ab030000	                            je 0x400297c	       951	state.c	FUNCTION_25	SWITCH_3
0x2591	          0x83f842	                           cmp eax, 0x42	       951	state.c	FUNCTION_25	SWITCH_3
0x2594	            0x7f17	                            jg 0x40025ed	       951	state.c	FUNCTION_25	SWITCH_3
0x2596	          0x83f840	                           cmp eax, 0x40	       951	state.c	FUNCTION_25	SWITCH_3
0x2599	     0xf8425020000	                            je 0x4002804	       951	state.c	FUNCTION_25	SWITCH_3
0x259f	          0x83f841	                           cmp eax, 0x41	       951	state.c	FUNCTION_25	SWITCH_3
0x25a2	     0xf8436030000	                            je 0x400291e	       951	state.c	FUNCTION_25	SWITCH_3
0x25a8	      0xe9341d0000	                           jmp 0x4004321	       951	state.c	FUNCTION_25	SWITCH_3
0x25ad	          0x83f843	                           cmp eax, 0x43	       951	state.c	FUNCTION_25	SWITCH_3
0x25b0	     0xf84e4030000	                            je 0x40029da	       951	state.c	FUNCTION_25	SWITCH_3
0x25b6	          0x83f844	                           cmp eax, 0x44	       951	state.c	FUNCTION_25	SWITCH_3
0x25b9	     0xf8439040000	                            je 0x4002a38	       951	state.c	FUNCTION_25	SWITCH_3
0x25bf	      0xe91d1d0000	                           jmp 0x4004321	       951	state.c	FUNCTION_25	SWITCH_3
0x25c4	          0x83f848	                           cmp eax, 0x48	       951	state.c	FUNCTION_25	SWITCH_3
0x25c7	     0xf84a2050000	                            je 0x4002baf	       951	state.c	FUNCTION_25	SWITCH_3
0x25cd	          0x83f848	                           cmp eax, 0x48	       951	state.c	FUNCTION_25	SWITCH_3
0x25d0	            0x7f17	                            jg 0x4002629	       951	state.c	FUNCTION_25	SWITCH_3
0x25d2	          0x83f846	                           cmp eax, 0x46	       951	state.c	FUNCTION_25	SWITCH_3
0x25d5	     0xf84e4040000	                            je 0x4002aff	       951	state.c	FUNCTION_25	SWITCH_3
0x25db	          0x83f847	                           cmp eax, 0x47	       951	state.c	FUNCTION_25	SWITCH_3
0x25de	     0xf8444050000	                            je 0x4002b68	       951	state.c	FUNCTION_25	SWITCH_3
0x25e4	      0xe9f81c0000	                           jmp 0x4004321	       951	state.c	FUNCTION_25	SWITCH_3
0x25e9	          0x83f849	                           cmp eax, 0x49	       951	state.c	FUNCTION_25	SWITCH_3
0x25ec	     0xf8462060000	                            je 0x4002c94	       951	state.c	FUNCTION_25	SWITCH_3
0x25f2	          0x83f84a	                           cmp eax, 0x4a	       951	state.c	FUNCTION_25	SWITCH_3
0x25f5	     0xf84af060000	                            je 0x4002cea	       951	state.c	FUNCTION_25	SWITCH_3
0x25fb	      0xe9e11c0000	                           jmp 0x4004321	       951	state.c	FUNCTION_25	SWITCH_3
0x2600	          0x83f858	                           cmp eax, 0x58	       951	state.c	FUNCTION_25	SWITCH_3
0x2603	     0xf84c60e0000	                            je 0x400350f	       951	state.c	FUNCTION_25	SWITCH_3
0x2609	          0x83f858	                           cmp eax, 0x58	       951	state.c	FUNCTION_25	SWITCH_3
0x260c	            0x7f3c	                            jg 0x400268a	       951	state.c	FUNCTION_25	SWITCH_3
0x260e	          0x83f850	                           cmp eax, 0x50	       951	state.c	FUNCTION_25	SWITCH_3
0x2611	     0xf84ee0b0000	                            je 0x4003245	       951	state.c	FUNCTION_25	SWITCH_3
0x2617	          0x83f850	                           cmp eax, 0x50	       951	state.c	FUNCTION_25	SWITCH_3
0x261a	            0x7f17	                            jg 0x4002673	       951	state.c	FUNCTION_25	SWITCH_3
0x261c	          0x83f84c	                           cmp eax, 0x4c	       951	state.c	FUNCTION_25	SWITCH_3
0x261f	     0xf84040a0000	                            je 0x4003069	       951	state.c	FUNCTION_25	SWITCH_3
0x2625	          0x83f84d	                           cmp eax, 0x4d	       951	state.c	FUNCTION_25	SWITCH_3
0x2628	     0xf84eb0a0000	                            je 0x4003159	       951	state.c	FUNCTION_25	SWITCH_3
0x262e	      0xe9ae1c0000	                           jmp 0x4004321	       951	state.c	FUNCTION_25	SWITCH_3
0x2633	          0x83f853	                           cmp eax, 0x53	       951	state.c	FUNCTION_25	SWITCH_3
0x2636	     0xf84df0c0000	                            je 0x400335b	       951	state.c	FUNCTION_25	SWITCH_3
0x263c	          0x83f854	                           cmp eax, 0x54	       951	state.c	FUNCTION_25	SWITCH_3
0x263f	     0xf84ae0d0000	                            je 0x4003433	       951	state.c	FUNCTION_25	SWITCH_3
0x2645	      0xe9971c0000	                           jmp 0x4004321	       951	state.c	FUNCTION_25	SWITCH_3
0x264a	          0x83f861	                           cmp eax, 0x61	       951	state.c	FUNCTION_25	SWITCH_3
0x264d	     0xf8422100000	                            je 0x40036b5	       951	state.c	FUNCTION_25	SWITCH_3
0x2653	          0x83f861	                           cmp eax, 0x61	       951	state.c	FUNCTION_25	SWITCH_3
0x2656	            0x7f17	                            jg 0x40026af	       951	state.c	FUNCTION_25	SWITCH_3
0x2658	          0x83f85a	                           cmp eax, 0x5a	       951	state.c	FUNCTION_25	SWITCH_3
0x265b	     0xf84770f0000	                            je 0x4003618	       951	state.c	FUNCTION_25	SWITCH_3
0x2661	          0x83f860	                           cmp eax, 0x60	       951	state.c	FUNCTION_25	SWITCH_3
0x2664	     0xf84c40f0000	                            je 0x400366e	       951	state.c	FUNCTION_25	SWITCH_3
0x266a	      0xe9721c0000	                           jmp 0x4004321	       951	state.c	FUNCTION_25	SWITCH_3
0x266f	          0x83f863	                           cmp eax, 0x63	       951	state.c	FUNCTION_25	SWITCH_3
0x2672	     0xf845b100000	                            je 0x4003713	       951	state.c	FUNCTION_25	SWITCH_3
0x2678	          0x83f864	                           cmp eax, 0x64	       951	state.c	FUNCTION_25	SWITCH_3
0x267b	     0xf84dd100000	                            je 0x400379e	       951	state.c	FUNCTION_25	SWITCH_3
0x2681	      0xe95b1c0000	                           jmp 0x4004321	       951	state.c	FUNCTION_25	SWITCH_3
0x2686	      0x3d70210000	                         cmp eax, 0x2170	       951	state.c	FUNCTION_25	SWITCH_3
0x268b	     0xf84ac150000	                            je 0x4003c7d	       951	state.c	FUNCTION_25	SWITCH_3
0x2691	      0x3d70210000	                         cmp eax, 0x2170	       951	state.c	FUNCTION_25	SWITCH_3
0x2696	     0xf8f86000000	                            jg 0x4002762	       951	state.c	FUNCTION_25	SWITCH_3
0x269c	          0x83f86c	                           cmp eax, 0x6c	       951	state.c	FUNCTION_25	SWITCH_3
0x269f	     0xf8434140000	                            je 0x4003b19	       951	state.c	FUNCTION_25	SWITCH_3
0x26a5	          0x83f86c	                           cmp eax, 0x6c	       951	state.c	FUNCTION_25	SWITCH_3
0x26a8	            0x7f3c	                            jg 0x4002726	       951	state.c	FUNCTION_25	SWITCH_3
0x26aa	          0x83f868	                           cmp eax, 0x68	       951	state.c	FUNCTION_25	SWITCH_3
0x26ad	     0xf84ee120000	                            je 0x40039e1	       951	state.c	FUNCTION_25	SWITCH_3
0x26b3	          0x83f868	                           cmp eax, 0x68	       951	state.c	FUNCTION_25	SWITCH_3
0x26b6	            0x7f17	                            jg 0x400270f	       951	state.c	FUNCTION_25	SWITCH_3
0x26b8	          0x83f866	                           cmp eax, 0x66	       951	state.c	FUNCTION_25	SWITCH_3
0x26bb	     0xf846b110000	                            je 0x400386c	       951	state.c	FUNCTION_25	SWITCH_3
0x26c1	          0x83f867	                           cmp eax, 0x67	       951	state.c	FUNCTION_25	SWITCH_3
0x26c4	     0xf8447120000	                            je 0x4003951	       951	state.c	FUNCTION_25	SWITCH_3
0x26ca	      0xe9121c0000	                           jmp 0x4004321	       951	state.c	FUNCTION_25	SWITCH_3
0x26cf	          0x83f86a	                           cmp eax, 0x6a	       951	state.c	FUNCTION_25	SWITCH_3
0x26d2	     0xf8445130000	                            je 0x4003a5d	       951	state.c	FUNCTION_25	SWITCH_3
0x26d8	          0x83f86b	                           cmp eax, 0x6b	       951	state.c	FUNCTION_25	SWITCH_3
0x26db	     0xf849a130000	                            je 0x4003abb	       951	state.c	FUNCTION_25	SWITCH_3
0x26e1	      0xe9fb1b0000	                           jmp 0x4004321	       951	state.c	FUNCTION_25	SWITCH_3
0x26e6	          0x83f872	                           cmp eax, 0x72	       951	state.c	FUNCTION_25	SWITCH_3
0x26e9	     0xf8457170000	                            je 0x4003e86	       951	state.c	FUNCTION_25	SWITCH_3
0x26ef	          0x83f872	                           cmp eax, 0x72	       951	state.c	FUNCTION_25	SWITCH_3
0x26f2	            0x7f17	                            jg 0x400274b	       951	state.c	FUNCTION_25	SWITCH_3
0x26f4	          0x83f86d	                           cmp eax, 0x6d	       951	state.c	FUNCTION_25	SWITCH_3
0x26f7	     0xf8458140000	                            je 0x4003b95	       951	state.c	FUNCTION_25	SWITCH_3
0x26fd	          0x83f86e	                           cmp eax, 0x6e	       951	state.c	FUNCTION_25	SWITCH_3
0x2700	     0xf846a140000	                            je 0x4003bb0	       951	state.c	FUNCTION_25	SWITCH_3
0x2706	      0xe9d61b0000	                           jmp 0x4004321	       951	state.c	FUNCTION_25	SWITCH_3
0x270b	          0x83f873	                           cmp eax, 0x73	       951	state.c	FUNCTION_25	SWITCH_3
0x270e	     0xf847f180000	                            je 0x4003fd3	       951	state.c	FUNCTION_25	SWITCH_3
0x2714	          0x83f874	                           cmp eax, 0x74	       951	state.c	FUNCTION_25	SWITCH_3
0x2717	     0xf84be190000	                            je 0x400411b	       951	state.c	FUNCTION_25	SWITCH_3
0x271d	      0xe9bf1b0000	                           jmp 0x4004321	       951	state.c	FUNCTION_25	SWITCH_3
0x2722	      0x3d6e3f0000	                         cmp eax, 0x3f6e	       951	state.c	FUNCTION_25	SWITCH_3
0x2727	     0xf8443140000	                            je 0x4003bb0	       951	state.c	FUNCTION_25	SWITCH_3
0x272d	      0x3d6e3f0000	                         cmp eax, 0x3f6e	       951	state.c	FUNCTION_25	SWITCH_3
0x2732	            0x7f48	                            jg 0x40027bc	       951	state.c	FUNCTION_25	SWITCH_3
0x2734	      0x3d4b3f0000	                         cmp eax, 0x3f4b	       951	state.c	FUNCTION_25	SWITCH_3
0x2739	     0xf84b7070000	                            je 0x4002f36	       951	state.c	FUNCTION_25	SWITCH_3
0x273f	      0x3d4b3f0000	                         cmp eax, 0x3f4b	       951	state.c	FUNCTION_25	SWITCH_3
0x2744	            0x7f1b	                            jg 0x40027a1	       951	state.c	FUNCTION_25	SWITCH_3
0x2746	      0x3d633e0000	                         cmp eax, 0x3e63	       951	state.c	FUNCTION_25	SWITCH_3
0x274b	     0xf84d90f0000	                            je 0x400376a	       951	state.c	FUNCTION_25	SWITCH_3
0x2751	      0x3d4a3f0000	                         cmp eax, 0x3f4a	       951	state.c	FUNCTION_25	SWITCH_3
0x2756	     0xf844e050000	                            je 0x4002cea	       951	state.c	FUNCTION_25	SWITCH_3
0x275c	      0xe9801b0000	                           jmp 0x4004321	       951	state.c	FUNCTION_25	SWITCH_3
0x2761	      0x3d683f0000	                         cmp eax, 0x3f68	       951	state.c	FUNCTION_25	SWITCH_3
0x2766	     0xf8473120000	                            je 0x4003a1f	       951	state.c	FUNCTION_25	SWITCH_3
0x276c	      0x3d6c3f0000	                         cmp eax, 0x3f6c	       951	state.c	FUNCTION_25	SWITCH_3
0x2771	     0xf84a0130000	                            je 0x4003b57	       951	state.c	FUNCTION_25	SWITCH_3
0x2777	      0xe9651b0000	                           jmp 0x4004321	       951	state.c	FUNCTION_25	SWITCH_3
0x277c	      0x3d703f2400	                       cmp eax, 0x243f70	       951	state.c	FUNCTION_25	SWITCH_3
0x2781	     0xf84cc140000	                            je 0x4003c93	       951	state.c	FUNCTION_25	SWITCH_3
0x2787	      0x3d703f2400	                       cmp eax, 0x243f70	       951	state.c	FUNCTION_25	SWITCH_3
0x278c	            0x7f1b	                            jg 0x40027e9	       951	state.c	FUNCTION_25	SWITCH_3
0x278e	      0x3d71002000	                       cmp eax, 0x200071	       951	state.c	FUNCTION_25	SWITCH_3
0x2793	     0xf84db140000	                            je 0x4003cb4	       951	state.c	FUNCTION_25	SWITCH_3
0x2799	      0x3d71002200	                       cmp eax, 0x220071	       951	state.c	FUNCTION_25	SWITCH_3
0x279e	     0xf8432160000	                            je 0x4003e16	       951	state.c	FUNCTION_25	SWITCH_3
0x27a4	      0xe9381b0000	                           jmp 0x4004321	       951	state.c	FUNCTION_25	SWITCH_3
0x27a9	      0x3d7d002700	                       cmp eax, 0x27007d	       951	state.c	FUNCTION_25	SWITCH_3
0x27ae	     0xf847f190000	                            je 0x4004173	       951	state.c	FUNCTION_25	SWITCH_3
0x27b4	      0x3d7e002700	                       cmp eax, 0x27007e	       951	state.c	FUNCTION_25	SWITCH_3
0x27b9	     0xf844d1a0000	                            je 0x400424c	       951	state.c	FUNCTION_25	SWITCH_3
0x27bf	      0xe91d1b0000	                           jmp 0x4004321	       951	state.c	FUNCTION_25	SWITCH_3
0x27c4	        0x488b4590	             mov rax, qword [rbp - 0x70]	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x27c8	          0x488b00	                    mov rax, qword [rax]	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x27cb	      0x25ffffff7f	                     and eax, 0x7fffffff	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x27d0	    0x483dffffff3f	                     cmp rax, 0x3fffffff	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x27d6	            0x741f	                            je 0x4002837	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x27d8	        0x488b4590	             mov rax, qword [rbp - 0x70]	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x27dc	          0x488b00	                    mov rax, qword [rax]	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x27df	      0x25ffffff7f	                     and eax, 0x7fffffff	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x27e4	          0x4885c0	                           test rax, rax	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x27e7	            0x740e	                            je 0x4002837	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x27e9	        0x488b4590	             mov rax, qword [rbp - 0x70]	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x27ed	          0x488b00	                    mov rax, qword [rax]	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x27f0	      0x25ffffff7f	                     and eax, 0x7fffffff	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x27f5	            0xeb05	                           jmp 0x400283c	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x27f7	      0xb801000000	                              mov eax, 1	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x27fc	          0x8945bc	             mov dword [rbp - 0x44], eax	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x27ff	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       955	state.c	FUNCTION_25	SWITCH_3	IF_5	CALL_2
0x2803	          0x4889c7	                            mov rdi, rax	       955	state.c	FUNCTION_25	SWITCH_3	IF_5	CALL_2
0x2806	      0xe8c2dfffff	      call sym.is_cursor_in_scrollregion	       955	state.c	FUNCTION_25	SWITCH_3	IF_5	CALL_2
0x280b	            0x85c0	                           test eax, eax	       955	state.c	FUNCTION_25	SWITCH_3	IF_5	CALL_2
0x280d	     0xf842e1b0000	                            je 0x4004381	       955	state.c	FUNCTION_25	SWITCH_3	IF_5	CALL_2
0x2813	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       958	state.c	FUNCTION_25	SWITCH_3
0x2817	          0x8b4030	            mov eax, dword [rax + 0x30] 	       958	state.c	FUNCTION_25	SWITCH_3
0x281a	          0x8945e0	             mov dword [rbp - 0x20], eax	       958	state.c	FUNCTION_25	SWITCH_3
0x281d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       959	state.c	FUNCTION_25	SWITCH_3
0x2821	          0x8b4030	            mov eax, dword [rax + 0x30] 	       959	state.c	FUNCTION_25	SWITCH_3
0x2824	          0x83c001	                              add eax, 1	       959	state.c	FUNCTION_25	SWITCH_3
0x2827	          0x8945e4	             mov dword [rbp - 0x1c], eax	       959	state.c	FUNCTION_25	SWITCH_3
0x282a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       960	state.c	FUNCTION_25	SWITCH_3
0x282e	          0x8b4034	            mov eax, dword [rax + 0x34] 	       960	state.c	FUNCTION_25	SWITCH_3
0x2831	          0x8945e8	             mov dword [rbp - 0x18], eax	       960	state.c	FUNCTION_25	SWITCH_3
0x2834	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       961	state.c	FUNCTION_25	SWITCH_3	IF_6
0x2838	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	       961	state.c	FUNCTION_25	SWITCH_3	IF_6
0x283f	          0x83e010	                           and eax, 0x10	       961	state.c	FUNCTION_25	SWITCH_3	IF_6
0x2842	            0x84c0	                             test al, al	       961	state.c	FUNCTION_25	SWITCH_3	IF_6
0x2844	            0x7432	                            je 0x40028b8	       961	state.c	FUNCTION_25	SWITCH_3	IF_6
0x2846	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       962	state.c	FUNCTION_25	SWITCH_3	CALL_3
0x284a	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	       962	state.c	FUNCTION_25	SWITCH_3	CALL_3
0x2851	          0x83e010	                           and eax, 0x10	       962	state.c	FUNCTION_25	SWITCH_3	CALL_3
0x2854	            0x84c0	                             test al, al	       962	state.c	FUNCTION_25	SWITCH_3	CALL_3
0x2856	            0x7414	                            je 0x40028ac	       962	state.c	FUNCTION_25	SWITCH_3	CALL_3
0x2858	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       962	state.c	FUNCTION_25	SWITCH_3	CALL_3
0x285c	          0x8b4048	            mov eax, dword [rax + 0x48] 	       962	state.c	FUNCTION_25	SWITCH_3	CALL_3
0x285f	            0x85c0	                           test eax, eax	       962	state.c	FUNCTION_25	SWITCH_3	CALL_3
0x2861	            0x7809	                            js 0x40028ac	       962	state.c	FUNCTION_25	SWITCH_3	CALL_3
0x2863	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       962	state.c	FUNCTION_25	SWITCH_3	CALL_3
0x2867	          0x8b4048	            mov eax, dword [rax + 0x48] 	       962	state.c	FUNCTION_25	SWITCH_3	CALL_3
0x286a	            0xeb07	                           jmp 0x40028b3	       962	state.c	FUNCTION_25	SWITCH_3	CALL_3
0x286c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       962	state.c	FUNCTION_25	SWITCH_3	CALL_3
0x2870	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       962	state.c	FUNCTION_25	SWITCH_3	CALL_3
0x2873	          0x8945ec	             mov dword [rbp - 0x14], eax	       962	state.c	FUNCTION_25	SWITCH_3	CALL_3
0x2876	            0xeb3e	                           jmp 0x40028f6	       962	state.c	FUNCTION_25	SWITCH_3	CALL_3
0x2878	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x287c	        0x488b5058	            mov rdx, qword [rax + 0x58] 	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x2880	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x2884	          0x8b4030	            mov eax, dword [rax + 0x30] 	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x2887	            0x4898	                                    cdqe	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x2889	        0x48c1e002	                              shl rax, 2	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x288d	          0x4801d0	                            add rax, rdx	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x2890	           0xfb600	                   movzx eax, byte [rax]	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x2893	          0x83e001	                              and eax, 1	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x2896	            0x84c0	                             test al, al	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x2898	            0x7412	                            je 0x40028ec	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x289a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x289e	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x28a1	            0x89c2	                            mov edx, eax	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x28a3	          0xc1ea1f	                           shr edx, 0x1f	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x28a6	             0x1d0	                            add eax, edx	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x28a8	            0xd1f8	                              sar eax, 1	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x28aa	            0xeb07	                           jmp 0x40028f3	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x28ac	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x28b0	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x28b3	          0x8945ec	             mov dword [rbp - 0x14], eax	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x28b6	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       966	state.c	FUNCTION_25	SWITCH_3	CALL_5
0x28b9	            0xf7d8	                                 neg eax	       966	state.c	FUNCTION_25	SWITCH_3	CALL_5
0x28bb	            0x89c1	                            mov ecx, eax	       966	state.c	FUNCTION_25	SWITCH_3	CALL_5
0x28bd	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       966	state.c	FUNCTION_25	SWITCH_3	CALL_5
0x28c1	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       966	state.c	FUNCTION_25	SWITCH_3	CALL_5
0x28c5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       966	state.c	FUNCTION_25	SWITCH_3	CALL_5
0x28c9	          0x4189c8	                            mov r8d, ecx	       966	state.c	FUNCTION_25	SWITCH_3	CALL_5
0x28cc	      0xb900000000	                              mov ecx, 0	       966	state.c	FUNCTION_25	SWITCH_3	CALL_5
0x28d1	          0x4889c7	                            mov rdi, rax	       966	state.c	FUNCTION_25	SWITCH_3	CALL_5
0x28d4	      0xe85adaffff	                         call sym.scroll	       966	state.c	FUNCTION_25	SWITCH_3	CALL_5
0x28d9	      0xe9941a0000	                           jmp 0x40043b2	       968	state.c	FUNCTION_25	SWITCH_3
0x28de	        0x488b4590	             mov rax, qword [rbp - 0x70]	       971	state.c	FUNCTION_25	SWITCH_3	CALL_6
0x28e2	          0x488b00	                    mov rax, qword [rax]	       971	state.c	FUNCTION_25	SWITCH_3	CALL_6
0x28e5	      0x25ffffff7f	                     and eax, 0x7fffffff	       971	state.c	FUNCTION_25	SWITCH_3	CALL_6
0x28ea	    0x483dffffff3f	                     cmp rax, 0x3fffffff	       971	state.c	FUNCTION_25	SWITCH_3	CALL_6
0x28f0	            0x741f	                            je 0x4002951	       971	state.c	FUNCTION_25	SWITCH_3	CALL_6
0x28f2	        0x488b4590	             mov rax, qword [rbp - 0x70]	       971	state.c	FUNCTION_25	SWITCH_3	CALL_6
0x28f6	          0x488b00	                    mov rax, qword [rax]	       971	state.c	FUNCTION_25	SWITCH_3	CALL_6
0x28f9	      0x25ffffff7f	                     and eax, 0x7fffffff	       971	state.c	FUNCTION_25	SWITCH_3	CALL_6
0x28fe	          0x4885c0	                           test rax, rax	       971	state.c	FUNCTION_25	SWITCH_3	CALL_6
0x2901	            0x740e	                            je 0x4002951	       971	state.c	FUNCTION_25	SWITCH_3	CALL_6
0x2903	        0x488b4590	             mov rax, qword [rbp - 0x70]	       971	state.c	FUNCTION_25	SWITCH_3	CALL_6
0x2907	          0x488b00	                    mov rax, qword [rax]	       971	state.c	FUNCTION_25	SWITCH_3	CALL_6
0x290a	      0x25ffffff7f	                     and eax, 0x7fffffff	       971	state.c	FUNCTION_25	SWITCH_3	CALL_6
0x290f	            0xeb05	                           jmp 0x4002956	       971	state.c	FUNCTION_25	SWITCH_3	CALL_6
0x2911	      0xb801000000	                              mov eax, 1	       971	state.c	FUNCTION_25	SWITCH_3	CALL_6
0x2916	          0x8945bc	             mov dword [rbp - 0x44], eax	       971	state.c	FUNCTION_25	SWITCH_3	CALL_6
0x2919	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       972	state.c	FUNCTION_25	SWITCH_3
0x291d	          0x8b4030	            mov eax, dword [rax + 0x30] 	       972	state.c	FUNCTION_25	SWITCH_3
0x2920	          0x2b45bc	             sub eax, dword [rbp - 0x44]	       972	state.c	FUNCTION_25	SWITCH_3
0x2923	            0x89c2	                            mov edx, eax	       972	state.c	FUNCTION_25	SWITCH_3
0x2925	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       972	state.c	FUNCTION_25	SWITCH_3
0x2929	          0x895030	             mov dword [rax + 0x30], edx	       972	state.c	FUNCTION_25	SWITCH_3
0x292c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       973	state.c	FUNCTION_25	SWITCH_3
0x2930	    0xc74038000000	               mov dword [rax + 0x38], 0	       973	state.c	FUNCTION_25	SWITCH_3
0x2937	      0xe9361a0000	                           jmp 0x40043b2	       974	state.c	FUNCTION_25	SWITCH_3
0x293c	        0x488b4590	             mov rax, qword [rbp - 0x70]	       977	state.c	FUNCTION_25	SWITCH_3	CALL_7
0x2940	          0x488b00	                    mov rax, qword [rax]	       977	state.c	FUNCTION_25	SWITCH_3	CALL_7
0x2943	      0x25ffffff7f	                     and eax, 0x7fffffff	       977	state.c	FUNCTION_25	SWITCH_3	CALL_7
0x2948	    0x483dffffff3f	                     cmp rax, 0x3fffffff	       977	state.c	FUNCTION_25	SWITCH_3	CALL_7
0x294e	            0x741f	                            je 0x40029af	       977	state.c	FUNCTION_25	SWITCH_3	CALL_7
0x2950	        0x488b4590	             mov rax, qword [rbp - 0x70]	       977	state.c	FUNCTION_25	SWITCH_3	CALL_7
0x2954	          0x488b00	                    mov rax, qword [rax]	       977	state.c	FUNCTION_25	SWITCH_3	CALL_7
0x2957	      0x25ffffff7f	                     and eax, 0x7fffffff	       977	state.c	FUNCTION_25	SWITCH_3	CALL_7
0x295c	          0x4885c0	                           test rax, rax	       977	state.c	FUNCTION_25	SWITCH_3	CALL_7
0x295f	            0x740e	                            je 0x40029af	       977	state.c	FUNCTION_25	SWITCH_3	CALL_7
0x2961	        0x488b4590	             mov rax, qword [rbp - 0x70]	       977	state.c	FUNCTION_25	SWITCH_3	CALL_7
0x2965	          0x488b00	                    mov rax, qword [rax]	       977	state.c	FUNCTION_25	SWITCH_3	CALL_7
0x2968	      0x25ffffff7f	                     and eax, 0x7fffffff	       977	state.c	FUNCTION_25	SWITCH_3	CALL_7
0x296d	            0xeb05	                           jmp 0x40029b4	       977	state.c	FUNCTION_25	SWITCH_3	CALL_7
0x296f	      0xb801000000	                              mov eax, 1	       977	state.c	FUNCTION_25	SWITCH_3	CALL_7
0x2974	          0x8945bc	             mov dword [rbp - 0x44], eax	       977	state.c	FUNCTION_25	SWITCH_3	CALL_7
0x2977	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       978	state.c	FUNCTION_25	SWITCH_3
0x297b	          0x8b5030	            mov edx, dword [rax + 0x30] 	       978	state.c	FUNCTION_25	SWITCH_3
0x297e	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       978	state.c	FUNCTION_25	SWITCH_3
0x2981	             0x1c2	                            add edx, eax	       978	state.c	FUNCTION_25	SWITCH_3
0x2983	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       978	state.c	FUNCTION_25	SWITCH_3
0x2987	          0x895030	             mov dword [rax + 0x30], edx	       978	state.c	FUNCTION_25	SWITCH_3
0x298a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       979	state.c	FUNCTION_25	SWITCH_3
0x298e	    0xc74038000000	               mov dword [rax + 0x38], 0	       979	state.c	FUNCTION_25	SWITCH_3
0x2995	      0xe9d8190000	                           jmp 0x40043b2	       980	state.c	FUNCTION_25	SWITCH_3
0x299a	        0x488b4590	             mov rax, qword [rbp - 0x70]	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x299e	          0x488b00	                    mov rax, qword [rax]	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x29a1	      0x25ffffff7f	                     and eax, 0x7fffffff	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x29a6	    0x483dffffff3f	                     cmp rax, 0x3fffffff	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x29ac	            0x741f	                            je 0x4002a0d	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x29ae	        0x488b4590	             mov rax, qword [rbp - 0x70]	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x29b2	          0x488b00	                    mov rax, qword [rax]	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x29b5	      0x25ffffff7f	                     and eax, 0x7fffffff	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x29ba	          0x4885c0	                           test rax, rax	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x29bd	            0x740e	                            je 0x4002a0d	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x29bf	        0x488b4590	             mov rax, qword [rbp - 0x70]	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x29c3	          0x488b00	                    mov rax, qword [rax]	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x29c6	      0x25ffffff7f	                     and eax, 0x7fffffff	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x29cb	            0xeb05	                           jmp 0x4002a12	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x29cd	      0xb801000000	                              mov eax, 1	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x29d2	          0x8945bc	             mov dword [rbp - 0x44], eax	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x29d5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       984	state.c	FUNCTION_25	SWITCH_3
0x29d9	          0x8b5034	            mov edx, dword [rax + 0x34] 	       984	state.c	FUNCTION_25	SWITCH_3
0x29dc	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       984	state.c	FUNCTION_25	SWITCH_3
0x29df	             0x1c2	                            add edx, eax	       984	state.c	FUNCTION_25	SWITCH_3
0x29e1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       984	state.c	FUNCTION_25	SWITCH_3
0x29e5	          0x895034	             mov dword [rax + 0x34], edx	       984	state.c	FUNCTION_25	SWITCH_3
0x29e8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       985	state.c	FUNCTION_25	SWITCH_3
0x29ec	    0xc74038000000	               mov dword [rax + 0x38], 0	       985	state.c	FUNCTION_25	SWITCH_3
0x29f3	      0xe97a190000	                           jmp 0x40043b2	       986	state.c	FUNCTION_25	SWITCH_3
0x29f8	        0x488b4590	             mov rax, qword [rbp - 0x70]	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x29fc	          0x488b00	                    mov rax, qword [rax]	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x29ff	      0x25ffffff7f	                     and eax, 0x7fffffff	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x2a04	    0x483dffffff3f	                     cmp rax, 0x3fffffff	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x2a0a	            0x741f	                            je 0x4002a6b	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x2a0c	        0x488b4590	             mov rax, qword [rbp - 0x70]	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x2a10	          0x488b00	                    mov rax, qword [rax]	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x2a13	      0x25ffffff7f	                     and eax, 0x7fffffff	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x2a18	          0x4885c0	                           test rax, rax	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x2a1b	            0x740e	                            je 0x4002a6b	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x2a1d	        0x488b4590	             mov rax, qword [rbp - 0x70]	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x2a21	          0x488b00	                    mov rax, qword [rax]	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x2a24	      0x25ffffff7f	                     and eax, 0x7fffffff	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x2a29	            0xeb05	                           jmp 0x4002a70	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x2a2b	      0xb801000000	                              mov eax, 1	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x2a30	          0x8945bc	             mov dword [rbp - 0x44], eax	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x2a33	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       990	state.c	FUNCTION_25	SWITCH_3
0x2a37	          0x8b4034	            mov eax, dword [rax + 0x34] 	       990	state.c	FUNCTION_25	SWITCH_3
0x2a3a	          0x2b45bc	             sub eax, dword [rbp - 0x44]	       990	state.c	FUNCTION_25	SWITCH_3
0x2a3d	            0x89c2	                            mov edx, eax	       990	state.c	FUNCTION_25	SWITCH_3
0x2a3f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       990	state.c	FUNCTION_25	SWITCH_3
0x2a43	          0x895034	             mov dword [rax + 0x34], edx	       990	state.c	FUNCTION_25	SWITCH_3
0x2a46	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       991	state.c	FUNCTION_25	SWITCH_3
0x2a4a	    0xc74038000000	               mov dword [rax + 0x38], 0	       991	state.c	FUNCTION_25	SWITCH_3
0x2a51	      0xe91c190000	                           jmp 0x40043b2	       992	state.c	FUNCTION_25	SWITCH_3
0x2a56	        0x488b4590	             mov rax, qword [rbp - 0x70]	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x2a5a	          0x488b00	                    mov rax, qword [rax]	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x2a5d	      0x25ffffff7f	                     and eax, 0x7fffffff	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x2a62	    0x483dffffff3f	                     cmp rax, 0x3fffffff	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x2a68	            0x741f	                            je 0x4002ac9	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x2a6a	        0x488b4590	             mov rax, qword [rbp - 0x70]	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x2a6e	          0x488b00	                    mov rax, qword [rax]	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x2a71	      0x25ffffff7f	                     and eax, 0x7fffffff	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x2a76	          0x4885c0	                           test rax, rax	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x2a79	            0x740e	                            je 0x4002ac9	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x2a7b	        0x488b4590	             mov rax, qword [rbp - 0x70]	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x2a7f	          0x488b00	                    mov rax, qword [rax]	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x2a82	      0x25ffffff7f	                     and eax, 0x7fffffff	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x2a87	            0xeb05	                           jmp 0x4002ace	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x2a89	      0xb801000000	                              mov eax, 1	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x2a8e	          0x8945bc	             mov dword [rbp - 0x44], eax	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x2a91	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       996	state.c	FUNCTION_25	SWITCH_3
0x2a95	    0xc74034000000	               mov dword [rax + 0x34], 0	       996	state.c	FUNCTION_25	SWITCH_3
0x2a9c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       997	state.c	FUNCTION_25	SWITCH_3
0x2aa0	          0x8b5030	            mov edx, dword [rax + 0x30] 	       997	state.c	FUNCTION_25	SWITCH_3
0x2aa3	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       997	state.c	FUNCTION_25	SWITCH_3
0x2aa6	             0x1c2	                            add edx, eax	       997	state.c	FUNCTION_25	SWITCH_3
0x2aa8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       997	state.c	FUNCTION_25	SWITCH_3
0x2aac	          0x895030	             mov dword [rax + 0x30], edx	       997	state.c	FUNCTION_25	SWITCH_3
0x2aaf	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       998	state.c	FUNCTION_25	SWITCH_3
0x2ab3	    0xc74038000000	               mov dword [rax + 0x38], 0	       998	state.c	FUNCTION_25	SWITCH_3
0x2aba	      0xe9b3180000	                           jmp 0x40043b2	       999	state.c	FUNCTION_25	SWITCH_3
0x2abf	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x2ac3	          0x488b00	                    mov rax, qword [rax]	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x2ac6	      0x25ffffff7f	                     and eax, 0x7fffffff	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x2acb	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x2ad1	            0x741f	                            je 0x4002b32	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x2ad3	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x2ad7	          0x488b00	                    mov rax, qword [rax]	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x2ada	      0x25ffffff7f	                     and eax, 0x7fffffff	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x2adf	          0x4885c0	                           test rax, rax	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x2ae2	            0x740e	                            je 0x4002b32	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x2ae4	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x2ae8	          0x488b00	                    mov rax, qword [rax]	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x2aeb	      0x25ffffff7f	                     and eax, 0x7fffffff	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x2af0	            0xeb05	                           jmp 0x4002b37	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x2af2	      0xb801000000	                              mov eax, 1	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x2af7	          0x8945bc	             mov dword [rbp - 0x44], eax	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x2afa	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1003	state.c	FUNCTION_25	SWITCH_3
0x2afe	    0xc74034000000	               mov dword [rax + 0x34], 0	      1003	state.c	FUNCTION_25	SWITCH_3
0x2b05	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1004	state.c	FUNCTION_25	SWITCH_3
0x2b09	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1004	state.c	FUNCTION_25	SWITCH_3
0x2b0c	          0x2b45bc	             sub eax, dword [rbp - 0x44]	      1004	state.c	FUNCTION_25	SWITCH_3
0x2b0f	            0x89c2	                            mov edx, eax	      1004	state.c	FUNCTION_25	SWITCH_3
0x2b11	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1004	state.c	FUNCTION_25	SWITCH_3
0x2b15	          0x895030	             mov dword [rax + 0x30], edx	      1004	state.c	FUNCTION_25	SWITCH_3
0x2b18	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1005	state.c	FUNCTION_25	SWITCH_3
0x2b1c	    0xc74038000000	               mov dword [rax + 0x38], 0	      1005	state.c	FUNCTION_25	SWITCH_3
0x2b23	      0xe94a180000	                           jmp 0x40043b2	      1006	state.c	FUNCTION_25	SWITCH_3
0x2b28	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1009	state.c	FUNCTION_25	SWITCH_3	CALL_12
0x2b2c	          0x488b00	                    mov rax, qword [rax]	      1009	state.c	FUNCTION_25	SWITCH_3	CALL_12
0x2b2f	      0x25ffffff7f	                     and eax, 0x7fffffff	      1009	state.c	FUNCTION_25	SWITCH_3	CALL_12
0x2b34	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1009	state.c	FUNCTION_25	SWITCH_3	CALL_12
0x2b3a	            0x740e	                            je 0x4002b8a	      1009	state.c	FUNCTION_25	SWITCH_3	CALL_12
0x2b3c	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1009	state.c	FUNCTION_25	SWITCH_3	CALL_12
0x2b40	          0x488b00	                    mov rax, qword [rax]	      1009	state.c	FUNCTION_25	SWITCH_3	CALL_12
0x2b43	      0x25ffffff7f	                     and eax, 0x7fffffff	      1009	state.c	FUNCTION_25	SWITCH_3	CALL_12
0x2b48	            0xeb05	                           jmp 0x4002b8f	      1009	state.c	FUNCTION_25	SWITCH_3	CALL_12
0x2b4a	      0xb801000000	                              mov eax, 1	      1009	state.c	FUNCTION_25	SWITCH_3	CALL_12
0x2b4f	          0x8945b8	             mov dword [rbp - 0x48], eax	      1009	state.c	FUNCTION_25	SWITCH_3	CALL_12
0x2b52	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1010	state.c	FUNCTION_25	SWITCH_3
0x2b55	          0x8d50ff	                      lea edx, [rax - 1]	      1010	state.c	FUNCTION_25	SWITCH_3
0x2b58	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1010	state.c	FUNCTION_25	SWITCH_3
0x2b5c	          0x895034	             mov dword [rax + 0x34], edx	      1010	state.c	FUNCTION_25	SWITCH_3
0x2b5f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1011	state.c	FUNCTION_25	SWITCH_3
0x2b63	    0xc74038000000	               mov dword [rax + 0x38], 0	      1011	state.c	FUNCTION_25	SWITCH_3
0x2b6a	      0xe903180000	                           jmp 0x40043b2	      1012	state.c	FUNCTION_25	SWITCH_3
0x2b6f	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1015	state.c	FUNCTION_25	SWITCH_3	CALL_13
0x2b73	          0x488b00	                    mov rax, qword [rax]	      1015	state.c	FUNCTION_25	SWITCH_3	CALL_13
0x2b76	      0x25ffffff7f	                     and eax, 0x7fffffff	      1015	state.c	FUNCTION_25	SWITCH_3	CALL_13
0x2b7b	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1015	state.c	FUNCTION_25	SWITCH_3	CALL_13
0x2b81	            0x740e	                            je 0x4002bd1	      1015	state.c	FUNCTION_25	SWITCH_3	CALL_13
0x2b83	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1015	state.c	FUNCTION_25	SWITCH_3	CALL_13
0x2b87	          0x488b00	                    mov rax, qword [rax]	      1015	state.c	FUNCTION_25	SWITCH_3	CALL_13
0x2b8a	      0x25ffffff7f	                     and eax, 0x7fffffff	      1015	state.c	FUNCTION_25	SWITCH_3	CALL_13
0x2b8f	            0xeb05	                           jmp 0x4002bd6	      1015	state.c	FUNCTION_25	SWITCH_3	CALL_13
0x2b91	      0xb801000000	                              mov eax, 1	      1015	state.c	FUNCTION_25	SWITCH_3	CALL_13
0x2b96	          0x8945ac	             mov dword [rbp - 0x54], eax	      1015	state.c	FUNCTION_25	SWITCH_3	CALL_13
0x2b99	        0x837d8c01	               cmp dword [rbp - 0x74], 1	      1016	state.c	FUNCTION_25	SWITCH_3	CALL_15
0x2b9d	            0x7e2a	                           jle 0x4002c09	      1016	state.c	FUNCTION_25	SWITCH_3	CALL_15
0x2b9f	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1016	state.c	FUNCTION_25	SWITCH_3	CALL_15
0x2ba3	        0x4883c008	                              add rax, 8	      1016	state.c	FUNCTION_25	SWITCH_3	CALL_15
0x2ba7	          0x488b00	                    mov rax, qword [rax]	      1016	state.c	FUNCTION_25	SWITCH_3	CALL_15
0x2baa	      0x25ffffff7f	                     and eax, 0x7fffffff	      1016	state.c	FUNCTION_25	SWITCH_3	CALL_15
0x2baf	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1016	state.c	FUNCTION_25	SWITCH_3	CALL_15
0x2bb5	            0x7412	                            je 0x4002c09	      1016	state.c	FUNCTION_25	SWITCH_3	CALL_15
0x2bb7	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1016	state.c	FUNCTION_25	SWITCH_3	CALL_15
0x2bbb	        0x4883c008	                              add rax, 8	      1016	state.c	FUNCTION_25	SWITCH_3	CALL_15
0x2bbf	          0x488b00	                    mov rax, qword [rax]	      1016	state.c	FUNCTION_25	SWITCH_3	CALL_15
0x2bc2	      0x25ffffff7f	                     and eax, 0x7fffffff	      1016	state.c	FUNCTION_25	SWITCH_3	CALL_15
0x2bc7	            0xeb05	                           jmp 0x4002c0e	      1016	state.c	FUNCTION_25	SWITCH_3	CALL_15
0x2bc9	      0xb801000000	                              mov eax, 1	      1016	state.c	FUNCTION_25	SWITCH_3	CALL_15
0x2bce	          0x8945b0	             mov dword [rbp - 0x50], eax	      1016	state.c	FUNCTION_25	SWITCH_3	CALL_15
0x2bd1	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1018	state.c	FUNCTION_25	SWITCH_3
0x2bd4	          0x8d50ff	                      lea edx, [rax - 1]	      1018	state.c	FUNCTION_25	SWITCH_3
0x2bd7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1018	state.c	FUNCTION_25	SWITCH_3
0x2bdb	          0x895030	             mov dword [rax + 0x30], edx	      1018	state.c	FUNCTION_25	SWITCH_3
0x2bde	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1019	state.c	FUNCTION_25	SWITCH_3
0x2be1	          0x8d50ff	                      lea edx, [rax - 1]	      1019	state.c	FUNCTION_25	SWITCH_3
0x2be4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1019	state.c	FUNCTION_25	SWITCH_3
0x2be8	          0x895034	             mov dword [rax + 0x34], edx	      1019	state.c	FUNCTION_25	SWITCH_3
0x2beb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1020	state.c	FUNCTION_25	SWITCH_3	IF_7
0x2bef	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1020	state.c	FUNCTION_25	SWITCH_3	IF_7
0x2bf6	          0x83e004	                              and eax, 4	      1020	state.c	FUNCTION_25	SWITCH_3	IF_7
0x2bf9	            0x84c0	                             test al, al	      1020	state.c	FUNCTION_25	SWITCH_3	IF_7
0x2bfb	            0x7447	                            je 0x4002c84	      1020	state.c	FUNCTION_25	SWITCH_3	IF_7
0x2bfd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1021	state.c	FUNCTION_25	SWITCH_3	IF_7
0x2c01	          0x8b5030	            mov edx, dword [rax + 0x30] 	      1021	state.c	FUNCTION_25	SWITCH_3	IF_7
0x2c04	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1021	state.c	FUNCTION_25	SWITCH_3	IF_7
0x2c08	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      1021	state.c	FUNCTION_25	SWITCH_3	IF_7
0x2c0b	             0x1c2	                            add edx, eax	      1021	state.c	FUNCTION_25	SWITCH_3	IF_7
0x2c0d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1021	state.c	FUNCTION_25	SWITCH_3	IF_7
0x2c11	          0x895030	             mov dword [rax + 0x30], edx	      1021	state.c	FUNCTION_25	SWITCH_3	IF_7
0x2c14	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1022	state.c	FUNCTION_25	SWITCH_3	IF_7	CALL_16
0x2c18	          0x8b5034	            mov edx, dword [rax + 0x34] 	      1022	state.c	FUNCTION_25	SWITCH_3	IF_7	CALL_16
0x2c1b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1022	state.c	FUNCTION_25	SWITCH_3	IF_7	CALL_16
0x2c1f	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1022	state.c	FUNCTION_25	SWITCH_3	IF_7	CALL_16
0x2c26	          0x83e010	                           and eax, 0x10	      1022	state.c	FUNCTION_25	SWITCH_3	IF_7	CALL_16
0x2c29	            0x84c0	                             test al, al	      1022	state.c	FUNCTION_25	SWITCH_3	IF_7	CALL_16
0x2c2b	            0x7409	                            je 0x4002c76	      1022	state.c	FUNCTION_25	SWITCH_3	IF_7	CALL_16
0x2c2d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1022	state.c	FUNCTION_25	SWITCH_3	IF_7	CALL_16
0x2c31	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1022	state.c	FUNCTION_25	SWITCH_3	IF_7	CALL_16
0x2c34	            0xeb05	                           jmp 0x4002c7b	      1022	state.c	FUNCTION_25	SWITCH_3	IF_7	CALL_16
0x2c36	      0xb800000000	                              mov eax, 0	      1022	state.c	FUNCTION_25	SWITCH_3	IF_7	CALL_16
0x2c3b	             0x1c2	                            add edx, eax	      1022	state.c	FUNCTION_25	SWITCH_3	IF_7	CALL_16
0x2c3d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1022	state.c	FUNCTION_25	SWITCH_3	IF_7	CALL_16
0x2c41	          0x895034	             mov dword [rax + 0x34], edx	      1022	state.c	FUNCTION_25	SWITCH_3	IF_7	CALL_16
0x2c44	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1024	state.c	FUNCTION_25	SWITCH_3
0x2c48	    0xc74038000000	               mov dword [rax + 0x38], 0	      1024	state.c	FUNCTION_25	SWITCH_3
0x2c4f	      0xe91e170000	                           jmp 0x40043b2	      1025	state.c	FUNCTION_25	SWITCH_3
0x2c54	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x2c58	          0x488b00	                    mov rax, qword [rax]	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x2c5b	      0x25ffffff7f	                     and eax, 0x7fffffff	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x2c60	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x2c66	            0x741f	                            je 0x4002cc7	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x2c68	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x2c6c	          0x488b00	                    mov rax, qword [rax]	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x2c6f	      0x25ffffff7f	                     and eax, 0x7fffffff	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x2c74	          0x4885c0	                           test rax, rax	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x2c77	            0x740e	                            je 0x4002cc7	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x2c79	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x2c7d	          0x488b00	                    mov rax, qword [rax]	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x2c80	      0x25ffffff7f	                     and eax, 0x7fffffff	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x2c85	            0xeb05	                           jmp 0x4002ccc	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x2c87	      0xb801000000	                              mov eax, 1	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x2c8c	          0x8945bc	             mov dword [rbp - 0x44], eax	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x2c8f	          0x8b4dbc	             mov ecx, dword [rbp - 0x44]	      1029	state.c	FUNCTION_25	SWITCH_3	CALL_18
0x2c92	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1029	state.c	FUNCTION_25	SWITCH_3	CALL_18
0x2c96	      0xba01000000	                              mov edx, 1	      1029	state.c	FUNCTION_25	SWITCH_3	CALL_18
0x2c9b	            0x89ce	                            mov esi, ecx	      1029	state.c	FUNCTION_25	SWITCH_3	CALL_18
0x2c9d	          0x4889c7	                            mov rdi, rax	      1029	state.c	FUNCTION_25	SWITCH_3	CALL_18
0x2ca0	      0xe8e0dbffff	                            call sym.tab	      1029	state.c	FUNCTION_25	SWITCH_3	CALL_18
0x2ca5	      0xe9c8160000	                           jmp 0x40043b2	      1030	state.c	FUNCTION_25	SWITCH_3
0x2caa	        0x837da43f	           cmp dword [rbp - 0x5c], 0x3f 	      1034	state.c	FUNCTION_25	SWITCH_3
0x2cae	           0xf94c0	                                 sete al	      1034	state.c	FUNCTION_25	SWITCH_3
0x2cb1	           0xfb6c0	                           movzx eax, al	      1034	state.c	FUNCTION_25	SWITCH_3
0x2cb4	          0x8945b4	             mov dword [rbp - 0x4c], eax	      1034	state.c	FUNCTION_25	SWITCH_3
0x2cb7	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_20
0x2cbb	          0x488b00	                    mov rax, qword [rax]	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_20
0x2cbe	      0x25ffffff7f	                     and eax, 0x7fffffff	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_20
0x2cc3	        0x4883f801	                              cmp rax, 1	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_20
0x2cc7	     0xf84ee000000	                            je 0x4002dfb	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_20
0x2ccd	        0x4883f801	                              cmp rax, 1	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_20
0x2cd1	            0x7f0a	                            jg 0x4002d1d	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_20
0x2cd3	          0x4885c0	                           test rax, rax	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_20
0x2cd6	            0x741c	                            je 0x4002d34	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_20
0x2cd8	      0xe995160000	                           jmp 0x40043b2	      1073	state.c	FUNCTION_25	SWITCH_3
0x2cdd	        0x4883f802	                              cmp rax, 2	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_20
0x2ce1	     0xf8495010000	                            je 0x4002ebc	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_20
0x2ce7	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_20
0x2ced	            0x7405	                            je 0x4002d34	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_20
0x2cef	      0xe97e160000	                           jmp 0x40043b2	      1073	state.c	FUNCTION_25	SWITCH_3
0x2cf4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1038	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2cf8	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1038	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2cfb	          0x8945e0	             mov dword [rbp - 0x20], eax	      1038	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2cfe	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1038	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2d02	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1038	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2d05	          0x83c001	                              add eax, 1	      1038	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2d08	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1038	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2d0b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1039	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2d0f	          0x8b4034	            mov eax, dword [rax + 0x34] 	      1039	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2d12	          0x8945e8	             mov dword [rbp - 0x18], eax	      1039	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2d15	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1039	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2d19	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1039	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2d1c	          0x8945ec	             mov dword [rbp - 0x14], eax	      1039	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2d1f	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1040	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_8
0x2d22	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1040	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_8
0x2d25	            0x39c2	                            cmp edx, eax	      1040	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_8
0x2d27	            0x7e17	                           jle 0x4002d80	      1040	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_8
0x2d29	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	      1041	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_21
0x2d2c	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1041	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_21
0x2d30	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1041	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_21
0x2d34	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1041	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_21
0x2d38	          0x4889c7	                            mov rdi, rax	      1041	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_21
0x2d3b	      0xe871d4ffff	                          call sym.erase	      1041	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_21
0x2d40	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1043	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2d44	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1043	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2d47	          0x83c001	                              add eax, 1	      1043	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2d4a	          0x8945e0	             mov dword [rbp - 0x20], eax	      1043	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2d4d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1043	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2d51	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1043	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2d54	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1043	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2d57	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      1044	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2d5e	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x2d61	          0x8945ac	             mov dword [rbp - 0x54], eax	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x2d64	            0xeb23	                           jmp 0x4002dc9	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x2d66	          0x8b75ac	             mov esi, dword [rbp - 0x54]	      1046	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_22
0x2d69	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1046	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_22
0x2d6d	    0x41b800000000	                              mov r8d, 0	      1046	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_22
0x2d73	      0xb900000000	                              mov ecx, 0	      1046	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_22
0x2d78	      0xba01000000	                              mov edx, 1	      1046	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_22
0x2d7d	          0x4889c7	                            mov rdi, rax	      1046	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_22
0x2d80	      0xe8cddbffff	                   call sym.set_lineinfo	      1046	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_22
0x2d85	        0x8345ac01	               add dword [rbp - 0x54], 1	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x2d89	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x2d8c	          0x3b45ac	             cmp eax, dword [rbp - 0x54]	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x2d8f	            0x7fd5	                            jg 0x4002da6	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x2d91	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1047	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_9
0x2d94	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1047	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_9
0x2d97	            0x39c2	                            cmp edx, eax	      1047	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_9
0x2d99	     0xf8e4b010000	                           jle 0x4002f2a	      1047	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_9
0x2d9f	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	      1048	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_23
0x2da2	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1048	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_23
0x2da6	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1048	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_23
0x2daa	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1048	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_23
0x2dae	          0x4889c7	                            mov rdi, rax	      1048	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_23
0x2db1	      0xe8fbd3ffff	                          call sym.erase	      1048	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_23
0x2db6	      0xe92f010000	                           jmp 0x4002f2a	      1049	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2dbb	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      1052	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2dc2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1052	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2dc6	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1052	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2dc9	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1052	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2dcc	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      1053	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2dd3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1053	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2dd7	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1053	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2dda	          0x8945ec	             mov dword [rbp - 0x14], eax	      1053	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2ddd	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1054	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_2
0x2de0	          0x8945ac	             mov dword [rbp - 0x54], eax	      1054	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_2
0x2de3	            0xeb23	                           jmp 0x4002e48	      1054	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_2
0x2de5	          0x8b75ac	             mov esi, dword [rbp - 0x54]	      1055	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_24
0x2de8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1055	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_24
0x2dec	    0x41b800000000	                              mov r8d, 0	      1055	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_24
0x2df2	      0xb900000000	                              mov ecx, 0	      1055	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_24
0x2df7	      0xba01000000	                              mov edx, 1	      1055	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_24
0x2dfc	          0x4889c7	                            mov rdi, rax	      1055	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_24
0x2dff	      0xe84edbffff	                   call sym.set_lineinfo	      1055	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_24
0x2e04	        0x8345ac01	               add dword [rbp - 0x54], 1	      1054	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_2
0x2e08	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1054	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_2
0x2e0b	          0x3b45ac	             cmp eax, dword [rbp - 0x54]	      1054	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_2
0x2e0e	            0x7fd5	                            jg 0x4002e25	      1054	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_2
0x2e10	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1056	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_10
0x2e13	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1056	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_10
0x2e16	            0x39c2	                            cmp edx, eax	      1056	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_10
0x2e18	            0x7e17	                           jle 0x4002e71	      1056	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_10
0x2e1a	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	      1057	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_25
0x2e1d	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1057	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_25
0x2e21	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1057	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_25
0x2e25	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1057	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_25
0x2e29	          0x4889c7	                            mov rdi, rax	      1057	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_25
0x2e2c	      0xe880d3ffff	                          call sym.erase	      1057	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_25
0x2e31	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1059	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2e35	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1059	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2e38	          0x8945e0	             mov dword [rbp - 0x20], eax	      1059	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2e3b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1059	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2e3f	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1059	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2e42	          0x83c001	                              add eax, 1	      1059	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2e45	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1059	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2e48	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1060	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2e4c	          0x8b4034	            mov eax, dword [rax + 0x34] 	      1060	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2e4f	          0x83c001	                              add eax, 1	      1060	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2e52	          0x8945ec	             mov dword [rbp - 0x14], eax	      1060	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2e55	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1061	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_11
0x2e58	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1061	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_11
0x2e5b	            0x39c2	                            cmp edx, eax	      1061	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_11
0x2e5d	     0xf8e8d000000	                           jle 0x4002f30	      1061	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_11
0x2e63	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	      1062	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_26
0x2e66	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1062	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_26
0x2e6a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1062	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_26
0x2e6e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1062	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_26
0x2e72	          0x4889c7	                            mov rdi, rax	      1062	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_26
0x2e75	      0xe837d3ffff	                          call sym.erase	      1062	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_26
0x2e7a	            0xeb74	                           jmp 0x4002f30	      1063	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2e7c	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      1066	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2e83	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1066	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2e87	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1066	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2e8a	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1066	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2e8d	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      1067	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2e94	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1067	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2e98	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1067	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2e9b	          0x8945ec	             mov dword [rbp - 0x14], eax	      1067	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2e9e	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1068	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_3
0x2ea1	          0x8945ac	             mov dword [rbp - 0x54], eax	      1068	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_3
0x2ea4	            0xeb23	                           jmp 0x4002f09	      1068	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_3
0x2ea6	          0x8b75ac	             mov esi, dword [rbp - 0x54]	      1069	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_27
0x2ea9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1069	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_27
0x2ead	    0x41b800000000	                              mov r8d, 0	      1069	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_27
0x2eb3	      0xb900000000	                              mov ecx, 0	      1069	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_27
0x2eb8	      0xba01000000	                              mov edx, 1	      1069	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_27
0x2ebd	          0x4889c7	                            mov rdi, rax	      1069	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_27
0x2ec0	      0xe88ddaffff	                   call sym.set_lineinfo	      1069	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_27
0x2ec5	        0x8345ac01	               add dword [rbp - 0x54], 1	      1068	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_3
0x2ec9	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1068	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_3
0x2ecc	          0x3b45ac	             cmp eax, dword [rbp - 0x54]	      1068	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_3
0x2ecf	            0x7fd5	                            jg 0x4002ee6	      1068	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_3
0x2ed1	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	      1070	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_28
0x2ed4	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1070	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_28
0x2ed8	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1070	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_28
0x2edc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1070	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_28
0x2ee0	          0x4889c7	                            mov rdi, rax	      1070	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_28
0x2ee3	      0xe8c9d2ffff	                          call sym.erase	      1070	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_28
0x2ee8	            0xeb07	                           jmp 0x4002f31	      1071	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2eea	              0x90	                                     nop	      1049	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2eeb	      0xe982140000	                           jmp 0x40043b2	      1049	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2ef0	              0x90	                                     nop	      1063	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x2ef1	      0xe97c140000	                           jmp 0x40043b2	      1073	state.c	FUNCTION_25	SWITCH_3
0x2ef6	        0x837da43f	           cmp dword [rbp - 0x5c], 0x3f 	      1077	state.c	FUNCTION_25	SWITCH_3
0x2efa	           0xf94c0	                                 sete al	      1077	state.c	FUNCTION_25	SWITCH_3
0x2efd	           0xfb6c0	                           movzx eax, al	      1077	state.c	FUNCTION_25	SWITCH_3
0x2f00	          0x8945b4	             mov dword [rbp - 0x4c], eax	      1077	state.c	FUNCTION_25	SWITCH_3
0x2f03	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1078	state.c	FUNCTION_25	SWITCH_3
0x2f07	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1078	state.c	FUNCTION_25	SWITCH_3
0x2f0a	          0x8945e0	             mov dword [rbp - 0x20], eax	      1078	state.c	FUNCTION_25	SWITCH_3
0x2f0d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1079	state.c	FUNCTION_25	SWITCH_3
0x2f11	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1079	state.c	FUNCTION_25	SWITCH_3
0x2f14	          0x83c001	                              add eax, 1	      1079	state.c	FUNCTION_25	SWITCH_3
0x2f17	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1079	state.c	FUNCTION_25	SWITCH_3
0x2f1a	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x2f1e	          0x488b00	                    mov rax, qword [rax]	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x2f21	      0x25ffffff7f	                     and eax, 0x7fffffff	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x2f26	        0x4883f801	                              cmp rax, 1	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x2f2a	            0x746c	                            je 0x4002fd8	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x2f2c	        0x4883f801	                              cmp rax, 1	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x2f30	            0x7f0a	                            jg 0x4002f7c	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x2f32	          0x4885c0	                           test rax, rax	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x2f35	            0x7417	                            je 0x4002f8e	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x2f37	      0xe9b9000000	                           jmp 0x4003035	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x2f3c	        0x4883f802	                              cmp rax, 2	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x2f40	            0x746c	                            je 0x4002fee	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x2f42	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x2f48	     0xf85a7000000	                           jne 0x4003035	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x2f4e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_31
0x2f52	          0x8b4034	            mov eax, dword [rax + 0x34] 	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_31
0x2f55	          0x8945e8	             mov dword [rbp - 0x18], eax	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_31
0x2f58	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_31
0x2f5c	        0x488b5058	            mov rdx, qword [rax + 0x58] 	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_31
0x2f60	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_31
0x2f64	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_31
0x2f67	            0x4898	                                    cdqe	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_31
0x2f69	        0x48c1e002	                              shl rax, 2	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_31
0x2f6d	          0x4801d0	                            add rax, rdx	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_31
0x2f70	           0xfb600	                   movzx eax, byte [rax]	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_31
0x2f73	          0x83e001	                              and eax, 1	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_31
0x2f76	            0x84c0	                             test al, al	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_31
0x2f78	            0x7412	                            je 0x4002fcc	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_31
0x2f7a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_31
0x2f7e	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_31
0x2f81	            0x89c2	                            mov edx, eax	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_31
0x2f83	          0xc1ea1f	                           shr edx, 0x1f	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_31
0x2f86	             0x1d0	                            add eax, edx	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_31
0x2f88	            0xd1f8	                              sar eax, 1	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_31
0x2f8a	            0xeb07	                           jmp 0x4002fd3	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_31
0x2f8c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_31
0x2f90	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_31
0x2f93	          0x8945ec	             mov dword [rbp - 0x14], eax	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_31
0x2f96	            0xeb67	                           jmp 0x400303f	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_31
0x2f98	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      1086	state.c	FUNCTION_25	SWITCH_3	SWITCH_5
0x2f9f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1086	state.c	FUNCTION_25	SWITCH_3	SWITCH_5
0x2fa3	          0x8b4034	            mov eax, dword [rax + 0x34] 	      1086	state.c	FUNCTION_25	SWITCH_3	SWITCH_5
0x2fa6	          0x83c001	                              add eax, 1	      1086	state.c	FUNCTION_25	SWITCH_3	SWITCH_5
0x2fa9	          0x8945ec	             mov dword [rbp - 0x14], eax	      1086	state.c	FUNCTION_25	SWITCH_3	SWITCH_5
0x2fac	            0xeb51	                           jmp 0x400303f	      1086	state.c	FUNCTION_25	SWITCH_3	SWITCH_5
0x2fae	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_32
0x2fb5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_32
0x2fb9	        0x488b5058	            mov rdx, qword [rax + 0x58] 	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_32
0x2fbd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_32
0x2fc1	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_32
0x2fc4	            0x4898	                                    cdqe	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_32
0x2fc6	        0x48c1e002	                              shl rax, 2	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_32
0x2fca	          0x4801d0	                            add rax, rdx	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_32
0x2fcd	           0xfb600	                   movzx eax, byte [rax]	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_32
0x2fd0	          0x83e001	                              and eax, 1	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_32
0x2fd3	            0x84c0	                             test al, al	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_32
0x2fd5	            0x7412	                            je 0x4003029	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_32
0x2fd7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_32
0x2fdb	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_32
0x2fde	            0x89c2	                            mov edx, eax	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_32
0x2fe0	          0xc1ea1f	                           shr edx, 0x1f	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_32
0x2fe3	             0x1d0	                            add eax, edx	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_32
0x2fe5	            0xd1f8	                              sar eax, 1	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_32
0x2fe7	            0xeb07	                           jmp 0x4003030	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_32
0x2fe9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_32
0x2fed	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_32
0x2ff0	          0x8945ec	             mov dword [rbp - 0x14], eax	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_32
0x2ff3	            0xeb0a	                           jmp 0x400303f	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_32
0x2ff5	      0xb800000000	                              mov eax, 0	      1090	state.c	FUNCTION_25	SWITCH_3	SWITCH_5
0x2ffa	      0xe9d3150000	                           jmp 0x4004612	      1090	state.c	FUNCTION_25	SWITCH_3	SWITCH_5
0x2fff	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1093	state.c	FUNCTION_25	SWITCH_3	IF_12
0x3002	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1093	state.c	FUNCTION_25	SWITCH_3	IF_12
0x3005	            0x39c2	                            cmp edx, eax	      1093	state.c	FUNCTION_25	SWITCH_3	IF_12
0x3007	     0xf8e37130000	                           jle 0x4004384	      1093	state.c	FUNCTION_25	SWITCH_3	IF_12
0x300d	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	      1094	state.c	FUNCTION_25	SWITCH_3	CALL_33
0x3010	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1094	state.c	FUNCTION_25	SWITCH_3	CALL_33
0x3014	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1094	state.c	FUNCTION_25	SWITCH_3	CALL_33
0x3018	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1094	state.c	FUNCTION_25	SWITCH_3	CALL_33
0x301c	          0x4889c7	                            mov rdi, rax	      1094	state.c	FUNCTION_25	SWITCH_3	CALL_33
0x301f	      0xe88dd1ffff	                          call sym.erase	      1094	state.c	FUNCTION_25	SWITCH_3	CALL_33
0x3024	      0xe91b130000	                           jmp 0x4004384	      1096	state.c	FUNCTION_25	SWITCH_3
0x3029	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_34
0x302d	          0x488b00	                    mov rax, qword [rax]	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_34
0x3030	      0x25ffffff7f	                     and eax, 0x7fffffff	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_34
0x3035	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_34
0x303b	            0x741f	                            je 0x400309c	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_34
0x303d	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_34
0x3041	          0x488b00	                    mov rax, qword [rax]	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_34
0x3044	      0x25ffffff7f	                     and eax, 0x7fffffff	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_34
0x3049	          0x4885c0	                           test rax, rax	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_34
0x304c	            0x740e	                            je 0x400309c	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_34
0x304e	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_34
0x3052	          0x488b00	                    mov rax, qword [rax]	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_34
0x3055	      0x25ffffff7f	                     and eax, 0x7fffffff	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_34
0x305a	            0xeb05	                           jmp 0x40030a1	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_34
0x305c	      0xb801000000	                              mov eax, 1	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_34
0x3061	          0x8945bc	             mov dword [rbp - 0x44], eax	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_34
0x3064	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1101	state.c	FUNCTION_25	SWITCH_3	IF_13	CALL_35
0x3068	          0x4889c7	                            mov rdi, rax	      1101	state.c	FUNCTION_25	SWITCH_3	IF_13	CALL_35
0x306b	      0xe85dd7ffff	      call sym.is_cursor_in_scrollregion	      1101	state.c	FUNCTION_25	SWITCH_3	IF_13	CALL_35
0x3070	            0x85c0	                           test eax, eax	      1101	state.c	FUNCTION_25	SWITCH_3	IF_13	CALL_35
0x3072	     0xf84cf120000	                            je 0x4004387	      1101	state.c	FUNCTION_25	SWITCH_3	IF_13	CALL_35
0x3078	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1104	state.c	FUNCTION_25	SWITCH_3
0x307c	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1104	state.c	FUNCTION_25	SWITCH_3
0x307f	          0x8945e0	             mov dword [rbp - 0x20], eax	      1104	state.c	FUNCTION_25	SWITCH_3
0x3082	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1105	state.c	FUNCTION_25	SWITCH_3	CALL_36
0x3086	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1105	state.c	FUNCTION_25	SWITCH_3	CALL_36
0x3089	            0x85c0	                           test eax, eax	      1105	state.c	FUNCTION_25	SWITCH_3	CALL_36
0x308b	            0x7809	                            js 0x40030d6	      1105	state.c	FUNCTION_25	SWITCH_3	CALL_36
0x308d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1105	state.c	FUNCTION_25	SWITCH_3	CALL_36
0x3091	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1105	state.c	FUNCTION_25	SWITCH_3	CALL_36
0x3094	            0xeb07	                           jmp 0x40030dd	      1105	state.c	FUNCTION_25	SWITCH_3	CALL_36
0x3096	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1105	state.c	FUNCTION_25	SWITCH_3	CALL_36
0x309a	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1105	state.c	FUNCTION_25	SWITCH_3	CALL_36
0x309d	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1105	state.c	FUNCTION_25	SWITCH_3	CALL_36
0x30a0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1106	state.c	FUNCTION_25	SWITCH_3	CALL_37
0x30a4	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1106	state.c	FUNCTION_25	SWITCH_3	CALL_37
0x30ab	          0x83e010	                           and eax, 0x10	      1106	state.c	FUNCTION_25	SWITCH_3	CALL_37
0x30ae	            0x84c0	                             test al, al	      1106	state.c	FUNCTION_25	SWITCH_3	CALL_37
0x30b0	            0x7409	                            je 0x40030fb	      1106	state.c	FUNCTION_25	SWITCH_3	CALL_37
0x30b2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1106	state.c	FUNCTION_25	SWITCH_3	CALL_37
0x30b6	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1106	state.c	FUNCTION_25	SWITCH_3	CALL_37
0x30b9	            0xeb05	                           jmp 0x4003100	      1106	state.c	FUNCTION_25	SWITCH_3	CALL_37
0x30bb	      0xb800000000	                              mov eax, 0	      1106	state.c	FUNCTION_25	SWITCH_3	CALL_37
0x30c0	          0x8945e8	             mov dword [rbp - 0x18], eax	      1106	state.c	FUNCTION_25	SWITCH_3	CALL_37
0x30c3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1107	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x30c7	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1107	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x30ce	          0x83e010	                           and eax, 0x10	      1107	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x30d1	            0x84c0	                             test al, al	      1107	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x30d3	            0x7414	                            je 0x4003129	      1107	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x30d5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1107	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x30d9	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1107	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x30dc	            0x85c0	                           test eax, eax	      1107	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x30de	            0x7809	                            js 0x4003129	      1107	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x30e0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1107	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x30e4	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1107	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x30e7	            0xeb07	                           jmp 0x4003130	      1107	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x30e9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1107	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x30ed	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1107	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x30f0	          0x8945ec	             mov dword [rbp - 0x14], eax	      1107	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x30f3	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_39
0x30f6	            0xf7d8	                                 neg eax	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_39
0x30f8	            0x89c1	                            mov ecx, eax	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_39
0x30fa	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_39
0x30fe	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_39
0x3102	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_39
0x3106	    0x41b800000000	                              mov r8d, 0	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_39
0x310c	          0x4889c7	                            mov rdi, rax	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_39
0x310f	      0xe81fd2ffff	                         call sym.scroll	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_39
0x3114	      0xe959120000	                           jmp 0x40043b2	      1111	state.c	FUNCTION_25	SWITCH_3
0x3119	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_40
0x311d	          0x488b00	                    mov rax, qword [rax]	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_40
0x3120	      0x25ffffff7f	                     and eax, 0x7fffffff	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_40
0x3125	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_40
0x312b	            0x741f	                            je 0x400318c	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_40
0x312d	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_40
0x3131	          0x488b00	                    mov rax, qword [rax]	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_40
0x3134	      0x25ffffff7f	                     and eax, 0x7fffffff	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_40
0x3139	          0x4885c0	                           test rax, rax	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_40
0x313c	            0x740e	                            je 0x400318c	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_40
0x313e	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_40
0x3142	          0x488b00	                    mov rax, qword [rax]	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_40
0x3145	      0x25ffffff7f	                     and eax, 0x7fffffff	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_40
0x314a	            0xeb05	                           jmp 0x4003191	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_40
0x314c	      0xb801000000	                              mov eax, 1	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_40
0x3151	          0x8945bc	             mov dword [rbp - 0x44], eax	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_40
0x3154	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1116	state.c	FUNCTION_25	SWITCH_3	IF_14	CALL_41
0x3158	          0x4889c7	                            mov rdi, rax	      1116	state.c	FUNCTION_25	SWITCH_3	IF_14	CALL_41
0x315b	      0xe86dd6ffff	      call sym.is_cursor_in_scrollregion	      1116	state.c	FUNCTION_25	SWITCH_3	IF_14	CALL_41
0x3160	            0x85c0	                           test eax, eax	      1116	state.c	FUNCTION_25	SWITCH_3	IF_14	CALL_41
0x3162	     0xf84e2110000	                            je 0x400438a	      1116	state.c	FUNCTION_25	SWITCH_3	IF_14	CALL_41
0x3168	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1119	state.c	FUNCTION_25	SWITCH_3
0x316c	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1119	state.c	FUNCTION_25	SWITCH_3
0x316f	          0x8945e0	             mov dword [rbp - 0x20], eax	      1119	state.c	FUNCTION_25	SWITCH_3
0x3172	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1120	state.c	FUNCTION_25	SWITCH_3	CALL_42
0x3176	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1120	state.c	FUNCTION_25	SWITCH_3	CALL_42
0x3179	            0x85c0	                           test eax, eax	      1120	state.c	FUNCTION_25	SWITCH_3	CALL_42
0x317b	            0x7809	                            js 0x40031c6	      1120	state.c	FUNCTION_25	SWITCH_3	CALL_42
0x317d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1120	state.c	FUNCTION_25	SWITCH_3	CALL_42
0x3181	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1120	state.c	FUNCTION_25	SWITCH_3	CALL_42
0x3184	            0xeb07	                           jmp 0x40031cd	      1120	state.c	FUNCTION_25	SWITCH_3	CALL_42
0x3186	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1120	state.c	FUNCTION_25	SWITCH_3	CALL_42
0x318a	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1120	state.c	FUNCTION_25	SWITCH_3	CALL_42
0x318d	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1120	state.c	FUNCTION_25	SWITCH_3	CALL_42
0x3190	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1121	state.c	FUNCTION_25	SWITCH_3	CALL_43
0x3194	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1121	state.c	FUNCTION_25	SWITCH_3	CALL_43
0x319b	          0x83e010	                           and eax, 0x10	      1121	state.c	FUNCTION_25	SWITCH_3	CALL_43
0x319e	            0x84c0	                             test al, al	      1121	state.c	FUNCTION_25	SWITCH_3	CALL_43
0x31a0	            0x7409	                            je 0x40031eb	      1121	state.c	FUNCTION_25	SWITCH_3	CALL_43
0x31a2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1121	state.c	FUNCTION_25	SWITCH_3	CALL_43
0x31a6	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1121	state.c	FUNCTION_25	SWITCH_3	CALL_43
0x31a9	            0xeb05	                           jmp 0x40031f0	      1121	state.c	FUNCTION_25	SWITCH_3	CALL_43
0x31ab	      0xb800000000	                              mov eax, 0	      1121	state.c	FUNCTION_25	SWITCH_3	CALL_43
0x31b0	          0x8945e8	             mov dword [rbp - 0x18], eax	      1121	state.c	FUNCTION_25	SWITCH_3	CALL_43
0x31b3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1122	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x31b7	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1122	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x31be	          0x83e010	                           and eax, 0x10	      1122	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x31c1	            0x84c0	                             test al, al	      1122	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x31c3	            0x7414	                            je 0x4003219	      1122	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x31c5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1122	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x31c9	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1122	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x31cc	            0x85c0	                           test eax, eax	      1122	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x31ce	            0x7809	                            js 0x4003219	      1122	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x31d0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1122	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x31d4	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1122	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x31d7	            0xeb07	                           jmp 0x4003220	      1122	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x31d9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1122	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x31dd	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1122	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x31e0	          0x8945ec	             mov dword [rbp - 0x14], eax	      1122	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x31e3	          0x8b4dbc	             mov ecx, dword [rbp - 0x44]	      1124	state.c	FUNCTION_25	SWITCH_3	CALL_45
0x31e6	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1124	state.c	FUNCTION_25	SWITCH_3	CALL_45
0x31ea	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1124	state.c	FUNCTION_25	SWITCH_3	CALL_45
0x31ee	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1124	state.c	FUNCTION_25	SWITCH_3	CALL_45
0x31f2	    0x41b800000000	                              mov r8d, 0	      1124	state.c	FUNCTION_25	SWITCH_3	CALL_45
0x31f8	          0x4889c7	                            mov rdi, rax	      1124	state.c	FUNCTION_25	SWITCH_3	CALL_45
0x31fb	      0xe833d1ffff	                         call sym.scroll	      1124	state.c	FUNCTION_25	SWITCH_3	CALL_45
0x3200	      0xe96d110000	                           jmp 0x40043b2	      1126	state.c	FUNCTION_25	SWITCH_3
0x3205	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x3209	          0x488b00	                    mov rax, qword [rax]	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x320c	      0x25ffffff7f	                     and eax, 0x7fffffff	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x3211	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x3217	            0x741f	                            je 0x4003278	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x3219	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x321d	          0x488b00	                    mov rax, qword [rax]	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x3220	      0x25ffffff7f	                     and eax, 0x7fffffff	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x3225	          0x4885c0	                           test rax, rax	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x3228	            0x740e	                            je 0x4003278	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x322a	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x322e	          0x488b00	                    mov rax, qword [rax]	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x3231	      0x25ffffff7f	                     and eax, 0x7fffffff	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x3236	            0xeb05	                           jmp 0x400327d	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x3238	      0xb801000000	                              mov eax, 1	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x323d	          0x8945bc	             mov dword [rbp - 0x44], eax	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x3240	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1131	state.c	FUNCTION_25	SWITCH_3	IF_15	CALL_47
0x3244	          0x4889c7	                            mov rdi, rax	      1131	state.c	FUNCTION_25	SWITCH_3	IF_15	CALL_47
0x3247	      0xe881d5ffff	      call sym.is_cursor_in_scrollregion	      1131	state.c	FUNCTION_25	SWITCH_3	IF_15	CALL_47
0x324c	            0x85c0	                           test eax, eax	      1131	state.c	FUNCTION_25	SWITCH_3	IF_15	CALL_47
0x324e	     0xf84f9100000	                            je 0x400438d	      1131	state.c	FUNCTION_25	SWITCH_3	IF_15	CALL_47
0x3254	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1134	state.c	FUNCTION_25	SWITCH_3
0x3258	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1134	state.c	FUNCTION_25	SWITCH_3
0x325b	          0x8945e0	             mov dword [rbp - 0x20], eax	      1134	state.c	FUNCTION_25	SWITCH_3
0x325e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1135	state.c	FUNCTION_25	SWITCH_3
0x3262	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1135	state.c	FUNCTION_25	SWITCH_3
0x3265	          0x83c001	                              add eax, 1	      1135	state.c	FUNCTION_25	SWITCH_3
0x3268	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1135	state.c	FUNCTION_25	SWITCH_3
0x326b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1136	state.c	FUNCTION_25	SWITCH_3
0x326f	          0x8b4034	            mov eax, dword [rax + 0x34] 	      1136	state.c	FUNCTION_25	SWITCH_3
0x3272	          0x8945e8	             mov dword [rbp - 0x18], eax	      1136	state.c	FUNCTION_25	SWITCH_3
0x3275	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1137	state.c	FUNCTION_25	SWITCH_3	IF_16
0x3279	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1137	state.c	FUNCTION_25	SWITCH_3	IF_16
0x3280	          0x83e010	                           and eax, 0x10	      1137	state.c	FUNCTION_25	SWITCH_3	IF_16
0x3283	            0x84c0	                             test al, al	      1137	state.c	FUNCTION_25	SWITCH_3	IF_16
0x3285	            0x7432	                            je 0x40032f9	      1137	state.c	FUNCTION_25	SWITCH_3	IF_16
0x3287	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_48
0x328b	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_48
0x3292	          0x83e010	                           and eax, 0x10	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_48
0x3295	            0x84c0	                             test al, al	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_48
0x3297	            0x7414	                            je 0x40032ed	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_48
0x3299	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_48
0x329d	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_48
0x32a0	            0x85c0	                           test eax, eax	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_48
0x32a2	            0x7809	                            js 0x40032ed	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_48
0x32a4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_48
0x32a8	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_48
0x32ab	            0xeb07	                           jmp 0x40032f4	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_48
0x32ad	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_48
0x32b1	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_48
0x32b4	          0x8945ec	             mov dword [rbp - 0x14], eax	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_48
0x32b7	            0xeb3e	                           jmp 0x4003337	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_48
0x32b9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x32bd	        0x488b5058	            mov rdx, qword [rax + 0x58] 	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x32c1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x32c5	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x32c8	            0x4898	                                    cdqe	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x32ca	        0x48c1e002	                              shl rax, 2	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x32ce	          0x4801d0	                            add rax, rdx	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x32d1	           0xfb600	                   movzx eax, byte [rax]	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x32d4	          0x83e001	                              and eax, 1	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x32d7	            0x84c0	                             test al, al	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x32d9	            0x7412	                            je 0x400332d	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x32db	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x32df	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x32e2	            0x89c2	                            mov edx, eax	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x32e4	          0xc1ea1f	                           shr edx, 0x1f	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x32e7	             0x1d0	                            add eax, edx	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x32e9	            0xd1f8	                              sar eax, 1	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x32eb	            0xeb07	                           jmp 0x4003334	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x32ed	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x32f1	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x32f4	          0x8945ec	             mov dword [rbp - 0x14], eax	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x32f7	          0x8b4dbc	             mov ecx, dword [rbp - 0x44]	      1142	state.c	FUNCTION_25	SWITCH_3	CALL_50
0x32fa	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1142	state.c	FUNCTION_25	SWITCH_3	CALL_50
0x32fe	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1142	state.c	FUNCTION_25	SWITCH_3	CALL_50
0x3302	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1142	state.c	FUNCTION_25	SWITCH_3	CALL_50
0x3306	          0x4189c8	                            mov r8d, ecx	      1142	state.c	FUNCTION_25	SWITCH_3	CALL_50
0x3309	      0xb900000000	                              mov ecx, 0	      1142	state.c	FUNCTION_25	SWITCH_3	CALL_50
0x330e	          0x4889c7	                            mov rdi, rax	      1142	state.c	FUNCTION_25	SWITCH_3	CALL_50
0x3311	      0xe81dd0ffff	                         call sym.scroll	      1142	state.c	FUNCTION_25	SWITCH_3	CALL_50
0x3316	      0xe957100000	                           jmp 0x40043b2	      1144	state.c	FUNCTION_25	SWITCH_3
0x331b	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_51
0x331f	          0x488b00	                    mov rax, qword [rax]	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_51
0x3322	      0x25ffffff7f	                     and eax, 0x7fffffff	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_51
0x3327	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_51
0x332d	            0x741f	                            je 0x400338e	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_51
0x332f	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_51
0x3333	          0x488b00	                    mov rax, qword [rax]	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_51
0x3336	      0x25ffffff7f	                     and eax, 0x7fffffff	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_51
0x333b	          0x4885c0	                           test rax, rax	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_51
0x333e	            0x740e	                            je 0x400338e	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_51
0x3340	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_51
0x3344	          0x488b00	                    mov rax, qword [rax]	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_51
0x3347	      0x25ffffff7f	                     and eax, 0x7fffffff	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_51
0x334c	            0xeb05	                           jmp 0x4003393	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_51
0x334e	      0xb801000000	                              mov eax, 1	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_51
0x3353	          0x8945bc	             mov dword [rbp - 0x44], eax	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_51
0x3356	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1149	state.c	FUNCTION_25	SWITCH_3
0x335a	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      1149	state.c	FUNCTION_25	SWITCH_3
0x335d	          0x8945e0	             mov dword [rbp - 0x20], eax	      1149	state.c	FUNCTION_25	SWITCH_3
0x3360	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1150	state.c	FUNCTION_25	SWITCH_3	CALL_52
0x3364	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1150	state.c	FUNCTION_25	SWITCH_3	CALL_52
0x3367	            0x85c0	                           test eax, eax	      1150	state.c	FUNCTION_25	SWITCH_3	CALL_52
0x3369	            0x7809	                            js 0x40033b4	      1150	state.c	FUNCTION_25	SWITCH_3	CALL_52
0x336b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1150	state.c	FUNCTION_25	SWITCH_3	CALL_52
0x336f	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1150	state.c	FUNCTION_25	SWITCH_3	CALL_52
0x3372	            0xeb07	                           jmp 0x40033bb	      1150	state.c	FUNCTION_25	SWITCH_3	CALL_52
0x3374	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1150	state.c	FUNCTION_25	SWITCH_3	CALL_52
0x3378	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1150	state.c	FUNCTION_25	SWITCH_3	CALL_52
0x337b	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1150	state.c	FUNCTION_25	SWITCH_3	CALL_52
0x337e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1151	state.c	FUNCTION_25	SWITCH_3	CALL_53
0x3382	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1151	state.c	FUNCTION_25	SWITCH_3	CALL_53
0x3389	          0x83e010	                           and eax, 0x10	      1151	state.c	FUNCTION_25	SWITCH_3	CALL_53
0x338c	            0x84c0	                             test al, al	      1151	state.c	FUNCTION_25	SWITCH_3	CALL_53
0x338e	            0x7409	                            je 0x40033d9	      1151	state.c	FUNCTION_25	SWITCH_3	CALL_53
0x3390	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1151	state.c	FUNCTION_25	SWITCH_3	CALL_53
0x3394	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1151	state.c	FUNCTION_25	SWITCH_3	CALL_53
0x3397	            0xeb05	                           jmp 0x40033de	      1151	state.c	FUNCTION_25	SWITCH_3	CALL_53
0x3399	      0xb800000000	                              mov eax, 0	      1151	state.c	FUNCTION_25	SWITCH_3	CALL_53
0x339e	          0x8945e8	             mov dword [rbp - 0x18], eax	      1151	state.c	FUNCTION_25	SWITCH_3	CALL_53
0x33a1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1152	state.c	FUNCTION_25	SWITCH_3	CALL_54
0x33a5	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1152	state.c	FUNCTION_25	SWITCH_3	CALL_54
0x33ac	          0x83e010	                           and eax, 0x10	      1152	state.c	FUNCTION_25	SWITCH_3	CALL_54
0x33af	            0x84c0	                             test al, al	      1152	state.c	FUNCTION_25	SWITCH_3	CALL_54
0x33b1	            0x7414	                            je 0x4003407	      1152	state.c	FUNCTION_25	SWITCH_3	CALL_54
0x33b3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1152	state.c	FUNCTION_25	SWITCH_3	CALL_54
0x33b7	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1152	state.c	FUNCTION_25	SWITCH_3	CALL_54
0x33ba	            0x85c0	                           test eax, eax	      1152	state.c	FUNCTION_25	SWITCH_3	CALL_54
0x33bc	            0x7809	                            js 0x4003407	      1152	state.c	FUNCTION_25	SWITCH_3	CALL_54
0x33be	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1152	state.c	FUNCTION_25	SWITCH_3	CALL_54
0x33c2	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1152	state.c	FUNCTION_25	SWITCH_3	CALL_54
0x33c5	            0xeb07	                           jmp 0x400340e	      1152	state.c	FUNCTION_25	SWITCH_3	CALL_54
0x33c7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1152	state.c	FUNCTION_25	SWITCH_3	CALL_54
0x33cb	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1152	state.c	FUNCTION_25	SWITCH_3	CALL_54
0x33ce	          0x8945ec	             mov dword [rbp - 0x14], eax	      1152	state.c	FUNCTION_25	SWITCH_3	CALL_54
0x33d1	          0x8b4dbc	             mov ecx, dword [rbp - 0x44]	      1154	state.c	FUNCTION_25	SWITCH_3	CALL_55
0x33d4	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1154	state.c	FUNCTION_25	SWITCH_3	CALL_55
0x33d8	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1154	state.c	FUNCTION_25	SWITCH_3	CALL_55
0x33dc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1154	state.c	FUNCTION_25	SWITCH_3	CALL_55
0x33e0	    0x41b800000000	                              mov r8d, 0	      1154	state.c	FUNCTION_25	SWITCH_3	CALL_55
0x33e6	          0x4889c7	                            mov rdi, rax	      1154	state.c	FUNCTION_25	SWITCH_3	CALL_55
0x33e9	      0xe845cfffff	                         call sym.scroll	      1154	state.c	FUNCTION_25	SWITCH_3	CALL_55
0x33ee	      0xe97f0f0000	                           jmp 0x40043b2	      1156	state.c	FUNCTION_25	SWITCH_3
0x33f3	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_56
0x33f7	          0x488b00	                    mov rax, qword [rax]	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_56
0x33fa	      0x25ffffff7f	                     and eax, 0x7fffffff	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_56
0x33ff	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_56
0x3405	            0x741f	                            je 0x4003466	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_56
0x3407	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_56
0x340b	          0x488b00	                    mov rax, qword [rax]	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_56
0x340e	      0x25ffffff7f	                     and eax, 0x7fffffff	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_56
0x3413	          0x4885c0	                           test rax, rax	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_56
0x3416	            0x740e	                            je 0x4003466	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_56
0x3418	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_56
0x341c	          0x488b00	                    mov rax, qword [rax]	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_56
0x341f	      0x25ffffff7f	                     and eax, 0x7fffffff	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_56
0x3424	            0xeb05	                           jmp 0x400346b	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_56
0x3426	      0xb801000000	                              mov eax, 1	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_56
0x342b	          0x8945bc	             mov dword [rbp - 0x44], eax	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_56
0x342e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1161	state.c	FUNCTION_25	SWITCH_3
0x3432	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      1161	state.c	FUNCTION_25	SWITCH_3
0x3435	          0x8945e0	             mov dword [rbp - 0x20], eax	      1161	state.c	FUNCTION_25	SWITCH_3
0x3438	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1162	state.c	FUNCTION_25	SWITCH_3	CALL_57
0x343c	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1162	state.c	FUNCTION_25	SWITCH_3	CALL_57
0x343f	            0x85c0	                           test eax, eax	      1162	state.c	FUNCTION_25	SWITCH_3	CALL_57
0x3441	            0x7809	                            js 0x400348c	      1162	state.c	FUNCTION_25	SWITCH_3	CALL_57
0x3443	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1162	state.c	FUNCTION_25	SWITCH_3	CALL_57
0x3447	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1162	state.c	FUNCTION_25	SWITCH_3	CALL_57
0x344a	            0xeb07	                           jmp 0x4003493	      1162	state.c	FUNCTION_25	SWITCH_3	CALL_57
0x344c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1162	state.c	FUNCTION_25	SWITCH_3	CALL_57
0x3450	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1162	state.c	FUNCTION_25	SWITCH_3	CALL_57
0x3453	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1162	state.c	FUNCTION_25	SWITCH_3	CALL_57
0x3456	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1163	state.c	FUNCTION_25	SWITCH_3	CALL_58
0x345a	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1163	state.c	FUNCTION_25	SWITCH_3	CALL_58
0x3461	          0x83e010	                           and eax, 0x10	      1163	state.c	FUNCTION_25	SWITCH_3	CALL_58
0x3464	            0x84c0	                             test al, al	      1163	state.c	FUNCTION_25	SWITCH_3	CALL_58
0x3466	            0x7409	                            je 0x40034b1	      1163	state.c	FUNCTION_25	SWITCH_3	CALL_58
0x3468	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1163	state.c	FUNCTION_25	SWITCH_3	CALL_58
0x346c	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1163	state.c	FUNCTION_25	SWITCH_3	CALL_58
0x346f	            0xeb05	                           jmp 0x40034b6	      1163	state.c	FUNCTION_25	SWITCH_3	CALL_58
0x3471	      0xb800000000	                              mov eax, 0	      1163	state.c	FUNCTION_25	SWITCH_3	CALL_58
0x3476	          0x8945e8	             mov dword [rbp - 0x18], eax	      1163	state.c	FUNCTION_25	SWITCH_3	CALL_58
0x3479	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1164	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x347d	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1164	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x3484	          0x83e010	                           and eax, 0x10	      1164	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x3487	            0x84c0	                             test al, al	      1164	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x3489	            0x7414	                            je 0x40034df	      1164	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x348b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1164	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x348f	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1164	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x3492	            0x85c0	                           test eax, eax	      1164	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x3494	            0x7809	                            js 0x40034df	      1164	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x3496	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1164	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x349a	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1164	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x349d	            0xeb07	                           jmp 0x40034e6	      1164	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x349f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1164	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x34a3	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1164	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x34a6	          0x8945ec	             mov dword [rbp - 0x14], eax	      1164	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x34a9	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1166	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x34ac	            0xf7d8	                                 neg eax	      1166	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x34ae	            0x89c1	                            mov ecx, eax	      1166	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x34b0	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1166	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x34b4	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1166	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x34b8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1166	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x34bc	    0x41b800000000	                              mov r8d, 0	      1166	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x34c2	          0x4889c7	                            mov rdi, rax	      1166	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x34c5	      0xe869ceffff	                         call sym.scroll	      1166	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x34ca	      0xe9a30e0000	                           jmp 0x40043b2	      1168	state.c	FUNCTION_25	SWITCH_3
0x34cf	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_61
0x34d3	          0x488b00	                    mov rax, qword [rax]	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_61
0x34d6	      0x25ffffff7f	                     and eax, 0x7fffffff	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_61
0x34db	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_61
0x34e1	            0x741f	                            je 0x4003542	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_61
0x34e3	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_61
0x34e7	          0x488b00	                    mov rax, qword [rax]	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_61
0x34ea	      0x25ffffff7f	                     and eax, 0x7fffffff	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_61
0x34ef	          0x4885c0	                           test rax, rax	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_61
0x34f2	            0x740e	                            je 0x4003542	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_61
0x34f4	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_61
0x34f8	          0x488b00	                    mov rax, qword [rax]	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_61
0x34fb	      0x25ffffff7f	                     and eax, 0x7fffffff	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_61
0x3500	            0xeb05	                           jmp 0x4003547	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_61
0x3502	      0xb801000000	                              mov eax, 1	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_61
0x3507	          0x8945bc	             mov dword [rbp - 0x44], eax	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_61
0x350a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1173	state.c	FUNCTION_25	SWITCH_3
0x350e	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1173	state.c	FUNCTION_25	SWITCH_3
0x3511	          0x8945e0	             mov dword [rbp - 0x20], eax	      1173	state.c	FUNCTION_25	SWITCH_3
0x3514	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1174	state.c	FUNCTION_25	SWITCH_3
0x3518	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1174	state.c	FUNCTION_25	SWITCH_3
0x351b	          0x83c001	                              add eax, 1	      1174	state.c	FUNCTION_25	SWITCH_3
0x351e	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1174	state.c	FUNCTION_25	SWITCH_3
0x3521	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1175	state.c	FUNCTION_25	SWITCH_3
0x3525	          0x8b4034	            mov eax, dword [rax + 0x34] 	      1175	state.c	FUNCTION_25	SWITCH_3
0x3528	          0x8945e8	             mov dword [rbp - 0x18], eax	      1175	state.c	FUNCTION_25	SWITCH_3
0x352b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1176	state.c	FUNCTION_25	SWITCH_3
0x352f	          0x8b5034	            mov edx, dword [rax + 0x34] 	      1176	state.c	FUNCTION_25	SWITCH_3
0x3532	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1176	state.c	FUNCTION_25	SWITCH_3
0x3535	             0x1d0	                            add eax, edx	      1176	state.c	FUNCTION_25	SWITCH_3
0x3537	          0x8945ec	             mov dword [rbp - 0x14], eax	      1176	state.c	FUNCTION_25	SWITCH_3
0x353a	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x353d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x3541	        0x488b4858	            mov rcx, qword [rax + 0x58] 	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x3545	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x3549	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x354c	            0x4898	                                    cdqe	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x354e	        0x48c1e002	                              shl rax, 2	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x3552	          0x4801c8	                            add rax, rcx	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x3555	           0xfb600	                   movzx eax, byte [rax]	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x3558	          0x83e001	                              and eax, 1	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x355b	            0x84c0	                             test al, al	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x355d	            0x7412	                            je 0x40035b1	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x355f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x3563	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x3566	            0x89c1	                            mov ecx, eax	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x3568	          0xc1e91f	                           shr ecx, 0x1f	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x356b	             0x1c8	                            add eax, ecx	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x356d	            0xd1f8	                              sar eax, 1	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x356f	            0xeb07	                           jmp 0x40035b8	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x3571	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x3575	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x3578	            0x39c2	                            cmp edx, eax	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x357a	            0x7e3e	                           jle 0x40035fa	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x357c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x3580	        0x488b5058	            mov rdx, qword [rax + 0x58] 	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x3584	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x3588	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x358b	            0x4898	                                    cdqe	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x358d	        0x48c1e002	                              shl rax, 2	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x3591	          0x4801d0	                            add rax, rdx	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x3594	           0xfb600	                   movzx eax, byte [rax]	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x3597	          0x83e001	                              and eax, 1	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x359a	            0x84c0	                             test al, al	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x359c	            0x7412	                            je 0x40035f0	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x359e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x35a2	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x35a5	            0x89c2	                            mov edx, eax	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x35a7	          0xc1ea1f	                           shr edx, 0x1f	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x35aa	             0x1d0	                            add eax, edx	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x35ac	            0xd1f8	                              sar eax, 1	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x35ae	            0xeb07	                           jmp 0x40035f7	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x35b0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x35b4	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x35b7	          0x8945ec	             mov dword [rbp - 0x14], eax	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_63
0x35ba	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1179	state.c	FUNCTION_25	SWITCH_3	CALL_64
0x35be	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1179	state.c	FUNCTION_25	SWITCH_3	CALL_64
0x35c2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1179	state.c	FUNCTION_25	SWITCH_3	CALL_64
0x35c6	      0xb900000000	                              mov ecx, 0	      1179	state.c	FUNCTION_25	SWITCH_3	CALL_64
0x35cb	          0x4889c7	                            mov rdi, rax	      1179	state.c	FUNCTION_25	SWITCH_3	CALL_64
0x35ce	      0xe8decbffff	                          call sym.erase	      1179	state.c	FUNCTION_25	SWITCH_3	CALL_64
0x35d3	      0xe99a0d0000	                           jmp 0x40043b2	      1180	state.c	FUNCTION_25	SWITCH_3
0x35d8	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x35dc	          0x488b00	                    mov rax, qword [rax]	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x35df	      0x25ffffff7f	                     and eax, 0x7fffffff	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x35e4	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x35ea	            0x741f	                            je 0x400364b	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x35ec	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x35f0	          0x488b00	                    mov rax, qword [rax]	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x35f3	      0x25ffffff7f	                     and eax, 0x7fffffff	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x35f8	          0x4885c0	                           test rax, rax	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x35fb	            0x740e	                            je 0x400364b	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x35fd	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x3601	          0x488b00	                    mov rax, qword [rax]	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x3604	      0x25ffffff7f	                     and eax, 0x7fffffff	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x3609	            0xeb05	                           jmp 0x4003650	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x360b	      0xb801000000	                              mov eax, 1	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x3610	          0x8945bc	             mov dword [rbp - 0x44], eax	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x3613	          0x8b4dbc	             mov ecx, dword [rbp - 0x44]	      1184	state.c	FUNCTION_25	SWITCH_3	CALL_66
0x3616	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1184	state.c	FUNCTION_25	SWITCH_3	CALL_66
0x361a	      0xbaffffffff	                     mov edx, 0xffffffff	      1184	state.c	FUNCTION_25	SWITCH_3	CALL_66
0x361f	            0x89ce	                            mov esi, ecx	      1184	state.c	FUNCTION_25	SWITCH_3	CALL_66
0x3621	          0x4889c7	                            mov rdi, rax	      1184	state.c	FUNCTION_25	SWITCH_3	CALL_66
0x3624	      0xe85cd2ffff	                            call sym.tab	      1184	state.c	FUNCTION_25	SWITCH_3	CALL_66
0x3629	      0xe9440d0000	                           jmp 0x40043b2	      1185	state.c	FUNCTION_25	SWITCH_3
0x362e	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1188	state.c	FUNCTION_25	SWITCH_3	CALL_67
0x3632	          0x488b00	                    mov rax, qword [rax]	      1188	state.c	FUNCTION_25	SWITCH_3	CALL_67
0x3635	      0x25ffffff7f	                     and eax, 0x7fffffff	      1188	state.c	FUNCTION_25	SWITCH_3	CALL_67
0x363a	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1188	state.c	FUNCTION_25	SWITCH_3	CALL_67
0x3640	            0x740e	                            je 0x4003690	      1188	state.c	FUNCTION_25	SWITCH_3	CALL_67
0x3642	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1188	state.c	FUNCTION_25	SWITCH_3	CALL_67
0x3646	          0x488b00	                    mov rax, qword [rax]	      1188	state.c	FUNCTION_25	SWITCH_3	CALL_67
0x3649	      0x25ffffff7f	                     and eax, 0x7fffffff	      1188	state.c	FUNCTION_25	SWITCH_3	CALL_67
0x364e	            0xeb05	                           jmp 0x4003695	      1188	state.c	FUNCTION_25	SWITCH_3	CALL_67
0x3650	      0xb801000000	                              mov eax, 1	      1188	state.c	FUNCTION_25	SWITCH_3	CALL_67
0x3655	          0x8945b0	             mov dword [rbp - 0x50], eax	      1188	state.c	FUNCTION_25	SWITCH_3	CALL_67
0x3658	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1189	state.c	FUNCTION_25	SWITCH_3
0x365b	          0x8d50ff	                      lea edx, [rax - 1]	      1189	state.c	FUNCTION_25	SWITCH_3
0x365e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1189	state.c	FUNCTION_25	SWITCH_3
0x3662	          0x895034	             mov dword [rax + 0x34], edx	      1189	state.c	FUNCTION_25	SWITCH_3
0x3665	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1190	state.c	FUNCTION_25	SWITCH_3
0x3669	    0xc74038000000	               mov dword [rax + 0x38], 0	      1190	state.c	FUNCTION_25	SWITCH_3
0x3670	      0xe9fd0c0000	                           jmp 0x40043b2	      1191	state.c	FUNCTION_25	SWITCH_3
0x3675	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x3679	          0x488b00	                    mov rax, qword [rax]	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x367c	      0x25ffffff7f	                     and eax, 0x7fffffff	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x3681	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x3687	            0x741f	                            je 0x40036e8	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x3689	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x368d	          0x488b00	                    mov rax, qword [rax]	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x3690	      0x25ffffff7f	                     and eax, 0x7fffffff	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x3695	          0x4885c0	                           test rax, rax	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x3698	            0x740e	                            je 0x40036e8	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x369a	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x369e	          0x488b00	                    mov rax, qword [rax]	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x36a1	      0x25ffffff7f	                     and eax, 0x7fffffff	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x36a6	            0xeb05	                           jmp 0x40036ed	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x36a8	      0xb801000000	                              mov eax, 1	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x36ad	          0x8945bc	             mov dword [rbp - 0x44], eax	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x36b0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1195	state.c	FUNCTION_25	SWITCH_3
0x36b4	          0x8b5034	            mov edx, dword [rax + 0x34] 	      1195	state.c	FUNCTION_25	SWITCH_3
0x36b7	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1195	state.c	FUNCTION_25	SWITCH_3
0x36ba	             0x1c2	                            add edx, eax	      1195	state.c	FUNCTION_25	SWITCH_3
0x36bc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1195	state.c	FUNCTION_25	SWITCH_3
0x36c0	          0x895034	             mov dword [rax + 0x34], edx	      1195	state.c	FUNCTION_25	SWITCH_3
0x36c3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1196	state.c	FUNCTION_25	SWITCH_3
0x36c7	    0xc74038000000	               mov dword [rax + 0x38], 0	      1196	state.c	FUNCTION_25	SWITCH_3
0x36ce	      0xe99f0c0000	                           jmp 0x40043b2	      1197	state.c	FUNCTION_25	SWITCH_3
0x36d3	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1200	state.c	FUNCTION_25	SWITCH_3	CALL_69
0x36d7	          0x488b00	                    mov rax, qword [rax]	      1200	state.c	FUNCTION_25	SWITCH_3	CALL_69
0x36da	      0x25ffffff7f	                     and eax, 0x7fffffff	      1200	state.c	FUNCTION_25	SWITCH_3	CALL_69
0x36df	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1200	state.c	FUNCTION_25	SWITCH_3	CALL_69
0x36e5	            0x740e	                            je 0x4003735	      1200	state.c	FUNCTION_25	SWITCH_3	CALL_69
0x36e7	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1200	state.c	FUNCTION_25	SWITCH_3	CALL_69
0x36eb	          0x488b00	                    mov rax, qword [rax]	      1200	state.c	FUNCTION_25	SWITCH_3	CALL_69
0x36ee	      0x25ffffff7f	                     and eax, 0x7fffffff	      1200	state.c	FUNCTION_25	SWITCH_3	CALL_69
0x36f3	            0xeb05	                           jmp 0x400373a	      1200	state.c	FUNCTION_25	SWITCH_3	CALL_69
0x36f5	      0xb800000000	                              mov eax, 0	      1200	state.c	FUNCTION_25	SWITCH_3	CALL_69
0x36fa	          0x8945b8	             mov dword [rbp - 0x48], eax	      1200	state.c	FUNCTION_25	SWITCH_3	CALL_69
0x36fd	        0x837db800	               cmp dword [rbp - 0x48], 0	      1201	state.c	FUNCTION_25	SWITCH_3	IF_17
0x3701	     0xf85490c0000	                           jne 0x4004390	      1201	state.c	FUNCTION_25	SWITCH_3	IF_17
0x3707	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1203	state.c	FUNCTION_25	SWITCH_3	CALL_70
0x370b	          0x488b00	                    mov rax, qword [rax]	      1203	state.c	FUNCTION_25	SWITCH_3	CALL_70
0x370e	      0xba00000000	                              mov edx, 0	      1203	state.c	FUNCTION_25	SWITCH_3	CALL_70
0x3713	      0xbe9b000000	                           mov esi, 0x9b	      1203	state.c	FUNCTION_25	SWITCH_3	CALL_70
0x3718	          0x4889c7	                            mov rdi, rax	      1203	state.c	FUNCTION_25	SWITCH_3	CALL_70
0x371b	      0xb800000000	                              mov eax, 0	      1203	state.c	FUNCTION_25	SWITCH_3	CALL_70
0x3720	      0xe800000000	                          call 0x4003765	      1203	state.c	FUNCTION_25	SWITCH_3	CALL_70
0x3725	      0xe9260c0000	                           jmp 0x4004390	      1204	state.c	FUNCTION_25	SWITCH_3
0x372a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1208	state.c	FUNCTION_25	SWITCH_3	CALL_72
0x372e	          0x488b00	                    mov rax, qword [rax]	      1208	state.c	FUNCTION_25	SWITCH_3	CALL_72
0x3731	    0x41b900000000	                              mov r9d, 0	      1208	state.c	FUNCTION_25	SWITCH_3	CALL_72
0x3737	    0x41b864000000	                           mov r8d, 0x64	      1208	state.c	FUNCTION_25	SWITCH_3	CALL_72
0x373d	      0xb900000000	                              mov ecx, 0	      1208	state.c	FUNCTION_25	SWITCH_3	CALL_72
0x3742	      0xba00000000	                              mov edx, 0	      1208	state.c	FUNCTION_25	SWITCH_3	CALL_72
0x3747	      0xbe9b000000	                           mov esi, 0x9b	      1208	state.c	FUNCTION_25	SWITCH_3	CALL_72
0x374c	          0x4889c7	                            mov rdi, rax	      1208	state.c	FUNCTION_25	SWITCH_3	CALL_72
0x374f	      0xb800000000	                              mov eax, 0	      1208	state.c	FUNCTION_25	SWITCH_3	CALL_72
0x3754	      0xe800000000	                          call 0x4003799	      1208	state.c	FUNCTION_25	SWITCH_3	CALL_72
0x3759	      0xe9140c0000	                           jmp 0x40043b2	      1209	state.c	FUNCTION_25	SWITCH_3
0x375e	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1212	state.c	FUNCTION_25	SWITCH_3	CALL_73
0x3762	          0x488b00	                    mov rax, qword [rax]	      1212	state.c	FUNCTION_25	SWITCH_3	CALL_73
0x3765	      0x25ffffff7f	                     and eax, 0x7fffffff	      1212	state.c	FUNCTION_25	SWITCH_3	CALL_73
0x376a	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1212	state.c	FUNCTION_25	SWITCH_3	CALL_73
0x3770	            0x740e	                            je 0x40037c0	      1212	state.c	FUNCTION_25	SWITCH_3	CALL_73
0x3772	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1212	state.c	FUNCTION_25	SWITCH_3	CALL_73
0x3776	          0x488b00	                    mov rax, qword [rax]	      1212	state.c	FUNCTION_25	SWITCH_3	CALL_73
0x3779	      0x25ffffff7f	                     and eax, 0x7fffffff	      1212	state.c	FUNCTION_25	SWITCH_3	CALL_73
0x377e	            0xeb05	                           jmp 0x40037c5	      1212	state.c	FUNCTION_25	SWITCH_3	CALL_73
0x3780	      0xb801000000	                              mov eax, 1	      1212	state.c	FUNCTION_25	SWITCH_3	CALL_73
0x3785	          0x8945ac	             mov dword [rbp - 0x54], eax	      1212	state.c	FUNCTION_25	SWITCH_3	CALL_73
0x3788	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1213	state.c	FUNCTION_25	SWITCH_3
0x378b	          0x8d50ff	                      lea edx, [rax - 1]	      1213	state.c	FUNCTION_25	SWITCH_3
0x378e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1213	state.c	FUNCTION_25	SWITCH_3
0x3792	          0x895030	             mov dword [rax + 0x30], edx	      1213	state.c	FUNCTION_25	SWITCH_3
0x3795	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1214	state.c	FUNCTION_25	SWITCH_3	IF_18
0x3799	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1214	state.c	FUNCTION_25	SWITCH_3	IF_18
0x37a0	          0x83e004	                              and eax, 4	      1214	state.c	FUNCTION_25	SWITCH_3	IF_18
0x37a3	            0x84c0	                             test al, al	      1214	state.c	FUNCTION_25	SWITCH_3	IF_18
0x37a5	            0x7417	                            je 0x40037fe	      1214	state.c	FUNCTION_25	SWITCH_3	IF_18
0x37a7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1215	state.c	FUNCTION_25	SWITCH_3	IF_18
0x37ab	          0x8b5030	            mov edx, dword [rax + 0x30] 	      1215	state.c	FUNCTION_25	SWITCH_3	IF_18
0x37ae	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1215	state.c	FUNCTION_25	SWITCH_3	IF_18
0x37b2	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      1215	state.c	FUNCTION_25	SWITCH_3	IF_18
0x37b5	             0x1c2	                            add edx, eax	      1215	state.c	FUNCTION_25	SWITCH_3	IF_18
0x37b7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1215	state.c	FUNCTION_25	SWITCH_3	IF_18
0x37bb	          0x895030	             mov dword [rax + 0x30], edx	      1215	state.c	FUNCTION_25	SWITCH_3	IF_18
0x37be	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1216	state.c	FUNCTION_25	SWITCH_3
0x37c2	    0xc74038000000	               mov dword [rax + 0x38], 0	      1216	state.c	FUNCTION_25	SWITCH_3
0x37c9	      0xe9a40b0000	                           jmp 0x40043b2	      1217	state.c	FUNCTION_25	SWITCH_3
0x37ce	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_74
0x37d2	          0x488b00	                    mov rax, qword [rax]	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_74
0x37d5	      0x25ffffff7f	                     and eax, 0x7fffffff	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_74
0x37da	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_74
0x37e0	            0x741f	                            je 0x4003841	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_74
0x37e2	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_74
0x37e6	          0x488b00	                    mov rax, qword [rax]	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_74
0x37e9	      0x25ffffff7f	                     and eax, 0x7fffffff	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_74
0x37ee	          0x4885c0	                           test rax, rax	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_74
0x37f1	            0x740e	                            je 0x4003841	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_74
0x37f3	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_74
0x37f7	          0x488b00	                    mov rax, qword [rax]	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_74
0x37fa	      0x25ffffff7f	                     and eax, 0x7fffffff	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_74
0x37ff	            0xeb05	                           jmp 0x4003846	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_74
0x3801	      0xb801000000	                              mov eax, 1	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_74
0x3806	          0x8945bc	             mov dword [rbp - 0x44], eax	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_74
0x3809	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1221	state.c	FUNCTION_25	SWITCH_3
0x380d	          0x8b5030	            mov edx, dword [rax + 0x30] 	      1221	state.c	FUNCTION_25	SWITCH_3
0x3810	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1221	state.c	FUNCTION_25	SWITCH_3
0x3813	             0x1c2	                            add edx, eax	      1221	state.c	FUNCTION_25	SWITCH_3
0x3815	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1221	state.c	FUNCTION_25	SWITCH_3
0x3819	          0x895030	             mov dword [rax + 0x30], edx	      1221	state.c	FUNCTION_25	SWITCH_3
0x381c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1222	state.c	FUNCTION_25	SWITCH_3
0x3820	    0xc74038000000	               mov dword [rax + 0x38], 0	      1222	state.c	FUNCTION_25	SWITCH_3
0x3827	      0xe9460b0000	                           jmp 0x40043b2	      1223	state.c	FUNCTION_25	SWITCH_3
0x382c	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1226	state.c	FUNCTION_25	SWITCH_3	CALL_75
0x3830	          0x488b00	                    mov rax, qword [rax]	      1226	state.c	FUNCTION_25	SWITCH_3	CALL_75
0x3833	      0x25ffffff7f	                     and eax, 0x7fffffff	      1226	state.c	FUNCTION_25	SWITCH_3	CALL_75
0x3838	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1226	state.c	FUNCTION_25	SWITCH_3	CALL_75
0x383e	            0x740e	                            je 0x400388e	      1226	state.c	FUNCTION_25	SWITCH_3	CALL_75
0x3840	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1226	state.c	FUNCTION_25	SWITCH_3	CALL_75
0x3844	          0x488b00	                    mov rax, qword [rax]	      1226	state.c	FUNCTION_25	SWITCH_3	CALL_75
0x3847	      0x25ffffff7f	                     and eax, 0x7fffffff	      1226	state.c	FUNCTION_25	SWITCH_3	CALL_75
0x384c	            0xeb05	                           jmp 0x4003893	      1226	state.c	FUNCTION_25	SWITCH_3	CALL_75
0x384e	      0xb801000000	                              mov eax, 1	      1226	state.c	FUNCTION_25	SWITCH_3	CALL_75
0x3853	          0x8945ac	             mov dword [rbp - 0x54], eax	      1226	state.c	FUNCTION_25	SWITCH_3	CALL_75
0x3856	        0x837d8c01	               cmp dword [rbp - 0x74], 1	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_77
0x385a	            0x7e2a	                           jle 0x40038c6	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_77
0x385c	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_77
0x3860	        0x4883c008	                              add rax, 8	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_77
0x3864	          0x488b00	                    mov rax, qword [rax]	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_77
0x3867	      0x25ffffff7f	                     and eax, 0x7fffffff	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_77
0x386c	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_77
0x3872	            0x7412	                            je 0x40038c6	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_77
0x3874	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_77
0x3878	        0x4883c008	                              add rax, 8	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_77
0x387c	          0x488b00	                    mov rax, qword [rax]	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_77
0x387f	      0x25ffffff7f	                     and eax, 0x7fffffff	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_77
0x3884	            0xeb05	                           jmp 0x40038cb	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_77
0x3886	      0xb801000000	                              mov eax, 1	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_77
0x388b	          0x8945b0	             mov dword [rbp - 0x50], eax	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_77
0x388e	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1229	state.c	FUNCTION_25	SWITCH_3
0x3891	          0x8d50ff	                      lea edx, [rax - 1]	      1229	state.c	FUNCTION_25	SWITCH_3
0x3894	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1229	state.c	FUNCTION_25	SWITCH_3
0x3898	          0x895030	             mov dword [rax + 0x30], edx	      1229	state.c	FUNCTION_25	SWITCH_3
0x389b	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1230	state.c	FUNCTION_25	SWITCH_3
0x389e	          0x8d50ff	                      lea edx, [rax - 1]	      1230	state.c	FUNCTION_25	SWITCH_3
0x38a1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1230	state.c	FUNCTION_25	SWITCH_3
0x38a5	          0x895034	             mov dword [rax + 0x34], edx	      1230	state.c	FUNCTION_25	SWITCH_3
0x38a8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1231	state.c	FUNCTION_25	SWITCH_3	IF_19
0x38ac	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1231	state.c	FUNCTION_25	SWITCH_3	IF_19
0x38b3	          0x83e004	                              and eax, 4	      1231	state.c	FUNCTION_25	SWITCH_3	IF_19
0x38b6	            0x84c0	                             test al, al	      1231	state.c	FUNCTION_25	SWITCH_3	IF_19
0x38b8	            0x7447	                            je 0x4003941	      1231	state.c	FUNCTION_25	SWITCH_3	IF_19
0x38ba	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1232	state.c	FUNCTION_25	SWITCH_3	IF_19
0x38be	          0x8b5030	            mov edx, dword [rax + 0x30] 	      1232	state.c	FUNCTION_25	SWITCH_3	IF_19
0x38c1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1232	state.c	FUNCTION_25	SWITCH_3	IF_19
0x38c5	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      1232	state.c	FUNCTION_25	SWITCH_3	IF_19
0x38c8	             0x1c2	                            add edx, eax	      1232	state.c	FUNCTION_25	SWITCH_3	IF_19
0x38ca	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1232	state.c	FUNCTION_25	SWITCH_3	IF_19
0x38ce	          0x895030	             mov dword [rax + 0x30], edx	      1232	state.c	FUNCTION_25	SWITCH_3	IF_19
0x38d1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1233	state.c	FUNCTION_25	SWITCH_3	IF_19	CALL_78
0x38d5	          0x8b5034	            mov edx, dword [rax + 0x34] 	      1233	state.c	FUNCTION_25	SWITCH_3	IF_19	CALL_78
0x38d8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1233	state.c	FUNCTION_25	SWITCH_3	IF_19	CALL_78
0x38dc	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1233	state.c	FUNCTION_25	SWITCH_3	IF_19	CALL_78
0x38e3	          0x83e010	                           and eax, 0x10	      1233	state.c	FUNCTION_25	SWITCH_3	IF_19	CALL_78
0x38e6	            0x84c0	                             test al, al	      1233	state.c	FUNCTION_25	SWITCH_3	IF_19	CALL_78
0x38e8	            0x7409	                            je 0x4003933	      1233	state.c	FUNCTION_25	SWITCH_3	IF_19	CALL_78
0x38ea	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1233	state.c	FUNCTION_25	SWITCH_3	IF_19	CALL_78
0x38ee	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1233	state.c	FUNCTION_25	SWITCH_3	IF_19	CALL_78
0x38f1	            0xeb05	                           jmp 0x4003938	      1233	state.c	FUNCTION_25	SWITCH_3	IF_19	CALL_78
0x38f3	      0xb800000000	                              mov eax, 0	      1233	state.c	FUNCTION_25	SWITCH_3	IF_19	CALL_78
0x38f8	             0x1c2	                            add edx, eax	      1233	state.c	FUNCTION_25	SWITCH_3	IF_19	CALL_78
0x38fa	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1233	state.c	FUNCTION_25	SWITCH_3	IF_19	CALL_78
0x38fe	          0x895034	             mov dword [rax + 0x34], edx	      1233	state.c	FUNCTION_25	SWITCH_3	IF_19	CALL_78
0x3901	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1235	state.c	FUNCTION_25	SWITCH_3
0x3905	    0xc74038000000	               mov dword [rax + 0x38], 0	      1235	state.c	FUNCTION_25	SWITCH_3
0x390c	      0xe9610a0000	                           jmp 0x40043b2	      1236	state.c	FUNCTION_25	SWITCH_3
0x3911	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1239	state.c	FUNCTION_25	SWITCH_3	CALL_79
0x3915	          0x488b00	                    mov rax, qword [rax]	      1239	state.c	FUNCTION_25	SWITCH_3	CALL_79
0x3918	      0x25ffffff7f	                     and eax, 0x7fffffff	      1239	state.c	FUNCTION_25	SWITCH_3	CALL_79
0x391d	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1239	state.c	FUNCTION_25	SWITCH_3	CALL_79
0x3923	            0x740e	                            je 0x4003973	      1239	state.c	FUNCTION_25	SWITCH_3	CALL_79
0x3925	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1239	state.c	FUNCTION_25	SWITCH_3	CALL_79
0x3929	          0x488b00	                    mov rax, qword [rax]	      1239	state.c	FUNCTION_25	SWITCH_3	CALL_79
0x392c	      0x25ffffff7f	                     and eax, 0x7fffffff	      1239	state.c	FUNCTION_25	SWITCH_3	CALL_79
0x3931	            0xeb05	                           jmp 0x4003978	      1239	state.c	FUNCTION_25	SWITCH_3	CALL_79
0x3933	      0xb800000000	                              mov eax, 0	      1239	state.c	FUNCTION_25	SWITCH_3	CALL_79
0x3938	          0x8945b8	             mov dword [rbp - 0x48], eax	      1239	state.c	FUNCTION_25	SWITCH_3	CALL_79
0x393b	        0x837db805	               cmp dword [rbp - 0x48], 5	      1241	state.c	FUNCTION_25	SWITCH_3	SWITCH_6
0x393f	            0x7750	                            ja 0x40039d1	      1241	state.c	FUNCTION_25	SWITCH_3	SWITCH_6
0x3941	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1241	state.c	FUNCTION_25	SWITCH_3	SWITCH_6
0x3944	    0x488b04c50000	                  mov rax, qword [rax*8]	      1241	state.c	FUNCTION_25	SWITCH_3	SWITCH_6
0x394c	            0xffe0	                                 jmp rax	      1241	state.c	FUNCTION_25	SWITCH_3	SWITCH_6
0x394e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1243	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	CALL_80
0x3952	          0x8b5034	            mov edx, dword [rax + 0x34] 	      1243	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	CALL_80
0x3955	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1243	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	CALL_80
0x3959	            0x89d6	                            mov esi, edx	      1243	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	CALL_80
0x395b	          0x4889c7	                            mov rdi, rax	      1243	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	CALL_80
0x395e	      0xe8d6cdffff	              call sym.clear_col_tabstop	      1243	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	CALL_80
0x3963	            0xeb37	                           jmp 0x40039dc	      1244	state.c	FUNCTION_25	SWITCH_3	SWITCH_6
0x3965	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      1247	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	FOR_4
0x396c	            0xeb15	                           jmp 0x40039c3	      1247	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	FOR_4
0x396e	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      1248	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	CALL_81
0x3971	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1248	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	CALL_81
0x3975	            0x89d6	                            mov esi, edx	      1248	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	CALL_81
0x3977	          0x4889c7	                            mov rdi, rax	      1248	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	CALL_81
0x397a	      0xe8bacdffff	              call sym.clear_col_tabstop	      1248	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	CALL_81
0x397f	        0x8345b001	               add dword [rbp - 0x50], 1	      1247	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	FOR_4
0x3983	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1247	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	FOR_4
0x3987	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1247	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	FOR_4
0x398a	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	      1247	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	FOR_4
0x398d	            0x7fdf	                            jg 0x40039ae	      1247	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	FOR_4
0x398f	            0xeb0b	                           jmp 0x40039dc	      1249	state.c	FUNCTION_25	SWITCH_3	SWITCH_6
0x3991	      0xb800000000	                              mov eax, 0	      1256	state.c	FUNCTION_25	SWITCH_3	SWITCH_6
0x3996	      0xe9370c0000	                           jmp 0x4004612	      1256	state.c	FUNCTION_25	SWITCH_3	SWITCH_6
0x399b	              0x90	                                     nop	      1253	state.c	FUNCTION_25	SWITCH_3	SWITCH_6
0x399c	      0xe9d1090000	                           jmp 0x40043b2	      1258	state.c	FUNCTION_25	SWITCH_3
0x39a1	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1261	state.c	FUNCTION_25	SWITCH_3	IF_20	CALL_82
0x39a5	          0x488b00	                    mov rax, qword [rax]	      1261	state.c	FUNCTION_25	SWITCH_3	IF_20	CALL_82
0x39a8	      0x25ffffff7f	                     and eax, 0x7fffffff	      1261	state.c	FUNCTION_25	SWITCH_3	IF_20	CALL_82
0x39ad	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1261	state.c	FUNCTION_25	SWITCH_3	IF_20	CALL_82
0x39b3	     0xf849a090000	                            je 0x4004393	      1261	state.c	FUNCTION_25	SWITCH_3	IF_20	CALL_82
0x39b9	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1262	state.c	FUNCTION_25	SWITCH_3	CALL_84
0x39bd	          0x488b00	                    mov rax, qword [rax]	      1262	state.c	FUNCTION_25	SWITCH_3	CALL_84
0x39c0	      0x25ffffff7f	                     and eax, 0x7fffffff	      1262	state.c	FUNCTION_25	SWITCH_3	CALL_84
0x39c5	            0x89c1	                            mov ecx, eax	      1262	state.c	FUNCTION_25	SWITCH_3	CALL_84
0x39c7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1262	state.c	FUNCTION_25	SWITCH_3	CALL_84
0x39cb	      0xba01000000	                              mov edx, 1	      1262	state.c	FUNCTION_25	SWITCH_3	CALL_84
0x39d0	            0x89ce	                            mov esi, ecx	      1262	state.c	FUNCTION_25	SWITCH_3	CALL_84
0x39d2	          0x4889c7	                            mov rdi, rax	      1262	state.c	FUNCTION_25	SWITCH_3	CALL_84
0x39d5	      0xe8c3e2ffff	                       call sym.set_mode	      1262	state.c	FUNCTION_25	SWITCH_3	CALL_84
0x39da	      0xe974090000	                           jmp 0x4004393	      1263	state.c	FUNCTION_25	SWITCH_3
0x39df	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1266	state.c	FUNCTION_25	SWITCH_3	IF_21	CALL_86
0x39e3	          0x488b00	                    mov rax, qword [rax]	      1266	state.c	FUNCTION_25	SWITCH_3	IF_21	CALL_86
0x39e6	      0x25ffffff7f	                     and eax, 0x7fffffff	      1266	state.c	FUNCTION_25	SWITCH_3	IF_21	CALL_86
0x39eb	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1266	state.c	FUNCTION_25	SWITCH_3	IF_21	CALL_86
0x39f1	     0xf845f090000	                            je 0x4004396	      1266	state.c	FUNCTION_25	SWITCH_3	IF_21	CALL_86
0x39f7	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1267	state.c	FUNCTION_25	SWITCH_3	CALL_88
0x39fb	          0x488b00	                    mov rax, qword [rax]	      1267	state.c	FUNCTION_25	SWITCH_3	CALL_88
0x39fe	      0x25ffffff7f	                     and eax, 0x7fffffff	      1267	state.c	FUNCTION_25	SWITCH_3	CALL_88
0x3a03	            0x89c1	                            mov ecx, eax	      1267	state.c	FUNCTION_25	SWITCH_3	CALL_88
0x3a05	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1267	state.c	FUNCTION_25	SWITCH_3	CALL_88
0x3a09	      0xba01000000	                              mov edx, 1	      1267	state.c	FUNCTION_25	SWITCH_3	CALL_88
0x3a0e	            0x89ce	                            mov esi, ecx	      1267	state.c	FUNCTION_25	SWITCH_3	CALL_88
0x3a10	          0x4889c7	                            mov rdi, rax	      1267	state.c	FUNCTION_25	SWITCH_3	CALL_88
0x3a13	      0xe8f5e2ffff	                   call sym.set_dec_mode	      1267	state.c	FUNCTION_25	SWITCH_3	CALL_88
0x3a18	      0xe939090000	                           jmp 0x4004396	      1268	state.c	FUNCTION_25	SWITCH_3
0x3a1d	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_89
0x3a21	          0x488b00	                    mov rax, qword [rax]	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_89
0x3a24	      0x25ffffff7f	                     and eax, 0x7fffffff	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_89
0x3a29	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_89
0x3a2f	            0x741f	                            je 0x4003a90	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_89
0x3a31	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_89
0x3a35	          0x488b00	                    mov rax, qword [rax]	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_89
0x3a38	      0x25ffffff7f	                     and eax, 0x7fffffff	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_89
0x3a3d	          0x4885c0	                           test rax, rax	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_89
0x3a40	            0x740e	                            je 0x4003a90	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_89
0x3a42	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_89
0x3a46	          0x488b00	                    mov rax, qword [rax]	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_89
0x3a49	      0x25ffffff7f	                     and eax, 0x7fffffff	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_89
0x3a4e	            0xeb05	                           jmp 0x4003a95	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_89
0x3a50	      0xb801000000	                              mov eax, 1	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_89
0x3a55	          0x8945bc	             mov dword [rbp - 0x44], eax	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_89
0x3a58	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1272	state.c	FUNCTION_25	SWITCH_3
0x3a5c	          0x8b4034	            mov eax, dword [rax + 0x34] 	      1272	state.c	FUNCTION_25	SWITCH_3
0x3a5f	          0x2b45bc	             sub eax, dword [rbp - 0x44]	      1272	state.c	FUNCTION_25	SWITCH_3
0x3a62	            0x89c2	                            mov edx, eax	      1272	state.c	FUNCTION_25	SWITCH_3
0x3a64	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1272	state.c	FUNCTION_25	SWITCH_3
0x3a68	          0x895034	             mov dword [rax + 0x34], edx	      1272	state.c	FUNCTION_25	SWITCH_3
0x3a6b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1273	state.c	FUNCTION_25	SWITCH_3
0x3a6f	    0xc74038000000	               mov dword [rax + 0x38], 0	      1273	state.c	FUNCTION_25	SWITCH_3
0x3a76	      0xe9f7080000	                           jmp 0x40043b2	      1274	state.c	FUNCTION_25	SWITCH_3
0x3a7b	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_90
0x3a7f	          0x488b00	                    mov rax, qword [rax]	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_90
0x3a82	      0x25ffffff7f	                     and eax, 0x7fffffff	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_90
0x3a87	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_90
0x3a8d	            0x741f	                            je 0x4003aee	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_90
0x3a8f	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_90
0x3a93	          0x488b00	                    mov rax, qword [rax]	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_90
0x3a96	      0x25ffffff7f	                     and eax, 0x7fffffff	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_90
0x3a9b	          0x4885c0	                           test rax, rax	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_90
0x3a9e	            0x740e	                            je 0x4003aee	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_90
0x3aa0	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_90
0x3aa4	          0x488b00	                    mov rax, qword [rax]	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_90
0x3aa7	      0x25ffffff7f	                     and eax, 0x7fffffff	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_90
0x3aac	            0xeb05	                           jmp 0x4003af3	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_90
0x3aae	      0xb801000000	                              mov eax, 1	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_90
0x3ab3	          0x8945bc	             mov dword [rbp - 0x44], eax	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_90
0x3ab6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1278	state.c	FUNCTION_25	SWITCH_3
0x3aba	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1278	state.c	FUNCTION_25	SWITCH_3
0x3abd	          0x2b45bc	             sub eax, dword [rbp - 0x44]	      1278	state.c	FUNCTION_25	SWITCH_3
0x3ac0	            0x89c2	                            mov edx, eax	      1278	state.c	FUNCTION_25	SWITCH_3
0x3ac2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1278	state.c	FUNCTION_25	SWITCH_3
0x3ac6	          0x895030	             mov dword [rax + 0x30], edx	      1278	state.c	FUNCTION_25	SWITCH_3
0x3ac9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1279	state.c	FUNCTION_25	SWITCH_3
0x3acd	    0xc74038000000	               mov dword [rax + 0x38], 0	      1279	state.c	FUNCTION_25	SWITCH_3
0x3ad4	      0xe999080000	                           jmp 0x40043b2	      1280	state.c	FUNCTION_25	SWITCH_3
0x3ad9	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1283	state.c	FUNCTION_25	SWITCH_3	IF_22	CALL_91
0x3add	          0x488b00	                    mov rax, qword [rax]	      1283	state.c	FUNCTION_25	SWITCH_3	IF_22	CALL_91
0x3ae0	      0x25ffffff7f	                     and eax, 0x7fffffff	      1283	state.c	FUNCTION_25	SWITCH_3	IF_22	CALL_91
0x3ae5	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1283	state.c	FUNCTION_25	SWITCH_3	IF_22	CALL_91
0x3aeb	     0xf8468080000	                            je 0x4004399	      1283	state.c	FUNCTION_25	SWITCH_3	IF_22	CALL_91
0x3af1	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1284	state.c	FUNCTION_25	SWITCH_3	CALL_93
0x3af5	          0x488b00	                    mov rax, qword [rax]	      1284	state.c	FUNCTION_25	SWITCH_3	CALL_93
0x3af8	      0x25ffffff7f	                     and eax, 0x7fffffff	      1284	state.c	FUNCTION_25	SWITCH_3	CALL_93
0x3afd	            0x89c1	                            mov ecx, eax	      1284	state.c	FUNCTION_25	SWITCH_3	CALL_93
0x3aff	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1284	state.c	FUNCTION_25	SWITCH_3	CALL_93
0x3b03	      0xba00000000	                              mov edx, 0	      1284	state.c	FUNCTION_25	SWITCH_3	CALL_93
0x3b08	            0x89ce	                            mov esi, ecx	      1284	state.c	FUNCTION_25	SWITCH_3	CALL_93
0x3b0a	          0x4889c7	                            mov rdi, rax	      1284	state.c	FUNCTION_25	SWITCH_3	CALL_93
0x3b0d	      0xe88be1ffff	                       call sym.set_mode	      1284	state.c	FUNCTION_25	SWITCH_3	CALL_93
0x3b12	      0xe942080000	                           jmp 0x4004399	      1285	state.c	FUNCTION_25	SWITCH_3
0x3b17	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1288	state.c	FUNCTION_25	SWITCH_3	IF_23	CALL_95
0x3b1b	          0x488b00	                    mov rax, qword [rax]	      1288	state.c	FUNCTION_25	SWITCH_3	IF_23	CALL_95
0x3b1e	      0x25ffffff7f	                     and eax, 0x7fffffff	      1288	state.c	FUNCTION_25	SWITCH_3	IF_23	CALL_95
0x3b23	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1288	state.c	FUNCTION_25	SWITCH_3	IF_23	CALL_95
0x3b29	     0xf842d080000	                            je 0x400439c	      1288	state.c	FUNCTION_25	SWITCH_3	IF_23	CALL_95
0x3b2f	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1289	state.c	FUNCTION_25	SWITCH_3	CALL_97
0x3b33	          0x488b00	                    mov rax, qword [rax]	      1289	state.c	FUNCTION_25	SWITCH_3	CALL_97
0x3b36	      0x25ffffff7f	                     and eax, 0x7fffffff	      1289	state.c	FUNCTION_25	SWITCH_3	CALL_97
0x3b3b	            0x89c1	                            mov ecx, eax	      1289	state.c	FUNCTION_25	SWITCH_3	CALL_97
0x3b3d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1289	state.c	FUNCTION_25	SWITCH_3	CALL_97
0x3b41	      0xba00000000	                              mov edx, 0	      1289	state.c	FUNCTION_25	SWITCH_3	CALL_97
0x3b46	            0x89ce	                            mov esi, ecx	      1289	state.c	FUNCTION_25	SWITCH_3	CALL_97
0x3b48	          0x4889c7	                            mov rdi, rax	      1289	state.c	FUNCTION_25	SWITCH_3	CALL_97
0x3b4b	      0xe8bde1ffff	                   call sym.set_dec_mode	      1289	state.c	FUNCTION_25	SWITCH_3	CALL_97
0x3b50	      0xe907080000	                           jmp 0x400439c	      1290	state.c	FUNCTION_25	SWITCH_3
0x3b55	          0x8b558c	             mov edx, dword [rbp - 0x74]	      1293	state.c	FUNCTION_25	SWITCH_3	CALL_98
0x3b58	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	      1293	state.c	FUNCTION_25	SWITCH_3	CALL_98
0x3b5c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1293	state.c	FUNCTION_25	SWITCH_3	CALL_98
0x3b60	          0x4889ce	                            mov rsi, rcx	      1293	state.c	FUNCTION_25	SWITCH_3	CALL_98
0x3b63	          0x4889c7	                            mov rdi, rax	      1293	state.c	FUNCTION_25	SWITCH_3	CALL_98
0x3b66	      0xe800000000	                          call 0x4003bab	      1293	state.c	FUNCTION_25	SWITCH_3	CALL_98
0x3b6b	      0xe902080000	                           jmp 0x40043b2	      1294	state.c	FUNCTION_25	SWITCH_3
0x3b70	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1298	state.c	FUNCTION_25	SWITCH_3	CALL_100
0x3b74	          0x488b00	                    mov rax, qword [rax]	      1298	state.c	FUNCTION_25	SWITCH_3	CALL_100
0x3b77	      0x25ffffff7f	                     and eax, 0x7fffffff	      1298	state.c	FUNCTION_25	SWITCH_3	CALL_100
0x3b7c	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1298	state.c	FUNCTION_25	SWITCH_3	CALL_100
0x3b82	            0x740e	                            je 0x4003bd2	      1298	state.c	FUNCTION_25	SWITCH_3	CALL_100
0x3b84	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1298	state.c	FUNCTION_25	SWITCH_3	CALL_100
0x3b88	          0x488b00	                    mov rax, qword [rax]	      1298	state.c	FUNCTION_25	SWITCH_3	CALL_100
0x3b8b	      0x25ffffff7f	                     and eax, 0x7fffffff	      1298	state.c	FUNCTION_25	SWITCH_3	CALL_100
0x3b90	            0xeb05	                           jmp 0x4003bd7	      1298	state.c	FUNCTION_25	SWITCH_3	CALL_100
0x3b92	      0xb800000000	                              mov eax, 0	      1298	state.c	FUNCTION_25	SWITCH_3	CALL_100
0x3b97	          0x8945b8	             mov dword [rbp - 0x48], eax	      1298	state.c	FUNCTION_25	SWITCH_3	CALL_100
0x3b9a	        0x837da43f	           cmp dword [rbp - 0x5c], 0x3f 	      1301	state.c	FUNCTION_25	SWITCH_3
0x3b9e	            0x7507	                           jne 0x4003be7	      1301	state.c	FUNCTION_25	SWITCH_3
0x3ba0	      0xb800000000	                              mov eax, 0	      1301	state.c	FUNCTION_25	SWITCH_3
0x3ba5	            0xeb05	                           jmp 0x4003bec	      1301	state.c	FUNCTION_25	SWITCH_3
0x3ba7	      0xb800000000	                              mov eax, 0	      1301	state.c	FUNCTION_25	SWITCH_3
0x3bac	        0x488945d8	             mov qword [rbp - 0x28], rax	      1301	state.c	FUNCTION_25	SWITCH_3
0x3bb0	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1303	state.c	FUNCTION_25	SWITCH_3	SWITCH_7
0x3bb3	          0x83f805	                              cmp eax, 5	      1303	state.c	FUNCTION_25	SWITCH_3	SWITCH_7
0x3bb6	            0x7419	                            je 0x4003c11	      1303	state.c	FUNCTION_25	SWITCH_3	SWITCH_7
0x3bb8	          0x83f805	                              cmp eax, 5	      1303	state.c	FUNCTION_25	SWITCH_3	SWITCH_7
0x3bbb	            0x7f0a	                            jg 0x4003c07	      1303	state.c	FUNCTION_25	SWITCH_3	SWITCH_7
0x3bbd	            0x85c0	                           test eax, eax	      1303	state.c	FUNCTION_25	SWITCH_3	SWITCH_7
0x3bbf	     0xf889a070000	                            js 0x400439f	      1303	state.c	FUNCTION_25	SWITCH_3	SWITCH_7
0x3bc5	            0xeb71	                           jmp 0x4003c78	      1306	state.c	FUNCTION_25	SWITCH_3	SWITCH_7
0x3bc7	          0x83f806	                              cmp eax, 6	      1303	state.c	FUNCTION_25	SWITCH_3	SWITCH_7
0x3bca	            0x742c	                            je 0x4003c38	      1303	state.c	FUNCTION_25	SWITCH_3	SWITCH_7
0x3bcc	      0xe98e070000	                           jmp 0x400439f	      1315	state.c	FUNCTION_25	SWITCH_3
0x3bd1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1308	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_101
0x3bd5	          0x488b00	                    mov rax, qword [rax]	      1308	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_101
0x3bd8	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1308	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_101
0x3bdc	          0x4889d1	                            mov rcx, rdx	      1308	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_101
0x3bdf	      0xba00000000	                              mov edx, 0	      1308	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_101
0x3be4	      0xbe9b000000	                           mov esi, 0x9b	      1308	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_101
0x3be9	          0x4889c7	                            mov rdi, rax	      1308	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_101
0x3bec	      0xb800000000	                              mov eax, 0	      1308	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_101
0x3bf1	      0xe800000000	                          call 0x4003c36	      1308	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_101
0x3bf6	            0xeb40	                           jmp 0x4003c78	      1309	state.c	FUNCTION_25	SWITCH_3	SWITCH_7
0x3bf8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_102
0x3bfc	          0x8b4034	            mov eax, dword [rax + 0x34] 	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_102
0x3bff	          0x8d7001	                      lea esi, [rax + 1]	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_102
0x3c02	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_102
0x3c06	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_102
0x3c09	          0x8d4801	                      lea ecx, [rax + 1]	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_102
0x3c0c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_102
0x3c10	          0x488b00	                    mov rax, qword [rax]	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_102
0x3c13	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_102
0x3c17	          0x4189f1	                            mov r9d, esi	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_102
0x3c1a	          0x4189c8	                            mov r8d, ecx	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_102
0x3c1d	          0x4889d1	                            mov rcx, rdx	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_102
0x3c20	      0xba00000000	                              mov edx, 0	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_102
0x3c25	      0xbe9b000000	                           mov esi, 0x9b	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_102
0x3c2a	          0x4889c7	                            mov rdi, rax	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_102
0x3c2d	      0xb800000000	                              mov eax, 0	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_102
0x3c32	      0xe800000000	                          call 0x4003c77	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_102
0x3c37	              0x90	                                     nop	      1312	state.c	FUNCTION_25	SWITCH_3	SWITCH_7
0x3c38	      0xe922070000	                           jmp 0x400439f	      1315	state.c	FUNCTION_25	SWITCH_3
0x3c3d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1319	state.c	FUNCTION_25	SWITCH_3	CALL_104
0x3c41	      0xbe00000000	                              mov esi, 0	      1319	state.c	FUNCTION_25	SWITCH_3	CALL_104
0x3c46	          0x4889c7	                            mov rdi, rax	      1319	state.c	FUNCTION_25	SWITCH_3	CALL_104
0x3c49	      0xe800000000	                          call 0x4003c8e	      1319	state.c	FUNCTION_25	SWITCH_3	CALL_104
0x3c4e	      0xe91f070000	                           jmp 0x40043b2	      1320	state.c	FUNCTION_25	SWITCH_3
0x3c53	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1323	state.c	FUNCTION_25	SWITCH_3	CALL_108
0x3c57	          0x488b00	                    mov rax, qword [rax]	      1323	state.c	FUNCTION_25	SWITCH_3	CALL_108
0x3c5a	      0x25ffffff7f	                     and eax, 0x7fffffff	      1323	state.c	FUNCTION_25	SWITCH_3	CALL_108
0x3c5f	            0x89c2	                            mov edx, eax	      1323	state.c	FUNCTION_25	SWITCH_3	CALL_108
0x3c61	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1323	state.c	FUNCTION_25	SWITCH_3	CALL_108
0x3c65	            0x89d6	                            mov esi, edx	      1323	state.c	FUNCTION_25	SWITCH_3	CALL_108
0x3c67	          0x4889c7	                            mov rdi, rax	      1323	state.c	FUNCTION_25	SWITCH_3	CALL_108
0x3c6a	      0xe8c5e4ffff	               call sym.request_dec_mode	      1323	state.c	FUNCTION_25	SWITCH_3	CALL_108
0x3c6f	      0xe9fe060000	                           jmp 0x40043b2	      1324	state.c	FUNCTION_25	SWITCH_3
0x3c74	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1327	state.c	FUNCTION_25	SWITCH_3	CALL_110
0x3c78	          0x488b00	                    mov rax, qword [rax]	      1327	state.c	FUNCTION_25	SWITCH_3	CALL_110
0x3c7b	      0x25ffffff7f	                     and eax, 0x7fffffff	      1327	state.c	FUNCTION_25	SWITCH_3	CALL_110
0x3c80	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1327	state.c	FUNCTION_25	SWITCH_3	CALL_110
0x3c86	            0x740e	                            je 0x4003cd6	      1327	state.c	FUNCTION_25	SWITCH_3	CALL_110
0x3c88	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1327	state.c	FUNCTION_25	SWITCH_3	CALL_110
0x3c8c	          0x488b00	                    mov rax, qword [rax]	      1327	state.c	FUNCTION_25	SWITCH_3	CALL_110
0x3c8f	      0x25ffffff7f	                     and eax, 0x7fffffff	      1327	state.c	FUNCTION_25	SWITCH_3	CALL_110
0x3c94	            0xeb05	                           jmp 0x4003cdb	      1327	state.c	FUNCTION_25	SWITCH_3	CALL_110
0x3c96	      0xb801000000	                              mov eax, 1	      1327	state.c	FUNCTION_25	SWITCH_3	CALL_110
0x3c9b	          0x8945b8	             mov dword [rbp - 0x48], eax	      1327	state.c	FUNCTION_25	SWITCH_3	CALL_110
0x3c9e	        0x837db806	               cmp dword [rbp - 0x48], 6	      1329	state.c	FUNCTION_25	SWITCH_3	SWITCH_8
0x3ca2	     0xf87ba060000	                            ja 0x40043a2	      1329	state.c	FUNCTION_25	SWITCH_3	SWITCH_8
0x3ca8	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1329	state.c	FUNCTION_25	SWITCH_3	SWITCH_8
0x3cab	    0x488b04c50000	                  mov rax, qword [rax*8]	      1329	state.c	FUNCTION_25	SWITCH_3	SWITCH_8
0x3cb3	            0xffe0	                                 jmp rax	      1329	state.c	FUNCTION_25	SWITCH_3	SWITCH_8
0x3cb5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1331	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_111
0x3cb9	      0xba01000000	                              mov edx, 1	      1331	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_111
0x3cbe	      0xbe02000000	                              mov esi, 2	      1331	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_111
0x3cc3	          0x4889c7	                            mov rdi, rax	      1331	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_111
0x3cc6	      0xe8f5d7ffff	               call sym.settermprop_bool	      1331	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_111
0x3ccb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1332	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_112
0x3ccf	      0xba01000000	                              mov edx, 1	      1332	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_112
0x3cd4	      0xbe07000000	                              mov esi, 7	      1332	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_112
0x3cd9	          0x4889c7	                            mov rdi, rax	      1332	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_112
0x3cdc	      0xe831d8ffff	                call sym.settermprop_int	      1332	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_112
0x3ce1	      0xe9eb000000	                           jmp 0x4003e11	      1333	state.c	FUNCTION_25	SWITCH_3	SWITCH_8
0x3ce6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1335	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_113
0x3cea	      0xba00000000	                              mov edx, 0	      1335	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_113
0x3cef	      0xbe02000000	                              mov esi, 2	      1335	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_113
0x3cf4	          0x4889c7	                            mov rdi, rax	      1335	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_113
0x3cf7	      0xe8c4d7ffff	               call sym.settermprop_bool	      1335	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_113
0x3cfc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1336	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_114
0x3d00	      0xba01000000	                              mov edx, 1	      1336	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_114
0x3d05	      0xbe07000000	                              mov esi, 7	      1336	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_114
0x3d0a	          0x4889c7	                            mov rdi, rax	      1336	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_114
0x3d0d	      0xe800d8ffff	                call sym.settermprop_int	      1336	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_114
0x3d12	      0xe9ba000000	                           jmp 0x4003e11	      1337	state.c	FUNCTION_25	SWITCH_3	SWITCH_8
0x3d17	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1339	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_115
0x3d1b	      0xba01000000	                              mov edx, 1	      1339	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_115
0x3d20	      0xbe02000000	                              mov esi, 2	      1339	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_115
0x3d25	          0x4889c7	                            mov rdi, rax	      1339	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_115
0x3d28	      0xe893d7ffff	               call sym.settermprop_bool	      1339	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_115
0x3d2d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1340	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_116
0x3d31	      0xba02000000	                              mov edx, 2	      1340	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_116
0x3d36	      0xbe07000000	                              mov esi, 7	      1340	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_116
0x3d3b	          0x4889c7	                            mov rdi, rax	      1340	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_116
0x3d3e	      0xe8cfd7ffff	                call sym.settermprop_int	      1340	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_116
0x3d43	      0xe989000000	                           jmp 0x4003e11	      1341	state.c	FUNCTION_25	SWITCH_3	SWITCH_8
0x3d48	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1343	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_117
0x3d4c	      0xba00000000	                              mov edx, 0	      1343	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_117
0x3d51	      0xbe02000000	                              mov esi, 2	      1343	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_117
0x3d56	          0x4889c7	                            mov rdi, rax	      1343	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_117
0x3d59	      0xe862d7ffff	               call sym.settermprop_bool	      1343	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_117
0x3d5e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1344	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_118
0x3d62	      0xba02000000	                              mov edx, 2	      1344	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_118
0x3d67	      0xbe07000000	                              mov esi, 7	      1344	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_118
0x3d6c	          0x4889c7	                            mov rdi, rax	      1344	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_118
0x3d6f	      0xe89ed7ffff	                call sym.settermprop_int	      1344	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_118
0x3d74	            0xeb5b	                           jmp 0x4003e11	      1345	state.c	FUNCTION_25	SWITCH_3	SWITCH_8
0x3d76	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1347	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_119
0x3d7a	      0xba01000000	                              mov edx, 1	      1347	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_119
0x3d7f	      0xbe02000000	                              mov esi, 2	      1347	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_119
0x3d84	          0x4889c7	                            mov rdi, rax	      1347	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_119
0x3d87	      0xe834d7ffff	               call sym.settermprop_bool	      1347	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_119
0x3d8c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1348	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_120
0x3d90	      0xba03000000	                              mov edx, 3	      1348	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_120
0x3d95	      0xbe07000000	                              mov esi, 7	      1348	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_120
0x3d9a	          0x4889c7	                            mov rdi, rax	      1348	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_120
0x3d9d	      0xe870d7ffff	                call sym.settermprop_int	      1348	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_120
0x3da2	            0xeb2d	                           jmp 0x4003e11	      1349	state.c	FUNCTION_25	SWITCH_3	SWITCH_8
0x3da4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1351	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_121
0x3da8	      0xba00000000	                              mov edx, 0	      1351	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_121
0x3dad	      0xbe02000000	                              mov esi, 2	      1351	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_121
0x3db2	          0x4889c7	                            mov rdi, rax	      1351	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_121
0x3db5	      0xe806d7ffff	               call sym.settermprop_bool	      1351	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_121
0x3dba	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1352	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_122
0x3dbe	      0xba03000000	                              mov edx, 3	      1352	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_122
0x3dc3	      0xbe07000000	                              mov esi, 7	      1352	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_122
0x3dc8	          0x4889c7	                            mov rdi, rax	      1352	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_122
0x3dcb	      0xe842d7ffff	                call sym.settermprop_int	      1352	state.c	FUNCTION_25	SWITCH_3	SWITCH_8	CALL_122
0x3dd0	              0x90	                                     nop	      1353	state.c	FUNCTION_25	SWITCH_3	SWITCH_8
0x3dd1	      0xe98c050000	                           jmp 0x40043a2	      1356	state.c	FUNCTION_25	SWITCH_3
0x3dd6	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1359	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x3dda	          0x488b00	                    mov rax, qword [rax]	      1359	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x3ddd	      0x25ffffff7f	                     and eax, 0x7fffffff	      1359	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x3de2	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1359	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x3de8	            0x740e	                            je 0x4003e38	      1359	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x3dea	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1359	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x3dee	          0x488b00	                    mov rax, qword [rax]	      1359	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x3df1	      0x25ffffff7f	                     and eax, 0x7fffffff	      1359	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x3df6	            0xeb05	                           jmp 0x4003e3d	      1359	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x3df8	      0xb800000000	                              mov eax, 0	      1359	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x3dfd	          0x8945b8	             mov dword [rbp - 0x48], eax	      1359	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x3e00	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1361	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x3e03	          0x83f801	                              cmp eax, 1	      1361	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x3e06	            0x7424	                            je 0x4003e6c	      1361	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x3e08	          0x83f802	                              cmp eax, 2	      1361	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x3e0b	            0x7409	                            je 0x4003e56	      1361	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x3e0d	            0x85c0	                           test eax, eax	      1361	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x3e0f	            0x7405	                            je 0x4003e56	      1361	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x3e11	      0xe95c050000	                           jmp 0x40043b2	      1370	state.c	FUNCTION_25	SWITCH_3
0x3e16	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1363	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x3e1a	     0xfb6907c0100	          movzx edx, byte [rax + 0x17c] 	      1363	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x3e21	          0x83e2fe	                     and edx, 0xfffffffe	      1363	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x3e24	    0x88907c010000	              mov byte [rax + 0x17c], dl	      1363	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x3e2a	            0xeb15	                           jmp 0x4003e81	      1364	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x3e2c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1366	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x3e30	     0xfb6907c0100	          movzx edx, byte [rax + 0x17c] 	      1366	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x3e37	          0x83ca01	                               or edx, 1	      1366	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x3e3a	    0x88907c010000	              mov byte [rax + 0x17c], dl	      1366	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x3e40	              0x90	                                     nop	      1367	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x3e41	      0xe92c050000	                           jmp 0x40043b2	      1370	state.c	FUNCTION_25	SWITCH_3
0x3e46	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_125
0x3e4a	          0x488b00	                    mov rax, qword [rax]	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_125
0x3e4d	      0x25ffffff7f	                     and eax, 0x7fffffff	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_125
0x3e52	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_125
0x3e58	            0x7413	                            je 0x4003ead	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_125
0x3e5a	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_125
0x3e5e	          0x488b00	                    mov rax, qword [rax]	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_125
0x3e61	      0x25ffffff7f	                     and eax, 0x7fffffff	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_125
0x3e66	          0x83e801	                              sub eax, 1	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_125
0x3e69	            0x89c2	                            mov edx, eax	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_125
0x3e6b	            0xeb05	                           jmp 0x4003eb2	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_125
0x3e6d	      0xba00000000	                              mov edx, 0	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_125
0x3e72	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_125
0x3e76	          0x89503c	             mov dword [rax + 0x3c], edx	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_125
0x3e79	        0x837d8c01	               cmp dword [rbp - 0x74], 1	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x3e7d	            0x7e2c	                           jle 0x4003eeb	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x3e7f	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x3e83	        0x4883c008	                              add rax, 8	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x3e87	          0x488b00	                    mov rax, qword [rax]	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x3e8a	      0x25ffffff7f	                     and eax, 0x7fffffff	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x3e8f	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x3e95	            0x7414	                            je 0x4003eeb	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x3e97	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x3e9b	        0x4883c008	                              add rax, 8	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x3e9f	          0x488b00	                    mov rax, qword [rax]	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x3ea2	      0x25ffffff7f	                     and eax, 0x7fffffff	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x3ea7	            0x89c2	                            mov edx, eax	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x3ea9	            0xeb05	                           jmp 0x4003ef0	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x3eab	      0xbaffffffff	                     mov edx, 0xffffffff	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x3eb0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x3eb4	          0x895040	             mov dword [rax + 0x40], edx	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x3eb7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1375	state.c	FUNCTION_25	SWITCH_3	CALL_128
0x3ebb	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      1375	state.c	FUNCTION_25	SWITCH_3	CALL_128
0x3ebe	            0x85c0	                           test eax, eax	      1375	state.c	FUNCTION_25	SWITCH_3	CALL_128
0x3ec0	            0x790b	                           jns 0x4003f0d	      1375	state.c	FUNCTION_25	SWITCH_3	CALL_128
0x3ec2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1375	state.c	FUNCTION_25	SWITCH_3	CALL_128
0x3ec6	    0xc7403c000000	               mov dword [rax + 0x3c], 0	      1375	state.c	FUNCTION_25	SWITCH_3	CALL_128
0x3ecd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1376	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x3ed1	          0x8b503c	            mov edx, dword [rax + 0x3c] 	      1376	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x3ed4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1376	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x3ed8	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1376	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x3edb	            0x39c2	                            cmp edx, eax	      1376	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x3edd	            0x7e0e	                           jle 0x4003f2d	      1376	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x3edf	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1376	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x3ee3	          0x8b5028	            mov edx, dword [rax + 0x28] 	      1376	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x3ee6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1376	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x3eea	          0x89503c	             mov dword [rax + 0x3c], edx	      1376	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x3eed	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1377	state.c	FUNCTION_25	SWITCH_3	CALL_130
0x3ef1	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1377	state.c	FUNCTION_25	SWITCH_3	CALL_130
0x3ef4	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1377	state.c	FUNCTION_25	SWITCH_3	CALL_130
0x3ef7	            0x7d0b	                           jge 0x4003f44	      1377	state.c	FUNCTION_25	SWITCH_3	CALL_130
0x3ef9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1377	state.c	FUNCTION_25	SWITCH_3	CALL_130
0x3efd	    0xc74040ffffff	     mov dword [rax + 0x40], 0xffffffff 	      1377	state.c	FUNCTION_25	SWITCH_3	CALL_130
0x3f04	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1378	state.c	FUNCTION_25	SWITCH_3	IF_24
0x3f08	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      1378	state.c	FUNCTION_25	SWITCH_3	IF_24
0x3f0b	            0x85c0	                           test eax, eax	      1378	state.c	FUNCTION_25	SWITCH_3	IF_24
0x3f0d	            0x751f	                           jne 0x4003f6e	      1378	state.c	FUNCTION_25	SWITCH_3	IF_24
0x3f0f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1378	state.c	FUNCTION_25	SWITCH_3	IF_24
0x3f13	          0x8b5040	            mov edx, dword [rax + 0x40] 	      1378	state.c	FUNCTION_25	SWITCH_3	IF_24
0x3f16	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1378	state.c	FUNCTION_25	SWITCH_3	IF_24
0x3f1a	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1378	state.c	FUNCTION_25	SWITCH_3	IF_24
0x3f1d	            0x39c2	                            cmp edx, eax	      1378	state.c	FUNCTION_25	SWITCH_3	IF_24
0x3f1f	            0x750d	                           jne 0x4003f6e	      1378	state.c	FUNCTION_25	SWITCH_3	IF_24
0x3f21	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1379	state.c	FUNCTION_25	SWITCH_3	IF_24
0x3f25	    0xc74040ffffff	     mov dword [rax + 0x40], 0xffffffff 	      1379	state.c	FUNCTION_25	SWITCH_3	IF_24
0x3f2c	            0xeb20	                           jmp 0x4003f8e	      1379	state.c	FUNCTION_25	SWITCH_3	IF_24
0x3f2e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1381	state.c	FUNCTION_25	SWITCH_3	CALL_131
0x3f32	          0x8b5040	            mov edx, dword [rax + 0x40] 	      1381	state.c	FUNCTION_25	SWITCH_3	CALL_131
0x3f35	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1381	state.c	FUNCTION_25	SWITCH_3	CALL_131
0x3f39	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1381	state.c	FUNCTION_25	SWITCH_3	CALL_131
0x3f3c	            0x39c2	                            cmp edx, eax	      1381	state.c	FUNCTION_25	SWITCH_3	CALL_131
0x3f3e	            0x7e0e	                           jle 0x4003f8e	      1381	state.c	FUNCTION_25	SWITCH_3	CALL_131
0x3f40	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1381	state.c	FUNCTION_25	SWITCH_3	CALL_131
0x3f44	          0x8b5028	            mov edx, dword [rax + 0x28] 	      1381	state.c	FUNCTION_25	SWITCH_3	CALL_131
0x3f47	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1381	state.c	FUNCTION_25	SWITCH_3	CALL_131
0x3f4b	          0x895040	             mov dword [rax + 0x40], edx	      1381	state.c	FUNCTION_25	SWITCH_3	CALL_131
0x3f4e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1383	state.c	FUNCTION_25	SWITCH_3	IF_25	CALL_132
0x3f52	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1383	state.c	FUNCTION_25	SWITCH_3	IF_25	CALL_132
0x3f55	            0x85c0	                           test eax, eax	      1383	state.c	FUNCTION_25	SWITCH_3	IF_25	CALL_132
0x3f57	            0x7809	                            js 0x4003fa2	      1383	state.c	FUNCTION_25	SWITCH_3	IF_25	CALL_132
0x3f59	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1383	state.c	FUNCTION_25	SWITCH_3	IF_25	CALL_132
0x3f5d	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1383	state.c	FUNCTION_25	SWITCH_3	IF_25	CALL_132
0x3f60	            0xeb07	                           jmp 0x4003fa9	      1383	state.c	FUNCTION_25	SWITCH_3	IF_25	CALL_132
0x3f62	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1383	state.c	FUNCTION_25	SWITCH_3	IF_25	CALL_132
0x3f66	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1383	state.c	FUNCTION_25	SWITCH_3	IF_25	CALL_132
0x3f69	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1383	state.c	FUNCTION_25	SWITCH_3	IF_25	CALL_132
0x3f6d	          0x8b523c	            mov edx, dword [rdx + 0x3c] 	      1383	state.c	FUNCTION_25	SWITCH_3	IF_25	CALL_132
0x3f70	            0x39d0	                            cmp eax, edx	      1383	state.c	FUNCTION_25	SWITCH_3	IF_25	CALL_132
0x3f72	     0xf8fed030000	                            jg 0x40043a5	      1383	state.c	FUNCTION_25	SWITCH_3	IF_25	CALL_132
0x3f78	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1385	state.c	FUNCTION_25	SWITCH_3	IF_25
0x3f7c	    0xc7403c000000	               mov dword [rax + 0x3c], 0	      1385	state.c	FUNCTION_25	SWITCH_3	IF_25
0x3f83	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1386	state.c	FUNCTION_25	SWITCH_3	IF_25
0x3f87	    0xc74040ffffff	     mov dword [rax + 0x40], 0xffffffff 	      1386	state.c	FUNCTION_25	SWITCH_3	IF_25
0x3f8e	      0xe9d2030000	                           jmp 0x40043a5	      1389	state.c	FUNCTION_25	SWITCH_3
0x3f93	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x3f97	          0x488b00	                    mov rax, qword [rax]	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x3f9a	      0x25ffffff7f	                     and eax, 0x7fffffff	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x3f9f	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x3fa5	            0x7413	                            je 0x4003ffa	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x3fa7	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x3fab	          0x488b00	                    mov rax, qword [rax]	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x3fae	      0x25ffffff7f	                     and eax, 0x7fffffff	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x3fb3	          0x83e801	                              sub eax, 1	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x3fb6	            0x89c2	                            mov edx, eax	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x3fb8	            0xeb05	                           jmp 0x4003fff	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x3fba	      0xba00000000	                              mov edx, 0	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x3fbf	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x3fc3	          0x895044	             mov dword [rax + 0x44], edx	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x3fc6	        0x837d8c01	               cmp dword [rbp - 0x74], 1	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_135
0x3fca	            0x7e2c	                           jle 0x4004038	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_135
0x3fcc	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_135
0x3fd0	        0x4883c008	                              add rax, 8	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_135
0x3fd4	          0x488b00	                    mov rax, qword [rax]	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_135
0x3fd7	      0x25ffffff7f	                     and eax, 0x7fffffff	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_135
0x3fdc	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_135
0x3fe2	            0x7414	                            je 0x4004038	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_135
0x3fe4	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_135
0x3fe8	        0x4883c008	                              add rax, 8	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_135
0x3fec	          0x488b00	                    mov rax, qword [rax]	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_135
0x3fef	      0x25ffffff7f	                     and eax, 0x7fffffff	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_135
0x3ff4	            0x89c2	                            mov edx, eax	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_135
0x3ff6	            0xeb05	                           jmp 0x400403d	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_135
0x3ff8	      0xbaffffffff	                     mov edx, 0xffffffff	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_135
0x3ffd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_135
0x4001	          0x895048	             mov dword [rax + 0x48], edx	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_135
0x4004	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1395	state.c	FUNCTION_25	SWITCH_3	CALL_136
0x4008	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1395	state.c	FUNCTION_25	SWITCH_3	CALL_136
0x400b	            0x85c0	                           test eax, eax	      1395	state.c	FUNCTION_25	SWITCH_3	CALL_136
0x400d	            0x790b	                           jns 0x400405a	      1395	state.c	FUNCTION_25	SWITCH_3	CALL_136
0x400f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1395	state.c	FUNCTION_25	SWITCH_3	CALL_136
0x4013	    0xc74044000000	               mov dword [rax + 0x44], 0	      1395	state.c	FUNCTION_25	SWITCH_3	CALL_136
0x401a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1396	state.c	FUNCTION_25	SWITCH_3	CALL_137
0x401e	          0x8b5044	            mov edx, dword [rax + 0x44] 	      1396	state.c	FUNCTION_25	SWITCH_3	CALL_137
0x4021	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1396	state.c	FUNCTION_25	SWITCH_3	CALL_137
0x4025	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1396	state.c	FUNCTION_25	SWITCH_3	CALL_137
0x4028	            0x39c2	                            cmp edx, eax	      1396	state.c	FUNCTION_25	SWITCH_3	CALL_137
0x402a	            0x7e0e	                           jle 0x400407a	      1396	state.c	FUNCTION_25	SWITCH_3	CALL_137
0x402c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1396	state.c	FUNCTION_25	SWITCH_3	CALL_137
0x4030	          0x8b502c	            mov edx, dword [rax + 0x2c] 	      1396	state.c	FUNCTION_25	SWITCH_3	CALL_137
0x4033	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1396	state.c	FUNCTION_25	SWITCH_3	CALL_137
0x4037	          0x895044	             mov dword [rax + 0x44], edx	      1396	state.c	FUNCTION_25	SWITCH_3	CALL_137
0x403a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1397	state.c	FUNCTION_25	SWITCH_3	CALL_138
0x403e	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1397	state.c	FUNCTION_25	SWITCH_3	CALL_138
0x4041	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1397	state.c	FUNCTION_25	SWITCH_3	CALL_138
0x4044	            0x7d0b	                           jge 0x4004091	      1397	state.c	FUNCTION_25	SWITCH_3	CALL_138
0x4046	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1397	state.c	FUNCTION_25	SWITCH_3	CALL_138
0x404a	    0xc74048ffffff	     mov dword [rax + 0x48], 0xffffffff 	      1397	state.c	FUNCTION_25	SWITCH_3	CALL_138
0x4051	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1398	state.c	FUNCTION_25	SWITCH_3	IF_26
0x4055	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1398	state.c	FUNCTION_25	SWITCH_3	IF_26
0x4058	            0x85c0	                           test eax, eax	      1398	state.c	FUNCTION_25	SWITCH_3	IF_26
0x405a	            0x751f	                           jne 0x40040bb	      1398	state.c	FUNCTION_25	SWITCH_3	IF_26
0x405c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1398	state.c	FUNCTION_25	SWITCH_3	IF_26
0x4060	          0x8b5048	            mov edx, dword [rax + 0x48] 	      1398	state.c	FUNCTION_25	SWITCH_3	IF_26
0x4063	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1398	state.c	FUNCTION_25	SWITCH_3	IF_26
0x4067	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1398	state.c	FUNCTION_25	SWITCH_3	IF_26
0x406a	            0x39c2	                            cmp edx, eax	      1398	state.c	FUNCTION_25	SWITCH_3	IF_26
0x406c	            0x750d	                           jne 0x40040bb	      1398	state.c	FUNCTION_25	SWITCH_3	IF_26
0x406e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1399	state.c	FUNCTION_25	SWITCH_3	IF_26
0x4072	    0xc74048ffffff	     mov dword [rax + 0x48], 0xffffffff 	      1399	state.c	FUNCTION_25	SWITCH_3	IF_26
0x4079	            0xeb20	                           jmp 0x40040db	      1399	state.c	FUNCTION_25	SWITCH_3	IF_26
0x407b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1401	state.c	FUNCTION_25	SWITCH_3	CALL_139
0x407f	          0x8b5048	            mov edx, dword [rax + 0x48] 	      1401	state.c	FUNCTION_25	SWITCH_3	CALL_139
0x4082	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1401	state.c	FUNCTION_25	SWITCH_3	CALL_139
0x4086	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1401	state.c	FUNCTION_25	SWITCH_3	CALL_139
0x4089	            0x39c2	                            cmp edx, eax	      1401	state.c	FUNCTION_25	SWITCH_3	CALL_139
0x408b	            0x7e0e	                           jle 0x40040db	      1401	state.c	FUNCTION_25	SWITCH_3	CALL_139
0x408d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1401	state.c	FUNCTION_25	SWITCH_3	CALL_139
0x4091	          0x8b502c	            mov edx, dword [rax + 0x2c] 	      1401	state.c	FUNCTION_25	SWITCH_3	CALL_139
0x4094	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1401	state.c	FUNCTION_25	SWITCH_3	CALL_139
0x4098	          0x895048	             mov dword [rax + 0x48], edx	      1401	state.c	FUNCTION_25	SWITCH_3	CALL_139
0x409b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1403	state.c	FUNCTION_25	SWITCH_3	IF_27
0x409f	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1403	state.c	FUNCTION_25	SWITCH_3	IF_27
0x40a2	            0x85c0	                           test eax, eax	      1403	state.c	FUNCTION_25	SWITCH_3	IF_27
0x40a4	     0xf88be020000	                            js 0x40043a8	      1403	state.c	FUNCTION_25	SWITCH_3	IF_27
0x40aa	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1404	state.c	FUNCTION_25	SWITCH_3	IF_27
0x40ae	          0x8b5048	            mov edx, dword [rax + 0x48] 	      1404	state.c	FUNCTION_25	SWITCH_3	IF_27
0x40b1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1404	state.c	FUNCTION_25	SWITCH_3	IF_27
0x40b5	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1404	state.c	FUNCTION_25	SWITCH_3	IF_27
0x40b8	            0x39c2	                            cmp edx, eax	      1403	state.c	FUNCTION_25	SWITCH_3	IF_27
0x40ba	     0xf8fa8020000	                            jg 0x40043a8	      1403	state.c	FUNCTION_25	SWITCH_3	IF_27
0x40c0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1406	state.c	FUNCTION_25	SWITCH_3	IF_27
0x40c4	    0xc74044000000	               mov dword [rax + 0x44], 0	      1406	state.c	FUNCTION_25	SWITCH_3	IF_27
0x40cb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1407	state.c	FUNCTION_25	SWITCH_3	IF_27
0x40cf	    0xc74048ffffff	     mov dword [rax + 0x48], 0xffffffff 	      1407	state.c	FUNCTION_25	SWITCH_3	IF_27
0x40d6	      0xe98d020000	                           jmp 0x40043a8	      1410	state.c	FUNCTION_25	SWITCH_3
0x40db	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1413	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_140
0x40df	          0x488b00	                    mov rax, qword [rax]	      1413	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_140
0x40e2	      0x25ffffff7f	                     and eax, 0x7fffffff	      1413	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_140
0x40e7	        0x4883f808	                              cmp rax, 8	      1413	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_140
0x40eb	            0x7405	                            je 0x4004132	      1413	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_140
0x40ed	      0xe979020000	                           jmp 0x40043ab	      1418	state.c	FUNCTION_25	SWITCH_3
0x40f2	        0x837d8c03	               cmp dword [rbp - 0x74], 3	      1415	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	IF_28
0x40f6	     0xf856f020000	                           jne 0x40043ab	      1415	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	IF_28
0x40fc	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_143
0x4100	        0x4883c010	                           add rax, 0x10	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_143
0x4104	          0x488b00	                    mov rax, qword [rax]	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_143
0x4107	      0x25ffffff7f	                     and eax, 0x7fffffff	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_143
0x410c	            0x89c6	                            mov esi, eax	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_143
0x410e	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_143
0x4112	        0x4883c008	                              add rax, 8	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_143
0x4116	          0x488b00	                    mov rax, qword [rax]	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_143
0x4119	      0x25ffffff7f	                     and eax, 0x7fffffff	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_143
0x411e	            0x89c1	                            mov ecx, eax	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_143
0x4120	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_143
0x4124	          0x4889c2	                            mov rdx, rax	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_143
0x4127	            0x89cf	                            mov edi, ecx	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_143
0x4129	      0xe80f0c0000	                      call sym.on_resize	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_143
0x412e	      0xe938020000	                           jmp 0x40043ab	      1418	state.c	FUNCTION_25	SWITCH_3
0x4133	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_145
0x4137	          0x488b00	                    mov rax, qword [rax]	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_145
0x413a	      0x25ffffff7f	                     and eax, 0x7fffffff	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_145
0x413f	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_145
0x4145	            0x741f	                            je 0x40041a6	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_145
0x4147	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_145
0x414b	          0x488b00	                    mov rax, qword [rax]	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_145
0x414e	      0x25ffffff7f	                     and eax, 0x7fffffff	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_145
0x4153	          0x4885c0	                           test rax, rax	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_145
0x4156	            0x740e	                            je 0x40041a6	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_145
0x4158	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_145
0x415c	          0x488b00	                    mov rax, qword [rax]	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_145
0x415f	      0x25ffffff7f	                     and eax, 0x7fffffff	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_145
0x4164	            0xeb05	                           jmp 0x40041ab	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_145
0x4166	      0xb801000000	                              mov eax, 1	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_145
0x416b	          0x8945bc	             mov dword [rbp - 0x44], eax	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_145
0x416e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1423	state.c	FUNCTION_25	SWITCH_3	IF_29	CALL_146
0x4172	          0x4889c7	                            mov rdi, rax	      1423	state.c	FUNCTION_25	SWITCH_3	IF_29	CALL_146
0x4175	      0xe853c6ffff	      call sym.is_cursor_in_scrollregion	      1423	state.c	FUNCTION_25	SWITCH_3	IF_29	CALL_146
0x417a	            0x85c0	                           test eax, eax	      1423	state.c	FUNCTION_25	SWITCH_3	IF_29	CALL_146
0x417c	     0xf84ec010000	                            je 0x40043ae	      1423	state.c	FUNCTION_25	SWITCH_3	IF_29	CALL_146
0x4182	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1426	state.c	FUNCTION_25	SWITCH_3
0x4186	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      1426	state.c	FUNCTION_25	SWITCH_3
0x4189	          0x8945e0	             mov dword [rbp - 0x20], eax	      1426	state.c	FUNCTION_25	SWITCH_3
0x418c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1427	state.c	FUNCTION_25	SWITCH_3	CALL_147
0x4190	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1427	state.c	FUNCTION_25	SWITCH_3	CALL_147
0x4193	            0x85c0	                           test eax, eax	      1427	state.c	FUNCTION_25	SWITCH_3	CALL_147
0x4195	            0x7809	                            js 0x40041e0	      1427	state.c	FUNCTION_25	SWITCH_3	CALL_147
0x4197	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1427	state.c	FUNCTION_25	SWITCH_3	CALL_147
0x419b	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1427	state.c	FUNCTION_25	SWITCH_3	CALL_147
0x419e	            0xeb07	                           jmp 0x40041e7	      1427	state.c	FUNCTION_25	SWITCH_3	CALL_147
0x41a0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1427	state.c	FUNCTION_25	SWITCH_3	CALL_147
0x41a4	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1427	state.c	FUNCTION_25	SWITCH_3	CALL_147
0x41a7	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1427	state.c	FUNCTION_25	SWITCH_3	CALL_147
0x41aa	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1428	state.c	FUNCTION_25	SWITCH_3
0x41ae	          0x8b4034	            mov eax, dword [rax + 0x34] 	      1428	state.c	FUNCTION_25	SWITCH_3
0x41b1	          0x8945e8	             mov dword [rbp - 0x18], eax	      1428	state.c	FUNCTION_25	SWITCH_3
0x41b4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_148
0x41b8	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_148
0x41bf	          0x83e010	                           and eax, 0x10	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_148
0x41c2	            0x84c0	                             test al, al	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_148
0x41c4	            0x7414	                            je 0x400421a	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_148
0x41c6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_148
0x41ca	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_148
0x41cd	            0x85c0	                           test eax, eax	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_148
0x41cf	            0x7809	                            js 0x400421a	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_148
0x41d1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_148
0x41d5	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_148
0x41d8	            0xeb07	                           jmp 0x4004221	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_148
0x41da	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_148
0x41de	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_148
0x41e1	          0x8945ec	             mov dword [rbp - 0x14], eax	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_148
0x41e4	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      1431	state.c	FUNCTION_25	SWITCH_3	CALL_149
0x41e7	            0xf7d8	                                 neg eax	      1431	state.c	FUNCTION_25	SWITCH_3	CALL_149
0x41e9	            0x89c1	                            mov ecx, eax	      1431	state.c	FUNCTION_25	SWITCH_3	CALL_149
0x41eb	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1431	state.c	FUNCTION_25	SWITCH_3	CALL_149
0x41ef	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1431	state.c	FUNCTION_25	SWITCH_3	CALL_149
0x41f3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1431	state.c	FUNCTION_25	SWITCH_3	CALL_149
0x41f7	          0x4189c8	                            mov r8d, ecx	      1431	state.c	FUNCTION_25	SWITCH_3	CALL_149
0x41fa	      0xb900000000	                              mov ecx, 0	      1431	state.c	FUNCTION_25	SWITCH_3	CALL_149
0x41ff	          0x4889c7	                            mov rdi, rax	      1431	state.c	FUNCTION_25	SWITCH_3	CALL_149
0x4202	      0xe82cc1ffff	                         call sym.scroll	      1431	state.c	FUNCTION_25	SWITCH_3	CALL_149
0x4207	      0xe966010000	                           jmp 0x40043b2	      1433	state.c	FUNCTION_25	SWITCH_3
0x420c	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_151
0x4210	          0x488b00	                    mov rax, qword [rax]	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_151
0x4213	      0x25ffffff7f	                     and eax, 0x7fffffff	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_151
0x4218	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_151
0x421e	            0x741f	                            je 0x400427f	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_151
0x4220	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_151
0x4224	          0x488b00	                    mov rax, qword [rax]	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_151
0x4227	      0x25ffffff7f	                     and eax, 0x7fffffff	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_151
0x422c	          0x4885c0	                           test rax, rax	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_151
0x422f	            0x740e	                            je 0x400427f	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_151
0x4231	        0x488b4590	             mov rax, qword [rbp - 0x70]	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_151
0x4235	          0x488b00	                    mov rax, qword [rax]	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_151
0x4238	      0x25ffffff7f	                     and eax, 0x7fffffff	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_151
0x423d	            0xeb05	                           jmp 0x4004284	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_151
0x423f	      0xb801000000	                              mov eax, 1	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_151
0x4244	          0x8945bc	             mov dword [rbp - 0x44], eax	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_151
0x4247	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1438	state.c	FUNCTION_25	SWITCH_3	IF_30	CALL_152
0x424b	          0x4889c7	                            mov rdi, rax	      1438	state.c	FUNCTION_25	SWITCH_3	IF_30	CALL_152
0x424e	      0xe87ac5ffff	      call sym.is_cursor_in_scrollregion	      1438	state.c	FUNCTION_25	SWITCH_3	IF_30	CALL_152
0x4253	            0x85c0	                           test eax, eax	      1438	state.c	FUNCTION_25	SWITCH_3	IF_30	CALL_152
0x4255	     0xf8416010000	                            je 0x40043b1	      1438	state.c	FUNCTION_25	SWITCH_3	IF_30	CALL_152
0x425b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1441	state.c	FUNCTION_25	SWITCH_3
0x425f	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      1441	state.c	FUNCTION_25	SWITCH_3
0x4262	          0x8945e0	             mov dword [rbp - 0x20], eax	      1441	state.c	FUNCTION_25	SWITCH_3
0x4265	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1442	state.c	FUNCTION_25	SWITCH_3	CALL_153
0x4269	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1442	state.c	FUNCTION_25	SWITCH_3	CALL_153
0x426c	            0x85c0	                           test eax, eax	      1442	state.c	FUNCTION_25	SWITCH_3	CALL_153
0x426e	            0x7809	                            js 0x40042b9	      1442	state.c	FUNCTION_25	SWITCH_3	CALL_153
0x4270	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1442	state.c	FUNCTION_25	SWITCH_3	CALL_153
0x4274	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1442	state.c	FUNCTION_25	SWITCH_3	CALL_153
0x4277	            0xeb07	                           jmp 0x40042c0	      1442	state.c	FUNCTION_25	SWITCH_3	CALL_153
0x4279	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1442	state.c	FUNCTION_25	SWITCH_3	CALL_153
0x427d	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1442	state.c	FUNCTION_25	SWITCH_3	CALL_153
0x4280	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1442	state.c	FUNCTION_25	SWITCH_3	CALL_153
0x4283	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1443	state.c	FUNCTION_25	SWITCH_3
0x4287	          0x8b4034	            mov eax, dword [rax + 0x34] 	      1443	state.c	FUNCTION_25	SWITCH_3
0x428a	          0x8945e8	             mov dword [rbp - 0x18], eax	      1443	state.c	FUNCTION_25	SWITCH_3
0x428d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_154
0x4291	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_154
0x4298	          0x83e010	                           and eax, 0x10	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_154
0x429b	            0x84c0	                             test al, al	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_154
0x429d	            0x7414	                            je 0x40042f3	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_154
0x429f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_154
0x42a3	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_154
0x42a6	            0x85c0	                           test eax, eax	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_154
0x42a8	            0x7809	                            js 0x40042f3	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_154
0x42aa	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_154
0x42ae	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_154
0x42b1	            0xeb07	                           jmp 0x40042fa	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_154
0x42b3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_154
0x42b7	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_154
0x42ba	          0x8945ec	             mov dword [rbp - 0x14], eax	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_154
0x42bd	          0x8b4dbc	             mov ecx, dword [rbp - 0x44]	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_155
0x42c0	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_155
0x42c4	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_155
0x42c8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_155
0x42cc	          0x4189c8	                            mov r8d, ecx	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_155
0x42cf	      0xb900000000	                              mov ecx, 0	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_155
0x42d4	          0x4889c7	                            mov rdi, rax	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_155
0x42d7	      0xe857c0ffff	                         call sym.scroll	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_155
0x42dc	      0xe991000000	                           jmp 0x40043b2	      1448	state.c	FUNCTION_25	SWITCH_3
0x42e1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1451	state.c	FUNCTION_25	SWITCH_3	IF_31
0x42e5	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1451	state.c	FUNCTION_25	SWITCH_3	IF_31
0x42e9	          0x4885c0	                           test rax, rax	      1451	state.c	FUNCTION_25	SWITCH_3	IF_31
0x42ec	            0x7449	                            je 0x4004377	      1451	state.c	FUNCTION_25	SWITCH_3	IF_31
0x42ee	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1451	state.c	FUNCTION_25	SWITCH_3	IF_31
0x42f2	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1451	state.c	FUNCTION_25	SWITCH_3	IF_31
0x42f6	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1451	state.c	FUNCTION_25	SWITCH_3	IF_31
0x42fa	          0x4885c0	                           test rax, rax	      1451	state.c	FUNCTION_25	SWITCH_3	IF_31
0x42fd	            0x7438	                            je 0x4004377	      1451	state.c	FUNCTION_25	SWITCH_3	IF_31
0x42ff	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1452	state.c	FUNCTION_25	SWITCH_3	IF_31	IF_32
0x4303	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1452	state.c	FUNCTION_25	SWITCH_3	IF_31	IF_32
0x4307	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1452	state.c	FUNCTION_25	SWITCH_3	IF_31	IF_32
0x430b	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1452	state.c	FUNCTION_25	SWITCH_3	IF_31	IF_32
0x430f	        0x4c8b4a20	              mov r9, qword [rdx + 0x20]	      1452	state.c	FUNCTION_25	SWITCH_3	IF_31	IF_32
0x4313	      0x440fbe4588	            movsx r8d, byte [rbp - 0x78]	      1452	state.c	FUNCTION_25	SWITCH_3	IF_31	IF_32
0x4318	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	      1452	state.c	FUNCTION_25	SWITCH_3	IF_31	IF_32
0x431c	          0x8b558c	             mov edx, dword [rbp - 0x74]	      1452	state.c	FUNCTION_25	SWITCH_3	IF_31	IF_32
0x431f	        0x488b7590	             mov rsi, qword [rbp - 0x70]	      1452	state.c	FUNCTION_25	SWITCH_3	IF_31	IF_32
0x4323	        0x488b7d98	             mov rdi, qword [rbp - 0x68]	      1452	state.c	FUNCTION_25	SWITCH_3	IF_31	IF_32
0x4327	            0xffd0	                                call rax	      1452	state.c	FUNCTION_25	SWITCH_3	IF_31	IF_32
0x4329	            0x85c0	                           test eax, eax	      1452	state.c	FUNCTION_25	SWITCH_3	IF_31	IF_32
0x432b	            0x740a	                            je 0x4004377	      1452	state.c	FUNCTION_25	SWITCH_3	IF_31	IF_32
0x432d	      0xb801000000	                              mov eax, 1	      1453	state.c	FUNCTION_25	SWITCH_3	IF_31	IF_32
0x4332	      0xe99b020000	                           jmp 0x4004612	      1453	state.c	FUNCTION_25	SWITCH_3	IF_31	IF_32
0x4337	      0xb800000000	                              mov eax, 0	      1455	state.c	FUNCTION_25	SWITCH_3
0x433c	      0xe991020000	                           jmp 0x4004612	      1455	state.c	FUNCTION_25	SWITCH_3
0x4341	              0x90	                                     nop	       956	state.c	FUNCTION_25	SWITCH_3	IF_5
0x4342	            0xeb2e	                           jmp 0x40043b2	       956	state.c	FUNCTION_25	SWITCH_3	IF_5
0x4344	              0x90	                                     nop	      1096	state.c	FUNCTION_25	SWITCH_3
0x4345	            0xeb2b	                           jmp 0x40043b2	      1096	state.c	FUNCTION_25	SWITCH_3
0x4347	              0x90	                                     nop	      1102	state.c	FUNCTION_25	SWITCH_3	IF_13
0x4348	            0xeb28	                           jmp 0x40043b2	      1102	state.c	FUNCTION_25	SWITCH_3	IF_13
0x434a	              0x90	                                     nop	      1117	state.c	FUNCTION_25	SWITCH_3	IF_14
0x434b	            0xeb25	                           jmp 0x40043b2	      1117	state.c	FUNCTION_25	SWITCH_3	IF_14
0x434d	              0x90	                                     nop	      1132	state.c	FUNCTION_25	SWITCH_3	IF_15
0x434e	            0xeb22	                           jmp 0x40043b2	      1132	state.c	FUNCTION_25	SWITCH_3	IF_15
0x4350	              0x90	                                     nop	      1204	state.c	FUNCTION_25	SWITCH_3
0x4351	            0xeb1f	                           jmp 0x40043b2	      1204	state.c	FUNCTION_25	SWITCH_3
0x4353	              0x90	                                     nop	      1263	state.c	FUNCTION_25	SWITCH_3
0x4354	            0xeb1c	                           jmp 0x40043b2	      1263	state.c	FUNCTION_25	SWITCH_3
0x4356	              0x90	                                     nop	      1268	state.c	FUNCTION_25	SWITCH_3
0x4357	            0xeb19	                           jmp 0x40043b2	      1268	state.c	FUNCTION_25	SWITCH_3
0x4359	              0x90	                                     nop	      1285	state.c	FUNCTION_25	SWITCH_3
0x435a	            0xeb16	                           jmp 0x40043b2	      1285	state.c	FUNCTION_25	SWITCH_3
0x435c	              0x90	                                     nop	      1290	state.c	FUNCTION_25	SWITCH_3
0x435d	            0xeb13	                           jmp 0x40043b2	      1290	state.c	FUNCTION_25	SWITCH_3
0x435f	              0x90	                                     nop	      1315	state.c	FUNCTION_25	SWITCH_3
0x4360	            0xeb10	                           jmp 0x40043b2	      1315	state.c	FUNCTION_25	SWITCH_3
0x4362	              0x90	                                     nop	      1356	state.c	FUNCTION_25	SWITCH_3
0x4363	            0xeb0d	                           jmp 0x40043b2	      1356	state.c	FUNCTION_25	SWITCH_3
0x4365	              0x90	                                     nop	      1389	state.c	FUNCTION_25	SWITCH_3
0x4366	            0xeb0a	                           jmp 0x40043b2	      1389	state.c	FUNCTION_25	SWITCH_3
0x4368	              0x90	                                     nop	      1410	state.c	FUNCTION_25	SWITCH_3
0x4369	            0xeb07	                           jmp 0x40043b2	      1410	state.c	FUNCTION_25	SWITCH_3
0x436b	              0x90	                                     nop	      1418	state.c	FUNCTION_25	SWITCH_3
0x436c	            0xeb04	                           jmp 0x40043b2	      1418	state.c	FUNCTION_25	SWITCH_3
0x436e	              0x90	                                     nop	      1424	state.c	FUNCTION_25	SWITCH_3	IF_29
0x436f	            0xeb01	                           jmp 0x40043b2	      1424	state.c	FUNCTION_25	SWITCH_3	IF_29
0x4371	              0x90	                                     nop	      1439	state.c	FUNCTION_25	SWITCH_3	IF_30
0x4372	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1458	state.c	FUNCTION_25	IF_33
0x4376	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1458	state.c	FUNCTION_25	IF_33
0x437d	          0x83e004	                              and eax, 4	      1458	state.c	FUNCTION_25	IF_33
0x4380	            0x84c0	                             test al, al	      1458	state.c	FUNCTION_25	IF_33
0x4382	     0xf8447010000	                            je 0x400450f	      1458	state.c	FUNCTION_25	IF_33
0x4388	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1459	state.c	FUNCTION_25	IF_33	CALL_156
0x438c	          0x8b5030	            mov edx, dword [rax + 0x30] 	      1459	state.c	FUNCTION_25	IF_33	CALL_156
0x438f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1459	state.c	FUNCTION_25	IF_33	CALL_156
0x4393	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      1459	state.c	FUNCTION_25	IF_33	CALL_156
0x4396	            0x39c2	                            cmp edx, eax	      1459	state.c	FUNCTION_25	IF_33	CALL_156
0x4398	            0x7d0e	                           jge 0x40043e8	      1459	state.c	FUNCTION_25	IF_33	CALL_156
0x439a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1459	state.c	FUNCTION_25	IF_33	CALL_156
0x439e	          0x8b503c	            mov edx, dword [rax + 0x3c] 	      1459	state.c	FUNCTION_25	IF_33	CALL_156
0x43a1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1459	state.c	FUNCTION_25	IF_33	CALL_156
0x43a5	          0x895030	             mov dword [rax + 0x30], edx	      1459	state.c	FUNCTION_25	IF_33	CALL_156
0x43a8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1460	state.c	FUNCTION_25	IF_33	CALL_158
0x43ac	          0x8b5030	            mov edx, dword [rax + 0x30] 	      1460	state.c	FUNCTION_25	IF_33	CALL_158
0x43af	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1460	state.c	FUNCTION_25	IF_33	CALL_158
0x43b3	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1460	state.c	FUNCTION_25	IF_33	CALL_158
0x43b6	            0x85c0	                           test eax, eax	      1460	state.c	FUNCTION_25	IF_33	CALL_158
0x43b8	            0x780c	                            js 0x4004406	      1460	state.c	FUNCTION_25	IF_33	CALL_158
0x43ba	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1460	state.c	FUNCTION_25	IF_33	CALL_158
0x43be	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1460	state.c	FUNCTION_25	IF_33	CALL_158
0x43c1	          0x83e801	                              sub eax, 1	      1460	state.c	FUNCTION_25	IF_33	CALL_158
0x43c4	            0xeb0a	                           jmp 0x4004410	      1460	state.c	FUNCTION_25	IF_33	CALL_158
0x43c6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1460	state.c	FUNCTION_25	IF_33	CALL_158
0x43ca	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1460	state.c	FUNCTION_25	IF_33	CALL_158
0x43cd	          0x83e801	                              sub eax, 1	      1460	state.c	FUNCTION_25	IF_33	CALL_158
0x43d0	            0x39c2	                            cmp edx, eax	      1460	state.c	FUNCTION_25	IF_33	CALL_158
0x43d2	            0x7e28	                           jle 0x400443c	      1460	state.c	FUNCTION_25	IF_33	CALL_158
0x43d4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1460	state.c	FUNCTION_25	IF_33	CALL_158
0x43d8	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1460	state.c	FUNCTION_25	IF_33	CALL_158
0x43db	            0x85c0	                           test eax, eax	      1460	state.c	FUNCTION_25	IF_33	CALL_158
0x43dd	            0x780c	                            js 0x400442b	      1460	state.c	FUNCTION_25	IF_33	CALL_158
0x43df	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1460	state.c	FUNCTION_25	IF_33	CALL_158
0x43e3	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1460	state.c	FUNCTION_25	IF_33	CALL_158
0x43e6	          0x83e801	                              sub eax, 1	      1460	state.c	FUNCTION_25	IF_33	CALL_158
0x43e9	            0xeb0a	                           jmp 0x4004435	      1460	state.c	FUNCTION_25	IF_33	CALL_158
0x43eb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1460	state.c	FUNCTION_25	IF_33	CALL_158
0x43ef	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1460	state.c	FUNCTION_25	IF_33	CALL_158
0x43f2	          0x83e801	                              sub eax, 1	      1460	state.c	FUNCTION_25	IF_33	CALL_158
0x43f5	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1460	state.c	FUNCTION_25	IF_33	CALL_158
0x43f9	          0x894230	             mov dword [rdx + 0x30], eax	      1460	state.c	FUNCTION_25	IF_33	CALL_158
0x43fc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1461	state.c	FUNCTION_25	IF_33	CALL_160
0x4400	          0x8b5034	            mov edx, dword [rax + 0x34] 	      1461	state.c	FUNCTION_25	IF_33	CALL_160
0x4403	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1461	state.c	FUNCTION_25	IF_33	CALL_160
0x4407	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1461	state.c	FUNCTION_25	IF_33	CALL_160
0x440e	          0x83e010	                           and eax, 0x10	      1461	state.c	FUNCTION_25	IF_33	CALL_160
0x4411	            0x84c0	                             test al, al	      1461	state.c	FUNCTION_25	IF_33	CALL_160
0x4413	            0x7409	                            je 0x400445e	      1461	state.c	FUNCTION_25	IF_33	CALL_160
0x4415	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1461	state.c	FUNCTION_25	IF_33	CALL_160
0x4419	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1461	state.c	FUNCTION_25	IF_33	CALL_160
0x441c	            0xeb05	                           jmp 0x4004463	      1461	state.c	FUNCTION_25	IF_33	CALL_160
0x441e	      0xb800000000	                              mov eax, 0	      1461	state.c	FUNCTION_25	IF_33	CALL_160
0x4423	            0x39c2	                            cmp edx, eax	      1461	state.c	FUNCTION_25	IF_33	CALL_160
0x4425	            0x7d27	                           jge 0x400448e	      1461	state.c	FUNCTION_25	IF_33	CALL_160
0x4427	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1461	state.c	FUNCTION_25	IF_33	CALL_160
0x442b	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1461	state.c	FUNCTION_25	IF_33	CALL_160
0x4432	          0x83e010	                           and eax, 0x10	      1461	state.c	FUNCTION_25	IF_33	CALL_160
0x4435	            0x84c0	                             test al, al	      1461	state.c	FUNCTION_25	IF_33	CALL_160
0x4437	            0x7409	                            je 0x4004482	      1461	state.c	FUNCTION_25	IF_33	CALL_160
0x4439	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1461	state.c	FUNCTION_25	IF_33	CALL_160
0x443d	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1461	state.c	FUNCTION_25	IF_33	CALL_160
0x4440	            0xeb05	                           jmp 0x4004487	      1461	state.c	FUNCTION_25	IF_33	CALL_160
0x4442	      0xb800000000	                              mov eax, 0	      1461	state.c	FUNCTION_25	IF_33	CALL_160
0x4447	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1461	state.c	FUNCTION_25	IF_33	CALL_160
0x444b	          0x894234	             mov dword [rdx + 0x34], eax	      1461	state.c	FUNCTION_25	IF_33	CALL_160
0x444e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x4452	          0x8b5034	            mov edx, dword [rax + 0x34] 	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x4455	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x4459	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x4460	          0x83e010	                           and eax, 0x10	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x4463	            0x84c0	                             test al, al	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x4465	            0x7417	                            je 0x40044be	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x4467	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x446b	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x446e	            0x85c0	                           test eax, eax	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x4470	            0x780c	                            js 0x40044be	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x4472	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x4476	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x4479	          0x83e801	                              sub eax, 1	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x447c	            0xeb0a	                           jmp 0x40044c8	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x447e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x4482	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x4485	          0x83e801	                              sub eax, 1	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x4488	            0x39c2	                            cmp edx, eax	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x448a	     0xf8e25010000	                           jle 0x40045f5	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x4490	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x4494	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x449b	          0x83e010	                           and eax, 0x10	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x449e	            0x84c0	                             test al, al	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x44a0	            0x7417	                            je 0x40044f9	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x44a2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x44a6	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x44a9	            0x85c0	                           test eax, eax	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x44ab	            0x780c	                            js 0x40044f9	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x44ad	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x44b1	          0x8b4048	            mov eax, dword [rax + 0x48] 	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x44b4	          0x83e801	                              sub eax, 1	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x44b7	            0xeb0a	                           jmp 0x4004503	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x44b9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x44bd	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x44c0	          0x83e801	                              sub eax, 1	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x44c3	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x44c7	          0x894234	             mov dword [rdx + 0x34], eax	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x44ca	      0xe9e6000000	                           jmp 0x40045f5	      1462	state.c	FUNCTION_25	IF_33	CALL_162
0x44cf	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1465	state.c	FUNCTION_25	ELSE_5	CALL_163
0x44d3	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1465	state.c	FUNCTION_25	ELSE_5	CALL_163
0x44d6	            0x85c0	                           test eax, eax	      1465	state.c	FUNCTION_25	ELSE_5	CALL_163
0x44d8	            0x790b	                           jns 0x4004525	      1465	state.c	FUNCTION_25	ELSE_5	CALL_163
0x44da	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1465	state.c	FUNCTION_25	ELSE_5	CALL_163
0x44de	    0xc74030000000	               mov dword [rax + 0x30], 0	      1465	state.c	FUNCTION_25	ELSE_5	CALL_163
0x44e5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1466	state.c	FUNCTION_25	ELSE_5	CALL_164
0x44e9	          0x8b5030	            mov edx, dword [rax + 0x30] 	      1466	state.c	FUNCTION_25	ELSE_5	CALL_164
0x44ec	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1466	state.c	FUNCTION_25	ELSE_5	CALL_164
0x44f0	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1466	state.c	FUNCTION_25	ELSE_5	CALL_164
0x44f3	          0x83e801	                              sub eax, 1	      1466	state.c	FUNCTION_25	ELSE_5	CALL_164
0x44f6	            0x39c2	                            cmp edx, eax	      1466	state.c	FUNCTION_25	ELSE_5	CALL_164
0x44f8	            0x7e11	                           jle 0x400454b	      1466	state.c	FUNCTION_25	ELSE_5	CALL_164
0x44fa	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1466	state.c	FUNCTION_25	ELSE_5	CALL_164
0x44fe	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1466	state.c	FUNCTION_25	ELSE_5	CALL_164
0x4501	          0x8d50ff	                      lea edx, [rax - 1]	      1466	state.c	FUNCTION_25	ELSE_5	CALL_164
0x4504	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1466	state.c	FUNCTION_25	ELSE_5	CALL_164
0x4508	          0x895030	             mov dword [rax + 0x30], edx	      1466	state.c	FUNCTION_25	ELSE_5	CALL_164
0x450b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1467	state.c	FUNCTION_25	ELSE_5	CALL_165
0x450f	          0x8b4034	            mov eax, dword [rax + 0x34] 	      1467	state.c	FUNCTION_25	ELSE_5	CALL_165
0x4512	            0x85c0	                           test eax, eax	      1467	state.c	FUNCTION_25	ELSE_5	CALL_165
0x4514	            0x790b	                           jns 0x4004561	      1467	state.c	FUNCTION_25	ELSE_5	CALL_165
0x4516	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1467	state.c	FUNCTION_25	ELSE_5	CALL_165
0x451a	    0xc74034000000	               mov dword [rax + 0x34], 0	      1467	state.c	FUNCTION_25	ELSE_5	CALL_165
0x4521	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x4525	          0x8b5034	            mov edx, dword [rax + 0x34] 	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x4528	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x452c	        0x488b4858	            mov rcx, qword [rax + 0x58] 	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x4530	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x4534	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x4537	            0x4898	                                    cdqe	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x4539	        0x48c1e002	                              shl rax, 2	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x453d	          0x4801c8	                            add rax, rcx	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x4540	           0xfb600	                   movzx eax, byte [rax]	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x4543	          0x83e001	                              and eax, 1	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x4546	            0x84c0	                             test al, al	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x4548	            0x7415	                            je 0x400459f	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x454a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x454e	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x4551	            0x89c1	                            mov ecx, eax	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x4553	          0xc1e91f	                           shr ecx, 0x1f	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x4556	             0x1c8	                            add eax, ecx	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x4558	            0xd1f8	                              sar eax, 1	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x455a	          0x83e801	                              sub eax, 1	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x455d	            0xeb0a	                           jmp 0x40045a9	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x455f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x4563	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x4566	          0x83e801	                              sub eax, 1	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x4569	            0x39c2	                            cmp edx, eax	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x456b	            0x7e48	                           jle 0x40045f5	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x456d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x4571	        0x488b5058	            mov rdx, qword [rax + 0x58] 	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x4575	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x4579	          0x8b4030	            mov eax, dword [rax + 0x30] 	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x457c	            0x4898	                                    cdqe	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x457e	        0x48c1e002	                              shl rax, 2	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x4582	          0x4801d0	                            add rax, rdx	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x4585	           0xfb600	                   movzx eax, byte [rax]	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x4588	          0x83e001	                              and eax, 1	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x458b	            0x84c0	                             test al, al	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x458d	            0x7415	                            je 0x40045e4	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x458f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x4593	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x4596	            0x89c2	                            mov edx, eax	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x4598	          0xc1ea1f	                           shr edx, 0x1f	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x459b	             0x1d0	                            add eax, edx	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x459d	            0xd1f8	                              sar eax, 1	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x459f	          0x83e801	                              sub eax, 1	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x45a2	            0xeb0a	                           jmp 0x40045ee	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x45a4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x45a8	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x45ab	          0x83e801	                              sub eax, 1	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x45ae	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x45b2	          0x894234	             mov dword [rdx + 0x34], eax	      1468	state.c	FUNCTION_25	ELSE_5	CALL_167
0x45b5	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	      1471	state.c	FUNCTION_25	CALL_168
0x45b9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1471	state.c	FUNCTION_25	CALL_168
0x45bd	      0xba01000000	                              mov edx, 1	      1471	state.c	FUNCTION_25	CALL_168
0x45c2	          0x4889ce	                            mov rsi, rcx	      1471	state.c	FUNCTION_25	CALL_168
0x45c5	          0x4889c7	                            mov rdi, rax	      1471	state.c	FUNCTION_25	CALL_168
0x45c8	      0xe83bbbffff	                   call sym.updatecursor	      1471	state.c	FUNCTION_25	CALL_168
0x45cd	      0xb801000000	                              mov eax, 1	      1494	state.c	FUNCTION_25
0x45d2	        0x488b7df8	                mov rdi, qword [rbp - 8]	      1495	state.c	FUNCTION_25
0x45d6	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      1495	state.c	FUNCTION_25
0x45df	            0x7405	                            je 0x4004626	      1495	state.c	FUNCTION_25
0x45e1	      0xe800000000	                          call 0x4004626	      1495	state.c	FUNCTION_25
0x45e6	              0xc9	                                   leave	      1495	state.c	FUNCTION_25
0x45e7	              0xc3	                                     ret	      1495	state.c	FUNCTION_25
updatecursor	SWITCH,0:functions,0:ELSE,0:CALL,0:WHILE,0:DO,0:IF,4:FOR,0	52
0x108	              0x55	                                push rbp	        33	state.c	FUNCTION_2
0x109	          0x4889e5	                            mov rbp, rsp	        33	state.c	FUNCTION_2
0x10c	        0x4883ec20	                           sub rsp, 0x20	        33	state.c	FUNCTION_2
0x110	        0x48897df8	                mov qword [rbp - 8], rdi	        33	state.c	FUNCTION_2
0x114	        0x488975f0	             mov qword [rbp - 0x10], rsi	        33	state.c	FUNCTION_2
0x118	          0x8955ec	             mov dword [rbp - 0x14], edx	        33	state.c	FUNCTION_2
0x11b	        0x488b45f8	                mov rax, qword [rbp - 8]	        34	state.c	FUNCTION_2	IF_1
0x11f	          0x8b5034	            mov edx, dword [rax + 0x34] 	        34	state.c	FUNCTION_2	IF_1
0x122	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        34	state.c	FUNCTION_2	IF_1
0x126	          0x8b4004	                mov eax, dword [rax + 4]	        34	state.c	FUNCTION_2	IF_1
0x129	            0x39c2	                            cmp edx, eax	        34	state.c	FUNCTION_2	IF_1
0x12b	            0x7511	                           jne 0x400017e	        34	state.c	FUNCTION_2	IF_1
0x12d	        0x488b45f8	                mov rax, qword [rbp - 8]	        34	state.c	FUNCTION_2	IF_1
0x131	          0x8b5030	            mov edx, dword [rax + 0x30] 	        34	state.c	FUNCTION_2	IF_1
0x134	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        34	state.c	FUNCTION_2	IF_1
0x138	            0x8b00	                    mov eax, dword [rax]	        34	state.c	FUNCTION_2	IF_1
0x13a	            0x39c2	                            cmp edx, eax	        34	state.c	FUNCTION_2	IF_1
0x13c	            0x7470	                            je 0x40001ee	        34	state.c	FUNCTION_2	IF_1
0x13e	        0x837dec00	               cmp dword [rbp - 0x14], 0	        37	state.c	FUNCTION_2	IF_2
0x142	            0x740b	                            je 0x400018f	        37	state.c	FUNCTION_2	IF_2
0x144	        0x488b45f8	                mov rax, qword [rbp - 8]	        38	state.c	FUNCTION_2	IF_2
0x148	    0xc74038000000	               mov dword [rax + 0x38], 0	        38	state.c	FUNCTION_2	IF_2
0x14f	        0x488b45f8	                mov rax, qword [rbp - 8]	        40	state.c	FUNCTION_2	IF_3
0x153	        0x488b4008	                mov rax, qword [rax + 8]	        40	state.c	FUNCTION_2	IF_3
0x157	          0x4885c0	                           test rax, rax	        40	state.c	FUNCTION_2	IF_3
0x15a	            0x7453	                            je 0x40001ef	        40	state.c	FUNCTION_2	IF_3
0x15c	        0x488b45f8	                mov rax, qword [rbp - 8]	        40	state.c	FUNCTION_2	IF_3
0x160	        0x488b4008	                mov rax, qword [rax + 8]	        40	state.c	FUNCTION_2	IF_3
0x164	        0x488b4008	                mov rax, qword [rax + 8]	        40	state.c	FUNCTION_2	IF_3
0x168	          0x4885c0	                           test rax, rax	        40	state.c	FUNCTION_2	IF_3
0x16b	            0x7442	                            je 0x40001ef	        40	state.c	FUNCTION_2	IF_3
0x16d	        0x488b45f8	                mov rax, qword [rbp - 8]	        41	state.c	FUNCTION_2	IF_3	IF_4
0x171	        0x488b4008	                mov rax, qword [rax + 8]	        41	state.c	FUNCTION_2	IF_3	IF_4
0x175	        0x4c8b4008	                 mov r8, qword [rax + 8]	        41	state.c	FUNCTION_2	IF_3	IF_4
0x179	        0x488b45f8	                mov rax, qword [rbp - 8]	        41	state.c	FUNCTION_2	IF_3	IF_4
0x17d	        0x488b4810	            mov rcx, qword [rax + 0x10] 	        41	state.c	FUNCTION_2	IF_3	IF_4
0x181	        0x488b45f8	                mov rax, qword [rbp - 8]	        41	state.c	FUNCTION_2	IF_3	IF_4
0x185	     0xfb680940000	           movzx eax, byte [rax + 0x94] 	        41	state.c	FUNCTION_2	IF_3	IF_4
0x18c	          0xc0e805	                               shr al, 5	        41	state.c	FUNCTION_2	IF_3	IF_4
0x18f	          0x83e001	                              and eax, 1	        41	state.c	FUNCTION_2	IF_3	IF_4
0x192	           0xfb6d0	                           movzx edx, al	        41	state.c	FUNCTION_2	IF_3	IF_4
0x195	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	        41	state.c	FUNCTION_2	IF_3	IF_4
0x199	        0x488b45f8	                mov rax, qword [rbp - 8]	        41	state.c	FUNCTION_2	IF_3	IF_4
0x19d	        0x488b4030	            mov rax, qword [rax + 0x30] 	        41	state.c	FUNCTION_2	IF_3	IF_4
0x1a1	          0x488b36	                    mov rsi, qword [rsi]	        41	state.c	FUNCTION_2	IF_3	IF_4
0x1a4	          0x4889c7	                            mov rdi, rax	        41	state.c	FUNCTION_2	IF_3	IF_4
0x1a7	          0x41ffd0	                                 call r8	        41	state.c	FUNCTION_2	IF_3	IF_4
0x1aa	            0x85c0	                           test eax, eax	        41	state.c	FUNCTION_2	IF_3	IF_4
0x1ac	            0xeb01	                           jmp 0x40001ef	        41	state.c	FUNCTION_2	IF_3	IF_4
0x1ae	              0x90	                                     nop	        35	state.c	FUNCTION_2	IF_1
0x1af	              0xc9	                                   leave	        43	state.c	FUNCTION_2
0x1b0	              0xc3	                                     ret	        43	state.c	FUNCTION_2
grow_combine_buffer	SWITCH,0:functions,0:ELSE,0:CALL,3:WHILE,0:DO,0:IF,0:FOR,0	41
0x647	              0x55	                                push rbp	       143	state.c	FUNCTION_8
0x648	          0x4889e5	                            mov rbp, rsp	       143	state.c	FUNCTION_8
0x64b	        0x4883ec20	                           sub rsp, 0x20	       143	state.c	FUNCTION_8
0x64f	        0x48897de8	             mov qword [rbp - 0x18], rdi	       143	state.c	FUNCTION_8
0x653	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       144	state.c	FUNCTION_8
0x657	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       144	state.c	FUNCTION_8
0x65e	          0x4801c0	                            add rax, rax	       144	state.c	FUNCTION_8
0x661	        0x488945f0	             mov qword [rbp - 0x10], rax	       144	state.c	FUNCTION_8
0x665	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       145	state.c	FUNCTION_8	CALL_1
0x669	    0x488d14850000	                        lea rdx, [rax*4]	       145	state.c	FUNCTION_8	CALL_1
0x671	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       145	state.c	FUNCTION_8	CALL_1
0x675	          0x488b00	                    mov rax, qword [rax]	       145	state.c	FUNCTION_8	CALL_1
0x678	          0x4889d6	                            mov rsi, rdx	       145	state.c	FUNCTION_8	CALL_1
0x67b	          0x4889c7	                            mov rdi, rax	       145	state.c	FUNCTION_8	CALL_1
0x67e	      0xe800000000	                          call 0x40006c3	       145	state.c	FUNCTION_8	CALL_1
0x683	        0x488945f8	                mov qword [rbp - 8], rax	       145	state.c	FUNCTION_8	CALL_1
0x687	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       147	state.c	FUNCTION_8	CALL_2
0x68b	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       147	state.c	FUNCTION_8	CALL_2
0x692	    0x488d14850000	                        lea rdx, [rax*4]	       147	state.c	FUNCTION_8	CALL_2
0x69a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       147	state.c	FUNCTION_8	CALL_2
0x69e	        0x488b4878	            mov rcx, qword [rax + 0x78] 	       147	state.c	FUNCTION_8	CALL_2
0x6a2	        0x488b45f8	                mov rax, qword [rbp - 8]	       147	state.c	FUNCTION_8	CALL_2
0x6a6	          0x4889ce	                            mov rsi, rcx	       147	state.c	FUNCTION_8	CALL_2
0x6a9	          0x4889c7	                            mov rdi, rax	       147	state.c	FUNCTION_8	CALL_2
0x6ac	      0xe800000000	                          call 0x40006f1	       147	state.c	FUNCTION_8	CALL_2
0x6b1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       149	state.c	FUNCTION_8	CALL_3
0x6b5	        0x488b5078	            mov rdx, qword [rax + 0x78] 	       149	state.c	FUNCTION_8	CALL_3
0x6b9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       149	state.c	FUNCTION_8	CALL_3
0x6bd	          0x488b00	                    mov rax, qword [rax]	       149	state.c	FUNCTION_8	CALL_3
0x6c0	          0x4889d6	                            mov rsi, rdx	       149	state.c	FUNCTION_8	CALL_3
0x6c3	          0x4889c7	                            mov rdi, rax	       149	state.c	FUNCTION_8	CALL_3
0x6c6	      0xe800000000	                          call 0x400070b	       149	state.c	FUNCTION_8	CALL_3
0x6cb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       151	state.c	FUNCTION_8
0x6cf	        0x488b55f8	                mov rdx, qword [rbp - 8]	       151	state.c	FUNCTION_8
0x6d3	        0x48895078	             mov qword [rax + 0x78], rdx	       151	state.c	FUNCTION_8
0x6d7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       152	state.c	FUNCTION_8
0x6db	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       152	state.c	FUNCTION_8
0x6df	    0x488990800000	             mov qword [rax + 0x80], rdx	       152	state.c	FUNCTION_8
0x6e6	              0x90	                                     nop	       153	state.c	FUNCTION_8
0x6e7	              0xc9	                                   leave	       153	state.c	FUNCTION_8
0x6e8	              0xc3	                                     ret	       153	state.c	FUNCTION_8
set_col_tabstop	SWITCH,0:functions,0:ELSE,0:CALL,0:WHILE,0:DO,0:IF,0:FOR,0	29
0x6e9	              0x55	                                push rbp	       156	state.c	FUNCTION_9
0x6ea	          0x4889e5	                            mov rbp, rsp	       156	state.c	FUNCTION_9
0x6ed	        0x48897de8	             mov qword [rbp - 0x18], rdi	       156	state.c	FUNCTION_9
0x6f1	          0x8975e4	             mov dword [rbp - 0x1c], esi	       156	state.c	FUNCTION_9
0x6f4	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       157	state.c	FUNCTION_9
0x6f7	          0x83e007	                              and eax, 7	       157	state.c	FUNCTION_9
0x6fa	      0xba01000000	                              mov edx, 1	       157	state.c	FUNCTION_9
0x6ff	            0x89c1	                            mov ecx, eax	       157	state.c	FUNCTION_9
0x701	            0xd3e2	                             shl edx, cl	       157	state.c	FUNCTION_9
0x703	            0x89d0	                            mov eax, edx	       157	state.c	FUNCTION_9
0x705	          0x8845ff	                  mov byte [rbp - 1], al	       157	state.c	FUNCTION_9
0x708	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       158	state.c	FUNCTION_9
0x70c	        0x488b5050	            mov rdx, qword [rax + 0x50] 	       158	state.c	FUNCTION_9
0x710	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       158	state.c	FUNCTION_9
0x713	          0xc1f803	                              sar eax, 3	       158	state.c	FUNCTION_9
0x716	            0x4898	                                    cdqe	       158	state.c	FUNCTION_9
0x718	          0x4801c2	                            add rdx, rax	       158	state.c	FUNCTION_9
0x71b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       158	state.c	FUNCTION_9
0x71f	        0x488b4850	            mov rcx, qword [rax + 0x50] 	       158	state.c	FUNCTION_9
0x723	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       158	state.c	FUNCTION_9
0x726	          0xc1f803	                              sar eax, 3	       158	state.c	FUNCTION_9
0x729	            0x4898	                                    cdqe	       158	state.c	FUNCTION_9
0x72b	          0x4801c8	                            add rax, rcx	       158	state.c	FUNCTION_9
0x72e	           0xfb600	                   movzx eax, byte [rax]	       158	state.c	FUNCTION_9
0x731	           0xa45ff	                   or al, byte [rbp - 1]	       158	state.c	FUNCTION_9
0x734	            0x8802	                      mov byte [rdx], al	       158	state.c	FUNCTION_9
0x736	              0x90	                                     nop	       159	state.c	FUNCTION_9
0x737	              0x5d	                                 pop rbp	       159	state.c	FUNCTION_9
0x738	              0xc3	                                     ret	       159	state.c	FUNCTION_9
on_text	SWITCH,0:functions,0:ELSE,2:CALL,34:WHILE,2:DO,0:IF,16:FOR,7	509
0xa82	              0x55	                                push rbp	       241	state.c	FUNCTION_15
0xa83	          0x4889e5	                            mov rbp, rsp	       241	state.c	FUNCTION_15
0xa86	    0x4881ec900000	                           sub rsp, 0x90	       241	state.c	FUNCTION_15
0xa8d	        0x48897d88	             mov qword [rbp - 0x78], rdi	       241	state.c	FUNCTION_15
0xa91	        0x48897580	             mov qword [rbp - 0x80], rsi	       241	state.c	FUNCTION_15
0xa95	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	       241	state.c	FUNCTION_15
0xa9c	    0x64488b042528	                mov rax, qword fs:[0x28]	       241	state.c	FUNCTION_15
0xaa5	        0x488945f8	                mov qword [rbp - 8], rax	       241	state.c	FUNCTION_15
0xaa9	            0x31c0	                            xor eax, eax	       241	state.c	FUNCTION_15
0xaab	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       242	state.c	FUNCTION_15
0xab2	        0x488945c0	             mov qword [rbp - 0x40], rax	       242	state.c	FUNCTION_15
0xab6	    0xc74590000000	               mov dword [rbp - 0x70], 0	       244	state.c	FUNCTION_15
0xabd	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       245	state.c	FUNCTION_15
0xac5	    0xc74594000000	               mov dword [rbp - 0x6c], 0	       247	state.c	FUNCTION_15
0xacc	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       249	state.c	FUNCTION_15
0xad0	        0x488b4030	            mov rax, qword [rax + 0x30] 	       249	state.c	FUNCTION_15
0xad4	        0x488945b0	             mov qword [rbp - 0x50], rax	       249	state.c	FUNCTION_15
0xad8	        0x488b4580	             mov rax, qword [rbp - 0x80]	       253	state.c	FUNCTION_15	CALL_1
0xadc	        0x4883c001	                              add rax, 1	       253	state.c	FUNCTION_15	CALL_1
0xae0	    0x488d14850000	                        lea rdx, [rax*4]	       253	state.c	FUNCTION_15	CALL_1
0xae8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       253	state.c	FUNCTION_15	CALL_1
0xaec	          0x488b00	                    mov rax, qword [rax]	       253	state.c	FUNCTION_15	CALL_1
0xaef	          0x4889d6	                            mov rsi, rdx	       253	state.c	FUNCTION_15	CALL_1
0xaf2	          0x4889c7	                            mov rdi, rax	       253	state.c	FUNCTION_15	CALL_1
0xaf5	      0xe800000000	                          call 0x4000b3a	       253	state.c	FUNCTION_15	CALL_1
0xafa	        0x488945c8	             mov qword [rbp - 0x38], rax	       253	state.c	FUNCTION_15	CALL_1
0xafe	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       256	state.c	FUNCTION_15
0xb02	    0x8b8018010000	           mov eax, dword [rax + 0x118] 	       256	state.c	FUNCTION_15
0xb08	            0x85c0	                           test eax, eax	       256	state.c	FUNCTION_15
0xb0a	            0x7431	                            je 0x4000b7d	       256	state.c	FUNCTION_15
0xb0c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       256	state.c	FUNCTION_15
0xb10	    0x8b8018010000	           mov eax, dword [rax + 0x118] 	       256	state.c	FUNCTION_15
0xb16	          0x4863d0	                         movsxd rdx, eax	       256	state.c	FUNCTION_15
0xb19	          0x4889d0	                            mov rax, rdx	       256	state.c	FUNCTION_15
0xb1c	          0x4801c0	                            add rax, rax	       256	state.c	FUNCTION_15
0xb1f	          0x4801d0	                            add rax, rdx	       256	state.c	FUNCTION_15
0xb22	        0x48c1e003	                              shl rax, 3	       256	state.c	FUNCTION_15
0xb26	    0x488d90900000	                   lea rdx, [rax + 0x90]	       256	state.c	FUNCTION_15
0xb2d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       256	state.c	FUNCTION_15
0xb31	          0x4801d0	                            add rax, rdx	       256	state.c	FUNCTION_15
0xb34	        0x4883c008	                              add rax, 8	       256	state.c	FUNCTION_15
0xb38	      0xe98a000000	                           jmp 0x4000c07	       256	state.c	FUNCTION_15
0xb3d	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       257	state.c	FUNCTION_15
0xb41	        0x488b4588	             mov rax, qword [rbp - 0x78]	       257	state.c	FUNCTION_15
0xb45	          0x4801d0	                            add rax, rdx	       257	state.c	FUNCTION_15
0xb48	           0xfb600	                   movzx eax, byte [rax]	       257	state.c	FUNCTION_15
0xb4b	            0x84c0	                             test al, al	       257	state.c	FUNCTION_15
0xb4d	            0x782e	                            js 0x4000bbd	       257	state.c	FUNCTION_15
0xb4f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       257	state.c	FUNCTION_15
0xb53	    0x8b8010010000	           mov eax, dword [rax + 0x110] 	       257	state.c	FUNCTION_15
0xb59	          0x4863d0	                         movsxd rdx, eax	       257	state.c	FUNCTION_15
0xb5c	          0x4889d0	                            mov rax, rdx	       257	state.c	FUNCTION_15
0xb5f	          0x4801c0	                            add rax, rax	       257	state.c	FUNCTION_15
0xb62	          0x4801d0	                            add rax, rdx	       257	state.c	FUNCTION_15
0xb65	        0x48c1e003	                              shl rax, 3	       257	state.c	FUNCTION_15
0xb69	    0x488d90900000	                   lea rdx, [rax + 0x90]	       257	state.c	FUNCTION_15
0xb70	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       257	state.c	FUNCTION_15
0xb74	          0x4801d0	                            add rax, rdx	       257	state.c	FUNCTION_15
0xb77	        0x4883c008	                              add rax, 8	       257	state.c	FUNCTION_15
0xb7b	            0xeb4a	                           jmp 0x4000c07	       257	state.c	FUNCTION_15
0xb7d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       258	state.c	FUNCTION_15
0xb81	          0x488b00	                    mov rax, qword [rax]	       258	state.c	FUNCTION_15
0xb84	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       258	state.c	FUNCTION_15
0xb88	          0x83e001	                              and eax, 1	       258	state.c	FUNCTION_15
0xb8b	            0x84c0	                             test al, al	       258	state.c	FUNCTION_15
0xb8d	            0x740c	                            je 0x4000bdb	       258	state.c	FUNCTION_15
0xb8f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       258	state.c	FUNCTION_15
0xb93	    0x4805f8000000	                           add rax, 0xf8	       258	state.c	FUNCTION_15
0xb99	            0xeb2c	                           jmp 0x4000c07	       258	state.c	FUNCTION_15
0xb9b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       259	state.c	FUNCTION_15
0xb9f	    0x8b8014010000	           mov eax, dword [rax + 0x114] 	       259	state.c	FUNCTION_15
0xba5	          0x4863d0	                         movsxd rdx, eax	       258	state.c	FUNCTION_15
0xba8	          0x4889d0	                            mov rax, rdx	       258	state.c	FUNCTION_15
0xbab	          0x4801c0	                            add rax, rax	       258	state.c	FUNCTION_15
0xbae	          0x4801d0	                            add rax, rdx	       258	state.c	FUNCTION_15
0xbb1	        0x48c1e003	                              shl rax, 3	       258	state.c	FUNCTION_15
0xbb5	    0x488d90900000	                   lea rdx, [rax + 0x90]	       258	state.c	FUNCTION_15
0xbbc	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       258	state.c	FUNCTION_15
0xbc0	          0x4801d0	                            add rax, rdx	       258	state.c	FUNCTION_15
0xbc3	        0x4883c008	                              add rax, 8	       258	state.c	FUNCTION_15
0xbc7	        0x488945d0	             mov qword [rbp - 0x30], rax	       255	state.c	FUNCTION_15
0xbcb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       261	state.c	FUNCTION_15
0xbcf	          0x488b00	                    mov rax, qword [rax]	       261	state.c	FUNCTION_15
0xbd2	        0x488b4008	                mov rax, qword [rax + 8]	       261	state.c	FUNCTION_15
0xbd6	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       262	state.c	FUNCTION_15
0xbda	    0x8b9218010000	           mov edx, dword [rdx + 0x118] 	       262	state.c	FUNCTION_15
0xbe0	            0x85d2	                           test edx, edx	       261	state.c	FUNCTION_15
0xbe2	            0x7509	                           jne 0x4000c2d	       261	state.c	FUNCTION_15
0xbe4	        0x488b5580	             mov rdx, qword [rbp - 0x80]	       261	state.c	FUNCTION_15
0xbe8	          0x4189d3	                           mov r11d, edx	       261	state.c	FUNCTION_15
0xbeb	            0xeb06	                           jmp 0x4000c33	       261	state.c	FUNCTION_15
0xbed	    0x41bb01000000	                             mov r11d, 1	       261	state.c	FUNCTION_15
0xbf3	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       261	state.c	FUNCTION_15
0xbf7	        0x4c8d5208	                      lea r10, [rdx + 8]	       261	state.c	FUNCTION_15
0xbfb	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       261	state.c	FUNCTION_15
0xbff	          0x488b3a	                    mov rdi, qword [rdx]	       261	state.c	FUNCTION_15
0xc02	        0x4c8b4588	              mov r8, qword [rbp - 0x78]	       261	state.c	FUNCTION_15
0xc06	        0x488d4d90	                   lea rcx, [rbp - 0x70]	       261	state.c	FUNCTION_15
0xc0a	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       261	state.c	FUNCTION_15
0xc0e	          0xff7580	                 push qword [rbp - 0x80]	       261	state.c	FUNCTION_15
0xc11	        0x488d75b8	                   lea rsi, [rbp - 0x48]	       261	state.c	FUNCTION_15
0xc15	              0x56	                                push rsi	       261	state.c	FUNCTION_15
0xc16	          0x4d89c1	                              mov r9, r8	       261	state.c	FUNCTION_15
0xc19	          0x4589d8	                           mov r8d, r11d	       261	state.c	FUNCTION_15
0xc1c	          0x4c89d6	                            mov rsi, r10	       261	state.c	FUNCTION_15
0xc1f	            0xffd0	                                call rax	       261	state.c	FUNCTION_15
0xc21	        0x4883c410	                           add rsp, 0x10	       261	state.c	FUNCTION_15
0xc25	          0x8b4590	             mov eax, dword [rbp - 0x70]	       268	state.c	FUNCTION_15	IF_1
0xc28	            0x85c0	                           test eax, eax	       268	state.c	FUNCTION_15	IF_1
0xc2a	            0x751f	                           jne 0x4000c8b	       268	state.c	FUNCTION_15	IF_1
0xc2c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       270	state.c	FUNCTION_15	IF_1	CALL_2
0xc30	          0x488b00	                    mov rax, qword [rax]	       270	state.c	FUNCTION_15	IF_1	CALL_2
0xc33	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       270	state.c	FUNCTION_15	IF_1	CALL_2
0xc37	          0x4889d6	                            mov rsi, rdx	       270	state.c	FUNCTION_15	IF_1	CALL_2
0xc3a	          0x4889c7	                            mov rdi, rax	       270	state.c	FUNCTION_15	IF_1	CALL_2
0xc3d	      0xe800000000	                          call 0x4000c82	       270	state.c	FUNCTION_15	IF_1	CALL_2
0xc42	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       271	state.c	FUNCTION_15	IF_1
0xc46	      0xe957050000	                           jmp 0x40011e2	       271	state.c	FUNCTION_15	IF_1
0xc4b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       274	state.c	FUNCTION_15	IF_2
0xc4f	    0x8b8018010000	           mov eax, dword [rax + 0x118] 	       274	state.c	FUNCTION_15	IF_2
0xc55	            0x85c0	                           test eax, eax	       274	state.c	FUNCTION_15	IF_2
0xc57	            0x7415	                            je 0x4000cae	       274	state.c	FUNCTION_15	IF_2
0xc59	          0x8b4590	             mov eax, dword [rbp - 0x70]	       274	state.c	FUNCTION_15	IF_2
0xc5c	            0x85c0	                           test eax, eax	       274	state.c	FUNCTION_15	IF_2
0xc5e	            0x740e	                            je 0x4000cae	       274	state.c	FUNCTION_15	IF_2
0xc60	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       275	state.c	FUNCTION_15	IF_2
0xc64	    0xc78018010000	              mov dword [rax + 0x118], 0	       275	state.c	FUNCTION_15	IF_2
0xc6e	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       279	state.c	FUNCTION_15	IF_3	CALL_3
0xc71	            0x4898	                                    cdqe	       279	state.c	FUNCTION_15	IF_3	CALL_3
0xc73	    0x488d14850000	                        lea rdx, [rax*4]	       279	state.c	FUNCTION_15	IF_3	CALL_3
0xc7b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       279	state.c	FUNCTION_15	IF_3	CALL_3
0xc7f	          0x4801d0	                            add rax, rdx	       279	state.c	FUNCTION_15	IF_3	CALL_3
0xc82	            0x8b00	                    mov eax, dword [rax]	       279	state.c	FUNCTION_15	IF_3	CALL_3
0xc84	            0x89c7	                            mov edi, eax	       279	state.c	FUNCTION_15	IF_3	CALL_3
0xc86	      0xe800000000	                          call 0x4000ccb	       279	state.c	FUNCTION_15	IF_3	CALL_3
0xc8b	            0x85c0	                           test eax, eax	       279	state.c	FUNCTION_15	IF_3	CALL_3
0xc8d	     0xf84d1040000	                            je 0x40011a4	       279	state.c	FUNCTION_15	IF_3	CALL_3
0xc93	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       281	state.c	FUNCTION_15	IF_3	IF_4
0xc97	          0x8b5030	            mov edx, dword [rax + 0x30] 	       281	state.c	FUNCTION_15	IF_3	IF_4
0xc9a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       281	state.c	FUNCTION_15	IF_3	IF_4
0xc9e	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	       281	state.c	FUNCTION_15	IF_3	IF_4
0xca4	            0x39c2	                            cmp edx, eax	       281	state.c	FUNCTION_15	IF_3	IF_4
0xca6	     0xf85b8040000	                           jne 0x40011a4	       281	state.c	FUNCTION_15	IF_3	IF_4
0xcac	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       281	state.c	FUNCTION_15	IF_3	IF_4
0xcb0	          0x8b5034	            mov edx, dword [rax + 0x34] 	       281	state.c	FUNCTION_15	IF_3	IF_4
0xcb3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       281	state.c	FUNCTION_15	IF_3	IF_4
0xcb7	    0x8b8890000000	            mov ecx, dword [rax + 0x90] 	       281	state.c	FUNCTION_15	IF_3	IF_4
0xcbd	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       281	state.c	FUNCTION_15	IF_3	IF_4
0xcc1	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	       281	state.c	FUNCTION_15	IF_3	IF_4
0xcc7	             0x1c8	                            add eax, ecx	       281	state.c	FUNCTION_15	IF_3	IF_4
0xcc9	            0x39c2	                            cmp edx, eax	       281	state.c	FUNCTION_15	IF_3	IF_4
0xccb	     0xf8593040000	                           jne 0x40011a4	       281	state.c	FUNCTION_15	IF_3	IF_4
0xcd1	    0xc74598000000	               mov dword [rbp - 0x68], 0	       291	state.c	FUNCTION_15	IF_3	IF_4
0xcd8	            0xeb04	                           jmp 0x4000d1e	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0xcda	        0x83459801	               add dword [rbp - 0x68], 1	       293	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0xcde	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0xce2	        0x488b4078	            mov rax, qword [rax + 0x78] 	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0xce6	          0x8b5598	             mov edx, dword [rbp - 0x68]	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0xce9	          0x4863d2	                         movsxd rdx, edx	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0xcec	        0x48c1e202	                              shl rdx, 2	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0xcf0	          0x4801d0	                            add rax, rdx	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0xcf3	            0x8b00	                    mov eax, dword [rax]	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0xcf5	            0x85c0	                           test eax, eax	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0xcf7	            0x75e1	                           jne 0x4000d1a	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0xcf9	            0xeb54	                           jmp 0x4000d8f	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0xcfb	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       297	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	IF_5
0xcff	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       297	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	IF_5
0xd06	          0x3b4598	             cmp eax, dword [rbp - 0x68]	       297	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	IF_5
0xd09	            0x7f0c	                            jg 0x4000d57	       297	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	IF_5
0xd0b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       298	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_8
0xd0f	          0x4889c7	                            mov rdi, rax	       298	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_8
0xd12	      0xe830f9ffff	            call sym.grow_combine_buffer	       298	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_8
0xd17	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0xd1b	        0x488b4878	            mov rcx, qword [rax + 0x78] 	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0xd1f	          0x8b4598	             mov eax, dword [rbp - 0x68]	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0xd22	          0x8d5001	                      lea edx, [rax + 1]	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0xd25	          0x895598	             mov dword [rbp - 0x68], edx	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0xd28	            0x4898	                                    cdqe	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0xd2a	        0x48c1e002	                              shl rax, 2	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0xd2e	          0x4801c1	                            add rcx, rax	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0xd31	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0xd34	          0x8d5001	                      lea edx, [rax + 1]	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0xd37	          0x895594	             mov dword [rbp - 0x6c], edx	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0xd3a	            0x4898	                                    cdqe	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0xd3c	    0x488d14850000	                        lea rdx, [rax*4]	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0xd44	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0xd48	          0x4801d0	                            add rax, rdx	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0xd4b	            0x8b00	                    mov eax, dword [rax]	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0xd4d	            0x8901	                    mov dword [rcx], eax	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0xd4f	          0x8b4590	             mov eax, dword [rbp - 0x70]	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0xd52	          0x394594	            cmp dword [rbp - 0x6c], eax 	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0xd55	            0x7d21	                           jge 0x4000db8	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0xd57	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0xd5a	            0x4898	                                    cdqe	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0xd5c	    0x488d14850000	                        lea rdx, [rax*4]	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0xd64	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0xd68	          0x4801d0	                            add rax, rdx	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0xd6b	            0x8b00	                    mov eax, dword [rax]	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0xd6d	            0x89c7	                            mov edi, eax	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0xd6f	      0xe800000000	                          call 0x4000db4	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0xd74	            0x85c0	                           test eax, eax	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0xd76	            0x7583	                           jne 0x4000d3b	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0xd78	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       301	state.c	FUNCTION_15	IF_3	IF_4	IF_6
0xd7c	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       301	state.c	FUNCTION_15	IF_3	IF_4	IF_6
0xd83	          0x3b4598	             cmp eax, dword [rbp - 0x68]	       301	state.c	FUNCTION_15	IF_3	IF_4	IF_6
0xd86	            0x7f0c	                            jg 0x4000dd4	       301	state.c	FUNCTION_15	IF_3	IF_4	IF_6
0xd88	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       302	state.c	FUNCTION_15	IF_3	IF_4	CALL_9
0xd8c	          0x4889c7	                            mov rdi, rax	       302	state.c	FUNCTION_15	IF_3	IF_4	CALL_9
0xd8f	      0xe8b3f8ffff	            call sym.grow_combine_buffer	       302	state.c	FUNCTION_15	IF_3	IF_4	CALL_9
0xd94	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       303	state.c	FUNCTION_15	IF_3	IF_4
0xd98	        0x488b4078	            mov rax, qword [rax + 0x78] 	       303	state.c	FUNCTION_15	IF_3	IF_4
0xd9c	          0x8b5598	             mov edx, dword [rbp - 0x68]	       303	state.c	FUNCTION_15	IF_3	IF_4
0xd9f	          0x4863d2	                         movsxd rdx, edx	       303	state.c	FUNCTION_15	IF_3	IF_4
0xda2	        0x48c1e202	                              shl rdx, 2	       303	state.c	FUNCTION_15	IF_3	IF_4
0xda6	          0x4801d0	                            add rax, rdx	       303	state.c	FUNCTION_15	IF_3	IF_4
0xda9	    0xc70000000000	                      mov dword [rax], 0	       303	state.c	FUNCTION_15	IF_3	IF_4
0xdaf	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       312	state.c	FUNCTION_15	IF_3	IF_4	CALL_12
0xdb3	    0x8b9088000000	            mov edx, dword [rax + 0x88] 	       312	state.c	FUNCTION_15	IF_3	IF_4	CALL_12
0xdb9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       312	state.c	FUNCTION_15	IF_3	IF_4	CALL_12
0xdbd	        0x488b7078	            mov rsi, qword [rax + 0x78] 	       312	state.c	FUNCTION_15	IF_3	IF_4	CALL_12
0xdc1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       312	state.c	FUNCTION_15	IF_3	IF_4	CALL_12
0xdc5	    0x488b888c0000	            mov rcx, qword [rax + 0x8c] 	       312	state.c	FUNCTION_15	IF_3	IF_4	CALL_12
0xdcc	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       312	state.c	FUNCTION_15	IF_3	IF_4	CALL_12
0xdd0	          0x4889c7	                            mov rdi, rax	       312	state.c	FUNCTION_15	IF_3	IF_4	CALL_12
0xdd3	      0xe828f2ffff	                       call sym.putglyph	       312	state.c	FUNCTION_15	IF_3	IF_4	CALL_12
0xdd8	      0xe987030000	                           jmp 0x40011a4	       319	state.c	FUNCTION_15	FOR_3
0xddd	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       321	state.c	FUNCTION_15	FOR_3
0xde0	          0x8945a8	             mov dword [rbp - 0x58], eax	       321	state.c	FUNCTION_15	FOR_3
0xde3	    0xc745a0000000	               mov dword [rbp - 0x60], 0	       323	state.c	FUNCTION_15	FOR_3
0xdea	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       326	state.c	FUNCTION_15	FOR_3	FOR_4
0xded	          0x83c001	                              add eax, 1	       326	state.c	FUNCTION_15	FOR_3	FOR_4
0xdf0	          0x89459c	             mov dword [rbp - 0x64], eax	       326	state.c	FUNCTION_15	FOR_3	FOR_4
0xdf3	            0xeb25	                           jmp 0x4000e5a	       326	state.c	FUNCTION_15	FOR_3	FOR_4
0xdf5	          0x8b459c	             mov eax, dword [rbp - 0x64]	       327	state.c	FUNCTION_15	FOR_3	FOR_4	IF_7	CALL_14
0xdf8	            0x4898	                                    cdqe	       327	state.c	FUNCTION_15	FOR_3	FOR_4	IF_7	CALL_14
0xdfa	    0x488d14850000	                        lea rdx, [rax*4]	       327	state.c	FUNCTION_15	FOR_3	FOR_4	IF_7	CALL_14
0xe02	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       327	state.c	FUNCTION_15	FOR_3	FOR_4	IF_7	CALL_14
0xe06	          0x4801d0	                            add rax, rdx	       327	state.c	FUNCTION_15	FOR_3	FOR_4	IF_7	CALL_14
0xe09	            0x8b00	                    mov eax, dword [rax]	       327	state.c	FUNCTION_15	FOR_3	FOR_4	IF_7	CALL_14
0xe0b	            0x89c7	                            mov edi, eax	       327	state.c	FUNCTION_15	FOR_3	FOR_4	IF_7	CALL_14
0xe0d	      0xe800000000	                          call 0x4000e52	       327	state.c	FUNCTION_15	FOR_3	FOR_4	IF_7	CALL_14
0xe12	            0x85c0	                           test eax, eax	       327	state.c	FUNCTION_15	FOR_3	FOR_4	IF_7	CALL_14
0xe14	            0x740e	                            je 0x4000e64	       327	state.c	FUNCTION_15	FOR_3	FOR_4	IF_7	CALL_14
0xe16	        0x83459c01	               add dword [rbp - 0x64], 1	       326	state.c	FUNCTION_15	FOR_3	FOR_4
0xe1a	          0x8b4590	             mov eax, dword [rbp - 0x70]	       326	state.c	FUNCTION_15	FOR_3	FOR_4
0xe1d	          0x39459c	            cmp dword [rbp - 0x64], eax 	       326	state.c	FUNCTION_15	FOR_3	FOR_4
0xe20	            0x7cd3	                            jl 0x4000e35	       326	state.c	FUNCTION_15	FOR_3	FOR_4
0xe22	            0xeb01	                           jmp 0x4000e65	       326	state.c	FUNCTION_15	FOR_3	FOR_4
0xe24	              0x90	                                     nop	       328	state.c	FUNCTION_15	FOR_3	FOR_4	IF_7
0xe25	          0x8b459c	             mov eax, dword [rbp - 0x64]	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0xe28	          0x2b45a8	             sub eax, dword [rbp - 0x58]	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0xe2b	          0x83c001	                              add eax, 1	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0xe2e	            0x4898	                                    cdqe	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0xe30	    0x488d14850000	                        lea rdx, [rax*4]	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0xe38	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0xe3c	          0x488b00	                    mov rax, qword [rax]	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0xe3f	          0x4889d6	                            mov rsi, rdx	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0xe42	          0x4889c7	                            mov rdi, rax	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0xe45	      0xe800000000	                          call 0x4000e8a	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0xe4a	        0x488945d8	             mov qword [rbp - 0x28], rax	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0xe4e	            0xeb59	                           jmp 0x4000ee9	       332	state.c	FUNCTION_15	FOR_3	FOR_5
0xe50	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       334	state.c	FUNCTION_15	FOR_3	FOR_5
0xe53	          0x2b45a8	             sub eax, dword [rbp - 0x58]	       334	state.c	FUNCTION_15	FOR_3	FOR_5
0xe56	            0x4898	                                    cdqe	       334	state.c	FUNCTION_15	FOR_3	FOR_5
0xe58	    0x488d14850000	                        lea rdx, [rax*4]	       334	state.c	FUNCTION_15	FOR_3	FOR_5
0xe60	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       334	state.c	FUNCTION_15	FOR_3	FOR_5
0xe64	          0x4801c2	                            add rdx, rax	       334	state.c	FUNCTION_15	FOR_3	FOR_5
0xe67	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       334	state.c	FUNCTION_15	FOR_3	FOR_5
0xe6a	            0x4898	                                    cdqe	       334	state.c	FUNCTION_15	FOR_3	FOR_5
0xe6c	    0x488d0c850000	                        lea rcx, [rax*4]	       334	state.c	FUNCTION_15	FOR_3	FOR_5
0xe74	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       334	state.c	FUNCTION_15	FOR_3	FOR_5
0xe78	          0x4801c8	                            add rax, rcx	       334	state.c	FUNCTION_15	FOR_3	FOR_5
0xe7b	            0x8b00	                    mov eax, dword [rax]	       334	state.c	FUNCTION_15	FOR_3	FOR_5
0xe7d	            0x8902	                    mov dword [rdx], eax	       334	state.c	FUNCTION_15	FOR_3	FOR_5
0xe7f	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       335	state.c	FUNCTION_15	FOR_3	FOR_5	CALL_16
0xe82	            0x4898	                                    cdqe	       335	state.c	FUNCTION_15	FOR_3	FOR_5	CALL_16
0xe84	    0x488d14850000	                        lea rdx, [rax*4]	       335	state.c	FUNCTION_15	FOR_3	FOR_5	CALL_16
0xe8c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       335	state.c	FUNCTION_15	FOR_3	FOR_5	CALL_16
0xe90	          0x4801d0	                            add rax, rdx	       335	state.c	FUNCTION_15	FOR_3	FOR_5	CALL_16
0xe93	            0x8b00	                    mov eax, dword [rax]	       335	state.c	FUNCTION_15	FOR_3	FOR_5	CALL_16
0xe95	            0x89c7	                            mov edi, eax	       335	state.c	FUNCTION_15	FOR_3	FOR_5	CALL_16
0xe97	      0xe800000000	                          call 0x4000edc	       335	state.c	FUNCTION_15	FOR_3	FOR_5	CALL_16
0xe9c	          0x8945ac	             mov dword [rbp - 0x54], eax	       335	state.c	FUNCTION_15	FOR_3	FOR_5	CALL_16
0xe9f	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       342	state.c	FUNCTION_15	FOR_3	FOR_5
0xea2	           0x145a0	             add dword [rbp - 0x60], eax	       342	state.c	FUNCTION_15	FOR_3	FOR_5
0xea5	        0x83459401	               add dword [rbp - 0x6c], 1	       332	state.c	FUNCTION_15	FOR_3	FOR_5
0xea9	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       332	state.c	FUNCTION_15	FOR_3	FOR_5
0xeac	          0x3b459c	             cmp eax, dword [rbp - 0x64]	       332	state.c	FUNCTION_15	FOR_3	FOR_5
0xeaf	            0x7c9f	                            jl 0x4000e90	       332	state.c	FUNCTION_15	FOR_3	FOR_5
0xeb1	          0x8b459c	             mov eax, dword [rbp - 0x64]	       345	state.c	FUNCTION_15	FOR_3
0xeb4	          0x2b45a8	             sub eax, dword [rbp - 0x58]	       345	state.c	FUNCTION_15	FOR_3
0xeb7	            0x4898	                                    cdqe	       345	state.c	FUNCTION_15	FOR_3
0xeb9	    0x488d14850000	                        lea rdx, [rax*4]	       345	state.c	FUNCTION_15	FOR_3
0xec1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       345	state.c	FUNCTION_15	FOR_3
0xec5	          0x4801d0	                            add rax, rdx	       345	state.c	FUNCTION_15	FOR_3
0xec8	    0xc70000000000	                      mov dword [rax], 0	       345	state.c	FUNCTION_15	FOR_3
0xece	        0x836d9401	               sub dword [rbp - 0x6c], 1	       346	state.c	FUNCTION_15	FOR_3
0xed2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0xed6	          0x8b4038	            mov eax, dword [rax + 0x38] 	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0xed9	            0x85c0	                           test eax, eax	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0xedb	            0x754c	                           jne 0x4000f69	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0xedd	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0xee1	          0x8b5034	            mov edx, dword [rax + 0x34] 	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0xee4	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0xee7	          0x8d0c02	                    lea ecx, [rdx + rax]	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0xeea	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0xeee	        0x488b5058	            mov rdx, qword [rax + 0x58] 	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0xef2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0xef6	          0x8b4030	            mov eax, dword [rax + 0x30] 	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0xef9	            0x4898	                                    cdqe	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0xefb	        0x48c1e002	                              shl rax, 2	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0xeff	          0x4801d0	                            add rax, rdx	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0xf02	           0xfb600	                   movzx eax, byte [rax]	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0xf05	          0x83e001	                              and eax, 1	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0xf08	            0x84c0	                             test al, al	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0xf0a	            0x7412	                            je 0x4000f5e	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0xf0c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0xf10	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0xf13	            0x89c2	                            mov edx, eax	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0xf15	          0xc1ea1f	                           shr edx, 0x1f	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0xf18	             0x1d0	                            add eax, edx	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0xf1a	            0xd1f8	                              sar eax, 1	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0xf1c	            0xeb07	                           jmp 0x4000f65	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0xf1e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0xf22	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0xf25	            0x39c1	                            cmp ecx, eax	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0xf27	            0x7e22	                           jle 0x4000f8b	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0xf29	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       357	state.c	FUNCTION_15	FOR_3	IF_9	CALL_23
0xf2d	          0x4889c7	                            mov rdi, rax	       357	state.c	FUNCTION_15	FOR_3	IF_9	CALL_23
0xf30	      0xe811f6ffff	                       call sym.linefeed	       357	state.c	FUNCTION_15	FOR_3	IF_9	CALL_23
0xf35	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       358	state.c	FUNCTION_15	FOR_3	IF_9
0xf39	    0xc74034000000	               mov dword [rax + 0x34], 0	       358	state.c	FUNCTION_15	FOR_3	IF_9
0xf40	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       359	state.c	FUNCTION_15	FOR_3	IF_9
0xf44	    0xc74038000000	               mov dword [rax + 0x38], 0	       359	state.c	FUNCTION_15	FOR_3	IF_9
0xf4b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       362	state.c	FUNCTION_15	FOR_3	IF_10
0xf4f	     0xfb680940000	           movzx eax, byte [rax + 0x94] 	       362	state.c	FUNCTION_15	FOR_3	IF_10
0xf56	          0x83e008	                              and eax, 8	       362	state.c	FUNCTION_15	FOR_3	IF_10
0xf59	            0x84c0	                             test al, al	       362	state.c	FUNCTION_15	FOR_3	IF_10
0xf5b	            0x747e	                            je 0x400101b	       362	state.c	FUNCTION_15	FOR_3	IF_10
0xf5d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       368	state.c	FUNCTION_15	FOR_3	IF_10
0xf61	          0x8b4030	            mov eax, dword [rax + 0x30] 	       368	state.c	FUNCTION_15	FOR_3	IF_10
0xf64	          0x8945e0	             mov dword [rbp - 0x20], eax	       368	state.c	FUNCTION_15	FOR_3	IF_10
0xf67	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       369	state.c	FUNCTION_15	FOR_3	IF_10
0xf6b	          0x8b4030	            mov eax, dword [rax + 0x30] 	       369	state.c	FUNCTION_15	FOR_3	IF_10
0xf6e	          0x83c001	                              add eax, 1	       369	state.c	FUNCTION_15	FOR_3	IF_10
0xf71	          0x8945e4	             mov dword [rbp - 0x1c], eax	       369	state.c	FUNCTION_15	FOR_3	IF_10
0xf74	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       370	state.c	FUNCTION_15	FOR_3	IF_10
0xf78	          0x8b4034	            mov eax, dword [rax + 0x34] 	       370	state.c	FUNCTION_15	FOR_3	IF_10
0xf7b	          0x8945e8	             mov dword [rbp - 0x18], eax	       370	state.c	FUNCTION_15	FOR_3	IF_10
0xf7e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0xf82	        0x488b5058	            mov rdx, qword [rax + 0x58] 	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0xf86	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0xf8a	          0x8b4030	            mov eax, dword [rax + 0x30] 	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0xf8d	            0x4898	                                    cdqe	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0xf8f	        0x48c1e002	                              shl rax, 2	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0xf93	          0x4801d0	                            add rax, rdx	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0xf96	           0xfb600	                   movzx eax, byte [rax]	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0xf99	          0x83e001	                              and eax, 1	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0xf9c	            0x84c0	                             test al, al	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0xf9e	            0x7412	                            je 0x4000ff2	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0xfa0	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0xfa4	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0xfa7	            0x89c2	                            mov edx, eax	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0xfa9	          0xc1ea1f	                           shr edx, 0x1f	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0xfac	             0x1d0	                            add eax, edx	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0xfae	            0xd1f8	                              sar eax, 1	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0xfb0	            0xeb07	                           jmp 0x4000ff9	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0xfb2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0xfb6	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0xfb9	          0x8945ec	             mov dword [rbp - 0x14], eax	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0xfbc	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       372	state.c	FUNCTION_15	FOR_3	IF_10	CALL_25
0xfc0	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       372	state.c	FUNCTION_15	FOR_3	IF_10	CALL_25
0xfc4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       372	state.c	FUNCTION_15	FOR_3	IF_10	CALL_25
0xfc8	    0x41b8ffffffff	                     mov r8d, 0xffffffff	       372	state.c	FUNCTION_15	FOR_3	IF_10	CALL_25
0xfce	      0xb900000000	                              mov ecx, 0	       372	state.c	FUNCTION_15	FOR_3	IF_10	CALL_25
0xfd3	          0x4889c7	                            mov rdi, rax	       372	state.c	FUNCTION_15	FOR_3	IF_10	CALL_25
0xfd6	      0xe858f3ffff	                         call sym.scroll	       372	state.c	FUNCTION_15	FOR_3	IF_10	CALL_25
0xfdb	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       375	state.c	FUNCTION_15	FOR_3	CALL_26
0xfdf	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       375	state.c	FUNCTION_15	FOR_3	CALL_26
0xfe3	          0x8b55a0	             mov edx, dword [rbp - 0x60]	       375	state.c	FUNCTION_15	FOR_3	CALL_26
0xfe6	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	       375	state.c	FUNCTION_15	FOR_3	CALL_26
0xfea	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       375	state.c	FUNCTION_15	FOR_3	CALL_26
0xfee	          0x4889c7	                            mov rdi, rax	       375	state.c	FUNCTION_15	FOR_3	CALL_26
0xff1	      0xe80af0ffff	                       call sym.putglyph	       375	state.c	FUNCTION_15	FOR_3	CALL_26
0xff6	          0x8b4590	             mov eax, dword [rbp - 0x70]	       377	state.c	FUNCTION_15	FOR_3	IF_11
0xff9	          0x83e801	                              sub eax, 1	       377	state.c	FUNCTION_15	FOR_3	IF_11
0xffc	          0x3b4594	             cmp eax, dword [rbp - 0x6c]	       377	state.c	FUNCTION_15	FOR_3	IF_11
0xfff	     0xf85c7000000	                           jne 0x400110c	       377	state.c	FUNCTION_15	FOR_3	IF_11
0x1005	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x100c	            0xeb4d	                           jmp 0x400109b	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x100e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       382	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7	IF_12
0x1012	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       382	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7	IF_12
0x1019	          0x3b45a4	             cmp eax, dword [rbp - 0x5c]	       382	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7	IF_12
0x101c	            0x7f0c	                            jg 0x400106a	       382	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7	IF_12
0x101e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       383	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7	CALL_27
0x1022	          0x4889c7	                            mov rdi, rax	       383	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7	CALL_27
0x1025	      0xe81df6ffff	            call sym.grow_combine_buffer	       383	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7	CALL_27
0x102a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       384	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x102e	        0x488b4078	            mov rax, qword [rax + 0x78] 	       384	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x1032	          0x8b55a4	             mov edx, dword [rbp - 0x5c]	       384	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x1035	          0x4863d2	                         movsxd rdx, edx	       384	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x1038	        0x48c1e202	                              shl rdx, 2	       384	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x103c	          0x4801c2	                            add rdx, rax	       384	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x103f	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       384	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x1042	            0x4898	                                    cdqe	       384	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x1044	    0x488d0c850000	                        lea rcx, [rax*4]	       384	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x104c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       384	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x1050	          0x4801c8	                            add rax, rcx	       384	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x1053	            0x8b00	                    mov eax, dword [rax]	       384	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x1055	            0x8902	                    mov dword [rdx], eax	       384	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x1057	        0x8345a401	               add dword [rbp - 0x5c], 1	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x105b	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x105e	            0x4898	                                    cdqe	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x1060	    0x488d14850000	                        lea rdx, [rax*4]	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x1068	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x106c	          0x4801d0	                            add rax, rdx	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x106f	            0x8b00	                    mov eax, dword [rax]	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x1071	            0x85c0	                           test eax, eax	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x1073	            0x7599	                           jne 0x400104e	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x1075	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       386	state.c	FUNCTION_15	FOR_3	IF_11	IF_13
0x1079	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       386	state.c	FUNCTION_15	FOR_3	IF_11	IF_13
0x1080	          0x3b45a4	             cmp eax, dword [rbp - 0x5c]	       386	state.c	FUNCTION_15	FOR_3	IF_11	IF_13
0x1083	            0x7f0c	                            jg 0x40010d1	       386	state.c	FUNCTION_15	FOR_3	IF_11	IF_13
0x1085	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       387	state.c	FUNCTION_15	FOR_3	IF_11	CALL_28
0x1089	          0x4889c7	                            mov rdi, rax	       387	state.c	FUNCTION_15	FOR_3	IF_11	CALL_28
0x108c	      0xe8b6f5ffff	            call sym.grow_combine_buffer	       387	state.c	FUNCTION_15	FOR_3	IF_11	CALL_28
0x1091	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       388	state.c	FUNCTION_15	FOR_3	IF_11
0x1095	        0x488b4078	            mov rax, qword [rax + 0x78] 	       388	state.c	FUNCTION_15	FOR_3	IF_11
0x1099	          0x8b55a4	             mov edx, dword [rbp - 0x5c]	       388	state.c	FUNCTION_15	FOR_3	IF_11
0x109c	          0x4863d2	                         movsxd rdx, edx	       388	state.c	FUNCTION_15	FOR_3	IF_11
0x109f	        0x48c1e202	                              shl rdx, 2	       388	state.c	FUNCTION_15	FOR_3	IF_11
0x10a3	          0x4801d0	                            add rax, rdx	       388	state.c	FUNCTION_15	FOR_3	IF_11
0x10a6	    0xc70000000000	                      mov dword [rax], 0	       388	state.c	FUNCTION_15	FOR_3	IF_11
0x10ac	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       389	state.c	FUNCTION_15	FOR_3	IF_11
0x10b0	          0x8b55a0	             mov edx, dword [rbp - 0x60]	       389	state.c	FUNCTION_15	FOR_3	IF_11
0x10b3	    0x899088000000	             mov dword [rax + 0x88], edx	       389	state.c	FUNCTION_15	FOR_3	IF_11
0x10b9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       390	state.c	FUNCTION_15	FOR_3	IF_11
0x10bd	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       390	state.c	FUNCTION_15	FOR_3	IF_11
0x10c1	        0x488b5230	            mov rdx, qword [rdx + 0x30] 	       390	state.c	FUNCTION_15	FOR_3	IF_11
0x10c5	    0x4889908c0000	             mov qword [rax + 0x8c], rdx	       390	state.c	FUNCTION_15	FOR_3	IF_11
0x10cc	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x10d0	          0x8b5034	            mov edx, dword [rax + 0x34] 	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x10d3	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x10d6	          0x8d0c02	                    lea ecx, [rdx + rax]	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x10d9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x10dd	        0x488b5058	            mov rdx, qword [rax + 0x58] 	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x10e1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x10e5	          0x8b4030	            mov eax, dword [rax + 0x30] 	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x10e8	            0x4898	                                    cdqe	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x10ea	        0x48c1e002	                              shl rax, 2	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x10ee	          0x4801d0	                            add rax, rdx	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x10f1	           0xfb600	                   movzx eax, byte [rax]	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x10f4	          0x83e001	                              and eax, 1	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x10f7	            0x84c0	                             test al, al	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x10f9	            0x7412	                            je 0x400114d	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x10fb	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x10ff	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x1102	            0x89c2	                            mov edx, eax	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x1104	          0xc1ea1f	                           shr edx, 0x1f	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x1107	             0x1d0	                            add eax, edx	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x1109	            0xd1f8	                              sar eax, 1	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x110b	            0xeb07	                           jmp 0x4001154	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x110d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x1111	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x1114	            0x39c1	                            cmp ecx, eax	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x1116	            0x7c1f	                            jl 0x4001177	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x1118	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       394	state.c	FUNCTION_15	FOR_3	IF_14	IF_15
0x111c	     0xfb680940000	           movzx eax, byte [rax + 0x94] 	       394	state.c	FUNCTION_15	FOR_3	IF_14	IF_15
0x1123	          0x83e004	                              and eax, 4	       394	state.c	FUNCTION_15	FOR_3	IF_14	IF_15
0x1126	            0x84c0	                             test al, al	       394	state.c	FUNCTION_15	FOR_3	IF_14	IF_15
0x1128	            0x7420	                            je 0x400118a	       394	state.c	FUNCTION_15	FOR_3	IF_14	IF_15
0x112a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       395	state.c	FUNCTION_15	FOR_3	IF_14	IF_15
0x112e	    0xc74038010000	               mov dword [rax + 0x38], 1	       395	state.c	FUNCTION_15	FOR_3	IF_14	IF_15
0x1135	            0xeb13	                           jmp 0x400118a	       395	state.c	FUNCTION_15	FOR_3	IF_14	IF_15
0x1137	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       398	state.c	FUNCTION_15	FOR_3	ELSE_2
0x113b	          0x8b5034	            mov edx, dword [rax + 0x34] 	       398	state.c	FUNCTION_15	FOR_3	ELSE_2
0x113e	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       398	state.c	FUNCTION_15	FOR_3	ELSE_2
0x1141	             0x1c2	                            add edx, eax	       398	state.c	FUNCTION_15	FOR_3	ELSE_2
0x1143	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       398	state.c	FUNCTION_15	FOR_3	ELSE_2
0x1147	          0x895034	             mov dword [rax + 0x34], edx	       398	state.c	FUNCTION_15	FOR_3	ELSE_2
0x114a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       400	state.c	FUNCTION_15	FOR_3	CALL_30
0x114e	          0x488b00	                    mov rax, qword [rax]	       400	state.c	FUNCTION_15	FOR_3	CALL_30
0x1151	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       400	state.c	FUNCTION_15	FOR_3	CALL_30
0x1155	          0x4889d6	                            mov rsi, rdx	       400	state.c	FUNCTION_15	FOR_3	CALL_30
0x1158	          0x4889c7	                            mov rdi, rax	       400	state.c	FUNCTION_15	FOR_3	CALL_30
0x115b	      0xe800000000	                          call 0x40011a0	       400	state.c	FUNCTION_15	FOR_3	CALL_30
0x1160	        0x83459401	               add dword [rbp - 0x6c], 1	       319	state.c	FUNCTION_15	FOR_3
0x1164	          0x8b4590	             mov eax, dword [rbp - 0x70]	       319	state.c	FUNCTION_15	FOR_3
0x1167	          0x394594	            cmp dword [rbp - 0x6c], eax 	       319	state.c	FUNCTION_15	FOR_3
0x116a	     0xf8c6dfcffff	                            jl 0x4000e1d	       319	state.c	FUNCTION_15	FOR_3
0x1170	        0x488d4db0	                   lea rcx, [rbp - 0x50]	       403	state.c	FUNCTION_15	CALL_31
0x1174	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       403	state.c	FUNCTION_15	CALL_31
0x1178	      0xba00000000	                              mov edx, 0	       403	state.c	FUNCTION_15	CALL_31
0x117d	          0x4889ce	                            mov rsi, rcx	       403	state.c	FUNCTION_15	CALL_31
0x1180	          0x4889c7	                            mov rdi, rax	       403	state.c	FUNCTION_15	CALL_31
0x1183	      0xe880efffff	                   call sym.updatecursor	       403	state.c	FUNCTION_15	CALL_31
0x1188	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       414	state.c	FUNCTION_15	CALL_34
0x118c	          0x488b00	                    mov rax, qword [rax]	       414	state.c	FUNCTION_15	CALL_34
0x118f	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       414	state.c	FUNCTION_15	CALL_34
0x1193	          0x4889d6	                            mov rsi, rdx	       414	state.c	FUNCTION_15	CALL_34
0x1196	          0x4889c7	                            mov rdi, rax	       414	state.c	FUNCTION_15	CALL_34
0x1199	      0xe800000000	                          call 0x40011de	       414	state.c	FUNCTION_15	CALL_34
0x119e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       415	state.c	FUNCTION_15
0x11a2	        0x488b75f8	                mov rsi, qword [rbp - 8]	       416	state.c	FUNCTION_15
0x11a6	    0x644833342528	                xor rsi, qword fs:[0x28]	       416	state.c	FUNCTION_15
0x11af	            0x7405	                            je 0x40011f6	       416	state.c	FUNCTION_15
0x11b1	      0xe800000000	                          call 0x40011f6	       416	state.c	FUNCTION_15
0x11b6	              0xc9	                                   leave	       416	state.c	FUNCTION_15
0x11b7	              0xc3	                                     ret	       416	state.c	FUNCTION_15
erase	SWITCH,0:functions,0:ELSE,0:CALL,0:WHILE,0:DO,0:IF,2:FOR,0	31
0x1b1	              0x55	                                push rbp	        46	state.c	FUNCTION_3
0x1b2	          0x4889e5	                            mov rbp, rsp	        46	state.c	FUNCTION_3
0x1b5	        0x4883ec20	                           sub rsp, 0x20	        46	state.c	FUNCTION_3
0x1b9	        0x48897df8	                mov qword [rbp - 8], rdi	        46	state.c	FUNCTION_3
0x1bd	          0x4889f0	                            mov rax, rsi	        46	state.c	FUNCTION_3
0x1c0	          0x4889d6	                            mov rsi, rdx	        46	state.c	FUNCTION_3
0x1c3	          0x4889f2	                            mov rdx, rsi	        46	state.c	FUNCTION_3
0x1c6	        0x488945e0	             mov qword [rbp - 0x20], rax	        46	state.c	FUNCTION_3
0x1ca	        0x488955e8	             mov qword [rbp - 0x18], rdx	        46	state.c	FUNCTION_3
0x1ce	          0x894df4	              mov dword [rbp - 0xc], ecx	        46	state.c	FUNCTION_3
0x1d1	        0x488b45f8	                mov rax, qword [rbp - 8]	        47	state.c	FUNCTION_3	IF_1
0x1d5	        0x488b4008	                mov rax, qword [rax + 8]	        47	state.c	FUNCTION_3	IF_1
0x1d9	          0x4885c0	                           test rax, rax	        47	state.c	FUNCTION_3	IF_1
0x1dc	            0x7434	                            je 0x4000252	        47	state.c	FUNCTION_3	IF_1
0x1de	        0x488b45f8	                mov rax, qword [rbp - 8]	        47	state.c	FUNCTION_3	IF_1
0x1e2	        0x488b4008	                mov rax, qword [rax + 8]	        47	state.c	FUNCTION_3	IF_1
0x1e6	        0x488b4020	            mov rax, qword [rax + 0x20] 	        47	state.c	FUNCTION_3	IF_1
0x1ea	          0x4885c0	                           test rax, rax	        47	state.c	FUNCTION_3	IF_1
0x1ed	            0x7423	                            je 0x4000252	        47	state.c	FUNCTION_3	IF_1
0x1ef	        0x488b45f8	                mov rax, qword [rbp - 8]	        48	state.c	FUNCTION_3	IF_1	IF_2
0x1f3	        0x488b4008	                mov rax, qword [rax + 8]	        48	state.c	FUNCTION_3	IF_1	IF_2
0x1f7	        0x488b4020	            mov rax, qword [rax + 0x20] 	        48	state.c	FUNCTION_3	IF_1	IF_2
0x1fb	        0x488b55f8	                mov rdx, qword [rbp - 8]	        48	state.c	FUNCTION_3	IF_1	IF_2
0x1ff	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	        48	state.c	FUNCTION_3	IF_1	IF_2
0x203	          0x8b55f4	              mov edx, dword [rbp - 0xc]	        48	state.c	FUNCTION_3	IF_1	IF_2
0x206	        0x488b7de0	             mov rdi, qword [rbp - 0x20]	        48	state.c	FUNCTION_3	IF_1	IF_2
0x20a	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	        48	state.c	FUNCTION_3	IF_1	IF_2
0x20e	            0xffd0	                                call rax	        48	state.c	FUNCTION_3	IF_1	IF_2
0x210	            0x85c0	                           test eax, eax	        48	state.c	FUNCTION_3	IF_1	IF_2
0x212	              0xc9	                                   leave	        50	state.c	FUNCTION_3
0x213	              0xc3	                                     ret	        50	state.c	FUNCTION_3
request_dec_mode	SWITCH,1:functions,0:ELSE,0:CALL,2:WHILE,0:DO,0:IF,0:FOR,0	191
0x2134	              0x55	                                push rbp	       824	state.c	FUNCTION_24
0x2135	          0x4889e5	                            mov rbp, rsp	       824	state.c	FUNCTION_24
0x2138	        0x4883ec20	                           sub rsp, 0x20	       824	state.c	FUNCTION_24
0x213c	        0x48897de8	             mov qword [rbp - 0x18], rdi	       824	state.c	FUNCTION_24
0x2140	          0x8975e4	             mov dword [rbp - 0x1c], esi	       824	state.c	FUNCTION_24
0x2143	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       827	state.c	FUNCTION_24	SWITCH_1
0x2146	      0x3de8030000	                          cmp eax, 0x3e8	       827	state.c	FUNCTION_24	SWITCH_1
0x214b	     0xf848d010000	                            je 0x400231e	       827	state.c	FUNCTION_24	SWITCH_1
0x2151	      0x3de8030000	                          cmp eax, 0x3e8	       827	state.c	FUNCTION_24	SWITCH_1
0x2156	            0x7f4e	                            jg 0x40021e6	       827	state.c	FUNCTION_24	SWITCH_1
0x2158	          0x83f807	                              cmp eax, 7	       827	state.c	FUNCTION_24	SWITCH_1
0x215b	     0xf840d010000	                            je 0x40022ae	       827	state.c	FUNCTION_24	SWITCH_1
0x2161	          0x83f807	                              cmp eax, 7	       827	state.c	FUNCTION_24	SWITCH_1
0x2164	            0x7f20	                            jg 0x40021c6	       827	state.c	FUNCTION_24	SWITCH_1
0x2166	          0x83f805	                              cmp eax, 5	       827	state.c	FUNCTION_24	SWITCH_1
0x2169	     0xf84c7000000	                            je 0x4002276	       827	state.c	FUNCTION_24	SWITCH_1
0x216f	          0x83f805	                              cmp eax, 5	       827	state.c	FUNCTION_24	SWITCH_1
0x2172	     0xf8fda000000	                            jg 0x4002292	       827	state.c	FUNCTION_24	SWITCH_1
0x2178	          0x83f801	                              cmp eax, 1	       827	state.c	FUNCTION_24	SWITCH_1
0x217b	     0xf849a000000	                            je 0x400225b	       827	state.c	FUNCTION_24	SWITCH_1
0x2181	      0xe92f020000	                           jmp 0x40023f5	       827	state.c	FUNCTION_24	SWITCH_1
0x2186	          0x83f819	                           cmp eax, 0x19	       827	state.c	FUNCTION_24	SWITCH_1
0x2189	     0xf8417010000	                            je 0x40022e6	       827	state.c	FUNCTION_24	SWITCH_1
0x218f	          0x83f845	                           cmp eax, 0x45	       827	state.c	FUNCTION_24	SWITCH_1
0x2192	     0xf842a010000	                            je 0x4002302	       827	state.c	FUNCTION_24	SWITCH_1
0x2198	          0x83f80c	                            cmp eax, 0xc	       827	state.c	FUNCTION_24	SWITCH_1
0x219b	     0xf84e9000000	                            je 0x40022ca	       827	state.c	FUNCTION_24	SWITCH_1
0x21a1	      0xe90f020000	                           jmp 0x40023f5	       827	state.c	FUNCTION_24	SWITCH_1
0x21a6	      0x3ded030000	                          cmp eax, 0x3ed	       827	state.c	FUNCTION_24	SWITCH_1
0x21ab	     0xf8491010000	                            je 0x4002382	       827	state.c	FUNCTION_24	SWITCH_1
0x21b1	      0x3ded030000	                          cmp eax, 0x3ed	       827	state.c	FUNCTION_24	SWITCH_1
0x21b6	            0x7f26	                            jg 0x400221e	       827	state.c	FUNCTION_24	SWITCH_1
0x21b8	      0x3deb030000	                          cmp eax, 0x3eb	       827	state.c	FUNCTION_24	SWITCH_1
0x21bd	     0xf844b010000	                            je 0x400234e	       827	state.c	FUNCTION_24	SWITCH_1
0x21c3	      0x3deb030000	                          cmp eax, 0x3eb	       827	state.c	FUNCTION_24	SWITCH_1
0x21c8	     0xf8f58010000	                            jg 0x4002366	       827	state.c	FUNCTION_24	SWITCH_1
0x21ce	      0x3dea030000	                          cmp eax, 0x3ea	       827	state.c	FUNCTION_24	SWITCH_1
0x21d3	     0xf841d010000	                            je 0x4002336	       827	state.c	FUNCTION_24	SWITCH_1
0x21d9	      0xe9d7010000	                           jmp 0x40023f5	       827	state.c	FUNCTION_24	SWITCH_1
0x21de	      0x3df7030000	                          cmp eax, 0x3f7	       827	state.c	FUNCTION_24	SWITCH_1
0x21e3	     0xf8486010000	                            je 0x40023af	       827	state.c	FUNCTION_24	SWITCH_1
0x21e9	      0x3df7030000	                          cmp eax, 0x3f7	       827	state.c	FUNCTION_24	SWITCH_1
0x21ee	            0x7f10	                            jg 0x4002240	       827	state.c	FUNCTION_24	SWITCH_1
0x21f0	      0x3dee030000	                          cmp eax, 0x3ee	       827	state.c	FUNCTION_24	SWITCH_1
0x21f5	     0xf845f010000	                            je 0x400239a	       827	state.c	FUNCTION_24	SWITCH_1
0x21fb	      0xe9b5010000	                           jmp 0x40023f5	       827	state.c	FUNCTION_24	SWITCH_1
0x2200	      0x3d17040000	                          cmp eax, 0x417	       827	state.c	FUNCTION_24	SWITCH_1
0x2205	     0xf8479010000	                            je 0x40023c4	       827	state.c	FUNCTION_24	SWITCH_1
0x220b	      0x3dd4070000	                          cmp eax, 0x7d4	       827	state.c	FUNCTION_24	SWITCH_1
0x2210	     0xf8486010000	                            je 0x40023dc	       827	state.c	FUNCTION_24	SWITCH_1
0x2216	      0xe99a010000	                           jmp 0x40023f5	       827	state.c	FUNCTION_24	SWITCH_1
0x221b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       829	state.c	FUNCTION_24	SWITCH_1
0x221f	     0xfb680940000	           movzx eax, byte [rax + 0x94] 	       829	state.c	FUNCTION_24	SWITCH_1
0x2226	            0xd0e8	                               shr al, 1	       829	state.c	FUNCTION_24	SWITCH_1
0x2228	          0x83e001	                              and eax, 1	       829	state.c	FUNCTION_24	SWITCH_1
0x222b	           0xfb6c0	                           movzx eax, al	       829	state.c	FUNCTION_24	SWITCH_1
0x222e	          0x8945fc	                mov dword [rbp - 4], eax	       829	state.c	FUNCTION_24	SWITCH_1
0x2231	      0xe9aa010000	                           jmp 0x4002420	       830	state.c	FUNCTION_24	SWITCH_1
0x2236	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       833	state.c	FUNCTION_24	SWITCH_1
0x223a	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	       833	state.c	FUNCTION_24	SWITCH_1
0x2241	          0xc0e803	                               shr al, 3	       833	state.c	FUNCTION_24	SWITCH_1
0x2244	          0x83e001	                              and eax, 1	       833	state.c	FUNCTION_24	SWITCH_1
0x2247	           0xfb6c0	                           movzx eax, al	       833	state.c	FUNCTION_24	SWITCH_1
0x224a	          0x8945fc	                mov dword [rbp - 4], eax	       833	state.c	FUNCTION_24	SWITCH_1
0x224d	      0xe98e010000	                           jmp 0x4002420	       834	state.c	FUNCTION_24	SWITCH_1
0x2252	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       837	state.c	FUNCTION_24	SWITCH_1
0x2256	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	       837	state.c	FUNCTION_24	SWITCH_1
0x225d	          0xc0e802	                               shr al, 2	       837	state.c	FUNCTION_24	SWITCH_1
0x2260	          0x83e001	                              and eax, 1	       837	state.c	FUNCTION_24	SWITCH_1
0x2263	           0xfb6c0	                           movzx eax, al	       837	state.c	FUNCTION_24	SWITCH_1
0x2266	          0x8945fc	                mov dword [rbp - 4], eax	       837	state.c	FUNCTION_24	SWITCH_1
0x2269	      0xe972010000	                           jmp 0x4002420	       838	state.c	FUNCTION_24	SWITCH_1
0x226e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       841	state.c	FUNCTION_24	SWITCH_1
0x2272	     0xfb680940000	           movzx eax, byte [rax + 0x94] 	       841	state.c	FUNCTION_24	SWITCH_1
0x2279	          0xc0e802	                               shr al, 2	       841	state.c	FUNCTION_24	SWITCH_1
0x227c	          0x83e001	                              and eax, 1	       841	state.c	FUNCTION_24	SWITCH_1
0x227f	           0xfb6c0	                           movzx eax, al	       841	state.c	FUNCTION_24	SWITCH_1
0x2282	          0x8945fc	                mov dword [rbp - 4], eax	       841	state.c	FUNCTION_24	SWITCH_1
0x2285	      0xe956010000	                           jmp 0x4002420	       842	state.c	FUNCTION_24	SWITCH_1
0x228a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       845	state.c	FUNCTION_24	SWITCH_1
0x228e	     0xfb680940000	           movzx eax, byte [rax + 0x94] 	       845	state.c	FUNCTION_24	SWITCH_1
0x2295	          0xc0e806	                               shr al, 6	       845	state.c	FUNCTION_24	SWITCH_1
0x2298	          0x83e001	                              and eax, 1	       845	state.c	FUNCTION_24	SWITCH_1
0x229b	           0xfb6c0	                           movzx eax, al	       845	state.c	FUNCTION_24	SWITCH_1
0x229e	          0x8945fc	                mov dword [rbp - 4], eax	       845	state.c	FUNCTION_24	SWITCH_1
0x22a1	      0xe93a010000	                           jmp 0x4002420	       846	state.c	FUNCTION_24	SWITCH_1
0x22a6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       849	state.c	FUNCTION_24	SWITCH_1
0x22aa	     0xfb680940000	           movzx eax, byte [rax + 0x94] 	       849	state.c	FUNCTION_24	SWITCH_1
0x22b1	          0xc0e805	                               shr al, 5	       849	state.c	FUNCTION_24	SWITCH_1
0x22b4	          0x83e001	                              and eax, 1	       849	state.c	FUNCTION_24	SWITCH_1
0x22b7	           0xfb6c0	                           movzx eax, al	       849	state.c	FUNCTION_24	SWITCH_1
0x22ba	          0x8945fc	                mov dword [rbp - 4], eax	       849	state.c	FUNCTION_24	SWITCH_1
0x22bd	      0xe91e010000	                           jmp 0x4002420	       850	state.c	FUNCTION_24	SWITCH_1
0x22c2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       853	state.c	FUNCTION_24	SWITCH_1
0x22c6	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	       853	state.c	FUNCTION_24	SWITCH_1
0x22cd	          0xc0e804	                               shr al, 4	       853	state.c	FUNCTION_24	SWITCH_1
0x22d0	          0x83e001	                              and eax, 1	       853	state.c	FUNCTION_24	SWITCH_1
0x22d3	           0xfb6c0	                           movzx eax, al	       853	state.c	FUNCTION_24	SWITCH_1
0x22d6	          0x8945fc	                mov dword [rbp - 4], eax	       853	state.c	FUNCTION_24	SWITCH_1
0x22d9	      0xe902010000	                           jmp 0x4002420	       854	state.c	FUNCTION_24	SWITCH_1
0x22de	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       857	state.c	FUNCTION_24	SWITCH_1
0x22e2	          0x8b406c	            mov eax, dword [rax + 0x6c] 	       857	state.c	FUNCTION_24	SWITCH_1
0x22e5	          0x83f801	                              cmp eax, 1	       857	state.c	FUNCTION_24	SWITCH_1
0x22e8	           0xf94c0	                                 sete al	       857	state.c	FUNCTION_24	SWITCH_1
0x22eb	           0xfb6c0	                           movzx eax, al	       857	state.c	FUNCTION_24	SWITCH_1
0x22ee	          0x8945fc	                mov dword [rbp - 4], eax	       857	state.c	FUNCTION_24	SWITCH_1
0x22f1	      0xe9ea000000	                           jmp 0x4002420	       858	state.c	FUNCTION_24	SWITCH_1
0x22f6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       861	state.c	FUNCTION_24	SWITCH_1
0x22fa	          0x8b406c	            mov eax, dword [rax + 0x6c] 	       861	state.c	FUNCTION_24	SWITCH_1
0x22fd	          0x83f803	                              cmp eax, 3	       861	state.c	FUNCTION_24	SWITCH_1
0x2300	           0xf94c0	                                 sete al	       861	state.c	FUNCTION_24	SWITCH_1
0x2303	           0xfb6c0	                           movzx eax, al	       861	state.c	FUNCTION_24	SWITCH_1
0x2306	          0x8945fc	                mov dword [rbp - 4], eax	       861	state.c	FUNCTION_24	SWITCH_1
0x2309	      0xe9d2000000	                           jmp 0x4002420	       862	state.c	FUNCTION_24	SWITCH_1
0x230e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       865	state.c	FUNCTION_24	SWITCH_1
0x2312	          0x8b406c	            mov eax, dword [rax + 0x6c] 	       865	state.c	FUNCTION_24	SWITCH_1
0x2315	          0x83f805	                              cmp eax, 5	       865	state.c	FUNCTION_24	SWITCH_1
0x2318	           0xf94c0	                                 sete al	       865	state.c	FUNCTION_24	SWITCH_1
0x231b	           0xfb6c0	                           movzx eax, al	       865	state.c	FUNCTION_24	SWITCH_1
0x231e	          0x8945fc	                mov dword [rbp - 4], eax	       865	state.c	FUNCTION_24	SWITCH_1
0x2321	      0xe9ba000000	                           jmp 0x4002420	       866	state.c	FUNCTION_24	SWITCH_1
0x2326	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       869	state.c	FUNCTION_24	SWITCH_1
0x232a	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	       869	state.c	FUNCTION_24	SWITCH_1
0x2331	          0xc0e806	                               shr al, 6	       869	state.c	FUNCTION_24	SWITCH_1
0x2334	          0x83e001	                              and eax, 1	       869	state.c	FUNCTION_24	SWITCH_1
0x2337	           0xfb6c0	                           movzx eax, al	       869	state.c	FUNCTION_24	SWITCH_1
0x233a	          0x8945fc	                mov dword [rbp - 4], eax	       869	state.c	FUNCTION_24	SWITCH_1
0x233d	      0xe99e000000	                           jmp 0x4002420	       870	state.c	FUNCTION_24	SWITCH_1
0x2342	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       873	state.c	FUNCTION_24	SWITCH_1
0x2346	          0x8b4070	            mov eax, dword [rax + 0x70] 	       873	state.c	FUNCTION_24	SWITCH_1
0x2349	          0x83f801	                              cmp eax, 1	       873	state.c	FUNCTION_24	SWITCH_1
0x234c	           0xf94c0	                                 sete al	       873	state.c	FUNCTION_24	SWITCH_1
0x234f	           0xfb6c0	                           movzx eax, al	       873	state.c	FUNCTION_24	SWITCH_1
0x2352	          0x8945fc	                mov dword [rbp - 4], eax	       873	state.c	FUNCTION_24	SWITCH_1
0x2355	      0xe986000000	                           jmp 0x4002420	       874	state.c	FUNCTION_24	SWITCH_1
0x235a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       877	state.c	FUNCTION_24	SWITCH_1
0x235e	          0x8b4070	            mov eax, dword [rax + 0x70] 	       877	state.c	FUNCTION_24	SWITCH_1
0x2361	          0x83f802	                              cmp eax, 2	       877	state.c	FUNCTION_24	SWITCH_1
0x2364	           0xf94c0	                                 sete al	       877	state.c	FUNCTION_24	SWITCH_1
0x2367	           0xfb6c0	                           movzx eax, al	       877	state.c	FUNCTION_24	SWITCH_1
0x236a	          0x8945fc	                mov dword [rbp - 4], eax	       877	state.c	FUNCTION_24	SWITCH_1
0x236d	            0xeb71	                           jmp 0x4002420	       878	state.c	FUNCTION_24	SWITCH_1
0x236f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       881	state.c	FUNCTION_24	SWITCH_1
0x2373	          0x8b4070	            mov eax, dword [rax + 0x70] 	       881	state.c	FUNCTION_24	SWITCH_1
0x2376	          0x83f803	                              cmp eax, 3	       881	state.c	FUNCTION_24	SWITCH_1
0x2379	           0xf94c0	                                 sete al	       881	state.c	FUNCTION_24	SWITCH_1
0x237c	           0xfb6c0	                           movzx eax, al	       881	state.c	FUNCTION_24	SWITCH_1
0x237f	          0x8945fc	                mov dword [rbp - 4], eax	       881	state.c	FUNCTION_24	SWITCH_1
0x2382	            0xeb5c	                           jmp 0x4002420	       882	state.c	FUNCTION_24	SWITCH_1
0x2384	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       885	state.c	FUNCTION_24	SWITCH_1
0x2388	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	       885	state.c	FUNCTION_24	SWITCH_1
0x238f	            0xd0e8	                               shr al, 1	       885	state.c	FUNCTION_24	SWITCH_1
0x2391	          0x83e001	                              and eax, 1	       885	state.c	FUNCTION_24	SWITCH_1
0x2394	           0xfb6c0	                           movzx eax, al	       885	state.c	FUNCTION_24	SWITCH_1
0x2397	          0x8945fc	                mov dword [rbp - 4], eax	       885	state.c	FUNCTION_24	SWITCH_1
0x239a	            0xeb44	                           jmp 0x4002420	       886	state.c	FUNCTION_24	SWITCH_1
0x239c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       889	state.c	FUNCTION_24	SWITCH_1
0x23a0	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	       889	state.c	FUNCTION_24	SWITCH_1
0x23a7	          0xc0e805	                               shr al, 5	       889	state.c	FUNCTION_24	SWITCH_1
0x23aa	          0x83e001	                              and eax, 1	       889	state.c	FUNCTION_24	SWITCH_1
0x23ad	           0xfb6c0	                           movzx eax, al	       889	state.c	FUNCTION_24	SWITCH_1
0x23b0	          0x8945fc	                mov dword [rbp - 4], eax	       889	state.c	FUNCTION_24	SWITCH_1
0x23b3	            0xeb2b	                           jmp 0x4002420	       890	state.c	FUNCTION_24	SWITCH_1
0x23b5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       893	state.c	FUNCTION_24	SWITCH_1	CALL_1
0x23b9	          0x488b00	                    mov rax, qword [rax]	       893	state.c	FUNCTION_24	SWITCH_1	CALL_1
0x23bc	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       893	state.c	FUNCTION_24	SWITCH_1	CALL_1
0x23bf	    0x41b800000000	                              mov r8d, 0	       893	state.c	FUNCTION_24	SWITCH_1	CALL_1
0x23c5	            0x89d1	                            mov ecx, edx	       893	state.c	FUNCTION_24	SWITCH_1	CALL_1
0x23c7	      0xba00000000	                              mov edx, 0	       893	state.c	FUNCTION_24	SWITCH_1	CALL_1
0x23cc	      0xbe9b000000	                           mov esi, 0x9b	       893	state.c	FUNCTION_24	SWITCH_1	CALL_1
0x23d1	          0x4889c7	                            mov rdi, rax	       893	state.c	FUNCTION_24	SWITCH_1	CALL_1
0x23d4	      0xb800000000	                              mov eax, 0	       893	state.c	FUNCTION_24	SWITCH_1	CALL_1
0x23d9	      0xe800000000	                          call 0x400241e	       893	state.c	FUNCTION_24	SWITCH_1	CALL_1
0x23de	            0xeb38	                           jmp 0x4002458	       894	state.c	FUNCTION_24	SWITCH_1
0x23e0	        0x837dfc00	                  cmp dword [rbp - 4], 0	       897	state.c	FUNCTION_24	CALL_2
0x23e4	            0x7407	                            je 0x400242d	       897	state.c	FUNCTION_24	CALL_2
0x23e6	      0xb901000000	                              mov ecx, 1	       897	state.c	FUNCTION_24	CALL_2
0x23eb	            0xeb05	                           jmp 0x4002432	       897	state.c	FUNCTION_24	CALL_2
0x23ed	      0xb902000000	                              mov ecx, 2	       897	state.c	FUNCTION_24	CALL_2
0x23f2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       897	state.c	FUNCTION_24	CALL_2
0x23f6	          0x488b00	                    mov rax, qword [rax]	       897	state.c	FUNCTION_24	CALL_2
0x23f9	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       897	state.c	FUNCTION_24	CALL_2
0x23fc	          0x4189c8	                            mov r8d, ecx	       897	state.c	FUNCTION_24	CALL_2
0x23ff	            0x89d1	                            mov ecx, edx	       897	state.c	FUNCTION_24	CALL_2
0x2401	      0xba00000000	                              mov edx, 0	       897	state.c	FUNCTION_24	CALL_2
0x2406	      0xbe9b000000	                           mov esi, 0x9b	       897	state.c	FUNCTION_24	CALL_2
0x240b	          0x4889c7	                            mov rdi, rax	       897	state.c	FUNCTION_24	CALL_2
0x240e	      0xb800000000	                              mov eax, 0	       897	state.c	FUNCTION_24	CALL_2
0x2413	      0xe800000000	                          call 0x4002458	       897	state.c	FUNCTION_24	CALL_2
0x2418	              0xc9	                                   leave	       898	state.c	FUNCTION_24
0x2419	              0xc3	                                     ret	       898	state.c	FUNCTION_24
clear_col_tabstop	SWITCH,0:functions,0:ELSE,0:CALL,0:WHILE,0:DO,0:IF,0:FOR,0	32
0x739	              0x55	                                push rbp	       162	state.c	FUNCTION_10
0x73a	          0x4889e5	                            mov rbp, rsp	       162	state.c	FUNCTION_10
0x73d	        0x48897de8	             mov qword [rbp - 0x18], rdi	       162	state.c	FUNCTION_10
0x741	          0x8975e4	             mov dword [rbp - 0x1c], esi	       162	state.c	FUNCTION_10
0x744	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       163	state.c	FUNCTION_10
0x747	          0x83e007	                              and eax, 7	       163	state.c	FUNCTION_10
0x74a	      0xba01000000	                              mov edx, 1	       163	state.c	FUNCTION_10
0x74f	            0x89c1	                            mov ecx, eax	       163	state.c	FUNCTION_10
0x751	            0xd3e2	                             shl edx, cl	       163	state.c	FUNCTION_10
0x753	            0x89d0	                            mov eax, edx	       163	state.c	FUNCTION_10
0x755	          0x8845ff	                  mov byte [rbp - 1], al	       163	state.c	FUNCTION_10
0x758	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       164	state.c	FUNCTION_10
0x75c	        0x488b5050	            mov rdx, qword [rax + 0x50] 	       164	state.c	FUNCTION_10
0x760	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       164	state.c	FUNCTION_10
0x763	          0xc1f803	                              sar eax, 3	       164	state.c	FUNCTION_10
0x766	            0x4898	                                    cdqe	       164	state.c	FUNCTION_10
0x768	          0x4801c2	                            add rdx, rax	       164	state.c	FUNCTION_10
0x76b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       164	state.c	FUNCTION_10
0x76f	        0x488b4850	            mov rcx, qword [rax + 0x50] 	       164	state.c	FUNCTION_10
0x773	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       164	state.c	FUNCTION_10
0x776	          0xc1f803	                              sar eax, 3	       164	state.c	FUNCTION_10
0x779	            0x4898	                                    cdqe	       164	state.c	FUNCTION_10
0x77b	          0x4801c8	                            add rax, rcx	       164	state.c	FUNCTION_10
0x77e	           0xfb600	                   movzx eax, byte [rax]	       164	state.c	FUNCTION_10
0x781	            0x89c1	                            mov ecx, eax	       164	state.c	FUNCTION_10
0x783	         0xfb645ff	               movzx eax, byte [rbp - 1]	       164	state.c	FUNCTION_10
0x787	            0xf7d0	                                 not eax	       164	state.c	FUNCTION_10
0x789	            0x21c8	                            and eax, ecx	       164	state.c	FUNCTION_10
0x78b	            0x8802	                      mov byte [rdx], al	       164	state.c	FUNCTION_10
0x78d	              0x90	                                     nop	       165	state.c	FUNCTION_10
0x78e	              0x5d	                                 pop rbp	       165	state.c	FUNCTION_10
0x78f	              0xc3	                                     ret	       165	state.c	FUNCTION_10
settermprop_bool	SWITCH,0:functions,0:ELSE,0:CALL,1:WHILE,0:DO,0:IF,0:FOR,0	23
0x14c0	              0x55	                                push rbp	       517	state.c	FUNCTION_17
0x14c1	          0x4889e5	                            mov rbp, rsp	       517	state.c	FUNCTION_17
0x14c4	        0x4883ec20	                           sub rsp, 0x20	       517	state.c	FUNCTION_17
0x14c8	        0x48897de8	             mov qword [rbp - 0x18], rdi	       517	state.c	FUNCTION_17
0x14cc	          0x8975e4	             mov dword [rbp - 0x1c], esi	       517	state.c	FUNCTION_17
0x14cf	          0x8955e0	             mov dword [rbp - 0x20], edx	       517	state.c	FUNCTION_17
0x14d2	    0x64488b042528	                mov rax, qword fs:[0x28]	       517	state.c	FUNCTION_17
0x14db	        0x488945f8	                mov qword [rbp - 8], rax	       517	state.c	FUNCTION_17
0x14df	            0x31c0	                            xor eax, eax	       517	state.c	FUNCTION_17
0x14e1	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       519	state.c	FUNCTION_17
0x14e4	          0x8945f0	             mov dword [rbp - 0x10], eax	       519	state.c	FUNCTION_17
0x14e7	        0x488d55f0	                   lea rdx, [rbp - 0x10]	       520	state.c	FUNCTION_17	CALL_1
0x14eb	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	       520	state.c	FUNCTION_17	CALL_1
0x14ee	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       520	state.c	FUNCTION_17	CALL_1
0x14f2	            0x89ce	                            mov esi, ecx	       520	state.c	FUNCTION_17	CALL_1
0x14f4	          0x4889c7	                            mov rdi, rax	       520	state.c	FUNCTION_17	CALL_1
0x14f7	      0xe800000000	                          call 0x400153c	       520	state.c	FUNCTION_17	CALL_1
0x14fc	        0x488b4df8	                mov rcx, qword [rbp - 8]	       521	state.c	FUNCTION_17
0x1500	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       521	state.c	FUNCTION_17
0x1509	            0x7405	                            je 0x4001550	       521	state.c	FUNCTION_17
0x150b	      0xe800000000	                          call 0x4001550	       521	state.c	FUNCTION_17
0x1510	              0xc9	                                   leave	       521	state.c	FUNCTION_17
0x1511	              0xc3	                                     ret	       521	state.c	FUNCTION_17
on_dcs	SWITCH,0:functions,0:ELSE,1:CALL,2:WHILE,0:DO,0:IF,3:FOR,0	52
0x4c89	              0x55	                                push rbp	      1595	state.c	FUNCTION_28
0x4c8a	          0x4889e5	                            mov rbp, rsp	      1595	state.c	FUNCTION_28
0x4c8d	        0x4883ec30	                           sub rsp, 0x30	      1595	state.c	FUNCTION_28
0x4c91	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1595	state.c	FUNCTION_28
0x4c95	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1595	state.c	FUNCTION_28
0x4c99	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1595	state.c	FUNCTION_28
0x4c9d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1596	state.c	FUNCTION_28
0x4ca1	        0x488945f8	                mov qword [rbp - 8], rax	      1596	state.c	FUNCTION_28
0x4ca5	      0x48837de001	               cmp qword [rbp - 0x20], 1	      1598	state.c	FUNCTION_28	IF_1	CALL_1
0x4caa	            0x7640	                           jbe 0x4004d2c	      1598	state.c	FUNCTION_28	IF_1	CALL_1
0x4cac	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1598	state.c	FUNCTION_28	IF_1	CALL_1
0x4cb0	      0xba02000000	                              mov edx, 2	      1598	state.c	FUNCTION_28	IF_1	CALL_1
0x4cb5	      0xbe00000000	                              mov esi, 0	      1598	state.c	FUNCTION_28	IF_1	CALL_1
0x4cba	          0x4889c7	                            mov rdi, rax	      1598	state.c	FUNCTION_28	IF_1	CALL_1
0x4cbd	      0xe800000000	                          call 0x4004d02	      1598	state.c	FUNCTION_28	IF_1	CALL_1
0x4cc2	            0x85c0	                           test eax, eax	      1598	state.c	FUNCTION_28	IF_1	CALL_1
0x4cc4	            0x7526	                           jne 0x4004d2c	      1598	state.c	FUNCTION_28	IF_1	CALL_1
0x4cc6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1599	state.c	FUNCTION_28	IF_1	CALL_2
0x4cca	        0x488d50fe	                      lea rdx, [rax - 2]	      1599	state.c	FUNCTION_28	IF_1	CALL_2
0x4cce	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1599	state.c	FUNCTION_28	IF_1	CALL_2
0x4cd2	        0x488d4802	                      lea rcx, [rax + 2]	      1599	state.c	FUNCTION_28	IF_1	CALL_2
0x4cd6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1599	state.c	FUNCTION_28	IF_1	CALL_2
0x4cda	          0x4889ce	                            mov rsi, rcx	      1599	state.c	FUNCTION_28	IF_1	CALL_2
0x4cdd	          0x4889c7	                            mov rdi, rax	      1599	state.c	FUNCTION_28	IF_1	CALL_2
0x4ce0	      0xe8effbffff	          call sym.request_status_string	      1599	state.c	FUNCTION_28	IF_1	CALL_2
0x4ce5	      0xb801000000	                              mov eax, 1	      1600	state.c	FUNCTION_28	IF_1
0x4cea	            0xeb4f	                           jmp 0x4004d7b	      1600	state.c	FUNCTION_28	IF_1
0x4cec	        0x488b45f8	                mov rax, qword [rbp - 8]	      1602	state.c	FUNCTION_28	ELSE_1	IF_2
0x4cf0	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1602	state.c	FUNCTION_28	ELSE_1	IF_2
0x4cf4	          0x4885c0	                           test rax, rax	      1602	state.c	FUNCTION_28	ELSE_1	IF_2
0x4cf7	            0x743d	                            je 0x4004d76	      1602	state.c	FUNCTION_28	ELSE_1	IF_2
0x4cf9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1602	state.c	FUNCTION_28	ELSE_1	IF_2
0x4cfd	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1602	state.c	FUNCTION_28	ELSE_1	IF_2
0x4d01	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1602	state.c	FUNCTION_28	ELSE_1	IF_2
0x4d05	          0x4885c0	                           test rax, rax	      1602	state.c	FUNCTION_28	ELSE_1	IF_2
0x4d08	            0x742c	                            je 0x4004d76	      1602	state.c	FUNCTION_28	ELSE_1	IF_2
0x4d0a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1603	state.c	FUNCTION_28	ELSE_1	IF_2	IF_3
0x4d0e	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1603	state.c	FUNCTION_28	ELSE_1	IF_2	IF_3
0x4d12	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1603	state.c	FUNCTION_28	ELSE_1	IF_2	IF_3
0x4d16	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1603	state.c	FUNCTION_28	ELSE_1	IF_2	IF_3
0x4d1a	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      1603	state.c	FUNCTION_28	ELSE_1	IF_2	IF_3
0x4d1e	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	      1603	state.c	FUNCTION_28	ELSE_1	IF_2	IF_3
0x4d22	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1603	state.c	FUNCTION_28	ELSE_1	IF_2	IF_3
0x4d26	          0x4889cf	                            mov rdi, rcx	      1603	state.c	FUNCTION_28	ELSE_1	IF_2	IF_3
0x4d29	            0xffd0	                                call rax	      1603	state.c	FUNCTION_28	ELSE_1	IF_2	IF_3
0x4d2b	            0x85c0	                           test eax, eax	      1603	state.c	FUNCTION_28	ELSE_1	IF_2	IF_3
0x4d2d	            0x7407	                            je 0x4004d76	      1603	state.c	FUNCTION_28	ELSE_1	IF_2	IF_3
0x4d2f	      0xb801000000	                              mov eax, 1	      1604	state.c	FUNCTION_28	ELSE_1	IF_2	IF_3
0x4d34	            0xeb05	                           jmp 0x4004d7b	      1604	state.c	FUNCTION_28	ELSE_1	IF_2	IF_3
0x4d36	      0xb800000000	                              mov eax, 0	      1606	state.c	FUNCTION_28
0x4d3b	              0xc9	                                   leave	      1607	state.c	FUNCTION_28
0x4d3c	              0xc3	                                     ret	      1607	state.c	FUNCTION_28
vterm_state_set_callbacks	SWITCH,0:functions,0:ELSE,1:CALL,0:WHILE,0:DO,0:IF,2:FOR,0	38
0x56bd	              0x55	                                push rbp	      1814	state.c	FUNCTION_34
0x56be	          0x4889e5	                            mov rbp, rsp	      1814	state.c	FUNCTION_34
0x56c1	        0x4883ec20	                           sub rsp, 0x20	      1814	state.c	FUNCTION_34
0x56c5	        0x48897df8	                mov qword [rbp - 8], rdi	      1814	state.c	FUNCTION_34
0x56c9	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1814	state.c	FUNCTION_34
0x56cd	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1814	state.c	FUNCTION_34
0x56d1	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1815	state.c	FUNCTION_34	IF_1
0x56d6	            0x7451	                            je 0x4005769	      1815	state.c	FUNCTION_34	IF_1
0x56d8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1816	state.c	FUNCTION_34	IF_1
0x56dc	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1816	state.c	FUNCTION_34	IF_1
0x56e0	        0x48895008	                mov qword [rax + 8], rdx	      1816	state.c	FUNCTION_34	IF_1
0x56e4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1817	state.c	FUNCTION_34	IF_1
0x56e8	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1817	state.c	FUNCTION_34	IF_1
0x56ec	        0x48895010	             mov qword [rax + 0x10], rdx	      1817	state.c	FUNCTION_34	IF_1
0x56f0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1819	state.c	FUNCTION_34	IF_1	IF_2
0x56f4	        0x488b4008	                mov rax, qword [rax + 8]	      1819	state.c	FUNCTION_34	IF_1	IF_2
0x56f8	          0x4885c0	                           test rax, rax	      1819	state.c	FUNCTION_34	IF_1	IF_2
0x56fb	            0x7444	                            je 0x4005781	      1819	state.c	FUNCTION_34	IF_1	IF_2
0x56fd	        0x488b45f8	                mov rax, qword [rbp - 8]	      1819	state.c	FUNCTION_34	IF_1	IF_2
0x5701	        0x488b4008	                mov rax, qword [rax + 8]	      1819	state.c	FUNCTION_34	IF_1	IF_2
0x5705	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1819	state.c	FUNCTION_34	IF_1	IF_2
0x5709	          0x4885c0	                           test rax, rax	      1819	state.c	FUNCTION_34	IF_1	IF_2
0x570c	            0x7433	                            je 0x4005781	      1819	state.c	FUNCTION_34	IF_1	IF_2
0x570e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1820	state.c	FUNCTION_34	IF_1	IF_2
0x5712	        0x488b4008	                mov rax, qword [rax + 8]	      1820	state.c	FUNCTION_34	IF_1	IF_2
0x5716	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1820	state.c	FUNCTION_34	IF_1	IF_2
0x571a	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1820	state.c	FUNCTION_34	IF_1	IF_2
0x571e	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      1820	state.c	FUNCTION_34	IF_1	IF_2
0x5722	          0x4889d7	                            mov rdi, rdx	      1820	state.c	FUNCTION_34	IF_1	IF_2
0x5725	            0xffd0	                                call rax	      1820	state.c	FUNCTION_34	IF_1	IF_2
0x5727	            0xeb18	                           jmp 0x4005781	      1826	state.c	FUNCTION_34
0x5729	        0x488b45f8	                mov rax, qword [rbp - 8]	      1823	state.c	FUNCTION_34	ELSE_1
0x572d	    0x48c740080000	                  mov qword [rax + 8], 0	      1823	state.c	FUNCTION_34	ELSE_1
0x5735	        0x488b45f8	                mov rax, qword [rbp - 8]	      1824	state.c	FUNCTION_34	ELSE_1
0x5739	    0x48c740100000	               mov qword [rax + 0x10], 0	      1824	state.c	FUNCTION_34	ELSE_1
0x5741	              0x90	                                     nop	      1826	state.c	FUNCTION_34
0x5742	              0xc9	                                   leave	      1826	state.c	FUNCTION_34
0x5743	              0xc3	                                     ret	      1826	state.c	FUNCTION_34
set_dec_mode	SWITCH,1:functions,0:ELSE,0:CALL,12:WHILE,0:DO,0:IF,1:FOR,1	272
0x1d0d	              0x55	                                push rbp	       729	state.c	FUNCTION_23
0x1d0e	          0x4889e5	                            mov rbp, rsp	       729	state.c	FUNCTION_23
0x1d11	        0x4883ec30	                           sub rsp, 0x30	       729	state.c	FUNCTION_23
0x1d15	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       729	state.c	FUNCTION_23
0x1d19	          0x8975d4	             mov dword [rbp - 0x2c], esi	       729	state.c	FUNCTION_23
0x1d1c	          0x8955d0	             mov dword [rbp - 0x30], edx	       729	state.c	FUNCTION_23
0x1d1f	    0x64488b042528	                mov rax, qword fs:[0x28]	       729	state.c	FUNCTION_23
0x1d28	        0x488945f8	                mov qword [rbp - 8], rax	       729	state.c	FUNCTION_23
0x1d2c	            0x31c0	                            xor eax, eax	       729	state.c	FUNCTION_23
0x1d2e	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       730	state.c	FUNCTION_23	SWITCH_1
0x1d31	      0x3deb030000	                          cmp eax, 0x3eb	       730	state.c	FUNCTION_23	SWITCH_1
0x1d36	            0x7f6e	                            jg 0x4001de6	       730	state.c	FUNCTION_23	SWITCH_1
0x1d38	      0x3dea030000	                          cmp eax, 0x3ea	       730	state.c	FUNCTION_23	SWITCH_1
0x1d3d	     0xf8d9e020000	                           jge 0x4002021	       730	state.c	FUNCTION_23	SWITCH_1
0x1d43	          0x83f807	                              cmp eax, 7	       730	state.c	FUNCTION_23	SWITCH_1
0x1d46	     0xf84c9010000	                            je 0x4001f55	       730	state.c	FUNCTION_23	SWITCH_1
0x1d4c	          0x83f807	                              cmp eax, 7	       730	state.c	FUNCTION_23	SWITCH_1
0x1d4f	            0x7f20	                            jg 0x4001db1	       730	state.c	FUNCTION_23	SWITCH_1
0x1d51	          0x83f805	                              cmp eax, 5	       730	state.c	FUNCTION_23	SWITCH_1
0x1d54	     0xf84ea000000	                            je 0x4001e84	       730	state.c	FUNCTION_23	SWITCH_1
0x1d5a	          0x83f805	                              cmp eax, 5	       730	state.c	FUNCTION_23	SWITCH_1
0x1d5d	     0xf8ffa000000	                            jg 0x4001e9d	       730	state.c	FUNCTION_23	SWITCH_1
0x1d63	          0x83f801	                              cmp eax, 1	       730	state.c	FUNCTION_23	SWITCH_1
0x1d66	     0xf84af000000	                            je 0x4001e5b	       730	state.c	FUNCTION_23	SWITCH_1
0x1d6c	      0xe9ad030000	                           jmp 0x400215e	       819	state.c	FUNCTION_23	SWITCH_1
0x1d71	          0x83f819	                           cmp eax, 0x19	       730	state.c	FUNCTION_23	SWITCH_1
0x1d74	     0xf84e1010000	                            je 0x4001f9b	       730	state.c	FUNCTION_23	SWITCH_1
0x1d7a	          0x83f819	                           cmp eax, 0x19	       730	state.c	FUNCTION_23	SWITCH_1
0x1d7d	            0x7f0e	                            jg 0x4001dcd	       730	state.c	FUNCTION_23	SWITCH_1
0x1d7f	          0x83f80c	                            cmp eax, 0xc	       730	state.c	FUNCTION_23	SWITCH_1
0x1d82	     0xf84ba010000	                            je 0x4001f82	       730	state.c	FUNCTION_23	SWITCH_1
0x1d88	      0xe991030000	                           jmp 0x400215e	       819	state.c	FUNCTION_23	SWITCH_1
0x1d8d	          0x83f845	                           cmp eax, 0x45	       730	state.c	FUNCTION_23	SWITCH_1
0x1d90	     0xf84de010000	                            je 0x4001fb4	       730	state.c	FUNCTION_23	SWITCH_1
0x1d96	      0x3de8030000	                          cmp eax, 0x3e8	       730	state.c	FUNCTION_23	SWITCH_1
0x1d9b	     0xf8440020000	                            je 0x4002021	       730	state.c	FUNCTION_23	SWITCH_1
0x1da1	      0xe978030000	                           jmp 0x400215e	       819	state.c	FUNCTION_23	SWITCH_1
0x1da6	      0x3df7030000	                          cmp eax, 0x3f7	       730	state.c	FUNCTION_23	SWITCH_1
0x1dab	     0xf84d9020000	                            je 0x40020ca	       730	state.c	FUNCTION_23	SWITCH_1
0x1db1	      0x3df7030000	                          cmp eax, 0x3f7	       730	state.c	FUNCTION_23	SWITCH_1
0x1db6	            0x7f26	                            jg 0x4001e1e	       730	state.c	FUNCTION_23	SWITCH_1
0x1db8	      0x3ded030000	                          cmp eax, 0x3ed	       730	state.c	FUNCTION_23	SWITCH_1
0x1dbd	     0xf8493020000	                            je 0x4002096	       730	state.c	FUNCTION_23	SWITCH_1
0x1dc3	      0x3ded030000	                          cmp eax, 0x3ed	       730	state.c	FUNCTION_23	SWITCH_1
0x1dc8	     0xf8c5d020000	                            jl 0x400206b	       730	state.c	FUNCTION_23	SWITCH_1
0x1dce	      0x3dee030000	                          cmp eax, 0x3ee	       730	state.c	FUNCTION_23	SWITCH_1
0x1dd3	     0xf8493020000	                            je 0x40020ac	       730	state.c	FUNCTION_23	SWITCH_1
0x1dd9	      0xe940030000	                           jmp 0x400215e	       819	state.c	FUNCTION_23	SWITCH_1
0x1dde	      0x3d18040000	                          cmp eax, 0x418	       730	state.c	FUNCTION_23	SWITCH_1
0x1de3	     0xf84d2020000	                            je 0x40020fb	       730	state.c	FUNCTION_23	SWITCH_1
0x1de9	      0x3d18040000	                          cmp eax, 0x418	       730	state.c	FUNCTION_23	SWITCH_1
0x1dee	            0x7f10	                            jg 0x4001e40	       730	state.c	FUNCTION_23	SWITCH_1
0x1df0	      0x3d17040000	                          cmp eax, 0x417	       730	state.c	FUNCTION_23	SWITCH_1
0x1df5	     0xf84aa020000	                            je 0x40020e5	       730	state.c	FUNCTION_23	SWITCH_1
0x1dfb	      0xe91e030000	                           jmp 0x400215e	       819	state.c	FUNCTION_23	SWITCH_1
0x1e00	      0x3d19040000	                          cmp eax, 0x419	       730	state.c	FUNCTION_23	SWITCH_1
0x1e05	     0xf84c3020000	                            je 0x400210e	       730	state.c	FUNCTION_23	SWITCH_1
0x1e0b	      0x3dd4070000	                          cmp eax, 0x7d4	       730	state.c	FUNCTION_23	SWITCH_1
0x1e10	     0xf84df020000	                            je 0x4002135	       730	state.c	FUNCTION_23	SWITCH_1
0x1e16	      0xe903030000	                           jmp 0x400215e	       819	state.c	FUNCTION_23	SWITCH_1
0x1e1b	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       732	state.c	FUNCTION_23	SWITCH_1
0x1e1e	          0x83e001	                              and eax, 1	       732	state.c	FUNCTION_23	SWITCH_1
0x1e21	            0x89c2	                            mov edx, eax	       732	state.c	FUNCTION_23	SWITCH_1
0x1e23	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       732	state.c	FUNCTION_23	SWITCH_1
0x1e27	          0x83e201	                              and edx, 1	       732	state.c	FUNCTION_23	SWITCH_1
0x1e2a	          0x8d0c12	                    lea ecx, [rdx + rdx]	       732	state.c	FUNCTION_23	SWITCH_1
0x1e2d	     0xfb690940000	           movzx edx, byte [rax + 0x94] 	       732	state.c	FUNCTION_23	SWITCH_1
0x1e34	          0x83e2fd	                     and edx, 0xfffffffd	       732	state.c	FUNCTION_23	SWITCH_1
0x1e37	             0x9ca	                             or edx, ecx	       732	state.c	FUNCTION_23	SWITCH_1
0x1e39	    0x889094000000	               mov byte [rax + 0x94], dl	       732	state.c	FUNCTION_23	SWITCH_1
0x1e3f	      0xe9da020000	                           jmp 0x400215e	       733	state.c	FUNCTION_23	SWITCH_1
0x1e44	          0x8b55d0	             mov edx, dword [rbp - 0x30]	       736	state.c	FUNCTION_23	SWITCH_1	CALL_1
0x1e47	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       736	state.c	FUNCTION_23	SWITCH_1	CALL_1
0x1e4b	      0xbe06000000	                              mov esi, 6	       736	state.c	FUNCTION_23	SWITCH_1	CALL_1
0x1e50	          0x4889c7	                            mov rdi, rax	       736	state.c	FUNCTION_23	SWITCH_1	CALL_1
0x1e53	      0xe868f6ffff	               call sym.settermprop_bool	       736	state.c	FUNCTION_23	SWITCH_1	CALL_1
0x1e58	      0xe9c1020000	                           jmp 0x400215e	       737	state.c	FUNCTION_23	SWITCH_1
0x1e5d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       741	state.c	FUNCTION_23	SWITCH_1
0x1e61	        0x488b4030	            mov rax, qword [rax + 0x30] 	       741	state.c	FUNCTION_23	SWITCH_1
0x1e65	        0x488945f0	             mov qword [rbp - 0x10], rax	       741	state.c	FUNCTION_23	SWITCH_1
0x1e69	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       742	state.c	FUNCTION_23	SWITCH_1
0x1e6c	          0x83e001	                              and eax, 1	       742	state.c	FUNCTION_23	SWITCH_1
0x1e6f	            0x89c2	                            mov edx, eax	       742	state.c	FUNCTION_23	SWITCH_1
0x1e71	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       742	state.c	FUNCTION_23	SWITCH_1
0x1e75	          0x83e201	                              and edx, 1	       742	state.c	FUNCTION_23	SWITCH_1
0x1e78	    0x8d0c95000000	                        lea ecx, [rdx*4]	       742	state.c	FUNCTION_23	SWITCH_1
0x1e7f	     0xfb690950000	           movzx edx, byte [rax + 0x95] 	       742	state.c	FUNCTION_23	SWITCH_1
0x1e86	          0x83e2fb	                     and edx, 0xfffffffb	       742	state.c	FUNCTION_23	SWITCH_1
0x1e89	             0x9ca	                             or edx, ecx	       742	state.c	FUNCTION_23	SWITCH_1
0x1e8b	    0x889095000000	               mov byte [rax + 0x95], dl	       742	state.c	FUNCTION_23	SWITCH_1
0x1e91	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       743	state.c	FUNCTION_23	SWITCH_1
0x1e95	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	       743	state.c	FUNCTION_23	SWITCH_1
0x1e9c	          0x83e004	                              and eax, 4	       743	state.c	FUNCTION_23	SWITCH_1
0x1e9f	            0x84c0	                             test al, al	       743	state.c	FUNCTION_23	SWITCH_1
0x1ea1	            0x7409	                            je 0x4001eec	       743	state.c	FUNCTION_23	SWITCH_1
0x1ea3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       743	state.c	FUNCTION_23	SWITCH_1
0x1ea7	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       743	state.c	FUNCTION_23	SWITCH_1
0x1eaa	            0xeb05	                           jmp 0x4001ef1	       743	state.c	FUNCTION_23	SWITCH_1
0x1eac	      0xb800000000	                              mov eax, 0	       743	state.c	FUNCTION_23	SWITCH_1
0x1eb1	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       743	state.c	FUNCTION_23	SWITCH_1
0x1eb5	          0x894230	             mov dword [rdx + 0x30], eax	       743	state.c	FUNCTION_23	SWITCH_1
0x1eb8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x1ebc	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x1ec3	          0x83e004	                              and eax, 4	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x1ec6	            0x84c0	                             test al, al	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x1ec8	            0x7422	                            je 0x4001f2c	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x1eca	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x1ece	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x1ed5	          0x83e010	                           and eax, 0x10	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x1ed8	            0x84c0	                             test al, al	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x1eda	            0x7409	                            je 0x4001f25	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x1edc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x1ee0	          0x8b4044	            mov eax, dword [rax + 0x44] 	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x1ee3	            0xeb0c	                           jmp 0x4001f31	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x1ee5	      0xb800000000	                              mov eax, 0	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x1eea	            0xeb05	                           jmp 0x4001f31	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x1eec	      0xb800000000	                              mov eax, 0	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x1ef1	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x1ef5	          0x894234	             mov dword [rdx + 0x34], eax	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x1ef8	        0x488d4df0	                   lea rcx, [rbp - 0x10]	       745	state.c	FUNCTION_23	SWITCH_1	CALL_3
0x1efc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       745	state.c	FUNCTION_23	SWITCH_1	CALL_3
0x1f00	      0xba01000000	                              mov edx, 1	       745	state.c	FUNCTION_23	SWITCH_1	CALL_3
0x1f05	          0x4889ce	                            mov rsi, rcx	       745	state.c	FUNCTION_23	SWITCH_1	CALL_3
0x1f08	          0x4889c7	                            mov rdi, rax	       745	state.c	FUNCTION_23	SWITCH_1	CALL_3
0x1f0b	      0xe8f8e1ffff	                   call sym.updatecursor	       745	state.c	FUNCTION_23	SWITCH_1	CALL_3
0x1f10	      0xe909020000	                           jmp 0x400215e	       747	state.c	FUNCTION_23	SWITCH_1
0x1f15	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       750	state.c	FUNCTION_23	SWITCH_1
0x1f18	          0x83e001	                              and eax, 1	       750	state.c	FUNCTION_23	SWITCH_1
0x1f1b	            0x89c2	                            mov edx, eax	       750	state.c	FUNCTION_23	SWITCH_1
0x1f1d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       750	state.c	FUNCTION_23	SWITCH_1
0x1f21	          0x83e201	                              and edx, 1	       750	state.c	FUNCTION_23	SWITCH_1
0x1f24	    0x8d0c95000000	                        lea ecx, [rdx*4]	       750	state.c	FUNCTION_23	SWITCH_1
0x1f2b	     0xfb690940000	           movzx edx, byte [rax + 0x94] 	       750	state.c	FUNCTION_23	SWITCH_1
0x1f32	          0x83e2fb	                     and edx, 0xfffffffb	       750	state.c	FUNCTION_23	SWITCH_1
0x1f35	             0x9ca	                             or edx, ecx	       750	state.c	FUNCTION_23	SWITCH_1
0x1f37	    0x889094000000	               mov byte [rax + 0x94], dl	       750	state.c	FUNCTION_23	SWITCH_1
0x1f3d	      0xe9dc010000	                           jmp 0x400215e	       751	state.c	FUNCTION_23	SWITCH_1
0x1f42	          0x8b55d0	             mov edx, dword [rbp - 0x30]	       754	state.c	FUNCTION_23	SWITCH_1	CALL_4
0x1f45	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       754	state.c	FUNCTION_23	SWITCH_1	CALL_4
0x1f49	      0xbe02000000	                              mov esi, 2	       754	state.c	FUNCTION_23	SWITCH_1	CALL_4
0x1f4e	          0x4889c7	                            mov rdi, rax	       754	state.c	FUNCTION_23	SWITCH_1	CALL_4
0x1f51	      0xe86af5ffff	               call sym.settermprop_bool	       754	state.c	FUNCTION_23	SWITCH_1	CALL_4
0x1f56	      0xe9c3010000	                           jmp 0x400215e	       755	state.c	FUNCTION_23	SWITCH_1
0x1f5b	          0x8b55d0	             mov edx, dword [rbp - 0x30]	       758	state.c	FUNCTION_23	SWITCH_1	CALL_5
0x1f5e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       758	state.c	FUNCTION_23	SWITCH_1	CALL_5
0x1f62	      0xbe01000000	                              mov esi, 1	       758	state.c	FUNCTION_23	SWITCH_1	CALL_5
0x1f67	          0x4889c7	                            mov rdi, rax	       758	state.c	FUNCTION_23	SWITCH_1	CALL_5
0x1f6a	      0xe851f5ffff	               call sym.settermprop_bool	       758	state.c	FUNCTION_23	SWITCH_1	CALL_5
0x1f6f	      0xe9aa010000	                           jmp 0x400215e	       759	state.c	FUNCTION_23	SWITCH_1
0x1f74	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       763	state.c	FUNCTION_23	SWITCH_1
0x1f77	          0x83e001	                              and eax, 1	       763	state.c	FUNCTION_23	SWITCH_1
0x1f7a	            0x89c2	                            mov edx, eax	       763	state.c	FUNCTION_23	SWITCH_1
0x1f7c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       763	state.c	FUNCTION_23	SWITCH_1
0x1f80	          0x83e201	                              and edx, 1	       763	state.c	FUNCTION_23	SWITCH_1
0x1f83	            0x89d1	                            mov ecx, edx	       763	state.c	FUNCTION_23	SWITCH_1
0x1f85	          0xc1e104	                              shl ecx, 4	       763	state.c	FUNCTION_23	SWITCH_1
0x1f88	     0xfb690950000	           movzx edx, byte [rax + 0x95] 	       763	state.c	FUNCTION_23	SWITCH_1
0x1f8f	          0x83e2ef	                     and edx, 0xffffffef	       763	state.c	FUNCTION_23	SWITCH_1
0x1f92	             0x9ca	                             or edx, ecx	       763	state.c	FUNCTION_23	SWITCH_1
0x1f94	    0x889095000000	               mov byte [rax + 0x95], dl	       763	state.c	FUNCTION_23	SWITCH_1
0x1f9a	        0x837dd000	               cmp dword [rbp - 0x30], 0	       764	state.c	FUNCTION_23	SWITCH_1	IF_1
0x1f9e	     0xf8479010000	                            je 0x400215d	       764	state.c	FUNCTION_23	SWITCH_1	IF_1
0x1fa4	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       768	state.c	FUNCTION_23	SWITCH_1	IF_1	FOR_1
0x1fab	            0xeb23	                           jmp 0x4002010	       768	state.c	FUNCTION_23	SWITCH_1	IF_1	FOR_1
0x1fad	          0x8b75ec	             mov esi, dword [rbp - 0x14]	       769	state.c	FUNCTION_23	SWITCH_1	IF_1	CALL_6
0x1fb0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       769	state.c	FUNCTION_23	SWITCH_1	IF_1	CALL_6
0x1fb4	    0x41b800000000	                              mov r8d, 0	       769	state.c	FUNCTION_23	SWITCH_1	IF_1	CALL_6
0x1fba	      0xb900000000	                              mov ecx, 0	       769	state.c	FUNCTION_23	SWITCH_1	IF_1	CALL_6
0x1fbf	      0xba01000000	                              mov edx, 1	       769	state.c	FUNCTION_23	SWITCH_1	IF_1	CALL_6
0x1fc4	          0x4889c7	                            mov rdi, rax	       769	state.c	FUNCTION_23	SWITCH_1	IF_1	CALL_6
0x1fc7	      0xe886e9ffff	                   call sym.set_lineinfo	       769	state.c	FUNCTION_23	SWITCH_1	IF_1	CALL_6
0x1fcc	        0x8345ec01	               add dword [rbp - 0x14], 1	       768	state.c	FUNCTION_23	SWITCH_1	IF_1	FOR_1
0x1fd0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       768	state.c	FUNCTION_23	SWITCH_1	IF_1	FOR_1
0x1fd4	          0x8b4028	            mov eax, dword [rax + 0x28] 	       768	state.c	FUNCTION_23	SWITCH_1	IF_1	FOR_1
0x1fd7	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	       768	state.c	FUNCTION_23	SWITCH_1	IF_1	FOR_1
0x1fda	            0x7fd1	                            jg 0x4001fed	       768	state.c	FUNCTION_23	SWITCH_1	IF_1	FOR_1
0x1fdc	      0xe93c010000	                           jmp 0x400215d	       772	state.c	FUNCTION_23	SWITCH_1
0x1fe1	        0x837dd000	               cmp dword [rbp - 0x30], 0	       777	state.c	FUNCTION_23	SWITCH_1	CALL_7
0x1fe5	            0x7427	                            je 0x400204e	       777	state.c	FUNCTION_23	SWITCH_1	CALL_7
0x1fe7	    0x817dd4e80300	          cmp dword [rbp - 0x2c], 0x3e8 	       779	state.c	FUNCTION_23	SWITCH_1
0x1fee	            0x7417	                            je 0x4002047	       779	state.c	FUNCTION_23	SWITCH_1
0x1ff0	    0x817dd4ea0300	          cmp dword [rbp - 0x2c], 0x3ea 	       780	state.c	FUNCTION_23	SWITCH_1
0x1ff7	            0x7507	                           jne 0x4002040	       780	state.c	FUNCTION_23	SWITCH_1
0x1ff9	      0xb802000000	                              mov eax, 2	       780	state.c	FUNCTION_23	SWITCH_1
0x1ffe	            0xeb13	                           jmp 0x4002053	       780	state.c	FUNCTION_23	SWITCH_1
0x2000	      0xb803000000	                              mov eax, 3	       780	state.c	FUNCTION_23	SWITCH_1
0x2005	            0xeb0c	                           jmp 0x4002053	       780	state.c	FUNCTION_23	SWITCH_1
0x2007	      0xb801000000	                              mov eax, 1	       779	state.c	FUNCTION_23	SWITCH_1
0x200c	            0xeb05	                           jmp 0x4002053	       779	state.c	FUNCTION_23	SWITCH_1
0x200e	      0xb800000000	                              mov eax, 0	       777	state.c	FUNCTION_23	SWITCH_1	CALL_7
0x2013	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       777	state.c	FUNCTION_23	SWITCH_1	CALL_7
0x2017	            0x89c2	                            mov edx, eax	       777	state.c	FUNCTION_23	SWITCH_1	CALL_7
0x2019	      0xbe08000000	                              mov esi, 8	       777	state.c	FUNCTION_23	SWITCH_1	CALL_7
0x201e	          0x4889cf	                            mov rdi, rcx	       777	state.c	FUNCTION_23	SWITCH_1	CALL_7
0x2021	      0xe8ecf4ffff	                call sym.settermprop_int	       777	state.c	FUNCTION_23	SWITCH_1	CALL_7
0x2026	      0xe9f3000000	                           jmp 0x400215e	       782	state.c	FUNCTION_23	SWITCH_1
0x202b	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       785	state.c	FUNCTION_23	SWITCH_1
0x202e	          0x83e001	                              and eax, 1	       785	state.c	FUNCTION_23	SWITCH_1
0x2031	            0x89c2	                            mov edx, eax	       785	state.c	FUNCTION_23	SWITCH_1
0x2033	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       785	state.c	FUNCTION_23	SWITCH_1
0x2037	          0x83e201	                              and edx, 1	       785	state.c	FUNCTION_23	SWITCH_1
0x203a	            0x89d1	                            mov ecx, edx	       785	state.c	FUNCTION_23	SWITCH_1
0x203c	          0xc1e106	                              shl ecx, 6	       785	state.c	FUNCTION_23	SWITCH_1
0x203f	     0xfb690950000	           movzx edx, byte [rax + 0x95] 	       785	state.c	FUNCTION_23	SWITCH_1
0x2046	          0x83e2bf	                     and edx, 0xffffffbf	       785	state.c	FUNCTION_23	SWITCH_1
0x2049	             0x9ca	                             or edx, ecx	       785	state.c	FUNCTION_23	SWITCH_1
0x204b	    0x889095000000	               mov byte [rax + 0x95], dl	       785	state.c	FUNCTION_23	SWITCH_1
0x2051	      0xe9c8000000	                           jmp 0x400215e	       786	state.c	FUNCTION_23	SWITCH_1
0x2056	        0x837dd000	               cmp dword [rbp - 0x30], 0	       789	state.c	FUNCTION_23	SWITCH_1
0x205a	           0xf95c0	                                setne al	       789	state.c	FUNCTION_23	SWITCH_1
0x205d	           0xfb6d0	                           movzx edx, al	       789	state.c	FUNCTION_23	SWITCH_1
0x2060	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       789	state.c	FUNCTION_23	SWITCH_1
0x2064	          0x895070	             mov dword [rax + 0x70], edx	       789	state.c	FUNCTION_23	SWITCH_1
0x2067	      0xe9b2000000	                           jmp 0x400215e	       790	state.c	FUNCTION_23	SWITCH_1
0x206c	        0x837dd000	               cmp dword [rbp - 0x30], 0	       793	state.c	FUNCTION_23	SWITCH_1
0x2070	            0x7407	                            je 0x40020b9	       793	state.c	FUNCTION_23	SWITCH_1
0x2072	      0xba02000000	                              mov edx, 2	       793	state.c	FUNCTION_23	SWITCH_1
0x2077	            0xeb05	                           jmp 0x40020be	       793	state.c	FUNCTION_23	SWITCH_1
0x2079	      0xba00000000	                              mov edx, 0	       793	state.c	FUNCTION_23	SWITCH_1
0x207e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       793	state.c	FUNCTION_23	SWITCH_1
0x2082	          0x895070	             mov dword [rax + 0x70], edx	       793	state.c	FUNCTION_23	SWITCH_1
0x2085	      0xe994000000	                           jmp 0x400215e	       794	state.c	FUNCTION_23	SWITCH_1
0x208a	        0x837dd000	               cmp dword [rbp - 0x30], 0	       797	state.c	FUNCTION_23	SWITCH_1
0x208e	            0x7407	                            je 0x40020d7	       797	state.c	FUNCTION_23	SWITCH_1
0x2090	      0xba03000000	                              mov edx, 3	       797	state.c	FUNCTION_23	SWITCH_1
0x2095	            0xeb05	                           jmp 0x40020dc	       797	state.c	FUNCTION_23	SWITCH_1
0x2097	      0xba00000000	                              mov edx, 0	       797	state.c	FUNCTION_23	SWITCH_1
0x209c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       797	state.c	FUNCTION_23	SWITCH_1
0x20a0	          0x895070	             mov dword [rax + 0x70], edx	       797	state.c	FUNCTION_23	SWITCH_1
0x20a3	            0xeb79	                           jmp 0x400215e	       798	state.c	FUNCTION_23	SWITCH_1
0x20a5	          0x8b55d0	             mov edx, dword [rbp - 0x30]	       801	state.c	FUNCTION_23	SWITCH_1	CALL_8
0x20a8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       801	state.c	FUNCTION_23	SWITCH_1	CALL_8
0x20ac	      0xbe03000000	                              mov esi, 3	       801	state.c	FUNCTION_23	SWITCH_1	CALL_8
0x20b1	          0x4889c7	                            mov rdi, rax	       801	state.c	FUNCTION_23	SWITCH_1	CALL_8
0x20b4	      0xe807f4ffff	               call sym.settermprop_bool	       801	state.c	FUNCTION_23	SWITCH_1	CALL_8
0x20b9	            0xeb63	                           jmp 0x400215e	       802	state.c	FUNCTION_23	SWITCH_1
0x20bb	          0x8b55d0	             mov edx, dword [rbp - 0x30]	       805	state.c	FUNCTION_23	SWITCH_1	CALL_9
0x20be	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       805	state.c	FUNCTION_23	SWITCH_1	CALL_9
0x20c2	            0x89d6	                            mov esi, edx	       805	state.c	FUNCTION_23	SWITCH_1	CALL_9
0x20c4	          0x4889c7	                            mov rdi, rax	       805	state.c	FUNCTION_23	SWITCH_1	CALL_9
0x20c7	      0xe850f5ffff	                     call sym.savecursor	       805	state.c	FUNCTION_23	SWITCH_1	CALL_9
0x20cc	            0xeb50	                           jmp 0x400215e	       806	state.c	FUNCTION_23	SWITCH_1
0x20ce	          0x8b55d0	             mov edx, dword [rbp - 0x30]	       809	state.c	FUNCTION_23	SWITCH_1	CALL_10
0x20d1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       809	state.c	FUNCTION_23	SWITCH_1	CALL_10
0x20d5	      0xbe03000000	                              mov esi, 3	       809	state.c	FUNCTION_23	SWITCH_1	CALL_10
0x20da	          0x4889c7	                            mov rdi, rax	       809	state.c	FUNCTION_23	SWITCH_1	CALL_10
0x20dd	      0xe8def3ffff	               call sym.settermprop_bool	       809	state.c	FUNCTION_23	SWITCH_1	CALL_10
0x20e2	          0x8b55d0	             mov edx, dword [rbp - 0x30]	       810	state.c	FUNCTION_23	SWITCH_1	CALL_11
0x20e5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       810	state.c	FUNCTION_23	SWITCH_1	CALL_11
0x20e9	            0x89d6	                            mov esi, edx	       810	state.c	FUNCTION_23	SWITCH_1	CALL_11
0x20eb	          0x4889c7	                            mov rdi, rax	       810	state.c	FUNCTION_23	SWITCH_1	CALL_11
0x20ee	      0xe829f5ffff	                     call sym.savecursor	       810	state.c	FUNCTION_23	SWITCH_1	CALL_11
0x20f3	            0xeb29	                           jmp 0x400215e	       811	state.c	FUNCTION_23	SWITCH_1
0x20f5	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       814	state.c	FUNCTION_23	SWITCH_1
0x20f8	          0x83e001	                              and eax, 1	       814	state.c	FUNCTION_23	SWITCH_1
0x20fb	            0x89c2	                            mov edx, eax	       814	state.c	FUNCTION_23	SWITCH_1
0x20fd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       814	state.c	FUNCTION_23	SWITCH_1
0x2101	          0x83e201	                              and edx, 1	       814	state.c	FUNCTION_23	SWITCH_1
0x2104	            0x89d1	                            mov ecx, edx	       814	state.c	FUNCTION_23	SWITCH_1
0x2106	          0xc1e105	                              shl ecx, 5	       814	state.c	FUNCTION_23	SWITCH_1
0x2109	     0xfb690950000	           movzx edx, byte [rax + 0x95] 	       814	state.c	FUNCTION_23	SWITCH_1
0x2110	          0x83e2df	                     and edx, 0xffffffdf	       814	state.c	FUNCTION_23	SWITCH_1
0x2113	             0x9ca	                             or edx, ecx	       814	state.c	FUNCTION_23	SWITCH_1
0x2115	    0x889095000000	               mov byte [rax + 0x95], dl	       814	state.c	FUNCTION_23	SWITCH_1
0x211b	            0xeb01	                           jmp 0x400215e	       815	state.c	FUNCTION_23	SWITCH_1
0x211d	              0x90	                                     nop	       772	state.c	FUNCTION_23	SWITCH_1
0x211e	        0x488b45f8	                mov rax, qword [rbp - 8]	       821	state.c	FUNCTION_23
0x2122	    0x644833042528	                xor rax, qword fs:[0x28]	       821	state.c	FUNCTION_23
0x212b	            0x7405	                            je 0x4002172	       821	state.c	FUNCTION_23
0x212d	      0xe800000000	                          call 0x4002172	       821	state.c	FUNCTION_23
0x2132	              0xc9	                                   leave	       821	state.c	FUNCTION_23
0x2133	              0xc3	                                     ret	       821	state.c	FUNCTION_23
vterm_state_get_cbdata	SWITCH,0:functions,0:ELSE,0:CALL,0:WHILE,0:DO,0:IF,0:FOR,0	7
0x5744	              0x55	                                push rbp	      1829	state.c	FUNCTION_35
0x5745	          0x4889e5	                            mov rbp, rsp	      1829	state.c	FUNCTION_35
0x5748	        0x48897df8	                mov qword [rbp - 8], rdi	      1829	state.c	FUNCTION_35
0x574c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1830	state.c	FUNCTION_35
0x5750	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1830	state.c	FUNCTION_35
0x5754	              0x5d	                                 pop rbp	      1831	state.c	FUNCTION_35
0x5755	              0xc3	                                     ret	      1831	state.c	FUNCTION_35
vterm_state_focus_in	SWITCH,0:functions,0:ELSE,0:CALL,1:WHILE,0:DO,0:IF,1:FOR,0	19
0x5a09	              0x55	                                push rbp	      1903	state.c	FUNCTION_39
0x5a0a	          0x4889e5	                            mov rbp, rsp	      1903	state.c	FUNCTION_39
0x5a0d	        0x4883ec10	                           sub rsp, 0x10	      1903	state.c	FUNCTION_39
0x5a11	        0x48897df8	                mov qword [rbp - 8], rdi	      1903	state.c	FUNCTION_39
0x5a15	        0x488b45f8	                mov rax, qword [rbp - 8]	      1904	state.c	FUNCTION_39	IF_1
0x5a19	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	      1904	state.c	FUNCTION_39	IF_1
0x5a20	          0x83e040	                           and eax, 0x40	      1904	state.c	FUNCTION_39	IF_1
0x5a23	            0x84c0	                             test al, al	      1904	state.c	FUNCTION_39	IF_1
0x5a25	            0x741e	                            je 0x4005a85	      1904	state.c	FUNCTION_39	IF_1
0x5a27	        0x488b45f8	                mov rax, qword [rbp - 8]	      1905	state.c	FUNCTION_39	CALL_1
0x5a2b	          0x488b00	                    mov rax, qword [rax]	      1905	state.c	FUNCTION_39	CALL_1
0x5a2e	      0xba00000000	                              mov edx, 0	      1905	state.c	FUNCTION_39	CALL_1
0x5a33	      0xbe9b000000	                           mov esi, 0x9b	      1905	state.c	FUNCTION_39	CALL_1
0x5a38	          0x4889c7	                            mov rdi, rax	      1905	state.c	FUNCTION_39	CALL_1
0x5a3b	      0xb800000000	                              mov eax, 0	      1905	state.c	FUNCTION_39	CALL_1
0x5a40	      0xe800000000	                          call 0x4005a85	      1905	state.c	FUNCTION_39	CALL_1
0x5a45	              0x90	                                     nop	      1906	state.c	FUNCTION_39
0x5a46	              0xc9	                                   leave	      1906	state.c	FUNCTION_39
0x5a47	              0xc3	                                     ret	      1906	state.c	FUNCTION_39
vterm_obtain_state	SWITCH,0:functions,0:ELSE,0:CALL,6:WHILE,0:DO,0:IF,2:FOR,0	88
0x5177	              0x55	                                push rbp	      1697	state.c	FUNCTION_30
0x5178	          0x4889e5	                            mov rbp, rsp	      1697	state.c	FUNCTION_30
0x517b	        0x4883ec20	                           sub rsp, 0x20	      1697	state.c	FUNCTION_30
0x517f	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1697	state.c	FUNCTION_30
0x5183	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1699	state.c	FUNCTION_30	IF_1
0x5187	    0x488b80180100	           mov rax, qword [rax + 0x118] 	      1699	state.c	FUNCTION_30	IF_1
0x518e	          0x4885c0	                           test rax, rax	      1699	state.c	FUNCTION_30	IF_1
0x5191	            0x7410	                            je 0x40051e3	      1699	state.c	FUNCTION_30	IF_1
0x5193	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1700	state.c	FUNCTION_30	IF_1
0x5197	    0x488b80180100	           mov rax, qword [rax + 0x118] 	      1700	state.c	FUNCTION_30	IF_1
0x519e	      0xe936010000	                           jmp 0x4005319	      1700	state.c	FUNCTION_30	IF_1
0x51a3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1702	state.c	FUNCTION_30	CALL_1
0x51a7	          0x4889c7	                            mov rdi, rax	      1702	state.c	FUNCTION_30	CALL_1
0x51aa	      0xe865b0ffff	                call sym.vterm_state_new	      1702	state.c	FUNCTION_30	CALL_1
0x51af	        0x488945f8	                mov qword [rbp - 8], rax	      1702	state.c	FUNCTION_30	CALL_1
0x51b3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1703	state.c	FUNCTION_30
0x51b7	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1703	state.c	FUNCTION_30
0x51bb	    0x488990180100	            mov qword [rax + 0x118], rdx	      1703	state.c	FUNCTION_30
0x51c2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1705	state.c	FUNCTION_30
0x51c6	    0x48c780800000	           mov qword [rax + 0x80], 0x10 	      1705	state.c	FUNCTION_30
0x51d1	        0x488b45f8	                mov rax, qword [rbp - 8]	      1706	state.c	FUNCTION_30	CALL_2
0x51d5	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      1706	state.c	FUNCTION_30	CALL_2
0x51dc	    0x488d14850000	                        lea rdx, [rax*4]	      1706	state.c	FUNCTION_30	CALL_2
0x51e4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1706	state.c	FUNCTION_30	CALL_2
0x51e8	          0x488b00	                    mov rax, qword [rax]	      1706	state.c	FUNCTION_30	CALL_2
0x51eb	          0x4889d6	                            mov rsi, rdx	      1706	state.c	FUNCTION_30	CALL_2
0x51ee	          0x4889c7	                            mov rdi, rax	      1706	state.c	FUNCTION_30	CALL_2
0x51f1	      0xe800000000	                          call 0x4005236	      1706	state.c	FUNCTION_30	CALL_2
0x51f6	          0x4889c2	                            mov rdx, rax	      1706	state.c	FUNCTION_30	CALL_2
0x51f9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1706	state.c	FUNCTION_30	CALL_2
0x51fd	        0x48895078	             mov qword [rax + 0x78], rdx	      1706	state.c	FUNCTION_30	CALL_2
0x5201	        0x488b45f8	                mov rax, qword [rbp - 8]	      1708	state.c	FUNCTION_30	CALL_3
0x5205	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1708	state.c	FUNCTION_30	CALL_3
0x5208	          0x83c007	                              add eax, 7	      1708	state.c	FUNCTION_30	CALL_3
0x520b	          0x8d5007	                      lea edx, [rax + 7]	      1708	state.c	FUNCTION_30	CALL_3
0x520e	            0x85c0	                           test eax, eax	      1708	state.c	FUNCTION_30	CALL_3
0x5210	           0xf48c2	                          cmovs eax, edx	      1708	state.c	FUNCTION_30	CALL_3
0x5213	          0xc1f803	                              sar eax, 3	      1708	state.c	FUNCTION_30	CALL_3
0x5216	          0x4863d0	                         movsxd rdx, eax	      1708	state.c	FUNCTION_30	CALL_3
0x5219	        0x488b45f8	                mov rax, qword [rbp - 8]	      1708	state.c	FUNCTION_30	CALL_3
0x521d	          0x488b00	                    mov rax, qword [rax]	      1708	state.c	FUNCTION_30	CALL_3
0x5220	          0x4889d6	                            mov rsi, rdx	      1708	state.c	FUNCTION_30	CALL_3
0x5223	          0x4889c7	                            mov rdi, rax	      1708	state.c	FUNCTION_30	CALL_3
0x5226	      0xe800000000	                          call 0x400526b	      1708	state.c	FUNCTION_30	CALL_3
0x522b	          0x4889c2	                            mov rdx, rax	      1708	state.c	FUNCTION_30	CALL_3
0x522e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1708	state.c	FUNCTION_30	CALL_3
0x5232	        0x48895050	             mov qword [rax + 0x50], rdx	      1708	state.c	FUNCTION_30	CALL_3
0x5236	        0x488b45f8	                mov rax, qword [rbp - 8]	      1710	state.c	FUNCTION_30	CALL_4
0x523a	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1710	state.c	FUNCTION_30	CALL_4
0x523d	            0x4898	                                    cdqe	      1710	state.c	FUNCTION_30	CALL_4
0x523f	    0x488d14850000	                        lea rdx, [rax*4]	      1710	state.c	FUNCTION_30	CALL_4
0x5247	        0x488b45f8	                mov rax, qword [rbp - 8]	      1710	state.c	FUNCTION_30	CALL_4
0x524b	          0x488b00	                    mov rax, qword [rax]	      1710	state.c	FUNCTION_30	CALL_4
0x524e	          0x4889d6	                            mov rsi, rdx	      1710	state.c	FUNCTION_30	CALL_4
0x5251	          0x4889c7	                            mov rdi, rax	      1710	state.c	FUNCTION_30	CALL_4
0x5254	      0xe800000000	                          call 0x4005299	      1710	state.c	FUNCTION_30	CALL_4
0x5259	          0x4889c2	                            mov rdx, rax	      1710	state.c	FUNCTION_30	CALL_4
0x525c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1710	state.c	FUNCTION_30	CALL_4
0x5260	        0x48895058	             mov qword [rax + 0x58], rdx	      1710	state.c	FUNCTION_30	CALL_4
0x5264	      0xbe75000000	                           mov esi, 0x75	      1712	state.c	FUNCTION_30	CALL_5
0x5269	      0xbf00000000	                              mov edi, 0	      1712	state.c	FUNCTION_30	CALL_5
0x526e	      0xe800000000	                          call 0x40052b3	      1712	state.c	FUNCTION_30	CALL_5
0x5273	          0x4889c2	                            mov rdx, rax	      1712	state.c	FUNCTION_30	CALL_5
0x5276	        0x488b45f8	                mov rax, qword [rbp - 8]	      1712	state.c	FUNCTION_30	CALL_5
0x527a	    0x488990f80000	             mov qword [rax + 0xf8], rdx	      1712	state.c	FUNCTION_30	CALL_5
0x5281	        0x488b45f8	                mov rax, qword [rbp - 8]	      1713	state.c	FUNCTION_30	IF_2
0x5285	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1713	state.c	FUNCTION_30	IF_2
0x528c	          0x488b00	                    mov rax, qword [rax]	      1713	state.c	FUNCTION_30	IF_2
0x528f	          0x4885c0	                           test rax, rax	      1713	state.c	FUNCTION_30	IF_2
0x5292	            0x742c	                            je 0x4005300	      1713	state.c	FUNCTION_30	IF_2
0x5294	        0x488b45f8	                mov rax, qword [rbp - 8]	      1714	state.c	FUNCTION_30	IF_2
0x5298	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      1714	state.c	FUNCTION_30	IF_2
0x529f	          0x488b00	                    mov rax, qword [rax]	      1714	state.c	FUNCTION_30	IF_2
0x52a2	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1714	state.c	FUNCTION_30	IF_2
0x52a6	    0x488d8a000100	                  lea rcx, [rdx + 0x100]	      1714	state.c	FUNCTION_30	IF_2
0x52ad	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1714	state.c	FUNCTION_30	IF_2
0x52b1	    0x488b92f80000	            mov rdx, qword [rdx + 0xf8] 	      1714	state.c	FUNCTION_30	IF_2
0x52b8	          0x4889ce	                            mov rsi, rcx	      1714	state.c	FUNCTION_30	IF_2
0x52bb	          0x4889d7	                            mov rdi, rdx	      1714	state.c	FUNCTION_30	IF_2
0x52be	            0xffd0	                                call rax	      1714	state.c	FUNCTION_30	IF_2
0x52c0	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1716	state.c	FUNCTION_30	CALL_6
0x52c4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1716	state.c	FUNCTION_30	CALL_6
0x52c8	      0xbe00000000	                              mov esi, 0	      1716	state.c	FUNCTION_30	CALL_6
0x52cd	          0x4889c7	                            mov rdi, rax	      1716	state.c	FUNCTION_30	CALL_6
0x52d0	      0xe800000000	                          call 0x4005315	      1716	state.c	FUNCTION_30	CALL_6
0x52d5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1718	state.c	FUNCTION_30
0x52d9	              0xc9	                                   leave	      1719	state.c	FUNCTION_30
0x52da	              0xc3	                                     ret	      1719	state.c	FUNCTION_30
set_mode	SWITCH,1:functions,0:ELSE,0:CALL,1:WHILE,0:DO,0:IF,0:FOR,0	36
0x1c9d	              0x55	                                push rbp	       712	state.c	FUNCTION_22
0x1c9e	          0x4889e5	                            mov rbp, rsp	       712	state.c	FUNCTION_22
0x1ca1	        0x48897df8	                mov qword [rbp - 8], rdi	       712	state.c	FUNCTION_22
0x1ca5	          0x8975f4	              mov dword [rbp - 0xc], esi	       712	state.c	FUNCTION_22
0x1ca8	          0x8955f0	             mov dword [rbp - 0x10], edx	       712	state.c	FUNCTION_22
0x1cab	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       713	state.c	FUNCTION_22	SWITCH_1
0x1cae	          0x83f804	                              cmp eax, 4	       713	state.c	FUNCTION_22	SWITCH_1
0x1cb1	            0x7407	                            je 0x4001cfa	       713	state.c	FUNCTION_22	SWITCH_1
0x1cb3	          0x83f814	                           cmp eax, 0x14	       713	state.c	FUNCTION_22	SWITCH_1
0x1cb6	            0x742c	                            je 0x4001d24	       713	state.c	FUNCTION_22	SWITCH_1
0x1cb8	            0xeb51	                           jmp 0x4001d4b	       724	state.c	FUNCTION_22	SWITCH_1
0x1cba	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       715	state.c	FUNCTION_22	SWITCH_1
0x1cbd	          0x83e001	                              and eax, 1	       715	state.c	FUNCTION_22	SWITCH_1
0x1cc0	            0x89c2	                            mov edx, eax	       715	state.c	FUNCTION_22	SWITCH_1
0x1cc2	        0x488b45f8	                mov rax, qword [rbp - 8]	       715	state.c	FUNCTION_22	SWITCH_1
0x1cc6	          0x83e201	                              and edx, 1	       715	state.c	FUNCTION_22	SWITCH_1
0x1cc9	    0x8d0cd5000000	                        lea ecx, [rdx*8]	       715	state.c	FUNCTION_22	SWITCH_1
0x1cd0	     0xfb690940000	           movzx edx, byte [rax + 0x94] 	       715	state.c	FUNCTION_22	SWITCH_1
0x1cd7	          0x83e2f7	                     and edx, 0xfffffff7	       715	state.c	FUNCTION_22	SWITCH_1
0x1cda	             0x9ca	                             or edx, ecx	       715	state.c	FUNCTION_22	SWITCH_1
0x1cdc	    0x889094000000	               mov byte [rax + 0x94], dl	       715	state.c	FUNCTION_22	SWITCH_1
0x1ce2	            0xeb27	                           jmp 0x4001d4b	       716	state.c	FUNCTION_22	SWITCH_1
0x1ce4	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       719	state.c	FUNCTION_22	SWITCH_1
0x1ce7	          0x83e001	                              and eax, 1	       719	state.c	FUNCTION_22	SWITCH_1
0x1cea	            0x89c2	                            mov edx, eax	       719	state.c	FUNCTION_22	SWITCH_1
0x1cec	        0x488b45f8	                mov rax, qword [rbp - 8]	       719	state.c	FUNCTION_22	SWITCH_1
0x1cf0	          0x83e201	                              and edx, 1	       719	state.c	FUNCTION_22	SWITCH_1
0x1cf3	            0x89d1	                            mov ecx, edx	       719	state.c	FUNCTION_22	SWITCH_1
0x1cf5	          0xc1e104	                              shl ecx, 4	       719	state.c	FUNCTION_22	SWITCH_1
0x1cf8	     0xfb690940000	           movzx edx, byte [rax + 0x94] 	       719	state.c	FUNCTION_22	SWITCH_1
0x1cff	          0x83e2ef	                     and edx, 0xffffffef	       719	state.c	FUNCTION_22	SWITCH_1
0x1d02	             0x9ca	                             or edx, ecx	       719	state.c	FUNCTION_22	SWITCH_1
0x1d04	    0x889094000000	               mov byte [rax + 0x94], dl	       719	state.c	FUNCTION_22	SWITCH_1
0x1d0a	              0x90	                                     nop	       720	state.c	FUNCTION_22	SWITCH_1
0x1d0b	              0x5d	                                 pop rbp	       726	state.c	FUNCTION_22
0x1d0c	              0xc3	                                     ret	       726	state.c	FUNCTION_22
is_cursor_in_scrollregion	SWITCH,0:functions,0:ELSE,0:CALL,3:WHILE,0:DO,0:IF,2:FOR,0	60
0x7cd	              0x55	                                push rbp	       174	state.c	FUNCTION_12
0x7ce	          0x4889e5	                            mov rbp, rsp	       174	state.c	FUNCTION_12
0x7d1	        0x48897df8	                mov qword [rbp - 8], rdi	       174	state.c	FUNCTION_12
0x7d5	        0x488b45f8	                mov rax, qword [rbp - 8]	       175	state.c	FUNCTION_12	IF_1
0x7d9	          0x8b5030	            mov edx, dword [rax + 0x30] 	       175	state.c	FUNCTION_12	IF_1
0x7dc	        0x488b45f8	                mov rax, qword [rbp - 8]	       175	state.c	FUNCTION_12	IF_1
0x7e0	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       175	state.c	FUNCTION_12	IF_1
0x7e3	            0x39c2	                            cmp edx, eax	       175	state.c	FUNCTION_12	IF_1
0x7e5	            0x7c26	                            jl 0x400084d	       175	state.c	FUNCTION_12	IF_1
0x7e7	        0x488b45f8	                mov rax, qword [rbp - 8]	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x7eb	          0x8b5030	            mov edx, dword [rax + 0x30] 	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x7ee	        0x488b45f8	                mov rax, qword [rbp - 8]	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x7f2	          0x8b4040	            mov eax, dword [rax + 0x40] 	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x7f5	            0x85c0	                           test eax, eax	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x7f7	            0x7809	                            js 0x4000842	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x7f9	        0x488b45f8	                mov rax, qword [rbp - 8]	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x7fd	          0x8b4040	            mov eax, dword [rax + 0x40] 	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x800	            0xeb07	                           jmp 0x4000849	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x802	        0x488b45f8	                mov rax, qword [rbp - 8]	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x806	          0x8b4028	            mov eax, dword [rax + 0x28] 	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x809	            0x39c2	                            cmp edx, eax	       175	state.c	FUNCTION_12	IF_1
0x80b	            0x7c07	                            jl 0x4000854	       175	state.c	FUNCTION_12	IF_1
0x80d	      0xb800000000	                              mov eax, 0	       177	state.c	FUNCTION_12	IF_1
0x812	            0xeb6f	                           jmp 0x40008c3	       177	state.c	FUNCTION_12	IF_1
0x814	        0x488b45f8	                mov rax, qword [rbp - 8]	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x818	          0x8b5034	            mov edx, dword [rax + 0x34] 	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x81b	        0x488b45f8	                mov rax, qword [rbp - 8]	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x81f	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x826	          0x83e010	                           and eax, 0x10	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x829	            0x84c0	                             test al, al	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x82b	            0x7409	                            je 0x4000876	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x82d	        0x488b45f8	                mov rax, qword [rbp - 8]	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x831	          0x8b4044	            mov eax, dword [rax + 0x44] 	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x834	            0xeb05	                           jmp 0x400087b	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x836	      0xb800000000	                              mov eax, 0	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x83b	            0x39c2	                            cmp edx, eax	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x83d	            0x7c38	                            jl 0x40008b7	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x83f	        0x488b45f8	                mov rax, qword [rbp - 8]	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x843	          0x8b5034	            mov edx, dword [rax + 0x34] 	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x846	        0x488b45f8	                mov rax, qword [rbp - 8]	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x84a	     0xfb680950000	           movzx eax, byte [rax + 0x95] 	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x851	          0x83e010	                           and eax, 0x10	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x854	            0x84c0	                             test al, al	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x856	            0x7414	                            je 0x40008ac	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x858	        0x488b45f8	                mov rax, qword [rbp - 8]	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x85c	          0x8b4048	            mov eax, dword [rax + 0x48] 	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x85f	            0x85c0	                           test eax, eax	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x861	            0x7809	                            js 0x40008ac	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x863	        0x488b45f8	                mov rax, qword [rbp - 8]	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x867	          0x8b4048	            mov eax, dword [rax + 0x48] 	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x86a	            0xeb07	                           jmp 0x40008b3	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x86c	        0x488b45f8	                mov rax, qword [rbp - 8]	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x870	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x873	            0x39c2	                            cmp edx, eax	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x875	            0x7c07	                            jl 0x40008be	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x877	      0xb800000000	                              mov eax, 0	       180	state.c	FUNCTION_12	IF_2
0x87c	            0xeb05	                           jmp 0x40008c3	       180	state.c	FUNCTION_12	IF_2
0x87e	      0xb801000000	                              mov eax, 1	       182	state.c	FUNCTION_12
0x883	              0x5d	                                 pop rbp	       183	state.c	FUNCTION_12
0x884	              0xc3	                                     ret	       183	state.c	FUNCTION_12
