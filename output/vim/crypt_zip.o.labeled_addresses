crypt_zip_encode	CALL,2:SWITCH,0:DO,0:IF,0:WHILE,0:ELSE,0:functions,0:FOR,1	86
0x188	              0x55	                                push rbp	       122	crypt_zip.c	FUNCTION_3
0x189	          0x4889e5	                            mov rbp, rsp	       122	crypt_zip.c	FUNCTION_3
0x18c	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       122	crypt_zip.c	FUNCTION_3
0x190	        0x488975d0	             mov qword [rbp - 0x30], rsi	       122	crypt_zip.c	FUNCTION_3
0x194	        0x488955c8	             mov qword [rbp - 0x38], rdx	       122	crypt_zip.c	FUNCTION_3
0x198	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       122	crypt_zip.c	FUNCTION_3
0x19c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       123	crypt_zip.c	FUNCTION_3
0x1a0	        0x488b4008	                mov rax, qword [rax + 8]	       123	crypt_zip.c	FUNCTION_3
0x1a4	        0x488945f8	                mov qword [rbp - 8], rax	       123	crypt_zip.c	FUNCTION_3
0x1a8	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       127	crypt_zip.c	FUNCTION_3	FOR_1
0x1b0	      0xe9e4000000	                           jmp 0x40002d9	       127	crypt_zip.c	FUNCTION_3	FOR_1
0x1b5	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       129	crypt_zip.c	FUNCTION_3	FOR_1
0x1b9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       129	crypt_zip.c	FUNCTION_3	FOR_1
0x1bd	          0x4801d0	                            add rax, rdx	       129	crypt_zip.c	FUNCTION_3	FOR_1
0x1c0	           0xfb600	                   movzx eax, byte [rax]	       129	crypt_zip.c	FUNCTION_3	FOR_1
0x1c3	           0xfb6c0	                           movzx eax, al	       129	crypt_zip.c	FUNCTION_3	FOR_1
0x1c6	          0x8945e8	             mov dword [rbp - 0x18], eax	       129	crypt_zip.c	FUNCTION_3	FOR_1
0x1c9	        0x488b45f8	                mov rax, qword [rbp - 8]	       130	crypt_zip.c	FUNCTION_3	FOR_1	CALL_1
0x1cd	          0x8b4008	                mov eax, dword [rax + 8]	       130	crypt_zip.c	FUNCTION_3	FOR_1	CALL_1
0x1d0	          0x83c802	                               or eax, 2	       130	crypt_zip.c	FUNCTION_3	FOR_1	CALL_1
0x1d3	        0x668945e6	               mov word [rbp - 0x1a], ax	       130	crypt_zip.c	FUNCTION_3	FOR_1	CALL_1
0x1d7	         0xfb755e6	            movzx edx, word [rbp - 0x1a]	       130	crypt_zip.c	FUNCTION_3	FOR_1	CALL_1
0x1db	         0xfb745e6	            movzx eax, word [rbp - 0x1a]	       130	crypt_zip.c	FUNCTION_3	FOR_1	CALL_1
0x1df	          0x83f001	                              xor eax, 1	       130	crypt_zip.c	FUNCTION_3	FOR_1	CALL_1
0x1e2	           0xfb7c0	                           movzx eax, ax	       130	crypt_zip.c	FUNCTION_3	FOR_1	CALL_1
0x1e5	           0xfafc2	                           imul eax, edx	       130	crypt_zip.c	FUNCTION_3	FOR_1	CALL_1
0x1e8	          0xc1e808	                              shr eax, 8	       130	crypt_zip.c	FUNCTION_3	FOR_1	CALL_1
0x1eb	      0x25ff000000	                           and eax, 0xff	       130	crypt_zip.c	FUNCTION_3	FOR_1	CALL_1
0x1f0	          0x8945ec	             mov dword [rbp - 0x14], eax	       130	crypt_zip.c	FUNCTION_3	FOR_1	CALL_1
0x1f3	        0x488b45f8	                mov rax, qword [rbp - 8]	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x1f7	            0x8b00	                    mov eax, dword [rax]	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x1f9	          0x3345e8	             xor eax, dword [rbp - 0x18]	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x1fc	           0xfb6c0	                           movzx eax, al	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x1ff	            0x4898	                                    cdqe	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x201	    0x8b1485000000	                  mov edx, dword [rax*4]	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x208	        0x488b45f8	                mov rax, qword [rbp - 8]	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x20c	            0x8b00	                    mov eax, dword [rax]	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x20e	          0xc1e808	                              shr eax, 8	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x211	            0x31c2	                            xor edx, eax	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x213	        0x488b45f8	                mov rax, qword [rbp - 8]	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x217	            0x8910	                    mov dword [rax], edx	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x219	        0x488b45f8	                mov rax, qword [rbp - 8]	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x21d	          0x8b5004	                mov edx, dword [rax + 4]	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x220	        0x488b45f8	                mov rax, qword [rbp - 8]	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x224	            0x8b00	                    mov eax, dword [rax]	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x226	           0xfb6c0	                           movzx eax, al	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x229	             0x1c2	                            add edx, eax	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x22b	        0x488b45f8	                mov rax, qword [rbp - 8]	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x22f	          0x895004	                mov dword [rax + 4], edx	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x232	        0x488b45f8	                mov rax, qword [rbp - 8]	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x236	          0x8b4004	                mov eax, dword [rax + 4]	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x239	    0x69c005840808	                imul eax, eax, 0x8088405	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x23f	          0x8d5001	                      lea edx, [rax + 1]	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x242	        0x488b45f8	                mov rax, qword [rbp - 8]	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x246	          0x895004	                mov dword [rax + 4], edx	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x249	        0x488b45f8	                mov rax, qword [rbp - 8]	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x24d	          0x8b4008	                mov eax, dword [rax + 8]	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x250	            0x89c2	                            mov edx, eax	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x252	        0x488b45f8	                mov rax, qword [rbp - 8]	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x256	          0x8b4004	                mov eax, dword [rax + 4]	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x259	          0xc1e818	                           shr eax, 0x18	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x25c	            0x31d0	                            xor eax, edx	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x25e	           0xfb6c0	                           movzx eax, al	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x261	            0x4898	                                    cdqe	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x263	    0x8b1485000000	                  mov edx, dword [rax*4]	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x26a	        0x488b45f8	                mov rax, qword [rbp - 8]	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x26e	          0x8b4008	                mov eax, dword [rax + 8]	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x271	          0xc1e808	                              shr eax, 8	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x274	            0x31c2	                            xor edx, eax	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x276	        0x488b45f8	                mov rax, qword [rbp - 8]	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x27a	          0x895008	                mov dword [rax + 8], edx	       131	crypt_zip.c	FUNCTION_3	FOR_1	CALL_2
0x27d	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       132	crypt_zip.c	FUNCTION_3	FOR_1
0x281	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       132	crypt_zip.c	FUNCTION_3	FOR_1
0x285	          0x4801d0	                            add rax, rdx	       132	crypt_zip.c	FUNCTION_3	FOR_1
0x288	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       132	crypt_zip.c	FUNCTION_3	FOR_1
0x28b	            0x89d1	                            mov ecx, edx	       132	crypt_zip.c	FUNCTION_3	FOR_1
0x28d	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       132	crypt_zip.c	FUNCTION_3	FOR_1
0x290	            0x31ca	                            xor edx, ecx	       132	crypt_zip.c	FUNCTION_3	FOR_1
0x292	            0x8810	                      mov byte [rax], dl	       132	crypt_zip.c	FUNCTION_3	FOR_1
0x294	      0x488345f001	               add qword [rbp - 0x10], 1	       127	crypt_zip.c	FUNCTION_3	FOR_1
0x299	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       127	crypt_zip.c	FUNCTION_3	FOR_1
0x29d	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	       127	crypt_zip.c	FUNCTION_3	FOR_1
0x2a1	     0xf820effffff	                            jb 0x40001f5	       127	crypt_zip.c	FUNCTION_3	FOR_1
0x2a7	              0x90	                                     nop	       134	crypt_zip.c	FUNCTION_3
0x2a8	              0x5d	                                 pop rbp	       134	crypt_zip.c	FUNCTION_3
0x2a9	              0xc3	                                     ret	       134	crypt_zip.c	FUNCTION_3
crypt_zip_decode	CALL,1:SWITCH,0:DO,0:IF,0:WHILE,0:ELSE,0:functions,0:FOR,1	85
0x2aa	              0x55	                                push rbp	       145	crypt_zip.c	FUNCTION_4
0x2ab	          0x4889e5	                            mov rbp, rsp	       145	crypt_zip.c	FUNCTION_4
0x2ae	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       145	crypt_zip.c	FUNCTION_4
0x2b2	        0x488975d0	             mov qword [rbp - 0x30], rsi	       145	crypt_zip.c	FUNCTION_4
0x2b6	        0x488955c8	             mov qword [rbp - 0x38], rdx	       145	crypt_zip.c	FUNCTION_4
0x2ba	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       145	crypt_zip.c	FUNCTION_4
0x2be	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       146	crypt_zip.c	FUNCTION_4
0x2c2	        0x488b4008	                mov rax, qword [rax + 8]	       146	crypt_zip.c	FUNCTION_4
0x2c6	        0x488945f8	                mov qword [rbp - 8], rax	       146	crypt_zip.c	FUNCTION_4
0x2ca	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       150	crypt_zip.c	FUNCTION_4	FOR_1
0x2d2	      0xe9e1000000	                           jmp 0x40003f8	       150	crypt_zip.c	FUNCTION_4	FOR_1
0x2d7	        0x488b45f8	                mov rax, qword [rbp - 8]	       152	crypt_zip.c	FUNCTION_4	FOR_1
0x2db	          0x8b4008	                mov eax, dword [rax + 8]	       152	crypt_zip.c	FUNCTION_4	FOR_1
0x2de	          0x83c802	                               or eax, 2	       152	crypt_zip.c	FUNCTION_4	FOR_1
0x2e1	        0x668945ee	               mov word [rbp - 0x12], ax	       152	crypt_zip.c	FUNCTION_4	FOR_1
0x2e5	         0xfb755ee	            movzx edx, word [rbp - 0x12]	       153	crypt_zip.c	FUNCTION_4	FOR_1
0x2e9	         0xfb745ee	            movzx eax, word [rbp - 0x12]	       153	crypt_zip.c	FUNCTION_4	FOR_1
0x2ed	          0x83f001	                              xor eax, 1	       153	crypt_zip.c	FUNCTION_4	FOR_1
0x2f0	           0xfb7c0	                           movzx eax, ax	       153	crypt_zip.c	FUNCTION_4	FOR_1
0x2f3	           0xfafc2	                           imul eax, edx	       153	crypt_zip.c	FUNCTION_4	FOR_1
0x2f6	          0xc1e808	                              shr eax, 8	       153	crypt_zip.c	FUNCTION_4	FOR_1
0x2f9	        0x6625ff00	                            and ax, 0xff	       153	crypt_zip.c	FUNCTION_4	FOR_1
0x2fd	        0x668945ee	               mov word [rbp - 0x12], ax	       153	crypt_zip.c	FUNCTION_4	FOR_1
0x301	        0x488b45f8	                mov rax, qword [rbp - 8]	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x305	            0x8b00	                    mov eax, dword [rax]	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x307	            0x89c6	                            mov esi, eax	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x309	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x30d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x311	          0x4801d0	                            add rax, rdx	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x314	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x318	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x31c	          0x4801ca	                            add rdx, rcx	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x31f	           0xfb60a	                   movzx ecx, byte [rdx]	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x322	         0xfb755ee	            movzx edx, word [rbp - 0x12]	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x326	            0x31ca	                            xor edx, ecx	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x328	            0x8810	                      mov byte [rax], dl	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x32a	           0xfb600	                   movzx eax, byte [rax]	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x32d	           0xfb6c0	                           movzx eax, al	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x330	            0x31f0	                            xor eax, esi	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x332	           0xfb6c0	                           movzx eax, al	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x335	            0x4898	                                    cdqe	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x337	    0x8b1485000000	                  mov edx, dword [rax*4]	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x33e	        0x488b45f8	                mov rax, qword [rbp - 8]	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x342	            0x8b00	                    mov eax, dword [rax]	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x344	          0xc1e808	                              shr eax, 8	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x347	            0x31c2	                            xor edx, eax	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x349	        0x488b45f8	                mov rax, qword [rbp - 8]	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x34d	            0x8910	                    mov dword [rax], edx	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x34f	        0x488b45f8	                mov rax, qword [rbp - 8]	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x353	          0x8b5004	                mov edx, dword [rax + 4]	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x356	        0x488b45f8	                mov rax, qword [rbp - 8]	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x35a	            0x8b00	                    mov eax, dword [rax]	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x35c	           0xfb6c0	                           movzx eax, al	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x35f	             0x1c2	                            add edx, eax	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x361	        0x488b45f8	                mov rax, qword [rbp - 8]	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x365	          0x895004	                mov dword [rax + 4], edx	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x368	        0x488b45f8	                mov rax, qword [rbp - 8]	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x36c	          0x8b4004	                mov eax, dword [rax + 4]	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x36f	    0x69c005840808	                imul eax, eax, 0x8088405	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x375	          0x8d5001	                      lea edx, [rax + 1]	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x378	        0x488b45f8	                mov rax, qword [rbp - 8]	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x37c	          0x895004	                mov dword [rax + 4], edx	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x37f	        0x488b45f8	                mov rax, qword [rbp - 8]	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x383	          0x8b4008	                mov eax, dword [rax + 8]	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x386	            0x89c2	                            mov edx, eax	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x388	        0x488b45f8	                mov rax, qword [rbp - 8]	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x38c	          0x8b4004	                mov eax, dword [rax + 4]	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x38f	          0xc1e818	                           shr eax, 0x18	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x392	            0x31d0	                            xor eax, edx	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x394	           0xfb6c0	                           movzx eax, al	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x397	            0x4898	                                    cdqe	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x399	    0x8b1485000000	                  mov edx, dword [rax*4]	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x3a0	        0x488b45f8	                mov rax, qword [rbp - 8]	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x3a4	          0x8b4008	                mov eax, dword [rax + 8]	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x3a7	          0xc1e808	                              shr eax, 8	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x3aa	            0x31c2	                            xor edx, eax	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x3ac	        0x488b45f8	                mov rax, qword [rbp - 8]	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x3b0	          0x895008	                mov dword [rax + 8], edx	       154	crypt_zip.c	FUNCTION_4	FOR_1	CALL_1
0x3b3	      0x488345f001	               add qword [rbp - 0x10], 1	       150	crypt_zip.c	FUNCTION_4	FOR_1
0x3b8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       150	crypt_zip.c	FUNCTION_4	FOR_1
0x3bc	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	       150	crypt_zip.c	FUNCTION_4	FOR_1
0x3c0	     0xf8211ffffff	                            jb 0x4000317	       150	crypt_zip.c	FUNCTION_4	FOR_1
0x3c6	              0x90	                                     nop	       156	crypt_zip.c	FUNCTION_4
0x3c7	              0x5d	                                 pop rbp	       156	crypt_zip.c	FUNCTION_4
0x3c8	              0xc3	                                     ret	       156	crypt_zip.c	FUNCTION_4
make_crc_tab	CALL,0:SWITCH,0:DO,0:IF,1:WHILE,0:ELSE,0:functions,0:FOR,2	33
0x0	              0x55	                                push rbp	        48	crypt_zip.c	FUNCTION_1
0x1	          0x4889e5	                            mov rbp, rsp	        48	crypt_zip.c	FUNCTION_1
0x4	    0x8b0500000000	            mov eax, dword [0x0400004a] 	        52	crypt_zip.c	FUNCTION_1	IF_1
0xa	            0x85c0	                           test eax, eax	        52	crypt_zip.c	FUNCTION_1	IF_1
0xc	            0x7560	                           jne 0x40000ae	        52	crypt_zip.c	FUNCTION_1	IF_1
0xe	    0xc745f8000000	                  mov dword [rbp - 8], 0	        54	crypt_zip.c	FUNCTION_1	FOR_1
0x15	            0xeb42	                           jmp 0x4000099	        54	crypt_zip.c	FUNCTION_1	FOR_1
0x17	          0x8b45f8	                mov eax, dword [rbp - 8]	        56	crypt_zip.c	FUNCTION_1	FOR_1
0x1a	          0x8945fc	                mov dword [rbp - 4], eax	        56	crypt_zip.c	FUNCTION_1	FOR_1
0x1d	    0xc745f4000000	                mov dword [rbp - 0xc], 0	        57	crypt_zip.c	FUNCTION_1	FOR_1	FOR_2
0x24	            0xeb1c	                           jmp 0x4000082	        57	crypt_zip.c	FUNCTION_1	FOR_1	FOR_2
0x26	          0x8b45fc	                mov eax, dword [rbp - 4]	        58	crypt_zip.c	FUNCTION_1	FOR_1	FOR_2
0x29	            0xd1e8	                              shr eax, 1	        58	crypt_zip.c	FUNCTION_1	FOR_1	FOR_2
0x2b	            0x89c2	                            mov edx, eax	        58	crypt_zip.c	FUNCTION_1	FOR_1	FOR_2
0x2d	          0x8b45fc	                mov eax, dword [rbp - 4]	        58	crypt_zip.c	FUNCTION_1	FOR_1	FOR_2
0x30	          0x83e001	                              and eax, 1	        58	crypt_zip.c	FUNCTION_1	FOR_1	FOR_2
0x33	    0x69c02083b8ed	               imul eax, eax, 0xedb88320	        58	crypt_zip.c	FUNCTION_1	FOR_1	FOR_2
0x39	            0x31d0	                            xor eax, edx	        58	crypt_zip.c	FUNCTION_1	FOR_1	FOR_2
0x3b	          0x8945fc	                mov dword [rbp - 4], eax	        58	crypt_zip.c	FUNCTION_1	FOR_1	FOR_2
0x3e	        0x8345f401	                add dword [rbp - 0xc], 1	        57	crypt_zip.c	FUNCTION_1	FOR_1	FOR_2
0x42	        0x837df407	                cmp dword [rbp - 0xc], 7	        57	crypt_zip.c	FUNCTION_1	FOR_1	FOR_2
0x46	            0x76de	                           jbe 0x4000066	        57	crypt_zip.c	FUNCTION_1	FOR_1	FOR_2
0x48	          0x8b45f8	                mov eax, dword [rbp - 8]	        59	crypt_zip.c	FUNCTION_1	FOR_1
0x4b	          0x8b55fc	                mov edx, dword [rbp - 4]	        59	crypt_zip.c	FUNCTION_1	FOR_1
0x4e	    0x891485000000	                  mov dword [rax*4], edx	        59	crypt_zip.c	FUNCTION_1	FOR_1
0x55	        0x8345f801	                  add dword [rbp - 8], 1	        54	crypt_zip.c	FUNCTION_1	FOR_1
0x59	    0x817df8ff0000	               cmp dword [rbp - 8], 0xff	        54	crypt_zip.c	FUNCTION_1	FOR_1
0x60	            0x76b5	                           jbe 0x4000057	        54	crypt_zip.c	FUNCTION_1	FOR_1
0x62	    0xc70500000000	               mov dword [0x040000ac], 1	        61	crypt_zip.c	FUNCTION_1
0x6c	            0xeb01	                           jmp 0x40000af	        61	crypt_zip.c	FUNCTION_1
0x6e	              0x90	                                     nop	        53	crypt_zip.c	FUNCTION_1	IF_1
0x6f	              0x5d	                                 pop rbp	        62	crypt_zip.c	FUNCTION_1
0x70	              0xc3	                                     ret	        62	crypt_zip.c	FUNCTION_1
crypt_zip_init	CALL,3:SWITCH,0:DO,0:IF,0:WHILE,0:ELSE,0:functions,0:FOR,1	79
0x71	              0x55	                                push rbp	        95	crypt_zip.c	FUNCTION_2
0x72	          0x4889e5	                            mov rbp, rsp	        95	crypt_zip.c	FUNCTION_2
0x75	        0x4883ec40	                           sub rsp, 0x40	        95	crypt_zip.c	FUNCTION_2
0x79	        0x48897de8	             mov qword [rbp - 0x18], rdi	        95	crypt_zip.c	FUNCTION_2
0x7d	        0x488975e0	             mov qword [rbp - 0x20], rsi	        95	crypt_zip.c	FUNCTION_2
0x81	        0x488955d8	             mov qword [rbp - 0x28], rdx	        95	crypt_zip.c	FUNCTION_2
0x85	          0x894dd4	             mov dword [rbp - 0x2c], ecx	        95	crypt_zip.c	FUNCTION_2
0x88	        0x4c8945c8	              mov qword [rbp - 0x38], r8	        95	crypt_zip.c	FUNCTION_2
0x8c	        0x44894dd0	             mov dword [rbp - 0x30], r9d	        95	crypt_zip.c	FUNCTION_2
0x90	      0xbf0c000000	                            mov edi, 0xc	        99	crypt_zip.c	FUNCTION_2	CALL_1
0x95	      0xe800000000	                          call 0x40000da	        99	crypt_zip.c	FUNCTION_2	CALL_1
0x9a	        0x488945f8	                mov qword [rbp - 8], rax	        99	crypt_zip.c	FUNCTION_2	CALL_1
0x9e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       100	crypt_zip.c	FUNCTION_2
0xa2	        0x488b55f8	                mov rdx, qword [rbp - 8]	       100	crypt_zip.c	FUNCTION_2
0xa6	        0x48895008	                mov qword [rax + 8], rdx	       100	crypt_zip.c	FUNCTION_2
0xaa	      0xe851ffffff	                   call sym.make_crc_tab	       102	crypt_zip.c	FUNCTION_2	CALL_2
0xaf	        0x488b45f8	                mov rax, qword [rbp - 8]	       103	crypt_zip.c	FUNCTION_2
0xb3	    0xc70078563412	            mov dword [rax], 0x12345678 	       103	crypt_zip.c	FUNCTION_2
0xb9	        0x488b45f8	                mov rax, qword [rbp - 8]	       104	crypt_zip.c	FUNCTION_2
0xbd	    0xc74004896745	        mov dword [rax + 4], 0x23456789 	       104	crypt_zip.c	FUNCTION_2
0xc4	        0x488b45f8	                mov rax, qword [rbp - 8]	       105	crypt_zip.c	FUNCTION_2
0xc8	    0xc74008907856	        mov dword [rax + 8], 0x34567890 	       105	crypt_zip.c	FUNCTION_2
0xcf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       106	crypt_zip.c	FUNCTION_2	FOR_1
0xd3	        0x488945f0	             mov qword [rbp - 0x10], rax	       106	crypt_zip.c	FUNCTION_2	FOR_1
0xd7	      0xe99a000000	                           jmp 0x40001b6	       106	crypt_zip.c	FUNCTION_2	FOR_1
0xdc	        0x488b45f8	                mov rax, qword [rbp - 8]	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0xe0	            0x8b00	                    mov eax, dword [rax]	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0xe2	            0x89c2	                            mov edx, eax	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0xe4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0xe8	           0xfb600	                   movzx eax, byte [rax]	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0xeb	           0xfb6c0	                           movzx eax, al	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0xee	            0x31d0	                            xor eax, edx	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0xf0	           0xfb6c0	                           movzx eax, al	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0xf3	            0x4898	                                    cdqe	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0xf5	    0x8b1485000000	                  mov edx, dword [rax*4]	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0xfc	        0x488b45f8	                mov rax, qword [rbp - 8]	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x100	            0x8b00	                    mov eax, dword [rax]	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x102	          0xc1e808	                              shr eax, 8	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x105	            0x31c2	                            xor edx, eax	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x107	        0x488b45f8	                mov rax, qword [rbp - 8]	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x10b	            0x8910	                    mov dword [rax], edx	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x10d	        0x488b45f8	                mov rax, qword [rbp - 8]	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x111	          0x8b5004	                mov edx, dword [rax + 4]	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x114	        0x488b45f8	                mov rax, qword [rbp - 8]	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x118	            0x8b00	                    mov eax, dword [rax]	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x11a	           0xfb6c0	                           movzx eax, al	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x11d	             0x1c2	                            add edx, eax	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x11f	        0x488b45f8	                mov rax, qword [rbp - 8]	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x123	          0x895004	                mov dword [rax + 4], edx	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x126	        0x488b45f8	                mov rax, qword [rbp - 8]	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x12a	          0x8b4004	                mov eax, dword [rax + 4]	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x12d	    0x69c005840808	                imul eax, eax, 0x8088405	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x133	          0x8d5001	                      lea edx, [rax + 1]	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x136	        0x488b45f8	                mov rax, qword [rbp - 8]	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x13a	          0x895004	                mov dword [rax + 4], edx	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x13d	        0x488b45f8	                mov rax, qword [rbp - 8]	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x141	          0x8b4008	                mov eax, dword [rax + 8]	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x144	            0x89c2	                            mov edx, eax	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x146	        0x488b45f8	                mov rax, qword [rbp - 8]	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x14a	          0x8b4004	                mov eax, dword [rax + 4]	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x14d	          0xc1e818	                           shr eax, 0x18	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x150	            0x31d0	                            xor eax, edx	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x152	           0xfb6c0	                           movzx eax, al	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x155	            0x4898	                                    cdqe	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x157	    0x8b1485000000	                  mov edx, dword [rax*4]	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x15e	        0x488b45f8	                mov rax, qword [rbp - 8]	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x162	          0x8b4008	                mov eax, dword [rax + 8]	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x165	          0xc1e808	                              shr eax, 8	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x168	            0x31c2	                            xor edx, eax	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x16a	        0x488b45f8	                mov rax, qword [rbp - 8]	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x16e	          0x895008	                mov dword [rax + 8], edx	       108	crypt_zip.c	FUNCTION_2	FOR_1	CALL_3
0x171	      0x488345f001	               add qword [rbp - 0x10], 1	       106	crypt_zip.c	FUNCTION_2	FOR_1
0x176	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       106	crypt_zip.c	FUNCTION_2	FOR_1
0x17a	           0xfb600	                   movzx eax, byte [rax]	       106	crypt_zip.c	FUNCTION_2	FOR_1
0x17d	            0x84c0	                             test al, al	       106	crypt_zip.c	FUNCTION_2	FOR_1
0x17f	     0xf8557ffffff	                           jne 0x400011c	       106	crypt_zip.c	FUNCTION_2	FOR_1
0x185	              0x90	                                     nop	       110	crypt_zip.c	FUNCTION_2
0x186	              0xc9	                                   leave	       110	crypt_zip.c	FUNCTION_2
0x187	              0xc3	                                     ret	       110	crypt_zip.c	FUNCTION_2
