put_setnum	WHILE,0:SWITCH,0:CALL,6:FOR,0:ELSE,1:DO,0:IF,5:functions,0	66
0xc18c	              0x55	                                push rbp	     10193	option.c	FUNCTION_68
0xc18d	          0x4889e5	                            mov rbp, rsp	     10193	option.c	FUNCTION_68
0xc190	        0x4883ec30	                           sub rsp, 0x30	     10193	option.c	FUNCTION_68
0xc194	        0x48897de8	             mov qword [rbp - 0x18], rdi	     10193	option.c	FUNCTION_68
0xc198	        0x488975e0	             mov qword [rbp - 0x20], rsi	     10193	option.c	FUNCTION_68
0xc19c	        0x488955d8	             mov qword [rbp - 0x28], rdx	     10193	option.c	FUNCTION_68
0xc1a0	        0x48894dd0	             mov qword [rbp - 0x30], rcx	     10193	option.c	FUNCTION_68
0xc1a4	    0x64488b042528	                mov rax, qword fs:[0x28]	     10193	option.c	FUNCTION_68
0xc1ad	        0x488945f8	                mov qword [rbp - 8], rax	     10193	option.c	FUNCTION_68
0xc1b1	            0x31c0	                            xor eax, eax	     10193	option.c	FUNCTION_68
0xc1b3	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	     10196	option.c	FUNCTION_68	IF_1	CALL_1
0xc1b7	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     10196	option.c	FUNCTION_68	IF_1	CALL_1
0xc1bb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10196	option.c	FUNCTION_68	IF_1	CALL_1
0xc1bf	      0xbe00000000	                              mov esi, 0	     10196	option.c	FUNCTION_68	IF_1	CALL_1
0xc1c4	          0x4889c7	                            mov rdi, rax	     10196	option.c	FUNCTION_68	IF_1	CALL_1
0xc1c7	      0xb800000000	                              mov eax, 0	     10196	option.c	FUNCTION_68	IF_1	CALL_1
0xc1cc	      0xe800000000	                          call 0x400c211	     10196	option.c	FUNCTION_68	IF_1	CALL_1
0xc1d1	            0x85c0	                           test eax, eax	     10196	option.c	FUNCTION_68	IF_1	CALL_1
0xc1d3	            0x790a	                           jns 0x400c21f	     10196	option.c	FUNCTION_68	IF_1	CALL_1
0xc1d5	      0xb800000000	                              mov eax, 0	     10197	option.c	FUNCTION_68	IF_1
0xc1da	      0xe988000000	                           jmp 0x400c2a7	     10197	option.c	FUNCTION_68	IF_1
0xc1df	        0x488d55f0	                   lea rdx, [rbp - 0x10]	     10198	option.c	FUNCTION_68	IF_2	CALL_2
0xc1e3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10198	option.c	FUNCTION_68	IF_2	CALL_2
0xc1e7	          0x4889d6	                            mov rsi, rdx	     10198	option.c	FUNCTION_68	IF_2	CALL_2
0xc1ea	          0x4889c7	                            mov rdi, rax	     10198	option.c	FUNCTION_68	IF_2	CALL_2
0xc1ed	      0xe8b93c0000	                 call sym.wc_use_keyname	     10198	option.c	FUNCTION_68	IF_2	CALL_2
0xc1f2	            0x85c0	                           test eax, eax	     10198	option.c	FUNCTION_68	IF_2	CALL_2
0xc1f4	            0x742d	                            je 0x400c263	     10198	option.c	FUNCTION_68	IF_2	CALL_2
0xc1f6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10201	option.c	FUNCTION_68	IF_2	IF_3	CALL_4
0xc1fa	      0xbe00000000	                              mov esi, 0	     10201	option.c	FUNCTION_68	IF_2	IF_3	CALL_4
0xc1ff	            0x89c7	                            mov edi, eax	     10201	option.c	FUNCTION_68	IF_2	IF_3	CALL_4
0xc201	      0xe800000000	                          call 0x400c246	     10201	option.c	FUNCTION_68	IF_2	IF_3	CALL_4
0xc206	          0x4889c2	                            mov rdx, rax	     10201	option.c	FUNCTION_68	IF_2	IF_3	CALL_4
0xc209	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10201	option.c	FUNCTION_68	IF_2	IF_3	CALL_4
0xc20d	          0x4889c6	                            mov rsi, rax	     10201	option.c	FUNCTION_68	IF_2	IF_3	CALL_4
0xc210	          0x4889d7	                            mov rdi, rdx	     10201	option.c	FUNCTION_68	IF_2	IF_3	CALL_4
0xc213	      0xe800000000	                          call 0x400c258	     10201	option.c	FUNCTION_68	IF_2	IF_3	CALL_4
0xc218	            0x85c0	                           test eax, eax	     10201	option.c	FUNCTION_68	IF_2	IF_3	CALL_4
0xc21a	            0x792f	                           jns 0x400c28b	     10201	option.c	FUNCTION_68	IF_2	IF_3	CALL_4
0xc21c	      0xb800000000	                              mov eax, 0	     10202	option.c	FUNCTION_68	IF_2	IF_3
0xc221	            0xeb44	                           jmp 0x400c2a7	     10202	option.c	FUNCTION_68	IF_2	IF_3
0xc223	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10204	option.c	FUNCTION_68	ELSE_1	IF_4	CALL_5
0xc227	          0x488b10	                    mov rdx, qword [rax]	     10204	option.c	FUNCTION_68	ELSE_1	IF_4	CALL_5
0xc22a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10204	option.c	FUNCTION_68	ELSE_1	IF_4	CALL_5
0xc22e	      0xbe00000000	                              mov esi, 0	     10204	option.c	FUNCTION_68	ELSE_1	IF_4	CALL_5
0xc233	          0x4889c7	                            mov rdi, rax	     10204	option.c	FUNCTION_68	ELSE_1	IF_4	CALL_5
0xc236	      0xb800000000	                              mov eax, 0	     10204	option.c	FUNCTION_68	ELSE_1	IF_4	CALL_5
0xc23b	      0xe800000000	                          call 0x400c280	     10204	option.c	FUNCTION_68	ELSE_1	IF_4	CALL_5
0xc240	            0x85c0	                           test eax, eax	     10204	option.c	FUNCTION_68	ELSE_1	IF_4	CALL_5
0xc242	            0x7907	                           jns 0x400c28b	     10204	option.c	FUNCTION_68	ELSE_1	IF_4	CALL_5
0xc244	      0xb800000000	                              mov eax, 0	     10205	option.c	FUNCTION_68	ELSE_1	IF_4
0xc249	            0xeb1c	                           jmp 0x400c2a7	     10205	option.c	FUNCTION_68	ELSE_1	IF_4
0xc24b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10206	option.c	FUNCTION_68	IF_5	CALL_6
0xc24f	          0x4889c7	                            mov rdi, rax	     10206	option.c	FUNCTION_68	IF_5	CALL_6
0xc252	      0xe800000000	                          call 0x400c297	     10206	option.c	FUNCTION_68	IF_5	CALL_6
0xc257	            0x85c0	                           test eax, eax	     10206	option.c	FUNCTION_68	IF_5	CALL_6
0xc259	            0x7907	                           jns 0x400c2a2	     10206	option.c	FUNCTION_68	IF_5	CALL_6
0xc25b	      0xb800000000	                              mov eax, 0	     10207	option.c	FUNCTION_68	IF_5
0xc260	            0xeb05	                           jmp 0x400c2a7	     10207	option.c	FUNCTION_68	IF_5
0xc262	      0xb801000000	                              mov eax, 1	     10208	option.c	FUNCTION_68
0xc267	        0x488b4df8	                mov rcx, qword [rbp - 8]	     10209	option.c	FUNCTION_68
0xc26b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	     10209	option.c	FUNCTION_68
0xc274	            0x7405	                            je 0x400c2bb	     10209	option.c	FUNCTION_68
0xc276	      0xe800000000	                          call 0x400c2bb	     10209	option.c	FUNCTION_68
0xc27b	              0xc9	                                   leave	     10209	option.c	FUNCTION_68
0xc27c	              0xc3	                                     ret	     10209	option.c	FUNCTION_68
compatible_set	WHILE,0:SWITCH,0:CALL,4:FOR,1:ELSE,0:DO,0:IF,1:functions,0	46
0x109d3	              0x55	                                push rbp	     12250	option.c	FUNCTION_105
0x109d4	          0x4889e5	                            mov rbp, rsp	     12250	option.c	FUNCTION_105
0x109d7	        0x4883ec10	                           sub rsp, 0x10	     12250	option.c	FUNCTION_105
0x109db	    0xc745fc000000	                  mov dword [rbp - 4], 0	     12253	option.c	FUNCTION_105	FOR_1	CALL_1
0x109e2	            0xeb65	                           jmp 0x4010a89	     12253	option.c	FUNCTION_105	FOR_1	CALL_1
0x109e4	          0x8b45fc	                mov eax, dword [rbp - 4]	     12254	option.c	FUNCTION_105	FOR_1	IF_1
0x109e7	            0x4898	                                    cdqe	     12254	option.c	FUNCTION_105	FOR_1	IF_1
0x109e9	        0x48c1e006	                              shl rax, 6	     12254	option.c	FUNCTION_105	FOR_1	IF_1
0x109ed	    0x480500000000	                              add rax, 0	     12254	option.c	FUNCTION_105	FOR_1	IF_1
0x109f3	          0x488b00	                    mov rax, qword [rax]	     12254	option.c	FUNCTION_105	FOR_1	IF_1
0x109f6	      0x2500080000	                          and eax, 0x800	     12254	option.c	FUNCTION_105	FOR_1	IF_1
0x109fb	          0x4885c0	                           test rax, rax	     12254	option.c	FUNCTION_105	FOR_1	IF_1
0x109fe	            0x740a	                            je 0x4010a4a	     12254	option.c	FUNCTION_105	FOR_1	IF_1
0x10a00	    0x8b0500000000	            mov eax, dword [0x04010a46] 	     12254	option.c	FUNCTION_105	FOR_1	IF_1
0x10a06	            0x85c0	                           test eax, eax	     12254	option.c	FUNCTION_105	FOR_1	IF_1
0x10a08	            0x7526	                           jne 0x4010a70	     12254	option.c	FUNCTION_105	FOR_1	IF_1
0x10a0a	          0x8b45fc	                mov eax, dword [rbp - 4]	     12255	option.c	FUNCTION_105	FOR_1	IF_1
0x10a0d	            0x4898	                                    cdqe	     12255	option.c	FUNCTION_105	FOR_1	IF_1
0x10a0f	        0x48c1e006	                              shl rax, 6	     12255	option.c	FUNCTION_105	FOR_1	IF_1
0x10a13	    0x480500000000	                              add rax, 0	     12255	option.c	FUNCTION_105	FOR_1	IF_1
0x10a19	          0x488b00	                    mov rax, qword [rax]	     12255	option.c	FUNCTION_105	FOR_1	IF_1
0x10a1c	      0x2500040000	                          and eax, 0x400	     12255	option.c	FUNCTION_105	FOR_1	IF_1
0x10a21	          0x4885c0	                           test rax, rax	     12255	option.c	FUNCTION_105	FOR_1	IF_1
0x10a24	            0x751f	                           jne 0x4010a85	     12255	option.c	FUNCTION_105	FOR_1	IF_1
0x10a26	    0x8b0500000000	            mov eax, dword [0x04010a6c] 	     12255	option.c	FUNCTION_105	FOR_1	IF_1
0x10a2c	            0x85c0	                           test eax, eax	     12255	option.c	FUNCTION_105	FOR_1	IF_1
0x10a2e	            0x7515	                           jne 0x4010a85	     12255	option.c	FUNCTION_105	FOR_1	IF_1
0x10a30	    0x8b1500000000	            mov edx, dword [0x04010a76] 	     12256	option.c	FUNCTION_105	FOR_1	IF_1
0x10a36	          0x8b45fc	                mov eax, dword [rbp - 4]	     12256	option.c	FUNCTION_105	FOR_1	IF_1
0x10a39	      0xbe01000000	                              mov esi, 1	     12256	option.c	FUNCTION_105	FOR_1	IF_1
0x10a3e	            0x89c7	                            mov edi, eax	     12256	option.c	FUNCTION_105	FOR_1	IF_1
0x10a40	      0xe8cafcfeff	             call sym.set_option_default	     12256	option.c	FUNCTION_105	FOR_1	IF_1
0x10a45	        0x8345fc01	                  add dword [rbp - 4], 1	     12253	option.c	FUNCTION_105	FOR_1	CALL_1
0x10a49	          0x8b45fc	                mov eax, dword [rbp - 4]	     12253	option.c	FUNCTION_105	FOR_1	CALL_1
0x10a4c	            0x4898	                                    cdqe	     12253	option.c	FUNCTION_105	FOR_1	CALL_1
0x10a4e	        0x48c1e006	                              shl rax, 6	     12253	option.c	FUNCTION_105	FOR_1	CALL_1
0x10a52	    0x480500000000	                              add rax, 0	     12253	option.c	FUNCTION_105	FOR_1	CALL_1
0x10a58	          0x4889c7	                            mov rdi, rax	     12253	option.c	FUNCTION_105	FOR_1	CALL_1
0x10a5b	      0xe8e4baffff	                   call sym.istermoption	     12253	option.c	FUNCTION_105	FOR_1	CALL_1
0x10a60	            0x85c0	                           test eax, eax	     12253	option.c	FUNCTION_105	FOR_1	CALL_1
0x10a62	            0x7480	                            je 0x4010a24	     12253	option.c	FUNCTION_105	FOR_1	CALL_1
0x10a64	      0xe8c734ffff	                 call sym.didset_options	     12257	option.c	FUNCTION_105	CALL_3
0x10a69	      0xe83a36ffff	                call sym.didset_options2	     12258	option.c	FUNCTION_105	CALL_4
0x10a6e	              0x90	                                     nop	     12259	option.c	FUNCTION_105
0x10a6f	              0xc9	                                   leave	     12259	option.c	FUNCTION_105
0x10a70	              0xc3	                                     ret	     12259	option.c	FUNCTION_105
ExpandOldSetting	WHILE,0:SWITCH,0:CALL,9:FOR,1:ELSE,1:DO,0:IF,7:functions,0	73
0xfbb4	              0x55	                                push rbp	     11668	option.c	FUNCTION_91
0xfbb5	          0x4889e5	                            mov rbp, rsp	     11668	option.c	FUNCTION_91
0xfbb8	        0x4883ec20	                           sub rsp, 0x20	     11668	option.c	FUNCTION_91
0xfbbc	        0x48897de8	             mov qword [rbp - 0x18], rdi	     11668	option.c	FUNCTION_91
0xfbc0	        0x488975e0	             mov qword [rbp - 0x20], rsi	     11668	option.c	FUNCTION_91
0xfbc4	    0x48c745f00000	               mov qword [rbp - 0x10], 0	     11669	option.c	FUNCTION_91
0xfbcc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11672	option.c	FUNCTION_91
0xfbd0	    0xc70000000000	                      mov dword [rax], 0	     11672	option.c	FUNCTION_91
0xfbd6	      0xbf08000000	                              mov edi, 8	     11673	option.c	FUNCTION_91	CALL_1
0xfbdb	      0xe800000000	                          call 0x400fc20	     11673	option.c	FUNCTION_91	CALL_1
0xfbe0	          0x4889c2	                            mov rdx, rax	     11673	option.c	FUNCTION_91	CALL_1
0xfbe3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11673	option.c	FUNCTION_91	CALL_1
0xfbe7	          0x488910	                    mov qword [rax], rdx	     11673	option.c	FUNCTION_91	CALL_1
0xfbea	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11674	option.c	FUNCTION_91	IF_1
0xfbee	          0x488b00	                    mov rax, qword [rax]	     11674	option.c	FUNCTION_91	IF_1
0xfbf1	          0x4885c0	                           test rax, rax	     11674	option.c	FUNCTION_91	IF_1
0xfbf4	            0x750a	                           jne 0x400fc40	     11674	option.c	FUNCTION_91	IF_1
0xfbf6	      0xb800000000	                              mov eax, 0	     11675	option.c	FUNCTION_91	IF_1
0xfbfb	      0xe9db000000	                           jmp 0x400fd1b	     11675	option.c	FUNCTION_91	IF_1
0xfc00	    0x8b0500000000	            mov eax, dword [0x0400fc46] 	     11680	option.c	FUNCTION_91	IF_2
0xfc06	            0x85c0	                           test eax, eax	     11680	option.c	FUNCTION_91	IF_2
0xfc08	            0x7928	                           jns 0x400fc72	     11680	option.c	FUNCTION_91	IF_2
0xfc0a	      0xb800000000	                              mov eax, 0	     11682	option.c	FUNCTION_91	IF_2	CALL_2
0xfc0f	          0x4889c7	                            mov rdi, rax	     11682	option.c	FUNCTION_91	IF_2	CALL_2
0xfc12	      0xe800000000	                          call 0x400fc57	     11682	option.c	FUNCTION_91	IF_2	CALL_2
0xfc17	        0x488945f0	             mov qword [rbp - 0x10], rax	     11682	option.c	FUNCTION_91	IF_2	CALL_2
0xfc1b	      0x48837df000	               cmp qword [rbp - 0x10], 0	     11683	option.c	FUNCTION_91	IF_2	IF_3
0xfc20	            0x7510	                           jne 0x400fc72	     11683	option.c	FUNCTION_91	IF_2	IF_3
0xfc22	      0xbf00000000	                              mov edi, 0	     11684	option.c	FUNCTION_91	IF_2	CALL_3
0xfc27	      0xe85ab1ffff	                     call sym.findoption	     11684	option.c	FUNCTION_91	IF_2	CALL_3
0xfc2c	    0x890500000000	            mov dword [0x0400fc72], eax 	     11684	option.c	FUNCTION_91	IF_2	CALL_3
0xfc32	    0x8b0500000000	            mov eax, dword [0x0400fc78] 	     11687	option.c	FUNCTION_91	IF_4
0xfc38	            0x85c0	                           test eax, eax	     11687	option.c	FUNCTION_91	IF_4
0xfc3a	            0x7831	                            js 0x400fcad	     11687	option.c	FUNCTION_91	IF_4
0xfc3c	    0x8b0500000000	            mov eax, dword [0x0400fc82] 	     11690	option.c	FUNCTION_91	IF_4	CALL_4
0xfc42	    0x8b1500000000	            mov edx, dword [0x0400fc88] 	     11690	option.c	FUNCTION_91	IF_4	CALL_4
0xfc48	          0x4863d2	                         movsxd rdx, edx	     11690	option.c	FUNCTION_91	IF_4	CALL_4
0xfc4b	        0x48c1e206	                              shl rdx, 6	     11690	option.c	FUNCTION_91	IF_4	CALL_4
0xfc4f	    0x4881c2000000	                              add rdx, 0	     11690	option.c	FUNCTION_91	IF_4	CALL_4
0xfc56	            0x89c6	                            mov esi, eax	     11690	option.c	FUNCTION_91	IF_4	CALL_4
0xfc58	          0x4889d7	                            mov rdi, rdx	     11690	option.c	FUNCTION_91	IF_4	CALL_4
0xfc5b	      0xe87d000000	            call sym.option_value2string	     11690	option.c	FUNCTION_91	IF_4	CALL_4
0xfc60	    0x488b05000000	            mov rax, qword [0x0400fca7] 	     11691	option.c	FUNCTION_91	IF_4
0xfc67	        0x488945f0	             mov qword [rbp - 0x10], rax	     11691	option.c	FUNCTION_91	IF_4
0xfc6b	            0xeb0f	                           jmp 0x400fcbc	     11691	option.c	FUNCTION_91	IF_4
0xfc6d	      0x48837df000	               cmp qword [rbp - 0x10], 0	     11693	option.c	FUNCTION_91	ELSE_1	IF_5
0xfc72	            0x7508	                           jne 0x400fcbc	     11693	option.c	FUNCTION_91	ELSE_1	IF_5
0xfc74	    0x48c745f00000	               mov qword [rbp - 0x10], 0	     11694	option.c	FUNCTION_91	ELSE_1	IF_5
0xfc7c	    0x488b15000000	            mov rdx, qword [0x0400fcc3] 	     11698	option.c	FUNCTION_91	CALL_5
0xfc83	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11698	option.c	FUNCTION_91	CALL_5
0xfc87	          0x4889d6	                            mov rsi, rdx	     11698	option.c	FUNCTION_91	CALL_5
0xfc8a	          0x4889c7	                            mov rdi, rax	     11698	option.c	FUNCTION_91	CALL_5
0xfc8d	      0xe800000000	                          call 0x400fcd2	     11698	option.c	FUNCTION_91	CALL_5
0xfc92	        0x488945f8	                mov qword [rbp - 8], rax	     11698	option.c	FUNCTION_91	CALL_5
0xfc96	      0x48837df800	                  cmp qword [rbp - 8], 0	     11700	option.c	FUNCTION_91	IF_6
0xfc9b	            0x7521	                           jne 0x400fcfe	     11700	option.c	FUNCTION_91	IF_6
0xfc9d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11702	option.c	FUNCTION_91	IF_6	CALL_6
0xfca1	          0x488b00	                    mov rax, qword [rax]	     11702	option.c	FUNCTION_91	IF_6	CALL_6
0xfca4	          0x4889c7	                            mov rdi, rax	     11702	option.c	FUNCTION_91	IF_6	CALL_6
0xfca7	      0xe800000000	                          call 0x400fcec	     11702	option.c	FUNCTION_91	IF_6	CALL_6
0xfcac	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11703	option.c	FUNCTION_91	IF_6
0xfcb0	    0x48c700000000	                      mov qword [rax], 0	     11703	option.c	FUNCTION_91	IF_6
0xfcb7	      0xb800000000	                              mov eax, 0	     11704	option.c	FUNCTION_91	IF_6
0xfcbc	            0xeb1d	                           jmp 0x400fd1b	     11704	option.c	FUNCTION_91	IF_6
0xfcbe	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11719	option.c	FUNCTION_91
0xfcc2	          0x488b00	                    mov rax, qword [rax]	     11719	option.c	FUNCTION_91
0xfcc5	        0x488b55f8	                mov rdx, qword [rbp - 8]	     11719	option.c	FUNCTION_91
0xfcc9	          0x488910	                    mov qword [rax], rdx	     11719	option.c	FUNCTION_91
0xfccc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11720	option.c	FUNCTION_91
0xfcd0	    0xc70001000000	                      mov dword [rax], 1	     11720	option.c	FUNCTION_91
0xfcd6	      0xb801000000	                              mov eax, 1	     11721	option.c	FUNCTION_91
0xfcdb	              0xc9	                                   leave	     11722	option.c	FUNCTION_91
0xfcdc	              0xc3	                                     ret	     11722	option.c	FUNCTION_91
wc_use_keyname	WHILE,0:SWITCH,0:CALL,2:FOR,0:ELSE,0:DO,0:IF,2:functions,0	28
0xfeab	              0x55	                                push rbp	     11776	option.c	FUNCTION_93
0xfeac	          0x4889e5	                            mov rbp, rsp	     11776	option.c	FUNCTION_93
0xfeaf	        0x4883ec10	                           sub rsp, 0x10	     11776	option.c	FUNCTION_93
0xfeb3	        0x48897df8	                mov qword [rbp - 8], rdi	     11776	option.c	FUNCTION_93
0xfeb7	        0x488975f0	             mov qword [rbp - 0x10], rsi	     11776	option.c	FUNCTION_93
0xfebb	    0x48817df80000	                  cmp qword [rbp - 8], 0	     11777	option.c	FUNCTION_93	IF_1
0xfec3	            0x740a	                            je 0x400ff0f	     11777	option.c	FUNCTION_93	IF_1
0xfec5	    0x48817df80000	                  cmp qword [rbp - 8], 0	     11777	option.c	FUNCTION_93	IF_1
0xfecd	            0x7533	                           jne 0x400ff42	     11777	option.c	FUNCTION_93	IF_1
0xfecf	        0x488b45f8	                mov rax, qword [rbp - 8]	     11779	option.c	FUNCTION_93	IF_1
0xfed3	          0x488b10	                    mov rdx, qword [rax]	     11779	option.c	FUNCTION_93	IF_1
0xfed6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11779	option.c	FUNCTION_93	IF_1
0xfeda	          0x488910	                    mov qword [rax], rdx	     11779	option.c	FUNCTION_93	IF_1
0xfedd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11780	option.c	FUNCTION_93	IF_1	IF_2	CALL_2
0xfee1	          0x488b00	                    mov rax, qword [rax]	     11780	option.c	FUNCTION_93	IF_1	IF_2	CALL_2
0xfee4	          0x4885c0	                           test rax, rax	     11780	option.c	FUNCTION_93	IF_1	IF_2	CALL_2
0xfee7	            0x7812	                            js 0x400ff3b	     11780	option.c	FUNCTION_93	IF_1	IF_2	CALL_2
0xfee9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11780	option.c	FUNCTION_93	IF_1	IF_2	CALL_2
0xfeed	          0x488b00	                    mov rax, qword [rax]	     11780	option.c	FUNCTION_93	IF_1	IF_2	CALL_2
0xfef0	            0x89c7	                            mov edi, eax	     11780	option.c	FUNCTION_93	IF_1	IF_2	CALL_2
0xfef2	      0xe800000000	                          call 0x400ff37	     11780	option.c	FUNCTION_93	IF_1	IF_2	CALL_2
0xfef7	            0x85c0	                           test eax, eax	     11780	option.c	FUNCTION_93	IF_1	IF_2	CALL_2
0xfef9	            0x7807	                            js 0x400ff42	     11780	option.c	FUNCTION_93	IF_1	IF_2	CALL_2
0xfefb	      0xb801000000	                              mov eax, 1	     11781	option.c	FUNCTION_93	IF_1	IF_2
0xff00	            0xeb05	                           jmp 0x400ff47	     11781	option.c	FUNCTION_93	IF_1	IF_2
0xff02	      0xb800000000	                              mov eax, 0	     11783	option.c	FUNCTION_93
0xff07	              0xc9	                                   leave	     11784	option.c	FUNCTION_93
0xff08	              0xc3	                                     ret	     11784	option.c	FUNCTION_93
didset_options	WHILE,0:SWITCH,0:CALL,20:FOR,0:ELSE,0:DO,0:IF,0:functions,0	79
0x3f30	              0x55	                                push rbp	      5521	option.c	FUNCTION_26
0x3f31	          0x4889e5	                            mov rbp, rsp	      5521	option.c	FUNCTION_26
0x3f34	      0xe800000000	                          call 0x4003f79	      5523	option.c	FUNCTION_26	CALL_1
0x3f39	    0x488b05000000	            mov rax, qword [0x04003f80] 	      5526	option.c	FUNCTION_26	CALL_2
0x3f40	      0xb901000000	                              mov ecx, 1	      5526	option.c	FUNCTION_26	CALL_2
0x3f45	      0xba00000000	                              mov edx, 0	      5526	option.c	FUNCTION_26	CALL_2
0x3f4a	      0xbe00000000	                              mov esi, 0	      5526	option.c	FUNCTION_26	CALL_2
0x3f4f	          0x4889c7	                            mov rdi, rax	      5526	option.c	FUNCTION_26	CALL_2
0x3f52	      0xe8aecb0000	              call sym.opt_strings_flags	      5526	option.c	FUNCTION_26	CALL_2
0x3f57	    0x488b05000000	            mov rax, qword [0x04003f9e] 	      5528	option.c	FUNCTION_26	CALL_3
0x3f5e	      0xb901000000	                              mov ecx, 1	      5528	option.c	FUNCTION_26	CALL_3
0x3f63	      0xba00000000	                              mov edx, 0	      5528	option.c	FUNCTION_26	CALL_3
0x3f68	      0xbe00000000	                              mov esi, 0	      5528	option.c	FUNCTION_26	CALL_3
0x3f6d	          0x4889c7	                            mov rdi, rax	      5528	option.c	FUNCTION_26	CALL_3
0x3f70	      0xe890cb0000	              call sym.opt_strings_flags	      5528	option.c	FUNCTION_26	CALL_3
0x3f75	    0x488b05000000	            mov rax, qword [0x04003fbc] 	      5529	option.c	FUNCTION_26	CALL_4
0x3f7c	      0xb901000000	                              mov ecx, 1	      5529	option.c	FUNCTION_26	CALL_4
0x3f81	      0xba00000000	                              mov edx, 0	      5529	option.c	FUNCTION_26	CALL_4
0x3f86	      0xbe00000000	                              mov esi, 0	      5529	option.c	FUNCTION_26	CALL_4
0x3f8b	          0x4889c7	                            mov rdi, rax	      5529	option.c	FUNCTION_26	CALL_4
0x3f8e	      0xe872cb0000	              call sym.opt_strings_flags	      5529	option.c	FUNCTION_26	CALL_4
0x3f93	    0x488b05000000	            mov rax, qword [0x04003fda] 	      5531	option.c	FUNCTION_26	CALL_5
0x3f9a	      0xb901000000	                              mov ecx, 1	      5531	option.c	FUNCTION_26	CALL_5
0x3f9f	      0xba00000000	                              mov edx, 0	      5531	option.c	FUNCTION_26	CALL_5
0x3fa4	      0xbe00000000	                              mov esi, 0	      5531	option.c	FUNCTION_26	CALL_5
0x3fa9	          0x4889c7	                            mov rdi, rax	      5531	option.c	FUNCTION_26	CALL_5
0x3fac	      0xe854cb0000	              call sym.opt_strings_flags	      5531	option.c	FUNCTION_26	CALL_5
0x3fb1	    0x488b05000000	            mov rax, qword [0x04003ff8] 	      5532	option.c	FUNCTION_26	CALL_6
0x3fb8	      0xb901000000	                              mov ecx, 1	      5532	option.c	FUNCTION_26	CALL_6
0x3fbd	      0xba00000000	                              mov edx, 0	      5532	option.c	FUNCTION_26	CALL_6
0x3fc2	      0xbe00000000	                              mov esi, 0	      5532	option.c	FUNCTION_26	CALL_6
0x3fc7	          0x4889c7	                            mov rdi, rax	      5532	option.c	FUNCTION_26	CALL_6
0x3fca	      0xe836cb0000	              call sym.opt_strings_flags	      5532	option.c	FUNCTION_26	CALL_6
0x3fcf	    0x488b05000000	            mov rax, qword [0x04004016] 	      5535	option.c	FUNCTION_26	CALL_7
0x3fd6	      0xb901000000	                              mov ecx, 1	      5535	option.c	FUNCTION_26	CALL_7
0x3fdb	      0xba00000000	                              mov edx, 0	      5535	option.c	FUNCTION_26	CALL_7
0x3fe0	      0xbe00000000	                              mov esi, 0	      5535	option.c	FUNCTION_26	CALL_7
0x3fe5	          0x4889c7	                            mov rdi, rax	      5535	option.c	FUNCTION_26	CALL_7
0x3fe8	      0xe818cb0000	              call sym.opt_strings_flags	      5535	option.c	FUNCTION_26	CALL_7
0x3fed	    0x488b05000000	            mov rax, qword [0x04004034] 	      5537	option.c	FUNCTION_26	CALL_8
0x3ff4	      0xb901000000	                              mov ecx, 1	      5537	option.c	FUNCTION_26	CALL_8
0x3ff9	      0xba00000000	                              mov edx, 0	      5537	option.c	FUNCTION_26	CALL_8
0x3ffe	      0xbe00000000	                              mov esi, 0	      5537	option.c	FUNCTION_26	CALL_8
0x4003	          0x4889c7	                            mov rdi, rax	      5537	option.c	FUNCTION_26	CALL_8
0x4006	      0xe8faca0000	              call sym.opt_strings_flags	      5537	option.c	FUNCTION_26	CALL_8
0x400b	    0x488b05000000	            mov rax, qword [0x04004052] 	      5538	option.c	FUNCTION_26	CALL_9
0x4012	      0xb900000000	                              mov ecx, 0	      5538	option.c	FUNCTION_26	CALL_9
0x4017	      0xba00000000	                              mov edx, 0	      5538	option.c	FUNCTION_26	CALL_9
0x401c	      0xbe00000000	                              mov esi, 0	      5538	option.c	FUNCTION_26	CALL_9
0x4021	          0x4889c7	                            mov rdi, rax	      5538	option.c	FUNCTION_26	CALL_9
0x4024	      0xe8dcca0000	              call sym.opt_strings_flags	      5538	option.c	FUNCTION_26	CALL_9
0x4029	    0x488b05000000	            mov rax, qword [0x04004070] 	      5540	option.c	FUNCTION_26	CALL_10
0x4030	      0xb901000000	                              mov ecx, 1	      5540	option.c	FUNCTION_26	CALL_10
0x4035	      0xba00000000	                              mov edx, 0	      5540	option.c	FUNCTION_26	CALL_10
0x403a	      0xbe00000000	                              mov esi, 0	      5540	option.c	FUNCTION_26	CALL_10
0x403f	          0x4889c7	                            mov rdi, rax	      5540	option.c	FUNCTION_26	CALL_10
0x4042	      0xe8beca0000	              call sym.opt_strings_flags	      5540	option.c	FUNCTION_26	CALL_10
0x4047	    0x488b05000000	            mov rax, qword [0x0400408e] 	      5543	option.c	FUNCTION_26	CALL_11
0x404e	      0xb900000000	                              mov ecx, 0	      5543	option.c	FUNCTION_26	CALL_11
0x4053	      0xba00000000	                              mov edx, 0	      5543	option.c	FUNCTION_26	CALL_11
0x4058	      0xbe00000000	                              mov esi, 0	      5543	option.c	FUNCTION_26	CALL_11
0x405d	          0x4889c7	                            mov rdi, rax	      5543	option.c	FUNCTION_26	CALL_11
0x4060	      0xe8a0ca0000	              call sym.opt_strings_flags	      5543	option.c	FUNCTION_26	CALL_11
0x4065	      0xe800000000	                          call 0x40040aa	      5546	option.c	FUNCTION_26	CALL_12
0x406a	      0xe800000000	                          call 0x40040af	      5547	option.c	FUNCTION_26	CALL_13
0x406f	    0x488b05000000	            mov rax, qword [0x040040b6] 	      5548	option.c	FUNCTION_26	CALL_14
0x4076	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5548	option.c	FUNCTION_26	CALL_14
0x407a	          0x4889c7	                            mov rdi, rax	      5548	option.c	FUNCTION_26	CALL_14
0x407d	      0xe8ef490000	               call sym.compile_cap_prog	      5548	option.c	FUNCTION_26	CALL_14
0x4082	      0xbf01000000	                              mov edi, 1	      5549	option.c	FUNCTION_26	CALL_15
0x4087	      0xe80a490000	           call sym.did_set_spell_option	      5549	option.c	FUNCTION_26	CALL_15
0x408c	      0xe8eaf9ffff	                    call sym.check_cedit	      5559	option.c	FUNCTION_26	CALL_18
0x4091	    0x488b05000000	            mov rax, qword [0x040040d8] 	      5562	option.c	FUNCTION_26	CALL_19
0x4098	          0x4889c7	                            mov rdi, rax	      5562	option.c	FUNCTION_26	CALL_19
0x409b	      0xe87ad30000	                   call sym.briopt_check	      5562	option.c	FUNCTION_26	CALL_19
0x40a0	      0xe8ccc90000	             call sym.fill_breakat_flags	      5566	option.c	FUNCTION_26	CALL_20
0x40a5	              0x90	                                     nop	      5569	option.c	FUNCTION_26
0x40a6	              0x5d	                                 pop rbp	      5569	option.c	FUNCTION_26
0x40a7	              0xc3	                                     ret	      5569	option.c	FUNCTION_26
langmap_set_entry	WHILE,1:SWITCH,0:CALL,2:FOR,0:ELSE,1:DO,0:IF,3:functions,0	82
0xff09	              0x55	                                push rbp	     11819	option.c	FUNCTION_94
0xff0a	          0x4889e5	                            mov rbp, rsp	     11819	option.c	FUNCTION_94
0xff0d	        0x4883ec30	                           sub rsp, 0x30	     11819	option.c	FUNCTION_94
0xff11	          0x897ddc	             mov dword [rbp - 0x24], edi	     11819	option.c	FUNCTION_94
0xff14	          0x8975d8	             mov dword [rbp - 0x28], esi	     11819	option.c	FUNCTION_94
0xff17	    0x488b05000000	            mov rax, qword [0x0400ff5e] 	     11820	option.c	FUNCTION_94
0xff1e	        0x488945f8	                mov qword [rbp - 8], rax	     11820	option.c	FUNCTION_94
0xff22	    0xc745e8000000	               mov dword [rbp - 0x18], 0	     11821	option.c	FUNCTION_94
0xff29	    0x8b0500000000	            mov eax, dword [0x0400ff6f] 	     11822	option.c	FUNCTION_94
0xff2f	          0x8945ec	             mov dword [rbp - 0x14], eax	     11822	option.c	FUNCTION_94
0xff32	            0xeb6c	                           jmp 0x400ffe0	     11825	option.c	FUNCTION_94	WHILE_1
0xff34	          0x8b55e8	             mov edx, dword [rbp - 0x18]	     11827	option.c	FUNCTION_94	WHILE_1
0xff37	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     11827	option.c	FUNCTION_94	WHILE_1
0xff3a	             0x1d0	                            add eax, edx	     11827	option.c	FUNCTION_94	WHILE_1
0xff3c	            0x89c2	                            mov edx, eax	     11827	option.c	FUNCTION_94	WHILE_1
0xff3e	          0xc1ea1f	                           shr edx, 0x1f	     11827	option.c	FUNCTION_94	WHILE_1
0xff41	             0x1d0	                            add eax, edx	     11827	option.c	FUNCTION_94	WHILE_1
0xff43	            0xd1f8	                              sar eax, 1	     11827	option.c	FUNCTION_94	WHILE_1
0xff45	          0x8945f0	             mov dword [rbp - 0x10], eax	     11827	option.c	FUNCTION_94	WHILE_1
0xff48	          0x8b45f0	             mov eax, dword [rbp - 0x10]	     11828	option.c	FUNCTION_94	WHILE_1
0xff4b	            0x4898	                                    cdqe	     11828	option.c	FUNCTION_94	WHILE_1
0xff4d	    0x488d14c50000	                        lea rdx, [rax*8]	     11828	option.c	FUNCTION_94	WHILE_1
0xff55	        0x488b45f8	                mov rax, qword [rbp - 8]	     11828	option.c	FUNCTION_94	WHILE_1
0xff59	          0x4801d0	                            add rax, rdx	     11828	option.c	FUNCTION_94	WHILE_1
0xff5c	            0x8b00	                    mov eax, dword [rax]	     11828	option.c	FUNCTION_94	WHILE_1
0xff5e	          0x2b45dc	             sub eax, dword [rbp - 0x24]	     11828	option.c	FUNCTION_94	WHILE_1
0xff61	          0x8945f4	              mov dword [rbp - 0xc], eax	     11828	option.c	FUNCTION_94	WHILE_1
0xff64	        0x837df400	                cmp dword [rbp - 0xc], 0	     11830	option.c	FUNCTION_94	WHILE_1	IF_1
0xff68	            0x751f	                           jne 0x400ffc9	     11830	option.c	FUNCTION_94	WHILE_1	IF_1
0xff6a	          0x8b45f0	             mov eax, dword [rbp - 0x10]	     11832	option.c	FUNCTION_94	WHILE_1	IF_1
0xff6d	            0x4898	                                    cdqe	     11832	option.c	FUNCTION_94	WHILE_1	IF_1
0xff6f	    0x488d14c50000	                        lea rdx, [rax*8]	     11832	option.c	FUNCTION_94	WHILE_1	IF_1
0xff77	        0x488b45f8	                mov rax, qword [rbp - 8]	     11832	option.c	FUNCTION_94	WHILE_1	IF_1
0xff7b	          0x4801c2	                            add rdx, rax	     11832	option.c	FUNCTION_94	WHILE_1	IF_1
0xff7e	          0x8b45d8	             mov eax, dword [rbp - 0x28]	     11832	option.c	FUNCTION_94	WHILE_1	IF_1
0xff81	          0x894204	                mov dword [rdx + 4], eax	     11832	option.c	FUNCTION_94	WHILE_1	IF_1
0xff84	      0xe99a000000	                           jmp 0x4010063	     11833	option.c	FUNCTION_94	WHILE_1	IF_1
0xff89	        0x837df400	                cmp dword [rbp - 0xc], 0	     11835	option.c	FUNCTION_94	WHILE_1	IF_2
0xff8d	            0x790b	                           jns 0x400ffda	     11835	option.c	FUNCTION_94	WHILE_1	IF_2
0xff8f	          0x8b45f0	             mov eax, dword [rbp - 0x10]	     11836	option.c	FUNCTION_94	WHILE_1	IF_2
0xff92	          0x83c001	                              add eax, 1	     11836	option.c	FUNCTION_94	WHILE_1	IF_2
0xff95	          0x8945e8	             mov dword [rbp - 0x18], eax	     11836	option.c	FUNCTION_94	WHILE_1	IF_2
0xff98	            0xeb06	                           jmp 0x400ffe0	     11836	option.c	FUNCTION_94	WHILE_1	IF_2
0xff9a	          0x8b45f0	             mov eax, dword [rbp - 0x10]	     11838	option.c	FUNCTION_94	WHILE_1	ELSE_1
0xff9d	          0x8945ec	             mov dword [rbp - 0x14], eax	     11838	option.c	FUNCTION_94	WHILE_1	ELSE_1
0xffa0	          0x8b45e8	             mov eax, dword [rbp - 0x18]	     11825	option.c	FUNCTION_94	WHILE_1
0xffa3	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	     11825	option.c	FUNCTION_94	WHILE_1
0xffa6	            0x758c	                           jne 0x400ff74	     11825	option.c	FUNCTION_94	WHILE_1
0xffa8	      0xbe01000000	                              mov esi, 1	     11841	option.c	FUNCTION_94	IF_3	CALL_1
0xffad	      0xbf00000000	                              mov edi, 0	     11841	option.c	FUNCTION_94	IF_3	CALL_1
0xffb2	      0xe800000000	                          call 0x400fff7	     11841	option.c	FUNCTION_94	IF_3	CALL_1
0xffb7	          0x83f801	                              cmp eax, 1	     11841	option.c	FUNCTION_94	IF_3	CALL_1
0xffba	            0x7566	                           jne 0x4010062	     11841	option.c	FUNCTION_94	IF_3	CALL_1
0xffbc	    0x488b05000000	            mov rax, qword [0x04010003] 	     11845	option.c	FUNCTION_94
0xffc3	          0x8b55e8	             mov edx, dword [rbp - 0x18]	     11845	option.c	FUNCTION_94
0xffc6	          0x4863d2	                         movsxd rdx, edx	     11845	option.c	FUNCTION_94
0xffc9	        0x48c1e203	                              shl rdx, 3	     11845	option.c	FUNCTION_94
0xffcd	          0x4801d0	                            add rax, rdx	     11845	option.c	FUNCTION_94
0xffd0	        0x488945f8	                mov qword [rbp - 8], rax	     11845	option.c	FUNCTION_94
0xffd4	    0x8b0500000000	            mov eax, dword [0x0401001a] 	     11846	option.c	FUNCTION_94	CALL_2
0xffda	          0x2b45e8	             sub eax, dword [rbp - 0x18]	     11846	option.c	FUNCTION_94	CALL_2
0xffdd	            0x4898	                                    cdqe	     11846	option.c	FUNCTION_94	CALL_2
0xffdf	    0x488d14c50000	                        lea rdx, [rax*8]	     11846	option.c	FUNCTION_94	CALL_2
0xffe7	        0x488b45f8	                mov rax, qword [rbp - 8]	     11846	option.c	FUNCTION_94	CALL_2
0xffeb	        0x488d4808	                      lea rcx, [rax + 8]	     11846	option.c	FUNCTION_94	CALL_2
0xffef	        0x488b45f8	                mov rax, qword [rbp - 8]	     11846	option.c	FUNCTION_94	CALL_2
0xfff3	          0x4889c6	                            mov rsi, rax	     11846	option.c	FUNCTION_94	CALL_2
0xfff6	          0x4889cf	                            mov rdi, rcx	     11846	option.c	FUNCTION_94	CALL_2
0xfff9	      0xe800000000	                          call 0x401003e	     11846	option.c	FUNCTION_94	CALL_2
0xfffe	    0x8b0500000000	            mov eax, dword [0x04010044] 	     11848	option.c	FUNCTION_94
0x10004	          0x83c001	                              add eax, 1	     11848	option.c	FUNCTION_94
0x10007	    0x890500000000	            mov dword [0x0401004d], eax 	     11848	option.c	FUNCTION_94
0x1000d	        0x488b45f8	                mov rax, qword [rbp - 8]	     11849	option.c	FUNCTION_94
0x10011	          0x8b55dc	             mov edx, dword [rbp - 0x24]	     11849	option.c	FUNCTION_94
0x10014	            0x8910	                    mov dword [rax], edx	     11849	option.c	FUNCTION_94
0x10016	        0x488b45f8	                mov rax, qword [rbp - 8]	     11850	option.c	FUNCTION_94
0x1001a	          0x8b55d8	             mov edx, dword [rbp - 0x28]	     11850	option.c	FUNCTION_94
0x1001d	          0x895004	                mov dword [rax + 4], edx	     11850	option.c	FUNCTION_94
0x10020	            0xeb01	                           jmp 0x4010063	     11850	option.c	FUNCTION_94
0x10022	              0x90	                                     nop	     11842	option.c	FUNCTION_94	IF_3
0x10023	              0xc9	                                   leave	     11851	option.c	FUNCTION_94
0x10024	              0xc3	                                     ret	     11851	option.c	FUNCTION_94
illegal_char	WHILE,0:SWITCH,0:CALL,3:FOR,0:ELSE,0:DO,0:IF,1:functions,0	28
0x3966	              0x55	                                push rbp	      5285	option.c	FUNCTION_18
0x3967	          0x4889e5	                            mov rbp, rsp	      5285	option.c	FUNCTION_18
0x396a	              0x53	                                push rbx	      5285	option.c	FUNCTION_18
0x396b	        0x4883ec18	                           sub rsp, 0x18	      5285	option.c	FUNCTION_18
0x396f	        0x48897de8	             mov qword [rbp - 0x18], rdi	      5285	option.c	FUNCTION_18
0x3973	          0x8975e4	             mov dword [rbp - 0x1c], esi	      5285	option.c	FUNCTION_18
0x3976	      0x48837de800	               cmp qword [rbp - 0x18], 0	      5286	option.c	FUNCTION_18	IF_1
0x397b	            0x7507	                           jne 0x40039c4	      5286	option.c	FUNCTION_18	IF_1
0x397d	      0xb800000000	                              mov eax, 0	      5287	option.c	FUNCTION_18	IF_1
0x3982	            0xeb35	                           jmp 0x40039f9	      5287	option.c	FUNCTION_18	IF_1
0x3984	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      5289	option.c	FUNCTION_18	CALL_3
0x3987	            0x89c7	                            mov edi, eax	      5289	option.c	FUNCTION_18	CALL_3
0x3989	      0xe800000000	                          call 0x40039ce	      5289	option.c	FUNCTION_18	CALL_3
0x398e	          0x4889c3	                            mov rbx, rax	      5289	option.c	FUNCTION_18	CALL_3
0x3991	      0xbf00000000	                              mov edi, 0	      5288	option.c	FUNCTION_18	CALL_2
0x3996	      0xe800000000	                          call 0x40039db	      5288	option.c	FUNCTION_18	CALL_2
0x399b	          0x4889c1	                            mov rcx, rax	      5288	option.c	FUNCTION_18	CALL_2
0x399e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5288	option.c	FUNCTION_18	CALL_2
0x39a2	          0x4889da	                            mov rdx, rbx	      5288	option.c	FUNCTION_18	CALL_2
0x39a5	          0x4889ce	                            mov rsi, rcx	      5288	option.c	FUNCTION_18	CALL_2
0x39a8	          0x4889c7	                            mov rdi, rax	      5288	option.c	FUNCTION_18	CALL_2
0x39ab	      0xb800000000	                              mov eax, 0	      5288	option.c	FUNCTION_18	CALL_2
0x39b0	      0xe800000000	                          call 0x40039f5	      5288	option.c	FUNCTION_18	CALL_2
0x39b5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5290	option.c	FUNCTION_18
0x39b9	        0x4883c418	                           add rsp, 0x18	      5291	option.c	FUNCTION_18
0x39bd	              0x5b	                                 pop rbx	      5291	option.c	FUNCTION_18
0x39be	              0x5d	                                 pop rbp	      5291	option.c	FUNCTION_18
0x39bf	              0xc3	                                     ret	      5291	option.c	FUNCTION_18
find_viminfo_parameter	WHILE,0:SWITCH,0:CALL,1:FOR,1:ELSE,0:DO,0:IF,3:functions,0	38
0x3d9b	              0x55	                                push rbp	      5459	option.c	FUNCTION_24
0x3d9c	          0x4889e5	                            mov rbp, rsp	      5459	option.c	FUNCTION_24
0x3d9f	        0x4883ec20	                           sub rsp, 0x20	      5459	option.c	FUNCTION_24
0x3da3	          0x897dec	             mov dword [rbp - 0x14], edi	      5459	option.c	FUNCTION_24
0x3da6	    0x488b05000000	            mov rax, qword [0x04003ded] 	      5462	option.c	FUNCTION_24	FOR_1
0x3dad	        0x488945f8	                mov qword [rbp - 8], rax	      5462	option.c	FUNCTION_24	FOR_1
0x3db1	            0xeb45	                           jmp 0x4003e38	      5462	option.c	FUNCTION_24	FOR_1
0x3db3	        0x488b45f8	                mov rax, qword [rbp - 8]	      5464	option.c	FUNCTION_24	FOR_1	IF_1
0x3db7	           0xfb600	                   movzx eax, byte [rax]	      5464	option.c	FUNCTION_24	FOR_1	IF_1
0x3dba	           0xfb6c0	                           movzx eax, al	      5464	option.c	FUNCTION_24	FOR_1	IF_1
0x3dbd	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      5464	option.c	FUNCTION_24	FOR_1	IF_1
0x3dc0	            0x750a	                           jne 0x4003e0c	      5464	option.c	FUNCTION_24	FOR_1	IF_1
0x3dc2	        0x488b45f8	                mov rax, qword [rbp - 8]	      5465	option.c	FUNCTION_24	FOR_1	IF_1
0x3dc6	        0x4883c001	                              add rax, 1	      5465	option.c	FUNCTION_24	FOR_1	IF_1
0x3dca	            0xeb42	                           jmp 0x4003e4e	      5465	option.c	FUNCTION_24	FOR_1	IF_1
0x3dcc	        0x488b45f8	                mov rax, qword [rbp - 8]	      5466	option.c	FUNCTION_24	FOR_1	IF_2
0x3dd0	           0xfb600	                   movzx eax, byte [rax]	      5466	option.c	FUNCTION_24	FOR_1	IF_2
0x3dd3	            0x3c6e	                            cmp al, 0x6e	      5466	option.c	FUNCTION_24	FOR_1	IF_2
0x3dd5	            0x742e	                            je 0x4003e45	      5466	option.c	FUNCTION_24	FOR_1	IF_2
0x3dd7	        0x488b45f8	                mov rax, qword [rbp - 8]	      5468	option.c	FUNCTION_24	FOR_1	CALL_1
0x3ddb	      0xbe2c000000	                           mov esi, 0x2c	      5468	option.c	FUNCTION_24	FOR_1	CALL_1
0x3de0	          0x4889c7	                            mov rdi, rax	      5468	option.c	FUNCTION_24	FOR_1	CALL_1
0x3de3	      0xe800000000	                          call 0x4003e28	      5468	option.c	FUNCTION_24	FOR_1	CALL_1
0x3de8	        0x488945f8	                mov qword [rbp - 8], rax	      5468	option.c	FUNCTION_24	FOR_1	CALL_1
0x3dec	      0x48837df800	                  cmp qword [rbp - 8], 0	      5469	option.c	FUNCTION_24	FOR_1	IF_3
0x3df1	            0x7415	                            je 0x4003e48	      5469	option.c	FUNCTION_24	FOR_1	IF_3
0x3df3	      0x488345f801	                  add qword [rbp - 8], 1	      5462	option.c	FUNCTION_24	FOR_1
0x3df8	        0x488b45f8	                mov rax, qword [rbp - 8]	      5462	option.c	FUNCTION_24	FOR_1
0x3dfc	           0xfb600	                   movzx eax, byte [rax]	      5462	option.c	FUNCTION_24	FOR_1
0x3dff	            0x84c0	                             test al, al	      5462	option.c	FUNCTION_24	FOR_1
0x3e01	            0x75b0	                           jne 0x4003df3	      5462	option.c	FUNCTION_24	FOR_1
0x3e03	            0xeb04	                           jmp 0x4003e49	      5462	option.c	FUNCTION_24	FOR_1
0x3e05	              0x90	                                     nop	      5467	option.c	FUNCTION_24	FOR_1	IF_2
0x3e06	            0xeb01	                           jmp 0x4003e49	      5467	option.c	FUNCTION_24	FOR_1	IF_2
0x3e08	              0x90	                                     nop	      5470	option.c	FUNCTION_24	FOR_1	IF_3
0x3e09	      0xb800000000	                              mov eax, 0	      5472	option.c	FUNCTION_24
0x3e0e	              0xc9	                                   leave	      5473	option.c	FUNCTION_24
0x3e0f	              0xc3	                                     ret	      5473	option.c	FUNCTION_24
set_term_option_alloced	WHILE,0:SWITCH,0:CALL,0:FOR,1:ELSE,0:DO,0:IF,1:functions,0	36
0x456a	              0x55	                                push rbp	      5746	option.c	FUNCTION_33
0x456b	          0x4889e5	                            mov rbp, rsp	      5746	option.c	FUNCTION_33
0x456e	        0x48897de8	             mov qword [rbp - 0x18], rdi	      5746	option.c	FUNCTION_33
0x4572	    0xc745fc010000	                  mov dword [rbp - 4], 1	      5749	option.c	FUNCTION_33	FOR_1
0x4579	            0xeb49	                           jmp 0x4004604	      5749	option.c	FUNCTION_33	FOR_1
0x457b	          0x8b45fc	                mov eax, dword [rbp - 4]	      5750	option.c	FUNCTION_33	FOR_1	IF_1
0x457e	            0x4898	                                    cdqe	      5750	option.c	FUNCTION_33	FOR_1	IF_1
0x4580	        0x48c1e006	                              shl rax, 6	      5750	option.c	FUNCTION_33	FOR_1	IF_1
0x4584	    0x480500000000	                              add rax, 0	      5750	option.c	FUNCTION_33	FOR_1	IF_1
0x458a	          0x488b00	                    mov rax, qword [rax]	      5750	option.c	FUNCTION_33	FOR_1	IF_1
0x458d	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      5750	option.c	FUNCTION_33	FOR_1	IF_1
0x4591	            0x752d	                           jne 0x4004600	      5750	option.c	FUNCTION_33	FOR_1	IF_1
0x4593	          0x8b45fc	                mov eax, dword [rbp - 4]	      5752	option.c	FUNCTION_33	FOR_1	IF_1
0x4596	            0x4898	                                    cdqe	      5752	option.c	FUNCTION_33	FOR_1	IF_1
0x4598	        0x48c1e006	                              shl rax, 6	      5752	option.c	FUNCTION_33	FOR_1	IF_1
0x459c	    0x480500000000	                              add rax, 0	      5752	option.c	FUNCTION_33	FOR_1	IF_1
0x45a2	          0x488b00	                    mov rax, qword [rax]	      5752	option.c	FUNCTION_33	FOR_1	IF_1
0x45a5	        0x4883c808	                               or rax, 8	      5752	option.c	FUNCTION_33	FOR_1	IF_1
0x45a9	          0x4889c2	                            mov rdx, rax	      5752	option.c	FUNCTION_33	FOR_1	IF_1
0x45ac	          0x8b45fc	                mov eax, dword [rbp - 4]	      5752	option.c	FUNCTION_33	FOR_1	IF_1
0x45af	            0x4898	                                    cdqe	      5752	option.c	FUNCTION_33	FOR_1	IF_1
0x45b1	        0x48c1e006	                              shl rax, 6	      5752	option.c	FUNCTION_33	FOR_1	IF_1
0x45b5	    0x480500000000	                              add rax, 0	      5752	option.c	FUNCTION_33	FOR_1	IF_1
0x45bb	          0x488910	                    mov qword [rax], rdx	      5752	option.c	FUNCTION_33	FOR_1	IF_1
0x45be	            0xeb1c	                           jmp 0x400461c	      5753	option.c	FUNCTION_33	FOR_1	IF_1
0x45c0	        0x8345fc01	                  add dword [rbp - 4], 1	      5749	option.c	FUNCTION_33	FOR_1
0x45c4	          0x8b45fc	                mov eax, dword [rbp - 4]	      5749	option.c	FUNCTION_33	FOR_1
0x45c7	            0x4898	                                    cdqe	      5749	option.c	FUNCTION_33	FOR_1
0x45c9	        0x48c1e006	                              shl rax, 6	      5749	option.c	FUNCTION_33	FOR_1
0x45cd	    0x480500000000	                              add rax, 0	      5749	option.c	FUNCTION_33	FOR_1
0x45d3	          0x488b00	                    mov rax, qword [rax]	      5749	option.c	FUNCTION_33	FOR_1
0x45d6	          0x4885c0	                           test rax, rax	      5749	option.c	FUNCTION_33	FOR_1
0x45d9	            0x75a0	                           jne 0x40045bb	      5749	option.c	FUNCTION_33	FOR_1
0x45db	              0x90	                                     nop	      5755	option.c	FUNCTION_33
0x45dc	              0x5d	                                 pop rbp	      5756	option.c	FUNCTION_33
0x45dd	              0xc3	                                     ret	      5756	option.c	FUNCTION_33
has_format_option	WHILE,0:SWITCH,0:CALL,1:FOR,0:ELSE,0:DO,0:IF,1:functions,0	20
0x103b6	              0x55	                                push rbp	     12006	option.c	FUNCTION_98
0x103b7	          0x4889e5	                            mov rbp, rsp	     12006	option.c	FUNCTION_98
0x103ba	        0x4883ec10	                           sub rsp, 0x10	     12006	option.c	FUNCTION_98
0x103be	          0x897dfc	                mov dword [rbp - 4], edi	     12006	option.c	FUNCTION_98
0x103c1	    0x8b0500000000	            mov eax, dword [0x04010407] 	     12007	option.c	FUNCTION_98	IF_1
0x103c7	            0x85c0	                           test eax, eax	     12007	option.c	FUNCTION_98	IF_1
0x103c9	            0x7407	                            je 0x4010412	     12007	option.c	FUNCTION_98	IF_1
0x103cb	      0xb800000000	                              mov eax, 0	     12008	option.c	FUNCTION_98	IF_1
0x103d0	            0xeb24	                           jmp 0x4010436	     12008	option.c	FUNCTION_98	IF_1
0x103d2	    0x488b05000000	            mov rax, qword [0x04010419] 	     12009	option.c	FUNCTION_98	CALL_1
0x103d9	    0x488b80881400	          mov rax, qword [rax + 0x1488] 	     12009	option.c	FUNCTION_98	CALL_1
0x103e0	          0x8b55fc	                mov edx, dword [rbp - 4]	     12009	option.c	FUNCTION_98	CALL_1
0x103e3	            0x89d6	                            mov esi, edx	     12009	option.c	FUNCTION_98	CALL_1
0x103e5	          0x4889c7	                            mov rdi, rax	     12009	option.c	FUNCTION_98	CALL_1
0x103e8	      0xe800000000	                          call 0x401042d	     12009	option.c	FUNCTION_98	CALL_1
0x103ed	          0x4885c0	                           test rax, rax	     12009	option.c	FUNCTION_98	CALL_1
0x103f0	           0xf95c0	                                setne al	     12009	option.c	FUNCTION_98	CALL_1
0x103f3	           0xfb6c0	                           movzx eax, al	     12009	option.c	FUNCTION_98	CALL_1
0x103f6	              0xc9	                                   leave	     12010	option.c	FUNCTION_98
0x103f7	              0xc3	                                     ret	     12010	option.c	FUNCTION_98
fill_breakat_flags	WHILE,0:SWITCH,0:CALL,0:FOR,2:ELSE,0:DO,0:IF,1:functions,0	29
0x10a71	              0x55	                                push rbp	     12273	option.c	FUNCTION_106
0x10a72	          0x4889e5	                            mov rbp, rsp	     12273	option.c	FUNCTION_106
0x10a75	    0xc745f4000000	                mov dword [rbp - 0xc], 0	     12277	option.c	FUNCTION_106	FOR_1
0x10a7c	            0xeb10	                           jmp 0x4010ace	     12277	option.c	FUNCTION_106	FOR_1
0x10a7e	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     12278	option.c	FUNCTION_106	FOR_1
0x10a81	            0x4898	                                    cdqe	     12278	option.c	FUNCTION_106	FOR_1
0x10a83	    0xc68000000000	                       mov byte [rax], 0	     12278	option.c	FUNCTION_106	FOR_1
0x10a8a	        0x8345f401	                add dword [rbp - 0xc], 1	     12277	option.c	FUNCTION_106	FOR_1
0x10a8e	    0x817df4ff0000	            cmp dword [rbp - 0xc], 0xff 	     12277	option.c	FUNCTION_106	FOR_1
0x10a95	            0x7ee7	                           jle 0x4010abe	     12277	option.c	FUNCTION_106	FOR_1
0x10a97	    0x488b05000000	            mov rax, qword [0x04010ade] 	     12280	option.c	FUNCTION_106	IF_1
0x10a9e	          0x4885c0	                           test rax, rax	     12280	option.c	FUNCTION_106	IF_1
0x10aa1	            0x7430	                            je 0x4010b13	     12280	option.c	FUNCTION_106	IF_1
0x10aa3	    0x488b05000000	            mov rax, qword [0x04010aea] 	     12281	option.c	FUNCTION_106	IF_1	FOR_2
0x10aaa	        0x488945f8	                mov qword [rbp - 8], rax	     12281	option.c	FUNCTION_106	IF_1	FOR_2
0x10aae	            0xeb18	                           jmp 0x4010b08	     12281	option.c	FUNCTION_106	IF_1	FOR_2
0x10ab0	        0x488b45f8	                mov rax, qword [rbp - 8]	     12282	option.c	FUNCTION_106	IF_1	FOR_2
0x10ab4	           0xfb600	                   movzx eax, byte [rax]	     12282	option.c	FUNCTION_106	IF_1	FOR_2
0x10ab7	           0xfb6c0	                           movzx eax, al	     12282	option.c	FUNCTION_106	IF_1	FOR_2
0x10aba	            0x4898	                                    cdqe	     12282	option.c	FUNCTION_106	IF_1	FOR_2
0x10abc	    0xc68000000000	                       mov byte [rax], 1	     12282	option.c	FUNCTION_106	IF_1	FOR_2
0x10ac3	      0x488345f801	                  add qword [rbp - 8], 1	     12281	option.c	FUNCTION_106	IF_1	FOR_2
0x10ac8	        0x488b45f8	                mov rax, qword [rbp - 8]	     12281	option.c	FUNCTION_106	IF_1	FOR_2
0x10acc	           0xfb600	                   movzx eax, byte [rax]	     12281	option.c	FUNCTION_106	IF_1	FOR_2
0x10acf	            0x84c0	                             test al, al	     12281	option.c	FUNCTION_106	IF_1	FOR_2
0x10ad1	            0x75dd	                           jne 0x4010af0	     12281	option.c	FUNCTION_106	IF_1	FOR_2
0x10ad3	              0x90	                                     nop	     12283	option.c	FUNCTION_106
0x10ad4	              0x5d	                                 pop rbp	     12283	option.c	FUNCTION_106
0x10ad5	              0xc3	                                     ret	     12283	option.c	FUNCTION_106
set_string_option_global	WHILE,0:SWITCH,0:CALL,3:FOR,0:ELSE,1:DO,0:IF,2:functions,0	49
0x4913	              0x55	                                push rbp	      5899	option.c	FUNCTION_38
0x4914	          0x4889e5	                            mov rbp, rsp	      5899	option.c	FUNCTION_38
0x4917	        0x4883ec20	                           sub rsp, 0x20	      5899	option.c	FUNCTION_38
0x491b	          0x897dec	             mov dword [rbp - 0x14], edi	      5899	option.c	FUNCTION_38
0x491e	        0x488975e0	             mov qword [rbp - 0x20], rsi	      5899	option.c	FUNCTION_38
0x4922	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      5903	option.c	FUNCTION_38	IF_1
0x4925	            0x4898	                                    cdqe	      5903	option.c	FUNCTION_38	IF_1
0x4927	        0x48c1e006	                              shl rax, 6	      5903	option.c	FUNCTION_38	IF_1
0x492b	    0x480500000000	                              add rax, 0	      5903	option.c	FUNCTION_38	IF_1
0x4931	          0x488b00	                    mov rax, qword [rax]	      5903	option.c	FUNCTION_38	IF_1
0x4934	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      5903	option.c	FUNCTION_38	IF_1
0x4938	            0x7510	                           jne 0x400498a	      5903	option.c	FUNCTION_38	IF_1
0x493a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5904	option.c	FUNCTION_38	CALL_1
0x493e	    0x4805b8010000	                          add rax, 0x1b8	      5904	option.c	FUNCTION_38	CALL_1
0x4944	        0x488945f0	             mov qword [rbp - 0x10], rax	      5904	option.c	FUNCTION_38	CALL_1
0x4948	            0xeb16	                           jmp 0x40049a0	      5904	option.c	FUNCTION_38	CALL_1
0x494a	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      5906	option.c	FUNCTION_38	ELSE_1
0x494d	            0x4898	                                    cdqe	      5906	option.c	FUNCTION_38	ELSE_1
0x494f	        0x48c1e006	                              shl rax, 6	      5906	option.c	FUNCTION_38	ELSE_1
0x4953	    0x480500000000	                              add rax, 0	      5906	option.c	FUNCTION_38	ELSE_1
0x4959	          0x488b00	                    mov rax, qword [rax]	      5906	option.c	FUNCTION_38	ELSE_1
0x495c	        0x488945f0	             mov qword [rbp - 0x10], rax	      5906	option.c	FUNCTION_38	ELSE_1
0x4960	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      5907	option.c	FUNCTION_38	IF_2
0x4963	            0x4898	                                    cdqe	      5907	option.c	FUNCTION_38	IF_2
0x4965	        0x48c1e006	                              shl rax, 6	      5907	option.c	FUNCTION_38	IF_2
0x4969	    0x480500000000	                              add rax, 0	      5907	option.c	FUNCTION_38	IF_2
0x496f	            0x8b00	                    mov eax, dword [rax]	      5907	option.c	FUNCTION_38	IF_2
0x4971	            0x85c0	                           test eax, eax	      5907	option.c	FUNCTION_38	IF_2
0x4973	            0x743e	                            je 0x40049f3	      5907	option.c	FUNCTION_38	IF_2
0x4975	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5908	option.c	FUNCTION_38	IF_2
0x4979	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      5908	option.c	FUNCTION_38	IF_2
0x497d	            0x7434	                            je 0x40049f3	      5908	option.c	FUNCTION_38	IF_2
0x497f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5909	option.c	FUNCTION_38	IF_2	CALL_2
0x4983	          0x488b00	                    mov rax, qword [rax]	      5909	option.c	FUNCTION_38	IF_2	CALL_2
0x4986	          0x4889c7	                            mov rdi, rax	      5909	option.c	FUNCTION_38	IF_2	CALL_2
0x4989	      0xe800000000	                          call 0x40049ce	      5909	option.c	FUNCTION_38	IF_2	CALL_2
0x498e	        0x488945f8	                mov qword [rbp - 8], rax	      5909	option.c	FUNCTION_38	IF_2	CALL_2
0x4992	      0x48837df800	                  cmp qword [rbp - 8], 0	      5909	option.c	FUNCTION_38	IF_2	CALL_2
0x4997	            0x741a	                            je 0x40049f3	      5909	option.c	FUNCTION_38	IF_2	CALL_2
0x4999	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5911	option.c	FUNCTION_38	IF_2	CALL_3
0x499d	          0x488b00	                    mov rax, qword [rax]	      5911	option.c	FUNCTION_38	IF_2	CALL_3
0x49a0	          0x4889c7	                            mov rdi, rax	      5911	option.c	FUNCTION_38	IF_2	CALL_3
0x49a3	      0xe800000000	                          call 0x40049e8	      5911	option.c	FUNCTION_38	IF_2	CALL_3
0x49a8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5912	option.c	FUNCTION_38	IF_2
0x49ac	        0x488b55f8	                mov rdx, qword [rbp - 8]	      5912	option.c	FUNCTION_38	IF_2
0x49b0	          0x488910	                    mov qword [rax], rdx	      5912	option.c	FUNCTION_38	IF_2
0x49b3	              0x90	                                     nop	      5914	option.c	FUNCTION_38
0x49b4	              0xc9	                                   leave	      5914	option.c	FUNCTION_38
0x49b5	              0xc3	                                     ret	      5914	option.c	FUNCTION_38
get_option_value	WHILE,0:SWITCH,0:CALL,11:FOR,0:ELSE,4:DO,0:IF,12:functions,0	152
0xaf7f	              0x55	                                push rbp	      9357	option.c	FUNCTION_54
0xaf80	          0x4889e5	                            mov rbp, rsp	      9357	option.c	FUNCTION_54
0xaf83	        0x4883ec50	                           sub rsp, 0x50	      9357	option.c	FUNCTION_54
0xaf87	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      9357	option.c	FUNCTION_54
0xaf8b	        0x488975c0	             mov qword [rbp - 0x40], rsi	      9357	option.c	FUNCTION_54
0xaf8f	        0x488955b8	             mov qword [rbp - 0x48], rdx	      9357	option.c	FUNCTION_54
0xaf93	          0x894db4	             mov dword [rbp - 0x4c], ecx	      9357	option.c	FUNCTION_54
0xaf96	    0x64488b042528	                mov rax, qword fs:[0x28]	      9357	option.c	FUNCTION_54
0xaf9f	        0x488945f8	                mov qword [rbp - 8], rax	      9357	option.c	FUNCTION_54
0xafa3	            0x31c0	                            xor eax, eax	      9357	option.c	FUNCTION_54
0xafa5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9361	option.c	FUNCTION_54	CALL_1
0xafa9	          0x4889c7	                            mov rdi, rax	      9361	option.c	FUNCTION_54	CALL_1
0xafac	      0xe8d5fdffff	                     call sym.findoption	      9361	option.c	FUNCTION_54	CALL_1
0xafb1	          0x8945d8	             mov dword [rbp - 0x28], eax	      9361	option.c	FUNCTION_54	CALL_1
0xafb4	        0x837dd800	               cmp dword [rbp - 0x28], 0	      9362	option.c	FUNCTION_54	IF_1
0xafb8	     0xf89b6000000	                           jns 0x400b0b4	      9362	option.c	FUNCTION_54	IF_1
0xafbe	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9366	option.c	FUNCTION_54	IF_1	IF_2	CALL_2
0xafc2	          0x4889c7	                            mov rdi, rax	      9366	option.c	FUNCTION_54	IF_1	IF_2	CALL_2
0xafc5	      0xe800000000	                          call 0x400b00a	      9366	option.c	FUNCTION_54	IF_1	IF_2	CALL_2
0xafca	        0x4883f804	                              cmp rax, 4	      9366	option.c	FUNCTION_54	IF_1	IF_2	CALL_2
0xafce	     0xf8596000000	                           jne 0x400b0aa	      9366	option.c	FUNCTION_54	IF_1	IF_2	CALL_2
0xafd4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9366	option.c	FUNCTION_54	IF_1	IF_2	CALL_2
0xafd8	           0xfb600	                   movzx eax, byte [rax]	      9366	option.c	FUNCTION_54	IF_1	IF_2	CALL_2
0xafdb	            0x3c74	                            cmp al, 0x74	      9366	option.c	FUNCTION_54	IF_1	IF_2	CALL_2
0xafdd	     0xf8587000000	                           jne 0x400b0aa	      9366	option.c	FUNCTION_54	IF_1	IF_2	CALL_2
0xafe3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9366	option.c	FUNCTION_54	IF_1	IF_2	CALL_2
0xafe7	        0x4883c001	                              add rax, 1	      9366	option.c	FUNCTION_54	IF_1	IF_2	CALL_2
0xafeb	           0xfb600	                   movzx eax, byte [rax]	      9366	option.c	FUNCTION_54	IF_1	IF_2	CALL_2
0xafee	            0x3c5f	                            cmp al, 0x5f	      9366	option.c	FUNCTION_54	IF_1	IF_2	CALL_2
0xaff0	            0x7578	                           jne 0x400b0aa	      9366	option.c	FUNCTION_54	IF_1	IF_2	CALL_2
0xaff2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9367	option.c	FUNCTION_54	IF_1	IF_2	CALL_3
0xaff6	          0x4889c7	                            mov rdi, rax	      9367	option.c	FUNCTION_54	IF_1	IF_2	CALL_3
0xaff9	      0xe83a050000	                call sym.find_key_option	      9367	option.c	FUNCTION_54	IF_1	IF_2	CALL_3
0xaffe	          0x8945dc	             mov dword [rbp - 0x24], eax	      9367	option.c	FUNCTION_54	IF_1	IF_2	CALL_3
0xb001	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      9367	option.c	FUNCTION_54	IF_1	IF_2	CALL_3
0xb005	            0x7463	                            je 0x400b0aa	      9367	option.c	FUNCTION_54	IF_1	IF_2	CALL_3
0xb007	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      9372	option.c	FUNCTION_54	IF_1	IF_2	IF_3
0xb00b	            0x7915	                           jns 0x400b062	      9372	option.c	FUNCTION_54	IF_1	IF_2	IF_3
0xb00d	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9374	option.c	FUNCTION_54	IF_1	IF_2	IF_3	CALL_4
0xb010	            0xf7d8	                                 neg eax	      9374	option.c	FUNCTION_54	IF_1	IF_2	IF_3	CALL_4
0xb012	          0x8845f0	               mov byte [rbp - 0x10], al	      9374	option.c	FUNCTION_54	IF_1	IF_2	IF_3	CALL_4
0xb015	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9375	option.c	FUNCTION_54	IF_1	IF_2	IF_3	CALL_5
0xb018	            0xf7d8	                                 neg eax	      9375	option.c	FUNCTION_54	IF_1	IF_2	IF_3	CALL_5
0xb01a	          0xc1e808	                              shr eax, 8	      9375	option.c	FUNCTION_54	IF_1	IF_2	IF_3	CALL_5
0xb01d	          0x8845f1	                mov byte [rbp - 0xf], al	      9375	option.c	FUNCTION_54	IF_1	IF_2	IF_3	CALL_5
0xb020	            0xeb0a	                           jmp 0x400b06c	      9375	option.c	FUNCTION_54	IF_1	IF_2	IF_3	CALL_5
0xb022	        0xc645f0f2	            mov byte [rbp - 0x10], 0xf2 	      9379	option.c	FUNCTION_54	IF_1	IF_2	ELSE_1
0xb026	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9380	option.c	FUNCTION_54	IF_1	IF_2	ELSE_1
0xb029	          0x8845f1	                mov byte [rbp - 0xf], al	      9380	option.c	FUNCTION_54	IF_1	IF_2	ELSE_1
0xb02c	        0x488d45f0	                   lea rax, [rbp - 0x10]	      9382	option.c	FUNCTION_54	IF_1	IF_2	CALL_6
0xb030	          0x4889c7	                            mov rdi, rax	      9382	option.c	FUNCTION_54	IF_1	IF_2	CALL_6
0xb033	      0xe800000000	                          call 0x400b078	      9382	option.c	FUNCTION_54	IF_1	IF_2	CALL_6
0xb038	        0x488945e0	             mov qword [rbp - 0x20], rax	      9382	option.c	FUNCTION_54	IF_1	IF_2	CALL_6
0xb03c	      0x48837de000	               cmp qword [rbp - 0x20], 0	      9383	option.c	FUNCTION_54	IF_1	IF_2	IF_4
0xb041	            0x7427	                            je 0x400b0aa	      9383	option.c	FUNCTION_54	IF_1	IF_2	IF_4
0xb043	      0x48837db800	               cmp qword [rbp - 0x48], 0	      9385	option.c	FUNCTION_54	IF_1	IF_2	IF_4	IF_5
0xb048	            0x7416	                            je 0x400b0a0	      9385	option.c	FUNCTION_54	IF_1	IF_2	IF_4	IF_5
0xb04a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9386	option.c	FUNCTION_54	IF_1	IF_2	IF_4	CALL_7
0xb04e	          0x4889c7	                            mov rdi, rax	      9386	option.c	FUNCTION_54	IF_1	IF_2	IF_4	CALL_7
0xb051	      0xe800000000	                          call 0x400b096	      9386	option.c	FUNCTION_54	IF_1	IF_2	IF_4	CALL_7
0xb056	          0x4889c2	                            mov rdx, rax	      9386	option.c	FUNCTION_54	IF_1	IF_2	IF_4	CALL_7
0xb059	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      9386	option.c	FUNCTION_54	IF_1	IF_2	IF_4	CALL_7
0xb05d	          0x488910	                    mov qword [rax], rdx	      9386	option.c	FUNCTION_54	IF_1	IF_2	IF_4	CALL_7
0xb060	      0xb800000000	                              mov eax, 0	      9387	option.c	FUNCTION_54	IF_1	IF_2	IF_4
0xb065	      0xe925010000	                           jmp 0x400b1cf	      9387	option.c	FUNCTION_54	IF_1	IF_2	IF_4
0xb06a	      0xb8fdffffff	                     mov eax, 0xfffffffd	      9390	option.c	FUNCTION_54	IF_1
0xb06f	      0xe91b010000	                           jmp 0x400b1cf	      9390	option.c	FUNCTION_54	IF_1
0xb074	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      9393	option.c	FUNCTION_54	CALL_8
0xb077	            0x4898	                                    cdqe	      9393	option.c	FUNCTION_54	CALL_8
0xb079	        0x48c1e006	                              shl rax, 6	      9393	option.c	FUNCTION_54	CALL_8
0xb07d	    0x488d90000000	                          lea rdx, [rax]	      9393	option.c	FUNCTION_54	CALL_8
0xb084	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      9393	option.c	FUNCTION_54	CALL_8
0xb087	            0x89c6	                            mov esi, eax	      9393	option.c	FUNCTION_54	CALL_8
0xb089	          0x4889d7	                            mov rdi, rdx	      9393	option.c	FUNCTION_54	CALL_8
0xb08c	      0xe878190000	                 call sym.get_varp_scope	      9393	option.c	FUNCTION_54	CALL_8
0xb091	        0x488945e8	             mov qword [rbp - 0x18], rax	      9393	option.c	FUNCTION_54	CALL_8
0xb095	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      9395	option.c	FUNCTION_54	IF_6
0xb098	            0x4898	                                    cdqe	      9395	option.c	FUNCTION_54	IF_6
0xb09a	        0x48c1e006	                              shl rax, 6	      9395	option.c	FUNCTION_54	IF_6
0xb09e	    0x480500000000	                              add rax, 0	      9395	option.c	FUNCTION_54	IF_6
0xb0a4	          0x488b00	                    mov rax, qword [rax]	      9395	option.c	FUNCTION_54	IF_6
0xb0a7	          0x83e004	                              and eax, 4	      9395	option.c	FUNCTION_54	IF_6
0xb0aa	          0x4885c0	                           test rax, rax	      9395	option.c	FUNCTION_54	IF_6
0xb0ad	            0x746f	                            je 0x400b15e	      9395	option.c	FUNCTION_54	IF_6
0xb0af	      0x48837de800	               cmp qword [rbp - 0x18], 0	      9397	option.c	FUNCTION_54	IF_6	IF_7
0xb0b4	            0x750a	                           jne 0x400b100	      9397	option.c	FUNCTION_54	IF_6	IF_7
0xb0b6	      0xb8feffffff	                     mov eax, 0xfffffffe	      9398	option.c	FUNCTION_54	IF_6	IF_7
0xb0bb	      0xe9cf000000	                           jmp 0x400b1cf	      9398	option.c	FUNCTION_54	IF_6	IF_7
0xb0c0	      0x48837db800	               cmp qword [rbp - 0x48], 0	      9399	option.c	FUNCTION_54	IF_6	IF_8
0xb0c5	            0x7450	                            je 0x400b157	      9399	option.c	FUNCTION_54	IF_6	IF_8
0xb0c7	    0x488b05000000	            mov rax, qword [0x0400b10e] 	      9403	option.c	FUNCTION_54	IF_6	IF_8	IF_9
0xb0ce	    0x4805f8140000	                         add rax, 0x14f8	      9403	option.c	FUNCTION_54	IF_6	IF_8	IF_9
0xb0d4	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      9403	option.c	FUNCTION_54	IF_6	IF_8	IF_9
0xb0d8	            0x7524	                           jne 0x400b13e	      9403	option.c	FUNCTION_54	IF_6	IF_8	IF_9
0xb0da	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9404	option.c	FUNCTION_54	IF_6	IF_8	IF_9
0xb0de	          0x488b00	                    mov rax, qword [rax]	      9404	option.c	FUNCTION_54	IF_6	IF_8	IF_9
0xb0e1	           0xfb600	                   movzx eax, byte [rax]	      9404	option.c	FUNCTION_54	IF_6	IF_8	IF_9
0xb0e4	            0x84c0	                             test al, al	      9404	option.c	FUNCTION_54	IF_6	IF_8	IF_9
0xb0e6	            0x7416	                            je 0x400b13e	      9404	option.c	FUNCTION_54	IF_6	IF_8	IF_9
0xb0e8	      0xbf00000000	                              mov edi, 0	      9405	option.c	FUNCTION_54	IF_6	IF_8	CALL_9
0xb0ed	      0xe800000000	                          call 0x400b132	      9405	option.c	FUNCTION_54	IF_6	IF_8	CALL_9
0xb0f2	          0x4889c2	                            mov rdx, rax	      9405	option.c	FUNCTION_54	IF_6	IF_8	CALL_9
0xb0f5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      9405	option.c	FUNCTION_54	IF_6	IF_8	CALL_9
0xb0f9	          0x488910	                    mov qword [rax], rdx	      9405	option.c	FUNCTION_54	IF_6	IF_8	CALL_9
0xb0fc	            0xeb19	                           jmp 0x400b157	      9405	option.c	FUNCTION_54	IF_6	IF_8	CALL_9
0xb0fe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9408	option.c	FUNCTION_54	IF_6	IF_8	CALL_10
0xb102	          0x488b00	                    mov rax, qword [rax]	      9408	option.c	FUNCTION_54	IF_6	IF_8	CALL_10
0xb105	          0x4889c7	                            mov rdi, rax	      9408	option.c	FUNCTION_54	IF_6	IF_8	CALL_10
0xb108	      0xe800000000	                          call 0x400b14d	      9408	option.c	FUNCTION_54	IF_6	IF_8	CALL_10
0xb10d	          0x4889c2	                            mov rdx, rax	      9408	option.c	FUNCTION_54	IF_6	IF_8	CALL_10
0xb110	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      9408	option.c	FUNCTION_54	IF_6	IF_8	CALL_10
0xb114	          0x488910	                    mov qword [rax], rdx	      9408	option.c	FUNCTION_54	IF_6	IF_8	CALL_10
0xb117	      0xb800000000	                              mov eax, 0	      9410	option.c	FUNCTION_54	IF_6
0xb11c	            0xeb71	                           jmp 0x400b1cf	      9410	option.c	FUNCTION_54	IF_6
0xb11e	      0x48837de800	               cmp qword [rbp - 0x18], 0	      9413	option.c	FUNCTION_54	IF_10
0xb123	            0x7507	                           jne 0x400b16c	      9413	option.c	FUNCTION_54	IF_10
0xb125	      0xb8ffffffff	                     mov eax, 0xffffffff	      9414	option.c	FUNCTION_54	IF_10
0xb12a	            0xeb63	                           jmp 0x400b1cf	      9414	option.c	FUNCTION_54	IF_10
0xb12c	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      9415	option.c	FUNCTION_54	IF_11
0xb12f	            0x4898	                                    cdqe	      9415	option.c	FUNCTION_54	IF_11
0xb131	        0x48c1e006	                              shl rax, 6	      9415	option.c	FUNCTION_54	IF_11
0xb135	    0x480500000000	                              add rax, 0	      9415	option.c	FUNCTION_54	IF_11
0xb13b	          0x488b00	                    mov rax, qword [rax]	      9415	option.c	FUNCTION_54	IF_11
0xb13e	          0x83e002	                              and eax, 2	      9415	option.c	FUNCTION_54	IF_11
0xb141	          0x4885c0	                           test rax, rax	      9415	option.c	FUNCTION_54	IF_11
0xb144	            0x7410	                            je 0x400b196	      9415	option.c	FUNCTION_54	IF_11
0xb146	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9416	option.c	FUNCTION_54	IF_11
0xb14a	          0x488b10	                    mov rdx, qword [rax]	      9416	option.c	FUNCTION_54	IF_11
0xb14d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      9416	option.c	FUNCTION_54	IF_11
0xb151	          0x488910	                    mov qword [rax], rdx	      9416	option.c	FUNCTION_54	IF_11
0xb154	            0xeb34	                           jmp 0x400b1ca	      9416	option.c	FUNCTION_54	IF_11
0xb156	    0x488b05000000	            mov rax, qword [0x0400b19d] 	      9421	option.c	FUNCTION_54	ELSE_3	IF_12
0xb15d	    0x4805c8000000	                           add rax, 0xc8	      9421	option.c	FUNCTION_54	ELSE_3	IF_12
0xb163	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      9421	option.c	FUNCTION_54	ELSE_3	IF_12
0xb167	            0x7511	                           jne 0x400b1ba	      9421	option.c	FUNCTION_54	ELSE_3	IF_12
0xb169	      0xe800000000	                          call 0x400b1ae	      9422	option.c	FUNCTION_54	ELSE_3	CALL_11
0xb16e	          0x4863d0	                         movsxd rdx, eax	      9422	option.c	FUNCTION_54	ELSE_3	CALL_11
0xb171	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      9422	option.c	FUNCTION_54	ELSE_3	CALL_11
0xb175	          0x488910	                    mov qword [rax], rdx	      9422	option.c	FUNCTION_54	ELSE_3	CALL_11
0xb178	            0xeb10	                           jmp 0x400b1ca	      9422	option.c	FUNCTION_54	ELSE_3	CALL_11
0xb17a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9424	option.c	FUNCTION_54	ELSE_3	ELSE_4
0xb17e	            0x8b00	                    mov eax, dword [rax]	      9424	option.c	FUNCTION_54	ELSE_3	ELSE_4
0xb180	          0x4863d0	                         movsxd rdx, eax	      9424	option.c	FUNCTION_54	ELSE_3	ELSE_4
0xb183	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      9424	option.c	FUNCTION_54	ELSE_3	ELSE_4
0xb187	          0x488910	                    mov qword [rax], rdx	      9424	option.c	FUNCTION_54	ELSE_3	ELSE_4
0xb18a	      0xb801000000	                              mov eax, 1	      9426	option.c	FUNCTION_54
0xb18f	        0x488b4df8	                mov rcx, qword [rbp - 8]	      9427	option.c	FUNCTION_54
0xb193	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      9427	option.c	FUNCTION_54
0xb19c	            0x7405	                            je 0x400b1e3	      9427	option.c	FUNCTION_54
0xb19e	      0xe800000000	                          call 0x400b1e3	      9427	option.c	FUNCTION_54
0xb1a3	              0xc9	                                   leave	      9427	option.c	FUNCTION_54
0xb1a4	              0xc3	                                     ret	      9427	option.c	FUNCTION_54
check_buf_options	WHILE,0:SWITCH,0:CALL,50:FOR,0:ELSE,0:DO,0:IF,0:functions,0	206
0x4151	              0x55	                                push rbp	      5611	option.c	FUNCTION_29
0x4152	          0x4889e5	                            mov rbp, rsp	      5611	option.c	FUNCTION_29
0x4155	        0x4883ec10	                           sub rsp, 0x10	      5611	option.c	FUNCTION_29
0x4159	        0x48897df8	                mov qword [rbp - 8], rdi	      5611	option.c	FUNCTION_29
0x415d	        0x488b45f8	                mov rax, qword [rbp - 8]	      5612	option.c	FUNCTION_29	CALL_1
0x4161	    0x4805f8130000	                         add rax, 0x13f8	      5612	option.c	FUNCTION_29	CALL_1
0x4167	          0x4889c7	                            mov rdi, rax	      5612	option.c	FUNCTION_29	CALL_1
0x416a	      0xe8d6030000	            call sym.check_string_option	      5612	option.c	FUNCTION_29	CALL_1
0x416f	        0x488b45f8	                mov rax, qword [rbp - 8]	      5613	option.c	FUNCTION_29	CALL_2
0x4173	    0x480500140000	                         add rax, 0x1400	      5613	option.c	FUNCTION_29	CALL_2
0x4179	          0x4889c7	                            mov rdi, rax	      5613	option.c	FUNCTION_29	CALL_2
0x417c	      0xe8c4030000	            call sym.check_string_option	      5613	option.c	FUNCTION_29	CALL_2
0x4181	        0x488b45f8	                mov rax, qword [rbp - 8]	      5615	option.c	FUNCTION_29	CALL_3
0x4185	    0x480570140000	                         add rax, 0x1470	      5615	option.c	FUNCTION_29	CALL_3
0x418b	          0x4889c7	                            mov rdi, rax	      5615	option.c	FUNCTION_29	CALL_3
0x418e	      0xe8b2030000	            call sym.check_string_option	      5615	option.c	FUNCTION_29	CALL_3
0x4193	        0x488b45f8	                mov rax, qword [rbp - 8]	      5617	option.c	FUNCTION_29	CALL_4
0x4197	    0x480578140000	                         add rax, 0x1478	      5617	option.c	FUNCTION_29	CALL_4
0x419d	          0x4889c7	                            mov rdi, rax	      5617	option.c	FUNCTION_29	CALL_4
0x41a0	      0xe8a0030000	            call sym.check_string_option	      5617	option.c	FUNCTION_29	CALL_4
0x41a5	        0x488b45f8	                mov rax, qword [rbp - 8]	      5619	option.c	FUNCTION_29	CALL_5
0x41a9	    0x4805a8140000	                         add rax, 0x14a8	      5619	option.c	FUNCTION_29	CALL_5
0x41af	          0x4889c7	                            mov rdi, rax	      5619	option.c	FUNCTION_29	CALL_5
0x41b2	      0xe88e030000	            call sym.check_string_option	      5619	option.c	FUNCTION_29	CALL_5
0x41b7	        0x488b45f8	                mov rax, qword [rbp - 8]	      5620	option.c	FUNCTION_29	CALL_6
0x41bb	    0x4805b0140000	                         add rax, 0x14b0	      5620	option.c	FUNCTION_29	CALL_6
0x41c1	          0x4889c7	                            mov rdi, rax	      5620	option.c	FUNCTION_29	CALL_6
0x41c4	      0xe87c030000	            call sym.check_string_option	      5620	option.c	FUNCTION_29	CALL_6
0x41c9	        0x488b45f8	                mov rax, qword [rbp - 8]	      5622	option.c	FUNCTION_29	CALL_7
0x41cd	    0x4805b8140000	                         add rax, 0x14b8	      5622	option.c	FUNCTION_29	CALL_7
0x41d3	          0x4889c7	                            mov rdi, rax	      5622	option.c	FUNCTION_29	CALL_7
0x41d6	      0xe86a030000	            call sym.check_string_option	      5622	option.c	FUNCTION_29	CALL_7
0x41db	        0x488b45f8	                mov rax, qword [rbp - 8]	      5626	option.c	FUNCTION_29	CALL_8
0x41df	    0x4805c8140000	                         add rax, 0x14c8	      5626	option.c	FUNCTION_29	CALL_8
0x41e5	          0x4889c7	                            mov rdi, rax	      5626	option.c	FUNCTION_29	CALL_8
0x41e8	      0xe858030000	            call sym.check_string_option	      5626	option.c	FUNCTION_29	CALL_8
0x41ed	        0x488b45f8	                mov rax, qword [rbp - 8]	      5627	option.c	FUNCTION_29	CALL_9
0x41f1	    0x4805d8140000	                         add rax, 0x14d8	      5627	option.c	FUNCTION_29	CALL_9
0x41f7	          0x4889c7	                            mov rdi, rax	      5627	option.c	FUNCTION_29	CALL_9
0x41fa	      0xe846030000	            call sym.check_string_option	      5627	option.c	FUNCTION_29	CALL_9
0x41ff	        0x488b45f8	                mov rax, qword [rbp - 8]	      5630	option.c	FUNCTION_29	CALL_10
0x4203	    0x480518170000	                         add rax, 0x1718	      5630	option.c	FUNCTION_29	CALL_10
0x4209	          0x4889c7	                            mov rdi, rax	      5630	option.c	FUNCTION_29	CALL_10
0x420c	      0xe834030000	            call sym.check_string_option	      5630	option.c	FUNCTION_29	CALL_10
0x4211	        0x488b45f8	                mov rax, qword [rbp - 8]	      5633	option.c	FUNCTION_29	CALL_11
0x4215	    0x480528170000	                         add rax, 0x1728	      5633	option.c	FUNCTION_29	CALL_11
0x421b	          0x4889c7	                            mov rdi, rax	      5633	option.c	FUNCTION_29	CALL_11
0x421e	      0xe822030000	            call sym.check_string_option	      5633	option.c	FUNCTION_29	CALL_11
0x4223	        0x488b45f8	                mov rax, qword [rbp - 8]	      5635	option.c	FUNCTION_29	CALL_12
0x4227	    0x4805e0140000	                         add rax, 0x14e0	      5635	option.c	FUNCTION_29	CALL_12
0x422d	          0x4889c7	                            mov rdi, rax	      5635	option.c	FUNCTION_29	CALL_12
0x4230	      0xe810030000	            call sym.check_string_option	      5635	option.c	FUNCTION_29	CALL_12
0x4235	        0x488b45f8	                mov rax, qword [rbp - 8]	      5637	option.c	FUNCTION_29	CALL_13
0x4239	    0x4805e8140000	                         add rax, 0x14e8	      5637	option.c	FUNCTION_29	CALL_13
0x423f	          0x4889c7	                            mov rdi, rax	      5637	option.c	FUNCTION_29	CALL_13
0x4242	      0xe8fe020000	            call sym.check_string_option	      5637	option.c	FUNCTION_29	CALL_13
0x4247	        0x488b45f8	                mov rax, qword [rbp - 8]	      5640	option.c	FUNCTION_29	CALL_14
0x424b	    0x4805f8140000	                         add rax, 0x14f8	      5640	option.c	FUNCTION_29	CALL_14
0x4251	          0x4889c7	                            mov rdi, rax	      5640	option.c	FUNCTION_29	CALL_14
0x4254	      0xe8ec020000	            call sym.check_string_option	      5640	option.c	FUNCTION_29	CALL_14
0x4259	        0x488b45f8	                mov rax, qword [rbp - 8]	      5642	option.c	FUNCTION_29	CALL_15
0x425d	    0x480500150000	                         add rax, 0x1500	      5642	option.c	FUNCTION_29	CALL_15
0x4263	          0x4889c7	                            mov rdi, rax	      5642	option.c	FUNCTION_29	CALL_15
0x4266	      0xe8da020000	            call sym.check_string_option	      5642	option.c	FUNCTION_29	CALL_15
0x426b	        0x488b45f8	                mov rax, qword [rbp - 8]	      5643	option.c	FUNCTION_29	CALL_16
0x426f	    0x480518150000	                         add rax, 0x1518	      5643	option.c	FUNCTION_29	CALL_16
0x4275	          0x4889c7	                            mov rdi, rax	      5643	option.c	FUNCTION_29	CALL_16
0x4278	      0xe8c8020000	            call sym.check_string_option	      5643	option.c	FUNCTION_29	CALL_16
0x427d	        0x488b45f8	                mov rax, qword [rbp - 8]	      5644	option.c	FUNCTION_29	CALL_17
0x4281	    0x480588140000	                         add rax, 0x1488	      5644	option.c	FUNCTION_29	CALL_17
0x4287	          0x4889c7	                            mov rdi, rax	      5644	option.c	FUNCTION_29	CALL_17
0x428a	      0xe8b6020000	            call sym.check_string_option	      5644	option.c	FUNCTION_29	CALL_17
0x428f	        0x488b45f8	                mov rax, qword [rbp - 8]	      5645	option.c	FUNCTION_29	CALL_18
0x4293	    0x480590140000	                         add rax, 0x1490	      5645	option.c	FUNCTION_29	CALL_18
0x4299	          0x4889c7	                            mov rdi, rax	      5645	option.c	FUNCTION_29	CALL_18
0x429c	      0xe8a4020000	            call sym.check_string_option	      5645	option.c	FUNCTION_29	CALL_18
0x42a1	        0x488b45f8	                mov rax, qword [rbp - 8]	      5646	option.c	FUNCTION_29	CALL_19
0x42a5	    0x4805a0140000	                         add rax, 0x14a0	      5646	option.c	FUNCTION_29	CALL_19
0x42ab	          0x4889c7	                            mov rdi, rax	      5646	option.c	FUNCTION_29	CALL_19
0x42ae	      0xe892020000	            call sym.check_string_option	      5646	option.c	FUNCTION_29	CALL_19
0x42b3	        0x488b45f8	                mov rax, qword [rbp - 8]	      5648	option.c	FUNCTION_29	CALL_20
0x42b7	    0x480530140000	                         add rax, 0x1430	      5648	option.c	FUNCTION_29	CALL_20
0x42bd	          0x4889c7	                            mov rdi, rax	      5648	option.c	FUNCTION_29	CALL_20
0x42c0	      0xe880020000	            call sym.check_string_option	      5648	option.c	FUNCTION_29	CALL_20
0x42c5	        0x488b45f8	                mov rax, qword [rbp - 8]	      5651	option.c	FUNCTION_29	CALL_21
0x42c9	    0x480538140000	                         add rax, 0x1438	      5651	option.c	FUNCTION_29	CALL_21
0x42cf	          0x4889c7	                            mov rdi, rax	      5651	option.c	FUNCTION_29	CALL_21
0x42d2	      0xe86e020000	            call sym.check_string_option	      5651	option.c	FUNCTION_29	CALL_21
0x42d7	        0x488b45f8	                mov rax, qword [rbp - 8]	      5653	option.c	FUNCTION_29	CALL_22
0x42db	    0x480530150000	                         add rax, 0x1530	      5653	option.c	FUNCTION_29	CALL_22
0x42e1	          0x4889c7	                            mov rdi, rax	      5653	option.c	FUNCTION_29	CALL_22
0x42e4	      0xe85c020000	            call sym.check_string_option	      5653	option.c	FUNCTION_29	CALL_22
0x42e9	        0x488b45f8	                mov rax, qword [rbp - 8]	      5655	option.c	FUNCTION_29	CALL_23
0x42ed	    0x480540150000	                         add rax, 0x1540	      5655	option.c	FUNCTION_29	CALL_23
0x42f3	          0x4889c7	                            mov rdi, rax	      5655	option.c	FUNCTION_29	CALL_23
0x42f6	      0xe84a020000	            call sym.check_string_option	      5655	option.c	FUNCTION_29	CALL_23
0x42fb	        0x488b45f8	                mov rax, qword [rbp - 8]	      5658	option.c	FUNCTION_29	CALL_24
0x42ff	    0x480588150000	                         add rax, 0x1588	      5658	option.c	FUNCTION_29	CALL_24
0x4305	          0x4889c7	                            mov rdi, rax	      5658	option.c	FUNCTION_29	CALL_24
0x4308	      0xe838020000	            call sym.check_string_option	      5658	option.c	FUNCTION_29	CALL_24
0x430d	        0x488b45f8	                mov rax, qword [rbp - 8]	      5659	option.c	FUNCTION_29	CALL_25
0x4311	    0x4805f81b0000	                         add rax, 0x1bf8	      5659	option.c	FUNCTION_29	CALL_25
0x4317	          0x4889c7	                            mov rdi, rax	      5659	option.c	FUNCTION_29	CALL_25
0x431a	      0xe826020000	            call sym.check_string_option	      5659	option.c	FUNCTION_29	CALL_25
0x431f	        0x488b45f8	                mov rax, qword [rbp - 8]	      5662	option.c	FUNCTION_29	CALL_26
0x4323	    0x4805b01b0000	                         add rax, 0x1bb0	      5662	option.c	FUNCTION_29	CALL_26
0x4329	          0x4889c7	                            mov rdi, rax	      5662	option.c	FUNCTION_29	CALL_26
0x432c	      0xe814020000	            call sym.check_string_option	      5662	option.c	FUNCTION_29	CALL_26
0x4331	        0x488b45f8	                mov rax, qword [rbp - 8]	      5663	option.c	FUNCTION_29	CALL_27
0x4335	    0x4805c01b0000	                         add rax, 0x1bc0	      5663	option.c	FUNCTION_29	CALL_27
0x433b	          0x4889c7	                            mov rdi, rax	      5663	option.c	FUNCTION_29	CALL_27
0x433e	      0xe802020000	            call sym.check_string_option	      5663	option.c	FUNCTION_29	CALL_27
0x4343	        0x488b45f8	                mov rax, qword [rbp - 8]	      5664	option.c	FUNCTION_29	CALL_28
0x4347	    0x4805c81b0000	                         add rax, 0x1bc8	      5664	option.c	FUNCTION_29	CALL_28
0x434d	          0x4889c7	                            mov rdi, rax	      5664	option.c	FUNCTION_29	CALL_28
0x4350	      0xe8f0010000	            call sym.check_string_option	      5664	option.c	FUNCTION_29	CALL_28
0x4355	        0x488b45f8	                mov rax, qword [rbp - 8]	      5667	option.c	FUNCTION_29	CALL_29
0x4359	    0x480570150000	                         add rax, 0x1570	      5667	option.c	FUNCTION_29	CALL_29
0x435f	          0x4889c7	                            mov rdi, rax	      5667	option.c	FUNCTION_29	CALL_29
0x4362	      0xe8de010000	            call sym.check_string_option	      5667	option.c	FUNCTION_29	CALL_29
0x4367	        0x488b45f8	                mov rax, qword [rbp - 8]	      5670	option.c	FUNCTION_29	CALL_30
0x436b	    0x480520140000	                         add rax, 0x1420	      5670	option.c	FUNCTION_29	CALL_30
0x4371	          0x4889c7	                            mov rdi, rax	      5670	option.c	FUNCTION_29	CALL_30
0x4374	      0xe8cc010000	            call sym.check_string_option	      5670	option.c	FUNCTION_29	CALL_30
0x4379	        0x488b45f8	                mov rax, qword [rbp - 8]	      5671	option.c	FUNCTION_29	CALL_31
0x437d	    0x480518140000	                         add rax, 0x1418	      5671	option.c	FUNCTION_29	CALL_31
0x4383	          0x4889c7	                            mov rdi, rax	      5671	option.c	FUNCTION_29	CALL_31
0x4386	      0xe8ba010000	            call sym.check_string_option	      5671	option.c	FUNCTION_29	CALL_31
0x438b	        0x488b45f8	                mov rax, qword [rbp - 8]	      5672	option.c	FUNCTION_29	CALL_32
0x438f	          0x4889c7	                            mov rdi, rax	      5672	option.c	FUNCTION_29	CALL_32
0x4392	      0xe800000000	                          call 0x40043d7	      5672	option.c	FUNCTION_29	CALL_32
0x4397	        0x488b45f8	                mov rax, qword [rbp - 8]	      5675	option.c	FUNCTION_29	CALL_33
0x439b	    0x480580140000	                         add rax, 0x1480	      5675	option.c	FUNCTION_29	CALL_33
0x43a1	          0x4889c7	                            mov rdi, rax	      5675	option.c	FUNCTION_29	CALL_33
0x43a4	      0xe89c010000	            call sym.check_string_option	      5675	option.c	FUNCTION_29	CALL_33
0x43a9	        0x488b45f8	                mov rax, qword [rbp - 8]	      5678	option.c	FUNCTION_29	CALL_34
0x43ad	    0x480528140000	                         add rax, 0x1428	      5678	option.c	FUNCTION_29	CALL_34
0x43b3	          0x4889c7	                            mov rdi, rax	      5678	option.c	FUNCTION_29	CALL_34
0x43b6	      0xe88a010000	            call sym.check_string_option	      5678	option.c	FUNCTION_29	CALL_34
0x43bb	        0x488b45f8	                mov rax, qword [rbp - 8]	      5681	option.c	FUNCTION_29	CALL_35
0x43bf	    0x480540140000	                         add rax, 0x1440	      5681	option.c	FUNCTION_29	CALL_35
0x43c5	          0x4889c7	                            mov rdi, rax	      5681	option.c	FUNCTION_29	CALL_35
0x43c8	      0xe878010000	            call sym.check_string_option	      5681	option.c	FUNCTION_29	CALL_35
0x43cd	        0x488b45f8	                mov rax, qword [rbp - 8]	      5684	option.c	FUNCTION_29	CALL_36
0x43d1	    0x480548140000	                         add rax, 0x1448	      5684	option.c	FUNCTION_29	CALL_36
0x43d7	          0x4889c7	                            mov rdi, rax	      5684	option.c	FUNCTION_29	CALL_36
0x43da	      0xe866010000	            call sym.check_string_option	      5684	option.c	FUNCTION_29	CALL_36
0x43df	        0x488b45f8	                mov rax, qword [rbp - 8]	      5685	option.c	FUNCTION_29	CALL_37
0x43e3	    0x480550140000	                         add rax, 0x1450	      5685	option.c	FUNCTION_29	CALL_37
0x43e9	          0x4889c7	                            mov rdi, rax	      5685	option.c	FUNCTION_29	CALL_37
0x43ec	      0xe854010000	            call sym.check_string_option	      5685	option.c	FUNCTION_29	CALL_37
0x43f1	        0x488b45f8	                mov rax, qword [rbp - 8]	      5688	option.c	FUNCTION_29	CALL_38
0x43f5	    0x4805d0150000	                         add rax, 0x15d0	      5688	option.c	FUNCTION_29	CALL_38
0x43fb	          0x4889c7	                            mov rdi, rax	      5688	option.c	FUNCTION_29	CALL_38
0x43fe	      0xe842010000	            call sym.check_string_option	      5688	option.c	FUNCTION_29	CALL_38
0x4403	        0x488b45f8	                mov rax, qword [rbp - 8]	      5691	option.c	FUNCTION_29	CALL_39
0x4407	    0x4805d8150000	                         add rax, 0x15d8	      5691	option.c	FUNCTION_29	CALL_39
0x440d	          0x4889c7	                            mov rdi, rax	      5691	option.c	FUNCTION_29	CALL_39
0x4410	      0xe830010000	            call sym.check_string_option	      5691	option.c	FUNCTION_29	CALL_39
0x4415	        0x488b45f8	                mov rax, qword [rbp - 8]	      5692	option.c	FUNCTION_29	CALL_40
0x4419	    0x4805e0150000	                         add rax, 0x15e0	      5692	option.c	FUNCTION_29	CALL_40
0x441f	          0x4889c7	                            mov rdi, rax	      5692	option.c	FUNCTION_29	CALL_40
0x4422	      0xe81e010000	            call sym.check_string_option	      5692	option.c	FUNCTION_29	CALL_40
0x4427	        0x488b45f8	                mov rax, qword [rbp - 8]	      5693	option.c	FUNCTION_29	CALL_41
0x442b	    0x4805e8150000	                         add rax, 0x15e8	      5693	option.c	FUNCTION_29	CALL_41
0x4431	          0x4889c7	                            mov rdi, rax	      5693	option.c	FUNCTION_29	CALL_41
0x4434	      0xe80c010000	            call sym.check_string_option	      5693	option.c	FUNCTION_29	CALL_41
0x4439	        0x488b45f8	                mov rax, qword [rbp - 8]	      5695	option.c	FUNCTION_29	CALL_42
0x443d	    0x4805f0150000	                         add rax, 0x15f0	      5695	option.c	FUNCTION_29	CALL_42
0x4443	          0x4889c7	                            mov rdi, rax	      5695	option.c	FUNCTION_29	CALL_42
0x4446	      0xe8fa000000	            call sym.check_string_option	      5695	option.c	FUNCTION_29	CALL_42
0x444b	        0x488b45f8	                mov rax, qword [rbp - 8]	      5696	option.c	FUNCTION_29	CALL_43
0x444f	    0x4805f8150000	                         add rax, 0x15f8	      5696	option.c	FUNCTION_29	CALL_43
0x4455	          0x4889c7	                            mov rdi, rax	      5696	option.c	FUNCTION_29	CALL_43
0x4458	      0xe8e8000000	            call sym.check_string_option	      5696	option.c	FUNCTION_29	CALL_43
0x445d	        0x488b45f8	                mov rax, qword [rbp - 8]	      5697	option.c	FUNCTION_29	CALL_44
0x4461	    0x480508160000	                         add rax, 0x1608	      5697	option.c	FUNCTION_29	CALL_44
0x4467	          0x4889c7	                            mov rdi, rax	      5697	option.c	FUNCTION_29	CALL_44
0x446a	      0xe8d6000000	            call sym.check_string_option	      5697	option.c	FUNCTION_29	CALL_44
0x446f	        0x488b45f8	                mov rax, qword [rbp - 8]	      5698	option.c	FUNCTION_29	CALL_45
0x4473	    0x480510160000	                         add rax, 0x1610	      5698	option.c	FUNCTION_29	CALL_45
0x4479	          0x4889c7	                            mov rdi, rax	      5698	option.c	FUNCTION_29	CALL_45
0x447c	      0xe8c4000000	            call sym.check_string_option	      5698	option.c	FUNCTION_29	CALL_45
0x4481	        0x488b45f8	                mov rax, qword [rbp - 8]	      5700	option.c	FUNCTION_29	CALL_46
0x4485	    0x480520160000	                         add rax, 0x1620	      5700	option.c	FUNCTION_29	CALL_46
0x448b	          0x4889c7	                            mov rdi, rax	      5700	option.c	FUNCTION_29	CALL_46
0x448e	      0xe8b2000000	            call sym.check_string_option	      5700	option.c	FUNCTION_29	CALL_46
0x4493	        0x488b45f8	                mov rax, qword [rbp - 8]	      5701	option.c	FUNCTION_29	CALL_47
0x4497	    0x480528160000	                         add rax, 0x1628	      5701	option.c	FUNCTION_29	CALL_47
0x449d	          0x4889c7	                            mov rdi, rax	      5701	option.c	FUNCTION_29	CALL_47
0x44a0	      0xe8a0000000	            call sym.check_string_option	      5701	option.c	FUNCTION_29	CALL_47
0x44a5	        0x488b45f8	                mov rax, qword [rbp - 8]	      5704	option.c	FUNCTION_29	CALL_48
0x44a9	    0x480540160000	                         add rax, 0x1640	      5704	option.c	FUNCTION_29	CALL_48
0x44af	          0x4889c7	                            mov rdi, rax	      5704	option.c	FUNCTION_29	CALL_48
0x44b2	      0xe88e000000	            call sym.check_string_option	      5704	option.c	FUNCTION_29	CALL_48
0x44b7	        0x488b45f8	                mov rax, qword [rbp - 8]	      5706	option.c	FUNCTION_29	CALL_49
0x44bb	    0x4805e0130000	                         add rax, 0x13e0	      5706	option.c	FUNCTION_29	CALL_49
0x44c1	          0x4889c7	                            mov rdi, rax	      5706	option.c	FUNCTION_29	CALL_49
0x44c4	      0xe87c000000	            call sym.check_string_option	      5706	option.c	FUNCTION_29	CALL_49
0x44c9	        0x488b45f8	                mov rax, qword [rbp - 8]	      5708	option.c	FUNCTION_29	CALL_50
0x44cd	    0x480510150000	                         add rax, 0x1510	      5708	option.c	FUNCTION_29	CALL_50
0x44d3	          0x4889c7	                            mov rdi, rax	      5708	option.c	FUNCTION_29	CALL_50
0x44d6	      0xe86a000000	            call sym.check_string_option	      5708	option.c	FUNCTION_29	CALL_50
0x44db	              0x90	                                     nop	      5710	option.c	FUNCTION_29
0x44dc	              0xc9	                                   leave	      5710	option.c	FUNCTION_29
0x44dd	              0xc3	                                     ret	      5710	option.c	FUNCTION_29
comp_col	WHILE,0:SWITCH,0:CALL,0:FOR,0:ELSE,0:DO,0:IF,6:functions,0	70
0xc57a	              0x55	                                push rbp	     10344	option.c	FUNCTION_75
0xc57b	          0x4889e5	                            mov rbp, rsp	     10344	option.c	FUNCTION_75
0xc57e	    0x488b05000000	            mov rax, qword [0x0400c5c5] 	     10346	option.c	FUNCTION_75
0xc585	        0x4883f802	                              cmp rax, 2	     10346	option.c	FUNCTION_75
0xc589	            0x7420	                            je 0x400c5eb	     10346	option.c	FUNCTION_75
0xc58b	    0x488b05000000	            mov rax, qword [0x0400c5d2] 	     10346	option.c	FUNCTION_75
0xc592	        0x4883f801	                              cmp rax, 1	     10346	option.c	FUNCTION_75
0xc596	            0x751a	                           jne 0x400c5f2	     10346	option.c	FUNCTION_75
0xc598	    0x488b15000000	            mov rdx, qword [0x0400c5df] 	     10346	option.c	FUNCTION_75
0xc59f	    0x488b05000000	            mov rax, qword [0x0400c5e6] 	     10346	option.c	FUNCTION_75
0xc5a6	          0x4839c2	                            cmp rdx, rax	     10346	option.c	FUNCTION_75
0xc5a9	            0x7407	                            je 0x400c5f2	     10346	option.c	FUNCTION_75
0xc5ab	      0xb801000000	                              mov eax, 1	     10346	option.c	FUNCTION_75
0xc5b0	            0xeb05	                           jmp 0x400c5f7	     10346	option.c	FUNCTION_75
0xc5b2	      0xb800000000	                              mov eax, 0	     10346	option.c	FUNCTION_75
0xc5b7	          0x8945fc	                mov dword [rbp - 4], eax	     10346	option.c	FUNCTION_75
0xc5ba	    0xc70500000000	               mov dword [0x0400c604], 0	     10348	option.c	FUNCTION_75
0xc5c4	    0xc70500000000	               mov dword [0x0400c60e], 0	     10349	option.c	FUNCTION_75
0xc5ce	    0x8b0500000000	            mov eax, dword [0x0400c614] 	     10350	option.c	FUNCTION_75	IF_1
0xc5d4	            0x85c0	                           test eax, eax	     10350	option.c	FUNCTION_75	IF_1
0xc5d6	            0x7432	                            je 0x400c64a	     10350	option.c	FUNCTION_75	IF_1
0xc5d8	    0x8b0500000000	            mov eax, dword [0x0400c61e] 	     10353	option.c	FUNCTION_75	IF_1
0xc5de	            0x85c0	                           test eax, eax	     10353	option.c	FUNCTION_75	IF_1
0xc5e0	            0x740b	                            je 0x400c62d	     10353	option.c	FUNCTION_75	IF_1
0xc5e2	    0x8b0500000000	            mov eax, dword [0x0400c628] 	     10353	option.c	FUNCTION_75	IF_1
0xc5e8	          0x83c001	                              add eax, 1	     10353	option.c	FUNCTION_75	IF_1
0xc5eb	            0xeb05	                           jmp 0x400c632	     10353	option.c	FUNCTION_75	IF_1
0xc5ed	      0xb812000000	                           mov eax, 0x12	     10353	option.c	FUNCTION_75	IF_1
0xc5f2	    0x890500000000	            mov dword [0x0400c638], eax 	     10353	option.c	FUNCTION_75	IF_1
0xc5f8	        0x837dfc00	                  cmp dword [rbp - 4], 0	     10358	option.c	FUNCTION_75	IF_1	IF_2
0xc5fc	            0x750c	                           jne 0x400c64a	     10358	option.c	FUNCTION_75	IF_1	IF_2
0xc5fe	    0x8b0500000000	            mov eax, dword [0x0400c644] 	     10359	option.c	FUNCTION_75	IF_1	IF_2
0xc604	    0x890500000000	            mov dword [0x0400c64a], eax 	     10359	option.c	FUNCTION_75	IF_1	IF_2
0xc60a	    0x8b0500000000	            mov eax, dword [0x0400c650] 	     10361	option.c	FUNCTION_75	IF_3
0xc610	            0x85c0	                           test eax, eax	     10361	option.c	FUNCTION_75	IF_3
0xc612	            0x742e	                            je 0x400c682	     10361	option.c	FUNCTION_75	IF_3
0xc614	    0x8b0500000000	            mov eax, dword [0x0400c65a] 	     10363	option.c	FUNCTION_75	IF_3
0xc61a	          0x83c00a	                            add eax, 0xa	     10363	option.c	FUNCTION_75	IF_3
0xc61d	    0x890500000000	            mov dword [0x0400c663], eax 	     10363	option.c	FUNCTION_75	IF_3
0xc623	    0x8b0500000000	            mov eax, dword [0x0400c669] 	     10364	option.c	FUNCTION_75	IF_3	IF_4
0xc629	            0x85c0	                           test eax, eax	     10364	option.c	FUNCTION_75	IF_3	IF_4
0xc62b	            0x7406	                            je 0x400c673	     10364	option.c	FUNCTION_75	IF_3	IF_4
0xc62d	        0x837dfc00	                  cmp dword [rbp - 4], 0	     10364	option.c	FUNCTION_75	IF_3	IF_4
0xc631	            0x740f	                            je 0x400c682	     10364	option.c	FUNCTION_75	IF_3	IF_4
0xc633	    0x8b0500000000	            mov eax, dword [0x0400c679] 	     10365	option.c	FUNCTION_75	IF_3	IF_4
0xc639	          0x83c001	                              add eax, 1	     10365	option.c	FUNCTION_75	IF_3	IF_4
0xc63c	    0x890500000000	            mov dword [0x0400c682], eax 	     10365	option.c	FUNCTION_75	IF_3	IF_4
0xc642	    0x488b05000000	            mov rax, qword [0x0400c689] 	     10367	option.c	FUNCTION_75
0xc649	            0x89c2	                            mov edx, eax	     10367	option.c	FUNCTION_75
0xc64b	    0x8b0500000000	            mov eax, dword [0x0400c691] 	     10367	option.c	FUNCTION_75
0xc651	            0x29c2	                            sub edx, eax	     10367	option.c	FUNCTION_75
0xc653	            0x89d0	                            mov eax, edx	     10367	option.c	FUNCTION_75
0xc655	    0x890500000000	            mov dword [0x0400c69b], eax 	     10367	option.c	FUNCTION_75
0xc65b	    0x488b05000000	            mov rax, qword [0x0400c6a2] 	     10368	option.c	FUNCTION_75
0xc662	            0x89c2	                            mov edx, eax	     10368	option.c	FUNCTION_75
0xc664	    0x8b0500000000	            mov eax, dword [0x0400c6aa] 	     10368	option.c	FUNCTION_75
0xc66a	            0x29c2	                            sub edx, eax	     10368	option.c	FUNCTION_75
0xc66c	            0x89d0	                            mov eax, edx	     10368	option.c	FUNCTION_75
0xc66e	    0x890500000000	            mov dword [0x0400c6b4], eax 	     10368	option.c	FUNCTION_75
0xc674	    0x8b0500000000	            mov eax, dword [0x0400c6ba] 	     10369	option.c	FUNCTION_75	IF_5
0xc67a	            0x85c0	                           test eax, eax	     10369	option.c	FUNCTION_75	IF_5
0xc67c	            0x7f0a	                            jg 0x400c6c8	     10369	option.c	FUNCTION_75	IF_5
0xc67e	    0xc70500000000	               mov dword [0x0400c6c8], 1	     10370	option.c	FUNCTION_75	IF_5
0xc688	    0x8b0500000000	            mov eax, dword [0x0400c6ce] 	     10371	option.c	FUNCTION_75	IF_6
0xc68e	            0x85c0	                           test eax, eax	     10371	option.c	FUNCTION_75	IF_6
0xc690	            0x7f0a	                            jg 0x400c6dc	     10371	option.c	FUNCTION_75	IF_6
0xc692	    0xc70500000000	               mov dword [0x0400c6dc], 1	     10372	option.c	FUNCTION_75	IF_6
0xc69c	              0x90	                                     nop	     10377	option.c	FUNCTION_75
0xc69d	              0x5d	                                 pop rbp	     10377	option.c	FUNCTION_75
0xc69e	              0xc3	                                     ret	     10377	option.c	FUNCTION_75
get_winbuf_options	WHILE,0:SWITCH,0:CALL,6:FOR,1:ELSE,2:DO,0:IF,5:functions,0	87
0x1166d	              0x55	                                push rbp	     12679	option.c	FUNCTION_120
0x1166e	          0x4889e5	                            mov rbp, rsp	     12679	option.c	FUNCTION_120
0x11671	        0x4883ec30	                           sub rsp, 0x30	     12679	option.c	FUNCTION_120
0x11675	          0x897ddc	             mov dword [rbp - 0x24], edi	     12679	option.c	FUNCTION_120
0x11678	      0xe800000000	                          call 0x40116bd	     12683	option.c	FUNCTION_120	CALL_1
0x1167d	        0x488945e8	             mov qword [rbp - 0x18], rax	     12683	option.c	FUNCTION_120	CALL_1
0x11681	      0x48837de800	               cmp qword [rbp - 0x18], 0	     12684	option.c	FUNCTION_120	IF_1
0x11686	            0x750a	                           jne 0x40116d2	     12684	option.c	FUNCTION_120	IF_1
0x11688	      0xb800000000	                              mov eax, 0	     12685	option.c	FUNCTION_120	IF_1
0x1168d	      0xe91b010000	                           jmp 0x40117ed	     12685	option.c	FUNCTION_120	IF_1
0x11692	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	     12687	option.c	FUNCTION_120	FOR_1	CALL_2
0x11699	      0xe9ec000000	                           jmp 0x40117ca	     12687	option.c	FUNCTION_120	FOR_1	CALL_2
0x1169e	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	     12689	option.c	FUNCTION_120	FOR_1
0x116a1	            0x4898	                                    cdqe	     12689	option.c	FUNCTION_120	FOR_1
0x116a3	        0x48c1e006	                              shl rax, 6	     12689	option.c	FUNCTION_120	FOR_1
0x116a7	    0x480500000000	                              add rax, 0	     12689	option.c	FUNCTION_120	FOR_1
0x116ad	        0x488945f0	             mov qword [rbp - 0x10], rax	     12689	option.c	FUNCTION_120	FOR_1
0x116b1	        0x837ddc00	               cmp dword [rbp - 0x24], 0	     12691	option.c	FUNCTION_120	FOR_1	IF_2
0x116b5	            0x7410	                            je 0x4011707	     12691	option.c	FUNCTION_120	FOR_1	IF_2
0x116b7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     12691	option.c	FUNCTION_120	FOR_1	IF_2
0x116bb	          0x8b4020	            mov eax, dword [rax + 0x20] 	     12691	option.c	FUNCTION_120	FOR_1	IF_2
0x116be	      0x2500400000	                         and eax, 0x4000	     12691	option.c	FUNCTION_120	FOR_1	IF_2
0x116c3	            0x85c0	                           test eax, eax	     12691	option.c	FUNCTION_120	FOR_1	IF_2
0x116c5	            0x751e	                           jne 0x4011725	     12691	option.c	FUNCTION_120	FOR_1	IF_2
0x116c7	        0x837ddc00	               cmp dword [rbp - 0x24], 0	     12692	option.c	FUNCTION_120	FOR_1	IF_2
0x116cb	     0xf85b5000000	                           jne 0x40117c6	     12692	option.c	FUNCTION_120	FOR_1	IF_2
0x116d1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     12692	option.c	FUNCTION_120	FOR_1	IF_2
0x116d5	          0x8b4020	            mov eax, dword [rax + 0x20] 	     12692	option.c	FUNCTION_120	FOR_1	IF_2
0x116d8	      0x2500200000	                         and eax, 0x2000	     12692	option.c	FUNCTION_120	FOR_1	IF_2
0x116dd	            0x85c0	                           test eax, eax	     12692	option.c	FUNCTION_120	FOR_1	IF_2
0x116df	     0xf84a1000000	                            je 0x40117c6	     12692	option.c	FUNCTION_120	FOR_1	IF_2
0x116e5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     12694	option.c	FUNCTION_120	FOR_1	IF_2	CALL_3
0x116e9	          0x4889c7	                            mov rdi, rax	     12694	option.c	FUNCTION_120	FOR_1	IF_2	CALL_3
0x116ec	      0xe84eb6ffff	                       call sym.get_varp	     12694	option.c	FUNCTION_120	FOR_1	IF_2	CALL_3
0x116f1	        0x488945f8	                mov qword [rbp - 8], rax	     12694	option.c	FUNCTION_120	FOR_1	IF_2	CALL_3
0x116f5	      0x48837df800	                  cmp qword [rbp - 8], 0	     12696	option.c	FUNCTION_120	FOR_1	IF_2	IF_3
0x116fa	     0xf8486000000	                            je 0x40117c6	     12696	option.c	FUNCTION_120	FOR_1	IF_2	IF_3
0x11700	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     12698	option.c	FUNCTION_120	FOR_1	IF_2	IF_3	IF_4
0x11704	        0x488b4010	            mov rax, qword [rax + 0x10] 	     12698	option.c	FUNCTION_120	FOR_1	IF_2	IF_3	IF_4
0x11708	          0x83e004	                              and eax, 4	     12698	option.c	FUNCTION_120	FOR_1	IF_2	IF_3	IF_4
0x1170b	          0x4885c0	                           test rax, rax	     12698	option.c	FUNCTION_120	FOR_1	IF_2	IF_3	IF_4
0x1170e	            0x7424	                            je 0x4011774	     12698	option.c	FUNCTION_120	FOR_1	IF_2	IF_3	IF_4
0x11710	        0x488b45f8	                mov rax, qword [rbp - 8]	     12699	option.c	FUNCTION_120	FOR_1	IF_2	IF_3	CALL_4
0x11714	          0x488b10	                    mov rdx, qword [rax]	     12699	option.c	FUNCTION_120	FOR_1	IF_2	IF_3	CALL_4
0x11717	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     12699	option.c	FUNCTION_120	FOR_1	IF_2	IF_3	CALL_4
0x1171b	          0x488b30	                    mov rsi, qword [rax]	     12699	option.c	FUNCTION_120	FOR_1	IF_2	IF_3	CALL_4
0x1171e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12699	option.c	FUNCTION_120	FOR_1	IF_2	IF_3	CALL_4
0x11722	          0x4889d1	                            mov rcx, rdx	     12699	option.c	FUNCTION_120	FOR_1	IF_2	IF_3	CALL_4
0x11725	      0xba00000000	                              mov edx, 0	     12699	option.c	FUNCTION_120	FOR_1	IF_2	IF_3	CALL_4
0x1172a	          0x4889c7	                            mov rdi, rax	     12699	option.c	FUNCTION_120	FOR_1	IF_2	IF_3	CALL_4
0x1172d	      0xe800000000	                          call 0x4011772	     12699	option.c	FUNCTION_120	FOR_1	IF_2	IF_3	CALL_4
0x11732	            0xeb52	                           jmp 0x40117c6	     12699	option.c	FUNCTION_120	FOR_1	IF_2	IF_3	CALL_4
0x11734	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     12700	option.c	FUNCTION_120	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x11738	        0x488b4010	            mov rax, qword [rax + 0x10] 	     12700	option.c	FUNCTION_120	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x1173c	          0x83e002	                              and eax, 2	     12700	option.c	FUNCTION_120	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x1173f	          0x4885c0	                           test rax, rax	     12700	option.c	FUNCTION_120	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x11742	            0x7421	                            je 0x40117a5	     12700	option.c	FUNCTION_120	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x11744	        0x488b45f8	                mov rax, qword [rbp - 8]	     12701	option.c	FUNCTION_120	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x11748	          0x488b10	                    mov rdx, qword [rax]	     12701	option.c	FUNCTION_120	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x1174b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     12701	option.c	FUNCTION_120	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x1174f	          0x488b30	                    mov rsi, qword [rax]	     12701	option.c	FUNCTION_120	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x11752	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12701	option.c	FUNCTION_120	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x11756	      0xb900000000	                              mov ecx, 0	     12701	option.c	FUNCTION_120	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x1175b	          0x4889c7	                            mov rdi, rax	     12701	option.c	FUNCTION_120	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x1175e	      0xe800000000	                          call 0x40117a3	     12701	option.c	FUNCTION_120	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x11763	            0xeb21	                           jmp 0x40117c6	     12701	option.c	FUNCTION_120	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x11765	        0x488b45f8	                mov rax, qword [rbp - 8]	     12703	option.c	FUNCTION_120	FOR_1	IF_2	IF_3	CALL_6
0x11769	            0x8b00	                    mov eax, dword [rax]	     12703	option.c	FUNCTION_120	FOR_1	IF_2	IF_3	CALL_6
0x1176b	          0x4863d0	                         movsxd rdx, eax	     12703	option.c	FUNCTION_120	FOR_1	IF_2	IF_3	CALL_6
0x1176e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     12703	option.c	FUNCTION_120	FOR_1	IF_2	IF_3	CALL_6
0x11772	          0x488b30	                    mov rsi, qword [rax]	     12703	option.c	FUNCTION_120	FOR_1	IF_2	IF_3	CALL_6
0x11775	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12703	option.c	FUNCTION_120	FOR_1	IF_2	IF_3	CALL_6
0x11779	      0xb900000000	                              mov ecx, 0	     12703	option.c	FUNCTION_120	FOR_1	IF_2	IF_3	CALL_6
0x1177e	          0x4889c7	                            mov rdi, rax	     12703	option.c	FUNCTION_120	FOR_1	IF_2	IF_3	CALL_6
0x11781	      0xe800000000	                          call 0x40117c6	     12703	option.c	FUNCTION_120	FOR_1	IF_2	IF_3	CALL_6
0x11786	        0x8345e401	               add dword [rbp - 0x1c], 1	     12687	option.c	FUNCTION_120	FOR_1	CALL_2
0x1178a	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	     12687	option.c	FUNCTION_120	FOR_1	CALL_2
0x1178d	            0x4898	                                    cdqe	     12687	option.c	FUNCTION_120	FOR_1	CALL_2
0x1178f	        0x48c1e006	                              shl rax, 6	     12687	option.c	FUNCTION_120	FOR_1	CALL_2
0x11793	    0x480500000000	                              add rax, 0	     12687	option.c	FUNCTION_120	FOR_1	CALL_2
0x11799	          0x4889c7	                            mov rdi, rax	     12687	option.c	FUNCTION_120	FOR_1	CALL_2
0x1179c	      0xe8a3adffff	                   call sym.istermoption	     12687	option.c	FUNCTION_120	FOR_1	CALL_2
0x117a1	            0x85c0	                           test eax, eax	     12687	option.c	FUNCTION_120	FOR_1	CALL_2
0x117a3	     0xf84f5feffff	                            je 0x40116de	     12687	option.c	FUNCTION_120	FOR_1	CALL_2
0x117a9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12708	option.c	FUNCTION_120
0x117ad	              0xc9	                                   leave	     12709	option.c	FUNCTION_120
0x117ae	              0xc3	                                     ret	     12709	option.c	FUNCTION_120
set_helplang_default	WHILE,0:SWITCH,0:CALL,8:FOR,0:ELSE,1:DO,0:IF,5:functions,0	115
0x10b7	              0x55	                                push rbp	      4186	option.c	FUNCTION_11
0x10b8	          0x4889e5	                            mov rbp, rsp	      4186	option.c	FUNCTION_11
0x10bb	        0x4883ec20	                           sub rsp, 0x20	      4186	option.c	FUNCTION_11
0x10bf	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4186	option.c	FUNCTION_11
0x10c3	      0x48837de800	               cmp qword [rbp - 0x18], 0	      4189	option.c	FUNCTION_11	IF_1	CALL_1
0x10c8	     0xf84b7010000	                            je 0x40012c5	      4189	option.c	FUNCTION_11	IF_1	CALL_1
0x10ce	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4189	option.c	FUNCTION_11	IF_1	CALL_1
0x10d2	          0x4889c7	                            mov rdi, rax	      4189	option.c	FUNCTION_11	IF_1	CALL_1
0x10d5	      0xe800000000	                          call 0x400111a	      4189	option.c	FUNCTION_11	IF_1	CALL_1
0x10da	        0x4883f801	                              cmp rax, 1	      4189	option.c	FUNCTION_11	IF_1	CALL_1
0x10de	     0xf86a1010000	                           jbe 0x40012c5	      4189	option.c	FUNCTION_11	IF_1	CALL_1
0x10e4	      0xbf00000000	                              mov edi, 0	      4191	option.c	FUNCTION_11	CALL_2
0x10e9	      0xe8989c0000	                     call sym.findoption	      4191	option.c	FUNCTION_11	CALL_2
0x10ee	          0x8945fc	                mov dword [rbp - 4], eax	      4191	option.c	FUNCTION_11	CALL_2
0x10f1	        0x837dfc00	                  cmp dword [rbp - 4], 0	      4192	option.c	FUNCTION_11	IF_2
0x10f5	     0xf888b010000	                            js 0x40012c6	      4192	option.c	FUNCTION_11	IF_2
0x10fb	          0x8b45fc	                mov eax, dword [rbp - 4]	      4192	option.c	FUNCTION_11	IF_2
0x10fe	            0x4898	                                    cdqe	      4192	option.c	FUNCTION_11	IF_2
0x1100	        0x48c1e006	                              shl rax, 6	      4192	option.c	FUNCTION_11	IF_2
0x1104	    0x480500000000	                              add rax, 0	      4192	option.c	FUNCTION_11	IF_2
0x110a	          0x488b00	                    mov rax, qword [rax]	      4192	option.c	FUNCTION_11	IF_2
0x110d	      0x2500010000	                          and eax, 0x100	      4192	option.c	FUNCTION_11	IF_2
0x1112	          0x4885c0	                           test rax, rax	      4192	option.c	FUNCTION_11	IF_2
0x1115	     0xf856b010000	                           jne 0x40012c6	      4192	option.c	FUNCTION_11	IF_2
0x111b	          0x8b45fc	                mov eax, dword [rbp - 4]	      4194	option.c	FUNCTION_11	IF_2	IF_3
0x111e	            0x4898	                                    cdqe	      4194	option.c	FUNCTION_11	IF_2	IF_3
0x1120	        0x48c1e006	                              shl rax, 6	      4194	option.c	FUNCTION_11	IF_2	IF_3
0x1124	    0x480500000000	                              add rax, 0	      4194	option.c	FUNCTION_11	IF_2	IF_3
0x112a	          0x488b00	                    mov rax, qword [rax]	      4194	option.c	FUNCTION_11	IF_2	IF_3
0x112d	          0x83e008	                              and eax, 8	      4194	option.c	FUNCTION_11	IF_2	IF_3
0x1130	          0x4885c0	                           test rax, rax	      4194	option.c	FUNCTION_11	IF_2	IF_3
0x1133	            0x740f	                            je 0x4001184	      4194	option.c	FUNCTION_11	IF_2	IF_3
0x1135	    0x488b05000000	            mov rax, qword [0x0400117c] 	      4195	option.c	FUNCTION_11	IF_2	CALL_3
0x113c	          0x4889c7	                            mov rdi, rax	      4195	option.c	FUNCTION_11	IF_2	CALL_3
0x113f	      0xe800000000	                          call 0x4001184	      4195	option.c	FUNCTION_11	IF_2	CALL_3
0x1144	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4196	option.c	FUNCTION_11	IF_2	CALL_4
0x1148	          0x4889c7	                            mov rdi, rax	      4196	option.c	FUNCTION_11	IF_2	CALL_4
0x114b	      0xe800000000	                          call 0x4001190	      4196	option.c	FUNCTION_11	IF_2	CALL_4
0x1150	    0x488905000000	            mov qword [0x04001197], rax 	      4196	option.c	FUNCTION_11	IF_2	CALL_4
0x1157	    0x488b05000000	            mov rax, qword [0x0400119e] 	      4197	option.c	FUNCTION_11	IF_2	IF_4
0x115e	          0x4885c0	                           test rax, rax	      4197	option.c	FUNCTION_11	IF_2	IF_4
0x1161	            0x7513	                           jne 0x40011b6	      4197	option.c	FUNCTION_11	IF_2	IF_4
0x1163	    0x488b05000000	            mov rax, qword [0x040011aa] 	      4198	option.c	FUNCTION_11	IF_2	IF_4
0x116a	    0x488905000000	            mov qword [0x040011b1], rax 	      4198	option.c	FUNCTION_11	IF_2	IF_4
0x1171	      0xe9e2000000	                           jmp 0x4001298	      4198	option.c	FUNCTION_11	IF_2	IF_4
0x1176	    0x488b05000000	            mov rax, qword [0x040011bd] 	      4202	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_6
0x117d	      0xba03000000	                              mov edx, 3	      4202	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_6
0x1182	      0xbe00000000	                              mov esi, 0	      4202	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_6
0x1187	          0x4889c7	                            mov rdi, rax	      4202	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_6
0x118a	      0xe800000000	                          call 0x40011cf	      4202	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_6
0x118f	            0x85c0	                           test eax, eax	      4202	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_6
0x1191	     0xf85b3000000	                           jne 0x400128a	      4202	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_6
0x1197	    0x488b05000000	            mov rax, qword [0x040011de] 	      4202	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_6
0x119e	          0x4889c7	                            mov rdi, rax	      4202	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_6
0x11a1	      0xe800000000	                          call 0x40011e6	      4202	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_6
0x11a6	        0x4883f804	                              cmp rax, 4	      4202	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_6
0x11aa	     0xf869a000000	                           jbe 0x400128a	      4202	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_6
0x11b0	    0x488b15000000	            mov rdx, qword [0x040011f7] 	      4204	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_7
0x11b7	    0x488b05000000	            mov rax, qword [0x040011fe] 	      4204	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_7
0x11be	        0x4883c003	                              add rax, 3	      4204	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_7
0x11c2	           0xfb600	                   movzx eax, byte [rax]	      4204	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_7
0x11c5	            0x3c40	                            cmp al, 0x40	      4204	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_7
0x11c7	            0x7612	                           jbe 0x400121b	      4204	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_7
0x11c9	    0x488b05000000	            mov rax, qword [0x04001210] 	      4204	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_7
0x11d0	        0x4883c003	                              add rax, 3	      4204	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_7
0x11d4	           0xfb600	                   movzx eax, byte [rax]	      4204	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_7
0x11d7	            0x3c5a	                            cmp al, 0x5a	      4204	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_7
0x11d9	            0x760d	                           jbe 0x4001228	      4204	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_7
0x11db	    0x488b05000000	            mov rax, qword [0x04001222] 	      4204	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_7
0x11e2	         0xfb64003	               movzx eax, byte [rax + 3]	      4204	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_7
0x11e6	            0xeb11	                           jmp 0x4001239	      4204	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_7
0x11e8	    0x488b05000000	            mov rax, qword [0x0400122f] 	      4204	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_7
0x11ef	        0x4883c003	                              add rax, 3	      4204	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_7
0x11f3	           0xfb600	                   movzx eax, byte [rax]	      4204	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_7
0x11f6	          0x83c020	                           add eax, 0x20	      4204	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_7
0x11f9	            0x8802	                      mov byte [rdx], al	      4204	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_7
0x11fb	    0x488b05000000	            mov rax, qword [0x04001242] 	      4205	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_8
0x1202	        0x488d5001	                      lea rdx, [rax + 1]	      4205	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_8
0x1206	    0x488b05000000	            mov rax, qword [0x0400124d] 	      4205	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_8
0x120d	        0x4883c004	                              add rax, 4	      4205	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_8
0x1211	           0xfb600	                   movzx eax, byte [rax]	      4205	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_8
0x1214	            0x3c40	                            cmp al, 0x40	      4205	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_8
0x1216	            0x7612	                           jbe 0x400126a	      4205	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_8
0x1218	    0x488b05000000	            mov rax, qword [0x0400125f] 	      4205	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_8
0x121f	        0x4883c004	                              add rax, 4	      4205	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_8
0x1223	           0xfb600	                   movzx eax, byte [rax]	      4205	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_8
0x1226	            0x3c5a	                            cmp al, 0x5a	      4205	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_8
0x1228	            0x760d	                           jbe 0x4001277	      4205	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_8
0x122a	    0x488b05000000	            mov rax, qword [0x04001271] 	      4205	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_8
0x1231	         0xfb64004	               movzx eax, byte [rax + 4]	      4205	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_8
0x1235	            0xeb11	                           jmp 0x4001288	      4205	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_8
0x1237	    0x488b05000000	            mov rax, qword [0x0400127e] 	      4205	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_8
0x123e	        0x4883c004	                              add rax, 4	      4205	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_8
0x1242	           0xfb600	                   movzx eax, byte [rax]	      4205	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_8
0x1245	          0x83c020	                           add eax, 0x20	      4205	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_8
0x1248	            0x8802	                      mov byte [rdx], al	      4205	option.c	FUNCTION_11	IF_2	ELSE_1	IF_5	CALL_8
0x124a	    0x488b05000000	            mov rax, qword [0x04001291] 	      4207	option.c	FUNCTION_11	IF_2	ELSE_1
0x1251	        0x4883c002	                              add rax, 2	      4207	option.c	FUNCTION_11	IF_2	ELSE_1
0x1255	          0xc60000	                       mov byte [rax], 0	      4207	option.c	FUNCTION_11	IF_2	ELSE_1
0x1258	          0x8b45fc	                mov eax, dword [rbp - 4]	      4209	option.c	FUNCTION_11	IF_2
0x125b	            0x4898	                                    cdqe	      4209	option.c	FUNCTION_11	IF_2
0x125d	        0x48c1e006	                              shl rax, 6	      4209	option.c	FUNCTION_11	IF_2
0x1261	    0x480500000000	                              add rax, 0	      4209	option.c	FUNCTION_11	IF_2
0x1267	          0x488b00	                    mov rax, qword [rax]	      4209	option.c	FUNCTION_11	IF_2
0x126a	        0x4883c808	                               or rax, 8	      4209	option.c	FUNCTION_11	IF_2
0x126e	          0x4889c2	                            mov rdx, rax	      4209	option.c	FUNCTION_11	IF_2
0x1271	          0x8b45fc	                mov eax, dword [rbp - 4]	      4209	option.c	FUNCTION_11	IF_2
0x1274	            0x4898	                                    cdqe	      4209	option.c	FUNCTION_11	IF_2
0x1276	        0x48c1e006	                              shl rax, 6	      4209	option.c	FUNCTION_11	IF_2
0x127a	    0x480500000000	                              add rax, 0	      4209	option.c	FUNCTION_11	IF_2
0x1280	          0x488910	                    mov qword [rax], rdx	      4209	option.c	FUNCTION_11	IF_2
0x1283	            0xeb01	                           jmp 0x40012c6	      4209	option.c	FUNCTION_11	IF_2
0x1285	              0x90	                                     nop	      4190	option.c	FUNCTION_11	IF_1
0x1286	              0xc9	                                   leave	      4211	option.c	FUNCTION_11
0x1287	              0xc3	                                     ret	      4211	option.c	FUNCTION_11
compile_cap_prog	WHILE,0:SWITCH,0:CALL,4:FOR,0:ELSE,1:DO,0:IF,3:functions,0	48
0x8a71	              0x55	                                push rbp	      8023	option.c	FUNCTION_48
0x8a72	          0x4889e5	                            mov rbp, rsp	      8023	option.c	FUNCTION_48
0x8a75	        0x4883ec20	                           sub rsp, 0x20	      8023	option.c	FUNCTION_48
0x8a79	        0x48897de8	             mov qword [rbp - 0x18], rdi	      8023	option.c	FUNCTION_48
0x8a7d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8024	option.c	FUNCTION_48
0x8a81	    0x488b80700400	           mov rax, qword [rax + 0x470] 	      8024	option.c	FUNCTION_48
0x8a88	        0x488945f0	             mov qword [rbp - 0x10], rax	      8024	option.c	FUNCTION_48
0x8a8c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8027	option.c	FUNCTION_48	IF_1
0x8a90	    0x488b80680400	           mov rax, qword [rax + 0x468] 	      8027	option.c	FUNCTION_48	IF_1
0x8a97	           0xfb600	                   movzx eax, byte [rax]	      8027	option.c	FUNCTION_48	IF_1
0x8a9a	            0x84c0	                             test al, al	      8027	option.c	FUNCTION_48	IF_1
0x8a9c	            0x7511	                           jne 0x4008aef	      8027	option.c	FUNCTION_48	IF_1
0x8a9e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8028	option.c	FUNCTION_48	IF_1
0x8aa2	    0x48c780700400	              mov qword [rax + 0x470], 0	      8028	option.c	FUNCTION_48	IF_1
0x8aad	            0xeb74	                           jmp 0x4008b63	      8028	option.c	FUNCTION_48	IF_1
0x8aaf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8032	option.c	FUNCTION_48	ELSE_1	CALL_1
0x8ab3	    0x488b80680400	           mov rax, qword [rax + 0x468] 	      8032	option.c	FUNCTION_48	ELSE_1	CALL_1
0x8aba	          0x4889c6	                            mov rsi, rax	      8032	option.c	FUNCTION_48	ELSE_1	CALL_1
0x8abd	      0xbf00000000	                              mov edi, 0	      8032	option.c	FUNCTION_48	ELSE_1	CALL_1
0x8ac2	      0xe800000000	                          call 0x4008b07	      8032	option.c	FUNCTION_48	ELSE_1	CALL_1
0x8ac7	        0x488945f8	                mov qword [rbp - 8], rax	      8032	option.c	FUNCTION_48	ELSE_1	CALL_1
0x8acb	      0x48837df800	                  cmp qword [rbp - 8], 0	      8033	option.c	FUNCTION_48	ELSE_1	IF_2
0x8ad0	            0x7451	                            je 0x4008b63	      8033	option.c	FUNCTION_48	ELSE_1	IF_2
0x8ad2	        0x488b45f8	                mov rax, qword [rbp - 8]	      8035	option.c	FUNCTION_48	ELSE_1	IF_2	CALL_2
0x8ad6	      0xbe01000000	                              mov esi, 1	      8035	option.c	FUNCTION_48	ELSE_1	IF_2	CALL_2
0x8adb	          0x4889c7	                            mov rdi, rax	      8035	option.c	FUNCTION_48	ELSE_1	IF_2	CALL_2
0x8ade	      0xe800000000	                          call 0x4008b23	      8035	option.c	FUNCTION_48	ELSE_1	IF_2	CALL_2
0x8ae3	          0x4889c2	                            mov rdx, rax	      8035	option.c	FUNCTION_48	ELSE_1	IF_2	CALL_2
0x8ae6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8035	option.c	FUNCTION_48	ELSE_1	IF_2	CALL_2
0x8aea	    0x488990700400	            mov qword [rax + 0x470], rdx	      8035	option.c	FUNCTION_48	ELSE_1	IF_2	CALL_2
0x8af1	        0x488b45f8	                mov rax, qword [rbp - 8]	      8036	option.c	FUNCTION_48	ELSE_1	IF_2	CALL_3
0x8af5	          0x4889c7	                            mov rdi, rax	      8036	option.c	FUNCTION_48	ELSE_1	IF_2	CALL_3
0x8af8	      0xe800000000	                          call 0x4008b3d	      8036	option.c	FUNCTION_48	ELSE_1	IF_2	CALL_3
0x8afd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8037	option.c	FUNCTION_48	ELSE_1	IF_2	IF_3
0x8b01	    0x488b80700400	           mov rax, qword [rax + 0x470] 	      8037	option.c	FUNCTION_48	ELSE_1	IF_2	IF_3
0x8b08	          0x4885c0	                           test rax, rax	      8037	option.c	FUNCTION_48	ELSE_1	IF_2	IF_3
0x8b0b	            0x7516	                           jne 0x4008b63	      8037	option.c	FUNCTION_48	ELSE_1	IF_2	IF_3
0x8b0d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8039	option.c	FUNCTION_48	ELSE_1	IF_2	IF_3
0x8b11	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      8039	option.c	FUNCTION_48	ELSE_1	IF_2	IF_3
0x8b15	    0x488990700400	            mov qword [rax + 0x470], rdx	      8039	option.c	FUNCTION_48	ELSE_1	IF_2	IF_3
0x8b1c	      0xb800000000	                              mov eax, 0	      8040	option.c	FUNCTION_48	ELSE_1	IF_2	IF_3
0x8b21	            0xeb11	                           jmp 0x4008b74	      8040	option.c	FUNCTION_48	ELSE_1	IF_2	IF_3
0x8b23	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      8045	option.c	FUNCTION_48	CALL_4
0x8b27	          0x4889c7	                            mov rdi, rax	      8045	option.c	FUNCTION_48	CALL_4
0x8b2a	      0xe800000000	                          call 0x4008b6f	      8045	option.c	FUNCTION_48	CALL_4
0x8b2f	      0xb800000000	                              mov eax, 0	      8046	option.c	FUNCTION_48
0x8b34	              0xc9	                                   leave	      8047	option.c	FUNCTION_48
0x8b35	              0xc3	                                     ret	      8047	option.c	FUNCTION_48
clear_winopt	WHILE,0:SWITCH,0:CALL,14:FOR,0:ELSE,0:DO,0:IF,0:functions,0	63
0xe470	              0x55	                                push rbp	     10964	option.c	FUNCTION_84
0xe471	          0x4889e5	                            mov rbp, rsp	     10964	option.c	FUNCTION_84
0xe474	        0x4883ec10	                           sub rsp, 0x10	     10964	option.c	FUNCTION_84
0xe478	        0x48897df8	                mov qword [rbp - 8], rdi	     10964	option.c	FUNCTION_84
0xe47c	        0x488b45f8	                mov rax, qword [rbp - 8]	     10966	option.c	FUNCTION_84	CALL_1
0xe480	        0x4883c030	                           add rax, 0x30	     10966	option.c	FUNCTION_84	CALL_1
0xe484	          0x4889c7	                            mov rdi, rax	     10966	option.c	FUNCTION_84	CALL_1
0xe487	      0xe800000000	                          call 0x400e4cc	     10966	option.c	FUNCTION_84	CALL_1
0xe48c	        0x488b45f8	                mov rax, qword [rbp - 8]	     10967	option.c	FUNCTION_84	CALL_2
0xe490	        0x4883c048	                           add rax, 0x48	     10967	option.c	FUNCTION_84	CALL_2
0xe494	          0x4889c7	                            mov rdi, rax	     10967	option.c	FUNCTION_84	CALL_2
0xe497	      0xe800000000	                          call 0x400e4dc	     10967	option.c	FUNCTION_84	CALL_2
0xe49c	        0x488b45f8	                mov rax, qword [rbp - 8]	     10968	option.c	FUNCTION_84	CALL_3
0xe4a0	        0x4883c050	                           add rax, 0x50	     10968	option.c	FUNCTION_84	CALL_3
0xe4a4	          0x4889c7	                            mov rdi, rax	     10968	option.c	FUNCTION_84	CALL_3
0xe4a7	      0xe800000000	                          call 0x400e4ec	     10968	option.c	FUNCTION_84	CALL_3
0xe4ac	        0x488b45f8	                mov rax, qword [rbp - 8]	     10970	option.c	FUNCTION_84	CALL_4
0xe4b0	        0x4883c068	                           add rax, 0x68	     10970	option.c	FUNCTION_84	CALL_4
0xe4b4	          0x4889c7	                            mov rdi, rax	     10970	option.c	FUNCTION_84	CALL_4
0xe4b7	      0xe800000000	                          call 0x400e4fc	     10970	option.c	FUNCTION_84	CALL_4
0xe4bc	        0x488b45f8	                mov rax, qword [rbp - 8]	     10971	option.c	FUNCTION_84	CALL_5
0xe4c0	        0x4883c070	                           add rax, 0x70	     10971	option.c	FUNCTION_84	CALL_5
0xe4c4	          0x4889c7	                            mov rdi, rax	     10971	option.c	FUNCTION_84	CALL_5
0xe4c7	      0xe800000000	                          call 0x400e50c	     10971	option.c	FUNCTION_84	CALL_5
0xe4cc	        0x488b45f8	                mov rax, qword [rbp - 8]	     10973	option.c	FUNCTION_84	CALL_6
0xe4d0	        0x4883c078	                           add rax, 0x78	     10973	option.c	FUNCTION_84	CALL_6
0xe4d4	          0x4889c7	                            mov rdi, rax	     10973	option.c	FUNCTION_84	CALL_6
0xe4d7	      0xe800000000	                          call 0x400e51c	     10973	option.c	FUNCTION_84	CALL_6
0xe4dc	        0x488b45f8	                mov rax, qword [rbp - 8]	     10976	option.c	FUNCTION_84	CALL_7
0xe4e0	    0x480508010000	                          add rax, 0x108	     10976	option.c	FUNCTION_84	CALL_7
0xe4e6	          0x4889c7	                            mov rdi, rax	     10976	option.c	FUNCTION_84	CALL_7
0xe4e9	      0xe800000000	                          call 0x400e52e	     10976	option.c	FUNCTION_84	CALL_7
0xe4ee	        0x488b45f8	                mov rax, qword [rbp - 8]	     10979	option.c	FUNCTION_84	CALL_8
0xe4f2	        0x4883c008	                              add rax, 8	     10979	option.c	FUNCTION_84	CALL_8
0xe4f6	          0x4889c7	                            mov rdi, rax	     10979	option.c	FUNCTION_84	CALL_8
0xe4f9	      0xe800000000	                          call 0x400e53e	     10979	option.c	FUNCTION_84	CALL_8
0xe4fe	        0x488b45f8	                mov rax, qword [rbp - 8]	     10982	option.c	FUNCTION_84	CALL_9
0xe502	    0x4805a8000000	                           add rax, 0xa8	     10982	option.c	FUNCTION_84	CALL_9
0xe508	          0x4889c7	                            mov rdi, rax	     10982	option.c	FUNCTION_84	CALL_9
0xe50b	      0xe800000000	                          call 0x400e550	     10982	option.c	FUNCTION_84	CALL_9
0xe510	        0x488b45f8	                mov rax, qword [rbp - 8]	     10985	option.c	FUNCTION_84	CALL_10
0xe514	    0x4805d0000000	                           add rax, 0xd0	     10985	option.c	FUNCTION_84	CALL_10
0xe51a	          0x4889c7	                            mov rdi, rax	     10985	option.c	FUNCTION_84	CALL_10
0xe51d	      0xe800000000	                          call 0x400e562	     10985	option.c	FUNCTION_84	CALL_10
0xe522	        0x488b45f8	                mov rax, qword [rbp - 8]	     10988	option.c	FUNCTION_84	CALL_11
0xe526	    0x4805c8000000	                           add rax, 0xc8	     10988	option.c	FUNCTION_84	CALL_11
0xe52c	          0x4889c7	                            mov rdi, rax	     10988	option.c	FUNCTION_84	CALL_11
0xe52f	      0xe800000000	                          call 0x400e574	     10988	option.c	FUNCTION_84	CALL_11
0xe534	        0x488b45f8	                mov rax, qword [rbp - 8]	     10991	option.c	FUNCTION_84	CALL_12
0xe538	    0x4805f0000000	                           add rax, 0xf0	     10991	option.c	FUNCTION_84	CALL_12
0xe53e	          0x4889c7	                            mov rdi, rax	     10991	option.c	FUNCTION_84	CALL_12
0xe541	      0xe800000000	                          call 0x400e586	     10991	option.c	FUNCTION_84	CALL_12
0xe546	        0x488b45f8	                mov rax, qword [rbp - 8]	     10994	option.c	FUNCTION_84	CALL_13
0xe54a	    0x480510010000	                          add rax, 0x110	     10994	option.c	FUNCTION_84	CALL_13
0xe550	          0x4889c7	                            mov rdi, rax	     10994	option.c	FUNCTION_84	CALL_13
0xe553	      0xe800000000	                          call 0x400e598	     10994	option.c	FUNCTION_84	CALL_13
0xe558	        0x488b45f8	                mov rax, qword [rbp - 8]	     10995	option.c	FUNCTION_84	CALL_14
0xe55c	    0x480518010000	                          add rax, 0x118	     10995	option.c	FUNCTION_84	CALL_14
0xe562	          0x4889c7	                            mov rdi, rax	     10995	option.c	FUNCTION_84	CALL_14
0xe565	      0xe800000000	                          call 0x400e5aa	     10995	option.c	FUNCTION_84	CALL_14
0xe56a	              0x90	                                     nop	     10997	option.c	FUNCTION_84
0xe56b	              0xc9	                                   leave	     10997	option.c	FUNCTION_84
0xe56c	              0xc3	                                     ret	     10997	option.c	FUNCTION_84
check_colorcolumn	WHILE,0:SWITCH,0:CALL,7:FOR,2:ELSE,3:DO,0:IF,12:functions,0	192
0x7e5c	              0x55	                                push rbp	      7635	option.c	FUNCTION_43
0x7e5d	          0x4889e5	                            mov rbp, rsp	      7635	option.c	FUNCTION_43
0x7e60	    0x4881ec400400	                          sub rsp, 0x440	      7635	option.c	FUNCTION_43
0x7e67	    0x4889bdc8fbff	            mov qword [rbp - 0x438], rdi	      7635	option.c	FUNCTION_43
0x7e6e	    0x64488b042528	                mov rax, qword fs:[0x28]	      7635	option.c	FUNCTION_43
0x7e77	        0x488945f8	                mov qword [rbp - 8], rax	      7635	option.c	FUNCTION_43
0x7e7b	            0x31c0	                            xor eax, eax	      7635	option.c	FUNCTION_43
0x7e7d	    0xc785dcfbffff	              mov dword [rbp - 0x424], 0	      7638	option.c	FUNCTION_43
0x7e87	    0xc785e4fbffff	              mov dword [rbp - 0x41c], 0	      7641	option.c	FUNCTION_43
0x7e91	    0x488b85c8fbff	            mov rax, qword [rbp - 0x438]	      7643	option.c	FUNCTION_43	IF_1
0x7e98	        0x488b4008	                mov rax, qword [rax + 8]	      7643	option.c	FUNCTION_43	IF_1
0x7e9c	          0x4885c0	                           test rax, rax	      7643	option.c	FUNCTION_43	IF_1
0x7e9f	            0x750a	                           jne 0x4007eeb	      7643	option.c	FUNCTION_43	IF_1
0x7ea1	      0xb800000000	                              mov eax, 0	      7644	option.c	FUNCTION_43	IF_1
0x7ea6	      0xe917030000	                           jmp 0x4008202	      7644	option.c	FUNCTION_43	IF_1
0x7eab	    0x488b85c8fbff	            mov rax, qword [rbp - 0x438]	      7646	option.c	FUNCTION_43	FOR_1
0x7eb2	    0x488b80780200	           mov rax, qword [rax + 0x278] 	      7646	option.c	FUNCTION_43	FOR_1
0x7eb9	    0x488985e8fbff	            mov qword [rbp - 0x418], rax	      7646	option.c	FUNCTION_43	FOR_1
0x7ec0	      0xe983010000	                           jmp 0x4008088	      7646	option.c	FUNCTION_43	FOR_1
0x7ec5	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      7648	option.c	FUNCTION_43	FOR_1	IF_2
0x7ecc	           0xfb600	                   movzx eax, byte [rax]	      7648	option.c	FUNCTION_43	FOR_1	IF_2
0x7ecf	            0x3c2d	                            cmp al, 0x2d	      7648	option.c	FUNCTION_43	FOR_1	IF_2
0x7ed1	            0x7412	                            je 0x4007f25	      7648	option.c	FUNCTION_43	FOR_1	IF_2
0x7ed3	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      7648	option.c	FUNCTION_43	FOR_1	IF_2
0x7eda	           0xfb600	                   movzx eax, byte [rax]	      7648	option.c	FUNCTION_43	FOR_1	IF_2
0x7edd	            0x3c2b	                            cmp al, 0x2b	      7648	option.c	FUNCTION_43	FOR_1	IF_2
0x7edf	     0xf85b9000000	                           jne 0x4007fde	      7648	option.c	FUNCTION_43	FOR_1	IF_2
0x7ee5	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      7651	option.c	FUNCTION_43	FOR_1	IF_2
0x7eec	           0xfb600	                   movzx eax, byte [rax]	      7651	option.c	FUNCTION_43	FOR_1	IF_2
0x7eef	            0x3c2d	                            cmp al, 0x2d	      7651	option.c	FUNCTION_43	FOR_1	IF_2
0x7ef1	            0x7507	                           jne 0x4007f3a	      7651	option.c	FUNCTION_43	FOR_1	IF_2
0x7ef3	      0xb8ffffffff	                     mov eax, 0xffffffff	      7651	option.c	FUNCTION_43	FOR_1	IF_2
0x7ef8	            0xeb05	                           jmp 0x4007f3f	      7651	option.c	FUNCTION_43	FOR_1	IF_2
0x7efa	      0xb801000000	                              mov eax, 1	      7651	option.c	FUNCTION_43	FOR_1	IF_2
0x7eff	    0x8985d8fbffff	            mov dword [rbp - 0x428], eax	      7651	option.c	FUNCTION_43	FOR_1	IF_2
0x7f05	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      7652	option.c	FUNCTION_43	FOR_1	IF_2
0x7f0c	        0x4883c001	                              add rax, 1	      7652	option.c	FUNCTION_43	FOR_1	IF_2
0x7f10	    0x488985e8fbff	            mov qword [rbp - 0x418], rax	      7652	option.c	FUNCTION_43	FOR_1	IF_2
0x7f17	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      7653	option.c	FUNCTION_43	FOR_1	IF_2	IF_3	CALL_1
0x7f1e	           0xfb600	                   movzx eax, byte [rax]	      7653	option.c	FUNCTION_43	FOR_1	IF_2	IF_3	CALL_1
0x7f21	           0xfb6c0	                           movzx eax, al	      7653	option.c	FUNCTION_43	FOR_1	IF_2	IF_3	CALL_1
0x7f24	          0x83e830	                           sub eax, 0x30	      7653	option.c	FUNCTION_43	FOR_1	IF_2	IF_3	CALL_1
0x7f27	          0x83f809	                              cmp eax, 9	      7653	option.c	FUNCTION_43	FOR_1	IF_2	IF_3	CALL_1
0x7f2a	            0x760a	                           jbe 0x4007f76	      7653	option.c	FUNCTION_43	FOR_1	IF_2	IF_3	CALL_1
0x7f2c	      0xb800000000	                              mov eax, 0	      7654	option.c	FUNCTION_43	FOR_1	IF_2	IF_3
0x7f31	      0xe98c020000	                           jmp 0x4008202	      7654	option.c	FUNCTION_43	FOR_1	IF_2	IF_3
0x7f36	    0x488d85e8fbff	                  lea rax, [rbp - 0x418]	      7655	option.c	FUNCTION_43	FOR_1	IF_2	CALL_2
0x7f3d	          0x4889c7	                            mov rdi, rax	      7655	option.c	FUNCTION_43	FOR_1	IF_2	CALL_2
0x7f40	      0xe800000000	                          call 0x4007f85	      7655	option.c	FUNCTION_43	FOR_1	IF_2	CALL_2
0x7f45	            0x89c2	                            mov edx, eax	      7655	option.c	FUNCTION_43	FOR_1	IF_2	CALL_2
0x7f47	    0x8b85d8fbffff	            mov eax, dword [rbp - 0x428]	      7655	option.c	FUNCTION_43	FOR_1	IF_2	CALL_2
0x7f4d	           0xfafc2	                           imul eax, edx	      7655	option.c	FUNCTION_43	FOR_1	IF_2	CALL_2
0x7f50	    0x8985d8fbffff	            mov dword [rbp - 0x428], eax	      7655	option.c	FUNCTION_43	FOR_1	IF_2	CALL_2
0x7f56	    0x488b85c8fbff	            mov rax, qword [rbp - 0x438]	      7656	option.c	FUNCTION_43	FOR_1	IF_2	IF_4
0x7f5d	        0x488b4008	                mov rax, qword [rax + 8]	      7656	option.c	FUNCTION_43	FOR_1	IF_2	IF_4
0x7f61	    0x488b80a01500	          mov rax, qword [rax + 0x15a0] 	      7656	option.c	FUNCTION_43	FOR_1	IF_2	IF_4
0x7f68	          0x4885c0	                           test rax, rax	      7656	option.c	FUNCTION_43	FOR_1	IF_2	IF_4
0x7f6b	     0xf8486000000	                            je 0x4008037	      7656	option.c	FUNCTION_43	FOR_1	IF_2	IF_4
0x7f71	    0x488b85c8fbff	            mov rax, qword [rbp - 0x438]	      7658	option.c	FUNCTION_43	FOR_1	IF_2
0x7f78	        0x488b4008	                mov rax, qword [rax + 8]	      7658	option.c	FUNCTION_43	FOR_1	IF_2
0x7f7c	    0x488b80a01500	          mov rax, qword [rax + 0x15a0] 	      7658	option.c	FUNCTION_43	FOR_1	IF_2
0x7f83	            0x89c2	                            mov edx, eax	      7658	option.c	FUNCTION_43	FOR_1	IF_2
0x7f85	    0x8b85d8fbffff	            mov eax, dword [rbp - 0x428]	      7658	option.c	FUNCTION_43	FOR_1	IF_2
0x7f8b	             0x1d0	                            add eax, edx	      7658	option.c	FUNCTION_43	FOR_1	IF_2
0x7f8d	    0x8985d8fbffff	            mov dword [rbp - 0x428], eax	      7658	option.c	FUNCTION_43	FOR_1	IF_2
0x7f93	    0x83bdd8fbffff	              cmp dword [rbp - 0x428], 0	      7659	option.c	FUNCTION_43	FOR_1	IF_2	IF_5
0x7f9a	            0x7938	                           jns 0x4008014	      7659	option.c	FUNCTION_43	FOR_1	IF_2	IF_5
0x7f9c	            0xeb5a	                           jmp 0x4008038	      7660	option.c	FUNCTION_43	FOR_1	IF_2	IF_5
0x7f9e	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      7662	option.c	FUNCTION_43	FOR_1	ELSE_1	IF_6	CALL_3
0x7fa5	           0xfb600	                   movzx eax, byte [rax]	      7662	option.c	FUNCTION_43	FOR_1	ELSE_1	IF_6	CALL_3
0x7fa8	           0xfb6c0	                           movzx eax, al	      7662	option.c	FUNCTION_43	FOR_1	ELSE_1	IF_6	CALL_3
0x7fab	          0x83e830	                           sub eax, 0x30	      7662	option.c	FUNCTION_43	FOR_1	ELSE_1	IF_6	CALL_3
0x7fae	          0x83f809	                              cmp eax, 9	      7662	option.c	FUNCTION_43	FOR_1	ELSE_1	IF_6	CALL_3
0x7fb1	            0x7717	                            ja 0x400800a	      7662	option.c	FUNCTION_43	FOR_1	ELSE_1	IF_6	CALL_3
0x7fb3	    0x488d85e8fbff	                  lea rax, [rbp - 0x418]	      7663	option.c	FUNCTION_43	FOR_1	ELSE_1	IF_6
0x7fba	          0x4889c7	                            mov rdi, rax	      7663	option.c	FUNCTION_43	FOR_1	ELSE_1	IF_6
0x7fbd	      0xe800000000	                          call 0x4008002	      7663	option.c	FUNCTION_43	FOR_1	ELSE_1	IF_6
0x7fc2	    0x8985d8fbffff	            mov dword [rbp - 0x428], eax	      7663	option.c	FUNCTION_43	FOR_1	ELSE_1	IF_6
0x7fc8	            0xeb0a	                           jmp 0x4008014	      7663	option.c	FUNCTION_43	FOR_1	ELSE_1	IF_6
0x7fca	      0xb800000000	                              mov eax, 0	      7665	option.c	FUNCTION_43	FOR_1	ELSE_2
0x7fcf	      0xe9ee010000	                           jmp 0x4008202	      7665	option.c	FUNCTION_43	FOR_1	ELSE_2
0x7fd4	    0x8b85dcfbffff	            mov eax, dword [rbp - 0x424]	      7666	option.c	FUNCTION_43	FOR_1
0x7fda	          0x8d5001	                      lea edx, [rax + 1]	      7666	option.c	FUNCTION_43	FOR_1
0x7fdd	    0x8995dcfbffff	            mov dword [rbp - 0x424], edx	      7666	option.c	FUNCTION_43	FOR_1
0x7fe3	    0x8b95d8fbffff	            mov edx, dword [rbp - 0x428]	      7666	option.c	FUNCTION_43	FOR_1
0x7fe9	          0x83ea01	                              sub edx, 1	      7666	option.c	FUNCTION_43	FOR_1
0x7fec	            0x4898	                                    cdqe	      7666	option.c	FUNCTION_43	FOR_1
0x7fee	    0x899485f0fbff	    mov dword [rbp + rax*4 - 0x410], edx	      7666	option.c	FUNCTION_43	FOR_1
0x7ff5	            0xeb01	                           jmp 0x4008038	      7666	option.c	FUNCTION_43	FOR_1
0x7ff7	              0x90	                                     nop	      7657	option.c	FUNCTION_43	FOR_1	IF_2	IF_4
0x7ff8	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      7668	option.c	FUNCTION_43	FOR_1	IF_7
0x7fff	           0xfb600	                   movzx eax, byte [rax]	      7668	option.c	FUNCTION_43	FOR_1	IF_7
0x8002	            0x84c0	                             test al, al	      7668	option.c	FUNCTION_43	FOR_1	IF_7
0x8004	            0x7462	                            je 0x40080a8	      7668	option.c	FUNCTION_43	FOR_1	IF_7
0x8006	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      7670	option.c	FUNCTION_43	FOR_1	IF_8
0x800d	           0xfb600	                   movzx eax, byte [rax]	      7670	option.c	FUNCTION_43	FOR_1	IF_8
0x8010	            0x3c2c	                            cmp al, 0x2c	      7670	option.c	FUNCTION_43	FOR_1	IF_8
0x8012	            0x740a	                            je 0x400805e	      7670	option.c	FUNCTION_43	FOR_1	IF_8
0x8014	      0xb800000000	                              mov eax, 0	      7671	option.c	FUNCTION_43	FOR_1	IF_8
0x8019	      0xe9a4010000	                           jmp 0x4008202	      7671	option.c	FUNCTION_43	FOR_1	IF_8
0x801e	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      7672	option.c	FUNCTION_43	FOR_1	IF_9
0x8025	        0x4883c001	                              add rax, 1	      7672	option.c	FUNCTION_43	FOR_1	IF_9
0x8029	    0x488985e8fbff	            mov qword [rbp - 0x418], rax	      7672	option.c	FUNCTION_43	FOR_1	IF_9
0x8030	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      7672	option.c	FUNCTION_43	FOR_1	IF_9
0x8037	           0xfb600	                   movzx eax, byte [rax]	      7672	option.c	FUNCTION_43	FOR_1	IF_9
0x803a	            0x84c0	                             test al, al	      7672	option.c	FUNCTION_43	FOR_1	IF_9
0x803c	            0x750a	                           jne 0x4008088	      7672	option.c	FUNCTION_43	FOR_1	IF_9
0x803e	      0xb800000000	                              mov eax, 0	      7673	option.c	FUNCTION_43	FOR_1	IF_9
0x8043	      0xe97a010000	                           jmp 0x4008202	      7673	option.c	FUNCTION_43	FOR_1	IF_9
0x8048	    0x488b85e8fbff	            mov rax, qword [rbp - 0x418]	      7646	option.c	FUNCTION_43	FOR_1
0x804f	           0xfb600	                   movzx eax, byte [rax]	      7646	option.c	FUNCTION_43	FOR_1
0x8052	            0x84c0	                             test al, al	      7646	option.c	FUNCTION_43	FOR_1
0x8054	            0x7413	                            je 0x40080a9	      7646	option.c	FUNCTION_43	FOR_1
0x8056	    0x81bddcfbffff	          cmp dword [rbp - 0x424], 0xfe 	      7646	option.c	FUNCTION_43	FOR_1
0x8060	     0xf8e5ffeffff	                           jle 0x4007f05	      7646	option.c	FUNCTION_43	FOR_1
0x8066	            0xeb01	                           jmp 0x40080a9	      7646	option.c	FUNCTION_43	FOR_1
0x8068	              0x90	                                     nop	      7669	option.c	FUNCTION_43	FOR_1	IF_7
0x8069	    0x488b85c8fbff	            mov rax, qword [rbp - 0x438]	      7676	option.c	FUNCTION_43	CALL_5
0x8070	    0x488b80380500	           mov rax, qword [rax + 0x538] 	      7676	option.c	FUNCTION_43	CALL_5
0x8077	          0x4889c7	                            mov rdi, rax	      7676	option.c	FUNCTION_43	CALL_5
0x807a	      0xe800000000	                          call 0x40080bf	      7676	option.c	FUNCTION_43	CALL_5
0x807f	    0x83bddcfbffff	              cmp dword [rbp - 0x424], 0	      7677	option.c	FUNCTION_43	IF_10
0x8086	            0x7517	                           jne 0x40080df	      7677	option.c	FUNCTION_43	IF_10
0x8088	    0x488b85c8fbff	            mov rax, qword [rbp - 0x438]	      7678	option.c	FUNCTION_43	IF_10
0x808f	    0x48c780380500	              mov qword [rax + 0x538], 0	      7678	option.c	FUNCTION_43	IF_10
0x809a	      0xe91e010000	                           jmp 0x40081fd	      7678	option.c	FUNCTION_43	IF_10
0x809f	    0x8b85dcfbffff	            mov eax, dword [rbp - 0x424]	      7681	option.c	FUNCTION_43	ELSE_3	CALL_6
0x80a5	          0x83c001	                              add eax, 1	      7681	option.c	FUNCTION_43	ELSE_3	CALL_6
0x80a8	          0xc1e002	                              shl eax, 2	      7681	option.c	FUNCTION_43	ELSE_3	CALL_6
0x80ab	            0x89c7	                            mov edi, eax	      7681	option.c	FUNCTION_43	ELSE_3	CALL_6
0x80ad	      0xe800000000	                          call 0x40080f2	      7681	option.c	FUNCTION_43	ELSE_3	CALL_6
0x80b2	          0x4889c2	                            mov rdx, rax	      7681	option.c	FUNCTION_43	ELSE_3	CALL_6
0x80b5	    0x488b85c8fbff	            mov rax, qword [rbp - 0x438]	      7681	option.c	FUNCTION_43	ELSE_3	CALL_6
0x80bc	    0x488990380500	            mov qword [rax + 0x538], rdx	      7681	option.c	FUNCTION_43	ELSE_3	CALL_6
0x80c3	    0x488b85c8fbff	            mov rax, qword [rbp - 0x438]	      7682	option.c	FUNCTION_43	ELSE_3	IF_11
0x80ca	    0x488b80380500	           mov rax, qword [rax + 0x538] 	      7682	option.c	FUNCTION_43	ELSE_3	IF_11
0x80d1	          0x4885c0	                           test rax, rax	      7682	option.c	FUNCTION_43	ELSE_3	IF_11
0x80d4	     0xf84e3000000	                            je 0x40081fd	      7682	option.c	FUNCTION_43	ELSE_3	IF_11
0x80da	    0x8b85dcfbffff	            mov eax, dword [rbp - 0x424]	      7686	option.c	FUNCTION_43	ELSE_3	IF_11	CALL_7
0x80e0	          0x4863f0	                         movsxd rsi, eax	      7686	option.c	FUNCTION_43	ELSE_3	IF_11	CALL_7
0x80e3	    0x488d85f0fbff	                  lea rax, [rbp - 0x410]	      7686	option.c	FUNCTION_43	ELSE_3	IF_11	CALL_7
0x80ea	      0xb900000000	                              mov ecx, 0	      7686	option.c	FUNCTION_43	ELSE_3	IF_11	CALL_7
0x80ef	      0xba04000000	                              mov edx, 4	      7686	option.c	FUNCTION_43	ELSE_3	IF_11	CALL_7
0x80f4	          0x4889c7	                            mov rdi, rax	      7686	option.c	FUNCTION_43	ELSE_3	IF_11	CALL_7
0x80f7	      0xe800000000	                          call 0x400813c	      7686	option.c	FUNCTION_43	ELSE_3	IF_11	CALL_7
0x80fc	    0xc785e0fbffff	              mov dword [rbp - 0x420], 0	      7688	option.c	FUNCTION_43	ELSE_3	IF_11	FOR_2
0x8106	            0xeb7f	                           jmp 0x40081c7	      7688	option.c	FUNCTION_43	ELSE_3	IF_11	FOR_2
0x8108	    0x83bde4fbffff	              cmp dword [rbp - 0x41c], 0	      7690	option.c	FUNCTION_43	ELSE_3	IF_11	FOR_2	IF_12
0x810f	            0x7437	                            je 0x4008188	      7690	option.c	FUNCTION_43	ELSE_3	IF_11	FOR_2	IF_12
0x8111	    0x488b85c8fbff	            mov rax, qword [rbp - 0x438]	      7690	option.c	FUNCTION_43	ELSE_3	IF_11	FOR_2	IF_12
0x8118	    0x488b80380500	           mov rax, qword [rax + 0x538] 	      7690	option.c	FUNCTION_43	ELSE_3	IF_11	FOR_2	IF_12
0x811f	    0x8b95e4fbffff	            mov edx, dword [rbp - 0x41c]	      7690	option.c	FUNCTION_43	ELSE_3	IF_11	FOR_2	IF_12
0x8125	          0x4863d2	                         movsxd rdx, edx	      7690	option.c	FUNCTION_43	ELSE_3	IF_11	FOR_2	IF_12
0x8128	        0x48c1e202	                              shl rdx, 2	      7690	option.c	FUNCTION_43	ELSE_3	IF_11	FOR_2	IF_12
0x812c	        0x4883ea04	                              sub rdx, 4	      7690	option.c	FUNCTION_43	ELSE_3	IF_11	FOR_2	IF_12
0x8130	          0x4801d0	                            add rax, rdx	      7690	option.c	FUNCTION_43	ELSE_3	IF_11	FOR_2	IF_12
0x8133	            0x8b10	                    mov edx, dword [rax]	      7690	option.c	FUNCTION_43	ELSE_3	IF_11	FOR_2	IF_12
0x8135	    0x8b85e0fbffff	            mov eax, dword [rbp - 0x420]	      7690	option.c	FUNCTION_43	ELSE_3	IF_11	FOR_2	IF_12
0x813b	            0x4898	                                    cdqe	      7690	option.c	FUNCTION_43	ELSE_3	IF_11	FOR_2	IF_12
0x813d	    0x8b8485f0fbff	    mov eax, dword [rbp + rax*4 - 0x410]	      7690	option.c	FUNCTION_43	ELSE_3	IF_11	FOR_2	IF_12
0x8144	            0x39c2	                            cmp edx, eax	      7690	option.c	FUNCTION_43	ELSE_3	IF_11	FOR_2	IF_12
0x8146	            0x7438	                            je 0x40081c0	      7690	option.c	FUNCTION_43	ELSE_3	IF_11	FOR_2	IF_12
0x8148	    0x488b85c8fbff	            mov rax, qword [rbp - 0x438]	      7691	option.c	FUNCTION_43	ELSE_3	IF_11	FOR_2	IF_12
0x814f	    0x488b88380500	           mov rcx, qword [rax + 0x538] 	      7691	option.c	FUNCTION_43	ELSE_3	IF_11	FOR_2	IF_12
0x8156	    0x8b85e4fbffff	            mov eax, dword [rbp - 0x41c]	      7691	option.c	FUNCTION_43	ELSE_3	IF_11	FOR_2	IF_12
0x815c	          0x8d5001	                      lea edx, [rax + 1]	      7691	option.c	FUNCTION_43	ELSE_3	IF_11	FOR_2	IF_12
0x815f	    0x8995e4fbffff	            mov dword [rbp - 0x41c], edx	      7691	option.c	FUNCTION_43	ELSE_3	IF_11	FOR_2	IF_12
0x8165	            0x4898	                                    cdqe	      7691	option.c	FUNCTION_43	ELSE_3	IF_11	FOR_2	IF_12
0x8167	        0x48c1e002	                              shl rax, 2	      7691	option.c	FUNCTION_43	ELSE_3	IF_11	FOR_2	IF_12
0x816b	        0x488d1401	                    lea rdx, [rcx + rax]	      7691	option.c	FUNCTION_43	ELSE_3	IF_11	FOR_2	IF_12
0x816f	    0x8b85e0fbffff	            mov eax, dword [rbp - 0x420]	      7691	option.c	FUNCTION_43	ELSE_3	IF_11	FOR_2	IF_12
0x8175	            0x4898	                                    cdqe	      7691	option.c	FUNCTION_43	ELSE_3	IF_11	FOR_2	IF_12
0x8177	    0x8b8485f0fbff	    mov eax, dword [rbp + rax*4 - 0x410]	      7691	option.c	FUNCTION_43	ELSE_3	IF_11	FOR_2	IF_12
0x817e	            0x8902	                    mov dword [rdx], eax	      7691	option.c	FUNCTION_43	ELSE_3	IF_11	FOR_2	IF_12
0x8180	    0x8385e0fbffff	              add dword [rbp - 0x420], 1	      7688	option.c	FUNCTION_43	ELSE_3	IF_11	FOR_2
0x8187	    0x8b85e0fbffff	            mov eax, dword [rbp - 0x420]	      7688	option.c	FUNCTION_43	ELSE_3	IF_11	FOR_2
0x818d	    0x3b85dcfbffff	            cmp eax, dword [rbp - 0x424]	      7688	option.c	FUNCTION_43	ELSE_3	IF_11	FOR_2
0x8193	     0xf8c6fffffff	                            jl 0x4008148	      7688	option.c	FUNCTION_43	ELSE_3	IF_11	FOR_2
0x8199	    0x488b85c8fbff	            mov rax, qword [rbp - 0x438]	      7692	option.c	FUNCTION_43	ELSE_3	IF_11
0x81a0	    0x488b80380500	           mov rax, qword [rax + 0x538] 	      7692	option.c	FUNCTION_43	ELSE_3	IF_11
0x81a7	    0x8b95e4fbffff	            mov edx, dword [rbp - 0x41c]	      7692	option.c	FUNCTION_43	ELSE_3	IF_11
0x81ad	          0x4863d2	                         movsxd rdx, edx	      7692	option.c	FUNCTION_43	ELSE_3	IF_11
0x81b0	        0x48c1e202	                              shl rdx, 2	      7692	option.c	FUNCTION_43	ELSE_3	IF_11
0x81b4	          0x4801d0	                            add rax, rdx	      7692	option.c	FUNCTION_43	ELSE_3	IF_11
0x81b7	    0xc700ffffffff	            mov dword [rax], 0xffffffff 	      7692	option.c	FUNCTION_43	ELSE_3	IF_11
0x81bd	      0xb800000000	                              mov eax, 0	      7696	option.c	FUNCTION_43
0x81c2	        0x488b4df8	                mov rcx, qword [rbp - 8]	      7697	option.c	FUNCTION_43
0x81c6	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      7697	option.c	FUNCTION_43
0x81cf	            0x7405	                            je 0x4008216	      7697	option.c	FUNCTION_43
0x81d1	      0xe800000000	                          call 0x4008216	      7697	option.c	FUNCTION_43
0x81d6	              0xc9	                                   leave	      7697	option.c	FUNCTION_43
0x81d7	              0xc3	                                     ret	      7697	option.c	FUNCTION_43
set_chars_option	WHILE,1:SWITCH,0:CALL,6:FOR,3:ELSE,3:DO,0:IF,15:functions,0	215
0x81d8	              0x55	                                push rbp	      7706	option.c	FUNCTION_44
0x81d9	          0x4889e5	                            mov rbp, rsp	      7706	option.c	FUNCTION_44
0x81dc	        0x4883ec50	                           sub rsp, 0x50	      7706	option.c	FUNCTION_44
0x81e0	        0x48897db8	             mov qword [rbp - 0x48], rdi	      7706	option.c	FUNCTION_44
0x81e4	    0x64488b042528	                mov rax, qword fs:[0x28]	      7706	option.c	FUNCTION_44
0x81ed	        0x488945f8	                mov qword [rbp - 8], rax	      7706	option.c	FUNCTION_44
0x81f1	            0x31c0	                            xor eax, eax	      7706	option.c	FUNCTION_44
0x81f3	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      7709	option.c	FUNCTION_44
0x81fa	    0x48817db80000	               cmp qword [rbp - 0x48], 0	      7740	option.c	FUNCTION_44	IF_1
0x8202	            0x7511	                           jne 0x4008255	      7740	option.c	FUNCTION_44	IF_1
0x8204	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      7742	option.c	FUNCTION_44	IF_1
0x820c	    0xc745d0080000	               mov dword [rbp - 0x30], 8	      7743	option.c	FUNCTION_44	IF_1
0x8213	            0xeb0f	                           jmp 0x4008264	      7743	option.c	FUNCTION_44	IF_1
0x8215	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      7747	option.c	FUNCTION_44	ELSE_1
0x821d	    0xc745d0050000	               mov dword [rbp - 0x30], 5	      7748	option.c	FUNCTION_44	ELSE_1
0x8224	    0xc745c8000000	               mov dword [rbp - 0x38], 0	      7752	option.c	FUNCTION_44	FOR_1
0x822b	      0xe98d020000	                           jmp 0x40084fd	      7752	option.c	FUNCTION_44	FOR_1
0x8230	        0x837dc800	               cmp dword [rbp - 0x38], 0	      7754	option.c	FUNCTION_44	FOR_1	IF_2
0x8234	            0x7e7e	                           jle 0x40082f4	      7754	option.c	FUNCTION_44	FOR_1	IF_2
0x8236	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      7758	option.c	FUNCTION_44	FOR_1	IF_2	FOR_2
0x823d	            0xeb4d	                           jmp 0x40082cc	      7758	option.c	FUNCTION_44	FOR_1	IF_2	FOR_2
0x823f	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      7759	option.c	FUNCTION_44	FOR_1	IF_2	FOR_2	IF_3
0x8242	            0x4898	                                    cdqe	      7759	option.c	FUNCTION_44	FOR_1	IF_2	FOR_2	IF_3
0x8244	        0x48c1e004	                              shl rax, 4	      7759	option.c	FUNCTION_44	FOR_1	IF_2	FOR_2	IF_3
0x8248	          0x4889c2	                            mov rdx, rax	      7759	option.c	FUNCTION_44	FOR_1	IF_2	FOR_2	IF_3
0x824b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7759	option.c	FUNCTION_44	FOR_1	IF_2	FOR_2	IF_3
0x824f	          0x4801d0	                            add rax, rdx	      7759	option.c	FUNCTION_44	FOR_1	IF_2	FOR_2	IF_3
0x8252	          0x488b00	                    mov rax, qword [rax]	      7759	option.c	FUNCTION_44	FOR_1	IF_2	FOR_2	IF_3
0x8255	          0x4885c0	                           test rax, rax	      7759	option.c	FUNCTION_44	FOR_1	IF_2	FOR_2	IF_3
0x8258	            0x742e	                            je 0x40082c8	      7759	option.c	FUNCTION_44	FOR_1	IF_2	FOR_2	IF_3
0x825a	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      7760	option.c	FUNCTION_44	FOR_1	IF_2	FOR_2	IF_3
0x825d	            0x4898	                                    cdqe	      7760	option.c	FUNCTION_44	FOR_1	IF_2	FOR_2	IF_3
0x825f	        0x48c1e004	                              shl rax, 4	      7760	option.c	FUNCTION_44	FOR_1	IF_2	FOR_2	IF_3
0x8263	          0x4889c2	                            mov rdx, rax	      7760	option.c	FUNCTION_44	FOR_1	IF_2	FOR_2	IF_3
0x8266	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7760	option.c	FUNCTION_44	FOR_1	IF_2	FOR_2	IF_3
0x826a	          0x4801d0	                            add rax, rdx	      7760	option.c	FUNCTION_44	FOR_1	IF_2	FOR_2	IF_3
0x826d	          0x488b00	                    mov rax, qword [rax]	      7760	option.c	FUNCTION_44	FOR_1	IF_2	FOR_2	IF_3
0x8270	    0x48817db80000	               cmp qword [rbp - 0x48], 0	      7760	option.c	FUNCTION_44	FOR_1	IF_2	FOR_2	IF_3
0x8278	            0x7507	                           jne 0x40082c1	      7760	option.c	FUNCTION_44	FOR_1	IF_2	FOR_2	IF_3
0x827a	      0xba00000000	                              mov edx, 0	      7760	option.c	FUNCTION_44	FOR_1	IF_2	FOR_2	IF_3
0x827f	            0xeb05	                           jmp 0x40082c6	      7760	option.c	FUNCTION_44	FOR_1	IF_2	FOR_2	IF_3
0x8281	      0xba20000000	                           mov edx, 0x20	      7760	option.c	FUNCTION_44	FOR_1	IF_2	FOR_2	IF_3
0x8286	            0x8910	                    mov dword [rax], edx	      7760	option.c	FUNCTION_44	FOR_1	IF_2	FOR_2	IF_3
0x8288	        0x8345cc01	               add dword [rbp - 0x34], 1	      7758	option.c	FUNCTION_44	FOR_1	IF_2	FOR_2
0x828c	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      7758	option.c	FUNCTION_44	FOR_1	IF_2	FOR_2
0x828f	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	      7758	option.c	FUNCTION_44	FOR_1	IF_2	FOR_2
0x8292	            0x7cab	                            jl 0x400827f	      7758	option.c	FUNCTION_44	FOR_1	IF_2	FOR_2
0x8294	    0x48817db80000	               cmp qword [rbp - 0x48], 0	      7761	option.c	FUNCTION_44	FOR_1	IF_2	IF_4
0x829c	            0x750c	                           jne 0x40082ea	      7761	option.c	FUNCTION_44	FOR_1	IF_2	IF_4
0x829e	    0xc70500000000	               mov dword [0x040082e8], 0	      7762	option.c	FUNCTION_44	FOR_1	IF_2	IF_4
0x82a8	            0xeb0a	                           jmp 0x40082f4	      7762	option.c	FUNCTION_44	FOR_1	IF_2	IF_4
0x82aa	    0xc70500000000	           mov dword [0x040082f4], 0x2d 	      7764	option.c	FUNCTION_44	FOR_1	IF_2	ELSE_2
0x82b4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      7766	option.c	FUNCTION_44	FOR_1	ELSE_2
0x82b8	          0x488b00	                    mov rax, qword [rax]	      7766	option.c	FUNCTION_44	FOR_1	ELSE_2
0x82bb	        0x488945e8	             mov qword [rbp - 0x18], rax	      7766	option.c	FUNCTION_44	FOR_1	ELSE_2
0x82bf	      0xe9e6010000	                           jmp 0x40084ea	      7767	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1
0x82c4	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      7769	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3
0x82cb	      0xe9af010000	                           jmp 0x40084bf	      7769	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3
0x82d0	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      7771	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	CALL_1
0x82d3	            0x4898	                                    cdqe	      7771	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	CALL_1
0x82d5	        0x48c1e004	                              shl rax, 4	      7771	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	CALL_1
0x82d9	          0x4889c2	                            mov rdx, rax	      7771	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	CALL_1
0x82dc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7771	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	CALL_1
0x82e0	          0x4801d0	                            add rax, rdx	      7771	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	CALL_1
0x82e3	        0x488b4008	                mov rax, qword [rax + 8]	      7771	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	CALL_1
0x82e7	          0x4889c7	                            mov rdi, rax	      7771	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	CALL_1
0x82ea	      0xe800000000	                          call 0x400832f	      7771	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	CALL_1
0x82ef	          0x8945d8	             mov dword [rbp - 0x28], eax	      7771	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	CALL_1
0x82f2	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      7772	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_2
0x82f5	          0x4863d0	                         movsxd rdx, eax	      7772	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_2
0x82f8	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      7772	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_2
0x82fb	            0x4898	                                    cdqe	      7772	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_2
0x82fd	        0x48c1e004	                              shl rax, 4	      7772	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_2
0x8301	          0x4889c1	                            mov rcx, rax	      7772	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_2
0x8304	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7772	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_2
0x8308	          0x4801c8	                            add rax, rcx	      7772	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_2
0x830b	        0x488b4808	                mov rcx, qword [rax + 8]	      7772	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_2
0x830f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7772	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_2
0x8313	          0x4889ce	                            mov rsi, rcx	      7772	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_2
0x8316	          0x4889c7	                            mov rdi, rax	      7772	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_2
0x8319	      0xe800000000	                          call 0x400835e	      7772	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_2
0x831e	            0x85c0	                           test eax, eax	      7772	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_2
0x8320	     0xf8555010000	                           jne 0x40084bb	      7772	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_2
0x8326	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      7773	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x8329	          0x4863d0	                         movsxd rdx, eax	      7773	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x832c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7773	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x8330	          0x4801d0	                            add rax, rdx	      7773	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x8333	           0xfb600	                   movzx eax, byte [rax]	      7773	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x8336	            0x3c3a	                            cmp al, 0x3a	      7773	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x8338	     0xf853d010000	                           jne 0x40084bb	      7773	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x833e	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      7774	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x8341	            0x4898	                                    cdqe	      7774	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x8343	        0x488d5001	                      lea rdx, [rax + 1]	      7774	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x8347	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7774	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x834b	          0x4801d0	                            add rax, rdx	      7774	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x834e	           0xfb600	                   movzx eax, byte [rax]	      7774	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x8351	            0x84c0	                             test al, al	      7774	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x8353	     0xf8422010000	                            je 0x40084bb	      7774	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x8359	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      7776	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x835c	            0x4898	                                    cdqe	      7776	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x835e	        0x488d5001	                      lea rdx, [rax + 1]	      7776	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x8362	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7776	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x8366	          0x4801d0	                            add rax, rdx	      7776	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x8369	        0x488945e0	             mov qword [rbp - 0x20], rax	      7776	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5
0x836d	        0x488d45e0	                   lea rax, [rbp - 0x20]	      7778	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_3
0x8371	          0x4889c7	                            mov rdi, rax	      7778	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_3
0x8374	      0xe800000000	                          call 0x40083b9	      7778	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_3
0x8379	          0x8945dc	             mov dword [rbp - 0x24], eax	      7778	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	CALL_3
0x837c	    0x488b05000000	            mov rax, qword [0x040083c3] 	      7779	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_6	CALL_4
0x8383	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      7779	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_6	CALL_4
0x8386	            0x89d7	                            mov edi, edx	      7779	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_6	CALL_4
0x8388	            0xffd0	                                call rax	      7779	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_6	CALL_4
0x838a	          0x83f801	                              cmp eax, 1	      7779	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_6	CALL_4
0x838d	     0xf8fe1000000	                            jg 0x40084b4	      7779	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_6	CALL_4
0x8393	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      7784	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7
0x8396	            0x4898	                                    cdqe	      7784	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7
0x8398	        0x48c1e004	                              shl rax, 4	      7784	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7
0x839c	          0x4889c2	                            mov rdx, rax	      7784	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7
0x839f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7784	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7
0x83a3	          0x4801d0	                            add rax, rdx	      7784	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7
0x83a6	          0x488b00	                    mov rax, qword [rax]	      7784	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7
0x83a9	    0x483d00000000	                              cmp rax, 0	      7784	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7
0x83af	            0x7535	                           jne 0x4008426	      7784	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7
0x83b1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7786	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	IF_8
0x83b5	           0xfb600	                   movzx eax, byte [rax]	      7786	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	IF_8
0x83b8	            0x84c0	                             test al, al	      7786	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	IF_8
0x83ba	     0xf84b7000000	                            je 0x40084b7	      7786	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	IF_8
0x83c0	        0x488d45e0	                   lea rax, [rbp - 0x20]	      7789	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	CALL_5
0x83c4	          0x4889c7	                            mov rdi, rax	      7789	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	CALL_5
0x83c7	      0xe800000000	                          call 0x400840c	      7789	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	CALL_5
0x83cc	          0x8945d4	             mov dword [rbp - 0x2c], eax	      7789	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	CALL_5
0x83cf	    0x488b05000000	            mov rax, qword [0x04008416] 	      7790	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	IF_9	CALL_6
0x83d6	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      7790	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	IF_9	CALL_6
0x83d9	            0x89d7	                            mov edi, edx	      7790	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	IF_9	CALL_6
0x83db	            0xffd0	                                call rax	      7790	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	IF_9	CALL_6
0x83dd	          0x83f801	                              cmp eax, 1	      7790	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	IF_9	CALL_6
0x83e0	     0xf8f94000000	                            jg 0x40084ba	      7790	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	IF_9	CALL_6
0x83e6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7796	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10
0x83ea	           0xfb600	                   movzx eax, byte [rax]	      7796	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10
0x83ed	            0x3c2c	                            cmp al, 0x2c	      7796	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10
0x83ef	            0x740b	                            je 0x400843c	      7796	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10
0x83f1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7796	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10
0x83f5	           0xfb600	                   movzx eax, byte [rax]	      7796	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10
0x83f8	            0x84c0	                             test al, al	      7796	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10
0x83fa	            0x757f	                           jne 0x40084bb	      7796	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10
0x83fc	        0x837dc800	               cmp dword [rbp - 0x38], 0	      7798	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11
0x8400	            0x7468	                            je 0x40084aa	      7798	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11
0x8402	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      7800	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	IF_12
0x8405	            0x4898	                                    cdqe	      7800	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	IF_12
0x8407	        0x48c1e004	                              shl rax, 4	      7800	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	IF_12
0x840b	          0x4889c2	                            mov rdx, rax	      7800	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	IF_12
0x840e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7800	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	IF_12
0x8412	          0x4801d0	                            add rax, rdx	      7800	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	IF_12
0x8415	          0x488b00	                    mov rax, qword [rax]	      7800	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	IF_12
0x8418	    0x483d00000000	                              cmp rax, 0	      7800	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	IF_12
0x841e	            0x7514	                           jne 0x4008474	      7800	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	IF_12
0x8420	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      7802	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	IF_12
0x8423	    0x890500000000	            mov dword [0x04008469], eax 	      7802	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	IF_12
0x8429	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      7803	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	IF_12
0x842c	    0x890500000000	            mov dword [0x04008472], eax 	      7803	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	IF_12
0x8432	            0xeb36	                           jmp 0x40084aa	      7803	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	IF_12
0x8434	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      7805	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	ELSE_3	IF_13
0x8437	            0x4898	                                    cdqe	      7805	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	ELSE_3	IF_13
0x8439	        0x48c1e004	                              shl rax, 4	      7805	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	ELSE_3	IF_13
0x843d	          0x4889c2	                            mov rdx, rax	      7805	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	ELSE_3	IF_13
0x8440	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7805	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	ELSE_3	IF_13
0x8444	          0x4801d0	                            add rax, rdx	      7805	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	ELSE_3	IF_13
0x8447	          0x488b00	                    mov rax, qword [rax]	      7805	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	ELSE_3	IF_13
0x844a	          0x4885c0	                           test rax, rax	      7805	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	ELSE_3	IF_13
0x844d	            0x741b	                            je 0x40084aa	      7805	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	ELSE_3	IF_13
0x844f	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      7806	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	ELSE_3	IF_13
0x8452	            0x4898	                                    cdqe	      7806	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	ELSE_3	IF_13
0x8454	        0x48c1e004	                              shl rax, 4	      7806	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	ELSE_3	IF_13
0x8458	          0x4889c2	                            mov rdx, rax	      7806	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	ELSE_3	IF_13
0x845b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7806	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	ELSE_3	IF_13
0x845f	          0x4801d0	                            add rax, rdx	      7806	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	ELSE_3	IF_13
0x8462	          0x488b00	                    mov rax, qword [rax]	      7806	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	ELSE_3	IF_13
0x8465	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      7806	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	ELSE_3	IF_13
0x8468	            0x8910	                    mov dword [rax], edx	      7806	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10	IF_11	ELSE_3	IF_13
0x846a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7809	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10
0x846e	        0x488945e8	             mov qword [rbp - 0x18], rax	      7809	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10
0x8472	            0xeb17	                           jmp 0x40084cb	      7810	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_10
0x8474	              0x90	                                     nop	      7780	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_6
0x8475	            0xeb04	                           jmp 0x40084bb	      7780	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_6
0x8477	              0x90	                                     nop	      7787	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	IF_8
0x8478	            0xeb01	                           jmp 0x40084bb	      7787	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	IF_8
0x847a	              0x90	                                     nop	      7791	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3	IF_5	IF_7	IF_9
0x847b	        0x8345cc01	               add dword [rbp - 0x34], 1	      7769	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3
0x847f	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      7769	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3
0x8482	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	      7769	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3
0x8485	     0xf8c45feffff	                            jl 0x4008310	      7769	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	FOR_3
0x848b	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      7815	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	IF_14
0x848e	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	      7815	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	IF_14
0x8491	            0x7507	                           jne 0x40084da	      7815	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	IF_14
0x8493	      0xb800000000	                              mov eax, 0	      7816	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	IF_14
0x8498	            0xeb32	                           jmp 0x400850c	      7816	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	IF_14
0x849a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7817	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	IF_15
0x849e	           0xfb600	                   movzx eax, byte [rax]	      7817	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	IF_15
0x84a1	            0x3c2c	                            cmp al, 0x2c	      7817	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	IF_15
0x84a3	            0x7505	                           jne 0x40084ea	      7817	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	IF_15
0x84a5	      0x488345e801	               add qword [rbp - 0x18], 1	      7818	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1	IF_15
0x84aa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7767	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1
0x84ae	           0xfb600	                   movzx eax, byte [rax]	      7767	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1
0x84b1	            0x84c0	                             test al, al	      7767	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1
0x84b3	     0xf850bfeffff	                           jne 0x4008304	      7767	option.c	FUNCTION_44	FOR_1	ELSE_2	WHILE_1
0x84b9	        0x8345c801	               add dword [rbp - 0x38], 1	      7752	option.c	FUNCTION_44	FOR_1
0x84bd	        0x837dc801	               cmp dword [rbp - 0x38], 1	      7752	option.c	FUNCTION_44	FOR_1
0x84c1	     0xf8e69fdffff	                           jle 0x4008270	      7752	option.c	FUNCTION_44	FOR_1
0x84c7	      0xb800000000	                              mov eax, 0	      7822	option.c	FUNCTION_44
0x84cc	        0x488b75f8	                mov rsi, qword [rbp - 8]	      7823	option.c	FUNCTION_44
0x84d0	    0x644833342528	                xor rsi, qword fs:[0x28]	      7823	option.c	FUNCTION_44
0x84d9	            0x7405	                            je 0x4008520	      7823	option.c	FUNCTION_44
0x84db	      0xe800000000	                          call 0x4008520	      7823	option.c	FUNCTION_44
0x84e0	              0xc9	                                   leave	      7823	option.c	FUNCTION_44
0x84e1	              0xc3	                                     ret	      7823	option.c	FUNCTION_44
change_compatible	WHILE,0:SWITCH,0:CALL,2:FOR,0:ELSE,0:DO,0:IF,2:functions,0	30
0x108cf	              0x55	                                push rbp	     12198	option.c	FUNCTION_102
0x108d0	          0x4889e5	                            mov rbp, rsp	     12198	option.c	FUNCTION_102
0x108d3	        0x4883ec20	                           sub rsp, 0x20	     12198	option.c	FUNCTION_102
0x108d7	          0x897dec	             mov dword [rbp - 0x14], edi	     12198	option.c	FUNCTION_102
0x108da	    0x8b0500000000	            mov eax, dword [0x04010920] 	     12201	option.c	FUNCTION_102	IF_1
0x108e0	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	     12201	option.c	FUNCTION_102	IF_1
0x108e3	            0x740e	                            je 0x4010933	     12201	option.c	FUNCTION_102	IF_1
0x108e5	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     12203	option.c	FUNCTION_102	IF_1
0x108e8	    0x890500000000	            mov dword [0x0401092e], eax 	     12203	option.c	FUNCTION_102	IF_1
0x108ee	      0xe8e0000000	                 call sym.compatible_set	     12204	option.c	FUNCTION_102	IF_1	CALL_1
0x108f3	      0xbf00000000	                              mov edi, 0	     12206	option.c	FUNCTION_102	CALL_2
0x108f8	      0xe889a4ffff	                     call sym.findoption	     12206	option.c	FUNCTION_102	CALL_2
0x108fd	          0x8945fc	                mov dword [rbp - 4], eax	     12206	option.c	FUNCTION_102	CALL_2
0x10900	        0x837dfc00	                  cmp dword [rbp - 4], 0	     12207	option.c	FUNCTION_102	IF_2
0x10904	            0x782a	                            js 0x4010970	     12207	option.c	FUNCTION_102	IF_2
0x10906	          0x8b45fc	                mov eax, dword [rbp - 4]	     12208	option.c	FUNCTION_102	IF_2
0x10909	            0x4898	                                    cdqe	     12208	option.c	FUNCTION_102	IF_2
0x1090b	        0x48c1e006	                              shl rax, 6	     12208	option.c	FUNCTION_102	IF_2
0x1090f	    0x480500000000	                              add rax, 0	     12208	option.c	FUNCTION_102	IF_2
0x10915	          0x488b00	                    mov rax, qword [rax]	     12208	option.c	FUNCTION_102	IF_2
0x10918	          0x80cc01	                                or ah, 1	     12208	option.c	FUNCTION_102	IF_2
0x1091b	          0x4889c2	                            mov rdx, rax	     12208	option.c	FUNCTION_102	IF_2
0x1091e	          0x8b45fc	                mov eax, dword [rbp - 4]	     12208	option.c	FUNCTION_102	IF_2
0x10921	            0x4898	                                    cdqe	     12208	option.c	FUNCTION_102	IF_2
0x10923	        0x48c1e006	                              shl rax, 6	     12208	option.c	FUNCTION_102	IF_2
0x10927	    0x480500000000	                              add rax, 0	     12208	option.c	FUNCTION_102	IF_2
0x1092d	          0x488910	                    mov qword [rax], rdx	     12208	option.c	FUNCTION_102	IF_2
0x10930	              0x90	                                     nop	     12209	option.c	FUNCTION_102
0x10931	              0xc9	                                   leave	     12209	option.c	FUNCTION_102
0x10932	              0xc3	                                     ret	     12209	option.c	FUNCTION_102
set_option_scriptID_idx	WHILE,0:SWITCH,0:CALL,0:FOR,0:ELSE,1:DO,0:IF,4:functions,0	65
0x8b36	              0x55	                                push rbp	      8057	option.c	FUNCTION_49
0x8b37	          0x4889e5	                            mov rbp, rsp	      8057	option.c	FUNCTION_49
0x8b3a	          0x897dec	             mov dword [rbp - 0x14], edi	      8057	option.c	FUNCTION_49
0x8b3d	          0x8975e8	             mov dword [rbp - 0x18], esi	      8057	option.c	FUNCTION_49
0x8b40	          0x8955e4	             mov dword [rbp - 0x1c], edx	      8057	option.c	FUNCTION_49
0x8b43	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      8058	option.c	FUNCTION_49
0x8b46	          0x83e006	                              and eax, 6	      8058	option.c	FUNCTION_49
0x8b49	            0x85c0	                           test eax, eax	      8058	option.c	FUNCTION_49
0x8b4b	           0xf94c0	                                 sete al	      8058	option.c	FUNCTION_49
0x8b4e	           0xfb6c0	                           movzx eax, al	      8058	option.c	FUNCTION_49
0x8b51	          0x8945f8	                mov dword [rbp - 8], eax	      8058	option.c	FUNCTION_49
0x8b54	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      8059	option.c	FUNCTION_49
0x8b57	            0x4898	                                    cdqe	      8059	option.c	FUNCTION_49
0x8b59	        0x48c1e006	                              shl rax, 6	      8059	option.c	FUNCTION_49
0x8b5d	    0x480500000000	                              add rax, 0	      8059	option.c	FUNCTION_49
0x8b63	            0x8b00	                    mov eax, dword [rax]	      8059	option.c	FUNCTION_49
0x8b65	          0x8945fc	                mov dword [rbp - 4], eax	      8059	option.c	FUNCTION_49
0x8b68	        0x837df800	                  cmp dword [rbp - 8], 0	      8063	option.c	FUNCTION_49	IF_1
0x8b6c	            0x7516	                           jne 0x4008bc4	      8063	option.c	FUNCTION_49	IF_1
0x8b6e	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      8063	option.c	FUNCTION_49	IF_1
0x8b71	          0x83e002	                              and eax, 2	      8063	option.c	FUNCTION_49	IF_1
0x8b74	            0x85c0	                           test eax, eax	      8063	option.c	FUNCTION_49	IF_1
0x8b76	            0x750c	                           jne 0x4008bc4	      8063	option.c	FUNCTION_49	IF_1
0x8b78	          0x8b45fc	                mov eax, dword [rbp - 4]	      8063	option.c	FUNCTION_49	IF_1
0x8b7b	      0x2500600000	                         and eax, 0x6000	      8063	option.c	FUNCTION_49	IF_1
0x8b80	            0x85c0	                           test eax, eax	      8063	option.c	FUNCTION_49	IF_1
0x8b82	            0x7515	                           jne 0x4008bd9	      8063	option.c	FUNCTION_49	IF_1
0x8b84	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      8064	option.c	FUNCTION_49	IF_1
0x8b87	            0x4898	                                    cdqe	      8064	option.c	FUNCTION_49	IF_1
0x8b89	        0x48c1e006	                              shl rax, 6	      8064	option.c	FUNCTION_49	IF_1
0x8b8d	    0x488d90000000	                          lea rdx, [rax]	      8064	option.c	FUNCTION_49	IF_1
0x8b94	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      8064	option.c	FUNCTION_49	IF_1
0x8b97	            0x8902	                    mov dword [rdx], eax	      8064	option.c	FUNCTION_49	IF_1
0x8b99	        0x837df800	                  cmp dword [rbp - 8], 0	      8065	option.c	FUNCTION_49	IF_2
0x8b9d	            0x750a	                           jne 0x4008be9	      8065	option.c	FUNCTION_49	IF_2
0x8b9f	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      8065	option.c	FUNCTION_49	IF_2
0x8ba2	          0x83e004	                              and eax, 4	      8065	option.c	FUNCTION_49	IF_2
0x8ba5	            0x85c0	                           test eax, eax	      8065	option.c	FUNCTION_49	IF_2
0x8ba7	            0x745b	                            je 0x4008c44	      8065	option.c	FUNCTION_49	IF_2
0x8ba9	          0x8b45fc	                mov eax, dword [rbp - 4]	      8067	option.c	FUNCTION_49	IF_2	IF_3
0x8bac	      0x2500400000	                         and eax, 0x4000	      8067	option.c	FUNCTION_49	IF_2	IF_3
0x8bb1	            0x85c0	                           test eax, eax	      8067	option.c	FUNCTION_49	IF_2	IF_3
0x8bb3	            0x7423	                            je 0x4008c18	      8067	option.c	FUNCTION_49	IF_2	IF_3
0x8bb5	    0x488b05000000	            mov rax, qword [0x04008bfc] 	      8068	option.c	FUNCTION_49	IF_2	IF_3
0x8bbc	          0x8b55fc	                mov edx, dword [rbp - 4]	      8068	option.c	FUNCTION_49	IF_2	IF_3
0x8bbf	    0x81e2ff0f0000	                          and edx, 0xfff	      8068	option.c	FUNCTION_49	IF_2	IF_3
0x8bc5	          0x4863d2	                         movsxd rdx, edx	      8068	option.c	FUNCTION_49	IF_2	IF_3
0x8bc8	    0x488d8aa40400	                  lea rcx, [rdx + 0x4a4]	      8068	option.c	FUNCTION_49	IF_2	IF_3
0x8bcf	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      8068	option.c	FUNCTION_49	IF_2	IF_3
0x8bd2	        0x8954880c	      mov dword [rax + rcx*4 + 0xc], edx	      8068	option.c	FUNCTION_49	IF_2	IF_3
0x8bd6	            0xeb2c	                           jmp 0x4008c44	      8072	option.c	FUNCTION_49
0x8bd8	          0x8b45fc	                mov eax, dword [rbp - 4]	      8069	option.c	FUNCTION_49	IF_2	ELSE_1	IF_4
0x8bdb	      0x2500200000	                         and eax, 0x2000	      8069	option.c	FUNCTION_49	IF_2	ELSE_1	IF_4
0x8be0	            0x85c0	                           test eax, eax	      8069	option.c	FUNCTION_49	IF_2	ELSE_1	IF_4
0x8be2	            0x7420	                            je 0x4008c44	      8069	option.c	FUNCTION_49	IF_2	ELSE_1	IF_4
0x8be4	    0x488b05000000	            mov rax, qword [0x04008c2b] 	      8070	option.c	FUNCTION_49	IF_2	ELSE_1	IF_4
0x8beb	          0x8b55fc	                mov edx, dword [rbp - 4]	      8070	option.c	FUNCTION_49	IF_2	ELSE_1	IF_4
0x8bee	    0x81e2ff0f0000	                          and edx, 0xfff	      8070	option.c	FUNCTION_49	IF_2	ELSE_1	IF_4
0x8bf4	          0x4863d2	                         movsxd rdx, edx	      8070	option.c	FUNCTION_49	IF_2	ELSE_1	IF_4
0x8bf7	    0x488d8ab40000	                   lea rcx, [rdx + 0xb4]	      8070	option.c	FUNCTION_49	IF_2	ELSE_1	IF_4
0x8bfe	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      8070	option.c	FUNCTION_49	IF_2	ELSE_1	IF_4
0x8c01	          0x891488	            mov dword [rax + rcx*4], edx	      8070	option.c	FUNCTION_49	IF_2	ELSE_1	IF_4
0x8c04	              0x90	                                     nop	      8072	option.c	FUNCTION_49
0x8c05	              0x5d	                                 pop rbp	      8072	option.c	FUNCTION_49
0x8c06	              0xc3	                                     ret	      8072	option.c	FUNCTION_49
set_title_defaults	WHILE,0:SWITCH,0:CALL,4:FOR,0:ELSE,2:DO,0:IF,4:functions,0	54
0x1288	              0x55	                                push rbp	      4251	option.c	FUNCTION_14
0x1289	          0x4889e5	                            mov rbp, rsp	      4251	option.c	FUNCTION_14
0x128c	        0x4883ec10	                           sub rsp, 0x10	      4251	option.c	FUNCTION_14
0x1290	      0xbf00000000	                              mov edi, 0	      4260	option.c	FUNCTION_14	CALL_1
0x1295	      0xe8ec9a0000	                     call sym.findoption	      4260	option.c	FUNCTION_14	CALL_1
0x129a	          0x8945f4	              mov dword [rbp - 0xc], eax	      4260	option.c	FUNCTION_14	CALL_1
0x129d	        0x837df400	                cmp dword [rbp - 0xc], 0	      4261	option.c	FUNCTION_14	IF_1
0x12a1	            0x7849	                            js 0x400132c	      4261	option.c	FUNCTION_14	IF_1
0x12a3	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      4261	option.c	FUNCTION_14	IF_1
0x12a6	            0x4898	                                    cdqe	      4261	option.c	FUNCTION_14	IF_1
0x12a8	        0x48c1e006	                              shl rax, 6	      4261	option.c	FUNCTION_14	IF_1
0x12ac	    0x480500000000	                              add rax, 0	      4261	option.c	FUNCTION_14	IF_1
0x12b2	          0x488b00	                    mov rax, qword [rax]	      4261	option.c	FUNCTION_14	IF_1
0x12b5	      0x2500010000	                          and eax, 0x100	      4261	option.c	FUNCTION_14	IF_1
0x12ba	          0x4885c0	                           test rax, rax	      4261	option.c	FUNCTION_14	IF_1
0x12bd	            0x752d	                           jne 0x400132c	      4261	option.c	FUNCTION_14	IF_1
0x12bf	      0xe800000000	                          call 0x4001304	      4268	option.c	FUNCTION_14	IF_1	CALL_2
0x12c4	            0x4898	                                    cdqe	      4268	option.c	FUNCTION_14	IF_1	CALL_2
0x12c6	        0x488945f8	                mov qword [rbp - 8], rax	      4268	option.c	FUNCTION_14	IF_1	CALL_2
0x12ca	        0x488b45f8	                mov rax, qword [rbp - 8]	      4269	option.c	FUNCTION_14	IF_1
0x12ce	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      4269	option.c	FUNCTION_14	IF_1
0x12d1	          0x4863d2	                         movsxd rdx, edx	      4269	option.c	FUNCTION_14	IF_1
0x12d4	        0x48c1e206	                              shl rdx, 6	      4269	option.c	FUNCTION_14	IF_1
0x12d8	    0x4881c2000000	                              add rdx, 0	      4269	option.c	FUNCTION_14	IF_1
0x12df	          0x488902	                    mov qword [rdx], rax	      4269	option.c	FUNCTION_14	IF_1
0x12e2	        0x488b45f8	                mov rax, qword [rbp - 8]	      4270	option.c	FUNCTION_14	IF_1
0x12e6	    0x890500000000	            mov dword [0x0400132c], eax 	      4270	option.c	FUNCTION_14	IF_1
0x12ec	      0xbf00000000	                              mov edi, 0	      4272	option.c	FUNCTION_14	CALL_3
0x12f1	      0xe8909a0000	                     call sym.findoption	      4272	option.c	FUNCTION_14	CALL_3
0x12f6	          0x8945f4	              mov dword [rbp - 0xc], eax	      4272	option.c	FUNCTION_14	CALL_3
0x12f9	        0x837df400	                cmp dword [rbp - 0xc], 0	      4273	option.c	FUNCTION_14	IF_3
0x12fd	            0x7849	                            js 0x4001388	      4273	option.c	FUNCTION_14	IF_3
0x12ff	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      4273	option.c	FUNCTION_14	IF_3
0x1302	            0x4898	                                    cdqe	      4273	option.c	FUNCTION_14	IF_3
0x1304	        0x48c1e006	                              shl rax, 6	      4273	option.c	FUNCTION_14	IF_3
0x1308	    0x480500000000	                              add rax, 0	      4273	option.c	FUNCTION_14	IF_3
0x130e	          0x488b00	                    mov rax, qword [rax]	      4273	option.c	FUNCTION_14	IF_3
0x1311	      0x2500010000	                          and eax, 0x100	      4273	option.c	FUNCTION_14	IF_3
0x1316	          0x4885c0	                           test rax, rax	      4273	option.c	FUNCTION_14	IF_3
0x1319	            0x752d	                           jne 0x4001388	      4273	option.c	FUNCTION_14	IF_3
0x131b	      0xe800000000	                          call 0x4001360	      4280	option.c	FUNCTION_14	IF_3	CALL_4
0x1320	            0x4898	                                    cdqe	      4280	option.c	FUNCTION_14	IF_3	CALL_4
0x1322	        0x488945f8	                mov qword [rbp - 8], rax	      4280	option.c	FUNCTION_14	IF_3	CALL_4
0x1326	        0x488b45f8	                mov rax, qword [rbp - 8]	      4281	option.c	FUNCTION_14	IF_3
0x132a	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      4281	option.c	FUNCTION_14	IF_3
0x132d	          0x4863d2	                         movsxd rdx, edx	      4281	option.c	FUNCTION_14	IF_3
0x1330	        0x48c1e206	                              shl rdx, 6	      4281	option.c	FUNCTION_14	IF_3
0x1334	    0x4881c2000000	                              add rdx, 0	      4281	option.c	FUNCTION_14	IF_3
0x133b	          0x488902	                    mov qword [rdx], rax	      4281	option.c	FUNCTION_14	IF_3
0x133e	        0x488b45f8	                mov rax, qword [rbp - 8]	      4282	option.c	FUNCTION_14	IF_3
0x1342	    0x890500000000	            mov dword [0x04001388], eax 	      4282	option.c	FUNCTION_14	IF_3
0x1348	              0x90	                                     nop	      4284	option.c	FUNCTION_14
0x1349	              0xc9	                                   leave	      4284	option.c	FUNCTION_14
0x134a	              0xc3	                                     ret	      4284	option.c	FUNCTION_14
free_one_termoption	WHILE,0:SWITCH,0:CALL,1:FOR,1:ELSE,0:DO,0:IF,2:functions,0	39
0xc3db	              0x55	                                push rbp	     10282	option.c	FUNCTION_72
0xc3dc	          0x4889e5	                            mov rbp, rsp	     10282	option.c	FUNCTION_72
0xc3df	        0x4883ec20	                           sub rsp, 0x20	     10282	option.c	FUNCTION_72
0xc3e3	        0x48897de8	             mov qword [rbp - 0x18], rdi	     10282	option.c	FUNCTION_72
0xc3e7	    0x48c745f80000	                  mov qword [rbp - 8], 0	     10285	option.c	FUNCTION_72	FOR_1
0xc3ef	            0xeb61	                           jmp 0x400c492	     10285	option.c	FUNCTION_72	FOR_1
0xc3f1	        0x488b45f8	                mov rax, qword [rbp - 8]	     10286	option.c	FUNCTION_72	FOR_1	IF_1
0xc3f5	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10286	option.c	FUNCTION_72	FOR_1	IF_1
0xc3f9	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	     10286	option.c	FUNCTION_72	FOR_1	IF_1
0xc3fd	            0x754e	                           jne 0x400c48d	     10286	option.c	FUNCTION_72	FOR_1	IF_1
0xc3ff	        0x488b45f8	                mov rax, qword [rbp - 8]	     10288	option.c	FUNCTION_72	FOR_1	IF_1	IF_2
0xc403	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10288	option.c	FUNCTION_72	FOR_1	IF_1	IF_2
0xc407	          0x83e008	                              and eax, 8	     10288	option.c	FUNCTION_72	FOR_1	IF_1	IF_2
0xc40a	          0x4885c0	                           test rax, rax	     10288	option.c	FUNCTION_72	FOR_1	IF_1	IF_2
0xc40d	            0x7413	                            je 0x400c462	     10288	option.c	FUNCTION_72	FOR_1	IF_1	IF_2
0xc40f	        0x488b45f8	                mov rax, qword [rbp - 8]	     10289	option.c	FUNCTION_72	FOR_1	IF_1	CALL_1
0xc413	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10289	option.c	FUNCTION_72	FOR_1	IF_1	CALL_1
0xc417	          0x488b00	                    mov rax, qword [rax]	     10289	option.c	FUNCTION_72	FOR_1	IF_1	CALL_1
0xc41a	          0x4889c7	                            mov rdi, rax	     10289	option.c	FUNCTION_72	FOR_1	IF_1	CALL_1
0xc41d	      0xe800000000	                          call 0x400c462	     10289	option.c	FUNCTION_72	FOR_1	IF_1	CALL_1
0xc422	        0x488b45f8	                mov rax, qword [rbp - 8]	     10290	option.c	FUNCTION_72	FOR_1	IF_1
0xc426	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10290	option.c	FUNCTION_72	FOR_1	IF_1
0xc42a	    0x488b15000000	            mov rdx, qword [0x0400c471] 	     10290	option.c	FUNCTION_72	FOR_1	IF_1
0xc431	          0x488910	                    mov qword [rax], rdx	     10290	option.c	FUNCTION_72	FOR_1	IF_1
0xc434	        0x488b45f8	                mov rax, qword [rbp - 8]	     10291	option.c	FUNCTION_72	FOR_1	IF_1
0xc438	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10291	option.c	FUNCTION_72	FOR_1	IF_1
0xc43c	        0x4883e0f7	             and rax, 0xfffffffffffffff7	     10291	option.c	FUNCTION_72	FOR_1	IF_1
0xc440	          0x4889c2	                            mov rdx, rax	     10291	option.c	FUNCTION_72	FOR_1	IF_1
0xc443	        0x488b45f8	                mov rax, qword [rbp - 8]	     10291	option.c	FUNCTION_72	FOR_1	IF_1
0xc447	        0x48895010	             mov qword [rax + 0x10], rdx	     10291	option.c	FUNCTION_72	FOR_1	IF_1
0xc44b	            0xeb11	                           jmp 0x400c49e	     10292	option.c	FUNCTION_72	FOR_1	IF_1
0xc44d	      0x488345f840	               add qword [rbp - 8], 0x40	     10285	option.c	FUNCTION_72	FOR_1
0xc452	        0x488b45f8	                mov rax, qword [rbp - 8]	     10285	option.c	FUNCTION_72	FOR_1
0xc456	          0x488b00	                    mov rax, qword [rax]	     10285	option.c	FUNCTION_72	FOR_1
0xc459	          0x4885c0	                           test rax, rax	     10285	option.c	FUNCTION_72	FOR_1
0xc45c	            0x7593	                           jne 0x400c431	     10285	option.c	FUNCTION_72	FOR_1
0xc45e	              0x90	                                     nop	     10294	option.c	FUNCTION_72
0xc45f	              0xc9	                                   leave	     10294	option.c	FUNCTION_72
0xc460	              0xc3	                                     ret	     10294	option.c	FUNCTION_72
put_setstring	WHILE,1:SWITCH,0:CALL,10:FOR,0:ELSE,2:DO,0:IF,9:functions,0	110
0xbfeb	              0x55	                                push rbp	     10148	option.c	FUNCTION_67
0xbfec	          0x4889e5	                            mov rbp, rsp	     10148	option.c	FUNCTION_67
0xbfef	        0x4883ec50	                           sub rsp, 0x50	     10148	option.c	FUNCTION_67
0xbff3	        0x48897dd8	             mov qword [rbp - 0x28], rdi	     10148	option.c	FUNCTION_67
0xbff7	        0x488975d0	             mov qword [rbp - 0x30], rsi	     10148	option.c	FUNCTION_67
0xbffb	        0x488955c8	             mov qword [rbp - 0x38], rdx	     10148	option.c	FUNCTION_67
0xbfff	        0x48894dc0	             mov qword [rbp - 0x40], rcx	     10148	option.c	FUNCTION_67
0xc003	        0x448945bc	             mov dword [rbp - 0x44], r8d	     10148	option.c	FUNCTION_67
0xc007	    0x64488b042528	                mov rax, qword fs:[0x28]	     10148	option.c	FUNCTION_67
0xc010	        0x488945f8	                mov qword [rbp - 8], rax	     10148	option.c	FUNCTION_67
0xc014	            0x31c0	                            xor eax, eax	     10148	option.c	FUNCTION_67
0xc016	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	     10152	option.c	FUNCTION_67	IF_1	CALL_1
0xc01a	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	     10152	option.c	FUNCTION_67	IF_1	CALL_1
0xc01e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10152	option.c	FUNCTION_67	IF_1	CALL_1
0xc022	      0xbe00000000	                              mov esi, 0	     10152	option.c	FUNCTION_67	IF_1	CALL_1
0xc027	          0x4889c7	                            mov rdi, rax	     10152	option.c	FUNCTION_67	IF_1	CALL_1
0xc02a	      0xb800000000	                              mov eax, 0	     10152	option.c	FUNCTION_67	IF_1	CALL_1
0xc02f	      0xe800000000	                          call 0x400c074	     10152	option.c	FUNCTION_67	IF_1	CALL_1
0xc034	            0x85c0	                           test eax, eax	     10152	option.c	FUNCTION_67	IF_1	CALL_1
0xc036	            0x790a	                           jns 0x400c082	     10152	option.c	FUNCTION_67	IF_1	CALL_1
0xc038	      0xb800000000	                              mov eax, 0	     10153	option.c	FUNCTION_67	IF_1
0xc03d	      0xe934010000	                           jmp 0x400c1b6	     10153	option.c	FUNCTION_67	IF_1
0xc042	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     10154	option.c	FUNCTION_67	IF_2
0xc046	          0x488b00	                    mov rax, qword [rax]	     10154	option.c	FUNCTION_67	IF_2
0xc049	          0x4885c0	                           test rax, rax	     10154	option.c	FUNCTION_67	IF_2
0xc04c	     0xf8408010000	                            je 0x400c19a	     10154	option.c	FUNCTION_67	IF_2
0xc052	    0x48817dc00000	               cmp qword [rbp - 0x40], 0	     10159	option.c	FUNCTION_67	IF_2	IF_3
0xc05a	            0x7553	                           jne 0x400c0ef	     10159	option.c	FUNCTION_67	IF_2	IF_3
0xc05c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     10161	option.c	FUNCTION_67	IF_2	IF_3
0xc060	          0x488b00	                    mov rax, qword [rax]	     10161	option.c	FUNCTION_67	IF_2	IF_3
0xc063	        0x488945e8	             mov qword [rbp - 0x18], rax	     10161	option.c	FUNCTION_67	IF_2	IF_3
0xc067	            0xeb36	                           jmp 0x400c0df	     10162	option.c	FUNCTION_67	IF_2	IF_3	WHILE_1
0xc069	        0x488d45e8	                   lea rax, [rbp - 0x18]	     10163	option.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4	CALL_3
0xc06d	      0xbe00000000	                              mov esi, 0	     10163	option.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4	CALL_3
0xc072	          0x4889c7	                            mov rdi, rax	     10163	option.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4	CALL_3
0xc075	      0xe800000000	                          call 0x400c0ba	     10163	option.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4	CALL_3
0xc07a	          0x4889c1	                            mov rcx, rax	     10163	option.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4	CALL_3
0xc07d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10163	option.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4	CALL_3
0xc081	      0xba02000000	                              mov edx, 2	     10163	option.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4	CALL_3
0xc086	          0x4889ce	                            mov rsi, rcx	     10163	option.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4	CALL_3
0xc089	          0x4889c7	                            mov rdi, rax	     10163	option.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4	CALL_3
0xc08c	      0xe800000000	                          call 0x400c0d1	     10163	option.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4	CALL_3
0xc091	            0x85c0	                           test eax, eax	     10163	option.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4	CALL_3
0xc093	            0x750a	                           jne 0x400c0df	     10163	option.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4	CALL_3
0xc095	      0xb800000000	                              mov eax, 0	     10164	option.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0xc09a	      0xe9d7000000	                           jmp 0x400c1b6	     10164	option.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0xc09f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10162	option.c	FUNCTION_67	IF_2	IF_3	WHILE_1
0xc0a3	           0xfb600	                   movzx eax, byte [rax]	     10162	option.c	FUNCTION_67	IF_2	IF_3	WHILE_1
0xc0a6	            0x84c0	                             test al, al	     10162	option.c	FUNCTION_67	IF_2	IF_3	WHILE_1
0xc0a8	            0x75bf	                           jne 0x400c0a9	     10162	option.c	FUNCTION_67	IF_2	IF_3	WHILE_1
0xc0aa	      0xe9ab000000	                           jmp 0x400c19a	     10162	option.c	FUNCTION_67	IF_2	IF_3	WHILE_1
0xc0af	        0x837dbc00	               cmp dword [rbp - 0x44], 0	     10166	option.c	FUNCTION_67	IF_2	ELSE_1	IF_5
0xc0b3	            0x747f	                            je 0x400c174	     10166	option.c	FUNCTION_67	IF_2	ELSE_1	IF_5
0xc0b5	      0xbf00100000	                         mov edi, 0x1000	     10168	option.c	FUNCTION_67	IF_2	ELSE_1	IF_5	CALL_4
0xc0ba	      0xe800000000	                          call 0x400c0ff	     10168	option.c	FUNCTION_67	IF_2	ELSE_1	IF_5	CALL_4
0xc0bf	        0x488945f0	             mov qword [rbp - 0x10], rax	     10168	option.c	FUNCTION_67	IF_2	ELSE_1	IF_5	CALL_4
0xc0c3	      0x48837df000	               cmp qword [rbp - 0x10], 0	     10169	option.c	FUNCTION_67	IF_2	ELSE_1	IF_5	IF_6
0xc0c8	            0x750a	                           jne 0x400c114	     10169	option.c	FUNCTION_67	IF_2	ELSE_1	IF_5	IF_6
0xc0ca	      0xb800000000	                              mov eax, 0	     10170	option.c	FUNCTION_67	IF_2	ELSE_1	IF_5	IF_6
0xc0cf	      0xe9a2000000	                           jmp 0x400c1b6	     10170	option.c	FUNCTION_67	IF_2	ELSE_1	IF_5	IF_6
0xc0d4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     10171	option.c	FUNCTION_67	IF_2	ELSE_1	IF_5	CALL_5
0xc0d8	          0x488b00	                    mov rax, qword [rax]	     10171	option.c	FUNCTION_67	IF_2	ELSE_1	IF_5	CALL_5
0xc0db	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	     10171	option.c	FUNCTION_67	IF_2	ELSE_1	IF_5	CALL_5
0xc0df	    0x41b800000000	                              mov r8d, 0	     10171	option.c	FUNCTION_67	IF_2	ELSE_1	IF_5	CALL_5
0xc0e5	      0xb900100000	                         mov ecx, 0x1000	     10171	option.c	FUNCTION_67	IF_2	ELSE_1	IF_5	CALL_5
0xc0ea	          0x4889c6	                            mov rsi, rax	     10171	option.c	FUNCTION_67	IF_2	ELSE_1	IF_5	CALL_5
0xc0ed	      0xbf00000000	                              mov edi, 0	     10171	option.c	FUNCTION_67	IF_2	ELSE_1	IF_5	CALL_5
0xc0f2	      0xe800000000	                          call 0x400c137	     10171	option.c	FUNCTION_67	IF_2	ELSE_1	IF_5	CALL_5
0xc0f7	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	     10172	option.c	FUNCTION_67	IF_2	ELSE_1	IF_5	IF_7	CALL_6
0xc0fb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10172	option.c	FUNCTION_67	IF_2	ELSE_1	IF_5	IF_7	CALL_6
0xc0ff	      0xba02000000	                              mov edx, 2	     10172	option.c	FUNCTION_67	IF_2	ELSE_1	IF_5	IF_7	CALL_6
0xc104	          0x4889ce	                            mov rsi, rcx	     10172	option.c	FUNCTION_67	IF_2	ELSE_1	IF_5	IF_7	CALL_6
0xc107	          0x4889c7	                            mov rdi, rax	     10172	option.c	FUNCTION_67	IF_2	ELSE_1	IF_5	IF_7	CALL_6
0xc10a	      0xe800000000	                          call 0x400c14f	     10172	option.c	FUNCTION_67	IF_2	ELSE_1	IF_5	IF_7	CALL_6
0xc10f	            0x85c0	                           test eax, eax	     10172	option.c	FUNCTION_67	IF_2	ELSE_1	IF_5	IF_7	CALL_6
0xc111	            0x7513	                           jne 0x400c166	     10172	option.c	FUNCTION_67	IF_2	ELSE_1	IF_5	IF_7	CALL_6
0xc113	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10174	option.c	FUNCTION_67	IF_2	ELSE_1	IF_5	IF_7	CALL_7
0xc117	          0x4889c7	                            mov rdi, rax	     10174	option.c	FUNCTION_67	IF_2	ELSE_1	IF_5	IF_7	CALL_7
0xc11a	      0xe800000000	                          call 0x400c15f	     10174	option.c	FUNCTION_67	IF_2	ELSE_1	IF_5	IF_7	CALL_7
0xc11f	      0xb800000000	                              mov eax, 0	     10175	option.c	FUNCTION_67	IF_2	ELSE_1	IF_5	IF_7
0xc124	            0xeb50	                           jmp 0x400c1b6	     10175	option.c	FUNCTION_67	IF_2	ELSE_1	IF_5	IF_7
0xc126	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10177	option.c	FUNCTION_67	IF_2	ELSE_1	IF_5	CALL_8
0xc12a	          0x4889c7	                            mov rdi, rax	     10177	option.c	FUNCTION_67	IF_2	ELSE_1	IF_5	CALL_8
0xc12d	      0xe800000000	                          call 0x400c172	     10177	option.c	FUNCTION_67	IF_2	ELSE_1	IF_5	CALL_8
0xc132	            0xeb26	                           jmp 0x400c19a	     10177	option.c	FUNCTION_67	IF_2	ELSE_1	IF_5	CALL_8
0xc134	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     10179	option.c	FUNCTION_67	IF_2	ELSE_2	IF_8	CALL_9
0xc138	          0x488b08	                    mov rcx, qword [rax]	     10179	option.c	FUNCTION_67	IF_2	ELSE_2	IF_8	CALL_9
0xc13b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10179	option.c	FUNCTION_67	IF_2	ELSE_2	IF_8	CALL_9
0xc13f	      0xba02000000	                              mov edx, 2	     10179	option.c	FUNCTION_67	IF_2	ELSE_2	IF_8	CALL_9
0xc144	          0x4889ce	                            mov rsi, rcx	     10179	option.c	FUNCTION_67	IF_2	ELSE_2	IF_8	CALL_9
0xc147	          0x4889c7	                            mov rdi, rax	     10179	option.c	FUNCTION_67	IF_2	ELSE_2	IF_8	CALL_9
0xc14a	      0xe800000000	                          call 0x400c18f	     10179	option.c	FUNCTION_67	IF_2	ELSE_2	IF_8	CALL_9
0xc14f	            0x85c0	                           test eax, eax	     10179	option.c	FUNCTION_67	IF_2	ELSE_2	IF_8	CALL_9
0xc151	            0x7507	                           jne 0x400c19a	     10179	option.c	FUNCTION_67	IF_2	ELSE_2	IF_8	CALL_9
0xc153	      0xb800000000	                              mov eax, 0	     10180	option.c	FUNCTION_67	IF_2	ELSE_2	IF_8
0xc158	            0xeb1c	                           jmp 0x400c1b6	     10180	option.c	FUNCTION_67	IF_2	ELSE_2	IF_8
0xc15a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10182	option.c	FUNCTION_67	IF_9	CALL_10
0xc15e	          0x4889c7	                            mov rdi, rax	     10182	option.c	FUNCTION_67	IF_9	CALL_10
0xc161	      0xe800000000	                          call 0x400c1a6	     10182	option.c	FUNCTION_67	IF_9	CALL_10
0xc166	            0x85c0	                           test eax, eax	     10182	option.c	FUNCTION_67	IF_9	CALL_10
0xc168	            0x7907	                           jns 0x400c1b1	     10182	option.c	FUNCTION_67	IF_9	CALL_10
0xc16a	      0xb800000000	                              mov eax, 0	     10183	option.c	FUNCTION_67	IF_9
0xc16f	            0xeb05	                           jmp 0x400c1b6	     10183	option.c	FUNCTION_67	IF_9
0xc171	      0xb801000000	                              mov eax, 1	     10184	option.c	FUNCTION_67
0xc176	        0x488b75f8	                mov rsi, qword [rbp - 8]	     10185	option.c	FUNCTION_67
0xc17a	    0x644833342528	                xor rsi, qword fs:[0x28]	     10185	option.c	FUNCTION_67
0xc183	            0x7405	                            je 0x400c1ca	     10185	option.c	FUNCTION_67
0xc185	      0xe800000000	                          call 0x400c1ca	     10185	option.c	FUNCTION_67
0xc18a	              0xc9	                                   leave	     10185	option.c	FUNCTION_67
0xc18b	              0xc3	                                     ret	     10185	option.c	FUNCTION_67
option_expand	WHILE,0:SWITCH,0:CALL,3:FOR,0:ELSE,0:DO,0:IF,4:functions,0	78
0x3e10	              0x55	                                push rbp	      5484	option.c	FUNCTION_25
0x3e11	          0x4889e5	                            mov rbp, rsp	      5484	option.c	FUNCTION_25
0x3e14	        0x4883ec10	                           sub rsp, 0x10	      5484	option.c	FUNCTION_25
0x3e18	          0x897dfc	                mov dword [rbp - 4], edi	      5484	option.c	FUNCTION_25
0x3e1b	        0x488975f0	             mov qword [rbp - 0x10], rsi	      5484	option.c	FUNCTION_25
0x3e1f	          0x8b45fc	                mov eax, dword [rbp - 4]	      5486	option.c	FUNCTION_25	IF_1
0x3e22	            0x4898	                                    cdqe	      5486	option.c	FUNCTION_25	IF_1
0x3e24	        0x48c1e006	                              shl rax, 6	      5486	option.c	FUNCTION_25	IF_1
0x3e28	    0x480500000000	                              add rax, 0	      5486	option.c	FUNCTION_25	IF_1
0x3e2e	          0x488b00	                    mov rax, qword [rax]	      5486	option.c	FUNCTION_25	IF_1
0x3e31	          0x83e010	                           and eax, 0x10	      5486	option.c	FUNCTION_25	IF_1
0x3e34	          0x4885c0	                           test rax, rax	      5486	option.c	FUNCTION_25	IF_1
0x3e37	            0x7417	                            je 0x4003e90	      5486	option.c	FUNCTION_25	IF_1
0x3e39	          0x8b45fc	                mov eax, dword [rbp - 4]	      5486	option.c	FUNCTION_25	IF_1
0x3e3c	            0x4898	                                    cdqe	      5486	option.c	FUNCTION_25	IF_1
0x3e3e	        0x48c1e006	                              shl rax, 6	      5486	option.c	FUNCTION_25	IF_1
0x3e42	    0x480500000000	                              add rax, 0	      5486	option.c	FUNCTION_25	IF_1
0x3e48	          0x488b00	                    mov rax, qword [rax]	      5486	option.c	FUNCTION_25	IF_1
0x3e4b	          0x4885c0	                           test rax, rax	      5486	option.c	FUNCTION_25	IF_1
0x3e4e	            0x750a	                           jne 0x4003e9a	      5486	option.c	FUNCTION_25	IF_1
0x3e50	      0xb800000000	                              mov eax, 0	      5487	option.c	FUNCTION_25	IF_1
0x3e55	      0xe9d4000000	                           jmp 0x4003f6e	      5487	option.c	FUNCTION_25	IF_1
0x3e5a	      0x48837df000	               cmp qword [rbp - 0x10], 0	      5491	option.c	FUNCTION_25	IF_2	CALL_1
0x3e5f	            0x741e	                            je 0x4003ebf	      5491	option.c	FUNCTION_25	IF_2	CALL_1
0x3e61	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5491	option.c	FUNCTION_25	IF_2	CALL_1
0x3e65	          0x4889c7	                            mov rdi, rax	      5491	option.c	FUNCTION_25	IF_2	CALL_1
0x3e68	      0xe800000000	                          call 0x4003ead	      5491	option.c	FUNCTION_25	IF_2	CALL_1
0x3e6d	    0x483d00100000	                         cmp rax, 0x1000	      5491	option.c	FUNCTION_25	IF_2	CALL_1
0x3e73	            0x760a	                           jbe 0x4003ebf	      5491	option.c	FUNCTION_25	IF_2	CALL_1
0x3e75	      0xb800000000	                              mov eax, 0	      5492	option.c	FUNCTION_25	IF_2
0x3e7a	      0xe9af000000	                           jmp 0x4003f6e	      5492	option.c	FUNCTION_25	IF_2
0x3e7f	      0x48837df000	               cmp qword [rbp - 0x10], 0	      5494	option.c	FUNCTION_25	IF_3
0x3e84	            0x7519	                           jne 0x4003edf	      5494	option.c	FUNCTION_25	IF_3
0x3e86	          0x8b45fc	                mov eax, dword [rbp - 4]	      5495	option.c	FUNCTION_25	IF_3
0x3e89	            0x4898	                                    cdqe	      5495	option.c	FUNCTION_25	IF_3
0x3e8b	        0x48c1e006	                              shl rax, 6	      5495	option.c	FUNCTION_25	IF_3
0x3e8f	    0x480500000000	                              add rax, 0	      5495	option.c	FUNCTION_25	IF_3
0x3e95	          0x488b00	                    mov rax, qword [rax]	      5495	option.c	FUNCTION_25	IF_3
0x3e98	          0x488b00	                    mov rax, qword [rax]	      5495	option.c	FUNCTION_25	IF_3
0x3e9b	        0x488945f0	             mov qword [rbp - 0x10], rax	      5495	option.c	FUNCTION_25	IF_3
0x3e9f	          0x8b45fc	                mov eax, dword [rbp - 4]	      5506	option.c	FUNCTION_25
0x3ea2	            0x4898	                                    cdqe	      5506	option.c	FUNCTION_25
0x3ea4	        0x48c1e006	                              shl rax, 6	      5506	option.c	FUNCTION_25
0x3ea8	    0x480500000000	                              add rax, 0	      5506	option.c	FUNCTION_25
0x3eae	          0x488b00	                    mov rax, qword [rax]	      5506	option.c	FUNCTION_25
0x3eb1	    0x483d00000000	                              cmp rax, 0	      5503	option.c	FUNCTION_25	CALL_2
0x3eb7	            0x7507	                           jne 0x4003f00	      5503	option.c	FUNCTION_25	CALL_2
0x3eb9	      0xb900000000	                              mov ecx, 0	      5503	option.c	FUNCTION_25	CALL_2
0x3ebe	            0xeb05	                           jmp 0x4003f05	      5503	option.c	FUNCTION_25	CALL_2
0x3ec0	      0xb900000000	                              mov ecx, 0	      5503	option.c	FUNCTION_25	CALL_2
0x3ec5	          0x8b45fc	                mov eax, dword [rbp - 4]	      5504	option.c	FUNCTION_25
0x3ec8	            0x4898	                                    cdqe	      5504	option.c	FUNCTION_25
0x3eca	        0x48c1e006	                              shl rax, 6	      5504	option.c	FUNCTION_25
0x3ece	    0x480500000000	                              add rax, 0	      5504	option.c	FUNCTION_25
0x3ed4	          0x488b00	                    mov rax, qword [rax]	      5504	option.c	FUNCTION_25
0x3ed7	    0x483d00000000	                              cmp rax, 0	      5503	option.c	FUNCTION_25	CALL_2
0x3edd	           0xf94c0	                                 sete al	      5503	option.c	FUNCTION_25	CALL_2
0x3ee0	           0xfb6d0	                           movzx edx, al	      5503	option.c	FUNCTION_25	CALL_2
0x3ee3	    0x488b35000000	            mov rsi, qword [0x04003f2a] 	      5503	option.c	FUNCTION_25	CALL_2
0x3eea	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5503	option.c	FUNCTION_25	CALL_2
0x3eee	          0x4989c9	                             mov r9, rcx	      5503	option.c	FUNCTION_25	CALL_2
0x3ef1	    0x41b800000000	                              mov r8d, 0	      5503	option.c	FUNCTION_25	CALL_2
0x3ef7	            0x89d1	                            mov ecx, edx	      5503	option.c	FUNCTION_25	CALL_2
0x3ef9	      0xba00100000	                         mov edx, 0x1000	      5503	option.c	FUNCTION_25	CALL_2
0x3efe	          0x4889c7	                            mov rdi, rax	      5503	option.c	FUNCTION_25	CALL_2
0x3f01	      0xe800000000	                          call 0x4003f46	      5503	option.c	FUNCTION_25	CALL_2
0x3f06	    0x488b05000000	            mov rax, qword [0x04003f4d] 	      5509	option.c	FUNCTION_25	IF_4	CALL_3
0x3f0d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      5509	option.c	FUNCTION_25	IF_4	CALL_3
0x3f11	          0x4889d6	                            mov rsi, rdx	      5509	option.c	FUNCTION_25	IF_4	CALL_3
0x3f14	          0x4889c7	                            mov rdi, rax	      5509	option.c	FUNCTION_25	IF_4	CALL_3
0x3f17	      0xe800000000	                          call 0x4003f5c	      5509	option.c	FUNCTION_25	IF_4	CALL_3
0x3f1c	            0x85c0	                           test eax, eax	      5509	option.c	FUNCTION_25	IF_4	CALL_3
0x3f1e	            0x7507	                           jne 0x4003f67	      5509	option.c	FUNCTION_25	IF_4	CALL_3
0x3f20	      0xb800000000	                              mov eax, 0	      5510	option.c	FUNCTION_25	IF_4
0x3f25	            0xeb07	                           jmp 0x4003f6e	      5510	option.c	FUNCTION_25	IF_4
0x3f27	    0x488b05000000	            mov rax, qword [0x04003f6e] 	      5512	option.c	FUNCTION_25
0x3f2e	              0xc9	                                   leave	      5513	option.c	FUNCTION_25
0x3f2f	              0xc3	                                     ret	      5513	option.c	FUNCTION_25
did_set_title	WHILE,0:SWITCH,0:CALL,3:FOR,0:ELSE,1:DO,0:IF,4:functions,0	24
0x3ad9	              0x55	                                push rbp	      5343	option.c	FUNCTION_21
0x3ada	          0x4889e5	                            mov rbp, rsp	      5343	option.c	FUNCTION_21
0x3add	        0x4883ec10	                           sub rsp, 0x10	      5343	option.c	FUNCTION_21
0x3ae1	          0x897dfc	                mov dword [rbp - 4], edi	      5343	option.c	FUNCTION_21
0x3ae4	    0x8b0500000000	            mov eax, dword [0x04003b2a] 	      5344	option.c	FUNCTION_21	IF_1
0x3aea	          0x83f802	                              cmp eax, 2	      5344	option.c	FUNCTION_21	IF_1
0x3aed	            0x7435	                            je 0x4003b64	      5344	option.c	FUNCTION_21	IF_1
0x3aef	      0xe800000000	                          call 0x4003b34	      5350	option.c	FUNCTION_21	IF_1	CALL_1
0x3af4	        0x837dfc00	                  cmp dword [rbp - 4], 0	      5351	option.c	FUNCTION_21	IF_1	IF_2
0x3af8	            0x7416	                            je 0x4003b50	      5351	option.c	FUNCTION_21	IF_1	IF_2
0x3afa	    0x8b0500000000	            mov eax, dword [0x04003b40] 	      5353	option.c	FUNCTION_21	IF_1	IF_2	IF_3
0x3b00	            0x85c0	                           test eax, eax	      5353	option.c	FUNCTION_21	IF_1	IF_2	IF_3
0x3b02	            0x7520	                           jne 0x4003b64	      5353	option.c	FUNCTION_21	IF_1	IF_2	IF_3
0x3b04	      0xbf02000000	                              mov edi, 2	      5354	option.c	FUNCTION_21	IF_1	IF_2	CALL_2
0x3b09	      0xe800000000	                          call 0x4003b4e	      5354	option.c	FUNCTION_21	IF_1	IF_2	CALL_2
0x3b0e	            0xeb14	                           jmp 0x4003b64	      5362	option.c	FUNCTION_21
0x3b10	    0x8b0500000000	            mov eax, dword [0x04003b56] 	      5358	option.c	FUNCTION_21	IF_1	ELSE_1	IF_4
0x3b16	            0x85c0	                           test eax, eax	      5358	option.c	FUNCTION_21	IF_1	ELSE_1	IF_4
0x3b18	            0x750a	                           jne 0x4003b64	      5358	option.c	FUNCTION_21	IF_1	ELSE_1	IF_4
0x3b1a	      0xbf01000000	                              mov edi, 1	      5359	option.c	FUNCTION_21	IF_1	ELSE_1	CALL_3
0x3b1f	      0xe800000000	                          call 0x4003b64	      5359	option.c	FUNCTION_21	IF_1	ELSE_1	CALL_3
0x3b24	              0x90	                                     nop	      5362	option.c	FUNCTION_21
0x3b25	              0xc9	                                   leave	      5362	option.c	FUNCTION_21
0x3b26	              0xc3	                                     ret	      5362	option.c	FUNCTION_21
redraw_titles	WHILE,0:SWITCH,0:CALL,0:FOR,0:ELSE,0:DO,0:IF,0:functions,0	7
0x4727	              0x55	                                push rbp	      5822	option.c	FUNCTION_36
0x4728	          0x4889e5	                            mov rbp, rsp	      5822	option.c	FUNCTION_36
0x472b	    0xc70500000000	               mov dword [0x04004775], 1	      5823	option.c	FUNCTION_36
0x4735	    0xc70500000000	               mov dword [0x0400477f], 1	      5824	option.c	FUNCTION_36
0x473f	              0x90	                                     nop	      5825	option.c	FUNCTION_36
0x4740	              0x5d	                                 pop rbp	      5825	option.c	FUNCTION_36
0x4741	              0xc3	                                     ret	      5825	option.c	FUNCTION_36
set_options_default	WHILE,0:SWITCH,0:CALL,5:FOR,1:ELSE,0:DO,0:IF,1:functions,0	83
0x9d7	              0x55	                                push rbp	      3811	option.c	FUNCTION_4
0x9d8	          0x4889e5	                            mov rbp, rsp	      3811	option.c	FUNCTION_4
0x9db	        0x4883ec30	                           sub rsp, 0x30	      3811	option.c	FUNCTION_4
0x9df	          0x897ddc	             mov dword [rbp - 0x24], edi	      3811	option.c	FUNCTION_4
0x9e2	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      3816	option.c	FUNCTION_4	FOR_1	CALL_1
0x9e9	      0xe987000000	                           jmp 0x4000ab5	      3816	option.c	FUNCTION_4	FOR_1	CALL_1
0x9ee	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3817	option.c	FUNCTION_4	FOR_1	IF_1
0x9f1	            0x4898	                                    cdqe	      3817	option.c	FUNCTION_4	FOR_1	IF_1
0x9f3	        0x48c1e006	                              shl rax, 6	      3817	option.c	FUNCTION_4	FOR_1	IF_1
0x9f7	    0x480500000000	                              add rax, 0	      3817	option.c	FUNCTION_4	FOR_1	IF_1
0x9fd	          0x488b00	                    mov rax, qword [rax]	      3817	option.c	FUNCTION_4	FOR_1	IF_1
0xa00	          0x83e040	                           and eax, 0x40	      3817	option.c	FUNCTION_4	FOR_1	IF_1
0xa03	          0x4885c0	                           test rax, rax	      3817	option.c	FUNCTION_4	FOR_1	IF_1
0xa06	            0x7569	                           jne 0x4000ab1	      3817	option.c	FUNCTION_4	FOR_1	IF_1
0xa08	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3819	option.c	FUNCTION_4	FOR_1	IF_1
0xa0c	            0x744e	                            je 0x4000a9c	      3819	option.c	FUNCTION_4	FOR_1	IF_1
0xa0e	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3822	option.c	FUNCTION_4	FOR_1	IF_1
0xa11	            0x4898	                                    cdqe	      3822	option.c	FUNCTION_4	FOR_1	IF_1
0xa13	        0x48c1e006	                              shl rax, 6	      3822	option.c	FUNCTION_4	FOR_1	IF_1
0xa17	    0x480500000000	                              add rax, 0	      3822	option.c	FUNCTION_4	FOR_1	IF_1
0xa1d	          0x488b00	                    mov rax, qword [rax]	      3822	option.c	FUNCTION_4	FOR_1	IF_1
0xa20	    0x483d00000000	                              cmp rax, 0	      3820	option.c	FUNCTION_4	FOR_1	IF_1
0xa26	            0x7449	                            je 0x4000ab1	      3820	option.c	FUNCTION_4	FOR_1	IF_1
0xa28	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3825	option.c	FUNCTION_4	FOR_1	IF_1
0xa2b	            0x4898	                                    cdqe	      3825	option.c	FUNCTION_4	FOR_1	IF_1
0xa2d	        0x48c1e006	                              shl rax, 6	      3825	option.c	FUNCTION_4	FOR_1	IF_1
0xa31	    0x480500000000	                              add rax, 0	      3825	option.c	FUNCTION_4	FOR_1	IF_1
0xa37	          0x488b00	                    mov rax, qword [rax]	      3825	option.c	FUNCTION_4	FOR_1	IF_1
0xa3a	    0x483d00000000	                              cmp rax, 0	      3825	option.c	FUNCTION_4	FOR_1	IF_1
0xa40	            0x742f	                            je 0x4000ab1	      3825	option.c	FUNCTION_4	FOR_1	IF_1
0xa42	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3826	option.c	FUNCTION_4	FOR_1	IF_1
0xa45	            0x4898	                                    cdqe	      3826	option.c	FUNCTION_4	FOR_1	IF_1
0xa47	        0x48c1e006	                              shl rax, 6	      3826	option.c	FUNCTION_4	FOR_1	IF_1
0xa4b	    0x480500000000	                              add rax, 0	      3826	option.c	FUNCTION_4	FOR_1	IF_1
0xa51	          0x488b00	                    mov rax, qword [rax]	      3826	option.c	FUNCTION_4	FOR_1	IF_1
0xa54	    0x483d00000000	                              cmp rax, 0	      3826	option.c	FUNCTION_4	FOR_1	IF_1
0xa5a	            0x7415	                            je 0x4000ab1	      3826	option.c	FUNCTION_4	FOR_1	IF_1
0xa5c	    0x8b1500000000	            mov edx, dword [0x04000aa2] 	      3831	option.c	FUNCTION_4	FOR_1	IF_1
0xa62	          0x8b4ddc	             mov ecx, dword [rbp - 0x24]	      3831	option.c	FUNCTION_4	FOR_1	IF_1
0xa65	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3831	option.c	FUNCTION_4	FOR_1	IF_1
0xa68	            0x89ce	                            mov esi, ecx	      3831	option.c	FUNCTION_4	FOR_1	IF_1
0xa6a	            0x89c7	                            mov edi, eax	      3831	option.c	FUNCTION_4	FOR_1	IF_1
0xa6c	      0xe89efcffff	             call sym.set_option_default	      3831	option.c	FUNCTION_4	FOR_1	IF_1
0xa71	        0x8345ec01	               add dword [rbp - 0x14], 1	      3816	option.c	FUNCTION_4	FOR_1	CALL_1
0xa75	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3816	option.c	FUNCTION_4	FOR_1	CALL_1
0xa78	            0x4898	                                    cdqe	      3816	option.c	FUNCTION_4	FOR_1	CALL_1
0xa7a	        0x48c1e006	                              shl rax, 6	      3816	option.c	FUNCTION_4	FOR_1	CALL_1
0xa7e	    0x480500000000	                              add rax, 0	      3816	option.c	FUNCTION_4	FOR_1	CALL_1
0xa84	          0x4889c7	                            mov rdi, rax	      3816	option.c	FUNCTION_4	FOR_1	CALL_1
0xa87	      0xe8b8ba0000	                   call sym.istermoption	      3816	option.c	FUNCTION_4	FOR_1	CALL_1
0xa8c	            0x85c0	                           test eax, eax	      3816	option.c	FUNCTION_4	FOR_1	CALL_1
0xa8e	     0xf845affffff	                            je 0x4000a2e	      3816	option.c	FUNCTION_4	FOR_1	CALL_1
0xa94	    0x488b05000000	            mov rax, qword [0x04000adb] 	      3834	option.c	FUNCTION_4	CALL_3
0xa9b	        0x488945f8	                mov qword [rbp - 8], rax	      3834	option.c	FUNCTION_4	CALL_3
0xa9f	            0xeb4e	                           jmp 0x4000b2f	      3834	option.c	FUNCTION_4	CALL_3
0xaa1	    0x488b05000000	            mov rax, qword [0x04000ae8] 	      3834	option.c	FUNCTION_4	CALL_3
0xaa8	        0x483945f8	                cmp qword [rbp - 8], rax	      3834	option.c	FUNCTION_4	CALL_3
0xaac	            0x740a	                            je 0x4000af8	      3834	option.c	FUNCTION_4	CALL_3
0xaae	        0x488b45f8	                mov rax, qword [rbp - 8]	      3834	option.c	FUNCTION_4	CALL_3
0xab2	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3834	option.c	FUNCTION_4	CALL_3
0xab6	            0xeb07	                           jmp 0x4000aff	      3834	option.c	FUNCTION_4	CALL_3
0xab8	    0x488b05000000	            mov rax, qword [0x04000aff] 	      3834	option.c	FUNCTION_4	CALL_3
0xabf	        0x488945f0	             mov qword [rbp - 0x10], rax	      3834	option.c	FUNCTION_4	CALL_3
0xac3	            0xeb18	                           jmp 0x4000b1d	      3834	option.c	FUNCTION_4	CALL_3
0xac5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3835	option.c	FUNCTION_4	CALL_4
0xac9	          0x4889c7	                            mov rdi, rax	      3835	option.c	FUNCTION_4	CALL_4
0xacc	      0xe800000000	                          call 0x4000b11	      3835	option.c	FUNCTION_4	CALL_4
0xad1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3834	option.c	FUNCTION_4	CALL_3
0xad5	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3834	option.c	FUNCTION_4	CALL_3
0xad9	        0x488945f0	             mov qword [rbp - 0x10], rax	      3834	option.c	FUNCTION_4	CALL_3
0xadd	      0x48837df000	               cmp qword [rbp - 0x10], 0	      3834	option.c	FUNCTION_4	CALL_3
0xae2	            0x75e1	                           jne 0x4000b05	      3834	option.c	FUNCTION_4	CALL_3
0xae4	        0x488b45f8	                mov rax, qword [rbp - 8]	      3834	option.c	FUNCTION_4	CALL_3
0xae8	          0x488b00	                    mov rax, qword [rax]	      3834	option.c	FUNCTION_4	CALL_3
0xaeb	        0x488945f8	                mov qword [rbp - 8], rax	      3834	option.c	FUNCTION_4	CALL_3
0xaef	      0x48837df800	                  cmp qword [rbp - 8], 0	      3834	option.c	FUNCTION_4	CALL_3
0xaf4	            0x75ab	                           jne 0x4000ae1	      3834	option.c	FUNCTION_4	CALL_3
0xaf6	    0x488b05000000	            mov rax, qword [0x04000b3d] 	      3837	option.c	FUNCTION_4	CALL_5
0xafd	          0x4889c7	                            mov rdi, rax	      3837	option.c	FUNCTION_4	CALL_5
0xb00	      0xe800000000	                          call 0x4000b45	      3837	option.c	FUNCTION_4	CALL_5
0xb05	              0x90	                                     nop	      3839	option.c	FUNCTION_4
0xb06	              0xc9	                                   leave	      3839	option.c	FUNCTION_4
0xb07	              0xc3	                                     ret	      3839	option.c	FUNCTION_4
unset_global_local_option	WHILE,0:SWITCH,1:CALL,20:FOR,0:ELSE,0:DO,0:IF,1:functions,0	193
0xc69f	              0x55	                                push rbp	     10384	option.c	FUNCTION_76
0xc6a0	          0x4889e5	                            mov rbp, rsp	     10384	option.c	FUNCTION_76
0xc6a3	        0x4883ec30	                           sub rsp, 0x30	     10384	option.c	FUNCTION_76
0xc6a7	        0x48897dd8	             mov qword [rbp - 0x28], rdi	     10384	option.c	FUNCTION_76
0xc6ab	        0x488975d0	             mov qword [rbp - 0x30], rsi	     10384	option.c	FUNCTION_76
0xc6af	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10387	option.c	FUNCTION_76
0xc6b3	        0x488945f0	             mov qword [rbp - 0x10], rax	     10387	option.c	FUNCTION_76
0xc6b7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10389	option.c	FUNCTION_76	CALL_1
0xc6bb	          0x4889c7	                            mov rdi, rax	     10389	option.c	FUNCTION_76	CALL_1
0xc6be	      0xe8c3e6ffff	                     call sym.findoption	     10389	option.c	FUNCTION_76	CALL_1
0xc6c3	          0x8945ec	             mov dword [rbp - 0x14], eax	     10389	option.c	FUNCTION_76	CALL_1
0xc6c6	        0x837dec00	               cmp dword [rbp - 0x14], 0	     10390	option.c	FUNCTION_76	IF_1
0xc6ca	     0xf8836030000	                            js 0x400ca46	     10390	option.c	FUNCTION_76	IF_1
0xc6d0	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     10392	option.c	FUNCTION_76
0xc6d3	            0x4898	                                    cdqe	     10392	option.c	FUNCTION_76
0xc6d5	        0x48c1e006	                              shl rax, 6	     10392	option.c	FUNCTION_76
0xc6d9	    0x480500000000	                              add rax, 0	     10392	option.c	FUNCTION_76
0xc6df	        0x488945f8	                mov qword [rbp - 8], rax	     10392	option.c	FUNCTION_76
0xc6e3	        0x488b45f8	                mov rax, qword [rbp - 8]	     10394	option.c	FUNCTION_76	SWITCH_1
0xc6e7	          0x8b4020	            mov eax, dword [rax + 0x20] 	     10394	option.c	FUNCTION_76	SWITCH_1
0xc6ea	      0x3d18500000	                         cmp eax, 0x5018	     10394	option.c	FUNCTION_76	SWITCH_1
0xc6ef	     0xf84fd010000	                            je 0x400c932	     10394	option.c	FUNCTION_76	SWITCH_1
0xc6f5	      0x3d18500000	                         cmp eax, 0x5018	     10394	option.c	FUNCTION_76	SWITCH_1
0xc6fa	     0xf8f97000000	                            jg 0x400c7d7	     10394	option.c	FUNCTION_76	SWITCH_1
0xc700	      0x3d06500000	                         cmp eax, 0x5006	     10394	option.c	FUNCTION_76	SWITCH_1
0xc705	     0xf845a020000	                            je 0x400c9a5	     10394	option.c	FUNCTION_76	SWITCH_1
0xc70b	      0x3d06500000	                         cmp eax, 0x5006	     10394	option.c	FUNCTION_76	SWITCH_1
0xc710	            0x7f3d	                            jg 0x400c78f	     10394	option.c	FUNCTION_76	SWITCH_1
0xc712	      0x3d01500000	                         cmp eax, 0x5001	     10394	option.c	FUNCTION_76	SWITCH_1
0xc717	     0xf844a010000	                            je 0x400c8a7	     10394	option.c	FUNCTION_76	SWITCH_1
0xc71d	      0x3d01500000	                         cmp eax, 0x5001	     10394	option.c	FUNCTION_76	SWITCH_1
0xc722	            0x7f10	                            jg 0x400c774	     10394	option.c	FUNCTION_76	SWITCH_1
0xc724	      0x3d21300000	                         cmp eax, 0x3021	     10394	option.c	FUNCTION_76	SWITCH_1
0xc729	     0xf8489020000	                            je 0x400c9f8	     10394	option.c	FUNCTION_76	SWITCH_1
0xc72f	      0xe9d3020000	                           jmp 0x400ca47	     10394	option.c	FUNCTION_76	SWITCH_1
0xc734	      0x3d03500000	                         cmp eax, 0x5003	     10394	option.c	FUNCTION_76	SWITCH_1
0xc739	     0xf843b010000	                            je 0x400c8ba	     10394	option.c	FUNCTION_76	SWITCH_1
0xc73f	      0x3d05500000	                         cmp eax, 0x5005	     10394	option.c	FUNCTION_76	SWITCH_1
0xc744	     0xf8404020000	                            je 0x400c98e	     10394	option.c	FUNCTION_76	SWITCH_1
0xc74a	      0xe9b8020000	                           jmp 0x400ca47	     10394	option.c	FUNCTION_76	SWITCH_1
0xc74f	      0x3d14500000	                         cmp eax, 0x5014	     10394	option.c	FUNCTION_76	SWITCH_1
0xc754	     0xf84af010000	                            je 0x400c949	     10394	option.c	FUNCTION_76	SWITCH_1
0xc75a	      0x3d14500000	                         cmp eax, 0x5014	     10394	option.c	FUNCTION_76	SWITCH_1
0xc75f	            0x7f1b	                            jg 0x400c7bc	     10394	option.c	FUNCTION_76	SWITCH_1
0xc761	      0x3d07500000	                         cmp eax, 0x5007	     10394	option.c	FUNCTION_76	SWITCH_1
0xc766	     0xf8410020000	                            je 0x400c9bc	     10394	option.c	FUNCTION_76	SWITCH_1
0xc76c	      0x3d10500000	                         cmp eax, 0x5010	     10394	option.c	FUNCTION_76	SWITCH_1
0xc771	     0xf842d020000	                            je 0x400c9e4	     10394	option.c	FUNCTION_76	SWITCH_1
0xc777	      0xe98b020000	                           jmp 0x400ca47	     10394	option.c	FUNCTION_76	SWITCH_1
0xc77c	      0x3d15500000	                         cmp eax, 0x5015	     10394	option.c	FUNCTION_76	SWITCH_1
0xc781	     0xf8499010000	                            je 0x400c960	     10394	option.c	FUNCTION_76	SWITCH_1
0xc787	      0x3d17500000	                         cmp eax, 0x5017	     10394	option.c	FUNCTION_76	SWITCH_1
0xc78c	     0xf8449010000	                            je 0x400c91b	     10394	option.c	FUNCTION_76	SWITCH_1
0xc792	      0xe970020000	                           jmp 0x400ca47	     10394	option.c	FUNCTION_76	SWITCH_1
0xc797	      0x3d30500000	                         cmp eax, 0x5030	     10394	option.c	FUNCTION_76	SWITCH_1
0xc79c	     0xf843b020000	                            je 0x400ca1d	     10394	option.c	FUNCTION_76	SWITCH_1
0xc7a2	      0x3d30500000	                         cmp eax, 0x5030	     10394	option.c	FUNCTION_76	SWITCH_1
0xc7a7	            0x7f35	                            jg 0x400c81e	     10394	option.c	FUNCTION_76	SWITCH_1
0xc7a9	      0x3d1e500000	                         cmp eax, 0x501e	     10394	option.c	FUNCTION_76	SWITCH_1
0xc7ae	     0xf8483010000	                            je 0x400c977	     10394	option.c	FUNCTION_76	SWITCH_1
0xc7b4	      0x3d1e500000	                         cmp eax, 0x501e	     10394	option.c	FUNCTION_76	SWITCH_1
0xc7b9	            0x7f0c	                            jg 0x400c807	     10394	option.c	FUNCTION_76	SWITCH_1
0xc7bb	      0x3d1b500000	                         cmp eax, 0x501b	     10394	option.c	FUNCTION_76	SWITCH_1
0xc7c0	            0x7460	                            je 0x400c862	     10394	option.c	FUNCTION_76	SWITCH_1
0xc7c2	      0xe940020000	                           jmp 0x400ca47	     10394	option.c	FUNCTION_76	SWITCH_1
0xc7c7	      0x3d1f500000	                         cmp eax, 0x501f	     10394	option.c	FUNCTION_76	SWITCH_1
0xc7cc	     0xf84be010000	                            je 0x400c9d0	     10394	option.c	FUNCTION_76	SWITCH_1
0xc7d2	      0x3d2e500000	                         cmp eax, 0x502e	     10394	option.c	FUNCTION_76	SWITCH_1
0xc7d7	            0x7460	                            je 0x400c879	     10394	option.c	FUNCTION_76	SWITCH_1
0xc7d9	      0xe929020000	                           jmp 0x400ca47	     10394	option.c	FUNCTION_76	SWITCH_1
0xc7de	      0x3d47500000	                         cmp eax, 0x5047	     10394	option.c	FUNCTION_76	SWITCH_1
0xc7e3	     0xf84b6000000	                            je 0x400c8df	     10394	option.c	FUNCTION_76	SWITCH_1
0xc7e9	      0x3d47500000	                         cmp eax, 0x5047	     10394	option.c	FUNCTION_76	SWITCH_1
0xc7ee	            0x7f17	                            jg 0x400c847	     10394	option.c	FUNCTION_76	SWITCH_1
0xc7f0	      0x3d31500000	                         cmp eax, 0x5031	     10394	option.c	FUNCTION_76	SWITCH_1
0xc7f5	     0xf84f6010000	                            je 0x400ca31	     10394	option.c	FUNCTION_76	SWITCH_1
0xc7fb	      0x3d38500000	                         cmp eax, 0x5038	     10394	option.c	FUNCTION_76	SWITCH_1
0xc800	            0x744e	                            je 0x400c890	     10394	option.c	FUNCTION_76	SWITCH_1
0xc802	      0xe900020000	                           jmp 0x400ca47	     10394	option.c	FUNCTION_76	SWITCH_1
0xc807	      0x3d48500000	                         cmp eax, 0x5048	     10394	option.c	FUNCTION_76	SWITCH_1
0xc80c	     0xf84a4000000	                            je 0x400c8f6	     10394	option.c	FUNCTION_76	SWITCH_1
0xc812	      0x3d4d500000	                         cmp eax, 0x504d	     10394	option.c	FUNCTION_76	SWITCH_1
0xc817	     0xf84af010000	                            je 0x400ca0c	     10394	option.c	FUNCTION_76	SWITCH_1
0xc81d	      0xe9e5010000	                           jmp 0x400ca47	     10394	option.c	FUNCTION_76	SWITCH_1
0xc822	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10398	option.c	FUNCTION_76	SWITCH_1	CALL_2
0xc826	    0x4805f0150000	                         add rax, 0x15f0	     10398	option.c	FUNCTION_76	SWITCH_1	CALL_2
0xc82c	          0x4889c7	                            mov rdi, rax	     10398	option.c	FUNCTION_76	SWITCH_1	CALL_2
0xc82f	      0xe800000000	                          call 0x400c874	     10398	option.c	FUNCTION_76	SWITCH_1	CALL_2
0xc834	      0xe9ce010000	                           jmp 0x400ca47	     10399	option.c	FUNCTION_76	SWITCH_1
0xc839	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10401	option.c	FUNCTION_76	SWITCH_1	CALL_3
0xc83d	    0x480500150000	                         add rax, 0x1500	     10401	option.c	FUNCTION_76	SWITCH_1	CALL_3
0xc843	          0x4889c7	                            mov rdi, rax	     10401	option.c	FUNCTION_76	SWITCH_1	CALL_3
0xc846	      0xe800000000	                          call 0x400c88b	     10401	option.c	FUNCTION_76	SWITCH_1	CALL_3
0xc84b	      0xe9b7010000	                           jmp 0x400ca47	     10402	option.c	FUNCTION_76	SWITCH_1
0xc850	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10404	option.c	FUNCTION_76	SWITCH_1	CALL_4
0xc854	    0x4805f8150000	                         add rax, 0x15f8	     10404	option.c	FUNCTION_76	SWITCH_1	CALL_4
0xc85a	          0x4889c7	                            mov rdi, rax	     10404	option.c	FUNCTION_76	SWITCH_1	CALL_4
0xc85d	      0xe800000000	                          call 0x400c8a2	     10404	option.c	FUNCTION_76	SWITCH_1	CALL_4
0xc862	      0xe9a0010000	                           jmp 0x400ca47	     10405	option.c	FUNCTION_76	SWITCH_1
0xc867	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10407	option.c	FUNCTION_76	SWITCH_1
0xc86b	    0xc78000160000	   mov dword [rax + 0x1600], 0xffffffff 	     10407	option.c	FUNCTION_76	SWITCH_1
0xc875	      0xe98d010000	                           jmp 0x400ca47	     10408	option.c	FUNCTION_76	SWITCH_1
0xc87a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10410	option.c	FUNCTION_76	SWITCH_1	CALL_5
0xc87e	    0x4805e0130000	                         add rax, 0x13e0	     10410	option.c	FUNCTION_76	SWITCH_1	CALL_5
0xc884	          0x4889c7	                            mov rdi, rax	     10410	option.c	FUNCTION_76	SWITCH_1	CALL_5
0xc887	      0xe800000000	                          call 0x400c8cc	     10410	option.c	FUNCTION_76	SWITCH_1	CALL_5
0xc88c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10411	option.c	FUNCTION_76	SWITCH_1
0xc890	    0xc780e8130000	            mov dword [rax + 0x13e8], 0 	     10411	option.c	FUNCTION_76	SWITCH_1
0xc89a	      0xe968010000	                           jmp 0x400ca47	     10412	option.c	FUNCTION_76	SWITCH_1
0xc89f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10414	option.c	FUNCTION_76	SWITCH_1	CALL_6
0xc8a3	    0x480508160000	                         add rax, 0x1608	     10414	option.c	FUNCTION_76	SWITCH_1	CALL_6
0xc8a9	          0x4889c7	                            mov rdi, rax	     10414	option.c	FUNCTION_76	SWITCH_1	CALL_6
0xc8ac	      0xe800000000	                          call 0x400c8f1	     10414	option.c	FUNCTION_76	SWITCH_1	CALL_6
0xc8b1	      0xe951010000	                           jmp 0x400ca47	     10415	option.c	FUNCTION_76	SWITCH_1
0xc8b6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10417	option.c	FUNCTION_76	SWITCH_1	CALL_7
0xc8ba	    0x480510160000	                         add rax, 0x1610	     10417	option.c	FUNCTION_76	SWITCH_1	CALL_7
0xc8c0	          0x4889c7	                            mov rdi, rax	     10417	option.c	FUNCTION_76	SWITCH_1	CALL_7
0xc8c3	      0xe800000000	                          call 0x400c908	     10417	option.c	FUNCTION_76	SWITCH_1	CALL_7
0xc8c8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10418	option.c	FUNCTION_76	SWITCH_1
0xc8cc	    0xc78018160000	            mov dword [rax + 0x1618], 0 	     10418	option.c	FUNCTION_76	SWITCH_1
0xc8d6	      0xe92c010000	                           jmp 0x400ca47	     10419	option.c	FUNCTION_76	SWITCH_1
0xc8db	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10422	option.c	FUNCTION_76	SWITCH_1	CALL_8
0xc8df	    0x4805a8140000	                         add rax, 0x14a8	     10422	option.c	FUNCTION_76	SWITCH_1	CALL_8
0xc8e5	          0x4889c7	                            mov rdi, rax	     10422	option.c	FUNCTION_76	SWITCH_1	CALL_8
0xc8e8	      0xe800000000	                          call 0x400c92d	     10422	option.c	FUNCTION_76	SWITCH_1	CALL_8
0xc8ed	      0xe915010000	                           jmp 0x400ca47	     10423	option.c	FUNCTION_76	SWITCH_1
0xc8f2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10425	option.c	FUNCTION_76	SWITCH_1	CALL_9
0xc8f6	    0x4805b0140000	                         add rax, 0x14b0	     10425	option.c	FUNCTION_76	SWITCH_1	CALL_9
0xc8fc	          0x4889c7	                            mov rdi, rax	     10425	option.c	FUNCTION_76	SWITCH_1	CALL_9
0xc8ff	      0xe800000000	                          call 0x400c944	     10425	option.c	FUNCTION_76	SWITCH_1	CALL_9
0xc904	      0xe9fe000000	                           jmp 0x400ca47	     10426	option.c	FUNCTION_76	SWITCH_1
0xc909	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10430	option.c	FUNCTION_76	SWITCH_1	CALL_10
0xc90d	    0x480520160000	                         add rax, 0x1620	     10430	option.c	FUNCTION_76	SWITCH_1	CALL_10
0xc913	          0x4889c7	                            mov rdi, rax	     10430	option.c	FUNCTION_76	SWITCH_1	CALL_10
0xc916	      0xe800000000	                          call 0x400c95b	     10430	option.c	FUNCTION_76	SWITCH_1	CALL_10
0xc91b	      0xe9e7000000	                           jmp 0x400ca47	     10431	option.c	FUNCTION_76	SWITCH_1
0xc920	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10433	option.c	FUNCTION_76	SWITCH_1	CALL_11
0xc924	    0x480528160000	                         add rax, 0x1628	     10433	option.c	FUNCTION_76	SWITCH_1	CALL_11
0xc92a	          0x4889c7	                            mov rdi, rax	     10433	option.c	FUNCTION_76	SWITCH_1	CALL_11
0xc92d	      0xe800000000	                          call 0x400c972	     10433	option.c	FUNCTION_76	SWITCH_1	CALL_11
0xc932	      0xe9d0000000	                           jmp 0x400ca47	     10434	option.c	FUNCTION_76	SWITCH_1
0xc937	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10437	option.c	FUNCTION_76	SWITCH_1	CALL_12
0xc93b	    0x4805e0140000	                         add rax, 0x14e0	     10437	option.c	FUNCTION_76	SWITCH_1	CALL_12
0xc941	          0x4889c7	                            mov rdi, rax	     10437	option.c	FUNCTION_76	SWITCH_1	CALL_12
0xc944	      0xe800000000	                          call 0x400c989	     10437	option.c	FUNCTION_76	SWITCH_1	CALL_12
0xc949	      0xe9b9000000	                           jmp 0x400ca47	     10438	option.c	FUNCTION_76	SWITCH_1
0xc94e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10441	option.c	FUNCTION_76	SWITCH_1	CALL_13
0xc952	    0x4805e8150000	                         add rax, 0x15e8	     10441	option.c	FUNCTION_76	SWITCH_1	CALL_13
0xc958	          0x4889c7	                            mov rdi, rax	     10441	option.c	FUNCTION_76	SWITCH_1	CALL_13
0xc95b	      0xe800000000	                          call 0x400c9a0	     10441	option.c	FUNCTION_76	SWITCH_1	CALL_13
0xc960	      0xe9a2000000	                           jmp 0x400ca47	     10442	option.c	FUNCTION_76	SWITCH_1
0xc965	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10444	option.c	FUNCTION_76	SWITCH_1	CALL_14
0xc969	    0x4805d8150000	                         add rax, 0x15d8	     10444	option.c	FUNCTION_76	SWITCH_1	CALL_14
0xc96f	          0x4889c7	                            mov rdi, rax	     10444	option.c	FUNCTION_76	SWITCH_1	CALL_14
0xc972	      0xe800000000	                          call 0x400c9b7	     10444	option.c	FUNCTION_76	SWITCH_1	CALL_14
0xc977	      0xe98b000000	                           jmp 0x400ca47	     10445	option.c	FUNCTION_76	SWITCH_1
0xc97c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10447	option.c	FUNCTION_76	SWITCH_1	CALL_15
0xc980	    0x4805e0150000	                         add rax, 0x15e0	     10447	option.c	FUNCTION_76	SWITCH_1	CALL_15
0xc986	          0x4889c7	                            mov rdi, rax	     10447	option.c	FUNCTION_76	SWITCH_1	CALL_15
0xc989	      0xe800000000	                          call 0x400c9ce	     10447	option.c	FUNCTION_76	SWITCH_1	CALL_15
0xc98e	            0xeb77	                           jmp 0x400ca47	     10448	option.c	FUNCTION_76	SWITCH_1
0xc990	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10452	option.c	FUNCTION_76	SWITCH_1	CALL_16
0xc994	    0x480518170000	                         add rax, 0x1718	     10452	option.c	FUNCTION_76	SWITCH_1	CALL_16
0xc99a	          0x4889c7	                            mov rdi, rax	     10452	option.c	FUNCTION_76	SWITCH_1	CALL_16
0xc99d	      0xe800000000	                          call 0x400c9e2	     10452	option.c	FUNCTION_76	SWITCH_1	CALL_16
0xc9a2	            0xeb63	                           jmp 0x400ca47	     10453	option.c	FUNCTION_76	SWITCH_1
0xc9a4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10457	option.c	FUNCTION_76	SWITCH_1	CALL_17
0xc9a8	    0x480528170000	                         add rax, 0x1728	     10457	option.c	FUNCTION_76	SWITCH_1	CALL_17
0xc9ae	          0x4889c7	                            mov rdi, rax	     10457	option.c	FUNCTION_76	SWITCH_1	CALL_17
0xc9b1	      0xe800000000	                          call 0x400c9f6	     10457	option.c	FUNCTION_76	SWITCH_1	CALL_17
0xc9b6	            0xeb4f	                           jmp 0x400ca47	     10458	option.c	FUNCTION_76	SWITCH_1
0xc9b8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10462	option.c	FUNCTION_76	SWITCH_1	CALL_18
0xc9bc	    0x480580020000	                          add rax, 0x280	     10462	option.c	FUNCTION_76	SWITCH_1	CALL_18
0xc9c2	          0x4889c7	                            mov rdi, rax	     10462	option.c	FUNCTION_76	SWITCH_1	CALL_18
0xc9c5	      0xe800000000	                          call 0x400ca0a	     10462	option.c	FUNCTION_76	SWITCH_1	CALL_18
0xc9ca	            0xeb3b	                           jmp 0x400ca47	     10463	option.c	FUNCTION_76	SWITCH_1
0xc9cc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10466	option.c	FUNCTION_76	SWITCH_1
0xc9d0	    0x48c780301600	mov qword [rax + 0x1630], 0xfffffffffffe1dc0 	     10466	option.c	FUNCTION_76	SWITCH_1
0xc9db	            0xeb2a	                           jmp 0x400ca47	     10467	option.c	FUNCTION_76	SWITCH_1
0xc9dd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10470	option.c	FUNCTION_76	SWITCH_1	CALL_19
0xc9e1	    0x480540160000	                         add rax, 0x1640	     10470	option.c	FUNCTION_76	SWITCH_1	CALL_19
0xc9e7	          0x4889c7	                            mov rdi, rax	     10470	option.c	FUNCTION_76	SWITCH_1	CALL_19
0xc9ea	      0xe800000000	                          call 0x400ca2f	     10470	option.c	FUNCTION_76	SWITCH_1	CALL_19
0xc9ef	            0xeb16	                           jmp 0x400ca47	     10471	option.c	FUNCTION_76	SWITCH_1
0xc9f1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10475	option.c	FUNCTION_76	SWITCH_1	CALL_20
0xc9f5	    0x480510150000	                         add rax, 0x1510	     10475	option.c	FUNCTION_76	SWITCH_1	CALL_20
0xc9fb	          0x4889c7	                            mov rdi, rax	     10475	option.c	FUNCTION_76	SWITCH_1	CALL_20
0xc9fe	      0xe800000000	                          call 0x400ca43	     10475	option.c	FUNCTION_76	SWITCH_1	CALL_20
0xca03	              0x90	                                     nop	     10476	option.c	FUNCTION_76	SWITCH_1
0xca04	            0xeb01	                           jmp 0x400ca47	     10476	option.c	FUNCTION_76	SWITCH_1
0xca06	              0x90	                                     nop	     10391	option.c	FUNCTION_76	IF_1
0xca07	              0xc9	                                   leave	     10479	option.c	FUNCTION_76
0xca08	              0xc3	                                     ret	     10479	option.c	FUNCTION_76
free_string_option	WHILE,0:SWITCH,0:CALL,1:FOR,0:ELSE,0:DO,0:IF,1:functions,0	13
0x44de	              0x55	                                push rbp	      5721	option.c	FUNCTION_30
0x44df	          0x4889e5	                            mov rbp, rsp	      5721	option.c	FUNCTION_30
0x44e2	        0x4883ec10	                           sub rsp, 0x10	      5721	option.c	FUNCTION_30
0x44e6	        0x48897df8	                mov qword [rbp - 8], rdi	      5721	option.c	FUNCTION_30
0x44ea	    0x488b05000000	            mov rax, qword [0x04004531] 	      5722	option.c	FUNCTION_30	IF_1
0x44f1	        0x483945f8	                cmp qword [rbp - 8], rax	      5722	option.c	FUNCTION_30	IF_1
0x44f5	            0x740c	                            je 0x4004543	      5722	option.c	FUNCTION_30	IF_1
0x44f7	        0x488b45f8	                mov rax, qword [rbp - 8]	      5723	option.c	FUNCTION_30	CALL_1
0x44fb	          0x4889c7	                            mov rdi, rax	      5723	option.c	FUNCTION_30	CALL_1
0x44fe	      0xe800000000	                          call 0x4004543	      5723	option.c	FUNCTION_30	CALL_1
0x4503	              0x90	                                     nop	      5724	option.c	FUNCTION_30
0x4504	              0xc9	                                   leave	      5724	option.c	FUNCTION_30
0x4505	              0xc3	                                     ret	      5724	option.c	FUNCTION_30
set_bool_option	WHILE,0:SWITCH,0:CALL,80:FOR,0:ELSE,45:DO,0:IF,85:functions,1	807
0x8c07	              0x55	                                push rbp	      8085	option.c	FUNCTION_50
0x8c08	          0x4889e5	                            mov rbp, rsp	      8085	option.c	FUNCTION_50
0x8c0b	              0x53	                                push rbx	      8085	option.c	FUNCTION_50
0x8c0c	    0x4881eca80000	                           sub rsp, 0xa8	      8085	option.c	FUNCTION_50
0x8c13	    0x89bd6cffffff	             mov dword [rbp - 0x94], edi	      8085	option.c	FUNCTION_50
0x8c19	    0x4889b560ffff	             mov qword [rbp - 0xa0], rsi	      8085	option.c	FUNCTION_50
0x8c20	    0x899568ffffff	             mov dword [rbp - 0x98], edx	      8085	option.c	FUNCTION_50
0x8c26	    0x898d5cffffff	             mov dword [rbp - 0xa4], ecx	      8085	option.c	FUNCTION_50
0x8c2c	    0x64488b042528	                mov rax, qword fs:[0x28]	      8085	option.c	FUNCTION_50
0x8c35	        0x488945e8	             mov qword [rbp - 0x18], rax	      8085	option.c	FUNCTION_50
0x8c39	            0x31c0	                            xor eax, eax	      8085	option.c	FUNCTION_50
0x8c3b	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      8086	option.c	FUNCTION_50
0x8c42	            0x8b00	                    mov eax, dword [rax]	      8086	option.c	FUNCTION_50
0x8c44	    0x89857cffffff	             mov dword [rbp - 0x84], eax	      8086	option.c	FUNCTION_50
0x8c4a	    0x8b0500000000	            mov eax, dword [0x04008c90] 	      8089	option.c	FUNCTION_50	IF_1
0x8c50	            0x85c0	                           test eax, eax	      8089	option.c	FUNCTION_50	IF_1
0x8c52	            0x750a	                           jne 0x4008c9e	      8089	option.c	FUNCTION_50	IF_1
0x8c54	    0x8b0500000000	            mov eax, dword [0x04008c9a] 	      8091	option.c	FUNCTION_50	IF_1
0x8c5a	            0x85c0	                           test eax, eax	      8091	option.c	FUNCTION_50	IF_1
0x8c5c	            0x7429	                            je 0x4008cc7	      8091	option.c	FUNCTION_50	IF_1
0x8c5e	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      8093	option.c	FUNCTION_50	IF_1
0x8c64	            0x4898	                                    cdqe	      8093	option.c	FUNCTION_50	IF_1
0x8c66	        0x48c1e006	                              shl rax, 6	      8093	option.c	FUNCTION_50	IF_1
0x8c6a	    0x480500000000	                              add rax, 0	      8093	option.c	FUNCTION_50	IF_1
0x8c70	          0x488b00	                    mov rax, qword [rax]	      8093	option.c	FUNCTION_50	IF_1
0x8c73	      0x2500000800	                        and eax, 0x80000	      8093	option.c	FUNCTION_50	IF_1
0x8c78	          0x4885c0	                           test rax, rax	      8093	option.c	FUNCTION_50	IF_1
0x8c7b	            0x740a	                            je 0x4008cc7	      8093	option.c	FUNCTION_50	IF_1
0x8c7d	      0xb800000000	                              mov eax, 0	      8094	option.c	FUNCTION_50	IF_1
0x8c82	      0xe9950e0000	                           jmp 0x4009b5c	      8094	option.c	FUNCTION_50	IF_1
0x8c87	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      8096	option.c	FUNCTION_50
0x8c8e	    0x8b9568ffffff	             mov edx, dword [rbp - 0x98]	      8096	option.c	FUNCTION_50
0x8c94	            0x8910	                    mov dword [rax], edx	      8096	option.c	FUNCTION_50
0x8c96	    0x8b1500000000	            mov edx, dword [0x04008cdc] 	      8099	option.c	FUNCTION_50	CALL_1
0x8c9c	    0x8b8d5cffffff	             mov ecx, dword [rbp - 0xa4]	      8099	option.c	FUNCTION_50	CALL_1
0x8ca2	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      8099	option.c	FUNCTION_50	CALL_1
0x8ca8	            0x89ce	                            mov esi, ecx	      8099	option.c	FUNCTION_50	CALL_1
0x8caa	            0x89c7	                            mov edi, eax	      8099	option.c	FUNCTION_50	CALL_1
0x8cac	      0xe885feffff	        call sym.set_option_scriptID_idx	      8099	option.c	FUNCTION_50	CALL_1
0x8cb1	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      8107	option.c	FUNCTION_50	IF_2
0x8cb7	          0x83e006	                              and eax, 6	      8107	option.c	FUNCTION_50	IF_2
0x8cba	            0x85c0	                           test eax, eax	      8107	option.c	FUNCTION_50	IF_2
0x8cbc	            0x752a	                           jne 0x4008d28	      8107	option.c	FUNCTION_50	IF_2
0x8cbe	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      8108	option.c	FUNCTION_50	CALL_2
0x8cc4	            0x4898	                                    cdqe	      8108	option.c	FUNCTION_50	CALL_2
0x8cc6	        0x48c1e006	                              shl rax, 6	      8108	option.c	FUNCTION_50	CALL_2
0x8cca	    0x480500000000	                              add rax, 0	      8108	option.c	FUNCTION_50	CALL_2
0x8cd0	      0xbe02000000	                              mov esi, 2	      8108	option.c	FUNCTION_50	CALL_2
0x8cd5	          0x4889c7	                            mov rdi, rax	      8108	option.c	FUNCTION_50	CALL_2
0x8cd8	      0xe82c3d0000	                 call sym.get_varp_scope	      8108	option.c	FUNCTION_50	CALL_2
0x8cdd	          0x4889c2	                            mov rdx, rax	      8108	option.c	FUNCTION_50	CALL_2
0x8ce0	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      8108	option.c	FUNCTION_50	CALL_2
0x8ce6	            0x8902	                    mov dword [rdx], eax	      8108	option.c	FUNCTION_50	CALL_2
0x8ce8	    0x4881bd60ffff	               cmp qword [rbp - 0xa0], 0	      8115	option.c	FUNCTION_50	IF_3
0x8cf3	            0x7505	                           jne 0x4008d3a	      8115	option.c	FUNCTION_50	IF_3
0x8cf5	      0xe8d97c0000	                 call sym.compatible_set	      8117	option.c	FUNCTION_50	IF_3	CALL_3
0x8cfa	    0x4881bd60ffff	               cmp qword [rbp - 0xa0], 0	      8121	option.c	FUNCTION_50	IF_4
0x8d05	            0x7519	                           jne 0x4008d60	      8121	option.c	FUNCTION_50	IF_4
0x8d07	    0x8b0500000000	            mov eax, dword [0x04008d4d] 	      8123	option.c	FUNCTION_50	IF_4
0x8d0d	            0x85c0	                           test eax, eax	      8123	option.c	FUNCTION_50	IF_4
0x8d0f	           0xf94c0	                                 sete al	      8123	option.c	FUNCTION_50	IF_4
0x8d12	           0xfb6c0	                           movzx eax, al	      8123	option.c	FUNCTION_50	IF_4
0x8d15	    0x890500000000	            mov dword [0x04008d5b], eax 	      8123	option.c	FUNCTION_50	IF_4
0x8d1b	      0xe90a0a0000	                           jmp 0x400976a	      8123	option.c	FUNCTION_50	IF_4
0x8d20	    0x4881bd60ffff	               cmp qword [rbp - 0xa0], 0	      8124	option.c	FUNCTION_50	ELSE_1	IF_5
0x8d2b	            0x7519	                           jne 0x4008d86	      8124	option.c	FUNCTION_50	ELSE_1	IF_5
0x8d2d	    0x8b0500000000	            mov eax, dword [0x04008d73] 	      8126	option.c	FUNCTION_50	ELSE_1	IF_5
0x8d33	            0x85c0	                           test eax, eax	      8126	option.c	FUNCTION_50	ELSE_1	IF_5
0x8d35	           0xf94c0	                                 sete al	      8126	option.c	FUNCTION_50	ELSE_1	IF_5
0x8d38	           0xfb6c0	                           movzx eax, al	      8126	option.c	FUNCTION_50	ELSE_1	IF_5
0x8d3b	    0x890500000000	            mov dword [0x04008d81], eax 	      8126	option.c	FUNCTION_50	ELSE_1	IF_5
0x8d41	      0xe9e4090000	                           jmp 0x400976a	      8126	option.c	FUNCTION_50	ELSE_1	IF_5
0x8d46	    0x488b05000000	            mov rax, qword [0x04008d8d] 	      8131	option.c	FUNCTION_50	ELSE_2	IF_6
0x8d4d	    0x480538160000	                         add rax, 0x1638	      8131	option.c	FUNCTION_50	ELSE_2	IF_6
0x8d53	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      8131	option.c	FUNCTION_50	ELSE_2	IF_6
0x8d5a	            0x7411	                            je 0x4008dad	      8131	option.c	FUNCTION_50	ELSE_2	IF_6
0x8d5c	    0x4881bd60ffff	               cmp qword [rbp - 0xa0], 0	      8131	option.c	FUNCTION_50	ELSE_2	IF_6
0x8d67	     0xf85d3000000	                           jne 0x4008e80	      8131	option.c	FUNCTION_50	ELSE_2	IF_6
0x8d6d	    0x488b05000000	            mov rax, qword [0x04008db4] 	      8136	option.c	FUNCTION_50	ELSE_2	IF_6	IF_7
0x8d74	    0x8b8038160000	          mov eax, dword [rax + 0x1638] 	      8136	option.c	FUNCTION_50	ELSE_2	IF_6	IF_7
0x8d7a	            0x85c0	                           test eax, eax	      8136	option.c	FUNCTION_50	ELSE_2	IF_6	IF_7
0x8d7c	            0x750e	                           jne 0x4008dcc	      8136	option.c	FUNCTION_50	ELSE_2	IF_6	IF_7
0x8d7e	    0x8b0500000000	            mov eax, dword [0x04008dc4] 	      8136	option.c	FUNCTION_50	ELSE_2	IF_6	IF_7
0x8d84	            0x85c0	                           test eax, eax	      8136	option.c	FUNCTION_50	ELSE_2	IF_6	IF_7
0x8d86	     0xf849d090000	                            je 0x4009769	      8136	option.c	FUNCTION_50	ELSE_2	IF_6	IF_7
0x8d8c	    0x488b05000000	            mov rax, qword [0x04008dd3] 	      8139	option.c	FUNCTION_50	ELSE_2	IF_6	IF_7
0x8d93	        0x48894598	             mov qword [rbp - 0x68], rax	      8139	option.c	FUNCTION_50	ELSE_2	IF_6	IF_7
0x8d97	    0x488b05000000	            mov rax, qword [0x04008dde] 	      8141	option.c	FUNCTION_50	ELSE_2	IF_6	IF_7
0x8d9e	    0x488905000000	            mov qword [0x04008de5], rax 	      8141	option.c	FUNCTION_50	ELSE_2	IF_6	IF_7
0x8da5	            0xeb79	                           jmp 0x4008e60	      8141	option.c	FUNCTION_50	ELSE_2	IF_6	IF_7
0x8da7	    0x488b05000000	            mov rax, qword [0x04008dee] 	      8147	option.c	FUNCTION_50	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1
0x8dae	        0x483b4598	             cmp rax, qword [rbp - 0x68]	      8147	option.c	FUNCTION_50	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1
0x8db2	            0x7416	                            je 0x4008e0a	      8147	option.c	FUNCTION_50	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1
0x8db4	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      8148	option.c	FUNCTION_50	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1
0x8dba	          0x83e002	                              and eax, 2	      8148	option.c	FUNCTION_50	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1
0x8dbd	            0x85c0	                           test eax, eax	      8148	option.c	FUNCTION_50	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1
0x8dbf	            0x7509	                           jne 0x4008e0a	      8148	option.c	FUNCTION_50	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1
0x8dc1	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 0	      8148	option.c	FUNCTION_50	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1
0x8dc8	            0x7544	                           jne 0x4008e4e	      8148	option.c	FUNCTION_50	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1
0x8dca	      0xe800000000	                          call 0x4008e0f	      8149	option.c	FUNCTION_50	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_1
0x8dcf	            0x85c0	                           test eax, eax	      8149	option.c	FUNCTION_50	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_1
0x8dd1	            0x753b	                           jne 0x4008e4e	      8149	option.c	FUNCTION_50	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_1
0x8dd3	    0x488b05000000	            mov rax, qword [0x04008e1a] 	      8149	option.c	FUNCTION_50	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_1
0x8dda	        0x488b4008	                mov rax, qword [rax + 8]	      8149	option.c	FUNCTION_50	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_1
0x8dde	          0x4885c0	                           test rax, rax	      8149	option.c	FUNCTION_50	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_1
0x8de1	            0x742b	                            je 0x4008e4e	      8149	option.c	FUNCTION_50	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_1
0x8de3	        0x488d45c0	                   lea rax, [rbp - 0x40]	      8151	option.c	FUNCTION_50	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_2
0x8de7	          0x4889c7	                            mov rdi, rax	      8151	option.c	FUNCTION_50	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_2
0x8dea	      0xe800000000	                          call 0x4008e2f	      8151	option.c	FUNCTION_50	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_2
0x8def	    0x488b05000000	            mov rax, qword [0x04008e36] 	      8152	option.c	FUNCTION_50	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_3
0x8df6	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	      8152	option.c	FUNCTION_50	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_3
0x8dfd	        0x488d45c0	                   lea rax, [rbp - 0x40]	      8152	option.c	FUNCTION_50	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_3
0x8e01	          0x4889c6	                            mov rsi, rax	      8152	option.c	FUNCTION_50	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_3
0x8e04	      0xbf00000000	                              mov edi, 0	      8152	option.c	FUNCTION_50	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_3
0x8e09	      0xe800000000	                          call 0x4008e4e	      8152	option.c	FUNCTION_50	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_3
0x8e0e	    0x488b05000000	            mov rax, qword [0x04008e55] 	      8141	option.c	FUNCTION_50	ELSE_2	IF_6	IF_7
0x8e15	        0x488b4068	            mov rax, qword [rax + 0x68] 	      8141	option.c	FUNCTION_50	ELSE_2	IF_6	IF_7
0x8e19	    0x488905000000	            mov qword [0x04008e60], rax 	      8141	option.c	FUNCTION_50	ELSE_2	IF_6	IF_7
0x8e20	    0x488b05000000	            mov rax, qword [0x04008e67] 	      8141	option.c	FUNCTION_50	ELSE_2	IF_6	IF_7
0x8e27	          0x4885c0	                           test rax, rax	      8141	option.c	FUNCTION_50	ELSE_2	IF_6	IF_7
0x8e2a	     0xf8577ffffff	                           jne 0x4008de7	      8141	option.c	FUNCTION_50	ELSE_2	IF_6	IF_7
0x8e30	        0x488b4598	             mov rax, qword [rbp - 0x68]	      8155	option.c	FUNCTION_50	ELSE_2	IF_6	IF_7
0x8e34	    0x488905000000	            mov qword [0x04008e7b], rax 	      8155	option.c	FUNCTION_50	ELSE_2	IF_6	IF_7
0x8e3b	      0xe9e9080000	                           jmp 0x4009769	      8136	option.c	FUNCTION_50	ELSE_2	IF_6	IF_7
0x8e40	    0x488b05000000	            mov rax, qword [0x04008e87] 	      8160	option.c	FUNCTION_50	ELSE_3	IF_8
0x8e47	    0x480548150000	                         add rax, 0x1548	      8160	option.c	FUNCTION_50	ELSE_3	IF_8
0x8e4d	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      8160	option.c	FUNCTION_50	ELSE_3	IF_8
0x8e54	            0x7554	                           jne 0x4008eea	      8160	option.c	FUNCTION_50	ELSE_3	IF_8
0x8e56	    0x488b05000000	            mov rax, qword [0x04008e9d] 	      8163	option.c	FUNCTION_50	ELSE_3	IF_8	IF_9
0x8e5d	    0x8b8048150000	          mov eax, dword [rax + 0x1548] 	      8163	option.c	FUNCTION_50	ELSE_3	IF_8	IF_9
0x8e63	            0x85c0	                           test eax, eax	      8163	option.c	FUNCTION_50	ELSE_3	IF_8	IF_9
0x8e65	            0x7517	                           jne 0x4008ebe	      8163	option.c	FUNCTION_50	ELSE_3	IF_8	IF_9
0x8e67	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      8163	option.c	FUNCTION_50	ELSE_3	IF_8	IF_9
0x8e6d	          0x83e004	                              and eax, 4	      8163	option.c	FUNCTION_50	ELSE_3	IF_8	IF_9
0x8e70	            0x85c0	                           test eax, eax	      8163	option.c	FUNCTION_50	ELSE_3	IF_8	IF_9
0x8e72	            0x750a	                           jne 0x4008ebe	      8163	option.c	FUNCTION_50	ELSE_3	IF_8	IF_9
0x8e74	    0xc70500000000	               mov dword [0x04008ebe], 0	      8164	option.c	FUNCTION_50	ELSE_3	IF_8	IF_9
0x8e7e	    0x488b05000000	            mov rax, qword [0x04008ec5] 	      8167	option.c	FUNCTION_50	ELSE_3	IF_8	IF_10
0x8e85	    0x8b8048150000	          mov eax, dword [rax + 0x1548] 	      8167	option.c	FUNCTION_50	ELSE_3	IF_8	IF_10
0x8e8b	            0x85c0	                           test eax, eax	      8167	option.c	FUNCTION_50	ELSE_3	IF_8	IF_10
0x8e8d	            0x7411	                            je 0x4008ee0	      8167	option.c	FUNCTION_50	ELSE_3	IF_8	IF_10
0x8e8f	    0x488b05000000	            mov rax, qword [0x04008ed6] 	      8168	option.c	FUNCTION_50	ELSE_3	IF_8	IF_10
0x8e96	    0xc78034170000	            mov dword [rax + 0x1734], 0 	      8168	option.c	FUNCTION_50	ELSE_3	IF_8	IF_10
0x8ea0	      0xe882b8ffff	                  call sym.redraw_titles	      8171	option.c	FUNCTION_50	ELSE_3	IF_8	CALL_4
0x8ea5	      0xe980080000	                           jmp 0x400976a	      8171	option.c	FUNCTION_50	ELSE_3	IF_8	CALL_4
0x8eaa	    0x488b05000000	            mov rax, qword [0x04008ef1] 	      8184	option.c	FUNCTION_50	ELSE_5	IF_13
0x8eb1	    0x480528150000	                         add rax, 0x1528	      8184	option.c	FUNCTION_50	ELSE_5	IF_13
0x8eb7	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      8184	option.c	FUNCTION_50	ELSE_5	IF_13
0x8ebe	            0x7554	                           jne 0x4008f54	      8184	option.c	FUNCTION_50	ELSE_5	IF_13
0x8ec0	      0xe800000000	                          call 0x4008f05	      8188	option.c	FUNCTION_50	ELSE_5	IF_13	IF_14	CALL_6
0x8ec5	            0x85c0	                           test eax, eax	      8188	option.c	FUNCTION_50	ELSE_5	IF_13	IF_14	CALL_6
0x8ec7	            0x7526	                           jne 0x4008f2f	      8188	option.c	FUNCTION_50	ELSE_5	IF_13	IF_14	CALL_6
0x8ec9	    0x488b05000000	            mov rax, qword [0x04008f10] 	      8189	option.c	FUNCTION_50	ELSE_5	IF_13	IF_14	CALL_8
0x8ed0	          0x4889c7	                            mov rdi, rax	      8189	option.c	FUNCTION_50	ELSE_5	IF_13	IF_14	CALL_8
0x8ed3	      0xe800000000	                          call 0x4008f18	      8189	option.c	FUNCTION_50	ELSE_5	IF_13	IF_14	CALL_8
0x8ed8	            0x85c0	                           test eax, eax	      8189	option.c	FUNCTION_50	ELSE_5	IF_13	IF_14	CALL_8
0x8eda	            0x742e	                            je 0x4008f4a	      8189	option.c	FUNCTION_50	ELSE_5	IF_13	IF_14	CALL_8
0x8edc	    0x488b05000000	            mov rax, qword [0x04008f23] 	      8189	option.c	FUNCTION_50	ELSE_5	IF_13	IF_14	CALL_8
0x8ee3	          0x4889c7	                            mov rdi, rax	      8189	option.c	FUNCTION_50	ELSE_5	IF_13	IF_14	CALL_8
0x8ee6	      0xe800000000	                          call 0x4008f2b	      8189	option.c	FUNCTION_50	ELSE_5	IF_13	IF_14	CALL_8
0x8eeb	            0x85c0	                           test eax, eax	      8189	option.c	FUNCTION_50	ELSE_5	IF_13	IF_14	CALL_8
0x8eed	            0x751b	                           jne 0x4008f4a	      8189	option.c	FUNCTION_50	ELSE_5	IF_13	IF_14	CALL_8
0x8eef	    0x488b05000000	            mov rax, qword [0x04008f36] 	      8191	option.c	FUNCTION_50	ELSE_5	IF_13	IF_14
0x8ef6	    0xc78028150000	            mov dword [rax + 0x1528], 0 	      8191	option.c	FUNCTION_50	ELSE_5	IF_13	IF_14
0x8f00	      0xb800000000	                              mov eax, 0	      8192	option.c	FUNCTION_50	ELSE_5	IF_13	IF_14	CALL_9
0x8f05	      0xe9120c0000	                           jmp 0x4009b5c	      8192	option.c	FUNCTION_50	ELSE_5	IF_13	IF_14	CALL_9
0x8f0a	      0xe818b8ffff	                  call sym.redraw_titles	      8196	option.c	FUNCTION_50	ELSE_5	IF_13	CALL_10
0x8f0f	      0xe916080000	                           jmp 0x400976a	      8196	option.c	FUNCTION_50	ELSE_5	IF_13	CALL_10
0x8f14	    0x488b05000000	            mov rax, qword [0x04008f5b] 	      8201	option.c	FUNCTION_50	ELSE_6	IF_15
0x8f1b	    0x480558140000	                         add rax, 0x1458	      8201	option.c	FUNCTION_50	ELSE_6	IF_15
0x8f21	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      8201	option.c	FUNCTION_50	ELSE_6	IF_15
0x8f28	            0x750a	                           jne 0x4008f74	      8201	option.c	FUNCTION_50	ELSE_6	IF_15
0x8f2a	      0xe8f8b7ffff	                  call sym.redraw_titles	      8203	option.c	FUNCTION_50	ELSE_6	IF_15	CALL_11
0x8f2f	      0xe9f6070000	                           jmp 0x400976a	      8203	option.c	FUNCTION_50	ELSE_6	IF_15	CALL_11
0x8f34	    0x488b05000000	            mov rax, qword [0x04008f7b] 	      8206	option.c	FUNCTION_50	ELSE_7	IF_16
0x8f3b	    0x48055c140000	                         add rax, 0x145c	      8206	option.c	FUNCTION_50	ELSE_7	IF_16
0x8f41	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      8206	option.c	FUNCTION_50	ELSE_7	IF_16
0x8f48	            0x750a	                           jne 0x4008f94	      8206	option.c	FUNCTION_50	ELSE_7	IF_16
0x8f4a	      0xe8d8b7ffff	                  call sym.redraw_titles	      8208	option.c	FUNCTION_50	ELSE_7	IF_16	CALL_12
0x8f4f	      0xe9d6070000	                           jmp 0x400976a	      8208	option.c	FUNCTION_50	ELSE_7	IF_16	CALL_12
0x8f54	    0x488b05000000	            mov rax, qword [0x04008f9b] 	      8212	option.c	FUNCTION_50	ELSE_8	IF_17
0x8f5b	    0x4805f4130000	                         add rax, 0x13f4	      8212	option.c	FUNCTION_50	ELSE_8	IF_17
0x8f61	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      8212	option.c	FUNCTION_50	ELSE_8	IF_17
0x8f68	            0x750a	                           jne 0x4008fb4	      8212	option.c	FUNCTION_50	ELSE_8	IF_17
0x8f6a	      0xe8b8b7ffff	                  call sym.redraw_titles	      8214	option.c	FUNCTION_50	ELSE_8	IF_17	CALL_13
0x8f6f	      0xe9b6070000	                           jmp 0x400976a	      8214	option.c	FUNCTION_50	ELSE_8	IF_17	CALL_13
0x8f74	    0x488b05000000	            mov rax, qword [0x04008fbb] 	      8220	option.c	FUNCTION_50	ELSE_9	IF_18
0x8f7b	    0x4805f0130000	                         add rax, 0x13f0	      8220	option.c	FUNCTION_50	ELSE_9	IF_18
0x8f81	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      8220	option.c	FUNCTION_50	ELSE_9	IF_18
0x8f88	            0x752c	                           jne 0x4008ff6	      8220	option.c	FUNCTION_50	ELSE_9	IF_18
0x8f8a	    0x488b05000000	            mov rax, qword [0x04008fd1] 	      8222	option.c	FUNCTION_50	ELSE_9	IF_18	CALL_14
0x8f91	    0x8b88f0130000	          mov ecx, dword [rax + 0x13f0] 	      8222	option.c	FUNCTION_50	ELSE_9	IF_18	CALL_14
0x8f97	    0x8b955cffffff	             mov edx, dword [rbp - 0xa4]	      8222	option.c	FUNCTION_50	ELSE_9	IF_18	CALL_14
0x8f9d	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	      8222	option.c	FUNCTION_50	ELSE_9	IF_18	CALL_14
0x8fa3	            0x89ce	                            mov esi, ecx	      8222	option.c	FUNCTION_50	ELSE_9	IF_18	CALL_14
0x8fa5	            0x89c7	                            mov edi, eax	      8222	option.c	FUNCTION_50	ELSE_9	IF_18	CALL_14
0x8fa7	      0xe800000000	                          call 0x4008fec	      8222	option.c	FUNCTION_50	ELSE_9	IF_18	CALL_14
0x8fac	      0xe876b7ffff	                  call sym.redraw_titles	      8224	option.c	FUNCTION_50	ELSE_9	IF_18	CALL_15
0x8fb1	      0xe974070000	                           jmp 0x400976a	      8224	option.c	FUNCTION_50	ELSE_9	IF_18	CALL_15
0x8fb6	    0x488b05000000	            mov rax, qword [0x04008ffd] 	      8230	option.c	FUNCTION_50	ELSE_10	IF_19
0x8fbd	    0x48050c140000	                         add rax, 0x140c	      8230	option.c	FUNCTION_50	ELSE_10	IF_19
0x8fc3	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      8230	option.c	FUNCTION_50	ELSE_10	IF_19
0x8fca	            0x7557	                           jne 0x4009063	      8230	option.c	FUNCTION_50	ELSE_10	IF_19
0x8fcc	    0x488b05000000	            mov rax, qword [0x04009013] 	      8230	option.c	FUNCTION_50	ELSE_10	IF_19
0x8fd3	    0x8b800c140000	          mov eax, dword [rax + 0x140c] 	      8230	option.c	FUNCTION_50	ELSE_10	IF_19
0x8fd9	    0x3b857cffffff	             cmp eax, dword [rbp - 0x84]	      8230	option.c	FUNCTION_50	ELSE_10	IF_19
0x8fdf	            0x7442	                            je 0x4009063	      8230	option.c	FUNCTION_50	ELSE_10	IF_19
0x8fe1	    0x488b15000000	            mov rdx, qword [0x04009028] 	      8232	option.c	FUNCTION_50	ELSE_10	IF_19	CALL_16
0x8fe8	    0x488b05000000	            mov rax, qword [0x0400902f] 	      8232	option.c	FUNCTION_50	ELSE_10	IF_19	CALL_16
0x8fef	    0x8b800c140000	          mov eax, dword [rax + 0x140c] 	      8232	option.c	FUNCTION_50	ELSE_10	IF_19	CALL_16
0x8ff5	            0x85c0	                           test eax, eax	      8232	option.c	FUNCTION_50	ELSE_10	IF_19	CALL_16
0x8ff7	            0x7407	                            je 0x4009040	      8232	option.c	FUNCTION_50	ELSE_10	IF_19	CALL_16
0x8ff9	      0xb800000000	                              mov eax, 0	      8232	option.c	FUNCTION_50	ELSE_10	IF_19	CALL_16
0x8ffe	            0xeb05	                           jmp 0x4009045	      8232	option.c	FUNCTION_50	ELSE_10	IF_19	CALL_16
0x9000	      0xb802000000	                              mov eax, 2	      8232	option.c	FUNCTION_50	ELSE_10	IF_19	CALL_16
0x9005	          0x4989d0	                             mov r8, rdx	      8232	option.c	FUNCTION_50	ELSE_10	IF_19	CALL_16
0x9008	      0xb901000000	                              mov ecx, 1	      8232	option.c	FUNCTION_50	ELSE_10	IF_19	CALL_16
0x900d	      0xba00000000	                              mov edx, 0	      8232	option.c	FUNCTION_50	ELSE_10	IF_19	CALL_16
0x9012	      0xbe00000000	                              mov esi, 0	      8232	option.c	FUNCTION_50	ELSE_10	IF_19	CALL_16
0x9017	            0x89c7	                            mov edi, eax	      8232	option.c	FUNCTION_50	ELSE_10	IF_19	CALL_16
0x9019	      0xe800000000	                          call 0x400905e	      8232	option.c	FUNCTION_50	ELSE_10	IF_19	CALL_16
0x901e	      0xe907070000	                           jmp 0x400976a	      8232	option.c	FUNCTION_50	ELSE_10	IF_19	CALL_16
0x9023	    0x488b05000000	            mov rax, qword [0x0400906a] 	      8238	option.c	FUNCTION_50	ELSE_11	IF_20
0x902a	    0x480578150000	                         add rax, 0x1578	      8238	option.c	FUNCTION_50	ELSE_11	IF_20
0x9030	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      8238	option.c	FUNCTION_50	ELSE_11	IF_20
0x9037	            0x754a	                           jne 0x40090c3	      8238	option.c	FUNCTION_50	ELSE_11	IF_20
0x9039	    0x488b05000000	            mov rax, qword [0x04009080] 	      8240	option.c	FUNCTION_50	ELSE_11	IF_20	IF_21
0x9040	    0x8b8078150000	          mov eax, dword [rax + 0x1578] 	      8240	option.c	FUNCTION_50	ELSE_11	IF_20	IF_21
0x9046	            0x85c0	                           test eax, eax	      8240	option.c	FUNCTION_50	ELSE_11	IF_20	IF_21
0x9048	            0x7420	                            je 0x40090aa	      8240	option.c	FUNCTION_50	ELSE_11	IF_20	IF_21
0x904a	    0x488b05000000	            mov rax, qword [0x04009091] 	      8240	option.c	FUNCTION_50	ELSE_11	IF_20	IF_21
0x9051	          0x4885c0	                           test rax, rax	      8240	option.c	FUNCTION_50	ELSE_11	IF_20	IF_21
0x9054	            0x7414	                            je 0x40090aa	      8240	option.c	FUNCTION_50	ELSE_11	IF_20	IF_21
0x9056	    0x488b05000000	            mov rax, qword [0x0400909d] 	      8241	option.c	FUNCTION_50	ELSE_11	IF_20	CALL_17
0x905d	          0x4889c7	                            mov rdi, rax	      8241	option.c	FUNCTION_50	ELSE_11	IF_20	CALL_17
0x9060	      0xe800000000	                          call 0x40090a5	      8241	option.c	FUNCTION_50	ELSE_11	IF_20	CALL_17
0x9065	      0xe9c0060000	                           jmp 0x400976a	      8241	option.c	FUNCTION_50	ELSE_11	IF_20	CALL_17
0x906a	    0x488b05000000	            mov rax, qword [0x040090b1] 	      8245	option.c	FUNCTION_50	ELSE_11	IF_20	CALL_18
0x9071	      0xbe01000000	                              mov esi, 1	      8245	option.c	FUNCTION_50	ELSE_11	IF_20	CALL_18
0x9076	          0x4889c7	                            mov rdi, rax	      8245	option.c	FUNCTION_50	ELSE_11	IF_20	CALL_18
0x9079	      0xe800000000	                          call 0x40090be	      8245	option.c	FUNCTION_50	ELSE_11	IF_20	CALL_18
0x907e	      0xe9a7060000	                           jmp 0x400976a	      8245	option.c	FUNCTION_50	ELSE_11	IF_20	CALL_18
0x9083	    0x4881bd60ffff	               cmp qword [rbp - 0xa0], 0	      8249	option.c	FUNCTION_50	ELSE_13	IF_22
0x908e	     0xf85e4000000	                           jne 0x40091b8	      8249	option.c	FUNCTION_50	ELSE_13	IF_22
0x9094	    0x488b05000000	            mov rax, qword [0x040090db] 	      8253	option.c	FUNCTION_50	ELSE_13	IF_22	CALL_19
0x909b	      0xbe73000000	                           mov esi, 0x73	      8253	option.c	FUNCTION_50	ELSE_13	IF_22	CALL_19
0x90a0	          0x4889c7	                            mov rdi, rax	      8253	option.c	FUNCTION_50	ELSE_13	IF_22	CALL_19
0x90a3	      0xe800000000	                          call 0x40090e8	      8253	option.c	FUNCTION_50	ELSE_13	IF_22	CALL_19
0x90a8	        0x48894590	             mov qword [rbp - 0x70], rax	      8253	option.c	FUNCTION_50	ELSE_13	IF_22	CALL_19
0x90ac	    0x8b0500000000	            mov eax, dword [0x040090f2] 	      8256	option.c	FUNCTION_50	ELSE_13	IF_22	IF_23
0x90b2	            0x85c0	                           test eax, eax	      8256	option.c	FUNCTION_50	ELSE_13	IF_22	IF_23
0x90b4	            0x7479	                            je 0x400916f	      8256	option.c	FUNCTION_50	ELSE_13	IF_22	IF_23
0x90b6	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      8256	option.c	FUNCTION_50	ELSE_13	IF_22	IF_23
0x90bb	            0x7572	                           jne 0x400916f	      8256	option.c	FUNCTION_50	ELSE_13	IF_22	IF_23
0x90bd	    0x488b15000000	            mov rdx, qword [0x04009104] 	      8258	option.c	FUNCTION_50	ELSE_13	IF_22	IF_23	CALL_20
0x90c4	    0x488b05000000	            mov rax, qword [0x0400910b] 	      8258	option.c	FUNCTION_50	ELSE_13	IF_22	IF_23	CALL_20
0x90cb	          0x4889d6	                            mov rsi, rdx	      8258	option.c	FUNCTION_50	ELSE_13	IF_22	IF_23	CALL_20
0x90ce	          0x4889c7	                            mov rdi, rax	      8258	option.c	FUNCTION_50	ELSE_13	IF_22	IF_23	CALL_20
0x90d1	      0xe800000000	                          call 0x4009116	      8258	option.c	FUNCTION_50	ELSE_13	IF_22	IF_23	CALL_20
0x90d6	    0x488b15000000	            mov rdx, qword [0x0400911d] 	      8259	option.c	FUNCTION_50	ELSE_13	IF_22	IF_23	CALL_21
0x90dd	          0x4889d0	                            mov rax, rdx	      8259	option.c	FUNCTION_50	ELSE_13	IF_22	IF_23	CALL_21
0x90e0	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      8259	option.c	FUNCTION_50	ELSE_13	IF_22	IF_23	CALL_21
0x90e7	          0x4889c6	                            mov rsi, rax	      8259	option.c	FUNCTION_50	ELSE_13	IF_22	IF_23	CALL_21
0x90ea	      0xb800000000	                              mov eax, 0	      8259	option.c	FUNCTION_50	ELSE_13	IF_22	IF_23	CALL_21
0x90ef	          0x4889f7	                            mov rdi, rsi	      8259	option.c	FUNCTION_50	ELSE_13	IF_22	IF_23	CALL_21
0x90f2	            0xf2ae	              repne scasb al, byte [rdi]	      8259	option.c	FUNCTION_50	ELSE_13	IF_22	IF_23	CALL_21
0x90f4	          0x4889c8	                            mov rax, rcx	      8259	option.c	FUNCTION_50	ELSE_13	IF_22	IF_23	CALL_21
0x90f7	          0x48f7d0	                                 not rax	      8259	option.c	FUNCTION_50	ELSE_13	IF_22	IF_23	CALL_21
0x90fa	        0x4883e801	                              sub rax, 1	      8259	option.c	FUNCTION_50	ELSE_13	IF_22	IF_23	CALL_21
0x90fe	          0x4801d0	                            add rax, rdx	      8259	option.c	FUNCTION_50	ELSE_13	IF_22	IF_23	CALL_21
0x9101	      0x66c7007300	                    mov word [rax], 0x73	      8259	option.c	FUNCTION_50	ELSE_13	IF_22	IF_23	CALL_21
0x9106	    0x488b05000000	            mov rax, qword [0x0400914d] 	      8260	option.c	FUNCTION_50	ELSE_13	IF_22	IF_23	CALL_22
0x910d	    0x41b800000000	                              mov r8d, 0	      8260	option.c	FUNCTION_50	ELSE_13	IF_22	IF_23	CALL_22
0x9113	      0xb901000000	                              mov ecx, 1	      8260	option.c	FUNCTION_50	ELSE_13	IF_22	IF_23	CALL_22
0x9118	          0x4889c2	                            mov rdx, rax	      8260	option.c	FUNCTION_50	ELSE_13	IF_22	IF_23	CALL_22
0x911b	      0xbeffffffff	                     mov esi, 0xffffffff	      8260	option.c	FUNCTION_50	ELSE_13	IF_22	IF_23	CALL_22
0x9120	      0xbf00000000	                              mov edi, 0	      8260	option.c	FUNCTION_50	ELSE_13	IF_22	IF_23	CALL_22
0x9125	      0xe800000000	                          call 0x400916a	      8260	option.c	FUNCTION_50	ELSE_13	IF_22	IF_23	CALL_22
0x912a	      0xe9fb050000	                           jmp 0x400976a	      8260	option.c	FUNCTION_50	ELSE_13	IF_22	IF_23	CALL_22
0x912f	    0x8b0500000000	            mov eax, dword [0x04009175] 	      8263	option.c	FUNCTION_50	ELSE_13	IF_22	ELSE_14	IF_24
0x9135	            0x85c0	                           test eax, eax	      8263	option.c	FUNCTION_50	ELSE_13	IF_22	ELSE_14	IF_24
0x9137	     0xf85ed050000	                           jne 0x400976a	      8263	option.c	FUNCTION_50	ELSE_13	IF_22	ELSE_14	IF_24
0x913d	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      8263	option.c	FUNCTION_50	ELSE_13	IF_22	ELSE_14	IF_24
0x9142	     0xf84e2050000	                            je 0x400976a	      8263	option.c	FUNCTION_50	ELSE_13	IF_22	ELSE_14	IF_24
0x9148	        0x488b4590	             mov rax, qword [rbp - 0x70]	      8264	option.c	FUNCTION_50	ELSE_13	IF_22	ELSE_14	IF_24
0x914c	        0x4883c001	                              add rax, 1	      8264	option.c	FUNCTION_50	ELSE_13	IF_22	ELSE_14	IF_24
0x9150	          0x4889c7	                            mov rdi, rax	      8264	option.c	FUNCTION_50	ELSE_13	IF_22	ELSE_14	IF_24
0x9153	      0xe800000000	                          call 0x4009198	      8264	option.c	FUNCTION_50	ELSE_13	IF_22	ELSE_14	IF_24
0x9158	        0x488d5001	                      lea rdx, [rax + 1]	      8264	option.c	FUNCTION_50	ELSE_13	IF_22	ELSE_14	IF_24
0x915c	        0x488b4590	             mov rax, qword [rbp - 0x70]	      8264	option.c	FUNCTION_50	ELSE_13	IF_22	ELSE_14	IF_24
0x9160	        0x488d4801	                      lea rcx, [rax + 1]	      8264	option.c	FUNCTION_50	ELSE_13	IF_22	ELSE_14	IF_24
0x9164	        0x488b4590	             mov rax, qword [rbp - 0x70]	      8264	option.c	FUNCTION_50	ELSE_13	IF_22	ELSE_14	IF_24
0x9168	          0x4889ce	                            mov rsi, rcx	      8264	option.c	FUNCTION_50	ELSE_13	IF_22	ELSE_14	IF_24
0x916b	          0x4889c7	                            mov rdi, rax	      8264	option.c	FUNCTION_50	ELSE_13	IF_22	ELSE_14	IF_24
0x916e	      0xe800000000	                          call 0x40091b3	      8264	option.c	FUNCTION_50	ELSE_13	IF_22	ELSE_14	IF_24
0x9173	      0xe9b2050000	                           jmp 0x400976a	      8264	option.c	FUNCTION_50	ELSE_13	IF_22	ELSE_14	IF_24
0x9178	    0x4881bd60ffff	               cmp qword [rbp - 0xa0], 0	      8268	option.c	FUNCTION_50	ELSE_15	IF_25
0x9183	            0x750a	                           jne 0x40091cf	      8268	option.c	FUNCTION_50	ELSE_15	IF_25
0x9185	      0xe8d9720000	           call sym.paste_option_changed	      8270	option.c	FUNCTION_50	ELSE_15	IF_25	CALL_24
0x918a	      0xe99b050000	                           jmp 0x400976a	      8270	option.c	FUNCTION_50	ELSE_15	IF_25	CALL_24
0x918f	    0x4881bd60ffff	               cmp qword [rbp - 0xa0], 0	      8274	option.c	FUNCTION_50	ELSE_16	IF_26
0x919a	            0x757e	                           jne 0x400925a	      8274	option.c	FUNCTION_50	ELSE_16	IF_26
0x919c	    0x8b0500000000	            mov eax, dword [0x040091e2] 	      8276	option.c	FUNCTION_50	ELSE_16	IF_26	IF_27
0x91a2	            0x85c0	                           test eax, eax	      8276	option.c	FUNCTION_50	ELSE_16	IF_26	IF_27
0x91a4	            0x7426	                            je 0x400920c	      8276	option.c	FUNCTION_50	ELSE_16	IF_26	IF_27
0x91a6	    0x8b0500000000	            mov eax, dword [0x040091ec] 	      8278	option.c	FUNCTION_50	ELSE_16	IF_26	IF_27	IF_28
0x91ac	          0x83e010	                           and eax, 0x10	      8278	option.c	FUNCTION_50	ELSE_16	IF_26	IF_27	IF_28
0x91af	            0x85c0	                           test eax, eax	      8278	option.c	FUNCTION_50	ELSE_16	IF_26	IF_27	IF_28
0x91b1	            0x750a	                           jne 0x40091fd	      8278	option.c	FUNCTION_50	ELSE_16	IF_26	IF_27	IF_28
0x91b3	    0xc70500000000	               mov dword [0x040091fd], 1	      8279	option.c	FUNCTION_50	ELSE_16	IF_26	IF_27	IF_28
0x91bd	    0xc70500000000	               mov dword [0x04009207], 0	      8280	option.c	FUNCTION_50	ELSE_16	IF_26	IF_27
0x91c7	      0xe95e050000	                           jmp 0x400976a	      8280	option.c	FUNCTION_50	ELSE_16	IF_26	IF_27
0x91cc	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      8283	option.c	FUNCTION_50	ELSE_16	IF_26	ELSE_17	IF_29
0x91d3	     0xf8451050000	                            je 0x400976a	      8283	option.c	FUNCTION_50	ELSE_16	IF_26	ELSE_17	IF_29
0x91d9	    0xc70500000000	               mov dword [0x04009223], 0	      8285	option.c	FUNCTION_50	ELSE_16	IF_26	ELSE_17	IF_29
0x91e3	    0xc70500000000	               mov dword [0x0400922d], 1	      8286	option.c	FUNCTION_50	ELSE_16	IF_26	ELSE_17	IF_29
0x91ed	    0x8b0500000000	            mov eax, dword [0x04009233] 	      8287	option.c	FUNCTION_50	ELSE_16	IF_26	ELSE_17	IF_29	IF_30
0x91f3	            0x85c0	                           test eax, eax	      8287	option.c	FUNCTION_50	ELSE_16	IF_26	ELSE_17	IF_29	IF_30
0x91f5	            0x7414	                            je 0x400924b	      8287	option.c	FUNCTION_50	ELSE_16	IF_26	ELSE_17	IF_29	IF_30
0x91f7	    0x8b0500000000	            mov eax, dword [0x0400923d] 	      8287	option.c	FUNCTION_50	ELSE_16	IF_26	ELSE_17	IF_29	IF_30
0x91fd	            0x85c0	                           test eax, eax	      8287	option.c	FUNCTION_50	ELSE_16	IF_26	ELSE_17	IF_29	IF_30
0x91ff	            0x740a	                            je 0x400924b	      8287	option.c	FUNCTION_50	ELSE_16	IF_26	ELSE_17	IF_29	IF_30
0x9201	    0xc70500000000	               mov dword [0x0400924b], 1	      8288	option.c	FUNCTION_50	ELSE_16	IF_26	ELSE_17	IF_29	IF_30
0x920b	    0xc70500000000	               mov dword [0x04009255], 0	      8289	option.c	FUNCTION_50	ELSE_16	IF_26	ELSE_17	IF_29
0x9215	      0xe910050000	                           jmp 0x400976a	      8289	option.c	FUNCTION_50	ELSE_16	IF_26	ELSE_17	IF_29
0x921a	    0x4881bd60ffff	               cmp qword [rbp - 0xa0], 0	      8294	option.c	FUNCTION_50	ELSE_18	IF_31
0x9225	            0x7519	                           jne 0x4009280	      8294	option.c	FUNCTION_50	ELSE_18	IF_31
0x9227	    0x8b0500000000	            mov eax, dword [0x0400926d] 	      8294	option.c	FUNCTION_50	ELSE_18	IF_31
0x922d	            0x85c0	                           test eax, eax	      8294	option.c	FUNCTION_50	ELSE_18	IF_31
0x922f	            0x740f	                            je 0x4009280	      8294	option.c	FUNCTION_50	ELSE_18	IF_31
0x9231	      0xbf23000000	                           mov edi, 0x23	      8296	option.c	FUNCTION_50	ELSE_18	IF_31	CALL_25
0x9236	      0xe800000000	                          call 0x400927b	      8296	option.c	FUNCTION_50	ELSE_18	IF_31	CALL_25
0x923b	      0xe9ea040000	                           jmp 0x400976a	      8296	option.c	FUNCTION_50	ELSE_18	IF_31	CALL_25
0x9240	    0x4881bd60ffff	               cmp qword [rbp - 0xa0], 0	      8301	option.c	FUNCTION_50	ELSE_19	IF_32
0x924b	            0x753e	                           jne 0x40092cb	      8301	option.c	FUNCTION_50	ELSE_19	IF_32
0x924d	    0xc70500000000	               mov dword [0x04009297], 0	      8303	option.c	FUNCTION_50	ELSE_19	IF_32	CALL_26
0x9257	    0x8b0500000000	            mov eax, dword [0x0400929d] 	      8303	option.c	FUNCTION_50	ELSE_19	IF_32	CALL_26
0x925d	            0x85c0	                           test eax, eax	      8303	option.c	FUNCTION_50	ELSE_19	IF_32	CALL_26
0x925f	            0x7511	                           jne 0x40092b2	      8303	option.c	FUNCTION_50	ELSE_19	IF_32	CALL_26
0x9261	    0x8b0500000000	            mov eax, dword [0x040092a7] 	      8303	option.c	FUNCTION_50	ELSE_19	IF_32	CALL_26
0x9267	            0x85c0	                           test eax, eax	      8303	option.c	FUNCTION_50	ELSE_19	IF_32	CALL_26
0x9269	            0x7407	                            je 0x40092b2	      8303	option.c	FUNCTION_50	ELSE_19	IF_32	CALL_26
0x926b	      0xb801000000	                              mov eax, 1	      8303	option.c	FUNCTION_50	ELSE_19	IF_32	CALL_26
0x9270	            0xeb05	                           jmp 0x40092b7	      8303	option.c	FUNCTION_50	ELSE_19	IF_32	CALL_26
0x9272	      0xb800000000	                              mov eax, 0	      8303	option.c	FUNCTION_50	ELSE_19	IF_32	CALL_26
0x9277	            0x4898	                                    cdqe	      8303	option.c	FUNCTION_50	ELSE_19	IF_32	CALL_26
0x9279	          0x4889c6	                            mov rsi, rax	      8303	option.c	FUNCTION_50	ELSE_19	IF_32	CALL_26
0x927c	      0xbf38000000	                           mov edi, 0x38	      8303	option.c	FUNCTION_50	ELSE_19	IF_32	CALL_26
0x9281	      0xe800000000	                          call 0x40092c6	      8303	option.c	FUNCTION_50	ELSE_19	IF_32	CALL_26
0x9286	      0xe99f040000	                           jmp 0x400976a	      8303	option.c	FUNCTION_50	ELSE_19	IF_32	CALL_26
0x928b	    0x488b05000000	            mov rax, qword [0x040092d2] 	      8310	option.c	FUNCTION_50	ELSE_20	IF_33
0x9292	    0x480588020000	                          add rax, 0x288	      8310	option.c	FUNCTION_50	ELSE_20	IF_33
0x9298	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      8310	option.c	FUNCTION_50	ELSE_20	IF_33
0x929f	            0x753d	                           jne 0x400931e	      8310	option.c	FUNCTION_50	ELSE_20	IF_33
0x92a1	    0x488b05000000	            mov rax, qword [0x040092e8] 	      8312	option.c	FUNCTION_50	ELSE_20	IF_33	IF_34
0x92a8	    0x8b8088020000	           mov eax, dword [rax + 0x288] 	      8312	option.c	FUNCTION_50	ELSE_20	IF_33	IF_34
0x92ae	            0x85c0	                           test eax, eax	      8312	option.c	FUNCTION_50	ELSE_20	IF_33	IF_34
0x92b0	     0xf8474040000	                            je 0x400976a	      8312	option.c	FUNCTION_50	ELSE_20	IF_33	IF_34
0x92b6	      0xbf00000000	                              mov edi, 0	      8314	option.c	FUNCTION_50	ELSE_20	IF_33	IF_34	CALL_27
0x92bb	      0xe800000000	                          call 0x4009300	      8314	option.c	FUNCTION_50	ELSE_20	IF_33	IF_34	CALL_27
0x92c0	    0x488b05000000	            mov rax, qword [0x04009307] 	      8315	option.c	FUNCTION_50	ELSE_20	IF_33	IF_34
0x92c7	    0x488b15000000	            mov rdx, qword [0x0400930e] 	      8315	option.c	FUNCTION_50	ELSE_20	IF_33	IF_34
0x92ce	        0x488b5278	            mov rdx, qword [rdx + 0x78] 	      8315	option.c	FUNCTION_50	ELSE_20	IF_33	IF_34
0x92d2	    0x488990500500	            mov qword [rax + 0x550], rdx	      8315	option.c	FUNCTION_50	ELSE_20	IF_33	IF_34
0x92d9	      0xe94c040000	                           jmp 0x400976a	      8315	option.c	FUNCTION_50	ELSE_20	IF_33	IF_34
0x92de	    0x488b05000000	            mov rax, qword [0x04009325] 	      8322	option.c	FUNCTION_50	ELSE_21	IF_35
0x92e5	    0x480550020000	                          add rax, 0x250	      8322	option.c	FUNCTION_50	ELSE_21	IF_35
0x92eb	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      8322	option.c	FUNCTION_50	ELSE_21	IF_35
0x92f2	            0x7570	                           jne 0x40093a4	      8322	option.c	FUNCTION_50	ELSE_21	IF_35
0x92f4	    0x488b05000000	            mov rax, qword [0x0400933b] 	      8324	option.c	FUNCTION_50	ELSE_21	IF_35	IF_36
0x92fb	    0x8b8050020000	           mov eax, dword [rax + 0x250] 	      8324	option.c	FUNCTION_50	ELSE_21	IF_35	IF_36
0x9301	            0x85c0	                           test eax, eax	      8324	option.c	FUNCTION_50	ELSE_21	IF_35	IF_36
0x9303	     0xf8421040000	                            je 0x400976a	      8324	option.c	FUNCTION_50	ELSE_21	IF_35	IF_36
0x9309	    0x488b05000000	            mov rax, qword [0x04009350] 	      8328	option.c	FUNCTION_50	ELSE_21	IF_35	IF_36	CALL_28
0x9310	        0x48894580	             mov qword [rbp - 0x80], rax	      8328	option.c	FUNCTION_50	ELSE_21	IF_35	IF_36	CALL_28
0x9314	            0xeb42	                           jmp 0x4009398	      8328	option.c	FUNCTION_50	ELSE_21	IF_35	IF_36	CALL_28
0x9316	        0x488b4580	             mov rax, qword [rbp - 0x80]	      8329	option.c	FUNCTION_50	ELSE_21	IF_35	IF_36	IF_37
0x931a	    0x8b8050020000	           mov eax, dword [rax + 0x250] 	      8329	option.c	FUNCTION_50	ELSE_21	IF_35	IF_36	IF_37
0x9320	            0x85c0	                           test eax, eax	      8329	option.c	FUNCTION_50	ELSE_21	IF_35	IF_36	IF_37
0x9322	            0x7428	                            je 0x400938c	      8329	option.c	FUNCTION_50	ELSE_21	IF_35	IF_36	IF_37
0x9324	    0x488b05000000	            mov rax, qword [0x0400936b] 	      8329	option.c	FUNCTION_50	ELSE_21	IF_35	IF_36	IF_37
0x932b	        0x48394580	            cmp qword [rbp - 0x80], rax 	      8329	option.c	FUNCTION_50	ELSE_21	IF_35	IF_36	IF_37
0x932f	            0x741b	                            je 0x400938c	      8329	option.c	FUNCTION_50	ELSE_21	IF_35	IF_36	IF_37
0x9331	    0x488b05000000	            mov rax, qword [0x04009378] 	      8331	option.c	FUNCTION_50	ELSE_21	IF_35	IF_36	IF_37
0x9338	    0xc78050020000	              mov dword [rax + 0x250], 0	      8331	option.c	FUNCTION_50	ELSE_21	IF_35	IF_36	IF_37
0x9342	      0xb800000000	                              mov eax, 0	      8332	option.c	FUNCTION_50	ELSE_21	IF_35	IF_36	IF_37	CALL_29
0x9347	      0xe9d0070000	                           jmp 0x4009b5c	      8332	option.c	FUNCTION_50	ELSE_21	IF_35	IF_36	IF_37	CALL_29
0x934c	        0x488b4580	             mov rax, qword [rbp - 0x80]	      8328	option.c	FUNCTION_50	ELSE_21	IF_35	IF_36	CALL_28
0x9350	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8328	option.c	FUNCTION_50	ELSE_21	IF_35	IF_36	CALL_28
0x9354	        0x48894580	             mov qword [rbp - 0x80], rax	      8328	option.c	FUNCTION_50	ELSE_21	IF_35	IF_36	CALL_28
0x9358	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      8328	option.c	FUNCTION_50	ELSE_21	IF_35	IF_36	CALL_28
0x935d	            0x75b7	                           jne 0x4009356	      8328	option.c	FUNCTION_50	ELSE_21	IF_35	IF_36	CALL_28
0x935f	      0xe9c6030000	                           jmp 0x400976a	      8328	option.c	FUNCTION_50	ELSE_21	IF_35	IF_36	CALL_28
0x9364	    0x488b05000000	            mov rax, qword [0x040093ab] 	      8339	option.c	FUNCTION_50	ELSE_22	IF_38
0x936b	    0x480598150000	                         add rax, 0x1598	      8339	option.c	FUNCTION_50	ELSE_22	IF_38
0x9371	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      8339	option.c	FUNCTION_50	ELSE_22	IF_38
0x9378	            0x7529	                           jne 0x40093e3	      8339	option.c	FUNCTION_50	ELSE_22	IF_38
0x937a	    0x488b05000000	            mov rax, qword [0x040093c1] 	      8341	option.c	FUNCTION_50	ELSE_22	IF_38	CALL_30
0x9381	    0x8b8098150000	          mov eax, dword [rax + 0x1598] 	      8341	option.c	FUNCTION_50	ELSE_22	IF_38	CALL_30
0x9387	            0x85c0	                           test eax, eax	      8341	option.c	FUNCTION_50	ELSE_22	IF_38	CALL_30
0x9389	           0xf95c0	                                setne al	      8341	option.c	FUNCTION_50	ELSE_22	IF_38	CALL_30
0x938c	           0xfb6c0	                           movzx eax, al	      8341	option.c	FUNCTION_50	ELSE_22	IF_38	CALL_30
0x938f	    0x8b955cffffff	             mov edx, dword [rbp - 0xa4]	      8341	option.c	FUNCTION_50	ELSE_22	IF_38	CALL_30
0x9395	            0x89d6	                            mov esi, edx	      8341	option.c	FUNCTION_50	ELSE_22	IF_38	CALL_30
0x9397	            0x89c7	                            mov edi, eax	      8341	option.c	FUNCTION_50	ELSE_22	IF_38	CALL_30
0x9399	      0xe800000000	                          call 0x40093de	      8341	option.c	FUNCTION_50	ELSE_22	IF_38	CALL_30
0x939e	      0xe987030000	                           jmp 0x400976a	      8341	option.c	FUNCTION_50	ELSE_22	IF_38	CALL_30
0x93a3	    0x4881bd60ffff	               cmp qword [rbp - 0xa0], 0	      8345	option.c	FUNCTION_50	ELSE_23	IF_39
0x93ae	            0x7540	                           jne 0x4009430	      8345	option.c	FUNCTION_50	ELSE_23	IF_39
0x93b0	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      8346	option.c	FUNCTION_50	ELSE_23	IF_39	CALL_31
0x93b6	          0x83c801	                               or eax, 1	      8346	option.c	FUNCTION_50	ELSE_23	IF_39	CALL_31
0x93b9	            0x89c2	                            mov edx, eax	      8346	option.c	FUNCTION_50	ELSE_23	IF_39	CALL_31
0x93bb	    0x8b0500000000	            mov eax, dword [0x04009401] 	      8347	option.c	FUNCTION_50	ELSE_23	IF_39
0x93c1	            0x85c0	                           test eax, eax	      8346	option.c	FUNCTION_50	ELSE_23	IF_39	CALL_31
0x93c3	            0x7407	                            je 0x400940c	      8346	option.c	FUNCTION_50	ELSE_23	IF_39	CALL_31
0x93c5	      0xb800000000	                              mov eax, 0	      8346	option.c	FUNCTION_50	ELSE_23	IF_39	CALL_31
0x93ca	            0xeb05	                           jmp 0x4009411	      8346	option.c	FUNCTION_50	ELSE_23	IF_39	CALL_31
0x93cc	      0xb800000000	                              mov eax, 0	      8346	option.c	FUNCTION_50	ELSE_23	IF_39	CALL_31
0x93d1	    0x41b800000000	                              mov r8d, 0	      8346	option.c	FUNCTION_50	ELSE_23	IF_39	CALL_31
0x93d7	            0x89d1	                            mov ecx, edx	      8346	option.c	FUNCTION_50	ELSE_23	IF_39	CALL_31
0x93d9	          0x4889c2	                            mov rdx, rax	      8346	option.c	FUNCTION_50	ELSE_23	IF_39	CALL_31
0x93dc	      0xbeffffffff	                     mov esi, 0xffffffff	      8346	option.c	FUNCTION_50	ELSE_23	IF_39	CALL_31
0x93e1	      0xbf00000000	                              mov edi, 0	      8346	option.c	FUNCTION_50	ELSE_23	IF_39	CALL_31
0x93e6	      0xe800000000	                          call 0x400942b	      8346	option.c	FUNCTION_50	ELSE_23	IF_39	CALL_31
0x93eb	      0xe93a030000	                           jmp 0x400976a	      8346	option.c	FUNCTION_50	ELSE_23	IF_39	CALL_31
0x93f0	    0x488b05000000	            mov rax, qword [0x04009437] 	      8355	option.c	FUNCTION_50	ELSE_24	IF_40
0x93f7	    0x480508150000	                         add rax, 0x1508	      8355	option.c	FUNCTION_50	ELSE_24	IF_40
0x93fd	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      8355	option.c	FUNCTION_50	ELSE_24	IF_40
0x9404	            0x7519	                           jne 0x400945f	      8355	option.c	FUNCTION_50	ELSE_24	IF_40
0x9406	    0x488b05000000	            mov rax, qword [0x0400944d] 	      8357	option.c	FUNCTION_50	ELSE_24	IF_40	CALL_32
0x940d	      0xbe00000000	                              mov esi, 0	      8357	option.c	FUNCTION_50	ELSE_24	IF_40	CALL_32
0x9412	          0x4889c7	                            mov rdi, rax	      8357	option.c	FUNCTION_50	ELSE_24	IF_40	CALL_32
0x9415	      0xe800000000	                          call 0x400945a	      8357	option.c	FUNCTION_50	ELSE_24	IF_40	CALL_32
0x941a	      0xe90b030000	                           jmp 0x400976a	      8357	option.c	FUNCTION_50	ELSE_24	IF_40	CALL_32
0x941f	    0x4881bd60ffff	               cmp qword [rbp - 0xa0], 0	      8363	option.c	FUNCTION_50	ELSE_25	IF_41
0x942a	            0x750f	                           jne 0x400947b	      8363	option.c	FUNCTION_50	ELSE_25	IF_41
0x942c	      0xbf00000000	                              mov edi, 0	      8365	option.c	FUNCTION_50	ELSE_25	IF_41	CALL_33
0x9431	      0xe8a3a6ffff	                  call sym.did_set_title	      8365	option.c	FUNCTION_50	ELSE_25	IF_41	CALL_33
0x9436	      0xe9ef020000	                           jmp 0x400976a	      8365	option.c	FUNCTION_50	ELSE_25	IF_41	CALL_33
0x943b	    0x4881bd60ffff	               cmp qword [rbp - 0xa0], 0	      8368	option.c	FUNCTION_50	ELSE_26	IF_42
0x9446	            0x750f	                           jne 0x4009497	      8368	option.c	FUNCTION_50	ELSE_26	IF_42
0x9448	      0xbf01000000	                              mov edi, 1	      8370	option.c	FUNCTION_50	ELSE_26	IF_42	CALL_34
0x944d	      0xe887a6ffff	                  call sym.did_set_title	      8370	option.c	FUNCTION_50	ELSE_26	IF_42	CALL_34
0x9452	      0xe9d3020000	                           jmp 0x400976a	      8370	option.c	FUNCTION_50	ELSE_26	IF_42	CALL_34
0x9457	    0x488b05000000	            mov rax, qword [0x0400949e] 	      8374	option.c	FUNCTION_50	ELSE_27	IF_43
0x945e	    0x4805c8000000	                           add rax, 0xc8	      8374	option.c	FUNCTION_50	ELSE_27	IF_43
0x9464	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      8374	option.c	FUNCTION_50	ELSE_27	IF_43
0x946b	            0x752e	                           jne 0x40094db	      8374	option.c	FUNCTION_50	ELSE_27	IF_43
0x946d	    0x83bd68ffffff	               cmp dword [rbp - 0x98], 0	      8376	option.c	FUNCTION_50	ELSE_27	IF_43	IF_44
0x9474	            0x750f	                           jne 0x40094c5	      8376	option.c	FUNCTION_50	ELSE_27	IF_43	IF_44
0x9476	    0x488b05000000	            mov rax, qword [0x040094bd] 	      8377	option.c	FUNCTION_50	ELSE_27	IF_43	CALL_35
0x947d	          0x4889c7	                            mov rdi, rax	      8377	option.c	FUNCTION_50	ELSE_27	IF_43	CALL_35
0x9480	      0xe800000000	                          call 0x40094c5	      8377	option.c	FUNCTION_50	ELSE_27	IF_43	CALL_35
0x9485	      0xe89db2ffff	                  call sym.redraw_titles	      8379	option.c	FUNCTION_50	ELSE_27	IF_43	CALL_36
0x948a	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      8382	option.c	FUNCTION_50	ELSE_27	IF_43
0x9490	    0x890500000000	            mov dword [0x040094d6], eax 	      8382	option.c	FUNCTION_50	ELSE_27	IF_43
0x9496	      0xe98f020000	                           jmp 0x400976a	      8382	option.c	FUNCTION_50	ELSE_27	IF_43
0x949b	    0x488b05000000	            mov rax, qword [0x040094e2] 	      8412	option.c	FUNCTION_50	ELSE_30	IF_47
0x94a2	    0x480594020000	                          add rax, 0x294	      8412	option.c	FUNCTION_50	ELSE_30	IF_47
0x94a8	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      8412	option.c	FUNCTION_50	ELSE_30	IF_47
0x94af	            0x752b	                           jne 0x400951c	      8412	option.c	FUNCTION_50	ELSE_30	IF_47
0x94b1	    0x488b05000000	            mov rax, qword [0x040094f8] 	      8414	option.c	FUNCTION_50	ELSE_30	IF_47	IF_48
0x94b8	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      8414	option.c	FUNCTION_50	ELSE_30	IF_47	IF_48
0x94be	            0x85c0	                           test eax, eax	      8414	option.c	FUNCTION_50	ELSE_30	IF_47	IF_48
0x94c0	     0xf8464020000	                            je 0x400976a	      8414	option.c	FUNCTION_50	ELSE_30	IF_47	IF_48
0x94c6	    0x488b05000000	            mov rax, qword [0x0400950d] 	      8415	option.c	FUNCTION_50	ELSE_30	IF_47	IF_48
0x94cd	    0xc78094000000	               mov dword [rax + 0x94], 0	      8415	option.c	FUNCTION_50	ELSE_30	IF_47	IF_48
0x94d7	      0xe94e020000	                           jmp 0x400976a	      8415	option.c	FUNCTION_50	ELSE_30	IF_47	IF_48
0x94dc	    0x4881bd60ffff	               cmp qword [rbp - 0xa0], 0	      8418	option.c	FUNCTION_50	ELSE_31	IF_49
0x94e7	            0x7539	                           jne 0x4009562	      8418	option.c	FUNCTION_50	ELSE_31	IF_49
0x94e9	    0x8b0500000000	            mov eax, dword [0x0400952f] 	      8420	option.c	FUNCTION_50	ELSE_31	IF_49	IF_50
0x94ef	            0x85c0	                           test eax, eax	      8420	option.c	FUNCTION_50	ELSE_31	IF_49	IF_50
0x94f1	     0xf8433020000	                            je 0x400976a	      8420	option.c	FUNCTION_50	ELSE_31	IF_49	IF_50
0x94f7	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      8420	option.c	FUNCTION_50	ELSE_31	IF_49	IF_50
0x94fe	     0xf8526020000	                           jne 0x400976a	      8420	option.c	FUNCTION_50	ELSE_31	IF_49	IF_50
0x9504	    0x488b05000000	            mov rax, qword [0x0400954b] 	      8421	option.c	FUNCTION_50	ELSE_31	IF_49	CALL_40
0x950b	      0xba00000000	                              mov edx, 0	      8421	option.c	FUNCTION_50	ELSE_31	IF_49	CALL_40
0x9510	      0xbe00000000	                              mov esi, 0	      8421	option.c	FUNCTION_50	ELSE_31	IF_49	CALL_40
0x9515	          0x4889c7	                            mov rdi, rax	      8421	option.c	FUNCTION_50	ELSE_31	IF_49	CALL_40
0x9518	      0xe800000000	                          call 0x400955d	      8421	option.c	FUNCTION_50	ELSE_31	IF_49	CALL_40
0x951d	      0xe908020000	                           jmp 0x400976a	      8421	option.c	FUNCTION_50	ELSE_31	IF_49	CALL_40
0x9522	    0x4881bd60ffff	               cmp qword [rbp - 0xa0], 0	      8424	option.c	FUNCTION_50	ELSE_32	IF_51
0x952d	            0x755e	                           jne 0x40095cd	      8424	option.c	FUNCTION_50	ELSE_32	IF_51
0x952f	    0x8b0500000000	            mov eax, dword [0x04009575] 	      8430	option.c	FUNCTION_50	ELSE_32	IF_51	IF_52
0x9535	            0x85c0	                           test eax, eax	      8430	option.c	FUNCTION_50	ELSE_32	IF_51	IF_52
0x9537	            0x7416	                            je 0x400958f	      8430	option.c	FUNCTION_50	ELSE_32	IF_51	IF_52
0x9539	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      8430	option.c	FUNCTION_50	ELSE_32	IF_51	IF_52
0x9540	            0x750d	                           jne 0x400958f	      8430	option.c	FUNCTION_50	ELSE_32	IF_51	IF_52
0x9542	    0x48c705000000	               mov qword [0x0400958d], 0	      8431	option.c	FUNCTION_50	ELSE_32	IF_51	IF_52
0x954d	            0xeb21	                           jmp 0x40095b0	      8431	option.c	FUNCTION_50	ELSE_32	IF_51	IF_52
0x954f	    0x8b0500000000	            mov eax, dword [0x04009595] 	      8432	option.c	FUNCTION_50	ELSE_32	IF_51	ELSE_33	IF_53
0x9555	            0x85c0	                           test eax, eax	      8432	option.c	FUNCTION_50	ELSE_32	IF_51	ELSE_33	IF_53
0x9557	            0x7517	                           jne 0x40095b0	      8432	option.c	FUNCTION_50	ELSE_32	IF_51	ELSE_33	IF_53
0x9559	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      8432	option.c	FUNCTION_50	ELSE_32	IF_51	ELSE_33	IF_53
0x9560	            0x740e	                            je 0x40095b0	      8432	option.c	FUNCTION_50	ELSE_32	IF_51	ELSE_33	IF_53
0x9562	    0x488b05000000	            mov rax, qword [0x040095a9] 	      8433	option.c	FUNCTION_50	ELSE_32	IF_51	ELSE_33	IF_53
0x9569	    0x488905000000	            mov qword [0x040095b0], rax 	      8433	option.c	FUNCTION_50	ELSE_32	IF_51	ELSE_33	IF_53
0x9570	    0x488b05000000	            mov rax, qword [0x040095b7] 	      8434	option.c	FUNCTION_50	ELSE_32	IF_51
0x9577	           0xfb600	                   movzx eax, byte [rax]	      8434	option.c	FUNCTION_50	ELSE_32	IF_51
0x957a	            0x84c0	                             test al, al	      8434	option.c	FUNCTION_50	ELSE_32	IF_51
0x957c	           0xf95c0	                                setne al	      8434	option.c	FUNCTION_50	ELSE_32	IF_51
0x957f	           0xfb6c0	                           movzx eax, al	      8434	option.c	FUNCTION_50	ELSE_32	IF_51
0x9582	    0x890500000000	            mov dword [0x040095c8], eax 	      8434	option.c	FUNCTION_50	ELSE_32	IF_51
0x9588	      0xe99d010000	                           jmp 0x400976a	      8434	option.c	FUNCTION_50	ELSE_32	IF_51
0x958d	    0x4881bd60ffff	               cmp qword [rbp - 0xa0], 0	      8450	option.c	FUNCTION_50	ELSE_36	IF_58
0x9598	            0x750a	                           jne 0x40095e4	      8450	option.c	FUNCTION_50	ELSE_36	IF_58
0x959a	      0xe800000000	                          call 0x40095df	      8452	option.c	FUNCTION_50	ELSE_36	IF_58	CALL_43
0x959f	      0xe986010000	                           jmp 0x400976a	      8452	option.c	FUNCTION_50	ELSE_36	IF_58	CALL_43
0x95a4	    0x4881bd60ffff	               cmp qword [rbp - 0xa0], 0	      8457	option.c	FUNCTION_50	ELSE_37	IF_59
0x95af	            0x7518	                           jne 0x4009609	      8457	option.c	FUNCTION_50	ELSE_37	IF_59
0x95b1	    0x8b0500000000	            mov eax, dword [0x040095f7] 	      8460	option.c	FUNCTION_50	ELSE_37	IF_59
0x95b7	            0x85c0	                           test eax, eax	      8460	option.c	FUNCTION_50	ELSE_37	IF_59
0x95b9	     0xf846b010000	                            je 0x400976a	      8460	option.c	FUNCTION_50	ELSE_37	IF_59
0x95bf	      0xe800000000	                          call 0x4009604	      8460	option.c	FUNCTION_50	ELSE_37	IF_59
0x95c4	      0xe961010000	                           jmp 0x400976a	      8460	option.c	FUNCTION_50	ELSE_37	IF_59
0x95c9	    0x488b05000000	            mov rax, qword [0x04009610] 	      8466	option.c	FUNCTION_50	ELSE_38	IF_60
0x95d0	    0x4805c0010000	                          add rax, 0x1c0	      8466	option.c	FUNCTION_50	ELSE_38	IF_60
0x95d6	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      8466	option.c	FUNCTION_50	ELSE_38	IF_60
0x95dd	            0x753a	                           jne 0x4009659	      8466	option.c	FUNCTION_50	ELSE_38	IF_60
0x95df	    0x488b05000000	            mov rax, qword [0x04009626] 	      8469	option.c	FUNCTION_50	ELSE_38	IF_60	CALL_44
0x95e6	          0x4889c7	                            mov rdi, rax	      8469	option.c	FUNCTION_50	ELSE_38	IF_60	CALL_44
0x95e9	      0xe800000000	                          call 0x400962e	      8469	option.c	FUNCTION_50	ELSE_38	IF_60	CALL_44
0x95ee	    0x488b05000000	            mov rax, qword [0x04009635] 	      8471	option.c	FUNCTION_50	ELSE_38	IF_60	IF_61	CALL_45
0x95f5	          0x4889c7	                            mov rdi, rax	      8471	option.c	FUNCTION_50	ELSE_38	IF_60	IF_61	CALL_45
0x95f8	      0xe800000000	                          call 0x400963d	      8471	option.c	FUNCTION_50	ELSE_38	IF_60	IF_61	CALL_45
0x95fd	            0x85c0	                           test eax, eax	      8471	option.c	FUNCTION_50	ELSE_38	IF_60	IF_61	CALL_45
0x95ff	     0xf8425010000	                            je 0x400976a	      8471	option.c	FUNCTION_50	ELSE_38	IF_60	IF_61	CALL_45
0x9605	    0x488b05000000	            mov rax, qword [0x0400964c] 	      8472	option.c	FUNCTION_50	ELSE_38	IF_60	CALL_46
0x960c	          0x4889c7	                            mov rdi, rax	      8472	option.c	FUNCTION_50	ELSE_38	IF_60	CALL_46
0x960f	      0xe800000000	                          call 0x4009654	      8472	option.c	FUNCTION_50	ELSE_38	IF_60	CALL_46
0x9614	      0xe911010000	                           jmp 0x400976a	      8472	option.c	FUNCTION_50	ELSE_38	IF_60	CALL_46
0x9619	    0x4881bd60ffff	               cmp qword [rbp - 0xa0], 0	      8479	option.c	FUNCTION_50	ELSE_39	IF_62
0x9624	            0x754e	                           jne 0x40096b4	      8479	option.c	FUNCTION_50	ELSE_39	IF_62
0x9626	    0x8b0500000000	            mov eax, dword [0x0400966c] 	      8482	option.c	FUNCTION_50	ELSE_39	IF_62	IF_63
0x962c	            0x85c0	                           test eax, eax	      8482	option.c	FUNCTION_50	ELSE_39	IF_62	IF_63
0x962e	            0x740f	                            je 0x400967f	      8482	option.c	FUNCTION_50	ELSE_39	IF_62	IF_63
0x9630	      0xbf00000000	                              mov edi, 0	      8483	option.c	FUNCTION_50	ELSE_39	IF_62	CALL_47
0x9635	      0xe800000000	                          call 0x400967a	      8483	option.c	FUNCTION_50	ELSE_39	IF_62	CALL_47
0x963a	      0xe9eb000000	                           jmp 0x400976a	      8483	option.c	FUNCTION_50	ELSE_39	IF_62	CALL_47
0x963f	    0x8b0500000000	            mov eax, dword [0x04009685] 	      8484	option.c	FUNCTION_50	ELSE_39	IF_62	ELSE_40	IF_64
0x9645	          0x83e010	                           and eax, 0x10	      8484	option.c	FUNCTION_50	ELSE_39	IF_62	ELSE_40	IF_64
0x9648	            0x85c0	                           test eax, eax	      8484	option.c	FUNCTION_50	ELSE_39	IF_62	ELSE_40	IF_64
0x964a	     0xf84da000000	                            je 0x400976a	      8484	option.c	FUNCTION_50	ELSE_39	IF_62	ELSE_40	IF_64
0x9650	    0x488b05000000	            mov rax, qword [0x04009697] 	      8487	option.c	FUNCTION_50	ELSE_39	IF_62	ELSE_40	IF_64
0x9657	    0x488b80681200	          mov rax, qword [rax + 0x1268] 	      8487	option.c	FUNCTION_50	ELSE_39	IF_62	ELSE_40	IF_64
0x965e	        0x4883f802	                              cmp rax, 2	      8487	option.c	FUNCTION_50	ELSE_39	IF_62	ELSE_40	IF_64
0x9662	           0xf94c0	                                 sete al	      8487	option.c	FUNCTION_50	ELSE_39	IF_62	ELSE_40	IF_64
0x9665	           0xfb6c0	                           movzx eax, al	      8487	option.c	FUNCTION_50	ELSE_39	IF_62	ELSE_40	IF_64
0x9668	            0x89c7	                            mov edi, eax	      8487	option.c	FUNCTION_50	ELSE_39	IF_62	ELSE_40	IF_64
0x966a	      0xe800000000	                          call 0x40096af	      8487	option.c	FUNCTION_50	ELSE_39	IF_62	ELSE_40	IF_64
0x966f	      0xe9b6000000	                           jmp 0x400976a	      8487	option.c	FUNCTION_50	ELSE_39	IF_62	ELSE_40	IF_64
0x9674	    0x488b05000000	            mov rax, qword [0x040096bb] 	      8493	option.c	FUNCTION_50	ELSE_41	IF_65
0x967b	    0x480568020000	                          add rax, 0x268	      8493	option.c	FUNCTION_50	ELSE_41	IF_65
0x9681	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      8493	option.c	FUNCTION_50	ELSE_41	IF_65
0x9688	            0x7545	                           jne 0x400970f	      8493	option.c	FUNCTION_50	ELSE_41	IF_65
0x968a	    0x488b05000000	            mov rax, qword [0x040096d1] 	      8495	option.c	FUNCTION_50	ELSE_41	IF_65	IF_66
0x9691	    0x8b8068020000	           mov eax, dword [rax + 0x268] 	      8495	option.c	FUNCTION_50	ELSE_41	IF_65	IF_66
0x9697	            0x85c0	                           test eax, eax	      8495	option.c	FUNCTION_50	ELSE_41	IF_65	IF_66
0x9699	     0xf848b000000	                            je 0x400976a	      8495	option.c	FUNCTION_50	ELSE_41	IF_65	IF_66
0x969f	    0x488b05000000	            mov rax, qword [0x040096e6] 	      8497	option.c	FUNCTION_50	ELSE_41	IF_65	IF_66	CALL_49
0x96a6	          0x4889c7	                            mov rdi, rax	      8497	option.c	FUNCTION_50	ELSE_41	IF_65	IF_66	CALL_49
0x96a9	      0xe800000000	                          call 0x40096ee	      8497	option.c	FUNCTION_50	ELSE_41	IF_65	IF_66	CALL_49
0x96ae	        0x48894588	             mov qword [rbp - 0x78], rax	      8497	option.c	FUNCTION_50	ELSE_41	IF_65	IF_66	CALL_49
0x96b2	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      8498	option.c	FUNCTION_50	ELSE_41	IF_65	IF_66	IF_67
0x96b7	            0x7471	                            je 0x400976a	      8498	option.c	FUNCTION_50	ELSE_41	IF_65	IF_66	IF_67
0x96b9	        0x488b4588	             mov rax, qword [rbp - 0x78]	      8499	option.c	FUNCTION_50	ELSE_41	IF_65	IF_66	CALL_51
0x96bd	          0x4889c7	                            mov rdi, rax	      8499	option.c	FUNCTION_50	ELSE_41	IF_65	IF_66	CALL_51
0x96c0	      0xe800000000	                          call 0x4009705	      8499	option.c	FUNCTION_50	ELSE_41	IF_65	IF_66	CALL_51
0x96c5	          0x4889c7	                            mov rdi, rax	      8499	option.c	FUNCTION_50	ELSE_41	IF_65	IF_66	CALL_51
0x96c8	      0xe800000000	                          call 0x400970d	      8499	option.c	FUNCTION_50	ELSE_41	IF_65	IF_66	CALL_51
0x96cd	            0xeb5b	                           jmp 0x400976a	      8499	option.c	FUNCTION_50	ELSE_41	IF_65	IF_66	CALL_51
0x96cf	    0x4881bd60ffff	               cmp qword [rbp - 0xa0], 0	      8505	option.c	FUNCTION_50	ELSE_42	IF_68
0x96da	            0x754e	                           jne 0x400976a	      8505	option.c	FUNCTION_50	ELSE_42	IF_68
0x96dc	    0x8b0500000000	            mov eax, dword [0x04009722] 	      8507	option.c	FUNCTION_50	ELSE_42	IF_68	IF_69
0x96e2	    0x39857cffffff	            cmp dword [rbp - 0x84], eax 	      8507	option.c	FUNCTION_50	ELSE_42	IF_68	IF_69
0x96e8	            0x7440	                            je 0x400976a	      8507	option.c	FUNCTION_50	ELSE_42	IF_68	IF_69
0x96ea	    0x8b0500000000	            mov eax, dword [0x04009730] 	      8509	option.c	FUNCTION_50	ELSE_42	IF_68	IF_69	IF_70
0x96f0	            0x85c0	                           test eax, eax	      8509	option.c	FUNCTION_50	ELSE_42	IF_68	IF_69	IF_70
0x96f2	            0x7518	                           jne 0x400974c	      8509	option.c	FUNCTION_50	ELSE_42	IF_68	IF_69	IF_70
0x96f4	    0x8b0500000000	            mov eax, dword [0x0400973a] 	      8511	option.c	FUNCTION_50	ELSE_42	IF_68	IF_69	IF_70
0x96fa	    0x890500000000	            mov dword [0x04009740], eax 	      8511	option.c	FUNCTION_50	ELSE_42	IF_68	IF_69	IF_70
0x9700	    0xc70500000000	               mov dword [0x0400974a], 0	      8512	option.c	FUNCTION_50	ELSE_42	IF_68	IF_69	IF_70
0x970a	            0xeb16	                           jmp 0x4009762	      8512	option.c	FUNCTION_50	ELSE_42	IF_68	IF_69	IF_70
0x970c	    0x8b0500000000	            mov eax, dword [0x04009752] 	      8516	option.c	FUNCTION_50	ELSE_42	IF_68	IF_69	ELSE_43
0x9712	    0x890500000000	            mov dword [0x04009758], eax 	      8516	option.c	FUNCTION_50	ELSE_42	IF_68	IF_69	ELSE_43
0x9718	    0xc70500000000	               mov dword [0x04009762], 0	      8517	option.c	FUNCTION_50	ELSE_42	IF_68	IF_69	ELSE_43
0x9722	      0xe800000000	                          call 0x4009767	      8519	option.c	FUNCTION_50	ELSE_42	IF_68	IF_69	CALL_52
0x9727	            0xeb01	                           jmp 0x400976a	      8519	option.c	FUNCTION_50	ELSE_42	IF_68	IF_69	CALL_52
0x9729	              0x90	                                     nop	      8136	option.c	FUNCTION_50	ELSE_2	IF_6	IF_7
0x972a	    0x8b0500000000	            mov eax, dword [0x04009770] 	      8531	option.c	FUNCTION_50	IF_71
0x9730	            0x85c0	                           test eax, eax	      8531	option.c	FUNCTION_50	IF_71
0x9732	            0x750a	                           jne 0x400977e	      8531	option.c	FUNCTION_50	IF_71
0x9734	    0x8b0500000000	            mov eax, dword [0x0400977a] 	      8531	option.c	FUNCTION_50	IF_71
0x973a	            0x85c0	                           test eax, eax	      8531	option.c	FUNCTION_50	IF_71
0x973c	            0x742c	                            je 0x40097aa	      8531	option.c	FUNCTION_50	IF_71
0x973e	    0x8b0500000000	            mov eax, dword [0x04009784] 	      8531	option.c	FUNCTION_50	IF_71
0x9744	            0x85c0	                           test eax, eax	      8531	option.c	FUNCTION_50	IF_71
0x9746	            0x7422	                            je 0x40097aa	      8531	option.c	FUNCTION_50	IF_71
0x9748	    0x8b0500000000	            mov eax, dword [0x0400978e] 	      8533	option.c	FUNCTION_50	IF_71
0x974e	    0x890500000000	            mov dword [0x04009794], eax 	      8533	option.c	FUNCTION_50	IF_71
0x9754	    0x488b05000000	            mov rax, qword [0x0400979b] 	      8535	option.c	FUNCTION_50	IF_71
0x975b	    0xc780b0010000	              mov dword [rax + 0x1b0], 0	      8535	option.c	FUNCTION_50	IF_71
0x9765	      0xe800000000	                          call 0x40097aa	      8537	option.c	FUNCTION_50	IF_71	CALL_53
0x976a	    0x8b0500000000	            mov eax, dword [0x040097b0] 	      8543	option.c	FUNCTION_50	IF_72
0x9770	            0x85c0	                           test eax, eax	      8543	option.c	FUNCTION_50	IF_72
0x9772	            0x7434	                            je 0x40097e8	      8543	option.c	FUNCTION_50	IF_72
0x9774	    0x8b0500000000	            mov eax, dword [0x040097ba] 	      8543	option.c	FUNCTION_50	IF_72
0x977a	            0x85c0	                           test eax, eax	      8543	option.c	FUNCTION_50	IF_72
0x977c	            0x742a	                            je 0x40097e8	      8543	option.c	FUNCTION_50	IF_72
0x977e	    0xc70500000000	               mov dword [0x040097c8], 0	      8545	option.c	FUNCTION_50	IF_72
0x9788	    0xc70500000000	               mov dword [0x040097d2], 0	      8546	option.c	FUNCTION_50	IF_72
0x9792	    0x488b05000000	            mov rax, qword [0x040097d9] 	      8548	option.c	FUNCTION_50	IF_72
0x9799	    0xc780b0010000	              mov dword [rax + 0x1b0], 0	      8548	option.c	FUNCTION_50	IF_72
0x97a3	      0xe800000000	                          call 0x40097e8	      8550	option.c	FUNCTION_50	IF_72	CALL_54
0x97a8	    0x8b0500000000	            mov eax, dword [0x040097ee] 	      8556	option.c	FUNCTION_50	IF_73
0x97ae	            0x85c0	                           test eax, eax	      8556	option.c	FUNCTION_50	IF_73
0x97b0	            0x7434	                            je 0x4009826	      8556	option.c	FUNCTION_50	IF_73
0x97b2	    0x8b0500000000	            mov eax, dword [0x040097f8] 	      8556	option.c	FUNCTION_50	IF_73
0x97b8	            0x85c0	                           test eax, eax	      8556	option.c	FUNCTION_50	IF_73
0x97ba	            0x752a	                           jne 0x4009826	      8556	option.c	FUNCTION_50	IF_73
0x97bc	    0xc70500000000	               mov dword [0x04009806], 1	      8558	option.c	FUNCTION_50	IF_73
0x97c6	    0xc70500000000	               mov dword [0x04009810], 0	      8559	option.c	FUNCTION_50	IF_73
0x97d0	    0x488b05000000	            mov rax, qword [0x04009817] 	      8561	option.c	FUNCTION_50	IF_73
0x97d7	    0xc780b0010000	              mov dword [rax + 0x1b0], 0	      8561	option.c	FUNCTION_50	IF_73
0x97e1	      0xe800000000	                          call 0x4009826	      8563	option.c	FUNCTION_50	IF_73	CALL_55
0x97e6	    0x488b05000000	            mov rax, qword [0x0400982d] 	      8568	option.c	FUNCTION_50	IF_74
0x97ed	    0x4805b0010000	                          add rax, 0x1b0	      8568	option.c	FUNCTION_50	IF_74
0x97f3	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      8568	option.c	FUNCTION_50	IF_74
0x97fa	     0xf8563010000	                           jne 0x40099a3	      8568	option.c	FUNCTION_50	IF_74
0x9800	    0x488b05000000	            mov rax, qword [0x04009847] 	      8570	option.c	FUNCTION_50	IF_74	IF_75
0x9807	    0x8b80b0010000	           mov eax, dword [rax + 0x1b0] 	      8570	option.c	FUNCTION_50	IF_74	IF_75
0x980d	            0x85c0	                           test eax, eax	      8570	option.c	FUNCTION_50	IF_74	IF_75
0x980f	     0xf84f7000000	                            je 0x400994c	      8570	option.c	FUNCTION_50	IF_74	IF_75
0x9815	    0x8b0500000000	            mov eax, dword [0x0400985b] 	      8575	option.c	FUNCTION_50	IF_74	IF_75	IF_76
0x981b	            0x85c0	                           test eax, eax	      8575	option.c	FUNCTION_50	IF_74	IF_75	IF_76
0x981d	            0x7540	                           jne 0x400989f	      8575	option.c	FUNCTION_50	IF_74	IF_75	IF_76
0x981f	    0x488b05000000	            mov rax, qword [0x04009866] 	      8578	option.c	FUNCTION_50	IF_74	IF_75	IF_76	IF_77
0x9826	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      8578	option.c	FUNCTION_50	IF_74	IF_75	IF_76	IF_77
0x982c	            0x85c0	                           test eax, eax	      8578	option.c	FUNCTION_50	IF_74	IF_75	IF_76	IF_77
0x982e	            0x7516	                           jne 0x4009886	      8578	option.c	FUNCTION_50	IF_74	IF_75	IF_76	IF_77
0x9830	    0x488b05000000	            mov rax, qword [0x04009877] 	      8580	option.c	FUNCTION_50	IF_74	IF_75	IF_76	IF_77
0x9837	    0xc78054020000	              mov dword [rax + 0x254], 1	      8580	option.c	FUNCTION_50	IF_74	IF_75	IF_76	IF_77
0x9841	      0xe800000000	                          call 0x4009886	      8581	option.c	FUNCTION_50	IF_74	IF_75	IF_76	IF_77	CALL_56
0x9846	    0x8b0500000000	            mov eax, dword [0x0400988c] 	      8585	option.c	FUNCTION_50	IF_74	IF_75	IF_76	IF_78
0x984c	            0x85c0	                           test eax, eax	      8585	option.c	FUNCTION_50	IF_74	IF_75	IF_76	IF_78
0x984e	            0x750f	                           jne 0x400989f	      8585	option.c	FUNCTION_50	IF_74	IF_75	IF_76	IF_78
0x9850	    0xc70500000000	               mov dword [0x0400989a], 1	      8587	option.c	FUNCTION_50	IF_74	IF_75	IF_76	IF_78
0x985a	      0xe800000000	                          call 0x400989f	      8588	option.c	FUNCTION_50	IF_74	IF_75	IF_76	IF_78	CALL_57
0x985f	    0x488b05000000	            mov rax, qword [0x040098a6] 	      8594	option.c	FUNCTION_50	IF_74	IF_75	IF_79	CALL_58
0x9866	      0xbe00000000	                              mov esi, 0	      8594	option.c	FUNCTION_50	IF_74	IF_75	IF_79	CALL_58
0x986b	          0x4889c7	                            mov rdi, rax	      8594	option.c	FUNCTION_50	IF_74	IF_75	IF_79	CALL_58
0x986e	      0xe800000000	                          call 0x40098b3	      8594	option.c	FUNCTION_50	IF_74	IF_75	IF_79	CALL_58
0x9873	            0x85c0	                           test eax, eax	      8594	option.c	FUNCTION_50	IF_74	IF_75	IF_79	CALL_58
0x9875	            0x744d	                            je 0x4009904	      8594	option.c	FUNCTION_50	IF_74	IF_75	IF_79	CALL_58
0x9877	    0x8b0500000000	            mov eax, dword [0x040098bd] 	      8598	option.c	FUNCTION_50	IF_74	IF_75	IF_79	CALL_61
0x987d	            0x89c7	                            mov edi, eax	      8598	option.c	FUNCTION_50	IF_74	IF_75	IF_79	CALL_61
0x987f	      0xe800000000	                          call 0x40098c4	      8598	option.c	FUNCTION_50	IF_74	IF_75	IF_79	CALL_61
0x9884	    0x8b1d00000000	            mov ebx, dword [0x040098ca] 	      8599	option.c	FUNCTION_50	IF_74	IF_75	IF_79	CALL_64
0x988a	    0x488b05000000	            mov rax, qword [0x040098d1] 	      8599	option.c	FUNCTION_50	IF_74	IF_75	IF_79	CALL_64
0x9891	          0x4889c7	                            mov rdi, rax	      8599	option.c	FUNCTION_50	IF_74	IF_75	IF_79	CALL_64
0x9894	      0xe800000000	                          call 0x40098d9	      8599	option.c	FUNCTION_50	IF_74	IF_75	IF_79	CALL_64
0x9899	            0x89de	                            mov esi, ebx	      8599	option.c	FUNCTION_50	IF_74	IF_75	IF_79	CALL_64
0x989b	          0x4889c7	                            mov rdi, rax	      8599	option.c	FUNCTION_50	IF_74	IF_75	IF_79	CALL_64
0x989e	      0xe800000000	                          call 0x40098e3	      8599	option.c	FUNCTION_50	IF_74	IF_75	IF_79	CALL_64
0x98a3	    0x488b05000000	            mov rax, qword [0x040098ea] 	      8601	option.c	FUNCTION_50	IF_74	IF_75	IF_79	CALL_66
0x98aa	          0x4889c7	                            mov rdi, rax	      8601	option.c	FUNCTION_50	IF_74	IF_75	IF_79	CALL_66
0x98ad	      0xe800000000	                          call 0x40098f2	      8601	option.c	FUNCTION_50	IF_74	IF_75	IF_79	CALL_66
0x98b2	      0xbaffffffff	                     mov edx, 0xffffffff	      8601	option.c	FUNCTION_50	IF_74	IF_75	IF_79	CALL_66
0x98b7	          0x4889c6	                            mov rsi, rax	      8601	option.c	FUNCTION_50	IF_74	IF_75	IF_79	CALL_66
0x98ba	      0xbf04000000	                              mov edi, 4	      8601	option.c	FUNCTION_50	IF_74	IF_75	IF_79	CALL_66
0x98bf	      0xe800000000	                          call 0x4009904	      8601	option.c	FUNCTION_50	IF_74	IF_75	IF_79	CALL_66
0x98c4	    0xc70500000000	               mov dword [0x0400990e], 1	      8607	option.c	FUNCTION_50	IF_74	IF_75
0x98ce	      0xb904000000	                              mov ecx, 4	      8612	option.c	FUNCTION_50	IF_74	IF_75	CALL_67
0x98d3	      0xba00000000	                              mov edx, 0	      8612	option.c	FUNCTION_50	IF_74	IF_75	CALL_67
0x98d8	      0xbe00000000	                              mov esi, 0	      8612	option.c	FUNCTION_50	IF_74	IF_75	CALL_67
0x98dd	      0xbf00000000	                              mov edi, 0	      8612	option.c	FUNCTION_50	IF_74	IF_75	CALL_67
0x98e2	      0xe800000000	                          call 0x4009927	      8612	option.c	FUNCTION_50	IF_74	IF_75	CALL_67
0x98e7	    0xc70500000000	               mov dword [0x04009931], 0	      8616	option.c	FUNCTION_50	IF_74	IF_75
0x98f1	    0xc70500000000	               mov dword [0x0400993b], 0	      8617	option.c	FUNCTION_50	IF_74	IF_75
0x98fb	    0xc70500000000	               mov dword [0x04009945], 0	      8618	option.c	FUNCTION_50	IF_74	IF_75
0x9905	      0xe800000000	                          call 0x400994a	      8619	option.c	FUNCTION_50	IF_74	IF_75	CALL_68
0x990a	            0xeb69	                           jmp 0x40099b5	      8619	option.c	FUNCTION_50	IF_74	IF_75	CALL_68
0x990c	    0x8b0500000000	            mov eax, dword [0x04009952] 	      8627	option.c	FUNCTION_50	IF_74	ELSE_44	IF_80
0x9912	            0x85c0	                           test eax, eax	      8627	option.c	FUNCTION_50	IF_74	ELSE_44	IF_80
0x9914	            0x7527	                           jne 0x400997d	      8627	option.c	FUNCTION_50	IF_74	ELSE_44	IF_80
0x9916	    0x488b05000000	            mov rax, qword [0x0400995d] 	      8630	option.c	FUNCTION_50	IF_74	ELSE_44	IF_80	IF_81
0x991d	    0x8b8054020000	           mov eax, dword [rax + 0x254] 	      8630	option.c	FUNCTION_50	IF_74	ELSE_44	IF_80	IF_81
0x9923	            0x85c0	                           test eax, eax	      8630	option.c	FUNCTION_50	IF_74	ELSE_44	IF_80	IF_81
0x9925	            0x7416	                            je 0x400997d	      8630	option.c	FUNCTION_50	IF_74	ELSE_44	IF_80	IF_81
0x9927	    0x488b05000000	            mov rax, qword [0x0400996e] 	      8632	option.c	FUNCTION_50	IF_74	ELSE_44	IF_80	IF_81
0x992e	    0xc78054020000	              mov dword [rax + 0x254], 0	      8632	option.c	FUNCTION_50	IF_74	ELSE_44	IF_80	IF_81
0x9938	      0xe800000000	                          call 0x400997d	      8633	option.c	FUNCTION_50	IF_74	ELSE_44	IF_80	IF_81	CALL_69
0x993d	    0x488b05000000	            mov rax, qword [0x04009984] 	      8645	option.c	FUNCTION_50	IF_74	ELSE_44
0x9944	    0x48c780681200	            mov qword [rax + 0x1268], 0 	      8645	option.c	FUNCTION_50	IF_74	ELSE_44
0x994f	    0x488b05000000	            mov rax, qword [0x04009996] 	      8646	option.c	FUNCTION_50	IF_74	ELSE_44
0x9956	    0x48c780701200	mov qword [rax + 0x1270], 0xffffffffffffffff 	      8646	option.c	FUNCTION_50	IF_74	ELSE_44
0x9961	            0xeb12	                           jmp 0x40099b5	      8646	option.c	FUNCTION_50	IF_74	ELSE_44
0x9963	    0x4881bd60ffff	               cmp qword [rbp - 0xa0], 0	      8655	option.c	FUNCTION_50	ELSE_45	IF_82
0x996e	            0x7505	                           jne 0x40099b5	      8655	option.c	FUNCTION_50	ELSE_45	IF_82
0x9970	      0xe800000000	                          call 0x40099b5	      8660	option.c	FUNCTION_50	ELSE_45	IF_82	CALL_70
0x9975	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      8670	option.c	FUNCTION_50
0x997b	            0x4898	                                    cdqe	      8670	option.c	FUNCTION_50
0x997d	        0x48c1e006	                              shl rax, 6	      8670	option.c	FUNCTION_50
0x9981	    0x480500000000	                              add rax, 0	      8670	option.c	FUNCTION_50
0x9987	          0x488b00	                    mov rax, qword [rax]	      8670	option.c	FUNCTION_50
0x998a	          0x80cc01	                                or ah, 1	      8670	option.c	FUNCTION_50
0x998d	          0x4889c2	                            mov rdx, rax	      8670	option.c	FUNCTION_50
0x9990	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      8670	option.c	FUNCTION_50
0x9996	            0x4898	                                    cdqe	      8670	option.c	FUNCTION_50
0x9998	        0x48c1e006	                              shl rax, 6	      8670	option.c	FUNCTION_50
0x999c	    0x480500000000	                              add rax, 0	      8670	option.c	FUNCTION_50
0x99a2	          0x488910	                    mov qword [rax], rdx	      8670	option.c	FUNCTION_50
0x99a5	    0x8b0500000000	            mov eax, dword [0x040099eb] 	      8673	option.c	FUNCTION_50	IF_84
0x99ab	            0x85c0	                           test eax, eax	      8673	option.c	FUNCTION_50	IF_84
0x99ad	     0xf8504010000	                           jne 0x4009af7	      8673	option.c	FUNCTION_50	IF_84
0x99b3	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      8676	option.c	FUNCTION_50	IF_84	CALL_71
0x99ba	           0xf95c0	                                setne al	      8676	option.c	FUNCTION_50	IF_84	CALL_71
0x99bd	           0xfb6d0	                           movzx edx, al	      8676	option.c	FUNCTION_50	IF_84	CALL_71
0x99c0	        0x488d45a0	                   lea rax, [rbp - 0x60]	      8676	option.c	FUNCTION_50	IF_84	CALL_71
0x99c4	            0x89d1	                            mov ecx, edx	      8676	option.c	FUNCTION_50	IF_84	CALL_71
0x99c6	      0xba00000000	                              mov edx, 0	      8676	option.c	FUNCTION_50	IF_84	CALL_71
0x99cb	      0xbe02000000	                              mov esi, 2	      8676	option.c	FUNCTION_50	IF_84	CALL_71
0x99d0	          0x4889c7	                            mov rdi, rax	      8676	option.c	FUNCTION_50	IF_84	CALL_71
0x99d3	      0xb800000000	                              mov eax, 0	      8676	option.c	FUNCTION_50	IF_84	CALL_71
0x99d8	      0xe800000000	                          call 0x4009a1d	      8676	option.c	FUNCTION_50	IF_84	CALL_71
0x99dd	    0x83bd68ffffff	               cmp dword [rbp - 0x98], 0	      8677	option.c	FUNCTION_50	IF_84	CALL_72
0x99e4	           0xf95c0	                                setne al	      8677	option.c	FUNCTION_50	IF_84	CALL_72
0x99e7	           0xfb6d0	                           movzx edx, al	      8677	option.c	FUNCTION_50	IF_84	CALL_72
0x99ea	        0x488d45b0	                   lea rax, [rbp - 0x50]	      8677	option.c	FUNCTION_50	IF_84	CALL_72
0x99ee	            0x89d1	                            mov ecx, edx	      8677	option.c	FUNCTION_50	IF_84	CALL_72
0x99f0	      0xba00000000	                              mov edx, 0	      8677	option.c	FUNCTION_50	IF_84	CALL_72
0x99f5	      0xbe02000000	                              mov esi, 2	      8677	option.c	FUNCTION_50	IF_84	CALL_72
0x99fa	          0x4889c7	                            mov rdi, rax	      8677	option.c	FUNCTION_50	IF_84	CALL_72
0x99fd	      0xb800000000	                              mov eax, 0	      8677	option.c	FUNCTION_50	IF_84	CALL_72
0x9a02	      0xe800000000	                          call 0x4009a47	      8677	option.c	FUNCTION_50	IF_84	CALL_72
0x9a07	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      8678	option.c	FUNCTION_50	IF_84	CALL_73
0x9a0d	          0x83e004	                              and eax, 4	      8678	option.c	FUNCTION_50	IF_84	CALL_73
0x9a10	            0x85c0	                           test eax, eax	      8678	option.c	FUNCTION_50	IF_84	CALL_73
0x9a12	            0x7407	                            je 0x4009a5b	      8678	option.c	FUNCTION_50	IF_84	CALL_73
0x9a14	      0xba00000000	                              mov edx, 0	      8678	option.c	FUNCTION_50	IF_84	CALL_73
0x9a19	            0xeb05	                           jmp 0x4009a60	      8678	option.c	FUNCTION_50	IF_84	CALL_73
0x9a1b	      0xba00000000	                              mov edx, 0	      8678	option.c	FUNCTION_50	IF_84	CALL_73
0x9a20	        0x488d45c0	                   lea rax, [rbp - 0x40]	      8678	option.c	FUNCTION_50	IF_84	CALL_73
0x9a24	          0x4889d1	                            mov rcx, rdx	      8678	option.c	FUNCTION_50	IF_84	CALL_73
0x9a27	      0xba00000000	                              mov edx, 0	      8678	option.c	FUNCTION_50	IF_84	CALL_73
0x9a2c	      0xbe07000000	                              mov esi, 7	      8678	option.c	FUNCTION_50	IF_84	CALL_73
0x9a31	          0x4889c7	                            mov rdi, rax	      8678	option.c	FUNCTION_50	IF_84	CALL_73
0x9a34	      0xb800000000	                              mov eax, 0	      8678	option.c	FUNCTION_50	IF_84	CALL_73
0x9a39	      0xe800000000	                          call 0x4009a7e	      8678	option.c	FUNCTION_50	IF_84	CALL_73
0x9a3e	        0x488d45b0	                   lea rax, [rbp - 0x50]	      8679	option.c	FUNCTION_50	IF_84	CALL_74
0x9a42	      0xbaffffffff	                     mov edx, 0xffffffff	      8679	option.c	FUNCTION_50	IF_84	CALL_74
0x9a47	          0x4889c6	                            mov rsi, rax	      8679	option.c	FUNCTION_50	IF_84	CALL_74
0x9a4a	      0xbf3d000000	                           mov edi, 0x3d	      8679	option.c	FUNCTION_50	IF_84	CALL_74
0x9a4f	      0xe800000000	                          call 0x4009a94	      8679	option.c	FUNCTION_50	IF_84	CALL_74
0x9a54	        0x488d45a0	                   lea rax, [rbp - 0x60]	      8680	option.c	FUNCTION_50	IF_84	CALL_75
0x9a58	      0xbaffffffff	                     mov edx, 0xffffffff	      8680	option.c	FUNCTION_50	IF_84	CALL_75
0x9a5d	          0x4889c6	                            mov rsi, rax	      8680	option.c	FUNCTION_50	IF_84	CALL_75
0x9a60	      0xbf3e000000	                           mov edi, 0x3e	      8680	option.c	FUNCTION_50	IF_84	CALL_75
0x9a65	      0xe800000000	                          call 0x4009aaa	      8680	option.c	FUNCTION_50	IF_84	CALL_75
0x9a6a	        0x488d45c0	                   lea rax, [rbp - 0x40]	      8681	option.c	FUNCTION_50	IF_84	CALL_76
0x9a6e	      0xbaffffffff	                     mov edx, 0xffffffff	      8681	option.c	FUNCTION_50	IF_84	CALL_76
0x9a73	          0x4889c6	                            mov rsi, rax	      8681	option.c	FUNCTION_50	IF_84	CALL_76
0x9a76	      0xbf3f000000	                           mov edi, 0x3f	      8681	option.c	FUNCTION_50	IF_84	CALL_76
0x9a7b	      0xe800000000	                          call 0x4009ac0	      8681	option.c	FUNCTION_50	IF_84	CALL_76
0x9a80	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      8682	option.c	FUNCTION_50	IF_84	CALL_77
0x9a86	            0x4898	                                    cdqe	      8682	option.c	FUNCTION_50	IF_84	CALL_77
0x9a88	        0x48c1e006	                              shl rax, 6	      8682	option.c	FUNCTION_50	IF_84	CALL_77
0x9a8c	    0x480500000000	                              add rax, 0	      8682	option.c	FUNCTION_50	IF_84	CALL_77
0x9a92	          0x488b00	                    mov rax, qword [rax]	      8682	option.c	FUNCTION_50	IF_84	CALL_77
0x9a95	    0x41b800000000	                              mov r8d, 0	      8682	option.c	FUNCTION_50	IF_84	CALL_77
0x9a9b	      0xb900000000	                              mov ecx, 0	      8682	option.c	FUNCTION_50	IF_84	CALL_77
0x9aa0	      0xba00000000	                              mov edx, 0	      8682	option.c	FUNCTION_50	IF_84	CALL_77
0x9aa5	          0x4889c6	                            mov rsi, rax	      8682	option.c	FUNCTION_50	IF_84	CALL_77
0x9aa8	      0xbf58000000	                           mov edi, 0x58	      8682	option.c	FUNCTION_50	IF_84	CALL_77
0x9aad	      0xe800000000	                          call 0x4009af2	      8682	option.c	FUNCTION_50	IF_84	CALL_77
0x9ab2	      0xe800000000	                          call 0x4009af7	      8683	option.c	FUNCTION_50	IF_84	CALL_78
0x9ab7	      0xe800000000	                          call 0x4009afc	      8687	option.c	FUNCTION_50	CALL_79
0x9abc	    0x488b05000000	            mov rax, qword [0x04009b03] 	      8688	option.c	FUNCTION_50	IF_85
0x9ac3	          0x8b4048	            mov eax, dword [rax + 0x48] 	      8688	option.c	FUNCTION_50	IF_85
0x9ac6	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      8688	option.c	FUNCTION_50	IF_85
0x9acb	            0x742d	                            je 0x4009b3a	      8688	option.c	FUNCTION_50	IF_85
0x9acd	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      8689	option.c	FUNCTION_50	IF_85
0x9ad3	            0x4898	                                    cdqe	      8689	option.c	FUNCTION_50	IF_85
0x9ad5	        0x48c1e006	                              shl rax, 6	      8689	option.c	FUNCTION_50	IF_85
0x9ad9	    0x480500000000	                              add rax, 0	      8689	option.c	FUNCTION_50	IF_85
0x9adf	          0x488b00	                    mov rax, qword [rax]	      8689	option.c	FUNCTION_50	IF_85
0x9ae2	      0x2500600004	                      and eax, 0x4006000	      8689	option.c	FUNCTION_50	IF_85
0x9ae7	          0x4885c0	                           test rax, rax	      8689	option.c	FUNCTION_50	IF_85
0x9aea	            0x740e	                            je 0x4009b3a	      8689	option.c	FUNCTION_50	IF_85
0x9aec	    0x488b05000000	            mov rax, qword [0x04009b33] 	      8690	option.c	FUNCTION_50	IF_85
0x9af3	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      8690	option.c	FUNCTION_50	IF_85
0x9afa	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      8691	option.c	FUNCTION_50	CALL_80
0x9b00	            0x4898	                                    cdqe	      8691	option.c	FUNCTION_50	CALL_80
0x9b02	        0x48c1e006	                              shl rax, 6	      8691	option.c	FUNCTION_50	CALL_80
0x9b06	    0x480500000000	                              add rax, 0	      8691	option.c	FUNCTION_50	CALL_80
0x9b0c	          0x488b00	                    mov rax, qword [rax]	      8691	option.c	FUNCTION_50	CALL_80
0x9b0f	          0x4889c7	                            mov rdi, rax	      8691	option.c	FUNCTION_50	CALL_80
0x9b12	      0xe890110000	                   call sym.check_redraw	      8691	option.c	FUNCTION_50	CALL_80
0x9b17	      0xb800000000	                              mov eax, 0	      8693	option.c	FUNCTION_50
0x9b1c	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      8694	option.c	FUNCTION_50
0x9b20	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      8694	option.c	FUNCTION_50
0x9b29	            0x7405	                            je 0x4009b70	      8694	option.c	FUNCTION_50
0x9b2b	      0xe800000000	                          call 0x4009b70	      8694	option.c	FUNCTION_50
0x9b30	    0x4881c4a80000	                           add rsp, 0xa8	      8694	option.c	FUNCTION_50
0x9b37	              0x5b	                                 pop rbx	      8694	option.c	FUNCTION_50
0x9b38	              0x5d	                                 pop rbp	      8694	option.c	FUNCTION_50
0x9b39	              0xc3	                                     ret	      8694	option.c	FUNCTION_50
did_set_spell_option	WHILE,0:SWITCH,0:CALL,4:FOR,0:ELSE,0:DO,0:IF,4:functions,0	57
0x8996	              0x55	                                push rbp	      7992	option.c	FUNCTION_47
0x8997	          0x4889e5	                            mov rbp, rsp	      7992	option.c	FUNCTION_47
0x899a	        0x4883ec30	                           sub rsp, 0x30	      7992	option.c	FUNCTION_47
0x899e	          0x897ddc	             mov dword [rbp - 0x24], edi	      7992	option.c	FUNCTION_47
0x89a1	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      7993	option.c	FUNCTION_47
0x89a9	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      7997	option.c	FUNCTION_47	IF_1
0x89ad	            0x7461	                            je 0x4008a50	      7997	option.c	FUNCTION_47	IF_1
0x89af	    0x488b05000000	            mov rax, qword [0x040089f6] 	      7999	option.c	FUNCTION_47	IF_1	CALL_1
0x89b6	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7999	option.c	FUNCTION_47	IF_1	CALL_1
0x89ba	    0x488b80780400	           mov rax, qword [rax + 0x478] 	      7999	option.c	FUNCTION_47	IF_1	CALL_1
0x89c1	          0x4889c7	                            mov rdi, rax	      7999	option.c	FUNCTION_47	IF_1	CALL_1
0x89c4	      0xe800000000	                          call 0x4008a09	      7999	option.c	FUNCTION_47	IF_1	CALL_1
0x89c9	          0x8945ec	             mov dword [rbp - 0x14], eax	      7999	option.c	FUNCTION_47	IF_1	CALL_1
0x89cc	        0x837dec00	               cmp dword [rbp - 0x14], 0	      8000	option.c	FUNCTION_47	IF_1	IF_2
0x89d0	            0x7e3e	                           jle 0x4008a50	      8000	option.c	FUNCTION_47	IF_1	IF_2
0x89d2	        0x837dec03	               cmp dword [rbp - 0x14], 3	      8000	option.c	FUNCTION_47	IF_1	IF_2
0x89d6	            0x7e30	                           jle 0x4008a48	      8000	option.c	FUNCTION_47	IF_1	IF_2
0x89d8	    0x488b05000000	            mov rax, qword [0x04008a1f] 	      8001	option.c	FUNCTION_47	IF_1	IF_2	CALL_2
0x89df	        0x488b4010	            mov rax, qword [rax + 0x10] 	      8001	option.c	FUNCTION_47	IF_1	IF_2	CALL_2
0x89e3	    0x488b80780400	           mov rax, qword [rax + 0x478] 	      8001	option.c	FUNCTION_47	IF_1	IF_2	CALL_2
0x89ea	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      8001	option.c	FUNCTION_47	IF_1	IF_2	CALL_2
0x89ed	          0x4863d2	                         movsxd rdx, edx	      8001	option.c	FUNCTION_47	IF_1	IF_2	CALL_2
0x89f0	        0x4883ea04	                              sub rdx, 4	      8001	option.c	FUNCTION_47	IF_1	IF_2	CALL_2
0x89f4	          0x4801d0	                            add rax, rdx	      8001	option.c	FUNCTION_47	IF_1	IF_2	CALL_2
0x89f7	      0xbe00000000	                              mov esi, 0	      8001	option.c	FUNCTION_47	IF_1	IF_2	CALL_2
0x89fc	          0x4889c7	                            mov rdi, rax	      8001	option.c	FUNCTION_47	IF_1	IF_2	CALL_2
0x89ff	      0xe800000000	                          call 0x4008a44	      8001	option.c	FUNCTION_47	IF_1	IF_2	CALL_2
0x8a04	            0x85c0	                           test eax, eax	      8001	option.c	FUNCTION_47	IF_1	IF_2	CALL_2
0x8a06	            0x7408	                            je 0x4008a50	      8001	option.c	FUNCTION_47	IF_1	IF_2	CALL_2
0x8a08	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      8002	option.c	FUNCTION_47	IF_1	IF_2
0x8a10	      0x48837df000	               cmp qword [rbp - 0x10], 0	      8005	option.c	FUNCTION_47	IF_3
0x8a15	            0x7554	                           jne 0x4008aab	      8005	option.c	FUNCTION_47	IF_3
0x8a17	    0x488b05000000	            mov rax, qword [0x04008a5e] 	      8007	option.c	FUNCTION_47	IF_3	CALL_3
0x8a1e	        0x488945f8	                mov qword [rbp - 8], rax	      8007	option.c	FUNCTION_47	IF_3	CALL_3
0x8a22	            0xeb40	                           jmp 0x4008aa4	      8007	option.c	FUNCTION_47	IF_3	CALL_3
0x8a24	        0x488b45f8	                mov rax, qword [rbp - 8]	      8008	option.c	FUNCTION_47	IF_3	IF_4
0x8a28	        0x488b5008	                mov rdx, qword [rax + 8]	      8008	option.c	FUNCTION_47	IF_3	IF_4
0x8a2c	    0x488b05000000	            mov rax, qword [0x04008a73] 	      8008	option.c	FUNCTION_47	IF_3	IF_4
0x8a33	          0x4839c2	                            cmp rdx, rax	      8008	option.c	FUNCTION_47	IF_3	IF_4
0x8a36	            0x7520	                           jne 0x4008a98	      8008	option.c	FUNCTION_47	IF_3	IF_4
0x8a38	        0x488b45f8	                mov rax, qword [rbp - 8]	      8008	option.c	FUNCTION_47	IF_3	IF_4
0x8a3c	    0x8b8068020000	           mov eax, dword [rax + 0x268] 	      8008	option.c	FUNCTION_47	IF_3	IF_4
0x8a42	            0x85c0	                           test eax, eax	      8008	option.c	FUNCTION_47	IF_3	IF_4
0x8a44	            0x7412	                            je 0x4008a98	      8008	option.c	FUNCTION_47	IF_3	IF_4
0x8a46	        0x488b45f8	                mov rax, qword [rbp - 8]	      8010	option.c	FUNCTION_47	IF_3	IF_4	CALL_4
0x8a4a	          0x4889c7	                            mov rdi, rax	      8010	option.c	FUNCTION_47	IF_3	IF_4	CALL_4
0x8a4d	      0xe800000000	                          call 0x4008a92	      8010	option.c	FUNCTION_47	IF_3	IF_4	CALL_4
0x8a52	        0x488945f0	             mov qword [rbp - 0x10], rax	      8010	option.c	FUNCTION_47	IF_3	IF_4	CALL_4
0x8a56	            0xeb13	                           jmp 0x4008aab	      8011	option.c	FUNCTION_47	IF_3	IF_4
0x8a58	        0x488b45f8	                mov rax, qword [rbp - 8]	      8007	option.c	FUNCTION_47	IF_3	CALL_3
0x8a5c	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8007	option.c	FUNCTION_47	IF_3	CALL_3
0x8a60	        0x488945f8	                mov qword [rbp - 8], rax	      8007	option.c	FUNCTION_47	IF_3	CALL_3
0x8a64	      0x48837df800	                  cmp qword [rbp - 8], 0	      8007	option.c	FUNCTION_47	IF_3	CALL_3
0x8a69	            0x75b9	                           jne 0x4008a64	      8007	option.c	FUNCTION_47	IF_3	CALL_3
0x8a6b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      8014	option.c	FUNCTION_47
0x8a6f	              0xc9	                                   leave	      8015	option.c	FUNCTION_47
0x8a70	              0xc3	                                     ret	      8015	option.c	FUNCTION_47
istermoption	WHILE,0:SWITCH,0:CALL,0:FOR,0:ELSE,0:DO,0:IF,0:functions,0	19
0xc544	              0x55	                                push rbp	     10329	option.c	FUNCTION_74
0xc545	          0x4889e5	                            mov rbp, rsp	     10329	option.c	FUNCTION_74
0xc548	        0x48897df8	                mov qword [rbp - 8], rdi	     10329	option.c	FUNCTION_74
0xc54c	        0x488b45f8	                mov rax, qword [rbp - 8]	     10330	option.c	FUNCTION_74
0xc550	          0x488b00	                    mov rax, qword [rax]	     10330	option.c	FUNCTION_74
0xc553	           0xfb600	                   movzx eax, byte [rax]	     10330	option.c	FUNCTION_74
0xc556	            0x3c74	                            cmp al, 0x74	     10330	option.c	FUNCTION_74
0xc558	            0x7519	                           jne 0x400c5b3	     10330	option.c	FUNCTION_74
0xc55a	        0x488b45f8	                mov rax, qword [rbp - 8]	     10330	option.c	FUNCTION_74
0xc55e	          0x488b00	                    mov rax, qword [rax]	     10330	option.c	FUNCTION_74
0xc561	        0x4883c001	                              add rax, 1	     10330	option.c	FUNCTION_74
0xc565	           0xfb600	                   movzx eax, byte [rax]	     10330	option.c	FUNCTION_74
0xc568	            0x3c5f	                            cmp al, 0x5f	     10330	option.c	FUNCTION_74
0xc56a	            0x7507	                           jne 0x400c5b3	     10330	option.c	FUNCTION_74
0xc56c	      0xb801000000	                              mov eax, 1	     10330	option.c	FUNCTION_74
0xc571	            0xeb05	                           jmp 0x400c5b8	     10330	option.c	FUNCTION_74
0xc573	      0xb800000000	                              mov eax, 0	     10330	option.c	FUNCTION_74
0xc578	              0x5d	                                 pop rbp	     10331	option.c	FUNCTION_74
0xc579	              0xc3	                                     ret	     10331	option.c	FUNCTION_74
set_init_3	WHILE,0:SWITCH,0:CALL,38:FOR,0:ELSE,4:DO,0:IF,17:functions,0	171
0xe19	              0x55	                                push rbp	      4001	option.c	FUNCTION_10
0xe1a	          0x4889e5	                            mov rbp, rsp	      4001	option.c	FUNCTION_10
0xe1d	        0x4883ec20	                           sub rsp, 0x20	      4001	option.c	FUNCTION_10
0xe21	      0xbf00000000	                              mov edi, 0	      4016	option.c	FUNCTION_10	CALL_1
0xe26	      0xe85b9f0000	                     call sym.findoption	      4016	option.c	FUNCTION_10	CALL_1
0xe2b	          0x8945ec	             mov dword [rbp - 0x14], eax	      4016	option.c	FUNCTION_10	CALL_1
0xe2e	        0x837dec00	               cmp dword [rbp - 0x14], 0	      4017	option.c	FUNCTION_10	IF_1
0xe32	            0x7909	                           jns 0x4000e7d	      4017	option.c	FUNCTION_10	IF_1
0xe34	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      4018	option.c	FUNCTION_10	IF_1
0xe3b	            0xeb23	                           jmp 0x4000ea0	      4018	option.c	FUNCTION_10	IF_1
0xe3d	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      4020	option.c	FUNCTION_10	ELSE_1
0xe40	            0x4898	                                    cdqe	      4020	option.c	FUNCTION_10	ELSE_1
0xe42	        0x48c1e006	                              shl rax, 6	      4020	option.c	FUNCTION_10	ELSE_1
0xe46	    0x480500000000	                              add rax, 0	      4020	option.c	FUNCTION_10	ELSE_1
0xe4c	          0x488b00	                    mov rax, qword [rax]	      4020	option.c	FUNCTION_10	ELSE_1
0xe4f	      0x2500010000	                          and eax, 0x100	      4020	option.c	FUNCTION_10	ELSE_1
0xe54	          0x4885c0	                           test rax, rax	      4020	option.c	FUNCTION_10	ELSE_1
0xe57	           0xf94c0	                                 sete al	      4020	option.c	FUNCTION_10	ELSE_1
0xe5a	           0xfb6c0	                           movzx eax, al	      4020	option.c	FUNCTION_10	ELSE_1
0xe5d	          0x8945e4	             mov dword [rbp - 0x1c], eax	      4020	option.c	FUNCTION_10	ELSE_1
0xe60	      0xbf00000000	                              mov edi, 0	      4022	option.c	FUNCTION_10	CALL_2
0xe65	      0xe81c9f0000	                     call sym.findoption	      4022	option.c	FUNCTION_10	CALL_2
0xe6a	          0x8945f0	             mov dword [rbp - 0x10], eax	      4022	option.c	FUNCTION_10	CALL_2
0xe6d	        0x837df000	               cmp dword [rbp - 0x10], 0	      4023	option.c	FUNCTION_10	IF_2
0xe71	            0x7909	                           jns 0x4000ebc	      4023	option.c	FUNCTION_10	IF_2
0xe73	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      4024	option.c	FUNCTION_10	IF_2
0xe7a	            0xeb23	                           jmp 0x4000edf	      4024	option.c	FUNCTION_10	IF_2
0xe7c	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4026	option.c	FUNCTION_10	ELSE_2
0xe7f	            0x4898	                                    cdqe	      4026	option.c	FUNCTION_10	ELSE_2
0xe81	        0x48c1e006	                              shl rax, 6	      4026	option.c	FUNCTION_10	ELSE_2
0xe85	    0x480500000000	                              add rax, 0	      4026	option.c	FUNCTION_10	ELSE_2
0xe8b	          0x488b00	                    mov rax, qword [rax]	      4026	option.c	FUNCTION_10	ELSE_2
0xe8e	      0x2500010000	                          and eax, 0x100	      4026	option.c	FUNCTION_10	ELSE_2
0xe93	          0x4885c0	                           test rax, rax	      4026	option.c	FUNCTION_10	ELSE_2
0xe96	           0xf94c0	                                 sete al	      4026	option.c	FUNCTION_10	ELSE_2
0xe99	           0xfb6c0	                           movzx eax, al	      4026	option.c	FUNCTION_10	ELSE_2
0xe9c	          0x8945e8	             mov dword [rbp - 0x18], eax	      4026	option.c	FUNCTION_10	ELSE_2
0xe9f	      0xe800000000	                          call 0x4000ee4	      4028	option.c	FUNCTION_10	CALL_3
0xea4	        0x488945f8	                mov qword [rbp - 8], rax	      4028	option.c	FUNCTION_10	CALL_3
0xea8	      0x48837df800	                  cmp qword [rbp - 8], 0	      4029	option.c	FUNCTION_10	IF_3
0xead	     0xf849b010000	                            je 0x400108e	      4029	option.c	FUNCTION_10	IF_3
0xeb3	        0x488b45f8	                mov rax, qword [rbp - 8]	      4035	option.c	FUNCTION_10	IF_3	IF_4	CALL_4
0xeb7	      0xbe00000000	                              mov esi, 0	      4035	option.c	FUNCTION_10	IF_3	IF_4	CALL_4
0xebc	          0x4889c7	                            mov rdi, rax	      4035	option.c	FUNCTION_10	IF_3	IF_4	CALL_4
0xebf	      0xe800000000	                          call 0x4000f04	      4035	option.c	FUNCTION_10	IF_3	IF_4	CALL_4
0xec4	            0x85c0	                           test eax, eax	      4035	option.c	FUNCTION_10	IF_3	IF_4	CALL_4
0xec6	            0x7415	                            je 0x4000f1d	      4035	option.c	FUNCTION_10	IF_3	IF_4	CALL_4
0xec8	        0x488b45f8	                mov rax, qword [rbp - 8]	      4036	option.c	FUNCTION_10	IF_3	IF_4	CALL_5
0xecc	      0xbe00000000	                              mov esi, 0	      4036	option.c	FUNCTION_10	IF_3	IF_4	CALL_5
0xed1	          0x4889c7	                            mov rdi, rax	      4036	option.c	FUNCTION_10	IF_3	IF_4	CALL_5
0xed4	      0xe800000000	                          call 0x4000f19	      4036	option.c	FUNCTION_10	IF_3	IF_4	CALL_5
0xed9	            0x85c0	                           test eax, eax	      4036	option.c	FUNCTION_10	IF_3	IF_4	CALL_5
0xedb	            0x7561	                           jne 0x4000f7e	      4036	option.c	FUNCTION_10	IF_3	IF_4	CALL_5
0xedd	        0x837de800	               cmp dword [rbp - 0x18], 0	      4044	option.c	FUNCTION_10	IF_3	IF_4	IF_5
0xee1	            0x7426	                            je 0x4000f49	      4044	option.c	FUNCTION_10	IF_3	IF_4	IF_5
0xee3	    0x48c705000000	               mov qword [0x04000f2e], 0	      4049	option.c	FUNCTION_10	IF_3	IF_4	IF_5
0xeee	    0x488b05000000	            mov rax, qword [0x04000f35] 	      4051	option.c	FUNCTION_10	IF_3	IF_4	IF_5
0xef5	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      4051	option.c	FUNCTION_10	IF_3	IF_4	IF_5
0xef8	          0x4863d2	                         movsxd rdx, edx	      4051	option.c	FUNCTION_10	IF_3	IF_4	IF_5
0xefb	        0x48c1e206	                              shl rdx, 6	      4051	option.c	FUNCTION_10	IF_3	IF_4	IF_5
0xeff	    0x4881c2000000	                              add rdx, 0	      4051	option.c	FUNCTION_10	IF_3	IF_4	IF_5
0xf06	          0x488902	                    mov qword [rdx], rax	      4051	option.c	FUNCTION_10	IF_3	IF_4	IF_5
0xf09	        0x837de400	               cmp dword [rbp - 0x1c], 0	      4054	option.c	FUNCTION_10	IF_3	IF_4	IF_6
0xf0d	     0xf842f010000	                            je 0x4001082	      4054	option.c	FUNCTION_10	IF_3	IF_4	IF_6
0xf13	    0x48c705000000	               mov qword [0x04000f5e], 0	      4056	option.c	FUNCTION_10	IF_3	IF_4	IF_6
0xf1e	    0x488b05000000	            mov rax, qword [0x04000f65] 	      4057	option.c	FUNCTION_10	IF_3	IF_4	IF_6
0xf25	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      4057	option.c	FUNCTION_10	IF_3	IF_4	IF_6
0xf28	          0x4863d2	                         movsxd rdx, edx	      4057	option.c	FUNCTION_10	IF_3	IF_4	IF_6
0xf2b	        0x48c1e206	                              shl rdx, 6	      4057	option.c	FUNCTION_10	IF_3	IF_4	IF_6
0xf2f	    0x4881c2000000	                              add rdx, 0	      4057	option.c	FUNCTION_10	IF_3	IF_4	IF_6
0xf36	          0x488902	                    mov qword [rdx], rax	      4057	option.c	FUNCTION_10	IF_3	IF_4	IF_6
0xf39	      0xe904010000	                           jmp 0x4001082	      4054	option.c	FUNCTION_10	IF_3	IF_4	IF_6
0xf3e	        0x488b45f8	                mov rax, qword [rbp - 8]	      4062	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_8
0xf42	      0xbe00000000	                              mov esi, 0	      4062	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_8
0xf47	          0x4889c7	                            mov rdi, rax	      4062	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_8
0xf4a	      0xe800000000	                          call 0x4000f8f	      4062	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_8
0xf4f	            0x85c0	                           test eax, eax	      4062	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_8
0xf51	     0xf8493000000	                            je 0x400102a	      4062	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_8
0xf57	        0x488b45f8	                mov rax, qword [rbp - 8]	      4063	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_9
0xf5b	      0xbe00000000	                              mov esi, 0	      4063	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_9
0xf60	          0x4889c7	                            mov rdi, rax	      4063	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_9
0xf63	      0xe800000000	                          call 0x4000fa8	      4063	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_9
0xf68	            0x85c0	                           test eax, eax	      4063	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_9
0xf6a	            0x747e	                            je 0x400102a	      4063	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_9
0xf6c	        0x488b45f8	                mov rax, qword [rbp - 8]	      4064	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_10
0xf70	      0xbe00000000	                              mov esi, 0	      4064	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_10
0xf75	          0x4889c7	                            mov rdi, rax	      4064	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_10
0xf78	      0xe800000000	                          call 0x4000fbd	      4064	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_10
0xf7d	            0x85c0	                           test eax, eax	      4064	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_10
0xf7f	            0x7469	                            je 0x400102a	      4064	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_10
0xf81	        0x488b45f8	                mov rax, qword [rbp - 8]	      4065	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_11
0xf85	      0xbe00000000	                              mov esi, 0	      4065	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_11
0xf8a	          0x4889c7	                            mov rdi, rax	      4065	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_11
0xf8d	      0xe800000000	                          call 0x4000fd2	      4065	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_11
0xf92	            0x85c0	                           test eax, eax	      4065	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_11
0xf94	            0x7454	                            je 0x400102a	      4065	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_11
0xf96	        0x488b45f8	                mov rax, qword [rbp - 8]	      4066	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_12
0xf9a	      0xbe00000000	                              mov esi, 0	      4066	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_12
0xf9f	          0x4889c7	                            mov rdi, rax	      4066	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_12
0xfa2	      0xe800000000	                          call 0x4000fe7	      4066	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_12
0xfa7	            0x85c0	                           test eax, eax	      4066	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_12
0xfa9	            0x743f	                            je 0x400102a	      4066	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_12
0xfab	        0x488b45f8	                mov rax, qword [rbp - 8]	      4067	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_13
0xfaf	      0xbe00000000	                              mov esi, 0	      4067	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_13
0xfb4	          0x4889c7	                            mov rdi, rax	      4067	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_13
0xfb7	      0xe800000000	                          call 0x4000ffc	      4067	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_13
0xfbc	            0x85c0	                           test eax, eax	      4067	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_13
0xfbe	            0x742a	                            je 0x400102a	      4067	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_13
0xfc0	        0x488b45f8	                mov rax, qword [rbp - 8]	      4068	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_14
0xfc4	      0xbe00000000	                              mov esi, 0	      4068	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_14
0xfc9	          0x4889c7	                            mov rdi, rax	      4068	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_14
0xfcc	      0xe800000000	                          call 0x4001011	      4068	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_14
0xfd1	            0x85c0	                           test eax, eax	      4068	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_14
0xfd3	            0x7415	                            je 0x400102a	      4068	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_14
0xfd5	        0x488b45f8	                mov rax, qword [rbp - 8]	      4069	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_15
0xfd9	      0xbe00000000	                              mov esi, 0	      4069	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_15
0xfde	          0x4889c7	                            mov rdi, rax	      4069	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_15
0xfe1	      0xe800000000	                          call 0x4001026	      4069	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_15
0xfe6	            0x85c0	                           test eax, eax	      4069	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_15
0xfe8	            0x7558	                           jne 0x4001082	      4069	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_15
0xfea	        0x837de800	               cmp dword [rbp - 0x18], 0	      4084	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_8
0xfee	            0x7426	                            je 0x4001056	      4084	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_8
0xff0	    0x48c705000000	               mov qword [0x0400103b], 0	      4089	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_8
0xffb	    0x488b05000000	            mov rax, qword [0x04001042] 	      4091	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_8
0x1002	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      4091	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_8
0x1005	          0x4863d2	                         movsxd rdx, edx	      4091	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_8
0x1008	        0x48c1e206	                              shl rdx, 6	      4091	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_8
0x100c	    0x4881c2000000	                              add rdx, 0	      4091	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_8
0x1013	          0x488902	                    mov qword [rdx], rax	      4091	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_8
0x1016	        0x837de400	               cmp dword [rbp - 0x1c], 0	      4094	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_9
0x101a	            0x7426	                            je 0x4001082	      4094	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_9
0x101c	    0x48c705000000	               mov qword [0x04001067], 0	      4096	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_9
0x1027	    0x488b05000000	            mov rax, qword [0x0400106e] 	      4097	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_9
0x102e	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      4097	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_9
0x1031	          0x4863d2	                         movsxd rdx, edx	      4097	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_9
0x1034	        0x48c1e206	                              shl rdx, 6	      4097	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_9
0x1038	    0x4881c2000000	                              add rdx, 0	      4097	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_9
0x103f	          0x488902	                    mov qword [rdx], rax	      4097	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_9
0x1042	        0x488b45f8	                mov rax, qword [rbp - 8]	      4100	option.c	FUNCTION_10	IF_3	CALL_25
0x1046	          0x4889c7	                            mov rdi, rax	      4100	option.c	FUNCTION_10	IF_3	CALL_25
0x1049	      0xe800000000	                          call 0x400108e	      4100	option.c	FUNCTION_10	IF_3	CALL_25
0x104e	    0x488b05000000	            mov rax, qword [0x04001095] 	      4165	option.c	FUNCTION_10	IF_16	CALL_34
0x1055	          0x488b00	                    mov rax, qword [rax]	      4165	option.c	FUNCTION_10	IF_16	CALL_34
0x1058	        0x4883f801	                              cmp rax, 1	      4165	option.c	FUNCTION_10	IF_16	CALL_34
0x105c	            0x7551	                           jne 0x40010ef	      4165	option.c	FUNCTION_10	IF_16	CALL_34
0x105e	      0xbf01000000	                              mov edi, 1	      4165	option.c	FUNCTION_10	IF_16	CALL_34
0x1063	      0xe800000000	                          call 0x40010a8	      4165	option.c	FUNCTION_10	IF_16	CALL_34
0x1068	           0xfb600	                   movzx eax, byte [rax]	      4165	option.c	FUNCTION_10	IF_16	CALL_34
0x106b	            0x84c0	                             test al, al	      4165	option.c	FUNCTION_10	IF_16	CALL_34
0x106d	            0x7540	                           jne 0x40010ef	      4165	option.c	FUNCTION_10	IF_16	CALL_34
0x106f	      0xbf00000000	                              mov edi, 0	      4167	option.c	FUNCTION_10	IF_16	CALL_35
0x1074	      0xe80d9d0000	                     call sym.findoption	      4167	option.c	FUNCTION_10	IF_16	CALL_35
0x1079	          0x8945f4	              mov dword [rbp - 0xc], eax	      4167	option.c	FUNCTION_10	IF_16	CALL_35
0x107c	        0x837df400	                cmp dword [rbp - 0xc], 0	      4170	option.c	FUNCTION_10	IF_16	IF_17
0x1080	            0x782d	                            js 0x40010ef	      4170	option.c	FUNCTION_10	IF_16	IF_17
0x1082	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      4170	option.c	FUNCTION_10	IF_16	IF_17
0x1085	            0x4898	                                    cdqe	      4170	option.c	FUNCTION_10	IF_16	IF_17
0x1087	        0x48c1e006	                              shl rax, 6	      4170	option.c	FUNCTION_10	IF_16	IF_17
0x108b	    0x480500000000	                              add rax, 0	      4170	option.c	FUNCTION_10	IF_16	IF_17
0x1091	          0x488b00	                    mov rax, qword [rax]	      4170	option.c	FUNCTION_10	IF_16	IF_17
0x1094	      0x2500010000	                          and eax, 0x100	      4170	option.c	FUNCTION_10	IF_16	IF_17
0x1099	          0x4885c0	                           test rax, rax	      4170	option.c	FUNCTION_10	IF_16	IF_17
0x109c	            0x7411	                            je 0x40010ef	      4170	option.c	FUNCTION_10	IF_16	IF_17
0x109e	      0xe800000000	                          call 0x40010e3	      4171	option.c	FUNCTION_10	IF_16	CALL_37
0x10a3	      0xbe04000000	                              mov esi, 4	      4171	option.c	FUNCTION_10	IF_16	CALL_37
0x10a8	            0x89c7	                            mov edi, eax	      4171	option.c	FUNCTION_10	IF_16	CALL_37
0x10aa	      0xe800000000	                          call 0x40010ef	      4171	option.c	FUNCTION_10	IF_16	CALL_37
0x10af	      0xe800000000	                          call 0x40010f4	      4175	option.c	FUNCTION_10	CALL_38
0x10b4	              0x90	                                     nop	      4177	option.c	FUNCTION_10
0x10b5	              0xc9	                                   leave	      4177	option.c	FUNCTION_10
0x10b6	              0xc3	                                     ret	      4177	option.c	FUNCTION_10
check_string_option	WHILE,0:SWITCH,0:CALL,0:FOR,0:ELSE,0:DO,0:IF,1:functions,0	13
0x4545	              0x55	                                push rbp	      5736	option.c	FUNCTION_32
0x4546	          0x4889e5	                            mov rbp, rsp	      5736	option.c	FUNCTION_32
0x4549	        0x48897df8	                mov qword [rbp - 8], rdi	      5736	option.c	FUNCTION_32
0x454d	        0x488b45f8	                mov rax, qword [rbp - 8]	      5737	option.c	FUNCTION_32	IF_1
0x4551	          0x488b00	                    mov rax, qword [rax]	      5737	option.c	FUNCTION_32	IF_1
0x4554	          0x4885c0	                           test rax, rax	      5737	option.c	FUNCTION_32	IF_1
0x4557	            0x750e	                           jne 0x40045a7	      5737	option.c	FUNCTION_32	IF_1
0x4559	    0x488b15000000	            mov rdx, qword [0x040045a0] 	      5738	option.c	FUNCTION_32	IF_1
0x4560	        0x488b45f8	                mov rax, qword [rbp - 8]	      5738	option.c	FUNCTION_32	IF_1
0x4564	          0x488910	                    mov qword [rax], rdx	      5738	option.c	FUNCTION_32	IF_1
0x4567	              0x90	                                     nop	      5739	option.c	FUNCTION_32
0x4568	              0x5d	                                 pop rbp	      5739	option.c	FUNCTION_32
0x4569	              0xc3	                                     ret	      5739	option.c	FUNCTION_32
free_termoptions	WHILE,0:SWITCH,0:CALL,4:FOR,1:ELSE,0:DO,0:IF,3:functions,0	51
0xc31e	              0x55	                                push rbp	     10258	option.c	FUNCTION_71
0xc31f	          0x4889e5	                            mov rbp, rsp	     10258	option.c	FUNCTION_71
0xc322	        0x4883ec10	                           sub rsp, 0x10	     10258	option.c	FUNCTION_71
0xc326	    0x48c745f80000	                  mov qword [rbp - 8], 0	     10261	option.c	FUNCTION_71	FOR_1
0xc32e	      0xe990000000	                           jmp 0x400c403	     10261	option.c	FUNCTION_71	FOR_1
0xc333	        0x488b45f8	                mov rax, qword [rbp - 8]	     10262	option.c	FUNCTION_71	FOR_1	IF_1	CALL_1
0xc337	          0x4889c7	                            mov rdi, rax	     10262	option.c	FUNCTION_71	FOR_1	IF_1	CALL_1
0xc33a	      0xe805020000	                   call sym.istermoption	     10262	option.c	FUNCTION_71	FOR_1	IF_1	CALL_1
0xc33f	            0x85c0	                           test eax, eax	     10262	option.c	FUNCTION_71	FOR_1	IF_1	CALL_1
0xc341	            0x747b	                            je 0x400c3fe	     10262	option.c	FUNCTION_71	FOR_1	IF_1	CALL_1
0xc343	        0x488b45f8	                mov rax, qword [rbp - 8]	     10264	option.c	FUNCTION_71	FOR_1	IF_1	IF_2
0xc347	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10264	option.c	FUNCTION_71	FOR_1	IF_1	IF_2
0xc34b	          0x83e008	                              and eax, 8	     10264	option.c	FUNCTION_71	FOR_1	IF_1	IF_2
0xc34e	          0x4885c0	                           test rax, rax	     10264	option.c	FUNCTION_71	FOR_1	IF_1	IF_2
0xc351	            0x7413	                            je 0x400c3a6	     10264	option.c	FUNCTION_71	FOR_1	IF_1	IF_2
0xc353	        0x488b45f8	                mov rax, qword [rbp - 8]	     10265	option.c	FUNCTION_71	FOR_1	IF_1	CALL_2
0xc357	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10265	option.c	FUNCTION_71	FOR_1	IF_1	CALL_2
0xc35b	          0x488b00	                    mov rax, qword [rax]	     10265	option.c	FUNCTION_71	FOR_1	IF_1	CALL_2
0xc35e	          0x4889c7	                            mov rdi, rax	     10265	option.c	FUNCTION_71	FOR_1	IF_1	CALL_2
0xc361	      0xe800000000	                          call 0x400c3a6	     10265	option.c	FUNCTION_71	FOR_1	IF_1	CALL_2
0xc366	        0x488b45f8	                mov rax, qword [rbp - 8]	     10266	option.c	FUNCTION_71	FOR_1	IF_1	IF_3
0xc36a	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10266	option.c	FUNCTION_71	FOR_1	IF_1	IF_3
0xc36e	      0x2580000000	                           and eax, 0x80	     10266	option.c	FUNCTION_71	FOR_1	IF_1	IF_3
0xc373	          0x4885c0	                           test rax, rax	     10266	option.c	FUNCTION_71	FOR_1	IF_1	IF_3
0xc376	            0x7410	                            je 0x400c3c8	     10266	option.c	FUNCTION_71	FOR_1	IF_1	IF_3
0xc378	        0x488b45f8	                mov rax, qword [rbp - 8]	     10267	option.c	FUNCTION_71	FOR_1	IF_1	CALL_3
0xc37c	        0x488b4028	            mov rax, qword [rax + 0x28] 	     10267	option.c	FUNCTION_71	FOR_1	IF_1	CALL_3
0xc380	          0x4889c7	                            mov rdi, rax	     10267	option.c	FUNCTION_71	FOR_1	IF_1	CALL_3
0xc383	      0xe800000000	                          call 0x400c3c8	     10267	option.c	FUNCTION_71	FOR_1	IF_1	CALL_3
0xc388	        0x488b45f8	                mov rax, qword [rbp - 8]	     10268	option.c	FUNCTION_71	FOR_1	IF_1
0xc38c	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10268	option.c	FUNCTION_71	FOR_1	IF_1
0xc390	    0x488b15000000	            mov rdx, qword [0x0400c3d7] 	     10268	option.c	FUNCTION_71	FOR_1	IF_1
0xc397	          0x488910	                    mov qword [rax], rdx	     10268	option.c	FUNCTION_71	FOR_1	IF_1
0xc39a	    0x488b15000000	            mov rdx, qword [0x0400c3e1] 	     10269	option.c	FUNCTION_71	FOR_1	IF_1
0xc3a1	        0x488b45f8	                mov rax, qword [rbp - 8]	     10269	option.c	FUNCTION_71	FOR_1	IF_1
0xc3a5	        0x48895028	             mov qword [rax + 0x28], rdx	     10269	option.c	FUNCTION_71	FOR_1	IF_1
0xc3a9	        0x488b45f8	                mov rax, qword [rbp - 8]	     10270	option.c	FUNCTION_71	FOR_1	IF_1
0xc3ad	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10270	option.c	FUNCTION_71	FOR_1	IF_1
0xc3b1	            0x2477	                            and al, 0x77	     10270	option.c	FUNCTION_71	FOR_1	IF_1
0xc3b3	          0x4889c2	                            mov rdx, rax	     10270	option.c	FUNCTION_71	FOR_1	IF_1
0xc3b6	        0x488b45f8	                mov rax, qword [rbp - 8]	     10270	option.c	FUNCTION_71	FOR_1	IF_1
0xc3ba	        0x48895010	             mov qword [rax + 0x10], rdx	     10270	option.c	FUNCTION_71	FOR_1	IF_1
0xc3be	      0x488345f840	               add qword [rbp - 8], 0x40	     10261	option.c	FUNCTION_71	FOR_1
0xc3c3	        0x488b45f8	                mov rax, qword [rbp - 8]	     10261	option.c	FUNCTION_71	FOR_1
0xc3c7	          0x488b00	                    mov rax, qword [rax]	     10261	option.c	FUNCTION_71	FOR_1
0xc3ca	          0x4885c0	                           test rax, rax	     10261	option.c	FUNCTION_71	FOR_1
0xc3cd	     0xf8560ffffff	                           jne 0x400c373	     10261	option.c	FUNCTION_71	FOR_1
0xc3d3	      0xe800000000	                          call 0x400c418	     10272	option.c	FUNCTION_71	CALL_4
0xc3d8	              0x90	                                     nop	     10273	option.c	FUNCTION_71
0xc3d9	              0xc9	                                   leave	     10273	option.c	FUNCTION_71
0xc3da	              0xc3	                                     ret	     10273	option.c	FUNCTION_71
get_bkc_value	WHILE,0:SWITCH,0:CALL,0:FOR,0:ELSE,0:DO,0:IF,0:functions,0	13
0x115d4	              0x55	                                push rbp	     12650	option.c	FUNCTION_118
0x115d5	          0x4889e5	                            mov rbp, rsp	     12650	option.c	FUNCTION_118
0x115d8	        0x48897df8	                mov qword [rbp - 8], rdi	     12650	option.c	FUNCTION_118
0x115dc	        0x488b45f8	                mov rax, qword [rbp - 8]	     12651	option.c	FUNCTION_118
0x115e0	    0x8b80e8130000	          mov eax, dword [rax + 0x13e8] 	     12651	option.c	FUNCTION_118
0x115e6	            0x85c0	                           test eax, eax	     12651	option.c	FUNCTION_118
0x115e8	            0x740c	                            je 0x4011636	     12651	option.c	FUNCTION_118
0x115ea	        0x488b45f8	                mov rax, qword [rbp - 8]	     12651	option.c	FUNCTION_118
0x115ee	    0x8b80e8130000	          mov eax, dword [rax + 0x13e8] 	     12651	option.c	FUNCTION_118
0x115f4	            0xeb06	                           jmp 0x401163c	     12651	option.c	FUNCTION_118
0x115f6	    0x8b0500000000	            mov eax, dword [0x0401163c] 	     12651	option.c	FUNCTION_118
0x115fc	              0x5d	                                 pop rbp	     12652	option.c	FUNCTION_118
0x115fd	              0xc3	                                     ret	     12652	option.c	FUNCTION_118
set_context_in_set_cmd	WHILE,5:SWITCH,0:CALL,11:FOR,1:ELSE,6:DO,0:IF,27:functions,0	453
0xef97	              0x55	                                push rbp	     11302	option.c	FUNCTION_89
0xef98	          0x4889e5	                            mov rbp, rsp	     11302	option.c	FUNCTION_89
0xef9b	        0x4883ec50	                           sub rsp, 0x50	     11302	option.c	FUNCTION_89
0xef9f	        0x48897dc8	             mov qword [rbp - 0x38], rdi	     11302	option.c	FUNCTION_89
0xefa3	        0x488975c0	             mov qword [rbp - 0x40], rsi	     11302	option.c	FUNCTION_89
0xefa7	          0x8955bc	             mov dword [rbp - 0x44], edx	     11302	option.c	FUNCTION_89
0xefaa	    0x48c745e80000	               mov qword [rbp - 0x18], 0	     11304	option.c	FUNCTION_89
0xefb2	    0xc745dc000000	               mov dword [rbp - 0x24], 0	     11305	option.c	FUNCTION_89
0xefb9	    0xc745e0000000	               mov dword [rbp - 0x20], 0	     11308	option.c	FUNCTION_89
0xefc0	          0x8b45bc	             mov eax, dword [rbp - 0x44]	     11311	option.c	FUNCTION_89
0xefc3	    0x890500000000	            mov dword [0x0400f009], eax 	     11311	option.c	FUNCTION_89
0xefc9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11313	option.c	FUNCTION_89
0xefcd	    0xc70004000000	                      mov dword [rax], 4	     11313	option.c	FUNCTION_89
0xefd3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11314	option.c	FUNCTION_89	IF_1
0xefd7	           0xfb600	                   movzx eax, byte [rax]	     11314	option.c	FUNCTION_89	IF_1
0xefda	            0x84c0	                             test al, al	     11314	option.c	FUNCTION_89	IF_1
0xefdc	            0x7511	                           jne 0x400f02f	     11314	option.c	FUNCTION_89	IF_1
0xefde	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11316	option.c	FUNCTION_89	IF_1
0xefe2	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	     11316	option.c	FUNCTION_89	IF_1
0xefe6	        0x48895008	                mov qword [rax + 8], rdx	     11316	option.c	FUNCTION_89	IF_1
0xefea	      0xe923060000	                           jmp 0x400f652	     11317	option.c	FUNCTION_89	IF_1
0xefef	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11319	option.c	FUNCTION_89	CALL_1
0xeff3	          0x4889c7	                            mov rdi, rax	     11319	option.c	FUNCTION_89	CALL_1
0xeff6	      0xe800000000	                          call 0x400f03b	     11319	option.c	FUNCTION_89	CALL_1
0xeffb	        0x488d50ff	                      lea rdx, [rax - 1]	     11319	option.c	FUNCTION_89	CALL_1
0xefff	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11319	option.c	FUNCTION_89	CALL_1
0xf003	          0x4801d0	                            add rax, rdx	     11319	option.c	FUNCTION_89	CALL_1
0xf006	        0x488945f0	             mov qword [rbp - 0x10], rax	     11319	option.c	FUNCTION_89	CALL_1
0xf00a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11320	option.c	FUNCTION_89	IF_2
0xf00e	           0xfb600	                   movzx eax, byte [rax]	     11320	option.c	FUNCTION_89	IF_2
0xf011	            0x3c20	                            cmp al, 0x20	     11320	option.c	FUNCTION_89	IF_2
0xf013	     0xf8593000000	                           jne 0x400f0ec	     11320	option.c	FUNCTION_89	IF_2
0xf019	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11320	option.c	FUNCTION_89	IF_2
0xf01d	        0x4883e801	                              sub rax, 1	     11320	option.c	FUNCTION_89	IF_2
0xf021	           0xfb600	                   movzx eax, byte [rax]	     11320	option.c	FUNCTION_89	IF_2
0xf024	            0x3c5c	                            cmp al, 0x5c	     11320	option.c	FUNCTION_89	IF_2
0xf026	     0xf8480000000	                            je 0x400f0ec	     11320	option.c	FUNCTION_89	IF_2
0xf02c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11322	option.c	FUNCTION_89	IF_2
0xf030	        0x488d5001	                      lea rdx, [rax + 1]	     11322	option.c	FUNCTION_89	IF_2
0xf034	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11322	option.c	FUNCTION_89	IF_2
0xf038	        0x48895008	                mov qword [rax + 8], rdx	     11322	option.c	FUNCTION_89	IF_2
0xf03c	      0xe9d1050000	                           jmp 0x400f652	     11323	option.c	FUNCTION_89	IF_2
0xf041	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11327	option.c	FUNCTION_89	WHILE_1
0xf045	        0x488945f8	                mov qword [rbp - 8], rax	     11327	option.c	FUNCTION_89	WHILE_1
0xf049	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11329	option.c	FUNCTION_89	WHILE_1	IF_3
0xf04d	           0xfb600	                   movzx eax, byte [rax]	     11329	option.c	FUNCTION_89	WHILE_1	IF_3
0xf050	            0x3c20	                            cmp al, 0x20	     11329	option.c	FUNCTION_89	WHILE_1	IF_3
0xf052	            0x7412	                            je 0x400f0a6	     11329	option.c	FUNCTION_89	WHILE_1	IF_3
0xf054	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11329	option.c	FUNCTION_89	WHILE_1	IF_3
0xf058	           0xfb600	                   movzx eax, byte [rax]	     11329	option.c	FUNCTION_89	WHILE_1	IF_3
0xf05b	            0x3c2c	                            cmp al, 0x2c	     11329	option.c	FUNCTION_89	WHILE_1	IF_3
0xf05d	            0x7520	                           jne 0x400f0bf	     11329	option.c	FUNCTION_89	WHILE_1	IF_3
0xf05f	            0xeb05	                           jmp 0x400f0a6	     11331	option.c	FUNCTION_89	WHILE_1	IF_3	WHILE_2
0xf061	      0x48836df801	                  sub qword [rbp - 8], 1	     11332	option.c	FUNCTION_89	WHILE_1	IF_3	WHILE_2
0xf066	        0x488b45f8	                mov rax, qword [rbp - 8]	     11331	option.c	FUNCTION_89	WHILE_1	IF_3	WHILE_2
0xf06a	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	     11331	option.c	FUNCTION_89	WHILE_1	IF_3	WHILE_2
0xf06e	            0x760f	                           jbe 0x400f0bf	     11331	option.c	FUNCTION_89	WHILE_1	IF_3	WHILE_2
0xf070	        0x488b45f8	                mov rax, qword [rbp - 8]	     11331	option.c	FUNCTION_89	WHILE_1	IF_3	WHILE_2
0xf074	        0x4883e801	                              sub rax, 1	     11331	option.c	FUNCTION_89	WHILE_1	IF_3	WHILE_2
0xf078	           0xfb600	                   movzx eax, byte [rax]	     11331	option.c	FUNCTION_89	WHILE_1	IF_3	WHILE_2
0xf07b	            0x3c5c	                            cmp al, 0x5c	     11331	option.c	FUNCTION_89	WHILE_1	IF_3	WHILE_2
0xf07d	            0x74e2	                            je 0x400f0a1	     11331	option.c	FUNCTION_89	WHILE_1	IF_3	WHILE_2
0xf07f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11335	option.c	FUNCTION_89	WHILE_1	IF_4
0xf083	           0xfb600	                   movzx eax, byte [rax]	     11335	option.c	FUNCTION_89	WHILE_1	IF_4
0xf086	            0x3c20	                            cmp al, 0x20	     11335	option.c	FUNCTION_89	WHILE_1	IF_4
0xf088	            0x751d	                           jne 0x400f0e7	     11335	option.c	FUNCTION_89	WHILE_1	IF_4
0xf08a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	     11335	option.c	FUNCTION_89	WHILE_1	IF_4
0xf08e	        0x488b45f8	                mov rax, qword [rbp - 8]	     11335	option.c	FUNCTION_89	WHILE_1	IF_4
0xf092	          0x4829c2	                            sub rdx, rax	     11335	option.c	FUNCTION_89	WHILE_1	IF_4
0xf095	          0x4889d0	                            mov rax, rdx	     11335	option.c	FUNCTION_89	WHILE_1	IF_4
0xf098	          0x83e001	                              and eax, 1	     11335	option.c	FUNCTION_89	WHILE_1	IF_4
0xf09b	          0x4885c0	                           test rax, rax	     11335	option.c	FUNCTION_89	WHILE_1	IF_4
0xf09e	            0x7507	                           jne 0x400f0e7	     11335	option.c	FUNCTION_89	WHILE_1	IF_4
0xf0a0	      0x488345f001	               add qword [rbp - 0x10], 1	     11337	option.c	FUNCTION_89	WHILE_1	IF_4
0xf0a5	            0xeb0f	                           jmp 0x400f0f6	     11338	option.c	FUNCTION_89	WHILE_1	IF_4
0xf0a7	      0x48836df001	               sub qword [rbp - 0x10], 1	     11340	option.c	FUNCTION_89	WHILE_1
0xf0ac	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11325	option.c	FUNCTION_89	WHILE_1
0xf0b0	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	     11325	option.c	FUNCTION_89	WHILE_1
0xf0b4	            0x778b	                            ja 0x400f081	     11325	option.c	FUNCTION_89	WHILE_1
0xf0b6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11342	option.c	FUNCTION_89	IF_5	CALL_3
0xf0ba	      0xba02000000	                              mov edx, 2	     11342	option.c	FUNCTION_89	IF_5	CALL_3
0xf0bf	      0xbe00000000	                              mov esi, 0	     11342	option.c	FUNCTION_89	IF_5	CALL_3
0xf0c4	          0x4889c7	                            mov rdi, rax	     11342	option.c	FUNCTION_89	IF_5	CALL_3
0xf0c7	      0xe800000000	                          call 0x400f10c	     11342	option.c	FUNCTION_89	IF_5	CALL_3
0xf0cc	            0x85c0	                           test eax, eax	     11342	option.c	FUNCTION_89	IF_5	CALL_3
0xf0ce	            0x7529	                           jne 0x400f139	     11342	option.c	FUNCTION_89	IF_5	CALL_3
0xf0d0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11342	option.c	FUNCTION_89	IF_5	CALL_3
0xf0d4	      0xba06000000	                              mov edx, 6	     11342	option.c	FUNCTION_89	IF_5	CALL_3
0xf0d9	      0xbe00000000	                              mov esi, 0	     11342	option.c	FUNCTION_89	IF_5	CALL_3
0xf0de	          0x4889c7	                            mov rdi, rax	     11342	option.c	FUNCTION_89	IF_5	CALL_3
0xf0e1	      0xe800000000	                          call 0x400f126	     11342	option.c	FUNCTION_89	IF_5	CALL_3
0xf0e6	            0x85c0	                           test eax, eax	     11342	option.c	FUNCTION_89	IF_5	CALL_3
0xf0e8	            0x740f	                            je 0x400f139	     11342	option.c	FUNCTION_89	IF_5	CALL_3
0xf0ea	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11344	option.c	FUNCTION_89	IF_5
0xf0ee	    0xc70005000000	                      mov dword [rax], 5	     11344	option.c	FUNCTION_89	IF_5
0xf0f4	      0x488345f002	               add qword [rbp - 0x10], 2	     11345	option.c	FUNCTION_89	IF_5
0xf0f9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11347	option.c	FUNCTION_89	IF_6	CALL_4
0xf0fd	      0xba03000000	                              mov edx, 3	     11347	option.c	FUNCTION_89	IF_6	CALL_4
0xf102	      0xbe00000000	                              mov esi, 0	     11347	option.c	FUNCTION_89	IF_6	CALL_4
0xf107	          0x4889c7	                            mov rdi, rax	     11347	option.c	FUNCTION_89	IF_6	CALL_4
0xf10a	      0xe800000000	                          call 0x400f14f	     11347	option.c	FUNCTION_89	IF_6	CALL_4
0xf10f	            0x85c0	                           test eax, eax	     11347	option.c	FUNCTION_89	IF_6	CALL_4
0xf111	            0x750f	                           jne 0x400f162	     11347	option.c	FUNCTION_89	IF_6	CALL_4
0xf113	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11349	option.c	FUNCTION_89	IF_6
0xf117	    0xc70005000000	                      mov dword [rax], 5	     11349	option.c	FUNCTION_89	IF_6
0xf11d	      0x488345f003	               add qword [rbp - 0x10], 3	     11350	option.c	FUNCTION_89	IF_6
0xf122	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11352	option.c	FUNCTION_89
0xf126	        0x488945c0	             mov qword [rbp - 0x40], rax	     11352	option.c	FUNCTION_89
0xf12a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11352	option.c	FUNCTION_89
0xf12e	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	     11352	option.c	FUNCTION_89
0xf132	        0x48895008	                mov qword [rax + 8], rdx	     11352	option.c	FUNCTION_89
0xf136	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11353	option.c	FUNCTION_89	IF_7
0xf13a	           0xfb600	                   movzx eax, byte [rax]	     11353	option.c	FUNCTION_89	IF_7
0xf13d	            0x3c3c	                            cmp al, 0x3c	     11353	option.c	FUNCTION_89	IF_7
0xf13f	     0xf8583000000	                           jne 0x400f208	     11353	option.c	FUNCTION_89	IF_7
0xf145	            0xeb17	                           jmp 0x400f19e	     11355	option.c	FUNCTION_89	IF_7	WHILE_3
0xf147	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11356	option.c	FUNCTION_89	IF_7	WHILE_3	IF_8
0xf14b	        0x488d5001	                      lea rdx, [rax + 1]	     11356	option.c	FUNCTION_89	IF_7	WHILE_3	IF_8
0xf14f	        0x488955f0	             mov qword [rbp - 0x10], rdx	     11356	option.c	FUNCTION_89	IF_7	WHILE_3	IF_8
0xf153	           0xfb600	                   movzx eax, byte [rax]	     11356	option.c	FUNCTION_89	IF_7	WHILE_3	IF_8
0xf156	            0x84c0	                             test al, al	     11356	option.c	FUNCTION_89	IF_7	WHILE_3	IF_8
0xf158	     0xf84aa040000	                            je 0x400f648	     11356	option.c	FUNCTION_89	IF_7	WHILE_3	IF_8
0xf15e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11355	option.c	FUNCTION_89	IF_7	WHILE_3
0xf162	           0xfb600	                   movzx eax, byte [rax]	     11355	option.c	FUNCTION_89	IF_7	WHILE_3
0xf165	            0x3c3e	                            cmp al, 0x3e	     11355	option.c	FUNCTION_89	IF_7	WHILE_3
0xf167	            0x75de	                           jne 0x400f187	     11355	option.c	FUNCTION_89	IF_7	WHILE_3
0xf169	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11358	option.c	FUNCTION_89	IF_7	CALL_5
0xf16d	        0x4883c001	                              add rax, 1	     11358	option.c	FUNCTION_89	IF_7	CALL_5
0xf171	          0x4889c7	                            mov rdi, rax	     11358	option.c	FUNCTION_89	IF_7	CALL_5
0xf174	      0xe800000000	                          call 0x400f1b9	     11358	option.c	FUNCTION_89	IF_7	CALL_5
0xf179	          0x8945e4	             mov dword [rbp - 0x1c], eax	     11358	option.c	FUNCTION_89	IF_7	CALL_5
0xf17c	        0x837de400	               cmp dword [rbp - 0x1c], 0	     11359	option.c	FUNCTION_89	IF_7	IF_9
0xf180	            0x750f	                           jne 0x400f1d1	     11359	option.c	FUNCTION_89	IF_7	IF_9
0xf182	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11361	option.c	FUNCTION_89	IF_7	IF_9
0xf186	    0xc70000000000	                      mov dword [rax], 0	     11361	option.c	FUNCTION_89	IF_7	IF_9
0xf18c	      0xe981040000	                           jmp 0x400f652	     11362	option.c	FUNCTION_89	IF_7	IF_9
0xf191	      0x488345f001	               add qword [rbp - 0x10], 1	     11364	option.c	FUNCTION_89	IF_7
0xf196	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11364	option.c	FUNCTION_89	IF_7
0xf19a	           0xfb600	                   movzx eax, byte [rax]	     11364	option.c	FUNCTION_89	IF_7
0xf19d	           0xfb6c0	                           movzx eax, al	     11364	option.c	FUNCTION_89	IF_7
0xf1a0	          0x8945d8	             mov dword [rbp - 0x28], eax	     11364	option.c	FUNCTION_89	IF_7
0xf1a3	    0xc745e0010000	               mov dword [rbp - 0x20], 1	     11365	option.c	FUNCTION_89	IF_7
0xf1aa	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	     11366	option.c	FUNCTION_89	IF_7	CALL_6
0xf1ad	            0xf7d8	                                 neg eax	     11366	option.c	FUNCTION_89	IF_7	CALL_6
0xf1af	    0x880500000000	               mov byte [0x0400f1f5], al	     11366	option.c	FUNCTION_89	IF_7	CALL_6
0xf1b5	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	     11367	option.c	FUNCTION_89	IF_7	CALL_7
0xf1b8	            0xf7d8	                                 neg eax	     11367	option.c	FUNCTION_89	IF_7	CALL_7
0xf1ba	          0xc1e808	                              shr eax, 8	     11367	option.c	FUNCTION_89	IF_7	CALL_7
0xf1bd	    0x880500000000	               mov byte [0x0400f203], al	     11367	option.c	FUNCTION_89	IF_7	CALL_7
0xf1c3	      0xe963010000	                           jmp 0x400f36b	     11367	option.c	FUNCTION_89	IF_7	CALL_7
0xf1c8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11371	option.c	FUNCTION_89	ELSE_1	IF_10
0xf1cc	           0xfb600	                   movzx eax, byte [rax]	     11371	option.c	FUNCTION_89	ELSE_1	IF_10
0xf1cf	            0x3c74	                            cmp al, 0x74	     11371	option.c	FUNCTION_89	ELSE_1	IF_10
0xf1d1	            0x7572	                           jne 0x400f285	     11371	option.c	FUNCTION_89	ELSE_1	IF_10
0xf1d3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11371	option.c	FUNCTION_89	ELSE_1	IF_10
0xf1d7	        0x4883c001	                              add rax, 1	     11371	option.c	FUNCTION_89	ELSE_1	IF_10
0xf1db	           0xfb600	                   movzx eax, byte [rax]	     11371	option.c	FUNCTION_89	ELSE_1	IF_10
0xf1de	            0x3c5f	                            cmp al, 0x5f	     11371	option.c	FUNCTION_89	ELSE_1	IF_10
0xf1e0	            0x7563	                           jne 0x400f285	     11371	option.c	FUNCTION_89	ELSE_1	IF_10
0xf1e2	      0x488345f002	               add qword [rbp - 0x10], 2	     11373	option.c	FUNCTION_89	ELSE_1	IF_10
0xf1e7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11374	option.c	FUNCTION_89	ELSE_1	IF_10	IF_11
0xf1eb	           0xfb600	                   movzx eax, byte [rax]	     11374	option.c	FUNCTION_89	ELSE_1	IF_10	IF_11
0xf1ee	            0x84c0	                             test al, al	     11374	option.c	FUNCTION_89	ELSE_1	IF_10	IF_11
0xf1f0	            0x7405	                            je 0x400f237	     11374	option.c	FUNCTION_89	ELSE_1	IF_10	IF_11
0xf1f2	      0x488345f001	               add qword [rbp - 0x10], 1	     11375	option.c	FUNCTION_89	ELSE_1	IF_10	IF_11
0xf1f7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11376	option.c	FUNCTION_89	ELSE_1	IF_10	IF_12
0xf1fb	           0xfb600	                   movzx eax, byte [rax]	     11376	option.c	FUNCTION_89	ELSE_1	IF_10	IF_12
0xf1fe	            0x84c0	                             test al, al	     11376	option.c	FUNCTION_89	ELSE_1	IF_10	IF_12
0xf200	     0xf8405040000	                            je 0x400f64b	     11376	option.c	FUNCTION_89	ELSE_1	IF_10	IF_12
0xf206	      0x488345f001	               add qword [rbp - 0x10], 1	     11378	option.c	FUNCTION_89	ELSE_1	IF_10
0xf20b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11378	option.c	FUNCTION_89	ELSE_1	IF_10
0xf20f	           0xfb600	                   movzx eax, byte [rax]	     11378	option.c	FUNCTION_89	ELSE_1	IF_10
0xf212	           0xfb6c0	                           movzx eax, al	     11378	option.c	FUNCTION_89	ELSE_1	IF_10
0xf215	          0x8945d8	             mov dword [rbp - 0x28], eax	     11378	option.c	FUNCTION_89	ELSE_1	IF_10
0xf218	    0xc745e0010000	               mov dword [rbp - 0x20], 1	     11379	option.c	FUNCTION_89	ELSE_1	IF_10
0xf21f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11380	option.c	FUNCTION_89	ELSE_1	IF_10
0xf223	         0xfb640fe	               movzx eax, byte [rax - 2]	     11380	option.c	FUNCTION_89	ELSE_1	IF_10
0xf227	    0x880500000000	               mov byte [0x0400f26d], al	     11380	option.c	FUNCTION_89	ELSE_1	IF_10
0xf22d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11381	option.c	FUNCTION_89	ELSE_1	IF_10
0xf231	         0xfb640ff	               movzx eax, byte [rax - 1]	     11381	option.c	FUNCTION_89	ELSE_1	IF_10
0xf235	    0x880500000000	               mov byte [0x0400f27b], al	     11381	option.c	FUNCTION_89	ELSE_1	IF_10
0xf23b	      0xe9eb000000	                           jmp 0x400f36b	     11381	option.c	FUNCTION_89	ELSE_1	IF_10
0xf240	      0x488345f001	               add qword [rbp - 0x10], 1	     11387	option.c	FUNCTION_89	ELSE_1	ELSE_2	WHILE_4
0xf245	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11386	option.c	FUNCTION_89	ELSE_1	ELSE_2	WHILE_4	CALL_8
0xf249	           0xfb600	                   movzx eax, byte [rax]	     11386	option.c	FUNCTION_89	ELSE_1	ELSE_2	WHILE_4	CALL_8
0xf24c	           0xfb6c0	                           movzx eax, al	     11386	option.c	FUNCTION_89	ELSE_1	ELSE_2	WHILE_4	CALL_8
0xf24f	          0x83e841	                           sub eax, 0x41	     11386	option.c	FUNCTION_89	ELSE_1	ELSE_2	WHILE_4	CALL_8
0xf252	          0x83f819	                           cmp eax, 0x19	     11386	option.c	FUNCTION_89	ELSE_1	ELSE_2	WHILE_4	CALL_8
0xf255	            0x76e9	                           jbe 0x400f280	     11386	option.c	FUNCTION_89	ELSE_1	ELSE_2	WHILE_4	CALL_8
0xf257	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11386	option.c	FUNCTION_89	ELSE_1	ELSE_2	WHILE_4	CALL_8
0xf25b	           0xfb600	                   movzx eax, byte [rax]	     11386	option.c	FUNCTION_89	ELSE_1	ELSE_2	WHILE_4	CALL_8
0xf25e	           0xfb6c0	                           movzx eax, al	     11386	option.c	FUNCTION_89	ELSE_1	ELSE_2	WHILE_4	CALL_8
0xf261	          0x83e861	                           sub eax, 0x61	     11386	option.c	FUNCTION_89	ELSE_1	ELSE_2	WHILE_4	CALL_8
0xf264	          0x83f819	                           cmp eax, 0x19	     11386	option.c	FUNCTION_89	ELSE_1	ELSE_2	WHILE_4	CALL_8
0xf267	            0x76d7	                           jbe 0x400f280	     11386	option.c	FUNCTION_89	ELSE_1	ELSE_2	WHILE_4	CALL_8
0xf269	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11386	option.c	FUNCTION_89	ELSE_1	ELSE_2	WHILE_4	CALL_8
0xf26d	           0xfb600	                   movzx eax, byte [rax]	     11386	option.c	FUNCTION_89	ELSE_1	ELSE_2	WHILE_4	CALL_8
0xf270	           0xfb6c0	                           movzx eax, al	     11386	option.c	FUNCTION_89	ELSE_1	ELSE_2	WHILE_4	CALL_8
0xf273	          0x83e830	                           sub eax, 0x30	     11386	option.c	FUNCTION_89	ELSE_1	ELSE_2	WHILE_4	CALL_8
0xf276	          0x83f809	                              cmp eax, 9	     11386	option.c	FUNCTION_89	ELSE_1	ELSE_2	WHILE_4	CALL_8
0xf279	            0x76c5	                           jbe 0x400f280	     11386	option.c	FUNCTION_89	ELSE_1	ELSE_2	WHILE_4	CALL_8
0xf27b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11386	option.c	FUNCTION_89	ELSE_1	ELSE_2	WHILE_4	CALL_8
0xf27f	           0xfb600	                   movzx eax, byte [rax]	     11386	option.c	FUNCTION_89	ELSE_1	ELSE_2	WHILE_4	CALL_8
0xf282	            0x3c5f	                            cmp al, 0x5f	     11386	option.c	FUNCTION_89	ELSE_1	ELSE_2	WHILE_4	CALL_8
0xf284	            0x74ba	                            je 0x400f280	     11386	option.c	FUNCTION_89	ELSE_1	ELSE_2	WHILE_4	CALL_8
0xf286	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11386	option.c	FUNCTION_89	ELSE_1	ELSE_2	WHILE_4	CALL_8
0xf28a	           0xfb600	                   movzx eax, byte [rax]	     11386	option.c	FUNCTION_89	ELSE_1	ELSE_2	WHILE_4	CALL_8
0xf28d	            0x3c2a	                            cmp al, 0x2a	     11386	option.c	FUNCTION_89	ELSE_1	ELSE_2	WHILE_4	CALL_8
0xf28f	            0x74af	                            je 0x400f280	     11386	option.c	FUNCTION_89	ELSE_1	ELSE_2	WHILE_4	CALL_8
0xf291	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11388	option.c	FUNCTION_89	ELSE_1	ELSE_2	IF_13
0xf295	           0xfb600	                   movzx eax, byte [rax]	     11388	option.c	FUNCTION_89	ELSE_1	ELSE_2	IF_13
0xf298	            0x84c0	                             test al, al	     11388	option.c	FUNCTION_89	ELSE_1	ELSE_2	IF_13
0xf29a	     0xf846e030000	                            je 0x400f64e	     11388	option.c	FUNCTION_89	ELSE_1	ELSE_2	IF_13
0xf2a0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11390	option.c	FUNCTION_89	ELSE_1	ELSE_2
0xf2a4	           0xfb600	                   movzx eax, byte [rax]	     11390	option.c	FUNCTION_89	ELSE_1	ELSE_2
0xf2a7	           0xfb6c0	                           movzx eax, al	     11390	option.c	FUNCTION_89	ELSE_1	ELSE_2
0xf2aa	          0x8945d8	             mov dword [rbp - 0x28], eax	     11390	option.c	FUNCTION_89	ELSE_1	ELSE_2
0xf2ad	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11391	option.c	FUNCTION_89	ELSE_1	ELSE_2
0xf2b1	          0xc60000	                       mov byte [rax], 0	     11391	option.c	FUNCTION_89	ELSE_1	ELSE_2
0xf2b4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11392	option.c	FUNCTION_89	ELSE_1	ELSE_2	CALL_9
0xf2b8	          0x4889c7	                            mov rdi, rax	     11392	option.c	FUNCTION_89	ELSE_1	ELSE_2	CALL_9
0xf2bb	      0xe8c6baffff	                     call sym.findoption	     11392	option.c	FUNCTION_89	ELSE_1	ELSE_2	CALL_9
0xf2c0	          0x8945dc	             mov dword [rbp - 0x24], eax	     11392	option.c	FUNCTION_89	ELSE_1	ELSE_2	CALL_9
0xf2c3	          0x8b45d8	             mov eax, dword [rbp - 0x28]	     11393	option.c	FUNCTION_89	ELSE_1	ELSE_2
0xf2c6	            0x89c2	                            mov edx, eax	     11393	option.c	FUNCTION_89	ELSE_1	ELSE_2
0xf2c8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11393	option.c	FUNCTION_89	ELSE_1	ELSE_2
0xf2cc	            0x8810	                      mov byte [rax], dl	     11393	option.c	FUNCTION_89	ELSE_1	ELSE_2
0xf2ce	        0x837ddcff	cmp dword [rbp - 0x24], 0xffffffffffffffff	     11394	option.c	FUNCTION_89	ELSE_1	ELSE_2	IF_14
0xf2d2	            0x7417	                            je 0x400f32b	     11394	option.c	FUNCTION_89	ELSE_1	ELSE_2	IF_14
0xf2d4	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     11394	option.c	FUNCTION_89	ELSE_1	ELSE_2	IF_14
0xf2d7	            0x4898	                                    cdqe	     11394	option.c	FUNCTION_89	ELSE_1	ELSE_2	IF_14
0xf2d9	        0x48c1e006	                              shl rax, 6	     11394	option.c	FUNCTION_89	ELSE_1	ELSE_2	IF_14
0xf2dd	    0x480500000000	                              add rax, 0	     11394	option.c	FUNCTION_89	ELSE_1	ELSE_2	IF_14
0xf2e3	          0x488b00	                    mov rax, qword [rax]	     11394	option.c	FUNCTION_89	ELSE_1	ELSE_2	IF_14
0xf2e6	          0x4885c0	                           test rax, rax	     11394	option.c	FUNCTION_89	ELSE_1	ELSE_2	IF_14
0xf2e9	            0x750f	                           jne 0x400f33a	     11394	option.c	FUNCTION_89	ELSE_1	ELSE_2	IF_14
0xf2eb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11396	option.c	FUNCTION_89	ELSE_1	ELSE_2	IF_14
0xf2ef	    0xc70000000000	                      mov dword [rax], 0	     11396	option.c	FUNCTION_89	ELSE_1	ELSE_2	IF_14
0xf2f5	      0xe918030000	                           jmp 0x400f652	     11397	option.c	FUNCTION_89	ELSE_1	ELSE_2	IF_14
0xf2fa	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     11399	option.c	FUNCTION_89	ELSE_1	ELSE_2
0xf2fd	            0x4898	                                    cdqe	     11399	option.c	FUNCTION_89	ELSE_1	ELSE_2
0xf2ff	        0x48c1e006	                              shl rax, 6	     11399	option.c	FUNCTION_89	ELSE_1	ELSE_2
0xf303	    0x480500000000	                              add rax, 0	     11399	option.c	FUNCTION_89	ELSE_1	ELSE_2
0xf309	          0x488b00	                    mov rax, qword [rax]	     11399	option.c	FUNCTION_89	ELSE_1	ELSE_2
0xf30c	        0x488945e8	             mov qword [rbp - 0x18], rax	     11399	option.c	FUNCTION_89	ELSE_1	ELSE_2
0xf310	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11400	option.c	FUNCTION_89	ELSE_1	ELSE_2	IF_15
0xf314	          0x83e001	                              and eax, 1	     11400	option.c	FUNCTION_89	ELSE_1	ELSE_2	IF_15
0xf317	          0x4885c0	                           test rax, rax	     11400	option.c	FUNCTION_89	ELSE_1	ELSE_2	IF_15
0xf31a	            0x740f	                            je 0x400f36b	     11400	option.c	FUNCTION_89	ELSE_1	ELSE_2	IF_15
0xf31c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11402	option.c	FUNCTION_89	ELSE_1	ELSE_2	IF_15
0xf320	    0xc70000000000	                      mov dword [rax], 0	     11402	option.c	FUNCTION_89	ELSE_1	ELSE_2	IF_15
0xf326	      0xe9e7020000	                           jmp 0x400f652	     11403	option.c	FUNCTION_89	ELSE_1	ELSE_2	IF_15
0xf32b	        0x837dd82d	           cmp dword [rbp - 0x28], 0x2d 	     11408	option.c	FUNCTION_89	IF_16
0xf32f	            0x740c	                            je 0x400f37d	     11408	option.c	FUNCTION_89	IF_16
0xf331	        0x837dd82b	           cmp dword [rbp - 0x28], 0x2b 	     11408	option.c	FUNCTION_89	IF_16
0xf335	            0x7406	                            je 0x400f37d	     11408	option.c	FUNCTION_89	IF_16
0xf337	        0x837dd85e	           cmp dword [rbp - 0x28], 0x5e 	     11408	option.c	FUNCTION_89	IF_16
0xf33b	            0x751b	                           jne 0x400f398	     11408	option.c	FUNCTION_89	IF_16
0xf33d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11408	option.c	FUNCTION_89	IF_16
0xf341	        0x4883c001	                              add rax, 1	     11408	option.c	FUNCTION_89	IF_16
0xf345	           0xfb600	                   movzx eax, byte [rax]	     11408	option.c	FUNCTION_89	IF_16
0xf348	            0x3c3d	                            cmp al, 0x3d	     11408	option.c	FUNCTION_89	IF_16
0xf34a	            0x750c	                           jne 0x400f398	     11408	option.c	FUNCTION_89	IF_16
0xf34c	      0x488345f001	               add qword [rbp - 0x10], 1	     11410	option.c	FUNCTION_89	IF_16
0xf351	    0xc745d83d0000	           mov dword [rbp - 0x28], 0x3d 	     11411	option.c	FUNCTION_89	IF_16
0xf358	        0x837dd83d	           cmp dword [rbp - 0x28], 0x3d 	     11413	option.c	FUNCTION_89	IF_17
0xf35c	            0x7406	                            je 0x400f3a4	     11413	option.c	FUNCTION_89	IF_17
0xf35e	        0x837dd83a	           cmp dword [rbp - 0x28], 0x3a 	     11413	option.c	FUNCTION_89	IF_17
0xf362	            0x750b	                           jne 0x400f3af	     11413	option.c	FUNCTION_89	IF_17
0xf364	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11414	option.c	FUNCTION_89	IF_17
0xf368	            0x8b00	                    mov eax, dword [rax]	     11414	option.c	FUNCTION_89	IF_17
0xf36a	          0x83f805	                              cmp eax, 5	     11414	option.c	FUNCTION_89	IF_17
0xf36d	            0x750f	                           jne 0x400f3be	     11414	option.c	FUNCTION_89	IF_17
0xf36f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11416	option.c	FUNCTION_89	IF_17
0xf373	    0xc700feffffff	            mov dword [rax], 0xfffffffe 	     11416	option.c	FUNCTION_89	IF_17
0xf379	      0xe994020000	                           jmp 0x400f652	     11417	option.c	FUNCTION_89	IF_17
0xf37e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11419	option.c	FUNCTION_89	IF_18
0xf382	            0x8b00	                    mov eax, dword [rax]	     11419	option.c	FUNCTION_89	IF_18
0xf384	          0x83f805	                              cmp eax, 5	     11419	option.c	FUNCTION_89	IF_18
0xf387	            0x7449	                            je 0x400f412	     11419	option.c	FUNCTION_89	IF_18
0xf389	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11419	option.c	FUNCTION_89	IF_18
0xf38d	        0x4883c001	                              add rax, 1	     11419	option.c	FUNCTION_89	IF_18
0xf391	           0xfb600	                   movzx eax, byte [rax]	     11419	option.c	FUNCTION_89	IF_18
0xf394	            0x84c0	                             test al, al	     11419	option.c	FUNCTION_89	IF_18
0xf396	            0x753a	                           jne 0x400f412	     11419	option.c	FUNCTION_89	IF_18
0xf398	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11421	option.c	FUNCTION_89	IF_18
0xf39c	    0xc70007000000	                      mov dword [rax], 7	     11421	option.c	FUNCTION_89	IF_18
0xf3a2	        0x837de000	               cmp dword [rbp - 0x20], 0	     11422	option.c	FUNCTION_89	IF_18	IF_19
0xf3a6	            0x740c	                            je 0x400f3f4	     11422	option.c	FUNCTION_89	IF_18	IF_19
0xf3a8	    0xc70500000000	     mov dword [0x0400f3f2], 0xffffffff 	     11423	option.c	FUNCTION_89	IF_18	IF_19
0xf3b2	            0xeb09	                           jmp 0x400f3fd	     11423	option.c	FUNCTION_89	IF_18	IF_19
0xf3b4	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     11425	option.c	FUNCTION_89	IF_18	ELSE_3
0xf3b7	    0x890500000000	            mov dword [0x0400f3fd], eax 	     11425	option.c	FUNCTION_89	IF_18	ELSE_3
0xf3bd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11426	option.c	FUNCTION_89	IF_18
0xf3c1	        0x488d5001	                      lea rdx, [rax + 1]	     11426	option.c	FUNCTION_89	IF_18
0xf3c5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11426	option.c	FUNCTION_89	IF_18
0xf3c9	        0x48895008	                mov qword [rax + 8], rdx	     11426	option.c	FUNCTION_89	IF_18
0xf3cd	      0xe940020000	                           jmp 0x400f652	     11427	option.c	FUNCTION_89	IF_18
0xf3d2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11429	option.c	FUNCTION_89
0xf3d6	    0xc70000000000	                      mov dword [rax], 0	     11429	option.c	FUNCTION_89
0xf3dc	        0x837de000	               cmp dword [rbp - 0x20], 0	     11430	option.c	FUNCTION_89	IF_20
0xf3e0	     0xf852b020000	                           jne 0x400f651	     11430	option.c	FUNCTION_89	IF_20
0xf3e6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11430	option.c	FUNCTION_89	IF_20
0xf3ea	          0x83e002	                              and eax, 2	     11430	option.c	FUNCTION_89	IF_20
0xf3ed	          0x4885c0	                           test rax, rax	     11430	option.c	FUNCTION_89	IF_20
0xf3f0	     0xf851b020000	                           jne 0x400f651	     11430	option.c	FUNCTION_89	IF_20
0xf3f6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11433	option.c	FUNCTION_89
0xf3fa	        0x488d5001	                      lea rdx, [rax + 1]	     11433	option.c	FUNCTION_89
0xf3fe	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11433	option.c	FUNCTION_89
0xf402	        0x48895008	                mov qword [rax + 8], rdx	     11433	option.c	FUNCTION_89
0xf406	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11435	option.c	FUNCTION_89	IF_21
0xf40a	          0x83e010	                           and eax, 0x10	     11435	option.c	FUNCTION_89	IF_21
0xf40d	          0x4885c0	                           test rax, rax	     11435	option.c	FUNCTION_89	IF_21
0xf410	     0xf84c0000000	                            je 0x400f516	     11435	option.c	FUNCTION_89	IF_21
0xf416	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     11437	option.c	FUNCTION_89	IF_21
0xf419	            0x4898	                                    cdqe	     11437	option.c	FUNCTION_89	IF_21
0xf41b	        0x48c1e006	                              shl rax, 6	     11437	option.c	FUNCTION_89	IF_21
0xf41f	    0x480500000000	                              add rax, 0	     11437	option.c	FUNCTION_89	IF_21
0xf425	          0x488b00	                    mov rax, qword [rax]	     11437	option.c	FUNCTION_89	IF_21
0xf428	        0x488945f0	             mov qword [rbp - 0x10], rax	     11437	option.c	FUNCTION_89	IF_21
0xf42c	    0x48817df00000	               cmp qword [rbp - 0x10], 0	     11438	option.c	FUNCTION_89	IF_21	IF_22
0xf434	            0x743c	                            je 0x400f4b2	     11438	option.c	FUNCTION_89	IF_21	IF_22
0xf436	    0x48817df00000	               cmp qword [rbp - 0x10], 0	     11439	option.c	FUNCTION_89	IF_21	IF_22
0xf43e	            0x7432	                            je 0x400f4b2	     11439	option.c	FUNCTION_89	IF_21	IF_22
0xf440	    0x48817df00000	               cmp qword [rbp - 0x10], 0	     11440	option.c	FUNCTION_89	IF_21	IF_22
0xf448	            0x7428	                            je 0x400f4b2	     11440	option.c	FUNCTION_89	IF_21	IF_22
0xf44a	    0x48817df00000	               cmp qword [rbp - 0x10], 0	     11441	option.c	FUNCTION_89	IF_21	IF_22
0xf452	            0x741e	                            je 0x400f4b2	     11441	option.c	FUNCTION_89	IF_21	IF_22
0xf454	    0x48817df00000	               cmp qword [rbp - 0x10], 0	     11442	option.c	FUNCTION_89	IF_21	IF_22
0xf45c	            0x7414	                            je 0x400f4b2	     11442	option.c	FUNCTION_89	IF_21	IF_22
0xf45e	    0x48817df00000	               cmp qword [rbp - 0x10], 0	     11444	option.c	FUNCTION_89	IF_21	IF_22
0xf466	            0x740a	                            je 0x400f4b2	     11444	option.c	FUNCTION_89	IF_21	IF_22
0xf468	    0x48817df00000	               cmp qword [rbp - 0x10], 0	     11447	option.c	FUNCTION_89	IF_21	IF_22
0xf470	            0x7538	                           jne 0x400f4ea	     11447	option.c	FUNCTION_89	IF_21	IF_22
0xf472	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11451	option.c	FUNCTION_89	IF_21	IF_22
0xf476	    0xc70003000000	                      mov dword [rax], 3	     11451	option.c	FUNCTION_89	IF_21	IF_22
0xf47c	    0x48817df00000	               cmp qword [rbp - 0x10], 0	     11452	option.c	FUNCTION_89	IF_21	IF_22	IF_23
0xf484	            0x740a	                            je 0x400f4d0	     11452	option.c	FUNCTION_89	IF_21	IF_22	IF_23
0xf486	    0x48817df00000	               cmp qword [rbp - 0x10], 0	     11454	option.c	FUNCTION_89	IF_21	IF_22	IF_23
0xf48e	            0x750d	                           jne 0x400f4dd	     11454	option.c	FUNCTION_89	IF_21	IF_22	IF_23
0xf490	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11457	option.c	FUNCTION_89	IF_21	IF_22	IF_23
0xf494	    0xc74024020000	               mov dword [rax + 0x24], 2	     11457	option.c	FUNCTION_89	IF_21	IF_22	IF_23
0xf49b	            0xeb39	                           jmp 0x400f516	     11452	option.c	FUNCTION_89	IF_21	IF_22	IF_23
0xf49d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11459	option.c	FUNCTION_89	IF_21	IF_22	ELSE_4
0xf4a1	    0xc74024010000	               mov dword [rax + 0x24], 1	     11459	option.c	FUNCTION_89	IF_21	IF_22	ELSE_4
0xf4a8	            0xeb2c	                           jmp 0x400f516	     11452	option.c	FUNCTION_89	IF_21	IF_22	IF_23
0xf4aa	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11463	option.c	FUNCTION_89	IF_21	ELSE_5
0xf4ae	    0xc70002000000	                      mov dword [rax], 2	     11463	option.c	FUNCTION_89	IF_21	ELSE_5
0xf4b4	    0x48817df00000	               cmp qword [rbp - 0x10], 0	     11465	option.c	FUNCTION_89	IF_21	ELSE_5	IF_24
0xf4bc	            0x750d	                           jne 0x400f50b	     11465	option.c	FUNCTION_89	IF_21	ELSE_5	IF_24
0xf4be	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11466	option.c	FUNCTION_89	IF_21	ELSE_5	IF_24
0xf4c2	    0xc74024020000	               mov dword [rax + 0x24], 2	     11466	option.c	FUNCTION_89	IF_21	ELSE_5	IF_24
0xf4c9	            0xeb0b	                           jmp 0x400f516	     11466	option.c	FUNCTION_89	IF_21	ELSE_5	IF_24
0xf4cb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11468	option.c	FUNCTION_89	IF_21	ELSE_5	ELSE_6
0xf4cf	    0xc74024010000	               mov dword [rax + 0x24], 1	     11468	option.c	FUNCTION_89	IF_21	ELSE_5	ELSE_6
0xf4d6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11474	option.c	FUNCTION_89	ELSE_6	FOR_1	CALL_10
0xf4da	          0x4889c7	                            mov rdi, rax	     11474	option.c	FUNCTION_89	ELSE_6	FOR_1	CALL_10
0xf4dd	      0xe800000000	                          call 0x400f522	     11474	option.c	FUNCTION_89	ELSE_6	FOR_1	CALL_10
0xf4e2	        0x488d50ff	                      lea rdx, [rax - 1]	     11474	option.c	FUNCTION_89	ELSE_6	FOR_1	CALL_10
0xf4e6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	     11474	option.c	FUNCTION_89	ELSE_6	FOR_1	CALL_10
0xf4ea	          0x4801d0	                            add rax, rdx	     11474	option.c	FUNCTION_89	ELSE_6	FOR_1	CALL_10
0xf4ed	        0x488945f0	             mov qword [rbp - 0x10], rax	     11474	option.c	FUNCTION_89	ELSE_6	FOR_1	CALL_10
0xf4f1	      0xe9fd000000	                           jmp 0x400f633	     11474	option.c	FUNCTION_89	ELSE_6	FOR_1	CALL_10
0xf4f6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11477	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25
0xf4fa	           0xfb600	                   movzx eax, byte [rax]	     11477	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25
0xf4fd	            0x3c20	                            cmp al, 0x20	     11477	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25
0xf4ff	            0x740f	                            je 0x400f550	     11477	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25
0xf501	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11477	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25
0xf505	           0xfb600	                   movzx eax, byte [rax]	     11477	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25
0xf508	            0x3c2c	                            cmp al, 0x2c	     11477	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25
0xf50a	     0xf8598000000	                           jne 0x400f5e8	     11477	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25
0xf510	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11479	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25
0xf514	        0x488945f8	                mov qword [rbp - 8], rax	     11479	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25
0xf518	            0xeb05	                           jmp 0x400f55f	     11480	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25	WHILE_5
0xf51a	      0x48836df801	                  sub qword [rbp - 8], 1	     11481	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25	WHILE_5
0xf51f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11480	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25	WHILE_5
0xf523	        0x488b4008	                mov rax, qword [rax + 8]	     11480	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25	WHILE_5
0xf527	        0x483b45f8	                cmp rax, qword [rbp - 8]	     11480	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25	WHILE_5
0xf52b	            0x730f	                           jae 0x400f57c	     11480	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25	WHILE_5
0xf52d	        0x488b45f8	                mov rax, qword [rbp - 8]	     11480	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25	WHILE_5
0xf531	        0x4883e801	                              sub rax, 1	     11480	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25	WHILE_5
0xf535	           0xfb600	                   movzx eax, byte [rax]	     11480	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25	WHILE_5
0xf538	            0x3c5c	                            cmp al, 0x5c	     11480	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25	WHILE_5
0xf53a	            0x74de	                            je 0x400f55a	     11480	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25	WHILE_5
0xf53c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11482	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25	IF_26
0xf540	           0xfb600	                   movzx eax, byte [rax]	     11482	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25	IF_26
0xf543	            0x3c20	                            cmp al, 0x20	     11482	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25	IF_26
0xf545	            0x7520	                           jne 0x400f5a7	     11482	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25	IF_26
0xf547	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11482	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25	IF_26
0xf54b	          0x8b4024	            mov eax, dword [rax + 0x24] 	     11482	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25	IF_26
0xf54e	          0x83f802	                              cmp eax, 2	     11482	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25	IF_26
0xf551	            0x7514	                           jne 0x400f5a7	     11482	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25	IF_26
0xf553	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	     11482	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25	IF_26
0xf557	        0x488b45f8	                mov rax, qword [rbp - 8]	     11482	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25	IF_26
0xf55b	          0x4829c2	                            sub rdx, rax	     11482	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25	IF_26
0xf55e	          0x4889d0	                            mov rax, rdx	     11482	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25	IF_26
0xf561	        0x4883f802	                              cmp rax, 2	     11482	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25	IF_26
0xf565	            0x7e2f	                           jle 0x400f5d6	     11482	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25	IF_26
0xf567	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11483	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25	IF_26
0xf56b	           0xfb600	                   movzx eax, byte [rax]	     11483	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25	IF_26
0xf56e	            0x3c2c	                            cmp al, 0x2c	     11483	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25	IF_26
0xf570	            0x7536	                           jne 0x400f5e8	     11483	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25	IF_26
0xf572	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11483	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25	IF_26
0xf576	      0x2500800000	                         and eax, 0x8000	     11483	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25	IF_26
0xf57b	          0x4885c0	                           test rax, rax	     11483	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25	IF_26
0xf57e	            0x7428	                            je 0x400f5e8	     11483	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25	IF_26
0xf580	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	     11483	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25	IF_26
0xf584	        0x488b45f8	                mov rax, qword [rbp - 8]	     11483	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25	IF_26
0xf588	          0x4829c2	                            sub rdx, rax	     11483	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25	IF_26
0xf58b	          0x4889d0	                            mov rax, rdx	     11483	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25	IF_26
0xf58e	          0x83e001	                              and eax, 1	     11483	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25	IF_26
0xf591	          0x4885c0	                           test rax, rax	     11483	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25	IF_26
0xf594	            0x7512	                           jne 0x400f5e8	     11483	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25	IF_26
0xf596	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11485	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25	IF_26
0xf59a	        0x488d5001	                      lea rdx, [rax + 1]	     11485	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25	IF_26
0xf59e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11485	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25	IF_26
0xf5a2	        0x48895008	                mov qword [rax + 8], rdx	     11485	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25	IF_26
0xf5a6	            0xeb5d	                           jmp 0x400f645	     11486	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_25	IF_26
0xf5a8	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     11492	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_27
0xf5ab	            0x4898	                                    cdqe	     11492	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_27
0xf5ad	        0x48c1e006	                              shl rax, 6	     11492	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_27
0xf5b1	    0x480500000000	                              add rax, 0	     11492	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_27
0xf5b7	          0x488b00	                    mov rax, qword [rax]	     11492	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_27
0xf5ba	    0x483d00000000	                              cmp rax, 0	     11492	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_27
0xf5c0	            0x752c	                           jne 0x400f62e	     11492	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_27
0xf5c2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11493	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_27	CALL_11
0xf5c6	      0xba05000000	                              mov edx, 5	     11493	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_27	CALL_11
0xf5cb	      0xbe00000000	                              mov esi, 0	     11493	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_27	CALL_11
0xf5d0	          0x4889c7	                            mov rdi, rax	     11493	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_27	CALL_11
0xf5d3	      0xe800000000	                          call 0x400f618	     11493	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_27	CALL_11
0xf5d8	            0x85c0	                           test eax, eax	     11493	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_27	CALL_11
0xf5da	            0x7512	                           jne 0x400f62e	     11493	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_27	CALL_11
0xf5dc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11495	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_27
0xf5e0	        0x488d5005	                      lea rdx, [rax + 5]	     11495	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_27
0xf5e4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11495	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_27
0xf5e8	        0x48895008	                mov qword [rax + 8], rdx	     11495	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_27
0xf5ec	            0xeb17	                           jmp 0x400f645	     11496	option.c	FUNCTION_89	ELSE_6	FOR_1	IF_27
0xf5ee	      0x48836df001	               sub qword [rbp - 0x10], 1	     11474	option.c	FUNCTION_89	ELSE_6	FOR_1	CALL_10
0xf5f3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     11474	option.c	FUNCTION_89	ELSE_6	FOR_1	CALL_10
0xf5f7	        0x488b4008	                mov rax, qword [rax + 8]	     11474	option.c	FUNCTION_89	ELSE_6	FOR_1	CALL_10
0xf5fb	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	     11474	option.c	FUNCTION_89	ELSE_6	FOR_1	CALL_10
0xf5ff	     0xf82f1feffff	                            jb 0x400f536	     11474	option.c	FUNCTION_89	ELSE_6	FOR_1	CALL_10
0xf605	              0x90	                                     nop	     11501	option.c	FUNCTION_89
0xf606	            0xeb0a	                           jmp 0x400f652	     11501	option.c	FUNCTION_89
0xf608	              0x90	                                     nop	     11357	option.c	FUNCTION_89	IF_7	WHILE_3	IF_8
0xf609	            0xeb07	                           jmp 0x400f652	     11357	option.c	FUNCTION_89	IF_7	WHILE_3	IF_8
0xf60b	              0x90	                                     nop	     11377	option.c	FUNCTION_89	ELSE_1	IF_10	IF_12
0xf60c	            0xeb04	                           jmp 0x400f652	     11377	option.c	FUNCTION_89	ELSE_1	IF_10	IF_12
0xf60e	              0x90	                                     nop	     11389	option.c	FUNCTION_89	ELSE_1	ELSE_2	IF_13
0xf60f	            0xeb01	                           jmp 0x400f652	     11389	option.c	FUNCTION_89	ELSE_1	ELSE_2	IF_13
0xf611	              0x90	                                     nop	     11431	option.c	FUNCTION_89	IF_20
0xf612	              0xc9	                                   leave	     11502	option.c	FUNCTION_89
0xf613	              0xc3	                                     ret	     11502	option.c	FUNCTION_89
vimrc_found	WHILE,0:SWITCH,0:CALL,10:FOR,1:ELSE,1:DO,0:IF,6:functions,0	79
0x107a3	              0x55	                                push rbp	     12160	option.c	FUNCTION_101
0x107a4	          0x4889e5	                            mov rbp, rsp	     12160	option.c	FUNCTION_101
0x107a7	        0x4883ec30	                           sub rsp, 0x30	     12160	option.c	FUNCTION_101
0x107ab	        0x48897dd8	             mov qword [rbp - 0x28], rdi	     12160	option.c	FUNCTION_101
0x107af	        0x488975d0	             mov qword [rbp - 0x30], rsi	     12160	option.c	FUNCTION_101
0x107b3	    0x64488b042528	                mov rax, qword fs:[0x28]	     12160	option.c	FUNCTION_101
0x107bc	        0x488945f8	                mov qword [rbp - 8], rax	     12160	option.c	FUNCTION_101
0x107c0	            0x31c0	                            xor eax, eax	     12160	option.c	FUNCTION_101
0x107c2	    0xc745e8000000	               mov dword [rbp - 0x18], 0	     12162	option.c	FUNCTION_101
0x107c9	      0xbf00000000	                              mov edi, 0	     12165	option.c	FUNCTION_101	IF_1	CALL_1
0x107ce	      0xe800000000	                          call 0x4010813	     12165	option.c	FUNCTION_101	IF_1	CALL_1
0x107d3	            0x85c0	                           test eax, eax	     12165	option.c	FUNCTION_101	IF_1	CALL_1
0x107d5	            0x756c	                           jne 0x4010883	     12165	option.c	FUNCTION_101	IF_1	CALL_1
0x107d7	    0xc70500000000	               mov dword [0x04010821], 0	     12167	option.c	FUNCTION_101	IF_1
0x107e1	    0xc745ec000000	               mov dword [rbp - 0x14], 0	     12168	option.c	FUNCTION_101	IF_1	FOR_1	CALL_2
0x107e8	            0xeb34	                           jmp 0x401085e	     12168	option.c	FUNCTION_101	IF_1	FOR_1	CALL_2
0x107ea	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     12169	option.c	FUNCTION_101	IF_1	FOR_1	IF_2
0x107ed	            0x4898	                                    cdqe	     12169	option.c	FUNCTION_101	IF_1	FOR_1	IF_2
0x107ef	        0x48c1e006	                              shl rax, 6	     12169	option.c	FUNCTION_101	IF_1	FOR_1	IF_2
0x107f3	    0x480500000000	                              add rax, 0	     12169	option.c	FUNCTION_101	IF_1	FOR_1	IF_2
0x107f9	          0x488b00	                    mov rax, qword [rax]	     12169	option.c	FUNCTION_101	IF_1	FOR_1	IF_2
0x107fc	      0x2500050000	                          and eax, 0x500	     12169	option.c	FUNCTION_101	IF_1	FOR_1	IF_2
0x10801	          0x4885c0	                           test rax, rax	     12169	option.c	FUNCTION_101	IF_1	FOR_1	IF_2
0x10804	            0x7514	                           jne 0x401085a	     12169	option.c	FUNCTION_101	IF_1	FOR_1	IF_2
0x10806	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     12170	option.c	FUNCTION_101	IF_1	FOR_1	IF_2
0x10809	      0xba00000000	                              mov edx, 0	     12170	option.c	FUNCTION_101	IF_1	FOR_1	IF_2
0x1080e	      0xbe01000000	                              mov esi, 1	     12170	option.c	FUNCTION_101	IF_1	FOR_1	IF_2
0x10813	            0x89c7	                            mov edi, eax	     12170	option.c	FUNCTION_101	IF_1	FOR_1	IF_2
0x10815	      0xe8f5fefeff	             call sym.set_option_default	     12170	option.c	FUNCTION_101	IF_1	FOR_1	IF_2
0x1081a	        0x8345ec01	               add dword [rbp - 0x14], 1	     12168	option.c	FUNCTION_101	IF_1	FOR_1	CALL_2
0x1081e	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     12168	option.c	FUNCTION_101	IF_1	FOR_1	CALL_2
0x10821	            0x4898	                                    cdqe	     12168	option.c	FUNCTION_101	IF_1	FOR_1	CALL_2
0x10823	        0x48c1e006	                              shl rax, 6	     12168	option.c	FUNCTION_101	IF_1	FOR_1	CALL_2
0x10827	    0x480500000000	                              add rax, 0	     12168	option.c	FUNCTION_101	IF_1	FOR_1	CALL_2
0x1082d	          0x4889c7	                            mov rdi, rax	     12168	option.c	FUNCTION_101	IF_1	FOR_1	CALL_2
0x10830	      0xe80fbdffff	                   call sym.istermoption	     12168	option.c	FUNCTION_101	IF_1	FOR_1	CALL_2
0x10835	            0x85c0	                           test eax, eax	     12168	option.c	FUNCTION_101	IF_1	FOR_1	CALL_2
0x10837	            0x74b1	                            je 0x401082a	     12168	option.c	FUNCTION_101	IF_1	FOR_1	CALL_2
0x10839	      0xe8f236ffff	                 call sym.didset_options	     12171	option.c	FUNCTION_101	IF_1	CALL_4
0x1083e	      0xe86538ffff	                call sym.didset_options2	     12172	option.c	FUNCTION_101	IF_1	CALL_5
0x10843	      0x48837dd800	               cmp qword [rbp - 0x28], 0	     12175	option.c	FUNCTION_101	IF_3
0x10848	            0x746e	                            je 0x40108f8	     12175	option.c	FUNCTION_101	IF_3
0x1084a	        0x488d55e8	                   lea rdx, [rbp - 0x18]	     12177	option.c	FUNCTION_101	IF_3	CALL_6
0x1084e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     12177	option.c	FUNCTION_101	IF_3	CALL_6
0x10852	          0x4889d6	                            mov rsi, rdx	     12177	option.c	FUNCTION_101	IF_3	CALL_6
0x10855	          0x4889c7	                            mov rdi, rax	     12177	option.c	FUNCTION_101	IF_3	CALL_6
0x10858	      0xe800000000	                          call 0x401089d	     12177	option.c	FUNCTION_101	IF_3	CALL_6
0x1085d	        0x488945f0	             mov qword [rbp - 0x10], rax	     12177	option.c	FUNCTION_101	IF_3	CALL_6
0x10861	      0x48837df000	               cmp qword [rbp - 0x10], 0	     12178	option.c	FUNCTION_101	IF_3	IF_4
0x10866	            0x753d	                           jne 0x40108e5	     12178	option.c	FUNCTION_101	IF_3	IF_4
0x10868	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     12181	option.c	FUNCTION_101	IF_3	IF_4	CALL_7
0x1086c	      0xbe00000000	                              mov esi, 0	     12181	option.c	FUNCTION_101	IF_3	IF_4	CALL_7
0x10871	          0x4889c7	                            mov rdi, rax	     12181	option.c	FUNCTION_101	IF_3	IF_4	CALL_7
0x10874	      0xe800000000	                          call 0x40108b9	     12181	option.c	FUNCTION_101	IF_3	IF_4	CALL_7
0x10879	        0x488945f0	             mov qword [rbp - 0x10], rax	     12181	option.c	FUNCTION_101	IF_3	IF_4	CALL_7
0x1087d	      0x48837df000	               cmp qword [rbp - 0x10], 0	     12182	option.c	FUNCTION_101	IF_3	IF_4	IF_5
0x10882	            0x7434	                            je 0x40108f8	     12182	option.c	FUNCTION_101	IF_3	IF_4	IF_5
0x10884	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	     12184	option.c	FUNCTION_101	IF_3	IF_4	IF_5	CALL_8
0x10888	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     12184	option.c	FUNCTION_101	IF_3	IF_4	IF_5	CALL_8
0x1088c	          0x4889d6	                            mov rsi, rdx	     12184	option.c	FUNCTION_101	IF_3	IF_4	IF_5	CALL_8
0x1088f	          0x4889c7	                            mov rdi, rax	     12184	option.c	FUNCTION_101	IF_3	IF_4	IF_5	CALL_8
0x10892	      0xe800000000	                          call 0x40108d7	     12184	option.c	FUNCTION_101	IF_3	IF_4	IF_5	CALL_8
0x10897	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     12185	option.c	FUNCTION_101	IF_3	IF_4	IF_5	CALL_9
0x1089b	          0x4889c7	                            mov rdi, rax	     12185	option.c	FUNCTION_101	IF_3	IF_4	IF_5	CALL_9
0x1089e	      0xe800000000	                          call 0x40108e3	     12185	option.c	FUNCTION_101	IF_3	IF_4	IF_5	CALL_9
0x108a3	            0xeb13	                           jmp 0x40108f8	     12191	option.c	FUNCTION_101
0x108a5	          0x8b45e8	             mov eax, dword [rbp - 0x18]	     12188	option.c	FUNCTION_101	IF_3	ELSE_1	IF_6
0x108a8	            0x85c0	                           test eax, eax	     12188	option.c	FUNCTION_101	IF_3	ELSE_1	IF_6
0x108aa	            0x740c	                            je 0x40108f8	     12188	option.c	FUNCTION_101	IF_3	ELSE_1	IF_6
0x108ac	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     12189	option.c	FUNCTION_101	IF_3	ELSE_1	IF_6
0x108b0	          0x4889c7	                            mov rdi, rax	     12189	option.c	FUNCTION_101	IF_3	ELSE_1	IF_6
0x108b3	      0xe800000000	                          call 0x40108f8	     12189	option.c	FUNCTION_101	IF_3	ELSE_1	IF_6
0x108b8	              0x90	                                     nop	     12191	option.c	FUNCTION_101
0x108b9	        0x488b45f8	                mov rax, qword [rbp - 8]	     12191	option.c	FUNCTION_101
0x108bd	    0x644833042528	                xor rax, qword fs:[0x28]	     12191	option.c	FUNCTION_101
0x108c6	            0x7405	                            je 0x401090d	     12191	option.c	FUNCTION_101
0x108c8	      0xe800000000	                          call 0x401090d	     12191	option.c	FUNCTION_101
0x108cd	              0xc9	                                   leave	     12191	option.c	FUNCTION_101
0x108ce	              0xc3	                                     ret	     12191	option.c	FUNCTION_101
get_highlight_default	WHILE,0:SWITCH,0:CALL,1:FOR,0:ELSE,0:DO,0:IF,1:functions,0	17
0xb4cc	              0x55	                                push rbp	      9750	option.c	FUNCTION_59
0xb4cd	          0x4889e5	                            mov rbp, rsp	      9750	option.c	FUNCTION_59
0xb4d0	        0x4883ec10	                           sub rsp, 0x10	      9750	option.c	FUNCTION_59
0xb4d4	      0xbf00000000	                              mov edi, 0	      9753	option.c	FUNCTION_59	CALL_1
0xb4d9	      0xe8a8f8ffff	                     call sym.findoption	      9753	option.c	FUNCTION_59	CALL_1
0xb4de	          0x8945fc	                mov dword [rbp - 4], eax	      9753	option.c	FUNCTION_59	CALL_1
0xb4e1	        0x837dfc00	                  cmp dword [rbp - 4], 0	      9754	option.c	FUNCTION_59	IF_1
0xb4e5	            0x7814	                            js 0x400b53b	      9754	option.c	FUNCTION_59	IF_1
0xb4e7	          0x8b45fc	                mov eax, dword [rbp - 4]	      9755	option.c	FUNCTION_59	IF_1
0xb4ea	            0x4898	                                    cdqe	      9755	option.c	FUNCTION_59	IF_1
0xb4ec	        0x48c1e006	                              shl rax, 6	      9755	option.c	FUNCTION_59	IF_1
0xb4f0	    0x480500000000	                              add rax, 0	      9755	option.c	FUNCTION_59	IF_1
0xb4f6	          0x488b00	                    mov rax, qword [rax]	      9755	option.c	FUNCTION_59	IF_1
0xb4f9	            0xeb05	                           jmp 0x400b540	      9755	option.c	FUNCTION_59	IF_1
0xb4fb	      0xb800000000	                              mov eax, 0	      9756	option.c	FUNCTION_59
0xb500	              0xc9	                                   leave	      9757	option.c	FUNCTION_59
0xb501	              0xc3	                                     ret	      9757	option.c	FUNCTION_59
term_bg_default	WHILE,0:SWITCH,0:CALL,6:FOR,0:ELSE,0:DO,0:IF,1:functions,0	66
0xd20	              0x55	                                push rbp	      3976	option.c	FUNCTION_9
0xd21	          0x4889e5	                            mov rbp, rsp	      3976	option.c	FUNCTION_9
0xd24	        0x4883ec10	                           sub rsp, 0x10	      3976	option.c	FUNCTION_9
0xd28	    0x488b05000000	            mov rax, qword [0x04000d6f] 	      3983	option.c	FUNCTION_9	IF_1	CALL_1
0xd2f	      0xbe00000000	                              mov esi, 0	      3983	option.c	FUNCTION_9	IF_1	CALL_1
0xd34	          0x4889c7	                            mov rdi, rax	      3983	option.c	FUNCTION_9	IF_1	CALL_1
0xd37	      0xe800000000	                          call 0x4000d7c	      3983	option.c	FUNCTION_9	IF_1	CALL_1
0xd3c	            0x85c0	                           test eax, eax	      3983	option.c	FUNCTION_9	IF_1	CALL_1
0xd3e	     0xf84c7000000	                            je 0x4000e4b	      3983	option.c	FUNCTION_9	IF_1	CALL_1
0xd44	    0x488b05000000	            mov rax, qword [0x04000d8b] 	      3984	option.c	FUNCTION_9	IF_1	CALL_2
0xd4b	      0xbe00000000	                              mov esi, 0	      3984	option.c	FUNCTION_9	IF_1	CALL_2
0xd50	          0x4889c7	                            mov rdi, rax	      3984	option.c	FUNCTION_9	IF_1	CALL_2
0xd53	      0xe800000000	                          call 0x4000d98	      3984	option.c	FUNCTION_9	IF_1	CALL_2
0xd58	            0x85c0	                           test eax, eax	      3984	option.c	FUNCTION_9	IF_1	CALL_2
0xd5a	     0xf84ab000000	                            je 0x4000e4b	      3984	option.c	FUNCTION_9	IF_1	CALL_2
0xd60	    0x488b05000000	            mov rax, qword [0x04000da7] 	      3985	option.c	FUNCTION_9	IF_1	CALL_3
0xd67	      0xba06000000	                              mov edx, 6	      3985	option.c	FUNCTION_9	IF_1	CALL_3
0xd6c	      0xbe00000000	                              mov esi, 0	      3985	option.c	FUNCTION_9	IF_1	CALL_3
0xd71	          0x4889c7	                            mov rdi, rax	      3985	option.c	FUNCTION_9	IF_1	CALL_3
0xd74	      0xe800000000	                          call 0x4000db9	      3985	option.c	FUNCTION_9	IF_1	CALL_3
0xd79	            0x85c0	                           test eax, eax	      3985	option.c	FUNCTION_9	IF_1	CALL_3
0xd7b	     0xf848a000000	                            je 0x4000e4b	      3985	option.c	FUNCTION_9	IF_1	CALL_3
0xd81	    0x488b05000000	            mov rax, qword [0x04000dc8] 	      3986	option.c	FUNCTION_9	IF_1	CALL_4
0xd88	      0xba05000000	                              mov edx, 5	      3986	option.c	FUNCTION_9	IF_1	CALL_4
0xd8d	      0xbe00000000	                              mov esi, 0	      3986	option.c	FUNCTION_9	IF_1	CALL_4
0xd92	          0x4889c7	                            mov rdi, rax	      3986	option.c	FUNCTION_9	IF_1	CALL_4
0xd95	      0xe800000000	                          call 0x4000dda	      3986	option.c	FUNCTION_9	IF_1	CALL_4
0xd9a	            0x85c0	                           test eax, eax	      3986	option.c	FUNCTION_9	IF_1	CALL_4
0xd9c	            0x746d	                            je 0x4000e4b	      3986	option.c	FUNCTION_9	IF_1	CALL_4
0xd9e	      0xbf00000000	                              mov edi, 0	      3987	option.c	FUNCTION_9	IF_1	CALL_5
0xda3	      0xe800000000	                          call 0x4000de8	      3987	option.c	FUNCTION_9	IF_1	CALL_5
0xda8	        0x488945f8	                mov qword [rbp - 8], rax	      3987	option.c	FUNCTION_9	IF_1	CALL_5
0xdac	      0x48837df800	                  cmp qword [rbp - 8], 0	      3987	option.c	FUNCTION_9	IF_1	CALL_5
0xdb1	            0x745f	                            je 0x4000e52	      3987	option.c	FUNCTION_9	IF_1	CALL_5
0xdb3	        0x488b45f8	                mov rax, qword [rbp - 8]	      3988	option.c	FUNCTION_9	IF_1	CALL_6
0xdb7	      0xbe3b000000	                           mov esi, 0x3b	      3988	option.c	FUNCTION_9	IF_1	CALL_6
0xdbc	          0x4889c7	                            mov rdi, rax	      3988	option.c	FUNCTION_9	IF_1	CALL_6
0xdbf	      0xe800000000	                          call 0x4000e04	      3988	option.c	FUNCTION_9	IF_1	CALL_6
0xdc4	        0x488945f8	                mov qword [rbp - 8], rax	      3988	option.c	FUNCTION_9	IF_1	CALL_6
0xdc8	      0x48837df800	                  cmp qword [rbp - 8], 0	      3988	option.c	FUNCTION_9	IF_1	CALL_6
0xdcd	            0x7443	                            je 0x4000e52	      3988	option.c	FUNCTION_9	IF_1	CALL_6
0xdcf	        0x488b45f8	                mov rax, qword [rbp - 8]	      3989	option.c	FUNCTION_9	IF_1
0xdd3	        0x4883c001	                              add rax, 1	      3989	option.c	FUNCTION_9	IF_1
0xdd7	           0xfb600	                   movzx eax, byte [rax]	      3989	option.c	FUNCTION_9	IF_1
0xdda	            0x3c2f	                            cmp al, 0x2f	      3989	option.c	FUNCTION_9	IF_1
0xddc	            0x760f	                           jbe 0x4000e2d	      3989	option.c	FUNCTION_9	IF_1
0xdde	        0x488b45f8	                mov rax, qword [rbp - 8]	      3989	option.c	FUNCTION_9	IF_1
0xde2	        0x4883c001	                              add rax, 1	      3989	option.c	FUNCTION_9	IF_1
0xde6	           0xfb600	                   movzx eax, byte [rax]	      3989	option.c	FUNCTION_9	IF_1
0xde9	            0x3c36	                            cmp al, 0x36	      3989	option.c	FUNCTION_9	IF_1
0xdeb	            0x760f	                           jbe 0x4000e3c	      3989	option.c	FUNCTION_9	IF_1
0xded	        0x488b45f8	                mov rax, qword [rbp - 8]	      3989	option.c	FUNCTION_9	IF_1
0xdf1	        0x4883c001	                              add rax, 1	      3989	option.c	FUNCTION_9	IF_1
0xdf5	           0xfb600	                   movzx eax, byte [rax]	      3989	option.c	FUNCTION_9	IF_1
0xdf8	            0x3c38	                            cmp al, 0x38	      3989	option.c	FUNCTION_9	IF_1
0xdfa	            0x7516	                           jne 0x4000e52	      3989	option.c	FUNCTION_9	IF_1
0xdfc	        0x488b45f8	                mov rax, qword [rbp - 8]	      3990	option.c	FUNCTION_9	IF_1
0xe00	        0x4883c002	                              add rax, 2	      3990	option.c	FUNCTION_9	IF_1
0xe04	           0xfb600	                   movzx eax, byte [rax]	      3990	option.c	FUNCTION_9	IF_1
0xe07	            0x84c0	                             test al, al	      3990	option.c	FUNCTION_9	IF_1
0xe09	            0x7507	                           jne 0x4000e52	      3990	option.c	FUNCTION_9	IF_1
0xe0b	      0xb800000000	                              mov eax, 0	      3991	option.c	FUNCTION_9	IF_1
0xe10	            0xeb05	                           jmp 0x4000e57	      3991	option.c	FUNCTION_9	IF_1
0xe12	      0xb800000000	                              mov eax, 0	      3992	option.c	FUNCTION_9
0xe17	              0xc9	                                   leave	      3994	option.c	FUNCTION_9
0xe18	              0xc3	                                     ret	      3994	option.c	FUNCTION_9
showoptions	WHILE,0:SWITCH,0:CALL,21:FOR,4:ELSE,6:DO,0:IF,12:functions,0	213
0xb610	              0x55	                                push rbp	      9807	option.c	FUNCTION_62
0xb611	          0x4889e5	                            mov rbp, rsp	      9807	option.c	FUNCTION_62
0xb614	              0x53	                                push rbx	      9807	option.c	FUNCTION_62
0xb615	        0x4883ec58	                           sub rsp, 0x58	      9807	option.c	FUNCTION_62
0xb619	          0x897dac	             mov dword [rbp - 0x54], edi	      9807	option.c	FUNCTION_62
0xb61c	          0x8975a8	             mov dword [rbp - 0x58], esi	      9807	option.c	FUNCTION_62
0xb61f	      0xbf000f0000	                          mov edi, 0xf00	      9823	option.c	FUNCTION_62	CALL_1
0xb624	      0xe800000000	                          call 0x400b669	      9823	option.c	FUNCTION_62	CALL_1
0xb629	        0x488945e8	             mov qword [rbp - 0x18], rax	      9823	option.c	FUNCTION_62	CALL_1
0xb62d	      0x48837de800	               cmp qword [rbp - 0x18], 0	      9825	option.c	FUNCTION_62	IF_1
0xb632	     0xf84d5020000	                            je 0x400b94d	      9825	option.c	FUNCTION_62	IF_1
0xb638	        0x837dac02	               cmp dword [rbp - 0x54], 2	      9829	option.c	FUNCTION_62	IF_2
0xb63c	            0x7514	                           jne 0x400b692	      9829	option.c	FUNCTION_62	IF_2
0xb63e	      0xbf00000000	                              mov edi, 0	      9830	option.c	FUNCTION_62	CALL_3
0xb643	      0xe800000000	                          call 0x400b688	      9830	option.c	FUNCTION_62	CALL_3
0xb648	          0x4889c7	                            mov rdi, rax	      9830	option.c	FUNCTION_62	CALL_3
0xb64b	      0xe800000000	                          call 0x400b690	      9830	option.c	FUNCTION_62	CALL_3
0xb650	            0xeb4e	                           jmp 0x400b6e0	      9830	option.c	FUNCTION_62	CALL_3
0xb652	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      9831	option.c	FUNCTION_62	ELSE_1	IF_3
0xb655	          0x83e002	                              and eax, 2	      9831	option.c	FUNCTION_62	ELSE_1	IF_3
0xb658	            0x85c0	                           test eax, eax	      9831	option.c	FUNCTION_62	ELSE_1	IF_3
0xb65a	            0x7414	                            je 0x400b6b0	      9831	option.c	FUNCTION_62	ELSE_1	IF_3
0xb65c	      0xbf00000000	                              mov edi, 0	      9832	option.c	FUNCTION_62	ELSE_1	IF_3
0xb661	      0xe800000000	                          call 0x400b6a6	      9832	option.c	FUNCTION_62	ELSE_1	IF_3
0xb666	          0x4889c7	                            mov rdi, rax	      9832	option.c	FUNCTION_62	ELSE_1	IF_3
0xb669	      0xe800000000	                          call 0x400b6ae	      9832	option.c	FUNCTION_62	ELSE_1	IF_3
0xb66e	            0xeb30	                           jmp 0x400b6e0	      9832	option.c	FUNCTION_62	ELSE_1	IF_3
0xb670	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      9833	option.c	FUNCTION_62	ELSE_2	IF_4
0xb673	          0x83e004	                              and eax, 4	      9833	option.c	FUNCTION_62	ELSE_2	IF_4
0xb676	            0x85c0	                           test eax, eax	      9833	option.c	FUNCTION_62	ELSE_2	IF_4
0xb678	            0x7414	                            je 0x400b6ce	      9833	option.c	FUNCTION_62	ELSE_2	IF_4
0xb67a	      0xbf00000000	                              mov edi, 0	      9834	option.c	FUNCTION_62	ELSE_2	IF_4
0xb67f	      0xe800000000	                          call 0x400b6c4	      9834	option.c	FUNCTION_62	ELSE_2	IF_4
0xb684	          0x4889c7	                            mov rdi, rax	      9834	option.c	FUNCTION_62	ELSE_2	IF_4
0xb687	      0xe800000000	                          call 0x400b6cc	      9834	option.c	FUNCTION_62	ELSE_2	IF_4
0xb68c	            0xeb12	                           jmp 0x400b6e0	      9834	option.c	FUNCTION_62	ELSE_2	IF_4
0xb68e	      0xbf00000000	                              mov edi, 0	      9836	option.c	FUNCTION_62	CALL_9
0xb693	      0xe800000000	                          call 0x400b6d8	      9836	option.c	FUNCTION_62	CALL_9
0xb698	          0x4889c7	                            mov rdi, rax	      9836	option.c	FUNCTION_62	CALL_9
0xb69b	      0xe800000000	                          call 0x400b6e0	      9836	option.c	FUNCTION_62	CALL_9
0xb6a0	    0xc745bc010000	               mov dword [rbp - 0x44], 1	      9843	option.c	FUNCTION_62	FOR_1
0xb6a7	      0xe93f020000	                           jmp 0x400b92b	      9843	option.c	FUNCTION_62	FOR_1
0xb6ac	    0xc745b8000000	               mov dword [rbp - 0x48], 0	      9848	option.c	FUNCTION_62	FOR_1
0xb6b3	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      9849	option.c	FUNCTION_62	FOR_1	FOR_2
0xb6bb	      0xe92d010000	                           jmp 0x400b82d	      9849	option.c	FUNCTION_62	FOR_1	FOR_2
0xb6c0	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      9851	option.c	FUNCTION_62	FOR_1	FOR_2
0xb6c8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9852	option.c	FUNCTION_62	FOR_1	FOR_2	CALL_10
0xb6cc	          0x4889c7	                            mov rdi, rax	      9852	option.c	FUNCTION_62	FOR_1	FOR_2	CALL_10
0xb6cf	      0xe8700e0000	                   call sym.istermoption	      9852	option.c	FUNCTION_62	FOR_1	FOR_2	CALL_10
0xb6d4	          0x8945d4	             mov dword [rbp - 0x2c], eax	      9852	option.c	FUNCTION_62	FOR_1	FOR_2	CALL_10
0xb6d7	        0x837da800	               cmp dword [rbp - 0x58], 0	      9853	option.c	FUNCTION_62	FOR_1	FOR_2	IF_5
0xb6db	            0x7428	                            je 0x400b745	      9853	option.c	FUNCTION_62	FOR_1	FOR_2	IF_5
0xb6dd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9855	option.c	FUNCTION_62	FOR_1	FOR_2	IF_5	IF_6
0xb6e1	          0x8b4020	            mov eax, dword [rax + 0x20] 	      9855	option.c	FUNCTION_62	FOR_1	FOR_2	IF_5	IF_6
0xb6e4	            0x85c0	                           test eax, eax	      9855	option.c	FUNCTION_62	FOR_1	FOR_2	IF_5	IF_6
0xb6e6	            0x742d	                            je 0x400b755	      9855	option.c	FUNCTION_62	FOR_1	FOR_2	IF_5	IF_6
0xb6e8	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      9855	option.c	FUNCTION_62	FOR_1	FOR_2	IF_5	IF_6
0xb6ec	            0x7527	                           jne 0x400b755	      9855	option.c	FUNCTION_62	FOR_1	FOR_2	IF_5	IF_6
0xb6ee	          0x8b55a8	             mov edx, dword [rbp - 0x58]	      9856	option.c	FUNCTION_62	FOR_1	FOR_2	IF_5	CALL_11
0xb6f1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9856	option.c	FUNCTION_62	FOR_1	FOR_2	IF_5	CALL_11
0xb6f5	            0x89d6	                            mov esi, edx	      9856	option.c	FUNCTION_62	FOR_1	FOR_2	IF_5	CALL_11
0xb6f7	          0x4889c7	                            mov rdi, rax	      9856	option.c	FUNCTION_62	FOR_1	FOR_2	IF_5	CALL_11
0xb6fa	      0xe80a130000	                 call sym.get_varp_scope	      9856	option.c	FUNCTION_62	FOR_1	FOR_2	IF_5	CALL_11
0xb6ff	        0x488945e0	             mov qword [rbp - 0x20], rax	      9856	option.c	FUNCTION_62	FOR_1	FOR_2	IF_5	CALL_11
0xb703	            0xeb10	                           jmp 0x400b755	      9856	option.c	FUNCTION_62	FOR_1	FOR_2	IF_5	CALL_11
0xb705	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9859	option.c	FUNCTION_62	FOR_1	FOR_2	CALL_12
0xb709	          0x4889c7	                            mov rdi, rax	      9859	option.c	FUNCTION_62	FOR_1	FOR_2	CALL_12
0xb70c	      0xe82e160000	                       call sym.get_varp	      9859	option.c	FUNCTION_62	FOR_1	FOR_2	CALL_12
0xb711	        0x488945e0	             mov qword [rbp - 0x20], rax	      9859	option.c	FUNCTION_62	FOR_1	FOR_2	CALL_12
0xb715	      0x48837de000	               cmp qword [rbp - 0x20], 0	      9860	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7
0xb71a	     0xf84c8000000	                            je 0x400b828	      9860	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7
0xb720	        0x837dac02	               cmp dword [rbp - 0x54], 2	      9861	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7
0xb724	            0x7506	                           jne 0x400b76c	      9861	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7
0xb726	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      9861	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7
0xb72a	            0x7531	                           jne 0x400b79d	      9861	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7
0xb72c	        0x837dac01	               cmp dword [rbp - 0x54], 1	      9862	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7
0xb730	            0x7506	                           jne 0x400b778	      9862	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7
0xb732	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      9862	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7
0xb736	            0x7425	                            je 0x400b79d	      9862	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7
0xb738	        0x837dac00	               cmp dword [rbp - 0x54], 0	      9863	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7	CALL_13
0xb73c	     0xf85a6000000	                           jne 0x400b828	      9863	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7	CALL_13
0xb742	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      9863	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7	CALL_13
0xb746	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9863	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7	CALL_13
0xb74a	          0x4889d6	                            mov rsi, rdx	      9863	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7	CALL_13
0xb74d	          0x4889c7	                            mov rdi, rax	      9863	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7	CALL_13
0xb750	      0xe8c0010000	                 call sym.optval_default	      9863	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7	CALL_13
0xb755	            0x85c0	                           test eax, eax	      9863	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7	CALL_13
0xb757	     0xf858b000000	                           jne 0x400b828	      9863	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7	CALL_13
0xb75d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9865	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7	IF_8
0xb761	        0x488b4010	            mov rax, qword [rax + 0x10] 	      9865	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7	IF_8
0xb765	          0x83e001	                              and eax, 1	      9865	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7	IF_8
0xb768	          0x4885c0	                           test rax, rax	      9865	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7	IF_8
0xb76b	            0x7409	                            je 0x400b7b6	      9865	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7	IF_8
0xb76d	    0xc745d0010000	               mov dword [rbp - 0x30], 1	      9866	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7	IF_8
0xb774	            0xeb39	                           jmp 0x400b7ef	      9866	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7	IF_8
0xb776	          0x8b55a8	             mov edx, dword [rbp - 0x58]	      9869	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7	ELSE_5	CALL_14
0xb779	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9869	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7	ELSE_5	CALL_14
0xb77d	            0x89d6	                            mov esi, edx	      9869	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7	ELSE_5	CALL_14
0xb77f	          0x4889c7	                            mov rdi, rax	      9869	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7	ELSE_5	CALL_14
0xb782	      0xe856450000	            call sym.option_value2string	      9869	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7	ELSE_5	CALL_14
0xb787	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9870	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0xb78b	          0x488b00	                    mov rax, qword [rax]	      9870	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0xb78e	          0x4889c7	                            mov rdi, rax	      9870	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0xb791	      0xe800000000	                          call 0x400b7d6	      9870	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0xb796	            0x89c3	                            mov ebx, eax	      9870	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0xb798	    0x488b05000000	            mov rax, qword [0x0400b7df] 	      9870	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0xb79f	          0x4889c7	                            mov rdi, rax	      9870	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0xb7a2	      0xe800000000	                          call 0x400b7e7	      9870	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0xb7a7	             0x1d8	                            add eax, ebx	      9870	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0xb7a9	          0x83c001	                              add eax, 1	      9870	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0xb7ac	          0x8945d0	             mov dword [rbp - 0x30], eax	      9870	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0xb7af	        0x837dd011	           cmp dword [rbp - 0x30], 0x11 	      9872	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7	IF_9
0xb7b3	            0x7f06	                            jg 0x400b7fb	      9872	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7	IF_9
0xb7b5	        0x837dbc01	               cmp dword [rbp - 0x44], 1	      9872	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7	IF_9
0xb7b9	            0x740c	                            je 0x400b807	      9872	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7	IF_9
0xb7bb	        0x837dd011	           cmp dword [rbp - 0x30], 0x11 	      9872	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7	IF_9
0xb7bf	            0x7e27	                           jle 0x400b828	      9872	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7	IF_9
0xb7c1	        0x837dbc02	               cmp dword [rbp - 0x44], 2	      9873	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7	IF_9
0xb7c5	            0x7521	                           jne 0x400b828	      9873	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7	IF_9
0xb7c7	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      9874	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7	IF_9
0xb7ca	          0x8d5001	                      lea edx, [rax + 1]	      9874	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7	IF_9
0xb7cd	          0x8955b8	             mov dword [rbp - 0x48], edx	      9874	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7	IF_9
0xb7d0	            0x4898	                                    cdqe	      9874	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7	IF_9
0xb7d2	    0x488d14c50000	                        lea rdx, [rax*8]	      9874	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7	IF_9
0xb7da	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9874	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7	IF_9
0xb7de	          0x4801c2	                            add rdx, rax	      9874	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7	IF_9
0xb7e1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9874	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7	IF_9
0xb7e5	          0x488902	                    mov qword [rdx], rax	      9874	option.c	FUNCTION_62	FOR_1	FOR_2	IF_7	IF_9
0xb7e8	      0x488345d840	           add qword [rbp - 0x28], 0x40 	      9849	option.c	FUNCTION_62	FOR_1	FOR_2
0xb7ed	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9849	option.c	FUNCTION_62	FOR_1	FOR_2
0xb7f1	          0x488b00	                    mov rax, qword [rax]	      9849	option.c	FUNCTION_62	FOR_1	FOR_2
0xb7f4	          0x4885c0	                           test rax, rax	      9849	option.c	FUNCTION_62	FOR_1	FOR_2
0xb7f7	     0xf85c3feffff	                           jne 0x400b700	      9849	option.c	FUNCTION_62	FOR_1	FOR_2
0xb7fd	        0x837dbc01	               cmp dword [rbp - 0x44], 1	      9881	option.c	FUNCTION_62	FOR_1	IF_10
0xb801	            0x754c	                           jne 0x400b88f	      9881	option.c	FUNCTION_62	FOR_1	IF_10
0xb803	    0x488b0d000000	            mov rcx, qword [0x0400b84a] 	      9883	option.c	FUNCTION_62	FOR_1	IF_10
0xb80a	    0x48ba67666666	          movabs rdx, 0x6666666666666667	      9883	option.c	FUNCTION_62	FOR_1	IF_10
0xb814	          0x4889c8	                            mov rax, rcx	      9883	option.c	FUNCTION_62	FOR_1	IF_10
0xb817	          0x48f7ea	                                imul rdx	      9883	option.c	FUNCTION_62	FOR_1	IF_10
0xb81a	        0x48c1fa03	                              sar rdx, 3	      9883	option.c	FUNCTION_62	FOR_1	IF_10
0xb81e	          0x4889c8	                            mov rax, rcx	      9883	option.c	FUNCTION_62	FOR_1	IF_10
0xb821	        0x48c1f83f	                           sar rax, 0x3f	      9883	option.c	FUNCTION_62	FOR_1	IF_10
0xb825	          0x4829c2	                            sub rdx, rax	      9883	option.c	FUNCTION_62	FOR_1	IF_10
0xb828	          0x4889d0	                            mov rax, rdx	      9883	option.c	FUNCTION_62	FOR_1	IF_10
0xb82b	          0x8945c8	             mov dword [rbp - 0x38], eax	      9883	option.c	FUNCTION_62	FOR_1	IF_10
0xb82e	        0x837dc800	               cmp dword [rbp - 0x38], 0	      9884	option.c	FUNCTION_62	FOR_1	IF_10	IF_11
0xb832	            0x7507	                           jne 0x400b87b	      9884	option.c	FUNCTION_62	FOR_1	IF_10	IF_11
0xb834	    0xc745c8010000	               mov dword [rbp - 0x38], 1	      9885	option.c	FUNCTION_62	FOR_1	IF_10	IF_11
0xb83b	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      9886	option.c	FUNCTION_62	FOR_1	IF_10
0xb83e	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      9886	option.c	FUNCTION_62	FOR_1	IF_10
0xb841	             0x1d0	                            add eax, edx	      9886	option.c	FUNCTION_62	FOR_1	IF_10
0xb843	          0x83e801	                              sub eax, 1	      9886	option.c	FUNCTION_62	FOR_1	IF_10
0xb846	              0x99	                                     cdq	      9886	option.c	FUNCTION_62	FOR_1	IF_10
0xb847	          0xf77dc8	                 idiv dword [rbp - 0x38]	      9886	option.c	FUNCTION_62	FOR_1	IF_10
0xb84a	          0x8945c4	             mov dword [rbp - 0x3c], eax	      9886	option.c	FUNCTION_62	FOR_1	IF_10
0xb84d	            0xeb06	                           jmp 0x400b895	      9886	option.c	FUNCTION_62	FOR_1	IF_10
0xb84f	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      9889	option.c	FUNCTION_62	FOR_1	ELSE_6
0xb852	          0x8945c4	             mov dword [rbp - 0x3c], eax	      9889	option.c	FUNCTION_62	FOR_1	ELSE_6
0xb855	    0xc745c0000000	               mov dword [rbp - 0x40], 0	      9890	option.c	FUNCTION_62	FOR_1	ELSE_6	FOR_3
0xb85c	            0xeb70	                           jmp 0x400b90e	      9890	option.c	FUNCTION_62	FOR_1	ELSE_6	FOR_3
0xb85e	      0xbf0a000000	                            mov edi, 0xa	      9892	option.c	FUNCTION_62	FOR_1	ELSE_6	FOR_3	CALL_17
0xb863	      0xe800000000	                          call 0x400b8a8	      9892	option.c	FUNCTION_62	FOR_1	ELSE_6	FOR_3	CALL_17
0xb868	    0x8b0500000000	            mov eax, dword [0x0400b8ae] 	      9893	option.c	FUNCTION_62	FOR_1	ELSE_6	FOR_3	IF_12
0xb86e	            0x85c0	                           test eax, eax	      9893	option.c	FUNCTION_62	FOR_1	ELSE_6	FOR_3	IF_12
0xb870	            0x7574	                           jne 0x400b926	      9893	option.c	FUNCTION_62	FOR_1	ELSE_6	FOR_3	IF_12
0xb872	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	      9895	option.c	FUNCTION_62	FOR_1	ELSE_6	FOR_3
0xb879	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      9896	option.c	FUNCTION_62	FOR_1	ELSE_6	FOR_3	FOR_4
0xb87c	          0x8945cc	             mov dword [rbp - 0x34], eax	      9896	option.c	FUNCTION_62	FOR_1	ELSE_6	FOR_3	FOR_4
0xb87f	            0xeb37	                           jmp 0x400b8f8	      9896	option.c	FUNCTION_62	FOR_1	ELSE_6	FOR_3	FOR_4
0xb881	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      9898	option.c	FUNCTION_62	FOR_1	ELSE_6	FOR_3	FOR_4
0xb884	    0x890500000000	            mov dword [0x0400b8ca], eax 	      9898	option.c	FUNCTION_62	FOR_1	ELSE_6	FOR_3	FOR_4
0xb88a	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      9899	option.c	FUNCTION_62	FOR_1	ELSE_6	FOR_3	FOR_4	CALL_18
0xb88d	            0x4898	                                    cdqe	      9899	option.c	FUNCTION_62	FOR_1	ELSE_6	FOR_3	FOR_4	CALL_18
0xb88f	    0x488d14c50000	                        lea rdx, [rax*8]	      9899	option.c	FUNCTION_62	FOR_1	ELSE_6	FOR_3	FOR_4	CALL_18
0xb897	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9899	option.c	FUNCTION_62	FOR_1	ELSE_6	FOR_3	FOR_4	CALL_18
0xb89b	          0x4801d0	                            add rax, rdx	      9899	option.c	FUNCTION_62	FOR_1	ELSE_6	FOR_3	FOR_4	CALL_18
0xb89e	          0x488b00	                    mov rax, qword [rax]	      9899	option.c	FUNCTION_62	FOR_1	ELSE_6	FOR_3	FOR_4	CALL_18
0xb8a1	          0x8b55a8	             mov edx, dword [rbp - 0x58]	      9899	option.c	FUNCTION_62	FOR_1	ELSE_6	FOR_3	FOR_4	CALL_18
0xb8a4	            0x89d6	                            mov esi, edx	      9899	option.c	FUNCTION_62	FOR_1	ELSE_6	FOR_3	FOR_4	CALL_18
0xb8a6	          0x4889c7	                            mov rdi, rax	      9899	option.c	FUNCTION_62	FOR_1	ELSE_6	FOR_3	FOR_4	CALL_18
0xb8a9	      0xe84a010000	                     call sym.showoneopt	      9899	option.c	FUNCTION_62	FOR_1	ELSE_6	FOR_3	FOR_4	CALL_18
0xb8ae	        0x8345b414	            add dword [rbp - 0x4c], 0x14	      9900	option.c	FUNCTION_62	FOR_1	ELSE_6	FOR_3	FOR_4
0xb8b2	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      9896	option.c	FUNCTION_62	FOR_1	ELSE_6	FOR_3	FOR_4
0xb8b5	           0x145cc	             add dword [rbp - 0x34], eax	      9896	option.c	FUNCTION_62	FOR_1	ELSE_6	FOR_3	FOR_4
0xb8b8	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      9896	option.c	FUNCTION_62	FOR_1	ELSE_6	FOR_3	FOR_4
0xb8bb	          0x3b45b8	             cmp eax, dword [rbp - 0x48]	      9896	option.c	FUNCTION_62	FOR_1	ELSE_6	FOR_3	FOR_4
0xb8be	            0x7cc1	                            jl 0x400b8c1	      9896	option.c	FUNCTION_62	FOR_1	ELSE_6	FOR_3	FOR_4
0xb8c0	      0xe800000000	                          call 0x400b905	      9902	option.c	FUNCTION_62	FOR_1	ELSE_6	FOR_3	CALL_19
0xb8c5	      0xe800000000	                          call 0x400b90a	      9903	option.c	FUNCTION_62	FOR_1	ELSE_6	FOR_3	CALL_20
0xb8ca	        0x8345c001	               add dword [rbp - 0x40], 1	      9890	option.c	FUNCTION_62	FOR_1	ELSE_6	FOR_3
0xb8ce	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      9890	option.c	FUNCTION_62	FOR_1	ELSE_6	FOR_3
0xb8d1	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	      9890	option.c	FUNCTION_62	FOR_1	ELSE_6	FOR_3
0xb8d4	            0x7d11	                           jge 0x400b927	      9890	option.c	FUNCTION_62	FOR_1	ELSE_6	FOR_3
0xb8d6	    0x8b0500000000	            mov eax, dword [0x0400b91c] 	      9890	option.c	FUNCTION_62	FOR_1	ELSE_6	FOR_3
0xb8dc	            0x85c0	                           test eax, eax	      9890	option.c	FUNCTION_62	FOR_1	ELSE_6	FOR_3
0xb8de	     0xf847affffff	                            je 0x400b89e	      9890	option.c	FUNCTION_62	FOR_1	ELSE_6	FOR_3
0xb8e4	            0xeb01	                           jmp 0x400b927	      9890	option.c	FUNCTION_62	FOR_1	ELSE_6	FOR_3
0xb8e6	              0x90	                                     nop	      9894	option.c	FUNCTION_62	FOR_1	ELSE_6	FOR_3	IF_12
0xb8e7	        0x8345bc01	               add dword [rbp - 0x44], 1	      9843	option.c	FUNCTION_62	FOR_1
0xb8eb	        0x837dbc02	               cmp dword [rbp - 0x44], 2	      9843	option.c	FUNCTION_62	FOR_1
0xb8ef	            0x7f0e	                            jg 0x400b93f	      9843	option.c	FUNCTION_62	FOR_1
0xb8f1	    0x8b0500000000	            mov eax, dword [0x0400b937] 	      9843	option.c	FUNCTION_62	FOR_1
0xb8f7	            0x85c0	                           test eax, eax	      9843	option.c	FUNCTION_62	FOR_1
0xb8f9	     0xf84adfdffff	                            je 0x400b6ec	      9843	option.c	FUNCTION_62	FOR_1
0xb8ff	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9906	option.c	FUNCTION_62	CALL_21
0xb903	          0x4889c7	                            mov rdi, rax	      9906	option.c	FUNCTION_62	CALL_21
0xb906	      0xe800000000	                          call 0x400b94b	      9906	option.c	FUNCTION_62	CALL_21
0xb90b	            0xeb01	                           jmp 0x400b94e	      9906	option.c	FUNCTION_62	CALL_21
0xb90d	              0x90	                                     nop	      9826	option.c	FUNCTION_62	IF_1
0xb90e	        0x4883c458	                           add rsp, 0x58	      9907	option.c	FUNCTION_62
0xb912	              0x5b	                                 pop rbx	      9907	option.c	FUNCTION_62
0xb913	              0x5d	                                 pop rbp	      9907	option.c	FUNCTION_62
0xb914	              0xc3	                                     ret	      9907	option.c	FUNCTION_62
set_option_default	WHILE,0:SWITCH,0:CALL,9:FOR,0:ELSE,4:DO,0:IF,9:functions,0	201
0x70f	              0x55	                                push rbp	      3738	option.c	FUNCTION_3
0x710	          0x4889e5	                            mov rbp, rsp	      3738	option.c	FUNCTION_3
0x713	        0x4883ec30	                           sub rsp, 0x30	      3738	option.c	FUNCTION_3
0x717	          0x897ddc	             mov dword [rbp - 0x24], edi	      3738	option.c	FUNCTION_3
0x71a	          0x8975d8	             mov dword [rbp - 0x28], esi	      3738	option.c	FUNCTION_3
0x71d	          0x8955d4	             mov dword [rbp - 0x2c], edx	      3738	option.c	FUNCTION_3
0x720	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      3743	option.c	FUNCTION_3
0x723	          0x83e006	                              and eax, 6	      3743	option.c	FUNCTION_3
0x726	            0x85c0	                           test eax, eax	      3743	option.c	FUNCTION_3
0x728	           0xf94c0	                                 sete al	      3743	option.c	FUNCTION_3
0x72b	           0xfb6c0	                           movzx eax, al	      3743	option.c	FUNCTION_3
0x72e	          0x8945e0	             mov dword [rbp - 0x20], eax	      3743	option.c	FUNCTION_3
0x731	        0x837de000	               cmp dword [rbp - 0x20], 0	      3745	option.c	FUNCTION_3	CALL_1
0x735	            0x7505	                           jne 0x400077c	      3745	option.c	FUNCTION_3	CALL_1
0x737	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      3745	option.c	FUNCTION_3	CALL_1
0x73a	            0xeb05	                           jmp 0x4000781	      3745	option.c	FUNCTION_3	CALL_1
0x73c	      0xb804000000	                              mov eax, 4	      3745	option.c	FUNCTION_3	CALL_1
0x741	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      3745	option.c	FUNCTION_3	CALL_1
0x744	          0x4863d2	                         movsxd rdx, edx	      3745	option.c	FUNCTION_3	CALL_1
0x747	        0x48c1e206	                              shl rdx, 6	      3745	option.c	FUNCTION_3	CALL_1
0x74b	    0x4881c2000000	                              add rdx, 0	      3745	option.c	FUNCTION_3	CALL_1
0x752	            0x89c6	                            mov esi, eax	      3745	option.c	FUNCTION_3	CALL_1
0x754	          0x4889d7	                            mov rdi, rdx	      3745	option.c	FUNCTION_3	CALL_1
0x757	      0xe8adc20000	                 call sym.get_varp_scope	      3745	option.c	FUNCTION_3	CALL_1
0x75c	        0x488945e8	             mov qword [rbp - 0x18], rax	      3745	option.c	FUNCTION_3	CALL_1
0x760	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3746	option.c	FUNCTION_3
0x763	            0x4898	                                    cdqe	      3746	option.c	FUNCTION_3
0x765	        0x48c1e006	                              shl rax, 6	      3746	option.c	FUNCTION_3
0x769	    0x480500000000	                              add rax, 0	      3746	option.c	FUNCTION_3
0x76f	          0x488b00	                    mov rax, qword [rax]	      3746	option.c	FUNCTION_3
0x772	        0x488945f0	             mov qword [rbp - 0x10], rax	      3746	option.c	FUNCTION_3
0x776	      0x48837de800	               cmp qword [rbp - 0x18], 0	      3747	option.c	FUNCTION_3	IF_1
0x77b	     0xf843e020000	                            je 0x40009ff	      3747	option.c	FUNCTION_3	IF_1
0x781	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3749	option.c	FUNCTION_3	IF_1
0x785	      0x2500040000	                          and eax, 0x400	      3749	option.c	FUNCTION_3	IF_1
0x78a	          0x4885c0	                           test rax, rax	      3749	option.c	FUNCTION_3	IF_1
0x78d	            0x750d	                           jne 0x40007dc	      3749	option.c	FUNCTION_3	IF_1
0x78f	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      3749	option.c	FUNCTION_3	IF_1
0x793	            0x7507	                           jne 0x40007dc	      3749	option.c	FUNCTION_3	IF_1
0x795	      0xb801000000	                              mov eax, 1	      3749	option.c	FUNCTION_3	IF_1
0x79a	            0xeb05	                           jmp 0x40007e1	      3749	option.c	FUNCTION_3	IF_1
0x79c	      0xb800000000	                              mov eax, 0	      3749	option.c	FUNCTION_3	IF_1
0x7a1	          0x8945e4	             mov dword [rbp - 0x1c], eax	      3749	option.c	FUNCTION_3	IF_1
0x7a4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3750	option.c	FUNCTION_3	IF_1	IF_2
0x7a8	          0x83e004	                              and eax, 4	      3750	option.c	FUNCTION_3	IF_1	IF_2
0x7ab	          0x4885c0	                           test rax, rax	      3750	option.c	FUNCTION_3	IF_1	IF_2
0x7ae	     0xf84ca000000	                            je 0x40008be	      3750	option.c	FUNCTION_3	IF_1	IF_2
0x7b4	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3754	option.c	FUNCTION_3	IF_1	IF_2	IF_3
0x7b7	            0x4898	                                    cdqe	      3754	option.c	FUNCTION_3	IF_1	IF_2	IF_3
0x7b9	        0x48c1e006	                              shl rax, 6	      3754	option.c	FUNCTION_3	IF_1	IF_2	IF_3
0x7bd	    0x480500000000	                              add rax, 0	      3754	option.c	FUNCTION_3	IF_1	IF_2	IF_3
0x7c3	            0x8b00	                    mov eax, dword [rax]	      3754	option.c	FUNCTION_3	IF_1	IF_2	IF_3
0x7c5	            0x85c0	                           test eax, eax	      3754	option.c	FUNCTION_3	IF_1	IF_2	IF_3
0x7c7	            0x743b	                            je 0x4000844	      3754	option.c	FUNCTION_3	IF_1	IF_2	IF_3
0x7c9	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      3755	option.c	FUNCTION_3	IF_1	IF_2	IF_3	CALL_2
0x7cc	            0x4898	                                    cdqe	      3755	option.c	FUNCTION_3	IF_1	IF_2	IF_3	CALL_2
0x7ce	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      3755	option.c	FUNCTION_3	IF_1	IF_2	IF_3	CALL_2
0x7d1	          0x4863d2	                         movsxd rdx, edx	      3755	option.c	FUNCTION_3	IF_1	IF_2	IF_3	CALL_2
0x7d4	        0x48c1e203	                              shl rdx, 3	      3755	option.c	FUNCTION_3	IF_1	IF_2	IF_3	CALL_2
0x7d8	          0x4801d0	                            add rax, rdx	      3755	option.c	FUNCTION_3	IF_1	IF_2	IF_3	CALL_2
0x7db	        0x4883c004	                              add rax, 4	      3755	option.c	FUNCTION_3	IF_1	IF_2	IF_3	CALL_2
0x7df	    0x488b14c50000	                  mov rdx, qword [rax*8]	      3755	option.c	FUNCTION_3	IF_1	IF_2	IF_3	CALL_2
0x7e7	          0x8b4dd8	             mov ecx, dword [rbp - 0x28]	      3755	option.c	FUNCTION_3	IF_1	IF_2	IF_3	CALL_2
0x7ea	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3755	option.c	FUNCTION_3	IF_1	IF_2	IF_3	CALL_2
0x7ed	    0x41b800000000	                              mov r8d, 0	      3755	option.c	FUNCTION_3	IF_1	IF_2	IF_3	CALL_2
0x7f3	            0x89c6	                            mov esi, eax	      3755	option.c	FUNCTION_3	IF_1	IF_2	IF_3	CALL_2
0x7f5	      0xbf00000000	                              mov edi, 0	      3755	option.c	FUNCTION_3	IF_1	IF_2	IF_3	CALL_2
0x7fa	      0xe800000000	                          call 0x400083f	      3755	option.c	FUNCTION_3	IF_1	IF_2	IF_3	CALL_2
0x7ff	      0xe991010000	                           jmp 0x40009d5	      3755	option.c	FUNCTION_3	IF_1	IF_2	IF_3	CALL_2
0x804	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      3759	option.c	FUNCTION_3	IF_1	IF_2	ELSE_1	IF_4
0x807	          0x83e001	                              and eax, 1	      3759	option.c	FUNCTION_3	IF_1	IF_2	ELSE_1	IF_4
0x80a	            0x85c0	                           test eax, eax	      3759	option.c	FUNCTION_3	IF_1	IF_2	ELSE_1	IF_4
0x80c	            0x741b	                            je 0x4000869	      3759	option.c	FUNCTION_3	IF_1	IF_2	ELSE_1	IF_4
0x80e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3759	option.c	FUNCTION_3	IF_1	IF_2	ELSE_1	IF_4
0x812	          0x83e008	                              and eax, 8	      3759	option.c	FUNCTION_3	IF_1	IF_2	ELSE_1	IF_4
0x815	          0x4885c0	                           test rax, rax	      3759	option.c	FUNCTION_3	IF_1	IF_2	ELSE_1	IF_4
0x818	            0x740f	                            je 0x4000869	      3759	option.c	FUNCTION_3	IF_1	IF_2	ELSE_1	IF_4
0x81a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3760	option.c	FUNCTION_3	IF_1	IF_2	ELSE_1	CALL_3
0x81e	          0x488b00	                    mov rax, qword [rax]	      3760	option.c	FUNCTION_3	IF_1	IF_2	ELSE_1	CALL_3
0x821	          0x4889c7	                            mov rdi, rax	      3760	option.c	FUNCTION_3	IF_1	IF_2	ELSE_1	CALL_3
0x824	      0xe800000000	                          call 0x4000869	      3760	option.c	FUNCTION_3	IF_1	IF_2	ELSE_1	CALL_3
0x829	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      3761	option.c	FUNCTION_3	IF_1	IF_2	ELSE_1
0x82c	            0x4898	                                    cdqe	      3761	option.c	FUNCTION_3	IF_1	IF_2	ELSE_1
0x82e	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      3761	option.c	FUNCTION_3	IF_1	IF_2	ELSE_1
0x831	          0x4863d2	                         movsxd rdx, edx	      3761	option.c	FUNCTION_3	IF_1	IF_2	ELSE_1
0x834	        0x48c1e203	                              shl rdx, 3	      3761	option.c	FUNCTION_3	IF_1	IF_2	ELSE_1
0x838	          0x4801d0	                            add rax, rdx	      3761	option.c	FUNCTION_3	IF_1	IF_2	ELSE_1
0x83b	        0x4883c004	                              add rax, 4	      3761	option.c	FUNCTION_3	IF_1	IF_2	ELSE_1
0x83f	    0x488b14c50000	                  mov rdx, qword [rax*8]	      3761	option.c	FUNCTION_3	IF_1	IF_2	ELSE_1
0x847	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3761	option.c	FUNCTION_3	IF_1	IF_2	ELSE_1
0x84b	          0x488910	                    mov qword [rax], rdx	      3761	option.c	FUNCTION_3	IF_1	IF_2	ELSE_1
0x84e	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3762	option.c	FUNCTION_3	IF_1	IF_2	ELSE_1
0x851	            0x4898	                                    cdqe	      3762	option.c	FUNCTION_3	IF_1	IF_2	ELSE_1
0x853	        0x48c1e006	                              shl rax, 6	      3762	option.c	FUNCTION_3	IF_1	IF_2	ELSE_1
0x857	    0x480500000000	                              add rax, 0	      3762	option.c	FUNCTION_3	IF_1	IF_2	ELSE_1
0x85d	          0x488b00	                    mov rax, qword [rax]	      3762	option.c	FUNCTION_3	IF_1	IF_2	ELSE_1
0x860	        0x4883e0f7	             and rax, 0xfffffffffffffff7	      3762	option.c	FUNCTION_3	IF_1	IF_2	ELSE_1
0x864	          0x4889c2	                            mov rdx, rax	      3762	option.c	FUNCTION_3	IF_1	IF_2	ELSE_1
0x867	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3762	option.c	FUNCTION_3	IF_1	IF_2	ELSE_1
0x86a	            0x4898	                                    cdqe	      3762	option.c	FUNCTION_3	IF_1	IF_2	ELSE_1
0x86c	        0x48c1e006	                              shl rax, 6	      3762	option.c	FUNCTION_3	IF_1	IF_2	ELSE_1
0x870	    0x480500000000	                              add rax, 0	      3762	option.c	FUNCTION_3	IF_1	IF_2	ELSE_1
0x876	          0x488910	                    mov qword [rax], rdx	      3762	option.c	FUNCTION_3	IF_1	IF_2	ELSE_1
0x879	      0xe917010000	                           jmp 0x40009d5	      3762	option.c	FUNCTION_3	IF_1	IF_2	ELSE_1
0x87e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3765	option.c	FUNCTION_3	IF_1	ELSE_2	IF_5
0x882	          0x83e002	                              and eax, 2	      3765	option.c	FUNCTION_3	IF_1	ELSE_2	IF_5
0x885	          0x4885c0	                           test rax, rax	      3765	option.c	FUNCTION_3	IF_1	ELSE_2	IF_5
0x888	     0xf8489000000	                            je 0x4000957	      3765	option.c	FUNCTION_3	IF_1	ELSE_2	IF_5
0x88e	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3767	option.c	FUNCTION_3	IF_1	ELSE_2	IF_5	IF_6
0x891	            0x4898	                                    cdqe	      3767	option.c	FUNCTION_3	IF_1	ELSE_2	IF_5	IF_6
0x893	        0x48c1e006	                              shl rax, 6	      3767	option.c	FUNCTION_3	IF_1	ELSE_2	IF_5	IF_6
0x897	    0x480500000000	                              add rax, 0	      3767	option.c	FUNCTION_3	IF_1	ELSE_2	IF_5	IF_6
0x89d	            0x8b00	                    mov eax, dword [rax]	      3767	option.c	FUNCTION_3	IF_1	ELSE_2	IF_5	IF_6
0x89f	      0x3d1c200000	                         cmp eax, 0x201c	      3767	option.c	FUNCTION_3	IF_1	ELSE_2	IF_5	IF_6
0x8a4	            0x7514	                           jne 0x40008fa	      3767	option.c	FUNCTION_3	IF_1	ELSE_2	IF_5	IF_6
0x8a6	    0x488b05000000	            mov rax, qword [0x040008ed] 	      3768	option.c	FUNCTION_3	IF_1	ELSE_2	IF_5	CALL_4
0x8ad	          0x4889c7	                            mov rdi, rax	      3768	option.c	FUNCTION_3	IF_1	ELSE_2	IF_5	CALL_4
0x8b0	      0xe800000000	                          call 0x40008f5	      3768	option.c	FUNCTION_3	IF_1	ELSE_2	IF_5	CALL_4
0x8b5	      0xe9db000000	                           jmp 0x40009d5	      3768	option.c	FUNCTION_3	IF_1	ELSE_2	IF_5	CALL_4
0x8ba	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      3771	option.c	FUNCTION_3	IF_1	ELSE_2	IF_5	ELSE_3
0x8bd	            0x4898	                                    cdqe	      3771	option.c	FUNCTION_3	IF_1	ELSE_2	IF_5	ELSE_3
0x8bf	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      3771	option.c	FUNCTION_3	IF_1	ELSE_2	IF_5	ELSE_3
0x8c2	          0x4863d2	                         movsxd rdx, edx	      3771	option.c	FUNCTION_3	IF_1	ELSE_2	IF_5	ELSE_3
0x8c5	        0x48c1e203	                              shl rdx, 3	      3771	option.c	FUNCTION_3	IF_1	ELSE_2	IF_5	ELSE_3
0x8c9	          0x4801d0	                            add rax, rdx	      3771	option.c	FUNCTION_3	IF_1	ELSE_2	IF_5	ELSE_3
0x8cc	        0x4883c004	                              add rax, 4	      3771	option.c	FUNCTION_3	IF_1	ELSE_2	IF_5	ELSE_3
0x8d0	    0x488b04c50000	                  mov rax, qword [rax*8]	      3771	option.c	FUNCTION_3	IF_1	ELSE_2	IF_5	ELSE_3
0x8d8	          0x4889c2	                            mov rdx, rax	      3771	option.c	FUNCTION_3	IF_1	ELSE_2	IF_5	ELSE_3
0x8db	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3771	option.c	FUNCTION_3	IF_1	ELSE_2	IF_5	ELSE_3
0x8df	          0x488910	                    mov qword [rax], rdx	      3771	option.c	FUNCTION_3	IF_1	ELSE_2	IF_5	ELSE_3
0x8e2	        0x837de000	               cmp dword [rbp - 0x20], 0	      3773	option.c	FUNCTION_3	IF_1	ELSE_2	IF_5	ELSE_3	IF_7
0x8e6	     0xf84a9000000	                            je 0x40009d5	      3773	option.c	FUNCTION_3	IF_1	ELSE_2	IF_5	ELSE_3	IF_7
0x8ec	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3774	option.c	FUNCTION_3	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x8ef	            0x4898	                                    cdqe	      3774	option.c	FUNCTION_3	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x8f1	        0x48c1e006	                              shl rax, 6	      3774	option.c	FUNCTION_3	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x8f5	    0x480500000000	                              add rax, 0	      3774	option.c	FUNCTION_3	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x8fb	      0xbe02000000	                              mov esi, 2	      3774	option.c	FUNCTION_3	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x900	          0x4889c7	                            mov rdi, rax	      3774	option.c	FUNCTION_3	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x903	      0xe801c10000	                 call sym.get_varp_scope	      3774	option.c	FUNCTION_3	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x908	          0x4889c2	                            mov rdx, rax	      3774	option.c	FUNCTION_3	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x90b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3775	option.c	FUNCTION_3	IF_1	ELSE_2	IF_5	ELSE_3	IF_7
0x90f	          0x488b00	                    mov rax, qword [rax]	      3775	option.c	FUNCTION_3	IF_1	ELSE_2	IF_5	ELSE_3	IF_7
0x912	          0x488902	                    mov qword [rdx], rax	      3774	option.c	FUNCTION_3	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x915	            0xeb7e	                           jmp 0x40009d5	      3774	option.c	FUNCTION_3	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x917	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      3782	option.c	FUNCTION_3	IF_1	ELSE_4
0x91a	            0x4898	                                    cdqe	      3782	option.c	FUNCTION_3	IF_1	ELSE_4
0x91c	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      3782	option.c	FUNCTION_3	IF_1	ELSE_4
0x91f	          0x4863d2	                         movsxd rdx, edx	      3782	option.c	FUNCTION_3	IF_1	ELSE_4
0x922	        0x48c1e203	                              shl rdx, 3	      3782	option.c	FUNCTION_3	IF_1	ELSE_4
0x926	          0x4801d0	                            add rax, rdx	      3782	option.c	FUNCTION_3	IF_1	ELSE_4
0x929	        0x4883c004	                              add rax, 4	      3782	option.c	FUNCTION_3	IF_1	ELSE_4
0x92d	    0x488b04c50000	                  mov rax, qword [rax*8]	      3782	option.c	FUNCTION_3	IF_1	ELSE_4
0x935	            0x89c2	                            mov edx, eax	      3782	option.c	FUNCTION_3	IF_1	ELSE_4
0x937	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3782	option.c	FUNCTION_3	IF_1	ELSE_4
0x93b	            0x8910	                    mov dword [rax], edx	      3782	option.c	FUNCTION_3	IF_1	ELSE_4
0x93d	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3785	option.c	FUNCTION_3	IF_1	ELSE_4	IF_8	CALL_6
0x940	            0x4898	                                    cdqe	      3785	option.c	FUNCTION_3	IF_1	ELSE_4	IF_8	CALL_6
0x942	        0x48c1e006	                              shl rax, 6	      3785	option.c	FUNCTION_3	IF_1	ELSE_4	IF_8	CALL_6
0x946	    0x480500000000	                              add rax, 0	      3785	option.c	FUNCTION_3	IF_1	ELSE_4	IF_8	CALL_6
0x94c	            0x8b00	                    mov eax, dword [rax]	      3785	option.c	FUNCTION_3	IF_1	ELSE_4	IF_8	CALL_6
0x94e	      0x3d33400000	                         cmp eax, 0x4033	      3785	option.c	FUNCTION_3	IF_1	ELSE_4	IF_8	CALL_6
0x953	            0x7513	                           jne 0x40009a8	      3785	option.c	FUNCTION_3	IF_1	ELSE_4	IF_8	CALL_6
0x955	      0xe800000000	                          call 0x400099a	      3785	option.c	FUNCTION_3	IF_1	ELSE_4	IF_8	CALL_6
0x95a	            0x85c0	                           test eax, eax	      3785	option.c	FUNCTION_3	IF_1	ELSE_4	IF_8	CALL_6
0x95c	            0x750a	                           jne 0x40009a8	      3785	option.c	FUNCTION_3	IF_1	ELSE_4	IF_8	CALL_6
0x95e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3786	option.c	FUNCTION_3	IF_1	ELSE_4	IF_8
0x962	    0xc70000000000	                      mov dword [rax], 0	      3786	option.c	FUNCTION_3	IF_1	ELSE_4	IF_8
0x968	        0x837de000	               cmp dword [rbp - 0x20], 0	      3789	option.c	FUNCTION_3	IF_1	ELSE_4	IF_9
0x96c	            0x7427	                            je 0x40009d5	      3789	option.c	FUNCTION_3	IF_1	ELSE_4	IF_9
0x96e	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3790	option.c	FUNCTION_3	IF_1	ELSE_4	IF_9	CALL_7
0x971	            0x4898	                                    cdqe	      3790	option.c	FUNCTION_3	IF_1	ELSE_4	IF_9	CALL_7
0x973	        0x48c1e006	                              shl rax, 6	      3790	option.c	FUNCTION_3	IF_1	ELSE_4	IF_9	CALL_7
0x977	    0x480500000000	                              add rax, 0	      3790	option.c	FUNCTION_3	IF_1	ELSE_4	IF_9	CALL_7
0x97d	      0xbe02000000	                              mov esi, 2	      3790	option.c	FUNCTION_3	IF_1	ELSE_4	IF_9	CALL_7
0x982	          0x4889c7	                            mov rdi, rax	      3790	option.c	FUNCTION_3	IF_1	ELSE_4	IF_9	CALL_7
0x985	      0xe87fc00000	                 call sym.get_varp_scope	      3790	option.c	FUNCTION_3	IF_1	ELSE_4	IF_9	CALL_7
0x98a	          0x4889c2	                            mov rdx, rax	      3790	option.c	FUNCTION_3	IF_1	ELSE_4	IF_9	CALL_7
0x98d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3791	option.c	FUNCTION_3	IF_1	ELSE_4	IF_9
0x991	            0x8b00	                    mov eax, dword [rax]	      3791	option.c	FUNCTION_3	IF_1	ELSE_4	IF_9
0x993	            0x8902	                    mov dword [rdx], eax	      3790	option.c	FUNCTION_3	IF_1	ELSE_4	IF_9	CALL_7
0x995	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      3795	option.c	FUNCTION_3	IF_1	CALL_8
0x998	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3795	option.c	FUNCTION_3	IF_1	CALL_8
0x99b	            0x89d6	                            mov esi, edx	      3795	option.c	FUNCTION_3	IF_1	CALL_8
0x99d	            0x89c7	                            mov edi, eax	      3795	option.c	FUNCTION_3	IF_1	CALL_8
0x99f	      0xe8993c0000	                  call sym.insecure_flag	      3795	option.c	FUNCTION_3	IF_1	CALL_8
0x9a4	        0x488945f8	                mov qword [rbp - 8], rax	      3795	option.c	FUNCTION_3	IF_1	CALL_8
0x9a8	        0x488b45f8	                mov rax, qword [rbp - 8]	      3796	option.c	FUNCTION_3	IF_1
0x9ac	          0x488b00	                    mov rax, qword [rax]	      3796	option.c	FUNCTION_3	IF_1
0x9af	    0x4825ffff7fff	             and rax, 0xffffffffff7fffff	      3796	option.c	FUNCTION_3	IF_1
0x9b5	          0x4889c2	                            mov rdx, rax	      3796	option.c	FUNCTION_3	IF_1
0x9b8	        0x488b45f8	                mov rax, qword [rbp - 8]	      3796	option.c	FUNCTION_3	IF_1
0x9bc	          0x488910	                    mov qword [rax], rdx	      3796	option.c	FUNCTION_3	IF_1
0x9bf	    0x8b1500000000	            mov edx, dword [0x04000a05] 	      3800	option.c	FUNCTION_3	CALL_9
0x9c5	          0x8b4dd8	             mov ecx, dword [rbp - 0x28]	      3800	option.c	FUNCTION_3	CALL_9
0x9c8	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      3800	option.c	FUNCTION_3	CALL_9
0x9cb	            0x89ce	                            mov esi, ecx	      3800	option.c	FUNCTION_3	CALL_9
0x9cd	            0x89c7	                            mov edi, eax	      3800	option.c	FUNCTION_3	CALL_9
0x9cf	      0xe862810000	        call sym.set_option_scriptID_idx	      3800	option.c	FUNCTION_3	CALL_9
0x9d4	              0x90	                                     nop	      3802	option.c	FUNCTION_3
0x9d5	              0xc9	                                   leave	      3802	option.c	FUNCTION_3
0x9d6	              0xc3	                                     ret	      3802	option.c	FUNCTION_3
set_iminsert_global	WHILE,0:SWITCH,0:CALL,0:FOR,0:ELSE,0:DO,0:IF,0:functions,0	8
0xef5f	              0x55	                                push rbp	     11279	option.c	FUNCTION_87
0xef60	          0x4889e5	                            mov rbp, rsp	     11279	option.c	FUNCTION_87
0xef63	    0x488b05000000	            mov rax, qword [0x0400efaa] 	     11280	option.c	FUNCTION_87
0xef6a	    0x488b80681200	          mov rax, qword [rax + 0x1268] 	     11280	option.c	FUNCTION_87
0xef71	    0x488905000000	            mov qword [0x0400efb8], rax 	     11280	option.c	FUNCTION_87
0xef78	              0x90	                                     nop	     11281	option.c	FUNCTION_87
0xef79	              0x5d	                                 pop rbp	     11281	option.c	FUNCTION_87
0xef7a	              0xc3	                                     ret	     11281	option.c	FUNCTION_87
briopt_check	WHILE,1:SWITCH,0:CALL,8:FOR,0:ELSE,2:DO,0:IF,5:functions,0	119
0x1141a	              0x55	                                push rbp	     12606	option.c	FUNCTION_117
0x1141b	          0x4889e5	                            mov rbp, rsp	     12606	option.c	FUNCTION_117
0x1141e	        0x4883ec30	                           sub rsp, 0x30	     12606	option.c	FUNCTION_117
0x11422	        0x48897dd8	             mov qword [rbp - 0x28], rdi	     12606	option.c	FUNCTION_117
0x11426	    0x64488b042528	                mov rax, qword fs:[0x28]	     12606	option.c	FUNCTION_117
0x1142f	        0x488945f8	                mov qword [rbp - 8], rax	     12606	option.c	FUNCTION_117
0x11433	            0x31c0	                            xor eax, eax	     12606	option.c	FUNCTION_117
0x11435	    0xc745e0000000	               mov dword [rbp - 0x20], 0	     12608	option.c	FUNCTION_117
0x1143c	    0x48c745f01400	           mov qword [rbp - 0x10], 0x14 	     12609	option.c	FUNCTION_117
0x11444	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	     12610	option.c	FUNCTION_117
0x1144b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     12612	option.c	FUNCTION_117
0x1144f	    0x488b80b80100	           mov rax, qword [rax + 0x1b8] 	     12612	option.c	FUNCTION_117
0x11456	        0x488945e8	             mov qword [rbp - 0x18], rax	     12612	option.c	FUNCTION_117
0x1145a	      0xe921010000	                           jmp 0x40115c0	     12613	option.c	FUNCTION_117	WHILE_1
0x1145f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12615	option.c	FUNCTION_117	WHILE_1	IF_1	CALL_1
0x11463	      0xba06000000	                              mov edx, 6	     12615	option.c	FUNCTION_117	WHILE_1	IF_1	CALL_1
0x11468	      0xbe00000000	                              mov esi, 0	     12615	option.c	FUNCTION_117	WHILE_1	IF_1	CALL_1
0x1146d	          0x4889c7	                            mov rdi, rax	     12615	option.c	FUNCTION_117	WHILE_1	IF_1	CALL_1
0x11470	      0xe800000000	                          call 0x40114b5	     12615	option.c	FUNCTION_117	WHILE_1	IF_1	CALL_1
0x11475	            0x85c0	                           test eax, eax	     12615	option.c	FUNCTION_117	WHILE_1	IF_1	CALL_1
0x11477	            0x7558	                           jne 0x4011511	     12615	option.c	FUNCTION_117	WHILE_1	IF_1	CALL_1
0x11479	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12616	option.c	FUNCTION_117	WHILE_1	IF_1	CALL_3
0x1147d	        0x4883c006	                              add rax, 6	     12616	option.c	FUNCTION_117	WHILE_1	IF_1	CALL_3
0x11481	           0xfb600	                   movzx eax, byte [rax]	     12616	option.c	FUNCTION_117	WHILE_1	IF_1	CALL_3
0x11484	            0x3c2d	                            cmp al, 0x2d	     12616	option.c	FUNCTION_117	WHILE_1	IF_1	CALL_3
0x11486	            0x7516	                           jne 0x40114de	     12616	option.c	FUNCTION_117	WHILE_1	IF_1	CALL_3
0x11488	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12616	option.c	FUNCTION_117	WHILE_1	IF_1	CALL_3
0x1148c	        0x4883c007	                              add rax, 7	     12616	option.c	FUNCTION_117	WHILE_1	IF_1	CALL_3
0x11490	           0xfb600	                   movzx eax, byte [rax]	     12616	option.c	FUNCTION_117	WHILE_1	IF_1	CALL_3
0x11493	           0xfb6c0	                           movzx eax, al	     12616	option.c	FUNCTION_117	WHILE_1	IF_1	CALL_3
0x11496	          0x83e830	                           sub eax, 0x30	     12616	option.c	FUNCTION_117	WHILE_1	IF_1	CALL_3
0x11499	          0x83f809	                              cmp eax, 9	     12616	option.c	FUNCTION_117	WHILE_1	IF_1	CALL_3
0x1149c	            0x7616	                           jbe 0x40114f4	     12616	option.c	FUNCTION_117	WHILE_1	IF_1	CALL_3
0x1149e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12616	option.c	FUNCTION_117	WHILE_1	IF_1	CALL_3
0x114a2	        0x4883c006	                              add rax, 6	     12616	option.c	FUNCTION_117	WHILE_1	IF_1	CALL_3
0x114a6	           0xfb600	                   movzx eax, byte [rax]	     12616	option.c	FUNCTION_117	WHILE_1	IF_1	CALL_3
0x114a9	           0xfb6c0	                           movzx eax, al	     12616	option.c	FUNCTION_117	WHILE_1	IF_1	CALL_3
0x114ac	          0x83e830	                           sub eax, 0x30	     12616	option.c	FUNCTION_117	WHILE_1	IF_1	CALL_3
0x114af	          0x83f809	                              cmp eax, 9	     12616	option.c	FUNCTION_117	WHILE_1	IF_1	CALL_3
0x114b2	            0x771d	                            ja 0x4011511	     12616	option.c	FUNCTION_117	WHILE_1	IF_1	CALL_3
0x114b4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12618	option.c	FUNCTION_117	WHILE_1	IF_1
0x114b8	        0x4883c006	                              add rax, 6	     12618	option.c	FUNCTION_117	WHILE_1	IF_1
0x114bc	        0x488945e8	             mov qword [rbp - 0x18], rax	     12618	option.c	FUNCTION_117	WHILE_1	IF_1
0x114c0	        0x488d45e8	                   lea rax, [rbp - 0x18]	     12619	option.c	FUNCTION_117	WHILE_1	IF_1	CALL_4
0x114c4	          0x4889c7	                            mov rdi, rax	     12619	option.c	FUNCTION_117	WHILE_1	IF_1	CALL_4
0x114c7	      0xe800000000	                          call 0x401150c	     12619	option.c	FUNCTION_117	WHILE_1	IF_1	CALL_4
0x114cc	          0x8945e0	             mov dword [rbp - 0x20], eax	     12619	option.c	FUNCTION_117	WHILE_1	IF_1	CALL_4
0x114cf	            0xeb7b	                           jmp 0x401158c	     12619	option.c	FUNCTION_117	WHILE_1	IF_1	CALL_4
0x114d1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12621	option.c	FUNCTION_117	WHILE_1	ELSE_1	IF_2	CALL_6
0x114d5	      0xba04000000	                              mov edx, 4	     12621	option.c	FUNCTION_117	WHILE_1	ELSE_1	IF_2	CALL_6
0x114da	      0xbe00000000	                              mov esi, 0	     12621	option.c	FUNCTION_117	WHILE_1	ELSE_1	IF_2	CALL_6
0x114df	          0x4889c7	                            mov rdi, rax	     12621	option.c	FUNCTION_117	WHILE_1	ELSE_1	IF_2	CALL_6
0x114e2	      0xe800000000	                          call 0x4011527	     12621	option.c	FUNCTION_117	WHILE_1	ELSE_1	IF_2	CALL_6
0x114e7	            0x85c0	                           test eax, eax	     12621	option.c	FUNCTION_117	WHILE_1	ELSE_1	IF_2	CALL_6
0x114e9	            0x7534	                           jne 0x401155f	     12621	option.c	FUNCTION_117	WHILE_1	ELSE_1	IF_2	CALL_6
0x114eb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12621	option.c	FUNCTION_117	WHILE_1	ELSE_1	IF_2	CALL_6
0x114ef	        0x4883c004	                              add rax, 4	     12621	option.c	FUNCTION_117	WHILE_1	ELSE_1	IF_2	CALL_6
0x114f3	           0xfb600	                   movzx eax, byte [rax]	     12621	option.c	FUNCTION_117	WHILE_1	ELSE_1	IF_2	CALL_6
0x114f6	           0xfb6c0	                           movzx eax, al	     12621	option.c	FUNCTION_117	WHILE_1	ELSE_1	IF_2	CALL_6
0x114f9	          0x83e830	                           sub eax, 0x30	     12621	option.c	FUNCTION_117	WHILE_1	ELSE_1	IF_2	CALL_6
0x114fc	          0x83f809	                              cmp eax, 9	     12621	option.c	FUNCTION_117	WHILE_1	ELSE_1	IF_2	CALL_6
0x114ff	            0x771e	                            ja 0x401155f	     12621	option.c	FUNCTION_117	WHILE_1	ELSE_1	IF_2	CALL_6
0x11501	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12623	option.c	FUNCTION_117	WHILE_1	ELSE_1	IF_2
0x11505	        0x4883c004	                              add rax, 4	     12623	option.c	FUNCTION_117	WHILE_1	ELSE_1	IF_2
0x11509	        0x488945e8	             mov qword [rbp - 0x18], rax	     12623	option.c	FUNCTION_117	WHILE_1	ELSE_1	IF_2
0x1150d	        0x488d45e8	                   lea rax, [rbp - 0x18]	     12624	option.c	FUNCTION_117	WHILE_1	ELSE_1	IF_2	CALL_7
0x11511	          0x4889c7	                            mov rdi, rax	     12624	option.c	FUNCTION_117	WHILE_1	ELSE_1	IF_2	CALL_7
0x11514	      0xe800000000	                          call 0x4011559	     12624	option.c	FUNCTION_117	WHILE_1	ELSE_1	IF_2	CALL_7
0x11519	        0x488945f0	             mov qword [rbp - 0x10], rax	     12624	option.c	FUNCTION_117	WHILE_1	ELSE_1	IF_2	CALL_7
0x1151d	            0xeb2d	                           jmp 0x401158c	     12624	option.c	FUNCTION_117	WHILE_1	ELSE_1	IF_2	CALL_7
0x1151f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12626	option.c	FUNCTION_117	WHILE_1	ELSE_2	IF_3	CALL_8
0x11523	      0xba03000000	                              mov edx, 3	     12626	option.c	FUNCTION_117	WHILE_1	ELSE_2	IF_3	CALL_8
0x11528	      0xbe00000000	                              mov esi, 0	     12626	option.c	FUNCTION_117	WHILE_1	ELSE_2	IF_3	CALL_8
0x1152d	          0x4889c7	                            mov rdi, rax	     12626	option.c	FUNCTION_117	WHILE_1	ELSE_2	IF_3	CALL_8
0x11530	      0xe800000000	                          call 0x4011575	     12626	option.c	FUNCTION_117	WHILE_1	ELSE_2	IF_3	CALL_8
0x11535	            0x85c0	                           test eax, eax	     12626	option.c	FUNCTION_117	WHILE_1	ELSE_2	IF_3	CALL_8
0x11537	            0x7513	                           jne 0x401158c	     12626	option.c	FUNCTION_117	WHILE_1	ELSE_2	IF_3	CALL_8
0x11539	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12628	option.c	FUNCTION_117	WHILE_1	ELSE_2	IF_3
0x1153d	        0x4883c003	                              add rax, 3	     12628	option.c	FUNCTION_117	WHILE_1	ELSE_2	IF_3
0x11541	        0x488945e8	             mov qword [rbp - 0x18], rax	     12628	option.c	FUNCTION_117	WHILE_1	ELSE_2	IF_3
0x11545	    0xc745e4010000	               mov dword [rbp - 0x1c], 1	     12629	option.c	FUNCTION_117	WHILE_1	ELSE_2	IF_3
0x1154c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12631	option.c	FUNCTION_117	WHILE_1	IF_4
0x11550	           0xfb600	                   movzx eax, byte [rax]	     12631	option.c	FUNCTION_117	WHILE_1	IF_4
0x11553	            0x3c2c	                            cmp al, 0x2c	     12631	option.c	FUNCTION_117	WHILE_1	IF_4
0x11555	            0x7412	                            je 0x40115a9	     12631	option.c	FUNCTION_117	WHILE_1	IF_4
0x11557	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12631	option.c	FUNCTION_117	WHILE_1	IF_4
0x1155b	           0xfb600	                   movzx eax, byte [rax]	     12631	option.c	FUNCTION_117	WHILE_1	IF_4
0x1155e	            0x84c0	                             test al, al	     12631	option.c	FUNCTION_117	WHILE_1	IF_4
0x11560	            0x7407	                            je 0x40115a9	     12631	option.c	FUNCTION_117	WHILE_1	IF_4
0x11562	      0xb800000000	                              mov eax, 0	     12632	option.c	FUNCTION_117	WHILE_1	IF_4
0x11567	            0xeb55	                           jmp 0x40115fe	     12632	option.c	FUNCTION_117	WHILE_1	IF_4
0x11569	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12633	option.c	FUNCTION_117	WHILE_1	IF_5
0x1156d	           0xfb600	                   movzx eax, byte [rax]	     12633	option.c	FUNCTION_117	WHILE_1	IF_5
0x11570	            0x3c2c	                            cmp al, 0x2c	     12633	option.c	FUNCTION_117	WHILE_1	IF_5
0x11572	            0x750c	                           jne 0x40115c0	     12633	option.c	FUNCTION_117	WHILE_1	IF_5
0x11574	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12634	option.c	FUNCTION_117	WHILE_1	IF_5
0x11578	        0x4883c001	                              add rax, 1	     12634	option.c	FUNCTION_117	WHILE_1	IF_5
0x1157c	        0x488945e8	             mov qword [rbp - 0x18], rax	     12634	option.c	FUNCTION_117	WHILE_1	IF_5
0x11580	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12613	option.c	FUNCTION_117	WHILE_1
0x11584	           0xfb600	                   movzx eax, byte [rax]	     12613	option.c	FUNCTION_117	WHILE_1
0x11587	            0x84c0	                             test al, al	     12613	option.c	FUNCTION_117	WHILE_1
0x11589	     0xf85d0feffff	                           jne 0x401149f	     12613	option.c	FUNCTION_117	WHILE_1
0x1158f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     12637	option.c	FUNCTION_117
0x11593	          0x8b55e0	             mov edx, dword [rbp - 0x20]	     12637	option.c	FUNCTION_117
0x11596	    0x899044050000	            mov dword [rax + 0x544], edx	     12637	option.c	FUNCTION_117
0x1159c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     12638	option.c	FUNCTION_117
0x115a0	            0x89c2	                            mov edx, eax	     12638	option.c	FUNCTION_117
0x115a2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     12638	option.c	FUNCTION_117
0x115a6	    0x899040050000	            mov dword [rax + 0x540], edx	     12638	option.c	FUNCTION_117
0x115ac	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     12639	option.c	FUNCTION_117
0x115b0	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	     12639	option.c	FUNCTION_117
0x115b3	    0x899048050000	            mov dword [rax + 0x548], edx	     12639	option.c	FUNCTION_117
0x115b9	      0xb801000000	                              mov eax, 1	     12641	option.c	FUNCTION_117
0x115be	        0x488b4df8	                mov rcx, qword [rbp - 8]	     12642	option.c	FUNCTION_117
0x115c2	    0x6448330c2528	                xor rcx, qword fs:[0x28]	     12642	option.c	FUNCTION_117
0x115cb	            0x7405	                            je 0x4011612	     12642	option.c	FUNCTION_117
0x115cd	      0xe800000000	                          call 0x4011612	     12642	option.c	FUNCTION_117
0x115d2	              0xc9	                                   leave	     12642	option.c	FUNCTION_117
0x115d3	              0xc3	                                     ret	     12642	option.c	FUNCTION_117
langmap_adjust_mb	WHILE,1:SWITCH,0:CALL,0:FOR,0:ELSE,1:DO,0:IF,2:functions,0	48
0x10025	              0x55	                                push rbp	     11858	option.c	FUNCTION_95
0x10026	          0x4889e5	                            mov rbp, rsp	     11858	option.c	FUNCTION_95
0x10029	          0x897ddc	             mov dword [rbp - 0x24], edi	     11858	option.c	FUNCTION_95
0x1002c	    0x488b05000000	            mov rax, qword [0x04010073] 	     11859	option.c	FUNCTION_95
0x10033	        0x488945f8	                mov qword [rbp - 8], rax	     11859	option.c	FUNCTION_95
0x10037	    0xc745e8000000	               mov dword [rbp - 0x18], 0	     11860	option.c	FUNCTION_95
0x1003e	    0x8b0500000000	            mov eax, dword [0x04010084] 	     11861	option.c	FUNCTION_95
0x10044	          0x8945ec	             mov dword [rbp - 0x14], eax	     11861	option.c	FUNCTION_95
0x10047	            0xeb66	                           jmp 0x40100ef	     11863	option.c	FUNCTION_95	WHILE_1
0x10049	          0x8b55e8	             mov edx, dword [rbp - 0x18]	     11865	option.c	FUNCTION_95	WHILE_1
0x1004c	          0x8b45ec	             mov eax, dword [rbp - 0x14]	     11865	option.c	FUNCTION_95	WHILE_1
0x1004f	             0x1d0	                            add eax, edx	     11865	option.c	FUNCTION_95	WHILE_1
0x10051	            0x89c2	                            mov edx, eax	     11865	option.c	FUNCTION_95	WHILE_1
0x10053	          0xc1ea1f	                           shr edx, 0x1f	     11865	option.c	FUNCTION_95	WHILE_1
0x10056	             0x1d0	                            add eax, edx	     11865	option.c	FUNCTION_95	WHILE_1
0x10058	            0xd1f8	                              sar eax, 1	     11865	option.c	FUNCTION_95	WHILE_1
0x1005a	          0x8945f0	             mov dword [rbp - 0x10], eax	     11865	option.c	FUNCTION_95	WHILE_1
0x1005d	          0x8b45f0	             mov eax, dword [rbp - 0x10]	     11866	option.c	FUNCTION_95	WHILE_1
0x10060	            0x4898	                                    cdqe	     11866	option.c	FUNCTION_95	WHILE_1
0x10062	    0x488d14c50000	                        lea rdx, [rax*8]	     11866	option.c	FUNCTION_95	WHILE_1
0x1006a	        0x488b45f8	                mov rax, qword [rbp - 8]	     11866	option.c	FUNCTION_95	WHILE_1
0x1006e	          0x4801d0	                            add rax, rdx	     11866	option.c	FUNCTION_95	WHILE_1
0x10071	            0x8b00	                    mov eax, dword [rax]	     11866	option.c	FUNCTION_95	WHILE_1
0x10073	          0x2b45dc	             sub eax, dword [rbp - 0x24]	     11866	option.c	FUNCTION_95	WHILE_1
0x10076	          0x8945f4	              mov dword [rbp - 0xc], eax	     11866	option.c	FUNCTION_95	WHILE_1
0x10079	        0x837df400	                cmp dword [rbp - 0xc], 0	     11868	option.c	FUNCTION_95	WHILE_1	IF_1
0x1007d	            0x7519	                           jne 0x40100d8	     11868	option.c	FUNCTION_95	WHILE_1	IF_1
0x1007f	          0x8b45f0	             mov eax, dword [rbp - 0x10]	     11869	option.c	FUNCTION_95	WHILE_1	IF_1
0x10082	            0x4898	                                    cdqe	     11869	option.c	FUNCTION_95	WHILE_1	IF_1
0x10084	    0x488d14c50000	                        lea rdx, [rax*8]	     11869	option.c	FUNCTION_95	WHILE_1	IF_1
0x1008c	        0x488b45f8	                mov rax, qword [rbp - 8]	     11869	option.c	FUNCTION_95	WHILE_1	IF_1
0x10090	          0x4801d0	                            add rax, rdx	     11869	option.c	FUNCTION_95	WHILE_1	IF_1
0x10093	          0x8b4004	                mov eax, dword [rax + 4]	     11869	option.c	FUNCTION_95	WHILE_1	IF_1
0x10096	            0xeb22	                           jmp 0x40100fa	     11869	option.c	FUNCTION_95	WHILE_1	IF_1
0x10098	        0x837df400	                cmp dword [rbp - 0xc], 0	     11870	option.c	FUNCTION_95	WHILE_1	IF_2
0x1009c	            0x790b	                           jns 0x40100e9	     11870	option.c	FUNCTION_95	WHILE_1	IF_2
0x1009e	          0x8b45f0	             mov eax, dword [rbp - 0x10]	     11871	option.c	FUNCTION_95	WHILE_1	IF_2
0x100a1	          0x83c001	                              add eax, 1	     11871	option.c	FUNCTION_95	WHILE_1	IF_2
0x100a4	          0x8945e8	             mov dword [rbp - 0x18], eax	     11871	option.c	FUNCTION_95	WHILE_1	IF_2
0x100a7	            0xeb06	                           jmp 0x40100ef	     11871	option.c	FUNCTION_95	WHILE_1	IF_2
0x100a9	          0x8b45f0	             mov eax, dword [rbp - 0x10]	     11873	option.c	FUNCTION_95	WHILE_1	ELSE_1
0x100ac	          0x8945ec	             mov dword [rbp - 0x14], eax	     11873	option.c	FUNCTION_95	WHILE_1	ELSE_1
0x100af	          0x8b45e8	             mov eax, dword [rbp - 0x18]	     11863	option.c	FUNCTION_95	WHILE_1
0x100b2	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	     11863	option.c	FUNCTION_95	WHILE_1
0x100b5	            0x7592	                           jne 0x4010089	     11863	option.c	FUNCTION_95	WHILE_1
0x100b7	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     11875	option.c	FUNCTION_95	ELSE_1
0x100ba	              0x5d	                                 pop rbp	     11876	option.c	FUNCTION_95	ELSE_1
0x100bb	              0xc3	                                     ret	     11876	option.c	FUNCTION_95	ELSE_1
check_clipboard_option	WHILE,0:SWITCH,0:CALL,12:FOR,1:ELSE,8:DO,0:IF,11:functions,0	189
0x86c4	              0x55	                                push rbp	      7903	option.c	FUNCTION_46
0x86c5	          0x4889e5	                            mov rbp, rsp	      7903	option.c	FUNCTION_46
0x86c8	        0x4883ec30	                           sub rsp, 0x30	      7903	option.c	FUNCTION_46
0x86cc	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      7904	option.c	FUNCTION_46
0x86d3	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      7905	option.c	FUNCTION_46
0x86da	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      7906	option.c	FUNCTION_46
0x86e1	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      7907	option.c	FUNCTION_46
0x86e8	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      7908	option.c	FUNCTION_46
0x86ef	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      7909	option.c	FUNCTION_46
0x86f7	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      7910	option.c	FUNCTION_46
0x86ff	    0x488b05000000	            mov rax, qword [0x04008746] 	      7913	option.c	FUNCTION_46	FOR_1
0x8706	        0x488945f8	                mov qword [rbp - 8], rax	      7913	option.c	FUNCTION_46	FOR_1
0x870a	      0xe913020000	                           jmp 0x4008962	      7913	option.c	FUNCTION_46	FOR_1
0x870f	        0x488b45f8	                mov rax, qword [rbp - 8]	      7915	option.c	FUNCTION_46	FOR_1	IF_1	CALL_1
0x8713	      0xba07000000	                              mov edx, 7	      7915	option.c	FUNCTION_46	FOR_1	IF_1	CALL_1
0x8718	      0xbe00000000	                              mov esi, 0	      7915	option.c	FUNCTION_46	FOR_1	IF_1	CALL_1
0x871d	          0x4889c7	                            mov rdi, rax	      7915	option.c	FUNCTION_46	FOR_1	IF_1	CALL_1
0x8720	      0xe800000000	                          call 0x4008765	      7915	option.c	FUNCTION_46	FOR_1	IF_1	CALL_1
0x8725	            0x85c0	                           test eax, eax	      7915	option.c	FUNCTION_46	FOR_1	IF_1	CALL_1
0x8727	            0x752c	                           jne 0x4008795	      7915	option.c	FUNCTION_46	FOR_1	IF_1	CALL_1
0x8729	        0x488b45f8	                mov rax, qword [rbp - 8]	      7915	option.c	FUNCTION_46	FOR_1	IF_1	CALL_1
0x872d	        0x4883c007	                              add rax, 7	      7915	option.c	FUNCTION_46	FOR_1	IF_1	CALL_1
0x8731	           0xfb600	                   movzx eax, byte [rax]	      7915	option.c	FUNCTION_46	FOR_1	IF_1	CALL_1
0x8734	            0x3c2c	                            cmp al, 0x2c	      7915	option.c	FUNCTION_46	FOR_1	IF_1	CALL_1
0x8736	            0x740f	                            je 0x4008787	      7915	option.c	FUNCTION_46	FOR_1	IF_1	CALL_1
0x8738	        0x488b45f8	                mov rax, qword [rbp - 8]	      7915	option.c	FUNCTION_46	FOR_1	IF_1	CALL_1
0x873c	        0x4883c007	                              add rax, 7	      7915	option.c	FUNCTION_46	FOR_1	IF_1	CALL_1
0x8740	           0xfb600	                   movzx eax, byte [rax]	      7915	option.c	FUNCTION_46	FOR_1	IF_1	CALL_1
0x8743	            0x84c0	                             test al, al	      7915	option.c	FUNCTION_46	FOR_1	IF_1	CALL_1
0x8745	            0x750e	                           jne 0x4008795	      7915	option.c	FUNCTION_46	FOR_1	IF_1	CALL_1
0x8747	        0x834dd401	                or dword [rbp - 0x2c], 1	      7917	option.c	FUNCTION_46	FOR_1	IF_1
0x874b	      0x488345f807	                  add qword [rbp - 8], 7	      7918	option.c	FUNCTION_46	FOR_1	IF_1
0x8750	      0xe9bd010000	                           jmp 0x4008952	      7918	option.c	FUNCTION_46	FOR_1	IF_1
0x8755	        0x488b45f8	                mov rax, qword [rbp - 8]	      7920	option.c	FUNCTION_46	FOR_1	ELSE_1	IF_2	CALL_2
0x8759	      0xba0b000000	                            mov edx, 0xb	      7920	option.c	FUNCTION_46	FOR_1	ELSE_1	IF_2	CALL_2
0x875e	      0xbe00000000	                              mov esi, 0	      7920	option.c	FUNCTION_46	FOR_1	ELSE_1	IF_2	CALL_2
0x8763	          0x4889c7	                            mov rdi, rax	      7920	option.c	FUNCTION_46	FOR_1	ELSE_1	IF_2	CALL_2
0x8766	      0xe800000000	                          call 0x40087ab	      7920	option.c	FUNCTION_46	FOR_1	ELSE_1	IF_2	CALL_2
0x876b	            0x85c0	                           test eax, eax	      7920	option.c	FUNCTION_46	FOR_1	ELSE_1	IF_2	CALL_2
0x876d	            0x752c	                           jne 0x40087db	      7920	option.c	FUNCTION_46	FOR_1	ELSE_1	IF_2	CALL_2
0x876f	        0x488b45f8	                mov rax, qword [rbp - 8]	      7921	option.c	FUNCTION_46	FOR_1	ELSE_1	IF_2
0x8773	        0x4883c00b	                            add rax, 0xb	      7921	option.c	FUNCTION_46	FOR_1	ELSE_1	IF_2
0x8777	           0xfb600	                   movzx eax, byte [rax]	      7921	option.c	FUNCTION_46	FOR_1	ELSE_1	IF_2
0x877a	            0x3c2c	                            cmp al, 0x2c	      7921	option.c	FUNCTION_46	FOR_1	ELSE_1	IF_2
0x877c	            0x740f	                            je 0x40087cd	      7921	option.c	FUNCTION_46	FOR_1	ELSE_1	IF_2
0x877e	        0x488b45f8	                mov rax, qword [rbp - 8]	      7921	option.c	FUNCTION_46	FOR_1	ELSE_1	IF_2
0x8782	        0x4883c00b	                            add rax, 0xb	      7921	option.c	FUNCTION_46	FOR_1	ELSE_1	IF_2
0x8786	           0xfb600	                   movzx eax, byte [rax]	      7921	option.c	FUNCTION_46	FOR_1	ELSE_1	IF_2
0x8789	            0x84c0	                             test al, al	      7921	option.c	FUNCTION_46	FOR_1	ELSE_1	IF_2
0x878b	            0x750e	                           jne 0x40087db	      7921	option.c	FUNCTION_46	FOR_1	ELSE_1	IF_2
0x878d	        0x834dd402	                or dword [rbp - 0x2c], 2	      7923	option.c	FUNCTION_46	FOR_1	ELSE_1	IF_2
0x8791	      0x488345f80b	                add qword [rbp - 8], 0xb	      7924	option.c	FUNCTION_46	FOR_1	ELSE_1	IF_2
0x8796	      0xe977010000	                           jmp 0x4008952	      7924	option.c	FUNCTION_46	FOR_1	ELSE_1	IF_2
0x879b	        0x488b45f8	                mov rax, qword [rbp - 8]	      7926	option.c	FUNCTION_46	FOR_1	ELSE_2	IF_3	CALL_3
0x879f	      0xba0a000000	                            mov edx, 0xa	      7926	option.c	FUNCTION_46	FOR_1	ELSE_2	IF_3	CALL_3
0x87a4	      0xbe00000000	                              mov esi, 0	      7926	option.c	FUNCTION_46	FOR_1	ELSE_2	IF_3	CALL_3
0x87a9	          0x4889c7	                            mov rdi, rax	      7926	option.c	FUNCTION_46	FOR_1	ELSE_2	IF_3	CALL_3
0x87ac	      0xe800000000	                          call 0x40087f1	      7926	option.c	FUNCTION_46	FOR_1	ELSE_2	IF_3	CALL_3
0x87b1	            0x85c0	                           test eax, eax	      7926	option.c	FUNCTION_46	FOR_1	ELSE_2	IF_3	CALL_3
0x87b3	            0x752f	                           jne 0x4008824	      7926	option.c	FUNCTION_46	FOR_1	ELSE_2	IF_3	CALL_3
0x87b5	        0x488b45f8	                mov rax, qword [rbp - 8]	      7927	option.c	FUNCTION_46	FOR_1	ELSE_2	IF_3
0x87b9	        0x4883c00a	                            add rax, 0xa	      7927	option.c	FUNCTION_46	FOR_1	ELSE_2	IF_3
0x87bd	           0xfb600	                   movzx eax, byte [rax]	      7927	option.c	FUNCTION_46	FOR_1	ELSE_2	IF_3
0x87c0	            0x3c2c	                            cmp al, 0x2c	      7927	option.c	FUNCTION_46	FOR_1	ELSE_2	IF_3
0x87c2	            0x740f	                            je 0x4008813	      7927	option.c	FUNCTION_46	FOR_1	ELSE_2	IF_3
0x87c4	        0x488b45f8	                mov rax, qword [rbp - 8]	      7927	option.c	FUNCTION_46	FOR_1	ELSE_2	IF_3
0x87c8	        0x4883c00a	                            add rax, 0xa	      7927	option.c	FUNCTION_46	FOR_1	ELSE_2	IF_3
0x87cc	           0xfb600	                   movzx eax, byte [rax]	      7927	option.c	FUNCTION_46	FOR_1	ELSE_2	IF_3
0x87cf	            0x84c0	                             test al, al	      7927	option.c	FUNCTION_46	FOR_1	ELSE_2	IF_3
0x87d1	            0x7511	                           jne 0x4008824	      7927	option.c	FUNCTION_46	FOR_1	ELSE_2	IF_3
0x87d3	    0xc745d8010000	               mov dword [rbp - 0x28], 1	      7929	option.c	FUNCTION_46	FOR_1	ELSE_2	IF_3
0x87da	      0x488345f80a	                add qword [rbp - 8], 0xa	      7930	option.c	FUNCTION_46	FOR_1	ELSE_2	IF_3
0x87df	      0xe92e010000	                           jmp 0x4008952	      7930	option.c	FUNCTION_46	FOR_1	ELSE_2	IF_3
0x87e4	        0x488b45f8	                mov rax, qword [rbp - 8]	      7932	option.c	FUNCTION_46	FOR_1	ELSE_3	IF_4	CALL_4
0x87e8	      0xba0e000000	                            mov edx, 0xe	      7932	option.c	FUNCTION_46	FOR_1	ELSE_3	IF_4	CALL_4
0x87ed	      0xbe00000000	                              mov esi, 0	      7932	option.c	FUNCTION_46	FOR_1	ELSE_3	IF_4	CALL_4
0x87f2	          0x4889c7	                            mov rdi, rax	      7932	option.c	FUNCTION_46	FOR_1	ELSE_3	IF_4	CALL_4
0x87f5	      0xe800000000	                          call 0x400883a	      7932	option.c	FUNCTION_46	FOR_1	ELSE_3	IF_4	CALL_4
0x87fa	            0x85c0	                           test eax, eax	      7932	option.c	FUNCTION_46	FOR_1	ELSE_3	IF_4	CALL_4
0x87fc	            0x752f	                           jne 0x400886d	      7932	option.c	FUNCTION_46	FOR_1	ELSE_3	IF_4	CALL_4
0x87fe	        0x488b45f8	                mov rax, qword [rbp - 8]	      7933	option.c	FUNCTION_46	FOR_1	ELSE_3	IF_4
0x8802	        0x4883c00e	                            add rax, 0xe	      7933	option.c	FUNCTION_46	FOR_1	ELSE_3	IF_4
0x8806	           0xfb600	                   movzx eax, byte [rax]	      7933	option.c	FUNCTION_46	FOR_1	ELSE_3	IF_4
0x8809	            0x3c2c	                            cmp al, 0x2c	      7933	option.c	FUNCTION_46	FOR_1	ELSE_3	IF_4
0x880b	            0x740f	                            je 0x400885c	      7933	option.c	FUNCTION_46	FOR_1	ELSE_3	IF_4
0x880d	        0x488b45f8	                mov rax, qword [rbp - 8]	      7933	option.c	FUNCTION_46	FOR_1	ELSE_3	IF_4
0x8811	        0x4883c00e	                            add rax, 0xe	      7933	option.c	FUNCTION_46	FOR_1	ELSE_3	IF_4
0x8815	           0xfb600	                   movzx eax, byte [rax]	      7933	option.c	FUNCTION_46	FOR_1	ELSE_3	IF_4
0x8818	            0x84c0	                             test al, al	      7933	option.c	FUNCTION_46	FOR_1	ELSE_3	IF_4
0x881a	            0x7511	                           jne 0x400886d	      7933	option.c	FUNCTION_46	FOR_1	ELSE_3	IF_4
0x881c	    0xc745dc010000	               mov dword [rbp - 0x24], 1	      7935	option.c	FUNCTION_46	FOR_1	ELSE_3	IF_4
0x8823	      0x488345f80e	                add qword [rbp - 8], 0xe	      7936	option.c	FUNCTION_46	FOR_1	ELSE_3	IF_4
0x8828	      0xe9e5000000	                           jmp 0x4008952	      7936	option.c	FUNCTION_46	FOR_1	ELSE_3	IF_4
0x882d	        0x488b45f8	                mov rax, qword [rbp - 8]	      7938	option.c	FUNCTION_46	FOR_1	ELSE_4	IF_5	CALL_5
0x8831	      0xba0c000000	                            mov edx, 0xc	      7938	option.c	FUNCTION_46	FOR_1	ELSE_4	IF_5	CALL_5
0x8836	      0xbe00000000	                              mov esi, 0	      7938	option.c	FUNCTION_46	FOR_1	ELSE_4	IF_5	CALL_5
0x883b	          0x4889c7	                            mov rdi, rax	      7938	option.c	FUNCTION_46	FOR_1	ELSE_4	IF_5	CALL_5
0x883e	      0xe800000000	                          call 0x4008883	      7938	option.c	FUNCTION_46	FOR_1	ELSE_4	IF_5	CALL_5
0x8843	            0x85c0	                           test eax, eax	      7938	option.c	FUNCTION_46	FOR_1	ELSE_4	IF_5	CALL_5
0x8845	            0x752f	                           jne 0x40088b6	      7938	option.c	FUNCTION_46	FOR_1	ELSE_4	IF_5	CALL_5
0x8847	        0x488b45f8	                mov rax, qword [rbp - 8]	      7939	option.c	FUNCTION_46	FOR_1	ELSE_4	IF_5
0x884b	        0x4883c00c	                            add rax, 0xc	      7939	option.c	FUNCTION_46	FOR_1	ELSE_4	IF_5
0x884f	           0xfb600	                   movzx eax, byte [rax]	      7939	option.c	FUNCTION_46	FOR_1	ELSE_4	IF_5
0x8852	            0x3c2c	                            cmp al, 0x2c	      7939	option.c	FUNCTION_46	FOR_1	ELSE_4	IF_5
0x8854	            0x740f	                            je 0x40088a5	      7939	option.c	FUNCTION_46	FOR_1	ELSE_4	IF_5
0x8856	        0x488b45f8	                mov rax, qword [rbp - 8]	      7939	option.c	FUNCTION_46	FOR_1	ELSE_4	IF_5
0x885a	        0x4883c00c	                            add rax, 0xc	      7939	option.c	FUNCTION_46	FOR_1	ELSE_4	IF_5
0x885e	           0xfb600	                   movzx eax, byte [rax]	      7939	option.c	FUNCTION_46	FOR_1	ELSE_4	IF_5
0x8861	            0x84c0	                             test al, al	      7939	option.c	FUNCTION_46	FOR_1	ELSE_4	IF_5
0x8863	            0x7511	                           jne 0x40088b6	      7939	option.c	FUNCTION_46	FOR_1	ELSE_4	IF_5
0x8865	    0xc745e0010000	               mov dword [rbp - 0x20], 1	      7941	option.c	FUNCTION_46	FOR_1	ELSE_4	IF_5
0x886c	      0x488345f80c	                add qword [rbp - 8], 0xc	      7942	option.c	FUNCTION_46	FOR_1	ELSE_4	IF_5
0x8871	      0xe99c000000	                           jmp 0x4008952	      7942	option.c	FUNCTION_46	FOR_1	ELSE_4	IF_5
0x8876	        0x488b45f8	                mov rax, qword [rbp - 8]	      7944	option.c	FUNCTION_46	FOR_1	ELSE_5	IF_6	CALL_6
0x887a	      0xba04000000	                              mov edx, 4	      7944	option.c	FUNCTION_46	FOR_1	ELSE_5	IF_6	CALL_6
0x887f	      0xbe00000000	                              mov esi, 0	      7944	option.c	FUNCTION_46	FOR_1	ELSE_5	IF_6	CALL_6
0x8884	          0x4889c7	                            mov rdi, rax	      7944	option.c	FUNCTION_46	FOR_1	ELSE_5	IF_6	CALL_6
0x8887	      0xe800000000	                          call 0x40088cc	      7944	option.c	FUNCTION_46	FOR_1	ELSE_5	IF_6	CALL_6
0x888c	            0x85c0	                           test eax, eax	      7944	option.c	FUNCTION_46	FOR_1	ELSE_5	IF_6	CALL_6
0x888e	            0x752c	                           jne 0x40088fc	      7944	option.c	FUNCTION_46	FOR_1	ELSE_5	IF_6	CALL_6
0x8890	        0x488b45f8	                mov rax, qword [rbp - 8]	      7944	option.c	FUNCTION_46	FOR_1	ELSE_5	IF_6	CALL_6
0x8894	        0x4883c004	                              add rax, 4	      7944	option.c	FUNCTION_46	FOR_1	ELSE_5	IF_6	CALL_6
0x8898	           0xfb600	                   movzx eax, byte [rax]	      7944	option.c	FUNCTION_46	FOR_1	ELSE_5	IF_6	CALL_6
0x889b	            0x3c2c	                            cmp al, 0x2c	      7944	option.c	FUNCTION_46	FOR_1	ELSE_5	IF_6	CALL_6
0x889d	            0x740f	                            je 0x40088ee	      7944	option.c	FUNCTION_46	FOR_1	ELSE_5	IF_6	CALL_6
0x889f	        0x488b45f8	                mov rax, qword [rbp - 8]	      7944	option.c	FUNCTION_46	FOR_1	ELSE_5	IF_6	CALL_6
0x88a3	        0x4883c004	                              add rax, 4	      7944	option.c	FUNCTION_46	FOR_1	ELSE_5	IF_6	CALL_6
0x88a7	           0xfb600	                   movzx eax, byte [rax]	      7944	option.c	FUNCTION_46	FOR_1	ELSE_5	IF_6	CALL_6
0x88aa	            0x84c0	                             test al, al	      7944	option.c	FUNCTION_46	FOR_1	ELSE_5	IF_6	CALL_6
0x88ac	            0x750e	                           jne 0x40088fc	      7944	option.c	FUNCTION_46	FOR_1	ELSE_5	IF_6	CALL_6
0x88ae	    0xc745e4010000	               mov dword [rbp - 0x1c], 1	      7946	option.c	FUNCTION_46	FOR_1	ELSE_5	IF_6
0x88b5	      0x488345f804	                  add qword [rbp - 8], 4	      7947	option.c	FUNCTION_46	FOR_1	ELSE_5	IF_6
0x88ba	            0xeb56	                           jmp 0x4008952	      7947	option.c	FUNCTION_46	FOR_1	ELSE_5	IF_6
0x88bc	        0x488b45f8	                mov rax, qword [rbp - 8]	      7949	option.c	FUNCTION_46	FOR_1	ELSE_6	IF_7	CALL_7
0x88c0	      0xba08000000	                              mov edx, 8	      7949	option.c	FUNCTION_46	FOR_1	ELSE_6	IF_7	CALL_7
0x88c5	      0xbe00000000	                              mov esi, 0	      7949	option.c	FUNCTION_46	FOR_1	ELSE_6	IF_7	CALL_7
0x88ca	          0x4889c7	                            mov rdi, rax	      7949	option.c	FUNCTION_46	FOR_1	ELSE_6	IF_7	CALL_7
0x88cd	      0xe800000000	                          call 0x4008912	      7949	option.c	FUNCTION_46	FOR_1	ELSE_6	IF_7	CALL_7
0x88d2	            0x85c0	                           test eax, eax	      7949	option.c	FUNCTION_46	FOR_1	ELSE_6	IF_7	CALL_7
0x88d4	            0x7532	                           jne 0x4008948	      7949	option.c	FUNCTION_46	FOR_1	ELSE_6	IF_7	CALL_7
0x88d6	      0x48837de800	               cmp qword [rbp - 0x18], 0	      7949	option.c	FUNCTION_46	FOR_1	ELSE_6	IF_7	CALL_7
0x88db	            0x752b	                           jne 0x4008948	      7949	option.c	FUNCTION_46	FOR_1	ELSE_6	IF_7	CALL_7
0x88dd	      0x488345f808	                  add qword [rbp - 8], 8	      7951	option.c	FUNCTION_46	FOR_1	ELSE_6	IF_7
0x88e2	        0x488b45f8	                mov rax, qword [rbp - 8]	      7952	option.c	FUNCTION_46	FOR_1	ELSE_6	IF_7	CALL_8
0x88e6	      0xbe01000000	                              mov esi, 1	      7952	option.c	FUNCTION_46	FOR_1	ELSE_6	IF_7	CALL_8
0x88eb	          0x4889c7	                            mov rdi, rax	      7952	option.c	FUNCTION_46	FOR_1	ELSE_6	IF_7	CALL_8
0x88ee	      0xe800000000	                          call 0x4008933	      7952	option.c	FUNCTION_46	FOR_1	ELSE_6	IF_7	CALL_8
0x88f3	        0x488945e8	             mov qword [rbp - 0x18], rax	      7952	option.c	FUNCTION_46	FOR_1	ELSE_6	IF_7	CALL_8
0x88f7	      0x48837de800	               cmp qword [rbp - 0x18], 0	      7953	option.c	FUNCTION_46	FOR_1	ELSE_6	IF_7	IF_8
0x88fc	            0x7535	                           jne 0x4008973	      7953	option.c	FUNCTION_46	FOR_1	ELSE_6	IF_7	IF_8
0x88fe	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      7954	option.c	FUNCTION_46	FOR_1	ELSE_6	IF_7	IF_8
0x8906	            0xeb2b	                           jmp 0x4008973	      7955	option.c	FUNCTION_46	FOR_1	ELSE_6	IF_7
0x8908	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      7959	option.c	FUNCTION_46	FOR_1	ELSE_7
0x8910	            0xeb22	                           jmp 0x4008974	      7960	option.c	FUNCTION_46	FOR_1	ELSE_7
0x8912	        0x488b45f8	                mov rax, qword [rbp - 8]	      7962	option.c	FUNCTION_46	FOR_1	IF_9
0x8916	           0xfb600	                   movzx eax, byte [rax]	      7962	option.c	FUNCTION_46	FOR_1	IF_9
0x8919	            0x3c2c	                            cmp al, 0x2c	      7962	option.c	FUNCTION_46	FOR_1	IF_9
0x891b	            0x7505	                           jne 0x4008962	      7962	option.c	FUNCTION_46	FOR_1	IF_9
0x891d	      0x488345f801	                  add qword [rbp - 8], 1	      7963	option.c	FUNCTION_46	FOR_1	IF_9
0x8922	        0x488b45f8	                mov rax, qword [rbp - 8]	      7913	option.c	FUNCTION_46	FOR_1
0x8926	           0xfb600	                   movzx eax, byte [rax]	      7913	option.c	FUNCTION_46	FOR_1
0x8929	            0x84c0	                             test al, al	      7913	option.c	FUNCTION_46	FOR_1
0x892b	     0xf85defdffff	                           jne 0x400874f	      7913	option.c	FUNCTION_46	FOR_1
0x8931	            0xeb01	                           jmp 0x4008974	      7913	option.c	FUNCTION_46	FOR_1
0x8933	              0x90	                                     nop	      7955	option.c	FUNCTION_46	FOR_1	ELSE_6	IF_7
0x8934	      0x48837df000	               cmp qword [rbp - 0x10], 0	      7965	option.c	FUNCTION_46	IF_10
0x8939	            0x7549	                           jne 0x40089c4	      7965	option.c	FUNCTION_46	IF_10
0x893b	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      7967	option.c	FUNCTION_46	IF_10
0x893e	    0x890500000000	            mov dword [0x04008984], eax 	      7967	option.c	FUNCTION_46	IF_10
0x8944	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      7968	option.c	FUNCTION_46	IF_10
0x8947	    0x890500000000	            mov dword [0x0400898d], eax 	      7968	option.c	FUNCTION_46	IF_10
0x894d	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      7969	option.c	FUNCTION_46	IF_10
0x8950	    0x890500000000	            mov dword [0x04008996], eax 	      7969	option.c	FUNCTION_46	IF_10
0x8956	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      7970	option.c	FUNCTION_46	IF_10
0x8959	    0x890500000000	            mov dword [0x0400899f], eax 	      7970	option.c	FUNCTION_46	IF_10
0x895f	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      7971	option.c	FUNCTION_46	IF_10
0x8962	    0x890500000000	            mov dword [0x040089a8], eax 	      7971	option.c	FUNCTION_46	IF_10
0x8968	    0x488b05000000	            mov rax, qword [0x040089af] 	      7972	option.c	FUNCTION_46	IF_10	CALL_9
0x896f	          0x4889c7	                            mov rdi, rax	      7972	option.c	FUNCTION_46	IF_10	CALL_9
0x8972	      0xe800000000	                          call 0x40089b7	      7972	option.c	FUNCTION_46	IF_10	CALL_9
0x8977	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7973	option.c	FUNCTION_46	IF_10
0x897b	    0x488905000000	            mov qword [0x040089c2], rax 	      7973	option.c	FUNCTION_46	IF_10
0x8982	            0xeb0c	                           jmp 0x40089d0	      7973	option.c	FUNCTION_46	IF_10
0x8984	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7983	option.c	FUNCTION_46	CALL_12
0x8988	          0x4889c7	                            mov rdi, rax	      7983	option.c	FUNCTION_46	CALL_12
0x898b	      0xe800000000	                          call 0x40089d0	      7983	option.c	FUNCTION_46	CALL_12
0x8990	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7985	option.c	FUNCTION_46
0x8994	              0xc9	                                   leave	      7986	option.c	FUNCTION_46
0x8995	              0xc3	                                     ret	      7986	option.c	FUNCTION_46
check_options	WHILE,0:SWITCH,0:CALL,2:FOR,1:ELSE,0:DO,0:IF,1:functions,0	39
0x40d2	              0x55	                                push rbp	      5598	option.c	FUNCTION_28
0x40d3	          0x4889e5	                            mov rbp, rsp	      5598	option.c	FUNCTION_28
0x40d6	        0x4883ec10	                           sub rsp, 0x10	      5598	option.c	FUNCTION_28
0x40da	    0xc745fc000000	                  mov dword [rbp - 4], 0	      5601	option.c	FUNCTION_28	FOR_1
0x40e1	            0xeb54	                           jmp 0x4004177	      5601	option.c	FUNCTION_28	FOR_1
0x40e3	          0x8b45fc	                mov eax, dword [rbp - 4]	      5602	option.c	FUNCTION_28	FOR_1	IF_1
0x40e6	            0x4898	                                    cdqe	      5602	option.c	FUNCTION_28	FOR_1	IF_1
0x40e8	        0x48c1e006	                              shl rax, 6	      5602	option.c	FUNCTION_28	FOR_1	IF_1
0x40ec	    0x480500000000	                              add rax, 0	      5602	option.c	FUNCTION_28	FOR_1	IF_1
0x40f2	          0x488b00	                    mov rax, qword [rax]	      5602	option.c	FUNCTION_28	FOR_1	IF_1
0x40f5	          0x83e004	                              and eax, 4	      5602	option.c	FUNCTION_28	FOR_1	IF_1
0x40f8	          0x4885c0	                           test rax, rax	      5602	option.c	FUNCTION_28	FOR_1	IF_1
0x40fb	            0x7436	                            je 0x4004173	      5602	option.c	FUNCTION_28	FOR_1	IF_1
0x40fd	          0x8b45fc	                mov eax, dword [rbp - 4]	      5602	option.c	FUNCTION_28	FOR_1	IF_1
0x4100	            0x4898	                                    cdqe	      5602	option.c	FUNCTION_28	FOR_1	IF_1
0x4102	        0x48c1e006	                              shl rax, 6	      5602	option.c	FUNCTION_28	FOR_1	IF_1
0x4106	    0x480500000000	                              add rax, 0	      5602	option.c	FUNCTION_28	FOR_1	IF_1
0x410c	          0x488b00	                    mov rax, qword [rax]	      5602	option.c	FUNCTION_28	FOR_1	IF_1
0x410f	          0x4885c0	                           test rax, rax	      5602	option.c	FUNCTION_28	FOR_1	IF_1
0x4112	            0x741f	                            je 0x4004173	      5602	option.c	FUNCTION_28	FOR_1	IF_1
0x4114	          0x8b45fc	                mov eax, dword [rbp - 4]	      5603	option.c	FUNCTION_28	FOR_1	IF_1
0x4117	            0x4898	                                    cdqe	      5603	option.c	FUNCTION_28	FOR_1	IF_1
0x4119	        0x48c1e006	                              shl rax, 6	      5603	option.c	FUNCTION_28	FOR_1	IF_1
0x411d	    0x480500000000	                              add rax, 0	      5603	option.c	FUNCTION_28	FOR_1	IF_1
0x4123	          0x4889c7	                            mov rdi, rax	      5603	option.c	FUNCTION_28	FOR_1	IF_1
0x4126	      0xe8148c0000	                       call sym.get_varp	      5603	option.c	FUNCTION_28	FOR_1	IF_1
0x412b	          0x4889c7	                            mov rdi, rax	      5603	option.c	FUNCTION_28	FOR_1	IF_1
0x412e	      0xe812040000	            call sym.check_string_option	      5603	option.c	FUNCTION_28	FOR_1	IF_1
0x4133	        0x8345fc01	                  add dword [rbp - 4], 1	      5601	option.c	FUNCTION_28	FOR_1
0x4137	          0x8b45fc	                mov eax, dword [rbp - 4]	      5601	option.c	FUNCTION_28	FOR_1
0x413a	            0x4898	                                    cdqe	      5601	option.c	FUNCTION_28	FOR_1
0x413c	        0x48c1e006	                              shl rax, 6	      5601	option.c	FUNCTION_28	FOR_1
0x4140	    0x480500000000	                              add rax, 0	      5601	option.c	FUNCTION_28	FOR_1
0x4146	          0x488b00	                    mov rax, qword [rax]	      5601	option.c	FUNCTION_28	FOR_1
0x4149	          0x4885c0	                           test rax, rax	      5601	option.c	FUNCTION_28	FOR_1
0x414c	            0x7595	                           jne 0x4004123	      5601	option.c	FUNCTION_28	FOR_1
0x414e	              0x90	                                     nop	      5604	option.c	FUNCTION_28
0x414f	              0xc9	                                   leave	      5604	option.c	FUNCTION_28
0x4150	              0xc3	                                     ret	      5604	option.c	FUNCTION_28
reset_modifiable	WHILE,0:SWITCH,0:CALL,1:FOR,0:ELSE,0:DO,0:IF,1:functions,0	19
0xef10	              0x55	                                push rbp	     11264	option.c	FUNCTION_86
0xef11	          0x4889e5	                            mov rbp, rsp	     11264	option.c	FUNCTION_86
0xef14	        0x4883ec10	                           sub rsp, 0x10	     11264	option.c	FUNCTION_86
0xef18	    0x488b05000000	            mov rax, qword [0x0400ef5f] 	     11267	option.c	FUNCTION_86
0xef1f	    0xc78028150000	            mov dword [rax + 0x1528], 0 	     11267	option.c	FUNCTION_86
0xef29	    0xc70500000000	               mov dword [0x0400ef73], 0	     11268	option.c	FUNCTION_86
0xef33	      0xbf00000000	                              mov edi, 0	     11269	option.c	FUNCTION_86	CALL_1
0xef38	      0xe849beffff	                     call sym.findoption	     11269	option.c	FUNCTION_86	CALL_1
0xef3d	          0x8945fc	                mov dword [rbp - 4], eax	     11269	option.c	FUNCTION_86	CALL_1
0xef40	        0x837dfc00	                  cmp dword [rbp - 4], 0	     11270	option.c	FUNCTION_86	IF_1
0xef44	            0x7816	                            js 0x400ef9c	     11270	option.c	FUNCTION_86	IF_1
0xef46	          0x8b45fc	                mov eax, dword [rbp - 4]	     11271	option.c	FUNCTION_86	IF_1
0xef49	            0x4898	                                    cdqe	     11271	option.c	FUNCTION_86	IF_1
0xef4b	        0x48c1e006	                              shl rax, 6	     11271	option.c	FUNCTION_86	IF_1
0xef4f	    0x480500000000	                              add rax, 0	     11271	option.c	FUNCTION_86	IF_1
0xef55	    0x48c700000000	                      mov qword [rax], 0	     11271	option.c	FUNCTION_86	IF_1
0xef5c	              0x90	                                     nop	     11272	option.c	FUNCTION_86
0xef5d	              0xc9	                                   leave	     11272	option.c	FUNCTION_86
0xef5e	              0xc3	                                     ret	     11272	option.c	FUNCTION_86
file_ff_differs	WHILE,0:SWITCH,0:CALL,2:FOR,0:ELSE,0:DO,0:IF,6:functions,0	94
0x10f90	              0x55	                                push rbp	     12448	option.c	FUNCTION_112
0x10f91	          0x4889e5	                            mov rbp, rsp	     12448	option.c	FUNCTION_112
0x10f94	        0x4883ec10	                           sub rsp, 0x10	     12448	option.c	FUNCTION_112
0x10f98	        0x48897df8	                mov qword [rbp - 8], rdi	     12448	option.c	FUNCTION_112
0x10f9c	          0x8975f4	              mov dword [rbp - 0xc], esi	     12448	option.c	FUNCTION_112
0x10f9f	        0x488b45f8	                mov rax, qword [rbp - 8]	     12450	option.c	FUNCTION_112	IF_1
0x10fa3	          0x8b407c	            mov eax, dword [rax + 0x7c] 	     12450	option.c	FUNCTION_112	IF_1
0x10fa6	          0x83e004	                              and eax, 4	     12450	option.c	FUNCTION_112	IF_1
0x10fa9	            0x85c0	                           test eax, eax	     12450	option.c	FUNCTION_112	IF_1
0x10fab	            0x740a	                            je 0x4010ff7	     12450	option.c	FUNCTION_112	IF_1
0x10fad	      0xb800000000	                              mov eax, 0	     12451	option.c	FUNCTION_112	IF_1
0x10fb2	      0xe92a010000	                           jmp 0x4011121	     12451	option.c	FUNCTION_112	IF_1
0x10fb7	        0x837df400	                cmp dword [rbp - 0xc], 0	     12452	option.c	FUNCTION_112	IF_2
0x10fbb	            0x7442	                            je 0x401103f	     12452	option.c	FUNCTION_112	IF_2
0x10fbd	        0x488b45f8	                mov rax, qword [rbp - 8]	     12453	option.c	FUNCTION_112	IF_2
0x10fc1	          0x8b407c	            mov eax, dword [rax + 0x7c] 	     12453	option.c	FUNCTION_112	IF_2
0x10fc4	          0x83e010	                           and eax, 0x10	     12453	option.c	FUNCTION_112	IF_2
0x10fc7	            0x85c0	                           test eax, eax	     12453	option.c	FUNCTION_112	IF_2
0x10fc9	            0x7434	                            je 0x401103f	     12453	option.c	FUNCTION_112	IF_2
0x10fcb	        0x488b45f8	                mov rax, qword [rbp - 8]	     12454	option.c	FUNCTION_112	IF_2
0x10fcf	          0x488b00	                    mov rax, qword [rax]	     12454	option.c	FUNCTION_112	IF_2
0x10fd2	        0x4883f801	                              cmp rax, 1	     12454	option.c	FUNCTION_112	IF_2
0x10fd6	            0x7527	                           jne 0x401103f	     12454	option.c	FUNCTION_112	IF_2
0x10fd8	        0x488b45f8	                mov rax, qword [rbp - 8]	     12455	option.c	FUNCTION_112	IF_2	CALL_1
0x10fdc	      0xba00000000	                              mov edx, 0	     12455	option.c	FUNCTION_112	IF_2	CALL_1
0x10fe1	      0xbe01000000	                              mov esi, 1	     12455	option.c	FUNCTION_112	IF_2	CALL_1
0x10fe6	          0x4889c7	                            mov rdi, rax	     12455	option.c	FUNCTION_112	IF_2	CALL_1
0x10fe9	      0xe800000000	                          call 0x401102e	     12455	option.c	FUNCTION_112	IF_2	CALL_1
0x10fee	           0xfb600	                   movzx eax, byte [rax]	     12455	option.c	FUNCTION_112	IF_2	CALL_1
0x10ff1	            0x84c0	                             test al, al	     12455	option.c	FUNCTION_112	IF_2	CALL_1
0x10ff3	            0x750a	                           jne 0x401103f	     12455	option.c	FUNCTION_112	IF_2	CALL_1
0x10ff5	      0xb800000000	                              mov eax, 0	     12456	option.c	FUNCTION_112	IF_2
0x10ffa	      0xe9e2000000	                           jmp 0x4011121	     12456	option.c	FUNCTION_112	IF_2
0x10fff	        0x488b45f8	                mov rax, qword [rbp - 8]	     12457	option.c	FUNCTION_112	IF_3
0x11003	    0x8b90e4160000	          mov edx, dword [rax + 0x16e4] 	     12457	option.c	FUNCTION_112	IF_3
0x11009	        0x488b45f8	                mov rax, qword [rbp - 8]	     12457	option.c	FUNCTION_112	IF_3
0x1100d	    0x488b80781400	          mov rax, qword [rax + 0x1478] 	     12457	option.c	FUNCTION_112	IF_3
0x11014	           0xfb600	                   movzx eax, byte [rax]	     12457	option.c	FUNCTION_112	IF_3
0x11017	           0xfb6c0	                           movzx eax, al	     12457	option.c	FUNCTION_112	IF_3
0x1101a	            0x39c2	                            cmp edx, eax	     12457	option.c	FUNCTION_112	IF_3
0x1101c	            0x740a	                            je 0x4011068	     12457	option.c	FUNCTION_112	IF_3
0x1101e	      0xb801000000	                              mov eax, 1	     12458	option.c	FUNCTION_112	IF_3
0x11023	      0xe9b9000000	                           jmp 0x4011121	     12458	option.c	FUNCTION_112	IF_3
0x11028	        0x488b45f8	                mov rax, qword [rbp - 8]	     12459	option.c	FUNCTION_112	IF_4
0x1102c	    0x8b80f0130000	          mov eax, dword [rax + 0x13f0] 	     12459	option.c	FUNCTION_112	IF_4
0x11032	            0x85c0	                           test eax, eax	     12459	option.c	FUNCTION_112	IF_4
0x11034	            0x750e	                           jne 0x4011084	     12459	option.c	FUNCTION_112	IF_4
0x11036	        0x488b45f8	                mov rax, qword [rbp - 8]	     12459	option.c	FUNCTION_112	IF_4
0x1103a	    0x8b805c140000	          mov eax, dword [rax + 0x145c] 	     12459	option.c	FUNCTION_112	IF_4
0x11040	            0x85c0	                           test eax, eax	     12459	option.c	FUNCTION_112	IF_4
0x11042	            0x751f	                           jne 0x40110a3	     12459	option.c	FUNCTION_112	IF_4
0x11044	        0x488b45f8	                mov rax, qword [rbp - 8]	     12459	option.c	FUNCTION_112	IF_4
0x11048	    0x8b90e0160000	          mov edx, dword [rax + 0x16e0] 	     12459	option.c	FUNCTION_112	IF_4
0x1104e	        0x488b45f8	                mov rax, qword [rbp - 8]	     12459	option.c	FUNCTION_112	IF_4
0x11052	    0x8b8058140000	          mov eax, dword [rax + 0x1458] 	     12459	option.c	FUNCTION_112	IF_4
0x11058	            0x39c2	                            cmp edx, eax	     12459	option.c	FUNCTION_112	IF_4
0x1105a	            0x7407	                            je 0x40110a3	     12459	option.c	FUNCTION_112	IF_4
0x1105c	      0xb801000000	                              mov eax, 1	     12460	option.c	FUNCTION_112	IF_4
0x11061	            0xeb7e	                           jmp 0x4011121	     12460	option.c	FUNCTION_112	IF_4
0x11063	        0x488b45f8	                mov rax, qword [rbp - 8]	     12462	option.c	FUNCTION_112	IF_5
0x11067	    0x8b80f0130000	          mov eax, dword [rax + 0x13f0] 	     12462	option.c	FUNCTION_112	IF_5
0x1106d	            0x85c0	                           test eax, eax	     12462	option.c	FUNCTION_112	IF_5
0x1106f	            0x751f	                           jne 0x40110d0	     12462	option.c	FUNCTION_112	IF_5
0x11071	        0x488b45f8	                mov rax, qword [rbp - 8]	     12462	option.c	FUNCTION_112	IF_5
0x11075	    0x8b90f4160000	          mov edx, dword [rax + 0x16f4] 	     12462	option.c	FUNCTION_112	IF_5
0x1107b	        0x488b45f8	                mov rax, qword [rbp - 8]	     12462	option.c	FUNCTION_112	IF_5
0x1107f	    0x8b80f4130000	          mov eax, dword [rax + 0x13f4] 	     12462	option.c	FUNCTION_112	IF_5
0x11085	            0x39c2	                            cmp edx, eax	     12462	option.c	FUNCTION_112	IF_5
0x11087	            0x7407	                            je 0x40110d0	     12462	option.c	FUNCTION_112	IF_5
0x11089	      0xb801000000	                              mov eax, 1	     12463	option.c	FUNCTION_112	IF_5
0x1108e	            0xeb51	                           jmp 0x4011121	     12463	option.c	FUNCTION_112	IF_5
0x11090	        0x488b45f8	                mov rax, qword [rbp - 8]	     12464	option.c	FUNCTION_112	IF_6
0x11094	    0x488b80e81600	          mov rax, qword [rax + 0x16e8] 	     12464	option.c	FUNCTION_112	IF_6
0x1109b	          0x4885c0	                           test rax, rax	     12464	option.c	FUNCTION_112	IF_6
0x1109e	            0x7518	                           jne 0x40110f8	     12464	option.c	FUNCTION_112	IF_6
0x110a0	        0x488b45f8	                mov rax, qword [rbp - 8]	     12465	option.c	FUNCTION_112	IF_6
0x110a4	    0x488b80701400	          mov rax, qword [rax + 0x1470] 	     12465	option.c	FUNCTION_112	IF_6
0x110ab	           0xfb600	                   movzx eax, byte [rax]	     12465	option.c	FUNCTION_112	IF_6
0x110ae	            0x84c0	                             test al, al	     12465	option.c	FUNCTION_112	IF_6
0x110b0	           0xf95c0	                                setne al	     12465	option.c	FUNCTION_112	IF_6
0x110b3	           0xfb6c0	                           movzx eax, al	     12465	option.c	FUNCTION_112	IF_6
0x110b6	            0xeb29	                           jmp 0x4011121	     12465	option.c	FUNCTION_112	IF_6
0x110b8	        0x488b45f8	                mov rax, qword [rbp - 8]	     12466	option.c	FUNCTION_112	CALL_2
0x110bc	    0x488b90701400	          mov rdx, qword [rax + 0x1470] 	     12466	option.c	FUNCTION_112	CALL_2
0x110c3	        0x488b45f8	                mov rax, qword [rbp - 8]	     12466	option.c	FUNCTION_112	CALL_2
0x110c7	    0x488b80e81600	          mov rax, qword [rax + 0x16e8] 	     12466	option.c	FUNCTION_112	CALL_2
0x110ce	          0x4889d6	                            mov rsi, rdx	     12466	option.c	FUNCTION_112	CALL_2
0x110d1	          0x4889c7	                            mov rdi, rax	     12466	option.c	FUNCTION_112	CALL_2
0x110d4	      0xe800000000	                          call 0x4011119	     12466	option.c	FUNCTION_112	CALL_2
0x110d9	            0x85c0	                           test eax, eax	     12466	option.c	FUNCTION_112	CALL_2
0x110db	           0xf95c0	                                setne al	     12466	option.c	FUNCTION_112	CALL_2
0x110de	           0xfb6c0	                           movzx eax, al	     12466	option.c	FUNCTION_112	CALL_2
0x110e1	              0xc9	                                   leave	     12470	option.c	FUNCTION_112
0x110e2	              0xc3	                                     ret	     12470	option.c	FUNCTION_112
ExpandSettings	WHILE,0:SWITCH,0:CALL,19:FOR,5:ELSE,9:DO,0:IF,24:functions,0	381
0xf614	              0x55	                                push rbp	     11510	option.c	FUNCTION_90
0xf615	          0x4889e5	                            mov rbp, rsp	     11510	option.c	FUNCTION_90
0xf618	              0x53	                                push rbx	     11510	option.c	FUNCTION_90
0xf619	    0x4881ec880000	                           sub rsp, 0x88	     11510	option.c	FUNCTION_90
0xf620	        0x48897d88	             mov qword [rbp - 0x78], rdi	     11510	option.c	FUNCTION_90
0xf624	        0x48897580	             mov qword [rbp - 0x80], rsi	     11510	option.c	FUNCTION_90
0xf628	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	     11510	option.c	FUNCTION_90
0xf62f	    0x48898d70ffff	             mov qword [rbp - 0x90], rcx	     11510	option.c	FUNCTION_90
0xf636	    0x64488b042528	                mov rax, qword fs:[0x28]	     11510	option.c	FUNCTION_90
0xf63f	        0x488945e8	             mov qword [rbp - 0x18], rax	     11510	option.c	FUNCTION_90
0xf643	            0x31c0	                            xor eax, eax	     11510	option.c	FUNCTION_90
0xf645	    0xc74598000000	               mov dword [rbp - 0x68], 0	     11511	option.c	FUNCTION_90
0xf64c	    0xc7459c000000	               mov dword [rbp - 0x64], 0	     11512	option.c	FUNCTION_90
0xf653	    0xc745a8000000	               mov dword [rbp - 0x58], 0	     11515	option.c	FUNCTION_90
0xf65a	        0x488b4580	             mov rax, qword [rbp - 0x80]	     11521	option.c	FUNCTION_90
0xf65e	    0x8b80a8000000	            mov eax, dword [rax + 0xa8] 	     11521	option.c	FUNCTION_90
0xf664	          0x8945b0	             mov dword [rbp - 0x50], eax	     11521	option.c	FUNCTION_90
0xf667	    0xc745ac000000	               mov dword [rbp - 0x54], 0	     11527	option.c	FUNCTION_90	FOR_1
0xf66e	      0xe914050000	                           jmp 0x400fbc7	     11527	option.c	FUNCTION_90	FOR_1
0xf673	        0x488b4580	             mov rax, qword [rbp - 0x80]	     11529	option.c	FUNCTION_90	FOR_1
0xf677	          0x8b55b0	             mov edx, dword [rbp - 0x50]	     11529	option.c	FUNCTION_90	FOR_1
0xf67a	    0x8990a8000000	             mov dword [rax + 0xa8], edx	     11529	option.c	FUNCTION_90	FOR_1
0xf680	        0x488b4588	             mov rax, qword [rbp - 0x78]	     11530	option.c	FUNCTION_90	FOR_1	IF_1
0xf684	            0x8b00	                    mov eax, dword [rax]	     11530	option.c	FUNCTION_90	FOR_1	IF_1
0xf686	          0x83f805	                              cmp eax, 5	     11530	option.c	FUNCTION_90	FOR_1	IF_1
0xf689	            0x7479	                            je 0x400f744	     11530	option.c	FUNCTION_90	FOR_1	IF_1
0xf68b	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	     11532	option.c	FUNCTION_90	FOR_1	IF_1	FOR_2
0xf692	            0xeb6a	                           jmp 0x400f73e	     11532	option.c	FUNCTION_90	FOR_1	IF_1	FOR_2
0xf694	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	     11534	option.c	FUNCTION_90	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0xf697	            0x4898	                                    cdqe	     11534	option.c	FUNCTION_90	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0xf699	    0x488b0cc50000	                  mov rcx, qword [rax*8]	     11534	option.c	FUNCTION_90	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0xf6a1	        0x488b4580	             mov rax, qword [rbp - 0x80]	     11534	option.c	FUNCTION_90	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0xf6a5	      0xba00000000	                              mov edx, 0	     11534	option.c	FUNCTION_90	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0xf6aa	          0x4889ce	                            mov rsi, rcx	     11534	option.c	FUNCTION_90	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0xf6ad	          0x4889c7	                            mov rdi, rax	     11534	option.c	FUNCTION_90	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0xf6b0	      0xe800000000	                          call 0x400f6f5	     11534	option.c	FUNCTION_90	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0xf6b5	            0x85c0	                           test eax, eax	     11534	option.c	FUNCTION_90	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0xf6b7	            0x7441	                            je 0x400f73a	     11534	option.c	FUNCTION_90	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0xf6b9	        0x837dac00	               cmp dword [rbp - 0x54], 0	     11536	option.c	FUNCTION_90	FOR_1	IF_1	FOR_2	IF_2	IF_3
0xf6bd	            0x7506	                           jne 0x400f705	     11536	option.c	FUNCTION_90	FOR_1	IF_1	FOR_2	IF_2	IF_3
0xf6bf	        0x83459801	               add dword [rbp - 0x68], 1	     11537	option.c	FUNCTION_90	FOR_1	IF_1	FOR_2	IF_2	IF_3
0xf6c3	            0xeb35	                           jmp 0x400f73a	     11537	option.c	FUNCTION_90	FOR_1	IF_1	FOR_2	IF_2	IF_3
0xf6c5	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	     11539	option.c	FUNCTION_90	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0xf6cc	          0x488b08	                    mov rcx, qword [rax]	     11539	option.c	FUNCTION_90	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0xf6cf	          0x8b45a8	             mov eax, dword [rbp - 0x58]	     11539	option.c	FUNCTION_90	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0xf6d2	          0x8d5001	                      lea edx, [rax + 1]	     11539	option.c	FUNCTION_90	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0xf6d5	          0x8955a8	             mov dword [rbp - 0x58], edx	     11539	option.c	FUNCTION_90	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0xf6d8	            0x4898	                                    cdqe	     11539	option.c	FUNCTION_90	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0xf6da	        0x48c1e003	                              shl rax, 3	     11539	option.c	FUNCTION_90	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0xf6de	        0x488d1c01	                    lea rbx, [rcx + rax]	     11539	option.c	FUNCTION_90	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0xf6e2	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	     11539	option.c	FUNCTION_90	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0xf6e5	            0x4898	                                    cdqe	     11539	option.c	FUNCTION_90	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0xf6e7	    0x488b04c50000	                  mov rax, qword [rax*8]	     11539	option.c	FUNCTION_90	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0xf6ef	          0x4889c7	                            mov rdi, rax	     11539	option.c	FUNCTION_90	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0xf6f2	      0xe800000000	                          call 0x400f737	     11539	option.c	FUNCTION_90	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0xf6f7	          0x488903	                    mov qword [rbx], rax	     11539	option.c	FUNCTION_90	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0xf6fa	        0x8345a401	               add dword [rbp - 0x5c], 1	     11533	option.c	FUNCTION_90	FOR_1	IF_1	FOR_2
0xf6fe	        0x837da401	               cmp dword [rbp - 0x5c], 1	     11532	option.c	FUNCTION_90	FOR_1	IF_1	FOR_2
0xf702	            0x7e90	                           jle 0x400f6d4	     11532	option.c	FUNCTION_90	FOR_1	IF_1	FOR_2
0xf704	    0xc745a0000000	               mov dword [rbp - 0x60], 0	     11542	option.c	FUNCTION_90	FOR_1	FOR_3
0xf70b	      0xe98d010000	                           jmp 0x400f8dd	     11542	option.c	FUNCTION_90	FOR_1	FOR_3
0xf710	          0x8b45a0	             mov eax, dword [rbp - 0x60]	     11545	option.c	FUNCTION_90	FOR_1	FOR_3	IF_4
0xf713	            0x4898	                                    cdqe	     11545	option.c	FUNCTION_90	FOR_1	FOR_3	IF_4
0xf715	        0x48c1e006	                              shl rax, 6	     11545	option.c	FUNCTION_90	FOR_1	FOR_3	IF_4
0xf719	    0x480500000000	                              add rax, 0	     11545	option.c	FUNCTION_90	FOR_1	FOR_3	IF_4
0xf71f	          0x488b00	                    mov rax, qword [rax]	     11545	option.c	FUNCTION_90	FOR_1	FOR_3	IF_4
0xf722	          0x4885c0	                           test rax, rax	     11545	option.c	FUNCTION_90	FOR_1	FOR_3	IF_4
0xf725	     0xf8467010000	                            je 0x400f8d2	     11545	option.c	FUNCTION_90	FOR_1	FOR_3	IF_4
0xf72b	        0x488b4588	             mov rax, qword [rbp - 0x78]	     11547	option.c	FUNCTION_90	FOR_1	FOR_3	IF_5
0xf72f	            0x8b00	                    mov eax, dword [rax]	     11547	option.c	FUNCTION_90	FOR_1	FOR_3	IF_5
0xf731	          0x83f805	                              cmp eax, 5	     11547	option.c	FUNCTION_90	FOR_1	FOR_3	IF_5
0xf734	            0x751e	                           jne 0x400f794	     11547	option.c	FUNCTION_90	FOR_1	FOR_3	IF_5
0xf736	          0x8b45a0	             mov eax, dword [rbp - 0x60]	     11548	option.c	FUNCTION_90	FOR_1	FOR_3	IF_5
0xf739	            0x4898	                                    cdqe	     11548	option.c	FUNCTION_90	FOR_1	FOR_3	IF_5
0xf73b	        0x48c1e006	                              shl rax, 6	     11548	option.c	FUNCTION_90	FOR_1	FOR_3	IF_5
0xf73f	    0x480500000000	                              add rax, 0	     11548	option.c	FUNCTION_90	FOR_1	FOR_3	IF_5
0xf745	          0x488b00	                    mov rax, qword [rax]	     11548	option.c	FUNCTION_90	FOR_1	FOR_3	IF_5
0xf748	          0x83e001	                              and eax, 1	     11548	option.c	FUNCTION_90	FOR_1	FOR_3	IF_5
0xf74b	          0x4885c0	                           test rax, rax	     11548	option.c	FUNCTION_90	FOR_1	FOR_3	IF_5
0xf74e	     0xf8441010000	                            je 0x400f8d5	     11548	option.c	FUNCTION_90	FOR_1	FOR_3	IF_5
0xf754	          0x8b45a0	             mov eax, dword [rbp - 0x60]	     11550	option.c	FUNCTION_90	FOR_1	FOR_3	CALL_3
0xf757	            0x4898	                                    cdqe	     11550	option.c	FUNCTION_90	FOR_1	FOR_3	CALL_3
0xf759	        0x48c1e006	                              shl rax, 6	     11550	option.c	FUNCTION_90	FOR_1	FOR_3	CALL_3
0xf75d	    0x480500000000	                              add rax, 0	     11550	option.c	FUNCTION_90	FOR_1	FOR_3	CALL_3
0xf763	          0x4889c7	                            mov rdi, rax	     11550	option.c	FUNCTION_90	FOR_1	FOR_3	CALL_3
0xf766	      0xe8d9cdffff	                   call sym.istermoption	     11550	option.c	FUNCTION_90	FOR_1	FOR_3	CALL_3
0xf76b	          0x8945b4	             mov dword [rbp - 0x4c], eax	     11550	option.c	FUNCTION_90	FOR_1	FOR_3	CALL_3
0xf76e	        0x837db400	               cmp dword [rbp - 0x4c], 0	     11551	option.c	FUNCTION_90	FOR_1	FOR_3	IF_6
0xf772	            0x740a	                            je 0x400f7be	     11551	option.c	FUNCTION_90	FOR_1	FOR_3	IF_6
0xf774	        0x837d9800	               cmp dword [rbp - 0x68], 0	     11551	option.c	FUNCTION_90	FOR_1	FOR_3	IF_6
0xf778	     0xf8f1a010000	                            jg 0x400f8d8	     11551	option.c	FUNCTION_90	FOR_1	FOR_3	IF_6
0xf77e	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	     11553	option.c	FUNCTION_90	FOR_1	FOR_3
0xf785	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	     11554	option.c	FUNCTION_90	FOR_1	FOR_3	IF_7	CALL_4
0xf789	        0x488b4580	             mov rax, qword [rbp - 0x80]	     11554	option.c	FUNCTION_90	FOR_1	FOR_3	IF_7	CALL_4
0xf78d	      0xba00000000	                              mov edx, 0	     11554	option.c	FUNCTION_90	FOR_1	FOR_3	IF_7	CALL_4
0xf792	          0x4889ce	                            mov rsi, rcx	     11554	option.c	FUNCTION_90	FOR_1	FOR_3	IF_7	CALL_4
0xf795	          0x4889c7	                            mov rdi, rax	     11554	option.c	FUNCTION_90	FOR_1	FOR_3	IF_7	CALL_4
0xf798	      0xe800000000	                          call 0x400f7dd	     11554	option.c	FUNCTION_90	FOR_1	FOR_3	IF_7	CALL_4
0xf79d	            0x85c0	                           test eax, eax	     11554	option.c	FUNCTION_90	FOR_1	FOR_3	IF_7	CALL_4
0xf79f	            0x7541	                           jne 0x400f822	     11554	option.c	FUNCTION_90	FOR_1	FOR_3	IF_7	CALL_4
0xf7a1	          0x8b45a0	             mov eax, dword [rbp - 0x60]	     11555	option.c	FUNCTION_90	FOR_1	FOR_3	IF_7
0xf7a4	            0x4898	                                    cdqe	     11555	option.c	FUNCTION_90	FOR_1	FOR_3	IF_7
0xf7a6	        0x48c1e006	                              shl rax, 6	     11555	option.c	FUNCTION_90	FOR_1	FOR_3	IF_7
0xf7aa	    0x480500000000	                              add rax, 0	     11555	option.c	FUNCTION_90	FOR_1	FOR_3	IF_7
0xf7b0	          0x488b00	                    mov rax, qword [rax]	     11555	option.c	FUNCTION_90	FOR_1	FOR_3	IF_7
0xf7b3	          0x4885c0	                           test rax, rax	     11555	option.c	FUNCTION_90	FOR_1	FOR_3	IF_7
0xf7b6	            0x7433	                            je 0x400f82b	     11555	option.c	FUNCTION_90	FOR_1	FOR_3	IF_7
0xf7b8	          0x8b45a0	             mov eax, dword [rbp - 0x60]	     11557	option.c	FUNCTION_90	FOR_1	FOR_3	IF_7
0xf7bb	            0x4898	                                    cdqe	     11557	option.c	FUNCTION_90	FOR_1	FOR_3	IF_7
0xf7bd	        0x48c1e006	                              shl rax, 6	     11557	option.c	FUNCTION_90	FOR_1	FOR_3	IF_7
0xf7c1	    0x480500000000	                              add rax, 0	     11557	option.c	FUNCTION_90	FOR_1	FOR_3	IF_7
0xf7c7	          0x488b08	                    mov rcx, qword [rax]	     11557	option.c	FUNCTION_90	FOR_1	FOR_3	IF_7
0xf7ca	        0x488b4580	             mov rax, qword [rbp - 0x80]	     11556	option.c	FUNCTION_90	FOR_1	FOR_3	IF_7	CALL_5
0xf7ce	      0xba00000000	                              mov edx, 0	     11556	option.c	FUNCTION_90	FOR_1	FOR_3	IF_7	CALL_5
0xf7d3	          0x4889ce	                            mov rsi, rcx	     11556	option.c	FUNCTION_90	FOR_1	FOR_3	IF_7	CALL_5
0xf7d6	          0x4889c7	                            mov rdi, rax	     11556	option.c	FUNCTION_90	FOR_1	FOR_3	IF_7	CALL_5
0xf7d9	      0xe800000000	                          call 0x400f81e	     11556	option.c	FUNCTION_90	FOR_1	FOR_3	IF_7	CALL_5
0xf7de	            0x85c0	                           test eax, eax	     11556	option.c	FUNCTION_90	FOR_1	FOR_3	IF_7	CALL_5
0xf7e0	            0x7409	                            je 0x400f82b	     11556	option.c	FUNCTION_90	FOR_1	FOR_3	IF_7	CALL_5
0xf7e2	    0xc745a4010000	               mov dword [rbp - 0x5c], 1	     11558	option.c	FUNCTION_90	FOR_1	FOR_3	IF_7
0xf7e9	            0xeb5b	                           jmp 0x400f886	     11558	option.c	FUNCTION_90	FOR_1	FOR_3	IF_7
0xf7eb	        0x837db400	               cmp dword [rbp - 0x4c], 0	     11559	option.c	FUNCTION_90	FOR_1	FOR_3	ELSE_2	IF_8
0xf7ef	            0x7455	                            je 0x400f886	     11559	option.c	FUNCTION_90	FOR_1	FOR_3	ELSE_2	IF_8
0xf7f1	        0xc645c03c	            mov byte [rbp - 0x40], 0x3c 	     11561	option.c	FUNCTION_90	FOR_1	FOR_3	ELSE_2	IF_8
0xf7f5	        0xc645c174	            mov byte [rbp - 0x3f], 0x74 	     11562	option.c	FUNCTION_90	FOR_1	FOR_3	ELSE_2	IF_8
0xf7f9	        0xc645c25f	            mov byte [rbp - 0x3e], 0x5f 	     11563	option.c	FUNCTION_90	FOR_1	FOR_3	ELSE_2	IF_8
0xf7fd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	     11564	option.c	FUNCTION_90	FOR_1	FOR_3	ELSE_2	IF_8
0xf801	         0xfb64002	               movzx eax, byte [rax + 2]	     11564	option.c	FUNCTION_90	FOR_1	FOR_3	ELSE_2	IF_8
0xf805	          0x8845c3	               mov byte [rbp - 0x3d], al	     11564	option.c	FUNCTION_90	FOR_1	FOR_3	ELSE_2	IF_8
0xf808	        0x488b45b8	             mov rax, qword [rbp - 0x48]	     11565	option.c	FUNCTION_90	FOR_1	FOR_3	ELSE_2	IF_8
0xf80c	         0xfb64003	               movzx eax, byte [rax + 3]	     11565	option.c	FUNCTION_90	FOR_1	FOR_3	ELSE_2	IF_8
0xf810	          0x8845c4	               mov byte [rbp - 0x3c], al	     11565	option.c	FUNCTION_90	FOR_1	FOR_3	ELSE_2	IF_8
0xf813	        0xc645c53e	            mov byte [rbp - 0x3b], 0x3e 	     11566	option.c	FUNCTION_90	FOR_1	FOR_3	ELSE_2	IF_8
0xf817	        0xc645c600	                mov byte [rbp - 0x3a], 0	     11567	option.c	FUNCTION_90	FOR_1	FOR_3	ELSE_2	IF_8
0xf81b	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	     11568	option.c	FUNCTION_90	FOR_1	FOR_3	ELSE_2	IF_8	IF_9	CALL_6
0xf81f	        0x488b4580	             mov rax, qword [rbp - 0x80]	     11568	option.c	FUNCTION_90	FOR_1	FOR_3	ELSE_2	IF_8	IF_9	CALL_6
0xf823	      0xba00000000	                              mov edx, 0	     11568	option.c	FUNCTION_90	FOR_1	FOR_3	ELSE_2	IF_8	IF_9	CALL_6
0xf828	          0x4889ce	                            mov rsi, rcx	     11568	option.c	FUNCTION_90	FOR_1	FOR_3	ELSE_2	IF_8	IF_9	CALL_6
0xf82b	          0x4889c7	                            mov rdi, rax	     11568	option.c	FUNCTION_90	FOR_1	FOR_3	ELSE_2	IF_8	IF_9	CALL_6
0xf82e	      0xe800000000	                          call 0x400f873	     11568	option.c	FUNCTION_90	FOR_1	FOR_3	ELSE_2	IF_8	IF_9	CALL_6
0xf833	            0x85c0	                           test eax, eax	     11568	option.c	FUNCTION_90	FOR_1	FOR_3	ELSE_2	IF_8	IF_9	CALL_6
0xf835	            0x740f	                            je 0x400f886	     11568	option.c	FUNCTION_90	FOR_1	FOR_3	ELSE_2	IF_8	IF_9	CALL_6
0xf837	    0xc745a4010000	               mov dword [rbp - 0x5c], 1	     11570	option.c	FUNCTION_90	FOR_1	FOR_3	ELSE_2	IF_8	IF_9
0xf83e	        0x488d45c0	                   lea rax, [rbp - 0x40]	     11571	option.c	FUNCTION_90	FOR_1	FOR_3	ELSE_2	IF_8	IF_9
0xf842	        0x488945b8	             mov qword [rbp - 0x48], rax	     11571	option.c	FUNCTION_90	FOR_1	FOR_3	ELSE_2	IF_8	IF_9
0xf846	        0x837da400	               cmp dword [rbp - 0x5c], 0	     11574	option.c	FUNCTION_90	FOR_1	FOR_3	IF_10
0xf84a	            0x744d	                            je 0x400f8d9	     11574	option.c	FUNCTION_90	FOR_1	FOR_3	IF_10
0xf84c	        0x837dac00	               cmp dword [rbp - 0x54], 0	     11576	option.c	FUNCTION_90	FOR_1	FOR_3	IF_10	IF_11
0xf850	            0x7512	                           jne 0x400f8a4	     11576	option.c	FUNCTION_90	FOR_1	FOR_3	IF_10	IF_11
0xf852	        0x837db400	               cmp dword [rbp - 0x4c], 0	     11578	option.c	FUNCTION_90	FOR_1	FOR_3	IF_10	IF_11	IF_12
0xf856	            0x7406	                            je 0x400f89e	     11578	option.c	FUNCTION_90	FOR_1	FOR_3	IF_10	IF_11	IF_12
0xf858	        0x83459c01	               add dword [rbp - 0x64], 1	     11579	option.c	FUNCTION_90	FOR_1	FOR_3	IF_10	IF_11	IF_12
0xf85c	            0xeb3b	                           jmp 0x400f8d9	     11579	option.c	FUNCTION_90	FOR_1	FOR_3	IF_10	IF_11	IF_12
0xf85e	        0x83459801	               add dword [rbp - 0x68], 1	     11581	option.c	FUNCTION_90	FOR_1	FOR_3	IF_10	IF_11	ELSE_3
0xf862	            0xeb35	                           jmp 0x400f8d9	     11581	option.c	FUNCTION_90	FOR_1	FOR_3	IF_10	IF_11	ELSE_3
0xf864	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	     11584	option.c	FUNCTION_90	FOR_1	FOR_3	IF_10	CALL_7
0xf86b	          0x488b08	                    mov rcx, qword [rax]	     11584	option.c	FUNCTION_90	FOR_1	FOR_3	IF_10	CALL_7
0xf86e	          0x8b45a8	             mov eax, dword [rbp - 0x58]	     11584	option.c	FUNCTION_90	FOR_1	FOR_3	IF_10	CALL_7
0xf871	          0x8d5001	                      lea edx, [rax + 1]	     11584	option.c	FUNCTION_90	FOR_1	FOR_3	IF_10	CALL_7
0xf874	          0x8955a8	             mov dword [rbp - 0x58], edx	     11584	option.c	FUNCTION_90	FOR_1	FOR_3	IF_10	CALL_7
0xf877	            0x4898	                                    cdqe	     11584	option.c	FUNCTION_90	FOR_1	FOR_3	IF_10	CALL_7
0xf879	        0x48c1e003	                              shl rax, 3	     11584	option.c	FUNCTION_90	FOR_1	FOR_3	IF_10	CALL_7
0xf87d	        0x488d1c01	                    lea rbx, [rcx + rax]	     11584	option.c	FUNCTION_90	FOR_1	FOR_3	IF_10	CALL_7
0xf881	        0x488b45b8	             mov rax, qword [rbp - 0x48]	     11584	option.c	FUNCTION_90	FOR_1	FOR_3	IF_10	CALL_7
0xf885	          0x4889c7	                            mov rdi, rax	     11584	option.c	FUNCTION_90	FOR_1	FOR_3	IF_10	CALL_7
0xf888	      0xe800000000	                          call 0x400f8cd	     11584	option.c	FUNCTION_90	FOR_1	FOR_3	IF_10	CALL_7
0xf88d	          0x488903	                    mov qword [rbx], rax	     11584	option.c	FUNCTION_90	FOR_1	FOR_3	IF_10	CALL_7
0xf890	            0xeb07	                           jmp 0x400f8d9	     11584	option.c	FUNCTION_90	FOR_1	FOR_3	IF_10	CALL_7
0xf892	              0x90	                                     nop	     11546	option.c	FUNCTION_90	FOR_1	FOR_3	IF_4
0xf893	            0xeb04	                           jmp 0x400f8d9	     11546	option.c	FUNCTION_90	FOR_1	FOR_3	IF_4
0xf895	              0x90	                                     nop	     11549	option.c	FUNCTION_90	FOR_1	FOR_3	IF_5
0xf896	            0xeb01	                           jmp 0x400f8d9	     11549	option.c	FUNCTION_90	FOR_1	FOR_3	IF_5
0xf898	              0x90	                                     nop	     11552	option.c	FUNCTION_90	FOR_1	FOR_3	IF_6
0xf899	        0x8345a001	               add dword [rbp - 0x60], 1	     11543	option.c	FUNCTION_90	FOR_1	FOR_3
0xf89d	          0x8b45a0	             mov eax, dword [rbp - 0x60]	     11542	option.c	FUNCTION_90	FOR_1	FOR_3
0xf8a0	            0x4898	                                    cdqe	     11542	option.c	FUNCTION_90	FOR_1	FOR_3
0xf8a2	        0x48c1e006	                              shl rax, 6	     11542	option.c	FUNCTION_90	FOR_1	FOR_3
0xf8a6	    0x480500000000	                              add rax, 0	     11542	option.c	FUNCTION_90	FOR_1	FOR_3
0xf8ac	          0x488b00	                    mov rax, qword [rax]	     11542	option.c	FUNCTION_90	FOR_1	FOR_3
0xf8af	        0x488945b8	             mov qword [rbp - 0x48], rax	     11542	option.c	FUNCTION_90	FOR_1	FOR_3
0xf8b3	      0x48837db800	               cmp qword [rbp - 0x48], 0	     11542	option.c	FUNCTION_90	FOR_1	FOR_3
0xf8b8	     0xf8552feffff	                           jne 0x400f750	     11542	option.c	FUNCTION_90	FOR_1	FOR_3
0xf8be	        0x488b4588	             mov rax, qword [rbp - 0x78]	     11590	option.c	FUNCTION_90	FOR_1	IF_13
0xf8c2	            0x8b00	                    mov eax, dword [rax]	     11590	option.c	FUNCTION_90	FOR_1	IF_13
0xf8c4	          0x83f805	                              cmp eax, 5	     11590	option.c	FUNCTION_90	FOR_1	IF_13
0xf8c7	     0xf843b020000	                            je 0x400fb48	     11590	option.c	FUNCTION_90	FOR_1	IF_13
0xf8cd	        0x837d9800	               cmp dword [rbp - 0x68], 0	     11590	option.c	FUNCTION_90	FOR_1	IF_13
0xf8d1	     0xf8531020000	                           jne 0x400fb48	     11590	option.c	FUNCTION_90	FOR_1	IF_13
0xf8d7	    0xc745a0000000	               mov dword [rbp - 0x60], 0	     11592	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	CALL_8
0xf8de	      0xe938010000	                           jmp 0x400fa5b	     11592	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	CALL_8
0xf8e3	      0xe800000000	                          call 0x400f928	     11594	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0xf8e8	          0x488b10	                    mov rdx, qword [rax]	     11594	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0xf8eb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	     11594	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0xf8ef	           0xfb600	                   movzx eax, byte [rax]	     11594	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0xf8f2	           0xfb6c0	                           movzx eax, al	     11594	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0xf8f5	          0x4801c0	                            add rax, rax	     11594	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0xf8f8	          0x4801d0	                            add rax, rdx	     11594	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0xf8fb	           0xfb700	                   movzx eax, word [rax]	     11594	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0xf8fe	           0xfb7c0	                           movzx eax, ax	     11594	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0xf901	      0x2500400000	                         and eax, 0x4000	     11594	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0xf906	            0x85c0	                           test eax, eax	     11594	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0xf908	     0xf8408010000	                            je 0x400fa56	     11594	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0xf90e	      0xe800000000	                          call 0x400f953	     11594	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0xf913	          0x488b00	                    mov rax, qword [rax]	     11594	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0xf916	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	     11594	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0xf91a	        0x4883c201	                              add rdx, 1	     11594	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0xf91e	           0xfb612	                   movzx edx, byte [rdx]	     11594	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0xf921	           0xfb6d2	                           movzx edx, dl	     11594	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0xf924	          0x4801d2	                            add rdx, rdx	     11594	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0xf927	          0x4801d0	                            add rax, rdx	     11594	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0xf92a	           0xfb700	                   movzx eax, word [rax]	     11594	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0xf92d	           0xfb7c0	                           movzx eax, ax	     11594	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0xf930	      0x2500400000	                         and eax, 0x4000	     11594	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0xf935	            0x85c0	                           test eax, eax	     11594	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0xf937	     0xf84d9000000	                            je 0x400fa56	     11594	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0xf93d	        0xc645c074	            mov byte [rbp - 0x40], 0x74 	     11597	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4
0xf941	        0xc645c15f	            mov byte [rbp - 0x3f], 0x5f 	     11598	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4
0xf945	        0x488b45b8	             mov rax, qword [rbp - 0x48]	     11599	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4
0xf949	           0xfb600	                   movzx eax, byte [rax]	     11599	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4
0xf94c	          0x8845c2	               mov byte [rbp - 0x3e], al	     11599	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4
0xf94f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	     11600	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4
0xf953	         0xfb64001	               movzx eax, byte [rax + 1]	     11600	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4
0xf957	          0x8845c3	               mov byte [rbp - 0x3d], al	     11600	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4
0xf95a	        0xc645c400	                mov byte [rbp - 0x3c], 0	     11601	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4
0xf95e	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	     11603	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4
0xf965	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	     11604	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_15	CALL_11
0xf969	        0x488b4580	             mov rax, qword [rbp - 0x80]	     11604	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_15	CALL_11
0xf96d	      0xba00000000	                              mov edx, 0	     11604	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_15	CALL_11
0xf972	          0x4889ce	                            mov rsi, rcx	     11604	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_15	CALL_11
0xf975	          0x4889c7	                            mov rdi, rax	     11604	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_15	CALL_11
0xf978	      0xe800000000	                          call 0x400f9bd	     11604	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_15	CALL_11
0xf97d	            0x85c0	                           test eax, eax	     11604	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_15	CALL_11
0xf97f	            0x7409	                            je 0x400f9ca	     11604	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_15	CALL_11
0xf981	    0xc745a4010000	               mov dword [rbp - 0x5c], 1	     11605	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_15
0xf988	            0xeb4c	                           jmp 0x400fa16	     11605	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_15
0xf98a	        0xc645c03c	            mov byte [rbp - 0x40], 0x3c 	     11608	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	ELSE_5
0xf98e	        0xc645c174	            mov byte [rbp - 0x3f], 0x74 	     11609	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	ELSE_5
0xf992	        0xc645c25f	            mov byte [rbp - 0x3e], 0x5f 	     11610	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	ELSE_5
0xf996	        0x488b45b8	             mov rax, qword [rbp - 0x48]	     11611	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	ELSE_5
0xf99a	           0xfb600	                   movzx eax, byte [rax]	     11611	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	ELSE_5
0xf99d	          0x8845c3	               mov byte [rbp - 0x3d], al	     11611	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	ELSE_5
0xf9a0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	     11612	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	ELSE_5
0xf9a4	         0xfb64001	               movzx eax, byte [rax + 1]	     11612	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	ELSE_5
0xf9a8	          0x8845c4	               mov byte [rbp - 0x3c], al	     11612	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	ELSE_5
0xf9ab	        0xc645c53e	            mov byte [rbp - 0x3b], 0x3e 	     11613	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	ELSE_5
0xf9af	        0xc645c600	                mov byte [rbp - 0x3a], 0	     11614	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	ELSE_5
0xf9b3	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	     11616	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	ELSE_5	IF_16	CALL_12
0xf9b7	        0x488b4580	             mov rax, qword [rbp - 0x80]	     11616	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	ELSE_5	IF_16	CALL_12
0xf9bb	      0xba00000000	                              mov edx, 0	     11616	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	ELSE_5	IF_16	CALL_12
0xf9c0	          0x4889ce	                            mov rsi, rcx	     11616	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	ELSE_5	IF_16	CALL_12
0xf9c3	          0x4889c7	                            mov rdi, rax	     11616	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	ELSE_5	IF_16	CALL_12
0xf9c6	      0xe800000000	                          call 0x400fa0b	     11616	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	ELSE_5	IF_16	CALL_12
0xf9cb	            0x85c0	                           test eax, eax	     11616	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	ELSE_5	IF_16	CALL_12
0xf9cd	            0x7407	                            je 0x400fa16	     11616	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	ELSE_5	IF_16	CALL_12
0xf9cf	    0xc745a4010000	               mov dword [rbp - 0x5c], 1	     11617	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	ELSE_5	IF_16
0xf9d6	        0x837da400	               cmp dword [rbp - 0x5c], 0	     11619	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_17
0xf9da	            0x743b	                            je 0x400fa57	     11619	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_17
0xf9dc	        0x837dac00	               cmp dword [rbp - 0x54], 0	     11621	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_17	IF_18
0xf9e0	            0x7506	                           jne 0x400fa28	     11621	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_17	IF_18
0xf9e2	        0x83459c01	               add dword [rbp - 0x64], 1	     11622	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_17	IF_18
0xf9e6	            0xeb2f	                           jmp 0x400fa57	     11622	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_17	IF_18
0xf9e8	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	     11624	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0xf9ef	          0x488b08	                    mov rcx, qword [rax]	     11624	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0xf9f2	          0x8b45a8	             mov eax, dword [rbp - 0x58]	     11624	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0xf9f5	          0x8d5001	                      lea edx, [rax + 1]	     11624	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0xf9f8	          0x8955a8	             mov dword [rbp - 0x58], edx	     11624	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0xf9fb	            0x4898	                                    cdqe	     11624	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0xf9fd	        0x48c1e003	                              shl rax, 3	     11624	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0xfa01	        0x488d1c01	                    lea rbx, [rcx + rax]	     11624	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0xfa05	        0x488d45c0	                   lea rax, [rbp - 0x40]	     11624	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0xfa09	          0x4889c7	                            mov rdi, rax	     11624	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0xfa0c	      0xe800000000	                          call 0x400fa51	     11624	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0xfa11	          0x488903	                    mov qword [rbx], rax	     11624	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0xfa14	            0xeb01	                           jmp 0x400fa57	     11624	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0xfa16	              0x90	                                     nop	     11595	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	IF_14
0xfa17	        0x8345a001	               add dword [rbp - 0x60], 1	     11592	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	CALL_8
0xfa1b	          0x8b45a0	             mov eax, dword [rbp - 0x60]	     11592	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	CALL_8
0xfa1e	            0x89c7	                            mov edi, eax	     11592	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	CALL_8
0xfa20	      0xe800000000	                          call 0x400fa65	     11592	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	CALL_8
0xfa25	        0x488945b8	             mov qword [rbp - 0x48], rax	     11592	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	CALL_8
0xfa29	      0x48837db800	               cmp qword [rbp - 0x48], 0	     11592	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	CALL_8
0xfa2e	     0xf85affeffff	                           jne 0x400f923	     11592	option.c	FUNCTION_90	FOR_1	IF_13	FOR_4	CALL_8
0xfa34	        0x488b4580	             mov rax, qword [rbp - 0x80]	     11631	option.c	FUNCTION_90	FOR_1	IF_13
0xfa38	    0xc780a8000000	               mov dword [rax + 0xa8], 1	     11631	option.c	FUNCTION_90	FOR_1	IF_13
0xfa42	    0xc745a0000000	               mov dword [rbp - 0x60], 0	     11632	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	CALL_14
0xfa49	      0xe9a1000000	                           jmp 0x400fb2f	     11632	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	CALL_14
0xfa4e	        0xc645c03c	            mov byte [rbp - 0x40], 0x3c 	     11634	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5
0xfa52	        0x488d45c0	                   lea rax, [rbp - 0x40]	     11635	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	CALL_15
0xfa56	        0x4883c001	                              add rax, 1	     11635	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	CALL_15
0xfa5a	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	     11635	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	CALL_15
0xfa5e	          0x4889d6	                            mov rsi, rdx	     11635	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	CALL_15
0xfa61	          0x4889c7	                            mov rdi, rax	     11635	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	CALL_15
0xfa64	      0xe800000000	                          call 0x400faa9	     11635	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	CALL_15
0xfa69	        0x488d45c0	                   lea rax, [rbp - 0x40]	     11636	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	CALL_16
0xfa6d	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	     11636	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	CALL_16
0xfa74	          0x4889c2	                            mov rdx, rax	     11636	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	CALL_16
0xfa77	      0xb800000000	                              mov eax, 0	     11636	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	CALL_16
0xfa7c	          0x4889d7	                            mov rdi, rdx	     11636	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	CALL_16
0xfa7f	            0xf2ae	              repne scasb al, byte [rdi]	     11636	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	CALL_16
0xfa81	          0x4889c8	                            mov rax, rcx	     11636	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	CALL_16
0xfa84	          0x48f7d0	                                 not rax	     11636	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	CALL_16
0xfa87	        0x488d50ff	                      lea rdx, [rax - 1]	     11636	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	CALL_16
0xfa8b	        0x488d45c0	                   lea rax, [rbp - 0x40]	     11636	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	CALL_16
0xfa8f	          0x4801d0	                            add rax, rdx	     11636	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	CALL_16
0xfa92	      0x66c7003e00	                    mov word [rax], 0x3e	     11636	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	CALL_16
0xfa97	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	     11638	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	IF_19	CALL_17
0xfa9b	        0x488b4580	             mov rax, qword [rbp - 0x80]	     11638	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	IF_19	CALL_17
0xfa9f	      0xba00000000	                              mov edx, 0	     11638	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	IF_19	CALL_17
0xfaa4	          0x4889ce	                            mov rsi, rcx	     11638	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	IF_19	CALL_17
0xfaa7	          0x4889c7	                            mov rdi, rax	     11638	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	IF_19	CALL_17
0xfaaa	      0xe800000000	                          call 0x400faef	     11638	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	IF_19	CALL_17
0xfaaf	            0x85c0	                           test eax, eax	     11638	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	IF_19	CALL_17
0xfab1	            0x7438	                            je 0x400fb2b	     11638	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	IF_19	CALL_17
0xfab3	        0x837dac00	               cmp dword [rbp - 0x54], 0	     11640	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	IF_19	IF_20
0xfab7	            0x7506	                           jne 0x400faff	     11640	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	IF_19	IF_20
0xfab9	        0x83459c01	               add dword [rbp - 0x64], 1	     11641	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	IF_19	IF_20
0xfabd	            0xeb2c	                           jmp 0x400fb2b	     11641	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	IF_19	IF_20
0xfabf	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	     11643	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	IF_19	CALL_18
0xfac6	          0x488b08	                    mov rcx, qword [rax]	     11643	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	IF_19	CALL_18
0xfac9	          0x8b45a8	             mov eax, dword [rbp - 0x58]	     11643	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	IF_19	CALL_18
0xfacc	          0x8d5001	                      lea edx, [rax + 1]	     11643	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	IF_19	CALL_18
0xfacf	          0x8955a8	             mov dword [rbp - 0x58], edx	     11643	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	IF_19	CALL_18
0xfad2	            0x4898	                                    cdqe	     11643	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	IF_19	CALL_18
0xfad4	        0x48c1e003	                              shl rax, 3	     11643	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	IF_19	CALL_18
0xfad8	        0x488d1c01	                    lea rbx, [rcx + rax]	     11643	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	IF_19	CALL_18
0xfadc	        0x488d45c0	                   lea rax, [rbp - 0x40]	     11643	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	IF_19	CALL_18
0xfae0	          0x4889c7	                            mov rdi, rax	     11643	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	IF_19	CALL_18
0xfae3	      0xe800000000	                          call 0x400fb28	     11643	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	IF_19	CALL_18
0xfae8	          0x488903	                    mov qword [rbx], rax	     11643	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	IF_19	CALL_18
0xfaeb	        0x8345a001	               add dword [rbp - 0x60], 1	     11632	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	CALL_14
0xfaef	          0x8b45a0	             mov eax, dword [rbp - 0x60]	     11632	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	CALL_14
0xfaf2	            0x89c7	                            mov edi, eax	     11632	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	CALL_14
0xfaf4	      0xe800000000	                          call 0x400fb39	     11632	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	CALL_14
0xfaf9	        0x488945b8	             mov qword [rbp - 0x48], rax	     11632	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	CALL_14
0xfafd	      0x48837db800	               cmp qword [rbp - 0x48], 0	     11632	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	CALL_14
0xfb02	     0xf8546ffffff	                           jne 0x400fa8e	     11632	option.c	FUNCTION_90	FOR_1	IF_13	FOR_5	CALL_14
0xfb08	        0x837dac00	               cmp dword [rbp - 0x54], 0	     11647	option.c	FUNCTION_90	FOR_1	IF_21
0xfb0c	            0x7575	                           jne 0x400fbc3	     11647	option.c	FUNCTION_90	FOR_1	IF_21
0xfb0e	        0x837d9800	               cmp dword [rbp - 0x68], 0	     11649	option.c	FUNCTION_90	FOR_1	IF_21	IF_22
0xfb12	            0x7e0e	                           jle 0x400fb62	     11649	option.c	FUNCTION_90	FOR_1	IF_21	IF_22
0xfb14	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	     11650	option.c	FUNCTION_90	FOR_1	IF_21	IF_22
0xfb1b	          0x8b5598	             mov edx, dword [rbp - 0x68]	     11650	option.c	FUNCTION_90	FOR_1	IF_21	IF_22
0xfb1e	            0x8910	                    mov dword [rax], edx	     11650	option.c	FUNCTION_90	FOR_1	IF_21	IF_22
0xfb20	            0xeb1b	                           jmp 0x400fb7d	     11650	option.c	FUNCTION_90	FOR_1	IF_21	IF_22
0xfb22	        0x837d9c00	               cmp dword [rbp - 0x64], 0	     11651	option.c	FUNCTION_90	FOR_1	IF_21	ELSE_8	IF_23
0xfb26	            0x7e0e	                           jle 0x400fb76	     11651	option.c	FUNCTION_90	FOR_1	IF_21	ELSE_8	IF_23
0xfb28	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	     11652	option.c	FUNCTION_90	FOR_1	IF_21	ELSE_8	IF_23
0xfb2f	          0x8b559c	             mov edx, dword [rbp - 0x64]	     11652	option.c	FUNCTION_90	FOR_1	IF_21	ELSE_8	IF_23
0xfb32	            0x8910	                    mov dword [rax], edx	     11652	option.c	FUNCTION_90	FOR_1	IF_21	ELSE_8	IF_23
0xfb34	            0xeb07	                           jmp 0x400fb7d	     11652	option.c	FUNCTION_90	FOR_1	IF_21	ELSE_8	IF_23
0xfb36	      0xb801000000	                              mov eax, 1	     11654	option.c	FUNCTION_90	FOR_1	IF_21	ELSE_9
0xfb3b	            0xeb59	                           jmp 0x400fbd6	     11654	option.c	FUNCTION_90	FOR_1	IF_21	ELSE_9
0xfb3d	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	     11655	option.c	FUNCTION_90	FOR_1	IF_21	CALL_19
0xfb44	            0x8b00	                    mov eax, dword [rax]	     11655	option.c	FUNCTION_90	FOR_1	IF_21	CALL_19
0xfb46	            0x4898	                                    cdqe	     11655	option.c	FUNCTION_90	FOR_1	IF_21	CALL_19
0xfb48	          0xc1e003	                              shl eax, 3	     11655	option.c	FUNCTION_90	FOR_1	IF_21	CALL_19
0xfb4b	            0x89c7	                            mov edi, eax	     11655	option.c	FUNCTION_90	FOR_1	IF_21	CALL_19
0xfb4d	      0xe800000000	                          call 0x400fb92	     11655	option.c	FUNCTION_90	FOR_1	IF_21	CALL_19
0xfb52	          0x4889c2	                            mov rdx, rax	     11655	option.c	FUNCTION_90	FOR_1	IF_21	CALL_19
0xfb55	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	     11655	option.c	FUNCTION_90	FOR_1	IF_21	CALL_19
0xfb5c	          0x488910	                    mov qword [rax], rdx	     11655	option.c	FUNCTION_90	FOR_1	IF_21	CALL_19
0xfb5f	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	     11656	option.c	FUNCTION_90	FOR_1	IF_21	IF_24
0xfb66	          0x488b00	                    mov rax, qword [rax]	     11656	option.c	FUNCTION_90	FOR_1	IF_21	IF_24
0xfb69	          0x4885c0	                           test rax, rax	     11656	option.c	FUNCTION_90	FOR_1	IF_21	IF_24
0xfb6c	            0x7515	                           jne 0x400fbc3	     11656	option.c	FUNCTION_90	FOR_1	IF_21	IF_24
0xfb6e	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	     11658	option.c	FUNCTION_90	FOR_1	IF_21	IF_24
0xfb75	    0x48c700000000	                      mov qword [rax], 0	     11658	option.c	FUNCTION_90	FOR_1	IF_21	IF_24
0xfb7c	      0xb800000000	                              mov eax, 0	     11659	option.c	FUNCTION_90	FOR_1	IF_21	IF_24
0xfb81	            0xeb13	                           jmp 0x400fbd6	     11659	option.c	FUNCTION_90	FOR_1	IF_21	IF_24
0xfb83	        0x8345ac01	               add dword [rbp - 0x54], 1	     11527	option.c	FUNCTION_90	FOR_1
0xfb87	        0x837dac01	               cmp dword [rbp - 0x54], 1	     11527	option.c	FUNCTION_90	FOR_1
0xfb8b	     0xf8ee2faffff	                           jle 0x400f6b3	     11527	option.c	FUNCTION_90	FOR_1
0xfb91	      0xb801000000	                              mov eax, 1	     11663	option.c	FUNCTION_90
0xfb96	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	     11664	option.c	FUNCTION_90
0xfb9a	    0x6448331c2528	                xor rbx, qword fs:[0x28]	     11664	option.c	FUNCTION_90
0xfba3	            0x7405	                            je 0x400fbea	     11664	option.c	FUNCTION_90
0xfba5	      0xe800000000	                          call 0x400fbea	     11664	option.c	FUNCTION_90
0xfbaa	    0x4881c4880000	                           add rsp, 0x88	     11664	option.c	FUNCTION_90
0xfbb1	              0x5b	                                 pop rbx	     11664	option.c	FUNCTION_90
0xfbb2	              0x5d	                                 pop rbp	     11664	option.c	FUNCTION_90
0xfbb3	              0xc3	                                     ret	     11664	option.c	FUNCTION_90
set_string_default	WHILE,0:SWITCH,0:CALL,3:FOR,0:ELSE,0:DO,0:IF,3:functions,0	53
0xb08	              0x55	                                push rbp	      3847	option.c	FUNCTION_5
0xb09	          0x4889e5	                            mov rbp, rsp	      3847	option.c	FUNCTION_5
0xb0c	        0x4883ec20	                           sub rsp, 0x20	      3847	option.c	FUNCTION_5
0xb10	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3847	option.c	FUNCTION_5
0xb14	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3847	option.c	FUNCTION_5
0xb18	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3851	option.c	FUNCTION_5	CALL_1
0xb1c	          0x4889c7	                            mov rdi, rax	      3851	option.c	FUNCTION_5	CALL_1
0xb1f	      0xe800000000	                          call 0x4000b64	      3851	option.c	FUNCTION_5	CALL_1
0xb24	        0x488945f8	                mov qword [rbp - 8], rax	      3851	option.c	FUNCTION_5	CALL_1
0xb28	      0x48837df800	                  cmp qword [rbp - 8], 0	      3852	option.c	FUNCTION_5	IF_1
0xb2d	     0xf848b000000	                            je 0x4000bfe	      3852	option.c	FUNCTION_5	IF_1
0xb33	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3854	option.c	FUNCTION_5	IF_1	CALL_2
0xb37	          0x4889c7	                            mov rdi, rax	      3854	option.c	FUNCTION_5	IF_1	CALL_2
0xb3a	      0xe847a20000	                     call sym.findoption	      3854	option.c	FUNCTION_5	IF_1	CALL_2
0xb3f	          0x8945f4	              mov dword [rbp - 0xc], eax	      3854	option.c	FUNCTION_5	IF_1	CALL_2
0xb42	        0x837df400	                cmp dword [rbp - 0xc], 0	      3855	option.c	FUNCTION_5	IF_1	IF_2
0xb46	            0x7876	                            js 0x4000bfe	      3855	option.c	FUNCTION_5	IF_1	IF_2
0xb48	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3857	option.c	FUNCTION_5	IF_1	IF_2	IF_3
0xb4b	            0x4898	                                    cdqe	      3857	option.c	FUNCTION_5	IF_1	IF_2	IF_3
0xb4d	        0x48c1e006	                              shl rax, 6	      3857	option.c	FUNCTION_5	IF_1	IF_2	IF_3
0xb51	    0x480500000000	                              add rax, 0	      3857	option.c	FUNCTION_5	IF_1	IF_2	IF_3
0xb57	          0x488b00	                    mov rax, qword [rax]	      3857	option.c	FUNCTION_5	IF_1	IF_2	IF_3
0xb5a	      0x2580000000	                           and eax, 0x80	      3857	option.c	FUNCTION_5	IF_1	IF_2	IF_3
0xb5f	          0x4885c0	                           test rax, rax	      3857	option.c	FUNCTION_5	IF_1	IF_2	IF_3
0xb62	            0x741a	                            je 0x4000bbe	      3857	option.c	FUNCTION_5	IF_1	IF_2	IF_3
0xb64	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3858	option.c	FUNCTION_5	IF_1	IF_2	CALL_3
0xb67	            0x4898	                                    cdqe	      3858	option.c	FUNCTION_5	IF_1	IF_2	CALL_3
0xb69	        0x48c1e006	                              shl rax, 6	      3858	option.c	FUNCTION_5	IF_1	IF_2	CALL_3
0xb6d	    0x480500000000	                              add rax, 0	      3858	option.c	FUNCTION_5	IF_1	IF_2	CALL_3
0xb73	          0x488b00	                    mov rax, qword [rax]	      3858	option.c	FUNCTION_5	IF_1	IF_2	CALL_3
0xb76	          0x4889c7	                            mov rdi, rax	      3858	option.c	FUNCTION_5	IF_1	IF_2	CALL_3
0xb79	      0xe800000000	                          call 0x4000bbe	      3858	option.c	FUNCTION_5	IF_1	IF_2	CALL_3
0xb7e	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3859	option.c	FUNCTION_5	IF_1	IF_2
0xb81	            0x4898	                                    cdqe	      3859	option.c	FUNCTION_5	IF_1	IF_2
0xb83	        0x48c1e006	                              shl rax, 6	      3859	option.c	FUNCTION_5	IF_1	IF_2
0xb87	    0x488d90000000	                          lea rdx, [rax]	      3859	option.c	FUNCTION_5	IF_1	IF_2
0xb8e	        0x488b45f8	                mov rax, qword [rbp - 8]	      3859	option.c	FUNCTION_5	IF_1	IF_2
0xb92	          0x488902	                    mov qword [rdx], rax	      3859	option.c	FUNCTION_5	IF_1	IF_2
0xb95	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3860	option.c	FUNCTION_5	IF_1	IF_2
0xb98	            0x4898	                                    cdqe	      3860	option.c	FUNCTION_5	IF_1	IF_2
0xb9a	        0x48c1e006	                              shl rax, 6	      3860	option.c	FUNCTION_5	IF_1	IF_2
0xb9e	    0x480500000000	                              add rax, 0	      3860	option.c	FUNCTION_5	IF_1	IF_2
0xba4	          0x488b00	                    mov rax, qword [rax]	      3860	option.c	FUNCTION_5	IF_1	IF_2
0xba7	             0xc80	                             or al, 0x80	      3860	option.c	FUNCTION_5	IF_1	IF_2
0xba9	          0x4889c2	                            mov rdx, rax	      3860	option.c	FUNCTION_5	IF_1	IF_2
0xbac	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3860	option.c	FUNCTION_5	IF_1	IF_2
0xbaf	            0x4898	                                    cdqe	      3860	option.c	FUNCTION_5	IF_1	IF_2
0xbb1	        0x48c1e006	                              shl rax, 6	      3860	option.c	FUNCTION_5	IF_1	IF_2
0xbb5	    0x480500000000	                              add rax, 0	      3860	option.c	FUNCTION_5	IF_1	IF_2
0xbbb	          0x488910	                    mov qword [rax], rdx	      3860	option.c	FUNCTION_5	IF_1	IF_2
0xbbe	              0x90	                                     nop	      3863	option.c	FUNCTION_5
0xbbf	              0xc9	                                   leave	      3863	option.c	FUNCTION_5
0xbc0	              0xc3	                                     ret	      3863	option.c	FUNCTION_5
clear_string_option	WHILE,0:SWITCH,0:CALL,1:FOR,0:ELSE,0:DO,0:IF,1:functions,0	19
0x4506	              0x55	                                push rbp	      5728	option.c	FUNCTION_31
0x4507	          0x4889e5	                            mov rbp, rsp	      5728	option.c	FUNCTION_31
0x450a	        0x4883ec10	                           sub rsp, 0x10	      5728	option.c	FUNCTION_31
0x450e	        0x48897df8	                mov qword [rbp - 8], rdi	      5728	option.c	FUNCTION_31
0x4512	        0x488b45f8	                mov rax, qword [rbp - 8]	      5729	option.c	FUNCTION_31	IF_1
0x4516	          0x488b10	                    mov rdx, qword [rax]	      5729	option.c	FUNCTION_31	IF_1
0x4519	    0x488b05000000	            mov rax, qword [0x04004560] 	      5729	option.c	FUNCTION_31	IF_1
0x4520	          0x4839c2	                            cmp rdx, rax	      5729	option.c	FUNCTION_31	IF_1
0x4523	            0x740f	                            je 0x4004574	      5729	option.c	FUNCTION_31	IF_1
0x4525	        0x488b45f8	                mov rax, qword [rbp - 8]	      5730	option.c	FUNCTION_31	CALL_1
0x4529	          0x488b00	                    mov rax, qword [rax]	      5730	option.c	FUNCTION_31	CALL_1
0x452c	          0x4889c7	                            mov rdi, rax	      5730	option.c	FUNCTION_31	CALL_1
0x452f	      0xe800000000	                          call 0x4004574	      5730	option.c	FUNCTION_31	CALL_1
0x4534	    0x488b15000000	            mov rdx, qword [0x0400457b] 	      5731	option.c	FUNCTION_31
0x453b	        0x488b45f8	                mov rax, qword [rbp - 8]	      5731	option.c	FUNCTION_31
0x453f	          0x488910	                    mov qword [rax], rdx	      5731	option.c	FUNCTION_31
0x4542	              0x90	                                     nop	      5732	option.c	FUNCTION_31
0x4543	              0xc9	                                   leave	      5732	option.c	FUNCTION_31
0x4544	              0xc3	                                     ret	      5732	option.c	FUNCTION_31
shortmess	WHILE,0:SWITCH,0:CALL,3:FOR,0:ELSE,0:DO,0:IF,0:functions,0	31
0x103f8	              0x55	                                push rbp	     12018	option.c	FUNCTION_99
0x103f9	          0x4889e5	                            mov rbp, rsp	     12018	option.c	FUNCTION_99
0x103fc	        0x4883ec10	                           sub rsp, 0x10	     12018	option.c	FUNCTION_99
0x10400	          0x897dfc	                mov dword [rbp - 4], edi	     12018	option.c	FUNCTION_99
0x10403	    0x488b05000000	            mov rax, qword [0x0401044a] 	     12019	option.c	FUNCTION_99
0x1040a	          0x4885c0	                           test rax, rax	     12019	option.c	FUNCTION_99
0x1040d	            0x744d	                            je 0x401049c	     12019	option.c	FUNCTION_99
0x1040f	    0x488b05000000	            mov rax, qword [0x04010456] 	     12020	option.c	FUNCTION_99	CALL_1
0x10416	          0x8b55fc	                mov edx, dword [rbp - 4]	     12020	option.c	FUNCTION_99	CALL_1
0x10419	            0x89d6	                            mov esi, edx	     12020	option.c	FUNCTION_99	CALL_1
0x1041b	          0x4889c7	                            mov rdi, rax	     12020	option.c	FUNCTION_99	CALL_1
0x1041e	      0xe800000000	                          call 0x4010463	     12020	option.c	FUNCTION_99	CALL_1
0x10423	          0x4885c0	                           test rax, rax	     12019	option.c	FUNCTION_99
0x10426	            0x752d	                           jne 0x4010495	     12019	option.c	FUNCTION_99
0x10428	    0x488b05000000	            mov rax, qword [0x0401046f] 	     12021	option.c	FUNCTION_99	CALL_2
0x1042f	      0xbe61000000	                           mov esi, 0x61	     12021	option.c	FUNCTION_99	CALL_2
0x10434	          0x4889c7	                            mov rdi, rax	     12021	option.c	FUNCTION_99	CALL_2
0x10437	      0xe800000000	                          call 0x401047c	     12021	option.c	FUNCTION_99	CALL_2
0x1043c	          0x4885c0	                           test rax, rax	     12021	option.c	FUNCTION_99	CALL_2
0x1043f	            0x741b	                            je 0x401049c	     12021	option.c	FUNCTION_99	CALL_2
0x10441	          0x8b45fc	                mov eax, dword [rbp - 4]	     12022	option.c	FUNCTION_99	CALL_3
0x10444	            0x89c6	                            mov esi, eax	     12022	option.c	FUNCTION_99	CALL_3
0x10446	      0xbf00000000	                              mov edi, 0	     12022	option.c	FUNCTION_99	CALL_3
0x1044b	      0xe800000000	                          call 0x4010490	     12022	option.c	FUNCTION_99	CALL_3
0x10450	          0x4885c0	                           test rax, rax	     12022	option.c	FUNCTION_99	CALL_3
0x10453	            0x7407	                            je 0x401049c	     12022	option.c	FUNCTION_99	CALL_3
0x10455	      0xb801000000	                              mov eax, 1	     12019	option.c	FUNCTION_99
0x1045a	            0xeb05	                           jmp 0x40104a1	     12019	option.c	FUNCTION_99
0x1045c	      0xb800000000	                              mov eax, 0	     12019	option.c	FUNCTION_99
0x10461	              0xc9	                                   leave	     12023	option.c	FUNCTION_99
0x10462	              0xc3	                                     ret	     12023	option.c	FUNCTION_99
set_number_default	WHILE,0:SWITCH,0:CALL,1:FOR,0:ELSE,0:DO,0:IF,1:functions,0	20
0xbc1	              0x55	                                push rbp	      3871	option.c	FUNCTION_6
0xbc2	          0x4889e5	                            mov rbp, rsp	      3871	option.c	FUNCTION_6
0xbc5	        0x4883ec20	                           sub rsp, 0x20	      3871	option.c	FUNCTION_6
0xbc9	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3871	option.c	FUNCTION_6
0xbcd	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3871	option.c	FUNCTION_6
0xbd1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3874	option.c	FUNCTION_6	CALL_1
0xbd5	          0x4889c7	                            mov rdi, rax	      3874	option.c	FUNCTION_6	CALL_1
0xbd8	      0xe8a9a10000	                     call sym.findoption	      3874	option.c	FUNCTION_6	CALL_1
0xbdd	          0x8945fc	                mov dword [rbp - 4], eax	      3874	option.c	FUNCTION_6	CALL_1
0xbe0	        0x837dfc00	                  cmp dword [rbp - 4], 0	      3875	option.c	FUNCTION_6	IF_1
0xbe4	            0x7818	                            js 0x4000c3e	      3875	option.c	FUNCTION_6	IF_1
0xbe6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3876	option.c	FUNCTION_6	IF_1
0xbea	          0x8b55fc	                mov edx, dword [rbp - 4]	      3876	option.c	FUNCTION_6	IF_1
0xbed	          0x4863d2	                         movsxd rdx, edx	      3876	option.c	FUNCTION_6	IF_1
0xbf0	        0x48c1e206	                              shl rdx, 6	      3876	option.c	FUNCTION_6	IF_1
0xbf4	    0x4881c2000000	                              add rdx, 0	      3876	option.c	FUNCTION_6	IF_1
0xbfb	          0x488902	                    mov qword [rdx], rax	      3876	option.c	FUNCTION_6	IF_1
0xbfe	              0x90	                                     nop	      3877	option.c	FUNCTION_6
0xbff	              0xc9	                                   leave	      3877	option.c	FUNCTION_6
0xc00	              0xc3	                                     ret	      3877	option.c	FUNCTION_6
copy_winopt	WHILE,0:SWITCH,0:CALL,15:FOR,0:ELSE,0:DO,0:IF,0:functions,0	226
0xdf71	              0x55	                                push rbp	     10830	option.c	FUNCTION_81
0xdf72	          0x4889e5	                            mov rbp, rsp	     10830	option.c	FUNCTION_81
0xdf75	        0x4883ec10	                           sub rsp, 0x10	     10830	option.c	FUNCTION_81
0xdf79	        0x48897df8	                mov qword [rbp - 8], rdi	     10830	option.c	FUNCTION_81
0xdf7d	        0x488975f0	             mov qword [rbp - 0x10], rsi	     10830	option.c	FUNCTION_81
0xdf81	        0x488b45f8	                mov rax, qword [rbp - 8]	     10832	option.c	FUNCTION_81
0xdf85	            0x8b10	                    mov edx, dword [rax]	     10832	option.c	FUNCTION_81
0xdf87	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10832	option.c	FUNCTION_81
0xdf8b	            0x8910	                    mov dword [rax], edx	     10832	option.c	FUNCTION_81
0xdf8d	        0x488b45f8	                mov rax, qword [rbp - 8]	     10834	option.c	FUNCTION_81
0xdf91	    0x8b9084000000	            mov edx, dword [rax + 0x84] 	     10834	option.c	FUNCTION_81
0xdf97	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10834	option.c	FUNCTION_81
0xdf9b	    0x899084000000	             mov dword [rax + 0x84], edx	     10834	option.c	FUNCTION_81
0xdfa1	        0x488b45f8	                mov rax, qword [rbp - 8]	     10835	option.c	FUNCTION_81
0xdfa5	    0x8b9088000000	            mov edx, dword [rax + 0x88] 	     10835	option.c	FUNCTION_81
0xdfab	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10835	option.c	FUNCTION_81
0xdfaf	    0x899088000000	             mov dword [rax + 0x88], edx	     10835	option.c	FUNCTION_81
0xdfb5	        0x488b45f8	                mov rax, qword [rbp - 8]	     10836	option.c	FUNCTION_81
0xdfb9	    0x8b908c000000	            mov edx, dword [rax + 0x8c] 	     10836	option.c	FUNCTION_81
0xdfbf	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10836	option.c	FUNCTION_81
0xdfc3	    0x89908c000000	             mov dword [rax + 0x8c], edx	     10836	option.c	FUNCTION_81
0xdfc9	        0x488b45f8	                mov rax, qword [rbp - 8]	     10838	option.c	FUNCTION_81
0xdfcd	    0x488b90900000	            mov rdx, qword [rax + 0x90] 	     10838	option.c	FUNCTION_81
0xdfd4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10838	option.c	FUNCTION_81
0xdfd8	    0x488990900000	             mov qword [rax + 0x90], rdx	     10838	option.c	FUNCTION_81
0xdfdf	        0x488b45f8	                mov rax, qword [rbp - 8]	     10841	option.c	FUNCTION_81
0xdfe3	    0x8b90a4000000	            mov edx, dword [rax + 0xa4] 	     10841	option.c	FUNCTION_81
0xdfe9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10841	option.c	FUNCTION_81
0xdfed	    0x8990a4000000	             mov dword [rax + 0xa4], edx	     10841	option.c	FUNCTION_81
0xdff3	        0x488b45f8	                mov rax, qword [rbp - 8]	     10842	option.c	FUNCTION_81	CALL_1
0xdff7	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	     10842	option.c	FUNCTION_81	CALL_1
0xdffe	          0x4889c7	                            mov rdi, rax	     10842	option.c	FUNCTION_81	CALL_1
0xe001	      0xe800000000	                          call 0x400e046	     10842	option.c	FUNCTION_81	CALL_1
0xe006	          0x4889c2	                            mov rdx, rax	     10842	option.c	FUNCTION_81	CALL_1
0xe009	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10842	option.c	FUNCTION_81	CALL_1
0xe00d	    0x488990a80000	             mov qword [rax + 0xa8], rdx	     10842	option.c	FUNCTION_81	CALL_1
0xe014	        0x488b45f8	                mov rax, qword [rbp - 8]	     10845	option.c	FUNCTION_81	CALL_2
0xe018	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	     10845	option.c	FUNCTION_81	CALL_2
0xe01f	          0x4889c7	                            mov rdi, rax	     10845	option.c	FUNCTION_81	CALL_2
0xe022	      0xe800000000	                          call 0x400e067	     10845	option.c	FUNCTION_81	CALL_2
0xe027	          0x4889c2	                            mov rdx, rax	     10845	option.c	FUNCTION_81	CALL_2
0xe02a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10845	option.c	FUNCTION_81	CALL_2
0xe02e	    0x488990d00000	             mov qword [rax + 0xd0], rdx	     10845	option.c	FUNCTION_81	CALL_2
0xe035	        0x488b45f8	                mov rax, qword [rbp - 8]	     10847	option.c	FUNCTION_81
0xe039	    0x8b90e4000000	            mov edx, dword [rax + 0xe4] 	     10847	option.c	FUNCTION_81
0xe03f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10847	option.c	FUNCTION_81
0xe043	    0x8990e4000000	             mov dword [rax + 0xe4], edx	     10847	option.c	FUNCTION_81
0xe049	        0x488b45f8	                mov rax, qword [rbp - 8]	     10849	option.c	FUNCTION_81
0xe04d	    0x8b90e8000000	            mov edx, dword [rax + 0xe8] 	     10849	option.c	FUNCTION_81
0xe053	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10849	option.c	FUNCTION_81
0xe057	    0x8990e8000000	             mov dword [rax + 0xe8], edx	     10849	option.c	FUNCTION_81
0xe05d	        0x488b45f8	                mov rax, qword [rbp - 8]	     10852	option.c	FUNCTION_81
0xe061	    0x8b9080000000	            mov edx, dword [rax + 0x80] 	     10852	option.c	FUNCTION_81
0xe067	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10852	option.c	FUNCTION_81
0xe06b	    0x899080000000	             mov dword [rax + 0x80], edx	     10852	option.c	FUNCTION_81
0xe071	        0x488b45f8	                mov rax, qword [rbp - 8]	     10853	option.c	FUNCTION_81
0xe075	          0x8b5004	                mov edx, dword [rax + 4]	     10853	option.c	FUNCTION_81
0xe078	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10853	option.c	FUNCTION_81
0xe07c	          0x895004	                mov dword [rax + 4], edx	     10853	option.c	FUNCTION_81
0xe07f	        0x488b45f8	                mov rax, qword [rbp - 8]	     10854	option.c	FUNCTION_81	CALL_3
0xe083	        0x488b4008	                mov rax, qword [rax + 8]	     10854	option.c	FUNCTION_81	CALL_3
0xe087	          0x4889c7	                            mov rdi, rax	     10854	option.c	FUNCTION_81	CALL_3
0xe08a	      0xe800000000	                          call 0x400e0cf	     10854	option.c	FUNCTION_81	CALL_3
0xe08f	          0x4889c2	                            mov rdx, rax	     10854	option.c	FUNCTION_81	CALL_3
0xe092	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10854	option.c	FUNCTION_81	CALL_3
0xe096	        0x48895008	                mov qword [rax + 8], rdx	     10854	option.c	FUNCTION_81	CALL_3
0xe09a	        0x488b45f8	                mov rax, qword [rbp - 8]	     10857	option.c	FUNCTION_81
0xe09e	    0x8b90d8000000	            mov edx, dword [rax + 0xd8] 	     10857	option.c	FUNCTION_81
0xe0a4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10857	option.c	FUNCTION_81
0xe0a8	    0x8990d8000000	             mov dword [rax + 0xd8], edx	     10857	option.c	FUNCTION_81
0xe0ae	        0x488b45f8	                mov rax, qword [rbp - 8]	     10858	option.c	FUNCTION_81
0xe0b2	    0x8b90e0000000	            mov edx, dword [rax + 0xe0] 	     10858	option.c	FUNCTION_81
0xe0b8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10858	option.c	FUNCTION_81
0xe0bc	    0x8990e0000000	             mov dword [rax + 0xe0], edx	     10858	option.c	FUNCTION_81
0xe0c2	        0x488b45f8	                mov rax, qword [rbp - 8]	     10861	option.c	FUNCTION_81
0xe0c6	    0x8b9000010000	           mov edx, dword [rax + 0x100] 	     10861	option.c	FUNCTION_81
0xe0cc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10861	option.c	FUNCTION_81
0xe0d0	    0x899000010000	            mov dword [rax + 0x100], edx	     10861	option.c	FUNCTION_81
0xe0d6	        0x488b45f8	                mov rax, qword [rbp - 8]	     10862	option.c	FUNCTION_81
0xe0da	    0x8b9004010000	           mov edx, dword [rax + 0x104] 	     10862	option.c	FUNCTION_81
0xe0e0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10862	option.c	FUNCTION_81
0xe0e4	    0x899004010000	            mov dword [rax + 0x104], edx	     10862	option.c	FUNCTION_81
0xe0ea	        0x488b45f8	                mov rax, qword [rbp - 8]	     10865	option.c	FUNCTION_81
0xe0ee	    0x8b90b8000000	            mov edx, dword [rax + 0xb8] 	     10865	option.c	FUNCTION_81
0xe0f4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10865	option.c	FUNCTION_81
0xe0f8	    0x8990b8000000	             mov dword [rax + 0xb8], edx	     10865	option.c	FUNCTION_81
0xe0fe	        0x488b45f8	                mov rax, qword [rbp - 8]	     10868	option.c	FUNCTION_81
0xe102	    0x8b90bc000000	            mov edx, dword [rax + 0xbc] 	     10868	option.c	FUNCTION_81
0xe108	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10868	option.c	FUNCTION_81
0xe10c	    0x8990bc000000	             mov dword [rax + 0xbc], edx	     10868	option.c	FUNCTION_81
0xe112	        0x488b45f8	                mov rax, qword [rbp - 8]	     10869	option.c	FUNCTION_81
0xe116	    0x8b90c0000000	            mov edx, dword [rax + 0xc0] 	     10869	option.c	FUNCTION_81
0xe11c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10869	option.c	FUNCTION_81
0xe120	    0x8990c0000000	             mov dword [rax + 0xc0], edx	     10869	option.c	FUNCTION_81
0xe126	        0x488b45f8	                mov rax, qword [rbp - 8]	     10870	option.c	FUNCTION_81	CALL_4
0xe12a	    0x488b80c80000	            mov rax, qword [rax + 0xc8] 	     10870	option.c	FUNCTION_81	CALL_4
0xe131	          0x4889c7	                            mov rdi, rax	     10870	option.c	FUNCTION_81	CALL_4
0xe134	      0xe800000000	                          call 0x400e179	     10870	option.c	FUNCTION_81	CALL_4
0xe139	          0x4889c2	                            mov rdx, rax	     10870	option.c	FUNCTION_81	CALL_4
0xe13c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10870	option.c	FUNCTION_81	CALL_4
0xe140	    0x488990c80000	             mov qword [rax + 0xc8], rdx	     10870	option.c	FUNCTION_81	CALL_4
0xe147	        0x488b45f8	                mov rax, qword [rbp - 8]	     10873	option.c	FUNCTION_81
0xe14b	          0x8b5010	            mov edx, dword [rax + 0x10] 	     10873	option.c	FUNCTION_81
0xe14e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10873	option.c	FUNCTION_81
0xe152	          0x895010	             mov dword [rax + 0x10], edx	     10873	option.c	FUNCTION_81
0xe155	        0x488b45f8	                mov rax, qword [rbp - 8]	     10874	option.c	FUNCTION_81
0xe159	    0x8b90dc000000	            mov edx, dword [rax + 0xdc] 	     10874	option.c	FUNCTION_81
0xe15f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10874	option.c	FUNCTION_81
0xe163	    0x8990dc000000	             mov dword [rax + 0xdc], edx	     10874	option.c	FUNCTION_81
0xe169	        0x488b45f8	                mov rax, qword [rbp - 8]	     10877	option.c	FUNCTION_81	CALL_5
0xe16d	    0x488b80f00000	            mov rax, qword [rax + 0xf0] 	     10877	option.c	FUNCTION_81	CALL_5
0xe174	          0x4889c7	                            mov rdi, rax	     10877	option.c	FUNCTION_81	CALL_5
0xe177	      0xe800000000	                          call 0x400e1bc	     10877	option.c	FUNCTION_81	CALL_5
0xe17c	          0x4889c2	                            mov rdx, rax	     10877	option.c	FUNCTION_81	CALL_5
0xe17f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10877	option.c	FUNCTION_81	CALL_5
0xe183	    0x488990f00000	             mov qword [rax + 0xf0], rdx	     10877	option.c	FUNCTION_81	CALL_5
0xe18a	        0x488b45f8	                mov rax, qword [rbp - 8]	     10878	option.c	FUNCTION_81
0xe18e	    0x488b90f80000	            mov rdx, qword [rax + 0xf8] 	     10878	option.c	FUNCTION_81
0xe195	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10878	option.c	FUNCTION_81
0xe199	    0x488990f80000	             mov qword [rax + 0xf8], rdx	     10878	option.c	FUNCTION_81
0xe1a0	        0x488b45f8	                mov rax, qword [rbp - 8]	     10881	option.c	FUNCTION_81	CALL_6
0xe1a4	    0x488b80100100	           mov rax, qword [rax + 0x110] 	     10881	option.c	FUNCTION_81	CALL_6
0xe1ab	          0x4889c7	                            mov rdi, rax	     10881	option.c	FUNCTION_81	CALL_6
0xe1ae	      0xe800000000	                          call 0x400e1f3	     10881	option.c	FUNCTION_81	CALL_6
0xe1b3	          0x4889c2	                            mov rdx, rax	     10881	option.c	FUNCTION_81	CALL_6
0xe1b6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10881	option.c	FUNCTION_81	CALL_6
0xe1ba	    0x488990100100	            mov qword [rax + 0x110], rdx	     10881	option.c	FUNCTION_81	CALL_6
0xe1c1	        0x488b45f8	                mov rax, qword [rbp - 8]	     10882	option.c	FUNCTION_81	CALL_7
0xe1c5	    0x488b80180100	           mov rax, qword [rax + 0x118] 	     10882	option.c	FUNCTION_81	CALL_7
0xe1cc	          0x4889c7	                            mov rdi, rax	     10882	option.c	FUNCTION_81	CALL_7
0xe1cf	      0xe800000000	                          call 0x400e214	     10882	option.c	FUNCTION_81	CALL_7
0xe1d4	          0x4889c2	                            mov rdx, rax	     10882	option.c	FUNCTION_81	CALL_7
0xe1d7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10882	option.c	FUNCTION_81	CALL_7
0xe1db	    0x488990180100	            mov qword [rax + 0x118], rdx	     10882	option.c	FUNCTION_81	CALL_7
0xe1e2	        0x488b45f8	                mov rax, qword [rbp - 8]	     10885	option.c	FUNCTION_81
0xe1e6	        0x488b5018	            mov rdx, qword [rax + 0x18] 	     10885	option.c	FUNCTION_81
0xe1ea	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10885	option.c	FUNCTION_81
0xe1ee	        0x48895018	             mov qword [rax + 0x18], rdx	     10885	option.c	FUNCTION_81
0xe1f2	        0x488b45f8	                mov rax, qword [rbp - 8]	     10886	option.c	FUNCTION_81
0xe1f6	          0x8b5020	            mov edx, dword [rax + 0x20] 	     10886	option.c	FUNCTION_81
0xe1f9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10886	option.c	FUNCTION_81
0xe1fd	          0x895020	             mov dword [rax + 0x20], edx	     10886	option.c	FUNCTION_81
0xe200	        0x488b45f8	                mov rax, qword [rbp - 8]	     10887	option.c	FUNCTION_81
0xe204	          0x8b5024	            mov edx, dword [rax + 0x24] 	     10887	option.c	FUNCTION_81
0xe207	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10887	option.c	FUNCTION_81
0xe20b	          0x895024	             mov dword [rax + 0x24], edx	     10887	option.c	FUNCTION_81
0xe20e	        0x488b45f8	                mov rax, qword [rbp - 8]	     10888	option.c	FUNCTION_81
0xe212	          0x8b5028	            mov edx, dword [rax + 0x28] 	     10888	option.c	FUNCTION_81
0xe215	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10888	option.c	FUNCTION_81
0xe219	          0x895028	             mov dword [rax + 0x28], edx	     10888	option.c	FUNCTION_81
0xe21c	        0x488b45f8	                mov rax, qword [rbp - 8]	     10889	option.c	FUNCTION_81	CALL_8
0xe220	        0x488b4030	            mov rax, qword [rax + 0x30] 	     10889	option.c	FUNCTION_81	CALL_8
0xe224	          0x4889c7	                            mov rdi, rax	     10889	option.c	FUNCTION_81	CALL_8
0xe227	      0xe800000000	                          call 0x400e26c	     10889	option.c	FUNCTION_81	CALL_8
0xe22c	          0x4889c2	                            mov rdx, rax	     10889	option.c	FUNCTION_81	CALL_8
0xe22f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10889	option.c	FUNCTION_81	CALL_8
0xe233	        0x48895030	             mov qword [rax + 0x30], rdx	     10889	option.c	FUNCTION_81	CALL_8
0xe237	        0x488b45f8	                mov rax, qword [rbp - 8]	     10890	option.c	FUNCTION_81
0xe23b	        0x488b5058	            mov rdx, qword [rax + 0x58] 	     10890	option.c	FUNCTION_81
0xe23f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10890	option.c	FUNCTION_81
0xe243	        0x48895058	             mov qword [rax + 0x58], rdx	     10890	option.c	FUNCTION_81
0xe247	        0x488b45f8	                mov rax, qword [rbp - 8]	     10891	option.c	FUNCTION_81
0xe24b	        0x488b5038	            mov rdx, qword [rax + 0x38] 	     10891	option.c	FUNCTION_81
0xe24f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10891	option.c	FUNCTION_81
0xe253	        0x48895038	             mov qword [rax + 0x38], rdx	     10891	option.c	FUNCTION_81
0xe257	        0x488b45f8	                mov rax, qword [rbp - 8]	     10892	option.c	FUNCTION_81
0xe25b	          0x8b5040	            mov edx, dword [rax + 0x40] 	     10892	option.c	FUNCTION_81
0xe25e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10892	option.c	FUNCTION_81
0xe262	          0x895040	             mov dword [rax + 0x40], edx	     10892	option.c	FUNCTION_81
0xe265	        0x488b45f8	                mov rax, qword [rbp - 8]	     10893	option.c	FUNCTION_81	CALL_9
0xe269	        0x488b4048	            mov rax, qword [rax + 0x48] 	     10893	option.c	FUNCTION_81	CALL_9
0xe26d	          0x4889c7	                            mov rdi, rax	     10893	option.c	FUNCTION_81	CALL_9
0xe270	      0xe800000000	                          call 0x400e2b5	     10893	option.c	FUNCTION_81	CALL_9
0xe275	          0x4889c2	                            mov rdx, rax	     10893	option.c	FUNCTION_81	CALL_9
0xe278	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10893	option.c	FUNCTION_81	CALL_9
0xe27c	        0x48895048	             mov qword [rax + 0x48], rdx	     10893	option.c	FUNCTION_81	CALL_9
0xe280	        0x488b45f8	                mov rax, qword [rbp - 8]	     10894	option.c	FUNCTION_81
0xe284	    0x8b80dc000000	            mov eax, dword [rax + 0xdc] 	     10894	option.c	FUNCTION_81
0xe28a	            0x85c0	                           test eax, eax	     10895	option.c	FUNCTION_81	CALL_10
0xe28c	            0x7412	                            je 0x400e2e0	     10895	option.c	FUNCTION_81	CALL_10
0xe28e	        0x488b45f8	                mov rax, qword [rbp - 8]	     10895	option.c	FUNCTION_81	CALL_10
0xe292	        0x488b4050	            mov rax, qword [rax + 0x50] 	     10895	option.c	FUNCTION_81	CALL_10
0xe296	          0x4889c7	                            mov rdi, rax	     10895	option.c	FUNCTION_81	CALL_10
0xe299	      0xe800000000	                          call 0x400e2de	     10895	option.c	FUNCTION_81	CALL_10
0xe29e	            0xeb07	                           jmp 0x400e2e7	     10895	option.c	FUNCTION_81	CALL_10
0xe2a0	    0x488b05000000	            mov rax, qword [0x0400e2e7] 	     10895	option.c	FUNCTION_81	CALL_10
0xe2a7	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	     10894	option.c	FUNCTION_81
0xe2ab	        0x48894250	             mov qword [rdx + 0x50], rax	     10894	option.c	FUNCTION_81
0xe2af	        0x488b45f8	                mov rax, qword [rbp - 8]	     10896	option.c	FUNCTION_81
0xe2b3	        0x488b5060	            mov rdx, qword [rax + 0x60] 	     10896	option.c	FUNCTION_81
0xe2b7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10896	option.c	FUNCTION_81
0xe2bb	        0x48895060	             mov qword [rax + 0x60], rdx	     10896	option.c	FUNCTION_81
0xe2bf	        0x488b45f8	                mov rax, qword [rbp - 8]	     10898	option.c	FUNCTION_81	CALL_11
0xe2c3	        0x488b4068	            mov rax, qword [rax + 0x68] 	     10898	option.c	FUNCTION_81	CALL_11
0xe2c7	          0x4889c7	                            mov rdi, rax	     10898	option.c	FUNCTION_81	CALL_11
0xe2ca	      0xe800000000	                          call 0x400e30f	     10898	option.c	FUNCTION_81	CALL_11
0xe2cf	          0x4889c2	                            mov rdx, rax	     10898	option.c	FUNCTION_81	CALL_11
0xe2d2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10898	option.c	FUNCTION_81	CALL_11
0xe2d6	        0x48895068	             mov qword [rax + 0x68], rdx	     10898	option.c	FUNCTION_81	CALL_11
0xe2da	        0x488b45f8	                mov rax, qword [rbp - 8]	     10899	option.c	FUNCTION_81	CALL_12
0xe2de	        0x488b4070	            mov rax, qword [rax + 0x70] 	     10899	option.c	FUNCTION_81	CALL_12
0xe2e2	          0x4889c7	                            mov rdi, rax	     10899	option.c	FUNCTION_81	CALL_12
0xe2e5	      0xe800000000	                          call 0x400e32a	     10899	option.c	FUNCTION_81	CALL_12
0xe2ea	          0x4889c2	                            mov rdx, rax	     10899	option.c	FUNCTION_81	CALL_12
0xe2ed	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10899	option.c	FUNCTION_81	CALL_12
0xe2f1	        0x48895070	             mov qword [rax + 0x70], rdx	     10899	option.c	FUNCTION_81	CALL_12
0xe2f5	        0x488b45f8	                mov rax, qword [rbp - 8]	     10901	option.c	FUNCTION_81	CALL_13
0xe2f9	        0x488b4078	            mov rax, qword [rax + 0x78] 	     10901	option.c	FUNCTION_81	CALL_13
0xe2fd	          0x4889c7	                            mov rdi, rax	     10901	option.c	FUNCTION_81	CALL_13
0xe300	      0xe800000000	                          call 0x400e345	     10901	option.c	FUNCTION_81	CALL_13
0xe305	          0x4889c2	                            mov rdx, rax	     10901	option.c	FUNCTION_81	CALL_13
0xe308	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10901	option.c	FUNCTION_81	CALL_13
0xe30c	        0x48895078	             mov qword [rax + 0x78], rdx	     10901	option.c	FUNCTION_81	CALL_13
0xe310	        0x488b45f8	                mov rax, qword [rbp - 8]	     10904	option.c	FUNCTION_81	CALL_14
0xe314	    0x488b80080100	           mov rax, qword [rax + 0x108] 	     10904	option.c	FUNCTION_81	CALL_14
0xe31b	          0x4889c7	                            mov rdi, rax	     10904	option.c	FUNCTION_81	CALL_14
0xe31e	      0xe800000000	                          call 0x400e363	     10904	option.c	FUNCTION_81	CALL_14
0xe323	          0x4889c2	                            mov rdx, rax	     10904	option.c	FUNCTION_81	CALL_14
0xe326	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10904	option.c	FUNCTION_81	CALL_14
0xe32a	    0x488990080100	            mov qword [rax + 0x108], rdx	     10904	option.c	FUNCTION_81	CALL_14
0xe331	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10906	option.c	FUNCTION_81	CALL_15
0xe335	          0x4889c7	                            mov rdi, rax	     10906	option.c	FUNCTION_81	CALL_15
0xe338	      0xe836000000	                   call sym.check_winopt	     10906	option.c	FUNCTION_81	CALL_15
0xe33d	              0x90	                                     nop	     10907	option.c	FUNCTION_81
0xe33e	              0xc9	                                   leave	     10907	option.c	FUNCTION_81
0xe33f	              0xc3	                                     ret	     10907	option.c	FUNCTION_81
makefoldset	WHILE,0:SWITCH,0:CALL,8:FOR,0:ELSE,0:DO,0:IF,1:functions,0	93
0xbe53	              0x55	                                push rbp	     10120	option.c	FUNCTION_66
0xbe54	          0x4889e5	                            mov rbp, rsp	     10120	option.c	FUNCTION_66
0xbe57	        0x4883ec10	                           sub rsp, 0x10	     10120	option.c	FUNCTION_66
0xbe5b	        0x48897df8	                mov qword [rbp - 8], rdi	     10120	option.c	FUNCTION_66
0xbe5f	    0x488b05000000	            mov rax, qword [0x0400bea6] 	     10121	option.c	FUNCTION_66	IF_1	CALL_1
0xbe66	    0x488d90f80100	                  lea rdx, [rax + 0x1f8]	     10121	option.c	FUNCTION_66	IF_1	CALL_1
0xbe6d	        0x488b45f8	                mov rax, qword [rbp - 8]	     10121	option.c	FUNCTION_66	IF_1	CALL_1
0xbe71	    0x41b800000000	                              mov r8d, 0	     10121	option.c	FUNCTION_66	IF_1	CALL_1
0xbe77	          0x4889d1	                            mov rcx, rdx	     10121	option.c	FUNCTION_66	IF_1	CALL_1
0xbe7a	      0xba00000000	                              mov edx, 0	     10121	option.c	FUNCTION_66	IF_1	CALL_1
0xbe7f	      0xbe00000000	                              mov esi, 0	     10121	option.c	FUNCTION_66	IF_1	CALL_1
0xbe84	          0x4889c7	                            mov rdi, rax	     10121	option.c	FUNCTION_66	IF_1	CALL_1
0xbe87	      0xe85f010000	                  call sym.put_setstring	     10121	option.c	FUNCTION_66	IF_1	CALL_1
0xbe8c	            0x85c0	                           test eax, eax	     10121	option.c	FUNCTION_66	IF_1	CALL_1
0xbe8e	     0xf8449010000	                            je 0x400c01d	     10121	option.c	FUNCTION_66	IF_1	CALL_1
0xbe94	    0x488b05000000	            mov rax, qword [0x0400bedb] 	     10123	option.c	FUNCTION_66	IF_1	CALL_2
0xbe9b	    0x488d90180200	                  lea rdx, [rax + 0x218]	     10123	option.c	FUNCTION_66	IF_1	CALL_2
0xbea2	        0x488b45f8	                mov rax, qword [rbp - 8]	     10123	option.c	FUNCTION_66	IF_1	CALL_2
0xbea6	    0x41b800000000	                              mov r8d, 0	     10123	option.c	FUNCTION_66	IF_1	CALL_2
0xbeac	          0x4889d1	                            mov rcx, rdx	     10123	option.c	FUNCTION_66	IF_1	CALL_2
0xbeaf	      0xba00000000	                              mov edx, 0	     10123	option.c	FUNCTION_66	IF_1	CALL_2
0xbeb4	      0xbe00000000	                              mov esi, 0	     10123	option.c	FUNCTION_66	IF_1	CALL_2
0xbeb9	          0x4889c7	                            mov rdi, rax	     10123	option.c	FUNCTION_66	IF_1	CALL_2
0xbebc	      0xe82a010000	                  call sym.put_setstring	     10123	option.c	FUNCTION_66	IF_1	CALL_2
0xbec1	            0x85c0	                           test eax, eax	     10123	option.c	FUNCTION_66	IF_1	CALL_2
0xbec3	     0xf8414010000	                            je 0x400c01d	     10123	option.c	FUNCTION_66	IF_1	CALL_2
0xbec9	    0x488b05000000	            mov rax, qword [0x0400bf10] 	     10126	option.c	FUNCTION_66	IF_1	CALL_3
0xbed0	    0x488d90280200	                  lea rdx, [rax + 0x228]	     10126	option.c	FUNCTION_66	IF_1	CALL_3
0xbed7	        0x488b45f8	                mov rax, qword [rbp - 8]	     10126	option.c	FUNCTION_66	IF_1	CALL_3
0xbedb	    0x41b800000000	                              mov r8d, 0	     10126	option.c	FUNCTION_66	IF_1	CALL_3
0xbee1	          0x4889d1	                            mov rcx, rdx	     10126	option.c	FUNCTION_66	IF_1	CALL_3
0xbee4	      0xba00000000	                              mov edx, 0	     10126	option.c	FUNCTION_66	IF_1	CALL_3
0xbee9	      0xbe00000000	                              mov esi, 0	     10126	option.c	FUNCTION_66	IF_1	CALL_3
0xbeee	          0x4889c7	                            mov rdi, rax	     10126	option.c	FUNCTION_66	IF_1	CALL_3
0xbef1	      0xe8f5000000	                  call sym.put_setstring	     10126	option.c	FUNCTION_66	IF_1	CALL_3
0xbef6	            0x85c0	                           test eax, eax	     10126	option.c	FUNCTION_66	IF_1	CALL_3
0xbef8	     0xf84df000000	                            je 0x400c01d	     10126	option.c	FUNCTION_66	IF_1	CALL_3
0xbefe	    0x488b05000000	            mov rax, qword [0x0400bf45] 	     10128	option.c	FUNCTION_66	IF_1	CALL_4
0xbf05	    0x488d90e00100	                  lea rdx, [rax + 0x1e0]	     10128	option.c	FUNCTION_66	IF_1	CALL_4
0xbf0c	        0x488b45f8	                mov rax, qword [rbp - 8]	     10128	option.c	FUNCTION_66	IF_1	CALL_4
0xbf10	    0x41b800000000	                              mov r8d, 0	     10128	option.c	FUNCTION_66	IF_1	CALL_4
0xbf16	          0x4889d1	                            mov rcx, rdx	     10128	option.c	FUNCTION_66	IF_1	CALL_4
0xbf19	      0xba00000000	                              mov edx, 0	     10128	option.c	FUNCTION_66	IF_1	CALL_4
0xbf1e	      0xbe00000000	                              mov esi, 0	     10128	option.c	FUNCTION_66	IF_1	CALL_4
0xbf23	          0x4889c7	                            mov rdi, rax	     10128	option.c	FUNCTION_66	IF_1	CALL_4
0xbf26	      0xe8c0000000	                  call sym.put_setstring	     10128	option.c	FUNCTION_66	IF_1	CALL_4
0xbf2b	            0x85c0	                           test eax, eax	     10128	option.c	FUNCTION_66	IF_1	CALL_4
0xbf2d	     0xf84aa000000	                            je 0x400c01d	     10128	option.c	FUNCTION_66	IF_1	CALL_4
0xbf33	    0x488b05000000	            mov rax, qword [0x0400bf7a] 	     10130	option.c	FUNCTION_66	IF_1	CALL_5
0xbf3a	    0x488d90e80100	                  lea rdx, [rax + 0x1e8]	     10130	option.c	FUNCTION_66	IF_1	CALL_5
0xbf41	        0x488b45f8	                mov rax, qword [rbp - 8]	     10130	option.c	FUNCTION_66	IF_1	CALL_5
0xbf45	          0x4889d1	                            mov rcx, rdx	     10130	option.c	FUNCTION_66	IF_1	CALL_5
0xbf48	      0xba00000000	                              mov edx, 0	     10130	option.c	FUNCTION_66	IF_1	CALL_5
0xbf4d	      0xbe00000000	                              mov esi, 0	     10130	option.c	FUNCTION_66	IF_1	CALL_5
0xbf52	          0x4889c7	                            mov rdi, rax	     10130	option.c	FUNCTION_66	IF_1	CALL_5
0xbf55	      0xe832020000	                     call sym.put_setnum	     10130	option.c	FUNCTION_66	IF_1	CALL_5
0xbf5a	            0x85c0	                           test eax, eax	     10130	option.c	FUNCTION_66	IF_1	CALL_5
0xbf5c	            0x747f	                            je 0x400c01d	     10130	option.c	FUNCTION_66	IF_1	CALL_5
0xbf5e	    0x488b05000000	            mov rax, qword [0x0400bfa5] 	     10131	option.c	FUNCTION_66	IF_1	CALL_6
0xbf65	    0x488d90080200	                  lea rdx, [rax + 0x208]	     10131	option.c	FUNCTION_66	IF_1	CALL_6
0xbf6c	        0x488b45f8	                mov rax, qword [rbp - 8]	     10131	option.c	FUNCTION_66	IF_1	CALL_6
0xbf70	          0x4889d1	                            mov rcx, rdx	     10131	option.c	FUNCTION_66	IF_1	CALL_6
0xbf73	      0xba00000000	                              mov edx, 0	     10131	option.c	FUNCTION_66	IF_1	CALL_6
0xbf78	      0xbe00000000	                              mov esi, 0	     10131	option.c	FUNCTION_66	IF_1	CALL_6
0xbf7d	          0x4889c7	                            mov rdi, rax	     10131	option.c	FUNCTION_66	IF_1	CALL_6
0xbf80	      0xe807020000	                     call sym.put_setnum	     10131	option.c	FUNCTION_66	IF_1	CALL_6
0xbf85	            0x85c0	                           test eax, eax	     10131	option.c	FUNCTION_66	IF_1	CALL_6
0xbf87	            0x7454	                            je 0x400c01d	     10131	option.c	FUNCTION_66	IF_1	CALL_6
0xbf89	    0x488b05000000	            mov rax, qword [0x0400bfd0] 	     10132	option.c	FUNCTION_66	IF_1	CALL_7
0xbf90	    0x488d90100200	                  lea rdx, [rax + 0x210]	     10132	option.c	FUNCTION_66	IF_1	CALL_7
0xbf97	        0x488b45f8	                mov rax, qword [rbp - 8]	     10132	option.c	FUNCTION_66	IF_1	CALL_7
0xbf9b	          0x4889d1	                            mov rcx, rdx	     10132	option.c	FUNCTION_66	IF_1	CALL_7
0xbf9e	      0xba00000000	                              mov edx, 0	     10132	option.c	FUNCTION_66	IF_1	CALL_7
0xbfa3	      0xbe00000000	                              mov esi, 0	     10132	option.c	FUNCTION_66	IF_1	CALL_7
0xbfa8	          0x4889c7	                            mov rdi, rax	     10132	option.c	FUNCTION_66	IF_1	CALL_7
0xbfab	      0xe8dc010000	                     call sym.put_setnum	     10132	option.c	FUNCTION_66	IF_1	CALL_7
0xbfb0	            0x85c0	                           test eax, eax	     10132	option.c	FUNCTION_66	IF_1	CALL_7
0xbfb2	            0x7429	                            je 0x400c01d	     10132	option.c	FUNCTION_66	IF_1	CALL_7
0xbfb4	    0x488b05000000	            mov rax, qword [0x0400bffb] 	     10133	option.c	FUNCTION_66	IF_1	CALL_8
0xbfbb	    0x8b90d4010000	           mov edx, dword [rax + 0x1d4] 	     10133	option.c	FUNCTION_66	IF_1	CALL_8
0xbfc1	        0x488b45f8	                mov rax, qword [rbp - 8]	     10133	option.c	FUNCTION_66	IF_1	CALL_8
0xbfc5	            0x89d1	                            mov ecx, edx	     10133	option.c	FUNCTION_66	IF_1	CALL_8
0xbfc7	      0xba00000000	                              mov edx, 0	     10133	option.c	FUNCTION_66	IF_1	CALL_8
0xbfcc	      0xbe00000000	                              mov esi, 0	     10133	option.c	FUNCTION_66	IF_1	CALL_8
0xbfd1	          0x4889c7	                            mov rdi, rax	     10133	option.c	FUNCTION_66	IF_1	CALL_8
0xbfd4	      0xe8a4020000	                    call sym.put_setbool	     10133	option.c	FUNCTION_66	IF_1	CALL_8
0xbfd9	            0x85c0	                           test eax, eax	     10133	option.c	FUNCTION_66	IF_1	CALL_8
0xbfdb	            0x7507	                           jne 0x400c024	     10133	option.c	FUNCTION_66	IF_1	CALL_8
0xbfdd	      0xb800000000	                              mov eax, 0	     10135	option.c	FUNCTION_66	IF_1
0xbfe2	            0xeb05	                           jmp 0x400c029	     10135	option.c	FUNCTION_66	IF_1
0xbfe4	      0xb801000000	                              mov eax, 1	     10137	option.c	FUNCTION_66
0xbfe9	              0xc9	                                   leave	     10138	option.c	FUNCTION_66
0xbfea	              0xc3	                                     ret	     10138	option.c	FUNCTION_66
option_value2string	WHILE,0:SWITCH,0:CALL,11:FOR,0:ELSE,7:DO,0:IF,7:functions,0	114
0xfcdd	              0x55	                                push rbp	     11733	option.c	FUNCTION_92
0xfcde	          0x4889e5	                            mov rbp, rsp	     11733	option.c	FUNCTION_92
0xfce1	        0x4883ec30	                           sub rsp, 0x30	     11733	option.c	FUNCTION_92
0xfce5	        0x48897dd8	             mov qword [rbp - 0x28], rdi	     11733	option.c	FUNCTION_92
0xfce9	          0x8975d4	             mov dword [rbp - 0x2c], esi	     11733	option.c	FUNCTION_92
0xfcec	    0x64488b042528	                mov rax, qword fs:[0x28]	     11733	option.c	FUNCTION_92
0xfcf5	        0x488945f8	                mov qword [rbp - 8], rax	     11733	option.c	FUNCTION_92
0xfcf9	            0x31c0	                            xor eax, eax	     11733	option.c	FUNCTION_92
0xfcfb	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	     11736	option.c	FUNCTION_92	CALL_1
0xfcfe	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11736	option.c	FUNCTION_92	CALL_1
0xfd02	            0x89d6	                            mov esi, edx	     11736	option.c	FUNCTION_92	CALL_1
0xfd04	          0x4889c7	                            mov rdi, rax	     11736	option.c	FUNCTION_92	CALL_1
0xfd07	      0xe8fdccffff	                 call sym.get_varp_scope	     11736	option.c	FUNCTION_92	CALL_1
0xfd0c	        0x488945f0	             mov qword [rbp - 0x10], rax	     11736	option.c	FUNCTION_92	CALL_1
0xfd10	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11738	option.c	FUNCTION_92	IF_1
0xfd14	        0x488b4010	            mov rax, qword [rax + 0x10] 	     11738	option.c	FUNCTION_92	IF_1
0xfd18	          0x83e002	                              and eax, 2	     11738	option.c	FUNCTION_92	IF_1
0xfd1b	          0x4885c0	                           test rax, rax	     11738	option.c	FUNCTION_92	IF_1
0xfd1e	     0xf849c000000	                            je 0x400fe00	     11738	option.c	FUNCTION_92	IF_1
0xfd24	    0x48c745e80000	               mov qword [rbp - 0x18], 0	     11740	option.c	FUNCTION_92	IF_1
0xfd2c	        0x488d55e8	                   lea rdx, [rbp - 0x18]	     11742	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0xfd30	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11742	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0xfd34	          0x4889d6	                            mov rsi, rdx	     11742	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0xfd37	          0x4889c7	                            mov rdi, rax	     11742	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0xfd3a	      0xe86c010000	                 call sym.wc_use_keyname	     11742	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0xfd3f	            0x85c0	                           test eax, eax	     11742	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0xfd41	            0x742a	                            je 0x400fdad	     11742	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0xfd43	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11743	option.c	FUNCTION_92	IF_1	CALL_4
0xfd47	      0xbe00000000	                              mov esi, 0	     11743	option.c	FUNCTION_92	IF_1	CALL_4
0xfd4c	            0x89c7	                            mov edi, eax	     11743	option.c	FUNCTION_92	IF_1	CALL_4
0xfd4e	      0xe800000000	                          call 0x400fd93	     11743	option.c	FUNCTION_92	IF_1	CALL_4
0xfd53	          0x4889c2	                            mov rdx, rax	     11743	option.c	FUNCTION_92	IF_1	CALL_4
0xfd56	    0x488b05000000	            mov rax, qword [0x0400fd9d] 	     11743	option.c	FUNCTION_92	IF_1	CALL_4
0xfd5d	          0x4889d6	                            mov rsi, rdx	     11743	option.c	FUNCTION_92	IF_1	CALL_4
0xfd60	          0x4889c7	                            mov rdi, rax	     11743	option.c	FUNCTION_92	IF_1	CALL_4
0xfd63	      0xe800000000	                          call 0x400fda8	     11743	option.c	FUNCTION_92	IF_1	CALL_4
0xfd68	      0xe927010000	                           jmp 0x400fed4	     11767	option.c	FUNCTION_92
0xfd6d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11744	option.c	FUNCTION_92	IF_1	ELSE_1	IF_3
0xfd71	          0x4885c0	                           test rax, rax	     11744	option.c	FUNCTION_92	IF_1	ELSE_1	IF_3
0xfd74	            0x7425	                            je 0x400fddb	     11744	option.c	FUNCTION_92	IF_1	ELSE_1	IF_3
0xfd76	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11745	option.c	FUNCTION_92	IF_1	ELSE_1	IF_3
0xfd7a	            0x89c7	                            mov edi, eax	     11745	option.c	FUNCTION_92	IF_1	ELSE_1	IF_3
0xfd7c	      0xe800000000	                          call 0x400fdc1	     11745	option.c	FUNCTION_92	IF_1	ELSE_1	IF_3
0xfd81	          0x4889c2	                            mov rdx, rax	     11745	option.c	FUNCTION_92	IF_1	ELSE_1	IF_3
0xfd84	    0x488b05000000	            mov rax, qword [0x0400fdcb] 	     11745	option.c	FUNCTION_92	IF_1	ELSE_1	IF_3
0xfd8b	          0x4889d6	                            mov rsi, rdx	     11745	option.c	FUNCTION_92	IF_1	ELSE_1	IF_3
0xfd8e	          0x4889c7	                            mov rdi, rax	     11745	option.c	FUNCTION_92	IF_1	ELSE_1	IF_3
0xfd91	      0xe800000000	                          call 0x400fdd6	     11745	option.c	FUNCTION_92	IF_1	ELSE_1	IF_3
0xfd96	      0xe9f9000000	                           jmp 0x400fed4	     11767	option.c	FUNCTION_92
0xfd9b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11747	option.c	FUNCTION_92	IF_1	CALL_7
0xfd9f	          0x488b10	                    mov rdx, qword [rax]	     11747	option.c	FUNCTION_92	IF_1	CALL_7
0xfda2	    0x488b05000000	            mov rax, qword [0x0400fde9] 	     11747	option.c	FUNCTION_92	IF_1	CALL_7
0xfda9	      0xbe00000000	                              mov esi, 0	     11747	option.c	FUNCTION_92	IF_1	CALL_7
0xfdae	          0x4889c7	                            mov rdi, rax	     11747	option.c	FUNCTION_92	IF_1	CALL_7
0xfdb1	      0xb800000000	                              mov eax, 0	     11747	option.c	FUNCTION_92	IF_1	CALL_7
0xfdb6	      0xe800000000	                          call 0x400fdfb	     11747	option.c	FUNCTION_92	IF_1	CALL_7
0xfdbb	      0xe9d4000000	                           jmp 0x400fed4	     11767	option.c	FUNCTION_92
0xfdc0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11751	option.c	FUNCTION_92	ELSE_3
0xfdc4	          0x488b00	                    mov rax, qword [rax]	     11751	option.c	FUNCTION_92	ELSE_3
0xfdc7	        0x488945f0	             mov qword [rbp - 0x10], rax	     11751	option.c	FUNCTION_92	ELSE_3
0xfdcb	      0x48837df000	               cmp qword [rbp - 0x10], 0	     11752	option.c	FUNCTION_92	ELSE_3	IF_4
0xfdd0	            0x750f	                           jne 0x400fe21	     11752	option.c	FUNCTION_92	ELSE_3	IF_4
0xfdd2	    0x488b05000000	            mov rax, qword [0x0400fe19] 	     11753	option.c	FUNCTION_92	ELSE_3	IF_4
0xfdd9	          0xc60000	                       mov byte [rax], 0	     11753	option.c	FUNCTION_92	ELSE_3	IF_4
0xfddc	      0xe9b3000000	                           jmp 0x400fed4	     11767	option.c	FUNCTION_92
0xfde1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11756	option.c	FUNCTION_92	ELSE_3	ELSE_4	IF_5
0xfde5	        0x488b4018	            mov rax, qword [rax + 0x18] 	     11756	option.c	FUNCTION_92	ELSE_3	ELSE_4	IF_5
0xfde9	    0x483d00000000	                              cmp rax, 0	     11756	option.c	FUNCTION_92	ELSE_3	ELSE_4	IF_5
0xfdef	            0x7523	                           jne 0x400fe54	     11756	option.c	FUNCTION_92	ELSE_3	ELSE_4	IF_5
0xfdf1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11756	option.c	FUNCTION_92	ELSE_3	ELSE_4	IF_5
0xfdf5	           0xfb600	                   movzx eax, byte [rax]	     11756	option.c	FUNCTION_92	ELSE_3	ELSE_4	IF_5
0xfdf8	            0x84c0	                             test al, al	     11756	option.c	FUNCTION_92	ELSE_3	ELSE_4	IF_5
0xfdfa	            0x7418	                            je 0x400fe54	     11756	option.c	FUNCTION_92	ELSE_3	ELSE_4	IF_5
0xfdfc	    0x488b05000000	            mov rax, qword [0x0400fe43] 	     11757	option.c	FUNCTION_92	ELSE_3	ELSE_4	IF_5
0xfe03	    0xc7002a2a2a2a	            mov dword [rax], 0x2a2a2a2a 	     11757	option.c	FUNCTION_92	ELSE_3	ELSE_4	IF_5
0xfe09	    0x66c740042a00	                mov word [rax + 4], 0x2a	     11757	option.c	FUNCTION_92	ELSE_3	ELSE_4	IF_5
0xfe0f	      0xe980000000	                           jmp 0x400fed4	     11767	option.c	FUNCTION_92
0xfe14	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11759	option.c	FUNCTION_92	ELSE_3	ELSE_5	IF_6
0xfe18	        0x488b4010	            mov rax, qword [rax + 0x10] 	     11759	option.c	FUNCTION_92	ELSE_3	ELSE_5	IF_6
0xfe1c	          0x83e010	                           and eax, 0x10	     11759	option.c	FUNCTION_92	ELSE_3	ELSE_5	IF_6
0xfe1f	          0x4885c0	                           test rax, rax	     11759	option.c	FUNCTION_92	ELSE_3	ELSE_5	IF_6
0xfe22	            0x7425	                            je 0x400fe89	     11759	option.c	FUNCTION_92	ELSE_3	ELSE_5	IF_6
0xfe24	    0x488b15000000	            mov rdx, qword [0x0400fe6b] 	     11760	option.c	FUNCTION_92	ELSE_3	ELSE_5	IF_6
0xfe2b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     11760	option.c	FUNCTION_92	ELSE_3	ELSE_5	IF_6
0xfe2f	    0x41b800000000	                              mov r8d, 0	     11760	option.c	FUNCTION_92	ELSE_3	ELSE_5	IF_6
0xfe35	      0xb900100000	                         mov ecx, 0x1000	     11760	option.c	FUNCTION_92	ELSE_3	ELSE_5	IF_6
0xfe3a	          0x4889c6	                            mov rsi, rax	     11760	option.c	FUNCTION_92	ELSE_3	ELSE_5	IF_6
0xfe3d	      0xbf00000000	                              mov edi, 0	     11760	option.c	FUNCTION_92	ELSE_3	ELSE_5	IF_6
0xfe42	      0xe800000000	                          call 0x400fe87	     11760	option.c	FUNCTION_92	ELSE_3	ELSE_5	IF_6
0xfe47	            0xeb4b	                           jmp 0x400fed4	     11767	option.c	FUNCTION_92
0xfe49	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11762	option.c	FUNCTION_92	ELSE_3	ELSE_6	IF_7
0xfe4d	        0x488b4018	            mov rax, qword [rax + 0x18] 	     11762	option.c	FUNCTION_92	ELSE_3	ELSE_6	IF_7
0xfe51	    0x483d00000000	                              cmp rax, 0	     11762	option.c	FUNCTION_92	ELSE_3	ELSE_6	IF_7
0xfe57	            0x7520	                           jne 0x400feb9	     11762	option.c	FUNCTION_92	ELSE_3	ELSE_6	IF_7
0xfe59	    0x488b0d000000	            mov rcx, qword [0x0400fea0] 	     11763	option.c	FUNCTION_92	ELSE_3	ELSE_6	IF_7
0xfe60	    0x488b05000000	            mov rax, qword [0x0400fea7] 	     11763	option.c	FUNCTION_92	ELSE_3	ELSE_6	IF_7
0xfe67	      0xba00100000	                         mov edx, 0x1000	     11763	option.c	FUNCTION_92	ELSE_3	ELSE_6	IF_7
0xfe6c	          0x4889ce	                            mov rsi, rcx	     11763	option.c	FUNCTION_92	ELSE_3	ELSE_6	IF_7
0xfe6f	          0x4889c7	                            mov rdi, rax	     11763	option.c	FUNCTION_92	ELSE_3	ELSE_6	IF_7
0xfe72	      0xe800000000	                          call 0x400feb7	     11763	option.c	FUNCTION_92	ELSE_3	ELSE_6	IF_7
0xfe77	            0xeb1b	                           jmp 0x400fed4	     11767	option.c	FUNCTION_92
0xfe79	    0x488b05000000	            mov rax, qword [0x0400fec0] 	     11765	option.c	FUNCTION_92	ELSE_3	CALL_11
0xfe80	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	     11765	option.c	FUNCTION_92	ELSE_3	CALL_11
0xfe84	      0xbaff0f0000	                          mov edx, 0xfff	     11765	option.c	FUNCTION_92	ELSE_3	CALL_11
0xfe89	          0x4889ce	                            mov rsi, rcx	     11765	option.c	FUNCTION_92	ELSE_3	CALL_11
0xfe8c	          0x4889c7	                            mov rdi, rax	     11765	option.c	FUNCTION_92	ELSE_3	CALL_11
0xfe8f	      0xe800000000	                          call 0x400fed4	     11765	option.c	FUNCTION_92	ELSE_3	CALL_11
0xfe94	              0x90	                                     nop	     11767	option.c	FUNCTION_92
0xfe95	        0x488b45f8	                mov rax, qword [rbp - 8]	     11767	option.c	FUNCTION_92
0xfe99	    0x644833042528	                xor rax, qword fs:[0x28]	     11767	option.c	FUNCTION_92
0xfea2	            0x7405	                            je 0x400fee9	     11767	option.c	FUNCTION_92
0xfea4	      0xe800000000	                          call 0x400fee9	     11767	option.c	FUNCTION_92
0xfea9	              0xc9	                                   leave	     11767	option.c	FUNCTION_92
0xfeaa	              0xc3	                                     ret	     11767	option.c	FUNCTION_92
save_file_ff	WHILE,0:SWITCH,0:CALL,3:FOR,0:ELSE,0:DO,0:IF,1:functions,0	45
0x10ed5	              0x55	                                push rbp	     12421	option.c	FUNCTION_111
0x10ed6	          0x4889e5	                            mov rbp, rsp	     12421	option.c	FUNCTION_111
0x10ed9	        0x4883ec10	                           sub rsp, 0x10	     12421	option.c	FUNCTION_111
0x10edd	        0x48897df8	                mov qword [rbp - 8], rdi	     12421	option.c	FUNCTION_111
0x10ee1	        0x488b45f8	                mov rax, qword [rbp - 8]	     12422	option.c	FUNCTION_111
0x10ee5	    0x488b80781400	          mov rax, qword [rax + 0x1478] 	     12422	option.c	FUNCTION_111
0x10eec	           0xfb600	                   movzx eax, byte [rax]	     12422	option.c	FUNCTION_111
0x10eef	           0xfb6d0	                           movzx edx, al	     12422	option.c	FUNCTION_111
0x10ef2	        0x488b45f8	                mov rax, qword [rbp - 8]	     12422	option.c	FUNCTION_111
0x10ef6	    0x8990e4160000	          mov dword [rax + 0x16e4], edx 	     12422	option.c	FUNCTION_111
0x10efc	        0x488b45f8	                mov rax, qword [rbp - 8]	     12423	option.c	FUNCTION_111
0x10f00	    0x8b9058140000	          mov edx, dword [rax + 0x1458] 	     12423	option.c	FUNCTION_111
0x10f06	        0x488b45f8	                mov rax, qword [rbp - 8]	     12423	option.c	FUNCTION_111
0x10f0a	    0x8990e0160000	          mov dword [rax + 0x16e0], edx 	     12423	option.c	FUNCTION_111
0x10f10	        0x488b45f8	                mov rax, qword [rbp - 8]	     12425	option.c	FUNCTION_111
0x10f14	    0x8b90f4130000	          mov edx, dword [rax + 0x13f4] 	     12425	option.c	FUNCTION_111
0x10f1a	        0x488b45f8	                mov rax, qword [rbp - 8]	     12425	option.c	FUNCTION_111
0x10f1e	    0x8990f4160000	          mov dword [rax + 0x16f4], edx 	     12425	option.c	FUNCTION_111
0x10f24	        0x488b45f8	                mov rax, qword [rbp - 8]	     12428	option.c	FUNCTION_111	IF_1
0x10f28	    0x488b80e81600	          mov rax, qword [rax + 0x16e8] 	     12428	option.c	FUNCTION_111	IF_1
0x10f2f	          0x4885c0	                           test rax, rax	     12428	option.c	FUNCTION_111	IF_1
0x10f32	            0x7425	                            je 0x4010f99	     12428	option.c	FUNCTION_111	IF_1
0x10f34	        0x488b45f8	                mov rax, qword [rbp - 8]	     12429	option.c	FUNCTION_111	IF_1	CALL_1
0x10f38	    0x488b90701400	          mov rdx, qword [rax + 0x1470] 	     12429	option.c	FUNCTION_111	IF_1	CALL_1
0x10f3f	        0x488b45f8	                mov rax, qword [rbp - 8]	     12429	option.c	FUNCTION_111	IF_1	CALL_1
0x10f43	    0x488b80e81600	          mov rax, qword [rax + 0x16e8] 	     12429	option.c	FUNCTION_111	IF_1	CALL_1
0x10f4a	          0x4889d6	                            mov rsi, rdx	     12429	option.c	FUNCTION_111	IF_1	CALL_1
0x10f4d	          0x4889c7	                            mov rdi, rax	     12429	option.c	FUNCTION_111	IF_1	CALL_1
0x10f50	      0xe800000000	                          call 0x4010f95	     12429	option.c	FUNCTION_111	IF_1	CALL_1
0x10f55	            0x85c0	                           test eax, eax	     12429	option.c	FUNCTION_111	IF_1	CALL_1
0x10f57	            0x7434	                            je 0x4010fcd	     12429	option.c	FUNCTION_111	IF_1	CALL_1
0x10f59	        0x488b45f8	                mov rax, qword [rbp - 8]	     12431	option.c	FUNCTION_111	IF_1	CALL_2
0x10f5d	    0x488b80e81600	          mov rax, qword [rax + 0x16e8] 	     12431	option.c	FUNCTION_111	IF_1	CALL_2
0x10f64	          0x4889c7	                            mov rdi, rax	     12431	option.c	FUNCTION_111	IF_1	CALL_2
0x10f67	      0xe800000000	                          call 0x4010fac	     12431	option.c	FUNCTION_111	IF_1	CALL_2
0x10f6c	        0x488b45f8	                mov rax, qword [rbp - 8]	     12432	option.c	FUNCTION_111	IF_1	CALL_3
0x10f70	    0x488b80701400	          mov rax, qword [rax + 0x1470] 	     12432	option.c	FUNCTION_111	IF_1	CALL_3
0x10f77	          0x4889c7	                            mov rdi, rax	     12432	option.c	FUNCTION_111	IF_1	CALL_3
0x10f7a	      0xe800000000	                          call 0x4010fbf	     12432	option.c	FUNCTION_111	IF_1	CALL_3
0x10f7f	          0x4889c2	                            mov rdx, rax	     12432	option.c	FUNCTION_111	IF_1	CALL_3
0x10f82	        0x488b45f8	                mov rax, qword [rbp - 8]	     12432	option.c	FUNCTION_111	IF_1	CALL_3
0x10f86	    0x488990e81600	          mov qword [rax + 0x16e8], rdx 	     12432	option.c	FUNCTION_111	IF_1	CALL_3
0x10f8d	              0x90	                                     nop	     12435	option.c	FUNCTION_111
0x10f8e	              0xc9	                                   leave	     12435	option.c	FUNCTION_111
0x10f8f	              0xc3	                                     ret	     12435	option.c	FUNCTION_111
trigger_optionsset_string	WHILE,0:SWITCH,0:CALL,6:FOR,0:ELSE,0:DO,0:IF,1:functions,0	59
0x134b	              0x55	                                push rbp	      4294	option.c	FUNCTION_15
0x134c	          0x4889e5	                            mov rbp, rsp	      4294	option.c	FUNCTION_15
0x134f	        0x4883ec30	                           sub rsp, 0x30	      4294	option.c	FUNCTION_15
0x1353	          0x897dec	             mov dword [rbp - 0x14], edi	      4294	option.c	FUNCTION_15
0x1356	          0x8975e8	             mov dword [rbp - 0x18], esi	      4294	option.c	FUNCTION_15
0x1359	        0x488955e0	             mov qword [rbp - 0x20], rdx	      4294	option.c	FUNCTION_15
0x135d	        0x48894dd8	             mov qword [rbp - 0x28], rcx	      4294	option.c	FUNCTION_15
0x1361	    0x64488b042528	                mov rax, qword fs:[0x28]	      4294	option.c	FUNCTION_15
0x136a	        0x488945f8	                mov qword [rbp - 8], rax	      4294	option.c	FUNCTION_15
0x136e	            0x31c0	                            xor eax, eax	      4294	option.c	FUNCTION_15
0x1370	      0x48837de000	               cmp qword [rbp - 0x20], 0	      4295	option.c	FUNCTION_15	IF_1
0x1375	     0xf84a6000000	                            je 0x4001461	      4295	option.c	FUNCTION_15	IF_1
0x137b	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      4295	option.c	FUNCTION_15	IF_1
0x1380	     0xf849b000000	                            je 0x4001461	      4295	option.c	FUNCTION_15	IF_1
0x1386	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      4300	option.c	FUNCTION_15	IF_1
0x1389	          0x83e004	                              and eax, 4	      4300	option.c	FUNCTION_15	IF_1
0x138c	            0x85c0	                           test eax, eax	      4299	option.c	FUNCTION_15	IF_1	CALL_1
0x138e	            0x7407	                            je 0x40013d7	      4299	option.c	FUNCTION_15	IF_1	CALL_1
0x1390	      0xba00000000	                              mov edx, 0	      4299	option.c	FUNCTION_15	IF_1	CALL_1
0x1395	            0xeb05	                           jmp 0x40013dc	      4299	option.c	FUNCTION_15	IF_1	CALL_1
0x1397	      0xba00000000	                              mov edx, 0	      4299	option.c	FUNCTION_15	IF_1	CALL_1
0x139c	        0x488d45f0	                   lea rax, [rbp - 0x10]	      4299	option.c	FUNCTION_15	IF_1	CALL_1
0x13a0	          0x4889d6	                            mov rsi, rdx	      4299	option.c	FUNCTION_15	IF_1	CALL_1
0x13a3	          0x4889c7	                            mov rdi, rax	      4299	option.c	FUNCTION_15	IF_1	CALL_1
0x13a6	      0xe800000000	                          call 0x40013eb	      4299	option.c	FUNCTION_15	IF_1	CALL_1
0x13ab	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4301	option.c	FUNCTION_15	IF_1	CALL_2
0x13af	      0xbaffffffff	                     mov edx, 0xffffffff	      4301	option.c	FUNCTION_15	IF_1	CALL_2
0x13b4	          0x4889c6	                            mov rsi, rax	      4301	option.c	FUNCTION_15	IF_1	CALL_2
0x13b7	      0xbf3e000000	                           mov edi, 0x3e	      4301	option.c	FUNCTION_15	IF_1	CALL_2
0x13bc	      0xe800000000	                          call 0x4001401	      4301	option.c	FUNCTION_15	IF_1	CALL_2
0x13c1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4302	option.c	FUNCTION_15	IF_1	CALL_3
0x13c5	      0xbaffffffff	                     mov edx, 0xffffffff	      4302	option.c	FUNCTION_15	IF_1	CALL_3
0x13ca	          0x4889c6	                            mov rsi, rax	      4302	option.c	FUNCTION_15	IF_1	CALL_3
0x13cd	      0xbf3d000000	                           mov edi, 0x3d	      4302	option.c	FUNCTION_15	IF_1	CALL_3
0x13d2	      0xe800000000	                          call 0x4001417	      4302	option.c	FUNCTION_15	IF_1	CALL_3
0x13d7	        0x488d45f0	                   lea rax, [rbp - 0x10]	      4303	option.c	FUNCTION_15	IF_1	CALL_4
0x13db	      0xbaffffffff	                     mov edx, 0xffffffff	      4303	option.c	FUNCTION_15	IF_1	CALL_4
0x13e0	          0x4889c6	                            mov rsi, rax	      4303	option.c	FUNCTION_15	IF_1	CALL_4
0x13e3	      0xbf3f000000	                           mov edi, 0x3f	      4303	option.c	FUNCTION_15	IF_1	CALL_4
0x13e8	      0xe800000000	                          call 0x400142d	      4303	option.c	FUNCTION_15	IF_1	CALL_4
0x13ed	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      4305	option.c	FUNCTION_15	IF_1
0x13f0	            0x4898	                                    cdqe	      4305	option.c	FUNCTION_15	IF_1
0x13f2	        0x48c1e006	                              shl rax, 6	      4305	option.c	FUNCTION_15	IF_1
0x13f6	    0x480500000000	                              add rax, 0	      4305	option.c	FUNCTION_15	IF_1
0x13fc	          0x488b00	                    mov rax, qword [rax]	      4305	option.c	FUNCTION_15	IF_1
0x13ff	    0x41b800000000	                              mov r8d, 0	      4304	option.c	FUNCTION_15	IF_1	CALL_5
0x1405	      0xb900000000	                              mov ecx, 0	      4304	option.c	FUNCTION_15	IF_1	CALL_5
0x140a	      0xba00000000	                              mov edx, 0	      4304	option.c	FUNCTION_15	IF_1	CALL_5
0x140f	          0x4889c6	                            mov rsi, rax	      4304	option.c	FUNCTION_15	IF_1	CALL_5
0x1412	      0xbf58000000	                           mov edi, 0x58	      4304	option.c	FUNCTION_15	IF_1	CALL_5
0x1417	      0xe800000000	                          call 0x400145c	      4304	option.c	FUNCTION_15	IF_1	CALL_5
0x141c	      0xe800000000	                          call 0x4001461	      4306	option.c	FUNCTION_15	IF_1	CALL_6
0x1421	              0x90	                                     nop	      4308	option.c	FUNCTION_15
0x1422	        0x488b45f8	                mov rax, qword [rbp - 8]	      4308	option.c	FUNCTION_15
0x1426	    0x644833042528	                xor rax, qword fs:[0x28]	      4308	option.c	FUNCTION_15
0x142f	            0x7405	                            je 0x4001476	      4308	option.c	FUNCTION_15
0x1431	      0xe800000000	                          call 0x4001476	      4308	option.c	FUNCTION_15
0x1436	              0xc9	                                   leave	      4308	option.c	FUNCTION_15
0x1437	              0xc3	                                     ret	      4308	option.c	FUNCTION_15
get_varp	WHILE,0:SWITCH,1:CALL,2:FOR,0:ELSE,0:DO,0:IF,1:functions,0	855
0xcd3f	              0x55	                                push rbp	     10545	option.c	FUNCTION_78
0xcd40	          0x4889e5	                            mov rbp, rsp	     10545	option.c	FUNCTION_78
0xcd43	        0x4883ec10	                           sub rsp, 0x10	     10545	option.c	FUNCTION_78
0xcd47	        0x48897df8	                mov qword [rbp - 8], rdi	     10545	option.c	FUNCTION_78
0xcd4b	        0x488b45f8	                mov rax, qword [rbp - 8]	     10547	option.c	FUNCTION_78	IF_1
0xcd4f	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10547	option.c	FUNCTION_78	IF_1
0xcd53	          0x4885c0	                           test rax, rax	     10547	option.c	FUNCTION_78	IF_1
0xcd56	            0x750a	                           jne 0x400cda2	     10547	option.c	FUNCTION_78	IF_1
0xcd58	      0xb800000000	                              mov eax, 0	     10548	option.c	FUNCTION_78	IF_1
0xcd5d	      0xe968110000	                           jmp 0x400df0a	     10548	option.c	FUNCTION_78	IF_1
0xcd62	        0x488b45f8	                mov rax, qword [rbp - 8]	     10550	option.c	FUNCTION_78	SWITCH_1
0xcd66	          0x8b4020	            mov eax, dword [rax + 0x20] 	     10550	option.c	FUNCTION_78	SWITCH_1
0xcd69	      0x3d20400000	                         cmp eax, 0x4020	     10550	option.c	FUNCTION_78	SWITCH_1
0xcd6e	     0xf84360f0000	                            je 0x400dcea	     10550	option.c	FUNCTION_78	SWITCH_1
0xcd74	      0x3d20400000	                         cmp eax, 0x4020	     10550	option.c	FUNCTION_78	SWITCH_1
0xcd79	     0xf8f09030000	                            jg 0x400d0c8	     10550	option.c	FUNCTION_78	SWITCH_1
0xcd7f	      0x3d1b200000	                         cmp eax, 0x201b	     10550	option.c	FUNCTION_78	SWITCH_1
0xcd84	     0xf84860c0000	                            je 0x400da50	     10550	option.c	FUNCTION_78	SWITCH_1
0xcd8a	      0x3d1b200000	                         cmp eax, 0x201b	     10550	option.c	FUNCTION_78	SWITCH_1
0xcd8f	     0xf8f57010000	                            jg 0x400cf2c	     10550	option.c	FUNCTION_78	SWITCH_1
0xcd95	      0x3d0c200000	                         cmp eax, 0x200c	     10550	option.c	FUNCTION_78	SWITCH_1
0xcd9a	     0xf84f60a0000	                            je 0x400d8d6	     10550	option.c	FUNCTION_78	SWITCH_1
0xcda0	      0x3d0c200000	                         cmp eax, 0x200c	     10550	option.c	FUNCTION_78	SWITCH_1
0xcda5	     0xf8f9f000000	                            jg 0x400ce8a	     10550	option.c	FUNCTION_78	SWITCH_1
0xcdab	      0x3d05200000	                         cmp eax, 0x2005	     10550	option.c	FUNCTION_78	SWITCH_1
0xcdb0	     0xf84b40c0000	                            je 0x400daaa	     10550	option.c	FUNCTION_78	SWITCH_1
0xcdb6	      0x3d05200000	                         cmp eax, 0x2005	     10550	option.c	FUNCTION_78	SWITCH_1
0xcdbb	            0x7f45	                            jg 0x400ce42	     10550	option.c	FUNCTION_78	SWITCH_1
0xcdbd	      0x3d01200000	                         cmp eax, 0x2001	     10550	option.c	FUNCTION_78	SWITCH_1
0xcdc2	     0xf842c0a0000	                            je 0x400d834	     10550	option.c	FUNCTION_78	SWITCH_1
0xcdc8	      0x3d01200000	                         cmp eax, 0x2001	     10550	option.c	FUNCTION_78	SWITCH_1
0xcdcd	            0x7f18	                            jg 0x400ce27	     10550	option.c	FUNCTION_78	SWITCH_1
0xcdcf	            0x85c0	                           test eax, eax	     10550	option.c	FUNCTION_78	SWITCH_1
0xcdd1	     0xf84cf050000	                            je 0x400d3e6	     10550	option.c	FUNCTION_78	SWITCH_1
0xcdd7	      0x3d00200000	                         cmp eax, 0x2000	     10550	option.c	FUNCTION_78	SWITCH_1
0xcddc	     0xf84240a0000	                            je 0x400d846	     10550	option.c	FUNCTION_78	SWITCH_1
0xcde2	      0xe9c4100000	                           jmp 0x400deeb	     10550	option.c	FUNCTION_78	SWITCH_1
0xcde7	      0x3d03200000	                         cmp eax, 0x2003	     10550	option.c	FUNCTION_78	SWITCH_1
0xcdec	     0xf84540c0000	                            je 0x400da86	     10550	option.c	FUNCTION_78	SWITCH_1
0xcdf2	      0x3d03200000	                         cmp eax, 0x2003	     10550	option.c	FUNCTION_78	SWITCH_1
0xcdf7	     0xf8f5b0c0000	                            jg 0x400da98	     10550	option.c	FUNCTION_78	SWITCH_1
0xcdfd	      0xe9320c0000	                           jmp 0x400da74	     10550	option.c	FUNCTION_78	SWITCH_1
0xce02	      0x3d08200000	                         cmp eax, 0x2008	     10550	option.c	FUNCTION_78	SWITCH_1
0xce07	     0xf84f10b0000	                            je 0x400da3e	     10550	option.c	FUNCTION_78	SWITCH_1
0xce0d	      0x3d08200000	                         cmp eax, 0x2008	     10550	option.c	FUNCTION_78	SWITCH_1
0xce12	            0x7f1b	                            jg 0x400ce6f	     10550	option.c	FUNCTION_78	SWITCH_1
0xce14	      0x3d06200000	                         cmp eax, 0x2006	     10550	option.c	FUNCTION_78	SWITCH_1
0xce19	     0xf84030c0000	                            je 0x400da62	     10550	option.c	FUNCTION_78	SWITCH_1
0xce1f	      0x3d07200000	                         cmp eax, 0x2007	     10550	option.c	FUNCTION_78	SWITCH_1
0xce24	     0xf84c20b0000	                            je 0x400da2c	     10550	option.c	FUNCTION_78	SWITCH_1
0xce2a	      0xe97c100000	                           jmp 0x400deeb	     10550	option.c	FUNCTION_78	SWITCH_1
0xce2f	      0x3d0a200000	                         cmp eax, 0x200a	     10550	option.c	FUNCTION_78	SWITCH_1
0xce34	     0xf84380a0000	                            je 0x400d8b2	     10550	option.c	FUNCTION_78	SWITCH_1
0xce3a	      0x3d0a200000	                         cmp eax, 0x200a	     10550	option.c	FUNCTION_78	SWITCH_1
0xce3f	     0xf8f3f0a0000	                            jg 0x400d8c4	     10550	option.c	FUNCTION_78	SWITCH_1
0xce45	      0xe9160a0000	                           jmp 0x400d8a0	     10550	option.c	FUNCTION_78	SWITCH_1
0xce4a	      0x3d13200000	                         cmp eax, 0x2013	     10550	option.c	FUNCTION_78	SWITCH_1
0xce4f	     0xf84bf0a0000	                            je 0x400d954	     10550	option.c	FUNCTION_78	SWITCH_1
0xce55	      0x3d13200000	                         cmp eax, 0x2013	     10550	option.c	FUNCTION_78	SWITCH_1
0xce5a	            0x7f48	                            jg 0x400cee4	     10550	option.c	FUNCTION_78	SWITCH_1
0xce5c	      0x3d0f200000	                         cmp eax, 0x200f	     10550	option.c	FUNCTION_78	SWITCH_1
0xce61	     0xf84650a0000	                            je 0x400d90c	     10550	option.c	FUNCTION_78	SWITCH_1
0xce67	      0x3d0f200000	                         cmp eax, 0x200f	     10550	option.c	FUNCTION_78	SWITCH_1
0xce6c	            0x7f1b	                            jg 0x400cec9	     10550	option.c	FUNCTION_78	SWITCH_1
0xce6e	      0x3d0d200000	                         cmp eax, 0x200d	     10550	option.c	FUNCTION_78	SWITCH_1
0xce73	     0xf842f0a0000	                            je 0x400d8e8	     10550	option.c	FUNCTION_78	SWITCH_1
0xce79	      0x3d0e200000	                         cmp eax, 0x200e	     10550	option.c	FUNCTION_78	SWITCH_1
0xce7e	     0xf84360a0000	                            je 0x400d8fa	     10550	option.c	FUNCTION_78	SWITCH_1
0xce84	      0xe922100000	                           jmp 0x400deeb	     10550	option.c	FUNCTION_78	SWITCH_1
0xce89	      0x3d11200000	                         cmp eax, 0x2011	     10550	option.c	FUNCTION_78	SWITCH_1
0xce8e	     0xf845c0a0000	                            je 0x400d930	     10550	option.c	FUNCTION_78	SWITCH_1
0xce94	      0x3d11200000	                         cmp eax, 0x2011	     10550	option.c	FUNCTION_78	SWITCH_1
0xce99	     0xf8f630a0000	                            jg 0x400d942	     10550	option.c	FUNCTION_78	SWITCH_1
0xce9f	      0xe93a0a0000	                           jmp 0x400d91e	     10550	option.c	FUNCTION_78	SWITCH_1
0xcea4	      0x3d17200000	                         cmp eax, 0x2017	     10550	option.c	FUNCTION_78	SWITCH_1
0xcea9	     0xf849b0a0000	                            je 0x400d98a	     10550	option.c	FUNCTION_78	SWITCH_1
0xceaf	      0x3d17200000	                         cmp eax, 0x2017	     10550	option.c	FUNCTION_78	SWITCH_1
0xceb4	            0x7f1b	                            jg 0x400cf11	     10550	option.c	FUNCTION_78	SWITCH_1
0xceb6	      0x3d15200000	                         cmp eax, 0x2015	     10550	option.c	FUNCTION_78	SWITCH_1
0xcebb	     0xf84650a0000	                            je 0x400d966	     10550	option.c	FUNCTION_78	SWITCH_1
0xcec1	      0x3d15200000	                         cmp eax, 0x2015	     10550	option.c	FUNCTION_78	SWITCH_1
0xcec6	     0xf8f6c0a0000	                            jg 0x400d978	     10550	option.c	FUNCTION_78	SWITCH_1
0xcecc	      0xe9090b0000	                           jmp 0x400da1a	     10550	option.c	FUNCTION_78	SWITCH_1
0xced1	      0x3d19200000	                         cmp eax, 0x2019	     10550	option.c	FUNCTION_78	SWITCH_1
0xced6	     0xf84b60a0000	                            je 0x400d9d2	     10550	option.c	FUNCTION_78	SWITCH_1
0xcedc	      0x3d19200000	                         cmp eax, 0x2019	     10550	option.c	FUNCTION_78	SWITCH_1
0xcee1	     0xf8fbd0a0000	                            jg 0x400d9e4	     10550	option.c	FUNCTION_78	SWITCH_1
0xcee7	      0xe9940a0000	                           jmp 0x400d9c0	     10550	option.c	FUNCTION_78	SWITCH_1
0xceec	      0x3d09400000	                         cmp eax, 0x4009	     10550	option.c	FUNCTION_78	SWITCH_1
0xcef1	     0xf84df0b0000	                            je 0x400db16	     10550	option.c	FUNCTION_78	SWITCH_1
0xcef7	      0x3d09400000	                         cmp eax, 0x4009	     10550	option.c	FUNCTION_78	SWITCH_1
0xcefc	     0xf8fc3000000	                            jg 0x400d005	     10550	option.c	FUNCTION_78	SWITCH_1
0xcf02	      0x3d23200000	                         cmp eax, 0x2023	     10550	option.c	FUNCTION_78	SWITCH_1
0xcf07	     0xf84610a0000	                            je 0x400d9ae	     10550	option.c	FUNCTION_78	SWITCH_1
0xcf0d	      0x3d23200000	                         cmp eax, 0x2023	     10550	option.c	FUNCTION_78	SWITCH_1
0xcf12	            0x7f53	                            jg 0x400cfa7	     10550	option.c	FUNCTION_78	SWITCH_1
0xcf14	      0x3d1e200000	                         cmp eax, 0x201e	     10550	option.c	FUNCTION_78	SWITCH_1
0xcf19	     0xf840b090000	                            je 0x400d86a	     10550	option.c	FUNCTION_78	SWITCH_1
0xcf1f	      0x3d1e200000	                         cmp eax, 0x201e	     10550	option.c	FUNCTION_78	SWITCH_1
0xcf24	            0x7f1b	                            jg 0x400cf81	     10550	option.c	FUNCTION_78	SWITCH_1
0xcf26	      0x3d1c200000	                         cmp eax, 0x201c	     10550	option.c	FUNCTION_78	SWITCH_1
0xcf2b	     0xf84850a0000	                            je 0x400d9f6	     10550	option.c	FUNCTION_78	SWITCH_1
0xcf31	      0x3d1d200000	                         cmp eax, 0x201d	     10550	option.c	FUNCTION_78	SWITCH_1
0xcf36	     0xf84dc080000	                            je 0x400d858	     10550	option.c	FUNCTION_78	SWITCH_1
0xcf3c	      0xe96a0f0000	                           jmp 0x400deeb	     10550	option.c	FUNCTION_78	SWITCH_1
0xcf41	      0x3d20200000	                         cmp eax, 0x2020	     10550	option.c	FUNCTION_78	SWITCH_1
0xcf46	     0xf8402090000	                            je 0x400d88e	     10550	option.c	FUNCTION_78	SWITCH_1
0xcf4c	      0x3d20200000	                         cmp eax, 0x2020	     10550	option.c	FUNCTION_78	SWITCH_1
0xcf51	     0xf8ce5080000	                            jl 0x400d87c	     10550	option.c	FUNCTION_78	SWITCH_1
0xcf57	      0x3d22200000	                         cmp eax, 0x2022	     10550	option.c	FUNCTION_78	SWITCH_1
0xcf5c	     0xf84fa090000	                            je 0x400d99c	     10550	option.c	FUNCTION_78	SWITCH_1
0xcf62	      0xe9440f0000	                           jmp 0x400deeb	     10550	option.c	FUNCTION_78	SWITCH_1
0xcf67	      0x3d00400000	                         cmp eax, 0x4000	     10550	option.c	FUNCTION_78	SWITCH_1
0xcf6c	     0xf840a0b0000	                            je 0x400dabc	     10550	option.c	FUNCTION_78	SWITCH_1
0xcf72	      0x3d00400000	                         cmp eax, 0x4000	     10550	option.c	FUNCTION_78	SWITCH_1
0xcf77	            0x7f26	                            jg 0x400cfdf	     10550	option.c	FUNCTION_78	SWITCH_1
0xcf79	      0x3d25200000	                         cmp eax, 0x2025	     10550	option.c	FUNCTION_78	SWITCH_1
0xcf7e	     0xf84180f0000	                            je 0x400dedc	     10550	option.c	FUNCTION_78	SWITCH_1
0xcf84	      0x3d25200000	                         cmp eax, 0x2025	     10550	option.c	FUNCTION_78	SWITCH_1
0xcf89	     0xf8c390a0000	                            jl 0x400da08	     10550	option.c	FUNCTION_78	SWITCH_1
0xcf8f	      0x3d21300000	                         cmp eax, 0x3021	     10550	option.c	FUNCTION_78	SWITCH_1
0xcf94	     0xf8489070000	                            je 0x400d763	     10550	option.c	FUNCTION_78	SWITCH_1
0xcf9a	      0xe90c0f0000	                           jmp 0x400deeb	     10550	option.c	FUNCTION_78	SWITCH_1
0xcf9f	      0x3d04400000	                         cmp eax, 0x4004	     10550	option.c	FUNCTION_78	SWITCH_1
0xcfa4	     0xf841a0b0000	                            je 0x400db04	     10550	option.c	FUNCTION_78	SWITCH_1
0xcfaa	      0x3d08400000	                         cmp eax, 0x4008	     10550	option.c	FUNCTION_78	SWITCH_1
0xcfaf	     0xf84d90a0000	                            je 0x400dace	     10550	option.c	FUNCTION_78	SWITCH_1
0xcfb5	      0x3d02400000	                         cmp eax, 0x4002	     10550	option.c	FUNCTION_78	SWITCH_1
0xcfba	     0xf84f20a0000	                            je 0x400daf2	     10550	option.c	FUNCTION_78	SWITCH_1
0xcfc0	      0xe9e60e0000	                           jmp 0x400deeb	     10550	option.c	FUNCTION_78	SWITCH_1
0xcfc5	      0x3d11400000	                         cmp eax, 0x4011	     10550	option.c	FUNCTION_78	SWITCH_1
0xcfca	     0xf84840b0000	                            je 0x400db94	     10550	option.c	FUNCTION_78	SWITCH_1
0xcfd0	      0x3d11400000	                         cmp eax, 0x4011	     10550	option.c	FUNCTION_78	SWITCH_1
0xcfd5	            0x7f53	                            jg 0x400d06a	     10550	option.c	FUNCTION_78	SWITCH_1
0xcfd7	      0x3d0c400000	                         cmp eax, 0x400c	     10550	option.c	FUNCTION_78	SWITCH_1
0xcfdc	     0xf84180b0000	                            je 0x400db3a	     10550	option.c	FUNCTION_78	SWITCH_1
0xcfe2	      0x3d0c400000	                         cmp eax, 0x400c	     10550	option.c	FUNCTION_78	SWITCH_1
0xcfe7	            0x7f1b	                            jg 0x400d044	     10550	option.c	FUNCTION_78	SWITCH_1
0xcfe9	      0x3d0a400000	                         cmp eax, 0x400a	     10550	option.c	FUNCTION_78	SWITCH_1
0xcfee	     0xf84ac0a0000	                            je 0x400dae0	     10550	option.c	FUNCTION_78	SWITCH_1
0xcff4	      0x3d0b400000	                         cmp eax, 0x400b	     10550	option.c	FUNCTION_78	SWITCH_1
0xcff9	     0xf84e90a0000	                            je 0x400db28	     10550	option.c	FUNCTION_78	SWITCH_1
0xcfff	      0xe9a70e0000	                           jmp 0x400deeb	     10550	option.c	FUNCTION_78	SWITCH_1
0xd004	      0x3d0e400000	                         cmp eax, 0x400e	     10550	option.c	FUNCTION_78	SWITCH_1
0xd009	     0xf840f0b0000	                            je 0x400db5e	     10550	option.c	FUNCTION_78	SWITCH_1
0xd00f	      0x3d0e400000	                         cmp eax, 0x400e	     10550	option.c	FUNCTION_78	SWITCH_1
0xd014	     0xf8cf20a0000	                            jl 0x400db4c	     10550	option.c	FUNCTION_78	SWITCH_1
0xd01a	      0x3d0f400000	                         cmp eax, 0x400f	     10550	option.c	FUNCTION_78	SWITCH_1
0xd01f	     0xf840b0b0000	                            je 0x400db70	     10550	option.c	FUNCTION_78	SWITCH_1
0xd025	      0xe9810e0000	                           jmp 0x400deeb	     10550	option.c	FUNCTION_78	SWITCH_1
0xd02a	      0x3d19400000	                         cmp eax, 0x4019	     10550	option.c	FUNCTION_78	SWITCH_1
0xd02f	     0xf84670b0000	                            je 0x400dbdc	     10550	option.c	FUNCTION_78	SWITCH_1
0xd035	      0x3d19400000	                         cmp eax, 0x4019	     10550	option.c	FUNCTION_78	SWITCH_1
0xd03a	            0x7f26	                            jg 0x400d0a2	     10550	option.c	FUNCTION_78	SWITCH_1
0xd03c	      0x3d13400000	                         cmp eax, 0x4013	     10550	option.c	FUNCTION_78	SWITCH_1
0xd041	     0xf841f0b0000	                            je 0x400dba6	     10550	option.c	FUNCTION_78	SWITCH_1
0xd047	      0x3d13400000	                         cmp eax, 0x4013	     10550	option.c	FUNCTION_78	SWITCH_1
0xd04c	     0xf8cf00a0000	                            jl 0x400db82	     10550	option.c	FUNCTION_78	SWITCH_1
0xd052	      0x3d16400000	                         cmp eax, 0x4016	     10550	option.c	FUNCTION_78	SWITCH_1
0xd057	     0xf841b0b0000	                            je 0x400dbb8	     10550	option.c	FUNCTION_78	SWITCH_1
0xd05d	      0xe9490e0000	                           jmp 0x400deeb	     10550	option.c	FUNCTION_78	SWITCH_1
0xd062	      0x3d1c400000	                         cmp eax, 0x401c	     10550	option.c	FUNCTION_78	SWITCH_1
0xd067	     0xf84530b0000	                            je 0x400dc00	     10550	option.c	FUNCTION_78	SWITCH_1
0xd06d	      0x3d1d400000	                         cmp eax, 0x401d	     10550	option.c	FUNCTION_78	SWITCH_1
0xd072	     0xf845a0b0000	                            je 0x400dc12	     10550	option.c	FUNCTION_78	SWITCH_1
0xd078	      0x3d1a400000	                         cmp eax, 0x401a	     10550	option.c	FUNCTION_78	SWITCH_1
0xd07d	     0xf842b0b0000	                            je 0x400dbee	     10550	option.c	FUNCTION_78	SWITCH_1
0xd083	      0xe9230e0000	                           jmp 0x400deeb	     10550	option.c	FUNCTION_78	SWITCH_1
0xd088	      0x3d42400000	                         cmp eax, 0x4042	     10550	option.c	FUNCTION_78	SWITCH_1
0xd08d	     0xf84870d0000	                            je 0x400de5a	     10550	option.c	FUNCTION_78	SWITCH_1
0xd093	      0x3d42400000	                         cmp eax, 0x4042	     10550	option.c	FUNCTION_78	SWITCH_1
0xd098	     0xf8f70010000	                            jg 0x400d24e	     10550	option.c	FUNCTION_78	SWITCH_1
0xd09e	      0x3d32400000	                         cmp eax, 0x4032	     10550	option.c	FUNCTION_78	SWITCH_1
0xd0a3	     0xf845b0c0000	                            je 0x400dd44	     10550	option.c	FUNCTION_78	SWITCH_1
0xd0a9	      0x3d32400000	                         cmp eax, 0x4032	     10550	option.c	FUNCTION_78	SWITCH_1
0xd0ae	     0xf8fad000000	                            jg 0x400d1a1	     10550	option.c	FUNCTION_78	SWITCH_1
0xd0b4	      0x3d27400000	                         cmp eax, 0x4027	     10550	option.c	FUNCTION_78	SWITCH_1
0xd0b9	     0xf84c70b0000	                            je 0x400dcc6	     10550	option.c	FUNCTION_78	SWITCH_1
0xd0bf	      0x3d27400000	                         cmp eax, 0x4027	     10550	option.c	FUNCTION_78	SWITCH_1
0xd0c4	            0x7f48	                            jg 0x400d14e	     10550	option.c	FUNCTION_78	SWITCH_1
0xd0c6	      0x3d23400000	                         cmp eax, 0x4023	     10550	option.c	FUNCTION_78	SWITCH_1
0xd0cb	     0xf84370b0000	                            je 0x400dc48	     10550	option.c	FUNCTION_78	SWITCH_1
0xd0d1	      0x3d23400000	                         cmp eax, 0x4023	     10550	option.c	FUNCTION_78	SWITCH_1
0xd0d6	            0x7f1b	                            jg 0x400d133	     10550	option.c	FUNCTION_78	SWITCH_1
0xd0d8	      0x3d21400000	                         cmp eax, 0x4021	     10550	option.c	FUNCTION_78	SWITCH_1
0xd0dd	     0xf84010b0000	                            je 0x400dc24	     10550	option.c	FUNCTION_78	SWITCH_1
0xd0e3	      0x3d22400000	                         cmp eax, 0x4022	     10550	option.c	FUNCTION_78	SWITCH_1
0xd0e8	     0xf842c0b0000	                            je 0x400dc5a	     10550	option.c	FUNCTION_78	SWITCH_1
0xd0ee	      0xe9b80d0000	                           jmp 0x400deeb	     10550	option.c	FUNCTION_78	SWITCH_1
0xd0f3	      0x3d25400000	                         cmp eax, 0x4025	     10550	option.c	FUNCTION_78	SWITCH_1
0xd0f8	     0xf842e0b0000	                            je 0x400dc6c	     10550	option.c	FUNCTION_78	SWITCH_1
0xd0fe	      0x3d25400000	                         cmp eax, 0x4025	     10550	option.c	FUNCTION_78	SWITCH_1
0xd103	     0xf8f350b0000	                            jg 0x400dc7e	     10550	option.c	FUNCTION_78	SWITCH_1
0xd109	      0xe9e80a0000	                           jmp 0x400dc36	     10550	option.c	FUNCTION_78	SWITCH_1
0xd10e	      0x3d2b400000	                         cmp eax, 0x402b	     10550	option.c	FUNCTION_78	SWITCH_1
0xd113	     0xf84490b0000	                            je 0x400dca2	     10550	option.c	FUNCTION_78	SWITCH_1
0xd119	      0x3d2b400000	                         cmp eax, 0x402b	     10550	option.c	FUNCTION_78	SWITCH_1
0xd11e	            0x7f1b	                            jg 0x400d17b	     10550	option.c	FUNCTION_78	SWITCH_1
0xd120	      0x3d29400000	                         cmp eax, 0x4029	     10550	option.c	FUNCTION_78	SWITCH_1
0xd125	     0xf84490b0000	                            je 0x400dcb4	     10550	option.c	FUNCTION_78	SWITCH_1
0xd12b	      0x3d29400000	                         cmp eax, 0x4029	     10550	option.c	FUNCTION_78	SWITCH_1
0xd130	     0xf8f1a0b0000	                            jg 0x400dc90	     10550	option.c	FUNCTION_78	SWITCH_1
0xd136	      0xe95d0b0000	                           jmp 0x400dcd8	     10550	option.c	FUNCTION_78	SWITCH_1
0xd13b	      0x3d2d400000	                         cmp eax, 0x402d	     10550	option.c	FUNCTION_78	SWITCH_1
0xd140	     0xf84470d0000	                            je 0x400decd	     10550	option.c	FUNCTION_78	SWITCH_1
0xd146	      0x3d2d400000	                         cmp eax, 0x402d	     10550	option.c	FUNCTION_78	SWITCH_1
0xd14b	     0xf8c6b0b0000	                            jl 0x400dcfc	     10550	option.c	FUNCTION_78	SWITCH_1
0xd151	      0x3d2f400000	                         cmp eax, 0x402f	     10550	option.c	FUNCTION_78	SWITCH_1
0xd156	     0xf84720b0000	                            je 0x400dd0e	     10550	option.c	FUNCTION_78	SWITCH_1
0xd15c	      0xe94a0d0000	                           jmp 0x400deeb	     10550	option.c	FUNCTION_78	SWITCH_1
0xd161	      0x3d3a400000	                         cmp eax, 0x403a	     10550	option.c	FUNCTION_78	SWITCH_1
0xd166	     0xf84e00b0000	                            je 0x400dd8c	     10550	option.c	FUNCTION_78	SWITCH_1
0xd16c	      0x3d3a400000	                         cmp eax, 0x403a	     10550	option.c	FUNCTION_78	SWITCH_1
0xd171	            0x7f53	                            jg 0x400d206	     10550	option.c	FUNCTION_78	SWITCH_1
0xd173	      0x3d35400000	                         cmp eax, 0x4035	     10550	option.c	FUNCTION_78	SWITCH_1
0xd178	     0xf84740b0000	                            je 0x400dd32	     10550	option.c	FUNCTION_78	SWITCH_1
0xd17e	      0x3d35400000	                         cmp eax, 0x4035	     10550	option.c	FUNCTION_78	SWITCH_1
0xd183	            0x7f1b	                            jg 0x400d1e0	     10550	option.c	FUNCTION_78	SWITCH_1
0xd185	      0x3d33400000	                         cmp eax, 0x4033	     10550	option.c	FUNCTION_78	SWITCH_1
0xd18a	     0xf84500b0000	                            je 0x400dd20	     10550	option.c	FUNCTION_78	SWITCH_1
0xd190	      0x3d34400000	                         cmp eax, 0x4034	     10550	option.c	FUNCTION_78	SWITCH_1
0xd195	     0xf847b0b0000	                            je 0x400dd56	     10550	option.c	FUNCTION_78	SWITCH_1
0xd19b	      0xe90b0d0000	                           jmp 0x400deeb	     10550	option.c	FUNCTION_78	SWITCH_1
0xd1a0	      0x3d37400000	                         cmp eax, 0x4037	     10550	option.c	FUNCTION_78	SWITCH_1
0xd1a5	     0xf84df090000	                            je 0x400dbca	     10550	option.c	FUNCTION_78	SWITCH_1
0xd1ab	      0x3d37400000	                         cmp eax, 0x4037	     10550	option.c	FUNCTION_78	SWITCH_1
0xd1b0	     0xf8c720b0000	                            jl 0x400dd68	     10550	option.c	FUNCTION_78	SWITCH_1
0xd1b6	      0x3d39400000	                         cmp eax, 0x4039	     10550	option.c	FUNCTION_78	SWITCH_1
0xd1bb	     0xf84790b0000	                            je 0x400dd7a	     10550	option.c	FUNCTION_78	SWITCH_1
0xd1c1	      0xe9e50c0000	                           jmp 0x400deeb	     10550	option.c	FUNCTION_78	SWITCH_1
0xd1c6	      0x3d3e400000	                         cmp eax, 0x403e	     10550	option.c	FUNCTION_78	SWITCH_1
0xd1cb	     0xf84f90b0000	                            je 0x400de0a	     10550	option.c	FUNCTION_78	SWITCH_1
0xd1d1	      0x3d3e400000	                         cmp eax, 0x403e	     10550	option.c	FUNCTION_78	SWITCH_1
0xd1d6	            0x7f1b	                            jg 0x400d233	     10550	option.c	FUNCTION_78	SWITCH_1
0xd1d8	      0x3d3c400000	                         cmp eax, 0x403c	     10550	option.c	FUNCTION_78	SWITCH_1
0xd1dd	     0xf848d0b0000	                            je 0x400ddb0	     10550	option.c	FUNCTION_78	SWITCH_1
0xd1e3	      0x3d3c400000	                         cmp eax, 0x403c	     10550	option.c	FUNCTION_78	SWITCH_1
0xd1e8	     0xf8f940b0000	                            jg 0x400ddc2	     10550	option.c	FUNCTION_78	SWITCH_1
0xd1ee	      0xe96b0b0000	                           jmp 0x400dd9e	     10550	option.c	FUNCTION_78	SWITCH_1
0xd1f3	      0x3d40400000	                         cmp eax, 0x4040	     10550	option.c	FUNCTION_78	SWITCH_1
0xd1f8	     0xf84f00b0000	                            je 0x400de2e	     10550	option.c	FUNCTION_78	SWITCH_1
0xd1fe	      0x3d40400000	                         cmp eax, 0x4040	     10550	option.c	FUNCTION_78	SWITCH_1
0xd203	     0xf8ffb0b0000	                            jg 0x400de44	     10550	option.c	FUNCTION_78	SWITCH_1
0xd209	      0xe9ce0b0000	                           jmp 0x400de1c	     10550	option.c	FUNCTION_78	SWITCH_1
0xd20e	      0x3d10500000	                         cmp eax, 0x5010	     10550	option.c	FUNCTION_78	SWITCH_1
0xd213	     0xf84d6040000	                            je 0x400d72f	     10550	option.c	FUNCTION_78	SWITCH_1
0xd219	      0x3d10500000	                         cmp eax, 0x5010	     10550	option.c	FUNCTION_78	SWITCH_1
0xd21e	     0xf8fc3000000	                            jg 0x400d327	     10550	option.c	FUNCTION_78	SWITCH_1
0xd224	      0x3d4b400000	                         cmp eax, 0x404b	     10550	option.c	FUNCTION_78	SWITCH_1
0xd229	     0xf84310c0000	                            je 0x400dea0	     10550	option.c	FUNCTION_78	SWITCH_1
0xd22f	      0x3d4b400000	                         cmp eax, 0x404b	     10550	option.c	FUNCTION_78	SWITCH_1
0xd234	            0x7f53	                            jg 0x400d2c9	     10550	option.c	FUNCTION_78	SWITCH_1
0xd236	      0x3d45400000	                         cmp eax, 0x4045	     10550	option.c	FUNCTION_78	SWITCH_1
0xd23b	     0xf84ef0b0000	                            je 0x400de70	     10550	option.c	FUNCTION_78	SWITCH_1
0xd241	      0x3d45400000	                         cmp eax, 0x4045	     10550	option.c	FUNCTION_78	SWITCH_1
0xd246	            0x7f1b	                            jg 0x400d2a3	     10550	option.c	FUNCTION_78	SWITCH_1
0xd248	      0x3d43400000	                         cmp eax, 0x4043	     10550	option.c	FUNCTION_78	SWITCH_1
0xd24d	     0xf84410b0000	                            je 0x400ddd4	     10550	option.c	FUNCTION_78	SWITCH_1
0xd253	      0x3d44400000	                         cmp eax, 0x4044	     10550	option.c	FUNCTION_78	SWITCH_1
0xd258	     0xf84480b0000	                            je 0x400dde6	     10550	option.c	FUNCTION_78	SWITCH_1
0xd25e	      0xe9480c0000	                           jmp 0x400deeb	     10550	option.c	FUNCTION_78	SWITCH_1
0xd263	      0x3d49400000	                         cmp eax, 0x4049	     10550	option.c	FUNCTION_78	SWITCH_1
0xd268	     0xf84d40b0000	                            je 0x400de82	     10550	option.c	FUNCTION_78	SWITCH_1
0xd26e	      0x3d49400000	                         cmp eax, 0x4049	     10550	option.c	FUNCTION_78	SWITCH_1
0xd273	     0xf8fd80b0000	                            jg 0x400de91	     10550	option.c	FUNCTION_78	SWITCH_1
0xd279	      0x3d46400000	                         cmp eax, 0x4046	     10550	option.c	FUNCTION_78	SWITCH_1
0xd27e	     0xf84340b0000	                            je 0x400ddf8	     10550	option.c	FUNCTION_78	SWITCH_1
0xd284	      0xe9220c0000	                           jmp 0x400deeb	     10550	option.c	FUNCTION_78	SWITCH_1
0xd289	      0x3d03500000	                         cmp eax, 0x5003	     10550	option.c	FUNCTION_78	SWITCH_1
0xd28e	     0xf8453020000	                            je 0x400d527	     10550	option.c	FUNCTION_78	SWITCH_1
0xd294	      0x3d03500000	                         cmp eax, 0x5003	     10550	option.c	FUNCTION_78	SWITCH_1
0xd299	            0x7f26	                            jg 0x400d301	     10550	option.c	FUNCTION_78	SWITCH_1
0xd29b	      0x3d4e400000	                         cmp eax, 0x404e	     10550	option.c	FUNCTION_78	SWITCH_1
0xd2a0	     0xf84d80b0000	                            je 0x400debe	     10550	option.c	FUNCTION_78	SWITCH_1
0xd2a6	      0x3d01500000	                         cmp eax, 0x5001	     10550	option.c	FUNCTION_78	SWITCH_1
0xd2ab	     0xf849e010000	                            je 0x400d48f	     10550	option.c	FUNCTION_78	SWITCH_1
0xd2b1	      0x3d4c400000	                         cmp eax, 0x404c	     10550	option.c	FUNCTION_78	SWITCH_1
0xd2b6	     0xf84b30b0000	                            je 0x400deaf	     10550	option.c	FUNCTION_78	SWITCH_1
0xd2bc	      0xe9ea0b0000	                           jmp 0x400deeb	     10550	option.c	FUNCTION_78	SWITCH_1
0xd2c1	      0x3d06500000	                         cmp eax, 0x5006	     10550	option.c	FUNCTION_78	SWITCH_1
0xd2c6	     0xf8487030000	                            je 0x400d693	     10550	option.c	FUNCTION_78	SWITCH_1
0xd2cc	      0x3d07500000	                         cmp eax, 0x5007	     10550	option.c	FUNCTION_78	SWITCH_1
0xd2d1	     0xf84b0030000	                            je 0x400d6c7	     10550	option.c	FUNCTION_78	SWITCH_1
0xd2d7	      0x3d05500000	                         cmp eax, 0x5005	     10550	option.c	FUNCTION_78	SWITCH_1
0xd2dc	     0xf843d030000	                            je 0x400d65f	     10550	option.c	FUNCTION_78	SWITCH_1
0xd2e2	      0xe9c40b0000	                           jmp 0x400deeb	     10550	option.c	FUNCTION_78	SWITCH_1
0xd2e7	      0x3d1f500000	                         cmp eax, 0x501f	     10550	option.c	FUNCTION_78	SWITCH_1
0xd2ec	     0xf84c9030000	                            je 0x400d6fb	     10550	option.c	FUNCTION_78	SWITCH_1
0xd2f2	      0x3d1f500000	                         cmp eax, 0x501f	     10550	option.c	FUNCTION_78	SWITCH_1
0xd2f7	            0x7f53	                            jg 0x400d38c	     10550	option.c	FUNCTION_78	SWITCH_1
0xd2f9	      0x3d17500000	                         cmp eax, 0x5017	     10550	option.c	FUNCTION_78	SWITCH_1
0xd2fe	     0xf8417020000	                            je 0x400d55b	     10550	option.c	FUNCTION_78	SWITCH_1
0xd304	      0x3d17500000	                         cmp eax, 0x5017	     10550	option.c	FUNCTION_78	SWITCH_1
0xd309	            0x7f1b	                            jg 0x400d366	     10550	option.c	FUNCTION_78	SWITCH_1
0xd30b	      0x3d14500000	                         cmp eax, 0x5014	     10550	option.c	FUNCTION_78	SWITCH_1
0xd310	     0xf846d020000	                            je 0x400d5c3	     10550	option.c	FUNCTION_78	SWITCH_1
0xd316	      0x3d15500000	                         cmp eax, 0x5015	     10550	option.c	FUNCTION_78	SWITCH_1
0xd31b	     0xf8496020000	                            je 0x400d5f7	     10550	option.c	FUNCTION_78	SWITCH_1
0xd321	      0xe9850b0000	                           jmp 0x400deeb	     10550	option.c	FUNCTION_78	SWITCH_1
0xd326	      0x3d1b500000	                         cmp eax, 0x501b	     10550	option.c	FUNCTION_78	SWITCH_1
0xd32b	     0xf8482000000	                            je 0x400d3f3	     10550	option.c	FUNCTION_78	SWITCH_1
0xd331	      0x3d1e500000	                         cmp eax, 0x501e	     10550	option.c	FUNCTION_78	SWITCH_1
0xd336	     0xf84af020000	                            je 0x400d62b	     10550	option.c	FUNCTION_78	SWITCH_1
0xd33c	      0x3d18500000	                         cmp eax, 0x5018	     10550	option.c	FUNCTION_78	SWITCH_1
0xd341	     0xf8408020000	                            je 0x400d58f	     10550	option.c	FUNCTION_78	SWITCH_1
0xd347	      0xe95f0b0000	                           jmp 0x400deeb	     10550	option.c	FUNCTION_78	SWITCH_1
0xd34c	      0x3d38500000	                         cmp eax, 0x5038	     10550	option.c	FUNCTION_78	SWITCH_1
0xd351	     0xf84c4000000	                            je 0x400d45b	     10550	option.c	FUNCTION_78	SWITCH_1
0xd357	      0x3d38500000	                         cmp eax, 0x5038	     10550	option.c	FUNCTION_78	SWITCH_1
0xd35c	            0x7f22	                            jg 0x400d3c0	     10550	option.c	FUNCTION_78	SWITCH_1
0xd35e	      0x3d30500000	                         cmp eax, 0x5030	     10550	option.c	FUNCTION_78	SWITCH_1
0xd363	     0xf8423040000	                            je 0x400d7cc	     10550	option.c	FUNCTION_78	SWITCH_1
0xd369	      0x3d31500000	                         cmp eax, 0x5031	     10550	option.c	FUNCTION_78	SWITCH_1
0xd36e	     0xf844c040000	                            je 0x400d800	     10550	option.c	FUNCTION_78	SWITCH_1
0xd374	      0x3d2e500000	                         cmp eax, 0x502e	     10550	option.c	FUNCTION_78	SWITCH_1
0xd379	            0x746c	                            je 0x400d427	     10550	option.c	FUNCTION_78	SWITCH_1
0xd37b	      0xe92b0b0000	                           jmp 0x400deeb	     10550	option.c	FUNCTION_78	SWITCH_1
0xd380	      0x3d48500000	                         cmp eax, 0x5048	     10550	option.c	FUNCTION_78	SWITCH_1
0xd385	     0xf8428010000	                            je 0x400d4f3	     10550	option.c	FUNCTION_78	SWITCH_1
0xd38b	      0x3d4d500000	                         cmp eax, 0x504d	     10550	option.c	FUNCTION_78	SWITCH_1
0xd390	     0xf84c1030000	                            je 0x400d797	     10550	option.c	FUNCTION_78	SWITCH_1
0xd396	      0x3d47500000	                         cmp eax, 0x5047	     10550	option.c	FUNCTION_78	SWITCH_1
0xd39b	     0xf84de000000	                            je 0x400d4bf	     10550	option.c	FUNCTION_78	SWITCH_1
0xd3a1	      0xe9050b0000	                           jmp 0x400deeb	     10550	option.c	FUNCTION_78	SWITCH_1
0xd3a6	        0x488b45f8	                mov rax, qword [rbp - 8]	     10552	option.c	FUNCTION_78	SWITCH_1
0xd3aa	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10552	option.c	FUNCTION_78	SWITCH_1
0xd3ae	      0xe9170b0000	                           jmp 0x400df0a	     10552	option.c	FUNCTION_78	SWITCH_1
0xd3b3	    0x488b05000000	            mov rax, qword [0x0400d3fa] 	     10555	option.c	FUNCTION_78	SWITCH_1
0xd3ba	    0x488b80f01500	          mov rax, qword [rax + 0x15f0] 	     10555	option.c	FUNCTION_78	SWITCH_1
0xd3c1	           0xfb600	                   movzx eax, byte [rax]	     10555	option.c	FUNCTION_78	SWITCH_1
0xd3c4	            0x84c0	                             test al, al	     10556	option.c	FUNCTION_78	SWITCH_1
0xd3c6	            0x7412	                            je 0x400d41a	     10556	option.c	FUNCTION_78	SWITCH_1
0xd3c8	    0x488b05000000	            mov rax, qword [0x0400d40f] 	     10556	option.c	FUNCTION_78	SWITCH_1
0xd3cf	    0x4805f0150000	                         add rax, 0x15f0	     10556	option.c	FUNCTION_78	SWITCH_1
0xd3d5	      0xe9f00a0000	                           jmp 0x400df0a	     10555	option.c	FUNCTION_78	SWITCH_1
0xd3da	        0x488b45f8	                mov rax, qword [rbp - 8]	     10556	option.c	FUNCTION_78	SWITCH_1
0xd3de	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10556	option.c	FUNCTION_78	SWITCH_1
0xd3e2	      0xe9e30a0000	                           jmp 0x400df0a	     10555	option.c	FUNCTION_78	SWITCH_1
0xd3e7	    0x488b05000000	            mov rax, qword [0x0400d42e] 	     10557	option.c	FUNCTION_78	SWITCH_1
0xd3ee	    0x488b80001500	          mov rax, qword [rax + 0x1500] 	     10557	option.c	FUNCTION_78	SWITCH_1
0xd3f5	           0xfb600	                   movzx eax, byte [rax]	     10557	option.c	FUNCTION_78	SWITCH_1
0xd3f8	            0x84c0	                             test al, al	     10558	option.c	FUNCTION_78	SWITCH_1
0xd3fa	            0x7412	                            je 0x400d44e	     10558	option.c	FUNCTION_78	SWITCH_1
0xd3fc	    0x488b05000000	            mov rax, qword [0x0400d443] 	     10558	option.c	FUNCTION_78	SWITCH_1
0xd403	    0x480500150000	                         add rax, 0x1500	     10558	option.c	FUNCTION_78	SWITCH_1
0xd409	      0xe9bc0a0000	                           jmp 0x400df0a	     10557	option.c	FUNCTION_78	SWITCH_1
0xd40e	        0x488b45f8	                mov rax, qword [rbp - 8]	     10558	option.c	FUNCTION_78	SWITCH_1
0xd412	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10558	option.c	FUNCTION_78	SWITCH_1
0xd416	      0xe9af0a0000	                           jmp 0x400df0a	     10557	option.c	FUNCTION_78	SWITCH_1
0xd41b	    0x488b05000000	            mov rax, qword [0x0400d462] 	     10559	option.c	FUNCTION_78	SWITCH_1
0xd422	    0x488b80f81500	          mov rax, qword [rax + 0x15f8] 	     10559	option.c	FUNCTION_78	SWITCH_1
0xd429	           0xfb600	                   movzx eax, byte [rax]	     10559	option.c	FUNCTION_78	SWITCH_1
0xd42c	            0x84c0	                             test al, al	     10560	option.c	FUNCTION_78	SWITCH_1
0xd42e	            0x7412	                            je 0x400d482	     10560	option.c	FUNCTION_78	SWITCH_1
0xd430	    0x488b05000000	            mov rax, qword [0x0400d477] 	     10560	option.c	FUNCTION_78	SWITCH_1
0xd437	    0x4805f8150000	                         add rax, 0x15f8	     10560	option.c	FUNCTION_78	SWITCH_1
0xd43d	      0xe9880a0000	                           jmp 0x400df0a	     10559	option.c	FUNCTION_78	SWITCH_1
0xd442	        0x488b45f8	                mov rax, qword [rbp - 8]	     10560	option.c	FUNCTION_78	SWITCH_1
0xd446	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10560	option.c	FUNCTION_78	SWITCH_1
0xd44a	      0xe97b0a0000	                           jmp 0x400df0a	     10559	option.c	FUNCTION_78	SWITCH_1
0xd44f	    0x488b05000000	            mov rax, qword [0x0400d496] 	     10561	option.c	FUNCTION_78	SWITCH_1
0xd456	    0x8b8000160000	          mov eax, dword [rax + 0x1600] 	     10561	option.c	FUNCTION_78	SWITCH_1
0xd45c	            0x85c0	                           test eax, eax	     10562	option.c	FUNCTION_78	SWITCH_1
0xd45e	            0x7812	                            js 0x400d4b2	     10562	option.c	FUNCTION_78	SWITCH_1
0xd460	    0x488b05000000	            mov rax, qword [0x0400d4a7] 	     10562	option.c	FUNCTION_78	SWITCH_1
0xd467	    0x480500160000	                         add rax, 0x1600	     10562	option.c	FUNCTION_78	SWITCH_1
0xd46d	      0xe9580a0000	                           jmp 0x400df0a	     10561	option.c	FUNCTION_78	SWITCH_1
0xd472	        0x488b45f8	                mov rax, qword [rbp - 8]	     10562	option.c	FUNCTION_78	SWITCH_1
0xd476	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10562	option.c	FUNCTION_78	SWITCH_1
0xd47a	      0xe94b0a0000	                           jmp 0x400df0a	     10561	option.c	FUNCTION_78	SWITCH_1
0xd47f	    0x488b05000000	            mov rax, qword [0x0400d4c6] 	     10563	option.c	FUNCTION_78	SWITCH_1
0xd486	    0x488b80081600	          mov rax, qword [rax + 0x1608] 	     10563	option.c	FUNCTION_78	SWITCH_1
0xd48d	           0xfb600	                   movzx eax, byte [rax]	     10563	option.c	FUNCTION_78	SWITCH_1
0xd490	            0x84c0	                             test al, al	     10564	option.c	FUNCTION_78	SWITCH_1
0xd492	            0x7412	                            je 0x400d4e6	     10564	option.c	FUNCTION_78	SWITCH_1
0xd494	    0x488b05000000	            mov rax, qword [0x0400d4db] 	     10564	option.c	FUNCTION_78	SWITCH_1
0xd49b	    0x480508160000	                         add rax, 0x1608	     10564	option.c	FUNCTION_78	SWITCH_1
0xd4a1	      0xe9240a0000	                           jmp 0x400df0a	     10563	option.c	FUNCTION_78	SWITCH_1
0xd4a6	        0x488b45f8	                mov rax, qword [rbp - 8]	     10564	option.c	FUNCTION_78	SWITCH_1
0xd4aa	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10564	option.c	FUNCTION_78	SWITCH_1
0xd4ae	      0xe9170a0000	                           jmp 0x400df0a	     10563	option.c	FUNCTION_78	SWITCH_1
0xd4b3	    0x488b05000000	            mov rax, qword [0x0400d4fa] 	     10565	option.c	FUNCTION_78	SWITCH_1
0xd4ba	    0x488b80101600	          mov rax, qword [rax + 0x1610] 	     10565	option.c	FUNCTION_78	SWITCH_1
0xd4c1	           0xfb600	                   movzx eax, byte [rax]	     10565	option.c	FUNCTION_78	SWITCH_1
0xd4c4	            0x84c0	                             test al, al	     10566	option.c	FUNCTION_78	SWITCH_1
0xd4c6	            0x7412	                            je 0x400d51a	     10566	option.c	FUNCTION_78	SWITCH_1
0xd4c8	    0x488b05000000	            mov rax, qword [0x0400d50f] 	     10566	option.c	FUNCTION_78	SWITCH_1
0xd4cf	    0x480510160000	                         add rax, 0x1610	     10566	option.c	FUNCTION_78	SWITCH_1
0xd4d5	      0xe9f0090000	                           jmp 0x400df0a	     10565	option.c	FUNCTION_78	SWITCH_1
0xd4da	        0x488b45f8	                mov rax, qword [rbp - 8]	     10566	option.c	FUNCTION_78	SWITCH_1
0xd4de	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10566	option.c	FUNCTION_78	SWITCH_1
0xd4e2	      0xe9e3090000	                           jmp 0x400df0a	     10565	option.c	FUNCTION_78	SWITCH_1
0xd4e7	    0x488b05000000	            mov rax, qword [0x0400d52e] 	     10567	option.c	FUNCTION_78	SWITCH_1
0xd4ee	    0x488b80e01300	          mov rax, qword [rax + 0x13e0] 	     10567	option.c	FUNCTION_78	SWITCH_1
0xd4f5	           0xfb600	                   movzx eax, byte [rax]	     10567	option.c	FUNCTION_78	SWITCH_1
0xd4f8	            0x84c0	                             test al, al	     10568	option.c	FUNCTION_78	SWITCH_1
0xd4fa	            0x7412	                            je 0x400d54e	     10568	option.c	FUNCTION_78	SWITCH_1
0xd4fc	    0x488b05000000	            mov rax, qword [0x0400d543] 	     10568	option.c	FUNCTION_78	SWITCH_1
0xd503	    0x4805e0130000	                         add rax, 0x13e0	     10568	option.c	FUNCTION_78	SWITCH_1
0xd509	      0xe9bc090000	                           jmp 0x400df0a	     10567	option.c	FUNCTION_78	SWITCH_1
0xd50e	        0x488b45f8	                mov rax, qword [rbp - 8]	     10568	option.c	FUNCTION_78	SWITCH_1
0xd512	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10568	option.c	FUNCTION_78	SWITCH_1
0xd516	      0xe9af090000	                           jmp 0x400df0a	     10567	option.c	FUNCTION_78	SWITCH_1
0xd51b	    0x488b05000000	            mov rax, qword [0x0400d562] 	     10570	option.c	FUNCTION_78	SWITCH_1
0xd522	    0x488b80a81400	          mov rax, qword [rax + 0x14a8] 	     10570	option.c	FUNCTION_78	SWITCH_1
0xd529	           0xfb600	                   movzx eax, byte [rax]	     10570	option.c	FUNCTION_78	SWITCH_1
0xd52c	            0x84c0	                             test al, al	     10571	option.c	FUNCTION_78	SWITCH_1
0xd52e	            0x7412	                            je 0x400d582	     10571	option.c	FUNCTION_78	SWITCH_1
0xd530	    0x488b05000000	            mov rax, qword [0x0400d577] 	     10571	option.c	FUNCTION_78	SWITCH_1
0xd537	    0x4805a8140000	                         add rax, 0x14a8	     10571	option.c	FUNCTION_78	SWITCH_1
0xd53d	      0xe988090000	                           jmp 0x400df0a	     10570	option.c	FUNCTION_78	SWITCH_1
0xd542	        0x488b45f8	                mov rax, qword [rbp - 8]	     10571	option.c	FUNCTION_78	SWITCH_1
0xd546	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10571	option.c	FUNCTION_78	SWITCH_1
0xd54a	      0xe97b090000	                           jmp 0x400df0a	     10570	option.c	FUNCTION_78	SWITCH_1
0xd54f	    0x488b05000000	            mov rax, qword [0x0400d596] 	     10572	option.c	FUNCTION_78	SWITCH_1
0xd556	    0x488b80b01400	          mov rax, qword [rax + 0x14b0] 	     10572	option.c	FUNCTION_78	SWITCH_1
0xd55d	           0xfb600	                   movzx eax, byte [rax]	     10572	option.c	FUNCTION_78	SWITCH_1
0xd560	            0x84c0	                             test al, al	     10573	option.c	FUNCTION_78	SWITCH_1
0xd562	            0x7412	                            je 0x400d5b6	     10573	option.c	FUNCTION_78	SWITCH_1
0xd564	    0x488b05000000	            mov rax, qword [0x0400d5ab] 	     10573	option.c	FUNCTION_78	SWITCH_1
0xd56b	    0x4805b0140000	                         add rax, 0x14b0	     10573	option.c	FUNCTION_78	SWITCH_1
0xd571	      0xe954090000	                           jmp 0x400df0a	     10572	option.c	FUNCTION_78	SWITCH_1
0xd576	        0x488b45f8	                mov rax, qword [rbp - 8]	     10573	option.c	FUNCTION_78	SWITCH_1
0xd57a	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10573	option.c	FUNCTION_78	SWITCH_1
0xd57e	      0xe947090000	                           jmp 0x400df0a	     10572	option.c	FUNCTION_78	SWITCH_1
0xd583	    0x488b05000000	            mov rax, qword [0x0400d5ca] 	     10576	option.c	FUNCTION_78	SWITCH_1
0xd58a	    0x488b80201600	          mov rax, qword [rax + 0x1620] 	     10576	option.c	FUNCTION_78	SWITCH_1
0xd591	           0xfb600	                   movzx eax, byte [rax]	     10576	option.c	FUNCTION_78	SWITCH_1
0xd594	            0x84c0	                             test al, al	     10577	option.c	FUNCTION_78	SWITCH_1
0xd596	            0x7412	                            je 0x400d5ea	     10577	option.c	FUNCTION_78	SWITCH_1
0xd598	    0x488b05000000	            mov rax, qword [0x0400d5df] 	     10577	option.c	FUNCTION_78	SWITCH_1
0xd59f	    0x480520160000	                         add rax, 0x1620	     10577	option.c	FUNCTION_78	SWITCH_1
0xd5a5	      0xe920090000	                           jmp 0x400df0a	     10576	option.c	FUNCTION_78	SWITCH_1
0xd5aa	        0x488b45f8	                mov rax, qword [rbp - 8]	     10577	option.c	FUNCTION_78	SWITCH_1
0xd5ae	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10577	option.c	FUNCTION_78	SWITCH_1
0xd5b2	      0xe913090000	                           jmp 0x400df0a	     10576	option.c	FUNCTION_78	SWITCH_1
0xd5b7	    0x488b05000000	            mov rax, qword [0x0400d5fe] 	     10578	option.c	FUNCTION_78	SWITCH_1
0xd5be	    0x488b80281600	          mov rax, qword [rax + 0x1628] 	     10578	option.c	FUNCTION_78	SWITCH_1
0xd5c5	           0xfb600	                   movzx eax, byte [rax]	     10578	option.c	FUNCTION_78	SWITCH_1
0xd5c8	            0x84c0	                             test al, al	     10579	option.c	FUNCTION_78	SWITCH_1
0xd5ca	            0x7412	                            je 0x400d61e	     10579	option.c	FUNCTION_78	SWITCH_1
0xd5cc	    0x488b05000000	            mov rax, qword [0x0400d613] 	     10579	option.c	FUNCTION_78	SWITCH_1
0xd5d3	    0x480528160000	                         add rax, 0x1628	     10579	option.c	FUNCTION_78	SWITCH_1
0xd5d9	      0xe9ec080000	                           jmp 0x400df0a	     10578	option.c	FUNCTION_78	SWITCH_1
0xd5de	        0x488b45f8	                mov rax, qword [rbp - 8]	     10579	option.c	FUNCTION_78	SWITCH_1
0xd5e2	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10579	option.c	FUNCTION_78	SWITCH_1
0xd5e6	      0xe9df080000	                           jmp 0x400df0a	     10578	option.c	FUNCTION_78	SWITCH_1
0xd5eb	    0x488b05000000	            mov rax, qword [0x0400d632] 	     10581	option.c	FUNCTION_78	SWITCH_1
0xd5f2	    0x488b80e01400	          mov rax, qword [rax + 0x14e0] 	     10581	option.c	FUNCTION_78	SWITCH_1
0xd5f9	           0xfb600	                   movzx eax, byte [rax]	     10581	option.c	FUNCTION_78	SWITCH_1
0xd5fc	            0x84c0	                             test al, al	     10582	option.c	FUNCTION_78	SWITCH_1
0xd5fe	            0x7412	                            je 0x400d652	     10582	option.c	FUNCTION_78	SWITCH_1
0xd600	    0x488b05000000	            mov rax, qword [0x0400d647] 	     10582	option.c	FUNCTION_78	SWITCH_1
0xd607	    0x4805e0140000	                         add rax, 0x14e0	     10582	option.c	FUNCTION_78	SWITCH_1
0xd60d	      0xe9b8080000	                           jmp 0x400df0a	     10581	option.c	FUNCTION_78	SWITCH_1
0xd612	        0x488b45f8	                mov rax, qword [rbp - 8]	     10582	option.c	FUNCTION_78	SWITCH_1
0xd616	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10582	option.c	FUNCTION_78	SWITCH_1
0xd61a	      0xe9ab080000	                           jmp 0x400df0a	     10581	option.c	FUNCTION_78	SWITCH_1
0xd61f	    0x488b05000000	            mov rax, qword [0x0400d666] 	     10584	option.c	FUNCTION_78	SWITCH_1
0xd626	    0x488b80e81500	          mov rax, qword [rax + 0x15e8] 	     10584	option.c	FUNCTION_78	SWITCH_1
0xd62d	           0xfb600	                   movzx eax, byte [rax]	     10584	option.c	FUNCTION_78	SWITCH_1
0xd630	            0x84c0	                             test al, al	     10585	option.c	FUNCTION_78	SWITCH_1
0xd632	            0x7412	                            je 0x400d686	     10585	option.c	FUNCTION_78	SWITCH_1
0xd634	    0x488b05000000	            mov rax, qword [0x0400d67b] 	     10585	option.c	FUNCTION_78	SWITCH_1
0xd63b	    0x4805e8150000	                         add rax, 0x15e8	     10585	option.c	FUNCTION_78	SWITCH_1
0xd641	      0xe984080000	                           jmp 0x400df0a	     10584	option.c	FUNCTION_78	SWITCH_1
0xd646	        0x488b45f8	                mov rax, qword [rbp - 8]	     10585	option.c	FUNCTION_78	SWITCH_1
0xd64a	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10585	option.c	FUNCTION_78	SWITCH_1
0xd64e	      0xe977080000	                           jmp 0x400df0a	     10584	option.c	FUNCTION_78	SWITCH_1
0xd653	    0x488b05000000	            mov rax, qword [0x0400d69a] 	     10586	option.c	FUNCTION_78	SWITCH_1
0xd65a	    0x488b80d81500	          mov rax, qword [rax + 0x15d8] 	     10586	option.c	FUNCTION_78	SWITCH_1
0xd661	           0xfb600	                   movzx eax, byte [rax]	     10586	option.c	FUNCTION_78	SWITCH_1
0xd664	            0x84c0	                             test al, al	     10587	option.c	FUNCTION_78	SWITCH_1
0xd666	            0x7412	                            je 0x400d6ba	     10587	option.c	FUNCTION_78	SWITCH_1
0xd668	    0x488b05000000	            mov rax, qword [0x0400d6af] 	     10587	option.c	FUNCTION_78	SWITCH_1
0xd66f	    0x4805d8150000	                         add rax, 0x15d8	     10587	option.c	FUNCTION_78	SWITCH_1
0xd675	      0xe950080000	                           jmp 0x400df0a	     10586	option.c	FUNCTION_78	SWITCH_1
0xd67a	        0x488b45f8	                mov rax, qword [rbp - 8]	     10587	option.c	FUNCTION_78	SWITCH_1
0xd67e	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10587	option.c	FUNCTION_78	SWITCH_1
0xd682	      0xe943080000	                           jmp 0x400df0a	     10586	option.c	FUNCTION_78	SWITCH_1
0xd687	    0x488b05000000	            mov rax, qword [0x0400d6ce] 	     10588	option.c	FUNCTION_78	SWITCH_1
0xd68e	    0x488b80e01500	          mov rax, qword [rax + 0x15e0] 	     10588	option.c	FUNCTION_78	SWITCH_1
0xd695	           0xfb600	                   movzx eax, byte [rax]	     10588	option.c	FUNCTION_78	SWITCH_1
0xd698	            0x84c0	                             test al, al	     10589	option.c	FUNCTION_78	SWITCH_1
0xd69a	            0x7412	                            je 0x400d6ee	     10589	option.c	FUNCTION_78	SWITCH_1
0xd69c	    0x488b05000000	            mov rax, qword [0x0400d6e3] 	     10589	option.c	FUNCTION_78	SWITCH_1
0xd6a3	    0x4805e0150000	                         add rax, 0x15e0	     10589	option.c	FUNCTION_78	SWITCH_1
0xd6a9	      0xe91c080000	                           jmp 0x400df0a	     10588	option.c	FUNCTION_78	SWITCH_1
0xd6ae	        0x488b45f8	                mov rax, qword [rbp - 8]	     10589	option.c	FUNCTION_78	SWITCH_1
0xd6b2	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10589	option.c	FUNCTION_78	SWITCH_1
0xd6b6	      0xe90f080000	                           jmp 0x400df0a	     10588	option.c	FUNCTION_78	SWITCH_1
0xd6bb	    0x488b05000000	            mov rax, qword [0x0400d702] 	     10592	option.c	FUNCTION_78	SWITCH_1
0xd6c2	    0x488b80181700	          mov rax, qword [rax + 0x1718] 	     10592	option.c	FUNCTION_78	SWITCH_1
0xd6c9	           0xfb600	                   movzx eax, byte [rax]	     10592	option.c	FUNCTION_78	SWITCH_1
0xd6cc	            0x84c0	                             test al, al	     10593	option.c	FUNCTION_78	SWITCH_1
0xd6ce	            0x7412	                            je 0x400d722	     10593	option.c	FUNCTION_78	SWITCH_1
0xd6d0	    0x488b05000000	            mov rax, qword [0x0400d717] 	     10593	option.c	FUNCTION_78	SWITCH_1
0xd6d7	    0x480518170000	                         add rax, 0x1718	     10593	option.c	FUNCTION_78	SWITCH_1
0xd6dd	      0xe9e8070000	                           jmp 0x400df0a	     10592	option.c	FUNCTION_78	SWITCH_1
0xd6e2	        0x488b45f8	                mov rax, qword [rbp - 8]	     10593	option.c	FUNCTION_78	SWITCH_1
0xd6e6	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10593	option.c	FUNCTION_78	SWITCH_1
0xd6ea	      0xe9db070000	                           jmp 0x400df0a	     10592	option.c	FUNCTION_78	SWITCH_1
0xd6ef	    0x488b05000000	            mov rax, qword [0x0400d736] 	     10596	option.c	FUNCTION_78	SWITCH_1
0xd6f6	    0x488b80281700	          mov rax, qword [rax + 0x1728] 	     10596	option.c	FUNCTION_78	SWITCH_1
0xd6fd	           0xfb600	                   movzx eax, byte [rax]	     10596	option.c	FUNCTION_78	SWITCH_1
0xd700	            0x84c0	                             test al, al	     10597	option.c	FUNCTION_78	SWITCH_1
0xd702	            0x7412	                            je 0x400d756	     10597	option.c	FUNCTION_78	SWITCH_1
0xd704	    0x488b05000000	            mov rax, qword [0x0400d74b] 	     10597	option.c	FUNCTION_78	SWITCH_1
0xd70b	    0x480528170000	                         add rax, 0x1728	     10597	option.c	FUNCTION_78	SWITCH_1
0xd711	      0xe9b4070000	                           jmp 0x400df0a	     10596	option.c	FUNCTION_78	SWITCH_1
0xd716	        0x488b45f8	                mov rax, qword [rbp - 8]	     10597	option.c	FUNCTION_78	SWITCH_1
0xd71a	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10597	option.c	FUNCTION_78	SWITCH_1
0xd71e	      0xe9a7070000	                           jmp 0x400df0a	     10596	option.c	FUNCTION_78	SWITCH_1
0xd723	    0x488b05000000	            mov rax, qword [0x0400d76a] 	     10600	option.c	FUNCTION_78	SWITCH_1
0xd72a	    0x488b80800200	           mov rax, qword [rax + 0x280] 	     10600	option.c	FUNCTION_78	SWITCH_1
0xd731	           0xfb600	                   movzx eax, byte [rax]	     10600	option.c	FUNCTION_78	SWITCH_1
0xd734	            0x84c0	                             test al, al	     10601	option.c	FUNCTION_78	SWITCH_1
0xd736	            0x7412	                            je 0x400d78a	     10601	option.c	FUNCTION_78	SWITCH_1
0xd738	    0x488b05000000	            mov rax, qword [0x0400d77f] 	     10601	option.c	FUNCTION_78	SWITCH_1
0xd73f	    0x480580020000	                          add rax, 0x280	     10601	option.c	FUNCTION_78	SWITCH_1
0xd745	      0xe980070000	                           jmp 0x400df0a	     10600	option.c	FUNCTION_78	SWITCH_1
0xd74a	        0x488b45f8	                mov rax, qword [rbp - 8]	     10601	option.c	FUNCTION_78	SWITCH_1
0xd74e	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10601	option.c	FUNCTION_78	SWITCH_1
0xd752	      0xe973070000	                           jmp 0x400df0a	     10600	option.c	FUNCTION_78	SWITCH_1
0xd757	    0x488b05000000	            mov rax, qword [0x0400d79e] 	     10603	option.c	FUNCTION_78	SWITCH_1
0xd75e	    0x488b80301600	          mov rax, qword [rax + 0x1630] 	     10603	option.c	FUNCTION_78	SWITCH_1
0xd765	    0x483dc01dfeff	             cmp rax, 0xfffffffffffe1dc0	     10604	option.c	FUNCTION_78	SWITCH_1
0xd76b	            0x7412	                            je 0x400d7bf	     10604	option.c	FUNCTION_78	SWITCH_1
0xd76d	    0x488b05000000	            mov rax, qword [0x0400d7b4] 	     10604	option.c	FUNCTION_78	SWITCH_1
0xd774	    0x480530160000	                         add rax, 0x1630	     10604	option.c	FUNCTION_78	SWITCH_1
0xd77a	      0xe94b070000	                           jmp 0x400df0a	     10603	option.c	FUNCTION_78	SWITCH_1
0xd77f	        0x488b45f8	                mov rax, qword [rbp - 8]	     10604	option.c	FUNCTION_78	SWITCH_1
0xd783	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10604	option.c	FUNCTION_78	SWITCH_1
0xd787	      0xe93e070000	                           jmp 0x400df0a	     10603	option.c	FUNCTION_78	SWITCH_1
0xd78c	    0x488b05000000	            mov rax, qword [0x0400d7d3] 	     10606	option.c	FUNCTION_78	SWITCH_1
0xd793	    0x488b80401600	          mov rax, qword [rax + 0x1640] 	     10606	option.c	FUNCTION_78	SWITCH_1
0xd79a	           0xfb600	                   movzx eax, byte [rax]	     10606	option.c	FUNCTION_78	SWITCH_1
0xd79d	            0x84c0	                             test al, al	     10607	option.c	FUNCTION_78	SWITCH_1
0xd79f	            0x7412	                            je 0x400d7f3	     10607	option.c	FUNCTION_78	SWITCH_1
0xd7a1	    0x488b05000000	            mov rax, qword [0x0400d7e8] 	     10607	option.c	FUNCTION_78	SWITCH_1
0xd7a8	    0x480540160000	                         add rax, 0x1640	     10607	option.c	FUNCTION_78	SWITCH_1
0xd7ae	      0xe917070000	                           jmp 0x400df0a	     10606	option.c	FUNCTION_78	SWITCH_1
0xd7b3	        0x488b45f8	                mov rax, qword [rbp - 8]	     10607	option.c	FUNCTION_78	SWITCH_1
0xd7b7	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10607	option.c	FUNCTION_78	SWITCH_1
0xd7bb	      0xe90a070000	                           jmp 0x400df0a	     10606	option.c	FUNCTION_78	SWITCH_1
0xd7c0	    0x488b05000000	            mov rax, qword [0x0400d807] 	     10610	option.c	FUNCTION_78	SWITCH_1
0xd7c7	    0x488b80101500	          mov rax, qword [rax + 0x1510] 	     10610	option.c	FUNCTION_78	SWITCH_1
0xd7ce	           0xfb600	                   movzx eax, byte [rax]	     10610	option.c	FUNCTION_78	SWITCH_1
0xd7d1	            0x84c0	                             test al, al	     10611	option.c	FUNCTION_78	SWITCH_1
0xd7d3	            0x7412	                            je 0x400d827	     10611	option.c	FUNCTION_78	SWITCH_1
0xd7d5	    0x488b05000000	            mov rax, qword [0x0400d81c] 	     10611	option.c	FUNCTION_78	SWITCH_1
0xd7dc	    0x480510150000	                         add rax, 0x1510	     10611	option.c	FUNCTION_78	SWITCH_1
0xd7e2	      0xe9e3060000	                           jmp 0x400df0a	     10610	option.c	FUNCTION_78	SWITCH_1
0xd7e7	        0x488b45f8	                mov rax, qword [rbp - 8]	     10611	option.c	FUNCTION_78	SWITCH_1
0xd7eb	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10611	option.c	FUNCTION_78	SWITCH_1
0xd7ef	      0xe9d6060000	                           jmp 0x400df0a	     10610	option.c	FUNCTION_78	SWITCH_1
0xd7f4	    0x488b05000000	            mov rax, qword [0x0400d83b] 	     10615	option.c	FUNCTION_78	SWITCH_1
0xd7fb	    0x4805b0010000	                          add rax, 0x1b0	     10615	option.c	FUNCTION_78	SWITCH_1
0xd801	      0xe9c4060000	                           jmp 0x400df0a	     10615	option.c	FUNCTION_78	SWITCH_1
0xd806	    0x488b05000000	            mov rax, qword [0x0400d84d] 	     10617	option.c	FUNCTION_78	SWITCH_1
0xd80d	    0x480534020000	                          add rax, 0x234	     10617	option.c	FUNCTION_78	SWITCH_1
0xd813	      0xe9b2060000	                           jmp 0x400df0a	     10617	option.c	FUNCTION_78	SWITCH_1
0xd818	    0x488b05000000	            mov rax, qword [0x0400d85f] 	     10619	option.c	FUNCTION_78	SWITCH_1
0xd81f	    0x480568020000	                          add rax, 0x268	     10619	option.c	FUNCTION_78	SWITCH_1
0xd825	      0xe9a0060000	                           jmp 0x400df0a	     10619	option.c	FUNCTION_78	SWITCH_1
0xd82a	    0x488b05000000	            mov rax, qword [0x0400d871] 	     10622	option.c	FUNCTION_78	SWITCH_1
0xd831	    0x48056c020000	                          add rax, 0x26c	     10622	option.c	FUNCTION_78	SWITCH_1
0xd837	      0xe98e060000	                           jmp 0x400df0a	     10622	option.c	FUNCTION_78	SWITCH_1
0xd83c	    0x488b05000000	            mov rax, qword [0x0400d883] 	     10623	option.c	FUNCTION_78	SWITCH_1
0xd843	    0x480570020000	                          add rax, 0x270	     10623	option.c	FUNCTION_78	SWITCH_1
0xd849	      0xe97c060000	                           jmp 0x400df0a	     10623	option.c	FUNCTION_78	SWITCH_1
0xd84e	    0x488b05000000	            mov rax, qword [0x0400d895] 	     10624	option.c	FUNCTION_78	SWITCH_1
0xd855	    0x480578020000	                          add rax, 0x278	     10624	option.c	FUNCTION_78	SWITCH_1
0xd85b	      0xe96a060000	                           jmp 0x400df0a	     10624	option.c	FUNCTION_78	SWITCH_1
0xd860	    0x488b05000000	            mov rax, qword [0x0400d8a7] 	     10627	option.c	FUNCTION_78	SWITCH_1
0xd867	    0x4805c0010000	                          add rax, 0x1c0	     10627	option.c	FUNCTION_78	SWITCH_1
0xd86d	      0xe958060000	                           jmp 0x400df0a	     10627	option.c	FUNCTION_78	SWITCH_1
0xd872	    0x488b05000000	            mov rax, qword [0x0400d8b9] 	     10630	option.c	FUNCTION_78	SWITCH_1
0xd879	    0x4805c8010000	                          add rax, 0x1c8	     10630	option.c	FUNCTION_78	SWITCH_1
0xd87f	      0xe946060000	                           jmp 0x400df0a	     10630	option.c	FUNCTION_78	SWITCH_1
0xd884	    0x488b05000000	            mov rax, qword [0x0400d8cb] 	     10631	option.c	FUNCTION_78	SWITCH_1
0xd88b	    0x4805d4010000	                          add rax, 0x1d4	     10631	option.c	FUNCTION_78	SWITCH_1
0xd891	      0xe934060000	                           jmp 0x400df0a	     10631	option.c	FUNCTION_78	SWITCH_1
0xd896	    0x488b05000000	            mov rax, qword [0x0400d8dd] 	     10632	option.c	FUNCTION_78	SWITCH_1
0xd89d	    0x4805e0010000	                          add rax, 0x1e0	     10632	option.c	FUNCTION_78	SWITCH_1
0xd8a3	      0xe922060000	                           jmp 0x400df0a	     10632	option.c	FUNCTION_78	SWITCH_1
0xd8a8	    0x488b05000000	            mov rax, qword [0x0400d8ef] 	     10633	option.c	FUNCTION_78	SWITCH_1
0xd8af	    0x4805e8010000	                          add rax, 0x1e8	     10633	option.c	FUNCTION_78	SWITCH_1
0xd8b5	      0xe910060000	                           jmp 0x400df0a	     10633	option.c	FUNCTION_78	SWITCH_1
0xd8ba	    0x488b05000000	            mov rax, qword [0x0400d901] 	     10634	option.c	FUNCTION_78	SWITCH_1
0xd8c1	    0x4805f8010000	                          add rax, 0x1f8	     10634	option.c	FUNCTION_78	SWITCH_1
0xd8c7	      0xe9fe050000	                           jmp 0x400df0a	     10634	option.c	FUNCTION_78	SWITCH_1
0xd8cc	    0x488b05000000	            mov rax, qword [0x0400d913] 	     10635	option.c	FUNCTION_78	SWITCH_1
0xd8d3	    0x480508020000	                          add rax, 0x208	     10635	option.c	FUNCTION_78	SWITCH_1
0xd8d9	      0xe9ec050000	                           jmp 0x400df0a	     10635	option.c	FUNCTION_78	SWITCH_1
0xd8de	    0x488b05000000	            mov rax, qword [0x0400d925] 	     10636	option.c	FUNCTION_78	SWITCH_1
0xd8e5	    0x480510020000	                          add rax, 0x210	     10636	option.c	FUNCTION_78	SWITCH_1
0xd8eb	      0xe9da050000	                           jmp 0x400df0a	     10636	option.c	FUNCTION_78	SWITCH_1
0xd8f0	    0x488b05000000	            mov rax, qword [0x0400d937] 	     10638	option.c	FUNCTION_78	SWITCH_1
0xd8f7	    0x480518020000	                          add rax, 0x218	     10638	option.c	FUNCTION_78	SWITCH_1
0xd8fd	      0xe9c8050000	                           jmp 0x400df0a	     10638	option.c	FUNCTION_78	SWITCH_1
0xd902	    0x488b05000000	            mov rax, qword [0x0400d949] 	     10639	option.c	FUNCTION_78	SWITCH_1
0xd909	    0x480520020000	                          add rax, 0x220	     10639	option.c	FUNCTION_78	SWITCH_1
0xd90f	      0xe9b6050000	                           jmp 0x400df0a	     10639	option.c	FUNCTION_78	SWITCH_1
0xd914	    0x488b05000000	            mov rax, qword [0x0400d95b] 	     10641	option.c	FUNCTION_78	SWITCH_1
0xd91b	    0x480528020000	                          add rax, 0x228	     10641	option.c	FUNCTION_78	SWITCH_1
0xd921	      0xe9a4050000	                           jmp 0x400df0a	     10641	option.c	FUNCTION_78	SWITCH_1
0xd926	    0x488b05000000	            mov rax, qword [0x0400d96d] 	     10643	option.c	FUNCTION_78	SWITCH_1
0xd92d	    0x480538020000	                          add rax, 0x238	     10643	option.c	FUNCTION_78	SWITCH_1
0xd933	      0xe992050000	                           jmp 0x400df0a	     10643	option.c	FUNCTION_78	SWITCH_1
0xd938	    0x488b05000000	            mov rax, qword [0x0400d97f] 	     10644	option.c	FUNCTION_78	SWITCH_1
0xd93f	    0x48053c020000	                          add rax, 0x23c	     10644	option.c	FUNCTION_78	SWITCH_1
0xd945	      0xe980050000	                           jmp 0x400df0a	     10644	option.c	FUNCTION_78	SWITCH_1
0xd94a	    0x488b05000000	            mov rax, qword [0x0400d991] 	     10646	option.c	FUNCTION_78	SWITCH_1
0xd951	    0x480540020000	                          add rax, 0x240	     10646	option.c	FUNCTION_78	SWITCH_1
0xd957	      0xe96e050000	                           jmp 0x400df0a	     10646	option.c	FUNCTION_78	SWITCH_1
0xd95c	    0x488b05000000	            mov rax, qword [0x0400d9a3] 	     10648	option.c	FUNCTION_78	SWITCH_1
0xd963	    0x480548020000	                          add rax, 0x248	     10648	option.c	FUNCTION_78	SWITCH_1
0xd969	      0xe95c050000	                           jmp 0x400df0a	     10648	option.c	FUNCTION_78	SWITCH_1
0xd96e	    0x488b05000000	            mov rax, qword [0x0400d9b5] 	     10649	option.c	FUNCTION_78	SWITCH_1
0xd975	    0x48054c020000	                          add rax, 0x24c	     10649	option.c	FUNCTION_78	SWITCH_1
0xd97b	      0xe94a050000	                           jmp 0x400df0a	     10649	option.c	FUNCTION_78	SWITCH_1
0xd980	    0x488b05000000	            mov rax, qword [0x0400d9c7] 	     10651	option.c	FUNCTION_78	SWITCH_1
0xd987	    0x480550020000	                          add rax, 0x250	     10651	option.c	FUNCTION_78	SWITCH_1
0xd98d	      0xe938050000	                           jmp 0x400df0a	     10651	option.c	FUNCTION_78	SWITCH_1
0xd992	    0x488b05000000	            mov rax, qword [0x0400d9d9] 	     10654	option.c	FUNCTION_78	SWITCH_1
0xd999	    0x480554020000	                          add rax, 0x254	     10654	option.c	FUNCTION_78	SWITCH_1
0xd99f	      0xe926050000	                           jmp 0x400df0a	     10654	option.c	FUNCTION_78	SWITCH_1
0xd9a4	    0x488b05000000	            mov rax, qword [0x0400d9eb] 	     10655	option.c	FUNCTION_78	SWITCH_1
0xd9ab	    0x480558020000	                          add rax, 0x258	     10655	option.c	FUNCTION_78	SWITCH_1
0xd9b1	      0xe914050000	                           jmp 0x400df0a	     10655	option.c	FUNCTION_78	SWITCH_1
0xd9b6	    0x488b05000000	            mov rax, qword [0x0400d9fd] 	     10657	option.c	FUNCTION_78	SWITCH_1
0xd9bd	    0x480560020000	                          add rax, 0x260	     10657	option.c	FUNCTION_78	SWITCH_1
0xd9c3	      0xe902050000	                           jmp 0x400df0a	     10657	option.c	FUNCTION_78	SWITCH_1
0xd9c8	    0x488b05000000	            mov rax, qword [0x0400da0f] 	     10658	option.c	FUNCTION_78	SWITCH_1
0xd9cf	    0x480594020000	                          add rax, 0x294	     10658	option.c	FUNCTION_78	SWITCH_1
0xd9d5	      0xe9f0040000	                           jmp 0x400df0a	     10658	option.c	FUNCTION_78	SWITCH_1
0xd9da	    0x488b05000000	            mov rax, qword [0x0400da21] 	     10660	option.c	FUNCTION_78	SWITCH_1
0xd9e1	    0x480530020000	                          add rax, 0x230	     10660	option.c	FUNCTION_78	SWITCH_1
0xd9e7	      0xe9de040000	                           jmp 0x400df0a	     10660	option.c	FUNCTION_78	SWITCH_1
0xd9ec	    0x488b05000000	            mov rax, qword [0x0400da33] 	     10661	option.c	FUNCTION_78	SWITCH_1
0xd9f3	    0x4805b4010000	                          add rax, 0x1b4	     10661	option.c	FUNCTION_78	SWITCH_1
0xd9f9	      0xe9cc040000	                           jmp 0x400df0a	     10661	option.c	FUNCTION_78	SWITCH_1
0xd9fe	    0x488b05000000	            mov rax, qword [0x0400da45] 	     10662	option.c	FUNCTION_78	SWITCH_1
0xda05	    0x4805b8010000	                          add rax, 0x1b8	     10662	option.c	FUNCTION_78	SWITCH_1
0xda0b	      0xe9ba040000	                           jmp 0x400df0a	     10662	option.c	FUNCTION_78	SWITCH_1
0xda10	    0x488b05000000	            mov rax, qword [0x0400da57] 	     10665	option.c	FUNCTION_78	SWITCH_1
0xda17	    0x480588020000	                          add rax, 0x288	     10665	option.c	FUNCTION_78	SWITCH_1
0xda1d	      0xe9a8040000	                           jmp 0x400df0a	     10665	option.c	FUNCTION_78	SWITCH_1
0xda22	    0x488b05000000	            mov rax, qword [0x0400da69] 	     10668	option.c	FUNCTION_78	SWITCH_1
0xda29	    0x4805b0020000	                          add rax, 0x2b0	     10668	option.c	FUNCTION_78	SWITCH_1
0xda2f	      0xe996040000	                           jmp 0x400df0a	     10668	option.c	FUNCTION_78	SWITCH_1
0xda34	    0x488b05000000	            mov rax, qword [0x0400da7b] 	     10671	option.c	FUNCTION_78	SWITCH_1
0xda3b	    0x4805a0020000	                          add rax, 0x2a0	     10671	option.c	FUNCTION_78	SWITCH_1
0xda41	      0xe984040000	                           jmp 0x400df0a	     10671	option.c	FUNCTION_78	SWITCH_1
0xda46	    0x488b05000000	            mov rax, qword [0x0400da8d] 	     10672	option.c	FUNCTION_78	SWITCH_1
0xda4d	    0x4805a8020000	                          add rax, 0x2a8	     10672	option.c	FUNCTION_78	SWITCH_1
0xda53	      0xe972040000	                           jmp 0x400df0a	     10672	option.c	FUNCTION_78	SWITCH_1
0xda58	    0x488b05000000	            mov rax, qword [0x0400da9f] 	     10675	option.c	FUNCTION_78	SWITCH_1
0xda5f	    0x4805c0020000	                          add rax, 0x2c0	     10675	option.c	FUNCTION_78	SWITCH_1
0xda65	      0xe960040000	                           jmp 0x400df0a	     10675	option.c	FUNCTION_78	SWITCH_1
0xda6a	    0x488b05000000	            mov rax, qword [0x0400dab1] 	     10676	option.c	FUNCTION_78	SWITCH_1
0xda71	    0x4805c8020000	                          add rax, 0x2c8	     10676	option.c	FUNCTION_78	SWITCH_1
0xda77	      0xe94e040000	                           jmp 0x400df0a	     10676	option.c	FUNCTION_78	SWITCH_1
0xda7c	    0x488b05000000	            mov rax, qword [0x0400dac3] 	     10679	option.c	FUNCTION_78	SWITCH_1
0xda83	    0x4805d8130000	                         add rax, 0x13d8	     10679	option.c	FUNCTION_78	SWITCH_1
0xda89	      0xe93c040000	                           jmp 0x400df0a	     10679	option.c	FUNCTION_78	SWITCH_1
0xda8e	    0x488b05000000	            mov rax, qword [0x0400dad5] 	     10680	option.c	FUNCTION_78	SWITCH_1
0xda95	    0x4805f0130000	                         add rax, 0x13f0	     10680	option.c	FUNCTION_78	SWITCH_1
0xda9b	      0xe92a040000	                           jmp 0x400df0a	     10680	option.c	FUNCTION_78	SWITCH_1
0xdaa0	    0x488b05000000	            mov rax, qword [0x0400dae7] 	     10682	option.c	FUNCTION_78	SWITCH_1
0xdaa7	    0x4805f4130000	                         add rax, 0x13f4	     10682	option.c	FUNCTION_78	SWITCH_1
0xdaad	      0xe918040000	                           jmp 0x400df0a	     10682	option.c	FUNCTION_78	SWITCH_1
0xdab2	    0x488b05000000	            mov rax, qword [0x0400daf9] 	     10684	option.c	FUNCTION_78	SWITCH_1
0xdab9	    0x4805f8130000	                         add rax, 0x13f8	     10684	option.c	FUNCTION_78	SWITCH_1
0xdabf	      0xe906040000	                           jmp 0x400df0a	     10684	option.c	FUNCTION_78	SWITCH_1
0xdac4	    0x488b05000000	            mov rax, qword [0x0400db0b] 	     10685	option.c	FUNCTION_78	SWITCH_1
0xdacb	    0x480500140000	                         add rax, 0x1400	     10685	option.c	FUNCTION_78	SWITCH_1
0xdad1	      0xe9f4030000	                           jmp 0x400df0a	     10685	option.c	FUNCTION_78	SWITCH_1
0xdad6	    0x488b05000000	            mov rax, qword [0x0400db1d] 	     10686	option.c	FUNCTION_78	SWITCH_1
0xdadd	    0x48050c140000	                         add rax, 0x140c	     10686	option.c	FUNCTION_78	SWITCH_1
0xdae3	      0xe9e2030000	                           jmp 0x400df0a	     10686	option.c	FUNCTION_78	SWITCH_1
0xdae8	    0x488b05000000	            mov rax, qword [0x0400db2f] 	     10687	option.c	FUNCTION_78	SWITCH_1
0xdaef	    0x4805ec130000	                         add rax, 0x13ec	     10687	option.c	FUNCTION_78	SWITCH_1
0xdaf5	      0xe9d0030000	                           jmp 0x400df0a	     10687	option.c	FUNCTION_78	SWITCH_1
0xdafa	    0x488b05000000	            mov rax, qword [0x0400db41] 	     10689	option.c	FUNCTION_78	SWITCH_1
0xdb01	    0x480510140000	                         add rax, 0x1410	     10689	option.c	FUNCTION_78	SWITCH_1
0xdb07	      0xe9be030000	                           jmp 0x400df0a	     10689	option.c	FUNCTION_78	SWITCH_1
0xdb0c	    0x488b05000000	            mov rax, qword [0x0400db53] 	     10690	option.c	FUNCTION_78	SWITCH_1
0xdb13	    0x480520140000	                         add rax, 0x1420	     10690	option.c	FUNCTION_78	SWITCH_1
0xdb19	      0xe9ac030000	                           jmp 0x400df0a	     10690	option.c	FUNCTION_78	SWITCH_1
0xdb1e	    0x488b05000000	            mov rax, qword [0x0400db65] 	     10691	option.c	FUNCTION_78	SWITCH_1
0xdb25	    0x480518140000	                         add rax, 0x1418	     10691	option.c	FUNCTION_78	SWITCH_1
0xdb2b	      0xe99a030000	                           jmp 0x400df0a	     10691	option.c	FUNCTION_78	SWITCH_1
0xdb30	    0x488b05000000	            mov rax, qword [0x0400db77] 	     10694	option.c	FUNCTION_78	SWITCH_1
0xdb37	    0x480528140000	                         add rax, 0x1428	     10694	option.c	FUNCTION_78	SWITCH_1
0xdb3d	      0xe988030000	                           jmp 0x400df0a	     10694	option.c	FUNCTION_78	SWITCH_1
0xdb42	    0x488b05000000	            mov rax, qword [0x0400db89] 	     10697	option.c	FUNCTION_78	SWITCH_1
0xdb49	    0x480530140000	                         add rax, 0x1430	     10697	option.c	FUNCTION_78	SWITCH_1
0xdb4f	      0xe976030000	                           jmp 0x400df0a	     10697	option.c	FUNCTION_78	SWITCH_1
0xdb54	    0x488b05000000	            mov rax, qword [0x0400db9b] 	     10700	option.c	FUNCTION_78	SWITCH_1
0xdb5b	    0x480538140000	                         add rax, 0x1438	     10700	option.c	FUNCTION_78	SWITCH_1
0xdb61	      0xe964030000	                           jmp 0x400df0a	     10700	option.c	FUNCTION_78	SWITCH_1
0xdb66	    0x488b05000000	            mov rax, qword [0x0400dbad] 	     10703	option.c	FUNCTION_78	SWITCH_1
0xdb6d	    0x480540140000	                         add rax, 0x1440	     10703	option.c	FUNCTION_78	SWITCH_1
0xdb73	      0xe952030000	                           jmp 0x400df0a	     10703	option.c	FUNCTION_78	SWITCH_1
0xdb78	    0x488b05000000	            mov rax, qword [0x0400dbbf] 	     10706	option.c	FUNCTION_78	SWITCH_1
0xdb7f	    0x480548140000	                         add rax, 0x1448	     10706	option.c	FUNCTION_78	SWITCH_1
0xdb85	      0xe940030000	                           jmp 0x400df0a	     10706	option.c	FUNCTION_78	SWITCH_1
0xdb8a	    0x488b05000000	            mov rax, qword [0x0400dbd1] 	     10707	option.c	FUNCTION_78	SWITCH_1
0xdb91	    0x480550140000	                         add rax, 0x1450	     10707	option.c	FUNCTION_78	SWITCH_1
0xdb97	      0xe92e030000	                           jmp 0x400df0a	     10707	option.c	FUNCTION_78	SWITCH_1
0xdb9c	    0x488b05000000	            mov rax, qword [0x0400dbe3] 	     10709	option.c	FUNCTION_78	SWITCH_1
0xdba3	    0x480558140000	                         add rax, 0x1458	     10709	option.c	FUNCTION_78	SWITCH_1
0xdba9	      0xe91c030000	                           jmp 0x400df0a	     10709	option.c	FUNCTION_78	SWITCH_1
0xdbae	    0x488b05000000	            mov rax, qword [0x0400dbf5] 	     10710	option.c	FUNCTION_78	SWITCH_1
0xdbb5	    0x48055c140000	                         add rax, 0x145c	     10710	option.c	FUNCTION_78	SWITCH_1
0xdbbb	      0xe90a030000	                           jmp 0x400df0a	     10710	option.c	FUNCTION_78	SWITCH_1
0xdbc0	    0x488b05000000	            mov rax, qword [0x0400dc07] 	     10711	option.c	FUNCTION_78	SWITCH_1
0xdbc7	    0x480560140000	                         add rax, 0x1460	     10711	option.c	FUNCTION_78	SWITCH_1
0xdbcd	      0xe9f8020000	                           jmp 0x400df0a	     10711	option.c	FUNCTION_78	SWITCH_1
0xdbd2	    0x488b05000000	            mov rax, qword [0x0400dc19] 	     10713	option.c	FUNCTION_78	SWITCH_1
0xdbd9	    0x480570140000	                         add rax, 0x1470	     10713	option.c	FUNCTION_78	SWITCH_1
0xdbdf	      0xe9e6020000	                           jmp 0x400df0a	     10713	option.c	FUNCTION_78	SWITCH_1
0xdbe4	    0x488b05000000	            mov rax, qword [0x0400dc2b] 	     10715	option.c	FUNCTION_78	SWITCH_1
0xdbeb	    0x480578140000	                         add rax, 0x1478	     10715	option.c	FUNCTION_78	SWITCH_1
0xdbf1	      0xe9d4020000	                           jmp 0x400df0a	     10715	option.c	FUNCTION_78	SWITCH_1
0xdbf6	    0x488b05000000	            mov rax, qword [0x0400dc3d] 	     10717	option.c	FUNCTION_78	SWITCH_1
0xdbfd	    0x480580140000	                         add rax, 0x1480	     10717	option.c	FUNCTION_78	SWITCH_1
0xdc03	      0xe9c2020000	                           jmp 0x400df0a	     10717	option.c	FUNCTION_78	SWITCH_1
0xdc08	    0x488b05000000	            mov rax, qword [0x0400dc4f] 	     10719	option.c	FUNCTION_78	SWITCH_1
0xdc0f	    0x480588140000	                         add rax, 0x1488	     10719	option.c	FUNCTION_78	SWITCH_1
0xdc15	      0xe9b0020000	                           jmp 0x400df0a	     10719	option.c	FUNCTION_78	SWITCH_1
0xdc1a	    0x488b05000000	            mov rax, qword [0x0400dc61] 	     10720	option.c	FUNCTION_78	SWITCH_1
0xdc21	    0x480590140000	                         add rax, 0x1490	     10720	option.c	FUNCTION_78	SWITCH_1
0xdc27	      0xe99e020000	                           jmp 0x400df0a	     10720	option.c	FUNCTION_78	SWITCH_1
0xdc2c	    0x488b05000000	            mov rax, qword [0x0400dc73] 	     10721	option.c	FUNCTION_78	SWITCH_1
0xdc33	    0x480568120000	                         add rax, 0x1268	     10721	option.c	FUNCTION_78	SWITCH_1
0xdc39	      0xe98c020000	                           jmp 0x400df0a	     10721	option.c	FUNCTION_78	SWITCH_1
0xdc3e	    0x488b05000000	            mov rax, qword [0x0400dc85] 	     10722	option.c	FUNCTION_78	SWITCH_1
0xdc45	    0x480570120000	                         add rax, 0x1270	     10722	option.c	FUNCTION_78	SWITCH_1
0xdc4b	      0xe97a020000	                           jmp 0x400df0a	     10722	option.c	FUNCTION_78	SWITCH_1
0xdc50	    0x488b05000000	            mov rax, qword [0x0400dc97] 	     10723	option.c	FUNCTION_78	SWITCH_1
0xdc57	    0x480598140000	                         add rax, 0x1498	     10723	option.c	FUNCTION_78	SWITCH_1
0xdc5d	      0xe968020000	                           jmp 0x400df0a	     10723	option.c	FUNCTION_78	SWITCH_1
0xdc62	    0x488b05000000	            mov rax, qword [0x0400dca9] 	     10724	option.c	FUNCTION_78	SWITCH_1
0xdc69	    0x4805a0140000	                         add rax, 0x14a0	     10724	option.c	FUNCTION_78	SWITCH_1
0xdc6f	      0xe956020000	                           jmp 0x400df0a	     10724	option.c	FUNCTION_78	SWITCH_1
0xdc74	    0x488b05000000	            mov rax, qword [0x0400dcbb] 	     10727	option.c	FUNCTION_78	SWITCH_1
0xdc7b	    0x4805b8140000	                         add rax, 0x14b8	     10727	option.c	FUNCTION_78	SWITCH_1
0xdc81	      0xe944020000	                           jmp 0x400df0a	     10727	option.c	FUNCTION_78	SWITCH_1
0xdc86	    0x488b05000000	            mov rax, qword [0x0400dccd] 	     10731	option.c	FUNCTION_78	SWITCH_1
0xdc8d	    0x4805c8140000	                         add rax, 0x14c8	     10731	option.c	FUNCTION_78	SWITCH_1
0xdc93	      0xe932020000	                           jmp 0x400df0a	     10731	option.c	FUNCTION_78	SWITCH_1
0xdc98	    0x488b05000000	            mov rax, qword [0x0400dcdf] 	     10732	option.c	FUNCTION_78	SWITCH_1
0xdc9f	    0x4805d8140000	                         add rax, 0x14d8	     10732	option.c	FUNCTION_78	SWITCH_1
0xdca5	      0xe920020000	                           jmp 0x400df0a	     10732	option.c	FUNCTION_78	SWITCH_1
0xdcaa	    0x488b05000000	            mov rax, qword [0x0400dcf1] 	     10735	option.c	FUNCTION_78	SWITCH_1
0xdcb1	    0x4805e8140000	                         add rax, 0x14e8	     10735	option.c	FUNCTION_78	SWITCH_1
0xdcb7	      0xe90e020000	                           jmp 0x400df0a	     10735	option.c	FUNCTION_78	SWITCH_1
0xdcbc	    0x488b05000000	            mov rax, qword [0x0400dd03] 	     10738	option.c	FUNCTION_78	SWITCH_1
0xdcc3	    0x4805f8140000	                         add rax, 0x14f8	     10738	option.c	FUNCTION_78	SWITCH_1
0xdcc9	      0xe9fc010000	                           jmp 0x400df0a	     10738	option.c	FUNCTION_78	SWITCH_1
0xdcce	    0x488b05000000	            mov rax, qword [0x0400dd15] 	     10741	option.c	FUNCTION_78	SWITCH_1
0xdcd5	    0x480508150000	                         add rax, 0x1508	     10741	option.c	FUNCTION_78	SWITCH_1
0xdcdb	      0xe9ea010000	                           jmp 0x400df0a	     10741	option.c	FUNCTION_78	SWITCH_1
0xdce0	    0x488b05000000	            mov rax, qword [0x0400dd27] 	     10743	option.c	FUNCTION_78	SWITCH_1
0xdce7	    0x480520150000	                         add rax, 0x1520	     10743	option.c	FUNCTION_78	SWITCH_1
0xdced	      0xe9d8010000	                           jmp 0x400df0a	     10743	option.c	FUNCTION_78	SWITCH_1
0xdcf2	    0x488b05000000	            mov rax, qword [0x0400dd39] 	     10744	option.c	FUNCTION_78	SWITCH_1
0xdcf9	    0x480518150000	                         add rax, 0x1518	     10744	option.c	FUNCTION_78	SWITCH_1
0xdcff	      0xe9c6010000	                           jmp 0x400df0a	     10744	option.c	FUNCTION_78	SWITCH_1
0xdd04	    0x488b05000000	            mov rax, qword [0x0400dd4b] 	     10745	option.c	FUNCTION_78	SWITCH_1
0xdd0b	    0x480528150000	                         add rax, 0x1528	     10745	option.c	FUNCTION_78	SWITCH_1
0xdd11	      0xe9b4010000	                           jmp 0x400df0a	     10745	option.c	FUNCTION_78	SWITCH_1
0xdd16	    0x488b05000000	            mov rax, qword [0x0400dd5d] 	     10746	option.c	FUNCTION_78	SWITCH_1
0xdd1d	    0x4805c8000000	                           add rax, 0xc8	     10746	option.c	FUNCTION_78	SWITCH_1
0xdd23	      0xe9a2010000	                           jmp 0x400df0a	     10746	option.c	FUNCTION_78	SWITCH_1
0xdd28	    0x488b05000000	            mov rax, qword [0x0400dd6f] 	     10747	option.c	FUNCTION_78	SWITCH_1
0xdd2f	    0x480530150000	                         add rax, 0x1530	     10747	option.c	FUNCTION_78	SWITCH_1
0xdd35	      0xe990010000	                           jmp 0x400df0a	     10747	option.c	FUNCTION_78	SWITCH_1
0xdd3a	    0x488b05000000	            mov rax, qword [0x0400dd81] 	     10748	option.c	FUNCTION_78	SWITCH_1
0xdd41	    0x480538150000	                         add rax, 0x1538	     10748	option.c	FUNCTION_78	SWITCH_1
0xdd47	      0xe97e010000	                           jmp 0x400df0a	     10748	option.c	FUNCTION_78	SWITCH_1
0xdd4c	    0x488b05000000	            mov rax, qword [0x0400dd93] 	     10750	option.c	FUNCTION_78	SWITCH_1
0xdd53	    0x480540150000	                         add rax, 0x1540	     10750	option.c	FUNCTION_78	SWITCH_1
0xdd59	      0xe96c010000	                           jmp 0x400df0a	     10750	option.c	FUNCTION_78	SWITCH_1
0xdd5e	    0x488b05000000	            mov rax, qword [0x0400dda5] 	     10752	option.c	FUNCTION_78	SWITCH_1
0xdd65	    0x480548150000	                         add rax, 0x1548	     10752	option.c	FUNCTION_78	SWITCH_1
0xdd6b	      0xe95a010000	                           jmp 0x400df0a	     10752	option.c	FUNCTION_78	SWITCH_1
0xdd70	    0x488b05000000	            mov rax, qword [0x0400ddb7] 	     10754	option.c	FUNCTION_78	SWITCH_1
0xdd77	    0x48055c150000	                         add rax, 0x155c	     10754	option.c	FUNCTION_78	SWITCH_1
0xdd7d	      0xe948010000	                           jmp 0x400df0a	     10754	option.c	FUNCTION_78	SWITCH_1
0xdd82	    0x488b05000000	            mov rax, qword [0x0400ddc9] 	     10756	option.c	FUNCTION_78	SWITCH_1
0xdd89	    0x480558150000	                         add rax, 0x1558	     10756	option.c	FUNCTION_78	SWITCH_1
0xdd8f	      0xe936010000	                           jmp 0x400df0a	     10756	option.c	FUNCTION_78	SWITCH_1
0xdd94	    0x488b05000000	            mov rax, qword [0x0400dddb] 	     10757	option.c	FUNCTION_78	SWITCH_1
0xdd9b	    0x480560150000	                         add rax, 0x1560	     10757	option.c	FUNCTION_78	SWITCH_1
0xdda1	      0xe924010000	                           jmp 0x400df0a	     10757	option.c	FUNCTION_78	SWITCH_1
0xdda6	    0x488b05000000	            mov rax, qword [0x0400dded] 	     10759	option.c	FUNCTION_78	SWITCH_1
0xddad	    0x480570150000	                         add rax, 0x1570	     10759	option.c	FUNCTION_78	SWITCH_1
0xddb3	      0xe912010000	                           jmp 0x400df0a	     10759	option.c	FUNCTION_78	SWITCH_1
0xddb8	    0x488b05000000	            mov rax, qword [0x0400ddff] 	     10761	option.c	FUNCTION_78	SWITCH_1
0xddbf	    0x480578150000	                         add rax, 0x1578	     10761	option.c	FUNCTION_78	SWITCH_1
0xddc5	      0xe900010000	                           jmp 0x400df0a	     10761	option.c	FUNCTION_78	SWITCH_1
0xddca	    0x488b05000000	            mov rax, qword [0x0400de11] 	     10763	option.c	FUNCTION_78	SWITCH_1
0xddd1	    0x480580150000	                         add rax, 0x1580	     10763	option.c	FUNCTION_78	SWITCH_1
0xddd7	      0xe9ee000000	                           jmp 0x400df0a	     10763	option.c	FUNCTION_78	SWITCH_1
0xdddc	    0x488b05000000	            mov rax, qword [0x0400de23] 	     10764	option.c	FUNCTION_78	SWITCH_1
0xdde3	    0x480588150000	                         add rax, 0x1588	     10764	option.c	FUNCTION_78	SWITCH_1
0xdde9	      0xe9dc000000	                           jmp 0x400df0a	     10764	option.c	FUNCTION_78	SWITCH_1
0xddee	    0x488b05000000	            mov rax, qword [0x0400de35] 	     10767	option.c	FUNCTION_78	SWITCH_1
0xddf5	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10767	option.c	FUNCTION_78	SWITCH_1
0xddf9	    0x480568040000	                          add rax, 0x468	     10767	option.c	FUNCTION_78	SWITCH_1
0xddff	      0xe9c6000000	                           jmp 0x400df0a	     10767	option.c	FUNCTION_78	SWITCH_1
0xde04	    0x488b05000000	            mov rax, qword [0x0400de4b] 	     10768	option.c	FUNCTION_78	SWITCH_1
0xde0b	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10768	option.c	FUNCTION_78	SWITCH_1
0xde0f	    0x480578040000	                          add rax, 0x478	     10768	option.c	FUNCTION_78	SWITCH_1
0xde15	      0xe9b0000000	                           jmp 0x400df0a	     10768	option.c	FUNCTION_78	SWITCH_1
0xde1a	    0x488b05000000	            mov rax, qword [0x0400de61] 	     10769	option.c	FUNCTION_78	SWITCH_1
0xde21	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10769	option.c	FUNCTION_78	SWITCH_1
0xde25	    0x480580040000	                          add rax, 0x480	     10769	option.c	FUNCTION_78	SWITCH_1
0xde2b	      0xe99a000000	                           jmp 0x400df0a	     10769	option.c	FUNCTION_78	SWITCH_1
0xde30	    0x488b05000000	            mov rax, qword [0x0400de77] 	     10771	option.c	FUNCTION_78	SWITCH_1
0xde37	    0x480550150000	                         add rax, 0x1550	     10771	option.c	FUNCTION_78	SWITCH_1
0xde3d	      0xe988000000	                           jmp 0x400df0a	     10771	option.c	FUNCTION_78	SWITCH_1
0xde42	    0x488b05000000	            mov rax, qword [0x0400de89] 	     10772	option.c	FUNCTION_78	SWITCH_1
0xde49	    0x480590150000	                         add rax, 0x1590	     10772	option.c	FUNCTION_78	SWITCH_1
0xde4f	            0xeb79	                           jmp 0x400df0a	     10772	option.c	FUNCTION_78	SWITCH_1
0xde51	    0x488b05000000	            mov rax, qword [0x0400de98] 	     10773	option.c	FUNCTION_78	SWITCH_1
0xde58	    0x4805a0150000	                         add rax, 0x15a0	     10773	option.c	FUNCTION_78	SWITCH_1
0xde5e	            0xeb6a	                           jmp 0x400df0a	     10773	option.c	FUNCTION_78	SWITCH_1
0xde60	    0x488b05000000	            mov rax, qword [0x0400dea7] 	     10774	option.c	FUNCTION_78	SWITCH_1
0xde67	    0x480598150000	                         add rax, 0x1598	     10774	option.c	FUNCTION_78	SWITCH_1
0xde6d	            0xeb5b	                           jmp 0x400df0a	     10774	option.c	FUNCTION_78	SWITCH_1
0xde6f	    0x488b05000000	            mov rax, qword [0x0400deb6] 	     10776	option.c	FUNCTION_78	SWITCH_1
0xde76	    0x480538160000	                         add rax, 0x1638	     10776	option.c	FUNCTION_78	SWITCH_1
0xde7c	            0xeb4c	                           jmp 0x400df0a	     10776	option.c	FUNCTION_78	SWITCH_1
0xde7e	    0x488b05000000	            mov rax, qword [0x0400dec5] 	     10778	option.c	FUNCTION_78	SWITCH_1
0xde85	    0x4805b8150000	                         add rax, 0x15b8	     10778	option.c	FUNCTION_78	SWITCH_1
0xde8b	            0xeb3d	                           jmp 0x400df0a	     10778	option.c	FUNCTION_78	SWITCH_1
0xde8d	    0x488b05000000	            mov rax, qword [0x0400ded4] 	     10780	option.c	FUNCTION_78	SWITCH_1
0xde94	    0x4805d0150000	                         add rax, 0x15d0	     10780	option.c	FUNCTION_78	SWITCH_1
0xde9a	            0xeb2e	                           jmp 0x400df0a	     10780	option.c	FUNCTION_78	SWITCH_1
0xde9c	    0x488b05000000	            mov rax, qword [0x0400dee3] 	     10783	option.c	FUNCTION_78	SWITCH_1
0xdea3	    0x4805b8020000	                          add rax, 0x2b8	     10783	option.c	FUNCTION_78	SWITCH_1
0xdea9	            0xeb1f	                           jmp 0x400df0a	     10783	option.c	FUNCTION_78	SWITCH_1
0xdeab	      0xbf00000000	                              mov edi, 0	     10785	option.c	FUNCTION_78	SWITCH_1	CALL_2
0xdeb0	      0xe800000000	                          call 0x400def5	     10785	option.c	FUNCTION_78	SWITCH_1	CALL_2
0xdeb5	          0x4889c7	                            mov rdi, rax	     10785	option.c	FUNCTION_78	SWITCH_1	CALL_2
0xdeb8	      0xe800000000	                          call 0x400defd	     10785	option.c	FUNCTION_78	SWITCH_1	CALL_2
0xdebd	    0x488b05000000	            mov rax, qword [0x0400df04] 	     10788	option.c	FUNCTION_78
0xdec4	    0x4805b8150000	                         add rax, 0x15b8	     10788	option.c	FUNCTION_78
0xdeca	              0xc9	                                   leave	     10789	option.c	FUNCTION_78
0xdecb	              0xc3	                                     ret	     10789	option.c	FUNCTION_78
find_key_option	WHILE,0:SWITCH,0:CALL,2:FOR,0:ELSE,1:DO,0:IF,2:functions,0	62
0xb538	              0x55	                                push rbp	      9777	option.c	FUNCTION_61
0xb539	          0x4889e5	                            mov rbp, rsp	      9777	option.c	FUNCTION_61
0xb53c	        0x4883ec20	                           sub rsp, 0x20	      9777	option.c	FUNCTION_61
0xb540	        0x48897de8	             mov qword [rbp - 0x18], rdi	      9777	option.c	FUNCTION_61
0xb544	    0x64488b042528	                mov rax, qword fs:[0x28]	      9777	option.c	FUNCTION_61
0xb54d	        0x488945f8	                mov qword [rbp - 8], rax	      9777	option.c	FUNCTION_61
0xb551	            0x31c0	                            xor eax, eax	      9777	option.c	FUNCTION_61
0xb553	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9785	option.c	FUNCTION_61	IF_1
0xb557	           0xfb600	                   movzx eax, byte [rax]	      9785	option.c	FUNCTION_61	IF_1
0xb55a	            0x3c74	                            cmp al, 0x74	      9785	option.c	FUNCTION_61	IF_1
0xb55c	            0x7555	                           jne 0x400b5f3	      9785	option.c	FUNCTION_61	IF_1
0xb55e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9785	option.c	FUNCTION_61	IF_1
0xb562	        0x4883c001	                              add rax, 1	      9785	option.c	FUNCTION_61	IF_1
0xb566	           0xfb600	                   movzx eax, byte [rax]	      9785	option.c	FUNCTION_61	IF_1
0xb569	            0x3c5f	                            cmp al, 0x5f	      9785	option.c	FUNCTION_61	IF_1
0xb56b	            0x7546	                           jne 0x400b5f3	      9785	option.c	FUNCTION_61	IF_1
0xb56d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9785	option.c	FUNCTION_61	IF_1
0xb571	        0x4883c002	                              add rax, 2	      9785	option.c	FUNCTION_61	IF_1
0xb575	           0xfb600	                   movzx eax, byte [rax]	      9785	option.c	FUNCTION_61	IF_1
0xb578	            0x84c0	                             test al, al	      9785	option.c	FUNCTION_61	IF_1
0xb57a	            0x7437	                            je 0x400b5f3	      9785	option.c	FUNCTION_61	IF_1
0xb57c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9785	option.c	FUNCTION_61	IF_1
0xb580	        0x4883c003	                              add rax, 3	      9785	option.c	FUNCTION_61	IF_1
0xb584	           0xfb600	                   movzx eax, byte [rax]	      9785	option.c	FUNCTION_61	IF_1
0xb587	            0x84c0	                             test al, al	      9785	option.c	FUNCTION_61	IF_1
0xb589	            0x7428	                            je 0x400b5f3	      9785	option.c	FUNCTION_61	IF_1
0xb58b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9786	option.c	FUNCTION_61	CALL_1
0xb58f	        0x4883c002	                              add rax, 2	      9786	option.c	FUNCTION_61	CALL_1
0xb593	           0xfb600	                   movzx eax, byte [rax]	      9786	option.c	FUNCTION_61	CALL_1
0xb596	           0xfb6c0	                           movzx eax, al	      9786	option.c	FUNCTION_61	CALL_1
0xb599	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      9786	option.c	FUNCTION_61	CALL_1
0xb59d	        0x4883c203	                              add rdx, 3	      9786	option.c	FUNCTION_61	CALL_1
0xb5a1	           0xfb612	                   movzx edx, byte [rdx]	      9786	option.c	FUNCTION_61	CALL_1
0xb5a4	           0xfb6d2	                           movzx edx, dl	      9786	option.c	FUNCTION_61	CALL_1
0xb5a7	          0xc1e208	                              shl edx, 8	      9786	option.c	FUNCTION_61	CALL_1
0xb5aa	             0x1d0	                            add eax, edx	      9786	option.c	FUNCTION_61	CALL_1
0xb5ac	            0xf7d8	                                 neg eax	      9786	option.c	FUNCTION_61	CALL_1
0xb5ae	          0x8945f4	              mov dword [rbp - 0xc], eax	      9786	option.c	FUNCTION_61	CALL_1
0xb5b1	            0xeb44	                           jmp 0x400b637	      9786	option.c	FUNCTION_61	CALL_1
0xb5b3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9789	option.c	FUNCTION_61	ELSE_1
0xb5b7	        0x4883e801	                              sub rax, 1	      9789	option.c	FUNCTION_61	ELSE_1
0xb5bb	        0x488945e8	             mov qword [rbp - 0x18], rax	      9789	option.c	FUNCTION_61	ELSE_1
0xb5bf	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      9790	option.c	FUNCTION_61	ELSE_1
0xb5c6	        0x488d75f0	                   lea rsi, [rbp - 0x10]	      9791	option.c	FUNCTION_61	ELSE_1	CALL_2
0xb5ca	        0x488d45e8	                   lea rax, [rbp - 0x18]	      9791	option.c	FUNCTION_61	ELSE_1	CALL_2
0xb5ce	    0x41b800000000	                              mov r8d, 0	      9791	option.c	FUNCTION_61	ELSE_1	CALL_2
0xb5d4	      0xb901000000	                              mov ecx, 1	      9791	option.c	FUNCTION_61	ELSE_1	CALL_2
0xb5d9	      0xba01000000	                              mov edx, 1	      9791	option.c	FUNCTION_61	ELSE_1	CALL_2
0xb5de	          0x4889c7	                            mov rdi, rax	      9791	option.c	FUNCTION_61	ELSE_1	CALL_2
0xb5e1	      0xe800000000	                          call 0x400b626	      9791	option.c	FUNCTION_61	ELSE_1	CALL_2
0xb5e6	          0x8945f4	              mov dword [rbp - 0xc], eax	      9791	option.c	FUNCTION_61	ELSE_1	CALL_2
0xb5e9	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      9792	option.c	FUNCTION_61	ELSE_1	IF_2
0xb5ec	            0x85c0	                           test eax, eax	      9792	option.c	FUNCTION_61	ELSE_1	IF_2
0xb5ee	            0x7407	                            je 0x400b637	      9792	option.c	FUNCTION_61	ELSE_1	IF_2
0xb5f0	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      9793	option.c	FUNCTION_61	ELSE_1	IF_2
0xb5f7	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      9795	option.c	FUNCTION_61
0xb5fa	        0x488b4df8	                mov rcx, qword [rbp - 8]	      9796	option.c	FUNCTION_61
0xb5fe	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      9796	option.c	FUNCTION_61
0xb607	            0x7405	                            je 0x400b64e	      9796	option.c	FUNCTION_61
0xb609	      0xe800000000	                          call 0x400b64e	      9796	option.c	FUNCTION_61
0xb60e	              0xc9	                                   leave	      9796	option.c	FUNCTION_61
0xb60f	              0xc3	                                     ret	      9796	option.c	FUNCTION_61
set_init_2	WHILE,0:SWITCH,0:CALL,11:FOR,0:ELSE,0:DO,0:IF,3:functions,0	76
0xc01	              0x55	                                push rbp	      3913	option.c	FUNCTION_8
0xc02	          0x4889e5	                            mov rbp, rsp	      3913	option.c	FUNCTION_8
0xc05	        0x4883ec10	                           sub rsp, 0x10	      3913	option.c	FUNCTION_8
0xc09	      0xbf00000000	                              mov edi, 0	      3920	option.c	FUNCTION_8	CALL_1
0xc0e	      0xe873a10000	                     call sym.findoption	      3920	option.c	FUNCTION_8	CALL_1
0xc13	          0x8945fc	                mov dword [rbp - 4], eax	      3920	option.c	FUNCTION_8	CALL_1
0xc16	        0x837dfc00	                  cmp dword [rbp - 4], 0	      3921	option.c	FUNCTION_8	IF_1
0xc1a	            0x7831	                            js 0x4000c8d	      3921	option.c	FUNCTION_8	IF_1
0xc1c	          0x8b45fc	                mov eax, dword [rbp - 4]	      3921	option.c	FUNCTION_8	IF_1
0xc1f	            0x4898	                                    cdqe	      3921	option.c	FUNCTION_8	IF_1
0xc21	        0x48c1e006	                              shl rax, 6	      3921	option.c	FUNCTION_8	IF_1
0xc25	    0x480500000000	                              add rax, 0	      3921	option.c	FUNCTION_8	IF_1
0xc2b	          0x488b00	                    mov rax, qword [rax]	      3921	option.c	FUNCTION_8	IF_1
0xc2e	      0x2500010000	                          and eax, 0x100	      3921	option.c	FUNCTION_8	IF_1
0xc33	          0x4885c0	                           test rax, rax	      3921	option.c	FUNCTION_8	IF_1
0xc36	            0x7515	                           jne 0x4000c8d	      3921	option.c	FUNCTION_8	IF_1
0xc38	    0x8b1500000000	            mov edx, dword [0x04000c7e] 	      3922	option.c	FUNCTION_8	CALL_2
0xc3e	          0x8b45fc	                mov eax, dword [rbp - 4]	      3922	option.c	FUNCTION_8	CALL_2
0xc41	      0xbe04000000	                              mov esi, 4	      3922	option.c	FUNCTION_8	CALL_2
0xc46	            0x89c7	                            mov edi, eax	      3922	option.c	FUNCTION_8	CALL_2
0xc48	      0xe8c2faffff	             call sym.set_option_default	      3922	option.c	FUNCTION_8	CALL_2
0xc4d	      0xe800000000	                          call 0x4000c92	      3923	option.c	FUNCTION_8	CALL_3
0xc52	      0xbf00000000	                              mov edi, 0	      3929	option.c	FUNCTION_8	IF_2	CALL_4
0xc57	      0xe800000000	                          call 0x4000c9c	      3929	option.c	FUNCTION_8	IF_2	CALL_4
0xc5c	            0x85c0	                           test eax, eax	      3929	option.c	FUNCTION_8	IF_2	CALL_4
0xc5e	            0x7512	                           jne 0x4000cb2	      3929	option.c	FUNCTION_8	IF_2	CALL_4
0xc60	    0x488b05000000	            mov rax, qword [0x04000ca7] 	      3930	option.c	FUNCTION_8	IF_2
0xc67	        0x4883e801	                              sub rax, 1	      3930	option.c	FUNCTION_8	IF_2
0xc6b	    0x488905000000	            mov qword [0x04000cb2], rax 	      3930	option.c	FUNCTION_8	IF_2
0xc72	    0x488b05000000	            mov rax, qword [0x04000cb9] 	      3931	option.c	FUNCTION_8	CALL_5
0xc79	        0x4883e801	                              sub rax, 1	      3931	option.c	FUNCTION_8	CALL_5
0xc7d	          0x4889c6	                            mov rsi, rax	      3931	option.c	FUNCTION_8	CALL_5
0xc80	      0xbf00000000	                              mov edi, 0	      3931	option.c	FUNCTION_8	CALL_5
0xc85	      0xe800000000	                          call 0x4000cca	      3931	option.c	FUNCTION_8	CALL_5
0xc8a	      0xbf00000000	                              mov edi, 0	      3940	option.c	FUNCTION_8	CALL_6
0xc8f	      0xe8f2a00000	                     call sym.findoption	      3940	option.c	FUNCTION_8	CALL_6
0xc94	          0x8945fc	                mov dword [rbp - 4], eax	      3940	option.c	FUNCTION_8	CALL_6
0xc97	        0x837dfc00	                  cmp dword [rbp - 4], 0	      3941	option.c	FUNCTION_8	IF_3
0xc9b	            0x7871	                            js 0x4000d4e	      3941	option.c	FUNCTION_8	IF_3
0xc9d	          0x8b45fc	                mov eax, dword [rbp - 4]	      3941	option.c	FUNCTION_8	IF_3
0xca0	            0x4898	                                    cdqe	      3941	option.c	FUNCTION_8	IF_3
0xca2	        0x48c1e006	                              shl rax, 6	      3941	option.c	FUNCTION_8	IF_3
0xca6	    0x480500000000	                              add rax, 0	      3941	option.c	FUNCTION_8	IF_3
0xcac	          0x488b00	                    mov rax, qword [rax]	      3941	option.c	FUNCTION_8	IF_3
0xcaf	      0x2500010000	                          and eax, 0x100	      3941	option.c	FUNCTION_8	IF_3
0xcb4	          0x4885c0	                           test rax, rax	      3941	option.c	FUNCTION_8	IF_3
0xcb7	            0x7555	                           jne 0x4000d4e	      3941	option.c	FUNCTION_8	IF_3
0xcb9	      0xe862000000	                call sym.term_bg_default	      3942	option.c	FUNCTION_8	IF_3	CALL_7
0xcbe	           0xfb600	                   movzx eax, byte [rax]	      3942	option.c	FUNCTION_8	IF_3	CALL_7
0xcc1	            0x3c64	                            cmp al, 0x64	      3942	option.c	FUNCTION_8	IF_3	CALL_7
0xcc3	            0x7549	                           jne 0x4000d4e	      3942	option.c	FUNCTION_8	IF_3	CALL_7
0xcc5	          0x8b45fc	                mov eax, dword [rbp - 4]	      3944	option.c	FUNCTION_8	IF_3	CALL_8
0xcc8	    0x41b800000000	                              mov r8d, 0	      3944	option.c	FUNCTION_8	IF_3	CALL_8
0xcce	      0xb901000000	                              mov ecx, 1	      3944	option.c	FUNCTION_8	IF_3	CALL_8
0xcd3	      0xba00000000	                              mov edx, 0	      3944	option.c	FUNCTION_8	IF_3	CALL_8
0xcd8	            0x89c6	                            mov esi, eax	      3944	option.c	FUNCTION_8	IF_3	CALL_8
0xcda	      0xbf00000000	                              mov edi, 0	      3944	option.c	FUNCTION_8	IF_3	CALL_8
0xcdf	      0xe800000000	                          call 0x4000d24	      3944	option.c	FUNCTION_8	IF_3	CALL_8
0xce4	          0x8b45fc	                mov eax, dword [rbp - 4]	      3947	option.c	FUNCTION_8	IF_3
0xce7	            0x4898	                                    cdqe	      3947	option.c	FUNCTION_8	IF_3
0xce9	        0x48c1e006	                              shl rax, 6	      3947	option.c	FUNCTION_8	IF_3
0xced	    0x480500000000	                              add rax, 0	      3947	option.c	FUNCTION_8	IF_3
0xcf3	          0x488b00	                    mov rax, qword [rax]	      3947	option.c	FUNCTION_8	IF_3
0xcf6	          0x80e4fe	                            and ah, 0xfe	      3947	option.c	FUNCTION_8	IF_3
0xcf9	          0x4889c2	                            mov rdx, rax	      3947	option.c	FUNCTION_8	IF_3
0xcfc	          0x8b45fc	                mov eax, dword [rbp - 4]	      3947	option.c	FUNCTION_8	IF_3
0xcff	            0x4898	                                    cdqe	      3947	option.c	FUNCTION_8	IF_3
0xd01	        0x48c1e006	                              shl rax, 6	      3947	option.c	FUNCTION_8	IF_3
0xd05	    0x480500000000	                              add rax, 0	      3947	option.c	FUNCTION_8	IF_3
0xd0b	          0x488910	                    mov qword [rax], rdx	      3947	option.c	FUNCTION_8	IF_3
0xd0e	      0xbf02000000	                              mov edi, 2	      3952	option.c	FUNCTION_8	CALL_9
0xd13	      0xe800000000	                          call 0x4000d58	      3952	option.c	FUNCTION_8	CALL_9
0xd18	      0xe800000000	                          call 0x4000d5d	      3958	option.c	FUNCTION_8	CALL_11
0xd1d	              0x90	                                     nop	      3960	option.c	FUNCTION_8
0xd1e	              0xc9	                                   leave	      3960	option.c	FUNCTION_8
0xd1f	              0xc3	                                     ret	      3960	option.c	FUNCTION_8
win_copy_options	WHILE,0:SWITCH,0:CALL,3:FOR,0:ELSE,0:DO,0:IF,0:functions,0	29
0xdefe	              0x55	                                push rbp	     10808	option.c	FUNCTION_80
0xdeff	          0x4889e5	                            mov rbp, rsp	     10808	option.c	FUNCTION_80
0xdf02	        0x4883ec10	                           sub rsp, 0x10	     10808	option.c	FUNCTION_80
0xdf06	        0x48897df8	                mov qword [rbp - 8], rdi	     10808	option.c	FUNCTION_80
0xdf0a	        0x488975f0	             mov qword [rbp - 0x10], rsi	     10808	option.c	FUNCTION_80
0xdf0e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10809	option.c	FUNCTION_80	CALL_1
0xdf12	    0x488d90b00100	                  lea rdx, [rax + 0x1b0]	     10809	option.c	FUNCTION_80	CALL_1
0xdf19	        0x488b45f8	                mov rax, qword [rbp - 8]	     10809	option.c	FUNCTION_80	CALL_1
0xdf1d	    0x4805b0010000	                          add rax, 0x1b0	     10809	option.c	FUNCTION_80	CALL_1
0xdf23	          0x4889d6	                            mov rsi, rdx	     10809	option.c	FUNCTION_80	CALL_1
0xdf26	          0x4889c7	                            mov rdi, rax	     10809	option.c	FUNCTION_80	CALL_1
0xdf29	      0xe800000000	                          call 0x400df6e	     10809	option.c	FUNCTION_80	CALL_1
0xdf2e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10810	option.c	FUNCTION_80	CALL_2
0xdf32	    0x488d90680300	                  lea rdx, [rax + 0x368]	     10810	option.c	FUNCTION_80	CALL_2
0xdf39	        0x488b45f8	                mov rax, qword [rbp - 8]	     10810	option.c	FUNCTION_80	CALL_2
0xdf3d	    0x480568030000	                          add rax, 0x368	     10810	option.c	FUNCTION_80	CALL_2
0xdf43	          0x4889d6	                            mov rsi, rdx	     10810	option.c	FUNCTION_80	CALL_2
0xdf46	          0x4889c7	                            mov rdi, rax	     10810	option.c	FUNCTION_80	CALL_2
0xdf49	      0xe800000000	                          call 0x400df8e	     10810	option.c	FUNCTION_80	CALL_2
0xdf4e	        0x488b45f8	                mov rax, qword [rbp - 8]	     10814	option.c	FUNCTION_80
0xdf52	    0x8b9078050000	           mov edx, dword [rax + 0x578] 	     10814	option.c	FUNCTION_80
0xdf58	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10814	option.c	FUNCTION_80
0xdf5c	    0x899078050000	            mov dword [rax + 0x578], edx	     10814	option.c	FUNCTION_80
0xdf62	        0x488b45f0	             mov rax, qword [rbp - 0x10]	     10818	option.c	FUNCTION_80	CALL_3
0xdf66	          0x4889c7	                            mov rdi, rax	     10818	option.c	FUNCTION_80	CALL_3
0xdf69	      0xe8ac340000	                   call sym.briopt_check	     10818	option.c	FUNCTION_80	CALL_3
0xdf6e	              0x90	                                     nop	     10820	option.c	FUNCTION_80
0xdf6f	              0xc9	                                   leave	     10820	option.c	FUNCTION_80
0xdf70	              0xc3	                                     ret	     10820	option.c	FUNCTION_80
get_viminfo_parameter	WHILE,0:SWITCH,0:CALL,3:FOR,0:ELSE,0:DO,0:IF,1:functions,0	23
0x3d54	              0x55	                                push rbp	      5443	option.c	FUNCTION_23
0x3d55	          0x4889e5	                            mov rbp, rsp	      5443	option.c	FUNCTION_23
0x3d58	        0x4883ec20	                           sub rsp, 0x20	      5443	option.c	FUNCTION_23
0x3d5c	          0x897dec	             mov dword [rbp - 0x14], edi	      5443	option.c	FUNCTION_23
0x3d5f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      5446	option.c	FUNCTION_23	CALL_1
0x3d62	            0x89c7	                            mov edi, eax	      5446	option.c	FUNCTION_23	CALL_1
0x3d64	      0xe800000000	                          call 0x4003da9	      5446	option.c	FUNCTION_23	CALL_1
0x3d69	        0x488945f8	                mov qword [rbp - 8], rax	      5446	option.c	FUNCTION_23	CALL_1
0x3d6d	      0x48837df800	                  cmp qword [rbp - 8], 0	      5447	option.c	FUNCTION_23	IF_1	CALL_2
0x3d72	            0x7420	                            je 0x4003dd4	      5447	option.c	FUNCTION_23	IF_1	CALL_2
0x3d74	        0x488b45f8	                mov rax, qword [rbp - 8]	      5447	option.c	FUNCTION_23	IF_1	CALL_2
0x3d78	           0xfb600	                   movzx eax, byte [rax]	      5447	option.c	FUNCTION_23	IF_1	CALL_2
0x3d7b	           0xfb6c0	                           movzx eax, al	      5447	option.c	FUNCTION_23	IF_1	CALL_2
0x3d7e	          0x83e830	                           sub eax, 0x30	      5447	option.c	FUNCTION_23	IF_1	CALL_2
0x3d81	          0x83f809	                              cmp eax, 9	      5447	option.c	FUNCTION_23	IF_1	CALL_2
0x3d84	            0x770e	                            ja 0x4003dd4	      5447	option.c	FUNCTION_23	IF_1	CALL_2
0x3d86	        0x488b45f8	                mov rax, qword [rbp - 8]	      5448	option.c	FUNCTION_23	CALL_3
0x3d8a	          0x4889c7	                            mov rdi, rax	      5448	option.c	FUNCTION_23	CALL_3
0x3d8d	      0xe800000000	                          call 0x4003dd2	      5448	option.c	FUNCTION_23	CALL_3
0x3d92	            0xeb05	                           jmp 0x4003dd9	      5448	option.c	FUNCTION_23	CALL_3
0x3d94	      0xb8ffffffff	                     mov eax, 0xffffffff	      5449	option.c	FUNCTION_23
0x3d99	              0xc9	                                   leave	      5450	option.c	FUNCTION_23
0x3d9a	              0xc3	                                     ret	      5450	option.c	FUNCTION_23
check_cedit	WHILE,0:SWITCH,0:CALL,2:FOR,0:ELSE,1:DO,0:IF,2:functions,0	26
0x3a7b	              0x55	                                push rbp	      5317	option.c	FUNCTION_20
0x3a7c	          0x4889e5	                            mov rbp, rsp	      5317	option.c	FUNCTION_20
0x3a7f	        0x4883ec10	                           sub rsp, 0x10	      5317	option.c	FUNCTION_20
0x3a83	    0x488b05000000	            mov rax, qword [0x04003aca] 	      5320	option.c	FUNCTION_20	IF_1
0x3a8a	           0xfb600	                   movzx eax, byte [rax]	      5320	option.c	FUNCTION_20	IF_1
0x3a8d	            0x84c0	                             test al, al	      5320	option.c	FUNCTION_20	IF_1
0x3a8f	            0x750c	                           jne 0x4003add	      5320	option.c	FUNCTION_20	IF_1
0x3a91	    0xc70500000000	     mov dword [0x04003adb], 0xffffffff 	      5321	option.c	FUNCTION_20	IF_1
0x3a9b	            0xeb35	                           jmp 0x4003b12	      5321	option.c	FUNCTION_20	IF_1
0x3a9d	    0x488b05000000	            mov rax, qword [0x04003ae4] 	      5324	option.c	FUNCTION_20	ELSE_1	CALL_1
0x3aa4	      0xbe00000000	                              mov esi, 0	      5324	option.c	FUNCTION_20	ELSE_1	CALL_1
0x3aa9	          0x4889c7	                            mov rdi, rax	      5324	option.c	FUNCTION_20	ELSE_1	CALL_1
0x3aac	      0xe800000000	                          call 0x4003af1	      5324	option.c	FUNCTION_20	ELSE_1	CALL_1
0x3ab1	          0x8945fc	                mov dword [rbp - 4], eax	      5324	option.c	FUNCTION_20	ELSE_1	CALL_1
0x3ab4	          0x8b45fc	                mov eax, dword [rbp - 4]	      5325	option.c	FUNCTION_20	ELSE_1	IF_2	CALL_2
0x3ab7	            0x89c7	                            mov edi, eax	      5325	option.c	FUNCTION_20	ELSE_1	IF_2	CALL_2
0x3ab9	      0xe800000000	                          call 0x4003afe	      5325	option.c	FUNCTION_20	ELSE_1	IF_2	CALL_2
0x3abe	            0x85c0	                           test eax, eax	      5325	option.c	FUNCTION_20	ELSE_1	IF_2	CALL_2
0x3ac0	            0x7407	                            je 0x4003b09	      5325	option.c	FUNCTION_20	ELSE_1	IF_2	CALL_2
0x3ac2	      0xb800000000	                              mov eax, 0	      5326	option.c	FUNCTION_20	ELSE_1	IF_2
0x3ac7	            0xeb0e	                           jmp 0x4003b17	      5326	option.c	FUNCTION_20	ELSE_1	IF_2
0x3ac9	          0x8b45fc	                mov eax, dword [rbp - 4]	      5327	option.c	FUNCTION_20	ELSE_1
0x3acc	    0x890500000000	            mov dword [0x04003b12], eax 	      5327	option.c	FUNCTION_20	ELSE_1
0x3ad2	      0xb800000000	                              mov eax, 0	      5329	option.c	FUNCTION_20
0x3ad7	              0xc9	                                   leave	      5330	option.c	FUNCTION_20
0x3ad8	              0xc3	                                     ret	      5330	option.c	FUNCTION_20
get_varp_scope	WHILE,0:SWITCH,1:CALL,3:FOR,0:ELSE,0:DO,0:IF,3:functions,0	170
0xca09	              0x55	                                push rbp	     10486	option.c	FUNCTION_77
0xca0a	          0x4889e5	                            mov rbp, rsp	     10486	option.c	FUNCTION_77
0xca0d	        0x4883ec10	                           sub rsp, 0x10	     10486	option.c	FUNCTION_77
0xca11	        0x48897df8	                mov qword [rbp - 8], rdi	     10486	option.c	FUNCTION_77
0xca15	          0x8975f4	              mov dword [rbp - 0xc], esi	     10486	option.c	FUNCTION_77
0xca18	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     10487	option.c	FUNCTION_77	IF_1
0xca1b	          0x83e002	                              and eax, 2	     10487	option.c	FUNCTION_77	IF_1
0xca1e	            0x85c0	                           test eax, eax	     10487	option.c	FUNCTION_77	IF_1
0xca20	            0x743d	                            je 0x400ca9f	     10487	option.c	FUNCTION_77	IF_1
0xca22	        0x488b45f8	                mov rax, qword [rbp - 8]	     10487	option.c	FUNCTION_77	IF_1
0xca26	          0x8b4020	            mov eax, dword [rax + 0x20] 	     10487	option.c	FUNCTION_77	IF_1
0xca29	            0x85c0	                           test eax, eax	     10487	option.c	FUNCTION_77	IF_1
0xca2b	            0x7432	                            je 0x400ca9f	     10487	option.c	FUNCTION_77	IF_1
0xca2d	        0x488b45f8	                mov rax, qword [rbp - 8]	     10489	option.c	FUNCTION_77	IF_1	IF_2
0xca31	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10489	option.c	FUNCTION_77	IF_1	IF_2
0xca35	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	     10489	option.c	FUNCTION_77	IF_1	IF_2
0xca39	            0x7517	                           jne 0x400ca92	     10489	option.c	FUNCTION_77	IF_1	IF_2
0xca3b	        0x488b45f8	                mov rax, qword [rbp - 8]	     10490	option.c	FUNCTION_77	IF_1	CALL_2
0xca3f	          0x4889c7	                            mov rdi, rax	     10490	option.c	FUNCTION_77	IF_1	CALL_2
0xca42	      0xe8f8020000	                       call sym.get_varp	     10490	option.c	FUNCTION_77	IF_1	CALL_2
0xca47	    0x4805b8010000	                          add rax, 0x1b8	     10490	option.c	FUNCTION_77	IF_1	CALL_2
0xca4d	      0xe9eb020000	                           jmp 0x400cd7d	     10490	option.c	FUNCTION_77	IF_1	CALL_2
0xca52	        0x488b45f8	                mov rax, qword [rbp - 8]	     10491	option.c	FUNCTION_77	IF_1
0xca56	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10491	option.c	FUNCTION_77	IF_1
0xca5a	      0xe9de020000	                           jmp 0x400cd7d	     10491	option.c	FUNCTION_77	IF_1
0xca5f	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     10493	option.c	FUNCTION_77	IF_3
0xca62	          0x83e004	                              and eax, 4	     10493	option.c	FUNCTION_77	IF_3
0xca65	            0x85c0	                           test eax, eax	     10493	option.c	FUNCTION_77	IF_3
0xca67	     0xf84c4020000	                            je 0x400cd71	     10493	option.c	FUNCTION_77	IF_3
0xca6d	        0x488b45f8	                mov rax, qword [rbp - 8]	     10493	option.c	FUNCTION_77	IF_3
0xca71	          0x8b4020	            mov eax, dword [rax + 0x20] 	     10493	option.c	FUNCTION_77	IF_3
0xca74	      0x2500100000	                         and eax, 0x1000	     10493	option.c	FUNCTION_77	IF_3
0xca79	            0x85c0	                           test eax, eax	     10493	option.c	FUNCTION_77	IF_3
0xca7b	     0xf84b0020000	                            je 0x400cd71	     10493	option.c	FUNCTION_77	IF_3
0xca81	        0x488b45f8	                mov rax, qword [rbp - 8]	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xca85	          0x8b4020	            mov eax, dword [rax + 0x20] 	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xca88	      0x3d18500000	                         cmp eax, 0x5018	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xca8d	     0xf84fb010000	                            je 0x400ccce	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xca93	      0x3d18500000	                         cmp eax, 0x5018	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xca98	     0xf8f97000000	                            jg 0x400cb75	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xca9e	      0x3d06500000	                         cmp eax, 0x5006	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcaa3	     0xf8443010000	                            je 0x400cc2c	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcaa9	      0x3d06500000	                         cmp eax, 0x5006	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcaae	            0x7f3d	                            jg 0x400cb2d	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcab0	      0x3d01500000	                         cmp eax, 0x5001	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcab5	     0xf848b010000	                            je 0x400cc86	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcabb	      0x3d01500000	                         cmp eax, 0x5001	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcac0	            0x7f10	                            jg 0x400cb12	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcac2	      0x3d21300000	                         cmp eax, 0x3021	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcac7	     0xf8412020000	                            je 0x400cd1f	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcacd	      0xe958020000	                           jmp 0x400cd6a	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcad2	      0x3d03500000	                         cmp eax, 0x5003	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcad7	     0xf842f020000	                            je 0x400cd4c	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcadd	      0x3d05500000	                         cmp eax, 0x5005	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcae2	     0xf84f2000000	                            je 0x400cc1a	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcae8	      0xe93d020000	                           jmp 0x400cd6a	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcaed	      0x3d14500000	                         cmp eax, 0x5014	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcaf2	     0xf84a8010000	                            je 0x400cce0	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcaf8	      0x3d14500000	                         cmp eax, 0x5014	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcafd	            0x7f1b	                            jg 0x400cb5a	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcaff	      0x3d07500000	                         cmp eax, 0x5007	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcb04	     0xf84f4000000	                            je 0x400cc3e	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcb0a	      0x3d10500000	                         cmp eax, 0x5010	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcb0f	     0xf84bb010000	                            je 0x400cd10	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcb15	      0xe910020000	                           jmp 0x400cd6a	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcb1a	      0x3d15500000	                         cmp eax, 0x5015	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcb1f	     0xf848d010000	                            je 0x400ccf2	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcb25	      0x3d17500000	                         cmp eax, 0x5017	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcb2a	     0xf844c010000	                            je 0x400ccbc	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcb30	      0xe9f5010000	                           jmp 0x400cd6a	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcb35	      0x3d30500000	                         cmp eax, 0x5030	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcb3a	     0xf84bd010000	                            je 0x400cd3d	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcb40	      0x3d30500000	                         cmp eax, 0x5030	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcb45	            0x7f39	                            jg 0x400cbc0	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcb47	      0x3d1e500000	                         cmp eax, 0x501e	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcb4c	            0x747a	                            je 0x400cc08	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcb4e	      0x3d1e500000	                         cmp eax, 0x501e	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcb53	            0x7f10	                            jg 0x400cba5	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcb55	      0x3d1b500000	                         cmp eax, 0x501b	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcb5a	     0xf84b0000000	                            je 0x400cc50	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcb60	      0xe9c5010000	                           jmp 0x400cd6a	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcb65	      0x3d1f500000	                         cmp eax, 0x501f	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcb6a	     0xf8451010000	                            je 0x400cd01	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcb70	      0x3d2e500000	                         cmp eax, 0x502e	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcb75	     0xf84a7000000	                            je 0x400cc62	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcb7b	      0xe9aa010000	                           jmp 0x400cd6a	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcb80	      0x3d47500000	                         cmp eax, 0x5047	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcb85	     0xf84cd000000	                            je 0x400cc98	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcb8b	      0x3d47500000	                         cmp eax, 0x5047	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcb90	            0x7f1b	                            jg 0x400cbed	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcb92	      0x3d31500000	                         cmp eax, 0x5031	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcb97	     0xf847e010000	                            je 0x400cd5b	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcb9d	      0x3d38500000	                         cmp eax, 0x5038	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcba2	     0xf848c000000	                            je 0x400cc74	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcba8	      0xe97d010000	                           jmp 0x400cd6a	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcbad	      0x3d48500000	                         cmp eax, 0x5048	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcbb2	     0xf84b2000000	                            je 0x400ccaa	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcbb8	      0x3d4d500000	                         cmp eax, 0x504d	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcbbd	     0xf842b010000	                            je 0x400cd2e	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcbc3	      0xe962010000	                           jmp 0x400cd6a	     10495	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcbc8	    0x488b05000000	            mov rax, qword [0x0400cc0f] 	     10497	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcbcf	    0x4805e0140000	                         add rax, 0x14e0	     10497	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcbd5	      0xe963010000	                           jmp 0x400cd7d	     10497	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcbda	    0x488b05000000	            mov rax, qword [0x0400cc21] 	     10499	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcbe1	    0x4805e8150000	                         add rax, 0x15e8	     10499	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcbe7	      0xe951010000	                           jmp 0x400cd7d	     10499	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcbec	    0x488b05000000	            mov rax, qword [0x0400cc33] 	     10500	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcbf3	    0x4805d8150000	                         add rax, 0x15d8	     10500	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcbf9	      0xe93f010000	                           jmp 0x400cd7d	     10500	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcbfe	    0x488b05000000	            mov rax, qword [0x0400cc45] 	     10501	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcc05	    0x4805e0150000	                         add rax, 0x15e0	     10501	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcc0b	      0xe92d010000	                           jmp 0x400cd7d	     10501	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcc10	    0x488b05000000	            mov rax, qword [0x0400cc57] 	     10503	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcc17	    0x4805f0150000	                         add rax, 0x15f0	     10503	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcc1d	      0xe91b010000	                           jmp 0x400cd7d	     10503	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcc22	    0x488b05000000	            mov rax, qword [0x0400cc69] 	     10504	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcc29	    0x480500150000	                         add rax, 0x1500	     10504	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcc2f	      0xe909010000	                           jmp 0x400cd7d	     10504	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcc34	    0x488b05000000	            mov rax, qword [0x0400cc7b] 	     10505	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcc3b	    0x4805f8150000	                         add rax, 0x15f8	     10505	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcc41	      0xe9f7000000	                           jmp 0x400cd7d	     10505	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcc46	    0x488b05000000	            mov rax, qword [0x0400cc8d] 	     10506	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcc4d	    0x480500160000	                         add rax, 0x1600	     10506	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcc53	      0xe9e5000000	                           jmp 0x400cd7d	     10506	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcc58	    0x488b05000000	            mov rax, qword [0x0400cc9f] 	     10507	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcc5f	    0x480508160000	                         add rax, 0x1608	     10507	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcc65	      0xe9d3000000	                           jmp 0x400cd7d	     10507	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcc6a	    0x488b05000000	            mov rax, qword [0x0400ccb1] 	     10508	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcc71	    0x480510160000	                         add rax, 0x1610	     10508	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcc77	      0xe9c1000000	                           jmp 0x400cd7d	     10508	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcc7c	    0x488b05000000	            mov rax, qword [0x0400ccc3] 	     10510	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcc83	    0x4805a8140000	                         add rax, 0x14a8	     10510	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcc89	      0xe9af000000	                           jmp 0x400cd7d	     10510	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcc8e	    0x488b05000000	            mov rax, qword [0x0400ccd5] 	     10511	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcc95	    0x4805b0140000	                         add rax, 0x14b0	     10511	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcc9b	      0xe99d000000	                           jmp 0x400cd7d	     10511	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcca0	    0x488b05000000	            mov rax, qword [0x0400cce7] 	     10514	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcca7	    0x480520160000	                         add rax, 0x1620	     10514	option.c	FUNCTION_77	IF_3	SWITCH_1
0xccad	      0xe98b000000	                           jmp 0x400cd7d	     10514	option.c	FUNCTION_77	IF_3	SWITCH_1
0xccb2	    0x488b05000000	            mov rax, qword [0x0400ccf9] 	     10515	option.c	FUNCTION_77	IF_3	SWITCH_1
0xccb9	    0x480528160000	                         add rax, 0x1628	     10515	option.c	FUNCTION_77	IF_3	SWITCH_1
0xccbf	            0xeb7c	                           jmp 0x400cd7d	     10515	option.c	FUNCTION_77	IF_3	SWITCH_1
0xccc1	    0x488b05000000	            mov rax, qword [0x0400cd08] 	     10518	option.c	FUNCTION_77	IF_3	SWITCH_1
0xccc8	    0x480518170000	                         add rax, 0x1718	     10518	option.c	FUNCTION_77	IF_3	SWITCH_1
0xccce	            0xeb6d	                           jmp 0x400cd7d	     10518	option.c	FUNCTION_77	IF_3	SWITCH_1
0xccd0	    0x488b05000000	            mov rax, qword [0x0400cd17] 	     10521	option.c	FUNCTION_77	IF_3	SWITCH_1
0xccd7	    0x480528170000	                         add rax, 0x1728	     10521	option.c	FUNCTION_77	IF_3	SWITCH_1
0xccdd	            0xeb5e	                           jmp 0x400cd7d	     10521	option.c	FUNCTION_77	IF_3	SWITCH_1
0xccdf	    0x488b05000000	            mov rax, qword [0x0400cd26] 	     10524	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcce6	    0x480580020000	                          add rax, 0x280	     10524	option.c	FUNCTION_77	IF_3	SWITCH_1
0xccec	            0xeb4f	                           jmp 0x400cd7d	     10524	option.c	FUNCTION_77	IF_3	SWITCH_1
0xccee	    0x488b05000000	            mov rax, qword [0x0400cd35] 	     10526	option.c	FUNCTION_77	IF_3	SWITCH_1
0xccf5	    0x480530160000	                         add rax, 0x1630	     10526	option.c	FUNCTION_77	IF_3	SWITCH_1
0xccfb	            0xeb40	                           jmp 0x400cd7d	     10526	option.c	FUNCTION_77	IF_3	SWITCH_1
0xccfd	    0x488b05000000	            mov rax, qword [0x0400cd44] 	     10528	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcd04	    0x480540160000	                         add rax, 0x1640	     10528	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcd0a	            0xeb31	                           jmp 0x400cd7d	     10528	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcd0c	    0x488b05000000	            mov rax, qword [0x0400cd53] 	     10530	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcd13	    0x4805e0130000	                         add rax, 0x13e0	     10530	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcd19	            0xeb22	                           jmp 0x400cd7d	     10530	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcd1b	    0x488b05000000	            mov rax, qword [0x0400cd62] 	     10532	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcd22	    0x480510150000	                         add rax, 0x1510	     10532	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcd28	            0xeb13	                           jmp 0x400cd7d	     10532	option.c	FUNCTION_77	IF_3	SWITCH_1
0xcd2a	      0xb800000000	                              mov eax, 0	     10535	option.c	FUNCTION_77	IF_3
0xcd2f	            0xeb0c	                           jmp 0x400cd7d	     10535	option.c	FUNCTION_77	IF_3
0xcd31	        0x488b45f8	                mov rax, qword [rbp - 8]	     10537	option.c	FUNCTION_77	CALL_3
0xcd35	          0x4889c7	                            mov rdi, rax	     10537	option.c	FUNCTION_77	CALL_3
0xcd38	      0xe802000000	                       call sym.get_varp	     10537	option.c	FUNCTION_77	CALL_3
0xcd3d	              0xc9	                                   leave	     10538	option.c	FUNCTION_77
0xcd3e	              0xc3	                                     ret	     10538	option.c	FUNCTION_77
set_num_option	WHILE,0:SWITCH,0:CALL,53:FOR,0:ELSE,36:DO,0:IF,99:functions,0	851
0x9b3a	              0x55	                                push rbp	      8709	option.c	FUNCTION_51
0x9b3b	          0x4889e5	                            mov rbp, rsp	      8709	option.c	FUNCTION_51
0x9b3e	              0x53	                                push rbx	      8709	option.c	FUNCTION_51
0x9b3f	    0x4881ecb80000	                           sub rsp, 0xb8	      8709	option.c	FUNCTION_51
0x9b46	    0x89bd6cffffff	             mov dword [rbp - 0x94], edi	      8709	option.c	FUNCTION_51
0x9b4c	    0x4889b560ffff	             mov qword [rbp - 0xa0], rsi	      8709	option.c	FUNCTION_51
0x9b53	    0x48899558ffff	             mov qword [rbp - 0xa8], rdx	      8709	option.c	FUNCTION_51
0x9b5a	    0x48898d50ffff	             mov qword [rbp - 0xb0], rcx	      8709	option.c	FUNCTION_51
0x9b61	    0x4c898548ffff	              mov qword [rbp - 0xb8], r8	      8709	option.c	FUNCTION_51
0x9b68	    0x44898d68ffff	             mov dword [rbp - 0x98], r9d	      8709	option.c	FUNCTION_51
0x9b6f	    0x64488b042528	                mov rax, qword fs:[0x28]	      8709	option.c	FUNCTION_51
0x9b78	        0x488945e8	             mov qword [rbp - 0x18], rax	      8709	option.c	FUNCTION_51
0x9b7c	            0x31c0	                            xor eax, eax	      8709	option.c	FUNCTION_51
0x9b7e	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      8710	option.c	FUNCTION_51
0x9b89	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      8711	option.c	FUNCTION_51
0x9b90	          0x488b00	                    mov rax, qword [rax]	      8711	option.c	FUNCTION_51
0x9b93	        0x48894590	             mov qword [rbp - 0x70], rax	      8711	option.c	FUNCTION_51
0x9b97	    0x488b05000000	            mov rax, qword [0x04009bde] 	      8712	option.c	FUNCTION_51
0x9b9e	        0x48894598	             mov qword [rbp - 0x68], rax	      8712	option.c	FUNCTION_51
0x9ba2	    0x488b05000000	            mov rax, qword [0x04009be9] 	      8713	option.c	FUNCTION_51
0x9ba9	        0x488945a0	             mov qword [rbp - 0x60], rax	      8713	option.c	FUNCTION_51
0x9bad	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      8714	option.c	FUNCTION_51
0x9bb4	        0x488945a8	             mov qword [rbp - 0x58], rax	      8714	option.c	FUNCTION_51
0x9bb8	    0x8b0500000000	            mov eax, dword [0x04009bfe] 	      8717	option.c	FUNCTION_51	IF_1
0x9bbe	            0x85c0	                           test eax, eax	      8717	option.c	FUNCTION_51	IF_1
0x9bc0	            0x750a	                           jne 0x4009c0c	      8717	option.c	FUNCTION_51	IF_1
0x9bc2	    0x8b0500000000	            mov eax, dword [0x04009c08] 	      8719	option.c	FUNCTION_51	IF_1
0x9bc8	            0x85c0	                           test eax, eax	      8719	option.c	FUNCTION_51	IF_1
0x9bca	            0x7429	                            je 0x4009c35	      8719	option.c	FUNCTION_51	IF_1
0x9bcc	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      8721	option.c	FUNCTION_51	IF_1
0x9bd2	            0x4898	                                    cdqe	      8721	option.c	FUNCTION_51	IF_1
0x9bd4	        0x48c1e006	                              shl rax, 6	      8721	option.c	FUNCTION_51	IF_1
0x9bd8	    0x480500000000	                              add rax, 0	      8721	option.c	FUNCTION_51	IF_1
0x9bde	          0x488b00	                    mov rax, qword [rax]	      8721	option.c	FUNCTION_51	IF_1
0x9be1	      0x2500000800	                        and eax, 0x80000	      8721	option.c	FUNCTION_51	IF_1
0x9be6	          0x4885c0	                           test rax, rax	      8721	option.c	FUNCTION_51	IF_1
0x9be9	            0x740a	                            je 0x4009c35	      8721	option.c	FUNCTION_51	IF_1
0x9beb	      0xb800000000	                              mov eax, 0	      8722	option.c	FUNCTION_51	IF_1
0x9bf0	      0xe994100000	                           jmp 0x400acc9	      8722	option.c	FUNCTION_51	IF_1
0x9bf5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      8724	option.c	FUNCTION_51
0x9bf9	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      8724	option.c	FUNCTION_51
0x9c00	          0x488910	                    mov qword [rax], rdx	      8724	option.c	FUNCTION_51
0x9c03	    0x8b1500000000	            mov edx, dword [0x04009c49] 	      8727	option.c	FUNCTION_51	CALL_1
0x9c09	    0x8b8d68ffffff	             mov ecx, dword [rbp - 0x98]	      8727	option.c	FUNCTION_51	CALL_1
0x9c0f	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      8727	option.c	FUNCTION_51	CALL_1
0x9c15	            0x89ce	                            mov esi, ecx	      8727	option.c	FUNCTION_51	CALL_1
0x9c17	            0x89c7	                            mov edi, eax	      8727	option.c	FUNCTION_51	CALL_1
0x9c19	      0xe818efffff	        call sym.set_option_scriptID_idx	      8727	option.c	FUNCTION_51	CALL_1
0x9c1e	    0x488b05000000	            mov rax, qword [0x04009c65] 	      8733	option.c	FUNCTION_51	IF_2
0x9c25	    0x488b80501500	          mov rax, qword [rax + 0x1550] 	      8733	option.c	FUNCTION_51	IF_2
0x9c2c	          0x4885c0	                           test rax, rax	      8733	option.c	FUNCTION_51	IF_2
0x9c2f	            0x7927	                           jns 0x4009c98	      8733	option.c	FUNCTION_51	IF_2
0x9c31	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      8735	option.c	FUNCTION_51	IF_2
0x9c3c	    0x488b05000000	            mov rax, qword [0x04009c83] 	      8736	option.c	FUNCTION_51	IF_2
0x9c43	    0x488b15000000	            mov rdx, qword [0x04009c8a] 	      8736	option.c	FUNCTION_51	IF_2
0x9c4a	    0x488b92901500	          mov rdx, qword [rdx + 0x1590] 	      8736	option.c	FUNCTION_51	IF_2
0x9c51	    0x488990501500	          mov qword [rax + 0x1550], rdx 	      8736	option.c	FUNCTION_51	IF_2
0x9c58	    0x48817da80000	               cmp qword [rbp - 0x58], 0	      8742	option.c	FUNCTION_51	IF_3
0x9c60	            0x740e	                            je 0x4009cb0	      8742	option.c	FUNCTION_51	IF_3
0x9c62	    0x48817da80000	               cmp qword [rbp - 0x58], 0	      8742	option.c	FUNCTION_51	IF_3
0x9c6a	     0xf8511010000	                           jne 0x4009dc1	      8742	option.c	FUNCTION_51	IF_3
0x9c70	    0x488b05000000	            mov rax, qword [0x04009cb7] 	      8744	option.c	FUNCTION_51	IF_3	IF_4
0x9c77	          0x4885c0	                           test rax, rax	      8744	option.c	FUNCTION_51	IF_3	IF_4
0x9c7a	            0x7f16	                            jg 0x4009cd2	      8744	option.c	FUNCTION_51	IF_3	IF_4
0x9c7c	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      8746	option.c	FUNCTION_51	IF_3	IF_4
0x9c87	    0x48c705000000	               mov qword [0x04009cd2], 1	      8747	option.c	FUNCTION_51	IF_3	IF_4
0x9c92	    0x488b15000000	            mov rdx, qword [0x04009cd9] 	      8749	option.c	FUNCTION_51	IF_3	IF_5
0x9c99	    0x488b05000000	            mov rax, qword [0x04009ce0] 	      8749	option.c	FUNCTION_51	IF_3	IF_5
0x9ca0	          0x4839c2	                            cmp rdx, rax	      8749	option.c	FUNCTION_51	IF_3	IF_5
0x9ca3	            0x7e19	                           jle 0x4009cfe	      8749	option.c	FUNCTION_51	IF_3	IF_5
0x9ca5	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      8751	option.c	FUNCTION_51	IF_3	IF_5
0x9cb0	    0x488b05000000	            mov rax, qword [0x04009cf7] 	      8752	option.c	FUNCTION_51	IF_3	IF_5
0x9cb7	    0x488905000000	            mov qword [0x04009cfe], rax 	      8752	option.c	FUNCTION_51	IF_3	IF_5
0x9cbe	    0x488b05000000	            mov rax, qword [0x04009d05] 	      8754	option.c	FUNCTION_51	IF_3	IF_6
0x9cc5	          0x4885c0	                           test rax, rax	      8754	option.c	FUNCTION_51	IF_3	IF_6
0x9cc8	            0x7916	                           jns 0x4009d20	      8754	option.c	FUNCTION_51	IF_3	IF_6
0x9cca	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      8756	option.c	FUNCTION_51	IF_3	IF_6
0x9cd5	    0x48c705000000	               mov qword [0x04009d20], 0	      8757	option.c	FUNCTION_51	IF_3	IF_6
0x9ce0	    0x488b15000000	            mov rdx, qword [0x04009d27] 	      8761	option.c	FUNCTION_51	IF_3	IF_7
0x9ce7	    0x488b05000000	            mov rax, qword [0x04009d2e] 	      8761	option.c	FUNCTION_51	IF_3	IF_7
0x9cee	          0x4839c2	                            cmp rdx, rax	      8761	option.c	FUNCTION_51	IF_3	IF_7
0x9cf1	     0xf84ee080000	                            je 0x400a625	      8761	option.c	FUNCTION_51	IF_3	IF_7
0x9cf7	    0x48817da80000	               cmp qword [rbp - 0x58], 0	      8763	option.c	FUNCTION_51	IF_3	IF_7	IF_8
0x9cff	            0x752a	                           jne 0x4009d6b	      8763	option.c	FUNCTION_51	IF_3	IF_7	IF_8
0x9d01	    0x488b05000000	            mov rax, qword [0x04009d48] 	      8763	option.c	FUNCTION_51	IF_3	IF_7	IF_8
0x9d08	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      8763	option.c	FUNCTION_51	IF_3	IF_7	IF_8
0x9d0e	          0x4863d0	                         movsxd rdx, eax	      8763	option.c	FUNCTION_51	IF_3	IF_7	IF_8
0x9d11	    0x488b05000000	            mov rax, qword [0x04009d58] 	      8763	option.c	FUNCTION_51	IF_3	IF_7	IF_8
0x9d18	          0x4839c2	                            cmp rdx, rax	      8763	option.c	FUNCTION_51	IF_3	IF_7	IF_8
0x9d1b	            0x7d0e	                           jge 0x4009d6b	      8763	option.c	FUNCTION_51	IF_3	IF_7	IF_8
0x9d1d	    0x488b05000000	            mov rax, qword [0x04009d64] 	      8764	option.c	FUNCTION_51	IF_3	IF_7	CALL_2
0x9d24	            0x89c7	                            mov edi, eax	      8764	option.c	FUNCTION_51	IF_3	IF_7	CALL_2
0x9d26	      0xe800000000	                          call 0x4009d6b	      8764	option.c	FUNCTION_51	IF_3	IF_7	CALL_2
0x9d2b	    0x48817da80000	               cmp qword [rbp - 0x58], 0	      8765	option.c	FUNCTION_51	IF_3	IF_7	IF_9
0x9d33	     0xf85ac080000	                           jne 0x400a625	      8765	option.c	FUNCTION_51	IF_3	IF_7	IF_9
0x9d39	    0x488b05000000	            mov rax, qword [0x04009d80] 	      8765	option.c	FUNCTION_51	IF_3	IF_7	IF_9
0x9d40	    0x8b8038170000	          mov eax, dword [rax + 0x1738] 	      8765	option.c	FUNCTION_51	IF_3	IF_7	IF_9
0x9d46	            0x85c0	                           test eax, eax	      8765	option.c	FUNCTION_51	IF_3	IF_7	IF_9
0x9d48	     0xf8497080000	                            je 0x400a625	      8765	option.c	FUNCTION_51	IF_3	IF_7	IF_9
0x9d4e	    0x488b05000000	            mov rax, qword [0x04009d95] 	      8765	option.c	FUNCTION_51	IF_3	IF_7	IF_9
0x9d55	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      8765	option.c	FUNCTION_51	IF_3	IF_7	IF_9
0x9d5b	          0x4863d0	                         movsxd rdx, eax	      8765	option.c	FUNCTION_51	IF_3	IF_7	IF_9
0x9d5e	    0x488b05000000	            mov rax, qword [0x04009da5] 	      8765	option.c	FUNCTION_51	IF_3	IF_7	IF_9
0x9d65	          0x4839c2	                            cmp rdx, rax	      8765	option.c	FUNCTION_51	IF_3	IF_7	IF_9
0x9d68	     0xf8d77080000	                           jge 0x400a625	      8765	option.c	FUNCTION_51	IF_3	IF_7	IF_9
0x9d6e	    0x488b05000000	            mov rax, qword [0x04009db5] 	      8766	option.c	FUNCTION_51	IF_3	IF_7	CALL_3
0x9d75	            0x89c7	                            mov edi, eax	      8766	option.c	FUNCTION_51	IF_3	IF_7	CALL_3
0x9d77	      0xe800000000	                          call 0x4009dbc	      8766	option.c	FUNCTION_51	IF_3	IF_7	CALL_3
0x9d7c	      0xe964080000	                           jmp 0x400a625	      8761	option.c	FUNCTION_51	IF_3	IF_7
0x9d81	    0x48817da80000	               cmp qword [rbp - 0x58], 0	      8771	option.c	FUNCTION_51	ELSE_1	IF_10
0x9d89	            0x7558	                           jne 0x4009e23	      8771	option.c	FUNCTION_51	ELSE_1	IF_10
0x9d8b	    0x488b05000000	            mov rax, qword [0x04009dd2] 	      8773	option.c	FUNCTION_51	ELSE_1	IF_10	IF_11
0x9d92	          0x4885c0	                           test rax, rax	      8773	option.c	FUNCTION_51	ELSE_1	IF_10	IF_11
0x9d95	            0x7916	                           jns 0x4009ded	      8773	option.c	FUNCTION_51	ELSE_1	IF_10	IF_11
0x9d97	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      8775	option.c	FUNCTION_51	ELSE_1	IF_10	IF_11
0x9da2	    0x48c705000000	               mov qword [0x04009ded], 0	      8776	option.c	FUNCTION_51	ELSE_1	IF_10	IF_11
0x9dad	    0x488b15000000	            mov rdx, qword [0x04009df4] 	      8778	option.c	FUNCTION_51	ELSE_1	IF_10	IF_12
0x9db4	    0x488b05000000	            mov rax, qword [0x04009dfb] 	      8778	option.c	FUNCTION_51	ELSE_1	IF_10	IF_12
0x9dbb	          0x4839c2	                            cmp rdx, rax	      8778	option.c	FUNCTION_51	ELSE_1	IF_10	IF_12
0x9dbe	            0x7e19	                           jle 0x4009e19	      8778	option.c	FUNCTION_51	ELSE_1	IF_10	IF_12
0x9dc0	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      8780	option.c	FUNCTION_51	ELSE_1	IF_10	IF_12
0x9dcb	    0x488b05000000	            mov rax, qword [0x04009e12] 	      8781	option.c	FUNCTION_51	ELSE_1	IF_10	IF_12
0x9dd2	    0x488905000000	            mov qword [0x04009e19], rax 	      8781	option.c	FUNCTION_51	ELSE_1	IF_10	IF_12
0x9dd9	      0xe800000000	                          call 0x4009e1e	      8783	option.c	FUNCTION_51	ELSE_1	IF_10	CALL_4
0x9dde	      0xe906080000	                           jmp 0x400a629	      8783	option.c	FUNCTION_51	ELSE_1	IF_10	CALL_4
0x9de3	    0x48817da80000	               cmp qword [rbp - 0x58], 0	      8785	option.c	FUNCTION_51	ELSE_2	IF_13
0x9deb	     0xf8598000000	                           jne 0x4009ec9	      8785	option.c	FUNCTION_51	ELSE_2	IF_13
0x9df1	    0x488b05000000	            mov rax, qword [0x04009e38] 	      8787	option.c	FUNCTION_51	ELSE_2	IF_13	IF_14
0x9df8	          0x4885c0	                           test rax, rax	      8787	option.c	FUNCTION_51	ELSE_2	IF_13	IF_14
0x9dfb	            0x7f16	                            jg 0x4009e53	      8787	option.c	FUNCTION_51	ELSE_2	IF_13	IF_14
0x9dfd	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      8789	option.c	FUNCTION_51	ELSE_2	IF_13	IF_14
0x9e08	    0x48c705000000	               mov qword [0x04009e53], 1	      8790	option.c	FUNCTION_51	ELSE_2	IF_13	IF_14
0x9e13	    0x488b15000000	            mov rdx, qword [0x04009e5a] 	      8792	option.c	FUNCTION_51	ELSE_2	IF_13	IF_15
0x9e1a	    0x488b05000000	            mov rax, qword [0x04009e61] 	      8792	option.c	FUNCTION_51	ELSE_2	IF_13	IF_15
0x9e21	          0x4839c2	                            cmp rdx, rax	      8792	option.c	FUNCTION_51	ELSE_2	IF_13	IF_15
0x9e24	            0x7e19	                           jle 0x4009e7f	      8792	option.c	FUNCTION_51	ELSE_2	IF_13	IF_15
0x9e26	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      8794	option.c	FUNCTION_51	ELSE_2	IF_13	IF_15
0x9e31	    0x488b05000000	            mov rax, qword [0x04009e78] 	      8795	option.c	FUNCTION_51	ELSE_2	IF_13	IF_15
0x9e38	    0x488905000000	            mov qword [0x04009e7f], rax 	      8795	option.c	FUNCTION_51	ELSE_2	IF_13	IF_15
0x9e3f	    0x488b15000000	            mov rdx, qword [0x04009e86] 	      8799	option.c	FUNCTION_51	ELSE_2	IF_13	IF_16
0x9e46	    0x488b05000000	            mov rax, qword [0x04009e8d] 	      8799	option.c	FUNCTION_51	ELSE_2	IF_13	IF_16
0x9e4d	          0x4839c2	                            cmp rdx, rax	      8799	option.c	FUNCTION_51	ELSE_2	IF_13	IF_16
0x9e50	     0xf8493070000	                            je 0x400a629	      8799	option.c	FUNCTION_51	ELSE_2	IF_13	IF_16
0x9e56	    0x488b05000000	            mov rax, qword [0x04009e9d] 	      8799	option.c	FUNCTION_51	ELSE_2	IF_13	IF_16
0x9e5d	    0x8b80ac000000	            mov eax, dword [rax + 0xac] 	      8799	option.c	FUNCTION_51	ELSE_2	IF_13	IF_16
0x9e63	          0x4863d0	                         movsxd rdx, eax	      8799	option.c	FUNCTION_51	ELSE_2	IF_13	IF_16
0x9e66	    0x488b05000000	            mov rax, qword [0x04009ead] 	      8799	option.c	FUNCTION_51	ELSE_2	IF_13	IF_16
0x9e6d	          0x4839c2	                            cmp rdx, rax	      8799	option.c	FUNCTION_51	ELSE_2	IF_13	IF_16
0x9e70	     0xf8d73070000	                           jge 0x400a629	      8799	option.c	FUNCTION_51	ELSE_2	IF_13	IF_16
0x9e76	    0x488b05000000	            mov rax, qword [0x04009ebd] 	      8800	option.c	FUNCTION_51	ELSE_2	IF_13	CALL_5
0x9e7d	            0x89c7	                            mov edi, eax	      8800	option.c	FUNCTION_51	ELSE_2	IF_13	CALL_5
0x9e7f	      0xe800000000	                          call 0x4009ec4	      8800	option.c	FUNCTION_51	ELSE_2	IF_13	CALL_5
0x9e84	      0xe960070000	                           jmp 0x400a629	      8800	option.c	FUNCTION_51	ELSE_2	IF_13	CALL_5
0x9e89	    0x48817da80000	               cmp qword [rbp - 0x58], 0	      8804	option.c	FUNCTION_51	ELSE_3	IF_17
0x9e91	            0x7558	                           jne 0x4009f2b	      8804	option.c	FUNCTION_51	ELSE_3	IF_17
0x9e93	    0x488b05000000	            mov rax, qword [0x04009eda] 	      8806	option.c	FUNCTION_51	ELSE_3	IF_17	IF_18
0x9e9a	          0x4885c0	                           test rax, rax	      8806	option.c	FUNCTION_51	ELSE_3	IF_17	IF_18
0x9e9d	            0x7916	                           jns 0x4009ef5	      8806	option.c	FUNCTION_51	ELSE_3	IF_17	IF_18
0x9e9f	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      8808	option.c	FUNCTION_51	ELSE_3	IF_17	IF_18
0x9eaa	    0x48c705000000	               mov qword [0x04009ef5], 0	      8809	option.c	FUNCTION_51	ELSE_3	IF_17	IF_18
0x9eb5	    0x488b15000000	            mov rdx, qword [0x04009efc] 	      8811	option.c	FUNCTION_51	ELSE_3	IF_17	IF_19
0x9ebc	    0x488b05000000	            mov rax, qword [0x04009f03] 	      8811	option.c	FUNCTION_51	ELSE_3	IF_17	IF_19
0x9ec3	          0x4839c2	                            cmp rdx, rax	      8811	option.c	FUNCTION_51	ELSE_3	IF_17	IF_19
0x9ec6	            0x7e19	                           jle 0x4009f21	      8811	option.c	FUNCTION_51	ELSE_3	IF_17	IF_19
0x9ec8	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      8813	option.c	FUNCTION_51	ELSE_3	IF_17	IF_19
0x9ed3	    0x488b05000000	            mov rax, qword [0x04009f1a] 	      8814	option.c	FUNCTION_51	ELSE_3	IF_17	IF_19
0x9eda	    0x488905000000	            mov qword [0x04009f21], rax 	      8814	option.c	FUNCTION_51	ELSE_3	IF_17	IF_19
0x9ee1	      0xe800000000	                          call 0x4009f26	      8816	option.c	FUNCTION_51	ELSE_3	IF_17	CALL_6
0x9ee6	      0xe9fe060000	                           jmp 0x400a629	      8816	option.c	FUNCTION_51	ELSE_3	IF_17	CALL_6
0x9eeb	    0x48817da80000	               cmp qword [rbp - 0x58], 0	      8820	option.c	FUNCTION_51	ELSE_4	IF_20
0x9ef3	            0x750f	                           jne 0x4009f44	      8820	option.c	FUNCTION_51	ELSE_4	IF_20
0x9ef5	      0xbf00000000	                              mov edi, 0	      8822	option.c	FUNCTION_51	ELSE_4	IF_20	CALL_7
0x9efa	      0xe800000000	                          call 0x4009f3f	      8822	option.c	FUNCTION_51	ELSE_4	IF_20	CALL_7
0x9eff	      0xe9e5060000	                           jmp 0x400a629	      8822	option.c	FUNCTION_51	ELSE_4	IF_20	CALL_7
0x9f04	    0x48817da80000	               cmp qword [rbp - 0x58], 0	      8826	option.c	FUNCTION_51	ELSE_5	IF_21
0x9f0c	            0x750a	                           jne 0x4009f58	      8826	option.c	FUNCTION_51	ELSE_5	IF_21
0x9f0e	      0xe800000000	                          call 0x4009f53	      8828	option.c	FUNCTION_51	ELSE_5	IF_21	CALL_8
0x9f13	      0xe9d1060000	                           jmp 0x400a629	      8828	option.c	FUNCTION_51	ELSE_5	IF_21	CALL_8
0x9f18	    0x488b05000000	            mov rax, qword [0x04009f5f] 	      8843	option.c	FUNCTION_51	ELSE_7	IF_24
0x9f1f	    0x4805e8010000	                          add rax, 0x1e8	      8843	option.c	FUNCTION_51	ELSE_7	IF_24
0x9f25	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      8843	option.c	FUNCTION_51	ELSE_7	IF_24
0x9f29	            0x752f	                           jne 0x4009f9a	      8843	option.c	FUNCTION_51	ELSE_7	IF_24
0x9f2b	    0x488b05000000	            mov rax, qword [0x04009f72] 	      8845	option.c	FUNCTION_51	ELSE_7	IF_24	IF_25
0x9f32	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      8845	option.c	FUNCTION_51	ELSE_7	IF_24	IF_25
0x9f39	          0x4885c0	                           test rax, rax	      8845	option.c	FUNCTION_51	ELSE_7	IF_24	IF_25
0x9f3c	            0x7912	                           jns 0x4009f90	      8845	option.c	FUNCTION_51	ELSE_7	IF_24	IF_25
0x9f3e	    0x488b05000000	            mov rax, qword [0x04009f85] 	      8846	option.c	FUNCTION_51	ELSE_7	IF_24	IF_25
0x9f45	    0x48c780e80100	              mov qword [rax + 0x1e8], 0	      8846	option.c	FUNCTION_51	ELSE_7	IF_24	IF_25
0x9f50	      0xe800000000	                          call 0x4009f95	      8847	option.c	FUNCTION_51	ELSE_7	IF_24	CALL_11
0x9f55	      0xe98f060000	                           jmp 0x400a629	      8847	option.c	FUNCTION_51	ELSE_7	IF_24	CALL_11
0x9f5a	    0x488b05000000	            mov rax, qword [0x04009fa1] 	      8851	option.c	FUNCTION_51	ELSE_8	IF_26
0x9f61	    0x480508020000	                          add rax, 0x208	      8851	option.c	FUNCTION_51	ELSE_8	IF_26
0x9f67	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      8851	option.c	FUNCTION_51	ELSE_8	IF_26
0x9f6b	            0x7514	                           jne 0x4009fc1	      8851	option.c	FUNCTION_51	ELSE_8	IF_26
0x9f6d	    0x488b05000000	            mov rax, qword [0x04009fb4] 	      8853	option.c	FUNCTION_51	ELSE_8	IF_26	CALL_12
0x9f74	          0x4889c7	                            mov rdi, rax	      8853	option.c	FUNCTION_51	ELSE_8	IF_26	CALL_12
0x9f77	      0xe800000000	                          call 0x4009fbc	      8853	option.c	FUNCTION_51	ELSE_8	IF_26	CALL_12
0x9f7c	      0xe968060000	                           jmp 0x400a629	      8853	option.c	FUNCTION_51	ELSE_8	IF_26	CALL_12
0x9f81	    0x488b05000000	            mov rax, qword [0x04009fc8] 	      8857	option.c	FUNCTION_51	ELSE_9	IF_27
0x9f88	    0x480510020000	                          add rax, 0x210	      8857	option.c	FUNCTION_51	ELSE_9	IF_27
0x9f8e	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      8857	option.c	FUNCTION_51	ELSE_9	IF_27
0x9f92	            0x753e	                           jne 0x400a012	      8857	option.c	FUNCTION_51	ELSE_9	IF_27
0x9f94	    0x488b05000000	            mov rax, qword [0x04009fdb] 	      8859	option.c	FUNCTION_51	ELSE_9	IF_27	IF_28	CALL_14
0x9f9b	          0x4889c7	                            mov rdi, rax	      8859	option.c	FUNCTION_51	ELSE_9	IF_27	IF_28	CALL_14
0x9f9e	      0xe800000000	                          call 0x4009fe3	      8859	option.c	FUNCTION_51	ELSE_9	IF_27	IF_28	CALL_14
0x9fa3	            0x85c0	                           test eax, eax	      8859	option.c	FUNCTION_51	ELSE_9	IF_27	IF_28	CALL_14
0x9fa5	            0x7517	                           jne 0x4009ffe	      8859	option.c	FUNCTION_51	ELSE_9	IF_27	IF_28	CALL_14
0x9fa7	    0x488b05000000	            mov rax, qword [0x04009fee] 	      8859	option.c	FUNCTION_51	ELSE_9	IF_27	IF_28	CALL_14
0x9fae	          0x4889c7	                            mov rdi, rax	      8859	option.c	FUNCTION_51	ELSE_9	IF_27	IF_28	CALL_14
0x9fb1	      0xe800000000	                          call 0x4009ff6	      8859	option.c	FUNCTION_51	ELSE_9	IF_27	IF_28	CALL_14
0x9fb6	            0x85c0	                           test eax, eax	      8859	option.c	FUNCTION_51	ELSE_9	IF_27	IF_28	CALL_14
0x9fb8	     0xf842b060000	                            je 0x400a629	      8859	option.c	FUNCTION_51	ELSE_9	IF_27	IF_28	CALL_14
0x9fbe	    0x488b05000000	            mov rax, qword [0x0400a005] 	      8860	option.c	FUNCTION_51	ELSE_9	IF_27	CALL_15
0x9fc5	          0x4889c7	                            mov rdi, rax	      8860	option.c	FUNCTION_51	ELSE_9	IF_27	CALL_15
0x9fc8	      0xe800000000	                          call 0x400a00d	      8860	option.c	FUNCTION_51	ELSE_9	IF_27	CALL_15
0x9fcd	      0xe917060000	                           jmp 0x400a629	      8860	option.c	FUNCTION_51	ELSE_9	IF_27	CALL_15
0x9fd2	    0x488b05000000	            mov rax, qword [0x0400a019] 	      8864	option.c	FUNCTION_51	ELSE_10	IF_29
0x9fd9	    0x4805c8010000	                          add rax, 0x1c8	      8864	option.c	FUNCTION_51	ELSE_10	IF_29
0x9fdf	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      8864	option.c	FUNCTION_51	ELSE_10	IF_29
0x9fe3	            0x756f	                           jne 0x400a094	      8864	option.c	FUNCTION_51	ELSE_10	IF_29
0x9fe5	    0x488b05000000	            mov rax, qword [0x0400a02c] 	      8866	option.c	FUNCTION_51	ELSE_10	IF_29	IF_30
0x9fec	    0x488b80c80100	           mov rax, qword [rax + 0x1c8] 	      8866	option.c	FUNCTION_51	ELSE_10	IF_29	IF_30
0x9ff3	          0x4885c0	                           test rax, rax	      8866	option.c	FUNCTION_51	ELSE_10	IF_29	IF_30
0x9ff6	            0x7922	                           jns 0x400a05a	      8866	option.c	FUNCTION_51	ELSE_10	IF_29	IF_30
0x9ff8	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      8868	option.c	FUNCTION_51	ELSE_10	IF_29	IF_30
0xa003	    0x488b05000000	            mov rax, qword [0x0400a04a] 	      8869	option.c	FUNCTION_51	ELSE_10	IF_29	IF_30
0xa00a	    0x48c780c80100	              mov qword [rax + 0x1c8], 0	      8869	option.c	FUNCTION_51	ELSE_10	IF_29	IF_30
0xa015	      0xe9cf050000	                           jmp 0x400a629	      8869	option.c	FUNCTION_51	ELSE_10	IF_29	IF_30
0xa01a	    0x488b05000000	            mov rax, qword [0x0400a061] 	      8871	option.c	FUNCTION_51	ELSE_10	IF_29	ELSE_11	IF_31
0xa021	    0x488b80c80100	           mov rax, qword [rax + 0x1c8] 	      8871	option.c	FUNCTION_51	ELSE_10	IF_29	ELSE_11	IF_31
0xa028	        0x4883f80c	                            cmp rax, 0xc	      8871	option.c	FUNCTION_51	ELSE_10	IF_29	ELSE_11	IF_31
0xa02c	     0xf8eb7050000	                           jle 0x400a629	      8871	option.c	FUNCTION_51	ELSE_10	IF_29	ELSE_11	IF_31
0xa032	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      8873	option.c	FUNCTION_51	ELSE_10	IF_29	ELSE_11	IF_31
0xa03d	    0x488b05000000	            mov rax, qword [0x0400a084] 	      8874	option.c	FUNCTION_51	ELSE_10	IF_29	ELSE_11	IF_31
0xa044	    0x48c780c80100	           mov qword [rax + 0x1c8], 0xc 	      8874	option.c	FUNCTION_51	ELSE_10	IF_29	ELSE_11	IF_31
0xa04f	      0xe995050000	                           jmp 0x400a629	      8874	option.c	FUNCTION_51	ELSE_10	IF_29	ELSE_11	IF_31
0xa054	    0x488b05000000	            mov rax, qword [0x0400a09b] 	      8881	option.c	FUNCTION_51	ELSE_12	IF_32
0xa05b	    0x480550150000	                         add rax, 0x1550	      8881	option.c	FUNCTION_51	ELSE_12	IF_32
0xa061	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      8881	option.c	FUNCTION_51	ELSE_12	IF_32
0xa065	            0x7413	                            je 0x400a0ba	      8881	option.c	FUNCTION_51	ELSE_12	IF_32
0xa067	    0x488b05000000	            mov rax, qword [0x0400a0ae] 	      8881	option.c	FUNCTION_51	ELSE_12	IF_32
0xa06e	    0x480590150000	                         add rax, 0x1590	      8881	option.c	FUNCTION_51	ELSE_12	IF_32
0xa074	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      8881	option.c	FUNCTION_51	ELSE_12	IF_32
0xa078	            0x7560	                           jne 0x400a11a	      8881	option.c	FUNCTION_51	ELSE_12	IF_32
0xa07a	    0x488b05000000	            mov rax, qword [0x0400a0c1] 	      8884	option.c	FUNCTION_51	ELSE_12	IF_32	IF_33	CALL_16
0xa081	          0x4889c7	                            mov rdi, rax	      8884	option.c	FUNCTION_51	ELSE_12	IF_32	IF_33	CALL_16
0xa084	      0xe800000000	                          call 0x400a0c9	      8884	option.c	FUNCTION_51	ELSE_12	IF_32	IF_33	CALL_16
0xa089	            0x85c0	                           test eax, eax	      8884	option.c	FUNCTION_51	ELSE_12	IF_32	IF_33	CALL_16
0xa08b	            0x740f	                            je 0x400a0dc	      8884	option.c	FUNCTION_51	ELSE_12	IF_32	IF_33	CALL_16
0xa08d	    0x488b05000000	            mov rax, qword [0x0400a0d4] 	      8885	option.c	FUNCTION_51	ELSE_12	IF_32	CALL_17
0xa094	          0x4889c7	                            mov rdi, rax	      8885	option.c	FUNCTION_51	ELSE_12	IF_32	CALL_17
0xa097	      0xe800000000	                          call 0x400a0dc	      8885	option.c	FUNCTION_51	ELSE_12	IF_32	CALL_17
0xa09c	    0x488b05000000	            mov rax, qword [0x0400a0e3] 	      8890	option.c	FUNCTION_51	ELSE_12	IF_32	IF_34
0xa0a3	    0x480550150000	                         add rax, 0x1550	      8890	option.c	FUNCTION_51	ELSE_12	IF_32	IF_34
0xa0a9	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      8890	option.c	FUNCTION_51	ELSE_12	IF_32	IF_34
0xa0ad	            0x7417	                            je 0x400a106	      8890	option.c	FUNCTION_51	ELSE_12	IF_32	IF_34
0xa0af	    0x488b05000000	            mov rax, qword [0x0400a0f6] 	      8890	option.c	FUNCTION_51	ELSE_12	IF_32	IF_34
0xa0b6	    0x488b80501500	          mov rax, qword [rax + 0x1550] 	      8890	option.c	FUNCTION_51	ELSE_12	IF_32	IF_34
0xa0bd	          0x4885c0	                           test rax, rax	      8890	option.c	FUNCTION_51	ELSE_12	IF_32	IF_34
0xa0c0	     0xf8522050000	                           jne 0x400a628	      8890	option.c	FUNCTION_51	ELSE_12	IF_32	IF_34
0xa0c6	    0x488b05000000	            mov rax, qword [0x0400a10d] 	      8891	option.c	FUNCTION_51	ELSE_12	IF_32	CALL_18
0xa0cd	          0x4889c7	                            mov rdi, rax	      8891	option.c	FUNCTION_51	ELSE_12	IF_32	CALL_18
0xa0d0	      0xe800000000	                          call 0x400a115	      8891	option.c	FUNCTION_51	ELSE_12	IF_32	CALL_18
0xa0d5	      0xe90e050000	                           jmp 0x400a628	      8890	option.c	FUNCTION_51	ELSE_12	IF_32	IF_34
0xa0da	    0x48817da80000	               cmp qword [rbp - 0x58], 0	      8898	option.c	FUNCTION_51	ELSE_13	IF_35
0xa0e2	            0x753b	                           jne 0x400a15f	      8898	option.c	FUNCTION_51	ELSE_13	IF_35
0xa0e4	    0x488b05000000	            mov rax, qword [0x0400a12b] 	      8900	option.c	FUNCTION_51	ELSE_13	IF_35	IF_36
0xa0eb	        0x4883f806	                              cmp rax, 6	      8900	option.c	FUNCTION_51	ELSE_13	IF_35	IF_36
0xa0ef	            0x7e0d	                           jle 0x400a13e	      8900	option.c	FUNCTION_51	ELSE_13	IF_35	IF_36
0xa0f1	    0x48c705000000	               mov qword [0x0400a13c], 6	      8901	option.c	FUNCTION_51	ELSE_13	IF_35	IF_36
0xa0fc	            0xeb17	                           jmp 0x400a155	      8901	option.c	FUNCTION_51	ELSE_13	IF_35	IF_36
0xa0fe	    0x488b05000000	            mov rax, qword [0x0400a145] 	      8902	option.c	FUNCTION_51	ELSE_13	IF_35	ELSE_14	IF_37
0xa105	          0x4885c0	                           test rax, rax	      8902	option.c	FUNCTION_51	ELSE_13	IF_35	ELSE_14	IF_37
0xa108	            0x790b	                           jns 0x400a155	      8902	option.c	FUNCTION_51	ELSE_13	IF_35	ELSE_14	IF_37
0xa10a	    0x48c705000000	               mov qword [0x0400a155], 0	      8903	option.c	FUNCTION_51	ELSE_13	IF_35	ELSE_14	IF_37
0xa115	      0xe800000000	                          call 0x400a15a	      8904	option.c	FUNCTION_51	ELSE_13	IF_35	CALL_19
0xa11a	      0xe9ca040000	                           jmp 0x400a629	      8904	option.c	FUNCTION_51	ELSE_13	IF_35	CALL_19
0xa11f	    0x488b05000000	            mov rax, qword [0x0400a166] 	      8908	option.c	FUNCTION_51	ELSE_15	IF_38
0xa126	    0x480568120000	                         add rax, 0x1268	      8908	option.c	FUNCTION_51	ELSE_15	IF_38
0xa12c	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      8908	option.c	FUNCTION_51	ELSE_15	IF_38
0xa130	            0x7572	                           jne 0x400a1e4	      8908	option.c	FUNCTION_51	ELSE_15	IF_38
0xa132	    0x488b05000000	            mov rax, qword [0x0400a179] 	      8910	option.c	FUNCTION_51	ELSE_15	IF_38	IF_39
0xa139	    0x488b80681200	          mov rax, qword [rax + 0x1268] 	      8910	option.c	FUNCTION_51	ELSE_15	IF_38	IF_39
0xa140	          0x4885c0	                           test rax, rax	      8910	option.c	FUNCTION_51	ELSE_15	IF_38	IF_39
0xa143	            0x7814	                            js 0x400a199	      8910	option.c	FUNCTION_51	ELSE_15	IF_38	IF_39
0xa145	    0x488b05000000	            mov rax, qword [0x0400a18c] 	      8910	option.c	FUNCTION_51	ELSE_15	IF_38	IF_39
0xa14c	    0x488b80681200	          mov rax, qword [rax + 0x1268] 	      8910	option.c	FUNCTION_51	ELSE_15	IF_38	IF_39
0xa153	        0x4883f802	                              cmp rax, 2	      8910	option.c	FUNCTION_51	ELSE_15	IF_38	IF_39
0xa157	            0x7e1d	                           jle 0x400a1b6	      8910	option.c	FUNCTION_51	ELSE_15	IF_38	IF_39
0xa159	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      8912	option.c	FUNCTION_51	ELSE_15	IF_38	IF_39
0xa164	    0x488b05000000	            mov rax, qword [0x0400a1ab] 	      8913	option.c	FUNCTION_51	ELSE_15	IF_38	IF_39
0xa16b	    0x48c780681200	            mov qword [rax + 0x1268], 0 	      8913	option.c	FUNCTION_51	ELSE_15	IF_38	IF_39
0xa176	    0x488b05000000	            mov rax, qword [0x0400a1bd] 	      8915	option.c	FUNCTION_51	ELSE_15	IF_38
0xa17d	    0x488b80681200	          mov rax, qword [rax + 0x1268] 	      8915	option.c	FUNCTION_51	ELSE_15	IF_38
0xa184	    0x488905000000	            mov qword [0x0400a1cb], rax 	      8915	option.c	FUNCTION_51	ELSE_15	IF_38
0xa18b	    0x8b0500000000	            mov eax, dword [0x0400a1d1] 	      8916	option.c	FUNCTION_51	ELSE_15	IF_38	IF_40
0xa191	            0x85c0	                           test eax, eax	      8916	option.c	FUNCTION_51	ELSE_15	IF_38	IF_40
0xa193	            0x7405	                            je 0x400a1da	      8916	option.c	FUNCTION_51	ELSE_15	IF_38	IF_40
0xa195	      0xe800000000	                          call 0x400a1da	      8917	option.c	FUNCTION_51	ELSE_15	IF_38	CALL_20
0xa19a	      0xe800000000	                          call 0x400a1df	      8920	option.c	FUNCTION_51	ELSE_15	IF_38	CALL_21
0xa19f	      0xe945040000	                           jmp 0x400a629	      8920	option.c	FUNCTION_51	ELSE_15	IF_38	CALL_21
0xa1a4	    0x48817da80000	               cmp qword [rbp - 0x58], 0	      8933	option.c	FUNCTION_51	ELSE_17	IF_43
0xa1ac	            0x754a	                           jne 0x400a238	      8933	option.c	FUNCTION_51	ELSE_17	IF_43
0xa1ae	    0x488b05000000	            mov rax, qword [0x0400a1f5] 	      8935	option.c	FUNCTION_51	ELSE_17	IF_43	IF_44
0xa1b5	          0x4885c0	                           test rax, rax	      8935	option.c	FUNCTION_51	ELSE_17	IF_43	IF_44
0xa1b8	            0x7f10	                            jg 0x400a20a	      8935	option.c	FUNCTION_51	ELSE_17	IF_43	IF_44
0xa1ba	    0x48c705000000	               mov qword [0x0400a205], 1	      8936	option.c	FUNCTION_51	ELSE_17	IF_43	IF_44
0xa1c5	      0xe91f040000	                           jmp 0x400a629	      8936	option.c	FUNCTION_51	ELSE_17	IF_43	IF_44
0xa1ca	    0x488b15000000	            mov rdx, qword [0x0400a211] 	      8937	option.c	FUNCTION_51	ELSE_17	IF_43	ELSE_18	IF_45
0xa1d1	    0x488b05000000	            mov rax, qword [0x0400a218] 	      8937	option.c	FUNCTION_51	ELSE_17	IF_43	ELSE_18	IF_45
0xa1d8	          0x4839c2	                            cmp rdx, rax	      8937	option.c	FUNCTION_51	ELSE_17	IF_43	ELSE_18	IF_45
0xa1db	     0xf8c08040000	                            jl 0x400a629	      8937	option.c	FUNCTION_51	ELSE_17	IF_43	ELSE_18	IF_45
0xa1e1	    0x488b05000000	            mov rax, qword [0x0400a228] 	      8938	option.c	FUNCTION_51	ELSE_17	IF_43	ELSE_18	IF_45
0xa1e8	        0x4883e801	                              sub rax, 1	      8938	option.c	FUNCTION_51	ELSE_17	IF_43	ELSE_18	IF_45
0xa1ec	    0x488905000000	            mov qword [0x0400a233], rax 	      8938	option.c	FUNCTION_51	ELSE_17	IF_43	ELSE_18	IF_45
0xa1f3	      0xe9f1030000	                           jmp 0x400a629	      8938	option.c	FUNCTION_51	ELSE_17	IF_43	ELSE_18	IF_45
0xa1f8	    0x488b05000000	            mov rax, qword [0x0400a23f] 	      8941	option.c	FUNCTION_51	ELSE_19	IF_46
0xa1ff	    0x480570120000	                         add rax, 0x1270	      8941	option.c	FUNCTION_51	ELSE_19	IF_46
0xa205	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      8941	option.c	FUNCTION_51	ELSE_19	IF_46
0xa209	            0x755f	                           jne 0x400a2aa	      8941	option.c	FUNCTION_51	ELSE_19	IF_46
0xa20b	    0x488b05000000	            mov rax, qword [0x0400a252] 	      8943	option.c	FUNCTION_51	ELSE_19	IF_46	IF_47
0xa212	    0x488b80701200	          mov rax, qword [rax + 0x1270] 	      8943	option.c	FUNCTION_51	ELSE_19	IF_46	IF_47
0xa219	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      8943	option.c	FUNCTION_51	ELSE_19	IF_46	IF_47
0xa21d	            0x7c14	                            jl 0x400a273	      8943	option.c	FUNCTION_51	ELSE_19	IF_46	IF_47
0xa21f	    0x488b05000000	            mov rax, qword [0x0400a266] 	      8943	option.c	FUNCTION_51	ELSE_19	IF_46	IF_47
0xa226	    0x488b80701200	          mov rax, qword [rax + 0x1270] 	      8943	option.c	FUNCTION_51	ELSE_19	IF_46	IF_47
0xa22d	        0x4883f802	                              cmp rax, 2	      8943	option.c	FUNCTION_51	ELSE_19	IF_46	IF_47
0xa231	            0x7e1d	                           jle 0x400a290	      8943	option.c	FUNCTION_51	ELSE_19	IF_46	IF_47
0xa233	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      8945	option.c	FUNCTION_51	ELSE_19	IF_46	IF_47
0xa23e	    0x488b05000000	            mov rax, qword [0x0400a285] 	      8946	option.c	FUNCTION_51	ELSE_19	IF_46	IF_47
0xa245	    0x48c780701200	            mov qword [rax + 0x1270], 0 	      8946	option.c	FUNCTION_51	ELSE_19	IF_46	IF_47
0xa250	    0x488b05000000	            mov rax, qword [0x0400a297] 	      8948	option.c	FUNCTION_51	ELSE_19	IF_46
0xa257	    0x488b80701200	          mov rax, qword [rax + 0x1270] 	      8948	option.c	FUNCTION_51	ELSE_19	IF_46
0xa25e	    0x488905000000	            mov qword [0x0400a2a5], rax 	      8948	option.c	FUNCTION_51	ELSE_19	IF_46
0xa265	      0xe97f030000	                           jmp 0x400a629	      8948	option.c	FUNCTION_51	ELSE_19	IF_46
0xa26a	    0x48817da80000	               cmp qword [rbp - 0x58], 0	      8953	option.c	FUNCTION_51	ELSE_20	IF_48
0xa272	            0x7551	                           jne 0x400a305	      8953	option.c	FUNCTION_51	ELSE_20	IF_48
0xa274	    0x488b05000000	            mov rax, qword [0x0400a2bb] 	      8955	option.c	FUNCTION_51	ELSE_20	IF_48	IF_49
0xa27b	          0x4885c0	                           test rax, rax	      8955	option.c	FUNCTION_51	ELSE_20	IF_48	IF_49
0xa27e	            0x7916	                           jns 0x400a2d6	      8955	option.c	FUNCTION_51	ELSE_20	IF_48	IF_49
0xa280	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      8957	option.c	FUNCTION_51	ELSE_20	IF_48	IF_49
0xa28b	    0x48c705000000	           mov qword [0x0400a2d6], 0x55 	      8958	option.c	FUNCTION_51	ELSE_20	IF_48	IF_49
0xa296	    0x8b0500000000	            mov eax, dword [0x0400a2dc] 	      8960	option.c	FUNCTION_51	ELSE_20	IF_48	IF_50
0xa29c	          0x83f802	                              cmp eax, 2	      8960	option.c	FUNCTION_51	ELSE_20	IF_48	IF_50
0xa29f	     0xf8444030000	                            je 0x400a629	      8960	option.c	FUNCTION_51	ELSE_20	IF_48	IF_50
0xa2a5	    0x488b05000000	            mov rax, qword [0x0400a2ec] 	      8960	option.c	FUNCTION_51	ELSE_20	IF_48	IF_50
0xa2ac	        0x48394590	            cmp qword [rbp - 0x70], rax 	      8960	option.c	FUNCTION_51	ELSE_20	IF_48	IF_50
0xa2b0	     0xf8433030000	                            je 0x400a629	      8960	option.c	FUNCTION_51	ELSE_20	IF_48	IF_50
0xa2b6	    0xc70500000000	               mov dword [0x0400a300], 1	      8961	option.c	FUNCTION_51	ELSE_20	IF_48	IF_50
0xa2c0	      0xe924030000	                           jmp 0x400a629	      8961	option.c	FUNCTION_51	ELSE_20	IF_48	IF_50
0xa2c5	    0x48817da80000	               cmp qword [rbp - 0x58], 0	      8966	option.c	FUNCTION_51	ELSE_21	IF_51
0xa2cd	     0xf858e000000	                           jne 0x400a3a1	      8966	option.c	FUNCTION_51	ELSE_21	IF_51
0xa2d3	    0x488b05000000	            mov rax, qword [0x0400a31a] 	      8968	option.c	FUNCTION_51	ELSE_21	IF_51	IF_52
0xa2da	          0x4885c0	                           test rax, rax	      8968	option.c	FUNCTION_51	ELSE_21	IF_51	IF_52
0xa2dd	            0x7f16	                            jg 0x400a335	      8968	option.c	FUNCTION_51	ELSE_21	IF_51	IF_52
0xa2df	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      8970	option.c	FUNCTION_51	ELSE_21	IF_51	IF_52
0xa2ea	    0x48c705000000	               mov qword [0x0400a335], 1	      8971	option.c	FUNCTION_51	ELSE_21	IF_51	IF_52
0xa2f5	    0x488b1d000000	            mov rbx, qword [0x0400a33c] 	      8973	option.c	FUNCTION_51	ELSE_21	IF_51	IF_53	CALL_22
0xa2fc	      0xe800000000	                          call 0x400a341	      8973	option.c	FUNCTION_51	ELSE_21	IF_51	IF_53	CALL_22
0xa301	            0x4898	                                    cdqe	      8973	option.c	FUNCTION_51	ELSE_21	IF_51	IF_53	CALL_22
0xa303	          0x4829c3	                            sub rbx, rax	      8973	option.c	FUNCTION_51	ELSE_21	IF_51	IF_53	CALL_22
0xa306	          0x4889d8	                            mov rax, rbx	      8973	option.c	FUNCTION_51	ELSE_21	IF_51	IF_53	CALL_22
0xa309	        0x488d5001	                      lea rdx, [rax + 1]	      8973	option.c	FUNCTION_51	ELSE_21	IF_51	IF_53	CALL_22
0xa30d	    0x488b05000000	            mov rax, qword [0x0400a354] 	      8973	option.c	FUNCTION_51	ELSE_21	IF_51	IF_53	CALL_22
0xa314	          0x4839c2	                            cmp rdx, rax	      8973	option.c	FUNCTION_51	ELSE_21	IF_51	IF_53	CALL_22
0xa317	            0x7d1f	                           jge 0x400a378	      8973	option.c	FUNCTION_51	ELSE_21	IF_51	IF_53	CALL_22
0xa319	    0x488b1d000000	            mov rbx, qword [0x0400a360] 	      8974	option.c	FUNCTION_51	ELSE_21	IF_51	CALL_23
0xa320	      0xe800000000	                          call 0x400a365	      8974	option.c	FUNCTION_51	ELSE_21	IF_51	CALL_23
0xa325	            0x4898	                                    cdqe	      8974	option.c	FUNCTION_51	ELSE_21	IF_51	CALL_23
0xa327	          0x4829c3	                            sub rbx, rax	      8974	option.c	FUNCTION_51	ELSE_21	IF_51	CALL_23
0xa32a	          0x4889d8	                            mov rax, rbx	      8974	option.c	FUNCTION_51	ELSE_21	IF_51	CALL_23
0xa32d	        0x4883c001	                              add rax, 1	      8974	option.c	FUNCTION_51	ELSE_21	IF_51	CALL_23
0xa331	    0x488905000000	            mov qword [0x0400a378], rax 	      8974	option.c	FUNCTION_51	ELSE_21	IF_51	CALL_23
0xa338	    0x488b05000000	            mov rax, qword [0x0400a37f] 	      8978	option.c	FUNCTION_51	ELSE_21	IF_51	IF_54
0xa33f	        0x483b4590	             cmp rax, qword [rbp - 0x70]	      8978	option.c	FUNCTION_51	ELSE_21	IF_51	IF_54
0xa343	     0xf84a0020000	                            je 0x400a629	      8978	option.c	FUNCTION_51	ELSE_21	IF_51	IF_54
0xa349	    0x8b0500000000	            mov eax, dword [0x0400a38f] 	      8978	option.c	FUNCTION_51	ELSE_21	IF_51	IF_54
0xa34f	            0x85c0	                           test eax, eax	      8978	option.c	FUNCTION_51	ELSE_21	IF_51	IF_54
0xa351	     0xf8492020000	                            je 0x400a629	      8978	option.c	FUNCTION_51	ELSE_21	IF_51	IF_54
0xa357	      0xe800000000	                          call 0x400a39c	      8983	option.c	FUNCTION_51	ELSE_21	IF_51	CALL_24
0xa35c	      0xe988020000	                           jmp 0x400a629	      8983	option.c	FUNCTION_51	ELSE_21	IF_51	CALL_24
0xa361	    0x48817da80000	               cmp qword [rbp - 0x58], 0	      8987	option.c	FUNCTION_51	ELSE_22	IF_55
0xa369	            0x7547	                           jne 0x400a3f2	      8987	option.c	FUNCTION_51	ELSE_22	IF_55
0xa36b	    0x488b05000000	            mov rax, qword [0x0400a3b2] 	      8989	option.c	FUNCTION_51	ELSE_22	IF_55	IF_56
0xa372	          0x4885c0	                           test rax, rax	      8989	option.c	FUNCTION_51	ELSE_22	IF_55	IF_56
0xa375	            0x7916	                           jns 0x400a3cd	      8989	option.c	FUNCTION_51	ELSE_22	IF_55	IF_56
0xa377	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      8991	option.c	FUNCTION_51	ELSE_22	IF_55	IF_56
0xa382	    0x48c705000000	           mov qword [0x0400a3cd], 0x64 	      8992	option.c	FUNCTION_51	ELSE_22	IF_55	IF_56
0xa38d	    0x488b05000000	            mov rax, qword [0x0400a3d4] 	      8994	option.c	FUNCTION_51	ELSE_22	IF_55	IF_57
0xa394	          0x4885c0	                           test rax, rax	      8994	option.c	FUNCTION_51	ELSE_22	IF_55	IF_57
0xa397	     0xf844c020000	                            je 0x400a629	      8994	option.c	FUNCTION_51	ELSE_22	IF_55	IF_57
0xa39d	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      8994	option.c	FUNCTION_51	ELSE_22	IF_55	IF_57
0xa3a2	     0xf8541020000	                           jne 0x400a629	      8994	option.c	FUNCTION_51	ELSE_22	IF_55	IF_57
0xa3a8	      0xe800000000	                          call 0x400a3ed	      8995	option.c	FUNCTION_51	ELSE_22	IF_55	CALL_25
0xa3ad	      0xe937020000	                           jmp 0x400a629	      8995	option.c	FUNCTION_51	ELSE_22	IF_55	CALL_25
0xa3b2	    0x488b05000000	            mov rax, qword [0x0400a3f9] 	      8998	option.c	FUNCTION_51	ELSE_23	IF_58
0xa3b9	    0x4805a8020000	                          add rax, 0x2a8	      8998	option.c	FUNCTION_51	ELSE_23	IF_58
0xa3bf	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      8998	option.c	FUNCTION_51	ELSE_23	IF_58
0xa3c3	            0x756f	                           jne 0x400a474	      8998	option.c	FUNCTION_51	ELSE_23	IF_58
0xa3c5	    0x488b05000000	            mov rax, qword [0x0400a40c] 	      9000	option.c	FUNCTION_51	ELSE_23	IF_58	IF_59
0xa3cc	    0x488b80a80200	           mov rax, qword [rax + 0x2a8] 	      9000	option.c	FUNCTION_51	ELSE_23	IF_58	IF_59
0xa3d3	          0x4885c0	                           test rax, rax	      9000	option.c	FUNCTION_51	ELSE_23	IF_58	IF_59
0xa3d6	            0x7922	                           jns 0x400a43a	      9000	option.c	FUNCTION_51	ELSE_23	IF_58	IF_59
0xa3d8	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      9002	option.c	FUNCTION_51	ELSE_23	IF_58	IF_59
0xa3e3	    0x488b05000000	            mov rax, qword [0x0400a42a] 	      9003	option.c	FUNCTION_51	ELSE_23	IF_58	IF_59
0xa3ea	    0x48c780a80200	              mov qword [rax + 0x2a8], 0	      9003	option.c	FUNCTION_51	ELSE_23	IF_58	IF_59
0xa3f5	      0xe9ef010000	                           jmp 0x400a629	      9003	option.c	FUNCTION_51	ELSE_23	IF_58	IF_59
0xa3fa	    0x488b05000000	            mov rax, qword [0x0400a441] 	      9005	option.c	FUNCTION_51	ELSE_23	IF_58	ELSE_24	IF_60
0xa401	    0x488b80a80200	           mov rax, qword [rax + 0x2a8] 	      9005	option.c	FUNCTION_51	ELSE_23	IF_58	ELSE_24	IF_60
0xa408	        0x4883f803	                              cmp rax, 3	      9005	option.c	FUNCTION_51	ELSE_23	IF_58	ELSE_24	IF_60
0xa40c	     0xf8ed7010000	                           jle 0x400a629	      9005	option.c	FUNCTION_51	ELSE_23	IF_58	ELSE_24	IF_60
0xa412	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      9007	option.c	FUNCTION_51	ELSE_23	IF_58	ELSE_24	IF_60
0xa41d	    0x488b05000000	            mov rax, qword [0x0400a464] 	      9008	option.c	FUNCTION_51	ELSE_23	IF_58	ELSE_24	IF_60
0xa424	    0x48c780a80200	              mov qword [rax + 0x2a8], 3	      9008	option.c	FUNCTION_51	ELSE_23	IF_58	ELSE_24	IF_60
0xa42f	      0xe9b5010000	                           jmp 0x400a629	      9008	option.c	FUNCTION_51	ELSE_23	IF_58	ELSE_24	IF_60
0xa434	    0x48817da80000	               cmp qword [rbp - 0x58], 0	      9027	option.c	FUNCTION_51	ELSE_27	IF_64
0xa43c	            0x7528	                           jne 0x400a4a6	      9027	option.c	FUNCTION_51	ELSE_27	IF_64
0xa43e	        0x488b4590	             mov rax, qword [rbp - 0x70]	      9030	option.c	FUNCTION_51	ELSE_27	IF_64
0xa442	    0x488905000000	            mov qword [0x0400a489], rax 	      9030	option.c	FUNCTION_51	ELSE_27	IF_64
0xa449	      0xbf01000000	                              mov edi, 1	      9031	option.c	FUNCTION_51	ELSE_27	IF_64	CALL_27
0xa44e	      0xe800000000	                          call 0x400a493	      9031	option.c	FUNCTION_51	ELSE_27	IF_64	CALL_27
0xa453	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      9032	option.c	FUNCTION_51	ELSE_27	IF_64
0xa45a	    0x488905000000	            mov qword [0x0400a4a1], rax 	      9032	option.c	FUNCTION_51	ELSE_27	IF_64
0xa461	      0xe983010000	                           jmp 0x400a629	      9032	option.c	FUNCTION_51	ELSE_27	IF_64
0xa466	    0x488b05000000	            mov rax, qword [0x0400a4ad] 	      9034	option.c	FUNCTION_51	ELSE_28	IF_65
0xa46d	    0x480530160000	                         add rax, 0x1630	      9034	option.c	FUNCTION_51	ELSE_28	IF_65
0xa473	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      9034	option.c	FUNCTION_51	ELSE_28	IF_65
0xa477	            0x7536	                           jne 0x400a4ef	      9034	option.c	FUNCTION_51	ELSE_28	IF_65
0xa479	    0x488b05000000	            mov rax, qword [0x0400a4c0] 	      9037	option.c	FUNCTION_51	ELSE_28	IF_65
0xa480	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      9037	option.c	FUNCTION_51	ELSE_28	IF_65
0xa484	    0x488990301600	          mov qword [rax + 0x1630], rdx 	      9037	option.c	FUNCTION_51	ELSE_28	IF_65
0xa48b	      0xbf01000000	                              mov edi, 1	      9038	option.c	FUNCTION_51	ELSE_28	IF_65	CALL_28
0xa490	      0xe800000000	                          call 0x400a4d5	      9038	option.c	FUNCTION_51	ELSE_28	IF_65	CALL_28
0xa495	    0x488b05000000	            mov rax, qword [0x0400a4dc] 	      9039	option.c	FUNCTION_51	ELSE_28	IF_65
0xa49c	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      9039	option.c	FUNCTION_51	ELSE_28	IF_65
0xa4a3	    0x488990301600	          mov qword [rax + 0x1630], rdx 	      9039	option.c	FUNCTION_51	ELSE_28	IF_65
0xa4aa	      0xe93a010000	                           jmp 0x400a629	      9039	option.c	FUNCTION_51	ELSE_28	IF_65
0xa4af	    0x488b05000000	            mov rax, qword [0x0400a4f6] 	      9044	option.c	FUNCTION_51	ELSE_29	IF_66
0xa4b6	    0x480540020000	                          add rax, 0x240	      9044	option.c	FUNCTION_51	ELSE_29	IF_66
0xa4bc	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      9044	option.c	FUNCTION_51	ELSE_29	IF_66
0xa4c0	            0x7578	                           jne 0x400a57a	      9044	option.c	FUNCTION_51	ELSE_29	IF_66
0xa4c2	    0x488b05000000	            mov rax, qword [0x0400a509] 	      9046	option.c	FUNCTION_51	ELSE_29	IF_66	IF_67
0xa4c9	    0x488b80400200	           mov rax, qword [rax + 0x240] 	      9046	option.c	FUNCTION_51	ELSE_29	IF_66	IF_67
0xa4d0	          0x4885c0	                           test rax, rax	      9046	option.c	FUNCTION_51	ELSE_29	IF_66	IF_67
0xa4d3	            0x7f1d	                            jg 0x400a532	      9046	option.c	FUNCTION_51	ELSE_29	IF_66	IF_67
0xa4d5	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      9048	option.c	FUNCTION_51	ELSE_29	IF_66	IF_67
0xa4e0	    0x488b05000000	            mov rax, qword [0x0400a527] 	      9049	option.c	FUNCTION_51	ELSE_29	IF_66	IF_67
0xa4e7	    0x48c780400200	              mov qword [rax + 0x240], 1	      9049	option.c	FUNCTION_51	ELSE_29	IF_66	IF_67
0xa4f2	    0x488b05000000	            mov rax, qword [0x0400a539] 	      9051	option.c	FUNCTION_51	ELSE_29	IF_66	IF_68
0xa4f9	    0x488b80400200	           mov rax, qword [rax + 0x240] 	      9051	option.c	FUNCTION_51	ELSE_29	IF_66	IF_68
0xa500	        0x4883f80a	                            cmp rax, 0xa	      9051	option.c	FUNCTION_51	ELSE_29	IF_66	IF_68
0xa504	            0x7e1d	                           jle 0x400a563	      9051	option.c	FUNCTION_51	ELSE_29	IF_66	IF_68
0xa506	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      9053	option.c	FUNCTION_51	ELSE_29	IF_66	IF_68
0xa511	    0x488b05000000	            mov rax, qword [0x0400a558] 	      9054	option.c	FUNCTION_51	ELSE_29	IF_66	IF_68
0xa518	    0x48c780400200	            mov qword [rax + 0x240], 0xa	      9054	option.c	FUNCTION_51	ELSE_29	IF_66	IF_68
0xa523	    0x488b05000000	            mov rax, qword [0x0400a56a] 	      9056	option.c	FUNCTION_51	ELSE_29	IF_66
0xa52a	    0x48c780901800	            mov qword [rax + 0x1890], 0 	      9056	option.c	FUNCTION_51	ELSE_29	IF_66
0xa535	      0xe9af000000	                           jmp 0x400a629	      9056	option.c	FUNCTION_51	ELSE_29	IF_66
0xa53a	    0x488b05000000	            mov rax, qword [0x0400a581] 	      9060	option.c	FUNCTION_51	ELSE_30	IF_69
0xa541	    0x4805a0150000	                         add rax, 0x15a0	      9060	option.c	FUNCTION_51	ELSE_30	IF_69
0xa547	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      9060	option.c	FUNCTION_51	ELSE_30	IF_69
0xa54b	     0xf8598000000	                           jne 0x400a629	      9060	option.c	FUNCTION_51	ELSE_30	IF_69
0xa551	    0x488b05000000	            mov rax, qword [0x0400a598] 	      9062	option.c	FUNCTION_51	ELSE_30	IF_69	IF_70
0xa558	    0x488b80a01500	          mov rax, qword [rax + 0x15a0] 	      9062	option.c	FUNCTION_51	ELSE_30	IF_69	IF_70
0xa55f	          0x4885c0	                           test rax, rax	      9062	option.c	FUNCTION_51	ELSE_30	IF_69	IF_70
0xa562	            0x791d	                           jns 0x400a5c1	      9062	option.c	FUNCTION_51	ELSE_30	IF_69	IF_70
0xa564	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      9064	option.c	FUNCTION_51	ELSE_30	IF_69	IF_70
0xa56f	    0x488b05000000	            mov rax, qword [0x0400a5b6] 	      9065	option.c	FUNCTION_51	ELSE_30	IF_69	IF_70
0xa576	    0x48c780a01500	            mov qword [rax + 0x15a0], 0 	      9065	option.c	FUNCTION_51	ELSE_30	IF_69	IF_70
0xa581	    0x488b05000000	            mov rax, qword [0x0400a5c8] 	      9072	option.c	FUNCTION_51	ELSE_30	IF_69	CALL_29
0xa588	        0x48894588	             mov qword [rbp - 0x78], rax	      9072	option.c	FUNCTION_51	ELSE_30	IF_69	CALL_29
0xa58c	            0xeb4e	                           jmp 0x400a61c	      9072	option.c	FUNCTION_51	ELSE_30	IF_69	CALL_29
0xa58e	    0x488b05000000	            mov rax, qword [0x0400a5d5] 	      9072	option.c	FUNCTION_51	ELSE_30	IF_69	CALL_29
0xa595	        0x48394588	            cmp qword [rbp - 0x78], rax 	      9072	option.c	FUNCTION_51	ELSE_30	IF_69	CALL_29
0xa599	            0x740a	                            je 0x400a5e5	      9072	option.c	FUNCTION_51	ELSE_30	IF_69	CALL_29
0xa59b	        0x488b4588	             mov rax, qword [rbp - 0x78]	      9072	option.c	FUNCTION_51	ELSE_30	IF_69	CALL_29
0xa59f	        0x488b4020	            mov rax, qword [rax + 0x20] 	      9072	option.c	FUNCTION_51	ELSE_30	IF_69	CALL_29
0xa5a3	            0xeb07	                           jmp 0x400a5ec	      9072	option.c	FUNCTION_51	ELSE_30	IF_69	CALL_29
0xa5a5	    0x488b05000000	            mov rax, qword [0x0400a5ec] 	      9072	option.c	FUNCTION_51	ELSE_30	IF_69	CALL_29
0xa5ac	        0x48894580	             mov qword [rbp - 0x80], rax	      9072	option.c	FUNCTION_51	ELSE_30	IF_69	CALL_29
0xa5b0	            0xeb18	                           jmp 0x400a60a	      9072	option.c	FUNCTION_51	ELSE_30	IF_69	CALL_29
0xa5b2	        0x488b4580	             mov rax, qword [rbp - 0x80]	      9073	option.c	FUNCTION_51	ELSE_30	IF_69	CALL_30
0xa5b6	          0x4889c7	                            mov rdi, rax	      9073	option.c	FUNCTION_51	ELSE_30	IF_69	CALL_30
0xa5b9	      0xe800000000	                          call 0x400a5fe	      9073	option.c	FUNCTION_51	ELSE_30	IF_69	CALL_30
0xa5be	        0x488b4580	             mov rax, qword [rbp - 0x80]	      9072	option.c	FUNCTION_51	ELSE_30	IF_69	CALL_29
0xa5c2	        0x488b4020	            mov rax, qword [rax + 0x20] 	      9072	option.c	FUNCTION_51	ELSE_30	IF_69	CALL_29
0xa5c6	        0x48894580	             mov qword [rbp - 0x80], rax	      9072	option.c	FUNCTION_51	ELSE_30	IF_69	CALL_29
0xa5ca	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      9072	option.c	FUNCTION_51	ELSE_30	IF_69	CALL_29
0xa5cf	            0x75e1	                           jne 0x400a5f2	      9072	option.c	FUNCTION_51	ELSE_30	IF_69	CALL_29
0xa5d1	        0x488b4588	             mov rax, qword [rbp - 0x78]	      9072	option.c	FUNCTION_51	ELSE_30	IF_69	CALL_29
0xa5d5	          0x488b00	                    mov rax, qword [rax]	      9072	option.c	FUNCTION_51	ELSE_30	IF_69	CALL_29
0xa5d8	        0x48894588	             mov qword [rbp - 0x78], rax	      9072	option.c	FUNCTION_51	ELSE_30	IF_69	CALL_29
0xa5dc	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      9072	option.c	FUNCTION_51	ELSE_30	IF_69	CALL_29
0xa5e1	            0x75ab	                           jne 0x400a5ce	      9072	option.c	FUNCTION_51	ELSE_30	IF_69	CALL_29
0xa5e3	            0xeb04	                           jmp 0x400a629	      9072	option.c	FUNCTION_51	ELSE_30	IF_69	CALL_29
0xa5e5	              0x90	                                     nop	      8761	option.c	FUNCTION_51	IF_3	IF_7
0xa5e6	            0xeb01	                           jmp 0x400a629	      8761	option.c	FUNCTION_51	IF_3	IF_7
0xa5e8	              0x90	                                     nop	      8890	option.c	FUNCTION_51	ELSE_12	IF_32	IF_34
0xa5e9	      0xe800000000	                          call 0x400a62e	      9081	option.c	FUNCTION_51	IF_71	CALL_31
0xa5ee	          0x4863d0	                         movsxd rdx, eax	      9081	option.c	FUNCTION_51	IF_71	CALL_31
0xa5f1	    0x488b05000000	            mov rax, qword [0x0400a638] 	      9081	option.c	FUNCTION_51	IF_71	CALL_31
0xa5f8	          0x4839c2	                            cmp rdx, rax	      9081	option.c	FUNCTION_51	IF_71	CALL_31
0xa5fb	            0x7e61	                           jle 0x400a69e	      9081	option.c	FUNCTION_51	IF_71	CALL_31
0xa5fd	    0x8b0500000000	            mov eax, dword [0x0400a643] 	      9081	option.c	FUNCTION_51	IF_71	CALL_31
0xa603	            0x85c0	                           test eax, eax	      9081	option.c	FUNCTION_51	IF_71	CALL_31
0xa605	            0x7457	                            je 0x400a69e	      9081	option.c	FUNCTION_51	IF_71	CALL_31
0xa607	    0x4883bd50ffff	               cmp qword [rbp - 0xb0], 0	      9083	option.c	FUNCTION_51	IF_71	IF_72
0xa60f	            0x743f	                            je 0x400a690	      9083	option.c	FUNCTION_51	IF_71	IF_72
0xa611	      0xe800000000	                          call 0x400a656	      9085	option.c	FUNCTION_51	IF_71	IF_72	CALL_32
0xa616	            0x89c3	                            mov ebx, eax	      9085	option.c	FUNCTION_51	IF_71	IF_72	CALL_32
0xa618	      0xbf00000000	                              mov edi, 0	      9085	option.c	FUNCTION_51	IF_71	IF_72	CALL_32
0xa61d	      0xe800000000	                          call 0x400a662	      9085	option.c	FUNCTION_51	IF_71	IF_72	CALL_32
0xa622	          0x4889c2	                            mov rdx, rax	      9085	option.c	FUNCTION_51	IF_71	IF_72	CALL_32
0xa625	    0x488bb548ffff	             mov rsi, qword [rbp - 0xb8]	      9085	option.c	FUNCTION_51	IF_71	IF_72	CALL_32
0xa62c	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      9085	option.c	FUNCTION_51	IF_71	IF_72	CALL_32
0xa633	            0x89d9	                            mov ecx, ebx	      9085	option.c	FUNCTION_51	IF_71	IF_72	CALL_32
0xa635	          0x4889c7	                            mov rdi, rax	      9085	option.c	FUNCTION_51	IF_71	IF_72	CALL_32
0xa638	      0xb800000000	                              mov eax, 0	      9085	option.c	FUNCTION_51	IF_71	IF_72	CALL_32
0xa63d	      0xe800000000	                          call 0x400a682	      9085	option.c	FUNCTION_51	IF_71	IF_72	CALL_32
0xa642	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      9087	option.c	FUNCTION_51	IF_71	IF_72
0xa649	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      9087	option.c	FUNCTION_51	IF_71	IF_72
0xa650	      0xe800000000	                          call 0x400a695	      9089	option.c	FUNCTION_51	IF_71	CALL_35
0xa655	            0x4898	                                    cdqe	      9089	option.c	FUNCTION_51	IF_71	CALL_35
0xa657	    0x488905000000	            mov qword [0x0400a69e], rax 	      9089	option.c	FUNCTION_51	IF_71	CALL_35
0xa65e	    0x488b05000000	            mov rax, qword [0x0400a6a5] 	      9091	option.c	FUNCTION_51	IF_73
0xa665	        0x4883f80b	                            cmp rax, 0xb	      9091	option.c	FUNCTION_51	IF_73
0xa669	            0x7f5a	                            jg 0x400a705	      9091	option.c	FUNCTION_51	IF_73
0xa66b	    0x8b0500000000	            mov eax, dword [0x0400a6b1] 	      9091	option.c	FUNCTION_51	IF_73
0xa671	            0x85c0	                           test eax, eax	      9091	option.c	FUNCTION_51	IF_73
0xa673	            0x7450	                            je 0x400a705	      9091	option.c	FUNCTION_51	IF_73
0xa675	    0x4883bd50ffff	               cmp qword [rbp - 0xb0], 0	      9093	option.c	FUNCTION_51	IF_73	IF_74
0xa67d	            0x743b	                            je 0x400a6fa	      9093	option.c	FUNCTION_51	IF_73	IF_74
0xa67f	      0xbf00000000	                              mov edi, 0	      9095	option.c	FUNCTION_51	IF_73	IF_74	CALL_36
0xa684	      0xe800000000	                          call 0x400a6c9	      9095	option.c	FUNCTION_51	IF_73	IF_74	CALL_36
0xa689	          0x4889c2	                            mov rdx, rax	      9095	option.c	FUNCTION_51	IF_73	IF_74	CALL_36
0xa68c	    0x488bb548ffff	             mov rsi, qword [rbp - 0xb8]	      9095	option.c	FUNCTION_51	IF_73	IF_74	CALL_36
0xa693	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      9095	option.c	FUNCTION_51	IF_73	IF_74	CALL_36
0xa69a	      0xb90c000000	                            mov ecx, 0xc	      9095	option.c	FUNCTION_51	IF_73	IF_74	CALL_36
0xa69f	          0x4889c7	                            mov rdi, rax	      9095	option.c	FUNCTION_51	IF_73	IF_74	CALL_36
0xa6a2	      0xb800000000	                              mov eax, 0	      9095	option.c	FUNCTION_51	IF_73	IF_74	CALL_36
0xa6a7	      0xe800000000	                          call 0x400a6ec	      9095	option.c	FUNCTION_51	IF_73	IF_74	CALL_36
0xa6ac	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      9097	option.c	FUNCTION_51	IF_73	IF_74
0xa6b3	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      9097	option.c	FUNCTION_51	IF_73	IF_74
0xa6ba	    0x48c705000000	            mov qword [0x0400a705], 0xc 	      9099	option.c	FUNCTION_51	IF_73
0xa6c5	      0xe800000000	                          call 0x400a70a	      9101	option.c	FUNCTION_51	CALL_38
0xa6ca	    0x488b05000000	            mov rax, qword [0x0400a711] 	      9107	option.c	FUNCTION_51	IF_75
0xa6d1	        0x48394598	            cmp qword [rbp - 0x68], rax 	      9107	option.c	FUNCTION_51	IF_75
0xa6d5	            0x7511	                           jne 0x400a728	      9107	option.c	FUNCTION_51	IF_75
0xa6d7	    0x488b05000000	            mov rax, qword [0x0400a71e] 	      9107	option.c	FUNCTION_51	IF_75
0xa6de	        0x483945a0	            cmp qword [rbp - 0x60], rax 	      9107	option.c	FUNCTION_51	IF_75
0xa6e2	     0xf84c7000000	                            je 0x400a7ef	      9107	option.c	FUNCTION_51	IF_75
0xa6e8	    0x8b0500000000	            mov eax, dword [0x0400a72e] 	      9110	option.c	FUNCTION_51	IF_75	IF_76
0xa6ee	            0x85c0	                           test eax, eax	      9110	option.c	FUNCTION_51	IF_75	IF_76
0xa6f0	            0x740d	                            je 0x400a73f	      9110	option.c	FUNCTION_51	IF_75	IF_76
0xa6f2	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9111	option.c	FUNCTION_51	IF_75	IF_76
0xa6f6	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      9111	option.c	FUNCTION_51	IF_75	IF_76
0xa6fa	          0x488910	                    mov qword [rax], rdx	      9111	option.c	FUNCTION_51	IF_75	IF_76
0xa6fd	            0xeb7d	                           jmp 0x400a7bc	      9111	option.c	FUNCTION_51	IF_75	IF_76
0xa6ff	    0x8b0500000000	            mov eax, dword [0x0400a745] 	      9112	option.c	FUNCTION_51	IF_75	ELSE_31	IF_77
0xa705	            0x85c0	                           test eax, eax	      9112	option.c	FUNCTION_51	IF_75	ELSE_31	IF_77
0xa707	            0x7420	                            je 0x400a769	      9112	option.c	FUNCTION_51	IF_75	ELSE_31	IF_77
0xa709	    0x488b05000000	            mov rax, qword [0x0400a750] 	      9117	option.c	FUNCTION_51	IF_75	ELSE_31	IF_77
0xa710	            0x89c1	                            mov ecx, eax	      9117	option.c	FUNCTION_51	IF_75	ELSE_31	IF_77
0xa712	    0x488b05000000	            mov rax, qword [0x0400a759] 	      9117	option.c	FUNCTION_51	IF_75	ELSE_31	IF_77
0xa719	      0xba01000000	                              mov edx, 1	      9117	option.c	FUNCTION_51	IF_75	ELSE_31	IF_77
0xa71e	            0x89ce	                            mov esi, ecx	      9117	option.c	FUNCTION_51	IF_75	ELSE_31	IF_77
0xa720	            0x89c7	                            mov edi, eax	      9117	option.c	FUNCTION_51	IF_75	ELSE_31	IF_77
0xa722	      0xe800000000	                          call 0x400a767	      9117	option.c	FUNCTION_51	IF_75	ELSE_31	IF_77
0xa727	            0xeb53	                           jmp 0x400a7bc	      9117	option.c	FUNCTION_51	IF_75	ELSE_31	IF_77
0xa729	      0xe800000000	                          call 0x400a76e	      9122	option.c	FUNCTION_51	IF_75	ELSE_32	CALL_40
0xa72e	    0x8b0500000000	            mov eax, dword [0x0400a774] 	      9123	option.c	FUNCTION_51	IF_75	ELSE_32	IF_78
0xa734	            0x4898	                                    cdqe	      9123	option.c	FUNCTION_51	IF_75	ELSE_32	IF_78
0xa736	    0x488b0d000000	            mov rcx, qword [0x0400a77d] 	      9123	option.c	FUNCTION_51	IF_75	ELSE_32	IF_78
0xa73d	    0x488b15000000	            mov rdx, qword [0x0400a784] 	      9123	option.c	FUNCTION_51	IF_75	ELSE_32	IF_78
0xa744	          0x4829d1	                            sub rcx, rdx	      9123	option.c	FUNCTION_51	IF_75	ELSE_32	IF_78
0xa747	          0x4889ca	                            mov rdx, rcx	      9123	option.c	FUNCTION_51	IF_75	ELSE_32	IF_78
0xa74a	          0x4839d0	                            cmp rax, rdx	      9123	option.c	FUNCTION_51	IF_75	ELSE_32	IF_78
0xa74d	            0x7e2d	                           jle 0x400a7bc	      9123	option.c	FUNCTION_51	IF_75	ELSE_32	IF_78
0xa74f	    0x488b15000000	            mov rdx, qword [0x0400a796] 	      9123	option.c	FUNCTION_51	IF_75	ELSE_32	IF_78
0xa756	    0x488b05000000	            mov rax, qword [0x0400a79d] 	      9123	option.c	FUNCTION_51	IF_75	ELSE_32	IF_78
0xa75d	          0x4839c2	                            cmp rdx, rax	      9123	option.c	FUNCTION_51	IF_75	ELSE_32	IF_78
0xa760	            0x7e1a	                           jle 0x400a7bc	      9123	option.c	FUNCTION_51	IF_75	ELSE_32	IF_78
0xa762	    0x488b05000000	            mov rax, qword [0x0400a7a9] 	      9124	option.c	FUNCTION_51	IF_75	ELSE_32	IF_78
0xa769	            0x89c2	                            mov edx, eax	      9124	option.c	FUNCTION_51	IF_75	ELSE_32	IF_78
0xa76b	    0x488b05000000	            mov rax, qword [0x0400a7b2] 	      9124	option.c	FUNCTION_51	IF_75	ELSE_32	IF_78
0xa772	            0x29c2	                            sub edx, eax	      9124	option.c	FUNCTION_51	IF_75	ELSE_32	IF_78
0xa774	            0x89d0	                            mov eax, edx	      9124	option.c	FUNCTION_51	IF_75	ELSE_32	IF_78
0xa776	    0x890500000000	            mov dword [0x0400a7bc], eax 	      9124	option.c	FUNCTION_51	IF_75	ELSE_32	IF_78
0xa77c	    0x488b15000000	            mov rdx, qword [0x0400a7c3] 	      9126	option.c	FUNCTION_51	IF_75	IF_79	CALL_41
0xa783	    0x488b05000000	            mov rax, qword [0x0400a7ca] 	      9126	option.c	FUNCTION_51	IF_75	IF_79	CALL_41
0xa78a	          0x4839c2	                            cmp rdx, rax	      9126	option.c	FUNCTION_51	IF_75	IF_79	CALL_41
0xa78d	            0x7d0e	                           jge 0x400a7dd	      9126	option.c	FUNCTION_51	IF_75	IF_79	CALL_41
0xa78f	      0xbf00000000	                              mov edi, 0	      9126	option.c	FUNCTION_51	IF_75	IF_79	CALL_41
0xa794	      0xe800000000	                          call 0x400a7d9	      9126	option.c	FUNCTION_51	IF_75	IF_79	CALL_41
0xa799	            0x85c0	                           test eax, eax	      9126	option.c	FUNCTION_51	IF_75	IF_79	CALL_41
0xa79b	            0x7512	                           jne 0x400a7ef	      9126	option.c	FUNCTION_51	IF_75	IF_79	CALL_41
0xa79d	    0x488b05000000	            mov rax, qword [0x0400a7e4] 	      9127	option.c	FUNCTION_51	IF_75	IF_79
0xa7a4	        0x4883e801	                              sub rax, 1	      9127	option.c	FUNCTION_51	IF_75	IF_79
0xa7a8	    0x488905000000	            mov qword [0x0400a7ef], rax 	      9127	option.c	FUNCTION_51	IF_75	IF_79
0xa7af	    0x488b05000000	            mov rax, qword [0x0400a7f6] 	      9130	option.c	FUNCTION_51	IF_80
0xa7b6	    0x488b80901500	          mov rax, qword [rax + 0x1590] 	      9130	option.c	FUNCTION_51	IF_80
0xa7bd	          0x4885c0	                           test rax, rax	      9130	option.c	FUNCTION_51	IF_80
0xa7c0	            0x7f1d	                            jg 0x400a81f	      9130	option.c	FUNCTION_51	IF_80
0xa7c2	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      9132	option.c	FUNCTION_51	IF_80
0xa7cd	    0x488b05000000	            mov rax, qword [0x0400a814] 	      9133	option.c	FUNCTION_51	IF_80
0xa7d4	    0x48c780901500	            mov qword [rax + 0x1590], 8 	      9133	option.c	FUNCTION_51	IF_80
0xa7df	    0x488b05000000	            mov rax, qword [0x0400a826] 	      9135	option.c	FUNCTION_51	IF_81
0xa7e6	          0x4885c0	                           test rax, rax	      9135	option.c	FUNCTION_51	IF_81
0xa7e9	            0x7916	                           jns 0x400a841	      9135	option.c	FUNCTION_51	IF_81
0xa7eb	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      9137	option.c	FUNCTION_51	IF_81
0xa7f6	    0x48c705000000	               mov qword [0x0400a841], 0	      9138	option.c	FUNCTION_51	IF_81
0xa801	    0x488b05000000	            mov rax, qword [0x0400a848] 	      9140	option.c	FUNCTION_51	IF_82
0xa808	    0x488b80600200	           mov rax, qword [rax + 0x260] 	      9140	option.c	FUNCTION_51	IF_82
0xa80f	          0x4885c0	                           test rax, rax	      9140	option.c	FUNCTION_51	IF_82
0xa812	            0x7e3b	                           jle 0x400a88f	      9140	option.c	FUNCTION_51	IF_82
0xa814	    0x488b05000000	            mov rax, qword [0x0400a85b] 	      9141	option.c	FUNCTION_51	IF_82
0xa81b	    0x488b90600200	           mov rdx, qword [rax + 0x260] 	      9141	option.c	FUNCTION_51	IF_82
0xa822	    0x488b05000000	            mov rax, qword [0x0400a869] 	      9141	option.c	FUNCTION_51	IF_82
0xa829	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      9141	option.c	FUNCTION_51	IF_82
0xa82f	            0x4898	                                    cdqe	      9141	option.c	FUNCTION_51	IF_82
0xa831	          0x4839c2	                            cmp rdx, rax	      9141	option.c	FUNCTION_51	IF_82
0xa834	     0xf8eaa000000	                           jle 0x400a924	      9141	option.c	FUNCTION_51	IF_82
0xa83a	    0x488b05000000	            mov rax, qword [0x0400a881] 	      9142	option.c	FUNCTION_51	IF_82
0xa841	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      9142	option.c	FUNCTION_51	IF_82
0xa847	            0x85c0	                           test eax, eax	      9142	option.c	FUNCTION_51	IF_82
0xa849	     0xf8e95000000	                           jle 0x400a924	      9142	option.c	FUNCTION_51	IF_82
0xa84f	    0x8b0500000000	            mov eax, dword [0x0400a895] 	      9143	option.c	FUNCTION_51	IF_82
0xa855	            0x85c0	                           test eax, eax	      9143	option.c	FUNCTION_51	IF_82
0xa857	     0xf8487000000	                            je 0x400a924	      9143	option.c	FUNCTION_51	IF_82
0xa85d	    0x488b05000000	            mov rax, qword [0x0400a8a4] 	      9145	option.c	FUNCTION_51	IF_82	IF_83
0xa864	    0x480560020000	                          add rax, 0x260	      9145	option.c	FUNCTION_51	IF_82	IF_83
0xa86a	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      9145	option.c	FUNCTION_51	IF_82	IF_83
0xa86e	            0x752f	                           jne 0x400a8df	      9145	option.c	FUNCTION_51	IF_82	IF_83
0xa870	    0x488b05000000	            mov rax, qword [0x0400a8b7] 	      9147	option.c	FUNCTION_51	IF_82	IF_83	IF_84
0xa877	    0x488b80600200	           mov rax, qword [rax + 0x260] 	      9147	option.c	FUNCTION_51	IF_82	IF_83	IF_84
0xa87e	          0x4885c0	                           test rax, rax	      9147	option.c	FUNCTION_51	IF_82	IF_83	IF_84
0xa881	            0x740b	                            je 0x400a8ce	      9147	option.c	FUNCTION_51	IF_82	IF_83	IF_84
0xa883	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      9148	option.c	FUNCTION_51	IF_82	IF_83	IF_84
0xa88e	    0x488b05000000	            mov rax, qword [0x0400a8d5] 	      9149	option.c	FUNCTION_51	IF_82	IF_83	CALL_42
0xa895	          0x4889c7	                            mov rdi, rax	      9149	option.c	FUNCTION_51	IF_82	IF_83	CALL_42
0xa898	      0xe800000000	                          call 0x400a8dd	      9149	option.c	FUNCTION_51	IF_82	IF_83	CALL_42
0xa89d	            0xeb45	                           jmp 0x400a924	      9149	option.c	FUNCTION_51	IF_82	IF_83	CALL_42
0xa89f	    0x488b05000000	            mov rax, qword [0x0400a8e6] 	      9153	option.c	FUNCTION_51	IF_82	ELSE_33	IF_85
0xa8a6	    0x488b80600200	           mov rax, qword [rax + 0x260] 	      9153	option.c	FUNCTION_51	IF_82	ELSE_33	IF_85
0xa8ad	          0x4885c0	                           test rax, rax	      9153	option.c	FUNCTION_51	IF_82	ELSE_33	IF_85
0xa8b0	            0x7f14	                            jg 0x400a906	      9153	option.c	FUNCTION_51	IF_82	ELSE_33	IF_85
0xa8b2	    0x488b05000000	            mov rax, qword [0x0400a8f9] 	      9154	option.c	FUNCTION_51	IF_82	ELSE_33	IF_85
0xa8b9	    0x48c780600200	              mov qword [rax + 0x260], 1	      9154	option.c	FUNCTION_51	IF_82	ELSE_33	IF_85
0xa8c4	            0xeb1e	                           jmp 0x400a924	      9154	option.c	FUNCTION_51	IF_82	ELSE_33	IF_85
0xa8c6	    0x488b05000000	            mov rax, qword [0x0400a90d] 	      9156	option.c	FUNCTION_51	IF_82	ELSE_34
0xa8cd	    0x488b15000000	            mov rdx, qword [0x0400a914] 	      9156	option.c	FUNCTION_51	IF_82	ELSE_34
0xa8d4	    0x8b92a0000000	            mov edx, dword [rdx + 0xa0] 	      9156	option.c	FUNCTION_51	IF_82	ELSE_34
0xa8da	          0x4863d2	                         movsxd rdx, edx	      9156	option.c	FUNCTION_51	IF_82	ELSE_34
0xa8dd	    0x488990600200	            mov qword [rax + 0x260], rdx	      9156	option.c	FUNCTION_51	IF_82	ELSE_34
0xa8e4	    0x488b05000000	            mov rax, qword [0x0400a92b] 	      9158	option.c	FUNCTION_51	ELSE_34	IF_86
0xa8eb	          0x4885c0	                           test rax, rax	      9158	option.c	FUNCTION_51	ELSE_34	IF_86
0xa8ee	            0x7918	                           jns 0x400a948	      9158	option.c	FUNCTION_51	ELSE_34	IF_86
0xa8f0	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      9160	option.c	FUNCTION_51	ELSE_34	IF_86
0xa8fb	    0x48c705000000	               mov qword [0x0400a946], 0	      9161	option.c	FUNCTION_51	ELSE_34	IF_86
0xa906	            0xeb25	                           jmp 0x400a96d	      9161	option.c	FUNCTION_51	ELSE_34	IF_86
0xa908	    0x488b05000000	            mov rax, qword [0x0400a94f] 	      9163	option.c	FUNCTION_51	ELSE_35	IF_87
0xa90f	    0x483d10270000	                         cmp rax, 0x2710	      9163	option.c	FUNCTION_51	ELSE_35	IF_87
0xa915	            0x7e16	                           jle 0x400a96d	      9163	option.c	FUNCTION_51	ELSE_35	IF_87
0xa917	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      9165	option.c	FUNCTION_51	ELSE_35	IF_87
0xa922	    0x48c705000000	         mov qword [0x0400a96d], 0x2710 	      9166	option.c	FUNCTION_51	ELSE_35	IF_87
0xa92d	    0x488b05000000	            mov rax, qword [0x0400a974] 	      9168	option.c	FUNCTION_51	IF_88
0xa934	          0x4885c0	                           test rax, rax	      9168	option.c	FUNCTION_51	IF_88
0xa937	            0x780d	                            js 0x400a986	      9168	option.c	FUNCTION_51	IF_88
0xa939	    0x488b05000000	            mov rax, qword [0x0400a980] 	      9168	option.c	FUNCTION_51	IF_88
0xa940	        0x4883f802	                              cmp rax, 2	      9168	option.c	FUNCTION_51	IF_88
0xa944	            0x7e16	                           jle 0x400a99c	      9168	option.c	FUNCTION_51	IF_88
0xa946	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      9170	option.c	FUNCTION_51	IF_88
0xa951	    0x48c705000000	               mov qword [0x0400a99c], 0	      9171	option.c	FUNCTION_51	IF_88
0xa95c	    0x488b05000000	            mov rax, qword [0x0400a9a3] 	      9173	option.c	FUNCTION_51	IF_89
0xa963	          0x4885c0	                           test rax, rax	      9173	option.c	FUNCTION_51	IF_89
0xa966	            0x7916	                           jns 0x400a9be	      9173	option.c	FUNCTION_51	IF_89
0xa968	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      9175	option.c	FUNCTION_51	IF_89
0xa973	    0x48c705000000	               mov qword [0x0400a9be], 1	      9176	option.c	FUNCTION_51	IF_89
0xa97e	    0x488b05000000	            mov rax, qword [0x0400a9c5] 	      9178	option.c	FUNCTION_51	IF_90
0xa985	        0x4883f89c	             cmp rax, 0xffffffffffffff9c	      9178	option.c	FUNCTION_51	IF_90
0xa989	            0x7c13	                            jl 0x400a9de	      9178	option.c	FUNCTION_51	IF_90
0xa98b	    0x488b15000000	            mov rdx, qword [0x0400a9d2] 	      9178	option.c	FUNCTION_51	IF_90
0xa992	    0x488b05000000	            mov rax, qword [0x0400a9d9] 	      9178	option.c	FUNCTION_51	IF_90
0xa999	          0x4839c2	                            cmp rdx, rax	      9178	option.c	FUNCTION_51	IF_90
0xa99c	            0x7c4a	                            jl 0x400aa28	      9178	option.c	FUNCTION_51	IF_90
0xa99e	    0x8b0500000000	            mov eax, dword [0x0400a9e4] 	      9178	option.c	FUNCTION_51	IF_90
0xa9a4	            0x85c0	                           test eax, eax	      9178	option.c	FUNCTION_51	IF_90
0xa9a6	            0x7440	                            je 0x400aa28	      9178	option.c	FUNCTION_51	IF_90
0xa9a8	    0x488b05000000	            mov rax, qword [0x0400a9ef] 	      9180	option.c	FUNCTION_51	IF_90	IF_91
0xa9af	        0x483b4598	             cmp rax, qword [rbp - 0x68]	      9180	option.c	FUNCTION_51	IF_90	IF_91
0xa9b3	            0x741d	                            je 0x400aa12	      9180	option.c	FUNCTION_51	IF_90	IF_91
0xa9b5	    0x488b05000000	            mov rax, qword [0x0400a9fc] 	      9181	option.c	FUNCTION_51	IF_90	IF_91
0xa9bc	          0x4889c2	                            mov rdx, rax	      9181	option.c	FUNCTION_51	IF_90	IF_91
0xa9bf	        0x48c1ea3f	                           shr rdx, 0x3f	      9181	option.c	FUNCTION_51	IF_90	IF_91
0xa9c3	          0x4801d0	                            add rax, rdx	      9181	option.c	FUNCTION_51	IF_90	IF_91
0xa9c6	          0x48d1f8	                              sar rax, 1	      9181	option.c	FUNCTION_51	IF_90	IF_91
0xa9c9	    0x488905000000	            mov qword [0x0400aa10], rax 	      9181	option.c	FUNCTION_51	IF_90	IF_91
0xa9d0	            0xeb16	                           jmp 0x400aa28	      9181	option.c	FUNCTION_51	IF_90	IF_91
0xa9d2	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      9184	option.c	FUNCTION_51	IF_90	ELSE_36
0xa9dd	    0x48c705000000	               mov qword [0x0400aa28], 1	      9185	option.c	FUNCTION_51	IF_90	ELSE_36
0xa9e8	    0x488b05000000	            mov rax, qword [0x0400aa2f] 	      9188	option.c	FUNCTION_51	IF_92
0xa9ef	          0x4885c0	                           test rax, rax	      9188	option.c	FUNCTION_51	IF_92
0xa9f2	            0x7920	                           jns 0x400aa54	      9188	option.c	FUNCTION_51	IF_92
0xa9f4	    0x8b0500000000	            mov eax, dword [0x0400aa3a] 	      9188	option.c	FUNCTION_51	IF_92
0xa9fa	            0x85c0	                           test eax, eax	      9188	option.c	FUNCTION_51	IF_92
0xa9fc	            0x7416	                            je 0x400aa54	      9188	option.c	FUNCTION_51	IF_92
0xa9fe	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      9190	option.c	FUNCTION_51	IF_92
0xaa09	    0x48c705000000	               mov qword [0x0400aa54], 0	      9191	option.c	FUNCTION_51	IF_92
0xaa14	    0x488b05000000	            mov rax, qword [0x0400aa5b] 	      9193	option.c	FUNCTION_51	IF_93
0xaa1b	          0x4885c0	                           test rax, rax	      9193	option.c	FUNCTION_51	IF_93
0xaa1e	            0x7920	                           jns 0x400aa80	      9193	option.c	FUNCTION_51	IF_93
0xaa20	    0x8b0500000000	            mov eax, dword [0x0400aa66] 	      9193	option.c	FUNCTION_51	IF_93
0xaa26	            0x85c0	                           test eax, eax	      9193	option.c	FUNCTION_51	IF_93
0xaa28	            0x7416	                            je 0x400aa80	      9193	option.c	FUNCTION_51	IF_93
0xaa2a	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      9195	option.c	FUNCTION_51	IF_93
0xaa35	    0x48c705000000	               mov qword [0x0400aa80], 0	      9196	option.c	FUNCTION_51	IF_93
0xaa40	    0x488b05000000	            mov rax, qword [0x0400aa87] 	      9199	option.c	FUNCTION_51	IF_94
0xaa47	          0x4885c0	                           test rax, rax	      9199	option.c	FUNCTION_51	IF_94
0xaa4a	            0x7f16	                            jg 0x400aaa2	      9199	option.c	FUNCTION_51	IF_94
0xaa4c	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      9201	option.c	FUNCTION_51	IF_94
0xaa57	    0x48c705000000	               mov qword [0x0400aaa2], 1	      9202	option.c	FUNCTION_51	IF_94
0xaa62	    0x488b05000000	            mov rax, qword [0x0400aaa9] 	      9205	option.c	FUNCTION_51	IF_95
0xaa69	          0x4885c0	                           test rax, rax	      9205	option.c	FUNCTION_51	IF_95
0xaa6c	            0x7916	                           jns 0x400aac4	      9205	option.c	FUNCTION_51	IF_95
0xaa6e	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      9207	option.c	FUNCTION_51	IF_95
0xaa79	    0x48c705000000	          mov qword [0x0400aac4], 0x7d0 	      9208	option.c	FUNCTION_51	IF_95
0xaa84	    0x488b05000000	            mov rax, qword [0x0400aacb] 	      9210	option.c	FUNCTION_51	IF_96
0xaa8b	          0x4885c0	                           test rax, rax	      9210	option.c	FUNCTION_51	IF_96
0xaa8e	            0x7916	                           jns 0x400aae6	      9210	option.c	FUNCTION_51	IF_96
0xaa90	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      9212	option.c	FUNCTION_51	IF_96
0xaa9b	    0x48c705000000	               mov qword [0x0400aae6], 0	      9213	option.c	FUNCTION_51	IF_96
0xaaa6	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      9217	option.c	FUNCTION_51	IF_97
0xaaac	          0x83e006	                              and eax, 6	      9217	option.c	FUNCTION_51	IF_97
0xaaaf	            0x85c0	                           test eax, eax	      9217	option.c	FUNCTION_51	IF_97
0xaab1	            0x752c	                           jne 0x400ab1f	      9217	option.c	FUNCTION_51	IF_97
0xaab3	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      9218	option.c	FUNCTION_51	CALL_43
0xaab9	            0x4898	                                    cdqe	      9218	option.c	FUNCTION_51	CALL_43
0xaabb	        0x48c1e006	                              shl rax, 6	      9218	option.c	FUNCTION_51	CALL_43
0xaabf	    0x480500000000	                              add rax, 0	      9218	option.c	FUNCTION_51	CALL_43
0xaac5	      0xbe02000000	                              mov esi, 2	      9218	option.c	FUNCTION_51	CALL_43
0xaaca	          0x4889c7	                            mov rdi, rax	      9218	option.c	FUNCTION_51	CALL_43
0xaacd	      0xe8371f0000	                 call sym.get_varp_scope	      9218	option.c	FUNCTION_51	CALL_43
0xaad2	          0x4889c2	                            mov rdx, rax	      9218	option.c	FUNCTION_51	CALL_43
0xaad5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      9218	option.c	FUNCTION_51	CALL_43
0xaad9	          0x488b00	                    mov rax, qword [rax]	      9218	option.c	FUNCTION_51	CALL_43
0xaadc	          0x488902	                    mov qword [rdx], rax	      9218	option.c	FUNCTION_51	CALL_43
0xaadf	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      9220	option.c	FUNCTION_51
0xaae5	            0x4898	                                    cdqe	      9220	option.c	FUNCTION_51
0xaae7	        0x48c1e006	                              shl rax, 6	      9220	option.c	FUNCTION_51
0xaaeb	    0x480500000000	                              add rax, 0	      9220	option.c	FUNCTION_51
0xaaf1	          0x488b00	                    mov rax, qword [rax]	      9220	option.c	FUNCTION_51
0xaaf4	          0x80cc01	                                or ah, 1	      9220	option.c	FUNCTION_51
0xaaf7	          0x4889c2	                            mov rdx, rax	      9220	option.c	FUNCTION_51
0xaafa	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      9220	option.c	FUNCTION_51
0xab00	            0x4898	                                    cdqe	      9220	option.c	FUNCTION_51
0xab02	        0x48c1e006	                              shl rax, 6	      9220	option.c	FUNCTION_51
0xab06	    0x480500000000	                              add rax, 0	      9220	option.c	FUNCTION_51
0xab0c	          0x488910	                    mov qword [rax], rdx	      9220	option.c	FUNCTION_51
0xab0f	    0x8b0500000000	            mov eax, dword [0x0400ab55] 	      9223	option.c	FUNCTION_51	IF_98
0xab15	            0x85c0	                           test eax, eax	      9223	option.c	FUNCTION_51	IF_98
0xab17	     0xf8505010000	                           jne 0x400ac62	      9223	option.c	FUNCTION_51	IF_98
0xab1d	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      9223	option.c	FUNCTION_51	IF_98
0xab25	     0xf85f7000000	                           jne 0x400ac62	      9223	option.c	FUNCTION_51	IF_98
0xab2b	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      9226	option.c	FUNCTION_51	IF_98	CALL_44
0xab2f	        0x488d45c0	                   lea rax, [rbp - 0x40]	      9226	option.c	FUNCTION_51	IF_98	CALL_44
0xab33	          0x4889d1	                            mov rcx, rdx	      9226	option.c	FUNCTION_51	IF_98	CALL_44
0xab36	      0xba00000000	                              mov edx, 0	      9226	option.c	FUNCTION_51	IF_98	CALL_44
0xab3b	      0xbe0a000000	                            mov esi, 0xa	      9226	option.c	FUNCTION_51	IF_98	CALL_44
0xab40	          0x4889c7	                            mov rdi, rax	      9226	option.c	FUNCTION_51	IF_98	CALL_44
0xab43	      0xb800000000	                              mov eax, 0	      9226	option.c	FUNCTION_51	IF_98	CALL_44
0xab48	      0xe800000000	                          call 0x400ab8d	      9226	option.c	FUNCTION_51	IF_98	CALL_44
0xab4d	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      9227	option.c	FUNCTION_51	IF_98	CALL_45
0xab54	        0x488d45d0	                   lea rax, [rbp - 0x30]	      9227	option.c	FUNCTION_51	IF_98	CALL_45
0xab58	          0x4889d1	                            mov rcx, rdx	      9227	option.c	FUNCTION_51	IF_98	CALL_45
0xab5b	      0xba00000000	                              mov edx, 0	      9227	option.c	FUNCTION_51	IF_98	CALL_45
0xab60	      0xbe0a000000	                            mov esi, 0xa	      9227	option.c	FUNCTION_51	IF_98	CALL_45
0xab65	          0x4889c7	                            mov rdi, rax	      9227	option.c	FUNCTION_51	IF_98	CALL_45
0xab68	      0xb800000000	                              mov eax, 0	      9227	option.c	FUNCTION_51	IF_98	CALL_45
0xab6d	      0xe800000000	                          call 0x400abb2	      9227	option.c	FUNCTION_51	IF_98	CALL_45
0xab72	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      9228	option.c	FUNCTION_51	IF_98	CALL_46
0xab78	          0x83e004	                              and eax, 4	      9228	option.c	FUNCTION_51	IF_98	CALL_46
0xab7b	            0x85c0	                           test eax, eax	      9228	option.c	FUNCTION_51	IF_98	CALL_46
0xab7d	            0x7407	                            je 0x400abc6	      9228	option.c	FUNCTION_51	IF_98	CALL_46
0xab7f	      0xba00000000	                              mov edx, 0	      9228	option.c	FUNCTION_51	IF_98	CALL_46
0xab84	            0xeb05	                           jmp 0x400abcb	      9228	option.c	FUNCTION_51	IF_98	CALL_46
0xab86	      0xba00000000	                              mov edx, 0	      9228	option.c	FUNCTION_51	IF_98	CALL_46
0xab8b	        0x488d45b0	                   lea rax, [rbp - 0x50]	      9228	option.c	FUNCTION_51	IF_98	CALL_46
0xab8f	          0x4889d1	                            mov rcx, rdx	      9228	option.c	FUNCTION_51	IF_98	CALL_46
0xab92	      0xba00000000	                              mov edx, 0	      9228	option.c	FUNCTION_51	IF_98	CALL_46
0xab97	      0xbe07000000	                              mov esi, 7	      9228	option.c	FUNCTION_51	IF_98	CALL_46
0xab9c	          0x4889c7	                            mov rdi, rax	      9228	option.c	FUNCTION_51	IF_98	CALL_46
0xab9f	      0xb800000000	                              mov eax, 0	      9228	option.c	FUNCTION_51	IF_98	CALL_46
0xaba4	      0xe800000000	                          call 0x400abe9	      9228	option.c	FUNCTION_51	IF_98	CALL_46
0xaba9	        0x488d45d0	                   lea rax, [rbp - 0x30]	      9229	option.c	FUNCTION_51	IF_98	CALL_47
0xabad	      0xbaffffffff	                     mov edx, 0xffffffff	      9229	option.c	FUNCTION_51	IF_98	CALL_47
0xabb2	          0x4889c6	                            mov rsi, rax	      9229	option.c	FUNCTION_51	IF_98	CALL_47
0xabb5	      0xbf3d000000	                           mov edi, 0x3d	      9229	option.c	FUNCTION_51	IF_98	CALL_47
0xabba	      0xe800000000	                          call 0x400abff	      9229	option.c	FUNCTION_51	IF_98	CALL_47
0xabbf	        0x488d45c0	                   lea rax, [rbp - 0x40]	      9230	option.c	FUNCTION_51	IF_98	CALL_48
0xabc3	      0xbaffffffff	                     mov edx, 0xffffffff	      9230	option.c	FUNCTION_51	IF_98	CALL_48
0xabc8	          0x4889c6	                            mov rsi, rax	      9230	option.c	FUNCTION_51	IF_98	CALL_48
0xabcb	      0xbf3e000000	                           mov edi, 0x3e	      9230	option.c	FUNCTION_51	IF_98	CALL_48
0xabd0	      0xe800000000	                          call 0x400ac15	      9230	option.c	FUNCTION_51	IF_98	CALL_48
0xabd5	        0x488d45b0	                   lea rax, [rbp - 0x50]	      9231	option.c	FUNCTION_51	IF_98	CALL_49
0xabd9	      0xbaffffffff	                     mov edx, 0xffffffff	      9231	option.c	FUNCTION_51	IF_98	CALL_49
0xabde	          0x4889c6	                            mov rsi, rax	      9231	option.c	FUNCTION_51	IF_98	CALL_49
0xabe1	      0xbf3f000000	                           mov edi, 0x3f	      9231	option.c	FUNCTION_51	IF_98	CALL_49
0xabe6	      0xe800000000	                          call 0x400ac2b	      9231	option.c	FUNCTION_51	IF_98	CALL_49
0xabeb	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      9232	option.c	FUNCTION_51	IF_98	CALL_50
0xabf1	            0x4898	                                    cdqe	      9232	option.c	FUNCTION_51	IF_98	CALL_50
0xabf3	        0x48c1e006	                              shl rax, 6	      9232	option.c	FUNCTION_51	IF_98	CALL_50
0xabf7	    0x480500000000	                              add rax, 0	      9232	option.c	FUNCTION_51	IF_98	CALL_50
0xabfd	          0x488b00	                    mov rax, qword [rax]	      9232	option.c	FUNCTION_51	IF_98	CALL_50
0xac00	    0x41b800000000	                              mov r8d, 0	      9232	option.c	FUNCTION_51	IF_98	CALL_50
0xac06	      0xb900000000	                              mov ecx, 0	      9232	option.c	FUNCTION_51	IF_98	CALL_50
0xac0b	      0xba00000000	                              mov edx, 0	      9232	option.c	FUNCTION_51	IF_98	CALL_50
0xac10	          0x4889c6	                            mov rsi, rax	      9232	option.c	FUNCTION_51	IF_98	CALL_50
0xac13	      0xbf58000000	                           mov edi, 0x58	      9232	option.c	FUNCTION_51	IF_98	CALL_50
0xac18	      0xe800000000	                          call 0x400ac5d	      9232	option.c	FUNCTION_51	IF_98	CALL_50
0xac1d	      0xe800000000	                          call 0x400ac62	      9233	option.c	FUNCTION_51	IF_98	CALL_51
0xac22	      0xe800000000	                          call 0x400ac67	      9237	option.c	FUNCTION_51	CALL_52
0xac27	    0x488b05000000	            mov rax, qword [0x0400ac6e] 	      9238	option.c	FUNCTION_51	IF_99
0xac2e	          0x8b4048	            mov eax, dword [rax + 0x48] 	      9238	option.c	FUNCTION_51	IF_99
0xac31	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      9238	option.c	FUNCTION_51	IF_99
0xac36	            0x742d	                            je 0x400aca5	      9238	option.c	FUNCTION_51	IF_99
0xac38	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      9239	option.c	FUNCTION_51	IF_99
0xac3e	            0x4898	                                    cdqe	      9239	option.c	FUNCTION_51	IF_99
0xac40	        0x48c1e006	                              shl rax, 6	      9239	option.c	FUNCTION_51	IF_99
0xac44	    0x480500000000	                              add rax, 0	      9239	option.c	FUNCTION_51	IF_99
0xac4a	          0x488b00	                    mov rax, qword [rax]	      9239	option.c	FUNCTION_51	IF_99
0xac4d	      0x2500600004	                      and eax, 0x4006000	      9239	option.c	FUNCTION_51	IF_99
0xac52	          0x4885c0	                           test rax, rax	      9239	option.c	FUNCTION_51	IF_99
0xac55	            0x740e	                            je 0x400aca5	      9239	option.c	FUNCTION_51	IF_99
0xac57	    0x488b05000000	            mov rax, qword [0x0400ac9e] 	      9240	option.c	FUNCTION_51	IF_99
0xac5e	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      9240	option.c	FUNCTION_51	IF_99
0xac65	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      9241	option.c	FUNCTION_51	CALL_53
0xac6b	            0x4898	                                    cdqe	      9241	option.c	FUNCTION_51	CALL_53
0xac6d	        0x48c1e006	                              shl rax, 6	      9241	option.c	FUNCTION_51	CALL_53
0xac71	    0x480500000000	                              add rax, 0	      9241	option.c	FUNCTION_51	CALL_53
0xac77	          0x488b00	                    mov rax, qword [rax]	      9241	option.c	FUNCTION_51	CALL_53
0xac7a	          0x4889c7	                            mov rdi, rax	      9241	option.c	FUNCTION_51	CALL_53
0xac7d	      0xe825000000	                   call sym.check_redraw	      9241	option.c	FUNCTION_51	CALL_53
0xac82	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      9243	option.c	FUNCTION_51
0xac89	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      9244	option.c	FUNCTION_51
0xac8d	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      9244	option.c	FUNCTION_51
0xac96	            0x7405	                            je 0x400acdd	      9244	option.c	FUNCTION_51
0xac98	      0xe800000000	                          call 0x400acdd	      9244	option.c	FUNCTION_51
0xac9d	    0x4881c4b80000	                           add rsp, 0xb8	      9244	option.c	FUNCTION_51
0xaca4	              0x5b	                                 pop rbx	      9244	option.c	FUNCTION_51
0xaca5	              0x5d	                                 pop rbp	      9244	option.c	FUNCTION_51
0xaca6	              0xc3	                                     ret	      9244	option.c	FUNCTION_51
optval_default	WHILE,0:SWITCH,0:CALL,1:FOR,0:ELSE,0:DO,0:IF,3:functions,0	68
0xb915	              0x55	                                push rbp	      9914	option.c	FUNCTION_63
0xb916	          0x4889e5	                            mov rbp, rsp	      9914	option.c	FUNCTION_63
0xb919	        0x4883ec20	                           sub rsp, 0x20	      9914	option.c	FUNCTION_63
0xb91d	        0x48897de8	             mov qword [rbp - 0x18], rdi	      9914	option.c	FUNCTION_63
0xb921	        0x488975e0	             mov qword [rbp - 0x20], rsi	      9914	option.c	FUNCTION_63
0xb925	      0x48837de000	               cmp qword [rbp - 0x20], 0	      9917	option.c	FUNCTION_63	IF_1
0xb92a	            0x750a	                           jne 0x400b976	      9917	option.c	FUNCTION_63	IF_1
0xb92c	      0xb801000000	                              mov eax, 1	      9918	option.c	FUNCTION_63	IF_1
0xb931	      0xe9c0000000	                           jmp 0x400ba36	      9918	option.c	FUNCTION_63	IF_1
0xb936	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9919	option.c	FUNCTION_63
0xb93a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      9919	option.c	FUNCTION_63
0xb93e	      0x2500040000	                          and eax, 0x400	      9919	option.c	FUNCTION_63
0xb943	          0x4885c0	                           test rax, rax	      9919	option.c	FUNCTION_63
0xb946	            0x7511	                           jne 0x400b999	      9919	option.c	FUNCTION_63
0xb948	    0x8b0500000000	            mov eax, dword [0x0400b98e] 	      9919	option.c	FUNCTION_63
0xb94e	            0x85c0	                           test eax, eax	      9919	option.c	FUNCTION_63
0xb950	            0x7507	                           jne 0x400b999	      9919	option.c	FUNCTION_63
0xb952	      0xb801000000	                              mov eax, 1	      9919	option.c	FUNCTION_63
0xb957	            0xeb05	                           jmp 0x400b99e	      9919	option.c	FUNCTION_63
0xb959	      0xb800000000	                              mov eax, 0	      9919	option.c	FUNCTION_63
0xb95e	          0x8945fc	                mov dword [rbp - 4], eax	      9919	option.c	FUNCTION_63
0xb961	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9920	option.c	FUNCTION_63	IF_2
0xb965	        0x488b4010	            mov rax, qword [rax + 0x10] 	      9920	option.c	FUNCTION_63	IF_2
0xb969	          0x83e002	                              and eax, 2	      9920	option.c	FUNCTION_63	IF_2
0xb96c	          0x4885c0	                           test rax, rax	      9920	option.c	FUNCTION_63	IF_2
0xb96f	            0x7425	                            je 0x400b9d6	      9920	option.c	FUNCTION_63	IF_2
0xb971	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9921	option.c	FUNCTION_63	IF_2
0xb975	          0x488b10	                    mov rdx, qword [rax]	      9921	option.c	FUNCTION_63	IF_2
0xb978	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9921	option.c	FUNCTION_63	IF_2
0xb97c	          0x8b4dfc	                mov ecx, dword [rbp - 4]	      9921	option.c	FUNCTION_63	IF_2
0xb97f	          0x4863c9	                         movsxd rcx, ecx	      9921	option.c	FUNCTION_63	IF_2
0xb982	        0x4883c104	                              add rcx, 4	      9921	option.c	FUNCTION_63	IF_2
0xb986	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      9921	option.c	FUNCTION_63	IF_2
0xb98b	          0x4839c2	                            cmp rdx, rax	      9921	option.c	FUNCTION_63	IF_2
0xb98e	           0xf94c0	                                 sete al	      9921	option.c	FUNCTION_63	IF_2
0xb991	           0xfb6c0	                           movzx eax, al	      9921	option.c	FUNCTION_63	IF_2
0xb994	            0xeb60	                           jmp 0x400ba36	      9921	option.c	FUNCTION_63	IF_2
0xb996	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9922	option.c	FUNCTION_63	IF_3
0xb99a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      9922	option.c	FUNCTION_63	IF_3
0xb99e	          0x83e001	                              and eax, 1	      9922	option.c	FUNCTION_63	IF_3
0xb9a1	          0x4885c0	                           test rax, rax	      9922	option.c	FUNCTION_63	IF_3
0xb9a4	            0x7423	                            je 0x400ba09	      9922	option.c	FUNCTION_63	IF_3
0xb9a6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9925	option.c	FUNCTION_63	IF_3
0xb9aa	            0x8b10	                    mov edx, dword [rax]	      9925	option.c	FUNCTION_63	IF_3
0xb9ac	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9925	option.c	FUNCTION_63	IF_3
0xb9b0	          0x8b4dfc	                mov ecx, dword [rbp - 4]	      9925	option.c	FUNCTION_63	IF_3
0xb9b3	          0x4863c9	                         movsxd rcx, ecx	      9925	option.c	FUNCTION_63	IF_3
0xb9b6	        0x4883c104	                              add rcx, 4	      9925	option.c	FUNCTION_63	IF_3
0xb9ba	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      9925	option.c	FUNCTION_63	IF_3
0xb9bf	            0x39c2	                            cmp edx, eax	      9925	option.c	FUNCTION_63	IF_3
0xb9c1	           0xf94c0	                                 sete al	      9925	option.c	FUNCTION_63	IF_3
0xb9c4	           0xfb6c0	                           movzx eax, al	      9925	option.c	FUNCTION_63	IF_3
0xb9c7	            0xeb2d	                           jmp 0x400ba36	      9925	option.c	FUNCTION_63	IF_3
0xb9c9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9927	option.c	FUNCTION_63	CALL_1
0xb9cd	          0x8b55fc	                mov edx, dword [rbp - 4]	      9927	option.c	FUNCTION_63	CALL_1
0xb9d0	          0x4863d2	                         movsxd rdx, edx	      9927	option.c	FUNCTION_63	CALL_1
0xb9d3	        0x4883c204	                              add rdx, 4	      9927	option.c	FUNCTION_63	CALL_1
0xb9d7	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      9927	option.c	FUNCTION_63	CALL_1
0xb9dc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9927	option.c	FUNCTION_63	CALL_1
0xb9e0	          0x488b00	                    mov rax, qword [rax]	      9927	option.c	FUNCTION_63	CALL_1
0xb9e3	          0x4889d6	                            mov rsi, rdx	      9927	option.c	FUNCTION_63	CALL_1
0xb9e6	          0x4889c7	                            mov rdi, rax	      9927	option.c	FUNCTION_63	CALL_1
0xb9e9	      0xe800000000	                          call 0x400ba2e	      9927	option.c	FUNCTION_63	CALL_1
0xb9ee	            0x85c0	                           test eax, eax	      9927	option.c	FUNCTION_63	CALL_1
0xb9f0	           0xf94c0	                                 sete al	      9927	option.c	FUNCTION_63	CALL_1
0xb9f3	           0xfb6c0	                           movzx eax, al	      9927	option.c	FUNCTION_63	CALL_1
0xb9f6	              0xc9	                                   leave	      9928	option.c	FUNCTION_63
0xb9f7	              0xc3	                                     ret	      9928	option.c	FUNCTION_63
paste_option_changed	WHILE,0:SWITCH,0:CALL,2:FOR,0:ELSE,1:DO,0:IF,5:functions,3	150
0x10463	              0x55	                                push rbp	     12030	option.c	FUNCTION_100
0x10464	          0x4889e5	                            mov rbp, rsp	     12030	option.c	FUNCTION_100
0x10467	        0x4883ec10	                           sub rsp, 0x10	     12030	option.c	FUNCTION_100
0x1046b	    0x8b0500000000	            mov eax, dword [0x040104b1] 	     12043	option.c	FUNCTION_100	IF_1
0x10471	            0x85c0	                           test eax, eax	     12043	option.c	FUNCTION_100	IF_1
0x10473	     0xf84f0010000	                            je 0x40106a9	     12043	option.c	FUNCTION_100	IF_1
0x10479	    0x8b0500000000	            mov eax, dword [0x040104bf] 	     12049	option.c	FUNCTION_100	IF_1	IF_2
0x1047f	            0x85c0	                           test eax, eax	     12049	option.c	FUNCTION_100	IF_1	IF_2
0x10481	     0xf8508010000	                           jne 0x40105cf	     12049	option.c	FUNCTION_100	IF_1	IF_2
0x10487	    0x488b05000000	            mov rax, qword [0x040104ce] 	     12052	option.c	FUNCTION_100	IF_1	IF_2
0x1048e	        0x488945f8	                mov qword [rbp - 8], rax	     12052	option.c	FUNCTION_100	IF_1	IF_2
0x10492	            0xeb76	                           jmp 0x401054a	     12052	option.c	FUNCTION_100	IF_1	IF_2
0x10494	        0x488b45f8	                mov rax, qword [rbp - 8]	     12054	option.c	FUNCTION_100	IF_1	IF_2	FUNCTION_1
0x10498	    0x488b90a01500	          mov rdx, qword [rax + 0x15a0] 	     12054	option.c	FUNCTION_100	IF_1	IF_2	FUNCTION_1
0x1049f	        0x488b45f8	                mov rax, qword [rbp - 8]	     12054	option.c	FUNCTION_100	IF_1	IF_2	FUNCTION_1
0x104a3	    0x488990b01500	          mov qword [rax + 0x15b0], rdx 	     12054	option.c	FUNCTION_100	IF_1	IF_2	FUNCTION_1
0x104aa	        0x488b45f8	                mov rax, qword [rbp - 8]	     12055	option.c	FUNCTION_100	IF_1	IF_2	FUNCTION_1
0x104ae	    0x488b90b81500	          mov rdx, qword [rax + 0x15b8] 	     12055	option.c	FUNCTION_100	IF_1	IF_2	FUNCTION_1
0x104b5	        0x488b45f8	                mov rax, qword [rbp - 8]	     12055	option.c	FUNCTION_100	IF_1	IF_2	FUNCTION_1
0x104b9	    0x488990c81500	          mov qword [rax + 0x15c8], rdx 	     12055	option.c	FUNCTION_100	IF_1	IF_2	FUNCTION_1
0x104c0	        0x488b45f8	                mov rax, qword [rbp - 8]	     12056	option.c	FUNCTION_100	IF_1	IF_2	FUNCTION_1
0x104c4	    0x488b90601500	          mov rdx, qword [rax + 0x1560] 	     12056	option.c	FUNCTION_100	IF_1	IF_2	FUNCTION_1
0x104cb	        0x488b45f8	                mov rax, qword [rbp - 8]	     12056	option.c	FUNCTION_100	IF_1	IF_2	FUNCTION_1
0x104cf	    0x488990681500	          mov qword [rax + 0x1568], rdx 	     12056	option.c	FUNCTION_100	IF_1	IF_2	FUNCTION_1
0x104d6	        0x488b45f8	                mov rax, qword [rbp - 8]	     12057	option.c	FUNCTION_100	IF_1	IF_2	FUNCTION_1
0x104da	    0x8b90d8130000	          mov edx, dword [rax + 0x13d8] 	     12057	option.c	FUNCTION_100	IF_1	IF_2	FUNCTION_1
0x104e0	        0x488b45f8	                mov rax, qword [rbp - 8]	     12057	option.c	FUNCTION_100	IF_1	IF_2	FUNCTION_1
0x104e4	    0x8990dc130000	          mov dword [rax + 0x13dc], edx 	     12057	option.c	FUNCTION_100	IF_1	IF_2	FUNCTION_1
0x104ea	        0x488b45f8	                mov rax, qword [rbp - 8]	     12058	option.c	FUNCTION_100	IF_1	IF_2	FUNCTION_1
0x104ee	    0x8b9060140000	          mov edx, dword [rax + 0x1460] 	     12058	option.c	FUNCTION_100	IF_1	IF_2	FUNCTION_1
0x104f4	        0x488b45f8	                mov rax, qword [rbp - 8]	     12058	option.c	FUNCTION_100	IF_1	IF_2	FUNCTION_1
0x104f8	    0x899068140000	          mov dword [rax + 0x1468], edx 	     12058	option.c	FUNCTION_100	IF_1	IF_2	FUNCTION_1
0x104fe	        0x488b45f8	                mov rax, qword [rbp - 8]	     12052	option.c	FUNCTION_100	IF_1	IF_2
0x10502	        0x488b4068	            mov rax, qword [rax + 0x68] 	     12052	option.c	FUNCTION_100	IF_1	IF_2
0x10506	        0x488945f8	                mov qword [rbp - 8], rax	     12052	option.c	FUNCTION_100	IF_1	IF_2
0x1050a	      0x48837df800	                  cmp qword [rbp - 8], 0	     12052	option.c	FUNCTION_100	IF_1	IF_2
0x1050f	            0x7583	                           jne 0x40104d4	     12052	option.c	FUNCTION_100	IF_1	IF_2
0x10511	    0x8b0500000000	            mov eax, dword [0x04010557] 	     12062	option.c	FUNCTION_100	IF_1	IF_2
0x10517	    0x890500000000	            mov dword [0x0401055d], eax 	     12062	option.c	FUNCTION_100	IF_1	IF_2
0x1051d	    0x8b0500000000	            mov eax, dword [0x04010563] 	     12063	option.c	FUNCTION_100	IF_1	IF_2
0x10523	    0x890500000000	            mov dword [0x04010569], eax 	     12063	option.c	FUNCTION_100	IF_1	IF_2
0x10529	    0x8b0500000000	            mov eax, dword [0x0401056f] 	     12065	option.c	FUNCTION_100	IF_1	IF_2
0x1052f	    0x890500000000	            mov dword [0x04010575], eax 	     12065	option.c	FUNCTION_100	IF_1	IF_2
0x10535	    0x8b0500000000	            mov eax, dword [0x0401057b] 	     12068	option.c	FUNCTION_100	IF_1	IF_2
0x1053b	    0x890500000000	            mov dword [0x04010581], eax 	     12068	option.c	FUNCTION_100	IF_1	IF_2
0x10541	    0x8b0500000000	            mov eax, dword [0x04010587] 	     12069	option.c	FUNCTION_100	IF_1	IF_2
0x10547	    0x890500000000	            mov dword [0x0401058d], eax 	     12069	option.c	FUNCTION_100	IF_1	IF_2
0x1054d	    0x8b0500000000	            mov eax, dword [0x04010593] 	     12072	option.c	FUNCTION_100	IF_1	IF_2
0x10553	    0x890500000000	            mov dword [0x04010599], eax 	     12072	option.c	FUNCTION_100	IF_1	IF_2
0x10559	    0x8b0500000000	            mov eax, dword [0x0401059f] 	     12073	option.c	FUNCTION_100	IF_1	IF_2
0x1055f	    0x890500000000	            mov dword [0x040105a5], eax 	     12073	option.c	FUNCTION_100	IF_1	IF_2
0x10565	    0x488b05000000	            mov rax, qword [0x040105ac] 	     12074	option.c	FUNCTION_100	IF_1	IF_2
0x1056c	    0x488905000000	            mov qword [0x040105b3], rax 	     12074	option.c	FUNCTION_100	IF_1	IF_2
0x10573	    0x488b05000000	            mov rax, qword [0x040105ba] 	     12075	option.c	FUNCTION_100	IF_1	IF_2
0x1057a	    0x488905000000	            mov qword [0x040105c1], rax 	     12075	option.c	FUNCTION_100	IF_1	IF_2
0x10581	    0x488b05000000	            mov rax, qword [0x040105c8] 	     12076	option.c	FUNCTION_100	IF_1	IF_2
0x10588	    0x488905000000	            mov qword [0x040105cf], rax 	     12076	option.c	FUNCTION_100	IF_1	IF_2
0x1058f	    0x488b05000000	            mov rax, qword [0x040105d6] 	     12084	option.c	FUNCTION_100	IF_1
0x10596	        0x488945f8	                mov qword [rbp - 8], rax	     12084	option.c	FUNCTION_100	IF_1
0x1059a	            0xeb55	                           jmp 0x4010631	     12084	option.c	FUNCTION_100	IF_1
0x1059c	        0x488b45f8	                mov rax, qword [rbp - 8]	     12086	option.c	FUNCTION_100	IF_1	FUNCTION_2
0x105a0	    0x48c780a01500	            mov qword [rax + 0x15a0], 0 	     12086	option.c	FUNCTION_100	IF_1	FUNCTION_2
0x105ab	        0x488b45f8	                mov rax, qword [rbp - 8]	     12087	option.c	FUNCTION_100	IF_1	FUNCTION_2
0x105af	    0x48c780b81500	            mov qword [rax + 0x15b8], 0 	     12087	option.c	FUNCTION_100	IF_1	FUNCTION_2
0x105ba	        0x488b45f8	                mov rax, qword [rbp - 8]	     12088	option.c	FUNCTION_100	IF_1	FUNCTION_2
0x105be	    0x48c780601500	            mov qword [rax + 0x1560], 0 	     12088	option.c	FUNCTION_100	IF_1	FUNCTION_2
0x105c9	        0x488b45f8	                mov rax, qword [rbp - 8]	     12089	option.c	FUNCTION_100	IF_1	FUNCTION_2
0x105cd	    0xc780d8130000	            mov dword [rax + 0x13d8], 0 	     12089	option.c	FUNCTION_100	IF_1	FUNCTION_2
0x105d7	        0x488b45f8	                mov rax, qword [rbp - 8]	     12090	option.c	FUNCTION_100	IF_1	FUNCTION_2
0x105db	    0xc78060140000	            mov dword [rax + 0x1460], 0 	     12090	option.c	FUNCTION_100	IF_1	FUNCTION_2
0x105e5	        0x488b45f8	                mov rax, qword [rbp - 8]	     12084	option.c	FUNCTION_100	IF_1
0x105e9	        0x488b4068	            mov rax, qword [rax + 0x68] 	     12084	option.c	FUNCTION_100	IF_1
0x105ed	        0x488945f8	                mov qword [rbp - 8], rax	     12084	option.c	FUNCTION_100	IF_1
0x105f1	      0x48837df800	                  cmp qword [rbp - 8], 0	     12084	option.c	FUNCTION_100	IF_1
0x105f6	            0x75a4	                           jne 0x40105dc	     12084	option.c	FUNCTION_100	IF_1
0x105f8	    0xc70500000000	               mov dword [0x04010642], 0	     12094	option.c	FUNCTION_100	IF_1
0x10602	    0xc70500000000	               mov dword [0x0401064c], 0	     12095	option.c	FUNCTION_100	IF_1
0x1060c	    0x8b0500000000	            mov eax, dword [0x04010652] 	     12097	option.c	FUNCTION_100	IF_1	IF_3
0x10612	            0x85c0	                           test eax, eax	     12097	option.c	FUNCTION_100	IF_1	IF_3
0x10614	            0x7405	                            je 0x401065b	     12097	option.c	FUNCTION_100	IF_1	IF_3
0x10616	      0xe800000000	                          call 0x401065b	     12098	option.c	FUNCTION_100	IF_1	CALL_1
0x1061b	    0xc70500000000	               mov dword [0x04010665], 0	     12099	option.c	FUNCTION_100	IF_1
0x10625	    0xc70500000000	               mov dword [0x0401066f], 0	     12102	option.c	FUNCTION_100	IF_1
0x1062f	    0xc70500000000	               mov dword [0x04010679], 0	     12103	option.c	FUNCTION_100	IF_1
0x10639	    0x48c705000000	               mov qword [0x04010684], 0	     12106	option.c	FUNCTION_100	IF_1
0x10644	    0x48c705000000	               mov qword [0x0401068f], 0	     12107	option.c	FUNCTION_100	IF_1
0x1064f	    0x48c705000000	               mov qword [0x0401069a], 0	     12108	option.c	FUNCTION_100	IF_1
0x1065a	    0xc70500000000	               mov dword [0x040106a4], 0	     12109	option.c	FUNCTION_100	IF_1
0x10664	      0xe92b010000	                           jmp 0x40107d4	     12109	option.c	FUNCTION_100	IF_1
0x10669	    0x8b0500000000	            mov eax, dword [0x040106af] 	     12115	option.c	FUNCTION_100	ELSE_1	IF_4
0x1066f	            0x85c0	                           test eax, eax	     12115	option.c	FUNCTION_100	ELSE_1	IF_4
0x10671	     0xf841d010000	                            je 0x40107d4	     12115	option.c	FUNCTION_100	ELSE_1	IF_4
0x10677	    0x488b05000000	            mov rax, qword [0x040106be] 	     12118	option.c	FUNCTION_100	ELSE_1	IF_4
0x1067e	        0x488945f8	                mov qword [rbp - 8], rax	     12118	option.c	FUNCTION_100	ELSE_1	IF_4
0x10682	            0xeb76	                           jmp 0x401073a	     12118	option.c	FUNCTION_100	ELSE_1	IF_4
0x10684	        0x488b45f8	                mov rax, qword [rbp - 8]	     12120	option.c	FUNCTION_100	ELSE_1	IF_4	FUNCTION_3
0x10688	    0x488b90b01500	          mov rdx, qword [rax + 0x15b0] 	     12120	option.c	FUNCTION_100	ELSE_1	IF_4	FUNCTION_3
0x1068f	        0x488b45f8	                mov rax, qword [rbp - 8]	     12120	option.c	FUNCTION_100	ELSE_1	IF_4	FUNCTION_3
0x10693	    0x488990a01500	          mov qword [rax + 0x15a0], rdx 	     12120	option.c	FUNCTION_100	ELSE_1	IF_4	FUNCTION_3
0x1069a	        0x488b45f8	                mov rax, qword [rbp - 8]	     12121	option.c	FUNCTION_100	ELSE_1	IF_4	FUNCTION_3
0x1069e	    0x488b90c81500	          mov rdx, qword [rax + 0x15c8] 	     12121	option.c	FUNCTION_100	ELSE_1	IF_4	FUNCTION_3
0x106a5	        0x488b45f8	                mov rax, qword [rbp - 8]	     12121	option.c	FUNCTION_100	ELSE_1	IF_4	FUNCTION_3
0x106a9	    0x488990b81500	          mov qword [rax + 0x15b8], rdx 	     12121	option.c	FUNCTION_100	ELSE_1	IF_4	FUNCTION_3
0x106b0	        0x488b45f8	                mov rax, qword [rbp - 8]	     12122	option.c	FUNCTION_100	ELSE_1	IF_4	FUNCTION_3
0x106b4	    0x488b90681500	          mov rdx, qword [rax + 0x1568] 	     12122	option.c	FUNCTION_100	ELSE_1	IF_4	FUNCTION_3
0x106bb	        0x488b45f8	                mov rax, qword [rbp - 8]	     12122	option.c	FUNCTION_100	ELSE_1	IF_4	FUNCTION_3
0x106bf	    0x488990601500	          mov qword [rax + 0x1560], rdx 	     12122	option.c	FUNCTION_100	ELSE_1	IF_4	FUNCTION_3
0x106c6	        0x488b45f8	                mov rax, qword [rbp - 8]	     12123	option.c	FUNCTION_100	ELSE_1	IF_4	FUNCTION_3
0x106ca	    0x8b90dc130000	          mov edx, dword [rax + 0x13dc] 	     12123	option.c	FUNCTION_100	ELSE_1	IF_4	FUNCTION_3
0x106d0	        0x488b45f8	                mov rax, qword [rbp - 8]	     12123	option.c	FUNCTION_100	ELSE_1	IF_4	FUNCTION_3
0x106d4	    0x8990d8130000	          mov dword [rax + 0x13d8], edx 	     12123	option.c	FUNCTION_100	ELSE_1	IF_4	FUNCTION_3
0x106da	        0x488b45f8	                mov rax, qword [rbp - 8]	     12124	option.c	FUNCTION_100	ELSE_1	IF_4	FUNCTION_3
0x106de	    0x8b9068140000	          mov edx, dword [rax + 0x1468] 	     12124	option.c	FUNCTION_100	ELSE_1	IF_4	FUNCTION_3
0x106e4	        0x488b45f8	                mov rax, qword [rbp - 8]	     12124	option.c	FUNCTION_100	ELSE_1	IF_4	FUNCTION_3
0x106e8	    0x899060140000	          mov dword [rax + 0x1460], edx 	     12124	option.c	FUNCTION_100	ELSE_1	IF_4	FUNCTION_3
0x106ee	        0x488b45f8	                mov rax, qword [rbp - 8]	     12118	option.c	FUNCTION_100	ELSE_1	IF_4
0x106f2	        0x488b4068	            mov rax, qword [rax + 0x68] 	     12118	option.c	FUNCTION_100	ELSE_1	IF_4
0x106f6	        0x488945f8	                mov qword [rbp - 8], rax	     12118	option.c	FUNCTION_100	ELSE_1	IF_4
0x106fa	      0x48837df800	                  cmp qword [rbp - 8], 0	     12118	option.c	FUNCTION_100	ELSE_1	IF_4
0x106ff	            0x7583	                           jne 0x40106c4	     12118	option.c	FUNCTION_100	ELSE_1	IF_4
0x10701	    0x8b0500000000	            mov eax, dword [0x04010747] 	     12128	option.c	FUNCTION_100	ELSE_1	IF_4
0x10707	    0x890500000000	            mov dword [0x0401074d], eax 	     12128	option.c	FUNCTION_100	ELSE_1	IF_4
0x1070d	    0x8b0500000000	            mov eax, dword [0x04010753] 	     12129	option.c	FUNCTION_100	ELSE_1	IF_4
0x10713	    0x890500000000	            mov dword [0x04010759], eax 	     12129	option.c	FUNCTION_100	ELSE_1	IF_4
0x10719	    0x8b1500000000	            mov edx, dword [0x0401075f] 	     12131	option.c	FUNCTION_100	ELSE_1	IF_4	IF_5
0x1071f	    0x8b0500000000	            mov eax, dword [0x04010765] 	     12131	option.c	FUNCTION_100	ELSE_1	IF_4	IF_5
0x10725	            0x39c2	                            cmp edx, eax	     12131	option.c	FUNCTION_100	ELSE_1	IF_4	IF_5
0x10727	            0x7405	                            je 0x401076e	     12131	option.c	FUNCTION_100	ELSE_1	IF_4	IF_5
0x10729	      0xe800000000	                          call 0x401076e	     12132	option.c	FUNCTION_100	ELSE_1	IF_4	CALL_2
0x1072e	    0x8b0500000000	            mov eax, dword [0x04010774] 	     12133	option.c	FUNCTION_100	ELSE_1	IF_4
0x10734	    0x890500000000	            mov dword [0x0401077a], eax 	     12133	option.c	FUNCTION_100	ELSE_1	IF_4
0x1073a	    0x8b0500000000	            mov eax, dword [0x04010780] 	     12136	option.c	FUNCTION_100	ELSE_1	IF_4
0x10740	    0x890500000000	            mov dword [0x04010786], eax 	     12136	option.c	FUNCTION_100	ELSE_1	IF_4
0x10746	    0x8b0500000000	            mov eax, dword [0x0401078c] 	     12137	option.c	FUNCTION_100	ELSE_1	IF_4
0x1074c	    0x890500000000	            mov dword [0x04010792], eax 	     12137	option.c	FUNCTION_100	ELSE_1	IF_4
0x10752	    0x8b0500000000	            mov eax, dword [0x04010798] 	     12140	option.c	FUNCTION_100	ELSE_1	IF_4
0x10758	    0x890500000000	            mov dword [0x0401079e], eax 	     12140	option.c	FUNCTION_100	ELSE_1	IF_4
0x1075e	    0x8b0500000000	            mov eax, dword [0x040107a4] 	     12141	option.c	FUNCTION_100	ELSE_1	IF_4
0x10764	    0x890500000000	            mov dword [0x040107aa], eax 	     12141	option.c	FUNCTION_100	ELSE_1	IF_4
0x1076a	    0x488b05000000	            mov rax, qword [0x040107b1] 	     12142	option.c	FUNCTION_100	ELSE_1	IF_4
0x10771	    0x488905000000	            mov qword [0x040107b8], rax 	     12142	option.c	FUNCTION_100	ELSE_1	IF_4
0x10778	    0x488b05000000	            mov rax, qword [0x040107bf] 	     12143	option.c	FUNCTION_100	ELSE_1	IF_4
0x1077f	    0x488905000000	            mov qword [0x040107c6], rax 	     12143	option.c	FUNCTION_100	ELSE_1	IF_4
0x10786	    0x488b05000000	            mov rax, qword [0x040107cd] 	     12144	option.c	FUNCTION_100	ELSE_1	IF_4
0x1078d	    0x488905000000	            mov qword [0x040107d4], rax 	     12144	option.c	FUNCTION_100	ELSE_1	IF_4
0x10794	    0x8b0500000000	            mov eax, dword [0x040107da] 	     12147	option.c	FUNCTION_100
0x1079a	    0x890500000000	            mov dword [0x040107e0], eax 	     12147	option.c	FUNCTION_100
0x107a0	              0x90	                                     nop	     12148	option.c	FUNCTION_100
0x107a1	              0xc9	                                   leave	     12148	option.c	FUNCTION_100
0x107a2	              0xc3	                                     ret	     12148	option.c	FUNCTION_100
set_option_value	WHILE,0:SWITCH,0:CALL,18:FOR,1:ELSE,4:DO,0:IF,10:functions,0	177
0xb1a5	              0x55	                                push rbp	      9642	option.c	FUNCTION_57
0xb1a6	          0x4889e5	                            mov rbp, rsp	      9642	option.c	FUNCTION_57
0xb1a9	        0x4883ec50	                           sub rsp, 0x50	      9642	option.c	FUNCTION_57
0xb1ad	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      9642	option.c	FUNCTION_57
0xb1b1	        0x488975c0	             mov qword [rbp - 0x40], rsi	      9642	option.c	FUNCTION_57
0xb1b5	        0x488955b8	             mov qword [rbp - 0x48], rdx	      9642	option.c	FUNCTION_57
0xb1b9	          0x894db4	             mov dword [rbp - 0x4c], ecx	      9642	option.c	FUNCTION_57
0xb1bc	    0x64488b042528	                mov rax, qword fs:[0x28]	      9642	option.c	FUNCTION_57
0xb1c5	        0x488945f8	                mov qword [rbp - 8], rax	      9642	option.c	FUNCTION_57
0xb1c9	            0x31c0	                            xor eax, eax	      9642	option.c	FUNCTION_57
0xb1cb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9647	option.c	FUNCTION_57	CALL_1
0xb1cf	          0x4889c7	                            mov rdi, rax	      9647	option.c	FUNCTION_57	CALL_1
0xb1d2	      0xe8affbffff	                     call sym.findoption	      9647	option.c	FUNCTION_57	CALL_1
0xb1d7	          0x8945d8	             mov dword [rbp - 0x28], eax	      9647	option.c	FUNCTION_57	CALL_1
0xb1da	        0x837dd800	               cmp dword [rbp - 0x28], 0	      9648	option.c	FUNCTION_57	IF_1
0xb1de	     0xf89cf000000	                           jns 0x400b2f3	      9648	option.c	FUNCTION_57	IF_1
0xb1e4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9652	option.c	FUNCTION_57	IF_1	IF_2	CALL_2
0xb1e8	          0x4889c7	                            mov rdi, rax	      9652	option.c	FUNCTION_57	IF_1	IF_2	CALL_2
0xb1eb	      0xe800000000	                          call 0x400b230	      9652	option.c	FUNCTION_57	IF_1	IF_2	CALL_2
0xb1f0	        0x4883f804	                              cmp rax, 4	      9652	option.c	FUNCTION_57	IF_1	IF_2	CALL_2
0xb1f4	     0xf8598000000	                           jne 0x400b2d2	      9652	option.c	FUNCTION_57	IF_1	IF_2	CALL_2
0xb1fa	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9652	option.c	FUNCTION_57	IF_1	IF_2	CALL_2
0xb1fe	           0xfb600	                   movzx eax, byte [rax]	      9652	option.c	FUNCTION_57	IF_1	IF_2	CALL_2
0xb201	            0x3c74	                            cmp al, 0x74	      9652	option.c	FUNCTION_57	IF_1	IF_2	CALL_2
0xb203	     0xf8589000000	                           jne 0x400b2d2	      9652	option.c	FUNCTION_57	IF_1	IF_2	CALL_2
0xb209	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9652	option.c	FUNCTION_57	IF_1	IF_2	CALL_2
0xb20d	        0x4883c001	                              add rax, 1	      9652	option.c	FUNCTION_57	IF_1	IF_2	CALL_2
0xb211	           0xfb600	                   movzx eax, byte [rax]	      9652	option.c	FUNCTION_57	IF_1	IF_2	CALL_2
0xb214	            0x3c5f	                            cmp al, 0x5f	      9652	option.c	FUNCTION_57	IF_1	IF_2	CALL_2
0xb216	            0x757a	                           jne 0x400b2d2	      9652	option.c	FUNCTION_57	IF_1	IF_2	CALL_2
0xb218	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9653	option.c	FUNCTION_57	IF_1	IF_2	CALL_3
0xb21c	          0x4889c7	                            mov rdi, rax	      9653	option.c	FUNCTION_57	IF_1	IF_2	CALL_3
0xb21f	      0xe814030000	                call sym.find_key_option	      9653	option.c	FUNCTION_57	IF_1	IF_2	CALL_3
0xb224	          0x8945dc	             mov dword [rbp - 0x24], eax	      9653	option.c	FUNCTION_57	IF_1	IF_2	CALL_3
0xb227	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      9653	option.c	FUNCTION_57	IF_1	IF_2	CALL_3
0xb22b	            0x7465	                            je 0x400b2d2	      9653	option.c	FUNCTION_57	IF_1	IF_2	CALL_3
0xb22d	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      9657	option.c	FUNCTION_57	IF_1	IF_2	IF_3
0xb231	            0x7915	                           jns 0x400b288	      9657	option.c	FUNCTION_57	IF_1	IF_2	IF_3
0xb233	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9659	option.c	FUNCTION_57	IF_1	IF_2	IF_3	CALL_4
0xb236	            0xf7d8	                                 neg eax	      9659	option.c	FUNCTION_57	IF_1	IF_2	IF_3	CALL_4
0xb238	          0x8845f0	               mov byte [rbp - 0x10], al	      9659	option.c	FUNCTION_57	IF_1	IF_2	IF_3	CALL_4
0xb23b	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9660	option.c	FUNCTION_57	IF_1	IF_2	IF_3	CALL_5
0xb23e	            0xf7d8	                                 neg eax	      9660	option.c	FUNCTION_57	IF_1	IF_2	IF_3	CALL_5
0xb240	          0xc1e808	                              shr eax, 8	      9660	option.c	FUNCTION_57	IF_1	IF_2	IF_3	CALL_5
0xb243	          0x8845f1	                mov byte [rbp - 0xf], al	      9660	option.c	FUNCTION_57	IF_1	IF_2	IF_3	CALL_5
0xb246	            0xeb0a	                           jmp 0x400b292	      9660	option.c	FUNCTION_57	IF_1	IF_2	IF_3	CALL_5
0xb248	        0xc645f0f2	            mov byte [rbp - 0x10], 0xf2 	      9664	option.c	FUNCTION_57	IF_1	IF_2	ELSE_1
0xb24c	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9665	option.c	FUNCTION_57	IF_1	IF_2	ELSE_1
0xb24f	          0x8845f1	                mov byte [rbp - 0xf], al	      9665	option.c	FUNCTION_57	IF_1	IF_2	ELSE_1
0xb252	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	      9667	option.c	FUNCTION_57	IF_1	IF_2	CALL_6
0xb256	        0x488d45f0	                   lea rax, [rbp - 0x10]	      9667	option.c	FUNCTION_57	IF_1	IF_2	CALL_6
0xb25a	      0xba00000000	                              mov edx, 0	      9667	option.c	FUNCTION_57	IF_1	IF_2	CALL_6
0xb25f	          0x4889ce	                            mov rsi, rcx	      9667	option.c	FUNCTION_57	IF_1	IF_2	CALL_6
0xb262	          0x4889c7	                            mov rdi, rax	      9667	option.c	FUNCTION_57	IF_1	IF_2	CALL_6
0xb265	      0xe800000000	                          call 0x400b2aa	      9667	option.c	FUNCTION_57	IF_1	IF_2	CALL_6
0xb26a	    0x8b0500000000	            mov eax, dword [0x0400b2b0] 	      9668	option.c	FUNCTION_57	IF_1	IF_2	IF_4
0xb270	            0x85c0	                           test eax, eax	      9668	option.c	FUNCTION_57	IF_1	IF_2	IF_4
0xb272	            0x740a	                            je 0x400b2be	      9668	option.c	FUNCTION_57	IF_1	IF_2	IF_4
0xb274	      0xbf00000000	                              mov edi, 0	      9669	option.c	FUNCTION_57	IF_1	IF_2	CALL_7
0xb279	      0xe800000000	                          call 0x400b2be	      9669	option.c	FUNCTION_57	IF_1	IF_2	CALL_7
0xb27e	      0xbf32000000	                           mov edi, 0x32	      9670	option.c	FUNCTION_57	IF_1	IF_2	CALL_8
0xb283	      0xe800000000	                          call 0x400b2c8	      9670	option.c	FUNCTION_57	IF_1	IF_2	CALL_8
0xb288	      0xb800000000	                              mov eax, 0	      9671	option.c	FUNCTION_57	IF_1	IF_2
0xb28d	      0xe97f010000	                           jmp 0x400b451	      9671	option.c	FUNCTION_57	IF_1	IF_2
0xb292	      0xbf00000000	                              mov edi, 0	      9674	option.c	FUNCTION_57	IF_1	CALL_10
0xb297	      0xe800000000	                          call 0x400b2dc	      9674	option.c	FUNCTION_57	IF_1	CALL_10
0xb29c	          0x4889c2	                            mov rdx, rax	      9674	option.c	FUNCTION_57	IF_1	CALL_10
0xb29f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9674	option.c	FUNCTION_57	IF_1	CALL_10
0xb2a3	          0x4889c6	                            mov rsi, rax	      9674	option.c	FUNCTION_57	IF_1	CALL_10
0xb2a6	          0x4889d7	                            mov rdi, rdx	      9674	option.c	FUNCTION_57	IF_1	CALL_10
0xb2a9	      0xe800000000	                          call 0x400b2ee	      9674	option.c	FUNCTION_57	IF_1	CALL_10
0xb2ae	      0xe959010000	                           jmp 0x400b44c	      9674	option.c	FUNCTION_57	IF_1	CALL_10
0xb2b3	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      9678	option.c	FUNCTION_57	ELSE_2
0xb2b6	            0x4898	                                    cdqe	      9678	option.c	FUNCTION_57	ELSE_2
0xb2b8	        0x48c1e006	                              shl rax, 6	      9678	option.c	FUNCTION_57	ELSE_2
0xb2bc	    0x480500000000	                              add rax, 0	      9678	option.c	FUNCTION_57	ELSE_2
0xb2c2	          0x488b00	                    mov rax, qword [rax]	      9678	option.c	FUNCTION_57	ELSE_2
0xb2c5	        0x488945e0	             mov qword [rbp - 0x20], rax	      9678	option.c	FUNCTION_57	ELSE_2
0xb2c9	    0x8b0500000000	            mov eax, dword [0x0400b30f] 	      9681	option.c	FUNCTION_57	ELSE_2	IF_5
0xb2cf	            0x85c0	                           test eax, eax	      9681	option.c	FUNCTION_57	ELSE_2	IF_5
0xb2d1	            0x7e2a	                           jle 0x400b33d	      9681	option.c	FUNCTION_57	ELSE_2	IF_5
0xb2d3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9681	option.c	FUNCTION_57	ELSE_2	IF_5
0xb2d7	      0x2500000800	                        and eax, 0x80000	      9681	option.c	FUNCTION_57	ELSE_2	IF_5
0xb2dc	          0x4885c0	                           test rax, rax	      9681	option.c	FUNCTION_57	ELSE_2	IF_5
0xb2df	            0x741c	                            je 0x400b33d	      9681	option.c	FUNCTION_57	ELSE_2	IF_5
0xb2e1	      0xbf00000000	                              mov edi, 0	      9683	option.c	FUNCTION_57	ELSE_2	IF_5	CALL_12
0xb2e6	      0xe800000000	                          call 0x400b32b	      9683	option.c	FUNCTION_57	ELSE_2	IF_5	CALL_12
0xb2eb	          0x4889c7	                            mov rdi, rax	      9683	option.c	FUNCTION_57	ELSE_2	IF_5	CALL_12
0xb2ee	      0xe800000000	                          call 0x400b333	      9683	option.c	FUNCTION_57	ELSE_2	IF_5	CALL_12
0xb2f3	      0xb800000000	                              mov eax, 0	      9684	option.c	FUNCTION_57	ELSE_2	IF_5
0xb2f8	      0xe914010000	                           jmp 0x400b451	      9684	option.c	FUNCTION_57	ELSE_2	IF_5
0xb2fd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9687	option.c	FUNCTION_57	ELSE_2	IF_6
0xb301	          0x83e004	                              and eax, 4	      9687	option.c	FUNCTION_57	ELSE_2	IF_6
0xb304	          0x4885c0	                           test rax, rax	      9687	option.c	FUNCTION_57	ELSE_2	IF_6
0xb307	            0x7419	                            je 0x400b362	      9687	option.c	FUNCTION_57	ELSE_2	IF_6
0xb309	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      9688	option.c	FUNCTION_57	ELSE_2	CALL_13
0xb30c	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	      9688	option.c	FUNCTION_57	ELSE_2	CALL_13
0xb310	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      9688	option.c	FUNCTION_57	ELSE_2	CALL_13
0xb313	          0x4889ce	                            mov rsi, rcx	      9688	option.c	FUNCTION_57	ELSE_2	CALL_13
0xb316	            0x89c7	                            mov edi, eax	      9688	option.c	FUNCTION_57	ELSE_2	CALL_13
0xb318	      0xe89996ffff	              call sym.set_string_option	      9688	option.c	FUNCTION_57	ELSE_2	CALL_13
0xb31d	      0xe9ef000000	                           jmp 0x400b451	      9688	option.c	FUNCTION_57	ELSE_2	CALL_13
0xb322	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      9691	option.c	FUNCTION_57	ELSE_2	ELSE_3	CALL_14
0xb325	            0x4898	                                    cdqe	      9691	option.c	FUNCTION_57	ELSE_2	ELSE_3	CALL_14
0xb327	        0x48c1e006	                              shl rax, 6	      9691	option.c	FUNCTION_57	ELSE_2	ELSE_3	CALL_14
0xb32b	    0x488d90000000	                          lea rdx, [rax]	      9691	option.c	FUNCTION_57	ELSE_2	ELSE_3	CALL_14
0xb332	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      9691	option.c	FUNCTION_57	ELSE_2	ELSE_3	CALL_14
0xb335	            0x89c6	                            mov esi, eax	      9691	option.c	FUNCTION_57	ELSE_2	ELSE_3	CALL_14
0xb337	          0x4889d7	                            mov rdi, rdx	      9691	option.c	FUNCTION_57	ELSE_2	ELSE_3	CALL_14
0xb33a	      0xe8ca160000	                 call sym.get_varp_scope	      9691	option.c	FUNCTION_57	ELSE_2	ELSE_3	CALL_14
0xb33f	        0x488945e8	             mov qword [rbp - 0x18], rax	      9691	option.c	FUNCTION_57	ELSE_2	ELSE_3	CALL_14
0xb343	      0x48837de800	               cmp qword [rbp - 0x18], 0	      9692	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7
0xb348	     0xf84be000000	                            je 0x400b44c	      9692	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7
0xb34e	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      9694	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	IF_8
0xb353	            0x7569	                           jne 0x400b3fe	      9694	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	IF_8
0xb355	      0x48837db800	               cmp qword [rbp - 0x48], 0	      9694	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	IF_8
0xb35a	            0x7462	                            je 0x400b3fe	      9694	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	IF_8
0xb35c	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      9700	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	IF_8	FOR_1
0xb363	            0xeb04	                           jmp 0x400b3a9	      9700	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	IF_8	FOR_1
0xb365	        0x8345d401	               add dword [rbp - 0x2c], 1	      9700	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	IF_8	FOR_1
0xb369	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      9700	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	IF_8	FOR_1
0xb36c	          0x4863d0	                         movsxd rdx, eax	      9700	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	IF_8	FOR_1
0xb36f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      9700	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	IF_8	FOR_1
0xb373	          0x4801d0	                            add rax, rdx	      9700	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	IF_8	FOR_1
0xb376	           0xfb600	                   movzx eax, byte [rax]	      9700	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	IF_8	FOR_1
0xb379	            0x3c30	                            cmp al, 0x30	      9700	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	IF_8	FOR_1
0xb37b	            0x74e8	                            je 0x400b3a5	      9700	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	IF_8	FOR_1
0xb37d	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      9702	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	IF_8	IF_9
0xb380	          0x4863d0	                         movsxd rdx, eax	      9702	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	IF_8	IF_9
0xb383	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      9702	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	IF_8	IF_9
0xb387	          0x4801d0	                            add rax, rdx	      9702	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	IF_8	IF_9
0xb38a	           0xfb600	                   movzx eax, byte [rax]	      9702	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	IF_8	IF_9
0xb38d	            0x84c0	                             test al, al	      9702	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	IF_8	IF_9
0xb38f	            0x7506	                           jne 0x400b3d7	      9702	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	IF_8	IF_9
0xb391	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      9702	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	IF_8	IF_9
0xb395	            0x7527	                           jne 0x400b3fe	      9702	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	IF_8	IF_9
0xb397	      0xbf00000000	                              mov edi, 0	      9707	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	IF_8	IF_9	CALL_16
0xb39c	      0xe800000000	                          call 0x400b3e1	      9707	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	IF_8	IF_9	CALL_16
0xb3a1	          0x4889c1	                            mov rcx, rax	      9707	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	IF_8	IF_9	CALL_16
0xb3a4	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      9707	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	IF_8	IF_9	CALL_16
0xb3a8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9707	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	IF_8	IF_9	CALL_16
0xb3ac	          0x4889c6	                            mov rsi, rax	      9707	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	IF_8	IF_9	CALL_16
0xb3af	          0x4889cf	                            mov rdi, rcx	      9707	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	IF_8	IF_9	CALL_16
0xb3b2	      0xe800000000	                          call 0x400b3f7	      9707	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	IF_8	IF_9	CALL_16
0xb3b7	      0xb800000000	                              mov eax, 0	      9709	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	IF_8	IF_9
0xb3bc	            0xeb53	                           jmp 0x400b451	      9709	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	IF_8	IF_9
0xb3be	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9713	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	IF_10
0xb3c2	          0x83e002	                              and eax, 2	      9713	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	IF_10
0xb3c5	          0x4885c0	                           test rax, rax	      9713	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	IF_10
0xb3c8	            0x7425	                            je 0x400b42f	      9713	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	IF_10
0xb3ca	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	      9714	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	IF_10	CALL_17
0xb3cd	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      9714	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	IF_10	CALL_17
0xb3d1	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	      9714	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	IF_10	CALL_17
0xb3d5	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      9714	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	IF_10	CALL_17
0xb3d8	          0x4189c9	                            mov r9d, ecx	      9714	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	IF_10	CALL_17
0xb3db	    0x41b800000000	                              mov r8d, 0	      9714	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	IF_10	CALL_17
0xb3e1	      0xb900000000	                              mov ecx, 0	      9714	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	IF_10	CALL_17
0xb3e6	            0x89c7	                            mov edi, eax	      9714	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	IF_10	CALL_17
0xb3e8	      0xe84de7ffff	                 call sym.set_num_option	      9714	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	IF_10	CALL_17
0xb3ed	            0xeb22	                           jmp 0x400b451	      9714	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	IF_10	CALL_17
0xb3ef	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      9717	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	ELSE_4	CALL_18
0xb3f3	            0x89c7	                            mov edi, eax	      9717	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	ELSE_4	CALL_18
0xb3f5	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      9717	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	ELSE_4	CALL_18
0xb3f8	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	      9717	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	ELSE_4	CALL_18
0xb3fc	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      9717	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	ELSE_4	CALL_18
0xb3ff	            0x89d1	                            mov ecx, edx	      9717	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	ELSE_4	CALL_18
0xb401	            0x89fa	                            mov edx, edi	      9717	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	ELSE_4	CALL_18
0xb403	            0x89c7	                            mov edi, eax	      9717	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	ELSE_4	CALL_18
0xb405	      0xe8fdd7ffff	                call sym.set_bool_option	      9717	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	ELSE_4	CALL_18
0xb40a	            0xeb05	                           jmp 0x400b451	      9717	option.c	FUNCTION_57	ELSE_2	ELSE_3	IF_7	ELSE_4	CALL_18
0xb40c	      0xb800000000	                              mov eax, 0	      9722	option.c	FUNCTION_57
0xb411	        0x488b4df8	                mov rcx, qword [rbp - 8]	      9723	option.c	FUNCTION_57
0xb415	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      9723	option.c	FUNCTION_57
0xb41e	            0x7405	                            je 0x400b465	      9723	option.c	FUNCTION_57
0xb420	      0xe800000000	                          call 0x400b465	      9723	option.c	FUNCTION_57
0xb425	              0xc9	                                   leave	      9723	option.c	FUNCTION_57
0xb426	              0xc3	                                     ret	      9723	option.c	FUNCTION_57
didset_options2	WHILE,0:SWITCH,0:CALL,5:FOR,0:ELSE,0:DO,0:IF,0:functions,0	12
0x40a8	              0x55	                                push rbp	      5576	option.c	FUNCTION_27
0x40a9	          0x4889e5	                            mov rbp, rsp	      5576	option.c	FUNCTION_27
0x40ac	      0xe800000000	                          call 0x40040f1	      5578	option.c	FUNCTION_27	CALL_1
0x40b1	      0xe884cb0000	                  call sym.check_opt_wim	      5581	option.c	FUNCTION_27	CALL_2
0x40b6	      0xbf00000000	                              mov edi, 0	      5583	option.c	FUNCTION_27	CALL_3
0x40bb	      0xe818410000	               call sym.set_chars_option	      5583	option.c	FUNCTION_27	CALL_3
0x40c0	      0xbf00000000	                              mov edi, 0	      5585	option.c	FUNCTION_27	CALL_4
0x40c5	      0xe80e410000	               call sym.set_chars_option	      5585	option.c	FUNCTION_27	CALL_4
0x40ca	      0xe8f5450000	         call sym.check_clipboard_option	      5589	option.c	FUNCTION_27	CALL_5
0x40cf	              0x90	                                     nop	      5591	option.c	FUNCTION_27
0x40d0	              0x5d	                                 pop rbp	      5591	option.c	FUNCTION_27
0x40d1	              0xc3	                                     ret	      5591	option.c	FUNCTION_27
check_redraw	WHILE,0:SWITCH,0:CALL,6:FOR,0:ELSE,1:DO,0:IF,6:functions,0	62
0xaca7	              0x55	                                push rbp	      9251	option.c	FUNCTION_52
0xaca8	          0x4889e5	                            mov rbp, rsp	      9251	option.c	FUNCTION_52
0xacab	        0x4883ec20	                           sub rsp, 0x20	      9251	option.c	FUNCTION_52
0xacaf	        0x48897de8	             mov qword [rbp - 0x18], rdi	      9251	option.c	FUNCTION_52
0xacb3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9253	option.c	FUNCTION_52
0xacb7	      0x2500700000	                         and eax, 0x7000	      9253	option.c	FUNCTION_52
0xacbc	    0x483d00700000	                         cmp rax, 0x7000	      9253	option.c	FUNCTION_52
0xacc2	           0xf94c0	                                 sete al	      9253	option.c	FUNCTION_52
0xacc5	           0xfb6c0	                           movzx eax, al	      9253	option.c	FUNCTION_52
0xacc8	          0x8945f8	                mov dword [rbp - 8], eax	      9253	option.c	FUNCTION_52
0xaccb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9254	option.c	FUNCTION_52
0xaccf	      0x2500600000	                         and eax, 0x6000	      9254	option.c	FUNCTION_52
0xacd4	    0x483d00600000	                         cmp rax, 0x6000	      9254	option.c	FUNCTION_52
0xacda	            0x7406	                            je 0x400ad22	      9254	option.c	FUNCTION_52
0xacdc	        0x837df800	                  cmp dword [rbp - 8], 0	      9254	option.c	FUNCTION_52
0xace0	            0x7407	                            je 0x400ad29	      9254	option.c	FUNCTION_52
0xace2	      0xb801000000	                              mov eax, 1	      9254	option.c	FUNCTION_52
0xace7	            0xeb05	                           jmp 0x400ad2e	      9254	option.c	FUNCTION_52
0xace9	      0xb800000000	                              mov eax, 0	      9254	option.c	FUNCTION_52
0xacee	          0x8945fc	                mov dword [rbp - 4], eax	      9254	option.c	FUNCTION_52
0xacf1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9256	option.c	FUNCTION_52	IF_1
0xacf5	      0x2500100000	                         and eax, 0x1000	      9256	option.c	FUNCTION_52	IF_1
0xacfa	          0x4885c0	                           test rax, rax	      9256	option.c	FUNCTION_52	IF_1
0xacfd	            0x7506	                           jne 0x400ad45	      9256	option.c	FUNCTION_52	IF_1
0xacff	        0x837dfc00	                  cmp dword [rbp - 4], 0	      9256	option.c	FUNCTION_52	IF_1
0xad03	            0x7405	                            je 0x400ad4a	      9256	option.c	FUNCTION_52	IF_1
0xad05	      0xe800000000	                          call 0x400ad4a	      9257	option.c	FUNCTION_52	CALL_1
0xad0a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9259	option.c	FUNCTION_52	IF_2
0xad0e	      0x2500400000	                         and eax, 0x4000	      9259	option.c	FUNCTION_52	IF_2
0xad13	          0x4885c0	                           test rax, rax	      9259	option.c	FUNCTION_52	IF_2
0xad16	            0x7514	                           jne 0x400ad6c	      9259	option.c	FUNCTION_52	IF_2
0xad18	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9259	option.c	FUNCTION_52	IF_2
0xad1c	      0x2500200000	                         and eax, 0x2000	      9259	option.c	FUNCTION_52	IF_2
0xad21	          0x4885c0	                           test rax, rax	      9259	option.c	FUNCTION_52	IF_2
0xad24	            0x7506	                           jne 0x400ad6c	      9259	option.c	FUNCTION_52	IF_2
0xad26	        0x837dfc00	                  cmp dword [rbp - 4], 0	      9259	option.c	FUNCTION_52	IF_2
0xad2a	            0x7405	                            je 0x400ad71	      9259	option.c	FUNCTION_52	IF_2
0xad2c	      0xe800000000	                          call 0x400ad71	      9260	option.c	FUNCTION_52	CALL_2
0xad31	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9261	option.c	FUNCTION_52	IF_3
0xad35	      0x2500400000	                         and eax, 0x4000	      9261	option.c	FUNCTION_52	IF_3
0xad3a	          0x4885c0	                           test rax, rax	      9261	option.c	FUNCTION_52	IF_3
0xad3d	            0x740a	                            je 0x400ad89	      9261	option.c	FUNCTION_52	IF_3
0xad3f	      0xbf28000000	                           mov edi, 0x28	      9262	option.c	FUNCTION_52	CALL_3
0xad44	      0xe800000000	                          call 0x400ad89	      9262	option.c	FUNCTION_52	CALL_3
0xad49	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9263	option.c	FUNCTION_52	IF_4
0xad4d	      0x2500000010	                     and eax, 0x10000000	      9263	option.c	FUNCTION_52	IF_4
0xad52	          0x4885c0	                           test rax, rax	      9263	option.c	FUNCTION_52	IF_4
0xad55	            0x740a	                            je 0x400ada1	      9263	option.c	FUNCTION_52	IF_4
0xad57	      0xbf28000000	                           mov edi, 0x28	      9264	option.c	FUNCTION_52	CALL_4
0xad5c	      0xe800000000	                          call 0x400ada1	      9264	option.c	FUNCTION_52	CALL_4
0xad61	        0x837df800	                  cmp dword [rbp - 8], 0	      9265	option.c	FUNCTION_52	IF_5
0xad65	            0x740c	                            je 0x400adb3	      9265	option.c	FUNCTION_52	IF_5
0xad67	      0xbf32000000	                           mov edi, 0x32	      9266	option.c	FUNCTION_52	CALL_5
0xad6c	      0xe800000000	                          call 0x400adb1	      9266	option.c	FUNCTION_52	CALL_5
0xad71	            0xeb10	                           jmp 0x400adc3	      9269	option.c	FUNCTION_52
0xad73	        0x837dfc00	                  cmp dword [rbp - 4], 0	      9267	option.c	FUNCTION_52	ELSE_1	IF_6
0xad77	            0x740a	                            je 0x400adc3	      9267	option.c	FUNCTION_52	ELSE_1	IF_6
0xad79	      0xbf28000000	                           mov edi, 0x28	      9268	option.c	FUNCTION_52	ELSE_1	IF_6
0xad7e	      0xe800000000	                          call 0x400adc3	      9268	option.c	FUNCTION_52	ELSE_1	IF_6
0xad83	              0x90	                                     nop	      9269	option.c	FUNCTION_52
0xad84	              0xc9	                                   leave	      9269	option.c	FUNCTION_52
0xad85	              0xc3	                                     ret	      9269	option.c	FUNCTION_52
did_set_string_option	WHILE,8:SWITCH,0:CALL,258:FOR,10:ELSE,166:DO,0:IF,307:functions,0	2604
0x4bcc	              0x55	                                push rbp	      6006	option.c	FUNCTION_41
0x4bcd	          0x4889e5	                            mov rbp, rsp	      6006	option.c	FUNCTION_41
0x4bd0	            0x4154	                                push r12	      6006	option.c	FUNCTION_41
0x4bd2	              0x53	                                push rbx	      6006	option.c	FUNCTION_41
0x4bd3	    0x4881ec700100	                          sub rsp, 0x170	      6006	option.c	FUNCTION_41
0x4bda	    0x89bdacfeffff	            mov dword [rbp - 0x154], edi	      6006	option.c	FUNCTION_41
0x4be0	    0x4889b5a0feff	            mov qword [rbp - 0x160], rsi	      6006	option.c	FUNCTION_41
0x4be7	    0x8995a8feffff	            mov dword [rbp - 0x158], edx	      6006	option.c	FUNCTION_41
0x4bed	    0x48898d98feff	            mov qword [rbp - 0x168], rcx	      6006	option.c	FUNCTION_41
0x4bf4	    0x4c898590feff	             mov qword [rbp - 0x170], r8	      6006	option.c	FUNCTION_41
0x4bfb	    0x44898d8cfeff	            mov dword [rbp - 0x174], r9d	      6006	option.c	FUNCTION_41
0x4c02	    0x64488b042528	                mov rax, qword fs:[0x28]	      6006	option.c	FUNCTION_41
0x4c0b	        0x488945e8	             mov qword [rbp - 0x18], rax	      6006	option.c	FUNCTION_41
0x4c0f	            0x31c0	                            xor eax, eax	      6006	option.c	FUNCTION_41
0x4c11	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6007	option.c	FUNCTION_41
0x4c1c	    0xc785b0feffff	              mov dword [rbp - 0x150], 0	      6009	option.c	FUNCTION_41
0x4c26	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	      6011	option.c	FUNCTION_41
0x4c2c	            0x4898	                                    cdqe	      6011	option.c	FUNCTION_41
0x4c2e	        0x48c1e006	                              shl rax, 6	      6011	option.c	FUNCTION_41
0x4c32	    0x480500000000	                              add rax, 0	      6011	option.c	FUNCTION_41
0x4c38	          0x488b00	                    mov rax, qword [rax]	      6011	option.c	FUNCTION_41
0x4c3b	          0x83e008	                              and eax, 8	      6011	option.c	FUNCTION_41
0x4c3e	    0x488985e8feff	            mov qword [rbp - 0x118], rax	      6011	option.c	FUNCTION_41
0x4c45	    0xc785b4feffff	              mov dword [rbp - 0x14c], 0	      6017	option.c	FUNCTION_41
0x4c4f	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	      6022	option.c	FUNCTION_41	CALL_1
0x4c55	            0x4898	                                    cdqe	      6022	option.c	FUNCTION_41	CALL_1
0x4c57	        0x48c1e006	                              shl rax, 6	      6022	option.c	FUNCTION_41	CALL_1
0x4c5b	    0x480500000000	                              add rax, 0	      6022	option.c	FUNCTION_41	CALL_1
0x4c61	      0xbe02000000	                              mov esi, 2	      6022	option.c	FUNCTION_41	CALL_1
0x4c66	          0x4889c7	                            mov rdi, rax	      6022	option.c	FUNCTION_41	CALL_1
0x4c69	      0xe89b7d0000	                 call sym.get_varp_scope	      6022	option.c	FUNCTION_41	CALL_1
0x4c6e	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      6022	option.c	FUNCTION_41	CALL_1
0x4c75	    0x8b0500000000	            mov eax, dword [0x04004cbb] 	      6025	option.c	FUNCTION_41	IF_1
0x4c7b	            0x85c0	                           test eax, eax	      6025	option.c	FUNCTION_41	IF_1
0x4c7d	            0x750a	                           jne 0x4004cc9	      6025	option.c	FUNCTION_41	IF_1
0x4c7f	    0x8b0500000000	            mov eax, dword [0x04004cc5] 	      6027	option.c	FUNCTION_41	IF_1
0x4c85	            0x85c0	                           test eax, eax	      6027	option.c	FUNCTION_41	IF_1
0x4c87	            0x742f	                            je 0x4004cf8	      6027	option.c	FUNCTION_41	IF_1
0x4c89	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	      6029	option.c	FUNCTION_41	IF_1
0x4c8f	            0x4898	                                    cdqe	      6029	option.c	FUNCTION_41	IF_1
0x4c91	        0x48c1e006	                              shl rax, 6	      6029	option.c	FUNCTION_41	IF_1
0x4c95	    0x480500000000	                              add rax, 0	      6029	option.c	FUNCTION_41	IF_1
0x4c9b	          0x488b00	                    mov rax, qword [rax]	      6029	option.c	FUNCTION_41	IF_1
0x4c9e	      0x2500000800	                        and eax, 0x80000	      6029	option.c	FUNCTION_41	IF_1
0x4ca3	          0x4885c0	                           test rax, rax	      6029	option.c	FUNCTION_41	IF_1
0x4ca6	            0x7410	                            je 0x4004cf8	      6029	option.c	FUNCTION_41	IF_1
0x4ca8	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6031	option.c	FUNCTION_41	IF_1
0x4cb3	      0xe9522d0000	                           jmp 0x4007a4a	      6031	option.c	FUNCTION_41	IF_1
0x4cb8	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	      6038	option.c	FUNCTION_41	ELSE_1	IF_2
0x4cbe	            0x4898	                                    cdqe	      6038	option.c	FUNCTION_41	ELSE_1	IF_2
0x4cc0	        0x48c1e006	                              shl rax, 6	      6038	option.c	FUNCTION_41	ELSE_1	IF_2
0x4cc4	    0x480500000000	                              add rax, 0	      6038	option.c	FUNCTION_41	ELSE_1	IF_2
0x4cca	          0x488b00	                    mov rax, qword [rax]	      6038	option.c	FUNCTION_41	ELSE_1	IF_2
0x4ccd	      0x2500004000	                       and eax, 0x400000	      6038	option.c	FUNCTION_41	ELSE_1	IF_2
0x4cd2	          0x4885c0	                           test rax, rax	      6038	option.c	FUNCTION_41	ELSE_1	IF_2
0x4cd5	            0x7430	                            je 0x4004d47	      6038	option.c	FUNCTION_41	ELSE_1	IF_2
0x4cd7	    0x8b0500000000	            mov eax, dword [0x04004d1d] 	      6039	option.c	FUNCTION_41	ELSE_1	IF_2	CALL_2
0x4cdd	            0x85c0	                           test eax, eax	      6039	option.c	FUNCTION_41	ELSE_1	IF_2	CALL_2
0x4cdf	            0x7407	                            je 0x4004d28	      6039	option.c	FUNCTION_41	ELSE_1	IF_2	CALL_2
0x4ce1	      0xba00000000	                              mov edx, 0	      6039	option.c	FUNCTION_41	ELSE_1	IF_2	CALL_2
0x4ce6	            0xeb05	                           jmp 0x4004d2d	      6039	option.c	FUNCTION_41	ELSE_1	IF_2	CALL_2
0x4ce8	      0xba00000000	                              mov edx, 0	      6039	option.c	FUNCTION_41	ELSE_1	IF_2	CALL_2
0x4ced	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      6039	option.c	FUNCTION_41	ELSE_1	IF_2	CALL_2
0x4cf4	          0x488b00	                    mov rax, qword [rax]	      6039	option.c	FUNCTION_41	ELSE_1	IF_2	CALL_2
0x4cf7	          0x4889d6	                            mov rsi, rdx	      6039	option.c	FUNCTION_41	ELSE_1	IF_2	CALL_2
0x4cfa	          0x4889c7	                            mov rdi, rax	      6039	option.c	FUNCTION_41	ELSE_1	IF_2	CALL_2
0x4cfd	      0xe800000000	                          call 0x4004d42	      6039	option.c	FUNCTION_41	ELSE_1	IF_2	CALL_2
0x4d02	          0x4885c0	                           test rax, rax	      6039	option.c	FUNCTION_41	ELSE_1	IF_2	CALL_2
0x4d05	            0x753b	                           jne 0x4004d82	      6039	option.c	FUNCTION_41	ELSE_1	IF_2	CALL_2
0x4d07	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	      6041	option.c	FUNCTION_41	ELSE_1	IF_2
0x4d0d	            0x4898	                                    cdqe	      6041	option.c	FUNCTION_41	ELSE_1	IF_2
0x4d0f	        0x48c1e006	                              shl rax, 6	      6041	option.c	FUNCTION_41	ELSE_1	IF_2
0x4d13	    0x480500000000	                              add rax, 0	      6041	option.c	FUNCTION_41	ELSE_1	IF_2
0x4d19	          0x488b00	                    mov rax, qword [rax]	      6041	option.c	FUNCTION_41	ELSE_1	IF_2
0x4d1c	      0x2500000008	                   and eax, section_end.	      6041	option.c	FUNCTION_41	ELSE_1	IF_2
0x4d21	          0x4885c0	                           test rax, rax	      6041	option.c	FUNCTION_41	ELSE_1	IF_2
0x4d24	            0x742c	                            je 0x4004d92	      6041	option.c	FUNCTION_41	ELSE_1	IF_2
0x4d26	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      6042	option.c	FUNCTION_41	ELSE_1	IF_2	CALL_3
0x4d2d	          0x488b00	                    mov rax, qword [rax]	      6042	option.c	FUNCTION_41	ELSE_1	IF_2	CALL_3
0x4d30	      0xbe00000000	                              mov esi, 0	      6042	option.c	FUNCTION_41	ELSE_1	IF_2	CALL_3
0x4d35	          0x4889c7	                            mov rdi, rax	      6042	option.c	FUNCTION_41	ELSE_1	IF_2	CALL_3
0x4d38	      0xe800000000	                          call 0x4004d7d	      6042	option.c	FUNCTION_41	ELSE_1	IF_2	CALL_3
0x4d3d	          0x4885c0	                           test rax, rax	      6042	option.c	FUNCTION_41	ELSE_1	IF_2	CALL_3
0x4d40	            0x7410	                            je 0x4004d92	      6042	option.c	FUNCTION_41	ELSE_1	IF_2	CALL_3
0x4d42	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6044	option.c	FUNCTION_41	ELSE_1	IF_2
0x4d4d	      0xe9b82c0000	                           jmp 0x4007a4a	      6044	option.c	FUNCTION_41	ELSE_1	IF_2
0x4d52	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      6048	option.c	FUNCTION_41	ELSE_2	IF_3
0x4d5d	            0x757a	                           jne 0x4004e19	      6048	option.c	FUNCTION_41	ELSE_2	IF_3
0x4d5f	    0x488b05000000	            mov rax, qword [0x04004da6] 	      6050	option.c	FUNCTION_41	ELSE_2	IF_3	IF_4
0x4d66	           0xfb600	                   movzx eax, byte [rax]	      6050	option.c	FUNCTION_41	ELSE_2	IF_3	IF_4
0x4d69	            0x84c0	                             test al, al	      6050	option.c	FUNCTION_41	ELSE_2	IF_3	IF_4
0x4d6b	            0x7510	                           jne 0x4004dbd	      6050	option.c	FUNCTION_41	ELSE_2	IF_3	IF_4
0x4d6d	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6051	option.c	FUNCTION_41	ELSE_2	IF_3	CALL_4
0x4d78	      0xe98d2c0000	                           jmp 0x4007a4a	      6051	option.c	FUNCTION_41	ELSE_2	IF_3	CALL_4
0x4d7d	    0x488b05000000	            mov rax, qword [0x04004dc4] 	      6058	option.c	FUNCTION_41	ELSE_2	IF_3	ELSE_4	IF_7	CALL_8
0x4d84	          0x4889c7	                            mov rdi, rax	      6058	option.c	FUNCTION_41	ELSE_2	IF_3	ELSE_4	IF_7	CALL_8
0x4d87	      0xe800000000	                          call 0x4004dcc	      6058	option.c	FUNCTION_41	ELSE_2	IF_3	ELSE_4	IF_7	CALL_8
0x4d8c	            0x85c0	                           test eax, eax	      6058	option.c	FUNCTION_41	ELSE_2	IF_3	ELSE_4	IF_7	CALL_8
0x4d8e	            0x7510	                           jne 0x4004de0	      6058	option.c	FUNCTION_41	ELSE_2	IF_3	ELSE_4	IF_7	CALL_8
0x4d90	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6059	option.c	FUNCTION_41	ELSE_2	IF_3	ELSE_4	IF_7
0x4d9b	      0xe96a2c0000	                           jmp 0x4007a4a	      6059	option.c	FUNCTION_41	ELSE_2	IF_3	ELSE_4	IF_7
0x4da0	      0xe800000000	                          call 0x4004de5	      6063	option.c	FUNCTION_41	ELSE_2	IF_3	ELSE_5	CALL_10
0x4da5	      0xbf00000000	                              mov edi, 0	      6067	option.c	FUNCTION_41	ELSE_2	IF_3	ELSE_5	CALL_11
0x4daa	      0xe8d75f0000	                     call sym.findoption	      6067	option.c	FUNCTION_41	ELSE_2	IF_3	ELSE_5	CALL_11
0x4daf	    0x8985acfeffff	            mov dword [rbp - 0x154], eax	      6067	option.c	FUNCTION_41	ELSE_2	IF_3	ELSE_5	CALL_11
0x4db5	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	      6068	option.c	FUNCTION_41	ELSE_2	IF_3	ELSE_5
0x4dbb	            0x4898	                                    cdqe	      6068	option.c	FUNCTION_41	ELSE_2	IF_3	ELSE_5
0x4dbd	        0x48c1e006	                              shl rax, 6	      6068	option.c	FUNCTION_41	ELSE_2	IF_3	ELSE_5
0x4dc1	    0x480500000000	                              add rax, 0	      6068	option.c	FUNCTION_41	ELSE_2	IF_3	ELSE_5
0x4dc7	          0x488b00	                    mov rax, qword [rax]	      6068	option.c	FUNCTION_41	ELSE_2	IF_3	ELSE_5
0x4dca	          0x83e008	                              and eax, 8	      6068	option.c	FUNCTION_41	ELSE_2	IF_3	ELSE_5
0x4dcd	    0x488985e8feff	            mov qword [rbp - 0x118], rax	      6068	option.c	FUNCTION_41	ELSE_2	IF_3	ELSE_5
0x4dd4	      0xe9312c0000	                           jmp 0x4007a4a	      6068	option.c	FUNCTION_41	ELSE_2	IF_3	ELSE_5
0x4dd9	    0x4881bd18ffff	               cmp qword [rbp - 0xe8], 0	      6073	option.c	FUNCTION_41	ELSE_6	IF_8
0x4de4	     0xf8525010000	                           jne 0x4004f4f	      6073	option.c	FUNCTION_41	ELSE_6	IF_8
0x4dea	    0x488b05000000	            mov rax, qword [0x04004e31] 	      6075	option.c	FUNCTION_41	ELSE_6	IF_8
0x4df1	    0x488985f0feff	            mov qword [rbp - 0x110], rax	      6075	option.c	FUNCTION_41	ELSE_6	IF_8
0x4df8	    0x48c785f8feff	              mov qword [rbp - 0x108], 0	      6076	option.c	FUNCTION_41	ELSE_6	IF_8
0x4e03	    0x8b858cfeffff	            mov eax, dword [rbp - 0x174]	      6078	option.c	FUNCTION_41	ELSE_6	IF_8	IF_9
0x4e09	          0x83e004	                              and eax, 4	      6078	option.c	FUNCTION_41	ELSE_6	IF_8	IF_9
0x4e0c	            0x85c0	                           test eax, eax	      6078	option.c	FUNCTION_41	ELSE_6	IF_8	IF_9
0x4e0e	            0x7429	                            je 0x4004e79	      6078	option.c	FUNCTION_41	ELSE_6	IF_8	IF_9
0x4e10	    0x488b05000000	            mov rax, qword [0x04004e57] 	      6080	option.c	FUNCTION_41	ELSE_6	IF_8	IF_9
0x4e17	    0x488b80e01300	          mov rax, qword [rax + 0x13e0] 	      6080	option.c	FUNCTION_41	ELSE_6	IF_8	IF_9
0x4e1e	    0x488985f0feff	            mov qword [rbp - 0x110], rax	      6080	option.c	FUNCTION_41	ELSE_6	IF_8	IF_9
0x4e25	    0x488b05000000	            mov rax, qword [0x04004e6c] 	      6081	option.c	FUNCTION_41	ELSE_6	IF_8	IF_9
0x4e2c	    0x4805e8130000	                         add rax, 0x13e8	      6081	option.c	FUNCTION_41	ELSE_6	IF_8	IF_9
0x4e32	    0x488985f8feff	            mov qword [rbp - 0x108], rax	      6081	option.c	FUNCTION_41	ELSE_6	IF_8	IF_9
0x4e39	    0x8b858cfeffff	            mov eax, dword [rbp - 0x174]	      6084	option.c	FUNCTION_41	ELSE_6	IF_8	IF_10
0x4e3f	          0x83e004	                              and eax, 4	      6084	option.c	FUNCTION_41	ELSE_6	IF_8	IF_10
0x4e42	            0x85c0	                           test eax, eax	      6084	option.c	FUNCTION_41	ELSE_6	IF_8	IF_10
0x4e44	            0x7420	                            je 0x4004ea6	      6084	option.c	FUNCTION_41	ELSE_6	IF_8	IF_10
0x4e46	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      6084	option.c	FUNCTION_41	ELSE_6	IF_8	IF_10
0x4e4d	           0xfb600	                   movzx eax, byte [rax]	      6084	option.c	FUNCTION_41	ELSE_6	IF_8	IF_10
0x4e50	            0x84c0	                             test al, al	      6084	option.c	FUNCTION_41	ELSE_6	IF_8	IF_10
0x4e52	            0x7512	                           jne 0x4004ea6	      6084	option.c	FUNCTION_41	ELSE_6	IF_8	IF_10
0x4e54	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      6086	option.c	FUNCTION_41	ELSE_6	IF_8	IF_10
0x4e5b	    0xc70000000000	                      mov dword [rax], 0	      6086	option.c	FUNCTION_41	ELSE_6	IF_8	IF_10
0x4e61	      0xe9a42b0000	                           jmp 0x4007a4a	      6086	option.c	FUNCTION_41	ELSE_6	IF_8	IF_10
0x4e66	    0x488b95f8feff	            mov rdx, qword [rbp - 0x108]	      6089	option.c	FUNCTION_41	ELSE_6	IF_8	ELSE_7	IF_11	CALL_12
0x4e6d	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      6089	option.c	FUNCTION_41	ELSE_6	IF_8	ELSE_7	IF_11	CALL_12
0x4e74	      0xb901000000	                              mov ecx, 1	      6089	option.c	FUNCTION_41	ELSE_6	IF_8	ELSE_7	IF_11	CALL_12
0x4e79	      0xbe00000000	                              mov esi, 0	      6089	option.c	FUNCTION_41	ELSE_6	IF_8	ELSE_7	IF_11	CALL_12
0x4e7e	          0x4889c7	                            mov rdi, rax	      6089	option.c	FUNCTION_41	ELSE_6	IF_8	ELSE_7	IF_11	CALL_12
0x4e81	      0xe87fbc0000	              call sym.opt_strings_flags	      6089	option.c	FUNCTION_41	ELSE_6	IF_8	ELSE_7	IF_11	CALL_12
0x4e86	          0x83f801	                              cmp eax, 1	      6089	option.c	FUNCTION_41	ELSE_6	IF_8	ELSE_7	IF_11	CALL_12
0x4e89	            0x740b	                            je 0x4004ed6	      6089	option.c	FUNCTION_41	ELSE_6	IF_8	ELSE_7	IF_11	CALL_12
0x4e8b	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6090	option.c	FUNCTION_41	ELSE_6	IF_8	ELSE_7	IF_11
0x4e96	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      6091	option.c	FUNCTION_41	ELSE_6	IF_8	ELSE_7	IF_12
0x4e9d	            0x8b00	                    mov eax, dword [rax]	      6091	option.c	FUNCTION_41	ELSE_6	IF_8	ELSE_7	IF_12
0x4e9f	          0x83e002	                              and eax, 2	      6091	option.c	FUNCTION_41	ELSE_6	IF_8	ELSE_7	IF_12
0x4ea2	            0x85c0	                           test eax, eax	      6091	option.c	FUNCTION_41	ELSE_6	IF_8	ELSE_7	IF_12
0x4ea4	           0xf95c0	                                setne al	      6091	option.c	FUNCTION_41	ELSE_6	IF_8	ELSE_7	IF_12
0x4ea7	           0xfb6d0	                           movzx edx, al	      6091	option.c	FUNCTION_41	ELSE_6	IF_8	ELSE_7	IF_12
0x4eaa	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      6092	option.c	FUNCTION_41	ELSE_6	IF_8	ELSE_7	IF_12
0x4eb1	            0x8b00	                    mov eax, dword [rax]	      6092	option.c	FUNCTION_41	ELSE_6	IF_8	ELSE_7	IF_12
0x4eb3	          0x83e001	                              and eax, 1	      6092	option.c	FUNCTION_41	ELSE_6	IF_8	ELSE_7	IF_12
0x4eb6	            0x85c0	                           test eax, eax	      6092	option.c	FUNCTION_41	ELSE_6	IF_8	ELSE_7	IF_12
0x4eb8	           0xf95c0	                                setne al	      6092	option.c	FUNCTION_41	ELSE_6	IF_8	ELSE_7	IF_12
0x4ebb	           0xfb6c0	                           movzx eax, al	      6092	option.c	FUNCTION_41	ELSE_6	IF_8	ELSE_7	IF_12
0x4ebe	             0x1c2	                            add edx, eax	      6092	option.c	FUNCTION_41	ELSE_6	IF_8	ELSE_7	IF_12
0x4ec0	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      6093	option.c	FUNCTION_41	ELSE_6	IF_8	ELSE_7	IF_12
0x4ec7	            0x8b00	                    mov eax, dword [rax]	      6093	option.c	FUNCTION_41	ELSE_6	IF_8	ELSE_7	IF_12
0x4ec9	          0x83e004	                              and eax, 4	      6093	option.c	FUNCTION_41	ELSE_6	IF_8	ELSE_7	IF_12
0x4ecc	            0x85c0	                           test eax, eax	      6093	option.c	FUNCTION_41	ELSE_6	IF_8	ELSE_7	IF_12
0x4ece	           0xf95c0	                                setne al	      6093	option.c	FUNCTION_41	ELSE_6	IF_8	ELSE_7	IF_12
0x4ed1	           0xfb6c0	                           movzx eax, al	      6093	option.c	FUNCTION_41	ELSE_6	IF_8	ELSE_7	IF_12
0x4ed4	             0x1d0	                            add eax, edx	      6093	option.c	FUNCTION_41	ELSE_6	IF_8	ELSE_7	IF_12
0x4ed6	          0x83f801	                              cmp eax, 1	      6091	option.c	FUNCTION_41	ELSE_6	IF_8	ELSE_7	IF_12
0x4ed9	     0xf842b2b0000	                            je 0x4007a4a	      6091	option.c	FUNCTION_41	ELSE_6	IF_8	ELSE_7	IF_12
0x4edf	    0x488b95f8feff	            mov rdx, qword [rbp - 0x108]	      6096	option.c	FUNCTION_41	ELSE_6	IF_8	ELSE_7	IF_12	CALL_13
0x4ee6	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      6096	option.c	FUNCTION_41	ELSE_6	IF_8	ELSE_7	IF_12	CALL_13
0x4eed	      0xb901000000	                              mov ecx, 1	      6096	option.c	FUNCTION_41	ELSE_6	IF_8	ELSE_7	IF_12	CALL_13
0x4ef2	      0xbe00000000	                              mov esi, 0	      6096	option.c	FUNCTION_41	ELSE_6	IF_8	ELSE_7	IF_12	CALL_13
0x4ef7	          0x4889c7	                            mov rdi, rax	      6096	option.c	FUNCTION_41	ELSE_6	IF_8	ELSE_7	IF_12	CALL_13
0x4efa	      0xe806bc0000	              call sym.opt_strings_flags	      6096	option.c	FUNCTION_41	ELSE_6	IF_8	ELSE_7	IF_12	CALL_13
0x4eff	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6097	option.c	FUNCTION_41	ELSE_6	IF_8	ELSE_7	IF_12
0x4f0a	      0xe9fb2a0000	                           jmp 0x4007a4a	      6097	option.c	FUNCTION_41	ELSE_6	IF_8	ELSE_7	IF_12
0x4f0f	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      6103	option.c	FUNCTION_41	ELSE_8	IF_13
0x4f1a	            0x740d	                            je 0x4004f69	      6103	option.c	FUNCTION_41	ELSE_8	IF_13
0x4f1c	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      6103	option.c	FUNCTION_41	ELSE_8	IF_13
0x4f27	            0x7567	                           jne 0x4004fd0	      6103	option.c	FUNCTION_41	ELSE_8	IF_13
0x4f29	    0x488b05000000	            mov rax, qword [0x04004f70] 	      6105	option.c	FUNCTION_41	ELSE_8	IF_13	IF_14	CALL_14
0x4f30	           0xfb600	                   movzx eax, byte [rax]	      6105	option.c	FUNCTION_41	ELSE_8	IF_13	IF_14	CALL_14
0x4f33	            0x3c2e	                            cmp al, 0x2e	      6105	option.c	FUNCTION_41	ELSE_8	IF_13	IF_14	CALL_14
0x4f35	            0x750d	                           jne 0x4004f84	      6105	option.c	FUNCTION_41	ELSE_8	IF_13	IF_14	CALL_14
0x4f37	    0x488b05000000	            mov rax, qword [0x04004f7e] 	      6105	option.c	FUNCTION_41	ELSE_8	IF_13	IF_14	CALL_14
0x4f3e	        0x488d5001	                      lea rdx, [rax + 1]	      6105	option.c	FUNCTION_41	ELSE_8	IF_13	IF_14	CALL_14
0x4f42	            0xeb07	                           jmp 0x4004f8b	      6105	option.c	FUNCTION_41	ELSE_8	IF_13	IF_14	CALL_14
0x4f44	    0x488b15000000	            mov rdx, qword [0x04004f8b] 	      6105	option.c	FUNCTION_41	ELSE_8	IF_13	IF_14	CALL_14
0x4f4b	    0x488b05000000	            mov rax, qword [0x04004f92] 	      6105	option.c	FUNCTION_41	ELSE_8	IF_13	IF_14	CALL_14
0x4f52	           0xfb600	                   movzx eax, byte [rax]	      6105	option.c	FUNCTION_41	ELSE_8	IF_13	IF_14	CALL_14
0x4f55	            0x3c2e	                            cmp al, 0x2e	      6105	option.c	FUNCTION_41	ELSE_8	IF_13	IF_14	CALL_14
0x4f57	            0x750d	                           jne 0x4004fa6	      6105	option.c	FUNCTION_41	ELSE_8	IF_13	IF_14	CALL_14
0x4f59	    0x488b05000000	            mov rax, qword [0x04004fa0] 	      6105	option.c	FUNCTION_41	ELSE_8	IF_13	IF_14	CALL_14
0x4f60	        0x4883c001	                              add rax, 1	      6105	option.c	FUNCTION_41	ELSE_8	IF_13	IF_14	CALL_14
0x4f64	            0xeb07	                           jmp 0x4004fad	      6105	option.c	FUNCTION_41	ELSE_8	IF_13	IF_14	CALL_14
0x4f66	    0x488b05000000	            mov rax, qword [0x04004fad] 	      6105	option.c	FUNCTION_41	ELSE_8	IF_13	IF_14	CALL_14
0x4f6d	          0x4889d6	                            mov rsi, rdx	      6105	option.c	FUNCTION_41	ELSE_8	IF_13	IF_14	CALL_14
0x4f70	          0x4889c7	                            mov rdi, rax	      6105	option.c	FUNCTION_41	ELSE_8	IF_13	IF_14	CALL_14
0x4f73	      0xe800000000	                          call 0x4004fb8	      6105	option.c	FUNCTION_41	ELSE_8	IF_13	IF_14	CALL_14
0x4f78	            0x85c0	                           test eax, eax	      6105	option.c	FUNCTION_41	ELSE_8	IF_13	IF_14	CALL_14
0x4f7a	     0xf858a2a0000	                           jne 0x4007a4a	      6105	option.c	FUNCTION_41	ELSE_8	IF_13	IF_14	CALL_14
0x4f80	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6107	option.c	FUNCTION_41	ELSE_8	IF_13	CALL_15
0x4f8b	      0xe97a2a0000	                           jmp 0x4007a4a	      6105	option.c	FUNCTION_41	ELSE_8	IF_13	IF_14	CALL_14
0x4f90	    0x488b05000000	            mov rax, qword [0x04004fd7] 	      6111	option.c	FUNCTION_41	ELSE_9	IF_15
0x4f97	    0x4805b8010000	                          add rax, 0x1b8	      6111	option.c	FUNCTION_41	ELSE_9	IF_15
0x4f9d	    0x483b85a0feff	            cmp rax, qword [rbp - 0x160]	      6111	option.c	FUNCTION_41	ELSE_9	IF_15
0x4fa4	            0x7527	                           jne 0x400500d	      6111	option.c	FUNCTION_41	ELSE_9	IF_15
0x4fa6	    0x488b05000000	            mov rax, qword [0x04004fed] 	      6113	option.c	FUNCTION_41	ELSE_9	IF_15	IF_16	CALL_16
0x4fad	          0x4889c7	                            mov rdi, rax	      6113	option.c	FUNCTION_41	ELSE_9	IF_15	IF_16	CALL_16
0x4fb0	      0xe865c40000	                   call sym.briopt_check	      6113	option.c	FUNCTION_41	ELSE_9	IF_15	IF_16	CALL_16
0x4fb5	            0x85c0	                           test eax, eax	      6113	option.c	FUNCTION_41	ELSE_9	IF_15	IF_16	CALL_16
0x4fb7	     0xf854d2a0000	                           jne 0x4007a4a	      6113	option.c	FUNCTION_41	ELSE_9	IF_15	IF_16	CALL_16
0x4fbd	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6114	option.c	FUNCTION_41	ELSE_9	IF_15	IF_16
0x4fc8	      0xe93d2a0000	                           jmp 0x4007a4a	      6114	option.c	FUNCTION_41	ELSE_9	IF_15	IF_16
0x4fcd	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      6123	option.c	FUNCTION_41	ELSE_10	IF_17
0x4fd8	            0x7430	                            je 0x400504a	      6123	option.c	FUNCTION_41	ELSE_10	IF_17
0x4fda	    0x488b05000000	            mov rax, qword [0x04005021] 	      6124	option.c	FUNCTION_41	ELSE_10	IF_17
0x4fe1	    0x4805a0140000	                         add rax, 0x14a0	      6124	option.c	FUNCTION_41	ELSE_10	IF_17
0x4fe7	    0x483b85a0feff	            cmp rax, qword [rbp - 0x160]	      6124	option.c	FUNCTION_41	ELSE_10	IF_17
0x4fee	            0x741a	                            je 0x400504a	      6124	option.c	FUNCTION_41	ELSE_10	IF_17
0x4ff0	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      6125	option.c	FUNCTION_41	ELSE_10	IF_17
0x4ffb	            0x740d	                            je 0x400504a	      6125	option.c	FUNCTION_41	ELSE_10	IF_17
0x4ffd	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      6126	option.c	FUNCTION_41	ELSE_10	IF_17
0x5008	            0x7527	                           jne 0x4005071	      6126	option.c	FUNCTION_41	ELSE_10	IF_17
0x500a	      0xe800000000	                          call 0x400504f	      6128	option.c	FUNCTION_41	ELSE_10	IF_17	IF_18	CALL_17
0x500f	            0x85c0	                           test eax, eax	      6128	option.c	FUNCTION_41	ELSE_10	IF_17	IF_18	CALL_17
0x5011	     0xf85f3290000	                           jne 0x4007a4a	      6128	option.c	FUNCTION_41	ELSE_10	IF_17	IF_18	CALL_17
0x5017	    0xc785b0feffff	              mov dword [rbp - 0x150], 1	      6130	option.c	FUNCTION_41	ELSE_10	IF_17	IF_18
0x5021	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6131	option.c	FUNCTION_41	ELSE_10	IF_17	IF_18
0x502c	      0xe9d9290000	                           jmp 0x4007a4a	      6128	option.c	FUNCTION_41	ELSE_10	IF_17	IF_18	CALL_17
0x5031	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      6136	option.c	FUNCTION_41	ELSE_11	IF_19
0x503c	            0x754f	                           jne 0x40050cd	      6136	option.c	FUNCTION_41	ELSE_11	IF_19
0x503e	    0x8b0500000000	            mov eax, dword [0x04005084] 	      6139	option.c	FUNCTION_41	ELSE_11	IF_19	IF_20
0x5044	            0x85c0	                           test eax, eax	      6139	option.c	FUNCTION_41	ELSE_11	IF_19	IF_20
0x5046	            0x7419	                            je 0x40050a1	      6139	option.c	FUNCTION_41	ELSE_11	IF_19	IF_20
0x5048	      0xbe00000000	                              mov esi, 0	      6141	option.c	FUNCTION_41	ELSE_11	IF_19	IF_20	CALL_18
0x504d	      0xbf00000000	                              mov edi, 0	      6141	option.c	FUNCTION_41	ELSE_11	IF_19	IF_20	CALL_18
0x5052	      0xe800000000	                          call 0x4005097	      6141	option.c	FUNCTION_41	ELSE_11	IF_19	IF_20	CALL_18
0x5057	    0xc70500000000	               mov dword [0x040050a1], 0	      6142	option.c	FUNCTION_41	ELSE_11	IF_19	IF_20
0x5061	    0x8b0500000000	            mov eax, dword [0x040050a7] 	      6144	option.c	FUNCTION_41	ELSE_11	IF_19	IF_21
0x5067	            0x85c0	                           test eax, eax	      6144	option.c	FUNCTION_41	ELSE_11	IF_19	IF_21
0x5069	     0xf849b290000	                            je 0x4007a4a	      6144	option.c	FUNCTION_41	ELSE_11	IF_19	IF_21
0x506f	      0xbe00000000	                              mov esi, 0	      6146	option.c	FUNCTION_41	ELSE_11	IF_19	IF_21	CALL_19
0x5074	      0xbf00000000	                              mov edi, 0	      6146	option.c	FUNCTION_41	ELSE_11	IF_19	IF_21	CALL_19
0x5079	      0xe800000000	                          call 0x40050be	      6146	option.c	FUNCTION_41	ELSE_11	IF_19	IF_21	CALL_19
0x507e	    0xc70500000000	               mov dword [0x040050c8], 0	      6147	option.c	FUNCTION_41	ELSE_11	IF_19	IF_21
0x5088	      0xe97d290000	                           jmp 0x4007a4a	      6147	option.c	FUNCTION_41	ELSE_11	IF_19	IF_21
0x508d	    0x488b05000000	            mov rax, qword [0x040050d4] 	      6153	option.c	FUNCTION_41	ELSE_12	IF_22
0x5094	    0x480578020000	                          add rax, 0x278	      6153	option.c	FUNCTION_41	ELSE_12	IF_22
0x509a	    0x483b85a0feff	            cmp rax, qword [rbp - 0x160]	      6153	option.c	FUNCTION_41	ELSE_12	IF_22
0x50a1	            0x751b	                           jne 0x40050fe	      6153	option.c	FUNCTION_41	ELSE_12	IF_22
0x50a3	    0x488b05000000	            mov rax, qword [0x040050ea] 	      6154	option.c	FUNCTION_41	ELSE_12	IF_22
0x50aa	          0x4889c7	                            mov rdi, rax	      6154	option.c	FUNCTION_41	ELSE_12	IF_22
0x50ad	      0xe800000000	                          call 0x40050f2	      6154	option.c	FUNCTION_41	ELSE_12	IF_22
0x50b2	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      6154	option.c	FUNCTION_41	ELSE_12	IF_22
0x50b9	      0xe94c290000	                           jmp 0x4007a4a	      6154	option.c	FUNCTION_41	ELSE_12	IF_22
0x50be	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      6159	option.c	FUNCTION_41	ELSE_13	IF_23
0x50c9	     0xf85aa000000	                           jne 0x40051b9	      6159	option.c	FUNCTION_41	ELSE_13	IF_23
0x50cf	    0x488b05000000	            mov rax, qword [0x04005116] 	      6162	option.c	FUNCTION_41	ELSE_13	IF_23	FOR_1
0x50d6	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      6162	option.c	FUNCTION_41	ELSE_13	IF_23	FOR_1
0x50dd	      0xe980000000	                           jmp 0x40051a2	      6162	option.c	FUNCTION_41	ELSE_13	IF_23	FOR_1
0x50e2	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6164	option.c	FUNCTION_41	ELSE_13	IF_23	FOR_1	IF_24
0x50e9	        0x4883c001	                              add rax, 1	      6164	option.c	FUNCTION_41	ELSE_13	IF_23	FOR_1	IF_24
0x50ed	           0xfb600	                   movzx eax, byte [rax]	      6164	option.c	FUNCTION_41	ELSE_13	IF_23	FOR_1	IF_24
0x50f0	            0x84c0	                             test al, al	      6164	option.c	FUNCTION_41	ELSE_13	IF_23	FOR_1	IF_24
0x50f2	            0x7436	                            je 0x400516a	      6164	option.c	FUNCTION_41	ELSE_13	IF_23	FOR_1	IF_24
0x50f4	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6164	option.c	FUNCTION_41	ELSE_13	IF_23	FOR_1	IF_24
0x50fb	        0x4883c002	                              add rax, 2	      6164	option.c	FUNCTION_41	ELSE_13	IF_23	FOR_1	IF_24
0x50ff	           0xfb600	                   movzx eax, byte [rax]	      6164	option.c	FUNCTION_41	ELSE_13	IF_23	FOR_1	IF_24
0x5102	            0x3c2c	                            cmp al, 0x2c	      6164	option.c	FUNCTION_41	ELSE_13	IF_23	FOR_1	IF_24
0x5104	            0x7512	                           jne 0x4005158	      6164	option.c	FUNCTION_41	ELSE_13	IF_23	FOR_1	IF_24
0x5106	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6164	option.c	FUNCTION_41	ELSE_13	IF_23	FOR_1	IF_24
0x510d	        0x4883c003	                              add rax, 3	      6164	option.c	FUNCTION_41	ELSE_13	IF_23	FOR_1	IF_24
0x5111	           0xfb600	                   movzx eax, byte [rax]	      6164	option.c	FUNCTION_41	ELSE_13	IF_23	FOR_1	IF_24
0x5114	            0x84c0	                             test al, al	      6164	option.c	FUNCTION_41	ELSE_13	IF_23	FOR_1	IF_24
0x5116	            0x7522	                           jne 0x400517a	      6164	option.c	FUNCTION_41	ELSE_13	IF_23	FOR_1	IF_24
0x5118	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6164	option.c	FUNCTION_41	ELSE_13	IF_23	FOR_1	IF_24
0x511f	        0x4883c002	                              add rax, 2	      6164	option.c	FUNCTION_41	ELSE_13	IF_23	FOR_1	IF_24
0x5123	           0xfb600	                   movzx eax, byte [rax]	      6164	option.c	FUNCTION_41	ELSE_13	IF_23	FOR_1	IF_24
0x5126	            0x84c0	                             test al, al	      6164	option.c	FUNCTION_41	ELSE_13	IF_23	FOR_1	IF_24
0x5128	            0x7410	                            je 0x400517a	      6164	option.c	FUNCTION_41	ELSE_13	IF_23	FOR_1	IF_24
0x512a	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6166	option.c	FUNCTION_41	ELSE_13	IF_23	FOR_1	IF_24
0x5135	      0xe9d0280000	                           jmp 0x4007a4a	      6167	option.c	FUNCTION_41	ELSE_13	IF_23	FOR_1	IF_24
0x513a	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6169	option.c	FUNCTION_41	ELSE_13	IF_23	FOR_1	IF_25
0x5141	        0x4883c002	                              add rax, 2	      6169	option.c	FUNCTION_41	ELSE_13	IF_23	FOR_1	IF_25
0x5145	           0xfb600	                   movzx eax, byte [rax]	      6169	option.c	FUNCTION_41	ELSE_13	IF_23	FOR_1	IF_25
0x5148	            0x84c0	                             test al, al	      6169	option.c	FUNCTION_41	ELSE_13	IF_23	FOR_1	IF_25
0x514a	     0xf849e280000	                            je 0x4007a2e	      6169	option.c	FUNCTION_41	ELSE_13	IF_23	FOR_1	IF_25
0x5150	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6162	option.c	FUNCTION_41	ELSE_13	IF_23	FOR_1
0x5157	        0x4883c003	                              add rax, 3	      6162	option.c	FUNCTION_41	ELSE_13	IF_23	FOR_1
0x515b	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      6162	option.c	FUNCTION_41	ELSE_13	IF_23	FOR_1
0x5162	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6162	option.c	FUNCTION_41	ELSE_13	IF_23	FOR_1
0x5169	           0xfb600	                   movzx eax, byte [rax]	      6162	option.c	FUNCTION_41	ELSE_13	IF_23	FOR_1
0x516c	            0x84c0	                             test al, al	      6162	option.c	FUNCTION_41	ELSE_13	IF_23	FOR_1
0x516e	     0xf856effffff	                           jne 0x4005122	      6162	option.c	FUNCTION_41	ELSE_13	IF_23	FOR_1
0x5174	      0xe991280000	                           jmp 0x4007a4a	      6162	option.c	FUNCTION_41	ELSE_13	IF_23	FOR_1
0x5179	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      6176	option.c	FUNCTION_41	ELSE_14	IF_26
0x5184	            0x751d	                           jne 0x40051e3	      6176	option.c	FUNCTION_41	ELSE_14	IF_26
0x5186	      0xe800000000	                          call 0x40051cb	      6178	option.c	FUNCTION_41	ELSE_14	IF_26	IF_27	CALL_21
0x518b	            0x85c0	                           test eax, eax	      6178	option.c	FUNCTION_41	ELSE_14	IF_26	IF_27	CALL_21
0x518d	     0xf8577280000	                           jne 0x4007a4a	      6178	option.c	FUNCTION_41	ELSE_14	IF_26	IF_27	CALL_21
0x5193	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6179	option.c	FUNCTION_41	ELSE_14	IF_26	IF_27
0x519e	      0xe967280000	                           jmp 0x4007a4a	      6179	option.c	FUNCTION_41	ELSE_14	IF_26	IF_27
0x51a3	    0x4881bd18ffff	               cmp qword [rbp - 0xe8], 0	      6183	option.c	FUNCTION_41	ELSE_15	IF_28
0x51ae	            0x7535	                           jne 0x4005225	      6183	option.c	FUNCTION_41	ELSE_15	IF_28
0x51b0	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      6185	option.c	FUNCTION_41	ELSE_15	IF_28	IF_29	CALL_22
0x51b7	          0x488b00	                    mov rax, qword [rax]	      6185	option.c	FUNCTION_41	ELSE_15	IF_28	IF_29	CALL_22
0x51ba	      0xba01000000	                              mov edx, 1	      6185	option.c	FUNCTION_41	ELSE_15	IF_28	IF_29	CALL_22
0x51bf	      0xbe00000000	                              mov esi, 0	      6185	option.c	FUNCTION_41	ELSE_15	IF_28	IF_29	CALL_22
0x51c4	          0x4889c7	                            mov rdi, rax	      6185	option.c	FUNCTION_41	ELSE_15	IF_28	IF_29	CALL_22
0x51c7	      0xe80ab90000	              call sym.check_opt_strings	      6185	option.c	FUNCTION_41	ELSE_15	IF_28	IF_29	CALL_22
0x51cc	          0x83f801	                              cmp eax, 1	      6185	option.c	FUNCTION_41	ELSE_15	IF_28	IF_29	CALL_22
0x51cf	     0xf8435280000	                            je 0x4007a4a	      6185	option.c	FUNCTION_41	ELSE_15	IF_28	IF_29	CALL_22
0x51d5	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6186	option.c	FUNCTION_41	ELSE_15	IF_28	IF_29
0x51e0	      0xe925280000	                           jmp 0x4007a4a	      6186	option.c	FUNCTION_41	ELSE_15	IF_28	IF_29
0x51e5	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      6191	option.c	FUNCTION_41	ELSE_16	IF_30
0x51f0	     0xf8582000000	                           jne 0x40052b8	      6191	option.c	FUNCTION_41	ELSE_16	IF_30
0x51f6	    0x488b05000000	            mov rax, qword [0x0400523d] 	      6193	option.c	FUNCTION_41	ELSE_16	IF_30	IF_31	CALL_23
0x51fd	      0xb901000000	                              mov ecx, 1	      6193	option.c	FUNCTION_41	ELSE_16	IF_30	IF_31	CALL_23
0x5202	      0xba00000000	                              mov edx, 0	      6193	option.c	FUNCTION_41	ELSE_16	IF_30	IF_31	CALL_23
0x5207	      0xbe00000000	                              mov esi, 0	      6193	option.c	FUNCTION_41	ELSE_16	IF_30	IF_31	CALL_23
0x520c	          0x4889c7	                            mov rdi, rax	      6193	option.c	FUNCTION_41	ELSE_16	IF_30	IF_31	CALL_23
0x520f	      0xe8f1b80000	              call sym.opt_strings_flags	      6193	option.c	FUNCTION_41	ELSE_16	IF_30	IF_31	CALL_23
0x5214	          0x83f801	                              cmp eax, 1	      6193	option.c	FUNCTION_41	ELSE_16	IF_30	IF_31	CALL_23
0x5217	            0x740b	                            je 0x4005264	      6193	option.c	FUNCTION_41	ELSE_16	IF_30	IF_31	CALL_23
0x5219	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6194	option.c	FUNCTION_41	ELSE_16	IF_30	IF_31
0x5224	    0x8b0500000000	            mov eax, dword [0x0400526a] 	      6195	option.c	FUNCTION_41	ELSE_16	IF_30	IF_32
0x522a	      0x2500100000	                         and eax, 0x1000	      6195	option.c	FUNCTION_41	ELSE_16	IF_30	IF_32
0x522f	            0x85c0	                           test eax, eax	      6195	option.c	FUNCTION_41	ELSE_16	IF_30	IF_32
0x5231	     0xf84d3270000	                            je 0x4007a4a	      6195	option.c	FUNCTION_41	ELSE_16	IF_30	IF_32
0x5237	    0x8b0500000000	            mov eax, dword [0x0400527d] 	      6195	option.c	FUNCTION_41	ELSE_16	IF_30	IF_32
0x523d	      0x2500080000	                          and eax, 0x800	      6195	option.c	FUNCTION_41	ELSE_16	IF_30	IF_32
0x5242	            0x85c0	                           test eax, eax	      6195	option.c	FUNCTION_41	ELSE_16	IF_30	IF_32
0x5244	     0xf84c0270000	                            je 0x4007a4a	      6195	option.c	FUNCTION_41	ELSE_16	IF_30	IF_32
0x524a	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      6198	option.c	FUNCTION_41	ELSE_16	IF_30	IF_32	CALL_24
0x5251	      0xb901000000	                              mov ecx, 1	      6198	option.c	FUNCTION_41	ELSE_16	IF_30	IF_32	CALL_24
0x5256	      0xba00000000	                              mov edx, 0	      6198	option.c	FUNCTION_41	ELSE_16	IF_30	IF_32	CALL_24
0x525b	      0xbe00000000	                              mov esi, 0	      6198	option.c	FUNCTION_41	ELSE_16	IF_30	IF_32	CALL_24
0x5260	          0x4889c7	                            mov rdi, rax	      6198	option.c	FUNCTION_41	ELSE_16	IF_30	IF_32	CALL_24
0x5263	      0xe89db80000	              call sym.opt_strings_flags	      6198	option.c	FUNCTION_41	ELSE_16	IF_30	IF_32	CALL_24
0x5268	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6199	option.c	FUNCTION_41	ELSE_16	IF_30	IF_32
0x5273	      0xe992270000	                           jmp 0x4007a4a	      6199	option.c	FUNCTION_41	ELSE_16	IF_30	IF_32
0x5278	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      6203	option.c	FUNCTION_41	ELSE_17	IF_33
0x5283	            0x7537	                           jne 0x40052fc	      6203	option.c	FUNCTION_41	ELSE_17	IF_33
0x5285	    0x488b05000000	            mov rax, qword [0x040052cc] 	      6205	option.c	FUNCTION_41	ELSE_17	IF_33	IF_34	CALL_25
0x528c	      0xb901000000	                              mov ecx, 1	      6205	option.c	FUNCTION_41	ELSE_17	IF_33	IF_34	CALL_25
0x5291	      0xba00000000	                              mov edx, 0	      6205	option.c	FUNCTION_41	ELSE_17	IF_33	IF_34	CALL_25
0x5296	      0xbe00000000	                              mov esi, 0	      6205	option.c	FUNCTION_41	ELSE_17	IF_33	IF_34	CALL_25
0x529b	          0x4889c7	                            mov rdi, rax	      6205	option.c	FUNCTION_41	ELSE_17	IF_33	IF_34	CALL_25
0x529e	      0xe862b80000	              call sym.opt_strings_flags	      6205	option.c	FUNCTION_41	ELSE_17	IF_33	IF_34	CALL_25
0x52a3	          0x83f801	                              cmp eax, 1	      6205	option.c	FUNCTION_41	ELSE_17	IF_33	IF_34	CALL_25
0x52a6	     0xf845e270000	                            je 0x4007a4a	      6205	option.c	FUNCTION_41	ELSE_17	IF_33	IF_34	CALL_25
0x52ac	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6206	option.c	FUNCTION_41	ELSE_17	IF_33	IF_34
0x52b7	      0xe94e270000	                           jmp 0x4007a4a	      6206	option.c	FUNCTION_41	ELSE_17	IF_33	IF_34
0x52bc	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      6212	option.c	FUNCTION_41	ELSE_18	IF_35
0x52c7	            0x7532	                           jne 0x400533b	      6212	option.c	FUNCTION_41	ELSE_18	IF_35
0x52c9	    0x488b05000000	            mov rax, qword [0x04005310] 	      6214	option.c	FUNCTION_41	ELSE_18	IF_35	IF_36	CALL_26
0x52d0	      0xba01000000	                              mov edx, 1	      6214	option.c	FUNCTION_41	ELSE_18	IF_35	IF_36	CALL_26
0x52d5	      0xbe00000000	                              mov esi, 0	      6214	option.c	FUNCTION_41	ELSE_18	IF_35	IF_36	CALL_26
0x52da	          0x4889c7	                            mov rdi, rax	      6214	option.c	FUNCTION_41	ELSE_18	IF_35	IF_36	CALL_26
0x52dd	      0xe8f4b70000	              call sym.check_opt_strings	      6214	option.c	FUNCTION_41	ELSE_18	IF_35	IF_36	CALL_26
0x52e2	          0x83f801	                              cmp eax, 1	      6214	option.c	FUNCTION_41	ELSE_18	IF_35	IF_36	CALL_26
0x52e5	     0xf841f270000	                            je 0x4007a4a	      6214	option.c	FUNCTION_41	ELSE_18	IF_35	IF_36	CALL_26
0x52eb	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6215	option.c	FUNCTION_41	ELSE_18	IF_35	IF_36
0x52f6	      0xe90f270000	                           jmp 0x4007a4a	      6215	option.c	FUNCTION_41	ELSE_18	IF_35	IF_36
0x52fb	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      6221	option.c	FUNCTION_41	ELSE_19	IF_37
0x5306	            0x740d	                            je 0x4005355	      6221	option.c	FUNCTION_41	ELSE_19	IF_37
0x5308	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      6221	option.c	FUNCTION_41	ELSE_19	IF_37
0x5313	            0x757c	                           jne 0x40053d1	      6221	option.c	FUNCTION_41	ELSE_19	IF_37
0x5315	    0x488b05000000	            mov rax, qword [0x0400535c] 	      6223	option.c	FUNCTION_41	ELSE_19	IF_37	IF_38	CALL_27
0x531c	      0xba00000000	                              mov edx, 0	      6223	option.c	FUNCTION_41	ELSE_19	IF_37	IF_38	CALL_27
0x5321	      0xbe00000000	                              mov esi, 0	      6223	option.c	FUNCTION_41	ELSE_19	IF_37	IF_38	CALL_27
0x5326	          0x4889c7	                            mov rdi, rax	      6223	option.c	FUNCTION_41	ELSE_19	IF_37	IF_38	CALL_27
0x5329	      0xe8a8b70000	              call sym.check_opt_strings	      6223	option.c	FUNCTION_41	ELSE_19	IF_37	IF_38	CALL_27
0x532e	          0x83f801	                              cmp eax, 1	      6223	option.c	FUNCTION_41	ELSE_19	IF_37	IF_38	CALL_27
0x5331	            0x7410	                            je 0x4005383	      6223	option.c	FUNCTION_41	ELSE_19	IF_37	IF_38	CALL_27
0x5333	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6224	option.c	FUNCTION_41	ELSE_19	IF_37	IF_38
0x533e	      0xe9ae260000	                           jmp 0x4007a31	      6223	option.c	FUNCTION_41	ELSE_19	IF_37	IF_38	CALL_27
0x5343	      0xbf00000000	                              mov edi, 0	      6225	option.c	FUNCTION_41	ELSE_19	IF_37	ELSE_20	IF_39	CALL_28
0x5348	      0xe88b2e0000	               call sym.set_chars_option	      6225	option.c	FUNCTION_41	ELSE_19	IF_37	ELSE_20	IF_39	CALL_28
0x534d	          0x4885c0	                           test rax, rax	      6225	option.c	FUNCTION_41	ELSE_19	IF_37	ELSE_20	IF_39	CALL_28
0x5350	            0x7416	                            je 0x40053a8	      6225	option.c	FUNCTION_41	ELSE_19	IF_37	ELSE_20	IF_39	CALL_28
0x5352	      0xbf00000000	                              mov edi, 0	      6226	option.c	FUNCTION_41	ELSE_19	IF_37	ELSE_20	IF_39
0x5357	      0xe800000000	                          call 0x400539c	      6226	option.c	FUNCTION_41	ELSE_19	IF_37	ELSE_20	IF_39
0x535c	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      6226	option.c	FUNCTION_41	ELSE_19	IF_37	ELSE_20	IF_39
0x5363	      0xe989260000	                           jmp 0x4007a31	      6223	option.c	FUNCTION_41	ELSE_19	IF_37	IF_38	CALL_27
0x5368	      0xbf00000000	                              mov edi, 0	      6227	option.c	FUNCTION_41	ELSE_19	IF_37	ELSE_21	IF_40	CALL_30
0x536d	      0xe8662e0000	               call sym.set_chars_option	      6227	option.c	FUNCTION_41	ELSE_19	IF_37	ELSE_21	IF_40	CALL_30
0x5372	          0x4885c0	                           test rax, rax	      6227	option.c	FUNCTION_41	ELSE_19	IF_37	ELSE_21	IF_40	CALL_30
0x5375	     0xf8476260000	                            je 0x4007a31	      6227	option.c	FUNCTION_41	ELSE_19	IF_37	ELSE_21	IF_40	CALL_30
0x537b	      0xbf00000000	                              mov edi, 0	      6228	option.c	FUNCTION_41	ELSE_19	IF_37	ELSE_21	IF_40
0x5380	      0xe800000000	                          call 0x40053c5	      6228	option.c	FUNCTION_41	ELSE_19	IF_37	ELSE_21	IF_40
0x5385	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      6228	option.c	FUNCTION_41	ELSE_19	IF_37	ELSE_21	IF_40
0x538c	      0xe960260000	                           jmp 0x4007a31	      6223	option.c	FUNCTION_41	ELSE_19	IF_37	IF_38	CALL_27
0x5391	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      6233	option.c	FUNCTION_41	ELSE_22	IF_41
0x539c	     0xf85ea000000	                           jne 0x40054cc	      6233	option.c	FUNCTION_41	ELSE_22	IF_41
0x53a2	    0x488b05000000	            mov rax, qword [0x040053e9] 	      6235	option.c	FUNCTION_41	ELSE_22	IF_41	IF_42	CALL_32
0x53a9	      0xba00000000	                              mov edx, 0	      6235	option.c	FUNCTION_41	ELSE_22	IF_41	IF_42	CALL_32
0x53ae	      0xbe00000000	                              mov esi, 0	      6235	option.c	FUNCTION_41	ELSE_22	IF_41	IF_42	CALL_32
0x53b3	          0x4889c7	                            mov rdi, rax	      6235	option.c	FUNCTION_41	ELSE_22	IF_41	IF_42	CALL_32
0x53b6	      0xe81bb70000	              call sym.check_opt_strings	      6235	option.c	FUNCTION_41	ELSE_22	IF_41	IF_42	CALL_32
0x53bb	          0x83f801	                              cmp eax, 1	      6235	option.c	FUNCTION_41	ELSE_22	IF_41	IF_42	CALL_32
0x53be	     0xf85b8000000	                           jne 0x40054bc	      6235	option.c	FUNCTION_41	ELSE_22	IF_41	IF_42	CALL_32
0x53c4	    0x488b05000000	            mov rax, qword [0x0400540b] 	      6238	option.c	FUNCTION_41	ELSE_22	IF_41	IF_42
0x53cb	           0xfb600	                   movzx eax, byte [rax]	      6238	option.c	FUNCTION_41	ELSE_22	IF_41	IF_42
0x53ce	            0x3c64	                            cmp al, 0x64	      6238	option.c	FUNCTION_41	ELSE_22	IF_41	IF_42
0x53d0	           0xf94c0	                                 sete al	      6238	option.c	FUNCTION_41	ELSE_22	IF_41	IF_42
0x53d3	           0xfb6c0	                           movzx eax, al	      6238	option.c	FUNCTION_41	ELSE_22	IF_41	IF_42
0x53d6	    0x8985c0feffff	            mov dword [rbp - 0x140], eax	      6238	option.c	FUNCTION_41	ELSE_22	IF_41	IF_42
0x53dc	      0xbe00000000	                              mov esi, 0	      6241	option.c	FUNCTION_41	ELSE_22	IF_41	IF_42	CALL_33
0x53e1	      0xbf00000000	                              mov edi, 0	      6241	option.c	FUNCTION_41	ELSE_22	IF_41	IF_42	CALL_33
0x53e6	      0xe800000000	                          call 0x400542b	      6241	option.c	FUNCTION_41	ELSE_22	IF_41	IF_42	CALL_33
0x53eb	    0x488b05000000	            mov rax, qword [0x04005432] 	      6244	option.c	FUNCTION_41	ELSE_22	IF_41	IF_42	IF_43
0x53f2	           0xfb600	                   movzx eax, byte [rax]	      6244	option.c	FUNCTION_41	ELSE_22	IF_41	IF_42	IF_43
0x53f5	            0x3c64	                            cmp al, 0x64	      6244	option.c	FUNCTION_41	ELSE_22	IF_41	IF_42	IF_43
0x53f7	           0xf94c0	                                 sete al	      6244	option.c	FUNCTION_41	ELSE_22	IF_41	IF_42	IF_43
0x53fa	           0xfb6c0	                           movzx eax, al	      6244	option.c	FUNCTION_41	ELSE_22	IF_41	IF_42	IF_43
0x53fd	    0x3b85c0feffff	            cmp eax, dword [rbp - 0x140]	      6244	option.c	FUNCTION_41	ELSE_22	IF_41	IF_42	IF_43
0x5403	     0xf8401260000	                            je 0x4007a4a	      6244	option.c	FUNCTION_41	ELSE_22	IF_41	IF_42	IF_43
0x5409	      0xbf00000000	                              mov edi, 0	      6245	option.c	FUNCTION_41	ELSE_22	IF_41	IF_42	IF_43	CALL_34
0x540e	      0xe800000000	                          call 0x4005453	      6245	option.c	FUNCTION_41	ELSE_22	IF_41	IF_42	IF_43	CALL_34
0x5413	          0x4885c0	                           test rax, rax	      6245	option.c	FUNCTION_41	ELSE_22	IF_41	IF_42	IF_43	CALL_34
0x5416	     0xf84ee250000	                            je 0x4007a4a	      6245	option.c	FUNCTION_41	ELSE_22	IF_41	IF_42	IF_43	CALL_34
0x541c	      0xbe01000000	                              mov esi, 1	      6250	option.c	FUNCTION_41	ELSE_22	IF_41	IF_42	IF_43	CALL_35
0x5421	      0xbf00000000	                              mov edi, 0	      6250	option.c	FUNCTION_41	ELSE_22	IF_41	IF_42	IF_43	CALL_35
0x5426	      0xe800000000	                          call 0x400546b	      6250	option.c	FUNCTION_41	ELSE_22	IF_41	IF_42	IF_43	CALL_35
0x542b	    0x488b05000000	            mov rax, qword [0x04005472] 	      6251	option.c	FUNCTION_41	ELSE_22	IF_41	IF_42	IF_43	CALL_36
0x5432	          0x4889c7	                            mov rdi, rax	      6251	option.c	FUNCTION_41	ELSE_22	IF_41	IF_42	IF_43	CALL_36
0x5435	      0xe800000000	                          call 0x400547a	      6251	option.c	FUNCTION_41	ELSE_22	IF_41	IF_42	IF_43	CALL_36
0x543a	    0x83bdc0feffff	              cmp dword [rbp - 0x140], 0	      6252	option.c	FUNCTION_41	ELSE_22	IF_41	IF_42	IF_43	CALL_37
0x5441	            0x7407	                            je 0x400548a	      6252	option.c	FUNCTION_41	ELSE_22	IF_41	IF_42	IF_43	CALL_37
0x5443	      0xb800000000	                              mov eax, 0	      6252	option.c	FUNCTION_41	ELSE_22	IF_41	IF_42	IF_43	CALL_37
0x5448	            0xeb05	                           jmp 0x400548f	      6252	option.c	FUNCTION_41	ELSE_22	IF_41	IF_42	IF_43	CALL_37
0x544a	      0xb800000000	                              mov eax, 0	      6252	option.c	FUNCTION_41	ELSE_22	IF_41	IF_42	IF_43	CALL_37
0x544f	          0x4889c7	                            mov rdi, rax	      6252	option.c	FUNCTION_41	ELSE_22	IF_41	IF_42	IF_43	CALL_37
0x5452	      0xe800000000	                          call 0x4005497	      6252	option.c	FUNCTION_41	ELSE_22	IF_41	IF_42	IF_43	CALL_37
0x5457	    0x488905000000	            mov qword [0x0400549e], rax 	      6252	option.c	FUNCTION_41	ELSE_22	IF_41	IF_42	IF_43	CALL_37
0x545e	      0xbf00000000	                              mov edi, 0	      6253	option.c	FUNCTION_41	ELSE_22	IF_41	IF_42	IF_43	CALL_38
0x5463	      0xe8ddf0ffff	            call sym.check_string_option	      6253	option.c	FUNCTION_41	ELSE_22	IF_41	IF_42	IF_43	CALL_38
0x5468	      0xbe00000000	                              mov esi, 0	      6254	option.c	FUNCTION_41	ELSE_22	IF_41	IF_42	IF_43	CALL_39
0x546d	      0xbf00000000	                              mov edi, 0	      6254	option.c	FUNCTION_41	ELSE_22	IF_41	IF_42	IF_43	CALL_39
0x5472	      0xe800000000	                          call 0x40054b7	      6254	option.c	FUNCTION_41	ELSE_22	IF_41	IF_42	IF_43	CALL_39
0x5477	      0xe98e250000	                           jmp 0x4007a4a	      6254	option.c	FUNCTION_41	ELSE_22	IF_41	IF_42	IF_43	CALL_39
0x547c	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6259	option.c	FUNCTION_41	ELSE_22	IF_41	ELSE_23
0x5487	      0xe97e250000	                           jmp 0x4007a4a	      6259	option.c	FUNCTION_41	ELSE_22	IF_41	ELSE_23
0x548c	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      6263	option.c	FUNCTION_41	ELSE_23	ELSE_24	IF_44
0x5497	            0x751d	                           jne 0x40054f6	      6263	option.c	FUNCTION_41	ELSE_23	ELSE_24	IF_44
0x5499	      0xe89cb70000	                  call sym.check_opt_wim	      6265	option.c	FUNCTION_41	ELSE_23	ELSE_24	IF_44	IF_45	CALL_40
0x549e	            0x85c0	                           test eax, eax	      6265	option.c	FUNCTION_41	ELSE_23	ELSE_24	IF_44	IF_45	CALL_40
0x54a0	     0xf8564250000	                           jne 0x4007a4a	      6265	option.c	FUNCTION_41	ELSE_23	ELSE_24	IF_44	IF_45	CALL_40
0x54a6	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6266	option.c	FUNCTION_41	ELSE_23	ELSE_24	IF_44	IF_45
0x54b1	      0xe954250000	                           jmp 0x4007a4a	      6266	option.c	FUNCTION_41	ELSE_23	ELSE_24	IF_44	IF_45
0x54b6	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      6271	option.c	FUNCTION_41	ELSE_25	IF_46
0x54c1	            0x7532	                           jne 0x4005535	      6271	option.c	FUNCTION_41	ELSE_25	IF_46
0x54c3	    0x488b05000000	            mov rax, qword [0x0400550a] 	      6273	option.c	FUNCTION_41	ELSE_25	IF_46	IF_47	CALL_41
0x54ca	      0xba01000000	                              mov edx, 1	      6273	option.c	FUNCTION_41	ELSE_25	IF_46	IF_47	CALL_41
0x54cf	      0xbe00000000	                              mov esi, 0	      6273	option.c	FUNCTION_41	ELSE_25	IF_46	IF_47	CALL_41
0x54d4	          0x4889c7	                            mov rdi, rax	      6273	option.c	FUNCTION_41	ELSE_25	IF_46	IF_47	CALL_41
0x54d7	      0xe8fab50000	              call sym.check_opt_strings	      6273	option.c	FUNCTION_41	ELSE_25	IF_46	IF_47	CALL_41
0x54dc	          0x83f801	                              cmp eax, 1	      6273	option.c	FUNCTION_41	ELSE_25	IF_46	IF_47	CALL_41
0x54df	     0xf8425250000	                            je 0x4007a4a	      6273	option.c	FUNCTION_41	ELSE_25	IF_46	IF_47	CALL_41
0x54e5	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6274	option.c	FUNCTION_41	ELSE_25	IF_46	IF_47
0x54f0	      0xe915250000	                           jmp 0x4007a4a	      6274	option.c	FUNCTION_41	ELSE_25	IF_46	IF_47
0x54f5	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      6301	option.c	FUNCTION_41	ELSE_29	IF_52
0x5500	            0x751d	                           jne 0x400555f	      6301	option.c	FUNCTION_41	ELSE_29	IF_52
0x5502	      0xe800000000	                          call 0x4005547	      6303	option.c	FUNCTION_41	ELSE_29	IF_52	IF_53	CALL_45
0x5507	            0x85c0	                           test eax, eax	      6303	option.c	FUNCTION_41	ELSE_29	IF_52	IF_53	CALL_45
0x5509	     0xf85fb240000	                           jne 0x4007a4a	      6303	option.c	FUNCTION_41	ELSE_29	IF_52	IF_53	CALL_45
0x550f	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6304	option.c	FUNCTION_41	ELSE_29	IF_52	IF_53
0x551a	      0xe9eb240000	                           jmp 0x4007a4a	      6304	option.c	FUNCTION_41	ELSE_29	IF_52	IF_53
0x551f	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      6310	option.c	FUNCTION_41	ELSE_30	IF_54
0x552a	            0x742b	                            je 0x4005597	      6310	option.c	FUNCTION_41	ELSE_30	IF_54
0x552c	    0x4881bd18ffff	               cmp qword [rbp - 0xe8], 0	      6310	option.c	FUNCTION_41	ELSE_30	IF_54
0x5537	            0x741e	                            je 0x4005597	      6310	option.c	FUNCTION_41	ELSE_30	IF_54
0x5539	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      6310	option.c	FUNCTION_41	ELSE_30	IF_54
0x5544	            0x7411	                            je 0x4005597	      6310	option.c	FUNCTION_41	ELSE_30	IF_54
0x5546	    0x4881bd18ffff	               cmp qword [rbp - 0xe8], 0	      6311	option.c	FUNCTION_41	ELSE_30	IF_54
0x5551	     0xf85ba010000	                           jne 0x4005751	      6311	option.c	FUNCTION_41	ELSE_30	IF_54
0x5557	    0x4881bd18ffff	               cmp qword [rbp - 0xe8], 0	      6313	option.c	FUNCTION_41	ELSE_30	IF_54	IF_55
0x5562	            0x7564	                           jne 0x4005608	      6313	option.c	FUNCTION_41	ELSE_30	IF_54	IF_55
0x5564	    0x488b05000000	            mov rax, qword [0x040055ab] 	      6315	option.c	FUNCTION_41	ELSE_30	IF_54	IF_55	IF_56
0x556b	    0x8b8028150000	          mov eax, dword [rax + 0x1528] 	      6315	option.c	FUNCTION_41	ELSE_30	IF_54	IF_55	IF_56
0x5571	            0x85c0	                           test eax, eax	      6315	option.c	FUNCTION_41	ELSE_30	IF_54	IF_55	IF_56
0x5573	            0x7516	                           jne 0x40055cb	      6315	option.c	FUNCTION_41	ELSE_30	IF_54	IF_55	IF_56
0x5575	    0x83bd8cfeffff	              cmp dword [rbp - 0x174], 2	      6315	option.c	FUNCTION_41	ELSE_30	IF_54	IF_55	IF_56
0x557c	            0x740d	                            je 0x40055cb	      6315	option.c	FUNCTION_41	ELSE_30	IF_54	IF_55	IF_56
0x557e	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6316	option.c	FUNCTION_41	ELSE_30	IF_54	IF_55	IF_56
0x5589	            0xeb3d	                           jmp 0x4005608	      6316	option.c	FUNCTION_41	ELSE_30	IF_54	IF_55	IF_56
0x558b	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      6317	option.c	FUNCTION_41	ELSE_30	IF_54	IF_55	ELSE_31	IF_57	CALL_46
0x5592	          0x488b00	                    mov rax, qword [rax]	      6317	option.c	FUNCTION_41	ELSE_30	IF_54	IF_55	ELSE_31	IF_57	CALL_46
0x5595	      0xbe2c000000	                           mov esi, 0x2c	      6317	option.c	FUNCTION_41	ELSE_30	IF_54	IF_55	ELSE_31	IF_57	CALL_46
0x559a	          0x4889c7	                            mov rdi, rax	      6317	option.c	FUNCTION_41	ELSE_30	IF_54	IF_55	ELSE_31	IF_57	CALL_46
0x559d	      0xe800000000	                          call 0x40055e2	      6317	option.c	FUNCTION_41	ELSE_30	IF_54	IF_55	ELSE_31	IF_57	CALL_46
0x55a2	          0x4885c0	                           test rax, rax	      6317	option.c	FUNCTION_41	ELSE_30	IF_54	IF_55	ELSE_31	IF_57	CALL_46
0x55a5	            0x740d	                            je 0x40055f4	      6317	option.c	FUNCTION_41	ELSE_30	IF_54	IF_55	ELSE_31	IF_57	CALL_46
0x55a7	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6320	option.c	FUNCTION_41	ELSE_30	IF_54	IF_55	ELSE_31	IF_57
0x55b2	            0xeb14	                           jmp 0x4005608	      6320	option.c	FUNCTION_41	ELSE_30	IF_54	IF_55	ELSE_31	IF_57
0x55b4	      0xe86ef1ffff	                  call sym.redraw_titles	      6325	option.c	FUNCTION_41	ELSE_30	IF_54	IF_55	ELSE_32	CALL_47
0x55b9	    0x488b05000000	            mov rax, qword [0x04005600] 	      6328	option.c	FUNCTION_41	ELSE_30	IF_54	IF_55	ELSE_32	CALL_48
0x55c0	          0x4889c7	                            mov rdi, rax	      6328	option.c	FUNCTION_41	ELSE_30	IF_54	IF_55	ELSE_32	CALL_48
0x55c3	      0xe800000000	                          call 0x4005608	      6328	option.c	FUNCTION_41	ELSE_30	IF_54	IF_55	ELSE_32	CALL_48
0x55c8	    0x4883bde0feff	              cmp qword [rbp - 0x120], 0	      6331	option.c	FUNCTION_41	ELSE_30	IF_54	IF_58
0x55d0	            0x7566	                           jne 0x4005678	      6331	option.c	FUNCTION_41	ELSE_30	IF_54	IF_58
0x55d2	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      6334	option.c	FUNCTION_41	ELSE_30	IF_54	IF_58	CALL_49
0x55d9	          0x488b00	                    mov rax, qword [rax]	      6334	option.c	FUNCTION_41	ELSE_30	IF_54	IF_58	CALL_49
0x55dc	          0x4889c7	                            mov rdi, rax	      6334	option.c	FUNCTION_41	ELSE_30	IF_54	IF_58	CALL_49
0x55df	      0xe800000000	                          call 0x4005624	      6334	option.c	FUNCTION_41	ELSE_30	IF_54	IF_58	CALL_49
0x55e4	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      6334	option.c	FUNCTION_41	ELSE_30	IF_54	IF_58	CALL_49
0x55eb	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      6335	option.c	FUNCTION_41	ELSE_30	IF_54	IF_58	IF_59
0x55f2	          0x4885c0	                           test rax, rax	      6335	option.c	FUNCTION_41	ELSE_30	IF_54	IF_58	IF_59
0x55f5	            0x7423	                            je 0x400565a	      6335	option.c	FUNCTION_41	ELSE_30	IF_54	IF_58	IF_59
0x55f7	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      6337	option.c	FUNCTION_41	ELSE_30	IF_54	IF_58	IF_59	CALL_50
0x55fe	          0x488b00	                    mov rax, qword [rax]	      6337	option.c	FUNCTION_41	ELSE_30	IF_54	IF_58	IF_59	CALL_50
0x5601	          0x4889c7	                            mov rdi, rax	      6337	option.c	FUNCTION_41	ELSE_30	IF_54	IF_58	IF_59	CALL_50
0x5604	      0xe800000000	                          call 0x4005649	      6337	option.c	FUNCTION_41	ELSE_30	IF_54	IF_58	IF_59	CALL_50
0x5609	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      6338	option.c	FUNCTION_41	ELSE_30	IF_54	IF_58	IF_59
0x5610	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      6338	option.c	FUNCTION_41	ELSE_30	IF_54	IF_58	IF_59
0x5617	          0x488910	                    mov qword [rax], rdx	      6338	option.c	FUNCTION_41	ELSE_30	IF_54	IF_58	IF_59
0x561a	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      6340	option.c	FUNCTION_41	ELSE_30	IF_54	IF_58	IF_60
0x5625	            0x7511	                           jne 0x4005678	      6340	option.c	FUNCTION_41	ELSE_30	IF_54	IF_58	IF_60
0x5627	      0xe800000000	                          call 0x400566c	      6342	option.c	FUNCTION_41	ELSE_30	IF_54	IF_58	IF_60	CALL_51
0x562c	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      6342	option.c	FUNCTION_41	ELSE_30	IF_54	IF_58	IF_60	CALL_51
0x5633	      0xe8eff0ffff	                  call sym.redraw_titles	      6344	option.c	FUNCTION_41	ELSE_30	IF_54	IF_58	IF_60	CALL_52
0x5638	    0x4883bde0feff	              cmp qword [rbp - 0x120], 0	      6358	option.c	FUNCTION_41	ELSE_30	IF_54	IF_63
0x5640	     0xf85ae230000	                           jne 0x4007a34	      6358	option.c	FUNCTION_41	ELSE_30	IF_54	IF_63
0x5646	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      6363	option.c	FUNCTION_41	ELSE_30	IF_54	IF_63	IF_64
0x5651	            0x751a	                           jne 0x40056ad	      6363	option.c	FUNCTION_41	ELSE_30	IF_54	IF_63	IF_64
0x5653	    0x488b05000000	            mov rax, qword [0x0400569a] 	      6363	option.c	FUNCTION_41	ELSE_30	IF_54	IF_63	IF_64
0x565a	    0x488b80d01500	          mov rax, qword [rax + 0x15d0] 	      6363	option.c	FUNCTION_41	ELSE_30	IF_54	IF_63	IF_64
0x5661	           0xfb600	                   movzx eax, byte [rax]	      6363	option.c	FUNCTION_41	ELSE_30	IF_54	IF_63	IF_64
0x5664	            0x84c0	                             test al, al	      6363	option.c	FUNCTION_41	ELSE_30	IF_54	IF_63	IF_64
0x5666	            0x7405	                            je 0x40056ad	      6363	option.c	FUNCTION_41	ELSE_30	IF_54	IF_63	IF_64
0x5668	      0xe800000000	                          call 0x40056ad	      6364	option.c	FUNCTION_41	ELSE_30	IF_54	IF_63	CALL_55
0x566d	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      6370	option.c	FUNCTION_41	ELSE_30	IF_54	IF_63	IF_65
0x5678	            0x750e	                           jne 0x40056c8	      6370	option.c	FUNCTION_41	ELSE_30	IF_54	IF_63	IF_65
0x567a	    0x488b05000000	            mov rax, qword [0x040056c1] 	      6370	option.c	FUNCTION_41	ELSE_30	IF_54	IF_63	IF_65
0x5681	           0xfb600	                   movzx eax, byte [rax]	      6370	option.c	FUNCTION_41	ELSE_30	IF_54	IF_63	IF_65
0x5684	            0x84c0	                             test al, al	      6370	option.c	FUNCTION_41	ELSE_30	IF_54	IF_63	IF_65
0x5686	            0x7511	                           jne 0x40056d9	      6370	option.c	FUNCTION_41	ELSE_30	IF_54	IF_63	IF_65
0x5688	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      6370	option.c	FUNCTION_41	ELSE_30	IF_54	IF_63	IF_65
0x5693	     0xf855b230000	                           jne 0x4007a34	      6370	option.c	FUNCTION_41	ELSE_30	IF_54	IF_63	IF_65
0x5699	    0x488b15000000	            mov rdx, qword [0x040056e0] 	      6372	option.c	FUNCTION_41	ELSE_30	IF_54	IF_63	IF_65	IF_66	CALL_56
0x56a0	    0x488b05000000	            mov rax, qword [0x040056e7] 	      6372	option.c	FUNCTION_41	ELSE_30	IF_54	IF_63	IF_65	IF_66	CALL_56
0x56a7	          0x4889c6	                            mov rsi, rax	      6372	option.c	FUNCTION_41	ELSE_30	IF_54	IF_63	IF_65	IF_66	CALL_56
0x56aa	      0xbf00000000	                              mov edi, 0	      6372	option.c	FUNCTION_41	ELSE_30	IF_54	IF_63	IF_65	IF_66	CALL_56
0x56af	      0xe800000000	                          call 0x40056f4	      6372	option.c	FUNCTION_41	ELSE_30	IF_54	IF_63	IF_65	IF_66	CALL_56
0x56b4	            0x85c0	                           test eax, eax	      6372	option.c	FUNCTION_41	ELSE_30	IF_54	IF_63	IF_65	IF_66	CALL_56
0x56b6	            0x7423	                            je 0x400571b	      6372	option.c	FUNCTION_41	ELSE_30	IF_54	IF_63	IF_65	IF_66	CALL_56
0x56b8	    0x488b15000000	            mov rdx, qword [0x040056ff] 	      6373	option.c	FUNCTION_41	ELSE_30	IF_54	IF_63	IF_65	IF_66	CALL_57
0x56bf	    0x488b05000000	            mov rax, qword [0x04005706] 	      6373	option.c	FUNCTION_41	ELSE_30	IF_54	IF_63	IF_65	IF_66	CALL_57
0x56c6	          0x4889c6	                            mov rsi, rax	      6373	option.c	FUNCTION_41	ELSE_30	IF_54	IF_63	IF_65	IF_66	CALL_57
0x56c9	      0xbf00000000	                              mov edi, 0	      6373	option.c	FUNCTION_41	ELSE_30	IF_54	IF_63	IF_65	IF_66	CALL_57
0x56ce	      0xe800000000	                          call 0x4005713	      6373	option.c	FUNCTION_41	ELSE_30	IF_54	IF_63	IF_65	IF_66	CALL_57
0x56d3	            0x85c0	                           test eax, eax	      6373	option.c	FUNCTION_41	ELSE_30	IF_54	IF_63	IF_65	IF_66	CALL_57
0x56d5	     0xf8519230000	                           jne 0x4007a34	      6373	option.c	FUNCTION_41	ELSE_30	IF_54	IF_63	IF_65	IF_66	CALL_57
0x56db	    0x4c8b25000000	            mov r12, qword [0x04005722] 	      6375	option.c	FUNCTION_41	ELSE_30	IF_54	IF_63	IF_65	IF_66	CALL_59
0x56e2	    0x488b1d000000	            mov rbx, qword [0x04005729] 	      6375	option.c	FUNCTION_41	ELSE_30	IF_54	IF_63	IF_65	IF_66	CALL_59
0x56e9	      0xbf00000000	                              mov edi, 0	      6375	option.c	FUNCTION_41	ELSE_30	IF_54	IF_63	IF_65	IF_66	CALL_59
0x56ee	      0xe800000000	                          call 0x4005733	      6375	option.c	FUNCTION_41	ELSE_30	IF_54	IF_63	IF_65	IF_66	CALL_59
0x56f3	          0x4c89e2	                            mov rdx, r12	      6375	option.c	FUNCTION_41	ELSE_30	IF_54	IF_63	IF_65	IF_66	CALL_59
0x56f6	          0x4889de	                            mov rsi, rbx	      6375	option.c	FUNCTION_41	ELSE_30	IF_54	IF_63	IF_65	IF_66	CALL_59
0x56f9	          0x4889c7	                            mov rdi, rax	      6375	option.c	FUNCTION_41	ELSE_30	IF_54	IF_63	IF_65	IF_66	CALL_59
0x56fc	      0xe800000000	                          call 0x4005741	      6375	option.c	FUNCTION_41	ELSE_30	IF_54	IF_63	IF_65	IF_66	CALL_59
0x5701	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6377	option.c	FUNCTION_41	ELSE_30	IF_54	IF_63	IF_65	IF_66
0x570c	      0xe9e3220000	                           jmp 0x4007a34	      6358	option.c	FUNCTION_41	ELSE_30	IF_54	IF_63
0x5711	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      6391	option.c	FUNCTION_41	ELSE_33	IF_68
0x571c	     0xf85d1000000	                           jne 0x4005833	      6391	option.c	FUNCTION_41	ELSE_33	IF_68
0x5722	    0x488b05000000	            mov rax, qword [0x04005769] 	      6394	option.c	FUNCTION_41	ELSE_33	IF_68	CALL_61
0x5729	          0x4889c7	                            mov rdi, rax	      6394	option.c	FUNCTION_41	ELSE_33	IF_68	CALL_61
0x572c	      0xe800000000	                          call 0x4005771	      6394	option.c	FUNCTION_41	ELSE_33	IF_68	CALL_61
0x5731	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      6394	option.c	FUNCTION_41	ELSE_33	IF_68	CALL_61
0x5738	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      6395	option.c	FUNCTION_41	ELSE_33	IF_68	IF_69
0x573f	          0x4885c0	                           test rax, rax	      6395	option.c	FUNCTION_41	ELSE_33	IF_68	IF_69
0x5742	            0x7422	                            je 0x40057a6	      6395	option.c	FUNCTION_41	ELSE_33	IF_68	IF_69
0x5744	    0x488b05000000	            mov rax, qword [0x0400578b] 	      6397	option.c	FUNCTION_41	ELSE_33	IF_68	IF_69	CALL_62
0x574b	          0x4889c7	                            mov rdi, rax	      6397	option.c	FUNCTION_41	ELSE_33	IF_68	IF_69	CALL_62
0x574e	      0xe800000000	                          call 0x4005793	      6397	option.c	FUNCTION_41	ELSE_33	IF_68	IF_69	CALL_62
0x5753	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      6398	option.c	FUNCTION_41	ELSE_33	IF_68	IF_69
0x575a	    0x488905000000	            mov qword [0x040057a1], rax 	      6398	option.c	FUNCTION_41	ELSE_33	IF_68	IF_69
0x5761	      0xe9a4220000	                           jmp 0x4007a4a	      6398	option.c	FUNCTION_41	ELSE_33	IF_68	IF_69
0x5766	    0x488b05000000	            mov rax, qword [0x040057ad] 	      6403	option.c	FUNCTION_41	ELSE_33	IF_68	ELSE_34	FOR_2
0x576d	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      6403	option.c	FUNCTION_41	ELSE_33	IF_68	ELSE_34	FOR_2
0x5774	            0xeb6a	                           jmp 0x4005820	      6403	option.c	FUNCTION_41	ELSE_33	IF_68	ELSE_34	FOR_2
0x5776	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6405	option.c	FUNCTION_41	ELSE_33	IF_68	ELSE_34	FOR_2	IF_70
0x577d	           0xfb600	                   movzx eax, byte [rax]	      6405	option.c	FUNCTION_41	ELSE_33	IF_68	ELSE_34	FOR_2	IF_70
0x5780	            0x3c5f	                            cmp al, 0x5f	      6405	option.c	FUNCTION_41	ELSE_33	IF_68	ELSE_34	FOR_2	IF_70
0x5782	            0x750c	                           jne 0x40057d0	      6405	option.c	FUNCTION_41	ELSE_33	IF_68	ELSE_34	FOR_2	IF_70
0x5784	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6406	option.c	FUNCTION_41	ELSE_33	IF_68	ELSE_34	FOR_2	IF_70
0x578b	          0xc6002d	                    mov byte [rax], 0x2d	      6406	option.c	FUNCTION_41	ELSE_33	IF_68	ELSE_34	FOR_2	IF_70
0x578e	            0xeb3e	                           jmp 0x400580e	      6406	option.c	FUNCTION_41	ELSE_33	IF_68	ELSE_34	FOR_2	IF_70
0x5790	    0x488b95d0feff	            mov rdx, qword [rbp - 0x130]	      6408	option.c	FUNCTION_41	ELSE_33	IF_68	ELSE_34	FOR_2	CALL_63
0x5797	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6408	option.c	FUNCTION_41	ELSE_33	IF_68	ELSE_34	FOR_2	CALL_63
0x579e	           0xfb600	                   movzx eax, byte [rax]	      6408	option.c	FUNCTION_41	ELSE_33	IF_68	ELSE_34	FOR_2	CALL_63
0x57a1	            0x3c40	                            cmp al, 0x40	      6408	option.c	FUNCTION_41	ELSE_33	IF_68	ELSE_34	FOR_2	CALL_63
0x57a3	            0x760e	                           jbe 0x40057f3	      6408	option.c	FUNCTION_41	ELSE_33	IF_68	ELSE_34	FOR_2	CALL_63
0x57a5	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6408	option.c	FUNCTION_41	ELSE_33	IF_68	ELSE_34	FOR_2	CALL_63
0x57ac	           0xfb600	                   movzx eax, byte [rax]	      6408	option.c	FUNCTION_41	ELSE_33	IF_68	ELSE_34	FOR_2	CALL_63
0x57af	            0x3c5a	                            cmp al, 0x5a	      6408	option.c	FUNCTION_41	ELSE_33	IF_68	ELSE_34	FOR_2	CALL_63
0x57b1	            0x760c	                           jbe 0x40057ff	      6408	option.c	FUNCTION_41	ELSE_33	IF_68	ELSE_34	FOR_2	CALL_63
0x57b3	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6408	option.c	FUNCTION_41	ELSE_33	IF_68	ELSE_34	FOR_2	CALL_63
0x57ba	           0xfb600	                   movzx eax, byte [rax]	      6408	option.c	FUNCTION_41	ELSE_33	IF_68	ELSE_34	FOR_2	CALL_63
0x57bd	            0xeb0d	                           jmp 0x400580c	      6408	option.c	FUNCTION_41	ELSE_33	IF_68	ELSE_34	FOR_2	CALL_63
0x57bf	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6408	option.c	FUNCTION_41	ELSE_33	IF_68	ELSE_34	FOR_2	CALL_63
0x57c6	           0xfb600	                   movzx eax, byte [rax]	      6408	option.c	FUNCTION_41	ELSE_33	IF_68	ELSE_34	FOR_2	CALL_63
0x57c9	          0x83c020	                           add eax, 0x20	      6408	option.c	FUNCTION_41	ELSE_33	IF_68	ELSE_34	FOR_2	CALL_63
0x57cc	            0x8802	                      mov byte [rdx], al	      6408	option.c	FUNCTION_41	ELSE_33	IF_68	ELSE_34	FOR_2	CALL_63
0x57ce	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6403	option.c	FUNCTION_41	ELSE_33	IF_68	ELSE_34	FOR_2
0x57d5	        0x4883c001	                              add rax, 1	      6403	option.c	FUNCTION_41	ELSE_33	IF_68	ELSE_34	FOR_2
0x57d9	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      6403	option.c	FUNCTION_41	ELSE_33	IF_68	ELSE_34	FOR_2
0x57e0	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6403	option.c	FUNCTION_41	ELSE_33	IF_68	ELSE_34	FOR_2
0x57e7	           0xfb600	                   movzx eax, byte [rax]	      6403	option.c	FUNCTION_41	ELSE_33	IF_68	ELSE_34	FOR_2
0x57ea	            0x84c0	                             test al, al	      6403	option.c	FUNCTION_41	ELSE_33	IF_68	ELSE_34	FOR_2
0x57ec	            0x7588	                           jne 0x40057b6	      6403	option.c	FUNCTION_41	ELSE_33	IF_68	ELSE_34	FOR_2
0x57ee	      0xe917220000	                           jmp 0x4007a4a	      6403	option.c	FUNCTION_41	ELSE_33	IF_68	ELSE_34	FOR_2
0x57f3	    0x488b05000000	            mov rax, qword [0x0400583a] 	      6423	option.c	FUNCTION_41	ELSE_37	IF_73
0x57fa	    0x4805d0150000	                         add rax, 0x15d0	      6423	option.c	FUNCTION_41	ELSE_37	IF_73
0x5800	    0x483b85a0feff	            cmp rax, qword [rbp - 0x160]	      6423	option.c	FUNCTION_41	ELSE_37	IF_73
0x5807	     0xf85f9000000	                           jne 0x4005946	      6423	option.c	FUNCTION_41	ELSE_37	IF_73
0x580d	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      6425	option.c	FUNCTION_41	ELSE_37	IF_73	IF_74	CALL_65
0x5814	          0x488b00	                    mov rax, qword [rax]	      6425	option.c	FUNCTION_41	ELSE_37	IF_73	IF_74	CALL_65
0x5817	          0x4889c7	                            mov rdi, rax	      6425	option.c	FUNCTION_41	ELSE_37	IF_73	IF_74	CALL_65
0x581a	      0xe828f3ffff	                 call sym.valid_filetype	      6425	option.c	FUNCTION_41	ELSE_37	IF_73	IF_74	CALL_65
0x581f	            0x85c0	                           test eax, eax	      6425	option.c	FUNCTION_41	ELSE_37	IF_73	IF_74	CALL_65
0x5821	            0x750d	                           jne 0x4005870	      6425	option.c	FUNCTION_41	ELSE_37	IF_73	IF_74	CALL_65
0x5823	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6426	option.c	FUNCTION_41	ELSE_37	IF_73	IF_74
0x582e	            0xeb0c	                           jmp 0x400587c	      6426	option.c	FUNCTION_41	ELSE_37	IF_73	IF_74
0x5830	      0xe800000000	                          call 0x4005875	      6429	option.c	FUNCTION_41	ELSE_37	IF_73	CALL_66
0x5835	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      6429	option.c	FUNCTION_41	ELSE_37	IF_73	CALL_66
0x583c	    0x4883bde0feff	              cmp qword [rbp - 0x120], 0	      6431	option.c	FUNCTION_41	ELSE_37	IF_73	IF_75
0x5844	     0xf85c0210000	                           jne 0x4007a4a	      6431	option.c	FUNCTION_41	ELSE_37	IF_73	IF_75
0x584a	    0x488b05000000	            mov rax, qword [0x04005891] 	      6433	option.c	FUNCTION_41	ELSE_37	IF_73	IF_75	IF_76
0x5851	    0x488b80d01500	          mov rax, qword [rax + 0x15d0] 	      6433	option.c	FUNCTION_41	ELSE_37	IF_73	IF_75	IF_76
0x5858	           0xfb600	                   movzx eax, byte [rax]	      6433	option.c	FUNCTION_41	ELSE_37	IF_73	IF_75	IF_76
0x585b	            0x84c0	                             test al, al	      6433	option.c	FUNCTION_41	ELSE_37	IF_73	IF_75	IF_76
0x585d	            0x743a	                            je 0x40058d9	      6433	option.c	FUNCTION_41	ELSE_37	IF_73	IF_75	IF_76
0x585f	    0x488b05000000	            mov rax, qword [0x040058a6] 	      6436	option.c	FUNCTION_41	ELSE_37	IF_73	IF_75	IF_76
0x5866	    0x48c780681200	            mov qword [rax + 0x1268], 1 	      6436	option.c	FUNCTION_41	ELSE_37	IF_73	IF_75	IF_76
0x5871	    0x488b05000000	            mov rax, qword [0x040058b8] 	      6437	option.c	FUNCTION_41	ELSE_37	IF_73	IF_75	IF_76	IF_77
0x5878	    0x488b80701200	          mov rax, qword [rax + 0x1270] 	      6437	option.c	FUNCTION_41	ELSE_37	IF_73	IF_75	IF_76	IF_77
0x587f	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      6437	option.c	FUNCTION_41	ELSE_37	IF_73	IF_75	IF_76	IF_77
0x5883	            0x7460	                            je 0x4005925	      6437	option.c	FUNCTION_41	ELSE_37	IF_73	IF_75	IF_76	IF_77
0x5885	    0x488b05000000	            mov rax, qword [0x040058cc] 	      6438	option.c	FUNCTION_41	ELSE_37	IF_73	IF_75	IF_76	IF_77
0x588c	    0x48c780701200	            mov qword [rax + 0x1270], 1 	      6438	option.c	FUNCTION_41	ELSE_37	IF_73	IF_75	IF_76	IF_77
0x5897	            0xeb4c	                           jmp 0x4005925	      6438	option.c	FUNCTION_41	ELSE_37	IF_73	IF_75	IF_76	IF_77
0x5899	    0x488b05000000	            mov rax, qword [0x040058e0] 	      6443	option.c	FUNCTION_41	ELSE_37	IF_73	IF_75	ELSE_39	IF_78
0x58a0	    0x488b80681200	          mov rax, qword [rax + 0x1268] 	      6443	option.c	FUNCTION_41	ELSE_37	IF_73	IF_75	ELSE_39	IF_78
0x58a7	        0x4883f801	                              cmp rax, 1	      6443	option.c	FUNCTION_41	ELSE_37	IF_73	IF_75	ELSE_39	IF_78
0x58ab	            0x7512	                           jne 0x40058ff	      6443	option.c	FUNCTION_41	ELSE_37	IF_73	IF_75	ELSE_39	IF_78
0x58ad	    0x488b05000000	            mov rax, qword [0x040058f4] 	      6444	option.c	FUNCTION_41	ELSE_37	IF_73	IF_75	ELSE_39	IF_78
0x58b4	    0x48c780681200	            mov qword [rax + 0x1268], 0 	      6444	option.c	FUNCTION_41	ELSE_37	IF_73	IF_75	ELSE_39	IF_78
0x58bf	    0x488b05000000	            mov rax, qword [0x04005906] 	      6445	option.c	FUNCTION_41	ELSE_37	IF_73	IF_75	ELSE_39	IF_79
0x58c6	    0x488b80701200	          mov rax, qword [rax + 0x1270] 	      6445	option.c	FUNCTION_41	ELSE_37	IF_73	IF_75	ELSE_39	IF_79
0x58cd	        0x4883f801	                              cmp rax, 1	      6445	option.c	FUNCTION_41	ELSE_37	IF_73	IF_75	ELSE_39	IF_79
0x58d1	            0x7512	                           jne 0x4005925	      6445	option.c	FUNCTION_41	ELSE_37	IF_73	IF_75	ELSE_39	IF_79
0x58d3	    0x488b05000000	            mov rax, qword [0x0400591a] 	      6446	option.c	FUNCTION_41	ELSE_37	IF_73	IF_75	ELSE_39	IF_79
0x58da	    0x48c780701200	mov qword [rax + 0x1270], 0xffffffffffffffff 	      6446	option.c	FUNCTION_41	ELSE_37	IF_73	IF_75	ELSE_39	IF_79
0x58e5	    0x8b858cfeffff	            mov eax, dword [rbp - 0x174]	      6448	option.c	FUNCTION_41	ELSE_37	IF_73	IF_75	IF_80
0x58eb	          0x83e004	                              and eax, 4	      6448	option.c	FUNCTION_41	ELSE_37	IF_73	IF_75	IF_80
0x58ee	            0x85c0	                           test eax, eax	      6448	option.c	FUNCTION_41	ELSE_37	IF_73	IF_75	IF_80
0x58f0	            0x750a	                           jne 0x400593c	      6448	option.c	FUNCTION_41	ELSE_37	IF_73	IF_75	IF_80
0x58f2	      0xe800000000	                          call 0x4005937	      6450	option.c	FUNCTION_41	ELSE_37	IF_73	IF_75	IF_80	CALL_67
0x58f7	      0xe800000000	                          call 0x400593c	      6451	option.c	FUNCTION_41	ELSE_37	IF_73	IF_75	IF_80	CALL_68
0x58fc	      0xe800000000	                          call 0x4005941	      6453	option.c	FUNCTION_41	ELSE_37	IF_73	IF_75	CALL_69
0x5901	      0xe904210000	                           jmp 0x4007a4a	      6453	option.c	FUNCTION_41	ELSE_37	IF_73	IF_75	CALL_69
0x5906	    0x4881bd18ffff	               cmp qword [rbp - 0xe8], 0	      6459	option.c	FUNCTION_41	ELSE_40	IF_81
0x5911	     0xf85e0000000	                           jne 0x4005a37	      6459	option.c	FUNCTION_41	ELSE_40	IF_81
0x5917	    0x488b05000000	            mov rax, qword [0x0400595e] 	      6461	option.c	FUNCTION_41	ELSE_40	IF_81	IF_82
0x591e	    0x8b8028150000	          mov eax, dword [rax + 0x1528] 	      6461	option.c	FUNCTION_41	ELSE_40	IF_81	IF_82
0x5924	            0x85c0	                           test eax, eax	      6461	option.c	FUNCTION_41	ELSE_40	IF_81	IF_82
0x5926	            0x751d	                           jne 0x4005985	      6461	option.c	FUNCTION_41	ELSE_40	IF_81	IF_82
0x5928	    0x8b858cfeffff	            mov eax, dword [rbp - 0x174]	      6461	option.c	FUNCTION_41	ELSE_40	IF_81	IF_82
0x592e	          0x83e002	                              and eax, 2	      6461	option.c	FUNCTION_41	ELSE_40	IF_81	IF_82
0x5931	            0x85c0	                           test eax, eax	      6461	option.c	FUNCTION_41	ELSE_40	IF_81	IF_82
0x5933	            0x7510	                           jne 0x4005985	      6461	option.c	FUNCTION_41	ELSE_40	IF_81	IF_82
0x5935	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6462	option.c	FUNCTION_41	ELSE_40	IF_81	IF_82
0x5940	      0xe9c5200000	                           jmp 0x4007a4a	      6462	option.c	FUNCTION_41	ELSE_40	IF_81	IF_82
0x5945	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      6463	option.c	FUNCTION_41	ELSE_40	IF_81	ELSE_41	IF_83	CALL_70
0x594c	          0x488b00	                    mov rax, qword [rax]	      6463	option.c	FUNCTION_41	ELSE_40	IF_81	ELSE_41	IF_83	CALL_70
0x594f	      0xba00000000	                              mov edx, 0	      6463	option.c	FUNCTION_41	ELSE_40	IF_81	ELSE_41	IF_83	CALL_70
0x5954	      0xbe00000000	                              mov esi, 0	      6463	option.c	FUNCTION_41	ELSE_40	IF_81	ELSE_41	IF_83	CALL_70
0x5959	          0x4889c7	                            mov rdi, rax	      6463	option.c	FUNCTION_41	ELSE_40	IF_81	ELSE_41	IF_83	CALL_70
0x595c	      0xe875b10000	              call sym.check_opt_strings	      6463	option.c	FUNCTION_41	ELSE_40	IF_81	ELSE_41	IF_83	CALL_70
0x5961	          0x83f801	                              cmp eax, 1	      6463	option.c	FUNCTION_41	ELSE_40	IF_81	ELSE_41	IF_83	CALL_70
0x5964	            0x7410	                            je 0x40059b6	      6463	option.c	FUNCTION_41	ELSE_40	IF_81	ELSE_41	IF_83	CALL_70
0x5966	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6464	option.c	FUNCTION_41	ELSE_40	IF_81	ELSE_41	IF_83
0x5971	      0xe994200000	                           jmp 0x4007a4a	      6464	option.c	FUNCTION_41	ELSE_40	IF_81	ELSE_41	IF_83
0x5976	    0x488b05000000	            mov rax, qword [0x040059bd] 	      6468	option.c	FUNCTION_41	ELSE_40	IF_81	ELSE_42	IF_84	CALL_71
0x597d	          0x4889c7	                            mov rdi, rax	      6468	option.c	FUNCTION_41	ELSE_40	IF_81	ELSE_42	IF_84	CALL_71
0x5980	      0xe800000000	                          call 0x40059c5	      6468	option.c	FUNCTION_41	ELSE_40	IF_81	ELSE_42	IF_84	CALL_71
0x5985	          0x83f801	                              cmp eax, 1	      6468	option.c	FUNCTION_41	ELSE_40	IF_81	ELSE_42	IF_84	CALL_71
0x5988	            0x7513	                           jne 0x40059dd	      6468	option.c	FUNCTION_41	ELSE_40	IF_81	ELSE_42	IF_84	CALL_71
0x598a	    0x488b05000000	            mov rax, qword [0x040059d1] 	      6469	option.c	FUNCTION_41	ELSE_40	IF_81	ELSE_42	IF_84
0x5991	    0xc78098150000	            mov dword [rax + 0x1598], 1 	      6469	option.c	FUNCTION_41	ELSE_40	IF_81	ELSE_42	IF_84
0x599b	            0xeb11	                           jmp 0x40059ee	      6469	option.c	FUNCTION_41	ELSE_40	IF_81	ELSE_42	IF_84
0x599d	    0x488b05000000	            mov rax, qword [0x040059e4] 	      6471	option.c	FUNCTION_41	ELSE_40	IF_81	ELSE_42	ELSE_43
0x59a4	    0xc78098150000	            mov dword [rax + 0x1598], 0 	      6471	option.c	FUNCTION_41	ELSE_40	IF_81	ELSE_42	ELSE_43
0x59ae	      0xe874edffff	                  call sym.redraw_titles	      6473	option.c	FUNCTION_41	ELSE_40	IF_81	ELSE_42	CALL_72
0x59b3	    0x488b05000000	            mov rax, qword [0x040059fa] 	      6476	option.c	FUNCTION_41	ELSE_40	IF_81	ELSE_42	CALL_73
0x59ba	          0x4889c7	                            mov rdi, rax	      6476	option.c	FUNCTION_41	ELSE_40	IF_81	ELSE_42	CALL_73
0x59bd	      0xe800000000	                          call 0x4005a02	      6476	option.c	FUNCTION_41	ELSE_40	IF_81	ELSE_42	CALL_73
0x59c2	    0x488b05000000	            mov rax, qword [0x04005a09] 	      6479	option.c	FUNCTION_41	ELSE_40	IF_81	ELSE_42	IF_85	CALL_74
0x59c9	          0x4889c7	                            mov rdi, rax	      6479	option.c	FUNCTION_41	ELSE_40	IF_81	ELSE_42	IF_85	CALL_74
0x59cc	      0xe800000000	                          call 0x4005a11	      6479	option.c	FUNCTION_41	ELSE_40	IF_81	ELSE_42	IF_85	CALL_74
0x59d1	          0x83f802	                              cmp eax, 2	      6479	option.c	FUNCTION_41	ELSE_40	IF_81	ELSE_42	IF_85	CALL_74
0x59d4	            0x7412	                            je 0x4005a28	      6479	option.c	FUNCTION_41	ELSE_40	IF_81	ELSE_42	IF_85	CALL_74
0x59d6	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      6479	option.c	FUNCTION_41	ELSE_40	IF_81	ELSE_42	IF_85	CALL_74
0x59dd	           0xfb600	                   movzx eax, byte [rax]	      6479	option.c	FUNCTION_41	ELSE_40	IF_81	ELSE_42	IF_85	CALL_74
0x59e0	            0x3c6d	                            cmp al, 0x6d	      6479	option.c	FUNCTION_41	ELSE_40	IF_81	ELSE_42	IF_85	CALL_74
0x59e2	     0xf8522200000	                           jne 0x4007a4a	      6479	option.c	FUNCTION_41	ELSE_40	IF_81	ELSE_42	IF_85	CALL_74
0x59e8	      0xbf28000000	                           mov edi, 0x28	      6480	option.c	FUNCTION_41	ELSE_40	IF_81	ELSE_42	CALL_75
0x59ed	      0xe800000000	                          call 0x4005a32	      6480	option.c	FUNCTION_41	ELSE_40	IF_81	ELSE_42	CALL_75
0x59f2	      0xe913200000	                           jmp 0x4007a4a	      6480	option.c	FUNCTION_41	ELSE_40	IF_81	ELSE_42	CALL_75
0x59f7	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      6485	option.c	FUNCTION_41	ELSE_44	IF_86
0x5a02	            0x755a	                           jne 0x4005a9e	      6485	option.c	FUNCTION_41	ELSE_44	IF_86
0x5a04	    0x488b05000000	            mov rax, qword [0x04005a4b] 	      6487	option.c	FUNCTION_41	ELSE_44	IF_86	IF_87	CALL_76
0x5a0b	      0xba01000000	                              mov edx, 1	      6487	option.c	FUNCTION_41	ELSE_44	IF_86	IF_87	CALL_76
0x5a10	      0xbe00000000	                              mov esi, 0	      6487	option.c	FUNCTION_41	ELSE_44	IF_86	IF_87	CALL_76
0x5a15	          0x4889c7	                            mov rdi, rax	      6487	option.c	FUNCTION_41	ELSE_44	IF_86	IF_87	CALL_76
0x5a18	      0xe8b9b00000	              call sym.check_opt_strings	      6487	option.c	FUNCTION_41	ELSE_44	IF_86	IF_87	CALL_76
0x5a1d	          0x83f801	                              cmp eax, 1	      6487	option.c	FUNCTION_41	ELSE_44	IF_86	IF_87	CALL_76
0x5a20	            0x7410	                            je 0x4005a72	      6487	option.c	FUNCTION_41	ELSE_44	IF_86	IF_87	CALL_76
0x5a22	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6488	option.c	FUNCTION_41	ELSE_44	IF_86	IF_87
0x5a2d	      0xe9d81f0000	                           jmp 0x4007a4a	      6488	option.c	FUNCTION_41	ELSE_44	IF_86	IF_87
0x5a32	    0x488b05000000	            mov rax, qword [0x04005a79] 	      6492	option.c	FUNCTION_41	ELSE_44	IF_86	ELSE_45	IF_88
0x5a39	           0xfb600	                   movzx eax, byte [rax]	      6492	option.c	FUNCTION_41	ELSE_44	IF_86	ELSE_45	IF_88
0x5a3c	            0x84c0	                             test al, al	      6492	option.c	FUNCTION_41	ELSE_44	IF_86	ELSE_45	IF_88
0x5a3e	            0x750f	                           jne 0x4005a8f	      6492	option.c	FUNCTION_41	ELSE_44	IF_86	ELSE_45	IF_88
0x5a40	    0xc70500000000	               mov dword [0x04005a8a], 0	      6493	option.c	FUNCTION_41	ELSE_44	IF_86	ELSE_45	IF_88
0x5a4a	      0xe9bb1f0000	                           jmp 0x4007a4a	      6493	option.c	FUNCTION_41	ELSE_44	IF_86	ELSE_45	IF_88
0x5a4f	    0xc70500000000	               mov dword [0x04005a99], 1	      6495	option.c	FUNCTION_41	ELSE_44	IF_86	ELSE_45	ELSE_46
0x5a59	      0xe9ac1f0000	                           jmp 0x4007a4a	      6495	option.c	FUNCTION_41	ELSE_44	IF_86	ELSE_45	ELSE_46
0x5a5e	    0x4881bd18ffff	               cmp qword [rbp - 0xe8], 0	      6501	option.c	FUNCTION_41	ELSE_46	ELSE_47	IF_89
0x5a69	            0x7577	                           jne 0x4005b22	      6501	option.c	FUNCTION_41	ELSE_46	ELSE_47	IF_89
0x5a6b	      0xe800000000	                          call 0x4005ab0	      6506	option.c	FUNCTION_41	ELSE_46	ELSE_47	IF_89	CALL_77
0x5a70	    0x488b05000000	            mov rax, qword [0x04005ab7] 	      6508	option.c	FUNCTION_41	ELSE_46	ELSE_47	IF_89	IF_90	CALL_78
0x5a77	    0x488b80f81400	          mov rax, qword [rax + 0x14f8] 	      6508	option.c	FUNCTION_41	ELSE_46	ELSE_47	IF_89	IF_90	CALL_78
0x5a7e	    0x488b9598feff	            mov rdx, qword [rbp - 0x168]	      6508	option.c	FUNCTION_41	ELSE_46	ELSE_47	IF_89	IF_90	CALL_78
0x5a85	          0x4889d6	                            mov rsi, rdx	      6508	option.c	FUNCTION_41	ELSE_46	ELSE_47	IF_89	IF_90	CALL_78
0x5a88	          0x4889c7	                            mov rdi, rax	      6508	option.c	FUNCTION_41	ELSE_46	ELSE_47	IF_89	IF_90	CALL_78
0x5a8b	      0xe800000000	                          call 0x4005ad0	      6508	option.c	FUNCTION_41	ELSE_46	ELSE_47	IF_89	IF_90	CALL_78
0x5a90	            0x85c0	                           test eax, eax	      6508	option.c	FUNCTION_41	ELSE_46	ELSE_47	IF_89	IF_90	CALL_78
0x5a92	     0xf84721f0000	                            je 0x4007a4a	      6508	option.c	FUNCTION_41	ELSE_46	ELSE_47	IF_89	IF_90	CALL_78
0x5a98	    0x488b05000000	            mov rax, qword [0x04005adf] 	      6511	option.c	FUNCTION_41	ELSE_46	ELSE_47	IF_89	IF_90
0x5a9f	    0x488b80281700	          mov rax, qword [rax + 0x1728] 	      6511	option.c	FUNCTION_41	ELSE_46	ELSE_47	IF_89	IF_90
0x5aa6	           0xfb600	                   movzx eax, byte [rax]	      6511	option.c	FUNCTION_41	ELSE_46	ELSE_47	IF_89	IF_90
0x5aa9	            0x84c0	                             test al, al	      6510	option.c	FUNCTION_41	ELSE_46	ELSE_47	IF_89	IF_90	CALL_79
0x5aab	            0x7410	                            je 0x4005afd	      6510	option.c	FUNCTION_41	ELSE_46	ELSE_47	IF_89	IF_90	CALL_79
0x5aad	    0x488b05000000	            mov rax, qword [0x04005af4] 	      6511	option.c	FUNCTION_41	ELSE_46	ELSE_47	IF_89	IF_90
0x5ab4	    0x488b80281700	          mov rax, qword [rax + 0x1728] 	      6510	option.c	FUNCTION_41	ELSE_46	ELSE_47	IF_89	IF_90	CALL_79
0x5abb	            0xeb07	                           jmp 0x4005b04	      6510	option.c	FUNCTION_41	ELSE_46	ELSE_47	IF_89	IF_90	CALL_79
0x5abd	    0x488b05000000	            mov rax, qword [0x04005b04] 	      6510	option.c	FUNCTION_41	ELSE_46	ELSE_47	IF_89	IF_90	CALL_79
0x5ac4	    0x488b0d000000	            mov rcx, qword [0x04005b0b] 	      6510	option.c	FUNCTION_41	ELSE_46	ELSE_47	IF_89	IF_90	CALL_79
0x5acb	    0x488bb598feff	            mov rsi, qword [rbp - 0x168]	      6510	option.c	FUNCTION_41	ELSE_46	ELSE_47	IF_89	IF_90	CALL_79
0x5ad2	          0x4889c2	                            mov rdx, rax	      6510	option.c	FUNCTION_41	ELSE_46	ELSE_47	IF_89	IF_90	CALL_79
0x5ad5	          0x4889cf	                            mov rdi, rcx	      6510	option.c	FUNCTION_41	ELSE_46	ELSE_47	IF_89	IF_90	CALL_79
0x5ad8	      0xe800000000	                          call 0x4005b1d	      6510	option.c	FUNCTION_41	ELSE_46	ELSE_47	IF_89	IF_90	CALL_79
0x5add	      0xe9281f0000	                           jmp 0x4007a4a	      6510	option.c	FUNCTION_41	ELSE_46	ELSE_47	IF_89	IF_90	CALL_79
0x5ae2	    0x4881bd18ffff	               cmp qword [rbp - 0xe8], 0	      6514	option.c	FUNCTION_41	ELSE_48	IF_91
0x5aed	     0xf8558020000	                           jne 0x4005d8b	      6514	option.c	FUNCTION_41	ELSE_48	IF_91
0x5af3	    0x8b858cfeffff	            mov eax, dword [rbp - 0x174]	      6516	option.c	FUNCTION_41	ELSE_48	IF_91	IF_92
0x5af9	          0x83e004	                              and eax, 4	      6516	option.c	FUNCTION_41	ELSE_48	IF_91	IF_92
0x5afc	            0x85c0	                           test eax, eax	      6516	option.c	FUNCTION_41	ELSE_48	IF_91	IF_92
0x5afe	            0x7417	                            je 0x4005b57	      6516	option.c	FUNCTION_41	ELSE_48	IF_91	IF_92
0x5b00	    0x488b05000000	            mov rax, qword [0x04005b47] 	      6517	option.c	FUNCTION_41	ELSE_48	IF_91	IF_92
0x5b07	    0x488b80281700	          mov rax, qword [rax + 0x1728] 	      6517	option.c	FUNCTION_41	ELSE_48	IF_91	IF_92
0x5b0e	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      6517	option.c	FUNCTION_41	ELSE_48	IF_91	IF_92
0x5b15	            0xeb0e	                           jmp 0x4005b65	      6517	option.c	FUNCTION_41	ELSE_48	IF_91	IF_92
0x5b17	    0x488b05000000	            mov rax, qword [0x04005b5e] 	      6519	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_49
0x5b1e	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      6519	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_49
0x5b25	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      6520	option.c	FUNCTION_41	ELSE_48	IF_91	IF_93	CALL_80
0x5b2c	      0xba01000000	                              mov edx, 1	      6520	option.c	FUNCTION_41	ELSE_48	IF_91	IF_93	CALL_80
0x5b31	      0xbe00000000	                              mov esi, 0	      6520	option.c	FUNCTION_41	ELSE_48	IF_91	IF_93	CALL_80
0x5b36	          0x4889c7	                            mov rdi, rax	      6520	option.c	FUNCTION_41	ELSE_48	IF_91	IF_93	CALL_80
0x5b39	      0xe898af0000	              call sym.check_opt_strings	      6520	option.c	FUNCTION_41	ELSE_48	IF_91	IF_93	CALL_80
0x5b3e	          0x83f801	                              cmp eax, 1	      6520	option.c	FUNCTION_41	ELSE_48	IF_91	IF_93	CALL_80
0x5b41	            0x7410	                            je 0x4005b93	      6520	option.c	FUNCTION_41	ELSE_48	IF_91	IF_93	CALL_80
0x5b43	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6521	option.c	FUNCTION_41	ELSE_48	IF_91	IF_93
0x5b4e	      0xe9b71e0000	                           jmp 0x4007a4a	      6521	option.c	FUNCTION_41	ELSE_48	IF_91	IF_93
0x5b53	      0xe800000000	                          call 0x4005b98	      6522	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_50	IF_94	CALL_81
0x5b58	            0x85c0	                           test eax, eax	      6522	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_50	IF_94	CALL_81
0x5b5a	            0x7510	                           jne 0x4005bac	      6522	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_50	IF_94	CALL_81
0x5b5c	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6523	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_50	IF_94
0x5b67	      0xe99e1e0000	                           jmp 0x4007a4a	      6523	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_50	IF_94
0x5b6c	    0x488b05000000	            mov rax, qword [0x04005bb3] 	      6527	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_95
0x5b73	           0xfb600	                   movzx eax, byte [rax]	      6527	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_95
0x5b76	            0x84c0	                             test al, al	      6527	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_95
0x5b78	            0x7533	                           jne 0x4005bed	      6527	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_95
0x5b7a	    0x83bda8feffff	              cmp dword [rbp - 0x158], 0	      6529	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_95	IF_96
0x5b81	            0x740f	                            je 0x4005bd2	      6529	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_95	IF_96
0x5b83	    0x488b05000000	            mov rax, qword [0x04005bca] 	      6530	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_95	CALL_82
0x5b8a	          0x4889c7	                            mov rdi, rax	      6530	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_95	CALL_82
0x5b8d	      0xe800000000	                          call 0x4005bd2	      6530	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_95	CALL_82
0x5b92	      0xbf00000000	                              mov edi, 0	      6531	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_95	CALL_83
0x5b97	      0xe800000000	                          call 0x4005bdc	      6531	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_95	CALL_83
0x5b9c	    0x488905000000	            mov qword [0x04005be3], rax 	      6531	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_95	CALL_83
0x5ba3	    0xc785a8feffff	              mov dword [rbp - 0x158], 1	      6532	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_95
0x5bad	    0x8b858cfeffff	            mov eax, dword [rbp - 0x174]	      6537	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_97
0x5bb3	          0x83e006	                              and eax, 6	      6537	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_97
0x5bb6	            0x85c0	                           test eax, eax	      6537	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_97
0x5bb8	            0x752b	                           jne 0x4005c25	      6537	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_97
0x5bba	    0x488b05000000	            mov rax, qword [0x04005c01] 	      6539	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_97	CALL_84
0x5bc1	    0x488b80281700	          mov rax, qword [rax + 0x1728] 	      6539	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_97	CALL_84
0x5bc8	          0x4889c7	                            mov rdi, rax	      6539	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_97	CALL_84
0x5bcb	      0xe800000000	                          call 0x4005c10	      6539	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_97	CALL_84
0x5bd0	    0x488b05000000	            mov rax, qword [0x04005c17] 	      6540	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_97
0x5bd7	    0x488b15000000	            mov rdx, qword [0x04005c1e] 	      6540	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_97
0x5bde	    0x488990281700	          mov qword [rax + 0x1728], rdx 	      6540	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_97
0x5be5	    0x8b858cfeffff	            mov eax, dword [rbp - 0x174]	      6546	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_98
0x5beb	          0x83e004	                              and eax, 4	      6546	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_98
0x5bee	            0x85c0	                           test eax, eax	      6546	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_98
0x5bf0	            0x741e	                            je 0x4005c50	      6546	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_98
0x5bf2	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      6546	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_98
0x5bf9	           0xfb600	                   movzx eax, byte [rax]	      6546	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_98
0x5bfc	            0x84c0	                             test al, al	      6546	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_98
0x5bfe	            0x7510	                           jne 0x4005c50	      6546	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_98
0x5c00	    0x488b05000000	            mov rax, qword [0x04005c47] 	      6547	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_98
0x5c07	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      6547	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_98
0x5c0e	            0xeb0e	                           jmp 0x4005c5e	      6547	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_98
0x5c10	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      6549	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	ELSE_52
0x5c17	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      6549	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	ELSE_52
0x5c1e	    0x488b05000000	            mov rax, qword [0x04005c65] 	      6550	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_99
0x5c25	    0x488b80281700	          mov rax, qword [rax + 0x1728] 	      6550	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_99
0x5c2c	           0xfb600	                   movzx eax, byte [rax]	      6550	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_99
0x5c2f	            0x84c0	                             test al, al	      6550	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_99
0x5c31	            0x7510	                           jne 0x4005c83	      6550	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_99
0x5c33	    0x488b05000000	            mov rax, qword [0x04005c7a] 	      6551	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_99
0x5c3a	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      6551	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_99
0x5c41	            0xeb15	                           jmp 0x4005c98	      6551	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_99
0x5c43	    0x488b05000000	            mov rax, qword [0x04005c8a] 	      6553	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	ELSE_53
0x5c4a	    0x488b80281700	          mov rax, qword [rax + 0x1728] 	      6553	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	ELSE_53
0x5c51	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      6553	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	ELSE_53
0x5c58	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      6554	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_100	CALL_85
0x5c5f	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6554	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_100	CALL_85
0x5c66	          0x4889d6	                            mov rsi, rdx	      6554	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_100	CALL_85
0x5c69	          0x4889c7	                            mov rdi, rax	      6554	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_100	CALL_85
0x5c6c	      0xe800000000	                          call 0x4005cb1	      6554	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_100	CALL_85
0x5c71	            0x85c0	                           test eax, eax	      6554	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_100	CALL_85
0x5c73	            0x7427	                            je 0x4005cdc	      6554	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_100	CALL_85
0x5c75	    0x488b95d0feff	            mov rdx, qword [rbp - 0x130]	      6555	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	CALL_86
0x5c7c	    0x488b05000000	            mov rax, qword [0x04005cc3] 	      6555	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	CALL_86
0x5c83	    0x488b88f81400	          mov rcx, qword [rax + 0x14f8] 	      6555	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	CALL_86
0x5c8a	    0x488b05000000	            mov rax, qword [0x04005cd1] 	      6555	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	CALL_86
0x5c91	          0x4889ce	                            mov rsi, rcx	      6555	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	CALL_86
0x5c94	          0x4889c7	                            mov rdi, rax	      6555	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	CALL_86
0x5c97	      0xe800000000	                          call 0x4005cdc	      6555	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	CALL_86
0x5c9c	    0x8b858cfeffff	            mov eax, dword [rbp - 0x174]	      6559	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_101	CALL_87
0x5ca2	          0x83e002	                              and eax, 2	      6559	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_101	CALL_87
0x5ca5	            0x85c0	                           test eax, eax	      6559	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_101	CALL_87
0x5ca7	     0xf845d1d0000	                            je 0x4007a4a	      6559	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_101	CALL_87
0x5cad	    0x488b05000000	            mov rax, qword [0x04005cf4] 	      6559	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_101	CALL_87
0x5cb4	    0x488b9598feff	            mov rdx, qword [rbp - 0x168]	      6559	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_101	CALL_87
0x5cbb	          0x4889d6	                            mov rsi, rdx	      6559	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_101	CALL_87
0x5cbe	          0x4889c7	                            mov rdi, rax	      6559	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_101	CALL_87
0x5cc1	      0xe800000000	                          call 0x4005d06	      6559	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_101	CALL_87
0x5cc6	            0x85c0	                           test eax, eax	      6559	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_101	CALL_87
0x5cc8	     0xf843c1d0000	                            je 0x4007a4a	      6559	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_101	CALL_87
0x5cce	    0x488b05000000	            mov rax, qword [0x04005d15] 	      6563	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_101	CALL_88
0x5cd5	    0x48898500ffff	            mov qword [rbp - 0x100], rax	      6563	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_101	CALL_88
0x5cdc	            0xeb5e	                           jmp 0x4005d7c	      6563	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_101	CALL_88
0x5cde	    0x488b05000000	            mov rax, qword [0x04005d25] 	      6564	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_101	IF_102
0x5ce5	    0x48398500ffff	           cmp qword [rbp - 0x100], rax 	      6564	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_101	IF_102
0x5cec	            0x743c	                            je 0x4005d6a	      6564	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_101	IF_102
0x5cee	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      6564	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_101	IF_102
0x5cf5	    0x488b80281700	          mov rax, qword [rax + 0x1728] 	      6564	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_101	IF_102
0x5cfc	           0xfb600	                   movzx eax, byte [rax]	      6564	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_101	IF_102
0x5cff	            0x84c0	                             test al, al	      6564	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_101	IF_102
0x5d01	            0x7527	                           jne 0x4005d6a	      6564	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_101	IF_102
0x5d03	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      6565	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_101	CALL_89
0x5d0a	    0x488b88f81400	          mov rcx, qword [rax + 0x14f8] 	      6565	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_101	CALL_89
0x5d11	    0x488b9598feff	            mov rdx, qword [rbp - 0x168]	      6565	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_101	CALL_89
0x5d18	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      6565	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_101	CALL_89
0x5d1f	          0x4889ce	                            mov rsi, rcx	      6565	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_101	CALL_89
0x5d22	          0x4889c7	                            mov rdi, rax	      6565	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_101	CALL_89
0x5d25	      0xe800000000	                          call 0x4005d6a	      6565	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_101	CALL_89
0x5d2a	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      6563	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_101	CALL_88
0x5d31	        0x488b4068	            mov rax, qword [rax + 0x68] 	      6563	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_101	CALL_88
0x5d35	    0x48898500ffff	            mov qword [rbp - 0x100], rax	      6563	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_101	CALL_88
0x5d3c	    0x4883bd00ffff	              cmp qword [rbp - 0x100], 0	      6563	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_101	CALL_88
0x5d44	            0x7598	                           jne 0x4005d1e	      6563	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_101	CALL_88
0x5d46	      0xe9bf1c0000	                           jmp 0x4007a4a	      6563	option.c	FUNCTION_41	ELSE_48	IF_91	ELSE_51	IF_101	CALL_88
0x5d4b	    0x4881bd18ffff	               cmp qword [rbp - 0xe8], 0	      6572	option.c	FUNCTION_41	ELSE_54	IF_103
0x5d56	     0xf850b020000	                           jne 0x4005fa7	      6572	option.c	FUNCTION_41	ELSE_54	IF_103
0x5d5c	    0x8b0500000000	            mov eax, dword [0x04005da2] 	      6575	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104
0x5d62	            0x85c0	                           test eax, eax	      6575	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104
0x5d64	     0xf8450010000	                            je 0x4005efa	      6575	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104
0x5d6a	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      6577	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3
0x5d71	          0x488b00	                    mov rax, qword [rax]	      6577	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3
0x5d74	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      6577	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3
0x5d7b	      0xe923010000	                           jmp 0x4005ee3	      6577	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3
0x5d80	    0xc785b8feffff	    mov dword [rbp - 0x148], 0xffffffff 	      6579	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3
0x5d8a	    0xc785bcfeffff	    mov dword [rbp - 0x144], 0xffffffff 	      6580	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3
0x5d94	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      6582	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_105
0x5d9b	           0xfb600	                   movzx eax, byte [rax]	      6582	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_105
0x5d9e	            0x84c0	                             test al, al	      6582	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_105
0x5da0	            0x7426	                            je 0x4005e08	      6582	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_105
0x5da2	    0x488b05000000	            mov rax, qword [0x04005de9] 	      6583	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	CALL_90
0x5da9	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      6583	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	CALL_90
0x5db0	          0x4889d7	                            mov rdi, rdx	      6583	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	CALL_90
0x5db3	            0xffd0	                                call rax	      6583	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	CALL_90
0x5db5	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      6583	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	CALL_90
0x5dbc	            0x4898	                                    cdqe	      6583	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	CALL_90
0x5dbe	          0x4801d0	                            add rax, rdx	      6583	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	CALL_90
0x5dc1	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      6583	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	CALL_90
0x5dc8	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      6584	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_106
0x5dcf	           0xfb600	                   movzx eax, byte [rax]	      6584	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_106
0x5dd2	            0x84c0	                             test al, al	      6584	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_106
0x5dd4	            0x741e	                            je 0x4005e34	      6584	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_106
0x5dd6	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      6585	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_106
0x5ddd	        0x488d5001	                      lea rdx, [rax + 1]	      6585	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_106
0x5de1	    0x488995d8feff	            mov qword [rbp - 0x128], rdx	      6585	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_106
0x5de8	           0xfb600	                   movzx eax, byte [rax]	      6585	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_106
0x5deb	           0xfb6c0	                           movzx eax, al	      6585	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_106
0x5dee	    0x8985b8feffff	            mov dword [rbp - 0x148], eax	      6585	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_106
0x5df4	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      6586	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_107
0x5dfb	           0xfb600	                   movzx eax, byte [rax]	      6586	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_107
0x5dfe	            0x84c0	                             test al, al	      6586	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_107
0x5e00	            0x743f	                            je 0x4005e81	      6586	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_107
0x5e02	    0x488b05000000	            mov rax, qword [0x04005e49] 	      6588	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_107	CALL_91
0x5e09	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      6588	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_107	CALL_91
0x5e10	          0x4889d7	                            mov rdi, rdx	      6588	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_107	CALL_91
0x5e13	            0xffd0	                                call rax	      6588	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_107	CALL_91
0x5e15	    0x8985bcfeffff	            mov dword [rbp - 0x144], eax	      6588	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_107	CALL_91
0x5e1b	    0x488b05000000	            mov rax, qword [0x04005e62] 	      6589	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_107	CALL_92
0x5e22	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      6589	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_107	CALL_92
0x5e29	          0x4889d7	                            mov rdi, rdx	      6589	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_107	CALL_92
0x5e2c	            0xffd0	                                call rax	      6589	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_107	CALL_92
0x5e2e	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      6589	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_107	CALL_92
0x5e35	            0x4898	                                    cdqe	      6589	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_107	CALL_92
0x5e37	          0x4801d0	                            add rax, rdx	      6589	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_107	CALL_92
0x5e3a	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      6589	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_107	CALL_92
0x5e41	    0x83bdb8feffff	          cmp dword [rbp - 0x148], 0x3a 	      6591	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_108
0x5e48	            0x7525	                           jne 0x4005eaf	      6591	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_108
0x5e4a	    0x83bdbcfeffff	cmp dword [rbp - 0x144], 0xffffffffffffffff	      6591	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_108
0x5e51	            0x741c	                            je 0x4005eaf	      6591	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_108
0x5e53	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      6591	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_108
0x5e5a	           0xfb600	                   movzx eax, byte [rax]	      6591	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_108
0x5e5d	            0x84c0	                             test al, al	      6591	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_108
0x5e5f	            0x741e	                            je 0x4005ebf	      6591	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_108
0x5e61	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      6591	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_108
0x5e68	           0xfb600	                   movzx eax, byte [rax]	      6591	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_108
0x5e6b	            0x3c2c	                            cmp al, 0x2c	      6591	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_108
0x5e6d	            0x7410	                            je 0x4005ebf	      6591	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_108
0x5e6f	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6593	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_108
0x5e7a	      0xe98b1b0000	                           jmp 0x4007a4a	      6594	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_108
0x5e7f	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      6596	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_109
0x5e86	           0xfb600	                   movzx eax, byte [rax]	      6596	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_109
0x5e89	            0x84c0	                             test al, al	      6596	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_109
0x5e8b	     0xf84661b0000	                            je 0x4007a37	      6596	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_109
0x5e91	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      6577	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3
0x5e98	        0x4883c001	                              add rax, 1	      6577	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3
0x5e9c	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      6577	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3
0x5ea3	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      6577	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3
0x5eaa	           0xfb600	                   movzx eax, byte [rax]	      6577	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3
0x5ead	            0x84c0	                             test al, al	      6577	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3
0x5eaf	     0xf85cbfeffff	                           jne 0x4005dc0	      6577	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3
0x5eb5	      0xe9501b0000	                           jmp 0x4007a4a	      6577	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3
0x5eba	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      6604	option.c	FUNCTION_41	ELSE_54	IF_103	ELSE_55	FOR_4
0x5ec1	          0x488b00	                    mov rax, qword [rax]	      6604	option.c	FUNCTION_41	ELSE_54	IF_103	ELSE_55	FOR_4
0x5ec4	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      6604	option.c	FUNCTION_41	ELSE_54	IF_103	ELSE_55	FOR_4
0x5ecb	      0xe980000000	                           jmp 0x4005f90	      6604	option.c	FUNCTION_41	ELSE_54	IF_103	ELSE_55	FOR_4
0x5ed0	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      6606	option.c	FUNCTION_41	ELSE_54	IF_103	ELSE_55	FOR_4	IF_110
0x5ed7	        0x4883c001	                              add rax, 1	      6606	option.c	FUNCTION_41	ELSE_54	IF_103	ELSE_55	FOR_4	IF_110
0x5edb	           0xfb600	                   movzx eax, byte [rax]	      6606	option.c	FUNCTION_41	ELSE_54	IF_103	ELSE_55	FOR_4	IF_110
0x5ede	            0x3c3a	                            cmp al, 0x3a	      6606	option.c	FUNCTION_41	ELSE_54	IF_103	ELSE_55	FOR_4	IF_110
0x5ee0	            0x7536	                           jne 0x4005f58	      6606	option.c	FUNCTION_41	ELSE_54	IF_103	ELSE_55	FOR_4	IF_110
0x5ee2	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      6606	option.c	FUNCTION_41	ELSE_54	IF_103	ELSE_55	FOR_4	IF_110
0x5ee9	        0x4883c002	                              add rax, 2	      6606	option.c	FUNCTION_41	ELSE_54	IF_103	ELSE_55	FOR_4	IF_110
0x5eed	           0xfb600	                   movzx eax, byte [rax]	      6606	option.c	FUNCTION_41	ELSE_54	IF_103	ELSE_55	FOR_4	IF_110
0x5ef0	            0x84c0	                             test al, al	      6606	option.c	FUNCTION_41	ELSE_54	IF_103	ELSE_55	FOR_4	IF_110
0x5ef2	            0x7424	                            je 0x4005f58	      6606	option.c	FUNCTION_41	ELSE_54	IF_103	ELSE_55	FOR_4	IF_110
0x5ef4	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      6606	option.c	FUNCTION_41	ELSE_54	IF_103	ELSE_55	FOR_4	IF_110
0x5efb	        0x4883c003	                              add rax, 3	      6606	option.c	FUNCTION_41	ELSE_54	IF_103	ELSE_55	FOR_4	IF_110
0x5eff	           0xfb600	                   movzx eax, byte [rax]	      6606	option.c	FUNCTION_41	ELSE_54	IF_103	ELSE_55	FOR_4	IF_110
0x5f02	            0x84c0	                             test al, al	      6606	option.c	FUNCTION_41	ELSE_54	IF_103	ELSE_55	FOR_4	IF_110
0x5f04	            0x7422	                            je 0x4005f68	      6606	option.c	FUNCTION_41	ELSE_54	IF_103	ELSE_55	FOR_4	IF_110
0x5f06	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      6606	option.c	FUNCTION_41	ELSE_54	IF_103	ELSE_55	FOR_4	IF_110
0x5f0d	        0x4883c003	                              add rax, 3	      6606	option.c	FUNCTION_41	ELSE_54	IF_103	ELSE_55	FOR_4	IF_110
0x5f11	           0xfb600	                   movzx eax, byte [rax]	      6606	option.c	FUNCTION_41	ELSE_54	IF_103	ELSE_55	FOR_4	IF_110
0x5f14	            0x3c2c	                            cmp al, 0x2c	      6606	option.c	FUNCTION_41	ELSE_54	IF_103	ELSE_55	FOR_4	IF_110
0x5f16	            0x7410	                            je 0x4005f68	      6606	option.c	FUNCTION_41	ELSE_54	IF_103	ELSE_55	FOR_4	IF_110
0x5f18	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6608	option.c	FUNCTION_41	ELSE_54	IF_103	ELSE_55	FOR_4	IF_110
0x5f23	      0xe9e21a0000	                           jmp 0x4007a4a	      6609	option.c	FUNCTION_41	ELSE_54	IF_103	ELSE_55	FOR_4	IF_110
0x5f28	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      6611	option.c	FUNCTION_41	ELSE_54	IF_103	ELSE_55	FOR_4	IF_111
0x5f2f	        0x4883c003	                              add rax, 3	      6611	option.c	FUNCTION_41	ELSE_54	IF_103	ELSE_55	FOR_4	IF_111
0x5f33	           0xfb600	                   movzx eax, byte [rax]	      6611	option.c	FUNCTION_41	ELSE_54	IF_103	ELSE_55	FOR_4	IF_111
0x5f36	            0x84c0	                             test al, al	      6611	option.c	FUNCTION_41	ELSE_54	IF_103	ELSE_55	FOR_4	IF_111
0x5f38	     0xf84bc1a0000	                            je 0x4007a3a	      6611	option.c	FUNCTION_41	ELSE_54	IF_103	ELSE_55	FOR_4	IF_111
0x5f3e	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      6604	option.c	FUNCTION_41	ELSE_54	IF_103	ELSE_55	FOR_4
0x5f45	        0x4883c004	                              add rax, 4	      6604	option.c	FUNCTION_41	ELSE_54	IF_103	ELSE_55	FOR_4
0x5f49	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      6604	option.c	FUNCTION_41	ELSE_54	IF_103	ELSE_55	FOR_4
0x5f50	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      6604	option.c	FUNCTION_41	ELSE_54	IF_103	ELSE_55	FOR_4
0x5f57	           0xfb600	                   movzx eax, byte [rax]	      6604	option.c	FUNCTION_41	ELSE_54	IF_103	ELSE_55	FOR_4
0x5f5a	            0x84c0	                             test al, al	      6604	option.c	FUNCTION_41	ELSE_54	IF_103	ELSE_55	FOR_4
0x5f5c	     0xf856effffff	                           jne 0x4005f10	      6604	option.c	FUNCTION_41	ELSE_54	IF_103	ELSE_55	FOR_4
0x5f62	      0xe9a31a0000	                           jmp 0x4007a4a	      6604	option.c	FUNCTION_41	ELSE_54	IF_103	ELSE_55	FOR_4
0x5f67	    0x4881bd18ffff	               cmp qword [rbp - 0xe8], 0	      6619	option.c	FUNCTION_41	ELSE_56	IF_112
0x5f72	     0xf859a010000	                           jne 0x4006152	      6619	option.c	FUNCTION_41	ELSE_56	IF_112
0x5f78	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      6621	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5
0x5f7f	          0x488b00	                    mov rax, qword [rax]	      6621	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5
0x5f82	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      6621	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5
0x5f89	      0xe96d010000	                           jmp 0x400613b	      6621	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5
0x5f8e	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6625	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_93
0x5f95	           0xfb600	                   movzx eax, byte [rax]	      6625	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_93
0x5f98	           0xfb6c0	                           movzx eax, al	      6625	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_93
0x5f9b	            0x89c6	                            mov esi, eax	      6625	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_93
0x5f9d	      0xbf00000000	                              mov edi, 0	      6625	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_93
0x5fa2	      0xe800000000	                          call 0x4005fe7	      6625	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_93
0x5fa7	          0x4885c0	                           test rax, rax	      6625	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_93
0x5faa	            0x754a	                           jne 0x4006036	      6625	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_93
0x5fac	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6626	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_94
0x5fb3	           0xfb600	                   movzx eax, byte [rax]	      6626	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_94
0x5fb6	           0xfb6c0	                           movzx eax, al	      6626	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_94
0x5fb9	          0x83e830	                           sub eax, 0x30	      6626	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_94
0x5fbc	          0x83f809	                              cmp eax, 9	      6626	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_94
0x5fbf	            0x7635	                           jbe 0x4006036	      6626	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_94
0x5fc1	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6626	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_94
0x5fc8	           0xfb600	                   movzx eax, byte [rax]	      6626	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_94
0x5fcb	            0x3c2d	                            cmp al, 0x2d	      6626	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_94
0x5fcd	            0x7427	                            je 0x4006036	      6626	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_94
0x5fcf	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6628	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_95
0x5fd6	           0xfb600	                   movzx eax, byte [rax]	      6628	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_95
0x5fd9	           0xfb6d0	                           movzx edx, al	      6628	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_95
0x5fdc	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      6628	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_95
0x5fe3	            0x89d6	                            mov esi, edx	      6628	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_95
0x5fe5	          0x4889c7	                            mov rdi, rax	      6628	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_95
0x5fe8	      0xe879d9ffff	                   call sym.illegal_char	      6628	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_95
0x5fed	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      6628	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113	CALL_95
0x5ff4	            0xeb32	                           jmp 0x4006068	      6629	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_1	IF_113
0x5ff6	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6631	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_1
0x5ffd	        0x4883c001	                              add rax, 1	      6631	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_1
0x6001	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      6631	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_1
0x6008	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6623	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_1
0x600f	           0xfb600	                   movzx eax, byte [rax]	      6623	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_1
0x6012	            0x84c0	                             test al, al	      6623	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_1
0x6014	            0x7412	                            je 0x4006068	      6623	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_1
0x6016	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6623	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_1
0x601d	           0xfb600	                   movzx eax, byte [rax]	      6623	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_1
0x6020	            0x3c3a	                            cmp al, 0x3a	      6623	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_1
0x6022	     0xf8566ffffff	                           jne 0x4005fce	      6623	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_1
0x6028	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6633	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	IF_114
0x602f	        0x488d5001	                      lea rdx, [rax + 1]	      6633	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	IF_114
0x6033	    0x488995d0feff	            mov qword [rbp - 0x130], rdx	      6633	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	IF_114
0x603a	           0xfb600	                   movzx eax, byte [rax]	      6633	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	IF_114
0x603d	            0x84c0	                             test al, al	      6633	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	IF_114
0x603f	            0x750d	                           jne 0x400608e	      6633	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	IF_114
0x6041	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6634	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	CALL_96
0x604c	            0xeb27	                           jmp 0x40060b5	      6634	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	CALL_96
0x604e	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6635	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	ELSE_57	IF_115
0x6055	           0xfb600	                   movzx eax, byte [rax]	      6635	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	ELSE_57	IF_115
0x6058	            0x3c2c	                            cmp al, 0x2c	      6635	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	ELSE_57	IF_115
0x605a	            0x740e	                            je 0x40060aa	      6635	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	ELSE_57	IF_115
0x605c	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6635	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	ELSE_57	IF_115
0x6063	           0xfb600	                   movzx eax, byte [rax]	      6635	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	ELSE_57	IF_115
0x6066	            0x84c0	                             test al, al	      6635	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	ELSE_57	IF_115
0x6068	            0x750b	                           jne 0x40060b5	      6635	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	ELSE_57	IF_115
0x606a	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6636	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	ELSE_57	IF_115
0x6075	    0x4883bde0feff	              cmp qword [rbp - 0x120], 0	      6637	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	IF_116
0x607d	     0xf857a190000	                           jne 0x4007a3d	      6637	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	IF_116
0x6083	            0xeb44	                           jmp 0x4006109	      6639	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_2
0x6085	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6641	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_2	IF_117
0x608c	           0xfb600	                   movzx eax, byte [rax]	      6641	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_2	IF_117
0x608f	            0x3c5c	                            cmp al, 0x5c	      6641	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_2	IF_117
0x6091	            0x7524	                           jne 0x40060f7	      6641	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_2	IF_117
0x6093	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6641	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_2	IF_117
0x609a	        0x4883c001	                              add rax, 1	      6641	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_2	IF_117
0x609e	           0xfb600	                   movzx eax, byte [rax]	      6641	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_2	IF_117
0x60a1	            0x84c0	                             test al, al	      6641	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_2	IF_117
0x60a3	            0x7412	                            je 0x40060f7	      6641	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_2	IF_117
0x60a5	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6642	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_2	IF_117
0x60ac	        0x4883c001	                              add rax, 1	      6642	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_2	IF_117
0x60b0	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      6642	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_2	IF_117
0x60b7	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6643	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_2
0x60be	        0x4883c001	                              add rax, 1	      6643	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_2
0x60c2	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      6643	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_2
0x60c9	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6639	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_2
0x60d0	           0xfb600	                   movzx eax, byte [rax]	      6639	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_2
0x60d3	            0x84c0	                             test al, al	      6639	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_2
0x60d5	            0x740e	                            je 0x4006125	      6639	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_2
0x60d7	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6639	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_2
0x60de	           0xfb600	                   movzx eax, byte [rax]	      6639	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_2
0x60e1	            0x3c2c	                            cmp al, 0x2c	      6639	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_2
0x60e3	            0x75a0	                           jne 0x40060c5	      6639	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	WHILE_2
0x60e5	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6645	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	CALL_98
0x60ec	          0x4889c7	                            mov rdi, rax	      6645	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	CALL_98
0x60ef	      0xe800000000	                          call 0x4006134	      6645	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	CALL_98
0x60f4	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      6645	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	CALL_98
0x60fb	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6621	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5
0x6102	           0xfb600	                   movzx eax, byte [rax]	      6621	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5
0x6105	            0x84c0	                             test al, al	      6621	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5
0x6107	     0xf85fbfeffff	                           jne 0x4006048	      6621	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5
0x610d	      0xe9f8180000	                           jmp 0x4007a4a	      6621	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5
0x6112	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      6651	option.c	FUNCTION_41	ELSE_58	IF_118
0x611d	            0x751b	                           jne 0x400617a	      6651	option.c	FUNCTION_41	ELSE_58	IF_118
0x611f	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      6653	option.c	FUNCTION_41	ELSE_58	IF_118	CALL_99
0x6126	          0x4889c7	                            mov rdi, rax	      6653	option.c	FUNCTION_41	ELSE_58	IF_118	CALL_99
0x6129	      0xe8aa200000	               call sym.set_chars_option	      6653	option.c	FUNCTION_41	ELSE_58	IF_118	CALL_99
0x612e	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      6653	option.c	FUNCTION_41	ELSE_58	IF_118	CALL_99
0x6135	      0xe9d0180000	                           jmp 0x4007a4a	      6653	option.c	FUNCTION_41	ELSE_58	IF_118	CALL_99
0x613a	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      6657	option.c	FUNCTION_41	ELSE_59	IF_119
0x6145	            0x751b	                           jne 0x40061a2	      6657	option.c	FUNCTION_41	ELSE_59	IF_119
0x6147	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      6659	option.c	FUNCTION_41	ELSE_59	IF_119	CALL_100
0x614e	          0x4889c7	                            mov rdi, rax	      6659	option.c	FUNCTION_41	ELSE_59	IF_119	CALL_100
0x6151	      0xe882200000	               call sym.set_chars_option	      6659	option.c	FUNCTION_41	ELSE_59	IF_119	CALL_100
0x6156	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      6659	option.c	FUNCTION_41	ELSE_59	IF_119	CALL_100
0x615d	      0xe9a8180000	                           jmp 0x4007a4a	      6659	option.c	FUNCTION_41	ELSE_59	IF_119	CALL_100
0x6162	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      6664	option.c	FUNCTION_41	ELSE_60	IF_120
0x616d	            0x7511	                           jne 0x40061c0	      6664	option.c	FUNCTION_41	ELSE_60	IF_120
0x616f	      0xe807d9ffff	                    call sym.check_cedit	      6666	option.c	FUNCTION_41	ELSE_60	IF_120	CALL_101
0x6174	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      6666	option.c	FUNCTION_41	ELSE_60	IF_120	CALL_101
0x617b	      0xe98a180000	                           jmp 0x4007a4a	      6666	option.c	FUNCTION_41	ELSE_60	IF_120	CALL_101
0x6180	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      6671	option.c	FUNCTION_41	ELSE_61	IF_121
0x618b	            0x7534	                           jne 0x4006201	      6671	option.c	FUNCTION_41	ELSE_61	IF_121
0x618d	      0xe800000000	                          call 0x40061d2	      6673	option.c	FUNCTION_41	ELSE_61	IF_121	CALL_102
0x6192	    0x488b05000000	            mov rax, qword [0x040061d9] 	      6674	option.c	FUNCTION_41	ELSE_61	IF_121	IF_122	CALL_103
0x6199	           0xfb600	                   movzx eax, byte [rax]	      6674	option.c	FUNCTION_41	ELSE_61	IF_121	IF_122	CALL_103
0x619c	            0x84c0	                             test al, al	      6674	option.c	FUNCTION_41	ELSE_61	IF_121	IF_122	CALL_103
0x619e	     0xf8466180000	                            je 0x4007a4a	      6674	option.c	FUNCTION_41	ELSE_61	IF_121	IF_122	CALL_103
0x61a4	      0xe800000000	                          call 0x40061e9	      6674	option.c	FUNCTION_41	ELSE_61	IF_121	IF_122	CALL_103
0x61a9	            0x85c0	                           test eax, eax	      6674	option.c	FUNCTION_41	ELSE_61	IF_121	IF_122	CALL_103
0x61ab	     0xf8559180000	                           jne 0x4007a4a	      6674	option.c	FUNCTION_41	ELSE_61	IF_121	IF_122	CALL_103
0x61b1	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6675	option.c	FUNCTION_41	ELSE_61	IF_121	IF_122
0x61bc	      0xe949180000	                           jmp 0x4007a4a	      6675	option.c	FUNCTION_41	ELSE_61	IF_121	IF_122
0x61c1	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      6680	option.c	FUNCTION_41	ELSE_62	IF_123
0x61cc	     0xf858a020000	                           jne 0x400649c	      6680	option.c	FUNCTION_41	ELSE_62	IF_123
0x61d2	    0x488b05000000	            mov rax, qword [0x04006219] 	      6682	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6
0x61d9	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      6682	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6
0x61e0	      0xe920020000	                           jmp 0x4006445	      6682	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6
0x61e5	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6685	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	IF_124	CALL_104
0x61ec	           0xfb600	                   movzx eax, byte [rax]	      6685	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	IF_124	CALL_104
0x61ef	           0xfb6c0	                           movzx eax, al	      6685	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	IF_124	CALL_104
0x61f2	            0x89c6	                            mov esi, eax	      6685	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	IF_124	CALL_104
0x61f4	      0xbf00000000	                              mov edi, 0	      6685	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	IF_124	CALL_104
0x61f9	      0xe800000000	                          call 0x400623e	      6685	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	IF_124	CALL_104
0x61fe	          0x4885c0	                           test rax, rax	      6685	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	IF_124	CALL_104
0x6201	            0x752a	                           jne 0x400626d	      6685	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	IF_124	CALL_104
0x6203	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6687	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	IF_124	CALL_105
0x620a	           0xfb600	                   movzx eax, byte [rax]	      6687	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	IF_124	CALL_105
0x620d	           0xfb6d0	                           movzx edx, al	      6687	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	IF_124	CALL_105
0x6210	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      6687	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	IF_124	CALL_105
0x6217	            0x89d6	                            mov esi, edx	      6687	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	IF_124	CALL_105
0x6219	          0x4889c7	                            mov rdi, rax	      6687	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	IF_124	CALL_105
0x621c	      0xe845d7ffff	                   call sym.illegal_char	      6687	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	IF_124	CALL_105
0x6221	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      6687	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	IF_124	CALL_105
0x6228	      0xe9ed010000	                           jmp 0x400645a	      6688	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	IF_124
0x622d	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6690	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	IF_125
0x6234	           0xfb600	                   movzx eax, byte [rax]	      6690	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	IF_125
0x6237	            0x3c6e	                            cmp al, 0x6e	      6690	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	IF_125
0x6239	     0xf84da010000	                            je 0x4006459	      6690	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	IF_125
0x623f	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6694	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_63	IF_126
0x6246	           0xfb600	                   movzx eax, byte [rax]	      6694	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_63	IF_126
0x6249	            0x3c72	                            cmp al, 0x72	      6694	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_63	IF_126
0x624b	            0x7538	                           jne 0x40062c5	      6694	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_63	IF_126
0x624d	              0x90	                                     nop	      6696	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_63	IF_126	WHILE_3
0x624e	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6696	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_63	IF_126	WHILE_3
0x6255	        0x4883c001	                              add rax, 1	      6696	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_63	IF_126	WHILE_3
0x6259	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      6696	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_63	IF_126	WHILE_3
0x6260	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6696	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_63	IF_126	WHILE_3
0x6267	           0xfb600	                   movzx eax, byte [rax]	      6696	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_63	IF_126	WHILE_3
0x626a	            0x84c0	                             test al, al	      6696	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_63	IF_126	WHILE_3
0x626c	     0xf843f010000	                            je 0x40063f1	      6696	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_63	IF_126	WHILE_3
0x6272	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6696	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_63	IF_126	WHILE_3
0x6279	           0xfb600	                   movzx eax, byte [rax]	      6696	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_63	IF_126	WHILE_3
0x627c	            0x3c2c	                            cmp al, 0x2c	      6696	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_63	IF_126	WHILE_3
0x627e	            0x75ce	                           jne 0x400628e	      6696	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_63	IF_126	WHILE_3
0x6280	      0xe92c010000	                           jmp 0x40063f1	      6696	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_63	IF_126	WHILE_3
0x6285	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6699	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_64	IF_127
0x628c	           0xfb600	                   movzx eax, byte [rax]	      6699	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_64	IF_127
0x628f	            0x3c25	                            cmp al, 0x25	      6699	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_64	IF_127
0x6291	            0x7530	                           jne 0x4006303	      6699	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_64	IF_127
0x6293	              0x90	                                     nop	      6702	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_64	IF_127	WHILE_4	CALL_106
0x6294	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6702	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_64	IF_127	WHILE_4	CALL_106
0x629b	        0x4883c001	                              add rax, 1	      6702	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_64	IF_127	WHILE_4	CALL_106
0x629f	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      6702	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_64	IF_127	WHILE_4	CALL_106
0x62a6	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6702	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_64	IF_127	WHILE_4	CALL_106
0x62ad	           0xfb600	                   movzx eax, byte [rax]	      6702	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_64	IF_127	WHILE_4	CALL_106
0x62b0	           0xfb6c0	                           movzx eax, al	      6702	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_64	IF_127	WHILE_4	CALL_106
0x62b3	            0x89c7	                            mov edi, eax	      6702	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_64	IF_127	WHILE_4	CALL_106
0x62b5	      0xe800000000	                          call 0x40062fa	      6702	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_64	IF_127	WHILE_4	CALL_106
0x62ba	            0x85c0	                           test eax, eax	      6702	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_64	IF_127	WHILE_4	CALL_106
0x62bc	            0x75d6	                           jne 0x40062d4	      6702	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_64	IF_127	WHILE_4	CALL_106
0x62be	      0xe9ee000000	                           jmp 0x40063f1	      6702	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_64	IF_127	WHILE_4	CALL_106
0x62c3	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6705	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_65	IF_128
0x62ca	           0xfb600	                   movzx eax, byte [rax]	      6705	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_65	IF_128
0x62cd	            0x3c21	                            cmp al, 0x21	      6705	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_65	IF_128
0x62cf	            0x741c	                            je 0x400632d	      6705	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_65	IF_128
0x62d1	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6705	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_65	IF_128
0x62d8	           0xfb600	                   movzx eax, byte [rax]	      6705	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_65	IF_128
0x62db	            0x3c68	                            cmp al, 0x68	      6705	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_65	IF_128
0x62dd	            0x740e	                            je 0x400632d	      6705	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_65	IF_128
0x62df	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6705	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_65	IF_128
0x62e6	           0xfb600	                   movzx eax, byte [rax]	      6705	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_65	IF_128
0x62e9	            0x3c63	                            cmp al, 0x63	      6705	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_65	IF_128
0x62eb	            0x7517	                           jne 0x4006344	      6705	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_65	IF_128
0x62ed	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6706	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_65	IF_128
0x62f4	        0x4883c001	                              add rax, 1	      6706	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_65	IF_128
0x62f8	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      6706	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_65	IF_128
0x62ff	      0xe9ad000000	                           jmp 0x40063f1	      6706	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_65	IF_128
0x6304	              0x90	                                     nop	      6709	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_66	WHILE_5	CALL_107
0x6305	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6709	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_66	WHILE_5	CALL_107
0x630c	        0x4883c001	                              add rax, 1	      6709	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_66	WHILE_5	CALL_107
0x6310	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      6709	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_66	WHILE_5	CALL_107
0x6317	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6709	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_66	WHILE_5	CALL_107
0x631e	           0xfb600	                   movzx eax, byte [rax]	      6709	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_66	WHILE_5	CALL_107
0x6321	           0xfb6c0	                           movzx eax, al	      6709	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_66	WHILE_5	CALL_107
0x6324	            0x89c7	                            mov edi, eax	      6709	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_66	WHILE_5	CALL_107
0x6326	      0xe800000000	                          call 0x400636b	      6709	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_66	WHILE_5	CALL_107
0x632b	            0x85c0	                           test eax, eax	      6709	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_66	WHILE_5	CALL_107
0x632d	            0x75d6	                           jne 0x4006345	      6709	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_66	WHILE_5	CALL_107
0x632f	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6712	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	CALL_108
0x6336	        0x4883e801	                              sub rax, 1	      6712	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	CALL_108
0x633a	           0xfb600	                   movzx eax, byte [rax]	      6712	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	CALL_108
0x633d	           0xfb6c0	                           movzx eax, al	      6712	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	CALL_108
0x6340	          0x83e830	                           sub eax, 0x30	      6712	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	CALL_108
0x6343	          0x83f809	                              cmp eax, 9	      6712	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	CALL_108
0x6346	            0x7669	                           jbe 0x40063f1	      6712	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	CALL_108
0x6348	    0x4883bd90feff	              cmp qword [rbp - 0x170], 0	      6714	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	IF_130
0x6350	            0x7452	                            je 0x40063e4	      6714	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	IF_130
0x6352	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6718	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	IF_130	CALL_111
0x6359	        0x4883e801	                              sub rax, 1	      6718	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	IF_130	CALL_111
0x635d	           0xfb600	                   movzx eax, byte [rax]	      6718	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	IF_130	CALL_111
0x6360	           0xfb6c0	                           movzx eax, al	      6716	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	IF_130	CALL_109
0x6363	            0x89c7	                            mov edi, eax	      6716	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	IF_130	CALL_109
0x6365	      0xe800000000	                          call 0x40063aa	      6716	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	IF_130	CALL_109
0x636a	          0x4889c3	                            mov rbx, rax	      6716	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	IF_130	CALL_109
0x636d	      0xbf00000000	                              mov edi, 0	      6717	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	IF_130	CALL_110
0x6372	      0xe800000000	                          call 0x40063b7	      6717	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	IF_130	CALL_110
0x6377	          0x4889c1	                            mov rcx, rax	      6717	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	IF_130	CALL_110
0x637a	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      6716	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	IF_130	CALL_109
0x6381	          0x4889da	                            mov rdx, rbx	      6716	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	IF_130	CALL_109
0x6384	          0x4889ce	                            mov rsi, rcx	      6716	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	IF_130	CALL_109
0x6387	          0x4889c7	                            mov rdi, rax	      6716	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	IF_130	CALL_109
0x638a	      0xb800000000	                              mov eax, 0	      6716	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	IF_130	CALL_109
0x638f	      0xe800000000	                          call 0x40063d4	      6716	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	IF_130	CALL_109
0x6394	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      6719	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	IF_130
0x639b	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      6719	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	IF_130
0x63a2	            0xeb76	                           jmp 0x400645a	      6723	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129
0x63a4	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6722	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129	ELSE_67
0x63af	            0xeb69	                           jmp 0x400645a	      6723	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_66	IF_129
0x63b1	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6726	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	IF_131
0x63b8	           0xfb600	                   movzx eax, byte [rax]	      6726	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	IF_131
0x63bb	            0x3c2c	                            cmp al, 0x2c	      6726	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	IF_131
0x63bd	            0x7514	                           jne 0x4006413	      6726	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	IF_131
0x63bf	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6727	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	IF_131
0x63c6	        0x4883c001	                              add rax, 1	      6727	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	IF_131
0x63ca	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      6727	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	IF_131
0x63d1	            0xeb32	                           jmp 0x4006445	      6727	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	IF_131
0x63d3	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6728	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_68	IF_132
0x63da	           0xfb600	                   movzx eax, byte [rax]	      6728	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_68	IF_132
0x63dd	            0x84c0	                             test al, al	      6728	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_68	IF_132
0x63df	            0x7424	                            je 0x4006445	      6728	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_68	IF_132
0x63e1	    0x4883bd90feff	              cmp qword [rbp - 0x170], 0	      6730	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_68	IF_132	IF_133
0x63e9	            0x740d	                            je 0x4006438	      6730	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_68	IF_132	IF_133
0x63eb	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6731	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_68	IF_132	CALL_112
0x63f6	            0xeb22	                           jmp 0x400645a	      6734	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_68	IF_132
0x63f8	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6733	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_68	IF_132	ELSE_69
0x6403	            0xeb15	                           jmp 0x400645a	      6734	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	ELSE_68	IF_132
0x6405	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6682	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6
0x640c	           0xfb600	                   movzx eax, byte [rax]	      6682	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6
0x640f	            0x84c0	                             test al, al	      6682	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6
0x6411	     0xf85cefdffff	                           jne 0x4006225	      6682	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6
0x6417	            0xeb01	                           jmp 0x400645a	      6682	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6
0x6419	              0x90	                                     nop	      6692	option.c	FUNCTION_41	ELSE_62	IF_123	FOR_6	IF_125
0x641a	    0x488b05000000	            mov rax, qword [0x04006461] 	      6737	option.c	FUNCTION_41	ELSE_62	IF_123	IF_134	CALL_113
0x6421	           0xfb600	                   movzx eax, byte [rax]	      6737	option.c	FUNCTION_41	ELSE_62	IF_123	IF_134	CALL_113
0x6424	            0x84c0	                             test al, al	      6737	option.c	FUNCTION_41	ELSE_62	IF_123	IF_134	CALL_113
0x6426	     0xf84de150000	                            je 0x4007a4a	      6737	option.c	FUNCTION_41	ELSE_62	IF_123	IF_134	CALL_113
0x642c	    0x4883bde0feff	              cmp qword [rbp - 0x120], 0	      6737	option.c	FUNCTION_41	ELSE_62	IF_123	IF_134	CALL_113
0x6434	     0xf85d0150000	                           jne 0x4007a4a	      6737	option.c	FUNCTION_41	ELSE_62	IF_123	IF_134	CALL_113
0x643a	      0xbf27000000	                           mov edi, 0x27	      6737	option.c	FUNCTION_41	ELSE_62	IF_123	IF_134	CALL_113
0x643f	      0xe800000000	                          call 0x4006484	      6737	option.c	FUNCTION_41	ELSE_62	IF_123	IF_134	CALL_113
0x6444	            0x85c0	                           test eax, eax	      6737	option.c	FUNCTION_41	ELSE_62	IF_123	IF_134	CALL_113
0x6446	     0xf89be150000	                           jns 0x4007a4a	      6737	option.c	FUNCTION_41	ELSE_62	IF_123	IF_134	CALL_113
0x644c	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6738	option.c	FUNCTION_41	ELSE_62	IF_123	CALL_114
0x6457	      0xe9ae150000	                           jmp 0x4007a4a	      6738	option.c	FUNCTION_41	ELSE_62	IF_123	CALL_114
0x645c	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	      6743	option.c	FUNCTION_41	ELSE_70	IF_135	CALL_115
0x6462	            0x4898	                                    cdqe	      6743	option.c	FUNCTION_41	ELSE_70	IF_135	CALL_115
0x6464	        0x48c1e006	                              shl rax, 6	      6743	option.c	FUNCTION_41	ELSE_70	IF_135	CALL_115
0x6468	    0x480500000000	                              add rax, 0	      6743	option.c	FUNCTION_41	ELSE_70	IF_135	CALL_115
0x646e	          0x4889c7	                            mov rdi, rax	      6743	option.c	FUNCTION_41	ELSE_70	IF_135	CALL_115
0x6471	      0xe8ce600000	                   call sym.istermoption	      6743	option.c	FUNCTION_41	ELSE_70	IF_135	CALL_115
0x6476	            0x85c0	                           test eax, eax	      6743	option.c	FUNCTION_41	ELSE_70	IF_135	CALL_115
0x6478	     0xf840f010000	                            je 0x40065cd	      6743	option.c	FUNCTION_41	ELSE_70	IF_135	CALL_115
0x647e	    0x8b0500000000	            mov eax, dword [0x040064c4] 	      6743	option.c	FUNCTION_41	ELSE_70	IF_135	CALL_115
0x6484	            0x85c0	                           test eax, eax	      6743	option.c	FUNCTION_41	ELSE_70	IF_135	CALL_115
0x6486	     0xf8401010000	                            je 0x40065cd	      6743	option.c	FUNCTION_41	ELSE_70	IF_135	CALL_115
0x648c	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      6746	option.c	FUNCTION_41	ELSE_70	IF_135	IF_136
0x6497	            0x756f	                           jne 0x4006548	      6746	option.c	FUNCTION_41	ELSE_70	IF_135	IF_136
0x6499	    0x488b05000000	            mov rax, qword [0x040064e0] 	      6748	option.c	FUNCTION_41	ELSE_70	IF_135	IF_136	CALL_116
0x64a0	          0x4889c7	                            mov rdi, rax	      6748	option.c	FUNCTION_41	ELSE_70	IF_135	IF_136	CALL_116
0x64a3	      0xe800000000	                          call 0x40064e8	      6748	option.c	FUNCTION_41	ELSE_70	IF_135	IF_136	CALL_116
0x64a8	    0x8985c4feffff	            mov dword [rbp - 0x13c], eax	      6748	option.c	FUNCTION_41	ELSE_70	IF_135	IF_136	CALL_116
0x64ae	    0x8b0500000000	            mov eax, dword [0x040064f4] 	      6753	option.c	FUNCTION_41	ELSE_70	IF_135	IF_136	IF_137
0x64b4	    0x3985c4feffff	           cmp dword [rbp - 0x13c], eax 	      6753	option.c	FUNCTION_41	ELSE_70	IF_135	IF_136	IF_137
0x64ba	            0x744c	                            je 0x4006548	      6753	option.c	FUNCTION_41	ELSE_70	IF_135	IF_136	IF_137
0x64bc	    0x8b85c4feffff	            mov eax, dword [rbp - 0x13c]	      6755	option.c	FUNCTION_41	ELSE_70	IF_135	IF_136	IF_137
0x64c2	    0x890500000000	            mov dword [0x04006508], eax 	      6755	option.c	FUNCTION_41	ELSE_70	IF_135	IF_136	IF_137
0x64c8	    0x8b0500000000	            mov eax, dword [0x0400650e] 	      6756	option.c	FUNCTION_41	ELSE_70	IF_135	IF_136	IF_137	IF_138
0x64ce	          0x83f801	                              cmp eax, 1	      6756	option.c	FUNCTION_41	ELSE_70	IF_135	IF_136	IF_137	IF_138
0x64d1	            0x7f26	                            jg 0x4006539	      6756	option.c	FUNCTION_41	ELSE_70	IF_135	IF_136	IF_137	IF_138
0x64d3	    0x83bda8feffff	              cmp dword [rbp - 0x158], 0	      6758	option.c	FUNCTION_41	ELSE_70	IF_135	IF_136	IF_137	IF_138	IF_139
0x64da	            0x740f	                            je 0x400652b	      6758	option.c	FUNCTION_41	ELSE_70	IF_135	IF_136	IF_137	IF_138	IF_139
0x64dc	    0x488b05000000	            mov rax, qword [0x04006523] 	      6759	option.c	FUNCTION_41	ELSE_70	IF_135	IF_136	IF_137	IF_138	CALL_117
0x64e3	          0x4889c7	                            mov rdi, rax	      6759	option.c	FUNCTION_41	ELSE_70	IF_135	IF_136	IF_137	IF_138	CALL_117
0x64e6	      0xe800000000	                          call 0x400652b	      6759	option.c	FUNCTION_41	ELSE_70	IF_135	IF_136	IF_137	IF_138	CALL_117
0x64eb	    0x488b05000000	            mov rax, qword [0x04006532] 	      6760	option.c	FUNCTION_41	ELSE_70	IF_135	IF_136	IF_137	IF_138
0x64f2	    0x488905000000	            mov qword [0x04006539], rax 	      6760	option.c	FUNCTION_41	ELSE_70	IF_135	IF_136	IF_137	IF_138
0x64f9	      0xbe00000000	                              mov esi, 0	      6763	option.c	FUNCTION_41	ELSE_70	IF_135	IF_136	IF_137	CALL_118
0x64fe	      0xbf01000000	                              mov edi, 1	      6763	option.c	FUNCTION_41	ELSE_70	IF_135	IF_136	IF_137	CALL_118
0x6503	      0xe800000000	                          call 0x4006548	      6763	option.c	FUNCTION_41	ELSE_70	IF_135	IF_136	IF_137	CALL_118
0x6508	      0xbf00000000	                              mov edi, 0	      6766	option.c	FUNCTION_41	ELSE_70	IF_135	CALL_119
0x650d	      0xe800000000	                          call 0x4006552	      6766	option.c	FUNCTION_41	ELSE_70	IF_135	CALL_119
0x6512	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      6767	option.c	FUNCTION_41	ELSE_70	IF_135	IF_140
0x651d	            0x7519	                           jne 0x4006578	      6767	option.c	FUNCTION_41	ELSE_70	IF_135	IF_140
0x651f	    0x488b05000000	            mov rax, qword [0x04006566] 	      6769	option.c	FUNCTION_41	ELSE_70	IF_135	IF_140	CALL_120
0x6526	          0x4889c7	                            mov rdi, rax	      6769	option.c	FUNCTION_41	ELSE_70	IF_135	IF_140	CALL_120
0x6529	      0xe800000000	                          call 0x400656e	      6769	option.c	FUNCTION_41	ELSE_70	IF_135	IF_140	CALL_120
0x652e	      0xbf32000000	                           mov edi, 0x32	      6770	option.c	FUNCTION_41	ELSE_70	IF_135	IF_140	CALL_121
0x6533	      0xe800000000	                          call 0x4006578	      6770	option.c	FUNCTION_41	ELSE_70	IF_135	IF_140	CALL_121
0x6538	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      6778	option.c	FUNCTION_41	ELSE_70	IF_135	IF_141
0x6543	     0xf85b7140000	                           jne 0x4007a40	      6778	option.c	FUNCTION_41	ELSE_70	IF_135	IF_141
0x6549	    0x8b0500000000	            mov eax, dword [0x0400658f] 	      6778	option.c	FUNCTION_41	ELSE_70	IF_135	IF_141
0x654f	            0x85c0	                           test eax, eax	      6778	option.c	FUNCTION_41	ELSE_70	IF_135	IF_141
0x6551	     0xf84a9140000	                            je 0x4007a40	      6778	option.c	FUNCTION_41	ELSE_70	IF_135	IF_141
0x6557	    0x488b05000000	            mov rax, qword [0x0400659e] 	      6780	option.c	FUNCTION_41	ELSE_70	IF_135	IF_141	IF_142
0x655e	           0xfb600	                   movzx eax, byte [rax]	      6780	option.c	FUNCTION_41	ELSE_70	IF_135	IF_141	IF_142
0x6561	            0x84c0	                             test al, al	      6780	option.c	FUNCTION_41	ELSE_70	IF_135	IF_141	IF_142
0x6563	            0x7514	                           jne 0x40065b9	      6780	option.c	FUNCTION_41	ELSE_70	IF_135	IF_141	IF_142
0x6565	    0x488b05000000	            mov rax, qword [0x040065ac] 	      6783	option.c	FUNCTION_41	ELSE_70	IF_135	IF_141	CALL_123
0x656c	          0x4889c7	                            mov rdi, rax	      6783	option.c	FUNCTION_41	ELSE_70	IF_135	IF_141	CALL_123
0x656f	      0xe800000000	                          call 0x40065b4	      6783	option.c	FUNCTION_41	ELSE_70	IF_135	IF_141	CALL_123
0x6574	      0xe987140000	                           jmp 0x4007a40	      6778	option.c	FUNCTION_41	ELSE_70	IF_135	IF_141
0x6579	    0x488b05000000	            mov rax, qword [0x040065c0] 	      6785	option.c	FUNCTION_41	ELSE_70	IF_135	IF_141	CALL_124
0x6580	          0x4889c7	                            mov rdi, rax	      6785	option.c	FUNCTION_41	ELSE_70	IF_135	IF_141	CALL_124
0x6583	      0xe800000000	                          call 0x40065c8	      6785	option.c	FUNCTION_41	ELSE_70	IF_135	IF_141	CALL_124
0x6588	      0xe973140000	                           jmp 0x4007a40	      6778	option.c	FUNCTION_41	ELSE_70	IF_135	IF_141
0x658d	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      6791	option.c	FUNCTION_41	ELSE_72	IF_143
0x6598	            0x7579	                           jne 0x4006653	      6791	option.c	FUNCTION_41	ELSE_72	IF_143
0x659a	    0x488b05000000	            mov rax, qword [0x040065e1] 	      6793	option.c	FUNCTION_41	ELSE_72	IF_143	FOR_7
0x65a1	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      6793	option.c	FUNCTION_41	ELSE_72	IF_143	FOR_7
0x65a8	            0xeb56	                           jmp 0x4006640	      6793	option.c	FUNCTION_41	ELSE_72	IF_143	FOR_7
0x65aa	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6795	option.c	FUNCTION_41	ELSE_72	IF_143	FOR_7	IF_144	CALL_125
0x65b1	          0x4889c7	                            mov rdi, rax	      6795	option.c	FUNCTION_41	ELSE_72	IF_143	FOR_7	IF_144	CALL_125
0x65b4	      0xe800000000	                          call 0x40065f9	      6795	option.c	FUNCTION_41	ELSE_72	IF_143	FOR_7	IF_144	CALL_125
0x65b9	          0x83f801	                              cmp eax, 1	      6795	option.c	FUNCTION_41	ELSE_72	IF_143	FOR_7	IF_144	CALL_125
0x65bc	            0x740b	                            je 0x4006609	      6795	option.c	FUNCTION_41	ELSE_72	IF_143	FOR_7	IF_144	CALL_125
0x65be	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6796	option.c	FUNCTION_41	ELSE_72	IF_143	FOR_7	CALL_126
0x65c9	    0x8b0500000000	            mov eax, dword [0x0400660f] 	      6797	option.c	FUNCTION_41	ELSE_72	IF_143	FOR_7	CALL_127
0x65cf	            0x85c0	                           test eax, eax	      6797	option.c	FUNCTION_41	ELSE_72	IF_143	FOR_7	CALL_127
0x65d1	            0x7415	                            je 0x4006628	      6797	option.c	FUNCTION_41	ELSE_72	IF_143	FOR_7	CALL_127
0x65d3	    0x488b05000000	            mov rax, qword [0x0400661a] 	      6797	option.c	FUNCTION_41	ELSE_72	IF_143	FOR_7	CALL_127
0x65da	    0x488b95d0feff	            mov rdx, qword [rbp - 0x130]	      6797	option.c	FUNCTION_41	ELSE_72	IF_143	FOR_7	CALL_127
0x65e1	          0x4889d7	                            mov rdi, rdx	      6797	option.c	FUNCTION_41	ELSE_72	IF_143	FOR_7	CALL_127
0x65e4	            0xffd0	                                call rax	      6797	option.c	FUNCTION_41	ELSE_72	IF_143	FOR_7	CALL_127
0x65e6	            0xeb05	                           jmp 0x400662d	      6797	option.c	FUNCTION_41	ELSE_72	IF_143	FOR_7	CALL_127
0x65e8	      0xb801000000	                              mov eax, 1	      6797	option.c	FUNCTION_41	ELSE_72	IF_143	FOR_7	CALL_127
0x65ed	    0x488b95d0feff	            mov rdx, qword [rbp - 0x130]	      6797	option.c	FUNCTION_41	ELSE_72	IF_143	FOR_7	CALL_127
0x65f4	            0x4898	                                    cdqe	      6797	option.c	FUNCTION_41	ELSE_72	IF_143	FOR_7	CALL_127
0x65f6	          0x4801d0	                            add rax, rdx	      6797	option.c	FUNCTION_41	ELSE_72	IF_143	FOR_7	CALL_127
0x65f9	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      6797	option.c	FUNCTION_41	ELSE_72	IF_143	FOR_7	CALL_127
0x6600	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6793	option.c	FUNCTION_41	ELSE_72	IF_143	FOR_7
0x6607	           0xfb600	                   movzx eax, byte [rax]	      6793	option.c	FUNCTION_41	ELSE_72	IF_143	FOR_7
0x660a	            0x84c0	                             test al, al	      6793	option.c	FUNCTION_41	ELSE_72	IF_143	FOR_7
0x660c	            0x759c	                           jne 0x40065ea	      6793	option.c	FUNCTION_41	ELSE_72	IF_143	FOR_7
0x660e	      0xe9f7130000	                           jmp 0x4007a4a	      6793	option.c	FUNCTION_41	ELSE_72	IF_143	FOR_7
0x6613	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      6869	option.c	FUNCTION_41	ELSE_79	IF_158
0x661e	            0x7516	                           jne 0x4006676	      6869	option.c	FUNCTION_41	ELSE_79	IF_158
0x6620	      0xbf02000000	                              mov edi, 2	      6870	option.c	FUNCTION_41	ELSE_79	IF_158
0x6625	      0xe800000000	                          call 0x400666a	      6870	option.c	FUNCTION_41	ELSE_79	IF_158
0x662a	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      6870	option.c	FUNCTION_41	ELSE_79	IF_158
0x6631	      0xe9d4130000	                           jmp 0x4007a4a	      6870	option.c	FUNCTION_41	ELSE_79	IF_158
0x6636	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      6883	option.c	FUNCTION_41	ELSE_81	IF_160
0x6641	            0x7511	                           jne 0x4006694	      6883	option.c	FUNCTION_41	ELSE_81	IF_160
0x6643	      0xe800000000	                          call 0x4006688	      6884	option.c	FUNCTION_41	ELSE_81	IF_160
0x6648	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      6884	option.c	FUNCTION_41	ELSE_81	IF_160
0x664f	      0xe9b6130000	                           jmp 0x4007a4a	      6884	option.c	FUNCTION_41	ELSE_81	IF_160
0x6654	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      6886	option.c	FUNCTION_41	ELSE_82	IF_161
0x665f	            0x7511	                           jne 0x40066b2	      6886	option.c	FUNCTION_41	ELSE_82	IF_161
0x6661	      0xe800000000	                          call 0x40066a6	      6887	option.c	FUNCTION_41	ELSE_82	IF_161
0x6666	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      6887	option.c	FUNCTION_41	ELSE_82	IF_161
0x666d	      0xe998130000	                           jmp 0x4007a4a	      6887	option.c	FUNCTION_41	ELSE_82	IF_161
0x6672	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      6893	option.c	FUNCTION_41	ELSE_83	IF_162
0x667d	            0x750a	                           jne 0x40066c9	      6893	option.c	FUNCTION_41	ELSE_83	IF_162
0x667f	      0xe87d9a0000	                    call sym.langmap_set	      6894	option.c	FUNCTION_41	ELSE_83	IF_162
0x6684	      0xe981130000	                           jmp 0x4007a4a	      6894	option.c	FUNCTION_41	ELSE_83	IF_162
0x6689	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      6899	option.c	FUNCTION_41	ELSE_84	IF_163
0x6694	            0x750a	                           jne 0x40066e0	      6899	option.c	FUNCTION_41	ELSE_84	IF_163
0x6696	      0xe8d6a30000	             call sym.fill_breakat_flags	      6900	option.c	FUNCTION_41	ELSE_84	IF_163
0x669b	      0xe96a130000	                           jmp 0x4007a4a	      6900	option.c	FUNCTION_41	ELSE_84	IF_163
0x66a0	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      6905	option.c	FUNCTION_41	ELSE_85	IF_164
0x66ab	            0x7411	                            je 0x40066fe	      6905	option.c	FUNCTION_41	ELSE_85	IF_164
0x66ad	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      6905	option.c	FUNCTION_41	ELSE_85	IF_164
0x66b8	     0xf859b000000	                           jne 0x4006799	      6905	option.c	FUNCTION_41	ELSE_85	IF_164
0x66be	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      6908	option.c	FUNCTION_41	ELSE_85	IF_164
0x66c9	            0x7507	                           jne 0x4006712	      6908	option.c	FUNCTION_41	ELSE_85	IF_164
0x66cb	      0xb802000000	                              mov eax, 2	      6908	option.c	FUNCTION_41	ELSE_85	IF_164
0x66d0	            0xeb05	                           jmp 0x4006717	      6908	option.c	FUNCTION_41	ELSE_85	IF_164
0x66d2	      0xb801000000	                              mov eax, 1	      6908	option.c	FUNCTION_41	ELSE_85	IF_164
0x66d7	    0x8985ccfeffff	            mov dword [rbp - 0x134], eax	      6908	option.c	FUNCTION_41	ELSE_85	IF_164
0x66dd	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      6911	option.c	FUNCTION_41	ELSE_85	IF_164	IF_165	CALL_153
0x66e4	          0x488b00	                    mov rax, qword [rax]	      6911	option.c	FUNCTION_41	ELSE_85	IF_164	IF_165	CALL_153
0x66e7	      0xbe25000000	                           mov esi, 0x25	      6911	option.c	FUNCTION_41	ELSE_85	IF_164	IF_165	CALL_153
0x66ec	          0x4889c7	                            mov rdi, rax	      6911	option.c	FUNCTION_41	ELSE_85	IF_164	IF_165	CALL_153
0x66ef	      0xe800000000	                          call 0x4006734	      6911	option.c	FUNCTION_41	ELSE_85	IF_164	IF_165	CALL_153
0x66f4	          0x4885c0	                           test rax, rax	      6911	option.c	FUNCTION_41	ELSE_85	IF_164	IF_165	CALL_153
0x66f7	            0x742b	                            je 0x4006764	      6911	option.c	FUNCTION_41	ELSE_85	IF_164	IF_165	CALL_153
0x66f9	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      6911	option.c	FUNCTION_41	ELSE_85	IF_164	IF_165	CALL_153
0x6700	          0x488b00	                    mov rax, qword [rax]	      6911	option.c	FUNCTION_41	ELSE_85	IF_164	IF_165	CALL_153
0x6703	          0x4889c7	                            mov rdi, rax	      6911	option.c	FUNCTION_41	ELSE_85	IF_164	IF_165	CALL_153
0x6706	      0xe800000000	                          call 0x400674b	      6911	option.c	FUNCTION_41	ELSE_85	IF_164	IF_165	CALL_153
0x670b	          0x4885c0	                           test rax, rax	      6911	option.c	FUNCTION_41	ELSE_85	IF_164	IF_165	CALL_153
0x670e	            0x7514	                           jne 0x4006764	      6911	option.c	FUNCTION_41	ELSE_85	IF_164	IF_165	CALL_153
0x6710	    0x8b0500000000	            mov eax, dword [0x04006756] 	      6912	option.c	FUNCTION_41	ELSE_85	IF_164	IF_165
0x6716	     0xb85ccfeffff	             or eax, dword [rbp - 0x134]	      6912	option.c	FUNCTION_41	ELSE_85	IF_164	IF_165
0x671c	    0x890500000000	            mov dword [0x04006762], eax 	      6912	option.c	FUNCTION_41	ELSE_85	IF_164	IF_165
0x6722	            0xeb18	                           jmp 0x400677c	      6912	option.c	FUNCTION_41	ELSE_85	IF_164	IF_165
0x6724	    0x8b85ccfeffff	            mov eax, dword [rbp - 0x134]	      6914	option.c	FUNCTION_41	ELSE_85	IF_164	ELSE_86
0x672a	            0xf7d0	                                 not eax	      6914	option.c	FUNCTION_41	ELSE_85	IF_164	ELSE_86
0x672c	            0x89c2	                            mov edx, eax	      6914	option.c	FUNCTION_41	ELSE_85	IF_164	ELSE_86
0x672e	    0x8b0500000000	            mov eax, dword [0x04006774] 	      6914	option.c	FUNCTION_41	ELSE_85	IF_164	ELSE_86
0x6734	            0x21d0	                            and eax, edx	      6914	option.c	FUNCTION_41	ELSE_85	IF_164	ELSE_86
0x6736	    0x890500000000	            mov dword [0x0400677c], eax 	      6914	option.c	FUNCTION_41	ELSE_85	IF_164	ELSE_86
0x673c	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      6916	option.c	FUNCTION_41	ELSE_85	IF_164	CALL_154
0x6747	           0xf94c0	                                 sete al	      6916	option.c	FUNCTION_41	ELSE_85	IF_164	CALL_154
0x674a	           0xfb6c0	                           movzx eax, al	      6916	option.c	FUNCTION_41	ELSE_85	IF_164	CALL_154
0x674d	            0x89c7	                            mov edi, eax	      6916	option.c	FUNCTION_41	ELSE_85	IF_164	CALL_154
0x674f	      0xe885d3ffff	                  call sym.did_set_title	      6916	option.c	FUNCTION_41	ELSE_85	IF_164	CALL_154
0x6754	      0xe9b1120000	                           jmp 0x4007a4a	      6906	option.c	FUNCTION_41	ELSE_85	IF_164
0x6759	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      6946	option.c	FUNCTION_41	ELSE_90	IF_169
0x6764	            0x7557	                           jne 0x40067fd	      6946	option.c	FUNCTION_41	ELSE_90	IF_169
0x6766	      0xbf00000000	                              mov edi, 0	      6950	option.c	FUNCTION_41	ELSE_90	IF_169	CALL_156
0x676b	      0xe800000000	                          call 0x40067b0	      6950	option.c	FUNCTION_41	ELSE_90	IF_169	CALL_156
0x6770	    0x488b05000000	            mov rax, qword [0x040067b7] 	      6951	option.c	FUNCTION_41	ELSE_90	IF_169	IF_170	CALL_157
0x6777	      0xb900000000	                              mov ecx, 0	      6951	option.c	FUNCTION_41	ELSE_90	IF_169	IF_170	CALL_157
0x677c	      0xba00000000	                              mov edx, 0	      6951	option.c	FUNCTION_41	ELSE_90	IF_169	IF_170	CALL_157
0x6781	      0xbe00000000	                              mov esi, 0	      6951	option.c	FUNCTION_41	ELSE_90	IF_169	IF_170	CALL_157
0x6786	          0x4889c7	                            mov rdi, rax	      6951	option.c	FUNCTION_41	ELSE_90	IF_169	IF_170	CALL_157
0x6789	      0xe877a30000	              call sym.opt_strings_flags	      6951	option.c	FUNCTION_41	ELSE_90	IF_169	IF_170	CALL_157
0x678e	          0x83f801	                              cmp eax, 1	      6951	option.c	FUNCTION_41	ELSE_90	IF_169	IF_170	CALL_157
0x6791	            0x740d	                            je 0x40067e0	      6951	option.c	FUNCTION_41	ELSE_90	IF_169	IF_170	CALL_157
0x6793	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6952	option.c	FUNCTION_41	ELSE_90	IF_169	IF_170
0x679e	            0xeb05	                           jmp 0x40067e5	      6952	option.c	FUNCTION_41	ELSE_90	IF_169	IF_170
0x67a0	      0xe800000000	                          call 0x40067e5	      6954	option.c	FUNCTION_41	ELSE_90	IF_169	CALL_158
0x67a5	    0x8b0500000000	            mov eax, dword [0x040067eb] 	      6955	option.c	FUNCTION_41	ELSE_90	IF_169	IF_171
0x67ab	            0x85c0	                           test eax, eax	      6955	option.c	FUNCTION_41	ELSE_90	IF_169	IF_171
0x67ad	     0xf8457120000	                            je 0x4007a4a	      6955	option.c	FUNCTION_41	ELSE_90	IF_169	IF_171
0x67b3	      0xe800000000	                          call 0x40067f8	      6956	option.c	FUNCTION_41	ELSE_90	IF_169	CALL_159
0x67b8	      0xe94d120000	                           jmp 0x4007a4a	      6956	option.c	FUNCTION_41	ELSE_90	IF_169	CALL_159
0x67bd	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      6961	option.c	FUNCTION_41	ELSE_92	IF_172
0x67c8	            0x7540	                           jne 0x400684a	      6961	option.c	FUNCTION_41	ELSE_92	IF_172
0x67ca	    0x488b05000000	            mov rax, qword [0x04006811] 	      6963	option.c	FUNCTION_41	ELSE_92	IF_172	IF_173
0x67d1	           0xfb600	                   movzx eax, byte [rax]	      6963	option.c	FUNCTION_41	ELSE_92	IF_172	IF_173
0x67d4	            0x84c0	                             test al, al	      6963	option.c	FUNCTION_41	ELSE_92	IF_172	IF_173
0x67d6	            0x7422	                            je 0x400683a	      6963	option.c	FUNCTION_41	ELSE_92	IF_172	IF_173
0x67d8	    0x488b05000000	            mov rax, qword [0x0400681f] 	      6964	option.c	FUNCTION_41	ELSE_92	IF_172	IF_173	CALL_160
0x67df	      0xba00000000	                              mov edx, 0	      6964	option.c	FUNCTION_41	ELSE_92	IF_172	IF_173	CALL_160
0x67e4	      0xbe00000000	                              mov esi, 0	      6964	option.c	FUNCTION_41	ELSE_92	IF_172	IF_173	CALL_160
0x67e9	          0x4889c7	                            mov rdi, rax	      6964	option.c	FUNCTION_41	ELSE_92	IF_172	IF_173	CALL_160
0x67ec	      0xe8e5a20000	              call sym.check_opt_strings	      6964	option.c	FUNCTION_41	ELSE_92	IF_172	IF_173	CALL_160
0x67f1	          0x83f801	                              cmp eax, 1	      6964	option.c	FUNCTION_41	ELSE_92	IF_172	IF_173	CALL_160
0x67f4	     0xf8410120000	                            je 0x4007a4a	      6964	option.c	FUNCTION_41	ELSE_92	IF_172	IF_173	CALL_160
0x67fa	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6965	option.c	FUNCTION_41	ELSE_92	IF_172	IF_173
0x6805	      0xe900120000	                           jmp 0x4007a4a	      6965	option.c	FUNCTION_41	ELSE_92	IF_172	IF_173
0x680a	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      6969	option.c	FUNCTION_41	ELSE_93	IF_174
0x6815	            0x7532	                           jne 0x4006889	      6969	option.c	FUNCTION_41	ELSE_93	IF_174
0x6817	    0x488b05000000	            mov rax, qword [0x0400685e] 	      6971	option.c	FUNCTION_41	ELSE_93	IF_174	IF_175	CALL_161
0x681e	      0xba01000000	                              mov edx, 1	      6971	option.c	FUNCTION_41	ELSE_93	IF_174	IF_175	CALL_161
0x6823	      0xbe00000000	                              mov esi, 0	      6971	option.c	FUNCTION_41	ELSE_93	IF_174	IF_175	CALL_161
0x6828	          0x4889c7	                            mov rdi, rax	      6971	option.c	FUNCTION_41	ELSE_93	IF_174	IF_175	CALL_161
0x682b	      0xe8a6a20000	              call sym.check_opt_strings	      6971	option.c	FUNCTION_41	ELSE_93	IF_174	IF_175	CALL_161
0x6830	          0x83f801	                              cmp eax, 1	      6971	option.c	FUNCTION_41	ELSE_93	IF_174	IF_175	CALL_161
0x6833	     0xf84d1110000	                            je 0x4007a4a	      6971	option.c	FUNCTION_41	ELSE_93	IF_174	IF_175	CALL_161
0x6839	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6972	option.c	FUNCTION_41	ELSE_93	IF_174	IF_175
0x6844	      0xe9c1110000	                           jmp 0x4007a4a	      6972	option.c	FUNCTION_41	ELSE_93	IF_174	IF_175
0x6849	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      6986	option.c	FUNCTION_41	ELSE_95	IF_178
0x6854	            0x7579	                           jne 0x400690f	      6986	option.c	FUNCTION_41	ELSE_95	IF_178
0x6856	    0x488b05000000	            mov rax, qword [0x0400689d] 	      6988	option.c	FUNCTION_41	ELSE_95	IF_178	IF_179	CALL_164
0x685d	      0xba01000000	                              mov edx, 1	      6988	option.c	FUNCTION_41	ELSE_95	IF_178	IF_179	CALL_164
0x6862	      0xbe00000000	                              mov esi, 0	      6988	option.c	FUNCTION_41	ELSE_95	IF_178	IF_179	CALL_164
0x6867	          0x4889c7	                            mov rdi, rax	      6988	option.c	FUNCTION_41	ELSE_95	IF_178	IF_179	CALL_164
0x686a	      0xe867a20000	              call sym.check_opt_strings	      6988	option.c	FUNCTION_41	ELSE_95	IF_178	IF_179	CALL_164
0x686f	          0x83f801	                              cmp eax, 1	      6988	option.c	FUNCTION_41	ELSE_95	IF_178	IF_179	CALL_164
0x6872	            0x7410	                            je 0x40068c4	      6988	option.c	FUNCTION_41	ELSE_95	IF_178	IF_179	CALL_164
0x6874	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      6989	option.c	FUNCTION_41	ELSE_95	IF_178	IF_179
0x687f	      0xe986110000	                           jmp 0x4007a4a	      6989	option.c	FUNCTION_41	ELSE_95	IF_178	IF_179
0x6884	    0x488b05000000	            mov rax, qword [0x040068cb] 	      6992	option.c	FUNCTION_41	ELSE_95	IF_178	ELSE_96	CALL_165
0x688b	      0xbe6f000000	                           mov esi, 0x6f	      6992	option.c	FUNCTION_41	ELSE_95	IF_178	ELSE_96	CALL_165
0x6890	          0x4889c7	                            mov rdi, rax	      6992	option.c	FUNCTION_41	ELSE_95	IF_178	ELSE_96	CALL_165
0x6893	      0xe800000000	                          call 0x40068d8	      6992	option.c	FUNCTION_41	ELSE_95	IF_178	ELSE_96	CALL_165
0x6898	          0x4885c0	                           test rax, rax	      6992	option.c	FUNCTION_41	ELSE_95	IF_178	ELSE_96	CALL_165
0x689b	           0xf95c0	                                setne al	      6992	option.c	FUNCTION_41	ELSE_95	IF_178	ELSE_96	CALL_165
0x689e	           0xfb6c0	                           movzx eax, al	      6992	option.c	FUNCTION_41	ELSE_95	IF_178	ELSE_96	CALL_165
0x68a1	    0x890500000000	            mov dword [0x040068e7], eax 	      6992	option.c	FUNCTION_41	ELSE_95	IF_178	ELSE_96	CALL_165
0x68a7	    0x488b05000000	            mov rax, qword [0x040068ee] 	      6993	option.c	FUNCTION_41	ELSE_95	IF_178	ELSE_96	CALL_166
0x68ae	      0xbe61000000	                           mov esi, 0x61	      6993	option.c	FUNCTION_41	ELSE_95	IF_178	ELSE_96	CALL_166
0x68b3	          0x4889c7	                            mov rdi, rax	      6993	option.c	FUNCTION_41	ELSE_95	IF_178	ELSE_96	CALL_166
0x68b6	      0xe800000000	                          call 0x40068fb	      6993	option.c	FUNCTION_41	ELSE_95	IF_178	ELSE_96	CALL_166
0x68bb	          0x4885c0	                           test rax, rax	      6993	option.c	FUNCTION_41	ELSE_95	IF_178	ELSE_96	CALL_166
0x68be	           0xf95c0	                                setne al	      6993	option.c	FUNCTION_41	ELSE_95	IF_178	ELSE_96	CALL_166
0x68c1	           0xfb6c0	                           movzx eax, al	      6993	option.c	FUNCTION_41	ELSE_95	IF_178	ELSE_96	CALL_166
0x68c4	    0x890500000000	            mov dword [0x0400690a], eax 	      6993	option.c	FUNCTION_41	ELSE_95	IF_178	ELSE_96	CALL_166
0x68ca	      0xe93b110000	                           jmp 0x4007a4a	      6993	option.c	FUNCTION_41	ELSE_95	IF_178	ELSE_96	CALL_166
0x68cf	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      6998	option.c	FUNCTION_41	ELSE_97	IF_180
0x68da	            0x7532	                           jne 0x400694e	      6998	option.c	FUNCTION_41	ELSE_97	IF_180
0x68dc	    0x488b05000000	            mov rax, qword [0x04006923] 	      7000	option.c	FUNCTION_41	ELSE_97	IF_180	IF_181	CALL_167
0x68e3	      0xba00000000	                              mov edx, 0	      7000	option.c	FUNCTION_41	ELSE_97	IF_180	IF_181	CALL_167
0x68e8	      0xbe00000000	                              mov esi, 0	      7000	option.c	FUNCTION_41	ELSE_97	IF_180	IF_181	CALL_167
0x68ed	          0x4889c7	                            mov rdi, rax	      7000	option.c	FUNCTION_41	ELSE_97	IF_180	IF_181	CALL_167
0x68f0	      0xe8e1a10000	              call sym.check_opt_strings	      7000	option.c	FUNCTION_41	ELSE_97	IF_180	IF_181	CALL_167
0x68f5	          0x83f801	                              cmp eax, 1	      7000	option.c	FUNCTION_41	ELSE_97	IF_180	IF_181	CALL_167
0x68f8	     0xf840c110000	                            je 0x4007a4a	      7000	option.c	FUNCTION_41	ELSE_97	IF_180	IF_181	CALL_167
0x68fe	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7001	option.c	FUNCTION_41	ELSE_97	IF_180	IF_181
0x6909	      0xe9fc100000	                           jmp 0x4007a4a	      7001	option.c	FUNCTION_41	ELSE_97	IF_180	IF_181
0x690e	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      7011	option.c	FUNCTION_41	ELSE_99	IF_183
0x6919	            0x7537	                           jne 0x4006992	      7011	option.c	FUNCTION_41	ELSE_99	IF_183
0x691b	    0x488b05000000	            mov rax, qword [0x04006962] 	      7013	option.c	FUNCTION_41	ELSE_99	IF_183	IF_184	CALL_169
0x6922	      0xb901000000	                              mov ecx, 1	      7013	option.c	FUNCTION_41	ELSE_99	IF_183	IF_184	CALL_169
0x6927	      0xba00000000	                              mov edx, 0	      7013	option.c	FUNCTION_41	ELSE_99	IF_183	IF_184	CALL_169
0x692c	      0xbe00000000	                              mov esi, 0	      7013	option.c	FUNCTION_41	ELSE_99	IF_183	IF_184	CALL_169
0x6931	          0x4889c7	                            mov rdi, rax	      7013	option.c	FUNCTION_41	ELSE_99	IF_183	IF_184	CALL_169
0x6934	      0xe8cca10000	              call sym.opt_strings_flags	      7013	option.c	FUNCTION_41	ELSE_99	IF_183	IF_184	CALL_169
0x6939	          0x83f801	                              cmp eax, 1	      7013	option.c	FUNCTION_41	ELSE_99	IF_183	IF_184	CALL_169
0x693c	     0xf84c8100000	                            je 0x4007a4a	      7013	option.c	FUNCTION_41	ELSE_99	IF_183	IF_184	CALL_169
0x6942	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7014	option.c	FUNCTION_41	ELSE_99	IF_183	IF_184
0x694d	      0xe9b8100000	                           jmp 0x4007a4a	      7014	option.c	FUNCTION_41	ELSE_99	IF_183	IF_184
0x6952	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      7018	option.c	FUNCTION_41	ELSE_100	IF_185
0x695d	            0x7532	                           jne 0x40069d1	      7018	option.c	FUNCTION_41	ELSE_100	IF_185
0x695f	    0x488b05000000	            mov rax, qword [0x040069a6] 	      7020	option.c	FUNCTION_41	ELSE_100	IF_185	IF_186	CALL_170
0x6966	      0xba01000000	                              mov edx, 1	      7020	option.c	FUNCTION_41	ELSE_100	IF_185	IF_186	CALL_170
0x696b	      0xbe00000000	                              mov esi, 0	      7020	option.c	FUNCTION_41	ELSE_100	IF_185	IF_186	CALL_170
0x6970	          0x4889c7	                            mov rdi, rax	      7020	option.c	FUNCTION_41	ELSE_100	IF_185	IF_186	CALL_170
0x6973	      0xe85ea10000	              call sym.check_opt_strings	      7020	option.c	FUNCTION_41	ELSE_100	IF_185	IF_186	CALL_170
0x6978	          0x83f801	                              cmp eax, 1	      7020	option.c	FUNCTION_41	ELSE_100	IF_185	IF_186	CALL_170
0x697b	     0xf8489100000	                            je 0x4007a4a	      7020	option.c	FUNCTION_41	ELSE_100	IF_185	IF_186	CALL_170
0x6981	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7021	option.c	FUNCTION_41	ELSE_100	IF_185	IF_186
0x698c	      0xe979100000	                           jmp 0x4007a4a	      7021	option.c	FUNCTION_41	ELSE_100	IF_185	IF_186
0x6991	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      7025	option.c	FUNCTION_41	ELSE_101	IF_187
0x699c	            0x753d	                           jne 0x4006a1b	      7025	option.c	FUNCTION_41	ELSE_101	IF_187
0x699e	    0x488b05000000	            mov rax, qword [0x040069e5] 	      7027	option.c	FUNCTION_41	ELSE_101	IF_187	IF_188	CALL_171
0x69a5	      0xb901000000	                              mov ecx, 1	      7027	option.c	FUNCTION_41	ELSE_101	IF_187	IF_188	CALL_171
0x69aa	      0xba00000000	                              mov edx, 0	      7027	option.c	FUNCTION_41	ELSE_101	IF_187	IF_188	CALL_171
0x69af	      0xbe00000000	                              mov esi, 0	      7027	option.c	FUNCTION_41	ELSE_101	IF_187	IF_188	CALL_171
0x69b4	          0x4889c7	                            mov rdi, rax	      7027	option.c	FUNCTION_41	ELSE_101	IF_187	IF_188	CALL_171
0x69b7	      0xe849a10000	              call sym.opt_strings_flags	      7027	option.c	FUNCTION_41	ELSE_101	IF_187	IF_188	CALL_171
0x69bc	          0x83f801	                              cmp eax, 1	      7027	option.c	FUNCTION_41	ELSE_101	IF_187	IF_188	CALL_171
0x69bf	            0x7410	                            je 0x4006a11	      7027	option.c	FUNCTION_41	ELSE_101	IF_187	IF_188	CALL_171
0x69c1	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7028	option.c	FUNCTION_41	ELSE_101	IF_187	IF_188
0x69cc	      0xe939100000	                           jmp 0x4007a4a	      7028	option.c	FUNCTION_41	ELSE_101	IF_187	IF_188
0x69d1	      0xe800000000	                          call 0x4006a16	      7030	option.c	FUNCTION_41	ELSE_101	IF_187	CALL_172
0x69d6	      0xe92f100000	                           jmp 0x4007a4a	      7030	option.c	FUNCTION_41	ELSE_101	IF_187	CALL_172
0x69db	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      7035	option.c	FUNCTION_41	ELSE_103	IF_189
0x69e6	            0x7532	                           jne 0x4006a5a	      7035	option.c	FUNCTION_41	ELSE_103	IF_189
0x69e8	    0x488b05000000	            mov rax, qword [0x04006a2f] 	      7037	option.c	FUNCTION_41	ELSE_103	IF_189	IF_190	CALL_173
0x69ef	      0xba00000000	                              mov edx, 0	      7037	option.c	FUNCTION_41	ELSE_103	IF_189	IF_190	CALL_173
0x69f4	      0xbe00000000	                              mov esi, 0	      7037	option.c	FUNCTION_41	ELSE_103	IF_189	IF_190	CALL_173
0x69f9	          0x4889c7	                            mov rdi, rax	      7037	option.c	FUNCTION_41	ELSE_103	IF_189	IF_190	CALL_173
0x69fc	      0xe8d5a00000	              call sym.check_opt_strings	      7037	option.c	FUNCTION_41	ELSE_103	IF_189	IF_190	CALL_173
0x6a01	          0x83f801	                              cmp eax, 1	      7037	option.c	FUNCTION_41	ELSE_103	IF_189	IF_190	CALL_173
0x6a04	     0xf8400100000	                            je 0x4007a4a	      7037	option.c	FUNCTION_41	ELSE_103	IF_189	IF_190	CALL_173
0x6a0a	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7038	option.c	FUNCTION_41	ELSE_103	IF_189	IF_190
0x6a15	      0xe9f00f0000	                           jmp 0x4007a4a	      7038	option.c	FUNCTION_41	ELSE_103	IF_189	IF_190
0x6a1a	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      7043	option.c	FUNCTION_41	ELSE_104	IF_191
0x6a25	            0x7511	                           jne 0x4006a78	      7043	option.c	FUNCTION_41	ELSE_104	IF_191
0x6a27	      0xe8981c0000	         call sym.check_clipboard_option	      7044	option.c	FUNCTION_41	ELSE_104	IF_191
0x6a2c	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      7044	option.c	FUNCTION_41	ELSE_104	IF_191
0x6a33	      0xe9d20f0000	                           jmp 0x4007a4a	      7044	option.c	FUNCTION_41	ELSE_104	IF_191
0x6a38	    0x488b05000000	            mov rax, qword [0x04006a7f] 	      7050	option.c	FUNCTION_41	ELSE_105	IF_192
0x6a3f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7050	option.c	FUNCTION_41	ELSE_105	IF_192
0x6a43	    0x480580040000	                          add rax, 0x480	      7050	option.c	FUNCTION_41	ELSE_105	IF_192
0x6a49	    0x483b85a0feff	            cmp rax, qword [rbp - 0x160]	      7050	option.c	FUNCTION_41	ELSE_105	IF_192
0x6a50	            0x741a	                            je 0x4006aac	      7050	option.c	FUNCTION_41	ELSE_105	IF_192
0x6a52	    0x488b05000000	            mov rax, qword [0x04006a99] 	      7051	option.c	FUNCTION_41	ELSE_105	IF_192
0x6a59	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7051	option.c	FUNCTION_41	ELSE_105	IF_192
0x6a5d	    0x480578040000	                          add rax, 0x478	      7051	option.c	FUNCTION_41	ELSE_105	IF_192
0x6a63	    0x483b85a0feff	            cmp rax, qword [rbp - 0x160]	      7051	option.c	FUNCTION_41	ELSE_105	IF_192
0x6a6a	            0x7531	                           jne 0x4006add	      7051	option.c	FUNCTION_41	ELSE_105	IF_192
0x6a6c	    0x488b05000000	            mov rax, qword [0x04006ab3] 	      7053	option.c	FUNCTION_41	ELSE_105	IF_192	CALL_175
0x6a73	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7053	option.c	FUNCTION_41	ELSE_105	IF_192	CALL_175
0x6a77	    0x480578040000	                          add rax, 0x478	      7053	option.c	FUNCTION_41	ELSE_105	IF_192	CALL_175
0x6a7d	    0x483b85a0feff	            cmp rax, qword [rbp - 0x160]	      7053	option.c	FUNCTION_41	ELSE_105	IF_192	CALL_175
0x6a84	           0xf94c0	                                 sete al	      7053	option.c	FUNCTION_41	ELSE_105	IF_192	CALL_175
0x6a87	           0xfb6c0	                           movzx eax, al	      7053	option.c	FUNCTION_41	ELSE_105	IF_192	CALL_175
0x6a8a	            0x89c7	                            mov edi, eax	      7053	option.c	FUNCTION_41	ELSE_105	IF_192	CALL_175
0x6a8c	      0xe8051f0000	           call sym.did_set_spell_option	      7053	option.c	FUNCTION_41	ELSE_105	IF_192	CALL_175
0x6a91	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      7053	option.c	FUNCTION_41	ELSE_105	IF_192	CALL_175
0x6a98	      0xe96d0f0000	                           jmp 0x4007a4a	      7053	option.c	FUNCTION_41	ELSE_105	IF_192	CALL_175
0x6a9d	    0x488b05000000	            mov rax, qword [0x04006ae4] 	      7056	option.c	FUNCTION_41	ELSE_106	IF_193
0x6aa4	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7056	option.c	FUNCTION_41	ELSE_106	IF_193
0x6aa8	    0x480568040000	                          add rax, 0x468	      7056	option.c	FUNCTION_41	ELSE_106	IF_193
0x6aae	    0x483b85a0feff	            cmp rax, qword [rbp - 0x160]	      7056	option.c	FUNCTION_41	ELSE_106	IF_193
0x6ab5	            0x751f	                           jne 0x4006b16	      7056	option.c	FUNCTION_41	ELSE_106	IF_193
0x6ab7	    0x488b05000000	            mov rax, qword [0x04006afe] 	      7058	option.c	FUNCTION_41	ELSE_106	IF_193	CALL_176
0x6abe	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7058	option.c	FUNCTION_41	ELSE_106	IF_193	CALL_176
0x6ac2	          0x4889c7	                            mov rdi, rax	      7058	option.c	FUNCTION_41	ELSE_106	IF_193	CALL_176
0x6ac5	      0xe8a71f0000	               call sym.compile_cap_prog	      7058	option.c	FUNCTION_41	ELSE_106	IF_193	CALL_176
0x6aca	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      7058	option.c	FUNCTION_41	ELSE_106	IF_193	CALL_176
0x6ad1	      0xe9340f0000	                           jmp 0x4007a4a	      7058	option.c	FUNCTION_41	ELSE_106	IF_193	CALL_176
0x6ad6	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      7061	option.c	FUNCTION_41	ELSE_107	IF_194
0x6ae1	            0x751e	                           jne 0x4006b41	      7061	option.c	FUNCTION_41	ELSE_107	IF_194
0x6ae3	      0xe800000000	                          call 0x4006b28	      7063	option.c	FUNCTION_41	ELSE_107	IF_194	IF_195	CALL_177
0x6ae8	          0x83f801	                              cmp eax, 1	      7063	option.c	FUNCTION_41	ELSE_107	IF_194	IF_195	CALL_177
0x6aeb	     0xf84190f0000	                            je 0x4007a4a	      7063	option.c	FUNCTION_41	ELSE_107	IF_194	IF_195	CALL_177
0x6af1	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7064	option.c	FUNCTION_41	ELSE_107	IF_194	IF_195
0x6afc	      0xe9090f0000	                           jmp 0x4007a4a	      7064	option.c	FUNCTION_41	ELSE_107	IF_194	IF_195
0x6b01	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      7067	option.c	FUNCTION_41	ELSE_108	IF_196
0x6b0c	            0x751e	                           jne 0x4006b6c	      7067	option.c	FUNCTION_41	ELSE_108	IF_196
0x6b0e	      0xe800000000	                          call 0x4006b53	      7069	option.c	FUNCTION_41	ELSE_108	IF_196	IF_197	CALL_178
0x6b13	          0x83f801	                              cmp eax, 1	      7069	option.c	FUNCTION_41	ELSE_108	IF_196	IF_197	CALL_178
0x6b16	     0xf84ee0e0000	                            je 0x4007a4a	      7069	option.c	FUNCTION_41	ELSE_108	IF_196	IF_197	CALL_178
0x6b1c	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7070	option.c	FUNCTION_41	ELSE_108	IF_196	IF_197
0x6b27	      0xe9de0e0000	                           jmp 0x4007a4a	      7070	option.c	FUNCTION_41	ELSE_108	IF_196	IF_197
0x6b2c	    0x4881bd18ffff	               cmp qword [rbp - 0xe8], 0	      7075	option.c	FUNCTION_41	ELSE_109	IF_198
0x6b37	            0x7539	                           jne 0x4006bb2	      7075	option.c	FUNCTION_41	ELSE_109	IF_198
0x6b39	    0x488b05000000	            mov rax, qword [0x04006b80] 	      7077	option.c	FUNCTION_41	ELSE_109	IF_198	IF_199	CALL_179
0x6b40	    0x488b80f81300	          mov rax, qword [rax + 0x13f8] 	      7077	option.c	FUNCTION_41	ELSE_109	IF_198	IF_199	CALL_179
0x6b47	      0xba00000000	                              mov edx, 0	      7077	option.c	FUNCTION_41	ELSE_109	IF_198	IF_199	CALL_179
0x6b4c	      0xbe00000000	                              mov esi, 0	      7077	option.c	FUNCTION_41	ELSE_109	IF_198	IF_199	CALL_179
0x6b51	          0x4889c7	                            mov rdi, rax	      7077	option.c	FUNCTION_41	ELSE_109	IF_198	IF_199	CALL_179
0x6b54	      0xe87d9f0000	              call sym.check_opt_strings	      7077	option.c	FUNCTION_41	ELSE_109	IF_198	IF_199	CALL_179
0x6b59	          0x83f801	                              cmp eax, 1	      7077	option.c	FUNCTION_41	ELSE_109	IF_198	IF_199	CALL_179
0x6b5c	     0xf84a80e0000	                            je 0x4007a4a	      7077	option.c	FUNCTION_41	ELSE_109	IF_198	IF_199	CALL_179
0x6b62	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7078	option.c	FUNCTION_41	ELSE_109	IF_198	IF_199
0x6b6d	      0xe9980e0000	                           jmp 0x4007a4a	      7078	option.c	FUNCTION_41	ELSE_109	IF_198	IF_199
0x6b72	    0x4881bd18ffff	               cmp qword [rbp - 0xe8], 0	      7082	option.c	FUNCTION_41	ELSE_110	IF_200
0x6b7d	     0xf8592000000	                           jne 0x4006c55	      7082	option.c	FUNCTION_41	ELSE_110	IF_200
0x6b83	    0x488b05000000	            mov rax, qword [0x04006bca] 	      7084	option.c	FUNCTION_41	ELSE_110	IF_200	IF_201	CALL_180
0x6b8a	    0x488b80001400	          mov rax, qword [rax + 0x1400] 	      7084	option.c	FUNCTION_41	ELSE_110	IF_200	IF_201	CALL_180
0x6b91	      0xba00000000	                              mov edx, 0	      7084	option.c	FUNCTION_41	ELSE_110	IF_200	IF_201	CALL_180
0x6b96	      0xbe00000000	                              mov esi, 0	      7084	option.c	FUNCTION_41	ELSE_110	IF_200	IF_201	CALL_180
0x6b9b	          0x4889c7	                            mov rdi, rax	      7084	option.c	FUNCTION_41	ELSE_110	IF_200	IF_201	CALL_180
0x6b9e	      0xe8339f0000	              call sym.check_opt_strings	      7084	option.c	FUNCTION_41	ELSE_110	IF_200	IF_201	CALL_180
0x6ba3	          0x83f801	                              cmp eax, 1	      7084	option.c	FUNCTION_41	ELSE_110	IF_200	IF_201	CALL_180
0x6ba6	            0x7410	                            je 0x4006bf8	      7084	option.c	FUNCTION_41	ELSE_110	IF_200	IF_201	CALL_180
0x6ba8	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7085	option.c	FUNCTION_41	ELSE_110	IF_200	IF_201
0x6bb3	      0xe9520e0000	                           jmp 0x4007a4a	      7085	option.c	FUNCTION_41	ELSE_110	IF_200	IF_201
0x6bb8	    0x488b05000000	            mov rax, qword [0x04006bff] 	      7088	option.c	FUNCTION_41	ELSE_110	IF_200	ELSE_111	IF_202
0x6bbf	    0x8b80a4000000	            mov eax, dword [rax + 0xa4] 	      7088	option.c	FUNCTION_41	ELSE_110	IF_200	ELSE_111	IF_202
0x6bc5	            0x85c0	                           test eax, eax	      7088	option.c	FUNCTION_41	ELSE_110	IF_200	ELSE_111	IF_202
0x6bc7	            0x741b	                            je 0x4006c24	      7088	option.c	FUNCTION_41	ELSE_110	IF_200	ELSE_111	IF_202
0x6bc9	    0x488b05000000	            mov rax, qword [0x04006c10] 	      7090	option.c	FUNCTION_41	ELSE_110	IF_200	ELSE_111	IF_202
0x6bd0	    0xc78040010000	              mov dword [rax + 0x140], 1	      7090	option.c	FUNCTION_41	ELSE_110	IF_200	ELSE_111	IF_202
0x6bda	      0xbf0a000000	                            mov edi, 0xa	      7091	option.c	FUNCTION_41	ELSE_110	IF_200	ELSE_111	IF_202	CALL_181
0x6bdf	      0xe800000000	                          call 0x4006c24	      7091	option.c	FUNCTION_41	ELSE_110	IF_200	ELSE_111	IF_202	CALL_181
0x6be4	    0x488b05000000	            mov rax, qword [0x04006c2b] 	      7093	option.c	FUNCTION_41	ELSE_110	IF_200	ELSE_111
0x6beb	    0x488b15000000	            mov rdx, qword [0x04006c32] 	      7093	option.c	FUNCTION_41	ELSE_110	IF_200	ELSE_111
0x6bf2	    0x488b92001400	          mov rdx, qword [rdx + 0x1400] 	      7093	option.c	FUNCTION_41	ELSE_110	IF_200	ELSE_111
0x6bf9	           0xfb612	                   movzx edx, byte [rdx]	      7093	option.c	FUNCTION_41	ELSE_110	IF_200	ELSE_111
0x6bfc	          0x80fa68	                            cmp dl, 0x68	      7093	option.c	FUNCTION_41	ELSE_110	IF_200	ELSE_111
0x6bff	           0xf94c2	                                 sete dl	      7093	option.c	FUNCTION_41	ELSE_110	IF_200	ELSE_111
0x6c02	           0xfb6d2	                           movzx edx, dl	      7093	option.c	FUNCTION_41	ELSE_110	IF_200	ELSE_111
0x6c05	    0x899038170000	          mov dword [rax + 0x1738], edx 	      7093	option.c	FUNCTION_41	ELSE_110	IF_200	ELSE_111
0x6c0b	      0xe817dbffff	                  call sym.redraw_titles	      7095	option.c	FUNCTION_41	ELSE_110	IF_200	ELSE_111	CALL_182
0x6c10	      0xe9f50d0000	                           jmp 0x4007a4a	      7095	option.c	FUNCTION_41	ELSE_110	IF_200	ELSE_111	CALL_182
0x6c15	    0x4881bd18ffff	               cmp qword [rbp - 0xe8], 0	      7102	option.c	FUNCTION_41	ELSE_112	IF_203
0x6c20	            0x7411	                            je 0x4006c73	      7102	option.c	FUNCTION_41	ELSE_112	IF_203
0x6c22	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      7102	option.c	FUNCTION_41	ELSE_112	IF_203
0x6c2d	     0xf855b010000	                           jne 0x4006dce	      7102	option.c	FUNCTION_41	ELSE_112	IF_203
0x6c33	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      7106	option.c	FUNCTION_41	ELSE_112	IF_203	IF_204
0x6c3e	            0x750a	                           jne 0x4006c8a	      7106	option.c	FUNCTION_41	ELSE_112	IF_203	IF_204
0x6c40	    0xc70500000000	               mov dword [0x04006c8a], 0	      7107	option.c	FUNCTION_41	ELSE_112	IF_203	IF_204
0x6c4a	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      7108	option.c	FUNCTION_41	ELSE_112	IF_203
0x6c51	          0x488b00	                    mov rax, qword [rax]	      7108	option.c	FUNCTION_41	ELSE_112	IF_203
0x6c54	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      7108	option.c	FUNCTION_41	ELSE_112	IF_203
0x6c5b	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      7109	option.c	FUNCTION_41	ELSE_112	IF_203	IF_205
0x6c66	     0xf85b6000000	                           jne 0x4006d62	      7109	option.c	FUNCTION_41	ELSE_112	IF_203	IF_205
0x6c6c	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7109	option.c	FUNCTION_41	ELSE_112	IF_203	IF_205
0x6c73	           0xfb600	                   movzx eax, byte [rax]	      7109	option.c	FUNCTION_41	ELSE_112	IF_203	IF_205
0x6c76	            0x3c25	                            cmp al, 0x25	      7109	option.c	FUNCTION_41	ELSE_112	IF_203	IF_205
0x6c78	     0xf85a4000000	                           jne 0x4006d62	      7109	option.c	FUNCTION_41	ELSE_112	IF_203	IF_205
0x6c7e	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7112	option.c	FUNCTION_41	ELSE_112	IF_203	IF_205	IF_206
0x6c85	        0x4883c001	                              add rax, 1	      7112	option.c	FUNCTION_41	ELSE_112	IF_203	IF_205	IF_206
0x6c89	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      7112	option.c	FUNCTION_41	ELSE_112	IF_203	IF_205	IF_206
0x6c90	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7112	option.c	FUNCTION_41	ELSE_112	IF_203	IF_205	IF_206
0x6c97	           0xfb600	                   movzx eax, byte [rax]	      7112	option.c	FUNCTION_41	ELSE_112	IF_203	IF_205	IF_206
0x6c9a	            0x3c2d	                            cmp al, 0x2d	      7112	option.c	FUNCTION_41	ELSE_112	IF_203	IF_205	IF_206
0x6c9c	            0x7512	                           jne 0x4006cf0	      7112	option.c	FUNCTION_41	ELSE_112	IF_203	IF_205	IF_206
0x6c9e	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7113	option.c	FUNCTION_41	ELSE_112	IF_203	IF_205	IF_206
0x6ca5	        0x4883c001	                              add rax, 1	      7113	option.c	FUNCTION_41	ELSE_112	IF_203	IF_205	IF_206
0x6ca9	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      7113	option.c	FUNCTION_41	ELSE_112	IF_203	IF_205	IF_206
0x6cb0	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	      7114	option.c	FUNCTION_41	ELSE_112	IF_203	IF_205	CALL_183
0x6cb7	          0x4889c7	                            mov rdi, rax	      7114	option.c	FUNCTION_41	ELSE_112	IF_203	IF_205	CALL_183
0x6cba	      0xe800000000	                          call 0x4006cff	      7114	option.c	FUNCTION_41	ELSE_112	IF_203	IF_205	CALL_183
0x6cbf	    0x8985c8feffff	            mov dword [rbp - 0x138], eax	      7114	option.c	FUNCTION_41	ELSE_112	IF_203	IF_205	CALL_183
0x6cc5	    0x83bdc8feffff	              cmp dword [rbp - 0x138], 0	      7115	option.c	FUNCTION_41	ELSE_112	IF_203	IF_205	IF_207	CALL_184
0x6ccc	            0x743c	                            je 0x4006d4a	      7115	option.c	FUNCTION_41	ELSE_112	IF_203	IF_205	IF_207	CALL_184
0x6cce	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7115	option.c	FUNCTION_41	ELSE_112	IF_203	IF_205	IF_207	CALL_184
0x6cd5	           0xfb600	                   movzx eax, byte [rax]	      7115	option.c	FUNCTION_41	ELSE_112	IF_203	IF_205	IF_207	CALL_184
0x6cd8	            0x3c28	                            cmp al, 0x28	      7115	option.c	FUNCTION_41	ELSE_112	IF_203	IF_205	IF_207	CALL_184
0x6cda	            0x752e	                           jne 0x4006d4a	      7115	option.c	FUNCTION_41	ELSE_112	IF_203	IF_205	IF_207	CALL_184
0x6cdc	    0x488b05000000	            mov rax, qword [0x04006d23] 	      7115	option.c	FUNCTION_41	ELSE_112	IF_203	IF_205	IF_207	CALL_184
0x6ce3	          0x4889c7	                            mov rdi, rax	      7115	option.c	FUNCTION_41	ELSE_112	IF_203	IF_205	IF_207	CALL_184
0x6ce6	      0xe800000000	                          call 0x4006d2b	      7115	option.c	FUNCTION_41	ELSE_112	IF_203	IF_205	IF_207	CALL_184
0x6ceb	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      7115	option.c	FUNCTION_41	ELSE_112	IF_203	IF_205	IF_207	CALL_184
0x6cf2	    0x4883bde0feff	              cmp qword [rbp - 0x120], 0	      7115	option.c	FUNCTION_41	ELSE_112	IF_203	IF_205	IF_207	CALL_184
0x6cfa	            0x750e	                           jne 0x4006d4a	      7115	option.c	FUNCTION_41	ELSE_112	IF_203	IF_205	IF_207	CALL_184
0x6cfc	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      7116	option.c	FUNCTION_41	ELSE_112	IF_203	IF_205	IF_207
0x6d02	    0x890500000000	            mov dword [0x04006d48], eax 	      7116	option.c	FUNCTION_41	ELSE_112	IF_203	IF_205	IF_207
0x6d08	            0xeb5b	                           jmp 0x4006da5	      7115	option.c	FUNCTION_41	ELSE_112	IF_203	IF_205	IF_207	CALL_184
0x6d0a	    0x488b05000000	            mov rax, qword [0x04006d51] 	      7118	option.c	FUNCTION_41	ELSE_112	IF_203	IF_205	CALL_185
0x6d11	          0x4889c7	                            mov rdi, rax	      7118	option.c	FUNCTION_41	ELSE_112	IF_203	IF_205	CALL_185
0x6d14	      0xe800000000	                          call 0x4006d59	      7118	option.c	FUNCTION_41	ELSE_112	IF_203	IF_205	CALL_185
0x6d19	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      7118	option.c	FUNCTION_41	ELSE_112	IF_203	IF_205	CALL_185
0x6d20	            0xeb43	                           jmp 0x4006da5	      7115	option.c	FUNCTION_41	ELSE_112	IF_203	IF_205	IF_207	CALL_184
0x6d22	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      7121	option.c	FUNCTION_41	ELSE_112	IF_203	ELSE_114	IF_208
0x6d2d	            0x7420	                            je 0x4006d8f	      7121	option.c	FUNCTION_41	ELSE_112	IF_203	ELSE_114	IF_208
0x6d2f	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7121	option.c	FUNCTION_41	ELSE_112	IF_203	ELSE_114	IF_208
0x6d36	           0xfb600	                   movzx eax, byte [rax]	      7121	option.c	FUNCTION_41	ELSE_112	IF_203	ELSE_114	IF_208
0x6d39	            0x3c25	                            cmp al, 0x25	      7121	option.c	FUNCTION_41	ELSE_112	IF_203	ELSE_114	IF_208
0x6d3b	            0x7512	                           jne 0x4006d8f	      7121	option.c	FUNCTION_41	ELSE_112	IF_203	ELSE_114	IF_208
0x6d3d	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7121	option.c	FUNCTION_41	ELSE_112	IF_203	ELSE_114	IF_208
0x6d44	        0x4883c001	                              add rax, 1	      7121	option.c	FUNCTION_41	ELSE_112	IF_203	ELSE_114	IF_208
0x6d48	           0xfb600	                   movzx eax, byte [rax]	      7121	option.c	FUNCTION_41	ELSE_112	IF_203	ELSE_114	IF_208
0x6d4b	            0x3c21	                            cmp al, 0x21	      7121	option.c	FUNCTION_41	ELSE_112	IF_203	ELSE_114	IF_208
0x6d4d	            0x7416	                            je 0x4006da5	      7121	option.c	FUNCTION_41	ELSE_112	IF_203	ELSE_114	IF_208
0x6d4f	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7122	option.c	FUNCTION_41	ELSE_112	IF_203	ELSE_114	IF_208
0x6d56	          0x4889c7	                            mov rdi, rax	      7122	option.c	FUNCTION_41	ELSE_112	IF_203	ELSE_114	IF_208
0x6d59	      0xe800000000	                          call 0x4006d9e	      7122	option.c	FUNCTION_41	ELSE_112	IF_203	ELSE_114	IF_208
0x6d5e	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      7122	option.c	FUNCTION_41	ELSE_112	IF_203	ELSE_114	IF_208
0x6d65	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      7123	option.c	FUNCTION_41	ELSE_112	IF_203	IF_209
0x6d70	     0xf858d0c0000	                           jne 0x4007a43	      7123	option.c	FUNCTION_41	ELSE_112	IF_203	IF_209
0x6d76	    0x4883bde0feff	              cmp qword [rbp - 0x120], 0	      7123	option.c	FUNCTION_41	ELSE_112	IF_203	IF_209
0x6d7e	     0xf857f0c0000	                           jne 0x4007a43	      7123	option.c	FUNCTION_41	ELSE_112	IF_203	IF_209
0x6d84	      0xe800000000	                          call 0x4006dc9	      7124	option.c	FUNCTION_41	ELSE_112	IF_203	CALL_187
0x6d89	      0xe9750c0000	                           jmp 0x4007a43	      7103	option.c	FUNCTION_41	ELSE_112	IF_203
0x6d8e	    0x4881bd18ffff	               cmp qword [rbp - 0xe8], 0	      7130	option.c	FUNCTION_41	ELSE_115	IF_210
0x6d99	     0xf850d020000	                           jne 0x4006fec	      7130	option.c	FUNCTION_41	ELSE_115	IF_210
0x6d9f	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      7132	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8
0x6da6	          0x488b00	                    mov rax, qword [rax]	      7132	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8
0x6da9	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      7132	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8
0x6db0	      0xe9e0010000	                           jmp 0x4006fd5	      7132	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8
0x6db5	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7135	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	WHILE_6
0x6dbc	        0x4883c001	                              add rax, 1	      7135	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	WHILE_6
0x6dc0	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      7135	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	WHILE_6
0x6dc7	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7134	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	WHILE_6
0x6dce	           0xfb600	                   movzx eax, byte [rax]	      7134	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	WHILE_6
0x6dd1	            0x3c2c	                            cmp al, 0x2c	      7134	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	WHILE_6
0x6dd3	            0x74e0	                            je 0x4006df5	      7134	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	WHILE_6
0x6dd5	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7134	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	WHILE_6
0x6ddc	           0xfb600	                   movzx eax, byte [rax]	      7134	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	WHILE_6
0x6ddf	            0x3c20	                            cmp al, 0x20	      7134	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	WHILE_6
0x6de1	            0x74d2	                            je 0x4006df5	      7134	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	WHILE_6
0x6de3	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7136	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_211
0x6dea	           0xfb600	                   movzx eax, byte [rax]	      7136	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_211
0x6ded	            0x84c0	                             test al, al	      7136	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_211
0x6def	     0xf84110c0000	                            je 0x4007a46	      7136	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_211
0x6df5	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7138	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_212	CALL_188
0x6dfc	           0xfb600	                   movzx eax, byte [rax]	      7138	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_212	CALL_188
0x6dff	           0xfb6c0	                           movzx eax, al	      7138	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_212	CALL_188
0x6e02	            0x89c6	                            mov esi, eax	      7138	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_212	CALL_188
0x6e04	      0xbf00000000	                              mov edi, 0	      7138	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_212	CALL_188
0x6e09	      0xe800000000	                          call 0x4006e4e	      7138	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_212	CALL_188
0x6e0e	          0x4885c0	                           test rax, rax	      7138	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_212	CALL_188
0x6e11	            0x752a	                           jne 0x4006e7d	      7138	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_212	CALL_188
0x6e13	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7140	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_212	CALL_189
0x6e1a	           0xfb600	                   movzx eax, byte [rax]	      7140	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_212	CALL_189
0x6e1d	           0xfb6d0	                           movzx edx, al	      7140	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_212	CALL_189
0x6e20	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      7140	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_212	CALL_189
0x6e27	            0x89d6	                            mov esi, edx	      7140	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_212	CALL_189
0x6e29	          0x4889c7	                            mov rdi, rax	      7140	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_212	CALL_189
0x6e2c	      0xe835cbffff	                   call sym.illegal_char	      7140	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_212	CALL_189
0x6e31	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      7140	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_212	CALL_189
0x6e38	      0xe9cd0b0000	                           jmp 0x4007a4a	      7141	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_212
0x6e3d	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7143	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213
0x6e44	        0x4883c001	                              add rax, 1	      7143	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213
0x6e48	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      7143	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213
0x6e4f	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7143	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213
0x6e56	           0xfb600	                   movzx eax, byte [rax]	      7143	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213
0x6e59	            0x84c0	                             test al, al	      7143	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213
0x6e5b	     0xf8434010000	                            je 0x4006fd5	      7143	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213
0x6e61	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7143	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213
0x6e68	           0xfb600	                   movzx eax, byte [rax]	      7143	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213
0x6e6b	            0x3c2c	                            cmp al, 0x2c	      7143	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213
0x6e6d	     0xf8422010000	                            je 0x4006fd5	      7143	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213
0x6e73	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7143	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213
0x6e7a	           0xfb600	                   movzx eax, byte [rax]	      7143	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213
0x6e7d	            0x3c20	                            cmp al, 0x20	      7143	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213
0x6e7f	     0xf8410010000	                            je 0x4006fd5	      7143	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213
0x6e85	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7145	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	IF_214
0x6e8c	        0x4883e801	                              sub rax, 1	      7145	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	IF_214
0x6e90	           0xfb600	                   movzx eax, byte [rax]	      7145	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	IF_214
0x6e93	            0x3c6b	                            cmp al, 0x6b	      7145	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	IF_214
0x6e95	            0x7458	                            je 0x4006f2f	      7145	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	IF_214
0x6e97	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7145	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	IF_214
0x6e9e	        0x4883e801	                              sub rax, 1	      7145	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	IF_214
0x6ea2	           0xfb600	                   movzx eax, byte [rax]	      7145	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	IF_214
0x6ea5	            0x3c73	                            cmp al, 0x73	      7145	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	IF_214
0x6ea7	            0x757a	                           jne 0x4006f63	      7145	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	IF_214
0x6ea9	            0xeb44	                           jmp 0x4006f2f	      7148	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	IF_214	WHILE_7
0x6eab	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7150	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	IF_214	WHILE_7	IF_215
0x6eb2	           0xfb600	                   movzx eax, byte [rax]	      7150	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	IF_214	WHILE_7	IF_215
0x6eb5	            0x3c5c	                            cmp al, 0x5c	      7150	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	IF_214	WHILE_7	IF_215
0x6eb7	            0x7524	                           jne 0x4006f1d	      7150	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	IF_214	WHILE_7	IF_215
0x6eb9	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7150	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	IF_214	WHILE_7	IF_215
0x6ec0	        0x4883c001	                              add rax, 1	      7150	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	IF_214	WHILE_7	IF_215
0x6ec4	           0xfb600	                   movzx eax, byte [rax]	      7150	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	IF_214	WHILE_7	IF_215
0x6ec7	            0x84c0	                             test al, al	      7150	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	IF_214	WHILE_7	IF_215
0x6ec9	            0x7412	                            je 0x4006f1d	      7150	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	IF_214	WHILE_7	IF_215
0x6ecb	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7151	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	IF_214	WHILE_7	IF_215
0x6ed2	        0x4883c001	                              add rax, 1	      7151	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	IF_214	WHILE_7	IF_215
0x6ed6	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      7151	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	IF_214	WHILE_7	IF_215
0x6edd	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7152	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	IF_214	WHILE_7
0x6ee4	        0x4883c001	                              add rax, 1	      7152	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	IF_214	WHILE_7
0x6ee8	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      7152	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	IF_214	WHILE_7
0x6eef	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7148	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	IF_214	WHILE_7
0x6ef6	           0xfb600	                   movzx eax, byte [rax]	      7148	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	IF_214	WHILE_7
0x6ef9	            0x84c0	                             test al, al	      7148	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	IF_214	WHILE_7
0x6efb	     0xf8494000000	                            je 0x4006fd5	      7148	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	IF_214	WHILE_7
0x6f01	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7148	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	IF_214	WHILE_7
0x6f08	           0xfb600	                   movzx eax, byte [rax]	      7148	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	IF_214	WHILE_7
0x6f0b	            0x3c2c	                            cmp al, 0x2c	      7148	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	IF_214	WHILE_7
0x6f0d	     0xf8482000000	                            je 0x4006fd5	      7148	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	IF_214	WHILE_7
0x6f13	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7148	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	IF_214	WHILE_7
0x6f1a	           0xfb600	                   movzx eax, byte [rax]	      7148	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	IF_214	WHILE_7
0x6f1d	            0x3c20	                            cmp al, 0x20	      7148	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	IF_214	WHILE_7
0x6f1f	            0x758a	                           jne 0x4006eeb	      7148	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	IF_214	WHILE_7
0x6f21	            0xeb72	                           jmp 0x4006fd5	      7145	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	IF_214
0x6f23	    0x4883bd90feff	              cmp qword [rbp - 0x170], 0	      7157	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	ELSE_116	IF_216
0x6f2b	            0x7458	                            je 0x4006fc5	      7157	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	ELSE_116	IF_216
0x6f2d	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7161	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	ELSE_116	IF_216
0x6f34	        0x4883e801	                              sub rax, 1	      7161	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	ELSE_116	IF_216
0x6f38	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      7159	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	ELSE_116	IF_216	CALL_190
0x6f3f	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7161	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	ELSE_116	IF_216
0x6f46	           0xfb600	                   movzx eax, byte [rax]	      7161	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	ELSE_116	IF_216
0x6f49	           0xfb6d8	                           movzx ebx, al	      7159	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	ELSE_116	IF_216	CALL_190
0x6f4c	      0xbf00000000	                              mov edi, 0	      7160	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	ELSE_116	IF_216	CALL_191
0x6f51	      0xe800000000	                          call 0x4006f96	      7160	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	ELSE_116	IF_216	CALL_191
0x6f56	          0x4889c1	                            mov rcx, rax	      7160	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	ELSE_116	IF_216	CALL_191
0x6f59	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      7159	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	ELSE_116	IF_216	CALL_190
0x6f60	            0x89da	                            mov edx, ebx	      7159	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	ELSE_116	IF_216	CALL_190
0x6f62	          0x4889ce	                            mov rsi, rcx	      7159	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	ELSE_116	IF_216	CALL_190
0x6f65	          0x4889c7	                            mov rdi, rax	      7159	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	ELSE_116	IF_216	CALL_190
0x6f68	      0xb800000000	                              mov eax, 0	      7159	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	ELSE_116	IF_216	CALL_190
0x6f6d	      0xe800000000	                          call 0x4006fb2	      7159	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	ELSE_116	IF_216	CALL_190
0x6f72	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      7162	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	ELSE_116	IF_216
0x6f79	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      7162	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	ELSE_116	IF_216
0x6f80	      0xe9850a0000	                           jmp 0x4007a4a	      7166	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	ELSE_116
0x6f85	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7165	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	ELSE_116	ELSE_117
0x6f90	      0xe9750a0000	                           jmp 0x4007a4a	      7166	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_213	ELSE_116
0x6f95	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7132	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8
0x6f9c	           0xfb600	                   movzx eax, byte [rax]	      7132	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8
0x6f9f	            0x84c0	                             test al, al	      7132	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8
0x6fa1	     0xf8520feffff	                           jne 0x4006e07	      7132	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8
0x6fa7	      0xe95e0a0000	                           jmp 0x4007a4a	      7132	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8
0x6fac	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      7173	option.c	FUNCTION_41	ELSE_118	IF_217
0x6fb7	            0x7538	                           jne 0x4007031	      7173	option.c	FUNCTION_41	ELSE_118	IF_217
0x6fb9	    0x488b05000000	            mov rax, qword [0x04007000] 	      7175	option.c	FUNCTION_41	ELSE_118	IF_217	IF_218	CALL_192
0x6fc0	      0xba01000000	                              mov edx, 1	      7175	option.c	FUNCTION_41	ELSE_118	IF_217	IF_218	CALL_192
0x6fc5	      0xbe00000000	                              mov esi, 0	      7175	option.c	FUNCTION_41	ELSE_118	IF_217	IF_218	CALL_192
0x6fca	          0x4889c7	                            mov rdi, rax	      7175	option.c	FUNCTION_41	ELSE_118	IF_217	IF_218	CALL_192
0x6fcd	      0xe8049b0000	              call sym.check_opt_strings	      7175	option.c	FUNCTION_41	ELSE_118	IF_217	IF_218	CALL_192
0x6fd2	          0x83f801	                              cmp eax, 1	      7175	option.c	FUNCTION_41	ELSE_118	IF_217	IF_218	CALL_192
0x6fd5	            0x7410	                            je 0x4007027	      7175	option.c	FUNCTION_41	ELSE_118	IF_217	IF_218	CALL_192
0x6fd7	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7176	option.c	FUNCTION_41	ELSE_118	IF_217	IF_218
0x6fe2	      0xe9230a0000	                           jmp 0x4007a4a	      7176	option.c	FUNCTION_41	ELSE_118	IF_217	IF_218
0x6fe7	      0xe800000000	                          call 0x400702c	      7178	option.c	FUNCTION_41	ELSE_118	IF_217	CALL_193
0x6fec	      0xe9190a0000	                           jmp 0x4007a4a	      7178	option.c	FUNCTION_41	ELSE_118	IF_217	CALL_193
0x6ff1	    0x488b05000000	            mov rax, qword [0x04007038] 	      7184	option.c	FUNCTION_41	ELSE_120	IF_219
0x6ff8	    0x4805b8020000	                          add rax, 0x2b8	      7184	option.c	FUNCTION_41	ELSE_120	IF_219
0x6ffe	    0x483b85a0feff	            cmp rax, qword [rbp - 0x160]	      7184	option.c	FUNCTION_41	ELSE_120	IF_219
0x7005	            0x7535	                           jne 0x400707c	      7184	option.c	FUNCTION_41	ELSE_120	IF_219
0x7007	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      7186	option.c	FUNCTION_41	ELSE_120	IF_219	IF_220	CALL_194
0x700e	          0x488b00	                    mov rax, qword [rax]	      7186	option.c	FUNCTION_41	ELSE_120	IF_219	IF_220	CALL_194
0x7011	      0xba00000000	                              mov edx, 0	      7186	option.c	FUNCTION_41	ELSE_120	IF_219	IF_220	CALL_194
0x7016	      0xbe00000000	                              mov esi, 0	      7186	option.c	FUNCTION_41	ELSE_120	IF_219	IF_220	CALL_194
0x701b	          0x4889c7	                            mov rdi, rax	      7186	option.c	FUNCTION_41	ELSE_120	IF_219	IF_220	CALL_194
0x701e	      0xe8b39a0000	              call sym.check_opt_strings	      7186	option.c	FUNCTION_41	ELSE_120	IF_219	IF_220	CALL_194
0x7023	          0x83f801	                              cmp eax, 1	      7186	option.c	FUNCTION_41	ELSE_120	IF_219	IF_220	CALL_194
0x7026	     0xf84de090000	                            je 0x4007a4a	      7186	option.c	FUNCTION_41	ELSE_120	IF_219	IF_220	CALL_194
0x702c	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7187	option.c	FUNCTION_41	ELSE_120	IF_219	IF_220
0x7037	      0xe9ce090000	                           jmp 0x4007a4a	      7187	option.c	FUNCTION_41	ELSE_120	IF_219	IF_220
0x703c	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      7224	option.c	FUNCTION_41	ELSE_125	IF_225
0x7047	            0x757d	                           jne 0x4007106	      7224	option.c	FUNCTION_41	ELSE_125	IF_225
0x7049	    0x488b05000000	            mov rax, qword [0x04007090] 	      7226	option.c	FUNCTION_41	ELSE_125	IF_225	IF_226
0x7050	           0xfb600	                   movzx eax, byte [rax]	      7226	option.c	FUNCTION_41	ELSE_125	IF_225	IF_226
0x7053	            0x84c0	                             test al, al	      7226	option.c	FUNCTION_41	ELSE_125	IF_225	IF_226
0x7055	     0xf84af090000	                            je 0x4007a4a	      7226	option.c	FUNCTION_41	ELSE_125	IF_225	IF_226
0x705b	    0x488b05000000	            mov rax, qword [0x040070a2] 	      7228	option.c	FUNCTION_41	ELSE_125	IF_225	IF_226	CALL_201
0x7062	    0x488db5d8feff	                  lea rsi, [rbp - 0x128]	      7228	option.c	FUNCTION_41	ELSE_125	IF_225	IF_226	CALL_201
0x7069	    0x41b800000000	                              mov r8d, 0	      7228	option.c	FUNCTION_41	ELSE_125	IF_225	IF_226	CALL_201
0x706f	      0xb901000000	                              mov ecx, 1	      7228	option.c	FUNCTION_41	ELSE_125	IF_225	IF_226	CALL_201
0x7074	      0xba01000000	                              mov edx, 1	      7228	option.c	FUNCTION_41	ELSE_125	IF_225	IF_226	CALL_201
0x7079	          0x4889c7	                            mov rdi, rax	      7228	option.c	FUNCTION_41	ELSE_125	IF_225	IF_226	CALL_201
0x707c	      0xe800000000	                          call 0x40070c1	      7228	option.c	FUNCTION_41	ELSE_125	IF_225	IF_226	CALL_201
0x7081	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7229	option.c	FUNCTION_41	ELSE_125	IF_225	IF_226	IF_227
0x7088	          0x4885c0	                           test rax, rax	      7229	option.c	FUNCTION_41	ELSE_125	IF_225	IF_226	IF_227
0x708b	     0xf8479090000	                            je 0x4007a4a	      7229	option.c	FUNCTION_41	ELSE_125	IF_225	IF_226	IF_227
0x7091	    0x83bda8feffff	              cmp dword [rbp - 0x158], 0	      7231	option.c	FUNCTION_41	ELSE_125	IF_225	IF_226	IF_227	IF_228
0x7098	            0x740f	                            je 0x40070e9	      7231	option.c	FUNCTION_41	ELSE_125	IF_225	IF_226	IF_227	IF_228
0x709a	    0x488b05000000	            mov rax, qword [0x040070e1] 	      7232	option.c	FUNCTION_41	ELSE_125	IF_225	IF_226	IF_227	CALL_202
0x70a1	          0x4889c7	                            mov rdi, rax	      7232	option.c	FUNCTION_41	ELSE_125	IF_225	IF_226	IF_227	CALL_202
0x70a4	      0xe800000000	                          call 0x40070e9	      7232	option.c	FUNCTION_41	ELSE_125	IF_225	IF_226	IF_227	CALL_202
0x70a9	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7233	option.c	FUNCTION_41	ELSE_125	IF_225	IF_226	IF_227
0x70b0	    0x488905000000	            mov qword [0x040070f7], rax 	      7233	option.c	FUNCTION_41	ELSE_125	IF_225	IF_226	IF_227
0x70b7	    0xc785a8feffff	              mov dword [rbp - 0x158], 1	      7234	option.c	FUNCTION_41	ELSE_125	IF_225	IF_226	IF_227
0x70c1	      0xe944090000	                           jmp 0x4007a4a	      7234	option.c	FUNCTION_41	ELSE_125	IF_225	IF_226	IF_227
0x70c6	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      7240	option.c	FUNCTION_41	ELSE_126	IF_229
0x70d1	            0x757b	                           jne 0x400718e	      7240	option.c	FUNCTION_41	ELSE_126	IF_229
0x70d3	    0x488b05000000	            mov rax, qword [0x0400711a] 	      7242	option.c	FUNCTION_41	ELSE_126	IF_229	IF_230	CALL_203
0x70da	           0xfb600	                   movzx eax, byte [rax]	      7242	option.c	FUNCTION_41	ELSE_126	IF_229	IF_230	CALL_203
0x70dd	           0xfb6c0	                           movzx eax, al	      7242	option.c	FUNCTION_41	ELSE_126	IF_229	IF_230	CALL_203
0x70e0	          0x83e830	                           sub eax, 0x30	      7242	option.c	FUNCTION_41	ELSE_126	IF_229	IF_230	CALL_203
0x70e3	          0x83f809	                              cmp eax, 9	      7242	option.c	FUNCTION_41	ELSE_126	IF_229	IF_230	CALL_203
0x70e6	            0x7734	                            ja 0x400715c	      7242	option.c	FUNCTION_41	ELSE_126	IF_229	IF_230	CALL_203
0x70e8	    0x488b05000000	            mov rax, qword [0x0400712f] 	      7244	option.c	FUNCTION_41	ELSE_126	IF_229	IF_230	IF_231
0x70ef	           0xfb600	                   movzx eax, byte [rax]	      7244	option.c	FUNCTION_41	ELSE_126	IF_229	IF_230	IF_231
0x70f2	            0x3c32	                            cmp al, 0x32	      7244	option.c	FUNCTION_41	ELSE_126	IF_229	IF_230	IF_231
0x70f4	            0x7716	                            ja 0x400714c	      7244	option.c	FUNCTION_41	ELSE_126	IF_229	IF_230	IF_231
0x70f6	    0x488b05000000	            mov rax, qword [0x0400713d] 	      7244	option.c	FUNCTION_41	ELSE_126	IF_229	IF_230	IF_231
0x70fd	        0x4883c001	                              add rax, 1	      7244	option.c	FUNCTION_41	ELSE_126	IF_229	IF_230	IF_231
0x7101	           0xfb600	                   movzx eax, byte [rax]	      7244	option.c	FUNCTION_41	ELSE_126	IF_229	IF_230	IF_231
0x7104	            0x84c0	                             test al, al	      7244	option.c	FUNCTION_41	ELSE_126	IF_229	IF_230	IF_231
0x7106	     0xf84fe080000	                            je 0x4007a4a	      7244	option.c	FUNCTION_41	ELSE_126	IF_229	IF_230	IF_231
0x710c	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7245	option.c	FUNCTION_41	ELSE_126	IF_229	IF_230	IF_231
0x7117	      0xe9ee080000	                           jmp 0x4007a4a	      7245	option.c	FUNCTION_41	ELSE_126	IF_229	IF_230	IF_231
0x711c	    0x488b05000000	            mov rax, qword [0x04007163] 	      7247	option.c	FUNCTION_41	ELSE_126	IF_229	ELSE_127	IF_232	CALL_204
0x7123	      0xba01000000	                              mov edx, 1	      7247	option.c	FUNCTION_41	ELSE_126	IF_229	ELSE_127	IF_232	CALL_204
0x7128	      0xbe00000000	                              mov esi, 0	      7247	option.c	FUNCTION_41	ELSE_126	IF_229	ELSE_127	IF_232	CALL_204
0x712d	          0x4889c7	                            mov rdi, rax	      7247	option.c	FUNCTION_41	ELSE_126	IF_229	ELSE_127	IF_232	CALL_204
0x7130	      0xe8a1990000	              call sym.check_opt_strings	      7247	option.c	FUNCTION_41	ELSE_126	IF_229	ELSE_127	IF_232	CALL_204
0x7135	          0x83f801	                              cmp eax, 1	      7247	option.c	FUNCTION_41	ELSE_126	IF_229	ELSE_127	IF_232	CALL_204
0x7138	     0xf84cc080000	                            je 0x4007a4a	      7247	option.c	FUNCTION_41	ELSE_126	IF_229	ELSE_127	IF_232	CALL_204
0x713e	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7248	option.c	FUNCTION_41	ELSE_126	IF_229	ELSE_127	IF_232
0x7149	      0xe9bc080000	                           jmp 0x4007a4a	      7248	option.c	FUNCTION_41	ELSE_126	IF_229	ELSE_127	IF_232
0x714e	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      7250	option.c	FUNCTION_41	ELSE_128	IF_233
0x7159	            0x7537	                           jne 0x40071d2	      7250	option.c	FUNCTION_41	ELSE_128	IF_233
0x715b	    0x488b05000000	            mov rax, qword [0x040071a2] 	      7252	option.c	FUNCTION_41	ELSE_128	IF_233	IF_234	CALL_205
0x7162	      0xb901000000	                              mov ecx, 1	      7252	option.c	FUNCTION_41	ELSE_128	IF_233	IF_234	CALL_205
0x7167	      0xba00000000	                              mov edx, 0	      7252	option.c	FUNCTION_41	ELSE_128	IF_233	IF_234	CALL_205
0x716c	      0xbe00000000	                              mov esi, 0	      7252	option.c	FUNCTION_41	ELSE_128	IF_233	IF_234	CALL_205
0x7171	          0x4889c7	                            mov rdi, rax	      7252	option.c	FUNCTION_41	ELSE_128	IF_233	IF_234	CALL_205
0x7174	      0xe88c990000	              call sym.opt_strings_flags	      7252	option.c	FUNCTION_41	ELSE_128	IF_233	IF_234	CALL_205
0x7179	          0x83f801	                              cmp eax, 1	      7252	option.c	FUNCTION_41	ELSE_128	IF_233	IF_234	CALL_205
0x717c	     0xf8488080000	                            je 0x4007a4a	      7252	option.c	FUNCTION_41	ELSE_128	IF_233	IF_234	CALL_205
0x7182	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7253	option.c	FUNCTION_41	ELSE_128	IF_233	IF_234
0x718d	      0xe978080000	                           jmp 0x4007a4a	      7253	option.c	FUNCTION_41	ELSE_128	IF_233	IF_234
0x7192	    0x4881bd18ffff	               cmp qword [rbp - 0xe8], 0	      7257	option.c	FUNCTION_41	ELSE_129	IF_235
0x719d	     0xf85c5000000	                           jne 0x40072a8	      7257	option.c	FUNCTION_41	ELSE_129	IF_235
0x71a3	    0x8b858cfeffff	            mov eax, dword [rbp - 0x174]	      7261	option.c	FUNCTION_41	ELSE_129	IF_235	IF_236
0x71a9	          0x83e004	                              and eax, 4	      7261	option.c	FUNCTION_41	ELSE_129	IF_235	IF_236
0x71ac	            0x85c0	                           test eax, eax	      7261	option.c	FUNCTION_41	ELSE_129	IF_235	IF_236
0x71ae	            0x742b	                            je 0x400721b	      7261	option.c	FUNCTION_41	ELSE_129	IF_235	IF_236
0x71b0	    0x488b05000000	            mov rax, qword [0x040071f7] 	      7263	option.c	FUNCTION_41	ELSE_129	IF_235	IF_236
0x71b7	    0x488b80101600	          mov rax, qword [rax + 0x1610] 	      7263	option.c	FUNCTION_41	ELSE_129	IF_235	IF_236
0x71be	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      7263	option.c	FUNCTION_41	ELSE_129	IF_235	IF_236
0x71c5	    0x488b05000000	            mov rax, qword [0x0400720c] 	      7264	option.c	FUNCTION_41	ELSE_129	IF_235	IF_236
0x71cc	    0x480518160000	                         add rax, 0x1618	      7264	option.c	FUNCTION_41	ELSE_129	IF_235	IF_236
0x71d2	    0x48898508ffff	             mov qword [rbp - 0xf8], rax	      7264	option.c	FUNCTION_41	ELSE_129	IF_235	IF_236
0x71d9	            0xeb19	                           jmp 0x4007234	      7264	option.c	FUNCTION_41	ELSE_129	IF_235	IF_236
0x71db	    0x488b05000000	            mov rax, qword [0x04007222] 	      7268	option.c	FUNCTION_41	ELSE_129	IF_235	ELSE_130
0x71e2	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      7268	option.c	FUNCTION_41	ELSE_129	IF_235	ELSE_130
0x71e9	    0x48c78508ffff	               mov qword [rbp - 0xf8], 0	      7269	option.c	FUNCTION_41	ELSE_129	IF_235	ELSE_130
0x71f4	    0x8b858cfeffff	            mov eax, dword [rbp - 0x174]	      7272	option.c	FUNCTION_41	ELSE_129	IF_235	IF_237
0x71fa	          0x83e004	                              and eax, 4	      7272	option.c	FUNCTION_41	ELSE_129	IF_235	IF_237
0x71fd	            0x85c0	                           test eax, eax	      7272	option.c	FUNCTION_41	ELSE_129	IF_235	IF_237
0x71ff	            0x7420	                            je 0x4007261	      7272	option.c	FUNCTION_41	ELSE_129	IF_235	IF_237
0x7201	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7272	option.c	FUNCTION_41	ELSE_129	IF_235	IF_237
0x7208	           0xfb600	                   movzx eax, byte [rax]	      7272	option.c	FUNCTION_41	ELSE_129	IF_235	IF_237
0x720b	            0x84c0	                             test al, al	      7272	option.c	FUNCTION_41	ELSE_129	IF_235	IF_237
0x720d	            0x7512	                           jne 0x4007261	      7272	option.c	FUNCTION_41	ELSE_129	IF_235	IF_237
0x720f	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      7274	option.c	FUNCTION_41	ELSE_129	IF_235	IF_237
0x7216	    0xc70000000000	                      mov dword [rax], 0	      7274	option.c	FUNCTION_41	ELSE_129	IF_235	IF_237
0x721c	      0xe9e9070000	                           jmp 0x4007a4a	      7274	option.c	FUNCTION_41	ELSE_129	IF_235	IF_237
0x7221	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7275	option.c	FUNCTION_41	ELSE_129	IF_235	ELSE_131	IF_238
0x7228	           0xfb600	                   movzx eax, byte [rax]	      7275	option.c	FUNCTION_41	ELSE_129	IF_235	ELSE_131	IF_238
0x722b	            0x84c0	                             test al, al	      7275	option.c	FUNCTION_41	ELSE_129	IF_235	ELSE_131	IF_238
0x722d	            0x7429	                            je 0x4007298	      7275	option.c	FUNCTION_41	ELSE_129	IF_235	ELSE_131	IF_238
0x722f	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7276	option.c	FUNCTION_41	ELSE_129	IF_235	ELSE_131	IF_238	CALL_206
0x7236	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	      7276	option.c	FUNCTION_41	ELSE_129	IF_235	ELSE_131	IF_238	CALL_206
0x723d	      0xb900000000	                              mov ecx, 0	      7276	option.c	FUNCTION_41	ELSE_129	IF_235	ELSE_131	IF_238	CALL_206
0x7242	      0xbe00000000	                              mov esi, 0	      7276	option.c	FUNCTION_41	ELSE_129	IF_235	ELSE_131	IF_238	CALL_206
0x7247	          0x4889c7	                            mov rdi, rax	      7276	option.c	FUNCTION_41	ELSE_129	IF_235	ELSE_131	IF_238	CALL_206
0x724a	      0xe8b6980000	              call sym.opt_strings_flags	      7276	option.c	FUNCTION_41	ELSE_129	IF_235	ELSE_131	IF_238	CALL_206
0x724f	          0x83f801	                              cmp eax, 1	      7276	option.c	FUNCTION_41	ELSE_129	IF_235	ELSE_131	IF_238	CALL_206
0x7252	     0xf84b2070000	                            je 0x4007a4a	      7276	option.c	FUNCTION_41	ELSE_129	IF_235	ELSE_131	IF_238	CALL_206
0x7258	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7277	option.c	FUNCTION_41	ELSE_129	IF_235	ELSE_131	IF_238
0x7263	      0xe9a2070000	                           jmp 0x4007a4a	      7277	option.c	FUNCTION_41	ELSE_129	IF_235	ELSE_131	IF_238
0x7268	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      7282	option.c	FUNCTION_41	ELSE_132	IF_239
0x7273	            0x7537	                           jne 0x40072ec	      7282	option.c	FUNCTION_41	ELSE_132	IF_239
0x7275	    0x488b05000000	            mov rax, qword [0x040072bc] 	      7284	option.c	FUNCTION_41	ELSE_132	IF_239	IF_240	CALL_207
0x727c	      0xb901000000	                              mov ecx, 1	      7284	option.c	FUNCTION_41	ELSE_132	IF_239	IF_240	CALL_207
0x7281	      0xba00000000	                              mov edx, 0	      7284	option.c	FUNCTION_41	ELSE_132	IF_239	IF_240	CALL_207
0x7286	      0xbe00000000	                              mov esi, 0	      7284	option.c	FUNCTION_41	ELSE_132	IF_239	IF_240	CALL_207
0x728b	          0x4889c7	                            mov rdi, rax	      7284	option.c	FUNCTION_41	ELSE_132	IF_239	IF_240	CALL_207
0x728e	      0xe872980000	              call sym.opt_strings_flags	      7284	option.c	FUNCTION_41	ELSE_132	IF_239	IF_240	CALL_207
0x7293	          0x83f801	                              cmp eax, 1	      7284	option.c	FUNCTION_41	ELSE_132	IF_239	IF_240	CALL_207
0x7296	     0xf846e070000	                            je 0x4007a4a	      7284	option.c	FUNCTION_41	ELSE_132	IF_239	IF_240	CALL_207
0x729c	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7285	option.c	FUNCTION_41	ELSE_132	IF_239	IF_240
0x72a7	      0xe95e070000	                           jmp 0x4007a4a	      7285	option.c	FUNCTION_41	ELSE_132	IF_239	IF_240
0x72ac	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      7291	option.c	FUNCTION_41	ELSE_133	IF_241
0x72b7	            0x751d	                           jne 0x4007316	      7291	option.c	FUNCTION_41	ELSE_133	IF_241
0x72b9	      0xe800000000	                          call 0x40072fe	      7293	option.c	FUNCTION_41	ELSE_133	IF_241	IF_242	CALL_208
0x72be	            0x85c0	                           test eax, eax	      7293	option.c	FUNCTION_41	ELSE_133	IF_241	IF_242	CALL_208
0x72c0	     0xf8544070000	                           jne 0x4007a4a	      7293	option.c	FUNCTION_41	ELSE_133	IF_241	IF_242	CALL_208
0x72c6	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7294	option.c	FUNCTION_41	ELSE_133	IF_241	IF_242
0x72d1	      0xe934070000	                           jmp 0x4007a4a	      7294	option.c	FUNCTION_41	ELSE_133	IF_241	IF_242
0x72d6	    0x488b05000000	            mov rax, qword [0x0400731d] 	      7300	option.c	FUNCTION_41	ELSE_134	IF_243
0x72dd	    0x4805b0030000	                          add rax, 0x3b0	      7300	option.c	FUNCTION_41	ELSE_134	IF_243
0x72e3	    0x483b8518ffff	             cmp rax, qword [rbp - 0xe8]	      7300	option.c	FUNCTION_41	ELSE_134	IF_243
0x72ea	            0x7576	                           jne 0x40073a2	      7300	option.c	FUNCTION_41	ELSE_134	IF_243
0x72ec	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      7302	option.c	FUNCTION_41	ELSE_134	IF_243	IF_244	CALL_209
0x72f3	          0x488b00	                    mov rax, qword [rax]	      7302	option.c	FUNCTION_41	ELSE_134	IF_243	IF_244	CALL_209
0x72f6	      0xba00000000	                              mov edx, 0	      7302	option.c	FUNCTION_41	ELSE_134	IF_243	IF_244	CALL_209
0x72fb	      0xbe00000000	                              mov esi, 0	      7302	option.c	FUNCTION_41	ELSE_134	IF_243	IF_244	CALL_209
0x7300	          0x4889c7	                            mov rdi, rax	      7302	option.c	FUNCTION_41	ELSE_134	IF_243	IF_244	CALL_209
0x7303	      0xe8ce970000	              call sym.check_opt_strings	      7302	option.c	FUNCTION_41	ELSE_134	IF_243	IF_244	CALL_209
0x7308	          0x83f801	                              cmp eax, 1	      7302	option.c	FUNCTION_41	ELSE_134	IF_243	IF_244	CALL_209
0x730b	            0x7515	                           jne 0x4007362	      7302	option.c	FUNCTION_41	ELSE_134	IF_243	IF_244	CALL_209
0x730d	    0x488b05000000	            mov rax, qword [0x04007354] 	      7303	option.c	FUNCTION_41	ELSE_134	IF_243	IF_244
0x7314	    0x488b80f80100	           mov rax, qword [rax + 0x1f8] 	      7303	option.c	FUNCTION_41	ELSE_134	IF_243	IF_244
0x731b	           0xfb600	                   movzx eax, byte [rax]	      7303	option.c	FUNCTION_41	ELSE_134	IF_243	IF_244
0x731e	            0x84c0	                             test al, al	      7303	option.c	FUNCTION_41	ELSE_134	IF_243	IF_244
0x7320	            0x7510	                           jne 0x4007372	      7303	option.c	FUNCTION_41	ELSE_134	IF_243	IF_244
0x7322	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7304	option.c	FUNCTION_41	ELSE_134	IF_243	IF_244
0x732d	      0xe9d8060000	                           jmp 0x4007a4a	      7304	option.c	FUNCTION_41	ELSE_134	IF_243	IF_244
0x7332	    0x488b05000000	            mov rax, qword [0x04007379] 	      7307	option.c	FUNCTION_41	ELSE_134	IF_243	ELSE_135	CALL_210
0x7339	          0x4889c7	                            mov rdi, rax	      7307	option.c	FUNCTION_41	ELSE_134	IF_243	ELSE_135	CALL_210
0x733c	      0xe800000000	                          call 0x4007381	      7307	option.c	FUNCTION_41	ELSE_134	IF_243	ELSE_135	CALL_210
0x7341	    0x488b05000000	            mov rax, qword [0x04007388] 	      7308	option.c	FUNCTION_41	ELSE_134	IF_243	ELSE_135	IF_245	CALL_211
0x7348	          0x4889c7	                            mov rdi, rax	      7308	option.c	FUNCTION_41	ELSE_134	IF_243	ELSE_135	IF_245	CALL_211
0x734b	      0xe800000000	                          call 0x4007390	      7308	option.c	FUNCTION_41	ELSE_134	IF_243	ELSE_135	IF_245	CALL_211
0x7350	            0x85c0	                           test eax, eax	      7308	option.c	FUNCTION_41	ELSE_134	IF_243	ELSE_135	IF_245	CALL_211
0x7352	     0xf84b2060000	                            je 0x4007a4a	      7308	option.c	FUNCTION_41	ELSE_134	IF_243	ELSE_135	IF_245	CALL_211
0x7358	      0xe800000000	                          call 0x400739d	      7309	option.c	FUNCTION_41	ELSE_134	IF_243	ELSE_135	CALL_212
0x735d	      0xe9a8060000	                           jmp 0x4007a4a	      7309	option.c	FUNCTION_41	ELSE_134	IF_243	ELSE_135	CALL_212
0x7362	    0x488b05000000	            mov rax, qword [0x040073a9] 	      7314	option.c	FUNCTION_41	ELSE_136	IF_246
0x7369	    0x480518020000	                          add rax, 0x218	      7314	option.c	FUNCTION_41	ELSE_136	IF_246
0x736f	    0x483b85a0feff	            cmp rax, qword [rbp - 0x160]	      7314	option.c	FUNCTION_41	ELSE_136	IF_246
0x7376	            0x752b	                           jne 0x40073e3	      7314	option.c	FUNCTION_41	ELSE_136	IF_246
0x7378	    0x488b05000000	            mov rax, qword [0x040073bf] 	      7316	option.c	FUNCTION_41	ELSE_136	IF_246	IF_247	CALL_213
0x737f	          0x4889c7	                            mov rdi, rax	      7316	option.c	FUNCTION_41	ELSE_136	IF_246	IF_247	CALL_213
0x7382	      0xe800000000	                          call 0x40073c7	      7316	option.c	FUNCTION_41	ELSE_136	IF_246	IF_247	CALL_213
0x7387	            0x85c0	                           test eax, eax	      7316	option.c	FUNCTION_41	ELSE_136	IF_246	IF_247	CALL_213
0x7389	     0xf847b060000	                            je 0x4007a4a	      7316	option.c	FUNCTION_41	ELSE_136	IF_246	IF_247	CALL_213
0x738f	    0x488b05000000	            mov rax, qword [0x040073d6] 	      7317	option.c	FUNCTION_41	ELSE_136	IF_246	CALL_214
0x7396	          0x4889c7	                            mov rdi, rax	      7317	option.c	FUNCTION_41	ELSE_136	IF_246	CALL_214
0x7399	      0xe800000000	                          call 0x40073de	      7317	option.c	FUNCTION_41	ELSE_136	IF_246	CALL_214
0x739e	      0xe967060000	                           jmp 0x4007a4a	      7317	option.c	FUNCTION_41	ELSE_136	IF_246	CALL_214
0x73a3	    0x488b05000000	            mov rax, qword [0x040073ea] 	      7321	option.c	FUNCTION_41	ELSE_137	IF_248
0x73aa	    0x4805e0030000	                          add rax, 0x3e0	      7321	option.c	FUNCTION_41	ELSE_137	IF_248
0x73b0	    0x483b8518ffff	             cmp rax, qword [rbp - 0xe8]	      7321	option.c	FUNCTION_41	ELSE_137	IF_248
0x73b7	     0xf859d000000	                           jne 0x400749a	      7321	option.c	FUNCTION_41	ELSE_137	IF_248
0x73bd	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      7323	option.c	FUNCTION_41	ELSE_137	IF_248	CALL_215
0x73c4	          0x488b00	                    mov rax, qword [rax]	      7323	option.c	FUNCTION_41	ELSE_137	IF_248	CALL_215
0x73c7	      0xbe2c000000	                           mov esi, 0x2c	      7323	option.c	FUNCTION_41	ELSE_137	IF_248	CALL_215
0x73cc	          0x4889c7	                            mov rdi, rax	      7323	option.c	FUNCTION_41	ELSE_137	IF_248	CALL_215
0x73cf	      0xe800000000	                          call 0x4007414	      7323	option.c	FUNCTION_41	ELSE_137	IF_248	CALL_215
0x73d4	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      7323	option.c	FUNCTION_41	ELSE_137	IF_248	CALL_215
0x73db	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7324	option.c	FUNCTION_41	ELSE_137	IF_248	IF_249
0x73e2	          0x4885c0	                           test rax, rax	      7324	option.c	FUNCTION_41	ELSE_137	IF_248	IF_249
0x73e5	            0x7510	                           jne 0x4007437	      7324	option.c	FUNCTION_41	ELSE_137	IF_248	IF_249
0x73e7	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7325	option.c	FUNCTION_41	ELSE_137	IF_248	CALL_216
0x73f2	      0xe913060000	                           jmp 0x4007a4a	      7325	option.c	FUNCTION_41	ELSE_137	IF_248	CALL_216
0x73f7	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      7326	option.c	FUNCTION_41	ELSE_137	IF_248	ELSE_138	IF_250
0x73fe	          0x488b10	                    mov rdx, qword [rax]	      7326	option.c	FUNCTION_41	ELSE_137	IF_248	ELSE_138	IF_250
0x7401	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7326	option.c	FUNCTION_41	ELSE_137	IF_248	ELSE_138	IF_250
0x7408	          0x4839c2	                            cmp rdx, rax	      7326	option.c	FUNCTION_41	ELSE_137	IF_248	ELSE_138	IF_250
0x740b	            0x7412	                            je 0x400745f	      7326	option.c	FUNCTION_41	ELSE_137	IF_248	ELSE_138	IF_250
0x740d	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7326	option.c	FUNCTION_41	ELSE_137	IF_248	ELSE_138	IF_250
0x7414	        0x4883c001	                              add rax, 1	      7326	option.c	FUNCTION_41	ELSE_137	IF_248	ELSE_138	IF_250
0x7418	           0xfb600	                   movzx eax, byte [rax]	      7326	option.c	FUNCTION_41	ELSE_137	IF_248	ELSE_138	IF_250
0x741b	            0x84c0	                             test al, al	      7326	option.c	FUNCTION_41	ELSE_137	IF_248	ELSE_138	IF_250
0x741d	            0x7510	                           jne 0x400746f	      7326	option.c	FUNCTION_41	ELSE_137	IF_248	ELSE_138	IF_250
0x741f	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7327	option.c	FUNCTION_41	ELSE_137	IF_248	ELSE_138	IF_250
0x742a	      0xe9db050000	                           jmp 0x4007a4a	      7327	option.c	FUNCTION_41	ELSE_137	IF_248	ELSE_138	IF_250
0x742f	    0x488b05000000	            mov rax, qword [0x04007476] 	      7328	option.c	FUNCTION_41	ELSE_137	IF_248	ELSE_139	IF_251	CALL_217
0x7436	          0x4889c7	                            mov rdi, rax	      7328	option.c	FUNCTION_41	ELSE_137	IF_248	ELSE_139	IF_251	CALL_217
0x7439	      0xe800000000	                          call 0x400747e	      7328	option.c	FUNCTION_41	ELSE_137	IF_248	ELSE_139	IF_251	CALL_217
0x743e	            0x85c0	                           test eax, eax	      7328	option.c	FUNCTION_41	ELSE_137	IF_248	ELSE_139	IF_251	CALL_217
0x7440	     0xf84c4050000	                            je 0x4007a4a	      7328	option.c	FUNCTION_41	ELSE_137	IF_248	ELSE_139	IF_251	CALL_217
0x7446	    0x488b05000000	            mov rax, qword [0x0400748d] 	      7329	option.c	FUNCTION_41	ELSE_137	IF_248	ELSE_139	IF_251
0x744d	          0x4889c7	                            mov rdi, rax	      7329	option.c	FUNCTION_41	ELSE_137	IF_248	ELSE_139	IF_251
0x7450	      0xe800000000	                          call 0x4007495	      7329	option.c	FUNCTION_41	ELSE_137	IF_248	ELSE_139	IF_251
0x7455	      0xe9b0050000	                           jmp 0x4007a4a	      7329	option.c	FUNCTION_41	ELSE_137	IF_248	ELSE_139	IF_251
0x745a	    0x4881bd18ffff	               cmp qword [rbp - 0xe8], 0	      7332	option.c	FUNCTION_41	ELSE_140	IF_252
0x7465	            0x7545	                           jne 0x40074ec	      7332	option.c	FUNCTION_41	ELSE_140	IF_252
0x7467	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      7334	option.c	FUNCTION_41	ELSE_140	IF_252	IF_253	CALL_219
0x746e	          0x488b00	                    mov rax, qword [rax]	      7334	option.c	FUNCTION_41	ELSE_140	IF_252	IF_253	CALL_219
0x7471	           0xfb600	                   movzx eax, byte [rax]	      7334	option.c	FUNCTION_41	ELSE_140	IF_252	IF_253	CALL_219
0x7474	            0x84c0	                             test al, al	      7334	option.c	FUNCTION_41	ELSE_140	IF_252	IF_253	CALL_219
0x7476	     0xf848e050000	                            je 0x4007a4a	      7334	option.c	FUNCTION_41	ELSE_140	IF_252	IF_253	CALL_219
0x747c	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      7334	option.c	FUNCTION_41	ELSE_140	IF_252	IF_253	CALL_219
0x7483	          0x488b00	                    mov rax, qword [rax]	      7334	option.c	FUNCTION_41	ELSE_140	IF_252	IF_253	CALL_219
0x7486	      0xbe00000000	                              mov esi, 0	      7334	option.c	FUNCTION_41	ELSE_140	IF_252	IF_253	CALL_219
0x748b	          0x4889c7	                            mov rdi, rax	      7334	option.c	FUNCTION_41	ELSE_140	IF_252	IF_253	CALL_219
0x748e	      0xe800000000	                          call 0x40074d3	      7334	option.c	FUNCTION_41	ELSE_140	IF_252	IF_253	CALL_219
0x7493	          0x4885c0	                           test rax, rax	      7334	option.c	FUNCTION_41	ELSE_140	IF_252	IF_253	CALL_219
0x7496	     0xf856e050000	                           jne 0x4007a4a	      7334	option.c	FUNCTION_41	ELSE_140	IF_252	IF_253	CALL_219
0x749c	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7335	option.c	FUNCTION_41	ELSE_140	IF_252	CALL_220
0x74a7	      0xe95e050000	                           jmp 0x4007a4a	      7335	option.c	FUNCTION_41	ELSE_140	IF_252	CALL_220
0x74ac	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      7338	option.c	FUNCTION_41	ELSE_141	IF_254
0x74b7	            0x7537	                           jne 0x4007530	      7338	option.c	FUNCTION_41	ELSE_141	IF_254
0x74b9	    0x488b05000000	            mov rax, qword [0x04007500] 	      7340	option.c	FUNCTION_41	ELSE_141	IF_254	IF_255	CALL_221
0x74c0	      0xb901000000	                              mov ecx, 1	      7340	option.c	FUNCTION_41	ELSE_141	IF_254	IF_255	CALL_221
0x74c5	      0xba00000000	                              mov edx, 0	      7340	option.c	FUNCTION_41	ELSE_141	IF_254	IF_255	CALL_221
0x74ca	      0xbe00000000	                              mov esi, 0	      7340	option.c	FUNCTION_41	ELSE_141	IF_254	IF_255	CALL_221
0x74cf	          0x4889c7	                            mov rdi, rax	      7340	option.c	FUNCTION_41	ELSE_141	IF_254	IF_255	CALL_221
0x74d2	      0xe82e960000	              call sym.opt_strings_flags	      7340	option.c	FUNCTION_41	ELSE_141	IF_254	IF_255	CALL_221
0x74d7	          0x83f801	                              cmp eax, 1	      7340	option.c	FUNCTION_41	ELSE_141	IF_254	IF_255	CALL_221
0x74da	     0xf842a050000	                            je 0x4007a4a	      7340	option.c	FUNCTION_41	ELSE_141	IF_254	IF_255	CALL_221
0x74e0	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7341	option.c	FUNCTION_41	ELSE_141	IF_254	IF_255
0x74eb	      0xe91a050000	                           jmp 0x4007a4a	      7341	option.c	FUNCTION_41	ELSE_141	IF_254	IF_255
0x74f0	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      7344	option.c	FUNCTION_41	ELSE_142	IF_256
0x74fb	            0x7532	                           jne 0x400756f	      7344	option.c	FUNCTION_41	ELSE_142	IF_256
0x74fd	    0x488b05000000	            mov rax, qword [0x04007544] 	      7346	option.c	FUNCTION_41	ELSE_142	IF_256	IF_257	CALL_222
0x7504	      0xba01000000	                              mov edx, 1	      7346	option.c	FUNCTION_41	ELSE_142	IF_256	IF_257	CALL_222
0x7509	      0xbe00000000	                              mov esi, 0	      7346	option.c	FUNCTION_41	ELSE_142	IF_256	IF_257	CALL_222
0x750e	          0x4889c7	                            mov rdi, rax	      7346	option.c	FUNCTION_41	ELSE_142	IF_256	IF_257	CALL_222
0x7511	      0xe8c0950000	              call sym.check_opt_strings	      7346	option.c	FUNCTION_41	ELSE_142	IF_256	IF_257	CALL_222
0x7516	          0x83f801	                              cmp eax, 1	      7346	option.c	FUNCTION_41	ELSE_142	IF_256	IF_257	CALL_222
0x7519	     0xf84eb040000	                            je 0x4007a4a	      7346	option.c	FUNCTION_41	ELSE_142	IF_256	IF_257	CALL_222
0x751f	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7347	option.c	FUNCTION_41	ELSE_142	IF_256	IF_257
0x752a	      0xe9db040000	                           jmp 0x4007a4a	      7347	option.c	FUNCTION_41	ELSE_142	IF_256	IF_257
0x752f	    0x488b05000000	            mov rax, qword [0x04007576] 	      7350	option.c	FUNCTION_41	ELSE_143	IF_258
0x7536	    0x480598030000	                          add rax, 0x398	      7350	option.c	FUNCTION_41	ELSE_143	IF_258
0x753c	    0x483b8518ffff	             cmp rax, qword [rbp - 0xe8]	      7350	option.c	FUNCTION_41	ELSE_143	IF_258
0x7543	            0x752b	                           jne 0x40075b0	      7350	option.c	FUNCTION_41	ELSE_143	IF_258
0x7545	    0x488b05000000	            mov rax, qword [0x0400758c] 	      7352	option.c	FUNCTION_41	ELSE_143	IF_258	IF_259	CALL_223
0x754c	          0x4889c7	                            mov rdi, rax	      7352	option.c	FUNCTION_41	ELSE_143	IF_258	IF_259	CALL_223
0x754f	      0xe800000000	                          call 0x4007594	      7352	option.c	FUNCTION_41	ELSE_143	IF_258	IF_259	CALL_223
0x7554	            0x85c0	                           test eax, eax	      7352	option.c	FUNCTION_41	ELSE_143	IF_258	IF_259	CALL_223
0x7556	     0xf84ae040000	                            je 0x4007a4a	      7352	option.c	FUNCTION_41	ELSE_143	IF_258	IF_259	CALL_223
0x755c	    0x488b05000000	            mov rax, qword [0x040075a3] 	      7353	option.c	FUNCTION_41	ELSE_143	IF_258	CALL_224
0x7563	          0x4889c7	                            mov rdi, rax	      7353	option.c	FUNCTION_41	ELSE_143	IF_258	CALL_224
0x7566	      0xe800000000	                          call 0x40075ab	      7353	option.c	FUNCTION_41	ELSE_143	IF_258	CALL_224
0x756b	      0xe99a040000	                           jmp 0x4007a4a	      7353	option.c	FUNCTION_41	ELSE_143	IF_258	CALL_224
0x7570	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      7359	option.c	FUNCTION_41	ELSE_144	IF_260
0x757b	            0x7572	                           jne 0x400762f	      7359	option.c	FUNCTION_41	ELSE_144	IF_260
0x757d	    0x488b05000000	            mov rax, qword [0x040075c4] 	      7361	option.c	FUNCTION_41	ELSE_144	IF_260	IF_261	CALL_225
0x7584	      0xb901000000	                              mov ecx, 1	      7361	option.c	FUNCTION_41	ELSE_144	IF_260	IF_261	CALL_225
0x7589	      0xba00000000	                              mov edx, 0	      7361	option.c	FUNCTION_41	ELSE_144	IF_260	IF_261	CALL_225
0x758e	      0xbe00000000	                              mov esi, 0	      7361	option.c	FUNCTION_41	ELSE_144	IF_260	IF_261	CALL_225
0x7593	          0x4889c7	                            mov rdi, rax	      7361	option.c	FUNCTION_41	ELSE_144	IF_260	IF_261	CALL_225
0x7596	      0xe86a950000	              call sym.opt_strings_flags	      7361	option.c	FUNCTION_41	ELSE_144	IF_260	IF_261	CALL_225
0x759b	          0x83f801	                              cmp eax, 1	      7361	option.c	FUNCTION_41	ELSE_144	IF_260	IF_261	CALL_225
0x759e	            0x7410	                            je 0x40075f0	      7361	option.c	FUNCTION_41	ELSE_144	IF_260	IF_261	CALL_225
0x75a0	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7362	option.c	FUNCTION_41	ELSE_144	IF_260	IF_261
0x75ab	      0xe95a040000	                           jmp 0x4007a4a	      7362	option.c	FUNCTION_41	ELSE_144	IF_260	IF_261
0x75b0	    0x488b05000000	            mov rax, qword [0x040075f7] 	      7363	option.c	FUNCTION_41	ELSE_144	IF_260	ELSE_145	IF_262	CALL_226
0x75b7	    0x488b9598feff	            mov rdx, qword [rbp - 0x168]	      7363	option.c	FUNCTION_41	ELSE_144	IF_260	ELSE_145	IF_262	CALL_226
0x75be	          0x4889d6	                            mov rsi, rdx	      7363	option.c	FUNCTION_41	ELSE_144	IF_260	ELSE_145	IF_262	CALL_226
0x75c1	          0x4889c7	                            mov rdi, rax	      7363	option.c	FUNCTION_41	ELSE_144	IF_260	ELSE_145	IF_262	CALL_226
0x75c4	      0xe800000000	                          call 0x4007609	      7363	option.c	FUNCTION_41	ELSE_144	IF_260	ELSE_145	IF_262	CALL_226
0x75c9	            0x85c0	                           test eax, eax	      7363	option.c	FUNCTION_41	ELSE_144	IF_260	ELSE_145	IF_262	CALL_226
0x75cb	     0xf8439040000	                            je 0x4007a4a	      7363	option.c	FUNCTION_41	ELSE_144	IF_260	ELSE_145	IF_262	CALL_226
0x75d1	      0xe800000000	                          call 0x4007616	      7367	option.c	FUNCTION_41	ELSE_144	IF_260	ELSE_145	IF_262	CALL_227
0x75d6	    0x488b05000000	            mov rax, qword [0x0400761d] 	      7368	option.c	FUNCTION_41	ELSE_144	IF_260	ELSE_145	IF_262	CALL_228
0x75dd	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	      7368	option.c	FUNCTION_41	ELSE_144	IF_260	ELSE_145	IF_262	CALL_228
0x75e3	            0x89c7	                            mov edi, eax	      7368	option.c	FUNCTION_41	ELSE_144	IF_260	ELSE_145	IF_262	CALL_228
0x75e5	      0xe800000000	                          call 0x400762a	      7368	option.c	FUNCTION_41	ELSE_144	IF_260	ELSE_145	IF_262	CALL_228
0x75ea	      0xe91b040000	                           jmp 0x4007a4a	      7368	option.c	FUNCTION_41	ELSE_144	IF_260	ELSE_145	IF_262	CALL_228
0x75ef	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      7374	option.c	FUNCTION_41	ELSE_146	IF_263
0x75fa	     0xf85e8000000	                           jne 0x4007728	      7374	option.c	FUNCTION_41	ELSE_146	IF_263
0x7600	    0x488b05000000	            mov rax, qword [0x04007647] 	      7376	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264
0x7607	          0x4885c0	                           test rax, rax	      7376	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264
0x760a	     0xf84fa030000	                            je 0x4007a4a	      7376	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264
0x7610	    0x488b05000000	            mov rax, qword [0x04007657] 	      7378	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264
0x7617	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      7378	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264
0x761e	      0xe9ae000000	                           jmp 0x4007711	      7379	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264	WHILE_8
0x7623	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7381	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264	WHILE_8	IF_265	CALL_229
0x762a	           0xfb600	                   movzx eax, byte [rax]	      7381	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264	WHILE_8	IF_265	CALL_229
0x762d	           0xfb6c0	                           movzx eax, al	      7381	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264	WHILE_8	IF_265	CALL_229
0x7630	            0x89c6	                            mov esi, eax	      7381	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264	WHILE_8	IF_265	CALL_229
0x7632	      0xbf00000000	                              mov edi, 0	      7381	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264	WHILE_8	IF_265	CALL_229
0x7637	      0xe800000000	                          call 0x400767c	      7381	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264	WHILE_8	IF_265	CALL_229
0x763c	          0x4885c0	                           test rax, rax	      7381	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264	WHILE_8	IF_265	CALL_229
0x763f	            0x7458	                            je 0x40076d9	      7381	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264	WHILE_8	IF_265	CALL_229
0x7641	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7382	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264	WHILE_8	IF_265
0x7648	        0x4883c001	                              add rax, 1	      7382	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264	WHILE_8	IF_265
0x764c	           0xfb600	                   movzx eax, byte [rax]	      7382	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264	WHILE_8	IF_265
0x764f	            0x84c0	                             test al, al	      7382	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264	WHILE_8	IF_265
0x7651	            0x7446	                            je 0x40076d9	      7382	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264	WHILE_8	IF_265
0x7653	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7383	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264	WHILE_8	IF_265	CALL_230
0x765a	        0x4883c001	                              add rax, 1	      7383	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264	WHILE_8	IF_265	CALL_230
0x765e	           0xfb600	                   movzx eax, byte [rax]	      7383	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264	WHILE_8	IF_265	CALL_230
0x7661	           0xfb6c0	                           movzx eax, al	      7383	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264	WHILE_8	IF_265	CALL_230
0x7664	            0x89c6	                            mov esi, eax	      7383	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264	WHILE_8	IF_265	CALL_230
0x7666	      0xbf00000000	                              mov edi, 0	      7383	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264	WHILE_8	IF_265	CALL_230
0x766b	      0xe800000000	                          call 0x40076b0	      7383	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264	WHILE_8	IF_265	CALL_230
0x7670	          0x4885c0	                           test rax, rax	      7383	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264	WHILE_8	IF_265	CALL_230
0x7673	            0x7424	                            je 0x40076d9	      7383	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264	WHILE_8	IF_265	CALL_230
0x7675	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7384	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264	WHILE_8	IF_265
0x767c	        0x4883c002	                              add rax, 2	      7384	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264	WHILE_8	IF_265
0x7680	           0xfb600	                   movzx eax, byte [rax]	      7384	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264	WHILE_8	IF_265
0x7683	            0x84c0	                             test al, al	      7384	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264	WHILE_8	IF_265
0x7685	            0x7422	                            je 0x40076e9	      7384	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264	WHILE_8	IF_265
0x7687	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7384	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264	WHILE_8	IF_265
0x768e	        0x4883c002	                              add rax, 2	      7384	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264	WHILE_8	IF_265
0x7692	           0xfb600	                   movzx eax, byte [rax]	      7384	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264	WHILE_8	IF_265
0x7695	            0x3c2c	                            cmp al, 0x2c	      7384	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264	WHILE_8	IF_265
0x7697	            0x7410	                            je 0x40076e9	      7384	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264	WHILE_8	IF_265
0x7699	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7386	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264	WHILE_8	IF_265
0x76a4	      0xe961030000	                           jmp 0x4007a4a	      7387	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264	WHILE_8	IF_265
0x76a9	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7389	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264	WHILE_8	ELSE_147	IF_266
0x76b0	        0x4883c002	                              add rax, 2	      7389	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264	WHILE_8	ELSE_147	IF_266
0x76b4	           0xfb600	                   movzx eax, byte [rax]	      7389	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264	WHILE_8	ELSE_147	IF_266
0x76b7	            0x84c0	                             test al, al	      7389	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264	WHILE_8	ELSE_147	IF_266
0x76b9	     0xf844a030000	                            je 0x4007a49	      7389	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264	WHILE_8	ELSE_147	IF_266
0x76bf	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7392	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264	WHILE_8	ELSE_148
0x76c6	        0x4883c003	                              add rax, 3	      7392	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264	WHILE_8	ELSE_148
0x76ca	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      7392	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264	WHILE_8	ELSE_148
0x76d1	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7379	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264	WHILE_8
0x76d8	           0xfb600	                   movzx eax, byte [rax]	      7379	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264	WHILE_8
0x76db	            0x84c0	                             test al, al	      7379	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264	WHILE_8
0x76dd	     0xf8540ffffff	                           jne 0x4007663	      7379	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264	WHILE_8
0x76e3	      0xe922030000	                           jmp 0x4007a4a	      7379	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264	WHILE_8
0x76e8	    0x4881bd18ffff	               cmp qword [rbp - 0xe8], 0	      7400	option.c	FUNCTION_41	ELSE_148	ELSE_149	IF_267
0x76f3	            0x7514	                           jne 0x4007749	      7400	option.c	FUNCTION_41	ELSE_148	ELSE_149	IF_267
0x76f5	    0x488b05000000	            mov rax, qword [0x0400773c] 	      7403	option.c	FUNCTION_41	ELSE_148	ELSE_149	IF_267	CALL_231
0x76fc	          0x4889c7	                            mov rdi, rax	      7403	option.c	FUNCTION_41	ELSE_148	ELSE_149	IF_267	CALL_231
0x76ff	      0xe800000000	                          call 0x4007744	      7403	option.c	FUNCTION_41	ELSE_148	ELSE_149	IF_267	CALL_231
0x7704	      0xe901030000	                           jmp 0x4007a4a	      7403	option.c	FUNCTION_41	ELSE_148	ELSE_149	IF_267	CALL_231
0x7709	    0x4881bd18ffff	               cmp qword [rbp - 0xe8], 0	      7417	option.c	FUNCTION_41	ELSE_151	IF_270
0x7714	            0x7555	                           jne 0x40077ab	      7417	option.c	FUNCTION_41	ELSE_151	IF_270
0x7716	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      7419	option.c	FUNCTION_41	ELSE_151	IF_270	IF_271	CALL_233
0x771d	          0x488b00	                    mov rax, qword [rax]	      7419	option.c	FUNCTION_41	ELSE_151	IF_270	IF_271	CALL_233
0x7720	          0x4889c7	                            mov rdi, rax	      7419	option.c	FUNCTION_41	ELSE_151	IF_270	IF_271	CALL_233
0x7723	      0xe81fd4ffff	                 call sym.valid_filetype	      7419	option.c	FUNCTION_41	ELSE_151	IF_270	IF_271	CALL_233
0x7728	            0x85c0	                           test eax, eax	      7419	option.c	FUNCTION_41	ELSE_151	IF_270	IF_271	CALL_233
0x772a	            0x7510	                           jne 0x400777c	      7419	option.c	FUNCTION_41	ELSE_151	IF_270	IF_271	CALL_233
0x772c	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7420	option.c	FUNCTION_41	ELSE_151	IF_270	IF_271
0x7737	      0xe9ce020000	                           jmp 0x4007a4a	      7420	option.c	FUNCTION_41	ELSE_151	IF_270	IF_271
0x773c	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      7422	option.c	FUNCTION_41	ELSE_151	IF_270	CALL_234
0x7743	          0x488b10	                    mov rdx, qword [rax]	      7422	option.c	FUNCTION_41	ELSE_151	IF_270	CALL_234
0x7746	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      7422	option.c	FUNCTION_41	ELSE_151	IF_270	CALL_234
0x774d	          0x4889d6	                            mov rsi, rdx	      7422	option.c	FUNCTION_41	ELSE_151	IF_270	CALL_234
0x7750	          0x4889c7	                            mov rdi, rax	      7422	option.c	FUNCTION_41	ELSE_151	IF_270	CALL_234
0x7753	      0xe800000000	                          call 0x4007798	      7422	option.c	FUNCTION_41	ELSE_151	IF_270	CALL_234
0x7758	            0x85c0	                           test eax, eax	      7422	option.c	FUNCTION_41	ELSE_151	IF_270	CALL_234
0x775a	           0xf95c0	                                setne al	      7422	option.c	FUNCTION_41	ELSE_151	IF_270	CALL_234
0x775d	           0xfb6c0	                           movzx eax, al	      7422	option.c	FUNCTION_41	ELSE_151	IF_270	CALL_234
0x7760	    0x8985b4feffff	            mov dword [rbp - 0x14c], eax	      7422	option.c	FUNCTION_41	ELSE_151	IF_270	CALL_234
0x7766	      0xe99f020000	                           jmp 0x4007a4a	      7422	option.c	FUNCTION_41	ELSE_151	IF_270	CALL_234
0x776b	    0x4881bd18ffff	               cmp qword [rbp - 0xe8], 0	      7427	option.c	FUNCTION_41	ELSE_153	IF_272
0x7776	            0x752a	                           jne 0x40077e2	      7427	option.c	FUNCTION_41	ELSE_153	IF_272
0x7778	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      7429	option.c	FUNCTION_41	ELSE_153	IF_272	IF_273	CALL_235
0x777f	          0x488b00	                    mov rax, qword [rax]	      7429	option.c	FUNCTION_41	ELSE_153	IF_272	IF_273	CALL_235
0x7782	          0x4889c7	                            mov rdi, rax	      7429	option.c	FUNCTION_41	ELSE_153	IF_272	IF_273	CALL_235
0x7785	      0xe8bdd3ffff	                 call sym.valid_filetype	      7429	option.c	FUNCTION_41	ELSE_153	IF_272	IF_273	CALL_235
0x778a	            0x85c0	                           test eax, eax	      7429	option.c	FUNCTION_41	ELSE_153	IF_272	IF_273	CALL_235
0x778c	     0xf8578020000	                           jne 0x4007a4a	      7429	option.c	FUNCTION_41	ELSE_153	IF_272	IF_273	CALL_235
0x7792	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7430	option.c	FUNCTION_41	ELSE_153	IF_272	IF_273
0x779d	      0xe968020000	                           jmp 0x4007a4a	      7430	option.c	FUNCTION_41	ELSE_153	IF_272	IF_273
0x77a2	    0x488b05000000	            mov rax, qword [0x040077e9] 	      7436	option.c	FUNCTION_41	ELSE_154	IF_274
0x77a9	    0x4805c0020000	                          add rax, 0x2c0	      7436	option.c	FUNCTION_41	ELSE_154	IF_274
0x77af	    0x483b85a0feff	            cmp rax, qword [rbp - 0x160]	      7436	option.c	FUNCTION_41	ELSE_154	IF_274
0x77b6	            0x754c	                           jne 0x4007844	      7436	option.c	FUNCTION_41	ELSE_154	IF_274
0x77b8	    0x488b05000000	            mov rax, qword [0x040077ff] 	      7438	option.c	FUNCTION_41	ELSE_154	IF_274	IF_275	CALL_236
0x77bf	    0x488b80c00200	           mov rax, qword [rax + 0x2c0] 	      7438	option.c	FUNCTION_41	ELSE_154	IF_274	IF_275	CALL_236
0x77c6	           0xfb600	                   movzx eax, byte [rax]	      7438	option.c	FUNCTION_41	ELSE_154	IF_274	IF_275	CALL_236
0x77c9	            0x84c0	                             test al, al	      7438	option.c	FUNCTION_41	ELSE_154	IF_274	IF_275	CALL_236
0x77cb	     0xf8439020000	                            je 0x4007a4a	      7438	option.c	FUNCTION_41	ELSE_154	IF_274	IF_275	CALL_236
0x77d1	    0x488b05000000	            mov rax, qword [0x04007818] 	      7438	option.c	FUNCTION_41	ELSE_154	IF_274	IF_275	CALL_236
0x77d8	    0x488b80c00200	           mov rax, qword [rax + 0x2c0] 	      7438	option.c	FUNCTION_41	ELSE_154	IF_274	IF_275	CALL_236
0x77df	      0xbe01000000	                              mov esi, 1	      7438	option.c	FUNCTION_41	ELSE_154	IF_274	IF_275	CALL_236
0x77e4	          0x4889c7	                            mov rdi, rax	      7438	option.c	FUNCTION_41	ELSE_154	IF_274	IF_275	CALL_236
0x77e7	      0xe800000000	                          call 0x400782c	      7438	option.c	FUNCTION_41	ELSE_154	IF_274	IF_275	CALL_236
0x77ec	            0x85c0	                           test eax, eax	      7438	option.c	FUNCTION_41	ELSE_154	IF_274	IF_275	CALL_236
0x77ee	     0xf8516020000	                           jne 0x4007a4a	      7438	option.c	FUNCTION_41	ELSE_154	IF_274	IF_275	CALL_236
0x77f4	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7439	option.c	FUNCTION_41	ELSE_154	IF_274	IF_275
0x77ff	      0xe906020000	                           jmp 0x4007a4a	      7439	option.c	FUNCTION_41	ELSE_154	IF_274	IF_275
0x7804	    0x488b05000000	            mov rax, qword [0x0400784b] 	      7442	option.c	FUNCTION_41	ELSE_155	IF_276
0x780b	    0x4805c8020000	                          add rax, 0x2c8	      7442	option.c	FUNCTION_41	ELSE_155	IF_276
0x7811	    0x483b85a0feff	            cmp rax, qword [rbp - 0x160]	      7442	option.c	FUNCTION_41	ELSE_155	IF_276
0x7818	     0xf858c000000	                           jne 0x40078ea	      7442	option.c	FUNCTION_41	ELSE_155	IF_276
0x781e	    0x488b05000000	            mov rax, qword [0x04007865] 	      7444	option.c	FUNCTION_41	ELSE_155	IF_276	IF_277
0x7825	    0x488b80c80200	           mov rax, qword [rax + 0x2c8] 	      7444	option.c	FUNCTION_41	ELSE_155	IF_276	IF_277
0x782c	           0xfb600	                   movzx eax, byte [rax]	      7444	option.c	FUNCTION_41	ELSE_155	IF_276	IF_277
0x782f	            0x84c0	                             test al, al	      7444	option.c	FUNCTION_41	ELSE_155	IF_276	IF_277
0x7831	     0xf84d3010000	                            je 0x4007a4a	      7444	option.c	FUNCTION_41	ELSE_155	IF_276	IF_277
0x7837	    0x488b05000000	            mov rax, qword [0x0400787e] 	      7446	option.c	FUNCTION_41	ELSE_155	IF_276	IF_277	CALL_237
0x783e	    0x488b80c80200	           mov rax, qword [rax + 0x2c8] 	      7446	option.c	FUNCTION_41	ELSE_155	IF_276	IF_277	CALL_237
0x7845	          0x4889c7	                            mov rdi, rax	      7446	option.c	FUNCTION_41	ELSE_155	IF_276	IF_277	CALL_237
0x7848	      0xe800000000	                          call 0x400788d	      7446	option.c	FUNCTION_41	ELSE_155	IF_276	IF_277	CALL_237
0x784d	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      7446	option.c	FUNCTION_41	ELSE_155	IF_276	IF_277	CALL_237
0x7854	    0x488b05000000	            mov rax, qword [0x0400789b] 	      7447	option.c	FUNCTION_41	ELSE_155	IF_276	IF_277	IF_278	CALL_238
0x785b	    0x488b90c80200	           mov rdx, qword [rax + 0x2c8] 	      7447	option.c	FUNCTION_41	ELSE_155	IF_276	IF_277	IF_278	CALL_238
0x7862	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7447	option.c	FUNCTION_41	ELSE_155	IF_276	IF_277	IF_278	CALL_238
0x7869	          0x4839c2	                            cmp rdx, rax	      7447	option.c	FUNCTION_41	ELSE_155	IF_276	IF_277	IF_278	CALL_238
0x786c	            0x742c	                            je 0x40078da	      7447	option.c	FUNCTION_41	ELSE_155	IF_276	IF_277	IF_278	CALL_238
0x786e	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7447	option.c	FUNCTION_41	ELSE_155	IF_276	IF_277	IF_278	CALL_238
0x7875	           0xfb600	                   movzx eax, byte [rax]	      7447	option.c	FUNCTION_41	ELSE_155	IF_276	IF_277	IF_278	CALL_238
0x7878	            0x3c78	                            cmp al, 0x78	      7447	option.c	FUNCTION_41	ELSE_155	IF_276	IF_277	IF_278	CALL_238
0x787a	            0x751e	                           jne 0x40078da	      7447	option.c	FUNCTION_41	ELSE_155	IF_276	IF_277	IF_278	CALL_238
0x787c	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7447	option.c	FUNCTION_41	ELSE_155	IF_276	IF_277	IF_278	CALL_238
0x7883	        0x4883c001	                              add rax, 1	      7447	option.c	FUNCTION_41	ELSE_155	IF_276	IF_277	IF_278	CALL_238
0x7887	          0x4889c7	                            mov rdi, rax	      7447	option.c	FUNCTION_41	ELSE_155	IF_276	IF_277	IF_278	CALL_238
0x788a	      0xe800000000	                          call 0x40078cf	      7447	option.c	FUNCTION_41	ELSE_155	IF_276	IF_277	IF_278	CALL_238
0x788f	           0xfb600	                   movzx eax, byte [rax]	      7447	option.c	FUNCTION_41	ELSE_155	IF_276	IF_277	IF_278	CALL_238
0x7892	            0x84c0	                             test al, al	      7447	option.c	FUNCTION_41	ELSE_155	IF_276	IF_277	IF_278	CALL_238
0x7894	     0xf8470010000	                            je 0x4007a4a	      7447	option.c	FUNCTION_41	ELSE_155	IF_276	IF_277	IF_278	CALL_238
0x789a	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	      7448	option.c	FUNCTION_41	ELSE_155	IF_276	IF_277	IF_278
0x78a5	      0xe960010000	                           jmp 0x4007a4a	      7448	option.c	FUNCTION_41	ELSE_155	IF_276	IF_277	IF_278
0x78aa	    0x48c785d8feff	              mov qword [rbp - 0x128], 0	      7456	option.c	FUNCTION_41	ELSE_156
0x78b5	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      7457	option.c	FUNCTION_41	ELSE_156	IF_279
0x78c0	            0x750b	                           jne 0x400790d	      7457	option.c	FUNCTION_41	ELSE_156	IF_279
0x78c2	    0x48c785d8feff	              mov qword [rbp - 0x128], 0	      7458	option.c	FUNCTION_41	ELSE_156	IF_279
0x78cd	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      7459	option.c	FUNCTION_41	ELSE_156	IF_280
0x78d8	            0x750d	                           jne 0x4007927	      7459	option.c	FUNCTION_41	ELSE_156	IF_280
0x78da	    0x48c785d8feff	              mov qword [rbp - 0x128], 0	      7460	option.c	FUNCTION_41	ELSE_156	IF_280
0x78e5	            0xeb78	                           jmp 0x400799f	      7460	option.c	FUNCTION_41	ELSE_156	IF_280
0x78e7	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      7461	option.c	FUNCTION_41	ELSE_156	ELSE_157	IF_281
0x78f2	            0x750d	                           jne 0x4007941	      7461	option.c	FUNCTION_41	ELSE_156	ELSE_157	IF_281
0x78f4	    0x48c785d8feff	              mov qword [rbp - 0x128], 0	      7462	option.c	FUNCTION_41	ELSE_156	ELSE_157	IF_281
0x78ff	            0xeb5e	                           jmp 0x400799f	      7462	option.c	FUNCTION_41	ELSE_156	ELSE_157	IF_281
0x7901	    0x488b05000000	            mov rax, qword [0x04007948] 	      7463	option.c	FUNCTION_41	ELSE_156	ELSE_158	IF_282
0x7908	    0x480588140000	                         add rax, 0x1488	      7463	option.c	FUNCTION_41	ELSE_156	ELSE_158	IF_282
0x790e	    0x483b85a0feff	            cmp rax, qword [rbp - 0x160]	      7463	option.c	FUNCTION_41	ELSE_156	ELSE_158	IF_282
0x7915	            0x750d	                           jne 0x4007964	      7463	option.c	FUNCTION_41	ELSE_156	ELSE_158	IF_282
0x7917	    0x48c785d8feff	              mov qword [rbp - 0x128], 0	      7464	option.c	FUNCTION_41	ELSE_156	ELSE_158	IF_282
0x7922	            0xeb3b	                           jmp 0x400799f	      7464	option.c	FUNCTION_41	ELSE_156	ELSE_158	IF_282
0x7924	    0x488b05000000	            mov rax, qword [0x0400796b] 	      7466	option.c	FUNCTION_41	ELSE_156	ELSE_159	IF_283
0x792b	    0x4805a0020000	                          add rax, 0x2a0	      7466	option.c	FUNCTION_41	ELSE_156	ELSE_159	IF_283
0x7931	    0x483b85a0feff	            cmp rax, qword [rbp - 0x160]	      7466	option.c	FUNCTION_41	ELSE_156	ELSE_159	IF_283
0x7938	            0x750d	                           jne 0x4007987	      7466	option.c	FUNCTION_41	ELSE_156	ELSE_159	IF_283
0x793a	    0x48c785d8feff	              mov qword [rbp - 0x128], 0	      7467	option.c	FUNCTION_41	ELSE_156	ELSE_159	IF_283
0x7945	            0xeb18	                           jmp 0x400799f	      7467	option.c	FUNCTION_41	ELSE_156	ELSE_159	IF_283
0x7947	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      7469	option.c	FUNCTION_41	ELSE_156	ELSE_160	IF_284
0x7952	            0x750b	                           jne 0x400799f	      7469	option.c	FUNCTION_41	ELSE_156	ELSE_160	IF_284
0x7954	    0x48c785d8feff	              mov qword [rbp - 0x128], 0	      7472	option.c	FUNCTION_41	ELSE_156	ELSE_160	IF_284
0x795f	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7482	option.c	FUNCTION_41	ELSE_156	IF_287
0x7966	          0x4885c0	                           test rax, rax	      7482	option.c	FUNCTION_41	ELSE_156	IF_287
0x7969	     0xf849b000000	                            je 0x4007a4a	      7482	option.c	FUNCTION_41	ELSE_156	IF_287
0x796f	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      7484	option.c	FUNCTION_41	ELSE_156	IF_287	FOR_9
0x7976	          0x488b00	                    mov rax, qword [rax]	      7484	option.c	FUNCTION_41	ELSE_156	IF_287	FOR_9
0x7979	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      7484	option.c	FUNCTION_41	ELSE_156	IF_287	FOR_9
0x7980	            0xeb5c	                           jmp 0x4007a1e	      7484	option.c	FUNCTION_41	ELSE_156	IF_287	FOR_9
0x7982	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7485	option.c	FUNCTION_41	ELSE_156	IF_287	FOR_9	IF_288	CALL_240
0x7989	           0xfb600	                   movzx eax, byte [rax]	      7485	option.c	FUNCTION_41	ELSE_156	IF_287	FOR_9	IF_288	CALL_240
0x798c	           0xfb6d0	                           movzx edx, al	      7485	option.c	FUNCTION_41	ELSE_156	IF_287	FOR_9	IF_288	CALL_240
0x798f	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7485	option.c	FUNCTION_41	ELSE_156	IF_287	FOR_9	IF_288	CALL_240
0x7996	            0x89d6	                            mov esi, edx	      7485	option.c	FUNCTION_41	ELSE_156	IF_287	FOR_9	IF_288	CALL_240
0x7998	          0x4889c7	                            mov rdi, rax	      7485	option.c	FUNCTION_41	ELSE_156	IF_287	FOR_9	IF_288	CALL_240
0x799b	      0xe800000000	                          call 0x40079e0	      7485	option.c	FUNCTION_41	ELSE_156	IF_287	FOR_9	IF_288	CALL_240
0x79a0	          0x4885c0	                           test rax, rax	      7485	option.c	FUNCTION_41	ELSE_156	IF_287	FOR_9	IF_288	CALL_240
0x79a3	            0x7527	                           jne 0x4007a0c	      7485	option.c	FUNCTION_41	ELSE_156	IF_287	FOR_9	IF_288	CALL_240
0x79a5	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7487	option.c	FUNCTION_41	ELSE_156	IF_287	FOR_9	IF_288	CALL_241
0x79ac	           0xfb600	                   movzx eax, byte [rax]	      7487	option.c	FUNCTION_41	ELSE_156	IF_287	FOR_9	IF_288	CALL_241
0x79af	           0xfb6d0	                           movzx edx, al	      7487	option.c	FUNCTION_41	ELSE_156	IF_287	FOR_9	IF_288	CALL_241
0x79b2	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      7487	option.c	FUNCTION_41	ELSE_156	IF_287	FOR_9	IF_288	CALL_241
0x79b9	            0x89d6	                            mov esi, edx	      7487	option.c	FUNCTION_41	ELSE_156	IF_287	FOR_9	IF_288	CALL_241
0x79bb	          0x4889c7	                            mov rdi, rax	      7487	option.c	FUNCTION_41	ELSE_156	IF_287	FOR_9	IF_288	CALL_241
0x79be	      0xe8a3bfffff	                   call sym.illegal_char	      7487	option.c	FUNCTION_41	ELSE_156	IF_287	FOR_9	IF_288	CALL_241
0x79c3	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      7487	option.c	FUNCTION_41	ELSE_156	IF_287	FOR_9	IF_288	CALL_241
0x79ca	            0xeb3e	                           jmp 0x4007a4a	      7488	option.c	FUNCTION_41	ELSE_156	IF_287	FOR_9	IF_288
0x79cc	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7484	option.c	FUNCTION_41	ELSE_156	IF_287	FOR_9
0x79d3	        0x4883c001	                              add rax, 1	      7484	option.c	FUNCTION_41	ELSE_156	IF_287	FOR_9
0x79d7	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      7484	option.c	FUNCTION_41	ELSE_156	IF_287	FOR_9
0x79de	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7484	option.c	FUNCTION_41	ELSE_156	IF_287	FOR_9
0x79e5	           0xfb600	                   movzx eax, byte [rax]	      7484	option.c	FUNCTION_41	ELSE_156	IF_287	FOR_9
0x79e8	            0x84c0	                             test al, al	      7484	option.c	FUNCTION_41	ELSE_156	IF_287	FOR_9
0x79ea	            0x7596	                           jne 0x40079c2	      7484	option.c	FUNCTION_41	ELSE_156	IF_287	FOR_9
0x79ec	            0xeb1c	                           jmp 0x4007a4a	      7484	option.c	FUNCTION_41	ELSE_156	IF_287	FOR_9
0x79ee	              0x90	                                     nop	      6170	option.c	FUNCTION_41	ELSE_13	IF_23	FOR_1	IF_25
0x79ef	            0xeb19	                           jmp 0x4007a4a	      6170	option.c	FUNCTION_41	ELSE_13	IF_23	FOR_1	IF_25
0x79f1	              0x90	                                     nop	      6223	option.c	FUNCTION_41	ELSE_19	IF_37	IF_38	CALL_27
0x79f2	            0xeb16	                           jmp 0x4007a4a	      6223	option.c	FUNCTION_41	ELSE_19	IF_37	IF_38	CALL_27
0x79f4	              0x90	                                     nop	      6358	option.c	FUNCTION_41	ELSE_30	IF_54	IF_63
0x79f5	            0xeb13	                           jmp 0x4007a4a	      6358	option.c	FUNCTION_41	ELSE_30	IF_54	IF_63
0x79f7	              0x90	                                     nop	      6597	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_109
0x79f8	            0xeb10	                           jmp 0x4007a4a	      6597	option.c	FUNCTION_41	ELSE_54	IF_103	IF_104	FOR_3	IF_109
0x79fa	              0x90	                                     nop	      6612	option.c	FUNCTION_41	ELSE_54	IF_103	ELSE_55	FOR_4	IF_111
0x79fb	            0xeb0d	                           jmp 0x4007a4a	      6612	option.c	FUNCTION_41	ELSE_54	IF_103	ELSE_55	FOR_4	IF_111
0x79fd	              0x90	                                     nop	      6638	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	IF_116
0x79fe	            0xeb0a	                           jmp 0x4007a4a	      6638	option.c	FUNCTION_41	ELSE_56	IF_112	FOR_5	IF_116
0x7a00	              0x90	                                     nop	      6778	option.c	FUNCTION_41	ELSE_70	IF_135	IF_141
0x7a01	            0xeb07	                           jmp 0x4007a4a	      6778	option.c	FUNCTION_41	ELSE_70	IF_135	IF_141
0x7a03	              0x90	                                     nop	      7103	option.c	FUNCTION_41	ELSE_112	IF_203
0x7a04	            0xeb04	                           jmp 0x4007a4a	      7103	option.c	FUNCTION_41	ELSE_112	IF_203
0x7a06	              0x90	                                     nop	      7137	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_211
0x7a07	            0xeb01	                           jmp 0x4007a4a	      7137	option.c	FUNCTION_41	ELSE_115	IF_210	FOR_8	IF_211
0x7a09	              0x90	                                     nop	      7390	option.c	FUNCTION_41	ELSE_146	IF_263	IF_264	WHILE_8	ELSE_147	IF_266
0x7a0a	    0x4883bde0feff	              cmp qword [rbp - 0x120], 0	      7496	option.c	FUNCTION_41	IF_289
0x7a12	            0x7455	                            je 0x4007aa9	      7496	option.c	FUNCTION_41	IF_289
0x7a14	    0x83bda8feffff	              cmp dword [rbp - 0x158], 0	      7498	option.c	FUNCTION_41	IF_289	IF_290
0x7a1b	            0x7412	                            je 0x4007a6f	      7498	option.c	FUNCTION_41	IF_289	IF_290
0x7a1d	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      7499	option.c	FUNCTION_41	IF_289	CALL_242
0x7a24	          0x488b00	                    mov rax, qword [rax]	      7499	option.c	FUNCTION_41	IF_289	CALL_242
0x7a27	          0x4889c7	                            mov rdi, rax	      7499	option.c	FUNCTION_41	IF_289	CALL_242
0x7a2a	      0xe800000000	                          call 0x4007a6f	      7499	option.c	FUNCTION_41	IF_289	CALL_242
0x7a2f	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      7500	option.c	FUNCTION_41	IF_289
0x7a36	    0x488b9598feff	            mov rdx, qword [rbp - 0x168]	      7500	option.c	FUNCTION_41	IF_289
0x7a3d	          0x488910	                    mov qword [rax], rdx	      7500	option.c	FUNCTION_41	IF_289
0x7a40	    0x83bdb0feffff	              cmp dword [rbp - 0x150], 0	      7504	option.c	FUNCTION_41	IF_289	IF_291
0x7a47	            0x7405	                            je 0x4007a8e	      7504	option.c	FUNCTION_41	IF_289	IF_291
0x7a49	      0xe800000000	                          call 0x4007a8e	      7505	option.c	FUNCTION_41	IF_289	CALL_243
0x7a4e	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      7506	option.c	FUNCTION_41	IF_289	IF_292
0x7a59	     0xf8531030000	                           jne 0x4007dd0	      7506	option.c	FUNCTION_41	IF_289	IF_292
0x7a5f	      0xe800000000	                          call 0x4007aa4	      7507	option.c	FUNCTION_41	IF_289	CALL_244
0x7a64	      0xe927030000	                           jmp 0x4007dd0	      7507	option.c	FUNCTION_41	IF_289	CALL_244
0x7a69	    0x8b1500000000	            mov edx, dword [0x04007aaf] 	      7513	option.c	FUNCTION_41	ELSE_162	CALL_245
0x7a6f	    0x8b8d8cfeffff	            mov ecx, dword [rbp - 0x174]	      7513	option.c	FUNCTION_41	ELSE_162	CALL_245
0x7a75	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	      7513	option.c	FUNCTION_41	ELSE_162	CALL_245
0x7a7b	            0x89ce	                            mov esi, ecx	      7513	option.c	FUNCTION_41	ELSE_162	CALL_245
0x7a7d	            0x89c7	                            mov edi, eax	      7513	option.c	FUNCTION_41	ELSE_162	CALL_245
0x7a7f	      0xe8b2100000	        call sym.set_option_scriptID_idx	      7513	option.c	FUNCTION_41	ELSE_162	CALL_245
0x7a84	    0x4883bde8feff	              cmp qword [rbp - 0x118], 0	      7520	option.c	FUNCTION_41	ELSE_162	IF_293
0x7a8c	            0x740f	                            je 0x4007add	      7520	option.c	FUNCTION_41	ELSE_162	IF_293
0x7a8e	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      7521	option.c	FUNCTION_41	ELSE_162	CALL_246
0x7a95	          0x4889c7	                            mov rdi, rax	      7521	option.c	FUNCTION_41	ELSE_162	CALL_246
0x7a98	      0xe800000000	                          call 0x4007add	      7521	option.c	FUNCTION_41	ELSE_162	CALL_246
0x7a9d	    0x83bda8feffff	              cmp dword [rbp - 0x158], 0	      7522	option.c	FUNCTION_41	ELSE_162	IF_294
0x7aa4	            0x7433	                            je 0x4007b19	      7522	option.c	FUNCTION_41	ELSE_162	IF_294
0x7aa6	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	      7523	option.c	FUNCTION_41	ELSE_162	IF_294
0x7aac	            0x4898	                                    cdqe	      7523	option.c	FUNCTION_41	ELSE_162	IF_294
0x7aae	        0x48c1e006	                              shl rax, 6	      7523	option.c	FUNCTION_41	ELSE_162	IF_294
0x7ab2	    0x480500000000	                              add rax, 0	      7523	option.c	FUNCTION_41	ELSE_162	IF_294
0x7ab8	          0x488b00	                    mov rax, qword [rax]	      7523	option.c	FUNCTION_41	ELSE_162	IF_294
0x7abb	        0x4883c808	                               or rax, 8	      7523	option.c	FUNCTION_41	ELSE_162	IF_294
0x7abf	          0x4889c2	                            mov rdx, rax	      7523	option.c	FUNCTION_41	ELSE_162	IF_294
0x7ac2	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	      7523	option.c	FUNCTION_41	ELSE_162	IF_294
0x7ac8	            0x4898	                                    cdqe	      7523	option.c	FUNCTION_41	ELSE_162	IF_294
0x7aca	        0x48c1e006	                              shl rax, 6	      7523	option.c	FUNCTION_41	ELSE_162	IF_294
0x7ace	    0x480500000000	                              add rax, 0	      7523	option.c	FUNCTION_41	ELSE_162	IF_294
0x7ad4	          0x488910	                    mov qword [rax], rdx	      7523	option.c	FUNCTION_41	ELSE_162	IF_294
0x7ad7	            0xeb31	                           jmp 0x4007b4a	      7523	option.c	FUNCTION_41	ELSE_162	IF_294
0x7ad9	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	      7525	option.c	FUNCTION_41	ELSE_162	ELSE_163
0x7adf	            0x4898	                                    cdqe	      7525	option.c	FUNCTION_41	ELSE_162	ELSE_163
0x7ae1	        0x48c1e006	                              shl rax, 6	      7525	option.c	FUNCTION_41	ELSE_162	ELSE_163
0x7ae5	    0x480500000000	                              add rax, 0	      7525	option.c	FUNCTION_41	ELSE_162	ELSE_163
0x7aeb	          0x488b00	                    mov rax, qword [rax]	      7525	option.c	FUNCTION_41	ELSE_162	ELSE_163
0x7aee	        0x4883e0f7	             and rax, 0xfffffffffffffff7	      7525	option.c	FUNCTION_41	ELSE_162	ELSE_163
0x7af2	          0x4889c2	                            mov rdx, rax	      7525	option.c	FUNCTION_41	ELSE_162	ELSE_163
0x7af5	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	      7525	option.c	FUNCTION_41	ELSE_162	ELSE_163
0x7afb	            0x4898	                                    cdqe	      7525	option.c	FUNCTION_41	ELSE_162	ELSE_163
0x7afd	        0x48c1e006	                              shl rax, 6	      7525	option.c	FUNCTION_41	ELSE_162	ELSE_163
0x7b01	    0x480500000000	                              add rax, 0	      7525	option.c	FUNCTION_41	ELSE_162	ELSE_163
0x7b07	          0x488910	                    mov qword [rax], rdx	      7525	option.c	FUNCTION_41	ELSE_162	ELSE_163
0x7b0a	    0x8b858cfeffff	            mov eax, dword [rbp - 0x174]	      7527	option.c	FUNCTION_41	ELSE_162	ELSE_163	IF_295
0x7b10	          0x83e006	                              and eax, 6	      7527	option.c	FUNCTION_41	ELSE_162	ELSE_163	IF_295
0x7b13	            0x85c0	                           test eax, eax	      7527	option.c	FUNCTION_41	ELSE_162	ELSE_163	IF_295
0x7b15	            0x7568	                           jne 0x4007bbf	      7527	option.c	FUNCTION_41	ELSE_162	ELSE_163	IF_295
0x7b17	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	      7528	option.c	FUNCTION_41	ELSE_162	ELSE_163	IF_295
0x7b1d	            0x4898	                                    cdqe	      7528	option.c	FUNCTION_41	ELSE_162	ELSE_163	IF_295
0x7b1f	        0x48c1e006	                              shl rax, 6	      7528	option.c	FUNCTION_41	ELSE_162	ELSE_163	IF_295
0x7b23	    0x480500000000	                              add rax, 0	      7528	option.c	FUNCTION_41	ELSE_162	ELSE_163	IF_295
0x7b29	            0x8b00	                    mov eax, dword [rax]	      7528	option.c	FUNCTION_41	ELSE_162	ELSE_163	IF_295
0x7b2b	      0x2500100000	                         and eax, 0x1000	      7528	option.c	FUNCTION_41	ELSE_162	ELSE_163	IF_295
0x7b30	            0x85c0	                           test eax, eax	      7528	option.c	FUNCTION_41	ELSE_162	ELSE_163	IF_295
0x7b32	            0x744b	                            je 0x4007bbf	      7528	option.c	FUNCTION_41	ELSE_162	ELSE_163	IF_295
0x7b34	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	      7532	option.c	FUNCTION_41	ELSE_162	ELSE_163	IF_295	CALL_247
0x7b3a	            0x4898	                                    cdqe	      7532	option.c	FUNCTION_41	ELSE_162	ELSE_163	IF_295	CALL_247
0x7b3c	        0x48c1e006	                              shl rax, 6	      7532	option.c	FUNCTION_41	ELSE_162	ELSE_163	IF_295	CALL_247
0x7b40	    0x480500000000	                              add rax, 0	      7532	option.c	FUNCTION_41	ELSE_162	ELSE_163	IF_295	CALL_247
0x7b46	      0xbe04000000	                              mov esi, 4	      7532	option.c	FUNCTION_41	ELSE_162	ELSE_163	IF_295	CALL_247
0x7b4b	          0x4889c7	                            mov rdi, rax	      7532	option.c	FUNCTION_41	ELSE_162	ELSE_163	IF_295	CALL_247
0x7b4e	      0xe8b64e0000	                 call sym.get_varp_scope	      7532	option.c	FUNCTION_41	ELSE_162	ELSE_163	IF_295	CALL_247
0x7b53	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      7532	option.c	FUNCTION_41	ELSE_162	ELSE_163	IF_295	CALL_247
0x7b5a	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7533	option.c	FUNCTION_41	ELSE_162	ELSE_163	IF_295	CALL_248
0x7b61	          0x488b00	                    mov rax, qword [rax]	      7533	option.c	FUNCTION_41	ELSE_162	ELSE_163	IF_295	CALL_248
0x7b64	          0x4889c7	                            mov rdi, rax	      7533	option.c	FUNCTION_41	ELSE_162	ELSE_163	IF_295	CALL_248
0x7b67	      0xe800000000	                          call 0x4007bac	      7533	option.c	FUNCTION_41	ELSE_162	ELSE_163	IF_295	CALL_248
0x7b6c	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7534	option.c	FUNCTION_41	ELSE_162	ELSE_163	IF_295
0x7b73	    0x488b15000000	            mov rdx, qword [0x04007bba] 	      7534	option.c	FUNCTION_41	ELSE_162	ELSE_163	IF_295
0x7b7a	          0x488910	                    mov qword [rax], rdx	      7534	option.c	FUNCTION_41	ELSE_162	ELSE_163	IF_295
0x7b7d	            0xeb2d	                           jmp 0x4007bec	      7534	option.c	FUNCTION_41	ELSE_162	ELSE_163	IF_295
0x7b7f	    0x8b858cfeffff	            mov eax, dword [rbp - 0x174]	      7538	option.c	FUNCTION_41	ELSE_162	ELSE_164	IF_296
0x7b85	          0x83e004	                              and eax, 4	      7538	option.c	FUNCTION_41	ELSE_162	ELSE_164	IF_296
0x7b88	            0x85c0	                           test eax, eax	      7538	option.c	FUNCTION_41	ELSE_162	ELSE_164	IF_296
0x7b8a	            0x7520	                           jne 0x4007bec	      7538	option.c	FUNCTION_41	ELSE_162	ELSE_164	IF_296
0x7b8c	    0x83bd8cfeffff	              cmp dword [rbp - 0x174], 2	      7538	option.c	FUNCTION_41	ELSE_162	ELSE_164	IF_296
0x7b93	            0x7417	                            je 0x4007bec	      7538	option.c	FUNCTION_41	ELSE_162	ELSE_164	IF_296
0x7b95	    0x488b95a0feff	            mov rdx, qword [rbp - 0x160]	      7539	option.c	FUNCTION_41	ELSE_162	ELSE_164	IF_296
0x7b9c	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	      7539	option.c	FUNCTION_41	ELSE_162	ELSE_164	IF_296
0x7ba2	          0x4889d6	                            mov rsi, rdx	      7539	option.c	FUNCTION_41	ELSE_162	ELSE_164	IF_296
0x7ba5	            0x89c7	                            mov edi, eax	      7539	option.c	FUNCTION_41	ELSE_162	ELSE_164	IF_296
0x7ba7	      0xe867cdffff	       call sym.set_string_option_global	      7539	option.c	FUNCTION_41	ELSE_162	ELSE_164	IF_296
0x7bac	    0x488b05000000	            mov rax, qword [0x04007bf3] 	      7547	option.c	FUNCTION_41	ELSE_162	IF_297
0x7bb3	    0x480588150000	                         add rax, 0x1588	      7547	option.c	FUNCTION_41	ELSE_162	IF_297
0x7bb9	    0x483b85a0feff	            cmp rax, qword [rbp - 0x160]	      7547	option.c	FUNCTION_41	ELSE_162	IF_297
0x7bc0	            0x753d	                           jne 0x4007c3f	      7547	option.c	FUNCTION_41	ELSE_162	IF_297
0x7bc2	    0x488b0d000000	            mov rcx, qword [0x04007c09] 	      7549	option.c	FUNCTION_41	ELSE_162	IF_297	CALL_250
0x7bc9	    0x488b05000000	            mov rax, qword [0x04007c10] 	      7550	option.c	FUNCTION_41	ELSE_162	IF_297
0x7bd0	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	      7549	option.c	FUNCTION_41	ELSE_162	IF_297	CALL_250
0x7bd7	    0x488b05000000	            mov rax, qword [0x04007c1e] 	      7549	option.c	FUNCTION_41	ELSE_162	IF_297	CALL_250
0x7bde	    0x488b80881500	          mov rax, qword [rax + 0x1588] 	      7549	option.c	FUNCTION_41	ELSE_162	IF_297	CALL_250
0x7be5	          0x4989c8	                             mov r8, rcx	      7549	option.c	FUNCTION_41	ELSE_162	IF_297	CALL_250
0x7be8	      0xb901000000	                              mov ecx, 1	      7549	option.c	FUNCTION_41	ELSE_162	IF_297	CALL_250
0x7bed	          0x4889c6	                            mov rsi, rax	      7549	option.c	FUNCTION_41	ELSE_162	IF_297	CALL_250
0x7bf0	      0xbf38000000	                           mov edi, 0x38	      7549	option.c	FUNCTION_41	ELSE_162	IF_297	CALL_250
0x7bf5	      0xe800000000	                          call 0x4007c3a	      7549	option.c	FUNCTION_41	ELSE_162	IF_297	CALL_250
0x7bfa	      0xe98f000000	                           jmp 0x4007cce	      7549	option.c	FUNCTION_41	ELSE_162	IF_297	CALL_250
0x7bff	    0x488b05000000	            mov rax, qword [0x04007c46] 	      7553	option.c	FUNCTION_41	ELSE_162	ELSE_165	IF_298
0x7c06	    0x480580140000	                         add rax, 0x1480	      7553	option.c	FUNCTION_41	ELSE_162	ELSE_165	IF_298
0x7c0c	    0x483b85a0feff	            cmp rax, qword [rbp - 0x160]	      7553	option.c	FUNCTION_41	ELSE_162	ELSE_165	IF_298
0x7c13	            0x7579	                           jne 0x4007cce	      7553	option.c	FUNCTION_41	ELSE_162	ELSE_165	IF_298
0x7c15	    0x8b858cfeffff	            mov eax, dword [rbp - 0x174]	      7558	option.c	FUNCTION_41	ELSE_162	ELSE_165	IF_298	IF_299
0x7c1b	          0x83e008	                              and eax, 8	      7558	option.c	FUNCTION_41	ELSE_162	ELSE_165	IF_298	IF_299
0x7c1e	            0x85c0	                           test eax, eax	      7558	option.c	FUNCTION_41	ELSE_162	ELSE_165	IF_298	IF_299
0x7c20	            0x7409	                            je 0x4007c6b	      7558	option.c	FUNCTION_41	ELSE_162	ELSE_165	IF_298	IF_299
0x7c22	    0x83bdb4feffff	              cmp dword [rbp - 0x14c], 0	      7558	option.c	FUNCTION_41	ELSE_162	ELSE_165	IF_298	IF_299
0x7c29	            0x7463	                            je 0x4007cce	      7558	option.c	FUNCTION_41	ELSE_162	ELSE_165	IF_298	IF_299
0x7c2b	    0xc70500000000	               mov dword [0x04007c75], 1	      7560	option.c	FUNCTION_41	ELSE_162	ELSE_165	IF_298	IF_299
0x7c35	    0x488b0d000000	            mov rcx, qword [0x04007c7c] 	      7561	option.c	FUNCTION_41	ELSE_162	ELSE_165	IF_298	IF_299	CALL_251
0x7c3c	    0x488b05000000	            mov rax, qword [0x04007c83] 	      7562	option.c	FUNCTION_41	ELSE_162	ELSE_165	IF_298	IF_299
0x7c43	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	      7561	option.c	FUNCTION_41	ELSE_162	ELSE_165	IF_298	IF_299	CALL_251
0x7c4a	    0x488b05000000	            mov rax, qword [0x04007c91] 	      7561	option.c	FUNCTION_41	ELSE_162	ELSE_165	IF_298	IF_299	CALL_251
0x7c51	    0x488b80801400	          mov rax, qword [rax + 0x1480] 	      7561	option.c	FUNCTION_41	ELSE_162	ELSE_165	IF_298	IF_299	CALL_251
0x7c58	          0x4989c8	                             mov r8, rcx	      7561	option.c	FUNCTION_41	ELSE_162	ELSE_165	IF_298	IF_299	CALL_251
0x7c5b	      0xb901000000	                              mov ecx, 1	      7561	option.c	FUNCTION_41	ELSE_162	ELSE_165	IF_298	IF_299	CALL_251
0x7c60	          0x4889c6	                            mov rsi, rax	      7561	option.c	FUNCTION_41	ELSE_162	ELSE_165	IF_298	IF_299	CALL_251
0x7c63	      0xbf22000000	                           mov edi, 0x22	      7561	option.c	FUNCTION_41	ELSE_162	ELSE_165	IF_298	IF_299	CALL_251
0x7c68	      0xe800000000	                          call 0x4007cad	      7561	option.c	FUNCTION_41	ELSE_162	ELSE_165	IF_298	IF_299	CALL_251
0x7c6d	    0x488b05000000	            mov rax, qword [0x04007cb4] 	      7564	option.c	FUNCTION_41	ELSE_162	ELSE_165	IF_298	IF_299	IF_300
0x7c74	    0x480580140000	                         add rax, 0x1480	      7564	option.c	FUNCTION_41	ELSE_162	ELSE_165	IF_298	IF_299	IF_300
0x7c7a	    0x483b85a0feff	            cmp rax, qword [rbp - 0x160]	      7564	option.c	FUNCTION_41	ELSE_162	ELSE_165	IF_298	IF_299	IF_300
0x7c81	            0x740b	                            je 0x4007cce	      7564	option.c	FUNCTION_41	ELSE_162	ELSE_165	IF_298	IF_299	IF_300
0x7c83	    0x48c785a0feff	              mov qword [rbp - 0x160], 0	      7565	option.c	FUNCTION_41	ELSE_162	ELSE_165	IF_298	IF_299	IF_300
0x7c8e	    0x488b05000000	            mov rax, qword [0x04007cd5] 	      7570	option.c	FUNCTION_41	ELSE_162	IF_301
0x7c95	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7570	option.c	FUNCTION_41	ELSE_162	IF_301
0x7c99	    0x480580040000	                          add rax, 0x480	      7570	option.c	FUNCTION_41	ELSE_162	IF_301
0x7c9f	    0x483b85a0feff	            cmp rax, qword [rbp - 0x160]	      7570	option.c	FUNCTION_41	ELSE_162	IF_301
0x7ca6	     0xf85e4000000	                           jne 0x4007dd0	      7570	option.c	FUNCTION_41	ELSE_162	IF_301
0x7cac	    0x488b05000000	            mov rax, qword [0x04007cf3] 	      7573	option.c	FUNCTION_41	ELSE_162	IF_301
0x7cb3	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7573	option.c	FUNCTION_41	ELSE_162	IF_301
0x7cb7	    0x488b80800400	           mov rax, qword [rax + 0x480] 	      7573	option.c	FUNCTION_41	ELSE_162	IF_301
0x7cbe	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      7573	option.c	FUNCTION_41	ELSE_162	IF_301
0x7cc5	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      7576	option.c	FUNCTION_41	ELSE_162	IF_301	IF_302	CALL_252
0x7ccc	      0xba04000000	                              mov edx, 4	      7576	option.c	FUNCTION_41	ELSE_162	IF_301	IF_302	CALL_252
0x7cd1	      0xbe00000000	                              mov esi, 0	      7576	option.c	FUNCTION_41	ELSE_162	IF_301	IF_302	CALL_252
0x7cd6	          0x4889c7	                            mov rdi, rax	      7576	option.c	FUNCTION_41	ELSE_162	IF_301	IF_302	CALL_252
0x7cd9	      0xe800000000	                          call 0x4007d1e	      7576	option.c	FUNCTION_41	ELSE_162	IF_301	IF_302	CALL_252
0x7cde	            0x85c0	                           test eax, eax	      7576	option.c	FUNCTION_41	ELSE_162	IF_301	IF_302	CALL_252
0x7ce0	            0x7508	                           jne 0x4007d2a	      7576	option.c	FUNCTION_41	ELSE_162	IF_301	IF_302	CALL_252
0x7ce2	    0x48838510ffff	               add qword [rbp - 0xf0], 4	      7577	option.c	FUNCTION_41	ELSE_162	IF_301	IF_302
0x7cea	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      7585	option.c	FUNCTION_41	ELSE_162	IF_301	FOR_10
0x7cf1	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      7585	option.c	FUNCTION_41	ELSE_162	IF_301	FOR_10
0x7cf8	            0xeb30	                           jmp 0x4007d6a	      7585	option.c	FUNCTION_41	ELSE_162	IF_301	FOR_10
0x7cfa	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7586	option.c	FUNCTION_41	ELSE_162	IF_301	FOR_10	IF_303	CALL_253
0x7d01	           0xfb600	                   movzx eax, byte [rax]	      7586	option.c	FUNCTION_41	ELSE_162	IF_301	FOR_10	IF_303	CALL_253
0x7d04	           0xfb6c0	                           movzx eax, al	      7586	option.c	FUNCTION_41	ELSE_162	IF_301	FOR_10	IF_303	CALL_253
0x7d07	            0x89c6	                            mov esi, eax	      7586	option.c	FUNCTION_41	ELSE_162	IF_301	FOR_10	IF_303	CALL_253
0x7d09	      0xbf00000000	                              mov edi, 0	      7586	option.c	FUNCTION_41	ELSE_162	IF_301	FOR_10	IF_303	CALL_253
0x7d0e	      0xe800000000	                          call 0x4007d53	      7586	option.c	FUNCTION_41	ELSE_162	IF_301	FOR_10	IF_303	CALL_253
0x7d13	          0x4885c0	                           test rax, rax	      7586	option.c	FUNCTION_41	ELSE_162	IF_301	FOR_10	IF_303	CALL_253
0x7d16	            0x7522	                           jne 0x4007d7a	      7586	option.c	FUNCTION_41	ELSE_162	IF_301	FOR_10	IF_303	CALL_253
0x7d18	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7585	option.c	FUNCTION_41	ELSE_162	IF_301	FOR_10
0x7d1f	        0x4883c001	                              add rax, 1	      7585	option.c	FUNCTION_41	ELSE_162	IF_301	FOR_10
0x7d23	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      7585	option.c	FUNCTION_41	ELSE_162	IF_301	FOR_10
0x7d2a	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7585	option.c	FUNCTION_41	ELSE_162	IF_301	FOR_10
0x7d31	           0xfb600	                   movzx eax, byte [rax]	      7585	option.c	FUNCTION_41	ELSE_162	IF_301	FOR_10
0x7d34	            0x84c0	                             test al, al	      7585	option.c	FUNCTION_41	ELSE_162	IF_301	FOR_10
0x7d36	            0x75c2	                           jne 0x4007d3a	      7585	option.c	FUNCTION_41	ELSE_162	IF_301	FOR_10
0x7d38	            0xeb01	                           jmp 0x4007d7b	      7585	option.c	FUNCTION_41	ELSE_162	IF_301	FOR_10
0x7d3a	              0x90	                                     nop	      7587	option.c	FUNCTION_41	ELSE_162	IF_301	FOR_10	IF_303
0x7d3b	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7588	option.c	FUNCTION_41	ELSE_162	IF_301	CALL_254
0x7d42	          0x4889c2	                            mov rdx, rax	      7588	option.c	FUNCTION_41	ELSE_162	IF_301	CALL_254
0x7d45	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      7588	option.c	FUNCTION_41	ELSE_162	IF_301	CALL_254
0x7d4c	          0x4829c2	                            sub rdx, rax	      7588	option.c	FUNCTION_41	ELSE_162	IF_301	CALL_254
0x7d4f	          0x4889d0	                            mov rax, rdx	      7588	option.c	FUNCTION_41	ELSE_162	IF_301	CALL_254
0x7d52	            0x89c1	                            mov ecx, eax	      7588	option.c	FUNCTION_41	ELSE_162	IF_301	CALL_254
0x7d54	    0x488b9510ffff	             mov rdx, qword [rbp - 0xf0]	      7588	option.c	FUNCTION_41	ELSE_162	IF_301	CALL_254
0x7d5b	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      7588	option.c	FUNCTION_41	ELSE_162	IF_301	CALL_254
0x7d62	          0x4989d0	                             mov r8, rdx	      7588	option.c	FUNCTION_41	ELSE_162	IF_301	CALL_254
0x7d65	      0xba00000000	                              mov edx, 0	      7588	option.c	FUNCTION_41	ELSE_162	IF_301	CALL_254
0x7d6a	      0xbec8000000	                           mov esi, 0xc8	      7588	option.c	FUNCTION_41	ELSE_162	IF_301	CALL_254
0x7d6f	          0x4889c7	                            mov rdi, rax	      7588	option.c	FUNCTION_41	ELSE_162	IF_301	CALL_254
0x7d72	      0xb800000000	                              mov eax, 0	      7588	option.c	FUNCTION_41	ELSE_162	IF_301	CALL_254
0x7d77	      0xe800000000	                          call 0x4007dbc	      7588	option.c	FUNCTION_41	ELSE_162	IF_301	CALL_254
0x7d7c	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      7589	option.c	FUNCTION_41	ELSE_162	IF_301	CALL_255
0x7d83	      0xbe01000000	                              mov esi, 1	      7589	option.c	FUNCTION_41	ELSE_162	IF_301	CALL_255
0x7d88	          0x4889c7	                            mov rdi, rax	      7589	option.c	FUNCTION_41	ELSE_162	IF_301	CALL_255
0x7d8b	      0xe800000000	                          call 0x4007dd0	      7589	option.c	FUNCTION_41	ELSE_162	IF_301	CALL_255
0x7d90	    0x4881bda0feff	              cmp qword [rbp - 0x160], 0	      7595	option.c	FUNCTION_41	IF_304
0x7d9b	            0x751f	                           jne 0x4007dfc	      7595	option.c	FUNCTION_41	IF_304
0x7d9d	    0x488b05000000	            mov rax, qword [0x04007de4] 	      7598	option.c	FUNCTION_41	IF_304	IF_305
0x7da4	           0xfb600	                   movzx eax, byte [rax]	      7598	option.c	FUNCTION_41	IF_304	IF_305
0x7da7	            0x84c0	                             test al, al	      7598	option.c	FUNCTION_41	IF_304	IF_305
0x7da9	            0x750c	                           jne 0x4007df7	      7598	option.c	FUNCTION_41	IF_304	IF_305
0x7dab	      0xbf00000000	                              mov edi, 0	      7599	option.c	FUNCTION_41	IF_304	CALL_256
0x7db0	      0xe800000000	                          call 0x4007df5	      7599	option.c	FUNCTION_41	IF_304	CALL_256
0x7db5	            0xeb05	                           jmp 0x4007dfc	      7599	option.c	FUNCTION_41	IF_304	CALL_256
0x7db7	      0xe800000000	                          call 0x4007dfc	      7602	option.c	FUNCTION_41	IF_304	CALL_257
0x7dbc	    0x488b05000000	            mov rax, qword [0x04007e03] 	      7606	option.c	FUNCTION_41	IF_306
0x7dc3	          0x8b4048	            mov eax, dword [rax + 0x48] 	      7606	option.c	FUNCTION_41	IF_306
0x7dc6	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      7606	option.c	FUNCTION_41	IF_306
0x7dcb	            0x742d	                            je 0x4007e3a	      7606	option.c	FUNCTION_41	IF_306
0x7dcd	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	      7607	option.c	FUNCTION_41	IF_306
0x7dd3	            0x4898	                                    cdqe	      7607	option.c	FUNCTION_41	IF_306
0x7dd5	        0x48c1e006	                              shl rax, 6	      7607	option.c	FUNCTION_41	IF_306
0x7dd9	    0x480500000000	                              add rax, 0	      7607	option.c	FUNCTION_41	IF_306
0x7ddf	          0x488b00	                    mov rax, qword [rax]	      7607	option.c	FUNCTION_41	IF_306
0x7de2	      0x2500600004	                      and eax, 0x4006000	      7607	option.c	FUNCTION_41	IF_306
0x7de7	          0x4885c0	                           test rax, rax	      7607	option.c	FUNCTION_41	IF_306
0x7dea	            0x740e	                            je 0x4007e3a	      7607	option.c	FUNCTION_41	IF_306
0x7dec	    0x488b05000000	            mov rax, qword [0x04007e33] 	      7608	option.c	FUNCTION_41	IF_306
0x7df3	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      7608	option.c	FUNCTION_41	IF_306
0x7dfa	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	      7614	option.c	FUNCTION_41	CALL_258
0x7e00	            0x4898	                                    cdqe	      7614	option.c	FUNCTION_41	CALL_258
0x7e02	        0x48c1e006	                              shl rax, 6	      7614	option.c	FUNCTION_41	CALL_258
0x7e06	    0x480500000000	                              add rax, 0	      7614	option.c	FUNCTION_41	CALL_258
0x7e0c	          0x488b00	                    mov rax, qword [rax]	      7614	option.c	FUNCTION_41	CALL_258
0x7e0f	          0x4889c7	                            mov rdi, rax	      7614	option.c	FUNCTION_41	CALL_258
0x7e12	      0xe8902e0000	                   call sym.check_redraw	      7614	option.c	FUNCTION_41	CALL_258
0x7e17	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      7616	option.c	FUNCTION_41
0x7e1e	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      7617	option.c	FUNCTION_41
0x7e22	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      7617	option.c	FUNCTION_41
0x7e2b	            0x7405	                            je 0x4007e72	      7617	option.c	FUNCTION_41
0x7e2d	      0xe800000000	                          call 0x4007e72	      7617	option.c	FUNCTION_41
0x7e32	    0x4881c4700100	                          add rsp, 0x170	      7617	option.c	FUNCTION_41
0x7e39	              0x5b	                                 pop rbx	      7617	option.c	FUNCTION_41
0x7e3a	            0x415c	                                 pop r12	      7617	option.c	FUNCTION_41
0x7e3c	              0x5d	                                 pop rbp	      7617	option.c	FUNCTION_41
0x7e3d	              0xc3	                                     ret	      7617	option.c	FUNCTION_41
findoption	WHILE,0:SWITCH,0:CALL,6:FOR,3:ELSE,2:DO,0:IF,10:functions,0	149
0xad86	              0x55	                                push rbp	      9277	option.c	FUNCTION_53
0xad87	          0x4889e5	                            mov rbp, rsp	      9277	option.c	FUNCTION_53
0xad8a	        0x4883ec30	                           sub rsp, 0x30	      9277	option.c	FUNCTION_53
0xad8e	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      9277	option.c	FUNCTION_53
0xad92	     0xfb705000000	           movzx eax, word [0x0400add9] 	      9288	option.c	FUNCTION_53	IF_1
0xad99	          0x6685c0	                             test ax, ax	      9288	option.c	FUNCTION_53	IF_1
0xad9c	     0xf8592000000	                           jne 0x400ae74	      9288	option.c	FUNCTION_53	IF_1
0xada2	    0x488b05000000	            mov rax, qword [0x0400ade9] 	      9290	option.c	FUNCTION_53	IF_1
0xada9	        0x488945f8	                mov qword [rbp - 8], rax	      9290	option.c	FUNCTION_53	IF_1
0xadad	    0xc745e8010000	               mov dword [rbp - 0x18], 1	      9291	option.c	FUNCTION_53	IF_1	FOR_1
0xadb4	            0xeb61	                           jmp 0x400ae57	      9291	option.c	FUNCTION_53	IF_1	FOR_1
0xadb6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      9293	option.c	FUNCTION_53	IF_1	FOR_1	IF_2
0xadba	           0xfb610	                   movzx edx, byte [rax]	      9293	option.c	FUNCTION_53	IF_1	FOR_1	IF_2
0xadbd	        0x488b45f8	                mov rax, qword [rbp - 8]	      9293	option.c	FUNCTION_53	IF_1	FOR_1	IF_2
0xadc1	           0xfb600	                   movzx eax, byte [rax]	      9293	option.c	FUNCTION_53	IF_1	FOR_1	IF_2
0xadc4	            0x38c2	                              cmp dl, al	      9293	option.c	FUNCTION_53	IF_1	FOR_1	IF_2
0xadc6	            0x7443	                            je 0x400ae4b	      9293	option.c	FUNCTION_53	IF_1	FOR_1	IF_2
0xadc8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      9295	option.c	FUNCTION_53	IF_1	FOR_1	IF_2	IF_3
0xadcc	           0xfb600	                   movzx eax, byte [rax]	      9295	option.c	FUNCTION_53	IF_1	FOR_1	IF_2	IF_3
0xadcf	            0x3c74	                            cmp al, 0x74	      9295	option.c	FUNCTION_53	IF_1	FOR_1	IF_2	IF_3
0xadd1	            0x751b	                           jne 0x400ae2e	      9295	option.c	FUNCTION_53	IF_1	FOR_1	IF_2	IF_3
0xadd3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      9295	option.c	FUNCTION_53	IF_1	FOR_1	IF_2	IF_3
0xadd7	        0x4883c001	                              add rax, 1	      9295	option.c	FUNCTION_53	IF_1	FOR_1	IF_2	IF_3
0xaddb	           0xfb600	                   movzx eax, byte [rax]	      9295	option.c	FUNCTION_53	IF_1	FOR_1	IF_2	IF_3
0xadde	            0x3c5f	                            cmp al, 0x5f	      9295	option.c	FUNCTION_53	IF_1	FOR_1	IF_2	IF_3
0xade0	            0x750c	                           jne 0x400ae2e	      9295	option.c	FUNCTION_53	IF_1	FOR_1	IF_2	IF_3
0xade2	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      9296	option.c	FUNCTION_53	IF_1	FOR_1	IF_2	IF_3
0xade5	    0x668905000000	               mov word [0x0400ae2c], ax	      9296	option.c	FUNCTION_53	IF_1	FOR_1	IF_2	IF_3
0xadec	            0xeb1d	                           jmp 0x400ae4b	      9296	option.c	FUNCTION_53	IF_1	FOR_1	IF_2	IF_3
0xadee	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      9298	option.c	FUNCTION_53	IF_1	FOR_1	IF_2	CALL_1
0xadf2	           0xfb600	                   movzx eax, byte [rax]	      9298	option.c	FUNCTION_53	IF_1	FOR_1	IF_2	CALL_1
0xadf5	           0xfbec0	                           movsx eax, al	      9298	option.c	FUNCTION_53	IF_1	FOR_1	IF_2	CALL_1
0xadf8	          0x8d509f	                   lea edx, [rax - 0x61]	      9298	option.c	FUNCTION_53	IF_1	FOR_1	IF_2	CALL_1
0xadfb	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      9298	option.c	FUNCTION_53	IF_1	FOR_1	IF_2	CALL_1
0xadfe	            0x89c1	                            mov ecx, eax	      9298	option.c	FUNCTION_53	IF_1	FOR_1	IF_2	CALL_1
0xae00	          0x4863c2	                         movsxd rax, edx	      9298	option.c	FUNCTION_53	IF_1	FOR_1	IF_2	CALL_1
0xae03	    0x66898c000000	                mov word [rax + rax], cx	      9298	option.c	FUNCTION_53	IF_1	FOR_1	IF_2	CALL_1
0xae0b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      9300	option.c	FUNCTION_53	IF_1	FOR_1
0xae0f	        0x488945f8	                mov qword [rbp - 8], rax	      9300	option.c	FUNCTION_53	IF_1	FOR_1
0xae13	        0x8345e801	               add dword [rbp - 0x18], 1	      9291	option.c	FUNCTION_53	IF_1	FOR_1
0xae17	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      9291	option.c	FUNCTION_53	IF_1	FOR_1
0xae1a	            0x4898	                                    cdqe	      9291	option.c	FUNCTION_53	IF_1	FOR_1
0xae1c	        0x48c1e006	                              shl rax, 6	      9291	option.c	FUNCTION_53	IF_1	FOR_1
0xae20	    0x480500000000	                              add rax, 0	      9291	option.c	FUNCTION_53	IF_1	FOR_1
0xae26	          0x488b00	                    mov rax, qword [rax]	      9291	option.c	FUNCTION_53	IF_1	FOR_1
0xae29	        0x488945f0	             mov qword [rbp - 0x10], rax	      9291	option.c	FUNCTION_53	IF_1	FOR_1
0xae2d	      0x48837df000	               cmp qword [rbp - 0x10], 0	      9291	option.c	FUNCTION_53	IF_1	FOR_1
0xae32	            0x7582	                           jne 0x400adf6	      9291	option.c	FUNCTION_53	IF_1	FOR_1
0xae34	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9310	option.c	FUNCTION_53	IF_4	IF_5
0xae38	           0xfb600	                   movzx eax, byte [rax]	      9310	option.c	FUNCTION_53	IF_4	IF_5
0xae3b	            0x3c60	                            cmp al, 0x60	      9310	option.c	FUNCTION_53	IF_4	IF_5
0xae3d	            0x760b	                           jbe 0x400ae8a	      9310	option.c	FUNCTION_53	IF_4	IF_5
0xae3f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9310	option.c	FUNCTION_53	IF_4	IF_5
0xae43	           0xfb600	                   movzx eax, byte [rax]	      9310	option.c	FUNCTION_53	IF_4	IF_5
0xae46	            0x3c7a	                            cmp al, 0x7a	      9310	option.c	FUNCTION_53	IF_4	IF_5
0xae48	            0x760a	                           jbe 0x400ae94	      9310	option.c	FUNCTION_53	IF_4	IF_5
0xae4a	      0xb8ffffffff	                     mov eax, 0xffffffff	      9312	option.c	FUNCTION_53	IF_4	IF_5
0xae4f	      0xe929010000	                           jmp 0x400afbd	      9312	option.c	FUNCTION_53	IF_4	IF_5
0xae54	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9314	option.c	FUNCTION_53
0xae58	           0xfb600	                   movzx eax, byte [rax]	      9314	option.c	FUNCTION_53
0xae5b	            0x3c74	                            cmp al, 0x74	      9314	option.c	FUNCTION_53
0xae5d	            0x7516	                           jne 0x400aeb5	      9314	option.c	FUNCTION_53
0xae5f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9314	option.c	FUNCTION_53
0xae63	        0x4883c001	                              add rax, 1	      9314	option.c	FUNCTION_53
0xae67	           0xfb600	                   movzx eax, byte [rax]	      9314	option.c	FUNCTION_53
0xae6a	            0x3c5f	                            cmp al, 0x5f	      9314	option.c	FUNCTION_53
0xae6c	            0x7507	                           jne 0x400aeb5	      9314	option.c	FUNCTION_53
0xae6e	      0xb801000000	                              mov eax, 1	      9314	option.c	FUNCTION_53
0xae73	            0xeb05	                           jmp 0x400aeba	      9314	option.c	FUNCTION_53
0xae75	      0xb800000000	                              mov eax, 0	      9314	option.c	FUNCTION_53
0xae7a	          0x8945ec	             mov dword [rbp - 0x14], eax	      9314	option.c	FUNCTION_53
0xae7d	        0x837dec00	               cmp dword [rbp - 0x14], 0	      9315	option.c	FUNCTION_53	IF_6
0xae81	            0x740d	                            je 0x400aed0	      9315	option.c	FUNCTION_53	IF_6
0xae83	     0xfb705000000	           movzx eax, word [0x0400aeca] 	      9316	option.c	FUNCTION_53	IF_6
0xae8a	              0x98	                                    cwde	      9316	option.c	FUNCTION_53	IF_6
0xae8b	          0x8945e8	             mov dword [rbp - 0x18], eax	      9316	option.c	FUNCTION_53	IF_6
0xae8e	            0xeb38	                           jmp 0x400af08	      9316	option.c	FUNCTION_53	IF_6
0xae90	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9318	option.c	FUNCTION_53	CALL_3
0xae94	           0xfb600	                   movzx eax, byte [rax]	      9318	option.c	FUNCTION_53	CALL_3
0xae97	           0xfb6c0	                           movzx eax, al	      9318	option.c	FUNCTION_53	CALL_3
0xae9a	          0x83e861	                           sub eax, 0x61	      9318	option.c	FUNCTION_53	CALL_3
0xae9d	            0x4898	                                    cdqe	      9318	option.c	FUNCTION_53	CALL_3
0xae9f	     0xfb784000000	             movzx eax, word [rax + rax]	      9318	option.c	FUNCTION_53	CALL_3
0xaea7	              0x98	                                    cwde	      9318	option.c	FUNCTION_53	CALL_3
0xaea8	          0x8945e8	             mov dword [rbp - 0x18], eax	      9318	option.c	FUNCTION_53	CALL_3
0xaeab	            0xeb1b	                           jmp 0x400af08	      9319	option.c	FUNCTION_53	FOR_2
0xaead	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      9321	option.c	FUNCTION_53	FOR_2	IF_7	CALL_4
0xaeb1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9321	option.c	FUNCTION_53	FOR_2	IF_7	CALL_4
0xaeb5	          0x4889d6	                            mov rsi, rdx	      9321	option.c	FUNCTION_53	FOR_2	IF_7	CALL_4
0xaeb8	          0x4889c7	                            mov rdi, rax	      9321	option.c	FUNCTION_53	FOR_2	IF_7	CALL_4
0xaebb	      0xe800000000	                          call 0x400af00	      9321	option.c	FUNCTION_53	FOR_2	IF_7	CALL_4
0xaec0	            0x85c0	                           test eax, eax	      9321	option.c	FUNCTION_53	FOR_2	IF_7	CALL_4
0xaec2	            0x7423	                            je 0x400af27	      9321	option.c	FUNCTION_53	FOR_2	IF_7	CALL_4
0xaec4	        0x8345e801	               add dword [rbp - 0x18], 1	      9319	option.c	FUNCTION_53	FOR_2
0xaec8	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      9319	option.c	FUNCTION_53	FOR_2
0xaecb	            0x4898	                                    cdqe	      9319	option.c	FUNCTION_53	FOR_2
0xaecd	        0x48c1e006	                              shl rax, 6	      9319	option.c	FUNCTION_53	FOR_2
0xaed1	    0x480500000000	                              add rax, 0	      9319	option.c	FUNCTION_53	FOR_2
0xaed7	          0x488b00	                    mov rax, qword [rax]	      9319	option.c	FUNCTION_53	FOR_2
0xaeda	        0x488945f0	             mov qword [rbp - 0x10], rax	      9319	option.c	FUNCTION_53	FOR_2
0xaede	      0x48837df000	               cmp qword [rbp - 0x10], 0	      9319	option.c	FUNCTION_53	FOR_2
0xaee3	            0x75c8	                           jne 0x400aeed	      9319	option.c	FUNCTION_53	FOR_2
0xaee5	            0xeb01	                           jmp 0x400af28	      9319	option.c	FUNCTION_53	FOR_2
0xaee7	              0x90	                                     nop	      9322	option.c	FUNCTION_53	FOR_2	IF_7
0xaee8	      0x48837df000	               cmp qword [rbp - 0x10], 0	      9324	option.c	FUNCTION_53	IF_8
0xaeed	            0x757d	                           jne 0x400afac	      9324	option.c	FUNCTION_53	IF_8
0xaeef	        0x837dec00	               cmp dword [rbp - 0x14], 0	      9324	option.c	FUNCTION_53	IF_8
0xaef3	            0x7577	                           jne 0x400afac	      9324	option.c	FUNCTION_53	IF_8
0xaef5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9326	option.c	FUNCTION_53	IF_8	CALL_5
0xaef9	           0xfb600	                   movzx eax, byte [rax]	      9326	option.c	FUNCTION_53	IF_8	CALL_5
0xaefc	           0xfb6c0	                           movzx eax, al	      9326	option.c	FUNCTION_53	IF_8	CALL_5
0xaeff	          0x83e861	                           sub eax, 0x61	      9326	option.c	FUNCTION_53	IF_8	CALL_5
0xaf02	            0x4898	                                    cdqe	      9326	option.c	FUNCTION_53	IF_8	CALL_5
0xaf04	     0xfb784000000	             movzx eax, word [rax + rax]	      9326	option.c	FUNCTION_53	IF_8	CALL_5
0xaf0c	              0x98	                                    cwde	      9326	option.c	FUNCTION_53	IF_8	CALL_5
0xaf0d	          0x8945e8	             mov dword [rbp - 0x18], eax	      9326	option.c	FUNCTION_53	IF_8	CALL_5
0xaf10	            0xeb40	                           jmp 0x400af92	      9327	option.c	FUNCTION_53	IF_8	FOR_3
0xaf12	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      9329	option.c	FUNCTION_53	IF_8	FOR_3
0xaf15	            0x4898	                                    cdqe	      9329	option.c	FUNCTION_53	IF_8	FOR_3
0xaf17	        0x48c1e006	                              shl rax, 6	      9329	option.c	FUNCTION_53	IF_8	FOR_3
0xaf1b	    0x480500000000	                              add rax, 0	      9329	option.c	FUNCTION_53	IF_8	FOR_3
0xaf21	          0x488b00	                    mov rax, qword [rax]	      9329	option.c	FUNCTION_53	IF_8	FOR_3
0xaf24	        0x488945f0	             mov qword [rbp - 0x10], rax	      9329	option.c	FUNCTION_53	IF_8	FOR_3
0xaf28	      0x48837df000	               cmp qword [rbp - 0x10], 0	      9330	option.c	FUNCTION_53	IF_8	FOR_3	IF_9	CALL_6
0xaf2d	            0x7417	                            je 0x400af86	      9330	option.c	FUNCTION_53	IF_8	FOR_3	IF_9	CALL_6
0xaf2f	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      9330	option.c	FUNCTION_53	IF_8	FOR_3	IF_9	CALL_6
0xaf33	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9330	option.c	FUNCTION_53	IF_8	FOR_3	IF_9	CALL_6
0xaf37	          0x4889d6	                            mov rsi, rdx	      9330	option.c	FUNCTION_53	IF_8	FOR_3	IF_9	CALL_6
0xaf3a	          0x4889c7	                            mov rdi, rax	      9330	option.c	FUNCTION_53	IF_8	FOR_3	IF_9	CALL_6
0xaf3d	      0xe800000000	                          call 0x400af82	      9330	option.c	FUNCTION_53	IF_8	FOR_3	IF_9	CALL_6
0xaf42	            0x85c0	                           test eax, eax	      9330	option.c	FUNCTION_53	IF_8	FOR_3	IF_9	CALL_6
0xaf44	            0x7425	                            je 0x400afab	      9330	option.c	FUNCTION_53	IF_8	FOR_3	IF_9	CALL_6
0xaf46	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      9332	option.c	FUNCTION_53	IF_8	FOR_3
0xaf4e	        0x8345e801	               add dword [rbp - 0x18], 1	      9327	option.c	FUNCTION_53	IF_8	FOR_3
0xaf52	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      9327	option.c	FUNCTION_53	IF_8	FOR_3
0xaf55	            0x4898	                                    cdqe	      9327	option.c	FUNCTION_53	IF_8	FOR_3
0xaf57	        0x48c1e006	                              shl rax, 6	      9327	option.c	FUNCTION_53	IF_8	FOR_3
0xaf5b	    0x480500000000	                              add rax, 0	      9327	option.c	FUNCTION_53	IF_8	FOR_3
0xaf61	          0x488b00	                    mov rax, qword [rax]	      9327	option.c	FUNCTION_53	IF_8	FOR_3
0xaf64	          0x4885c0	                           test rax, rax	      9327	option.c	FUNCTION_53	IF_8	FOR_3
0xaf67	            0x75a9	                           jne 0x400af52	      9327	option.c	FUNCTION_53	IF_8	FOR_3
0xaf69	            0xeb01	                           jmp 0x400afac	      9327	option.c	FUNCTION_53	IF_8	FOR_3
0xaf6b	              0x90	                                     nop	      9331	option.c	FUNCTION_53	IF_8	FOR_3	IF_9
0xaf6c	      0x48837df000	               cmp qword [rbp - 0x10], 0	      9335	option.c	FUNCTION_53	IF_10
0xaf71	            0x7507	                           jne 0x400afba	      9335	option.c	FUNCTION_53	IF_10
0xaf73	    0xc745e8ffffff	     mov dword [rbp - 0x18], 0xffffffff 	      9336	option.c	FUNCTION_53	IF_10
0xaf7a	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      9337	option.c	FUNCTION_53
0xaf7d	              0xc9	                                   leave	      9338	option.c	FUNCTION_53
0xaf7e	              0xc3	                                     ret	      9338	option.c	FUNCTION_53
set_init_1	WHILE,0:SWITCH,0:CALL,85:FOR,3:ELSE,9:DO,0:IF,38:functions,0	459
0x0	              0x55	                                push rbp	      3325	option.c	FUNCTION_2
0x1	          0x4889e5	                            mov rbp, rsp	      3325	option.c	FUNCTION_2
0x4	        0x4883ec60	                           sub rsp, 0x60	      3325	option.c	FUNCTION_2
0x8	    0x64488b042528	                mov rax, qword fs:[0x28]	      3325	option.c	FUNCTION_2
0x11	        0x488945f8	                mov qword [rbp - 8], rax	      3325	option.c	FUNCTION_2
0x15	            0x31c0	                            xor eax, eax	      3325	option.c	FUNCTION_2
0x17	      0xe8a0000100	                   call sym.langmap_init	      3331	option.c	FUNCTION_2	CALL_1
0x1c	    0xc70500000000	               mov dword [0x04000066], 1	      3335	option.c	FUNCTION_2
0x26	      0xbf00000000	                              mov edi, 0	      3338	option.c	FUNCTION_2	IF_1	CALL_2
0x2b	      0xe800000000	                          call 0x4000070	      3338	option.c	FUNCTION_2	IF_1	CALL_2
0x30	          0x4885c0	                           test rax, rax	      3338	option.c	FUNCTION_2	IF_1	CALL_2
0x33	            0x741e	                            je 0x4000093	      3338	option.c	FUNCTION_2	IF_1	CALL_2
0x35	      0xbe00000000	                              mov esi, 0	      3340	option.c	FUNCTION_2	IF_1	CALL_3
0x3a	      0xbf00000000	                              mov edi, 0	      3340	option.c	FUNCTION_2	IF_1	CALL_3
0x3f	      0xe800000000	                          call 0x4000084	      3340	option.c	FUNCTION_2	IF_1	CALL_3
0x44	      0xbe00000000	                              mov esi, 0	      3341	option.c	FUNCTION_2	IF_1	CALL_4
0x49	      0xbf00000000	                              mov edi, 0	      3341	option.c	FUNCTION_2	IF_1	CALL_4
0x4e	      0xe800000000	                          call 0x4000093	      3341	option.c	FUNCTION_2	IF_1	CALL_4
0x53	      0xbf00000000	                              mov edi, 0	      3348	option.c	FUNCTION_2	IF_2	CALL_5
0x58	      0xe800000000	                          call 0x400009d	      3348	option.c	FUNCTION_2	IF_2	CALL_5
0x5d	        0x488945b8	             mov qword [rbp - 0x48], rax	      3348	option.c	FUNCTION_2	IF_2	CALL_5
0x61	      0x48837db800	               cmp qword [rbp - 0x48], 0	      3348	option.c	FUNCTION_2	IF_2	CALL_5
0x66	            0x741c	                            je 0x40000c4	      3348	option.c	FUNCTION_2	IF_2	CALL_5
0x68	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3348	option.c	FUNCTION_2	IF_2	CALL_5
0x6c	           0xfb600	                   movzx eax, byte [rax]	      3348	option.c	FUNCTION_2	IF_2	CALL_5
0x6f	            0x84c0	                             test al, al	      3348	option.c	FUNCTION_2	IF_2	CALL_5
0x71	            0x7411	                            je 0x40000c4	      3348	option.c	FUNCTION_2	IF_2	CALL_5
0x73	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3356	option.c	FUNCTION_2	CALL_8
0x77	          0x4889c6	                            mov rsi, rax	      3356	option.c	FUNCTION_2	CALL_8
0x7a	      0xbf00000000	                              mov edi, 0	      3356	option.c	FUNCTION_2	CALL_8
0x7f	      0xe800000000	                          call 0x40000c4	      3356	option.c	FUNCTION_2	CALL_8
0x84	        0x488d45e0	                   lea rax, [rbp - 0x20]	      3373	option.c	FUNCTION_2	CALL_9
0x88	      0xba64000000	                           mov edx, 0x64	      3373	option.c	FUNCTION_2	CALL_9
0x8d	      0xbe01000000	                              mov esi, 1	      3373	option.c	FUNCTION_2	CALL_9
0x92	          0x4889c7	                            mov rdi, rax	      3373	option.c	FUNCTION_2	CALL_9
0x95	      0xe800000000	                          call 0x40000da	      3373	option.c	FUNCTION_2	CALL_9
0x9a	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      3374	option.c	FUNCTION_2	FOR_1
0xa2	      0xe92c010000	                           jmp 0x4000213	      3374	option.c	FUNCTION_2	FOR_1
0xa7	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	      3376	option.c	FUNCTION_2	FOR_1
0xae	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3378	option.c	FUNCTION_2	FOR_1	IF_3
0xb2	    0x488b04c50000	                  mov rax, qword [rax*8]	      3378	option.c	FUNCTION_2	FOR_1	IF_3
0xba	           0xfb600	                   movzx eax, byte [rax]	      3378	option.c	FUNCTION_2	FOR_1	IF_3
0xbd	            0x84c0	                             test al, al	      3378	option.c	FUNCTION_2	FOR_1	IF_3
0xbf	            0x750a	                           jne 0x400010b	      3378	option.c	FUNCTION_2	FOR_1	IF_3
0xc1	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      3379	option.c	FUNCTION_2	FOR_1	IF_3
0xc9	            0xeb1f	                           jmp 0x400012a	      3379	option.c	FUNCTION_2	FOR_1	IF_3
0xcb	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3382	option.c	FUNCTION_2	FOR_1	CALL_10
0xcf	    0x488b04c50000	                  mov rax, qword [rax*8]	      3382	option.c	FUNCTION_2	FOR_1	CALL_10
0xd7	        0x488d55a4	                   lea rdx, [rbp - 0x5c]	      3382	option.c	FUNCTION_2	FOR_1	CALL_10
0xdb	          0x4889d6	                            mov rsi, rdx	      3382	option.c	FUNCTION_2	FOR_1	CALL_10
0xde	          0x4889c7	                            mov rdi, rax	      3382	option.c	FUNCTION_2	FOR_1	CALL_10
0xe1	      0xe800000000	                          call 0x4000126	      3382	option.c	FUNCTION_2	FOR_1	CALL_10
0xe6	        0x488945b8	             mov qword [rbp - 0x48], rax	      3382	option.c	FUNCTION_2	FOR_1	CALL_10
0xea	      0x48837db800	               cmp qword [rbp - 0x48], 0	      3383	option.c	FUNCTION_2	FOR_1	IF_4
0xef	     0xf84c6000000	                            je 0x40001fb	      3383	option.c	FUNCTION_2	FOR_1	IF_4
0xf5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3383	option.c	FUNCTION_2	FOR_1	IF_4
0xf9	           0xfb600	                   movzx eax, byte [rax]	      3383	option.c	FUNCTION_2	FOR_1	IF_4
0xfc	            0x84c0	                             test al, al	      3383	option.c	FUNCTION_2	FOR_1	IF_4
0xfe	     0xf84b7000000	                            je 0x40001fb	      3383	option.c	FUNCTION_2	FOR_1	IF_4
0x104	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3386	option.c	FUNCTION_2	FOR_1	IF_4	CALL_11
0x108	          0x4889c7	                            mov rdi, rax	      3386	option.c	FUNCTION_2	FOR_1	IF_4	CALL_11
0x10b	      0xe800000000	                          call 0x4000150	      3386	option.c	FUNCTION_2	FOR_1	IF_4	CALL_11
0x110	          0x83c003	                              add eax, 3	      3386	option.c	FUNCTION_2	FOR_1	IF_4	CALL_11
0x113	          0x8945b4	             mov dword [rbp - 0x4c], eax	      3386	option.c	FUNCTION_2	FOR_1	IF_4	CALL_11
0x116	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      3387	option.c	FUNCTION_2	FOR_1	IF_4	IF_5	CALL_12
0x119	        0x488d45e0	                   lea rax, [rbp - 0x20]	      3387	option.c	FUNCTION_2	FOR_1	IF_4	IF_5	CALL_12
0x11d	            0x89d6	                            mov esi, edx	      3387	option.c	FUNCTION_2	FOR_1	IF_4	IF_5	CALL_12
0x11f	          0x4889c7	                            mov rdi, rax	      3387	option.c	FUNCTION_2	FOR_1	IF_4	IF_5	CALL_12
0x122	      0xe800000000	                          call 0x4000167	      3387	option.c	FUNCTION_2	FOR_1	IF_4	IF_5	CALL_12
0x127	          0x83f801	                              cmp eax, 1	      3387	option.c	FUNCTION_2	FOR_1	IF_4	IF_5	CALL_12
0x12a	     0xf858b000000	                           jne 0x40001fb	      3387	option.c	FUNCTION_2	FOR_1	IF_4	IF_5	CALL_12
0x130	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3389	option.c	FUNCTION_2	FOR_1	IF_4	IF_5	IF_6
0x133	            0x85c0	                           test eax, eax	      3389	option.c	FUNCTION_2	FOR_1	IF_4	IF_5	IF_6
0x135	            0x7e2d	                           jle 0x40001a4	      3389	option.c	FUNCTION_2	FOR_1	IF_4	IF_5	IF_6
0x137	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3390	option.c	FUNCTION_2	FOR_1	IF_4	IF_5	CALL_13
0x13b	          0x4889d0	                            mov rax, rdx	      3390	option.c	FUNCTION_2	FOR_1	IF_4	IF_5	CALL_13
0x13e	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3390	option.c	FUNCTION_2	FOR_1	IF_4	IF_5	CALL_13
0x145	          0x4889c6	                            mov rsi, rax	      3390	option.c	FUNCTION_2	FOR_1	IF_4	IF_5	CALL_13
0x148	      0xb800000000	                              mov eax, 0	      3390	option.c	FUNCTION_2	FOR_1	IF_4	IF_5	CALL_13
0x14d	          0x4889f7	                            mov rdi, rsi	      3390	option.c	FUNCTION_2	FOR_1	IF_4	IF_5	CALL_13
0x150	            0xf2ae	              repne scasb al, byte [rdi]	      3390	option.c	FUNCTION_2	FOR_1	IF_4	IF_5	CALL_13
0x152	          0x4889c8	                            mov rax, rcx	      3390	option.c	FUNCTION_2	FOR_1	IF_4	IF_5	CALL_13
0x155	          0x48f7d0	                                 not rax	      3390	option.c	FUNCTION_2	FOR_1	IF_4	IF_5	CALL_13
0x158	        0x4883e801	                              sub rax, 1	      3390	option.c	FUNCTION_2	FOR_1	IF_4	IF_5	CALL_13
0x15c	          0x4801d0	                            add rax, rdx	      3390	option.c	FUNCTION_2	FOR_1	IF_4	IF_5	CALL_13
0x15f	      0x66c7002c00	                    mov word [rax], 0x2c	      3390	option.c	FUNCTION_2	FOR_1	IF_4	IF_5	CALL_13
0x164	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3391	option.c	FUNCTION_2	FOR_1	IF_4	IF_5	CALL_14
0x168	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      3391	option.c	FUNCTION_2	FOR_1	IF_4	IF_5	CALL_14
0x16c	          0x4889d6	                            mov rsi, rdx	      3391	option.c	FUNCTION_2	FOR_1	IF_4	IF_5	CALL_14
0x16f	          0x4889c7	                            mov rdi, rax	      3391	option.c	FUNCTION_2	FOR_1	IF_4	IF_5	CALL_14
0x172	      0xe800000000	                          call 0x40001b7	      3391	option.c	FUNCTION_2	FOR_1	IF_4	IF_5	CALL_14
0x177	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3392	option.c	FUNCTION_2	FOR_1	IF_4	IF_5	CALL_15
0x17b	          0x4889c7	                            mov rdi, rax	      3392	option.c	FUNCTION_2	FOR_1	IF_4	IF_5	CALL_15
0x17e	      0xe800000000	                          call 0x40001c3	      3392	option.c	FUNCTION_2	FOR_1	IF_4	IF_5	CALL_15
0x183	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3393	option.c	FUNCTION_2	FOR_1	IF_4	IF_5	CALL_16
0x187	          0x4889d0	                            mov rax, rdx	      3393	option.c	FUNCTION_2	FOR_1	IF_4	IF_5	CALL_16
0x18a	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3393	option.c	FUNCTION_2	FOR_1	IF_4	IF_5	CALL_16
0x191	          0x4889c6	                            mov rsi, rax	      3393	option.c	FUNCTION_2	FOR_1	IF_4	IF_5	CALL_16
0x194	      0xb800000000	                              mov eax, 0	      3393	option.c	FUNCTION_2	FOR_1	IF_4	IF_5	CALL_16
0x199	          0x4889f7	                            mov rdi, rsi	      3393	option.c	FUNCTION_2	FOR_1	IF_4	IF_5	CALL_16
0x19c	            0xf2ae	              repne scasb al, byte [rdi]	      3393	option.c	FUNCTION_2	FOR_1	IF_4	IF_5	CALL_16
0x19e	          0x4889c8	                            mov rax, rcx	      3393	option.c	FUNCTION_2	FOR_1	IF_4	IF_5	CALL_16
0x1a1	          0x48f7d0	                                 not rax	      3393	option.c	FUNCTION_2	FOR_1	IF_4	IF_5	CALL_16
0x1a4	        0x4883e801	                              sub rax, 1	      3393	option.c	FUNCTION_2	FOR_1	IF_4	IF_5	CALL_16
0x1a8	          0x4801d0	                            add rax, rdx	      3393	option.c	FUNCTION_2	FOR_1	IF_4	IF_5	CALL_16
0x1ab	      0x66c7002a00	                    mov word [rax], 0x2a	      3393	option.c	FUNCTION_2	FOR_1	IF_4	IF_5	CALL_16
0x1b0	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      3394	option.c	FUNCTION_2	FOR_1	IF_4	IF_5
0x1b3	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      3394	option.c	FUNCTION_2	FOR_1	IF_4	IF_5
0x1b6	             0x1d0	                            add eax, edx	      3394	option.c	FUNCTION_2	FOR_1	IF_4	IF_5
0x1b8	          0x8945e0	             mov dword [rbp - 0x20], eax	      3394	option.c	FUNCTION_2	FOR_1	IF_4	IF_5
0x1bb	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      3397	option.c	FUNCTION_2	FOR_1	IF_7
0x1be	            0x85c0	                           test eax, eax	      3397	option.c	FUNCTION_2	FOR_1	IF_7
0x1c0	            0x740c	                            je 0x400020e	      3397	option.c	FUNCTION_2	FOR_1	IF_7
0x1c2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3398	option.c	FUNCTION_2	FOR_1	CALL_17
0x1c6	          0x4889c7	                            mov rdi, rax	      3398	option.c	FUNCTION_2	FOR_1	CALL_17
0x1c9	      0xe800000000	                          call 0x400020e	      3398	option.c	FUNCTION_2	FOR_1	CALL_17
0x1ce	      0x488345c001	               add qword [rbp - 0x40], 1	      3374	option.c	FUNCTION_2	FOR_1
0x1d3	      0x48837dc003	               cmp qword [rbp - 0x40], 3	      3374	option.c	FUNCTION_2	FOR_1
0x1d8	     0xf86c9feffff	                           jbe 0x40000e7	      3374	option.c	FUNCTION_2	FOR_1
0x1de	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3400	option.c	FUNCTION_2	IF_8
0x1e2	          0x4885c0	                           test rax, rax	      3400	option.c	FUNCTION_2	IF_8
0x1e5	            0x741d	                            je 0x4000244	      3400	option.c	FUNCTION_2	IF_8
0x1e7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3402	option.c	FUNCTION_2	IF_8	CALL_18
0x1eb	          0x4889c6	                            mov rsi, rax	      3402	option.c	FUNCTION_2	IF_8	CALL_18
0x1ee	      0xbf00000000	                              mov edi, 0	      3402	option.c	FUNCTION_2	IF_8	CALL_18
0x1f3	      0xe800000000	                          call 0x4000238	      3402	option.c	FUNCTION_2	IF_8	CALL_18
0x1f8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3403	option.c	FUNCTION_2	IF_8	CALL_19
0x1fc	          0x4889c7	                            mov rdi, rax	      3403	option.c	FUNCTION_2	IF_8	CALL_19
0x1ff	      0xe800000000	                          call 0x4000244	      3403	option.c	FUNCTION_2	IF_8	CALL_19
0x204	      0xbf00000000	                              mov edi, 0	      3411	option.c	FUNCTION_2	CALL_20
0x209	      0xe878ab0000	                     call sym.findoption	      3411	option.c	FUNCTION_2	CALL_20
0x20e	          0x8945a8	             mov dword [rbp - 0x58], eax	      3411	option.c	FUNCTION_2	CALL_20
0x211	        0x837da800	               cmp dword [rbp - 0x58], 0	      3412	option.c	FUNCTION_2	IF_9
0x215	            0x7854	                            js 0x40002ab	      3412	option.c	FUNCTION_2	IF_9
0x217	      0xbf00000000	                              mov edi, 0	      3424	option.c	FUNCTION_2	IF_9	IF_10	CALL_22
0x21c	      0xe800000000	                          call 0x4000261	      3424	option.c	FUNCTION_2	IF_9	IF_10	CALL_22
0x221	          0x48d1e8	                              shr rax, 1	      3424	option.c	FUNCTION_2	IF_9	IF_10	CALL_22
0x224	        0x488945c0	             mov qword [rbp - 0x40], rax	      3424	option.c	FUNCTION_2	IF_9	IF_10	CALL_22
0x228	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3429	option.c	FUNCTION_2	IF_9	IF_10
0x22c	          0x8b55a8	             mov edx, dword [rbp - 0x58]	      3429	option.c	FUNCTION_2	IF_9	IF_10
0x22f	          0x4863d2	                         movsxd rdx, edx	      3429	option.c	FUNCTION_2	IF_9	IF_10
0x232	        0x48c1e206	                              shl rdx, 6	      3429	option.c	FUNCTION_2	IF_9	IF_10
0x236	    0x4881c2000000	                              add rdx, 0	      3429	option.c	FUNCTION_2	IF_9	IF_10
0x23d	          0x488902	                    mov qword [rdx], rax	      3429	option.c	FUNCTION_2	IF_9	IF_10
0x240	      0xbf00000000	                              mov edi, 0	      3430	option.c	FUNCTION_2	IF_9	IF_10	CALL_23
0x245	      0xe83cab0000	                     call sym.findoption	      3430	option.c	FUNCTION_2	IF_9	IF_10	CALL_23
0x24a	          0x8945a8	             mov dword [rbp - 0x58], eax	      3430	option.c	FUNCTION_2	IF_9	IF_10	CALL_23
0x24d	        0x837da800	               cmp dword [rbp - 0x58], 0	      3431	option.c	FUNCTION_2	IF_9	IF_10	IF_11
0x251	            0x7818	                            js 0x40002ab	      3431	option.c	FUNCTION_2	IF_9	IF_10	IF_11
0x253	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3437	option.c	FUNCTION_2	IF_9	IF_10	IF_11	IF_12
0x257	          0x8b55a8	             mov edx, dword [rbp - 0x58]	      3437	option.c	FUNCTION_2	IF_9	IF_10	IF_11	IF_12
0x25a	          0x4863d2	                         movsxd rdx, edx	      3437	option.c	FUNCTION_2	IF_9	IF_10	IF_11	IF_12
0x25d	        0x48c1e206	                              shl rdx, 6	      3437	option.c	FUNCTION_2	IF_9	IF_10	IF_11	IF_12
0x261	    0x4881c2000000	                              add rdx, 0	      3437	option.c	FUNCTION_2	IF_9	IF_10	IF_11	IF_12
0x268	          0x488902	                    mov qword [rdx], rax	      3437	option.c	FUNCTION_2	IF_9	IF_10	IF_11	IF_12
0x26b	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      3448	option.c	FUNCTION_2
0x272	        0x488d45e0	                   lea rax, [rbp - 0x20]	      3451	option.c	FUNCTION_2	CALL_24
0x276	          0x4889c6	                            mov rsi, rax	      3451	option.c	FUNCTION_2	CALL_24
0x279	      0xbf00000000	                              mov edi, 0	      3451	option.c	FUNCTION_2	CALL_24
0x27e	      0xe800000000	                          call 0x40002c3	      3451	option.c	FUNCTION_2	CALL_24
0x283	        0x488945c8	             mov qword [rbp - 0x38], rax	      3451	option.c	FUNCTION_2	CALL_24
0x287	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      3452	option.c	FUNCTION_2	IF_13
0x28c	     0xf847a010000	                            je 0x400044c	      3452	option.c	FUNCTION_2	IF_13
0x292	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3454	option.c	FUNCTION_2	IF_13	CALL_26
0x296	          0x4889c7	                            mov rdi, rax	      3454	option.c	FUNCTION_2	IF_13	CALL_26
0x299	      0xe800000000	                          call 0x40002de	      3454	option.c	FUNCTION_2	IF_13	CALL_26
0x29e	             0x1c0	                            add eax, eax	      3454	option.c	FUNCTION_2	IF_13	CALL_26
0x2a0	          0x83c002	                              add eax, 2	      3454	option.c	FUNCTION_2	IF_13	CALL_26
0x2a3	            0x89c7	                            mov edi, eax	      3454	option.c	FUNCTION_2	IF_13	CALL_26
0x2a5	      0xe800000000	                          call 0x40002ea	      3454	option.c	FUNCTION_2	IF_13	CALL_26
0x2aa	        0x488945d0	             mov qword [rbp - 0x30], rax	      3454	option.c	FUNCTION_2	IF_13	CALL_26
0x2ae	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      3455	option.c	FUNCTION_2	IF_13	IF_14
0x2b3	     0xf8440010000	                            je 0x4000439	      3455	option.c	FUNCTION_2	IF_13	IF_14
0x2b9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3457	option.c	FUNCTION_2	IF_13	IF_14
0x2bd	          0xc6002c	                    mov byte [rax], 0x2c	      3457	option.c	FUNCTION_2	IF_13	IF_14
0x2c0	    0xc745b0010000	               mov dword [rbp - 0x50], 1	      3458	option.c	FUNCTION_2	IF_13	IF_14
0x2c7	    0xc745ac000000	               mov dword [rbp - 0x54], 0	      3459	option.c	FUNCTION_2	IF_13	IF_14	FOR_2
0x2ce	      0xe99d000000	                           jmp 0x40003b0	      3459	option.c	FUNCTION_2	IF_13	IF_14	FOR_2
0x2d3	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      3461	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	IF_15	CALL_27
0x2d6	          0x4863d0	                         movsxd rdx, eax	      3461	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	IF_15	CALL_27
0x2d9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3461	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	IF_15	CALL_27
0x2dd	          0x4801d0	                            add rax, rdx	      3461	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	IF_15	CALL_27
0x2e0	           0xfb600	                   movzx eax, byte [rax]	      3461	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	IF_15	CALL_27
0x2e3	           0xfb6c0	                           movzx eax, al	      3461	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	IF_15	CALL_27
0x2e6	            0x89c7	                            mov edi, eax	      3461	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	IF_15	CALL_27
0x2e8	      0xe800000000	                          call 0x400032d	      3461	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	IF_15	CALL_27
0x2ed	            0x85c0	                           test eax, eax	      3461	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	IF_15	CALL_27
0x2ef	            0x7418	                            je 0x4000349	      3461	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	IF_15	CALL_27
0x2f1	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3462	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	IF_15
0x2f4	          0x8d5001	                      lea edx, [rax + 1]	      3462	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	IF_15
0x2f7	          0x8955b0	             mov dword [rbp - 0x50], edx	      3462	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	IF_15
0x2fa	          0x4863d0	                         movsxd rdx, eax	      3462	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	IF_15
0x2fd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3462	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	IF_15
0x301	          0x4801d0	                            add rax, rdx	      3462	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	IF_15
0x304	          0xc6002c	                    mov byte [rax], 0x2c	      3462	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	IF_15
0x307	            0xeb63	                           jmp 0x40003ac	      3462	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	IF_15
0x309	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      3465	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x30c	          0x4863d0	                         movsxd rdx, eax	      3465	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x30f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3465	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x313	          0x4801d0	                            add rax, rdx	      3465	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x316	           0xfb600	                   movzx eax, byte [rax]	      3465	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x319	            0x3c20	                            cmp al, 0x20	      3465	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x31b	            0x7414	                            je 0x4000371	      3465	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x31d	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      3465	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x320	          0x4863d0	                         movsxd rdx, eax	      3465	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x323	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3465	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x327	          0x4801d0	                            add rax, rdx	      3465	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x32a	           0xfb600	                   movzx eax, byte [rax]	      3465	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x32d	            0x3c2c	                            cmp al, 0x2c	      3465	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x32f	            0x7516	                           jne 0x4000387	      3465	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x331	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3466	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x334	          0x8d5001	                      lea edx, [rax + 1]	      3466	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x337	          0x8955b0	             mov dword [rbp - 0x50], edx	      3466	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x33a	          0x4863d0	                         movsxd rdx, eax	      3466	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x33d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3466	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x341	          0x4801d0	                            add rax, rdx	      3466	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x344	          0xc6005c	                    mov byte [rax], 0x5c	      3466	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x347	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3467	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	ELSE_2
0x34a	          0x8d5001	                      lea edx, [rax + 1]	      3467	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	ELSE_2
0x34d	          0x8955b0	             mov dword [rbp - 0x50], edx	      3467	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	ELSE_2
0x350	          0x4863d0	                         movsxd rdx, eax	      3467	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	ELSE_2
0x353	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3467	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	ELSE_2
0x357	          0x4801c2	                            add rdx, rax	      3467	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	ELSE_2
0x35a	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      3467	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	ELSE_2
0x35d	          0x4863c8	                         movsxd rcx, eax	      3467	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	ELSE_2
0x360	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3467	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	ELSE_2
0x364	          0x4801c8	                            add rax, rcx	      3467	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	ELSE_2
0x367	           0xfb600	                   movzx eax, byte [rax]	      3467	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	ELSE_2
0x36a	            0x8802	                      mov byte [rdx], al	      3467	option.c	FUNCTION_2	IF_13	IF_14	FOR_2	ELSE_2
0x36c	        0x8345ac01	               add dword [rbp - 0x54], 1	      3459	option.c	FUNCTION_2	IF_13	IF_14	FOR_2
0x370	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      3459	option.c	FUNCTION_2	IF_13	IF_14	FOR_2
0x373	          0x4863d0	                         movsxd rdx, eax	      3459	option.c	FUNCTION_2	IF_13	IF_14	FOR_2
0x376	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3459	option.c	FUNCTION_2	IF_13	IF_14	FOR_2
0x37a	          0x4801d0	                            add rax, rdx	      3459	option.c	FUNCTION_2	IF_13	IF_14	FOR_2
0x37d	           0xfb600	                   movzx eax, byte [rax]	      3459	option.c	FUNCTION_2	IF_13	IF_14	FOR_2
0x380	            0x84c0	                             test al, al	      3459	option.c	FUNCTION_2	IF_13	IF_14	FOR_2
0x382	     0xf854bffffff	                           jne 0x4000313	      3459	option.c	FUNCTION_2	IF_13	IF_14	FOR_2
0x388	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      3470	option.c	FUNCTION_2	IF_13	IF_14
0x38b	          0x4863d0	                         movsxd rdx, eax	      3470	option.c	FUNCTION_2	IF_13	IF_14
0x38e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3470	option.c	FUNCTION_2	IF_13	IF_14
0x392	          0x4801d0	                            add rax, rdx	      3470	option.c	FUNCTION_2	IF_13	IF_14
0x395	          0xc60000	                       mov byte [rax], 0	      3470	option.c	FUNCTION_2	IF_13	IF_14
0x398	      0xbf00000000	                              mov edi, 0	      3471	option.c	FUNCTION_2	IF_13	IF_14	CALL_28
0x39d	      0xe8e4a90000	                     call sym.findoption	      3471	option.c	FUNCTION_2	IF_13	IF_14	CALL_28
0x3a2	          0x8945a8	             mov dword [rbp - 0x58], eax	      3471	option.c	FUNCTION_2	IF_13	IF_14	CALL_28
0x3a5	        0x837da800	               cmp dword [rbp - 0x58], 0	      3472	option.c	FUNCTION_2	IF_13	IF_14	IF_17
0x3a9	            0x7842	                            js 0x400042d	      3472	option.c	FUNCTION_2	IF_13	IF_14	IF_17
0x3ab	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3474	option.c	FUNCTION_2	IF_13	IF_14	IF_17
0x3ae	            0x4898	                                    cdqe	      3474	option.c	FUNCTION_2	IF_13	IF_14	IF_17
0x3b0	        0x48c1e006	                              shl rax, 6	      3474	option.c	FUNCTION_2	IF_13	IF_14	IF_17
0x3b4	    0x488d90000000	                          lea rdx, [rax]	      3474	option.c	FUNCTION_2	IF_13	IF_14	IF_17
0x3bb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3474	option.c	FUNCTION_2	IF_13	IF_14	IF_17
0x3bf	          0x488902	                    mov qword [rdx], rax	      3474	option.c	FUNCTION_2	IF_13	IF_14	IF_17
0x3c2	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3475	option.c	FUNCTION_2	IF_13	IF_14	IF_17
0x3c5	            0x4898	                                    cdqe	      3475	option.c	FUNCTION_2	IF_13	IF_14	IF_17
0x3c7	        0x48c1e006	                              shl rax, 6	      3475	option.c	FUNCTION_2	IF_13	IF_14	IF_17
0x3cb	    0x480500000000	                              add rax, 0	      3475	option.c	FUNCTION_2	IF_13	IF_14	IF_17
0x3d1	          0x488b00	                    mov rax, qword [rax]	      3475	option.c	FUNCTION_2	IF_13	IF_14	IF_17
0x3d4	             0xc80	                             or al, 0x80	      3475	option.c	FUNCTION_2	IF_13	IF_14	IF_17
0x3d6	          0x4889c2	                            mov rdx, rax	      3475	option.c	FUNCTION_2	IF_13	IF_14	IF_17
0x3d9	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3475	option.c	FUNCTION_2	IF_13	IF_14	IF_17
0x3dc	            0x4898	                                    cdqe	      3475	option.c	FUNCTION_2	IF_13	IF_14	IF_17
0x3de	        0x48c1e006	                              shl rax, 6	      3475	option.c	FUNCTION_2	IF_13	IF_14	IF_17
0x3e2	    0x480500000000	                              add rax, 0	      3475	option.c	FUNCTION_2	IF_13	IF_14	IF_17
0x3e8	          0x488910	                    mov qword [rax], rdx	      3475	option.c	FUNCTION_2	IF_13	IF_14	IF_17
0x3eb	            0xeb0c	                           jmp 0x4000439	      3475	option.c	FUNCTION_2	IF_13	IF_14	IF_17
0x3ed	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3478	option.c	FUNCTION_2	IF_13	IF_14	CALL_29
0x3f1	          0x4889c7	                            mov rdi, rax	      3478	option.c	FUNCTION_2	IF_13	IF_14	CALL_29
0x3f4	      0xe800000000	                          call 0x4000439	      3478	option.c	FUNCTION_2	IF_13	IF_14	CALL_29
0x3f9	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      3480	option.c	FUNCTION_2	IF_13	IF_18
0x3fc	            0x85c0	                           test eax, eax	      3480	option.c	FUNCTION_2	IF_13	IF_18
0x3fe	            0x740c	                            je 0x400044c	      3480	option.c	FUNCTION_2	IF_13	IF_18
0x400	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3481	option.c	FUNCTION_2	IF_13	CALL_30
0x404	          0x4889c7	                            mov rdi, rax	      3481	option.c	FUNCTION_2	IF_13	CALL_30
0x407	      0xe800000000	                          call 0x400044c	      3481	option.c	FUNCTION_2	IF_13	CALL_30
0x40c	      0xbe00000000	                              mov esi, 0	      3511	option.c	FUNCTION_2	CALL_32
0x411	      0xbf00000000	                              mov edi, 0	      3511	option.c	FUNCTION_2	CALL_32
0x416	      0xe800000000	                          call 0x400045b	      3511	option.c	FUNCTION_2	CALL_32
0x41b	      0xbf00000000	                              mov edi, 0	      3529	option.c	FUNCTION_2	CALL_33
0x420	      0xe8b2050000	            call sym.set_options_default	      3529	option.c	FUNCTION_2	CALL_33
0x425	    0x488b05000000	            mov rax, qword [0x0400046c] 	      3536	option.c	FUNCTION_2
0x42c	    0xc78098120000	            mov dword [rax + 0x1298], 1 	      3536	option.c	FUNCTION_2
0x436	    0x488b05000000	            mov rax, qword [0x0400047d] 	      3537	option.c	FUNCTION_2
0x43d	    0xc78000160000	   mov dword [rax + 0x1600], 0xffffffff 	      3537	option.c	FUNCTION_2
0x447	    0x488b05000000	            mov rax, qword [0x0400048e] 	      3538	option.c	FUNCTION_2
0x44e	    0x48c780301600	mov qword [rax + 0x1630], 0xfffffffffffe1dc0 	      3538	option.c	FUNCTION_2
0x459	    0x488b05000000	            mov rax, qword [0x040004a0] 	      3539	option.c	FUNCTION_2	CALL_35
0x460	          0x4889c7	                            mov rdi, rax	      3539	option.c	FUNCTION_2	CALL_35
0x463	      0xe800000000	                          call 0x40004a8	      3539	option.c	FUNCTION_2	CALL_35
0x468	    0x488b05000000	            mov rax, qword [0x040004af] 	      3540	option.c	FUNCTION_2	CALL_36
0x46f	          0x4889c7	                            mov rdi, rax	      3540	option.c	FUNCTION_2	CALL_36
0x472	      0xe800000000	                          call 0x40004b7	      3540	option.c	FUNCTION_2	CALL_36
0x477	      0xe800000000	                          call 0x40004bc	      3541	option.c	FUNCTION_2	CALL_37
0x47c	      0xe8af3a0000	                 call sym.didset_options	      3544	option.c	FUNCTION_2	CALL_38
0x481	      0xe800000000	                          call 0x40004c6	      3549	option.c	FUNCTION_2	CALL_39
0x486	    0xc745a8000000	               mov dword [rbp - 0x58], 0	      3561	option.c	FUNCTION_2	FOR_3	CALL_40
0x48d	      0xe922010000	                           jmp 0x40005f4	      3561	option.c	FUNCTION_2	FOR_3	CALL_40
0x492	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3563	option.c	FUNCTION_2	FOR_3	IF_20
0x495	            0x4898	                                    cdqe	      3563	option.c	FUNCTION_2	FOR_3	IF_20
0x497	        0x48c1e006	                              shl rax, 6	      3563	option.c	FUNCTION_2	FOR_3	IF_20
0x49b	    0x480500000000	                              add rax, 0	      3563	option.c	FUNCTION_2	FOR_3	IF_20
0x4a1	          0x488b00	                    mov rax, qword [rax]	      3563	option.c	FUNCTION_2	FOR_3	IF_20
0x4a4	      0x2500001000	                       and eax, 0x100000	      3563	option.c	FUNCTION_2	FOR_3	IF_20
0x4a9	          0x4885c0	                           test rax, rax	      3563	option.c	FUNCTION_2	FOR_3	IF_20
0x4ac	            0x743a	                            je 0x4000528	      3563	option.c	FUNCTION_2	FOR_3	IF_20
0x4ae	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3564	option.c	FUNCTION_2	FOR_3	IF_20
0x4b1	            0x4898	                                    cdqe	      3564	option.c	FUNCTION_2	FOR_3	IF_20
0x4b3	        0x48c1e006	                              shl rax, 6	      3564	option.c	FUNCTION_2	FOR_3	IF_20
0x4b7	    0x480500000000	                              add rax, 0	      3564	option.c	FUNCTION_2	FOR_3	IF_20
0x4bd	          0x488b00	                    mov rax, qword [rax]	      3564	option.c	FUNCTION_2	FOR_3	IF_20
0x4c0	          0x4885c0	                           test rax, rax	      3564	option.c	FUNCTION_2	FOR_3	IF_20
0x4c3	            0x7423	                            je 0x4000528	      3564	option.c	FUNCTION_2	FOR_3	IF_20
0x4c5	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3565	option.c	FUNCTION_2	FOR_3	CALL_41
0x4c8	            0x4898	                                    cdqe	      3565	option.c	FUNCTION_2	FOR_3	CALL_41
0x4ca	        0x48c1e006	                              shl rax, 6	      3565	option.c	FUNCTION_2	FOR_3	CALL_41
0x4ce	    0x480500000000	                              add rax, 0	      3565	option.c	FUNCTION_2	FOR_3	CALL_41
0x4d4	          0x488b00	                    mov rax, qword [rax]	      3565	option.c	FUNCTION_2	FOR_3	CALL_41
0x4d7	          0x488b00	                    mov rax, qword [rax]	      3565	option.c	FUNCTION_2	FOR_3	CALL_41
0x4da	          0x4889c7	                            mov rdi, rax	      3565	option.c	FUNCTION_2	FOR_3	CALL_41
0x4dd	      0xe800000000	                          call 0x4000522	      3565	option.c	FUNCTION_2	FOR_3	CALL_41
0x4e2	        0x488945b8	             mov qword [rbp - 0x48], rax	      3565	option.c	FUNCTION_2	FOR_3	CALL_41
0x4e6	            0xeb13	                           jmp 0x400053b	      3565	option.c	FUNCTION_2	FOR_3	CALL_41
0x4e8	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3567	option.c	FUNCTION_2	FOR_3	CALL_42
0x4eb	      0xbe00000000	                              mov esi, 0	      3567	option.c	FUNCTION_2	FOR_3	CALL_42
0x4f0	            0x89c7	                            mov edi, eax	      3567	option.c	FUNCTION_2	FOR_3	CALL_42
0x4f2	      0xe819390000	                  call sym.option_expand	      3567	option.c	FUNCTION_2	FOR_3	CALL_42
0x4f7	        0x488945b8	             mov qword [rbp - 0x48], rax	      3567	option.c	FUNCTION_2	FOR_3	CALL_42
0x4fb	      0x48837db800	               cmp qword [rbp - 0x48], 0	      3568	option.c	FUNCTION_2	FOR_3	IF_21	CALL_43
0x500	     0xf84aa000000	                            je 0x40005f0	      3568	option.c	FUNCTION_2	FOR_3	IF_21	CALL_43
0x506	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3568	option.c	FUNCTION_2	FOR_3	IF_21	CALL_43
0x50a	          0x4889c7	                            mov rdi, rax	      3568	option.c	FUNCTION_2	FOR_3	IF_21	CALL_43
0x50d	      0xe800000000	                          call 0x4000552	      3568	option.c	FUNCTION_2	FOR_3	IF_21	CALL_43
0x512	        0x488945b8	             mov qword [rbp - 0x48], rax	      3568	option.c	FUNCTION_2	FOR_3	IF_21	CALL_43
0x516	      0x48837db800	               cmp qword [rbp - 0x48], 0	      3568	option.c	FUNCTION_2	FOR_3	IF_21	CALL_43
0x51b	     0xf848f000000	                            je 0x40005f0	      3568	option.c	FUNCTION_2	FOR_3	IF_21	CALL_43
0x521	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3570	option.c	FUNCTION_2	FOR_3	IF_21
0x524	            0x4898	                                    cdqe	      3570	option.c	FUNCTION_2	FOR_3	IF_21
0x526	        0x48c1e006	                              shl rax, 6	      3570	option.c	FUNCTION_2	FOR_3	IF_21
0x52a	    0x480500000000	                              add rax, 0	      3570	option.c	FUNCTION_2	FOR_3	IF_21
0x530	          0x488b00	                    mov rax, qword [rax]	      3570	option.c	FUNCTION_2	FOR_3	IF_21
0x533	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      3570	option.c	FUNCTION_2	FOR_3	IF_21
0x537	          0x488910	                    mov qword [rax], rdx	      3570	option.c	FUNCTION_2	FOR_3	IF_21
0x53a	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3576	option.c	FUNCTION_2	FOR_3	IF_21	IF_22
0x53d	            0x4898	                                    cdqe	      3576	option.c	FUNCTION_2	FOR_3	IF_21	IF_22
0x53f	        0x48c1e006	                              shl rax, 6	      3576	option.c	FUNCTION_2	FOR_3	IF_21	IF_22
0x543	    0x480500000000	                              add rax, 0	      3576	option.c	FUNCTION_2	FOR_3	IF_21	IF_22
0x549	          0x488b00	                    mov rax, qword [rax]	      3576	option.c	FUNCTION_2	FOR_3	IF_21	IF_22
0x54c	      0x2580000000	                           and eax, 0x80	      3576	option.c	FUNCTION_2	FOR_3	IF_21	IF_22
0x551	          0x4885c0	                           test rax, rax	      3576	option.c	FUNCTION_2	FOR_3	IF_21	IF_22
0x554	            0x741a	                            je 0x40005b0	      3576	option.c	FUNCTION_2	FOR_3	IF_21	IF_22
0x556	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3577	option.c	FUNCTION_2	FOR_3	IF_21	CALL_44
0x559	            0x4898	                                    cdqe	      3577	option.c	FUNCTION_2	FOR_3	IF_21	CALL_44
0x55b	        0x48c1e006	                              shl rax, 6	      3577	option.c	FUNCTION_2	FOR_3	IF_21	CALL_44
0x55f	    0x480500000000	                              add rax, 0	      3577	option.c	FUNCTION_2	FOR_3	IF_21	CALL_44
0x565	          0x488b00	                    mov rax, qword [rax]	      3577	option.c	FUNCTION_2	FOR_3	IF_21	CALL_44
0x568	          0x4889c7	                            mov rdi, rax	      3577	option.c	FUNCTION_2	FOR_3	IF_21	CALL_44
0x56b	      0xe800000000	                          call 0x40005b0	      3577	option.c	FUNCTION_2	FOR_3	IF_21	CALL_44
0x570	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3578	option.c	FUNCTION_2	FOR_3	IF_21
0x573	            0x4898	                                    cdqe	      3578	option.c	FUNCTION_2	FOR_3	IF_21
0x575	        0x48c1e006	                              shl rax, 6	      3578	option.c	FUNCTION_2	FOR_3	IF_21
0x579	    0x488d90000000	                          lea rdx, [rax]	      3578	option.c	FUNCTION_2	FOR_3	IF_21
0x580	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3578	option.c	FUNCTION_2	FOR_3	IF_21
0x584	          0x488902	                    mov qword [rdx], rax	      3578	option.c	FUNCTION_2	FOR_3	IF_21
0x587	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3579	option.c	FUNCTION_2	FOR_3	IF_21
0x58a	            0x4898	                                    cdqe	      3579	option.c	FUNCTION_2	FOR_3	IF_21
0x58c	        0x48c1e006	                              shl rax, 6	      3579	option.c	FUNCTION_2	FOR_3	IF_21
0x590	    0x480500000000	                              add rax, 0	      3579	option.c	FUNCTION_2	FOR_3	IF_21
0x596	          0x488b00	                    mov rax, qword [rax]	      3579	option.c	FUNCTION_2	FOR_3	IF_21
0x599	             0xc80	                             or al, 0x80	      3579	option.c	FUNCTION_2	FOR_3	IF_21
0x59b	          0x4889c2	                            mov rdx, rax	      3579	option.c	FUNCTION_2	FOR_3	IF_21
0x59e	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3579	option.c	FUNCTION_2	FOR_3	IF_21
0x5a1	            0x4898	                                    cdqe	      3579	option.c	FUNCTION_2	FOR_3	IF_21
0x5a3	        0x48c1e006	                              shl rax, 6	      3579	option.c	FUNCTION_2	FOR_3	IF_21
0x5a7	    0x480500000000	                              add rax, 0	      3579	option.c	FUNCTION_2	FOR_3	IF_21
0x5ad	          0x488910	                    mov qword [rax], rdx	      3579	option.c	FUNCTION_2	FOR_3	IF_21
0x5b0	        0x8345a801	               add dword [rbp - 0x58], 1	      3561	option.c	FUNCTION_2	FOR_3	CALL_40
0x5b4	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3561	option.c	FUNCTION_2	FOR_3	CALL_40
0x5b7	            0x4898	                                    cdqe	      3561	option.c	FUNCTION_2	FOR_3	CALL_40
0x5b9	        0x48c1e006	                              shl rax, 6	      3561	option.c	FUNCTION_2	FOR_3	CALL_40
0x5bd	    0x480500000000	                              add rax, 0	      3561	option.c	FUNCTION_2	FOR_3	CALL_40
0x5c3	          0x4889c7	                            mov rdi, rax	      3561	option.c	FUNCTION_2	FOR_3	CALL_40
0x5c6	      0xe879bf0000	                   call sym.istermoption	      3561	option.c	FUNCTION_2	FOR_3	CALL_40
0x5cb	            0x85c0	                           test eax, eax	      3561	option.c	FUNCTION_2	FOR_3	CALL_40
0x5cd	     0xf84bffeffff	                            je 0x40004d2	      3561	option.c	FUNCTION_2	FOR_3	CALL_40
0x5d3	    0x488b05000000	            mov rax, qword [0x0400061a] 	      3583	option.c	FUNCTION_2	CALL_45
0x5da	          0x4889c7	                            mov rdi, rax	      3583	option.c	FUNCTION_2	CALL_45
0x5dd	      0xe800000000	                          call 0x4000622	      3583	option.c	FUNCTION_2	CALL_45
0x5e2	      0xbf00000000	                              mov edi, 0	      3592	option.c	FUNCTION_2	IF_23	CALL_46
0x5e7	      0xe800000000	                          call 0x400062c	      3592	option.c	FUNCTION_2	IF_23	CALL_46
0x5ec	          0x4885c0	                           test rax, rax	      3592	option.c	FUNCTION_2	IF_23	CALL_46
0x5ef	            0x7419	                            je 0x400064a	      3592	option.c	FUNCTION_2	IF_23	CALL_46
0x5f1	      0xb900000000	                              mov ecx, 0	      3593	option.c	FUNCTION_2	CALL_47
0x5f6	      0xba00000000	                              mov edx, 0	      3593	option.c	FUNCTION_2	CALL_47
0x5fb	      0xbe01000000	                              mov esi, 1	      3593	option.c	FUNCTION_2	CALL_47
0x600	      0xbf00000000	                              mov edi, 0	      3593	option.c	FUNCTION_2	CALL_47
0x605	      0xe800000000	                          call 0x400064a	      3593	option.c	FUNCTION_2	CALL_47
0x60a	      0xe8993a0000	                call sym.didset_options2	      3596	option.c	FUNCTION_2	CALL_48
0x60f	      0xe800000000	                          call 0x4000654	      3636	option.c	FUNCTION_2	CALL_62
0x614	        0x488945b8	             mov qword [rbp - 0x48], rax	      3636	option.c	FUNCTION_2	CALL_62
0x618	      0x48837db800	               cmp qword [rbp - 0x48], 0	      3637	option.c	FUNCTION_2	IF_29
0x61d	     0xf84c8000000	                            je 0x400072b	      3637	option.c	FUNCTION_2	IF_29
0x623	    0x488b05000000	            mov rax, qword [0x0400066a] 	      3643	option.c	FUNCTION_2	IF_29
0x62a	        0x488945d8	             mov qword [rbp - 0x28], rax	      3643	option.c	FUNCTION_2	IF_29
0x62e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3644	option.c	FUNCTION_2	IF_29
0x632	    0x488905000000	            mov qword [0x04000679], rax 	      3644	option.c	FUNCTION_2	IF_29
0x639	    0x488b05000000	            mov rax, qword [0x04000680] 	      3645	option.c	FUNCTION_2	IF_29	IF_30	CALL_63
0x640	      0xbe00000000	                              mov esi, 0	      3645	option.c	FUNCTION_2	IF_29	IF_30	CALL_63
0x645	          0x4889c7	                            mov rdi, rax	      3645	option.c	FUNCTION_2	IF_29	IF_30	CALL_63
0x648	      0xe800000000	                          call 0x400068d	      3645	option.c	FUNCTION_2	IF_29	IF_30	CALL_63
0x64d	            0x85c0	                           test eax, eax	      3645	option.c	FUNCTION_2	IF_29	IF_30	CALL_63
0x64f	            0x751d	                           jne 0x40006ae	      3645	option.c	FUNCTION_2	IF_29	IF_30	CALL_63
0x651	      0xbf00000000	                              mov edi, 0	      3650	option.c	FUNCTION_2	IF_29	IF_30	CALL_64
0x656	      0xe800000000	                          call 0x400069b	      3650	option.c	FUNCTION_2	IF_29	IF_30	CALL_64
0x65b	    0x488905000000	            mov qword [0x040006a2], rax 	      3650	option.c	FUNCTION_2	IF_29	IF_30	CALL_64
0x662	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      3651	option.c	FUNCTION_2	IF_29	IF_30	CALL_65
0x666	          0x4889c7	                            mov rdi, rax	      3651	option.c	FUNCTION_2	IF_29	IF_30	CALL_65
0x669	      0xe800000000	                          call 0x40006ae	      3651	option.c	FUNCTION_2	IF_29	IF_30	CALL_65
0x66e	      0xe800000000	                          call 0x40006b3	      3653	option.c	FUNCTION_2	IF_29	IF_31	CALL_66
0x673	          0x4885c0	                           test rax, rax	      3653	option.c	FUNCTION_2	IF_29	IF_31	CALL_66
0x676	            0x7559	                           jne 0x4000711	      3653	option.c	FUNCTION_2	IF_29	IF_31	CALL_66
0x678	      0xbf00000000	                              mov edi, 0	      3655	option.c	FUNCTION_2	IF_29	IF_31	CALL_67
0x67d	      0xe804a70000	                     call sym.findoption	      3655	option.c	FUNCTION_2	IF_29	IF_31	CALL_67
0x682	          0x8945a8	             mov dword [rbp - 0x58], eax	      3655	option.c	FUNCTION_2	IF_29	IF_31	CALL_67
0x685	        0x837da800	               cmp dword [rbp - 0x58], 0	      3656	option.c	FUNCTION_2	IF_29	IF_31	IF_32
0x689	            0x7860	                            js 0x400072b	      3656	option.c	FUNCTION_2	IF_29	IF_31	IF_32
0x68b	    0x488b05000000	            mov rax, qword [0x040006d2] 	      3658	option.c	FUNCTION_2	IF_29	IF_31	IF_32
0x692	          0x8b55a8	             mov edx, dword [rbp - 0x58]	      3658	option.c	FUNCTION_2	IF_29	IF_31	IF_32
0x695	          0x4863d2	                         movsxd rdx, edx	      3658	option.c	FUNCTION_2	IF_29	IF_31	IF_32
0x698	        0x48c1e206	                              shl rdx, 6	      3658	option.c	FUNCTION_2	IF_29	IF_31	IF_32
0x69c	    0x4881c2000000	                              add rdx, 0	      3658	option.c	FUNCTION_2	IF_29	IF_31	IF_32
0x6a3	          0x488902	                    mov qword [rdx], rax	      3658	option.c	FUNCTION_2	IF_29	IF_31	IF_32
0x6a6	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3659	option.c	FUNCTION_2	IF_29	IF_31	IF_32
0x6a9	            0x4898	                                    cdqe	      3659	option.c	FUNCTION_2	IF_29	IF_31	IF_32
0x6ab	        0x48c1e006	                              shl rax, 6	      3659	option.c	FUNCTION_2	IF_29	IF_31	IF_32
0x6af	    0x480500000000	                              add rax, 0	      3659	option.c	FUNCTION_2	IF_29	IF_31	IF_32
0x6b5	          0x488b00	                    mov rax, qword [rax]	      3659	option.c	FUNCTION_2	IF_29	IF_31	IF_32
0x6b8	             0xc80	                             or al, 0x80	      3659	option.c	FUNCTION_2	IF_29	IF_31	IF_32
0x6ba	          0x4889c2	                            mov rdx, rax	      3659	option.c	FUNCTION_2	IF_29	IF_31	IF_32
0x6bd	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      3659	option.c	FUNCTION_2	IF_29	IF_31	IF_32
0x6c0	            0x4898	                                    cdqe	      3659	option.c	FUNCTION_2	IF_29	IF_31	IF_32
0x6c2	        0x48c1e006	                              shl rax, 6	      3659	option.c	FUNCTION_2	IF_29	IF_31	IF_32
0x6c6	    0x480500000000	                              add rax, 0	      3659	option.c	FUNCTION_2	IF_29	IF_31	IF_32
0x6cc	          0x488910	                    mov qword [rax], rdx	      3659	option.c	FUNCTION_2	IF_29	IF_31	IF_32
0x6cf	            0xeb1a	                           jmp 0x400072b	      3659	option.c	FUNCTION_2	IF_29	IF_31	IF_32
0x6d1	    0x488b05000000	            mov rax, qword [0x04000718] 	      3717	option.c	FUNCTION_2	IF_29	ELSE_9	CALL_83
0x6d8	          0x4889c7	                            mov rdi, rax	      3717	option.c	FUNCTION_2	IF_29	ELSE_9	CALL_83
0x6db	      0xe800000000	                          call 0x4000720	      3717	option.c	FUNCTION_2	IF_29	ELSE_9	CALL_83
0x6e0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3718	option.c	FUNCTION_2	IF_29	ELSE_9
0x6e4	    0x488905000000	            mov qword [0x0400072b], rax 	      3718	option.c	FUNCTION_2	IF_29	ELSE_9
0x6eb	      0xe800000000	                          call 0x4000730	      3725	option.c	FUNCTION_2	CALL_85
0x6f0	          0x4889c7	                            mov rdi, rax	      3725	option.c	FUNCTION_2	CALL_85
0x6f3	      0xe800000000	                          call 0x4000738	      3725	option.c	FUNCTION_2	CALL_85
0x6f8	              0x90	                                     nop	      3727	option.c	FUNCTION_2
0x6f9	        0x488b45f8	                mov rax, qword [rbp - 8]	      3727	option.c	FUNCTION_2
0x6fd	    0x644833042528	                xor rax, qword fs:[0x28]	      3727	option.c	FUNCTION_2
0x706	            0x7405	                            je 0x400074d	      3727	option.c	FUNCTION_2
0x708	      0xe800000000	                          call 0x400074d	      3727	option.c	FUNCTION_2
0x70d	              0xc9	                                   leave	      3727	option.c	FUNCTION_2
0x70e	              0xc3	                                     ret	      3727	option.c	FUNCTION_2
did_set_option	WHILE,0:SWITCH,0:CALL,1:FOR,0:ELSE,1:DO,0:IF,2:functions,0	52
0x38c1	              0x55	                                push rbp	      5264	option.c	FUNCTION_17
0x38c2	          0x4889e5	                            mov rbp, rsp	      5264	option.c	FUNCTION_17
0x38c5	        0x4883ec20	                           sub rsp, 0x20	      5264	option.c	FUNCTION_17
0x38c9	          0x897dec	             mov dword [rbp - 0x14], edi	      5264	option.c	FUNCTION_17
0x38cc	          0x8975e8	             mov dword [rbp - 0x18], esi	      5264	option.c	FUNCTION_17
0x38cf	          0x8955e4	             mov dword [rbp - 0x1c], edx	      5264	option.c	FUNCTION_17
0x38d2	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      5267	option.c	FUNCTION_17
0x38d5	            0x4898	                                    cdqe	      5267	option.c	FUNCTION_17
0x38d7	        0x48c1e006	                              shl rax, 6	      5267	option.c	FUNCTION_17
0x38db	    0x480500000000	                              add rax, 0	      5267	option.c	FUNCTION_17
0x38e1	          0x488b00	                    mov rax, qword [rax]	      5267	option.c	FUNCTION_17
0x38e4	          0x80cc01	                                or ah, 1	      5267	option.c	FUNCTION_17
0x38e7	          0x4889c2	                            mov rdx, rax	      5267	option.c	FUNCTION_17
0x38ea	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      5267	option.c	FUNCTION_17
0x38ed	            0x4898	                                    cdqe	      5267	option.c	FUNCTION_17
0x38ef	        0x48c1e006	                              shl rax, 6	      5267	option.c	FUNCTION_17
0x38f3	    0x480500000000	                              add rax, 0	      5267	option.c	FUNCTION_17
0x38f9	          0x488910	                    mov qword [rax], rdx	      5267	option.c	FUNCTION_17
0x38fc	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      5272	option.c	FUNCTION_17	CALL_1
0x38ff	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      5272	option.c	FUNCTION_17	CALL_1
0x3902	            0x89d6	                            mov esi, edx	      5272	option.c	FUNCTION_17	CALL_1
0x3904	            0x89c7	                            mov edi, eax	      5272	option.c	FUNCTION_17	CALL_1
0x3906	      0xe8320d0000	                  call sym.insecure_flag	      5272	option.c	FUNCTION_17	CALL_1
0x390b	        0x488945f8	                mov qword [rbp - 8], rax	      5272	option.c	FUNCTION_17	CALL_1
0x390f	    0x8b0500000000	            mov eax, dword [0x04003955] 	      5273	option.c	FUNCTION_17	IF_1
0x3915	            0x85c0	                           test eax, eax	      5273	option.c	FUNCTION_17	IF_1
0x3917	            0x7514	                           jne 0x400396d	      5273	option.c	FUNCTION_17	IF_1
0x3919	    0x8b0500000000	            mov eax, dword [0x0400395f] 	      5275	option.c	FUNCTION_17	IF_1
0x391f	            0x85c0	                           test eax, eax	      5275	option.c	FUNCTION_17	IF_1
0x3921	            0x750a	                           jne 0x400396d	      5275	option.c	FUNCTION_17	IF_1
0x3923	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      5277	option.c	FUNCTION_17	IF_1
0x3926	          0x83e008	                              and eax, 8	      5277	option.c	FUNCTION_17	IF_1
0x3929	            0x85c0	                           test eax, eax	      5277	option.c	FUNCTION_17	IF_1
0x392b	            0x7419	                            je 0x4003986	      5277	option.c	FUNCTION_17	IF_1
0x392d	        0x488b45f8	                mov rax, qword [rbp - 8]	      5278	option.c	FUNCTION_17	IF_1
0x3931	          0x488b00	                    mov rax, qword [rax]	      5278	option.c	FUNCTION_17	IF_1
0x3934	    0x480d00008000	                        or rax, 0x800000	      5278	option.c	FUNCTION_17	IF_1
0x393a	          0x4889c2	                            mov rdx, rax	      5278	option.c	FUNCTION_17	IF_1
0x393d	        0x488b45f8	                mov rax, qword [rbp - 8]	      5278	option.c	FUNCTION_17	IF_1
0x3941	          0x488910	                    mov qword [rax], rdx	      5278	option.c	FUNCTION_17	IF_1
0x3944	            0xeb1d	                           jmp 0x40039a3	      5281	option.c	FUNCTION_17
0x3946	        0x837de400	               cmp dword [rbp - 0x1c], 0	      5279	option.c	FUNCTION_17	ELSE_1	IF_2
0x394a	            0x7417	                            je 0x40039a3	      5279	option.c	FUNCTION_17	ELSE_1	IF_2
0x394c	        0x488b45f8	                mov rax, qword [rbp - 8]	      5280	option.c	FUNCTION_17	ELSE_1	IF_2
0x3950	          0x488b00	                    mov rax, qword [rax]	      5280	option.c	FUNCTION_17	ELSE_1	IF_2
0x3953	    0x4825ffff7fff	             and rax, 0xffffffffff7fffff	      5280	option.c	FUNCTION_17	ELSE_1	IF_2
0x3959	          0x4889c2	                            mov rdx, rax	      5280	option.c	FUNCTION_17	ELSE_1	IF_2
0x395c	        0x488b45f8	                mov rax, qword [rbp - 8]	      5280	option.c	FUNCTION_17	ELSE_1	IF_2
0x3960	          0x488910	                    mov qword [rax], rdx	      5280	option.c	FUNCTION_17	ELSE_1	IF_2
0x3963	              0x90	                                     nop	      5281	option.c	FUNCTION_17
0x3964	              0xc9	                                   leave	      5281	option.c	FUNCTION_17
0x3965	              0xc3	                                     ret	      5281	option.c	FUNCTION_17
opt_strings_flags	WHILE,1:SWITCH,0:CALL,2:FOR,1:ELSE,0:DO,0:IF,3:functions,0	92
0x10b05	              0x55	                                push rbp	     12319	option.c	FUNCTION_108
0x10b06	          0x4889e5	                            mov rbp, rsp	     12319	option.c	FUNCTION_108
0x10b09	        0x4883ec30	                           sub rsp, 0x30	     12319	option.c	FUNCTION_108
0x10b0d	        0x48897de8	             mov qword [rbp - 0x18], rdi	     12319	option.c	FUNCTION_108
0x10b11	        0x488975e0	             mov qword [rbp - 0x20], rsi	     12319	option.c	FUNCTION_108
0x10b15	        0x488955d8	             mov qword [rbp - 0x28], rdx	     12319	option.c	FUNCTION_108
0x10b19	          0x894dd4	             mov dword [rbp - 0x2c], ecx	     12319	option.c	FUNCTION_108
0x10b1c	    0xc745f8000000	                  mov dword [rbp - 8], 0	     12322	option.c	FUNCTION_108
0x10b23	      0xe9ec000000	                           jmp 0x4010c54	     12324	option.c	FUNCTION_108	WHILE_1
0x10b28	    0xc745f4000000	                mov dword [rbp - 0xc], 0	     12326	option.c	FUNCTION_108	WHILE_1	FOR_1
0x10b2f	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     12328	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_1
0x10b32	            0x4898	                                    cdqe	     12328	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_1
0x10b34	    0x488d14c50000	                        lea rdx, [rax*8]	     12328	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_1
0x10b3c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     12328	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_1
0x10b40	          0x4801d0	                            add rax, rdx	     12328	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_1
0x10b43	          0x488b00	                    mov rax, qword [rax]	     12328	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_1
0x10b46	          0x4885c0	                           test rax, rax	     12328	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_1
0x10b49	            0x750a	                           jne 0x4010b95	     12328	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_1
0x10b4b	      0xb800000000	                              mov eax, 0	     12329	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_1
0x10b50	      0xe9e3000000	                           jmp 0x4010c78	     12329	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_1
0x10b55	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     12331	option.c	FUNCTION_108	WHILE_1	FOR_1	CALL_1
0x10b58	            0x4898	                                    cdqe	     12331	option.c	FUNCTION_108	WHILE_1	FOR_1	CALL_1
0x10b5a	    0x488d14c50000	                        lea rdx, [rax*8]	     12331	option.c	FUNCTION_108	WHILE_1	FOR_1	CALL_1
0x10b62	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     12331	option.c	FUNCTION_108	WHILE_1	FOR_1	CALL_1
0x10b66	          0x4801d0	                            add rax, rdx	     12331	option.c	FUNCTION_108	WHILE_1	FOR_1	CALL_1
0x10b69	          0x488b00	                    mov rax, qword [rax]	     12331	option.c	FUNCTION_108	WHILE_1	FOR_1	CALL_1
0x10b6c	          0x4889c7	                            mov rdi, rax	     12331	option.c	FUNCTION_108	WHILE_1	FOR_1	CALL_1
0x10b6f	      0xe800000000	                          call 0x4010bb4	     12331	option.c	FUNCTION_108	WHILE_1	FOR_1	CALL_1
0x10b74	          0x8945fc	                mov dword [rbp - 4], eax	     12331	option.c	FUNCTION_108	WHILE_1	FOR_1	CALL_1
0x10b77	          0x8b45fc	                mov eax, dword [rbp - 4]	     12332	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_2	CALL_2
0x10b7a	          0x4863d0	                         movsxd rdx, eax	     12332	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_2	CALL_2
0x10b7d	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     12332	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_2	CALL_2
0x10b80	            0x4898	                                    cdqe	     12332	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_2	CALL_2
0x10b82	    0x488d0cc50000	                        lea rcx, [rax*8]	     12332	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_2	CALL_2
0x10b8a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     12332	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_2	CALL_2
0x10b8e	          0x4801c8	                            add rax, rcx	     12332	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_2	CALL_2
0x10b91	          0x488b00	                    mov rax, qword [rax]	     12332	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_2	CALL_2
0x10b94	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	     12332	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_2	CALL_2
0x10b98	          0x4889ce	                            mov rsi, rcx	     12332	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_2	CALL_2
0x10b9b	          0x4889c7	                            mov rdi, rax	     12332	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_2	CALL_2
0x10b9e	      0xe800000000	                          call 0x4010be3	     12332	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_2	CALL_2
0x10ba3	            0x85c0	                           test eax, eax	     12332	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_2	CALL_2
0x10ba5	            0x7564	                           jne 0x4010c4b	     12332	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_2	CALL_2
0x10ba7	        0x837dd400	               cmp dword [rbp - 0x2c], 0	     12333	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_2
0x10bab	            0x7414	                            je 0x4010c01	     12333	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_2
0x10bad	          0x8b45fc	                mov eax, dword [rbp - 4]	     12333	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_2
0x10bb0	          0x4863d0	                         movsxd rdx, eax	     12333	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_2
0x10bb3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12333	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_2
0x10bb7	          0x4801d0	                            add rax, rdx	     12333	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_2
0x10bba	           0xfb600	                   movzx eax, byte [rax]	     12333	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_2
0x10bbd	            0x3c2c	                            cmp al, 0x2c	     12333	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_2
0x10bbf	            0x7414	                            je 0x4010c15	     12333	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_2
0x10bc1	          0x8b45fc	                mov eax, dword [rbp - 4]	     12333	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_2
0x10bc4	          0x4863d0	                         movsxd rdx, eax	     12333	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_2
0x10bc7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12333	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_2
0x10bcb	          0x4801d0	                            add rax, rdx	     12333	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_2
0x10bce	           0xfb600	                   movzx eax, byte [rax]	     12333	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_2
0x10bd1	            0x84c0	                             test al, al	     12333	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_2
0x10bd3	            0x7536	                           jne 0x4010c4b	     12333	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_2
0x10bd5	          0x8b45fc	                mov eax, dword [rbp - 4]	     12335	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_2
0x10bd8	          0x4863d0	                         movsxd rdx, eax	     12335	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_2
0x10bdb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12335	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_2
0x10bdf	          0x4801d0	                            add rax, rdx	     12335	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_2
0x10be2	           0xfb600	                   movzx eax, byte [rax]	     12335	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_2
0x10be5	            0x3c2c	                            cmp al, 0x2c	     12335	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_2
0x10be7	           0xf94c0	                                 sete al	     12335	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_2
0x10bea	           0xfb6d0	                           movzx edx, al	     12335	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_2
0x10bed	          0x8b45fc	                mov eax, dword [rbp - 4]	     12335	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_2
0x10bf0	             0x1d0	                            add eax, edx	     12335	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_2
0x10bf2	            0x4898	                                    cdqe	     12335	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_2
0x10bf4	        0x480145e8	            add qword [rbp - 0x18], rax 	     12335	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_2
0x10bf8	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     12336	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_2
0x10bfb	      0xba01000000	                              mov edx, 1	     12336	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_2
0x10c00	            0x89c1	                            mov ecx, eax	     12336	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_2
0x10c02	            0xd3e2	                             shl edx, cl	     12336	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_2
0x10c04	            0x89d0	                            mov eax, edx	     12336	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_2
0x10c06	           0x945f8	                 or dword [rbp - 8], eax	     12336	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_2
0x10c09	            0xeb09	                           jmp 0x4010c54	     12337	option.c	FUNCTION_108	WHILE_1	FOR_1	IF_2
0x10c0b	        0x8345f401	                add dword [rbp - 0xc], 1	     12326	option.c	FUNCTION_108	WHILE_1	FOR_1
0x10c0f	      0xe91bffffff	                           jmp 0x4010b6f	     12339	option.c	FUNCTION_108	WHILE_1	FOR_1
0x10c14	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12324	option.c	FUNCTION_108	WHILE_1
0x10c18	           0xfb600	                   movzx eax, byte [rax]	     12324	option.c	FUNCTION_108	WHILE_1
0x10c1b	            0x84c0	                             test al, al	     12324	option.c	FUNCTION_108	WHILE_1
0x10c1d	     0xf8505ffffff	                           jne 0x4010b68	     12324	option.c	FUNCTION_108	WHILE_1
0x10c23	      0x48837dd800	               cmp qword [rbp - 0x28], 0	     12341	option.c	FUNCTION_108	IF_3
0x10c28	            0x7409	                            je 0x4010c73	     12341	option.c	FUNCTION_108	IF_3
0x10c2a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     12342	option.c	FUNCTION_108	IF_3
0x10c2e	          0x8b55f8	                mov edx, dword [rbp - 8]	     12342	option.c	FUNCTION_108	IF_3
0x10c31	            0x8910	                    mov dword [rax], edx	     12342	option.c	FUNCTION_108	IF_3
0x10c33	      0xb801000000	                              mov eax, 1	     12344	option.c	FUNCTION_108
0x10c38	              0xc9	                                   leave	     12345	option.c	FUNCTION_108
0x10c39	              0xc3	                                     ret	     12345	option.c	FUNCTION_108
showoneopt	WHILE,0:SWITCH,0:CALL,9:FOR,0:ELSE,2:DO,0:IF,3:functions,0	74
0xb9f8	              0x55	                                push rbp	      9938	option.c	FUNCTION_64
0xb9f9	          0x4889e5	                            mov rbp, rsp	      9938	option.c	FUNCTION_64
0xb9fc	        0x4883ec20	                           sub rsp, 0x20	      9938	option.c	FUNCTION_64
0xba00	        0x48897de8	             mov qword [rbp - 0x18], rdi	      9938	option.c	FUNCTION_64
0xba04	          0x8975e4	             mov dword [rbp - 0x1c], esi	      9938	option.c	FUNCTION_64
0xba07	    0x8b0500000000	            mov eax, dword [0x0400ba4d] 	      9940	option.c	FUNCTION_64
0xba0d	          0x8945f4	              mov dword [rbp - 0xc], eax	      9940	option.c	FUNCTION_64
0xba10	    0xc70500000000	               mov dword [0x0400ba5a], 0	      9942	option.c	FUNCTION_64
0xba1a	    0xc70500000000	               mov dword [0x0400ba64], 1	      9943	option.c	FUNCTION_64
0xba24	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      9945	option.c	FUNCTION_64	CALL_1
0xba27	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9945	option.c	FUNCTION_64	CALL_1
0xba2b	            0x89d6	                            mov esi, edx	      9945	option.c	FUNCTION_64	CALL_1
0xba2d	          0x4889c7	                            mov rdi, rax	      9945	option.c	FUNCTION_64	CALL_1
0xba30	      0xe8d40f0000	                 call sym.get_varp_scope	      9945	option.c	FUNCTION_64	CALL_1
0xba35	        0x488945f8	                mov qword [rbp - 8], rax	      9945	option.c	FUNCTION_64	CALL_1
0xba39	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9948	option.c	FUNCTION_64	IF_1
0xba3d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      9948	option.c	FUNCTION_64	IF_1
0xba41	          0x83e001	                              and eax, 1	      9948	option.c	FUNCTION_64	IF_1
0xba44	          0x4885c0	                           test rax, rax	      9948	option.c	FUNCTION_64	IF_1
0xba47	            0x7434	                            je 0x400babd	      9948	option.c	FUNCTION_64	IF_1
0xba49	    0x488b05000000	            mov rax, qword [0x0400ba90] 	      9948	option.c	FUNCTION_64	IF_1
0xba50	    0x4805c8000000	                           add rax, 0xc8	      9948	option.c	FUNCTION_64	IF_1
0xba56	        0x483b45f8	                cmp rax, qword [rbp - 8]	      9948	option.c	FUNCTION_64	IF_1
0xba5a	            0x750b	                           jne 0x400baa7	      9948	option.c	FUNCTION_64	IF_1
0xba5c	      0xe800000000	                          call 0x400baa1	      9949	option.c	FUNCTION_64	IF_1	CALL_2
0xba61	            0x85c0	                           test eax, eax	      9948	option.c	FUNCTION_64	IF_1
0xba63	            0x740c	                            je 0x400bab1	      9948	option.c	FUNCTION_64	IF_1
0xba65	            0xeb16	                           jmp 0x400babd	      9948	option.c	FUNCTION_64	IF_1
0xba67	        0x488b45f8	                mov rax, qword [rbp - 8]	      9949	option.c	FUNCTION_64	IF_1	CALL_2
0xba6b	            0x8b00	                    mov eax, dword [rax]	      9949	option.c	FUNCTION_64	IF_1	CALL_2
0xba6d	            0x85c0	                           test eax, eax	      9948	option.c	FUNCTION_64	IF_1
0xba6f	            0x750c	                           jne 0x400babd	      9948	option.c	FUNCTION_64	IF_1
0xba71	      0xbf00000000	                              mov edi, 0	      9950	option.c	FUNCTION_64	CALL_3
0xba76	      0xe800000000	                          call 0x400babb	      9950	option.c	FUNCTION_64	CALL_3
0xba7b	            0xeb30	                           jmp 0x400baed	      9950	option.c	FUNCTION_64	CALL_3
0xba7d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9951	option.c	FUNCTION_64	ELSE_1	IF_2
0xba81	        0x488b4010	            mov rax, qword [rax + 0x10] 	      9951	option.c	FUNCTION_64	ELSE_1	IF_2
0xba85	          0x83e001	                              and eax, 1	      9951	option.c	FUNCTION_64	ELSE_1	IF_2
0xba88	          0x4885c0	                           test rax, rax	      9951	option.c	FUNCTION_64	ELSE_1	IF_2
0xba8b	            0x7416	                            je 0x400bae3	      9951	option.c	FUNCTION_64	ELSE_1	IF_2
0xba8d	        0x488b45f8	                mov rax, qword [rbp - 8]	      9951	option.c	FUNCTION_64	ELSE_1	IF_2
0xba91	            0x8b00	                    mov eax, dword [rax]	      9951	option.c	FUNCTION_64	ELSE_1	IF_2
0xba93	            0x85c0	                           test eax, eax	      9951	option.c	FUNCTION_64	ELSE_1	IF_2
0xba95	            0x790c	                           jns 0x400bae3	      9951	option.c	FUNCTION_64	ELSE_1	IF_2
0xba97	      0xbf00000000	                              mov edi, 0	      9952	option.c	FUNCTION_64	ELSE_1	IF_2
0xba9c	      0xe800000000	                          call 0x400bae1	      9952	option.c	FUNCTION_64	ELSE_1	IF_2
0xbaa1	            0xeb0a	                           jmp 0x400baed	      9952	option.c	FUNCTION_64	ELSE_1	IF_2
0xbaa3	      0xbf00000000	                              mov edi, 0	      9954	option.c	FUNCTION_64	CALL_5
0xbaa8	      0xe800000000	                          call 0x400baed	      9954	option.c	FUNCTION_64	CALL_5
0xbaad	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9955	option.c	FUNCTION_64	CALL_6
0xbab1	          0x488b00	                    mov rax, qword [rax]	      9955	option.c	FUNCTION_64	CALL_6
0xbab4	          0x4889c7	                            mov rdi, rax	      9955	option.c	FUNCTION_64	CALL_6
0xbab7	      0xe800000000	                          call 0x400bafc	      9955	option.c	FUNCTION_64	CALL_6
0xbabc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9956	option.c	FUNCTION_64	IF_3
0xbac0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      9956	option.c	FUNCTION_64	IF_3
0xbac4	          0x83e001	                              and eax, 1	      9956	option.c	FUNCTION_64	IF_3
0xbac7	          0x4885c0	                           test rax, rax	      9956	option.c	FUNCTION_64	IF_3
0xbaca	            0x752a	                           jne 0x400bb36	      9956	option.c	FUNCTION_64	IF_3
0xbacc	      0xbf3d000000	                           mov edi, 0x3d	      9958	option.c	FUNCTION_64	IF_3	CALL_7
0xbad1	      0xe800000000	                          call 0x400bb16	      9958	option.c	FUNCTION_64	IF_3	CALL_7
0xbad6	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      9960	option.c	FUNCTION_64	IF_3	CALL_8
0xbad9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9960	option.c	FUNCTION_64	IF_3	CALL_8
0xbadd	            0x89d6	                            mov esi, edx	      9960	option.c	FUNCTION_64	IF_3	CALL_8
0xbadf	          0x4889c7	                            mov rdi, rax	      9960	option.c	FUNCTION_64	IF_3	CALL_8
0xbae2	      0xe8f6410000	            call sym.option_value2string	      9960	option.c	FUNCTION_64	IF_3	CALL_8
0xbae7	    0x488b05000000	            mov rax, qword [0x0400bb2e] 	      9961	option.c	FUNCTION_64	IF_3	CALL_9
0xbaee	          0x4889c7	                            mov rdi, rax	      9961	option.c	FUNCTION_64	IF_3	CALL_9
0xbaf1	      0xe800000000	                          call 0x400bb36	      9961	option.c	FUNCTION_64	IF_3	CALL_9
0xbaf6	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      9964	option.c	FUNCTION_64
0xbaf9	    0x890500000000	            mov dword [0x0400bb3f], eax 	      9964	option.c	FUNCTION_64
0xbaff	    0xc70500000000	               mov dword [0x0400bb49], 0	      9965	option.c	FUNCTION_64
0xbb09	              0x90	                                     nop	      9966	option.c	FUNCTION_64
0xbb0a	              0xc9	                                   leave	      9966	option.c	FUNCTION_64
0xbb0b	              0xc3	                                     ret	      9966	option.c	FUNCTION_64
check_opt_strings	WHILE,0:SWITCH,0:CALL,1:FOR,0:ELSE,0:DO,0:IF,0:functions,0	15
0x10ad6	              0x55	                                push rbp	     12302	option.c	FUNCTION_107
0x10ad7	          0x4889e5	                            mov rbp, rsp	     12302	option.c	FUNCTION_107
0x10ada	        0x4883ec20	                           sub rsp, 0x20	     12302	option.c	FUNCTION_107
0x10ade	        0x48897df8	                mov qword [rbp - 8], rdi	     12302	option.c	FUNCTION_107
0x10ae2	        0x488975f0	             mov qword [rbp - 0x10], rsi	     12302	option.c	FUNCTION_107
0x10ae6	          0x8955ec	             mov dword [rbp - 0x14], edx	     12302	option.c	FUNCTION_107
0x10ae9	          0x8b55ec	             mov edx, dword [rbp - 0x14]	     12303	option.c	FUNCTION_107	CALL_1
0x10aec	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	     12303	option.c	FUNCTION_107	CALL_1
0x10af0	        0x488b45f8	                mov rax, qword [rbp - 8]	     12303	option.c	FUNCTION_107	CALL_1
0x10af4	            0x89d1	                            mov ecx, edx	     12303	option.c	FUNCTION_107	CALL_1
0x10af6	      0xba00000000	                              mov edx, 0	     12303	option.c	FUNCTION_107	CALL_1
0x10afb	          0x4889c7	                            mov rdi, rax	     12303	option.c	FUNCTION_107	CALL_1
0x10afe	      0xe802000000	              call sym.opt_strings_flags	     12303	option.c	FUNCTION_107	CALL_1
0x10b03	              0xc9	                                   leave	     12304	option.c	FUNCTION_107
0x10b04	              0xc3	                                     ret	     12304	option.c	FUNCTION_107
check_stl_option	WHILE,5:SWITCH,0:CALL,7:FOR,0:ELSE,0:DO,0:IF,14:functions,0	151
0x84e2	              0x55	                                push rbp	      7832	option.c	FUNCTION_45
0x84e3	          0x4889e5	                            mov rbp, rsp	      7832	option.c	FUNCTION_45
0x84e6	        0x4883ec20	                           sub rsp, 0x20	      7832	option.c	FUNCTION_45
0x84ea	        0x48897de8	             mov qword [rbp - 0x18], rdi	      7832	option.c	FUNCTION_45
0x84ee	    0xc745f8000000	                  mov dword [rbp - 8], 0	      7833	option.c	FUNCTION_45
0x84f5	    0xc745fc000000	                  mov dword [rbp - 4], 0	      7834	option.c	FUNCTION_45
0x84fc	      0xe987010000	                           jmp 0x40086c8	      7837	option.c	FUNCTION_45	WHILE_1
0x8501	      0x488345e801	               add qword [rbp - 0x18], 1	      7841	option.c	FUNCTION_45	WHILE_1	WHILE_2
0x8506	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7840	option.c	FUNCTION_45	WHILE_1	WHILE_2
0x850a	           0xfb600	                   movzx eax, byte [rax]	      7840	option.c	FUNCTION_45	WHILE_1	WHILE_2
0x850d	            0x84c0	                             test al, al	      7840	option.c	FUNCTION_45	WHILE_1	WHILE_2
0x850f	            0x740b	                            je 0x400855c	      7840	option.c	FUNCTION_45	WHILE_1	WHILE_2
0x8511	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7840	option.c	FUNCTION_45	WHILE_1	WHILE_2
0x8515	           0xfb600	                   movzx eax, byte [rax]	      7840	option.c	FUNCTION_45	WHILE_1	WHILE_2
0x8518	            0x3c25	                            cmp al, 0x25	      7840	option.c	FUNCTION_45	WHILE_1	WHILE_2
0x851a	            0x75e5	                           jne 0x4008541	      7840	option.c	FUNCTION_45	WHILE_1	WHILE_2
0x851c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7842	option.c	FUNCTION_45	WHILE_1	IF_1
0x8520	           0xfb600	                   movzx eax, byte [rax]	      7842	option.c	FUNCTION_45	WHILE_1	IF_1
0x8523	            0x84c0	                             test al, al	      7842	option.c	FUNCTION_45	WHILE_1	IF_1
0x8525	     0xf8474010000	                            je 0x40086df	      7842	option.c	FUNCTION_45	WHILE_1	IF_1
0x852b	      0x488345e801	               add qword [rbp - 0x18], 1	      7844	option.c	FUNCTION_45	WHILE_1
0x8530	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7845	option.c	FUNCTION_45	WHILE_1	IF_2
0x8534	           0xfb600	                   movzx eax, byte [rax]	      7845	option.c	FUNCTION_45	WHILE_1	IF_2
0x8537	            0x3c25	                            cmp al, 0x25	      7845	option.c	FUNCTION_45	WHILE_1	IF_2
0x8539	            0x740f	                            je 0x400858a	      7845	option.c	FUNCTION_45	WHILE_1	IF_2
0x853b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7845	option.c	FUNCTION_45	WHILE_1	IF_2
0x853f	           0xfb600	                   movzx eax, byte [rax]	      7845	option.c	FUNCTION_45	WHILE_1	IF_2
0x8542	            0x3c29	                            cmp al, 0x29	      7845	option.c	FUNCTION_45	WHILE_1	IF_2
0x8544	            0x7404	                            je 0x400858a	      7845	option.c	FUNCTION_45	WHILE_1	IF_2
0x8546	        0x8345f801	                  add dword [rbp - 8], 1	      7846	option.c	FUNCTION_45	WHILE_1	IF_2
0x854a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7847	option.c	FUNCTION_45	WHILE_1	IF_3
0x854e	           0xfb600	                   movzx eax, byte [rax]	      7847	option.c	FUNCTION_45	WHILE_1	IF_3
0x8551	            0x3c25	                            cmp al, 0x25	      7847	option.c	FUNCTION_45	WHILE_1	IF_3
0x8553	            0x7416	                            je 0x40085ab	      7847	option.c	FUNCTION_45	WHILE_1	IF_3
0x8555	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7847	option.c	FUNCTION_45	WHILE_1	IF_3
0x8559	           0xfb600	                   movzx eax, byte [rax]	      7847	option.c	FUNCTION_45	WHILE_1	IF_3
0x855c	            0x3c3c	                            cmp al, 0x3c	      7847	option.c	FUNCTION_45	WHILE_1	IF_3
0x855e	            0x740b	                            je 0x40085ab	      7847	option.c	FUNCTION_45	WHILE_1	IF_3
0x8560	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7847	option.c	FUNCTION_45	WHILE_1	IF_3
0x8564	           0xfb600	                   movzx eax, byte [rax]	      7847	option.c	FUNCTION_45	WHILE_1	IF_3
0x8567	            0x3c3d	                            cmp al, 0x3d	      7847	option.c	FUNCTION_45	WHILE_1	IF_3
0x8569	            0x750a	                           jne 0x40085b5	      7847	option.c	FUNCTION_45	WHILE_1	IF_3
0x856b	      0x488345e801	               add qword [rbp - 0x18], 1	      7849	option.c	FUNCTION_45	WHILE_1	IF_3
0x8570	      0xe913010000	                           jmp 0x40086c8	      7850	option.c	FUNCTION_45	WHILE_1	IF_3
0x8575	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7852	option.c	FUNCTION_45	WHILE_1	IF_4
0x8579	           0xfb600	                   movzx eax, byte [rax]	      7852	option.c	FUNCTION_45	WHILE_1	IF_4
0x857c	            0x3c29	                            cmp al, 0x29	      7852	option.c	FUNCTION_45	WHILE_1	IF_4
0x857e	            0x7518	                           jne 0x40085d8	      7852	option.c	FUNCTION_45	WHILE_1	IF_4
0x8580	      0x488345e801	               add qword [rbp - 0x18], 1	      7854	option.c	FUNCTION_45	WHILE_1	IF_4
0x8585	        0x836dfc01	                  sub dword [rbp - 4], 1	      7855	option.c	FUNCTION_45	WHILE_1	IF_4	IF_5
0x8589	        0x837dfc00	                  cmp dword [rbp - 4], 0	      7855	option.c	FUNCTION_45	WHILE_1	IF_4	IF_5
0x858d	     0xf880f010000	                            js 0x40086e2	      7855	option.c	FUNCTION_45	WHILE_1	IF_4	IF_5
0x8593	      0xe9f0000000	                           jmp 0x40086c8	      7857	option.c	FUNCTION_45	WHILE_1	IF_4
0x8598	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7859	option.c	FUNCTION_45	WHILE_1	IF_6
0x859c	           0xfb600	                   movzx eax, byte [rax]	      7859	option.c	FUNCTION_45	WHILE_1	IF_6
0x859f	            0x3c2d	                            cmp al, 0x2d	      7859	option.c	FUNCTION_45	WHILE_1	IF_6
0x85a1	            0x750c	                           jne 0x40085ef	      7859	option.c	FUNCTION_45	WHILE_1	IF_6
0x85a3	      0x488345e801	               add qword [rbp - 0x18], 1	      7860	option.c	FUNCTION_45	WHILE_1	IF_6
0x85a8	            0xeb05	                           jmp 0x40085ef	      7861	option.c	FUNCTION_45	WHILE_1	WHILE_3	CALL_1
0x85aa	      0x488345e801	               add qword [rbp - 0x18], 1	      7862	option.c	FUNCTION_45	WHILE_1	WHILE_3
0x85af	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7861	option.c	FUNCTION_45	WHILE_1	WHILE_3	CALL_1
0x85b3	           0xfb600	                   movzx eax, byte [rax]	      7861	option.c	FUNCTION_45	WHILE_1	WHILE_3	CALL_1
0x85b6	           0xfb6c0	                           movzx eax, al	      7861	option.c	FUNCTION_45	WHILE_1	WHILE_3	CALL_1
0x85b9	          0x83e830	                           sub eax, 0x30	      7861	option.c	FUNCTION_45	WHILE_1	WHILE_3	CALL_1
0x85bc	          0x83f809	                              cmp eax, 9	      7861	option.c	FUNCTION_45	WHILE_1	WHILE_3	CALL_1
0x85bf	            0x76e9	                           jbe 0x40085ea	      7861	option.c	FUNCTION_45	WHILE_1	WHILE_3	CALL_1
0x85c1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7863	option.c	FUNCTION_45	WHILE_1	IF_7
0x85c5	           0xfb600	                   movzx eax, byte [rax]	      7863	option.c	FUNCTION_45	WHILE_1	IF_7
0x85c8	            0x3c2a	                            cmp al, 0x2a	      7863	option.c	FUNCTION_45	WHILE_1	IF_7
0x85ca	            0x7505	                           jne 0x4008611	      7863	option.c	FUNCTION_45	WHILE_1	IF_7
0x85cc	      0xe9b7000000	                           jmp 0x40086c8	      7864	option.c	FUNCTION_45	WHILE_1	IF_7
0x85d1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7865	option.c	FUNCTION_45	WHILE_1	IF_8
0x85d5	           0xfb600	                   movzx eax, byte [rax]	      7865	option.c	FUNCTION_45	WHILE_1	IF_8
0x85d8	            0x3c2e	                            cmp al, 0x2e	      7865	option.c	FUNCTION_45	WHILE_1	IF_8
0x85da	            0x7529	                           jne 0x4008645	      7865	option.c	FUNCTION_45	WHILE_1	IF_8
0x85dc	      0x488345e801	               add qword [rbp - 0x18], 1	      7867	option.c	FUNCTION_45	WHILE_1	IF_8
0x85e1	            0xeb05	                           jmp 0x4008628	      7868	option.c	FUNCTION_45	WHILE_1	IF_8	WHILE_4	CALL_2
0x85e3	      0x488345e801	               add qword [rbp - 0x18], 1	      7869	option.c	FUNCTION_45	WHILE_1	IF_8	WHILE_4
0x85e8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7868	option.c	FUNCTION_45	WHILE_1	IF_8	WHILE_4	CALL_2
0x85ec	           0xfb600	                   movzx eax, byte [rax]	      7868	option.c	FUNCTION_45	WHILE_1	IF_8	WHILE_4	CALL_2
0x85ef	            0x84c0	                             test al, al	      7868	option.c	FUNCTION_45	WHILE_1	IF_8	WHILE_4	CALL_2
0x85f1	            0x7412	                            je 0x4008645	      7868	option.c	FUNCTION_45	WHILE_1	IF_8	WHILE_4	CALL_2
0x85f3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7868	option.c	FUNCTION_45	WHILE_1	IF_8	WHILE_4	CALL_2
0x85f7	           0xfb600	                   movzx eax, byte [rax]	      7868	option.c	FUNCTION_45	WHILE_1	IF_8	WHILE_4	CALL_2
0x85fa	           0xfb6c0	                           movzx eax, al	      7868	option.c	FUNCTION_45	WHILE_1	IF_8	WHILE_4	CALL_2
0x85fd	          0x83e830	                           sub eax, 0x30	      7868	option.c	FUNCTION_45	WHILE_1	IF_8	WHILE_4	CALL_2
0x8600	          0x83f809	                              cmp eax, 9	      7868	option.c	FUNCTION_45	WHILE_1	IF_8	WHILE_4	CALL_2
0x8603	            0x76de	                           jbe 0x4008623	      7868	option.c	FUNCTION_45	WHILE_1	IF_8	WHILE_4	CALL_2
0x8605	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7871	option.c	FUNCTION_45	WHILE_1	IF_9
0x8609	           0xfb600	                   movzx eax, byte [rax]	      7871	option.c	FUNCTION_45	WHILE_1	IF_9
0x860c	            0x3c28	                            cmp al, 0x28	      7871	option.c	FUNCTION_45	WHILE_1	IF_9
0x860e	            0x7506	                           jne 0x4008656	      7871	option.c	FUNCTION_45	WHILE_1	IF_9
0x8610	        0x8345fc01	                  add dword [rbp - 4], 1	      7873	option.c	FUNCTION_45	WHILE_1	IF_9
0x8614	            0xeb72	                           jmp 0x40086c8	      7874	option.c	FUNCTION_45	WHILE_1	IF_9
0x8616	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7876	option.c	FUNCTION_45	WHILE_1	IF_10	CALL_3
0x861a	           0xfb600	                   movzx eax, byte [rax]	      7876	option.c	FUNCTION_45	WHILE_1	IF_10	CALL_3
0x861d	           0xfb6c0	                           movzx eax, al	      7876	option.c	FUNCTION_45	WHILE_1	IF_10	CALL_3
0x8620	            0x89c6	                            mov esi, eax	      7876	option.c	FUNCTION_45	WHILE_1	IF_10	CALL_3
0x8622	      0xbf00000000	                              mov edi, 0	      7876	option.c	FUNCTION_45	WHILE_1	IF_10	CALL_3
0x8627	      0xe800000000	                          call 0x400866c	      7876	option.c	FUNCTION_45	WHILE_1	IF_10	CALL_3
0x862c	          0x4885c0	                           test rax, rax	      7876	option.c	FUNCTION_45	WHILE_1	IF_10	CALL_3
0x862f	            0x7518	                           jne 0x4008689	      7876	option.c	FUNCTION_45	WHILE_1	IF_10	CALL_3
0x8631	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7878	option.c	FUNCTION_45	WHILE_1	IF_10	CALL_4
0x8635	           0xfb600	                   movzx eax, byte [rax]	      7878	option.c	FUNCTION_45	WHILE_1	IF_10	CALL_4
0x8638	           0xfb6c0	                           movzx eax, al	      7878	option.c	FUNCTION_45	WHILE_1	IF_10	CALL_4
0x863b	            0x89c6	                            mov esi, eax	      7878	option.c	FUNCTION_45	WHILE_1	IF_10	CALL_4
0x863d	      0xbf00000000	                              mov edi, 0	      7878	option.c	FUNCTION_45	WHILE_1	IF_10	CALL_4
0x8642	      0xe81fb3ffff	                   call sym.illegal_char	      7878	option.c	FUNCTION_45	WHILE_1	IF_10	CALL_4
0x8647	            0xeb79	                           jmp 0x4008702	      7878	option.c	FUNCTION_45	WHILE_1	IF_10	CALL_4
0x8649	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7880	option.c	FUNCTION_45	WHILE_1	IF_11
0x864d	           0xfb600	                   movzx eax, byte [rax]	      7880	option.c	FUNCTION_45	WHILE_1	IF_11
0x8650	            0x3c7b	                            cmp al, 0x7b	      7880	option.c	FUNCTION_45	WHILE_1	IF_11
0x8652	            0x7534	                           jne 0x40086c8	      7880	option.c	FUNCTION_45	WHILE_1	IF_11
0x8654	      0x488345e801	               add qword [rbp - 0x18], 1	      7882	option.c	FUNCTION_45	WHILE_1	IF_11
0x8659	            0xeb05	                           jmp 0x40086a0	      7883	option.c	FUNCTION_45	WHILE_1	IF_11	WHILE_5
0x865b	      0x488345e801	               add qword [rbp - 0x18], 1	      7884	option.c	FUNCTION_45	WHILE_1	IF_11	WHILE_5
0x8660	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7883	option.c	FUNCTION_45	WHILE_1	IF_11	WHILE_5
0x8664	           0xfb600	                   movzx eax, byte [rax]	      7883	option.c	FUNCTION_45	WHILE_1	IF_11	WHILE_5
0x8667	            0x3c7d	                            cmp al, 0x7d	      7883	option.c	FUNCTION_45	WHILE_1	IF_11	WHILE_5
0x8669	            0x740b	                            je 0x40086b6	      7883	option.c	FUNCTION_45	WHILE_1	IF_11	WHILE_5
0x866b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7883	option.c	FUNCTION_45	WHILE_1	IF_11	WHILE_5
0x866f	           0xfb600	                   movzx eax, byte [rax]	      7883	option.c	FUNCTION_45	WHILE_1	IF_11	WHILE_5
0x8672	            0x84c0	                             test al, al	      7883	option.c	FUNCTION_45	WHILE_1	IF_11	WHILE_5
0x8674	            0x75e5	                           jne 0x400869b	      7883	option.c	FUNCTION_45	WHILE_1	IF_11	WHILE_5
0x8676	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7885	option.c	FUNCTION_45	WHILE_1	IF_11	IF_12
0x867a	           0xfb600	                   movzx eax, byte [rax]	      7885	option.c	FUNCTION_45	WHILE_1	IF_11	IF_12
0x867d	            0x3c7d	                            cmp al, 0x7d	      7885	option.c	FUNCTION_45	WHILE_1	IF_11	IF_12
0x867f	            0x7407	                            je 0x40086c8	      7885	option.c	FUNCTION_45	WHILE_1	IF_11	IF_12
0x8681	      0xb800000000	                              mov eax, 0	      7886	option.c	FUNCTION_45	WHILE_1	IF_11	CALL_5
0x8686	            0xeb3a	                           jmp 0x4008702	      7886	option.c	FUNCTION_45	WHILE_1	IF_11	CALL_5
0x8688	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7837	option.c	FUNCTION_45	WHILE_1
0x868c	           0xfb600	                   movzx eax, byte [rax]	      7837	option.c	FUNCTION_45	WHILE_1
0x868f	            0x84c0	                             test al, al	      7837	option.c	FUNCTION_45	WHILE_1
0x8691	            0x7410	                            je 0x40086e3	      7837	option.c	FUNCTION_45	WHILE_1
0x8693	        0x837df84f	               cmp dword [rbp - 8], 0x4f	      7837	option.c	FUNCTION_45	WHILE_1
0x8697	     0xf8e69feffff	                           jle 0x4008546	      7837	option.c	FUNCTION_45	WHILE_1
0x869d	            0xeb04	                           jmp 0x40086e3	      7837	option.c	FUNCTION_45	WHILE_1
0x869f	              0x90	                                     nop	      7843	option.c	FUNCTION_45	WHILE_1	IF_1
0x86a0	            0xeb01	                           jmp 0x40086e3	      7843	option.c	FUNCTION_45	WHILE_1	IF_1
0x86a2	              0x90	                                     nop	      7856	option.c	FUNCTION_45	WHILE_1	IF_4	IF_5
0x86a3	        0x837df84f	               cmp dword [rbp - 8], 0x4f	      7889	option.c	FUNCTION_45	IF_13
0x86a7	            0x7e07	                           jle 0x40086f0	      7889	option.c	FUNCTION_45	IF_13
0x86a9	      0xb800000000	                              mov eax, 0	      7890	option.c	FUNCTION_45	CALL_6
0x86ae	            0xeb12	                           jmp 0x4008702	      7890	option.c	FUNCTION_45	CALL_6
0x86b0	        0x837dfc00	                  cmp dword [rbp - 4], 0	      7891	option.c	FUNCTION_45	IF_14
0x86b4	            0x7407	                            je 0x40086fd	      7891	option.c	FUNCTION_45	IF_14
0x86b6	      0xb800000000	                              mov eax, 0	      7892	option.c	FUNCTION_45	CALL_7
0x86bb	            0xeb05	                           jmp 0x4008702	      7892	option.c	FUNCTION_45	CALL_7
0x86bd	      0xb800000000	                              mov eax, 0	      7893	option.c	FUNCTION_45
0x86c2	              0xc9	                                   leave	      7894	option.c	FUNCTION_45
0x86c3	              0xc3	                                     ret	      7894	option.c	FUNCTION_45
get_equalprg	WHILE,0:SWITCH,0:CALL,0:FOR,0:ELSE,0:DO,0:IF,1:functions,0	13
0xdecc	              0x55	                                push rbp	     10796	option.c	FUNCTION_79
0xdecd	          0x4889e5	                            mov rbp, rsp	     10796	option.c	FUNCTION_79
0xded0	    0x488b05000000	            mov rax, qword [0x0400df17] 	     10797	option.c	FUNCTION_79	IF_1
0xded7	    0x488b80f01500	          mov rax, qword [rax + 0x15f0] 	     10797	option.c	FUNCTION_79	IF_1
0xdede	           0xfb600	                   movzx eax, byte [rax]	     10797	option.c	FUNCTION_79	IF_1
0xdee1	            0x84c0	                             test al, al	     10797	option.c	FUNCTION_79	IF_1
0xdee3	            0x7509	                           jne 0x400df2e	     10797	option.c	FUNCTION_79	IF_1
0xdee5	    0x488b05000000	            mov rax, qword [0x0400df2c] 	     10798	option.c	FUNCTION_79	IF_1
0xdeec	            0xeb0e	                           jmp 0x400df3c	     10798	option.c	FUNCTION_79	IF_1
0xdeee	    0x488b05000000	            mov rax, qword [0x0400df35] 	     10799	option.c	FUNCTION_79
0xdef5	    0x488b80f01500	          mov rax, qword [rax + 0x15f0] 	     10799	option.c	FUNCTION_79
0xdefc	              0x5d	                                 pop rbp	     10800	option.c	FUNCTION_79
0xdefd	              0xc3	                                     ret	     10800	option.c	FUNCTION_79
set_imsearch_global	WHILE,0:SWITCH,0:CALL,0:FOR,0:ELSE,0:DO,0:IF,0:functions,0	8
0xef7b	              0x55	                                push rbp	     11288	option.c	FUNCTION_88
0xef7c	          0x4889e5	                            mov rbp, rsp	     11288	option.c	FUNCTION_88
0xef7f	    0x488b05000000	            mov rax, qword [0x0400efc6] 	     11289	option.c	FUNCTION_88
0xef86	    0x488b80701200	          mov rax, qword [rax + 0x1270] 	     11289	option.c	FUNCTION_88
0xef8d	    0x488905000000	            mov qword [0x0400efd4], rax 	     11289	option.c	FUNCTION_88
0xef94	              0x90	                                     nop	     11290	option.c	FUNCTION_88
0xef95	              0x5d	                                 pop rbp	     11290	option.c	FUNCTION_88
0xef96	              0xc3	                                     ret	     11290	option.c	FUNCTION_88
langmap_set	WHILE,1:SWITCH,0:CALL,12:FOR,2:ELSE,3:DO,0:IF,15:functions,0	203
0x10101	              0x55	                                push rbp	     11897	option.c	FUNCTION_97
0x10102	          0x4889e5	                            mov rbp, rsp	     11897	option.c	FUNCTION_97
0x10105	              0x53	                                push rbx	     11897	option.c	FUNCTION_97
0x10106	        0x4883ec28	                           sub rsp, 0x28	     11897	option.c	FUNCTION_97
0x1010a	      0xbf00000000	                              mov edi, 0	     11903	option.c	FUNCTION_97	CALL_1
0x1010f	      0xe800000000	                          call 0x4010154	     11903	option.c	FUNCTION_97	CALL_1
0x10114	      0xe8a3ffffff	                   call sym.langmap_init	     11905	option.c	FUNCTION_97	CALL_2
0x10119	    0x488b05000000	            mov rax, qword [0x04010160] 	     11907	option.c	FUNCTION_97	FOR_1
0x10120	        0x488945e0	             mov qword [rbp - 0x20], rax	     11907	option.c	FUNCTION_97	FOR_1
0x10124	      0xe977020000	                           jmp 0x40103e0	     11907	option.c	FUNCTION_97	FOR_1
0x10129	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11909	option.c	FUNCTION_97	FOR_1	FOR_2
0x1012d	        0x488945e8	             mov qword [rbp - 0x18], rax	     11909	option.c	FUNCTION_97	FOR_1	FOR_2
0x10131	            0xeb46	                           jmp 0x40101b9	     11909	option.c	FUNCTION_97	FOR_1	FOR_2
0x10133	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11912	option.c	FUNCTION_97	FOR_1	FOR_2	IF_1
0x10137	           0xfb600	                   movzx eax, byte [rax]	     11912	option.c	FUNCTION_97	FOR_1	FOR_2	IF_1
0x1013a	            0x3c5c	                            cmp al, 0x5c	     11912	option.c	FUNCTION_97	FOR_1	FOR_2	IF_1
0x1013c	            0x7514	                           jne 0x4010192	     11912	option.c	FUNCTION_97	FOR_1	FOR_2	IF_1
0x1013e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11912	option.c	FUNCTION_97	FOR_1	FOR_2	IF_1
0x10142	        0x4883c001	                              add rax, 1	     11912	option.c	FUNCTION_97	FOR_1	FOR_2	IF_1
0x10146	           0xfb600	                   movzx eax, byte [rax]	     11912	option.c	FUNCTION_97	FOR_1	FOR_2	IF_1
0x10149	            0x84c0	                             test al, al	     11912	option.c	FUNCTION_97	FOR_1	FOR_2	IF_1
0x1014b	            0x7405	                            je 0x4010192	     11912	option.c	FUNCTION_97	FOR_1	FOR_2	IF_1
0x1014d	      0x488345e801	               add qword [rbp - 0x18], 1	     11913	option.c	FUNCTION_97	FOR_1	FOR_2	IF_1
0x10152	    0x8b0500000000	            mov eax, dword [0x04010198] 	     11910	option.c	FUNCTION_97	FOR_1	FOR_2	CALL_3
0x10158	            0x85c0	                           test eax, eax	     11910	option.c	FUNCTION_97	FOR_1	FOR_2	CALL_3
0x1015a	            0x7412	                            je 0x40101ae	     11910	option.c	FUNCTION_97	FOR_1	FOR_2	CALL_3
0x1015c	    0x488b05000000	            mov rax, qword [0x040101a3] 	     11910	option.c	FUNCTION_97	FOR_1	FOR_2	CALL_3
0x10163	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     11910	option.c	FUNCTION_97	FOR_1	FOR_2	CALL_3
0x10167	          0x4889d7	                            mov rdi, rdx	     11910	option.c	FUNCTION_97	FOR_1	FOR_2	CALL_3
0x1016a	            0xffd0	                                call rax	     11910	option.c	FUNCTION_97	FOR_1	FOR_2	CALL_3
0x1016c	            0xeb05	                           jmp 0x40101b3	     11910	option.c	FUNCTION_97	FOR_1	FOR_2	CALL_3
0x1016e	      0xb801000000	                              mov eax, 1	     11910	option.c	FUNCTION_97	FOR_1	FOR_2	CALL_3
0x10173	            0x4898	                                    cdqe	     11910	option.c	FUNCTION_97	FOR_1	FOR_2	CALL_3
0x10175	        0x480145e8	            add qword [rbp - 0x18], rax 	     11910	option.c	FUNCTION_97	FOR_1	FOR_2	CALL_3
0x10179	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11909	option.c	FUNCTION_97	FOR_1	FOR_2
0x1017d	           0xfb600	                   movzx eax, byte [rax]	     11909	option.c	FUNCTION_97	FOR_1	FOR_2
0x10180	            0x84c0	                             test al, al	     11909	option.c	FUNCTION_97	FOR_1	FOR_2
0x10182	            0x7416	                            je 0x40101da	     11909	option.c	FUNCTION_97	FOR_1	FOR_2
0x10184	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11909	option.c	FUNCTION_97	FOR_1	FOR_2
0x10188	           0xfb600	                   movzx eax, byte [rax]	     11909	option.c	FUNCTION_97	FOR_1	FOR_2
0x1018b	            0x3c2c	                            cmp al, 0x2c	     11909	option.c	FUNCTION_97	FOR_1	FOR_2
0x1018d	            0x740b	                            je 0x40101da	     11909	option.c	FUNCTION_97	FOR_1	FOR_2
0x1018f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11909	option.c	FUNCTION_97	FOR_1	FOR_2
0x10193	           0xfb600	                   movzx eax, byte [rax]	     11909	option.c	FUNCTION_97	FOR_1	FOR_2
0x10196	            0x3c3b	                            cmp al, 0x3b	     11909	option.c	FUNCTION_97	FOR_1	FOR_2
0x10198	            0x7599	                           jne 0x4010173	     11909	option.c	FUNCTION_97	FOR_1	FOR_2
0x1019a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11915	option.c	FUNCTION_97	FOR_1	IF_2
0x1019e	           0xfb600	                   movzx eax, byte [rax]	     11915	option.c	FUNCTION_97	FOR_1	IF_2
0x101a1	            0x3c3b	                            cmp al, 0x3b	     11915	option.c	FUNCTION_97	FOR_1	IF_2
0x101a3	            0x750a	                           jne 0x40101ef	     11915	option.c	FUNCTION_97	FOR_1	IF_2
0x101a5	      0x488345e801	               add qword [rbp - 0x18], 1	     11916	option.c	FUNCTION_97	FOR_1	IF_2
0x101aa	      0xe9e2010000	                           jmp 0x40103d1	     11916	option.c	FUNCTION_97	FOR_1	IF_2
0x101af	    0x48c745e80000	               mov qword [rbp - 0x18], 0	     11918	option.c	FUNCTION_97	FOR_1	ELSE_1
0x101b7	      0xe9d5010000	                           jmp 0x40103d1	     11919	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1
0x101bc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11921	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_3
0x101c0	           0xfb600	                   movzx eax, byte [rax]	     11921	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_3
0x101c3	            0x3c2c	                            cmp al, 0x2c	     11921	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_3
0x101c5	            0x750a	                           jne 0x4010211	     11921	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_3
0x101c7	      0x488345e001	               add qword [rbp - 0x20], 1	     11923	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_3
0x101cc	      0xe9cf010000	                           jmp 0x40103e0	     11924	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_3
0x101d1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11926	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_4
0x101d5	           0xfb600	                   movzx eax, byte [rax]	     11926	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_4
0x101d8	            0x3c5c	                            cmp al, 0x5c	     11926	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_4
0x101da	            0x7514	                           jne 0x4010230	     11926	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_4
0x101dc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11926	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_4
0x101e0	        0x4883c001	                              add rax, 1	     11926	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_4
0x101e4	           0xfb600	                   movzx eax, byte [rax]	     11926	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_4
0x101e7	            0x84c0	                             test al, al	     11926	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_4
0x101e9	            0x7405	                            je 0x4010230	     11926	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_4
0x101eb	      0x488345e001	               add qword [rbp - 0x20], 1	     11927	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_4
0x101f0	    0x488b05000000	            mov rax, qword [0x04010237] 	     11929	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1
0x101f7	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     11929	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1
0x101fb	          0x4889d7	                            mov rdi, rdx	     11929	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1
0x101fe	            0xffd0	                                call rax	     11929	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1
0x10200	          0x8945dc	             mov dword [rbp - 0x24], eax	     11929	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1
0x10203	    0xc745d8000000	               mov dword [rbp - 0x28], 0	     11933	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1
0x1020a	      0x48837de800	               cmp qword [rbp - 0x18], 0	     11934	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_5
0x1020f	            0x7557	                           jne 0x40102a8	     11934	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_5
0x10211	    0x8b0500000000	            mov eax, dword [0x04010257] 	     11936	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_5	CALL_4
0x10217	            0x85c0	                           test eax, eax	     11936	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_5	CALL_4
0x10219	            0x7412	                            je 0x401026d	     11936	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_5	CALL_4
0x1021b	    0x488b05000000	            mov rax, qword [0x04010262] 	     11936	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_5	CALL_4
0x10222	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     11936	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_5	CALL_4
0x10226	          0x4889d7	                            mov rdi, rdx	     11936	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_5	CALL_4
0x10229	            0xffd0	                                call rax	     11936	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_5	CALL_4
0x1022b	            0xeb05	                           jmp 0x4010272	     11936	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_5	CALL_4
0x1022d	      0xb801000000	                              mov eax, 1	     11936	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_5	CALL_4
0x10232	            0x4898	                                    cdqe	     11936	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_5	CALL_4
0x10234	        0x480145e0	            add qword [rbp - 0x20], rax 	     11936	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_5	CALL_4
0x10238	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11937	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_5	IF_6
0x1023c	           0xfb600	                   movzx eax, byte [rax]	     11937	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_5	IF_6
0x1023f	            0x3c2c	                            cmp al, 0x2c	     11937	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_5	IF_6
0x10241	            0x7453	                            je 0x40102d6	     11937	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_5	IF_6
0x10243	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11939	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_5	IF_6	IF_7
0x10247	           0xfb600	                   movzx eax, byte [rax]	     11939	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_5	IF_6	IF_7
0x1024a	            0x3c5c	                            cmp al, 0x5c	     11939	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_5	IF_6	IF_7
0x1024c	            0x7505	                           jne 0x4010293	     11939	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_5	IF_6	IF_7
0x1024e	      0x488345e001	               add qword [rbp - 0x20], 1	     11940	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_5	IF_6	IF_7
0x10253	    0x488b05000000	            mov rax, qword [0x0401029a] 	     11942	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_5	IF_6
0x1025a	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     11942	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_5	IF_6
0x1025e	          0x4889d7	                            mov rdi, rdx	     11942	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_5	IF_6
0x10261	            0xffd0	                                call rax	     11942	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_5	IF_6
0x10263	          0x8945d8	             mov dword [rbp - 0x28], eax	     11942	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_5	IF_6
0x10266	            0xeb2e	                           jmp 0x40102d6	     11942	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_5	IF_6
0x10268	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11950	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	ELSE_2	IF_8
0x1026c	           0xfb600	                   movzx eax, byte [rax]	     11950	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	ELSE_2	IF_8
0x1026f	            0x3c2c	                            cmp al, 0x2c	     11950	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	ELSE_2	IF_8
0x10271	            0x7423	                            je 0x40102d6	     11950	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	ELSE_2	IF_8
0x10273	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11952	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	ELSE_2	IF_8	IF_9
0x10277	           0xfb600	                   movzx eax, byte [rax]	     11952	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	ELSE_2	IF_8	IF_9
0x1027a	            0x3c5c	                            cmp al, 0x5c	     11952	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	ELSE_2	IF_8	IF_9
0x1027c	            0x7505	                           jne 0x40102c3	     11952	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	ELSE_2	IF_8	IF_9
0x1027e	      0x488345e801	               add qword [rbp - 0x18], 1	     11953	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	ELSE_2	IF_8	IF_9
0x10283	    0x488b05000000	            mov rax, qword [0x040102ca] 	     11955	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	ELSE_2	IF_8
0x1028a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     11955	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	ELSE_2	IF_8
0x1028e	          0x4889d7	                            mov rdi, rdx	     11955	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	ELSE_2	IF_8
0x10291	            0xffd0	                                call rax	     11955	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	ELSE_2	IF_8
0x10293	          0x8945d8	             mov dword [rbp - 0x28], eax	     11955	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	ELSE_2	IF_8
0x10296	        0x837dd800	               cmp dword [rbp - 0x28], 0	     11961	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_10
0x1029a	            0x7527	                           jne 0x4010303	     11961	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_10
0x1029c	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     11963	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_10	CALL_6
0x1029f	            0x89c7	                            mov edi, eax	     11963	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_10	CALL_6
0x102a1	      0xe800000000	                          call 0x40102e6	     11963	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_10	CALL_6
0x102a6	          0x4889c3	                            mov rbx, rax	     11963	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_10	CALL_6
0x102a9	      0xbf00000000	                              mov edi, 0	     11963	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_10	CALL_6
0x102ae	      0xe800000000	                          call 0x40102f3	     11963	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_10	CALL_6
0x102b3	          0x4889de	                            mov rsi, rbx	     11963	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_10	CALL_6
0x102b6	          0x4889c7	                            mov rdi, rax	     11963	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_10	CALL_6
0x102b9	      0xe800000000	                          call 0x40102fe	     11963	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_10	CALL_6
0x102be	      0xe9ec000000	                           jmp 0x40103ef	     11965	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_10
0x102c3	    0x817ddcff0000	           cmp dword [rbp - 0x24], 0xff 	     11969	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_11
0x102ca	            0x7e11	                           jle 0x401031d	     11969	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_11
0x102cc	          0x8b55d8	             mov edx, dword [rbp - 0x28]	     11970	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	CALL_8
0x102cf	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     11970	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	CALL_8
0x102d2	            0x89d6	                            mov esi, edx	     11970	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	CALL_8
0x102d4	            0x89c7	                            mov edi, eax	     11970	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	CALL_8
0x102d6	      0xe82efcffff	              call sym.langmap_set_entry	     11970	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	CALL_8
0x102db	            0xeb11	                           jmp 0x401032e	     11970	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	CALL_8
0x102dd	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     11973	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	ELSE_3
0x102e0	           0xfb6c0	                           movzx eax, al	     11973	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	ELSE_3
0x102e3	          0x8b55d8	             mov edx, dword [rbp - 0x28]	     11973	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	ELSE_3
0x102e6	            0x4898	                                    cdqe	     11973	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	ELSE_3
0x102e8	    0x889000000000	                      mov byte [rax], dl	     11973	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	ELSE_3
0x102ee	    0x8b0500000000	            mov eax, dword [0x04010334] 	     11976	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	CALL_9
0x102f4	            0x85c0	                           test eax, eax	     11976	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	CALL_9
0x102f6	            0x7412	                            je 0x401034a	     11976	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	CALL_9
0x102f8	    0x488b05000000	            mov rax, qword [0x0401033f] 	     11976	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	CALL_9
0x102ff	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     11976	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	CALL_9
0x10303	          0x4889d7	                            mov rdi, rdx	     11976	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	CALL_9
0x10306	            0xffd0	                                call rax	     11976	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	CALL_9
0x10308	            0xeb05	                           jmp 0x401034f	     11976	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	CALL_9
0x1030a	      0xb801000000	                              mov eax, 1	     11976	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	CALL_9
0x1030f	            0x4898	                                    cdqe	     11976	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	CALL_9
0x10311	        0x480145e0	            add qword [rbp - 0x20], rax 	     11976	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	CALL_9
0x10315	      0x48837de800	               cmp qword [rbp - 0x18], 0	     11977	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_12
0x1031a	            0x7475	                            je 0x40103d1	     11977	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_12
0x1031c	    0x8b0500000000	            mov eax, dword [0x04010362] 	     11979	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_12	CALL_10
0x10322	            0x85c0	                           test eax, eax	     11979	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_12	CALL_10
0x10324	            0x7412	                            je 0x4010378	     11979	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_12	CALL_10
0x10326	    0x488b05000000	            mov rax, qword [0x0401036d] 	     11979	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_12	CALL_10
0x1032d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     11979	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_12	CALL_10
0x10331	          0x4889d7	                            mov rdi, rdx	     11979	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_12	CALL_10
0x10334	            0xffd0	                                call rax	     11979	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_12	CALL_10
0x10336	            0xeb05	                           jmp 0x401037d	     11979	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_12	CALL_10
0x10338	      0xb801000000	                              mov eax, 1	     11979	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_12	CALL_10
0x1033d	            0x4898	                                    cdqe	     11979	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_12	CALL_10
0x1033f	        0x480145e8	            add qword [rbp - 0x18], rax 	     11979	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_12	CALL_10
0x10343	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11980	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_12	IF_13
0x10347	           0xfb600	                   movzx eax, byte [rax]	     11980	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_12	IF_13
0x1034a	            0x3c3b	                            cmp al, 0x3b	     11980	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_12	IF_13
0x1034c	            0x7543	                           jne 0x40103d1	     11980	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_12	IF_13
0x1034e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     11982	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_12	IF_13
0x10352	        0x488945e0	             mov qword [rbp - 0x20], rax	     11982	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_12	IF_13
0x10356	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11983	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_12	IF_13	IF_14
0x1035a	           0xfb600	                   movzx eax, byte [rax]	     11983	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_12	IF_13	IF_14
0x1035d	            0x84c0	                             test al, al	     11983	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_12	IF_13	IF_14
0x1035f	            0x743f	                            je 0x40103e0	     11983	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_12	IF_13	IF_14
0x10361	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11985	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_12	IF_13	IF_14	IF_15
0x10365	           0xfb600	                   movzx eax, byte [rax]	     11985	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_12	IF_13	IF_14	IF_15
0x10368	            0x3c2c	                            cmp al, 0x2c	     11985	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_12	IF_13	IF_14	IF_15
0x1036a	            0x741e	                            je 0x40103ca	     11985	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_12	IF_13	IF_14	IF_15
0x1036c	      0xbf00000000	                              mov edi, 0	     11987	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_12	IF_13	IF_14	IF_15	CALL_12
0x10371	      0xe800000000	                          call 0x40103b6	     11987	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_12	IF_13	IF_14	IF_15	CALL_12
0x10376	          0x4889c2	                            mov rdx, rax	     11987	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_12	IF_13	IF_14	IF_15	CALL_12
0x10379	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11987	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_12	IF_13	IF_14	IF_15	CALL_12
0x1037d	          0x4889c6	                            mov rsi, rax	     11987	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_12	IF_13	IF_14	IF_15	CALL_12
0x10380	          0x4889d7	                            mov rdi, rdx	     11987	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_12	IF_13	IF_14	IF_15	CALL_12
0x10383	      0xe800000000	                          call 0x40103c8	     11987	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_12	IF_13	IF_14	IF_15	CALL_12
0x10388	            0xeb25	                           jmp 0x40103ef	     11988	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_12	IF_13	IF_14	IF_15
0x1038a	      0x488345e001	               add qword [rbp - 0x20], 1	     11990	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_12	IF_13	IF_14
0x1038f	            0xeb0f	                           jmp 0x40103e0	     11992	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1	IF_12	IF_13
0x10391	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11919	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1
0x10395	           0xfb600	                   movzx eax, byte [rax]	     11919	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1
0x10398	            0x84c0	                             test al, al	     11919	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1
0x1039a	     0xf851cfeffff	                           jne 0x40101fc	     11919	option.c	FUNCTION_97	FOR_1	ELSE_1	WHILE_1
0x103a0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     11907	option.c	FUNCTION_97	FOR_1
0x103a4	           0xfb600	                   movzx eax, byte [rax]	     11907	option.c	FUNCTION_97	FOR_1
0x103a7	            0x84c0	                             test al, al	     11907	option.c	FUNCTION_97	FOR_1
0x103a9	     0xf857afdffff	                           jne 0x4010169	     11907	option.c	FUNCTION_97	FOR_1
0x103af	        0x4883c428	                           add rsp, 0x28	     11997	option.c	FUNCTION_97
0x103b3	              0x5b	                                 pop rbx	     11997	option.c	FUNCTION_97
0x103b4	              0x5d	                                 pop rbp	     11997	option.c	FUNCTION_97
0x103b5	              0xc3	                                     ret	     11997	option.c	FUNCTION_97
check_opt_wim	WHILE,1:SWITCH,0:CALL,4:FOR,4:ELSE,3:DO,0:IF,7:functions,0	170
0x10c3a	              0x55	                                push rbp	     12352	option.c	FUNCTION_109
0x10c3b	          0x4889e5	                            mov rbp, rsp	     12352	option.c	FUNCTION_109
0x10c3e	        0x4883ec20	                           sub rsp, 0x20	     12352	option.c	FUNCTION_109
0x10c42	    0x64488b042528	                mov rax, qword fs:[0x28]	     12352	option.c	FUNCTION_109
0x10c4b	        0x488945f8	                mov qword [rbp - 8], rax	     12352	option.c	FUNCTION_109
0x10c4f	            0x31c0	                            xor eax, eax	     12352	option.c	FUNCTION_109
0x10c51	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	     12356	option.c	FUNCTION_109
0x10c58	    0xc745e0000000	               mov dword [rbp - 0x20], 0	     12358	option.c	FUNCTION_109	FOR_1
0x10c5f	            0xeb0e	                           jmp 0x4010caf	     12358	option.c	FUNCTION_109	FOR_1
0x10c61	          0x8b45e0	             mov eax, dword [rbp - 0x20]	     12359	option.c	FUNCTION_109	FOR_1
0x10c64	            0x4898	                                    cdqe	     12359	option.c	FUNCTION_109	FOR_1
0x10c66	      0xc64405f000	          mov byte [rbp + rax - 0x10], 0	     12359	option.c	FUNCTION_109	FOR_1
0x10c6b	        0x8345e001	               add dword [rbp - 0x20], 1	     12358	option.c	FUNCTION_109	FOR_1
0x10c6f	        0x837de003	               cmp dword [rbp - 0x20], 3	     12358	option.c	FUNCTION_109	FOR_1
0x10c73	            0x7eec	                           jle 0x4010ca1	     12358	option.c	FUNCTION_109	FOR_1
0x10c75	    0x488b05000000	            mov rax, qword [0x04010cbc] 	     12361	option.c	FUNCTION_109	FOR_2
0x10c7c	        0x488945e8	             mov qword [rbp - 0x18], rax	     12361	option.c	FUNCTION_109	FOR_2
0x10c80	      0xe976010000	                           jmp 0x4010e3b	     12361	option.c	FUNCTION_109	FOR_2
0x10c85	    0xc745e0000000	               mov dword [rbp - 0x20], 0	     12363	option.c	FUNCTION_109	FOR_2	FOR_3	CALL_1
0x10c8c	            0xeb04	                           jmp 0x4010cd2	     12363	option.c	FUNCTION_109	FOR_2	FOR_3	CALL_1
0x10c8e	        0x8345e001	               add dword [rbp - 0x20], 1	     12363	option.c	FUNCTION_109	FOR_2	FOR_3	CALL_1
0x10c92	          0x8b45e0	             mov eax, dword [rbp - 0x20]	     12363	option.c	FUNCTION_109	FOR_2	FOR_3	CALL_1
0x10c95	          0x4863d0	                         movsxd rdx, eax	     12363	option.c	FUNCTION_109	FOR_2	FOR_3	CALL_1
0x10c98	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12363	option.c	FUNCTION_109	FOR_2	FOR_3	CALL_1
0x10c9c	          0x4801d0	                            add rax, rdx	     12363	option.c	FUNCTION_109	FOR_2	FOR_3	CALL_1
0x10c9f	           0xfb600	                   movzx eax, byte [rax]	     12363	option.c	FUNCTION_109	FOR_2	FOR_3	CALL_1
0x10ca2	           0xfb6c0	                           movzx eax, al	     12363	option.c	FUNCTION_109	FOR_2	FOR_3	CALL_1
0x10ca5	          0x83e841	                           sub eax, 0x41	     12363	option.c	FUNCTION_109	FOR_2	FOR_3	CALL_1
0x10ca8	          0x83f819	                           cmp eax, 0x19	     12363	option.c	FUNCTION_109	FOR_2	FOR_3	CALL_1
0x10cab	            0x76e1	                           jbe 0x4010cce	     12363	option.c	FUNCTION_109	FOR_2	FOR_3	CALL_1
0x10cad	          0x8b45e0	             mov eax, dword [rbp - 0x20]	     12363	option.c	FUNCTION_109	FOR_2	FOR_3	CALL_1
0x10cb0	          0x4863d0	                         movsxd rdx, eax	     12363	option.c	FUNCTION_109	FOR_2	FOR_3	CALL_1
0x10cb3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12363	option.c	FUNCTION_109	FOR_2	FOR_3	CALL_1
0x10cb7	          0x4801d0	                            add rax, rdx	     12363	option.c	FUNCTION_109	FOR_2	FOR_3	CALL_1
0x10cba	           0xfb600	                   movzx eax, byte [rax]	     12363	option.c	FUNCTION_109	FOR_2	FOR_3	CALL_1
0x10cbd	           0xfb6c0	                           movzx eax, al	     12363	option.c	FUNCTION_109	FOR_2	FOR_3	CALL_1
0x10cc0	          0x83e861	                           sub eax, 0x61	     12363	option.c	FUNCTION_109	FOR_2	FOR_3	CALL_1
0x10cc3	          0x83f819	                           cmp eax, 0x19	     12363	option.c	FUNCTION_109	FOR_2	FOR_3	CALL_1
0x10cc6	            0x76c6	                           jbe 0x4010cce	     12363	option.c	FUNCTION_109	FOR_2	FOR_3	CALL_1
0x10cc8	          0x8b45e0	             mov eax, dword [rbp - 0x20]	     12365	option.c	FUNCTION_109	FOR_2	IF_1
0x10ccb	          0x4863d0	                         movsxd rdx, eax	     12365	option.c	FUNCTION_109	FOR_2	IF_1
0x10cce	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12365	option.c	FUNCTION_109	FOR_2	IF_1
0x10cd2	          0x4801d0	                            add rax, rdx	     12365	option.c	FUNCTION_109	FOR_2	IF_1
0x10cd5	           0xfb600	                   movzx eax, byte [rax]	     12365	option.c	FUNCTION_109	FOR_2	IF_1
0x10cd8	            0x84c0	                             test al, al	     12365	option.c	FUNCTION_109	FOR_2	IF_1
0x10cda	            0x7432	                            je 0x4010d4e	     12365	option.c	FUNCTION_109	FOR_2	IF_1
0x10cdc	          0x8b45e0	             mov eax, dword [rbp - 0x20]	     12365	option.c	FUNCTION_109	FOR_2	IF_1
0x10cdf	          0x4863d0	                         movsxd rdx, eax	     12365	option.c	FUNCTION_109	FOR_2	IF_1
0x10ce2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12365	option.c	FUNCTION_109	FOR_2	IF_1
0x10ce6	          0x4801d0	                            add rax, rdx	     12365	option.c	FUNCTION_109	FOR_2	IF_1
0x10ce9	           0xfb600	                   movzx eax, byte [rax]	     12365	option.c	FUNCTION_109	FOR_2	IF_1
0x10cec	            0x3c2c	                            cmp al, 0x2c	     12365	option.c	FUNCTION_109	FOR_2	IF_1
0x10cee	            0x741e	                            je 0x4010d4e	     12365	option.c	FUNCTION_109	FOR_2	IF_1
0x10cf0	          0x8b45e0	             mov eax, dword [rbp - 0x20]	     12365	option.c	FUNCTION_109	FOR_2	IF_1
0x10cf3	          0x4863d0	                         movsxd rdx, eax	     12365	option.c	FUNCTION_109	FOR_2	IF_1
0x10cf6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12365	option.c	FUNCTION_109	FOR_2	IF_1
0x10cfa	          0x4801d0	                            add rax, rdx	     12365	option.c	FUNCTION_109	FOR_2	IF_1
0x10cfd	           0xfb600	                   movzx eax, byte [rax]	     12365	option.c	FUNCTION_109	FOR_2	IF_1
0x10d00	            0x3c3a	                            cmp al, 0x3a	     12365	option.c	FUNCTION_109	FOR_2	IF_1
0x10d02	            0x740a	                            je 0x4010d4e	     12365	option.c	FUNCTION_109	FOR_2	IF_1
0x10d04	      0xb800000000	                              mov eax, 0	     12366	option.c	FUNCTION_109	FOR_2	IF_1
0x10d09	      0xe94f010000	                           jmp 0x4010e9d	     12366	option.c	FUNCTION_109	FOR_2	IF_1
0x10d0e	        0x837de007	               cmp dword [rbp - 0x20], 7	     12367	option.c	FUNCTION_109	FOR_2	IF_2	CALL_2
0x10d12	            0x7534	                           jne 0x4010d88	     12367	option.c	FUNCTION_109	FOR_2	IF_2	CALL_2
0x10d14	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12367	option.c	FUNCTION_109	FOR_2	IF_2	CALL_2
0x10d18	      0xba07000000	                              mov edx, 7	     12367	option.c	FUNCTION_109	FOR_2	IF_2	CALL_2
0x10d1d	      0xbe00000000	                              mov esi, 0	     12367	option.c	FUNCTION_109	FOR_2	IF_2	CALL_2
0x10d22	          0x4889c7	                            mov rdi, rax	     12367	option.c	FUNCTION_109	FOR_2	IF_2	CALL_2
0x10d25	      0xe800000000	                          call 0x4010d6a	     12367	option.c	FUNCTION_109	FOR_2	IF_2	CALL_2
0x10d2a	            0x85c0	                           test eax, eax	     12367	option.c	FUNCTION_109	FOR_2	IF_2	CALL_2
0x10d2c	            0x751a	                           jne 0x4010d88	     12367	option.c	FUNCTION_109	FOR_2	IF_2	CALL_2
0x10d2e	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	     12368	option.c	FUNCTION_109	FOR_2	IF_2
0x10d31	            0x4898	                                    cdqe	     12368	option.c	FUNCTION_109	FOR_2	IF_2
0x10d33	       0xfb64405f0	      movzx eax, byte [rbp + rax - 0x10]	     12368	option.c	FUNCTION_109	FOR_2	IF_2
0x10d38	          0x83c802	                               or eax, 2	     12368	option.c	FUNCTION_109	FOR_2	IF_2
0x10d3b	            0x89c2	                            mov edx, eax	     12368	option.c	FUNCTION_109	FOR_2	IF_2
0x10d3d	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	     12368	option.c	FUNCTION_109	FOR_2	IF_2
0x10d40	            0x4898	                                    cdqe	     12368	option.c	FUNCTION_109	FOR_2	IF_2
0x10d42	        0x885405f0	         mov byte [rbp + rax - 0x10], dl	     12368	option.c	FUNCTION_109	FOR_2	IF_2
0x10d46	            0xeb7e	                           jmp 0x4010e06	     12368	option.c	FUNCTION_109	FOR_2	IF_2
0x10d48	        0x837de004	               cmp dword [rbp - 0x20], 4	     12369	option.c	FUNCTION_109	FOR_2	ELSE_1	IF_3	CALL_3
0x10d4c	            0x7534	                           jne 0x4010dc2	     12369	option.c	FUNCTION_109	FOR_2	ELSE_1	IF_3	CALL_3
0x10d4e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12369	option.c	FUNCTION_109	FOR_2	ELSE_1	IF_3	CALL_3
0x10d52	      0xba04000000	                              mov edx, 4	     12369	option.c	FUNCTION_109	FOR_2	ELSE_1	IF_3	CALL_3
0x10d57	      0xbe00000000	                              mov esi, 0	     12369	option.c	FUNCTION_109	FOR_2	ELSE_1	IF_3	CALL_3
0x10d5c	          0x4889c7	                            mov rdi, rax	     12369	option.c	FUNCTION_109	FOR_2	ELSE_1	IF_3	CALL_3
0x10d5f	      0xe800000000	                          call 0x4010da4	     12369	option.c	FUNCTION_109	FOR_2	ELSE_1	IF_3	CALL_3
0x10d64	            0x85c0	                           test eax, eax	     12369	option.c	FUNCTION_109	FOR_2	ELSE_1	IF_3	CALL_3
0x10d66	            0x751a	                           jne 0x4010dc2	     12369	option.c	FUNCTION_109	FOR_2	ELSE_1	IF_3	CALL_3
0x10d68	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	     12370	option.c	FUNCTION_109	FOR_2	ELSE_1	IF_3
0x10d6b	            0x4898	                                    cdqe	     12370	option.c	FUNCTION_109	FOR_2	ELSE_1	IF_3
0x10d6d	       0xfb64405f0	      movzx eax, byte [rbp + rax - 0x10]	     12370	option.c	FUNCTION_109	FOR_2	ELSE_1	IF_3
0x10d72	          0x83c801	                               or eax, 1	     12370	option.c	FUNCTION_109	FOR_2	ELSE_1	IF_3
0x10d75	            0x89c2	                            mov edx, eax	     12370	option.c	FUNCTION_109	FOR_2	ELSE_1	IF_3
0x10d77	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	     12370	option.c	FUNCTION_109	FOR_2	ELSE_1	IF_3
0x10d7a	            0x4898	                                    cdqe	     12370	option.c	FUNCTION_109	FOR_2	ELSE_1	IF_3
0x10d7c	        0x885405f0	         mov byte [rbp + rax - 0x10], dl	     12370	option.c	FUNCTION_109	FOR_2	ELSE_1	IF_3
0x10d80	            0xeb44	                           jmp 0x4010e06	     12370	option.c	FUNCTION_109	FOR_2	ELSE_1	IF_3
0x10d82	        0x837de004	               cmp dword [rbp - 0x20], 4	     12371	option.c	FUNCTION_109	FOR_2	ELSE_2	IF_4	CALL_4
0x10d86	            0x7534	                           jne 0x4010dfc	     12371	option.c	FUNCTION_109	FOR_2	ELSE_2	IF_4	CALL_4
0x10d88	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12371	option.c	FUNCTION_109	FOR_2	ELSE_2	IF_4	CALL_4
0x10d8c	      0xba04000000	                              mov edx, 4	     12371	option.c	FUNCTION_109	FOR_2	ELSE_2	IF_4	CALL_4
0x10d91	      0xbe00000000	                              mov esi, 0	     12371	option.c	FUNCTION_109	FOR_2	ELSE_2	IF_4	CALL_4
0x10d96	          0x4889c7	                            mov rdi, rax	     12371	option.c	FUNCTION_109	FOR_2	ELSE_2	IF_4	CALL_4
0x10d99	      0xe800000000	                          call 0x4010dde	     12371	option.c	FUNCTION_109	FOR_2	ELSE_2	IF_4	CALL_4
0x10d9e	            0x85c0	                           test eax, eax	     12371	option.c	FUNCTION_109	FOR_2	ELSE_2	IF_4	CALL_4
0x10da0	            0x751a	                           jne 0x4010dfc	     12371	option.c	FUNCTION_109	FOR_2	ELSE_2	IF_4	CALL_4
0x10da2	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	     12372	option.c	FUNCTION_109	FOR_2	ELSE_2	IF_4
0x10da5	            0x4898	                                    cdqe	     12372	option.c	FUNCTION_109	FOR_2	ELSE_2	IF_4
0x10da7	       0xfb64405f0	      movzx eax, byte [rbp + rax - 0x10]	     12372	option.c	FUNCTION_109	FOR_2	ELSE_2	IF_4
0x10dac	          0x83c804	                               or eax, 4	     12372	option.c	FUNCTION_109	FOR_2	ELSE_2	IF_4
0x10daf	            0x89c2	                            mov edx, eax	     12372	option.c	FUNCTION_109	FOR_2	ELSE_2	IF_4
0x10db1	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	     12372	option.c	FUNCTION_109	FOR_2	ELSE_2	IF_4
0x10db4	            0x4898	                                    cdqe	     12372	option.c	FUNCTION_109	FOR_2	ELSE_2	IF_4
0x10db6	        0x885405f0	         mov byte [rbp + rax - 0x10], dl	     12372	option.c	FUNCTION_109	FOR_2	ELSE_2	IF_4
0x10dba	            0xeb0a	                           jmp 0x4010e06	     12372	option.c	FUNCTION_109	FOR_2	ELSE_2	IF_4
0x10dbc	      0xb800000000	                              mov eax, 0	     12374	option.c	FUNCTION_109	FOR_2	ELSE_3
0x10dc1	      0xe997000000	                           jmp 0x4010e9d	     12374	option.c	FUNCTION_109	FOR_2	ELSE_3
0x10dc6	          0x8b45e0	             mov eax, dword [rbp - 0x20]	     12375	option.c	FUNCTION_109	FOR_2
0x10dc9	            0x4898	                                    cdqe	     12375	option.c	FUNCTION_109	FOR_2
0x10dcb	        0x480145e8	            add qword [rbp - 0x18], rax 	     12375	option.c	FUNCTION_109	FOR_2
0x10dcf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12376	option.c	FUNCTION_109	FOR_2	IF_5
0x10dd3	           0xfb600	                   movzx eax, byte [rax]	     12376	option.c	FUNCTION_109	FOR_2	IF_5
0x10dd6	            0x84c0	                             test al, al	     12376	option.c	FUNCTION_109	FOR_2	IF_5
0x10dd8	            0x7432	                            je 0x4010e4c	     12376	option.c	FUNCTION_109	FOR_2	IF_5
0x10dda	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12378	option.c	FUNCTION_109	FOR_2	IF_6
0x10dde	           0xfb600	                   movzx eax, byte [rax]	     12378	option.c	FUNCTION_109	FOR_2	IF_6
0x10de1	            0x3c2c	                            cmp al, 0x2c	     12378	option.c	FUNCTION_109	FOR_2	IF_6
0x10de3	            0x7511	                           jne 0x4010e36	     12378	option.c	FUNCTION_109	FOR_2	IF_6
0x10de5	        0x837de403	               cmp dword [rbp - 0x1c], 3	     12380	option.c	FUNCTION_109	FOR_2	IF_6	IF_7
0x10de9	            0x7507	                           jne 0x4010e32	     12380	option.c	FUNCTION_109	FOR_2	IF_6	IF_7
0x10deb	      0xb800000000	                              mov eax, 0	     12381	option.c	FUNCTION_109	FOR_2	IF_6	IF_7
0x10df0	            0xeb6b	                           jmp 0x4010e9d	     12381	option.c	FUNCTION_109	FOR_2	IF_6	IF_7
0x10df2	        0x8345e401	               add dword [rbp - 0x1c], 1	     12382	option.c	FUNCTION_109	FOR_2	IF_6
0x10df6	      0x488345e801	               add qword [rbp - 0x18], 1	     12361	option.c	FUNCTION_109	FOR_2
0x10dfb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12361	option.c	FUNCTION_109	FOR_2
0x10dff	           0xfb600	                   movzx eax, byte [rax]	     12361	option.c	FUNCTION_109	FOR_2
0x10e02	            0x84c0	                             test al, al	     12361	option.c	FUNCTION_109	FOR_2
0x10e04	     0xf857bfeffff	                           jne 0x4010cc5	     12361	option.c	FUNCTION_109	FOR_2
0x10e0a	            0xeb1e	                           jmp 0x4010e6a	     12361	option.c	FUNCTION_109	FOR_2
0x10e0c	              0x90	                                     nop	     12377	option.c	FUNCTION_109	FOR_2	IF_5
0x10e0d	            0xeb1b	                           jmp 0x4010e6a	     12387	option.c	FUNCTION_109	WHILE_1
0x10e0f	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	     12389	option.c	FUNCTION_109	WHILE_1
0x10e12	          0x8d4801	                      lea ecx, [rax + 1]	     12389	option.c	FUNCTION_109	WHILE_1
0x10e15	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	     12389	option.c	FUNCTION_109	WHILE_1
0x10e18	            0x4898	                                    cdqe	     12389	option.c	FUNCTION_109	WHILE_1
0x10e1a	       0xfb65405f0	      movzx edx, byte [rbp + rax - 0x10]	     12389	option.c	FUNCTION_109	WHILE_1
0x10e1f	          0x4863c1	                         movsxd rax, ecx	     12389	option.c	FUNCTION_109	WHILE_1
0x10e22	        0x885405f0	         mov byte [rbp + rax - 0x10], dl	     12389	option.c	FUNCTION_109	WHILE_1
0x10e26	        0x8345e401	               add dword [rbp - 0x1c], 1	     12390	option.c	FUNCTION_109	WHILE_1
0x10e2a	        0x837de402	               cmp dword [rbp - 0x1c], 2	     12387	option.c	FUNCTION_109	WHILE_1
0x10e2e	            0x7edf	                           jle 0x4010e4f	     12387	option.c	FUNCTION_109	WHILE_1
0x10e30	    0xc745e0000000	               mov dword [rbp - 0x20], 0	     12394	option.c	FUNCTION_109	FOR_4
0x10e37	            0xeb19	                           jmp 0x4010e92	     12394	option.c	FUNCTION_109	FOR_4
0x10e39	          0x8b45e0	             mov eax, dword [rbp - 0x20]	     12395	option.c	FUNCTION_109	FOR_4
0x10e3c	            0x4898	                                    cdqe	     12395	option.c	FUNCTION_109	FOR_4
0x10e3e	       0xfb65405f0	      movzx edx, byte [rbp + rax - 0x10]	     12395	option.c	FUNCTION_109	FOR_4
0x10e43	          0x8b45e0	             mov eax, dword [rbp - 0x20]	     12395	option.c	FUNCTION_109	FOR_4
0x10e46	            0x4898	                                    cdqe	     12395	option.c	FUNCTION_109	FOR_4
0x10e48	    0x889000000000	                      mov byte [rax], dl	     12395	option.c	FUNCTION_109	FOR_4
0x10e4e	        0x8345e001	               add dword [rbp - 0x20], 1	     12394	option.c	FUNCTION_109	FOR_4
0x10e52	        0x837de003	               cmp dword [rbp - 0x20], 3	     12394	option.c	FUNCTION_109	FOR_4
0x10e56	            0x7ee1	                           jle 0x4010e79	     12394	option.c	FUNCTION_109	FOR_4
0x10e58	      0xb801000000	                              mov eax, 1	     12396	option.c	FUNCTION_109
0x10e5d	        0x488b4df8	                mov rcx, qword [rbp - 8]	     12397	option.c	FUNCTION_109
0x10e61	    0x6448330c2528	                xor rcx, qword fs:[0x28]	     12397	option.c	FUNCTION_109
0x10e6a	            0x7405	                            je 0x4010eb1	     12397	option.c	FUNCTION_109
0x10e6c	      0xe800000000	                          call 0x4010eb1	     12397	option.c	FUNCTION_109
0x10e71	              0xc9	                                   leave	     12397	option.c	FUNCTION_109
0x10e72	              0xc3	                                     ret	     12397	option.c	FUNCTION_109
check_winopt	WHILE,0:SWITCH,0:CALL,14:FOR,0:ELSE,0:DO,0:IF,0:functions,0	63
0xe373	              0x55	                                push rbp	     10924	option.c	FUNCTION_83
0xe374	          0x4889e5	                            mov rbp, rsp	     10924	option.c	FUNCTION_83
0xe377	        0x4883ec08	                              sub rsp, 8	     10924	option.c	FUNCTION_83
0xe37b	        0x48897df8	                mov qword [rbp - 8], rdi	     10924	option.c	FUNCTION_83
0xe37f	        0x488b45f8	                mov rax, qword [rbp - 8]	     10926	option.c	FUNCTION_83	CALL_1
0xe383	        0x4883c030	                           add rax, 0x30	     10926	option.c	FUNCTION_83	CALL_1
0xe387	          0x4889c7	                            mov rdi, rax	     10926	option.c	FUNCTION_83	CALL_1
0xe38a	      0xe8b661ffff	            call sym.check_string_option	     10926	option.c	FUNCTION_83	CALL_1
0xe38f	        0x488b45f8	                mov rax, qword [rbp - 8]	     10927	option.c	FUNCTION_83	CALL_2
0xe393	        0x4883c048	                           add rax, 0x48	     10927	option.c	FUNCTION_83	CALL_2
0xe397	          0x4889c7	                            mov rdi, rax	     10927	option.c	FUNCTION_83	CALL_2
0xe39a	      0xe8a661ffff	            call sym.check_string_option	     10927	option.c	FUNCTION_83	CALL_2
0xe39f	        0x488b45f8	                mov rax, qword [rbp - 8]	     10928	option.c	FUNCTION_83	CALL_3
0xe3a3	        0x4883c050	                           add rax, 0x50	     10928	option.c	FUNCTION_83	CALL_3
0xe3a7	          0x4889c7	                            mov rdi, rax	     10928	option.c	FUNCTION_83	CALL_3
0xe3aa	      0xe89661ffff	            call sym.check_string_option	     10928	option.c	FUNCTION_83	CALL_3
0xe3af	        0x488b45f8	                mov rax, qword [rbp - 8]	     10930	option.c	FUNCTION_83	CALL_4
0xe3b3	        0x4883c068	                           add rax, 0x68	     10930	option.c	FUNCTION_83	CALL_4
0xe3b7	          0x4889c7	                            mov rdi, rax	     10930	option.c	FUNCTION_83	CALL_4
0xe3ba	      0xe88661ffff	            call sym.check_string_option	     10930	option.c	FUNCTION_83	CALL_4
0xe3bf	        0x488b45f8	                mov rax, qword [rbp - 8]	     10931	option.c	FUNCTION_83	CALL_5
0xe3c3	        0x4883c070	                           add rax, 0x70	     10931	option.c	FUNCTION_83	CALL_5
0xe3c7	          0x4889c7	                            mov rdi, rax	     10931	option.c	FUNCTION_83	CALL_5
0xe3ca	      0xe87661ffff	            call sym.check_string_option	     10931	option.c	FUNCTION_83	CALL_5
0xe3cf	        0x488b45f8	                mov rax, qword [rbp - 8]	     10933	option.c	FUNCTION_83	CALL_6
0xe3d3	        0x4883c078	                           add rax, 0x78	     10933	option.c	FUNCTION_83	CALL_6
0xe3d7	          0x4889c7	                            mov rdi, rax	     10933	option.c	FUNCTION_83	CALL_6
0xe3da	      0xe86661ffff	            call sym.check_string_option	     10933	option.c	FUNCTION_83	CALL_6
0xe3df	        0x488b45f8	                mov rax, qword [rbp - 8]	     10936	option.c	FUNCTION_83	CALL_7
0xe3e3	    0x480508010000	                          add rax, 0x108	     10936	option.c	FUNCTION_83	CALL_7
0xe3e9	          0x4889c7	                            mov rdi, rax	     10936	option.c	FUNCTION_83	CALL_7
0xe3ec	      0xe85461ffff	            call sym.check_string_option	     10936	option.c	FUNCTION_83	CALL_7
0xe3f1	        0x488b45f8	                mov rax, qword [rbp - 8]	     10939	option.c	FUNCTION_83	CALL_8
0xe3f5	    0x4805a8000000	                           add rax, 0xa8	     10939	option.c	FUNCTION_83	CALL_8
0xe3fb	          0x4889c7	                            mov rdi, rax	     10939	option.c	FUNCTION_83	CALL_8
0xe3fe	      0xe84261ffff	            call sym.check_string_option	     10939	option.c	FUNCTION_83	CALL_8
0xe403	        0x488b45f8	                mov rax, qword [rbp - 8]	     10942	option.c	FUNCTION_83	CALL_9
0xe407	    0x4805d0000000	                           add rax, 0xd0	     10942	option.c	FUNCTION_83	CALL_9
0xe40d	          0x4889c7	                            mov rdi, rax	     10942	option.c	FUNCTION_83	CALL_9
0xe410	      0xe83061ffff	            call sym.check_string_option	     10942	option.c	FUNCTION_83	CALL_9
0xe415	        0x488b45f8	                mov rax, qword [rbp - 8]	     10945	option.c	FUNCTION_83	CALL_10
0xe419	    0x4805c8000000	                           add rax, 0xc8	     10945	option.c	FUNCTION_83	CALL_10
0xe41f	          0x4889c7	                            mov rdi, rax	     10945	option.c	FUNCTION_83	CALL_10
0xe422	      0xe81e61ffff	            call sym.check_string_option	     10945	option.c	FUNCTION_83	CALL_10
0xe427	        0x488b45f8	                mov rax, qword [rbp - 8]	     10948	option.c	FUNCTION_83	CALL_11
0xe42b	    0x4805f0000000	                           add rax, 0xf0	     10948	option.c	FUNCTION_83	CALL_11
0xe431	          0x4889c7	                            mov rdi, rax	     10948	option.c	FUNCTION_83	CALL_11
0xe434	      0xe80c61ffff	            call sym.check_string_option	     10948	option.c	FUNCTION_83	CALL_11
0xe439	        0x488b45f8	                mov rax, qword [rbp - 8]	     10951	option.c	FUNCTION_83	CALL_12
0xe43d	    0x480510010000	                          add rax, 0x110	     10951	option.c	FUNCTION_83	CALL_12
0xe443	          0x4889c7	                            mov rdi, rax	     10951	option.c	FUNCTION_83	CALL_12
0xe446	      0xe8fa60ffff	            call sym.check_string_option	     10951	option.c	FUNCTION_83	CALL_12
0xe44b	        0x488b45f8	                mov rax, qword [rbp - 8]	     10952	option.c	FUNCTION_83	CALL_13
0xe44f	    0x480518010000	                          add rax, 0x118	     10952	option.c	FUNCTION_83	CALL_13
0xe455	          0x4889c7	                            mov rdi, rax	     10952	option.c	FUNCTION_83	CALL_13
0xe458	      0xe8e860ffff	            call sym.check_string_option	     10952	option.c	FUNCTION_83	CALL_13
0xe45d	        0x488b45f8	                mov rax, qword [rbp - 8]	     10955	option.c	FUNCTION_83	CALL_14
0xe461	        0x4883c008	                              add rax, 8	     10955	option.c	FUNCTION_83	CALL_14
0xe465	          0x4889c7	                            mov rdi, rax	     10955	option.c	FUNCTION_83	CALL_14
0xe468	      0xe8d860ffff	            call sym.check_string_option	     10955	option.c	FUNCTION_83	CALL_14
0xe46d	              0x90	                                     nop	     10957	option.c	FUNCTION_83
0xe46e	              0xc9	                                   leave	     10957	option.c	FUNCTION_83
0xe46f	              0xc3	                                     ret	     10957	option.c	FUNCTION_83
get_encoding_default	WHILE,0:SWITCH,0:CALL,1:FOR,0:ELSE,0:DO,0:IF,1:functions,0	17
0xb502	              0x55	                                push rbp	      9762	option.c	FUNCTION_60
0xb503	          0x4889e5	                            mov rbp, rsp	      9762	option.c	FUNCTION_60
0xb506	        0x4883ec10	                           sub rsp, 0x10	      9762	option.c	FUNCTION_60
0xb50a	      0xbf00000000	                              mov edi, 0	      9765	option.c	FUNCTION_60	CALL_1
0xb50f	      0xe872f8ffff	                     call sym.findoption	      9765	option.c	FUNCTION_60	CALL_1
0xb514	          0x8945fc	                mov dword [rbp - 4], eax	      9765	option.c	FUNCTION_60	CALL_1
0xb517	        0x837dfc00	                  cmp dword [rbp - 4], 0	      9766	option.c	FUNCTION_60	IF_1
0xb51b	            0x7814	                            js 0x400b571	      9766	option.c	FUNCTION_60	IF_1
0xb51d	          0x8b45fc	                mov eax, dword [rbp - 4]	      9767	option.c	FUNCTION_60	IF_1
0xb520	            0x4898	                                    cdqe	      9767	option.c	FUNCTION_60	IF_1
0xb522	        0x48c1e006	                              shl rax, 6	      9767	option.c	FUNCTION_60	IF_1
0xb526	    0x480500000000	                              add rax, 0	      9767	option.c	FUNCTION_60	IF_1
0xb52c	          0x488b00	                    mov rax, qword [rax]	      9767	option.c	FUNCTION_60	IF_1
0xb52f	            0xeb05	                           jmp 0x400b576	      9767	option.c	FUNCTION_60	IF_1
0xb531	      0xb800000000	                              mov eax, 0	      9768	option.c	FUNCTION_60
0xb536	              0xc9	                                   leave	      9769	option.c	FUNCTION_60
0xb537	              0xc3	                                     ret	      9769	option.c	FUNCTION_60
valid_filetype	WHILE,0:SWITCH,0:CALL,2:FOR,1:ELSE,0:DO,0:IF,1:functions,0	43
0x4b47	              0x55	                                push rbp	      5984	option.c	FUNCTION_40
0x4b48	          0x4889e5	                            mov rbp, rsp	      5984	option.c	FUNCTION_40
0x4b4b	        0x4883ec20	                           sub rsp, 0x20	      5984	option.c	FUNCTION_40
0x4b4f	        0x48897de8	             mov qword [rbp - 0x18], rdi	      5984	option.c	FUNCTION_40
0x4b53	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5987	option.c	FUNCTION_40	FOR_1
0x4b57	        0x488945f8	                mov qword [rbp - 8], rax	      5987	option.c	FUNCTION_40	FOR_1
0x4b5b	            0xeb5d	                           jmp 0x4004bfa	      5987	option.c	FUNCTION_40	FOR_1
0x4b5d	        0x488b45f8	                mov rax, qword [rbp - 8]	      5988	option.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x4b61	           0xfb600	                   movzx eax, byte [rax]	      5988	option.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x4b64	           0xfb6c0	                           movzx eax, al	      5988	option.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x4b67	          0x83e841	                           sub eax, 0x41	      5988	option.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x4b6a	          0x83f819	                           cmp eax, 0x19	      5988	option.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x4b6d	            0x7646	                           jbe 0x4004bf5	      5988	option.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x4b6f	        0x488b45f8	                mov rax, qword [rbp - 8]	      5988	option.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x4b73	           0xfb600	                   movzx eax, byte [rax]	      5988	option.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x4b76	           0xfb6c0	                           movzx eax, al	      5988	option.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x4b79	          0x83e861	                           sub eax, 0x61	      5988	option.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x4b7c	          0x83f819	                           cmp eax, 0x19	      5988	option.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x4b7f	            0x7634	                           jbe 0x4004bf5	      5988	option.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x4b81	        0x488b45f8	                mov rax, qword [rbp - 8]	      5988	option.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x4b85	           0xfb600	                   movzx eax, byte [rax]	      5988	option.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x4b88	           0xfb6c0	                           movzx eax, al	      5988	option.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x4b8b	          0x83e830	                           sub eax, 0x30	      5988	option.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x4b8e	          0x83f809	                              cmp eax, 9	      5988	option.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x4b91	            0x7622	                           jbe 0x4004bf5	      5988	option.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x4b93	        0x488b45f8	                mov rax, qword [rbp - 8]	      5988	option.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x4b97	           0xfb600	                   movzx eax, byte [rax]	      5988	option.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x4b9a	           0xfb6c0	                           movzx eax, al	      5988	option.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x4b9d	            0x89c6	                            mov esi, eax	      5988	option.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x4b9f	      0xbf00000000	                              mov edi, 0	      5988	option.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x4ba4	      0xe800000000	                          call 0x4004be9	      5988	option.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x4ba9	          0x4885c0	                           test rax, rax	      5988	option.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x4bac	            0x7507	                           jne 0x4004bf5	      5988	option.c	FUNCTION_40	FOR_1	IF_1	CALL_2
0x4bae	      0xb800000000	                              mov eax, 0	      5989	option.c	FUNCTION_40	FOR_1	IF_1
0x4bb3	            0xeb15	                           jmp 0x4004c0a	      5989	option.c	FUNCTION_40	FOR_1	IF_1
0x4bb5	      0x488345f801	                  add qword [rbp - 8], 1	      5987	option.c	FUNCTION_40	FOR_1
0x4bba	        0x488b45f8	                mov rax, qword [rbp - 8]	      5987	option.c	FUNCTION_40	FOR_1
0x4bbe	           0xfb600	                   movzx eax, byte [rax]	      5987	option.c	FUNCTION_40	FOR_1
0x4bc1	            0x84c0	                             test al, al	      5987	option.c	FUNCTION_40	FOR_1
0x4bc3	            0x7598	                           jne 0x4004b9d	      5987	option.c	FUNCTION_40	FOR_1
0x4bc5	      0xb801000000	                              mov eax, 1	      5990	option.c	FUNCTION_40
0x4bca	              0xc9	                                   leave	      5991	option.c	FUNCTION_40
0x4bcb	              0xc3	                                     ret	      5991	option.c	FUNCTION_40
do_set	WHILE,6:SWITCH,1:CALL,129:FOR,4:ELSE,45:DO,0:IF,120:functions,0	2045
0x1438	              0x55	                                push rbp	      4330	option.c	FUNCTION_16
0x1439	          0x4889e5	                            mov rbp, rsp	      4330	option.c	FUNCTION_16
0x143c	    0x4881ec300100	                          sub rsp, 0x130	      4330	option.c	FUNCTION_16
0x1443	    0x4889bdd8feff	            mov qword [rbp - 0x128], rdi	      4330	option.c	FUNCTION_16
0x144a	    0x89b5d4feffff	            mov dword [rbp - 0x12c], esi	      4330	option.c	FUNCTION_16
0x1450	    0x64488b042528	                mov rax, qword fs:[0x28]	      4330	option.c	FUNCTION_16
0x1459	        0x488945f8	                mov qword [rbp - 8], rax	      4330	option.c	FUNCTION_16
0x145d	            0x31c0	                            xor eax, eax	      4330	option.c	FUNCTION_16
0x145f	    0x48c78538ffff	               mov qword [rbp - 0xc8], 0	      4343	option.c	FUNCTION_16
0x146a	    0xc785f4feffff	              mov dword [rbp - 0x10c], 0	      4344	option.c	FUNCTION_16
0x1474	    0xc78504ffffff	               mov dword [rbp - 0xfc], 0	      4348	option.c	FUNCTION_16
0x147e	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4351	option.c	FUNCTION_16	IF_1
0x1485	           0xfb600	                   movzx eax, byte [rax]	      4351	option.c	FUNCTION_16	IF_1
0x1488	            0x84c0	                             test al, al	      4351	option.c	FUNCTION_16	IF_1
0x148a	     0xf85af230000	                           jne 0x400387f	      4351	option.c	FUNCTION_16	IF_1
0x1490	    0x8b85d4feffff	            mov eax, dword [rbp - 0x12c]	      4353	option.c	FUNCTION_16	IF_1	CALL_1
0x1496	            0x89c6	                            mov esi, eax	      4353	option.c	FUNCTION_16	IF_1	CALL_1
0x1498	      0xbf00000000	                              mov edi, 0	      4353	option.c	FUNCTION_16	IF_1	CALL_1
0x149d	      0xe86ea10000	                    call sym.showoptions	      4353	option.c	FUNCTION_16	IF_1	CALL_1
0x14a2	    0xc785f4feffff	              mov dword [rbp - 0x10c], 1	      4354	option.c	FUNCTION_16	IF_1
0x14ac	      0xe9a6230000	                           jmp 0x4003897	      4355	option.c	FUNCTION_16	IF_1
0x14b1	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	      4360	option.c	FUNCTION_16	WHILE_1
0x14bc	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4361	option.c	FUNCTION_16	WHILE_1
0x14c3	        0x48894580	             mov qword [rbp - 0x80], rax	      4361	option.c	FUNCTION_16	WHILE_1
0x14c7	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4363	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x14ce	      0xba03000000	                              mov edx, 3	      4363	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x14d3	      0xbe00000000	                              mov esi, 0	      4363	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x14d8	          0x4889c7	                            mov rdi, rax	      4363	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x14db	      0xe800000000	                          call 0x4001520	      4363	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x14e0	            0x85c0	                           test eax, eax	      4363	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x14e2	     0xf85bb000000	                           jne 0x40015e3	      4363	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x14e8	      0xe800000000	                          call 0x400152d	      4363	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x14ed	          0x488b00	                    mov rax, qword [rax]	      4363	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x14f0	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4363	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x14f7	        0x4883c203	                              add rdx, 3	      4363	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x14fb	           0xfb612	                   movzx edx, byte [rdx]	      4363	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x14fe	           0xfb6d2	                           movzx edx, dl	      4363	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x1501	          0x4801d2	                            add rdx, rdx	      4363	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x1504	          0x4801d0	                            add rax, rdx	      4363	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x1507	           0xfb700	                   movzx eax, word [rax]	      4363	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x150a	           0xfb7c0	                           movzx eax, ax	      4363	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x150d	      0x2500040000	                          and eax, 0x400	      4363	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x1512	            0x85c0	                           test eax, eax	      4363	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x1514	     0xf8589000000	                           jne 0x40015e3	      4363	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x151a	    0x8b85d4feffff	            mov eax, dword [rbp - 0x12c]	      4364	option.c	FUNCTION_16	WHILE_1	IF_2
0x1520	          0x83e008	                              and eax, 8	      4364	option.c	FUNCTION_16	WHILE_1	IF_2
0x1523	            0x85c0	                           test eax, eax	      4364	option.c	FUNCTION_16	WHILE_1	IF_2
0x1525	            0x757c	                           jne 0x40015e3	      4364	option.c	FUNCTION_16	WHILE_1	IF_2
0x1527	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4370	option.c	FUNCTION_16	WHILE_1	IF_2
0x152e	        0x4883c003	                              add rax, 3	      4370	option.c	FUNCTION_16	WHILE_1	IF_2
0x1532	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      4370	option.c	FUNCTION_16	WHILE_1	IF_2
0x1539	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4371	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3
0x1540	           0xfb600	                   movzx eax, byte [rax]	      4371	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3
0x1543	            0x3c26	                            cmp al, 0x26	      4371	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3
0x1545	            0x753b	                           jne 0x40015c2	      4371	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3
0x1547	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4373	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3
0x154e	        0x4883c001	                              add rax, 1	      4373	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3
0x1552	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      4373	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3
0x1559	    0x8b85d4feffff	            mov eax, dword [rbp - 0x12c]	      4375	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3	CALL_4
0x155f	          0x83c801	                               or eax, 1	      4375	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3	CALL_4
0x1562	            0x89c7	                            mov edi, eax	      4375	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3	CALL_4
0x1564	      0xe86ef4ffff	            call sym.set_options_default	      4375	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3	CALL_4
0x1569	      0xe8c2290000	                 call sym.didset_options	      4376	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3	CALL_5
0x156e	      0xe8352b0000	                call sym.didset_options2	      4377	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3	CALL_6
0x1573	      0xbf32000000	                           mov edi, 0x32	      4378	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3	CALL_7
0x1578	      0xe800000000	                          call 0x40015bd	      4378	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3	CALL_7
0x157d	      0xe945210000	                           jmp 0x4003707	      4371	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3
0x1582	    0x8b85d4feffff	            mov eax, dword [rbp - 0x12c]	      4382	option.c	FUNCTION_16	WHILE_1	IF_2	ELSE_1	CALL_8
0x1588	            0x89c6	                            mov esi, eax	      4382	option.c	FUNCTION_16	WHILE_1	IF_2	ELSE_1	CALL_8
0x158a	      0xbf01000000	                              mov edi, 1	      4382	option.c	FUNCTION_16	WHILE_1	IF_2	ELSE_1	CALL_8
0x158f	      0xe87ca00000	                    call sym.showoptions	      4382	option.c	FUNCTION_16	WHILE_1	IF_2	ELSE_1	CALL_8
0x1594	    0xc785f4feffff	              mov dword [rbp - 0x10c], 1	      4383	option.c	FUNCTION_16	WHILE_1	IF_2	ELSE_1
0x159e	      0xe924210000	                           jmp 0x4003707	      4371	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3
0x15a3	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4386	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_9
0x15aa	      0xba07000000	                              mov edx, 7	      4386	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_9
0x15af	      0xbe00000000	                              mov esi, 0	      4386	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_9
0x15b4	          0x4889c7	                            mov rdi, rax	      4386	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_9
0x15b7	      0xe800000000	                          call 0x40015fc	      4386	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_9
0x15bc	            0x85c0	                           test eax, eax	      4386	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_9
0x15be	            0x7545	                           jne 0x4001645	      4386	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_9
0x15c0	    0x8b85d4feffff	            mov eax, dword [rbp - 0x12c]	      4386	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_9
0x15c6	          0x83e008	                              and eax, 8	      4386	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_9
0x15c9	            0x85c0	                           test eax, eax	      4386	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_9
0x15cb	            0x7538	                           jne 0x4001645	      4386	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_9
0x15cd	    0x8b85d4feffff	            mov eax, dword [rbp - 0x12c]	      4388	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_10
0x15d3	            0x89c6	                            mov esi, eax	      4388	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_10
0x15d5	      0xbf02000000	                              mov edi, 2	      4388	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_10
0x15da	      0xe831a00000	                    call sym.showoptions	      4388	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_10
0x15df	      0xe800000000	                          call 0x4001624	      4389	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_11
0x15e4	    0xc785f4feffff	              mov dword [rbp - 0x10c], 1	      4390	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4
0x15ee	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4391	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4
0x15f5	        0x4883c007	                              add rax, 7	      4391	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4
0x15f9	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      4391	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4
0x1600	      0xe9c2200000	                           jmp 0x4003707	      4391	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4
0x1605	    0xc785e8feffff	              mov dword [rbp - 0x118], 1	      4395	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x160f	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4396	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x1616	      0xba02000000	                              mov edx, 2	      4396	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x161b	      0xbe00000000	                              mov esi, 0	      4396	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x1620	          0x4889c7	                            mov rdi, rax	      4396	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x1623	      0xe800000000	                          call 0x4001668	      4396	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x1628	            0x85c0	                           test eax, eax	      4396	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x162a	            0x753b	                           jne 0x40016a7	      4396	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x162c	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4396	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x1633	      0xba06000000	                              mov edx, 6	      4396	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x1638	      0xbe00000000	                              mov esi, 0	      4396	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x163d	          0x4889c7	                            mov rdi, rax	      4396	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x1640	      0xe800000000	                          call 0x4001685	      4396	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x1645	            0x85c0	                           test eax, eax	      4396	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x1647	            0x741e	                            je 0x40016a7	      4396	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x1649	    0xc785e8feffff	              mov dword [rbp - 0x118], 0	      4398	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5
0x1653	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4399	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5
0x165a	        0x4883c002	                              add rax, 2	      4399	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5
0x165e	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      4399	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5
0x1665	            0xeb39	                           jmp 0x40016e0	      4399	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5
0x1667	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4401	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6	CALL_14
0x166e	      0xba03000000	                              mov edx, 3	      4401	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6	CALL_14
0x1673	      0xbe00000000	                              mov esi, 0	      4401	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6	CALL_14
0x1678	          0x4889c7	                            mov rdi, rax	      4401	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6	CALL_14
0x167b	      0xe800000000	                          call 0x40016c0	      4401	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6	CALL_14
0x1680	            0x85c0	                           test eax, eax	      4401	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6	CALL_14
0x1682	            0x751c	                           jne 0x40016e0	      4401	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6	CALL_14
0x1684	    0xc785e8feffff	              mov dword [rbp - 0x118], 2	      4403	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6
0x168e	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4404	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6
0x1695	        0x4883c003	                              add rax, 3	      4404	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6
0x1699	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      4404	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6
0x16a0	    0xc785f0feffff	              mov dword [rbp - 0x110], 0	      4408	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x16aa	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4409	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x16b1	           0xfb600	                   movzx eax, byte [rax]	      4409	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x16b4	            0x3c3c	                            cmp al, 0x3c	      4409	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x16b6	     0xf8571010000	                           jne 0x400186d	      4409	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x16bc	    0xc78514ffffff	               mov dword [rbp - 0xec], 0	      4411	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x16c6	    0xc785e4feffff	    mov dword [rbp - 0x11c], 0xffffffff 	      4412	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x16d0	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4414	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x16d7	        0x4883c001	                              add rax, 1	      4414	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x16db	           0xfb600	                   movzx eax, byte [rax]	      4414	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x16de	            0x3c74	                            cmp al, 0x74	      4414	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x16e0	            0x7542	                           jne 0x4001764	      4414	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x16e2	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4414	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x16e9	        0x4883c002	                              add rax, 2	      4414	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x16ed	           0xfb600	                   movzx eax, byte [rax]	      4414	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x16f0	            0x3c5f	                            cmp al, 0x5f	      4414	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x16f2	            0x7530	                           jne 0x4001764	      4414	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x16f4	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4414	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x16fb	        0x4883c003	                              add rax, 3	      4414	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x16ff	           0xfb600	                   movzx eax, byte [rax]	      4414	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x1702	            0x84c0	                             test al, al	      4414	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x1704	            0x741e	                            je 0x4001764	      4414	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x1706	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4414	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x170d	        0x4883c004	                              add rax, 4	      4414	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x1711	           0xfb600	                   movzx eax, byte [rax]	      4414	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x1714	            0x84c0	                             test al, al	      4414	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x1716	            0x740c	                            je 0x4001764	      4414	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x1718	    0xc785ecfeffff	              mov dword [rbp - 0x114], 5	      4415	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x1722	            0xeb45	                           jmp 0x40017a9	      4415	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x1724	    0xc785ecfeffff	              mov dword [rbp - 0x114], 1	      4418	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5
0x172e	            0xeb07	                           jmp 0x4001777	      4419	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x1730	    0x8385ecfeffff	              add dword [rbp - 0x114], 1	      4420	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x1737	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4419	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x173e	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4419	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x1744	            0x4898	                                    cdqe	      4419	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x1746	          0x4801d0	                            add rax, rdx	      4419	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x1749	           0xfb600	                   movzx eax, byte [rax]	      4419	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x174c	            0x84c0	                             test al, al	      4419	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x174e	            0x7419	                            je 0x40017a9	      4419	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x1750	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4419	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x1757	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4419	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x175d	            0x4898	                                    cdqe	      4419	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x175f	          0x4801d0	                            add rax, rdx	      4419	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x1762	           0xfb600	                   movzx eax, byte [rax]	      4419	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x1765	            0x3c3e	                            cmp al, 0x3e	      4419	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x1767	            0x75c7	                           jne 0x4001770	      4419	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x1769	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4422	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_9
0x1770	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4422	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_9
0x1776	            0x4898	                                    cdqe	      4422	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_9
0x1778	          0x4801d0	                            add rax, rdx	      4422	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_9
0x177b	           0xfb600	                   movzx eax, byte [rax]	      4422	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_9
0x177e	            0x3c3e	                            cmp al, 0x3e	      4422	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_9
0x1780	            0x7410	                            je 0x40017d2	      4422	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_9
0x1782	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	      4424	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_9
0x178d	      0xe9821e0000	                           jmp 0x4003654	      4425	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_9
0x1792	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4427	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x1799	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4427	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x179f	            0x4898	                                    cdqe	      4427	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x17a1	          0x4801d0	                            add rax, rdx	      4427	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x17a4	          0xc60000	                       mov byte [rax], 0	      4427	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x17a7	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4428	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_10
0x17ae	        0x4883c001	                              add rax, 1	      4428	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_10
0x17b2	           0xfb600	                   movzx eax, byte [rax]	      4428	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_10
0x17b5	            0x3c74	                            cmp al, 0x74	      4428	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_10
0x17b7	            0x752b	                           jne 0x4001824	      4428	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_10
0x17b9	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4428	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_10
0x17c0	        0x4883c002	                              add rax, 2	      4428	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_10
0x17c4	           0xfb600	                   movzx eax, byte [rax]	      4428	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_10
0x17c7	            0x3c5f	                            cmp al, 0x5f	      4428	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_10
0x17c9	            0x7519	                           jne 0x4001824	      4428	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_10
0x17cb	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4429	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	CALL_15
0x17d2	        0x4883c001	                              add rax, 1	      4429	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	CALL_15
0x17d6	          0x4889c7	                            mov rdi, rax	      4429	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	CALL_15
0x17d9	      0xe8a8950000	                     call sym.findoption	      4429	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	CALL_15
0x17de	    0x8985e4feffff	            mov dword [rbp - 0x11c], eax	      4429	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	CALL_15
0x17e4	    0x488b8dd8feff	            mov rcx, qword [rbp - 0x128]	      4430	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x17eb	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4430	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x17f1	          0x8d5001	                      lea edx, [rax + 1]	      4430	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x17f4	    0x8995ecfeffff	            mov dword [rbp - 0x114], edx	      4430	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x17fa	            0x4898	                                    cdqe	      4430	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x17fc	          0x4801c8	                            add rax, rcx	      4430	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x17ff	          0xc6003e	                    mov byte [rax], 0x3e	      4430	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x1802	    0x83bde4feffff	cmp dword [rbp - 0x11c], 0xffffffffffffffff	      4431	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_11
0x1809	     0xf857b010000	                           jne 0x40019ca	      4431	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_11
0x180f	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	CALL_16
0x1816	        0x4883c001	                              add rax, 1	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	CALL_16
0x181a	          0x4889c7	                            mov rdi, rax	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	CALL_16
0x181d	      0xe8169d0000	                call sym.find_key_option	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	CALL_16
0x1822	    0x8985f0feffff	            mov dword [rbp - 0x110], eax	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	CALL_16
0x1828	      0xe95d010000	                           jmp 0x40019ca	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	CALL_16
0x182d	    0xc785ecfeffff	              mov dword [rbp - 0x114], 0	      4436	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6
0x1837	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4440	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x183e	           0xfb600	                   movzx eax, byte [rax]	      4440	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x1841	            0x3c74	                            cmp al, 0x74	      4440	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x1843	            0x754c	                           jne 0x40018d1	      4440	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x1845	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4440	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x184c	        0x4883c001	                              add rax, 1	      4440	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x1850	           0xfb600	                   movzx eax, byte [rax]	      4440	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x1853	            0x3c5f	                            cmp al, 0x5f	      4440	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x1855	            0x753a	                           jne 0x40018d1	      4440	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x1857	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4440	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x185e	        0x4883c002	                              add rax, 2	      4440	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x1862	           0xfb600	                   movzx eax, byte [rax]	      4440	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x1865	            0x84c0	                             test al, al	      4440	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x1867	            0x7428	                            je 0x40018d1	      4440	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x1869	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4440	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x1870	        0x4883c003	                              add rax, 3	      4440	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x1874	           0xfb600	                   movzx eax, byte [rax]	      4440	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x1877	            0x84c0	                             test al, al	      4440	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x1879	            0x7416	                            je 0x40018d1	      4440	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x187b	    0xc785ecfeffff	              mov dword [rbp - 0x114], 4	      4441	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x1885	      0xe980000000	                           jmp 0x400194a	      4441	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x188a	    0x8385ecfeffff	              add dword [rbp - 0x114], 1	      4444	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3
0x1891	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4443	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x1898	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4443	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x189e	            0x4898	                                    cdqe	      4443	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x18a0	          0x4801d0	                            add rax, rdx	      4443	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x18a3	           0xfb600	                   movzx eax, byte [rax]	      4443	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x18a6	           0xfb6c0	                           movzx eax, al	      4443	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x18a9	          0x83e841	                           sub eax, 0x41	      4443	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x18ac	          0x83f819	                           cmp eax, 0x19	      4443	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x18af	            0x76d9	                           jbe 0x40018ca	      4443	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x18b1	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4443	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x18b8	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4443	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x18be	            0x4898	                                    cdqe	      4443	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x18c0	          0x4801d0	                            add rax, rdx	      4443	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x18c3	           0xfb600	                   movzx eax, byte [rax]	      4443	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x18c6	           0xfb6c0	                           movzx eax, al	      4443	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x18c9	          0x83e861	                           sub eax, 0x61	      4443	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x18cc	          0x83f819	                           cmp eax, 0x19	      4443	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x18cf	            0x76b9	                           jbe 0x40018ca	      4443	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x18d1	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4443	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x18d8	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4443	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x18de	            0x4898	                                    cdqe	      4443	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x18e0	          0x4801d0	                            add rax, rdx	      4443	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x18e3	           0xfb600	                   movzx eax, byte [rax]	      4443	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x18e6	           0xfb6c0	                           movzx eax, al	      4443	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x18e9	          0x83e830	                           sub eax, 0x30	      4443	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x18ec	          0x83f809	                              cmp eax, 9	      4443	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x18ef	            0x7699	                           jbe 0x40018ca	      4443	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x18f1	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4443	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x18f8	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4443	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x18fe	            0x4898	                                    cdqe	      4443	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x1900	          0x4801d0	                            add rax, rdx	      4443	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x1903	           0xfb600	                   movzx eax, byte [rax]	      4443	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x1906	            0x3c5f	                            cmp al, 0x5f	      4443	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x1908	            0x7480	                            je 0x40018ca	      4443	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x190a	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4445	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6
0x1911	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4445	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6
0x1917	            0x4898	                                    cdqe	      4445	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6
0x1919	          0x4801d0	                            add rax, rdx	      4445	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6
0x191c	           0xfb600	                   movzx eax, byte [rax]	      4445	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6
0x191f	           0xfb6c0	                           movzx eax, al	      4445	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6
0x1922	    0x898514ffffff	             mov dword [rbp - 0xec], eax	      4445	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6
0x1928	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4446	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6
0x192f	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4446	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6
0x1935	            0x4898	                                    cdqe	      4446	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6
0x1937	          0x4801d0	                            add rax, rdx	      4446	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6
0x193a	          0xc60000	                       mov byte [rax], 0	      4446	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6
0x193d	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4447	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	CALL_18
0x1944	          0x4889c7	                            mov rdi, rax	      4447	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	CALL_18
0x1947	      0xe83a940000	                     call sym.findoption	      4447	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	CALL_18
0x194c	    0x8985e4feffff	            mov dword [rbp - 0x11c], eax	      4447	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	CALL_18
0x1952	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4448	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6
0x1959	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4448	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6
0x195f	            0x4898	                                    cdqe	      4448	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6
0x1961	          0x4801d0	                            add rax, rdx	      4448	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6
0x1964	    0x8b9514ffffff	             mov edx, dword [rbp - 0xec]	      4448	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6
0x196a	            0x8810	                      mov byte [rax], dl	      4448	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6
0x196c	    0x83bde4feffff	cmp dword [rbp - 0x11c], 0xffffffffffffffff	      4449	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_13
0x1973	            0x7515	                           jne 0x40019ca	      4449	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_13
0x1975	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	CALL_19
0x197c	          0x4889c7	                            mov rdi, rax	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	CALL_19
0x197f	      0xe8b49b0000	                call sym.find_key_option	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	CALL_19
0x1984	    0x8985f0feffff	            mov dword [rbp - 0x110], eax	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	CALL_19
0x198a	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4454	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x1991	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4454	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x1997	            0x4898	                                    cdqe	      4454	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x1999	          0x4801d0	                            add rax, rdx	      4454	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x199c	           0xfb600	                   movzx eax, byte [rax]	      4454	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x199f	           0xfb6c0	                           movzx eax, al	      4454	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x19a2	    0x898518ffffff	             mov dword [rbp - 0xe8], eax	      4454	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x19a8	            0xeb07	                           jmp 0x40019f1	      4457	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x19aa	    0x8385ecfeffff	              add dword [rbp - 0x114], 1	      4458	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4
0x19b1	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4457	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x19b8	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4457	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x19be	            0x4898	                                    cdqe	      4457	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x19c0	          0x4801d0	                            add rax, rdx	      4457	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x19c3	           0xfb600	                   movzx eax, byte [rax]	      4457	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x19c6	            0x3c20	                            cmp al, 0x20	      4457	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x19c8	            0x74e0	                            je 0x40019ea	      4457	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x19ca	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4457	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x19d1	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4457	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x19d7	            0x4898	                                    cdqe	      4457	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x19d9	          0x4801d0	                            add rax, rdx	      4457	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x19dc	           0xfb600	                   movzx eax, byte [rax]	      4457	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x19df	            0x3c09	                               cmp al, 9	      4457	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x19e1	            0x74c7	                            je 0x40019ea	      4457	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x19e3	    0xc785f8feffff	              mov dword [rbp - 0x108], 0	      4460	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x19ed	    0xc785fcfeffff	              mov dword [rbp - 0x104], 0	      4461	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x19f7	    0xc78500ffffff	              mov dword [rbp - 0x100], 0	      4462	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x1a01	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4463	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14
0x1a08	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4463	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14
0x1a0e	            0x4898	                                    cdqe	      4463	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14
0x1a10	          0x4801d0	                            add rax, rdx	      4463	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14
0x1a13	           0xfb600	                   movzx eax, byte [rax]	      4463	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14
0x1a16	            0x84c0	                             test al, al	      4463	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14
0x1a18	     0xf84a4000000	                            je 0x4001b02	      4463	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14
0x1a1e	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4463	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14
0x1a25	    0x8b95ecfeffff	            mov edx, dword [rbp - 0x114]	      4463	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14
0x1a2b	          0x4863d2	                         movsxd rdx, edx	      4463	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14
0x1a2e	        0x4883c201	                              add rdx, 1	      4463	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14
0x1a32	          0x4801d0	                            add rax, rdx	      4463	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14
0x1a35	           0xfb600	                   movzx eax, byte [rax]	      4463	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14
0x1a38	            0x3c3d	                            cmp al, 0x3d	      4463	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14
0x1a3a	     0xf8582000000	                           jne 0x4001b02	      4463	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14
0x1a40	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4465	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	IF_15
0x1a47	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4465	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	IF_15
0x1a4d	            0x4898	                                    cdqe	      4465	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	IF_15
0x1a4f	          0x4801d0	                            add rax, rdx	      4465	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	IF_15
0x1a52	           0xfb600	                   movzx eax, byte [rax]	      4465	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	IF_15
0x1a55	            0x3c2b	                            cmp al, 0x2b	      4465	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	IF_15
0x1a57	            0x7513	                           jne 0x4001aac	      4465	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	IF_15
0x1a59	    0xc785f8feffff	              mov dword [rbp - 0x108], 1	      4467	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	IF_15
0x1a63	    0x8385ecfeffff	              add dword [rbp - 0x114], 1	      4468	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	IF_15
0x1a6a	            0xeb56	                           jmp 0x4001b02	      4468	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	IF_15
0x1a6c	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4470	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_8	IF_16
0x1a73	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4470	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_8	IF_16
0x1a79	            0x4898	                                    cdqe	      4470	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_8	IF_16
0x1a7b	          0x4801d0	                            add rax, rdx	      4470	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_8	IF_16
0x1a7e	           0xfb600	                   movzx eax, byte [rax]	      4470	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_8	IF_16
0x1a81	            0x3c5e	                            cmp al, 0x5e	      4470	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_8	IF_16
0x1a83	            0x7513	                           jne 0x4001ad8	      4470	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_8	IF_16
0x1a85	    0xc785fcfeffff	              mov dword [rbp - 0x104], 1	      4472	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_8	IF_16
0x1a8f	    0x8385ecfeffff	              add dword [rbp - 0x114], 1	      4473	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_8	IF_16
0x1a96	            0xeb2a	                           jmp 0x4001b02	      4473	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_8	IF_16
0x1a98	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4475	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_9	IF_17
0x1a9f	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4475	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_9	IF_17
0x1aa5	            0x4898	                                    cdqe	      4475	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_9	IF_17
0x1aa7	          0x4801d0	                            add rax, rdx	      4475	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_9	IF_17
0x1aaa	           0xfb600	                   movzx eax, byte [rax]	      4475	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_9	IF_17
0x1aad	            0x3c2d	                            cmp al, 0x2d	      4475	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_9	IF_17
0x1aaf	            0x7511	                           jne 0x4001b02	      4475	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_9	IF_17
0x1ab1	    0xc78500ffffff	              mov dword [rbp - 0x100], 1	      4477	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_9	IF_17
0x1abb	    0x8385ecfeffff	              add dword [rbp - 0x114], 1	      4478	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_9	IF_17
0x1ac2	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4481	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x1ac9	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4481	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x1acf	            0x4898	                                    cdqe	      4481	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x1ad1	          0x4801d0	                            add rax, rdx	      4481	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x1ad4	           0xfb600	                   movzx eax, byte [rax]	      4481	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x1ad7	           0xfb6c0	                           movzx eax, al	      4481	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x1ada	    0x898514ffffff	             mov dword [rbp - 0xec], eax	      4481	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x1ae0	    0x83bde4feffff	cmp dword [rbp - 0x11c], 0xffffffffffffffff	      4483	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_18
0x1ae7	            0x7519	                           jne 0x4001b42	      4483	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_18
0x1ae9	    0x83bdf0feffff	              cmp dword [rbp - 0x110], 0	      4483	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_18
0x1af0	            0x7510	                           jne 0x4001b42	      4483	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_18
0x1af2	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	      4485	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_18	CALL_21
0x1afd	      0xe9121b0000	                           jmp 0x4003654	      4486	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_18
0x1b02	    0x83bde4feffff	              cmp dword [rbp - 0x11c], 0	      4489	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19
0x1b09	     0xf88b7000000	                            js 0x4001c06	      4489	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19
0x1b0f	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      4491	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20
0x1b15	            0x4898	                                    cdqe	      4491	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20
0x1b17	        0x48c1e006	                              shl rax, 6	      4491	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20
0x1b1b	    0x480500000000	                              add rax, 0	      4491	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20
0x1b21	          0x488b00	                    mov rax, qword [rax]	      4491	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20
0x1b24	          0x4885c0	                           test rax, rax	      4491	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20
0x1b27	            0x7555	                           jne 0x4001bbe	      4491	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20
0x1b29	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	      4495	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21	CALL_22
0x1b2f	            0x89c6	                            mov esi, eax	      4495	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21	CALL_22
0x1b31	      0xbf00000000	                              mov edi, 0	      4495	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21	CALL_22
0x1b36	      0xe800000000	                          call 0x4001b7b	      4495	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21	CALL_22
0x1b3b	          0x4885c0	                           test rax, rax	      4495	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21	CALL_22
0x1b3e	     0xf85c91a0000	                           jne 0x400364d	      4495	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21	CALL_22
0x1b44	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      4496	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21
0x1b4a	            0x4898	                                    cdqe	      4496	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21
0x1b4c	        0x48c1e006	                              shl rax, 6	      4496	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21
0x1b50	    0x480500000000	                              add rax, 0	      4496	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21
0x1b56	          0x488b00	                    mov rax, qword [rax]	      4496	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21
0x1b59	          0x83e001	                              and eax, 1	      4496	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21
0x1b5c	          0x4885c0	                           test rax, rax	      4496	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21
0x1b5f	            0x740d	                            je 0x4001bae	      4496	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21
0x1b61	    0x83bd14ffffff	           cmp dword [rbp - 0xec], 0x3f 	      4497	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21
0x1b68	     0xf859f1a0000	                           jne 0x400364d	      4497	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21
0x1b6e	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	      4498	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	CALL_23
0x1b79	      0xe98f1a0000	                           jmp 0x400364d	      4499	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20
0x1b7e	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      4502	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19
0x1b84	            0x4898	                                    cdqe	      4502	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19
0x1b86	        0x48c1e006	                              shl rax, 6	      4502	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19
0x1b8a	    0x480500000000	                              add rax, 0	      4502	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19
0x1b90	          0x488b00	                    mov rax, qword [rax]	      4502	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19
0x1b93	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	      4502	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19
0x1b9a	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      4503	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	CALL_24
0x1ba0	            0x4898	                                    cdqe	      4503	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	CALL_24
0x1ba2	        0x48c1e006	                              shl rax, 6	      4503	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	CALL_24
0x1ba6	    0x488d90000000	                          lea rdx, [rax]	      4503	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	CALL_24
0x1bad	    0x8b85d4feffff	            mov eax, dword [rbp - 0x12c]	      4503	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	CALL_24
0x1bb3	            0x89c6	                            mov esi, eax	      4503	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	CALL_24
0x1bb5	          0x4889d7	                            mov rdi, rdx	      4503	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	CALL_24
0x1bb8	      0xe84cae0000	                 call sym.get_varp_scope	      4503	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	CALL_24
0x1bbd	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      4503	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	CALL_24
0x1bc4	            0xeb3c	                           jmp 0x4001c42	      4503	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	CALL_24
0x1bc6	    0x48c78530ffff	               mov qword [rbp - 0xd0], 4	      4507	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10
0x1bd1	    0x83bdf0feffff	              cmp dword [rbp - 0x110], 0	      4508	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	IF_22
0x1bd8	            0x791b	                           jns 0x4001c35	      4508	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	IF_22
0x1bda	    0x8b85f0feffff	            mov eax, dword [rbp - 0x110]	      4510	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	IF_22	CALL_25
0x1be0	            0xf7d8	                                 neg eax	      4510	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	IF_22	CALL_25
0x1be2	          0x884590	               mov byte [rbp - 0x70], al	      4510	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	IF_22	CALL_25
0x1be5	    0x8b85f0feffff	            mov eax, dword [rbp - 0x110]	      4511	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	IF_22	CALL_26
0x1beb	            0xf7d8	                                 neg eax	      4511	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	IF_22	CALL_26
0x1bed	          0xc1e808	                              shr eax, 8	      4511	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	IF_22	CALL_26
0x1bf0	          0x884591	               mov byte [rbp - 0x6f], al	      4511	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	IF_22	CALL_26
0x1bf3	            0xeb0d	                           jmp 0x4001c42	      4511	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	IF_22	CALL_26
0x1bf5	        0xc64590f2	            mov byte [rbp - 0x70], 0xf2 	      4515	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	ELSE_11
0x1bf9	    0x8b85f0feffff	            mov eax, dword [rbp - 0x110]	      4516	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	ELSE_11
0x1bff	          0x884591	               mov byte [rbp - 0x6f], al	      4516	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	ELSE_11
0x1c02	    0x8b85d4feffff	            mov eax, dword [rbp - 0x12c]	      4522	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x1c08	          0x83e010	                           and eax, 0x10	      4522	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x1c0b	            0x85c0	                           test eax, eax	      4522	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x1c0d	            0x742c	                            je 0x4001c7b	      4522	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x1c0f	    0x83bde4feffff	              cmp dword [rbp - 0x11c], 0	      4523	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x1c16	     0xf88f8190000	                            js 0x4003654	      4523	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x1c1c	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      4523	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x1c22	            0x4898	                                    cdqe	      4523	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x1c24	        0x48c1e006	                              shl rax, 6	      4523	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x1c28	    0x480500000000	                              add rax, 0	      4523	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x1c2e	          0x488b00	                    mov rax, qword [rax]	      4523	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x1c31	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      4523	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x1c35	     0xf85d9190000	                           jne 0x4003654	      4523	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x1c3b	    0x8b85d4feffff	            mov eax, dword [rbp - 0x12c]	      4527	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x1c41	          0x83e020	                           and eax, 0x20	      4527	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x1c44	            0x85c0	                           test eax, eax	      4527	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x1c46	            0x7428	                            je 0x4001cb0	      4527	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x1c48	    0x83bde4feffff	              cmp dword [rbp - 0x11c], 0	      4527	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x1c4f	            0x781f	                            js 0x4001cb0	      4527	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x1c51	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      4528	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x1c57	            0x4898	                                    cdqe	      4528	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x1c59	        0x48c1e006	                              shl rax, 6	      4528	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x1c5d	    0x480500000000	                              add rax, 0	      4528	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x1c63	          0x488b00	                    mov rax, qword [rax]	      4528	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x1c66	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      4528	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x1c6a	     0xf84a0190000	                            je 0x4003650	      4528	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x1c70	    0x8b85d4feffff	            mov eax, dword [rbp - 0x12c]	      4532	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25
0x1c76	          0x83e008	                              and eax, 8	      4532	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25
0x1c79	            0x85c0	                           test eax, eax	      4532	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25
0x1c7b	            0x747f	                            je 0x4001d3c	      4532	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25
0x1c7d	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4534	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_26
0x1c84	      0x2500000802	                      and eax, 0x2080000	      4534	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_26
0x1c89	          0x4885c0	                           test rax, rax	      4534	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_26
0x1c8c	            0x7416	                            je 0x4001ce4	      4534	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_26
0x1c8e	      0xbf00000000	                              mov edi, 0	      4536	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_26	CALL_27
0x1c93	      0xe800000000	                          call 0x4001cd8	      4536	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_26	CALL_27
0x1c98	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      4536	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_26	CALL_27
0x1c9f	      0xe970190000	                           jmp 0x4003654	      4537	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_26
0x1ca4	    0x488b05000000	            mov rax, qword [0x04001ceb] 	      4543	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x1cab	    0x8b80c0010000	           mov eax, dword [rax + 0x1c0] 	      4543	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x1cb1	            0x85c0	                           test eax, eax	      4543	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x1cb3	            0x7447	                            je 0x4001d3c	      4543	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x1cb5	    0x83bde4feffff	              cmp dword [rbp - 0x11c], 0	      4544	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x1cbc	            0x783e	                            js 0x4001d3c	      4544	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x1cbe	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      4547	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x1cc4	            0x4898	                                    cdqe	      4547	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x1cc6	        0x48c1e006	                              shl rax, 6	      4547	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x1cca	    0x480500000000	                              add rax, 0	      4547	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x1cd0	            0x8b00	                    mov eax, dword [rax]	      4547	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x1cd2	      0x3d0e200000	                         cmp eax, 0x200e	      4545	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x1cd7	     0xf8437190000	                            je 0x4003654	      4545	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x1cdd	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      4549	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x1ce3	            0x4898	                                    cdqe	      4549	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x1ce5	        0x48c1e006	                              shl rax, 6	      4549	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x1ce9	    0x480500000000	                              add rax, 0	      4549	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x1cef	            0x8b00	                    mov eax, dword [rax]	      4549	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x1cf1	      0x3d24200000	                         cmp eax, 0x2024	      4547	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x1cf6	     0xf8418190000	                            je 0x4003654	      4547	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x1cfc	    0x8b0500000000	            mov eax, dword [0x04001d42] 	      4556	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28
0x1d02	            0x85c0	                           test eax, eax	      4556	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28
0x1d04	            0x7427	                            je 0x4001d6d	      4556	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28
0x1d06	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4556	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28
0x1d0d	      0x2500000800	                        and eax, 0x80000	      4556	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28
0x1d12	          0x4885c0	                           test rax, rax	      4556	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28
0x1d15	            0x7416	                            je 0x4001d6d	      4556	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28
0x1d17	      0xbf00000000	                              mov edi, 0	      4558	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28	CALL_28
0x1d1c	      0xe800000000	                          call 0x4001d61	      4558	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28	CALL_28
0x1d21	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      4558	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28	CALL_28
0x1d28	      0xe9e7180000	                           jmp 0x4003654	      4559	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28
0x1d2d	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	CALL_29
0x1d33	            0x89c6	                            mov esi, eax	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	CALL_29
0x1d35	      0xbf00000000	                              mov edi, 0	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	CALL_29
0x1d3a	      0xe800000000	                          call 0x4001d7f	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	CALL_29
0x1d3f	          0x4885c0	                           test rax, rax	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	CALL_29
0x1d42	     0xf84fb000000	                            je 0x4001e83	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	CALL_29
0x1d48	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4565	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29
0x1d4f	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4565	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29
0x1d55	            0x4898	                                    cdqe	      4565	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29
0x1d57	          0x4801d0	                            add rax, rdx	      4565	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29
0x1d5a	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      4565	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29
0x1d61	    0x8b0500000000	            mov eax, dword [0x04001da7] 	      4566	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29
0x1d67	    0x898504ffffff	             mov dword [rbp - 0xfc], eax	      4566	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29
0x1d6d	    0x83bd14ffffff	           cmp dword [rbp - 0xec], 0x26 	      4567	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30
0x1d74	            0x7570	                           jne 0x4001e26	      4567	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30
0x1d76	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4567	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30
0x1d7d	        0x4883c001	                              add rax, 1	      4567	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30
0x1d81	           0xfb600	                   movzx eax, byte [rax]	      4567	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30
0x1d84	            0x3c76	                            cmp al, 0x76	      4567	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30
0x1d86	            0x755e	                           jne 0x4001e26	      4567	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30
0x1d88	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4567	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30
0x1d8f	        0x4883c002	                              add rax, 2	      4567	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30
0x1d93	           0xfb600	                   movzx eax, byte [rax]	      4567	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30
0x1d96	            0x3c69	                            cmp al, 0x69	      4567	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30
0x1d98	            0x754c	                           jne 0x4001e26	      4567	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30
0x1d9a	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4569	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	IF_31
0x1da1	        0x4883c003	                              add rax, 3	      4569	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	IF_31
0x1da5	           0xfb600	                   movzx eax, byte [rax]	      4569	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	IF_31
0x1da8	            0x3c6d	                            cmp al, 0x6d	      4569	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	IF_31
0x1daa	            0x751e	                           jne 0x4001e0a	      4569	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	IF_31
0x1dac	    0xc78504ffffff	               mov dword [rbp - 0xfc], 0	      4571	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	IF_31
0x1db6	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4572	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	IF_31
0x1dbd	        0x4883c003	                              add rax, 3	      4572	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	IF_31
0x1dc1	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      4572	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	IF_31
0x1dc8	            0xeb1c	                           jmp 0x4001e26	      4572	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	IF_31
0x1dca	    0xc78504ffffff	               mov dword [rbp - 0xfc], 1	      4576	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	ELSE_12
0x1dd4	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4577	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	ELSE_12
0x1ddb	        0x4883c002	                              add rax, 2	      4577	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	ELSE_12
0x1ddf	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      4577	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	ELSE_12
0x1de6	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	      4580	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_30
0x1dec	            0x89c6	                            mov esi, eax	      4580	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_30
0x1dee	      0xbf00000000	                              mov edi, 0	      4580	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_30
0x1df3	      0xe800000000	                          call 0x4001e38	      4580	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_30
0x1df8	          0x4885c0	                           test rax, rax	      4580	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_30
0x1dfb	            0x7446	                            je 0x4001e83	      4580	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_30
0x1dfd	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4581	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x1e04	        0x4883c001	                              add rax, 1	      4581	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x1e08	           0xfb600	                   movzx eax, byte [rax]	      4581	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x1e0b	            0x84c0	                             test al, al	      4581	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x1e0d	            0x7434	                            je 0x4001e83	      4581	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x1e0f	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4581	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x1e16	        0x4883c001	                              add rax, 1	      4581	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x1e1a	           0xfb600	                   movzx eax, byte [rax]	      4581	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x1e1d	            0x3c20	                            cmp al, 0x20	      4581	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x1e1f	            0x7422	                            je 0x4001e83	      4581	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x1e21	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4581	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x1e28	        0x4883c001	                              add rax, 1	      4581	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x1e2c	           0xfb600	                   movzx eax, byte [rax]	      4581	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x1e2f	            0x3c09	                               cmp al, 9	      4581	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x1e31	            0x7410	                            je 0x4001e83	      4581	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x1e33	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	      4583	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32
0x1e3e	      0xe9d1170000	                           jmp 0x4003654	      4584	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32
0x1e43	    0x83bd14ffffff	           cmp dword [rbp - 0xec], 0x3f 	      4592	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33
0x1e4a	            0x743b	                            je 0x4001ec7	      4592	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33
0x1e4c	    0x83bde8feffff	              cmp dword [rbp - 0x118], 1	      4593	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33
0x1e53	     0xf8508020000	                           jne 0x40020a1	      4593	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33
0x1e59	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	      4594	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	CALL_32
0x1e5f	            0x89c6	                            mov esi, eax	      4594	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	CALL_32
0x1e61	      0xbf00000000	                              mov edi, 0	      4594	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	CALL_32
0x1e66	      0xe800000000	                          call 0x4001eab	      4594	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	CALL_32
0x1e6b	          0x4885c0	                           test rax, rax	      4594	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	CALL_32
0x1e6e	     0xf85ed010000	                           jne 0x40020a1	      4594	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	CALL_32
0x1e74	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4595	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33
0x1e7b	          0x83e001	                              and eax, 1	      4595	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33
0x1e7e	          0x4885c0	                           test rax, rax	      4595	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33
0x1e81	     0xf85da010000	                           jne 0x40020a1	      4595	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33
0x1e87	    0x83bdf4feffff	              cmp dword [rbp - 0x10c], 0	      4600	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_34
0x1e8e	            0x740c	                            je 0x4001edc	      4600	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_34
0x1e90	      0xbf0a000000	                            mov edi, 0xa	      4601	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	CALL_33
0x1e95	      0xe800000000	                          call 0x4001eda	      4601	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	CALL_33
0x1e9a	            0xeb14	                           jmp 0x4001ef0	      4601	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	CALL_33
0x1e9c	      0xbf01000000	                              mov edi, 1	      4604	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_13	CALL_34
0x1ea1	      0xe800000000	                          call 0x4001ee6	      4604	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_13	CALL_34
0x1ea6	    0xc785f4feffff	              mov dword [rbp - 0x10c], 1	      4605	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_13
0x1eb0	    0x83bde4feffff	              cmp dword [rbp - 0x11c], 0	      4607	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35
0x1eb7	     0xf8821010000	                            js 0x400201e	      4607	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35
0x1ebd	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      4609	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	CALL_35
0x1ec3	            0x4898	                                    cdqe	      4609	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	CALL_35
0x1ec5	        0x48c1e006	                              shl rax, 6	      4609	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	CALL_35
0x1ec9	    0x488d90000000	                          lea rdx, [rax]	      4609	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	CALL_35
0x1ed0	    0x8b85d4feffff	            mov eax, dword [rbp - 0x12c]	      4609	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	CALL_35
0x1ed6	            0x89c6	                            mov esi, eax	      4609	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	CALL_35
0x1ed8	          0x4889d7	                            mov rdi, rdx	      4609	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	CALL_35
0x1edb	      0xe8189b0000	                     call sym.showoneopt	      4609	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	CALL_35
0x1ee0	    0x488b05000000	            mov rax, qword [0x04001f27] 	      4611	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36
0x1ee7	          0x4885c0	                           test rax, rax	      4611	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36
0x1eea	     0xf8e2d010000	                           jle 0x400205d	      4611	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36
0x1ef0	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      4614	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	IF_37
0x1ef6	            0x4898	                                    cdqe	      4614	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	IF_37
0x1ef8	        0x48c1e006	                              shl rax, 6	      4614	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	IF_37
0x1efc	    0x480500000000	                              add rax, 0	      4614	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	IF_37
0x1f02	          0x488b00	                    mov rax, qword [rax]	      4614	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	IF_37
0x1f05	    0x483b8538ffff	             cmp rax, qword [rbp - 0xc8]	      4614	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	IF_37
0x1f0c	            0x7520	                           jne 0x4001f6e	      4614	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	IF_37
0x1f0e	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      4615	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	CALL_36
0x1f14	            0x4898	                                    cdqe	      4615	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	CALL_36
0x1f16	        0x48c1e006	                              shl rax, 6	      4615	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	CALL_36
0x1f1a	    0x480500000000	                              add rax, 0	      4615	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	CALL_36
0x1f20	            0x8b00	                    mov eax, dword [rax]	      4615	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	CALL_36
0x1f22	            0x89c7	                            mov edi, eax	      4615	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	CALL_36
0x1f24	      0xe800000000	                          call 0x4001f69	      4615	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	CALL_36
0x1f29	      0xe9ef000000	                           jmp 0x400205d	      4615	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	CALL_36
0x1f2e	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      4616	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38
0x1f34	            0x4898	                                    cdqe	      4616	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38
0x1f36	        0x48c1e006	                              shl rax, 6	      4616	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38
0x1f3a	    0x480500000000	                              add rax, 0	      4616	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38
0x1f40	            0x8b00	                    mov eax, dword [rax]	      4616	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38
0x1f42	      0x2500200000	                         and eax, 0x2000	      4616	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38
0x1f47	            0x85c0	                           test eax, eax	      4616	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38
0x1f49	            0x743c	                            je 0x4001fc7	      4616	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38
0x1f4b	    0x488b05000000	            mov rax, qword [0x04001f92] 	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38	CALL_37
0x1f52	    0x8b95e4feffff	            mov edx, dword [rbp - 0x11c]	      4618	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38
0x1f58	          0x4863d2	                         movsxd rdx, edx	      4618	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38
0x1f5b	        0x48c1e206	                              shl rdx, 6	      4618	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38
0x1f5f	    0x4881c2000000	                              add rdx, 0	      4618	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38
0x1f66	            0x8b12	                    mov edx, dword [rdx]	      4618	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38
0x1f68	    0x81e2ff0f0000	                          and edx, 0xfff	      4618	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38
0x1f6e	          0x4863d2	                         movsxd rdx, edx	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38	CALL_37
0x1f71	    0x4881c2b40000	                           add rdx, 0xb4	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38	CALL_37
0x1f78	          0x8b0490	            mov eax, dword [rax + rdx*4]	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38	CALL_37
0x1f7b	            0x89c7	                            mov edi, eax	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38	CALL_37
0x1f7d	      0xe800000000	                          call 0x4001fc2	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38	CALL_37
0x1f82	      0xe996000000	                           jmp 0x400205d	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38	CALL_37
0x1f87	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      4619	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39
0x1f8d	            0x4898	                                    cdqe	      4619	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39
0x1f8f	        0x48c1e006	                              shl rax, 6	      4619	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39
0x1f93	    0x480500000000	                              add rax, 0	      4619	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39
0x1f99	            0x8b00	                    mov eax, dword [rax]	      4619	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39
0x1f9b	      0x2500400000	                         and eax, 0x4000	      4619	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39
0x1fa0	            0x85c0	                           test eax, eax	      4619	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39
0x1fa2	            0x7479	                            je 0x400205d	      4619	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39
0x1fa4	    0x488b05000000	            mov rax, qword [0x04001feb] 	      4620	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39	CALL_38
0x1fab	    0x8b95e4feffff	            mov edx, dword [rbp - 0x11c]	      4621	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39
0x1fb1	          0x4863d2	                         movsxd rdx, edx	      4621	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39
0x1fb4	        0x48c1e206	                              shl rdx, 6	      4621	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39
0x1fb8	    0x4881c2000000	                              add rdx, 0	      4621	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39
0x1fbf	            0x8b12	                    mov edx, dword [rdx]	      4621	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39
0x1fc1	    0x81e2ff0f0000	                          and edx, 0xfff	      4621	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39
0x1fc7	          0x4863d2	                         movsxd rdx, edx	      4620	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39	CALL_38
0x1fca	    0x4881c2a40400	                          add rdx, 0x4a4	      4620	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39	CALL_38
0x1fd1	        0x8b44900c	     mov eax, dword [rax + rdx*4 + 0xc] 	      4620	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39	CALL_38
0x1fd5	            0x89c7	                            mov edi, eax	      4620	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39	CALL_38
0x1fd7	      0xe800000000	                          call 0x400201c	      4620	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39	CALL_38
0x1fdc	            0xeb3f	                           jmp 0x400205d	      4620	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39	CALL_38
0x1fde	        0x488d4590	                   lea rax, [rbp - 0x70]	      4629	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	CALL_39
0x1fe2	          0x4889c7	                            mov rdi, rax	      4629	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	CALL_39
0x1fe5	      0xe800000000	                          call 0x400202a	      4629	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	CALL_39
0x1fea	        0x48894588	             mov qword [rbp - 0x78], rax	      4629	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	CALL_39
0x1fee	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      4630	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	IF_40
0x1ff3	            0x7510	                           jne 0x4002045	      4630	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	IF_40
0x1ff5	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	      4632	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	IF_40	CALL_40
0x2000	      0xe90f160000	                           jmp 0x4003654	      4633	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	IF_40
0x2005	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	      4636	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	CALL_41
0x2009	        0x488d4590	                   lea rax, [rbp - 0x70]	      4636	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	CALL_41
0x200d	      0xba01000000	                              mov edx, 1	      4636	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	CALL_41
0x2012	          0x4889ce	                            mov rsi, rcx	      4636	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	CALL_41
0x2015	          0x4889c7	                            mov rdi, rax	      4636	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	CALL_41
0x2018	      0xe800000000	                          call 0x400205d	      4636	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	CALL_41
0x201d	    0x83bd14ffffff	           cmp dword [rbp - 0xec], 0x3f 	      4638	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41
0x2024	     0xf84e9150000	                            je 0x4003653	      4638	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41
0x202a	    0x83bd14ffffff	               cmp dword [rbp - 0xec], 0	      4639	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41	CALL_42
0x2031	     0xf84dc150000	                            je 0x4003653	      4639	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41	CALL_42
0x2037	    0x83bd18ffffff	           cmp dword [rbp - 0xe8], 0x20 	      4639	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41	CALL_42
0x203e	     0xf84cf150000	                            je 0x4003653	      4639	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41	CALL_42
0x2044	    0x83bd18ffffff	               cmp dword [rbp - 0xe8], 9	      4639	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41	CALL_42
0x204b	     0xf84c2150000	                            je 0x4003653	      4639	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41	CALL_42
0x2051	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	      4640	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41
0x205c	      0xe9b2150000	                           jmp 0x4003653	      4638	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41
0x2061	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4644	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42
0x2068	          0x83e001	                              and eax, 1	      4644	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42
0x206b	          0x4885c0	                           test rax, rax	      4644	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42
0x206e	     0xf8491010000	                            je 0x4002245	      4644	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42
0x2074	    0x83bd14ffffff	           cmp dword [rbp - 0xec], 0x3d 	      4646	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_43
0x207b	            0x7409	                            je 0x40020c6	      4646	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_43
0x207d	    0x83bd14ffffff	           cmp dword [rbp - 0xec], 0x3a 	      4646	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_43
0x2084	            0x7510	                           jne 0x40020d6	      4646	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_43
0x2086	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	      4648	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_43
0x2091	      0xe97e150000	                           jmp 0x4003654	      4649	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_43
0x2096	    0x83bd14ffffff	           cmp dword [rbp - 0xec], 0x21 	      4657	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_44
0x209d	            0x751a	                           jne 0x40020f9	      4657	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_44
0x209f	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4658	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_44
0x20a6	            0x8b00	                    mov eax, dword [rax]	      4658	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_44
0x20a8	          0x83f001	                              xor eax, 1	      4658	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_44
0x20ab	            0x4898	                                    cdqe	      4658	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_44
0x20ad	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      4658	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_44
0x20b4	      0xe919010000	                           jmp 0x4002212	      4658	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_44
0x20b9	    0x83bd14ffffff	           cmp dword [rbp - 0xec], 0x26 	      4659	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x20c0	            0x7552	                           jne 0x4002154	      4659	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x20c2	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4661	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x20c9	      0x2500040000	                          and eax, 0x400	      4661	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x20ce	          0x4885c0	                           test rax, rax	      4662	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x20d1	            0x7510	                           jne 0x4002123	      4662	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x20d3	    0x83bd04ffffff	               cmp dword [rbp - 0xfc], 0	      4662	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x20da	            0x7507	                           jne 0x4002123	      4662	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x20dc	      0xb801000000	                              mov eax, 1	      4662	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x20e1	            0xeb05	                           jmp 0x4002128	      4662	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x20e3	      0xb800000000	                              mov eax, 0	      4662	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x20e8	            0x4898	                                    cdqe	      4660	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x20ea	    0x8b95e4feffff	            mov edx, dword [rbp - 0x11c]	      4660	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x20f0	          0x4863d2	                         movsxd rdx, edx	      4660	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x20f3	        0x48c1e203	                              shl rdx, 3	      4660	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x20f7	          0x4801d0	                            add rax, rdx	      4660	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x20fa	        0x4883c004	                              add rax, 4	      4660	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x20fe	    0x488b04c50000	                  mov rax, qword [rax*8]	      4660	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x2106	            0x4898	                                    cdqe	      4660	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x2108	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      4660	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x210f	      0xe9be000000	                           jmp 0x4002212	      4660	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x2114	    0x83bd14ffffff	           cmp dword [rbp - 0xec], 0x3c 	      4663	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46
0x211b	            0x755b	                           jne 0x40021b8	      4663	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46
0x211d	    0x488b05000000	            mov rax, qword [0x04002164] 	      4666	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	IF_47
0x2124	    0x480500160000	                         add rax, 0x1600	      4666	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	IF_47
0x212a	    0x483b8538ffff	             cmp rax, qword [rbp - 0xc8]	      4666	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	IF_47
0x2131	            0x7519	                           jne 0x400218c	      4666	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	IF_47
0x2133	    0x83bdd4feffff	              cmp dword [rbp - 0x12c], 4	      4667	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	IF_47
0x213a	            0x7510	                           jne 0x400218c	      4667	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	IF_47
0x213c	    0x48c78520ffff	mov qword [rbp - 0xe0], 0xffffffffffffffff	      4668	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	IF_47
0x2147	      0xe986000000	                           jmp 0x4002212	      4668	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	IF_47
0x214c	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      4670	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	ELSE_21	CALL_43
0x2152	            0x4898	                                    cdqe	      4670	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	ELSE_21	CALL_43
0x2154	        0x48c1e006	                              shl rax, 6	      4670	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	ELSE_21	CALL_43
0x2158	    0x480500000000	                              add rax, 0	      4670	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	ELSE_21	CALL_43
0x215e	      0xbe02000000	                              mov esi, 2	      4670	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	ELSE_21	CALL_43
0x2163	          0x4889c7	                            mov rdi, rax	      4670	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	ELSE_21	CALL_43
0x2166	      0xe89ea80000	                 call sym.get_varp_scope	      4670	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	ELSE_21	CALL_43
0x216b	            0x8b00	                    mov eax, dword [rax]	      4670	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	ELSE_21	CALL_43
0x216d	            0x4898	                                    cdqe	      4670	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	ELSE_21	CALL_43
0x216f	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      4670	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	ELSE_21	CALL_43
0x2176	            0xeb5a	                           jmp 0x4002212	      4670	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	ELSE_21	CALL_43
0x2178	    0x83bd14ffffff	               cmp dword [rbp - 0xec], 0	      4679	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_48	CALL_44
0x217f	            0x7422	                            je 0x40021e3	      4679	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_48	CALL_44
0x2181	    0x83bd18ffffff	           cmp dword [rbp - 0xe8], 0x20 	      4679	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_48	CALL_44
0x2188	            0x7419	                            je 0x40021e3	      4679	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_48	CALL_44
0x218a	    0x83bd18ffffff	               cmp dword [rbp - 0xe8], 9	      4679	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_48	CALL_44
0x2191	            0x7410	                            je 0x40021e3	      4679	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_48	CALL_44
0x2193	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	      4681	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_48
0x219e	      0xe971140000	                           jmp 0x4003654	      4682	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_48
0x21a3	    0x83bde8feffff	              cmp dword [rbp - 0x118], 2	      4684	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_49
0x21aa	            0x7517	                           jne 0x4002203	      4684	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_49
0x21ac	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4685	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_49
0x21b3	            0x8b00	                    mov eax, dword [rax]	      4685	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_49
0x21b5	          0x83f001	                              xor eax, 1	      4685	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_49
0x21b8	            0x4898	                                    cdqe	      4685	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_49
0x21ba	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      4685	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_49
0x21c1	            0xeb0f	                           jmp 0x4002212	      4685	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_49
0x21c3	    0x8b85e8feffff	            mov eax, dword [rbp - 0x118]	      4687	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	ELSE_23
0x21c9	            0x4898	                                    cdqe	      4687	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	ELSE_23
0x21cb	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      4687	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	ELSE_23
0x21d2	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      4690	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	CALL_45
0x21d9	            0x89c7	                            mov edi, eax	      4690	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	CALL_45
0x21db	    0x8b95d4feffff	            mov edx, dword [rbp - 0x12c]	      4690	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	CALL_45
0x21e1	    0x488bb538ffff	             mov rsi, qword [rbp - 0xc8]	      4690	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	CALL_45
0x21e8	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      4690	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	CALL_45
0x21ee	            0x89d1	                            mov ecx, edx	      4690	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	CALL_45
0x21f0	            0x89fa	                            mov edx, edi	      4690	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	CALL_45
0x21f2	            0x89c7	                            mov edi, eax	      4690	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	CALL_45
0x21f4	      0xe80e6a0000	                call sym.set_bool_option	      4690	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	CALL_45
0x21f9	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      4690	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	CALL_45
0x2200	      0xe9c1130000	                           jmp 0x4003606	      4690	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	CALL_45
0x2205	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	      4695	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50	CALL_46
0x220b	            0x89c6	                            mov esi, eax	      4695	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50	CALL_46
0x220d	      0xbf00000000	                              mov edi, 0	      4695	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50	CALL_46
0x2212	      0xe800000000	                          call 0x4002257	      4695	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50	CALL_46
0x2217	          0x4885c0	                           test rax, rax	      4695	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50	CALL_46
0x221a	            0x7409	                            je 0x4002265	      4695	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50	CALL_46
0x221c	    0x83bde8feffff	              cmp dword [rbp - 0x118], 1	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50
0x2223	            0x7410	                            je 0x4002275	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50
0x2225	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	      4698	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50
0x2230	      0xe9df130000	                           jmp 0x4003654	      4699	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50
0x2235	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4702	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51
0x223c	          0x83e002	                              and eax, 2	      4702	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51
0x223f	          0x4885c0	                           test rax, rax	      4702	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51
0x2242	     0xf8430030000	                            je 0x40025b8	      4702	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51
0x2248	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4713	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51
0x224f	        0x4883c001	                              add rax, 1	      4713	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51
0x2253	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      4713	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51
0x225a	    0x83bd14ffffff	           cmp dword [rbp - 0xec], 0x26 	      4714	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x2261	            0x7550	                           jne 0x40022f3	      4714	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x2263	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4716	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x226a	      0x2500040000	                          and eax, 0x400	      4716	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x226f	          0x4885c0	                           test rax, rax	      4717	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x2272	            0x7510	                           jne 0x40022c4	      4717	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x2274	    0x83bd04ffffff	               cmp dword [rbp - 0xfc], 0	      4717	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x227b	            0x7507	                           jne 0x40022c4	      4717	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x227d	      0xb801000000	                              mov eax, 1	      4717	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x2282	            0xeb05	                           jmp 0x40022c9	      4717	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x2284	      0xb800000000	                              mov eax, 0	      4717	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x2289	            0x4898	                                    cdqe	      4715	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x228b	    0x8b95e4feffff	            mov edx, dword [rbp - 0x11c]	      4715	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x2291	          0x4863d2	                         movsxd rdx, edx	      4715	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x2294	        0x48c1e203	                              shl rdx, 3	      4715	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x2298	          0x4801d0	                            add rax, rdx	      4715	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x229b	        0x4883c004	                              add rax, 4	      4715	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x229f	    0x488b04c50000	                  mov rax, qword [rax*8]	      4715	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x22a7	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      4715	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x22ae	      0xe91b020000	                           jmp 0x400250e	      4715	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x22b3	    0x83bd14ffffff	           cmp dword [rbp - 0xec], 0x3c 	      4718	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53
0x22ba	            0x755d	                           jne 0x4002359	      4718	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53
0x22bc	    0x488b05000000	            mov rax, qword [0x04002303] 	      4722	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	IF_54
0x22c3	    0x480530160000	                         add rax, 0x1630	      4722	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	IF_54
0x22c9	    0x483b8538ffff	             cmp rax, qword [rbp - 0xc8]	      4722	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	IF_54
0x22d0	            0x7519	                           jne 0x400232b	      4722	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	IF_54
0x22d2	    0x83bdd4feffff	              cmp dword [rbp - 0x12c], 4	      4723	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	IF_54
0x22d9	            0x7510	                           jne 0x400232b	      4723	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	IF_54
0x22db	    0x48c78520ffff	mov qword [rbp - 0xe0], 0xfffffffffffe1dc0	      4724	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	IF_54
0x22e6	      0xe9e3010000	                           jmp 0x400250e	      4724	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	IF_54
0x22eb	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      4726	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	ELSE_26	CALL_47
0x22f1	            0x4898	                                    cdqe	      4726	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	ELSE_26	CALL_47
0x22f3	        0x48c1e006	                              shl rax, 6	      4726	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	ELSE_26	CALL_47
0x22f7	    0x480500000000	                              add rax, 0	      4726	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	ELSE_26	CALL_47
0x22fd	      0xbe02000000	                              mov esi, 2	      4726	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	ELSE_26	CALL_47
0x2302	          0x4889c7	                            mov rdi, rax	      4726	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	ELSE_26	CALL_47
0x2305	      0xe8ffa60000	                 call sym.get_varp_scope	      4726	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	ELSE_26	CALL_47
0x230a	          0x488b00	                    mov rax, qword [rax]	      4726	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	ELSE_26	CALL_47
0x230d	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      4726	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	ELSE_26	CALL_47
0x2314	      0xe9b5010000	                           jmp 0x400250e	      4726	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	ELSE_26	CALL_47
0x2319	    0x4881bd38ffff	               cmp qword [rbp - 0xc8], 0	      4729	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x2324	            0x7411	                            je 0x4002377	      4729	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x2326	    0x4881bd38ffff	               cmp qword [rbp - 0xc8], 0	      4730	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x2331	     0xf85c7000000	                           jne 0x400243e	      4730	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x2337	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4731	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x233e	           0xfb600	                   movzx eax, byte [rax]	      4731	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x2341	            0x3c3c	                            cmp al, 0x3c	      4731	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x2343	            0x746b	                            je 0x40023f0	      4731	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x2345	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4732	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x234c	           0xfb600	                   movzx eax, byte [rax]	      4732	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x234f	            0x3c5e	                            cmp al, 0x5e	      4732	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x2351	            0x745d	                            je 0x40023f0	      4732	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x2353	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4733	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x235a	           0xfb600	                   movzx eax, byte [rax]	      4733	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x235d	            0x84c0	                             test al, al	      4733	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x235f	     0xf8499000000	                            je 0x400243e	      4733	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x2365	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4734	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_48
0x236c	        0x4883c001	                              add rax, 1	      4734	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_48
0x2370	           0xfb600	                   movzx eax, byte [rax]	      4734	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_48
0x2373	            0x84c0	                             test al, al	      4734	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_48
0x2375	            0x7424	                            je 0x40023db	      4734	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_48
0x2377	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4734	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_48
0x237e	        0x4883c001	                              add rax, 1	      4734	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_48
0x2382	           0xfb600	                   movzx eax, byte [rax]	      4734	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_48
0x2385	            0x3c20	                            cmp al, 0x20	      4734	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_48
0x2387	            0x7412	                            je 0x40023db	      4734	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_48
0x2389	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4734	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_48
0x2390	        0x4883c001	                              add rax, 1	      4734	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_48
0x2394	           0xfb600	                   movzx eax, byte [rax]	      4734	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_48
0x2397	            0x3c09	                               cmp al, 9	      4734	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_48
0x2399	            0x7563	                           jne 0x400243e	      4734	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_48
0x239b	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4735	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_49
0x23a2	           0xfb600	                   movzx eax, byte [rax]	      4735	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_49
0x23a5	           0xfb6c0	                           movzx eax, al	      4735	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_49
0x23a8	          0x83e830	                           sub eax, 0x30	      4735	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_49
0x23ab	          0x83f809	                              cmp eax, 9	      4735	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_49
0x23ae	            0x764e	                           jbe 0x400243e	      4735	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_49
0x23b0	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4737	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_50
0x23b7	      0xbe00000000	                              mov esi, 0	      4737	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_50
0x23bc	          0x4889c7	                            mov rdi, rax	      4737	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_50
0x23bf	      0xe800000000	                          call 0x4002404	      4737	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_50
0x23c4	            0x4898	                                    cdqe	      4737	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_50
0x23c6	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      4737	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_50
0x23cd	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      4738	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	IF_56
0x23d4	          0x4885c0	                           test rax, rax	      4738	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	IF_56
0x23d7	     0xf85ed000000	                           jne 0x400250a	      4738	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	IF_56
0x23dd	    0x4881bd38ffff	               cmp qword [rbp - 0xc8], 0	      4738	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	IF_56
0x23e8	     0xf84dc000000	                            je 0x400250a	      4738	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	IF_56
0x23ee	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	      4740	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	IF_56
0x23f9	      0xe916120000	                           jmp 0x4003654	      4741	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	IF_56
0x23fe	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4744	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_51
0x2405	           0xfb600	                   movzx eax, byte [rax]	      4744	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_51
0x2408	            0x3c2d	                            cmp al, 0x2d	      4744	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_51
0x240a	            0x7419	                            je 0x4002465	      4744	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_51
0x240c	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4744	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_51
0x2413	           0xfb600	                   movzx eax, byte [rax]	      4744	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_51
0x2416	           0xfb6c0	                           movzx eax, al	      4744	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_51
0x2419	          0x83e830	                           sub eax, 0x30	      4744	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_51
0x241c	          0x83f809	                              cmp eax, 9	      4744	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_51
0x241f	     0xf8795000000	                            ja 0x40024fa	      4744	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_51
0x2425	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4748	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_52
0x242c	    0x488d8d20ffff	                   lea rcx, [rbp - 0xe0]	      4748	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_52
0x2433	    0x488d95e0feff	                  lea rdx, [rbp - 0x120]	      4748	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_52
0x243a	        0x4883ec08	                              sub rsp, 8	      4748	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_52
0x243e	            0x6a00	                                  push 0	      4748	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_52
0x2440	    0x41b900000000	                              mov r9d, 0	      4748	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_52
0x2446	          0x4989c8	                             mov r8, rcx	      4748	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_52
0x2449	      0xb907000000	                              mov ecx, 7	      4748	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_52
0x244e	      0xbe00000000	                              mov esi, 0	      4748	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_52
0x2453	          0x4889c7	                            mov rdi, rax	      4748	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_52
0x2456	      0xe800000000	                          call 0x400249b	      4748	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_52
0x245b	        0x4883c410	                           add rsp, 0x10	      4748	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_52
0x245f	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4750	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x2466	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      4750	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x246c	            0x4898	                                    cdqe	      4750	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x246e	          0x4801d0	                            add rax, rdx	      4750	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x2471	           0xfb600	                   movzx eax, byte [rax]	      4750	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x2474	            0x84c0	                             test al, al	      4750	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x2476	            0x7455	                            je 0x400250d	      4750	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x2478	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4750	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x247f	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      4750	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x2485	            0x4898	                                    cdqe	      4750	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x2487	          0x4801d0	                            add rax, rdx	      4750	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x248a	           0xfb600	                   movzx eax, byte [rax]	      4750	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x248d	            0x3c20	                            cmp al, 0x20	      4750	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x248f	            0x743c	                            je 0x400250d	      4750	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x2491	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4750	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x2498	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      4750	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x249e	            0x4898	                                    cdqe	      4750	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x24a0	          0x4801d0	                            add rax, rdx	      4750	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x24a3	           0xfb600	                   movzx eax, byte [rax]	      4750	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x24a6	            0x3c09	                               cmp al, 9	      4750	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x24a8	            0x7423	                            je 0x400250d	      4750	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x24aa	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	      4752	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58
0x24b5	      0xe95a110000	                           jmp 0x4003654	      4753	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58
0x24ba	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	      4758	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_29	CALL_54
0x24c5	      0xe94a110000	                           jmp 0x4003654	      4759	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_29
0x24ca	              0x90	                                     nop	      4738	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	IF_56
0x24cb	            0xeb01	                           jmp 0x400250e	      4738	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	IF_56
0x24cd	              0x90	                                     nop	      4750	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x24ce	    0x83bdf8feffff	              cmp dword [rbp - 0x108], 0	      4762	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_59
0x24d5	            0x741b	                            je 0x4002532	      4762	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_59
0x24d7	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4763	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_59
0x24de	          0x488b10	                    mov rdx, qword [rax]	      4763	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_59
0x24e1	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      4763	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_59
0x24e8	          0x4801d0	                            add rax, rdx	      4763	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_59
0x24eb	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      4763	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_59
0x24f2	    0x83bdfcfeffff	              cmp dword [rbp - 0x104], 0	      4764	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_60
0x24f9	            0x741c	                            je 0x4002557	      4764	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_60
0x24fb	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4765	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_60
0x2502	          0x488b10	                    mov rdx, qword [rax]	      4765	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_60
0x2505	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      4765	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_60
0x250c	        0x480fafc2	                           imul rax, rdx	      4765	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_60
0x2510	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      4765	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_60
0x2517	    0x83bd00ffffff	              cmp dword [rbp - 0x100], 0	      4766	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_61
0x251e	            0x741e	                            je 0x400257e	      4766	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_61
0x2520	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4767	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_61
0x2527	          0x488b10	                    mov rdx, qword [rax]	      4767	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_61
0x252a	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      4767	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_61
0x2531	          0x4829c2	                            sub rdx, rax	      4767	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_61
0x2534	          0x4889d0	                            mov rax, rdx	      4767	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_61
0x2537	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      4767	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_61
0x253e	    0x488b9520ffff	             mov rdx, qword [rbp - 0xe0]	      4768	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	CALL_55
0x2545	    0x8bbdd4feffff	            mov edi, dword [rbp - 0x12c]	      4768	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	CALL_55
0x254b	        0x488d4da0	                   lea rcx, [rbp - 0x60]	      4768	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	CALL_55
0x254f	    0x488bb538ffff	             mov rsi, qword [rbp - 0xc8]	      4768	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	CALL_55
0x2556	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      4768	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	CALL_55
0x255c	          0x4189f9	                            mov r9d, edi	      4768	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	CALL_55
0x255f	    0x41b850000000	                           mov r8d, 0x50	      4768	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	CALL_55
0x2565	            0x89c7	                            mov edi, eax	      4768	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	CALL_55
0x2567	      0xe8ce750000	                 call sym.set_num_option	      4768	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	CALL_55
0x256c	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      4768	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	CALL_55
0x2573	      0xe94e100000	                           jmp 0x4003606	      4768	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	CALL_55
0x2578	    0x83bde4feffff	              cmp dword [rbp - 0x11c], 0	      4771	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x257f	     0xf882c0f0000	                            js 0x40034f1	      4771	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x2585	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	      4773	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x2590	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	      4774	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x259b	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	      4775	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x25a6	    0x48c78560ffff	               mov qword [rbp - 0xa0], 0	      4777	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x25b1	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	      4779	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x25bc	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	      4780	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x25c7	    0x8b85d4feffff	            mov eax, dword [rbp - 0x12c]	      4791	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x25cd	          0x83e006	                              and eax, 6	      4791	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x25d0	            0x85c0	                           test eax, eax	      4791	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x25d2	            0x7539	                           jne 0x400264d	      4791	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x25d4	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      4792	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x25da	            0x4898	                                    cdqe	      4792	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x25dc	        0x48c1e006	                              shl rax, 6	      4792	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x25e0	    0x480500000000	                              add rax, 0	      4792	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x25e6	            0x8b00	                    mov eax, dword [rax]	      4792	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x25e8	      0x2500100000	                         and eax, 0x1000	      4792	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x25ed	            0x85c0	                           test eax, eax	      4792	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x25ef	            0x741c	                            je 0x400264d	      4792	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x25f1	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      4793	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x25f7	            0x4898	                                    cdqe	      4793	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x25f9	        0x48c1e006	                              shl rax, 6	      4793	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x25fd	    0x480500000000	                              add rax, 0	      4793	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x2603	          0x488b00	                    mov rax, qword [rax]	      4793	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x2606	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      4793	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x260d	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4797	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x2614	          0x488b00	                    mov rax, qword [rax]	      4797	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x2617	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      4797	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x261e	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      4801	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64
0x2624	            0x4898	                                    cdqe	      4801	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64
0x2626	        0x48c1e006	                              shl rax, 6	      4801	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64
0x262a	    0x480500000000	                              add rax, 0	      4801	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64
0x2630	            0x8b00	                    mov eax, dword [rax]	      4801	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64
0x2632	      0x2500100000	                         and eax, 0x1000	      4801	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64
0x2637	            0x85c0	                           test eax, eax	      4801	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64
0x2639	            0x7433	                            je 0x40026ae	      4801	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64
0x263b	    0x8b85d4feffff	            mov eax, dword [rbp - 0x12c]	      4802	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64
0x2641	          0x83e004	                              and eax, 4	      4802	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64
0x2644	            0x85c0	                           test eax, eax	      4802	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64
0x2646	            0x7426	                            je 0x40026ae	      4802	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64
0x2648	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      4803	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64	CALL_56
0x264e	            0x4898	                                    cdqe	      4803	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64	CALL_56
0x2650	        0x48c1e006	                              shl rax, 6	      4803	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64	CALL_56
0x2654	    0x480500000000	                              add rax, 0	      4803	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64	CALL_56
0x265a	          0x4889c7	                            mov rdi, rax	      4803	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64	CALL_56
0x265d	      0xe8dda60000	                       call sym.get_varp	      4803	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64	CALL_56
0x2662	          0x488b00	                    mov rax, qword [rax]	      4803	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64	CALL_56
0x2665	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      4803	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64	CALL_56
0x266c	            0xeb0e	                           jmp 0x40026bc	      4803	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64	CALL_56
0x266e	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      4806	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31
0x2675	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      4806	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31
0x267c	    0x83bd14ffffff	           cmp dword [rbp - 0xec], 0x26 	      4808	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x2683	     0xf85d9000000	                           jne 0x40027a2	      4808	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x2689	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4811	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x2690	      0x2500040000	                          and eax, 0x400	      4811	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x2695	          0x4885c0	                           test rax, rax	      4812	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x2698	            0x7510	                           jne 0x40026ea	      4812	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x269a	    0x83bd04ffffff	               cmp dword [rbp - 0xfc], 0	      4812	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x26a1	            0x7507	                           jne 0x40026ea	      4812	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x26a3	      0xb801000000	                              mov eax, 1	      4812	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x26a8	            0xeb05	                           jmp 0x40026ef	      4812	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x26aa	      0xb800000000	                              mov eax, 0	      4812	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x26af	            0x4898	                                    cdqe	      4810	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x26b1	    0x8b95e4feffff	            mov edx, dword [rbp - 0x11c]	      4810	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x26b7	          0x4863d2	                         movsxd rdx, edx	      4810	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x26ba	        0x48c1e203	                              shl rdx, 3	      4810	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x26be	          0x4801d0	                            add rax, rdx	      4810	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x26c1	        0x4883c004	                              add rax, 4	      4810	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x26c5	    0x488b04c50000	                  mov rax, qword [rax*8]	      4810	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x26cd	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      4810	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x26d4	    0x4881bd38ffff	               cmp qword [rbp - 0xc8], 0	      4813	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_66
0x26df	            0x750c	                           jne 0x400272d	      4813	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_66
0x26e1	      0xe83ae6ffff	                call sym.term_bg_default	      4821	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_66	CALL_58
0x26e6	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      4821	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_66	CALL_58
0x26ed	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      4828	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_68
0x26f5	            0x7510	                           jne 0x4002747	      4828	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_68
0x26f7	    0x488b05000000	            mov rax, qword [0x0400273e] 	      4829	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_68
0x26fe	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      4829	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_68
0x2705	            0xeb4c	                           jmp 0x4002793	      4829	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_68
0x2707	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      4832	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	CALL_59
0x270e	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      4832	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	CALL_59
0x2714	          0x4889d6	                            mov rsi, rdx	      4832	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	CALL_59
0x2717	            0x89c7	                            mov edi, eax	      4832	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	CALL_59
0x2719	      0xe8f2160000	                  call sym.option_expand	      4832	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	CALL_59
0x271e	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      4832	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	CALL_59
0x2725	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      4833	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	IF_69
0x272d	            0x750e	                           jne 0x400277d	      4833	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	IF_69
0x272f	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4834	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	IF_69
0x2736	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      4834	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	IF_69
0x273d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      4835	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	CALL_60
0x2744	          0x4889c7	                            mov rdi, rax	      4835	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	CALL_60
0x2747	      0xe800000000	                          call 0x400278c	      4835	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	CALL_60
0x274c	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      4835	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	CALL_60
0x2753	    0xc78510ffffff	               mov dword [rbp - 0xf0], 1	      4837	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x275d	      0xe9440c0000	                           jmp 0x40033e6	      4837	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x2762	    0x83bd14ffffff	           cmp dword [rbp - 0xec], 0x3c 	      4839	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70
0x2769	            0x7540	                           jne 0x40027eb	      4839	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70
0x276b	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      4841	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70	CALL_62
0x2771	            0x4898	                                    cdqe	      4841	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70	CALL_62
0x2773	        0x48c1e006	                              shl rax, 6	      4841	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70	CALL_62
0x2777	    0x480500000000	                              add rax, 0	      4841	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70	CALL_62
0x277d	      0xbe02000000	                              mov esi, 2	      4841	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70	CALL_62
0x2782	          0x4889c7	                            mov rdi, rax	      4841	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70	CALL_62
0x2785	      0xe87fa20000	                 call sym.get_varp_scope	      4841	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70	CALL_62
0x278a	          0x488b00	                    mov rax, qword [rax]	      4841	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70	CALL_62
0x278d	          0x4889c7	                            mov rdi, rax	      4841	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70	CALL_62
0x2790	      0xe800000000	                          call 0x40027d5	      4841	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70	CALL_62
0x2795	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      4841	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70	CALL_62
0x279c	    0xc78510ffffff	               mov dword [rbp - 0xf0], 1	      4843	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70
0x27a6	      0xe9fb0b0000	                           jmp 0x40033e6	      4843	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70
0x27ab	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4847	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35
0x27b2	        0x4883c001	                              add rax, 1	      4847	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35
0x27b6	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      4847	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35
0x27bd	    0x4881bd38ffff	               cmp qword [rbp - 0xc8], 0	      4854	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x27c8	            0x754a	                           jne 0x4002854	      4854	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x27ca	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4855	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x27d1	           0xfb600	                   movzx eax, byte [rax]	      4855	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x27d4	            0x84c0	                             test al, al	      4855	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x27d6	            0x740e	                            je 0x4002826	      4855	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x27d8	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4855	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x27df	           0xfb600	                   movzx eax, byte [rax]	      4855	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x27e2	            0x3c20	                            cmp al, 0x20	      4855	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x27e4	            0x752e	                           jne 0x4002854	      4855	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x27e6	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4857	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71	CALL_63
0x27ea	    0xc7003a68656c	            mov dword [rax], 0x6c65683a 	      4857	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71	CALL_63
0x27f0	    0x66c740047000	                mov word [rax + 4], 0x70	      4857	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71	CALL_63
0x27f6	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4858	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x27fd	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      4858	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x2804	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4859	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x2808	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      4859	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x280f	      0xe9d3020000	                           jmp 0x4002b27	      4859	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x2814	    0x4881bd38ffff	               cmp qword [rbp - 0xc8], 0	      4865	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72
0x281f	     0xf85cf000000	                           jne 0x4002934	      4865	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72
0x2825	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4866	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_64
0x282c	          0x488b00	                    mov rax, qword [rax]	      4866	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_64
0x282f	           0xfb600	                   movzx eax, byte [rax]	      4866	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_64
0x2832	           0xfb6c0	                           movzx eax, al	      4866	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_64
0x2835	          0x83e830	                           sub eax, 0x30	      4866	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_64
0x2838	          0x83f809	                              cmp eax, 9	      4866	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_64
0x283b	     0xf87b3000000	                            ja 0x4002934	      4866	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_64
0x2841	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4868	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_65
0x2848	          0x4889c7	                            mov rdi, rax	      4868	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_65
0x284b	      0xe800000000	                          call 0x4002890	      4868	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_65
0x2850	    0x8985e0feffff	            mov dword [rbp - 0x120], eax	      4868	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_65
0x2856	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      4869	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x285c	          0x83f801	                              cmp eax, 1	      4869	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x285f	            0x741c	                            je 0x40028bd	      4869	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x2861	          0x83f802	                              cmp eax, 2	      4869	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x2864	            0x7430	                            je 0x40028d6	      4869	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x2866	            0x85c0	                           test eax, eax	      4869	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x2868	            0x7544	                           jne 0x40028ee	      4869	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x286a	    0x488b15000000	            mov rdx, qword [0x040028b1] 	      4872	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x2871	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4872	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x2878	          0x488910	                    mov qword [rax], rdx	      4872	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x287b	            0xeb31	                           jmp 0x40028ee	      4873	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x287d	      0xbf00000000	                              mov edi, 0	      4875	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1	CALL_66
0x2882	      0xe800000000	                          call 0x40028c7	      4875	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1	CALL_66
0x2887	          0x4889c2	                            mov rdx, rax	      4875	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1	CALL_66
0x288a	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4875	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1	CALL_66
0x2891	          0x488910	                    mov qword [rax], rdx	      4875	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1	CALL_66
0x2894	            0xeb18	                           jmp 0x40028ee	      4877	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x2896	      0xbf00000000	                              mov edi, 0	      4879	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1	CALL_67
0x289b	      0xe800000000	                          call 0x40028e0	      4879	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1	CALL_67
0x28a0	          0x4889c2	                            mov rdx, rax	      4879	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1	CALL_67
0x28a3	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4879	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1	CALL_67
0x28aa	          0x488910	                    mov qword [rax], rdx	      4879	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1	CALL_67
0x28ad	              0x90	                                     nop	      4881	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x28ae	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      4883	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_68
0x28b5	          0x4889c7	                            mov rdi, rax	      4883	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_68
0x28b8	      0xe800000000	                          call 0x40028fd	      4883	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_68
0x28bd	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      4884	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	IF_73
0x28c4	    0x483b8550ffff	             cmp rax, qword [rbp - 0xb0]	      4884	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	IF_73
0x28cb	            0x7511	                           jne 0x400291e	      4884	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	IF_73
0x28cd	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4885	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	IF_73
0x28d4	          0x488b00	                    mov rax, qword [rax]	      4885	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	IF_73
0x28d7	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      4885	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	IF_73
0x28de	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      4886	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72
0x28e5	          0x488b00	                    mov rax, qword [rax]	      4886	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72
0x28e8	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      4886	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72
0x28ef	      0xe9f3010000	                           jmp 0x4002b27	      4886	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72
0x28f4	    0x4881bd38ffff	               cmp qword [rbp - 0xc8], 0	      4893	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74
0x28ff	     0xf85a8010000	                           jne 0x4002aed	      4893	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74
0x2905	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4894	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_69
0x290c	           0xfb600	                   movzx eax, byte [rax]	      4894	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_69
0x290f	           0xfb6c0	                           movzx eax, al	      4894	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_69
0x2912	          0x83e830	                           sub eax, 0x30	      4894	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_69
0x2915	          0x83f809	                              cmp eax, 9	      4894	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_69
0x2918	     0xf878f010000	                            ja 0x4002aed	      4894	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_69
0x291e	        0xc645a000	                mov byte [rbp - 0x60], 0	      4896	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74
0x2922	    0x488d85d8feff	                  lea rax, [rbp - 0x128]	      4897	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_70
0x2929	          0x4889c7	                            mov rdi, rax	      4897	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_70
0x292c	      0xe800000000	                          call 0x4002971	      4897	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_70
0x2931	    0x8985e0feffff	            mov dword [rbp - 0x120], eax	      4897	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_70
0x2937	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      4898	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_75
0x293d	          0x83e001	                              and eax, 1	      4898	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_75
0x2940	            0x85c0	                           test eax, eax	      4898	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_75
0x2942	            0x7432	                            je 0x40029b6	      4898	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_75
0x2944	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4899	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_71
0x2948	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4899	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_71
0x294f	          0x4889c2	                            mov rdx, rax	      4899	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_71
0x2952	      0xb800000000	                              mov eax, 0	      4899	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_71
0x2957	          0x4889d7	                            mov rdi, rdx	      4899	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_71
0x295a	            0xf2ae	              repne scasb al, byte [rdi]	      4899	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_71
0x295c	          0x4889c8	                            mov rax, rcx	      4899	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_71
0x295f	          0x48f7d0	                                 not rax	      4899	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_71
0x2962	        0x488d50ff	                      lea rdx, [rax - 1]	      4899	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_71
0x2966	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4899	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_71
0x296a	          0x4801d0	                            add rax, rdx	      4899	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_71
0x296d	      0x66c700622c	                  mov word [rax], 0x2c62	      4899	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_71
0x2972	        0xc6400200	                   mov byte [rax + 2], 0	      4899	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_71
0x2976	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      4900	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_76
0x297c	          0x83e002	                              and eax, 2	      4900	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_76
0x297f	            0x85c0	                           test eax, eax	      4900	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_76
0x2981	            0x7432	                            je 0x40029f5	      4900	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_76
0x2983	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4901	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_72
0x2987	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4901	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_72
0x298e	          0x4889c2	                            mov rdx, rax	      4901	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_72
0x2991	      0xb800000000	                              mov eax, 0	      4901	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_72
0x2996	          0x4889d7	                            mov rdi, rdx	      4901	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_72
0x2999	            0xf2ae	              repne scasb al, byte [rdi]	      4901	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_72
0x299b	          0x4889c8	                            mov rax, rcx	      4901	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_72
0x299e	          0x48f7d0	                                 not rax	      4901	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_72
0x29a1	        0x488d50ff	                      lea rdx, [rax - 1]	      4901	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_72
0x29a5	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4901	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_72
0x29a9	          0x4801d0	                            add rax, rdx	      4901	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_72
0x29ac	      0x66c700732c	                  mov word [rax], 0x2c73	      4901	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_72
0x29b1	        0xc6400200	                   mov byte [rax + 2], 0	      4901	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_72
0x29b5	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      4902	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_77
0x29bb	          0x83e004	                              and eax, 4	      4902	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_77
0x29be	            0x85c0	                           test eax, eax	      4902	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_77
0x29c0	            0x7433	                            je 0x4002a35	      4902	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_77
0x29c2	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4903	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_73
0x29c6	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4903	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_73
0x29cd	          0x4889c2	                            mov rdx, rax	      4903	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_73
0x29d0	      0xb800000000	                              mov eax, 0	      4903	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_73
0x29d5	          0x4889d7	                            mov rdi, rdx	      4903	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_73
0x29d8	            0xf2ae	              repne scasb al, byte [rdi]	      4903	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_73
0x29da	          0x4889c8	                            mov rax, rcx	      4903	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_73
0x29dd	          0x48f7d0	                                 not rax	      4903	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_73
0x29e0	        0x488d50ff	                      lea rdx, [rax - 1]	      4903	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_73
0x29e4	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4903	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_73
0x29e8	          0x4801d0	                            add rax, rdx	      4903	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_73
0x29eb	    0xc700682c6c2c	            mov dword [rax], 0x2c6c2c68 	      4903	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_73
0x29f1	        0xc6400400	                   mov byte [rax + 4], 0	      4903	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_73
0x29f5	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      4904	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_78
0x29fb	          0x83e008	                              and eax, 8	      4904	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_78
0x29fe	            0x85c0	                           test eax, eax	      4904	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_78
0x2a00	            0x7433	                            je 0x4002a75	      4904	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_78
0x2a02	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4905	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_74
0x2a06	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4905	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_74
0x2a0d	          0x4889c2	                            mov rdx, rax	      4905	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_74
0x2a10	      0xb800000000	                              mov eax, 0	      4905	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_74
0x2a15	          0x4889d7	                            mov rdi, rdx	      4905	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_74
0x2a18	            0xf2ae	              repne scasb al, byte [rdi]	      4905	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_74
0x2a1a	          0x4889c8	                            mov rax, rcx	      4905	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_74
0x2a1d	          0x48f7d0	                                 not rax	      4905	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_74
0x2a20	        0x488d50ff	                      lea rdx, [rax - 1]	      4905	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_74
0x2a24	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4905	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_74
0x2a28	          0x4801d0	                            add rax, rdx	      4905	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_74
0x2a2b	    0xc7003c2c3e2c	            mov dword [rax], 0x2c3e2c3c 	      4905	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_74
0x2a31	        0xc6400400	                   mov byte [rax + 4], 0	      4905	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_74
0x2a35	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      4906	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_79
0x2a3b	          0x83e010	                           and eax, 0x10	      4906	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_79
0x2a3e	            0x85c0	                           test eax, eax	      4906	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_79
0x2a40	            0x7433	                            je 0x4002ab5	      4906	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_79
0x2a42	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4907	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_75
0x2a46	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4907	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_75
0x2a4d	          0x4889c2	                            mov rdx, rax	      4907	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_75
0x2a50	      0xb800000000	                              mov eax, 0	      4907	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_75
0x2a55	          0x4889d7	                            mov rdi, rdx	      4907	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_75
0x2a58	            0xf2ae	              repne scasb al, byte [rdi]	      4907	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_75
0x2a5a	          0x4889c8	                            mov rax, rcx	      4907	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_75
0x2a5d	          0x48f7d0	                                 not rax	      4907	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_75
0x2a60	        0x488d50ff	                      lea rdx, [rax - 1]	      4907	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_75
0x2a64	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4907	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_75
0x2a68	          0x4801d0	                            add rax, rdx	      4907	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_75
0x2a6b	    0xc7005b2c5d2c	            mov dword [rax], 0x2c5d2c5b 	      4907	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_75
0x2a71	        0xc6400400	                   mov byte [rax + 4], 0	      4907	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_75
0x2a75	         0xfb645a0	            movzx eax, byte [rbp - 0x60]	      4908	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_80
0x2a79	            0x84c0	                             test al, al	      4908	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_80
0x2a7b	            0x7415	                            je 0x4002ad2	      4908	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_80
0x2a7d	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4909	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x2a81	          0x4889c7	                            mov rdi, rax	      4909	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x2a84	      0xe800000000	                          call 0x4002ac9	      4909	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x2a89	        0x4883e801	                              sub rax, 1	      4909	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x2a8d	      0xc64405a000	          mov byte [rbp + rax - 0x60], 0	      4909	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x2a92	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4910	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74
0x2a99	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      4910	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74
0x2aa0	        0x488d45a0	                   lea rax, [rbp - 0x60]	      4911	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74
0x2aa4	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      4911	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74
0x2aab	            0xeb3a	                           jmp 0x4002b27	      4911	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74
0x2aad	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4917	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x2ab4	           0xfb600	                   movzx eax, byte [rax]	      4917	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x2ab7	            0x3c3e	                            cmp al, 0x3e	      4917	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x2ab9	            0x752c	                           jne 0x4002b27	      4917	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x2abb	    0x4881bd38ffff	               cmp qword [rbp - 0xc8], 0	      4918	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x2ac6	            0x740d	                            je 0x4002b15	      4918	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x2ac8	    0x4881bd38ffff	               cmp qword [rbp - 0xc8], 0	      4919	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x2ad3	            0x7512	                           jne 0x4002b27	      4919	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x2ad5	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4921	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x2adc	        0x4883c001	                              add rax, 1	      4921	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x2ae0	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      4921	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x2ae7	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4930	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_77
0x2aee	          0x4889c7	                            mov rdi, rax	      4930	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_77
0x2af1	      0xe800000000	                          call 0x4002b36	      4930	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_77
0x2af6	          0x83c001	                              add eax, 1	      4930	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_77
0x2af9	    0x898508ffffff	             mov dword [rbp - 0xf8], eax	      4930	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_77
0x2aff	    0x83bdf8feffff	              cmp dword [rbp - 0x108], 0	      4931	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_82
0x2b06	            0x7512	                           jne 0x4002b5a	      4931	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_82
0x2b08	    0x83bdfcfeffff	              cmp dword [rbp - 0x104], 0	      4931	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_82
0x2b0f	            0x7509	                           jne 0x4002b5a	      4931	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_82
0x2b11	    0x83bd00ffffff	              cmp dword [rbp - 0x100], 0	      4931	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_82
0x2b18	            0x7422	                            je 0x4002b7c	      4931	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_82
0x2b1a	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      4932	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_78
0x2b21	          0x4889c7	                            mov rdi, rax	      4932	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_78
0x2b24	      0xe800000000	                          call 0x4002b69	      4932	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_78
0x2b29	            0x89c2	                            mov edx, eax	      4932	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_78
0x2b2b	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      4932	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_78
0x2b31	             0x1d0	                            add eax, edx	      4932	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_78
0x2b33	          0x83c001	                              add eax, 1	      4932	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_78
0x2b36	    0x898508ffffff	             mov dword [rbp - 0xf8], eax	      4932	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_78
0x2b3c	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      4933	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_79
0x2b42	            0x89c7	                            mov edi, eax	      4933	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_79
0x2b44	      0xe800000000	                          call 0x4002b89	      4933	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_79
0x2b49	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      4933	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_79
0x2b50	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      4934	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_83
0x2b58	     0xf84f50c0000	                            je 0x4003893	      4934	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_83
0x2b5e	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4936	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35
0x2b65	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      4936	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35
0x2b6c	      0xe9d5000000	                           jmp 0x4002c86	      4946	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	CALL_80
0x2b71	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4948	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_84
0x2b78	           0xfb600	                   movzx eax, byte [rax]	      4948	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_84
0x2b7b	            0x3c5c	                            cmp al, 0x5c	      4948	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_84
0x2b7d	            0x7524	                           jne 0x4002be3	      4948	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_84
0x2b7f	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4948	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_84
0x2b86	        0x4883c001	                              add rax, 1	      4948	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_84
0x2b8a	           0xfb600	                   movzx eax, byte [rax]	      4948	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_84
0x2b8d	            0x84c0	                             test al, al	      4948	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_84
0x2b8f	            0x7412	                            je 0x4002be3	      4948	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_84
0x2b91	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4957	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_84
0x2b98	        0x4883c001	                              add rax, 1	      4957	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_84
0x2b9c	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      4957	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_84
0x2ba3	    0x8b0500000000	            mov eax, dword [0x04002be9] 	      4959	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x2ba9	            0x85c0	                           test eax, eax	      4959	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x2bab	            0x7470	                            je 0x4002c5d	      4959	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x2bad	    0x488b05000000	            mov rax, qword [0x04002bf4] 	      4960	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x2bb4	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4960	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x2bbb	          0x4889d7	                            mov rdi, rdx	      4960	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x2bbe	            0xffd0	                                call rax	      4960	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x2bc0	    0x8985e0feffff	            mov dword [rbp - 0x120], eax	      4960	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x2bc6	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      4960	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x2bcc	          0x83f801	                              cmp eax, 1	      4960	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x2bcf	            0x7e4c	                           jle 0x4002c5d	      4960	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x2bd1	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      4963	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85	CALL_82
0x2bd7	          0x4863d0	                         movsxd rdx, eax	      4963	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85	CALL_82
0x2bda	    0x488b8dd8feff	            mov rcx, qword [rbp - 0x128]	      4963	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85	CALL_82
0x2be1	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      4963	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85	CALL_82
0x2be8	          0x4889ce	                            mov rsi, rcx	      4963	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85	CALL_82
0x2beb	          0x4889c7	                            mov rdi, rax	      4963	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85	CALL_82
0x2bee	      0xe800000000	                          call 0x4002c33	      4963	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85	CALL_82
0x2bf3	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4964	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x2bfa	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      4964	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x2c00	            0x4898	                                    cdqe	      4964	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x2c02	          0x4801d0	                            add rax, rdx	      4964	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x2c05	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      4964	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x2c0c	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      4965	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x2c12	            0x4898	                                    cdqe	      4965	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x2c14	    0x48018548ffff	            add qword [rbp - 0xb8], rax 	      4965	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x2c1b	            0xeb29	                           jmp 0x4002c86	      4965	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x2c1d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      4969	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	ELSE_39
0x2c24	        0x488d5001	                      lea rdx, [rax + 1]	      4969	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	ELSE_39
0x2c28	    0x48899548ffff	             mov qword [rbp - 0xb8], rdx	      4969	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	ELSE_39
0x2c2f	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      4969	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	ELSE_39
0x2c36	        0x488d4a01	                      lea rcx, [rdx + 1]	      4969	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	ELSE_39
0x2c3a	    0x48898dd8feff	            mov qword [rbp - 0x128], rcx	      4969	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	ELSE_39
0x2c41	           0xfb612	                   movzx edx, byte [rdx]	      4969	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	ELSE_39
0x2c44	            0x8810	                      mov byte [rax], dl	      4969	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	ELSE_39
0x2c46	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4946	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	CALL_80
0x2c4d	           0xfb600	                   movzx eax, byte [rax]	      4946	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	CALL_80
0x2c50	            0x84c0	                             test al, al	      4946	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	CALL_80
0x2c52	            0x7420	                            je 0x4002cb4	      4946	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	CALL_80
0x2c54	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4946	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	CALL_80
0x2c5b	           0xfb600	                   movzx eax, byte [rax]	      4946	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	CALL_80
0x2c5e	            0x3c20	                            cmp al, 0x20	      4946	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	CALL_80
0x2c60	            0x7412	                            je 0x4002cb4	      4946	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	CALL_80
0x2c62	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4946	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	CALL_80
0x2c69	           0xfb600	                   movzx eax, byte [rax]	      4946	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	CALL_80
0x2c6c	            0x3c09	                               cmp al, 9	      4946	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	CALL_80
0x2c6e	     0xf85fdfeffff	                           jne 0x4002bb1	      4946	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	CALL_80
0x2c74	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      4971	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39
0x2c7b	          0xc60000	                       mov byte [rax], 0	      4971	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39
0x2c7e	    0x83bdf8feffff	              cmp dword [rbp - 0x108], 0	      4978	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86
0x2c85	            0x7512	                           jne 0x4002cd9	      4978	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86
0x2c87	    0x83bdfcfeffff	              cmp dword [rbp - 0x104], 0	      4978	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86
0x2c8e	            0x7509	                           jne 0x4002cd9	      4978	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86
0x2c90	    0x83bd00ffffff	              cmp dword [rbp - 0x100], 0	      4978	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86
0x2c97	            0x7415	                            je 0x4002cee	      4978	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86
0x2c99	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4979	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86
0x2ca0	      0x2500800000	                         and eax, 0x8000	      4979	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86
0x2ca5	          0x4885c0	                           test rax, rax	      4979	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86
0x2ca8	     0xf84cb000000	                            je 0x4002db9	      4979	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86
0x2cae	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      4981	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	CALL_83
0x2cb5	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      4981	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	CALL_83
0x2cbb	          0x4889d6	                            mov rsi, rdx	      4981	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	CALL_83
0x2cbe	            0x89c7	                            mov edi, eax	      4981	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	CALL_83
0x2cc0	      0xe84b110000	                  call sym.option_expand	      4981	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	CALL_83
0x2cc5	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      4981	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	CALL_83
0x2ccc	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      4982	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87
0x2cd4	     0xf849f000000	                            je 0x4002db9	      4982	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87
0x2cda	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4984	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_84
0x2ce1	          0x4889c7	                            mov rdi, rax	      4984	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_84
0x2ce4	      0xe800000000	                          call 0x4002d29	      4984	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_84
0x2ce9	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      4985	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_85
0x2cf0	          0x4889c7	                            mov rdi, rax	      4985	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_85
0x2cf3	      0xe800000000	                          call 0x4002d38	      4985	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_85
0x2cf8	          0x83c001	                              add eax, 1	      4985	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_85
0x2cfb	    0x898508ffffff	             mov dword [rbp - 0xf8], eax	      4985	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_85
0x2d01	    0x83bdf8feffff	              cmp dword [rbp - 0x108], 0	      4986	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	IF_88
0x2d08	            0x7512	                           jne 0x4002d5c	      4986	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	IF_88
0x2d0a	    0x83bdfcfeffff	              cmp dword [rbp - 0x104], 0	      4986	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	IF_88
0x2d11	            0x7509	                           jne 0x4002d5c	      4986	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	IF_88
0x2d13	    0x83bd00ffffff	              cmp dword [rbp - 0x100], 0	      4986	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	IF_88
0x2d1a	            0x7422	                            je 0x4002d7e	      4986	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	IF_88
0x2d1c	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      4987	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_86
0x2d23	          0x4889c7	                            mov rdi, rax	      4987	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_86
0x2d26	      0xe800000000	                          call 0x4002d6b	      4987	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_86
0x2d2b	            0x89c2	                            mov edx, eax	      4987	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_86
0x2d2d	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      4987	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_86
0x2d33	             0x1d0	                            add eax, edx	      4987	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_86
0x2d35	          0x83c001	                              add eax, 1	      4987	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_86
0x2d38	    0x898508ffffff	             mov dword [rbp - 0xf8], eax	      4987	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_86
0x2d3e	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      4988	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_87
0x2d44	            0x89c7	                            mov edi, eax	      4988	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_87
0x2d46	      0xe800000000	                          call 0x4002d8b	      4988	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_87
0x2d4b	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      4988	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_87
0x2d52	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      4989	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	IF_89
0x2d5a	     0xf84f60a0000	                            je 0x4003896	      4989	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	IF_89
0x2d60	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      4991	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_88
0x2d67	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4991	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_88
0x2d6e	          0x4889d6	                            mov rsi, rdx	      4991	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_88
0x2d71	          0x4889c7	                            mov rdi, rax	      4991	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_88
0x2d74	      0xe800000000	                          call 0x4002db9	      4991	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_88
0x2d79	    0xc785e0feffff	              mov dword [rbp - 0x120], 0	      4997	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35
0x2d83	    0x83bd00ffffff	              cmp dword [rbp - 0x100], 0	      4998	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90
0x2d8a	            0x7515	                           jne 0x4002de1	      4998	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90
0x2d8c	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4998	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90
0x2d93	      0x2500000200	                        and eax, 0x20000	      4998	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90
0x2d98	          0x4885c0	                           test rax, rax	      4998	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90
0x2d9b	     0xf84c5010000	                            je 0x4002fa6	      4998	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90
0x2da1	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5000	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	CALL_89
0x2da8	          0x4889c7	                            mov rdi, rax	      5000	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	CALL_89
0x2dab	      0xe800000000	                          call 0x4002df0	      5000	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	CALL_89
0x2db0	    0x8985e0feffff	            mov dword [rbp - 0x120], eax	      5000	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	CALL_89
0x2db6	    0xc7850cffffff	               mov dword [rbp - 0xf4], 0	      5001	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90
0x2dc0	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5002	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x2dc7	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      5002	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x2dce	      0xe934010000	                           jmp 0x4002f47	      5002	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x2dd3	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      5004	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x2dda	      0x2500800000	                         and eax, 0x8000	      5004	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x2ddf	          0x4885c0	                           test rax, rax	      5004	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x2de2	            0x7433	                            je 0x4002e57	      5004	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x2de4	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5005	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x2deb	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      5005	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x2df2	            0x7423	                            je 0x4002e57	      5005	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x2df4	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5006	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x2dfb	        0x4883e801	                              sub rax, 1	      5006	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x2dff	           0xfb600	                   movzx eax, byte [rax]	      5006	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x2e02	            0x3c2c	                            cmp al, 0x2c	      5006	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x2e04	     0xf8584000000	                           jne 0x4002ece	      5006	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x2e0a	    0x8b850cffffff	             mov eax, dword [rbp - 0xf4]	      5006	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x2e10	          0x83e001	                              and eax, 1	      5006	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x2e13	            0x85c0	                           test eax, eax	      5006	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x2e15	            0x7577	                           jne 0x4002ece	      5006	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x2e17	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      5007	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x2e1d	          0x4863d0	                         movsxd rdx, eax	      5007	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x2e20	    0x488b8d58ffff	             mov rcx, qword [rbp - 0xa8]	      5007	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x2e27	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5007	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x2e2e	          0x4889ce	                            mov rsi, rcx	      5007	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x2e31	          0x4889c7	                            mov rdi, rax	      5007	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x2e34	      0xe800000000	                          call 0x4002e79	      5007	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x2e39	            0x85c0	                           test eax, eax	      5007	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x2e3b	            0x7551	                           jne 0x4002ece	      5007	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x2e3d	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      5008	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x2e44	      0x2500800000	                         and eax, 0x8000	      5008	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x2e49	          0x4885c0	                           test rax, rax	      5008	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x2e4c	     0xf84c7000000	                            je 0x4002f59	      5008	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x2e52	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      5009	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x2e58	          0x4863d0	                         movsxd rdx, eax	      5009	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x2e5b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5009	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x2e62	          0x4801d0	                            add rax, rdx	      5009	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x2e65	           0xfb600	                   movzx eax, byte [rax]	      5009	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x2e68	            0x3c2c	                            cmp al, 0x2c	      5009	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x2e6a	     0xf84a9000000	                            je 0x4002f59	      5009	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x2e70	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      5010	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x2e76	          0x4863d0	                         movsxd rdx, eax	      5010	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x2e79	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5010	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x2e80	          0x4801d0	                            add rax, rdx	      5010	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x2e83	           0xfb600	                   movzx eax, byte [rax]	      5010	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x2e86	            0x84c0	                             test al, al	      5010	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x2e88	     0xf848b000000	                            je 0x4002f59	      5010	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x2e8e	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5016	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x2e95	        0x4883c001	                              add rax, 1	      5016	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x2e99	    0x483b8548ffff	             cmp rax, qword [rbp - 0xb8]	      5016	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x2ea0	            0x7324	                           jae 0x4002f06	      5016	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x2ea2	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5017	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x2ea9	        0x4883e801	                              sub rax, 1	      5017	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x2ead	           0xfb600	                   movzx eax, byte [rax]	      5017	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x2eb0	            0x3c5c	                            cmp al, 0x5c	      5017	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x2eb2	            0x7512	                           jne 0x4002f06	      5017	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x2eb4	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5018	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x2ebb	        0x4883e802	                              sub rax, 2	      5018	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x2ebf	           0xfb600	                   movzx eax, byte [rax]	      5018	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x2ec2	            0x3c2c	                            cmp al, 0x2c	      5018	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x2ec4	            0x7526	                           jne 0x4002f2c	      5018	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x2ec6	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5019	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x2ecd	        0x4883c001	                              add rax, 1	      5019	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x2ed1	    0x483b8548ffff	             cmp rax, qword [rbp - 0xb8]	      5019	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x2ed8	            0x751b	                           jne 0x4002f35	      5019	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x2eda	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5020	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x2ee1	        0x4883e801	                              sub rax, 1	      5020	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x2ee5	           0xfb600	                   movzx eax, byte [rax]	      5020	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x2ee8	            0x3c5c	                            cmp al, 0x5c	      5020	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x2eea	            0x7509	                           jne 0x4002f35	      5020	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x2eec	    0x83850cffffff	               add dword [rbp - 0xf4], 1	      5022	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x2ef3	            0xeb0a	                           jmp 0x4002f3f	      5022	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x2ef5	    0xc7850cffffff	               mov dword [rbp - 0xf4], 0	      5024	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	ELSE_40
0x2eff	    0x48838548ffff	               add qword [rbp - 0xb8], 1	      5002	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x2f07	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5002	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x2f0e	           0xfb600	                   movzx eax, byte [rax]	      5002	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x2f11	            0x84c0	                             test al, al	      5002	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x2f13	     0xf85bafeffff	                           jne 0x4002e13	      5002	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x2f19	    0x83bdf8feffff	              cmp dword [rbp - 0x108], 0	      5028	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	ELSE_40	IF_93
0x2f20	            0x7509	                           jne 0x4002f6b	      5028	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	ELSE_40	IF_93
0x2f22	    0x83bdfcfeffff	              cmp dword [rbp - 0x104], 0	      5028	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	ELSE_40	IF_93
0x2f29	            0x743b	                            je 0x4002fa6	      5028	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	ELSE_40	IF_93
0x2f2b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5028	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	ELSE_40	IF_93
0x2f32	           0xfb600	                   movzx eax, byte [rax]	      5028	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	ELSE_40	IF_93
0x2f35	            0x84c0	                             test al, al	      5028	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	ELSE_40	IF_93
0x2f37	            0x742d	                            je 0x4002fa6	      5028	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	ELSE_40	IF_93
0x2f39	    0xc785fcfeffff	              mov dword [rbp - 0x104], 0	      5030	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	ELSE_40	IF_93
0x2f43	    0xc785f8feffff	              mov dword [rbp - 0x108], 0	      5031	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	ELSE_40	IF_93
0x2f4d	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      5032	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	ELSE_40	IF_93	CALL_91
0x2f54	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5032	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	ELSE_40	IF_93	CALL_91
0x2f5b	          0x4889d6	                            mov rsi, rdx	      5032	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	ELSE_40	IF_93	CALL_91
0x2f5e	          0x4889c7	                            mov rdi, rax	      5032	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	ELSE_40	IF_93	CALL_91
0x2f61	      0xe800000000	                          call 0x4002fa6	      5032	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	ELSE_40	IF_93	CALL_91
0x2f66	    0x83bdf8feffff	              cmp dword [rbp - 0x108], 0	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x2f6d	            0x750d	                           jne 0x4002fbc	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x2f6f	    0x83bdfcfeffff	              cmp dword [rbp - 0x104], 0	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x2f76	     0xf84b0010000	                            je 0x400316c	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x2f7c	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      5040	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x2f83	      0x2500800000	                         and eax, 0x8000	      5040	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x2f88	          0x4885c0	                           test rax, rax	      5041	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x2f8b	            0x7423	                            je 0x4002ff0	      5041	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x2f8d	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5040	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x2f94	           0xfb600	                   movzx eax, byte [rax]	      5040	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x2f97	            0x84c0	                             test al, al	      5040	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x2f99	            0x7415	                            je 0x4002ff0	      5040	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x2f9b	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5041	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x2fa2	           0xfb600	                   movzx eax, byte [rax]	      5041	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x2fa5	            0x84c0	                             test al, al	      5041	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x2fa7	            0x7407	                            je 0x4002ff0	      5041	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x2fa9	      0xb801000000	                              mov eax, 1	      5041	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x2fae	            0xeb05	                           jmp 0x4002ff5	      5041	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x2fb0	      0xb800000000	                              mov eax, 0	      5041	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x2fb5	    0x89851cffffff	             mov dword [rbp - 0xe4], eax	      5040	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x2fbb	    0x83bdf8feffff	              cmp dword [rbp - 0x108], 0	      5042	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95
0x2fc2	     0xf84ed000000	                            je 0x40030f5	      5042	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95
0x2fc8	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5044	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_92
0x2fcf	          0x4889c7	                            mov rdi, rax	      5044	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_92
0x2fd2	      0xe800000000	                          call 0x4003017	      5044	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_92
0x2fd7	    0x8985e0feffff	            mov dword [rbp - 0x120], eax	      5044	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_92
0x2fdd	    0x83bd1cffffff	               cmp dword [rbp - 0xe4], 0	      5046	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x2fe4	            0x7468	                            je 0x400308e	      5046	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x2fe6	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      5046	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x2fec	          0x83f801	                              cmp eax, 1	      5046	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x2fef	            0x7e5d	                           jle 0x400308e	      5046	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x2ff1	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      5047	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x2ff8	      0x2500800100	                        and eax, 0x18000	      5047	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x2ffd	    0x483d00800100	                        cmp rax, 0x18000	      5047	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x3003	            0x7549	                           jne 0x400308e	      5047	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x3005	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      5048	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x300b	            0x4898	                                    cdqe	      5048	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x300d	        0x488d50ff	                      lea rdx, [rax - 1]	      5048	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x3011	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5048	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x3018	          0x4801d0	                            add rax, rdx	      5048	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x301b	           0xfb600	                   movzx eax, byte [rax]	      5048	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x301e	            0x3c2c	                            cmp al, 0x2c	      5048	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x3020	            0x752c	                           jne 0x400308e	      5048	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x3022	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      5049	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x3028	            0x4898	                                    cdqe	      5049	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x302a	        0x488d50fe	                      lea rdx, [rax - 2]	      5049	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x302e	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5049	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x3035	          0x4801d0	                            add rax, rdx	      5049	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x3038	           0xfb600	                   movzx eax, byte [rax]	      5049	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x303b	            0x3c5c	                            cmp al, 0x5c	      5049	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x303d	            0x740f	                            je 0x400308e	      5049	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x303f	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      5050	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x3045	          0x83e801	                              sub eax, 1	      5050	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x3048	    0x8985e0feffff	            mov dword [rbp - 0x120], eax	      5050	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x304e	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5051	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_93
0x3055	          0x4889c7	                            mov rdi, rax	      5051	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_93
0x3058	      0xe800000000	                          call 0x400309d	      5051	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_93
0x305d	        0x488d5001	                      lea rdx, [rax + 1]	      5051	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_93
0x3061	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      5051	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_93
0x3067	          0x4863c8	                         movsxd rcx, eax	      5051	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_93
0x306a	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      5051	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_93
0x3070	            0x4898	                                    cdqe	      5051	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_93
0x3072	          0x4801c1	                            add rcx, rax	      5051	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_93
0x3075	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5051	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_93
0x307c	          0x4801c1	                            add rcx, rax	      5051	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_93
0x307f	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5051	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_93
0x3086	          0x4889c6	                            mov rsi, rax	      5051	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_93
0x3089	          0x4889cf	                            mov rdi, rcx	      5051	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_93
0x308c	      0xe800000000	                          call 0x40030d1	      5051	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_93
0x3091	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      5053	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_95
0x3097	          0x4863d0	                         movsxd rdx, eax	      5053	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_95
0x309a	    0x488b8d60ffff	             mov rcx, qword [rbp - 0xa0]	      5053	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_95
0x30a1	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5053	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_95
0x30a8	          0x4889ce	                            mov rsi, rcx	      5053	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_95
0x30ab	          0x4889c7	                            mov rdi, rax	      5053	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_95
0x30ae	      0xe800000000	                          call 0x40030f3	      5053	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_95
0x30b3	            0xeb58	                           jmp 0x400314d	      5053	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_95
0x30b5	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5057	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_96
0x30bc	          0x4889c7	                            mov rdi, rax	      5057	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_96
0x30bf	      0xe800000000	                          call 0x4003104	      5057	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_96
0x30c4	    0x8985e0feffff	            mov dword [rbp - 0x120], eax	      5057	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_96
0x30ca	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5058	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_97
0x30d1	          0x4889c7	                            mov rdi, rax	      5058	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_97
0x30d4	      0xe800000000	                          call 0x4003119	      5058	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_97
0x30d9	        0x488d5001	                      lea rdx, [rax + 1]	      5058	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_97
0x30dd	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      5058	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_97
0x30e3	          0x4863c8	                         movsxd rcx, eax	      5058	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_97
0x30e6	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	      5058	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_97
0x30ec	            0x4898	                                    cdqe	      5058	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_97
0x30ee	          0x4801c1	                            add rcx, rax	      5058	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_97
0x30f1	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5058	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_97
0x30f8	          0x4801c1	                            add rcx, rax	      5058	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_97
0x30fb	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5058	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_97
0x3102	          0x4889c6	                            mov rsi, rax	      5058	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_97
0x3105	          0x4889cf	                            mov rdi, rcx	      5058	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_97
0x3108	      0xe800000000	                          call 0x400314d	      5058	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_97
0x310d	    0x83bd1cffffff	               cmp dword [rbp - 0xe4], 0	      5060	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_97
0x3114	            0x7416	                            je 0x400316c	      5060	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_97
0x3116	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      5061	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_97
0x311c	          0x4863d0	                         movsxd rdx, eax	      5061	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_97
0x311f	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5061	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_97
0x3126	          0x4801d0	                            add rax, rdx	      5061	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_97
0x3129	          0xc6002c	                    mov byte [rax], 0x2c	      5061	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_97
0x312c	    0x83bd00ffffff	              cmp dword [rbp - 0x100], 0	      5066	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98
0x3133	     0xf84ec000000	                            je 0x4003265	      5066	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98
0x3139	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      5068	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	CALL_98
0x3140	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5068	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	CALL_98
0x3147	          0x4889d6	                            mov rsi, rdx	      5068	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	CALL_98
0x314a	          0x4889c7	                            mov rdi, rax	      5068	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	CALL_98
0x314d	      0xe800000000	                          call 0x4003192	      5068	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	CALL_98
0x3152	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5069	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99
0x3159	           0xfb600	                   movzx eax, byte [rax]	      5069	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99
0x315c	            0x84c0	                             test al, al	      5069	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99
0x315e	     0xf84c1000000	                            je 0x4003265	      5069	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99
0x3164	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      5072	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100
0x316b	      0x2500800000	                         and eax, 0x8000	      5072	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100
0x3170	          0x4885c0	                           test rax, rax	      5072	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100
0x3173	            0x7452	                            je 0x4003207	      5072	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100
0x3175	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5074	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101
0x317c	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      5074	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101
0x3183	            0x752b	                           jne 0x40031f0	      5074	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101
0x3185	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      5077	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x318b	          0x4863d0	                         movsxd rdx, eax	      5077	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x318e	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5077	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x3195	          0x4801d0	                            add rax, rdx	      5077	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x3198	           0xfb600	                   movzx eax, byte [rax]	      5077	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x319b	            0x3c2c	                            cmp al, 0x2c	      5077	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x319d	            0x7528	                           jne 0x4003207	      5077	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x319f	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      5078	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x31a5	          0x83c001	                              add eax, 1	      5078	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x31a8	    0x8985e0feffff	            mov dword [rbp - 0x120], eax	      5078	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x31ae	            0xeb17	                           jmp 0x4003207	      5078	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x31b0	    0x4883ad48ffff	               sub qword [rbp - 0xb8], 1	      5083	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	ELSE_42
0x31b8	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      5084	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	ELSE_42
0x31be	          0x83c001	                              add eax, 1	      5084	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	ELSE_42
0x31c1	    0x8985e0feffff	            mov dword [rbp - 0x120], eax	      5084	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	ELSE_42
0x31c7	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x31cd	          0x4863d0	                         movsxd rdx, eax	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x31d0	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x31d7	          0x4801d0	                            add rax, rdx	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x31da	          0x4889c7	                            mov rdi, rax	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x31dd	      0xe800000000	                          call 0x4003222	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x31e2	        0x488d5001	                      lea rdx, [rax + 1]	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x31e6	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x31ec	          0x4863c8	                         movsxd rcx, eax	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x31ef	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x31f6	          0x4801c1	                            add rcx, rax	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x31f9	    0x488bb548ffff	             mov rsi, qword [rbp - 0xb8]	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x3200	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x3207	          0x4829c6	                            sub rsi, rax	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x320a	          0x4889f0	                            mov rax, rsi	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x320d	          0x4889c6	                            mov rsi, rax	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x3210	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x3217	          0x4801f0	                            add rax, rsi	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x321a	          0x4889ce	                            mov rsi, rcx	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x321d	          0x4889c7	                            mov rdi, rax	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x3220	      0xe800000000	                          call 0x4003265	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x3225	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      5091	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103
0x322c	      0x2500000400	                        and eax, 0x40000	      5091	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103
0x3231	          0x4885c0	                           test rax, rax	      5091	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103
0x3234	     0xf844a010000	                            je 0x40033c4	      5091	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103
0x323a	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5094	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2
0x3241	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      5094	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2
0x3248	      0xe925010000	                           jmp 0x40033b2	      5094	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2
0x324d	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      5098	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104
0x3254	      0x2500800100	                        and eax, 0x18000	      5098	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104
0x3259	          0x4885c0	                           test rax, rax	      5098	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104
0x325c	     0xf848c000000	                            je 0x400332e	      5098	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104
0x3262	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5100	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105
0x3269	           0xfb600	                   movzx eax, byte [rax]	      5100	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105
0x326c	            0x3c2c	                            cmp al, 0x2c	      5100	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105
0x326e	     0xf84f6000000	                            je 0x40033aa	      5100	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105
0x3274	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5100	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105
0x327b	        0x4883c001	                              add rax, 1	      5100	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105
0x327f	           0xfb600	                   movzx eax, byte [rax]	      5100	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105
0x3282	            0x3c2c	                            cmp al, 0x2c	      5100	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105
0x3284	     0xf85e0000000	                           jne 0x40033aa	      5100	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105
0x328a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5101	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_100
0x3291	           0xfb600	                   movzx eax, byte [rax]	      5101	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_100
0x3294	           0xfb6c0	                           movzx eax, al	      5101	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_100
0x3297	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      5101	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_100
0x329e	        0x4883c202	                              add rdx, 2	      5101	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_100
0x32a2	            0x89c6	                            mov esi, eax	      5101	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_100
0x32a4	          0x4889d7	                            mov rdi, rdx	      5101	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_100
0x32a7	      0xe800000000	                          call 0x40032ec	      5101	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_100
0x32ac	          0x4885c0	                           test rax, rax	      5101	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_100
0x32af	     0xf84b5000000	                            je 0x40033aa	      5101	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_100
0x32b5	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5105	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_101
0x32bc	        0x4883c002	                              add rax, 2	      5105	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_101
0x32c0	          0x4889c7	                            mov rdi, rax	      5105	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_101
0x32c3	      0xe800000000	                          call 0x4003308	      5105	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_101
0x32c8	        0x488d5001	                      lea rdx, [rax + 1]	      5105	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_101
0x32cc	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5105	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_101
0x32d3	        0x488d4802	                      lea rcx, [rax + 2]	      5105	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_101
0x32d7	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5105	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_101
0x32de	          0x4889ce	                            mov rsi, rcx	      5105	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_101
0x32e1	          0x4889c7	                            mov rdi, rax	      5105	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_101
0x32e4	      0xe800000000	                          call 0x4003329	      5105	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_101
0x32e9	      0xe984000000	                           jmp 0x40033b2	      5106	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105
0x32ee	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      5111	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x32f5	      0x2500800000	                         and eax, 0x8000	      5111	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x32fa	          0x4885c0	                           test rax, rax	      5111	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x32fd	            0x740e	                            je 0x400334d	      5111	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x32ff	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5111	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x3306	           0xfb600	                   movzx eax, byte [rax]	      5111	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x3309	            0x3c2c	                            cmp al, 0x2c	      5111	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x330b	            0x745d	                            je 0x40033aa	      5111	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x330d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5112	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_102
0x3314	           0xfb600	                   movzx eax, byte [rax]	      5112	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_102
0x3317	           0xfb6c0	                           movzx eax, al	      5112	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_102
0x331a	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	      5112	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_102
0x3321	        0x4883c201	                              add rdx, 1	      5112	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_102
0x3325	            0x89c6	                            mov esi, eax	      5112	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_102
0x3327	          0x4889d7	                            mov rdi, rdx	      5112	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_102
0x332a	      0xe800000000	                          call 0x400336f	      5112	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_102
0x332f	          0x4885c0	                           test rax, rax	      5112	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_102
0x3332	            0x7436	                            je 0x40033aa	      5112	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_102
0x3334	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5114	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_103
0x333b	        0x4883c001	                              add rax, 1	      5114	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_103
0x333f	          0x4889c7	                            mov rdi, rax	      5114	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_103
0x3342	      0xe800000000	                          call 0x4003387	      5114	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_103
0x3347	        0x488d5001	                      lea rdx, [rax + 1]	      5114	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_103
0x334b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5114	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_103
0x3352	        0x488d4801	                      lea rcx, [rax + 1]	      5114	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_103
0x3356	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5114	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_103
0x335d	          0x4889ce	                            mov rsi, rcx	      5114	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_103
0x3360	          0x4889c7	                            mov rdi, rax	      5114	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_103
0x3363	      0xe800000000	                          call 0x40033a8	      5114	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_103
0x3368	            0xeb08	                           jmp 0x40033b2	      5115	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x336a	    0x48838548ffff	               add qword [rbp - 0xb8], 1	      5118	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2
0x3372	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5094	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2
0x3379	           0xfb600	                   movzx eax, byte [rax]	      5094	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2
0x337c	            0x84c0	                             test al, al	      5094	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2
0x337e	     0xf85c9feffff	                           jne 0x400328d	      5094	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2
0x3384	    0x4883bd40ffff	               cmp qword [rbp - 0xc0], 0	      5122	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_107
0x338c	            0x740e	                            je 0x40033dc	      5122	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_107
0x338e	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5123	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_107
0x3395	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      5123	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_107
0x339c	    0xc78510ffffff	               mov dword [rbp - 0xf0], 1	      5124	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35
0x33a6	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      5130	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x33ad	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5130	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x33b4	          0x488910	                    mov qword [rax], rdx	      5130	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x33b7	    0x8b0500000000	            mov eax, dword [0x040033fd] 	      5133	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x33bd	            0x85c0	                           test eax, eax	      5133	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x33bf	            0x755b	                           jne 0x400345c	      5133	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x33c1	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      5135	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x33c7	            0x4898	                                    cdqe	      5135	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x33c9	        0x48c1e006	                              shl rax, 6	      5135	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x33cd	    0x480500000000	                              add rax, 0	      5135	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x33d3	            0x8b00	                    mov eax, dword [rax]	      5135	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x33d5	      0x3d2c400000	                         cmp eax, 0x402c	      5135	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x33da	            0x7440	                            je 0x400345c	      5135	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x33dc	    0x4883bd60ffff	               cmp qword [rbp - 0xa0], 0	      5137	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x33e4	            0x7436	                            je 0x400345c	      5137	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x33e6	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      5137	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x33ee	            0x742c	                            je 0x400345c	      5137	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x33f0	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5141	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108	CALL_104
0x33f7	          0x4889c7	                            mov rdi, rax	      5141	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108	CALL_104
0x33fa	      0xe800000000	                          call 0x400343f	      5141	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108	CALL_104
0x33ff	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      5141	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108	CALL_104
0x3406	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5144	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108	CALL_105
0x340d	          0x4889c7	                            mov rdi, rax	      5144	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108	CALL_105
0x3410	      0xe800000000	                          call 0x4003455	      5144	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108	CALL_105
0x3415	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      5144	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108	CALL_105
0x341c	    0x448b85d4feff	            mov r8d, dword [rbp - 0x12c]	      5152	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x3423	        0x488d7da0	                   lea rdi, [rbp - 0x60]	      5152	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x3427	    0x488b8d50ffff	             mov rcx, qword [rbp - 0xb0]	      5152	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x342e	    0x8b9510ffffff	             mov edx, dword [rbp - 0xf0]	      5152	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x3434	    0x488bb538ffff	             mov rsi, qword [rbp - 0xc8]	      5152	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x343b	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      5152	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x3441	          0x4589c1	                            mov r9d, r8d	      5152	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x3444	          0x4989f8	                             mov r8, rdi	      5152	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x3447	            0x89c7	                            mov edi, eax	      5152	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x3449	      0xe87e170000	          call sym.did_set_string_option	      5152	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x344e	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      5152	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x3455	    0x4883bd28ffff	               cmp qword [rbp - 0xd8], 0	      5156	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_109
0x345d	            0x7521	                           jne 0x40034c0	      5156	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_109
0x345f	    0x488b8d70ffff	             mov rcx, qword [rbp - 0x90]	      5157	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_109	CALL_107
0x3466	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	      5157	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_109	CALL_107
0x346d	    0x8bb5d4feffff	            mov esi, dword [rbp - 0x12c]	      5157	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_109	CALL_107
0x3473	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      5157	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_109	CALL_107
0x3479	            0x89c7	                            mov edi, eax	      5157	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_109	CALL_107
0x347b	      0xe8cbdeffff	      call sym.trigger_optionsset_string	      5157	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_109	CALL_107
0x3480	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5159	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_108
0x3487	          0x4889c7	                            mov rdi, rax	      5159	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_108
0x348a	      0xe800000000	                          call 0x40034cf	      5159	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_108
0x348f	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      5160	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_109
0x3496	          0x4889c7	                            mov rdi, rax	      5160	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_109
0x3499	      0xe800000000	                          call 0x40034de	      5160	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_109
0x349e	    0x4883bd28ffff	               cmp qword [rbp - 0xd8], 0	      5163	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_110
0x34a6	     0xf841a010000	                            je 0x4003606	      5163	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_110
0x34ac	      0xe963010000	                           jmp 0x4003654	      5164	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_110
0x34b1	    0x83bd14ffffff	           cmp dword [rbp - 0xec], 0x26 	      5170	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_111
0x34b8	            0x7529	                           jne 0x4003523	      5170	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_111
0x34ba	        0x488d4590	                   lea rax, [rbp - 0x70]	      5172	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_111	IF_112	CALL_110
0x34be	      0xbe01000000	                              mov esi, 1	      5172	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_111	IF_112	CALL_110
0x34c3	          0x4889c7	                            mov rdi, rax	      5172	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_111	IF_112	CALL_110
0x34c6	      0xe800000000	                          call 0x400350b	      5172	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_111	IF_112	CALL_110
0x34cb	            0x85c0	                           test eax, eax	      5172	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_111	IF_112	CALL_110
0x34cd	     0xf85d5000000	                           jne 0x40035e8	      5172	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_111	IF_112	CALL_110
0x34d3	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	      5173	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_111	CALL_111
0x34de	      0xe9c5000000	                           jmp 0x40035e8	      5173	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_111	CALL_111
0x34e3	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      5177	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45
0x34ea	        0x4883c001	                              add rax, 1	      5177	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45
0x34ee	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      5177	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45
0x34f5	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      5178	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x34fc	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      5178	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x3503	            0xeb30	                           jmp 0x4003575	      5178	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x3505	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5179	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	IF_113
0x350c	           0xfb600	                   movzx eax, byte [rax]	      5179	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	IF_113
0x350f	            0x3c5c	                            cmp al, 0x5c	      5179	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	IF_113
0x3511	            0x751a	                           jne 0x400356d	      5179	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	IF_113
0x3513	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5179	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	IF_113
0x351a	        0x4883c001	                              add rax, 1	      5179	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	IF_113
0x351e	           0xfb600	                   movzx eax, byte [rax]	      5179	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	IF_113
0x3521	            0x84c0	                             test al, al	      5179	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	IF_113
0x3523	            0x7408	                            je 0x400356d	      5179	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	IF_113
0x3525	    0x48838578ffff	               add qword [rbp - 0x88], 1	      5180	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	IF_113
0x352d	    0x48838578ffff	               add qword [rbp - 0x88], 1	      5178	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x3535	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5178	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x353c	           0xfb600	                   movzx eax, byte [rax]	      5178	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x353f	            0x84c0	                             test al, al	      5178	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x3541	            0x741c	                            je 0x400359f	      5178	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x3543	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5178	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x354a	           0xfb600	                   movzx eax, byte [rax]	      5178	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x354d	            0x3c20	                            cmp al, 0x20	      5178	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x354f	            0x740e	                            je 0x400359f	      5178	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x3551	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5178	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x3558	           0xfb600	                   movzx eax, byte [rax]	      5178	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x355b	            0x3c09	                               cmp al, 9	      5178	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x355d	            0x75a6	                           jne 0x4003545	      5178	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x355f	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5181	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45
0x3566	           0xfb600	                   movzx eax, byte [rax]	      5181	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45
0x3569	           0xfb6c0	                           movzx eax, al	      5181	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45
0x356c	    0x898514ffffff	             mov dword [rbp - 0xec], eax	      5181	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45
0x3572	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5182	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45
0x3579	          0xc60000	                       mov byte [rax], 0	      5182	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45
0x357c	    0x488b8dd8feff	            mov rcx, qword [rbp - 0x128]	      5183	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	CALL_113
0x3583	        0x488d4590	                   lea rax, [rbp - 0x70]	      5183	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	CALL_113
0x3587	      0xba00000000	                              mov edx, 0	      5183	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	CALL_113
0x358c	          0x4889ce	                            mov rsi, rcx	      5183	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	CALL_113
0x358f	          0x4889c7	                            mov rdi, rax	      5183	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	CALL_113
0x3592	      0xe800000000	                          call 0x40035d7	      5183	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	CALL_113
0x3597	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	      5184	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45
0x359d	            0x89c2	                            mov edx, eax	      5184	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45
0x359f	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5184	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45
0x35a6	            0x8810	                      mov byte [rax], dl	      5184	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45
0x35a8	    0x8b0500000000	            mov eax, dword [0x040035ee] 	      5186	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_114
0x35ae	            0x85c0	                           test eax, eax	      5186	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_114
0x35b0	            0x740a	                            je 0x40035fc	      5186	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_114
0x35b2	      0xbf00000000	                              mov edi, 0	      5187	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	CALL_114
0x35b7	      0xe800000000	                          call 0x40035fc	      5187	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	CALL_114
0x35bc	      0xbf32000000	                           mov edi, 0x32	      5188	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	CALL_115
0x35c1	      0xe800000000	                          call 0x4003606	      5188	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	CALL_115
0x35c6	    0x83bde4feffff	              cmp dword [rbp - 0x11c], 0	      5192	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115
0x35cd	            0x7845	                            js 0x4003654	      5192	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115
0x35cf	    0x83bdfcfeffff	              cmp dword [rbp - 0x104], 0	      5193	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115	CALL_116
0x35d6	            0x7519	                           jne 0x4003631	      5193	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115	CALL_116
0x35d8	    0x83bdf8feffff	              cmp dword [rbp - 0x108], 0	      5194	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115
0x35df	            0x7510	                           jne 0x4003631	      5194	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115
0x35e1	    0x83bd00ffffff	              cmp dword [rbp - 0x100], 0	      5193	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115	CALL_116
0x35e8	            0x7507	                           jne 0x4003631	      5193	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115	CALL_116
0x35ea	      0xba01000000	                              mov edx, 1	      5193	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115	CALL_116
0x35ef	            0xeb05	                           jmp 0x4003636	      5193	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115	CALL_116
0x35f1	      0xba00000000	                              mov edx, 0	      5193	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115	CALL_116
0x35f6	    0x8b8dd4feffff	            mov ecx, dword [rbp - 0x12c]	      5193	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115	CALL_116
0x35fc	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      5193	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115	CALL_116
0x3602	            0x89ce	                            mov esi, ecx	      5193	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115	CALL_116
0x3604	            0x89c7	                            mov edi, eax	      5193	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115	CALL_116
0x3606	      0xe8b6020000	                 call sym.did_set_option	      5193	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115	CALL_116
0x360b	            0xeb07	                           jmp 0x4003654	      5193	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115	CALL_116
0x360d	              0x90	                                     nop	      4499	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20
0x360e	            0xeb04	                           jmp 0x4003654	      4499	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20
0x3610	              0x90	                                     nop	      4529	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x3611	            0xeb01	                           jmp 0x4003654	      4529	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x3613	              0x90	                                     nop	      4638	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41
0x3614	    0xc785e0feffff	              mov dword [rbp - 0x120], 0	      5204	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x361e	      0xe996000000	                           jmp 0x40036f9	      5204	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x3623	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      5207	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x362a	        0x488d5001	                      lea rdx, [rax + 1]	      5207	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x362e	    0x488995d8feff	            mov qword [rbp - 0x128], rdx	      5207	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x3635	           0xfb600	                   movzx eax, byte [rax]	      5207	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x3638	            0x3c5c	                            cmp al, 0x5c	      5207	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x363a	            0x7520	                           jne 0x400369c	      5207	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x363c	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      5207	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x3643	           0xfb600	                   movzx eax, byte [rax]	      5207	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x3646	            0x84c0	                             test al, al	      5207	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x3648	            0x7412	                            je 0x400369c	      5207	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x364a	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      5208	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x3651	        0x4883c001	                              add rax, 1	      5208	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x3655	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      5208	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x365c	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      5206	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	CALL_117
0x3663	           0xfb600	                   movzx eax, byte [rax]	      5206	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	CALL_117
0x3666	            0x84c0	                             test al, al	      5206	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	CALL_117
0x3668	            0x741c	                            je 0x40036c6	      5206	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	CALL_117
0x366a	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      5206	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	CALL_117
0x3671	           0xfb600	                   movzx eax, byte [rax]	      5206	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	CALL_117
0x3674	            0x3c20	                            cmp al, 0x20	      5206	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	CALL_117
0x3676	            0x740e	                            je 0x40036c6	      5206	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	CALL_117
0x3678	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      5206	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	CALL_117
0x367f	           0xfb600	                   movzx eax, byte [rax]	      5206	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	CALL_117
0x3682	            0x3c09	                               cmp al, 9	      5206	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	CALL_117
0x3684	            0x759d	                           jne 0x4003663	      5206	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	CALL_117
0x3686	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      5209	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	CALL_118
0x368d	          0x4889c7	                            mov rdi, rax	      5209	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	CALL_118
0x3690	      0xe800000000	                          call 0x40036d5	      5209	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	CALL_118
0x3695	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      5209	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	CALL_118
0x369c	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      5210	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	IF_117
0x36a3	           0xfb600	                   movzx eax, byte [rax]	      5210	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	IF_117
0x36a6	            0x3c3d	                            cmp al, 0x3d	      5210	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	IF_117
0x36a8	            0x751c	                           jne 0x4003706	      5210	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	IF_117
0x36aa	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      5204	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x36b0	          0x83c001	                              add eax, 1	      5204	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x36b3	    0x8985e0feffff	            mov dword [rbp - 0x120], eax	      5204	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x36b9	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      5204	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x36bf	          0x83f801	                              cmp eax, 1	      5204	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x36c2	            0x7e98	                           jle 0x400369c	      5204	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x36c4	            0xeb01	                           jmp 0x4003707	      5204	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x36c6	              0x90	                                     nop	      5211	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	IF_117
0x36c7	    0x4883bd28ffff	               cmp qword [rbp - 0xd8], 0	      5215	option.c	FUNCTION_16	WHILE_1	IF_118
0x36cf	     0xf8454010000	                            je 0x4003869	      5215	option.c	FUNCTION_16	WHILE_1	IF_118
0x36d5	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      5217	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_120
0x36dc	          0x4889c7	                            mov rdi, rax	      5217	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_120
0x36df	      0xe800000000	                          call 0x4003724	      5217	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_120
0x36e4	          0x4889c1	                            mov rcx, rax	      5217	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_120
0x36e7	    0x488b05000000	            mov rax, qword [0x0400372e] 	      5217	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_120
0x36ee	      0xba00040000	                          mov edx, 0x400	      5217	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_120
0x36f3	          0x4889ce	                            mov rsi, rcx	      5217	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_120
0x36f6	          0x4889c7	                            mov rdi, rax	      5217	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_120
0x36f9	      0xe800000000	                          call 0x400373e	      5217	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_120
0x36fe	    0x488b05000000	            mov rax, qword [0x04003745] 	      5218	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_121
0x3705	          0x4889c7	                            mov rdi, rax	      5218	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_121
0x3708	      0xe800000000	                          call 0x400374d	      5218	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_121
0x370d	          0x83c002	                              add eax, 2	      5218	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_121
0x3710	    0x8985e0feffff	            mov dword [rbp - 0x120], eax	      5218	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_121
0x3716	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      5219	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x371c	            0x4898	                                    cdqe	      5219	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x371e	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      5219	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x3725	          0x4889d1	                            mov rcx, rdx	      5219	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x3728	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      5219	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x372c	          0x4829d1	                            sub rcx, rdx	      5219	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x372f	          0x4889ca	                            mov rdx, rcx	      5219	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x3732	          0x4801d0	                            add rax, rdx	      5219	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x3735	    0x483d00040000	                          cmp rax, 0x400	      5219	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x373b	     0xf8f9d000000	                            jg 0x400381e	      5219	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x3741	    0x488b15000000	            mov rdx, qword [0x04003788] 	      5222	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_122
0x3748	          0x4889d0	                            mov rax, rdx	      5222	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_122
0x374b	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      5222	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_122
0x3752	          0x4889c6	                            mov rsi, rax	      5222	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_122
0x3755	      0xb800000000	                              mov eax, 0	      5222	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_122
0x375a	          0x4889f7	                            mov rdi, rsi	      5222	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_122
0x375d	            0xf2ae	              repne scasb al, byte [rdi]	      5222	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_122
0x375f	          0x4889c8	                            mov rax, rcx	      5222	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_122
0x3762	          0x48f7d0	                                 not rax	      5222	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_122
0x3765	        0x4883e801	                              sub rax, 1	      5222	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_122
0x3769	          0x4801d0	                            add rax, rdx	      5222	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_122
0x376c	      0x66c7003a20	                  mov word [rax], 0x203a	      5222	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_122
0x3771	        0xc6400200	                   mov byte [rax + 2], 0	      5222	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_122
0x3775	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      5223	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_123
0x377c	          0x4889c2	                            mov rdx, rax	      5223	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_123
0x377f	        0x488b4580	             mov rax, qword [rbp - 0x80]	      5223	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_123
0x3783	          0x4829c2	                            sub rdx, rax	      5223	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_123
0x3786	          0x4889d0	                            mov rax, rdx	      5223	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_123
0x3789	          0x4889c6	                            mov rsi, rax	      5223	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_123
0x378c	    0x488b15000000	            mov rdx, qword [0x040037d3] 	      5223	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_123
0x3793	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      5223	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_123
0x3799	            0x4898	                                    cdqe	      5223	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_123
0x379b	        0x488d0c02	                    lea rcx, [rdx + rax]	      5223	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_123
0x379f	        0x488b4580	             mov rax, qword [rbp - 0x80]	      5223	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_123
0x37a3	          0x4889f2	                            mov rdx, rsi	      5223	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_123
0x37a6	          0x4889c6	                            mov rsi, rax	      5223	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_123
0x37a9	          0x4889cf	                            mov rdi, rcx	      5223	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_123
0x37ac	      0xe800000000	                          call 0x40037f1	      5223	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119	CALL_123
0x37b1	    0x488b05000000	            mov rax, qword [0x040037f8] 	      5224	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x37b8	    0x8b95e0feffff	            mov edx, dword [rbp - 0x120]	      5224	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x37be	          0x4863d2	                         movsxd rdx, edx	      5224	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x37c1	    0x488b8dd8feff	            mov rcx, qword [rbp - 0x128]	      5224	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x37c8	          0x4889ce	                            mov rsi, rcx	      5224	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x37cb	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	      5224	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x37cf	          0x4829ce	                            sub rsi, rcx	      5224	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x37d2	          0x4889f1	                            mov rcx, rsi	      5224	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x37d5	          0x4801ca	                            add rdx, rcx	      5224	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x37d8	          0x4801d0	                            add rax, rdx	      5224	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x37db	          0xc60000	                       mov byte [rax], 0	      5224	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x37de	    0x488b05000000	            mov rax, qword [0x04003825] 	      5227	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_124
0x37e5	      0xbe01040000	                          mov esi, 0x401	      5227	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_124
0x37ea	          0x4889c7	                            mov rdi, rax	      5227	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_124
0x37ed	      0xe800000000	                          call 0x4003832	      5227	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_124
0x37f2	    0x8b0500000000	            mov eax, dword [0x04003838] 	      5229	option.c	FUNCTION_16	WHILE_1	IF_118
0x37f8	          0x83c001	                              add eax, 1	      5229	option.c	FUNCTION_16	WHILE_1	IF_118
0x37fb	    0x890500000000	            mov dword [0x04003841], eax 	      5229	option.c	FUNCTION_16	WHILE_1	IF_118
0x3801	    0x488b05000000	            mov rax, qword [0x04003848] 	      5230	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_125
0x3808	          0x4889c7	                            mov rdi, rax	      5230	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_125
0x380b	      0xe800000000	                          call 0x4003850	      5230	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_125
0x3810	    0x8b0500000000	            mov eax, dword [0x04003856] 	      5231	option.c	FUNCTION_16	WHILE_1	IF_118
0x3816	          0x83e801	                              sub eax, 1	      5231	option.c	FUNCTION_16	WHILE_1	IF_118
0x3819	    0x890500000000	            mov dword [0x0400385f], eax 	      5231	option.c	FUNCTION_16	WHILE_1	IF_118
0x381f	      0xb800000000	                              mov eax, 0	      5233	option.c	FUNCTION_16	WHILE_1	IF_118
0x3824	      0xe982000000	                           jmp 0x40038eb	      5233	option.c	FUNCTION_16	WHILE_1	IF_118
0x3829	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      5236	option.c	FUNCTION_16	WHILE_1	CALL_126
0x3830	          0x4889c7	                            mov rdi, rax	      5236	option.c	FUNCTION_16	WHILE_1	CALL_126
0x3833	      0xe800000000	                          call 0x4003878	      5236	option.c	FUNCTION_16	WHILE_1	CALL_126
0x3838	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      5236	option.c	FUNCTION_16	WHILE_1	CALL_126
0x383f	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      4358	option.c	FUNCTION_16	WHILE_1
0x3846	           0xfb600	                   movzx eax, byte [rax]	      4358	option.c	FUNCTION_16	WHILE_1
0x3849	            0x84c0	                             test al, al	      4358	option.c	FUNCTION_16	WHILE_1
0x384b	     0xf8560dcffff	                           jne 0x40014f1	      4358	option.c	FUNCTION_16	WHILE_1
0x3851	            0xeb04	                           jmp 0x4003897	      4358	option.c	FUNCTION_16	WHILE_1
0x3853	              0x90	                                     nop	      4935	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_83
0x3854	            0xeb01	                           jmp 0x4003897	      4935	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_83
0x3856	              0x90	                                     nop	      4990	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	IF_89
0x3857	    0x8b0500000000	            mov eax, dword [0x0400389d] 	      5240	option.c	FUNCTION_16	IF_120
0x385d	            0x85c0	                           test eax, eax	      5240	option.c	FUNCTION_16	IF_120
0x385f	            0x7445	                            je 0x40038e6	      5240	option.c	FUNCTION_16	IF_120
0x3861	    0x83bdf4feffff	              cmp dword [rbp - 0x10c], 0	      5240	option.c	FUNCTION_16	IF_120
0x3868	            0x743c	                            je 0x40038e6	      5240	option.c	FUNCTION_16	IF_120
0x386a	    0xc70500000000	               mov dword [0x040038b4], 0	      5243	option.c	FUNCTION_16	IF_120
0x3874	    0xc70500000000	               mov dword [0x040038be], 1	      5244	option.c	FUNCTION_16	IF_120
0x387e	      0xbf0a000000	                            mov edi, 0xa	      5245	option.c	FUNCTION_16	IF_120	CALL_127
0x3883	      0xe800000000	                          call 0x40038c8	      5245	option.c	FUNCTION_16	IF_120	CALL_127
0x3888	      0xe800000000	                          call 0x40038cd	      5246	option.c	FUNCTION_16	IF_120	CALL_128
0x388d	      0xe800000000	                          call 0x40038d2	      5247	option.c	FUNCTION_16	IF_120	CALL_129
0x3892	    0xc70500000000	               mov dword [0x040038dc], 1	      5248	option.c	FUNCTION_16	IF_120
0x389c	    0xc70500000000	               mov dword [0x040038e6], 0	      5249	option.c	FUNCTION_16	IF_120
0x38a6	      0xb801000000	                              mov eax, 1	      5252	option.c	FUNCTION_16
0x38ab	        0x488b75f8	                mov rsi, qword [rbp - 8]	      5253	option.c	FUNCTION_16
0x38af	    0x644833342528	                xor rsi, qword fs:[0x28]	      5253	option.c	FUNCTION_16
0x38b8	            0x7405	                            je 0x40038ff	      5253	option.c	FUNCTION_16
0x38ba	      0xe800000000	                          call 0x40038ff	      5253	option.c	FUNCTION_16
0x38bf	              0xc9	                                   leave	      5253	option.c	FUNCTION_16
0x38c0	              0xc3	                                     ret	      5253	option.c	FUNCTION_16
set_term_defaults	WHILE,0:SWITCH,0:CALL,2:FOR,1:ELSE,0:DO,0:IF,3:functions,0	62
0xc461	              0x55	                                push rbp	     10302	option.c	FUNCTION_73
0xc462	          0x4889e5	                            mov rbp, rsp	     10302	option.c	FUNCTION_73
0xc465	        0x4883ec10	                           sub rsp, 0x10	     10302	option.c	FUNCTION_73
0xc469	    0x48c745f80000	                  mov qword [rbp - 8], 0	     10305	option.c	FUNCTION_73	FOR_1
0xc471	      0xe9bb000000	                           jmp 0x400c571	     10305	option.c	FUNCTION_73	FOR_1
0xc476	        0x488b45f8	                mov rax, qword [rbp - 8]	     10307	option.c	FUNCTION_73	FOR_1	IF_1	CALL_1
0xc47a	          0x4889c7	                            mov rdi, rax	     10307	option.c	FUNCTION_73	FOR_1	IF_1	CALL_1
0xc47d	      0xe8c2000000	                   call sym.istermoption	     10307	option.c	FUNCTION_73	FOR_1	IF_1	CALL_1
0xc482	            0x85c0	                           test eax, eax	     10307	option.c	FUNCTION_73	FOR_1	IF_1	CALL_1
0xc484	     0xf84a2000000	                            je 0x400c56c	     10307	option.c	FUNCTION_73	FOR_1	IF_1	CALL_1
0xc48a	        0x488b45f8	                mov rax, qword [rbp - 8]	     10307	option.c	FUNCTION_73	FOR_1	IF_1	CALL_1
0xc48e	        0x488b5028	            mov rdx, qword [rax + 0x28] 	     10307	option.c	FUNCTION_73	FOR_1	IF_1	CALL_1
0xc492	        0x488b45f8	                mov rax, qword [rbp - 8]	     10307	option.c	FUNCTION_73	FOR_1	IF_1	CALL_1
0xc496	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10307	option.c	FUNCTION_73	FOR_1	IF_1	CALL_1
0xc49a	          0x488b00	                    mov rax, qword [rax]	     10307	option.c	FUNCTION_73	FOR_1	IF_1	CALL_1
0xc49d	          0x4839c2	                            cmp rdx, rax	     10307	option.c	FUNCTION_73	FOR_1	IF_1	CALL_1
0xc4a0	     0xf8486000000	                            je 0x400c56c	     10307	option.c	FUNCTION_73	FOR_1	IF_1	CALL_1
0xc4a6	        0x488b45f8	                mov rax, qword [rbp - 8]	     10309	option.c	FUNCTION_73	FOR_1	IF_1	IF_2
0xc4aa	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10309	option.c	FUNCTION_73	FOR_1	IF_1	IF_2
0xc4ae	      0x2580000000	                           and eax, 0x80	     10309	option.c	FUNCTION_73	FOR_1	IF_1	IF_2
0xc4b3	          0x4885c0	                           test rax, rax	     10309	option.c	FUNCTION_73	FOR_1	IF_1	IF_2
0xc4b6	            0x7425	                            je 0x400c51d	     10309	option.c	FUNCTION_73	FOR_1	IF_1	IF_2
0xc4b8	        0x488b45f8	                mov rax, qword [rbp - 8]	     10311	option.c	FUNCTION_73	FOR_1	IF_1	IF_2	CALL_2
0xc4bc	        0x488b4028	            mov rax, qword [rax + 0x28] 	     10311	option.c	FUNCTION_73	FOR_1	IF_1	IF_2	CALL_2
0xc4c0	          0x4889c7	                            mov rdi, rax	     10311	option.c	FUNCTION_73	FOR_1	IF_1	IF_2	CALL_2
0xc4c3	      0xe800000000	                          call 0x400c508	     10311	option.c	FUNCTION_73	FOR_1	IF_1	IF_2	CALL_2
0xc4c8	        0x488b45f8	                mov rax, qword [rbp - 8]	     10312	option.c	FUNCTION_73	FOR_1	IF_1	IF_2
0xc4cc	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10312	option.c	FUNCTION_73	FOR_1	IF_1	IF_2
0xc4d0	            0x247f	                            and al, 0x7f	     10312	option.c	FUNCTION_73	FOR_1	IF_1	IF_2
0xc4d2	          0x4889c2	                            mov rdx, rax	     10312	option.c	FUNCTION_73	FOR_1	IF_1	IF_2
0xc4d5	        0x488b45f8	                mov rax, qword [rbp - 8]	     10312	option.c	FUNCTION_73	FOR_1	IF_1	IF_2
0xc4d9	        0x48895010	             mov qword [rax + 0x10], rdx	     10312	option.c	FUNCTION_73	FOR_1	IF_1	IF_2
0xc4dd	        0x488b45f8	                mov rax, qword [rbp - 8]	     10314	option.c	FUNCTION_73	FOR_1	IF_1
0xc4e1	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10314	option.c	FUNCTION_73	FOR_1	IF_1
0xc4e5	          0x488b10	                    mov rdx, qword [rax]	     10314	option.c	FUNCTION_73	FOR_1	IF_1
0xc4e8	        0x488b45f8	                mov rax, qword [rbp - 8]	     10314	option.c	FUNCTION_73	FOR_1	IF_1
0xc4ec	        0x48895028	             mov qword [rax + 0x28], rdx	     10314	option.c	FUNCTION_73	FOR_1	IF_1
0xc4f0	        0x488b45f8	                mov rax, qword [rbp - 8]	     10315	option.c	FUNCTION_73	FOR_1	IF_1	IF_3
0xc4f4	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10315	option.c	FUNCTION_73	FOR_1	IF_1	IF_3
0xc4f8	          0x83e008	                              and eax, 8	     10315	option.c	FUNCTION_73	FOR_1	IF_1	IF_3
0xc4fb	          0x4885c0	                           test rax, rax	     10315	option.c	FUNCTION_73	FOR_1	IF_1	IF_3
0xc4fe	            0x742c	                            je 0x400c56c	     10315	option.c	FUNCTION_73	FOR_1	IF_1	IF_3
0xc500	        0x488b45f8	                mov rax, qword [rbp - 8]	     10317	option.c	FUNCTION_73	FOR_1	IF_1	IF_3
0xc504	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10317	option.c	FUNCTION_73	FOR_1	IF_1	IF_3
0xc508	             0xc80	                             or al, 0x80	     10317	option.c	FUNCTION_73	FOR_1	IF_1	IF_3
0xc50a	          0x4889c2	                            mov rdx, rax	     10317	option.c	FUNCTION_73	FOR_1	IF_1	IF_3
0xc50d	        0x488b45f8	                mov rax, qword [rbp - 8]	     10317	option.c	FUNCTION_73	FOR_1	IF_1	IF_3
0xc511	        0x48895010	             mov qword [rax + 0x10], rdx	     10317	option.c	FUNCTION_73	FOR_1	IF_1	IF_3
0xc515	        0x488b45f8	                mov rax, qword [rbp - 8]	     10318	option.c	FUNCTION_73	FOR_1	IF_1	IF_3
0xc519	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10318	option.c	FUNCTION_73	FOR_1	IF_1	IF_3
0xc51d	        0x4883e0f7	             and rax, 0xfffffffffffffff7	     10318	option.c	FUNCTION_73	FOR_1	IF_1	IF_3
0xc521	          0x4889c2	                            mov rdx, rax	     10318	option.c	FUNCTION_73	FOR_1	IF_1	IF_3
0xc524	        0x488b45f8	                mov rax, qword [rbp - 8]	     10318	option.c	FUNCTION_73	FOR_1	IF_1	IF_3
0xc528	        0x48895010	             mov qword [rax + 0x10], rdx	     10318	option.c	FUNCTION_73	FOR_1	IF_1	IF_3
0xc52c	      0x488345f840	               add qword [rbp - 8], 0x40	     10305	option.c	FUNCTION_73	FOR_1
0xc531	        0x488b45f8	                mov rax, qword [rbp - 8]	     10305	option.c	FUNCTION_73	FOR_1
0xc535	          0x488b00	                    mov rax, qword [rax]	     10305	option.c	FUNCTION_73	FOR_1
0xc538	          0x4885c0	                           test rax, rax	     10305	option.c	FUNCTION_73	FOR_1
0xc53b	     0xf8535ffffff	                           jne 0x400c4b6	     10305	option.c	FUNCTION_73	FOR_1
0xc541	              0x90	                                     nop	     10322	option.c	FUNCTION_73
0xc542	              0xc9	                                   leave	     10322	option.c	FUNCTION_73
0xc543	              0xc3	                                     ret	     10322	option.c	FUNCTION_73
makeset	WHILE,0:SWITCH,0:CALL,12:FOR,3:ELSE,3:DO,0:IF,19:functions,0	225
0xbb0c	              0x55	                                push rbp	      9992	option.c	FUNCTION_65
0xbb0d	          0x4889e5	                            mov rbp, rsp	      9992	option.c	FUNCTION_65
0xbb10	        0x4883ec50	                           sub rsp, 0x50	      9992	option.c	FUNCTION_65
0xbb14	        0x48897db8	             mov qword [rbp - 0x48], rdi	      9992	option.c	FUNCTION_65
0xbb18	          0x8975b4	             mov dword [rbp - 0x4c], esi	      9992	option.c	FUNCTION_65
0xbb1b	          0x8955b0	             mov dword [rbp - 0x50], edx	      9992	option.c	FUNCTION_65
0xbb1e	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      9996	option.c	FUNCTION_65
0xbb26	    0xc745d0010000	               mov dword [rbp - 0x30], 1	     10007	option.c	FUNCTION_65	FOR_1
0xbb2d	      0xe910030000	                           jmp 0x400be82	     10007	option.c	FUNCTION_65	FOR_1
0xbb32	    0x48c745d80000	               mov qword [rbp - 0x28], 0	     10009	option.c	FUNCTION_65	FOR_1	FOR_2	CALL_1
0xbb3a	      0xe9eb020000	                           jmp 0x400be6a	     10009	option.c	FUNCTION_65	FOR_1	FOR_2	CALL_1
0xbb3f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10010	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1
0xbb43	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10010	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1
0xbb47	      0x2500020000	                          and eax, 0x200	     10010	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1
0xbb4c	          0x4885c0	                           test rax, rax	     10010	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1
0xbb4f	     0xf85d0020000	                           jne 0x400be65	     10010	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1
0xbb55	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10011	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	CALL_2
0xbb59	          0x4889c7	                            mov rdi, rax	     10011	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	CALL_2
0xbb5c	      0xe8e3090000	                   call sym.istermoption	     10011	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	CALL_2
0xbb61	            0x85c0	                           test eax, eax	     10011	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	CALL_2
0xbb63	     0xf85bc020000	                           jne 0x400be65	     10011	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	CALL_2
0xbb69	        0x837dd001	               cmp dword [rbp - 0x30], 1	     10012	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1
0xbb6d	           0xf95c2	                                setne dl	     10012	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1
0xbb70	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10012	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1
0xbb74	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10012	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1
0xbb78	      0x2500000001	                      and eax, 0x1000000	     10012	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1
0xbb7d	          0x4885c0	                           test rax, rax	     10012	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1
0xbb80	           0xf95c0	                                setne al	     10012	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1
0xbb83	            0x31d0	                            xor eax, edx	     10012	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1
0xbb85	            0x84c0	                             test al, al	     10012	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1
0xbb87	     0xf8498020000	                            je 0x400be65	     10012	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1
0xbb8d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10015	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_2
0xbb91	          0x8b4020	            mov eax, dword [rax + 0x20] 	     10015	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_2
0xbb94	            0x85c0	                           test eax, eax	     10015	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_2
0xbb96	            0x750e	                           jne 0x400bbe6	     10015	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_2
0xbb98	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	     10015	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_2
0xbb9b	          0x83e002	                              and eax, 2	     10015	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_2
0xbb9e	            0x85c0	                           test eax, eax	     10015	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_2
0xbba0	     0xf8475020000	                            je 0x400be5b	     10015	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_2
0xbba6	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	     10020	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_3
0xbba9	          0x83e002	                              and eax, 2	     10020	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_3
0xbbac	            0x85c0	                           test eax, eax	     10020	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_3
0xbbae	            0x7416	                            je 0x400bc06	     10020	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_3
0xbbb0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10020	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_3
0xbbb4	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10020	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_3
0xbbb8	      0x2500002000	                       and eax, 0x200000	     10020	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_3
0xbbbd	          0x4885c0	                           test rax, rax	     10020	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_3
0xbbc0	     0xf8558020000	                           jne 0x400be5e	     10020	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_3
0xbbc6	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	     10024	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	CALL_3
0xbbc9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10024	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	CALL_3
0xbbcd	            0x89d6	                            mov esi, edx	     10024	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	CALL_3
0xbbcf	          0x4889c7	                            mov rdi, rax	     10024	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	CALL_3
0xbbd2	      0xe8320e0000	                 call sym.get_varp_scope	     10024	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	CALL_3
0xbbd7	        0x488945e0	             mov qword [rbp - 0x20], rax	     10024	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	CALL_3
0xbbdb	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	     10025	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_4	CALL_4
0xbbde	          0x83e002	                              and eax, 2	     10025	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_4	CALL_4
0xbbe1	            0x85c0	                           test eax, eax	     10025	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_4	CALL_4
0xbbe3	            0x741b	                            je 0x400bc40	     10025	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_4	CALL_4
0xbbe5	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     10025	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_4	CALL_4
0xbbe9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10025	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_4	CALL_4
0xbbed	          0x4889d6	                            mov rsi, rdx	     10025	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_4	CALL_4
0xbbf0	          0x4889c7	                            mov rdi, rax	     10025	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_4	CALL_4
0xbbf3	      0xe81dfdffff	                 call sym.optval_default	     10025	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_4	CALL_4
0xbbf8	            0x85c0	                           test eax, eax	     10025	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_4	CALL_4
0xbbfa	     0xf8521020000	                           jne 0x400be61	     10025	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_4	CALL_4
0xbc00	    0xc745cc020000	               mov dword [rbp - 0x34], 2	     10028	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1
0xbc07	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10029	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_5
0xbc0b	          0x8b4020	            mov eax, dword [rax + 0x20] 	     10029	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_5
0xbc0e	            0x85c0	                           test eax, eax	     10029	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_5
0xbc10	     0xf84f9010000	                            je 0x400be4f	     10029	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_5
0xbc16	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10031	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_5	IF_6
0xbc1a	        0x488b4018	            mov rax, qword [rax + 0x18] 	     10031	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_5	IF_6
0xbc1e	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	     10031	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_5	IF_6
0xbc22	     0xf85e7010000	                           jne 0x400be4f	     10031	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_5	IF_6
0xbc28	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	     10034	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_7
0xbc2b	          0x83e004	                              and eax, 4	     10034	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_7
0xbc2e	            0x85c0	                           test eax, eax	     10034	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_7
0xbc30	     0xf84ee010000	                            je 0x400be64	     10034	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_7
0xbc36	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	     10038	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8
0xbc39	          0x83e002	                              and eax, 2	     10038	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8
0xbc3c	            0x85c0	                           test eax, eax	     10038	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8
0xbc3e	     0xf85cb010000	                           jne 0x400be4f	     10038	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8
0xbc44	        0x837db000	               cmp dword [rbp - 0x50], 0	     10038	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8
0xbc48	     0xf85c1010000	                           jne 0x400be4f	     10038	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8
0xbc4e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10040	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	CALL_5
0xbc52	      0xbe02000000	                              mov esi, 2	     10040	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	CALL_5
0xbc57	          0x4889c7	                            mov rdi, rax	     10040	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	CALL_5
0xbc5a	      0xe8aa0d0000	                 call sym.get_varp_scope	     10040	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	CALL_5
0xbc5f	        0x488945f8	                mov qword [rbp - 8], rax	     10040	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	CALL_5
0xbc63	        0x488b55f8	                mov rdx, qword [rbp - 8]	     10041	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9	CALL_6
0xbc67	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10041	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9	CALL_6
0xbc6b	          0x4889d6	                            mov rsi, rdx	     10041	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9	CALL_6
0xbc6e	          0x4889c7	                            mov rdi, rax	     10041	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9	CALL_6
0xbc71	      0xe89ffcffff	                 call sym.optval_default	     10041	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9	CALL_6
0xbc76	            0x85c0	                           test eax, eax	     10041	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9	CALL_6
0xbc78	     0xf8591010000	                           jne 0x400be4f	     10041	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9	CALL_6
0xbc7e	    0xc745cc010000	               mov dword [rbp - 0x34], 1	     10043	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9
0xbc85	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10044	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9
0xbc89	        0x488945e8	             mov qword [rbp - 0x18], rax	     10044	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9
0xbc8d	        0x488b45f8	                mov rax, qword [rbp - 8]	     10045	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9
0xbc91	        0x488945e0	             mov qword [rbp - 0x20], rax	     10045	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9
0xbc95	      0xe975010000	                           jmp 0x400be4f	     10053	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3
0xbc9a	        0x837dcc01	               cmp dword [rbp - 0x34], 1	     10055	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	IF_10
0xbc9e	            0x740a	                            je 0x400bcea	     10055	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	IF_10
0xbca0	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	     10055	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	IF_10
0xbca3	          0x83e002	                              and eax, 2	     10055	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	IF_10
0xbca6	            0x85c0	                           test eax, eax	     10055	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	IF_10
0xbca8	            0x740a	                            je 0x400bcf4	     10055	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	IF_10
0xbcaa	    0x48c745f00000	               mov qword [rbp - 0x10], 0	     10056	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	IF_10
0xbcb2	            0xeb08	                           jmp 0x400bcfc	     10056	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	IF_10
0xbcb4	    0x48c745f00000	               mov qword [rbp - 0x10], 0	     10058	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1
0xbcbc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10060	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11
0xbcc0	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10060	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11
0xbcc4	          0x83e001	                              and eax, 1	     10060	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11
0xbcc7	          0x4885c0	                           test rax, rax	     10060	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11
0xbcca	            0x742f	                            je 0x400bd3b	     10060	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11
0xbccc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10062	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11	IF_12	CALL_7
0xbcd0	            0x8b08	                    mov ecx, dword [rax]	     10062	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11	IF_12	CALL_7
0xbcd2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10062	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11	IF_12	CALL_7
0xbcd6	          0x488b10	                    mov rdx, qword [rax]	     10062	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11	IF_12	CALL_7
0xbcd9	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	     10062	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11	IF_12	CALL_7
0xbcdd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	     10062	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11	IF_12	CALL_7
0xbce1	          0x4889c7	                            mov rdi, rax	     10062	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11	IF_12	CALL_7
0xbce4	      0xe894050000	                    call sym.put_setbool	     10062	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11	IF_12	CALL_7
0xbce9	            0x85c0	                           test eax, eax	     10062	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11	IF_12	CALL_7
0xbceb	     0xf8512010000	                           jne 0x400be43	     10062	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11	IF_12	CALL_7
0xbcf1	      0xb800000000	                              mov eax, 0	     10063	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11	IF_12
0xbcf6	      0xe956010000	                           jmp 0x400be91	     10063	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11	IF_12
0xbcfb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10065	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13
0xbcff	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10065	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13
0xbd03	          0x83e002	                              and eax, 2	     10065	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13
0xbd06	          0x4885c0	                           test rax, rax	     10065	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13
0xbd09	            0x742d	                            je 0x400bd78	     10065	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13
0xbd0b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10067	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13	IF_14	CALL_8
0xbd0f	          0x488b10	                    mov rdx, qword [rax]	     10067	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13	IF_14	CALL_8
0xbd12	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	     10067	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13	IF_14	CALL_8
0xbd16	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	     10067	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13	IF_14	CALL_8
0xbd1a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	     10067	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13	IF_14	CALL_8
0xbd1e	          0x4889c7	                            mov rdi, rax	     10067	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13	IF_14	CALL_8
0xbd21	      0xe866040000	                     call sym.put_setnum	     10067	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13	IF_14	CALL_8
0xbd26	            0x85c0	                           test eax, eax	     10067	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13	IF_14	CALL_8
0xbd28	     0xf85d5000000	                           jne 0x400be43	     10067	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13	IF_14	CALL_8
0xbd2e	      0xb800000000	                              mov eax, 0	     10068	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13	IF_14
0xbd33	      0xe919010000	                           jmp 0x400be91	     10068	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13	IF_14
0xbd38	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	     10073	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3
0xbd3f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10079	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15
0xbd43	          0x8b4020	            mov eax, dword [rax + 0x20] 	     10079	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15
0xbd46	      0x3d3f400000	                         cmp eax, 0x403f	     10077	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15
0xbd4b	            0x740e	                            je 0x400bd9b	     10077	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15
0xbd4d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10085	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15
0xbd51	          0x8b4020	            mov eax, dword [rax + 0x20] 	     10085	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15
0xbd54	      0x3d24400000	                         cmp eax, 0x4024	     10081	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15
0xbd59	            0x7549	                           jne 0x400bde4	     10081	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15
0xbd5b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10089	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16	CALL_9
0xbd5f	          0x488b08	                    mov rcx, qword [rax]	     10089	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16	CALL_9
0xbd62	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10089	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16	CALL_9
0xbd66	          0x488b10	                    mov rdx, qword [rax]	     10089	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16	CALL_9
0xbd69	        0x488b45b8	             mov rax, qword [rbp - 0x48]	     10089	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16	CALL_9
0xbd6d	      0xbe00000000	                              mov esi, 0	     10089	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16	CALL_9
0xbd72	          0x4889c7	                            mov rdi, rax	     10089	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16	CALL_9
0xbd75	      0xb800000000	                              mov eax, 0	     10089	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16	CALL_9
0xbd7a	      0xe800000000	                          call 0x400bdbf	     10089	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16	CALL_9
0xbd7f	            0x85c0	                           test eax, eax	     10089	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16	CALL_9
0xbd81	            0x7810	                            js 0x400bdd3	     10089	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16	CALL_9
0xbd83	        0x488b45b8	             mov rax, qword [rbp - 0x48]	     10091	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16	CALL_10
0xbd87	          0x4889c7	                            mov rdi, rax	     10091	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16	CALL_10
0xbd8a	      0xe800000000	                          call 0x400bdcf	     10091	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16	CALL_10
0xbd8f	            0x85c0	                           test eax, eax	     10091	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16	CALL_10
0xbd91	            0x790a	                           jns 0x400bddd	     10091	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16	CALL_10
0xbd93	      0xb800000000	                              mov eax, 0	     10092	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16
0xbd98	      0xe9b4000000	                           jmp 0x400be91	     10092	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16
0xbd9d	    0xc745d4010000	               mov dword [rbp - 0x2c], 1	     10093	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15
0xbda4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10097	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17
0xbda8	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10097	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17
0xbdac	          0x83e010	                           and eax, 0x10	     10097	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17
0xbdaf	          0x4885c0	                           test rax, rax	     10096	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_11
0xbdb2	           0xf95c0	                                setne al	     10096	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_11
0xbdb5	           0xfb6f8	                           movzx edi, al	     10096	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_11
0xbdb8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10096	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_11
0xbdbc	          0x488b10	                    mov rdx, qword [rax]	     10096	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_11
0xbdbf	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	     10096	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_11
0xbdc3	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	     10096	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_11
0xbdc7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	     10096	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_11
0xbdcb	          0x4189f8	                            mov r8d, edi	     10096	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_11
0xbdce	          0x4889c7	                            mov rdi, rax	     10096	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_11
0xbdd1	      0xe815020000	                  call sym.put_setstring	     10096	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_11
0xbdd6	            0x85c0	                           test eax, eax	     10096	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_11
0xbdd8	            0x7507	                           jne 0x400be21	     10096	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17	CALL_11
0xbdda	      0xb800000000	                              mov eax, 0	     10098	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17
0xbddf	            0xeb70	                           jmp 0x400be91	     10098	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17
0xbde1	        0x837dd400	               cmp dword [rbp - 0x2c], 0	     10100	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_18
0xbde5	            0x741c	                            je 0x400be43	     10100	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_18
0xbde7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	     10102	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_18	IF_19	CALL_12
0xbdeb	      0xbe00000000	                              mov esi, 0	     10102	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_18	IF_19	CALL_12
0xbdf0	          0x4889c7	                            mov rdi, rax	     10102	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_18	IF_19	CALL_12
0xbdf3	      0xe800000000	                          call 0x400be38	     10102	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_18	IF_19	CALL_12
0xbdf8	            0x85c0	                           test eax, eax	     10102	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_18	IF_19	CALL_12
0xbdfa	            0x7507	                           jne 0x400be43	     10102	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_18	IF_19	CALL_12
0xbdfc	      0xb800000000	                              mov eax, 0	     10103	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_18	IF_19
0xbe01	            0xeb4e	                           jmp 0x400be91	     10103	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_18	IF_19
0xbe03	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10053	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3
0xbe07	        0x488945e0	             mov qword [rbp - 0x20], rax	     10053	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3
0xbe0b	        0x8345cc01	               add dword [rbp - 0x34], 1	     10053	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3
0xbe0f	        0x837dcc02	               cmp dword [rbp - 0x34], 2	     10053	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3
0xbe13	     0xf8e81feffff	                           jle 0x400bcda	     10053	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3
0xbe19	            0xeb0a	                           jmp 0x400be65	     10053	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	FOR_3
0xbe1b	              0x90	                                     nop	     10016	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_2
0xbe1c	            0xeb07	                           jmp 0x400be65	     10016	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_2
0xbe1e	              0x90	                                     nop	     10021	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_3
0xbe1f	            0xeb04	                           jmp 0x400be65	     10021	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_3
0xbe21	              0x90	                                     nop	     10026	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_4
0xbe22	            0xeb01	                           jmp 0x400be65	     10026	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_4
0xbe24	              0x90	                                     nop	     10035	option.c	FUNCTION_65	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_7
0xbe25	      0x488345d840	           add qword [rbp - 0x28], 0x40 	     10009	option.c	FUNCTION_65	FOR_1	FOR_2	CALL_1
0xbe2a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10009	option.c	FUNCTION_65	FOR_1	FOR_2	CALL_1
0xbe2e	          0x4889c7	                            mov rdi, rax	     10009	option.c	FUNCTION_65	FOR_1	FOR_2	CALL_1
0xbe31	      0xe80e070000	                   call sym.istermoption	     10009	option.c	FUNCTION_65	FOR_1	FOR_2	CALL_1
0xbe36	            0x85c0	                           test eax, eax	     10009	option.c	FUNCTION_65	FOR_1	FOR_2	CALL_1
0xbe38	     0xf8401fdffff	                            je 0x400bb7f	     10009	option.c	FUNCTION_65	FOR_1	FOR_2	CALL_1
0xbe3e	        0x836dd001	               sub dword [rbp - 0x30], 1	     10007	option.c	FUNCTION_65	FOR_1
0xbe42	        0x837dd000	               cmp dword [rbp - 0x30], 0	     10007	option.c	FUNCTION_65	FOR_1
0xbe46	     0xf89e6fcffff	                           jns 0x400bb72	     10007	option.c	FUNCTION_65	FOR_1
0xbe4c	      0xb801000000	                              mov eax, 1	     10110	option.c	FUNCTION_65
0xbe51	              0xc9	                                   leave	     10111	option.c	FUNCTION_65
0xbe52	              0xc3	                                     ret	     10111	option.c	FUNCTION_65
set_string_option_direct	WHILE,0:SWITCH,0:CALL,11:FOR,0:ELSE,0:DO,0:IF,8:functions,0	134
0x4742	              0x55	                                push rbp	      5842	option.c	FUNCTION_37
0x4743	          0x4889e5	                            mov rbp, rsp	      5842	option.c	FUNCTION_37
0x4746	        0x4883ec40	                           sub rsp, 0x40	      5842	option.c	FUNCTION_37
0x474a	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      5842	option.c	FUNCTION_37
0x474e	          0x8975d4	             mov dword [rbp - 0x2c], esi	      5842	option.c	FUNCTION_37
0x4751	        0x488955c8	             mov qword [rbp - 0x38], rdx	      5842	option.c	FUNCTION_37
0x4755	          0x894dd0	             mov dword [rbp - 0x30], ecx	      5842	option.c	FUNCTION_37
0x4758	        0x448945c4	             mov dword [rbp - 0x3c], r8d	      5842	option.c	FUNCTION_37
0x475c	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      5845	option.c	FUNCTION_37
0x475f	          0x83e006	                              and eax, 6	      5845	option.c	FUNCTION_37
0x4762	            0x85c0	                           test eax, eax	      5845	option.c	FUNCTION_37
0x4764	           0xf94c0	                                 sete al	      5845	option.c	FUNCTION_37
0x4767	           0xfb6c0	                           movzx eax, al	      5845	option.c	FUNCTION_37
0x476a	          0x8945ec	             mov dword [rbp - 0x14], eax	      5845	option.c	FUNCTION_37
0x476d	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      5846	option.c	FUNCTION_37
0x4770	          0x8945e8	             mov dword [rbp - 0x18], eax	      5846	option.c	FUNCTION_37
0x4773	        0x837de8ff	cmp dword [rbp - 0x18], 0xffffffffffffffff	      5848	option.c	FUNCTION_37	IF_1
0x4777	            0x754d	                           jne 0x4004806	      5848	option.c	FUNCTION_37	IF_1
0x4779	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5850	option.c	FUNCTION_37	IF_1	CALL_1
0x477d	          0x4889c7	                            mov rdi, rax	      5850	option.c	FUNCTION_37	IF_1	CALL_1
0x4780	      0xe801660000	                     call sym.findoption	      5850	option.c	FUNCTION_37	IF_1	CALL_1
0x4785	          0x8945e8	             mov dword [rbp - 0x18], eax	      5850	option.c	FUNCTION_37	IF_1	CALL_1
0x4788	        0x837de800	               cmp dword [rbp - 0x18], 0	      5851	option.c	FUNCTION_37	IF_1	IF_2
0x478c	            0x7938	                           jns 0x4004806	      5851	option.c	FUNCTION_37	IF_1	IF_2
0x478e	      0xbf00000000	                              mov edi, 0	      5853	option.c	FUNCTION_37	IF_1	IF_2	CALL_3
0x4793	      0xe800000000	                          call 0x40047d8	      5853	option.c	FUNCTION_37	IF_1	IF_2	CALL_3
0x4798	      0xbe00000000	                              mov esi, 0	      5853	option.c	FUNCTION_37	IF_1	IF_2	CALL_3
0x479d	          0x4889c7	                            mov rdi, rax	      5853	option.c	FUNCTION_37	IF_1	IF_2	CALL_3
0x47a0	      0xe800000000	                          call 0x40047e5	      5853	option.c	FUNCTION_37	IF_1	IF_2	CALL_3
0x47a5	      0xbf00000000	                              mov edi, 0	      5854	option.c	FUNCTION_37	IF_1	IF_2	CALL_5
0x47aa	      0xe800000000	                          call 0x40047ef	      5854	option.c	FUNCTION_37	IF_1	IF_2	CALL_5
0x47af	          0x4889c2	                            mov rdx, rax	      5854	option.c	FUNCTION_37	IF_1	IF_2	CALL_5
0x47b2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5854	option.c	FUNCTION_37	IF_1	IF_2	CALL_5
0x47b6	          0x4889c6	                            mov rsi, rax	      5854	option.c	FUNCTION_37	IF_1	IF_2	CALL_5
0x47b9	          0x4889d7	                            mov rdi, rdx	      5854	option.c	FUNCTION_37	IF_1	IF_2	CALL_5
0x47bc	      0xe800000000	                          call 0x4004801	      5854	option.c	FUNCTION_37	IF_1	IF_2	CALL_5
0x47c1	      0xe94b010000	                           jmp 0x4004951	      5855	option.c	FUNCTION_37	IF_1	IF_2
0x47c6	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      5859	option.c	FUNCTION_37	IF_3
0x47c9	            0x4898	                                    cdqe	      5859	option.c	FUNCTION_37	IF_3
0x47cb	        0x48c1e006	                              shl rax, 6	      5859	option.c	FUNCTION_37	IF_3
0x47cf	    0x480500000000	                              add rax, 0	      5859	option.c	FUNCTION_37	IF_3
0x47d5	          0x488b00	                    mov rax, qword [rax]	      5859	option.c	FUNCTION_37	IF_3
0x47d8	          0x4885c0	                           test rax, rax	      5859	option.c	FUNCTION_37	IF_3
0x47db	     0xf842f010000	                            je 0x4004950	      5859	option.c	FUNCTION_37	IF_3
0x47e1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5862	option.c	FUNCTION_37	CALL_6
0x47e5	          0x4889c7	                            mov rdi, rax	      5862	option.c	FUNCTION_37	CALL_6
0x47e8	      0xe800000000	                          call 0x400482d	      5862	option.c	FUNCTION_37	CALL_6
0x47ed	        0x488945f0	             mov qword [rbp - 0x10], rax	      5862	option.c	FUNCTION_37	CALL_6
0x47f1	      0x48837df000	               cmp qword [rbp - 0x10], 0	      5863	option.c	FUNCTION_37	IF_4
0x47f6	     0xf8415010000	                            je 0x4004951	      5863	option.c	FUNCTION_37	IF_4
0x47fc	        0x837dec00	               cmp dword [rbp - 0x14], 0	      5865	option.c	FUNCTION_37	IF_4	CALL_7
0x4800	            0x7505	                           jne 0x4004847	      5865	option.c	FUNCTION_37	IF_4	CALL_7
0x4802	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      5865	option.c	FUNCTION_37	IF_4	CALL_7
0x4805	            0xeb05	                           jmp 0x400484c	      5865	option.c	FUNCTION_37	IF_4	CALL_7
0x4807	      0xb804000000	                              mov eax, 4	      5865	option.c	FUNCTION_37	IF_4	CALL_7
0x480c	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      5865	option.c	FUNCTION_37	IF_4	CALL_7
0x480f	          0x4863d2	                         movsxd rdx, edx	      5865	option.c	FUNCTION_37	IF_4	CALL_7
0x4812	        0x48c1e206	                              shl rdx, 6	      5865	option.c	FUNCTION_37	IF_4	CALL_7
0x4816	    0x4881c2000000	                              add rdx, 0	      5865	option.c	FUNCTION_37	IF_4	CALL_7
0x481d	            0x89c6	                            mov esi, eax	      5865	option.c	FUNCTION_37	IF_4	CALL_7
0x481f	          0x4889d7	                            mov rdi, rdx	      5865	option.c	FUNCTION_37	IF_4	CALL_7
0x4822	      0xe8e2810000	                 call sym.get_varp_scope	      5865	option.c	FUNCTION_37	IF_4	CALL_7
0x4827	        0x488945f8	                mov qword [rbp - 8], rax	      5865	option.c	FUNCTION_37	IF_4	CALL_7
0x482b	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      5867	option.c	FUNCTION_37	IF_4	IF_5
0x482e	          0x83e001	                              and eax, 1	      5867	option.c	FUNCTION_37	IF_4	IF_5
0x4831	            0x85c0	                           test eax, eax	      5867	option.c	FUNCTION_37	IF_4	IF_5
0x4833	            0x7429	                            je 0x400489e	      5867	option.c	FUNCTION_37	IF_4	IF_5
0x4835	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      5867	option.c	FUNCTION_37	IF_4	IF_5
0x4838	            0x4898	                                    cdqe	      5867	option.c	FUNCTION_37	IF_4	IF_5
0x483a	        0x48c1e006	                              shl rax, 6	      5867	option.c	FUNCTION_37	IF_4	IF_5
0x483e	    0x480500000000	                              add rax, 0	      5867	option.c	FUNCTION_37	IF_4	IF_5
0x4844	          0x488b00	                    mov rax, qword [rax]	      5867	option.c	FUNCTION_37	IF_4	IF_5
0x4847	          0x83e008	                              and eax, 8	      5867	option.c	FUNCTION_37	IF_4	IF_5
0x484a	          0x4885c0	                           test rax, rax	      5867	option.c	FUNCTION_37	IF_4	IF_5
0x484d	            0x740f	                            je 0x400489e	      5867	option.c	FUNCTION_37	IF_4	IF_5
0x484f	        0x488b45f8	                mov rax, qword [rbp - 8]	      5868	option.c	FUNCTION_37	IF_4	CALL_8
0x4853	          0x488b00	                    mov rax, qword [rax]	      5868	option.c	FUNCTION_37	IF_4	CALL_8
0x4856	          0x4889c7	                            mov rdi, rax	      5868	option.c	FUNCTION_37	IF_4	CALL_8
0x4859	      0xe800000000	                          call 0x400489e	      5868	option.c	FUNCTION_37	IF_4	CALL_8
0x485e	        0x488b45f8	                mov rax, qword [rbp - 8]	      5869	option.c	FUNCTION_37	IF_4
0x4862	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      5869	option.c	FUNCTION_37	IF_4
0x4866	          0x488910	                    mov qword [rax], rdx	      5869	option.c	FUNCTION_37	IF_4
0x4869	        0x837dec00	               cmp dword [rbp - 0x14], 0	      5872	option.c	FUNCTION_37	IF_4	IF_6
0x486d	            0x7411	                            je 0x40048c0	      5872	option.c	FUNCTION_37	IF_4	IF_6
0x486f	        0x488b55f8	                mov rdx, qword [rbp - 8]	      5873	option.c	FUNCTION_37	IF_4	CALL_9
0x4873	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      5873	option.c	FUNCTION_37	IF_4	CALL_9
0x4876	          0x4889d6	                            mov rsi, rdx	      5873	option.c	FUNCTION_37	IF_4	CALL_9
0x4879	            0x89c7	                            mov edi, eax	      5873	option.c	FUNCTION_37	IF_4	CALL_9
0x487b	      0xe893000000	       call sym.set_string_option_global	      5873	option.c	FUNCTION_37	IF_4	CALL_9
0x4880	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      5875	option.c	FUNCTION_37	IF_4
0x4883	            0x4898	                                    cdqe	      5875	option.c	FUNCTION_37	IF_4
0x4885	        0x48c1e006	                              shl rax, 6	      5875	option.c	FUNCTION_37	IF_4
0x4889	    0x480500000000	                              add rax, 0	      5875	option.c	FUNCTION_37	IF_4
0x488f	          0x488b00	                    mov rax, qword [rax]	      5875	option.c	FUNCTION_37	IF_4
0x4892	        0x4883c808	                               or rax, 8	      5875	option.c	FUNCTION_37	IF_4
0x4896	          0x4889c2	                            mov rdx, rax	      5875	option.c	FUNCTION_37	IF_4
0x4899	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      5875	option.c	FUNCTION_37	IF_4
0x489c	            0x4898	                                    cdqe	      5875	option.c	FUNCTION_37	IF_4
0x489e	        0x48c1e006	                              shl rax, 6	      5875	option.c	FUNCTION_37	IF_4
0x48a2	    0x480500000000	                              add rax, 0	      5875	option.c	FUNCTION_37	IF_4
0x48a8	          0x488910	                    mov qword [rax], rdx	      5875	option.c	FUNCTION_37	IF_4
0x48ab	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      5879	option.c	FUNCTION_37	IF_4	IF_7
0x48ae	            0x4898	                                    cdqe	      5879	option.c	FUNCTION_37	IF_4	IF_7
0x48b0	        0x48c1e006	                              shl rax, 6	      5879	option.c	FUNCTION_37	IF_4	IF_7
0x48b4	    0x480500000000	                              add rax, 0	      5879	option.c	FUNCTION_37	IF_4	IF_7
0x48ba	            0x8b00	                    mov eax, dword [rax]	      5879	option.c	FUNCTION_37	IF_4	IF_7
0x48bc	      0x2500100000	                         and eax, 0x1000	      5879	option.c	FUNCTION_37	IF_4	IF_7
0x48c1	            0x85c0	                           test eax, eax	      5879	option.c	FUNCTION_37	IF_4	IF_7
0x48c3	            0x7423	                            je 0x4004928	      5879	option.c	FUNCTION_37	IF_4	IF_7
0x48c5	        0x837dec00	               cmp dword [rbp - 0x14], 0	      5879	option.c	FUNCTION_37	IF_4	IF_7
0x48c9	            0x741d	                            je 0x4004928	      5879	option.c	FUNCTION_37	IF_4	IF_7
0x48cb	        0x488b45f8	                mov rax, qword [rbp - 8]	      5881	option.c	FUNCTION_37	IF_4	IF_7	CALL_10
0x48cf	          0x488b00	                    mov rax, qword [rax]	      5881	option.c	FUNCTION_37	IF_4	IF_7	CALL_10
0x48d2	          0x4889c7	                            mov rdi, rax	      5881	option.c	FUNCTION_37	IF_4	IF_7	CALL_10
0x48d5	      0xe800000000	                          call 0x400491a	      5881	option.c	FUNCTION_37	IF_4	IF_7	CALL_10
0x48da	    0x488b15000000	            mov rdx, qword [0x04004921] 	      5882	option.c	FUNCTION_37	IF_4	IF_7
0x48e1	        0x488b45f8	                mov rax, qword [rbp - 8]	      5882	option.c	FUNCTION_37	IF_4	IF_7
0x48e5	          0x488910	                    mov qword [rax], rdx	      5882	option.c	FUNCTION_37	IF_4	IF_7
0x48e8	        0x837dc4fa	cmp dword [rbp - 0x3c], 0xfffffffffffffffa	      5885	option.c	FUNCTION_37	IF_4	IF_8
0x48ec	            0x7423	                            je 0x4004951	      5885	option.c	FUNCTION_37	IF_4	IF_8
0x48ee	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      5886	option.c	FUNCTION_37	IF_4	IF_8	CALL_11
0x48f2	            0x7508	                           jne 0x400493c	      5886	option.c	FUNCTION_37	IF_4	IF_8	CALL_11
0x48f4	    0x8b0500000000	            mov eax, dword [0x0400493a] 	      5886	option.c	FUNCTION_37	IF_4	IF_8	CALL_11
0x48fa	            0xeb03	                           jmp 0x400493f	      5886	option.c	FUNCTION_37	IF_4	IF_8	CALL_11
0x48fc	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      5886	option.c	FUNCTION_37	IF_4	IF_8	CALL_11
0x48ff	          0x8b75d0	             mov esi, dword [rbp - 0x30]	      5886	option.c	FUNCTION_37	IF_4	IF_8	CALL_11
0x4902	          0x8b4de8	             mov ecx, dword [rbp - 0x18]	      5886	option.c	FUNCTION_37	IF_4	IF_8	CALL_11
0x4905	            0x89c2	                            mov edx, eax	      5886	option.c	FUNCTION_37	IF_4	IF_8	CALL_11
0x4907	            0x89cf	                            mov edi, ecx	      5886	option.c	FUNCTION_37	IF_4	IF_8	CALL_11
0x4909	      0xe828420000	        call sym.set_option_scriptID_idx	      5886	option.c	FUNCTION_37	IF_4	IF_8	CALL_11
0x490e	            0xeb01	                           jmp 0x4004951	      5886	option.c	FUNCTION_37	IF_4	IF_8	CALL_11
0x4910	              0x90	                                     nop	      5860	option.c	FUNCTION_37	IF_3
0x4911	              0xc9	                                   leave	      5890	option.c	FUNCTION_37
0x4912	              0xc3	                                     ret	      5890	option.c	FUNCTION_37
signcolumn_on	WHILE,0:SWITCH,0:CALL,0:FOR,0:ELSE,0:DO,0:IF,2:functions,0	33
0x115fe	              0x55	                                push rbp	     12660	option.c	FUNCTION_119
0x115ff	          0x4889e5	                            mov rbp, rsp	     12660	option.c	FUNCTION_119
0x11602	        0x48897df8	                mov qword [rbp - 8], rdi	     12660	option.c	FUNCTION_119
0x11606	        0x488b45f8	                mov rax, qword [rbp - 8]	     12661	option.c	FUNCTION_119	IF_1
0x1160a	    0x488b80b80200	           mov rax, qword [rax + 0x2b8] 	     12661	option.c	FUNCTION_119	IF_1
0x11611	           0xfb600	                   movzx eax, byte [rax]	     12661	option.c	FUNCTION_119	IF_1
0x11614	            0x3c6e	                            cmp al, 0x6e	     12661	option.c	FUNCTION_119	IF_1
0x11616	            0x7507	                           jne 0x401165f	     12661	option.c	FUNCTION_119	IF_1
0x11618	      0xb800000000	                              mov eax, 0	     12662	option.c	FUNCTION_119	IF_1
0x1161d	            0xeb4c	                           jmp 0x40116ab	     12662	option.c	FUNCTION_119	IF_1
0x1161f	        0x488b45f8	                mov rax, qword [rbp - 8]	     12663	option.c	FUNCTION_119	IF_2
0x11623	    0x488b80b80200	           mov rax, qword [rax + 0x2b8] 	     12663	option.c	FUNCTION_119	IF_2
0x1162a	           0xfb600	                   movzx eax, byte [rax]	     12663	option.c	FUNCTION_119	IF_2
0x1162d	            0x3c79	                            cmp al, 0x79	     12663	option.c	FUNCTION_119	IF_2
0x1162f	            0x7507	                           jne 0x4011678	     12663	option.c	FUNCTION_119	IF_2
0x11631	      0xb801000000	                              mov eax, 1	     12664	option.c	FUNCTION_119	IF_2
0x11636	            0xeb33	                           jmp 0x40116ab	     12664	option.c	FUNCTION_119	IF_2
0x11638	        0x488b45f8	                mov rax, qword [rbp - 8]	     12665	option.c	FUNCTION_119
0x1163c	        0x488b4008	                mov rax, qword [rax + 8]	     12665	option.c	FUNCTION_119
0x11640	    0x488b80001c00	          mov rax, qword [rax + 0x1c00] 	     12665	option.c	FUNCTION_119
0x11647	          0x4885c0	                           test rax, rax	     12667	option.c	FUNCTION_119
0x1164a	            0x7512	                           jne 0x401169e	     12667	option.c	FUNCTION_119
0x1164c	        0x488b45f8	                mov rax, qword [rbp - 8]	     12667	option.c	FUNCTION_119
0x11650	        0x488b4008	                mov rax, qword [rax + 8]	     12667	option.c	FUNCTION_119
0x11654	    0x8b80081c0000	          mov eax, dword [rax + 0x1c08] 	     12667	option.c	FUNCTION_119
0x1165a	            0x85c0	                           test eax, eax	     12667	option.c	FUNCTION_119
0x1165c	            0x7407	                            je 0x40116a5	     12667	option.c	FUNCTION_119
0x1165e	      0xb801000000	                              mov eax, 1	     12667	option.c	FUNCTION_119
0x11663	            0xeb05	                           jmp 0x40116aa	     12665	option.c	FUNCTION_119
0x11665	      0xb800000000	                              mov eax, 0	     12667	option.c	FUNCTION_119
0x1166a	              0x90	                                     nop	     12665	option.c	FUNCTION_119
0x1166b	              0x5d	                                 pop rbp	     12670	option.c	FUNCTION_119
0x1166c	              0xc3	                                     ret	     12670	option.c	FUNCTION_119
can_bs	WHILE,0:SWITCH,1:CALL,1:FOR,0:ELSE,0:DO,0:IF,0:functions,0	32
0x10e73	              0x55	                                push rbp	     12405	option.c	FUNCTION_110
0x10e74	          0x4889e5	                            mov rbp, rsp	     12405	option.c	FUNCTION_110
0x10e77	        0x4883ec10	                           sub rsp, 0x10	     12405	option.c	FUNCTION_110
0x10e7b	          0x897dfc	                mov dword [rbp - 4], edi	     12405	option.c	FUNCTION_110
0x10e7e	    0x488b05000000	            mov rax, qword [0x04010ec5] 	     12406	option.c	FUNCTION_110	SWITCH_1
0x10e85	           0xfb600	                   movzx eax, byte [rax]	     12406	option.c	FUNCTION_110	SWITCH_1
0x10e88	           0xfb6c0	                           movzx eax, al	     12406	option.c	FUNCTION_110	SWITCH_1
0x10e8b	          0x83f831	                           cmp eax, 0x31	     12406	option.c	FUNCTION_110	SWITCH_1
0x10e8e	            0x7413	                            je 0x4010ee3	     12406	option.c	FUNCTION_110	SWITCH_1
0x10e90	          0x83f832	                           cmp eax, 0x32	     12406	option.c	FUNCTION_110	SWITCH_1
0x10e93	            0x7407	                            je 0x4010edc	     12406	option.c	FUNCTION_110	SWITCH_1
0x10e95	          0x83f830	                           cmp eax, 0x30	     12406	option.c	FUNCTION_110	SWITCH_1
0x10e98	            0x7415	                            je 0x4010eef	     12406	option.c	FUNCTION_110	SWITCH_1
0x10e9a	            0xeb1a	                           jmp 0x4010ef6	     12406	option.c	FUNCTION_110	SWITCH_1
0x10e9c	      0xb801000000	                              mov eax, 1	     12408	option.c	FUNCTION_110	SWITCH_1
0x10ea1	            0xeb30	                           jmp 0x4010f13	     12408	option.c	FUNCTION_110	SWITCH_1
0x10ea3	        0x837dfc73	               cmp dword [rbp - 4], 0x73	     12409	option.c	FUNCTION_110	SWITCH_1
0x10ea7	           0xf95c0	                                setne al	     12409	option.c	FUNCTION_110	SWITCH_1
0x10eaa	           0xfb6c0	                           movzx eax, al	     12409	option.c	FUNCTION_110	SWITCH_1
0x10ead	            0xeb24	                           jmp 0x4010f13	     12409	option.c	FUNCTION_110	SWITCH_1
0x10eaf	      0xb800000000	                              mov eax, 0	     12410	option.c	FUNCTION_110	SWITCH_1
0x10eb4	            0xeb1d	                           jmp 0x4010f13	     12410	option.c	FUNCTION_110	SWITCH_1
0x10eb6	    0x488b05000000	            mov rax, qword [0x04010efd] 	     12412	option.c	FUNCTION_110	CALL_1
0x10ebd	          0x8b55fc	                mov edx, dword [rbp - 4]	     12412	option.c	FUNCTION_110	CALL_1
0x10ec0	            0x89d6	                            mov esi, edx	     12412	option.c	FUNCTION_110	CALL_1
0x10ec2	          0x4889c7	                            mov rdi, rax	     12412	option.c	FUNCTION_110	CALL_1
0x10ec5	      0xe800000000	                          call 0x4010f0a	     12412	option.c	FUNCTION_110	CALL_1
0x10eca	          0x4885c0	                           test rax, rax	     12412	option.c	FUNCTION_110	CALL_1
0x10ecd	           0xf95c0	                                setne al	     12412	option.c	FUNCTION_110	CALL_1
0x10ed0	           0xfb6c0	                           movzx eax, al	     12412	option.c	FUNCTION_110	CALL_1
0x10ed3	              0xc9	                                   leave	     12413	option.c	FUNCTION_110
0x10ed4	              0xc3	                                     ret	     12413	option.c	FUNCTION_110
langmap_init	WHILE,0:SWITCH,0:CALL,1:FOR,1:ELSE,0:DO,0:IF,0:functions,0	20
0x100bc	              0x55	                                push rbp	     11881	option.c	ELSE_1	FUNCTION_96
0x100bd	          0x4889e5	                            mov rbp, rsp	     11881	option.c	ELSE_1	FUNCTION_96
0x100c0	        0x4883ec10	                           sub rsp, 0x10	     11881	option.c	ELSE_1	FUNCTION_96
0x100c4	    0xc745fc000000	                  mov dword [rbp - 4], 0	     11884	option.c	ELSE_1	FUNCTION_96	FOR_1
0x100cb	            0xeb14	                           jmp 0x4010121	     11884	option.c	ELSE_1	FUNCTION_96	FOR_1
0x100cd	          0x8b45fc	                mov eax, dword [rbp - 4]	     11885	option.c	ELSE_1	FUNCTION_96	FOR_1
0x100d0	            0x89c2	                            mov edx, eax	     11885	option.c	ELSE_1	FUNCTION_96	FOR_1
0x100d2	          0x8b45fc	                mov eax, dword [rbp - 4]	     11885	option.c	ELSE_1	FUNCTION_96	FOR_1
0x100d5	            0x4898	                                    cdqe	     11885	option.c	ELSE_1	FUNCTION_96	FOR_1
0x100d7	    0x889000000000	                      mov byte [rax], dl	     11885	option.c	ELSE_1	FUNCTION_96	FOR_1
0x100dd	        0x8345fc01	                  add dword [rbp - 4], 1	     11884	option.c	ELSE_1	FUNCTION_96	FOR_1
0x100e1	    0x817dfcff0000	               cmp dword [rbp - 4], 0xff	     11884	option.c	ELSE_1	FUNCTION_96	FOR_1
0x100e8	            0x7ee3	                           jle 0x401010d	     11884	option.c	ELSE_1	FUNCTION_96	FOR_1
0x100ea	      0xba08000000	                              mov edx, 8	     11887	option.c	ELSE_1	FUNCTION_96	CALL_1
0x100ef	      0xbe08000000	                              mov esi, 8	     11887	option.c	ELSE_1	FUNCTION_96	CALL_1
0x100f4	      0xbf00000000	                              mov edi, 0	     11887	option.c	ELSE_1	FUNCTION_96	CALL_1
0x100f9	      0xe800000000	                          call 0x401013e	     11887	option.c	ELSE_1	FUNCTION_96	CALL_1
0x100fe	              0x90	                                     nop	     11889	option.c	ELSE_1	FUNCTION_96
0x100ff	              0xc9	                                   leave	     11889	option.c	ELSE_1	FUNCTION_96
0x10100	              0xc3	                                     ret	     11889	option.c	ELSE_1	FUNCTION_96
find_mps_values	WHILE,1:SWITCH,0:CALL,10:FOR,0:ELSE,5:DO,0:IF,10:functions,0	192
0x11171	              0x55	                                push rbp	     12513	option.c	FUNCTION_116
0x11172	          0x4889e5	                            mov rbp, rsp	     12513	option.c	FUNCTION_116
0x11175	              0x53	                                push rbx	     12513	option.c	FUNCTION_116
0x11176	        0x4883ec38	                           sub rsp, 0x38	     12513	option.c	FUNCTION_116
0x1117a	        0x48897dd8	             mov qword [rbp - 0x28], rdi	     12513	option.c	FUNCTION_116
0x1117e	        0x488975d0	             mov qword [rbp - 0x30], rsi	     12513	option.c	FUNCTION_116
0x11182	        0x488955c8	             mov qword [rbp - 0x38], rdx	     12513	option.c	FUNCTION_116
0x11186	          0x894dc4	             mov dword [rbp - 0x3c], ecx	     12513	option.c	FUNCTION_116
0x11189	    0x488b05000000	            mov rax, qword [0x040111d0] 	     12516	option.c	FUNCTION_116
0x11190	    0x488b80181500	          mov rax, qword [rax + 0x1518] 	     12516	option.c	FUNCTION_116
0x11197	        0x488945e0	             mov qword [rbp - 0x20], rax	     12516	option.c	FUNCTION_116
0x1119b	      0xe964020000	                           jmp 0x4011444	     12517	option.c	FUNCTION_116	WHILE_1
0x111a0	    0x8b0500000000	            mov eax, dword [0x040111e6] 	     12520	option.c	FUNCTION_116	WHILE_1	IF_1
0x111a6	            0x85c0	                           test eax, eax	     12520	option.c	FUNCTION_116	WHILE_1	IF_1
0x111a8	     0xf846a010000	                            je 0x4011358	     12520	option.c	FUNCTION_116	WHILE_1	IF_1
0x111ae	    0x488b05000000	            mov rax, qword [0x040111f5] 	     12524	option.c	FUNCTION_116	WHILE_1	IF_1	IF_2	CALL_1
0x111b5	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     12524	option.c	FUNCTION_116	WHILE_1	IF_1	IF_2	CALL_1
0x111b9	          0x4889d7	                            mov rdi, rdx	     12524	option.c	FUNCTION_116	WHILE_1	IF_1	IF_2	CALL_1
0x111bc	            0xffd0	                                call rax	     12524	option.c	FUNCTION_116	WHILE_1	IF_1	IF_2	CALL_1
0x111be	            0x89c2	                            mov edx, eax	     12524	option.c	FUNCTION_116	WHILE_1	IF_1	IF_2	CALL_1
0x111c0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     12524	option.c	FUNCTION_116	WHILE_1	IF_1	IF_2	CALL_1
0x111c4	            0x8b00	                    mov eax, dword [rax]	     12524	option.c	FUNCTION_116	WHILE_1	IF_1	IF_2	CALL_1
0x111c6	            0x39c2	                            cmp edx, eax	     12524	option.c	FUNCTION_116	WHILE_1	IF_1	IF_2	CALL_1
0x111c8	     0xf8592000000	                           jne 0x40112a0	     12524	option.c	FUNCTION_116	WHILE_1	IF_1	IF_2	CALL_1
0x111ce	        0x837dc400	               cmp dword [rbp - 0x3c], 0	     12526	option.c	FUNCTION_116	WHILE_1	IF_1	IF_2	IF_3
0x111d2	            0x744c	                            je 0x4011260	     12526	option.c	FUNCTION_116	WHILE_1	IF_1	IF_2	IF_3
0x111d4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     12528	option.c	FUNCTION_116	WHILE_1	IF_1	IF_2	IF_3
0x111d8	            0x8b10	                    mov edx, dword [rax]	     12528	option.c	FUNCTION_116	WHILE_1	IF_1	IF_2	IF_3
0x111da	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     12528	option.c	FUNCTION_116	WHILE_1	IF_1	IF_2	IF_3
0x111de	            0x8910	                    mov dword [rax], edx	     12528	option.c	FUNCTION_116	WHILE_1	IF_1	IF_2	IF_3
0x111e0	    0x488b1d000000	            mov rbx, qword [0x04011227] 	     12529	option.c	FUNCTION_116	WHILE_1	IF_1	IF_2	IF_3	CALL_3
0x111e7	    0x488b05000000	            mov rax, qword [0x0401122e] 	     12529	option.c	FUNCTION_116	WHILE_1	IF_1	IF_2	IF_3	CALL_3
0x111ee	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     12529	option.c	FUNCTION_116	WHILE_1	IF_1	IF_2	IF_3	CALL_3
0x111f2	          0x4889d7	                            mov rdi, rdx	     12529	option.c	FUNCTION_116	WHILE_1	IF_1	IF_2	IF_3	CALL_3
0x111f5	            0xffd0	                                call rax	     12529	option.c	FUNCTION_116	WHILE_1	IF_1	IF_2	IF_3	CALL_3
0x111f7	            0x4898	                                    cdqe	     12529	option.c	FUNCTION_116	WHILE_1	IF_1	IF_2	IF_3	CALL_3
0x111f9	        0x488d5001	                      lea rdx, [rax + 1]	     12529	option.c	FUNCTION_116	WHILE_1	IF_1	IF_2	IF_3	CALL_3
0x111fd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     12529	option.c	FUNCTION_116	WHILE_1	IF_1	IF_2	IF_3	CALL_3
0x11201	          0x4801d0	                            add rax, rdx	     12529	option.c	FUNCTION_116	WHILE_1	IF_1	IF_2	IF_3	CALL_3
0x11204	          0x4889c7	                            mov rdi, rax	     12529	option.c	FUNCTION_116	WHILE_1	IF_1	IF_2	IF_3	CALL_3
0x11207	            0xffd3	                                call rbx	     12529	option.c	FUNCTION_116	WHILE_1	IF_1	IF_2	IF_3	CALL_3
0x11209	            0x89c2	                            mov edx, eax	     12529	option.c	FUNCTION_116	WHILE_1	IF_1	IF_2	IF_3	CALL_3
0x1120b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     12529	option.c	FUNCTION_116	WHILE_1	IF_1	IF_2	IF_3	CALL_3
0x1120f	            0x8910	                    mov dword [rax], edx	     12529	option.c	FUNCTION_116	WHILE_1	IF_1	IF_2	IF_3	CALL_3
0x11211	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     12530	option.c	FUNCTION_116	WHILE_1	IF_1	IF_2	IF_3
0x11215	    0xc70001000000	                      mov dword [rax], 1	     12530	option.c	FUNCTION_116	WHILE_1	IF_1	IF_2	IF_3
0x1121b	      0xe9f3010000	                           jmp 0x4011453	     12537	option.c	FUNCTION_116	WHILE_1	IF_1	IF_2
0x11220	    0x488b1d000000	            mov rbx, qword [0x04011267] 	     12534	option.c	FUNCTION_116	WHILE_1	IF_1	IF_2	ELSE_1	CALL_5
0x11227	    0x488b05000000	            mov rax, qword [0x0401126e] 	     12534	option.c	FUNCTION_116	WHILE_1	IF_1	IF_2	ELSE_1	CALL_5
0x1122e	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     12534	option.c	FUNCTION_116	WHILE_1	IF_1	IF_2	ELSE_1	CALL_5
0x11232	          0x4889d7	                            mov rdi, rdx	     12534	option.c	FUNCTION_116	WHILE_1	IF_1	IF_2	ELSE_1	CALL_5
0x11235	            0xffd0	                                call rax	     12534	option.c	FUNCTION_116	WHILE_1	IF_1	IF_2	ELSE_1	CALL_5
0x11237	            0x4898	                                    cdqe	     12534	option.c	FUNCTION_116	WHILE_1	IF_1	IF_2	ELSE_1	CALL_5
0x11239	        0x488d5001	                      lea rdx, [rax + 1]	     12534	option.c	FUNCTION_116	WHILE_1	IF_1	IF_2	ELSE_1	CALL_5
0x1123d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     12534	option.c	FUNCTION_116	WHILE_1	IF_1	IF_2	ELSE_1	CALL_5
0x11241	          0x4801d0	                            add rax, rdx	     12534	option.c	FUNCTION_116	WHILE_1	IF_1	IF_2	ELSE_1	CALL_5
0x11244	          0x4889c7	                            mov rdi, rax	     12534	option.c	FUNCTION_116	WHILE_1	IF_1	IF_2	ELSE_1	CALL_5
0x11247	            0xffd3	                                call rbx	     12534	option.c	FUNCTION_116	WHILE_1	IF_1	IF_2	ELSE_1	CALL_5
0x11249	            0x89c2	                            mov edx, eax	     12534	option.c	FUNCTION_116	WHILE_1	IF_1	IF_2	ELSE_1	CALL_5
0x1124b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     12534	option.c	FUNCTION_116	WHILE_1	IF_1	IF_2	ELSE_1	CALL_5
0x1124f	            0x8910	                    mov dword [rax], edx	     12534	option.c	FUNCTION_116	WHILE_1	IF_1	IF_2	ELSE_1	CALL_5
0x11251	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     12535	option.c	FUNCTION_116	WHILE_1	IF_1	IF_2	ELSE_1
0x11255	    0xc70000000000	                      mov dword [rax], 0	     12535	option.c	FUNCTION_116	WHILE_1	IF_1	IF_2	ELSE_1
0x1125b	      0xe9b3010000	                           jmp 0x4011453	     12537	option.c	FUNCTION_116	WHILE_1	IF_1	IF_2
0x11260	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     12539	option.c	FUNCTION_116	WHILE_1	IF_1
0x11264	        0x488945e8	             mov qword [rbp - 0x18], rax	     12539	option.c	FUNCTION_116	WHILE_1	IF_1
0x11268	    0x488b05000000	            mov rax, qword [0x040112af] 	     12540	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_6
0x1126f	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     12540	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_6
0x11273	          0x4889d7	                            mov rdi, rdx	     12540	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_6
0x11276	            0xffd0	                                call rax	     12540	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_6
0x11278	          0x83c001	                              add eax, 1	     12540	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_6
0x1127b	            0x4898	                                    cdqe	     12540	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_6
0x1127d	        0x480145e0	            add qword [rbp - 0x20], rax 	     12540	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_6
0x11281	    0x488b05000000	            mov rax, qword [0x040112c8] 	     12541	option.c	FUNCTION_116	WHILE_1	IF_1	IF_4	CALL_7
0x11288	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     12541	option.c	FUNCTION_116	WHILE_1	IF_1	IF_4	CALL_7
0x1128c	          0x4889d7	                            mov rdi, rdx	     12541	option.c	FUNCTION_116	WHILE_1	IF_1	IF_4	CALL_7
0x1128f	            0xffd0	                                call rax	     12541	option.c	FUNCTION_116	WHILE_1	IF_1	IF_4	CALL_7
0x11291	            0x89c2	                            mov edx, eax	     12541	option.c	FUNCTION_116	WHILE_1	IF_1	IF_4	CALL_7
0x11293	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     12541	option.c	FUNCTION_116	WHILE_1	IF_1	IF_4	CALL_7
0x11297	            0x8b00	                    mov eax, dword [rax]	     12541	option.c	FUNCTION_116	WHILE_1	IF_1	IF_4	CALL_7
0x11299	            0x39c2	                            cmp edx, eax	     12541	option.c	FUNCTION_116	WHILE_1	IF_1	IF_4	CALL_7
0x1129b	            0x7560	                           jne 0x401133d	     12541	option.c	FUNCTION_116	WHILE_1	IF_1	IF_4	CALL_7
0x1129d	        0x837dc400	               cmp dword [rbp - 0x3c], 0	     12543	option.c	FUNCTION_116	WHILE_1	IF_1	IF_4	IF_5
0x112a1	            0x7433	                            je 0x4011316	     12543	option.c	FUNCTION_116	WHILE_1	IF_1	IF_4	IF_5
0x112a3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     12545	option.c	FUNCTION_116	WHILE_1	IF_1	IF_4	IF_5
0x112a7	            0x8b10	                    mov edx, dword [rax]	     12545	option.c	FUNCTION_116	WHILE_1	IF_1	IF_4	IF_5
0x112a9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     12545	option.c	FUNCTION_116	WHILE_1	IF_1	IF_4	IF_5
0x112ad	            0x8910	                    mov dword [rax], edx	     12545	option.c	FUNCTION_116	WHILE_1	IF_1	IF_4	IF_5
0x112af	    0x488b05000000	            mov rax, qword [0x040112f6] 	     12546	option.c	FUNCTION_116	WHILE_1	IF_1	IF_4	IF_5	CALL_8
0x112b6	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     12546	option.c	FUNCTION_116	WHILE_1	IF_1	IF_4	IF_5	CALL_8
0x112ba	          0x4889d7	                            mov rdi, rdx	     12546	option.c	FUNCTION_116	WHILE_1	IF_1	IF_4	IF_5	CALL_8
0x112bd	            0xffd0	                                call rax	     12546	option.c	FUNCTION_116	WHILE_1	IF_1	IF_4	IF_5	CALL_8
0x112bf	            0x89c2	                            mov edx, eax	     12546	option.c	FUNCTION_116	WHILE_1	IF_1	IF_4	IF_5	CALL_8
0x112c1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     12546	option.c	FUNCTION_116	WHILE_1	IF_1	IF_4	IF_5	CALL_8
0x112c5	            0x8910	                    mov dword [rax], edx	     12546	option.c	FUNCTION_116	WHILE_1	IF_1	IF_4	IF_5	CALL_8
0x112c7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     12547	option.c	FUNCTION_116	WHILE_1	IF_1	IF_4	IF_5
0x112cb	    0xc70000000000	                      mov dword [rax], 0	     12547	option.c	FUNCTION_116	WHILE_1	IF_1	IF_4	IF_5
0x112d1	      0xe93d010000	                           jmp 0x4011453	     12554	option.c	FUNCTION_116	WHILE_1	IF_1	IF_4
0x112d6	    0x488b05000000	            mov rax, qword [0x0401131d] 	     12551	option.c	FUNCTION_116	WHILE_1	IF_1	IF_4	ELSE_2	CALL_9
0x112dd	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	     12551	option.c	FUNCTION_116	WHILE_1	IF_1	IF_4	ELSE_2	CALL_9
0x112e1	          0x4889d7	                            mov rdi, rdx	     12551	option.c	FUNCTION_116	WHILE_1	IF_1	IF_4	ELSE_2	CALL_9
0x112e4	            0xffd0	                                call rax	     12551	option.c	FUNCTION_116	WHILE_1	IF_1	IF_4	ELSE_2	CALL_9
0x112e6	            0x89c2	                            mov edx, eax	     12551	option.c	FUNCTION_116	WHILE_1	IF_1	IF_4	ELSE_2	CALL_9
0x112e8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     12551	option.c	FUNCTION_116	WHILE_1	IF_1	IF_4	ELSE_2	CALL_9
0x112ec	            0x8910	                    mov dword [rax], edx	     12551	option.c	FUNCTION_116	WHILE_1	IF_1	IF_4	ELSE_2	CALL_9
0x112ee	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     12552	option.c	FUNCTION_116	WHILE_1	IF_1	IF_4	ELSE_2
0x112f2	    0xc70001000000	                      mov dword [rax], 1	     12552	option.c	FUNCTION_116	WHILE_1	IF_1	IF_4	ELSE_2
0x112f8	      0xe916010000	                           jmp 0x4011453	     12554	option.c	FUNCTION_116	WHILE_1	IF_1	IF_4
0x112fd	    0x488b05000000	            mov rax, qword [0x04011344] 	     12556	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_10
0x11304	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     12556	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_10
0x11308	          0x4889d7	                            mov rdi, rdx	     12556	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_10
0x1130b	            0xffd0	                                call rax	     12556	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_10
0x1130d	            0x4898	                                    cdqe	     12556	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_10
0x1130f	        0x480145e0	            add qword [rbp - 0x20], rax 	     12556	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_10
0x11313	      0xe9dc000000	                           jmp 0x4011434	     12556	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_10
0x11318	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     12561	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_6
0x1131c	           0xfb600	                   movzx eax, byte [rax]	     12561	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_6
0x1131f	           0xfb6d0	                           movzx edx, al	     12561	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_6
0x11322	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     12561	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_6
0x11326	            0x8b00	                    mov eax, dword [rax]	     12561	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_6
0x11328	            0x39c2	                            cmp edx, eax	     12561	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_6
0x1132a	            0x7558	                           jne 0x40113c4	     12561	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_6
0x1132c	        0x837dc400	               cmp dword [rbp - 0x3c], 0	     12563	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_6	IF_7
0x11330	            0x742f	                            je 0x40113a1	     12563	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_6	IF_7
0x11332	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     12565	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_6	IF_7
0x11336	    0xc70001000000	                      mov dword [rax], 1	     12565	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_6	IF_7
0x1133c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     12566	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_6	IF_7
0x11340	            0x8b10	                    mov edx, dword [rax]	     12566	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_6	IF_7
0x11342	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     12566	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_6	IF_7
0x11346	            0x8910	                    mov dword [rax], edx	     12566	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_6	IF_7
0x11348	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     12567	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_6	IF_7
0x1134c	        0x4883c002	                              add rax, 2	     12567	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_6	IF_7
0x11350	           0xfb600	                   movzx eax, byte [rax]	     12567	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_6	IF_7
0x11353	           0xfb6d0	                           movzx edx, al	     12567	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_6	IF_7
0x11356	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     12567	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_6	IF_7
0x1135a	            0x8910	                    mov dword [rax], edx	     12567	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_6	IF_7
0x1135c	      0xe9b2000000	                           jmp 0x4011453	     12574	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_6
0x11361	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     12571	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_6	ELSE_4
0x11365	    0xc70000000000	                      mov dword [rax], 0	     12571	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_6	ELSE_4
0x1136b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     12572	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_6	ELSE_4
0x1136f	        0x4883c002	                              add rax, 2	     12572	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_6	ELSE_4
0x11373	           0xfb600	                   movzx eax, byte [rax]	     12572	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_6	ELSE_4
0x11376	           0xfb6d0	                           movzx edx, al	     12572	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_6	ELSE_4
0x11379	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     12572	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_6	ELSE_4
0x1137d	            0x8910	                    mov dword [rax], edx	     12572	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_6	ELSE_4
0x1137f	      0xe98f000000	                           jmp 0x4011453	     12574	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_6
0x11384	      0x488345e002	               add qword [rbp - 0x20], 2	     12576	option.c	FUNCTION_116	WHILE_1	ELSE_3
0x11389	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     12577	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_8
0x1138d	           0xfb600	                   movzx eax, byte [rax]	     12577	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_8
0x11390	           0xfb6d0	                           movzx edx, al	     12577	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_8
0x11393	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     12577	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_8
0x11397	            0x8b00	                    mov eax, dword [rax]	     12577	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_8
0x11399	            0x39c2	                            cmp edx, eax	     12577	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_8
0x1139b	            0x7552	                           jne 0x401142f	     12577	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_8
0x1139d	        0x837dc400	               cmp dword [rbp - 0x3c], 0	     12579	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_8	IF_9
0x113a1	            0x742c	                            je 0x401140f	     12579	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_8	IF_9
0x113a3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     12581	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_8	IF_9
0x113a7	    0xc70000000000	                      mov dword [rax], 0	     12581	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_8	IF_9
0x113ad	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     12582	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_8	IF_9
0x113b1	            0x8b10	                    mov edx, dword [rax]	     12582	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_8	IF_9
0x113b3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     12582	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_8	IF_9
0x113b7	            0x8910	                    mov dword [rax], edx	     12582	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_8	IF_9
0x113b9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     12583	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_8	IF_9
0x113bd	        0x4883e802	                              sub rax, 2	     12583	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_8	IF_9
0x113c1	           0xfb600	                   movzx eax, byte [rax]	     12583	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_8	IF_9
0x113c4	           0xfb6d0	                           movzx edx, al	     12583	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_8	IF_9
0x113c7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     12583	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_8	IF_9
0x113cb	            0x8910	                    mov dword [rax], edx	     12583	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_8	IF_9
0x113cd	            0xeb44	                           jmp 0x4011453	     12590	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_8
0x113cf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	     12587	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_8	ELSE_5
0x113d3	    0xc70001000000	                      mov dword [rax], 1	     12587	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_8	ELSE_5
0x113d9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     12588	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_8	ELSE_5
0x113dd	        0x4883e802	                              sub rax, 2	     12588	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_8	ELSE_5
0x113e1	           0xfb600	                   movzx eax, byte [rax]	     12588	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_8	ELSE_5
0x113e4	           0xfb6d0	                           movzx edx, al	     12588	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_8	ELSE_5
0x113e7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     12588	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_8	ELSE_5
0x113eb	            0x8910	                    mov dword [rax], edx	     12588	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_8	ELSE_5
0x113ed	            0xeb24	                           jmp 0x4011453	     12590	option.c	FUNCTION_116	WHILE_1	ELSE_3	IF_8
0x113ef	      0x488345e001	               add qword [rbp - 0x20], 1	     12592	option.c	FUNCTION_116	WHILE_1	ELSE_3
0x113f4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     12594	option.c	FUNCTION_116	WHILE_1	IF_10
0x113f8	           0xfb600	                   movzx eax, byte [rax]	     12594	option.c	FUNCTION_116	WHILE_1	IF_10
0x113fb	            0x3c2c	                            cmp al, 0x2c	     12594	option.c	FUNCTION_116	WHILE_1	IF_10
0x113fd	            0x7505	                           jne 0x4011444	     12594	option.c	FUNCTION_116	WHILE_1	IF_10
0x113ff	      0x488345e001	               add qword [rbp - 0x20], 1	     12595	option.c	FUNCTION_116	WHILE_1	IF_10
0x11404	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     12517	option.c	FUNCTION_116	WHILE_1
0x11408	           0xfb600	                   movzx eax, byte [rax]	     12517	option.c	FUNCTION_116	WHILE_1
0x1140b	            0x84c0	                             test al, al	     12517	option.c	FUNCTION_116	WHILE_1
0x1140d	     0xf858dfdffff	                           jne 0x40111e0	     12517	option.c	FUNCTION_116	WHILE_1
0x11413	        0x4883c438	                           add rsp, 0x38	     12597	option.c	FUNCTION_116
0x11417	              0x5b	                                 pop rbx	     12597	option.c	FUNCTION_116
0x11418	              0x5d	                                 pop rbp	     12597	option.c	FUNCTION_116
0x11419	              0xc3	                                     ret	     12597	option.c	FUNCTION_116
get_sw_value	WHILE,0:SWITCH,0:CALL,0:FOR,0:ELSE,0:DO,0:IF,0:functions,0	14
0x11107	              0x55	                                push rbp	     12487	option.c	FUNCTION_114
0x11108	          0x4889e5	                            mov rbp, rsp	     12487	option.c	FUNCTION_114
0x1110b	        0x48897df8	                mov qword [rbp - 8], rdi	     12487	option.c	FUNCTION_114
0x1110f	        0x488b45f8	                mov rax, qword [rbp - 8]	     12488	option.c	FUNCTION_114
0x11113	    0x488b80501500	          mov rax, qword [rax + 0x1550] 	     12488	option.c	FUNCTION_114
0x1111a	          0x4885c0	                           test rax, rax	     12488	option.c	FUNCTION_114
0x1111d	            0x740d	                            je 0x401116c	     12488	option.c	FUNCTION_114
0x1111f	        0x488b45f8	                mov rax, qword [rbp - 8]	     12488	option.c	FUNCTION_114
0x11123	    0x488b80501500	          mov rax, qword [rax + 0x1550] 	     12488	option.c	FUNCTION_114
0x1112a	            0xeb0b	                           jmp 0x4011177	     12488	option.c	FUNCTION_114
0x1112c	        0x488b45f8	                mov rax, qword [rbp - 8]	     12488	option.c	FUNCTION_114
0x11130	    0x488b80901500	          mov rax, qword [rax + 0x1590] 	     12488	option.c	FUNCTION_114
0x11137	              0x5d	                                 pop rbp	     12489	option.c	FUNCTION_114
0x11138	              0xc3	                                     ret	     12489	option.c	FUNCTION_114
insecure_flag	WHILE,0:SWITCH,1:CALL,0:FOR,0:ELSE,0:DO,0:IF,1:functions,0	59
0x463d	              0x55	                                push rbp	      5785	option.c	FUNCTION_35
0x463e	          0x4889e5	                            mov rbp, rsp	      5785	option.c	FUNCTION_35
0x4641	          0x897dfc	                mov dword [rbp - 4], edi	      5785	option.c	FUNCTION_35
0x4644	          0x8975f8	                mov dword [rbp - 8], esi	      5785	option.c	FUNCTION_35
0x4647	          0x8b45f8	                mov eax, dword [rbp - 8]	      5786	option.c	FUNCTION_35	IF_1
0x464a	          0x83e004	                              and eax, 4	      5786	option.c	FUNCTION_35	IF_1
0x464d	            0x85c0	                           test eax, eax	      5786	option.c	FUNCTION_35	IF_1
0x464f	     0xf84bd000000	                            je 0x4004752	      5786	option.c	FUNCTION_35	IF_1
0x4655	          0x8b45fc	                mov eax, dword [rbp - 4]	      5787	option.c	FUNCTION_35	IF_1	SWITCH_1
0x4658	            0x4898	                                    cdqe	      5787	option.c	FUNCTION_35	IF_1	SWITCH_1
0x465a	        0x48c1e006	                              shl rax, 6	      5787	option.c	FUNCTION_35	IF_1	SWITCH_1
0x465e	    0x480500000000	                              add rax, 0	      5787	option.c	FUNCTION_35	IF_1	SWITCH_1
0x4664	            0x8b00	                    mov eax, dword [rax]	      5787	option.c	FUNCTION_35	IF_1	SWITCH_1
0x4666	      0x3d20400000	                         cmp eax, 0x4020	      5787	option.c	FUNCTION_35	IF_1	SWITCH_1
0x466b	     0xf8483000000	                            je 0x4004734	      5787	option.c	FUNCTION_35	IF_1	SWITCH_1
0x4671	      0x3d20400000	                         cmp eax, 0x4020	      5787	option.c	FUNCTION_35	IF_1	SWITCH_1
0x4676	            0x7f1a	                            jg 0x40046d2	      5787	option.c	FUNCTION_35	IF_1	SWITCH_1
0x4678	      0x3d12200000	                         cmp eax, 0x2012	      5787	option.c	FUNCTION_35	IF_1	SWITCH_1
0x467d	            0x7448	                            je 0x4004707	      5787	option.c	FUNCTION_35	IF_1	SWITCH_1
0x467f	      0x3d21300000	                         cmp eax, 0x3021	      5787	option.c	FUNCTION_35	IF_1	SWITCH_1
0x4684	            0x7423	                            je 0x40046e9	      5787	option.c	FUNCTION_35	IF_1	SWITCH_1
0x4686	      0x3d11200000	                         cmp eax, 0x2011	      5787	option.c	FUNCTION_35	IF_1	SWITCH_1
0x468b	            0x742b	                            je 0x40046f8	      5787	option.c	FUNCTION_35	IF_1	SWITCH_1
0x468d	      0xe980000000	                           jmp 0x4004752	      5787	option.c	FUNCTION_35	IF_1	SWITCH_1
0x4692	      0x3d29400000	                         cmp eax, 0x4029	      5787	option.c	FUNCTION_35	IF_1	SWITCH_1
0x4697	            0x746a	                            je 0x4004743	      5787	option.c	FUNCTION_35	IF_1	SWITCH_1
0x4699	      0x3d1f500000	                         cmp eax, 0x501f	      5787	option.c	FUNCTION_35	IF_1	SWITCH_1
0x469e	            0x7436	                            je 0x4004716	      5787	option.c	FUNCTION_35	IF_1	SWITCH_1
0x46a0	      0x3d27400000	                         cmp eax, 0x4027	      5787	option.c	FUNCTION_35	IF_1	SWITCH_1
0x46a5	            0x743e	                            je 0x4004725	      5787	option.c	FUNCTION_35	IF_1	SWITCH_1
0x46a7	            0xeb69	                           jmp 0x4004752	      5787	option.c	FUNCTION_35	IF_1	SWITCH_1
0x46a9	    0x488b05000000	            mov rax, qword [0x040046f0] 	      5790	option.c	FUNCTION_35	IF_1	SWITCH_1
0x46b0	    0x480520050000	                          add rax, 0x520	      5790	option.c	FUNCTION_35	IF_1	SWITCH_1
0x46b6	            0xeb6d	                           jmp 0x4004765	      5790	option.c	FUNCTION_35	IF_1	SWITCH_1
0x46b8	    0x488b05000000	            mov rax, qword [0x040046ff] 	      5794	option.c	FUNCTION_35	IF_1	SWITCH_1
0x46bf	    0x480528050000	                          add rax, 0x528	      5794	option.c	FUNCTION_35	IF_1	SWITCH_1
0x46c5	            0xeb5e	                           jmp 0x4004765	      5794	option.c	FUNCTION_35	IF_1	SWITCH_1
0x46c7	    0x488b05000000	            mov rax, qword [0x0400470e] 	      5795	option.c	FUNCTION_35	IF_1	SWITCH_1
0x46ce	    0x480530050000	                          add rax, 0x530	      5795	option.c	FUNCTION_35	IF_1	SWITCH_1
0x46d4	            0xeb4f	                           jmp 0x4004765	      5795	option.c	FUNCTION_35	IF_1	SWITCH_1
0x46d6	    0x488b05000000	            mov rax, qword [0x0400471d] 	      5798	option.c	FUNCTION_35	IF_1	SWITCH_1
0x46dd	    0x480520170000	                         add rax, 0x1720	      5798	option.c	FUNCTION_35	IF_1	SWITCH_1
0x46e3	            0xeb40	                           jmp 0x4004765	      5798	option.c	FUNCTION_35	IF_1	SWITCH_1
0x46e5	    0x488b05000000	            mov rax, qword [0x0400472c] 	      5801	option.c	FUNCTION_35	IF_1	SWITCH_1
0x46ec	    0x4805d0140000	                         add rax, 0x14d0	      5801	option.c	FUNCTION_35	IF_1	SWITCH_1
0x46f2	            0xeb31	                           jmp 0x4004765	      5801	option.c	FUNCTION_35	IF_1	SWITCH_1
0x46f4	    0x488b05000000	            mov rax, qword [0x0400473b] 	      5803	option.c	FUNCTION_35	IF_1	SWITCH_1
0x46fb	    0x4805f0140000	                         add rax, 0x14f0	      5803	option.c	FUNCTION_35	IF_1	SWITCH_1
0x4701	            0xeb22	                           jmp 0x4004765	      5803	option.c	FUNCTION_35	IF_1	SWITCH_1
0x4703	    0x488b05000000	            mov rax, qword [0x0400474a] 	      5805	option.c	FUNCTION_35	IF_1	SWITCH_1
0x470a	    0x4805c0140000	                         add rax, 0x14c0	      5805	option.c	FUNCTION_35	IF_1	SWITCH_1
0x4710	            0xeb13	                           jmp 0x4004765	      5805	option.c	FUNCTION_35	IF_1	SWITCH_1
0x4712	          0x8b45fc	                mov eax, dword [rbp - 4]	      5811	option.c	FUNCTION_35
0x4715	            0x4898	                                    cdqe	      5811	option.c	FUNCTION_35
0x4717	        0x48c1e006	                              shl rax, 6	      5811	option.c	FUNCTION_35
0x471b	        0x4883c010	                           add rax, 0x10	      5811	option.c	FUNCTION_35
0x471f	    0x480500000000	                              add rax, 0	      5811	option.c	FUNCTION_35
0x4725	              0x5d	                                 pop rbp	      5812	option.c	FUNCTION_35
0x4726	              0xc3	                                     ret	      5812	option.c	FUNCTION_35
set_string_option	WHILE,0:SWITCH,0:CALL,9:FOR,0:ELSE,0:DO,0:IF,5:functions,0	109
0x49b6	              0x55	                                push rbp	      5926	option.c	FUNCTION_39
0x49b7	          0x4889e5	                            mov rbp, rsp	      5926	option.c	FUNCTION_39
0x49ba	        0x4883ec40	                           sub rsp, 0x40	      5926	option.c	FUNCTION_39
0x49be	          0x897dcc	             mov dword [rbp - 0x34], edi	      5926	option.c	FUNCTION_39
0x49c1	        0x488975c0	             mov qword [rbp - 0x40], rsi	      5926	option.c	FUNCTION_39
0x49c5	          0x8955c8	             mov dword [rbp - 0x38], edx	      5926	option.c	FUNCTION_39
0x49c8	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      5931	option.c	FUNCTION_39
0x49d0	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      5932	option.c	FUNCTION_39
0x49d8	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      5934	option.c	FUNCTION_39
0x49e0	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      5936	option.c	FUNCTION_39	IF_1
0x49e3	            0x4898	                                    cdqe	      5936	option.c	FUNCTION_39	IF_1
0x49e5	        0x48c1e006	                              shl rax, 6	      5936	option.c	FUNCTION_39	IF_1
0x49e9	    0x480500000000	                              add rax, 0	      5936	option.c	FUNCTION_39	IF_1
0x49ef	          0x488b00	                    mov rax, qword [rax]	      5936	option.c	FUNCTION_39	IF_1
0x49f2	          0x4885c0	                           test rax, rax	      5936	option.c	FUNCTION_39	IF_1
0x49f5	            0x750a	                           jne 0x4004a41	      5936	option.c	FUNCTION_39	IF_1
0x49f7	      0xb800000000	                              mov eax, 0	      5937	option.c	FUNCTION_39	IF_1
0x49fc	      0xe944010000	                           jmp 0x4004b85	      5937	option.c	FUNCTION_39	IF_1
0x4a01	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5939	option.c	FUNCTION_39	CALL_1
0x4a05	          0x4889c7	                            mov rdi, rax	      5939	option.c	FUNCTION_39	CALL_1
0x4a08	      0xe800000000	                          call 0x4004a4d	      5939	option.c	FUNCTION_39	CALL_1
0x4a0d	        0x488945e8	             mov qword [rbp - 0x18], rax	      5939	option.c	FUNCTION_39	CALL_1
0x4a11	      0x48837de800	               cmp qword [rbp - 0x18], 0	      5940	option.c	FUNCTION_39	IF_2
0x4a16	     0xf8425010000	                            je 0x4004b81	      5940	option.c	FUNCTION_39	IF_2
0x4a1c	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      5943	option.c	FUNCTION_39	IF_2
0x4a1f	          0x83e006	                              and eax, 6	      5943	option.c	FUNCTION_39	IF_2
0x4a22	            0x85c0	                           test eax, eax	      5942	option.c	FUNCTION_39	IF_2	CALL_2
0x4a24	            0x7528	                           jne 0x4004a8e	      5942	option.c	FUNCTION_39	IF_2	CALL_2
0x4a26	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      5944	option.c	FUNCTION_39	IF_2
0x4a29	            0x4898	                                    cdqe	      5944	option.c	FUNCTION_39	IF_2
0x4a2b	        0x48c1e006	                              shl rax, 6	      5944	option.c	FUNCTION_39	IF_2
0x4a2f	    0x480500000000	                              add rax, 0	      5944	option.c	FUNCTION_39	IF_2
0x4a35	            0x8b00	                    mov eax, dword [rax]	      5944	option.c	FUNCTION_39	IF_2
0x4a37	      0x2500100000	                         and eax, 0x1000	      5944	option.c	FUNCTION_39	IF_2
0x4a3c	            0x85c0	                           test eax, eax	      5945	option.c	FUNCTION_39	IF_2
0x4a3e	            0x7407	                            je 0x4004a87	      5945	option.c	FUNCTION_39	IF_2
0x4a40	      0xb802000000	                              mov eax, 2	      5945	option.c	FUNCTION_39	IF_2
0x4a45	            0xeb0a	                           jmp 0x4004a91	      5945	option.c	FUNCTION_39	IF_2
0x4a47	      0xb804000000	                              mov eax, 4	      5945	option.c	FUNCTION_39	IF_2
0x4a4c	            0xeb03	                           jmp 0x4004a91	      5945	option.c	FUNCTION_39	IF_2
0x4a4e	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      5942	option.c	FUNCTION_39	IF_2	CALL_2
0x4a51	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      5942	option.c	FUNCTION_39	IF_2	CALL_2
0x4a54	          0x4863d2	                         movsxd rdx, edx	      5942	option.c	FUNCTION_39	IF_2	CALL_2
0x4a57	        0x48c1e206	                              shl rdx, 6	      5942	option.c	FUNCTION_39	IF_2	CALL_2
0x4a5b	    0x4881c2000000	                              add rdx, 0	      5942	option.c	FUNCTION_39	IF_2	CALL_2
0x4a62	            0x89c6	                            mov esi, eax	      5942	option.c	FUNCTION_39	IF_2	CALL_2
0x4a64	          0x4889d7	                            mov rdi, rdx	      5942	option.c	FUNCTION_39	IF_2	CALL_2
0x4a67	      0xe89d7f0000	                 call sym.get_varp_scope	      5942	option.c	FUNCTION_39	IF_2	CALL_2
0x4a6c	        0x488945f0	             mov qword [rbp - 0x10], rax	      5942	option.c	FUNCTION_39	IF_2	CALL_2
0x4a70	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5947	option.c	FUNCTION_39	IF_2
0x4a74	          0x488b00	                    mov rax, qword [rax]	      5947	option.c	FUNCTION_39	IF_2
0x4a77	        0x488945f8	                mov qword [rbp - 8], rax	      5947	option.c	FUNCTION_39	IF_2
0x4a7b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5948	option.c	FUNCTION_39	IF_2
0x4a7f	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      5948	option.c	FUNCTION_39	IF_2
0x4a83	          0x488910	                    mov qword [rax], rdx	      5948	option.c	FUNCTION_39	IF_2
0x4a86	    0x8b0500000000	            mov eax, dword [0x04004acc] 	      5951	option.c	FUNCTION_39	IF_2	IF_3
0x4a8c	            0x85c0	                           test eax, eax	      5951	option.c	FUNCTION_39	IF_2	IF_3
0x4a8e	            0x7538	                           jne 0x4004b08	      5951	option.c	FUNCTION_39	IF_2	IF_3
0x4a90	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      5953	option.c	FUNCTION_39	IF_2	IF_3
0x4a93	            0x4898	                                    cdqe	      5953	option.c	FUNCTION_39	IF_2	IF_3
0x4a95	        0x48c1e006	                              shl rax, 6	      5953	option.c	FUNCTION_39	IF_2	IF_3
0x4a99	    0x480500000000	                              add rax, 0	      5953	option.c	FUNCTION_39	IF_2	IF_3
0x4a9f	            0x8b00	                    mov eax, dword [rax]	      5953	option.c	FUNCTION_39	IF_2	IF_3
0x4aa1	      0x3d2c400000	                         cmp eax, 0x402c	      5953	option.c	FUNCTION_39	IF_2	IF_3
0x4aa6	            0x7420	                            je 0x4004b08	      5953	option.c	FUNCTION_39	IF_2	IF_3
0x4aa8	        0x488b45f8	                mov rax, qword [rbp - 8]	      5957	option.c	FUNCTION_39	IF_2	IF_3	CALL_3
0x4aac	          0x4889c7	                            mov rdi, rax	      5957	option.c	FUNCTION_39	IF_2	IF_3	CALL_3
0x4aaf	      0xe800000000	                          call 0x4004af4	      5957	option.c	FUNCTION_39	IF_2	IF_3	CALL_3
0x4ab4	        0x488945d0	             mov qword [rbp - 0x30], rax	      5957	option.c	FUNCTION_39	IF_2	IF_3	CALL_3
0x4ab8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5958	option.c	FUNCTION_39	IF_2	IF_3	CALL_4
0x4abc	          0x4889c7	                            mov rdi, rax	      5958	option.c	FUNCTION_39	IF_2	IF_3	CALL_4
0x4abf	      0xe800000000	                          call 0x4004b04	      5958	option.c	FUNCTION_39	IF_2	IF_3	CALL_4
0x4ac4	        0x488945d8	             mov qword [rbp - 0x28], rax	      5958	option.c	FUNCTION_39	IF_2	IF_3	CALL_4
0x4ac8	          0x8b4dc8	             mov ecx, dword [rbp - 0x38]	      5961	option.c	FUNCTION_39	IF_2	IF_4	CALL_5
0x4acb	        0x488b55f8	                mov rdx, qword [rbp - 8]	      5961	option.c	FUNCTION_39	IF_2	IF_4	CALL_5
0x4acf	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      5961	option.c	FUNCTION_39	IF_2	IF_4	CALL_5
0x4ad3	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      5961	option.c	FUNCTION_39	IF_2	IF_4	CALL_5
0x4ad6	          0x4189c9	                            mov r9d, ecx	      5961	option.c	FUNCTION_39	IF_2	IF_4	CALL_5
0x4ad9	    0x41b800000000	                              mov r8d, 0	      5961	option.c	FUNCTION_39	IF_2	IF_4	CALL_5
0x4adf	          0x4889d1	                            mov rcx, rdx	      5961	option.c	FUNCTION_39	IF_2	IF_4	CALL_5
0x4ae2	      0xba01000000	                              mov edx, 1	      5961	option.c	FUNCTION_39	IF_2	IF_4	CALL_5
0x4ae7	            0x89c7	                            mov edi, eax	      5961	option.c	FUNCTION_39	IF_2	IF_4	CALL_5
0x4ae9	      0xe8de000000	          call sym.did_set_string_option	      5961	option.c	FUNCTION_39	IF_2	IF_4	CALL_5
0x4aee	        0x488945e0	             mov qword [rbp - 0x20], rax	      5961	option.c	FUNCTION_39	IF_2	IF_4	CALL_5
0x4af2	      0x48837de000	               cmp qword [rbp - 0x20], 0	      5961	option.c	FUNCTION_39	IF_2	IF_4	CALL_5
0x4af7	            0x7514	                           jne 0x4004b4d	      5961	option.c	FUNCTION_39	IF_2	IF_4	CALL_5
0x4af9	          0x8b4dc8	             mov ecx, dword [rbp - 0x38]	      5963	option.c	FUNCTION_39	IF_2	CALL_6
0x4afc	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      5963	option.c	FUNCTION_39	IF_2	CALL_6
0x4aff	      0xba01000000	                              mov edx, 1	      5963	option.c	FUNCTION_39	IF_2	CALL_6
0x4b04	            0x89ce	                            mov esi, ecx	      5963	option.c	FUNCTION_39	IF_2	CALL_6
0x4b06	            0x89c7	                            mov edi, eax	      5963	option.c	FUNCTION_39	IF_2	CALL_6
0x4b08	      0xe8b4edffff	                 call sym.did_set_option	      5963	option.c	FUNCTION_39	IF_2	CALL_6
0x4b0d	      0x48837de000	               cmp qword [rbp - 0x20], 0	      5967	option.c	FUNCTION_39	IF_2	IF_5
0x4b12	            0x7515	                           jne 0x4004b69	      5967	option.c	FUNCTION_39	IF_2	IF_5
0x4b14	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      5968	option.c	FUNCTION_39	IF_2	IF_5	CALL_7
0x4b18	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      5968	option.c	FUNCTION_39	IF_2	IF_5	CALL_7
0x4b1c	          0x8b75c8	             mov esi, dword [rbp - 0x38]	      5968	option.c	FUNCTION_39	IF_2	IF_5	CALL_7
0x4b1f	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      5968	option.c	FUNCTION_39	IF_2	IF_5	CALL_7
0x4b22	            0x89c7	                            mov edi, eax	      5968	option.c	FUNCTION_39	IF_2	IF_5	CALL_7
0x4b24	      0xe822c8ffff	      call sym.trigger_optionsset_string	      5968	option.c	FUNCTION_39	IF_2	IF_5	CALL_7
0x4b29	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5970	option.c	FUNCTION_39	IF_2	CALL_8
0x4b2d	          0x4889c7	                            mov rdi, rax	      5970	option.c	FUNCTION_39	IF_2	CALL_8
0x4b30	      0xe800000000	                          call 0x4004b75	      5970	option.c	FUNCTION_39	IF_2	CALL_8
0x4b35	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5971	option.c	FUNCTION_39	IF_2	CALL_9
0x4b39	          0x4889c7	                            mov rdi, rax	      5971	option.c	FUNCTION_39	IF_2	CALL_9
0x4b3c	      0xe800000000	                          call 0x4004b81	      5971	option.c	FUNCTION_39	IF_2	CALL_9
0x4b41	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5974	option.c	FUNCTION_39
0x4b45	              0xc9	                                   leave	      5975	option.c	FUNCTION_39
0x4b46	              0xc3	                                     ret	      5975	option.c	FUNCTION_39
clear_termoptions	WHILE,0:SWITCH,0:CALL,5:FOR,0:ELSE,0:DO,0:IF,1:functions,0	11
0xc2f9	              0x55	                                push rbp	     10233	option.c	FUNCTION_70
0xc2fa	          0x4889e5	                            mov rbp, rsp	     10233	option.c	FUNCTION_70
0xc2fd	      0xbf00000000	                              mov edi, 0	     10240	option.c	FUNCTION_70	CALL_1
0xc302	      0xe800000000	                          call 0x400c347	     10240	option.c	FUNCTION_70	CALL_1
0xc307	      0xbf03000000	                              mov edi, 3	     10243	option.c	FUNCTION_70	CALL_2
0xc30c	      0xe800000000	                          call 0x400c351	     10243	option.c	FUNCTION_70	CALL_2
0xc311	      0xe800000000	                          call 0x400c356	     10251	option.c	FUNCTION_70	CALL_4
0xc316	      0xe800000000	                          call 0x400c35b	     10253	option.c	FUNCTION_70	CALL_5
0xc31b	              0x90	                                     nop	     10254	option.c	FUNCTION_70
0xc31c	              0x5d	                                 pop rbp	     10254	option.c	FUNCTION_70
0xc31d	              0xc3	                                     ret	     10254	option.c	FUNCTION_70
put_setbool	WHILE,0:SWITCH,0:CALL,2:FOR,0:ELSE,0:DO,0:IF,2:functions,0	37
0xc27d	              0x55	                                push rbp	     10217	option.c	FUNCTION_69
0xc27e	          0x4889e5	                            mov rbp, rsp	     10217	option.c	FUNCTION_69
0xc281	        0x4883ec20	                           sub rsp, 0x20	     10217	option.c	FUNCTION_69
0xc285	        0x48897df8	                mov qword [rbp - 8], rdi	     10217	option.c	FUNCTION_69
0xc289	        0x488975f0	             mov qword [rbp - 0x10], rsi	     10217	option.c	FUNCTION_69
0xc28d	        0x488955e8	             mov qword [rbp - 0x18], rdx	     10217	option.c	FUNCTION_69
0xc291	          0x894de4	             mov dword [rbp - 0x1c], ecx	     10217	option.c	FUNCTION_69
0xc294	        0x837de400	               cmp dword [rbp - 0x1c], 0	     10218	option.c	FUNCTION_69	IF_1
0xc298	            0x7907	                           jns 0x400c2e1	     10218	option.c	FUNCTION_69	IF_1
0xc29a	      0xb801000000	                              mov eax, 1	     10219	option.c	FUNCTION_69	IF_1
0xc29f	            0xeb56	                           jmp 0x400c337	     10219	option.c	FUNCTION_69	IF_1
0xc2a1	        0x837de400	               cmp dword [rbp - 0x1c], 0	     10220	option.c	FUNCTION_69	IF_2	CALL_1
0xc2a5	            0x7407	                            je 0x400c2ee	     10220	option.c	FUNCTION_69	IF_2	CALL_1
0xc2a7	      0xbe00000000	                              mov esi, 0	     10220	option.c	FUNCTION_69	IF_2	CALL_1
0xc2ac	            0xeb05	                           jmp 0x400c2f3	     10220	option.c	FUNCTION_69	IF_2	CALL_1
0xc2ae	      0xbe00000000	                              mov esi, 0	     10220	option.c	FUNCTION_69	IF_2	CALL_1
0xc2b3	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	     10220	option.c	FUNCTION_69	IF_2	CALL_1
0xc2b7	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	     10220	option.c	FUNCTION_69	IF_2	CALL_1
0xc2bb	        0x488b45f8	                mov rax, qword [rbp - 8]	     10220	option.c	FUNCTION_69	IF_2	CALL_1
0xc2bf	          0x4989c8	                             mov r8, rcx	     10220	option.c	FUNCTION_69	IF_2	CALL_1
0xc2c2	          0x4889f1	                            mov rcx, rsi	     10220	option.c	FUNCTION_69	IF_2	CALL_1
0xc2c5	      0xbe00000000	                              mov esi, 0	     10220	option.c	FUNCTION_69	IF_2	CALL_1
0xc2ca	          0x4889c7	                            mov rdi, rax	     10220	option.c	FUNCTION_69	IF_2	CALL_1
0xc2cd	      0xb800000000	                              mov eax, 0	     10220	option.c	FUNCTION_69	IF_2	CALL_1
0xc2d2	      0xe800000000	                          call 0x400c317	     10220	option.c	FUNCTION_69	IF_2	CALL_1
0xc2d7	            0x85c0	                           test eax, eax	     10220	option.c	FUNCTION_69	IF_2	CALL_1
0xc2d9	            0x7810	                            js 0x400c32b	     10220	option.c	FUNCTION_69	IF_2	CALL_1
0xc2db	        0x488b45f8	                mov rax, qword [rbp - 8]	     10221	option.c	FUNCTION_69	IF_2	CALL_2
0xc2df	          0x4889c7	                            mov rdi, rax	     10221	option.c	FUNCTION_69	IF_2	CALL_2
0xc2e2	      0xe800000000	                          call 0x400c327	     10221	option.c	FUNCTION_69	IF_2	CALL_2
0xc2e7	            0x85c0	                           test eax, eax	     10221	option.c	FUNCTION_69	IF_2	CALL_2
0xc2e9	            0x7907	                           jns 0x400c332	     10221	option.c	FUNCTION_69	IF_2	CALL_2
0xc2eb	      0xb800000000	                              mov eax, 0	     10222	option.c	FUNCTION_69	IF_2
0xc2f0	            0xeb05	                           jmp 0x400c337	     10222	option.c	FUNCTION_69	IF_2
0xc2f2	      0xb801000000	                              mov eax, 1	     10223	option.c	FUNCTION_69
0xc2f7	              0xc9	                                   leave	     10224	option.c	FUNCTION_69
0xc2f8	              0xc3	                                     ret	     10224	option.c	FUNCTION_69
buf_copy_options	WHILE,0:SWITCH,1:CALL,37:FOR,0:ELSE,2:DO,0:IF,10:functions,0	502
0xe56d	              0x55	                                push rbp	     11010	option.c	FUNCTION_85
0xe56e	          0x4889e5	                            mov rbp, rsp	     11010	option.c	FUNCTION_85
0xe571	        0x4883ec30	                           sub rsp, 0x30	     11010	option.c	FUNCTION_85
0xe575	        0x48897dd8	             mov qword [rbp - 0x28], rdi	     11010	option.c	FUNCTION_85
0xe579	          0x8975d4	             mov dword [rbp - 0x2c], esi	     11010	option.c	FUNCTION_85
0xe57c	    0xc745ec010000	               mov dword [rbp - 0x14], 1	     11011	option.c	FUNCTION_85
0xe583	    0x48c745f80000	                  mov qword [rbp - 8], 0	     11012	option.c	FUNCTION_85
0xe58b	    0xc745f0000000	               mov dword [rbp - 0x10], 0	     11014	option.c	FUNCTION_85
0xe592	    0x488b05000000	            mov rax, qword [0x0400e5d9] 	     11020	option.c	FUNCTION_85	IF_1
0xe599	          0x4885c0	                           test rax, rax	     11020	option.c	FUNCTION_85	IF_1
0xe59c	     0xf8448090000	                            je 0x400ef2a	     11020	option.c	FUNCTION_85	IF_1
0xe5a2	    0x488b05000000	            mov rax, qword [0x0400e5e9] 	     11034	option.c	FUNCTION_85	IF_1	IF_2	CALL_1
0xe5a9	      0xbe53000000	                           mov esi, 0x53	     11034	option.c	FUNCTION_85	IF_1	IF_2	CALL_1
0xe5ae	          0x4889c7	                            mov rdi, rax	     11034	option.c	FUNCTION_85	IF_1	IF_2	CALL_1
0xe5b1	      0xe800000000	                          call 0x400e5f6	     11034	option.c	FUNCTION_85	IF_1	IF_2	CALL_1
0xe5b6	          0x4885c0	                           test rax, rax	     11034	option.c	FUNCTION_85	IF_1	IF_2	CALL_1
0xe5b9	            0x740a	                            je 0x400e605	     11034	option.c	FUNCTION_85	IF_1	IF_2	CALL_1
0xe5bb	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	     11034	option.c	FUNCTION_85	IF_1	IF_2	CALL_1
0xe5be	          0x83e001	                              and eax, 1	     11034	option.c	FUNCTION_85	IF_1	IF_2	CALL_1
0xe5c1	            0x85c0	                           test eax, eax	     11034	option.c	FUNCTION_85	IF_1	IF_2	CALL_1
0xe5c3	            0x7538	                           jne 0x400e63d	     11034	option.c	FUNCTION_85	IF_1	IF_2	CALL_1
0xe5c5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11035	option.c	FUNCTION_85	IF_1	IF_2
0xe5c9	    0x8b8098120000	          mov eax, dword [rax + 0x1298] 	     11035	option.c	FUNCTION_85	IF_1	IF_2
0xe5cf	            0x85c0	                           test eax, eax	     11035	option.c	FUNCTION_85	IF_1	IF_2
0xe5d1	            0x7523	                           jne 0x400e636	     11035	option.c	FUNCTION_85	IF_1	IF_2
0xe5d3	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	     11036	option.c	FUNCTION_85	IF_1	IF_2
0xe5d6	          0x83e001	                              and eax, 1	     11036	option.c	FUNCTION_85	IF_1	IF_2
0xe5d9	            0x85c0	                           test eax, eax	     11036	option.c	FUNCTION_85	IF_1	IF_2
0xe5db	            0x7520	                           jne 0x400e63d	     11036	option.c	FUNCTION_85	IF_1	IF_2
0xe5dd	    0x488b05000000	            mov rax, qword [0x0400e624] 	     11037	option.c	FUNCTION_85	IF_1	IF_2	CALL_2
0xe5e4	      0xbe73000000	                           mov esi, 0x73	     11037	option.c	FUNCTION_85	IF_1	IF_2	CALL_2
0xe5e9	          0x4889c7	                            mov rdi, rax	     11037	option.c	FUNCTION_85	IF_1	IF_2	CALL_2
0xe5ec	      0xe800000000	                          call 0x400e631	     11037	option.c	FUNCTION_85	IF_1	IF_2	CALL_2
0xe5f1	          0x4885c0	                           test rax, rax	     11037	option.c	FUNCTION_85	IF_1	IF_2	CALL_2
0xe5f4	            0x7407	                            je 0x400e63d	     11037	option.c	FUNCTION_85	IF_1	IF_2	CALL_2
0xe5f6	    0xc745ec000000	               mov dword [rbp - 0x14], 0	     11038	option.c	FUNCTION_85	IF_1	IF_2
0xe5fd	        0x837dec00	               cmp dword [rbp - 0x14], 0	     11040	option.c	FUNCTION_85	IF_1	IF_3
0xe601	            0x750e	                           jne 0x400e651	     11040	option.c	FUNCTION_85	IF_1	IF_3
0xe603	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	     11040	option.c	FUNCTION_85	IF_1	IF_3
0xe606	          0x83e002	                              and eax, 2	     11040	option.c	FUNCTION_85	IF_1	IF_3
0xe609	            0x85c0	                           test eax, eax	     11040	option.c	FUNCTION_85	IF_1	IF_3
0xe60b	     0xf84c5080000	                            je 0x400ef16	     11040	option.c	FUNCTION_85	IF_1	IF_3
0xe611	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	     11045	option.c	FUNCTION_85	IF_1	IF_3
0xe614	          0x83e004	                              and eax, 4	     11045	option.c	FUNCTION_85	IF_1	IF_3
0xe617	            0x85c0	                           test eax, eax	     11046	option.c	FUNCTION_85	IF_1	IF_3
0xe619	            0x740e	                            je 0x400e669	     11046	option.c	FUNCTION_85	IF_1	IF_3
0xe61b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11045	option.c	FUNCTION_85	IF_1	IF_3
0xe61f	    0x8b8038170000	          mov eax, dword [rax + 0x1738] 	     11045	option.c	FUNCTION_85	IF_1	IF_3
0xe625	            0x85c0	                           test eax, eax	     11045	option.c	FUNCTION_85	IF_1	IF_3
0xe627	            0x750e	                           jne 0x400e677	     11045	option.c	FUNCTION_85	IF_1	IF_3
0xe629	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11046	option.c	FUNCTION_85	IF_1	IF_3
0xe62d	    0x8b8098120000	          mov eax, dword [rax + 0x1298] 	     11046	option.c	FUNCTION_85	IF_1	IF_3
0xe633	            0x85c0	                           test eax, eax	     11046	option.c	FUNCTION_85	IF_1	IF_3
0xe635	            0x7407	                            je 0x400e67e	     11046	option.c	FUNCTION_85	IF_1	IF_3
0xe637	      0xb801000000	                              mov eax, 1	     11046	option.c	FUNCTION_85	IF_1	IF_3
0xe63c	            0xeb05	                           jmp 0x400e683	     11046	option.c	FUNCTION_85	IF_1	IF_3
0xe63e	      0xb800000000	                              mov eax, 0	     11046	option.c	FUNCTION_85	IF_1	IF_3
0xe643	          0x8945f4	              mov dword [rbp - 0xc], eax	     11045	option.c	FUNCTION_85	IF_1	IF_3
0xe646	        0x837df400	                cmp dword [rbp - 0xc], 0	     11047	option.c	FUNCTION_85	IF_1	IF_3	IF_4
0xe64a	            0x741e	                            je 0x400e6aa	     11047	option.c	FUNCTION_85	IF_1	IF_3	IF_4
0xe64c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11049	option.c	FUNCTION_85	IF_1	IF_3	IF_4
0xe650	    0x488b80a01400	          mov rax, qword [rax + 0x14a0] 	     11049	option.c	FUNCTION_85	IF_1	IF_3	IF_4
0xe657	        0x488945f8	                mov qword [rbp - 8], rax	     11049	option.c	FUNCTION_85	IF_1	IF_3	IF_4
0xe65b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11050	option.c	FUNCTION_85	IF_1	IF_3	IF_4
0xe65f	    0x48c780a01400	            mov qword [rax + 0x14a0], 0 	     11050	option.c	FUNCTION_85	IF_1	IF_3	IF_4
0xe66a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11056	option.c	FUNCTION_85	IF_1	IF_3	IF_5
0xe66e	    0x8b8098120000	          mov eax, dword [rax + 0x1298] 	     11056	option.c	FUNCTION_85	IF_1	IF_3	IF_5
0xe674	            0x85c0	                           test eax, eax	     11056	option.c	FUNCTION_85	IF_1	IF_3	IF_5
0xe676	     0xf8526010000	                           jne 0x400e7e2	     11056	option.c	FUNCTION_85	IF_1	IF_3	IF_5
0xe67c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11058	option.c	FUNCTION_85	IF_1	IF_3	IF_5	CALL_3
0xe680	      0xbe01000000	                              mov esi, 1	     11058	option.c	FUNCTION_85	IF_1	IF_3	IF_5	CALL_3
0xe685	          0x4889c7	                            mov rdi, rax	     11058	option.c	FUNCTION_85	IF_1	IF_3	IF_5	CALL_3
0xe688	      0xe800000000	                          call 0x400e6cd	     11058	option.c	FUNCTION_85	IF_1	IF_3	IF_5	CALL_3
0xe68d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11059	option.c	FUNCTION_85	IF_1	IF_3	IF_5
0xe691	    0xc78048150000	            mov dword [rax + 0x1548], 0 	     11059	option.c	FUNCTION_85	IF_1	IF_3	IF_5
0xe69b	    0x8b1500000000	            mov edx, dword [0x0400e6e1] 	     11060	option.c	FUNCTION_85	IF_1	IF_3	IF_5
0xe6a1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11060	option.c	FUNCTION_85	IF_1	IF_3	IF_5
0xe6a5	    0x899098150000	          mov dword [rax + 0x1598], edx 	     11060	option.c	FUNCTION_85	IF_1	IF_3	IF_5
0xe6ab	    0x488b05000000	            mov rax, qword [0x0400e6f2] 	     11062	option.c	FUNCTION_85	IF_1	IF_3	IF_5	CALL_4
0xe6b2	          0x4889c7	                            mov rdi, rax	     11062	option.c	FUNCTION_85	IF_1	IF_3	IF_5	CALL_4
0xe6b5	      0xe800000000	                          call 0x400e6fa	     11062	option.c	FUNCTION_85	IF_1	IF_3	IF_5	CALL_4
0xe6ba	          0x4889c2	                            mov rdx, rax	     11062	option.c	FUNCTION_85	IF_1	IF_3	IF_5	CALL_4
0xe6bd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11062	option.c	FUNCTION_85	IF_1	IF_3	IF_5	CALL_4
0xe6c1	    0x488990701400	          mov qword [rax + 0x1470], rdx 	     11062	option.c	FUNCTION_85	IF_1	IF_3	IF_5	CALL_4
0xe6c8	    0x488b05000000	            mov rax, qword [0x0400e70f] 	     11064	option.c	FUNCTION_85	IF_1	IF_3	IF_5	SWITCH_1
0xe6cf	           0xfb600	                   movzx eax, byte [rax]	     11064	option.c	FUNCTION_85	IF_1	IF_3	IF_5	SWITCH_1
0xe6d2	           0xfb6c0	                           movzx eax, al	     11064	option.c	FUNCTION_85	IF_1	IF_3	IF_5	SWITCH_1
0xe6d5	          0x83f86d	                           cmp eax, 0x6d	     11064	option.c	FUNCTION_85	IF_1	IF_3	IF_5	SWITCH_1
0xe6d8	            0x740c	                            je 0x400e726	     11064	option.c	FUNCTION_85	IF_1	IF_3	IF_5	SWITCH_1
0xe6da	          0x83f875	                           cmp eax, 0x75	     11064	option.c	FUNCTION_85	IF_1	IF_3	IF_5	SWITCH_1
0xe6dd	            0x743b	                            je 0x400e75a	     11064	option.c	FUNCTION_85	IF_1	IF_3	IF_5	SWITCH_1
0xe6df	          0x83f864	                           cmp eax, 0x64	     11064	option.c	FUNCTION_85	IF_1	IF_3	IF_5	SWITCH_1
0xe6e2	            0x741c	                            je 0x400e740	     11064	option.c	FUNCTION_85	IF_1	IF_3	IF_5	SWITCH_1
0xe6e4	            0xeb4e	                           jmp 0x400e774	     11064	option.c	FUNCTION_85	IF_1	IF_3	IF_5	SWITCH_1
0xe6e6	      0xbf00000000	                              mov edi, 0	     11067	option.c	FUNCTION_85	IF_1	IF_3	IF_5	SWITCH_1	CALL_5
0xe6eb	      0xe800000000	                          call 0x400e730	     11067	option.c	FUNCTION_85	IF_1	IF_3	IF_5	SWITCH_1	CALL_5
0xe6f0	          0x4889c2	                            mov rdx, rax	     11067	option.c	FUNCTION_85	IF_1	IF_3	IF_5	SWITCH_1	CALL_5
0xe6f3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11067	option.c	FUNCTION_85	IF_1	IF_3	IF_5	SWITCH_1	CALL_5
0xe6f7	    0x488990781400	          mov qword [rax + 0x1478], rdx 	     11067	option.c	FUNCTION_85	IF_1	IF_3	IF_5	SWITCH_1	CALL_5
0xe6fe	            0xeb51	                           jmp 0x400e791	     11067	option.c	FUNCTION_85	IF_1	IF_3	IF_5	SWITCH_1	CALL_5
0xe700	      0xbf00000000	                              mov edi, 0	     11069	option.c	FUNCTION_85	IF_1	IF_3	IF_5	SWITCH_1	CALL_6
0xe705	      0xe800000000	                          call 0x400e74a	     11069	option.c	FUNCTION_85	IF_1	IF_3	IF_5	SWITCH_1	CALL_6
0xe70a	          0x4889c2	                            mov rdx, rax	     11069	option.c	FUNCTION_85	IF_1	IF_3	IF_5	SWITCH_1	CALL_6
0xe70d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11069	option.c	FUNCTION_85	IF_1	IF_3	IF_5	SWITCH_1	CALL_6
0xe711	    0x488990781400	          mov qword [rax + 0x1478], rdx 	     11069	option.c	FUNCTION_85	IF_1	IF_3	IF_5	SWITCH_1	CALL_6
0xe718	            0xeb37	                           jmp 0x400e791	     11069	option.c	FUNCTION_85	IF_1	IF_3	IF_5	SWITCH_1	CALL_6
0xe71a	      0xbf00000000	                              mov edi, 0	     11071	option.c	FUNCTION_85	IF_1	IF_3	IF_5	SWITCH_1	CALL_7
0xe71f	      0xe800000000	                          call 0x400e764	     11071	option.c	FUNCTION_85	IF_1	IF_3	IF_5	SWITCH_1	CALL_7
0xe724	          0x4889c2	                            mov rdx, rax	     11071	option.c	FUNCTION_85	IF_1	IF_3	IF_5	SWITCH_1	CALL_7
0xe727	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11071	option.c	FUNCTION_85	IF_1	IF_3	IF_5	SWITCH_1	CALL_7
0xe72b	    0x488990781400	          mov qword [rax + 0x1478], rdx 	     11071	option.c	FUNCTION_85	IF_1	IF_3	IF_5	SWITCH_1	CALL_7
0xe732	            0xeb1d	                           jmp 0x400e791	     11071	option.c	FUNCTION_85	IF_1	IF_3	IF_5	SWITCH_1	CALL_7
0xe734	    0x488b05000000	            mov rax, qword [0x0400e77b] 	     11073	option.c	FUNCTION_85	IF_1	IF_3	IF_5	SWITCH_1	CALL_8
0xe73b	          0x4889c7	                            mov rdi, rax	     11073	option.c	FUNCTION_85	IF_1	IF_3	IF_5	SWITCH_1	CALL_8
0xe73e	      0xe800000000	                          call 0x400e783	     11073	option.c	FUNCTION_85	IF_1	IF_3	IF_5	SWITCH_1	CALL_8
0xe743	          0x4889c2	                            mov rdx, rax	     11073	option.c	FUNCTION_85	IF_1	IF_3	IF_5	SWITCH_1	CALL_8
0xe746	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11073	option.c	FUNCTION_85	IF_1	IF_3	IF_5	SWITCH_1	CALL_8
0xe74a	    0x488990781400	          mov qword [rax + 0x1478], rdx 	     11073	option.c	FUNCTION_85	IF_1	IF_3	IF_5	SWITCH_1	CALL_8
0xe751	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11075	option.c	FUNCTION_85	IF_1	IF_3	IF_5	IF_6
0xe755	    0x488b80781400	          mov rax, qword [rax + 0x1478] 	     11075	option.c	FUNCTION_85	IF_1	IF_3	IF_5	IF_6
0xe75c	          0x4885c0	                           test rax, rax	     11075	option.c	FUNCTION_85	IF_1	IF_3	IF_5	IF_6
0xe75f	            0x741b	                            je 0x400e7bc	     11075	option.c	FUNCTION_85	IF_1	IF_3	IF_5	IF_6
0xe761	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11076	option.c	FUNCTION_85	IF_1	IF_3	IF_5	IF_6
0xe765	    0x488b80781400	          mov rax, qword [rax + 0x1478] 	     11076	option.c	FUNCTION_85	IF_1	IF_3	IF_5	IF_6
0xe76c	           0xfb600	                   movzx eax, byte [rax]	     11076	option.c	FUNCTION_85	IF_1	IF_3	IF_5	IF_6
0xe76f	           0xfb6d0	                           movzx edx, al	     11076	option.c	FUNCTION_85	IF_1	IF_3	IF_5	IF_6
0xe772	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11076	option.c	FUNCTION_85	IF_1	IF_3	IF_5	IF_6
0xe776	    0x8990e4160000	          mov dword [rax + 0x16e4], edx 	     11076	option.c	FUNCTION_85	IF_1	IF_3	IF_5	IF_6
0xe77c	    0x488b15000000	            mov rdx, qword [0x0400e7c3] 	     11077	option.c	FUNCTION_85	IF_1	IF_3	IF_5
0xe783	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11077	option.c	FUNCTION_85	IF_1	IF_3	IF_5
0xe787	    0x488990f81300	          mov qword [rax + 0x13f8], rdx 	     11077	option.c	FUNCTION_85	IF_1	IF_3	IF_5
0xe78e	    0x488b15000000	            mov rdx, qword [0x0400e7d5] 	     11078	option.c	FUNCTION_85	IF_1	IF_3	IF_5
0xe795	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11078	option.c	FUNCTION_85	IF_1	IF_3	IF_5
0xe799	    0x488990001400	          mov qword [rax + 0x1400], rdx 	     11078	option.c	FUNCTION_85	IF_1	IF_3	IF_5
0xe7a0	            0xeb11	                           jmp 0x400e7f3	     11078	option.c	FUNCTION_85	IF_1	IF_3	IF_5
0xe7a2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11081	option.c	FUNCTION_85	IF_1	IF_3	CALL_9
0xe7a6	      0xbe00000000	                              mov esi, 0	     11081	option.c	FUNCTION_85	IF_1	IF_3	CALL_9
0xe7ab	          0x4889c7	                            mov rdi, rax	     11081	option.c	FUNCTION_85	IF_1	IF_3	CALL_9
0xe7ae	      0xe800000000	                          call 0x400e7f3	     11081	option.c	FUNCTION_85	IF_1	IF_3	CALL_9
0xe7b3	    0x8b1500000000	            mov edx, dword [0x0400e7f9] 	     11083	option.c	FUNCTION_85	IF_1	IF_3
0xe7b9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11083	option.c	FUNCTION_85	IF_1	IF_3
0xe7bd	    0x8990d8130000	          mov dword [rax + 0x13d8], edx 	     11083	option.c	FUNCTION_85	IF_1	IF_3
0xe7c3	    0x8b1500000000	            mov edx, dword [0x0400e809] 	     11084	option.c	FUNCTION_85	IF_1	IF_3
0xe7c9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11084	option.c	FUNCTION_85	IF_1	IF_3
0xe7cd	    0x8990dc130000	          mov dword [rax + 0x13dc], edx 	     11084	option.c	FUNCTION_85	IF_1	IF_3
0xe7d3	    0x488b15000000	            mov rdx, qword [0x0400e81a] 	     11085	option.c	FUNCTION_85	IF_1	IF_3
0xe7da	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11085	option.c	FUNCTION_85	IF_1	IF_3
0xe7de	    0x488990501500	          mov qword [rax + 0x1550], rdx 	     11085	option.c	FUNCTION_85	IF_1	IF_3
0xe7e5	    0x488b15000000	            mov rdx, qword [0x0400e82c] 	     11086	option.c	FUNCTION_85	IF_1	IF_3
0xe7ec	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11086	option.c	FUNCTION_85	IF_1	IF_3
0xe7f0	    0x488990a01500	          mov qword [rax + 0x15a0], rdx 	     11086	option.c	FUNCTION_85	IF_1	IF_3
0xe7f7	    0x488b15000000	            mov rdx, qword [0x0400e83e] 	     11087	option.c	FUNCTION_85	IF_1	IF_3
0xe7fe	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11087	option.c	FUNCTION_85	IF_1	IF_3
0xe802	    0x488990b01500	          mov qword [rax + 0x15b0], rdx 	     11087	option.c	FUNCTION_85	IF_1	IF_3
0xe809	    0x488b15000000	            mov rdx, qword [0x0400e850] 	     11088	option.c	FUNCTION_85	IF_1	IF_3
0xe810	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11088	option.c	FUNCTION_85	IF_1	IF_3
0xe814	    0x488990a81500	          mov qword [rax + 0x15a8], rdx 	     11088	option.c	FUNCTION_85	IF_1	IF_3
0xe81b	    0x488b15000000	            mov rdx, qword [0x0400e862] 	     11089	option.c	FUNCTION_85	IF_1	IF_3
0xe822	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11089	option.c	FUNCTION_85	IF_1	IF_3
0xe826	    0x488990b81500	          mov qword [rax + 0x15b8], rdx 	     11089	option.c	FUNCTION_85	IF_1	IF_3
0xe82d	    0x488b15000000	            mov rdx, qword [0x0400e874] 	     11090	option.c	FUNCTION_85	IF_1	IF_3
0xe834	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11090	option.c	FUNCTION_85	IF_1	IF_3
0xe838	    0x488990c81500	          mov qword [rax + 0x15c8], rdx 	     11090	option.c	FUNCTION_85	IF_1	IF_3
0xe83f	    0x488b15000000	            mov rdx, qword [0x0400e886] 	     11091	option.c	FUNCTION_85	IF_1	IF_3
0xe846	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11091	option.c	FUNCTION_85	IF_1	IF_3
0xe84a	    0x488990c01500	          mov qword [rax + 0x15c0], rdx 	     11091	option.c	FUNCTION_85	IF_1	IF_3
0xe851	    0x8b1500000000	            mov edx, dword [0x0400e897] 	     11092	option.c	FUNCTION_85	IF_1	IF_3
0xe857	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11092	option.c	FUNCTION_85	IF_1	IF_3
0xe85b	    0x8990f0130000	          mov dword [rax + 0x13f0], edx 	     11092	option.c	FUNCTION_85	IF_1	IF_3
0xe861	    0x8b1500000000	            mov edx, dword [0x0400e8a7] 	     11094	option.c	FUNCTION_85	IF_1	IF_3
0xe867	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11094	option.c	FUNCTION_85	IF_1	IF_3
0xe86b	    0x8990f4130000	          mov dword [rax + 0x13f4], edx 	     11094	option.c	FUNCTION_85	IF_1	IF_3
0xe871	    0x8b1500000000	            mov edx, dword [0x0400e8b7] 	     11096	option.c	FUNCTION_85	IF_1	IF_3
0xe877	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11096	option.c	FUNCTION_85	IF_1	IF_3
0xe87b	    0x89905c140000	          mov dword [rax + 0x145c], edx 	     11096	option.c	FUNCTION_85	IF_1	IF_3
0xe881	    0x8b1500000000	            mov edx, dword [0x0400e8c7] 	     11097	option.c	FUNCTION_85	IF_1	IF_3
0xe887	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11097	option.c	FUNCTION_85	IF_1	IF_3
0xe88b	    0x899060140000	          mov dword [rax + 0x1460], edx 	     11097	option.c	FUNCTION_85	IF_1	IF_3
0xe891	    0x8b1500000000	            mov edx, dword [0x0400e8d7] 	     11098	option.c	FUNCTION_85	IF_1	IF_3
0xe897	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11098	option.c	FUNCTION_85	IF_1	IF_3
0xe89b	    0x899064140000	          mov dword [rax + 0x1464], edx 	     11098	option.c	FUNCTION_85	IF_1	IF_3
0xe8a1	    0x8b1500000000	            mov edx, dword [0x0400e8e7] 	     11099	option.c	FUNCTION_85	IF_1	IF_3
0xe8a7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11099	option.c	FUNCTION_85	IF_1	IF_3
0xe8ab	    0x899068140000	          mov dword [rax + 0x1468], edx 	     11099	option.c	FUNCTION_85	IF_1	IF_3
0xe8b1	    0x8b1500000000	            mov edx, dword [0x0400e8f7] 	     11100	option.c	FUNCTION_85	IF_1	IF_3
0xe8b7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11100	option.c	FUNCTION_85	IF_1	IF_3
0xe8bb	    0x899020150000	          mov dword [rax + 0x1520], edx 	     11100	option.c	FUNCTION_85	IF_1	IF_3
0xe8c1	    0x8b1500000000	            mov edx, dword [0x0400e907] 	     11101	option.c	FUNCTION_85	IF_1	IF_3
0xe8c7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11101	option.c	FUNCTION_85	IF_1	IF_3
0xe8cb	    0x899024150000	          mov dword [rax + 0x1524], edx 	     11101	option.c	FUNCTION_85	IF_1	IF_3
0xe8d1	    0x8b1500000000	            mov edx, dword [0x0400e917] 	     11102	option.c	FUNCTION_85	IF_1	IF_3
0xe8d7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11102	option.c	FUNCTION_85	IF_1	IF_3
0xe8db	    0x899098140000	          mov dword [rax + 0x1498], edx 	     11102	option.c	FUNCTION_85	IF_1	IF_3
0xe8e1	    0x8b0500000000	            mov eax, dword [0x0400e927] 	     11103	option.c	FUNCTION_85	IF_1	IF_3
0xe8e7	            0x85c0	                           test eax, eax	     11103	option.c	FUNCTION_85	IF_1	IF_3
0xe8e9	            0x7508	                           jne 0x400e933	     11103	option.c	FUNCTION_85	IF_1	IF_3
0xe8eb	    0x8b0500000000	            mov eax, dword [0x0400e931] 	     11103	option.c	FUNCTION_85	IF_1	IF_3
0xe8f1	            0xeb05	                           jmp 0x400e938	     11103	option.c	FUNCTION_85	IF_1	IF_3
0xe8f3	      0xb800000000	                              mov eax, 0	     11103	option.c	FUNCTION_85	IF_1	IF_3
0xe8f8	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	     11103	option.c	FUNCTION_85	IF_1	IF_3
0xe8fc	    0x898278150000	          mov dword [rdx + 0x1578], eax 	     11103	option.c	FUNCTION_85	IF_1	IF_3
0xe902	    0x488b05000000	            mov rax, qword [0x0400e949] 	     11105	option.c	FUNCTION_85	IF_1	IF_3	CALL_10
0xe909	          0x4889c7	                            mov rdi, rax	     11105	option.c	FUNCTION_85	IF_1	IF_3	CALL_10
0xe90c	      0xe800000000	                          call 0x400e951	     11105	option.c	FUNCTION_85	IF_1	IF_3	CALL_10
0xe911	          0x4889c2	                            mov rdx, rax	     11105	option.c	FUNCTION_85	IF_1	IF_3	CALL_10
0xe914	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11105	option.c	FUNCTION_85	IF_1	IF_3	CALL_10
0xe918	    0x488990401400	          mov qword [rax + 0x1440], rdx 	     11105	option.c	FUNCTION_85	IF_1	IF_3	CALL_10
0xe91f	    0x488b05000000	            mov rax, qword [0x0400e966] 	     11108	option.c	FUNCTION_85	IF_1	IF_3	CALL_11
0xe926	          0x4889c7	                            mov rdi, rax	     11108	option.c	FUNCTION_85	IF_1	IF_3	CALL_11
0xe929	      0xe800000000	                          call 0x400e96e	     11108	option.c	FUNCTION_85	IF_1	IF_3	CALL_11
0xe92e	          0x4889c2	                            mov rdx, rax	     11108	option.c	FUNCTION_85	IF_1	IF_3	CALL_11
0xe931	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11108	option.c	FUNCTION_85	IF_1	IF_3	CALL_11
0xe935	    0x488990481400	          mov qword [rax + 0x1448], rdx 	     11108	option.c	FUNCTION_85	IF_1	IF_3	CALL_11
0xe93c	    0x488b05000000	            mov rax, qword [0x0400e983] 	     11109	option.c	FUNCTION_85	IF_1	IF_3	CALL_12
0xe943	          0x4889c7	                            mov rdi, rax	     11109	option.c	FUNCTION_85	IF_1	IF_3	CALL_12
0xe946	      0xe800000000	                          call 0x400e98b	     11109	option.c	FUNCTION_85	IF_1	IF_3	CALL_12
0xe94b	          0x4889c2	                            mov rdx, rax	     11109	option.c	FUNCTION_85	IF_1	IF_3	CALL_12
0xe94e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11109	option.c	FUNCTION_85	IF_1	IF_3	CALL_12
0xe952	    0x488990501400	          mov qword [rax + 0x1450], rdx 	     11109	option.c	FUNCTION_85	IF_1	IF_3	CALL_12
0xe959	    0x488b15000000	            mov rdx, qword [0x0400e9a0] 	     11111	option.c	FUNCTION_85	IF_1	IF_3
0xe960	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11111	option.c	FUNCTION_85	IF_1	IF_3
0xe964	    0x488990601500	          mov qword [rax + 0x1560], rdx 	     11111	option.c	FUNCTION_85	IF_1	IF_3
0xe96b	    0x488b15000000	            mov rdx, qword [0x0400e9b2] 	     11112	option.c	FUNCTION_85	IF_1	IF_3
0xe972	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11112	option.c	FUNCTION_85	IF_1	IF_3
0xe976	    0x488990681500	          mov qword [rax + 0x1568], rdx 	     11112	option.c	FUNCTION_85	IF_1	IF_3
0xe97d	    0x8b1500000000	            mov edx, dword [0x0400e9c3] 	     11113	option.c	FUNCTION_85	IF_1	IF_3
0xe983	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11113	option.c	FUNCTION_85	IF_1	IF_3
0xe987	    0x899058150000	          mov dword [rax + 0x1558], edx 	     11113	option.c	FUNCTION_85	IF_1	IF_3
0xe98d	    0x488b05000000	            mov rax, qword [0x0400e9d4] 	     11115	option.c	FUNCTION_85	IF_1	IF_3	CALL_13
0xe994	          0x4889c7	                            mov rdi, rax	     11115	option.c	FUNCTION_85	IF_1	IF_3	CALL_13
0xe997	      0xe800000000	                          call 0x400e9dc	     11115	option.c	FUNCTION_85	IF_1	IF_3	CALL_13
0xe99c	          0x4889c2	                            mov rdx, rax	     11115	option.c	FUNCTION_85	IF_1	IF_3	CALL_13
0xe99f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11115	option.c	FUNCTION_85	IF_1	IF_3	CALL_13
0xe9a3	    0x488990301400	          mov qword [rax + 0x1430], rdx 	     11115	option.c	FUNCTION_85	IF_1	IF_3	CALL_13
0xe9aa	    0x488b05000000	            mov rax, qword [0x0400e9f1] 	     11118	option.c	FUNCTION_85	IF_1	IF_3	CALL_14
0xe9b1	          0x4889c7	                            mov rdi, rax	     11118	option.c	FUNCTION_85	IF_1	IF_3	CALL_14
0xe9b4	      0xe800000000	                          call 0x400e9f9	     11118	option.c	FUNCTION_85	IF_1	IF_3	CALL_14
0xe9b9	          0x4889c2	                            mov rdx, rax	     11118	option.c	FUNCTION_85	IF_1	IF_3	CALL_14
0xe9bc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11118	option.c	FUNCTION_85	IF_1	IF_3	CALL_14
0xe9c0	    0x488990381400	          mov qword [rax + 0x1438], rdx 	     11118	option.c	FUNCTION_85	IF_1	IF_3	CALL_14
0xe9c7	    0x488b05000000	            mov rax, qword [0x0400ea0e] 	     11120	option.c	FUNCTION_85	IF_1	IF_3	CALL_15
0xe9ce	          0x4889c7	                            mov rdi, rax	     11120	option.c	FUNCTION_85	IF_1	IF_3	CALL_15
0xe9d1	      0xe800000000	                          call 0x400ea16	     11120	option.c	FUNCTION_85	IF_1	IF_3	CALL_15
0xe9d6	          0x4889c2	                            mov rdx, rax	     11120	option.c	FUNCTION_85	IF_1	IF_3	CALL_15
0xe9d9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11120	option.c	FUNCTION_85	IF_1	IF_3	CALL_15
0xe9dd	    0x488990881400	          mov qword [rax + 0x1488], rdx 	     11120	option.c	FUNCTION_85	IF_1	IF_3	CALL_15
0xe9e4	    0x488b05000000	            mov rax, qword [0x0400ea2b] 	     11121	option.c	FUNCTION_85	IF_1	IF_3	CALL_16
0xe9eb	          0x4889c7	                            mov rdi, rax	     11121	option.c	FUNCTION_85	IF_1	IF_3	CALL_16
0xe9ee	      0xe800000000	                          call 0x400ea33	     11121	option.c	FUNCTION_85	IF_1	IF_3	CALL_16
0xe9f3	          0x4889c2	                            mov rdx, rax	     11121	option.c	FUNCTION_85	IF_1	IF_3	CALL_16
0xe9f6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11121	option.c	FUNCTION_85	IF_1	IF_3	CALL_16
0xe9fa	    0x488990901400	          mov qword [rax + 0x1490], rdx 	     11121	option.c	FUNCTION_85	IF_1	IF_3	CALL_16
0xea01	    0x488b05000000	            mov rax, qword [0x0400ea48] 	     11122	option.c	FUNCTION_85	IF_1	IF_3	CALL_17
0xea08	          0x4889c7	                            mov rdi, rax	     11122	option.c	FUNCTION_85	IF_1	IF_3	CALL_17
0xea0b	      0xe800000000	                          call 0x400ea50	     11122	option.c	FUNCTION_85	IF_1	IF_3	CALL_17
0xea10	          0x4889c2	                            mov rdx, rax	     11122	option.c	FUNCTION_85	IF_1	IF_3	CALL_17
0xea13	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11122	option.c	FUNCTION_85	IF_1	IF_3	CALL_17
0xea17	    0x488990301500	          mov qword [rax + 0x1530], rdx 	     11122	option.c	FUNCTION_85	IF_1	IF_3	CALL_17
0xea1e	    0x488b05000000	            mov rax, qword [0x0400ea65] 	     11123	option.c	FUNCTION_85	IF_1	IF_3	CALL_18
0xea25	          0x4889c7	                            mov rdi, rax	     11123	option.c	FUNCTION_85	IF_1	IF_3	CALL_18
0xea28	      0xe800000000	                          call 0x400ea6d	     11123	option.c	FUNCTION_85	IF_1	IF_3	CALL_18
0xea2d	          0x4889c2	                            mov rdx, rax	     11123	option.c	FUNCTION_85	IF_1	IF_3	CALL_18
0xea30	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11123	option.c	FUNCTION_85	IF_1	IF_3	CALL_18
0xea34	    0x488990181500	          mov qword [rax + 0x1518], rdx 	     11123	option.c	FUNCTION_85	IF_1	IF_3	CALL_18
0xea3b	    0x8b1500000000	            mov edx, dword [0x0400ea81] 	     11125	option.c	FUNCTION_85	IF_1	IF_3
0xea41	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11125	option.c	FUNCTION_85	IF_1	IF_3
0xea45	    0x89905c150000	          mov dword [rax + 0x155c], edx 	     11125	option.c	FUNCTION_85	IF_1	IF_3
0xea4b	    0x8b1500000000	            mov edx, dword [0x0400ea91] 	     11127	option.c	FUNCTION_85	IF_1	IF_3
0xea51	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11127	option.c	FUNCTION_85	IF_1	IF_3
0xea55	    0x8990ec130000	          mov dword [rax + 0x13ec], edx 	     11127	option.c	FUNCTION_85	IF_1	IF_3
0xea5b	    0x8b1500000000	            mov edx, dword [0x0400eaa1] 	     11129	option.c	FUNCTION_85	IF_1	IF_3
0xea61	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11129	option.c	FUNCTION_85	IF_1	IF_3
0xea65	    0x899010140000	          mov dword [rax + 0x1410], edx 	     11129	option.c	FUNCTION_85	IF_1	IF_3
0xea6b	    0x488b05000000	            mov rax, qword [0x0400eab2] 	     11130	option.c	FUNCTION_85	IF_1	IF_3	CALL_19
0xea72	          0x4889c7	                            mov rdi, rax	     11130	option.c	FUNCTION_85	IF_1	IF_3	CALL_19
0xea75	      0xe800000000	                          call 0x400eaba	     11130	option.c	FUNCTION_85	IF_1	IF_3	CALL_19
0xea7a	          0x4889c2	                            mov rdx, rax	     11130	option.c	FUNCTION_85	IF_1	IF_3	CALL_19
0xea7d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11130	option.c	FUNCTION_85	IF_1	IF_3	CALL_19
0xea81	    0x488990201400	          mov qword [rax + 0x1420], rdx 	     11130	option.c	FUNCTION_85	IF_1	IF_3	CALL_19
0xea88	    0x488b05000000	            mov rax, qword [0x0400eacf] 	     11131	option.c	FUNCTION_85	IF_1	IF_3	CALL_20
0xea8f	          0x4889c7	                            mov rdi, rax	     11131	option.c	FUNCTION_85	IF_1	IF_3	CALL_20
0xea92	      0xe800000000	                          call 0x400ead7	     11131	option.c	FUNCTION_85	IF_1	IF_3	CALL_20
0xea97	          0x4889c2	                            mov rdx, rax	     11131	option.c	FUNCTION_85	IF_1	IF_3	CALL_20
0xea9a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11131	option.c	FUNCTION_85	IF_1	IF_3	CALL_20
0xea9e	    0x488990181400	          mov qword [rax + 0x1418], rdx 	     11131	option.c	FUNCTION_85	IF_1	IF_3	CALL_20
0xeaa5	    0x488b15000000	            mov rdx, qword [0x0400eaec] 	     11135	option.c	FUNCTION_85	IF_1	IF_3
0xeaac	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11135	option.c	FUNCTION_85	IF_1	IF_3
0xeab0	    0x488990801400	          mov qword [rax + 0x1480], rdx 	     11135	option.c	FUNCTION_85	IF_1	IF_3
0xeab7	    0x8b1500000000	            mov edx, dword [0x0400eafd] 	     11137	option.c	FUNCTION_85	IF_1	IF_3
0xeabd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11137	option.c	FUNCTION_85	IF_1	IF_3
0xeac1	    0x899038150000	          mov dword [rax + 0x1538], edx 	     11137	option.c	FUNCTION_85	IF_1	IF_3
0xeac7	    0x488b05000000	            mov rax, qword [0x0400eb0e] 	     11139	option.c	FUNCTION_85	IF_1	IF_3	CALL_21
0xeace	          0x4889c7	                            mov rdi, rax	     11139	option.c	FUNCTION_85	IF_1	IF_3	CALL_21
0xead1	      0xe800000000	                          call 0x400eb16	     11139	option.c	FUNCTION_85	IF_1	IF_3	CALL_21
0xead6	          0x4889c2	                            mov rdx, rax	     11139	option.c	FUNCTION_85	IF_1	IF_3	CALL_21
0xead9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11139	option.c	FUNCTION_85	IF_1	IF_3	CALL_21
0xeadd	    0x488990281400	          mov qword [rax + 0x1428], rdx 	     11139	option.c	FUNCTION_85	IF_1	IF_3	CALL_21
0xeae4	    0x8b1500000000	            mov edx, dword [0x0400eb2a] 	     11142	option.c	FUNCTION_85	IF_1	IF_3
0xeaea	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11142	option.c	FUNCTION_85	IF_1	IF_3
0xeaee	    0x899008150000	          mov dword [rax + 0x1508], edx 	     11142	option.c	FUNCTION_85	IF_1	IF_3
0xeaf4	    0x488b15000000	            mov rdx, qword [0x0400eb3b] 	     11146	option.c	FUNCTION_85	IF_1	IF_3
0xeafb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11146	option.c	FUNCTION_85	IF_1	IF_3
0xeaff	    0x488990881500	          mov qword [rax + 0x1588], rdx 	     11146	option.c	FUNCTION_85	IF_1	IF_3
0xeb06	    0x488b15000000	            mov rdx, qword [0x0400eb4d] 	     11147	option.c	FUNCTION_85	IF_1	IF_3
0xeb0d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11147	option.c	FUNCTION_85	IF_1	IF_3
0xeb11	    0x488990801500	          mov qword [rax + 0x1580], rdx 	     11147	option.c	FUNCTION_85	IF_1	IF_3
0xeb18	    0x488b15000000	            mov rdx, qword [0x0400eb5f] 	     11148	option.c	FUNCTION_85	IF_1	IF_3
0xeb1f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11148	option.c	FUNCTION_85	IF_1	IF_3
0xeb23	    0x488990f81b00	          mov qword [rax + 0x1bf8], rdx 	     11148	option.c	FUNCTION_85	IF_1	IF_3
0xeb2a	    0x488b05000000	            mov rax, qword [0x0400eb71] 	     11151	option.c	FUNCTION_85	IF_1	IF_3	CALL_22
0xeb31	          0x4889c7	                            mov rdi, rax	     11151	option.c	FUNCTION_85	IF_1	IF_3	CALL_22
0xeb34	      0xe800000000	                          call 0x400eb79	     11151	option.c	FUNCTION_85	IF_1	IF_3	CALL_22
0xeb39	          0x4889c2	                            mov rdx, rax	     11151	option.c	FUNCTION_85	IF_1	IF_3	CALL_22
0xeb3c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11151	option.c	FUNCTION_85	IF_1	IF_3	CALL_22
0xeb40	    0x488990b01b00	          mov qword [rax + 0x1bb0], rdx 	     11151	option.c	FUNCTION_85	IF_1	IF_3	CALL_22
0xeb47	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11152	option.c	FUNCTION_85	IF_1	IF_3	CALL_23
0xeb4b	    0x480548170000	                         add rax, 0x1748	     11152	option.c	FUNCTION_85	IF_1	IF_3	CALL_23
0xeb51	          0x4889c7	                            mov rdi, rax	     11152	option.c	FUNCTION_85	IF_1	IF_3	CALL_23
0xeb54	      0xe8189fffff	               call sym.compile_cap_prog	     11152	option.c	FUNCTION_85	IF_1	IF_3	CALL_23
0xeb59	    0x488b05000000	            mov rax, qword [0x0400eba0] 	     11153	option.c	FUNCTION_85	IF_1	IF_3	CALL_24
0xeb60	          0x4889c7	                            mov rdi, rax	     11153	option.c	FUNCTION_85	IF_1	IF_3	CALL_24
0xeb63	      0xe800000000	                          call 0x400eba8	     11153	option.c	FUNCTION_85	IF_1	IF_3	CALL_24
0xeb68	          0x4889c2	                            mov rdx, rax	     11153	option.c	FUNCTION_85	IF_1	IF_3	CALL_24
0xeb6b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11153	option.c	FUNCTION_85	IF_1	IF_3	CALL_24
0xeb6f	    0x488990c01b00	          mov qword [rax + 0x1bc0], rdx 	     11153	option.c	FUNCTION_85	IF_1	IF_3	CALL_24
0xeb76	    0x488b05000000	            mov rax, qword [0x0400ebbd] 	     11154	option.c	FUNCTION_85	IF_1	IF_3	CALL_25
0xeb7d	          0x4889c7	                            mov rdi, rax	     11154	option.c	FUNCTION_85	IF_1	IF_3	CALL_25
0xeb80	      0xe800000000	                          call 0x400ebc5	     11154	option.c	FUNCTION_85	IF_1	IF_3	CALL_25
0xeb85	          0x4889c2	                            mov rdx, rax	     11154	option.c	FUNCTION_85	IF_1	IF_3	CALL_25
0xeb88	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11154	option.c	FUNCTION_85	IF_1	IF_3	CALL_25
0xeb8c	    0x488990c81b00	          mov qword [rax + 0x1bc8], rdx 	     11154	option.c	FUNCTION_85	IF_1	IF_3	CALL_25
0xeb93	    0x488b05000000	            mov rax, qword [0x0400ebda] 	     11157	option.c	FUNCTION_85	IF_1	IF_3	CALL_26
0xeb9a	          0x4889c7	                            mov rdi, rax	     11157	option.c	FUNCTION_85	IF_1	IF_3	CALL_26
0xeb9d	      0xe800000000	                          call 0x400ebe2	     11157	option.c	FUNCTION_85	IF_1	IF_3	CALL_26
0xeba2	          0x4889c2	                            mov rdx, rax	     11157	option.c	FUNCTION_85	IF_1	IF_3	CALL_26
0xeba5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11157	option.c	FUNCTION_85	IF_1	IF_3	CALL_26
0xeba9	    0x488990c81400	          mov qword [rax + 0x14c8], rdx 	     11157	option.c	FUNCTION_85	IF_1	IF_3	CALL_26
0xebb0	    0x488b05000000	            mov rax, qword [0x0400ebf7] 	     11158	option.c	FUNCTION_85	IF_1	IF_3	CALL_27
0xebb7	          0x4889c7	                            mov rdi, rax	     11158	option.c	FUNCTION_85	IF_1	IF_3	CALL_27
0xebba	      0xe800000000	                          call 0x400ebff	     11158	option.c	FUNCTION_85	IF_1	IF_3	CALL_27
0xebbf	          0x4889c2	                            mov rdx, rax	     11158	option.c	FUNCTION_85	IF_1	IF_3	CALL_27
0xebc2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11158	option.c	FUNCTION_85	IF_1	IF_3	CALL_27
0xebc6	    0x488990d81400	          mov qword [rax + 0x14d8], rdx 	     11158	option.c	FUNCTION_85	IF_1	IF_3	CALL_27
0xebcd	    0x488b15000000	            mov rdx, qword [0x0400ec14] 	     11160	option.c	FUNCTION_85	IF_1	IF_3
0xebd4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11160	option.c	FUNCTION_85	IF_1	IF_3
0xebd8	    0x488990e01400	          mov qword [rax + 0x14e0], rdx 	     11160	option.c	FUNCTION_85	IF_1	IF_3
0xebdf	    0x488b05000000	            mov rax, qword [0x0400ec26] 	     11162	option.c	FUNCTION_85	IF_1	IF_3	CALL_28
0xebe6	          0x4889c7	                            mov rdi, rax	     11162	option.c	FUNCTION_85	IF_1	IF_3	CALL_28
0xebe9	      0xe800000000	                          call 0x400ec2e	     11162	option.c	FUNCTION_85	IF_1	IF_3	CALL_28
0xebee	          0x4889c2	                            mov rdx, rax	     11162	option.c	FUNCTION_85	IF_1	IF_3	CALL_28
0xebf1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11162	option.c	FUNCTION_85	IF_1	IF_3	CALL_28
0xebf5	    0x488990e81400	          mov qword [rax + 0x14e8], rdx 	     11162	option.c	FUNCTION_85	IF_1	IF_3	CALL_28
0xebfc	    0x488b05000000	            mov rax, qword [0x0400ec43] 	     11165	option.c	FUNCTION_85	IF_1	IF_3	CALL_29
0xec03	          0x4889c7	                            mov rdi, rax	     11165	option.c	FUNCTION_85	IF_1	IF_3	CALL_29
0xec06	      0xe800000000	                          call 0x400ec4b	     11165	option.c	FUNCTION_85	IF_1	IF_3	CALL_29
0xec0b	          0x4889c2	                            mov rdx, rax	     11165	option.c	FUNCTION_85	IF_1	IF_3	CALL_29
0xec0e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11165	option.c	FUNCTION_85	IF_1	IF_3	CALL_29
0xec12	    0x488990f81400	          mov qword [rax + 0x14f8], rdx 	     11165	option.c	FUNCTION_85	IF_1	IF_3	CALL_29
0xec19	    0x488b05000000	            mov rax, qword [0x0400ec60] 	     11168	option.c	FUNCTION_85	IF_1	IF_3	CALL_30
0xec20	          0x4889c7	                            mov rdi, rax	     11168	option.c	FUNCTION_85	IF_1	IF_3	CALL_30
0xec23	      0xe800000000	                          call 0x400ec68	     11168	option.c	FUNCTION_85	IF_1	IF_3	CALL_30
0xec28	          0x4889c2	                            mov rdx, rax	     11168	option.c	FUNCTION_85	IF_1	IF_3	CALL_30
0xec2b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11168	option.c	FUNCTION_85	IF_1	IF_3	CALL_30
0xec2f	    0x488990701500	          mov qword [rax + 0x1570], rdx 	     11168	option.c	FUNCTION_85	IF_1	IF_3	CALL_30
0xec36	    0x488b05000000	            mov rax, qword [0x0400ec7d] 	     11171	option.c	FUNCTION_85	IF_1	IF_3	CALL_31
0xec3d	          0x4889c7	                            mov rdi, rax	     11171	option.c	FUNCTION_85	IF_1	IF_3	CALL_31
0xec40	      0xe800000000	                          call 0x400ec85	     11171	option.c	FUNCTION_85	IF_1	IF_3	CALL_31
0xec45	          0x4889c2	                            mov rdx, rax	     11171	option.c	FUNCTION_85	IF_1	IF_3	CALL_31
0xec48	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11171	option.c	FUNCTION_85	IF_1	IF_3	CALL_31
0xec4c	    0x488990d01500	          mov qword [rax + 0x15d0], rdx 	     11171	option.c	FUNCTION_85	IF_1	IF_3	CALL_31
0xec53	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11172	option.c	FUNCTION_85	IF_1	IF_3
0xec57	     0xfb780781200	         movzx eax, word [rax + 0x1278] 	     11172	option.c	FUNCTION_85	IF_1	IF_3
0xec5e	          0x83c801	                               or eax, 1	     11172	option.c	FUNCTION_85	IF_1	IF_3
0xec61	            0x89c2	                            mov edx, eax	     11172	option.c	FUNCTION_85	IF_1	IF_3
0xec63	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11172	option.c	FUNCTION_85	IF_1	IF_3
0xec67	    0x668990781200	            mov word [rax + 0x1278], dx 	     11172	option.c	FUNCTION_85	IF_1	IF_3
0xec6e	    0x488b15000000	            mov rdx, qword [0x0400ecb5] 	     11176	option.c	FUNCTION_85	IF_1	IF_3
0xec75	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11176	option.c	FUNCTION_85	IF_1	IF_3
0xec79	    0x488990681200	          mov qword [rax + 0x1268], rdx 	     11176	option.c	FUNCTION_85	IF_1	IF_3
0xec80	    0x488b15000000	            mov rdx, qword [0x0400ecc7] 	     11177	option.c	FUNCTION_85	IF_1	IF_3
0xec87	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11177	option.c	FUNCTION_85	IF_1	IF_3
0xec8b	    0x488990701200	          mov qword [rax + 0x1270], rdx 	     11177	option.c	FUNCTION_85	IF_1	IF_3
0xec92	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11181	option.c	FUNCTION_85	IF_1	IF_3
0xec96	    0xc78000160000	   mov dword [rax + 0x1600], 0xffffffff 	     11181	option.c	FUNCTION_85	IF_1	IF_3
0xeca0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11182	option.c	FUNCTION_85	IF_1	IF_3
0xeca4	    0x48c780301600	mov qword [rax + 0x1630], 0xfffffffffffe1dc0 	     11182	option.c	FUNCTION_85	IF_1	IF_3
0xecaf	    0x488b15000000	            mov rdx, qword [0x0400ecf6] 	     11183	option.c	FUNCTION_85	IF_1	IF_3
0xecb6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11183	option.c	FUNCTION_85	IF_1	IF_3
0xecba	    0x488990e01300	          mov qword [rax + 0x13e0], rdx 	     11183	option.c	FUNCTION_85	IF_1	IF_3
0xecc1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11184	option.c	FUNCTION_85	IF_1	IF_3
0xecc5	    0xc780e8130000	            mov dword [rax + 0x13e8], 0 	     11184	option.c	FUNCTION_85	IF_1	IF_3
0xeccf	    0x488b15000000	            mov rdx, qword [0x0400ed16] 	     11186	option.c	FUNCTION_85	IF_1	IF_3
0xecd6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11186	option.c	FUNCTION_85	IF_1	IF_3
0xecda	    0x488990d81500	          mov qword [rax + 0x15d8], rdx 	     11186	option.c	FUNCTION_85	IF_1	IF_3
0xece1	    0x488b15000000	            mov rdx, qword [0x0400ed28] 	     11187	option.c	FUNCTION_85	IF_1	IF_3
0xece8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11187	option.c	FUNCTION_85	IF_1	IF_3
0xecec	    0x488990e01500	          mov qword [rax + 0x15e0], rdx 	     11187	option.c	FUNCTION_85	IF_1	IF_3
0xecf3	    0x488b15000000	            mov rdx, qword [0x0400ed3a] 	     11188	option.c	FUNCTION_85	IF_1	IF_3
0xecfa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11188	option.c	FUNCTION_85	IF_1	IF_3
0xecfe	    0x488990e81500	          mov qword [rax + 0x15e8], rdx 	     11188	option.c	FUNCTION_85	IF_1	IF_3
0xed05	    0x488b15000000	            mov rdx, qword [0x0400ed4c] 	     11190	option.c	FUNCTION_85	IF_1	IF_3
0xed0c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11190	option.c	FUNCTION_85	IF_1	IF_3
0xed10	    0x488990f01500	          mov qword [rax + 0x15f0], rdx 	     11190	option.c	FUNCTION_85	IF_1	IF_3
0xed17	    0x488b15000000	            mov rdx, qword [0x0400ed5e] 	     11191	option.c	FUNCTION_85	IF_1	IF_3
0xed1e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11191	option.c	FUNCTION_85	IF_1	IF_3
0xed22	    0x488990001500	          mov qword [rax + 0x1500], rdx 	     11191	option.c	FUNCTION_85	IF_1	IF_3
0xed29	    0x488b15000000	            mov rdx, qword [0x0400ed70] 	     11192	option.c	FUNCTION_85	IF_1	IF_3
0xed30	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11192	option.c	FUNCTION_85	IF_1	IF_3
0xed34	    0x488990f81500	          mov qword [rax + 0x15f8], rdx 	     11192	option.c	FUNCTION_85	IF_1	IF_3
0xed3b	    0x488b15000000	            mov rdx, qword [0x0400ed82] 	     11193	option.c	FUNCTION_85	IF_1	IF_3
0xed42	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11193	option.c	FUNCTION_85	IF_1	IF_3
0xed46	    0x488990081600	          mov qword [rax + 0x1608], rdx 	     11193	option.c	FUNCTION_85	IF_1	IF_3
0xed4d	    0x488b15000000	            mov rdx, qword [0x0400ed94] 	     11194	option.c	FUNCTION_85	IF_1	IF_3
0xed54	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11194	option.c	FUNCTION_85	IF_1	IF_3
0xed58	    0x488990101600	          mov qword [rax + 0x1610], rdx 	     11194	option.c	FUNCTION_85	IF_1	IF_3
0xed5f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11195	option.c	FUNCTION_85	IF_1	IF_3
0xed63	    0xc78018160000	            mov dword [rax + 0x1618], 0 	     11195	option.c	FUNCTION_85	IF_1	IF_3
0xed6d	    0x488b15000000	            mov rdx, qword [0x0400edb4] 	     11197	option.c	FUNCTION_85	IF_1	IF_3
0xed74	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11197	option.c	FUNCTION_85	IF_1	IF_3
0xed78	    0x488990a81400	          mov qword [rax + 0x14a8], rdx 	     11197	option.c	FUNCTION_85	IF_1	IF_3
0xed7f	    0x488b15000000	            mov rdx, qword [0x0400edc6] 	     11198	option.c	FUNCTION_85	IF_1	IF_3
0xed86	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11198	option.c	FUNCTION_85	IF_1	IF_3
0xed8a	    0x488990b01400	          mov qword [rax + 0x14b0], rdx 	     11198	option.c	FUNCTION_85	IF_1	IF_3
0xed91	    0x488b05000000	            mov rax, qword [0x0400edd8] 	     11200	option.c	FUNCTION_85	IF_1	IF_3	CALL_32
0xed98	          0x4889c7	                            mov rdi, rax	     11200	option.c	FUNCTION_85	IF_1	IF_3	CALL_32
0xed9b	      0xe800000000	                          call 0x400ede0	     11200	option.c	FUNCTION_85	IF_1	IF_3	CALL_32
0xeda0	          0x4889c2	                            mov rdx, rax	     11200	option.c	FUNCTION_85	IF_1	IF_3	CALL_32
0xeda3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11200	option.c	FUNCTION_85	IF_1	IF_3	CALL_32
0xeda7	    0x488990b81400	          mov qword [rax + 0x14b8], rdx 	     11200	option.c	FUNCTION_85	IF_1	IF_3	CALL_32
0xedae	    0x488b15000000	            mov rdx, qword [0x0400edf5] 	     11204	option.c	FUNCTION_85	IF_1	IF_3
0xedb5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11204	option.c	FUNCTION_85	IF_1	IF_3
0xedb9	    0x488990201600	          mov qword [rax + 0x1620], rdx 	     11204	option.c	FUNCTION_85	IF_1	IF_3
0xedc0	    0x488b15000000	            mov rdx, qword [0x0400ee07] 	     11205	option.c	FUNCTION_85	IF_1	IF_3
0xedc7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11205	option.c	FUNCTION_85	IF_1	IF_3
0xedcb	    0x488990281600	          mov qword [rax + 0x1628], rdx 	     11205	option.c	FUNCTION_85	IF_1	IF_3
0xedd2	    0x488b05000000	            mov rax, qword [0x0400ee19] 	     11208	option.c	FUNCTION_85	IF_1	IF_3	CALL_33
0xedd9	          0x4889c7	                            mov rdi, rax	     11208	option.c	FUNCTION_85	IF_1	IF_3	CALL_33
0xeddc	      0xe800000000	                          call 0x400ee21	     11208	option.c	FUNCTION_85	IF_1	IF_3	CALL_33
0xede1	          0x4889c2	                            mov rdx, rax	     11208	option.c	FUNCTION_85	IF_1	IF_3	CALL_33
0xede4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11208	option.c	FUNCTION_85	IF_1	IF_3	CALL_33
0xede8	    0x488990401500	          mov qword [rax + 0x1540], rdx 	     11208	option.c	FUNCTION_85	IF_1	IF_3	CALL_33
0xedef	    0x488b15000000	            mov rdx, qword [0x0400ee36] 	     11211	option.c	FUNCTION_85	IF_1	IF_3
0xedf6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11211	option.c	FUNCTION_85	IF_1	IF_3
0xedfa	    0x488990181700	          mov qword [rax + 0x1718], rdx 	     11211	option.c	FUNCTION_85	IF_1	IF_3
0xee01	    0x488b15000000	            mov rdx, qword [0x0400ee48] 	     11214	option.c	FUNCTION_85	IF_1	IF_3
0xee08	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11214	option.c	FUNCTION_85	IF_1	IF_3
0xee0c	    0x488990281700	          mov qword [rax + 0x1728], rdx 	     11214	option.c	FUNCTION_85	IF_1	IF_3
0xee13	    0x8b1500000000	            mov edx, dword [0x0400ee59] 	     11217	option.c	FUNCTION_85	IF_1	IF_3
0xee19	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11217	option.c	FUNCTION_85	IF_1	IF_3
0xee1d	    0x899038160000	          mov dword [rax + 0x1638], edx 	     11217	option.c	FUNCTION_85	IF_1	IF_3
0xee23	    0x488b15000000	            mov rdx, qword [0x0400ee6a] 	     11220	option.c	FUNCTION_85	IF_1	IF_3
0xee2a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11220	option.c	FUNCTION_85	IF_1	IF_3
0xee2e	    0x488990401600	          mov qword [rax + 0x1640], rdx 	     11220	option.c	FUNCTION_85	IF_1	IF_3
0xee35	    0x488b15000000	            mov rdx, qword [0x0400ee7c] 	     11223	option.c	FUNCTION_85	IF_1	IF_3
0xee3c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11223	option.c	FUNCTION_85	IF_1	IF_3
0xee40	    0x488990101500	          mov qword [rax + 0x1510], rdx 	     11223	option.c	FUNCTION_85	IF_1	IF_3
0xee47	        0x837df400	                cmp dword [rbp - 0xc], 0	     11232	option.c	FUNCTION_85	IF_1	IF_3	IF_7
0xee4b	            0x7411	                            je 0x400ee9e	     11232	option.c	FUNCTION_85	IF_1	IF_3	IF_7
0xee4d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11233	option.c	FUNCTION_85	IF_1	IF_3	IF_7
0xee51	        0x488b55f8	                mov rdx, qword [rbp - 8]	     11233	option.c	FUNCTION_85	IF_1	IF_3	IF_7
0xee55	    0x488990a01400	          mov qword [rax + 0x14a0], rdx 	     11233	option.c	FUNCTION_85	IF_1	IF_3	IF_7
0xee5c	            0xeb78	                           jmp 0x400ef16	     11233	option.c	FUNCTION_85	IF_1	IF_3	IF_7
0xee5e	    0x488b05000000	            mov rax, qword [0x0400eea5] 	     11236	option.c	FUNCTION_85	IF_1	IF_3	ELSE_2	CALL_34
0xee65	          0x4889c7	                            mov rdi, rax	     11236	option.c	FUNCTION_85	IF_1	IF_3	ELSE_2	CALL_34
0xee68	      0xe800000000	                          call 0x400eead	     11236	option.c	FUNCTION_85	IF_1	IF_3	ELSE_2	CALL_34
0xee6d	          0x4889c2	                            mov rdx, rax	     11236	option.c	FUNCTION_85	IF_1	IF_3	ELSE_2	CALL_34
0xee70	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11236	option.c	FUNCTION_85	IF_1	IF_3	ELSE_2	CALL_34
0xee74	    0x488990a01400	          mov qword [rax + 0x14a0], rdx 	     11236	option.c	FUNCTION_85	IF_1	IF_3	ELSE_2	CALL_34
0xee7b	    0xc745f0010000	               mov dword [rbp - 0x10], 1	     11237	option.c	FUNCTION_85	IF_1	IF_3	ELSE_2
0xee82	    0x488b15000000	            mov rdx, qword [0x0400eec9] 	     11238	option.c	FUNCTION_85	IF_1	IF_3	ELSE_2
0xee89	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11238	option.c	FUNCTION_85	IF_1	IF_3	ELSE_2
0xee8d	    0x488990901500	          mov qword [rax + 0x1590], rdx 	     11238	option.c	FUNCTION_85	IF_1	IF_3	ELSE_2
0xee94	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11239	option.c	FUNCTION_85	IF_1	IF_3	ELSE_2
0xee98	    0xc78038170000	            mov dword [rax + 0x1738], 0 	     11239	option.c	FUNCTION_85	IF_1	IF_3	ELSE_2
0xeea2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11240	option.c	FUNCTION_85	IF_1	IF_3	ELSE_2	IF_8
0xeea6	    0x488b80001400	          mov rax, qword [rax + 0x1400] 	     11240	option.c	FUNCTION_85	IF_1	IF_3	ELSE_2	IF_8
0xeead	           0xfb600	                   movzx eax, byte [rax]	     11240	option.c	FUNCTION_85	IF_1	IF_3	ELSE_2	IF_8
0xeeb0	            0x3c68	                            cmp al, 0x68	     11240	option.c	FUNCTION_85	IF_1	IF_3	ELSE_2	IF_8
0xeeb2	            0x7512	                           jne 0x400ef06	     11240	option.c	FUNCTION_85	IF_1	IF_3	ELSE_2	IF_8
0xeeb4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11241	option.c	FUNCTION_85	IF_1	IF_3	ELSE_2	CALL_35
0xeeb8	    0x480500140000	                         add rax, 0x1400	     11241	option.c	FUNCTION_85	IF_1	IF_3	ELSE_2	CALL_35
0xeebe	          0x4889c7	                            mov rdi, rax	     11241	option.c	FUNCTION_85	IF_1	IF_3	ELSE_2	CALL_35
0xeec1	      0xe800000000	                          call 0x400ef06	     11241	option.c	FUNCTION_85	IF_1	IF_3	ELSE_2	CALL_35
0xeec6	    0x8b1500000000	            mov edx, dword [0x0400ef0c] 	     11242	option.c	FUNCTION_85	IF_1	IF_3	ELSE_2
0xeecc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11242	option.c	FUNCTION_85	IF_1	IF_3	ELSE_2
0xeed0	    0x899028150000	          mov dword [rax + 0x1528], edx 	     11242	option.c	FUNCTION_85	IF_1	IF_3	ELSE_2
0xeed6	        0x837dec00	               cmp dword [rbp - 0x14], 0	     11250	option.c	FUNCTION_85	IF_1	IF_9
0xeeda	            0x740e	                            je 0x400ef2a	     11250	option.c	FUNCTION_85	IF_1	IF_9
0xeedc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11251	option.c	FUNCTION_85	IF_1	IF_9
0xeee0	    0xc78098120000	            mov dword [rax + 0x1298], 1 	     11251	option.c	FUNCTION_85	IF_1	IF_9
0xeeea	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11254	option.c	FUNCTION_85	CALL_36
0xeeee	          0x4889c7	                            mov rdi, rax	     11254	option.c	FUNCTION_85	CALL_36
0xeef1	      0xe800000000	                          call 0x400ef36	     11254	option.c	FUNCTION_85	CALL_36
0xeef6	        0x837df000	               cmp dword [rbp - 0x10], 0	     11255	option.c	FUNCTION_85	IF_10
0xeefa	            0x7411	                            je 0x400ef4d	     11255	option.c	FUNCTION_85	IF_10
0xeefc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     11256	option.c	FUNCTION_85	CALL_37
0xef00	      0xbe00000000	                              mov esi, 0	     11256	option.c	FUNCTION_85	CALL_37
0xef05	          0x4889c7	                            mov rdi, rax	     11256	option.c	FUNCTION_85	CALL_37
0xef08	      0xe800000000	                          call 0x400ef4d	     11256	option.c	FUNCTION_85	CALL_37
0xef0d	              0x90	                                     nop	     11257	option.c	FUNCTION_85
0xef0e	              0xc9	                                   leave	     11257	option.c	FUNCTION_85
0xef0f	              0xc3	                                     ret	     11257	option.c	FUNCTION_85
get_term_code	WHILE,0:SWITCH,0:CALL,3:FOR,0:ELSE,0:DO,0:IF,3:functions,0	51
0xb427	              0x55	                                push rbp	      9731	option.c	FUNCTION_58
0xb428	          0x4889e5	                            mov rbp, rsp	      9731	option.c	FUNCTION_58
0xb42b	        0x4883ec20	                           sub rsp, 0x20	      9731	option.c	FUNCTION_58
0xb42f	        0x48897de8	             mov qword [rbp - 0x18], rdi	      9731	option.c	FUNCTION_58
0xb433	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9735	option.c	FUNCTION_58	IF_1
0xb437	           0xfb600	                   movzx eax, byte [rax]	      9735	option.c	FUNCTION_58	IF_1
0xb43a	            0x3c74	                            cmp al, 0x74	      9735	option.c	FUNCTION_58	IF_1
0xb43c	            0x752d	                           jne 0x400b4ab	      9735	option.c	FUNCTION_58	IF_1
0xb43e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9735	option.c	FUNCTION_58	IF_1
0xb442	        0x4883c001	                              add rax, 1	      9735	option.c	FUNCTION_58	IF_1
0xb446	           0xfb600	                   movzx eax, byte [rax]	      9735	option.c	FUNCTION_58	IF_1
0xb449	            0x3c5f	                            cmp al, 0x5f	      9735	option.c	FUNCTION_58	IF_1
0xb44b	            0x751e	                           jne 0x400b4ab	      9735	option.c	FUNCTION_58	IF_1
0xb44d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9736	option.c	FUNCTION_58	IF_1
0xb451	        0x4883c002	                              add rax, 2	      9736	option.c	FUNCTION_58	IF_1
0xb455	           0xfb600	                   movzx eax, byte [rax]	      9736	option.c	FUNCTION_58	IF_1
0xb458	            0x84c0	                             test al, al	      9735	option.c	FUNCTION_58	IF_1
0xb45a	            0x740f	                            je 0x400b4ab	      9735	option.c	FUNCTION_58	IF_1
0xb45c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9736	option.c	FUNCTION_58	IF_1
0xb460	        0x4883c003	                              add rax, 3	      9736	option.c	FUNCTION_58	IF_1
0xb464	           0xfb600	                   movzx eax, byte [rax]	      9736	option.c	FUNCTION_58	IF_1
0xb467	            0x84c0	                             test al, al	      9736	option.c	FUNCTION_58	IF_1
0xb469	            0x7507	                           jne 0x400b4b2	      9736	option.c	FUNCTION_58	IF_1
0xb46b	      0xb800000000	                              mov eax, 0	      9737	option.c	FUNCTION_58	IF_1
0xb470	            0xeb58	                           jmp 0x400b50a	      9737	option.c	FUNCTION_58	IF_1
0xb472	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9738	option.c	FUNCTION_58	IF_2	CALL_1
0xb476	          0x4889c7	                            mov rdi, rax	      9738	option.c	FUNCTION_58	IF_2	CALL_1
0xb479	      0xe808f9ffff	                     call sym.findoption	      9738	option.c	FUNCTION_58	IF_2	CALL_1
0xb47e	          0x8945f4	              mov dword [rbp - 0xc], eax	      9738	option.c	FUNCTION_58	IF_2	CALL_1
0xb481	        0x837df400	                cmp dword [rbp - 0xc], 0	      9738	option.c	FUNCTION_58	IF_2	CALL_1
0xb485	            0x7833	                            js 0x400b4fa	      9738	option.c	FUNCTION_58	IF_2	CALL_1
0xb487	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      9740	option.c	FUNCTION_58	IF_2	CALL_2
0xb48a	            0x4898	                                    cdqe	      9740	option.c	FUNCTION_58	IF_2	CALL_2
0xb48c	        0x48c1e006	                              shl rax, 6	      9740	option.c	FUNCTION_58	IF_2	CALL_2
0xb490	    0x480500000000	                              add rax, 0	      9740	option.c	FUNCTION_58	IF_2	CALL_2
0xb496	          0x4889c7	                            mov rdi, rax	      9740	option.c	FUNCTION_58	IF_2	CALL_2
0xb499	      0xe8a1180000	                       call sym.get_varp	      9740	option.c	FUNCTION_58	IF_2	CALL_2
0xb49e	        0x488945f8	                mov qword [rbp - 8], rax	      9740	option.c	FUNCTION_58	IF_2	CALL_2
0xb4a2	      0x48837df800	                  cmp qword [rbp - 8], 0	      9741	option.c	FUNCTION_58	IF_2	IF_3
0xb4a7	            0x740b	                            je 0x400b4f4	      9741	option.c	FUNCTION_58	IF_2	IF_3
0xb4a9	        0x488b45f8	                mov rax, qword [rbp - 8]	      9742	option.c	FUNCTION_58	IF_2	IF_3
0xb4ad	          0x488b00	                    mov rax, qword [rax]	      9742	option.c	FUNCTION_58	IF_2	IF_3
0xb4b0	        0x488945f8	                mov qword [rbp - 8], rax	      9742	option.c	FUNCTION_58	IF_2	IF_3
0xb4b4	        0x488b45f8	                mov rax, qword [rbp - 8]	      9743	option.c	FUNCTION_58	IF_2
0xb4b8	            0xeb10	                           jmp 0x400b50a	      9743	option.c	FUNCTION_58	IF_2
0xb4ba	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9745	option.c	FUNCTION_58	CALL_3
0xb4be	        0x4883c002	                              add rax, 2	      9745	option.c	FUNCTION_58	CALL_3
0xb4c2	          0x4889c7	                            mov rdi, rax	      9745	option.c	FUNCTION_58	CALL_3
0xb4c5	      0xe800000000	                          call 0x400b50a	      9745	option.c	FUNCTION_58	CALL_3
0xb4ca	              0xc9	                                   leave	      9746	option.c	FUNCTION_58
0xb4cb	              0xc3	                                     ret	      9746	option.c	FUNCTION_58
option_was_set	WHILE,0:SWITCH,0:CALL,1:FOR,0:ELSE,0:DO,0:IF,2:functions,0	25
0x10933	              0x55	                                push rbp	     12217	option.c	FUNCTION_103
0x10934	          0x4889e5	                            mov rbp, rsp	     12217	option.c	FUNCTION_103
0x10937	        0x4883ec20	                           sub rsp, 0x20	     12217	option.c	FUNCTION_103
0x1093b	        0x48897de8	             mov qword [rbp - 0x18], rdi	     12217	option.c	FUNCTION_103
0x1093f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12220	option.c	FUNCTION_103	CALL_1
0x10943	          0x4889c7	                            mov rdi, rax	     12220	option.c	FUNCTION_103	CALL_1
0x10946	      0xe83ba4ffff	                     call sym.findoption	     12220	option.c	FUNCTION_103	CALL_1
0x1094b	          0x8945fc	                mov dword [rbp - 4], eax	     12220	option.c	FUNCTION_103	CALL_1
0x1094e	        0x837dfc00	                  cmp dword [rbp - 4], 0	     12221	option.c	FUNCTION_103	IF_1
0x10952	            0x7907	                           jns 0x401099b	     12221	option.c	FUNCTION_103	IF_1
0x10954	      0xb800000000	                              mov eax, 0	     12222	option.c	FUNCTION_103	IF_1
0x10959	            0xeb28	                           jmp 0x40109c3	     12222	option.c	FUNCTION_103	IF_1
0x1095b	          0x8b45fc	                mov eax, dword [rbp - 4]	     12223	option.c	FUNCTION_103	IF_2
0x1095e	            0x4898	                                    cdqe	     12223	option.c	FUNCTION_103	IF_2
0x10960	        0x48c1e006	                              shl rax, 6	     12223	option.c	FUNCTION_103	IF_2
0x10964	    0x480500000000	                              add rax, 0	     12223	option.c	FUNCTION_103	IF_2
0x1096a	          0x488b00	                    mov rax, qword [rax]	     12223	option.c	FUNCTION_103	IF_2
0x1096d	      0x2500010000	                          and eax, 0x100	     12223	option.c	FUNCTION_103	IF_2
0x10972	          0x4885c0	                           test rax, rax	     12223	option.c	FUNCTION_103	IF_2
0x10975	            0x7407	                            je 0x40109be	     12223	option.c	FUNCTION_103	IF_2
0x10977	      0xb801000000	                              mov eax, 1	     12224	option.c	FUNCTION_103	IF_2
0x1097c	            0xeb05	                           jmp 0x40109c3	     12224	option.c	FUNCTION_103	IF_2
0x1097e	      0xb800000000	                              mov eax, 0	     12225	option.c	FUNCTION_103
0x10983	              0xc9	                                   leave	     12226	option.c	FUNCTION_103
0x10984	              0xc3	                                     ret	     12226	option.c	FUNCTION_103
string_to_key	WHILE,0:SWITCH,0:CALL,3:FOR,0:ELSE,0:DO,0:IF,3:functions,0	60
0x39c0	              0x55	                                push rbp	      5300	option.c	FUNCTION_19
0x39c1	          0x4889e5	                            mov rbp, rsp	      5300	option.c	FUNCTION_19
0x39c4	        0x4883ec10	                           sub rsp, 0x10	      5300	option.c	FUNCTION_19
0x39c8	        0x48897df8	                mov qword [rbp - 8], rdi	      5300	option.c	FUNCTION_19
0x39cc	          0x8975f4	              mov dword [rbp - 0xc], esi	      5300	option.c	FUNCTION_19
0x39cf	        0x488b45f8	                mov rax, qword [rbp - 8]	      5301	option.c	FUNCTION_19	IF_1
0x39d3	           0xfb600	                   movzx eax, byte [rax]	      5301	option.c	FUNCTION_19	IF_1
0x39d6	            0x3c3c	                            cmp al, 0x3c	      5301	option.c	FUNCTION_19	IF_1
0x39d8	            0x7515	                           jne 0x4003a2f	      5301	option.c	FUNCTION_19	IF_1
0x39da	        0x488b45f8	                mov rax, qword [rbp - 8]	      5302	option.c	FUNCTION_19	CALL_1
0x39de	        0x4883c001	                              add rax, 1	      5302	option.c	FUNCTION_19	CALL_1
0x39e2	          0x4889c7	                            mov rdi, rax	      5302	option.c	FUNCTION_19	CALL_1
0x39e5	      0xe84e7b0000	                call sym.find_key_option	      5302	option.c	FUNCTION_19	CALL_1
0x39ea	      0xe98a000000	                           jmp 0x4003ab9	      5302	option.c	FUNCTION_19	CALL_1
0x39ef	        0x488b45f8	                mov rax, qword [rbp - 8]	      5303	option.c	FUNCTION_19	IF_2
0x39f3	           0xfb600	                   movzx eax, byte [rax]	      5303	option.c	FUNCTION_19	IF_2
0x39f6	            0x3c5e	                            cmp al, 0x5e	      5303	option.c	FUNCTION_19	IF_2
0x39f8	            0x7547	                           jne 0x4003a81	      5303	option.c	FUNCTION_19	IF_2
0x39fa	        0x488b45f8	                mov rax, qword [rbp - 8]	      5304	option.c	FUNCTION_19	CALL_2
0x39fe	        0x4883c001	                              add rax, 1	      5304	option.c	FUNCTION_19	CALL_2
0x3a02	           0xfb600	                   movzx eax, byte [rax]	      5304	option.c	FUNCTION_19	CALL_2
0x3a05	            0x3c60	                            cmp al, 0x60	      5304	option.c	FUNCTION_19	CALL_2
0x3a07	            0x760f	                           jbe 0x4003a58	      5304	option.c	FUNCTION_19	CALL_2
0x3a09	        0x488b45f8	                mov rax, qword [rbp - 8]	      5304	option.c	FUNCTION_19	CALL_2
0x3a0d	        0x4883c001	                              add rax, 1	      5304	option.c	FUNCTION_19	CALL_2
0x3a11	           0xfb600	                   movzx eax, byte [rax]	      5304	option.c	FUNCTION_19	CALL_2
0x3a14	            0x3c7a	                            cmp al, 0x7a	      5304	option.c	FUNCTION_19	CALL_2
0x3a16	            0x7613	                           jbe 0x4003a6b	      5304	option.c	FUNCTION_19	CALL_2
0x3a18	        0x488b45f8	                mov rax, qword [rbp - 8]	      5304	option.c	FUNCTION_19	CALL_2
0x3a1c	        0x4883c001	                              add rax, 1	      5304	option.c	FUNCTION_19	CALL_2
0x3a20	           0xfb600	                   movzx eax, byte [rax]	      5304	option.c	FUNCTION_19	CALL_2
0x3a23	          0x83f040	                           xor eax, 0x40	      5304	option.c	FUNCTION_19	CALL_2
0x3a26	           0xfb6c0	                           movzx eax, al	      5304	option.c	FUNCTION_19	CALL_2
0x3a29	            0xeb4e	                           jmp 0x4003ab9	      5304	option.c	FUNCTION_19	CALL_2
0x3a2b	        0x488b45f8	                mov rax, qword [rbp - 8]	      5304	option.c	FUNCTION_19	CALL_2
0x3a2f	        0x4883c001	                              add rax, 1	      5304	option.c	FUNCTION_19	CALL_2
0x3a33	           0xfb600	                   movzx eax, byte [rax]	      5304	option.c	FUNCTION_19	CALL_2
0x3a36	           0xfb6c0	                           movzx eax, al	      5304	option.c	FUNCTION_19	CALL_2
0x3a39	          0x83e820	                           sub eax, 0x20	      5304	option.c	FUNCTION_19	CALL_2
0x3a3c	          0x83f040	                           xor eax, 0x40	      5304	option.c	FUNCTION_19	CALL_2
0x3a3f	            0xeb38	                           jmp 0x4003ab9	      5304	option.c	FUNCTION_19	CALL_2
0x3a41	        0x837df400	                cmp dword [rbp - 0xc], 0	      5305	option.c	FUNCTION_19	IF_3
0x3a45	            0x7428	                            je 0x4003aaf	      5305	option.c	FUNCTION_19	IF_3
0x3a47	    0x8b0500000000	            mov eax, dword [0x04003a8d] 	      5306	option.c	FUNCTION_19	CALL_3
0x3a4d	            0x85c0	                           test eax, eax	      5306	option.c	FUNCTION_19	CALL_3
0x3a4f	            0x7412	                            je 0x4003aa3	      5306	option.c	FUNCTION_19	CALL_3
0x3a51	    0x488b05000000	            mov rax, qword [0x04003a98] 	      5306	option.c	FUNCTION_19	CALL_3
0x3a58	        0x488b55f8	                mov rdx, qword [rbp - 8]	      5306	option.c	FUNCTION_19	CALL_3
0x3a5c	          0x4889d7	                            mov rdi, rdx	      5306	option.c	FUNCTION_19	CALL_3
0x3a5f	            0xffd0	                                call rax	      5306	option.c	FUNCTION_19	CALL_3
0x3a61	            0xeb16	                           jmp 0x4003ab9	      5306	option.c	FUNCTION_19	CALL_3
0x3a63	        0x488b45f8	                mov rax, qword [rbp - 8]	      5306	option.c	FUNCTION_19	CALL_3
0x3a67	           0xfb600	                   movzx eax, byte [rax]	      5306	option.c	FUNCTION_19	CALL_3
0x3a6a	           0xfb6c0	                           movzx eax, al	      5306	option.c	FUNCTION_19	CALL_3
0x3a6d	            0xeb0a	                           jmp 0x4003ab9	      5306	option.c	FUNCTION_19	CALL_3
0x3a6f	        0x488b45f8	                mov rax, qword [rbp - 8]	      5307	option.c	FUNCTION_19
0x3a73	           0xfb600	                   movzx eax, byte [rax]	      5307	option.c	FUNCTION_19
0x3a76	           0xfb6c0	                           movzx eax, al	      5307	option.c	FUNCTION_19
0x3a79	              0xc9	                                   leave	      5308	option.c	FUNCTION_19
0x3a7a	              0xc3	                                     ret	      5308	option.c	FUNCTION_19
set_options_bin	WHILE,0:SWITCH,0:CALL,0:FOR,0:ELSE,1:DO,0:IF,9:functions,0	100
0x3b27	              0x55	                                push rbp	      5373	option.c	FUNCTION_22
0x3b28	          0x4889e5	                            mov rbp, rsp	      5373	option.c	FUNCTION_22
0x3b2b	          0x897dfc	                mov dword [rbp - 4], edi	      5373	option.c	FUNCTION_22
0x3b2e	          0x8975f8	                mov dword [rbp - 8], esi	      5373	option.c	FUNCTION_22
0x3b31	          0x8955f4	              mov dword [rbp - 0xc], edx	      5373	option.c	FUNCTION_22
0x3b34	        0x837df800	                  cmp dword [rbp - 8], 0	      5378	option.c	FUNCTION_22	IF_1
0x3b38	     0xf8455010000	                            je 0x4003cd3	      5378	option.c	FUNCTION_22	IF_1
0x3b3e	        0x837dfc00	                  cmp dword [rbp - 4], 0	      5380	option.c	FUNCTION_22	IF_1	IF_2
0x3b42	     0xf85b4000000	                           jne 0x4003c3c	      5380	option.c	FUNCTION_22	IF_1	IF_2
0x3b48	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      5382	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x3b4b	          0x83e002	                              and eax, 2	      5382	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x3b4e	            0x85c0	                           test eax, eax	      5382	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x3b50	            0x756c	                           jne 0x4003bfe	      5382	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x3b52	    0x488b05000000	            mov rax, qword [0x04003b99] 	      5384	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x3b59	    0x488b15000000	            mov rdx, qword [0x04003ba0] 	      5384	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x3b60	    0x488b92a01500	          mov rdx, qword [rdx + 0x15a0] 	      5384	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x3b67	    0x488990a81500	          mov qword [rax + 0x15a8], rdx 	      5384	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x3b6e	    0x488b05000000	            mov rax, qword [0x04003bb5] 	      5385	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x3b75	    0x488b15000000	            mov rdx, qword [0x04003bbc] 	      5385	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x3b7c	    0x488b92b81500	          mov rdx, qword [rdx + 0x15b8] 	      5385	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x3b83	    0x488990c01500	          mov qword [rax + 0x15c0], rdx 	      5385	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x3b8a	    0x488b05000000	            mov rax, qword [0x04003bd1] 	      5386	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x3b91	    0x488b15000000	            mov rdx, qword [0x04003bd8] 	      5386	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x3b98	    0x8b9220150000	          mov edx, dword [rdx + 0x1520] 	      5386	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x3b9e	    0x899024150000	          mov dword [rax + 0x1524], edx 	      5386	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x3ba4	    0x488b05000000	            mov rax, qword [0x04003beb] 	      5387	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x3bab	    0x488b15000000	            mov rdx, qword [0x04003bf2] 	      5387	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x3bb2	    0x8b9260140000	          mov edx, dword [rdx + 0x1460] 	      5387	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x3bb8	    0x899064140000	          mov dword [rax + 0x1464], edx 	      5387	option.c	FUNCTION_22	IF_1	IF_2	IF_3
0x3bbe	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      5389	option.c	FUNCTION_22	IF_1	IF_2	IF_4
0x3bc1	          0x83e004	                              and eax, 4	      5389	option.c	FUNCTION_22	IF_1	IF_2	IF_4
0x3bc4	            0x85c0	                           test eax, eax	      5389	option.c	FUNCTION_22	IF_1	IF_2	IF_4
0x3bc6	            0x7534	                           jne 0x4003c3c	      5389	option.c	FUNCTION_22	IF_1	IF_2	IF_4
0x3bc8	    0x488b05000000	            mov rax, qword [0x04003c0f] 	      5391	option.c	FUNCTION_22	IF_1	IF_2	IF_4
0x3bcf	    0x488905000000	            mov qword [0x04003c16], rax 	      5391	option.c	FUNCTION_22	IF_1	IF_2	IF_4
0x3bd6	    0x488b05000000	            mov rax, qword [0x04003c1d] 	      5392	option.c	FUNCTION_22	IF_1	IF_2	IF_4
0x3bdd	    0x488905000000	            mov qword [0x04003c24], rax 	      5392	option.c	FUNCTION_22	IF_1	IF_2	IF_4
0x3be4	    0x8b0500000000	            mov eax, dword [0x04003c2a] 	      5393	option.c	FUNCTION_22	IF_1	IF_2	IF_4
0x3bea	    0x890500000000	            mov dword [0x04003c30], eax 	      5393	option.c	FUNCTION_22	IF_1	IF_2	IF_4
0x3bf0	    0x8b0500000000	            mov eax, dword [0x04003c36] 	      5394	option.c	FUNCTION_22	IF_1	IF_2	IF_4
0x3bf6	    0x890500000000	            mov dword [0x04003c3c], eax 	      5394	option.c	FUNCTION_22	IF_1	IF_2	IF_4
0x3bfc	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      5398	option.c	FUNCTION_22	IF_1	IF_5
0x3bff	          0x83e002	                              and eax, 2	      5398	option.c	FUNCTION_22	IF_1	IF_5
0x3c02	            0x85c0	                           test eax, eax	      5398	option.c	FUNCTION_22	IF_1	IF_5
0x3c04	            0x7546	                           jne 0x4003c8c	      5398	option.c	FUNCTION_22	IF_1	IF_5
0x3c06	    0x488b05000000	            mov rax, qword [0x04003c4d] 	      5400	option.c	FUNCTION_22	IF_1	IF_5
0x3c0d	    0x48c780a01500	            mov qword [rax + 0x15a0], 0 	      5400	option.c	FUNCTION_22	IF_1	IF_5
0x3c18	    0x488b05000000	            mov rax, qword [0x04003c5f] 	      5401	option.c	FUNCTION_22	IF_1	IF_5
0x3c1f	    0x48c780b81500	            mov qword [rax + 0x15b8], 0 	      5401	option.c	FUNCTION_22	IF_1	IF_5
0x3c2a	    0x488b05000000	            mov rax, qword [0x04003c71] 	      5402	option.c	FUNCTION_22	IF_1	IF_5
0x3c31	    0xc78020150000	            mov dword [rax + 0x1520], 0 	      5402	option.c	FUNCTION_22	IF_1	IF_5
0x3c3b	    0x488b05000000	            mov rax, qword [0x04003c82] 	      5403	option.c	FUNCTION_22	IF_1	IF_5
0x3c42	    0xc78060140000	            mov dword [rax + 0x1460], 0 	      5403	option.c	FUNCTION_22	IF_1	IF_5
0x3c4c	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      5405	option.c	FUNCTION_22	IF_1	IF_6
0x3c4f	          0x83e004	                              and eax, 4	      5405	option.c	FUNCTION_22	IF_1	IF_6
0x3c52	            0x85c0	                           test eax, eax	      5405	option.c	FUNCTION_22	IF_1	IF_6
0x3c54	     0xf85f7000000	                           jne 0x4003d91	      5405	option.c	FUNCTION_22	IF_1	IF_6
0x3c5a	    0x48c705000000	               mov qword [0x04003ca5], 0	      5407	option.c	FUNCTION_22	IF_1	IF_6
0x3c65	    0x48c705000000	               mov qword [0x04003cb0], 0	      5408	option.c	FUNCTION_22	IF_1	IF_6
0x3c70	    0xc70500000000	               mov dword [0x04003cba], 0	      5409	option.c	FUNCTION_22	IF_1	IF_6
0x3c7a	    0xc70500000000	               mov dword [0x04003cc4], 0	      5410	option.c	FUNCTION_22	IF_1	IF_6
0x3c84	    0xc70500000000	               mov dword [0x04003cce], 1	      5411	option.c	FUNCTION_22	IF_1	IF_6
0x3c8e	      0xe9be000000	                           jmp 0x4003d91	      5431	option.c	FUNCTION_22
0x3c93	        0x837dfc00	                  cmp dword [rbp - 4], 0	      5414	option.c	FUNCTION_22	ELSE_1	IF_7
0x3c97	     0xf84b4000000	                            je 0x4003d91	      5414	option.c	FUNCTION_22	ELSE_1	IF_7
0x3c9d	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      5416	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x3ca0	          0x83e002	                              and eax, 2	      5416	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x3ca3	            0x85c0	                           test eax, eax	      5416	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x3ca5	            0x756c	                           jne 0x4003d53	      5416	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x3ca7	    0x488b05000000	            mov rax, qword [0x04003cee] 	      5418	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x3cae	    0x488b15000000	            mov rdx, qword [0x04003cf5] 	      5418	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x3cb5	    0x488b92a81500	          mov rdx, qword [rdx + 0x15a8] 	      5418	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x3cbc	    0x488990a01500	          mov qword [rax + 0x15a0], rdx 	      5418	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x3cc3	    0x488b05000000	            mov rax, qword [0x04003d0a] 	      5419	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x3cca	    0x488b15000000	            mov rdx, qword [0x04003d11] 	      5419	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x3cd1	    0x488b92c01500	          mov rdx, qword [rdx + 0x15c0] 	      5419	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x3cd8	    0x488990b81500	          mov qword [rax + 0x15b8], rdx 	      5419	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x3cdf	    0x488b05000000	            mov rax, qword [0x04003d26] 	      5420	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x3ce6	    0x488b15000000	            mov rdx, qword [0x04003d2d] 	      5420	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x3ced	    0x8b9224150000	          mov edx, dword [rdx + 0x1524] 	      5420	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x3cf3	    0x899020150000	          mov dword [rax + 0x1520], edx 	      5420	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x3cf9	    0x488b05000000	            mov rax, qword [0x04003d40] 	      5421	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x3d00	    0x488b15000000	            mov rdx, qword [0x04003d47] 	      5421	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x3d07	    0x8b9264140000	          mov edx, dword [rdx + 0x1464] 	      5421	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x3d0d	    0x899060140000	          mov dword [rax + 0x1460], edx 	      5421	option.c	FUNCTION_22	ELSE_1	IF_7	IF_8
0x3d13	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      5423	option.c	FUNCTION_22	ELSE_1	IF_7	IF_9
0x3d16	          0x83e004	                              and eax, 4	      5423	option.c	FUNCTION_22	ELSE_1	IF_7	IF_9
0x3d19	            0x85c0	                           test eax, eax	      5423	option.c	FUNCTION_22	ELSE_1	IF_7	IF_9
0x3d1b	            0x7534	                           jne 0x4003d91	      5423	option.c	FUNCTION_22	ELSE_1	IF_7	IF_9
0x3d1d	    0x488b05000000	            mov rax, qword [0x04003d64] 	      5425	option.c	FUNCTION_22	ELSE_1	IF_7	IF_9
0x3d24	    0x488905000000	            mov qword [0x04003d6b], rax 	      5425	option.c	FUNCTION_22	ELSE_1	IF_7	IF_9
0x3d2b	    0x488b05000000	            mov rax, qword [0x04003d72] 	      5426	option.c	FUNCTION_22	ELSE_1	IF_7	IF_9
0x3d32	    0x488905000000	            mov qword [0x04003d79], rax 	      5426	option.c	FUNCTION_22	ELSE_1	IF_7	IF_9
0x3d39	    0x8b0500000000	            mov eax, dword [0x04003d7f] 	      5427	option.c	FUNCTION_22	ELSE_1	IF_7	IF_9
0x3d3f	    0x890500000000	            mov dword [0x04003d85], eax 	      5427	option.c	FUNCTION_22	ELSE_1	IF_7	IF_9
0x3d45	    0x8b0500000000	            mov eax, dword [0x04003d8b] 	      5428	option.c	FUNCTION_22	ELSE_1	IF_7	IF_9
0x3d4b	    0x890500000000	            mov dword [0x04003d91], eax 	      5428	option.c	FUNCTION_22	ELSE_1	IF_7	IF_9
0x3d51	              0x90	                                     nop	      5431	option.c	FUNCTION_22
0x3d52	              0x5d	                                 pop rbp	      5431	option.c	FUNCTION_22
0x3d53	              0xc3	                                     ret	      5431	option.c	FUNCTION_22
check_ff_value	WHILE,0:SWITCH,0:CALL,1:FOR,0:ELSE,0:DO,0:IF,0:functions,0	11
0x110e3	              0x55	                                push rbp	     12477	option.c	FUNCTION_113
0x110e4	          0x4889e5	                            mov rbp, rsp	     12477	option.c	FUNCTION_113
0x110e7	        0x4883ec10	                           sub rsp, 0x10	     12477	option.c	FUNCTION_113
0x110eb	        0x48897df8	                mov qword [rbp - 8], rdi	     12477	option.c	FUNCTION_113
0x110ef	        0x488b45f8	                mov rax, qword [rbp - 8]	     12478	option.c	FUNCTION_113	CALL_1
0x110f3	      0xba00000000	                              mov edx, 0	     12478	option.c	FUNCTION_113	CALL_1
0x110f8	      0xbe00000000	                              mov esi, 0	     12478	option.c	FUNCTION_113	CALL_1
0x110fd	          0x4889c7	                            mov rdi, rax	     12478	option.c	FUNCTION_113	CALL_1
0x11100	      0xe8d1f9ffff	              call sym.check_opt_strings	     12478	option.c	FUNCTION_113	CALL_1
0x11105	              0xc9	                                   leave	     12479	option.c	FUNCTION_113
0x11106	              0xc3	                                     ret	     12479	option.c	FUNCTION_113
get_sts_value	WHILE,0:SWITCH,0:CALL,1:FOR,0:ELSE,0:DO,0:IF,0:functions,0	14
0x11139	              0x55	                                push rbp	     12497	option.c	FUNCTION_115
0x1113a	          0x4889e5	                            mov rbp, rsp	     12497	option.c	FUNCTION_115
0x1113d	    0x488b05000000	            mov rax, qword [0x04011184] 	     12498	option.c	FUNCTION_115	CALL_1
0x11144	    0x488b80601500	          mov rax, qword [rax + 0x1560] 	     12498	option.c	FUNCTION_115	CALL_1
0x1114b	          0x4885c0	                           test rax, rax	     12498	option.c	FUNCTION_115	CALL_1
0x1114e	            0x7911	                           jns 0x40111a1	     12498	option.c	FUNCTION_115	CALL_1
0x11150	    0x488b05000000	            mov rax, qword [0x04011197] 	     12498	option.c	FUNCTION_115	CALL_1
0x11157	          0x4889c7	                            mov rdi, rax	     12498	option.c	FUNCTION_115	CALL_1
0x1115a	      0xe800000000	                          call 0x401119f	     12498	option.c	FUNCTION_115	CALL_1
0x1115f	            0xeb0e	                           jmp 0x40111af	     12498	option.c	FUNCTION_115	CALL_1
0x11161	    0x488b05000000	            mov rax, qword [0x040111a8] 	     12498	option.c	FUNCTION_115	CALL_1
0x11168	    0x488b80601500	          mov rax, qword [rax + 0x1560] 	     12498	option.c	FUNCTION_115	CALL_1
0x1116f	              0x5d	                                 pop rbp	     12499	option.c	FUNCTION_115
0x11170	              0xc3	                                     ret	     12499	option.c	FUNCTION_115
int_cmp	WHILE,0:SWITCH,0:CALL,0:FOR,0:ELSE,0:DO,0:IF,0:functions,0	12
0x7e3e	              0x55	                                push rbp	      7625	option.c	FUNCTION_42
0x7e3f	          0x4889e5	                            mov rbp, rsp	      7625	option.c	FUNCTION_42
0x7e42	        0x48897df8	                mov qword [rbp - 8], rdi	      7625	option.c	FUNCTION_42
0x7e46	        0x488975f0	             mov qword [rbp - 0x10], rsi	      7625	option.c	FUNCTION_42
0x7e4a	        0x488b45f8	                mov rax, qword [rbp - 8]	      7626	option.c	FUNCTION_42
0x7e4e	            0x8b10	                    mov edx, dword [rax]	      7626	option.c	FUNCTION_42
0x7e50	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7626	option.c	FUNCTION_42
0x7e54	            0x8b00	                    mov eax, dword [rax]	      7626	option.c	FUNCTION_42
0x7e56	            0x29c2	                            sub edx, eax	      7626	option.c	FUNCTION_42
0x7e58	            0x89d0	                            mov eax, edx	      7626	option.c	FUNCTION_42
0x7e5a	              0x5d	                                 pop rbp	      7627	option.c	FUNCTION_42
0x7e5b	              0xc3	                                     ret	      7627	option.c	FUNCTION_42
check_win_options	WHILE,0:SWITCH,0:CALL,2:FOR,0:ELSE,0:DO,0:IF,0:functions,0	15
0xe340	              0x55	                                push rbp	     10914	option.c	FUNCTION_82
0xe341	          0x4889e5	                            mov rbp, rsp	     10914	option.c	FUNCTION_82
0xe344	        0x4883ec10	                           sub rsp, 0x10	     10914	option.c	FUNCTION_82
0xe348	        0x48897df8	                mov qword [rbp - 8], rdi	     10914	option.c	FUNCTION_82
0xe34c	        0x488b45f8	                mov rax, qword [rbp - 8]	     10915	option.c	FUNCTION_82	CALL_1
0xe350	    0x4805b0010000	                          add rax, 0x1b0	     10915	option.c	FUNCTION_82	CALL_1
0xe356	          0x4889c7	                            mov rdi, rax	     10915	option.c	FUNCTION_82	CALL_1
0xe359	      0xe815000000	                   call sym.check_winopt	     10915	option.c	FUNCTION_82	CALL_1
0xe35e	        0x488b45f8	                mov rax, qword [rbp - 8]	     10916	option.c	FUNCTION_82	CALL_2
0xe362	    0x480568030000	                          add rax, 0x368	     10916	option.c	FUNCTION_82	CALL_2
0xe368	          0x4889c7	                            mov rdi, rax	     10916	option.c	FUNCTION_82	CALL_2
0xe36b	      0xe803000000	                   call sym.check_winopt	     10916	option.c	FUNCTION_82	CALL_2
0xe370	              0x90	                                     nop	     10917	option.c	FUNCTION_82
0xe371	              0xc9	                                   leave	     10917	option.c	FUNCTION_82
0xe372	              0xc3	                                     ret	     10917	option.c	FUNCTION_82
reset_option_was_set	WHILE,0:SWITCH,0:CALL,1:FOR,0:ELSE,0:DO,0:IF,1:functions,0	25
0x10985	              0x55	                                push rbp	     12233	option.c	FUNCTION_104
0x10986	          0x4889e5	                            mov rbp, rsp	     12233	option.c	FUNCTION_104
0x10989	        0x4883ec20	                           sub rsp, 0x20	     12233	option.c	FUNCTION_104
0x1098d	        0x48897de8	             mov qword [rbp - 0x18], rdi	     12233	option.c	FUNCTION_104
0x10991	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     12234	option.c	FUNCTION_104	CALL_1
0x10995	          0x4889c7	                            mov rdi, rax	     12234	option.c	FUNCTION_104	CALL_1
0x10998	      0xe8e9a3ffff	                     call sym.findoption	     12234	option.c	FUNCTION_104	CALL_1
0x1099d	          0x8945fc	                mov dword [rbp - 4], eax	     12234	option.c	FUNCTION_104	CALL_1
0x109a0	        0x837dfc00	                  cmp dword [rbp - 4], 0	     12236	option.c	FUNCTION_104	IF_1
0x109a4	            0x782a	                            js 0x4010a10	     12236	option.c	FUNCTION_104	IF_1
0x109a6	          0x8b45fc	                mov eax, dword [rbp - 4]	     12237	option.c	FUNCTION_104	IF_1
0x109a9	            0x4898	                                    cdqe	     12237	option.c	FUNCTION_104	IF_1
0x109ab	        0x48c1e006	                              shl rax, 6	     12237	option.c	FUNCTION_104	IF_1
0x109af	    0x480500000000	                              add rax, 0	     12237	option.c	FUNCTION_104	IF_1
0x109b5	          0x488b00	                    mov rax, qword [rax]	     12237	option.c	FUNCTION_104	IF_1
0x109b8	          0x80e4fe	                            and ah, 0xfe	     12237	option.c	FUNCTION_104	IF_1
0x109bb	          0x4889c2	                            mov rdx, rax	     12237	option.c	FUNCTION_104	IF_1
0x109be	          0x8b45fc	                mov eax, dword [rbp - 4]	     12237	option.c	FUNCTION_104	IF_1
0x109c1	            0x4898	                                    cdqe	     12237	option.c	FUNCTION_104	IF_1
0x109c3	        0x48c1e006	                              shl rax, 6	     12237	option.c	FUNCTION_104	IF_1
0x109c7	    0x480500000000	                              add rax, 0	     12237	option.c	FUNCTION_104	IF_1
0x109cd	          0x488910	                    mov qword [rax], rdx	     12237	option.c	FUNCTION_104	IF_1
0x109d0	              0x90	                                     nop	     12238	option.c	FUNCTION_104
0x109d1	              0xc9	                                   leave	     12238	option.c	FUNCTION_104
0x109d2	              0xc3	                                     ret	     12238	option.c	FUNCTION_104
was_set_insecurely	WHILE,0:SWITCH,0:CALL,3:FOR,0:ELSE,0:DO,0:IF,1:functions,0	29
0x45de	              0x55	                                push rbp	      5766	option.c	FUNCTION_34
0x45df	          0x4889e5	                            mov rbp, rsp	      5766	option.c	FUNCTION_34
0x45e2	        0x4883ec20	                           sub rsp, 0x20	      5766	option.c	FUNCTION_34
0x45e6	        0x48897de8	             mov qword [rbp - 0x18], rdi	      5766	option.c	FUNCTION_34
0x45ea	          0x8975e4	             mov dword [rbp - 0x1c], esi	      5766	option.c	FUNCTION_34
0x45ed	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5767	option.c	FUNCTION_34	CALL_1
0x45f1	          0x4889c7	                            mov rdi, rax	      5767	option.c	FUNCTION_34	CALL_1
0x45f4	      0xe88d670000	                     call sym.findoption	      5767	option.c	FUNCTION_34	CALL_1
0x45f9	          0x8945f4	              mov dword [rbp - 0xc], eax	      5767	option.c	FUNCTION_34	CALL_1
0x45fc	        0x837df400	                cmp dword [rbp - 0xc], 0	      5770	option.c	FUNCTION_34	IF_1
0x4600	            0x782a	                            js 0x400466c	      5770	option.c	FUNCTION_34	IF_1
0x4602	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      5772	option.c	FUNCTION_34	IF_1	CALL_2
0x4605	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      5772	option.c	FUNCTION_34	IF_1	CALL_2
0x4608	            0x89d6	                            mov esi, edx	      5772	option.c	FUNCTION_34	IF_1	CALL_2
0x460a	            0x89c7	                            mov edi, eax	      5772	option.c	FUNCTION_34	IF_1	CALL_2
0x460c	      0xe82c000000	                  call sym.insecure_flag	      5772	option.c	FUNCTION_34	IF_1	CALL_2
0x4611	        0x488945f8	                mov qword [rbp - 8], rax	      5772	option.c	FUNCTION_34	IF_1	CALL_2
0x4615	        0x488b45f8	                mov rax, qword [rbp - 8]	      5773	option.c	FUNCTION_34	IF_1
0x4619	          0x488b00	                    mov rax, qword [rax]	      5773	option.c	FUNCTION_34	IF_1
0x461c	      0x2500008000	                       and eax, 0x800000	      5773	option.c	FUNCTION_34	IF_1
0x4621	          0x4885c0	                           test rax, rax	      5773	option.c	FUNCTION_34	IF_1
0x4624	           0xf95c0	                                setne al	      5773	option.c	FUNCTION_34	IF_1
0x4627	           0xfb6c0	                           movzx eax, al	      5773	option.c	FUNCTION_34	IF_1
0x462a	            0xeb0f	                           jmp 0x400467b	      5773	option.c	FUNCTION_34	IF_1
0x462c	      0xbf00000000	                              mov edi, 0	      5775	option.c	FUNCTION_34	CALL_3
0x4631	      0xe800000000	                          call 0x4004676	      5775	option.c	FUNCTION_34	CALL_3
0x4636	      0xb8ffffffff	                     mov eax, 0xffffffff	      5776	option.c	FUNCTION_34
0x463b	              0xc9	                                   leave	      5777	option.c	FUNCTION_34
0x463c	              0xc3	                                     ret	      5777	option.c	FUNCTION_34
