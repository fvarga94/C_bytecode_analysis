vterm_parser_set_callbacks	DO,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:FOR,0:IF,0:CALL,0	14
0xc64	              0x55	                                push rbp	       338	parser.c	FUNCTION_10
0xc65	          0x4889e5	                            mov rbp, rsp	       338	parser.c	FUNCTION_10
0xc68	        0x48897df8	                mov qword [rbp - 8], rdi	       338	parser.c	FUNCTION_10
0xc6c	        0x488975f0	             mov qword [rbp - 0x10], rsi	       338	parser.c	FUNCTION_10
0xc70	        0x488955e8	             mov qword [rbp - 0x18], rdx	       338	parser.c	FUNCTION_10
0xc74	        0x488b45f8	                mov rax, qword [rbp - 8]	       339	parser.c	FUNCTION_10
0xc78	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       339	parser.c	FUNCTION_10
0xc7c	    0x488990d00000	             mov qword [rax + 0xd0], rdx	       339	parser.c	FUNCTION_10
0xc83	        0x488b45f8	                mov rax, qword [rbp - 8]	       340	parser.c	FUNCTION_10
0xc87	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       340	parser.c	FUNCTION_10
0xc8b	    0x488990d80000	             mov qword [rax + 0xd8], rdx	       340	parser.c	FUNCTION_10
0xc92	              0x90	                                     nop	       341	parser.c	FUNCTION_10
0xc93	              0x5d	                                 pop rbp	       341	parser.c	FUNCTION_10
0xc94	              0xc3	                                     ret	       341	parser.c	FUNCTION_10
vterm_input_write	DO,0:SWITCH,4:functions,0:ELSE,11:WHILE,0:FOR,1:IF,29:CALL,31	547
0x425	              0x55	                                push rbp	       126	parser.c	FUNCTION_9
0x426	          0x4889e5	                            mov rbp, rsp	       126	parser.c	FUNCTION_9
0x429	        0x4883ec40	                           sub rsp, 0x40	       126	parser.c	FUNCTION_9
0x42d	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       126	parser.c	FUNCTION_9
0x431	        0x488975d0	             mov qword [rbp - 0x30], rsi	       126	parser.c	FUNCTION_9
0x435	        0x488955c8	             mov qword [rbp - 0x38], rdx	       126	parser.c	FUNCTION_9
0x439	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       127	parser.c	FUNCTION_9
0x441	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       128	parser.c	FUNCTION_9
0x449	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       130	parser.c	FUNCTION_9	SWITCH_1
0x44d	          0x8b4020	            mov eax, dword [rax + 0x20] 	       130	parser.c	FUNCTION_9	SWITCH_1
0x450	          0x83f804	                              cmp eax, 4	       130	parser.c	FUNCTION_9	SWITCH_1
0x453	            0x760b	                           jbe 0x40004a0	       130	parser.c	FUNCTION_9	SWITCH_1
0x455	          0x83f806	                              cmp eax, 6	       130	parser.c	FUNCTION_9	SWITCH_1
0x458	     0xf87f2070000	                            ja 0x4000c90	       130	parser.c	FUNCTION_9	SWITCH_1
0x45e	            0xeb0a	                           jmp 0x40004aa	       130	parser.c	FUNCTION_9	SWITCH_1
0x460	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       136	parser.c	FUNCTION_9	SWITCH_1
0x468	            0xeb09	                           jmp 0x40004b3	       137	parser.c	FUNCTION_9	SWITCH_1
0x46a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       140	parser.c	FUNCTION_9	SWITCH_1
0x46e	        0x488945f0	             mov qword [rbp - 0x10], rax	       140	parser.c	FUNCTION_9	SWITCH_1
0x472	              0x90	                                     nop	       141	parser.c	FUNCTION_9	SWITCH_1
0x473	      0xe9d8070000	                           jmp 0x4000c90	       148	parser.c	FUNCTION_9	FOR_1
0x478	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       149	parser.c	FUNCTION_9	FOR_1
0x47c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       149	parser.c	FUNCTION_9	FOR_1
0x480	          0x4801d0	                            add rax, rdx	       149	parser.c	FUNCTION_9	FOR_1
0x483	           0xfb600	                   movzx eax, byte [rax]	       149	parser.c	FUNCTION_9	FOR_1
0x486	          0x8845e7	               mov byte [rbp - 0x19], al	       149	parser.c	FUNCTION_9	FOR_1
0x489	        0x807de700	                cmp byte [rbp - 0x19], 0	       151	parser.c	FUNCTION_9	FOR_1	IF_1
0x48d	            0x7406	                            je 0x40004d5	       151	parser.c	FUNCTION_9	FOR_1	IF_1
0x48f	        0x807de77f	            cmp byte [rbp - 0x19], 0x7f 	       151	parser.c	FUNCTION_9	FOR_1	IF_1
0x493	            0x7556	                           jne 0x400052b	       151	parser.c	FUNCTION_9	FOR_1	IF_1
0x495	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       152	parser.c	FUNCTION_9	FOR_1	IF_1	IF_2
0x499	          0x8b4020	            mov eax, dword [rax + 0x20] 	       152	parser.c	FUNCTION_9	FOR_1	IF_1	IF_2
0x49c	          0x83f804	                              cmp eax, 4	       152	parser.c	FUNCTION_9	FOR_1	IF_1	IF_2
0x49f	     0xf8696070000	                           jbe 0x4000c7b	       152	parser.c	FUNCTION_9	FOR_1	IF_1	IF_2
0x4a5	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       153	parser.c	FUNCTION_9	FOR_1	IF_1	IF_2	CALL_1
0x4a9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       153	parser.c	FUNCTION_9	FOR_1	IF_1	IF_2	CALL_1
0x4ad	          0x4801d0	                            add rax, rdx	       153	parser.c	FUNCTION_9	FOR_1	IF_1	IF_2	CALL_1
0x4b0	          0x4889c2	                            mov rdx, rax	       153	parser.c	FUNCTION_9	FOR_1	IF_1	IF_2	CALL_1
0x4b3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       153	parser.c	FUNCTION_9	FOR_1	IF_1	IF_2	CALL_1
0x4b7	          0x4829c2	                            sub rdx, rax	       153	parser.c	FUNCTION_9	FOR_1	IF_1	IF_2	CALL_1
0x4ba	          0x4889d0	                            mov rax, rdx	       153	parser.c	FUNCTION_9	FOR_1	IF_1	IF_2	CALL_1
0x4bd	          0x4889c2	                            mov rdx, rax	       153	parser.c	FUNCTION_9	FOR_1	IF_1	IF_2	CALL_1
0x4c0	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       153	parser.c	FUNCTION_9	FOR_1	IF_1	IF_2	CALL_1
0x4c4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       153	parser.c	FUNCTION_9	FOR_1	IF_1	IF_2	CALL_1
0x4c8	          0x4889ce	                            mov rsi, rcx	       153	parser.c	FUNCTION_9	FOR_1	IF_1	IF_2	CALL_1
0x4cb	          0x4889c7	                            mov rdi, rax	       153	parser.c	FUNCTION_9	FOR_1	IF_1	IF_2	CALL_1
0x4ce	      0xe8effdffff	                    call sym.more_string	       153	parser.c	FUNCTION_9	FOR_1	IF_1	IF_2	CALL_1
0x4d3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       154	parser.c	FUNCTION_9	FOR_1	IF_1	IF_2
0x4d7	        0x488d5001	                      lea rdx, [rax + 1]	       154	parser.c	FUNCTION_9	FOR_1	IF_1	IF_2
0x4db	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       154	parser.c	FUNCTION_9	FOR_1	IF_1	IF_2
0x4df	          0x4801d0	                            add rax, rdx	       154	parser.c	FUNCTION_9	FOR_1	IF_1	IF_2
0x4e2	        0x488945f0	             mov qword [rbp - 0x10], rax	       154	parser.c	FUNCTION_9	FOR_1	IF_1	IF_2
0x4e6	      0xe950070000	                           jmp 0x4000c7b	       156	parser.c	FUNCTION_9	FOR_1	IF_1
0x4eb	        0x807de718	            cmp byte [rbp - 0x19], 0x18 	       158	parser.c	FUNCTION_9	FOR_1	IF_3
0x4ef	            0x7406	                            je 0x4000537	       158	parser.c	FUNCTION_9	FOR_1	IF_3
0x4f1	        0x807de71a	            cmp byte [rbp - 0x19], 0x1a 	       158	parser.c	FUNCTION_9	FOR_1	IF_3
0x4f5	            0x7518	                           jne 0x400054f	       158	parser.c	FUNCTION_9	FOR_1	IF_3
0x4f7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       159	parser.c	FUNCTION_9	FOR_1	IF_3	CALL_2
0x4fb	    0xc74020000000	               mov dword [rax + 0x20], 0	       159	parser.c	FUNCTION_9	FOR_1	IF_3	CALL_2
0x502	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       159	parser.c	FUNCTION_9	FOR_1	IF_3	CALL_2
0x50a	      0xe93c070000	                           jmp 0x4000c8b	       160	parser.c	FUNCTION_9	FOR_1	IF_3
0x50f	        0x807de71b	            cmp byte [rbp - 0x19], 0x1b 	       162	parser.c	FUNCTION_9	FOR_1	ELSE_1	IF_4
0x513	            0x753f	                           jne 0x4000594	       162	parser.c	FUNCTION_9	FOR_1	ELSE_1	IF_4
0x515	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       163	parser.c	FUNCTION_9	FOR_1	ELSE_1	IF_4
0x519	    0xc74024000000	               mov dword [rax + 0x24], 0	       163	parser.c	FUNCTION_9	FOR_1	ELSE_1	IF_4
0x520	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       164	parser.c	FUNCTION_9	FOR_1	ELSE_1	IF_4	IF_5
0x524	          0x8b4020	            mov eax, dword [rax + 0x20] 	       164	parser.c	FUNCTION_9	FOR_1	ELSE_1	IF_4	IF_5
0x527	          0x83f805	                              cmp eax, 5	       164	parser.c	FUNCTION_9	FOR_1	ELSE_1	IF_4	IF_5
0x52a	            0x7510	                           jne 0x400057c	       164	parser.c	FUNCTION_9	FOR_1	ELSE_1	IF_4	IF_5
0x52c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       165	parser.c	FUNCTION_9	FOR_1	ELSE_1	IF_4	IF_5
0x530	    0xc74020060000	               mov dword [rax + 0x20], 6	       165	parser.c	FUNCTION_9	FOR_1	ELSE_1	IF_4	IF_5
0x537	      0xe90f070000	                           jmp 0x4000c8b	       168	parser.c	FUNCTION_9	FOR_1	ELSE_1	IF_4
0x53c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       167	parser.c	FUNCTION_9	FOR_1	ELSE_1	IF_4	CALL_3
0x540	    0xc74020040000	               mov dword [rax + 0x20], 4	       167	parser.c	FUNCTION_9	FOR_1	ELSE_1	IF_4	CALL_3
0x547	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       167	parser.c	FUNCTION_9	FOR_1	ELSE_1	IF_4	CALL_3
0x54f	      0xe9f7060000	                           jmp 0x4000c8b	       168	parser.c	FUNCTION_9	FOR_1	ELSE_1	IF_4
0x554	        0x807de707	                cmp byte [rbp - 0x19], 7	       170	parser.c	FUNCTION_9	FOR_1	ELSE_3	IF_6
0x558	            0x750c	                           jne 0x40005a6	       170	parser.c	FUNCTION_9	FOR_1	ELSE_3	IF_6
0x55a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       171	parser.c	FUNCTION_9	FOR_1	ELSE_3	IF_6
0x55e	          0x8b4020	            mov eax, dword [rax + 0x20] 	       171	parser.c	FUNCTION_9	FOR_1	ELSE_3	IF_6
0x561	          0x83f805	                              cmp eax, 5	       170	parser.c	FUNCTION_9	FOR_1	ELSE_3	IF_6
0x564	            0x747a	                            je 0x4000620	       170	parser.c	FUNCTION_9	FOR_1	ELSE_3	IF_6
0x566	        0x807de71f	            cmp byte [rbp - 0x19], 0x1f 	       174	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7
0x56a	            0x7774	                            ja 0x4000620	       174	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7
0x56c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       175	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	IF_8
0x570	          0x8b4020	            mov eax, dword [rax + 0x20] 	       175	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	IF_8
0x573	          0x83f804	                              cmp eax, 4	       175	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	IF_8
0x576	            0x762e	                           jbe 0x40005e6	       175	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	IF_8
0x578	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       176	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	CALL_4
0x57c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       176	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	CALL_4
0x580	          0x4801d0	                            add rax, rdx	       176	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	CALL_4
0x583	          0x4889c2	                            mov rdx, rax	       176	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	CALL_4
0x586	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       176	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	CALL_4
0x58a	          0x4829c2	                            sub rdx, rax	       176	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	CALL_4
0x58d	          0x4889d0	                            mov rax, rdx	       176	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	CALL_4
0x590	          0x4889c2	                            mov rdx, rax	       176	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	CALL_4
0x593	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       176	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	CALL_4
0x597	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       176	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	CALL_4
0x59b	          0x4889ce	                            mov rsi, rcx	       176	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	CALL_4
0x59e	          0x4889c7	                            mov rdi, rax	       176	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	CALL_4
0x5a1	      0xe81cfdffff	                    call sym.more_string	       176	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	CALL_4
0x5a6	         0xfb655e7	            movzx edx, byte [rbp - 0x19]	       177	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	CALL_5
0x5aa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       177	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	CALL_5
0x5ae	            0x89d6	                            mov esi, edx	       177	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	CALL_5
0x5b0	          0x4889c7	                            mov rdi, rax	       177	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	CALL_5
0x5b3	      0xe86bfaffff	                     call sym.do_control	       177	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	CALL_5
0x5b8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       178	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	IF_9
0x5bc	          0x8b4020	            mov eax, dword [rax + 0x20] 	       178	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	IF_9
0x5bf	          0x83f804	                              cmp eax, 4	       178	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	IF_9
0x5c2	     0xf8676060000	                           jbe 0x4000c7e	       178	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	IF_9
0x5c8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       179	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	IF_9
0x5cc	        0x488d5001	                      lea rdx, [rax + 1]	       179	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	IF_9
0x5d0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       179	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	IF_9
0x5d4	          0x4801d0	                            add rax, rdx	       179	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	IF_9
0x5d7	        0x488945f0	             mov qword [rbp - 0x10], rax	       179	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7	IF_9
0x5db	      0xe95e060000	                           jmp 0x4000c7e	       180	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7
0x5e0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       184	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x5e4	          0x8b4020	            mov eax, dword [rax + 0x20] 	       184	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x5e7	          0x83f806	                              cmp eax, 6	       184	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x5ea	     0xf875b060000	                            ja 0x4000c8b	       184	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x5f0	            0x89c0	                            mov eax, eax	       184	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x5f2	    0x488b04c50000	                  mov rax, qword [rax*8]	       184	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x5fa	            0xffe0	                                 jmp rax	       184	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x5fc	        0x807de75c	            cmp byte [rbp - 0x19], 0x5c 	       186	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_10
0x600	            0x7555	                           jne 0x4000697	       186	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_10
0x602	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       187	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_10
0x606	    0xc74020050000	               mov dword [rax + 0x20], 5	       187	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_10
0x60d	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       188	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_10	CALL_6
0x611	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       188	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_10	CALL_6
0x615	          0x4801d0	                            add rax, rdx	       188	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_10	CALL_6
0x618	          0x4889c2	                            mov rdx, rax	       188	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_10	CALL_6
0x61b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       188	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_10	CALL_6
0x61f	          0x4829c2	                            sub rdx, rax	       188	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_10	CALL_6
0x622	          0x4889d0	                            mov rax, rdx	       188	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_10	CALL_6
0x625	        0x4883e801	                              sub rax, 1	       188	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_10	CALL_6
0x629	          0x4889c2	                            mov rdx, rax	       188	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_10	CALL_6
0x62c	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       188	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_10	CALL_6
0x630	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       188	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_10	CALL_6
0x634	          0x4889ce	                            mov rsi, rcx	       188	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_10	CALL_6
0x637	          0x4889c7	                            mov rdi, rax	       188	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_10	CALL_6
0x63a	      0xe8b1fcffff	                    call sym.done_string	       188	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_10	CALL_6
0x63f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       189	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_10	CALL_7
0x643	    0xc74020000000	               mov dword [rax + 0x20], 0	       189	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_10	CALL_7
0x64a	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       189	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_10	CALL_7
0x652	      0xe9f4050000	                           jmp 0x4000c8b	       190	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_10
0x657	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       192	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x65b	    0xc74020040000	               mov dword [rax + 0x20], 4	       192	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x662	         0xfb645e7	            movzx eax, byte [rbp - 0x19]	       196	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3
0x666	          0x83f85b	                           cmp eax, 0x5b	       196	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3
0x669	            0x7442	                            je 0x40006ed	       196	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3
0x66b	          0x83f85d	                           cmp eax, 0x5d	       196	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3
0x66e	            0x7460	                            je 0x4000710	       196	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3
0x670	          0x83f850	                           cmp eax, 0x50	       196	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3
0x673	     0xf858b000000	                           jne 0x4000744	       196	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3
0x679	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       198	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	CALL_8
0x67d	      0xbe01000000	                              mov esi, 1	       198	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	CALL_8
0x682	          0x4889c7	                            mov rdi, rax	       198	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	CALL_8
0x685	      0xe80efcffff	                   call sym.start_string	       198	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	CALL_8
0x68a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       199	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	CALL_9
0x68e	    0xc74020050000	               mov dword [rax + 0x20], 5	       199	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	CALL_9
0x695	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       199	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	CALL_9
0x699	        0x488d5001	                      lea rdx, [rax + 1]	       199	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	CALL_9
0x69d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       199	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	CALL_9
0x6a1	          0x4801d0	                            add rax, rdx	       199	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	CALL_9
0x6a4	        0x488945f0	             mov qword [rbp - 0x10], rax	       199	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	CALL_9
0x6a8	      0xe91f010000	                           jmp 0x400080c	       200	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3
0x6ad	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       202	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3
0x6b1	    0xc74038000000	               mov dword [rax + 0x38], 0	       202	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3
0x6b8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       203	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	CALL_10
0x6bc	    0xc74020010000	               mov dword [rax + 0x20], 1	       203	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	CALL_10
0x6c3	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       203	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	CALL_10
0x6cb	      0xe9fc000000	                           jmp 0x400080c	       204	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3
0x6d0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       206	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	CALL_11
0x6d4	      0xbe00000000	                              mov esi, 0	       206	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	CALL_11
0x6d9	          0x4889c7	                            mov rdi, rax	       206	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	CALL_11
0x6dc	      0xe8b7fbffff	                   call sym.start_string	       206	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	CALL_11
0x6e1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       207	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	CALL_12
0x6e5	    0xc74020050000	               mov dword [rax + 0x20], 5	       207	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	CALL_12
0x6ec	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       207	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	CALL_12
0x6f0	        0x488d5001	                      lea rdx, [rax + 1]	       207	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	CALL_12
0x6f4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       207	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	CALL_12
0x6f8	          0x4801d0	                            add rax, rdx	       207	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	CALL_12
0x6fb	        0x488945f0	             mov qword [rbp - 0x10], rax	       207	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	CALL_12
0x6ff	      0xe9c8000000	                           jmp 0x400080c	       208	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3
0x704	         0xfb645e7	            movzx eax, byte [rbp - 0x19]	       210	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	IF_11	CALL_13
0x708	            0x89c7	                            mov edi, eax	       210	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	IF_11	CALL_13
0x70a	      0xe8f1f8ffff	                    call sym.is_intermed	       210	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	IF_11	CALL_13
0x70f	            0x85c0	                           test eax, eax	       210	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	IF_11	CALL_13
0x711	            0x7434	                            je 0x4000787	       210	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	IF_11	CALL_13
0x713	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       211	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	IF_11	IF_12
0x717	          0x8b4024	            mov eax, dword [rax + 0x24] 	       211	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	IF_11	IF_12
0x71a	          0x83f80e	                            cmp eax, 0xe	       211	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	IF_11	IF_12
0x71d	     0xf8f1e050000	                            jg 0x4000c81	       211	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	IF_11	IF_12
0x723	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       212	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	IF_11	IF_12
0x727	          0x8b4024	            mov eax, dword [rax + 0x24] 	       212	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	IF_11	IF_12
0x72a	          0x8d4801	                      lea ecx, [rax + 1]	       212	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	IF_11	IF_12
0x72d	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       212	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	IF_11	IF_12
0x731	          0x894a24	             mov dword [rdx + 0x24], ecx	       212	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	IF_11	IF_12
0x734	         0xfb64de7	            movzx ecx, byte [rbp - 0x19]	       212	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	IF_11	IF_12
0x738	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       212	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	IF_11	IF_12
0x73c	            0x4898	                                    cdqe	       212	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	IF_11	IF_12
0x73e	        0x884c0228	         mov byte [rdx + rax + 0x28], cl	       212	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	IF_11	IF_12
0x742	      0xe9fa040000	                           jmp 0x4000c81	       226	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x747	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       214	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_5	IF_13
0x74b	          0x8b4024	            mov eax, dword [rax + 0x24] 	       214	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_5	IF_13
0x74e	            0x85c0	                           test eax, eax	       214	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_5	IF_13
0x750	            0x7539	                           jne 0x40007cb	       214	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_5	IF_13
0x752	        0x807de73f	            cmp byte [rbp - 0x19], 0x3f 	       214	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_5	IF_13
0x756	            0x7633	                           jbe 0x40007cb	       214	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_5	IF_13
0x758	        0x807de75f	            cmp byte [rbp - 0x19], 0x5f 	       214	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_5	IF_13
0x75c	            0x772d	                            ja 0x40007cb	       214	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_5	IF_13
0x75e	         0xfb645e7	            movzx eax, byte [rbp - 0x19]	       215	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_5	IF_13	CALL_14
0x762	          0x83c040	                           add eax, 0x40	       215	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_5	IF_13	CALL_14
0x765	           0xfb6d0	                           movzx edx, al	       215	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_5	IF_13	CALL_14
0x768	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       215	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_5	IF_13	CALL_14
0x76c	            0x89d6	                            mov esi, edx	       215	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_5	IF_13	CALL_14
0x76e	          0x4889c7	                            mov rdi, rax	       215	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_5	IF_13	CALL_14
0x771	      0xe8adf8ffff	                     call sym.do_control	       215	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_5	IF_13	CALL_14
0x776	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       216	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_5	IF_13	CALL_15
0x77a	    0xc74020000000	               mov dword [rax + 0x20], 0	       216	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_5	IF_13	CALL_15
0x781	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       216	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_5	IF_13	CALL_15
0x789	            0xeb41	                           jmp 0x400080c	       216	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_5	IF_13	CALL_15
0x78b	        0x807de72f	            cmp byte [rbp - 0x19], 0x2f 	       218	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_6	IF_14
0x78f	     0xf86ac040000	                           jbe 0x4000c81	       218	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_6	IF_14
0x795	        0x807de77e	            cmp byte [rbp - 0x19], 0x7e 	       218	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_6	IF_14
0x799	     0xf87a2040000	                            ja 0x4000c81	       218	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_6	IF_14
0x79f	         0xfb645e7	            movzx eax, byte [rbp - 0x19]	       219	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_6	IF_14	CALL_16
0x7a3	           0xfbed0	                           movsx edx, al	       219	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_6	IF_14	CALL_16
0x7a6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       219	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_6	IF_14	CALL_16
0x7aa	            0x89d6	                            mov esi, edx	       219	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_6	IF_14	CALL_16
0x7ac	          0x4889c7	                            mov rdi, rax	       219	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_6	IF_14	CALL_16
0x7af	      0xe86df9ffff	                      call sym.do_escape	       219	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_6	IF_14	CALL_16
0x7b4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       220	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_6	IF_14	CALL_17
0x7b8	    0xc74020000000	               mov dword [rax + 0x20], 0	       220	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_6	IF_14	CALL_17
0x7bf	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       220	parser.c	FUNCTION_9	FOR_1	SWITCH_2	SWITCH_3	ELSE_6	IF_14	CALL_17
0x7c7	      0xe975040000	                           jmp 0x4000c81	       226	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x7cc	      0xe970040000	                           jmp 0x4000c81	       226	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x7d1	        0x807de73b	            cmp byte [rbp - 0x19], 0x3b 	       230	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_15
0x7d5	            0x763a	                           jbe 0x4000851	       230	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_15
0x7d7	        0x807de73f	            cmp byte [rbp - 0x19], 0x3f 	       230	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_15
0x7db	            0x7734	                            ja 0x4000851	       230	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_15
0x7dd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       231	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_15	IF_16
0x7e1	          0x8b4038	            mov eax, dword [rax + 0x38] 	       231	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_15	IF_16
0x7e4	          0x83f80e	                            cmp eax, 0xe	       231	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_15	IF_16
0x7e7	     0xf8f57040000	                            jg 0x4000c84	       231	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_15	IF_16
0x7ed	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       232	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_15	IF_16
0x7f1	          0x8b4038	            mov eax, dword [rax + 0x38] 	       232	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_15	IF_16
0x7f4	          0x8d4801	                      lea ecx, [rax + 1]	       232	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_15	IF_16
0x7f7	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       232	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_15	IF_16
0x7fb	          0x894a38	             mov dword [rdx + 0x38], ecx	       232	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_15	IF_16
0x7fe	         0xfb64de7	            movzx ecx, byte [rbp - 0x19]	       232	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_15	IF_16
0x802	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       232	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_15	IF_16
0x806	            0x4898	                                    cdqe	       232	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_15	IF_16
0x808	        0x884c023c	         mov byte [rdx + rax + 0x3c], cl	       232	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_15	IF_16
0x80c	      0xe933040000	                           jmp 0x4000c84	       233	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_15
0x811	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       237	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x815	          0x8b4038	            mov eax, dword [rax + 0x38] 	       237	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x818	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       237	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x81c	            0x4898	                                    cdqe	       237	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x81e	      0xc644023c00	          mov byte [rdx + rax + 0x3c], 0	       237	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x823	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       239	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x827	    0xc7404c000000	               mov dword [rax + 0x4c], 0	       239	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x82e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       240	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x832	    0x48c74050ffff	     mov qword [rax + 0x50], 0x3fffffff 	       240	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x83a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       241	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x83e	    0xc74020020000	               mov dword [rax + 0x20], 2	       241	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x845	        0x807de72f	            cmp byte [rbp - 0x19], 0x2f 	       246	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x849	     0xf86bb000000	                           jbe 0x400094a	       246	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x84f	        0x807de739	            cmp byte [rbp - 0x19], 0x39 	       246	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x853	     0xf87b1000000	                            ja 0x400094a	       246	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x859	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       247	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17	IF_18
0x85d	          0x8b504c	            mov edx, dword [rax + 0x4c] 	       247	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17	IF_18
0x860	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       247	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17	IF_18
0x864	          0x4863d2	                         movsxd rdx, edx	       247	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17	IF_18
0x867	        0x4883c20a	                            add rdx, 0xa	       247	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17	IF_18
0x86b	        0x488b04d0	            mov rax, qword [rax + rdx*8]	       247	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17	IF_18
0x86f	    0x483dffffff3f	                     cmp rax, 0x3fffffff	       247	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17	IF_18
0x875	            0x751a	                           jne 0x40008d1	       247	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17	IF_18
0x877	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       248	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17	IF_18
0x87b	          0x8b504c	            mov edx, dword [rax + 0x4c] 	       248	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17	IF_18
0x87e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       248	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17	IF_18
0x882	          0x4863d2	                         movsxd rdx, edx	       248	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17	IF_18
0x885	        0x4883c20a	                            add rdx, 0xa	       248	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17	IF_18
0x889	    0x48c704d00000	              mov qword [rax + rdx*8], 0	       248	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17	IF_18
0x891	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       249	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x895	          0x8b484c	            mov ecx, dword [rax + 0x4c] 	       249	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x898	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       249	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x89c	          0x8b504c	            mov edx, dword [rax + 0x4c] 	       249	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x89f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       249	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x8a3	          0x4863d2	                         movsxd rdx, edx	       249	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x8a6	        0x4883c20a	                            add rdx, 0xa	       249	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x8aa	        0x488b14d0	            mov rdx, qword [rax + rdx*8]	       249	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x8ae	          0x4889d0	                            mov rax, rdx	       249	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x8b1	        0x48c1e002	                              shl rax, 2	       249	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x8b5	          0x4801d0	                            add rax, rdx	       249	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x8b8	          0x4801c0	                            add rax, rax	       249	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x8bb	          0x4889c6	                            mov rsi, rax	       249	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x8be	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       249	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x8c2	          0x4863d1	                         movsxd rdx, ecx	       249	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x8c5	        0x4883c20a	                            add rdx, 0xa	       249	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x8c9	        0x488934d0	            mov qword [rax + rdx*8], rsi	       249	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x8cd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       250	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x8d1	          0x8b504c	            mov edx, dword [rax + 0x4c] 	       250	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x8d4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       250	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x8d8	          0x8b484c	            mov ecx, dword [rax + 0x4c] 	       250	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x8db	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       250	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x8df	          0x4863c9	                         movsxd rcx, ecx	       250	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x8e2	        0x4883c10a	                            add rcx, 0xa	       250	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x8e6	        0x488b0cc8	            mov rcx, qword [rax + rcx*8]	       250	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x8ea	         0xfb645e7	            movzx eax, byte [rbp - 0x19]	       250	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x8ee	          0x83e830	                           sub eax, 0x30	       250	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x8f1	            0x4898	                                    cdqe	       250	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x8f3	          0x4801c1	                            add rcx, rax	       250	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x8f6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       250	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x8fa	          0x4863d2	                         movsxd rdx, edx	       250	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x8fd	        0x4883c20a	                            add rdx, 0xa	       250	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x901	        0x48890cd0	            mov qword [rax + rdx*8], rcx	       250	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x905	      0xe941030000	                           jmp 0x4000c8b	       251	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_17
0x90a	        0x807de73a	            cmp byte [rbp - 0x19], 0x3a 	       253	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_19
0x90e	            0x7538	                           jne 0x4000988	       253	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_19
0x910	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       254	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_19
0x914	          0x8b504c	            mov edx, dword [rax + 0x4c] 	       254	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_19
0x917	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       254	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_19
0x91b	          0x8b484c	            mov ecx, dword [rax + 0x4c] 	       254	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_19
0x91e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       254	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_19
0x922	          0x4863c9	                         movsxd rcx, ecx	       254	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_19
0x925	        0x4883c10a	                            add rcx, 0xa	       254	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_19
0x929	        0x488b0cc8	            mov rcx, qword [rax + rcx*8]	       254	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_19
0x92d	      0xb800000080	                     mov eax, 0x80000000	       254	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_19
0x932	          0x4809c1	                             or rcx, rax	       254	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_19
0x935	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       254	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_19
0x939	          0x4863d2	                         movsxd rdx, edx	       254	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_19
0x93c	        0x4883c20a	                            add rdx, 0xa	       254	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_19
0x940	        0x48890cd0	            mov qword [rax + rdx*8], rcx	       254	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_19
0x944	        0xc645e73b	            mov byte [rbp - 0x19], 0x3b 	       255	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_19
0x948	        0x807de73b	            cmp byte [rbp - 0x19], 0x3b 	       257	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_20
0x94c	            0x7530	                           jne 0x40009be	       257	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_20
0x94e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       258	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_20
0x952	          0x8b404c	            mov eax, dword [rax + 0x4c] 	       258	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_20
0x955	          0x8d5001	                      lea edx, [rax + 1]	       258	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_20
0x958	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       258	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_20
0x95c	          0x89504c	             mov dword [rax + 0x4c], edx	       258	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_20
0x95f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       259	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_20
0x963	          0x8b504c	            mov edx, dword [rax + 0x4c] 	       259	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_20
0x966	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       259	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_20
0x96a	          0x4863d2	                         movsxd rdx, edx	       259	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_20
0x96d	        0x4883c20a	                            add rdx, 0xa	       259	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_20
0x971	    0x48c704d0ffff	    mov qword [rax + rdx*8], 0x3fffffff 	       259	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_20
0x979	      0xe9cd020000	                           jmp 0x4000c8b	       260	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_20
0x97e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       264	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x982	          0x8b404c	            mov eax, dword [rax + 0x4c] 	       264	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x985	          0x8d5001	                      lea edx, [rax + 1]	       264	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x988	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       264	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x98c	          0x89504c	             mov dword [rax + 0x4c], edx	       264	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x98f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       265	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x993	    0xc74024000000	               mov dword [rax + 0x24], 0	       265	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x99a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       266	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x99e	    0xc74020030000	               mov dword [rax + 0x20], 3	       266	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0x9a5	         0xfb645e7	            movzx eax, byte [rbp - 0x19]	       269	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_21	CALL_19
0x9a9	            0x89c7	                            mov edi, eax	       269	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_21	CALL_19
0x9ab	      0xe850f6ffff	                    call sym.is_intermed	       269	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_21	CALL_19
0x9b0	            0x85c0	                           test eax, eax	       269	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_21	CALL_19
0x9b2	            0x7434	                            je 0x4000a28	       269	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_21	CALL_19
0x9b4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       270	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_21	IF_22
0x9b8	          0x8b4024	            mov eax, dword [rax + 0x24] 	       270	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_21	IF_22
0x9bb	          0x83f80e	                            cmp eax, 0xe	       270	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_21	IF_22
0x9be	     0xf8f83020000	                            jg 0x4000c87	       270	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_21	IF_22
0x9c4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       271	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_21	IF_22
0x9c8	          0x8b4024	            mov eax, dword [rax + 0x24] 	       271	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_21	IF_22
0x9cb	          0x8d4801	                      lea ecx, [rax + 1]	       271	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_21	IF_22
0x9ce	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       271	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_21	IF_22
0x9d2	          0x894a24	             mov dword [rdx + 0x24], ecx	       271	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_21	IF_22
0x9d5	         0xfb64de7	            movzx ecx, byte [rbp - 0x19]	       271	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_21	IF_22
0x9d9	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       271	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_21	IF_22
0x9dd	            0x4898	                                    cdqe	       271	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_21	IF_22
0x9df	        0x884c0228	         mov byte [rdx + rax + 0x28], cl	       271	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_21	IF_22
0x9e3	      0xe95f020000	                           jmp 0x4000c87	       272	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_21
0x9e8	        0x807de71b	            cmp byte [rbp - 0x19], 0x1b 	       274	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_8	IF_23
0x9ec	            0x7433	                            je 0x4000a61	       274	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_8	IF_23
0x9ee	        0x807de73f	            cmp byte [rbp - 0x19], 0x3f 	       277	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_9	IF_24
0x9f2	            0x762d	                           jbe 0x4000a61	       277	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_9	IF_24
0x9f4	        0x807de77e	            cmp byte [rbp - 0x19], 0x7e 	       277	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_9	IF_24
0x9f8	            0x7727	                            ja 0x4000a61	       277	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_9	IF_24
0x9fa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       278	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_9	IF_24
0x9fe	          0x8b4024	            mov eax, dword [rax + 0x24] 	       278	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_9	IF_24
0xa01	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       278	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_9	IF_24
0xa05	            0x4898	                                    cdqe	       278	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_9	IF_24
0xa07	      0xc644022800	          mov byte [rdx + rax + 0x28], 0	       278	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_9	IF_24
0xa0c	         0xfb645e7	            movzx eax, byte [rbp - 0x19]	       279	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_9	IF_24	CALL_20
0xa10	           0xfbed0	                           movsx edx, al	       279	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_9	IF_24	CALL_20
0xa13	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       279	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_9	IF_24	CALL_20
0xa17	            0x89d6	                            mov esi, edx	       279	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_9	IF_24	CALL_20
0xa19	          0x4889c7	                            mov rdi, rax	       279	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_9	IF_24	CALL_20
0xa1c	      0xe860f6ffff	                         call sym.do_csi	       279	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_9	IF_24	CALL_20
0xa21	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       283	parser.c	FUNCTION_9	FOR_1	SWITCH_2	CALL_21
0xa25	    0xc74020000000	               mov dword [rax + 0x20], 0	       283	parser.c	FUNCTION_9	FOR_1	SWITCH_2	CALL_21
0xa2c	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       283	parser.c	FUNCTION_9	FOR_1	SWITCH_2	CALL_21
0xa34	      0xe912020000	                           jmp 0x4000c8b	       284	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0xa39	        0x807de707	                cmp byte [rbp - 0x19], 7	       287	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_25
0xa3d	            0x7415	                            je 0x4000a94	       287	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_25
0xa3f	        0x807de79c	            cmp byte [rbp - 0x19], 0x9c 	       287	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_25
0xa43	            0x7555	                           jne 0x4000ada	       287	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_25
0xa45	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       287	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_25
0xa49	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       287	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_25
0xa4d	          0x83e001	                              and eax, 1	       287	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_25
0xa50	            0x84c0	                             test al, al	       287	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_25
0xa52	            0x7546	                           jne 0x4000ada	       287	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_25
0xa54	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       288	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_25	CALL_22
0xa58	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       288	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_25	CALL_22
0xa5c	          0x4801d0	                            add rax, rdx	       288	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_25	CALL_22
0xa5f	          0x4889c2	                            mov rdx, rax	       288	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_25	CALL_22
0xa62	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       288	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_25	CALL_22
0xa66	          0x4829c2	                            sub rdx, rax	       288	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_25	CALL_22
0xa69	          0x4889d0	                            mov rax, rdx	       288	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_25	CALL_22
0xa6c	          0x4889c2	                            mov rdx, rax	       288	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_25	CALL_22
0xa6f	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       288	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_25	CALL_22
0xa73	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       288	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_25	CALL_22
0xa77	          0x4889ce	                            mov rsi, rcx	       288	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_25	CALL_22
0xa7a	          0x4889c7	                            mov rdi, rax	       288	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_25	CALL_22
0xa7d	      0xe86ef8ffff	                    call sym.done_string	       288	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_25	CALL_22
0xa82	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       289	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_25	CALL_23
0xa86	    0xc74020000000	               mov dword [rax + 0x20], 0	       289	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_25	CALL_23
0xa8d	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       289	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_25	CALL_23
0xa95	      0xe9b0010000	                           jmp 0x4000c8a	       296	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0xa9a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       291	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_10	IF_26
0xa9e	        0x4883c001	                              add rax, 1	       291	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_10	IF_26
0xaa2	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	       291	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_10	IF_26
0xaa6	     0xf859e010000	                           jne 0x4000c8a	       291	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_10	IF_26
0xaac	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       294	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_10	IF_26	CALL_24
0xab0	        0x488d5001	                      lea rdx, [rax + 1]	       294	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_10	IF_26	CALL_24
0xab4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       294	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_10	IF_26	CALL_24
0xab8	          0x4801d0	                            add rax, rdx	       294	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_10	IF_26	CALL_24
0xabb	          0x4889c2	                            mov rdx, rax	       294	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_10	IF_26	CALL_24
0xabe	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       294	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_10	IF_26	CALL_24
0xac2	          0x4829c2	                            sub rdx, rax	       294	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_10	IF_26	CALL_24
0xac5	          0x4889d0	                            mov rax, rdx	       294	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_10	IF_26	CALL_24
0xac8	          0x4889c2	                            mov rdx, rax	       294	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_10	IF_26	CALL_24
0xacb	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       294	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_10	IF_26	CALL_24
0xacf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       294	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_10	IF_26	CALL_24
0xad3	          0x4889ce	                            mov rsi, rcx	       294	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_10	IF_26	CALL_24
0xad6	          0x4889c7	                            mov rdi, rax	       294	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_10	IF_26	CALL_24
0xad9	      0xe8e4f7ffff	                    call sym.more_string	       294	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_10	IF_26	CALL_24
0xade	      0xe967010000	                           jmp 0x4000c8a	       296	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0xae3	         0xfb645e7	            movzx eax, byte [rbp - 0x19]	       299	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27
0xae7	            0x84c0	                             test al, al	       299	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27
0xae9	     0xf89c6000000	                           jns 0x4000bf5	       299	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27
0xaef	        0x807de79f	            cmp byte [rbp - 0x19], 0x9f 	       299	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27
0xaf3	     0xf87bc000000	                            ja 0x4000bf5	       299	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27
0xaf9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       299	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27
0xafd	         0xfb64018	           movzx eax, byte [rax + 0x18] 	       299	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27
0xb01	          0x83e001	                              and eax, 1	       299	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27
0xb04	            0x84c0	                             test al, al	       299	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27
0xb06	     0xf85a9000000	                           jne 0x4000bf5	       299	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27
0xb0c	         0xfb645e7	            movzx eax, byte [rbp - 0x19]	       300	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4
0xb10	      0x3d9b000000	                           cmp eax, 0x9b	       300	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4
0xb15	            0x743f	                            je 0x4000b96	       300	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4
0xb17	      0x3d9d000000	                           cmp eax, 0x9d	       300	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4
0xb1c	            0x744d	                            je 0x4000bab	       300	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4
0xb1e	      0x3d90000000	                           cmp eax, 0x90	       300	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4
0xb23	            0x7577	                           jne 0x4000bdc	       300	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4
0xb25	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       302	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4	CALL_25
0xb29	      0xbe01000000	                              mov esi, 1	       302	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4	CALL_25
0xb2e	          0x4889c7	                            mov rdi, rax	       302	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4	CALL_25
0xb31	      0xe862f7ffff	                   call sym.start_string	       302	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4	CALL_25
0xb36	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       303	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4	CALL_26
0xb3a	    0xc74020050000	               mov dword [rax + 0x20], 5	       303	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4	CALL_26
0xb41	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       303	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4	CALL_26
0xb45	        0x488d5001	                      lea rdx, [rax + 1]	       303	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4	CALL_26
0xb49	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       303	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4	CALL_26
0xb4d	          0x4801d0	                            add rax, rdx	       303	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4	CALL_26
0xb50	        0x488945f0	             mov qword [rbp - 0x10], rax	       303	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4	CALL_26
0xb54	            0xeb59	                           jmp 0x4000bef	       304	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4
0xb56	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       306	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4	CALL_27
0xb5a	    0xc74020010000	               mov dword [rax + 0x20], 1	       306	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4	CALL_27
0xb61	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       306	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4	CALL_27
0xb69	            0xeb44	                           jmp 0x4000bef	       307	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4
0xb6b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       309	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4	CALL_28
0xb6f	      0xbe00000000	                              mov esi, 0	       309	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4	CALL_28
0xb74	          0x4889c7	                            mov rdi, rax	       309	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4	CALL_28
0xb77	      0xe81cf7ffff	                   call sym.start_string	       309	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4	CALL_28
0xb7c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       310	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4	CALL_29
0xb80	    0xc74020050000	               mov dword [rax + 0x20], 5	       310	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4	CALL_29
0xb87	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       310	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4	CALL_29
0xb8b	        0x488d5001	                      lea rdx, [rax + 1]	       310	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4	CALL_29
0xb8f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       310	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4	CALL_29
0xb93	          0x4801d0	                            add rax, rdx	       310	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4	CALL_29
0xb96	        0x488945f0	             mov qword [rbp - 0x10], rax	       310	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4	CALL_29
0xb9a	            0xeb13	                           jmp 0x4000bef	       311	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4
0xb9c	         0xfb655e7	            movzx edx, byte [rbp - 0x19]	       313	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4	CALL_30
0xba0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       313	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4	CALL_30
0xba4	            0x89d6	                            mov esi, edx	       313	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4	CALL_30
0xba6	          0x4889c7	                            mov rdi, rax	       313	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4	CALL_30
0xba9	      0xe875f4ffff	                     call sym.do_control	       313	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4	CALL_30
0xbae	              0x90	                                     nop	       314	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27	SWITCH_4
0xbaf	              0x90	                                     nop	       316	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_27
0xbb0	      0xe996000000	                           jmp 0x4000c8b	       330	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0xbb5	    0x48c745f80000	                  mov qword [rbp - 8], 0	       318	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11
0xbbd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       319	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_28
0xbc1	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       319	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_28
0xbc8	          0x4885c0	                           test rax, rax	       319	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_28
0xbcb	            0x744a	                            je 0x4000c57	       319	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_28
0xbcd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       319	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_28
0xbd1	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       319	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_28
0xbd8	          0x488b00	                    mov rax, qword [rax]	       319	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_28
0xbdb	          0x4885c0	                           test rax, rax	       319	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_28
0xbde	            0x7437	                            je 0x4000c57	       319	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_28
0xbe0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       320	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_28
0xbe4	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       320	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_28
0xbeb	          0x488b00	                    mov rax, qword [rax]	       320	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_28
0xbee	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       320	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_28
0xbf2	    0x488b92d80000	            mov rdx, qword [rdx + 0xd8] 	       320	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_28
0xbf9	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       320	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_28
0xbfd	        0x482b4de8	             sub rcx, qword [rbp - 0x18]	       320	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_28
0xc01	        0x488b7dd0	             mov rdi, qword [rbp - 0x30]	       320	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_28
0xc05	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	       320	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_28
0xc09	          0x4801f7	                            add rdi, rsi	       320	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_28
0xc0c	          0x4889ce	                            mov rsi, rcx	       320	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_28
0xc0f	            0xffd0	                                call rax	       320	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_28
0xc11	            0x4898	                                    cdqe	       320	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_28
0xc13	        0x488945f8	                mov qword [rbp - 8], rax	       320	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_28
0xc17	      0x48837df800	                  cmp qword [rbp - 8], 0	       322	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_29
0xc1c	            0x7508	                           jne 0x4000c66	       322	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_29
0xc1e	    0x48c745f80100	                  mov qword [rbp - 8], 1	       325	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11	IF_29
0xc26	        0x488b55f8	                mov rdx, qword [rbp - 8]	       328	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11
0xc2a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       328	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11
0xc2e	          0x4801d0	                            add rax, rdx	       328	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11
0xc31	        0x4883e801	                              sub rax, 1	       328	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11
0xc35	        0x488945e8	             mov qword [rbp - 0x18], rax	       328	parser.c	FUNCTION_9	FOR_1	SWITCH_2	ELSE_11
0xc39	            0xeb10	                           jmp 0x4000c8b	       330	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0xc3b	              0x90	                                     nop	       156	parser.c	FUNCTION_9	FOR_1	IF_1
0xc3c	            0xeb0d	                           jmp 0x4000c8b	       156	parser.c	FUNCTION_9	FOR_1	IF_1
0xc3e	              0x90	                                     nop	       180	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7
0xc3f	            0xeb0a	                           jmp 0x4000c8b	       180	parser.c	FUNCTION_9	FOR_1	ELSE_4	IF_7
0xc41	              0x90	                                     nop	       226	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0xc42	            0xeb07	                           jmp 0x4000c8b	       226	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0xc44	              0x90	                                     nop	       233	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_15
0xc45	            0xeb04	                           jmp 0x4000c8b	       233	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_15
0xc47	              0x90	                                     nop	       272	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_21
0xc48	            0xeb01	                           jmp 0x4000c8b	       272	parser.c	FUNCTION_9	FOR_1	SWITCH_2	IF_21
0xc4a	              0x90	                                     nop	       296	parser.c	FUNCTION_9	FOR_1	SWITCH_2
0xc4b	      0x488345e801	               add qword [rbp - 0x18], 1	       148	parser.c	FUNCTION_9	FOR_1
0xc50	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       148	parser.c	FUNCTION_9	FOR_1
0xc54	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	       148	parser.c	FUNCTION_9	FOR_1
0xc58	     0xf821af8ffff	                            jb 0x40004b8	       148	parser.c	FUNCTION_9	FOR_1
0xc5e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       334	parser.c	FUNCTION_9
0xc62	              0xc9	                                   leave	       335	parser.c	FUNCTION_9
0xc63	              0xc3	                                     ret	       335	parser.c	FUNCTION_9
do_control	DO,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:FOR,0:IF,2:CALL,1	27
0x23	              0x55	                                push rbp	        14	parser.c	FUNCTION_2
0x24	          0x4889e5	                            mov rbp, rsp	        14	parser.c	FUNCTION_2
0x27	        0x4883ec10	                           sub rsp, 0x10	        14	parser.c	FUNCTION_2
0x2b	        0x48897df8	                mov qword [rbp - 8], rdi	        14	parser.c	FUNCTION_2
0x2f	            0x89f0	                            mov eax, esi	        14	parser.c	FUNCTION_2
0x31	          0x8845f4	                mov byte [rbp - 0xc], al	        14	parser.c	FUNCTION_2
0x34	        0x488b45f8	                mov rax, qword [rbp - 8]	        15	parser.c	FUNCTION_2	IF_1
0x38	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	        15	parser.c	FUNCTION_2	IF_1
0x3f	          0x4885c0	                           test rax, rax	        15	parser.c	FUNCTION_2	IF_1
0x42	            0x743b	                            je 0x40000bf	        15	parser.c	FUNCTION_2	IF_1
0x44	        0x488b45f8	                mov rax, qword [rbp - 8]	        15	parser.c	FUNCTION_2	IF_1
0x48	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	        15	parser.c	FUNCTION_2	IF_1
0x4f	        0x488b4008	                mov rax, qword [rax + 8]	        15	parser.c	FUNCTION_2	IF_1
0x53	          0x4885c0	                           test rax, rax	        15	parser.c	FUNCTION_2	IF_1
0x56	            0x7427	                            je 0x40000bf	        15	parser.c	FUNCTION_2	IF_1
0x58	        0x488b45f8	                mov rax, qword [rbp - 8]	        16	parser.c	FUNCTION_2	IF_1	IF_2
0x5c	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	        16	parser.c	FUNCTION_2	IF_1	IF_2
0x63	        0x488b4008	                mov rax, qword [rax + 8]	        16	parser.c	FUNCTION_2	IF_1	IF_2
0x67	        0x488b55f8	                mov rdx, qword [rbp - 8]	        16	parser.c	FUNCTION_2	IF_1	IF_2
0x6b	    0x488b8ad80000	            mov rcx, qword [rdx + 0xd8] 	        16	parser.c	FUNCTION_2	IF_1	IF_2
0x72	         0xfb655f4	             movzx edx, byte [rbp - 0xc]	        16	parser.c	FUNCTION_2	IF_1	IF_2
0x76	          0x4889ce	                            mov rsi, rcx	        16	parser.c	FUNCTION_2	IF_1	IF_2
0x79	            0x89d7	                            mov edi, edx	        16	parser.c	FUNCTION_2	IF_1	IF_2
0x7b	            0xffd0	                                call rax	        16	parser.c	FUNCTION_2	IF_1	IF_2
0x7d	            0x85c0	                           test eax, eax	        16	parser.c	FUNCTION_2	IF_1	IF_2
0x7f	              0xc9	                                   leave	        20	parser.c	FUNCTION_2
0x80	              0xc3	                                     ret	        20	parser.c	FUNCTION_2
do_csi	DO,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:FOR,1:IF,3:CALL,8	46
0x81	              0x55	                                push rbp	        23	parser.c	FUNCTION_3
0x82	          0x4889e5	                            mov rbp, rsp	        23	parser.c	FUNCTION_3
0x85	        0x4883ec10	                           sub rsp, 0x10	        23	parser.c	FUNCTION_3
0x89	        0x48897df8	                mov qword [rbp - 8], rdi	        23	parser.c	FUNCTION_3
0x8d	            0x89f0	                            mov eax, esi	        23	parser.c	FUNCTION_3
0x8f	          0x8845f4	                mov byte [rbp - 0xc], al	        23	parser.c	FUNCTION_3
0x92	        0x488b45f8	                mov rax, qword [rbp - 8]	        35	parser.c	FUNCTION_3	IF_2
0x96	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	        35	parser.c	FUNCTION_3	IF_2
0x9d	          0x4885c0	                           test rax, rax	        35	parser.c	FUNCTION_3	IF_2
0xa0	            0x747d	                            je 0x400015f	        35	parser.c	FUNCTION_3	IF_2
0xa2	        0x488b45f8	                mov rax, qword [rbp - 8]	        35	parser.c	FUNCTION_3	IF_2
0xa6	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	        35	parser.c	FUNCTION_3	IF_2
0xad	        0x488b4018	            mov rax, qword [rax + 0x18] 	        35	parser.c	FUNCTION_3	IF_2
0xb1	          0x4885c0	                           test rax, rax	        35	parser.c	FUNCTION_3	IF_2
0xb4	            0x7469	                            je 0x400015f	        35	parser.c	FUNCTION_3	IF_2
0xb6	        0x488b45f8	                mov rax, qword [rbp - 8]	        36	parser.c	FUNCTION_3	IF_2	IF_3
0xba	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	        36	parser.c	FUNCTION_3	IF_2	IF_3
0xc1	        0x488b4018	            mov rax, qword [rax + 0x18] 	        36	parser.c	FUNCTION_3	IF_2	IF_3
0xc5	        0x488b55f8	                mov rdx, qword [rbp - 8]	        36	parser.c	FUNCTION_3	IF_2	IF_3
0xc9	    0x4c8b8ad80000	              mov r9, qword [rdx + 0xd8]	        36	parser.c	FUNCTION_3	IF_2	IF_3
0xd0	      0x440fbe45f4	             movsx r8d, byte [rbp - 0xc]	        36	parser.c	FUNCTION_3	IF_2	IF_3
0xd5	        0x488b55f8	                mov rdx, qword [rbp - 8]	        40	parser.c	FUNCTION_3	IF_2	IF_3
0xd9	          0x8b5224	            mov edx, dword [rdx + 0x24] 	        40	parser.c	FUNCTION_3	IF_2	IF_3
0xdc	            0x85d2	                           test edx, edx	        36	parser.c	FUNCTION_3	IF_2	IF_3
0xde	            0x740a	                            je 0x400012a	        36	parser.c	FUNCTION_3	IF_2	IF_3
0xe0	        0x488b55f8	                mov rdx, qword [rbp - 8]	        36	parser.c	FUNCTION_3	IF_2	IF_3
0xe4	        0x488d4a28	                   lea rcx, [rdx + 0x28]	        36	parser.c	FUNCTION_3	IF_2	IF_3
0xe8	            0xeb05	                           jmp 0x400012f	        36	parser.c	FUNCTION_3	IF_2	IF_3
0xea	      0xb900000000	                              mov ecx, 0	        36	parser.c	FUNCTION_3	IF_2	IF_3
0xef	        0x488b55f8	                mov rdx, qword [rbp - 8]	        36	parser.c	FUNCTION_3	IF_2	IF_3
0xf3	          0x8b524c	            mov edx, dword [rdx + 0x4c] 	        36	parser.c	FUNCTION_3	IF_2	IF_3
0xf6	        0x488b75f8	                mov rsi, qword [rbp - 8]	        38	parser.c	FUNCTION_3	IF_2	IF_3
0xfa	        0x4c8d5650	                   lea r10, [rsi + 0x50]	        38	parser.c	FUNCTION_3	IF_2	IF_3
0xfe	        0x488b75f8	                mov rsi, qword [rbp - 8]	        37	parser.c	FUNCTION_3	IF_2	IF_3
0x102	          0x8b7638	            mov esi, dword [rsi + 0x38] 	        37	parser.c	FUNCTION_3	IF_2	IF_3
0x105	            0x85f6	                           test esi, esi	        36	parser.c	FUNCTION_3	IF_2	IF_3
0x107	            0x740a	                            je 0x4000153	        36	parser.c	FUNCTION_3	IF_2	IF_3
0x109	        0x488b75f8	                mov rsi, qword [rbp - 8]	        36	parser.c	FUNCTION_3	IF_2	IF_3
0x10d	        0x488d7e3c	                   lea rdi, [rsi + 0x3c]	        36	parser.c	FUNCTION_3	IF_2	IF_3
0x111	            0xeb05	                           jmp 0x4000158	        36	parser.c	FUNCTION_3	IF_2	IF_3
0x113	      0xbf00000000	                              mov edi, 0	        36	parser.c	FUNCTION_3	IF_2	IF_3
0x118	          0x4c89d6	                            mov rsi, r10	        36	parser.c	FUNCTION_3	IF_2	IF_3
0x11b	            0xffd0	                                call rax	        36	parser.c	FUNCTION_3	IF_2	IF_3
0x11d	            0x85c0	                           test eax, eax	        36	parser.c	FUNCTION_3	IF_2	IF_3
0x11f	              0xc9	                                   leave	        46	parser.c	FUNCTION_3
0x120	              0xc3	                                     ret	        46	parser.c	FUNCTION_3
do_escape	DO,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:FOR,0:IF,2:CALL,2	54
0x121	              0x55	                                push rbp	        49	parser.c	FUNCTION_4
0x122	          0x4889e5	                            mov rbp, rsp	        49	parser.c	FUNCTION_4
0x125	        0x4883ec40	                           sub rsp, 0x40	        49	parser.c	FUNCTION_4
0x129	        0x48897dc8	             mov qword [rbp - 0x38], rdi	        49	parser.c	FUNCTION_4
0x12d	            0x89f0	                            mov eax, esi	        49	parser.c	FUNCTION_4
0x12f	          0x8845c4	               mov byte [rbp - 0x3c], al	        49	parser.c	FUNCTION_4
0x132	    0x64488b042528	                mov rax, qword fs:[0x28]	        49	parser.c	FUNCTION_4
0x13b	        0x488945f8	                mov qword [rbp - 8], rax	        49	parser.c	FUNCTION_4
0x13f	            0x31c0	                            xor eax, eax	        49	parser.c	FUNCTION_4
0x141	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        52	parser.c	FUNCTION_4
0x145	          0x8b4024	            mov eax, dword [rax + 0x24] 	        52	parser.c	FUNCTION_4
0x148	            0x4898	                                    cdqe	        52	parser.c	FUNCTION_4
0x14a	        0x488945d8	             mov qword [rbp - 0x28], rax	        52	parser.c	FUNCTION_4
0x14e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        53	parser.c	FUNCTION_4	CALL_1
0x152	        0x488d4828	                   lea rcx, [rax + 0x28]	        53	parser.c	FUNCTION_4	CALL_1
0x156	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	        53	parser.c	FUNCTION_4	CALL_1
0x15a	        0x488d45e0	                   lea rax, [rbp - 0x20]	        53	parser.c	FUNCTION_4	CALL_1
0x15e	          0x4889ce	                            mov rsi, rcx	        53	parser.c	FUNCTION_4	CALL_1
0x161	          0x4889c7	                            mov rdi, rax	        53	parser.c	FUNCTION_4	CALL_1
0x164	      0xe800000000	                          call 0x40001a9	        53	parser.c	FUNCTION_4	CALL_1
0x169	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        54	parser.c	FUNCTION_4
0x16d	        0x488d5001	                      lea rdx, [rax + 1]	        54	parser.c	FUNCTION_4
0x171	        0x488955d8	             mov qword [rbp - 0x28], rdx	        54	parser.c	FUNCTION_4
0x175	         0xfb655c4	            movzx edx, byte [rbp - 0x3c]	        54	parser.c	FUNCTION_4
0x179	        0x885405e0	         mov byte [rbp + rax - 0x20], dl	        54	parser.c	FUNCTION_4
0x17d	        0x488d55e0	                   lea rdx, [rbp - 0x20]	        55	parser.c	FUNCTION_4
0x181	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        55	parser.c	FUNCTION_4
0x185	          0x4801d0	                            add rax, rdx	        55	parser.c	FUNCTION_4
0x188	          0xc60000	                       mov byte [rax], 0	        55	parser.c	FUNCTION_4
0x18b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        57	parser.c	FUNCTION_4	IF_1
0x18f	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	        57	parser.c	FUNCTION_4	IF_1
0x196	          0x4885c0	                           test rax, rax	        57	parser.c	FUNCTION_4	IF_1
0x199	            0x743d	                            je 0x4000218	        57	parser.c	FUNCTION_4	IF_1
0x19b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        57	parser.c	FUNCTION_4	IF_1
0x19f	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	        57	parser.c	FUNCTION_4	IF_1
0x1a6	        0x488b4010	            mov rax, qword [rax + 0x10] 	        57	parser.c	FUNCTION_4	IF_1
0x1aa	          0x4885c0	                           test rax, rax	        57	parser.c	FUNCTION_4	IF_1
0x1ad	            0x7429	                            je 0x4000218	        57	parser.c	FUNCTION_4	IF_1
0x1af	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        58	parser.c	FUNCTION_4	IF_1	IF_2
0x1b3	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	        58	parser.c	FUNCTION_4	IF_1	IF_2
0x1ba	        0x488b4010	            mov rax, qword [rax + 0x10] 	        58	parser.c	FUNCTION_4	IF_1	IF_2
0x1be	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	        58	parser.c	FUNCTION_4	IF_1	IF_2
0x1c2	    0x488b92d80000	            mov rdx, qword [rdx + 0xd8] 	        58	parser.c	FUNCTION_4	IF_1	IF_2
0x1c9	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	        58	parser.c	FUNCTION_4	IF_1	IF_2
0x1cd	        0x488d4de0	                   lea rcx, [rbp - 0x20]	        58	parser.c	FUNCTION_4	IF_1	IF_2
0x1d1	          0x4889cf	                            mov rdi, rcx	        58	parser.c	FUNCTION_4	IF_1	IF_2
0x1d4	            0xffd0	                                call rax	        58	parser.c	FUNCTION_4	IF_1	IF_2
0x1d6	            0x85c0	                           test eax, eax	        58	parser.c	FUNCTION_4	IF_1	IF_2
0x1d8	        0x488b45f8	                mov rax, qword [rbp - 8]	        62	parser.c	FUNCTION_4
0x1dc	    0x644833042528	                xor rax, qword fs:[0x28]	        62	parser.c	FUNCTION_4
0x1e5	            0x7405	                            je 0x400022c	        62	parser.c	FUNCTION_4
0x1e7	      0xe800000000	                          call 0x400022c	        62	parser.c	FUNCTION_4
0x1ec	              0xc9	                                   leave	        62	parser.c	FUNCTION_4
0x1ed	              0xc3	                                     ret	        62	parser.c	FUNCTION_4
done_string	DO,0:SWITCH,1:functions,0:ELSE,1:WHILE,0:FOR,0:IF,7:CALL,4	81
0x2f0	              0x55	                                push rbp	        90	parser.c	FUNCTION_8
0x2f1	          0x4889e5	                            mov rbp, rsp	        90	parser.c	FUNCTION_8
0x2f4	        0x4883ec20	                           sub rsp, 0x20	        90	parser.c	FUNCTION_8
0x2f8	        0x48897df8	                mov qword [rbp - 8], rdi	        90	parser.c	FUNCTION_8
0x2fc	        0x488975f0	             mov qword [rbp - 0x10], rsi	        90	parser.c	FUNCTION_8
0x300	        0x488955e8	             mov qword [rbp - 0x18], rdx	        90	parser.c	FUNCTION_8
0x304	        0x488b45f8	                mov rax, qword [rbp - 8]	        91	parser.c	FUNCTION_8	IF_1
0x308	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	        91	parser.c	FUNCTION_8	IF_1
0x30f	          0x4885c0	                           test rax, rax	        91	parser.c	FUNCTION_8	IF_1
0x312	            0x743e	                            je 0x4000392	        91	parser.c	FUNCTION_8	IF_1
0x314	      0x48837df000	               cmp qword [rbp - 0x10], 0	        92	parser.c	FUNCTION_8	IF_1	IF_2
0x319	            0x7417	                            je 0x4000372	        92	parser.c	FUNCTION_8	IF_1	IF_2
0x31b	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        93	parser.c	FUNCTION_8	IF_1	CALL_1
0x31f	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	        93	parser.c	FUNCTION_8	IF_1	CALL_1
0x323	        0x488b45f8	                mov rax, qword [rbp - 8]	        93	parser.c	FUNCTION_8	IF_1	CALL_1
0x327	          0x4889ce	                            mov rsi, rcx	        93	parser.c	FUNCTION_8	IF_1	CALL_1
0x32a	          0x4889c7	                            mov rdi, rax	        93	parser.c	FUNCTION_8	IF_1	CALL_1
0x32d	      0xe8bcfeffff	               call sym.append_strbuffer	        93	parser.c	FUNCTION_8	IF_1	CALL_1
0x332	        0x488b45f8	                mov rax, qword [rbp - 8]	        95	parser.c	FUNCTION_8	IF_1
0x336	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	        95	parser.c	FUNCTION_8	IF_1
0x33d	        0x488945f0	             mov qword [rbp - 0x10], rax	        95	parser.c	FUNCTION_8	IF_1
0x341	        0x488b45f8	                mov rax, qword [rbp - 8]	        96	parser.c	FUNCTION_8	IF_1
0x345	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	        96	parser.c	FUNCTION_8	IF_1
0x34c	        0x488945e8	             mov qword [rbp - 0x18], rax	        96	parser.c	FUNCTION_8	IF_1
0x350	            0xeb0f	                           jmp 0x40003a1	        96	parser.c	FUNCTION_8	IF_1
0x352	      0x48837df000	               cmp qword [rbp - 0x10], 0	        98	parser.c	FUNCTION_8	ELSE_1	IF_3
0x357	            0x7508	                           jne 0x40003a1	        98	parser.c	FUNCTION_8	ELSE_1	IF_3
0x359	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       100	parser.c	FUNCTION_8	ELSE_1	IF_3
0x361	        0x488b45f8	                mov rax, qword [rbp - 8]	       103	parser.c	FUNCTION_8	SWITCH_1
0x365	    0x8b80e0000000	            mov eax, dword [rax + 0xe0] 	       103	parser.c	FUNCTION_8	SWITCH_1
0x36b	          0x83f801	                              cmp eax, 1	       103	parser.c	FUNCTION_8	SWITCH_1
0x36e	            0x7460	                            je 0x4000410	       103	parser.c	FUNCTION_8	SWITCH_1
0x370	          0x83f801	                              cmp eax, 1	       103	parser.c	FUNCTION_8	SWITCH_1
0x373	            0x7208	                            jb 0x40003bd	       103	parser.c	FUNCTION_8	SWITCH_1
0x375	          0x83f802	                              cmp eax, 2	       103	parser.c	FUNCTION_8	SWITCH_1
0x378	      0xe9a6000000	                           jmp 0x4000463	       121	parser.c	FUNCTION_8	SWITCH_1
0x37d	        0x488b45f8	                mov rax, qword [rbp - 8]	       105	parser.c	FUNCTION_8	SWITCH_1	IF_4
0x381	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       105	parser.c	FUNCTION_8	SWITCH_1	IF_4
0x388	          0x4885c0	                           test rax, rax	       105	parser.c	FUNCTION_8	SWITCH_1	IF_4
0x38b	     0xf848e000000	                            je 0x400045f	       105	parser.c	FUNCTION_8	SWITCH_1	IF_4
0x391	        0x488b45f8	                mov rax, qword [rbp - 8]	       105	parser.c	FUNCTION_8	SWITCH_1	IF_4
0x395	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       105	parser.c	FUNCTION_8	SWITCH_1	IF_4
0x39c	        0x488b4020	            mov rax, qword [rax + 0x20] 	       105	parser.c	FUNCTION_8	SWITCH_1	IF_4
0x3a0	          0x4885c0	                           test rax, rax	       105	parser.c	FUNCTION_8	SWITCH_1	IF_4
0x3a3	            0x747a	                            je 0x400045f	       105	parser.c	FUNCTION_8	SWITCH_1	IF_4
0x3a5	        0x488b45f8	                mov rax, qword [rbp - 8]	       106	parser.c	FUNCTION_8	SWITCH_1	IF_4	IF_5
0x3a9	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       106	parser.c	FUNCTION_8	SWITCH_1	IF_4	IF_5
0x3b0	        0x488b4020	            mov rax, qword [rax + 0x20] 	       106	parser.c	FUNCTION_8	SWITCH_1	IF_4	IF_5
0x3b4	        0x488b55f8	                mov rdx, qword [rbp - 8]	       106	parser.c	FUNCTION_8	SWITCH_1	IF_4	IF_5
0x3b8	    0x488b92d80000	            mov rdx, qword [rdx + 0xd8] 	       106	parser.c	FUNCTION_8	SWITCH_1	IF_4	IF_5
0x3bf	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	       106	parser.c	FUNCTION_8	SWITCH_1	IF_4	IF_5
0x3c3	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       106	parser.c	FUNCTION_8	SWITCH_1	IF_4	IF_5
0x3c7	          0x4889cf	                            mov rdi, rcx	       106	parser.c	FUNCTION_8	SWITCH_1	IF_4	IF_5
0x3ca	            0xffd0	                                call rax	       106	parser.c	FUNCTION_8	SWITCH_1	IF_4	IF_5
0x3cc	            0x85c0	                           test eax, eax	       106	parser.c	FUNCTION_8	SWITCH_1	IF_4	IF_5
0x3ce	            0xeb4f	                           jmp 0x400045f	       110	parser.c	FUNCTION_8	SWITCH_1
0x3d0	        0x488b45f8	                mov rax, qword [rbp - 8]	       113	parser.c	FUNCTION_8	SWITCH_1	IF_6
0x3d4	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       113	parser.c	FUNCTION_8	SWITCH_1	IF_6
0x3db	          0x4885c0	                           test rax, rax	       113	parser.c	FUNCTION_8	SWITCH_1	IF_6
0x3de	            0x7442	                            je 0x4000462	       113	parser.c	FUNCTION_8	SWITCH_1	IF_6
0x3e0	        0x488b45f8	                mov rax, qword [rbp - 8]	       113	parser.c	FUNCTION_8	SWITCH_1	IF_6
0x3e4	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       113	parser.c	FUNCTION_8	SWITCH_1	IF_6
0x3eb	        0x488b4028	            mov rax, qword [rax + 0x28] 	       113	parser.c	FUNCTION_8	SWITCH_1	IF_6
0x3ef	          0x4885c0	                           test rax, rax	       113	parser.c	FUNCTION_8	SWITCH_1	IF_6
0x3f2	            0x742e	                            je 0x4000462	       113	parser.c	FUNCTION_8	SWITCH_1	IF_6
0x3f4	        0x488b45f8	                mov rax, qword [rbp - 8]	       114	parser.c	FUNCTION_8	SWITCH_1	IF_6	IF_7
0x3f8	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       114	parser.c	FUNCTION_8	SWITCH_1	IF_6	IF_7
0x3ff	        0x488b4028	            mov rax, qword [rax + 0x28] 	       114	parser.c	FUNCTION_8	SWITCH_1	IF_6	IF_7
0x403	        0x488b55f8	                mov rdx, qword [rbp - 8]	       114	parser.c	FUNCTION_8	SWITCH_1	IF_6	IF_7
0x407	    0x488b92d80000	            mov rdx, qword [rdx + 0xd8] 	       114	parser.c	FUNCTION_8	SWITCH_1	IF_6	IF_7
0x40e	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	       114	parser.c	FUNCTION_8	SWITCH_1	IF_6	IF_7
0x412	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       114	parser.c	FUNCTION_8	SWITCH_1	IF_6	IF_7
0x416	          0x4889cf	                            mov rdi, rcx	       114	parser.c	FUNCTION_8	SWITCH_1	IF_6	IF_7
0x419	            0xffd0	                                call rax	       114	parser.c	FUNCTION_8	SWITCH_1	IF_6	IF_7
0x41b	            0x85c0	                           test eax, eax	       114	parser.c	FUNCTION_8	SWITCH_1	IF_6	IF_7
0x41d	            0xeb03	                           jmp 0x4000462	       118	parser.c	FUNCTION_8	SWITCH_1
0x41f	              0x90	                                     nop	       110	parser.c	FUNCTION_8	SWITCH_1
0x420	            0xeb01	                           jmp 0x4000463	       110	parser.c	FUNCTION_8	SWITCH_1
0x422	              0x90	                                     nop	       118	parser.c	FUNCTION_8	SWITCH_1
0x423	              0xc9	                                   leave	       123	parser.c	FUNCTION_8
0x424	              0xc3	                                     ret	       123	parser.c	FUNCTION_8
append_strbuffer	DO,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:FOR,0:IF,2:CALL,2	42
0x1ee	              0x55	                                push rbp	        65	parser.c	FUNCTION_5
0x1ef	          0x4889e5	                            mov rbp, rsp	        65	parser.c	FUNCTION_5
0x1f2	        0x4883ec20	                           sub rsp, 0x20	        65	parser.c	FUNCTION_5
0x1f6	        0x48897df8	                mov qword [rbp - 8], rdi	        65	parser.c	FUNCTION_5
0x1fa	        0x488975f0	             mov qword [rbp - 0x10], rsi	        65	parser.c	FUNCTION_5
0x1fe	        0x488955e8	             mov qword [rbp - 0x18], rdx	        65	parser.c	FUNCTION_5
0x202	        0x488b45f8	                mov rax, qword [rbp - 8]	        66	parser.c	FUNCTION_5	IF_1
0x206	    0x488b90f00000	            mov rdx, qword [rax + 0xf0] 	        66	parser.c	FUNCTION_5	IF_1
0x20d	        0x488b45f8	                mov rax, qword [rbp - 8]	        66	parser.c	FUNCTION_5	IF_1
0x211	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	        66	parser.c	FUNCTION_5	IF_1
0x218	          0x4829c2	                            sub rdx, rax	        66	parser.c	FUNCTION_5	IF_1
0x21b	          0x4889d0	                            mov rax, rdx	        66	parser.c	FUNCTION_5	IF_1
0x21e	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	        66	parser.c	FUNCTION_5	IF_1
0x222	            0x7320	                           jae 0x4000284	        66	parser.c	FUNCTION_5	IF_1
0x224	        0x488b45f8	                mov rax, qword [rbp - 8]	        67	parser.c	FUNCTION_5	IF_1
0x228	    0x488b90f00000	            mov rdx, qword [rax + 0xf0] 	        67	parser.c	FUNCTION_5	IF_1
0x22f	        0x488b45f8	                mov rax, qword [rbp - 8]	        67	parser.c	FUNCTION_5	IF_1
0x233	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	        67	parser.c	FUNCTION_5	IF_1
0x23a	          0x4829c2	                            sub rdx, rax	        67	parser.c	FUNCTION_5	IF_1
0x23d	          0x4889d0	                            mov rax, rdx	        67	parser.c	FUNCTION_5	IF_1
0x240	        0x488945e8	             mov qword [rbp - 0x18], rax	        67	parser.c	FUNCTION_5	IF_1
0x244	      0x48837de800	               cmp qword [rbp - 0x18], 0	        71	parser.c	FUNCTION_5	IF_2
0x249	            0x744a	                            je 0x40002d5	        71	parser.c	FUNCTION_5	IF_2
0x24b	        0x488b45f8	                mov rax, qword [rbp - 8]	        72	parser.c	FUNCTION_5	IF_2	CALL_2
0x24f	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	        72	parser.c	FUNCTION_5	IF_2	CALL_2
0x256	        0x488b45f8	                mov rax, qword [rbp - 8]	        72	parser.c	FUNCTION_5	IF_2	CALL_2
0x25a	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	        72	parser.c	FUNCTION_5	IF_2	CALL_2
0x261	        0x488d0c02	                    lea rcx, [rdx + rax]	        72	parser.c	FUNCTION_5	IF_2	CALL_2
0x265	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        72	parser.c	FUNCTION_5	IF_2	CALL_2
0x269	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        72	parser.c	FUNCTION_5	IF_2	CALL_2
0x26d	          0x4889c6	                            mov rsi, rax	        72	parser.c	FUNCTION_5	IF_2	CALL_2
0x270	          0x4889cf	                            mov rdi, rcx	        72	parser.c	FUNCTION_5	IF_2	CALL_2
0x273	      0xe800000000	                          call 0x40002b8	        72	parser.c	FUNCTION_5	IF_2	CALL_2
0x278	        0x488b45f8	                mov rax, qword [rbp - 8]	        73	parser.c	FUNCTION_5	IF_2
0x27c	    0x488b90f80000	            mov rdx, qword [rax + 0xf8] 	        73	parser.c	FUNCTION_5	IF_2
0x283	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        73	parser.c	FUNCTION_5	IF_2
0x287	          0x4801c2	                            add rdx, rax	        73	parser.c	FUNCTION_5	IF_2
0x28a	        0x488b45f8	                mov rax, qword [rbp - 8]	        73	parser.c	FUNCTION_5	IF_2
0x28e	    0x488990f80000	             mov qword [rax + 0xf8], rdx	        73	parser.c	FUNCTION_5	IF_2
0x295	              0x90	                                     nop	        75	parser.c	FUNCTION_5
0x296	              0xc9	                                   leave	        75	parser.c	FUNCTION_5
0x297	              0xc3	                                     ret	        75	parser.c	FUNCTION_5
start_string	DO,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:FOR,0:IF,0:CALL,0	12
0x298	              0x55	                                push rbp	        78	parser.c	FUNCTION_6
0x299	          0x4889e5	                            mov rbp, rsp	        78	parser.c	FUNCTION_6
0x29c	        0x48897df8	                mov qword [rbp - 8], rdi	        78	parser.c	FUNCTION_6
0x2a0	          0x8975f4	              mov dword [rbp - 0xc], esi	        78	parser.c	FUNCTION_6
0x2a3	        0x488b45f8	                mov rax, qword [rbp - 8]	        79	parser.c	FUNCTION_6
0x2a7	          0x8b55f4	              mov edx, dword [rbp - 0xc]	        79	parser.c	FUNCTION_6
0x2aa	    0x8990e0000000	             mov dword [rax + 0xe0], edx	        79	parser.c	FUNCTION_6
0x2b0	        0x488b45f8	                mov rax, qword [rbp - 8]	        81	parser.c	FUNCTION_6
0x2b4	    0x48c780f80000	               mov qword [rax + 0xf8], 0	        81	parser.c	FUNCTION_6
0x2bf	              0x90	                                     nop	        82	parser.c	FUNCTION_6
0x2c0	              0x5d	                                 pop rbp	        82	parser.c	FUNCTION_6
0x2c1	              0xc3	                                     ret	        82	parser.c	FUNCTION_6
vterm_parser_get_cbdata	DO,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:FOR,0:IF,0:CALL,0	7
0xc95	              0x55	                                push rbp	       344	parser.c	FUNCTION_11
0xc96	          0x4889e5	                            mov rbp, rsp	       344	parser.c	FUNCTION_11
0xc99	        0x48897df8	                mov qword [rbp - 8], rdi	       344	parser.c	FUNCTION_11
0xc9d	        0x488b45f8	                mov rax, qword [rbp - 8]	       345	parser.c	FUNCTION_11
0xca1	    0x488b80d80000	            mov rax, qword [rax + 0xd8] 	       345	parser.c	FUNCTION_11
0xca8	              0x5d	                                 pop rbp	       346	parser.c	FUNCTION_11
0xca9	              0xc3	                                     ret	       346	parser.c	FUNCTION_11
more_string	DO,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:FOR,0:IF,0:CALL,1	15
0x2c2	              0x55	                                push rbp	        85	parser.c	FUNCTION_7
0x2c3	          0x4889e5	                            mov rbp, rsp	        85	parser.c	FUNCTION_7
0x2c6	        0x4883ec20	                           sub rsp, 0x20	        85	parser.c	FUNCTION_7
0x2ca	        0x48897df8	                mov qword [rbp - 8], rdi	        85	parser.c	FUNCTION_7
0x2ce	        0x488975f0	             mov qword [rbp - 0x10], rsi	        85	parser.c	FUNCTION_7
0x2d2	        0x488955e8	             mov qword [rbp - 0x18], rdx	        85	parser.c	FUNCTION_7
0x2d6	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        86	parser.c	FUNCTION_7	CALL_1
0x2da	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	        86	parser.c	FUNCTION_7	CALL_1
0x2de	        0x488b45f8	                mov rax, qword [rbp - 8]	        86	parser.c	FUNCTION_7	CALL_1
0x2e2	          0x4889ce	                            mov rsi, rcx	        86	parser.c	FUNCTION_7	CALL_1
0x2e5	          0x4889c7	                            mov rdi, rax	        86	parser.c	FUNCTION_7	CALL_1
0x2e8	      0xe801ffffff	               call sym.append_strbuffer	        86	parser.c	FUNCTION_7	CALL_1
0x2ed	              0x90	                                     nop	        87	parser.c	FUNCTION_7
0x2ee	              0xc9	                                   leave	        87	parser.c	FUNCTION_7
0x2ef	              0xc3	                                     ret	        87	parser.c	FUNCTION_7
is_intermed	DO,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:FOR,0:IF,0:CALL,0	13
0x0	              0x55	                                push rbp	         9	parser.c	FUNCTION_1
0x1	          0x4889e5	                            mov rbp, rsp	         9	parser.c	FUNCTION_1
0x4	            0x89f8	                            mov eax, edi	         9	parser.c	FUNCTION_1
0x6	          0x8845fc	                  mov byte [rbp - 4], al	         9	parser.c	FUNCTION_1
0x9	        0x807dfc1f	                cmp byte [rbp - 4], 0x1f	        10	parser.c	FUNCTION_1
0xd	            0x760d	                           jbe 0x400005c	        10	parser.c	FUNCTION_1
0xf	        0x807dfc2f	                cmp byte [rbp - 4], 0x2f	        10	parser.c	FUNCTION_1
0x13	            0x7707	                            ja 0x400005c	        10	parser.c	FUNCTION_1
0x15	      0xb801000000	                              mov eax, 1	        10	parser.c	FUNCTION_1
0x1a	            0xeb05	                           jmp 0x4000061	        10	parser.c	FUNCTION_1
0x1c	      0xb800000000	                              mov eax, 0	        10	parser.c	FUNCTION_1
0x21	              0x5d	                                 pop rbp	        11	parser.c	FUNCTION_1
0x22	              0xc3	                                     ret	        11	parser.c	FUNCTION_1
