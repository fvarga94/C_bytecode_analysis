check_mark	DO,0:functions,0:IF,4:SWITCH,0:CALL,6:ELSE,0:WHILE,0:FOR,0	41
0x16a0	              0x55	                                push rbp	       612	mark.c	FUNCTION_14
0x16a1	          0x4889e5	                            mov rbp, rsp	       612	mark.c	FUNCTION_14
0x16a4	        0x4883ec10	                           sub rsp, 0x10	       612	mark.c	FUNCTION_14
0x16a8	        0x48897df8	                mov qword [rbp - 8], rdi	       612	mark.c	FUNCTION_14
0x16ac	      0x48837df800	                  cmp qword [rbp - 8], 0	       613	mark.c	FUNCTION_14	IF_1
0x16b1	            0x7519	                           jne 0x400170c	       613	mark.c	FUNCTION_14	IF_1
0x16b3	      0xbf00000000	                              mov edi, 0	       615	mark.c	FUNCTION_14	IF_1	CALL_2
0x16b8	      0xe800000000	                          call 0x40016fd	       615	mark.c	FUNCTION_14	IF_1	CALL_2
0x16bd	          0x4889c7	                            mov rdi, rax	       615	mark.c	FUNCTION_14	IF_1	CALL_2
0x16c0	      0xe800000000	                          call 0x4001705	       615	mark.c	FUNCTION_14	IF_1	CALL_2
0x16c5	      0xb800000000	                              mov eax, 0	       616	mark.c	FUNCTION_14	IF_1
0x16ca	            0xeb65	                           jmp 0x4001771	       616	mark.c	FUNCTION_14	IF_1
0x16cc	        0x488b45f8	                mov rax, qword [rbp - 8]	       618	mark.c	FUNCTION_14	IF_2
0x16d0	          0x488b00	                    mov rax, qword [rax]	       618	mark.c	FUNCTION_14	IF_2
0x16d3	          0x4885c0	                           test rax, rax	       618	mark.c	FUNCTION_14	IF_2
0x16d6	            0x7f25	                            jg 0x400173d	       618	mark.c	FUNCTION_14	IF_2
0x16d8	        0x488b45f8	                mov rax, qword [rbp - 8]	       622	mark.c	FUNCTION_14	IF_2	IF_3
0x16dc	          0x488b00	                    mov rax, qword [rax]	       622	mark.c	FUNCTION_14	IF_2	IF_3
0x16df	          0x4885c0	                           test rax, rax	       622	mark.c	FUNCTION_14	IF_2	IF_3
0x16e2	            0x7512	                           jne 0x4001736	       622	mark.c	FUNCTION_14	IF_2	IF_3
0x16e4	      0xbf00000000	                              mov edi, 0	       623	mark.c	FUNCTION_14	IF_2	CALL_4
0x16e9	      0xe800000000	                          call 0x400172e	       623	mark.c	FUNCTION_14	IF_2	CALL_4
0x16ee	          0x4889c7	                            mov rdi, rax	       623	mark.c	FUNCTION_14	IF_2	CALL_4
0x16f1	      0xe800000000	                          call 0x4001736	       623	mark.c	FUNCTION_14	IF_2	CALL_4
0x16f6	      0xb800000000	                              mov eax, 0	       624	mark.c	FUNCTION_14	IF_2
0x16fb	            0xeb34	                           jmp 0x4001771	       624	mark.c	FUNCTION_14	IF_2
0x16fd	        0x488b45f8	                mov rax, qword [rbp - 8]	       626	mark.c	FUNCTION_14	IF_4
0x1701	          0x488b10	                    mov rdx, qword [rax]	       626	mark.c	FUNCTION_14	IF_4
0x1704	    0x488b05000000	            mov rax, qword [0x0400174b] 	       626	mark.c	FUNCTION_14	IF_4
0x170b	          0x488b00	                    mov rax, qword [rax]	       626	mark.c	FUNCTION_14	IF_4
0x170e	          0x4839c2	                            cmp rdx, rax	       626	mark.c	FUNCTION_14	IF_4
0x1711	            0x7e19	                           jle 0x400176c	       626	mark.c	FUNCTION_14	IF_4
0x1713	      0xbf00000000	                              mov edi, 0	       628	mark.c	FUNCTION_14	IF_4	CALL_6
0x1718	      0xe800000000	                          call 0x400175d	       628	mark.c	FUNCTION_14	IF_4	CALL_6
0x171d	          0x4889c7	                            mov rdi, rax	       628	mark.c	FUNCTION_14	IF_4	CALL_6
0x1720	      0xe800000000	                          call 0x4001765	       628	mark.c	FUNCTION_14	IF_4	CALL_6
0x1725	      0xb800000000	                              mov eax, 0	       629	mark.c	FUNCTION_14	IF_4
0x172a	            0xeb05	                           jmp 0x4001771	       629	mark.c	FUNCTION_14	IF_4
0x172c	      0xb801000000	                              mov eax, 1	       631	mark.c	FUNCTION_14
0x1731	              0xc9	                                   leave	       632	mark.c	FUNCTION_14
0x1732	              0xc3	                                     ret	       632	mark.c	FUNCTION_14
movemark	DO,0:functions,0:IF,8:SWITCH,0:CALL,5:ELSE,1:WHILE,0:FOR,1	114
0x5e2	              0x55	                                push rbp	       225	mark.c	FUNCTION_5
0x5e3	          0x4889e5	                            mov rbp, rsp	       225	mark.c	FUNCTION_5
0x5e6	        0x4883ec20	                           sub rsp, 0x20	       225	mark.c	FUNCTION_5
0x5ea	          0x897dec	             mov dword [rbp - 0x14], edi	       225	mark.c	FUNCTION_5
0x5ed	      0xe8cf370000	               call sym.cleanup_jumplist	       229	mark.c	FUNCTION_5	CALL_1
0x5f2	    0x488b05000000	            mov rax, qword [0x04000639] 	       231	mark.c	FUNCTION_5	IF_1
0x5f9	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	       231	mark.c	FUNCTION_5	IF_1
0x5ff	            0x85c0	                           test eax, eax	       231	mark.c	FUNCTION_5	IF_1
0x601	            0x750a	                           jne 0x400064d	       231	mark.c	FUNCTION_5	IF_1
0x603	      0xb800000000	                              mov eax, 0	       232	mark.c	FUNCTION_5	IF_1
0x608	      0xe9a4010000	                           jmp 0x40007f1	       232	mark.c	FUNCTION_5	IF_1
0x60d	    0x488b05000000	            mov rax, qword [0x04000654] 	       236	mark.c	FUNCTION_5	FOR_1	IF_2
0x614	    0x8b9044150000	          mov edx, dword [rax + 0x1544] 	       236	mark.c	FUNCTION_5	FOR_1	IF_2
0x61a	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       236	mark.c	FUNCTION_5	FOR_1	IF_2
0x61d	             0x1d0	                            add eax, edx	       236	mark.c	FUNCTION_5	FOR_1	IF_2
0x61f	            0x85c0	                           test eax, eax	       236	mark.c	FUNCTION_5	FOR_1	IF_2
0x621	            0x7823	                            js 0x4000686	       236	mark.c	FUNCTION_5	FOR_1	IF_2
0x623	    0x488b05000000	            mov rax, qword [0x0400066a] 	       237	mark.c	FUNCTION_5	FOR_1	IF_2
0x62a	    0x8b9044150000	          mov edx, dword [rax + 0x1544] 	       237	mark.c	FUNCTION_5	FOR_1	IF_2
0x630	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       237	mark.c	FUNCTION_5	FOR_1	IF_2
0x633	             0x1c2	                            add edx, eax	       237	mark.c	FUNCTION_5	FOR_1	IF_2
0x635	    0x488b05000000	            mov rax, qword [0x0400067c] 	       237	mark.c	FUNCTION_5	FOR_1	IF_2
0x63c	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	       237	mark.c	FUNCTION_5	FOR_1	IF_2
0x642	            0x39c2	                            cmp edx, eax	       237	mark.c	FUNCTION_5	FOR_1	IF_2
0x644	            0x7c0a	                            jl 0x4000690	       237	mark.c	FUNCTION_5	FOR_1	IF_2
0x646	      0xb800000000	                              mov eax, 0	       238	mark.c	FUNCTION_5	FOR_1	IF_2
0x64b	      0xe961010000	                           jmp 0x40007f1	       238	mark.c	FUNCTION_5	FOR_1	IF_2
0x650	    0x488b05000000	            mov rax, qword [0x04000697] 	       245	mark.c	FUNCTION_5	FOR_1	IF_3
0x657	    0x8b9044150000	          mov edx, dword [rax + 0x1544] 	       245	mark.c	FUNCTION_5	FOR_1	IF_3
0x65d	    0x488b05000000	            mov rax, qword [0x040006a4] 	       245	mark.c	FUNCTION_5	FOR_1	IF_3
0x664	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	       245	mark.c	FUNCTION_5	FOR_1	IF_3
0x66a	            0x39c2	                            cmp edx, eax	       245	mark.c	FUNCTION_5	FOR_1	IF_3
0x66c	            0x753b	                           jne 0x40006e9	       245	mark.c	FUNCTION_5	FOR_1	IF_3
0x66e	      0xe800000000	                          call 0x40006b3	       247	mark.c	FUNCTION_5	FOR_1	IF_3	CALL_2
0x673	    0x488b05000000	            mov rax, qword [0x040006ba] 	       248	mark.c	FUNCTION_5	FOR_1	IF_3
0x67a	    0x8b9044150000	          mov edx, dword [rax + 0x1544] 	       248	mark.c	FUNCTION_5	FOR_1	IF_3
0x680	          0x83ea01	                              sub edx, 1	       248	mark.c	FUNCTION_5	FOR_1	IF_3
0x683	    0x899044150000	          mov dword [rax + 0x1544], edx 	       248	mark.c	FUNCTION_5	FOR_1	IF_3
0x689	    0x488b05000000	            mov rax, qword [0x040006d0] 	       249	mark.c	FUNCTION_5	FOR_1	IF_3	IF_4
0x690	    0x8b9044150000	          mov edx, dword [rax + 0x1544] 	       249	mark.c	FUNCTION_5	FOR_1	IF_3	IF_4
0x696	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       249	mark.c	FUNCTION_5	FOR_1	IF_3	IF_4
0x699	             0x1d0	                            add eax, edx	       249	mark.c	FUNCTION_5	FOR_1	IF_3	IF_4
0x69b	            0x85c0	                           test eax, eax	       249	mark.c	FUNCTION_5	FOR_1	IF_3	IF_4
0x69d	            0x790a	                           jns 0x40006e9	       249	mark.c	FUNCTION_5	FOR_1	IF_3	IF_4
0x69f	      0xb800000000	                              mov eax, 0	       250	mark.c	FUNCTION_5	FOR_1	IF_3	IF_4
0x6a4	      0xe908010000	                           jmp 0x40007f1	       250	mark.c	FUNCTION_5	FOR_1	IF_3	IF_4
0x6a9	    0x488b05000000	            mov rax, qword [0x040006f0] 	       253	mark.c	FUNCTION_5	FOR_1
0x6b0	    0x488b15000000	            mov rdx, qword [0x040006f7] 	       253	mark.c	FUNCTION_5	FOR_1
0x6b7	    0x8b8a44150000	          mov ecx, dword [rdx + 0x1544] 	       253	mark.c	FUNCTION_5	FOR_1
0x6bd	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       253	mark.c	FUNCTION_5	FOR_1
0x6c0	             0x1ca	                            add edx, ecx	       253	mark.c	FUNCTION_5	FOR_1
0x6c2	    0x899044150000	          mov dword [rax + 0x1544], edx 	       253	mark.c	FUNCTION_5	FOR_1
0x6c8	    0x488b05000000	            mov rax, qword [0x0400070f] 	       255	mark.c	FUNCTION_5	FOR_1
0x6cf	    0x488d88a00500	                  lea rcx, [rax + 0x5a0]	       255	mark.c	FUNCTION_5	FOR_1
0x6d6	    0x488b05000000	            mov rax, qword [0x0400071d] 	       255	mark.c	FUNCTION_5	FOR_1
0x6dd	    0x8b8044150000	          mov eax, dword [rax + 0x1544] 	       255	mark.c	FUNCTION_5	FOR_1
0x6e3	          0x4863d0	                         movsxd rdx, eax	       255	mark.c	FUNCTION_5	FOR_1
0x6e6	          0x4889d0	                            mov rax, rdx	       255	mark.c	FUNCTION_5	FOR_1
0x6e9	        0x48c1e002	                              shl rax, 2	       255	mark.c	FUNCTION_5	FOR_1
0x6ed	          0x4801d0	                            add rax, rdx	       255	mark.c	FUNCTION_5	FOR_1
0x6f0	        0x48c1e003	                              shl rax, 3	       255	mark.c	FUNCTION_5	FOR_1
0x6f4	          0x4801c8	                            add rax, rcx	       255	mark.c	FUNCTION_5	FOR_1
0x6f7	        0x488945f8	                mov qword [rbp - 8], rax	       255	mark.c	FUNCTION_5	FOR_1
0x6fb	        0x488b45f8	                mov rax, qword [rbp - 8]	       256	mark.c	FUNCTION_5	FOR_1	IF_5
0x6ff	          0x8b4010	            mov eax, dword [rax + 0x10] 	       256	mark.c	FUNCTION_5	FOR_1	IF_5
0x702	            0x85c0	                           test eax, eax	       256	mark.c	FUNCTION_5	FOR_1	IF_5
0x704	            0x750c	                           jne 0x4000752	       256	mark.c	FUNCTION_5	FOR_1	IF_5
0x706	        0x488b45f8	                mov rax, qword [rbp - 8]	       257	mark.c	FUNCTION_5	FOR_1	CALL_3
0x70a	          0x4889c7	                            mov rdi, rax	       257	mark.c	FUNCTION_5	FOR_1	CALL_3
0x70d	      0xe8fa0c0000	                     call sym.fname2fnum	       257	mark.c	FUNCTION_5	FOR_1	CALL_3
0x712	        0x488b45f8	                mov rax, qword [rbp - 8]	       258	mark.c	FUNCTION_5	FOR_1	IF_6
0x716	          0x8b5010	            mov edx, dword [rax + 0x10] 	       258	mark.c	FUNCTION_5	FOR_1	IF_6
0x719	    0x488b05000000	            mov rax, qword [0x04000760] 	       258	mark.c	FUNCTION_5	FOR_1	IF_6
0x720	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	       258	mark.c	FUNCTION_5	FOR_1	IF_6
0x726	            0x39c2	                            cmp edx, eax	       258	mark.c	FUNCTION_5	FOR_1	IF_6
0x728	            0x747b	                            je 0x40007e5	       258	mark.c	FUNCTION_5	FOR_1	IF_6
0x72a	        0x488b45f8	                mov rax, qword [rbp - 8]	       261	mark.c	FUNCTION_5	FOR_1	IF_6	IF_7	CALL_4
0x72e	          0x8b4010	            mov eax, dword [rax + 0x10] 	       261	mark.c	FUNCTION_5	FOR_1	IF_6	IF_7	CALL_4
0x731	            0x89c7	                            mov edi, eax	       261	mark.c	FUNCTION_5	FOR_1	IF_6	IF_7	CALL_4
0x733	      0xe800000000	                          call 0x4000778	       261	mark.c	FUNCTION_5	FOR_1	IF_6	IF_7	CALL_4
0x738	          0x4885c0	                           test rax, rax	       261	mark.c	FUNCTION_5	FOR_1	IF_6	IF_7	CALL_4
0x73b	            0x751a	                           jne 0x4000797	       261	mark.c	FUNCTION_5	FOR_1	IF_6	IF_7	CALL_4
0x73d	        0x837dec00	               cmp dword [rbp - 0x14], 0	       263	mark.c	FUNCTION_5	FOR_1	IF_6	IF_7
0x741	            0x7907	                           jns 0x400078a	       263	mark.c	FUNCTION_5	FOR_1	IF_6	IF_7
0x743	      0xb8ffffffff	                     mov eax, 0xffffffff	       263	mark.c	FUNCTION_5	FOR_1	IF_6	IF_7
0x748	            0xeb05	                           jmp 0x400078f	       263	mark.c	FUNCTION_5	FOR_1	IF_6	IF_7
0x74a	      0xb801000000	                              mov eax, 1	       263	mark.c	FUNCTION_5	FOR_1	IF_6	IF_7
0x74f	           0x145ec	             add dword [rbp - 0x14], eax	       263	mark.c	FUNCTION_5	FOR_1	IF_6	IF_7
0x752	      0xe9b6feffff	                           jmp 0x400064d	       276	mark.c	FUNCTION_5	FOR_1
0x757	        0x488b45f8	                mov rax, qword [rbp - 8]	       266	mark.c	FUNCTION_5	FOR_1	IF_6	IF_8	CALL_5
0x75b	          0x488b30	                    mov rsi, qword [rax]	       266	mark.c	FUNCTION_5	FOR_1	IF_6	IF_8	CALL_5
0x75e	        0x488b45f8	                mov rax, qword [rbp - 8]	       266	mark.c	FUNCTION_5	FOR_1	IF_6	IF_8	CALL_5
0x762	          0x8b4010	            mov eax, dword [rax + 0x10] 	       266	mark.c	FUNCTION_5	FOR_1	IF_6	IF_8	CALL_5
0x765	      0xb900000000	                              mov ecx, 0	       266	mark.c	FUNCTION_5	FOR_1	IF_6	IF_8	CALL_5
0x76a	      0xba00000000	                              mov edx, 0	       266	mark.c	FUNCTION_5	FOR_1	IF_6	IF_8	CALL_5
0x76f	            0x89c7	                            mov edi, eax	       266	mark.c	FUNCTION_5	FOR_1	IF_6	IF_8	CALL_5
0x771	      0xe800000000	                          call 0x40007b6	       266	mark.c	FUNCTION_5	FOR_1	IF_6	IF_8	CALL_5
0x776	            0x85c0	                           test eax, eax	       266	mark.c	FUNCTION_5	FOR_1	IF_6	IF_8	CALL_5
0x778	            0x7507	                           jne 0x40007c1	       266	mark.c	FUNCTION_5	FOR_1	IF_6	IF_8	CALL_5
0x77a	      0xb800000000	                              mov eax, 0	       268	mark.c	FUNCTION_5	FOR_1	IF_6	IF_8
0x77f	            0xeb30	                           jmp 0x40007f1	       268	mark.c	FUNCTION_5	FOR_1	IF_6	IF_8
0x781	    0x488b0d000000	            mov rcx, qword [0x040007c8] 	       270	mark.c	FUNCTION_5	FOR_1	IF_6
0x788	        0x488b45f8	                mov rax, qword [rbp - 8]	       270	mark.c	FUNCTION_5	FOR_1	IF_6
0x78c	        0x488b5008	                mov rdx, qword [rax + 8]	       270	mark.c	FUNCTION_5	FOR_1	IF_6
0x790	          0x488b00	                    mov rax, qword [rax]	       270	mark.c	FUNCTION_5	FOR_1	IF_6
0x793	        0x48894138	             mov qword [rcx + 0x38], rax	       270	mark.c	FUNCTION_5	FOR_1	IF_6
0x797	        0x48895140	             mov qword [rcx + 0x40], rdx	       270	mark.c	FUNCTION_5	FOR_1	IF_6
0x79b	    0x48c745f0ffff	mov qword [rbp - 0x10], 0xffffffffffffffff	       271	mark.c	FUNCTION_5	FOR_1	IF_6
0x7a3	            0xeb08	                           jmp 0x40007ed	       271	mark.c	FUNCTION_5	FOR_1	IF_6
0x7a5	        0x488b45f8	                mov rax, qword [rbp - 8]	       274	mark.c	FUNCTION_5	FOR_1	ELSE_1
0x7a9	        0x488945f0	             mov qword [rbp - 0x10], rax	       274	mark.c	FUNCTION_5	FOR_1	ELSE_1
0x7ad	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       275	mark.c	FUNCTION_5	FOR_1
0x7b1	              0xc9	                                   leave	       277	mark.c	FUNCTION_5
0x7b2	              0xc3	                                     ret	       277	mark.c	FUNCTION_5
mark_col_adjust	DO,0:functions,1:IF,3:SWITCH,0:CALL,11:ELSE,0:WHILE,0:FOR,3	648
0x34cb	              0x55	                                push rbp	      1235	mark.c	FUNCTION_27
0x34cc	          0x4889e5	                            mov rbp, rsp	      1235	mark.c	FUNCTION_27
0x34cf	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1235	mark.c	FUNCTION_27
0x34d3	          0x8975d4	             mov dword [rbp - 0x2c], esi	      1235	mark.c	FUNCTION_27
0x34d6	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1235	mark.c	FUNCTION_27
0x34da	        0x48894dc0	             mov qword [rbp - 0x40], rcx	      1235	mark.c	FUNCTION_27
0x34de	    0x488b05000000	            mov rax, qword [0x04003525] 	      1237	mark.c	FUNCTION_27
0x34e5	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      1237	mark.c	FUNCTION_27
0x34eb	          0x8945ec	             mov dword [rbp - 0x14], eax	      1237	mark.c	FUNCTION_27
0x34ee	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1241	mark.c	FUNCTION_27	IF_1
0x34f3	            0x750b	                           jne 0x4003540	      1241	mark.c	FUNCTION_27	IF_1
0x34f5	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      1241	mark.c	FUNCTION_27	IF_1
0x34fa	     0xf84be080000	                            je 0x4003dfe	      1241	mark.c	FUNCTION_27	IF_1
0x3500	    0x8b0500000000	            mov eax, dword [0x04003546] 	      1241	mark.c	FUNCTION_27	IF_1
0x3506	            0x85c0	                           test eax, eax	      1241	mark.c	FUNCTION_27	IF_1
0x3508	     0xf85b0080000	                           jne 0x4003dfe	      1241	mark.c	FUNCTION_27	IF_1
0x350e	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      1245	mark.c	FUNCTION_27	FOR_1
0x3515	      0xe93d010000	                           jmp 0x4003697	      1245	mark.c	FUNCTION_27	FOR_1
0x351a	    0x488b05000000	            mov rax, qword [0x04003561] 	      1247	mark.c	FUNCTION_27	FOR_1	CALL_1
0x3521	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      1247	mark.c	FUNCTION_27	FOR_1	CALL_1
0x3524	          0x4863d2	                         movsxd rdx, edx	      1247	mark.c	FUNCTION_27	FOR_1	CALL_1
0x3527	        0x4883c214	                           add rdx, 0x14	      1247	mark.c	FUNCTION_27	FOR_1	CALL_1
0x352b	        0x48c1e204	                              shl rdx, 4	      1247	mark.c	FUNCTION_27	FOR_1	CALL_1
0x352f	          0x4801d0	                            add rax, rdx	      1247	mark.c	FUNCTION_27	FOR_1	CALL_1
0x3532	        0x4883c008	                              add rax, 8	      1247	mark.c	FUNCTION_27	FOR_1	CALL_1
0x3536	        0x488945f8	                mov qword [rbp - 8], rax	      1247	mark.c	FUNCTION_27	FOR_1	CALL_1
0x353a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1247	mark.c	FUNCTION_27	FOR_1	CALL_1
0x353e	          0x488b00	                    mov rax, qword [rax]	      1247	mark.c	FUNCTION_27	FOR_1	CALL_1
0x3541	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1247	mark.c	FUNCTION_27	FOR_1	CALL_1
0x3545	            0x755e	                           jne 0x40035e5	      1247	mark.c	FUNCTION_27	FOR_1	CALL_1
0x3547	        0x488b45f8	                mov rax, qword [rbp - 8]	      1247	mark.c	FUNCTION_27	FOR_1	CALL_1
0x354b	          0x8b4008	                mov eax, dword [rax + 8]	      1247	mark.c	FUNCTION_27	FOR_1	CALL_1
0x354e	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      1247	mark.c	FUNCTION_27	FOR_1	CALL_1
0x3551	            0x7c52	                            jl 0x40035e5	      1247	mark.c	FUNCTION_27	FOR_1	CALL_1
0x3553	        0x488b45f8	                mov rax, qword [rbp - 8]	      1247	mark.c	FUNCTION_27	FOR_1	CALL_1
0x3557	          0x488b10	                    mov rdx, qword [rax]	      1247	mark.c	FUNCTION_27	FOR_1	CALL_1
0x355a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1247	mark.c	FUNCTION_27	FOR_1	CALL_1
0x355e	          0x4801c2	                            add rdx, rax	      1247	mark.c	FUNCTION_27	FOR_1	CALL_1
0x3561	        0x488b45f8	                mov rax, qword [rbp - 8]	      1247	mark.c	FUNCTION_27	FOR_1	CALL_1
0x3565	          0x488910	                    mov qword [rax], rdx	      1247	mark.c	FUNCTION_27	FOR_1	CALL_1
0x3568	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1247	mark.c	FUNCTION_27	FOR_1	CALL_1
0x356d	            0x791e	                           jns 0x40035cd	      1247	mark.c	FUNCTION_27	FOR_1	CALL_1
0x356f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1247	mark.c	FUNCTION_27	FOR_1	CALL_1
0x3573	          0x8b4008	                mov eax, dword [rax + 8]	      1247	mark.c	FUNCTION_27	FOR_1	CALL_1
0x3576	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1247	mark.c	FUNCTION_27	FOR_1	CALL_1
0x357a	            0xf7da	                                 neg edx	      1247	mark.c	FUNCTION_27	FOR_1	CALL_1
0x357c	            0x39d0	                            cmp eax, edx	      1247	mark.c	FUNCTION_27	FOR_1	CALL_1
0x357e	            0x7f0d	                            jg 0x40035cd	      1247	mark.c	FUNCTION_27	FOR_1	CALL_1
0x3580	        0x488b45f8	                mov rax, qword [rbp - 8]	      1247	mark.c	FUNCTION_27	FOR_1	CALL_1
0x3584	    0xc74008000000	                  mov dword [rax + 8], 0	      1247	mark.c	FUNCTION_27	FOR_1	CALL_1
0x358b	            0xeb18	                           jmp 0x40035e5	      1247	mark.c	FUNCTION_27	FOR_1	CALL_1
0x358d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1247	mark.c	FUNCTION_27	FOR_1	CALL_1
0x3591	          0x8b4008	                mov eax, dword [rax + 8]	      1247	mark.c	FUNCTION_27	FOR_1	CALL_1
0x3594	            0x89c2	                            mov edx, eax	      1247	mark.c	FUNCTION_27	FOR_1	CALL_1
0x3596	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1247	mark.c	FUNCTION_27	FOR_1	CALL_1
0x359a	             0x1d0	                            add eax, edx	      1247	mark.c	FUNCTION_27	FOR_1	CALL_1
0x359c	            0x89c2	                            mov edx, eax	      1247	mark.c	FUNCTION_27	FOR_1	CALL_1
0x359e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1247	mark.c	FUNCTION_27	FOR_1	CALL_1
0x35a2	          0x895008	                mov dword [rax + 8], edx	      1247	mark.c	FUNCTION_27	FOR_1	CALL_1
0x35a5	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1248	mark.c	FUNCTION_27	FOR_1	IF_2
0x35a8	          0x4863d0	                         movsxd rdx, eax	      1248	mark.c	FUNCTION_27	FOR_1	IF_2
0x35ab	          0x4889d0	                            mov rax, rdx	      1248	mark.c	FUNCTION_27	FOR_1	IF_2
0x35ae	        0x48c1e002	                              shl rax, 2	      1248	mark.c	FUNCTION_27	FOR_1	IF_2
0x35b2	          0x4801d0	                            add rax, rdx	      1248	mark.c	FUNCTION_27	FOR_1	IF_2
0x35b5	        0x48c1e003	                              shl rax, 3	      1248	mark.c	FUNCTION_27	FOR_1	IF_2
0x35b9	    0x480500000000	                              add rax, 0	      1248	mark.c	FUNCTION_27	FOR_1	IF_2
0x35bf	            0x8b00	                    mov eax, dword [rax]	      1248	mark.c	FUNCTION_27	FOR_1	IF_2
0x35c1	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      1248	mark.c	FUNCTION_27	FOR_1	IF_2
0x35c4	     0xf8589000000	                           jne 0x4003693	      1248	mark.c	FUNCTION_27	FOR_1	IF_2
0x35ca	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1249	mark.c	FUNCTION_27	FOR_1	CALL_2
0x35cd	          0x4863d0	                         movsxd rdx, eax	      1249	mark.c	FUNCTION_27	FOR_1	CALL_2
0x35d0	          0x4889d0	                            mov rax, rdx	      1249	mark.c	FUNCTION_27	FOR_1	CALL_2
0x35d3	        0x48c1e002	                              shl rax, 2	      1249	mark.c	FUNCTION_27	FOR_1	CALL_2
0x35d7	          0x4801d0	                            add rax, rdx	      1249	mark.c	FUNCTION_27	FOR_1	CALL_2
0x35da	        0x48c1e003	                              shl rax, 3	      1249	mark.c	FUNCTION_27	FOR_1	CALL_2
0x35de	    0x480500000000	                              add rax, 0	      1249	mark.c	FUNCTION_27	FOR_1	CALL_2
0x35e4	        0x488945f8	                mov qword [rbp - 8], rax	      1249	mark.c	FUNCTION_27	FOR_1	CALL_2
0x35e8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1249	mark.c	FUNCTION_27	FOR_1	CALL_2
0x35ec	          0x488b00	                    mov rax, qword [rax]	      1249	mark.c	FUNCTION_27	FOR_1	CALL_2
0x35ef	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1249	mark.c	FUNCTION_27	FOR_1	CALL_2
0x35f3	            0x755e	                           jne 0x4003693	      1249	mark.c	FUNCTION_27	FOR_1	CALL_2
0x35f5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1249	mark.c	FUNCTION_27	FOR_1	CALL_2
0x35f9	          0x8b4008	                mov eax, dword [rax + 8]	      1249	mark.c	FUNCTION_27	FOR_1	CALL_2
0x35fc	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      1249	mark.c	FUNCTION_27	FOR_1	CALL_2
0x35ff	            0x7c52	                            jl 0x4003693	      1249	mark.c	FUNCTION_27	FOR_1	CALL_2
0x3601	        0x488b45f8	                mov rax, qword [rbp - 8]	      1249	mark.c	FUNCTION_27	FOR_1	CALL_2
0x3605	          0x488b10	                    mov rdx, qword [rax]	      1249	mark.c	FUNCTION_27	FOR_1	CALL_2
0x3608	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1249	mark.c	FUNCTION_27	FOR_1	CALL_2
0x360c	          0x4801c2	                            add rdx, rax	      1249	mark.c	FUNCTION_27	FOR_1	CALL_2
0x360f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1249	mark.c	FUNCTION_27	FOR_1	CALL_2
0x3613	          0x488910	                    mov qword [rax], rdx	      1249	mark.c	FUNCTION_27	FOR_1	CALL_2
0x3616	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1249	mark.c	FUNCTION_27	FOR_1	CALL_2
0x361b	            0x791e	                           jns 0x400367b	      1249	mark.c	FUNCTION_27	FOR_1	CALL_2
0x361d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1249	mark.c	FUNCTION_27	FOR_1	CALL_2
0x3621	          0x8b4008	                mov eax, dword [rax + 8]	      1249	mark.c	FUNCTION_27	FOR_1	CALL_2
0x3624	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1249	mark.c	FUNCTION_27	FOR_1	CALL_2
0x3628	            0xf7da	                                 neg edx	      1249	mark.c	FUNCTION_27	FOR_1	CALL_2
0x362a	            0x39d0	                            cmp eax, edx	      1249	mark.c	FUNCTION_27	FOR_1	CALL_2
0x362c	            0x7f0d	                            jg 0x400367b	      1249	mark.c	FUNCTION_27	FOR_1	CALL_2
0x362e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1249	mark.c	FUNCTION_27	FOR_1	CALL_2
0x3632	    0xc74008000000	                  mov dword [rax + 8], 0	      1249	mark.c	FUNCTION_27	FOR_1	CALL_2
0x3639	            0xeb18	                           jmp 0x4003693	      1249	mark.c	FUNCTION_27	FOR_1	CALL_2
0x363b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1249	mark.c	FUNCTION_27	FOR_1	CALL_2
0x363f	          0x8b4008	                mov eax, dword [rax + 8]	      1249	mark.c	FUNCTION_27	FOR_1	CALL_2
0x3642	            0x89c2	                            mov edx, eax	      1249	mark.c	FUNCTION_27	FOR_1	CALL_2
0x3644	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1249	mark.c	FUNCTION_27	FOR_1	CALL_2
0x3648	             0x1d0	                            add eax, edx	      1249	mark.c	FUNCTION_27	FOR_1	CALL_2
0x364a	            0x89c2	                            mov edx, eax	      1249	mark.c	FUNCTION_27	FOR_1	CALL_2
0x364c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1249	mark.c	FUNCTION_27	FOR_1	CALL_2
0x3650	          0x895008	                mov dword [rax + 8], edx	      1249	mark.c	FUNCTION_27	FOR_1	CALL_2
0x3653	        0x8345e801	               add dword [rbp - 0x18], 1	      1245	mark.c	FUNCTION_27	FOR_1
0x3657	        0x837de819	           cmp dword [rbp - 0x18], 0x19 	      1245	mark.c	FUNCTION_27	FOR_1
0x365b	     0xf8eb9feffff	                           jle 0x400355a	      1245	mark.c	FUNCTION_27	FOR_1
0x3661	    0xc745e81a0000	           mov dword [rbp - 0x18], 0x1a 	      1251	mark.c	FUNCTION_27	FOR_2
0x3668	      0xe9b2000000	                           jmp 0x400375f	      1251	mark.c	FUNCTION_27	FOR_2
0x366d	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1253	mark.c	FUNCTION_27	FOR_2	IF_3
0x3670	          0x4863d0	                         movsxd rdx, eax	      1253	mark.c	FUNCTION_27	FOR_2	IF_3
0x3673	          0x4889d0	                            mov rax, rdx	      1253	mark.c	FUNCTION_27	FOR_2	IF_3
0x3676	        0x48c1e002	                              shl rax, 2	      1253	mark.c	FUNCTION_27	FOR_2	IF_3
0x367a	          0x4801d0	                            add rax, rdx	      1253	mark.c	FUNCTION_27	FOR_2	IF_3
0x367d	        0x48c1e003	                              shl rax, 3	      1253	mark.c	FUNCTION_27	FOR_2	IF_3
0x3681	    0x480500000000	                              add rax, 0	      1253	mark.c	FUNCTION_27	FOR_2	IF_3
0x3687	            0x8b00	                    mov eax, dword [rax]	      1253	mark.c	FUNCTION_27	FOR_2	IF_3
0x3689	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      1253	mark.c	FUNCTION_27	FOR_2	IF_3
0x368c	     0xf8589000000	                           jne 0x400375b	      1253	mark.c	FUNCTION_27	FOR_2	IF_3
0x3692	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1254	mark.c	FUNCTION_27	FOR_2	CALL_3
0x3695	          0x4863d0	                         movsxd rdx, eax	      1254	mark.c	FUNCTION_27	FOR_2	CALL_3
0x3698	          0x4889d0	                            mov rax, rdx	      1254	mark.c	FUNCTION_27	FOR_2	CALL_3
0x369b	        0x48c1e002	                              shl rax, 2	      1254	mark.c	FUNCTION_27	FOR_2	CALL_3
0x369f	          0x4801d0	                            add rax, rdx	      1254	mark.c	FUNCTION_27	FOR_2	CALL_3
0x36a2	        0x48c1e003	                              shl rax, 3	      1254	mark.c	FUNCTION_27	FOR_2	CALL_3
0x36a6	    0x480500000000	                              add rax, 0	      1254	mark.c	FUNCTION_27	FOR_2	CALL_3
0x36ac	        0x488945f8	                mov qword [rbp - 8], rax	      1254	mark.c	FUNCTION_27	FOR_2	CALL_3
0x36b0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1254	mark.c	FUNCTION_27	FOR_2	CALL_3
0x36b4	          0x488b00	                    mov rax, qword [rax]	      1254	mark.c	FUNCTION_27	FOR_2	CALL_3
0x36b7	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1254	mark.c	FUNCTION_27	FOR_2	CALL_3
0x36bb	            0x755e	                           jne 0x400375b	      1254	mark.c	FUNCTION_27	FOR_2	CALL_3
0x36bd	        0x488b45f8	                mov rax, qword [rbp - 8]	      1254	mark.c	FUNCTION_27	FOR_2	CALL_3
0x36c1	          0x8b4008	                mov eax, dword [rax + 8]	      1254	mark.c	FUNCTION_27	FOR_2	CALL_3
0x36c4	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      1254	mark.c	FUNCTION_27	FOR_2	CALL_3
0x36c7	            0x7c52	                            jl 0x400375b	      1254	mark.c	FUNCTION_27	FOR_2	CALL_3
0x36c9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1254	mark.c	FUNCTION_27	FOR_2	CALL_3
0x36cd	          0x488b10	                    mov rdx, qword [rax]	      1254	mark.c	FUNCTION_27	FOR_2	CALL_3
0x36d0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1254	mark.c	FUNCTION_27	FOR_2	CALL_3
0x36d4	          0x4801c2	                            add rdx, rax	      1254	mark.c	FUNCTION_27	FOR_2	CALL_3
0x36d7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1254	mark.c	FUNCTION_27	FOR_2	CALL_3
0x36db	          0x488910	                    mov qword [rax], rdx	      1254	mark.c	FUNCTION_27	FOR_2	CALL_3
0x36de	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1254	mark.c	FUNCTION_27	FOR_2	CALL_3
0x36e3	            0x791e	                           jns 0x4003743	      1254	mark.c	FUNCTION_27	FOR_2	CALL_3
0x36e5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1254	mark.c	FUNCTION_27	FOR_2	CALL_3
0x36e9	          0x8b4008	                mov eax, dword [rax + 8]	      1254	mark.c	FUNCTION_27	FOR_2	CALL_3
0x36ec	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1254	mark.c	FUNCTION_27	FOR_2	CALL_3
0x36f0	            0xf7da	                                 neg edx	      1254	mark.c	FUNCTION_27	FOR_2	CALL_3
0x36f2	            0x39d0	                            cmp eax, edx	      1254	mark.c	FUNCTION_27	FOR_2	CALL_3
0x36f4	            0x7f0d	                            jg 0x4003743	      1254	mark.c	FUNCTION_27	FOR_2	CALL_3
0x36f6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1254	mark.c	FUNCTION_27	FOR_2	CALL_3
0x36fa	    0xc74008000000	                  mov dword [rax + 8], 0	      1254	mark.c	FUNCTION_27	FOR_2	CALL_3
0x3701	            0xeb18	                           jmp 0x400375b	      1254	mark.c	FUNCTION_27	FOR_2	CALL_3
0x3703	        0x488b45f8	                mov rax, qword [rbp - 8]	      1254	mark.c	FUNCTION_27	FOR_2	CALL_3
0x3707	          0x8b4008	                mov eax, dword [rax + 8]	      1254	mark.c	FUNCTION_27	FOR_2	CALL_3
0x370a	            0x89c2	                            mov edx, eax	      1254	mark.c	FUNCTION_27	FOR_2	CALL_3
0x370c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1254	mark.c	FUNCTION_27	FOR_2	CALL_3
0x3710	             0x1d0	                            add eax, edx	      1254	mark.c	FUNCTION_27	FOR_2	CALL_3
0x3712	            0x89c2	                            mov edx, eax	      1254	mark.c	FUNCTION_27	FOR_2	CALL_3
0x3714	        0x488b45f8	                mov rax, qword [rbp - 8]	      1254	mark.c	FUNCTION_27	FOR_2	CALL_3
0x3718	          0x895008	                mov dword [rax + 8], edx	      1254	mark.c	FUNCTION_27	FOR_2	CALL_3
0x371b	        0x8345e801	               add dword [rbp - 0x18], 1	      1251	mark.c	FUNCTION_27	FOR_2
0x371f	        0x837de823	           cmp dword [rbp - 0x18], 0x23 	      1251	mark.c	FUNCTION_27	FOR_2
0x3723	     0xf8e44ffffff	                           jle 0x40036ad	      1251	mark.c	FUNCTION_27	FOR_2
0x3729	    0x488b05000000	            mov rax, qword [0x04003770] 	      1258	mark.c	FUNCTION_27	CALL_4
0x3730	    0x480528030000	                          add rax, 0x328	      1258	mark.c	FUNCTION_27	CALL_4
0x3736	        0x488945f8	                mov qword [rbp - 8], rax	      1258	mark.c	FUNCTION_27	CALL_4
0x373a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1258	mark.c	FUNCTION_27	CALL_4
0x373e	          0x488b00	                    mov rax, qword [rax]	      1258	mark.c	FUNCTION_27	CALL_4
0x3741	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1258	mark.c	FUNCTION_27	CALL_4
0x3745	            0x755e	                           jne 0x40037e5	      1258	mark.c	FUNCTION_27	CALL_4
0x3747	        0x488b45f8	                mov rax, qword [rbp - 8]	      1258	mark.c	FUNCTION_27	CALL_4
0x374b	          0x8b4008	                mov eax, dword [rax + 8]	      1258	mark.c	FUNCTION_27	CALL_4
0x374e	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      1258	mark.c	FUNCTION_27	CALL_4
0x3751	            0x7c52	                            jl 0x40037e5	      1258	mark.c	FUNCTION_27	CALL_4
0x3753	        0x488b45f8	                mov rax, qword [rbp - 8]	      1258	mark.c	FUNCTION_27	CALL_4
0x3757	          0x488b10	                    mov rdx, qword [rax]	      1258	mark.c	FUNCTION_27	CALL_4
0x375a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1258	mark.c	FUNCTION_27	CALL_4
0x375e	          0x4801c2	                            add rdx, rax	      1258	mark.c	FUNCTION_27	CALL_4
0x3761	        0x488b45f8	                mov rax, qword [rbp - 8]	      1258	mark.c	FUNCTION_27	CALL_4
0x3765	          0x488910	                    mov qword [rax], rdx	      1258	mark.c	FUNCTION_27	CALL_4
0x3768	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1258	mark.c	FUNCTION_27	CALL_4
0x376d	            0x791e	                           jns 0x40037cd	      1258	mark.c	FUNCTION_27	CALL_4
0x376f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1258	mark.c	FUNCTION_27	CALL_4
0x3773	          0x8b4008	                mov eax, dword [rax + 8]	      1258	mark.c	FUNCTION_27	CALL_4
0x3776	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1258	mark.c	FUNCTION_27	CALL_4
0x377a	            0xf7da	                                 neg edx	      1258	mark.c	FUNCTION_27	CALL_4
0x377c	            0x39d0	                            cmp eax, edx	      1258	mark.c	FUNCTION_27	CALL_4
0x377e	            0x7f0d	                            jg 0x40037cd	      1258	mark.c	FUNCTION_27	CALL_4
0x3780	        0x488b45f8	                mov rax, qword [rbp - 8]	      1258	mark.c	FUNCTION_27	CALL_4
0x3784	    0xc74008000000	                  mov dword [rax + 8], 0	      1258	mark.c	FUNCTION_27	CALL_4
0x378b	            0xeb18	                           jmp 0x40037e5	      1258	mark.c	FUNCTION_27	CALL_4
0x378d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1258	mark.c	FUNCTION_27	CALL_4
0x3791	          0x8b4008	                mov eax, dword [rax + 8]	      1258	mark.c	FUNCTION_27	CALL_4
0x3794	            0x89c2	                            mov edx, eax	      1258	mark.c	FUNCTION_27	CALL_4
0x3796	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1258	mark.c	FUNCTION_27	CALL_4
0x379a	             0x1d0	                            add eax, edx	      1258	mark.c	FUNCTION_27	CALL_4
0x379c	            0x89c2	                            mov edx, eax	      1258	mark.c	FUNCTION_27	CALL_4
0x379e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1258	mark.c	FUNCTION_27	CALL_4
0x37a2	          0x895008	                mov dword [rax + 8], edx	      1258	mark.c	FUNCTION_27	CALL_4
0x37a5	    0x488b05000000	            mov rax, qword [0x040037ec] 	      1261	mark.c	FUNCTION_27	CALL_5
0x37ac	    0x480538030000	                          add rax, 0x338	      1261	mark.c	FUNCTION_27	CALL_5
0x37b2	        0x488945f8	                mov qword [rbp - 8], rax	      1261	mark.c	FUNCTION_27	CALL_5
0x37b6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1261	mark.c	FUNCTION_27	CALL_5
0x37ba	          0x488b00	                    mov rax, qword [rax]	      1261	mark.c	FUNCTION_27	CALL_5
0x37bd	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1261	mark.c	FUNCTION_27	CALL_5
0x37c1	            0x755e	                           jne 0x4003861	      1261	mark.c	FUNCTION_27	CALL_5
0x37c3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1261	mark.c	FUNCTION_27	CALL_5
0x37c7	          0x8b4008	                mov eax, dword [rax + 8]	      1261	mark.c	FUNCTION_27	CALL_5
0x37ca	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      1261	mark.c	FUNCTION_27	CALL_5
0x37cd	            0x7c52	                            jl 0x4003861	      1261	mark.c	FUNCTION_27	CALL_5
0x37cf	        0x488b45f8	                mov rax, qword [rbp - 8]	      1261	mark.c	FUNCTION_27	CALL_5
0x37d3	          0x488b10	                    mov rdx, qword [rax]	      1261	mark.c	FUNCTION_27	CALL_5
0x37d6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1261	mark.c	FUNCTION_27	CALL_5
0x37da	          0x4801c2	                            add rdx, rax	      1261	mark.c	FUNCTION_27	CALL_5
0x37dd	        0x488b45f8	                mov rax, qword [rbp - 8]	      1261	mark.c	FUNCTION_27	CALL_5
0x37e1	          0x488910	                    mov qword [rax], rdx	      1261	mark.c	FUNCTION_27	CALL_5
0x37e4	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1261	mark.c	FUNCTION_27	CALL_5
0x37e9	            0x791e	                           jns 0x4003849	      1261	mark.c	FUNCTION_27	CALL_5
0x37eb	        0x488b45f8	                mov rax, qword [rbp - 8]	      1261	mark.c	FUNCTION_27	CALL_5
0x37ef	          0x8b4008	                mov eax, dword [rax + 8]	      1261	mark.c	FUNCTION_27	CALL_5
0x37f2	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1261	mark.c	FUNCTION_27	CALL_5
0x37f6	            0xf7da	                                 neg edx	      1261	mark.c	FUNCTION_27	CALL_5
0x37f8	            0x39d0	                            cmp eax, edx	      1261	mark.c	FUNCTION_27	CALL_5
0x37fa	            0x7f0d	                            jg 0x4003849	      1261	mark.c	FUNCTION_27	CALL_5
0x37fc	        0x488b45f8	                mov rax, qword [rbp - 8]	      1261	mark.c	FUNCTION_27	CALL_5
0x3800	    0xc74008000000	                  mov dword [rax + 8], 0	      1261	mark.c	FUNCTION_27	CALL_5
0x3807	            0xeb18	                           jmp 0x4003861	      1261	mark.c	FUNCTION_27	CALL_5
0x3809	        0x488b45f8	                mov rax, qword [rbp - 8]	      1261	mark.c	FUNCTION_27	CALL_5
0x380d	          0x8b4008	                mov eax, dword [rax + 8]	      1261	mark.c	FUNCTION_27	CALL_5
0x3810	            0x89c2	                            mov edx, eax	      1261	mark.c	FUNCTION_27	CALL_5
0x3812	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1261	mark.c	FUNCTION_27	CALL_5
0x3816	             0x1d0	                            add eax, edx	      1261	mark.c	FUNCTION_27	CALL_5
0x3818	            0x89c2	                            mov edx, eax	      1261	mark.c	FUNCTION_27	CALL_5
0x381a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1261	mark.c	FUNCTION_27	CALL_5
0x381e	          0x895008	                mov dword [rax + 8], edx	      1261	mark.c	FUNCTION_27	CALL_5
0x3821	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      1265	mark.c	FUNCTION_27	FOR_3
0x3828	      0xe98f000000	                           jmp 0x40038fc	      1265	mark.c	FUNCTION_27	FOR_3
0x382d	    0x488b05000000	            mov rax, qword [0x04003874] 	      1266	mark.c	FUNCTION_27	CALL_6
0x3834	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      1266	mark.c	FUNCTION_27	CALL_6
0x3837	          0x4863d2	                         movsxd rdx, edx	      1266	mark.c	FUNCTION_27	CALL_6
0x383a	        0x4883c234	                           add rdx, 0x34	      1266	mark.c	FUNCTION_27	CALL_6
0x383e	        0x48c1e204	                              shl rdx, 4	      1266	mark.c	FUNCTION_27	CALL_6
0x3842	          0x4801d0	                            add rax, rdx	      1266	mark.c	FUNCTION_27	CALL_6
0x3845	        0x4883c008	                              add rax, 8	      1266	mark.c	FUNCTION_27	CALL_6
0x3849	        0x488945f8	                mov qword [rbp - 8], rax	      1266	mark.c	FUNCTION_27	CALL_6
0x384d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1266	mark.c	FUNCTION_27	CALL_6
0x3851	          0x488b00	                    mov rax, qword [rax]	      1266	mark.c	FUNCTION_27	CALL_6
0x3854	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1266	mark.c	FUNCTION_27	CALL_6
0x3858	            0x755e	                           jne 0x40038f8	      1266	mark.c	FUNCTION_27	CALL_6
0x385a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1266	mark.c	FUNCTION_27	CALL_6
0x385e	          0x8b4008	                mov eax, dword [rax + 8]	      1266	mark.c	FUNCTION_27	CALL_6
0x3861	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      1266	mark.c	FUNCTION_27	CALL_6
0x3864	            0x7c52	                            jl 0x40038f8	      1266	mark.c	FUNCTION_27	CALL_6
0x3866	        0x488b45f8	                mov rax, qword [rbp - 8]	      1266	mark.c	FUNCTION_27	CALL_6
0x386a	          0x488b10	                    mov rdx, qword [rax]	      1266	mark.c	FUNCTION_27	CALL_6
0x386d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1266	mark.c	FUNCTION_27	CALL_6
0x3871	          0x4801c2	                            add rdx, rax	      1266	mark.c	FUNCTION_27	CALL_6
0x3874	        0x488b45f8	                mov rax, qword [rbp - 8]	      1266	mark.c	FUNCTION_27	CALL_6
0x3878	          0x488910	                    mov qword [rax], rdx	      1266	mark.c	FUNCTION_27	CALL_6
0x387b	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1266	mark.c	FUNCTION_27	CALL_6
0x3880	            0x791e	                           jns 0x40038e0	      1266	mark.c	FUNCTION_27	CALL_6
0x3882	        0x488b45f8	                mov rax, qword [rbp - 8]	      1266	mark.c	FUNCTION_27	CALL_6
0x3886	          0x8b4008	                mov eax, dword [rax + 8]	      1266	mark.c	FUNCTION_27	CALL_6
0x3889	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1266	mark.c	FUNCTION_27	CALL_6
0x388d	            0xf7da	                                 neg edx	      1266	mark.c	FUNCTION_27	CALL_6
0x388f	            0x39d0	                            cmp eax, edx	      1266	mark.c	FUNCTION_27	CALL_6
0x3891	            0x7f0d	                            jg 0x40038e0	      1266	mark.c	FUNCTION_27	CALL_6
0x3893	        0x488b45f8	                mov rax, qword [rbp - 8]	      1266	mark.c	FUNCTION_27	CALL_6
0x3897	    0xc74008000000	                  mov dword [rax + 8], 0	      1266	mark.c	FUNCTION_27	CALL_6
0x389e	            0xeb18	                           jmp 0x40038f8	      1266	mark.c	FUNCTION_27	CALL_6
0x38a0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1266	mark.c	FUNCTION_27	CALL_6
0x38a4	          0x8b4008	                mov eax, dword [rax + 8]	      1266	mark.c	FUNCTION_27	CALL_6
0x38a7	            0x89c2	                            mov edx, eax	      1266	mark.c	FUNCTION_27	CALL_6
0x38a9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1266	mark.c	FUNCTION_27	CALL_6
0x38ad	             0x1d0	                            add eax, edx	      1266	mark.c	FUNCTION_27	CALL_6
0x38af	            0x89c2	                            mov edx, eax	      1266	mark.c	FUNCTION_27	CALL_6
0x38b1	        0x488b45f8	                mov rax, qword [rbp - 8]	      1266	mark.c	FUNCTION_27	CALL_6
0x38b5	          0x895008	                mov dword [rax + 8], edx	      1266	mark.c	FUNCTION_27	CALL_6
0x38b8	        0x8345e801	               add dword [rbp - 0x18], 1	      1265	mark.c	FUNCTION_27	FOR_3
0x38bc	    0x488b05000000	            mov rax, qword [0x04003903] 	      1265	mark.c	FUNCTION_27	FOR_3
0x38c3	    0x8b8088090000	           mov eax, dword [rax + 0x988] 	      1265	mark.c	FUNCTION_27	FOR_3
0x38c9	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	      1265	mark.c	FUNCTION_27	FOR_3
0x38cc	     0xf8f5bffffff	                            jg 0x400386d	      1265	mark.c	FUNCTION_27	FOR_3
0x38d2	    0x488b05000000	            mov rax, qword [0x04003919] 	      1270	mark.c	FUNCTION_27	CALL_7
0x38d9	    0x4805e8020000	                          add rax, 0x2e8	      1270	mark.c	FUNCTION_27	CALL_7
0x38df	        0x488945f8	                mov qword [rbp - 8], rax	      1270	mark.c	FUNCTION_27	CALL_7
0x38e3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1270	mark.c	FUNCTION_27	CALL_7
0x38e7	          0x488b00	                    mov rax, qword [rax]	      1270	mark.c	FUNCTION_27	CALL_7
0x38ea	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1270	mark.c	FUNCTION_27	CALL_7
0x38ee	            0x755e	                           jne 0x400398e	      1270	mark.c	FUNCTION_27	CALL_7
0x38f0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1270	mark.c	FUNCTION_27	CALL_7
0x38f4	          0x8b4008	                mov eax, dword [rax + 8]	      1270	mark.c	FUNCTION_27	CALL_7
0x38f7	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      1270	mark.c	FUNCTION_27	CALL_7
0x38fa	            0x7c52	                            jl 0x400398e	      1270	mark.c	FUNCTION_27	CALL_7
0x38fc	        0x488b45f8	                mov rax, qword [rbp - 8]	      1270	mark.c	FUNCTION_27	CALL_7
0x3900	          0x488b10	                    mov rdx, qword [rax]	      1270	mark.c	FUNCTION_27	CALL_7
0x3903	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1270	mark.c	FUNCTION_27	CALL_7
0x3907	          0x4801c2	                            add rdx, rax	      1270	mark.c	FUNCTION_27	CALL_7
0x390a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1270	mark.c	FUNCTION_27	CALL_7
0x390e	          0x488910	                    mov qword [rax], rdx	      1270	mark.c	FUNCTION_27	CALL_7
0x3911	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1270	mark.c	FUNCTION_27	CALL_7
0x3916	            0x791e	                           jns 0x4003976	      1270	mark.c	FUNCTION_27	CALL_7
0x3918	        0x488b45f8	                mov rax, qword [rbp - 8]	      1270	mark.c	FUNCTION_27	CALL_7
0x391c	          0x8b4008	                mov eax, dword [rax + 8]	      1270	mark.c	FUNCTION_27	CALL_7
0x391f	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1270	mark.c	FUNCTION_27	CALL_7
0x3923	            0xf7da	                                 neg edx	      1270	mark.c	FUNCTION_27	CALL_7
0x3925	            0x39d0	                            cmp eax, edx	      1270	mark.c	FUNCTION_27	CALL_7
0x3927	            0x7f0d	                            jg 0x4003976	      1270	mark.c	FUNCTION_27	CALL_7
0x3929	        0x488b45f8	                mov rax, qword [rbp - 8]	      1270	mark.c	FUNCTION_27	CALL_7
0x392d	    0xc74008000000	                  mov dword [rax + 8], 0	      1270	mark.c	FUNCTION_27	CALL_7
0x3934	            0xeb18	                           jmp 0x400398e	      1270	mark.c	FUNCTION_27	CALL_7
0x3936	        0x488b45f8	                mov rax, qword [rbp - 8]	      1270	mark.c	FUNCTION_27	CALL_7
0x393a	          0x8b4008	                mov eax, dword [rax + 8]	      1270	mark.c	FUNCTION_27	CALL_7
0x393d	            0x89c2	                            mov edx, eax	      1270	mark.c	FUNCTION_27	CALL_7
0x393f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1270	mark.c	FUNCTION_27	CALL_7
0x3943	             0x1d0	                            add eax, edx	      1270	mark.c	FUNCTION_27	CALL_7
0x3945	            0x89c2	                            mov edx, eax	      1270	mark.c	FUNCTION_27	CALL_7
0x3947	        0x488b45f8	                mov rax, qword [rbp - 8]	      1270	mark.c	FUNCTION_27	CALL_7
0x394b	          0x895008	                mov dword [rax + 8], edx	      1270	mark.c	FUNCTION_27	CALL_7
0x394e	    0x488b05000000	            mov rax, qword [0x04003995] 	      1271	mark.c	FUNCTION_27	CALL_8
0x3955	    0x4805f8020000	                          add rax, 0x2f8	      1271	mark.c	FUNCTION_27	CALL_8
0x395b	        0x488945f8	                mov qword [rbp - 8], rax	      1271	mark.c	FUNCTION_27	CALL_8
0x395f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1271	mark.c	FUNCTION_27	CALL_8
0x3963	          0x488b00	                    mov rax, qword [rax]	      1271	mark.c	FUNCTION_27	CALL_8
0x3966	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1271	mark.c	FUNCTION_27	CALL_8
0x396a	            0x755e	                           jne 0x4003a0a	      1271	mark.c	FUNCTION_27	CALL_8
0x396c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1271	mark.c	FUNCTION_27	CALL_8
0x3970	          0x8b4008	                mov eax, dword [rax + 8]	      1271	mark.c	FUNCTION_27	CALL_8
0x3973	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      1271	mark.c	FUNCTION_27	CALL_8
0x3976	            0x7c52	                            jl 0x4003a0a	      1271	mark.c	FUNCTION_27	CALL_8
0x3978	        0x488b45f8	                mov rax, qword [rbp - 8]	      1271	mark.c	FUNCTION_27	CALL_8
0x397c	          0x488b10	                    mov rdx, qword [rax]	      1271	mark.c	FUNCTION_27	CALL_8
0x397f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1271	mark.c	FUNCTION_27	CALL_8
0x3983	          0x4801c2	                            add rdx, rax	      1271	mark.c	FUNCTION_27	CALL_8
0x3986	        0x488b45f8	                mov rax, qword [rbp - 8]	      1271	mark.c	FUNCTION_27	CALL_8
0x398a	          0x488910	                    mov qword [rax], rdx	      1271	mark.c	FUNCTION_27	CALL_8
0x398d	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1271	mark.c	FUNCTION_27	CALL_8
0x3992	            0x791e	                           jns 0x40039f2	      1271	mark.c	FUNCTION_27	CALL_8
0x3994	        0x488b45f8	                mov rax, qword [rbp - 8]	      1271	mark.c	FUNCTION_27	CALL_8
0x3998	          0x8b4008	                mov eax, dword [rax + 8]	      1271	mark.c	FUNCTION_27	CALL_8
0x399b	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1271	mark.c	FUNCTION_27	CALL_8
0x399f	            0xf7da	                                 neg edx	      1271	mark.c	FUNCTION_27	CALL_8
0x39a1	            0x39d0	                            cmp eax, edx	      1271	mark.c	FUNCTION_27	CALL_8
0x39a3	            0x7f0d	                            jg 0x40039f2	      1271	mark.c	FUNCTION_27	CALL_8
0x39a5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1271	mark.c	FUNCTION_27	CALL_8
0x39a9	    0xc74008000000	                  mov dword [rax + 8], 0	      1271	mark.c	FUNCTION_27	CALL_8
0x39b0	            0xeb18	                           jmp 0x4003a0a	      1271	mark.c	FUNCTION_27	CALL_8
0x39b2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1271	mark.c	FUNCTION_27	CALL_8
0x39b6	          0x8b4008	                mov eax, dword [rax + 8]	      1271	mark.c	FUNCTION_27	CALL_8
0x39b9	            0x89c2	                            mov edx, eax	      1271	mark.c	FUNCTION_27	CALL_8
0x39bb	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1271	mark.c	FUNCTION_27	CALL_8
0x39bf	             0x1d0	                            add eax, edx	      1271	mark.c	FUNCTION_27	CALL_8
0x39c1	            0x89c2	                            mov edx, eax	      1271	mark.c	FUNCTION_27	CALL_8
0x39c3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1271	mark.c	FUNCTION_27	CALL_8
0x39c7	          0x895008	                mov dword [rax + 8], edx	      1271	mark.c	FUNCTION_27	CALL_8
0x39ca	    0x488b05000000	            mov rax, qword [0x04003a11] 	      1274	mark.c	FUNCTION_27	CALL_9
0x39d1	    0x480580050000	                          add rax, 0x580	      1274	mark.c	FUNCTION_27	CALL_9
0x39d7	        0x488945f8	                mov qword [rbp - 8], rax	      1274	mark.c	FUNCTION_27	CALL_9
0x39db	        0x488b45f8	                mov rax, qword [rbp - 8]	      1274	mark.c	FUNCTION_27	CALL_9
0x39df	          0x488b00	                    mov rax, qword [rax]	      1274	mark.c	FUNCTION_27	CALL_9
0x39e2	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1274	mark.c	FUNCTION_27	CALL_9
0x39e6	            0x755e	                           jne 0x4003a86	      1274	mark.c	FUNCTION_27	CALL_9
0x39e8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1274	mark.c	FUNCTION_27	CALL_9
0x39ec	          0x8b4008	                mov eax, dword [rax + 8]	      1274	mark.c	FUNCTION_27	CALL_9
0x39ef	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      1274	mark.c	FUNCTION_27	CALL_9
0x39f2	            0x7c52	                            jl 0x4003a86	      1274	mark.c	FUNCTION_27	CALL_9
0x39f4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1274	mark.c	FUNCTION_27	CALL_9
0x39f8	          0x488b10	                    mov rdx, qword [rax]	      1274	mark.c	FUNCTION_27	CALL_9
0x39fb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1274	mark.c	FUNCTION_27	CALL_9
0x39ff	          0x4801c2	                            add rdx, rax	      1274	mark.c	FUNCTION_27	CALL_9
0x3a02	        0x488b45f8	                mov rax, qword [rbp - 8]	      1274	mark.c	FUNCTION_27	CALL_9
0x3a06	          0x488910	                    mov qword [rax], rdx	      1274	mark.c	FUNCTION_27	CALL_9
0x3a09	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1274	mark.c	FUNCTION_27	CALL_9
0x3a0e	            0x791e	                           jns 0x4003a6e	      1274	mark.c	FUNCTION_27	CALL_9
0x3a10	        0x488b45f8	                mov rax, qword [rbp - 8]	      1274	mark.c	FUNCTION_27	CALL_9
0x3a14	          0x8b4008	                mov eax, dword [rax + 8]	      1274	mark.c	FUNCTION_27	CALL_9
0x3a17	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1274	mark.c	FUNCTION_27	CALL_9
0x3a1b	            0xf7da	                                 neg edx	      1274	mark.c	FUNCTION_27	CALL_9
0x3a1d	            0x39d0	                            cmp eax, edx	      1274	mark.c	FUNCTION_27	CALL_9
0x3a1f	            0x7f0d	                            jg 0x4003a6e	      1274	mark.c	FUNCTION_27	CALL_9
0x3a21	        0x488b45f8	                mov rax, qword [rbp - 8]	      1274	mark.c	FUNCTION_27	CALL_9
0x3a25	    0xc74008000000	                  mov dword [rax + 8], 0	      1274	mark.c	FUNCTION_27	CALL_9
0x3a2c	            0xeb18	                           jmp 0x4003a86	      1274	mark.c	FUNCTION_27	CALL_9
0x3a2e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1274	mark.c	FUNCTION_27	CALL_9
0x3a32	          0x8b4008	                mov eax, dword [rax + 8]	      1274	mark.c	FUNCTION_27	CALL_9
0x3a35	            0x89c2	                            mov edx, eax	      1274	mark.c	FUNCTION_27	CALL_9
0x3a37	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1274	mark.c	FUNCTION_27	CALL_9
0x3a3b	             0x1d0	                            add eax, edx	      1274	mark.c	FUNCTION_27	CALL_9
0x3a3d	            0x89c2	                            mov edx, eax	      1274	mark.c	FUNCTION_27	CALL_9
0x3a3f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1274	mark.c	FUNCTION_27	CALL_9
0x3a43	          0x895008	                mov dword [rax + 8], edx	      1274	mark.c	FUNCTION_27	CALL_9
0x3a46	    0x488b05000000	            mov rax, qword [0x04003a8d] 	      1277	mark.c	FUNCTION_27	CALL_10
0x3a4d	    0x480590050000	                          add rax, 0x590	      1277	mark.c	FUNCTION_27	CALL_10
0x3a53	        0x488945f8	                mov qword [rbp - 8], rax	      1277	mark.c	FUNCTION_27	CALL_10
0x3a57	        0x488b45f8	                mov rax, qword [rbp - 8]	      1277	mark.c	FUNCTION_27	CALL_10
0x3a5b	          0x488b00	                    mov rax, qword [rax]	      1277	mark.c	FUNCTION_27	CALL_10
0x3a5e	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1277	mark.c	FUNCTION_27	CALL_10
0x3a62	            0x755e	                           jne 0x4003b02	      1277	mark.c	FUNCTION_27	CALL_10
0x3a64	        0x488b45f8	                mov rax, qword [rbp - 8]	      1277	mark.c	FUNCTION_27	CALL_10
0x3a68	          0x8b4008	                mov eax, dword [rax + 8]	      1277	mark.c	FUNCTION_27	CALL_10
0x3a6b	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      1277	mark.c	FUNCTION_27	CALL_10
0x3a6e	            0x7c52	                            jl 0x4003b02	      1277	mark.c	FUNCTION_27	CALL_10
0x3a70	        0x488b45f8	                mov rax, qword [rbp - 8]	      1277	mark.c	FUNCTION_27	CALL_10
0x3a74	          0x488b10	                    mov rdx, qword [rax]	      1277	mark.c	FUNCTION_27	CALL_10
0x3a77	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1277	mark.c	FUNCTION_27	CALL_10
0x3a7b	          0x4801c2	                            add rdx, rax	      1277	mark.c	FUNCTION_27	CALL_10
0x3a7e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1277	mark.c	FUNCTION_27	CALL_10
0x3a82	          0x488910	                    mov qword [rax], rdx	      1277	mark.c	FUNCTION_27	CALL_10
0x3a85	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1277	mark.c	FUNCTION_27	CALL_10
0x3a8a	            0x791e	                           jns 0x4003aea	      1277	mark.c	FUNCTION_27	CALL_10
0x3a8c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1277	mark.c	FUNCTION_27	CALL_10
0x3a90	          0x8b4008	                mov eax, dword [rax + 8]	      1277	mark.c	FUNCTION_27	CALL_10
0x3a93	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1277	mark.c	FUNCTION_27	CALL_10
0x3a97	            0xf7da	                                 neg edx	      1277	mark.c	FUNCTION_27	CALL_10
0x3a99	            0x39d0	                            cmp eax, edx	      1277	mark.c	FUNCTION_27	CALL_10
0x3a9b	            0x7f0d	                            jg 0x4003aea	      1277	mark.c	FUNCTION_27	CALL_10
0x3a9d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1277	mark.c	FUNCTION_27	CALL_10
0x3aa1	    0xc74008000000	                  mov dword [rax + 8], 0	      1277	mark.c	FUNCTION_27	CALL_10
0x3aa8	            0xeb18	                           jmp 0x4003b02	      1277	mark.c	FUNCTION_27	CALL_10
0x3aaa	        0x488b45f8	                mov rax, qword [rbp - 8]	      1277	mark.c	FUNCTION_27	CALL_10
0x3aae	          0x8b4008	                mov eax, dword [rax + 8]	      1277	mark.c	FUNCTION_27	CALL_10
0x3ab1	            0x89c2	                            mov edx, eax	      1277	mark.c	FUNCTION_27	CALL_10
0x3ab3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1277	mark.c	FUNCTION_27	CALL_10
0x3ab7	             0x1d0	                            add eax, edx	      1277	mark.c	FUNCTION_27	CALL_10
0x3ab9	            0x89c2	                            mov edx, eax	      1277	mark.c	FUNCTION_27	CALL_10
0x3abb	        0x488b45f8	                mov rax, qword [rbp - 8]	      1277	mark.c	FUNCTION_27	CALL_10
0x3abf	          0x895008	                mov dword [rax + 8], edx	      1277	mark.c	FUNCTION_27	CALL_10
0x3ac2	    0x48c745f80000	                  mov qword [rbp - 8], 0	      1280	mark.c	FUNCTION_27	CALL_11
0x3aca	        0x488b45f8	                mov rax, qword [rbp - 8]	      1280	mark.c	FUNCTION_27	CALL_11
0x3ace	          0x488b00	                    mov rax, qword [rax]	      1280	mark.c	FUNCTION_27	CALL_11
0x3ad1	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1280	mark.c	FUNCTION_27	CALL_11
0x3ad5	            0x755e	                           jne 0x4003b75	      1280	mark.c	FUNCTION_27	CALL_11
0x3ad7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1280	mark.c	FUNCTION_27	CALL_11
0x3adb	          0x8b4008	                mov eax, dword [rax + 8]	      1280	mark.c	FUNCTION_27	CALL_11
0x3ade	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      1280	mark.c	FUNCTION_27	CALL_11
0x3ae1	            0x7c52	                            jl 0x4003b75	      1280	mark.c	FUNCTION_27	CALL_11
0x3ae3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1280	mark.c	FUNCTION_27	CALL_11
0x3ae7	          0x488b10	                    mov rdx, qword [rax]	      1280	mark.c	FUNCTION_27	CALL_11
0x3aea	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1280	mark.c	FUNCTION_27	CALL_11
0x3aee	          0x4801c2	                            add rdx, rax	      1280	mark.c	FUNCTION_27	CALL_11
0x3af1	        0x488b45f8	                mov rax, qword [rbp - 8]	      1280	mark.c	FUNCTION_27	CALL_11
0x3af5	          0x488910	                    mov qword [rax], rdx	      1280	mark.c	FUNCTION_27	CALL_11
0x3af8	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1280	mark.c	FUNCTION_27	CALL_11
0x3afd	            0x791e	                           jns 0x4003b5d	      1280	mark.c	FUNCTION_27	CALL_11
0x3aff	        0x488b45f8	                mov rax, qword [rbp - 8]	      1280	mark.c	FUNCTION_27	CALL_11
0x3b03	          0x8b4008	                mov eax, dword [rax + 8]	      1280	mark.c	FUNCTION_27	CALL_11
0x3b06	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1280	mark.c	FUNCTION_27	CALL_11
0x3b0a	            0xf7da	                                 neg edx	      1280	mark.c	FUNCTION_27	CALL_11
0x3b0c	            0x39d0	                            cmp eax, edx	      1280	mark.c	FUNCTION_27	CALL_11
0x3b0e	            0x7f0d	                            jg 0x4003b5d	      1280	mark.c	FUNCTION_27	CALL_11
0x3b10	        0x488b45f8	                mov rax, qword [rbp - 8]	      1280	mark.c	FUNCTION_27	CALL_11
0x3b14	    0xc74008000000	                  mov dword [rax + 8], 0	      1280	mark.c	FUNCTION_27	CALL_11
0x3b1b	            0xeb18	                           jmp 0x4003b75	      1280	mark.c	FUNCTION_27	CALL_11
0x3b1d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1280	mark.c	FUNCTION_27	CALL_11
0x3b21	          0x8b4008	                mov eax, dword [rax + 8]	      1280	mark.c	FUNCTION_27	CALL_11
0x3b24	            0x89c2	                            mov edx, eax	      1280	mark.c	FUNCTION_27	CALL_11
0x3b26	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1280	mark.c	FUNCTION_27	CALL_11
0x3b2a	             0x1d0	                            add eax, edx	      1280	mark.c	FUNCTION_27	CALL_11
0x3b2c	            0x89c2	                            mov edx, eax	      1280	mark.c	FUNCTION_27	CALL_11
0x3b2e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1280	mark.c	FUNCTION_27	CALL_11
0x3b32	          0x895008	                mov dword [rax + 8], edx	      1280	mark.c	FUNCTION_27	CALL_11
0x3b35	    0x488b05000000	            mov rax, qword [0x04003b7c] 	      1285	mark.c	FUNCTION_27
0x3b3c	        0x488945f0	             mov qword [rbp - 0x10], rax	      1285	mark.c	FUNCTION_27
0x3b40	      0xe96c020000	                           jmp 0x4003df1	      1285	mark.c	FUNCTION_27
0x3b45	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      1289	mark.c	FUNCTION_27	FUNCTION_1	FOR_1
0x3b4c	      0xe9c1000000	                           jmp 0x4003c52	      1289	mark.c	FUNCTION_27	FUNCTION_1	FOR_1
0x3b51	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      1290	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3b55	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1290	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3b58	          0x4863d0	                         movsxd rdx, eax	      1290	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3b5b	          0x4889d0	                            mov rax, rdx	      1290	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3b5e	        0x48c1e002	                              shl rax, 2	      1290	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3b62	          0x4801d0	                            add rax, rdx	      1290	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3b65	        0x48c1e003	                              shl rax, 3	      1290	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3b69	          0x4801c8	                            add rax, rcx	      1290	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3b6c	    0x4805b0050000	                          add rax, 0x5b0	      1290	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3b72	            0x8b00	                    mov eax, dword [rax]	      1290	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3b74	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      1290	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3b77	     0xf8591000000	                           jne 0x4003c4e	      1290	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3b7d	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1291	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3b80	          0x4863d0	                         movsxd rdx, eax	      1291	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3b83	          0x4889d0	                            mov rax, rdx	      1291	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3b86	        0x48c1e002	                              shl rax, 2	      1291	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3b8a	          0x4801d0	                            add rax, rdx	      1291	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3b8d	        0x48c1e003	                              shl rax, 3	      1291	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3b91	    0x488d90a00500	                  lea rdx, [rax + 0x5a0]	      1291	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3b98	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1291	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3b9c	          0x4801d0	                            add rax, rdx	      1291	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3b9f	        0x488945f8	                mov qword [rbp - 8], rax	      1291	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3ba3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1291	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3ba7	          0x488b00	                    mov rax, qword [rax]	      1291	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3baa	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1291	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3bae	            0x755e	                           jne 0x4003c4e	      1291	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3bb0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1291	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3bb4	          0x8b4008	                mov eax, dword [rax + 8]	      1291	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3bb7	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      1291	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3bba	            0x7c52	                            jl 0x4003c4e	      1291	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3bbc	        0x488b45f8	                mov rax, qword [rbp - 8]	      1291	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3bc0	          0x488b10	                    mov rdx, qword [rax]	      1291	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3bc3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1291	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3bc7	          0x4801c2	                            add rdx, rax	      1291	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3bca	        0x488b45f8	                mov rax, qword [rbp - 8]	      1291	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3bce	          0x488910	                    mov qword [rax], rdx	      1291	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3bd1	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1291	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3bd6	            0x791e	                           jns 0x4003c36	      1291	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3bd8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1291	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3bdc	          0x8b4008	                mov eax, dword [rax + 8]	      1291	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3bdf	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1291	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3be3	            0xf7da	                                 neg edx	      1291	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3be5	            0x39d0	                            cmp eax, edx	      1291	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3be7	            0x7f0d	                            jg 0x4003c36	      1291	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3be9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1291	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3bed	    0xc74008000000	                  mov dword [rax + 8], 0	      1291	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3bf4	            0xeb18	                           jmp 0x4003c4e	      1291	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3bf6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1291	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3bfa	          0x8b4008	                mov eax, dword [rax + 8]	      1291	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3bfd	            0x89c2	                            mov edx, eax	      1291	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3bff	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1291	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3c03	             0x1d0	                            add eax, edx	      1291	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3c05	            0x89c2	                            mov edx, eax	      1291	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3c07	        0x488b45f8	                mov rax, qword [rbp - 8]	      1291	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3c0b	          0x895008	                mov dword [rax + 8], edx	      1291	mark.c	FUNCTION_27	FUNCTION_1	FOR_1	IF_1
0x3c0e	        0x8345e801	               add dword [rbp - 0x18], 1	      1289	mark.c	FUNCTION_27	FUNCTION_1	FOR_1
0x3c12	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1289	mark.c	FUNCTION_27	FUNCTION_1	FOR_1
0x3c16	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	      1289	mark.c	FUNCTION_27	FUNCTION_1	FOR_1
0x3c1c	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	      1289	mark.c	FUNCTION_27	FUNCTION_1	FOR_1
0x3c1f	     0xf8f2cffffff	                            jg 0x4003b91	      1289	mark.c	FUNCTION_27	FUNCTION_1	FOR_1
0x3c25	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1294	mark.c	FUNCTION_27	FUNCTION_1	IF_2
0x3c29	        0x488b5008	                mov rdx, qword [rax + 8]	      1294	mark.c	FUNCTION_27	FUNCTION_1	IF_2
0x3c2d	    0x488b05000000	            mov rax, qword [0x04003c74] 	      1294	mark.c	FUNCTION_27	FUNCTION_1	IF_2
0x3c34	          0x4839c2	                            cmp rdx, rax	      1294	mark.c	FUNCTION_27	FUNCTION_1	IF_2
0x3c37	     0xf8568010000	                           jne 0x4003de5	      1294	mark.c	FUNCTION_27	FUNCTION_1	IF_2
0x3c3d	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      1297	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2
0x3c44	      0xe9c5000000	                           jmp 0x4003d4e	      1297	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2
0x3c49	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      1298	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3c4d	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1298	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3c50	          0x4863d0	                         movsxd rdx, eax	      1298	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3c53	          0x4889d0	                            mov rax, rdx	      1298	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3c56	        0x48c1e002	                              shl rax, 2	      1298	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3c5a	          0x4801d0	                            add rax, rdx	      1298	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3c5d	        0x48c1e003	                              shl rax, 3	      1298	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3c61	          0x4801c8	                            add rax, rcx	      1298	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3c64	    0x480578150000	                         add rax, 0x1578	      1298	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3c6a	            0x8b00	                    mov eax, dword [rax]	      1298	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3c6c	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      1298	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3c6f	     0xf8595000000	                           jne 0x4003d4a	      1298	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3c75	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1299	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3c78	          0x4863d0	                         movsxd rdx, eax	      1299	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3c7b	          0x4889d0	                            mov rax, rdx	      1299	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3c7e	        0x48c1e002	                              shl rax, 2	      1299	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3c82	          0x4801d0	                            add rax, rdx	      1299	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3c85	        0x48c1e003	                              shl rax, 3	      1299	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3c89	    0x488d90601500	                 lea rdx, [rax + 0x1560]	      1299	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3c90	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1299	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3c94	          0x4801d0	                            add rax, rdx	      1299	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3c97	        0x4883c008	                              add rax, 8	      1299	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3c9b	        0x488945f8	                mov qword [rbp - 8], rax	      1299	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3c9f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1299	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3ca3	          0x488b00	                    mov rax, qword [rax]	      1299	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3ca6	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1299	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3caa	            0x755e	                           jne 0x4003d4a	      1299	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3cac	        0x488b45f8	                mov rax, qword [rbp - 8]	      1299	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3cb0	          0x8b4008	                mov eax, dword [rax + 8]	      1299	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3cb3	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      1299	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3cb6	            0x7c52	                            jl 0x4003d4a	      1299	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3cb8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1299	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3cbc	          0x488b10	                    mov rdx, qword [rax]	      1299	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3cbf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1299	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3cc3	          0x4801c2	                            add rdx, rax	      1299	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3cc6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1299	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3cca	          0x488910	                    mov qword [rax], rdx	      1299	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3ccd	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1299	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3cd2	            0x791e	                           jns 0x4003d32	      1299	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3cd4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1299	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3cd8	          0x8b4008	                mov eax, dword [rax + 8]	      1299	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3cdb	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1299	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3cdf	            0xf7da	                                 neg edx	      1299	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3ce1	            0x39d0	                            cmp eax, edx	      1299	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3ce3	            0x7f0d	                            jg 0x4003d32	      1299	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3ce5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1299	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3ce9	    0xc74008000000	                  mov dword [rax + 8], 0	      1299	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3cf0	            0xeb18	                           jmp 0x4003d4a	      1299	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3cf2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1299	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3cf6	          0x8b4008	                mov eax, dword [rax + 8]	      1299	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3cf9	            0x89c2	                            mov edx, eax	      1299	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3cfb	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1299	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3cff	             0x1d0	                            add eax, edx	      1299	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3d01	            0x89c2	                            mov edx, eax	      1299	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3d03	        0x488b45f8	                mov rax, qword [rbp - 8]	      1299	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3d07	          0x895008	                mov dword [rax + 8], edx	      1299	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2	IF_3
0x3d0a	        0x8345e801	               add dword [rbp - 0x18], 1	      1297	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2
0x3d0e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1297	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2
0x3d12	    0x8b8084180000	          mov eax, dword [rax + 0x1884] 	      1297	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2
0x3d18	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	      1297	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2
0x3d1b	     0xf8f28ffffff	                            jg 0x4003c89	      1297	mark.c	FUNCTION_27	FUNCTION_1	IF_2	FOR_2
0x3d21	    0x488b05000000	            mov rax, qword [0x04003d68] 	      1302	mark.c	FUNCTION_27	FUNCTION_1	IF_2	IF_4
0x3d28	        0x483945f0	            cmp qword [rbp - 0x10], rax 	      1302	mark.c	FUNCTION_27	FUNCTION_1	IF_2	IF_4
0x3d2c	            0x7477	                            je 0x4003de5	      1302	mark.c	FUNCTION_27	FUNCTION_1	IF_2	IF_4
0x3d2e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1303	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x3d32	        0x4883c038	                           add rax, 0x38	      1303	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x3d36	        0x488945f8	                mov qword [rbp - 8], rax	      1303	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x3d3a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1303	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x3d3e	          0x488b00	                    mov rax, qword [rax]	      1303	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x3d41	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1303	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x3d45	            0x755e	                           jne 0x4003de5	      1303	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x3d47	        0x488b45f8	                mov rax, qword [rbp - 8]	      1303	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x3d4b	          0x8b4008	                mov eax, dword [rax + 8]	      1303	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x3d4e	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      1303	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x3d51	            0x7c52	                            jl 0x4003de5	      1303	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x3d53	        0x488b45f8	                mov rax, qword [rbp - 8]	      1303	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x3d57	          0x488b10	                    mov rdx, qword [rax]	      1303	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x3d5a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1303	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x3d5e	          0x4801c2	                            add rdx, rax	      1303	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x3d61	        0x488b45f8	                mov rax, qword [rbp - 8]	      1303	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x3d65	          0x488910	                    mov qword [rax], rdx	      1303	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x3d68	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1303	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x3d6d	            0x791e	                           jns 0x4003dcd	      1303	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x3d6f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1303	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x3d73	          0x8b4008	                mov eax, dword [rax + 8]	      1303	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x3d76	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1303	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x3d7a	            0xf7da	                                 neg edx	      1303	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x3d7c	            0x39d0	                            cmp eax, edx	      1303	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x3d7e	            0x7f0d	                            jg 0x4003dcd	      1303	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x3d80	        0x488b45f8	                mov rax, qword [rbp - 8]	      1303	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x3d84	    0xc74008000000	                  mov dword [rax + 8], 0	      1303	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x3d8b	            0xeb18	                           jmp 0x4003de5	      1303	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x3d8d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1303	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x3d91	          0x8b4008	                mov eax, dword [rax + 8]	      1303	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x3d94	            0x89c2	                            mov edx, eax	      1303	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x3d96	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1303	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x3d9a	             0x1d0	                            add eax, edx	      1303	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x3d9c	            0x89c2	                            mov edx, eax	      1303	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x3d9e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1303	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x3da2	          0x895008	                mov dword [rax + 8], edx	      1303	mark.c	FUNCTION_27	FUNCTION_1	IF_2	CALL_3
0x3da5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1285	mark.c	FUNCTION_27
0x3da9	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1285	mark.c	FUNCTION_27
0x3dad	        0x488945f0	             mov qword [rbp - 0x10], rax	      1285	mark.c	FUNCTION_27
0x3db1	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1285	mark.c	FUNCTION_27
0x3db6	     0xf8589fdffff	                           jne 0x4003b85	      1285	mark.c	FUNCTION_27
0x3dbc	            0xeb01	                           jmp 0x4003dff	      1285	mark.c	FUNCTION_27
0x3dbe	              0x90	                                     nop	      1242	mark.c	FUNCTION_27	IF_1
0x3dbf	              0x5d	                                 pop rbp	      1306	mark.c	FUNCTION_27
0x3dc0	              0xc3	                                     ret	      1306	mark.c	FUNCTION_27
setpcmark	DO,0:functions,0:IF,3:SWITCH,0:CALL,2:ELSE,0:WHILE,1:FOR,2	107
0x32c	              0x55	                                push rbp	       146	mark.c	FUNCTION_3
0x32d	          0x4889e5	                            mov rbp, rsp	       146	mark.c	FUNCTION_3
0x330	        0x4883ec10	                           sub rsp, 0x10	       146	mark.c	FUNCTION_3
0x334	    0x8b0500000000	            mov eax, dword [0x0400037a] 	       156	mark.c	FUNCTION_3	IF_1
0x33a	            0x85c0	                           test eax, eax	       156	mark.c	FUNCTION_3	IF_1
0x33c	     0xf85dc010000	                           jne 0x400055e	       156	mark.c	FUNCTION_3	IF_1
0x342	    0x8b0500000000	            mov eax, dword [0x04000388] 	       156	mark.c	FUNCTION_3	IF_1
0x348	            0x85c0	                           test eax, eax	       156	mark.c	FUNCTION_3	IF_1
0x34a	     0xf85ce010000	                           jne 0x400055e	       156	mark.c	FUNCTION_3	IF_1
0x350	    0x8b0500000000	            mov eax, dword [0x04000396] 	       156	mark.c	FUNCTION_3	IF_1
0x356	            0x85c0	                           test eax, eax	       156	mark.c	FUNCTION_3	IF_1
0x358	     0xf85c0010000	                           jne 0x400055e	       156	mark.c	FUNCTION_3	IF_1
0x35e	    0x488b0d000000	            mov rcx, qword [0x040003a5] 	       159	mark.c	FUNCTION_3
0x365	    0x488b05000000	            mov rax, qword [0x040003ac] 	       159	mark.c	FUNCTION_3
0x36c	    0x488b90880500	           mov rdx, qword [rax + 0x588] 	       159	mark.c	FUNCTION_3
0x373	    0x488b80800500	           mov rax, qword [rax + 0x580] 	       159	mark.c	FUNCTION_3
0x37a	    0x488981900500	            mov qword [rcx + 0x590], rax	       159	mark.c	FUNCTION_3
0x381	    0x488991980500	            mov qword [rcx + 0x598], rdx	       159	mark.c	FUNCTION_3
0x388	    0x488b0d000000	            mov rcx, qword [0x040003cf] 	       160	mark.c	FUNCTION_3
0x38f	    0x488b05000000	            mov rax, qword [0x040003d6] 	       160	mark.c	FUNCTION_3
0x396	        0x488b5040	            mov rdx, qword [rax + 0x40] 	       160	mark.c	FUNCTION_3
0x39a	        0x488b4038	            mov rax, qword [rax + 0x38] 	       160	mark.c	FUNCTION_3
0x39e	    0x488981800500	            mov qword [rcx + 0x580], rax	       160	mark.c	FUNCTION_3
0x3a5	    0x488991880500	            mov qword [rcx + 0x588], rdx	       160	mark.c	FUNCTION_3
0x3ac	    0x488b05000000	            mov rax, qword [0x040003f3] 	       182	mark.c	FUNCTION_3	IF_3
0x3b3	    0x8b9040150000	          mov edx, dword [rax + 0x1540] 	       182	mark.c	FUNCTION_3	IF_3
0x3b9	          0x83c201	                              add edx, 1	       182	mark.c	FUNCTION_3	IF_3
0x3bc	    0x899040150000	          mov dword [rax + 0x1540], edx 	       182	mark.c	FUNCTION_3	IF_3
0x3c2	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	       182	mark.c	FUNCTION_3	IF_3
0x3c8	          0x83f864	                           cmp eax, 0x64	       182	mark.c	FUNCTION_3	IF_3
0x3cb	     0xf8eac000000	                           jle 0x40004bd	       182	mark.c	FUNCTION_3	IF_3
0x3d1	    0x488b05000000	            mov rax, qword [0x04000418] 	       184	mark.c	FUNCTION_3	IF_3
0x3d8	    0xc78040150000	         mov dword [rax + 0x1540], 0x64 	       184	mark.c	FUNCTION_3	IF_3
0x3e2	    0x488b05000000	            mov rax, qword [0x04000429] 	       185	mark.c	FUNCTION_3	IF_3	CALL_1
0x3e9	    0x488b80b80500	           mov rax, qword [rax + 0x5b8] 	       185	mark.c	FUNCTION_3	IF_3	CALL_1
0x3f0	          0x4889c7	                            mov rdi, rax	       185	mark.c	FUNCTION_3	IF_3	CALL_1
0x3f3	      0xe800000000	                          call 0x4000438	       185	mark.c	FUNCTION_3	IF_3	CALL_1
0x3f8	    0xc745f4010000	                mov dword [rbp - 0xc], 1	       186	mark.c	FUNCTION_3	IF_3	FOR_2
0x3ff	            0xeb76	                           jmp 0x40004b7	       186	mark.c	FUNCTION_3	IF_3	FOR_2
0x401	    0x488b0d000000	            mov rcx, qword [0x04000448] 	       187	mark.c	FUNCTION_3	IF_3	FOR_2
0x408	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       187	mark.c	FUNCTION_3	IF_3	FOR_2
0x40b	          0x83e801	                              sub eax, 1	       187	mark.c	FUNCTION_3	IF_3	FOR_2
0x40e	    0x488b35000000	            mov rsi, qword [0x04000455] 	       187	mark.c	FUNCTION_3	IF_3	FOR_2
0x415	          0x4863d0	                         movsxd rdx, eax	       187	mark.c	FUNCTION_3	IF_3	FOR_2
0x418	          0x4889d0	                            mov rax, rdx	       187	mark.c	FUNCTION_3	IF_3	FOR_2
0x41b	        0x48c1e002	                              shl rax, 2	       187	mark.c	FUNCTION_3	IF_3	FOR_2
0x41f	          0x4801d0	                            add rax, rdx	       187	mark.c	FUNCTION_3	IF_3	FOR_2
0x422	        0x48c1e003	                              shl rax, 3	       187	mark.c	FUNCTION_3	IF_3	FOR_2
0x426	          0x4801c8	                            add rax, rcx	       187	mark.c	FUNCTION_3	IF_3	FOR_2
0x429	    0x488d90a00500	                  lea rdx, [rax + 0x5a0]	       187	mark.c	FUNCTION_3	IF_3	FOR_2
0x430	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       187	mark.c	FUNCTION_3	IF_3	FOR_2
0x433	          0x4863c8	                         movsxd rcx, eax	       187	mark.c	FUNCTION_3	IF_3	FOR_2
0x436	          0x4889c8	                            mov rax, rcx	       187	mark.c	FUNCTION_3	IF_3	FOR_2
0x439	        0x48c1e002	                              shl rax, 2	       187	mark.c	FUNCTION_3	IF_3	FOR_2
0x43d	          0x4801c8	                            add rax, rcx	       187	mark.c	FUNCTION_3	IF_3	FOR_2
0x440	        0x48c1e003	                              shl rax, 3	       187	mark.c	FUNCTION_3	IF_3	FOR_2
0x444	          0x4801f0	                            add rax, rsi	       187	mark.c	FUNCTION_3	IF_3	FOR_2
0x447	    0x4805a0050000	                          add rax, 0x5a0	       187	mark.c	FUNCTION_3	IF_3	FOR_2
0x44d	          0x488b08	                    mov rcx, qword [rax]	       187	mark.c	FUNCTION_3	IF_3	FOR_2
0x450	          0x48890a	                    mov qword [rdx], rcx	       187	mark.c	FUNCTION_3	IF_3	FOR_2
0x453	        0x488b4808	                mov rcx, qword [rax + 8]	       187	mark.c	FUNCTION_3	IF_3	FOR_2
0x457	        0x48894a08	                mov qword [rdx + 8], rcx	       187	mark.c	FUNCTION_3	IF_3	FOR_2
0x45b	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       187	mark.c	FUNCTION_3	IF_3	FOR_2
0x45f	        0x48894a10	             mov qword [rdx + 0x10], rcx	       187	mark.c	FUNCTION_3	IF_3	FOR_2
0x463	        0x488b4818	            mov rcx, qword [rax + 0x18] 	       187	mark.c	FUNCTION_3	IF_3	FOR_2
0x467	        0x48894a18	             mov qword [rdx + 0x18], rcx	       187	mark.c	FUNCTION_3	IF_3	FOR_2
0x46b	        0x488b4020	            mov rax, qword [rax + 0x20] 	       187	mark.c	FUNCTION_3	IF_3	FOR_2
0x46f	        0x48894220	             mov qword [rdx + 0x20], rax	       187	mark.c	FUNCTION_3	IF_3	FOR_2
0x473	        0x8345f401	                add dword [rbp - 0xc], 1	       186	mark.c	FUNCTION_3	IF_3	FOR_2
0x477	        0x837df463	            cmp dword [rbp - 0xc], 0x63 	       186	mark.c	FUNCTION_3	IF_3	FOR_2
0x47b	            0x7e84	                           jle 0x4000441	       186	mark.c	FUNCTION_3	IF_3	FOR_2
0x47d	    0x488b05000000	            mov rax, qword [0x040004c4] 	       189	mark.c	FUNCTION_3
0x484	    0x488b15000000	            mov rdx, qword [0x040004cb] 	       189	mark.c	FUNCTION_3
0x48b	    0x8b9240150000	          mov edx, dword [rdx + 0x1540] 	       189	mark.c	FUNCTION_3
0x491	    0x899044150000	          mov dword [rax + 0x1544], edx 	       189	mark.c	FUNCTION_3
0x497	    0x488b0d000000	            mov rcx, qword [0x040004de] 	       190	mark.c	FUNCTION_3
0x49e	    0x488b05000000	            mov rax, qword [0x040004e5] 	       190	mark.c	FUNCTION_3
0x4a5	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	       190	mark.c	FUNCTION_3
0x4ab	          0x83e801	                              sub eax, 1	       190	mark.c	FUNCTION_3
0x4ae	          0x4863d0	                         movsxd rdx, eax	       190	mark.c	FUNCTION_3
0x4b1	          0x4889d0	                            mov rax, rdx	       190	mark.c	FUNCTION_3
0x4b4	        0x48c1e002	                              shl rax, 2	       190	mark.c	FUNCTION_3
0x4b8	          0x4801d0	                            add rax, rdx	       190	mark.c	FUNCTION_3
0x4bb	        0x48c1e003	                              shl rax, 3	       190	mark.c	FUNCTION_3
0x4bf	    0x4805a0050000	                          add rax, 0x5a0	       190	mark.c	FUNCTION_3
0x4c5	          0x4801c8	                            add rax, rcx	       190	mark.c	FUNCTION_3
0x4c8	        0x488945f8	                mov qword [rbp - 8], rax	       190	mark.c	FUNCTION_3
0x4cc	    0x488b05000000	            mov rax, qword [0x04000513] 	       192	mark.c	FUNCTION_3
0x4d3	        0x488b4df8	                mov rcx, qword [rbp - 8]	       192	mark.c	FUNCTION_3
0x4d7	    0x488b90880500	           mov rdx, qword [rax + 0x588] 	       192	mark.c	FUNCTION_3
0x4de	    0x488b80800500	           mov rax, qword [rax + 0x580] 	       192	mark.c	FUNCTION_3
0x4e5	          0x488901	                    mov qword [rcx], rax	       192	mark.c	FUNCTION_3
0x4e8	        0x48895108	                mov qword [rcx + 8], rdx	       192	mark.c	FUNCTION_3
0x4ec	    0x488b05000000	            mov rax, qword [0x04000533] 	       193	mark.c	FUNCTION_3
0x4f3	    0x8b90b8000000	            mov edx, dword [rax + 0xb8] 	       193	mark.c	FUNCTION_3
0x4f9	        0x488b45f8	                mov rax, qword [rbp - 8]	       193	mark.c	FUNCTION_3
0x4fd	          0x895010	             mov dword [rax + 0x10], edx	       193	mark.c	FUNCTION_3
0x500	        0x488b45f8	                mov rax, qword [rbp - 8]	       194	mark.c	FUNCTION_3
0x504	    0x48c740180000	               mov qword [rax + 0x18], 0	       194	mark.c	FUNCTION_3
0x50c	      0xe800000000	                          call 0x4000551	       196	mark.c	FUNCTION_3	CALL_2
0x511	          0x4889c2	                            mov rdx, rax	       196	mark.c	FUNCTION_3	CALL_2
0x514	        0x488b45f8	                mov rax, qword [rbp - 8]	       196	mark.c	FUNCTION_3	CALL_2
0x518	        0x48895020	             mov qword [rax + 0x20], rdx	       196	mark.c	FUNCTION_3	CALL_2
0x51c	            0xeb01	                           jmp 0x400055f	       196	mark.c	FUNCTION_3	CALL_2
0x51e	              0x90	                                     nop	       157	mark.c	FUNCTION_3	IF_1
0x51f	              0xc9	                                   leave	       199	mark.c	FUNCTION_3
0x520	              0xc3	                                     ret	       199	mark.c	FUNCTION_3
do_marks	DO,0:functions,0:IF,4:SWITCH,0:CALL,13:ELSE,1:WHILE,0:FOR,2	192
0x19f6	              0x55	                                push rbp	       715	mark.c	FUNCTION_18
0x19f7	          0x4889e5	                            mov rbp, rsp	       715	mark.c	FUNCTION_18
0x19fa	        0x4883ec30	                           sub rsp, 0x30	       715	mark.c	FUNCTION_18
0x19fe	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       715	mark.c	FUNCTION_18
0x1a02	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       716	mark.c	FUNCTION_18
0x1a06	          0x488b00	                    mov rax, qword [rax]	       716	mark.c	FUNCTION_18
0x1a09	        0x488945f0	             mov qword [rbp - 0x10], rax	       716	mark.c	FUNCTION_18
0x1a0d	      0x48837df000	               cmp qword [rbp - 0x10], 0	       720	mark.c	FUNCTION_18	IF_1
0x1a12	            0x7413	                            je 0x4001a67	       720	mark.c	FUNCTION_18	IF_1
0x1a14	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       720	mark.c	FUNCTION_18	IF_1
0x1a18	           0xfb600	                   movzx eax, byte [rax]	       720	mark.c	FUNCTION_18	IF_1
0x1a1b	            0x84c0	                             test al, al	       720	mark.c	FUNCTION_18	IF_1
0x1a1d	            0x7508	                           jne 0x4001a67	       720	mark.c	FUNCTION_18	IF_1
0x1a1f	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       721	mark.c	FUNCTION_18	IF_1
0x1a27	    0x488b05000000	            mov rax, qword [0x04001a6e] 	       723	mark.c	FUNCTION_18	CALL_1
0x1a2e	    0x488d90800500	                  lea rdx, [rax + 0x580]	       723	mark.c	FUNCTION_18	CALL_1
0x1a35	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       723	mark.c	FUNCTION_18	CALL_1
0x1a39	    0x41b801000000	                              mov r8d, 1	       723	mark.c	FUNCTION_18	CALL_1
0x1a3f	      0xb900000000	                              mov ecx, 0	       723	mark.c	FUNCTION_18	CALL_1
0x1a44	          0x4889c6	                            mov rsi, rax	       723	mark.c	FUNCTION_18	CALL_1
0x1a47	      0xbf27000000	                           mov edi, 0x27	       723	mark.c	FUNCTION_18	CALL_1
0x1a4c	      0xe8cd020000	                  call sym.show_one_mark	       723	mark.c	FUNCTION_18	CALL_1
0x1a51	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       724	mark.c	FUNCTION_18	FOR_1
0x1a58	            0xeb3d	                           jmp 0x4001ad7	       724	mark.c	FUNCTION_18	FOR_1
0x1a5a	    0x488b05000000	            mov rax, qword [0x04001aa1] 	       725	mark.c	FUNCTION_18	CALL_2
0x1a61	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       725	mark.c	FUNCTION_18	CALL_2
0x1a64	          0x4863d2	                         movsxd rdx, edx	       725	mark.c	FUNCTION_18	CALL_2
0x1a67	        0x4883c214	                           add rdx, 0x14	       725	mark.c	FUNCTION_18	CALL_2
0x1a6b	        0x48c1e204	                              shl rdx, 4	       725	mark.c	FUNCTION_18	CALL_2
0x1a6f	          0x4801d0	                            add rax, rdx	       725	mark.c	FUNCTION_18	CALL_2
0x1a72	        0x488d5008	                      lea rdx, [rax + 8]	       725	mark.c	FUNCTION_18	CALL_2
0x1a76	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       725	mark.c	FUNCTION_18	CALL_2
0x1a79	          0x8d7861	                   lea edi, [rax + 0x61]	       725	mark.c	FUNCTION_18	CALL_2
0x1a7c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       725	mark.c	FUNCTION_18	CALL_2
0x1a80	    0x41b801000000	                              mov r8d, 1	       725	mark.c	FUNCTION_18	CALL_2
0x1a86	      0xb900000000	                              mov ecx, 0	       725	mark.c	FUNCTION_18	CALL_2
0x1a8b	          0x4889c6	                            mov rsi, rax	       725	mark.c	FUNCTION_18	CALL_2
0x1a8e	      0xe88b020000	                  call sym.show_one_mark	       725	mark.c	FUNCTION_18	CALL_2
0x1a93	        0x8345ec01	               add dword [rbp - 0x14], 1	       724	mark.c	FUNCTION_18	FOR_1
0x1a97	        0x837dec19	           cmp dword [rbp - 0x14], 0x19 	       724	mark.c	FUNCTION_18	FOR_1
0x1a9b	            0x7ebd	                           jle 0x4001a9a	       724	mark.c	FUNCTION_18	FOR_1
0x1a9d	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       726	mark.c	FUNCTION_18	FOR_2
0x1aa4	      0xe921010000	                           jmp 0x4001c0a	       726	mark.c	FUNCTION_18	FOR_2
0x1aa9	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       728	mark.c	FUNCTION_18	FOR_2	IF_2
0x1aac	          0x4863d0	                         movsxd rdx, eax	       728	mark.c	FUNCTION_18	FOR_2	IF_2
0x1aaf	          0x4889d0	                            mov rax, rdx	       728	mark.c	FUNCTION_18	FOR_2	IF_2
0x1ab2	        0x48c1e002	                              shl rax, 2	       728	mark.c	FUNCTION_18	FOR_2	IF_2
0x1ab6	          0x4801d0	                            add rax, rdx	       728	mark.c	FUNCTION_18	FOR_2	IF_2
0x1ab9	        0x48c1e003	                              shl rax, 3	       728	mark.c	FUNCTION_18	FOR_2	IF_2
0x1abd	    0x480500000000	                              add rax, 0	       728	mark.c	FUNCTION_18	FOR_2	IF_2
0x1ac3	            0x8b00	                    mov eax, dword [rax]	       728	mark.c	FUNCTION_18	FOR_2	IF_2
0x1ac5	            0x85c0	                           test eax, eax	       728	mark.c	FUNCTION_18	FOR_2	IF_2
0x1ac7	            0x742d	                            je 0x4001b36	       728	mark.c	FUNCTION_18	FOR_2	IF_2
0x1ac9	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       729	mark.c	FUNCTION_18	FOR_2	CALL_3
0x1acc	          0x4863d0	                         movsxd rdx, eax	       729	mark.c	FUNCTION_18	FOR_2	CALL_3
0x1acf	          0x4889d0	                            mov rax, rdx	       729	mark.c	FUNCTION_18	FOR_2	CALL_3
0x1ad2	        0x48c1e002	                              shl rax, 2	       729	mark.c	FUNCTION_18	FOR_2	CALL_3
0x1ad6	          0x4801d0	                            add rax, rdx	       729	mark.c	FUNCTION_18	FOR_2	CALL_3
0x1ad9	        0x48c1e003	                              shl rax, 3	       729	mark.c	FUNCTION_18	FOR_2	CALL_3
0x1add	    0x480500000000	                              add rax, 0	       729	mark.c	FUNCTION_18	FOR_2	CALL_3
0x1ae3	      0xbe0f000000	                            mov esi, 0xf	       729	mark.c	FUNCTION_18	FOR_2	CALL_3
0x1ae8	          0x4889c7	                            mov rdi, rax	       729	mark.c	FUNCTION_18	FOR_2	CALL_3
0x1aeb	      0xe800000000	                          call 0x4001b30	       729	mark.c	FUNCTION_18	FOR_2	CALL_3
0x1af0	        0x488945f8	                mov qword [rbp - 8], rax	       729	mark.c	FUNCTION_18	FOR_2	CALL_3
0x1af4	            0xeb21	                           jmp 0x4001b57	       729	mark.c	FUNCTION_18	FOR_2	CALL_3
0x1af6	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       731	mark.c	FUNCTION_18	FOR_2	ELSE_1
0x1af9	          0x4863d0	                         movsxd rdx, eax	       731	mark.c	FUNCTION_18	FOR_2	ELSE_1
0x1afc	          0x4889d0	                            mov rax, rdx	       731	mark.c	FUNCTION_18	FOR_2	ELSE_1
0x1aff	        0x48c1e002	                              shl rax, 2	       731	mark.c	FUNCTION_18	FOR_2	ELSE_1
0x1b03	          0x4801d0	                            add rax, rdx	       731	mark.c	FUNCTION_18	FOR_2	ELSE_1
0x1b06	        0x48c1e003	                              shl rax, 3	       731	mark.c	FUNCTION_18	FOR_2	ELSE_1
0x1b0a	    0x480500000000	                              add rax, 0	       731	mark.c	FUNCTION_18	FOR_2	ELSE_1
0x1b10	          0x488b00	                    mov rax, qword [rax]	       731	mark.c	FUNCTION_18	FOR_2	ELSE_1
0x1b13	        0x488945f8	                mov qword [rbp - 8], rax	       731	mark.c	FUNCTION_18	FOR_2	ELSE_1
0x1b17	      0x48837df800	                  cmp qword [rbp - 8], 0	       732	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3
0x1b1c	     0xf84a4000000	                            je 0x4001c06	       732	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3
0x1b22	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       736	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3
0x1b25	          0x4863d0	                         movsxd rdx, eax	       736	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3
0x1b28	          0x4889d0	                            mov rax, rdx	       736	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3
0x1b2b	        0x48c1e002	                              shl rax, 2	       736	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3
0x1b2f	          0x4801d0	                            add rax, rdx	       736	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3
0x1b32	        0x48c1e003	                              shl rax, 3	       736	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3
0x1b36	    0x480500000000	                              add rax, 0	       736	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3
0x1b3c	            0x8b10	                    mov edx, dword [rax]	       736	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3
0x1b3e	    0x488b05000000	            mov rax, qword [0x04001b85] 	       736	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3
0x1b45	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	       736	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3
0x1b4b	            0x39c2	                            cmp edx, eax	       734	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_4
0x1b4d	           0xf94c0	                                 sete al	       734	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_4
0x1b50	           0xfb6c8	                           movzx ecx, al	       734	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_4
0x1b53	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       734	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_4
0x1b56	          0x4863d0	                         movsxd rdx, eax	       734	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_4
0x1b59	          0x4889d0	                            mov rax, rdx	       734	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_4
0x1b5c	        0x48c1e002	                              shl rax, 2	       734	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_4
0x1b60	          0x4801d0	                            add rax, rdx	       734	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_4
0x1b63	        0x48c1e003	                              shl rax, 3	       734	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_4
0x1b67	    0x488db8000000	                          lea rdi, [rax]	       734	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_4
0x1b6e	        0x837dec19	           cmp dword [rbp - 0x14], 0x19 	       734	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_4
0x1b72	            0x7e08	                           jle 0x4001bbc	       734	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_4
0x1b74	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       734	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_4
0x1b77	          0x83c016	                           add eax, 0x16	       734	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_4
0x1b7a	            0xeb06	                           jmp 0x4001bc2	       734	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_4
0x1b7c	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       734	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_4
0x1b7f	          0x83c041	                           add eax, 0x41	       734	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_4
0x1b82	        0x488b55f8	                mov rdx, qword [rbp - 8]	       734	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_4
0x1b86	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       734	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_4
0x1b8a	          0x4189c8	                            mov r8d, ecx	       734	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_4
0x1b8d	          0x4889d1	                            mov rcx, rdx	       734	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_4
0x1b90	          0x4889fa	                            mov rdx, rdi	       734	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_4
0x1b93	            0x89c7	                            mov edi, eax	       734	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_4
0x1b95	      0xe884010000	                  call sym.show_one_mark	       734	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_4
0x1b9a	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       737	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	IF_4
0x1b9d	          0x4863d0	                         movsxd rdx, eax	       737	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	IF_4
0x1ba0	          0x4889d0	                            mov rax, rdx	       737	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	IF_4
0x1ba3	        0x48c1e002	                              shl rax, 2	       737	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	IF_4
0x1ba7	          0x4801d0	                            add rax, rdx	       737	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	IF_4
0x1baa	        0x48c1e003	                              shl rax, 3	       737	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	IF_4
0x1bae	    0x480500000000	                              add rax, 0	       737	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	IF_4
0x1bb4	            0x8b00	                    mov eax, dword [rax]	       737	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	IF_4
0x1bb6	            0x85c0	                           test eax, eax	       737	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	IF_4
0x1bb8	            0x740c	                            je 0x4001c06	       737	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	IF_4
0x1bba	        0x488b45f8	                mov rax, qword [rbp - 8]	       738	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_5
0x1bbe	          0x4889c7	                            mov rdi, rax	       738	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_5
0x1bc1	      0xe800000000	                          call 0x4001c06	       738	mark.c	FUNCTION_18	FOR_2	ELSE_1	IF_3	CALL_5
0x1bc6	        0x8345ec01	               add dword [rbp - 0x14], 1	       726	mark.c	FUNCTION_18	FOR_2
0x1bca	        0x837dec23	           cmp dword [rbp - 0x14], 0x23 	       726	mark.c	FUNCTION_18	FOR_2
0x1bce	     0xf8ed5feffff	                           jle 0x4001ae9	       726	mark.c	FUNCTION_18	FOR_2
0x1bd4	    0x488b05000000	            mov rax, qword [0x04001c1b] 	       741	mark.c	FUNCTION_18	CALL_6
0x1bdb	    0x488d90180300	                  lea rdx, [rax + 0x318]	       741	mark.c	FUNCTION_18	CALL_6
0x1be2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       741	mark.c	FUNCTION_18	CALL_6
0x1be6	    0x41b801000000	                              mov r8d, 1	       741	mark.c	FUNCTION_18	CALL_6
0x1bec	      0xb900000000	                              mov ecx, 0	       741	mark.c	FUNCTION_18	CALL_6
0x1bf1	          0x4889c6	                            mov rsi, rax	       741	mark.c	FUNCTION_18	CALL_6
0x1bf4	      0xbf22000000	                           mov edi, 0x22	       741	mark.c	FUNCTION_18	CALL_6
0x1bf9	      0xe820010000	                  call sym.show_one_mark	       741	mark.c	FUNCTION_18	CALL_6
0x1bfe	    0x488b05000000	            mov rax, qword [0x04001c45] 	       742	mark.c	FUNCTION_18	CALL_7
0x1c05	    0x488d90d01100	                 lea rdx, [rax + 0x11d0]	       742	mark.c	FUNCTION_18	CALL_7
0x1c0c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       742	mark.c	FUNCTION_18	CALL_7
0x1c10	    0x41b801000000	                              mov r8d, 1	       742	mark.c	FUNCTION_18	CALL_7
0x1c16	      0xb900000000	                              mov ecx, 0	       742	mark.c	FUNCTION_18	CALL_7
0x1c1b	          0x4889c6	                            mov rsi, rax	       742	mark.c	FUNCTION_18	CALL_7
0x1c1e	      0xbf5b000000	                           mov edi, 0x5b	       742	mark.c	FUNCTION_18	CALL_7
0x1c23	      0xe8f6000000	                  call sym.show_one_mark	       742	mark.c	FUNCTION_18	CALL_7
0x1c28	    0x488b05000000	            mov rax, qword [0x04001c6f] 	       743	mark.c	FUNCTION_18	CALL_8
0x1c2f	    0x488d90f01100	                 lea rdx, [rax + 0x11f0]	       743	mark.c	FUNCTION_18	CALL_8
0x1c36	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       743	mark.c	FUNCTION_18	CALL_8
0x1c3a	    0x41b801000000	                              mov r8d, 1	       743	mark.c	FUNCTION_18	CALL_8
0x1c40	      0xb900000000	                              mov ecx, 0	       743	mark.c	FUNCTION_18	CALL_8
0x1c45	          0x4889c6	                            mov rsi, rax	       743	mark.c	FUNCTION_18	CALL_8
0x1c48	      0xbf5d000000	                           mov edi, 0x5d	       743	mark.c	FUNCTION_18	CALL_8
0x1c4d	      0xe8cc000000	                  call sym.show_one_mark	       743	mark.c	FUNCTION_18	CALL_8
0x1c52	    0x488b05000000	            mov rax, qword [0x04001c99] 	       744	mark.c	FUNCTION_18	CALL_9
0x1c59	    0x488d90280300	                  lea rdx, [rax + 0x328]	       744	mark.c	FUNCTION_18	CALL_9
0x1c60	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       744	mark.c	FUNCTION_18	CALL_9
0x1c64	    0x41b801000000	                              mov r8d, 1	       744	mark.c	FUNCTION_18	CALL_9
0x1c6a	      0xb900000000	                              mov ecx, 0	       744	mark.c	FUNCTION_18	CALL_9
0x1c6f	          0x4889c6	                            mov rsi, rax	       744	mark.c	FUNCTION_18	CALL_9
0x1c72	      0xbf5e000000	                           mov edi, 0x5e	       744	mark.c	FUNCTION_18	CALL_9
0x1c77	      0xe8a2000000	                  call sym.show_one_mark	       744	mark.c	FUNCTION_18	CALL_9
0x1c7c	    0x488b05000000	            mov rax, qword [0x04001cc3] 	       745	mark.c	FUNCTION_18	CALL_10
0x1c83	    0x488d90380300	                  lea rdx, [rax + 0x338]	       745	mark.c	FUNCTION_18	CALL_10
0x1c8a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       745	mark.c	FUNCTION_18	CALL_10
0x1c8e	    0x41b801000000	                              mov r8d, 1	       745	mark.c	FUNCTION_18	CALL_10
0x1c94	      0xb900000000	                              mov ecx, 0	       745	mark.c	FUNCTION_18	CALL_10
0x1c99	          0x4889c6	                            mov rsi, rax	       745	mark.c	FUNCTION_18	CALL_10
0x1c9c	      0xbf2e000000	                           mov edi, 0x2e	       745	mark.c	FUNCTION_18	CALL_10
0x1ca1	      0xe878000000	                  call sym.show_one_mark	       745	mark.c	FUNCTION_18	CALL_10
0x1ca6	    0x488b05000000	            mov rax, qword [0x04001ced] 	       746	mark.c	FUNCTION_18	CALL_11
0x1cad	    0x488d90e80200	                  lea rdx, [rax + 0x2e8]	       746	mark.c	FUNCTION_18	CALL_11
0x1cb4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       746	mark.c	FUNCTION_18	CALL_11
0x1cb8	    0x41b801000000	                              mov r8d, 1	       746	mark.c	FUNCTION_18	CALL_11
0x1cbe	      0xb900000000	                              mov ecx, 0	       746	mark.c	FUNCTION_18	CALL_11
0x1cc3	          0x4889c6	                            mov rsi, rax	       746	mark.c	FUNCTION_18	CALL_11
0x1cc6	      0xbf3c000000	                           mov edi, 0x3c	       746	mark.c	FUNCTION_18	CALL_11
0x1ccb	      0xe84e000000	                  call sym.show_one_mark	       746	mark.c	FUNCTION_18	CALL_11
0x1cd0	    0x488b05000000	            mov rax, qword [0x04001d17] 	       747	mark.c	FUNCTION_18	CALL_12
0x1cd7	    0x488d90f80200	                  lea rdx, [rax + 0x2f8]	       747	mark.c	FUNCTION_18	CALL_12
0x1cde	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       747	mark.c	FUNCTION_18	CALL_12
0x1ce2	    0x41b801000000	                              mov r8d, 1	       747	mark.c	FUNCTION_18	CALL_12
0x1ce8	      0xb900000000	                              mov ecx, 0	       747	mark.c	FUNCTION_18	CALL_12
0x1ced	          0x4889c6	                            mov rsi, rax	       747	mark.c	FUNCTION_18	CALL_12
0x1cf0	      0xbf3e000000	                           mov edi, 0x3e	       747	mark.c	FUNCTION_18	CALL_12
0x1cf5	      0xe824000000	                  call sym.show_one_mark	       747	mark.c	FUNCTION_18	CALL_12
0x1cfa	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       748	mark.c	FUNCTION_18	CALL_13
0x1cfe	    0x41b800000000	                              mov r8d, 0	       748	mark.c	FUNCTION_18	CALL_13
0x1d04	      0xb900000000	                              mov ecx, 0	       748	mark.c	FUNCTION_18	CALL_13
0x1d09	      0xba00000000	                              mov edx, 0	       748	mark.c	FUNCTION_18	CALL_13
0x1d0e	          0x4889c6	                            mov rsi, rax	       748	mark.c	FUNCTION_18	CALL_13
0x1d11	      0xbfffffffff	                     mov edi, 0xffffffff	       748	mark.c	FUNCTION_18	CALL_13
0x1d16	      0xe803000000	                  call sym.show_one_mark	       748	mark.c	FUNCTION_18	CALL_13
0x1d1b	              0x90	                                     nop	       749	mark.c	FUNCTION_18
0x1d1c	              0xc9	                                   leave	       749	mark.c	FUNCTION_18
0x1d1d	              0xc3	                                     ret	       749	mark.c	FUNCTION_18
removable	DO,0:functions,0:IF,3:SWITCH,0:CALL,5:ELSE,0:WHILE,0:FOR,1	58
0x5401	              0x55	                                push rbp	      1815	mark.c	FUNCTION_40
0x5402	          0x4889e5	                            mov rbp, rsp	      1815	mark.c	FUNCTION_40
0x5405	        0x4883ec70	                           sub rsp, 0x70	      1815	mark.c	FUNCTION_40
0x5409	        0x48897d98	             mov qword [rbp - 0x68], rdi	      1815	mark.c	FUNCTION_40
0x540d	    0x64488b042528	                mov rax, qword fs:[0x28]	      1815	mark.c	FUNCTION_40
0x5416	        0x488945f8	                mov qword [rbp - 8], rax	      1815	mark.c	FUNCTION_40
0x541a	            0x31c0	                            xor eax, eax	      1815	mark.c	FUNCTION_40
0x541c	    0xc745ac000000	               mov dword [rbp - 0x54], 0	      1818	mark.c	FUNCTION_40
0x5423	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1821	mark.c	FUNCTION_40	CALL_1
0x5427	          0x4889c6	                            mov rsi, rax	      1821	mark.c	FUNCTION_40	CALL_1
0x542a	      0xbf00000000	                              mov edi, 0	      1821	mark.c	FUNCTION_40	CALL_1
0x542f	      0xe800000000	                          call 0x4005474	      1821	mark.c	FUNCTION_40	CALL_1
0x5434	        0x48894598	             mov qword [rbp - 0x68], rax	      1821	mark.c	FUNCTION_40	CALL_1
0x5438	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      1822	mark.c	FUNCTION_40	IF_1
0x543d	     0xf8485000000	                            je 0x4005508	      1822	mark.c	FUNCTION_40	IF_1
0x5443	    0x488b05000000	            mov rax, qword [0x0400548a] 	      1824	mark.c	FUNCTION_40	IF_1	FOR_1
0x544a	        0x488945b0	             mov qword [rbp - 0x50], rax	      1824	mark.c	FUNCTION_40	IF_1	FOR_1
0x544e	            0xeb61	                           jmp 0x40054f1	      1824	mark.c	FUNCTION_40	IF_1	FOR_1
0x5450	        0x488d75c0	                   lea rsi, [rbp - 0x40]	      1826	mark.c	FUNCTION_40	IF_1	FOR_1	CALL_2
0x5454	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1826	mark.c	FUNCTION_40	IF_1	FOR_1	CALL_2
0x5458	      0xb900000000	                              mov ecx, 0	      1826	mark.c	FUNCTION_40	IF_1	FOR_1	CALL_2
0x545d	      0xba33000000	                           mov edx, 0x33	      1826	mark.c	FUNCTION_40	IF_1	FOR_1	CALL_2
0x5462	          0x4889c7	                            mov rdi, rax	      1826	mark.c	FUNCTION_40	IF_1	FOR_1	CALL_2
0x5465	      0xe800000000	                          call 0x40054aa	      1826	mark.c	FUNCTION_40	IF_1	FOR_1	CALL_2
0x546a	         0xfb645c0	            movzx eax, byte [rbp - 0x40]	      1827	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2
0x546e	            0x3c72	                            cmp al, 0x72	      1827	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2
0x5470	            0x753f	                           jne 0x40054f1	      1827	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2
0x5472	        0x488d45c0	                   lea rax, [rbp - 0x40]	      1829	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2	CALL_3
0x5476	        0x4883c001	                              add rax, 1	      1829	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2	CALL_3
0x547a	          0x4889c7	                            mov rdi, rax	      1829	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2	CALL_3
0x547d	      0xe800000000	                          call 0x40054c2	      1829	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2	CALL_3
0x5482	        0x488945b8	             mov qword [rbp - 0x48], rax	      1829	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2	CALL_3
0x5486	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1830	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x548a	          0x4863d0	                         movsxd rdx, eax	      1830	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x548d	        0x488d45c0	                   lea rax, [rbp - 0x40]	      1830	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x5491	        0x4883c001	                              add rax, 1	      1830	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x5495	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	      1830	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x5499	          0x4889ce	                            mov rsi, rcx	      1830	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x549c	          0x4889c7	                            mov rdi, rax	      1830	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x549f	      0xe800000000	                          call 0x40054e4	      1830	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x54a4	            0x85c0	                           test eax, eax	      1830	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x54a6	            0x7509	                           jne 0x40054f1	      1830	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2	IF_3	CALL_4
0x54a8	    0xc745ac010000	               mov dword [rbp - 0x54], 1	      1832	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2	IF_3
0x54af	            0xeb0b	                           jmp 0x40054fc	      1833	mark.c	FUNCTION_40	IF_1	FOR_1	IF_2	IF_3
0x54b1	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1824	mark.c	FUNCTION_40	IF_1	FOR_1
0x54b5	           0xfb600	                   movzx eax, byte [rax]	      1824	mark.c	FUNCTION_40	IF_1	FOR_1
0x54b8	            0x84c0	                             test al, al	      1824	mark.c	FUNCTION_40	IF_1	FOR_1
0x54ba	            0x7594	                           jne 0x4005490	      1824	mark.c	FUNCTION_40	IF_1	FOR_1
0x54bc	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1837	mark.c	FUNCTION_40	IF_1	CALL_5
0x54c0	          0x4889c7	                            mov rdi, rax	      1837	mark.c	FUNCTION_40	IF_1	CALL_5
0x54c3	      0xe800000000	                          call 0x4005508	      1837	mark.c	FUNCTION_40	IF_1	CALL_5
0x54c8	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      1839	mark.c	FUNCTION_40
0x54cb	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1840	mark.c	FUNCTION_40
0x54cf	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1840	mark.c	FUNCTION_40
0x54d8	            0x7405	                            je 0x400551f	      1840	mark.c	FUNCTION_40
0x54da	      0xe800000000	                          call 0x400551f	      1840	mark.c	FUNCTION_40
0x54df	              0xc9	                                   leave	      1840	mark.c	FUNCTION_40
0x54e0	              0xc3	                                     ret	      1840	mark.c	FUNCTION_40
finish_viminfo_marks	DO,0:functions,0:IF,2:SWITCH,0:CALL,4:ELSE,0:WHILE,0:FOR,2	53
0x4542	              0x55	                                push rbp	      1476	mark.c	FUNCTION_35
0x4543	          0x4889e5	                            mov rbp, rsp	      1476	mark.c	FUNCTION_35
0x4546	        0x4883ec10	                           sub rsp, 0x10	      1476	mark.c	FUNCTION_35
0x454a	    0x488b05000000	            mov rax, qword [0x04004591] 	      1479	mark.c	FUNCTION_35	IF_1
0x4551	          0x4885c0	                           test rax, rax	      1479	mark.c	FUNCTION_35	IF_1
0x4554	            0x7457	                            je 0x40045ed	      1479	mark.c	FUNCTION_35	IF_1
0x4556	    0xc745fc000000	                  mov dword [rbp - 4], 0	      1481	mark.c	FUNCTION_35	IF_1	FOR_1
0x455d	            0xeb2e	                           jmp 0x40045cd	      1481	mark.c	FUNCTION_35	IF_1	FOR_1
0x455f	    0x488b0d000000	            mov rcx, qword [0x040045a6] 	      1482	mark.c	FUNCTION_35	IF_1	CALL_1
0x4566	          0x8b45fc	                mov eax, dword [rbp - 4]	      1482	mark.c	FUNCTION_35	IF_1	CALL_1
0x4569	          0x4863d0	                         movsxd rdx, eax	      1482	mark.c	FUNCTION_35	IF_1	CALL_1
0x456c	          0x4889d0	                            mov rax, rdx	      1482	mark.c	FUNCTION_35	IF_1	CALL_1
0x456f	        0x48c1e002	                              shl rax, 2	      1482	mark.c	FUNCTION_35	IF_1	CALL_1
0x4573	          0x4801d0	                            add rax, rdx	      1482	mark.c	FUNCTION_35	IF_1	CALL_1
0x4576	        0x48c1e003	                              shl rax, 3	      1482	mark.c	FUNCTION_35	IF_1	CALL_1
0x457a	          0x4801c8	                            add rax, rcx	      1482	mark.c	FUNCTION_35	IF_1	CALL_1
0x457d	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1482	mark.c	FUNCTION_35	IF_1	CALL_1
0x4581	          0x4889c7	                            mov rdi, rax	      1482	mark.c	FUNCTION_35	IF_1	CALL_1
0x4584	      0xe800000000	                          call 0x40045c9	      1482	mark.c	FUNCTION_35	IF_1	CALL_1
0x4589	        0x8345fc01	                  add dword [rbp - 4], 1	      1481	mark.c	FUNCTION_35	IF_1	FOR_1
0x458d	        0x837dfc23	               cmp dword [rbp - 4], 0x23	      1481	mark.c	FUNCTION_35	IF_1	FOR_1
0x4591	            0x7ecc	                           jle 0x400459f	      1481	mark.c	FUNCTION_35	IF_1	FOR_1
0x4593	    0x488b05000000	            mov rax, qword [0x040045da] 	      1483	mark.c	FUNCTION_35	IF_1	CALL_2
0x459a	          0x4889c7	                            mov rdi, rax	      1483	mark.c	FUNCTION_35	IF_1	CALL_2
0x459d	      0xe800000000	                          call 0x40045e2	      1483	mark.c	FUNCTION_35	IF_1	CALL_2
0x45a2	    0x48c705000000	               mov qword [0x040045ed], 0	      1484	mark.c	FUNCTION_35	IF_1
0x45ad	    0x488b05000000	            mov rax, qword [0x040045f4] 	      1487	mark.c	FUNCTION_35	IF_2
0x45b4	          0x4885c0	                           test rax, rax	      1487	mark.c	FUNCTION_35	IF_2
0x45b7	            0x745c	                            je 0x4004655	      1487	mark.c	FUNCTION_35	IF_2
0x45b9	    0xc745fc000000	                  mov dword [rbp - 4], 0	      1489	mark.c	FUNCTION_35	IF_2	FOR_2
0x45c0	            0xeb2e	                           jmp 0x4004630	      1489	mark.c	FUNCTION_35	IF_2	FOR_2
0x45c2	    0x488b0d000000	            mov rcx, qword [0x04004609] 	      1490	mark.c	FUNCTION_35	IF_2	CALL_3
0x45c9	          0x8b45fc	                mov eax, dword [rbp - 4]	      1490	mark.c	FUNCTION_35	IF_2	CALL_3
0x45cc	          0x4863d0	                         movsxd rdx, eax	      1490	mark.c	FUNCTION_35	IF_2	CALL_3
0x45cf	          0x4889d0	                            mov rax, rdx	      1490	mark.c	FUNCTION_35	IF_2	CALL_3
0x45d2	        0x48c1e002	                              shl rax, 2	      1490	mark.c	FUNCTION_35	IF_2	CALL_3
0x45d6	          0x4801d0	                            add rax, rdx	      1490	mark.c	FUNCTION_35	IF_2	CALL_3
0x45d9	        0x48c1e003	                              shl rax, 3	      1490	mark.c	FUNCTION_35	IF_2	CALL_3
0x45dd	          0x4801c8	                            add rax, rcx	      1490	mark.c	FUNCTION_35	IF_2	CALL_3
0x45e0	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1490	mark.c	FUNCTION_35	IF_2	CALL_3
0x45e4	          0x4889c7	                            mov rdi, rax	      1490	mark.c	FUNCTION_35	IF_2	CALL_3
0x45e7	      0xe800000000	                          call 0x400462c	      1490	mark.c	FUNCTION_35	IF_2	CALL_3
0x45ec	        0x8345fc01	                  add dword [rbp - 4], 1	      1489	mark.c	FUNCTION_35	IF_2	FOR_2
0x45f0	    0x8b0500000000	            mov eax, dword [0x04004636] 	      1489	mark.c	FUNCTION_35	IF_2	FOR_2
0x45f6	          0x3945fc	                cmp dword [rbp - 4], eax	      1489	mark.c	FUNCTION_35	IF_2	FOR_2
0x45f9	            0x7cc7	                            jl 0x4004602	      1489	mark.c	FUNCTION_35	IF_2	FOR_2
0x45fb	    0x488b05000000	            mov rax, qword [0x04004642] 	      1491	mark.c	FUNCTION_35	IF_2	CALL_4
0x4602	          0x4889c7	                            mov rdi, rax	      1491	mark.c	FUNCTION_35	IF_2	CALL_4
0x4605	      0xe800000000	                          call 0x400464a	      1491	mark.c	FUNCTION_35	IF_2	CALL_4
0x460a	    0x48c705000000	               mov qword [0x04004655], 0	      1492	mark.c	FUNCTION_35	IF_2
0x4615	              0x90	                                     nop	      1495	mark.c	FUNCTION_35
0x4616	              0xc9	                                   leave	      1495	mark.c	FUNCTION_35
0x4617	              0xc3	                                     ret	      1495	mark.c	FUNCTION_35
movechangelist	DO,0:functions,0:IF,5:SWITCH,0:CALL,0:ELSE,2:WHILE,0:FOR,0	55
0x7b3	              0x55	                                push rbp	       284	mark.c	FUNCTION_6
0x7b4	          0x4889e5	                            mov rbp, rsp	       284	mark.c	FUNCTION_6
0x7b7	          0x897dec	             mov dword [rbp - 0x14], edi	       284	mark.c	FUNCTION_6
0x7ba	    0x488b05000000	            mov rax, qword [0x04000801] 	       287	mark.c	FUNCTION_6	IF_1
0x7c1	    0x8b8088090000	           mov eax, dword [rax + 0x988] 	       287	mark.c	FUNCTION_6	IF_1
0x7c7	            0x85c0	                           test eax, eax	       287	mark.c	FUNCTION_6	IF_1
0x7c9	            0x750a	                           jne 0x4000815	       287	mark.c	FUNCTION_6	IF_1
0x7cb	      0xb800000000	                              mov eax, 0	       288	mark.c	FUNCTION_6	IF_1
0x7d0	      0xe9af000000	                           jmp 0x40008c4	       288	mark.c	FUNCTION_6	IF_1
0x7d5	    0x488b05000000	            mov rax, qword [0x0400081c] 	       290	mark.c	FUNCTION_6
0x7dc	    0x8b8048150000	          mov eax, dword [rax + 0x1548] 	       290	mark.c	FUNCTION_6
0x7e2	          0x8945fc	                mov dword [rbp - 4], eax	       290	mark.c	FUNCTION_6
0x7e5	          0x8b55fc	                mov edx, dword [rbp - 4]	       291	mark.c	FUNCTION_6	IF_2
0x7e8	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       291	mark.c	FUNCTION_6	IF_2
0x7eb	             0x1d0	                            add eax, edx	       291	mark.c	FUNCTION_6	IF_2
0x7ed	            0x85c0	                           test eax, eax	       291	mark.c	FUNCTION_6	IF_2
0x7ef	            0x7919	                           jns 0x400084a	       291	mark.c	FUNCTION_6	IF_2
0x7f1	        0x837dfc00	                  cmp dword [rbp - 4], 0	       293	mark.c	FUNCTION_6	IF_2	IF_3
0x7f5	            0x750a	                           jne 0x4000841	       293	mark.c	FUNCTION_6	IF_2	IF_3
0x7f7	      0xb800000000	                              mov eax, 0	       294	mark.c	FUNCTION_6	IF_2	IF_3
0x7fc	      0xe983000000	                           jmp 0x40008c4	       294	mark.c	FUNCTION_6	IF_2	IF_3
0x801	    0xc745fc000000	                  mov dword [rbp - 4], 0	       295	mark.c	FUNCTION_6	IF_2
0x808	            0xeb50	                           jmp 0x400089a	       295	mark.c	FUNCTION_6	IF_2
0x80a	          0x8b55fc	                mov edx, dword [rbp - 4]	       297	mark.c	FUNCTION_6	ELSE_1	IF_4
0x80d	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       297	mark.c	FUNCTION_6	ELSE_1	IF_4
0x810	             0x1c2	                            add edx, eax	       297	mark.c	FUNCTION_6	ELSE_1	IF_4
0x812	    0x488b05000000	            mov rax, qword [0x04000859] 	       297	mark.c	FUNCTION_6	ELSE_1	IF_4
0x819	    0x8b8088090000	           mov eax, dword [rax + 0x988] 	       297	mark.c	FUNCTION_6	ELSE_1	IF_4
0x81f	            0x39c2	                            cmp edx, eax	       297	mark.c	FUNCTION_6	ELSE_1	IF_4
0x821	            0x7c31	                            jl 0x4000894	       297	mark.c	FUNCTION_6	ELSE_1	IF_4
0x823	    0x488b05000000	            mov rax, qword [0x0400086a] 	       299	mark.c	FUNCTION_6	ELSE_1	IF_4	IF_5
0x82a	    0x8b8088090000	           mov eax, dword [rax + 0x988] 	       299	mark.c	FUNCTION_6	ELSE_1	IF_4	IF_5
0x830	          0x83e801	                              sub eax, 1	       299	mark.c	FUNCTION_6	ELSE_1	IF_4	IF_5
0x833	          0x3b45fc	                cmp eax, dword [rbp - 4]	       299	mark.c	FUNCTION_6	ELSE_1	IF_4	IF_5
0x836	            0x7507	                           jne 0x400087f	       299	mark.c	FUNCTION_6	ELSE_1	IF_4	IF_5
0x838	      0xb800000000	                              mov eax, 0	       300	mark.c	FUNCTION_6	ELSE_1	IF_4	IF_5
0x83d	            0xeb45	                           jmp 0x40008c4	       300	mark.c	FUNCTION_6	ELSE_1	IF_4	IF_5
0x83f	    0x488b05000000	            mov rax, qword [0x04000886] 	       301	mark.c	FUNCTION_6	ELSE_1	IF_4
0x846	    0x8b8088090000	           mov eax, dword [rax + 0x988] 	       301	mark.c	FUNCTION_6	ELSE_1	IF_4
0x84c	          0x83e801	                              sub eax, 1	       301	mark.c	FUNCTION_6	ELSE_1	IF_4
0x84f	          0x8945fc	                mov dword [rbp - 4], eax	       301	mark.c	FUNCTION_6	ELSE_1	IF_4
0x852	            0xeb06	                           jmp 0x400089a	       301	mark.c	FUNCTION_6	ELSE_1	IF_4
0x854	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       304	mark.c	FUNCTION_6	ELSE_2
0x857	           0x145fc	                add dword [rbp - 4], eax	       304	mark.c	FUNCTION_6	ELSE_2
0x85a	    0x488b05000000	            mov rax, qword [0x040008a1] 	       305	mark.c	FUNCTION_6	ELSE_2
0x861	          0x8b55fc	                mov edx, dword [rbp - 4]	       305	mark.c	FUNCTION_6	ELSE_2
0x864	    0x899048150000	          mov dword [rax + 0x1548], edx 	       305	mark.c	FUNCTION_6	ELSE_2
0x86a	    0x488b05000000	            mov rax, qword [0x040008b1] 	       306	mark.c	FUNCTION_6	ELSE_2
0x871	    0x488d90480300	                  lea rdx, [rax + 0x348]	       306	mark.c	FUNCTION_6	ELSE_2
0x878	          0x8b45fc	                mov eax, dword [rbp - 4]	       306	mark.c	FUNCTION_6	ELSE_2
0x87b	            0x4898	                                    cdqe	       306	mark.c	FUNCTION_6	ELSE_2
0x87d	        0x48c1e004	                              shl rax, 4	       306	mark.c	FUNCTION_6	ELSE_2
0x881	          0x4801d0	                            add rax, rdx	       306	mark.c	FUNCTION_6	ELSE_2
0x884	              0x5d	                                 pop rbp	       307	mark.c	FUNCTION_6	ELSE_2
0x885	              0xc3	                                     ret	       307	mark.c	FUNCTION_6	ELSE_2
ex_jumps	DO,0:functions,0:IF,5:SWITCH,0:CALL,15:ELSE,0:WHILE,0:FOR,1	167
0x2248	              0x55	                                push rbp	       897	mark.c	FUNCTION_21
0x2249	          0x4889e5	                            mov rbp, rsp	       897	mark.c	FUNCTION_21
0x224c	        0x4883ec20	                           sub rsp, 0x20	       897	mark.c	FUNCTION_21
0x2250	        0x48897de8	             mov qword [rbp - 0x18], rdi	       897	mark.c	FUNCTION_21
0x2254	      0xe8681b0000	               call sym.cleanup_jumplist	       901	mark.c	FUNCTION_21	CALL_1
0x2259	      0xbf00000000	                              mov edi, 0	       903	mark.c	FUNCTION_21	CALL_3
0x225e	      0xe800000000	                          call 0x40022a3	       903	mark.c	FUNCTION_21	CALL_3
0x2263	          0x4889c7	                            mov rdi, rax	       903	mark.c	FUNCTION_21	CALL_3
0x2266	      0xe800000000	                          call 0x40022ab	       903	mark.c	FUNCTION_21	CALL_3
0x226b	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       904	mark.c	FUNCTION_21	FOR_1
0x2272	      0xe92a020000	                           jmp 0x40024e1	       904	mark.c	FUNCTION_21	FOR_1
0x2277	    0x488b0d000000	            mov rcx, qword [0x040022be] 	       906	mark.c	FUNCTION_21	FOR_1	IF_1
0x227e	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       906	mark.c	FUNCTION_21	FOR_1	IF_1
0x2281	          0x4863d0	                         movsxd rdx, eax	       906	mark.c	FUNCTION_21	FOR_1	IF_1
0x2284	          0x4889d0	                            mov rax, rdx	       906	mark.c	FUNCTION_21	FOR_1	IF_1
0x2287	        0x48c1e002	                              shl rax, 2	       906	mark.c	FUNCTION_21	FOR_1	IF_1
0x228b	          0x4801d0	                            add rax, rdx	       906	mark.c	FUNCTION_21	FOR_1	IF_1
0x228e	        0x48c1e003	                              shl rax, 3	       906	mark.c	FUNCTION_21	FOR_1	IF_1
0x2292	          0x4801c8	                            add rax, rcx	       906	mark.c	FUNCTION_21	FOR_1	IF_1
0x2295	    0x4805a0050000	                          add rax, 0x5a0	       906	mark.c	FUNCTION_21	FOR_1	IF_1
0x229b	          0x488b00	                    mov rax, qword [rax]	       906	mark.c	FUNCTION_21	FOR_1	IF_1
0x229e	          0x4885c0	                           test rax, rax	       906	mark.c	FUNCTION_21	FOR_1	IF_1
0x22a1	     0xf84ee010000	                            je 0x40024d5	       906	mark.c	FUNCTION_21	FOR_1	IF_1
0x22a7	    0x488b0d000000	            mov rcx, qword [0x040022ee] 	       908	mark.c	FUNCTION_21	FOR_1	IF_1	IF_2
0x22ae	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       908	mark.c	FUNCTION_21	FOR_1	IF_1	IF_2
0x22b1	          0x4863d0	                         movsxd rdx, eax	       908	mark.c	FUNCTION_21	FOR_1	IF_1	IF_2
0x22b4	          0x4889d0	                            mov rax, rdx	       908	mark.c	FUNCTION_21	FOR_1	IF_1	IF_2
0x22b7	        0x48c1e002	                              shl rax, 2	       908	mark.c	FUNCTION_21	FOR_1	IF_1	IF_2
0x22bb	          0x4801d0	                            add rax, rdx	       908	mark.c	FUNCTION_21	FOR_1	IF_1	IF_2
0x22be	        0x48c1e003	                              shl rax, 3	       908	mark.c	FUNCTION_21	FOR_1	IF_1	IF_2
0x22c2	          0x4801c8	                            add rax, rcx	       908	mark.c	FUNCTION_21	FOR_1	IF_1	IF_2
0x22c5	    0x4805b0050000	                          add rax, 0x5b0	       908	mark.c	FUNCTION_21	FOR_1	IF_1	IF_2
0x22cb	            0x8b00	                    mov eax, dword [rax]	       908	mark.c	FUNCTION_21	FOR_1	IF_1	IF_2
0x22cd	            0x85c0	                           test eax, eax	       908	mark.c	FUNCTION_21	FOR_1	IF_1	IF_2
0x22cf	            0x752c	                           jne 0x400233d	       908	mark.c	FUNCTION_21	FOR_1	IF_1	IF_2
0x22d1	    0x488b0d000000	            mov rcx, qword [0x04002318] 	       909	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_4
0x22d8	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       909	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_4
0x22db	          0x4863d0	                         movsxd rdx, eax	       909	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_4
0x22de	          0x4889d0	                            mov rax, rdx	       909	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_4
0x22e1	        0x48c1e002	                              shl rax, 2	       909	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_4
0x22e5	          0x4801d0	                            add rax, rdx	       909	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_4
0x22e8	        0x48c1e003	                              shl rax, 3	       909	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_4
0x22ec	    0x4805a0050000	                          add rax, 0x5a0	       909	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_4
0x22f2	          0x4801c8	                            add rax, rcx	       909	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_4
0x22f5	          0x4889c7	                            mov rdi, rax	       909	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_4
0x22f8	      0xe80ff1ffff	                     call sym.fname2fnum	       909	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_4
0x22fd	    0x488b0d000000	            mov rcx, qword [0x04002344] 	       910	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_5
0x2304	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       910	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_5
0x2307	          0x4863d0	                         movsxd rdx, eax	       910	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_5
0x230a	          0x4889d0	                            mov rax, rdx	       910	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_5
0x230d	        0x48c1e002	                              shl rax, 2	       910	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_5
0x2311	          0x4801d0	                            add rax, rdx	       910	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_5
0x2314	        0x48c1e003	                              shl rax, 3	       910	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_5
0x2318	    0x4805a0050000	                          add rax, 0x5a0	       910	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_5
0x231e	          0x4801c8	                            add rax, rcx	       910	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_5
0x2321	      0xbe10000000	                           mov esi, 0x10	       910	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_5
0x2326	          0x4889c7	                            mov rdi, rax	       910	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_5
0x2329	      0xe800000000	                          call 0x400236e	       910	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_5
0x232e	        0x488945f8	                mov qword [rbp - 8], rax	       910	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_5
0x2332	      0x48837df800	                  cmp qword [rbp - 8], 0	       911	mark.c	FUNCTION_21	FOR_1	IF_1	IF_3
0x2337	     0xf845f010000	                            je 0x40024dc	       911	mark.c	FUNCTION_21	FOR_1	IF_1	IF_3
0x233d	      0xbf0a000000	                            mov edi, 0xa	       914	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_6
0x2342	      0xe800000000	                          call 0x4002387	       914	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_6
0x2347	    0x8b0500000000	            mov eax, dword [0x0400238d] 	       915	mark.c	FUNCTION_21	FOR_1	IF_1	IF_4
0x234d	            0x85c0	                           test eax, eax	       915	mark.c	FUNCTION_21	FOR_1	IF_1	IF_4
0x234f	            0x7411	                            je 0x40023a2	       915	mark.c	FUNCTION_21	FOR_1	IF_1	IF_4
0x2351	        0x488b45f8	                mov rax, qword [rbp - 8]	       917	mark.c	FUNCTION_21	FOR_1	IF_1	IF_4	CALL_7
0x2355	          0x4889c7	                            mov rdi, rax	       917	mark.c	FUNCTION_21	FOR_1	IF_1	IF_4	CALL_7
0x2358	      0xe800000000	                          call 0x400239d	       917	mark.c	FUNCTION_21	FOR_1	IF_1	IF_4	CALL_7
0x235d	      0xe95f010000	                           jmp 0x4002501	       918	mark.c	FUNCTION_21	FOR_1	IF_1	IF_4
0x2362	    0x488b0d000000	            mov rcx, qword [0x040023a9] 	       925	mark.c	FUNCTION_21	FOR_1	IF_1
0x2369	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       920	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_8
0x236c	          0x4863d0	                         movsxd rdx, eax	       920	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_8
0x236f	          0x4889d0	                            mov rax, rdx	       920	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_8
0x2372	        0x48c1e002	                              shl rax, 2	       920	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_8
0x2376	          0x4801d0	                            add rax, rdx	       920	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_8
0x2379	        0x48c1e003	                              shl rax, 3	       920	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_8
0x237d	          0x4801c8	                            add rax, rcx	       920	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_8
0x2380	    0x4805a8050000	                          add rax, 0x5a8	       920	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_8
0x2386	            0x8b30	                    mov esi, dword [rax]	       920	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_8
0x2388	    0x488b0d000000	            mov rcx, qword [0x040023cf] 	       924	mark.c	FUNCTION_21	FOR_1	IF_1
0x238f	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       920	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_8
0x2392	          0x4863d0	                         movsxd rdx, eax	       920	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_8
0x2395	          0x4889d0	                            mov rax, rdx	       920	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_8
0x2398	        0x48c1e002	                              shl rax, 2	       920	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_8
0x239c	          0x4801d0	                            add rax, rdx	       920	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_8
0x239f	        0x48c1e003	                              shl rax, 3	       920	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_8
0x23a3	          0x4801c8	                            add rax, rcx	       920	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_8
0x23a6	    0x4805a0050000	                          add rax, 0x5a0	       920	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_8
0x23ac	          0x488b08	                    mov rcx, qword [rax]	       920	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_8
0x23af	    0x488b05000000	            mov rax, qword [0x040023f6] 	       922	mark.c	FUNCTION_21	FOR_1	IF_1
0x23b6	    0x8b8044150000	          mov eax, dword [rax + 0x1544] 	       922	mark.c	FUNCTION_21	FOR_1	IF_1
0x23bc	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       920	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_8
0x23bf	            0x7d16	                           jge 0x4002417	       920	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_8
0x23c1	    0x488b05000000	            mov rax, qword [0x04002408] 	       922	mark.c	FUNCTION_21	FOR_1	IF_1
0x23c8	    0x8b8044150000	          mov eax, dword [rax + 0x1544] 	       922	mark.c	FUNCTION_21	FOR_1	IF_1
0x23ce	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       920	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_8
0x23d1	            0x29c2	                            sub edx, eax	       920	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_8
0x23d3	            0x89d0	                            mov eax, edx	       920	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_8
0x23d5	            0xeb10	                           jmp 0x4002427	       920	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_8
0x23d7	    0x488b05000000	            mov rax, qword [0x0400241e] 	       923	mark.c	FUNCTION_21	FOR_1	IF_1
0x23de	    0x8b8044150000	          mov eax, dword [rax + 0x1544] 	       923	mark.c	FUNCTION_21	FOR_1	IF_1
0x23e4	          0x2b45f4	              sub eax, dword [rbp - 0xc]	       920	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_8
0x23e7	    0x488b15000000	            mov rdx, qword [0x0400242e] 	       921	mark.c	FUNCTION_21	FOR_1	IF_1
0x23ee	    0x8b9244150000	          mov edx, dword [rdx + 0x1544] 	       921	mark.c	FUNCTION_21	FOR_1	IF_1
0x23f4	          0x3b55f4	              cmp edx, dword [rbp - 0xc]	       920	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_8
0x23f7	            0x7507	                           jne 0x4002440	       920	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_8
0x23f9	      0xba3e000000	                           mov edx, 0x3e	       920	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_8
0x23fe	            0xeb05	                           jmp 0x4002445	       920	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_8
0x2400	      0xba20000000	                           mov edx, 0x20	       920	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_8
0x2405	    0x488b3d000000	            mov rdi, qword [0x0400244c] 	       920	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_8
0x240c	          0x4189f1	                            mov r9d, esi	       920	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_8
0x240f	          0x4989c8	                             mov r8, rcx	       920	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_8
0x2412	            0x89c1	                            mov ecx, eax	       920	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_8
0x2414	      0xbe00000000	                              mov esi, 0	       920	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_8
0x2419	      0xb800000000	                              mov eax, 0	       920	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_8
0x241e	      0xe800000000	                          call 0x4002463	       920	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_8
0x2423	    0x488b05000000	            mov rax, qword [0x0400246a] 	       926	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_9
0x242a	          0x4889c7	                            mov rdi, rax	       926	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_9
0x242d	      0xe800000000	                          call 0x4002472	       926	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_9
0x2432	    0x488b0d000000	            mov rcx, qword [0x04002479] 	       928	mark.c	FUNCTION_21	FOR_1	IF_1
0x2439	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       928	mark.c	FUNCTION_21	FOR_1	IF_1
0x243c	          0x4863d0	                         movsxd rdx, eax	       928	mark.c	FUNCTION_21	FOR_1	IF_1
0x243f	          0x4889d0	                            mov rax, rdx	       928	mark.c	FUNCTION_21	FOR_1	IF_1
0x2442	        0x48c1e002	                              shl rax, 2	       928	mark.c	FUNCTION_21	FOR_1	IF_1
0x2446	          0x4801d0	                            add rax, rdx	       928	mark.c	FUNCTION_21	FOR_1	IF_1
0x2449	        0x48c1e003	                              shl rax, 3	       928	mark.c	FUNCTION_21	FOR_1	IF_1
0x244d	          0x4801c8	                            add rax, rcx	       928	mark.c	FUNCTION_21	FOR_1	IF_1
0x2450	    0x4805b0050000	                          add rax, 0x5b0	       928	mark.c	FUNCTION_21	FOR_1	IF_1
0x2456	            0x8b10	                    mov edx, dword [rax]	       928	mark.c	FUNCTION_21	FOR_1	IF_1
0x2458	    0x488b05000000	            mov rax, qword [0x0400249f] 	       928	mark.c	FUNCTION_21	FOR_1	IF_1
0x245f	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	       928	mark.c	FUNCTION_21	FOR_1	IF_1
0x2465	            0x39c2	                            cmp edx, eax	       927	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_10
0x2467	            0x7508	                           jne 0x40024b1	       927	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_10
0x2469	    0x8b0500000000	            mov eax, dword [0x040024af] 	       927	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_10
0x246f	            0xeb05	                           jmp 0x40024b6	       927	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_10
0x2471	      0xb800000000	                              mov eax, 0	       927	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_10
0x2476	        0x488b55f8	                mov rdx, qword [rbp - 8]	       927	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_10
0x247a	            0x89c6	                            mov esi, eax	       927	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_10
0x247c	          0x4889d7	                            mov rdi, rdx	       927	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_10
0x247f	      0xe800000000	                          call 0x40024c4	       927	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_10
0x2484	        0x488b45f8	                mov rax, qword [rbp - 8]	       930	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_12
0x2488	          0x4889c7	                            mov rdi, rax	       930	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_12
0x248b	      0xe800000000	                          call 0x40024d0	       930	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_12
0x2490	      0xe800000000	                          call 0x40024d5	       931	mark.c	FUNCTION_21	FOR_1	IF_1	CALL_13
0x2495	      0xe800000000	                          call 0x40024da	       933	mark.c	FUNCTION_21	FOR_1	CALL_14
0x249a	            0xeb01	                           jmp 0x40024dd	       933	mark.c	FUNCTION_21	FOR_1	CALL_14
0x249c	              0x90	                                     nop	       912	mark.c	FUNCTION_21	FOR_1	IF_1	IF_3
0x249d	        0x8345f401	                add dword [rbp - 0xc], 1	       904	mark.c	FUNCTION_21	FOR_1
0x24a1	    0x488b05000000	            mov rax, qword [0x040024e8] 	       904	mark.c	FUNCTION_21	FOR_1
0x24a8	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	       904	mark.c	FUNCTION_21	FOR_1
0x24ae	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       904	mark.c	FUNCTION_21	FOR_1
0x24b1	            0x7e0e	                           jle 0x4002501	       904	mark.c	FUNCTION_21	FOR_1
0x24b3	    0x8b0500000000	            mov eax, dword [0x040024f9] 	       904	mark.c	FUNCTION_21	FOR_1
0x24b9	            0x85c0	                           test eax, eax	       904	mark.c	FUNCTION_21	FOR_1
0x24bb	     0xf84b6fdffff	                            je 0x40022b7	       904	mark.c	FUNCTION_21	FOR_1
0x24c1	    0x488b05000000	            mov rax, qword [0x04002508] 	       935	mark.c	FUNCTION_21	IF_5
0x24c8	    0x8b9044150000	          mov edx, dword [rax + 0x1544] 	       935	mark.c	FUNCTION_21	IF_5
0x24ce	    0x488b05000000	            mov rax, qword [0x04002515] 	       935	mark.c	FUNCTION_21	IF_5
0x24d5	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	       935	mark.c	FUNCTION_21	IF_5
0x24db	            0x39c2	                            cmp edx, eax	       935	mark.c	FUNCTION_21	IF_5
0x24dd	            0x750a	                           jne 0x4002529	       935	mark.c	FUNCTION_21	IF_5
0x24df	      0xbf00000000	                              mov edi, 0	       936	mark.c	FUNCTION_21	CALL_15
0x24e4	      0xe800000000	                          call 0x4002529	       936	mark.c	FUNCTION_21	CALL_15
0x24e9	              0x90	                                     nop	       937	mark.c	FUNCTION_21
0x24ea	              0xc9	                                   leave	       937	mark.c	FUNCTION_21
0x24eb	              0xc3	                                     ret	       937	mark.c	FUNCTION_21
fm_getname	DO,0:functions,0:IF,1:SWITCH,0:CALL,2:ELSE,0:WHILE,0:FOR,0	25
0x18a1	              0x55	                                push rbp	       677	mark.c	FUNCTION_16
0x18a2	          0x4889e5	                            mov rbp, rsp	       677	mark.c	FUNCTION_16
0x18a5	        0x4883ec10	                           sub rsp, 0x10	       677	mark.c	FUNCTION_16
0x18a9	        0x48897df8	                mov qword [rbp - 8], rdi	       677	mark.c	FUNCTION_16
0x18ad	          0x8975f4	              mov dword [rbp - 0xc], esi	       677	mark.c	FUNCTION_16
0x18b0	        0x488b45f8	                mov rax, qword [rbp - 8]	       678	mark.c	FUNCTION_16	IF_1
0x18b4	          0x8b5010	            mov edx, dword [rax + 0x10] 	       678	mark.c	FUNCTION_16	IF_1
0x18b7	    0x488b05000000	            mov rax, qword [0x040018fe] 	       678	mark.c	FUNCTION_16	IF_1
0x18be	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	       678	mark.c	FUNCTION_16	IF_1
0x18c4	            0x39c2	                            cmp edx, eax	       678	mark.c	FUNCTION_16	IF_1
0x18c6	            0x7513	                           jne 0x400191b	       678	mark.c	FUNCTION_16	IF_1
0x18c8	        0x488b45f8	                mov rax, qword [rbp - 8]	       679	mark.c	FUNCTION_16	CALL_1
0x18cc	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       679	mark.c	FUNCTION_16	CALL_1
0x18cf	            0x89d6	                            mov esi, edx	       679	mark.c	FUNCTION_16	CALL_1
0x18d1	          0x4889c7	                            mov rdi, rax	       679	mark.c	FUNCTION_16	CALL_1
0x18d4	      0xe81c000000	                      call sym.mark_line	       679	mark.c	FUNCTION_16	CALL_1
0x18d9	            0xeb18	                           jmp 0x4001933	       679	mark.c	FUNCTION_16	CALL_1
0x18db	        0x488b45f8	                mov rax, qword [rbp - 8]	       680	mark.c	FUNCTION_16	CALL_2
0x18df	          0x8b4010	            mov eax, dword [rax + 0x10] 	       680	mark.c	FUNCTION_16	CALL_2
0x18e2	      0xba01000000	                              mov edx, 1	       680	mark.c	FUNCTION_16	CALL_2
0x18e7	      0xbe00000000	                              mov esi, 0	       680	mark.c	FUNCTION_16	CALL_2
0x18ec	            0x89c7	                            mov edi, eax	       680	mark.c	FUNCTION_16	CALL_2
0x18ee	      0xe800000000	                          call 0x4001933	       680	mark.c	FUNCTION_16	CALL_2
0x18f3	              0xc9	                                   leave	       681	mark.c	FUNCTION_16
0x18f4	              0xc3	                                     ret	       681	mark.c	FUNCTION_16
mark_adjust_nofold	DO,0:functions,0:IF,0:SWITCH,0:CALL,1:ELSE,0:WHILE,0:FOR,0	17
0x2742	              0x55	                                push rbp	      1043	mark.c	FUNCTION_25
0x2743	          0x4889e5	                            mov rbp, rsp	      1043	mark.c	FUNCTION_25
0x2746	        0x4883ec20	                           sub rsp, 0x20	      1043	mark.c	FUNCTION_25
0x274a	        0x48897df8	                mov qword [rbp - 8], rdi	      1043	mark.c	FUNCTION_25
0x274e	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1043	mark.c	FUNCTION_25
0x2752	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1043	mark.c	FUNCTION_25
0x2756	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1043	mark.c	FUNCTION_25
0x275a	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1044	mark.c	FUNCTION_25	CALL_1
0x275e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1044	mark.c	FUNCTION_25	CALL_1
0x2762	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      1044	mark.c	FUNCTION_25	CALL_1
0x2766	        0x488b45f8	                mov rax, qword [rbp - 8]	      1044	mark.c	FUNCTION_25	CALL_1
0x276a	    0x41b800000000	                              mov r8d, 0	      1044	mark.c	FUNCTION_25	CALL_1
0x2770	          0x4889c7	                            mov rdi, rax	      1044	mark.c	FUNCTION_25	CALL_1
0x2773	      0xe803000000	           call sym.mark_adjust_internal	      1044	mark.c	FUNCTION_25	CALL_1
0x2778	              0x90	                                     nop	      1045	mark.c	FUNCTION_25
0x2779	              0xc9	                                   leave	      1045	mark.c	FUNCTION_25
0x277a	              0xc3	                                     ret	      1045	mark.c	FUNCTION_25
ex_delmarks	DO,0:functions,0:IF,8:SWITCH,1:CALL,16:ELSE,7:WHILE,0:FOR,2	235
0x1ec2	              0x55	                                push rbp	       811	mark.c	FUNCTION_20
0x1ec3	          0x4889e5	                            mov rbp, rsp	       811	mark.c	FUNCTION_20
0x1ec6	        0x4883ec30	                           sub rsp, 0x30	       811	mark.c	FUNCTION_20
0x1eca	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       811	mark.c	FUNCTION_20
0x1ece	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       819	mark.c	FUNCTION_20	IF_1
0x1ed2	          0x488b00	                    mov rax, qword [rax]	       819	mark.c	FUNCTION_20	IF_1
0x1ed5	           0xfb600	                   movzx eax, byte [rax]	       819	mark.c	FUNCTION_20	IF_1
0x1ed8	            0x84c0	                             test al, al	       819	mark.c	FUNCTION_20	IF_1
0x1eda	            0x751f	                           jne 0x4001f3b	       819	mark.c	FUNCTION_20	IF_1
0x1edc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       819	mark.c	FUNCTION_20	IF_1
0x1ee0	          0x8b4034	            mov eax, dword [rax + 0x34] 	       819	mark.c	FUNCTION_20	IF_1
0x1ee3	            0x85c0	                           test eax, eax	       819	mark.c	FUNCTION_20	IF_1
0x1ee5	            0x7414	                            je 0x4001f3b	       819	mark.c	FUNCTION_20	IF_1
0x1ee7	    0x488b05000000	            mov rax, qword [0x04001f2e] 	       821	mark.c	FUNCTION_20	CALL_1
0x1eee	          0x4889c7	                            mov rdi, rax	       821	mark.c	FUNCTION_20	CALL_1
0x1ef1	      0xe800000000	                          call 0x4001f36	       821	mark.c	FUNCTION_20	CALL_1
0x1ef6	      0xe94b030000	                           jmp 0x4002286	       821	mark.c	FUNCTION_20	CALL_1
0x1efb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       822	mark.c	FUNCTION_20	ELSE_1	IF_2
0x1eff	          0x8b4034	            mov eax, dword [rax + 0x34] 	       822	mark.c	FUNCTION_20	ELSE_1	IF_2
0x1f02	            0x85c0	                           test eax, eax	       822	mark.c	FUNCTION_20	ELSE_1	IF_2
0x1f04	            0x7417	                            je 0x4001f5d	       822	mark.c	FUNCTION_20	ELSE_1	IF_2
0x1f06	      0xbf00000000	                              mov edi, 0	       823	mark.c	FUNCTION_20	ELSE_1	IF_2
0x1f0b	      0xe800000000	                          call 0x4001f50	       823	mark.c	FUNCTION_20	ELSE_1	IF_2
0x1f10	          0x4889c7	                            mov rdi, rax	       823	mark.c	FUNCTION_20	ELSE_1	IF_2
0x1f13	      0xe800000000	                          call 0x4001f58	       823	mark.c	FUNCTION_20	ELSE_1	IF_2
0x1f18	      0xe929030000	                           jmp 0x4002286	       823	mark.c	FUNCTION_20	ELSE_1	IF_2
0x1f1d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       824	mark.c	FUNCTION_20	ELSE_2	IF_3
0x1f21	          0x488b00	                    mov rax, qword [rax]	       824	mark.c	FUNCTION_20	ELSE_2	IF_3
0x1f24	           0xfb600	                   movzx eax, byte [rax]	       824	mark.c	FUNCTION_20	ELSE_2	IF_3
0x1f27	            0x84c0	                             test al, al	       824	mark.c	FUNCTION_20	ELSE_2	IF_3
0x1f29	            0x7517	                           jne 0x4001f82	       824	mark.c	FUNCTION_20	ELSE_2	IF_3
0x1f2b	      0xbf00000000	                              mov edi, 0	       825	mark.c	FUNCTION_20	ELSE_2	IF_3
0x1f30	      0xe800000000	                          call 0x4001f75	       825	mark.c	FUNCTION_20	ELSE_2	IF_3
0x1f35	          0x4889c7	                            mov rdi, rax	       825	mark.c	FUNCTION_20	ELSE_2	IF_3
0x1f38	      0xe800000000	                          call 0x4001f7d	       825	mark.c	FUNCTION_20	ELSE_2	IF_3
0x1f3d	      0xe904030000	                           jmp 0x4002286	       825	mark.c	FUNCTION_20	ELSE_2	IF_3
0x1f42	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       829	mark.c	FUNCTION_20	ELSE_3	FOR_1
0x1f46	          0x488b00	                    mov rax, qword [rax]	       829	mark.c	FUNCTION_20	ELSE_3	FOR_1
0x1f49	        0x488945f8	                mov qword [rbp - 8], rax	       829	mark.c	FUNCTION_20	ELSE_3	FOR_1
0x1f4d	      0xe9e5020000	                           jmp 0x4002277	       829	mark.c	FUNCTION_20	ELSE_3	FOR_1
0x1f52	        0x488b45f8	                mov rax, qword [rbp - 8]	       831	mark.c	FUNCTION_20	ELSE_3	FOR_1	CALL_6
0x1f56	           0xfb600	                   movzx eax, byte [rax]	       831	mark.c	FUNCTION_20	ELSE_3	FOR_1	CALL_6
0x1f59	           0xfb6c0	                           movzx eax, al	       831	mark.c	FUNCTION_20	ELSE_3	FOR_1	CALL_6
0x1f5c	          0x83e861	                           sub eax, 0x61	       831	mark.c	FUNCTION_20	ELSE_3	FOR_1	CALL_6
0x1f5f	          0x83f819	                           cmp eax, 0x19	       831	mark.c	FUNCTION_20	ELSE_3	FOR_1	CALL_6
0x1f62	           0xf96c0	                                setbe al	       831	mark.c	FUNCTION_20	ELSE_3	FOR_1	CALL_6
0x1f65	           0xfb6c0	                           movzx eax, al	       831	mark.c	FUNCTION_20	ELSE_3	FOR_1	CALL_6
0x1f68	          0x8945f0	             mov dword [rbp - 0x10], eax	       831	mark.c	FUNCTION_20	ELSE_3	FOR_1	CALL_6
0x1f6b	        0x488b45f8	                mov rax, qword [rbp - 8]	       832	mark.c	FUNCTION_20	ELSE_3	FOR_1	CALL_7
0x1f6f	           0xfb600	                   movzx eax, byte [rax]	       832	mark.c	FUNCTION_20	ELSE_3	FOR_1	CALL_7
0x1f72	           0xfb6c0	                           movzx eax, al	       832	mark.c	FUNCTION_20	ELSE_3	FOR_1	CALL_7
0x1f75	          0x83e830	                           sub eax, 0x30	       832	mark.c	FUNCTION_20	ELSE_3	FOR_1	CALL_7
0x1f78	          0x83f809	                              cmp eax, 9	       832	mark.c	FUNCTION_20	ELSE_3	FOR_1	CALL_7
0x1f7b	           0xf96c0	                                setbe al	       832	mark.c	FUNCTION_20	ELSE_3	FOR_1	CALL_7
0x1f7e	           0xfb6c0	                           movzx eax, al	       832	mark.c	FUNCTION_20	ELSE_3	FOR_1	CALL_7
0x1f81	          0x8945f4	              mov dword [rbp - 0xc], eax	       832	mark.c	FUNCTION_20	ELSE_3	FOR_1	CALL_7
0x1f84	        0x837df000	               cmp dword [rbp - 0x10], 0	       833	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	CALL_8
0x1f88	            0x751c	                           jne 0x4001fe6	       833	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	CALL_8
0x1f8a	        0x837df400	                cmp dword [rbp - 0xc], 0	       833	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	CALL_8
0x1f8e	            0x7516	                           jne 0x4001fe6	       833	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	CALL_8
0x1f90	        0x488b45f8	                mov rax, qword [rbp - 8]	       833	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	CALL_8
0x1f94	           0xfb600	                   movzx eax, byte [rax]	       833	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	CALL_8
0x1f97	           0xfb6c0	                           movzx eax, al	       833	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	CALL_8
0x1f9a	          0x83e841	                           sub eax, 0x41	       833	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	CALL_8
0x1f9d	          0x83f819	                           cmp eax, 0x19	       833	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	CALL_8
0x1fa0	     0xf87b9010000	                            ja 0x400219f	       833	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	CALL_8
0x1fa6	        0x488b45f8	                mov rax, qword [rbp - 8]	       835	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5
0x1faa	        0x4883c001	                              add rax, 1	       835	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5
0x1fae	           0xfb600	                   movzx eax, byte [rax]	       835	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5
0x1fb1	            0x3c2d	                            cmp al, 0x2d	       835	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5
0x1fb3	     0xf85a0000000	                           jne 0x4002099	       835	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5
0x1fb9	        0x488b45f8	                mov rax, qword [rbp - 8]	       838	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5
0x1fbd	           0xfb600	                   movzx eax, byte [rax]	       838	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5
0x1fc0	           0xfb6c0	                           movzx eax, al	       838	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5
0x1fc3	          0x8945e0	             mov dword [rbp - 0x20], eax	       838	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5
0x1fc6	        0x488b45f8	                mov rax, qword [rbp - 8]	       839	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5
0x1fca	        0x4883c002	                              add rax, 2	       839	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5
0x1fce	           0xfb600	                   movzx eax, byte [rax]	       839	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5
0x1fd1	           0xfb6c0	                           movzx eax, al	       839	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5
0x1fd4	          0x8945e4	             mov dword [rbp - 0x1c], eax	       839	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5
0x1fd7	        0x837df000	               cmp dword [rbp - 0x10], 0	       840	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_9
0x1fdb	            0x7418	                            je 0x4002035	       840	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_9
0x1fdd	        0x488b45f8	                mov rax, qword [rbp - 8]	       840	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_9
0x1fe1	        0x4883c002	                              add rax, 2	       840	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_9
0x1fe5	           0xfb600	                   movzx eax, byte [rax]	       840	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_9
0x1fe8	           0xfb6c0	                           movzx eax, al	       840	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_9
0x1feb	          0x83e861	                           sub eax, 0x61	       840	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_9
0x1fee	          0x83f819	                           cmp eax, 0x19	       840	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_9
0x1ff1	            0x773e	                            ja 0x4002071	       840	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_9
0x1ff3	            0xeb34	                           jmp 0x4002069	       840	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_9
0x1ff5	        0x837df400	                cmp dword [rbp - 0xc], 0	       840	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_9
0x1ff9	            0x7418	                            je 0x4002053	       840	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_9
0x1ffb	        0x488b45f8	                mov rax, qword [rbp - 8]	       841	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_10
0x1fff	        0x4883c002	                              add rax, 2	       841	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_10
0x2003	           0xfb600	                   movzx eax, byte [rax]	       841	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_10
0x2006	           0xfb6c0	                           movzx eax, al	       841	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_10
0x2009	          0x83e830	                           sub eax, 0x30	       841	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_10
0x200c	          0x83f809	                              cmp eax, 9	       843	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6
0x200f	            0x7720	                            ja 0x4002071	       843	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6
0x2011	            0xeb16	                           jmp 0x4002069	       843	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6
0x2013	        0x488b45f8	                mov rax, qword [rbp - 8]	       842	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_11
0x2017	        0x4883c002	                              add rax, 2	       842	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_11
0x201b	           0xfb600	                   movzx eax, byte [rax]	       842	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_11
0x201e	           0xfb6c0	                           movzx eax, al	       842	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_11
0x2021	          0x83e841	                           sub eax, 0x41	       842	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_11
0x2024	          0x83f819	                           cmp eax, 0x19	       843	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6
0x2027	            0x7708	                            ja 0x4002071	       843	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6
0x2029	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       843	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6
0x202c	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	       843	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6
0x202f	            0x7d21	                           jge 0x4002092	       843	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6
0x2031	      0xbf00000000	                              mov edi, 0	       845	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x2036	      0xe800000000	                          call 0x400207b	       845	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x203b	          0x4889c2	                            mov rdx, rax	       845	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x203e	        0x488b45f8	                mov rax, qword [rbp - 8]	       845	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x2042	          0x4889c6	                            mov rsi, rax	       845	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x2045	          0x4889d7	                            mov rdi, rdx	       845	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x2048	      0xe800000000	                          call 0x400208d	       845	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6	CALL_13
0x204d	      0xe9f4010000	                           jmp 0x4002286	       846	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5	IF_6
0x2052	      0x488345f802	                  add qword [rbp - 8], 2	       848	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5
0x2057	            0xeb13	                           jmp 0x40020ac	       848	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	IF_5
0x2059	        0x488b45f8	                mov rax, qword [rbp - 8]	       852	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4
0x205d	           0xfb600	                   movzx eax, byte [rax]	       852	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4
0x2060	           0xfb6c0	                           movzx eax, al	       852	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4
0x2063	          0x8945e4	             mov dword [rbp - 0x1c], eax	       852	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4
0x2066	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       852	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4
0x2069	          0x8945e0	             mov dword [rbp - 0x20], eax	       852	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4
0x206c	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       854	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2
0x206f	          0x8945e8	             mov dword [rbp - 0x18], eax	       854	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2
0x2072	      0xe9d7000000	                           jmp 0x400218e	       854	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2
0x2077	        0x837df000	               cmp dword [rbp - 0x10], 0	       856	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	IF_7
0x207b	            0x742b	                            je 0x40020e8	       856	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	IF_7
0x207d	    0x488b05000000	            mov rax, qword [0x040020c4] 	       857	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	IF_7
0x2084	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       857	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	IF_7
0x2087	          0x83ea61	                           sub edx, 0x61	       857	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	IF_7
0x208a	          0x4863d2	                         movsxd rdx, edx	       857	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	IF_7
0x208d	        0x4883c214	                           add rdx, 0x14	       857	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	IF_7
0x2091	        0x48c1e204	                              shl rdx, 4	       857	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	IF_7
0x2095	          0x4801d0	                            add rax, rdx	       857	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	IF_7
0x2098	        0x4883c008	                              add rax, 8	       857	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	IF_7
0x209c	    0x48c700000000	                      mov qword [rax], 0	       857	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	IF_7
0x20a3	      0xe9a2000000	                           jmp 0x400218a	       857	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	IF_7
0x20a8	        0x837df400	                cmp dword [rbp - 0xc], 0	       860	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5	IF_8
0x20ac	            0x740b	                            je 0x40020f9	       860	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5	IF_8
0x20ae	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       861	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5	IF_8
0x20b1	          0x83e816	                           sub eax, 0x16	       861	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5	IF_8
0x20b4	          0x8945ec	             mov dword [rbp - 0x14], eax	       861	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5	IF_8
0x20b7	            0xeb09	                           jmp 0x4002102	       861	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5	IF_8
0x20b9	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       863	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5	ELSE_6
0x20bc	          0x83e841	                           sub eax, 0x41	       863	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5	ELSE_6
0x20bf	          0x8945ec	             mov dword [rbp - 0x14], eax	       863	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5	ELSE_6
0x20c2	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       864	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5
0x20c5	          0x4863d0	                         movsxd rdx, eax	       864	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5
0x20c8	          0x4889d0	                            mov rax, rdx	       864	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5
0x20cb	        0x48c1e002	                              shl rax, 2	       864	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5
0x20cf	          0x4801d0	                            add rax, rdx	       864	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5
0x20d2	        0x48c1e003	                              shl rax, 3	       864	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5
0x20d6	    0x480500000000	                              add rax, 0	       864	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5
0x20dc	    0x48c700000000	                      mov qword [rax], 0	       864	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5
0x20e3	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       865	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5	CALL_14
0x20e6	          0x4863d0	                         movsxd rdx, eax	       865	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5	CALL_14
0x20e9	          0x4889d0	                            mov rax, rdx	       865	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5	CALL_14
0x20ec	        0x48c1e002	                              shl rax, 2	       865	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5	CALL_14
0x20f0	          0x4801d0	                            add rax, rdx	       865	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5	CALL_14
0x20f3	        0x48c1e003	                              shl rax, 3	       865	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5	CALL_14
0x20f7	    0x480500000000	                              add rax, 0	       865	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5	CALL_14
0x20fd	          0x488b00	                    mov rax, qword [rax]	       865	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5	CALL_14
0x2100	          0x4889c7	                            mov rdi, rax	       865	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5	CALL_14
0x2103	      0xe800000000	                          call 0x4002148	       865	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5	CALL_14
0x2108	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       866	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5
0x210b	          0x4863d0	                         movsxd rdx, eax	       866	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5
0x210e	          0x4889d0	                            mov rax, rdx	       866	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5
0x2111	        0x48c1e002	                              shl rax, 2	       866	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5
0x2115	          0x4801d0	                            add rax, rdx	       866	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5
0x2118	        0x48c1e003	                              shl rax, 3	       866	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5
0x211c	    0x480500000000	                              add rax, 0	       866	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5
0x2122	    0x48c700000000	                      mov qword [rax], 0	       866	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5
0x2129	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       868	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5
0x212c	          0x4863d0	                         movsxd rdx, eax	       868	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5
0x212f	          0x4889d0	                            mov rax, rdx	       868	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5
0x2132	        0x48c1e002	                              shl rax, 2	       868	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5
0x2136	          0x4801d0	                            add rax, rdx	       868	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5
0x2139	        0x48c1e003	                              shl rax, 3	       868	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5
0x213d	    0x480500000000	                              add rax, 0	       868	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5
0x2143	    0x48c700000000	                      mov qword [rax], 0	       868	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2	ELSE_5
0x214a	        0x8345e801	               add dword [rbp - 0x18], 1	       854	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2
0x214e	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       854	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2
0x2151	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	       854	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2
0x2154	     0xf8e1dffffff	                           jle 0x40020b7	       854	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	ELSE_4	FOR_2
0x215a	      0xe9d3000000	                           jmp 0x4002272	       833	mark.c	FUNCTION_20	ELSE_3	FOR_1	IF_4	CALL_8
0x215f	        0x488b45f8	                mov rax, qword [rbp - 8]	       874	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x2163	           0xfb600	                   movzx eax, byte [rax]	       874	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x2166	           0xfb6c0	                           movzx eax, al	       874	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x2169	          0x83e820	                           sub eax, 0x20	       874	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x216c	          0x83f83e	                           cmp eax, 0x3e	       874	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x216f	     0xf879e000000	                            ja 0x4002253	       874	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x2175	            0x89c0	                            mov eax, eax	       874	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x2177	    0x488b04c50000	                  mov rax, qword [rax*8]	       874	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x217f	            0xffe0	                                 jmp rax	       874	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x2181	    0x488b05000000	            mov rax, qword [0x040021c8] 	       876	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x2188	    0x48c780180300	              mov qword [rax + 0x318], 0	       876	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x2193	      0xe99a000000	                           jmp 0x4002272	       876	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x2198	    0x488b05000000	            mov rax, qword [0x040021df] 	       877	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x219f	    0x48c780280300	              mov qword [rax + 0x328], 0	       877	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x21aa	      0xe983000000	                           jmp 0x4002272	       877	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x21af	    0x488b05000000	            mov rax, qword [0x040021f6] 	       878	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x21b6	    0x48c780380300	              mov qword [rax + 0x338], 0	       878	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x21c1	            0xeb6f	                           jmp 0x4002272	       878	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x21c3	    0x488b05000000	            mov rax, qword [0x0400220a] 	       879	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x21ca	    0x48c780d01100	            mov qword [rax + 0x11d0], 0 	       879	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x21d5	            0xeb5b	                           jmp 0x4002272	       879	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x21d7	    0x488b05000000	            mov rax, qword [0x0400221e] 	       880	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x21de	    0x48c780f01100	            mov qword [rax + 0x11f0], 0 	       880	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x21e9	            0xeb47	                           jmp 0x4002272	       880	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x21eb	    0x488b05000000	            mov rax, qword [0x04002232] 	       881	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x21f2	    0x48c780e80200	              mov qword [rax + 0x2e8], 0	       881	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x21fd	            0xeb33	                           jmp 0x4002272	       881	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x21ff	    0x488b05000000	            mov rax, qword [0x04002246] 	       882	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x2206	    0x48c780f80200	              mov qword [rax + 0x2f8], 0	       882	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x2211	            0xeb1f	                           jmp 0x4002272	       882	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x2213	      0xbf00000000	                              mov edi, 0	       884	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1	CALL_16
0x2218	      0xe800000000	                          call 0x400225d	       884	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1	CALL_16
0x221d	          0x4889c2	                            mov rdx, rax	       884	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1	CALL_16
0x2220	        0x488b45f8	                mov rax, qword [rbp - 8]	       884	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1	CALL_16
0x2224	          0x4889c6	                            mov rsi, rax	       884	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1	CALL_16
0x2227	          0x4889d7	                            mov rdi, rdx	       884	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1	CALL_16
0x222a	      0xe800000000	                          call 0x400226f	       884	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1	CALL_16
0x222f	            0xeb15	                           jmp 0x4002286	       885	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x2231	              0x90	                                     nop	       883	mark.c	FUNCTION_20	ELSE_3	FOR_1	ELSE_7	SWITCH_1
0x2232	      0x488345f801	                  add qword [rbp - 8], 1	       829	mark.c	FUNCTION_20	ELSE_3	FOR_1
0x2237	        0x488b45f8	                mov rax, qword [rbp - 8]	       829	mark.c	FUNCTION_20	ELSE_3	FOR_1
0x223b	           0xfb600	                   movzx eax, byte [rax]	       829	mark.c	FUNCTION_20	ELSE_3	FOR_1
0x223e	            0x84c0	                             test al, al	       829	mark.c	FUNCTION_20	ELSE_3	FOR_1
0x2240	     0xf850cfdffff	                           jne 0x4001f92	       829	mark.c	FUNCTION_20	ELSE_3	FOR_1
0x2246	              0xc9	                                   leave	       889	mark.c	FUNCTION_20
0x2247	              0xc3	                                     ret	       889	mark.c	FUNCTION_20
set_last_cursor	DO,0:functions,0:IF,1:SWITCH,0:CALL,0:ELSE,0:WHILE,0:FOR,0	17
0x41a3	              0x55	                                push rbp	      1374	mark.c	FUNCTION_31
0x41a4	          0x4889e5	                            mov rbp, rsp	      1374	mark.c	FUNCTION_31
0x41a7	        0x48897df8	                mov qword [rbp - 8], rdi	      1374	mark.c	FUNCTION_31
0x41ab	        0x488b45f8	                mov rax, qword [rbp - 8]	      1375	mark.c	FUNCTION_31	IF_1
0x41af	        0x488b4008	                mov rax, qword [rax + 8]	      1375	mark.c	FUNCTION_31	IF_1
0x41b3	          0x4885c0	                           test rax, rax	      1375	mark.c	FUNCTION_31	IF_1
0x41b6	            0x7422	                            je 0x400421a	      1375	mark.c	FUNCTION_31	IF_1
0x41b8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1376	mark.c	FUNCTION_31	IF_1
0x41bc	        0x488b4808	                mov rcx, qword [rax + 8]	      1376	mark.c	FUNCTION_31	IF_1
0x41c0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1376	mark.c	FUNCTION_31	IF_1
0x41c4	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      1376	mark.c	FUNCTION_31	IF_1
0x41c8	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1376	mark.c	FUNCTION_31	IF_1
0x41cc	    0x488981180300	            mov qword [rcx + 0x318], rax	      1376	mark.c	FUNCTION_31	IF_1
0x41d3	    0x488991200300	            mov qword [rcx + 0x320], rdx	      1376	mark.c	FUNCTION_31	IF_1
0x41da	              0x90	                                     nop	      1377	mark.c	FUNCTION_31
0x41db	              0x5d	                                 pop rbp	      1377	mark.c	FUNCTION_31
0x41dc	              0xc3	                                     ret	      1377	mark.c	FUNCTION_31
clrallmarks	DO,0:functions,0:IF,1:SWITCH,0:CALL,0:ELSE,0:WHILE,0:FOR,2	73
0x1733	              0x55	                                push rbp	       641	mark.c	FUNCTION_15
0x1734	          0x4889e5	                            mov rbp, rsp	       641	mark.c	FUNCTION_15
0x1737	        0x48897df8	                mov qword [rbp - 8], rdi	       641	mark.c	FUNCTION_15
0x173b	    0x8b0500000000	            mov eax, dword [0x04001781] 	       644	mark.c	FUNCTION_15	IF_1
0x1741	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       644	mark.c	FUNCTION_15	IF_1
0x1744	     0xf8596000000	                           jne 0x4001820	       644	mark.c	FUNCTION_15	IF_1
0x174a	    0xc70500000000	               mov dword [0x04001794], 0	       645	mark.c	FUNCTION_15	IF_1	FOR_1
0x1754	            0xeb7b	                           jmp 0x4001811	       645	mark.c	FUNCTION_15	IF_1	FOR_1
0x1756	    0x8b0500000000	            mov eax, dword [0x0400179c] 	       647	mark.c	FUNCTION_15	IF_1	FOR_1
0x175c	          0x4863d0	                         movsxd rdx, eax	       647	mark.c	FUNCTION_15	IF_1	FOR_1
0x175f	          0x4889d0	                            mov rax, rdx	       647	mark.c	FUNCTION_15	IF_1	FOR_1
0x1762	        0x48c1e002	                              shl rax, 2	       647	mark.c	FUNCTION_15	IF_1	FOR_1
0x1766	          0x4801d0	                            add rax, rdx	       647	mark.c	FUNCTION_15	IF_1	FOR_1
0x1769	        0x48c1e003	                              shl rax, 3	       647	mark.c	FUNCTION_15	IF_1	FOR_1
0x176d	    0x480500000000	                              add rax, 0	       647	mark.c	FUNCTION_15	IF_1	FOR_1
0x1773	    0x48c700000000	                      mov qword [rax], 0	       647	mark.c	FUNCTION_15	IF_1	FOR_1
0x177a	    0x8b0500000000	            mov eax, dword [0x040017c0] 	       648	mark.c	FUNCTION_15	IF_1	FOR_1
0x1780	          0x4863d0	                         movsxd rdx, eax	       648	mark.c	FUNCTION_15	IF_1	FOR_1
0x1783	          0x4889d0	                            mov rax, rdx	       648	mark.c	FUNCTION_15	IF_1	FOR_1
0x1786	        0x48c1e002	                              shl rax, 2	       648	mark.c	FUNCTION_15	IF_1	FOR_1
0x178a	          0x4801d0	                            add rax, rdx	       648	mark.c	FUNCTION_15	IF_1	FOR_1
0x178d	        0x48c1e003	                              shl rax, 3	       648	mark.c	FUNCTION_15	IF_1	FOR_1
0x1791	    0x480500000000	                              add rax, 0	       648	mark.c	FUNCTION_15	IF_1	FOR_1
0x1797	    0x48c700000000	                      mov qword [rax], 0	       648	mark.c	FUNCTION_15	IF_1	FOR_1
0x179e	    0x8b0500000000	            mov eax, dword [0x040017e4] 	       650	mark.c	FUNCTION_15	IF_1	FOR_1
0x17a4	          0x4863d0	                         movsxd rdx, eax	       650	mark.c	FUNCTION_15	IF_1	FOR_1
0x17a7	          0x4889d0	                            mov rax, rdx	       650	mark.c	FUNCTION_15	IF_1	FOR_1
0x17aa	        0x48c1e002	                              shl rax, 2	       650	mark.c	FUNCTION_15	IF_1	FOR_1
0x17ae	          0x4801d0	                            add rax, rdx	       650	mark.c	FUNCTION_15	IF_1	FOR_1
0x17b1	        0x48c1e003	                              shl rax, 3	       650	mark.c	FUNCTION_15	IF_1	FOR_1
0x17b5	    0x480500000000	                              add rax, 0	       650	mark.c	FUNCTION_15	IF_1	FOR_1
0x17bb	    0x48c700000000	                      mov qword [rax], 0	       650	mark.c	FUNCTION_15	IF_1	FOR_1
0x17c2	    0x8b0500000000	            mov eax, dword [0x04001808] 	       645	mark.c	FUNCTION_15	IF_1	FOR_1
0x17c8	          0x83c001	                              add eax, 1	       645	mark.c	FUNCTION_15	IF_1	FOR_1
0x17cb	    0x890500000000	            mov dword [0x04001811], eax 	       645	mark.c	FUNCTION_15	IF_1	FOR_1
0x17d1	    0x8b0500000000	            mov eax, dword [0x04001817] 	       645	mark.c	FUNCTION_15	IF_1	FOR_1
0x17d7	          0x83f81a	                           cmp eax, 0x1a	       645	mark.c	FUNCTION_15	IF_1	FOR_1
0x17da	     0xf8e76ffffff	                           jle 0x4001796	       645	mark.c	FUNCTION_15	IF_1	FOR_1
0x17e0	    0xc70500000000	               mov dword [0x0400182a], 0	       654	mark.c	FUNCTION_15	FOR_2
0x17ea	            0xeb32	                           jmp 0x400185e	       654	mark.c	FUNCTION_15	FOR_2
0x17ec	    0x8b1500000000	            mov edx, dword [0x04001832] 	       655	mark.c	FUNCTION_15	FOR_2
0x17f2	        0x488b45f8	                mov rax, qword [rbp - 8]	       655	mark.c	FUNCTION_15	FOR_2
0x17f6	          0x4863d2	                         movsxd rdx, edx	       655	mark.c	FUNCTION_15	FOR_2
0x17f9	        0x4883c214	                           add rdx, 0x14	       655	mark.c	FUNCTION_15	FOR_2
0x17fd	        0x48c1e204	                              shl rdx, 4	       655	mark.c	FUNCTION_15	FOR_2
0x1801	          0x4801d0	                            add rax, rdx	       655	mark.c	FUNCTION_15	FOR_2
0x1804	        0x4883c008	                              add rax, 8	       655	mark.c	FUNCTION_15	FOR_2
0x1808	    0x48c700000000	                      mov qword [rax], 0	       655	mark.c	FUNCTION_15	FOR_2
0x180f	    0x8b0500000000	            mov eax, dword [0x04001855] 	       654	mark.c	FUNCTION_15	FOR_2
0x1815	          0x83c001	                              add eax, 1	       654	mark.c	FUNCTION_15	FOR_2
0x1818	    0x890500000000	            mov dword [0x0400185e], eax 	       654	mark.c	FUNCTION_15	FOR_2
0x181e	    0x8b0500000000	            mov eax, dword [0x04001864] 	       654	mark.c	FUNCTION_15	FOR_2
0x1824	          0x83f819	                           cmp eax, 0x19	       654	mark.c	FUNCTION_15	FOR_2
0x1827	            0x7ec3	                           jle 0x400182c	       654	mark.c	FUNCTION_15	FOR_2
0x1829	        0x488b45f8	                mov rax, qword [rbp - 8]	       656	mark.c	FUNCTION_15
0x182d	    0x48c780d01100	            mov qword [rax + 0x11d0], 0 	       656	mark.c	FUNCTION_15
0x1838	        0x488b45f8	                mov rax, qword [rbp - 8]	       657	mark.c	FUNCTION_15
0x183c	    0x48c780f01100	            mov qword [rax + 0x11f0], 0 	       657	mark.c	FUNCTION_15
0x1847	        0x488b45f8	                mov rax, qword [rbp - 8]	       658	mark.c	FUNCTION_15
0x184b	    0x48c780180300	              mov qword [rax + 0x318], 1	       658	mark.c	FUNCTION_15
0x1856	        0x488b45f8	                mov rax, qword [rbp - 8]	       659	mark.c	FUNCTION_15
0x185a	    0xc78020030000	              mov dword [rax + 0x320], 0	       659	mark.c	FUNCTION_15
0x1864	        0x488b45f8	                mov rax, qword [rbp - 8]	       661	mark.c	FUNCTION_15
0x1868	    0xc78024030000	              mov dword [rax + 0x324], 0	       661	mark.c	FUNCTION_15
0x1872	        0x488b45f8	                mov rax, qword [rbp - 8]	       663	mark.c	FUNCTION_15
0x1876	    0x48c780280300	              mov qword [rax + 0x328], 0	       663	mark.c	FUNCTION_15
0x1881	        0x488b45f8	                mov rax, qword [rbp - 8]	       664	mark.c	FUNCTION_15
0x1885	    0x48c780380300	              mov qword [rax + 0x338], 0	       664	mark.c	FUNCTION_15
0x1890	        0x488b45f8	                mov rax, qword [rbp - 8]	       666	mark.c	FUNCTION_15
0x1894	    0xc78088090000	              mov dword [rax + 0x988], 0	       666	mark.c	FUNCTION_15
0x189e	              0x90	                                     nop	       668	mark.c	FUNCTION_15
0x189f	              0x5d	                                 pop rbp	       668	mark.c	FUNCTION_15
0x18a0	              0xc3	                                     ret	       668	mark.c	FUNCTION_15
cleanup_jumplist	DO,0:functions,0:IF,4:SWITCH,0:CALL,1:ELSE,1:WHILE,0:FOR,2	147
0x3dc1	              0x55	                                push rbp	      1315	mark.c	FUNCTION_28
0x3dc2	          0x4889e5	                            mov rbp, rsp	      1315	mark.c	FUNCTION_28
0x3dc5	        0x4883ec10	                           sub rsp, 0x10	      1315	mark.c	FUNCTION_28
0x3dc9	    0xc745fc000000	                  mov dword [rbp - 4], 0	      1319	mark.c	FUNCTION_28
0x3dd0	    0xc745f8000000	                  mov dword [rbp - 8], 0	      1320	mark.c	FUNCTION_28	FOR_1
0x3dd7	      0xe9d6010000	                           jmp 0x4003ff2	      1320	mark.c	FUNCTION_28	FOR_1
0x3ddc	    0x488b05000000	            mov rax, qword [0x04003e23] 	      1322	mark.c	FUNCTION_28	FOR_1	IF_1
0x3de3	    0x8b8044150000	          mov eax, dword [rax + 0x1544] 	      1322	mark.c	FUNCTION_28	FOR_1	IF_1
0x3de9	          0x3b45f8	                cmp eax, dword [rbp - 8]	      1322	mark.c	FUNCTION_28	FOR_1	IF_1
0x3dec	            0x7510	                           jne 0x4003e3e	      1322	mark.c	FUNCTION_28	FOR_1	IF_1
0x3dee	    0x488b05000000	            mov rax, qword [0x04003e35] 	      1323	mark.c	FUNCTION_28	FOR_1	IF_1
0x3df5	          0x8b55fc	                mov edx, dword [rbp - 4]	      1323	mark.c	FUNCTION_28	FOR_1	IF_1
0x3df8	    0x899044150000	          mov dword [rax + 0x1544], edx 	      1323	mark.c	FUNCTION_28	FOR_1	IF_1
0x3dfe	          0x8b45f8	                mov eax, dword [rbp - 8]	      1324	mark.c	FUNCTION_28	FOR_1	FOR_2
0x3e01	          0x83c001	                              add eax, 1	      1324	mark.c	FUNCTION_28	FOR_1	FOR_2
0x3e04	          0x8945f4	              mov dword [rbp - 0xc], eax	      1324	mark.c	FUNCTION_28	FOR_1	FOR_2
0x3e07	      0xe9d1000000	                           jmp 0x4003f1d	      1324	mark.c	FUNCTION_28	FOR_1	FOR_2
0x3e0c	    0x488b0d000000	            mov rcx, qword [0x04003e53] 	      1325	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3e13	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1325	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3e16	          0x4863d0	                         movsxd rdx, eax	      1325	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3e19	          0x4889d0	                            mov rax, rdx	      1325	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3e1c	        0x48c1e002	                              shl rax, 2	      1325	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3e20	          0x4801d0	                            add rax, rdx	      1325	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3e23	        0x48c1e003	                              shl rax, 3	      1325	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3e27	          0x4801c8	                            add rax, rcx	      1325	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3e2a	    0x4805b0050000	                          add rax, 0x5b0	      1325	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3e30	            0x8b08	                    mov ecx, dword [rax]	      1325	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3e32	    0x488b35000000	            mov rsi, qword [0x04003e79] 	      1326	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3e39	          0x8b45f8	                mov eax, dword [rbp - 8]	      1326	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3e3c	          0x4863d0	                         movsxd rdx, eax	      1326	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3e3f	          0x4889d0	                            mov rax, rdx	      1326	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3e42	        0x48c1e002	                              shl rax, 2	      1326	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3e46	          0x4801d0	                            add rax, rdx	      1326	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3e49	        0x48c1e003	                              shl rax, 3	      1326	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3e4d	          0x4801f0	                            add rax, rsi	      1326	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3e50	    0x4805b0050000	                          add rax, 0x5b0	      1326	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3e56	            0x8b00	                    mov eax, dword [rax]	      1326	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3e58	            0x39c1	                            cmp ecx, eax	      1325	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3e5a	            0x757d	                           jne 0x4003f19	      1325	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3e5c	    0x488b0d000000	            mov rcx, qword [0x04003ea3] 	      1327	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3e63	          0x8b45f8	                mov eax, dword [rbp - 8]	      1327	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3e66	          0x4863d0	                         movsxd rdx, eax	      1327	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3e69	          0x4889d0	                            mov rax, rdx	      1327	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3e6c	        0x48c1e002	                              shl rax, 2	      1327	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3e70	          0x4801d0	                            add rax, rdx	      1327	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3e73	        0x48c1e003	                              shl rax, 3	      1327	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3e77	          0x4801c8	                            add rax, rcx	      1327	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3e7a	    0x4805b0050000	                          add rax, 0x5b0	      1327	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3e80	            0x8b00	                    mov eax, dword [rax]	      1327	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3e82	            0x85c0	                           test eax, eax	      1327	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3e84	            0x7453	                            je 0x4003f19	      1327	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3e86	    0x488b0d000000	            mov rcx, qword [0x04003ecd] 	      1328	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3e8d	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1328	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3e90	          0x4863d0	                         movsxd rdx, eax	      1328	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3e93	          0x4889d0	                            mov rax, rdx	      1328	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3e96	        0x48c1e002	                              shl rax, 2	      1328	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3e9a	          0x4801d0	                            add rax, rdx	      1328	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3e9d	        0x48c1e003	                              shl rax, 3	      1328	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3ea1	          0x4801c8	                            add rax, rcx	      1328	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3ea4	    0x4805a0050000	                          add rax, 0x5a0	      1328	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3eaa	          0x488b08	                    mov rcx, qword [rax]	      1328	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3ead	    0x488b35000000	            mov rsi, qword [0x04003ef4] 	      1329	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3eb4	          0x8b45f8	                mov eax, dword [rbp - 8]	      1329	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3eb7	          0x4863d0	                         movsxd rdx, eax	      1329	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3eba	          0x4889d0	                            mov rax, rdx	      1329	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3ebd	        0x48c1e002	                              shl rax, 2	      1329	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3ec1	          0x4801d0	                            add rax, rdx	      1329	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3ec4	        0x48c1e003	                              shl rax, 3	      1329	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3ec8	          0x4801f0	                            add rax, rsi	      1329	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3ecb	    0x4805a0050000	                          add rax, 0x5a0	      1329	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3ed1	          0x488b00	                    mov rax, qword [rax]	      1329	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3ed4	          0x4839c1	                            cmp rcx, rax	      1328	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3ed7	            0x741c	                            je 0x4003f35	      1328	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3ed9	        0x8345f401	                add dword [rbp - 0xc], 1	      1324	mark.c	FUNCTION_28	FOR_1	FOR_2
0x3edd	    0x488b05000000	            mov rax, qword [0x04003f24] 	      1324	mark.c	FUNCTION_28	FOR_1	FOR_2
0x3ee4	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	      1324	mark.c	FUNCTION_28	FOR_1	FOR_2
0x3eea	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	      1324	mark.c	FUNCTION_28	FOR_1	FOR_2
0x3eed	     0xf8f19ffffff	                            jg 0x4003e4c	      1324	mark.c	FUNCTION_28	FOR_1	FOR_2
0x3ef3	            0xeb01	                           jmp 0x4003f36	      1324	mark.c	FUNCTION_28	FOR_1	FOR_2
0x3ef5	              0x90	                                     nop	      1330	mark.c	FUNCTION_28	FOR_1	FOR_2	IF_2
0x3ef6	    0x488b05000000	            mov rax, qword [0x04003f3d] 	      1331	mark.c	FUNCTION_28	FOR_1	IF_3
0x3efd	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	      1331	mark.c	FUNCTION_28	FOR_1	IF_3
0x3f03	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	      1331	mark.c	FUNCTION_28	FOR_1	IF_3
0x3f06	            0x7f77	                            jg 0x4003fbf	      1331	mark.c	FUNCTION_28	FOR_1	IF_3
0x3f08	    0x488b0d000000	            mov rcx, qword [0x04003f4f] 	      1332	mark.c	FUNCTION_28	FOR_1	IF_3
0x3f0f	          0x8b45fc	                mov eax, dword [rbp - 4]	      1332	mark.c	FUNCTION_28	FOR_1	IF_3
0x3f12	          0x8d5001	                      lea edx, [rax + 1]	      1332	mark.c	FUNCTION_28	FOR_1	IF_3
0x3f15	          0x8955fc	                mov dword [rbp - 4], edx	      1332	mark.c	FUNCTION_28	FOR_1	IF_3
0x3f18	    0x488b35000000	            mov rsi, qword [0x04003f5f] 	      1332	mark.c	FUNCTION_28	FOR_1	IF_3
0x3f1f	          0x4863d0	                         movsxd rdx, eax	      1332	mark.c	FUNCTION_28	FOR_1	IF_3
0x3f22	          0x4889d0	                            mov rax, rdx	      1332	mark.c	FUNCTION_28	FOR_1	IF_3
0x3f25	        0x48c1e002	                              shl rax, 2	      1332	mark.c	FUNCTION_28	FOR_1	IF_3
0x3f29	          0x4801d0	                            add rax, rdx	      1332	mark.c	FUNCTION_28	FOR_1	IF_3
0x3f2c	        0x48c1e003	                              shl rax, 3	      1332	mark.c	FUNCTION_28	FOR_1	IF_3
0x3f30	          0x4801c8	                            add rax, rcx	      1332	mark.c	FUNCTION_28	FOR_1	IF_3
0x3f33	    0x488d90a00500	                  lea rdx, [rax + 0x5a0]	      1332	mark.c	FUNCTION_28	FOR_1	IF_3
0x3f3a	          0x8b45f8	                mov eax, dword [rbp - 8]	      1332	mark.c	FUNCTION_28	FOR_1	IF_3
0x3f3d	          0x4863c8	                         movsxd rcx, eax	      1332	mark.c	FUNCTION_28	FOR_1	IF_3
0x3f40	          0x4889c8	                            mov rax, rcx	      1332	mark.c	FUNCTION_28	FOR_1	IF_3
0x3f43	        0x48c1e002	                              shl rax, 2	      1332	mark.c	FUNCTION_28	FOR_1	IF_3
0x3f47	          0x4801c8	                            add rax, rcx	      1332	mark.c	FUNCTION_28	FOR_1	IF_3
0x3f4a	        0x48c1e003	                              shl rax, 3	      1332	mark.c	FUNCTION_28	FOR_1	IF_3
0x3f4e	          0x4801f0	                            add rax, rsi	      1332	mark.c	FUNCTION_28	FOR_1	IF_3
0x3f51	    0x4805a0050000	                          add rax, 0x5a0	      1332	mark.c	FUNCTION_28	FOR_1	IF_3
0x3f57	          0x488b08	                    mov rcx, qword [rax]	      1332	mark.c	FUNCTION_28	FOR_1	IF_3
0x3f5a	          0x48890a	                    mov qword [rdx], rcx	      1332	mark.c	FUNCTION_28	FOR_1	IF_3
0x3f5d	        0x488b4808	                mov rcx, qword [rax + 8]	      1332	mark.c	FUNCTION_28	FOR_1	IF_3
0x3f61	        0x48894a08	                mov qword [rdx + 8], rcx	      1332	mark.c	FUNCTION_28	FOR_1	IF_3
0x3f65	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      1332	mark.c	FUNCTION_28	FOR_1	IF_3
0x3f69	        0x48894a10	             mov qword [rdx + 0x10], rcx	      1332	mark.c	FUNCTION_28	FOR_1	IF_3
0x3f6d	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      1332	mark.c	FUNCTION_28	FOR_1	IF_3
0x3f71	        0x48894a18	             mov qword [rdx + 0x18], rcx	      1332	mark.c	FUNCTION_28	FOR_1	IF_3
0x3f75	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1332	mark.c	FUNCTION_28	FOR_1	IF_3
0x3f79	        0x48894220	             mov qword [rdx + 0x20], rax	      1332	mark.c	FUNCTION_28	FOR_1	IF_3
0x3f7d	            0xeb2f	                           jmp 0x4003fee	      1332	mark.c	FUNCTION_28	FOR_1	IF_3
0x3f7f	    0x488b0d000000	            mov rcx, qword [0x04003fc6] 	      1334	mark.c	FUNCTION_28	FOR_1	CALL_1
0x3f86	          0x8b45f8	                mov eax, dword [rbp - 8]	      1334	mark.c	FUNCTION_28	FOR_1	CALL_1
0x3f89	          0x4863d0	                         movsxd rdx, eax	      1334	mark.c	FUNCTION_28	FOR_1	CALL_1
0x3f8c	          0x4889d0	                            mov rax, rdx	      1334	mark.c	FUNCTION_28	FOR_1	CALL_1
0x3f8f	        0x48c1e002	                              shl rax, 2	      1334	mark.c	FUNCTION_28	FOR_1	CALL_1
0x3f93	          0x4801d0	                            add rax, rdx	      1334	mark.c	FUNCTION_28	FOR_1	CALL_1
0x3f96	        0x48c1e003	                              shl rax, 3	      1334	mark.c	FUNCTION_28	FOR_1	CALL_1
0x3f9a	          0x4801c8	                            add rax, rcx	      1334	mark.c	FUNCTION_28	FOR_1	CALL_1
0x3f9d	    0x4805b8050000	                          add rax, 0x5b8	      1334	mark.c	FUNCTION_28	FOR_1	CALL_1
0x3fa3	          0x488b00	                    mov rax, qword [rax]	      1334	mark.c	FUNCTION_28	FOR_1	CALL_1
0x3fa6	          0x4889c7	                            mov rdi, rax	      1334	mark.c	FUNCTION_28	FOR_1	CALL_1
0x3fa9	      0xe800000000	                          call 0x4003fee	      1334	mark.c	FUNCTION_28	FOR_1	CALL_1
0x3fae	        0x8345f801	                  add dword [rbp - 8], 1	      1320	mark.c	FUNCTION_28	FOR_1
0x3fb2	    0x488b05000000	            mov rax, qword [0x04003ff9] 	      1320	mark.c	FUNCTION_28	FOR_1
0x3fb9	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	      1320	mark.c	FUNCTION_28	FOR_1
0x3fbf	          0x3b45f8	                cmp eax, dword [rbp - 8]	      1320	mark.c	FUNCTION_28	FOR_1
0x3fc2	     0xf8f14feffff	                            jg 0x4003e1c	      1320	mark.c	FUNCTION_28	FOR_1
0x3fc8	    0x488b05000000	            mov rax, qword [0x0400400f] 	      1336	mark.c	FUNCTION_28	IF_4
0x3fcf	    0x8b9044150000	          mov edx, dword [rax + 0x1544] 	      1336	mark.c	FUNCTION_28	IF_4
0x3fd5	    0x488b05000000	            mov rax, qword [0x0400401c] 	      1336	mark.c	FUNCTION_28	IF_4
0x3fdc	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	      1336	mark.c	FUNCTION_28	IF_4
0x3fe2	            0x39c2	                            cmp edx, eax	      1336	mark.c	FUNCTION_28	IF_4
0x3fe4	            0x7510	                           jne 0x4004036	      1336	mark.c	FUNCTION_28	IF_4
0x3fe6	    0x488b05000000	            mov rax, qword [0x0400402d] 	      1337	mark.c	FUNCTION_28	IF_4
0x3fed	          0x8b55fc	                mov edx, dword [rbp - 4]	      1337	mark.c	FUNCTION_28	IF_4
0x3ff0	    0x899044150000	          mov dword [rax + 0x1544], edx 	      1337	mark.c	FUNCTION_28	IF_4
0x3ff6	    0x488b05000000	            mov rax, qword [0x0400403d] 	      1338	mark.c	FUNCTION_28
0x3ffd	          0x8b55fc	                mov edx, dword [rbp - 4]	      1338	mark.c	FUNCTION_28
0x4000	    0x899040150000	          mov dword [rax + 0x1540], edx 	      1338	mark.c	FUNCTION_28
0x4006	              0x90	                                     nop	      1339	mark.c	FUNCTION_28
0x4007	              0xc9	                                   leave	      1339	mark.c	FUNCTION_28
0x4008	              0xc3	                                     ret	      1339	mark.c	FUNCTION_28
getnextmark	DO,0:functions,0:IF,6:SWITCH,0:CALL,4:ELSE,2:WHILE,0:FOR,1	305
0xfb0	              0x55	                                push rbp	       480	mark.c	ELSE_16	FUNCTION_10
0xfb1	          0x4889e5	                            mov rbp, rsp	       480	mark.c	ELSE_16	FUNCTION_10
0xfb4	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       480	mark.c	ELSE_16	FUNCTION_10
0xfb8	          0x8975d4	             mov dword [rbp - 0x2c], esi	       480	mark.c	ELSE_16	FUNCTION_10
0xfbb	          0x8955d0	             mov dword [rbp - 0x30], edx	       480	mark.c	ELSE_16	FUNCTION_10
0xfbe	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       482	mark.c	ELSE_16	FUNCTION_10
0xfc6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       485	mark.c	ELSE_16	FUNCTION_10
0xfca	        0x488b5008	                mov rdx, qword [rax + 8]	       485	mark.c	ELSE_16	FUNCTION_10
0xfce	          0x488b00	                    mov rax, qword [rax]	       485	mark.c	ELSE_16	FUNCTION_10
0xfd1	        0x488945f0	             mov qword [rbp - 0x10], rax	       485	mark.c	ELSE_16	FUNCTION_10
0xfd5	        0x488955f8	                mov qword [rbp - 8], rdx	       485	mark.c	ELSE_16	FUNCTION_10
0xfd9	        0x837dd4ff	cmp dword [rbp - 0x2c], 0xffffffffffffffff	       491	mark.c	ELSE_16	FUNCTION_10	IF_1
0xfdd	            0x750f	                           jne 0x400102e	       491	mark.c	ELSE_16	FUNCTION_10	IF_1
0xfdf	        0x837dd000	               cmp dword [rbp - 0x30], 0	       491	mark.c	ELSE_16	FUNCTION_10	IF_1
0xfe3	            0x7409	                            je 0x400102e	       491	mark.c	ELSE_16	FUNCTION_10	IF_1
0xfe5	    0xc745f8000000	                  mov dword [rbp - 8], 0	       492	mark.c	ELSE_16	FUNCTION_10	IF_1
0xfec	            0xeb13	                           jmp 0x4001041	       492	mark.c	ELSE_16	FUNCTION_10	IF_1
0xfee	        0x837dd401	               cmp dword [rbp - 0x2c], 1	       493	mark.c	ELSE_16	FUNCTION_10	ELSE_1	IF_2
0xff2	            0x750d	                           jne 0x4001041	       493	mark.c	ELSE_16	FUNCTION_10	ELSE_1	IF_2
0xff4	        0x837dd000	               cmp dword [rbp - 0x30], 0	       493	mark.c	ELSE_16	FUNCTION_10	ELSE_1	IF_2
0xff8	            0x7407	                            je 0x4001041	       493	mark.c	ELSE_16	FUNCTION_10	ELSE_1	IF_2
0xffa	    0xc745f8ffffff	         mov dword [rbp - 8], 0x7fffffff	       494	mark.c	ELSE_16	FUNCTION_10	ELSE_1	IF_2
0x1001	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	       496	mark.c	ELSE_16	FUNCTION_10	FOR_1
0x1008	      0xe9ef030000	                           jmp 0x400143c	       496	mark.c	ELSE_16	FUNCTION_10	FOR_1
0x100d	    0x488b05000000	            mov rax, qword [0x04001054] 	       498	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3
0x1014	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       498	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3
0x1017	          0x4863d2	                         movsxd rdx, edx	       498	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3
0x101a	        0x4883c214	                           add rdx, 0x14	       498	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3
0x101e	        0x48c1e204	                              shl rdx, 4	       498	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3
0x1022	          0x4801d0	                            add rax, rdx	       498	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3
0x1025	        0x4883c008	                              add rax, 8	       498	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3
0x1029	          0x488b00	                    mov rax, qword [rax]	       498	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3
0x102c	          0x4885c0	                           test rax, rax	       498	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3
0x102f	     0xf8ec3030000	                           jle 0x4001438	       498	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3
0x1035	        0x837dd401	               cmp dword [rbp - 0x2c], 1	       500	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4
0x1039	     0xf85e1010000	                           jne 0x4001260	       500	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4
0x103f	      0x48837de800	               cmp qword [rbp - 0x18], 0	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x1044	     0xf84e3000000	                            je 0x400116d	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x104a	    0x488b05000000	            mov rax, qword [0x04001091] 	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x1051	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x1054	          0x4863d2	                         movsxd rdx, edx	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x1057	        0x4883c214	                           add rdx, 0x14	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x105b	        0x48c1e204	                              shl rdx, 4	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x105f	          0x4801d0	                            add rax, rdx	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x1062	        0x4883c008	                              add rax, 8	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x1066	          0x488b10	                    mov rdx, qword [rax]	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x1069	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x106d	          0x488b00	                    mov rax, qword [rax]	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x1070	          0x4839c2	                            cmp rdx, rax	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x1073	            0x7434	                            je 0x40010e9	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x1075	    0x488b05000000	            mov rax, qword [0x040010bc] 	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x107c	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x107f	          0x4863d2	                         movsxd rdx, edx	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x1082	        0x4883c214	                           add rdx, 0x14	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x1086	        0x48c1e204	                              shl rdx, 4	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x108a	          0x4801d0	                            add rax, rdx	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x108d	        0x4883c008	                              add rax, 8	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x1091	          0x488b10	                    mov rdx, qword [rax]	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x1094	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x1098	          0x488b00	                    mov rax, qword [rax]	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x109b	          0x4839c2	                            cmp rdx, rax	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x109e	     0xf8c89000000	                            jl 0x400116d	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x10a4	      0xe94f030000	                           jmp 0x4001438	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x10a9	    0x488b05000000	            mov rax, qword [0x040010f0] 	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x10b0	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x10b3	          0x4863d2	                         movsxd rdx, edx	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x10b6	        0x4883c214	                           add rdx, 0x14	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x10ba	        0x48c1e204	                              shl rdx, 4	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x10be	          0x4801d0	                            add rax, rdx	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x10c1	        0x4883c010	                           add rax, 0x10	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x10c5	            0x8b10	                    mov edx, dword [rax]	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x10c7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x10cb	          0x8b4008	                mov eax, dword [rax + 8]	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x10ce	            0x39c2	                            cmp edx, eax	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x10d0	            0x742e	                            je 0x4001140	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x10d2	    0x488b05000000	            mov rax, qword [0x04001119] 	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x10d9	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x10dc	          0x4863d2	                         movsxd rdx, edx	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x10df	        0x4883c214	                           add rdx, 0x14	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x10e3	        0x48c1e204	                              shl rdx, 4	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x10e7	          0x4801d0	                            add rax, rdx	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x10ea	        0x4883c010	                           add rax, 0x10	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x10ee	            0x8b10	                    mov edx, dword [rax]	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x10f0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x10f4	          0x8b4008	                mov eax, dword [rax + 8]	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x10f7	            0x39c2	                            cmp edx, eax	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x10f9	            0x7c32	                            jl 0x400116d	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x10fb	      0xe9f8020000	                           jmp 0x4001438	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x1100	    0x488b05000000	            mov rax, qword [0x04001147] 	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x1107	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x110a	          0x4863d2	                         movsxd rdx, edx	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x110d	        0x4883c214	                           add rdx, 0x14	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x1111	        0x48c1e204	                              shl rdx, 4	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x1115	          0x4801d0	                            add rax, rdx	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x1118	        0x4883c014	                           add rax, 0x14	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x111c	            0x8b10	                    mov edx, dword [rax]	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x111e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x1122	          0x8b400c	              mov eax, dword [rax + 0xc]	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x1125	            0x39c2	                            cmp edx, eax	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x1127	     0xf8dcb020000	                           jge 0x4001438	       502	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_1
0x112d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x1131	    0x488b05000000	            mov rax, qword [0x04001178] 	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x1138	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x113b	          0x4863c9	                         movsxd rcx, ecx	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x113e	        0x4883c114	                           add rcx, 0x14	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x1142	        0x48c1e104	                              shl rcx, 4	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x1146	          0x4801c8	                            add rax, rcx	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x1149	        0x4883c008	                              add rax, 8	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x114d	          0x488b00	                    mov rax, qword [rax]	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x1150	          0x4839c2	                            cmp rdx, rax	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x1153	            0x742b	                            je 0x40011c0	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x1155	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x1159	    0x488b05000000	            mov rax, qword [0x040011a0] 	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x1160	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x1163	          0x4863c9	                         movsxd rcx, ecx	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x1166	        0x4883c114	                           add rcx, 0x14	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x116a	        0x48c1e104	                              shl rcx, 4	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x116e	          0x4801c8	                            add rax, rcx	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x1171	        0x4883c008	                              add rax, 8	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x1175	          0x488b00	                    mov rax, qword [rax]	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x1178	          0x4839c2	                            cmp rdx, rax	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x117b	           0xf9cc0	                                 setl al	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x117e	            0xeb73	                           jmp 0x4001233	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x1180	          0x8b55f8	                mov edx, dword [rbp - 8]	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x1183	    0x488b05000000	            mov rax, qword [0x040011ca] 	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x118a	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x118d	          0x4863c9	                         movsxd rcx, ecx	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x1190	        0x4883c114	                           add rcx, 0x14	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x1194	        0x48c1e104	                              shl rcx, 4	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x1198	          0x4801c8	                            add rax, rcx	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x119b	        0x4883c010	                           add rax, 0x10	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x119f	            0x8b00	                    mov eax, dword [rax]	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x11a1	            0x39c2	                            cmp edx, eax	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x11a3	            0x7428	                            je 0x400120d	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x11a5	          0x8b55f8	                mov edx, dword [rbp - 8]	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x11a8	    0x488b05000000	            mov rax, qword [0x040011ef] 	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x11af	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x11b2	          0x4863c9	                         movsxd rcx, ecx	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x11b5	        0x4883c114	                           add rcx, 0x14	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x11b9	        0x48c1e104	                              shl rcx, 4	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x11bd	          0x4801c8	                            add rax, rcx	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x11c0	        0x4883c010	                           add rax, 0x10	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x11c4	            0x8b00	                    mov eax, dword [rax]	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x11c6	            0x39c2	                            cmp edx, eax	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x11c8	           0xf9cc0	                                 setl al	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x11cb	            0xeb26	                           jmp 0x4001233	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x11cd	          0x8b55fc	                mov edx, dword [rbp - 4]	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x11d0	    0x488b05000000	            mov rax, qword [0x04001217] 	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x11d7	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x11da	          0x4863c9	                         movsxd rcx, ecx	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x11dd	        0x4883c114	                           add rcx, 0x14	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x11e1	        0x48c1e104	                              shl rcx, 4	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x11e5	          0x4801c8	                            add rax, rcx	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x11e8	        0x4883c014	                           add rax, 0x14	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x11ec	            0x8b00	                    mov eax, dword [rax]	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x11ee	            0x39c2	                            cmp edx, eax	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x11f0	           0xf9cc0	                                 setl al	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x11f3	            0x84c0	                             test al, al	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x11f5	     0xf84fd010000	                            je 0x4001438	       503	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5	CALL_2
0x11fb	    0x488b05000000	            mov rax, qword [0x04001242] 	       504	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5
0x1202	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       504	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5
0x1205	          0x4863d2	                         movsxd rdx, edx	       504	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5
0x1208	        0x4883c214	                           add rdx, 0x14	       504	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5
0x120c	        0x48c1e204	                              shl rdx, 4	       504	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5
0x1210	          0x4801d0	                            add rax, rdx	       504	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5
0x1213	        0x4883c008	                              add rax, 8	       504	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5
0x1217	        0x488945e8	             mov qword [rbp - 0x18], rax	       504	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5
0x121b	      0xe9d8010000	                           jmp 0x4001438	       504	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5
0x1220	      0x48837de800	               cmp qword [rbp - 0x18], 0	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x1225	     0xf84e3000000	                            je 0x400134e	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x122b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x122f	          0x488b10	                    mov rdx, qword [rax]	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x1232	    0x488b05000000	            mov rax, qword [0x04001279] 	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x1239	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x123c	          0x4863c9	                         movsxd rcx, ecx	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x123f	        0x4883c114	                           add rcx, 0x14	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x1243	        0x48c1e104	                              shl rcx, 4	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x1247	          0x4801c8	                            add rax, rcx	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x124a	        0x4883c008	                              add rax, 8	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x124e	          0x488b00	                    mov rax, qword [rax]	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x1251	          0x4839c2	                            cmp rdx, rax	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x1254	            0x7434	                            je 0x40012ca	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x1256	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x125a	          0x488b10	                    mov rdx, qword [rax]	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x125d	    0x488b05000000	            mov rax, qword [0x040012a4] 	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x1264	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x1267	          0x4863c9	                         movsxd rcx, ecx	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x126a	        0x4883c114	                           add rcx, 0x14	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x126e	        0x48c1e104	                              shl rcx, 4	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x1272	          0x4801c8	                            add rax, rcx	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x1275	        0x4883c008	                              add rax, 8	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x1279	          0x488b00	                    mov rax, qword [rax]	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x127c	          0x4839c2	                            cmp rdx, rax	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x127f	     0xf8c89000000	                            jl 0x400134e	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x1285	      0xe96e010000	                           jmp 0x4001438	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x128a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x128e	          0x8b5008	                mov edx, dword [rax + 8]	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x1291	    0x488b05000000	            mov rax, qword [0x040012d8] 	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x1298	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x129b	          0x4863c9	                         movsxd rcx, ecx	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x129e	        0x4883c114	                           add rcx, 0x14	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x12a2	        0x48c1e104	                              shl rcx, 4	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x12a6	          0x4801c8	                            add rax, rcx	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x12a9	        0x4883c010	                           add rax, 0x10	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x12ad	            0x8b00	                    mov eax, dword [rax]	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x12af	            0x39c2	                            cmp edx, eax	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x12b1	            0x742e	                            je 0x4001321	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x12b3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x12b7	          0x8b5008	                mov edx, dword [rax + 8]	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x12ba	    0x488b05000000	            mov rax, qword [0x04001301] 	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x12c1	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x12c4	          0x4863c9	                         movsxd rcx, ecx	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x12c7	        0x4883c114	                           add rcx, 0x14	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x12cb	        0x48c1e104	                              shl rcx, 4	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x12cf	          0x4801c8	                            add rax, rcx	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x12d2	        0x4883c010	                           add rax, 0x10	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x12d6	            0x8b00	                    mov eax, dword [rax]	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x12d8	            0x39c2	                            cmp edx, eax	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x12da	            0x7c32	                            jl 0x400134e	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x12dc	      0xe917010000	                           jmp 0x4001438	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x12e1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x12e5	          0x8b500c	              mov edx, dword [rax + 0xc]	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x12e8	    0x488b05000000	            mov rax, qword [0x0400132f] 	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x12ef	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x12f2	          0x4863c9	                         movsxd rcx, ecx	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x12f5	        0x4883c114	                           add rcx, 0x14	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x12f9	        0x48c1e104	                              shl rcx, 4	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x12fd	          0x4801c8	                            add rax, rcx	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x1300	        0x4883c014	                           add rax, 0x14	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x1304	            0x8b00	                    mov eax, dword [rax]	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x1306	            0x39c2	                            cmp edx, eax	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x1308	     0xf8dea000000	                           jge 0x4001438	       508	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_3
0x130e	    0x488b05000000	            mov rax, qword [0x04001355] 	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x1315	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x1318	          0x4863d2	                         movsxd rdx, edx	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x131b	        0x4883c214	                           add rdx, 0x14	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x131f	        0x48c1e204	                              shl rdx, 4	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x1323	          0x4801d0	                            add rax, rdx	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x1326	        0x4883c008	                              add rax, 8	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x132a	          0x488b10	                    mov rdx, qword [rax]	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x132d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x1331	          0x4839c2	                            cmp rdx, rax	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x1334	            0x742b	                            je 0x40013a1	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x1336	    0x488b05000000	            mov rax, qword [0x0400137d] 	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x133d	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x1340	          0x4863d2	                         movsxd rdx, edx	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x1343	        0x4883c214	                           add rdx, 0x14	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x1347	        0x48c1e204	                              shl rdx, 4	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x134b	          0x4801d0	                            add rax, rdx	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x134e	        0x4883c008	                              add rax, 8	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x1352	          0x488b10	                    mov rdx, qword [rax]	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x1355	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x1359	          0x4839c2	                            cmp rdx, rax	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x135c	           0xf9cc0	                                 setl al	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x135f	            0xeb73	                           jmp 0x4001414	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x1361	    0x488b05000000	            mov rax, qword [0x040013a8] 	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x1368	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x136b	          0x4863d2	                         movsxd rdx, edx	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x136e	        0x4883c214	                           add rdx, 0x14	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x1372	        0x48c1e204	                              shl rdx, 4	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x1376	          0x4801d0	                            add rax, rdx	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x1379	        0x4883c010	                           add rax, 0x10	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x137d	            0x8b10	                    mov edx, dword [rax]	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x137f	          0x8b45f8	                mov eax, dword [rbp - 8]	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x1382	            0x39c2	                            cmp edx, eax	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x1384	            0x7428	                            je 0x40013ee	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x1386	    0x488b05000000	            mov rax, qword [0x040013cd] 	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x138d	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x1390	          0x4863d2	                         movsxd rdx, edx	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x1393	        0x4883c214	                           add rdx, 0x14	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x1397	        0x48c1e204	                              shl rdx, 4	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x139b	          0x4801d0	                            add rax, rdx	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x139e	        0x4883c010	                           add rax, 0x10	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x13a2	            0x8b10	                    mov edx, dword [rax]	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x13a4	          0x8b45f8	                mov eax, dword [rbp - 8]	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x13a7	            0x39c2	                            cmp edx, eax	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x13a9	           0xf9cc0	                                 setl al	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x13ac	            0xeb26	                           jmp 0x4001414	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x13ae	    0x488b05000000	            mov rax, qword [0x040013f5] 	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x13b5	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x13b8	          0x4863d2	                         movsxd rdx, edx	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x13bb	        0x4883c214	                           add rdx, 0x14	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x13bf	        0x48c1e204	                              shl rdx, 4	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x13c3	          0x4801d0	                            add rax, rdx	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x13c6	        0x4883c014	                           add rax, 0x14	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x13ca	            0x8b10	                    mov edx, dword [rax]	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x13cc	          0x8b45fc	                mov eax, dword [rbp - 4]	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x13cf	            0x39c2	                            cmp edx, eax	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x13d1	           0xf9cc0	                                 setl al	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x13d4	            0x84c0	                             test al, al	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x13d6	            0x7420	                            je 0x4001438	       509	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6	CALL_4
0x13d8	    0x488b05000000	            mov rax, qword [0x0400141f] 	       510	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6
0x13df	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       510	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6
0x13e2	          0x4863d2	                         movsxd rdx, edx	       510	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6
0x13e5	        0x4883c214	                           add rdx, 0x14	       510	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6
0x13e9	        0x48c1e204	                              shl rdx, 4	       510	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6
0x13ed	          0x4801d0	                            add rax, rdx	       510	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6
0x13f0	        0x4883c008	                              add rax, 8	       510	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6
0x13f4	        0x488945e8	             mov qword [rbp - 0x18], rax	       510	mark.c	ELSE_16	FUNCTION_10	FOR_1	IF_3	ELSE_2	IF_6
0x13f8	        0x8345e401	               add dword [rbp - 0x1c], 1	       496	mark.c	ELSE_16	FUNCTION_10	FOR_1
0x13fc	        0x837de419	           cmp dword [rbp - 0x1c], 0x19 	       496	mark.c	ELSE_16	FUNCTION_10	FOR_1
0x1400	     0xf8e07fcffff	                           jle 0x400104d	       496	mark.c	ELSE_16	FUNCTION_10	FOR_1
0x1406	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       515	mark.c	ELSE_16	FUNCTION_10
0x140a	              0x5d	                                 pop rbp	       516	mark.c	ELSE_16	FUNCTION_10
0x140b	              0xc3	                                     ret	       516	mark.c	ELSE_16	FUNCTION_10
getmark_buf	DO,0:functions,0:IF,0:SWITCH,0:CALL,1:ELSE,0:WHILE,0:FOR,0	14
0x886	              0x55	                                push rbp	       323	mark.c	ELSE_2	FUNCTION_7
0x887	          0x4889e5	                            mov rbp, rsp	       323	mark.c	ELSE_2	FUNCTION_7
0x88a	        0x4883ec10	                           sub rsp, 0x10	       323	mark.c	ELSE_2	FUNCTION_7
0x88e	        0x48897df8	                mov qword [rbp - 8], rdi	       323	mark.c	ELSE_2	FUNCTION_7
0x892	          0x8975f4	              mov dword [rbp - 0xc], esi	       323	mark.c	ELSE_2	FUNCTION_7
0x895	          0x8955f0	             mov dword [rbp - 0x10], edx	       323	mark.c	ELSE_2	FUNCTION_7
0x898	          0x8b55f0	             mov edx, dword [rbp - 0x10]	       324	mark.c	ELSE_2	FUNCTION_7	CALL_1
0x89b	          0x8b75f4	              mov esi, dword [rbp - 0xc]	       324	mark.c	ELSE_2	FUNCTION_7	CALL_1
0x89e	        0x488b45f8	                mov rax, qword [rbp - 8]	       324	mark.c	ELSE_2	FUNCTION_7	CALL_1
0x8a2	      0xb900000000	                              mov ecx, 0	       324	mark.c	ELSE_2	FUNCTION_7	CALL_1
0x8a7	          0x4889c7	                            mov rdi, rax	       324	mark.c	ELSE_2	FUNCTION_7	CALL_1
0x8aa	      0xe800000000	                          call 0x40008ef	       324	mark.c	ELSE_2	FUNCTION_7	CALL_1
0x8af	              0xc9	                                   leave	       325	mark.c	ELSE_2	FUNCTION_7
0x8b0	              0xc3	                                     ret	       325	mark.c	ELSE_2	FUNCTION_7
fmarks_check_names	DO,0:functions,1:IF,2:SWITCH,0:CALL,3:ELSE,0:WHILE,0:FOR,1	72
0x1519	              0x55	                                push rbp	       565	mark.c	FUNCTION_12
0x151a	          0x4889e5	                            mov rbp, rsp	       565	mark.c	FUNCTION_12
0x151d	        0x4883ec30	                           sub rsp, 0x30	       565	mark.c	FUNCTION_12
0x1521	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       565	mark.c	FUNCTION_12
0x1525	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       572	mark.c	FUNCTION_12	IF_1
0x1529	    0x488b80880000	            mov rax, qword [rax + 0x88] 	       572	mark.c	FUNCTION_12	IF_1
0x1530	          0x4885c0	                           test rax, rax	       572	mark.c	FUNCTION_12	IF_1
0x1533	     0xf84ea000000	                            je 0x4001663	       572	mark.c	FUNCTION_12	IF_1
0x1539	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       575	mark.c	FUNCTION_12	CALL_1
0x153d	    0x488b90880000	            mov rdx, qword [rax + 0x88] 	       575	mark.c	FUNCTION_12	CALL_1
0x1544	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       575	mark.c	FUNCTION_12	CALL_1
0x1548	          0x4889d6	                            mov rsi, rdx	       575	mark.c	FUNCTION_12	CALL_1
0x154b	          0x4889c7	                            mov rdi, rax	       575	mark.c	FUNCTION_12	CALL_1
0x154e	      0xe800000000	                          call 0x4001593	       575	mark.c	FUNCTION_12	CALL_1
0x1553	        0x488945f8	                mov qword [rbp - 8], rax	       575	mark.c	FUNCTION_12	CALL_1
0x1557	      0x48837df800	                  cmp qword [rbp - 8], 0	       576	mark.c	FUNCTION_12	IF_2
0x155c	     0xf84c4000000	                            je 0x4001666	       576	mark.c	FUNCTION_12	IF_2
0x1562	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       579	mark.c	FUNCTION_12	FOR_1
0x1569	            0xeb32	                           jmp 0x40015dd	       579	mark.c	FUNCTION_12	FOR_1
0x156b	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       580	mark.c	FUNCTION_12	CALL_2
0x156e	          0x4863d0	                         movsxd rdx, eax	       580	mark.c	FUNCTION_12	CALL_2
0x1571	          0x4889d0	                            mov rax, rdx	       580	mark.c	FUNCTION_12	CALL_2
0x1574	        0x48c1e002	                              shl rax, 2	       580	mark.c	FUNCTION_12	CALL_2
0x1578	          0x4801d0	                            add rax, rdx	       580	mark.c	FUNCTION_12	CALL_2
0x157b	        0x48c1e003	                              shl rax, 3	       580	mark.c	FUNCTION_12	CALL_2
0x157f	    0x488d88000000	                          lea rcx, [rax]	       580	mark.c	FUNCTION_12	CALL_2
0x1586	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       580	mark.c	FUNCTION_12	CALL_2
0x158a	        0x488b45f8	                mov rax, qword [rbp - 8]	       580	mark.c	FUNCTION_12	CALL_2
0x158e	          0x4889c6	                            mov rsi, rax	       580	mark.c	FUNCTION_12	CALL_2
0x1591	          0x4889cf	                            mov rdi, rcx	       580	mark.c	FUNCTION_12	CALL_2
0x1594	      0xe890000000	               call sym.fmarks_check_one	       580	mark.c	FUNCTION_12	CALL_2
0x1599	        0x8345ec01	               add dword [rbp - 0x14], 1	       579	mark.c	FUNCTION_12	FOR_1
0x159d	        0x837dec23	           cmp dword [rbp - 0x14], 0x23 	       579	mark.c	FUNCTION_12	FOR_1
0x15a1	            0x7ec8	                           jle 0x40015ab	       579	mark.c	FUNCTION_12	FOR_1
0x15a3	    0x488b05000000	            mov rax, qword [0x040015ea] 	       583	mark.c	FUNCTION_12
0x15aa	        0x488945f0	             mov qword [rbp - 0x10], rax	       583	mark.c	FUNCTION_12
0x15ae	            0xeb5e	                           jmp 0x400164e	       583	mark.c	FUNCTION_12
0x15b0	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       585	mark.c	FUNCTION_12	FUNCTION_1	FOR_1
0x15b7	            0xeb3a	                           jmp 0x4001633	       585	mark.c	FUNCTION_12	FUNCTION_1	FOR_1
0x15b9	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       586	mark.c	FUNCTION_12	FUNCTION_1	CALL_1
0x15bc	          0x4863d0	                         movsxd rdx, eax	       586	mark.c	FUNCTION_12	FUNCTION_1	CALL_1
0x15bf	          0x4889d0	                            mov rax, rdx	       586	mark.c	FUNCTION_12	FUNCTION_1	CALL_1
0x15c2	        0x48c1e002	                              shl rax, 2	       586	mark.c	FUNCTION_12	FUNCTION_1	CALL_1
0x15c6	          0x4801d0	                            add rax, rdx	       586	mark.c	FUNCTION_12	FUNCTION_1	CALL_1
0x15c9	        0x48c1e003	                              shl rax, 3	       586	mark.c	FUNCTION_12	FUNCTION_1	CALL_1
0x15cd	    0x488d90a00500	                  lea rdx, [rax + 0x5a0]	       586	mark.c	FUNCTION_12	FUNCTION_1	CALL_1
0x15d4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       586	mark.c	FUNCTION_12	FUNCTION_1	CALL_1
0x15d8	        0x488d0c02	                    lea rcx, [rdx + rax]	       586	mark.c	FUNCTION_12	FUNCTION_1	CALL_1
0x15dc	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       586	mark.c	FUNCTION_12	FUNCTION_1	CALL_1
0x15e0	        0x488b45f8	                mov rax, qword [rbp - 8]	       586	mark.c	FUNCTION_12	FUNCTION_1	CALL_1
0x15e4	          0x4889c6	                            mov rsi, rax	       586	mark.c	FUNCTION_12	FUNCTION_1	CALL_1
0x15e7	          0x4889cf	                            mov rdi, rcx	       586	mark.c	FUNCTION_12	FUNCTION_1	CALL_1
0x15ea	      0xe83a000000	               call sym.fmarks_check_one	       586	mark.c	FUNCTION_12	FUNCTION_1	CALL_1
0x15ef	        0x8345ec01	               add dword [rbp - 0x14], 1	       585	mark.c	FUNCTION_12	FUNCTION_1	FOR_1
0x15f3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       585	mark.c	FUNCTION_12	FUNCTION_1	FOR_1
0x15f7	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	       585	mark.c	FUNCTION_12	FUNCTION_1	FOR_1
0x15fd	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	       585	mark.c	FUNCTION_12	FUNCTION_1	FOR_1
0x1600	            0x7fb7	                            jg 0x40015f9	       585	mark.c	FUNCTION_12	FUNCTION_1	FOR_1
0x1602	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       583	mark.c	FUNCTION_12
0x1606	        0x488b4020	            mov rax, qword [rax + 0x20] 	       583	mark.c	FUNCTION_12
0x160a	        0x488945f0	             mov qword [rbp - 0x10], rax	       583	mark.c	FUNCTION_12
0x160e	      0x48837df000	               cmp qword [rbp - 0x10], 0	       583	mark.c	FUNCTION_12
0x1613	            0x759b	                           jne 0x40015f0	       583	mark.c	FUNCTION_12
0x1615	        0x488b45f8	                mov rax, qword [rbp - 8]	       590	mark.c	FUNCTION_12	CALL_3
0x1619	          0x4889c7	                            mov rdi, rax	       590	mark.c	FUNCTION_12	CALL_3
0x161c	      0xe800000000	                          call 0x4001661	       590	mark.c	FUNCTION_12	CALL_3
0x1621	            0xeb04	                           jmp 0x4001667	       590	mark.c	FUNCTION_12	CALL_3
0x1623	              0x90	                                     nop	       573	mark.c	FUNCTION_12	IF_1
0x1624	            0xeb01	                           jmp 0x4001667	       573	mark.c	FUNCTION_12	IF_1
0x1626	              0x90	                                     nop	       577	mark.c	FUNCTION_12	IF_2
0x1627	              0xc9	                                   leave	       591	mark.c	FUNCTION_12
0x1628	              0xc3	                                     ret	       591	mark.c	FUNCTION_12
write_viminfo_filemarks	DO,0:functions,0:IF,9:SWITCH,0:CALL,19:ELSE,3:WHILE,0:FOR,5	418
0x4c79	              0x55	                                push rbp	      1663	mark.c	FUNCTION_38
0x4c7a	          0x4889e5	                            mov rbp, rsp	      1663	mark.c	FUNCTION_38
0x4c7d	        0x4883ec50	                           sub rsp, 0x50	      1663	mark.c	FUNCTION_38
0x4c81	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1663	mark.c	FUNCTION_38
0x4c85	      0xbf66000000	                           mov edi, 0x66	      1671	mark.c	FUNCTION_38	IF_1	CALL_1
0x4c8a	      0xe800000000	                          call 0x4004ccf	      1671	mark.c	FUNCTION_38	IF_1	CALL_1
0x4c8f	            0x85c0	                           test eax, eax	      1671	mark.c	FUNCTION_38	IF_1	CALL_1
0x4c91	     0xf841c060000	                            je 0x40052f3	      1671	mark.c	FUNCTION_38	IF_1	CALL_1
0x4c97	      0xbf00000000	                              mov edi, 0	      1674	mark.c	FUNCTION_38	CALL_3
0x4c9c	      0xe800000000	                          call 0x4004ce1	      1674	mark.c	FUNCTION_38	CALL_3
0x4ca1	          0x4889c2	                            mov rdx, rax	      1674	mark.c	FUNCTION_38	CALL_3
0x4ca4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1674	mark.c	FUNCTION_38	CALL_3
0x4ca8	          0x4889c6	                            mov rsi, rax	      1674	mark.c	FUNCTION_38	CALL_3
0x4cab	          0x4889d7	                            mov rdi, rdx	      1674	mark.c	FUNCTION_38	CALL_3
0x4cae	      0xe800000000	                          call 0x4004cf3	      1674	mark.c	FUNCTION_38	CALL_3
0x4cb3	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      1677	mark.c	FUNCTION_38	FOR_1
0x4cba	      0xe9d9000000	                           jmp 0x4004dd8	      1677	mark.c	FUNCTION_38	FOR_1
0x4cbf	    0x488b05000000	            mov rax, qword [0x04004d06] 	      1679	mark.c	FUNCTION_38	FOR_1	IF_2
0x4cc6	          0x4885c0	                           test rax, rax	      1679	mark.c	FUNCTION_38	FOR_1	IF_2
0x4cc9	     0xf848a000000	                            je 0x4004d99	      1679	mark.c	FUNCTION_38	FOR_1	IF_2
0x4ccf	    0x488b0d000000	            mov rcx, qword [0x04004d16] 	      1679	mark.c	FUNCTION_38	FOR_1	IF_2
0x4cd6	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1679	mark.c	FUNCTION_38	FOR_1	IF_2
0x4cd9	          0x4863d0	                         movsxd rdx, eax	      1679	mark.c	FUNCTION_38	FOR_1	IF_2
0x4cdc	          0x4889d0	                            mov rax, rdx	      1679	mark.c	FUNCTION_38	FOR_1	IF_2
0x4cdf	        0x48c1e002	                              shl rax, 2	      1679	mark.c	FUNCTION_38	FOR_1	IF_2
0x4ce3	          0x4801d0	                            add rax, rdx	      1679	mark.c	FUNCTION_38	FOR_1	IF_2
0x4ce6	        0x48c1e003	                              shl rax, 3	      1679	mark.c	FUNCTION_38	FOR_1	IF_2
0x4cea	          0x4801c8	                            add rax, rcx	      1679	mark.c	FUNCTION_38	FOR_1	IF_2
0x4ced	        0x488b4820	            mov rcx, qword [rax + 0x20] 	      1679	mark.c	FUNCTION_38	FOR_1	IF_2
0x4cf1	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1679	mark.c	FUNCTION_38	FOR_1	IF_2
0x4cf4	          0x4863d0	                         movsxd rdx, eax	      1679	mark.c	FUNCTION_38	FOR_1	IF_2
0x4cf7	          0x4889d0	                            mov rax, rdx	      1679	mark.c	FUNCTION_38	FOR_1	IF_2
0x4cfa	        0x48c1e002	                              shl rax, 2	      1679	mark.c	FUNCTION_38	FOR_1	IF_2
0x4cfe	          0x4801d0	                            add rax, rdx	      1679	mark.c	FUNCTION_38	FOR_1	IF_2
0x4d01	        0x48c1e003	                              shl rax, 3	      1679	mark.c	FUNCTION_38	FOR_1	IF_2
0x4d05	    0x480500000000	                              add rax, 0	      1679	mark.c	FUNCTION_38	FOR_1	IF_2
0x4d0b	          0x488b00	                    mov rax, qword [rax]	      1679	mark.c	FUNCTION_38	FOR_1	IF_2
0x4d0e	          0x4839c1	                            cmp rcx, rax	      1679	mark.c	FUNCTION_38	FOR_1	IF_2
0x4d11	            0x7f22	                            jg 0x4004d75	      1679	mark.c	FUNCTION_38	FOR_1	IF_2
0x4d13	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1680	mark.c	FUNCTION_38	FOR_1	IF_2
0x4d16	          0x4863d0	                         movsxd rdx, eax	      1680	mark.c	FUNCTION_38	FOR_1	IF_2
0x4d19	          0x4889d0	                            mov rax, rdx	      1680	mark.c	FUNCTION_38	FOR_1	IF_2
0x4d1c	        0x48c1e002	                              shl rax, 2	      1680	mark.c	FUNCTION_38	FOR_1	IF_2
0x4d20	          0x4801d0	                            add rax, rdx	      1680	mark.c	FUNCTION_38	FOR_1	IF_2
0x4d23	        0x48c1e003	                              shl rax, 3	      1680	mark.c	FUNCTION_38	FOR_1	IF_2
0x4d27	    0x480500000000	                              add rax, 0	      1680	mark.c	FUNCTION_38	FOR_1	IF_2
0x4d2d	          0x488b00	                    mov rax, qword [rax]	      1680	mark.c	FUNCTION_38	FOR_1	IF_2
0x4d30	          0x4885c0	                           test rax, rax	      1680	mark.c	FUNCTION_38	FOR_1	IF_2
0x4d33	            0x7524	                           jne 0x4004d99	      1680	mark.c	FUNCTION_38	FOR_1	IF_2
0x4d35	    0x488b0d000000	            mov rcx, qword [0x04004d7c] 	      1681	mark.c	FUNCTION_38	FOR_1	IF_2
0x4d3c	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1681	mark.c	FUNCTION_38	FOR_1	IF_2
0x4d3f	          0x4863d0	                         movsxd rdx, eax	      1681	mark.c	FUNCTION_38	FOR_1	IF_2
0x4d42	          0x4889d0	                            mov rax, rdx	      1681	mark.c	FUNCTION_38	FOR_1	IF_2
0x4d45	        0x48c1e002	                              shl rax, 2	      1681	mark.c	FUNCTION_38	FOR_1	IF_2
0x4d49	          0x4801d0	                            add rax, rdx	      1681	mark.c	FUNCTION_38	FOR_1	IF_2
0x4d4c	        0x48c1e003	                              shl rax, 3	      1681	mark.c	FUNCTION_38	FOR_1	IF_2
0x4d50	          0x4801c8	                            add rax, rcx	      1681	mark.c	FUNCTION_38	FOR_1	IF_2
0x4d53	        0x488945d8	             mov qword [rbp - 0x28], rax	      1681	mark.c	FUNCTION_38	FOR_1	IF_2
0x4d57	            0xeb1e	                           jmp 0x4004db7	      1681	mark.c	FUNCTION_38	FOR_1	IF_2
0x4d59	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1683	mark.c	FUNCTION_38	FOR_1	ELSE_1
0x4d5c	          0x4863d0	                         movsxd rdx, eax	      1683	mark.c	FUNCTION_38	FOR_1	ELSE_1
0x4d5f	          0x4889d0	                            mov rax, rdx	      1683	mark.c	FUNCTION_38	FOR_1	ELSE_1
0x4d62	        0x48c1e002	                              shl rax, 2	      1683	mark.c	FUNCTION_38	FOR_1	ELSE_1
0x4d66	          0x4801d0	                            add rax, rdx	      1683	mark.c	FUNCTION_38	FOR_1	ELSE_1
0x4d69	        0x48c1e003	                              shl rax, 3	      1683	mark.c	FUNCTION_38	FOR_1	ELSE_1
0x4d6d	    0x480500000000	                              add rax, 0	      1683	mark.c	FUNCTION_38	FOR_1	ELSE_1
0x4d73	        0x488945d8	             mov qword [rbp - 0x28], rax	      1683	mark.c	FUNCTION_38	FOR_1	ELSE_1
0x4d77	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1684	mark.c	FUNCTION_38	FOR_1	CALL_4
0x4d7a	          0x8d5041	                   lea edx, [rax + 0x41]	      1684	mark.c	FUNCTION_38	FOR_1	CALL_4
0x4d7d	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	      1684	mark.c	FUNCTION_38	FOR_1	CALL_4
0x4d81	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1684	mark.c	FUNCTION_38	FOR_1	CALL_4
0x4d85	            0x89d1	                            mov ecx, edx	      1684	mark.c	FUNCTION_38	FOR_1	CALL_4
0x4d87	      0xba27000000	                           mov edx, 0x27	      1684	mark.c	FUNCTION_38	FOR_1	CALL_4
0x4d8c	          0x4889c7	                            mov rdi, rax	      1684	mark.c	FUNCTION_38	FOR_1	CALL_4
0x4d8f	      0xe825050000	             call sym.write_one_filemark	      1684	mark.c	FUNCTION_38	FOR_1	CALL_4
0x4d94	        0x8345cc01	               add dword [rbp - 0x34], 1	      1677	mark.c	FUNCTION_38	FOR_1
0x4d98	        0x837dcc19	           cmp dword [rbp - 0x34], 0x19 	      1677	mark.c	FUNCTION_38	FOR_1
0x4d9c	     0xf8e1dffffff	                           jle 0x4004cff	      1677	mark.c	FUNCTION_38	FOR_1
0x4da2	    0x488b05000000	            mov rax, qword [0x04004de9] 	      1693	mark.c	FUNCTION_38	IF_3	CALL_5
0x4da9	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1693	mark.c	FUNCTION_38	IF_3	CALL_5
0x4db0	          0x4885c0	                           test rax, rax	      1693	mark.c	FUNCTION_38	IF_3	CALL_5
0x4db3	     0xf8405020000	                            je 0x4004ffe	      1693	mark.c	FUNCTION_38	IF_3	CALL_5
0x4db9	    0x488b05000000	            mov rax, qword [0x04004e00] 	      1693	mark.c	FUNCTION_38	IF_3	CALL_5
0x4dc0	          0x4889c7	                            mov rdi, rax	      1693	mark.c	FUNCTION_38	IF_3	CALL_5
0x4dc3	      0xe870feffff	               call sym.skip_for_viminfo	      1693	mark.c	FUNCTION_38	IF_3	CALL_5
0x4dc8	            0x85c0	                           test eax, eax	      1693	mark.c	FUNCTION_38	IF_3	CALL_5
0x4dca	     0xf85ee010000	                           jne 0x4004ffe	      1693	mark.c	FUNCTION_38	IF_3	CALL_5
0x4dd0	    0x488b05000000	            mov rax, qword [0x04004e17] 	      1695	mark.c	FUNCTION_38	IF_3	CALL_6
0x4dd7	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      1695	mark.c	FUNCTION_38	IF_3	CALL_6
0x4ddd	      0xba00000000	                              mov edx, 0	      1695	mark.c	FUNCTION_38	IF_3	CALL_6
0x4de2	      0xbe01000000	                              mov esi, 1	      1695	mark.c	FUNCTION_38	IF_3	CALL_6
0x4de7	            0x89c7	                            mov edi, eax	      1695	mark.c	FUNCTION_38	IF_3	CALL_6
0x4de9	      0xe800000000	                          call 0x4004e2e	      1695	mark.c	FUNCTION_38	IF_3	CALL_6
0x4dee	        0x488945e0	             mov qword [rbp - 0x20], rax	      1695	mark.c	FUNCTION_38	IF_3	CALL_6
0x4df2	    0xc745cc1a0000	           mov dword [rbp - 0x34], 0x1a 	      1696	mark.c	FUNCTION_38	IF_3	FOR_2
0x4df9	      0xe9d1000000	                           jmp 0x4004f0f	      1696	mark.c	FUNCTION_38	IF_3	FOR_2
0x4dfe	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1697	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4e01	          0x4863d0	                         movsxd rdx, eax	      1697	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4e04	          0x4889d0	                            mov rax, rdx	      1697	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4e07	        0x48c1e002	                              shl rax, 2	      1697	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4e0b	          0x4801d0	                            add rax, rdx	      1697	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4e0e	        0x48c1e003	                              shl rax, 3	      1697	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4e12	    0x480500000000	                              add rax, 0	      1697	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4e18	          0x488b10	                    mov rdx, qword [rax]	      1697	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4e1b	    0x488b05000000	            mov rax, qword [0x04004e62] 	      1697	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4e22	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1697	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4e26	          0x4839c2	                            cmp rdx, rax	      1697	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4e29	     0xf859c000000	                           jne 0x4004f0b	      1697	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4e2f	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1698	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4e32	          0x4863d0	                         movsxd rdx, eax	      1698	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4e35	          0x4889d0	                            mov rax, rdx	      1698	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4e38	        0x48c1e002	                              shl rax, 2	      1698	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4e3c	          0x4801d0	                            add rax, rdx	      1698	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4e3f	        0x48c1e003	                              shl rax, 3	      1698	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4e43	    0x480500000000	                              add rax, 0	      1698	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4e49	          0x488b00	                    mov rax, qword [rax]	      1698	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4e4c	          0x4885c0	                           test rax, rax	      1698	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4e4f	            0x7530	                           jne 0x4004ec1	      1698	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4e51	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1699	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4e54	          0x4863d0	                         movsxd rdx, eax	      1699	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4e57	          0x4889d0	                            mov rax, rdx	      1699	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4e5a	        0x48c1e002	                              shl rax, 2	      1699	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4e5e	          0x4801d0	                            add rax, rdx	      1699	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4e61	        0x48c1e003	                              shl rax, 3	      1699	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4e65	    0x480500000000	                              add rax, 0	      1699	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4e6b	            0x8b10	                    mov edx, dword [rax]	      1699	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4e6d	    0x488b05000000	            mov rax, qword [0x04004eb4] 	      1699	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4e74	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      1699	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4e7a	            0x39c2	                            cmp edx, eax	      1698	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4e7c	           0xf94c0	                                 sete al	      1698	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4e7f	            0xeb46	                           jmp 0x4004f07	      1698	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4e81	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1701	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4	CALL_7
0x4e86	            0x7437	                            je 0x4004eff	      1701	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4	CALL_7
0x4e88	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1701	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4	CALL_7
0x4e8b	          0x4863d0	                         movsxd rdx, eax	      1701	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4	CALL_7
0x4e8e	          0x4889d0	                            mov rax, rdx	      1701	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4	CALL_7
0x4e91	        0x48c1e002	                              shl rax, 2	      1701	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4	CALL_7
0x4e95	          0x4801d0	                            add rax, rdx	      1701	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4	CALL_7
0x4e98	        0x48c1e003	                              shl rax, 3	      1701	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4	CALL_7
0x4e9c	    0x480500000000	                              add rax, 0	      1701	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4	CALL_7
0x4ea2	          0x488b10	                    mov rdx, qword [rax]	      1701	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4	CALL_7
0x4ea5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1701	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4	CALL_7
0x4ea9	          0x4889d6	                            mov rsi, rdx	      1701	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4	CALL_7
0x4eac	          0x4889c7	                            mov rdi, rax	      1701	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4	CALL_7
0x4eaf	      0xe800000000	                          call 0x4004ef4	      1701	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4	CALL_7
0x4eb4	            0x85c0	                           test eax, eax	      1701	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4	CALL_7
0x4eb6	            0x7507	                           jne 0x4004eff	      1701	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4	CALL_7
0x4eb8	      0xb801000000	                              mov eax, 1	      1701	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4	CALL_7
0x4ebd	            0xeb05	                           jmp 0x4004f04	      1701	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4	CALL_7
0x4ebf	      0xb800000000	                              mov eax, 0	      1701	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4	CALL_7
0x4ec4	          0x83e001	                              and eax, 1	      1698	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4ec7	            0x84c0	                             test al, al	      1698	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4ec9	            0x7510	                           jne 0x4004f1b	      1698	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4ecb	        0x8345cc01	               add dword [rbp - 0x34], 1	      1696	mark.c	FUNCTION_38	IF_3	FOR_2
0x4ecf	        0x837dcc22	           cmp dword [rbp - 0x34], 0x22 	      1696	mark.c	FUNCTION_38	IF_3	FOR_2
0x4ed3	     0xf8e25ffffff	                           jle 0x4004e3e	      1696	mark.c	FUNCTION_38	IF_3	FOR_2
0x4ed9	            0xeb01	                           jmp 0x4004f1c	      1696	mark.c	FUNCTION_38	IF_3	FOR_2
0x4edb	              0x90	                                     nop	      1702	mark.c	FUNCTION_38	IF_3	FOR_2	IF_4
0x4edc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1703	mark.c	FUNCTION_38	IF_3	CALL_8
0x4ee0	          0x4889c7	                            mov rdi, rax	      1703	mark.c	FUNCTION_38	IF_3	CALL_8
0x4ee3	      0xe800000000	                          call 0x4004f28	      1703	mark.c	FUNCTION_38	IF_3	CALL_8
0x4ee8	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1705	mark.c	FUNCTION_38	IF_3	CALL_9
0x4eeb	          0x4863d0	                         movsxd rdx, eax	      1705	mark.c	FUNCTION_38	IF_3	CALL_9
0x4eee	          0x4889d0	                            mov rax, rdx	      1705	mark.c	FUNCTION_38	IF_3	CALL_9
0x4ef1	        0x48c1e002	                              shl rax, 2	      1705	mark.c	FUNCTION_38	IF_3	CALL_9
0x4ef5	          0x4801d0	                            add rax, rdx	      1705	mark.c	FUNCTION_38	IF_3	CALL_9
0x4ef8	        0x48c1e003	                              shl rax, 3	      1705	mark.c	FUNCTION_38	IF_3	CALL_9
0x4efc	    0x480500000000	                              add rax, 0	      1705	mark.c	FUNCTION_38	IF_3	CALL_9
0x4f02	          0x488b00	                    mov rax, qword [rax]	      1705	mark.c	FUNCTION_38	IF_3	CALL_9
0x4f05	          0x4889c7	                            mov rdi, rax	      1705	mark.c	FUNCTION_38	IF_3	CALL_9
0x4f08	      0xe800000000	                          call 0x4004f4d	      1705	mark.c	FUNCTION_38	IF_3	CALL_9
0x4f0d	            0xeb62	                           jmp 0x4004fb1	      1706	mark.c	FUNCTION_38	IF_3	FOR_3
0x4f0f	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1707	mark.c	FUNCTION_38	IF_3	FOR_3
0x4f12	          0x8d48ff	                      lea ecx, [rax - 1]	      1707	mark.c	FUNCTION_38	IF_3	FOR_3
0x4f15	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1707	mark.c	FUNCTION_38	IF_3	FOR_3
0x4f18	          0x4863d0	                         movsxd rdx, eax	      1707	mark.c	FUNCTION_38	IF_3	FOR_3
0x4f1b	          0x4889d0	                            mov rax, rdx	      1707	mark.c	FUNCTION_38	IF_3	FOR_3
0x4f1e	        0x48c1e002	                              shl rax, 2	      1707	mark.c	FUNCTION_38	IF_3	FOR_3
0x4f22	          0x4801d0	                            add rax, rdx	      1707	mark.c	FUNCTION_38	IF_3	FOR_3
0x4f25	        0x48c1e003	                              shl rax, 3	      1707	mark.c	FUNCTION_38	IF_3	FOR_3
0x4f29	    0x488d90000000	                          lea rdx, [rax]	      1707	mark.c	FUNCTION_38	IF_3	FOR_3
0x4f30	          0x4863c9	                         movsxd rcx, ecx	      1707	mark.c	FUNCTION_38	IF_3	FOR_3
0x4f33	          0x4889c8	                            mov rax, rcx	      1707	mark.c	FUNCTION_38	IF_3	FOR_3
0x4f36	        0x48c1e002	                              shl rax, 2	      1707	mark.c	FUNCTION_38	IF_3	FOR_3
0x4f3a	          0x4801c8	                            add rax, rcx	      1707	mark.c	FUNCTION_38	IF_3	FOR_3
0x4f3d	        0x48c1e003	                              shl rax, 3	      1707	mark.c	FUNCTION_38	IF_3	FOR_3
0x4f41	    0x480500000000	                              add rax, 0	      1707	mark.c	FUNCTION_38	IF_3	FOR_3
0x4f47	          0x488b08	                    mov rcx, qword [rax]	      1707	mark.c	FUNCTION_38	IF_3	FOR_3
0x4f4a	          0x48890a	                    mov qword [rdx], rcx	      1707	mark.c	FUNCTION_38	IF_3	FOR_3
0x4f4d	        0x488b4808	                mov rcx, qword [rax + 8]	      1707	mark.c	FUNCTION_38	IF_3	FOR_3
0x4f51	        0x48894a08	                mov qword [rdx + 8], rcx	      1707	mark.c	FUNCTION_38	IF_3	FOR_3
0x4f55	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      1707	mark.c	FUNCTION_38	IF_3	FOR_3
0x4f59	        0x48894a10	             mov qword [rdx + 0x10], rcx	      1707	mark.c	FUNCTION_38	IF_3	FOR_3
0x4f5d	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      1707	mark.c	FUNCTION_38	IF_3	FOR_3
0x4f61	        0x48894a18	             mov qword [rdx + 0x18], rcx	      1707	mark.c	FUNCTION_38	IF_3	FOR_3
0x4f65	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1707	mark.c	FUNCTION_38	IF_3	FOR_3
0x4f69	        0x48894220	             mov qword [rdx + 0x20], rax	      1707	mark.c	FUNCTION_38	IF_3	FOR_3
0x4f6d	        0x836dcc01	               sub dword [rbp - 0x34], 1	      1706	mark.c	FUNCTION_38	IF_3	FOR_3
0x4f71	        0x837dcc1a	           cmp dword [rbp - 0x34], 0x1a 	      1706	mark.c	FUNCTION_38	IF_3	FOR_3
0x4f75	            0x7f98	                            jg 0x4004f4f	      1706	mark.c	FUNCTION_38	IF_3	FOR_3
0x4f77	    0x488b05000000	            mov rax, qword [0x04004fbe] 	      1708	mark.c	FUNCTION_38	IF_3
0x4f7e	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      1708	mark.c	FUNCTION_38	IF_3
0x4f82	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1708	mark.c	FUNCTION_38	IF_3
0x4f86	    0x488905000000	            mov qword [0x04004fcd], rax 	      1708	mark.c	FUNCTION_38	IF_3
0x4f8d	    0x488915000000	            mov qword [0x04004fd4], rdx 	      1708	mark.c	FUNCTION_38	IF_3
0x4f94	    0x488b05000000	            mov rax, qword [0x04004fdb] 	      1709	mark.c	FUNCTION_38	IF_3
0x4f9b	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      1709	mark.c	FUNCTION_38	IF_3
0x4fa1	    0x890500000000	            mov dword [0x04004fe7], eax 	      1709	mark.c	FUNCTION_38	IF_3
0x4fa7	    0x48c705000000	               mov qword [0x04004ff2], 0	      1710	mark.c	FUNCTION_38	IF_3
0x4fb2	      0xe800000000	                          call 0x4004ff7	      1711	mark.c	FUNCTION_38	IF_3	CALL_10
0x4fb7	    0x488905000000	            mov qword [0x04004ffe], rax 	      1711	mark.c	FUNCTION_38	IF_3	CALL_10
0x4fbe	    0xc745d01a0000	           mov dword [rbp - 0x30], 0x1a 	      1715	mark.c	FUNCTION_38
0x4fc5	    0xc745d41a0000	           mov dword [rbp - 0x2c], 0x1a 	      1716	mark.c	FUNCTION_38
0x4fcc	    0xc745cc1a0000	           mov dword [rbp - 0x34], 0x1a 	      1717	mark.c	FUNCTION_38	FOR_4
0x4fd3	      0xe977010000	                           jmp 0x400518f	      1717	mark.c	FUNCTION_38	FOR_4
0x4fd8	    0x488b05000000	            mov rax, qword [0x0400501f] 	      1719	mark.c	FUNCTION_38	FOR_4
0x4fdf	          0x4885c0	                           test rax, rax	      1719	mark.c	FUNCTION_38	FOR_4
0x4fe2	            0x7420	                            je 0x4005044	      1719	mark.c	FUNCTION_38	FOR_4
0x4fe4	    0x488b0d000000	            mov rcx, qword [0x0400502b] 	      1719	mark.c	FUNCTION_38	FOR_4
0x4feb	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1719	mark.c	FUNCTION_38	FOR_4
0x4fee	          0x4863d0	                         movsxd rdx, eax	      1719	mark.c	FUNCTION_38	FOR_4
0x4ff1	          0x4889d0	                            mov rax, rdx	      1719	mark.c	FUNCTION_38	FOR_4
0x4ff4	        0x48c1e002	                              shl rax, 2	      1719	mark.c	FUNCTION_38	FOR_4
0x4ff8	          0x4801d0	                            add rax, rdx	      1719	mark.c	FUNCTION_38	FOR_4
0x4ffb	        0x48c1e003	                              shl rax, 3	      1719	mark.c	FUNCTION_38	FOR_4
0x4fff	          0x4801c8	                            add rax, rcx	      1719	mark.c	FUNCTION_38	FOR_4
0x5002	            0xeb05	                           jmp 0x4005049	      1719	mark.c	FUNCTION_38	FOR_4
0x5004	      0xb800000000	                              mov eax, 0	      1719	mark.c	FUNCTION_38	FOR_4
0x5009	        0x488945e8	             mov qword [rbp - 0x18], rax	      1719	mark.c	FUNCTION_38	FOR_4
0x500d	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1721	mark.c	FUNCTION_38	FOR_4	IF_5
0x5012	            0x7469	                            je 0x40050bd	      1721	mark.c	FUNCTION_38	FOR_4	IF_5
0x5014	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1722	mark.c	FUNCTION_38	FOR_4	IF_5
0x5018	          0x488b00	                    mov rax, qword [rax]	      1722	mark.c	FUNCTION_38	FOR_4	IF_5
0x501b	          0x4885c0	                           test rax, rax	      1722	mark.c	FUNCTION_38	FOR_4	IF_5
0x501e	            0x745d	                            je 0x40050bd	      1722	mark.c	FUNCTION_38	FOR_4	IF_5
0x5020	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1723	mark.c	FUNCTION_38	FOR_4	IF_5
0x5024	        0x488b4820	            mov rcx, qword [rax + 0x20] 	      1723	mark.c	FUNCTION_38	FOR_4	IF_5
0x5028	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1723	mark.c	FUNCTION_38	FOR_4	IF_5
0x502b	          0x4863d0	                         movsxd rdx, eax	      1723	mark.c	FUNCTION_38	FOR_4	IF_5
0x502e	          0x4889d0	                            mov rax, rdx	      1723	mark.c	FUNCTION_38	FOR_4	IF_5
0x5031	        0x48c1e002	                              shl rax, 2	      1723	mark.c	FUNCTION_38	FOR_4	IF_5
0x5035	          0x4801d0	                            add rax, rdx	      1723	mark.c	FUNCTION_38	FOR_4	IF_5
0x5038	        0x48c1e003	                              shl rax, 3	      1723	mark.c	FUNCTION_38	FOR_4	IF_5
0x503c	    0x480500000000	                              add rax, 0	      1723	mark.c	FUNCTION_38	FOR_4	IF_5
0x5042	          0x488b00	                    mov rax, qword [rax]	      1723	mark.c	FUNCTION_38	FOR_4	IF_5
0x5045	          0x4839c1	                            cmp rcx, rax	      1723	mark.c	FUNCTION_38	FOR_4	IF_5
0x5048	            0x7f22	                            jg 0x40050ac	      1723	mark.c	FUNCTION_38	FOR_4	IF_5
0x504a	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1724	mark.c	FUNCTION_38	FOR_4	IF_5
0x504d	          0x4863d0	                         movsxd rdx, eax	      1724	mark.c	FUNCTION_38	FOR_4	IF_5
0x5050	          0x4889d0	                            mov rax, rdx	      1724	mark.c	FUNCTION_38	FOR_4	IF_5
0x5053	        0x48c1e002	                              shl rax, 2	      1724	mark.c	FUNCTION_38	FOR_4	IF_5
0x5057	          0x4801d0	                            add rax, rdx	      1724	mark.c	FUNCTION_38	FOR_4	IF_5
0x505a	        0x48c1e003	                              shl rax, 3	      1724	mark.c	FUNCTION_38	FOR_4	IF_5
0x505e	    0x480500000000	                              add rax, 0	      1724	mark.c	FUNCTION_38	FOR_4	IF_5
0x5064	          0x488b00	                    mov rax, qword [rax]	      1724	mark.c	FUNCTION_38	FOR_4	IF_5
0x5067	          0x4885c0	                           test rax, rax	      1724	mark.c	FUNCTION_38	FOR_4	IF_5
0x506a	            0x7511	                           jne 0x40050bd	      1724	mark.c	FUNCTION_38	FOR_4	IF_5
0x506c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1726	mark.c	FUNCTION_38	FOR_4	IF_5
0x5070	        0x488945d8	             mov qword [rbp - 0x28], rax	      1726	mark.c	FUNCTION_38	FOR_4	IF_5
0x5074	        0x8345d001	               add dword [rbp - 0x30], 1	      1727	mark.c	FUNCTION_38	FOR_4	IF_5
0x5078	      0xe9b1000000	                           jmp 0x400516e	      1727	mark.c	FUNCTION_38	FOR_4	IF_5
0x507d	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1731	mark.c	FUNCTION_38	FOR_4	ELSE_2
0x5080	          0x8d5001	                      lea edx, [rax + 1]	      1731	mark.c	FUNCTION_38	FOR_4	ELSE_2
0x5083	          0x8955d4	             mov dword [rbp - 0x2c], edx	      1731	mark.c	FUNCTION_38	FOR_4	ELSE_2
0x5086	          0x4863d0	                         movsxd rdx, eax	      1731	mark.c	FUNCTION_38	FOR_4	ELSE_2
0x5089	          0x4889d0	                            mov rax, rdx	      1731	mark.c	FUNCTION_38	FOR_4	ELSE_2
0x508c	        0x48c1e002	                              shl rax, 2	      1731	mark.c	FUNCTION_38	FOR_4	ELSE_2
0x5090	          0x4801d0	                            add rax, rdx	      1731	mark.c	FUNCTION_38	FOR_4	ELSE_2
0x5093	        0x48c1e003	                              shl rax, 3	      1731	mark.c	FUNCTION_38	FOR_4	ELSE_2
0x5097	    0x480500000000	                              add rax, 0	      1731	mark.c	FUNCTION_38	FOR_4	ELSE_2
0x509d	        0x488945d8	             mov qword [rbp - 0x28], rax	      1731	mark.c	FUNCTION_38	FOR_4	ELSE_2
0x50a1	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1732	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x50a6	     0xf8482000000	                            je 0x400516e	      1732	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x50ac	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1733	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x50b0	          0x488b10	                    mov rdx, qword [rax]	      1733	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x50b3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1733	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x50b7	          0x488b00	                    mov rax, qword [rax]	      1733	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x50ba	          0x4839c2	                            cmp rdx, rax	      1733	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x50bd	            0x756f	                           jne 0x400516e	      1733	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x50bf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1734	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x50c3	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1734	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x50c7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1734	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x50cb	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1734	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x50cf	          0x4839c2	                            cmp rdx, rax	      1734	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x50d2	            0x755a	                           jne 0x400516e	      1734	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x50d4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1735	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x50d8	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1735	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x50db	            0x85c0	                           test eax, eax	      1735	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x50dd	            0x7412	                            je 0x4005131	      1735	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x50df	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1736	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x50e3	          0x8b5010	            mov edx, dword [rax + 0x10] 	      1736	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x50e6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1736	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x50ea	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1736	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x50ed	            0x39c2	                            cmp edx, eax	      1736	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x50ef	            0x7439	                            je 0x400516a	      1736	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x50f1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1737	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x50f5	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1737	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x50f9	          0x4885c0	                           test rax, rax	      1737	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x50fc	            0x7430	                            je 0x400516e	      1737	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x50fe	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1738	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x5102	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1738	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x5106	          0x4885c0	                           test rax, rax	      1738	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x5109	            0x7423	                            je 0x400516e	      1738	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x510b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1739	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6	CALL_11
0x510f	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      1739	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6	CALL_11
0x5113	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1739	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6	CALL_11
0x5117	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1739	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6	CALL_11
0x511b	          0x4889d6	                            mov rsi, rdx	      1739	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6	CALL_11
0x511e	          0x4889c7	                            mov rdi, rax	      1739	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6	CALL_11
0x5121	      0xe800000000	                          call 0x4005166	      1739	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6	CALL_11
0x5126	            0x85c0	                           test eax, eax	      1739	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6	CALL_11
0x5128	            0x7504	                           jne 0x400516e	      1739	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6	CALL_11
0x512a	        0x8345d001	               add dword [rbp - 0x30], 1	      1740	mark.c	FUNCTION_38	FOR_4	ELSE_2	IF_6
0x512e	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1742	mark.c	FUNCTION_38	FOR_4	CALL_12
0x5131	          0x8d5016	                   lea edx, [rax + 0x16]	      1742	mark.c	FUNCTION_38	FOR_4	CALL_12
0x5134	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	      1742	mark.c	FUNCTION_38	FOR_4	CALL_12
0x5138	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1742	mark.c	FUNCTION_38	FOR_4	CALL_12
0x513c	            0x89d1	                            mov ecx, edx	      1742	mark.c	FUNCTION_38	FOR_4	CALL_12
0x513e	      0xba27000000	                           mov edx, 0x27	      1742	mark.c	FUNCTION_38	FOR_4	CALL_12
0x5143	          0x4889c7	                            mov rdi, rax	      1742	mark.c	FUNCTION_38	FOR_4	CALL_12
0x5146	      0xe86e010000	             call sym.write_one_filemark	      1742	mark.c	FUNCTION_38	FOR_4	CALL_12
0x514b	        0x8345cc01	               add dword [rbp - 0x34], 1	      1717	mark.c	FUNCTION_38	FOR_4
0x514f	        0x837dcc23	           cmp dword [rbp - 0x34], 0x23 	      1717	mark.c	FUNCTION_38	FOR_4
0x5153	     0xf8e7ffeffff	                           jle 0x4005018	      1717	mark.c	FUNCTION_38	FOR_4
0x5159	      0xbf00000000	                              mov edi, 0	      1747	mark.c	FUNCTION_38	CALL_14
0x515e	      0xe800000000	                          call 0x40051a3	      1747	mark.c	FUNCTION_38	CALL_14
0x5163	          0x4889c2	                            mov rdx, rax	      1747	mark.c	FUNCTION_38	CALL_14
0x5166	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1747	mark.c	FUNCTION_38	CALL_14
0x516a	          0x4889c6	                            mov rsi, rax	      1747	mark.c	FUNCTION_38	CALL_14
0x516d	          0x4889d7	                            mov rdi, rdx	      1747	mark.c	FUNCTION_38	CALL_14
0x5170	      0xe800000000	                          call 0x40051b5	      1747	mark.c	FUNCTION_38	CALL_14
0x5175	      0xe800000000	                          call 0x40051ba	      1748	mark.c	FUNCTION_38	CALL_15
0x517a	      0xe842ecffff	               call sym.cleanup_jumplist	      1749	mark.c	FUNCTION_38	CALL_16
0x517f	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      1750	mark.c	FUNCTION_38
0x5186	    0x488b05000000	            mov rax, qword [0x040051cd] 	      1751	mark.c	FUNCTION_38
0x518d	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	      1751	mark.c	FUNCTION_38
0x5193	          0x83e801	                              sub eax, 1	      1751	mark.c	FUNCTION_38
0x5196	          0x8945d4	             mov dword [rbp - 0x2c], eax	      1751	mark.c	FUNCTION_38
0x5199	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      1752	mark.c	FUNCTION_38	FOR_5
0x51a0	      0xe902010000	                           jmp 0x40052e7	      1752	mark.c	FUNCTION_38	FOR_5
0x51a5	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      1756	mark.c	FUNCTION_38	FOR_5
0x51a9	            0x7826	                            js 0x4005211	      1756	mark.c	FUNCTION_38	FOR_5
0x51ab	    0x488b0d000000	            mov rcx, qword [0x040051f2] 	      1756	mark.c	FUNCTION_38	FOR_5
0x51b2	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1756	mark.c	FUNCTION_38	FOR_5
0x51b5	          0x4863d0	                         movsxd rdx, eax	      1756	mark.c	FUNCTION_38	FOR_5
0x51b8	          0x4889d0	                            mov rax, rdx	      1756	mark.c	FUNCTION_38	FOR_5
0x51bb	        0x48c1e002	                              shl rax, 2	      1756	mark.c	FUNCTION_38	FOR_5
0x51bf	          0x4801d0	                            add rax, rdx	      1756	mark.c	FUNCTION_38	FOR_5
0x51c2	        0x48c1e003	                              shl rax, 3	      1756	mark.c	FUNCTION_38	FOR_5
0x51c6	    0x4805a0050000	                          add rax, 0x5a0	      1756	mark.c	FUNCTION_38	FOR_5
0x51cc	          0x4801c8	                            add rax, rcx	      1756	mark.c	FUNCTION_38	FOR_5
0x51cf	            0xeb05	                           jmp 0x4005216	      1756	mark.c	FUNCTION_38	FOR_5
0x51d1	      0xb800000000	                              mov eax, 0	      1756	mark.c	FUNCTION_38	FOR_5
0x51d6	        0x488945d8	             mov qword [rbp - 0x28], rax	      1756	mark.c	FUNCTION_38	FOR_5
0x51da	    0x8b0500000000	            mov eax, dword [0x04005220] 	      1757	mark.c	FUNCTION_38	FOR_5
0x51e0	          0x3945d0	            cmp dword [rbp - 0x30], eax 	      1757	mark.c	FUNCTION_38	FOR_5
0x51e3	            0x7d20	                           jge 0x4005245	      1757	mark.c	FUNCTION_38	FOR_5
0x51e5	    0x488b0d000000	            mov rcx, qword [0x0400522c] 	      1757	mark.c	FUNCTION_38	FOR_5
0x51ec	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1757	mark.c	FUNCTION_38	FOR_5
0x51ef	          0x4863d0	                         movsxd rdx, eax	      1757	mark.c	FUNCTION_38	FOR_5
0x51f2	          0x4889d0	                            mov rax, rdx	      1757	mark.c	FUNCTION_38	FOR_5
0x51f5	        0x48c1e002	                              shl rax, 2	      1757	mark.c	FUNCTION_38	FOR_5
0x51f9	          0x4801d0	                            add rax, rdx	      1757	mark.c	FUNCTION_38	FOR_5
0x51fc	        0x48c1e003	                              shl rax, 3	      1757	mark.c	FUNCTION_38	FOR_5
0x5200	          0x4801c8	                            add rax, rcx	      1757	mark.c	FUNCTION_38	FOR_5
0x5203	            0xeb05	                           jmp 0x400524a	      1757	mark.c	FUNCTION_38	FOR_5
0x5205	      0xb800000000	                              mov eax, 0	      1757	mark.c	FUNCTION_38	FOR_5
0x520a	        0x488945f0	             mov qword [rbp - 0x10], rax	      1757	mark.c	FUNCTION_38	FOR_5
0x520e	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1758	mark.c	FUNCTION_38	FOR_5	IF_7
0x5213	            0x750b	                           jne 0x4005260	      1758	mark.c	FUNCTION_38	FOR_5	IF_7
0x5215	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1758	mark.c	FUNCTION_38	FOR_5	IF_7
0x521a	     0xf8496000000	                            je 0x40052f6	      1758	mark.c	FUNCTION_38	FOR_5	IF_7
0x5220	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1760	mark.c	FUNCTION_38	FOR_5	IF_8
0x5225	            0x741c	                            je 0x4005283	      1760	mark.c	FUNCTION_38	FOR_5	IF_8
0x5227	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1760	mark.c	FUNCTION_38	FOR_5	IF_8
0x522c	            0x7423	                            je 0x4005291	      1760	mark.c	FUNCTION_38	FOR_5	IF_8
0x522e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1760	mark.c	FUNCTION_38	FOR_5	IF_8
0x5232	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1760	mark.c	FUNCTION_38	FOR_5	IF_8
0x5236	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1760	mark.c	FUNCTION_38	FOR_5	IF_8
0x523a	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1760	mark.c	FUNCTION_38	FOR_5	IF_8
0x523e	          0x4839c2	                            cmp rdx, rax	      1760	mark.c	FUNCTION_38	FOR_5	IF_8
0x5241	            0x7d0e	                           jge 0x4005291	      1760	mark.c	FUNCTION_38	FOR_5	IF_8
0x5243	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1762	mark.c	FUNCTION_38	FOR_5	IF_8
0x5247	        0x488945d8	             mov qword [rbp - 0x28], rax	      1762	mark.c	FUNCTION_38	FOR_5	IF_8
0x524b	        0x8345d001	               add dword [rbp - 0x30], 1	      1763	mark.c	FUNCTION_38	FOR_5	IF_8
0x524f	            0xeb04	                           jmp 0x4005295	      1763	mark.c	FUNCTION_38	FOR_5	IF_8
0x5251	        0x836dd401	               sub dword [rbp - 0x2c], 1	      1766	mark.c	FUNCTION_38	FOR_5	ELSE_3
0x5255	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1767	mark.c	FUNCTION_38	FOR_5	IF_9
0x5259	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1767	mark.c	FUNCTION_38	FOR_5	IF_9
0x525c	            0x85c0	                           test eax, eax	      1767	mark.c	FUNCTION_38	FOR_5	IF_9
0x525e	            0x7429	                            je 0x40052c9	      1767	mark.c	FUNCTION_38	FOR_5	IF_9
0x5260	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1768	mark.c	FUNCTION_38	FOR_5	IF_9	CALL_17
0x5264	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1768	mark.c	FUNCTION_38	FOR_5	IF_9	CALL_17
0x5267	            0x89c7	                            mov edi, eax	      1768	mark.c	FUNCTION_38	FOR_5	IF_9	CALL_17
0x5269	      0xe800000000	                          call 0x40052ae	      1768	mark.c	FUNCTION_38	FOR_5	IF_9	CALL_17
0x526e	        0x488945f8	                mov qword [rbp - 8], rax	      1768	mark.c	FUNCTION_38	FOR_5	IF_9	CALL_17
0x5272	      0x48837df800	                  cmp qword [rbp - 8], 0	      1768	mark.c	FUNCTION_38	FOR_5	IF_9	CALL_17
0x5277	            0x742a	                            je 0x40052e3	      1768	mark.c	FUNCTION_38	FOR_5	IF_9	CALL_17
0x5279	        0x488b45f8	                mov rax, qword [rbp - 8]	      1769	mark.c	FUNCTION_38	FOR_5	IF_9	CALL_18
0x527d	          0x4889c7	                            mov rdi, rax	      1769	mark.c	FUNCTION_38	FOR_5	IF_9	CALL_18
0x5280	      0xe8b3f9ffff	               call sym.skip_for_viminfo	      1769	mark.c	FUNCTION_38	FOR_5	IF_9	CALL_18
0x5285	            0x85c0	                           test eax, eax	      1769	mark.c	FUNCTION_38	FOR_5	IF_9	CALL_18
0x5287	            0x751a	                           jne 0x40052e3	      1769	mark.c	FUNCTION_38	FOR_5	IF_9	CALL_18
0x5289	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	      1770	mark.c	FUNCTION_38	FOR_5	CALL_19
0x528d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1770	mark.c	FUNCTION_38	FOR_5	CALL_19
0x5291	      0xb927000000	                           mov ecx, 0x27	      1770	mark.c	FUNCTION_38	FOR_5	CALL_19
0x5296	      0xba2d000000	                           mov edx, 0x2d	      1770	mark.c	FUNCTION_38	FOR_5	CALL_19
0x529b	          0x4889c7	                            mov rdi, rax	      1770	mark.c	FUNCTION_38	FOR_5	CALL_19
0x529e	      0xe816000000	             call sym.write_one_filemark	      1770	mark.c	FUNCTION_38	FOR_5	CALL_19
0x52a3	        0x8345cc01	               add dword [rbp - 0x34], 1	      1752	mark.c	FUNCTION_38	FOR_5
0x52a7	        0x837dcc63	           cmp dword [rbp - 0x34], 0x63 	      1752	mark.c	FUNCTION_38	FOR_5
0x52ab	     0xf8ef4feffff	                           jle 0x40051e5	      1752	mark.c	FUNCTION_38	FOR_5
0x52b1	            0xeb04	                           jmp 0x40052f7	      1752	mark.c	FUNCTION_38	FOR_5
0x52b3	              0x90	                                     nop	      1672	mark.c	FUNCTION_38	IF_1
0x52b4	            0xeb01	                           jmp 0x40052f7	      1672	mark.c	FUNCTION_38	IF_1
0x52b6	              0x90	                                     nop	      1759	mark.c	FUNCTION_38	FOR_5	IF_7
0x52b7	              0xc9	                                   leave	      1773	mark.c	FUNCTION_38
0x52b8	              0xc3	                                     ret	      1773	mark.c	FUNCTION_38
write_buffer_marks	DO,0:functions,0:IF,1:SWITCH,0:CALL,10:ELSE,0:WHILE,0:FOR,2	158
0x552d	              0x55	                                push rbp	      1852	mark.c	FUNCTION_42
0x552e	          0x4889e5	                            mov rbp, rsp	      1852	mark.c	FUNCTION_42
0x5531	        0x4883ec40	                           sub rsp, 0x40	      1852	mark.c	FUNCTION_42
0x5535	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1852	mark.c	FUNCTION_42
0x5539	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1852	mark.c	FUNCTION_42
0x553d	    0x64488b042528	                mov rax, qword fs:[0x28]	      1852	mark.c	FUNCTION_42
0x5546	        0x488945f8	                mov qword [rbp - 8], rax	      1852	mark.c	FUNCTION_42
0x554a	            0x31c0	                            xor eax, eax	      1852	mark.c	FUNCTION_42
0x554c	    0x488b15000000	            mov rdx, qword [0x04005593] 	      1856	mark.c	FUNCTION_42	CALL_1
0x5553	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1856	mark.c	FUNCTION_42	CALL_1
0x5557	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1856	mark.c	FUNCTION_42	CALL_1
0x555e	    0x41b801000000	                              mov r8d, 1	      1856	mark.c	FUNCTION_42	CALL_1
0x5564	      0xb901040000	                          mov ecx, 0x401	      1856	mark.c	FUNCTION_42	CALL_1
0x5569	          0x4889c6	                            mov rsi, rax	      1856	mark.c	FUNCTION_42	CALL_1
0x556c	      0xbf00000000	                              mov edi, 0	      1856	mark.c	FUNCTION_42	CALL_1
0x5571	      0xe800000000	                          call 0x40055b6	      1856	mark.c	FUNCTION_42	CALL_1
0x5576	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1857	mark.c	FUNCTION_42	CALL_2
0x557a	          0x4889c1	                            mov rcx, rax	      1857	mark.c	FUNCTION_42	CALL_2
0x557d	      0xba03000000	                              mov edx, 3	      1857	mark.c	FUNCTION_42	CALL_2
0x5582	      0xbe01000000	                              mov esi, 1	      1857	mark.c	FUNCTION_42	CALL_2
0x5587	      0xbf00000000	                              mov edi, 0	      1857	mark.c	FUNCTION_42	CALL_2
0x558c	      0xe800000000	                          call 0x40055d1	      1857	mark.c	FUNCTION_42	CALL_2
0x5591	    0x488b15000000	            mov rdx, qword [0x040055d8] 	      1858	mark.c	FUNCTION_42	CALL_3
0x5598	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1858	mark.c	FUNCTION_42	CALL_3
0x559c	          0x4889d6	                            mov rsi, rdx	      1858	mark.c	FUNCTION_42	CALL_3
0x559f	          0x4889c7	                            mov rdi, rax	      1858	mark.c	FUNCTION_42	CALL_3
0x55a2	      0xe800000000	                          call 0x40055e7	      1858	mark.c	FUNCTION_42	CALL_3
0x55a7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1862	mark.c	FUNCTION_42
0x55ab	    0x488b80400100	           mov rax, qword [rax + 0x140] 	      1862	mark.c	FUNCTION_42
0x55b2	        0x488945e0	             mov qword [rbp - 0x20], rax	      1862	mark.c	FUNCTION_42
0x55b6	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      1863	mark.c	FUNCTION_42
0x55bd	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1864	mark.c	FUNCTION_42	CALL_4
0x55c1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1864	mark.c	FUNCTION_42	CALL_4
0x55c5	      0xbe2a000000	                           mov esi, 0x2a	      1864	mark.c	FUNCTION_42	CALL_4
0x55ca	          0x4889c7	                            mov rdi, rax	      1864	mark.c	FUNCTION_42	CALL_4
0x55cd	      0xe80fffffff	                 call sym.write_one_mark	      1864	mark.c	FUNCTION_42	CALL_4
0x55d2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1866	mark.c	FUNCTION_42	CALL_5
0x55d6	    0x488d90180300	                  lea rdx, [rax + 0x318]	      1866	mark.c	FUNCTION_42	CALL_5
0x55dd	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1866	mark.c	FUNCTION_42	CALL_5
0x55e1	      0xbe22000000	                           mov esi, 0x22	      1866	mark.c	FUNCTION_42	CALL_5
0x55e6	          0x4889c7	                            mov rdi, rax	      1866	mark.c	FUNCTION_42	CALL_5
0x55e9	      0xe8f3feffff	                 call sym.write_one_mark	      1866	mark.c	FUNCTION_42	CALL_5
0x55ee	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1867	mark.c	FUNCTION_42	CALL_6
0x55f2	    0x488d90280300	                  lea rdx, [rax + 0x328]	      1867	mark.c	FUNCTION_42	CALL_6
0x55f9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1867	mark.c	FUNCTION_42	CALL_6
0x55fd	      0xbe5e000000	                           mov esi, 0x5e	      1867	mark.c	FUNCTION_42	CALL_6
0x5602	          0x4889c7	                            mov rdi, rax	      1867	mark.c	FUNCTION_42	CALL_6
0x5605	      0xe8d7feffff	                 call sym.write_one_mark	      1867	mark.c	FUNCTION_42	CALL_6
0x560a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1868	mark.c	FUNCTION_42	CALL_7
0x560e	    0x488d90380300	                  lea rdx, [rax + 0x338]	      1868	mark.c	FUNCTION_42	CALL_7
0x5615	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1868	mark.c	FUNCTION_42	CALL_7
0x5619	      0xbe2e000000	                           mov esi, 0x2e	      1868	mark.c	FUNCTION_42	CALL_7
0x561e	          0x4889c7	                            mov rdi, rax	      1868	mark.c	FUNCTION_42	CALL_7
0x5621	      0xe8bbfeffff	                 call sym.write_one_mark	      1868	mark.c	FUNCTION_42	CALL_7
0x5626	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      1871	mark.c	FUNCTION_42	FOR_1
0x562d	      0xe9f4000000	                           jmp 0x4005766	      1871	mark.c	FUNCTION_42	FOR_1
0x5632	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x5636	     0xf84ba000000	                            je 0x4005736	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x563c	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x563f	          0x8d50ff	                      lea edx, [rax - 1]	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x5642	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x5646	          0x4863d2	                         movsxd rdx, edx	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x5649	        0x4883c234	                           add rdx, 0x34	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x564d	        0x48c1e204	                              shl rdx, 4	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x5651	          0x4801d0	                            add rax, rdx	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x5654	        0x4883c008	                              add rax, 8	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x5658	          0x488b10	                    mov rdx, qword [rax]	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x565b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x565f	          0x8b4ddc	             mov ecx, dword [rbp - 0x24]	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x5662	          0x4863c9	                         movsxd rcx, ecx	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x5665	        0x4883c134	                           add rcx, 0x34	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x5669	        0x48c1e104	                              shl rcx, 4	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x566d	          0x4801c8	                            add rax, rcx	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x5670	        0x4883c008	                              add rax, 8	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x5674	          0x488b00	                    mov rax, qword [rax]	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x5677	          0x4839c2	                            cmp rdx, rax	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x567a	            0x757a	                           jne 0x4005736	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x567c	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x567f	          0x8d50ff	                      lea edx, [rax - 1]	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x5682	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x5686	          0x4863d2	                         movsxd rdx, edx	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x5689	        0x4883c234	                           add rdx, 0x34	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x568d	        0x48c1e204	                              shl rdx, 4	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x5691	          0x4801d0	                            add rax, rdx	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x5694	        0x4883c010	                           add rax, 0x10	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x5698	            0x8b10	                    mov edx, dword [rax]	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x569a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x569e	          0x8b4ddc	             mov ecx, dword [rbp - 0x24]	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x56a1	          0x4863c9	                         movsxd rcx, ecx	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x56a4	        0x4883c134	                           add rcx, 0x34	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x56a8	        0x48c1e104	                              shl rcx, 4	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x56ac	          0x4801c8	                            add rax, rcx	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x56af	        0x4883c010	                           add rax, 0x10	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x56b3	            0x8b00	                    mov eax, dword [rax]	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x56b5	            0x39c2	                            cmp edx, eax	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x56b7	            0x753d	                           jne 0x4005736	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x56b9	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x56bc	          0x8d50ff	                      lea edx, [rax - 1]	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x56bf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x56c3	          0x4863d2	                         movsxd rdx, edx	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x56c6	        0x4883c234	                           add rdx, 0x34	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x56ca	        0x48c1e204	                              shl rdx, 4	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x56ce	          0x4801d0	                            add rax, rdx	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x56d1	        0x4883c014	                           add rax, 0x14	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x56d5	            0x8b10	                    mov edx, dword [rax]	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x56d7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x56db	          0x8b4ddc	             mov ecx, dword [rbp - 0x24]	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x56de	          0x4863c9	                         movsxd rcx, ecx	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x56e1	        0x4883c134	                           add rcx, 0x34	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x56e5	        0x48c1e104	                              shl rcx, 4	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x56e9	          0x4801c8	                            add rax, rcx	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x56ec	        0x4883c014	                           add rax, 0x14	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x56f0	            0x8b00	                    mov eax, dword [rax]	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x56f2	            0x39c2	                            cmp edx, eax	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x56f4	            0x742c	                            je 0x4005762	      1874	mark.c	FUNCTION_42	FOR_1	IF_1	CALL_8
0x56f6	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1876	mark.c	FUNCTION_42	FOR_1	CALL_9
0x56f9	            0x4898	                                    cdqe	      1876	mark.c	FUNCTION_42	FOR_1	CALL_9
0x56fb	        0x4883c034	                           add rax, 0x34	      1876	mark.c	FUNCTION_42	FOR_1	CALL_9
0x56ff	        0x48c1e004	                              shl rax, 4	      1876	mark.c	FUNCTION_42	FOR_1	CALL_9
0x5703	          0x4889c2	                            mov rdx, rax	      1876	mark.c	FUNCTION_42	FOR_1	CALL_9
0x5706	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1876	mark.c	FUNCTION_42	FOR_1	CALL_9
0x570a	          0x4801d0	                            add rax, rdx	      1876	mark.c	FUNCTION_42	FOR_1	CALL_9
0x570d	        0x488d5008	                      lea rdx, [rax + 8]	      1876	mark.c	FUNCTION_42	FOR_1	CALL_9
0x5711	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1876	mark.c	FUNCTION_42	FOR_1	CALL_9
0x5715	      0xbe2b000000	                           mov esi, 0x2b	      1876	mark.c	FUNCTION_42	FOR_1	CALL_9
0x571a	          0x4889c7	                            mov rdi, rax	      1876	mark.c	FUNCTION_42	FOR_1	CALL_9
0x571d	      0xe8bffdffff	                 call sym.write_one_mark	      1876	mark.c	FUNCTION_42	FOR_1	CALL_9
0x5722	        0x8345dc01	               add dword [rbp - 0x24], 1	      1871	mark.c	FUNCTION_42	FOR_1
0x5726	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1871	mark.c	FUNCTION_42	FOR_1
0x572a	    0x8b8088090000	           mov eax, dword [rax + 0x988] 	      1871	mark.c	FUNCTION_42	FOR_1
0x5730	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      1871	mark.c	FUNCTION_42	FOR_1
0x5733	     0xf8ff9feffff	                            jg 0x4005672	      1871	mark.c	FUNCTION_42	FOR_1
0x5739	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      1879	mark.c	FUNCTION_42	FOR_2
0x5740	            0xeb33	                           jmp 0x40057b5	      1879	mark.c	FUNCTION_42	FOR_2
0x5742	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1880	mark.c	FUNCTION_42	CALL_10
0x5745	            0x4898	                                    cdqe	      1880	mark.c	FUNCTION_42	CALL_10
0x5747	        0x4883c014	                           add rax, 0x14	      1880	mark.c	FUNCTION_42	CALL_10
0x574b	        0x48c1e004	                              shl rax, 4	      1880	mark.c	FUNCTION_42	CALL_10
0x574f	          0x4889c2	                            mov rdx, rax	      1880	mark.c	FUNCTION_42	CALL_10
0x5752	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1880	mark.c	FUNCTION_42	CALL_10
0x5756	          0x4801d0	                            add rax, rdx	      1880	mark.c	FUNCTION_42	CALL_10
0x5759	        0x488d5008	                      lea rdx, [rax + 8]	      1880	mark.c	FUNCTION_42	CALL_10
0x575d	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1880	mark.c	FUNCTION_42	CALL_10
0x5760	          0x8d4861	                   lea ecx, [rax + 0x61]	      1880	mark.c	FUNCTION_42	CALL_10
0x5763	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1880	mark.c	FUNCTION_42	CALL_10
0x5767	            0x89ce	                            mov esi, ecx	      1880	mark.c	FUNCTION_42	CALL_10
0x5769	          0x4889c7	                            mov rdi, rax	      1880	mark.c	FUNCTION_42	CALL_10
0x576c	      0xe870fdffff	                 call sym.write_one_mark	      1880	mark.c	FUNCTION_42	CALL_10
0x5771	        0x8345dc01	               add dword [rbp - 0x24], 1	      1879	mark.c	FUNCTION_42	FOR_2
0x5775	        0x837ddc19	           cmp dword [rbp - 0x24], 0x19 	      1879	mark.c	FUNCTION_42	FOR_2
0x5779	            0x7ec7	                           jle 0x4005782	      1879	mark.c	FUNCTION_42	FOR_2
0x577b	              0x90	                                     nop	      1881	mark.c	FUNCTION_42
0x577c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1881	mark.c	FUNCTION_42
0x5780	    0x644833042528	                xor rax, qword fs:[0x28]	      1881	mark.c	FUNCTION_42
0x5789	            0x7405	                            je 0x40057d0	      1881	mark.c	FUNCTION_42
0x578b	      0xe800000000	                          call 0x40057d0	      1881	mark.c	FUNCTION_42
0x5790	              0xc9	                                   leave	      1881	mark.c	FUNCTION_42
0x5791	              0xc3	                                     ret	      1881	mark.c	FUNCTION_42
fname2fnum	DO,0:functions,0:IF,2:SWITCH,0:CALL,7:ELSE,1:WHILE,0:FOR,0	68
0x140c	              0x55	                                push rbp	       525	mark.c	FUNCTION_11
0x140d	          0x4889e5	                            mov rbp, rsp	       525	mark.c	FUNCTION_11
0x1410	        0x4883ec20	                           sub rsp, 0x20	       525	mark.c	FUNCTION_11
0x1414	        0x48897de8	             mov qword [rbp - 0x18], rdi	       525	mark.c	FUNCTION_11
0x1418	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       528	mark.c	FUNCTION_11	IF_1
0x141c	        0x488b4018	            mov rax, qword [rax + 0x18] 	       528	mark.c	FUNCTION_11	IF_1
0x1420	          0x4885c0	                           test rax, rax	       528	mark.c	FUNCTION_11	IF_1
0x1423	     0xf84ed000000	                            je 0x4001556	       528	mark.c	FUNCTION_11	IF_1
0x1429	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       534	mark.c	FUNCTION_11	IF_1	IF_2
0x142d	        0x488b4018	            mov rax, qword [rax + 0x18] 	       534	mark.c	FUNCTION_11	IF_1	IF_2
0x1431	           0xfb600	                   movzx eax, byte [rax]	       534	mark.c	FUNCTION_11	IF_1	IF_2
0x1434	            0x3c7e	                            cmp al, 0x7e	       534	mark.c	FUNCTION_11	IF_1	IF_2
0x1436	            0x7571	                           jne 0x40014e9	       534	mark.c	FUNCTION_11	IF_1	IF_2
0x1438	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       534	mark.c	FUNCTION_11	IF_1	IF_2
0x143c	        0x488b4018	            mov rax, qword [rax + 0x18] 	       534	mark.c	FUNCTION_11	IF_1	IF_2
0x1440	        0x4883c001	                              add rax, 1	       534	mark.c	FUNCTION_11	IF_1	IF_2
0x1444	           0xfb600	                   movzx eax, byte [rax]	       534	mark.c	FUNCTION_11	IF_1	IF_2
0x1447	            0x3c2f	                            cmp al, 0x2f	       534	mark.c	FUNCTION_11	IF_1	IF_2
0x1449	            0x755e	                           jne 0x40014e9	       534	mark.c	FUNCTION_11	IF_1	IF_2
0x144b	    0x488b05000000	            mov rax, qword [0x04001492] 	       542	mark.c	FUNCTION_11	IF_1	IF_2	CALL_1
0x1452	      0xba00100000	                         mov edx, 0x1000	       542	mark.c	FUNCTION_11	IF_1	IF_2	CALL_1
0x1457	          0x4889c6	                            mov rsi, rax	       542	mark.c	FUNCTION_11	IF_1	IF_2	CALL_1
0x145a	      0xbf00000000	                              mov edi, 0	       542	mark.c	FUNCTION_11	IF_1	IF_2	CALL_1
0x145f	      0xe800000000	                          call 0x40014a4	       542	mark.c	FUNCTION_11	IF_1	IF_2	CALL_1
0x1464	    0x488b05000000	            mov rax, qword [0x040014ab] 	       543	mark.c	FUNCTION_11	IF_1	IF_2	CALL_2
0x146b	          0x4889c7	                            mov rdi, rax	       543	mark.c	FUNCTION_11	IF_1	IF_2	CALL_2
0x146e	      0xe800000000	                          call 0x40014b3	       543	mark.c	FUNCTION_11	IF_1	IF_2	CALL_2
0x1473	          0x8945f4	              mov dword [rbp - 0xc], eax	       543	mark.c	FUNCTION_11	IF_1	IF_2	CALL_2
0x1476	      0xb8ff0f0000	                          mov eax, 0xfff	       544	mark.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x147b	          0x2b45f4	              sub eax, dword [rbp - 0xc]	       544	mark.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x147e	            0x4898	                                    cdqe	       544	mark.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x1480	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       544	mark.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x1484	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	       544	mark.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x1488	        0x488d7202	                      lea rsi, [rdx + 2]	       544	mark.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x148c	    0x488b0d000000	            mov rcx, qword [0x040014d3] 	       544	mark.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x1493	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       544	mark.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x1496	          0x4863d2	                         movsxd rdx, edx	       544	mark.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x1499	          0x4801d1	                            add rcx, rdx	       544	mark.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x149c	          0x4889c2	                            mov rdx, rax	       544	mark.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x149f	          0x4889cf	                            mov rdi, rcx	       544	mark.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x14a2	      0xe800000000	                          call 0x40014e7	       544	mark.c	FUNCTION_11	IF_1	IF_2	CALL_3
0x14a7	            0xeb1f	                           jmp 0x4001508	       539	mark.c	FUNCTION_11	IF_1	IF_2
0x14a9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       547	mark.c	FUNCTION_11	IF_1	CALL_4
0x14ad	        0x488b4818	            mov rcx, qword [rax + 0x18] 	       547	mark.c	FUNCTION_11	IF_1	CALL_4
0x14b1	    0x488b05000000	            mov rax, qword [0x040014f8] 	       547	mark.c	FUNCTION_11	IF_1	CALL_4
0x14b8	      0xbaff0f0000	                          mov edx, 0xfff	       547	mark.c	FUNCTION_11	IF_1	CALL_4
0x14bd	          0x4889ce	                            mov rsi, rcx	       547	mark.c	FUNCTION_11	IF_1	CALL_4
0x14c0	          0x4889c7	                            mov rdi, rax	       547	mark.c	FUNCTION_11	IF_1	CALL_4
0x14c3	      0xe800000000	                          call 0x4001508	       547	mark.c	FUNCTION_11	IF_1	CALL_4
0x14c8	    0x488b05000000	            mov rax, qword [0x0400150f] 	       550	mark.c	FUNCTION_11	IF_1	CALL_5
0x14cf	      0xbe01040000	                          mov esi, 0x401	       550	mark.c	FUNCTION_11	IF_1	CALL_5
0x14d4	          0x4889c7	                            mov rdi, rax	       550	mark.c	FUNCTION_11	IF_1	CALL_5
0x14d7	      0xe800000000	                          call 0x400151c	       550	mark.c	FUNCTION_11	IF_1	CALL_5
0x14dc	    0x488b15000000	            mov rdx, qword [0x04001523] 	       551	mark.c	FUNCTION_11	IF_1	CALL_6
0x14e3	    0x488b05000000	            mov rax, qword [0x0400152a] 	       551	mark.c	FUNCTION_11	IF_1	CALL_6
0x14ea	          0x4889d6	                            mov rsi, rdx	       551	mark.c	FUNCTION_11	IF_1	CALL_6
0x14ed	          0x4889c7	                            mov rdi, rax	       551	mark.c	FUNCTION_11	IF_1	CALL_6
0x14f0	      0xe800000000	                          call 0x4001535	       551	mark.c	FUNCTION_11	IF_1	CALL_6
0x14f5	        0x488945f8	                mov qword [rbp - 8], rax	       551	mark.c	FUNCTION_11	IF_1	CALL_6
0x14f9	    0x488b05000000	            mov rax, qword [0x04001540] 	       554	mark.c	FUNCTION_11	IF_1	CALL_7
0x1500	        0x488b75f8	                mov rsi, qword [rbp - 8]	       554	mark.c	FUNCTION_11	IF_1	CALL_7
0x1504	      0xb900000000	                              mov ecx, 0	       554	mark.c	FUNCTION_11	IF_1	CALL_7
0x1509	      0xba01000000	                              mov edx, 1	       554	mark.c	FUNCTION_11	IF_1	CALL_7
0x150e	          0x4889c7	                            mov rdi, rax	       554	mark.c	FUNCTION_11	IF_1	CALL_7
0x1511	      0xe800000000	                          call 0x4001556	       554	mark.c	FUNCTION_11	IF_1	CALL_7
0x1516	              0x90	                                     nop	       556	mark.c	FUNCTION_11
0x1517	              0xc9	                                   leave	       556	mark.c	FUNCTION_11
0x1518	              0xc3	                                     ret	       556	mark.c	FUNCTION_11
copy_viminfo_marks	DO,0:functions,1:IF,31:SWITCH,1:CALL,33:ELSE,4:WHILE,6:FOR,0	532
0x59bd	              0x55	                                push rbp	      1967	mark.c	FUNCTION_45
0x59be	          0x4889e5	                            mov rbp, rsp	      1967	mark.c	FUNCTION_45
0x59c1	    0x4881ecb00000	                           sub rsp, 0xb0	      1967	mark.c	FUNCTION_45
0x59c8	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	      1967	mark.c	FUNCTION_45
0x59cf	    0x4889b560ffff	             mov qword [rbp - 0xa0], rsi	      1967	mark.c	FUNCTION_45
0x59d6	    0x48899558ffff	             mov qword [rbp - 0xa8], rdx	      1967	mark.c	FUNCTION_45
0x59dd	    0x898d54ffffff	             mov dword [rbp - 0xac], ecx	      1967	mark.c	FUNCTION_45
0x59e3	    0x44898550ffff	             mov dword [rbp - 0xb0], r8d	      1967	mark.c	FUNCTION_45
0x59ea	    0x64488b042528	                mov rax, qword fs:[0x28]	      1967	mark.c	FUNCTION_45
0x59f3	        0x488945f8	                mov qword [rbp - 8], rax	      1967	mark.c	FUNCTION_45
0x59f7	            0x31c0	                            xor eax, eax	      1967	mark.c	FUNCTION_45
0x59f9	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1968	mark.c	FUNCTION_45
0x5a00	          0x488b00	                    mov rax, qword [rax]	      1968	mark.c	FUNCTION_45
0x5a03	        0x488945c8	             mov qword [rbp - 0x38], rax	      1968	mark.c	FUNCTION_45
0x5a07	    0x48c745b00000	               mov qword [rbp - 0x50], 0	      1979	mark.c	FUNCTION_45
0x5a0f	    0xc74584000000	               mov dword [rbp - 0x7c], 0	      1981	mark.c	FUNCTION_45
0x5a16	    0xc74588000000	               mov dword [rbp - 0x78], 0	      1982	mark.c	FUNCTION_45
0x5a1d	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      1983	mark.c	FUNCTION_45
0x5a25	      0xbf00020000	                          mov edi, 0x200	      1985	mark.c	FUNCTION_45	IF_1	CALL_1
0x5a2a	      0xe800000000	                          call 0x4005a6f	      1985	mark.c	FUNCTION_45	IF_1	CALL_1
0x5a2f	        0x488945d0	             mov qword [rbp - 0x30], rax	      1985	mark.c	FUNCTION_45	IF_1	CALL_1
0x5a33	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      1985	mark.c	FUNCTION_45	IF_1	CALL_1
0x5a38	     0xf8414080000	                            je 0x4006292	      1985	mark.c	FUNCTION_45	IF_1	CALL_1
0x5a3e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1987	mark.c	FUNCTION_45
0x5a42	          0xc60000	                       mov byte [rax], 0	      1987	mark.c	FUNCTION_45
0x5a45	    0x4883bd60ffff	               cmp qword [rbp - 0xa0], 0	      1989	mark.c	FUNCTION_45	IF_2
0x5a4d	            0x7448	                            je 0x4005ad7	      1989	mark.c	FUNCTION_45	IF_2
0x5a4f	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1989	mark.c	FUNCTION_45	IF_2
0x5a56	            0x8b00	                    mov eax, dword [rax]	      1989	mark.c	FUNCTION_45	IF_2
0x5a58	            0x85c0	                           test eax, eax	      1989	mark.c	FUNCTION_45	IF_2
0x5a5a	            0x7e3b	                           jle 0x4005ad7	      1989	mark.c	FUNCTION_45	IF_2
0x5a5c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1992	mark.c	FUNCTION_45	IF_2	CALL_2
0x5a63	            0x8b00	                    mov eax, dword [rax]	      1992	mark.c	FUNCTION_45	IF_2	CALL_2
0x5a65	          0x4863f0	                         movsxd rsi, eax	      1992	mark.c	FUNCTION_45	IF_2	CALL_2
0x5a68	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1992	mark.c	FUNCTION_45	IF_2	CALL_2
0x5a6f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1992	mark.c	FUNCTION_45	IF_2	CALL_2
0x5a73	      0xb900000000	                              mov ecx, 0	      1992	mark.c	FUNCTION_45	IF_2	CALL_2
0x5a78	      0xba08000000	                              mov edx, 8	      1992	mark.c	FUNCTION_45	IF_2	CALL_2
0x5a7d	          0x4889c7	                            mov rdi, rax	      1992	mark.c	FUNCTION_45	IF_2	CALL_2
0x5a80	      0xe800000000	                          call 0x4005ac5	      1992	mark.c	FUNCTION_45	IF_2	CALL_2
0x5a85	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1994	mark.c	FUNCTION_45	IF_2
0x5a8c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1994	mark.c	FUNCTION_45	IF_2
0x5a90	          0x488b00	                    mov rax, qword [rax]	      1994	mark.c	FUNCTION_45	IF_2
0x5a93	        0x488945b8	             mov qword [rbp - 0x48], rax	      1994	mark.c	FUNCTION_45	IF_2
0x5a97	    0x4883bd60ffff	               cmp qword [rbp - 0xa0], 0	      1998	mark.c	FUNCTION_45	IF_3
0x5a9f	            0x752e	                           jne 0x4005b0f	      1998	mark.c	FUNCTION_45	IF_3
0x5aa1	    0x8b8550ffffff	             mov eax, dword [rbp - 0xb0]	      1998	mark.c	FUNCTION_45	IF_3
0x5aa7	          0x83e00c	                            and eax, 0xc	      1998	mark.c	FUNCTION_45	IF_3
0x5aaa	            0x85c0	                           test eax, eax	      1998	mark.c	FUNCTION_45	IF_3
0x5aac	            0x7421	                            je 0x4005b0f	      1998	mark.c	FUNCTION_45	IF_3
0x5aae	      0xe800000000	                          call 0x4005af3	      2000	mark.c	FUNCTION_45	IF_3	CALL_3
0x5ab3	        0x488945b0	             mov qword [rbp - 0x50], rax	      2000	mark.c	FUNCTION_45	IF_3	CALL_3
0x5ab7	      0x48837db000	               cmp qword [rbp - 0x50], 0	      2001	mark.c	FUNCTION_45	IF_3	IF_4
0x5abc	            0x7411	                            je 0x4005b0f	      2001	mark.c	FUNCTION_45	IF_3	IF_4
0x5abe	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2002	mark.c	FUNCTION_45	IF_3	CALL_4
0x5ac2	          0x4889c6	                            mov rsi, rax	      2002	mark.c	FUNCTION_45	IF_3	CALL_4
0x5ac5	      0xbf39000000	                           mov edi, 0x39	      2002	mark.c	FUNCTION_45	IF_3	CALL_4
0x5aca	      0xe800000000	                          call 0x4005b0f	      2002	mark.c	FUNCTION_45	IF_3	CALL_4
0x5acf	      0xbf27000000	                           mov edi, 0x27	      2006	mark.c	FUNCTION_45	CALL_5
0x5ad4	      0xe800000000	                          call 0x4005b19	      2006	mark.c	FUNCTION_45	CALL_5
0x5ad9	          0x894590	             mov dword [rbp - 0x70], eax	      2006	mark.c	FUNCTION_45	CALL_5
0x5adc	      0xe9dd060000	                           jmp 0x40061fe	      2007	mark.c	FUNCTION_45	WHILE_1
0x5ae1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2009	mark.c	FUNCTION_45	WHILE_1	IF_5
0x5ae5	           0xfb600	                   movzx eax, byte [rax]	      2009	mark.c	FUNCTION_45	WHILE_1	IF_5
0x5ae8	            0x3c3e	                            cmp al, 0x3e	      2009	mark.c	FUNCTION_45	WHILE_1	IF_5
0x5aea	            0x7471	                            je 0x4005b9d	      2009	mark.c	FUNCTION_45	WHILE_1	IF_5
0x5aec	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2011	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6
0x5af0	           0xfb600	                   movzx eax, byte [rax]	      2011	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6
0x5af3	            0x3c0a	                             cmp al, 0xa	      2011	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6
0x5af5	            0x743f	                            je 0x4005b76	      2011	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6
0x5af7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2011	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6
0x5afb	           0xfb600	                   movzx eax, byte [rax]	      2011	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6
0x5afe	            0x3c0d	                             cmp al, 0xd	      2011	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6
0x5b00	            0x7434	                            je 0x4005b76	      2011	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6
0x5b02	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2011	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6
0x5b06	           0xfb600	                   movzx eax, byte [rax]	      2011	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6
0x5b09	            0x3c23	                            cmp al, 0x23	      2011	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6
0x5b0b	            0x7429	                            je 0x4005b76	      2011	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6
0x5b0d	      0xbf00000000	                              mov edi, 0	      2013	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6	IF_7	CALL_7
0x5b12	      0xe800000000	                          call 0x4005b57	      2013	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6	IF_7	CALL_7
0x5b17	          0x4889c1	                            mov rcx, rax	      2013	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6	IF_7	CALL_7
0x5b1a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2013	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6	IF_7	CALL_7
0x5b1e	          0x4889c2	                            mov rdx, rax	      2013	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6	IF_7	CALL_7
0x5b21	          0x4889ce	                            mov rsi, rcx	      2013	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6	IF_7	CALL_7
0x5b24	      0xbf00000000	                              mov edi, 0	      2013	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6	IF_7	CALL_7
0x5b29	      0xe800000000	                          call 0x4005b6e	      2013	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6	IF_7	CALL_7
0x5b2e	            0x85c0	                           test eax, eax	      2013	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6	IF_7	CALL_7
0x5b30	     0xf85ad060000	                           jne 0x4006223	      2013	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6	IF_7	CALL_7
0x5b36	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2016	mark.c	FUNCTION_45	WHILE_1	IF_5	CALL_8
0x5b3d	        0x488b5008	                mov rdx, qword [rax + 8]	      2016	mark.c	FUNCTION_45	WHILE_1	IF_5	CALL_8
0x5b41	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2016	mark.c	FUNCTION_45	WHILE_1	IF_5	CALL_8
0x5b45	      0xbe00020000	                          mov esi, 0x200	      2016	mark.c	FUNCTION_45	WHILE_1	IF_5	CALL_8
0x5b4a	          0x4889c7	                            mov rdi, rax	      2016	mark.c	FUNCTION_45	WHILE_1	IF_5	CALL_8
0x5b4d	      0xe800000000	                          call 0x4005b92	      2016	mark.c	FUNCTION_45	WHILE_1	IF_5	CALL_8
0x5b52	    0x898554ffffff	             mov dword [rbp - 0xac], eax	      2016	mark.c	FUNCTION_45	WHILE_1	IF_5	CALL_8
0x5b58	      0xe961060000	                           jmp 0x40061fe	      2017	mark.c	FUNCTION_45	WHILE_1	IF_5
0x5b5d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2025	mark.c	FUNCTION_45	WHILE_1	CALL_9
0x5b61	        0x4883c001	                              add rax, 1	      2025	mark.c	FUNCTION_45	WHILE_1	CALL_9
0x5b65	          0x4889c7	                            mov rdi, rax	      2025	mark.c	FUNCTION_45	WHILE_1	CALL_9
0x5b68	      0xe800000000	                          call 0x4005bad	      2025	mark.c	FUNCTION_45	WHILE_1	CALL_9
0x5b6d	        0x488945d8	             mov qword [rbp - 0x28], rax	      2025	mark.c	FUNCTION_45	WHILE_1	CALL_9
0x5b71	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2026	mark.c	FUNCTION_45	WHILE_1	CALL_10
0x5b75	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2026	mark.c	FUNCTION_45	WHILE_1	CALL_10
0x5b7c	          0x488b00	                    mov rax, qword [rax]	      2026	mark.c	FUNCTION_45	WHILE_1	CALL_10
0x5b7f	          0x4829c2	                            sub rdx, rax	      2026	mark.c	FUNCTION_45	WHILE_1	CALL_10
0x5b82	          0x4889d0	                            mov rax, rdx	      2026	mark.c	FUNCTION_45	WHILE_1	CALL_10
0x5b85	            0x89c1	                            mov ecx, eax	      2026	mark.c	FUNCTION_45	WHILE_1	CALL_10
0x5b87	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2026	mark.c	FUNCTION_45	WHILE_1	CALL_10
0x5b8e	      0xba00000000	                              mov edx, 0	      2026	mark.c	FUNCTION_45	WHILE_1	CALL_10
0x5b93	            0x89ce	                            mov esi, ecx	      2026	mark.c	FUNCTION_45	WHILE_1	CALL_10
0x5b95	          0x4889c7	                            mov rdi, rax	      2026	mark.c	FUNCTION_45	WHILE_1	CALL_10
0x5b98	      0xe800000000	                          call 0x4005bdd	      2026	mark.c	FUNCTION_45	WHILE_1	CALL_10
0x5b9d	        0x488945d8	             mov qword [rbp - 0x28], rax	      2026	mark.c	FUNCTION_45	WHILE_1	CALL_10
0x5ba1	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      2027	mark.c	FUNCTION_45	WHILE_1	IF_8
0x5ba6	            0x7505	                           jne 0x4005bed	      2027	mark.c	FUNCTION_45	WHILE_1	IF_8
0x5ba8	      0xe911060000	                           jmp 0x40061fe	      2028	mark.c	FUNCTION_45	WHILE_1	IF_8
0x5bad	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2029	mark.c	FUNCTION_45	WHILE_1	CALL_11
0x5bb1	          0x4889c7	                            mov rdi, rax	      2029	mark.c	FUNCTION_45	WHILE_1	CALL_11
0x5bb4	      0xe800000000	                          call 0x4005bf9	      2029	mark.c	FUNCTION_45	WHILE_1	CALL_11
0x5bb9	          0x4889c2	                            mov rdx, rax	      2029	mark.c	FUNCTION_45	WHILE_1	CALL_11
0x5bbc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2029	mark.c	FUNCTION_45	WHILE_1	CALL_11
0x5bc0	          0x4801d0	                            add rax, rdx	      2029	mark.c	FUNCTION_45	WHILE_1	CALL_11
0x5bc3	        0x488945a8	             mov qword [rbp - 0x58], rax	      2029	mark.c	FUNCTION_45	WHILE_1	CALL_11
0x5bc7	            0xeb05	                           jmp 0x4005c0e	      2030	mark.c	FUNCTION_45	WHILE_1	WHILE_2	CALL_12
0x5bc9	      0x48836da801	               sub qword [rbp - 0x58], 1	      2031	mark.c	FUNCTION_45	WHILE_1	WHILE_2
0x5bce	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2030	mark.c	FUNCTION_45	WHILE_1	WHILE_2	CALL_12
0x5bd2	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      2030	mark.c	FUNCTION_45	WHILE_1	WHILE_2	CALL_12
0x5bd6	            0x7420	                            je 0x4005c38	      2030	mark.c	FUNCTION_45	WHILE_1	WHILE_2	CALL_12
0x5bd8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2030	mark.c	FUNCTION_45	WHILE_1	WHILE_2	CALL_12
0x5bdc	           0xfb600	                   movzx eax, byte [rax]	      2030	mark.c	FUNCTION_45	WHILE_1	WHILE_2	CALL_12
0x5bdf	            0x84c0	                             test al, al	      2030	mark.c	FUNCTION_45	WHILE_1	WHILE_2	CALL_12
0x5be1	            0x74e6	                            je 0x4005c09	      2030	mark.c	FUNCTION_45	WHILE_1	WHILE_2	CALL_12
0x5be3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2030	mark.c	FUNCTION_45	WHILE_1	WHILE_2	CALL_12
0x5be7	           0xfb600	                   movzx eax, byte [rax]	      2030	mark.c	FUNCTION_45	WHILE_1	WHILE_2	CALL_12
0x5bea	           0xfb6c0	                           movzx eax, al	      2030	mark.c	FUNCTION_45	WHILE_1	WHILE_2	CALL_12
0x5bed	            0x89c7	                            mov edi, eax	      2030	mark.c	FUNCTION_45	WHILE_1	WHILE_2	CALL_12
0x5bef	      0xe800000000	                          call 0x4005c34	      2030	mark.c	FUNCTION_45	WHILE_1	WHILE_2	CALL_12
0x5bf4	            0x85c0	                           test eax, eax	      2030	mark.c	FUNCTION_45	WHILE_1	WHILE_2	CALL_12
0x5bf6	            0x75d1	                           jne 0x4005c09	      2030	mark.c	FUNCTION_45	WHILE_1	WHILE_2	CALL_12
0x5bf8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2032	mark.c	FUNCTION_45	WHILE_1	IF_9
0x5bfc	           0xfb600	                   movzx eax, byte [rax]	      2032	mark.c	FUNCTION_45	WHILE_1	IF_9
0x5bff	            0x84c0	                             test al, al	      2032	mark.c	FUNCTION_45	WHILE_1	IF_9
0x5c01	            0x7405	                            je 0x4005c48	      2032	mark.c	FUNCTION_45	WHILE_1	IF_9
0x5c03	      0x488345a801	               add qword [rbp - 0x58], 1	      2033	mark.c	FUNCTION_45	WHILE_1	IF_9
0x5c08	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2034	mark.c	FUNCTION_45	WHILE_1
0x5c0c	          0xc60000	                       mov byte [rax], 0	      2034	mark.c	FUNCTION_45	WHILE_1
0x5c0f	      0x48837db000	               cmp qword [rbp - 0x50], 0	      2037	mark.c	FUNCTION_45	WHILE_1	IF_10
0x5c14	            0x7418	                            je 0x4005c6e	      2037	mark.c	FUNCTION_45	WHILE_1	IF_10
0x5c16	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      2038	mark.c	FUNCTION_45	WHILE_1	CALL_13
0x5c1a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2038	mark.c	FUNCTION_45	WHILE_1	CALL_13
0x5c1e	      0xbaffffffff	                     mov edx, 0xffffffff	      2038	mark.c	FUNCTION_45	WHILE_1	CALL_13
0x5c23	          0x4889ce	                            mov rsi, rcx	      2038	mark.c	FUNCTION_45	WHILE_1	CALL_13
0x5c26	          0x4889c7	                            mov rdi, rax	      2038	mark.c	FUNCTION_45	WHILE_1	CALL_13
0x5c29	      0xe800000000	                          call 0x4005c6e	      2038	mark.c	FUNCTION_45	WHILE_1	CALL_13
0x5c2e	    0xc74580000000	               mov dword [rbp - 0x80], 0	      2045	mark.c	FUNCTION_45	WHILE_1
0x5c35	          0x8b4580	             mov eax, dword [rbp - 0x80]	      2045	mark.c	FUNCTION_45	WHILE_1
0x5c38	    0x89857cffffff	             mov dword [rbp - 0x84], eax	      2045	mark.c	FUNCTION_45	WHILE_1
0x5c3e	    0x4883bd60ffff	               cmp qword [rbp - 0xa0], 0	      2046	mark.c	FUNCTION_45	WHILE_1	IF_11
0x5c46	     0xf8587000000	                           jne 0x4005d13	      2046	mark.c	FUNCTION_45	WHILE_1	IF_11
0x5c4c	    0x8b8550ffffff	             mov eax, dword [rbp - 0xb0]	      2048	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12
0x5c52	          0x83e002	                              and eax, 2	      2048	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12
0x5c55	            0x85c0	                           test eax, eax	      2048	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12
0x5c57	     0xf84cd020000	                            je 0x4005f6a	      2048	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12
0x5c5d	    0x488b05000000	            mov rax, qword [0x04005ca4] 	      2048	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12
0x5c64	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      2048	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12
0x5c6b	          0x4885c0	                           test rax, rax	      2048	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12
0x5c6e	     0xf84b6020000	                            je 0x4005f6a	      2048	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12
0x5c74	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2050	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	IF_13
0x5c78	           0xfb600	                   movzx eax, byte [rax]	      2050	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	IF_13
0x5c7b	            0x84c0	                             test al, al	      2050	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	IF_13
0x5c7d	            0x752a	                           jne 0x4005ce9	      2050	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	IF_13
0x5c7f	    0x488b05000000	            mov rax, qword [0x04005cc6] 	      2051	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	CALL_14
0x5c86	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      2051	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	CALL_14
0x5c8d	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2051	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	CALL_14
0x5c91	    0x41b801000000	                              mov r8d, 1	      2051	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	CALL_14
0x5c97	      0xb900020000	                          mov ecx, 0x200	      2051	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	CALL_14
0x5c9c	          0x4889c6	                            mov rsi, rax	      2051	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	CALL_14
0x5c9f	      0xbf00000000	                              mov edi, 0	      2051	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	CALL_14
0x5ca4	      0xe800000000	                          call 0x4005ce9	      2051	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	CALL_14
0x5ca9	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2052	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	IF_14	CALL_15
0x5cad	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2052	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	IF_14	CALL_15
0x5cb1	          0x4889d6	                            mov rsi, rdx	      2052	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	IF_14	CALL_15
0x5cb4	          0x4889c7	                            mov rdi, rax	      2052	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	IF_14	CALL_15
0x5cb7	      0xe800000000	                          call 0x4005cfc	      2052	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	IF_14	CALL_15
0x5cbc	            0x85c0	                           test eax, eax	      2052	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	IF_14	CALL_15
0x5cbe	     0xf8566020000	                           jne 0x4005f6a	      2052	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	IF_14	CALL_15
0x5cc4	    0xc7857cffffff	               mov dword [rbp - 0x84], 1	      2053	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	IF_14
0x5cce	      0xe957020000	                           jmp 0x4005f6a	      2053	mark.c	FUNCTION_45	WHILE_1	IF_11	IF_12	IF_14
0x5cd3	    0x488b05000000	            mov rax, qword [0x04005d1a] 	      2059	mark.c	FUNCTION_45	WHILE_1	ELSE_1	CALL_16
0x5cda	        0x488945a0	             mov qword [rbp - 0x60], rax	      2059	mark.c	FUNCTION_45	WHILE_1	ELSE_1	CALL_16
0x5cde	            0xeb5a	                           jmp 0x4005d7a	      2059	mark.c	FUNCTION_45	WHILE_1	ELSE_1	CALL_16
0x5ce0	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2060	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_15
0x5ce4	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      2060	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_15
0x5ceb	          0x4885c0	                           test rax, rax	      2060	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_15
0x5cee	            0x743e	                            je 0x4005d6e	      2060	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_15
0x5cf0	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2062	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_15	CALL_17
0x5cf4	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      2062	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_15	CALL_17
0x5cfb	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2062	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_15	CALL_17
0x5cff	    0x41b801000000	                              mov r8d, 1	      2062	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_15	CALL_17
0x5d05	      0xb900020000	                          mov ecx, 0x200	      2062	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_15	CALL_17
0x5d0a	          0x4889c6	                            mov rsi, rax	      2062	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_15	CALL_17
0x5d0d	      0xbf00000000	                              mov edi, 0	      2062	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_15	CALL_17
0x5d12	      0xe800000000	                          call 0x4005d57	      2062	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_15	CALL_17
0x5d17	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2063	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_15	IF_16	CALL_18
0x5d1b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2063	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_15	IF_16	CALL_18
0x5d1f	          0x4889d6	                            mov rsi, rdx	      2063	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_15	IF_16	CALL_18
0x5d22	          0x4889c7	                            mov rdi, rax	      2063	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_15	IF_16	CALL_18
0x5d25	      0xe800000000	                          call 0x4005d6a	      2063	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_15	IF_16	CALL_18
0x5d2a	            0x85c0	                           test eax, eax	      2063	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_15	IF_16	CALL_18
0x5d2c	            0x7415	                            je 0x4005d83	      2063	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_15	IF_16	CALL_18
0x5d2e	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2059	mark.c	FUNCTION_45	WHILE_1	ELSE_1	CALL_16
0x5d32	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2059	mark.c	FUNCTION_45	WHILE_1	ELSE_1	CALL_16
0x5d36	        0x488945a0	             mov qword [rbp - 0x60], rax	      2059	mark.c	FUNCTION_45	WHILE_1	ELSE_1	CALL_16
0x5d3a	      0x48837da000	               cmp qword [rbp - 0x60], 0	      2059	mark.c	FUNCTION_45	WHILE_1	ELSE_1	CALL_16
0x5d3f	            0x759f	                           jne 0x4005d20	      2059	mark.c	FUNCTION_45	WHILE_1	ELSE_1	CALL_16
0x5d41	            0xeb01	                           jmp 0x4005d84	      2059	mark.c	FUNCTION_45	WHILE_1	ELSE_1	CALL_16
0x5d43	              0x90	                                     nop	      2064	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_15	IF_16
0x5d44	      0x48837da000	               cmp qword [rbp - 0x60], 0	      2070	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17
0x5d49	            0x7412	                            je 0x4005d9d	      2070	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17
0x5d4b	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      2070	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17
0x5d4f	    0x8b8000120000	          mov eax, dword [rax + 0x1200] 	      2070	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17
0x5d55	            0x85c0	                           test eax, eax	      2070	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17
0x5d57	     0xf85cd010000	                           jne 0x4005f6a	      2070	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17
0x5d5d	    0xc7458c000000	               mov dword [rbp - 0x74], 0	      2072	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17
0x5d64	      0x48837db800	               cmp qword [rbp - 0x48], 0	      2074	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18
0x5d69	     0xf8460010000	                            je 0x4005f0f	      2074	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18
0x5d6f	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2079	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x5d76	          0x4889c7	                            mov rdi, rax	      2079	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x5d79	      0xe800000000	                          call 0x4005dbe	      2079	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x5d7e	    0x898554ffffff	             mov dword [rbp - 0xac], eax	      2079	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x5d84	    0x83bd54ffffff	               cmp dword [rbp - 0xac], 0	      2079	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x5d8b	     0xf853e010000	                           jne 0x4005f0f	      2079	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x5d91	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2079	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x5d95	           0xfb600	                   movzx eax, byte [rax]	      2079	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x5d98	            0x3c09	                               cmp al, 9	      2079	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x5d9a	     0xf852f010000	                           jne 0x4005f0f	      2079	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x5da0	    0xc7458c010000	               mov dword [rbp - 0x74], 1	      2081	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19
0x5da7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2082	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20
0x5dab	        0x4883c001	                              add rax, 1	      2082	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20
0x5daf	           0xfb600	                   movzx eax, byte [rax]	      2082	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20
0x5db2	            0x3c2a	                            cmp al, 0x2a	      2082	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20
0x5db4	     0xf85db000000	                           jne 0x4005ed5	      2082	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20
0x5dba	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2086	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	CALL_20
0x5dbe	        0x488d4802	                      lea rcx, [rax + 2]	      2086	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	CALL_20
0x5dc2	        0x488d4598	                   lea rax, [rbp - 0x68]	      2086	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	CALL_20
0x5dc6	          0x4889c2	                            mov rdx, rax	      2086	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	CALL_20
0x5dc9	      0xbe00000000	                              mov esi, 0	      2086	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	CALL_20
0x5dce	          0x4889cf	                            mov rdi, rcx	      2086	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	CALL_20
0x5dd1	      0xb800000000	                              mov eax, 0	      2086	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	CALL_20
0x5dd6	      0xe800000000	                          call 0x4005e1b	      2086	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	CALL_20
0x5ddb	            0xeb64	                           jmp 0x4005e81	      2087	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x5ddd	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      2089	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3	CALL_21
0x5de4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2089	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3	CALL_21
0x5de8	          0x4889d6	                            mov rsi, rdx	      2089	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3	CALL_21
0x5deb	          0x4889c7	                            mov rdi, rax	      2089	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3	CALL_21
0x5dee	      0xe83af7ffff	             call sym.write_buffer_marks	      2089	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3	CALL_21
0x5df3	        0x83458401	               add dword [rbp - 0x7c], 1	      2090	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3	IF_21
0x5df7	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      2090	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3	IF_21
0x5dfa	          0x3b4590	             cmp eax, dword [rbp - 0x70]	      2090	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3	IF_21
0x5dfd	     0xf8db2000000	                           jge 0x4005ef5	      2090	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3	IF_21
0x5e03	        0x83458801	               add dword [rbp - 0x78], 1	      2092	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3	IF_22
0x5e07	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2092	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3	IF_22
0x5e0e	            0x8b00	                    mov eax, dword [rax]	      2092	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3	IF_22
0x5e10	          0x394588	            cmp dword [rbp - 0x78], eax 	      2092	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3	IF_22
0x5e13	            0x750d	                           jne 0x4005e62	      2092	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3	IF_22
0x5e15	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      2094	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3	IF_22
0x5e1d	      0xe994000000	                           jmp 0x4005ef6	      2095	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3	IF_22
0x5e22	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2098	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x5e29	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2098	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x5e2d	          0x8b5588	             mov edx, dword [rbp - 0x78]	      2098	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x5e30	          0x4863d2	                         movsxd rdx, edx	      2098	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x5e33	        0x48c1e203	                              shl rdx, 3	      2098	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x5e37	          0x4801d0	                            add rax, rdx	      2098	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x5e3a	          0x488b00	                    mov rax, qword [rax]	      2097	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x5e3d	        0x488945b8	             mov qword [rbp - 0x48], rax	      2097	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x5e41	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2087	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x5e45	    0x488b90400100	           mov rdx, qword [rax + 0x140] 	      2087	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x5e4c	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2087	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x5e50	          0x4839c2	                            cmp rdx, rax	      2087	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x5e53	            0x7f88	                            jg 0x4005e1d	      2087	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x5e55	            0xeb5f	                           jmp 0x4005ef6	      2087	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3
0x5e57	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2109	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x5e5e	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      2109	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x5e62	          0x8b4588	             mov eax, dword [rbp - 0x78]	      2110	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x5e65	          0x8d5001	                      lea edx, [rax + 1]	      2110	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x5e68	          0x895588	             mov dword [rbp - 0x78], edx	      2110	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x5e6b	            0x4898	                                    cdqe	      2110	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x5e6d	        0x48c1e003	                              shl rax, 3	      2110	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x5e71	          0x4801c8	                            add rax, rcx	      2110	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x5e74	          0x488b00	                    mov rax, qword [rax]	      2109	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x5e77	        0x488945b8	             mov qword [rbp - 0x48], rax	      2109	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x5e7b	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      2111	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4	CALL_22
0x5e82	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2111	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4	CALL_22
0x5e86	          0x4889d6	                            mov rsi, rdx	      2111	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4	CALL_22
0x5e89	          0x4889c7	                            mov rdi, rax	      2111	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4	CALL_22
0x5e8c	      0xe89cf6ffff	             call sym.write_buffer_marks	      2111	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4	CALL_22
0x5e91	        0x83458401	               add dword [rbp - 0x7c], 1	      2112	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x5e95	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      2106	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x5e98	          0x3b4590	             cmp eax, dword [rbp - 0x70]	      2106	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x5e9b	            0x7d0e	                           jge 0x4005eeb	      2106	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x5e9d	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2107	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x5ea4	            0x8b00	                    mov eax, dword [rax]	      2107	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x5ea6	          0x3b4588	             cmp eax, dword [rbp - 0x78]	      2107	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x5ea9	            0x7fac	                            jg 0x4005e97	      2107	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2	WHILE_4
0x5eab	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      2114	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2
0x5eb3	            0xeb01	                           jmp 0x4005ef6	      2114	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	ELSE_2
0x5eb5	              0x90	                                     nop	      2091	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_20	WHILE_3	IF_21
0x5eb6	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      2117	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_23
0x5eb9	          0x3b4590	             cmp eax, dword [rbp - 0x70]	      2117	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_23
0x5ebc	            0x7c11	                            jl 0x4005f0f	      2117	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_23
0x5ebe	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2119	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_23	CALL_23
0x5ec2	          0x4889c7	                            mov rdi, rax	      2119	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_23	CALL_23
0x5ec5	      0xe800000000	                          call 0x4005f0a	      2119	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_23	CALL_23
0x5eca	      0xe915030000	                           jmp 0x4006224	      2120	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_18	IF_19	IF_23
0x5ecf	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2125	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_24
0x5ed6	          0x4889c1	                            mov rcx, rax	      2125	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_24
0x5ed9	      0xba03000000	                              mov edx, 3	      2125	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_24
0x5ede	      0xbe01000000	                              mov esi, 1	      2125	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_24
0x5ee3	      0xbf00000000	                              mov edi, 0	      2125	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_24
0x5ee8	      0xe800000000	                          call 0x4005f2d	      2125	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_24
0x5eed	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2126	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_25
0x5ef1	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2126	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_25
0x5ef8	          0x4889d6	                            mov rsi, rdx	      2126	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_25
0x5efb	          0x4889c7	                            mov rdi, rax	      2126	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_25
0x5efe	      0xe800000000	                          call 0x4005f43	      2126	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_25
0x5f03	        0x837d8c00	               cmp dword [rbp - 0x74], 0	      2127	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_24
0x5f07	            0x7416	                            je 0x4005f5f	      2127	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	IF_24
0x5f09	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      2128	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_26
0x5f10	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2128	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_26
0x5f14	          0x4889d6	                            mov rsi, rdx	      2128	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_26
0x5f17	          0x4889c7	                            mov rdi, rax	      2128	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_26
0x5f1a	      0xe800000000	                          call 0x4005f5f	      2128	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17	CALL_26
0x5f1f	        0x83458401	               add dword [rbp - 0x7c], 1	      2130	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17
0x5f23	    0xc74580010000	               mov dword [rbp - 0x80], 1	      2131	mark.c	FUNCTION_45	WHILE_1	ELSE_1	IF_17
0x5f2a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      2134	mark.c	FUNCTION_45	WHILE_1	CALL_27
0x5f2e	          0x4889c7	                            mov rdi, rax	      2134	mark.c	FUNCTION_45	WHILE_1	CALL_27
0x5f31	      0xe800000000	                          call 0x4005f76	      2134	mark.c	FUNCTION_45	WHILE_1	CALL_27
0x5f36	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      2137	mark.c	FUNCTION_45	WHILE_1
0x5f3d	      0xe9f9010000	                           jmp 0x400617b	      2139	mark.c	FUNCTION_45	WHILE_1	WHILE_5	CALL_28
0x5f42	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      2141	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25
0x5f49	     0xf84d0010000	                            je 0x400615f	      2141	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25
0x5f4f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2143	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26
0x5f53	        0x4883c001	                              add rax, 1	      2143	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26
0x5f57	           0xfb600	                   movzx eax, byte [rax]	      2143	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26
0x5f5a	            0x84c0	                             test al, al	      2143	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26
0x5f5c	     0xf84d9010000	                            je 0x400617b	      2143	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26
0x5f62	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2147	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	CALL_29
0x5f66	        0x488d7802	                      lea rdi, [rax + 2]	      2147	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	CALL_29
0x5f6a	        0x488d5598	                   lea rdx, [rbp - 0x68]	      2147	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	CALL_29
0x5f6e	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2147	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	CALL_29
0x5f72	          0x4889d1	                            mov rcx, rdx	      2147	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	CALL_29
0x5f75	          0x4889c2	                            mov rdx, rax	      2147	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	CALL_29
0x5f78	      0xbe00000000	                              mov esi, 0	      2147	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	CALL_29
0x5f7d	      0xb800000000	                              mov eax, 0	      2147	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	CALL_29
0x5f82	      0xe800000000	                          call 0x4005fc7	      2147	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	CALL_29
0x5f87	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2148	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26
0x5f8a	          0x8945e8	             mov dword [rbp - 0x18], eax	      2148	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26
0x5f8d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2149	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x5f91	        0x4883c001	                              add rax, 1	      2149	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x5f95	           0xfb600	                   movzx eax, byte [rax]	      2149	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x5f98	           0xfb6c0	                           movzx eax, al	      2149	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x5f9b	          0x83f82b	                           cmp eax, 0x2b	      2149	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x5f9e	     0xf848d000000	                            je 0x4006071	      2149	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x5fa4	          0x83f82b	                           cmp eax, 0x2b	      2149	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x5fa7	            0x7f13	                            jg 0x4005ffc	      2149	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x5fa9	          0x83f822	                           cmp eax, 0x22	      2149	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x5fac	            0x741d	                            je 0x400600b	      2149	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x5fae	          0x83f82a	                           cmp eax, 0x2a	      2149	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x5fb1	     0xf8409010000	                            je 0x4006100	      2149	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x5fb7	      0xe918010000	                           jmp 0x4006114	      2149	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x5fbc	          0x83f82e	                           cmp eax, 0x2e	      2149	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x5fbf	            0x744e	                            je 0x400604f	      2149	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x5fc1	          0x83f85e	                           cmp eax, 0x5e	      2149	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x5fc4	            0x7427	                            je 0x400602d	      2149	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x5fc6	      0xe909010000	                           jmp 0x4006114	      2149	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x5fcb	    0x488b0d000000	            mov rcx, qword [0x04006012] 	      2151	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x5fd2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2151	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x5fd6	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2151	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x5fda	    0x488981180300	            mov qword [rcx + 0x318], rax	      2151	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x5fe1	    0x488991200300	            mov qword [rcx + 0x320], rdx	      2151	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x5fe8	      0xe94e010000	                           jmp 0x400617b	      2151	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x5fed	    0x488b0d000000	            mov rcx, qword [0x04006034] 	      2152	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x5ff4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2152	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x5ff8	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2152	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x5ffc	    0x488981280300	            mov qword [rcx + 0x328], rax	      2152	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x6003	    0x488991300300	            mov qword [rcx + 0x330], rdx	      2152	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x600a	      0xe92c010000	                           jmp 0x400617b	      2152	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x600f	    0x488b0d000000	            mov rcx, qword [0x04006056] 	      2153	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x6016	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2153	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x601a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2153	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x601e	    0x488981380300	            mov qword [rcx + 0x338], rax	      2153	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x6025	    0x488991400300	            mov qword [rcx + 0x340], rdx	      2153	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x602c	      0xe90a010000	                           jmp 0x400617b	      2153	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x6031	    0x488b05000000	            mov rax, qword [0x04006078] 	      2158	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_27
0x6038	    0x8b8088090000	           mov eax, dword [rax + 0x988] 	      2158	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_27
0x603e	          0x83f864	                           cmp eax, 0x64	      2158	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_27
0x6041	            0x7530	                           jne 0x40060b3	      2158	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_27
0x6043	    0x488b05000000	            mov rax, qword [0x0400608a] 	      2160	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_27	CALL_30
0x604a	    0x480548030000	                          add rax, 0x348	      2160	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_27	CALL_30
0x6050	        0x488d4810	                   lea rcx, [rax + 0x10]	      2160	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_27	CALL_30
0x6054	    0x488b05000000	            mov rax, qword [0x0400609b] 	      2160	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_27	CALL_30
0x605b	    0x480548030000	                          add rax, 0x348	      2160	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_27	CALL_30
0x6061	      0xba30060000	                          mov edx, 0x630	      2160	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_27	CALL_30
0x6066	          0x4889ce	                            mov rsi, rcx	      2160	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_27	CALL_30
0x6069	          0x4889c7	                            mov rdi, rax	      2160	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_27	CALL_30
0x606c	      0xe800000000	                          call 0x40060b1	      2160	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_27	CALL_30
0x6071	            0xeb16	                           jmp 0x40060c9	      2160	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_27	CALL_30
0x6073	    0x488b05000000	            mov rax, qword [0x040060ba] 	      2164	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	ELSE_3
0x607a	    0x8b9088090000	           mov edx, dword [rax + 0x988] 	      2164	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	ELSE_3
0x6080	          0x83c201	                              add edx, 1	      2164	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	ELSE_3
0x6083	    0x899088090000	            mov dword [rax + 0x988], edx	      2164	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	ELSE_3
0x6089	    0x488b15000000	            mov rdx, qword [0x040060d0] 	      2165	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x6090	    0x488b05000000	            mov rax, qword [0x040060d7] 	      2166	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x6097	    0x8b8088090000	           mov eax, dword [rax + 0x988] 	      2166	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x609d	          0x83e801	                              sub eax, 1	      2166	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x60a0	            0x4898	                                    cdqe	      2166	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x60a2	        0x4883c034	                           add rax, 0x34	      2166	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x60a6	        0x48c1e004	                              shl rax, 4	      2166	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x60aa	        0x488d0c02	                    lea rcx, [rdx + rax]	      2166	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x60ae	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2166	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x60b2	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2166	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x60b6	        0x48894108	                mov qword [rcx + 8], rax	      2166	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x60ba	        0x48895110	             mov qword [rcx + 0x10], rdx	      2166	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x60be	            0xeb7b	                           jmp 0x400617b	      2168	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x60c0	    0x488b05000000	            mov rax, qword [0x04006107] 	      2172	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x60c7	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2172	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x60cb	    0x488990400100	            mov qword [rax + 0x140], rdx	      2172	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x60d2	            0xeb67	                           jmp 0x400617b	      2172	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1
0x60d4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2174	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_28
0x60d8	        0x4883c001	                              add rax, 1	      2174	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_28
0x60dc	           0xfb600	                   movzx eax, byte [rax]	      2174	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_28
0x60df	           0xfb6c0	                           movzx eax, al	      2174	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_28
0x60e2	          0x83e861	                           sub eax, 0x61	      2174	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_28
0x60e5	          0x894594	             mov dword [rbp - 0x6c], eax	      2174	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_28
0x60e8	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      2174	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_28
0x60ec	            0x784d	                            js 0x400617b	      2174	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_28
0x60ee	        0x837d9419	           cmp dword [rbp - 0x6c], 0x19 	      2174	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_28
0x60f2	            0x7f47	                            jg 0x400617b	      2174	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_28
0x60f4	    0x488b05000000	            mov rax, qword [0x0400613b] 	      2175	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_28
0x60fb	          0x8b5594	             mov edx, dword [rbp - 0x6c]	      2175	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_28
0x60fe	          0x4863d2	                         movsxd rdx, edx	      2175	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_28
0x6101	        0x4883c214	                           add rdx, 0x14	      2175	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_28
0x6105	        0x48c1e204	                              shl rdx, 4	      2175	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_28
0x6109	        0x488d0c10	                    lea rcx, [rax + rdx]	      2175	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_28
0x610d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2175	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_28
0x6111	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2175	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_28
0x6115	        0x48894108	                mov qword [rcx + 8], rax	      2175	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_28
0x6119	        0x48895110	             mov qword [rcx + 0x10], rdx	      2175	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_28
0x611d	            0xeb1c	                           jmp 0x400617b	      2175	mark.c	FUNCTION_45	WHILE_1	WHILE_5	IF_25	IF_26	SWITCH_1	IF_28
0x611f	        0x837d8000	               cmp dword [rbp - 0x80], 0	      2179	mark.c	FUNCTION_45	WHILE_1	WHILE_5	ELSE_4	IF_29
0x6123	            0x7416	                            je 0x400617b	      2179	mark.c	FUNCTION_45	WHILE_1	WHILE_5	ELSE_4	IF_29
0x6125	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      2180	mark.c	FUNCTION_45	WHILE_1	WHILE_5	ELSE_4	IF_29
0x612c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2180	mark.c	FUNCTION_45	WHILE_1	WHILE_5	ELSE_4	IF_29
0x6130	          0x4889d6	                            mov rsi, rdx	      2180	mark.c	FUNCTION_45	WHILE_1	WHILE_5	ELSE_4	IF_29
0x6133	          0x4889c7	                            mov rdi, rax	      2180	mark.c	FUNCTION_45	WHILE_1	WHILE_5	ELSE_4	IF_29
0x6136	      0xe800000000	                          call 0x400617b	      2180	mark.c	FUNCTION_45	WHILE_1	WHILE_5	ELSE_4	IF_29
0x613b	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2139	mark.c	FUNCTION_45	WHILE_1	WHILE_5	CALL_28
0x6142	          0x4889c7	                            mov rdi, rax	      2139	mark.c	FUNCTION_45	WHILE_1	WHILE_5	CALL_28
0x6145	      0xe800000000	                          call 0x400618a	      2139	mark.c	FUNCTION_45	WHILE_1	WHILE_5	CALL_28
0x614a	    0x898554ffffff	             mov dword [rbp - 0xac], eax	      2139	mark.c	FUNCTION_45	WHILE_1	WHILE_5	CALL_28
0x6150	    0x83bd54ffffff	               cmp dword [rbp - 0xac], 0	      2139	mark.c	FUNCTION_45	WHILE_1	WHILE_5	CALL_28
0x6157	            0x750f	                           jne 0x40061a8	      2139	mark.c	FUNCTION_45	WHILE_1	WHILE_5	CALL_28
0x6159	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2139	mark.c	FUNCTION_45	WHILE_1	WHILE_5	CALL_28
0x615d	           0xfb600	                   movzx eax, byte [rax]	      2139	mark.c	FUNCTION_45	WHILE_1	WHILE_5	CALL_28
0x6160	            0x3c09	                               cmp al, 9	      2139	mark.c	FUNCTION_45	WHILE_1	WHILE_5	CALL_28
0x6162	     0xf84dafdffff	                            je 0x4005f82	      2139	mark.c	FUNCTION_45	WHILE_1	WHILE_5	CALL_28
0x6168	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      2183	mark.c	FUNCTION_45	WHILE_1	IF_30
0x616f	            0x744d	                            je 0x40061fe	      2183	mark.c	FUNCTION_45	WHILE_1	IF_30
0x6171	    0x488b05000000	            mov rax, qword [0x040061b8] 	      2188	mark.c	FUNCTION_45	WHILE_1	IF_30
0x6178	        0x488945c0	             mov qword [rbp - 0x40], rax	      2188	mark.c	FUNCTION_45	WHILE_1	IF_30
0x617c	            0xeb37	                           jmp 0x40061f5	      2188	mark.c	FUNCTION_45	WHILE_1	IF_30
0x617e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2190	mark.c	FUNCTION_45	WHILE_1	IF_30	FUNCTION_1	IF_1
0x6182	        0x488b5008	                mov rdx, qword [rax + 8]	      2190	mark.c	FUNCTION_45	WHILE_1	IF_30	FUNCTION_1	IF_1
0x6186	    0x488b05000000	            mov rax, qword [0x040061cd] 	      2190	mark.c	FUNCTION_45	WHILE_1	IF_30	FUNCTION_1	IF_1
0x618d	          0x4839c2	                            cmp rdx, rax	      2190	mark.c	FUNCTION_45	WHILE_1	IF_30	FUNCTION_1	IF_1
0x6190	            0x7517	                           jne 0x40061e9	      2190	mark.c	FUNCTION_45	WHILE_1	IF_30	FUNCTION_1	IF_1
0x6192	    0x488b05000000	            mov rax, qword [0x040061d9] 	      2191	mark.c	FUNCTION_45	WHILE_1	IF_30	FUNCTION_1	IF_1
0x6199	    0x8b9088090000	           mov edx, dword [rax + 0x988] 	      2191	mark.c	FUNCTION_45	WHILE_1	IF_30	FUNCTION_1	IF_1
0x619f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2191	mark.c	FUNCTION_45	WHILE_1	IF_30	FUNCTION_1	IF_1
0x61a3	    0x899048150000	          mov dword [rax + 0x1548], edx 	      2191	mark.c	FUNCTION_45	WHILE_1	IF_30	FUNCTION_1	IF_1
0x61a9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2188	mark.c	FUNCTION_45	WHILE_1	IF_30
0x61ad	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2188	mark.c	FUNCTION_45	WHILE_1	IF_30
0x61b1	        0x488945c0	             mov qword [rbp - 0x40], rax	      2188	mark.c	FUNCTION_45	WHILE_1	IF_30
0x61b5	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      2188	mark.c	FUNCTION_45	WHILE_1	IF_30
0x61ba	            0x75c2	                           jne 0x40061be	      2188	mark.c	FUNCTION_45	WHILE_1	IF_30
0x61bc	            0xeb26	                           jmp 0x4006224	      2194	mark.c	FUNCTION_45	WHILE_1	IF_30
0x61be	    0x83bd54ffffff	               cmp dword [rbp - 0xac], 0	      2007	mark.c	FUNCTION_45	WHILE_1
0x61c5	            0x751d	                           jne 0x4006224	      2007	mark.c	FUNCTION_45	WHILE_1
0x61c7	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      2007	mark.c	FUNCTION_45	WHILE_1
0x61ca	          0x3b4590	             cmp eax, dword [rbp - 0x70]	      2007	mark.c	FUNCTION_45	WHILE_1
0x61cd	     0xf8c0ef9ffff	                            jl 0x4005b21	      2007	mark.c	FUNCTION_45	WHILE_1
0x61d3	    0x4883bd60ffff	               cmp qword [rbp - 0xa0], 0	      2007	mark.c	FUNCTION_45	WHILE_1
0x61db	     0xf8400f9ffff	                            je 0x4005b21	      2007	mark.c	FUNCTION_45	WHILE_1
0x61e1	            0xeb01	                           jmp 0x4006224	      2007	mark.c	FUNCTION_45	WHILE_1
0x61e3	              0x90	                                     nop	      2014	mark.c	FUNCTION_45	WHILE_1	IF_5	IF_6	IF_7
0x61e4	    0x4883bd60ffff	               cmp qword [rbp - 0xa0], 0	      2198	mark.c	FUNCTION_45	IF_31
0x61ec	            0x7456	                            je 0x4006284	      2198	mark.c	FUNCTION_45	IF_31
0x61ee	            0xeb3e	                           jmp 0x400626e	      2200	mark.c	FUNCTION_45	IF_31	WHILE_6
0x61f0	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2202	mark.c	FUNCTION_45	IF_31	WHILE_6
0x61f7	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      2202	mark.c	FUNCTION_45	IF_31	WHILE_6
0x61fb	          0x8b4588	             mov eax, dword [rbp - 0x78]	      2202	mark.c	FUNCTION_45	IF_31	WHILE_6
0x61fe	          0x8d5001	                      lea edx, [rax + 1]	      2202	mark.c	FUNCTION_45	IF_31	WHILE_6
0x6201	          0x895588	             mov dword [rbp - 0x78], edx	      2202	mark.c	FUNCTION_45	IF_31	WHILE_6
0x6204	            0x4898	                                    cdqe	      2202	mark.c	FUNCTION_45	IF_31	WHILE_6
0x6206	        0x48c1e003	                              shl rax, 3	      2202	mark.c	FUNCTION_45	IF_31	WHILE_6
0x620a	          0x4801c8	                            add rax, rcx	      2202	mark.c	FUNCTION_45	IF_31	WHILE_6
0x620d	          0x488b00	                    mov rax, qword [rax]	      2202	mark.c	FUNCTION_45	IF_31	WHILE_6
0x6210	        0x488945b8	             mov qword [rbp - 0x48], rax	      2202	mark.c	FUNCTION_45	IF_31	WHILE_6
0x6214	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      2203	mark.c	FUNCTION_45	IF_31	WHILE_6	CALL_32
0x621b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      2203	mark.c	FUNCTION_45	IF_31	WHILE_6	CALL_32
0x621f	          0x4889d6	                            mov rsi, rdx	      2203	mark.c	FUNCTION_45	IF_31	WHILE_6	CALL_32
0x6222	          0x4889c7	                            mov rdi, rax	      2203	mark.c	FUNCTION_45	IF_31	WHILE_6	CALL_32
0x6225	      0xe803f3ffff	             call sym.write_buffer_marks	      2203	mark.c	FUNCTION_45	IF_31	WHILE_6	CALL_32
0x622a	        0x83458401	               add dword [rbp - 0x7c], 1	      2204	mark.c	FUNCTION_45	IF_31	WHILE_6
0x622e	          0x8b4584	             mov eax, dword [rbp - 0x7c]	      2200	mark.c	FUNCTION_45	IF_31	WHILE_6
0x6231	          0x3b4590	             cmp eax, dword [rbp - 0x70]	      2200	mark.c	FUNCTION_45	IF_31	WHILE_6
0x6234	            0x7d0e	                           jge 0x4006284	      2200	mark.c	FUNCTION_45	IF_31	WHILE_6
0x6236	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2200	mark.c	FUNCTION_45	IF_31	WHILE_6
0x623d	            0x8b00	                    mov eax, dword [rax]	      2200	mark.c	FUNCTION_45	IF_31	WHILE_6
0x623f	          0x3b4588	             cmp eax, dword [rbp - 0x78]	      2200	mark.c	FUNCTION_45	IF_31	WHILE_6
0x6242	            0x7fac	                            jg 0x4006230	      2200	mark.c	FUNCTION_45	IF_31	WHILE_6
0x6244	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2207	mark.c	FUNCTION_45	CALL_33
0x6248	          0x4889c7	                            mov rdi, rax	      2207	mark.c	FUNCTION_45	CALL_33
0x624b	      0xe800000000	                          call 0x4006290	      2207	mark.c	FUNCTION_45	CALL_33
0x6250	            0xeb01	                           jmp 0x4006293	      2207	mark.c	FUNCTION_45	CALL_33
0x6252	              0x90	                                     nop	      1986	mark.c	FUNCTION_45	IF_1
0x6253	        0x488b45f8	                mov rax, qword [rbp - 8]	      2208	mark.c	FUNCTION_45
0x6257	    0x644833042528	                xor rax, qword fs:[0x28]	      2208	mark.c	FUNCTION_45
0x6260	            0x7405	                            je 0x40062a7	      2208	mark.c	FUNCTION_45
0x6262	      0xe800000000	                          call 0x40062a7	      2208	mark.c	FUNCTION_45
0x6267	              0xc9	                                   leave	      2208	mark.c	FUNCTION_45
0x6268	              0xc3	                                     ret	      2208	mark.c	FUNCTION_45
setmark	DO,0:functions,0:IF,0:SWITCH,0:CALL,1:ELSE,0:WHILE,0:FOR,0	14
0x0	              0x55	                                push rbp	        49	mark.c	FUNCTION_1
0x1	          0x4889e5	                            mov rbp, rsp	        49	mark.c	FUNCTION_1
0x4	        0x4883ec10	                           sub rsp, 0x10	        49	mark.c	FUNCTION_1
0x8	          0x897dfc	                mov dword [rbp - 4], edi	        49	mark.c	FUNCTION_1
0xb	    0x488b05000000	            mov rax, qword [0x04000052] 	        50	mark.c	FUNCTION_1	CALL_1
0x12	    0x8b90b8000000	            mov edx, dword [rax + 0xb8] 	        50	mark.c	FUNCTION_1	CALL_1
0x18	    0x488b05000000	            mov rax, qword [0x0400005f] 	        50	mark.c	FUNCTION_1	CALL_1
0x1f	        0x488d4838	                   lea rcx, [rax + 0x38]	        50	mark.c	FUNCTION_1	CALL_1
0x23	          0x8b45fc	                mov eax, dword [rbp - 4]	        50	mark.c	FUNCTION_1	CALL_1
0x26	          0x4889ce	                            mov rsi, rcx	        50	mark.c	FUNCTION_1	CALL_1
0x29	            0x89c7	                            mov edi, eax	        50	mark.c	FUNCTION_1	CALL_1
0x2b	      0xe800000000	                          call 0x4000070	        50	mark.c	FUNCTION_1	CALL_1
0x30	              0xc9	                                   leave	        51	mark.c	FUNCTION_1
0x31	              0xc3	                                     ret	        51	mark.c	FUNCTION_1
copy_jumplist	DO,0:functions,0:IF,1:SWITCH,0:CALL,1:ELSE,0:WHILE,0:FOR,1	86
0x4009	              0x55	                                push rbp	      1346	mark.c	FUNCTION_29
0x400a	          0x4889e5	                            mov rbp, rsp	      1346	mark.c	FUNCTION_29
0x400d	        0x4883ec20	                           sub rsp, 0x20	      1346	mark.c	FUNCTION_29
0x4011	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1346	mark.c	FUNCTION_29
0x4015	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1346	mark.c	FUNCTION_29
0x4019	    0xc745fc000000	                  mov dword [rbp - 4], 0	      1349	mark.c	FUNCTION_29	FOR_1
0x4020	      0xe9e9000000	                           jmp 0x400414e	      1349	mark.c	FUNCTION_29	FOR_1
0x4025	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1351	mark.c	FUNCTION_29	FOR_1
0x4029	          0x8b45fc	                mov eax, dword [rbp - 4]	      1351	mark.c	FUNCTION_29	FOR_1
0x402c	          0x4863d0	                         movsxd rdx, eax	      1351	mark.c	FUNCTION_29	FOR_1
0x402f	          0x4889d0	                            mov rax, rdx	      1351	mark.c	FUNCTION_29	FOR_1
0x4032	        0x48c1e002	                              shl rax, 2	      1351	mark.c	FUNCTION_29	FOR_1
0x4036	          0x4801d0	                            add rax, rdx	      1351	mark.c	FUNCTION_29	FOR_1
0x4039	        0x48c1e003	                              shl rax, 3	      1351	mark.c	FUNCTION_29	FOR_1
0x403d	          0x4801c8	                            add rax, rcx	      1351	mark.c	FUNCTION_29	FOR_1
0x4040	    0x488d90a00500	                  lea rdx, [rax + 0x5a0]	      1351	mark.c	FUNCTION_29	FOR_1
0x4047	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	      1351	mark.c	FUNCTION_29	FOR_1
0x404b	          0x8b45fc	                mov eax, dword [rbp - 4]	      1351	mark.c	FUNCTION_29	FOR_1
0x404e	          0x4863c8	                         movsxd rcx, eax	      1351	mark.c	FUNCTION_29	FOR_1
0x4051	          0x4889c8	                            mov rax, rcx	      1351	mark.c	FUNCTION_29	FOR_1
0x4054	        0x48c1e002	                              shl rax, 2	      1351	mark.c	FUNCTION_29	FOR_1
0x4058	          0x4801c8	                            add rax, rcx	      1351	mark.c	FUNCTION_29	FOR_1
0x405b	        0x48c1e003	                              shl rax, 3	      1351	mark.c	FUNCTION_29	FOR_1
0x405f	          0x4801f0	                            add rax, rsi	      1351	mark.c	FUNCTION_29	FOR_1
0x4062	    0x4805a0050000	                          add rax, 0x5a0	      1351	mark.c	FUNCTION_29	FOR_1
0x4068	          0x488b08	                    mov rcx, qword [rax]	      1351	mark.c	FUNCTION_29	FOR_1
0x406b	          0x48890a	                    mov qword [rdx], rcx	      1351	mark.c	FUNCTION_29	FOR_1
0x406e	        0x488b4808	                mov rcx, qword [rax + 8]	      1351	mark.c	FUNCTION_29	FOR_1
0x4072	        0x48894a08	                mov qword [rdx + 8], rcx	      1351	mark.c	FUNCTION_29	FOR_1
0x4076	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      1351	mark.c	FUNCTION_29	FOR_1
0x407a	        0x48894a10	             mov qword [rdx + 0x10], rcx	      1351	mark.c	FUNCTION_29	FOR_1
0x407e	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      1351	mark.c	FUNCTION_29	FOR_1
0x4082	        0x48894a18	             mov qword [rdx + 0x18], rcx	      1351	mark.c	FUNCTION_29	FOR_1
0x4086	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1351	mark.c	FUNCTION_29	FOR_1
0x408a	        0x48894220	             mov qword [rdx + 0x20], rax	      1351	mark.c	FUNCTION_29	FOR_1
0x408e	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1352	mark.c	FUNCTION_29	FOR_1	IF_1
0x4092	          0x8b45fc	                mov eax, dword [rbp - 4]	      1352	mark.c	FUNCTION_29	FOR_1	IF_1
0x4095	          0x4863d0	                         movsxd rdx, eax	      1352	mark.c	FUNCTION_29	FOR_1	IF_1
0x4098	          0x4889d0	                            mov rax, rdx	      1352	mark.c	FUNCTION_29	FOR_1	IF_1
0x409b	        0x48c1e002	                              shl rax, 2	      1352	mark.c	FUNCTION_29	FOR_1	IF_1
0x409f	          0x4801d0	                            add rax, rdx	      1352	mark.c	FUNCTION_29	FOR_1	IF_1
0x40a2	        0x48c1e003	                              shl rax, 3	      1352	mark.c	FUNCTION_29	FOR_1	IF_1
0x40a6	          0x4801c8	                            add rax, rcx	      1352	mark.c	FUNCTION_29	FOR_1	IF_1
0x40a9	    0x4805b8050000	                          add rax, 0x5b8	      1352	mark.c	FUNCTION_29	FOR_1	IF_1
0x40af	          0x488b00	                    mov rax, qword [rax]	      1352	mark.c	FUNCTION_29	FOR_1	IF_1
0x40b2	          0x4885c0	                           test rax, rax	      1352	mark.c	FUNCTION_29	FOR_1	IF_1
0x40b5	            0x7453	                            je 0x400414a	      1352	mark.c	FUNCTION_29	FOR_1	IF_1
0x40b7	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1353	mark.c	FUNCTION_29	FOR_1	CALL_1
0x40bb	          0x8b45fc	                mov eax, dword [rbp - 4]	      1353	mark.c	FUNCTION_29	FOR_1	CALL_1
0x40be	          0x4863d0	                         movsxd rdx, eax	      1353	mark.c	FUNCTION_29	FOR_1	CALL_1
0x40c1	          0x4889d0	                            mov rax, rdx	      1353	mark.c	FUNCTION_29	FOR_1	CALL_1
0x40c4	        0x48c1e002	                              shl rax, 2	      1353	mark.c	FUNCTION_29	FOR_1	CALL_1
0x40c8	          0x4801d0	                            add rax, rdx	      1353	mark.c	FUNCTION_29	FOR_1	CALL_1
0x40cb	        0x48c1e003	                              shl rax, 3	      1353	mark.c	FUNCTION_29	FOR_1	CALL_1
0x40cf	          0x4801c8	                            add rax, rcx	      1353	mark.c	FUNCTION_29	FOR_1	CALL_1
0x40d2	    0x4805b8050000	                          add rax, 0x5b8	      1353	mark.c	FUNCTION_29	FOR_1	CALL_1
0x40d8	          0x488b00	                    mov rax, qword [rax]	      1353	mark.c	FUNCTION_29	FOR_1	CALL_1
0x40db	          0x4889c7	                            mov rdi, rax	      1353	mark.c	FUNCTION_29	FOR_1	CALL_1
0x40de	      0xe800000000	                          call 0x4004123	      1353	mark.c	FUNCTION_29	FOR_1	CALL_1
0x40e3	          0x4889c6	                            mov rsi, rax	      1353	mark.c	FUNCTION_29	FOR_1	CALL_1
0x40e6	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1353	mark.c	FUNCTION_29	FOR_1	CALL_1
0x40ea	          0x8b45fc	                mov eax, dword [rbp - 4]	      1353	mark.c	FUNCTION_29	FOR_1	CALL_1
0x40ed	          0x4863d0	                         movsxd rdx, eax	      1353	mark.c	FUNCTION_29	FOR_1	CALL_1
0x40f0	          0x4889d0	                            mov rax, rdx	      1353	mark.c	FUNCTION_29	FOR_1	CALL_1
0x40f3	        0x48c1e002	                              shl rax, 2	      1353	mark.c	FUNCTION_29	FOR_1	CALL_1
0x40f7	          0x4801d0	                            add rax, rdx	      1353	mark.c	FUNCTION_29	FOR_1	CALL_1
0x40fa	        0x48c1e003	                              shl rax, 3	      1353	mark.c	FUNCTION_29	FOR_1	CALL_1
0x40fe	          0x4801c8	                            add rax, rcx	      1353	mark.c	FUNCTION_29	FOR_1	CALL_1
0x4101	    0x4805b8050000	                          add rax, 0x5b8	      1353	mark.c	FUNCTION_29	FOR_1	CALL_1
0x4107	          0x488930	                    mov qword [rax], rsi	      1353	mark.c	FUNCTION_29	FOR_1	CALL_1
0x410a	        0x8345fc01	                  add dword [rbp - 4], 1	      1349	mark.c	FUNCTION_29	FOR_1
0x410e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1349	mark.c	FUNCTION_29	FOR_1
0x4112	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	      1349	mark.c	FUNCTION_29	FOR_1
0x4118	          0x3b45fc	                cmp eax, dword [rbp - 4]	      1349	mark.c	FUNCTION_29	FOR_1
0x411b	     0xf8f04ffffff	                            jg 0x4004065	      1349	mark.c	FUNCTION_29	FOR_1
0x4121	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1355	mark.c	FUNCTION_29
0x4125	    0x8b9040150000	          mov edx, dword [rax + 0x1540] 	      1355	mark.c	FUNCTION_29
0x412b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1355	mark.c	FUNCTION_29
0x412f	    0x899040150000	          mov dword [rax + 0x1540], edx 	      1355	mark.c	FUNCTION_29
0x4135	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1356	mark.c	FUNCTION_29
0x4139	    0x8b9044150000	          mov edx, dword [rax + 0x1544] 	      1356	mark.c	FUNCTION_29
0x413f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1356	mark.c	FUNCTION_29
0x4143	    0x899044150000	          mov dword [rax + 0x1544], edx 	      1356	mark.c	FUNCTION_29
0x4149	              0x90	                                     nop	      1357	mark.c	FUNCTION_29
0x414a	              0xc9	                                   leave	      1357	mark.c	FUNCTION_29
0x414b	              0xc3	                                     ret	      1357	mark.c	FUNCTION_29
getmark_buf_fnum	DO,0:functions,0:IF,24:SWITCH,0:CALL,9:ELSE,16:WHILE,0:FOR,0	358
0x8db	              0x55	                                push rbp	       339	mark.c	FUNCTION_9
0x8dc	          0x4889e5	                            mov rbp, rsp	       339	mark.c	FUNCTION_9
0x8df	    0x4881ece00000	                           sub rsp, 0xe0	       339	mark.c	FUNCTION_9
0x8e6	    0x4889bd38ffff	             mov qword [rbp - 0xc8], rdi	       339	mark.c	FUNCTION_9
0x8ed	    0x89b534ffffff	             mov dword [rbp - 0xcc], esi	       339	mark.c	FUNCTION_9
0x8f3	    0x899530ffffff	             mov dword [rbp - 0xd0], edx	       339	mark.c	FUNCTION_9
0x8f9	    0x48898d28ffff	             mov qword [rbp - 0xd8], rcx	       339	mark.c	FUNCTION_9
0x900	    0x64488b042528	                mov rax, qword fs:[0x28]	       339	mark.c	FUNCTION_9
0x909	        0x488945f8	                mov qword [rbp - 8], rax	       339	mark.c	FUNCTION_9
0x90d	            0x31c0	                            xor eax, eax	       339	mark.c	FUNCTION_9
0x90f	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	       344	mark.c	FUNCTION_9
0x91a	    0x83bd34ffffff	               cmp dword [rbp - 0xcc], 0	       348	mark.c	FUNCTION_9	IF_1
0x921	            0x790c	                           jns 0x400096f	       348	mark.c	FUNCTION_9	IF_1
0x923	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       349	mark.c	FUNCTION_9	IF_1
0x92a	      0xe96b060000	                           jmp 0x4000fda	       349	mark.c	FUNCTION_9	IF_1
0x92f	    0x83bd34ffffff	           cmp dword [rbp - 0xcc], 0x7e 	       351	mark.c	FUNCTION_9	IF_2
0x936	     0xf8f57060000	                            jg 0x4000fd3	       351	mark.c	FUNCTION_9	IF_2
0x93c	    0x83bd34ffffff	           cmp dword [rbp - 0xcc], 0x27 	       355	mark.c	FUNCTION_9	ELSE_1	IF_3
0x943	            0x7409	                            je 0x400098e	       355	mark.c	FUNCTION_9	ELSE_1	IF_3
0x945	    0x83bd34ffffff	           cmp dword [rbp - 0xcc], 0x60 	       355	mark.c	FUNCTION_9	ELSE_1	IF_3
0x94c	            0x7533	                           jne 0x40009c1	       355	mark.c	FUNCTION_9	ELSE_1	IF_3
0x94e	    0x488b05000000	            mov rax, qword [0x04000995] 	       357	mark.c	FUNCTION_9	ELSE_1	IF_3
0x955	    0x488b90880500	           mov rdx, qword [rax + 0x588] 	       357	mark.c	FUNCTION_9	ELSE_1	IF_3
0x95c	    0x488b80800500	           mov rax, qword [rax + 0x580] 	       357	mark.c	FUNCTION_9	ELSE_1	IF_3
0x963	    0x488905000000	            mov qword [0x040009aa], rax 	       357	mark.c	FUNCTION_9	ELSE_1	IF_3
0x96a	    0x488915000000	            mov qword [0x040009b1], rdx 	       357	mark.c	FUNCTION_9	ELSE_1	IF_3
0x971	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	       358	mark.c	FUNCTION_9	ELSE_1	IF_3
0x97c	      0xe912060000	                           jmp 0x4000fd3	       358	mark.c	FUNCTION_9	ELSE_1	IF_3
0x981	    0x83bd34ffffff	           cmp dword [rbp - 0xcc], 0x22 	       360	mark.c	FUNCTION_9	ELSE_2	IF_4
0x988	            0x7519	                           jne 0x40009e3	       360	mark.c	FUNCTION_9	ELSE_2	IF_4
0x98a	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       361	mark.c	FUNCTION_9	ELSE_2	IF_4
0x991	    0x480518030000	                          add rax, 0x318	       361	mark.c	FUNCTION_9	ELSE_2	IF_4
0x997	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       361	mark.c	FUNCTION_9	ELSE_2	IF_4
0x99e	      0xe9f0050000	                           jmp 0x4000fd3	       361	mark.c	FUNCTION_9	ELSE_2	IF_4
0x9a3	    0x83bd34ffffff	           cmp dword [rbp - 0xcc], 0x5e 	       362	mark.c	FUNCTION_9	ELSE_3	IF_5
0x9aa	            0x7519	                           jne 0x4000a05	       362	mark.c	FUNCTION_9	ELSE_3	IF_5
0x9ac	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       363	mark.c	FUNCTION_9	ELSE_3	IF_5
0x9b3	    0x480528030000	                          add rax, 0x328	       363	mark.c	FUNCTION_9	ELSE_3	IF_5
0x9b9	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       363	mark.c	FUNCTION_9	ELSE_3	IF_5
0x9c0	      0xe9ce050000	                           jmp 0x4000fd3	       363	mark.c	FUNCTION_9	ELSE_3	IF_5
0x9c5	    0x83bd34ffffff	           cmp dword [rbp - 0xcc], 0x2e 	       364	mark.c	FUNCTION_9	ELSE_4	IF_6
0x9cc	            0x7519	                           jne 0x4000a27	       364	mark.c	FUNCTION_9	ELSE_4	IF_6
0x9ce	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       365	mark.c	FUNCTION_9	ELSE_4	IF_6
0x9d5	    0x480538030000	                          add rax, 0x338	       365	mark.c	FUNCTION_9	ELSE_4	IF_6
0x9db	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       365	mark.c	FUNCTION_9	ELSE_4	IF_6
0x9e2	      0xe9ac050000	                           jmp 0x4000fd3	       365	mark.c	FUNCTION_9	ELSE_4	IF_6
0x9e7	    0x83bd34ffffff	           cmp dword [rbp - 0xcc], 0x5b 	       366	mark.c	FUNCTION_9	ELSE_5	IF_7
0x9ee	            0x7519	                           jne 0x4000a49	       366	mark.c	FUNCTION_9	ELSE_5	IF_7
0x9f0	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       367	mark.c	FUNCTION_9	ELSE_5	IF_7
0x9f7	    0x4805d0110000	                         add rax, 0x11d0	       367	mark.c	FUNCTION_9	ELSE_5	IF_7
0x9fd	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       367	mark.c	FUNCTION_9	ELSE_5	IF_7
0xa04	      0xe98a050000	                           jmp 0x4000fd3	       367	mark.c	FUNCTION_9	ELSE_5	IF_7
0xa09	    0x83bd34ffffff	           cmp dword [rbp - 0xcc], 0x5d 	       368	mark.c	FUNCTION_9	ELSE_6	IF_8
0xa10	            0x7519	                           jne 0x4000a6b	       368	mark.c	FUNCTION_9	ELSE_6	IF_8
0xa12	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       369	mark.c	FUNCTION_9	ELSE_6	IF_8
0xa19	    0x4805f0110000	                         add rax, 0x11f0	       369	mark.c	FUNCTION_9	ELSE_6	IF_8
0xa1f	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       369	mark.c	FUNCTION_9	ELSE_6	IF_8
0xa26	      0xe968050000	                           jmp 0x4000fd3	       369	mark.c	FUNCTION_9	ELSE_6	IF_8
0xa2b	    0x83bd34ffffff	           cmp dword [rbp - 0xcc], 0x7b 	       370	mark.c	FUNCTION_9	ELSE_7	IF_9
0xa32	            0x740d	                            je 0x4000a81	       370	mark.c	FUNCTION_9	ELSE_7	IF_9
0xa34	    0x83bd34ffffff	           cmp dword [rbp - 0xcc], 0x7d 	       370	mark.c	FUNCTION_9	ELSE_7	IF_9
0xa3b	     0xf85c5000000	                           jne 0x4000b46	       370	mark.c	FUNCTION_9	ELSE_7	IF_9
0xa41	    0x8b0500000000	            mov eax, dword [0x04000a87] 	       374	mark.c	FUNCTION_9	ELSE_7	IF_9
0xa47	    0x898544ffffff	             mov dword [rbp - 0xbc], eax	       374	mark.c	FUNCTION_9	ELSE_7	IF_9
0xa4d	    0x488b05000000	            mov rax, qword [0x04000a94] 	       376	mark.c	FUNCTION_9	ELSE_7	IF_9
0xa54	        0x488b5040	            mov rdx, qword [rax + 0x40] 	       376	mark.c	FUNCTION_9	ELSE_7	IF_9
0xa58	        0x488b4038	            mov rax, qword [rax + 0x38] 	       376	mark.c	FUNCTION_9	ELSE_7	IF_9
0xa5c	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	       376	mark.c	FUNCTION_9	ELSE_7	IF_9
0xa63	    0x48899568ffff	             mov qword [rbp - 0x98], rdx	       376	mark.c	FUNCTION_9	ELSE_7	IF_9
0xa6a	    0xc70500000000	               mov dword [0x04000ab4], 1	       377	mark.c	FUNCTION_9	ELSE_7	IF_9
0xa74	    0x83bd34ffffff	           cmp dword [rbp - 0xcc], 0x7d 	       378	mark.c	FUNCTION_9	ELSE_7	IF_9	IF_10	CALL_1
0xa7b	            0x7507	                           jne 0x4000ac4	       378	mark.c	FUNCTION_9	ELSE_7	IF_9	IF_10	CALL_1
0xa7d	      0xbe01000000	                              mov esi, 1	       378	mark.c	FUNCTION_9	ELSE_7	IF_9	IF_10	CALL_1
0xa82	            0xeb05	                           jmp 0x4000ac9	       378	mark.c	FUNCTION_9	ELSE_7	IF_9	IF_10	CALL_1
0xa84	      0xbeffffffff	                     mov esi, 0xffffffff	       378	mark.c	FUNCTION_9	ELSE_7	IF_9	IF_10	CALL_1
0xa89	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	       378	mark.c	FUNCTION_9	ELSE_7	IF_9	IF_10	CALL_1
0xa90	        0x4883c014	                           add rax, 0x14	       378	mark.c	FUNCTION_9	ELSE_7	IF_9	IF_10	CALL_1
0xa94	    0x41b800000000	                              mov r8d, 0	       378	mark.c	FUNCTION_9	ELSE_7	IF_9	IF_10	CALL_1
0xa9a	      0xb900000000	                              mov ecx, 0	       378	mark.c	FUNCTION_9	ELSE_7	IF_9	IF_10	CALL_1
0xa9f	      0xba01000000	                              mov edx, 1	       378	mark.c	FUNCTION_9	ELSE_7	IF_9	IF_10	CALL_1
0xaa4	          0x4889c7	                            mov rdi, rax	       378	mark.c	FUNCTION_9	ELSE_7	IF_9	IF_10	CALL_1
0xaa7	      0xe800000000	                          call 0x4000aec	       378	mark.c	FUNCTION_9	ELSE_7	IF_9	IF_10	CALL_1
0xaac	            0x85c0	                           test eax, eax	       378	mark.c	FUNCTION_9	ELSE_7	IF_9	IF_10	CALL_1
0xaae	            0x7428	                            je 0x4000b18	       378	mark.c	FUNCTION_9	ELSE_7	IF_9	IF_10	CALL_1
0xab0	    0x488b05000000	            mov rax, qword [0x04000af7] 	       381	mark.c	FUNCTION_9	ELSE_7	IF_9	IF_10
0xab7	        0x488b5040	            mov rdx, qword [rax + 0x40] 	       381	mark.c	FUNCTION_9	ELSE_7	IF_9	IF_10
0xabb	        0x488b4038	            mov rax, qword [rax + 0x38] 	       381	mark.c	FUNCTION_9	ELSE_7	IF_9	IF_10
0xabf	    0x488905000000	            mov qword [0x04000b06], rax 	       381	mark.c	FUNCTION_9	ELSE_7	IF_9	IF_10
0xac6	    0x488915000000	            mov qword [0x04000b0d], rdx 	       381	mark.c	FUNCTION_9	ELSE_7	IF_9	IF_10
0xacd	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	       382	mark.c	FUNCTION_9	ELSE_7	IF_9	IF_10
0xad8	    0x488b0d000000	            mov rcx, qword [0x04000b1f] 	       384	mark.c	FUNCTION_9	ELSE_7	IF_9
0xadf	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       384	mark.c	FUNCTION_9	ELSE_7	IF_9
0xae6	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	       384	mark.c	FUNCTION_9	ELSE_7	IF_9
0xaed	        0x48894138	             mov qword [rcx + 0x38], rax	       384	mark.c	FUNCTION_9	ELSE_7	IF_9
0xaf1	        0x48895140	             mov qword [rcx + 0x40], rdx	       384	mark.c	FUNCTION_9	ELSE_7	IF_9
0xaf5	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	       385	mark.c	FUNCTION_9	ELSE_7	IF_9
0xafb	    0x890500000000	            mov dword [0x04000b41], eax 	       385	mark.c	FUNCTION_9	ELSE_7	IF_9
0xb01	      0xe98d040000	                           jmp 0x4000fd3	       371	mark.c	FUNCTION_9	ELSE_7	IF_9
0xb06	    0x83bd34ffffff	           cmp dword [rbp - 0xcc], 0x28 	       387	mark.c	FUNCTION_9	ELSE_8	IF_11
0xb0d	            0x740d	                            je 0x4000b5c	       387	mark.c	FUNCTION_9	ELSE_8	IF_11
0xb0f	    0x83bd34ffffff	           cmp dword [rbp - 0xcc], 0x29 	       387	mark.c	FUNCTION_9	ELSE_8	IF_11
0xb16	     0xf85ae000000	                           jne 0x4000c0a	       387	mark.c	FUNCTION_9	ELSE_8	IF_11
0xb1c	    0x8b0500000000	            mov eax, dword [0x04000b62] 	       390	mark.c	FUNCTION_9	ELSE_8	IF_11
0xb22	    0x898540ffffff	             mov dword [rbp - 0xc0], eax	       390	mark.c	FUNCTION_9	ELSE_8	IF_11
0xb28	    0x488b05000000	            mov rax, qword [0x04000b6f] 	       392	mark.c	FUNCTION_9	ELSE_8	IF_11
0xb2f	        0x488b5040	            mov rdx, qword [rax + 0x40] 	       392	mark.c	FUNCTION_9	ELSE_8	IF_11
0xb33	        0x488b4038	            mov rax, qword [rax + 0x38] 	       392	mark.c	FUNCTION_9	ELSE_8	IF_11
0xb37	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       392	mark.c	FUNCTION_9	ELSE_8	IF_11
0xb3e	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	       392	mark.c	FUNCTION_9	ELSE_8	IF_11
0xb45	    0xc70500000000	               mov dword [0x04000b8f], 1	       393	mark.c	FUNCTION_9	ELSE_8	IF_11
0xb4f	    0x83bd34ffffff	           cmp dword [rbp - 0xcc], 0x29 	       394	mark.c	FUNCTION_9	ELSE_8	IF_11	IF_12	CALL_2
0xb56	            0x7507	                           jne 0x4000b9f	       394	mark.c	FUNCTION_9	ELSE_8	IF_11	IF_12	CALL_2
0xb58	      0xb801000000	                              mov eax, 1	       394	mark.c	FUNCTION_9	ELSE_8	IF_11	IF_12	CALL_2
0xb5d	            0xeb05	                           jmp 0x4000ba4	       394	mark.c	FUNCTION_9	ELSE_8	IF_11	IF_12	CALL_2
0xb5f	      0xb8ffffffff	                     mov eax, 0xffffffff	       394	mark.c	FUNCTION_9	ELSE_8	IF_11	IF_12	CALL_2
0xb64	      0xbe01000000	                              mov esi, 1	       394	mark.c	FUNCTION_9	ELSE_8	IF_11	IF_12	CALL_2
0xb69	            0x89c7	                            mov edi, eax	       394	mark.c	FUNCTION_9	ELSE_8	IF_11	IF_12	CALL_2
0xb6b	      0xe800000000	                          call 0x4000bb0	       394	mark.c	FUNCTION_9	ELSE_8	IF_11	IF_12	CALL_2
0xb70	            0x85c0	                           test eax, eax	       394	mark.c	FUNCTION_9	ELSE_8	IF_11	IF_12	CALL_2
0xb72	            0x7428	                            je 0x4000bdc	       394	mark.c	FUNCTION_9	ELSE_8	IF_11	IF_12	CALL_2
0xb74	    0x488b05000000	            mov rax, qword [0x04000bbb] 	       396	mark.c	FUNCTION_9	ELSE_8	IF_11	IF_12
0xb7b	        0x488b5040	            mov rdx, qword [rax + 0x40] 	       396	mark.c	FUNCTION_9	ELSE_8	IF_11	IF_12
0xb7f	        0x488b4038	            mov rax, qword [rax + 0x38] 	       396	mark.c	FUNCTION_9	ELSE_8	IF_11	IF_12
0xb83	    0x488905000000	            mov qword [0x04000bca], rax 	       396	mark.c	FUNCTION_9	ELSE_8	IF_11	IF_12
0xb8a	    0x488915000000	            mov qword [0x04000bd1], rdx 	       396	mark.c	FUNCTION_9	ELSE_8	IF_11	IF_12
0xb91	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	       397	mark.c	FUNCTION_9	ELSE_8	IF_11	IF_12
0xb9c	    0x488b0d000000	            mov rcx, qword [0x04000be3] 	       399	mark.c	FUNCTION_9	ELSE_8	IF_11
0xba3	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       399	mark.c	FUNCTION_9	ELSE_8	IF_11
0xbaa	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       399	mark.c	FUNCTION_9	ELSE_8	IF_11
0xbb1	        0x48894138	             mov qword [rcx + 0x38], rax	       399	mark.c	FUNCTION_9	ELSE_8	IF_11
0xbb5	        0x48895140	             mov qword [rcx + 0x40], rdx	       399	mark.c	FUNCTION_9	ELSE_8	IF_11
0xbb9	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	       400	mark.c	FUNCTION_9	ELSE_8	IF_11
0xbbf	    0x890500000000	            mov dword [0x04000c05], eax 	       400	mark.c	FUNCTION_9	ELSE_8	IF_11
0xbc5	      0xe9c9030000	                           jmp 0x4000fd3	       388	mark.c	FUNCTION_9	ELSE_8	IF_11
0xbca	    0x83bd34ffffff	           cmp dword [rbp - 0xcc], 0x3c 	       402	mark.c	FUNCTION_9	ELSE_9	IF_13
0xbd1	            0x740d	                            je 0x4000c20	       402	mark.c	FUNCTION_9	ELSE_9	IF_13
0xbd3	    0x83bd34ffffff	           cmp dword [rbp - 0xcc], 0x3e 	       402	mark.c	FUNCTION_9	ELSE_9	IF_13
0xbda	     0xf856a010000	                           jne 0x4000d8a	       402	mark.c	FUNCTION_9	ELSE_9	IF_13
0xbe0	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       404	mark.c	FUNCTION_9	ELSE_9	IF_13
0xbe7	    0x4805e8020000	                          add rax, 0x2e8	       404	mark.c	FUNCTION_9	ELSE_9	IF_13
0xbed	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	       404	mark.c	FUNCTION_9	ELSE_9	IF_13
0xbf4	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       405	mark.c	FUNCTION_9	ELSE_9	IF_13
0xbfb	    0x4805f8020000	                          add rax, 0x2f8	       405	mark.c	FUNCTION_9	ELSE_9	IF_13
0xc01	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	       405	mark.c	FUNCTION_9	ELSE_9	IF_13
0xc08	    0x83bd34ffffff	           cmp dword [rbp - 0xcc], 0x3c 	       406	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0xc0f	           0xf94c0	                                 sete al	       406	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0xc12	           0xfb6d0	                           movzx edx, al	       406	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0xc15	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       406	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0xc1c	          0x488b08	                    mov rcx, qword [rax]	       406	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0xc1f	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       406	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0xc26	          0x488b00	                    mov rax, qword [rax]	       406	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0xc29	          0x4839c1	                            cmp rcx, rax	       406	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0xc2c	            0x741f	                            je 0x4000c8d	       406	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0xc2e	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       406	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0xc35	          0x488b08	                    mov rcx, qword [rax]	       406	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0xc38	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       406	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0xc3f	          0x488b00	                    mov rax, qword [rax]	       406	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0xc42	          0x4839c1	                            cmp rcx, rax	       406	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0xc45	           0xf9cc0	                                 setl al	       406	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0xc48	           0xfb6c0	                           movzx eax, al	       406	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0xc4b	            0xeb52	                           jmp 0x4000cdf	       406	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0xc4d	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       406	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0xc54	          0x8b4808	                mov ecx, dword [rax + 8]	       406	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0xc57	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       406	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0xc5e	          0x8b4008	                mov eax, dword [rax + 8]	       406	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0xc61	            0x39c1	                            cmp ecx, eax	       406	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0xc63	            0x741e	                            je 0x4000cc3	       406	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0xc65	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       406	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0xc6c	          0x8b4808	                mov ecx, dword [rax + 8]	       406	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0xc6f	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       406	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0xc76	          0x8b4008	                mov eax, dword [rax + 8]	       406	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0xc79	            0x39c1	                            cmp ecx, eax	       406	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0xc7b	           0xf9cc0	                                 setl al	       406	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0xc7e	           0xfb6c0	                           movzx eax, al	       406	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0xc81	            0xeb1c	                           jmp 0x4000cdf	       406	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0xc83	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       406	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0xc8a	          0x8b480c	              mov ecx, dword [rax + 0xc]	       406	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0xc8d	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       406	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0xc94	          0x8b400c	              mov eax, dword [rax + 0xc]	       406	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0xc97	            0x39c1	                            cmp ecx, eax	       406	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0xc99	           0xf9cc0	                                 setl al	       406	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0xc9c	           0xfb6c0	                           movzx eax, al	       406	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0xc9f	            0x39c2	                            cmp edx, eax	       406	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0xca1	            0x740f	                            je 0x4000cf2	       406	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0xca3	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       406	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0xcaa	          0x488b00	                    mov rax, qword [rax]	       406	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0xcad	          0x4885c0	                           test rax, rax	       406	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0xcb0	            0x751f	                           jne 0x4000d11	       406	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14	CALL_3
0xcb2	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       407	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14
0xcb9	          0x488b00	                    mov rax, qword [rax]	       407	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14
0xcbc	          0x4885c0	                           test rax, rax	       407	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14
0xcbf	            0x7410	                            je 0x4000d11	       407	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14
0xcc1	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       408	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14
0xcc8	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       408	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14
0xccf	            0xeb0e	                           jmp 0x4000d1f	       408	mark.c	FUNCTION_9	ELSE_9	IF_13	IF_14
0xcd1	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       410	mark.c	FUNCTION_9	ELSE_9	IF_13	ELSE_10
0xcd8	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       410	mark.c	FUNCTION_9	ELSE_9	IF_13	ELSE_10
0xcdf	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       414	mark.c	FUNCTION_9	ELSE_9	IF_13	ELSE_10	IF_15
0xce6	    0x8b8008030000	           mov eax, dword [rax + 0x308] 	       414	mark.c	FUNCTION_9	ELSE_9	IF_13	ELSE_10	IF_15
0xcec	          0x83f856	                           cmp eax, 0x56	       414	mark.c	FUNCTION_9	ELSE_9	IF_13	ELSE_10	IF_15
0xcef	     0xf859e020000	                           jne 0x4000fd3	       414	mark.c	FUNCTION_9	ELSE_9	IF_13	ELSE_10	IF_15
0xcf5	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       416	mark.c	FUNCTION_9	ELSE_9	IF_13	ELSE_10	IF_15
0xcfc	        0x488b5008	                mov rdx, qword [rax + 8]	       416	mark.c	FUNCTION_9	ELSE_9	IF_13	ELSE_10	IF_15
0xd00	          0x488b00	                    mov rax, qword [rax]	       416	mark.c	FUNCTION_9	ELSE_9	IF_13	ELSE_10	IF_15
0xd03	    0x488905000000	            mov qword [0x04000d4a], rax 	       416	mark.c	FUNCTION_9	ELSE_9	IF_13	ELSE_10	IF_15
0xd0a	    0x488915000000	            mov qword [0x04000d51], rdx 	       416	mark.c	FUNCTION_9	ELSE_9	IF_13	ELSE_10	IF_15
0xd11	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	       417	mark.c	FUNCTION_9	ELSE_9	IF_13	ELSE_10	IF_15
0xd1c	    0x83bd34ffffff	           cmp dword [rbp - 0xcc], 0x3c 	       418	mark.c	FUNCTION_9	ELSE_9	IF_13	ELSE_10	IF_15	IF_16
0xd23	            0x750c	                           jne 0x4000d71	       418	mark.c	FUNCTION_9	ELSE_9	IF_13	ELSE_10	IF_15	IF_16
0xd25	    0xc70500000000	               mov dword [0x04000d6f], 0	       419	mark.c	FUNCTION_9	ELSE_9	IF_13	ELSE_10	IF_15	IF_16
0xd2f	            0xeb0a	                           jmp 0x4000d7b	       419	mark.c	FUNCTION_9	ELSE_9	IF_13	ELSE_10	IF_15	IF_16
0xd31	    0xc70500000000	     mov dword [0x04000d7b], 0x7fffffff 	       421	mark.c	FUNCTION_9	ELSE_9	IF_13	ELSE_10	IF_15	ELSE_11
0xd3b	    0xc70500000000	               mov dword [0x04000d85], 0	       423	mark.c	FUNCTION_9	ELSE_9	IF_13	ELSE_10	IF_15	ELSE_11
0xd45	      0xe949020000	                           jmp 0x4000fd3	       414	mark.c	FUNCTION_9	ELSE_9	IF_13	ELSE_10	IF_15
0xd4a	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	       427	mark.c	FUNCTION_9	ELSE_11	ELSE_12	IF_17	CALL_4
0xd50	          0x83e861	                           sub eax, 0x61	       427	mark.c	FUNCTION_9	ELSE_11	ELSE_12	IF_17	CALL_4
0xd53	          0x83f819	                           cmp eax, 0x19	       427	mark.c	FUNCTION_9	ELSE_11	ELSE_12	IF_17	CALL_4
0xd56	            0x7730	                            ja 0x4000dc8	       427	mark.c	FUNCTION_9	ELSE_11	ELSE_12	IF_17	CALL_4
0xd58	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	       429	mark.c	FUNCTION_9	ELSE_11	ELSE_12	IF_17
0xd5e	          0x83e861	                           sub eax, 0x61	       429	mark.c	FUNCTION_9	ELSE_11	ELSE_12	IF_17
0xd61	            0x4898	                                    cdqe	       429	mark.c	FUNCTION_9	ELSE_11	ELSE_12	IF_17
0xd63	        0x4883c014	                           add rax, 0x14	       429	mark.c	FUNCTION_9	ELSE_11	ELSE_12	IF_17
0xd67	        0x48c1e004	                              shl rax, 4	       429	mark.c	FUNCTION_9	ELSE_11	ELSE_12	IF_17
0xd6b	          0x4889c2	                            mov rdx, rax	       429	mark.c	FUNCTION_9	ELSE_11	ELSE_12	IF_17
0xd6e	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       429	mark.c	FUNCTION_9	ELSE_11	ELSE_12	IF_17
0xd75	          0x4801d0	                            add rax, rdx	       429	mark.c	FUNCTION_9	ELSE_11	ELSE_12	IF_17
0xd78	        0x4883c008	                              add rax, 8	       429	mark.c	FUNCTION_9	ELSE_11	ELSE_12	IF_17
0xd7c	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       429	mark.c	FUNCTION_9	ELSE_11	ELSE_12	IF_17
0xd83	      0xe90b020000	                           jmp 0x4000fd3	       429	mark.c	FUNCTION_9	ELSE_11	ELSE_12	IF_17
0xd88	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	       431	mark.c	FUNCTION_9	ELSE_13	IF_18	CALL_6
0xd8e	          0x83e841	                           sub eax, 0x41	       431	mark.c	FUNCTION_9	ELSE_13	IF_18	CALL_6
0xd91	          0x83f819	                           cmp eax, 0x19	       431	mark.c	FUNCTION_9	ELSE_13	IF_18	CALL_6
0xd94	            0x7612	                           jbe 0x4000de8	       431	mark.c	FUNCTION_9	ELSE_13	IF_18	CALL_6
0xd96	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	       431	mark.c	FUNCTION_9	ELSE_13	IF_18	CALL_6
0xd9c	          0x83e830	                           sub eax, 0x30	       431	mark.c	FUNCTION_9	ELSE_13	IF_18	CALL_6
0xd9f	          0x83f809	                              cmp eax, 9	       431	mark.c	FUNCTION_9	ELSE_13	IF_18	CALL_6
0xda2	     0xf87eb010000	                            ja 0x4000fd3	       431	mark.c	FUNCTION_9	ELSE_13	IF_18	CALL_6
0xda8	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	       433	mark.c	FUNCTION_9	ELSE_13	IF_18	IF_19	CALL_7
0xdae	          0x83e830	                           sub eax, 0x30	       433	mark.c	FUNCTION_9	ELSE_13	IF_18	IF_19	CALL_7
0xdb1	          0x83f809	                              cmp eax, 9	       433	mark.c	FUNCTION_9	ELSE_13	IF_18	IF_19	CALL_7
0xdb4	            0x7709	                            ja 0x4000dff	       433	mark.c	FUNCTION_9	ELSE_13	IF_18	IF_19	CALL_7
0xdb6	    0x83ad34ffffff	            sub dword [rbp - 0xcc], 0x16	       434	mark.c	FUNCTION_9	ELSE_13	IF_18	IF_19
0xdbd	            0xeb07	                           jmp 0x4000e06	       434	mark.c	FUNCTION_9	ELSE_13	IF_18	IF_19
0xdbf	    0x83ad34ffffff	           sub dword [rbp - 0xcc], 0x41 	       436	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_14
0xdc6	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	       437	mark.c	FUNCTION_9	ELSE_13	IF_18
0xdcc	          0x4863d0	                         movsxd rdx, eax	       437	mark.c	FUNCTION_9	ELSE_13	IF_18
0xdcf	          0x4889d0	                            mov rax, rdx	       437	mark.c	FUNCTION_9	ELSE_13	IF_18
0xdd2	        0x48c1e002	                              shl rax, 2	       437	mark.c	FUNCTION_9	ELSE_13	IF_18
0xdd6	          0x4801d0	                            add rax, rdx	       437	mark.c	FUNCTION_9	ELSE_13	IF_18
0xdd9	        0x48c1e003	                              shl rax, 3	       437	mark.c	FUNCTION_9	ELSE_13	IF_18
0xddd	    0x480500000000	                              add rax, 0	       437	mark.c	FUNCTION_9	ELSE_13	IF_18
0xde3	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       437	mark.c	FUNCTION_9	ELSE_13	IF_18
0xdea	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	       439	mark.c	FUNCTION_9	ELSE_13	IF_18	IF_20
0xdf0	          0x4863d0	                         movsxd rdx, eax	       439	mark.c	FUNCTION_9	ELSE_13	IF_18	IF_20
0xdf3	          0x4889d0	                            mov rax, rdx	       439	mark.c	FUNCTION_9	ELSE_13	IF_18	IF_20
0xdf6	        0x48c1e002	                              shl rax, 2	       439	mark.c	FUNCTION_9	ELSE_13	IF_18	IF_20
0xdfa	          0x4801d0	                            add rax, rdx	       439	mark.c	FUNCTION_9	ELSE_13	IF_18	IF_20
0xdfd	        0x48c1e003	                              shl rax, 3	       439	mark.c	FUNCTION_9	ELSE_13	IF_18	IF_20
0xe01	    0x480500000000	                              add rax, 0	       439	mark.c	FUNCTION_9	ELSE_13	IF_18	IF_20
0xe07	            0x8b00	                    mov eax, dword [rax]	       439	mark.c	FUNCTION_9	ELSE_13	IF_18	IF_20
0xe09	            0x85c0	                           test eax, eax	       439	mark.c	FUNCTION_9	ELSE_13	IF_18	IF_20
0xe0b	            0x7525	                           jne 0x4000e72	       439	mark.c	FUNCTION_9	ELSE_13	IF_18	IF_20
0xe0d	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	       440	mark.c	FUNCTION_9	ELSE_13	IF_18	CALL_8
0xe13	          0x4863d0	                         movsxd rdx, eax	       440	mark.c	FUNCTION_9	ELSE_13	IF_18	CALL_8
0xe16	          0x4889d0	                            mov rax, rdx	       440	mark.c	FUNCTION_9	ELSE_13	IF_18	CALL_8
0xe19	        0x48c1e002	                              shl rax, 2	       440	mark.c	FUNCTION_9	ELSE_13	IF_18	CALL_8
0xe1d	          0x4801d0	                            add rax, rdx	       440	mark.c	FUNCTION_9	ELSE_13	IF_18	CALL_8
0xe20	        0x48c1e003	                              shl rax, 3	       440	mark.c	FUNCTION_9	ELSE_13	IF_18	CALL_8
0xe24	    0x480500000000	                              add rax, 0	       440	mark.c	FUNCTION_9	ELSE_13	IF_18	CALL_8
0xe2a	          0x4889c7	                            mov rdi, rax	       440	mark.c	FUNCTION_9	ELSE_13	IF_18	CALL_8
0xe2d	      0xe8da050000	                     call sym.fname2fnum	       440	mark.c	FUNCTION_9	ELSE_13	IF_18	CALL_8
0xe32	    0x4883bd28ffff	               cmp qword [rbp - 0xd8], 0	       442	mark.c	FUNCTION_9	ELSE_13	IF_18	IF_21
0xe3a	            0x742d	                            je 0x4000ea9	       442	mark.c	FUNCTION_9	ELSE_13	IF_18	IF_21
0xe3c	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	       443	mark.c	FUNCTION_9	ELSE_13	IF_18	IF_21
0xe42	          0x4863d0	                         movsxd rdx, eax	       443	mark.c	FUNCTION_9	ELSE_13	IF_18	IF_21
0xe45	          0x4889d0	                            mov rax, rdx	       443	mark.c	FUNCTION_9	ELSE_13	IF_18	IF_21
0xe48	        0x48c1e002	                              shl rax, 2	       443	mark.c	FUNCTION_9	ELSE_13	IF_18	IF_21
0xe4c	          0x4801d0	                            add rax, rdx	       443	mark.c	FUNCTION_9	ELSE_13	IF_18	IF_21
0xe4f	        0x48c1e003	                              shl rax, 3	       443	mark.c	FUNCTION_9	ELSE_13	IF_18	IF_21
0xe53	    0x480500000000	                              add rax, 0	       443	mark.c	FUNCTION_9	ELSE_13	IF_18	IF_21
0xe59	            0x8b10	                    mov edx, dword [rax]	       443	mark.c	FUNCTION_9	ELSE_13	IF_18	IF_21
0xe5b	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       443	mark.c	FUNCTION_9	ELSE_13	IF_18	IF_21
0xe62	            0x8910	                    mov dword [rax], edx	       443	mark.c	FUNCTION_9	ELSE_13	IF_18	IF_21
0xe64	      0xe92a010000	                           jmp 0x4000fd3	       443	mark.c	FUNCTION_9	ELSE_13	IF_18	IF_21
0xe69	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	       444	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22
0xe6f	          0x4863d0	                         movsxd rdx, eax	       444	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22
0xe72	          0x4889d0	                            mov rax, rdx	       444	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22
0xe75	        0x48c1e002	                              shl rax, 2	       444	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22
0xe79	          0x4801d0	                            add rax, rdx	       444	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22
0xe7c	        0x48c1e003	                              shl rax, 3	       444	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22
0xe80	    0x480500000000	                              add rax, 0	       444	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22
0xe86	            0x8b10	                    mov edx, dword [rax]	       444	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22
0xe88	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       444	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22
0xe8f	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	       444	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22
0xe95	            0x39c2	                            cmp edx, eax	       444	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22
0xe97	     0xf84f6000000	                            je 0x4000fd3	       444	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22
0xe9d	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	       447	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22
0xea8	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	       449	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23
0xeae	          0x4863d0	                         movsxd rdx, eax	       449	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23
0xeb1	          0x4889d0	                            mov rax, rdx	       449	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23
0xeb4	        0x48c1e002	                              shl rax, 2	       449	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23
0xeb8	          0x4801d0	                            add rax, rdx	       449	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23
0xebb	        0x48c1e003	                              shl rax, 3	       449	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23
0xebf	    0x480500000000	                              add rax, 0	       449	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23
0xec5	          0x488b00	                    mov rax, qword [rax]	       449	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23
0xec8	          0x4885c0	                           test rax, rax	       449	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23
0xecb	     0xf84b7000000	                            je 0x4000fc8	       449	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23
0xed1	    0x83bd30ffffff	               cmp dword [rbp - 0xd0], 0	       450	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23
0xed8	     0xf84aa000000	                            je 0x4000fc8	       450	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23
0xede	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	       450	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23
0xee4	          0x4863d0	                         movsxd rdx, eax	       450	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23
0xee7	          0x4889d0	                            mov rax, rdx	       450	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23
0xeea	        0x48c1e002	                              shl rax, 2	       450	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23
0xeee	          0x4801d0	                            add rax, rdx	       450	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23
0xef1	        0x48c1e003	                              shl rax, 3	       450	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23
0xef5	    0x480500000000	                              add rax, 0	       450	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23
0xefb	            0x8b00	                    mov eax, dword [rax]	       450	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23
0xefd	            0x85c0	                           test eax, eax	       450	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23
0xeff	     0xf8483000000	                            je 0x4000fc8	       450	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23
0xf05	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	       452	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23	IF_24	CALL_9
0xf0b	          0x4863d0	                         movsxd rdx, eax	       452	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23	IF_24	CALL_9
0xf0e	          0x4889d0	                            mov rax, rdx	       452	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23	IF_24	CALL_9
0xf11	        0x48c1e002	                              shl rax, 2	       452	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23	IF_24	CALL_9
0xf15	          0x4801d0	                            add rax, rdx	       452	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23	IF_24	CALL_9
0xf18	        0x48c1e003	                              shl rax, 3	       452	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23	IF_24	CALL_9
0xf1c	    0x480500000000	                              add rax, 0	       452	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23	IF_24	CALL_9
0xf22	            0x8b00	                    mov eax, dword [rax]	       452	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23	IF_24	CALL_9
0xf24	      0xb900000000	                              mov ecx, 0	       452	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23	IF_24	CALL_9
0xf29	      0xba01000000	                              mov edx, 1	       452	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23	IF_24	CALL_9
0xf2e	      0xbe01000000	                              mov esi, 1	       452	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23	IF_24	CALL_9
0xf33	            0x89c7	                            mov edi, eax	       452	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23	IF_24	CALL_9
0xf35	      0xe800000000	                          call 0x4000f7a	       452	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23	IF_24	CALL_9
0xf3a	          0x83f801	                              cmp eax, 1	       452	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23	IF_24	CALL_9
0xf3d	            0x753c	                           jne 0x4000fbb	       452	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23	IF_24	CALL_9
0xf3f	    0x488b0d000000	            mov rcx, qword [0x04000f86] 	       456	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23	IF_24
0xf46	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	       456	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23	IF_24
0xf4c	          0x4863d0	                         movsxd rdx, eax	       456	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23	IF_24
0xf4f	          0x4889d0	                            mov rax, rdx	       456	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23	IF_24
0xf52	        0x48c1e002	                              shl rax, 2	       456	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23	IF_24
0xf56	          0x4801d0	                            add rax, rdx	       456	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23	IF_24
0xf59	        0x48c1e003	                              shl rax, 3	       456	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23	IF_24
0xf5d	    0x480500000000	                              add rax, 0	       456	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23	IF_24
0xf63	        0x488b5008	                mov rdx, qword [rax + 8]	       456	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23	IF_24
0xf67	          0x488b00	                    mov rax, qword [rax]	       456	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23	IF_24
0xf6a	        0x48894138	             mov qword [rcx + 0x38], rax	       456	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23	IF_24
0xf6e	        0x48895140	             mov qword [rcx + 0x40], rdx	       456	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23	IF_24
0xf72	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       457	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23	IF_24
0xf79	            0xeb1f	                           jmp 0x4000fda	       457	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23	IF_24
0xf7b	    0x48c705000000	mov qword [0x04000fc6], 0xffffffffffffffff 	       459	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23
0xf86	            0xeb0b	                           jmp 0x4000fd3	       459	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	IF_23
0xf88	    0x48c705000000	               mov qword [0x04000fd3], 0	       462	mark.c	FUNCTION_9	ELSE_13	IF_18	ELSE_15	IF_22	ELSE_16
0xf93	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       467	mark.c	FUNCTION_9	ELSE_16
0xf9a	        0x488b7df8	                mov rdi, qword [rbp - 8]	       468	mark.c	FUNCTION_9	ELSE_16
0xf9e	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       468	mark.c	FUNCTION_9	ELSE_16
0xfa7	            0x7405	                            je 0x4000fee	       468	mark.c	FUNCTION_9	ELSE_16
0xfa9	      0xe800000000	                          call 0x4000fee	       468	mark.c	FUNCTION_9	ELSE_16
0xfae	              0xc9	                                   leave	       468	mark.c	FUNCTION_9	ELSE_16
0xfaf	              0xc3	                                     ret	       468	mark.c	FUNCTION_9	ELSE_16
ex_clearjumps	DO,0:functions,0:IF,0:SWITCH,0:CALL,1:ELSE,0:WHILE,0:FOR,0	14
0x24ec	              0x55	                                push rbp	       941	mark.c	FUNCTION_22
0x24ed	          0x4889e5	                            mov rbp, rsp	       941	mark.c	FUNCTION_22
0x24f0	        0x4883ec10	                           sub rsp, 0x10	       941	mark.c	FUNCTION_22
0x24f4	        0x48897df8	                mov qword [rbp - 8], rdi	       941	mark.c	FUNCTION_22
0x24f8	    0x488b05000000	            mov rax, qword [0x0400253f] 	       942	mark.c	FUNCTION_22	CALL_1
0x24ff	          0x4889c7	                            mov rdi, rax	       942	mark.c	FUNCTION_22	CALL_1
0x2502	      0xe800000000	                          call 0x4002547	       942	mark.c	FUNCTION_22	CALL_1
0x2507	    0x488b05000000	            mov rax, qword [0x0400254e] 	       943	mark.c	FUNCTION_22
0x250e	    0xc78040150000	            mov dword [rax + 0x1540], 0 	       943	mark.c	FUNCTION_22
0x2518	    0x488b05000000	            mov rax, qword [0x0400255f] 	       944	mark.c	FUNCTION_22
0x251f	    0xc78044150000	            mov dword [rax + 0x1544], 0 	       944	mark.c	FUNCTION_22
0x2529	              0x90	                                     nop	       945	mark.c	FUNCTION_22
0x252a	              0xc9	                                   leave	       945	mark.c	FUNCTION_22
0x252b	              0xc3	                                     ret	       945	mark.c	FUNCTION_22
prepare_viminfo_marks	DO,0:functions,0:IF,0:SWITCH,0:CALL,2:ELSE,0:WHILE,0:FOR,0	12
0x450f	              0x55	                                push rbp	      1464	mark.c	FUNCTION_34
0x4510	          0x4889e5	                            mov rbp, rsp	      1464	mark.c	FUNCTION_34
0x4513	      0xbfa0050000	                          mov edi, 0x5a0	      1465	mark.c	FUNCTION_34	CALL_1
0x4518	      0xe800000000	                          call 0x400455d	      1465	mark.c	FUNCTION_34	CALL_1
0x451d	    0x488905000000	            mov qword [0x04004564], rax 	      1465	mark.c	FUNCTION_34	CALL_1
0x4524	      0xbfa00f0000	                          mov edi, 0xfa0	      1468	mark.c	FUNCTION_34	CALL_2
0x4529	      0xe800000000	                          call 0x400456e	      1468	mark.c	FUNCTION_34	CALL_2
0x452e	    0x488905000000	            mov qword [0x04004575], rax 	      1468	mark.c	FUNCTION_34	CALL_2
0x4535	    0xc70500000000	               mov dword [0x0400457f], 0	      1470	mark.c	FUNCTION_34
0x453f	              0x90	                                     nop	      1472	mark.c	FUNCTION_34
0x4540	              0x5d	                                 pop rbp	      1472	mark.c	FUNCTION_34
0x4541	              0xc3	                                     ret	      1472	mark.c	FUNCTION_34
write_one_mark	DO,0:functions,0:IF,1:SWITCH,0:CALL,1:ELSE,0:WHILE,0:FOR,0	24
0x54e1	              0x55	                                push rbp	      1844	mark.c	FUNCTION_41
0x54e2	          0x4889e5	                            mov rbp, rsp	      1844	mark.c	FUNCTION_41
0x54e5	        0x4883ec20	                           sub rsp, 0x20	      1844	mark.c	FUNCTION_41
0x54e9	        0x48897df8	                mov qword [rbp - 8], rdi	      1844	mark.c	FUNCTION_41
0x54ed	          0x8975f4	              mov dword [rbp - 0xc], esi	      1844	mark.c	FUNCTION_41
0x54f0	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1844	mark.c	FUNCTION_41
0x54f4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1845	mark.c	FUNCTION_41	IF_1
0x54f8	          0x488b00	                    mov rax, qword [rax]	      1845	mark.c	FUNCTION_41	IF_1
0x54fb	          0x4885c0	                           test rax, rax	      1845	mark.c	FUNCTION_41	IF_1
0x54fe	            0x742a	                            je 0x400556a	      1845	mark.c	FUNCTION_41	IF_1
0x5500	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1846	mark.c	FUNCTION_41	CALL_1
0x5504	          0x8b7008	                mov esi, dword [rax + 8]	      1846	mark.c	FUNCTION_41	CALL_1
0x5507	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1846	mark.c	FUNCTION_41	CALL_1
0x550b	          0x488b08	                    mov rcx, qword [rax]	      1846	mark.c	FUNCTION_41	CALL_1
0x550e	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      1846	mark.c	FUNCTION_41	CALL_1
0x5511	        0x488b45f8	                mov rax, qword [rbp - 8]	      1846	mark.c	FUNCTION_41	CALL_1
0x5515	          0x4189f0	                            mov r8d, esi	      1846	mark.c	FUNCTION_41	CALL_1
0x5518	      0xbe00000000	                              mov esi, 0	      1846	mark.c	FUNCTION_41	CALL_1
0x551d	          0x4889c7	                            mov rdi, rax	      1846	mark.c	FUNCTION_41	CALL_1
0x5520	      0xb800000000	                              mov eax, 0	      1846	mark.c	FUNCTION_41	CALL_1
0x5525	      0xe800000000	                          call 0x400556a	      1846	mark.c	FUNCTION_41	CALL_1
0x552a	              0x90	                                     nop	      1847	mark.c	FUNCTION_41
0x552b	              0xc9	                                   leave	      1847	mark.c	FUNCTION_41
0x552c	              0xc3	                                     ret	      1847	mark.c	FUNCTION_41
write_one_filemark	DO,0:functions,0:IF,4:SWITCH,0:CALL,7:ELSE,1:WHILE,0:FOR,0	92
0x52b9	              0x55	                                push rbp	      1781	mark.c	FUNCTION_39
0x52ba	          0x4889e5	                            mov rbp, rsp	      1781	mark.c	FUNCTION_39
0x52bd	        0x4883ec30	                           sub rsp, 0x30	      1781	mark.c	FUNCTION_39
0x52c1	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1781	mark.c	FUNCTION_39
0x52c5	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1781	mark.c	FUNCTION_39
0x52c9	          0x8955dc	             mov dword [rbp - 0x24], edx	      1781	mark.c	FUNCTION_39
0x52cc	          0x894dd8	             mov dword [rbp - 0x28], ecx	      1781	mark.c	FUNCTION_39
0x52cf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1784	mark.c	FUNCTION_39	IF_1
0x52d3	          0x488b00	                    mov rax, qword [rax]	      1784	mark.c	FUNCTION_39	IF_1
0x52d6	          0x4885c0	                           test rax, rax	      1784	mark.c	FUNCTION_39	IF_1
0x52d9	     0xf841f010000	                            je 0x400543e	      1784	mark.c	FUNCTION_39	IF_1
0x52df	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1787	mark.c	FUNCTION_39	IF_2
0x52e3	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1787	mark.c	FUNCTION_39	IF_2
0x52e6	            0x85c0	                           test eax, eax	      1787	mark.c	FUNCTION_39	IF_2
0x52e8	            0x741e	                            je 0x4005348	      1787	mark.c	FUNCTION_39	IF_2
0x52ea	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1788	mark.c	FUNCTION_39	CALL_1
0x52ee	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1788	mark.c	FUNCTION_39	CALL_1
0x52f1	      0xba00000000	                              mov edx, 0	      1788	mark.c	FUNCTION_39	CALL_1
0x52f6	      0xbe01000000	                              mov esi, 1	      1788	mark.c	FUNCTION_39	CALL_1
0x52fb	            0x89c7	                            mov edi, eax	      1788	mark.c	FUNCTION_39	CALL_1
0x52fd	      0xe800000000	                          call 0x4005342	      1788	mark.c	FUNCTION_39	CALL_1
0x5302	        0x488945f8	                mov qword [rbp - 8], rax	      1788	mark.c	FUNCTION_39	CALL_1
0x5306	            0xeb0c	                           jmp 0x4005354	      1788	mark.c	FUNCTION_39	CALL_1
0x5308	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1790	mark.c	FUNCTION_39	ELSE_1
0x530c	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1790	mark.c	FUNCTION_39	ELSE_1
0x5310	        0x488945f8	                mov qword [rbp - 8], rax	      1790	mark.c	FUNCTION_39	ELSE_1
0x5314	      0x48837df800	                  cmp qword [rbp - 8], 0	      1791	mark.c	FUNCTION_39	ELSE_1	IF_3
0x5319	     0xf84c6000000	                            je 0x4005425	      1791	mark.c	FUNCTION_39	ELSE_1	IF_3
0x531f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1791	mark.c	FUNCTION_39	ELSE_1	IF_3
0x5323	           0xfb600	                   movzx eax, byte [rax]	      1791	mark.c	FUNCTION_39	ELSE_1	IF_3
0x5326	            0x84c0	                             test al, al	      1791	mark.c	FUNCTION_39	ELSE_1	IF_3
0x5328	     0xf84b7000000	                            je 0x4005425	      1791	mark.c	FUNCTION_39	ELSE_1	IF_3
0x532e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1794	mark.c	FUNCTION_39	ELSE_1	IF_3
0x5332	          0x8b4008	                mov eax, dword [rax + 8]	      1794	mark.c	FUNCTION_39	ELSE_1	IF_3
0x5335	          0x4863f8	                         movsxd rdi, eax	      1793	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_2
0x5338	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1793	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_2
0x533c	          0x488b30	                    mov rsi, qword [rax]	      1793	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_2
0x533f	          0x8b4dd8	             mov ecx, dword [rbp - 0x28]	      1793	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_2
0x5342	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1793	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_2
0x5345	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1793	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_2
0x5349	          0x4989f9	                             mov r9, rdi	      1793	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_2
0x534c	          0x4989f0	                             mov r8, rsi	      1793	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_2
0x534f	      0xbe00000000	                              mov esi, 0	      1793	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_2
0x5354	          0x4889c7	                            mov rdi, rax	      1793	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_2
0x5357	      0xb800000000	                              mov eax, 0	      1793	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_2
0x535c	      0xe800000000	                          call 0x40053a1	      1793	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_2
0x5361	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1795	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_3
0x5365	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1795	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_3
0x5369	          0x4889d6	                            mov rsi, rdx	      1795	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_3
0x536c	          0x4889c7	                            mov rdi, rax	      1795	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_3
0x536f	      0xe800000000	                          call 0x40053b4	      1795	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_3
0x5374	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1801	mark.c	FUNCTION_39	ELSE_1	IF_3
0x5378	        0x488b4820	            mov rcx, qword [rax + 0x20] 	      1801	mark.c	FUNCTION_39	ELSE_1	IF_3
0x537c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1800	mark.c	FUNCTION_39	ELSE_1	IF_3
0x5380	          0x8b4008	                mov eax, dword [rax + 8]	      1800	mark.c	FUNCTION_39	ELSE_1	IF_3
0x5383	          0x4863f8	                         movsxd rdi, eax	      1799	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_4
0x5386	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1800	mark.c	FUNCTION_39	ELSE_1	IF_3
0x538a	          0x488b30	                    mov rsi, qword [rax]	      1800	mark.c	FUNCTION_39	ELSE_1	IF_3
0x538d	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      1799	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_4
0x5390	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1799	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_4
0x5394	        0x4883ec08	                              sub rsp, 8	      1799	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_4
0x5398	              0x51	                                push rcx	      1799	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_4
0x5399	          0x4989f9	                             mov r9, rdi	      1799	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_4
0x539c	          0x4989f0	                             mov r8, rsi	      1799	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_4
0x539f	            0x89d1	                            mov ecx, edx	      1799	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_4
0x53a1	      0xba04000000	                              mov edx, 4	      1799	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_4
0x53a6	      0xbe00000000	                              mov esi, 0	      1799	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_4
0x53ab	          0x4889c7	                            mov rdi, rax	      1799	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_4
0x53ae	      0xb800000000	                              mov eax, 0	      1799	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_4
0x53b3	      0xe800000000	                          call 0x40053f8	      1799	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_4
0x53b8	        0x4883c410	                           add rsp, 0x10	      1799	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_4
0x53bc	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1802	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_5
0x53c0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1802	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_5
0x53c4	      0xbaba010000	                          mov edx, 0x1ba	      1802	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_5
0x53c9	          0x4889ce	                            mov rsi, rcx	      1802	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_5
0x53cc	          0x4889c7	                            mov rdi, rax	      1802	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_5
0x53cf	      0xe800000000	                          call 0x4005414	      1802	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_5
0x53d4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1803	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_6
0x53d8	          0x4889c6	                            mov rsi, rax	      1803	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_6
0x53db	      0xbf0a000000	                            mov edi, 0xa	      1803	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_6
0x53e0	      0xe800000000	                          call 0x4005425	      1803	mark.c	FUNCTION_39	ELSE_1	IF_3	CALL_6
0x53e5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1806	mark.c	FUNCTION_39	IF_4
0x53e9	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1806	mark.c	FUNCTION_39	IF_4
0x53ec	            0x85c0	                           test eax, eax	      1806	mark.c	FUNCTION_39	IF_4
0x53ee	            0x740f	                            je 0x400543f	      1806	mark.c	FUNCTION_39	IF_4
0x53f0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1807	mark.c	FUNCTION_39	CALL_7
0x53f4	          0x4889c7	                            mov rdi, rax	      1807	mark.c	FUNCTION_39	CALL_7
0x53f7	      0xe800000000	                          call 0x400543c	      1807	mark.c	FUNCTION_39	CALL_7
0x53fc	            0xeb01	                           jmp 0x400543f	      1807	mark.c	FUNCTION_39	CALL_7
0x53fe	              0x90	                                     nop	      1785	mark.c	FUNCTION_39	IF_1
0x53ff	              0xc9	                                   leave	      1808	mark.c	FUNCTION_39
0x5400	              0xc3	                                     ret	      1808	mark.c	FUNCTION_39
getmark	DO,0:functions,0:IF,0:SWITCH,0:CALL,1:ELSE,0:WHILE,0:FOR,0	13
0x8b1	              0x55	                                push rbp	       329	mark.c	FUNCTION_8
0x8b2	          0x4889e5	                            mov rbp, rsp	       329	mark.c	FUNCTION_8
0x8b5	        0x4883ec10	                           sub rsp, 0x10	       329	mark.c	FUNCTION_8
0x8b9	          0x897dfc	                mov dword [rbp - 4], edi	       329	mark.c	FUNCTION_8
0x8bc	          0x8975f8	                mov dword [rbp - 8], esi	       329	mark.c	FUNCTION_8
0x8bf	    0x488b05000000	            mov rax, qword [0x04000906] 	       330	mark.c	FUNCTION_8	CALL_1
0x8c6	          0x8b55f8	                mov edx, dword [rbp - 8]	       330	mark.c	FUNCTION_8	CALL_1
0x8c9	          0x8b75fc	                mov esi, dword [rbp - 4]	       330	mark.c	FUNCTION_8	CALL_1
0x8cc	      0xb900000000	                              mov ecx, 0	       330	mark.c	FUNCTION_8	CALL_1
0x8d1	          0x4889c7	                            mov rdi, rax	       330	mark.c	FUNCTION_8	CALL_1
0x8d4	      0xe800000000	                          call 0x4000919	       330	mark.c	FUNCTION_8	CALL_1
0x8d9	              0xc9	                                   leave	       331	mark.c	FUNCTION_8
0x8da	              0xc3	                                     ret	       331	mark.c	FUNCTION_8
mark_adjust_internal	DO,0:functions,1:IF,6:SWITCH,0:CALL,19:ELSE,0:WHILE,0:FOR,3	903
0x277b	              0x55	                                push rbp	      1054	mark.c	FUNCTION_26
0x277c	          0x4889e5	                            mov rbp, rsp	      1054	mark.c	FUNCTION_26
0x277f	        0x4883ec50	                           sub rsp, 0x50	      1054	mark.c	FUNCTION_26
0x2783	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1054	mark.c	FUNCTION_26
0x2787	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1054	mark.c	FUNCTION_26
0x278b	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1054	mark.c	FUNCTION_26
0x278f	        0x48894dc0	             mov qword [rbp - 0x40], rcx	      1054	mark.c	FUNCTION_26
0x2793	        0x448945bc	             mov dword [rbp - 0x44], r8d	      1054	mark.c	FUNCTION_26
0x2797	    0x488b05000000	            mov rax, qword [0x040027de] 	      1056	mark.c	FUNCTION_26
0x279e	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      1056	mark.c	FUNCTION_26
0x27a4	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1056	mark.c	FUNCTION_26
0x27a7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1062	mark.c	FUNCTION_26	IF_1
0x27ab	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1062	mark.c	FUNCTION_26	IF_1
0x27af	            0x7d0b	                           jge 0x40027fc	      1062	mark.c	FUNCTION_26	IF_1
0x27b1	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1062	mark.c	FUNCTION_26	IF_1
0x27b6	     0xf840c0d0000	                            je 0x4003508	      1062	mark.c	FUNCTION_26	IF_1
0x27bc	    0x8b0500000000	            mov eax, dword [0x04002802] 	      1065	mark.c	FUNCTION_26	IF_2
0x27c2	            0x85c0	                           test eax, eax	      1065	mark.c	FUNCTION_26	IF_2
0x27c4	     0xf8567060000	                           jne 0x4002e71	      1065	mark.c	FUNCTION_26	IF_2
0x27ca	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      1068	mark.c	FUNCTION_26	IF_2	FOR_1
0x27d1	      0xe949010000	                           jmp 0x400295f	      1068	mark.c	FUNCTION_26	IF_2	FOR_1
0x27d6	    0x488b05000000	            mov rax, qword [0x0400281d] 	      1070	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x27dd	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1070	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x27e0	          0x4863d2	                         movsxd rdx, edx	      1070	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x27e3	        0x4883c214	                           add rdx, 0x14	      1070	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x27e7	        0x48c1e204	                              shl rdx, 4	      1070	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x27eb	          0x4801d0	                            add rax, rdx	      1070	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x27ee	        0x4883c008	                              add rax, 8	      1070	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x27f2	        0x488945f8	                mov qword [rbp - 8], rax	      1070	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x27f6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1070	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x27fa	          0x488b00	                    mov rax, qword [rax]	      1070	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x27fd	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1070	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x2801	            0x7c3b	                            jl 0x400287e	      1070	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x2803	        0x488b45f8	                mov rax, qword [rbp - 8]	      1070	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x2807	          0x488b00	                    mov rax, qword [rax]	      1070	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x280a	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      1070	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x280e	            0x7f2e	                            jg 0x400287e	      1070	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x2810	    0x48817dc8ffff	     cmp qword [rbp - 0x38], 0x7fffffff 	      1070	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x2818	            0x750d	                           jne 0x4002867	      1070	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x281a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1070	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x281e	    0x48c700000000	                      mov qword [rax], 0	      1070	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x2825	            0xeb40	                           jmp 0x40028a7	      1070	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x2827	        0x488b45f8	                mov rax, qword [rbp - 8]	      1070	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x282b	          0x488b10	                    mov rdx, qword [rax]	      1070	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x282e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1070	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x2832	          0x4801c2	                            add rdx, rax	      1070	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x2835	        0x488b45f8	                mov rax, qword [rbp - 8]	      1070	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x2839	          0x488910	                    mov qword [rax], rdx	      1070	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x283c	            0xeb29	                           jmp 0x40028a7	      1070	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x283e	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1070	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x2843	            0x7422	                            je 0x40028a7	      1070	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x2845	        0x488b45f8	                mov rax, qword [rbp - 8]	      1070	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x2849	          0x488b00	                    mov rax, qword [rax]	      1070	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x284c	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      1070	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x2850	            0x7e15	                           jle 0x40028a7	      1070	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x2852	        0x488b45f8	                mov rax, qword [rbp - 8]	      1070	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x2856	          0x488b10	                    mov rdx, qword [rax]	      1070	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x2859	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1070	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x285d	          0x4801c2	                            add rdx, rax	      1070	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x2860	        0x488b45f8	                mov rax, qword [rbp - 8]	      1070	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x2864	          0x488910	                    mov qword [rax], rdx	      1070	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_2
0x2867	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1071	mark.c	FUNCTION_26	IF_2	FOR_1	IF_3
0x286a	          0x4863d0	                         movsxd rdx, eax	      1071	mark.c	FUNCTION_26	IF_2	FOR_1	IF_3
0x286d	          0x4889d0	                            mov rax, rdx	      1071	mark.c	FUNCTION_26	IF_2	FOR_1	IF_3
0x2870	        0x48c1e002	                              shl rax, 2	      1071	mark.c	FUNCTION_26	IF_2	FOR_1	IF_3
0x2874	          0x4801d0	                            add rax, rdx	      1071	mark.c	FUNCTION_26	IF_2	FOR_1	IF_3
0x2877	        0x48c1e003	                              shl rax, 3	      1071	mark.c	FUNCTION_26	IF_2	FOR_1	IF_3
0x287b	    0x480500000000	                              add rax, 0	      1071	mark.c	FUNCTION_26	IF_2	FOR_1	IF_3
0x2881	            0x8b00	                    mov eax, dword [rax]	      1071	mark.c	FUNCTION_26	IF_2	FOR_1	IF_3
0x2883	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      1071	mark.c	FUNCTION_26	IF_2	FOR_1	IF_3
0x2886	     0xf858f000000	                           jne 0x400295b	      1071	mark.c	FUNCTION_26	IF_2	FOR_1	IF_3
0x288c	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1072	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x288f	          0x4863d0	                         movsxd rdx, eax	      1072	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x2892	          0x4889d0	                            mov rax, rdx	      1072	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x2895	        0x48c1e002	                              shl rax, 2	      1072	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x2899	          0x4801d0	                            add rax, rdx	      1072	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x289c	        0x48c1e003	                              shl rax, 3	      1072	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x28a0	    0x480500000000	                              add rax, 0	      1072	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x28a6	        0x488945f8	                mov qword [rbp - 8], rax	      1072	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x28aa	        0x488b45f8	                mov rax, qword [rbp - 8]	      1072	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x28ae	          0x488b00	                    mov rax, qword [rax]	      1072	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x28b1	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1072	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x28b5	            0x7c3b	                            jl 0x4002932	      1072	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x28b7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1072	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x28bb	          0x488b00	                    mov rax, qword [rax]	      1072	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x28be	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      1072	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x28c2	            0x7f2e	                            jg 0x4002932	      1072	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x28c4	    0x48817dc8ffff	     cmp qword [rbp - 0x38], 0x7fffffff 	      1072	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x28cc	            0x750d	                           jne 0x400291b	      1072	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x28ce	        0x488b45f8	                mov rax, qword [rbp - 8]	      1072	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x28d2	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1072	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x28d6	          0x488910	                    mov qword [rax], rdx	      1072	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x28d9	            0xeb40	                           jmp 0x400295b	      1072	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x28db	        0x488b45f8	                mov rax, qword [rbp - 8]	      1072	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x28df	          0x488b10	                    mov rdx, qword [rax]	      1072	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x28e2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1072	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x28e6	          0x4801c2	                            add rdx, rax	      1072	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x28e9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1072	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x28ed	          0x488910	                    mov qword [rax], rdx	      1072	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x28f0	            0xeb29	                           jmp 0x400295b	      1072	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x28f2	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1072	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x28f7	            0x7422	                            je 0x400295b	      1072	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x28f9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1072	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x28fd	          0x488b00	                    mov rax, qword [rax]	      1072	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x2900	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      1072	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x2904	            0x7e15	                           jle 0x400295b	      1072	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x2906	        0x488b45f8	                mov rax, qword [rbp - 8]	      1072	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x290a	          0x488b10	                    mov rdx, qword [rax]	      1072	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x290d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1072	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x2911	          0x4801c2	                            add rdx, rax	      1072	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x2914	        0x488b45f8	                mov rax, qword [rbp - 8]	      1072	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x2918	          0x488910	                    mov qword [rax], rdx	      1072	mark.c	FUNCTION_26	IF_2	FOR_1	CALL_3
0x291b	        0x8345e001	               add dword [rbp - 0x20], 1	      1068	mark.c	FUNCTION_26	IF_2	FOR_1
0x291f	        0x837de019	           cmp dword [rbp - 0x20], 0x19 	      1068	mark.c	FUNCTION_26	IF_2	FOR_1
0x2923	     0xf8eadfeffff	                           jle 0x4002816	      1068	mark.c	FUNCTION_26	IF_2	FOR_1
0x2929	    0xc745e01a0000	           mov dword [rbp - 0x20], 0x1a 	      1074	mark.c	FUNCTION_26	IF_2	FOR_2
0x2930	      0xe9b8000000	                           jmp 0x4002a2d	      1074	mark.c	FUNCTION_26	IF_2	FOR_2
0x2935	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1076	mark.c	FUNCTION_26	IF_2	FOR_2	IF_4
0x2938	          0x4863d0	                         movsxd rdx, eax	      1076	mark.c	FUNCTION_26	IF_2	FOR_2	IF_4
0x293b	          0x4889d0	                            mov rax, rdx	      1076	mark.c	FUNCTION_26	IF_2	FOR_2	IF_4
0x293e	        0x48c1e002	                              shl rax, 2	      1076	mark.c	FUNCTION_26	IF_2	FOR_2	IF_4
0x2942	          0x4801d0	                            add rax, rdx	      1076	mark.c	FUNCTION_26	IF_2	FOR_2	IF_4
0x2945	        0x48c1e003	                              shl rax, 3	      1076	mark.c	FUNCTION_26	IF_2	FOR_2	IF_4
0x2949	    0x480500000000	                              add rax, 0	      1076	mark.c	FUNCTION_26	IF_2	FOR_2	IF_4
0x294f	            0x8b00	                    mov eax, dword [rax]	      1076	mark.c	FUNCTION_26	IF_2	FOR_2	IF_4
0x2951	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      1076	mark.c	FUNCTION_26	IF_2	FOR_2	IF_4
0x2954	     0xf858f000000	                           jne 0x4002a29	      1076	mark.c	FUNCTION_26	IF_2	FOR_2	IF_4
0x295a	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1077	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x295d	          0x4863d0	                         movsxd rdx, eax	      1077	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x2960	          0x4889d0	                            mov rax, rdx	      1077	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x2963	        0x48c1e002	                              shl rax, 2	      1077	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x2967	          0x4801d0	                            add rax, rdx	      1077	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x296a	        0x48c1e003	                              shl rax, 3	      1077	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x296e	    0x480500000000	                              add rax, 0	      1077	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x2974	        0x488945f8	                mov qword [rbp - 8], rax	      1077	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x2978	        0x488b45f8	                mov rax, qword [rbp - 8]	      1077	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x297c	          0x488b00	                    mov rax, qword [rax]	      1077	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x297f	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1077	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x2983	            0x7c3b	                            jl 0x4002a00	      1077	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x2985	        0x488b45f8	                mov rax, qword [rbp - 8]	      1077	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x2989	          0x488b00	                    mov rax, qword [rax]	      1077	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x298c	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      1077	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x2990	            0x7f2e	                            jg 0x4002a00	      1077	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x2992	    0x48817dc8ffff	     cmp qword [rbp - 0x38], 0x7fffffff 	      1077	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x299a	            0x750d	                           jne 0x40029e9	      1077	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x299c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1077	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x29a0	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1077	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x29a4	          0x488910	                    mov qword [rax], rdx	      1077	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x29a7	            0xeb40	                           jmp 0x4002a29	      1077	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x29a9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1077	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x29ad	          0x488b10	                    mov rdx, qword [rax]	      1077	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x29b0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1077	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x29b4	          0x4801c2	                            add rdx, rax	      1077	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x29b7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1077	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x29bb	          0x488910	                    mov qword [rax], rdx	      1077	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x29be	            0xeb29	                           jmp 0x4002a29	      1077	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x29c0	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1077	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x29c5	            0x7422	                            je 0x4002a29	      1077	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x29c7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1077	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x29cb	          0x488b00	                    mov rax, qword [rax]	      1077	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x29ce	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      1077	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x29d2	            0x7e15	                           jle 0x4002a29	      1077	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x29d4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1077	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x29d8	          0x488b10	                    mov rdx, qword [rax]	      1077	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x29db	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1077	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x29df	          0x4801c2	                            add rdx, rax	      1077	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x29e2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1077	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x29e6	          0x488910	                    mov qword [rax], rdx	      1077	mark.c	FUNCTION_26	IF_2	FOR_2	CALL_4
0x29e9	        0x8345e001	               add dword [rbp - 0x20], 1	      1074	mark.c	FUNCTION_26	IF_2	FOR_2
0x29ed	        0x837de023	           cmp dword [rbp - 0x20], 0x23 	      1074	mark.c	FUNCTION_26	IF_2	FOR_2
0x29f1	     0xf8e3effffff	                           jle 0x4002975	      1074	mark.c	FUNCTION_26	IF_2	FOR_2
0x29f7	    0x488b05000000	            mov rax, qword [0x04002a3e] 	      1081	mark.c	FUNCTION_26	IF_2	CALL_5
0x29fe	    0x480528030000	                          add rax, 0x328	      1081	mark.c	FUNCTION_26	IF_2	CALL_5
0x2a04	        0x488945f8	                mov qword [rbp - 8], rax	      1081	mark.c	FUNCTION_26	IF_2	CALL_5
0x2a08	        0x488b45f8	                mov rax, qword [rbp - 8]	      1081	mark.c	FUNCTION_26	IF_2	CALL_5
0x2a0c	          0x488b00	                    mov rax, qword [rax]	      1081	mark.c	FUNCTION_26	IF_2	CALL_5
0x2a0f	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1081	mark.c	FUNCTION_26	IF_2	CALL_5
0x2a13	            0x7c3b	                            jl 0x4002a90	      1081	mark.c	FUNCTION_26	IF_2	CALL_5
0x2a15	        0x488b45f8	                mov rax, qword [rbp - 8]	      1081	mark.c	FUNCTION_26	IF_2	CALL_5
0x2a19	          0x488b00	                    mov rax, qword [rax]	      1081	mark.c	FUNCTION_26	IF_2	CALL_5
0x2a1c	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      1081	mark.c	FUNCTION_26	IF_2	CALL_5
0x2a20	            0x7f2e	                            jg 0x4002a90	      1081	mark.c	FUNCTION_26	IF_2	CALL_5
0x2a22	    0x48817dc8ffff	     cmp qword [rbp - 0x38], 0x7fffffff 	      1081	mark.c	FUNCTION_26	IF_2	CALL_5
0x2a2a	            0x750d	                           jne 0x4002a79	      1081	mark.c	FUNCTION_26	IF_2	CALL_5
0x2a2c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1081	mark.c	FUNCTION_26	IF_2	CALL_5
0x2a30	    0x48c700000000	                      mov qword [rax], 0	      1081	mark.c	FUNCTION_26	IF_2	CALL_5
0x2a37	            0xeb40	                           jmp 0x4002ab9	      1081	mark.c	FUNCTION_26	IF_2	CALL_5
0x2a39	        0x488b45f8	                mov rax, qword [rbp - 8]	      1081	mark.c	FUNCTION_26	IF_2	CALL_5
0x2a3d	          0x488b10	                    mov rdx, qword [rax]	      1081	mark.c	FUNCTION_26	IF_2	CALL_5
0x2a40	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1081	mark.c	FUNCTION_26	IF_2	CALL_5
0x2a44	          0x4801c2	                            add rdx, rax	      1081	mark.c	FUNCTION_26	IF_2	CALL_5
0x2a47	        0x488b45f8	                mov rax, qword [rbp - 8]	      1081	mark.c	FUNCTION_26	IF_2	CALL_5
0x2a4b	          0x488910	                    mov qword [rax], rdx	      1081	mark.c	FUNCTION_26	IF_2	CALL_5
0x2a4e	            0xeb29	                           jmp 0x4002ab9	      1081	mark.c	FUNCTION_26	IF_2	CALL_5
0x2a50	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1081	mark.c	FUNCTION_26	IF_2	CALL_5
0x2a55	            0x7422	                            je 0x4002ab9	      1081	mark.c	FUNCTION_26	IF_2	CALL_5
0x2a57	        0x488b45f8	                mov rax, qword [rbp - 8]	      1081	mark.c	FUNCTION_26	IF_2	CALL_5
0x2a5b	          0x488b00	                    mov rax, qword [rax]	      1081	mark.c	FUNCTION_26	IF_2	CALL_5
0x2a5e	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      1081	mark.c	FUNCTION_26	IF_2	CALL_5
0x2a62	            0x7e15	                           jle 0x4002ab9	      1081	mark.c	FUNCTION_26	IF_2	CALL_5
0x2a64	        0x488b45f8	                mov rax, qword [rbp - 8]	      1081	mark.c	FUNCTION_26	IF_2	CALL_5
0x2a68	          0x488b10	                    mov rdx, qword [rax]	      1081	mark.c	FUNCTION_26	IF_2	CALL_5
0x2a6b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1081	mark.c	FUNCTION_26	IF_2	CALL_5
0x2a6f	          0x4801c2	                            add rdx, rax	      1081	mark.c	FUNCTION_26	IF_2	CALL_5
0x2a72	        0x488b45f8	                mov rax, qword [rbp - 8]	      1081	mark.c	FUNCTION_26	IF_2	CALL_5
0x2a76	          0x488910	                    mov qword [rax], rdx	      1081	mark.c	FUNCTION_26	IF_2	CALL_5
0x2a79	    0x488b05000000	            mov rax, qword [0x04002ac0] 	      1084	mark.c	FUNCTION_26	IF_2	CALL_6
0x2a80	    0x480538030000	                          add rax, 0x338	      1084	mark.c	FUNCTION_26	IF_2	CALL_6
0x2a86	        0x488945f8	                mov qword [rbp - 8], rax	      1084	mark.c	FUNCTION_26	IF_2	CALL_6
0x2a8a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1084	mark.c	FUNCTION_26	IF_2	CALL_6
0x2a8e	          0x488b00	                    mov rax, qword [rax]	      1084	mark.c	FUNCTION_26	IF_2	CALL_6
0x2a91	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1084	mark.c	FUNCTION_26	IF_2	CALL_6
0x2a95	            0x7c3b	                            jl 0x4002b12	      1084	mark.c	FUNCTION_26	IF_2	CALL_6
0x2a97	        0x488b45f8	                mov rax, qword [rbp - 8]	      1084	mark.c	FUNCTION_26	IF_2	CALL_6
0x2a9b	          0x488b00	                    mov rax, qword [rax]	      1084	mark.c	FUNCTION_26	IF_2	CALL_6
0x2a9e	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      1084	mark.c	FUNCTION_26	IF_2	CALL_6
0x2aa2	            0x7f2e	                            jg 0x4002b12	      1084	mark.c	FUNCTION_26	IF_2	CALL_6
0x2aa4	    0x48817dc8ffff	     cmp qword [rbp - 0x38], 0x7fffffff 	      1084	mark.c	FUNCTION_26	IF_2	CALL_6
0x2aac	            0x750d	                           jne 0x4002afb	      1084	mark.c	FUNCTION_26	IF_2	CALL_6
0x2aae	        0x488b45f8	                mov rax, qword [rbp - 8]	      1084	mark.c	FUNCTION_26	IF_2	CALL_6
0x2ab2	    0x48c700000000	                      mov qword [rax], 0	      1084	mark.c	FUNCTION_26	IF_2	CALL_6
0x2ab9	            0xeb40	                           jmp 0x4002b3b	      1084	mark.c	FUNCTION_26	IF_2	CALL_6
0x2abb	        0x488b45f8	                mov rax, qword [rbp - 8]	      1084	mark.c	FUNCTION_26	IF_2	CALL_6
0x2abf	          0x488b10	                    mov rdx, qword [rax]	      1084	mark.c	FUNCTION_26	IF_2	CALL_6
0x2ac2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1084	mark.c	FUNCTION_26	IF_2	CALL_6
0x2ac6	          0x4801c2	                            add rdx, rax	      1084	mark.c	FUNCTION_26	IF_2	CALL_6
0x2ac9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1084	mark.c	FUNCTION_26	IF_2	CALL_6
0x2acd	          0x488910	                    mov qword [rax], rdx	      1084	mark.c	FUNCTION_26	IF_2	CALL_6
0x2ad0	            0xeb29	                           jmp 0x4002b3b	      1084	mark.c	FUNCTION_26	IF_2	CALL_6
0x2ad2	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1084	mark.c	FUNCTION_26	IF_2	CALL_6
0x2ad7	            0x7422	                            je 0x4002b3b	      1084	mark.c	FUNCTION_26	IF_2	CALL_6
0x2ad9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1084	mark.c	FUNCTION_26	IF_2	CALL_6
0x2add	          0x488b00	                    mov rax, qword [rax]	      1084	mark.c	FUNCTION_26	IF_2	CALL_6
0x2ae0	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      1084	mark.c	FUNCTION_26	IF_2	CALL_6
0x2ae4	            0x7e15	                           jle 0x4002b3b	      1084	mark.c	FUNCTION_26	IF_2	CALL_6
0x2ae6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1084	mark.c	FUNCTION_26	IF_2	CALL_6
0x2aea	          0x488b10	                    mov rdx, qword [rax]	      1084	mark.c	FUNCTION_26	IF_2	CALL_6
0x2aed	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1084	mark.c	FUNCTION_26	IF_2	CALL_6
0x2af1	          0x4801c2	                            add rdx, rax	      1084	mark.c	FUNCTION_26	IF_2	CALL_6
0x2af4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1084	mark.c	FUNCTION_26	IF_2	CALL_6
0x2af8	          0x488910	                    mov qword [rax], rdx	      1084	mark.c	FUNCTION_26	IF_2	CALL_6
0x2afb	    0x488b05000000	            mov rax, qword [0x04002b42] 	      1087	mark.c	FUNCTION_26	IF_2	IF_5	CALL_7
0x2b02	    0x488b90180300	           mov rdx, qword [rax + 0x318] 	      1087	mark.c	FUNCTION_26	IF_2	IF_5	CALL_7
0x2b09	    0x488b05000000	            mov rax, qword [0x04002b50] 	      1087	mark.c	FUNCTION_26	IF_2	IF_5	CALL_7
0x2b10	          0x4839c2	                            cmp rdx, rax	      1087	mark.c	FUNCTION_26	IF_2	IF_5	CALL_7
0x2b13	            0x7532	                           jne 0x4002b87	      1087	mark.c	FUNCTION_26	IF_2	IF_5	CALL_7
0x2b15	    0x488b05000000	            mov rax, qword [0x04002b5c] 	      1087	mark.c	FUNCTION_26	IF_2	IF_5	CALL_7
0x2b1c	    0x8b9020030000	           mov edx, dword [rax + 0x320] 	      1087	mark.c	FUNCTION_26	IF_2	IF_5	CALL_7
0x2b22	    0x8b0500000000	            mov eax, dword [0x04002b68] 	      1087	mark.c	FUNCTION_26	IF_2	IF_5	CALL_7
0x2b28	            0x39c2	                            cmp edx, eax	      1087	mark.c	FUNCTION_26	IF_2	IF_5	CALL_7
0x2b2a	            0x751b	                           jne 0x4002b87	      1087	mark.c	FUNCTION_26	IF_2	IF_5	CALL_7
0x2b2c	    0x488b05000000	            mov rax, qword [0x04002b73] 	      1087	mark.c	FUNCTION_26	IF_2	IF_5	CALL_7
0x2b33	    0x8b9024030000	           mov edx, dword [rax + 0x324] 	      1087	mark.c	FUNCTION_26	IF_2	IF_5	CALL_7
0x2b39	    0x8b0500000000	            mov eax, dword [0x04002b7f] 	      1087	mark.c	FUNCTION_26	IF_2	IF_5	CALL_7
0x2b3f	            0x39c2	                            cmp edx, eax	      1087	mark.c	FUNCTION_26	IF_2	IF_5	CALL_7
0x2b41	     0xf8482000000	                            je 0x4002c09	      1087	mark.c	FUNCTION_26	IF_2	IF_5	CALL_7
0x2b47	    0x488b05000000	            mov rax, qword [0x04002b8e] 	      1088	mark.c	FUNCTION_26	IF_2	CALL_8
0x2b4e	    0x480518030000	                          add rax, 0x318	      1088	mark.c	FUNCTION_26	IF_2	CALL_8
0x2b54	        0x488945f8	                mov qword [rbp - 8], rax	      1088	mark.c	FUNCTION_26	IF_2	CALL_8
0x2b58	        0x488b45f8	                mov rax, qword [rbp - 8]	      1088	mark.c	FUNCTION_26	IF_2	CALL_8
0x2b5c	          0x488b00	                    mov rax, qword [rax]	      1088	mark.c	FUNCTION_26	IF_2	CALL_8
0x2b5f	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1088	mark.c	FUNCTION_26	IF_2	CALL_8
0x2b63	            0x7c3b	                            jl 0x4002be0	      1088	mark.c	FUNCTION_26	IF_2	CALL_8
0x2b65	        0x488b45f8	                mov rax, qword [rbp - 8]	      1088	mark.c	FUNCTION_26	IF_2	CALL_8
0x2b69	          0x488b00	                    mov rax, qword [rax]	      1088	mark.c	FUNCTION_26	IF_2	CALL_8
0x2b6c	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      1088	mark.c	FUNCTION_26	IF_2	CALL_8
0x2b70	            0x7f2e	                            jg 0x4002be0	      1088	mark.c	FUNCTION_26	IF_2	CALL_8
0x2b72	    0x48817dc8ffff	     cmp qword [rbp - 0x38], 0x7fffffff 	      1088	mark.c	FUNCTION_26	IF_2	CALL_8
0x2b7a	            0x750d	                           jne 0x4002bc9	      1088	mark.c	FUNCTION_26	IF_2	CALL_8
0x2b7c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1088	mark.c	FUNCTION_26	IF_2	CALL_8
0x2b80	    0x48c700000000	                      mov qword [rax], 0	      1088	mark.c	FUNCTION_26	IF_2	CALL_8
0x2b87	            0xeb40	                           jmp 0x4002c09	      1088	mark.c	FUNCTION_26	IF_2	CALL_8
0x2b89	        0x488b45f8	                mov rax, qword [rbp - 8]	      1088	mark.c	FUNCTION_26	IF_2	CALL_8
0x2b8d	          0x488b10	                    mov rdx, qword [rax]	      1088	mark.c	FUNCTION_26	IF_2	CALL_8
0x2b90	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1088	mark.c	FUNCTION_26	IF_2	CALL_8
0x2b94	          0x4801c2	                            add rdx, rax	      1088	mark.c	FUNCTION_26	IF_2	CALL_8
0x2b97	        0x488b45f8	                mov rax, qword [rbp - 8]	      1088	mark.c	FUNCTION_26	IF_2	CALL_8
0x2b9b	          0x488910	                    mov qword [rax], rdx	      1088	mark.c	FUNCTION_26	IF_2	CALL_8
0x2b9e	            0xeb29	                           jmp 0x4002c09	      1088	mark.c	FUNCTION_26	IF_2	CALL_8
0x2ba0	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1088	mark.c	FUNCTION_26	IF_2	CALL_8
0x2ba5	            0x7422	                            je 0x4002c09	      1088	mark.c	FUNCTION_26	IF_2	CALL_8
0x2ba7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1088	mark.c	FUNCTION_26	IF_2	CALL_8
0x2bab	          0x488b00	                    mov rax, qword [rax]	      1088	mark.c	FUNCTION_26	IF_2	CALL_8
0x2bae	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      1088	mark.c	FUNCTION_26	IF_2	CALL_8
0x2bb2	            0x7e15	                           jle 0x4002c09	      1088	mark.c	FUNCTION_26	IF_2	CALL_8
0x2bb4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1088	mark.c	FUNCTION_26	IF_2	CALL_8
0x2bb8	          0x488b10	                    mov rdx, qword [rax]	      1088	mark.c	FUNCTION_26	IF_2	CALL_8
0x2bbb	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1088	mark.c	FUNCTION_26	IF_2	CALL_8
0x2bbf	          0x4801c2	                            add rdx, rax	      1088	mark.c	FUNCTION_26	IF_2	CALL_8
0x2bc2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1088	mark.c	FUNCTION_26	IF_2	CALL_8
0x2bc6	          0x488910	                    mov qword [rax], rdx	      1088	mark.c	FUNCTION_26	IF_2	CALL_8
0x2bc9	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      1093	mark.c	FUNCTION_26	IF_2	FOR_3
0x2bd0	      0xe995000000	                           jmp 0x4002caa	      1093	mark.c	FUNCTION_26	IF_2	FOR_3
0x2bd5	    0x488b05000000	            mov rax, qword [0x04002c1c] 	      1094	mark.c	FUNCTION_26	IF_2	CALL_9
0x2bdc	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      1094	mark.c	FUNCTION_26	IF_2	CALL_9
0x2bdf	          0x4863d2	                         movsxd rdx, edx	      1094	mark.c	FUNCTION_26	IF_2	CALL_9
0x2be2	        0x4883c234	                           add rdx, 0x34	      1094	mark.c	FUNCTION_26	IF_2	CALL_9
0x2be6	        0x48c1e204	                              shl rdx, 4	      1094	mark.c	FUNCTION_26	IF_2	CALL_9
0x2bea	          0x4801d0	                            add rax, rdx	      1094	mark.c	FUNCTION_26	IF_2	CALL_9
0x2bed	        0x4883c008	                              add rax, 8	      1094	mark.c	FUNCTION_26	IF_2	CALL_9
0x2bf1	        0x488945f8	                mov qword [rbp - 8], rax	      1094	mark.c	FUNCTION_26	IF_2	CALL_9
0x2bf5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1094	mark.c	FUNCTION_26	IF_2	CALL_9
0x2bf9	          0x488b00	                    mov rax, qword [rax]	      1094	mark.c	FUNCTION_26	IF_2	CALL_9
0x2bfc	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1094	mark.c	FUNCTION_26	IF_2	CALL_9
0x2c00	            0x7c3b	                            jl 0x4002c7d	      1094	mark.c	FUNCTION_26	IF_2	CALL_9
0x2c02	        0x488b45f8	                mov rax, qword [rbp - 8]	      1094	mark.c	FUNCTION_26	IF_2	CALL_9
0x2c06	          0x488b00	                    mov rax, qword [rax]	      1094	mark.c	FUNCTION_26	IF_2	CALL_9
0x2c09	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      1094	mark.c	FUNCTION_26	IF_2	CALL_9
0x2c0d	            0x7f2e	                            jg 0x4002c7d	      1094	mark.c	FUNCTION_26	IF_2	CALL_9
0x2c0f	    0x48817dc8ffff	     cmp qword [rbp - 0x38], 0x7fffffff 	      1094	mark.c	FUNCTION_26	IF_2	CALL_9
0x2c17	            0x750d	                           jne 0x4002c66	      1094	mark.c	FUNCTION_26	IF_2	CALL_9
0x2c19	        0x488b45f8	                mov rax, qword [rbp - 8]	      1094	mark.c	FUNCTION_26	IF_2	CALL_9
0x2c1d	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1094	mark.c	FUNCTION_26	IF_2	CALL_9
0x2c21	          0x488910	                    mov qword [rax], rdx	      1094	mark.c	FUNCTION_26	IF_2	CALL_9
0x2c24	            0xeb40	                           jmp 0x4002ca6	      1094	mark.c	FUNCTION_26	IF_2	CALL_9
0x2c26	        0x488b45f8	                mov rax, qword [rbp - 8]	      1094	mark.c	FUNCTION_26	IF_2	CALL_9
0x2c2a	          0x488b10	                    mov rdx, qword [rax]	      1094	mark.c	FUNCTION_26	IF_2	CALL_9
0x2c2d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1094	mark.c	FUNCTION_26	IF_2	CALL_9
0x2c31	          0x4801c2	                            add rdx, rax	      1094	mark.c	FUNCTION_26	IF_2	CALL_9
0x2c34	        0x488b45f8	                mov rax, qword [rbp - 8]	      1094	mark.c	FUNCTION_26	IF_2	CALL_9
0x2c38	          0x488910	                    mov qword [rax], rdx	      1094	mark.c	FUNCTION_26	IF_2	CALL_9
0x2c3b	            0xeb29	                           jmp 0x4002ca6	      1094	mark.c	FUNCTION_26	IF_2	CALL_9
0x2c3d	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1094	mark.c	FUNCTION_26	IF_2	CALL_9
0x2c42	            0x7422	                            je 0x4002ca6	      1094	mark.c	FUNCTION_26	IF_2	CALL_9
0x2c44	        0x488b45f8	                mov rax, qword [rbp - 8]	      1094	mark.c	FUNCTION_26	IF_2	CALL_9
0x2c48	          0x488b00	                    mov rax, qword [rax]	      1094	mark.c	FUNCTION_26	IF_2	CALL_9
0x2c4b	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      1094	mark.c	FUNCTION_26	IF_2	CALL_9
0x2c4f	            0x7e15	                           jle 0x4002ca6	      1094	mark.c	FUNCTION_26	IF_2	CALL_9
0x2c51	        0x488b45f8	                mov rax, qword [rbp - 8]	      1094	mark.c	FUNCTION_26	IF_2	CALL_9
0x2c55	          0x488b10	                    mov rdx, qword [rax]	      1094	mark.c	FUNCTION_26	IF_2	CALL_9
0x2c58	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1094	mark.c	FUNCTION_26	IF_2	CALL_9
0x2c5c	          0x4801c2	                            add rdx, rax	      1094	mark.c	FUNCTION_26	IF_2	CALL_9
0x2c5f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1094	mark.c	FUNCTION_26	IF_2	CALL_9
0x2c63	          0x488910	                    mov qword [rax], rdx	      1094	mark.c	FUNCTION_26	IF_2	CALL_9
0x2c66	        0x8345e001	               add dword [rbp - 0x20], 1	      1093	mark.c	FUNCTION_26	IF_2	FOR_3
0x2c6a	    0x488b05000000	            mov rax, qword [0x04002cb1] 	      1093	mark.c	FUNCTION_26	IF_2	FOR_3
0x2c71	    0x8b8088090000	           mov eax, dword [rax + 0x988] 	      1093	mark.c	FUNCTION_26	IF_2	FOR_3
0x2c77	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	      1093	mark.c	FUNCTION_26	IF_2	FOR_3
0x2c7a	     0xf8f55ffffff	                            jg 0x4002c15	      1093	mark.c	FUNCTION_26	IF_2	FOR_3
0x2c80	    0x488b05000000	            mov rax, qword [0x04002cc7] 	      1098	mark.c	FUNCTION_26	IF_2	CALL_10
0x2c87	    0x4805e8020000	                          add rax, 0x2e8	      1098	mark.c	FUNCTION_26	IF_2	CALL_10
0x2c8d	        0x488945f8	                mov qword [rbp - 8], rax	      1098	mark.c	FUNCTION_26	IF_2	CALL_10
0x2c91	        0x488b45f8	                mov rax, qword [rbp - 8]	      1098	mark.c	FUNCTION_26	IF_2	CALL_10
0x2c95	          0x488b00	                    mov rax, qword [rax]	      1098	mark.c	FUNCTION_26	IF_2	CALL_10
0x2c98	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1098	mark.c	FUNCTION_26	IF_2	CALL_10
0x2c9c	            0x7c3b	                            jl 0x4002d19	      1098	mark.c	FUNCTION_26	IF_2	CALL_10
0x2c9e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1098	mark.c	FUNCTION_26	IF_2	CALL_10
0x2ca2	          0x488b00	                    mov rax, qword [rax]	      1098	mark.c	FUNCTION_26	IF_2	CALL_10
0x2ca5	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      1098	mark.c	FUNCTION_26	IF_2	CALL_10
0x2ca9	            0x7f2e	                            jg 0x4002d19	      1098	mark.c	FUNCTION_26	IF_2	CALL_10
0x2cab	    0x48817dc8ffff	     cmp qword [rbp - 0x38], 0x7fffffff 	      1098	mark.c	FUNCTION_26	IF_2	CALL_10
0x2cb3	            0x750d	                           jne 0x4002d02	      1098	mark.c	FUNCTION_26	IF_2	CALL_10
0x2cb5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1098	mark.c	FUNCTION_26	IF_2	CALL_10
0x2cb9	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1098	mark.c	FUNCTION_26	IF_2	CALL_10
0x2cbd	          0x488910	                    mov qword [rax], rdx	      1098	mark.c	FUNCTION_26	IF_2	CALL_10
0x2cc0	            0xeb40	                           jmp 0x4002d42	      1098	mark.c	FUNCTION_26	IF_2	CALL_10
0x2cc2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1098	mark.c	FUNCTION_26	IF_2	CALL_10
0x2cc6	          0x488b10	                    mov rdx, qword [rax]	      1098	mark.c	FUNCTION_26	IF_2	CALL_10
0x2cc9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1098	mark.c	FUNCTION_26	IF_2	CALL_10
0x2ccd	          0x4801c2	                            add rdx, rax	      1098	mark.c	FUNCTION_26	IF_2	CALL_10
0x2cd0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1098	mark.c	FUNCTION_26	IF_2	CALL_10
0x2cd4	          0x488910	                    mov qword [rax], rdx	      1098	mark.c	FUNCTION_26	IF_2	CALL_10
0x2cd7	            0xeb29	                           jmp 0x4002d42	      1098	mark.c	FUNCTION_26	IF_2	CALL_10
0x2cd9	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1098	mark.c	FUNCTION_26	IF_2	CALL_10
0x2cde	            0x7422	                            je 0x4002d42	      1098	mark.c	FUNCTION_26	IF_2	CALL_10
0x2ce0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1098	mark.c	FUNCTION_26	IF_2	CALL_10
0x2ce4	          0x488b00	                    mov rax, qword [rax]	      1098	mark.c	FUNCTION_26	IF_2	CALL_10
0x2ce7	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      1098	mark.c	FUNCTION_26	IF_2	CALL_10
0x2ceb	            0x7e15	                           jle 0x4002d42	      1098	mark.c	FUNCTION_26	IF_2	CALL_10
0x2ced	        0x488b45f8	                mov rax, qword [rbp - 8]	      1098	mark.c	FUNCTION_26	IF_2	CALL_10
0x2cf1	          0x488b10	                    mov rdx, qword [rax]	      1098	mark.c	FUNCTION_26	IF_2	CALL_10
0x2cf4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1098	mark.c	FUNCTION_26	IF_2	CALL_10
0x2cf8	          0x4801c2	                            add rdx, rax	      1098	mark.c	FUNCTION_26	IF_2	CALL_10
0x2cfb	        0x488b45f8	                mov rax, qword [rbp - 8]	      1098	mark.c	FUNCTION_26	IF_2	CALL_10
0x2cff	          0x488910	                    mov qword [rax], rdx	      1098	mark.c	FUNCTION_26	IF_2	CALL_10
0x2d02	    0x488b05000000	            mov rax, qword [0x04002d49] 	      1099	mark.c	FUNCTION_26	IF_2	CALL_11
0x2d09	    0x4805f8020000	                          add rax, 0x2f8	      1099	mark.c	FUNCTION_26	IF_2	CALL_11
0x2d0f	        0x488945f8	                mov qword [rbp - 8], rax	      1099	mark.c	FUNCTION_26	IF_2	CALL_11
0x2d13	        0x488b45f8	                mov rax, qword [rbp - 8]	      1099	mark.c	FUNCTION_26	IF_2	CALL_11
0x2d17	          0x488b00	                    mov rax, qword [rax]	      1099	mark.c	FUNCTION_26	IF_2	CALL_11
0x2d1a	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1099	mark.c	FUNCTION_26	IF_2	CALL_11
0x2d1e	            0x7c3b	                            jl 0x4002d9b	      1099	mark.c	FUNCTION_26	IF_2	CALL_11
0x2d20	        0x488b45f8	                mov rax, qword [rbp - 8]	      1099	mark.c	FUNCTION_26	IF_2	CALL_11
0x2d24	          0x488b00	                    mov rax, qword [rax]	      1099	mark.c	FUNCTION_26	IF_2	CALL_11
0x2d27	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      1099	mark.c	FUNCTION_26	IF_2	CALL_11
0x2d2b	            0x7f2e	                            jg 0x4002d9b	      1099	mark.c	FUNCTION_26	IF_2	CALL_11
0x2d2d	    0x48817dc8ffff	     cmp qword [rbp - 0x38], 0x7fffffff 	      1099	mark.c	FUNCTION_26	IF_2	CALL_11
0x2d35	            0x750d	                           jne 0x4002d84	      1099	mark.c	FUNCTION_26	IF_2	CALL_11
0x2d37	        0x488b45f8	                mov rax, qword [rbp - 8]	      1099	mark.c	FUNCTION_26	IF_2	CALL_11
0x2d3b	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1099	mark.c	FUNCTION_26	IF_2	CALL_11
0x2d3f	          0x488910	                    mov qword [rax], rdx	      1099	mark.c	FUNCTION_26	IF_2	CALL_11
0x2d42	            0xeb40	                           jmp 0x4002dc4	      1099	mark.c	FUNCTION_26	IF_2	CALL_11
0x2d44	        0x488b45f8	                mov rax, qword [rbp - 8]	      1099	mark.c	FUNCTION_26	IF_2	CALL_11
0x2d48	          0x488b10	                    mov rdx, qword [rax]	      1099	mark.c	FUNCTION_26	IF_2	CALL_11
0x2d4b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1099	mark.c	FUNCTION_26	IF_2	CALL_11
0x2d4f	          0x4801c2	                            add rdx, rax	      1099	mark.c	FUNCTION_26	IF_2	CALL_11
0x2d52	        0x488b45f8	                mov rax, qword [rbp - 8]	      1099	mark.c	FUNCTION_26	IF_2	CALL_11
0x2d56	          0x488910	                    mov qword [rax], rdx	      1099	mark.c	FUNCTION_26	IF_2	CALL_11
0x2d59	            0xeb29	                           jmp 0x4002dc4	      1099	mark.c	FUNCTION_26	IF_2	CALL_11
0x2d5b	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1099	mark.c	FUNCTION_26	IF_2	CALL_11
0x2d60	            0x7422	                            je 0x4002dc4	      1099	mark.c	FUNCTION_26	IF_2	CALL_11
0x2d62	        0x488b45f8	                mov rax, qword [rbp - 8]	      1099	mark.c	FUNCTION_26	IF_2	CALL_11
0x2d66	          0x488b00	                    mov rax, qword [rax]	      1099	mark.c	FUNCTION_26	IF_2	CALL_11
0x2d69	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      1099	mark.c	FUNCTION_26	IF_2	CALL_11
0x2d6d	            0x7e15	                           jle 0x4002dc4	      1099	mark.c	FUNCTION_26	IF_2	CALL_11
0x2d6f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1099	mark.c	FUNCTION_26	IF_2	CALL_11
0x2d73	          0x488b10	                    mov rdx, qword [rax]	      1099	mark.c	FUNCTION_26	IF_2	CALL_11
0x2d76	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1099	mark.c	FUNCTION_26	IF_2	CALL_11
0x2d7a	          0x4801c2	                            add rdx, rax	      1099	mark.c	FUNCTION_26	IF_2	CALL_11
0x2d7d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1099	mark.c	FUNCTION_26	IF_2	CALL_11
0x2d81	          0x488910	                    mov qword [rax], rdx	      1099	mark.c	FUNCTION_26	IF_2	CALL_11
0x2d84	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	      1103	mark.c	FUNCTION_26	IF_2	CALL_12
0x2d88	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      1103	mark.c	FUNCTION_26	IF_2	CALL_12
0x2d8c	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1103	mark.c	FUNCTION_26	IF_2	CALL_12
0x2d90	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1103	mark.c	FUNCTION_26	IF_2	CALL_12
0x2d94	          0x4989f0	                             mov r8, rsi	      1103	mark.c	FUNCTION_26	IF_2	CALL_12
0x2d97	          0x4889c6	                            mov rsi, rax	      1103	mark.c	FUNCTION_26	IF_2	CALL_12
0x2d9a	      0xbf00000000	                              mov edi, 0	      1103	mark.c	FUNCTION_26	IF_2	CALL_12
0x2d9f	      0xe800000000	                          call 0x4002de4	      1103	mark.c	FUNCTION_26	IF_2	CALL_12
0x2da4	    0x488b05000000	            mov rax, qword [0x04002deb] 	      1105	mark.c	FUNCTION_26	IF_2	CALL_13
0x2dab	        0x488945f0	             mov qword [rbp - 0x10], rax	      1105	mark.c	FUNCTION_26	IF_2	CALL_13
0x2daf	            0xeb61	                           jmp 0x4002e52	      1105	mark.c	FUNCTION_26	IF_2	CALL_13
0x2db1	    0x488b05000000	            mov rax, qword [0x04002df8] 	      1105	mark.c	FUNCTION_26	IF_2	CALL_13
0x2db8	        0x483945f0	            cmp qword [rbp - 0x10], rax 	      1105	mark.c	FUNCTION_26	IF_2	CALL_13
0x2dbc	            0x740a	                            je 0x4002e08	      1105	mark.c	FUNCTION_26	IF_2	CALL_13
0x2dbe	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1105	mark.c	FUNCTION_26	IF_2	CALL_13
0x2dc2	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1105	mark.c	FUNCTION_26	IF_2	CALL_13
0x2dc6	            0xeb07	                           jmp 0x4002e0f	      1105	mark.c	FUNCTION_26	IF_2	CALL_13
0x2dc8	    0x488b05000000	            mov rax, qword [0x04002e0f] 	      1105	mark.c	FUNCTION_26	IF_2	CALL_13
0x2dcf	        0x488945e8	             mov qword [rbp - 0x18], rax	      1105	mark.c	FUNCTION_26	IF_2	CALL_13
0x2dd3	            0xeb2b	                           jmp 0x4002e40	      1105	mark.c	FUNCTION_26	IF_2	CALL_13
0x2dd5	        0x488b7dc0	             mov rdi, qword [rbp - 0x40]	      1106	mark.c	FUNCTION_26	IF_2	CALL_14
0x2dd9	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      1106	mark.c	FUNCTION_26	IF_2	CALL_14
0x2ddd	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1106	mark.c	FUNCTION_26	IF_2	CALL_14
0x2de1	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	      1106	mark.c	FUNCTION_26	IF_2	CALL_14
0x2de5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1106	mark.c	FUNCTION_26	IF_2	CALL_14
0x2de9	          0x4989f8	                             mov r8, rdi	      1106	mark.c	FUNCTION_26	IF_2	CALL_14
0x2dec	          0x4889c7	                            mov rdi, rax	      1106	mark.c	FUNCTION_26	IF_2	CALL_14
0x2def	      0xe800000000	                          call 0x4002e34	      1106	mark.c	FUNCTION_26	IF_2	CALL_14
0x2df4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1105	mark.c	FUNCTION_26	IF_2	CALL_13
0x2df8	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1105	mark.c	FUNCTION_26	IF_2	CALL_13
0x2dfc	        0x488945e8	             mov qword [rbp - 0x18], rax	      1105	mark.c	FUNCTION_26	IF_2	CALL_13
0x2e00	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1105	mark.c	FUNCTION_26	IF_2	CALL_13
0x2e05	            0x75ce	                           jne 0x4002e15	      1105	mark.c	FUNCTION_26	IF_2	CALL_13
0x2e07	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1105	mark.c	FUNCTION_26	IF_2	CALL_13
0x2e0b	          0x488b00	                    mov rax, qword [rax]	      1105	mark.c	FUNCTION_26	IF_2	CALL_13
0x2e0e	        0x488945f0	             mov qword [rbp - 0x10], rax	      1105	mark.c	FUNCTION_26	IF_2	CALL_13
0x2e12	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1105	mark.c	FUNCTION_26	IF_2	CALL_13
0x2e17	            0x7598	                           jne 0x4002df1	      1105	mark.c	FUNCTION_26	IF_2	CALL_13
0x2e19	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      1110	mark.c	FUNCTION_26	IF_2	CALL_15
0x2e1d	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1110	mark.c	FUNCTION_26	IF_2	CALL_15
0x2e21	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	      1110	mark.c	FUNCTION_26	IF_2	CALL_15
0x2e25	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1110	mark.c	FUNCTION_26	IF_2	CALL_15
0x2e29	          0x4889c7	                            mov rdi, rax	      1110	mark.c	FUNCTION_26	IF_2	CALL_15
0x2e2c	      0xe800000000	                          call 0x4002e71	      1110	mark.c	FUNCTION_26	IF_2	CALL_15
0x2e31	    0x488b05000000	            mov rax, qword [0x04002e78] 	      1115	mark.c	FUNCTION_26	CALL_16
0x2e38	    0x480580050000	                          add rax, 0x580	      1115	mark.c	FUNCTION_26	CALL_16
0x2e3e	        0x488945f8	                mov qword [rbp - 8], rax	      1115	mark.c	FUNCTION_26	CALL_16
0x2e42	        0x488b45f8	                mov rax, qword [rbp - 8]	      1115	mark.c	FUNCTION_26	CALL_16
0x2e46	          0x488b00	                    mov rax, qword [rax]	      1115	mark.c	FUNCTION_26	CALL_16
0x2e49	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1115	mark.c	FUNCTION_26	CALL_16
0x2e4d	            0x7c3b	                            jl 0x4002eca	      1115	mark.c	FUNCTION_26	CALL_16
0x2e4f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1115	mark.c	FUNCTION_26	CALL_16
0x2e53	          0x488b00	                    mov rax, qword [rax]	      1115	mark.c	FUNCTION_26	CALL_16
0x2e56	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      1115	mark.c	FUNCTION_26	CALL_16
0x2e5a	            0x7f2e	                            jg 0x4002eca	      1115	mark.c	FUNCTION_26	CALL_16
0x2e5c	    0x48817dc8ffff	     cmp qword [rbp - 0x38], 0x7fffffff 	      1115	mark.c	FUNCTION_26	CALL_16
0x2e64	            0x750d	                           jne 0x4002eb3	      1115	mark.c	FUNCTION_26	CALL_16
0x2e66	        0x488b45f8	                mov rax, qword [rbp - 8]	      1115	mark.c	FUNCTION_26	CALL_16
0x2e6a	    0x48c700000000	                      mov qword [rax], 0	      1115	mark.c	FUNCTION_26	CALL_16
0x2e71	            0xeb40	                           jmp 0x4002ef3	      1115	mark.c	FUNCTION_26	CALL_16
0x2e73	        0x488b45f8	                mov rax, qword [rbp - 8]	      1115	mark.c	FUNCTION_26	CALL_16
0x2e77	          0x488b10	                    mov rdx, qword [rax]	      1115	mark.c	FUNCTION_26	CALL_16
0x2e7a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1115	mark.c	FUNCTION_26	CALL_16
0x2e7e	          0x4801c2	                            add rdx, rax	      1115	mark.c	FUNCTION_26	CALL_16
0x2e81	        0x488b45f8	                mov rax, qword [rbp - 8]	      1115	mark.c	FUNCTION_26	CALL_16
0x2e85	          0x488910	                    mov qword [rax], rdx	      1115	mark.c	FUNCTION_26	CALL_16
0x2e88	            0xeb29	                           jmp 0x4002ef3	      1115	mark.c	FUNCTION_26	CALL_16
0x2e8a	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1115	mark.c	FUNCTION_26	CALL_16
0x2e8f	            0x7422	                            je 0x4002ef3	      1115	mark.c	FUNCTION_26	CALL_16
0x2e91	        0x488b45f8	                mov rax, qword [rbp - 8]	      1115	mark.c	FUNCTION_26	CALL_16
0x2e95	          0x488b00	                    mov rax, qword [rax]	      1115	mark.c	FUNCTION_26	CALL_16
0x2e98	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      1115	mark.c	FUNCTION_26	CALL_16
0x2e9c	            0x7e15	                           jle 0x4002ef3	      1115	mark.c	FUNCTION_26	CALL_16
0x2e9e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1115	mark.c	FUNCTION_26	CALL_16
0x2ea2	          0x488b10	                    mov rdx, qword [rax]	      1115	mark.c	FUNCTION_26	CALL_16
0x2ea5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1115	mark.c	FUNCTION_26	CALL_16
0x2ea9	          0x4801c2	                            add rdx, rax	      1115	mark.c	FUNCTION_26	CALL_16
0x2eac	        0x488b45f8	                mov rax, qword [rbp - 8]	      1115	mark.c	FUNCTION_26	CALL_16
0x2eb0	          0x488910	                    mov qword [rax], rdx	      1115	mark.c	FUNCTION_26	CALL_16
0x2eb3	    0x488b05000000	            mov rax, qword [0x04002efa] 	      1118	mark.c	FUNCTION_26	CALL_17
0x2eba	    0x480590050000	                          add rax, 0x590	      1118	mark.c	FUNCTION_26	CALL_17
0x2ec0	        0x488945f8	                mov qword [rbp - 8], rax	      1118	mark.c	FUNCTION_26	CALL_17
0x2ec4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1118	mark.c	FUNCTION_26	CALL_17
0x2ec8	          0x488b00	                    mov rax, qword [rax]	      1118	mark.c	FUNCTION_26	CALL_17
0x2ecb	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1118	mark.c	FUNCTION_26	CALL_17
0x2ecf	            0x7c3b	                            jl 0x4002f4c	      1118	mark.c	FUNCTION_26	CALL_17
0x2ed1	        0x488b45f8	                mov rax, qword [rbp - 8]	      1118	mark.c	FUNCTION_26	CALL_17
0x2ed5	          0x488b00	                    mov rax, qword [rax]	      1118	mark.c	FUNCTION_26	CALL_17
0x2ed8	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      1118	mark.c	FUNCTION_26	CALL_17
0x2edc	            0x7f2e	                            jg 0x4002f4c	      1118	mark.c	FUNCTION_26	CALL_17
0x2ede	    0x48817dc8ffff	     cmp qword [rbp - 0x38], 0x7fffffff 	      1118	mark.c	FUNCTION_26	CALL_17
0x2ee6	            0x750d	                           jne 0x4002f35	      1118	mark.c	FUNCTION_26	CALL_17
0x2ee8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1118	mark.c	FUNCTION_26	CALL_17
0x2eec	    0x48c700000000	                      mov qword [rax], 0	      1118	mark.c	FUNCTION_26	CALL_17
0x2ef3	            0xeb40	                           jmp 0x4002f75	      1118	mark.c	FUNCTION_26	CALL_17
0x2ef5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1118	mark.c	FUNCTION_26	CALL_17
0x2ef9	          0x488b10	                    mov rdx, qword [rax]	      1118	mark.c	FUNCTION_26	CALL_17
0x2efc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1118	mark.c	FUNCTION_26	CALL_17
0x2f00	          0x4801c2	                            add rdx, rax	      1118	mark.c	FUNCTION_26	CALL_17
0x2f03	        0x488b45f8	                mov rax, qword [rbp - 8]	      1118	mark.c	FUNCTION_26	CALL_17
0x2f07	          0x488910	                    mov qword [rax], rdx	      1118	mark.c	FUNCTION_26	CALL_17
0x2f0a	            0xeb29	                           jmp 0x4002f75	      1118	mark.c	FUNCTION_26	CALL_17
0x2f0c	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1118	mark.c	FUNCTION_26	CALL_17
0x2f11	            0x7422	                            je 0x4002f75	      1118	mark.c	FUNCTION_26	CALL_17
0x2f13	        0x488b45f8	                mov rax, qword [rbp - 8]	      1118	mark.c	FUNCTION_26	CALL_17
0x2f17	          0x488b00	                    mov rax, qword [rax]	      1118	mark.c	FUNCTION_26	CALL_17
0x2f1a	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      1118	mark.c	FUNCTION_26	CALL_17
0x2f1e	            0x7e15	                           jle 0x4002f75	      1118	mark.c	FUNCTION_26	CALL_17
0x2f20	        0x488b45f8	                mov rax, qword [rbp - 8]	      1118	mark.c	FUNCTION_26	CALL_17
0x2f24	          0x488b10	                    mov rdx, qword [rax]	      1118	mark.c	FUNCTION_26	CALL_17
0x2f27	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1118	mark.c	FUNCTION_26	CALL_17
0x2f2b	          0x4801c2	                            add rdx, rax	      1118	mark.c	FUNCTION_26	CALL_17
0x2f2e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1118	mark.c	FUNCTION_26	CALL_17
0x2f32	          0x488910	                    mov qword [rax], rdx	      1118	mark.c	FUNCTION_26	CALL_17
0x2f35	    0x488b05000000	            mov rax, qword [0x04002f7c] 	      1121	mark.c	FUNCTION_26	IF_6
0x2f3c	          0x4885c0	                           test rax, rax	      1121	mark.c	FUNCTION_26	IF_6
0x2f3f	            0x7479	                            je 0x4002ffa	      1121	mark.c	FUNCTION_26	IF_6
0x2f41	    0x48c745f80000	                  mov qword [rbp - 8], 0	      1122	mark.c	FUNCTION_26	CALL_18
0x2f49	        0x488b45f8	                mov rax, qword [rbp - 8]	      1122	mark.c	FUNCTION_26	CALL_18
0x2f4d	          0x488b00	                    mov rax, qword [rax]	      1122	mark.c	FUNCTION_26	CALL_18
0x2f50	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1122	mark.c	FUNCTION_26	CALL_18
0x2f54	            0x7c3b	                            jl 0x4002fd1	      1122	mark.c	FUNCTION_26	CALL_18
0x2f56	        0x488b45f8	                mov rax, qword [rbp - 8]	      1122	mark.c	FUNCTION_26	CALL_18
0x2f5a	          0x488b00	                    mov rax, qword [rax]	      1122	mark.c	FUNCTION_26	CALL_18
0x2f5d	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      1122	mark.c	FUNCTION_26	CALL_18
0x2f61	            0x7f2e	                            jg 0x4002fd1	      1122	mark.c	FUNCTION_26	CALL_18
0x2f63	    0x48817dc8ffff	     cmp qword [rbp - 0x38], 0x7fffffff 	      1122	mark.c	FUNCTION_26	CALL_18
0x2f6b	            0x750d	                           jne 0x4002fba	      1122	mark.c	FUNCTION_26	CALL_18
0x2f6d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1122	mark.c	FUNCTION_26	CALL_18
0x2f71	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1122	mark.c	FUNCTION_26	CALL_18
0x2f75	          0x488910	                    mov qword [rax], rdx	      1122	mark.c	FUNCTION_26	CALL_18
0x2f78	            0xeb40	                           jmp 0x4002ffa	      1122	mark.c	FUNCTION_26	CALL_18
0x2f7a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1122	mark.c	FUNCTION_26	CALL_18
0x2f7e	          0x488b10	                    mov rdx, qword [rax]	      1122	mark.c	FUNCTION_26	CALL_18
0x2f81	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1122	mark.c	FUNCTION_26	CALL_18
0x2f85	          0x4801c2	                            add rdx, rax	      1122	mark.c	FUNCTION_26	CALL_18
0x2f88	        0x488b45f8	                mov rax, qword [rbp - 8]	      1122	mark.c	FUNCTION_26	CALL_18
0x2f8c	          0x488910	                    mov qword [rax], rdx	      1122	mark.c	FUNCTION_26	CALL_18
0x2f8f	            0xeb29	                           jmp 0x4002ffa	      1122	mark.c	FUNCTION_26	CALL_18
0x2f91	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1122	mark.c	FUNCTION_26	CALL_18
0x2f96	            0x7422	                            je 0x4002ffa	      1122	mark.c	FUNCTION_26	CALL_18
0x2f98	        0x488b45f8	                mov rax, qword [rbp - 8]	      1122	mark.c	FUNCTION_26	CALL_18
0x2f9c	          0x488b00	                    mov rax, qword [rax]	      1122	mark.c	FUNCTION_26	CALL_18
0x2f9f	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      1122	mark.c	FUNCTION_26	CALL_18
0x2fa3	            0x7e15	                           jle 0x4002ffa	      1122	mark.c	FUNCTION_26	CALL_18
0x2fa5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1122	mark.c	FUNCTION_26	CALL_18
0x2fa9	          0x488b10	                    mov rdx, qword [rax]	      1122	mark.c	FUNCTION_26	CALL_18
0x2fac	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1122	mark.c	FUNCTION_26	CALL_18
0x2fb0	          0x4801c2	                            add rdx, rax	      1122	mark.c	FUNCTION_26	CALL_18
0x2fb3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1122	mark.c	FUNCTION_26	CALL_18
0x2fb7	          0x488910	                    mov qword [rax], rdx	      1122	mark.c	FUNCTION_26	CALL_18
0x2fba	    0x488b05000000	            mov rax, qword [0x04003001] 	      1127	mark.c	FUNCTION_26
0x2fc1	        0x488945f0	             mov qword [rbp - 0x10], rax	      1127	mark.c	FUNCTION_26
0x2fc5	      0xe9d9040000	                           jmp 0x40034e3	      1127	mark.c	FUNCTION_26
0x2fca	    0x488b05000000	            mov rax, qword [0x04003011] 	      1127	mark.c	FUNCTION_26
0x2fd1	        0x483945f0	            cmp qword [rbp - 0x10], rax 	      1127	mark.c	FUNCTION_26
0x2fd5	            0x740a	                            je 0x4003021	      1127	mark.c	FUNCTION_26
0x2fd7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1127	mark.c	FUNCTION_26
0x2fdb	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1127	mark.c	FUNCTION_26
0x2fdf	            0xeb07	                           jmp 0x4003028	      1127	mark.c	FUNCTION_26
0x2fe1	    0x488b05000000	            mov rax, qword [0x04003028] 	      1127	mark.c	FUNCTION_26
0x2fe8	        0x488945e8	             mov qword [rbp - 0x18], rax	      1127	mark.c	FUNCTION_26
0x2fec	      0xe99c040000	                           jmp 0x40034cd	      1127	mark.c	FUNCTION_26
0x2ff1	    0x8b0500000000	            mov eax, dword [0x04003037] 	      1130	mark.c	FUNCTION_26	FUNCTION_1	IF_1
0x2ff7	            0x85c0	                           test eax, eax	      1130	mark.c	FUNCTION_26	FUNCTION_1	IF_1
0x2ff9	     0xf85e6000000	                           jne 0x4003125	      1130	mark.c	FUNCTION_26	FUNCTION_1	IF_1
0x2fff	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      1133	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1
0x3006	      0xe9c7000000	                           jmp 0x4003112	      1133	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1
0x300b	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1134	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x300f	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1134	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x3012	          0x4863d0	                         movsxd rdx, eax	      1134	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x3015	          0x4889d0	                            mov rax, rdx	      1134	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x3018	        0x48c1e002	                              shl rax, 2	      1134	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x301c	          0x4801d0	                            add rax, rdx	      1134	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x301f	        0x48c1e003	                              shl rax, 3	      1134	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x3023	          0x4801c8	                            add rax, rcx	      1134	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x3026	    0x4805b0050000	                          add rax, 0x5b0	      1134	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x302c	            0x8b00	                    mov eax, dword [rax]	      1134	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x302e	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      1134	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x3031	     0xf8597000000	                           jne 0x400310e	      1134	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x3037	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1135	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x303a	          0x4863d0	                         movsxd rdx, eax	      1135	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x303d	          0x4889d0	                            mov rax, rdx	      1135	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x3040	        0x48c1e002	                              shl rax, 2	      1135	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x3044	          0x4801d0	                            add rax, rdx	      1135	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x3047	        0x48c1e003	                              shl rax, 3	      1135	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x304b	    0x488d90a00500	                  lea rdx, [rax + 0x5a0]	      1135	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x3052	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1135	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x3056	          0x4801d0	                            add rax, rdx	      1135	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x3059	        0x488945f8	                mov qword [rbp - 8], rax	      1135	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x305d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1135	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x3061	          0x488b00	                    mov rax, qword [rax]	      1135	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x3064	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1135	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x3068	            0x7c3b	                            jl 0x40030e5	      1135	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x306a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1135	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x306e	          0x488b00	                    mov rax, qword [rax]	      1135	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x3071	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      1135	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x3075	            0x7f2e	                            jg 0x40030e5	      1135	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x3077	    0x48817dc8ffff	     cmp qword [rbp - 0x38], 0x7fffffff 	      1135	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x307f	            0x750d	                           jne 0x40030ce	      1135	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x3081	        0x488b45f8	                mov rax, qword [rbp - 8]	      1135	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x3085	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1135	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x3089	          0x488910	                    mov qword [rax], rdx	      1135	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x308c	            0xeb40	                           jmp 0x400310e	      1135	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x308e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1135	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x3092	          0x488b10	                    mov rdx, qword [rax]	      1135	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x3095	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1135	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x3099	          0x4801c2	                            add rdx, rax	      1135	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x309c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1135	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x30a0	          0x488910	                    mov qword [rax], rdx	      1135	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x30a3	            0xeb29	                           jmp 0x400310e	      1135	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x30a5	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1135	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x30aa	            0x7422	                            je 0x400310e	      1135	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x30ac	        0x488b45f8	                mov rax, qword [rbp - 8]	      1135	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x30b0	          0x488b00	                    mov rax, qword [rax]	      1135	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x30b3	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      1135	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x30b7	            0x7e15	                           jle 0x400310e	      1135	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x30b9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1135	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x30bd	          0x488b10	                    mov rdx, qword [rax]	      1135	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x30c0	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1135	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x30c4	          0x4801c2	                            add rdx, rax	      1135	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x30c7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1135	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x30cb	          0x488910	                    mov qword [rax], rdx	      1135	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1	IF_2
0x30ce	        0x8345e001	               add dword [rbp - 0x20], 1	      1133	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1
0x30d2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1133	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1
0x30d6	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	      1133	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1
0x30dc	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	      1133	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1
0x30df	     0xf8f26ffffff	                            jg 0x400304b	      1133	mark.c	FUNCTION_26	FUNCTION_1	IF_1	FOR_1
0x30e5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1138	mark.c	FUNCTION_26	FUNCTION_1	IF_3
0x30e9	        0x488b5008	                mov rdx, qword [rax + 8]	      1138	mark.c	FUNCTION_26	FUNCTION_1	IF_3
0x30ed	    0x488b05000000	            mov rax, qword [0x04003134] 	      1138	mark.c	FUNCTION_26	FUNCTION_1	IF_3
0x30f4	          0x4839c2	                            cmp rdx, rax	      1138	mark.c	FUNCTION_26	FUNCTION_1	IF_3
0x30f7	     0xf8584030000	                           jne 0x40034c1	      1138	mark.c	FUNCTION_26	FUNCTION_1	IF_3
0x30fd	    0x8b0500000000	            mov eax, dword [0x04003143] 	      1140	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4
0x3103	            0x85c0	                           test eax, eax	      1140	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4
0x3105	     0xf85ea000000	                           jne 0x4003235	      1140	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4
0x310b	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2
0x3112	      0xe9cb000000	                           jmp 0x4003222	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2
0x3117	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1143	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x311b	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1143	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x311e	          0x4863d0	                         movsxd rdx, eax	      1143	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x3121	          0x4889d0	                            mov rax, rdx	      1143	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x3124	        0x48c1e002	                              shl rax, 2	      1143	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x3128	          0x4801d0	                            add rax, rdx	      1143	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x312b	        0x48c1e003	                              shl rax, 3	      1143	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x312f	          0x4801c8	                            add rax, rcx	      1143	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x3132	    0x480578150000	                         add rax, 0x1578	      1143	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x3138	            0x8b00	                    mov eax, dword [rax]	      1143	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x313a	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      1143	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x313d	     0xf859b000000	                           jne 0x400321e	      1143	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x3143	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1144	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x3146	          0x4863d0	                         movsxd rdx, eax	      1144	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x3149	          0x4889d0	                            mov rax, rdx	      1144	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x314c	        0x48c1e002	                              shl rax, 2	      1144	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x3150	          0x4801d0	                            add rax, rdx	      1144	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x3153	        0x48c1e003	                              shl rax, 3	      1144	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x3157	    0x488d90601500	                 lea rdx, [rax + 0x1560]	      1144	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x315e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1144	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x3162	          0x4801d0	                            add rax, rdx	      1144	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x3165	        0x4883c008	                              add rax, 8	      1144	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x3169	        0x488945f8	                mov qword [rbp - 8], rax	      1144	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x316d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1144	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x3171	          0x488b00	                    mov rax, qword [rax]	      1144	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x3174	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1144	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x3178	            0x7c3b	                            jl 0x40031f5	      1144	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x317a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1144	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x317e	          0x488b00	                    mov rax, qword [rax]	      1144	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x3181	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      1144	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x3185	            0x7f2e	                            jg 0x40031f5	      1144	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x3187	    0x48817dc8ffff	     cmp qword [rbp - 0x38], 0x7fffffff 	      1144	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x318f	            0x750d	                           jne 0x40031de	      1144	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x3191	        0x488b45f8	                mov rax, qword [rbp - 8]	      1144	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x3195	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1144	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x3199	          0x488910	                    mov qword [rax], rdx	      1144	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x319c	            0xeb40	                           jmp 0x400321e	      1144	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x319e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1144	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x31a2	          0x488b10	                    mov rdx, qword [rax]	      1144	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x31a5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1144	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x31a9	          0x4801c2	                            add rdx, rax	      1144	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x31ac	        0x488b45f8	                mov rax, qword [rbp - 8]	      1144	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x31b0	          0x488910	                    mov qword [rax], rdx	      1144	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x31b3	            0xeb29	                           jmp 0x400321e	      1144	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x31b5	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1144	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x31ba	            0x7422	                            je 0x400321e	      1144	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x31bc	        0x488b45f8	                mov rax, qword [rbp - 8]	      1144	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x31c0	          0x488b00	                    mov rax, qword [rax]	      1144	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x31c3	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      1144	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x31c7	            0x7e15	                           jle 0x400321e	      1144	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x31c9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1144	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x31cd	          0x488b10	                    mov rdx, qword [rax]	      1144	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x31d0	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1144	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x31d4	          0x4801c2	                            add rdx, rax	      1144	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x31d7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1144	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x31db	          0x488910	                    mov qword [rax], rdx	      1144	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2	IF_5
0x31de	        0x8345e001	               add dword [rbp - 0x20], 1	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2
0x31e2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2
0x31e6	    0x8b8084180000	          mov eax, dword [rax + 0x1884] 	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2
0x31ec	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2
0x31ef	     0xf8f22ffffff	                            jg 0x4003157	      1142	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_4	FOR_2
0x31f5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1147	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6
0x31f9	        0x488b4058	            mov rax, qword [rax + 0x58] 	      1147	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6
0x31fd	          0x4885c0	                           test rax, rax	      1147	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6
0x3200	     0xf84fa000000	                            je 0x4003340	      1147	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6
0x3206	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1149	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x320a	        0x4883c058	                           add rax, 0x58	      1149	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x320e	        0x488945f8	                mov qword [rbp - 8], rax	      1149	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x3212	        0x488b45f8	                mov rax, qword [rbp - 8]	      1149	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x3216	          0x488b00	                    mov rax, qword [rax]	      1149	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x3219	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1149	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x321d	            0x7c3b	                            jl 0x400329a	      1149	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x321f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1149	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x3223	          0x488b00	                    mov rax, qword [rax]	      1149	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x3226	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      1149	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x322a	            0x7f2e	                            jg 0x400329a	      1149	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x322c	    0x48817dc8ffff	     cmp qword [rbp - 0x38], 0x7fffffff 	      1149	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x3234	            0x750d	                           jne 0x4003283	      1149	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x3236	        0x488b45f8	                mov rax, qword [rbp - 8]	      1149	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x323a	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1149	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x323e	          0x488910	                    mov qword [rax], rdx	      1149	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x3241	            0xeb40	                           jmp 0x40032c3	      1149	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x3243	        0x488b45f8	                mov rax, qword [rbp - 8]	      1149	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x3247	          0x488b10	                    mov rdx, qword [rax]	      1149	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x324a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1149	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x324e	          0x4801c2	                            add rdx, rax	      1149	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x3251	        0x488b45f8	                mov rax, qword [rbp - 8]	      1149	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x3255	          0x488910	                    mov qword [rax], rdx	      1149	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x3258	            0xeb29	                           jmp 0x40032c3	      1149	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x325a	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1149	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x325f	            0x7422	                            je 0x40032c3	      1149	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x3261	        0x488b45f8	                mov rax, qword [rbp - 8]	      1149	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x3265	          0x488b00	                    mov rax, qword [rax]	      1149	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x3268	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      1149	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x326c	            0x7e15	                           jle 0x40032c3	      1149	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x326e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1149	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x3272	          0x488b10	                    mov rdx, qword [rax]	      1149	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x3275	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1149	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x3279	          0x4801c2	                            add rdx, rax	      1149	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x327c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1149	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x3280	          0x488910	                    mov qword [rax], rdx	      1149	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_3
0x3283	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1150	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x3287	        0x4883c068	                           add rax, 0x68	      1150	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x328b	        0x488945f8	                mov qword [rbp - 8], rax	      1150	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x328f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1150	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x3293	          0x488b00	                    mov rax, qword [rax]	      1150	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x3296	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1150	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x329a	            0x7c3b	                            jl 0x4003317	      1150	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x329c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1150	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x32a0	          0x488b00	                    mov rax, qword [rax]	      1150	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x32a3	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      1150	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x32a7	            0x7f2e	                            jg 0x4003317	      1150	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x32a9	    0x48817dc8ffff	     cmp qword [rbp - 0x38], 0x7fffffff 	      1150	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x32b1	            0x750d	                           jne 0x4003300	      1150	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x32b3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1150	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x32b7	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1150	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x32bb	          0x488910	                    mov qword [rax], rdx	      1150	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x32be	            0xeb40	                           jmp 0x4003340	      1150	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x32c0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1150	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x32c4	          0x488b10	                    mov rdx, qword [rax]	      1150	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x32c7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1150	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x32cb	          0x4801c2	                            add rdx, rax	      1150	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x32ce	        0x488b45f8	                mov rax, qword [rbp - 8]	      1150	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x32d2	          0x488910	                    mov qword [rax], rdx	      1150	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x32d5	            0xeb29	                           jmp 0x4003340	      1150	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x32d7	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1150	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x32dc	            0x7422	                            je 0x4003340	      1150	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x32de	        0x488b45f8	                mov rax, qword [rbp - 8]	      1150	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x32e2	          0x488b00	                    mov rax, qword [rax]	      1150	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x32e5	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      1150	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x32e9	            0x7e15	                           jle 0x4003340	      1150	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x32eb	        0x488b45f8	                mov rax, qword [rbp - 8]	      1150	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x32ef	          0x488b10	                    mov rdx, qword [rax]	      1150	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x32f2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1150	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x32f6	          0x4801c2	                            add rdx, rax	      1150	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x32f9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1150	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x32fd	          0x488910	                    mov qword [rax], rdx	      1150	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_6	CALL_4
0x3300	    0x488b05000000	            mov rax, qword [0x04003347] 	      1155	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7
0x3307	        0x483945e8	            cmp qword [rbp - 0x18], rax 	      1155	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7
0x330b	     0xf844b010000	                            je 0x400349c	      1155	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7
0x3311	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1157	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8
0x3315	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1157	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8
0x3319	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1157	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8
0x331d	            0x7c66	                            jl 0x40033c5	      1157	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8
0x331f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1157	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8
0x3323	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1157	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8
0x3327	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      1157	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8
0x332b	            0x7f58	                            jg 0x40033c5	      1157	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8
0x332d	    0x48817dc8ffff	     cmp qword [rbp - 0x38], 0x7fffffff 	      1159	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8	IF_9
0x3335	            0x7527	                           jne 0x400339e	      1159	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8	IF_9
0x3337	      0x48837dd801	               cmp qword [rbp - 0x28], 1	      1161	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8	IF_9	IF_10
0x333c	            0x7f0e	                            jg 0x400338c	      1161	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8	IF_9	IF_10
0x333e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1162	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8	IF_9	IF_10
0x3342	    0x48c740780100	               mov qword [rax + 0x78], 1	      1162	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8	IF_9	IF_10
0x334a	            0xeb29	                           jmp 0x40033b5	      1162	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8	IF_9	IF_10
0x334c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1164	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8	IF_9	ELSE_1
0x3350	        0x488d50ff	                      lea rdx, [rax - 1]	      1164	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8	IF_9	ELSE_1
0x3354	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1164	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8	IF_9	ELSE_1
0x3358	        0x48895078	             mov qword [rax + 0x78], rdx	      1164	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8	IF_9	ELSE_1
0x335c	            0xeb17	                           jmp 0x40033b5	      1164	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8	IF_9	ELSE_1
0x335e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1167	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8	ELSE_1	ELSE_2
0x3362	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      1167	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8	ELSE_1	ELSE_2
0x3366	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1167	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8	ELSE_1	ELSE_2
0x336a	          0x4801c2	                            add rdx, rax	      1167	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8	ELSE_1	ELSE_2
0x336d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1167	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8	ELSE_1	ELSE_2
0x3371	        0x48895078	             mov qword [rax + 0x78], rdx	      1167	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8	ELSE_1	ELSE_2
0x3375	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1169	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8	ELSE_1	ELSE_2
0x3379	    0xc78084000000	               mov dword [rax + 0x84], 0	      1169	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8	ELSE_1	ELSE_2
0x3383	            0xeb3a	                           jmp 0x40033ff	      1169	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_8	ELSE_1	ELSE_2
0x3385	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1172	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_1	ELSE_2	ELSE_3	IF_11
0x338a	            0x7433	                            je 0x40033ff	      1172	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_1	ELSE_2	ELSE_3	IF_11
0x338c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1172	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_1	ELSE_2	ELSE_3	IF_11
0x3390	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1172	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_1	ELSE_2	ELSE_3	IF_11
0x3394	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      1172	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_1	ELSE_2	ELSE_3	IF_11
0x3398	            0x7e25	                           jle 0x40033ff	      1172	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_1	ELSE_2	ELSE_3	IF_11
0x339a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1174	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_1	ELSE_2	ELSE_3	IF_11
0x339e	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      1174	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_1	ELSE_2	ELSE_3	IF_11
0x33a2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1174	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_1	ELSE_2	ELSE_3	IF_11
0x33a6	          0x4801c2	                            add rdx, rax	      1174	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_1	ELSE_2	ELSE_3	IF_11
0x33a9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1174	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_1	ELSE_2	ELSE_3	IF_11
0x33ad	        0x48895078	             mov qword [rax + 0x78], rdx	      1174	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_1	ELSE_2	ELSE_3	IF_11
0x33b1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1176	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_1	ELSE_2	ELSE_3	IF_11
0x33b5	    0xc78084000000	               mov dword [rax + 0x84], 0	      1176	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_1	ELSE_2	ELSE_3	IF_11
0x33bf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1179	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12
0x33c3	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1179	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12
0x33c7	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1179	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12
0x33cb	            0x7c63	                            jl 0x4003470	      1179	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12
0x33cd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1179	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12
0x33d1	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1179	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12
0x33d5	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      1179	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12
0x33d9	            0x7f55	                            jg 0x4003470	      1179	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12
0x33db	    0x48817dc8ffff	     cmp qword [rbp - 0x38], 0x7fffffff 	      1181	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12	IF_13
0x33e3	            0x7532	                           jne 0x4003457	      1181	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12	IF_13
0x33e5	      0x48837dd801	               cmp qword [rbp - 0x28], 1	      1183	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12	IF_13	IF_14
0x33ea	            0x7f0e	                            jg 0x400343a	      1183	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12	IF_13	IF_14
0x33ec	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1184	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12	IF_13	IF_14
0x33f0	    0x48c740380100	               mov qword [rax + 0x38], 1	      1184	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12	IF_13	IF_14
0x33f8	            0xeb10	                           jmp 0x400344a	      1184	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12	IF_13	IF_14
0x33fa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1186	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12	IF_13	ELSE_4
0x33fe	        0x488d50ff	                      lea rdx, [rax - 1]	      1186	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12	IF_13	ELSE_4
0x3402	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1186	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12	IF_13	ELSE_4
0x3406	        0x48895038	             mov qword [rax + 0x38], rdx	      1186	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12	IF_13	ELSE_4
0x340a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1187	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12	IF_13
0x340e	    0xc74040000000	               mov dword [rax + 0x40], 0	      1187	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12	IF_13
0x3415	            0xeb45	                           jmp 0x400349c	      1181	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12	IF_13
0x3417	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1190	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12	ELSE_5
0x341b	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      1190	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12	ELSE_5
0x341f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1190	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12	ELSE_5
0x3423	          0x4801c2	                            add rdx, rax	      1190	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12	ELSE_5
0x3426	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1190	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12	ELSE_5
0x342a	        0x48895038	             mov qword [rax + 0x38], rdx	      1190	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12	ELSE_5
0x342e	            0xeb2c	                           jmp 0x400349c	      1181	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	IF_12	IF_13
0x3430	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      1192	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_6	IF_15
0x3435	            0x7425	                            je 0x400349c	      1192	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_6	IF_15
0x3437	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1192	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_6	IF_15
0x343b	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1192	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_6	IF_15
0x343f	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	      1192	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_6	IF_15
0x3443	            0x7e17	                           jle 0x400349c	      1192	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_6	IF_15
0x3445	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1193	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_6	IF_15
0x3449	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      1193	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_6	IF_15
0x344d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1193	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_6	IF_15
0x3451	          0x4801c2	                            add rdx, rax	      1193	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_6	IF_15
0x3454	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1193	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_6	IF_15
0x3458	        0x48895038	             mov qword [rax + 0x38], rdx	      1193	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_7	ELSE_6	IF_15
0x345c	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      1198	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_16
0x3460	            0x741f	                            je 0x40034c1	      1198	mark.c	FUNCTION_26	FUNCTION_1	IF_3	IF_16
0x3462	        0x488b7dc0	             mov rdi, qword [rbp - 0x40]	      1199	mark.c	FUNCTION_26	FUNCTION_1	IF_3	CALL_5
0x3466	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      1199	mark.c	FUNCTION_26	FUNCTION_1	IF_3	CALL_5
0x346a	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1199	mark.c	FUNCTION_26	FUNCTION_1	IF_3	CALL_5
0x346e	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	      1199	mark.c	FUNCTION_26	FUNCTION_1	IF_3	CALL_5
0x3472	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1199	mark.c	FUNCTION_26	FUNCTION_1	IF_3	CALL_5
0x3476	          0x4989f8	                             mov r8, rdi	      1199	mark.c	FUNCTION_26	FUNCTION_1	IF_3	CALL_5
0x3479	          0x4889c7	                            mov rdi, rax	      1199	mark.c	FUNCTION_26	FUNCTION_1	IF_3	CALL_5
0x347c	      0xe800000000	                          call 0x40034c1	      1199	mark.c	FUNCTION_26	FUNCTION_1	IF_3	CALL_5
0x3481	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1127	mark.c	FUNCTION_26
0x3485	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1127	mark.c	FUNCTION_26
0x3489	        0x488945e8	             mov qword [rbp - 0x18], rax	      1127	mark.c	FUNCTION_26
0x348d	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1127	mark.c	FUNCTION_26
0x3492	     0xf8559fbffff	                           jne 0x4003031	      1127	mark.c	FUNCTION_26
0x3498	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1127	mark.c	FUNCTION_26
0x349c	          0x488b00	                    mov rax, qword [rax]	      1127	mark.c	FUNCTION_26
0x349f	        0x488945f0	             mov qword [rbp - 0x10], rax	      1127	mark.c	FUNCTION_26
0x34a3	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1127	mark.c	FUNCTION_26
0x34a8	     0xf851cfbffff	                           jne 0x400300a	      1127	mark.c	FUNCTION_26
0x34ae	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      1206	mark.c	FUNCTION_26	CALL_19
0x34b2	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      1206	mark.c	FUNCTION_26	CALL_19
0x34b6	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	      1206	mark.c	FUNCTION_26	CALL_19
0x34ba	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1206	mark.c	FUNCTION_26	CALL_19
0x34be	          0x4889c7	                            mov rdi, rax	      1206	mark.c	FUNCTION_26	CALL_19
0x34c1	      0xe800000000	                          call 0x4003506	      1206	mark.c	FUNCTION_26	CALL_19
0x34c6	            0xeb01	                           jmp 0x4003509	      1206	mark.c	FUNCTION_26	CALL_19
0x34c8	              0x90	                                     nop	      1063	mark.c	FUNCTION_26	IF_1
0x34c9	              0xc9	                                   leave	      1208	mark.c	FUNCTION_26
0x34ca	              0xc3	                                     ret	      1208	mark.c	FUNCTION_26
setmark_pos	DO,0:functions,0:IF,13:SWITCH,0:CALL,8:ELSE,3:WHILE,0:FOR,0	192
0x32	              0x55	                                push rbp	        60	mark.c	FUNCTION_2
0x33	          0x4889e5	                            mov rbp, rsp	        60	mark.c	FUNCTION_2
0x36	        0x4883ec20	                           sub rsp, 0x20	        60	mark.c	FUNCTION_2
0x3a	          0x897dec	             mov dword [rbp - 0x14], edi	        60	mark.c	FUNCTION_2
0x3d	        0x488975e0	             mov qword [rbp - 0x20], rsi	        60	mark.c	FUNCTION_2
0x41	          0x8955e8	             mov dword [rbp - 0x18], edx	        60	mark.c	FUNCTION_2
0x44	        0x837dec00	               cmp dword [rbp - 0x14], 0	        65	mark.c	FUNCTION_2	IF_1
0x48	            0x790a	                           jns 0x4000094	        65	mark.c	FUNCTION_2	IF_1
0x4a	      0xb800000000	                              mov eax, 0	        66	mark.c	FUNCTION_2	IF_1
0x4f	      0xe9d6020000	                           jmp 0x400036a	        66	mark.c	FUNCTION_2	IF_1
0x54	        0x837dec27	           cmp dword [rbp - 0x14], 0x27 	        68	mark.c	FUNCTION_2	IF_2
0x58	            0x7406	                            je 0x40000a0	        68	mark.c	FUNCTION_2	IF_2
0x5a	        0x837dec60	           cmp dword [rbp - 0x14], 0x60 	        68	mark.c	FUNCTION_2	IF_2
0x5e	            0x756c	                           jne 0x400010c	        68	mark.c	FUNCTION_2	IF_2
0x60	    0x488b05000000	            mov rax, qword [0x040000a7] 	        70	mark.c	FUNCTION_2	IF_2	IF_3
0x67	        0x4883c038	                           add rax, 0x38	        70	mark.c	FUNCTION_2	IF_2	IF_3
0x6b	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	        70	mark.c	FUNCTION_2	IF_2	IF_3
0x6f	            0x7531	                           jne 0x40000e2	        70	mark.c	FUNCTION_2	IF_2	IF_3
0x71	      0xe800000000	                          call 0x40000b6	        72	mark.c	FUNCTION_2	IF_2	IF_3	CALL_1
0x76	    0x488b0d000000	            mov rcx, qword [0x040000bd] 	        74	mark.c	FUNCTION_2	IF_2	IF_3
0x7d	    0x488b05000000	            mov rax, qword [0x040000c4] 	        74	mark.c	FUNCTION_2	IF_2	IF_3
0x84	    0x488b90880500	           mov rdx, qword [rax + 0x588] 	        74	mark.c	FUNCTION_2	IF_2	IF_3
0x8b	    0x488b80800500	           mov rax, qword [rax + 0x580] 	        74	mark.c	FUNCTION_2	IF_2	IF_3
0x92	    0x488981900500	            mov qword [rcx + 0x590], rax	        74	mark.c	FUNCTION_2	IF_2	IF_3
0x99	    0x488991980500	            mov qword [rcx + 0x598], rdx	        74	mark.c	FUNCTION_2	IF_2	IF_3
0xa0	            0xeb20	                           jmp 0x4000102	        74	mark.c	FUNCTION_2	IF_2	IF_3
0xa2	    0x488b0d000000	            mov rcx, qword [0x040000e9] 	        77	mark.c	FUNCTION_2	IF_2	ELSE_1
0xa9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        77	mark.c	FUNCTION_2	IF_2	ELSE_1
0xad	        0x488b5008	                mov rdx, qword [rax + 8]	        77	mark.c	FUNCTION_2	IF_2	ELSE_1
0xb1	          0x488b00	                    mov rax, qword [rax]	        77	mark.c	FUNCTION_2	IF_2	ELSE_1
0xb4	    0x488981800500	            mov qword [rcx + 0x580], rax	        77	mark.c	FUNCTION_2	IF_2	ELSE_1
0xbb	    0x488991880500	            mov qword [rcx + 0x588], rdx	        77	mark.c	FUNCTION_2	IF_2	ELSE_1
0xc2	      0xb801000000	                              mov eax, 1	        78	mark.c	FUNCTION_2	IF_2
0xc7	      0xe95e020000	                           jmp 0x400036a	        78	mark.c	FUNCTION_2	IF_2
0xcc	          0x8b45e8	             mov eax, dword [rbp - 0x18]	        81	mark.c	FUNCTION_2	CALL_2
0xcf	            0x89c7	                            mov edi, eax	        81	mark.c	FUNCTION_2	CALL_2
0xd1	      0xe800000000	                          call 0x4000116	        81	mark.c	FUNCTION_2	CALL_2
0xd6	        0x488945f8	                mov qword [rbp - 8], rax	        81	mark.c	FUNCTION_2	CALL_2
0xda	      0x48837df800	                  cmp qword [rbp - 8], 0	        82	mark.c	FUNCTION_2	IF_4
0xdf	            0x750a	                           jne 0x400012b	        82	mark.c	FUNCTION_2	IF_4
0xe1	      0xb800000000	                              mov eax, 0	        83	mark.c	FUNCTION_2	IF_4
0xe6	      0xe93f020000	                           jmp 0x400036a	        83	mark.c	FUNCTION_2	IF_4
0xeb	        0x837dec22	           cmp dword [rbp - 0x14], 0x22 	        85	mark.c	FUNCTION_2	IF_5
0xef	            0x7527	                           jne 0x4000158	        85	mark.c	FUNCTION_2	IF_5
0xf1	        0x488b4df8	                mov rcx, qword [rbp - 8]	        87	mark.c	FUNCTION_2	IF_5
0xf5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        87	mark.c	FUNCTION_2	IF_5
0xf9	        0x488b5008	                mov rdx, qword [rax + 8]	        87	mark.c	FUNCTION_2	IF_5
0xfd	          0x488b00	                    mov rax, qword [rax]	        87	mark.c	FUNCTION_2	IF_5
0x100	    0x488981180300	            mov qword [rcx + 0x318], rax	        87	mark.c	FUNCTION_2	IF_5
0x107	    0x488991200300	            mov qword [rcx + 0x320], rdx	        87	mark.c	FUNCTION_2	IF_5
0x10e	      0xb801000000	                              mov eax, 1	        88	mark.c	FUNCTION_2	IF_5
0x113	      0xe912020000	                           jmp 0x400036a	        88	mark.c	FUNCTION_2	IF_5
0x118	        0x837dec5b	           cmp dword [rbp - 0x14], 0x5b 	        93	mark.c	FUNCTION_2	IF_6
0x11c	            0x7527	                           jne 0x4000185	        93	mark.c	FUNCTION_2	IF_6
0x11e	        0x488b4df8	                mov rcx, qword [rbp - 8]	        95	mark.c	FUNCTION_2	IF_6
0x122	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        95	mark.c	FUNCTION_2	IF_6
0x126	        0x488b5008	                mov rdx, qword [rax + 8]	        95	mark.c	FUNCTION_2	IF_6
0x12a	          0x488b00	                    mov rax, qword [rax]	        95	mark.c	FUNCTION_2	IF_6
0x12d	    0x488981d01100	          mov qword [rcx + 0x11d0], rax 	        95	mark.c	FUNCTION_2	IF_6
0x134	    0x488991d81100	          mov qword [rcx + 0x11d8], rdx 	        95	mark.c	FUNCTION_2	IF_6
0x13b	      0xb801000000	                              mov eax, 1	        96	mark.c	FUNCTION_2	IF_6
0x140	      0xe9e5010000	                           jmp 0x400036a	        96	mark.c	FUNCTION_2	IF_6
0x145	        0x837dec5d	           cmp dword [rbp - 0x14], 0x5d 	        98	mark.c	FUNCTION_2	IF_7
0x149	            0x7527	                           jne 0x40001b2	        98	mark.c	FUNCTION_2	IF_7
0x14b	        0x488b4df8	                mov rcx, qword [rbp - 8]	       100	mark.c	FUNCTION_2	IF_7
0x14f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       100	mark.c	FUNCTION_2	IF_7
0x153	        0x488b5008	                mov rdx, qword [rax + 8]	       100	mark.c	FUNCTION_2	IF_7
0x157	          0x488b00	                    mov rax, qword [rax]	       100	mark.c	FUNCTION_2	IF_7
0x15a	    0x488981f01100	          mov qword [rcx + 0x11f0], rax 	       100	mark.c	FUNCTION_2	IF_7
0x161	    0x488991f81100	          mov qword [rcx + 0x11f8], rdx 	       100	mark.c	FUNCTION_2	IF_7
0x168	      0xb801000000	                              mov eax, 1	       101	mark.c	FUNCTION_2	IF_7
0x16d	      0xe9b8010000	                           jmp 0x400036a	       101	mark.c	FUNCTION_2	IF_7
0x172	        0x837dec3c	           cmp dword [rbp - 0x14], 0x3c 	       104	mark.c	FUNCTION_2	IF_8
0x176	            0x7406	                            je 0x40001be	       104	mark.c	FUNCTION_2	IF_8
0x178	        0x837dec3e	           cmp dword [rbp - 0x14], 0x3e 	       104	mark.c	FUNCTION_2	IF_8
0x17c	            0x7568	                           jne 0x4000226	       104	mark.c	FUNCTION_2	IF_8
0x17e	        0x837dec3c	           cmp dword [rbp - 0x14], 0x3c 	       106	mark.c	FUNCTION_2	IF_8	IF_9
0x182	            0x751f	                           jne 0x40001e3	       106	mark.c	FUNCTION_2	IF_8	IF_9
0x184	        0x488b4df8	                mov rcx, qword [rbp - 8]	       107	mark.c	FUNCTION_2	IF_8	IF_9
0x188	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       107	mark.c	FUNCTION_2	IF_8	IF_9
0x18c	        0x488b5008	                mov rdx, qword [rax + 8]	       107	mark.c	FUNCTION_2	IF_8	IF_9
0x190	          0x488b00	                    mov rax, qword [rax]	       107	mark.c	FUNCTION_2	IF_8	IF_9
0x193	    0x488981e80200	            mov qword [rcx + 0x2e8], rax	       107	mark.c	FUNCTION_2	IF_8	IF_9
0x19a	    0x488991f00200	            mov qword [rcx + 0x2f0], rdx	       107	mark.c	FUNCTION_2	IF_8	IF_9
0x1a1	            0xeb1d	                           jmp 0x4000200	       107	mark.c	FUNCTION_2	IF_8	IF_9
0x1a3	        0x488b4df8	                mov rcx, qword [rbp - 8]	       109	mark.c	FUNCTION_2	IF_8	ELSE_2
0x1a7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       109	mark.c	FUNCTION_2	IF_8	ELSE_2
0x1ab	        0x488b5008	                mov rdx, qword [rax + 8]	       109	mark.c	FUNCTION_2	IF_8	ELSE_2
0x1af	          0x488b00	                    mov rax, qword [rax]	       109	mark.c	FUNCTION_2	IF_8	ELSE_2
0x1b2	    0x488981f80200	            mov qword [rcx + 0x2f8], rax	       109	mark.c	FUNCTION_2	IF_8	ELSE_2
0x1b9	    0x488991000300	            mov qword [rcx + 0x300], rdx	       109	mark.c	FUNCTION_2	IF_8	ELSE_2
0x1c0	        0x488b45f8	                mov rax, qword [rbp - 8]	       110	mark.c	FUNCTION_2	IF_8	IF_10
0x1c4	    0x8b8008030000	           mov eax, dword [rax + 0x308] 	       110	mark.c	FUNCTION_2	IF_8	IF_10
0x1ca	            0x85c0	                           test eax, eax	       110	mark.c	FUNCTION_2	IF_8	IF_10
0x1cc	            0x750e	                           jne 0x400021c	       110	mark.c	FUNCTION_2	IF_8	IF_10
0x1ce	        0x488b45f8	                mov rax, qword [rbp - 8]	       112	mark.c	FUNCTION_2	IF_8	IF_10
0x1d2	    0xc78008030000	          mov dword [rax + 0x308], 0x76 	       112	mark.c	FUNCTION_2	IF_8	IF_10
0x1dc	      0xb801000000	                              mov eax, 1	       113	mark.c	FUNCTION_2	IF_8
0x1e1	      0xe944010000	                           jmp 0x400036a	       113	mark.c	FUNCTION_2	IF_8
0x1e6	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       116	mark.c	FUNCTION_2	IF_11	CALL_3
0x1e9	          0x83e861	                           sub eax, 0x61	       116	mark.c	FUNCTION_2	IF_11	CALL_3
0x1ec	          0x83f819	                           cmp eax, 0x19	       116	mark.c	FUNCTION_2	IF_11	CALL_3
0x1ef	            0x773c	                            ja 0x400026d	       116	mark.c	FUNCTION_2	IF_11	CALL_3
0x1f1	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       118	mark.c	FUNCTION_2	IF_11
0x1f4	          0x83e861	                           sub eax, 0x61	       118	mark.c	FUNCTION_2	IF_11
0x1f7	          0x8945f4	              mov dword [rbp - 0xc], eax	       118	mark.c	FUNCTION_2	IF_11
0x1fa	        0x488b45f8	                mov rax, qword [rbp - 8]	       119	mark.c	FUNCTION_2	IF_11
0x1fe	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       119	mark.c	FUNCTION_2	IF_11
0x201	          0x4863d2	                         movsxd rdx, edx	       119	mark.c	FUNCTION_2	IF_11
0x204	        0x4883c214	                           add rdx, 0x14	       119	mark.c	FUNCTION_2	IF_11
0x208	        0x48c1e204	                              shl rdx, 4	       119	mark.c	FUNCTION_2	IF_11
0x20c	        0x488d0c10	                    lea rcx, [rax + rdx]	       119	mark.c	FUNCTION_2	IF_11
0x210	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       119	mark.c	FUNCTION_2	IF_11
0x214	        0x488b5008	                mov rdx, qword [rax + 8]	       119	mark.c	FUNCTION_2	IF_11
0x218	          0x488b00	                    mov rax, qword [rax]	       119	mark.c	FUNCTION_2	IF_11
0x21b	        0x48894108	                mov qword [rcx + 8], rax	       119	mark.c	FUNCTION_2	IF_11
0x21f	        0x48895110	             mov qword [rcx + 0x10], rdx	       119	mark.c	FUNCTION_2	IF_11
0x223	      0xb801000000	                              mov eax, 1	       120	mark.c	FUNCTION_2	IF_11
0x228	      0xe9fd000000	                           jmp 0x400036a	       120	mark.c	FUNCTION_2	IF_11
0x22d	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       122	mark.c	FUNCTION_2	IF_12	CALL_5
0x230	          0x83e841	                           sub eax, 0x41	       122	mark.c	FUNCTION_2	IF_12	CALL_5
0x233	          0x83f819	                           cmp eax, 0x19	       122	mark.c	FUNCTION_2	IF_12	CALL_5
0x236	            0x760f	                           jbe 0x4000287	       122	mark.c	FUNCTION_2	IF_12	CALL_5
0x238	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       122	mark.c	FUNCTION_2	IF_12	CALL_5
0x23b	          0x83e830	                           sub eax, 0x30	       122	mark.c	FUNCTION_2	IF_12	CALL_5
0x23e	          0x83f809	                              cmp eax, 9	       122	mark.c	FUNCTION_2	IF_12	CALL_5
0x241	     0xf87de000000	                            ja 0x4000365	       122	mark.c	FUNCTION_2	IF_12	CALL_5
0x247	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       124	mark.c	FUNCTION_2	IF_12	IF_13	CALL_6
0x24a	          0x83e830	                           sub eax, 0x30	       124	mark.c	FUNCTION_2	IF_12	IF_13	CALL_6
0x24d	          0x83f809	                              cmp eax, 9	       124	mark.c	FUNCTION_2	IF_12	IF_13	CALL_6
0x250	            0x770b	                            ja 0x400029d	       124	mark.c	FUNCTION_2	IF_12	IF_13	CALL_6
0x252	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       125	mark.c	FUNCTION_2	IF_12	IF_13
0x255	          0x83e816	                           sub eax, 0x16	       125	mark.c	FUNCTION_2	IF_12	IF_13
0x258	          0x8945f4	              mov dword [rbp - 0xc], eax	       125	mark.c	FUNCTION_2	IF_12	IF_13
0x25b	            0xeb09	                           jmp 0x40002a6	       125	mark.c	FUNCTION_2	IF_12	IF_13
0x25d	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       127	mark.c	FUNCTION_2	IF_12	ELSE_3
0x260	          0x83e841	                           sub eax, 0x41	       127	mark.c	FUNCTION_2	IF_12	ELSE_3
0x263	          0x8945f4	              mov dword [rbp - 0xc], eax	       127	mark.c	FUNCTION_2	IF_12	ELSE_3
0x266	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       128	mark.c	FUNCTION_2	IF_12
0x269	          0x4863d0	                         movsxd rdx, eax	       128	mark.c	FUNCTION_2	IF_12
0x26c	          0x4889d0	                            mov rax, rdx	       128	mark.c	FUNCTION_2	IF_12
0x26f	        0x48c1e002	                              shl rax, 2	       128	mark.c	FUNCTION_2	IF_12
0x273	          0x4801d0	                            add rax, rdx	       128	mark.c	FUNCTION_2	IF_12
0x276	        0x48c1e003	                              shl rax, 3	       128	mark.c	FUNCTION_2	IF_12
0x27a	    0x488d88000000	                          lea rcx, [rax]	       128	mark.c	FUNCTION_2	IF_12
0x281	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       128	mark.c	FUNCTION_2	IF_12
0x285	        0x488b5008	                mov rdx, qword [rax + 8]	       128	mark.c	FUNCTION_2	IF_12
0x289	          0x488b00	                    mov rax, qword [rax]	       128	mark.c	FUNCTION_2	IF_12
0x28c	          0x488901	                    mov qword [rcx], rax	       128	mark.c	FUNCTION_2	IF_12
0x28f	        0x48895108	                mov qword [rcx + 8], rdx	       128	mark.c	FUNCTION_2	IF_12
0x293	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       129	mark.c	FUNCTION_2	IF_12
0x296	          0x4863d0	                         movsxd rdx, eax	       129	mark.c	FUNCTION_2	IF_12
0x299	          0x4889d0	                            mov rax, rdx	       129	mark.c	FUNCTION_2	IF_12
0x29c	        0x48c1e002	                              shl rax, 2	       129	mark.c	FUNCTION_2	IF_12
0x2a0	          0x4801d0	                            add rax, rdx	       129	mark.c	FUNCTION_2	IF_12
0x2a3	        0x48c1e003	                              shl rax, 3	       129	mark.c	FUNCTION_2	IF_12
0x2a7	    0x488d90000000	                          lea rdx, [rax]	       129	mark.c	FUNCTION_2	IF_12
0x2ae	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       129	mark.c	FUNCTION_2	IF_12
0x2b1	            0x8902	                    mov dword [rdx], eax	       129	mark.c	FUNCTION_2	IF_12
0x2b3	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       130	mark.c	FUNCTION_2	IF_12	CALL_7
0x2b6	          0x4863d0	                         movsxd rdx, eax	       130	mark.c	FUNCTION_2	IF_12	CALL_7
0x2b9	          0x4889d0	                            mov rax, rdx	       130	mark.c	FUNCTION_2	IF_12	CALL_7
0x2bc	        0x48c1e002	                              shl rax, 2	       130	mark.c	FUNCTION_2	IF_12	CALL_7
0x2c0	          0x4801d0	                            add rax, rdx	       130	mark.c	FUNCTION_2	IF_12	CALL_7
0x2c3	        0x48c1e003	                              shl rax, 3	       130	mark.c	FUNCTION_2	IF_12	CALL_7
0x2c7	    0x480500000000	                              add rax, 0	       130	mark.c	FUNCTION_2	IF_12	CALL_7
0x2cd	          0x488b00	                    mov rax, qword [rax]	       130	mark.c	FUNCTION_2	IF_12	CALL_7
0x2d0	          0x4889c7	                            mov rdi, rax	       130	mark.c	FUNCTION_2	IF_12	CALL_7
0x2d3	      0xe800000000	                          call 0x4000318	       130	mark.c	FUNCTION_2	IF_12	CALL_7
0x2d8	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       131	mark.c	FUNCTION_2	IF_12
0x2db	          0x4863d0	                         movsxd rdx, eax	       131	mark.c	FUNCTION_2	IF_12
0x2de	          0x4889d0	                            mov rax, rdx	       131	mark.c	FUNCTION_2	IF_12
0x2e1	        0x48c1e002	                              shl rax, 2	       131	mark.c	FUNCTION_2	IF_12
0x2e5	          0x4801d0	                            add rax, rdx	       131	mark.c	FUNCTION_2	IF_12
0x2e8	        0x48c1e003	                              shl rax, 3	       131	mark.c	FUNCTION_2	IF_12
0x2ec	    0x480500000000	                              add rax, 0	       131	mark.c	FUNCTION_2	IF_12
0x2f2	    0x48c700000000	                      mov qword [rax], 0	       131	mark.c	FUNCTION_2	IF_12
0x2f9	      0xe800000000	                          call 0x400033e	       133	mark.c	FUNCTION_2	IF_12	CALL_8
0x2fe	          0x4889c1	                            mov rcx, rax	       133	mark.c	FUNCTION_2	IF_12	CALL_8
0x301	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       133	mark.c	FUNCTION_2	IF_12	CALL_8
0x304	          0x4863d0	                         movsxd rdx, eax	       133	mark.c	FUNCTION_2	IF_12	CALL_8
0x307	          0x4889d0	                            mov rax, rdx	       133	mark.c	FUNCTION_2	IF_12	CALL_8
0x30a	        0x48c1e002	                              shl rax, 2	       133	mark.c	FUNCTION_2	IF_12	CALL_8
0x30e	          0x4801d0	                            add rax, rdx	       133	mark.c	FUNCTION_2	IF_12	CALL_8
0x311	        0x48c1e003	                              shl rax, 3	       133	mark.c	FUNCTION_2	IF_12	CALL_8
0x315	    0x480500000000	                              add rax, 0	       133	mark.c	FUNCTION_2	IF_12	CALL_8
0x31b	          0x488908	                    mov qword [rax], rcx	       133	mark.c	FUNCTION_2	IF_12	CALL_8
0x31e	      0xb801000000	                              mov eax, 1	       135	mark.c	FUNCTION_2	IF_12
0x323	            0xeb05	                           jmp 0x400036a	       135	mark.c	FUNCTION_2	IF_12
0x325	      0xb800000000	                              mov eax, 0	       137	mark.c	FUNCTION_2
0x32a	              0xc9	                                   leave	       138	mark.c	FUNCTION_2
0x32b	              0xc3	                                     ret	       138	mark.c	FUNCTION_2
skip_for_viminfo	DO,0:functions,0:IF,0:SWITCH,0:CALL,2:ELSE,0:WHILE,0:FOR,0	20
0x4c38	              0x55	                                push rbp	      1653	mark.c	FUNCTION_37
0x4c39	          0x4889e5	                            mov rbp, rsp	      1653	mark.c	FUNCTION_37
0x4c3c	        0x4883ec10	                           sub rsp, 0x10	      1653	mark.c	FUNCTION_37
0x4c40	        0x48897df8	                mov qword [rbp - 8], rdi	      1653	mark.c	FUNCTION_37
0x4c44	        0x488b45f8	                mov rax, qword [rbp - 8]	      1656	mark.c	FUNCTION_37	CALL_1
0x4c48	          0x4889c7	                            mov rdi, rax	      1656	mark.c	FUNCTION_37	CALL_1
0x4c4b	      0xe800000000	                          call 0x4004c90	      1656	mark.c	FUNCTION_37	CALL_1
0x4c50	            0x85c0	                           test eax, eax	      1656	mark.c	FUNCTION_37	CALL_1
0x4c52	            0x7517	                           jne 0x4004cab	      1656	mark.c	FUNCTION_37	CALL_1
0x4c54	        0x488b45f8	                mov rax, qword [rbp - 8]	      1658	mark.c	FUNCTION_37	CALL_2
0x4c58	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1658	mark.c	FUNCTION_37	CALL_2
0x4c5f	          0x4889c7	                            mov rdi, rax	      1658	mark.c	FUNCTION_37	CALL_2
0x4c62	      0xe800000000	                          call 0x4004ca7	      1658	mark.c	FUNCTION_37	CALL_2
0x4c67	            0x85c0	                           test eax, eax	      1656	mark.c	FUNCTION_37	CALL_1
0x4c69	            0x7407	                            je 0x4004cb2	      1656	mark.c	FUNCTION_37	CALL_1
0x4c6b	      0xb801000000	                              mov eax, 1	      1656	mark.c	FUNCTION_37	CALL_1
0x4c70	            0xeb05	                           jmp 0x4004cb7	      1656	mark.c	FUNCTION_37	CALL_1
0x4c72	      0xb800000000	                              mov eax, 0	      1656	mark.c	FUNCTION_37	CALL_1
0x4c77	              0xc9	                                   leave	      1659	mark.c	FUNCTION_37
0x4c78	              0xc3	                                     ret	      1659	mark.c	FUNCTION_37
checkpcmark	DO,0:functions,0:IF,1:SWITCH,0:CALL,1:ELSE,0:WHILE,0:FOR,0	39
0x521	              0x55	                                push rbp	       209	mark.c	FUNCTION_4
0x522	          0x4889e5	                            mov rbp, rsp	       209	mark.c	FUNCTION_4
0x525	    0x488b05000000	            mov rax, qword [0x0400056c] 	       210	mark.c	FUNCTION_4	IF_1
0x52c	    0x488b80900500	           mov rax, qword [rax + 0x590] 	       210	mark.c	FUNCTION_4	IF_1
0x533	          0x4885c0	                           test rax, rax	       210	mark.c	FUNCTION_4	IF_1
0x536	     0xf84a3000000	                            je 0x400061f	       210	mark.c	FUNCTION_4	IF_1
0x53c	    0x488b05000000	            mov rax, qword [0x04000583] 	       211	mark.c	FUNCTION_4	IF_1	CALL_1
0x543	    0x488b90800500	           mov rdx, qword [rax + 0x580] 	       211	mark.c	FUNCTION_4	IF_1	CALL_1
0x54a	    0x488b05000000	            mov rax, qword [0x04000591] 	       211	mark.c	FUNCTION_4	IF_1	CALL_1
0x551	        0x488b4038	            mov rax, qword [rax + 0x38] 	       211	mark.c	FUNCTION_4	IF_1	CALL_1
0x555	          0x4839c2	                            cmp rdx, rax	       211	mark.c	FUNCTION_4	IF_1	CALL_1
0x558	            0x7536	                           jne 0x40005d0	       211	mark.c	FUNCTION_4	IF_1	CALL_1
0x55a	    0x488b05000000	            mov rax, qword [0x040005a1] 	       211	mark.c	FUNCTION_4	IF_1	CALL_1
0x561	    0x8b9088050000	           mov edx, dword [rax + 0x588] 	       211	mark.c	FUNCTION_4	IF_1	CALL_1
0x567	    0x488b05000000	            mov rax, qword [0x040005ae] 	       211	mark.c	FUNCTION_4	IF_1	CALL_1
0x56e	          0x8b4040	            mov eax, dword [rax + 0x40] 	       211	mark.c	FUNCTION_4	IF_1	CALL_1
0x571	            0x39c2	                            cmp edx, eax	       211	mark.c	FUNCTION_4	IF_1	CALL_1
0x573	            0x751b	                           jne 0x40005d0	       211	mark.c	FUNCTION_4	IF_1	CALL_1
0x575	    0x488b05000000	            mov rax, qword [0x040005bc] 	       211	mark.c	FUNCTION_4	IF_1	CALL_1
0x57c	    0x8b908c050000	           mov edx, dword [rax + 0x58c] 	       211	mark.c	FUNCTION_4	IF_1	CALL_1
0x582	    0x488b05000000	            mov rax, qword [0x040005c9] 	       211	mark.c	FUNCTION_4	IF_1	CALL_1
0x589	          0x8b4044	            mov eax, dword [rax + 0x44] 	       211	mark.c	FUNCTION_4	IF_1	CALL_1
0x58c	            0x39c2	                            cmp edx, eax	       211	mark.c	FUNCTION_4	IF_1	CALL_1
0x58e	            0x7413	                            je 0x40005e3	       211	mark.c	FUNCTION_4	IF_1	CALL_1
0x590	    0x488b05000000	            mov rax, qword [0x040005d7] 	       212	mark.c	FUNCTION_4	IF_1
0x597	    0x488b80800500	           mov rax, qword [rax + 0x580] 	       212	mark.c	FUNCTION_4	IF_1
0x59e	          0x4885c0	                           test rax, rax	       212	mark.c	FUNCTION_4	IF_1
0x5a1	            0x753c	                           jne 0x400061f	       212	mark.c	FUNCTION_4	IF_1
0x5a3	    0x488b0d000000	            mov rcx, qword [0x040005ea] 	       214	mark.c	FUNCTION_4	IF_1
0x5aa	    0x488b05000000	            mov rax, qword [0x040005f1] 	       214	mark.c	FUNCTION_4	IF_1
0x5b1	    0x488b90980500	           mov rdx, qword [rax + 0x598] 	       214	mark.c	FUNCTION_4	IF_1
0x5b8	    0x488b80900500	           mov rax, qword [rax + 0x590] 	       214	mark.c	FUNCTION_4	IF_1
0x5bf	    0x488981800500	            mov qword [rcx + 0x580], rax	       214	mark.c	FUNCTION_4	IF_1
0x5c6	    0x488991880500	            mov qword [rcx + 0x588], rdx	       214	mark.c	FUNCTION_4	IF_1
0x5cd	    0x488b05000000	            mov rax, qword [0x04000614] 	       215	mark.c	FUNCTION_4	IF_1
0x5d4	    0x48c780900500	              mov qword [rax + 0x590], 0	       215	mark.c	FUNCTION_4	IF_1
0x5df	              0x90	                                     nop	       217	mark.c	FUNCTION_4
0x5e0	              0x5d	                                 pop rbp	       217	mark.c	FUNCTION_4
0x5e1	              0xc3	                                     ret	       217	mark.c	FUNCTION_4
show_one_mark	DO,0:functions,0:IF,9:SWITCH,0:CALL,15:ELSE,3:WHILE,0:FOR,0	104
0x1d1e	              0x55	                                push rbp	       758	mark.c	FUNCTION_19
0x1d1f	          0x4889e5	                            mov rbp, rsp	       758	mark.c	FUNCTION_19
0x1d22	        0x4883ec30	                           sub rsp, 0x30	       758	mark.c	FUNCTION_19
0x1d26	          0x897dec	             mov dword [rbp - 0x14], edi	       758	mark.c	FUNCTION_19
0x1d29	        0x488975e0	             mov qword [rbp - 0x20], rsi	       758	mark.c	FUNCTION_19
0x1d2d	        0x488955d8	             mov qword [rbp - 0x28], rdx	       758	mark.c	FUNCTION_19
0x1d31	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       758	mark.c	FUNCTION_19
0x1d35	        0x448945e8	             mov dword [rbp - 0x18], r8d	       758	mark.c	FUNCTION_19
0x1d39	    0xc745fc000000	                  mov dword [rbp - 4], 0	       760	mark.c	FUNCTION_19
0x1d40	        0x837decff	cmp dword [rbp - 0x14], 0xffffffffffffffff	       762	mark.c	FUNCTION_19	IF_1
0x1d44	            0x7558	                           jne 0x4001dde	       762	mark.c	FUNCTION_19	IF_1
0x1d46	    0x8b0500000000	            mov eax, dword [0x04001d8c] 	       764	mark.c	FUNCTION_19	IF_1	IF_2
0x1d4c	            0x85c0	                           test eax, eax	       764	mark.c	FUNCTION_19	IF_1	IF_2
0x1d4e	            0x740f	                            je 0x4001d9f	       764	mark.c	FUNCTION_19	IF_1	IF_2
0x1d50	    0xc70500000000	               mov dword [0x04001d9a], 0	       765	mark.c	FUNCTION_19	IF_1	IF_2
0x1d5a	      0xe960010000	                           jmp 0x4001eff	       804	mark.c	FUNCTION_19
0x1d5f	      0x48837de000	               cmp qword [rbp - 0x20], 0	       768	mark.c	FUNCTION_19	IF_1	ELSE_1	IF_3
0x1d64	            0x7517	                           jne 0x4001dbd	       768	mark.c	FUNCTION_19	IF_1	ELSE_1	IF_3
0x1d66	      0xbf00000000	                              mov edi, 0	       769	mark.c	FUNCTION_19	IF_1	ELSE_1	CALL_2
0x1d6b	      0xe800000000	                          call 0x4001db0	       769	mark.c	FUNCTION_19	IF_1	ELSE_1	CALL_2
0x1d70	          0x4889c7	                            mov rdi, rax	       769	mark.c	FUNCTION_19	IF_1	ELSE_1	CALL_2
0x1d73	      0xe800000000	                          call 0x4001db8	       769	mark.c	FUNCTION_19	IF_1	ELSE_1	CALL_2
0x1d78	      0xe942010000	                           jmp 0x4001eff	       804	mark.c	FUNCTION_19
0x1d7d	      0xbf00000000	                              mov edi, 0	       771	mark.c	FUNCTION_19	IF_1	ELSE_1	CALL_4
0x1d82	      0xe800000000	                          call 0x4001dc7	       771	mark.c	FUNCTION_19	IF_1	ELSE_1	CALL_4
0x1d87	          0x4889c2	                            mov rdx, rax	       771	mark.c	FUNCTION_19	IF_1	ELSE_1	CALL_4
0x1d8a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       771	mark.c	FUNCTION_19	IF_1	ELSE_1	CALL_4
0x1d8e	          0x4889c6	                            mov rsi, rax	       771	mark.c	FUNCTION_19	IF_1	ELSE_1	CALL_4
0x1d91	          0x4889d7	                            mov rdi, rdx	       771	mark.c	FUNCTION_19	IF_1	ELSE_1	CALL_4
0x1d94	      0xe800000000	                          call 0x4001dd9	       771	mark.c	FUNCTION_19	IF_1	ELSE_1	CALL_4
0x1d99	      0xe921010000	                           jmp 0x4001eff	       804	mark.c	FUNCTION_19
0x1d9e	    0x8b0500000000	            mov eax, dword [0x04001de4] 	       775	mark.c	FUNCTION_19	ELSE_3	IF_4
0x1da4	            0x85c0	                           test eax, eax	       775	mark.c	FUNCTION_19	ELSE_3	IF_4
0x1da6	     0xf8513010000	                           jne 0x4001eff	       775	mark.c	FUNCTION_19	ELSE_3	IF_4
0x1dac	      0x48837de000	               cmp qword [rbp - 0x20], 0	       776	mark.c	FUNCTION_19	ELSE_3	IF_4	CALL_5
0x1db1	            0x741a	                            je 0x4001e0d	       776	mark.c	FUNCTION_19	ELSE_3	IF_4	CALL_5
0x1db3	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       776	mark.c	FUNCTION_19	ELSE_3	IF_4	CALL_5
0x1db6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       776	mark.c	FUNCTION_19	ELSE_3	IF_4	CALL_5
0x1dba	            0x89d6	                            mov esi, edx	       776	mark.c	FUNCTION_19	ELSE_3	IF_4	CALL_5
0x1dbc	          0x4889c7	                            mov rdi, rax	       776	mark.c	FUNCTION_19	ELSE_3	IF_4	CALL_5
0x1dbf	      0xe800000000	                          call 0x4001e04	       776	mark.c	FUNCTION_19	ELSE_3	IF_4	CALL_5
0x1dc4	          0x4885c0	                           test rax, rax	       776	mark.c	FUNCTION_19	ELSE_3	IF_4	CALL_5
0x1dc7	     0xf84f2000000	                            je 0x4001eff	       776	mark.c	FUNCTION_19	ELSE_3	IF_4	CALL_5
0x1dcd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       777	mark.c	FUNCTION_19	ELSE_3	IF_4
0x1dd1	          0x488b00	                    mov rax, qword [rax]	       777	mark.c	FUNCTION_19	ELSE_3	IF_4
0x1dd4	          0x4885c0	                           test rax, rax	       777	mark.c	FUNCTION_19	ELSE_3	IF_4
0x1dd7	     0xf84e2000000	                            je 0x4001eff	       777	mark.c	FUNCTION_19	ELSE_3	IF_4
0x1ddd	    0x8b0500000000	            mov eax, dword [0x04001e23] 	       779	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_5
0x1de3	            0x85c0	                           test eax, eax	       779	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_5
0x1de5	            0x751c	                           jne 0x4001e43	       779	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_5
0x1de7	      0xbf00000000	                              mov edi, 0	       782	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_5	CALL_7
0x1dec	      0xe800000000	                          call 0x4001e31	       782	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_5	CALL_7
0x1df1	          0x4889c7	                            mov rdi, rax	       782	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_5	CALL_7
0x1df4	      0xe800000000	                          call 0x4001e39	       782	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_5	CALL_7
0x1df9	    0xc70500000000	               mov dword [0x04001e43], 1	       783	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_5
0x1e03	      0xbf0a000000	                            mov edi, 0xa	       785	mark.c	FUNCTION_19	ELSE_3	IF_4	CALL_8
0x1e08	      0xe800000000	                          call 0x4001e4d	       785	mark.c	FUNCTION_19	ELSE_3	IF_4	CALL_8
0x1e0d	    0x8b0500000000	            mov eax, dword [0x04001e53] 	       786	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6
0x1e13	            0x85c0	                           test eax, eax	       786	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6
0x1e15	     0xf859f000000	                           jne 0x4001efa	       786	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6
0x1e1b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       788	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	CALL_9
0x1e1f	          0x8b7008	                mov esi, dword [rax + 8]	       788	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	CALL_9
0x1e22	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       788	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	CALL_9
0x1e26	          0x488b08	                    mov rcx, qword [rax]	       788	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	CALL_9
0x1e29	    0x488b05000000	            mov rax, qword [0x04001e70] 	       788	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	CALL_9
0x1e30	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       788	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	CALL_9
0x1e33	          0x4189f0	                            mov r8d, esi	       788	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	CALL_9
0x1e36	      0xbe00000000	                              mov esi, 0	       788	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	CALL_9
0x1e3b	          0x4889c7	                            mov rdi, rax	       788	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	CALL_9
0x1e3e	      0xb800000000	                              mov eax, 0	       788	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	CALL_9
0x1e43	      0xe800000000	                          call 0x4001e88	       788	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	CALL_9
0x1e48	    0x488b05000000	            mov rax, qword [0x04001e8f] 	       789	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	CALL_10
0x1e4f	          0x4889c7	                            mov rdi, rax	       789	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	CALL_10
0x1e52	      0xe800000000	                          call 0x4001e97	       789	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	CALL_10
0x1e57	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       790	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	IF_7
0x1e5c	            0x7522	                           jne 0x4001ec0	       790	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	IF_7
0x1e5e	        0x837de800	               cmp dword [rbp - 0x18], 0	       790	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	IF_7
0x1e62	            0x741c	                            je 0x4001ec0	       790	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	IF_7
0x1e64	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       792	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	IF_7	CALL_11
0x1e68	      0xbe0f000000	                            mov esi, 0xf	       792	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	IF_7	CALL_11
0x1e6d	          0x4889c7	                            mov rdi, rax	       792	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	IF_7	CALL_11
0x1e70	      0xe880faffff	                      call sym.mark_line	       792	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	IF_7	CALL_11
0x1e75	        0x488945d0	             mov qword [rbp - 0x30], rax	       792	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	IF_7	CALL_11
0x1e79	    0xc745fc010000	                  mov dword [rbp - 4], 1	       793	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	IF_7
0x1e80	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       795	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	IF_8
0x1e85	            0x7433	                            je 0x4001efa	       795	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	IF_8
0x1e87	        0x837de800	               cmp dword [rbp - 0x18], 0	       797	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	IF_8	CALL_13
0x1e8b	            0x7408	                            je 0x4001ed5	       797	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	IF_8	CALL_13
0x1e8d	    0x8b0500000000	            mov eax, dword [0x04001ed3] 	       797	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	IF_8	CALL_13
0x1e93	            0xeb05	                           jmp 0x4001eda	       797	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	IF_8	CALL_13
0x1e95	      0xb800000000	                              mov eax, 0	       797	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	IF_8	CALL_13
0x1e9a	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       797	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	IF_8	CALL_13
0x1e9e	            0x89c6	                            mov esi, eax	       797	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	IF_8	CALL_13
0x1ea0	          0x4889d7	                            mov rdi, rdx	       797	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	IF_8	CALL_13
0x1ea3	      0xe800000000	                          call 0x4001ee8	       797	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	IF_8	CALL_13
0x1ea8	        0x837dfc00	                  cmp dword [rbp - 4], 0	       798	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	IF_8	IF_9
0x1eac	            0x740c	                            je 0x4001efa	       798	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	IF_8	IF_9
0x1eae	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       799	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	IF_8	CALL_14
0x1eb2	          0x4889c7	                            mov rdi, rax	       799	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	IF_8	CALL_14
0x1eb5	      0xe800000000	                          call 0x4001efa	       799	mark.c	FUNCTION_19	ELSE_3	IF_4	IF_6	IF_8	CALL_14
0x1eba	      0xe800000000	                          call 0x4001eff	       802	mark.c	FUNCTION_19	ELSE_3	IF_4	CALL_15
0x1ebf	              0x90	                                     nop	       804	mark.c	FUNCTION_19
0x1ec0	              0xc9	                                   leave	       804	mark.c	FUNCTION_19
0x1ec1	              0xc3	                                     ret	       804	mark.c	FUNCTION_19
ex_changes	DO,0:functions,0:IF,4:SWITCH,0:CALL,12:ELSE,0:WHILE,0:FOR,1	117
0x252c	              0x55	                                push rbp	       952	mark.c	FUNCTION_23
0x252d	          0x4889e5	                            mov rbp, rsp	       952	mark.c	FUNCTION_23
0x2530	        0x4883ec20	                           sub rsp, 0x20	       952	mark.c	FUNCTION_23
0x2534	        0x48897de8	             mov qword [rbp - 0x18], rdi	       952	mark.c	FUNCTION_23
0x2538	      0xbf00000000	                              mov edi, 0	       957	mark.c	FUNCTION_23	CALL_2
0x253d	      0xe800000000	                          call 0x4002582	       957	mark.c	FUNCTION_23	CALL_2
0x2542	          0x4889c7	                            mov rdi, rax	       957	mark.c	FUNCTION_23	CALL_2
0x2545	      0xe800000000	                          call 0x400258a	       957	mark.c	FUNCTION_23	CALL_2
0x254a	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       959	mark.c	FUNCTION_23	FOR_1
0x2551	      0xe962010000	                           jmp 0x40026f8	       959	mark.c	FUNCTION_23	FOR_1
0x2556	    0x488b05000000	            mov rax, qword [0x0400259d] 	       961	mark.c	FUNCTION_23	FOR_1	IF_1
0x255d	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       961	mark.c	FUNCTION_23	FOR_1	IF_1
0x2560	          0x4863d2	                         movsxd rdx, edx	       961	mark.c	FUNCTION_23	FOR_1	IF_1
0x2563	        0x4883c234	                           add rdx, 0x34	       961	mark.c	FUNCTION_23	FOR_1	IF_1
0x2567	        0x48c1e204	                              shl rdx, 4	       961	mark.c	FUNCTION_23	FOR_1	IF_1
0x256b	          0x4801d0	                            add rax, rdx	       961	mark.c	FUNCTION_23	FOR_1	IF_1
0x256e	        0x4883c008	                              add rax, 8	       961	mark.c	FUNCTION_23	FOR_1	IF_1
0x2572	          0x488b00	                    mov rax, qword [rax]	       961	mark.c	FUNCTION_23	FOR_1	IF_1
0x2575	          0x4885c0	                           test rax, rax	       961	mark.c	FUNCTION_23	FOR_1	IF_1
0x2578	     0xf8431010000	                            je 0x40026ef	       961	mark.c	FUNCTION_23	FOR_1	IF_1
0x257e	      0xbf0a000000	                            mov edi, 0xa	       963	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_3
0x2583	      0xe800000000	                          call 0x40025c8	       963	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_3
0x2588	    0x8b0500000000	            mov eax, dword [0x040025ce] 	       964	mark.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x258e	            0x85c0	                           test eax, eax	       964	mark.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x2590	     0xf8544010000	                           jne 0x400271a	       964	mark.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x2596	    0x488b05000000	            mov rax, qword [0x040025dd] 	       971	mark.c	FUNCTION_23	FOR_1	IF_1
0x259d	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       966	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x25a0	          0x4863d2	                         movsxd rdx, edx	       966	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x25a3	        0x4883c234	                           add rdx, 0x34	       966	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x25a7	        0x48c1e204	                              shl rdx, 4	       966	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x25ab	          0x4801d0	                            add rax, rdx	       966	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x25ae	        0x4883c010	                           add rax, 0x10	       966	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x25b2	            0x8b30	                    mov esi, dword [rax]	       966	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x25b4	    0x488b05000000	            mov rax, qword [0x040025fb] 	       970	mark.c	FUNCTION_23	FOR_1	IF_1
0x25bb	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       970	mark.c	FUNCTION_23	FOR_1	IF_1
0x25be	          0x4863d2	                         movsxd rdx, edx	       970	mark.c	FUNCTION_23	FOR_1	IF_1
0x25c1	        0x4883c234	                           add rdx, 0x34	       970	mark.c	FUNCTION_23	FOR_1	IF_1
0x25c5	        0x48c1e204	                              shl rdx, 4	       970	mark.c	FUNCTION_23	FOR_1	IF_1
0x25c9	          0x4801d0	                            add rax, rdx	       970	mark.c	FUNCTION_23	FOR_1	IF_1
0x25cc	        0x4883c008	                              add rax, 8	       970	mark.c	FUNCTION_23	FOR_1	IF_1
0x25d0	          0x488b08	                    mov rcx, qword [rax]	       970	mark.c	FUNCTION_23	FOR_1	IF_1
0x25d3	    0x488b05000000	            mov rax, qword [0x0400261a] 	       968	mark.c	FUNCTION_23	FOR_1	IF_1
0x25da	    0x8b8048150000	          mov eax, dword [rax + 0x1548] 	       968	mark.c	FUNCTION_23	FOR_1	IF_1
0x25e0	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       966	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x25e3	            0x7d16	                           jge 0x400263b	       966	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x25e5	    0x488b05000000	            mov rax, qword [0x0400262c] 	       968	mark.c	FUNCTION_23	FOR_1	IF_1
0x25ec	    0x8b8048150000	          mov eax, dword [rax + 0x1548] 	       968	mark.c	FUNCTION_23	FOR_1	IF_1
0x25f2	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       966	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x25f5	            0x29c2	                            sub edx, eax	       966	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x25f7	            0x89d0	                            mov eax, edx	       966	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x25f9	            0xeb10	                           jmp 0x400264b	       966	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x25fb	    0x488b05000000	            mov rax, qword [0x04002642] 	       969	mark.c	FUNCTION_23	FOR_1	IF_1
0x2602	    0x8b8048150000	          mov eax, dword [rax + 0x1548] 	       969	mark.c	FUNCTION_23	FOR_1	IF_1
0x2608	          0x2b45f4	              sub eax, dword [rbp - 0xc]	       966	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x260b	    0x488b15000000	            mov rdx, qword [0x04002652] 	       967	mark.c	FUNCTION_23	FOR_1	IF_1
0x2612	    0x8b9248150000	          mov edx, dword [rdx + 0x1548] 	       967	mark.c	FUNCTION_23	FOR_1	IF_1
0x2618	          0x3b55f4	              cmp edx, dword [rbp - 0xc]	       966	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x261b	            0x7507	                           jne 0x4002664	       966	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x261d	      0xba3e000000	                           mov edx, 0x3e	       966	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x2622	            0xeb05	                           jmp 0x4002669	       966	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x2624	      0xba20000000	                           mov edx, 0x20	       966	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x2629	    0x488b3d000000	            mov rdi, qword [0x04002670] 	       966	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x2630	          0x4189f1	                            mov r9d, esi	       966	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x2633	          0x4989c8	                             mov r8, rcx	       966	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x2636	            0x89c1	                            mov ecx, eax	       966	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x2638	      0xbe00000000	                              mov esi, 0	       966	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x263d	      0xb800000000	                              mov eax, 0	       966	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x2642	      0xe800000000	                          call 0x4002687	       966	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_4
0x2647	    0x488b05000000	            mov rax, qword [0x0400268e] 	       972	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_5
0x264e	          0x4889c7	                            mov rdi, rax	       972	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_5
0x2651	      0xe800000000	                          call 0x4002696	       972	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_5
0x2656	    0x488b05000000	            mov rax, qword [0x0400269d] 	       973	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_6
0x265d	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       973	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_6
0x2660	          0x4863d2	                         movsxd rdx, edx	       973	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_6
0x2663	        0x4883c234	                           add rdx, 0x34	       973	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_6
0x2667	        0x48c1e204	                              shl rdx, 4	       973	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_6
0x266b	          0x4801d0	                            add rax, rdx	       973	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_6
0x266e	        0x4883c008	                              add rax, 8	       973	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_6
0x2672	      0xbe11000000	                           mov esi, 0x11	       973	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_6
0x2677	          0x4889c7	                            mov rdi, rax	       973	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_6
0x267a	      0xe876f2ffff	                      call sym.mark_line	       973	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_6
0x267f	        0x488945f8	                mov qword [rbp - 8], rax	       973	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_6
0x2683	      0x48837df800	                  cmp qword [rbp - 8], 0	       974	mark.c	FUNCTION_23	FOR_1	IF_1	IF_3
0x2688	            0x7453	                            je 0x400271d	       974	mark.c	FUNCTION_23	FOR_1	IF_1	IF_3
0x268a	    0x8b1500000000	            mov edx, dword [0x040026d0] 	       976	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_8
0x2690	        0x488b45f8	                mov rax, qword [rbp - 8]	       976	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_8
0x2694	            0x89d6	                            mov esi, edx	       976	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_8
0x2696	          0x4889c7	                            mov rdi, rax	       976	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_8
0x2699	      0xe800000000	                          call 0x40026de	       976	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_8
0x269e	        0x488b45f8	                mov rax, qword [rbp - 8]	       977	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_9
0x26a2	          0x4889c7	                            mov rdi, rax	       977	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_9
0x26a5	      0xe800000000	                          call 0x40026ea	       977	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_9
0x26aa	      0xe800000000	                          call 0x40026ef	       978	mark.c	FUNCTION_23	FOR_1	IF_1	CALL_10
0x26af	      0xe800000000	                          call 0x40026f4	       980	mark.c	FUNCTION_23	FOR_1	CALL_11
0x26b4	        0x8345f401	                add dword [rbp - 0xc], 1	       959	mark.c	FUNCTION_23	FOR_1
0x26b8	    0x488b05000000	            mov rax, qword [0x040026ff] 	       959	mark.c	FUNCTION_23	FOR_1
0x26bf	    0x8b8088090000	           mov eax, dword [rax + 0x988] 	       959	mark.c	FUNCTION_23	FOR_1
0x26c5	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       959	mark.c	FUNCTION_23	FOR_1
0x26c8	            0x7e14	                           jle 0x400271e	       959	mark.c	FUNCTION_23	FOR_1
0x26ca	    0x8b0500000000	            mov eax, dword [0x04002710] 	       959	mark.c	FUNCTION_23	FOR_1
0x26d0	            0x85c0	                           test eax, eax	       959	mark.c	FUNCTION_23	FOR_1
0x26d2	     0xf847efeffff	                            je 0x4002596	       959	mark.c	FUNCTION_23	FOR_1
0x26d8	            0xeb04	                           jmp 0x400271e	       959	mark.c	FUNCTION_23	FOR_1
0x26da	              0x90	                                     nop	       965	mark.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x26db	            0xeb01	                           jmp 0x400271e	       965	mark.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x26dd	              0x90	                                     nop	       975	mark.c	FUNCTION_23	FOR_1	IF_1	IF_3
0x26de	    0x488b05000000	            mov rax, qword [0x04002725] 	       982	mark.c	FUNCTION_23	IF_4
0x26e5	    0x8b9048150000	          mov edx, dword [rax + 0x1548] 	       982	mark.c	FUNCTION_23	IF_4
0x26eb	    0x488b05000000	            mov rax, qword [0x04002732] 	       982	mark.c	FUNCTION_23	IF_4
0x26f2	    0x8b8088090000	           mov eax, dword [rax + 0x988] 	       982	mark.c	FUNCTION_23	IF_4
0x26f8	            0x39c2	                            cmp edx, eax	       982	mark.c	FUNCTION_23	IF_4
0x26fa	            0x750a	                           jne 0x4002746	       982	mark.c	FUNCTION_23	IF_4
0x26fc	      0xbf00000000	                              mov edi, 0	       983	mark.c	FUNCTION_23	CALL_12
0x2701	      0xe800000000	                          call 0x4002746	       983	mark.c	FUNCTION_23	CALL_12
0x2706	              0x90	                                     nop	       984	mark.c	FUNCTION_23
0x2707	              0xc9	                                   leave	       984	mark.c	FUNCTION_23
0x2708	              0xc3	                                     ret	       984	mark.c	FUNCTION_23
read_viminfo_filemark	DO,0:functions,0:IF,5:SWITCH,0:CALL,11:ELSE,3:WHILE,0:FOR,1	210
0x41dd	              0x55	                                push rbp	      1394	mark.c	FUNCTION_33
0x41de	          0x4889e5	                            mov rbp, rsp	      1394	mark.c	FUNCTION_33
0x41e1	        0x4883ec30	                           sub rsp, 0x30	      1394	mark.c	FUNCTION_33
0x41e5	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1394	mark.c	FUNCTION_33
0x41e9	          0x8975d4	             mov dword [rbp - 0x2c], esi	      1394	mark.c	FUNCTION_33
0x41ec	    0x64488b042528	                mov rax, qword fs:[0x28]	      1394	mark.c	FUNCTION_33
0x41f5	        0x488945f8	                mov qword [rbp - 8], rax	      1394	mark.c	FUNCTION_33
0x41f9	            0x31c0	                            xor eax, eax	      1394	mark.c	FUNCTION_33
0x41fb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1401	mark.c	FUNCTION_33
0x41ff	          0x488b00	                    mov rax, qword [rax]	      1401	mark.c	FUNCTION_33
0x4202	        0x4883c001	                              add rax, 1	      1401	mark.c	FUNCTION_33
0x4206	        0x488945e8	             mov qword [rbp - 0x18], rax	      1401	mark.c	FUNCTION_33
0x420a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1404	mark.c	FUNCTION_33	IF_1
0x420e	           0xfb600	                   movzx eax, byte [rax]	      1404	mark.c	FUNCTION_33	IF_1
0x4211	            0x84c0	                             test al, al	      1402	mark.c	FUNCTION_33	IF_1
0x4213	     0xf88c4020000	                            js 0x400451d	      1402	mark.c	FUNCTION_33	IF_1
0x4219	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1406	mark.c	FUNCTION_33	IF_1	CALL_2
0x421d	          0x488b00	                    mov rax, qword [rax]	      1406	mark.c	FUNCTION_33	IF_1	CALL_2
0x4220	           0xfb600	                   movzx eax, byte [rax]	      1406	mark.c	FUNCTION_33	IF_1	CALL_2
0x4223	            0x3c27	                            cmp al, 0x27	      1404	mark.c	FUNCTION_33	IF_1
0x4225	            0x7539	                           jne 0x40042a0	      1404	mark.c	FUNCTION_33	IF_1
0x4227	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1406	mark.c	FUNCTION_33	IF_1	CALL_2
0x422b	           0xfb600	                   movzx eax, byte [rax]	      1406	mark.c	FUNCTION_33	IF_1	CALL_2
0x422e	           0xfb6c0	                           movzx eax, al	      1406	mark.c	FUNCTION_33	IF_1	CALL_2
0x4231	          0x83e830	                           sub eax, 0x30	      1406	mark.c	FUNCTION_33	IF_1	CALL_2
0x4234	          0x83f809	                              cmp eax, 9	      1406	mark.c	FUNCTION_33	IF_1	CALL_2
0x4237	            0x7648	                           jbe 0x40042c1	      1406	mark.c	FUNCTION_33	IF_1	CALL_2
0x4239	      0xe800000000	                          call 0x400427e	      1406	mark.c	FUNCTION_33	IF_1	CALL_2
0x423e	          0x488b10	                    mov rdx, qword [rax]	      1406	mark.c	FUNCTION_33	IF_1	CALL_2
0x4241	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1406	mark.c	FUNCTION_33	IF_1	CALL_2
0x4245	           0xfb600	                   movzx eax, byte [rax]	      1406	mark.c	FUNCTION_33	IF_1	CALL_2
0x4248	           0xfb6c0	                           movzx eax, al	      1406	mark.c	FUNCTION_33	IF_1	CALL_2
0x424b	          0x4801c0	                            add rax, rax	      1406	mark.c	FUNCTION_33	IF_1	CALL_2
0x424e	          0x4801d0	                            add rax, rdx	      1406	mark.c	FUNCTION_33	IF_1	CALL_2
0x4251	           0xfb700	                   movzx eax, word [rax]	      1406	mark.c	FUNCTION_33	IF_1	CALL_2
0x4254	           0xfb7c0	                           movzx eax, ax	      1406	mark.c	FUNCTION_33	IF_1	CALL_2
0x4257	      0x2500010000	                          and eax, 0x100	      1406	mark.c	FUNCTION_33	IF_1	CALL_2
0x425c	            0x85c0	                           test eax, eax	      1406	mark.c	FUNCTION_33	IF_1	CALL_2
0x425e	            0x7521	                           jne 0x40042c1	      1406	mark.c	FUNCTION_33	IF_1	CALL_2
0x4260	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1407	mark.c	FUNCTION_33	IF_1
0x4264	          0x488b00	                    mov rax, qword [rax]	      1407	mark.c	FUNCTION_33	IF_1
0x4267	           0xfb600	                   movzx eax, byte [rax]	      1407	mark.c	FUNCTION_33	IF_1
0x426a	            0x3c2d	                            cmp al, 0x2d	      1407	mark.c	FUNCTION_33	IF_1
0x426c	     0xf856b020000	                           jne 0x400451d	      1407	mark.c	FUNCTION_33	IF_1
0x4272	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1407	mark.c	FUNCTION_33	IF_1
0x4276	           0xfb600	                   movzx eax, byte [rax]	      1407	mark.c	FUNCTION_33	IF_1
0x4279	            0x3c27	                            cmp al, 0x27	      1407	mark.c	FUNCTION_33	IF_1
0x427b	     0xf855c020000	                           jne 0x400451d	      1407	mark.c	FUNCTION_33	IF_1
0x4281	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1409	mark.c	FUNCTION_33	IF_1	IF_2
0x4285	           0xfb600	                   movzx eax, byte [rax]	      1409	mark.c	FUNCTION_33	IF_1	IF_2
0x4288	            0x3c27	                            cmp al, 0x27	      1409	mark.c	FUNCTION_33	IF_1	IF_2
0x428a	     0xf8503010000	                           jne 0x40043d3	      1409	mark.c	FUNCTION_33	IF_1	IF_2
0x4290	    0x488b05000000	            mov rax, qword [0x040042d7] 	      1413	mark.c	FUNCTION_33	IF_1	IF_2	IF_3
0x4297	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	      1413	mark.c	FUNCTION_33	IF_1	IF_2	IF_3
0x429d	          0x83f864	                           cmp eax, 0x64	      1413	mark.c	FUNCTION_33	IF_1	IF_2	IF_3
0x42a0	            0x750d	                           jne 0x40042ef	      1413	mark.c	FUNCTION_33	IF_1	IF_2	IF_3
0x42a2	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1414	mark.c	FUNCTION_33	IF_1	IF_2	IF_3
0x42aa	      0xe948010000	                           jmp 0x4004437	      1414	mark.c	FUNCTION_33	IF_1	IF_2	IF_3
0x42af	    0x488b05000000	            mov rax, qword [0x040042f6] 	      1417	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x42b6	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	      1417	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x42bc	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1417	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x42bf	            0xeb76	                           jmp 0x4004377	      1417	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x42c1	    0x488b0d000000	            mov rcx, qword [0x04004308] 	      1418	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x42c8	    0x488b35000000	            mov rsi, qword [0x0400430f] 	      1418	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x42cf	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1418	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x42d2	          0x8d78ff	                      lea edi, [rax - 1]	      1418	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x42d5	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1418	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x42d8	          0x4863d0	                         movsxd rdx, eax	      1418	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x42db	          0x4889d0	                            mov rax, rdx	      1418	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x42de	        0x48c1e002	                              shl rax, 2	      1418	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x42e2	          0x4801d0	                            add rax, rdx	      1418	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x42e5	        0x48c1e003	                              shl rax, 3	      1418	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x42e9	          0x4801c8	                            add rax, rcx	      1418	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x42ec	    0x488d90a00500	                  lea rdx, [rax + 0x5a0]	      1418	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x42f3	          0x4863cf	                         movsxd rcx, edi	      1418	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x42f6	          0x4889c8	                            mov rax, rcx	      1418	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x42f9	        0x48c1e002	                              shl rax, 2	      1418	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x42fd	          0x4801c8	                            add rax, rcx	      1418	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x4300	        0x48c1e003	                              shl rax, 3	      1418	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x4304	          0x4801f0	                            add rax, rsi	      1418	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x4307	    0x4805a0050000	                          add rax, 0x5a0	      1418	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x430d	          0x488b08	                    mov rcx, qword [rax]	      1418	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x4310	          0x48890a	                    mov qword [rdx], rcx	      1418	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x4313	        0x488b4808	                mov rcx, qword [rax + 8]	      1418	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x4317	        0x48894a08	                mov qword [rdx + 8], rcx	      1418	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x431b	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      1418	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x431f	        0x48894a10	             mov qword [rdx + 0x10], rcx	      1418	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x4323	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      1418	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x4327	        0x48894a18	             mov qword [rdx + 0x18], rcx	      1418	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x432b	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1418	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x432f	        0x48894220	             mov qword [rdx + 0x20], rax	      1418	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x4333	        0x836de401	               sub dword [rbp - 0x1c], 1	      1417	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x4337	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1417	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x433b	            0x7f84	                            jg 0x4004301	      1417	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1	FOR_1
0x433d	    0x488b05000000	            mov rax, qword [0x04004384] 	      1419	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1
0x4344	    0x8b9044150000	          mov edx, dword [rax + 0x1544] 	      1419	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1
0x434a	          0x83c201	                              add edx, 1	      1419	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1
0x434d	    0x899044150000	          mov dword [rax + 0x1544], edx 	      1419	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1
0x4353	    0x488b05000000	            mov rax, qword [0x0400439a] 	      1420	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1
0x435a	    0x8b9040150000	          mov edx, dword [rax + 0x1540] 	      1420	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1
0x4360	          0x83c201	                              add edx, 1	      1420	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1
0x4363	    0x899040150000	          mov dword [rax + 0x1540], edx 	      1420	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1
0x4369	    0x488b05000000	            mov rax, qword [0x040043b0] 	      1421	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1
0x4370	    0x4805a0050000	                          add rax, 0x5a0	      1421	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1
0x4376	        0x488945f0	             mov qword [rbp - 0x10], rax	      1421	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1
0x437a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1422	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1
0x437e	    0x48c700000000	                      mov qword [rax], 0	      1422	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1
0x4385	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1423	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1
0x4389	    0x48c740180000	               mov qword [rax + 0x18], 0	      1423	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1
0x4391	            0xeb64	                           jmp 0x4004437	      1423	mark.c	FUNCTION_33	IF_1	IF_2	ELSE_1
0x4393	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1429	mark.c	FUNCTION_33	IF_1	ELSE_2	IF_4	CALL_3
0x4397	           0xfb600	                   movzx eax, byte [rax]	      1429	mark.c	FUNCTION_33	IF_1	ELSE_2	IF_4	CALL_3
0x439a	           0xfb6c0	                           movzx eax, al	      1429	mark.c	FUNCTION_33	IF_1	ELSE_2	IF_4	CALL_3
0x439d	          0x83e830	                           sub eax, 0x30	      1429	mark.c	FUNCTION_33	IF_1	ELSE_2	IF_4	CALL_3
0x43a0	          0x83f809	                              cmp eax, 9	      1429	mark.c	FUNCTION_33	IF_1	ELSE_2	IF_4	CALL_3
0x43a3	            0x772a	                            ja 0x400440f	      1429	mark.c	FUNCTION_33	IF_1	ELSE_2	IF_4	CALL_3
0x43a5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1430	mark.c	FUNCTION_33	IF_1	ELSE_2	IF_4
0x43a9	           0xfb600	                   movzx eax, byte [rax]	      1430	mark.c	FUNCTION_33	IF_1	ELSE_2	IF_4
0x43ac	           0xfb6c0	                           movzx eax, al	      1430	mark.c	FUNCTION_33	IF_1	ELSE_2	IF_4
0x43af	          0x83e816	                           sub eax, 0x16	      1430	mark.c	FUNCTION_33	IF_1	ELSE_2	IF_4
0x43b2	          0x4863d0	                         movsxd rdx, eax	      1430	mark.c	FUNCTION_33	IF_1	ELSE_2	IF_4
0x43b5	          0x4889d0	                            mov rax, rdx	      1430	mark.c	FUNCTION_33	IF_1	ELSE_2	IF_4
0x43b8	        0x48c1e002	                              shl rax, 2	      1430	mark.c	FUNCTION_33	IF_1	ELSE_2	IF_4
0x43bc	          0x4801d0	                            add rax, rdx	      1430	mark.c	FUNCTION_33	IF_1	ELSE_2	IF_4
0x43bf	        0x48c1e003	                              shl rax, 3	      1430	mark.c	FUNCTION_33	IF_1	ELSE_2	IF_4
0x43c3	    0x480500000000	                              add rax, 0	      1430	mark.c	FUNCTION_33	IF_1	ELSE_2	IF_4
0x43c9	        0x488945f0	             mov qword [rbp - 0x10], rax	      1430	mark.c	FUNCTION_33	IF_1	ELSE_2	IF_4
0x43cd	            0xeb28	                           jmp 0x4004437	      1430	mark.c	FUNCTION_33	IF_1	ELSE_2	IF_4
0x43cf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1432	mark.c	FUNCTION_33	IF_1	ELSE_3
0x43d3	           0xfb600	                   movzx eax, byte [rax]	      1432	mark.c	FUNCTION_33	IF_1	ELSE_3
0x43d6	           0xfb6c0	                           movzx eax, al	      1432	mark.c	FUNCTION_33	IF_1	ELSE_3
0x43d9	          0x83e841	                           sub eax, 0x41	      1432	mark.c	FUNCTION_33	IF_1	ELSE_3
0x43dc	          0x4863d0	                         movsxd rdx, eax	      1432	mark.c	FUNCTION_33	IF_1	ELSE_3
0x43df	          0x4889d0	                            mov rax, rdx	      1432	mark.c	FUNCTION_33	IF_1	ELSE_3
0x43e2	        0x48c1e002	                              shl rax, 2	      1432	mark.c	FUNCTION_33	IF_1	ELSE_3
0x43e6	          0x4801d0	                            add rax, rdx	      1432	mark.c	FUNCTION_33	IF_1	ELSE_3
0x43e9	        0x48c1e003	                              shl rax, 3	      1432	mark.c	FUNCTION_33	IF_1	ELSE_3
0x43ed	    0x480500000000	                              add rax, 0	      1432	mark.c	FUNCTION_33	IF_1	ELSE_3
0x43f3	        0x488945f0	             mov qword [rbp - 0x10], rax	      1432	mark.c	FUNCTION_33	IF_1	ELSE_3
0x43f7	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1433	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5
0x43fc	     0xf84db000000	                            je 0x400451d	      1433	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5
0x4402	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1433	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5
0x4406	          0x488b00	                    mov rax, qword [rax]	      1433	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5
0x4409	          0x4885c0	                           test rax, rax	      1433	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5
0x440c	            0x740a	                            je 0x4004458	      1433	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5
0x440e	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      1433	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5
0x4412	     0xf84c5000000	                            je 0x400451d	      1433	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5
0x4418	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1435	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_4
0x441c	        0x4883c001	                              add rax, 1	      1435	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_4
0x4420	          0x4889c7	                            mov rdi, rax	      1435	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_4
0x4423	      0xe800000000	                          call 0x4004468	      1435	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_4
0x4428	        0x488945e8	             mov qword [rbp - 0x18], rax	      1435	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_4
0x442c	        0x488d45e8	                   lea rax, [rbp - 0x18]	      1436	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_5
0x4430	          0x4889c7	                            mov rdi, rax	      1436	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_5
0x4433	      0xe800000000	                          call 0x4004478	      1436	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_5
0x4438	          0x4889c2	                            mov rdx, rax	      1436	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_5
0x443b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1436	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_5
0x443f	          0x488910	                    mov qword [rax], rdx	      1436	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_5
0x4442	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1437	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_6
0x4446	          0x4889c7	                            mov rdi, rax	      1437	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_6
0x4449	      0xe800000000	                          call 0x400448e	      1437	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_6
0x444e	        0x488945e8	             mov qword [rbp - 0x18], rax	      1437	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_6
0x4452	        0x488d45e8	                   lea rax, [rbp - 0x18]	      1438	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_7
0x4456	          0x4889c7	                            mov rdi, rax	      1438	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_7
0x4459	      0xe800000000	                          call 0x400449e	      1438	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_7
0x445e	            0x89c2	                            mov edx, eax	      1438	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_7
0x4460	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1438	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_7
0x4464	          0x895008	                mov dword [rax + 8], edx	      1438	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_7
0x4467	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1440	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5
0x446b	    0xc7400c000000	                mov dword [rax + 0xc], 0	      1440	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5
0x4472	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1442	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5
0x4476	    0xc74010000000	               mov dword [rax + 0x10], 0	      1442	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5
0x447d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1443	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_8
0x4481	          0x4889c7	                            mov rdi, rax	      1443	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_8
0x4484	      0xe800000000	                          call 0x40044c9	      1443	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_8
0x4489	        0x488945e8	             mov qword [rbp - 0x18], rax	      1443	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_8
0x448d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1444	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_9
0x4491	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1444	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_9
0x4495	          0x4889c7	                            mov rdi, rax	      1444	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_9
0x4498	      0xe800000000	                          call 0x40044dd	      1444	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_9
0x449d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1445	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_10
0x44a1	          0x4889c2	                            mov rdx, rax	      1445	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_10
0x44a4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1445	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_10
0x44a8	          0x488b00	                    mov rax, qword [rax]	      1445	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_10
0x44ab	          0x4829c2	                            sub rdx, rax	      1445	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_10
0x44ae	          0x4889d0	                            mov rax, rdx	      1445	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_10
0x44b1	            0x89c1	                            mov ecx, eax	      1445	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_10
0x44b3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1445	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_10
0x44b7	      0xba00000000	                              mov edx, 0	      1445	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_10
0x44bc	            0x89ce	                            mov esi, ecx	      1445	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_10
0x44be	          0x4889c7	                            mov rdi, rax	      1445	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_10
0x44c1	      0xe800000000	                          call 0x4004506	      1445	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_10
0x44c6	          0x4889c2	                            mov rdx, rax	      1445	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_10
0x44c9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1445	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_10
0x44cd	        0x48895018	             mov qword [rax + 0x18], rdx	      1445	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5	CALL_10
0x44d1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1447	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5
0x44d5	    0x48c740200000	               mov qword [rax + 0x20], 0	      1447	mark.c	FUNCTION_33	IF_1	ELSE_3	IF_5
0x44dd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1450	mark.c	FUNCTION_33	CALL_11
0x44e1	        0x488b5008	                mov rdx, qword [rax + 8]	      1450	mark.c	FUNCTION_33	CALL_11
0x44e5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1450	mark.c	FUNCTION_33	CALL_11
0x44e9	          0x488b00	                    mov rax, qword [rax]	      1450	mark.c	FUNCTION_33	CALL_11
0x44ec	      0xbe00020000	                          mov esi, 0x200	      1450	mark.c	FUNCTION_33	CALL_11
0x44f1	          0x4889c7	                            mov rdi, rax	      1450	mark.c	FUNCTION_33	CALL_11
0x44f4	      0xe800000000	                          call 0x4004539	      1450	mark.c	FUNCTION_33	CALL_11
0x44f9	        0x488b75f8	                mov rsi, qword [rbp - 8]	      1451	mark.c	FUNCTION_33
0x44fd	    0x644833342528	                xor rsi, qword fs:[0x28]	      1451	mark.c	FUNCTION_33
0x4506	            0x7405	                            je 0x400454d	      1451	mark.c	FUNCTION_33
0x4508	      0xe800000000	                          call 0x400454d	      1451	mark.c	FUNCTION_33
0x450d	              0xc9	                                   leave	      1451	mark.c	FUNCTION_33
0x450e	              0xc3	                                     ret	      1451	mark.c	FUNCTION_33
free_jumplist	DO,0:functions,0:IF,0:SWITCH,0:CALL,1:ELSE,0:WHILE,0:FOR,1	26
0x414c	              0x55	                                push rbp	      1364	mark.c	FUNCTION_30
0x414d	          0x4889e5	                            mov rbp, rsp	      1364	mark.c	FUNCTION_30
0x4150	        0x4883ec20	                           sub rsp, 0x20	      1364	mark.c	FUNCTION_30
0x4154	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1364	mark.c	FUNCTION_30
0x4158	    0xc745fc000000	                  mov dword [rbp - 4], 0	      1367	mark.c	FUNCTION_30	FOR_1
0x415f	            0xeb30	                           jmp 0x40041d1	      1367	mark.c	FUNCTION_30	FOR_1
0x4161	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1368	mark.c	FUNCTION_30	CALL_1
0x4165	          0x8b45fc	                mov eax, dword [rbp - 4]	      1368	mark.c	FUNCTION_30	CALL_1
0x4168	          0x4863d0	                         movsxd rdx, eax	      1368	mark.c	FUNCTION_30	CALL_1
0x416b	          0x4889d0	                            mov rax, rdx	      1368	mark.c	FUNCTION_30	CALL_1
0x416e	        0x48c1e002	                              shl rax, 2	      1368	mark.c	FUNCTION_30	CALL_1
0x4172	          0x4801d0	                            add rax, rdx	      1368	mark.c	FUNCTION_30	CALL_1
0x4175	        0x48c1e003	                              shl rax, 3	      1368	mark.c	FUNCTION_30	CALL_1
0x4179	          0x4801c8	                            add rax, rcx	      1368	mark.c	FUNCTION_30	CALL_1
0x417c	    0x4805b8050000	                          add rax, 0x5b8	      1368	mark.c	FUNCTION_30	CALL_1
0x4182	          0x488b00	                    mov rax, qword [rax]	      1368	mark.c	FUNCTION_30	CALL_1
0x4185	          0x4889c7	                            mov rdi, rax	      1368	mark.c	FUNCTION_30	CALL_1
0x4188	      0xe800000000	                          call 0x40041cd	      1368	mark.c	FUNCTION_30	CALL_1
0x418d	        0x8345fc01	                  add dword [rbp - 4], 1	      1367	mark.c	FUNCTION_30	FOR_1
0x4191	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1367	mark.c	FUNCTION_30	FOR_1
0x4195	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	      1367	mark.c	FUNCTION_30	FOR_1
0x419b	          0x3b45fc	                cmp eax, dword [rbp - 4]	      1367	mark.c	FUNCTION_30	FOR_1
0x419e	            0x7fc1	                            jg 0x40041a1	      1367	mark.c	FUNCTION_30	FOR_1
0x41a0	              0x90	                                     nop	      1369	mark.c	FUNCTION_30
0x41a1	              0xc9	                                   leave	      1369	mark.c	FUNCTION_30
0x41a2	              0xc3	                                     ret	      1369	mark.c	FUNCTION_30
mark_adjust	DO,0:functions,0:IF,0:SWITCH,0:CALL,1:ELSE,0:WHILE,0:FOR,0	17
0x2709	              0x55	                                push rbp	      1033	mark.c	FUNCTION_24
0x270a	          0x4889e5	                            mov rbp, rsp	      1033	mark.c	FUNCTION_24
0x270d	        0x4883ec20	                           sub rsp, 0x20	      1033	mark.c	FUNCTION_24
0x2711	        0x48897df8	                mov qword [rbp - 8], rdi	      1033	mark.c	FUNCTION_24
0x2715	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1033	mark.c	FUNCTION_24
0x2719	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1033	mark.c	FUNCTION_24
0x271d	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1033	mark.c	FUNCTION_24
0x2721	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1034	mark.c	FUNCTION_24	CALL_1
0x2725	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1034	mark.c	FUNCTION_24	CALL_1
0x2729	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      1034	mark.c	FUNCTION_24	CALL_1
0x272d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1034	mark.c	FUNCTION_24	CALL_1
0x2731	    0x41b801000000	                              mov r8d, 1	      1034	mark.c	FUNCTION_24	CALL_1
0x2737	          0x4889c7	                            mov rdi, rax	      1034	mark.c	FUNCTION_24	CALL_1
0x273a	      0xe83c000000	           call sym.mark_adjust_internal	      1034	mark.c	FUNCTION_24	CALL_1
0x273f	              0x90	                                     nop	      1035	mark.c	FUNCTION_24
0x2740	              0xc9	                                   leave	      1035	mark.c	FUNCTION_24
0x2741	              0xc3	                                     ret	      1035	mark.c	FUNCTION_24
fmarks_check_one	DO,0:functions,0:IF,1:SWITCH,0:CALL,2:ELSE,0:WHILE,0:FOR,0	35
0x1629	              0x55	                                push rbp	       595	mark.c	FUNCTION_13
0x162a	          0x4889e5	                            mov rbp, rsp	       595	mark.c	FUNCTION_13
0x162d	        0x4883ec20	                           sub rsp, 0x20	       595	mark.c	FUNCTION_13
0x1631	        0x48897df8	                mov qword [rbp - 8], rdi	       595	mark.c	FUNCTION_13
0x1635	        0x488975f0	             mov qword [rbp - 0x10], rsi	       595	mark.c	FUNCTION_13
0x1639	        0x488955e8	             mov qword [rbp - 0x18], rdx	       595	mark.c	FUNCTION_13
0x163d	        0x488b45f8	                mov rax, qword [rbp - 8]	       596	mark.c	FUNCTION_13	IF_1
0x1641	          0x8b4010	            mov eax, dword [rax + 0x10] 	       596	mark.c	FUNCTION_13	IF_1
0x1644	            0x85c0	                           test eax, eax	       596	mark.c	FUNCTION_13	IF_1
0x1646	            0x7555	                           jne 0x40016dd	       596	mark.c	FUNCTION_13	IF_1
0x1648	        0x488b45f8	                mov rax, qword [rbp - 8]	       597	mark.c	FUNCTION_13	IF_1
0x164c	        0x488b4018	            mov rax, qword [rax + 0x18] 	       597	mark.c	FUNCTION_13	IF_1
0x1650	          0x4885c0	                           test rax, rax	       597	mark.c	FUNCTION_13	IF_1
0x1653	            0x7448	                            je 0x40016dd	       597	mark.c	FUNCTION_13	IF_1
0x1655	        0x488b45f8	                mov rax, qword [rbp - 8]	       598	mark.c	FUNCTION_13	IF_1	CALL_1
0x1659	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       598	mark.c	FUNCTION_13	IF_1	CALL_1
0x165d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       598	mark.c	FUNCTION_13	IF_1	CALL_1
0x1661	          0x4889d6	                            mov rsi, rdx	       598	mark.c	FUNCTION_13	IF_1	CALL_1
0x1664	          0x4889c7	                            mov rdi, rax	       598	mark.c	FUNCTION_13	IF_1	CALL_1
0x1667	      0xe800000000	                          call 0x40016ac	       598	mark.c	FUNCTION_13	IF_1	CALL_1
0x166c	            0x85c0	                           test eax, eax	       598	mark.c	FUNCTION_13	IF_1	CALL_1
0x166e	            0x752d	                           jne 0x40016dd	       598	mark.c	FUNCTION_13	IF_1	CALL_1
0x1670	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       600	mark.c	FUNCTION_13	IF_1
0x1674	    0x8b90b8000000	            mov edx, dword [rax + 0xb8] 	       600	mark.c	FUNCTION_13	IF_1
0x167a	        0x488b45f8	                mov rax, qword [rbp - 8]	       600	mark.c	FUNCTION_13	IF_1
0x167e	          0x895010	             mov dword [rax + 0x10], edx	       600	mark.c	FUNCTION_13	IF_1
0x1681	        0x488b45f8	                mov rax, qword [rbp - 8]	       601	mark.c	FUNCTION_13	IF_1	CALL_2
0x1685	        0x488b4018	            mov rax, qword [rax + 0x18] 	       601	mark.c	FUNCTION_13	IF_1	CALL_2
0x1689	          0x4889c7	                            mov rdi, rax	       601	mark.c	FUNCTION_13	IF_1	CALL_2
0x168c	      0xe800000000	                          call 0x40016d1	       601	mark.c	FUNCTION_13	IF_1	CALL_2
0x1691	        0x488b45f8	                mov rax, qword [rbp - 8]	       602	mark.c	FUNCTION_13	IF_1
0x1695	    0x48c740180000	               mov qword [rax + 0x18], 0	       602	mark.c	FUNCTION_13	IF_1
0x169d	              0x90	                                     nop	       604	mark.c	FUNCTION_13
0x169e	              0xc9	                                   leave	       604	mark.c	FUNCTION_13
0x169f	              0xc3	                                     ret	       604	mark.c	FUNCTION_13
handle_viminfo_mark	DO,0:functions,0:IF,20:SWITCH,0:CALL,7:ELSE,9:WHILE,0:FOR,5	402
0x4618	              0x55	                                push rbp	      1502	mark.c	FUNCTION_36
0x4619	          0x4889e5	                            mov rbp, rsp	      1502	mark.c	FUNCTION_36
0x461c	        0x4883ec50	                           sub rsp, 0x50	      1502	mark.c	FUNCTION_36
0x4620	        0x48897db8	             mov qword [rbp - 0x48], rdi	      1502	mark.c	FUNCTION_36
0x4624	          0x8975b4	             mov dword [rbp - 0x4c], esi	      1502	mark.c	FUNCTION_36
0x4627	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1503	mark.c	FUNCTION_36
0x462b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1503	mark.c	FUNCTION_36
0x462f	        0x488945e8	             mov qword [rbp - 0x18], rax	      1503	mark.c	FUNCTION_36
0x4633	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      1508	mark.c	FUNCTION_36
0x463b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1512	mark.c	FUNCTION_36	IF_1
0x463f	            0x8b00	                    mov eax, dword [rax]	      1512	mark.c	FUNCTION_36	IF_1
0x4641	          0x83f804	                              cmp eax, 4	      1512	mark.c	FUNCTION_36	IF_1
0x4644	     0xf8ee2050000	                           jle 0x4004c6c	      1512	mark.c	FUNCTION_36	IF_1
0x464a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1513	mark.c	FUNCTION_36	IF_1
0x464e	            0x8b00	                    mov eax, dword [rax]	      1513	mark.c	FUNCTION_36	IF_1
0x4650	            0x85c0	                           test eax, eax	      1513	mark.c	FUNCTION_36	IF_1
0x4652	     0xf85d4050000	                           jne 0x4004c6c	      1513	mark.c	FUNCTION_36	IF_1
0x4658	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1514	mark.c	FUNCTION_36	IF_1
0x465c	        0x4883c020	                           add rax, 0x20	      1514	mark.c	FUNCTION_36	IF_1
0x4660	            0x8b00	                    mov eax, dword [rax]	      1514	mark.c	FUNCTION_36	IF_1
0x4662	            0x85c0	                           test eax, eax	      1514	mark.c	FUNCTION_36	IF_1
0x4664	     0xf85c2050000	                           jne 0x4004c6c	      1514	mark.c	FUNCTION_36	IF_1
0x466a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1515	mark.c	FUNCTION_36	IF_1
0x466e	        0x4883c040	                           add rax, 0x40	      1515	mark.c	FUNCTION_36	IF_1
0x4672	            0x8b00	                    mov eax, dword [rax]	      1515	mark.c	FUNCTION_36	IF_1
0x4674	            0x85c0	                           test eax, eax	      1515	mark.c	FUNCTION_36	IF_1
0x4676	     0xf85b0050000	                           jne 0x4004c6c	      1515	mark.c	FUNCTION_36	IF_1
0x467c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1516	mark.c	FUNCTION_36	IF_1
0x4680	        0x4883c060	                           add rax, 0x60	      1516	mark.c	FUNCTION_36	IF_1
0x4684	            0x8b00	                    mov eax, dword [rax]	      1516	mark.c	FUNCTION_36	IF_1
0x4686	            0x85c0	                           test eax, eax	      1516	mark.c	FUNCTION_36	IF_1
0x4688	     0xf859e050000	                           jne 0x4004c6c	      1516	mark.c	FUNCTION_36	IF_1
0x468e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1517	mark.c	FUNCTION_36	IF_1
0x4692	        0x4883e880	             sub rax, 0xffffffffffffff80	      1517	mark.c	FUNCTION_36	IF_1
0x4696	            0x8b00	                    mov eax, dword [rax]	      1517	mark.c	FUNCTION_36	IF_1
0x4698	          0x83f801	                              cmp eax, 1	      1517	mark.c	FUNCTION_36	IF_1
0x469b	     0xf858b050000	                           jne 0x4004c6c	      1517	mark.c	FUNCTION_36	IF_1
0x46a1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1520	mark.c	FUNCTION_36
0x46a5	        0x488b4008	                mov rax, qword [rax + 8]	      1520	mark.c	FUNCTION_36
0x46a9	          0x8945d8	             mov dword [rbp - 0x28], eax	      1520	mark.c	FUNCTION_36
0x46ac	        0x837dd827	           cmp dword [rbp - 0x28], 0x27 	      1521	mark.c	FUNCTION_36	IF_2	CALL_2
0x46b0	            0x741a	                            je 0x400470c	      1521	mark.c	FUNCTION_36	IF_2	CALL_2
0x46b2	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1521	mark.c	FUNCTION_36	IF_2	CALL_2
0x46b5	          0x83e830	                           sub eax, 0x30	      1521	mark.c	FUNCTION_36	IF_2	CALL_2
0x46b8	          0x83f809	                              cmp eax, 9	      1521	mark.c	FUNCTION_36	IF_2	CALL_2
0x46bb	            0x760f	                           jbe 0x400470c	      1521	mark.c	FUNCTION_36	IF_2	CALL_2
0x46bd	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1521	mark.c	FUNCTION_36	IF_2	CALL_2
0x46c0	          0x83e841	                           sub eax, 0x41	      1521	mark.c	FUNCTION_36	IF_2	CALL_2
0x46c3	          0x83f819	                           cmp eax, 0x19	      1521	mark.c	FUNCTION_36	IF_2	CALL_2
0x46c6	     0xf8763050000	                            ja 0x4004c6f	      1521	mark.c	FUNCTION_36	IF_2	CALL_2
0x46cc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1523	mark.c	FUNCTION_36
0x46d0	        0x4883c020	                           add rax, 0x20	      1523	mark.c	FUNCTION_36
0x46d4	        0x488b4008	                mov rax, qword [rax + 8]	      1523	mark.c	FUNCTION_36
0x46d8	        0x488945f0	             mov qword [rbp - 0x10], rax	      1523	mark.c	FUNCTION_36
0x46dc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1524	mark.c	FUNCTION_36
0x46e0	        0x4883c040	                           add rax, 0x40	      1524	mark.c	FUNCTION_36
0x46e4	        0x488b4008	                mov rax, qword [rax + 8]	      1524	mark.c	FUNCTION_36
0x46e8	          0x8945dc	             mov dword [rbp - 0x24], eax	      1524	mark.c	FUNCTION_36
0x46eb	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1525	mark.c	FUNCTION_36	IF_3
0x46f0	     0xf8e3c050000	                           jle 0x4004c72	      1525	mark.c	FUNCTION_36	IF_3
0x46f6	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      1525	mark.c	FUNCTION_36	IF_3
0x46fa	     0xf8832050000	                            js 0x4004c72	      1525	mark.c	FUNCTION_36	IF_3
0x4700	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1527	mark.c	FUNCTION_36
0x4704	        0x4883c060	                           add rax, 0x60	      1527	mark.c	FUNCTION_36
0x4708	        0x488b4008	                mov rax, qword [rax + 8]	      1527	mark.c	FUNCTION_36
0x470c	        0x488945f8	                mov qword [rbp - 8], rax	      1527	mark.c	FUNCTION_36
0x4710	        0x837dd827	           cmp dword [rbp - 0x28], 0x27 	      1529	mark.c	FUNCTION_36	IF_4
0x4714	     0xf85bc020000	                           jne 0x4004a16	      1529	mark.c	FUNCTION_36	IF_4
0x471a	    0x488b05000000	            mov rax, qword [0x04004761] 	      1532	mark.c	FUNCTION_36	IF_4	IF_5
0x4721	          0x4885c0	                           test rax, rax	      1532	mark.c	FUNCTION_36	IF_4	IF_5
0x4724	            0x7442	                            je 0x40047a8	      1532	mark.c	FUNCTION_36	IF_4	IF_5
0x4726	    0x8b0500000000	            mov eax, dword [0x0400476c] 	      1534	mark.c	FUNCTION_36	IF_4	IF_5	IF_6
0x472c	          0x83f863	                           cmp eax, 0x63	      1534	mark.c	FUNCTION_36	IF_4	IF_5	IF_6
0x472f	     0xf8f1f040000	                            jg 0x4004b94	      1534	mark.c	FUNCTION_36	IF_4	IF_5	IF_6
0x4735	    0x488b0d000000	            mov rcx, qword [0x0400477c] 	      1535	mark.c	FUNCTION_36	IF_4	IF_5	IF_6
0x473c	    0x8b0500000000	            mov eax, dword [0x04004782] 	      1535	mark.c	FUNCTION_36	IF_4	IF_5	IF_6
0x4742	          0x8d5001	                      lea edx, [rax + 1]	      1535	mark.c	FUNCTION_36	IF_4	IF_5	IF_6
0x4745	    0x891500000000	            mov dword [0x0400478b], edx 	      1535	mark.c	FUNCTION_36	IF_4	IF_5	IF_6
0x474b	          0x4863d0	                         movsxd rdx, eax	      1535	mark.c	FUNCTION_36	IF_4	IF_5	IF_6
0x474e	          0x4889d0	                            mov rax, rdx	      1535	mark.c	FUNCTION_36	IF_4	IF_5	IF_6
0x4751	        0x48c1e002	                              shl rax, 2	      1535	mark.c	FUNCTION_36	IF_4	IF_5	IF_6
0x4755	          0x4801d0	                            add rax, rdx	      1535	mark.c	FUNCTION_36	IF_4	IF_5	IF_6
0x4758	        0x48c1e003	                              shl rax, 3	      1535	mark.c	FUNCTION_36	IF_4	IF_5	IF_6
0x475c	          0x4801c8	                            add rax, rcx	      1535	mark.c	FUNCTION_36	IF_4	IF_5	IF_6
0x475f	        0x488945e0	             mov qword [rbp - 0x20], rax	      1535	mark.c	FUNCTION_36	IF_4	IF_5	IF_6
0x4763	      0xe9ec030000	                           jmp 0x4004b94	      1535	mark.c	FUNCTION_36	IF_4	IF_5	IF_6
0x4768	      0x48837df800	                  cmp qword [rbp - 8], 0	      1543	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7
0x476d	            0x7473	                            je 0x4004822	      1543	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7
0x476f	    0x488b05000000	            mov rax, qword [0x040047b6] 	      1545	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1
0x4776	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	      1545	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1
0x477c	          0x83e801	                              sub eax, 1	      1545	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1
0x477f	          0x8945c8	             mov dword [rbp - 0x38], eax	      1545	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1
0x4782	            0xeb37	                           jmp 0x40047fb	      1545	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1
0x4784	    0x488b0d000000	            mov rcx, qword [0x040047cb] 	      1546	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1	IF_8
0x478b	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      1546	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1	IF_8
0x478e	          0x4863d0	                         movsxd rdx, eax	      1546	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1	IF_8
0x4791	          0x4889d0	                            mov rax, rdx	      1546	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1	IF_8
0x4794	        0x48c1e002	                              shl rax, 2	      1546	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1	IF_8
0x4798	          0x4801d0	                            add rax, rdx	      1546	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1	IF_8
0x479b	        0x48c1e003	                              shl rax, 3	      1546	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1	IF_8
0x479f	          0x4801c8	                            add rax, rcx	      1546	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1	IF_8
0x47a2	    0x4805c0050000	                          add rax, 0x5c0	      1546	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1	IF_8
0x47a8	          0x488b00	                    mov rax, qword [rax]	      1546	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1	IF_8
0x47ab	        0x483b45f8	                cmp rax, qword [rbp - 8]	      1546	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1	IF_8
0x47af	            0x7d06	                           jge 0x40047f7	      1546	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1	IF_8
0x47b1	        0x8345c801	               add dword [rbp - 0x38], 1	      1548	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1	IF_8
0x47b5	            0xeb0a	                           jmp 0x4004801	      1549	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1	IF_8
0x47b7	        0x836dc801	               sub dword [rbp - 0x38], 1	      1545	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1
0x47bb	        0x837dc800	               cmp dword [rbp - 0x38], 0	      1545	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1
0x47bf	            0x79c3	                           jns 0x40047c4	      1545	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	FOR_1
0x47c1	        0x837dc800	               cmp dword [rbp - 0x38], 0	      1552	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	IF_9
0x47c5	            0x793d	                           jns 0x4004844	      1552	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	IF_9
0x47c7	    0x488b05000000	            mov rax, qword [0x0400480e] 	      1552	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	IF_9
0x47ce	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	      1552	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	IF_9
0x47d4	          0x83f863	                           cmp eax, 0x63	      1552	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	IF_9
0x47d7	            0x7f2b	                            jg 0x4004844	      1552	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	IF_9
0x47d9	    0xc745c8000000	               mov dword [rbp - 0x38], 0	      1554	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	IF_9
0x47e0	            0xeb22	                           jmp 0x4004844	      1554	mark.c	FUNCTION_36	IF_4	ELSE_1	IF_7	IF_9
0x47e2	    0x488b05000000	            mov rax, qword [0x04004829] 	      1556	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_2	IF_10
0x47e9	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	      1556	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_2	IF_10
0x47ef	          0x83f863	                           cmp eax, 0x63	      1556	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_2	IF_10
0x47f2	            0x7f09	                            jg 0x400483d	      1556	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_2	IF_10
0x47f4	    0xc745c8000000	               mov dword [rbp - 0x38], 0	      1558	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_2	IF_10
0x47fb	            0xeb07	                           jmp 0x4004844	      1558	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_2	IF_10
0x47fd	    0xc745c8ffffff	     mov dword [rbp - 0x38], 0xffffffff 	      1560	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3
0x4804	        0x837dc800	               cmp dword [rbp - 0x38], 0	      1562	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11
0x4808	     0xf8846030000	                            js 0x4004b94	      1562	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11
0x480e	    0x488b05000000	            mov rax, qword [0x04004855] 	      1564	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12
0x4815	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	      1564	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12
0x481b	          0x83f864	                           cmp eax, 0x64	      1564	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12
0x481e	     0xf85a6000000	                           jne 0x400490a	      1564	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12
0x4824	        0x836dc801	               sub dword [rbp - 0x38], 1	      1567	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12
0x4828	    0x488b05000000	            mov rax, qword [0x0400486f] 	      1568	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	CALL_3
0x482f	    0x488b80b80500	           mov rax, qword [rax + 0x5b8] 	      1568	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	CALL_3
0x4836	          0x4889c7	                            mov rdi, rax	      1568	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	CALL_3
0x4839	      0xe800000000	                          call 0x400487e	      1568	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	CALL_3
0x483e	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      1569	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x4845	            0xeb76	                           jmp 0x40048fd	      1569	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x4847	    0x488b0d000000	            mov rcx, qword [0x0400488e] 	      1570	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x484e	    0x488b35000000	            mov rsi, qword [0x04004895] 	      1570	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x4855	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1570	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x4858	          0x8d7801	                      lea edi, [rax + 1]	      1570	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x485b	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1570	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x485e	          0x4863d0	                         movsxd rdx, eax	      1570	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x4861	          0x4889d0	                            mov rax, rdx	      1570	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x4864	        0x48c1e002	                              shl rax, 2	      1570	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x4868	          0x4801d0	                            add rax, rdx	      1570	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x486b	        0x48c1e003	                              shl rax, 3	      1570	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x486f	          0x4801c8	                            add rax, rcx	      1570	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x4872	    0x488d90a00500	                  lea rdx, [rax + 0x5a0]	      1570	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x4879	          0x4863cf	                         movsxd rcx, edi	      1570	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x487c	          0x4889c8	                            mov rax, rcx	      1570	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x487f	        0x48c1e002	                              shl rax, 2	      1570	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x4883	          0x4801c8	                            add rax, rcx	      1570	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x4886	        0x48c1e003	                              shl rax, 3	      1570	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x488a	          0x4801f0	                            add rax, rsi	      1570	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x488d	    0x4805a0050000	                          add rax, 0x5a0	      1570	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x4893	          0x488b08	                    mov rcx, qword [rax]	      1570	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x4896	          0x48890a	                    mov qword [rdx], rcx	      1570	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x4899	        0x488b4808	                mov rcx, qword [rax + 8]	      1570	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x489d	        0x48894a08	                mov qword [rdx + 8], rcx	      1570	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x48a1	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      1570	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x48a5	        0x48894a10	             mov qword [rdx + 0x10], rcx	      1570	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x48a9	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      1570	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x48ad	        0x48894a18	             mov qword [rdx + 0x18], rcx	      1570	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x48b1	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1570	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x48b5	        0x48894220	             mov qword [rdx + 0x20], rax	      1570	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x48b9	        0x8345cc01	               add dword [rbp - 0x34], 1	      1569	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x48bd	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1569	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x48c0	          0x3b45c8	             cmp eax, dword [rbp - 0x38]	      1569	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x48c3	            0x7c82	                            jl 0x4004887	      1569	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x48c5	      0xe9bc000000	                           jmp 0x40049c6	      1569	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	IF_12	FOR_2
0x48ca	    0x488b05000000	            mov rax, qword [0x04004911] 	      1575	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x48d1	    0x8b8040150000	          mov eax, dword [rax + 0x1540] 	      1575	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x48d7	          0x8945cc	             mov dword [rbp - 0x34], eax	      1575	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x48da	            0xeb76	                           jmp 0x4004992	      1575	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x48dc	    0x488b0d000000	            mov rcx, qword [0x04004923] 	      1576	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x48e3	    0x488b35000000	            mov rsi, qword [0x0400492a] 	      1576	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x48ea	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1576	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x48ed	          0x8d78ff	                      lea edi, [rax - 1]	      1576	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x48f0	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1576	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x48f3	          0x4863d0	                         movsxd rdx, eax	      1576	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x48f6	          0x4889d0	                            mov rax, rdx	      1576	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x48f9	        0x48c1e002	                              shl rax, 2	      1576	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x48fd	          0x4801d0	                            add rax, rdx	      1576	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x4900	        0x48c1e003	                              shl rax, 3	      1576	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x4904	          0x4801c8	                            add rax, rcx	      1576	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x4907	    0x488d90a00500	                  lea rdx, [rax + 0x5a0]	      1576	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x490e	          0x4863cf	                         movsxd rcx, edi	      1576	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x4911	          0x4889c8	                            mov rax, rcx	      1576	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x4914	        0x48c1e002	                              shl rax, 2	      1576	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x4918	          0x4801c8	                            add rax, rcx	      1576	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x491b	        0x48c1e003	                              shl rax, 3	      1576	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x491f	          0x4801f0	                            add rax, rsi	      1576	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x4922	    0x4805a0050000	                          add rax, 0x5a0	      1576	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x4928	          0x488b08	                    mov rcx, qword [rax]	      1576	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x492b	          0x48890a	                    mov qword [rdx], rcx	      1576	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x492e	        0x488b4808	                mov rcx, qword [rax + 8]	      1576	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x4932	        0x48894a08	                mov qword [rdx + 8], rcx	      1576	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x4936	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      1576	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x493a	        0x48894a10	             mov qword [rdx + 0x10], rcx	      1576	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x493e	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      1576	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x4942	        0x48894a18	             mov qword [rdx + 0x18], rcx	      1576	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x4946	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1576	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x494a	        0x48894220	             mov qword [rdx + 0x20], rax	      1576	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x494e	        0x836dcc01	               sub dword [rbp - 0x34], 1	      1575	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x4952	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1575	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x4955	          0x3b45c8	             cmp eax, dword [rbp - 0x38]	      1575	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x4958	            0x7f82	                            jg 0x400491c	      1575	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4	FOR_3
0x495a	    0x488b05000000	            mov rax, qword [0x040049a1] 	      1577	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4
0x4961	    0x8b9044150000	          mov edx, dword [rax + 0x1544] 	      1577	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4
0x4967	          0x83c201	                              add edx, 1	      1577	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4
0x496a	    0x899044150000	          mov dword [rax + 0x1544], edx 	      1577	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4
0x4970	    0x488b05000000	            mov rax, qword [0x040049b7] 	      1578	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4
0x4977	    0x8b9040150000	          mov edx, dword [rax + 0x1540] 	      1578	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4
0x497d	          0x83c201	                              add edx, 1	      1578	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4
0x4980	    0x899040150000	          mov dword [rax + 0x1540], edx 	      1578	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11	ELSE_4
0x4986	    0x488b0d000000	            mov rcx, qword [0x040049cd] 	      1580	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11
0x498d	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      1580	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11
0x4990	          0x4863d0	                         movsxd rdx, eax	      1580	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11
0x4993	          0x4889d0	                            mov rax, rdx	      1580	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11
0x4996	        0x48c1e002	                              shl rax, 2	      1580	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11
0x499a	          0x4801d0	                            add rax, rdx	      1580	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11
0x499d	        0x48c1e003	                              shl rax, 3	      1580	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11
0x49a1	    0x4805a0050000	                          add rax, 0x5a0	      1580	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11
0x49a7	          0x4801c8	                            add rax, rcx	      1580	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11
0x49aa	        0x488945e0	             mov qword [rbp - 0x20], rax	      1580	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11
0x49ae	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1581	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11
0x49b2	    0x48c700000000	                      mov qword [rax], 0	      1581	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11
0x49b9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1582	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11
0x49bd	    0x48c740180000	               mov qword [rax + 0x18], 0	      1582	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11
0x49c5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1583	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11
0x49c9	    0x48c740200000	               mov qword [rax + 0x20], 0	      1583	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11
0x49d1	      0xe97e010000	                           jmp 0x4004b94	      1583	mark.c	FUNCTION_36	IF_4	ELSE_1	ELSE_3	IF_11
0x49d6	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1592	mark.c	FUNCTION_36	ELSE_5	IF_13	CALL_4
0x49d9	          0x83e830	                           sub eax, 0x30	      1592	mark.c	FUNCTION_36	ELSE_5	IF_13	CALL_4
0x49dc	          0x83f809	                              cmp eax, 9	      1592	mark.c	FUNCTION_36	ELSE_5	IF_13	CALL_4
0x49df	     0xf8718010000	                            ja 0x4004b3d	      1592	mark.c	FUNCTION_36	ELSE_5	IF_13	CALL_4
0x49e5	    0x488b05000000	            mov rax, qword [0x04004a2c] 	      1594	mark.c	FUNCTION_36	ELSE_5	IF_13	IF_14
0x49ec	          0x4885c0	                           test rax, rax	      1594	mark.c	FUNCTION_36	ELSE_5	IF_13	IF_14
0x49ef	            0x740e	                            je 0x4004a3f	      1594	mark.c	FUNCTION_36	ELSE_5	IF_13	IF_14
0x49f1	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1595	mark.c	FUNCTION_36	ELSE_5	IF_13	IF_14
0x49f4	          0x83e816	                           sub eax, 0x16	      1595	mark.c	FUNCTION_36	ELSE_5	IF_13	IF_14
0x49f7	          0x8945d0	             mov dword [rbp - 0x30], eax	      1595	mark.c	FUNCTION_36	ELSE_5	IF_13	IF_14
0x49fa	      0xe907010000	                           jmp 0x4004b46	      1595	mark.c	FUNCTION_36	ELSE_5	IF_13	IF_14
0x49ff	    0xc745d01a0000	           mov dword [rbp - 0x30], 0x1a 	      1602	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_4
0x4a06	            0xeb27	                           jmp 0x4004a6f	      1602	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_4
0x4a08	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1603	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_4	IF_15
0x4a0b	          0x4863d0	                         movsxd rdx, eax	      1603	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_4	IF_15
0x4a0e	          0x4889d0	                            mov rax, rdx	      1603	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_4	IF_15
0x4a11	        0x48c1e002	                              shl rax, 2	      1603	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_4	IF_15
0x4a15	          0x4801d0	                            add rax, rdx	      1603	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_4	IF_15
0x4a18	        0x48c1e003	                              shl rax, 3	      1603	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_4	IF_15
0x4a1c	    0x480500000000	                              add rax, 0	      1603	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_4	IF_15
0x4a22	          0x488b00	                    mov rax, qword [rax]	      1603	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_4	IF_15
0x4a25	        0x483b45f8	                cmp rax, qword [rbp - 8]	      1603	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_4	IF_15
0x4a29	            0x7c0c	                            jl 0x4004a77	      1603	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_4	IF_15
0x4a2b	        0x8345d001	               add dword [rbp - 0x30], 1	      1602	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_4
0x4a2f	        0x837dd023	           cmp dword [rbp - 0x30], 0x23 	      1602	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_4
0x4a33	            0x7ed3	                           jle 0x4004a48	      1602	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_4
0x4a35	            0xeb01	                           jmp 0x4004a78	      1602	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_4
0x4a37	              0x90	                                     nop	      1604	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_4	IF_15
0x4a38	        0x837dd024	           cmp dword [rbp - 0x30], 0x24 	      1605	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	IF_16
0x4a3c	     0xf84f3010000	                            je 0x4004c75	      1605	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	IF_16
0x4a42	    0xc745d4230000	           mov dword [rbp - 0x2c], 0x23 	      1608	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6
0x4a49	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1610	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	CALL_5
0x4a4c	          0x4863d0	                         movsxd rdx, eax	      1610	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	CALL_5
0x4a4f	          0x4889d0	                            mov rax, rdx	      1610	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	CALL_5
0x4a52	        0x48c1e002	                              shl rax, 2	      1610	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	CALL_5
0x4a56	          0x4801d0	                            add rax, rdx	      1610	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	CALL_5
0x4a59	        0x48c1e003	                              shl rax, 3	      1610	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	CALL_5
0x4a5d	    0x480500000000	                              add rax, 0	      1610	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	CALL_5
0x4a63	          0x488b00	                    mov rax, qword [rax]	      1610	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	CALL_5
0x4a66	          0x4889c7	                            mov rdi, rax	      1610	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	CALL_5
0x4a69	      0xe800000000	                          call 0x4004aae	      1610	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	CALL_5
0x4a6e	            0xeb62	                           jmp 0x4004b12	      1611	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4a70	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1612	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4a73	          0x8d48ff	                      lea ecx, [rax - 1]	      1612	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4a76	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1612	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4a79	          0x4863d0	                         movsxd rdx, eax	      1612	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4a7c	          0x4889d0	                            mov rax, rdx	      1612	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4a7f	        0x48c1e002	                              shl rax, 2	      1612	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4a83	          0x4801d0	                            add rax, rdx	      1612	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4a86	        0x48c1e003	                              shl rax, 3	      1612	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4a8a	    0x488d90000000	                          lea rdx, [rax]	      1612	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4a91	          0x4863c9	                         movsxd rcx, ecx	      1612	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4a94	          0x4889c8	                            mov rax, rcx	      1612	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4a97	        0x48c1e002	                              shl rax, 2	      1612	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4a9b	          0x4801c8	                            add rax, rcx	      1612	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4a9e	        0x48c1e003	                              shl rax, 3	      1612	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4aa2	    0x480500000000	                              add rax, 0	      1612	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4aa8	          0x488b08	                    mov rcx, qword [rax]	      1612	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4aab	          0x48890a	                    mov qword [rdx], rcx	      1612	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4aae	        0x488b4808	                mov rcx, qword [rax + 8]	      1612	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4ab2	        0x48894a08	                mov qword [rdx + 8], rcx	      1612	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4ab6	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      1612	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4aba	        0x48894a10	             mov qword [rdx + 0x10], rcx	      1612	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4abe	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      1612	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4ac2	        0x48894a18	             mov qword [rdx + 0x18], rcx	      1612	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4ac6	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1612	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4aca	        0x48894220	             mov qword [rdx + 0x20], rax	      1612	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4ace	        0x836dd401	               sub dword [rbp - 0x2c], 1	      1611	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4ad2	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1611	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4ad5	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	      1611	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4ad8	            0x7f96	                            jg 0x4004ab0	      1611	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	FOR_5
0x4ada	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1613	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6
0x4add	          0x4863d0	                         movsxd rdx, eax	      1613	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6
0x4ae0	          0x4889d0	                            mov rax, rdx	      1613	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6
0x4ae3	        0x48c1e002	                              shl rax, 2	      1613	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6
0x4ae7	          0x4801d0	                            add rax, rdx	      1613	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6
0x4aea	        0x48c1e003	                              shl rax, 3	      1613	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6
0x4aee	    0x480500000000	                              add rax, 0	      1613	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6
0x4af4	    0x48c700000000	                      mov qword [rax], 0	      1613	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6
0x4afb	            0xeb09	                           jmp 0x4004b46	      1613	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6
0x4afd	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      1617	mark.c	FUNCTION_36	ELSE_5	ELSE_7
0x4b00	          0x83e841	                           sub eax, 0x41	      1617	mark.c	FUNCTION_36	ELSE_5	ELSE_7
0x4b03	          0x8945d0	             mov dword [rbp - 0x30], eax	      1617	mark.c	FUNCTION_36	ELSE_5	ELSE_7
0x4b06	    0x488b05000000	            mov rax, qword [0x04004b4d] 	      1618	mark.c	FUNCTION_36	ELSE_5	IF_17
0x4b0d	          0x4885c0	                           test rax, rax	      1618	mark.c	FUNCTION_36	ELSE_5	IF_17
0x4b10	            0x7424	                            je 0x4004b76	      1618	mark.c	FUNCTION_36	ELSE_5	IF_17
0x4b12	    0x488b0d000000	            mov rcx, qword [0x04004b59] 	      1619	mark.c	FUNCTION_36	ELSE_5	IF_17
0x4b19	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1619	mark.c	FUNCTION_36	ELSE_5	IF_17
0x4b1c	          0x4863d0	                         movsxd rdx, eax	      1619	mark.c	FUNCTION_36	ELSE_5	IF_17
0x4b1f	          0x4889d0	                            mov rax, rdx	      1619	mark.c	FUNCTION_36	ELSE_5	IF_17
0x4b22	        0x48c1e002	                              shl rax, 2	      1619	mark.c	FUNCTION_36	ELSE_5	IF_17
0x4b26	          0x4801d0	                            add rax, rdx	      1619	mark.c	FUNCTION_36	ELSE_5	IF_17
0x4b29	        0x48c1e003	                              shl rax, 3	      1619	mark.c	FUNCTION_36	ELSE_5	IF_17
0x4b2d	          0x4801c8	                            add rax, rcx	      1619	mark.c	FUNCTION_36	ELSE_5	IF_17
0x4b30	        0x488945e0	             mov qword [rbp - 0x20], rax	      1619	mark.c	FUNCTION_36	ELSE_5	IF_17
0x4b34	            0xeb1e	                           jmp 0x4004b94	      1619	mark.c	FUNCTION_36	ELSE_5	IF_17
0x4b36	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1621	mark.c	FUNCTION_36	ELSE_5	ELSE_8
0x4b39	          0x4863d0	                         movsxd rdx, eax	      1621	mark.c	FUNCTION_36	ELSE_5	ELSE_8
0x4b3c	          0x4889d0	                            mov rax, rdx	      1621	mark.c	FUNCTION_36	ELSE_5	ELSE_8
0x4b3f	        0x48c1e002	                              shl rax, 2	      1621	mark.c	FUNCTION_36	ELSE_5	ELSE_8
0x4b43	          0x4801d0	                            add rax, rdx	      1621	mark.c	FUNCTION_36	ELSE_5	ELSE_8
0x4b46	        0x48c1e003	                              shl rax, 3	      1621	mark.c	FUNCTION_36	ELSE_5	ELSE_8
0x4b4a	    0x480500000000	                              add rax, 0	      1621	mark.c	FUNCTION_36	ELSE_5	ELSE_8
0x4b50	        0x488945e0	             mov qword [rbp - 0x20], rax	      1621	mark.c	FUNCTION_36	ELSE_5	ELSE_8
0x4b54	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1624	mark.c	FUNCTION_36	ELSE_8	IF_18
0x4b59	     0xf84d7000000	                            je 0x4004c76	      1624	mark.c	FUNCTION_36	ELSE_8	IF_18
0x4b5f	    0x488b05000000	            mov rax, qword [0x04004ba6] 	      1626	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x4b66	          0x4885c0	                           test rax, rax	      1626	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x4b69	            0x7524	                           jne 0x4004bcf	      1626	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x4b6b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1626	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x4b6f	          0x488b00	                    mov rax, qword [rax]	      1626	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x4b72	          0x4885c0	                           test rax, rax	      1626	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x4b75	            0x7418	                            je 0x4004bcf	      1626	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x4b77	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1627	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x4b7b	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1627	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x4b7f	        0x483b45f8	                cmp rax, qword [rbp - 8]	      1627	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x4b83	            0x7c0a	                            jl 0x4004bcf	      1627	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x4b85	        0x837db400	               cmp dword [rbp - 0x4c], 0	      1627	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x4b89	     0xf84a7000000	                            je 0x4004c76	      1627	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x4b8f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1629	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x4b93	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1629	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x4b97	          0x488910	                    mov qword [rax], rdx	      1629	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x4b9a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1630	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x4b9e	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1630	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x4ba1	          0x895008	                mov dword [rax + 8], edx	      1630	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x4ba4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1632	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x4ba8	    0xc7400c000000	                mov dword [rax + 0xc], 0	      1632	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x4baf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1634	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x4bb3	    0xc74010000000	               mov dword [rax + 0x10], 0	      1634	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x4bba	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1635	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19	CALL_6
0x4bbe	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1635	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19	CALL_6
0x4bc2	          0x4889c7	                            mov rdi, rax	      1635	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19	CALL_6
0x4bc5	      0xe800000000	                          call 0x4004c0a	      1635	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19	CALL_6
0x4bca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1636	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19	IF_20
0x4bce	        0x4883e880	             sub rax, 0xffffffffffffff80	      1636	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19	IF_20
0x4bd2	          0x8b401c	            mov eax, dword [rax + 0x1c] 	      1636	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19	IF_20
0x4bd5	            0x85c0	                           test eax, eax	      1636	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19	IF_20
0x4bd7	            0x7426	                            je 0x4004c3f	      1636	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19	IF_20
0x4bd9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1638	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19	IF_20
0x4bdd	        0x4883e880	             sub rax, 0xffffffffffffff80	      1638	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19	IF_20
0x4be1	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1638	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19	IF_20
0x4be5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1638	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19	IF_20
0x4be9	        0x48895018	             mov qword [rax + 0x18], rdx	      1638	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19	IF_20
0x4bed	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1639	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19	IF_20
0x4bf1	        0x4883e880	             sub rax, 0xffffffffffffff80	      1639	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19	IF_20
0x4bf5	    0x48c740100000	               mov qword [rax + 0x10], 0	      1639	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19	IF_20
0x4bfd	            0xeb1f	                           jmp 0x4004c5e	      1639	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19	IF_20
0x4bff	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1642	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19	CALL_7
0x4c03	        0x4883e880	             sub rax, 0xffffffffffffff80	      1642	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19	CALL_7
0x4c07	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1642	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19	CALL_7
0x4c0b	          0x4889c7	                            mov rdi, rax	      1642	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19	CALL_7
0x4c0e	      0xe800000000	                          call 0x4004c53	      1642	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19	CALL_7
0x4c13	          0x4889c2	                            mov rdx, rax	      1642	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19	CALL_7
0x4c16	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1642	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19	CALL_7
0x4c1a	        0x48895018	             mov qword [rax + 0x18], rdx	      1642	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19	CALL_7
0x4c1e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1643	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x4c22	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1643	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x4c26	        0x48895020	             mov qword [rax + 0x20], rdx	      1643	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x4c2a	            0xeb0a	                           jmp 0x4004c76	      1643	mark.c	FUNCTION_36	ELSE_8	IF_18	IF_19
0x4c2c	              0x90	                                     nop	      1518	mark.c	FUNCTION_36	IF_1
0x4c2d	            0xeb07	                           jmp 0x4004c76	      1518	mark.c	FUNCTION_36	IF_1
0x4c2f	              0x90	                                     nop	      1522	mark.c	FUNCTION_36	IF_2
0x4c30	            0xeb04	                           jmp 0x4004c76	      1522	mark.c	FUNCTION_36	IF_2
0x4c32	              0x90	                                     nop	      1526	mark.c	FUNCTION_36	IF_3
0x4c33	            0xeb01	                           jmp 0x4004c76	      1526	mark.c	FUNCTION_36	IF_3
0x4c35	              0x90	                                     nop	      1607	mark.c	FUNCTION_36	ELSE_5	IF_13	ELSE_6	IF_16
0x4c36	              0xc9	                                   leave	      1646	mark.c	FUNCTION_36
0x4c37	              0xc3	                                     ret	      1646	mark.c	FUNCTION_36
mark_line	DO,0:functions,0:IF,3:SWITCH,0:CALL,6:ELSE,0:WHILE,0:FOR,1	76
0x18f5	              0x55	                                push rbp	       689	mark.c	FUNCTION_17
0x18f6	          0x4889e5	                            mov rbp, rsp	       689	mark.c	FUNCTION_17
0x18f9	              0x53	                                push rbx	       689	mark.c	FUNCTION_17
0x18fa	        0x4883ec38	                           sub rsp, 0x38	       689	mark.c	FUNCTION_17
0x18fe	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       689	mark.c	FUNCTION_17
0x1902	          0x8975c4	             mov dword [rbp - 0x3c], esi	       689	mark.c	FUNCTION_17
0x1905	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       693	mark.c	FUNCTION_17	IF_1
0x1909	          0x488b00	                    mov rax, qword [rax]	       693	mark.c	FUNCTION_17	IF_1
0x190c	          0x4885c0	                           test rax, rax	       693	mark.c	FUNCTION_17	IF_1
0x190f	            0x7416	                            je 0x4001967	       693	mark.c	FUNCTION_17	IF_1
0x1911	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       693	mark.c	FUNCTION_17	IF_1
0x1915	          0x488b10	                    mov rdx, qword [rax]	       693	mark.c	FUNCTION_17	IF_1
0x1918	    0x488b05000000	            mov rax, qword [0x0400195f] 	       693	mark.c	FUNCTION_17	IF_1
0x191f	          0x488b00	                    mov rax, qword [rax]	       693	mark.c	FUNCTION_17	IF_1
0x1922	          0x4839c2	                            cmp rdx, rax	       693	mark.c	FUNCTION_17	IF_1
0x1925	            0x7e0f	                           jle 0x4001976	       693	mark.c	FUNCTION_17	IF_1
0x1927	      0xbf00000000	                              mov edi, 0	       694	mark.c	FUNCTION_17	CALL_1
0x192c	      0xe800000000	                          call 0x4001971	       694	mark.c	FUNCTION_17	CALL_1
0x1931	      0xe9b9000000	                           jmp 0x4001a2f	       694	mark.c	FUNCTION_17	CALL_1
0x1936	    0x488b05000000	            mov rax, qword [0x0400197d] 	       695	mark.c	FUNCTION_17	CALL_4
0x193d	            0x89c3	                            mov ebx, eax	       695	mark.c	FUNCTION_17	CALL_4
0x193f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       695	mark.c	FUNCTION_17	CALL_4
0x1943	          0x488b00	                    mov rax, qword [rax]	       695	mark.c	FUNCTION_17	CALL_4
0x1946	          0x4889c7	                            mov rdi, rax	       695	mark.c	FUNCTION_17	CALL_4
0x1949	      0xe800000000	                          call 0x400198e	       695	mark.c	FUNCTION_17	CALL_4
0x194e	          0x4889c7	                            mov rdi, rax	       695	mark.c	FUNCTION_17	CALL_4
0x1951	      0xe800000000	                          call 0x4001996	       695	mark.c	FUNCTION_17	CALL_4
0x1956	            0x89de	                            mov esi, ebx	       695	mark.c	FUNCTION_17	CALL_4
0x1958	          0x4889c7	                            mov rdi, rax	       695	mark.c	FUNCTION_17	CALL_4
0x195b	      0xe800000000	                          call 0x40019a0	       695	mark.c	FUNCTION_17	CALL_4
0x1960	        0x488945e8	             mov qword [rbp - 0x18], rax	       695	mark.c	FUNCTION_17	CALL_4
0x1964	      0x48837de800	               cmp qword [rbp - 0x18], 0	       696	mark.c	FUNCTION_17	IF_2
0x1969	            0x7507	                           jne 0x40019b2	       696	mark.c	FUNCTION_17	IF_2
0x196b	      0xb800000000	                              mov eax, 0	       697	mark.c	FUNCTION_17	IF_2
0x1970	            0xeb7d	                           jmp 0x4001a2f	       697	mark.c	FUNCTION_17	IF_2
0x1972	    0xc745dc000000	               mov dword [rbp - 0x24], 0	       699	mark.c	FUNCTION_17
0x1979	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       700	mark.c	FUNCTION_17	FOR_1	CALL_5
0x197d	        0x488945e0	             mov qword [rbp - 0x20], rax	       700	mark.c	FUNCTION_17	FOR_1	CALL_5
0x1981	            0xeb53	                           jmp 0x4001a16	       700	mark.c	FUNCTION_17	FOR_1	CALL_5
0x1983	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       702	mark.c	FUNCTION_17	FOR_1	CALL_6
0x1987	          0x4889c7	                            mov rdi, rax	       702	mark.c	FUNCTION_17	FOR_1	CALL_6
0x198a	      0xe800000000	                          call 0x40019cf	       702	mark.c	FUNCTION_17	FOR_1	CALL_6
0x198f	           0x145dc	             add dword [rbp - 0x24], eax	       702	mark.c	FUNCTION_17	FOR_1	CALL_6
0x1992	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       703	mark.c	FUNCTION_17	FOR_1	IF_3
0x1995	            0x4898	                                    cdqe	       703	mark.c	FUNCTION_17	FOR_1	IF_3
0x1997	    0x488b0d000000	            mov rcx, qword [0x040019de] 	       703	mark.c	FUNCTION_17	FOR_1	IF_3
0x199e	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	       703	mark.c	FUNCTION_17	FOR_1	IF_3
0x19a1	          0x4863d2	                         movsxd rdx, edx	       703	mark.c	FUNCTION_17	FOR_1	IF_3
0x19a4	          0x4829d1	                            sub rcx, rdx	       703	mark.c	FUNCTION_17	FOR_1	IF_3
0x19a7	          0x4889ca	                            mov rdx, rcx	       703	mark.c	FUNCTION_17	FOR_1	IF_3
0x19aa	          0x4839d0	                            cmp rax, rdx	       703	mark.c	FUNCTION_17	FOR_1	IF_3
0x19ad	            0x7d34	                           jge 0x4001a23	       703	mark.c	FUNCTION_17	FOR_1	IF_3
0x19af	    0x8b0500000000	            mov eax, dword [0x040019f5] 	       700	mark.c	FUNCTION_17	FOR_1	CALL_5
0x19b5	            0x85c0	                           test eax, eax	       700	mark.c	FUNCTION_17	FOR_1	CALL_5
0x19b7	            0x7412	                            je 0x4001a0b	       700	mark.c	FUNCTION_17	FOR_1	CALL_5
0x19b9	    0x488b05000000	            mov rax, qword [0x04001a00] 	       700	mark.c	FUNCTION_17	FOR_1	CALL_5
0x19c0	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       700	mark.c	FUNCTION_17	FOR_1	CALL_5
0x19c4	          0x4889d7	                            mov rdi, rdx	       700	mark.c	FUNCTION_17	FOR_1	CALL_5
0x19c7	            0xffd0	                                call rax	       700	mark.c	FUNCTION_17	FOR_1	CALL_5
0x19c9	            0xeb05	                           jmp 0x4001a10	       700	mark.c	FUNCTION_17	FOR_1	CALL_5
0x19cb	      0xb801000000	                              mov eax, 1	       700	mark.c	FUNCTION_17	FOR_1	CALL_5
0x19d0	            0x4898	                                    cdqe	       700	mark.c	FUNCTION_17	FOR_1	CALL_5
0x19d2	        0x480145e0	            add qword [rbp - 0x20], rax 	       700	mark.c	FUNCTION_17	FOR_1	CALL_5
0x19d6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       700	mark.c	FUNCTION_17	FOR_1	CALL_5
0x19da	           0xfb600	                   movzx eax, byte [rax]	       700	mark.c	FUNCTION_17	FOR_1	CALL_5
0x19dd	            0x84c0	                             test al, al	       700	mark.c	FUNCTION_17	FOR_1	CALL_5
0x19df	            0x75a2	                           jne 0x40019c3	       700	mark.c	FUNCTION_17	FOR_1	CALL_5
0x19e1	            0xeb01	                           jmp 0x4001a24	       700	mark.c	FUNCTION_17	FOR_1	CALL_5
0x19e3	              0x90	                                     nop	       704	mark.c	FUNCTION_17	FOR_1	IF_3
0x19e4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       706	mark.c	FUNCTION_17
0x19e8	          0xc60000	                       mov byte [rax], 0	       706	mark.c	FUNCTION_17
0x19eb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       707	mark.c	FUNCTION_17
0x19ef	        0x4883c438	                           add rsp, 0x38	       708	mark.c	FUNCTION_17
0x19f3	              0x5b	                                 pop rbx	       708	mark.c	FUNCTION_17
0x19f4	              0x5d	                                 pop rbp	       708	mark.c	FUNCTION_17
0x19f5	              0xc3	                                     ret	       708	mark.c	FUNCTION_17
write_viminfo_marks	DO,0:functions,1:IF,0:SWITCH,0:CALL,4:ELSE,0:WHILE,0:FOR,0	118
0x5792	              0x55	                                push rbp	      1890	mark.c	FUNCTION_43
0x5793	          0x4889e5	                            mov rbp, rsp	      1890	mark.c	FUNCTION_43
0x5796	        0x4883ec30	                           sub rsp, 0x30	      1890	mark.c	FUNCTION_43
0x579a	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1890	mark.c	FUNCTION_43
0x579e	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1890	mark.c	FUNCTION_43
0x57a2	    0x488b05000000	            mov rax, qword [0x040057e9] 	      1900	mark.c	FUNCTION_43	CALL_1
0x57a9	        0x488945f8	                mov qword [rbp - 8], rax	      1900	mark.c	FUNCTION_43	CALL_1
0x57ad	            0xeb4e	                           jmp 0x400583d	      1900	mark.c	FUNCTION_43	CALL_1
0x57af	    0x488b05000000	            mov rax, qword [0x040057f6] 	      1900	mark.c	FUNCTION_43	CALL_1
0x57b6	        0x483945f8	                cmp qword [rbp - 8], rax	      1900	mark.c	FUNCTION_43	CALL_1
0x57ba	            0x740a	                            je 0x4005806	      1900	mark.c	FUNCTION_43	CALL_1
0x57bc	        0x488b45f8	                mov rax, qword [rbp - 8]	      1900	mark.c	FUNCTION_43	CALL_1
0x57c0	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1900	mark.c	FUNCTION_43	CALL_1
0x57c4	            0xeb07	                           jmp 0x400580d	      1900	mark.c	FUNCTION_43	CALL_1
0x57c6	    0x488b05000000	            mov rax, qword [0x0400580d] 	      1900	mark.c	FUNCTION_43	CALL_1
0x57cd	        0x488945f0	             mov qword [rbp - 0x10], rax	      1900	mark.c	FUNCTION_43	CALL_1
0x57d1	            0xeb18	                           jmp 0x400582b	      1900	mark.c	FUNCTION_43	CALL_1
0x57d3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1901	mark.c	FUNCTION_43	CALL_2
0x57d7	          0x4889c7	                            mov rdi, rax	      1901	mark.c	FUNCTION_43	CALL_2
0x57da	      0xe800000000	                          call 0x400581f	      1901	mark.c	FUNCTION_43	CALL_2
0x57df	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1900	mark.c	FUNCTION_43	CALL_1
0x57e3	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1900	mark.c	FUNCTION_43	CALL_1
0x57e7	        0x488945f0	             mov qword [rbp - 0x10], rax	      1900	mark.c	FUNCTION_43	CALL_1
0x57eb	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1900	mark.c	FUNCTION_43	CALL_1
0x57f0	            0x75e1	                           jne 0x4005813	      1900	mark.c	FUNCTION_43	CALL_1
0x57f2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1900	mark.c	FUNCTION_43	CALL_1
0x57f6	          0x488b00	                    mov rax, qword [rax]	      1900	mark.c	FUNCTION_43	CALL_1
0x57f9	        0x488945f8	                mov qword [rbp - 8], rax	      1900	mark.c	FUNCTION_43	CALL_1
0x57fd	      0x48837df800	                  cmp qword [rbp - 8], 0	      1900	mark.c	FUNCTION_43	CALL_1
0x5802	            0x75ab	                           jne 0x40057ef	      1900	mark.c	FUNCTION_43	CALL_1
0x5804	      0xbf00000000	                              mov edi, 0	      1903	mark.c	FUNCTION_43	CALL_4
0x5809	      0xe800000000	                          call 0x400584e	      1903	mark.c	FUNCTION_43	CALL_4
0x580e	          0x4889c2	                            mov rdx, rax	      1903	mark.c	FUNCTION_43	CALL_4
0x5811	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1903	mark.c	FUNCTION_43	CALL_4
0x5815	          0x4889c6	                            mov rsi, rax	      1903	mark.c	FUNCTION_43	CALL_4
0x5818	          0x4889d7	                            mov rdi, rdx	      1903	mark.c	FUNCTION_43	CALL_4
0x581b	      0xe800000000	                          call 0x4005860	      1903	mark.c	FUNCTION_43	CALL_4
0x5820	    0x488b05000000	            mov rax, qword [0x04005867] 	      1904	mark.c	FUNCTION_43
0x5827	        0x488945e8	             mov qword [rbp - 0x18], rax	      1904	mark.c	FUNCTION_43
0x582b	      0xe911010000	                           jmp 0x4005981	      1904	mark.c	FUNCTION_43
0x5830	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1910	mark.c	FUNCTION_43	FUNCTION_1	IF_1
0x5834	    0x8b8000120000	          mov eax, dword [rax + 0x1200] 	      1910	mark.c	FUNCTION_43	FUNCTION_1	IF_1
0x583a	            0x85c0	                           test eax, eax	      1910	mark.c	FUNCTION_43	FUNCTION_1	IF_1
0x583c	     0xf84f3000000	                            je 0x4005975	      1910	mark.c	FUNCTION_43	FUNCTION_1	IF_1
0x5842	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1912	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_2
0x5846	    0x488b80180300	           mov rax, qword [rax + 0x318] 	      1912	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_2
0x584d	          0x4885c0	                           test rax, rax	      1912	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_2
0x5850	            0x7409	                            je 0x400589b	      1912	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_2
0x5852	    0xc745e0010000	               mov dword [rbp - 0x20], 1	      1913	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_2
0x5859	            0xeb44	                           jmp 0x40058df	      1913	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_2
0x585b	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      1916	mark.c	FUNCTION_43	FUNCTION_1	IF_1	ELSE_1
0x5862	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1917	mark.c	FUNCTION_43	FUNCTION_1	IF_1	ELSE_1	FOR_1
0x5869	            0xeb2e	                           jmp 0x40058d9	      1917	mark.c	FUNCTION_43	FUNCTION_1	IF_1	ELSE_1	FOR_1
0x586b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1918	mark.c	FUNCTION_43	FUNCTION_1	IF_1	ELSE_1	FOR_1	IF_3
0x586f	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1918	mark.c	FUNCTION_43	FUNCTION_1	IF_1	ELSE_1	FOR_1	IF_3
0x5872	          0x4863d2	                         movsxd rdx, edx	      1918	mark.c	FUNCTION_43	FUNCTION_1	IF_1	ELSE_1	FOR_1	IF_3
0x5875	        0x4883c214	                           add rdx, 0x14	      1918	mark.c	FUNCTION_43	FUNCTION_1	IF_1	ELSE_1	FOR_1	IF_3
0x5879	        0x48c1e204	                              shl rdx, 4	      1918	mark.c	FUNCTION_43	FUNCTION_1	IF_1	ELSE_1	FOR_1	IF_3
0x587d	          0x4801d0	                            add rax, rdx	      1918	mark.c	FUNCTION_43	FUNCTION_1	IF_1	ELSE_1	FOR_1	IF_3
0x5880	        0x4883c008	                              add rax, 8	      1918	mark.c	FUNCTION_43	FUNCTION_1	IF_1	ELSE_1	FOR_1	IF_3
0x5884	          0x488b00	                    mov rax, qword [rax]	      1918	mark.c	FUNCTION_43	FUNCTION_1	IF_1	ELSE_1	FOR_1	IF_3
0x5887	          0x4885c0	                           test rax, rax	      1918	mark.c	FUNCTION_43	FUNCTION_1	IF_1	ELSE_1	FOR_1	IF_3
0x588a	            0x7409	                            je 0x40058d5	      1918	mark.c	FUNCTION_43	FUNCTION_1	IF_1	ELSE_1	FOR_1	IF_3
0x588c	    0xc745e0010000	               mov dword [rbp - 0x20], 1	      1920	mark.c	FUNCTION_43	FUNCTION_1	IF_1	ELSE_1	FOR_1	IF_3
0x5893	            0xeb0a	                           jmp 0x40058df	      1921	mark.c	FUNCTION_43	FUNCTION_1	IF_1	ELSE_1	FOR_1	IF_3
0x5895	        0x8345e401	               add dword [rbp - 0x1c], 1	      1917	mark.c	FUNCTION_43	FUNCTION_1	IF_1	ELSE_1	FOR_1
0x5899	        0x837de419	           cmp dword [rbp - 0x1c], 0x19 	      1917	mark.c	FUNCTION_43	FUNCTION_1	IF_1	ELSE_1	FOR_1
0x589d	            0x7ecc	                           jle 0x40058ab	      1917	mark.c	FUNCTION_43	FUNCTION_1	IF_1	ELSE_1	FOR_1
0x589f	        0x837de000	               cmp dword [rbp - 0x20], 0	      1924	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4
0x58a3	     0xf848c000000	                            je 0x4005975	      1924	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4
0x58a9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1924	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4
0x58ad	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1924	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4
0x58b4	          0x4885c0	                           test rax, rax	      1924	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4
0x58b7	            0x747c	                            je 0x4005975	      1924	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4
0x58b9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1925	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4
0x58bd	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1925	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4
0x58c4	           0xfb600	                   movzx eax, byte [rax]	      1925	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4
0x58c7	            0x84c0	                             test al, al	      1925	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4
0x58c9	            0x746a	                            je 0x4005975	      1925	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4
0x58cb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1926	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	CALL_1
0x58cf	          0x4889c7	                            mov rdi, rax	      1926	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	CALL_1
0x58d2	      0xe861f3ffff	               call sym.skip_for_viminfo	      1926	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	CALL_1
0x58d7	            0x85c0	                           test eax, eax	      1926	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	CALL_1
0x58d9	            0x755a	                           jne 0x4005975	      1926	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	CALL_1
0x58db	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      1928	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	IF_5
0x58e0	            0x7515	                           jne 0x4005937	      1928	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	IF_5
0x58e2	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1929	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	CALL_2
0x58e6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1929	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	CALL_2
0x58ea	          0x4889d6	                            mov rsi, rdx	      1929	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	CALL_2
0x58ed	          0x4889c7	                            mov rdi, rax	      1929	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	CALL_2
0x58f0	      0xe838fcffff	             call sym.write_buffer_marks	      1929	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	CALL_2
0x58f5	            0xeb3e	                           jmp 0x4005975	      1929	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	CALL_2
0x58f7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1930	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	ELSE_2	IF_6	CALL_3
0x58fb	      0xbe01000000	                              mov esi, 1	      1930	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	ELSE_2	IF_6	CALL_3
0x5900	          0x4889c7	                            mov rdi, rax	      1930	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	ELSE_2	IF_6	CALL_3
0x5903	      0xe800000000	                          call 0x4005948	      1930	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	ELSE_2	IF_6	CALL_3
0x5908	          0x83f801	                              cmp eax, 1	      1930	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	ELSE_2	IF_6	CALL_3
0x590b	            0x7528	                           jne 0x4005975	      1930	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	ELSE_2	IF_6	CALL_3
0x590d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1931	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	ELSE_2	IF_6
0x5911	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      1931	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	ELSE_2	IF_6
0x5915	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1931	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	ELSE_2	IF_6
0x5919	            0x8b00	                    mov eax, dword [rax]	      1931	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	ELSE_2	IF_6
0x591b	          0x8d4801	                      lea ecx, [rax + 1]	      1931	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	ELSE_2	IF_6
0x591e	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1931	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	ELSE_2	IF_6
0x5922	            0x890a	                    mov dword [rdx], ecx	      1931	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	ELSE_2	IF_6
0x5924	            0x4898	                                    cdqe	      1931	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	ELSE_2	IF_6
0x5926	        0x48c1e003	                              shl rax, 3	      1931	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	ELSE_2	IF_6
0x592a	        0x488d1406	                    lea rdx, [rsi + rax]	      1931	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	ELSE_2	IF_6
0x592e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1931	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	ELSE_2	IF_6
0x5932	          0x488902	                    mov qword [rdx], rax	      1931	mark.c	FUNCTION_43	FUNCTION_1	IF_1	IF_4	ELSE_2	IF_6
0x5935	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1904	mark.c	FUNCTION_43
0x5939	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1904	mark.c	FUNCTION_43
0x593d	        0x488945e8	             mov qword [rbp - 0x18], rax	      1904	mark.c	FUNCTION_43
0x5941	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1904	mark.c	FUNCTION_43
0x5946	     0xf85e4feffff	                           jne 0x4005870	      1904	mark.c	FUNCTION_43
0x594c	              0x90	                                     nop	      1935	mark.c	FUNCTION_43
0x594d	              0xc9	                                   leave	      1935	mark.c	FUNCTION_43
0x594e	              0xc3	                                     ret	      1935	mark.c	FUNCTION_43
buf_compare	DO,0:functions,0:IF,1:SWITCH,0:CALL,0:ELSE,0:WHILE,0:FOR,0	30
0x594f	              0x55	                                push rbp	      1945	mark.c	FUNCTION_44
0x5950	          0x4889e5	                            mov rbp, rsp	      1945	mark.c	FUNCTION_44
0x5953	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1945	mark.c	FUNCTION_44
0x5957	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1945	mark.c	FUNCTION_44
0x595b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1946	mark.c	FUNCTION_44
0x595f	          0x488b00	                    mov rax, qword [rax]	      1946	mark.c	FUNCTION_44
0x5962	        0x488945f0	             mov qword [rbp - 0x10], rax	      1946	mark.c	FUNCTION_44
0x5966	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1947	mark.c	FUNCTION_44
0x596a	          0x488b00	                    mov rax, qword [rax]	      1947	mark.c	FUNCTION_44
0x596d	        0x488945f8	                mov qword [rbp - 8], rax	      1947	mark.c	FUNCTION_44
0x5971	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1949	mark.c	FUNCTION_44	IF_1
0x5975	    0x488b90400100	           mov rdx, qword [rax + 0x140] 	      1949	mark.c	FUNCTION_44	IF_1
0x597c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1949	mark.c	FUNCTION_44	IF_1
0x5980	    0x488b80400100	           mov rax, qword [rax + 0x140] 	      1949	mark.c	FUNCTION_44	IF_1
0x5987	          0x4839c2	                            cmp rdx, rax	      1949	mark.c	FUNCTION_44	IF_1
0x598a	            0x7507	                           jne 0x40059d3	      1949	mark.c	FUNCTION_44	IF_1
0x598c	      0xb800000000	                              mov eax, 0	      1950	mark.c	FUNCTION_44	IF_1
0x5991	            0xeb28	                           jmp 0x40059fb	      1950	mark.c	FUNCTION_44	IF_1
0x5993	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1951	mark.c	FUNCTION_44
0x5997	    0x488b90400100	           mov rdx, qword [rax + 0x140] 	      1951	mark.c	FUNCTION_44
0x599e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1951	mark.c	FUNCTION_44
0x59a2	    0x488b80400100	           mov rax, qword [rax + 0x140] 	      1951	mark.c	FUNCTION_44
0x59a9	          0x4839c2	                            cmp rdx, rax	      1951	mark.c	FUNCTION_44
0x59ac	            0x7e07	                           jle 0x40059f5	      1951	mark.c	FUNCTION_44
0x59ae	      0xb8ffffffff	                     mov eax, 0xffffffff	      1951	mark.c	FUNCTION_44
0x59b3	            0xeb05	                           jmp 0x40059fa	      1951	mark.c	FUNCTION_44
0x59b5	      0xb801000000	                              mov eax, 1	      1951	mark.c	FUNCTION_44
0x59ba	              0x90	                                     nop	      1951	mark.c	FUNCTION_44
0x59bb	              0x5d	                                 pop rbp	      1952	mark.c	FUNCTION_44
0x59bc	              0xc3	                                     ret	      1952	mark.c	FUNCTION_44
