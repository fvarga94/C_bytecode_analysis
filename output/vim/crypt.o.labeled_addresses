crypt_decode_alloc	CALL,3:ELSE,0:IF,3:functions,0:WHILE,0:DO,0:FOR,0:SWITCH,0	55
0x759	              0x55	                                push rbp	       408	crypt.c	FUNCTION_15
0x75a	          0x4889e5	                            mov rbp, rsp	       408	crypt.c	FUNCTION_15
0x75d	        0x4883ec30	                           sub rsp, 0x30	       408	crypt.c	FUNCTION_15
0x761	        0x48897de8	             mov qword [rbp - 0x18], rdi	       408	crypt.c	FUNCTION_15
0x765	        0x488975e0	             mov qword [rbp - 0x20], rsi	       408	crypt.c	FUNCTION_15
0x769	        0x488955d8	             mov qword [rbp - 0x28], rdx	       408	crypt.c	FUNCTION_15
0x76d	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       408	crypt.c	FUNCTION_15
0x771	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       409	crypt.c	FUNCTION_15
0x775	            0x8b00	                    mov eax, dword [rax]	       409	crypt.c	FUNCTION_15
0x777	          0x4863d0	                         movsxd rdx, eax	       409	crypt.c	FUNCTION_15
0x77a	          0x4889d0	                            mov rax, rdx	       409	crypt.c	FUNCTION_15
0x77d	          0x4801c0	                            add rax, rax	       409	crypt.c	FUNCTION_15
0x780	          0x4801d0	                            add rax, rdx	       409	crypt.c	FUNCTION_15
0x783	        0x48c1e005	                              shl rax, 5	       409	crypt.c	FUNCTION_15
0x787	    0x480500000000	                              add rax, 0	       409	crypt.c	FUNCTION_15
0x78d	        0x488945f8	                mov qword [rbp - 8], rax	       409	crypt.c	FUNCTION_15
0x791	        0x488b45f8	                mov rax, qword [rbp - 8]	       411	crypt.c	FUNCTION_15	IF_1
0x795	        0x488b4048	            mov rax, qword [rax + 0x48] 	       411	crypt.c	FUNCTION_15	IF_1
0x799	          0x4885c0	                           test rax, rax	       411	crypt.c	FUNCTION_15	IF_1
0x79c	            0x741c	                            je 0x40007fa	       411	crypt.c	FUNCTION_15	IF_1
0x79e	        0x488b45f8	                mov rax, qword [rbp - 8]	       413	crypt.c	FUNCTION_15	CALL_1
0x7a2	        0x488b4048	            mov rax, qword [rax + 0x48] 	       413	crypt.c	FUNCTION_15	CALL_1
0x7a6	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       413	crypt.c	FUNCTION_15	CALL_1
0x7aa	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       413	crypt.c	FUNCTION_15	CALL_1
0x7ae	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       413	crypt.c	FUNCTION_15	CALL_1
0x7b2	        0x488b7de8	             mov rdi, qword [rbp - 0x18]	       413	crypt.c	FUNCTION_15	CALL_1
0x7b6	            0xffd0	                                call rax	       413	crypt.c	FUNCTION_15	CALL_1
0x7b8	            0xeb58	                           jmp 0x4000852	       413	crypt.c	FUNCTION_15	CALL_1
0x7ba	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       415	crypt.c	FUNCTION_15	IF_2
0x7bf	            0x7506	                           jne 0x4000807	       415	crypt.c	FUNCTION_15	IF_2
0x7c1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       417	crypt.c	FUNCTION_15	IF_2
0x7c5	            0xeb4b	                           jmp 0x4000852	       417	crypt.c	FUNCTION_15	IF_2
0x7c7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       419	crypt.c	FUNCTION_15	CALL_2
0x7cb	            0x89c7	                            mov edi, eax	       419	crypt.c	FUNCTION_15	CALL_2
0x7cd	      0xe800000000	                          call 0x4000812	       419	crypt.c	FUNCTION_15	CALL_2
0x7d2	          0x4889c2	                            mov rdx, rax	       419	crypt.c	FUNCTION_15	CALL_2
0x7d5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       419	crypt.c	FUNCTION_15	CALL_2
0x7d9	          0x488910	                    mov qword [rax], rdx	       419	crypt.c	FUNCTION_15	CALL_2
0x7dc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       420	crypt.c	FUNCTION_15	IF_3
0x7e0	          0x488b00	                    mov rax, qword [rax]	       420	crypt.c	FUNCTION_15	IF_3
0x7e3	          0x4885c0	                           test rax, rax	       420	crypt.c	FUNCTION_15	IF_3
0x7e6	            0x7509	                           jne 0x4000831	       420	crypt.c	FUNCTION_15	IF_3
0x7e8	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       421	crypt.c	FUNCTION_15	IF_3
0x7ef	            0xeb21	                           jmp 0x4000852	       421	crypt.c	FUNCTION_15	IF_3
0x7f1	        0x488b45f8	                mov rax, qword [rbp - 8]	       422	crypt.c	FUNCTION_15	CALL_3
0x7f5	        0x488b4038	            mov rax, qword [rax + 0x38] 	       422	crypt.c	FUNCTION_15	CALL_3
0x7f9	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       422	crypt.c	FUNCTION_15	CALL_3
0x7fd	          0x488b0a	                    mov rcx, qword [rdx]	       422	crypt.c	FUNCTION_15	CALL_3
0x800	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       422	crypt.c	FUNCTION_15	CALL_3
0x804	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       422	crypt.c	FUNCTION_15	CALL_3
0x808	        0x488b7de8	             mov rdi, qword [rbp - 0x18]	       422	crypt.c	FUNCTION_15	CALL_3
0x80c	            0xffd0	                                call rax	       422	crypt.c	FUNCTION_15	CALL_3
0x80e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       423	crypt.c	FUNCTION_15
0x812	              0xc9	                                   leave	       424	crypt.c	FUNCTION_15
0x813	              0xc3	                                     ret	       424	crypt.c	FUNCTION_15
crypt_method_nr_from_name	CALL,1:ELSE,0:IF,1:functions,0:WHILE,0:DO,0:FOR,1:SWITCH,0	28
0x0	              0x55	                                push rbp	       137	crypt.c	FUNCTION_1
0x1	          0x4889e5	                            mov rbp, rsp	       137	crypt.c	FUNCTION_1
0x4	        0x4883ec20	                           sub rsp, 0x20	       137	crypt.c	FUNCTION_1
0x8	        0x48897de8	             mov qword [rbp - 0x18], rdi	       137	crypt.c	FUNCTION_1
0xc	    0xc745fc000000	                  mov dword [rbp - 4], 0	       140	crypt.c	FUNCTION_1	FOR_1
0x13	            0xeb38	                           jmp 0x400008d	       140	crypt.c	FUNCTION_1	FOR_1
0x15	          0x8b45fc	                mov eax, dword [rbp - 4]	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x18	          0x4863d0	                         movsxd rdx, eax	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x1b	          0x4889d0	                            mov rax, rdx	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x1e	          0x4801c0	                            add rax, rax	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x21	          0x4801d0	                            add rax, rdx	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x24	        0x48c1e005	                              shl rax, 5	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x28	    0x480500000000	                              add rax, 0	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x2e	          0x488b10	                    mov rdx, qword [rax]	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x31	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x35	          0x4889d6	                            mov rsi, rdx	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x38	          0x4889c7	                            mov rdi, rax	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x3b	      0xe800000000	                          call 0x4000080	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x40	            0x85c0	                           test eax, eax	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x42	            0x7505	                           jne 0x4000089	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x44	          0x8b45fc	                mov eax, dword [rbp - 4]	       142	crypt.c	FUNCTION_1	FOR_1	IF_1
0x47	            0xeb0f	                           jmp 0x4000098	       142	crypt.c	FUNCTION_1	FOR_1	IF_1
0x49	        0x8345fc01	                  add dword [rbp - 4], 1	       140	crypt.c	FUNCTION_1	FOR_1
0x4d	        0x837dfc02	                  cmp dword [rbp - 4], 2	       140	crypt.c	FUNCTION_1	FOR_1
0x51	            0x7ec2	                           jle 0x4000055	       140	crypt.c	FUNCTION_1	FOR_1
0x53	      0xb800000000	                              mov eax, 0	       143	crypt.c	FUNCTION_1
0x58	              0xc9	                                   leave	       144	crypt.c	FUNCTION_1
0x59	              0xc3	                                     ret	       144	crypt.c	FUNCTION_1
crypt_append_msg	CALL,6:ELSE,1:IF,1:functions,0:WHILE,0:DO,0:FOR,0:SWITCH,0	57
0xb46	              0x55	                                push rbp	       580	crypt.c	FUNCTION_24
0xb47	          0x4889e5	                            mov rbp, rsp	       580	crypt.c	FUNCTION_24
0xb4a	        0x4883ec10	                           sub rsp, 0x10	       580	crypt.c	FUNCTION_24
0xb4e	        0x48897df8	                mov qword [rbp - 8], rdi	       580	crypt.c	FUNCTION_24
0xb52	        0x488b45f8	                mov rax, qword [rbp - 8]	       581	crypt.c	FUNCTION_24	IF_1	CALL_1
0xb56	          0x4889c7	                            mov rdi, rax	       581	crypt.c	FUNCTION_24	IF_1	CALL_1
0xb59	      0xe800000000	                          call 0x4000b9e	       581	crypt.c	FUNCTION_24	IF_1	CALL_1
0xb5e	            0x85c0	                           test eax, eax	       581	crypt.c	FUNCTION_24	IF_1	CALL_1
0xb60	            0x7524	                           jne 0x4000bc6	       581	crypt.c	FUNCTION_24	IF_1	CALL_1
0xb62	      0xbf00000000	                              mov edi, 0	       582	crypt.c	FUNCTION_24	CALL_3
0xb67	      0xe800000000	                          call 0x4000bac	       582	crypt.c	FUNCTION_24	CALL_3
0xb6c	          0x4889c2	                            mov rdx, rax	       582	crypt.c	FUNCTION_24	CALL_3
0xb6f	    0x488b05000000	            mov rax, qword [0x04000bb6] 	       582	crypt.c	FUNCTION_24	CALL_3
0xb76	          0x4889d6	                            mov rsi, rdx	       582	crypt.c	FUNCTION_24	CALL_3
0xb79	          0x4889c7	                            mov rdi, rax	       582	crypt.c	FUNCTION_24	CALL_3
0xb7c	      0xe800000000	                          call 0x4000bc1	       582	crypt.c	FUNCTION_24	CALL_3
0xb81	      0xe998000000	                           jmp 0x4000c5e	       589	crypt.c	FUNCTION_24
0xb86	    0x488b15000000	            mov rdx, qword [0x04000bcd] 	       585	crypt.c	FUNCTION_24	ELSE_1	CALL_4
0xb8d	          0x4889d0	                            mov rax, rdx	       585	crypt.c	FUNCTION_24	ELSE_1	CALL_4
0xb90	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       585	crypt.c	FUNCTION_24	ELSE_1	CALL_4
0xb97	          0x4889c6	                            mov rsi, rax	       585	crypt.c	FUNCTION_24	ELSE_1	CALL_4
0xb9a	      0xb800000000	                              mov eax, 0	       585	crypt.c	FUNCTION_24	ELSE_1	CALL_4
0xb9f	          0x4889f7	                            mov rdi, rsi	       585	crypt.c	FUNCTION_24	ELSE_1	CALL_4
0xba2	            0xf2ae	              repne scasb al, byte [rdi]	       585	crypt.c	FUNCTION_24	ELSE_1	CALL_4
0xba4	          0x4889c8	                            mov rax, rcx	       585	crypt.c	FUNCTION_24	ELSE_1	CALL_4
0xba7	          0x48f7d0	                                 not rax	       585	crypt.c	FUNCTION_24	ELSE_1	CALL_4
0xbaa	        0x4883e801	                              sub rax, 1	       585	crypt.c	FUNCTION_24	ELSE_1	CALL_4
0xbae	          0x4801d0	                            add rax, rdx	       585	crypt.c	FUNCTION_24	ELSE_1	CALL_4
0xbb1	      0x66c7005b00	                    mov word [rax], 0x5b	       585	crypt.c	FUNCTION_24	ELSE_1	CALL_4
0xbb6	        0x488b45f8	                mov rax, qword [rbp - 8]	       586	crypt.c	FUNCTION_24	ELSE_1	CALL_5
0xbba	    0x488b80481700	          mov rax, qword [rax + 0x1748] 	       586	crypt.c	FUNCTION_24	ELSE_1	CALL_5
0xbc1	           0xfb600	                   movzx eax, byte [rax]	       586	crypt.c	FUNCTION_24	ELSE_1	CALL_5
0xbc4	            0x84c0	                             test al, al	       586	crypt.c	FUNCTION_24	ELSE_1	CALL_5
0xbc6	            0x740d	                            je 0x4000c15	       586	crypt.c	FUNCTION_24	ELSE_1	CALL_5
0xbc8	        0x488b45f8	                mov rax, qword [rbp - 8]	       586	crypt.c	FUNCTION_24	ELSE_1	CALL_5
0xbcc	    0x488b80481700	          mov rax, qword [rax + 0x1748] 	       586	crypt.c	FUNCTION_24	ELSE_1	CALL_5
0xbd3	            0xeb07	                           jmp 0x4000c1c	       586	crypt.c	FUNCTION_24	ELSE_1	CALL_5
0xbd5	    0x488b05000000	            mov rax, qword [0x04000c1c] 	       586	crypt.c	FUNCTION_24	ELSE_1	CALL_5
0xbdc	    0x488b15000000	            mov rdx, qword [0x04000c23] 	       586	crypt.c	FUNCTION_24	ELSE_1	CALL_5
0xbe3	          0x4889c6	                            mov rsi, rax	       586	crypt.c	FUNCTION_24	ELSE_1	CALL_5
0xbe6	          0x4889d7	                            mov rdi, rdx	       586	crypt.c	FUNCTION_24	ELSE_1	CALL_5
0xbe9	      0xe800000000	                          call 0x4000c2e	       586	crypt.c	FUNCTION_24	ELSE_1	CALL_5
0xbee	    0x488b15000000	            mov rdx, qword [0x04000c35] 	       587	crypt.c	FUNCTION_24	ELSE_1	CALL_6
0xbf5	          0x4889d0	                            mov rax, rdx	       587	crypt.c	FUNCTION_24	ELSE_1	CALL_6
0xbf8	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       587	crypt.c	FUNCTION_24	ELSE_1	CALL_6
0xbff	          0x4889c6	                            mov rsi, rax	       587	crypt.c	FUNCTION_24	ELSE_1	CALL_6
0xc02	      0xb800000000	                              mov eax, 0	       587	crypt.c	FUNCTION_24	ELSE_1	CALL_6
0xc07	          0x4889f7	                            mov rdi, rsi	       587	crypt.c	FUNCTION_24	ELSE_1	CALL_6
0xc0a	            0xf2ae	              repne scasb al, byte [rdi]	       587	crypt.c	FUNCTION_24	ELSE_1	CALL_6
0xc0c	          0x4889c8	                            mov rax, rcx	       587	crypt.c	FUNCTION_24	ELSE_1	CALL_6
0xc0f	          0x48f7d0	                                 not rax	       587	crypt.c	FUNCTION_24	ELSE_1	CALL_6
0xc12	        0x4883e801	                              sub rax, 1	       587	crypt.c	FUNCTION_24	ELSE_1	CALL_6
0xc16	          0x4801d0	                            add rax, rdx	       587	crypt.c	FUNCTION_24	ELSE_1	CALL_6
0xc19	      0x66c7005d00	                    mov word [rax], 0x5d	       587	crypt.c	FUNCTION_24	ELSE_1	CALL_6
0xc1e	              0x90	                                     nop	       589	crypt.c	FUNCTION_24
0xc1f	              0xc9	                                   leave	       589	crypt.c	FUNCTION_24
0xc20	              0xc3	                                     ret	       589	crypt.c	FUNCTION_24
crypt_set_cm_option	CALL,2:ELSE,0:IF,0:functions,0:WHILE,0:DO,0:FOR,0:SWITCH,0	25
0x1da	              0x55	                                push rbp	       215	crypt.c	FUNCTION_7
0x1db	          0x4889e5	                            mov rbp, rsp	       215	crypt.c	FUNCTION_7
0x1de	        0x4883ec10	                           sub rsp, 0x10	       215	crypt.c	FUNCTION_7
0x1e2	        0x48897df8	                mov qword [rbp - 8], rdi	       215	crypt.c	FUNCTION_7
0x1e6	          0x8975f4	              mov dword [rbp - 0xc], esi	       215	crypt.c	FUNCTION_7
0x1e9	        0x488b45f8	                mov rax, qword [rbp - 8]	       216	crypt.c	FUNCTION_7	CALL_1
0x1ed	    0x488b80481700	          mov rax, qword [rax + 0x1748] 	       216	crypt.c	FUNCTION_7	CALL_1
0x1f4	          0x4889c7	                            mov rdi, rax	       216	crypt.c	FUNCTION_7	CALL_1
0x1f7	      0xe800000000	                          call 0x400023c	       216	crypt.c	FUNCTION_7	CALL_1
0x1fc	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       217	crypt.c	FUNCTION_7	CALL_2
0x1ff	          0x4863d0	                         movsxd rdx, eax	       217	crypt.c	FUNCTION_7	CALL_2
0x202	          0x4889d0	                            mov rax, rdx	       217	crypt.c	FUNCTION_7	CALL_2
0x205	          0x4801c0	                            add rax, rax	       217	crypt.c	FUNCTION_7	CALL_2
0x208	          0x4801d0	                            add rax, rdx	       217	crypt.c	FUNCTION_7	CALL_2
0x20b	        0x48c1e005	                              shl rax, 5	       217	crypt.c	FUNCTION_7	CALL_2
0x20f	    0x480500000000	                              add rax, 0	       217	crypt.c	FUNCTION_7	CALL_2
0x215	          0x488b00	                    mov rax, qword [rax]	       217	crypt.c	FUNCTION_7	CALL_2
0x218	          0x4889c7	                            mov rdi, rax	       217	crypt.c	FUNCTION_7	CALL_2
0x21b	      0xe800000000	                          call 0x4000260	       217	crypt.c	FUNCTION_7	CALL_2
0x220	          0x4889c2	                            mov rdx, rax	       217	crypt.c	FUNCTION_7	CALL_2
0x223	        0x488b45f8	                mov rax, qword [rbp - 8]	       217	crypt.c	FUNCTION_7	CALL_2
0x227	    0x488990481700	          mov qword [rax + 0x1748], rdx 	       217	crypt.c	FUNCTION_7	CALL_2
0x22e	              0x90	                                     nop	       218	crypt.c	FUNCTION_7
0x22f	              0xc9	                                   leave	       218	crypt.c	FUNCTION_7
0x230	              0xc3	                                     ret	       218	crypt.c	FUNCTION_7
crypt_method_nr_from_magic	CALL,5:ELSE,0:IF,3:functions,0:WHILE,0:DO,0:FOR,1:SWITCH,0	52
0x5a	              0x55	                                push rbp	       153	crypt.c	FUNCTION_2
0x5b	          0x4889e5	                            mov rbp, rsp	       153	crypt.c	FUNCTION_2
0x5e	        0x4883ec20	                           sub rsp, 0x20	       153	crypt.c	FUNCTION_2
0x62	        0x48897de8	             mov qword [rbp - 0x18], rdi	       153	crypt.c	FUNCTION_2
0x66	          0x8975e4	             mov dword [rbp - 0x1c], esi	       153	crypt.c	FUNCTION_2
0x69	        0x837de40b	            cmp dword [rbp - 0x1c], 0xb 	       156	crypt.c	FUNCTION_2	IF_1
0x6d	            0x7f0a	                            jg 0x40000b9	       156	crypt.c	FUNCTION_2	IF_1
0x6f	      0xb8ffffffff	                     mov eax, 0xffffffff	       157	crypt.c	FUNCTION_2	IF_1
0x74	      0xe993000000	                           jmp 0x400014c	       157	crypt.c	FUNCTION_2	IF_1
0x79	    0xc745fc000000	                  mov dword [rbp - 4], 0	       159	crypt.c	FUNCTION_2	FOR_1
0x80	            0xeb3d	                           jmp 0x40000ff	       159	crypt.c	FUNCTION_2	FOR_1
0x82	          0x8b45fc	                mov eax, dword [rbp - 4]	       160	crypt.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x85	          0x4863d0	                         movsxd rdx, eax	       160	crypt.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x88	          0x4889d0	                            mov rax, rdx	       160	crypt.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x8b	          0x4801c0	                            add rax, rax	       160	crypt.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x8e	          0x4801d0	                            add rax, rdx	       160	crypt.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x91	        0x48c1e005	                              shl rax, 5	       160	crypt.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x95	    0x480500000000	                              add rax, 0	       160	crypt.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x9b	          0x488b08	                    mov rcx, qword [rax]	       160	crypt.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x9e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       160	crypt.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0xa2	      0xba0c000000	                            mov edx, 0xc	       160	crypt.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0xa7	          0x4889ce	                            mov rsi, rcx	       160	crypt.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0xaa	          0x4889c7	                            mov rdi, rax	       160	crypt.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0xad	      0xe800000000	                          call 0x40000f2	       160	crypt.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0xb2	            0x85c0	                           test eax, eax	       160	crypt.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0xb4	            0x7505	                           jne 0x40000fb	       160	crypt.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0xb6	          0x8b45fc	                mov eax, dword [rbp - 4]	       161	crypt.c	FUNCTION_2	FOR_1	IF_2
0xb9	            0xeb51	                           jmp 0x400014c	       161	crypt.c	FUNCTION_2	FOR_1	IF_2
0xbb	        0x8345fc01	                  add dword [rbp - 4], 1	       159	crypt.c	FUNCTION_2	FOR_1
0xbf	        0x837dfc02	                  cmp dword [rbp - 4], 2	       159	crypt.c	FUNCTION_2	FOR_1
0xc3	            0x7ebd	                           jle 0x40000c2	       159	crypt.c	FUNCTION_2	FOR_1
0xc5	      0xbf00000000	                              mov edi, 0	       163	crypt.c	FUNCTION_2	CALL_2
0xca	      0xe800000000	                          call 0x400010f	       163	crypt.c	FUNCTION_2	CALL_2
0xcf	          0x8945fc	                mov dword [rbp - 4], eax	       163	crypt.c	FUNCTION_2	CALL_2
0xd2	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       164	crypt.c	FUNCTION_2	IF_3	CALL_3
0xd5	          0x3b45fc	                cmp eax, dword [rbp - 4]	       164	crypt.c	FUNCTION_2	IF_3	CALL_3
0xd8	            0x7c2d	                            jl 0x4000147	       164	crypt.c	FUNCTION_2	IF_3	CALL_3
0xda	          0x8b45fc	                mov eax, dword [rbp - 4]	       164	crypt.c	FUNCTION_2	IF_3	CALL_3
0xdd	          0x4863d0	                         movsxd rdx, eax	       164	crypt.c	FUNCTION_2	IF_3	CALL_3
0xe0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       164	crypt.c	FUNCTION_2	IF_3	CALL_3
0xe4	      0xbe00000000	                              mov esi, 0	       164	crypt.c	FUNCTION_2	IF_3	CALL_3
0xe9	          0x4889c7	                            mov rdi, rax	       164	crypt.c	FUNCTION_2	IF_3	CALL_3
0xec	      0xe800000000	                          call 0x4000131	       164	crypt.c	FUNCTION_2	IF_3	CALL_3
0xf1	            0x85c0	                           test eax, eax	       164	crypt.c	FUNCTION_2	IF_3	CALL_3
0xf3	            0x7512	                           jne 0x4000147	       164	crypt.c	FUNCTION_2	IF_3	CALL_3
0xf5	      0xbf00000000	                              mov edi, 0	       165	crypt.c	FUNCTION_2	CALL_5
0xfa	      0xe800000000	                          call 0x400013f	       165	crypt.c	FUNCTION_2	CALL_5
0xff	          0x4889c7	                            mov rdi, rax	       165	crypt.c	FUNCTION_2	CALL_5
0x102	      0xe800000000	                          call 0x4000147	       165	crypt.c	FUNCTION_2	CALL_5
0x107	      0xb8ffffffff	                     mov eax, 0xffffffff	       167	crypt.c	FUNCTION_2
0x10c	              0xc9	                                   leave	       168	crypt.c	FUNCTION_2
0x10d	              0xc3	                                     ret	       168	crypt.c	FUNCTION_2
crypt_self_test	CALL,2:ELSE,0:IF,1:functions,0:WHILE,0:DO,0:FOR,0:SWITCH,0	31
0x231	              0x55	                                push rbp	       226	crypt.c	FUNCTION_8
0x232	          0x4889e5	                            mov rbp, rsp	       226	crypt.c	FUNCTION_8
0x235	        0x4883ec10	                           sub rsp, 0x10	       226	crypt.c	FUNCTION_8
0x239	    0x488b05000000	            mov rax, qword [0x04000280] 	       227	crypt.c	FUNCTION_8	CALL_1
0x240	          0x4889c7	                            mov rdi, rax	       227	crypt.c	FUNCTION_8	CALL_1
0x243	      0xe800000000	                          call 0x4000288	       227	crypt.c	FUNCTION_8	CALL_1
0x248	          0x8945fc	                mov dword [rbp - 4], eax	       227	crypt.c	FUNCTION_8	CALL_1
0x24b	          0x8b45fc	                mov eax, dword [rbp - 4]	       229	crypt.c	FUNCTION_8	IF_1
0x24e	          0x4863d0	                         movsxd rdx, eax	       229	crypt.c	FUNCTION_8	IF_1
0x251	          0x4889d0	                            mov rax, rdx	       229	crypt.c	FUNCTION_8	IF_1
0x254	          0x4801c0	                            add rax, rax	       229	crypt.c	FUNCTION_8	IF_1
0x257	          0x4801d0	                            add rax, rdx	       229	crypt.c	FUNCTION_8	IF_1
0x25a	        0x48c1e005	                              shl rax, 5	       229	crypt.c	FUNCTION_8	IF_1
0x25e	    0x480500000000	                              add rax, 0	       229	crypt.c	FUNCTION_8	IF_1
0x264	          0x488b00	                    mov rax, qword [rax]	       229	crypt.c	FUNCTION_8	IF_1
0x267	          0x4885c0	                           test rax, rax	       229	crypt.c	FUNCTION_8	IF_1
0x26a	            0x7507	                           jne 0x40002b3	       229	crypt.c	FUNCTION_8	IF_1
0x26c	      0xb801000000	                              mov eax, 1	       230	crypt.c	FUNCTION_8	IF_1
0x271	            0xeb23	                           jmp 0x40002d6	       230	crypt.c	FUNCTION_8	IF_1
0x273	          0x8b45fc	                mov eax, dword [rbp - 4]	       231	crypt.c	FUNCTION_8	CALL_2
0x276	          0x4863d0	                         movsxd rdx, eax	       231	crypt.c	FUNCTION_8	CALL_2
0x279	          0x4889d0	                            mov rax, rdx	       231	crypt.c	FUNCTION_8	CALL_2
0x27c	          0x4801c0	                            add rax, rax	       231	crypt.c	FUNCTION_8	CALL_2
0x27f	          0x4801d0	                            add rax, rdx	       231	crypt.c	FUNCTION_8	CALL_2
0x282	        0x48c1e005	                              shl rax, 5	       231	crypt.c	FUNCTION_8	CALL_2
0x286	    0x480500000000	                              add rax, 0	       231	crypt.c	FUNCTION_8	CALL_2
0x28c	          0x488b10	                    mov rdx, qword [rax]	       231	crypt.c	FUNCTION_8	CALL_2
0x28f	      0xb800000000	                              mov eax, 0	       231	crypt.c	FUNCTION_8	CALL_2
0x294	            0xffd2	                                call rdx	       231	crypt.c	FUNCTION_8	CALL_2
0x296	              0xc9	                                   leave	       232	crypt.c	FUNCTION_8
0x297	              0xc3	                                     ret	       232	crypt.c	FUNCTION_8
crypt_check_method	CALL,2:ELSE,0:IF,1:functions,0:WHILE,0:DO,0:FOR,0:SWITCH,0	14
0x97f	              0x55	                                push rbp	       498	crypt.c	FUNCTION_21
0x980	          0x4889e5	                            mov rbp, rsp	       498	crypt.c	FUNCTION_21
0x983	        0x4883ec10	                           sub rsp, 0x10	       498	crypt.c	FUNCTION_21
0x987	          0x897dfc	                mov dword [rbp - 4], edi	       498	crypt.c	FUNCTION_21
0x98a	        0x837dfc01	                  cmp dword [rbp - 4], 1	       499	crypt.c	FUNCTION_21	IF_1
0x98e	            0x7f1c	                            jg 0x40009ec	       499	crypt.c	FUNCTION_21	IF_1
0x990	    0xc70500000000	               mov dword [0x040009da], 1	       501	crypt.c	FUNCTION_21	IF_1
0x99a	      0xbf00000000	                              mov edi, 0	       502	crypt.c	FUNCTION_21	IF_1	CALL_2
0x99f	      0xe800000000	                          call 0x40009e4	       502	crypt.c	FUNCTION_21	IF_1	CALL_2
0x9a4	          0x4889c7	                            mov rdi, rax	       502	crypt.c	FUNCTION_21	IF_1	CALL_2
0x9a7	      0xe800000000	                          call 0x40009ec	       502	crypt.c	FUNCTION_21	IF_1	CALL_2
0x9ac	              0x90	                                     nop	       504	crypt.c	FUNCTION_21
0x9ad	              0xc9	                                   leave	       504	crypt.c	FUNCTION_21
0x9ae	              0xc3	                                     ret	       504	crypt.c	FUNCTION_21
crypt_get_header_len	CALL,0:ELSE,0:IF,0:functions,0:WHILE,0:DO,0:FOR,0:SWITCH,0	23
0x196	              0x55	                                push rbp	       203	crypt.c	FUNCTION_6
0x197	          0x4889e5	                            mov rbp, rsp	       203	crypt.c	FUNCTION_6
0x19a	          0x897dfc	                mov dword [rbp - 4], edi	       203	crypt.c	FUNCTION_6
0x19d	          0x8b45fc	                mov eax, dword [rbp - 4]	       205	crypt.c	FUNCTION_6
0x1a0	          0x4863d0	                         movsxd rdx, eax	       205	crypt.c	FUNCTION_6
0x1a3	          0x4889d0	                            mov rax, rdx	       205	crypt.c	FUNCTION_6
0x1a6	          0x4801c0	                            add rax, rax	       205	crypt.c	FUNCTION_6
0x1a9	          0x4801d0	                            add rax, rdx	       205	crypt.c	FUNCTION_6
0x1ac	        0x48c1e005	                              shl rax, 5	       205	crypt.c	FUNCTION_6
0x1b0	    0x480500000000	                              add rax, 0	       205	crypt.c	FUNCTION_6
0x1b6	            0x8b00	                    mov eax, dword [rax]	       205	crypt.c	FUNCTION_6
0x1b8	          0x8d480c	                    lea ecx, [rax + 0xc]	       205	crypt.c	FUNCTION_6
0x1bb	          0x8b45fc	                mov eax, dword [rbp - 4]	       206	crypt.c	FUNCTION_6
0x1be	          0x4863d0	                         movsxd rdx, eax	       206	crypt.c	FUNCTION_6
0x1c1	          0x4889d0	                            mov rax, rdx	       206	crypt.c	FUNCTION_6
0x1c4	          0x4801c0	                            add rax, rax	       206	crypt.c	FUNCTION_6
0x1c7	          0x4801d0	                            add rax, rdx	       206	crypt.c	FUNCTION_6
0x1ca	        0x48c1e005	                              shl rax, 5	       206	crypt.c	FUNCTION_6
0x1ce	    0x480500000000	                              add rax, 0	       206	crypt.c	FUNCTION_6
0x1d4	            0x8b00	                    mov eax, dword [rax]	       206	crypt.c	FUNCTION_6
0x1d6	             0x1c8	                            add eax, ecx	       204	crypt.c	FUNCTION_6
0x1d8	              0x5d	                                 pop rbp	       207	crypt.c	FUNCTION_6
0x1d9	              0xc3	                                     ret	       207	crypt.c	FUNCTION_6
crypt_free_state	CALL,2:ELSE,0:IF,0:functions,0:WHILE,0:DO,0:FOR,0:SWITCH,0	14
0x673	              0x55	                                push rbp	       364	crypt.c	FUNCTION_13
0x674	          0x4889e5	                            mov rbp, rsp	       364	crypt.c	FUNCTION_13
0x677	        0x4883ec10	                           sub rsp, 0x10	       364	crypt.c	FUNCTION_13
0x67b	        0x48897df8	                mov qword [rbp - 8], rdi	       364	crypt.c	FUNCTION_13
0x67f	        0x488b45f8	                mov rax, qword [rbp - 8]	       365	crypt.c	FUNCTION_13	CALL_1
0x683	        0x488b4008	                mov rax, qword [rax + 8]	       365	crypt.c	FUNCTION_13	CALL_1
0x687	          0x4889c7	                            mov rdi, rax	       365	crypt.c	FUNCTION_13	CALL_1
0x68a	      0xe800000000	                          call 0x40006cf	       365	crypt.c	FUNCTION_13	CALL_1
0x68f	        0x488b45f8	                mov rax, qword [rbp - 8]	       366	crypt.c	FUNCTION_13	CALL_2
0x693	          0x4889c7	                            mov rdi, rax	       366	crypt.c	FUNCTION_13	CALL_2
0x696	      0xe800000000	                          call 0x40006db	       366	crypt.c	FUNCTION_13	CALL_2
0x69b	              0x90	                                     nop	       367	crypt.c	FUNCTION_13
0x69c	              0xc9	                                   leave	       367	crypt.c	FUNCTION_13
0x69d	              0xc3	                                     ret	       367	crypt.c	FUNCTION_13
crypt_decode_inplace	CALL,1:ELSE,0:IF,0:functions,0:WHILE,0:DO,0:FOR,0:SWITCH,0	23
0x8f4	              0x55	                                push rbp	       472	crypt.c	FUNCTION_19
0x8f5	          0x4889e5	                            mov rbp, rsp	       472	crypt.c	FUNCTION_19
0x8f8	        0x4883ec20	                           sub rsp, 0x20	       472	crypt.c	FUNCTION_19
0x8fc	        0x48897df8	                mov qword [rbp - 8], rdi	       472	crypt.c	FUNCTION_19
0x900	        0x488975f0	             mov qword [rbp - 0x10], rsi	       472	crypt.c	FUNCTION_19
0x904	        0x488955e8	             mov qword [rbp - 0x18], rdx	       472	crypt.c	FUNCTION_19
0x908	        0x488b45f8	                mov rax, qword [rbp - 8]	       473	crypt.c	FUNCTION_19	CALL_1
0x90c	            0x8b00	                    mov eax, dword [rax]	       473	crypt.c	FUNCTION_19	CALL_1
0x90e	          0x4863d0	                         movsxd rdx, eax	       473	crypt.c	FUNCTION_19	CALL_1
0x911	          0x4889d0	                            mov rax, rdx	       473	crypt.c	FUNCTION_19	CALL_1
0x914	          0x4801c0	                            add rax, rax	       473	crypt.c	FUNCTION_19	CALL_1
0x917	          0x4801d0	                            add rax, rdx	       473	crypt.c	FUNCTION_19	CALL_1
0x91a	        0x48c1e005	                              shl rax, 5	       473	crypt.c	FUNCTION_19	CALL_1
0x91e	    0x480500000000	                              add rax, 0	       473	crypt.c	FUNCTION_19	CALL_1
0x924	          0x488b00	                    mov rax, qword [rax]	       473	crypt.c	FUNCTION_19	CALL_1
0x927	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       473	crypt.c	FUNCTION_19	CALL_1
0x92b	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       473	crypt.c	FUNCTION_19	CALL_1
0x92f	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       473	crypt.c	FUNCTION_19	CALL_1
0x933	        0x488b7df8	                mov rdi, qword [rbp - 8]	       473	crypt.c	FUNCTION_19	CALL_1
0x937	            0xffd0	                                call rax	       473	crypt.c	FUNCTION_19	CALL_1
0x939	              0x90	                                     nop	       474	crypt.c	FUNCTION_19
0x93a	              0xc9	                                   leave	       474	crypt.c	FUNCTION_19
0x93b	              0xc3	                                     ret	       474	crypt.c	FUNCTION_19
crypt_whole_undofile	CALL,0:ELSE,0:IF,0:functions,0:WHILE,0:DO,0:FOR,0:SWITCH,0	13
0x172	              0x55	                                push rbp	       194	crypt.c	FUNCTION_5
0x173	          0x4889e5	                            mov rbp, rsp	       194	crypt.c	FUNCTION_5
0x176	          0x897dfc	                mov dword [rbp - 4], edi	       194	crypt.c	FUNCTION_5
0x179	          0x8b45fc	                mov eax, dword [rbp - 4]	       195	crypt.c	FUNCTION_5
0x17c	          0x4863d0	                         movsxd rdx, eax	       195	crypt.c	FUNCTION_5
0x17f	          0x4889d0	                            mov rax, rdx	       195	crypt.c	FUNCTION_5
0x182	          0x4801c0	                            add rax, rax	       195	crypt.c	FUNCTION_5
0x185	          0x4801d0	                            add rax, rdx	       195	crypt.c	FUNCTION_5
0x188	        0x48c1e005	                              shl rax, 5	       195	crypt.c	FUNCTION_5
0x18c	    0x480500000000	                              add rax, 0	       195	crypt.c	FUNCTION_5
0x192	            0x8b00	                    mov eax, dword [rax]	       195	crypt.c	FUNCTION_5
0x194	              0x5d	                                 pop rbp	       196	crypt.c	FUNCTION_5
0x195	              0xc3	                                     ret	       196	crypt.c	FUNCTION_5
crypt_create	CALL,2:ELSE,0:IF,0:functions,0:WHILE,0:DO,0:FOR,0:SWITCH,0	33
0x298	              0x55	                                push rbp	       245	crypt.c	FUNCTION_9
0x299	          0x4889e5	                            mov rbp, rsp	       245	crypt.c	FUNCTION_9
0x29c	        0x4883ec40	                           sub rsp, 0x40	       245	crypt.c	FUNCTION_9
0x2a0	          0x897dec	             mov dword [rbp - 0x14], edi	       245	crypt.c	FUNCTION_9
0x2a3	        0x488975e0	             mov qword [rbp - 0x20], rsi	       245	crypt.c	FUNCTION_9
0x2a7	        0x488955d8	             mov qword [rbp - 0x28], rdx	       245	crypt.c	FUNCTION_9
0x2ab	          0x894de8	             mov dword [rbp - 0x18], ecx	       245	crypt.c	FUNCTION_9
0x2ae	        0x4c8945d0	              mov qword [rbp - 0x30], r8	       245	crypt.c	FUNCTION_9
0x2b2	        0x44894dcc	             mov dword [rbp - 0x34], r9d	       245	crypt.c	FUNCTION_9
0x2b6	      0xbf10000000	                           mov edi, 0x10	       246	crypt.c	FUNCTION_9	CALL_1
0x2bb	      0xe800000000	                          call 0x4000300	       246	crypt.c	FUNCTION_9	CALL_1
0x2c0	        0x488945f8	                mov qword [rbp - 8], rax	       246	crypt.c	FUNCTION_9	CALL_1
0x2c4	        0x488b45f8	                mov rax, qword [rbp - 8]	       248	crypt.c	FUNCTION_9
0x2c8	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       248	crypt.c	FUNCTION_9
0x2cb	            0x8910	                    mov dword [rax], edx	       248	crypt.c	FUNCTION_9
0x2cd	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       249	crypt.c	FUNCTION_9	CALL_2
0x2d0	          0x4863d0	                         movsxd rdx, eax	       249	crypt.c	FUNCTION_9	CALL_2
0x2d3	          0x4889d0	                            mov rax, rdx	       249	crypt.c	FUNCTION_9	CALL_2
0x2d6	          0x4801c0	                            add rax, rax	       249	crypt.c	FUNCTION_9	CALL_2
0x2d9	          0x4801d0	                            add rax, rdx	       249	crypt.c	FUNCTION_9	CALL_2
0x2dc	        0x48c1e005	                              shl rax, 5	       249	crypt.c	FUNCTION_9	CALL_2
0x2e0	    0x480500000000	                              add rax, 0	       249	crypt.c	FUNCTION_9	CALL_2
0x2e6	          0x488b00	                    mov rax, qword [rax]	       249	crypt.c	FUNCTION_9	CALL_2
0x2e9	        0x448b4dcc	             mov r9d, dword [rbp - 0x34]	       249	crypt.c	FUNCTION_9	CALL_2
0x2ed	        0x4c8b45d0	              mov r8, qword [rbp - 0x30]	       249	crypt.c	FUNCTION_9	CALL_2
0x2f1	          0x8b4de8	             mov ecx, dword [rbp - 0x18]	       249	crypt.c	FUNCTION_9	CALL_2
0x2f4	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       249	crypt.c	FUNCTION_9	CALL_2
0x2f8	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       249	crypt.c	FUNCTION_9	CALL_2
0x2fc	        0x488b7df8	                mov rdi, qword [rbp - 8]	       249	crypt.c	FUNCTION_9	CALL_2
0x300	            0xffd0	                                call rax	       249	crypt.c	FUNCTION_9	CALL_2
0x302	        0x488b45f8	                mov rax, qword [rbp - 8]	       250	crypt.c	FUNCTION_9
0x306	              0xc9	                                   leave	       251	crypt.c	FUNCTION_9
0x307	              0xc3	                                     ret	       251	crypt.c	FUNCTION_9
crypt_create_from_header	CALL,1:ELSE,0:IF,2:functions,0:WHILE,0:DO,0:FOR,0:SWITCH,0	51
0x308	              0x55	                                push rbp	       263	crypt.c	FUNCTION_10
0x309	          0x4889e5	                            mov rbp, rsp	       263	crypt.c	FUNCTION_10
0x30c	        0x4883ec40	                           sub rsp, 0x40	       263	crypt.c	FUNCTION_10
0x310	          0x897ddc	             mov dword [rbp - 0x24], edi	       263	crypt.c	FUNCTION_10
0x313	        0x488975d0	             mov qword [rbp - 0x30], rsi	       263	crypt.c	FUNCTION_10
0x317	        0x488955c8	             mov qword [rbp - 0x38], rdx	       263	crypt.c	FUNCTION_10
0x31b	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       264	crypt.c	FUNCTION_10
0x323	    0x48c745f80000	                  mov qword [rbp - 8], 0	       265	crypt.c	FUNCTION_10
0x32b	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       266	crypt.c	FUNCTION_10
0x32e	          0x4863d0	                         movsxd rdx, eax	       266	crypt.c	FUNCTION_10
0x331	          0x4889d0	                            mov rax, rdx	       266	crypt.c	FUNCTION_10
0x334	          0x4801c0	                            add rax, rax	       266	crypt.c	FUNCTION_10
0x337	          0x4801d0	                            add rax, rdx	       266	crypt.c	FUNCTION_10
0x33a	        0x48c1e005	                              shl rax, 5	       266	crypt.c	FUNCTION_10
0x33e	    0x480500000000	                              add rax, 0	       266	crypt.c	FUNCTION_10
0x344	            0x8b00	                    mov eax, dword [rax]	       266	crypt.c	FUNCTION_10
0x346	          0x8945e8	             mov dword [rbp - 0x18], eax	       266	crypt.c	FUNCTION_10
0x349	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       267	crypt.c	FUNCTION_10
0x34c	          0x4863d0	                         movsxd rdx, eax	       267	crypt.c	FUNCTION_10
0x34f	          0x4889d0	                            mov rax, rdx	       267	crypt.c	FUNCTION_10
0x352	          0x4801c0	                            add rax, rax	       267	crypt.c	FUNCTION_10
0x355	          0x4801d0	                            add rax, rdx	       267	crypt.c	FUNCTION_10
0x358	        0x48c1e005	                              shl rax, 5	       267	crypt.c	FUNCTION_10
0x35c	    0x480500000000	                              add rax, 0	       267	crypt.c	FUNCTION_10
0x362	            0x8b00	                    mov eax, dword [rax]	       267	crypt.c	FUNCTION_10
0x364	          0x8945ec	             mov dword [rbp - 0x14], eax	       267	crypt.c	FUNCTION_10
0x367	        0x837de800	               cmp dword [rbp - 0x18], 0	       269	crypt.c	FUNCTION_10	IF_1
0x36b	            0x7e0c	                           jle 0x40003b9	       269	crypt.c	FUNCTION_10	IF_1
0x36d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       270	crypt.c	FUNCTION_10	IF_1
0x371	        0x4883c00c	                            add rax, 0xc	       270	crypt.c	FUNCTION_10	IF_1
0x375	        0x488945f0	             mov qword [rbp - 0x10], rax	       270	crypt.c	FUNCTION_10	IF_1
0x379	        0x837dec00	               cmp dword [rbp - 0x14], 0	       271	crypt.c	FUNCTION_10	IF_2
0x37d	            0x7e14	                           jle 0x40003d3	       271	crypt.c	FUNCTION_10	IF_2
0x37f	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       272	crypt.c	FUNCTION_10	IF_2
0x382	            0x4898	                                    cdqe	       272	crypt.c	FUNCTION_10	IF_2
0x384	        0x488d500c	                    lea rdx, [rax + 0xc]	       272	crypt.c	FUNCTION_10	IF_2
0x388	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       272	crypt.c	FUNCTION_10	IF_2
0x38c	          0x4801d0	                            add rax, rdx	       272	crypt.c	FUNCTION_10	IF_2
0x38f	        0x488945f8	                mov qword [rbp - 8], rax	       272	crypt.c	FUNCTION_10	IF_2
0x393	        0x448b45ec	             mov r8d, dword [rbp - 0x14]	       274	crypt.c	FUNCTION_10	CALL_1
0x397	        0x488b7df8	                mov rdi, qword [rbp - 8]	       274	crypt.c	FUNCTION_10	CALL_1
0x39b	          0x8b4de8	             mov ecx, dword [rbp - 0x18]	       274	crypt.c	FUNCTION_10	CALL_1
0x39e	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       274	crypt.c	FUNCTION_10	CALL_1
0x3a2	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	       274	crypt.c	FUNCTION_10	CALL_1
0x3a6	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       274	crypt.c	FUNCTION_10	CALL_1
0x3a9	          0x4589c1	                            mov r9d, r8d	       274	crypt.c	FUNCTION_10	CALL_1
0x3ac	          0x4989f8	                             mov r8, rdi	       274	crypt.c	FUNCTION_10	CALL_1
0x3af	            0x89c7	                            mov edi, eax	       274	crypt.c	FUNCTION_10	CALL_1
0x3b1	      0xe800000000	                          call 0x40003f6	       274	crypt.c	FUNCTION_10	CALL_1
0x3b6	              0xc9	                                   leave	       275	crypt.c	FUNCTION_10
0x3b7	              0xc3	                                     ret	       275	crypt.c	FUNCTION_10
crypt_encode_alloc	CALL,3:ELSE,0:IF,3:functions,0:WHILE,0:DO,0:FOR,0:SWITCH,0	55
0x69e	              0x55	                                push rbp	       380	crypt.c	FUNCTION_14
0x69f	          0x4889e5	                            mov rbp, rsp	       380	crypt.c	FUNCTION_14
0x6a2	        0x4883ec30	                           sub rsp, 0x30	       380	crypt.c	FUNCTION_14
0x6a6	        0x48897de8	             mov qword [rbp - 0x18], rdi	       380	crypt.c	FUNCTION_14
0x6aa	        0x488975e0	             mov qword [rbp - 0x20], rsi	       380	crypt.c	FUNCTION_14
0x6ae	        0x488955d8	             mov qword [rbp - 0x28], rdx	       380	crypt.c	FUNCTION_14
0x6b2	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       380	crypt.c	FUNCTION_14
0x6b6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       381	crypt.c	FUNCTION_14
0x6ba	            0x8b00	                    mov eax, dword [rax]	       381	crypt.c	FUNCTION_14
0x6bc	          0x4863d0	                         movsxd rdx, eax	       381	crypt.c	FUNCTION_14
0x6bf	          0x4889d0	                            mov rax, rdx	       381	crypt.c	FUNCTION_14
0x6c2	          0x4801c0	                            add rax, rax	       381	crypt.c	FUNCTION_14
0x6c5	          0x4801d0	                            add rax, rdx	       381	crypt.c	FUNCTION_14
0x6c8	        0x48c1e005	                              shl rax, 5	       381	crypt.c	FUNCTION_14
0x6cc	    0x480500000000	                              add rax, 0	       381	crypt.c	FUNCTION_14
0x6d2	        0x488945f8	                mov qword [rbp - 8], rax	       381	crypt.c	FUNCTION_14
0x6d6	        0x488b45f8	                mov rax, qword [rbp - 8]	       383	crypt.c	FUNCTION_14	IF_1
0x6da	        0x488b4040	            mov rax, qword [rax + 0x40] 	       383	crypt.c	FUNCTION_14	IF_1
0x6de	          0x4885c0	                           test rax, rax	       383	crypt.c	FUNCTION_14	IF_1
0x6e1	            0x741c	                            je 0x400073f	       383	crypt.c	FUNCTION_14	IF_1
0x6e3	        0x488b45f8	                mov rax, qword [rbp - 8]	       385	crypt.c	FUNCTION_14	CALL_1
0x6e7	        0x488b4040	            mov rax, qword [rax + 0x40] 	       385	crypt.c	FUNCTION_14	CALL_1
0x6eb	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       385	crypt.c	FUNCTION_14	CALL_1
0x6ef	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       385	crypt.c	FUNCTION_14	CALL_1
0x6f3	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       385	crypt.c	FUNCTION_14	CALL_1
0x6f7	        0x488b7de8	             mov rdi, qword [rbp - 0x18]	       385	crypt.c	FUNCTION_14	CALL_1
0x6fb	            0xffd0	                                call rax	       385	crypt.c	FUNCTION_14	CALL_1
0x6fd	            0xeb58	                           jmp 0x4000797	       385	crypt.c	FUNCTION_14	CALL_1
0x6ff	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       386	crypt.c	FUNCTION_14	IF_2
0x704	            0x7506	                           jne 0x400074c	       386	crypt.c	FUNCTION_14	IF_2
0x706	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       388	crypt.c	FUNCTION_14	IF_2
0x70a	            0xeb4b	                           jmp 0x4000797	       388	crypt.c	FUNCTION_14	IF_2
0x70c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       390	crypt.c	FUNCTION_14	CALL_2
0x710	            0x89c7	                            mov edi, eax	       390	crypt.c	FUNCTION_14	CALL_2
0x712	      0xe800000000	                          call 0x4000757	       390	crypt.c	FUNCTION_14	CALL_2
0x717	          0x4889c2	                            mov rdx, rax	       390	crypt.c	FUNCTION_14	CALL_2
0x71a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       390	crypt.c	FUNCTION_14	CALL_2
0x71e	          0x488910	                    mov qword [rax], rdx	       390	crypt.c	FUNCTION_14	CALL_2
0x721	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       391	crypt.c	FUNCTION_14	IF_3
0x725	          0x488b00	                    mov rax, qword [rax]	       391	crypt.c	FUNCTION_14	IF_3
0x728	          0x4885c0	                           test rax, rax	       391	crypt.c	FUNCTION_14	IF_3
0x72b	            0x7509	                           jne 0x4000776	       391	crypt.c	FUNCTION_14	IF_3
0x72d	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       392	crypt.c	FUNCTION_14	IF_3
0x734	            0xeb21	                           jmp 0x4000797	       392	crypt.c	FUNCTION_14	IF_3
0x736	        0x488b45f8	                mov rax, qword [rbp - 8]	       393	crypt.c	FUNCTION_14	CALL_3
0x73a	        0x488b4030	            mov rax, qword [rax + 0x30] 	       393	crypt.c	FUNCTION_14	CALL_3
0x73e	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       393	crypt.c	FUNCTION_14	CALL_3
0x742	          0x488b0a	                    mov rcx, qword [rdx]	       393	crypt.c	FUNCTION_14	CALL_3
0x745	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       393	crypt.c	FUNCTION_14	CALL_3
0x749	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       393	crypt.c	FUNCTION_14	CALL_3
0x74d	        0x488b7de8	             mov rdi, qword [rbp - 0x18]	       393	crypt.c	FUNCTION_14	CALL_3
0x751	            0xffd0	                                call rax	       393	crypt.c	FUNCTION_14	CALL_3
0x753	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       394	crypt.c	FUNCTION_14
0x757	              0xc9	                                   leave	       395	crypt.c	FUNCTION_14
0x758	              0xc3	                                     ret	       395	crypt.c	FUNCTION_14
crypt_encode_inplace	CALL,1:ELSE,0:IF,0:functions,0:WHILE,0:DO,0:FOR,0:SWITCH,0	23
0x8ac	              0x55	                                push rbp	       460	crypt.c	FUNCTION_18
0x8ad	          0x4889e5	                            mov rbp, rsp	       460	crypt.c	FUNCTION_18
0x8b0	        0x4883ec20	                           sub rsp, 0x20	       460	crypt.c	FUNCTION_18
0x8b4	        0x48897df8	                mov qword [rbp - 8], rdi	       460	crypt.c	FUNCTION_18
0x8b8	        0x488975f0	             mov qword [rbp - 0x10], rsi	       460	crypt.c	FUNCTION_18
0x8bc	        0x488955e8	             mov qword [rbp - 0x18], rdx	       460	crypt.c	FUNCTION_18
0x8c0	        0x488b45f8	                mov rax, qword [rbp - 8]	       461	crypt.c	FUNCTION_18	CALL_1
0x8c4	            0x8b00	                    mov eax, dword [rax]	       461	crypt.c	FUNCTION_18	CALL_1
0x8c6	          0x4863d0	                         movsxd rdx, eax	       461	crypt.c	FUNCTION_18	CALL_1
0x8c9	          0x4889d0	                            mov rax, rdx	       461	crypt.c	FUNCTION_18	CALL_1
0x8cc	          0x4801c0	                            add rax, rax	       461	crypt.c	FUNCTION_18	CALL_1
0x8cf	          0x4801d0	                            add rax, rdx	       461	crypt.c	FUNCTION_18	CALL_1
0x8d2	        0x48c1e005	                              shl rax, 5	       461	crypt.c	FUNCTION_18	CALL_1
0x8d6	    0x480500000000	                              add rax, 0	       461	crypt.c	FUNCTION_18	CALL_1
0x8dc	          0x488b00	                    mov rax, qword [rax]	       461	crypt.c	FUNCTION_18	CALL_1
0x8df	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       461	crypt.c	FUNCTION_18	CALL_1
0x8e3	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       461	crypt.c	FUNCTION_18	CALL_1
0x8e7	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       461	crypt.c	FUNCTION_18	CALL_1
0x8eb	        0x488b7df8	                mov rdi, qword [rbp - 8]	       461	crypt.c	FUNCTION_18	CALL_1
0x8ef	            0xffd0	                                call rax	       461	crypt.c	FUNCTION_18	CALL_1
0x8f1	              0x90	                                     nop	       462	crypt.c	FUNCTION_18
0x8f2	              0xc9	                                   leave	       462	crypt.c	FUNCTION_18
0x8f3	              0xc3	                                     ret	       462	crypt.c	FUNCTION_18
crypt_create_from_file	CALL,9:ELSE,0:IF,4:functions,0:WHILE,0:DO,0:FOR,0:SWITCH,0	82
0x3b8	              0x55	                                push rbp	       283	crypt.c	FUNCTION_11
0x3b9	          0x4889e5	                            mov rbp, rsp	       283	crypt.c	FUNCTION_11
0x3bc	        0x4883ec50	                           sub rsp, 0x50	       283	crypt.c	FUNCTION_11
0x3c0	        0x48897db8	             mov qword [rbp - 0x48], rdi	       283	crypt.c	FUNCTION_11
0x3c4	        0x488975b0	             mov qword [rbp - 0x50], rsi	       283	crypt.c	FUNCTION_11
0x3c8	    0x64488b042528	                mov rax, qword fs:[0x28]	       283	crypt.c	FUNCTION_11
0x3d1	        0x488945f8	                mov qword [rbp - 8], rax	       283	crypt.c	FUNCTION_11
0x3d5	            0x31c0	                            xor eax, eax	       283	crypt.c	FUNCTION_11
0x3d7	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       290	crypt.c	FUNCTION_11	IF_1	CALL_1
0x3db	        0x488d45e0	                   lea rax, [rbp - 0x20]	       290	crypt.c	FUNCTION_11	IF_1	CALL_1
0x3df	          0x4889d1	                            mov rcx, rdx	       290	crypt.c	FUNCTION_11	IF_1	CALL_1
0x3e2	      0xba01000000	                              mov edx, 1	       290	crypt.c	FUNCTION_11	IF_1	CALL_1
0x3e7	      0xbe0c000000	                            mov esi, 0xc	       290	crypt.c	FUNCTION_11	IF_1	CALL_1
0x3ec	          0x4889c7	                            mov rdi, rax	       290	crypt.c	FUNCTION_11	IF_1	CALL_1
0x3ef	      0xe800000000	                          call 0x4000434	       290	crypt.c	FUNCTION_11	IF_1	CALL_1
0x3f4	        0x4883f801	                              cmp rax, 1	       290	crypt.c	FUNCTION_11	IF_1	CALL_1
0x3f8	            0x740a	                            je 0x4000444	       290	crypt.c	FUNCTION_11	IF_1	CALL_1
0x3fa	      0xb800000000	                              mov eax, 0	       291	crypt.c	FUNCTION_11	IF_1
0x3ff	      0xe9d4000000	                           jmp 0x4000518	       291	crypt.c	FUNCTION_11	IF_1
0x404	        0x488d45e0	                   lea rax, [rbp - 0x20]	       292	crypt.c	FUNCTION_11	CALL_2
0x408	      0xbe0c000000	                            mov esi, 0xc	       292	crypt.c	FUNCTION_11	CALL_2
0x40d	          0x4889c7	                            mov rdi, rax	       292	crypt.c	FUNCTION_11	CALL_2
0x410	      0xe800000000	                          call 0x4000455	       292	crypt.c	FUNCTION_11	CALL_2
0x415	          0x8945c8	             mov dword [rbp - 0x38], eax	       292	crypt.c	FUNCTION_11	CALL_2
0x418	        0x837dc800	               cmp dword [rbp - 0x38], 0	       293	crypt.c	FUNCTION_11	IF_2
0x41c	            0x790a	                           jns 0x4000468	       293	crypt.c	FUNCTION_11	IF_2
0x41e	      0xb800000000	                              mov eax, 0	       294	crypt.c	FUNCTION_11	IF_2
0x423	      0xe9b0000000	                           jmp 0x4000518	       294	crypt.c	FUNCTION_11	IF_2
0x428	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       296	crypt.c	FUNCTION_11	CALL_3
0x42b	            0x89c7	                            mov edi, eax	       296	crypt.c	FUNCTION_11	CALL_3
0x42d	      0xe800000000	                          call 0x4000472	       296	crypt.c	FUNCTION_11	CALL_3
0x432	          0x8945cc	             mov dword [rbp - 0x34], eax	       296	crypt.c	FUNCTION_11	CALL_3
0x435	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       297	crypt.c	FUNCTION_11	IF_3	CALL_4
0x438	            0x89c7	                            mov edi, eax	       297	crypt.c	FUNCTION_11	IF_3	CALL_4
0x43a	      0xe800000000	                          call 0x400047f	       297	crypt.c	FUNCTION_11	IF_3	CALL_4
0x43f	        0x488945d0	             mov qword [rbp - 0x30], rax	       297	crypt.c	FUNCTION_11	IF_3	CALL_4
0x443	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       297	crypt.c	FUNCTION_11	IF_3	CALL_4
0x448	            0x750a	                           jne 0x4000494	       297	crypt.c	FUNCTION_11	IF_3	CALL_4
0x44a	      0xb800000000	                              mov eax, 0	       298	crypt.c	FUNCTION_11	IF_3
0x44f	      0xe984000000	                           jmp 0x4000518	       298	crypt.c	FUNCTION_11	IF_3
0x454	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       299	crypt.c	FUNCTION_11	CALL_5
0x458	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       299	crypt.c	FUNCTION_11	CALL_5
0x45c	      0xba0c000000	                            mov edx, 0xc	       299	crypt.c	FUNCTION_11	CALL_5
0x461	          0x4889ce	                            mov rsi, rcx	       299	crypt.c	FUNCTION_11	CALL_5
0x464	          0x4889c7	                            mov rdi, rax	       299	crypt.c	FUNCTION_11	CALL_5
0x467	      0xe800000000	                          call 0x40004ac	       299	crypt.c	FUNCTION_11	CALL_5
0x46c	        0x837dcc0c	            cmp dword [rbp - 0x34], 0xc 	       300	crypt.c	FUNCTION_11	IF_4
0x470	            0x7e3d	                           jle 0x40004ef	       300	crypt.c	FUNCTION_11	IF_4
0x472	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       302	crypt.c	FUNCTION_11	IF_4
0x475	          0x83e80c	                            sub eax, 0xc	       302	crypt.c	FUNCTION_11	IF_4
0x478	            0x4898	                                    cdqe	       301	crypt.c	FUNCTION_11	IF_4	CALL_6
0x47a	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       301	crypt.c	FUNCTION_11	IF_4	CALL_6
0x47e	        0x488d7a0c	                    lea rdi, [rdx + 0xc]	       301	crypt.c	FUNCTION_11	IF_4	CALL_6
0x482	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       301	crypt.c	FUNCTION_11	IF_4	CALL_6
0x486	          0x4889d1	                            mov rcx, rdx	       301	crypt.c	FUNCTION_11	IF_4	CALL_6
0x489	      0xba01000000	                              mov edx, 1	       301	crypt.c	FUNCTION_11	IF_4	CALL_6
0x48e	          0x4889c6	                            mov rsi, rax	       301	crypt.c	FUNCTION_11	IF_4	CALL_6
0x491	      0xe800000000	                          call 0x40004d6	       301	crypt.c	FUNCTION_11	IF_4	CALL_6
0x496	        0x4883f801	                              cmp rax, 1	       301	crypt.c	FUNCTION_11	IF_4	CALL_6
0x49a	            0x7413	                            je 0x40004ef	       301	crypt.c	FUNCTION_11	IF_4	CALL_6
0x49c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       304	crypt.c	FUNCTION_11	IF_4	CALL_7
0x4a0	          0x4889c7	                            mov rdi, rax	       304	crypt.c	FUNCTION_11	IF_4	CALL_7
0x4a3	      0xe800000000	                          call 0x40004e8	       304	crypt.c	FUNCTION_11	IF_4	CALL_7
0x4a8	      0xb800000000	                              mov eax, 0	       305	crypt.c	FUNCTION_11	IF_4
0x4ad	            0xeb29	                           jmp 0x4000518	       305	crypt.c	FUNCTION_11	IF_4
0x4af	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       308	crypt.c	FUNCTION_11	CALL_8
0x4b3	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	       308	crypt.c	FUNCTION_11	CALL_8
0x4b7	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       308	crypt.c	FUNCTION_11	CALL_8
0x4ba	          0x4889ce	                            mov rsi, rcx	       308	crypt.c	FUNCTION_11	CALL_8
0x4bd	            0x89c7	                            mov edi, eax	       308	crypt.c	FUNCTION_11	CALL_8
0x4bf	      0xe800000000	                          call 0x4000504	       308	crypt.c	FUNCTION_11	CALL_8
0x4c4	        0x488945d8	             mov qword [rbp - 0x28], rax	       308	crypt.c	FUNCTION_11	CALL_8
0x4c8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       309	crypt.c	FUNCTION_11	CALL_9
0x4cc	          0x4889c7	                            mov rdi, rax	       309	crypt.c	FUNCTION_11	CALL_9
0x4cf	      0xe800000000	                          call 0x4000514	       309	crypt.c	FUNCTION_11	CALL_9
0x4d4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       310	crypt.c	FUNCTION_11
0x4d8	        0x488b4df8	                mov rcx, qword [rbp - 8]	       311	crypt.c	FUNCTION_11
0x4dc	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       311	crypt.c	FUNCTION_11
0x4e5	            0x7405	                            je 0x400052c	       311	crypt.c	FUNCTION_11
0x4e7	      0xe800000000	                          call 0x400052c	       311	crypt.c	FUNCTION_11
0x4ec	              0xc9	                                   leave	       311	crypt.c	FUNCTION_11
0x4ed	              0xc3	                                     ret	       311	crypt.c	FUNCTION_11
crypt_check_current_method	CALL,2:ELSE,0:IF,0:functions,0:WHILE,0:DO,0:FOR,0:SWITCH,0	10
0x9af	              0x55	                                push rbp	       508	crypt.c	FUNCTION_22
0x9b0	          0x4889e5	                            mov rbp, rsp	       508	crypt.c	FUNCTION_22
0x9b3	    0x488b05000000	            mov rax, qword [0x040009fa] 	       509	crypt.c	FUNCTION_22	CALL_2
0x9ba	          0x4889c7	                            mov rdi, rax	       509	crypt.c	FUNCTION_22	CALL_2
0x9bd	      0xe800000000	                          call 0x4000a02	       509	crypt.c	FUNCTION_22	CALL_2
0x9c2	            0x89c7	                            mov edi, eax	       509	crypt.c	FUNCTION_22	CALL_2
0x9c4	      0xe800000000	                          call 0x4000a09	       509	crypt.c	FUNCTION_22	CALL_2
0x9c9	              0x90	                                     nop	       510	crypt.c	FUNCTION_22
0x9ca	              0x5d	                                 pop rbp	       510	crypt.c	FUNCTION_22
0x9cb	              0xc3	                                     ret	       510	crypt.c	FUNCTION_22
crypt_create_for_writing	CALL,6:ELSE,0:IF,5:functions,0:WHILE,0:DO,0:FOR,0:SWITCH,0	111
0x4ee	              0x55	                                push rbp	       326	crypt.c	FUNCTION_12
0x4ef	          0x4889e5	                            mov rbp, rsp	       326	crypt.c	FUNCTION_12
0x4f2	        0x4883ec50	                           sub rsp, 0x50	       326	crypt.c	FUNCTION_12
0x4f6	          0x897dcc	             mov dword [rbp - 0x34], edi	       326	crypt.c	FUNCTION_12
0x4f9	        0x488975c0	             mov qword [rbp - 0x40], rsi	       326	crypt.c	FUNCTION_12
0x4fd	        0x488955b8	             mov qword [rbp - 0x48], rdx	       326	crypt.c	FUNCTION_12
0x501	        0x48894db0	             mov qword [rbp - 0x50], rcx	       326	crypt.c	FUNCTION_12
0x505	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       327	crypt.c	FUNCTION_12	CALL_1
0x508	            0x89c7	                            mov edi, eax	       327	crypt.c	FUNCTION_12	CALL_1
0x50a	      0xe800000000	                          call 0x400054f	       327	crypt.c	FUNCTION_12	CALL_1
0x50f	          0x8945dc	             mov dword [rbp - 0x24], eax	       327	crypt.c	FUNCTION_12	CALL_1
0x512	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       328	crypt.c	FUNCTION_12
0x51a	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       329	crypt.c	FUNCTION_12
0x522	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       330	crypt.c	FUNCTION_12
0x525	          0x4863d0	                         movsxd rdx, eax	       330	crypt.c	FUNCTION_12
0x528	          0x4889d0	                            mov rax, rdx	       330	crypt.c	FUNCTION_12
0x52b	          0x4801c0	                            add rax, rax	       330	crypt.c	FUNCTION_12
0x52e	          0x4801d0	                            add rax, rdx	       330	crypt.c	FUNCTION_12
0x531	        0x48c1e005	                              shl rax, 5	       330	crypt.c	FUNCTION_12
0x535	    0x480500000000	                              add rax, 0	       330	crypt.c	FUNCTION_12
0x53b	            0x8b00	                    mov eax, dword [rax]	       330	crypt.c	FUNCTION_12
0x53d	          0x8945e0	             mov dword [rbp - 0x20], eax	       330	crypt.c	FUNCTION_12
0x540	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       331	crypt.c	FUNCTION_12
0x543	          0x4863d0	                         movsxd rdx, eax	       331	crypt.c	FUNCTION_12
0x546	          0x4889d0	                            mov rax, rdx	       331	crypt.c	FUNCTION_12
0x549	          0x4801c0	                            add rax, rax	       331	crypt.c	FUNCTION_12
0x54c	          0x4801d0	                            add rax, rdx	       331	crypt.c	FUNCTION_12
0x54f	        0x48c1e005	                              shl rax, 5	       331	crypt.c	FUNCTION_12
0x553	    0x480500000000	                              add rax, 0	       331	crypt.c	FUNCTION_12
0x559	            0x8b00	                    mov eax, dword [rax]	       331	crypt.c	FUNCTION_12
0x55b	          0x8945e4	             mov dword [rbp - 0x1c], eax	       331	crypt.c	FUNCTION_12
0x55e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       334	crypt.c	FUNCTION_12
0x562	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       334	crypt.c	FUNCTION_12
0x565	            0x8910	                    mov dword [rax], edx	       334	crypt.c	FUNCTION_12
0x567	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       335	crypt.c	FUNCTION_12	CALL_2
0x56a	            0x89c7	                            mov edi, eax	       335	crypt.c	FUNCTION_12	CALL_2
0x56c	      0xe800000000	                          call 0x40005b1	       335	crypt.c	FUNCTION_12	CALL_2
0x571	          0x4889c2	                            mov rdx, rax	       335	crypt.c	FUNCTION_12	CALL_2
0x574	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       335	crypt.c	FUNCTION_12	CALL_2
0x578	          0x488910	                    mov qword [rax], rdx	       335	crypt.c	FUNCTION_12	CALL_2
0x57b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       336	crypt.c	FUNCTION_12	IF_1
0x57f	          0x488b00	                    mov rax, qword [rax]	       336	crypt.c	FUNCTION_12	IF_1
0x582	          0x4885c0	                           test rax, rax	       336	crypt.c	FUNCTION_12	IF_1
0x585	            0x750a	                           jne 0x40005d1	       336	crypt.c	FUNCTION_12	IF_1
0x587	      0xb800000000	                              mov eax, 0	       337	crypt.c	FUNCTION_12	IF_1
0x58c	      0xe9e0000000	                           jmp 0x40006b1	       337	crypt.c	FUNCTION_12	IF_1
0x591	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       339	crypt.c	FUNCTION_12	CALL_3
0x594	          0x4863d0	                         movsxd rdx, eax	       339	crypt.c	FUNCTION_12	CALL_3
0x597	          0x4889d0	                            mov rax, rdx	       339	crypt.c	FUNCTION_12	CALL_3
0x59a	          0x4801c0	                            add rax, rax	       339	crypt.c	FUNCTION_12	CALL_3
0x59d	          0x4801d0	                            add rax, rdx	       339	crypt.c	FUNCTION_12	CALL_3
0x5a0	        0x48c1e005	                              shl rax, 5	       339	crypt.c	FUNCTION_12	CALL_3
0x5a4	    0x480500000000	                              add rax, 0	       339	crypt.c	FUNCTION_12	CALL_3
0x5aa	          0x488b08	                    mov rcx, qword [rax]	       339	crypt.c	FUNCTION_12	CALL_3
0x5ad	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       339	crypt.c	FUNCTION_12	CALL_3
0x5b1	          0x488b00	                    mov rax, qword [rax]	       339	crypt.c	FUNCTION_12	CALL_3
0x5b4	      0xba0c000000	                            mov edx, 0xc	       339	crypt.c	FUNCTION_12	CALL_3
0x5b9	          0x4889ce	                            mov rsi, rcx	       339	crypt.c	FUNCTION_12	CALL_3
0x5bc	          0x4889c7	                            mov rdi, rax	       339	crypt.c	FUNCTION_12	CALL_3
0x5bf	      0xe800000000	                          call 0x4000604	       339	crypt.c	FUNCTION_12	CALL_3
0x5c4	        0x837de000	               cmp dword [rbp - 0x20], 0	       340	crypt.c	FUNCTION_12	IF_2
0x5c8	            0x7f06	                            jg 0x4000610	       340	crypt.c	FUNCTION_12	IF_2
0x5ca	        0x837de400	               cmp dword [rbp - 0x1c], 0	       340	crypt.c	FUNCTION_12	IF_2
0x5ce	            0x7e49	                           jle 0x4000659	       340	crypt.c	FUNCTION_12	IF_2
0x5d0	        0x837de000	               cmp dword [rbp - 0x20], 0	       342	crypt.c	FUNCTION_12	IF_2	IF_3
0x5d4	            0x7e0f	                           jle 0x4000625	       342	crypt.c	FUNCTION_12	IF_2	IF_3
0x5d6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       343	crypt.c	FUNCTION_12	IF_2	IF_3
0x5da	          0x488b00	                    mov rax, qword [rax]	       343	crypt.c	FUNCTION_12	IF_2	IF_3
0x5dd	        0x4883c00c	                            add rax, 0xc	       343	crypt.c	FUNCTION_12	IF_2	IF_3
0x5e1	        0x488945e8	             mov qword [rbp - 0x18], rax	       343	crypt.c	FUNCTION_12	IF_2	IF_3
0x5e5	        0x837de400	               cmp dword [rbp - 0x1c], 0	       344	crypt.c	FUNCTION_12	IF_2	IF_4
0x5e9	            0x7e18	                           jle 0x4000643	       344	crypt.c	FUNCTION_12	IF_2	IF_4
0x5eb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       345	crypt.c	FUNCTION_12	IF_2	IF_4
0x5ef	          0x488b00	                    mov rax, qword [rax]	       345	crypt.c	FUNCTION_12	IF_2	IF_4
0x5f2	          0x8b55e0	             mov edx, dword [rbp - 0x20]	       345	crypt.c	FUNCTION_12	IF_2	IF_4
0x5f5	          0x4863d2	                         movsxd rdx, edx	       345	crypt.c	FUNCTION_12	IF_2	IF_4
0x5f8	        0x4883c20c	                            add rdx, 0xc	       345	crypt.c	FUNCTION_12	IF_2	IF_4
0x5fc	          0x4801d0	                            add rax, rdx	       345	crypt.c	FUNCTION_12	IF_2	IF_4
0x5ff	        0x488945f0	             mov qword [rbp - 0x10], rax	       345	crypt.c	FUNCTION_12	IF_2	IF_4
0x603	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	       350	crypt.c	FUNCTION_12	IF_2	CALL_4
0x606	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       350	crypt.c	FUNCTION_12	IF_2	CALL_4
0x60a	          0x8b75e0	             mov esi, dword [rbp - 0x20]	       350	crypt.c	FUNCTION_12	IF_2	CALL_4
0x60d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       350	crypt.c	FUNCTION_12	IF_2	CALL_4
0x611	          0x4889c7	                            mov rdi, rax	       350	crypt.c	FUNCTION_12	IF_2	CALL_4
0x614	      0xe800000000	                          call 0x4000659	       350	crypt.c	FUNCTION_12	IF_2	CALL_4
0x619	        0x448b45e4	             mov r8d, dword [rbp - 0x1c]	       353	crypt.c	FUNCTION_12	CALL_5
0x61d	        0x488b7df0	             mov rdi, qword [rbp - 0x10]	       353	crypt.c	FUNCTION_12	CALL_5
0x621	          0x8b4de0	             mov ecx, dword [rbp - 0x20]	       353	crypt.c	FUNCTION_12	CALL_5
0x624	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       353	crypt.c	FUNCTION_12	CALL_5
0x628	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	       353	crypt.c	FUNCTION_12	CALL_5
0x62c	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       353	crypt.c	FUNCTION_12	CALL_5
0x62f	          0x4589c1	                            mov r9d, r8d	       353	crypt.c	FUNCTION_12	CALL_5
0x632	          0x4989f8	                             mov r8, rdi	       353	crypt.c	FUNCTION_12	CALL_5
0x635	            0x89c7	                            mov edi, eax	       353	crypt.c	FUNCTION_12	CALL_5
0x637	      0xe800000000	                          call 0x400067c	       353	crypt.c	FUNCTION_12	CALL_5
0x63c	        0x488945f8	                mov qword [rbp - 8], rax	       353	crypt.c	FUNCTION_12	CALL_5
0x640	      0x48837df800	                  cmp qword [rbp - 8], 0	       354	crypt.c	FUNCTION_12	IF_5
0x645	            0x7526	                           jne 0x40006ad	       354	crypt.c	FUNCTION_12	IF_5
0x647	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       355	crypt.c	FUNCTION_12	CALL_6
0x64b	          0x488b00	                    mov rax, qword [rax]	       355	crypt.c	FUNCTION_12	CALL_6
0x64e	          0x4885c0	                           test rax, rax	       355	crypt.c	FUNCTION_12	CALL_6
0x651	            0x741a	                            je 0x40006ad	       355	crypt.c	FUNCTION_12	CALL_6
0x653	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       355	crypt.c	FUNCTION_12	CALL_6
0x657	          0x488b00	                    mov rax, qword [rax]	       355	crypt.c	FUNCTION_12	CALL_6
0x65a	          0x4889c7	                            mov rdi, rax	       355	crypt.c	FUNCTION_12	CALL_6
0x65d	      0xe800000000	                          call 0x40006a2	       355	crypt.c	FUNCTION_12	CALL_6
0x662	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       355	crypt.c	FUNCTION_12	CALL_6
0x666	    0x48c700000000	                      mov qword [rax], 0	       355	crypt.c	FUNCTION_12	CALL_6
0x66d	        0x488b45f8	                mov rax, qword [rbp - 8]	       356	crypt.c	FUNCTION_12
0x671	              0xc9	                                   leave	       357	crypt.c	FUNCTION_12
0x672	              0xc3	                                     ret	       357	crypt.c	FUNCTION_12
crypt_get_method_nr	CALL,1:ELSE,0:IF,0:functions,0:WHILE,0:DO,0:FOR,0:SWITCH,0	17
0x136	              0x55	                                push rbp	       184	crypt.c	FUNCTION_4
0x137	          0x4889e5	                            mov rbp, rsp	       184	crypt.c	FUNCTION_4
0x13a	        0x4883ec10	                           sub rsp, 0x10	       184	crypt.c	FUNCTION_4
0x13e	        0x48897df8	                mov qword [rbp - 8], rdi	       184	crypt.c	FUNCTION_4
0x142	        0x488b45f8	                mov rax, qword [rbp - 8]	       185	crypt.c	FUNCTION_4	CALL_1
0x146	    0x488b80481700	          mov rax, qword [rax + 0x1748] 	       185	crypt.c	FUNCTION_4	CALL_1
0x14d	           0xfb600	                   movzx eax, byte [rax]	       185	crypt.c	FUNCTION_4	CALL_1
0x150	            0x84c0	                             test al, al	       185	crypt.c	FUNCTION_4	CALL_1
0x152	            0x740d	                            je 0x40001a1	       185	crypt.c	FUNCTION_4	CALL_1
0x154	        0x488b45f8	                mov rax, qword [rbp - 8]	       185	crypt.c	FUNCTION_4	CALL_1
0x158	    0x488b80481700	          mov rax, qword [rax + 0x1748] 	       185	crypt.c	FUNCTION_4	CALL_1
0x15f	            0xeb07	                           jmp 0x40001a8	       185	crypt.c	FUNCTION_4	CALL_1
0x161	    0x488b05000000	            mov rax, qword [0x040001a8] 	       185	crypt.c	FUNCTION_4	CALL_1
0x168	          0x4889c7	                            mov rdi, rax	       185	crypt.c	FUNCTION_4	CALL_1
0x16b	      0xe800000000	                          call 0x40001b0	       185	crypt.c	FUNCTION_4	CALL_1
0x170	              0xc9	                                   leave	       186	crypt.c	FUNCTION_4
0x171	              0xc3	                                     ret	       186	crypt.c	FUNCTION_4
crypt_get_key	CALL,12:ELSE,0:IF,5:functions,0:WHILE,0:DO,0:FOR,1:SWITCH,0	87
0x9cc	              0x55	                                push rbp	       523	crypt.c	FUNCTION_23
0x9cd	          0x4889e5	                            mov rbp, rsp	       523	crypt.c	FUNCTION_23
0x9d0	        0x4883ec30	                           sub rsp, 0x30	       523	crypt.c	FUNCTION_23
0x9d4	          0x897ddc	             mov dword [rbp - 0x24], edi	       523	crypt.c	FUNCTION_23
0x9d7	          0x8975d8	             mov dword [rbp - 0x28], esi	       523	crypt.c	FUNCTION_23
0x9da	    0x48c745f80000	                  mov qword [rbp - 8], 0	       524	crypt.c	FUNCTION_23
0x9e2	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       527	crypt.c	FUNCTION_23	FOR_1
0x9e9	    0xc70500000000	               mov dword [0x04000a33], 1	       529	crypt.c	FUNCTION_23	FOR_1
0x9f3	    0x8b0500000000	            mov eax, dword [0x04000a39] 	       530	crypt.c	FUNCTION_23	FOR_1
0x9f9	    0x890500000000	            mov dword [0x04000a3f], eax 	       530	crypt.c	FUNCTION_23	FOR_1
0x9ff	        0x837dec00	               cmp dword [rbp - 0x14], 0	       531	crypt.c	FUNCTION_23	FOR_1	CALL_1
0xa03	            0x750c	                           jne 0x4000a51	       531	crypt.c	FUNCTION_23	FOR_1	CALL_1
0xa05	      0xbf00000000	                              mov edi, 0	       531	crypt.c	FUNCTION_23	FOR_1	CALL_1
0xa0a	      0xe800000000	                          call 0x4000a4f	       531	crypt.c	FUNCTION_23	FOR_1	CALL_1
0xa0f	            0xeb0a	                           jmp 0x4000a5b	       531	crypt.c	FUNCTION_23	FOR_1	CALL_1
0xa11	      0xbf00000000	                              mov edi, 0	       531	crypt.c	FUNCTION_23	FOR_1	CALL_1
0xa16	      0xe800000000	                          call 0x4000a5b	       531	crypt.c	FUNCTION_23	FOR_1	CALL_1
0xa1b	    0x41b800000000	                              mov r8d, 0	       531	crypt.c	FUNCTION_23	FOR_1	CALL_1
0xa21	      0xb900000000	                              mov ecx, 0	       531	crypt.c	FUNCTION_23	FOR_1	CALL_1
0xa26	      0xba00000000	                              mov edx, 0	       531	crypt.c	FUNCTION_23	FOR_1	CALL_1
0xa2b	          0x4889c6	                            mov rsi, rax	       531	crypt.c	FUNCTION_23	FOR_1	CALL_1
0xa2e	      0xbf00000000	                              mov edi, 0	       531	crypt.c	FUNCTION_23	FOR_1	CALL_1
0xa33	      0xe800000000	                          call 0x4000a78	       531	crypt.c	FUNCTION_23	FOR_1	CALL_1
0xa38	        0x488945f0	             mov qword [rbp - 0x10], rax	       531	crypt.c	FUNCTION_23	FOR_1	CALL_1
0xa3c	    0xc70500000000	               mov dword [0x04000a86], 0	       535	crypt.c	FUNCTION_23	FOR_1
0xa46	      0x48837df000	               cmp qword [rbp - 0x10], 0	       537	crypt.c	FUNCTION_23	FOR_1	IF_1
0xa4b	     0xf84b7000000	                            je 0x4000b48	       537	crypt.c	FUNCTION_23	FOR_1	IF_1
0xa51	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       540	crypt.c	FUNCTION_23	FOR_1	IF_2
0xa54	          0x3b45d8	             cmp eax, dword [rbp - 0x28]	       540	crypt.c	FUNCTION_23	FOR_1	IF_2
0xa57	     0xf859a000000	                           jne 0x4000b37	       540	crypt.c	FUNCTION_23	FOR_1	IF_2
0xa5d	      0x48837df800	                  cmp qword [rbp - 8], 0	       542	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_4
0xa62	            0x7452	                            je 0x4000af6	       542	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_4
0xa64	        0x488b55f8	                mov rdx, qword [rbp - 8]	       542	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_4
0xa68	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       542	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_4
0xa6c	          0x4889d6	                            mov rsi, rdx	       542	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_4
0xa6f	          0x4889c7	                            mov rdi, rax	       542	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_4
0xa72	      0xe800000000	                          call 0x4000ab7	       542	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_4
0xa77	            0x85c0	                           test eax, eax	       542	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_4
0xa79	            0x743b	                            je 0x4000af6	       542	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_4
0xa7b	      0xbf00000000	                              mov edi, 0	       544	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_6
0xa80	      0xe800000000	                          call 0x4000ac5	       544	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_6
0xa85	          0x4889c7	                            mov rdi, rax	       544	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_6
0xa88	      0xe800000000	                          call 0x4000acd	       544	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_6
0xa8d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       545	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_7
0xa91	          0x4889c7	                            mov rdi, rax	       545	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_7
0xa94	      0xe800000000	                          call 0x4000ad9	       545	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_7
0xa99	        0x488b45f8	                mov rax, qword [rbp - 8]	       546	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_8
0xa9d	          0x4889c7	                            mov rdi, rax	       546	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_8
0xaa0	      0xe800000000	                          call 0x4000ae5	       546	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_8
0xaa5	    0x48c745f80000	                  mov qword [rbp - 8], 0	       547	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3
0xaad	    0xc745ecffffff	     mov dword [rbp - 0x14], 0xffffffff 	       548	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3
0xab4	            0xeb49	                           jmp 0x4000b3f	       549	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3
0xab6	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       552	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_4
0xaba	            0x744f	                            je 0x4000b4b	       552	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_4
0xabc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       554	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_4	CALL_9
0xac0	      0xb904000000	                              mov ecx, 4	       554	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_4	CALL_9
0xac5	          0x4889c2	                            mov rdx, rax	       554	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_4	CALL_9
0xac8	      0xbe00000000	                              mov esi, 0	       554	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_4	CALL_9
0xacd	      0xbf00000000	                              mov edi, 0	       554	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_4	CALL_9
0xad2	      0xe800000000	                          call 0x4000b17	       554	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_4	CALL_9
0xad7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       555	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_4	CALL_10
0xadb	          0x4889c7	                            mov rdi, rax	       555	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_4	CALL_10
0xade	      0xe800000000	                          call 0x4000b23	       555	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_4	CALL_10
0xae3	    0x488b05000000	            mov rax, qword [0x04000b2a] 	       556	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_4
0xaea	    0x488b80101500	          mov rax, qword [rax + 0x1510] 	       556	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_4
0xaf1	        0x488945f0	             mov qword [rbp - 0x10], rax	       556	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_4
0xaf5	            0xeb14	                           jmp 0x4000b4b	       558	crypt.c	FUNCTION_23	FOR_1	IF_2
0xaf7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       560	crypt.c	FUNCTION_23	FOR_1
0xafb	        0x488945f8	                mov qword [rbp - 8], rax	       560	crypt.c	FUNCTION_23	FOR_1
0xaff	        0x8345ec01	               add dword [rbp - 0x14], 1	       527	crypt.c	FUNCTION_23	FOR_1
0xb03	      0xe9e1feffff	                           jmp 0x4000a29	       561	crypt.c	FUNCTION_23	FOR_1
0xb08	              0x90	                                     nop	       538	crypt.c	FUNCTION_23	FOR_1	IF_1
0xb09	            0xeb01	                           jmp 0x4000b4c	       538	crypt.c	FUNCTION_23	FOR_1	IF_1
0xb0b	              0x90	                                     nop	       558	crypt.c	FUNCTION_23	FOR_1	IF_2
0xb0c	    0x8b0500000000	            mov eax, dword [0x04000b52] 	       564	crypt.c	FUNCTION_23	IF_5
0xb12	            0x85c0	                           test eax, eax	       564	crypt.c	FUNCTION_23	IF_5
0xb14	            0x740a	                            je 0x4000b60	       564	crypt.c	FUNCTION_23	IF_5
0xb16	      0xbf0a000000	                            mov edi, 0xa	       565	crypt.c	FUNCTION_23	CALL_11
0xb1b	      0xe800000000	                          call 0x4000b60	       565	crypt.c	FUNCTION_23	CALL_11
0xb20	    0xc70500000000	               mov dword [0x04000b6a], 0	       566	crypt.c	FUNCTION_23
0xb2a	    0xc70500000000	               mov dword [0x04000b74], 0	       567	crypt.c	FUNCTION_23
0xb34	        0x488b45f8	                mov rax, qword [rbp - 8]	       569	crypt.c	FUNCTION_23	CALL_12
0xb38	          0x4889c7	                            mov rdi, rax	       569	crypt.c	FUNCTION_23	CALL_12
0xb3b	      0xe800000000	                          call 0x4000b80	       569	crypt.c	FUNCTION_23	CALL_12
0xb40	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       570	crypt.c	FUNCTION_23
0xb44	              0xc9	                                   leave	       571	crypt.c	FUNCTION_23
0xb45	              0xc3	                                     ret	       571	crypt.c	FUNCTION_23
crypt_encode	CALL,1:ELSE,0:IF,0:functions,0:WHILE,0:DO,0:FOR,0:SWITCH,0	24
0x814	              0x55	                                push rbp	       435	crypt.c	FUNCTION_16
0x815	          0x4889e5	                            mov rbp, rsp	       435	crypt.c	FUNCTION_16
0x818	        0x4883ec20	                           sub rsp, 0x20	       435	crypt.c	FUNCTION_16
0x81c	        0x48897df8	                mov qword [rbp - 8], rdi	       435	crypt.c	FUNCTION_16
0x820	        0x488975f0	             mov qword [rbp - 0x10], rsi	       435	crypt.c	FUNCTION_16
0x824	        0x488955e8	             mov qword [rbp - 0x18], rdx	       435	crypt.c	FUNCTION_16
0x828	        0x48894de0	             mov qword [rbp - 0x20], rcx	       435	crypt.c	FUNCTION_16
0x82c	        0x488b45f8	                mov rax, qword [rbp - 8]	       436	crypt.c	FUNCTION_16	CALL_1
0x830	            0x8b00	                    mov eax, dword [rax]	       436	crypt.c	FUNCTION_16	CALL_1
0x832	          0x4863d0	                         movsxd rdx, eax	       436	crypt.c	FUNCTION_16	CALL_1
0x835	          0x4889d0	                            mov rax, rdx	       436	crypt.c	FUNCTION_16	CALL_1
0x838	          0x4801c0	                            add rax, rax	       436	crypt.c	FUNCTION_16	CALL_1
0x83b	          0x4801d0	                            add rax, rdx	       436	crypt.c	FUNCTION_16	CALL_1
0x83e	        0x48c1e005	                              shl rax, 5	       436	crypt.c	FUNCTION_16	CALL_1
0x842	    0x480500000000	                              add rax, 0	       436	crypt.c	FUNCTION_16	CALL_1
0x848	          0x488b00	                    mov rax, qword [rax]	       436	crypt.c	FUNCTION_16	CALL_1
0x84b	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       436	crypt.c	FUNCTION_16	CALL_1
0x84f	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       436	crypt.c	FUNCTION_16	CALL_1
0x853	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       436	crypt.c	FUNCTION_16	CALL_1
0x857	        0x488b7df8	                mov rdi, qword [rbp - 8]	       436	crypt.c	FUNCTION_16	CALL_1
0x85b	            0xffd0	                                call rax	       436	crypt.c	FUNCTION_16	CALL_1
0x85d	              0x90	                                     nop	       437	crypt.c	FUNCTION_16
0x85e	              0xc9	                                   leave	       437	crypt.c	FUNCTION_16
0x85f	              0xc3	                                     ret	       437	crypt.c	FUNCTION_16
crypt_works_inplace	CALL,0:ELSE,0:IF,0:functions,0:WHILE,0:DO,0:FOR,0:SWITCH,0	14
0x10e	              0x55	                                push rbp	       175	crypt.c	FUNCTION_3
0x10f	          0x4889e5	                            mov rbp, rsp	       175	crypt.c	FUNCTION_3
0x112	        0x48897df8	                mov qword [rbp - 8], rdi	       175	crypt.c	FUNCTION_3
0x116	        0x488b45f8	                mov rax, qword [rbp - 8]	       176	crypt.c	FUNCTION_3
0x11a	            0x8b00	                    mov eax, dword [rax]	       176	crypt.c	FUNCTION_3
0x11c	          0x4863d0	                         movsxd rdx, eax	       176	crypt.c	FUNCTION_3
0x11f	          0x4889d0	                            mov rax, rdx	       176	crypt.c	FUNCTION_3
0x122	          0x4801c0	                            add rax, rax	       176	crypt.c	FUNCTION_3
0x125	          0x4801d0	                            add rax, rdx	       176	crypt.c	FUNCTION_3
0x128	        0x48c1e005	                              shl rax, 5	       176	crypt.c	FUNCTION_3
0x12c	    0x480500000000	                              add rax, 0	       176	crypt.c	FUNCTION_3
0x132	            0x8b00	                    mov eax, dword [rax]	       176	crypt.c	FUNCTION_3
0x134	              0x5d	                                 pop rbp	       177	crypt.c	FUNCTION_3
0x135	              0xc3	                                     ret	       177	crypt.c	FUNCTION_3
crypt_decode	CALL,1:ELSE,0:IF,0:functions,0:WHILE,0:DO,0:FOR,0:SWITCH,0	24
0x860	              0x55	                                push rbp	       448	crypt.c	FUNCTION_17
0x861	          0x4889e5	                            mov rbp, rsp	       448	crypt.c	FUNCTION_17
0x864	        0x4883ec20	                           sub rsp, 0x20	       448	crypt.c	FUNCTION_17
0x868	        0x48897df8	                mov qword [rbp - 8], rdi	       448	crypt.c	FUNCTION_17
0x86c	        0x488975f0	             mov qword [rbp - 0x10], rsi	       448	crypt.c	FUNCTION_17
0x870	        0x488955e8	             mov qword [rbp - 0x18], rdx	       448	crypt.c	FUNCTION_17
0x874	        0x48894de0	             mov qword [rbp - 0x20], rcx	       448	crypt.c	FUNCTION_17
0x878	        0x488b45f8	                mov rax, qword [rbp - 8]	       449	crypt.c	FUNCTION_17	CALL_1
0x87c	            0x8b00	                    mov eax, dword [rax]	       449	crypt.c	FUNCTION_17	CALL_1
0x87e	          0x4863d0	                         movsxd rdx, eax	       449	crypt.c	FUNCTION_17	CALL_1
0x881	          0x4889d0	                            mov rax, rdx	       449	crypt.c	FUNCTION_17	CALL_1
0x884	          0x4801c0	                            add rax, rax	       449	crypt.c	FUNCTION_17	CALL_1
0x887	          0x4801d0	                            add rax, rdx	       449	crypt.c	FUNCTION_17	CALL_1
0x88a	        0x48c1e005	                              shl rax, 5	       449	crypt.c	FUNCTION_17	CALL_1
0x88e	    0x480500000000	                              add rax, 0	       449	crypt.c	FUNCTION_17	CALL_1
0x894	          0x488b00	                    mov rax, qword [rax]	       449	crypt.c	FUNCTION_17	CALL_1
0x897	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       449	crypt.c	FUNCTION_17	CALL_1
0x89b	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       449	crypt.c	FUNCTION_17	CALL_1
0x89f	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       449	crypt.c	FUNCTION_17	CALL_1
0x8a3	        0x488b7df8	                mov rdi, qword [rbp - 8]	       449	crypt.c	FUNCTION_17	CALL_1
0x8a7	            0xffd0	                                call rax	       449	crypt.c	FUNCTION_17	CALL_1
0x8a9	              0x90	                                     nop	       450	crypt.c	FUNCTION_17
0x8aa	              0xc9	                                   leave	       450	crypt.c	FUNCTION_17
0x8ab	              0xc3	                                     ret	       450	crypt.c	FUNCTION_17
crypt_free_key	CALL,1:ELSE,0:IF,1:functions,0:WHILE,0:DO,0:FOR,1:SWITCH,0	22
0x93c	              0x55	                                push rbp	       482	crypt.c	FUNCTION_20
0x93d	          0x4889e5	                            mov rbp, rsp	       482	crypt.c	FUNCTION_20
0x940	        0x4883ec20	                           sub rsp, 0x20	       482	crypt.c	FUNCTION_20
0x944	        0x48897de8	             mov qword [rbp - 0x18], rdi	       482	crypt.c	FUNCTION_20
0x948	      0x48837de800	               cmp qword [rbp - 0x18], 0	       485	crypt.c	FUNCTION_20	IF_1
0x94d	            0x742d	                            je 0x40009bc	       485	crypt.c	FUNCTION_20	IF_1
0x94f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       487	crypt.c	FUNCTION_20	IF_1	FOR_1
0x953	        0x488945f8	                mov qword [rbp - 8], rax	       487	crypt.c	FUNCTION_20	IF_1	FOR_1
0x957	            0xeb0c	                           jmp 0x40009a5	       487	crypt.c	FUNCTION_20	IF_1	FOR_1
0x959	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	crypt.c	FUNCTION_20	IF_1	FOR_1
0x95d	          0xc60000	                       mov byte [rax], 0	       488	crypt.c	FUNCTION_20	IF_1	FOR_1
0x960	      0x488345f801	                  add qword [rbp - 8], 1	       487	crypt.c	FUNCTION_20	IF_1	FOR_1
0x965	        0x488b45f8	                mov rax, qword [rbp - 8]	       487	crypt.c	FUNCTION_20	IF_1	FOR_1
0x969	           0xfb600	                   movzx eax, byte [rax]	       487	crypt.c	FUNCTION_20	IF_1	FOR_1
0x96c	            0x84c0	                             test al, al	       487	crypt.c	FUNCTION_20	IF_1	FOR_1
0x96e	            0x75e9	                           jne 0x4000999	       487	crypt.c	FUNCTION_20	IF_1	FOR_1
0x970	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       489	crypt.c	FUNCTION_20	IF_1	CALL_1
0x974	          0x4889c7	                            mov rdi, rax	       489	crypt.c	FUNCTION_20	IF_1	CALL_1
0x977	      0xe800000000	                          call 0x40009bc	       489	crypt.c	FUNCTION_20	IF_1	CALL_1
0x97c	              0x90	                                     nop	       491	crypt.c	FUNCTION_20
0x97d	              0xc9	                                   leave	       491	crypt.c	FUNCTION_20
0x97e	              0xc3	                                     ret	       491	crypt.c	FUNCTION_20
