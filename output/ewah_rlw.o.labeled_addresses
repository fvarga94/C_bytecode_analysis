rlwit_discharge_empty	DO,0:WHILE,1:FOR,0:IF,0:ELSE,0:SWITCH,0:CALL,5:functions,0	30
0x3cc	              0x55	                                push rbp	       109	ewah_rlw.c	FUNCTION_5
0x3cd	          0x4889e5	                            mov rbp, rsp	       109	ewah_rlw.c	FUNCTION_5
0x3d0	        0x4883ec10	                           sub rsp, 0x10	       109	ewah_rlw.c	FUNCTION_5
0x3d4	        0x48897df8	                mov qword [rbp - 8], rdi	       109	ewah_rlw.c	FUNCTION_5
0x3d8	        0x488975f0	             mov qword [rbp - 0x10], rsi	       109	ewah_rlw.c	FUNCTION_5
0x3dc	            0xeb3e	                           jmp 0x400045c	       110	ewah_rlw.c	FUNCTION_5	WHILE_1	CALL_1
0x3de	        0x488b45f8	                mov rax, qword [rbp - 8]	       111	ewah_rlw.c	FUNCTION_5	WHILE_1	CALL_3
0x3e2	          0x4889c7	                            mov rdi, rax	       111	ewah_rlw.c	FUNCTION_5	WHILE_1	CALL_3
0x3e5	      0xe855fcffff	                call sym.rlwit_word_size	       111	ewah_rlw.c	FUNCTION_5	WHILE_1	CALL_3
0x3ea	          0x4889c2	                            mov rdx, rax	       111	ewah_rlw.c	FUNCTION_5	WHILE_1	CALL_3
0x3ed	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       111	ewah_rlw.c	FUNCTION_5	WHILE_1	CALL_3
0x3f1	      0xbe00000000	                              mov esi, 0	       111	ewah_rlw.c	FUNCTION_5	WHILE_1	CALL_3
0x3f6	          0x4889c7	                            mov rdi, rax	       111	ewah_rlw.c	FUNCTION_5	WHILE_1	CALL_3
0x3f9	      0xe800000000	                          call 0x400043e	       111	ewah_rlw.c	FUNCTION_5	WHILE_1	CALL_3
0x3fe	        0x488b45f8	                mov rax, qword [rbp - 8]	       112	ewah_rlw.c	FUNCTION_5	WHILE_1	CALL_5
0x402	          0x4889c7	                            mov rdi, rax	       112	ewah_rlw.c	FUNCTION_5	WHILE_1	CALL_5
0x405	      0xe835fcffff	                call sym.rlwit_word_size	       112	ewah_rlw.c	FUNCTION_5	WHILE_1	CALL_5
0x40a	          0x4889c2	                            mov rdx, rax	       112	ewah_rlw.c	FUNCTION_5	WHILE_1	CALL_5
0x40d	        0x488b45f8	                mov rax, qword [rbp - 8]	       112	ewah_rlw.c	FUNCTION_5	WHILE_1	CALL_5
0x411	          0x4889d6	                            mov rsi, rdx	       112	ewah_rlw.c	FUNCTION_5	WHILE_1	CALL_5
0x414	          0x4889c7	                            mov rdi, rax	       112	ewah_rlw.c	FUNCTION_5	WHILE_1	CALL_5
0x417	      0xe800000000	                          call 0x400045c	       112	ewah_rlw.c	FUNCTION_5	WHILE_1	CALL_5
0x41c	        0x488b45f8	                mov rax, qword [rbp - 8]	       110	ewah_rlw.c	FUNCTION_5	WHILE_1	CALL_1
0x420	          0x4889c7	                            mov rdi, rax	       110	ewah_rlw.c	FUNCTION_5	WHILE_1	CALL_1
0x423	      0xe817fcffff	                call sym.rlwit_word_size	       110	ewah_rlw.c	FUNCTION_5	WHILE_1	CALL_1
0x428	          0x4885c0	                           test rax, rax	       110	ewah_rlw.c	FUNCTION_5	WHILE_1	CALL_1
0x42b	            0x75b1	                           jne 0x400041e	       110	ewah_rlw.c	FUNCTION_5	WHILE_1	CALL_1
0x42d	              0x90	                                     nop	       114	ewah_rlw.c	FUNCTION_5
0x42e	              0xc9	                                   leave	       114	ewah_rlw.c	FUNCTION_5
0x42f	              0xc3	                                     ret	       114	ewah_rlw.c	FUNCTION_5
rlw_get_literal_words	DO,0:WHILE,0:FOR,0:IF,0:ELSE,0:SWITCH,0:CALL,0:functions,0	8
0x2a	              0x55	                                push rbp	        67	ewok_rlw.h	FUNCTION_11
0x2b	          0x4889e5	                            mov rbp, rsp	        67	ewok_rlw.h	FUNCTION_11
0x2e	        0x48897df8	                mov qword [rbp - 8], rdi	        67	ewok_rlw.h	FUNCTION_11
0x32	        0x488b45f8	                mov rax, qword [rbp - 8]	        68	ewok_rlw.h	FUNCTION_11
0x36	          0x488b00	                    mov rax, qword [rax]	        68	ewok_rlw.h	FUNCTION_11
0x39	        0x48c1e821	                           shr rax, 0x21	        68	ewok_rlw.h	FUNCTION_11
0x3d	              0x5d	                                 pop rbp	        69	ewok_rlw.h	FUNCTION_11
0x3e	              0xc3	                                     ret	        69	ewok_rlw.h	FUNCTION_11
rlwit_discharge	DO,0:WHILE,1:FOR,0:IF,2:ELSE,0:SWITCH,0:CALL,4:functions,0	75
0x2bd	              0x55	                                push rbp	        82	ewah_rlw.c	FUNCTION_4
0x2be	          0x4889e5	                            mov rbp, rsp	        82	ewah_rlw.c	FUNCTION_4
0x2c1	        0x4883ec40	                           sub rsp, 0x40	        82	ewah_rlw.c	FUNCTION_4
0x2c5	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        82	ewah_rlw.c	FUNCTION_4
0x2c9	        0x488975d0	             mov qword [rbp - 0x30], rsi	        82	ewah_rlw.c	FUNCTION_4
0x2cd	        0x488955c8	             mov qword [rbp - 0x38], rdx	        82	ewah_rlw.c	FUNCTION_4
0x2d1	          0x894dc4	             mov dword [rbp - 0x3c], ecx	        82	ewah_rlw.c	FUNCTION_4
0x2d4	    0x48c745e80000	               mov qword [rbp - 0x18], 0	        83	ewah_rlw.c	FUNCTION_4
0x2dc	      0xe9c6000000	                           jmp 0x40003e7	        85	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_1
0x2e1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        86	ewah_rlw.c	FUNCTION_4	WHILE_1
0x2e5	          0x8b402c	            mov eax, dword [rax + 0x2c] 	        86	ewah_rlw.c	FUNCTION_4	WHILE_1
0x2e8	            0x4898	                                    cdqe	        86	ewah_rlw.c	FUNCTION_4	WHILE_1
0x2ea	        0x488945f8	                mov qword [rbp - 8], rax	        86	ewah_rlw.c	FUNCTION_4	WHILE_1
0x2ee	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        88	ewah_rlw.c	FUNCTION_4	WHILE_1	IF_1
0x2f2	        0x488b45f8	                mov rax, qword [rbp - 8]	        88	ewah_rlw.c	FUNCTION_4	WHILE_1	IF_1
0x2f6	          0x4801d0	                            add rax, rdx	        88	ewah_rlw.c	FUNCTION_4	WHILE_1	IF_1
0x2f9	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	        88	ewah_rlw.c	FUNCTION_4	WHILE_1	IF_1
0x2fd	            0x760c	                           jbe 0x400034b	        88	ewah_rlw.c	FUNCTION_4	WHILE_1	IF_1
0x2ff	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        89	ewah_rlw.c	FUNCTION_4	WHILE_1	IF_1
0x303	        0x482b45e8	             sub rax, qword [rbp - 0x18]	        89	ewah_rlw.c	FUNCTION_4	WHILE_1	IF_1
0x307	        0x488945f8	                mov qword [rbp - 8], rax	        89	ewah_rlw.c	FUNCTION_4	WHILE_1	IF_1
0x30b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        91	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_2
0x30f	          0x8b4034	            mov eax, dword [rax + 0x34] 	        91	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_2
0x312	          0x3345c4	             xor eax, dword [rbp - 0x3c]	        91	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_2
0x315	            0x89c1	                            mov ecx, eax	        91	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_2
0x317	        0x488b55f8	                mov rdx, qword [rbp - 8]	        91	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_2
0x31b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        91	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_2
0x31f	            0x89ce	                            mov esi, ecx	        91	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_2
0x321	          0x4889c7	                            mov rdi, rax	        91	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_2
0x324	      0xe800000000	                          call 0x4000369	        91	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_2
0x329	        0x488b45f8	                mov rax, qword [rbp - 8]	        92	ewah_rlw.c	FUNCTION_4	WHILE_1
0x32d	        0x480145e8	            add qword [rbp - 0x18], rax 	        92	ewah_rlw.c	FUNCTION_4	WHILE_1
0x331	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        94	ewah_rlw.c	FUNCTION_4	WHILE_1
0x335	          0x8b4028	            mov eax, dword [rax + 0x28] 	        94	ewah_rlw.c	FUNCTION_4	WHILE_1
0x338	            0x4898	                                    cdqe	        94	ewah_rlw.c	FUNCTION_4	WHILE_1
0x33a	        0x488945f0	             mov qword [rbp - 0x10], rax	        94	ewah_rlw.c	FUNCTION_4	WHILE_1
0x33e	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        95	ewah_rlw.c	FUNCTION_4	WHILE_1	IF_2
0x342	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        95	ewah_rlw.c	FUNCTION_4	WHILE_1	IF_2
0x346	          0x4801d0	                            add rax, rdx	        95	ewah_rlw.c	FUNCTION_4	WHILE_1	IF_2
0x349	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	        95	ewah_rlw.c	FUNCTION_4	WHILE_1	IF_2
0x34d	            0x760c	                           jbe 0x400039b	        95	ewah_rlw.c	FUNCTION_4	WHILE_1	IF_2
0x34f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        96	ewah_rlw.c	FUNCTION_4	WHILE_1	IF_2
0x353	        0x482b45e8	             sub rax, qword [rbp - 0x18]	        96	ewah_rlw.c	FUNCTION_4	WHILE_1	IF_2
0x357	        0x488945f0	             mov qword [rbp - 0x10], rax	        96	ewah_rlw.c	FUNCTION_4	WHILE_1	IF_2
0x35b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        99	ewah_rlw.c	FUNCTION_4	WHILE_1
0x35f	          0x488b10	                    mov rdx, qword [rax]	        99	ewah_rlw.c	FUNCTION_4	WHILE_1
0x362	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        99	ewah_rlw.c	FUNCTION_4	WHILE_1
0x366	        0x488b4018	            mov rax, qword [rax + 0x18] 	        99	ewah_rlw.c	FUNCTION_4	WHILE_1
0x36a	        0x48c1e003	                              shl rax, 3	        99	ewah_rlw.c	FUNCTION_4	WHILE_1
0x36e	        0x488d3402	                    lea rsi, [rdx + rax]	        98	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_3
0x372	          0x8b4dc4	             mov ecx, dword [rbp - 0x3c]	        98	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_3
0x375	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        98	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_3
0x379	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        98	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_3
0x37d	          0x4889c7	                            mov rdi, rax	        98	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_3
0x380	      0xe800000000	                          call 0x40003c5	        98	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_3
0x385	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       101	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_4
0x389	        0x488b45f8	                mov rax, qword [rbp - 8]	       101	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_4
0x38d	          0x4801c2	                            add rdx, rax	       101	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_4
0x390	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       101	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_4
0x394	          0x4889d6	                            mov rsi, rdx	       101	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_4
0x397	          0x4889c7	                            mov rdi, rax	       101	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_4
0x39a	      0xe800000000	                          call 0x40003df	       101	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_4
0x39f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       102	ewah_rlw.c	FUNCTION_4	WHILE_1
0x3a3	        0x480145e8	            add qword [rbp - 0x18], rax 	       102	ewah_rlw.c	FUNCTION_4	WHILE_1
0x3a7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        85	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_1
0x3ab	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	        85	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_1
0x3af	            0x7315	                           jae 0x4000406	        85	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_1
0x3b1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        85	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_1
0x3b5	          0x4889c7	                            mov rdi, rax	        85	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_1
0x3b8	      0xe882fcffff	                call sym.rlwit_word_size	        85	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_1
0x3bd	          0x4885c0	                           test rax, rax	        85	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_1
0x3c0	     0xf851bffffff	                           jne 0x4000321	        85	ewah_rlw.c	FUNCTION_4	WHILE_1	CALL_1
0x3c6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       105	ewah_rlw.c	FUNCTION_4
0x3ca	              0xc9	                                   leave	       106	ewah_rlw.c	FUNCTION_4
0x3cb	              0xc3	                                     ret	       106	ewah_rlw.c	FUNCTION_4
rlwit_discard_first_words	DO,0:WHILE,1:FOR,0:IF,3:ELSE,0:SWITCH,0:CALL,3:functions,0	79
0x1b5	              0x55	                                push rbp	        52	ewah_rlw.c	FUNCTION_3
0x1b6	          0x4889e5	                            mov rbp, rsp	        52	ewah_rlw.c	FUNCTION_3
0x1b9	        0x4883ec20	                           sub rsp, 0x20	        52	ewah_rlw.c	FUNCTION_3
0x1bd	        0x48897de8	             mov qword [rbp - 0x18], rdi	        52	ewah_rlw.c	FUNCTION_3
0x1c1	        0x488975e0	             mov qword [rbp - 0x20], rsi	        52	ewah_rlw.c	FUNCTION_3
0x1c5	      0xe9e3000000	                           jmp 0x40002ed	        53	ewah_rlw.c	FUNCTION_3	WHILE_1
0x1ca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        56	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_1
0x1ce	          0x8b402c	            mov eax, dword [rax + 0x2c] 	        56	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_1
0x1d1	            0x4898	                                    cdqe	        56	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_1
0x1d3	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	        56	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_1
0x1d7	            0x761f	                           jbe 0x4000238	        56	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_1
0x1d9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        57	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_1
0x1dd	          0x8b402c	            mov eax, dword [rax + 0x2c] 	        57	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_1
0x1e0	            0x89c2	                            mov edx, eax	        57	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_1
0x1e2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        57	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_1
0x1e6	            0x29c2	                            sub edx, eax	        57	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_1
0x1e8	            0x89d0	                            mov eax, edx	        57	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_1
0x1ea	            0x89c2	                            mov edx, eax	        57	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_1
0x1ec	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        57	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_1
0x1f0	          0x89502c	             mov dword [rax + 0x2c], edx	        57	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_1
0x1f3	      0xe9c3000000	                           jmp 0x40002fb	        58	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_1
0x1f8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        61	ewah_rlw.c	FUNCTION_3	WHILE_1
0x1fc	          0x8b402c	            mov eax, dword [rax + 0x2c] 	        61	ewah_rlw.c	FUNCTION_3	WHILE_1
0x1ff	            0x4898	                                    cdqe	        61	ewah_rlw.c	FUNCTION_3	WHILE_1
0x201	        0x482945e0	             sub qword [rbp - 0x20], rax	        61	ewah_rlw.c	FUNCTION_3	WHILE_1
0x205	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        62	ewah_rlw.c	FUNCTION_3	WHILE_1
0x209	    0xc7402c000000	               mov dword [rax + 0x2c], 0	        62	ewah_rlw.c	FUNCTION_3	WHILE_1
0x210	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        64	ewah_rlw.c	FUNCTION_3	WHILE_1
0x214	          0x8b4028	            mov eax, dword [rax + 0x28] 	        64	ewah_rlw.c	FUNCTION_3	WHILE_1
0x217	          0x4863d0	                         movsxd rdx, eax	        64	ewah_rlw.c	FUNCTION_3	WHILE_1
0x21a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        64	ewah_rlw.c	FUNCTION_3	WHILE_1
0x21e	          0x4839c2	                            cmp rdx, rax	        64	ewah_rlw.c	FUNCTION_3	WHILE_1
0x221	        0x480f46c2	                         cmovbe rax, rdx	        64	ewah_rlw.c	FUNCTION_3	WHILE_1
0x225	        0x488945f8	                mov qword [rbp - 8], rax	        64	ewah_rlw.c	FUNCTION_3	WHILE_1
0x229	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        66	ewah_rlw.c	FUNCTION_3	WHILE_1
0x22d	        0x488b5018	            mov rdx, qword [rax + 0x18] 	        66	ewah_rlw.c	FUNCTION_3	WHILE_1
0x231	        0x488b45f8	                mov rax, qword [rbp - 8]	        66	ewah_rlw.c	FUNCTION_3	WHILE_1
0x235	          0x4801c2	                            add rdx, rax	        66	ewah_rlw.c	FUNCTION_3	WHILE_1
0x238	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        66	ewah_rlw.c	FUNCTION_3	WHILE_1
0x23c	        0x48895018	             mov qword [rax + 0x18], rdx	        66	ewah_rlw.c	FUNCTION_3	WHILE_1
0x240	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        67	ewah_rlw.c	FUNCTION_3	WHILE_1
0x244	          0x8b4028	            mov eax, dword [rax + 0x28] 	        67	ewah_rlw.c	FUNCTION_3	WHILE_1
0x247	            0x89c2	                            mov edx, eax	        67	ewah_rlw.c	FUNCTION_3	WHILE_1
0x249	        0x488b45f8	                mov rax, qword [rbp - 8]	        67	ewah_rlw.c	FUNCTION_3	WHILE_1
0x24d	            0x29c2	                            sub edx, eax	        67	ewah_rlw.c	FUNCTION_3	WHILE_1
0x24f	            0x89d0	                            mov eax, edx	        67	ewah_rlw.c	FUNCTION_3	WHILE_1
0x251	            0x89c2	                            mov edx, eax	        67	ewah_rlw.c	FUNCTION_3	WHILE_1
0x253	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        67	ewah_rlw.c	FUNCTION_3	WHILE_1
0x257	          0x895028	             mov dword [rax + 0x28], edx	        67	ewah_rlw.c	FUNCTION_3	WHILE_1
0x25a	        0x488b45f8	                mov rax, qword [rbp - 8]	        68	ewah_rlw.c	FUNCTION_3	WHILE_1
0x25e	        0x482945e0	             sub qword [rbp - 0x20], rax	        68	ewah_rlw.c	FUNCTION_3	WHILE_1
0x262	      0x48837de000	               cmp qword [rbp - 0x20], 0	        70	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_2	CALL_1
0x267	            0x7511	                           jne 0x40002ba	        70	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_2	CALL_1
0x269	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        70	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_2	CALL_1
0x26d	          0x4889c7	                            mov rdi, rax	        70	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_2	CALL_1
0x270	      0xe8cafdffff	                call sym.rlwit_word_size	        70	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_2	CALL_1
0x275	          0x4885c0	                           test rax, rax	        70	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_2	CALL_1
0x278	            0x7533	                           jne 0x40002ed	        70	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_2	CALL_1
0x27a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        71	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_2	IF_3	CALL_2
0x27e	          0x4889c7	                            mov rdi, rax	        71	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_2	IF_3	CALL_2
0x281	      0xe8f6fdffff	                      call sym.next_word	        71	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_2	IF_3	CALL_2
0x286	            0x85c0	                           test eax, eax	        71	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_2	IF_3	CALL_2
0x288	            0x7430	                            je 0x40002fa	        71	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_2	IF_3	CALL_2
0x28a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        75	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_2	CALL_3
0x28e	          0x4889c7	                            mov rdi, rax	        75	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_2	CALL_3
0x291	      0xe8c5fdffff	            call sym.rlwit_literal_words	        75	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_2	CALL_3
0x296	          0x4889c2	                            mov rdx, rax	        75	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_2	CALL_3
0x299	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        75	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_2	CALL_3
0x29d	          0x8b4030	            mov eax, dword [rax + 0x30] 	        75	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_2	CALL_3
0x2a0	            0x4898	                                    cdqe	        75	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_2	CALL_3
0x2a2	          0x4801c2	                            add rdx, rax	        75	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_2	CALL_3
0x2a5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        74	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_2
0x2a9	        0x48895018	             mov qword [rax + 0x18], rdx	        74	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_2
0x2ad	      0x48837de000	               cmp qword [rbp - 0x20], 0	        53	ewah_rlw.c	FUNCTION_3	WHILE_1
0x2b2	     0xf8512ffffff	                           jne 0x400020a	        53	ewah_rlw.c	FUNCTION_3	WHILE_1
0x2b8	            0xeb01	                           jmp 0x40002fb	        53	ewah_rlw.c	FUNCTION_3	WHILE_1
0x2ba	              0x90	                                     nop	        72	ewah_rlw.c	FUNCTION_3	WHILE_1	IF_2	IF_3
0x2bb	              0xc9	                                   leave	        78	ewah_rlw.c	FUNCTION_3
0x2bc	              0xc3	                                     ret	        78	ewah_rlw.c	FUNCTION_3
rlwit_init	DO,0:WHILE,0:FOR,0:IF,0:ELSE,0:SWITCH,0:CALL,2:functions,0	31
0x149	              0x55	                                push rbp	        40	ewah_rlw.c	FUNCTION_2
0x14a	          0x4889e5	                            mov rbp, rsp	        40	ewah_rlw.c	FUNCTION_2
0x14d	        0x4883ec10	                           sub rsp, 0x10	        40	ewah_rlw.c	FUNCTION_2
0x151	        0x48897df8	                mov qword [rbp - 8], rdi	        40	ewah_rlw.c	FUNCTION_2
0x155	        0x488975f0	             mov qword [rbp - 0x10], rsi	        40	ewah_rlw.c	FUNCTION_2
0x159	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        41	ewah_rlw.c	FUNCTION_2
0x15d	          0x488b10	                    mov rdx, qword [rax]	        41	ewah_rlw.c	FUNCTION_2
0x160	        0x488b45f8	                mov rax, qword [rbp - 8]	        41	ewah_rlw.c	FUNCTION_2
0x164	          0x488910	                    mov qword [rax], rdx	        41	ewah_rlw.c	FUNCTION_2
0x167	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        42	ewah_rlw.c	FUNCTION_2
0x16b	        0x488b5008	                mov rdx, qword [rax + 8]	        42	ewah_rlw.c	FUNCTION_2
0x16f	        0x488b45f8	                mov rax, qword [rbp - 8]	        42	ewah_rlw.c	FUNCTION_2
0x173	        0x48895008	                mov qword [rax + 8], rdx	        42	ewah_rlw.c	FUNCTION_2
0x177	        0x488b45f8	                mov rax, qword [rbp - 8]	        43	ewah_rlw.c	FUNCTION_2
0x17b	    0x48c740100000	               mov qword [rax + 0x10], 0	        43	ewah_rlw.c	FUNCTION_2
0x183	        0x488b45f8	                mov rax, qword [rbp - 8]	        45	ewah_rlw.c	FUNCTION_2	CALL_1
0x187	          0x4889c7	                            mov rdi, rax	        45	ewah_rlw.c	FUNCTION_2	CALL_1
0x18a	      0xe8edfeffff	                      call sym.next_word	        45	ewah_rlw.c	FUNCTION_2	CALL_1
0x18f	        0x488b45f8	                mov rax, qword [rbp - 8]	        47	ewah_rlw.c	FUNCTION_2	CALL_2
0x193	          0x4889c7	                            mov rdi, rax	        47	ewah_rlw.c	FUNCTION_2	CALL_2
0x196	      0xe8c0feffff	            call sym.rlwit_literal_words	        47	ewah_rlw.c	FUNCTION_2	CALL_2
0x19b	          0x4889c2	                            mov rdx, rax	        47	ewah_rlw.c	FUNCTION_2	CALL_2
0x19e	        0x488b45f8	                mov rax, qword [rbp - 8]	        48	ewah_rlw.c	FUNCTION_2
0x1a2	          0x8b4030	            mov eax, dword [rax + 0x30] 	        48	ewah_rlw.c	FUNCTION_2
0x1a5	            0x4898	                                    cdqe	        47	ewah_rlw.c	FUNCTION_2	CALL_2
0x1a7	          0x4801c2	                            add rdx, rax	        47	ewah_rlw.c	FUNCTION_2	CALL_2
0x1aa	        0x488b45f8	                mov rax, qword [rbp - 8]	        47	ewah_rlw.c	FUNCTION_2	CALL_2
0x1ae	        0x48895018	             mov qword [rax + 0x18], rdx	        47	ewah_rlw.c	FUNCTION_2	CALL_2
0x1b2	              0x90	                                     nop	        49	ewah_rlw.c	FUNCTION_2
0x1b3	              0xc9	                                   leave	        49	ewah_rlw.c	FUNCTION_2
0x1b4	              0xc3	                                     ret	        49	ewah_rlw.c	FUNCTION_2
rlwit_literal_words	DO,0:WHILE,0:FOR,0:IF,0:ELSE,0:SWITCH,0:CALL,0:functions,0	12
0x5b	              0x55	                                push rbp	       109	ewok_rlw.h	FUNCTION_15
0x5c	          0x4889e5	                            mov rbp, rsp	       109	ewok_rlw.h	FUNCTION_15
0x5f	        0x48897df8	                mov qword [rbp - 8], rdi	       109	ewok_rlw.h	FUNCTION_15
0x63	        0x488b45f8	                mov rax, qword [rbp - 8]	       110	ewok_rlw.h	FUNCTION_15
0x67	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       110	ewok_rlw.h	FUNCTION_15
0x6b	        0x488b45f8	                mov rax, qword [rbp - 8]	       110	ewok_rlw.h	FUNCTION_15
0x6f	          0x8b4028	            mov eax, dword [rax + 0x28] 	       110	ewok_rlw.h	FUNCTION_15
0x72	            0x4898	                                    cdqe	       110	ewok_rlw.h	FUNCTION_15
0x74	          0x4829c2	                            sub rdx, rax	       110	ewok_rlw.h	FUNCTION_15
0x77	          0x4889d0	                            mov rax, rdx	       110	ewok_rlw.h	FUNCTION_15
0x7a	              0x5d	                                 pop rbp	       111	ewok_rlw.h	FUNCTION_15
0x7b	              0xc3	                                     ret	       111	ewok_rlw.h	FUNCTION_15
rlw_get_run_bit	DO,0:WHILE,0:FOR,0:IF,0:ELSE,0:SWITCH,0:CALL,0:functions,0	8
0x0	              0x55	                                push rbp	        33	ewok_rlw.h	FUNCTION_6
0x1	          0x4889e5	                            mov rbp, rsp	        33	ewok_rlw.h	FUNCTION_6
0x4	        0x48897df8	                mov qword [rbp - 8], rdi	        33	ewok_rlw.h	FUNCTION_6
0x8	        0x488b45f8	                mov rax, qword [rbp - 8]	        34	ewok_rlw.h	FUNCTION_6
0xc	          0x488b00	                    mov rax, qword [rax]	        34	ewok_rlw.h	FUNCTION_6
0xf	          0x83e001	                              and eax, 1	        34	ewok_rlw.h	FUNCTION_6
0x12	              0x5d	                                 pop rbp	        35	ewok_rlw.h	FUNCTION_6
0x13	              0xc3	                                     ret	        35	ewok_rlw.h	FUNCTION_6
rlw_get_running_len	DO,0:WHILE,0:FOR,0:IF,0:ELSE,0:SWITCH,0:CALL,0:functions,0	9
0x14	              0x55	                                push rbp	        62	ewok_rlw.h	FUNCTION_10
0x15	          0x4889e5	                            mov rbp, rsp	        62	ewok_rlw.h	FUNCTION_10
0x18	        0x48897df8	                mov qword [rbp - 8], rdi	        62	ewok_rlw.h	FUNCTION_10
0x1c	        0x488b45f8	                mov rax, qword [rbp - 8]	        63	ewok_rlw.h	FUNCTION_10
0x20	          0x488b00	                    mov rax, qword [rax]	        63	ewok_rlw.h	FUNCTION_10
0x23	          0x48d1e8	                              shr rax, 1	        63	ewok_rlw.h	FUNCTION_10
0x26	            0x89c0	                            mov eax, eax	        63	ewok_rlw.h	FUNCTION_10
0x28	              0x5d	                                 pop rbp	        64	ewok_rlw.h	FUNCTION_10
0x29	              0xc3	                                     ret	        64	ewok_rlw.h	FUNCTION_10
rlwit_word_size	DO,0:WHILE,0:FOR,0:IF,0:ELSE,0:SWITCH,0:CALL,0:functions,0	11
0x3f	              0x55	                                push rbp	       104	ewok_rlw.h	FUNCTION_14
0x40	          0x4889e5	                            mov rbp, rsp	       104	ewok_rlw.h	FUNCTION_14
0x43	        0x48897df8	                mov qword [rbp - 8], rdi	       104	ewok_rlw.h	FUNCTION_14
0x47	        0x488b45f8	                mov rax, qword [rbp - 8]	       105	ewok_rlw.h	FUNCTION_14
0x4b	          0x8b502c	            mov edx, dword [rax + 0x2c] 	       105	ewok_rlw.h	FUNCTION_14
0x4e	        0x488b45f8	                mov rax, qword [rbp - 8]	       105	ewok_rlw.h	FUNCTION_14
0x52	          0x8b4028	            mov eax, dword [rax + 0x28] 	       105	ewok_rlw.h	FUNCTION_14
0x55	             0x1d0	                            add eax, edx	       105	ewok_rlw.h	FUNCTION_14
0x57	            0x4898	                                    cdqe	       105	ewok_rlw.h	FUNCTION_14
0x59	              0x5d	                                 pop rbp	       106	ewok_rlw.h	FUNCTION_14
0x5a	              0xc3	                                     ret	       106	ewok_rlw.h	FUNCTION_14
next_word	DO,0:WHILE,0:FOR,0:IF,1:ELSE,0:SWITCH,0:CALL,4:functions,0	56
0x7c	              0x55	                                push rbp	        24	ewah_rlw.c	FUNCTION_1
0x7d	          0x4889e5	                            mov rbp, rsp	        24	ewah_rlw.c	FUNCTION_1
0x80	        0x4883ec08	                              sub rsp, 8	        24	ewah_rlw.c	FUNCTION_1
0x84	        0x48897df8	                mov qword [rbp - 8], rdi	        24	ewah_rlw.c	FUNCTION_1
0x88	        0x488b45f8	                mov rax, qword [rbp - 8]	        25	ewah_rlw.c	FUNCTION_1	IF_1
0x8c	        0x488b5010	            mov rdx, qword [rax + 0x10] 	        25	ewah_rlw.c	FUNCTION_1	IF_1
0x90	        0x488b45f8	                mov rax, qword [rbp - 8]	        25	ewah_rlw.c	FUNCTION_1	IF_1
0x94	        0x488b4008	                mov rax, qword [rax + 8]	        25	ewah_rlw.c	FUNCTION_1	IF_1
0x98	          0x4839c2	                            cmp rdx, rax	        25	ewah_rlw.c	FUNCTION_1	IF_1
0x9b	            0x720a	                            jb 0x40000e7	        25	ewah_rlw.c	FUNCTION_1	IF_1
0x9d	      0xb800000000	                              mov eax, 0	        26	ewah_rlw.c	FUNCTION_1	IF_1
0xa2	      0xe9a0000000	                           jmp 0x4000187	        26	ewah_rlw.c	FUNCTION_1	IF_1
0xa7	        0x488b45f8	                mov rax, qword [rbp - 8]	        28	ewah_rlw.c	FUNCTION_1
0xab	          0x488b10	                    mov rdx, qword [rax]	        28	ewah_rlw.c	FUNCTION_1
0xae	        0x488b45f8	                mov rax, qword [rbp - 8]	        28	ewah_rlw.c	FUNCTION_1
0xb2	        0x488b4010	            mov rax, qword [rax + 0x10] 	        28	ewah_rlw.c	FUNCTION_1
0xb6	        0x48c1e003	                              shl rax, 3	        28	ewah_rlw.c	FUNCTION_1
0xba	          0x4801c2	                            add rdx, rax	        28	ewah_rlw.c	FUNCTION_1
0xbd	        0x488b45f8	                mov rax, qword [rbp - 8]	        28	ewah_rlw.c	FUNCTION_1
0xc1	        0x48895020	             mov qword [rax + 0x20], rdx	        28	ewah_rlw.c	FUNCTION_1
0xc5	        0x488b45f8	                mov rax, qword [rbp - 8]	        29	ewah_rlw.c	FUNCTION_1	CALL_1
0xc9	        0x488b4020	            mov rax, qword [rax + 0x20] 	        29	ewah_rlw.c	FUNCTION_1	CALL_1
0xcd	          0x4889c7	                            mov rdi, rax	        29	ewah_rlw.c	FUNCTION_1	CALL_1
0xd0	      0xe855ffffff	          call sym.rlw_get_literal_words	        29	ewah_rlw.c	FUNCTION_1	CALL_1
0xd5	        0x488d5001	                      lea rdx, [rax + 1]	        29	ewah_rlw.c	FUNCTION_1	CALL_1
0xd9	        0x488b45f8	                mov rax, qword [rbp - 8]	        29	ewah_rlw.c	FUNCTION_1	CALL_1
0xdd	        0x488b4010	            mov rax, qword [rax + 0x10] 	        29	ewah_rlw.c	FUNCTION_1	CALL_1
0xe1	          0x4801c2	                            add rdx, rax	        29	ewah_rlw.c	FUNCTION_1	CALL_1
0xe4	        0x488b45f8	                mov rax, qword [rbp - 8]	        29	ewah_rlw.c	FUNCTION_1	CALL_1
0xe8	        0x48895010	             mov qword [rax + 0x10], rdx	        29	ewah_rlw.c	FUNCTION_1	CALL_1
0xec	        0x488b45f8	                mov rax, qword [rbp - 8]	        31	ewah_rlw.c	FUNCTION_1	CALL_2
0xf0	        0x488b4020	            mov rax, qword [rax + 0x20] 	        31	ewah_rlw.c	FUNCTION_1	CALL_2
0xf4	          0x4889c7	                            mov rdi, rax	        31	ewah_rlw.c	FUNCTION_1	CALL_2
0xf7	      0xe82effffff	          call sym.rlw_get_literal_words	        31	ewah_rlw.c	FUNCTION_1	CALL_2
0xfc	            0x89c2	                            mov edx, eax	        31	ewah_rlw.c	FUNCTION_1	CALL_2
0xfe	        0x488b45f8	                mov rax, qword [rbp - 8]	        31	ewah_rlw.c	FUNCTION_1	CALL_2
0x102	          0x895028	             mov dword [rax + 0x28], edx	        31	ewah_rlw.c	FUNCTION_1	CALL_2
0x105	        0x488b45f8	                mov rax, qword [rbp - 8]	        32	ewah_rlw.c	FUNCTION_1	CALL_3
0x109	        0x488b4020	            mov rax, qword [rax + 0x20] 	        32	ewah_rlw.c	FUNCTION_1	CALL_3
0x10d	          0x4889c7	                            mov rdi, rax	        32	ewah_rlw.c	FUNCTION_1	CALL_3
0x110	      0xe8fffeffff	            call sym.rlw_get_running_len	        32	ewah_rlw.c	FUNCTION_1	CALL_3
0x115	            0x89c2	                            mov edx, eax	        32	ewah_rlw.c	FUNCTION_1	CALL_3
0x117	        0x488b45f8	                mov rax, qword [rbp - 8]	        32	ewah_rlw.c	FUNCTION_1	CALL_3
0x11b	          0x89502c	             mov dword [rax + 0x2c], edx	        32	ewah_rlw.c	FUNCTION_1	CALL_3
0x11e	        0x488b45f8	                mov rax, qword [rbp - 8]	        33	ewah_rlw.c	FUNCTION_1	CALL_4
0x122	        0x488b4020	            mov rax, qword [rax + 0x20] 	        33	ewah_rlw.c	FUNCTION_1	CALL_4
0x126	          0x4889c7	                            mov rdi, rax	        33	ewah_rlw.c	FUNCTION_1	CALL_4
0x129	      0xe8d2feffff	                call sym.rlw_get_run_bit	        33	ewah_rlw.c	FUNCTION_1	CALL_4
0x12e	            0x89c2	                            mov edx, eax	        33	ewah_rlw.c	FUNCTION_1	CALL_4
0x130	        0x488b45f8	                mov rax, qword [rbp - 8]	        33	ewah_rlw.c	FUNCTION_1	CALL_4
0x134	          0x895034	             mov dword [rax + 0x34], edx	        33	ewah_rlw.c	FUNCTION_1	CALL_4
0x137	        0x488b45f8	                mov rax, qword [rbp - 8]	        34	ewah_rlw.c	FUNCTION_1
0x13b	    0xc74030000000	               mov dword [rax + 0x30], 0	        34	ewah_rlw.c	FUNCTION_1
0x142	      0xb801000000	                              mov eax, 1	        36	ewah_rlw.c	FUNCTION_1
0x147	              0xc9	                                   leave	        37	ewah_rlw.c	FUNCTION_1
0x148	              0xc3	                                     ret	        37	ewah_rlw.c	FUNCTION_1
