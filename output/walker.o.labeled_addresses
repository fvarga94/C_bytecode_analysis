report_missing	DO,0:CALL,6:WHILE,0:ELSE,0:IF,1:functions,0:SWITCH,0:FOR,0	48
0x2df	              0x55	                                push rbp	        23	walker.c	FUNCTION_2
0x2e0	          0x4889e5	                            mov rbp, rsp	        23	walker.c	FUNCTION_2
0x2e3	              0x53	                                push rbx	        23	walker.c	FUNCTION_2
0x2e4	        0x4883ec18	                           sub rsp, 0x18	        23	walker.c	FUNCTION_2
0x2e8	        0x48897de8	             mov qword [rbp - 0x18], rdi	        23	walker.c	FUNCTION_2
0x2ec	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        24	walker.c	FUNCTION_2	CALL_1
0x2f0	        0x4883c004	                              add rax, 4	        24	walker.c	FUNCTION_2	CALL_1
0x2f4	          0x4889c7	                            mov rdi, rax	        24	walker.c	FUNCTION_2	CALL_1
0x2f7	      0xe800000000	                          call 0x400033c	        24	walker.c	FUNCTION_2	CALL_1
0x2fc	          0x4889c3	                            mov rbx, rax	        24	walker.c	FUNCTION_2	CALL_1
0x2ff	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        25	walker.c	FUNCTION_2	CALL_2
0x303	           0xfb600	                   movzx eax, byte [rax]	        25	walker.c	FUNCTION_2	CALL_2
0x306	          0x83e00e	                            and eax, 0xe	        25	walker.c	FUNCTION_2	CALL_2
0x309	            0x84c0	                             test al, al	        24	walker.c	FUNCTION_2	CALL_1
0x30b	            0x741b	                            je 0x4000368	        24	walker.c	FUNCTION_2	CALL_1
0x30d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        25	walker.c	FUNCTION_2	CALL_2
0x311	           0xfb600	                   movzx eax, byte [rax]	        25	walker.c	FUNCTION_2	CALL_2
0x314	            0xd0e8	                               shr al, 1	        25	walker.c	FUNCTION_2	CALL_2
0x316	          0x83e007	                              and eax, 7	        25	walker.c	FUNCTION_2	CALL_2
0x319	           0xfb6c0	                           movzx eax, al	        25	walker.c	FUNCTION_2	CALL_2
0x31c	            0x89c7	                            mov edi, eax	        24	walker.c	FUNCTION_2	CALL_1
0x31e	      0xe800000000	                          call 0x4000363	        24	walker.c	FUNCTION_2	CALL_1
0x323	          0x4889c2	                            mov rdx, rax	        24	walker.c	FUNCTION_2	CALL_1
0x326	            0xeb05	                           jmp 0x400036d	        24	walker.c	FUNCTION_2	CALL_1
0x328	      0xba00000000	                              mov edx, 0	        24	walker.c	FUNCTION_2	CALL_1
0x32d	    0x488b05000000	            mov rax, qword [0x04000374] 	        24	walker.c	FUNCTION_2	CALL_1
0x334	          0x4889d9	                            mov rcx, rbx	        24	walker.c	FUNCTION_2	CALL_1
0x337	      0xbe00000000	                              mov esi, 0	        24	walker.c	FUNCTION_2	CALL_1
0x33c	          0x4889c7	                            mov rdi, rax	        24	walker.c	FUNCTION_2	CALL_1
0x33f	      0xb800000000	                              mov eax, 0	        24	walker.c	FUNCTION_2	CALL_1
0x344	      0xe800000000	                          call 0x4000389	        24	walker.c	FUNCTION_2	CALL_1
0x349	      0xbf00000000	                              mov edi, 0	        27	walker.c	FUNCTION_2	IF_1	CALL_4
0x34e	      0xe8f6fdffff	                    call sym.is_null_oid	        27	walker.c	FUNCTION_2	IF_1	CALL_4
0x353	            0x85c0	                           test eax, eax	        27	walker.c	FUNCTION_2	IF_1	CALL_4
0x355	            0x7526	                           jne 0x40003bd	        27	walker.c	FUNCTION_2	IF_1	CALL_4
0x357	      0xbf00000000	                              mov edi, 0	        28	walker.c	FUNCTION_2	IF_1	CALL_5
0x35c	      0xe800000000	                          call 0x40003a1	        28	walker.c	FUNCTION_2	IF_1	CALL_5
0x361	          0x4889c2	                            mov rdx, rax	        28	walker.c	FUNCTION_2	IF_1	CALL_5
0x364	    0x488b05000000	            mov rax, qword [0x040003ab] 	        28	walker.c	FUNCTION_2	IF_1	CALL_5
0x36b	      0xbe00000000	                              mov esi, 0	        28	walker.c	FUNCTION_2	IF_1	CALL_5
0x370	          0x4889c7	                            mov rdi, rax	        28	walker.c	FUNCTION_2	IF_1	CALL_5
0x373	      0xb800000000	                              mov eax, 0	        28	walker.c	FUNCTION_2	IF_1	CALL_5
0x378	      0xe800000000	                          call 0x40003bd	        28	walker.c	FUNCTION_2	IF_1	CALL_5
0x37d	              0x90	                                     nop	        30	walker.c	FUNCTION_2
0x37e	        0x4883c418	                           add rsp, 0x18	        30	walker.c	FUNCTION_2
0x382	              0x5b	                                 pop rbx	        30	walker.c	FUNCTION_2
0x383	              0x5d	                                 pop rbp	        30	walker.c	FUNCTION_2
0x384	              0xc3	                                     ret	        30	walker.c	FUNCTION_2
walker_targets_free	DO,0:CALL,2:WHILE,1:ELSE,0:IF,1:functions,0:SWITCH,0:FOR,0	33
0xc14	              0x55	                                push rbp	       245	walker.c	FUNCTION_12
0xc15	          0x4889e5	                            mov rbp, rsp	       245	walker.c	FUNCTION_12
0xc18	        0x4883ec20	                           sub rsp, 0x20	       245	walker.c	FUNCTION_12
0xc1c	          0x897dfc	                mov dword [rbp - 4], edi	       245	walker.c	FUNCTION_12
0xc1f	        0x488975f0	             mov qword [rbp - 0x10], rsi	       245	walker.c	FUNCTION_12
0xc23	        0x488955e8	             mov qword [rbp - 0x18], rdx	       245	walker.c	FUNCTION_12
0xc27	            0xeb45	                           jmp 0x4000cae	       246	walker.c	FUNCTION_12	WHILE_1
0xc29	          0x8b45fc	                mov eax, dword [rbp - 4]	       247	walker.c	FUNCTION_12	WHILE_1	CALL_1
0xc2c	            0x4898	                                    cdqe	       247	walker.c	FUNCTION_12	WHILE_1	CALL_1
0xc2e	    0x488d14c50000	                        lea rdx, [rax*8]	       247	walker.c	FUNCTION_12	WHILE_1	CALL_1
0xc36	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       247	walker.c	FUNCTION_12	WHILE_1	CALL_1
0xc3a	          0x4801d0	                            add rax, rdx	       247	walker.c	FUNCTION_12	WHILE_1	CALL_1
0xc3d	          0x488b00	                    mov rax, qword [rax]	       247	walker.c	FUNCTION_12	WHILE_1	CALL_1
0xc40	          0x4889c7	                            mov rdi, rax	       247	walker.c	FUNCTION_12	WHILE_1	CALL_1
0xc43	      0xe800000000	                          call 0x4000c88	       247	walker.c	FUNCTION_12	WHILE_1	CALL_1
0xc48	      0x48837de800	               cmp qword [rbp - 0x18], 0	       248	walker.c	FUNCTION_12	WHILE_1	IF_1
0xc4d	            0x741f	                            je 0x4000cae	       248	walker.c	FUNCTION_12	WHILE_1	IF_1
0xc4f	          0x8b45fc	                mov eax, dword [rbp - 4]	       249	walker.c	FUNCTION_12	WHILE_1	CALL_2
0xc52	            0x4898	                                    cdqe	       249	walker.c	FUNCTION_12	WHILE_1	CALL_2
0xc54	    0x488d14c50000	                        lea rdx, [rax*8]	       249	walker.c	FUNCTION_12	WHILE_1	CALL_2
0xc5c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       249	walker.c	FUNCTION_12	WHILE_1	CALL_2
0xc60	          0x4801d0	                            add rax, rdx	       249	walker.c	FUNCTION_12	WHILE_1	CALL_2
0xc63	          0x488b00	                    mov rax, qword [rax]	       249	walker.c	FUNCTION_12	WHILE_1	CALL_2
0xc66	          0x4889c7	                            mov rdi, rax	       249	walker.c	FUNCTION_12	WHILE_1	CALL_2
0xc69	      0xe800000000	                          call 0x4000cae	       249	walker.c	FUNCTION_12	WHILE_1	CALL_2
0xc6e	          0x8b45fc	                mov eax, dword [rbp - 4]	       246	walker.c	FUNCTION_12	WHILE_1
0xc71	          0x8d50ff	                      lea edx, [rax - 1]	       246	walker.c	FUNCTION_12	WHILE_1
0xc74	          0x8955fc	                mov dword [rbp - 4], edx	       246	walker.c	FUNCTION_12	WHILE_1
0xc77	            0x85c0	                           test eax, eax	       246	walker.c	FUNCTION_12	WHILE_1
0xc79	            0x75ae	                           jne 0x4000c69	       246	walker.c	FUNCTION_12	WHILE_1
0xc7b	              0x90	                                     nop	       251	walker.c	FUNCTION_12
0xc7c	              0xc9	                                   leave	       251	walker.c	FUNCTION_12
0xc7d	              0xc3	                                     ret	       251	walker.c	FUNCTION_12
parse_commit	DO,0:CALL,1:WHILE,0:ELSE,0:IF,0:functions,0:SWITCH,0:FOR,0	10
0x1e0	              0x55	                                push rbp	        74	commit.h	FUNCTION_15
0x1e1	          0x4889e5	                            mov rbp, rsp	        74	commit.h	FUNCTION_15
0x1e4	        0x4883ec10	                           sub rsp, 0x10	        74	commit.h	FUNCTION_15
0x1e8	        0x48897df8	                mov qword [rbp - 8], rdi	        74	commit.h	FUNCTION_15
0x1ec	        0x488b45f8	                mov rax, qword [rbp - 8]	        75	commit.h	FUNCTION_15	CALL_1
0x1f0	      0xbe00000000	                              mov esi, 0	        75	commit.h	FUNCTION_15	CALL_1
0x1f5	          0x4889c7	                            mov rdi, rax	        75	commit.h	FUNCTION_15	CALL_1
0x1f8	      0xe800000000	                          call 0x400023d	        75	commit.h	FUNCTION_15	CALL_1
0x1fd	              0xc9	                                   leave	        76	commit.h	FUNCTION_15
0x1fe	              0xc3	                                     ret	        76	commit.h	FUNCTION_15
process_tree	DO,0:CALL,9:WHILE,1:ELSE,1:IF,6:functions,0:SWITCH,0:FOR,0	79
0x385	              0x55	                                push rbp	        35	walker.c	FUNCTION_3
0x386	          0x4889e5	                            mov rbp, rsp	        35	walker.c	FUNCTION_3
0x389	        0x4883c480	             add rsp, 0xffffffffffffff80	        35	walker.c	FUNCTION_3
0x38d	        0x48897d88	             mov qword [rbp - 0x78], rdi	        35	walker.c	FUNCTION_3
0x391	        0x48897580	             mov qword [rbp - 0x80], rsi	        35	walker.c	FUNCTION_3
0x395	    0x64488b042528	                mov rax, qword fs:[0x28]	        35	walker.c	FUNCTION_3
0x39e	        0x488945f8	                mov qword [rbp - 8], rax	        35	walker.c	FUNCTION_3
0x3a2	            0x31c0	                            xor eax, eax	        35	walker.c	FUNCTION_3
0x3a4	        0x488b4580	             mov rax, qword [rbp - 0x80]	        39	walker.c	FUNCTION_3	IF_1	CALL_1
0x3a8	          0x4889c7	                            mov rdi, rax	        39	walker.c	FUNCTION_3	IF_1	CALL_1
0x3ab	      0xe811feffff	                     call sym.parse_tree	        39	walker.c	FUNCTION_3	IF_1	CALL_1
0x3b0	            0x85c0	                           test eax, eax	        39	walker.c	FUNCTION_3	IF_1	CALL_1
0x3b2	            0x740a	                            je 0x40003fe	        39	walker.c	FUNCTION_3	IF_1	CALL_1
0x3b4	      0xb8ffffffff	                     mov eax, 0xffffffff	        40	walker.c	FUNCTION_3	IF_1
0x3b9	      0xe9dd000000	                           jmp 0x40004db	        40	walker.c	FUNCTION_3	IF_1
0x3be	        0x488b4580	             mov rax, qword [rbp - 0x80]	        42	walker.c	FUNCTION_3	CALL_2
0x3c2	        0x488b5020	            mov rdx, qword [rax + 0x20] 	        42	walker.c	FUNCTION_3	CALL_2
0x3c6	        0x488b4580	             mov rax, qword [rbp - 0x80]	        42	walker.c	FUNCTION_3	CALL_2
0x3ca	        0x488b4818	            mov rcx, qword [rax + 0x18] 	        42	walker.c	FUNCTION_3	CALL_2
0x3ce	        0x488d45d0	                   lea rax, [rbp - 0x30]	        42	walker.c	FUNCTION_3	CALL_2
0x3d2	          0x4889ce	                            mov rsi, rcx	        42	walker.c	FUNCTION_3	CALL_2
0x3d5	          0x4889c7	                            mov rdi, rax	        42	walker.c	FUNCTION_3	CALL_2
0x3d8	      0xe800000000	                          call 0x400041d	        42	walker.c	FUNCTION_3	CALL_2
0x3dd	      0xe98d000000	                           jmp 0x40004af	        43	walker.c	FUNCTION_3	WHILE_1	CALL_3
0x3e2	    0x48c745980000	               mov qword [rbp - 0x68], 0	        44	walker.c	FUNCTION_3	WHILE_1
0x3ea	          0x8b45c0	             mov eax, dword [rbp - 0x40]	        47	walker.c	FUNCTION_3	WHILE_1	IF_2	CALL_4
0x3ed	      0x2500f00000	                         and eax, 0xf000	        47	walker.c	FUNCTION_3	WHILE_1	IF_2	CALL_4
0x3f2	      0x3d00e00000	                         cmp eax, 0xe000	        47	walker.c	FUNCTION_3	WHILE_1	IF_2	CALL_4
0x3f7	            0x7502	                           jne 0x400043b	        47	walker.c	FUNCTION_3	WHILE_1	IF_2	CALL_4
0x3f9	            0xeb74	                           jmp 0x40004af	        48	walker.c	FUNCTION_3	WHILE_1	IF_2
0x3fb	          0x8b45c0	             mov eax, dword [rbp - 0x40]	        49	walker.c	FUNCTION_3	WHILE_1	IF_3	CALL_5
0x3fe	      0x2500f00000	                         and eax, 0xf000	        49	walker.c	FUNCTION_3	WHILE_1	IF_3	CALL_5
0x403	      0x3d00400000	                         cmp eax, 0x4000	        49	walker.c	FUNCTION_3	WHILE_1	IF_3	CALL_5
0x408	            0x7521	                           jne 0x400046b	        49	walker.c	FUNCTION_3	WHILE_1	IF_3	CALL_5
0x40a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        50	walker.c	FUNCTION_3	WHILE_1	IF_3	CALL_6
0x40e	          0x4889c7	                            mov rdi, rax	        50	walker.c	FUNCTION_3	WHILE_1	IF_3	CALL_6
0x411	      0xe800000000	                          call 0x4000456	        50	walker.c	FUNCTION_3	WHILE_1	IF_3	CALL_6
0x416	        0x488945a0	             mov qword [rbp - 0x60], rax	        50	walker.c	FUNCTION_3	WHILE_1	IF_3	CALL_6
0x41a	      0x48837da000	               cmp qword [rbp - 0x60], 0	        51	walker.c	FUNCTION_3	WHILE_1	IF_3	IF_4
0x41f	            0x7429	                            je 0x400048a	        51	walker.c	FUNCTION_3	WHILE_1	IF_3	IF_4
0x421	        0x488b45a0	             mov rax, qword [rbp - 0x60]	        52	walker.c	FUNCTION_3	WHILE_1	IF_3	IF_4
0x425	        0x48894598	             mov qword [rbp - 0x68], rax	        52	walker.c	FUNCTION_3	WHILE_1	IF_3	IF_4
0x429	            0xeb1f	                           jmp 0x400048a	        52	walker.c	FUNCTION_3	WHILE_1	IF_3	IF_4
0x42b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        55	walker.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_7
0x42f	          0x4889c7	                            mov rdi, rax	        55	walker.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_7
0x432	      0xe800000000	                          call 0x4000477	        55	walker.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_7
0x437	        0x488945a8	             mov qword [rbp - 0x58], rax	        55	walker.c	FUNCTION_3	WHILE_1	ELSE_1	CALL_7
0x43b	      0x48837da800	               cmp qword [rbp - 0x58], 0	        56	walker.c	FUNCTION_3	WHILE_1	ELSE_1	IF_5
0x440	            0x7408	                            je 0x400048a	        56	walker.c	FUNCTION_3	WHILE_1	ELSE_1	IF_5
0x442	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        57	walker.c	FUNCTION_3	WHILE_1	ELSE_1	IF_5
0x446	        0x48894598	             mov qword [rbp - 0x68], rax	        57	walker.c	FUNCTION_3	WHILE_1	ELSE_1	IF_5
0x44a	      0x48837d9800	               cmp qword [rbp - 0x68], 0	        59	walker.c	FUNCTION_3	WHILE_1	IF_6	CALL_8
0x44f	            0x7417	                            je 0x40004a8	        59	walker.c	FUNCTION_3	WHILE_1	IF_6	CALL_8
0x451	        0x488b5598	             mov rdx, qword [rbp - 0x68]	        59	walker.c	FUNCTION_3	WHILE_1	IF_6	CALL_8
0x455	        0x488b4588	             mov rax, qword [rbp - 0x78]	        59	walker.c	FUNCTION_3	WHILE_1	IF_6	CALL_8
0x459	          0x4889d6	                            mov rsi, rdx	        59	walker.c	FUNCTION_3	WHILE_1	IF_6	CALL_8
0x45c	          0x4889c7	                            mov rdi, rax	        59	walker.c	FUNCTION_3	WHILE_1	IF_6	CALL_8
0x45f	      0xe8d4020000	                        call sym.process	        59	walker.c	FUNCTION_3	WHILE_1	IF_6	CALL_8
0x464	            0x85c0	                           test eax, eax	        59	walker.c	FUNCTION_3	WHILE_1	IF_6	CALL_8
0x466	            0x7407	                            je 0x40004af	        59	walker.c	FUNCTION_3	WHILE_1	IF_6	CALL_8
0x468	      0xb8ffffffff	                     mov eax, 0xffffffff	        60	walker.c	FUNCTION_3	WHILE_1	IF_6
0x46d	            0xeb2c	                           jmp 0x40004db	        60	walker.c	FUNCTION_3	WHILE_1	IF_6
0x46f	        0x488d55b0	                   lea rdx, [rbp - 0x50]	        43	walker.c	FUNCTION_3	WHILE_1	CALL_3
0x473	        0x488d45d0	                   lea rax, [rbp - 0x30]	        43	walker.c	FUNCTION_3	WHILE_1	CALL_3
0x477	          0x4889d6	                            mov rsi, rdx	        43	walker.c	FUNCTION_3	WHILE_1	CALL_3
0x47a	          0x4889c7	                            mov rdi, rax	        43	walker.c	FUNCTION_3	WHILE_1	CALL_3
0x47d	      0xe800000000	                          call 0x40004c2	        43	walker.c	FUNCTION_3	WHILE_1	CALL_3
0x482	            0x85c0	                           test eax, eax	        43	walker.c	FUNCTION_3	WHILE_1	CALL_3
0x484	     0xf8558ffffff	                           jne 0x4000422	        43	walker.c	FUNCTION_3	WHILE_1	CALL_3
0x48a	        0x488b4580	             mov rax, qword [rbp - 0x80]	        62	walker.c	FUNCTION_3	CALL_9
0x48e	          0x4889c7	                            mov rdi, rax	        62	walker.c	FUNCTION_3	CALL_9
0x491	      0xe800000000	                          call 0x40004d6	        62	walker.c	FUNCTION_3	CALL_9
0x496	      0xb800000000	                              mov eax, 0	        63	walker.c	FUNCTION_3
0x49b	        0x488b4df8	                mov rcx, qword [rbp - 8]	        64	walker.c	FUNCTION_3
0x49f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        64	walker.c	FUNCTION_3
0x4a8	            0x7405	                            je 0x40004ef	        64	walker.c	FUNCTION_3
0x4aa	      0xe800000000	                          call 0x40004ef	        64	walker.c	FUNCTION_3
0x4af	              0xc9	                                   leave	        64	walker.c	FUNCTION_3
0x4b0	              0xc3	                                     ret	        64	walker.c	FUNCTION_3
walker_say	DO,0:CALL,3:WHILE,0:ELSE,0:IF,1:functions,0:SWITCH,0:FOR,0	45
0x1ff	              0x55	                                push rbp	        13	walker.c	FUNCTION_1
0x200	          0x4889e5	                            mov rbp, rsp	        13	walker.c	FUNCTION_1
0x203	    0x4881ece00000	                           sub rsp, 0xe0	        13	walker.c	FUNCTION_1
0x20a	    0x4889bd28ffff	             mov qword [rbp - 0xd8], rdi	        13	walker.c	FUNCTION_1
0x211	    0x4889b520ffff	             mov qword [rbp - 0xe0], rsi	        13	walker.c	FUNCTION_1
0x218	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	        13	walker.c	FUNCTION_1
0x21f	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	        13	walker.c	FUNCTION_1
0x226	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	        13	walker.c	FUNCTION_1
0x22d	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	        13	walker.c	FUNCTION_1
0x234	            0x84c0	                             test al, al	        13	walker.c	FUNCTION_1
0x236	            0x7420	                            je 0x4000298	        13	walker.c	FUNCTION_1
0x238	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	        13	walker.c	FUNCTION_1
0x23c	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	        13	walker.c	FUNCTION_1
0x240	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	        13	walker.c	FUNCTION_1
0x244	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	        13	walker.c	FUNCTION_1
0x248	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	        13	walker.c	FUNCTION_1
0x24c	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	        13	walker.c	FUNCTION_1
0x250	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	        13	walker.c	FUNCTION_1
0x254	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	        13	walker.c	FUNCTION_1
0x258	    0x64488b042528	                mov rax, qword fs:[0x28]	        13	walker.c	FUNCTION_1
0x261	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	        13	walker.c	FUNCTION_1
0x268	            0x31c0	                            xor eax, eax	        13	walker.c	FUNCTION_1
0x26a	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	        14	walker.c	FUNCTION_1	IF_1
0x271	          0x8b4028	            mov eax, dword [rax + 0x28] 	        14	walker.c	FUNCTION_1	IF_1
0x274	            0x85c0	                           test eax, eax	        14	walker.c	FUNCTION_1	IF_1
0x276	            0x744d	                            je 0x4000305	        14	walker.c	FUNCTION_1	IF_1
0x278	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x10 	        16	walker.c	FUNCTION_1	IF_1	CALL_1
0x282	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	        16	walker.c	FUNCTION_1	IF_1	CALL_1
0x28c	        0x488d4510	                   lea rax, [rbp + 0x10]	        16	walker.c	FUNCTION_1	IF_1	CALL_1
0x290	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	        16	walker.c	FUNCTION_1	IF_1	CALL_1
0x297	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	        16	walker.c	FUNCTION_1	IF_1	CALL_1
0x29e	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	        16	walker.c	FUNCTION_1	IF_1	CALL_1
0x2a5	    0x488b05000000	            mov rax, qword [0x040002ec] 	        17	walker.c	FUNCTION_1	IF_1	CALL_2
0x2ac	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	        17	walker.c	FUNCTION_1	IF_1	CALL_2
0x2b3	    0x488b8d20ffff	             mov rcx, qword [rbp - 0xe0]	        17	walker.c	FUNCTION_1	IF_1	CALL_2
0x2ba	          0x4889ce	                            mov rsi, rcx	        17	walker.c	FUNCTION_1	IF_1	CALL_2
0x2bd	          0x4889c7	                            mov rdi, rax	        17	walker.c	FUNCTION_1	IF_1	CALL_2
0x2c0	      0xe800000000	                          call 0x4000305	        17	walker.c	FUNCTION_1	IF_1	CALL_2
0x2c5	              0x90	                                     nop	        20	walker.c	FUNCTION_1
0x2c6	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	        20	walker.c	FUNCTION_1
0x2cd	    0x644833042528	                xor rax, qword fs:[0x28]	        20	walker.c	FUNCTION_1
0x2d6	            0x7405	                            je 0x400031d	        20	walker.c	FUNCTION_1
0x2d8	      0xe800000000	                          call 0x400031d	        20	walker.c	FUNCTION_1
0x2dd	              0xc9	                                   leave	        20	walker.c	FUNCTION_1
0x2de	              0xc3	                                     ret	        20	walker.c	FUNCTION_1
interpret_target	DO,0:CALL,7:WHILE,0:ELSE,0:IF,3:functions,0:SWITCH,0:FOR,0	51
0x93a	              0x55	                                push rbp	       188	walker.c	FUNCTION_9
0x93b	          0x4889e5	                            mov rbp, rsp	       188	walker.c	FUNCTION_9
0x93e	        0x4883ec30	                           sub rsp, 0x30	       188	walker.c	FUNCTION_9
0x942	        0x48897de8	             mov qword [rbp - 0x18], rdi	       188	walker.c	FUNCTION_9
0x946	        0x488975e0	             mov qword [rbp - 0x20], rsi	       188	walker.c	FUNCTION_9
0x94a	        0x488955d8	             mov qword [rbp - 0x28], rdx	       188	walker.c	FUNCTION_9
0x94e	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       189	walker.c	FUNCTION_9	IF_1	CALL_1
0x952	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       189	walker.c	FUNCTION_9	IF_1	CALL_1
0x956	          0x4889d6	                            mov rsi, rdx	       189	walker.c	FUNCTION_9	IF_1	CALL_1
0x959	          0x4889c7	                            mov rdi, rax	       189	walker.c	FUNCTION_9	IF_1	CALL_1
0x95c	      0xe800000000	                          call 0x40009a1	       189	walker.c	FUNCTION_9	IF_1	CALL_1
0x961	            0x85c0	                           test eax, eax	       189	walker.c	FUNCTION_9	IF_1	CALL_1
0x963	            0x7507	                           jne 0x40009ac	       189	walker.c	FUNCTION_9	IF_1	CALL_1
0x965	      0xb800000000	                              mov eax, 0	       190	walker.c	FUNCTION_9	IF_1
0x96a	            0xeb7c	                           jmp 0x4000a28	       190	walker.c	FUNCTION_9	IF_1
0x96c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       191	walker.c	FUNCTION_9	IF_2	CALL_2
0x970	      0xbe00000000	                              mov esi, 0	       191	walker.c	FUNCTION_9	IF_2	CALL_2
0x975	          0x4889c7	                            mov rdi, rax	       191	walker.c	FUNCTION_9	IF_2	CALL_2
0x978	      0xe800000000	                          call 0x40009bd	       191	walker.c	FUNCTION_9	IF_2	CALL_2
0x97d	            0x85c0	                           test eax, eax	       191	walker.c	FUNCTION_9	IF_2	CALL_2
0x97f	            0x7562	                           jne 0x4000a23	       191	walker.c	FUNCTION_9	IF_2	CALL_2
0x981	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       192	walker.c	FUNCTION_9	IF_2	CALL_3
0x985	          0x4889c7	                            mov rdi, rax	       192	walker.c	FUNCTION_9	IF_2	CALL_3
0x988	      0xe800000000	                          call 0x40009cd	       192	walker.c	FUNCTION_9	IF_2	CALL_3
0x98d	        0x488945f8	                mov qword [rbp - 8], rax	       192	walker.c	FUNCTION_9	IF_2	CALL_3
0x991	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       193	walker.c	FUNCTION_9	IF_2	IF_3	CALL_4
0x995	        0x488b4008	                mov rax, qword [rax + 8]	       193	walker.c	FUNCTION_9	IF_2	IF_3	CALL_4
0x999	        0x488b4df8	                mov rcx, qword [rbp - 8]	       193	walker.c	FUNCTION_9	IF_2	IF_3	CALL_4
0x99d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       193	walker.c	FUNCTION_9	IF_2	IF_3	CALL_4
0x9a1	          0x4889ce	                            mov rsi, rcx	       193	walker.c	FUNCTION_9	IF_2	IF_3	CALL_4
0x9a4	          0x4889d7	                            mov rdi, rdx	       193	walker.c	FUNCTION_9	IF_2	IF_3	CALL_4
0x9a7	            0xffd0	                                call rax	       193	walker.c	FUNCTION_9	IF_2	IF_3	CALL_4
0x9a9	            0x85c0	                           test eax, eax	       193	walker.c	FUNCTION_9	IF_2	IF_3	CALL_4
0x9ab	            0x752a	                           jne 0x4000a17	       193	walker.c	FUNCTION_9	IF_2	IF_3	CALL_4
0x9ad	        0x488b45f8	                mov rax, qword [rbp - 8]	       194	walker.c	FUNCTION_9	IF_2	IF_3	CALL_5
0x9b1	        0x488d5008	                      lea rdx, [rax + 8]	       194	walker.c	FUNCTION_9	IF_2	IF_3	CALL_5
0x9b5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       194	walker.c	FUNCTION_9	IF_2	IF_3	CALL_5
0x9b9	          0x4889d6	                            mov rsi, rdx	       194	walker.c	FUNCTION_9	IF_2	IF_3	CALL_5
0x9bc	          0x4889c7	                            mov rdi, rax	       194	walker.c	FUNCTION_9	IF_2	IF_3	CALL_5
0x9bf	      0xe8d7f7ffff	                         call sym.oidcpy	       194	walker.c	FUNCTION_9	IF_2	IF_3	CALL_5
0x9c4	        0x488b45f8	                mov rax, qword [rbp - 8]	       195	walker.c	FUNCTION_9	IF_2	IF_3	CALL_6
0x9c8	          0x4889c7	                            mov rdi, rax	       195	walker.c	FUNCTION_9	IF_2	IF_3	CALL_6
0x9cb	      0xe800000000	                          call 0x4000a10	       195	walker.c	FUNCTION_9	IF_2	IF_3	CALL_6
0x9d0	      0xb800000000	                              mov eax, 0	       196	walker.c	FUNCTION_9	IF_2	IF_3
0x9d5	            0xeb11	                           jmp 0x4000a28	       196	walker.c	FUNCTION_9	IF_2	IF_3
0x9d7	        0x488b45f8	                mov rax, qword [rbp - 8]	       198	walker.c	FUNCTION_9	IF_2	CALL_7
0x9db	          0x4889c7	                            mov rdi, rax	       198	walker.c	FUNCTION_9	IF_2	CALL_7
0x9de	      0xe800000000	                          call 0x4000a23	       198	walker.c	FUNCTION_9	IF_2	CALL_7
0x9e3	      0xb8ffffffff	                     mov eax, 0xffffffff	       200	walker.c	FUNCTION_9
0x9e8	              0xc9	                                   leave	       201	walker.c	FUNCTION_9
0x9e9	              0xc3	                                     ret	       201	walker.c	FUNCTION_9
process_tag	DO,0:CALL,2:WHILE,0:ELSE,0:IF,1:functions,0:SWITCH,0:FOR,0	20
0x5e3	              0x55	                                push rbp	       103	walker.c	FUNCTION_5
0x5e4	          0x4889e5	                            mov rbp, rsp	       103	walker.c	FUNCTION_5
0x5e7	        0x4883ec10	                           sub rsp, 0x10	       103	walker.c	FUNCTION_5
0x5eb	        0x48897df8	                mov qword [rbp - 8], rdi	       103	walker.c	FUNCTION_5
0x5ef	        0x488975f0	             mov qword [rbp - 0x10], rsi	       103	walker.c	FUNCTION_5
0x5f3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       104	walker.c	FUNCTION_5	IF_1	CALL_1
0x5f7	          0x4889c7	                            mov rdi, rax	       104	walker.c	FUNCTION_5	IF_1	CALL_1
0x5fa	      0xe800000000	                          call 0x400063f	       104	walker.c	FUNCTION_5	IF_1	CALL_1
0x5ff	            0x85c0	                           test eax, eax	       104	walker.c	FUNCTION_5	IF_1	CALL_1
0x601	            0x7407	                            je 0x400064a	       104	walker.c	FUNCTION_5	IF_1	CALL_1
0x603	      0xb8ffffffff	                     mov eax, 0xffffffff	       105	walker.c	FUNCTION_5	IF_1
0x608	            0xeb17	                           jmp 0x4000661	       105	walker.c	FUNCTION_5	IF_1
0x60a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       106	walker.c	FUNCTION_5	CALL_2
0x60e	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       106	walker.c	FUNCTION_5	CALL_2
0x612	        0x488b45f8	                mov rax, qword [rbp - 8]	       106	walker.c	FUNCTION_5	CALL_2
0x616	          0x4889d6	                            mov rsi, rdx	       106	walker.c	FUNCTION_5	CALL_2
0x619	          0x4889c7	                            mov rdi, rax	       106	walker.c	FUNCTION_5	CALL_2
0x61c	      0xe817010000	                        call sym.process	       106	walker.c	FUNCTION_5	CALL_2
0x621	              0xc9	                                   leave	       107	walker.c	FUNCTION_5
0x622	              0xc3	                                     ret	       107	walker.c	FUNCTION_5
loop	DO,0:CALL,5:WHILE,1:ELSE,0:IF,5:functions,0:SWITCH,0:FOR,0	66
0x843	              0x55	                                push rbp	       159	walker.c	FUNCTION_8
0x844	          0x4889e5	                            mov rbp, rsp	       159	walker.c	FUNCTION_8
0x847	        0x4883ec20	                           sub rsp, 0x20	       159	walker.c	FUNCTION_8
0x84b	        0x48897de8	             mov qword [rbp - 0x18], rdi	       159	walker.c	FUNCTION_8
0x84f	      0xe9cf000000	                           jmp 0x4000963	       162	walker.c	FUNCTION_8	WHILE_1
0x854	    0x488b05000000	            mov rax, qword [0x0400089b] 	       163	walker.c	FUNCTION_8	WHILE_1
0x85b	          0x488b00	                    mov rax, qword [rax]	       163	walker.c	FUNCTION_8	WHILE_1
0x85e	        0x488945f0	             mov qword [rbp - 0x10], rax	       163	walker.c	FUNCTION_8	WHILE_1
0x862	    0x488b05000000	            mov rax, qword [0x040008a9] 	       164	walker.c	FUNCTION_8	WHILE_1
0x869	        0x488945f8	                mov qword [rbp - 8], rax	       164	walker.c	FUNCTION_8	WHILE_1
0x86d	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	walker.c	FUNCTION_8	WHILE_1
0x871	        0x488b4008	                mov rax, qword [rax + 8]	       165	walker.c	FUNCTION_8	WHILE_1
0x875	    0x488905000000	            mov qword [0x040008bc], rax 	       165	walker.c	FUNCTION_8	WHILE_1
0x87c	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	walker.c	FUNCTION_8	WHILE_1	CALL_1
0x880	          0x4889c7	                            mov rdi, rax	       166	walker.c	FUNCTION_8	WHILE_1	CALL_1
0x883	      0xe800000000	                          call 0x40008c8	       166	walker.c	FUNCTION_8	WHILE_1	CALL_1
0x888	    0x488b05000000	            mov rax, qword [0x040008cf] 	       167	walker.c	FUNCTION_8	WHILE_1	IF_1
0x88f	          0x4885c0	                           test rax, rax	       167	walker.c	FUNCTION_8	WHILE_1	IF_1
0x892	            0x750b	                           jne 0x40008df	       167	walker.c	FUNCTION_8	WHILE_1	IF_1
0x894	    0x48c705000000	               mov qword [0x040008df], 0	       168	walker.c	FUNCTION_8	WHILE_1	IF_1
0x89f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       173	walker.c	FUNCTION_8	WHILE_1	IF_2
0x8a3	            0x8b00	                    mov eax, dword [rax]	       173	walker.c	FUNCTION_8	WHILE_1	IF_2
0x8a5	          0xc1e804	                              shr eax, 4	       173	walker.c	FUNCTION_8	WHILE_1	IF_2
0x8a8	      0x25ffffff07	                      and eax, 0x7ffffff	       173	walker.c	FUNCTION_8	WHILE_1	IF_2
0x8ad	          0x83e004	                              and eax, 4	       173	walker.c	FUNCTION_8	WHILE_1	IF_2
0x8b0	            0x85c0	                           test eax, eax	       173	walker.c	FUNCTION_8	WHILE_1	IF_2
0x8b2	            0x7533	                           jne 0x4000927	       173	walker.c	FUNCTION_8	WHILE_1	IF_2
0x8b4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       174	walker.c	FUNCTION_8	WHILE_1	IF_2	IF_3	CALL_2
0x8b8	        0x488b4018	            mov rax, qword [rax + 0x18] 	       174	walker.c	FUNCTION_8	WHILE_1	IF_2	IF_3	CALL_2
0x8bc	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       174	walker.c	FUNCTION_8	WHILE_1	IF_2	IF_3	CALL_2
0x8c0	        0x488d4a04	                      lea rcx, [rdx + 4]	       174	walker.c	FUNCTION_8	WHILE_1	IF_2	IF_3	CALL_2
0x8c4	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       174	walker.c	FUNCTION_8	WHILE_1	IF_2	IF_3	CALL_2
0x8c8	          0x4889ce	                            mov rsi, rcx	       174	walker.c	FUNCTION_8	WHILE_1	IF_2	IF_3	CALL_2
0x8cb	          0x4889d7	                            mov rdi, rdx	       174	walker.c	FUNCTION_8	WHILE_1	IF_2	IF_3	CALL_2
0x8ce	            0xffd0	                                call rax	       174	walker.c	FUNCTION_8	WHILE_1	IF_2	IF_3	CALL_2
0x8d0	            0x85c0	                           test eax, eax	       174	walker.c	FUNCTION_8	WHILE_1	IF_2	IF_3	CALL_2
0x8d2	            0x7413	                            je 0x4000927	       174	walker.c	FUNCTION_8	WHILE_1	IF_2	IF_3	CALL_2
0x8d4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       175	walker.c	FUNCTION_8	WHILE_1	IF_2	IF_3	CALL_3
0x8d8	          0x4889c7	                            mov rdi, rax	       175	walker.c	FUNCTION_8	WHILE_1	IF_2	IF_3	CALL_3
0x8db	      0xe8fff9ffff	                 call sym.report_missing	       175	walker.c	FUNCTION_8	WHILE_1	IF_2	IF_3	CALL_3
0x8e0	      0xb8ffffffff	                     mov eax, 0xffffffff	       176	walker.c	FUNCTION_8	WHILE_1	IF_2	IF_3
0x8e5	            0xeb51	                           jmp 0x4000978	       176	walker.c	FUNCTION_8	WHILE_1	IF_2	IF_3
0x8e7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       179	walker.c	FUNCTION_8	WHILE_1	IF_4
0x8eb	           0xfb600	                   movzx eax, byte [rax]	       179	walker.c	FUNCTION_8	WHILE_1	IF_4
0x8ee	          0x83e00e	                            and eax, 0xe	       179	walker.c	FUNCTION_8	WHILE_1	IF_4
0x8f1	            0x84c0	                             test al, al	       179	walker.c	FUNCTION_8	WHILE_1	IF_4
0x8f3	            0x7510	                           jne 0x4000945	       179	walker.c	FUNCTION_8	WHILE_1	IF_4
0x8f5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       180	walker.c	FUNCTION_8	WHILE_1	CALL_4
0x8f9	        0x4883c004	                              add rax, 4	       180	walker.c	FUNCTION_8	WHILE_1	CALL_4
0x8fd	          0x4889c7	                            mov rdi, rax	       180	walker.c	FUNCTION_8	WHILE_1	CALL_4
0x900	      0xe800000000	                          call 0x4000945	       180	walker.c	FUNCTION_8	WHILE_1	CALL_4
0x905	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       181	walker.c	FUNCTION_8	WHILE_1	IF_5	CALL_5
0x909	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       181	walker.c	FUNCTION_8	WHILE_1	IF_5	CALL_5
0x90d	          0x4889d6	                            mov rsi, rdx	       181	walker.c	FUNCTION_8	WHILE_1	IF_5	CALL_5
0x910	          0x4889c7	                            mov rdi, rax	       181	walker.c	FUNCTION_8	WHILE_1	IF_5	CALL_5
0x913	      0xe80bfdffff	                 call sym.process_object	       181	walker.c	FUNCTION_8	WHILE_1	IF_5	CALL_5
0x918	            0x85c0	                           test eax, eax	       181	walker.c	FUNCTION_8	WHILE_1	IF_5	CALL_5
0x91a	            0x7407	                            je 0x4000963	       181	walker.c	FUNCTION_8	WHILE_1	IF_5	CALL_5
0x91c	      0xb8ffffffff	                     mov eax, 0xffffffff	       182	walker.c	FUNCTION_8	WHILE_1	IF_5
0x921	            0xeb15	                           jmp 0x4000978	       182	walker.c	FUNCTION_8	WHILE_1	IF_5
0x923	    0x488b05000000	            mov rax, qword [0x0400096a] 	       162	walker.c	FUNCTION_8	WHILE_1
0x92a	          0x4885c0	                           test rax, rax	       162	walker.c	FUNCTION_8	WHILE_1
0x92d	     0xf8521ffffff	                           jne 0x4000894	       162	walker.c	FUNCTION_8	WHILE_1
0x933	      0xb800000000	                              mov eax, 0	       184	walker.c	FUNCTION_8
0x938	              0xc9	                                   leave	       185	walker.c	FUNCTION_8
0x939	              0xc3	                                     ret	       185	walker.c	FUNCTION_8
xstrdup_or_null	DO,0:CALL,1:WHILE,0:ELSE,0:IF,0:functions,0:SWITCH,0:FOR,0	13
0x5d	              0x55	                                push rbp	       923	git-compat-util.h	FUNCTION_45
0x5e	          0x4889e5	                            mov rbp, rsp	       923	git-compat-util.h	FUNCTION_45
0x61	        0x4883ec10	                           sub rsp, 0x10	       923	git-compat-util.h	FUNCTION_45
0x65	        0x48897df8	                mov qword [rbp - 8], rdi	       923	git-compat-util.h	FUNCTION_45
0x69	      0x48837df800	                  cmp qword [rbp - 8], 0	       924	git-compat-util.h	FUNCTION_45	CALL_1
0x6e	            0x740e	                            je 0x40000be	       924	git-compat-util.h	FUNCTION_45	CALL_1
0x70	        0x488b45f8	                mov rax, qword [rbp - 8]	       924	git-compat-util.h	FUNCTION_45	CALL_1
0x74	          0x4889c7	                            mov rdi, rax	       924	git-compat-util.h	FUNCTION_45	CALL_1
0x77	      0xe800000000	                          call 0x40000bc	       924	git-compat-util.h	FUNCTION_45	CALL_1
0x7c	            0xeb05	                           jmp 0x40000c3	       924	git-compat-util.h	FUNCTION_45	CALL_1
0x7e	      0xb800000000	                              mov eax, 0	       924	git-compat-util.h	FUNCTION_45	CALL_1
0x83	              0xc9	                                   leave	       925	git-compat-util.h	FUNCTION_45
0x84	              0xc3	                                     ret	       925	git-compat-util.h	FUNCTION_45
st_mult	DO,0:CALL,2:WHILE,0:ELSE,0:IF,1:functions,0:SWITCH,0:FOR,0	22
0xb	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_41
0xc	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_41
0xf	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_41
0x13	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_41
0x17	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_41
0x1b	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_41	IF_1	CALL_1
0x20	            0x7430	                            je 0x4000092	       795	git-compat-util.h	FUNCTION_41	IF_1	CALL_1
0x22	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_41	IF_1	CALL_1
0x29	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_41	IF_1	CALL_1
0x2e	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_41	IF_1	CALL_1
0x32	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_41	IF_1	CALL_1
0x36	            0x731a	                           jae 0x4000092	       795	git-compat-util.h	FUNCTION_41	IF_1	CALL_1
0x38	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_41	IF_1	CALL_2
0x3c	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_41	IF_1	CALL_2
0x40	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_41	IF_1	CALL_2
0x43	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_41	IF_1	CALL_2
0x48	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_41	IF_1	CALL_2
0x4d	      0xe800000000	                          call 0x4000092	       796	git-compat-util.h	FUNCTION_41	IF_1	CALL_2
0x52	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_41
0x56	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_41
0x5b	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_41
0x5c	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_41
walker_fetch	DO,0:CALL,22:WHILE,0:ELSE,1:IF,11:functions,0:SWITCH,0:FOR,2	236
0xc7e	              0x55	                                push rbp	       255	walker.c	FUNCTION_13
0xc7f	          0x4889e5	                            mov rbp, rsp	       255	walker.c	FUNCTION_13
0xc82	    0x4881ec900000	                           sub rsp, 0x90	       255	walker.c	FUNCTION_13
0xc89	        0x48897d98	             mov qword [rbp - 0x68], rdi	       255	walker.c	FUNCTION_13
0xc8d	          0x897594	             mov dword [rbp - 0x6c], esi	       255	walker.c	FUNCTION_13
0xc90	        0x48895588	             mov qword [rbp - 0x78], rdx	       255	walker.c	FUNCTION_13
0xc94	        0x48894d80	             mov qword [rbp - 0x80], rcx	       255	walker.c	FUNCTION_13
0xc98	    0x4c898578ffff	              mov qword [rbp - 0x88], r8	       255	walker.c	FUNCTION_13
0xc9f	    0x64488b042528	                mov rax, qword fs:[0x28]	       255	walker.c	FUNCTION_13
0xca8	        0x488945f8	                mov qword [rbp - 8], rax	       255	walker.c	FUNCTION_13
0xcac	            0x31c0	                            xor eax, eax	       255	walker.c	FUNCTION_13
0xcae	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       256	walker.c	FUNCTION_13
0xcb6	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       256	walker.c	FUNCTION_13
0xcbe	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       256	walker.c	FUNCTION_13
0xcc6	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       257	walker.c	FUNCTION_13
0xcce	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       257	walker.c	FUNCTION_13
0xcd6	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       257	walker.c	FUNCTION_13
0xcde	    0x48c745a80000	               mov qword [rbp - 0x58], 0	       258	walker.c	FUNCTION_13
0xce6	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       259	walker.c	FUNCTION_13	CALL_1
0xce9	          0x4863d0	                         movsxd rdx, eax	       259	walker.c	FUNCTION_13	CALL_1
0xcec	          0x4889d0	                            mov rax, rdx	       259	walker.c	FUNCTION_13	CALL_1
0xcef	        0x48c1e002	                              shl rax, 2	       259	walker.c	FUNCTION_13	CALL_1
0xcf3	          0x4801d0	                            add rax, rdx	       259	walker.c	FUNCTION_13	CALL_1
0xcf6	        0x48c1e002	                              shl rax, 2	       259	walker.c	FUNCTION_13	CALL_1
0xcfa	          0x4889c7	                            mov rdi, rax	       259	walker.c	FUNCTION_13	CALL_1
0xcfd	      0xe800000000	                          call 0x4000d42	       259	walker.c	FUNCTION_13	CALL_1
0xd02	        0x488945b8	             mov qword [rbp - 0x48], rax	       259	walker.c	FUNCTION_13	CALL_1
0xd06	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       260	walker.c	FUNCTION_13
0xd0e	    0xc745a4ffffff	     mov dword [rbp - 0x5c], 0xffffffff 	       261	walker.c	FUNCTION_13
0xd15	    0xc70500000000	               mov dword [0x04000d5f], 0	       263	walker.c	FUNCTION_13
0xd1f	      0x48837d8000	               cmp qword [rbp - 0x80], 0	       265	walker.c	FUNCTION_13	IF_1
0xd24	            0x7437	                            je 0x4000d9d	       265	walker.c	FUNCTION_13	IF_1
0xd26	        0x488d45e0	                   lea rax, [rbp - 0x20]	       266	walker.c	FUNCTION_13	IF_1	CALL_2
0xd2a	          0x4889c7	                            mov rdi, rax	       266	walker.c	FUNCTION_13	IF_1	CALL_2
0xd2d	      0xe800000000	                          call 0x4000d72	       266	walker.c	FUNCTION_13	IF_1	CALL_2
0xd32	        0x488945a8	             mov qword [rbp - 0x58], rax	       266	walker.c	FUNCTION_13	IF_1	CALL_2
0xd36	      0x48837da800	               cmp qword [rbp - 0x58], 0	       267	walker.c	FUNCTION_13	IF_1	IF_2
0xd3b	            0x7520	                           jne 0x4000d9d	       267	walker.c	FUNCTION_13	IF_1	IF_2
0xd3d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       268	walker.c	FUNCTION_13	IF_1	IF_2	CALL_3
0xd41	          0x4889c6	                            mov rsi, rax	       268	walker.c	FUNCTION_13	IF_1	IF_2	CALL_3
0xd44	      0xbf00000000	                              mov edi, 0	       268	walker.c	FUNCTION_13	IF_1	IF_2	CALL_3
0xd49	      0xb800000000	                              mov eax, 0	       268	walker.c	FUNCTION_13	IF_1	IF_2	CALL_3
0xd4e	      0xe800000000	                          call 0x4000d93	       268	walker.c	FUNCTION_13	IF_1	IF_2	CALL_3
0xd53	      0xe8a8f2ffff	                    call sym.const_error	       268	walker.c	FUNCTION_13	IF_1	IF_2	CALL_3
0xd58	      0xe98f020000	                           jmp 0x400102c	       269	walker.c	FUNCTION_13	IF_1	IF_2
0xd5d	        0x488b4598	             mov rax, qword [rbp - 0x68]	       273	walker.c	FUNCTION_13	IF_3
0xd61	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       273	walker.c	FUNCTION_13	IF_3
0xd64	            0x85c0	                           test eax, eax	       273	walker.c	FUNCTION_13	IF_3
0xd66	            0x7519	                           jne 0x4000dc1	       273	walker.c	FUNCTION_13	IF_3
0xd68	      0xbe00000000	                              mov esi, 0	       274	walker.c	FUNCTION_13	IF_3	CALL_4
0xd6d	      0xbf00000000	                              mov edi, 0	       274	walker.c	FUNCTION_13	IF_3	CALL_4
0xd72	      0xe800000000	                          call 0x4000db7	       274	walker.c	FUNCTION_13	IF_3	CALL_4
0xd77	      0xbf00000000	                              mov edi, 0	       275	walker.c	FUNCTION_13	IF_3	CALL_5
0xd7c	      0xe800000000	                          call 0x4000dc1	       275	walker.c	FUNCTION_13	IF_3	CALL_5
0xd81	    0xc745a0000000	               mov dword [rbp - 0x60], 0	       278	walker.c	FUNCTION_13	FOR_1
0xd88	      0xe9bf000000	                           jmp 0x4000e8c	       278	walker.c	FUNCTION_13	FOR_1
0xd8d	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       279	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_6
0xd90	          0x4863d0	                         movsxd rdx, eax	       279	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_6
0xd93	          0x4889d0	                            mov rax, rdx	       279	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_6
0xd96	        0x48c1e002	                              shl rax, 2	       279	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_6
0xd9a	          0x4801d0	                            add rax, rdx	       279	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_6
0xd9d	        0x48c1e002	                              shl rax, 2	       279	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_6
0xda1	          0x4889c2	                            mov rdx, rax	       279	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_6
0xda4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       279	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_6
0xda8	          0x4801c2	                            add rdx, rax	       279	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_6
0xdab	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       279	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_6
0xdae	            0x4898	                                    cdqe	       279	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_6
0xdb0	    0x488d0cc50000	                        lea rcx, [rax*8]	       279	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_6
0xdb8	        0x488b4588	             mov rax, qword [rbp - 0x78]	       279	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_6
0xdbc	          0x4801c8	                            add rax, rcx	       279	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_6
0xdbf	          0x488b08	                    mov rcx, qword [rax]	       279	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_6
0xdc2	        0x488b4598	             mov rax, qword [rbp - 0x68]	       279	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_6
0xdc6	          0x4889ce	                            mov rsi, rcx	       279	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_6
0xdc9	          0x4889c7	                            mov rdi, rax	       279	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_6
0xdcc	      0xe869fbffff	               call sym.interpret_target	       279	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_6
0xdd1	            0x85c0	                           test eax, eax	       279	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_6
0xdd3	            0x7433	                            je 0x4000e48	       279	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_6
0xdd5	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       280	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_7
0xdd8	            0x4898	                                    cdqe	       280	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_7
0xdda	    0x488d14c50000	                        lea rdx, [rax*8]	       280	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_7
0xde2	        0x488b4588	             mov rax, qword [rbp - 0x78]	       280	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_7
0xde6	          0x4801d0	                            add rax, rdx	       280	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_7
0xde9	          0x488b00	                    mov rax, qword [rax]	       280	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_7
0xdec	          0x4889c6	                            mov rsi, rax	       280	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_7
0xdef	      0xbf00000000	                              mov edi, 0	       280	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_7
0xdf4	      0xb800000000	                              mov eax, 0	       280	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_7
0xdf9	      0xe800000000	                          call 0x4000e3e	       280	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_7
0xdfe	      0xe8fdf1ffff	                    call sym.const_error	       280	walker.c	FUNCTION_13	FOR_1	IF_4	CALL_7
0xe03	      0xe9e4010000	                           jmp 0x400102c	       281	walker.c	FUNCTION_13	FOR_1	IF_4
0xe08	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_9
0xe0b	          0x4863d0	                         movsxd rdx, eax	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_9
0xe0e	          0x4889d0	                            mov rax, rdx	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_9
0xe11	        0x48c1e002	                              shl rax, 2	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_9
0xe15	          0x4801d0	                            add rax, rdx	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_9
0xe18	        0x48c1e002	                              shl rax, 2	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_9
0xe1c	          0x4889c2	                            mov rdx, rax	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_9
0xe1f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_9
0xe23	          0x4801d0	                            add rax, rdx	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_9
0xe26	          0x4889c7	                            mov rdi, rax	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_9
0xe29	      0xe800000000	                          call 0x4000e6e	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_9
0xe2e	          0x4889c2	                            mov rdx, rax	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_9
0xe31	        0x488b4598	             mov rax, qword [rbp - 0x68]	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_9
0xe35	          0x4889d6	                            mov rsi, rdx	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_9
0xe38	          0x4889c7	                            mov rdi, rax	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_9
0xe3b	      0xe8f8f8ffff	                        call sym.process	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_9
0xe40	            0x85c0	                           test eax, eax	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_9
0xe42	     0xf85a0010000	                           jne 0x4001028	       283	walker.c	FUNCTION_13	FOR_1	IF_5	CALL_9
0xe48	        0x8345a001	               add dword [rbp - 0x60], 1	       278	walker.c	FUNCTION_13	FOR_1
0xe4c	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       278	walker.c	FUNCTION_13	FOR_1
0xe4f	          0x3b4594	             cmp eax, dword [rbp - 0x6c]	       278	walker.c	FUNCTION_13	FOR_1
0xe52	     0xf8c35ffffff	                            jl 0x4000dcd	       278	walker.c	FUNCTION_13	FOR_1
0xe58	        0x488b4598	             mov rax, qword [rbp - 0x68]	       287	walker.c	FUNCTION_13	IF_6	CALL_10
0xe5c	          0x4889c7	                            mov rdi, rax	       287	walker.c	FUNCTION_13	IF_6	CALL_10
0xe5f	      0xe8dff9ffff	                           call sym.loop	       287	walker.c	FUNCTION_13	IF_6	CALL_10
0xe64	            0x85c0	                           test eax, eax	       287	walker.c	FUNCTION_13	IF_6	CALL_10
0xe66	     0xf857f010000	                           jne 0x400102b	       287	walker.c	FUNCTION_13	IF_6	CALL_10
0xe6c	      0x48837d8000	               cmp qword [rbp - 0x80], 0	       289	walker.c	FUNCTION_13	IF_7
0xe71	            0x750c	                           jne 0x4000ebf	       289	walker.c	FUNCTION_13	IF_7
0xe73	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	       290	walker.c	FUNCTION_13	IF_7
0xe7a	      0xe96d010000	                           jmp 0x400102c	       291	walker.c	FUNCTION_13	IF_7
0xe7f	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	       293	walker.c	FUNCTION_13	IF_8
0xe87	            0x741f	                            je 0x4000ee8	       293	walker.c	FUNCTION_13	IF_8
0xe89	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       294	walker.c	FUNCTION_13	IF_8	CALL_11
0xe90	          0x4889c6	                            mov rsi, rax	       294	walker.c	FUNCTION_13	IF_8	CALL_11
0xe93	      0xbf00000000	                              mov edi, 0	       294	walker.c	FUNCTION_13	IF_8	CALL_11
0xe98	      0xb800000000	                              mov eax, 0	       294	walker.c	FUNCTION_13	IF_8	CALL_11
0xe9d	      0xe800000000	                          call 0x4000ee2	       294	walker.c	FUNCTION_13	IF_8	CALL_11
0xea2	        0x488945b0	             mov qword [rbp - 0x50], rax	       294	walker.c	FUNCTION_13	IF_8	CALL_11
0xea6	            0xeb08	                           jmp 0x4000ef0	       294	walker.c	FUNCTION_13	IF_8	CALL_11
0xea8	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       296	walker.c	FUNCTION_13	ELSE_1
0xeb0	    0xc745a0000000	               mov dword [rbp - 0x60], 0	       298	walker.c	FUNCTION_13	FOR_2
0xeb7	      0xe9e3000000	                           jmp 0x4000fdf	       298	walker.c	FUNCTION_13	FOR_2
0xebc	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       299	walker.c	FUNCTION_13	FOR_2	IF_9
0xebf	            0x4898	                                    cdqe	       299	walker.c	FUNCTION_13	FOR_2	IF_9
0xec1	    0x488d14c50000	                        lea rdx, [rax*8]	       299	walker.c	FUNCTION_13	FOR_2	IF_9
0xec9	        0x488b4580	             mov rax, qword [rbp - 0x80]	       299	walker.c	FUNCTION_13	FOR_2	IF_9
0xecd	          0x4801d0	                            add rax, rdx	       299	walker.c	FUNCTION_13	FOR_2	IF_9
0xed0	          0x488b00	                    mov rax, qword [rax]	       299	walker.c	FUNCTION_13	FOR_2	IF_9
0xed3	          0x4885c0	                           test rax, rax	       299	walker.c	FUNCTION_13	FOR_2	IF_9
0xed6	     0xf84be000000	                            je 0x4000fda	       299	walker.c	FUNCTION_13	FOR_2	IF_9
0xedc	        0x488d45c0	                   lea rax, [rbp - 0x40]	       301	walker.c	FUNCTION_13	FOR_2	CALL_12
0xee0	      0xbe00000000	                              mov esi, 0	       301	walker.c	FUNCTION_13	FOR_2	CALL_12
0xee5	          0x4889c7	                            mov rdi, rax	       301	walker.c	FUNCTION_13	FOR_2	CALL_12
0xee8	      0xe898f1ffff	                  call sym.strbuf_setlen	       301	walker.c	FUNCTION_13	FOR_2	CALL_12
0xeed	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       302	walker.c	FUNCTION_13	FOR_2	CALL_13
0xef0	            0x4898	                                    cdqe	       302	walker.c	FUNCTION_13	FOR_2	CALL_13
0xef2	    0x488d14c50000	                        lea rdx, [rax*8]	       302	walker.c	FUNCTION_13	FOR_2	CALL_13
0xefa	        0x488b4580	             mov rax, qword [rbp - 0x80]	       302	walker.c	FUNCTION_13	FOR_2	CALL_13
0xefe	          0x4801d0	                            add rax, rdx	       302	walker.c	FUNCTION_13	FOR_2	CALL_13
0xf01	          0x488b10	                    mov rdx, qword [rax]	       302	walker.c	FUNCTION_13	FOR_2	CALL_13
0xf04	        0x488d45c0	                   lea rax, [rbp - 0x40]	       302	walker.c	FUNCTION_13	FOR_2	CALL_13
0xf08	      0xbe00000000	                              mov esi, 0	       302	walker.c	FUNCTION_13	FOR_2	CALL_13
0xf0d	          0x4889c7	                            mov rdi, rax	       302	walker.c	FUNCTION_13	FOR_2	CALL_13
0xf10	      0xb800000000	                              mov eax, 0	       302	walker.c	FUNCTION_13	FOR_2	CALL_13
0xf15	      0xe800000000	                          call 0x4000f5a	       302	walker.c	FUNCTION_13	FOR_2	CALL_13
0xf1a	      0x48837db000	               cmp qword [rbp - 0x50], 0	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_14
0xf1f	            0x7406	                            je 0x4000f67	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_14
0xf21	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_14
0xf25	            0xeb05	                           jmp 0x4000f6c	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_14
0xf27	      0xb900000000	                              mov ecx, 0	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_14
0xf2c	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_14
0xf2f	          0x4863d0	                         movsxd rdx, eax	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_14
0xf32	          0x4889d0	                            mov rax, rdx	       304	walker.c	FUNCTION_13	FOR_2	IF_10
0xf35	        0x48c1e002	                              shl rax, 2	       304	walker.c	FUNCTION_13	FOR_2	IF_10
0xf39	          0x4801d0	                            add rax, rdx	       304	walker.c	FUNCTION_13	FOR_2	IF_10
0xf3c	        0x48c1e002	                              shl rax, 2	       304	walker.c	FUNCTION_13	FOR_2	IF_10
0xf40	          0x4889c2	                            mov rdx, rax	       304	walker.c	FUNCTION_13	FOR_2	IF_10
0xf43	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_14
0xf47	        0x488d3c02	                    lea rdi, [rdx + rax]	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_14
0xf4b	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_14
0xf4f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_14
0xf53	        0x4883ec08	                              sub rsp, 8	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_14
0xf57	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_14
0xf5b	              0x52	                                push rdx	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_14
0xf5c	          0x4989c9	                             mov r9, rcx	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_14
0xf5f	    0x41b800000000	                              mov r8d, 0	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_14
0xf65	      0xb900000000	                              mov ecx, 0	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_14
0xf6a	          0x4889fa	                            mov rdx, rdi	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_14
0xf6d	          0x4889c7	                            mov rdi, rax	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_14
0xf70	      0xe800000000	                          call 0x4000fb5	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_14
0xf75	        0x4883c410	                           add rsp, 0x10	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_14
0xf79	            0x85c0	                           test eax, eax	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_14
0xf7b	            0x741e	                            je 0x4000fdb	       303	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_14
0xf7d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       307	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_15
0xf81	          0x4889c6	                            mov rsi, rax	       307	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_15
0xf84	      0xbf00000000	                              mov edi, 0	       307	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_15
0xf89	      0xb800000000	                              mov eax, 0	       307	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_15
0xf8e	      0xe800000000	                          call 0x4000fd3	       307	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_15
0xf93	      0xe868f0ffff	                    call sym.const_error	       307	walker.c	FUNCTION_13	FOR_2	IF_10	CALL_15
0xf98	            0xeb52	                           jmp 0x400102c	       308	walker.c	FUNCTION_13	FOR_2	IF_10
0xf9a	              0x90	                                     nop	       300	walker.c	FUNCTION_13	FOR_2	IF_9
0xf9b	        0x8345a001	               add dword [rbp - 0x60], 1	       298	walker.c	FUNCTION_13	FOR_2
0xf9f	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       298	walker.c	FUNCTION_13	FOR_2
0xfa2	          0x3b4594	             cmp eax, dword [rbp - 0x6c]	       298	walker.c	FUNCTION_13	FOR_2
0xfa5	     0xf8c11ffffff	                            jl 0x4000efc	       298	walker.c	FUNCTION_13	FOR_2
0xfab	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       311	walker.c	FUNCTION_13	IF_11	CALL_16
0xfaf	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       311	walker.c	FUNCTION_13	IF_11	CALL_16
0xfb3	          0x4889d6	                            mov rsi, rdx	       311	walker.c	FUNCTION_13	IF_11	CALL_16
0xfb6	          0x4889c7	                            mov rdi, rax	       311	walker.c	FUNCTION_13	IF_11	CALL_16
0xfb9	      0xe800000000	                          call 0x4000ffe	       311	walker.c	FUNCTION_13	IF_11	CALL_16
0xfbe	            0x85c0	                           test eax, eax	       311	walker.c	FUNCTION_13	IF_11	CALL_16
0xfc0	            0x741d	                            je 0x400101f	       311	walker.c	FUNCTION_13	IF_11	CALL_16
0xfc2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       312	walker.c	FUNCTION_13	IF_11	CALL_17
0xfc6	          0x4889c6	                            mov rsi, rax	       312	walker.c	FUNCTION_13	IF_11	CALL_17
0xfc9	      0xbf00000000	                              mov edi, 0	       312	walker.c	FUNCTION_13	IF_11	CALL_17
0xfce	      0xb800000000	                              mov eax, 0	       312	walker.c	FUNCTION_13	IF_11	CALL_17
0xfd3	      0xe800000000	                          call 0x4001018	       312	walker.c	FUNCTION_13	IF_11	CALL_17
0xfd8	      0xe823f0ffff	                    call sym.const_error	       312	walker.c	FUNCTION_13	IF_11	CALL_17
0xfdd	            0xeb0d	                           jmp 0x400102c	       313	walker.c	FUNCTION_13	IF_11
0xfdf	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	       316	walker.c	FUNCTION_13
0xfe6	            0xeb04	                           jmp 0x400102c	       316	walker.c	FUNCTION_13
0xfe8	              0x90	                                     nop	       284	walker.c	FUNCTION_13	FOR_1	IF_5
0xfe9	            0xeb01	                           jmp 0x400102c	       284	walker.c	FUNCTION_13	FOR_1	IF_5
0xfeb	              0x90	                                     nop	       288	walker.c	FUNCTION_13	IF_6
0xfec	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       319	walker.c	FUNCTION_13	CALL_18
0xff0	          0x4889c7	                            mov rdi, rax	       319	walker.c	FUNCTION_13	CALL_18
0xff3	      0xe800000000	                          call 0x4001038	       319	walker.c	FUNCTION_13	CALL_18
0xff8	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       320	walker.c	FUNCTION_13	CALL_19
0xffc	          0x4889c7	                            mov rdi, rax	       320	walker.c	FUNCTION_13	CALL_19
0xfff	      0xe800000000	                          call 0x4001044	       320	walker.c	FUNCTION_13	CALL_19
0x1004	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       321	walker.c	FUNCTION_13	CALL_20
0x1008	          0x4889c7	                            mov rdi, rax	       321	walker.c	FUNCTION_13	CALL_20
0x100b	      0xe800000000	                          call 0x4001050	       321	walker.c	FUNCTION_13	CALL_20
0x1010	        0x488d45e0	                   lea rax, [rbp - 0x20]	       322	walker.c	FUNCTION_13	CALL_21
0x1014	          0x4889c7	                            mov rdi, rax	       322	walker.c	FUNCTION_13	CALL_21
0x1017	      0xe800000000	                          call 0x400105c	       322	walker.c	FUNCTION_13	CALL_21
0x101c	        0x488d45c0	                   lea rax, [rbp - 0x40]	       323	walker.c	FUNCTION_13	CALL_22
0x1020	          0x4889c7	                            mov rdi, rax	       323	walker.c	FUNCTION_13	CALL_22
0x1023	      0xe800000000	                          call 0x4001068	       323	walker.c	FUNCTION_13	CALL_22
0x1028	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       324	walker.c	FUNCTION_13
0x102b	        0x488b4df8	                mov rcx, qword [rbp - 8]	       325	walker.c	FUNCTION_13
0x102f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       325	walker.c	FUNCTION_13
0x1038	            0x7405	                            je 0x400107f	       325	walker.c	FUNCTION_13
0x103a	      0xe800000000	                          call 0x400107f	       325	walker.c	FUNCTION_13
0x103f	              0xc9	                                   leave	       325	walker.c	FUNCTION_13
0x1040	              0xc3	                                     ret	       325	walker.c	FUNCTION_13
mark_complete	DO,0:CALL,2:WHILE,0:ELSE,0:IF,1:functions,0:SWITCH,0:FOR,0	35
0x9ea	              0x55	                                push rbp	       205	walker.c	FUNCTION_10
0x9eb	          0x4889e5	                            mov rbp, rsp	       205	walker.c	FUNCTION_10
0x9ee	        0x4883ec30	                           sub rsp, 0x30	       205	walker.c	FUNCTION_10
0x9f2	        0x48897de8	             mov qword [rbp - 0x18], rdi	       205	walker.c	FUNCTION_10
0x9f6	        0x488975e0	             mov qword [rbp - 0x20], rsi	       205	walker.c	FUNCTION_10
0x9fa	          0x8955dc	             mov dword [rbp - 0x24], edx	       205	walker.c	FUNCTION_10
0x9fd	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       205	walker.c	FUNCTION_10
0xa01	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       206	walker.c	FUNCTION_10	CALL_1
0xa05	      0xbe01000000	                              mov esi, 1	       206	walker.c	FUNCTION_10	CALL_1
0xa0a	          0x4889c7	                            mov rdi, rax	       206	walker.c	FUNCTION_10	CALL_1
0xa0d	      0xe800000000	                          call 0x4000a52	       206	walker.c	FUNCTION_10	CALL_1
0xa12	        0x488945f8	                mov qword [rbp - 8], rax	       206	walker.c	FUNCTION_10	CALL_1
0xa16	      0x48837df800	                  cmp qword [rbp - 8], 0	       208	walker.c	FUNCTION_10	IF_1
0xa1b	            0x743f	                            je 0x4000a9c	       208	walker.c	FUNCTION_10	IF_1
0xa1d	        0x488b45f8	                mov rax, qword [rbp - 8]	       209	walker.c	FUNCTION_10	IF_1
0xa21	            0x8b00	                    mov eax, dword [rax]	       209	walker.c	FUNCTION_10	IF_1
0xa23	          0xc1e804	                              shr eax, 4	       209	walker.c	FUNCTION_10	IF_1
0xa26	      0x25ffffff07	                      and eax, 0x7ffffff	       209	walker.c	FUNCTION_10	IF_1
0xa2b	          0x83c801	                               or eax, 1	       209	walker.c	FUNCTION_10	IF_1
0xa2e	            0x89c2	                            mov edx, eax	       209	walker.c	FUNCTION_10	IF_1
0xa30	        0x488b45f8	                mov rax, qword [rbp - 8]	       209	walker.c	FUNCTION_10	IF_1
0xa34	    0x81e2ffffff07	                      and edx, 0x7ffffff	       209	walker.c	FUNCTION_10	IF_1
0xa3a	            0x89d1	                            mov ecx, edx	       209	walker.c	FUNCTION_10	IF_1
0xa3c	          0xc1e104	                              shl ecx, 4	       209	walker.c	FUNCTION_10	IF_1
0xa3f	            0x8b10	                    mov edx, dword [rax]	       209	walker.c	FUNCTION_10	IF_1
0xa41	    0x81e20f000080	                     and edx, 0x8000000f	       209	walker.c	FUNCTION_10	IF_1
0xa47	             0x9ca	                             or edx, ecx	       209	walker.c	FUNCTION_10	IF_1
0xa49	            0x8910	                    mov dword [rax], edx	       209	walker.c	FUNCTION_10	IF_1
0xa4b	        0x488b45f8	                mov rax, qword [rbp - 8]	       210	walker.c	FUNCTION_10	IF_1	CALL_2
0xa4f	      0xbe00000000	                              mov esi, 0	       210	walker.c	FUNCTION_10	IF_1	CALL_2
0xa54	          0x4889c7	                            mov rdi, rax	       210	walker.c	FUNCTION_10	IF_1	CALL_2
0xa57	      0xe800000000	                          call 0x4000a9c	       210	walker.c	FUNCTION_10	IF_1	CALL_2
0xa5c	      0xb800000000	                              mov eax, 0	       212	walker.c	FUNCTION_10
0xa61	              0xc9	                                   leave	       213	walker.c	FUNCTION_10
0xa62	              0xc3	                                     ret	       213	walker.c	FUNCTION_10
const_error	DO,0:CALL,0:WHILE,0:ELSE,0:IF,0:functions,0:SWITCH,0:FOR,0	5
0x0	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_32
0x1	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_32
0x4	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_32
0x9	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_32
0xa	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_32
process	DO,0:CALL,3:WHILE,0:ELSE,1:IF,3:functions,0:SWITCH,0:FOR,0	78
0x738	              0x55	                                push rbp	       138	walker.c	FUNCTION_7
0x739	          0x4889e5	                            mov rbp, rsp	       138	walker.c	FUNCTION_7
0x73c	        0x4883ec10	                           sub rsp, 0x10	       138	walker.c	FUNCTION_7
0x740	        0x48897df8	                mov qword [rbp - 8], rdi	       138	walker.c	FUNCTION_7
0x744	        0x488975f0	             mov qword [rbp - 0x10], rsi	       138	walker.c	FUNCTION_7
0x748	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       139	walker.c	FUNCTION_7	IF_1
0x74c	            0x8b00	                    mov eax, dword [rax]	       139	walker.c	FUNCTION_7	IF_1
0x74e	          0xc1e804	                              shr eax, 4	       139	walker.c	FUNCTION_7	IF_1
0x751	      0x25ffffff07	                      and eax, 0x7ffffff	       139	walker.c	FUNCTION_7	IF_1
0x756	          0x83e002	                              and eax, 2	       139	walker.c	FUNCTION_7	IF_1
0x759	            0x85c0	                           test eax, eax	       139	walker.c	FUNCTION_7	IF_1
0x75b	            0x740a	                            je 0x40007a7	       139	walker.c	FUNCTION_7	IF_1
0x75d	      0xb800000000	                              mov eax, 0	       140	walker.c	FUNCTION_7	IF_1
0x762	      0xe9da000000	                           jmp 0x4000881	       140	walker.c	FUNCTION_7	IF_1
0x767	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       141	walker.c	FUNCTION_7
0x76b	            0x8b00	                    mov eax, dword [rax]	       141	walker.c	FUNCTION_7
0x76d	          0xc1e804	                              shr eax, 4	       141	walker.c	FUNCTION_7
0x770	      0x25ffffff07	                      and eax, 0x7ffffff	       141	walker.c	FUNCTION_7
0x775	          0x83c802	                               or eax, 2	       141	walker.c	FUNCTION_7
0x778	            0x89c2	                            mov edx, eax	       141	walker.c	FUNCTION_7
0x77a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       141	walker.c	FUNCTION_7
0x77e	    0x81e2ffffff07	                      and edx, 0x7ffffff	       141	walker.c	FUNCTION_7
0x784	            0x89d1	                            mov ecx, edx	       141	walker.c	FUNCTION_7
0x786	          0xc1e104	                              shl ecx, 4	       141	walker.c	FUNCTION_7
0x789	            0x8b10	                    mov edx, dword [rax]	       141	walker.c	FUNCTION_7
0x78b	    0x81e20f000080	                     and edx, 0x8000000f	       141	walker.c	FUNCTION_7
0x791	             0x9ca	                             or edx, ecx	       141	walker.c	FUNCTION_7
0x793	            0x8910	                    mov dword [rax], edx	       141	walker.c	FUNCTION_7
0x795	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       143	walker.c	FUNCTION_7	IF_2	CALL_1
0x799	        0x4883c004	                              add rax, 4	       143	walker.c	FUNCTION_7	IF_2	CALL_1
0x79d	          0x4889c7	                            mov rdi, rax	       143	walker.c	FUNCTION_7	IF_2	CALL_1
0x7a0	      0xe800000000	                          call 0x40007e5	       143	walker.c	FUNCTION_7	IF_2	CALL_1
0x7a5	            0x85c0	                           test eax, eax	       143	walker.c	FUNCTION_7	IF_2	CALL_1
0x7a7	            0x7430	                            je 0x4000819	       143	walker.c	FUNCTION_7	IF_2	CALL_1
0x7a9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       145	walker.c	FUNCTION_7	IF_2
0x7ad	            0x8b00	                    mov eax, dword [rax]	       145	walker.c	FUNCTION_7	IF_2
0x7af	          0xc1e804	                              shr eax, 4	       145	walker.c	FUNCTION_7	IF_2
0x7b2	      0x25ffffff07	                      and eax, 0x7ffffff	       145	walker.c	FUNCTION_7	IF_2
0x7b7	          0x83c804	                               or eax, 4	       145	walker.c	FUNCTION_7	IF_2
0x7ba	            0x89c2	                            mov edx, eax	       145	walker.c	FUNCTION_7	IF_2
0x7bc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       145	walker.c	FUNCTION_7	IF_2
0x7c0	    0x81e2ffffff07	                      and edx, 0x7ffffff	       145	walker.c	FUNCTION_7	IF_2
0x7c6	            0x89d1	                            mov ecx, edx	       145	walker.c	FUNCTION_7	IF_2
0x7c8	          0xc1e104	                              shl ecx, 4	       145	walker.c	FUNCTION_7	IF_2
0x7cb	            0x8b10	                    mov edx, dword [rax]	       145	walker.c	FUNCTION_7	IF_2
0x7cd	    0x81e20f000080	                     and edx, 0x8000000f	       145	walker.c	FUNCTION_7	IF_2
0x7d3	             0x9ca	                             or edx, ecx	       145	walker.c	FUNCTION_7	IF_2
0x7d5	            0x8910	                    mov dword [rax], edx	       145	walker.c	FUNCTION_7	IF_2
0x7d7	            0xeb38	                           jmp 0x4000851	       145	walker.c	FUNCTION_7	IF_2
0x7d9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       148	walker.c	FUNCTION_7	ELSE_1	IF_3
0x7dd	            0x8b00	                    mov eax, dword [rax]	       148	walker.c	FUNCTION_7	ELSE_1	IF_3
0x7df	          0xc1e804	                              shr eax, 4	       148	walker.c	FUNCTION_7	ELSE_1	IF_3
0x7e2	      0x25ffffff07	                      and eax, 0x7ffffff	       148	walker.c	FUNCTION_7	ELSE_1	IF_3
0x7e7	          0x83e001	                              and eax, 1	       148	walker.c	FUNCTION_7	ELSE_1	IF_3
0x7ea	            0x85c0	                           test eax, eax	       148	walker.c	FUNCTION_7	ELSE_1	IF_3
0x7ec	            0x7407	                            je 0x4000835	       148	walker.c	FUNCTION_7	ELSE_1	IF_3
0x7ee	      0xb800000000	                              mov eax, 0	       149	walker.c	FUNCTION_7	ELSE_1	IF_3
0x7f3	            0xeb4c	                           jmp 0x4000881	       149	walker.c	FUNCTION_7	ELSE_1	IF_3
0x7f5	        0x488b45f8	                mov rax, qword [rbp - 8]	       150	walker.c	FUNCTION_7	ELSE_1	CALL_2
0x7f9	        0x488b4010	            mov rax, qword [rax + 0x10] 	       150	walker.c	FUNCTION_7	ELSE_1	CALL_2
0x7fd	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       150	walker.c	FUNCTION_7	ELSE_1	CALL_2
0x801	        0x488d4a04	                      lea rcx, [rdx + 4]	       150	walker.c	FUNCTION_7	ELSE_1	CALL_2
0x805	        0x488b55f8	                mov rdx, qword [rbp - 8]	       150	walker.c	FUNCTION_7	ELSE_1	CALL_2
0x809	          0x4889ce	                            mov rsi, rcx	       150	walker.c	FUNCTION_7	ELSE_1	CALL_2
0x80c	          0x4889d7	                            mov rdi, rdx	       150	walker.c	FUNCTION_7	ELSE_1	CALL_2
0x80f	            0xffd0	                                call rax	       150	walker.c	FUNCTION_7	ELSE_1	CALL_2
0x811	    0x488b15000000	            mov rdx, qword [0x04000858] 	       153	walker.c	FUNCTION_7	CALL_3
0x818	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       153	walker.c	FUNCTION_7	CALL_3
0x81c	          0x4889d6	                            mov rsi, rdx	       153	walker.c	FUNCTION_7	CALL_3
0x81f	          0x4889c7	                            mov rdi, rax	       153	walker.c	FUNCTION_7	CALL_3
0x822	      0xe800000000	                          call 0x4000867	       153	walker.c	FUNCTION_7	CALL_3
0x827	    0x488b05000000	            mov rax, qword [0x0400086e] 	       154	walker.c	FUNCTION_7
0x82e	          0x488b00	                    mov rax, qword [rax]	       154	walker.c	FUNCTION_7
0x831	        0x4883c008	                              add rax, 8	       154	walker.c	FUNCTION_7
0x835	    0x488905000000	            mov qword [0x0400087c], rax 	       154	walker.c	FUNCTION_7
0x83c	      0xb800000000	                              mov eax, 0	       155	walker.c	FUNCTION_7
0x841	              0xc9	                                   leave	       156	walker.c	FUNCTION_7
0x842	              0xc3	                                     ret	       156	walker.c	FUNCTION_7
process_commit	DO,0:CALL,8:WHILE,1:ELSE,0:IF,4:functions,0:SWITCH,0:FOR,1	84
0x4b1	              0x55	                                push rbp	        74	walker.c	FUNCTION_4
0x4b2	          0x4889e5	                            mov rbp, rsp	        74	walker.c	FUNCTION_4
0x4b5	        0x4883ec20	                           sub rsp, 0x20	        74	walker.c	FUNCTION_4
0x4b9	        0x48897de8	             mov qword [rbp - 0x18], rdi	        74	walker.c	FUNCTION_4
0x4bd	        0x488975e0	             mov qword [rbp - 0x20], rsi	        74	walker.c	FUNCTION_4
0x4c1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        77	walker.c	FUNCTION_4	IF_1	CALL_1
0x4c5	          0x4889c7	                            mov rdi, rax	        77	walker.c	FUNCTION_4	IF_1	CALL_1
0x4c8	      0xe813fdffff	                   call sym.parse_commit	        77	walker.c	FUNCTION_4	IF_1	CALL_1
0x4cd	            0x85c0	                           test eax, eax	        77	walker.c	FUNCTION_4	IF_1	CALL_1
0x4cf	            0x7419	                            je 0x400052a	        77	walker.c	FUNCTION_4	IF_1	CALL_1
0x4d1	      0xb8ffffffff	                     mov eax, 0xffffffff	        78	walker.c	FUNCTION_4	IF_1
0x4d6	      0xe906010000	                           jmp 0x4000621	        78	walker.c	FUNCTION_4	IF_1
0x4db	      0xbe01000000	                              mov esi, 1	        81	walker.c	FUNCTION_4	WHILE_1	CALL_2
0x4e0	      0xbf00000000	                              mov edi, 0	        81	walker.c	FUNCTION_4	WHILE_1	CALL_2
0x4e5	      0xe800000000	                          call 0x400052a	        81	walker.c	FUNCTION_4	WHILE_1	CALL_2
0x4ea	    0x488b05000000	            mov rax, qword [0x04000531] 	        80	walker.c	FUNCTION_4	WHILE_1
0x4f1	          0x4885c0	                           test rax, rax	        80	walker.c	FUNCTION_4	WHILE_1
0x4f4	            0x741b	                            je 0x4000551	        80	walker.c	FUNCTION_4	WHILE_1
0x4f6	    0x488b05000000	            mov rax, qword [0x0400053d] 	        80	walker.c	FUNCTION_4	WHILE_1
0x4fd	          0x488b00	                    mov rax, qword [rax]	        80	walker.c	FUNCTION_4	WHILE_1
0x500	        0x488b5028	            mov rdx, qword [rax + 0x28] 	        80	walker.c	FUNCTION_4	WHILE_1
0x504	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        80	walker.c	FUNCTION_4	WHILE_1
0x508	        0x488b4028	            mov rax, qword [rax + 0x28] 	        80	walker.c	FUNCTION_4	WHILE_1
0x50c	          0x4839c2	                            cmp rdx, rax	        80	walker.c	FUNCTION_4	WHILE_1
0x50f	            0x73ca	                           jae 0x400051b	        80	walker.c	FUNCTION_4	WHILE_1
0x511	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        84	walker.c	FUNCTION_4	IF_2
0x515	            0x8b00	                    mov eax, dword [rax]	        84	walker.c	FUNCTION_4	IF_2
0x517	          0xc1e804	                              shr eax, 4	        84	walker.c	FUNCTION_4	IF_2
0x51a	      0x25ffffff07	                      and eax, 0x7ffffff	        84	walker.c	FUNCTION_4	IF_2
0x51f	          0x83e001	                              and eax, 1	        84	walker.c	FUNCTION_4	IF_2
0x522	            0x85c0	                           test eax, eax	        84	walker.c	FUNCTION_4	IF_2
0x524	            0x740a	                            je 0x4000570	        84	walker.c	FUNCTION_4	IF_2
0x526	      0xb800000000	                              mov eax, 0	        85	walker.c	FUNCTION_4	IF_2
0x52b	      0xe9b1000000	                           jmp 0x4000621	        85	walker.c	FUNCTION_4	IF_2
0x530	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        87	walker.c	FUNCTION_4	CALL_3
0x534	        0x4883c004	                              add rax, 4	        87	walker.c	FUNCTION_4	CALL_3
0x538	          0x4889c6	                            mov rsi, rax	        87	walker.c	FUNCTION_4	CALL_3
0x53b	      0xbf00000000	                              mov edi, 0	        87	walker.c	FUNCTION_4	CALL_3
0x540	      0xe856fcffff	                         call sym.oidcpy	        87	walker.c	FUNCTION_4	CALL_3
0x545	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        89	walker.c	FUNCTION_4	CALL_5
0x549	        0x4883c004	                              add rax, 4	        89	walker.c	FUNCTION_4	CALL_5
0x54d	          0x4889c7	                            mov rdi, rax	        89	walker.c	FUNCTION_4	CALL_5
0x550	      0xe800000000	                          call 0x4000595	        89	walker.c	FUNCTION_4	CALL_5
0x555	          0x4889c2	                            mov rdx, rax	        89	walker.c	FUNCTION_4	CALL_5
0x558	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        89	walker.c	FUNCTION_4	CALL_5
0x55c	      0xbe00000000	                              mov esi, 0	        89	walker.c	FUNCTION_4	CALL_5
0x561	          0x4889c7	                            mov rdi, rax	        89	walker.c	FUNCTION_4	CALL_5
0x564	      0xb800000000	                              mov eax, 0	        89	walker.c	FUNCTION_4	CALL_5
0x569	      0xe800000000	                          call 0x40005ae	        89	walker.c	FUNCTION_4	CALL_5
0x56e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        91	walker.c	FUNCTION_4	IF_3	CALL_7
0x572	          0x4889c7	                            mov rdi, rax	        91	walker.c	FUNCTION_4	IF_3	CALL_7
0x575	      0xe800000000	                          call 0x40005ba	        91	walker.c	FUNCTION_4	IF_3	CALL_7
0x57a	          0x4889c2	                            mov rdx, rax	        91	walker.c	FUNCTION_4	IF_3	CALL_7
0x57d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        91	walker.c	FUNCTION_4	IF_3	CALL_7
0x581	          0x4889d6	                            mov rsi, rdx	        91	walker.c	FUNCTION_4	IF_3	CALL_7
0x584	          0x4889c7	                            mov rdi, rax	        91	walker.c	FUNCTION_4	IF_3	CALL_7
0x587	      0xe8ac010000	                        call sym.process	        91	walker.c	FUNCTION_4	IF_3	CALL_7
0x58c	            0x85c0	                           test eax, eax	        91	walker.c	FUNCTION_4	IF_3	CALL_7
0x58e	            0x7407	                            je 0x40005d7	        91	walker.c	FUNCTION_4	IF_3	CALL_7
0x590	      0xb8ffffffff	                     mov eax, 0xffffffff	        92	walker.c	FUNCTION_4	IF_3
0x595	            0xeb4a	                           jmp 0x4000621	        92	walker.c	FUNCTION_4	IF_3
0x597	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        94	walker.c	FUNCTION_4	FOR_1
0x59b	        0x488b4030	            mov rax, qword [rax + 0x30] 	        94	walker.c	FUNCTION_4	FOR_1
0x59f	        0x488945f8	                mov qword [rbp - 8], rax	        94	walker.c	FUNCTION_4	FOR_1
0x5a3	            0xeb30	                           jmp 0x4000615	        94	walker.c	FUNCTION_4	FOR_1
0x5a5	        0x488b45f8	                mov rax, qword [rbp - 8]	        95	walker.c	FUNCTION_4	FOR_1	IF_4	CALL_8
0x5a9	          0x488b00	                    mov rax, qword [rax]	        95	walker.c	FUNCTION_4	FOR_1	IF_4	CALL_8
0x5ac	          0x4889c2	                            mov rdx, rax	        95	walker.c	FUNCTION_4	FOR_1	IF_4	CALL_8
0x5af	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        95	walker.c	FUNCTION_4	FOR_1	IF_4	CALL_8
0x5b3	          0x4889d6	                            mov rsi, rdx	        95	walker.c	FUNCTION_4	FOR_1	IF_4	CALL_8
0x5b6	          0x4889c7	                            mov rdi, rax	        95	walker.c	FUNCTION_4	FOR_1	IF_4	CALL_8
0x5b9	      0xe87a010000	                        call sym.process	        95	walker.c	FUNCTION_4	FOR_1	IF_4	CALL_8
0x5be	            0x85c0	                           test eax, eax	        95	walker.c	FUNCTION_4	FOR_1	IF_4	CALL_8
0x5c0	            0x7407	                            je 0x4000609	        95	walker.c	FUNCTION_4	FOR_1	IF_4	CALL_8
0x5c2	      0xb8ffffffff	                     mov eax, 0xffffffff	        96	walker.c	FUNCTION_4	FOR_1	IF_4
0x5c7	            0xeb18	                           jmp 0x4000621	        96	walker.c	FUNCTION_4	FOR_1	IF_4
0x5c9	        0x488b45f8	                mov rax, qword [rbp - 8]	        94	walker.c	FUNCTION_4	FOR_1
0x5cd	        0x488b4008	                mov rax, qword [rax + 8]	        94	walker.c	FUNCTION_4	FOR_1
0x5d1	        0x488945f8	                mov qword [rbp - 8], rax	        94	walker.c	FUNCTION_4	FOR_1
0x5d5	      0x48837df800	                  cmp qword [rbp - 8], 0	        94	walker.c	FUNCTION_4	FOR_1
0x5da	            0x75c9	                           jne 0x40005e5	        94	walker.c	FUNCTION_4	FOR_1
0x5dc	      0xb800000000	                              mov eax, 0	        99	walker.c	FUNCTION_4
0x5e1	              0xc9	                                   leave	       100	walker.c	FUNCTION_4
0x5e2	              0xc3	                                     ret	       100	walker.c	FUNCTION_4
walker_free	DO,0:CALL,2:WHILE,0:ELSE,0:IF,0:functions,0:SWITCH,0:FOR,0	15
0x1041	              0x55	                                push rbp	       328	walker.c	FUNCTION_14
0x1042	          0x4889e5	                            mov rbp, rsp	       328	walker.c	FUNCTION_14
0x1045	        0x4883ec10	                           sub rsp, 0x10	       328	walker.c	FUNCTION_14
0x1049	        0x48897df8	                mov qword [rbp - 8], rdi	       328	walker.c	FUNCTION_14
0x104d	        0x488b45f8	                mov rax, qword [rbp - 8]	       329	walker.c	FUNCTION_14	CALL_1
0x1051	        0x488b4020	            mov rax, qword [rax + 0x20] 	       329	walker.c	FUNCTION_14	CALL_1
0x1055	        0x488b55f8	                mov rdx, qword [rbp - 8]	       329	walker.c	FUNCTION_14	CALL_1
0x1059	          0x4889d7	                            mov rdi, rdx	       329	walker.c	FUNCTION_14	CALL_1
0x105c	            0xffd0	                                call rax	       329	walker.c	FUNCTION_14	CALL_1
0x105e	        0x488b45f8	                mov rax, qword [rbp - 8]	       330	walker.c	FUNCTION_14	CALL_2
0x1062	          0x4889c7	                            mov rdi, rax	       330	walker.c	FUNCTION_14	CALL_2
0x1065	      0xe800000000	                          call 0x40010aa	       330	walker.c	FUNCTION_14	CALL_2
0x106a	              0x90	                                     nop	       331	walker.c	FUNCTION_14
0x106b	              0xc9	                                   leave	       331	walker.c	FUNCTION_14
0x106c	              0xc3	                                     ret	       331	walker.c	FUNCTION_14
walker_targets_stdin	DO,0:CALL,7:WHILE,1:ELSE,0:IF,3:functions,0:SWITCH,0:FOR,0	112
0xa63	              0x55	                                push rbp	       216	walker.c	FUNCTION_11
0xa64	          0x4889e5	                            mov rbp, rsp	       216	walker.c	FUNCTION_11
0xa67	              0x53	                                push rbx	       216	walker.c	FUNCTION_11
0xa68	        0x4883ec58	                           sub rsp, 0x58	       216	walker.c	FUNCTION_11
0xa6c	        0x48897da8	             mov qword [rbp - 0x58], rdi	       216	walker.c	FUNCTION_11
0xa70	        0x488975a0	             mov qword [rbp - 0x60], rsi	       216	walker.c	FUNCTION_11
0xa74	    0x64488b042528	                mov rax, qword fs:[0x28]	       216	walker.c	FUNCTION_11
0xa7d	        0x488945e8	             mov qword [rbp - 0x18], rax	       216	walker.c	FUNCTION_11
0xa81	            0x31c0	                            xor eax, eax	       216	walker.c	FUNCTION_11
0xa83	    0xc745b8000000	               mov dword [rbp - 0x48], 0	       217	walker.c	FUNCTION_11
0xa8a	    0xc745bc000000	               mov dword [rbp - 0x44], 0	       217	walker.c	FUNCTION_11
0xa91	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       218	walker.c	FUNCTION_11
0xa99	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       218	walker.c	FUNCTION_11
0xaa1	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       218	walker.c	FUNCTION_11
0xaa9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       219	walker.c	FUNCTION_11
0xaad	    0x48c700000000	                      mov qword [rax], 0	       219	walker.c	FUNCTION_11
0xab4	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       219	walker.c	FUNCTION_11
0xab8	    0x48c700000000	                      mov qword [rax], 0	       219	walker.c	FUNCTION_11
0xabf	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       221	walker.c	FUNCTION_11	WHILE_1
0xac7	    0x488b15000000	            mov rdx, qword [0x04000b0e] 	       224	walker.c	FUNCTION_11	WHILE_1	IF_1	CALL_1
0xace	        0x488d45d0	                   lea rax, [rbp - 0x30]	       224	walker.c	FUNCTION_11	WHILE_1	IF_1	CALL_1
0xad2	          0x4889d6	                            mov rsi, rdx	       224	walker.c	FUNCTION_11	WHILE_1	IF_1	CALL_1
0xad5	          0x4889c7	                            mov rdi, rax	       224	walker.c	FUNCTION_11	WHILE_1	IF_1	CALL_1
0xad8	      0xe800000000	                          call 0x4000b1d	       224	walker.c	FUNCTION_11	WHILE_1	IF_1	CALL_1
0xadd	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       224	walker.c	FUNCTION_11	WHILE_1	IF_1	CALL_1
0xae0	     0xf8403010000	                            je 0x4000c29	       224	walker.c	FUNCTION_11	WHILE_1	IF_1	CALL_1
0xae6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       226	walker.c	FUNCTION_11	WHILE_1
0xaea	        0x488945c8	             mov qword [rbp - 0x38], rax	       226	walker.c	FUNCTION_11	WHILE_1
0xaee	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       227	walker.c	FUNCTION_11	WHILE_1	CALL_2
0xaf2	      0xbe09000000	                              mov esi, 9	       227	walker.c	FUNCTION_11	WHILE_1	CALL_2
0xaf7	          0x4889c7	                            mov rdi, rax	       227	walker.c	FUNCTION_11	WHILE_1	CALL_2
0xafa	      0xe800000000	                          call 0x4000b3f	       227	walker.c	FUNCTION_11	WHILE_1	CALL_2
0xaff	        0x488945c0	             mov qword [rbp - 0x40], rax	       227	walker.c	FUNCTION_11	WHILE_1	CALL_2
0xb03	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       228	walker.c	FUNCTION_11	WHILE_1	IF_2
0xb08	            0x740f	                            je 0x4000b59	       228	walker.c	FUNCTION_11	WHILE_1	IF_2
0xb0a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       229	walker.c	FUNCTION_11	WHILE_1	IF_2
0xb0e	        0x488d5001	                      lea rdx, [rax + 1]	       229	walker.c	FUNCTION_11	WHILE_1	IF_2
0xb12	        0x488955c0	             mov qword [rbp - 0x40], rdx	       229	walker.c	FUNCTION_11	WHILE_1	IF_2
0xb16	          0xc60000	                       mov byte [rax], 0	       229	walker.c	FUNCTION_11	WHILE_1	IF_2
0xb19	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       231	walker.c	FUNCTION_11	WHILE_1	IF_3
0xb1c	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	       231	walker.c	FUNCTION_11	WHILE_1	IF_3
0xb1f	            0x7c77	                            jl 0x4000bd8	       231	walker.c	FUNCTION_11	WHILE_1	IF_3
0xb21	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       232	walker.c	FUNCTION_11	WHILE_1	IF_3
0xb25	            0x7407	                            je 0x4000b6e	       232	walker.c	FUNCTION_11	WHILE_1	IF_3
0xb27	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       232	walker.c	FUNCTION_11	WHILE_1	IF_3
0xb2a	             0x1c0	                            add eax, eax	       232	walker.c	FUNCTION_11	WHILE_1	IF_3
0xb2c	            0xeb05	                           jmp 0x4000b73	       232	walker.c	FUNCTION_11	WHILE_1	IF_3
0xb2e	      0xb840000000	                           mov eax, 0x40	       232	walker.c	FUNCTION_11	WHILE_1	IF_3
0xb33	          0x8945bc	             mov dword [rbp - 0x44], eax	       232	walker.c	FUNCTION_11	WHILE_1	IF_3
0xb36	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       233	walker.c	FUNCTION_11	WHILE_1	IF_3	CALL_3
0xb39	            0x4898	                                    cdqe	       233	walker.c	FUNCTION_11	WHILE_1	IF_3	CALL_3
0xb3b	          0x4889c6	                            mov rsi, rax	       233	walker.c	FUNCTION_11	WHILE_1	IF_3	CALL_3
0xb3e	      0xbf08000000	                              mov edi, 8	       233	walker.c	FUNCTION_11	WHILE_1	IF_3	CALL_3
0xb43	      0xe8c3f4ffff	                        call sym.st_mult	       233	walker.c	FUNCTION_11	WHILE_1	IF_3	CALL_3
0xb48	          0x4889c2	                            mov rdx, rax	       233	walker.c	FUNCTION_11	WHILE_1	IF_3	CALL_3
0xb4b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       233	walker.c	FUNCTION_11	WHILE_1	IF_3	CALL_3
0xb4f	          0x488b00	                    mov rax, qword [rax]	       233	walker.c	FUNCTION_11	WHILE_1	IF_3	CALL_3
0xb52	          0x4889d6	                            mov rsi, rdx	       233	walker.c	FUNCTION_11	WHILE_1	IF_3	CALL_3
0xb55	          0x4889c7	                            mov rdi, rax	       233	walker.c	FUNCTION_11	WHILE_1	IF_3	CALL_3
0xb58	      0xe800000000	                          call 0x4000b9d	       233	walker.c	FUNCTION_11	WHILE_1	IF_3	CALL_3
0xb5d	          0x4889c2	                            mov rdx, rax	       233	walker.c	FUNCTION_11	WHILE_1	IF_3	CALL_3
0xb60	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       233	walker.c	FUNCTION_11	WHILE_1	IF_3	CALL_3
0xb64	          0x488910	                    mov qword [rax], rdx	       233	walker.c	FUNCTION_11	WHILE_1	IF_3	CALL_3
0xb67	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       234	walker.c	FUNCTION_11	WHILE_1	IF_3	CALL_4
0xb6a	            0x4898	                                    cdqe	       234	walker.c	FUNCTION_11	WHILE_1	IF_3	CALL_4
0xb6c	          0x4889c6	                            mov rsi, rax	       234	walker.c	FUNCTION_11	WHILE_1	IF_3	CALL_4
0xb6f	      0xbf08000000	                              mov edi, 8	       234	walker.c	FUNCTION_11	WHILE_1	IF_3	CALL_4
0xb74	      0xe892f4ffff	                        call sym.st_mult	       234	walker.c	FUNCTION_11	WHILE_1	IF_3	CALL_4
0xb79	          0x4889c2	                            mov rdx, rax	       234	walker.c	FUNCTION_11	WHILE_1	IF_3	CALL_4
0xb7c	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       234	walker.c	FUNCTION_11	WHILE_1	IF_3	CALL_4
0xb80	          0x488b00	                    mov rax, qword [rax]	       234	walker.c	FUNCTION_11	WHILE_1	IF_3	CALL_4
0xb83	          0x4889d6	                            mov rsi, rdx	       234	walker.c	FUNCTION_11	WHILE_1	IF_3	CALL_4
0xb86	          0x4889c7	                            mov rdi, rax	       234	walker.c	FUNCTION_11	WHILE_1	IF_3	CALL_4
0xb89	      0xe800000000	                          call 0x4000bce	       234	walker.c	FUNCTION_11	WHILE_1	IF_3	CALL_4
0xb8e	          0x4889c2	                            mov rdx, rax	       234	walker.c	FUNCTION_11	WHILE_1	IF_3	CALL_4
0xb91	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       234	walker.c	FUNCTION_11	WHILE_1	IF_3	CALL_4
0xb95	          0x488910	                    mov qword [rax], rdx	       234	walker.c	FUNCTION_11	WHILE_1	IF_3	CALL_4
0xb98	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       236	walker.c	FUNCTION_11	WHILE_1	CALL_5
0xb9c	          0x488b00	                    mov rax, qword [rax]	       236	walker.c	FUNCTION_11	WHILE_1	CALL_5
0xb9f	          0x8b55b8	             mov edx, dword [rbp - 0x48]	       236	walker.c	FUNCTION_11	WHILE_1	CALL_5
0xba2	          0x4863d2	                         movsxd rdx, edx	       236	walker.c	FUNCTION_11	WHILE_1	CALL_5
0xba5	        0x48c1e203	                              shl rdx, 3	       236	walker.c	FUNCTION_11	WHILE_1	CALL_5
0xba9	        0x488d1c10	                    lea rbx, [rax + rdx]	       236	walker.c	FUNCTION_11	WHILE_1	CALL_5
0xbad	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       236	walker.c	FUNCTION_11	WHILE_1	CALL_5
0xbb1	          0x4889c7	                            mov rdi, rax	       236	walker.c	FUNCTION_11	WHILE_1	CALL_5
0xbb4	      0xe800000000	                          call 0x4000bf9	       236	walker.c	FUNCTION_11	WHILE_1	CALL_5
0xbb9	          0x488903	                    mov qword [rbx], rax	       236	walker.c	FUNCTION_11	WHILE_1	CALL_5
0xbbc	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       237	walker.c	FUNCTION_11	WHILE_1	CALL_6
0xbc0	          0x488b00	                    mov rax, qword [rax]	       237	walker.c	FUNCTION_11	WHILE_1	CALL_6
0xbc3	          0x8b55b8	             mov edx, dword [rbp - 0x48]	       237	walker.c	FUNCTION_11	WHILE_1	CALL_6
0xbc6	          0x4863d2	                         movsxd rdx, edx	       237	walker.c	FUNCTION_11	WHILE_1	CALL_6
0xbc9	        0x48c1e203	                              shl rdx, 3	       237	walker.c	FUNCTION_11	WHILE_1	CALL_6
0xbcd	        0x488d1c10	                    lea rbx, [rax + rdx]	       237	walker.c	FUNCTION_11	WHILE_1	CALL_6
0xbd1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       237	walker.c	FUNCTION_11	WHILE_1	CALL_6
0xbd5	          0x4889c7	                            mov rdi, rax	       237	walker.c	FUNCTION_11	WHILE_1	CALL_6
0xbd8	      0xe880f4ffff	                call sym.xstrdup_or_null	       237	walker.c	FUNCTION_11	WHILE_1	CALL_6
0xbdd	          0x488903	                    mov qword [rbx], rax	       237	walker.c	FUNCTION_11	WHILE_1	CALL_6
0xbe0	        0x8345b801	               add dword [rbp - 0x48], 1	       238	walker.c	FUNCTION_11	WHILE_1
0xbe4	      0xe9d6feffff	                           jmp 0x4000aff	       239	walker.c	FUNCTION_11	WHILE_1
0xbe9	              0x90	                                     nop	       225	walker.c	FUNCTION_11	WHILE_1	IF_1
0xbea	        0x488d45d0	                   lea rax, [rbp - 0x30]	       240	walker.c	FUNCTION_11	CALL_7
0xbee	          0x4889c7	                            mov rdi, rax	       240	walker.c	FUNCTION_11	CALL_7
0xbf1	      0xe800000000	                          call 0x4000c36	       240	walker.c	FUNCTION_11	CALL_7
0xbf6	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       241	walker.c	FUNCTION_11
0xbf9	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       242	walker.c	FUNCTION_11
0xbfd	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       242	walker.c	FUNCTION_11
0xc06	            0x7405	                            je 0x4000c4d	       242	walker.c	FUNCTION_11
0xc08	      0xe800000000	                          call 0x4000c4d	       242	walker.c	FUNCTION_11
0xc0d	        0x4883c458	                           add rsp, 0x58	       242	walker.c	FUNCTION_11
0xc11	              0x5b	                                 pop rbx	       242	walker.c	FUNCTION_11
0xc12	              0x5d	                                 pop rbp	       242	walker.c	FUNCTION_11
0xc13	              0xc3	                                     ret	       242	walker.c	FUNCTION_11
process_object	DO,0:CALL,6:WHILE,0:ELSE,0:IF,7:functions,0:SWITCH,0:FOR,0	83
0x623	              0x55	                                push rbp	       113	walker.c	FUNCTION_6
0x624	          0x4889e5	                            mov rbp, rsp	       113	walker.c	FUNCTION_6
0x627	              0x53	                                push rbx	       113	walker.c	FUNCTION_6
0x628	        0x4883ec18	                           sub rsp, 0x18	       113	walker.c	FUNCTION_6
0x62c	        0x48897de8	             mov qword [rbp - 0x18], rdi	       113	walker.c	FUNCTION_6
0x630	        0x488975e0	             mov qword [rbp - 0x20], rsi	       113	walker.c	FUNCTION_6
0x634	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       114	walker.c	FUNCTION_6	IF_1
0x638	           0xfb600	                   movzx eax, byte [rax]	       114	walker.c	FUNCTION_6	IF_1
0x63b	          0x83e00e	                            and eax, 0xe	       114	walker.c	FUNCTION_6	IF_1
0x63e	            0x3c02	                               cmp al, 2	       114	walker.c	FUNCTION_6	IF_1
0x640	            0x752b	                           jne 0x40006ad	       114	walker.c	FUNCTION_6	IF_1
0x642	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       115	walker.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x646	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       115	walker.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x64a	          0x4889d6	                            mov rsi, rdx	       115	walker.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x64d	          0x4889c7	                            mov rdi, rax	       115	walker.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x650	      0xe85cfeffff	                 call sym.process_commit	       115	walker.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x655	            0x85c0	                           test eax, eax	       115	walker.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x657	            0x740a	                            je 0x40006a3	       115	walker.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x659	      0xb8ffffffff	                     mov eax, 0xffffffff	       116	walker.c	FUNCTION_6	IF_1	IF_2
0x65e	      0xe9ce000000	                           jmp 0x4000771	       116	walker.c	FUNCTION_6	IF_1	IF_2
0x663	      0xb800000000	                              mov eax, 0	       117	walker.c	FUNCTION_6	IF_1
0x668	      0xe9c4000000	                           jmp 0x4000771	       117	walker.c	FUNCTION_6	IF_1
0x66d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       119	walker.c	FUNCTION_6	IF_3
0x671	           0xfb600	                   movzx eax, byte [rax]	       119	walker.c	FUNCTION_6	IF_3
0x674	          0x83e00e	                            and eax, 0xe	       119	walker.c	FUNCTION_6	IF_3
0x677	            0x3c04	                               cmp al, 4	       119	walker.c	FUNCTION_6	IF_3
0x679	            0x752b	                           jne 0x40006e6	       119	walker.c	FUNCTION_6	IF_3
0x67b	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       120	walker.c	FUNCTION_6	IF_3	IF_4	CALL_2
0x67f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       120	walker.c	FUNCTION_6	IF_3	IF_4	CALL_2
0x683	          0x4889d6	                            mov rsi, rdx	       120	walker.c	FUNCTION_6	IF_3	IF_4	CALL_2
0x686	          0x4889c7	                            mov rdi, rax	       120	walker.c	FUNCTION_6	IF_3	IF_4	CALL_2
0x689	      0xe8f7fcffff	                   call sym.process_tree	       120	walker.c	FUNCTION_6	IF_3	IF_4	CALL_2
0x68e	            0x85c0	                           test eax, eax	       120	walker.c	FUNCTION_6	IF_3	IF_4	CALL_2
0x690	            0x740a	                            je 0x40006dc	       120	walker.c	FUNCTION_6	IF_3	IF_4	CALL_2
0x692	      0xb8ffffffff	                     mov eax, 0xffffffff	       121	walker.c	FUNCTION_6	IF_3	IF_4
0x697	      0xe995000000	                           jmp 0x4000771	       121	walker.c	FUNCTION_6	IF_3	IF_4
0x69c	      0xb800000000	                              mov eax, 0	       122	walker.c	FUNCTION_6	IF_3
0x6a1	      0xe98b000000	                           jmp 0x4000771	       122	walker.c	FUNCTION_6	IF_3
0x6a6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       124	walker.c	FUNCTION_6	IF_5
0x6aa	           0xfb600	                   movzx eax, byte [rax]	       124	walker.c	FUNCTION_6	IF_5
0x6ad	          0x83e00e	                            and eax, 0xe	       124	walker.c	FUNCTION_6	IF_5
0x6b0	            0x3c06	                               cmp al, 6	       124	walker.c	FUNCTION_6	IF_5
0x6b2	            0x7507	                           jne 0x40006fb	       124	walker.c	FUNCTION_6	IF_5
0x6b4	      0xb800000000	                              mov eax, 0	       125	walker.c	FUNCTION_6	IF_5
0x6b9	            0xeb76	                           jmp 0x4000771	       125	walker.c	FUNCTION_6	IF_5
0x6bb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       127	walker.c	FUNCTION_6	IF_6
0x6bf	           0xfb600	                   movzx eax, byte [rax]	       127	walker.c	FUNCTION_6	IF_6
0x6c2	          0x83e00e	                            and eax, 0xe	       127	walker.c	FUNCTION_6	IF_6
0x6c5	            0x3c08	                               cmp al, 8	       127	walker.c	FUNCTION_6	IF_6
0x6c7	            0x7525	                           jne 0x400072e	       127	walker.c	FUNCTION_6	IF_6
0x6c9	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       128	walker.c	FUNCTION_6	IF_6	IF_7	CALL_3
0x6cd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       128	walker.c	FUNCTION_6	IF_6	IF_7	CALL_3
0x6d1	          0x4889d6	                            mov rsi, rdx	       128	walker.c	FUNCTION_6	IF_6	IF_7	CALL_3
0x6d4	          0x4889c7	                            mov rdi, rax	       128	walker.c	FUNCTION_6	IF_6	IF_7	CALL_3
0x6d7	      0xe807ffffff	                    call sym.process_tag	       128	walker.c	FUNCTION_6	IF_6	IF_7	CALL_3
0x6dc	            0x85c0	                           test eax, eax	       128	walker.c	FUNCTION_6	IF_6	IF_7	CALL_3
0x6de	            0x7407	                            je 0x4000727	       128	walker.c	FUNCTION_6	IF_6	IF_7	CALL_3
0x6e0	      0xb8ffffffff	                     mov eax, 0xffffffff	       129	walker.c	FUNCTION_6	IF_6	IF_7
0x6e5	            0xeb4a	                           jmp 0x4000771	       129	walker.c	FUNCTION_6	IF_6	IF_7
0x6e7	      0xb800000000	                              mov eax, 0	       130	walker.c	FUNCTION_6	IF_6
0x6ec	            0xeb43	                           jmp 0x4000771	       130	walker.c	FUNCTION_6	IF_6
0x6ee	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       132	walker.c	FUNCTION_6	CALL_4
0x6f2	        0x4883c004	                              add rax, 4	       132	walker.c	FUNCTION_6	CALL_4
0x6f6	          0x4889c7	                            mov rdi, rax	       132	walker.c	FUNCTION_6	CALL_4
0x6f9	      0xe800000000	                          call 0x400073e	       132	walker.c	FUNCTION_6	CALL_4
0x6fe	          0x4889c3	                            mov rbx, rax	       132	walker.c	FUNCTION_6	CALL_4
0x701	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       132	walker.c	FUNCTION_6	CALL_4
0x705	           0xfb600	                   movzx eax, byte [rax]	       132	walker.c	FUNCTION_6	CALL_4
0x708	            0xd0e8	                               shr al, 1	       132	walker.c	FUNCTION_6	CALL_4
0x70a	          0x83e007	                              and eax, 7	       132	walker.c	FUNCTION_6	CALL_4
0x70d	           0xfb6c0	                           movzx eax, al	       132	walker.c	FUNCTION_6	CALL_4
0x710	            0x89c7	                            mov edi, eax	       132	walker.c	FUNCTION_6	CALL_4
0x712	      0xe800000000	                          call 0x4000757	       132	walker.c	FUNCTION_6	CALL_4
0x717	          0x4889da	                            mov rdx, rbx	       132	walker.c	FUNCTION_6	CALL_4
0x71a	          0x4889c6	                            mov rsi, rax	       132	walker.c	FUNCTION_6	CALL_4
0x71d	      0xbf00000000	                              mov edi, 0	       132	walker.c	FUNCTION_6	CALL_4
0x722	      0xb800000000	                              mov eax, 0	       132	walker.c	FUNCTION_6	CALL_4
0x727	      0xe800000000	                          call 0x400076c	       132	walker.c	FUNCTION_6	CALL_4
0x72c	      0xe8cff8ffff	                    call sym.const_error	       132	walker.c	FUNCTION_6	CALL_4
0x731	        0x4883c418	                           add rsp, 0x18	       135	walker.c	FUNCTION_6
0x735	              0x5b	                                 pop rbx	       135	walker.c	FUNCTION_6
0x736	              0x5d	                                 pop rbp	       135	walker.c	FUNCTION_6
0x737	              0xc3	                                     ret	       135	walker.c	FUNCTION_6
strbuf_setlen	DO,0:CALL,2:WHILE,0:ELSE,1:IF,2:functions,0:SWITCH,0:FOR,0	43
0x85	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_18
0x86	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_18
0x89	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_18
0x8d	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_18
0x91	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_18
0x95	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_18	IF_1
0x99	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_18	IF_1
0x9c	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_18	IF_1
0x9f	            0x740d	                            je 0x40000ee	       162	strbuf.h	FUNCTION_18	IF_1
0xa1	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_18	IF_1
0xa5	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_18	IF_1
0xa8	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_18	IF_1
0xac	            0xeb05	                           jmp 0x40000f3	       162	strbuf.h	FUNCTION_18	IF_1
0xae	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_18	IF_1
0xb3	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_18	IF_1
0xb7	            0x730f	                           jae 0x4000108	       162	strbuf.h	FUNCTION_18	IF_1
0xb9	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_18	CALL_1
0xbe	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_18	CALL_1
0xc3	      0xe800000000	                          call 0x4000108	       163	strbuf.h	FUNCTION_18	CALL_1
0xc8	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_18
0xcc	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_18
0xd0	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_18
0xd4	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_18	IF_2
0xd8	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_18	IF_2
0xdc	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_18	IF_2
0xe2	            0x7414	                            je 0x4000138	       165	strbuf.h	FUNCTION_18	IF_2
0xe4	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_18	IF_2
0xe8	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_18	IF_2
0xec	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_18	IF_2
0xf0	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_18	IF_2
0xf3	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_18	IF_2
0xf6	            0xeb24	                           jmp 0x400015c	       169	strbuf.h	FUNCTION_18
0xf8	     0xfb605000000	           movzx eax, byte [0x0400013f] 	       168	strbuf.h	FUNCTION_18	CALL_2
0xff	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_18	CALL_2
0x101	            0x7419	                            je 0x400015c	       168	strbuf.h	FUNCTION_18	CALL_2
0x103	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_18	CALL_2
0x108	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_18	CALL_2
0x10d	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_18	CALL_2
0x112	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_18	CALL_2
0x117	      0xe800000000	                          call 0x400015c	       168	strbuf.h	FUNCTION_18	CALL_2
0x11c	              0x90	                                     nop	       169	strbuf.h	FUNCTION_18
0x11d	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_18
0x11e	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_18
