Curl_SOCKS4	WHILE,0:DO,0:FOR,0:ELSE,2:functions,0:CALL,32:SWITCH,1:IF,18	478
0x4000244	              0x55	                                push rbp	       113	socks.c	FUNCTION_2
0x4000245	          0x4889e5	                            mov rbp, rsp	       113	socks.c	FUNCTION_2
0x4000248	    0x4881ecc00100	                          sub rsp, 0x1c0	       113	socks.c	FUNCTION_2
0x400024f	    0x4889bd58feff	            mov qword [rbp - 0x1a8], rdi	       113	socks.c	FUNCTION_2
0x4000256	    0x4889b550feff	            mov qword [rbp - 0x1b0], rsi	       113	socks.c	FUNCTION_2
0x400025d	    0x89954cfeffff	            mov dword [rbp - 0x1b4], edx	       113	socks.c	FUNCTION_2
0x4000263	    0x898d48feffff	            mov dword [rbp - 0x1b8], ecx	       113	socks.c	FUNCTION_2
0x4000269	    0x4c898540feff	             mov qword [rbp - 0x1c0], r8	       113	socks.c	FUNCTION_2
0x4000270	    0x64488b042528	                mov rax, qword fs:[0x28]	       113	socks.c	FUNCTION_2
0x4000279	        0x488945f8	                mov qword [rbp - 8], rax	       113	socks.c	FUNCTION_2
0x400027d	            0x31c0	                            xor eax, eax	       113	socks.c	FUNCTION_2
0x400027f	    0x488b8540feff	            mov rax, qword [rbp - 0x1c0]	       115	socks.c	FUNCTION_2
0x4000286	    0x8b8038010000	           mov eax, dword [rax + 0x138] 	       115	socks.c	FUNCTION_2
0x400028c	          0x83f806	                              cmp eax, 6	       114	socks.c	FUNCTION_2
0x400028f	           0xf94c0	                                 sete al	       114	socks.c	FUNCTION_2
0x4000292	    0x888563feffff	              mov byte [rbp - 0x19d], al	       114	socks.c	FUNCTION_2
0x4000298	    0x488b8540feff	            mov rax, qword [rbp - 0x1c0]	       121	socks.c	FUNCTION_2
0x400029f	    0x8b9548feffff	            mov edx, dword [rbp - 0x1b8]	       121	socks.c	FUNCTION_2
0x40002a5	          0x4863d2	                         movsxd rdx, edx	       121	socks.c	FUNCTION_2
0x40002a8	    0x4881c2940000	                           add rdx, 0x94	       121	socks.c	FUNCTION_2
0x40002af	        0x8b449008	       mov eax, dword [rax + rdx*4 + 8] 	       121	socks.c	FUNCTION_2
0x40002b3	    0x898564feffff	            mov dword [rbp - 0x19c], eax	       121	socks.c	FUNCTION_2
0x40002b9	    0x488b8540feff	            mov rax, qword [rbp - 0x1c0]	       122	socks.c	FUNCTION_2
0x40002c0	          0x488b00	                    mov rax, qword [rax]	       122	socks.c	FUNCTION_2
0x40002c3	    0x48898598feff	            mov qword [rbp - 0x168], rax	       122	socks.c	FUNCTION_2
0x40002ca	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	       124	socks.c	FUNCTION_2	IF_1	CALL_1
0x40002d1	      0xba01000000	                              mov edx, 1	       124	socks.c	FUNCTION_2	IF_1	CALL_1
0x40002d6	      0xbe00000000	                              mov esi, 0	       124	socks.c	FUNCTION_2	IF_1	CALL_1
0x40002db	          0x4889c7	                            mov rdi, rax	       124	socks.c	FUNCTION_2	IF_1	CALL_1
0x40002de	      0xe800000000	                          call 0x40002e3	       124	socks.c	FUNCTION_2	IF_1	CALL_1
0x40002e3	          0x4885c0	                           test rax, rax	       124	socks.c	FUNCTION_2	IF_1	CALL_1
0x40002e6	            0x7925	                           jns 0x400030d	       124	socks.c	FUNCTION_2	IF_1	CALL_1
0x40002e8	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	       126	socks.c	FUNCTION_2	IF_1	CALL_2
0x40002ef	    0x488d35000000	                   lea rsi, [0x040002f6]	       126	socks.c	FUNCTION_2	IF_1	CALL_2
0x40002f6	          0x4889c7	                            mov rdi, rax	       126	socks.c	FUNCTION_2	IF_1	CALL_2
0x40002f9	      0xb800000000	                              mov eax, 0	       126	socks.c	FUNCTION_2	IF_1	CALL_2
0x40002fe	      0xe800000000	                          call 0x4000303	       126	socks.c	FUNCTION_2	IF_1	CALL_2
0x4000303	      0xb81c000000	                           mov eax, 0x1c	       127	socks.c	FUNCTION_2	IF_1
0x4000308	      0xe952080000	                           jmp 0x4000b5f	       127	socks.c	FUNCTION_2	IF_1
0x400030d	    0x488b8540feff	            mov rax, qword [rbp - 0x1c0]	       130	socks.c	FUNCTION_2	IF_2
0x4000314	     0xfb6809e0300	          movzx eax, byte [rax + 0x39e] 	       130	socks.c	FUNCTION_2	IF_2
0x400031b	            0x84c0	                             test al, al	       130	socks.c	FUNCTION_2	IF_2
0x400031d	            0x744a	                            je 0x4000369	       130	socks.c	FUNCTION_2	IF_2
0x400031f	    0x80bd63feffff	               cmp byte [rbp - 0x19d], 0	       131	socks.c	FUNCTION_2	IF_2	CALL_3
0x4000326	            0x7409	                            je 0x4000331	       131	socks.c	FUNCTION_2	IF_2	CALL_3
0x4000328	    0x488d05000000	                   lea rax, [0x0400032f]	       131	socks.c	FUNCTION_2	IF_2	CALL_3
0x400032f	            0xeb07	                           jmp 0x4000338	       131	socks.c	FUNCTION_2	IF_2	CALL_3
0x4000331	    0x488d05000000	                   lea rax, [0x04000338]	       131	socks.c	FUNCTION_2	IF_2	CALL_3
0x4000338	    0x488b9540feff	            mov rdx, qword [rbp - 0x1c0]	       131	socks.c	FUNCTION_2	IF_2	CALL_3
0x400033f	          0x488b3a	                    mov rdi, qword [rdx]	       131	socks.c	FUNCTION_2	IF_2	CALL_3
0x4000342	    0x8b8d4cfeffff	            mov ecx, dword [rbp - 0x1b4]	       131	socks.c	FUNCTION_2	IF_2	CALL_3
0x4000348	    0x488b9550feff	            mov rdx, qword [rbp - 0x1b0]	       131	socks.c	FUNCTION_2	IF_2	CALL_3
0x400034f	          0x4189c8	                            mov r8d, ecx	       131	socks.c	FUNCTION_2	IF_2	CALL_3
0x4000352	          0x4889d1	                            mov rcx, rdx	       131	socks.c	FUNCTION_2	IF_2	CALL_3
0x4000355	          0x4889c2	                            mov rdx, rax	       131	socks.c	FUNCTION_2	IF_2	CALL_3
0x4000358	    0x488d35000000	                   lea rsi, [0x0400035f]	       131	socks.c	FUNCTION_2	IF_2	CALL_3
0x400035f	      0xb800000000	                              mov eax, 0	       131	socks.c	FUNCTION_2	IF_2	CALL_3
0x4000364	      0xe800000000	                          call 0x4000369	       131	socks.c	FUNCTION_2	IF_2	CALL_3
0x4000369	    0x8b8564feffff	            mov eax, dword [rbp - 0x19c]	       134	socks.c	FUNCTION_2	CALL_4
0x400036f	      0xbe00000000	                              mov esi, 0	       134	socks.c	FUNCTION_2	CALL_4
0x4000374	            0x89c7	                            mov edi, eax	       134	socks.c	FUNCTION_2	CALL_4
0x4000376	      0xe800000000	                          call 0x400037b	       134	socks.c	FUNCTION_2	CALL_4
0x400037b	    0x8b8d4cfeffff	            mov ecx, dword [rbp - 0x1b4]	       136	socks.c	FUNCTION_2	CALL_5
0x4000381	    0x488b9550feff	            mov rdx, qword [rbp - 0x1b0]	       136	socks.c	FUNCTION_2	CALL_5
0x4000388	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	       136	socks.c	FUNCTION_2	CALL_5
0x400038f	    0x488d35000000	                   lea rsi, [0x04000396]	       136	socks.c	FUNCTION_2	CALL_5
0x4000396	          0x4889c7	                            mov rdi, rax	       136	socks.c	FUNCTION_2	CALL_5
0x4000399	      0xb800000000	                              mov eax, 0	       136	socks.c	FUNCTION_2	CALL_5
0x400039e	      0xe800000000	                          call 0x40003a3	       136	socks.c	FUNCTION_2	CALL_5
0x40003a3	    0xc685f0feffff	               mov byte [rbp - 0x110], 4	       149	socks.c	FUNCTION_2
0x40003aa	    0xc685f1feffff	               mov byte [rbp - 0x10f], 1	       150	socks.c	FUNCTION_2
0x40003b1	    0x8b854cfeffff	            mov eax, dword [rbp - 0x1b4]	       151	socks.c	FUNCTION_2
0x40003b7	          0xc1f808	                              sar eax, 8	       151	socks.c	FUNCTION_2
0x40003ba	    0x8885f2feffff	              mov byte [rbp - 0x10e], al	       151	socks.c	FUNCTION_2
0x40003c0	    0x8b854cfeffff	            mov eax, dword [rbp - 0x1b4]	       152	socks.c	FUNCTION_2
0x40003c6	    0x8885f3feffff	              mov byte [rbp - 0x10d], al	       152	socks.c	FUNCTION_2
0x40003cc	     0xfb68563feff	           movzx eax, byte [rbp - 0x19d]	       155	socks.c	FUNCTION_2	IF_3
0x40003d3	          0x83f001	                              xor eax, 1	       155	socks.c	FUNCTION_2	IF_3
0x40003d6	            0x84c0	                             test al, al	       155	socks.c	FUNCTION_2	IF_3
0x40003d8	     0xf84d3010000	                            je 0x40005b1	       155	socks.c	FUNCTION_2	IF_3
0x40003de	    0x48c78588feff	              mov qword [rbp - 0x178], 0	       157	socks.c	FUNCTION_2	IF_3
0x40003e9	    0x488d8d80feff	                  lea rcx, [rbp - 0x180]	       160	socks.c	FUNCTION_2	IF_3	CALL_6
0x40003f0	    0x8b954cfeffff	            mov edx, dword [rbp - 0x1b4]	       160	socks.c	FUNCTION_2	IF_3	CALL_6
0x40003f6	    0x488bb550feff	            mov rsi, qword [rbp - 0x1b0]	       160	socks.c	FUNCTION_2	IF_3	CALL_6
0x40003fd	    0x488b8540feff	            mov rax, qword [rbp - 0x1c0]	       160	socks.c	FUNCTION_2	IF_3	CALL_6
0x4000404	          0x4889c7	                            mov rdi, rax	       160	socks.c	FUNCTION_2	IF_3	CALL_6
0x4000407	      0xe800000000	                          call 0x400040c	       160	socks.c	FUNCTION_2	IF_3	CALL_6
0x400040c	    0x898568feffff	            mov dword [rbp - 0x198], eax	       160	socks.c	FUNCTION_2	IF_3	CALL_6
0x4000412	    0x83bd68feffff	cmp dword [rbp - 0x198], 0xffffffffffffffff	       162	socks.c	FUNCTION_2	IF_3	IF_4
0x4000419	            0x750a	                           jne 0x4000425	       162	socks.c	FUNCTION_2	IF_3	IF_4
0x400041b	      0xb805000000	                              mov eax, 5	       163	socks.c	FUNCTION_2	IF_3	IF_4
0x4000420	      0xe93a070000	                           jmp 0x4000b5f	       163	socks.c	FUNCTION_2	IF_3	IF_4
0x4000425	    0x83bd68feffff	              cmp dword [rbp - 0x198], 1	       165	socks.c	FUNCTION_2	IF_3	IF_5
0x400042c	            0x7519	                           jne 0x4000447	       165	socks.c	FUNCTION_2	IF_3	IF_5
0x400042e	    0x488d9580feff	                  lea rdx, [rbp - 0x180]	       167	socks.c	FUNCTION_2	IF_3	CALL_7
0x4000435	    0x488b8540feff	            mov rax, qword [rbp - 0x1c0]	       167	socks.c	FUNCTION_2	IF_3	CALL_7
0x400043c	          0x4889d6	                            mov rsi, rdx	       167	socks.c	FUNCTION_2	IF_3	CALL_7
0x400043f	          0x4889c7	                            mov rdi, rax	       167	socks.c	FUNCTION_2	IF_3	CALL_7
0x4000442	      0xe800000000	                          call 0x4000447	       167	socks.c	FUNCTION_2	IF_3	CALL_7
0x4000447	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	       173	socks.c	FUNCTION_2	IF_3	IF_6
0x400044e	          0x4885c0	                           test rax, rax	       173	socks.c	FUNCTION_2	IF_3	IF_6
0x4000451	            0x7411	                            je 0x4000464	       173	socks.c	FUNCTION_2	IF_3	IF_6
0x4000453	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	       174	socks.c	FUNCTION_2	IF_3	IF_6
0x400045a	          0x488b00	                    mov rax, qword [rax]	       174	socks.c	FUNCTION_2	IF_3	IF_6
0x400045d	    0x48898588feff	            mov qword [rbp - 0x178], rax	       174	socks.c	FUNCTION_2	IF_3	IF_6
0x4000464	    0x4883bd88feff	              cmp qword [rbp - 0x178], 0	       175	socks.c	FUNCTION_2	IF_3	IF_7
0x400046c	     0xf8409010000	                            je 0x400057b	       175	socks.c	FUNCTION_2	IF_3	IF_7
0x4000472	    0x488d8db0feff	                  lea rcx, [rbp - 0x150]	       177	socks.c	FUNCTION_2	IF_3	IF_7	CALL_8
0x4000479	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	       177	socks.c	FUNCTION_2	IF_3	IF_7	CALL_8
0x4000480	      0xba40000000	                           mov edx, 0x40	       177	socks.c	FUNCTION_2	IF_3	IF_7	CALL_8
0x4000485	          0x4889ce	                            mov rsi, rcx	       177	socks.c	FUNCTION_2	IF_3	IF_7	CALL_8
0x4000488	          0x4889c7	                            mov rdi, rax	       177	socks.c	FUNCTION_2	IF_3	IF_7	CALL_8
0x400048b	      0xe800000000	                          call 0x4000490	       177	socks.c	FUNCTION_2	IF_3	IF_7	CALL_8
0x4000490	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	       179	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x4000497	          0x8b4004	                mov eax, dword [rax + 4]	       179	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x400049a	          0x83f802	                              cmp eax, 2	       179	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x400049d	     0xf8592000000	                           jne 0x4000535	       179	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x40004a3	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	       182	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x40004aa	        0x488b4020	            mov rax, qword [rax + 0x20] 	       182	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x40004ae	    0x488985a0feff	            mov qword [rbp - 0x160], rax	       182	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x40004b5	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	       183	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x40004bc	        0x4883c004	                              add rax, 4	       183	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x40004c0	           0xfb600	                   movzx eax, byte [rax]	       183	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x40004c3	    0x8885f4feffff	              mov byte [rbp - 0x10c], al	       183	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x40004c9	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	       184	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x40004d0	        0x4883c004	                              add rax, 4	       184	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x40004d4	        0x4883c001	                              add rax, 1	       184	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x40004d8	           0xfb600	                   movzx eax, byte [rax]	       184	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x40004db	    0x8885f5feffff	              mov byte [rbp - 0x10b], al	       184	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x40004e1	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	       185	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x40004e8	        0x4883c004	                              add rax, 4	       185	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x40004ec	        0x4883c002	                              add rax, 2	       185	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x40004f0	           0xfb600	                   movzx eax, byte [rax]	       185	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x40004f3	    0x8885f6feffff	              mov byte [rbp - 0x10a], al	       185	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x40004f9	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	       186	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x4000500	        0x4883c004	                              add rax, 4	       186	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x4000504	        0x4883c003	                              add rax, 3	       186	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x4000508	           0xfb600	                   movzx eax, byte [rax]	       186	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x400050b	    0x8885f7feffff	              mov byte [rbp - 0x109], al	       186	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x4000511	    0x488d95b0feff	                  lea rdx, [rbp - 0x150]	       188	socks.c	FUNCTION_2	IF_3	IF_7	IF_8	CALL_9
0x4000518	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	       188	socks.c	FUNCTION_2	IF_3	IF_7	IF_8	CALL_9
0x400051f	    0x488d35000000	                   lea rsi, [0x04000526]	       188	socks.c	FUNCTION_2	IF_3	IF_7	IF_8	CALL_9
0x4000526	          0x4889c7	                            mov rdi, rax	       188	socks.c	FUNCTION_2	IF_3	IF_7	IF_8	CALL_9
0x4000529	      0xb800000000	                              mov eax, 0	       188	socks.c	FUNCTION_2	IF_3	IF_7	IF_8	CALL_9
0x400052e	      0xe800000000	                          call 0x4000533	       188	socks.c	FUNCTION_2	IF_3	IF_7	IF_8	CALL_9
0x4000533	            0xeb2d	                           jmp 0x4000562	       188	socks.c	FUNCTION_2	IF_3	IF_7	IF_8	CALL_9
0x4000535	    0x48c78588feff	              mov qword [rbp - 0x178], 0	       191	socks.c	FUNCTION_2	IF_3	IF_7	ELSE_1
0x4000540	    0x488d95b0feff	                  lea rdx, [rbp - 0x150]	       193	socks.c	FUNCTION_2	IF_3	IF_7	ELSE_1	CALL_10
0x4000547	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	       193	socks.c	FUNCTION_2	IF_3	IF_7	ELSE_1	CALL_10
0x400054e	    0x488d35000000	                   lea rsi, [0x04000555]	       193	socks.c	FUNCTION_2	IF_3	IF_7	ELSE_1	CALL_10
0x4000555	          0x4889c7	                            mov rdi, rax	       193	socks.c	FUNCTION_2	IF_3	IF_7	ELSE_1	CALL_10
0x4000558	      0xb800000000	                              mov eax, 0	       193	socks.c	FUNCTION_2	IF_3	IF_7	ELSE_1	CALL_10
0x400055d	      0xe800000000	                          call 0x4000562	       193	socks.c	FUNCTION_2	IF_3	IF_7	ELSE_1	CALL_10
0x4000562	    0x488b9580feff	            mov rdx, qword [rbp - 0x180]	       196	socks.c	FUNCTION_2	IF_3	IF_7	CALL_11
0x4000569	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	       196	socks.c	FUNCTION_2	IF_3	IF_7	CALL_11
0x4000570	          0x4889d6	                            mov rsi, rdx	       196	socks.c	FUNCTION_2	IF_3	IF_7	CALL_11
0x4000573	          0x4889c7	                            mov rdi, rax	       196	socks.c	FUNCTION_2	IF_3	IF_7	CALL_11
0x4000576	      0xe800000000	                          call 0x400057b	       196	socks.c	FUNCTION_2	IF_3	IF_7	CALL_11
0x400057b	    0x4883bd88feff	              cmp qword [rbp - 0x178], 0	       198	socks.c	FUNCTION_2	IF_3	IF_9
0x4000583	            0x752c	                           jne 0x40005b1	       198	socks.c	FUNCTION_2	IF_3	IF_9
0x4000585	    0x488b9550feff	            mov rdx, qword [rbp - 0x1b0]	       199	socks.c	FUNCTION_2	IF_3	IF_9	CALL_12
0x400058c	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	       199	socks.c	FUNCTION_2	IF_3	IF_9	CALL_12
0x4000593	    0x488d35000000	                   lea rsi, [0x0400059a]	       199	socks.c	FUNCTION_2	IF_3	IF_9	CALL_12
0x400059a	          0x4889c7	                            mov rdi, rax	       199	socks.c	FUNCTION_2	IF_3	IF_9	CALL_12
0x400059d	      0xb800000000	                              mov eax, 0	       199	socks.c	FUNCTION_2	IF_3	IF_9	CALL_12
0x40005a2	      0xe800000000	                          call 0x40005a7	       199	socks.c	FUNCTION_2	IF_3	IF_9	CALL_12
0x40005a7	      0xb806000000	                              mov eax, 6	       201	socks.c	FUNCTION_2	IF_3	IF_9
0x40005ac	      0xe9ae050000	                           jmp 0x4000b5f	       201	socks.c	FUNCTION_2	IF_3	IF_9
0x40005b1	    0xc685f8feffff	               mov byte [rbp - 0x108], 0	       208	socks.c	FUNCTION_2
0x40005b8	    0x4883bd58feff	              cmp qword [rbp - 0x1a8], 0	       209	socks.c	FUNCTION_2	IF_10
0x40005c0	            0x7470	                            je 0x4000632	       209	socks.c	FUNCTION_2	IF_10
0x40005c2	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	       210	socks.c	FUNCTION_2	IF_10	CALL_13
0x40005c9	          0x4889c7	                            mov rdi, rax	       210	socks.c	FUNCTION_2	IF_10	CALL_13
0x40005cc	      0xe800000000	                          call 0x40005d1	       210	socks.c	FUNCTION_2	IF_10	CALL_13
0x40005d1	    0x488985a8feff	            mov qword [rbp - 0x158], rax	       210	socks.c	FUNCTION_2	IF_10	CALL_13
0x40005d8	    0x4881bda8feff	          cmp qword [rbp - 0x158], 0xfd 	       211	socks.c	FUNCTION_2	IF_10	IF_11
0x40005e3	            0x7625	                           jbe 0x400060a	       211	socks.c	FUNCTION_2	IF_10	IF_11
0x40005e5	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	       212	socks.c	FUNCTION_2	IF_10	IF_11	CALL_14
0x40005ec	    0x488d35000000	                   lea rsi, [0x040005f3]	       212	socks.c	FUNCTION_2	IF_10	IF_11	CALL_14
0x40005f3	          0x4889c7	                            mov rdi, rax	       212	socks.c	FUNCTION_2	IF_10	IF_11	CALL_14
0x40005f6	      0xb800000000	                              mov eax, 0	       212	socks.c	FUNCTION_2	IF_10	IF_11	CALL_14
0x40005fb	      0xe800000000	                          call 0x4000600	       212	socks.c	FUNCTION_2	IF_10	IF_11	CALL_14
0x4000600	      0xb807000000	                              mov eax, 7	       213	socks.c	FUNCTION_2	IF_10	IF_11
0x4000605	      0xe955050000	                           jmp 0x4000b5f	       213	socks.c	FUNCTION_2	IF_10	IF_11
0x400060a	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       216	socks.c	FUNCTION_2	IF_10	CALL_15
0x4000611	        0x488d5001	                      lea rdx, [rax + 1]	       216	socks.c	FUNCTION_2	IF_10	CALL_15
0x4000615	    0x488d85f0feff	                  lea rax, [rbp - 0x110]	       216	socks.c	FUNCTION_2	IF_10	CALL_15
0x400061c	        0x4883c008	                              add rax, 8	       216	socks.c	FUNCTION_2	IF_10	CALL_15
0x4000620	    0x488b8d58feff	            mov rcx, qword [rbp - 0x1a8]	       216	socks.c	FUNCTION_2	IF_10	CALL_15
0x4000627	          0x4889ce	                            mov rsi, rcx	       216	socks.c	FUNCTION_2	IF_10	CALL_15
0x400062a	          0x4889c7	                            mov rdi, rax	       216	socks.c	FUNCTION_2	IF_10	CALL_15
0x400062d	      0xe800000000	                          call 0x4000632	       216	socks.c	FUNCTION_2	IF_10	CALL_15
0x4000632	    0x48c78590feff	              mov qword [rbp - 0x170], 0	       225	socks.c	FUNCTION_2
0x400063d	    0x488d85f0feff	                  lea rax, [rbp - 0x110]	       227	socks.c	FUNCTION_2	CALL_16
0x4000644	        0x4883c008	                              add rax, 8	       227	socks.c	FUNCTION_2	CALL_16
0x4000648	          0x4889c7	                            mov rdi, rax	       227	socks.c	FUNCTION_2	CALL_16
0x400064b	      0xe800000000	                          call 0x4000650	       227	socks.c	FUNCTION_2	CALL_16
0x4000650	          0x83c009	                              add eax, 9	       226	socks.c	FUNCTION_2
0x4000653	    0x89856cfeffff	            mov dword [rbp - 0x194], eax	       226	socks.c	FUNCTION_2
0x4000659	    0x80bd63feffff	               cmp byte [rbp - 0x19d], 0	       230	socks.c	FUNCTION_2	IF_12
0x4000660	     0xf8482000000	                            je 0x40006e8	       230	socks.c	FUNCTION_2	IF_12
0x4000666	    0xc685f4feffff	               mov byte [rbp - 0x10c], 0	       231	socks.c	FUNCTION_2	IF_12
0x400066d	    0xc685f5feffff	               mov byte [rbp - 0x10b], 0	       232	socks.c	FUNCTION_2	IF_12
0x4000674	    0xc685f6feffff	               mov byte [rbp - 0x10a], 0	       233	socks.c	FUNCTION_2	IF_12
0x400067b	    0xc685f7feffff	               mov byte [rbp - 0x109], 1	       234	socks.c	FUNCTION_2	IF_12
0x4000682	    0x488b8550feff	            mov rax, qword [rbp - 0x1b0]	       236	socks.c	FUNCTION_2	IF_12	CALL_17
0x4000689	          0x4889c7	                            mov rdi, rax	       236	socks.c	FUNCTION_2	IF_12	CALL_17
0x400068c	      0xe800000000	                          call 0x4000691	       236	socks.c	FUNCTION_2	IF_12	CALL_17
0x4000691	        0x4883c001	                              add rax, 1	       236	socks.c	FUNCTION_2	IF_12	CALL_17
0x4000695	    0x48898590feff	            mov qword [rbp - 0x170], rax	       236	socks.c	FUNCTION_2	IF_12	CALL_17
0x400069c	    0x8b856cfeffff	            mov eax, dword [rbp - 0x194]	       237	socks.c	FUNCTION_2	IF_12	IF_13
0x40006a2	          0x4863d0	                         movsxd rdx, eax	       237	socks.c	FUNCTION_2	IF_12	IF_13
0x40006a5	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       237	socks.c	FUNCTION_2	IF_12	IF_13
0x40006ac	          0x4801d0	                            add rax, rdx	       237	socks.c	FUNCTION_2	IF_12	IF_13
0x40006af	    0x483d06010000	                          cmp rax, 0x106	       237	socks.c	FUNCTION_2	IF_12	IF_13
0x40006b5	            0x7f26	                            jg 0x40006dd	       237	socks.c	FUNCTION_2	IF_12	IF_13
0x40006b7	    0x8b856cfeffff	            mov eax, dword [rbp - 0x194]	       238	socks.c	FUNCTION_2	IF_12	CALL_18
0x40006bd	            0x4898	                                    cdqe	       238	socks.c	FUNCTION_2	IF_12	CALL_18
0x40006bf	    0x488d95f0feff	                  lea rdx, [rbp - 0x110]	       238	socks.c	FUNCTION_2	IF_12	CALL_18
0x40006c6	          0x4801c2	                            add rdx, rax	       238	socks.c	FUNCTION_2	IF_12	CALL_18
0x40006c9	    0x488b8550feff	            mov rax, qword [rbp - 0x1b0]	       238	socks.c	FUNCTION_2	IF_12	CALL_18
0x40006d0	          0x4889c6	                            mov rsi, rax	       238	socks.c	FUNCTION_2	IF_12	CALL_18
0x40006d3	          0x4889d7	                            mov rdi, rdx	       238	socks.c	FUNCTION_2	IF_12	CALL_18
0x40006d6	      0xe800000000	                          call 0x40006db	       238	socks.c	FUNCTION_2	IF_12	CALL_18
0x40006db	            0xeb0b	                           jmp 0x40006e8	       238	socks.c	FUNCTION_2	IF_12	CALL_18
0x40006dd	    0x48c78590feff	              mov qword [rbp - 0x170], 0	       240	socks.c	FUNCTION_2	IF_12	ELSE_2
0x40006e8	    0x8b856cfeffff	            mov eax, dword [rbp - 0x194]	       245	socks.c	FUNCTION_2
0x40006ee	          0x4863d0	                         movsxd rdx, eax	       245	socks.c	FUNCTION_2
0x40006f1	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       245	socks.c	FUNCTION_2
0x40006f8	          0x4801d0	                            add rax, rdx	       245	socks.c	FUNCTION_2
0x40006fb	          0x4889c7	                            mov rdi, rax	       244	socks.c	FUNCTION_2	CALL_19
0x40006fe	    0x488d8d80feff	                  lea rcx, [rbp - 0x180]	       244	socks.c	FUNCTION_2	CALL_19
0x4000705	    0x488d95f0feff	                  lea rdx, [rbp - 0x110]	       244	socks.c	FUNCTION_2	CALL_19
0x400070c	    0x8bb564feffff	            mov esi, dword [rbp - 0x19c]	       244	socks.c	FUNCTION_2	CALL_19
0x4000712	    0x488b8540feff	            mov rax, qword [rbp - 0x1c0]	       244	socks.c	FUNCTION_2	CALL_19
0x4000719	          0x4989c8	                             mov r8, rcx	       244	socks.c	FUNCTION_2	CALL_19
0x400071c	          0x4889f9	                            mov rcx, rdi	       244	socks.c	FUNCTION_2	CALL_19
0x400071f	          0x4889c7	                            mov rdi, rax	       244	socks.c	FUNCTION_2	CALL_19
0x4000722	      0xe800000000	                          call 0x4000727	       244	socks.c	FUNCTION_2	CALL_19
0x4000727	    0x898570feffff	            mov dword [rbp - 0x190], eax	       244	socks.c	FUNCTION_2	CALL_19
0x400072d	    0x83bd70feffff	              cmp dword [rbp - 0x190], 0	       247	socks.c	FUNCTION_2	IF_14
0x4000734	            0x751f	                           jne 0x4000755	       247	socks.c	FUNCTION_2	IF_14
0x4000736	    0x8b856cfeffff	            mov eax, dword [rbp - 0x194]	       247	socks.c	FUNCTION_2	IF_14
0x400073c	          0x4863d0	                         movsxd rdx, eax	       247	socks.c	FUNCTION_2	IF_14
0x400073f	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	       247	socks.c	FUNCTION_2	IF_14
0x4000746	          0x4801c2	                            add rdx, rax	       247	socks.c	FUNCTION_2	IF_14
0x4000749	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	       247	socks.c	FUNCTION_2	IF_14
0x4000750	          0x4839c2	                            cmp rdx, rax	       247	socks.c	FUNCTION_2	IF_14
0x4000753	            0x7425	                            je 0x400077a	       247	socks.c	FUNCTION_2	IF_14
0x4000755	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	       248	socks.c	FUNCTION_2	IF_14	CALL_20
0x400075c	    0x488d35000000	                   lea rsi, [0x04000763]	       248	socks.c	FUNCTION_2	IF_14	CALL_20
0x4000763	          0x4889c7	                            mov rdi, rax	       248	socks.c	FUNCTION_2	IF_14	CALL_20
0x4000766	      0xb800000000	                              mov eax, 0	       248	socks.c	FUNCTION_2	IF_14	CALL_20
0x400076b	      0xe800000000	                          call 0x4000770	       248	socks.c	FUNCTION_2	IF_14	CALL_20
0x4000770	      0xb807000000	                              mov eax, 7	       249	socks.c	FUNCTION_2	IF_14
0x4000775	      0xe9e5030000	                           jmp 0x4000b5f	       249	socks.c	FUNCTION_2	IF_14
0x400077a	    0x80bd63feffff	               cmp byte [rbp - 0x19d], 0	       251	socks.c	FUNCTION_2	IF_15
0x4000781	     0xf8499000000	                            je 0x4000820	       251	socks.c	FUNCTION_2	IF_15
0x4000787	    0x4883bd90feff	              cmp qword [rbp - 0x170], 0	       251	socks.c	FUNCTION_2	IF_15
0x400078f	     0xf858b000000	                           jne 0x4000820	       251	socks.c	FUNCTION_2	IF_15
0x4000795	    0x488b8550feff	            mov rax, qword [rbp - 0x1b0]	       253	socks.c	FUNCTION_2	IF_15	CALL_21
0x400079c	          0x4889c7	                            mov rdi, rax	       253	socks.c	FUNCTION_2	IF_15	CALL_21
0x400079f	      0xe800000000	                          call 0x40007a4	       253	socks.c	FUNCTION_2	IF_15	CALL_21
0x40007a4	        0x4883c001	                              add rax, 1	       253	socks.c	FUNCTION_2	IF_15	CALL_21
0x40007a8	    0x48898590feff	            mov qword [rbp - 0x170], rax	       253	socks.c	FUNCTION_2	IF_15	CALL_21
0x40007af	    0x488b8d90feff	            mov rcx, qword [rbp - 0x170]	       254	socks.c	FUNCTION_2	IF_15	CALL_22
0x40007b6	    0x488dbd80feff	                  lea rdi, [rbp - 0x180]	       254	socks.c	FUNCTION_2	IF_15	CALL_22
0x40007bd	    0x488b9550feff	            mov rdx, qword [rbp - 0x1b0]	       254	socks.c	FUNCTION_2	IF_15	CALL_22
0x40007c4	    0x8bb564feffff	            mov esi, dword [rbp - 0x19c]	       254	socks.c	FUNCTION_2	IF_15	CALL_22
0x40007ca	    0x488b8540feff	            mov rax, qword [rbp - 0x1c0]	       254	socks.c	FUNCTION_2	IF_15	CALL_22
0x40007d1	          0x4989f8	                             mov r8, rdi	       254	socks.c	FUNCTION_2	IF_15	CALL_22
0x40007d4	          0x4889c7	                            mov rdi, rax	       254	socks.c	FUNCTION_2	IF_15	CALL_22
0x40007d7	      0xe800000000	                          call 0x40007dc	       254	socks.c	FUNCTION_2	IF_15	CALL_22
0x40007dc	    0x898570feffff	            mov dword [rbp - 0x190], eax	       254	socks.c	FUNCTION_2	IF_15	CALL_22
0x40007e2	    0x83bd70feffff	              cmp dword [rbp - 0x190], 0	       256	socks.c	FUNCTION_2	IF_15	IF_16
0x40007e9	            0x7510	                           jne 0x40007fb	       256	socks.c	FUNCTION_2	IF_15	IF_16
0x40007eb	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	       256	socks.c	FUNCTION_2	IF_15	IF_16
0x40007f2	    0x483b8590feff	            cmp rax, qword [rbp - 0x170]	       256	socks.c	FUNCTION_2	IF_15	IF_16
0x40007f9	            0x7425	                            je 0x4000820	       256	socks.c	FUNCTION_2	IF_15	IF_16
0x40007fb	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	       257	socks.c	FUNCTION_2	IF_15	IF_16	CALL_23
0x4000802	    0x488d35000000	                   lea rsi, [0x04000809]	       257	socks.c	FUNCTION_2	IF_15	IF_16	CALL_23
0x4000809	          0x4889c7	                            mov rdi, rax	       257	socks.c	FUNCTION_2	IF_15	IF_16	CALL_23
0x400080c	      0xb800000000	                              mov eax, 0	       257	socks.c	FUNCTION_2	IF_15	IF_16	CALL_23
0x4000811	      0xe800000000	                          call 0x4000816	       257	socks.c	FUNCTION_2	IF_15	IF_16	CALL_23
0x4000816	      0xb807000000	                              mov eax, 7	       258	socks.c	FUNCTION_2	IF_15	IF_16
0x400081b	      0xe93f030000	                           jmp 0x4000b5f	       258	socks.c	FUNCTION_2	IF_15	IF_16
0x4000820	    0xc7856cfeffff	              mov dword [rbp - 0x194], 8	       262	socks.c	FUNCTION_2
0x400082a	    0x8b856cfeffff	            mov eax, dword [rbp - 0x194]	       265	socks.c	FUNCTION_2	CALL_24
0x4000830	          0x4863c8	                         movsxd rcx, eax	       265	socks.c	FUNCTION_2	CALL_24
0x4000833	    0x488dbd78feff	                  lea rdi, [rbp - 0x188]	       265	socks.c	FUNCTION_2	CALL_24
0x400083a	    0x488d95f0feff	                  lea rdx, [rbp - 0x110]	       265	socks.c	FUNCTION_2	CALL_24
0x4000841	    0x8bb564feffff	            mov esi, dword [rbp - 0x19c]	       265	socks.c	FUNCTION_2	CALL_24
0x4000847	    0x488b8540feff	            mov rax, qword [rbp - 0x1c0]	       265	socks.c	FUNCTION_2	CALL_24
0x400084e	          0x4989f8	                             mov r8, rdi	       265	socks.c	FUNCTION_2	CALL_24
0x4000851	          0x4889c7	                            mov rdi, rax	       265	socks.c	FUNCTION_2	CALL_24
0x4000854	      0xe800000000	                          call 0x4000859	       265	socks.c	FUNCTION_2	CALL_24
0x4000859	    0x898574feffff	            mov dword [rbp - 0x18c], eax	       265	socks.c	FUNCTION_2	CALL_24
0x400085f	    0x83bd74feffff	              cmp dword [rbp - 0x18c], 0	       267	socks.c	FUNCTION_2	IF_17
0x4000866	            0x7515	                           jne 0x400087d	       267	socks.c	FUNCTION_2	IF_17
0x4000868	    0x8b856cfeffff	            mov eax, dword [rbp - 0x194]	       267	socks.c	FUNCTION_2	IF_17
0x400086e	          0x4863d0	                         movsxd rdx, eax	       267	socks.c	FUNCTION_2	IF_17
0x4000871	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	       267	socks.c	FUNCTION_2	IF_17
0x4000878	          0x4839c2	                            cmp rdx, rax	       267	socks.c	FUNCTION_2	IF_17
0x400087b	            0x7425	                            je 0x40008a2	       267	socks.c	FUNCTION_2	IF_17
0x400087d	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	       268	socks.c	FUNCTION_2	IF_17	CALL_25
0x4000884	    0x488d35000000	                   lea rsi, [0x0400088b]	       268	socks.c	FUNCTION_2	IF_17	CALL_25
0x400088b	          0x4889c7	                            mov rdi, rax	       268	socks.c	FUNCTION_2	IF_17	CALL_25
0x400088e	      0xb800000000	                              mov eax, 0	       268	socks.c	FUNCTION_2	IF_17	CALL_25
0x4000893	      0xe800000000	                          call 0x4000898	       268	socks.c	FUNCTION_2	IF_17	CALL_25
0x4000898	      0xb807000000	                              mov eax, 7	       269	socks.c	FUNCTION_2	IF_17
0x400089d	      0xe9bd020000	                           jmp 0x4000b5f	       269	socks.c	FUNCTION_2	IF_17
0x40008a2	     0xfb685f0feff	           movzx eax, byte [rbp - 0x110]	       292	socks.c	FUNCTION_2	IF_18
0x40008a9	            0x84c0	                             test al, al	       292	socks.c	FUNCTION_2	IF_18
0x40008ab	            0x7425	                            je 0x40008d2	       292	socks.c	FUNCTION_2	IF_18
0x40008ad	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	       293	socks.c	FUNCTION_2	IF_18	CALL_26
0x40008b4	    0x488d35000000	                   lea rsi, [0x040008bb]	       293	socks.c	FUNCTION_2	IF_18	CALL_26
0x40008bb	          0x4889c7	                            mov rdi, rax	       293	socks.c	FUNCTION_2	IF_18	CALL_26
0x40008be	      0xb800000000	                              mov eax, 0	       293	socks.c	FUNCTION_2	IF_18	CALL_26
0x40008c3	      0xe800000000	                          call 0x40008c8	       293	socks.c	FUNCTION_2	IF_18	CALL_26
0x40008c8	      0xb807000000	                              mov eax, 7	       295	socks.c	FUNCTION_2	IF_18
0x40008cd	      0xe98d020000	                           jmp 0x4000b5f	       295	socks.c	FUNCTION_2	IF_18
0x40008d2	     0xfb685f1feff	           movzx eax, byte [rbp - 0x10f]	       299	socks.c	FUNCTION_2	SWITCH_1
0x40008d9	           0xfb6c0	                           movzx eax, al	       299	socks.c	FUNCTION_2	SWITCH_1
0x40008dc	          0x83f85b	                           cmp eax, 0x5b	       299	socks.c	FUNCTION_2	SWITCH_1
0x40008df	            0x747a	                            je 0x400095b	       299	socks.c	FUNCTION_2	SWITCH_1
0x40008e1	          0x83f85b	                           cmp eax, 0x5b	       299	socks.c	FUNCTION_2	SWITCH_1
0x40008e4	            0x7f0a	                            jg 0x40008f0	       299	socks.c	FUNCTION_2	SWITCH_1
0x40008e6	          0x83f85a	                           cmp eax, 0x5a	       299	socks.c	FUNCTION_2	SWITCH_1
0x40008e9	            0x741c	                            je 0x4000907	       299	socks.c	FUNCTION_2	SWITCH_1
0x40008eb	      0xe9f1010000	                           jmp 0x4000ae1	       299	socks.c	FUNCTION_2	SWITCH_1
0x40008f0	          0x83f85c	                           cmp eax, 0x5c	       299	socks.c	FUNCTION_2	SWITCH_1
0x40008f3	     0xf84e5000000	                            je 0x40009de	       299	socks.c	FUNCTION_2	SWITCH_1
0x40008f9	          0x83f85d	                           cmp eax, 0x5d	       299	socks.c	FUNCTION_2	SWITCH_1
0x40008fc	     0xf845f010000	                            je 0x4000a61	       299	socks.c	FUNCTION_2	SWITCH_1
0x4000902	      0xe9da010000	                           jmp 0x4000ae1	       299	socks.c	FUNCTION_2	SWITCH_1
0x4000907	    0x80bd63feffff	               cmp byte [rbp - 0x19d], 0	       301	socks.c	FUNCTION_2	SWITCH_1	CALL_27
0x400090e	            0x7409	                            je 0x4000919	       301	socks.c	FUNCTION_2	SWITCH_1	CALL_27
0x4000910	    0x488d05000000	                   lea rax, [0x04000917]	       301	socks.c	FUNCTION_2	SWITCH_1	CALL_27
0x4000917	            0xeb07	                           jmp 0x4000920	       301	socks.c	FUNCTION_2	SWITCH_1	CALL_27
0x4000919	    0x488d05000000	                   lea rax, [0x04000920]	       301	socks.c	FUNCTION_2	SWITCH_1	CALL_27
0x4000920	    0x488b8d98feff	            mov rcx, qword [rbp - 0x168]	       301	socks.c	FUNCTION_2	SWITCH_1	CALL_27
0x4000927	          0x4889c2	                            mov rdx, rax	       301	socks.c	FUNCTION_2	SWITCH_1	CALL_27
0x400092a	    0x488d35000000	                   lea rsi, [0x04000931]	       301	socks.c	FUNCTION_2	SWITCH_1	CALL_27
0x4000931	          0x4889cf	                            mov rdi, rcx	       301	socks.c	FUNCTION_2	SWITCH_1	CALL_27
0x4000934	      0xb800000000	                              mov eax, 0	       301	socks.c	FUNCTION_2	SWITCH_1	CALL_27
0x4000939	      0xe800000000	                          call 0x400093e	       301	socks.c	FUNCTION_2	SWITCH_1	CALL_27
0x400093e	              0x90	                                     nop	       302	socks.c	FUNCTION_2	SWITCH_1
0x400093f	    0x8b8564feffff	            mov eax, dword [rbp - 0x19c]	       344	socks.c	FUNCTION_2	CALL_32
0x4000945	      0xbe01000000	                              mov esi, 1	       344	socks.c	FUNCTION_2	CALL_32
0x400094a	            0x89c7	                            mov edi, eax	       344	socks.c	FUNCTION_2	CALL_32
0x400094c	      0xe800000000	                          call 0x4000951	       344	socks.c	FUNCTION_2	CALL_32
0x4000951	      0xb800000000	                              mov eax, 0	       346	socks.c	FUNCTION_2
0x4000956	      0xe904020000	                           jmp 0x4000b5f	       346	socks.c	FUNCTION_2
0x400095b	     0xfb685f1feff	           movzx eax, byte [rbp - 0x10f]	       310	socks.c	FUNCTION_2	SWITCH_1
0x4000962	           0xfb6f0	                           movzx esi, al	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x4000965	     0xfb685f2feff	           movzx eax, byte [rbp - 0x10e]	       309	socks.c	FUNCTION_2	SWITCH_1
0x400096c	           0xfb6c0	                           movzx eax, al	       309	socks.c	FUNCTION_2	SWITCH_1
0x400096f	          0xc1e008	                              shl eax, 8	       309	socks.c	FUNCTION_2	SWITCH_1
0x4000972	            0x89c2	                            mov edx, eax	       309	socks.c	FUNCTION_2	SWITCH_1
0x4000974	     0xfb685f3feff	           movzx eax, byte [rbp - 0x10d]	       309	socks.c	FUNCTION_2	SWITCH_1
0x400097b	           0xfb6c0	                           movzx eax, al	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x400097e	             0x9c2	                             or edx, eax	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x4000980	          0x4189d1	                            mov r9d, edx	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x4000983	     0xfb685f7feff	           movzx eax, byte [rbp - 0x109]	       308	socks.c	FUNCTION_2	SWITCH_1
0x400098a	        0x440fb6c0	                           movzx r8d, al	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x400098e	     0xfb685f6feff	           movzx eax, byte [rbp - 0x10a]	       308	socks.c	FUNCTION_2	SWITCH_1
0x4000995	           0xfb6f8	                           movzx edi, al	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x4000998	     0xfb685f5feff	           movzx eax, byte [rbp - 0x10b]	       307	socks.c	FUNCTION_2	SWITCH_1
0x400099f	           0xfb6c8	                           movzx ecx, al	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x40009a2	     0xfb685f4feff	           movzx eax, byte [rbp - 0x10c]	       307	socks.c	FUNCTION_2	SWITCH_1
0x40009a9	           0xfb6d0	                           movzx edx, al	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x40009ac	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x40009b3	              0x56	                                push rsi	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x40009b4	            0x4151	                                 push r9	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x40009b6	          0x4589c1	                            mov r9d, r8d	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x40009b9	          0x4189f8	                            mov r8d, edi	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x40009bc	    0x488d35000000	                   lea rsi, [0x040009c3]	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x40009c3	          0x4889c7	                            mov rdi, rax	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x40009c6	      0xb800000000	                              mov eax, 0	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x40009cb	      0xe800000000	                          call 0x40009d0	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x40009d0	        0x4883c410	                           add rsp, 0x10	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x40009d4	      0xb807000000	                              mov eax, 7	       311	socks.c	FUNCTION_2	SWITCH_1
0x40009d9	      0xe981010000	                           jmp 0x4000b5f	       311	socks.c	FUNCTION_2	SWITCH_1
0x40009de	     0xfb685f1feff	           movzx eax, byte [rbp - 0x10f]	       320	socks.c	FUNCTION_2	SWITCH_1
0x40009e5	           0xfb6f0	                           movzx esi, al	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x40009e8	     0xfb685f2feff	           movzx eax, byte [rbp - 0x10e]	       319	socks.c	FUNCTION_2	SWITCH_1
0x40009ef	           0xfb6c0	                           movzx eax, al	       319	socks.c	FUNCTION_2	SWITCH_1
0x40009f2	          0xc1e008	                              shl eax, 8	       319	socks.c	FUNCTION_2	SWITCH_1
0x40009f5	            0x89c2	                            mov edx, eax	       319	socks.c	FUNCTION_2	SWITCH_1
0x40009f7	     0xfb685f3feff	           movzx eax, byte [rbp - 0x10d]	       319	socks.c	FUNCTION_2	SWITCH_1
0x40009fe	           0xfb6c0	                           movzx eax, al	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x4000a01	             0x9c2	                             or edx, eax	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x4000a03	          0x4189d1	                            mov r9d, edx	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x4000a06	     0xfb685f7feff	           movzx eax, byte [rbp - 0x109]	       318	socks.c	FUNCTION_2	SWITCH_1
0x4000a0d	        0x440fb6c0	                           movzx r8d, al	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x4000a11	     0xfb685f6feff	           movzx eax, byte [rbp - 0x10a]	       318	socks.c	FUNCTION_2	SWITCH_1
0x4000a18	           0xfb6f8	                           movzx edi, al	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x4000a1b	     0xfb685f5feff	           movzx eax, byte [rbp - 0x10b]	       317	socks.c	FUNCTION_2	SWITCH_1
0x4000a22	           0xfb6c8	                           movzx ecx, al	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x4000a25	     0xfb685f4feff	           movzx eax, byte [rbp - 0x10c]	       317	socks.c	FUNCTION_2	SWITCH_1
0x4000a2c	           0xfb6d0	                           movzx edx, al	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x4000a2f	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x4000a36	              0x56	                                push rsi	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x4000a37	            0x4151	                                 push r9	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x4000a39	          0x4589c1	                            mov r9d, r8d	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x4000a3c	          0x4189f8	                            mov r8d, edi	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x4000a3f	    0x488d35000000	                   lea rsi, [0x04000a46]	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x4000a46	          0x4889c7	                            mov rdi, rax	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x4000a49	      0xb800000000	                              mov eax, 0	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x4000a4e	      0xe800000000	                          call 0x4000a53	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x4000a53	        0x4883c410	                           add rsp, 0x10	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x4000a57	      0xb807000000	                              mov eax, 7	       321	socks.c	FUNCTION_2	SWITCH_1
0x4000a5c	      0xe9fe000000	                           jmp 0x4000b5f	       321	socks.c	FUNCTION_2	SWITCH_1
0x4000a61	     0xfb685f1feff	           movzx eax, byte [rbp - 0x10f]	       330	socks.c	FUNCTION_2	SWITCH_1
0x4000a68	           0xfb6f0	                           movzx esi, al	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x4000a6b	     0xfb685f2feff	           movzx eax, byte [rbp - 0x10e]	       329	socks.c	FUNCTION_2	SWITCH_1
0x4000a72	           0xfb6c0	                           movzx eax, al	       329	socks.c	FUNCTION_2	SWITCH_1
0x4000a75	          0xc1e008	                              shl eax, 8	       329	socks.c	FUNCTION_2	SWITCH_1
0x4000a78	            0x89c2	                            mov edx, eax	       329	socks.c	FUNCTION_2	SWITCH_1
0x4000a7a	     0xfb685f3feff	           movzx eax, byte [rbp - 0x10d]	       329	socks.c	FUNCTION_2	SWITCH_1
0x4000a81	           0xfb6c0	                           movzx eax, al	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x4000a84	             0x9c2	                             or edx, eax	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x4000a86	          0x4189d1	                            mov r9d, edx	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x4000a89	     0xfb685f7feff	           movzx eax, byte [rbp - 0x109]	       328	socks.c	FUNCTION_2	SWITCH_1
0x4000a90	        0x440fb6c0	                           movzx r8d, al	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x4000a94	     0xfb685f6feff	           movzx eax, byte [rbp - 0x10a]	       328	socks.c	FUNCTION_2	SWITCH_1
0x4000a9b	           0xfb6f8	                           movzx edi, al	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x4000a9e	     0xfb685f5feff	           movzx eax, byte [rbp - 0x10b]	       327	socks.c	FUNCTION_2	SWITCH_1
0x4000aa5	           0xfb6c8	                           movzx ecx, al	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x4000aa8	     0xfb685f4feff	           movzx eax, byte [rbp - 0x10c]	       327	socks.c	FUNCTION_2	SWITCH_1
0x4000aaf	           0xfb6d0	                           movzx edx, al	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x4000ab2	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x4000ab9	              0x56	                                push rsi	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x4000aba	            0x4151	                                 push r9	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x4000abc	          0x4589c1	                            mov r9d, r8d	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x4000abf	          0x4189f8	                            mov r8d, edi	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x4000ac2	    0x488d35000000	                   lea rsi, [0x04000ac9]	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x4000ac9	          0x4889c7	                            mov rdi, rax	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x4000acc	      0xb800000000	                              mov eax, 0	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x4000ad1	      0xe800000000	                          call 0x4000ad6	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x4000ad6	        0x4883c410	                           add rsp, 0x10	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x4000ada	      0xb807000000	                              mov eax, 7	       331	socks.c	FUNCTION_2	SWITCH_1
0x4000adf	            0xeb7e	                           jmp 0x4000b5f	       331	socks.c	FUNCTION_2	SWITCH_1
0x4000ae1	     0xfb685f1feff	           movzx eax, byte [rbp - 0x10f]	       339	socks.c	FUNCTION_2	SWITCH_1
0x4000ae8	           0xfb6f0	                           movzx esi, al	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x4000aeb	     0xfb685f2feff	           movzx eax, byte [rbp - 0x10e]	       338	socks.c	FUNCTION_2	SWITCH_1
0x4000af2	           0xfb6c0	                           movzx eax, al	       338	socks.c	FUNCTION_2	SWITCH_1
0x4000af5	          0xc1e008	                              shl eax, 8	       338	socks.c	FUNCTION_2	SWITCH_1
0x4000af8	            0x89c2	                            mov edx, eax	       338	socks.c	FUNCTION_2	SWITCH_1
0x4000afa	     0xfb685f3feff	           movzx eax, byte [rbp - 0x10d]	       338	socks.c	FUNCTION_2	SWITCH_1
0x4000b01	           0xfb6c0	                           movzx eax, al	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x4000b04	             0x9c2	                             or edx, eax	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x4000b06	          0x4189d1	                            mov r9d, edx	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x4000b09	     0xfb685f7feff	           movzx eax, byte [rbp - 0x109]	       337	socks.c	FUNCTION_2	SWITCH_1
0x4000b10	        0x440fb6c0	                           movzx r8d, al	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x4000b14	     0xfb685f6feff	           movzx eax, byte [rbp - 0x10a]	       337	socks.c	FUNCTION_2	SWITCH_1
0x4000b1b	           0xfb6f8	                           movzx edi, al	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x4000b1e	     0xfb685f5feff	           movzx eax, byte [rbp - 0x10b]	       336	socks.c	FUNCTION_2	SWITCH_1
0x4000b25	           0xfb6c8	                           movzx ecx, al	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x4000b28	     0xfb685f4feff	           movzx eax, byte [rbp - 0x10c]	       336	socks.c	FUNCTION_2	SWITCH_1
0x4000b2f	           0xfb6d0	                           movzx edx, al	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x4000b32	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x4000b39	              0x56	                                push rsi	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x4000b3a	            0x4151	                                 push r9	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x4000b3c	          0x4589c1	                            mov r9d, r8d	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x4000b3f	          0x4189f8	                            mov r8d, edi	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x4000b42	    0x488d35000000	                   lea rsi, [0x04000b49]	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x4000b49	          0x4889c7	                            mov rdi, rax	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x4000b4c	      0xb800000000	                              mov eax, 0	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x4000b51	      0xe800000000	                          call 0x4000b56	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x4000b56	        0x4883c410	                           add rsp, 0x10	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x4000b5a	      0xb807000000	                              mov eax, 7	       340	socks.c	FUNCTION_2	SWITCH_1
0x4000b5f	        0x488b4df8	                mov rcx, qword [rbp - 8]	       347	socks.c	FUNCTION_2
0x4000b63	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       347	socks.c	FUNCTION_2
0x4000b6c	            0x7405	                            je 0x4000b73	       347	socks.c	FUNCTION_2
0x4000b6e	      0xe800000000	                          call 0x4000b73	       347	socks.c	FUNCTION_2
0x4000b73	              0xc9	                                   leave	       347	socks.c	FUNCTION_2
0x4000b74	              0xc3	                                     ret	       347	socks.c	FUNCTION_2
Curl_SOCKS5	WHILE,0:DO,0:FOR,2:ELSE,14:functions,0:CALL,62:SWITCH,0:IF,53	894
0x4000b75	              0x55	                                push rbp	       359	socks.c	FUNCTION_3
0x4000b76	          0x4889e5	                            mov rbp, rsp	       359	socks.c	FUNCTION_3
0x4000b79	            0x4157	                                push r15	       359	socks.c	FUNCTION_3
0x4000b7b	            0x4156	                                push r14	       359	socks.c	FUNCTION_3
0x4000b7d	            0x4155	                                push r13	       359	socks.c	FUNCTION_3
0x4000b7f	            0x4154	                                push r12	       359	socks.c	FUNCTION_3
0x4000b81	              0x53	                                push rbx	       359	socks.c	FUNCTION_3
0x4000b82	    0x4881ec780300	                          sub rsp, 0x378	       359	socks.c	FUNCTION_3
0x4000b89	    0x4889bd98fcff	            mov qword [rbp - 0x368], rdi	       359	socks.c	FUNCTION_3
0x4000b90	    0x4889b590fcff	            mov qword [rbp - 0x370], rsi	       359	socks.c	FUNCTION_3
0x4000b97	    0x48899588fcff	            mov qword [rbp - 0x378], rdx	       359	socks.c	FUNCTION_3
0x4000b9e	    0x898d84fcffff	            mov dword [rbp - 0x37c], ecx	       359	socks.c	FUNCTION_3
0x4000ba4	    0x44898580fcff	            mov dword [rbp - 0x380], r8d	       359	socks.c	FUNCTION_3
0x4000bab	    0x4c898d78fcff	             mov qword [rbp - 0x388], r9	       359	socks.c	FUNCTION_3
0x4000bb2	    0x64488b042528	                mov rax, qword fs:[0x28]	       359	socks.c	FUNCTION_3
0x4000bbb	        0x488945c8	             mov qword [rbp - 0x38], rax	       359	socks.c	FUNCTION_3
0x4000bbf	            0x31c0	                            xor eax, eax	       359	socks.c	FUNCTION_3
0x4000bc1	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	       383	socks.c	FUNCTION_3
0x4000bc8	    0x8b9580fcffff	            mov edx, dword [rbp - 0x380]	       383	socks.c	FUNCTION_3
0x4000bce	          0x4863d2	                         movsxd rdx, edx	       383	socks.c	FUNCTION_3
0x4000bd1	    0x4881c2940000	                           add rdx, 0x94	       383	socks.c	FUNCTION_3
0x4000bd8	        0x8b449008	       mov eax, dword [rax + rdx*4 + 8] 	       383	socks.c	FUNCTION_3
0x4000bdc	    0x8985b4fcffff	            mov dword [rbp - 0x34c], eax	       383	socks.c	FUNCTION_3
0x4000be2	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	       384	socks.c	FUNCTION_3
0x4000be9	          0x488b00	                    mov rax, qword [rax]	       384	socks.c	FUNCTION_3
0x4000bec	    0x48898500fdff	            mov qword [rbp - 0x300], rax	       384	socks.c	FUNCTION_3
0x4000bf3	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	       387	socks.c	FUNCTION_3
0x4000bfa	    0x8b8038010000	           mov eax, dword [rax + 0x138] 	       387	socks.c	FUNCTION_3
0x4000c00	          0x83f805	                              cmp eax, 5	       386	socks.c	FUNCTION_3
0x4000c03	           0xf94c0	                                 sete al	       386	socks.c	FUNCTION_3
0x4000c06	    0x8885a9fcffff	              mov byte [rbp - 0x357], al	       386	socks.c	FUNCTION_3
0x4000c0c	    0x488b8588fcff	            mov rax, qword [rbp - 0x378]	       388	socks.c	FUNCTION_3	CALL_1
0x4000c13	          0x4889c7	                            mov rdi, rax	       388	socks.c	FUNCTION_3	CALL_1
0x4000c16	      0xe800000000	                          call 0x4000c1b	       388	socks.c	FUNCTION_3	CALL_1
0x4000c1b	    0x48898508fdff	            mov qword [rbp - 0x2f8], rax	       388	socks.c	FUNCTION_3	CALL_1
0x4000c22	    0x48c785e0fcff	              mov qword [rbp - 0x320], 0	       389	socks.c	FUNCTION_3
0x4000c2d	    0x488b8500fdff	            mov rax, qword [rbp - 0x300]	       390	socks.c	FUNCTION_3
0x4000c34	    0x488b80480200	           mov rax, qword [rax + 0x248] 	       390	socks.c	FUNCTION_3
0x4000c3b	    0x48898510fdff	            mov qword [rbp - 0x2f0], rax	       390	socks.c	FUNCTION_3
0x4000c42	    0xc685aafcffff	               mov byte [rbp - 0x356], 0	       391	socks.c	FUNCTION_3
0x4000c49	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	       393	socks.c	FUNCTION_3	IF_1
0x4000c50	     0xfb6809e0300	          movzx eax, byte [rax + 0x39e] 	       393	socks.c	FUNCTION_3	IF_1
0x4000c57	            0x84c0	                             test al, al	       393	socks.c	FUNCTION_3	IF_1
0x4000c59	            0x742b	                            je 0x4000c86	       393	socks.c	FUNCTION_3	IF_1
0x4000c5b	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	       394	socks.c	FUNCTION_3	IF_1	CALL_2
0x4000c62	          0x488b00	                    mov rax, qword [rax]	       394	socks.c	FUNCTION_3	IF_1	CALL_2
0x4000c65	    0x8b8d84fcffff	            mov ecx, dword [rbp - 0x37c]	       394	socks.c	FUNCTION_3	IF_1	CALL_2
0x4000c6b	    0x488b9588fcff	            mov rdx, qword [rbp - 0x378]	       394	socks.c	FUNCTION_3	IF_1	CALL_2
0x4000c72	    0x488d35000000	                   lea rsi, [0x04000c79]	       394	socks.c	FUNCTION_3	IF_1	CALL_2
0x4000c79	          0x4889c7	                            mov rdi, rax	       394	socks.c	FUNCTION_3	IF_1	CALL_2
0x4000c7c	      0xb800000000	                              mov eax, 0	       394	socks.c	FUNCTION_3	IF_1	CALL_2
0x4000c81	      0xe800000000	                          call 0x4000c86	       394	socks.c	FUNCTION_3	IF_1	CALL_2
0x4000c86	     0xfb685a9fcff	           movzx eax, byte [rbp - 0x357]	       398	socks.c	FUNCTION_3	IF_2
0x4000c8d	          0x83f001	                              xor eax, 1	       398	socks.c	FUNCTION_3	IF_2
0x4000c90	            0x84c0	                             test al, al	       398	socks.c	FUNCTION_3	IF_2
0x4000c92	            0x7439	                            je 0x4000ccd	       398	socks.c	FUNCTION_3	IF_2
0x4000c94	    0x4881bd08fdff	          cmp qword [rbp - 0x2f8], 0xff 	       398	socks.c	FUNCTION_3	IF_2
0x4000c9f	            0x762c	                           jbe 0x4000ccd	       398	socks.c	FUNCTION_3	IF_2
0x4000ca1	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	       399	socks.c	FUNCTION_3	IF_2	CALL_3
0x4000ca8	          0x488b00	                    mov rax, qword [rax]	       399	socks.c	FUNCTION_3	IF_2	CALL_3
0x4000cab	    0x488b9508fdff	            mov rdx, qword [rbp - 0x2f8]	       399	socks.c	FUNCTION_3	IF_2	CALL_3
0x4000cb2	    0x488d35000000	                   lea rsi, [0x04000cb9]	       399	socks.c	FUNCTION_3	IF_2	CALL_3
0x4000cb9	          0x4889c7	                            mov rdi, rax	       399	socks.c	FUNCTION_3	IF_2	CALL_3
0x4000cbc	      0xb800000000	                              mov eax, 0	       399	socks.c	FUNCTION_3	IF_2	CALL_3
0x4000cc1	      0xe800000000	                          call 0x4000cc6	       399	socks.c	FUNCTION_3	IF_2	CALL_3
0x4000cc6	    0xc685a9fcffff	               mov byte [rbp - 0x357], 1	       401	socks.c	FUNCTION_3	IF_2
0x4000ccd	    0x488b8500fdff	            mov rax, qword [rbp - 0x300]	       405	socks.c	FUNCTION_3	CALL_4
0x4000cd4	      0xba01000000	                              mov edx, 1	       405	socks.c	FUNCTION_3	CALL_4
0x4000cd9	      0xbe00000000	                              mov esi, 0	       405	socks.c	FUNCTION_3	CALL_4
0x4000cde	          0x4889c7	                            mov rdi, rax	       405	socks.c	FUNCTION_3	CALL_4
0x4000ce1	      0xe800000000	                          call 0x4000ce6	       405	socks.c	FUNCTION_3	CALL_4
0x4000ce6	    0x48898518fdff	            mov qword [rbp - 0x2e8], rax	       405	socks.c	FUNCTION_3	CALL_4
0x4000ced	    0x4883bd18fdff	              cmp qword [rbp - 0x2e8], 0	       407	socks.c	FUNCTION_3	IF_3
0x4000cf5	            0x7925	                           jns 0x4000d1c	       407	socks.c	FUNCTION_3	IF_3
0x4000cf7	    0x488b8500fdff	            mov rax, qword [rbp - 0x300]	       409	socks.c	FUNCTION_3	IF_3	CALL_5
0x4000cfe	    0x488d35000000	                   lea rsi, [0x04000d05]	       409	socks.c	FUNCTION_3	IF_3	CALL_5
0x4000d05	          0x4889c7	                            mov rdi, rax	       409	socks.c	FUNCTION_3	IF_3	CALL_5
0x4000d08	      0xb800000000	                              mov eax, 0	       409	socks.c	FUNCTION_3	IF_3	CALL_5
0x4000d0d	      0xe800000000	                          call 0x4000d12	       409	socks.c	FUNCTION_3	IF_3	CALL_5
0x4000d12	      0xb81c000000	                           mov eax, 0x1c	       410	socks.c	FUNCTION_3	IF_3
0x4000d17	      0xe90b100000	                           jmp 0x4001d27	       410	socks.c	FUNCTION_3	IF_3
0x4000d1c	    0x8b85b4fcffff	            mov eax, dword [rbp - 0x34c]	       413	socks.c	FUNCTION_3	CALL_6
0x4000d22	      0xbe01000000	                              mov esi, 1	       413	socks.c	FUNCTION_3	CALL_6
0x4000d27	            0x89c7	                            mov edi, eax	       413	socks.c	FUNCTION_3	CALL_6
0x4000d29	      0xe800000000	                          call 0x4000d2e	       413	socks.c	FUNCTION_3	CALL_6
0x4000d2e	    0x488b9518fdff	            mov rdx, qword [rbp - 0x2e8]	       416	socks.c	FUNCTION_3	CALL_7
0x4000d35	    0x8b85b4fcffff	            mov eax, dword [rbp - 0x34c]	       416	socks.c	FUNCTION_3	CALL_7
0x4000d3b	          0x4889d1	                            mov rcx, rdx	       416	socks.c	FUNCTION_3	CALL_7
0x4000d3e	            0x89c2	                            mov edx, eax	       416	socks.c	FUNCTION_3	CALL_7
0x4000d40	      0xbeffffffff	                     mov esi, 0xffffffff	       416	socks.c	FUNCTION_3	CALL_7
0x4000d45	      0xbfffffffff	                     mov edi, 0xffffffff	       416	socks.c	FUNCTION_3	CALL_7
0x4000d4a	      0xe800000000	                          call 0x4000d4f	       416	socks.c	FUNCTION_3	CALL_7
0x4000d4f	    0x8985b8fcffff	            mov dword [rbp - 0x348], eax	       416	socks.c	FUNCTION_3	CALL_7
0x4000d55	    0x83bdb8fcffff	cmp dword [rbp - 0x348], 0xffffffffffffffff	       418	socks.c	FUNCTION_3	IF_4
0x4000d5c	            0x7528	                           jne 0x4000d86	       418	socks.c	FUNCTION_3	IF_4
0x4000d5e	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	       419	socks.c	FUNCTION_3	IF_4	CALL_8
0x4000d65	          0x488b00	                    mov rax, qword [rax]	       419	socks.c	FUNCTION_3	IF_4	CALL_8
0x4000d68	    0x488d35000000	                   lea rsi, [0x04000d6f]	       419	socks.c	FUNCTION_3	IF_4	CALL_8
0x4000d6f	          0x4889c7	                            mov rdi, rax	       419	socks.c	FUNCTION_3	IF_4	CALL_8
0x4000d72	      0xb800000000	                              mov eax, 0	       419	socks.c	FUNCTION_3	IF_4	CALL_8
0x4000d77	      0xe800000000	                          call 0x4000d7c	       419	socks.c	FUNCTION_3	IF_4	CALL_8
0x4000d7c	      0xb807000000	                              mov eax, 7	       420	socks.c	FUNCTION_3	IF_4
0x4000d81	      0xe9a10f0000	                           jmp 0x4001d27	       420	socks.c	FUNCTION_3	IF_4
0x4000d86	    0x83bdb8fcffff	              cmp dword [rbp - 0x348], 0	       422	socks.c	FUNCTION_3	IF_5
0x4000d8d	            0x7528	                           jne 0x4000db7	       422	socks.c	FUNCTION_3	IF_5
0x4000d8f	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	       423	socks.c	FUNCTION_3	IF_5	CALL_9
0x4000d96	          0x488b00	                    mov rax, qword [rax]	       423	socks.c	FUNCTION_3	IF_5	CALL_9
0x4000d99	    0x488d35000000	                   lea rsi, [0x04000da0]	       423	socks.c	FUNCTION_3	IF_5	CALL_9
0x4000da0	          0x4889c7	                            mov rdi, rax	       423	socks.c	FUNCTION_3	IF_5	CALL_9
0x4000da3	      0xb800000000	                              mov eax, 0	       423	socks.c	FUNCTION_3	IF_5	CALL_9
0x4000da8	      0xe800000000	                          call 0x4000dad	       423	socks.c	FUNCTION_3	IF_5	CALL_9
0x4000dad	      0xb81c000000	                           mov eax, 0x1c	       424	socks.c	FUNCTION_3	IF_5
0x4000db2	      0xe9700f0000	                           jmp 0x4001d27	       424	socks.c	FUNCTION_3	IF_5
0x4000db7	    0x8b85b8fcffff	            mov eax, dword [rbp - 0x348]	       427	socks.c	FUNCTION_3	IF_6
0x4000dbd	          0x83e004	                              and eax, 4	       427	socks.c	FUNCTION_3	IF_6
0x4000dc0	            0x85c0	                           test eax, eax	       427	socks.c	FUNCTION_3	IF_6
0x4000dc2	            0x7428	                            je 0x4000dec	       427	socks.c	FUNCTION_3	IF_6
0x4000dc4	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	       428	socks.c	FUNCTION_3	IF_6	CALL_10
0x4000dcb	          0x488b00	                    mov rax, qword [rax]	       428	socks.c	FUNCTION_3	IF_6	CALL_10
0x4000dce	    0x488d35000000	                   lea rsi, [0x04000dd5]	       428	socks.c	FUNCTION_3	IF_6	CALL_10
0x4000dd5	          0x4889c7	                            mov rdi, rax	       428	socks.c	FUNCTION_3	IF_6	CALL_10
0x4000dd8	      0xb800000000	                              mov eax, 0	       428	socks.c	FUNCTION_3	IF_6	CALL_10
0x4000ddd	      0xe800000000	                          call 0x4000de2	       428	socks.c	FUNCTION_3	IF_6	CALL_10
0x4000de2	      0xb807000000	                              mov eax, 7	       429	socks.c	FUNCTION_3	IF_6
0x4000de7	      0xe93b0f0000	                           jmp 0x4001d27	       429	socks.c	FUNCTION_3	IF_6
0x4000dec	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	       432	socks.c	FUNCTION_3	IF_7
0x4000df3	        0x4883e0fa	             and rax, 0xfffffffffffffffa	       432	socks.c	FUNCTION_3	IF_7
0x4000df7	          0x4885c0	                           test rax, rax	       432	socks.c	FUNCTION_3	IF_7
0x4000dfa	            0x7425	                            je 0x4000e21	       432	socks.c	FUNCTION_3	IF_7
0x4000dfc	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	       433	socks.c	FUNCTION_3	IF_7	CALL_11
0x4000e03	          0x488b00	                    mov rax, qword [rax]	       433	socks.c	FUNCTION_3	IF_7	CALL_11
0x4000e06	    0x488b9510fdff	            mov rdx, qword [rbp - 0x2f0]	       433	socks.c	FUNCTION_3	IF_7	CALL_11
0x4000e0d	    0x488d35000000	                   lea rsi, [0x04000e14]	       433	socks.c	FUNCTION_3	IF_7	CALL_11
0x4000e14	          0x4889c7	                            mov rdi, rax	       433	socks.c	FUNCTION_3	IF_7	CALL_11
0x4000e17	      0xb800000000	                              mov eax, 0	       433	socks.c	FUNCTION_3	IF_7	CALL_11
0x4000e1c	      0xe800000000	                          call 0x4000e21	       433	socks.c	FUNCTION_3	IF_7	CALL_11
0x4000e21	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	       436	socks.c	FUNCTION_3	IF_8
0x4000e28	          0x83e001	                              and eax, 1	       436	socks.c	FUNCTION_3	IF_8
0x4000e2b	          0x4885c0	                           test rax, rax	       436	socks.c	FUNCTION_3	IF_8
0x4000e2e	            0x750b	                           jne 0x4000e3b	       436	socks.c	FUNCTION_3	IF_8
0x4000e30	    0x48c78598fcff	              mov qword [rbp - 0x368], 0	       438	socks.c	FUNCTION_3	IF_8
0x4000e3b	    0xc785acfcffff	              mov dword [rbp - 0x354], 0	       444	socks.c	FUNCTION_3
0x4000e45	    0x8b85acfcffff	            mov eax, dword [rbp - 0x354]	       445	socks.c	FUNCTION_3
0x4000e4b	          0x8d5001	                      lea edx, [rax + 1]	       445	socks.c	FUNCTION_3
0x4000e4e	    0x8995acfcffff	            mov dword [rbp - 0x354], edx	       445	socks.c	FUNCTION_3
0x4000e54	            0x4898	                                    cdqe	       445	socks.c	FUNCTION_3
0x4000e56	    0xc6840570fdff	         mov byte [rbp + rax - 0x290], 5	       445	socks.c	FUNCTION_3
0x4000e5e	    0x8385acfcffff	              add dword [rbp - 0x354], 1	       446	socks.c	FUNCTION_3
0x4000e65	    0x8b85acfcffff	            mov eax, dword [rbp - 0x354]	       447	socks.c	FUNCTION_3
0x4000e6b	          0x8d5001	                      lea edx, [rax + 1]	       447	socks.c	FUNCTION_3
0x4000e6e	    0x8995acfcffff	            mov dword [rbp - 0x354], edx	       447	socks.c	FUNCTION_3
0x4000e74	            0x4898	                                    cdqe	       447	socks.c	FUNCTION_3
0x4000e76	    0xc6840570fdff	         mov byte [rbp + rax - 0x290], 0	       447	socks.c	FUNCTION_3
0x4000e7e	    0x80bdaafcffff	               cmp byte [rbp - 0x356], 0	       448	socks.c	FUNCTION_3	IF_10
0x4000e85	            0x7419	                            je 0x4000ea0	       448	socks.c	FUNCTION_3	IF_10
0x4000e87	    0x8b85acfcffff	            mov eax, dword [rbp - 0x354]	       449	socks.c	FUNCTION_3	IF_10
0x4000e8d	          0x8d5001	                      lea edx, [rax + 1]	       449	socks.c	FUNCTION_3	IF_10
0x4000e90	    0x8995acfcffff	            mov dword [rbp - 0x354], edx	       449	socks.c	FUNCTION_3	IF_10
0x4000e96	            0x4898	                                    cdqe	       449	socks.c	FUNCTION_3	IF_10
0x4000e98	    0xc6840570fdff	         mov byte [rbp + rax - 0x290], 1	       449	socks.c	FUNCTION_3	IF_10
0x4000ea0	    0x4883bd98fcff	              cmp qword [rbp - 0x368], 0	       450	socks.c	FUNCTION_3	IF_11
0x4000ea8	            0x7419	                            je 0x4000ec3	       450	socks.c	FUNCTION_3	IF_11
0x4000eaa	    0x8b85acfcffff	            mov eax, dword [rbp - 0x354]	       451	socks.c	FUNCTION_3	IF_11
0x4000eb0	          0x8d5001	                      lea edx, [rax + 1]	       451	socks.c	FUNCTION_3	IF_11
0x4000eb3	    0x8995acfcffff	            mov dword [rbp - 0x354], edx	       451	socks.c	FUNCTION_3	IF_11
0x4000eb9	            0x4898	                                    cdqe	       451	socks.c	FUNCTION_3	IF_11
0x4000ebb	    0xc6840570fdff	         mov byte [rbp + rax - 0x290], 2	       451	socks.c	FUNCTION_3	IF_11
0x4000ec3	    0x8b85acfcffff	            mov eax, dword [rbp - 0x354]	       453	socks.c	FUNCTION_3
0x4000ec9	          0x83e802	                              sub eax, 2	       453	socks.c	FUNCTION_3
0x4000ecc	    0x888571fdffff	              mov byte [rbp - 0x28f], al	       453	socks.c	FUNCTION_3
0x4000ed2	    0x8b85b4fcffff	            mov eax, dword [rbp - 0x34c]	       455	socks.c	FUNCTION_3	CALL_12
0x4000ed8	      0xbe00000000	                              mov esi, 0	       455	socks.c	FUNCTION_3	CALL_12
0x4000edd	            0x89c7	                            mov edi, eax	       455	socks.c	FUNCTION_3	CALL_12
0x4000edf	      0xe800000000	                          call 0x4000ee4	       455	socks.c	FUNCTION_3	CALL_12
0x4000ee4	    0x8b8d84fcffff	            mov ecx, dword [rbp - 0x37c]	       457	socks.c	FUNCTION_3	CALL_13
0x4000eea	    0x488b9588fcff	            mov rdx, qword [rbp - 0x378]	       457	socks.c	FUNCTION_3	CALL_13
0x4000ef1	    0x488b8500fdff	            mov rax, qword [rbp - 0x300]	       457	socks.c	FUNCTION_3	CALL_13
0x4000ef8	    0x488d35000000	                   lea rsi, [0x04000eff]	       457	socks.c	FUNCTION_3	CALL_13
0x4000eff	          0x4889c7	                            mov rdi, rax	       457	socks.c	FUNCTION_3	CALL_13
0x4000f02	      0xb800000000	                              mov eax, 0	       457	socks.c	FUNCTION_3	CALL_13
0x4000f07	      0xe800000000	                          call 0x4000f0c	       457	socks.c	FUNCTION_3	CALL_13
0x4000f0c	     0xfb68571fdff	           movzx eax, byte [rbp - 0x28f]	       459	socks.c	FUNCTION_3	CALL_14
0x4000f13	           0xfb6c0	                           movzx eax, al	       459	socks.c	FUNCTION_3	CALL_14
0x4000f16	          0x83c002	                              add eax, 2	       459	socks.c	FUNCTION_3	CALL_14
0x4000f19	          0x4863c8	                         movsxd rcx, eax	       459	socks.c	FUNCTION_3	CALL_14
0x4000f1c	    0x488dbdd0fcff	                  lea rdi, [rbp - 0x330]	       459	socks.c	FUNCTION_3	CALL_14
0x4000f23	    0x488d9570fdff	                  lea rdx, [rbp - 0x290]	       459	socks.c	FUNCTION_3	CALL_14
0x4000f2a	    0x8bb5b4fcffff	            mov esi, dword [rbp - 0x34c]	       459	socks.c	FUNCTION_3	CALL_14
0x4000f30	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	       459	socks.c	FUNCTION_3	CALL_14
0x4000f37	          0x4989f8	                             mov r8, rdi	       459	socks.c	FUNCTION_3	CALL_14
0x4000f3a	          0x4889c7	                            mov rdi, rax	       459	socks.c	FUNCTION_3	CALL_14
0x4000f3d	      0xe800000000	                          call 0x4000f42	       459	socks.c	FUNCTION_3	CALL_14
0x4000f42	    0x8985bcfcffff	            mov dword [rbp - 0x344], eax	       459	socks.c	FUNCTION_3	CALL_14
0x4000f48	    0x83bdbcfcffff	              cmp dword [rbp - 0x344], 0	       461	socks.c	FUNCTION_3	IF_12
0x4000f4f	            0x751c	                           jne 0x4000f6d	       461	socks.c	FUNCTION_3	IF_12
0x4000f51	     0xfb68571fdff	           movzx eax, byte [rbp - 0x28f]	       461	socks.c	FUNCTION_3	IF_12
0x4000f58	           0xfb6c0	                           movzx eax, al	       461	socks.c	FUNCTION_3	IF_12
0x4000f5b	          0x83c002	                              add eax, 2	       461	socks.c	FUNCTION_3	IF_12
0x4000f5e	          0x4863d0	                         movsxd rdx, eax	       461	socks.c	FUNCTION_3	IF_12
0x4000f61	    0x488b85d0fcff	            mov rax, qword [rbp - 0x330]	       461	socks.c	FUNCTION_3	IF_12
0x4000f68	          0x4839c2	                            cmp rdx, rax	       461	socks.c	FUNCTION_3	IF_12
0x4000f6b	            0x7425	                            je 0x4000f92	       461	socks.c	FUNCTION_3	IF_12
0x4000f6d	    0x488b8500fdff	            mov rax, qword [rbp - 0x300]	       462	socks.c	FUNCTION_3	IF_12	CALL_15
0x4000f74	    0x488d35000000	                   lea rsi, [0x04000f7b]	       462	socks.c	FUNCTION_3	IF_12	CALL_15
0x4000f7b	          0x4889c7	                            mov rdi, rax	       462	socks.c	FUNCTION_3	IF_12	CALL_15
0x4000f7e	      0xb800000000	                              mov eax, 0	       462	socks.c	FUNCTION_3	IF_12	CALL_15
0x4000f83	      0xe800000000	                          call 0x4000f88	       462	socks.c	FUNCTION_3	IF_12	CALL_15
0x4000f88	      0xb807000000	                              mov eax, 7	       463	socks.c	FUNCTION_3	IF_12
0x4000f8d	      0xe9950d0000	                           jmp 0x4001d27	       463	socks.c	FUNCTION_3	IF_12
0x4000f92	    0x8b85b4fcffff	            mov eax, dword [rbp - 0x34c]	       466	socks.c	FUNCTION_3	CALL_16
0x4000f98	      0xbe01000000	                              mov esi, 1	       466	socks.c	FUNCTION_3	CALL_16
0x4000f9d	            0x89c7	                            mov edi, eax	       466	socks.c	FUNCTION_3	CALL_16
0x4000f9f	      0xe800000000	                          call 0x4000fa4	       466	socks.c	FUNCTION_3	CALL_16
0x4000fa4	    0x488b9518fdff	            mov rdx, qword [rbp - 0x2e8]	       468	socks.c	FUNCTION_3	CALL_17
0x4000fab	    0x8b85b4fcffff	            mov eax, dword [rbp - 0x34c]	       468	socks.c	FUNCTION_3	CALL_17
0x4000fb1	          0x4889d1	                            mov rcx, rdx	       468	socks.c	FUNCTION_3	CALL_17
0x4000fb4	      0xbaffffffff	                     mov edx, 0xffffffff	       468	socks.c	FUNCTION_3	CALL_17
0x4000fb9	      0xbeffffffff	                     mov esi, 0xffffffff	       468	socks.c	FUNCTION_3	CALL_17
0x4000fbe	            0x89c7	                            mov edi, eax	       468	socks.c	FUNCTION_3	CALL_17
0x4000fc0	      0xe800000000	                          call 0x4000fc5	       468	socks.c	FUNCTION_3	CALL_17
0x4000fc5	    0x8985b8fcffff	            mov dword [rbp - 0x348], eax	       468	socks.c	FUNCTION_3	CALL_17
0x4000fcb	    0x83bdb8fcffff	cmp dword [rbp - 0x348], 0xffffffffffffffff	       470	socks.c	FUNCTION_3	IF_13
0x4000fd2	            0x7528	                           jne 0x4000ffc	       470	socks.c	FUNCTION_3	IF_13
0x4000fd4	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	       471	socks.c	FUNCTION_3	IF_13	CALL_18
0x4000fdb	          0x488b00	                    mov rax, qword [rax]	       471	socks.c	FUNCTION_3	IF_13	CALL_18
0x4000fde	    0x488d35000000	                   lea rsi, [0x04000fe5]	       471	socks.c	FUNCTION_3	IF_13	CALL_18
0x4000fe5	          0x4889c7	                            mov rdi, rax	       471	socks.c	FUNCTION_3	IF_13	CALL_18
0x4000fe8	      0xb800000000	                              mov eax, 0	       471	socks.c	FUNCTION_3	IF_13	CALL_18
0x4000fed	      0xe800000000	                          call 0x4000ff2	       471	socks.c	FUNCTION_3	IF_13	CALL_18
0x4000ff2	      0xb807000000	                              mov eax, 7	       472	socks.c	FUNCTION_3	IF_13
0x4000ff7	      0xe92b0d0000	                           jmp 0x4001d27	       472	socks.c	FUNCTION_3	IF_13
0x4000ffc	    0x83bdb8fcffff	              cmp dword [rbp - 0x348], 0	       474	socks.c	FUNCTION_3	IF_14
0x4001003	            0x7528	                           jne 0x400102d	       474	socks.c	FUNCTION_3	IF_14
0x4001005	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	       475	socks.c	FUNCTION_3	IF_14	CALL_19
0x400100c	          0x488b00	                    mov rax, qword [rax]	       475	socks.c	FUNCTION_3	IF_14	CALL_19
0x400100f	    0x488d35000000	                   lea rsi, [0x04001016]	       475	socks.c	FUNCTION_3	IF_14	CALL_19
0x4001016	          0x4889c7	                            mov rdi, rax	       475	socks.c	FUNCTION_3	IF_14	CALL_19
0x4001019	      0xb800000000	                              mov eax, 0	       475	socks.c	FUNCTION_3	IF_14	CALL_19
0x400101e	      0xe800000000	                          call 0x4001023	       475	socks.c	FUNCTION_3	IF_14	CALL_19
0x4001023	      0xb81c000000	                           mov eax, 0x1c	       476	socks.c	FUNCTION_3	IF_14
0x4001028	      0xe9fa0c0000	                           jmp 0x4001d27	       476	socks.c	FUNCTION_3	IF_14
0x400102d	    0x8b85b8fcffff	            mov eax, dword [rbp - 0x348]	       479	socks.c	FUNCTION_3	IF_15
0x4001033	          0x83e004	                              and eax, 4	       479	socks.c	FUNCTION_3	IF_15
0x4001036	            0x85c0	                           test eax, eax	       479	socks.c	FUNCTION_3	IF_15
0x4001038	            0x7428	                            je 0x4001062	       479	socks.c	FUNCTION_3	IF_15
0x400103a	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	       480	socks.c	FUNCTION_3	IF_15	CALL_20
0x4001041	          0x488b00	                    mov rax, qword [rax]	       480	socks.c	FUNCTION_3	IF_15	CALL_20
0x4001044	    0x488d35000000	                   lea rsi, [0x0400104b]	       480	socks.c	FUNCTION_3	IF_15	CALL_20
0x400104b	          0x4889c7	                            mov rdi, rax	       480	socks.c	FUNCTION_3	IF_15	CALL_20
0x400104e	      0xb800000000	                              mov eax, 0	       480	socks.c	FUNCTION_3	IF_15	CALL_20
0x4001053	      0xe800000000	                          call 0x4001058	       480	socks.c	FUNCTION_3	IF_15	CALL_20
0x4001058	      0xb838000000	                           mov eax, 0x38	       481	socks.c	FUNCTION_3	IF_15
0x400105d	      0xe9c50c0000	                           jmp 0x4001d27	       481	socks.c	FUNCTION_3	IF_15
0x4001062	    0x8b85b4fcffff	            mov eax, dword [rbp - 0x34c]	       484	socks.c	FUNCTION_3	CALL_21
0x4001068	      0xbe00000000	                              mov esi, 0	       484	socks.c	FUNCTION_3	CALL_21
0x400106d	            0x89c7	                            mov edi, eax	       484	socks.c	FUNCTION_3	CALL_21
0x400106f	      0xe800000000	                          call 0x4001074	       484	socks.c	FUNCTION_3	CALL_21
0x4001074	    0x488d8dc8fcff	                  lea rcx, [rbp - 0x338]	       486	socks.c	FUNCTION_3	CALL_22
0x400107b	    0x488d9570fdff	                  lea rdx, [rbp - 0x290]	       486	socks.c	FUNCTION_3	CALL_22
0x4001082	    0x8bb5b4fcffff	            mov esi, dword [rbp - 0x34c]	       486	socks.c	FUNCTION_3	CALL_22
0x4001088	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	       486	socks.c	FUNCTION_3	CALL_22
0x400108f	          0x4989c8	                             mov r8, rcx	       486	socks.c	FUNCTION_3	CALL_22
0x4001092	      0xb902000000	                              mov ecx, 2	       486	socks.c	FUNCTION_3	CALL_22
0x4001097	          0x4889c7	                            mov rdi, rax	       486	socks.c	FUNCTION_3	CALL_22
0x400109a	      0xe800000000	                          call 0x400109f	       486	socks.c	FUNCTION_3	CALL_22
0x400109f	    0x8985b8fcffff	            mov dword [rbp - 0x348], eax	       486	socks.c	FUNCTION_3	CALL_22
0x40010a5	    0x83bdb8fcffff	              cmp dword [rbp - 0x348], 0	       487	socks.c	FUNCTION_3	IF_16
0x40010ac	            0x750d	                           jne 0x40010bb	       487	socks.c	FUNCTION_3	IF_16
0x40010ae	    0x488b85c8fcff	            mov rax, qword [rbp - 0x338]	       487	socks.c	FUNCTION_3	IF_16
0x40010b5	        0x4883f802	                              cmp rax, 2	       487	socks.c	FUNCTION_3	IF_16
0x40010b9	            0x7425	                            je 0x40010e0	       487	socks.c	FUNCTION_3	IF_16
0x40010bb	    0x488b8500fdff	            mov rax, qword [rbp - 0x300]	       488	socks.c	FUNCTION_3	IF_16	CALL_23
0x40010c2	    0x488d35000000	                   lea rsi, [0x040010c9]	       488	socks.c	FUNCTION_3	IF_16	CALL_23
0x40010c9	          0x4889c7	                            mov rdi, rax	       488	socks.c	FUNCTION_3	IF_16	CALL_23
0x40010cc	      0xb800000000	                              mov eax, 0	       488	socks.c	FUNCTION_3	IF_16	CALL_23
0x40010d1	      0xe800000000	                          call 0x40010d6	       488	socks.c	FUNCTION_3	IF_16	CALL_23
0x40010d6	      0xb807000000	                              mov eax, 7	       489	socks.c	FUNCTION_3	IF_16
0x40010db	      0xe9470c0000	                           jmp 0x4001d27	       489	socks.c	FUNCTION_3	IF_16
0x40010e0	     0xfb68570fdff	           movzx eax, byte [rbp - 0x290]	       492	socks.c	FUNCTION_3	IF_17
0x40010e7	            0x3c05	                               cmp al, 5	       492	socks.c	FUNCTION_3	IF_17
0x40010e9	            0x7425	                            je 0x4001110	       492	socks.c	FUNCTION_3	IF_17
0x40010eb	    0x488b8500fdff	            mov rax, qword [rbp - 0x300]	       493	socks.c	FUNCTION_3	IF_17	CALL_24
0x40010f2	    0x488d35000000	                   lea rsi, [0x040010f9]	       493	socks.c	FUNCTION_3	IF_17	CALL_24
0x40010f9	          0x4889c7	                            mov rdi, rax	       493	socks.c	FUNCTION_3	IF_17	CALL_24
0x40010fc	      0xb800000000	                              mov eax, 0	       493	socks.c	FUNCTION_3	IF_17	CALL_24
0x4001101	      0xe800000000	                          call 0x4001106	       493	socks.c	FUNCTION_3	IF_17	CALL_24
0x4001106	      0xb807000000	                              mov eax, 7	       494	socks.c	FUNCTION_3	IF_17
0x400110b	      0xe9170c0000	                           jmp 0x4001d27	       494	socks.c	FUNCTION_3	IF_17
0x4001110	     0xfb68571fdff	           movzx eax, byte [rbp - 0x28f]	       496	socks.c	FUNCTION_3	IF_18
0x4001117	            0x84c0	                             test al, al	       496	socks.c	FUNCTION_3	IF_18
0x4001119	     0xf8467030000	                            je 0x4001486	       496	socks.c	FUNCTION_3	IF_18
0x400111f	     0xfb68571fdff	           movzx eax, byte [rbp - 0x28f]	       509	socks.c	FUNCTION_3	ELSE_2	IF_21
0x4001126	            0x3c02	                               cmp al, 2	       509	socks.c	FUNCTION_3	ELSE_2	IF_21
0x4001128	     0xf8590020000	                           jne 0x40013be	       509	socks.c	FUNCTION_3	ELSE_2	IF_21
0x400112e	    0x4883bd98fcff	              cmp qword [rbp - 0x368], 0	       512	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22
0x4001136	            0x7438	                            je 0x4001170	       512	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22
0x4001138	    0x4883bd90fcff	              cmp qword [rbp - 0x370], 0	       512	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22
0x4001140	            0x742e	                            je 0x4001170	       512	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22
0x4001142	    0x488b8598fcff	            mov rax, qword [rbp - 0x368]	       513	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22	CALL_27
0x4001149	          0x4889c7	                            mov rdi, rax	       513	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22	CALL_27
0x400114c	      0xe800000000	                          call 0x4001151	       513	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22	CALL_27
0x4001151	    0x488985e8fcff	            mov qword [rbp - 0x318], rax	       513	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22	CALL_27
0x4001158	    0x488b8590fcff	            mov rax, qword [rbp - 0x370]	       514	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22	CALL_28
0x400115f	          0x4889c7	                            mov rdi, rax	       514	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22	CALL_28
0x4001162	      0xe800000000	                          call 0x4001167	       514	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22	CALL_28
0x4001167	    0x488985f0fcff	            mov qword [rbp - 0x310], rax	       514	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22	CALL_28
0x400116e	            0xeb16	                           jmp 0x4001186	       514	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22	CALL_28
0x4001170	    0x48c785e8fcff	              mov qword [rbp - 0x318], 0	       517	socks.c	FUNCTION_3	ELSE_2	IF_21	ELSE_3
0x400117b	    0x48c785f0fcff	              mov qword [rbp - 0x310], 0	       518	socks.c	FUNCTION_3	ELSE_2	IF_21	ELSE_3
0x4001186	    0x48c785e0fcff	              mov qword [rbp - 0x320], 0	       528	socks.c	FUNCTION_3	ELSE_2	IF_21
0x4001191	    0x488b85e0fcff	            mov rax, qword [rbp - 0x320]	       529	socks.c	FUNCTION_3	ELSE_2	IF_21
0x4001198	        0x488d5001	                      lea rdx, [rax + 1]	       529	socks.c	FUNCTION_3	ELSE_2	IF_21
0x400119c	    0x488995e0fcff	            mov qword [rbp - 0x320], rdx	       529	socks.c	FUNCTION_3	ELSE_2	IF_21
0x40011a3	    0xc6840570fdff	         mov byte [rbp + rax - 0x290], 1	       529	socks.c	FUNCTION_3	ELSE_2	IF_21
0x40011ab	    0x488b85e0fcff	            mov rax, qword [rbp - 0x320]	       530	socks.c	FUNCTION_3	ELSE_2	IF_21
0x40011b2	        0x488d5001	                      lea rdx, [rax + 1]	       530	socks.c	FUNCTION_3	ELSE_2	IF_21
0x40011b6	    0x488995e0fcff	            mov qword [rbp - 0x320], rdx	       530	socks.c	FUNCTION_3	ELSE_2	IF_21
0x40011bd	    0x488b95e8fcff	            mov rdx, qword [rbp - 0x318]	       530	socks.c	FUNCTION_3	ELSE_2	IF_21
0x40011c4	    0x88940570fdff	        mov byte [rbp + rax - 0x290], dl	       530	socks.c	FUNCTION_3	ELSE_2	IF_21
0x40011cb	    0x4883bd98fcff	              cmp qword [rbp - 0x368], 0	       531	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_23
0x40011d3	            0x7435	                            je 0x400120a	       531	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_23
0x40011d5	    0x4883bde8fcff	              cmp qword [rbp - 0x318], 0	       531	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_23
0x40011dd	            0x742b	                            je 0x400120a	       531	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_23
0x40011df	    0x488b85e0fcff	            mov rax, qword [rbp - 0x320]	       532	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_29
0x40011e6	    0x488d9570fdff	                  lea rdx, [rbp - 0x290]	       532	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_29
0x40011ed	        0x488d0c02	                    lea rcx, [rdx + rax]	       532	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_29
0x40011f1	    0x488b95e8fcff	            mov rdx, qword [rbp - 0x318]	       532	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_29
0x40011f8	    0x488b8598fcff	            mov rax, qword [rbp - 0x368]	       532	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_29
0x40011ff	          0x4889c6	                            mov rsi, rax	       532	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_29
0x4001202	          0x4889cf	                            mov rdi, rcx	       532	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_29
0x4001205	      0xe800000000	                          call 0x400120a	       532	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_29
0x400120a	    0x488b95e0fcff	            mov rdx, qword [rbp - 0x320]	       533	socks.c	FUNCTION_3	ELSE_2	IF_21
0x4001211	    0x488b85e8fcff	            mov rax, qword [rbp - 0x318]	       533	socks.c	FUNCTION_3	ELSE_2	IF_21
0x4001218	          0x4801d0	                            add rax, rdx	       533	socks.c	FUNCTION_3	ELSE_2	IF_21
0x400121b	    0x488985e0fcff	            mov qword [rbp - 0x320], rax	       533	socks.c	FUNCTION_3	ELSE_2	IF_21
0x4001222	    0x488b85e0fcff	            mov rax, qword [rbp - 0x320]	       534	socks.c	FUNCTION_3	ELSE_2	IF_21
0x4001229	        0x488d5001	                      lea rdx, [rax + 1]	       534	socks.c	FUNCTION_3	ELSE_2	IF_21
0x400122d	    0x488995e0fcff	            mov qword [rbp - 0x320], rdx	       534	socks.c	FUNCTION_3	ELSE_2	IF_21
0x4001234	    0x488b95f0fcff	            mov rdx, qword [rbp - 0x310]	       534	socks.c	FUNCTION_3	ELSE_2	IF_21
0x400123b	    0x88940570fdff	        mov byte [rbp + rax - 0x290], dl	       534	socks.c	FUNCTION_3	ELSE_2	IF_21
0x4001242	    0x4883bd90fcff	              cmp qword [rbp - 0x370], 0	       535	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_24
0x400124a	            0x7435	                            je 0x4001281	       535	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_24
0x400124c	    0x4883bdf0fcff	              cmp qword [rbp - 0x310], 0	       535	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_24
0x4001254	            0x742b	                            je 0x4001281	       535	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_24
0x4001256	    0x488b85e0fcff	            mov rax, qword [rbp - 0x320]	       536	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_30
0x400125d	    0x488d9570fdff	                  lea rdx, [rbp - 0x290]	       536	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_30
0x4001264	        0x488d0c02	                    lea rcx, [rdx + rax]	       536	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_30
0x4001268	    0x488b95f0fcff	            mov rdx, qword [rbp - 0x310]	       536	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_30
0x400126f	    0x488b8590fcff	            mov rax, qword [rbp - 0x370]	       536	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_30
0x4001276	          0x4889c6	                            mov rsi, rax	       536	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_30
0x4001279	          0x4889cf	                            mov rdi, rcx	       536	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_30
0x400127c	      0xe800000000	                          call 0x4001281	       536	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_30
0x4001281	    0x488b95e0fcff	            mov rdx, qword [rbp - 0x320]	       537	socks.c	FUNCTION_3	ELSE_2	IF_21
0x4001288	    0x488b85f0fcff	            mov rax, qword [rbp - 0x310]	       537	socks.c	FUNCTION_3	ELSE_2	IF_21
0x400128f	          0x4801d0	                            add rax, rdx	       537	socks.c	FUNCTION_3	ELSE_2	IF_21
0x4001292	    0x488985e0fcff	            mov qword [rbp - 0x320], rax	       537	socks.c	FUNCTION_3	ELSE_2	IF_21
0x4001299	    0x488b8de0fcff	            mov rcx, qword [rbp - 0x320]	       539	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_31
0x40012a0	    0x488dbdd0fcff	                  lea rdi, [rbp - 0x330]	       539	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_31
0x40012a7	    0x488d9570fdff	                  lea rdx, [rbp - 0x290]	       539	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_31
0x40012ae	    0x8bb5b4fcffff	            mov esi, dword [rbp - 0x34c]	       539	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_31
0x40012b4	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	       539	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_31
0x40012bb	          0x4989f8	                             mov r8, rdi	       539	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_31
0x40012be	          0x4889c7	                            mov rdi, rax	       539	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_31
0x40012c1	      0xe800000000	                          call 0x40012c6	       539	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_31
0x40012c6	    0x8985bcfcffff	            mov dword [rbp - 0x344], eax	       539	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_31
0x40012cc	    0x83bdbcfcffff	              cmp dword [rbp - 0x344], 0	       540	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_25
0x40012d3	            0x7510	                           jne 0x40012e5	       540	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_25
0x40012d5	    0x488b85d0fcff	            mov rax, qword [rbp - 0x330]	       540	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_25
0x40012dc	    0x483985e0fcff	           cmp qword [rbp - 0x320], rax 	       540	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_25
0x40012e3	            0x7425	                            je 0x400130a	       540	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_25
0x40012e5	    0x488b8500fdff	            mov rax, qword [rbp - 0x300]	       541	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_25	CALL_32
0x40012ec	    0x488d35000000	                   lea rsi, [0x040012f3]	       541	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_25	CALL_32
0x40012f3	          0x4889c7	                            mov rdi, rax	       541	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_25	CALL_32
0x40012f6	      0xb800000000	                              mov eax, 0	       541	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_25	CALL_32
0x40012fb	      0xe800000000	                          call 0x4001300	       541	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_25	CALL_32
0x4001300	      0xb807000000	                              mov eax, 7	       542	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_25
0x4001305	      0xe91d0a0000	                           jmp 0x4001d27	       542	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_25
0x400130a	    0x488d8dc8fcff	                  lea rcx, [rbp - 0x338]	       545	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_33
0x4001311	    0x488d9570fdff	                  lea rdx, [rbp - 0x290]	       545	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_33
0x4001318	    0x8bb5b4fcffff	            mov esi, dword [rbp - 0x34c]	       545	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_33
0x400131e	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	       545	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_33
0x4001325	          0x4989c8	                             mov r8, rcx	       545	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_33
0x4001328	      0xb902000000	                              mov ecx, 2	       545	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_33
0x400132d	          0x4889c7	                            mov rdi, rax	       545	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_33
0x4001330	      0xe800000000	                          call 0x4001335	       545	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_33
0x4001335	    0x8985b8fcffff	            mov dword [rbp - 0x348], eax	       545	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_33
0x400133b	    0x83bdb8fcffff	              cmp dword [rbp - 0x348], 0	       546	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_26
0x4001342	            0x750d	                           jne 0x4001351	       546	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_26
0x4001344	    0x488b85c8fcff	            mov rax, qword [rbp - 0x338]	       546	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_26
0x400134b	        0x4883f802	                              cmp rax, 2	       546	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_26
0x400134f	            0x7425	                            je 0x4001376	       546	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_26
0x4001351	    0x488b8500fdff	            mov rax, qword [rbp - 0x300]	       547	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_26	CALL_34
0x4001358	    0x488d35000000	                   lea rsi, [0x0400135f]	       547	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_26	CALL_34
0x400135f	          0x4889c7	                            mov rdi, rax	       547	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_26	CALL_34
0x4001362	      0xb800000000	                              mov eax, 0	       547	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_26	CALL_34
0x4001367	      0xe800000000	                          call 0x400136c	       547	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_26	CALL_34
0x400136c	      0xb807000000	                              mov eax, 7	       548	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_26
0x4001371	      0xe9b1090000	                           jmp 0x4001d27	       548	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_26
0x4001376	     0xfb68571fdff	           movzx eax, byte [rbp - 0x28f]	       552	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_27
0x400137d	            0x84c0	                             test al, al	       552	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_27
0x400137f	     0xf8401010000	                            je 0x4001486	       552	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_27
0x4001385	     0xfb68571fdff	           movzx eax, byte [rbp - 0x28f]	       554	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_27
0x400138c	           0xfb6c8	                           movzx ecx, al	       553	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_27	CALL_35
0x400138f	     0xfb68570fdff	           movzx eax, byte [rbp - 0x290]	       554	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_27
0x4001396	           0xfb6d0	                           movzx edx, al	       553	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_27	CALL_35
0x4001399	    0x488b8500fdff	            mov rax, qword [rbp - 0x300]	       553	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_27	CALL_35
0x40013a0	    0x488d35000000	                   lea rsi, [0x040013a7]	       553	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_27	CALL_35
0x40013a7	          0x4889c7	                            mov rdi, rax	       553	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_27	CALL_35
0x40013aa	      0xb800000000	                              mov eax, 0	       553	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_27	CALL_35
0x40013af	      0xe800000000	                          call 0x40013b4	       553	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_27	CALL_35
0x40013b4	      0xb807000000	                              mov eax, 7	       555	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_27
0x40013b9	      0xe969090000	                           jmp 0x4001d27	       555	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_27
0x40013be	     0xfb685aafcff	           movzx eax, byte [rbp - 0x356]	       562	socks.c	FUNCTION_3	ELSE_4	IF_28
0x40013c5	          0x83f001	                              xor eax, 1	       562	socks.c	FUNCTION_3	ELSE_4	IF_28
0x40013c8	            0x84c0	                             test al, al	       562	socks.c	FUNCTION_3	ELSE_4	IF_28
0x40013ca	            0x7430	                            je 0x40013fc	       562	socks.c	FUNCTION_3	ELSE_4	IF_28
0x40013cc	     0xfb68571fdff	           movzx eax, byte [rbp - 0x28f]	       562	socks.c	FUNCTION_3	ELSE_4	IF_28
0x40013d3	            0x3c01	                               cmp al, 1	       562	socks.c	FUNCTION_3	ELSE_4	IF_28
0x40013d5	            0x7525	                           jne 0x40013fc	       562	socks.c	FUNCTION_3	ELSE_4	IF_28
0x40013d7	    0x488b8500fdff	            mov rax, qword [rbp - 0x300]	       563	socks.c	FUNCTION_3	ELSE_4	IF_28	CALL_36
0x40013de	    0x488d35000000	                   lea rsi, [0x040013e5]	       563	socks.c	FUNCTION_3	ELSE_4	IF_28	CALL_36
0x40013e5	          0x4889c7	                            mov rdi, rax	       563	socks.c	FUNCTION_3	ELSE_4	IF_28	CALL_36
0x40013e8	      0xb800000000	                              mov eax, 0	       563	socks.c	FUNCTION_3	ELSE_4	IF_28	CALL_36
0x40013ed	      0xe800000000	                          call 0x40013f2	       563	socks.c	FUNCTION_3	ELSE_4	IF_28	CALL_36
0x40013f2	      0xb807000000	                              mov eax, 7	       565	socks.c	FUNCTION_3	ELSE_4	IF_28
0x40013f7	      0xe92b090000	                           jmp 0x4001d27	       565	socks.c	FUNCTION_3	ELSE_4	IF_28
0x40013fc	     0xfb68571fdff	           movzx eax, byte [rbp - 0x28f]	       567	socks.c	FUNCTION_3	ELSE_4	IF_29
0x4001403	            0x3cff	                            cmp al, 0xff	       567	socks.c	FUNCTION_3	ELSE_4	IF_29
0x4001405	            0x755a	                           jne 0x4001461	       567	socks.c	FUNCTION_3	ELSE_4	IF_29
0x4001407	    0x4883bd98fcff	              cmp qword [rbp - 0x368], 0	       568	socks.c	FUNCTION_3	ELSE_4	IF_29	IF_30
0x400140f	            0x740e	                            je 0x400141f	       568	socks.c	FUNCTION_3	ELSE_4	IF_29	IF_30
0x4001411	    0x488b8598fcff	            mov rax, qword [rbp - 0x368]	       568	socks.c	FUNCTION_3	ELSE_4	IF_29	IF_30
0x4001418	           0xfb600	                   movzx eax, byte [rax]	       568	socks.c	FUNCTION_3	ELSE_4	IF_29	IF_30
0x400141b	            0x84c0	                             test al, al	       568	socks.c	FUNCTION_3	ELSE_4	IF_29	IF_30
0x400141d	            0x751d	                           jne 0x400143c	       568	socks.c	FUNCTION_3	ELSE_4	IF_29	IF_30
0x400141f	    0x488b8500fdff	            mov rax, qword [rbp - 0x300]	       569	socks.c	FUNCTION_3	ELSE_4	IF_29	IF_30	CALL_37
0x4001426	    0x488d35000000	                   lea rsi, [0x0400142d]	       569	socks.c	FUNCTION_3	ELSE_4	IF_29	IF_30	CALL_37
0x400142d	          0x4889c7	                            mov rdi, rax	       569	socks.c	FUNCTION_3	ELSE_4	IF_29	IF_30	CALL_37
0x4001430	      0xb800000000	                              mov eax, 0	       569	socks.c	FUNCTION_3	ELSE_4	IF_29	IF_30	CALL_37
0x4001435	      0xe800000000	                          call 0x400143a	       569	socks.c	FUNCTION_3	ELSE_4	IF_29	IF_30	CALL_37
0x400143a	            0xeb1b	                           jmp 0x4001457	       569	socks.c	FUNCTION_3	ELSE_4	IF_29	IF_30	CALL_37
0x400143c	    0x488b8500fdff	            mov rax, qword [rbp - 0x300]	       575	socks.c	FUNCTION_3	ELSE_4	IF_29	ELSE_5	CALL_38
0x4001443	    0x488d35000000	                   lea rsi, [0x0400144a]	       575	socks.c	FUNCTION_3	ELSE_4	IF_29	ELSE_5	CALL_38
0x400144a	          0x4889c7	                            mov rdi, rax	       575	socks.c	FUNCTION_3	ELSE_4	IF_29	ELSE_5	CALL_38
0x400144d	      0xb800000000	                              mov eax, 0	       575	socks.c	FUNCTION_3	ELSE_4	IF_29	ELSE_5	CALL_38
0x4001452	      0xe800000000	                          call 0x4001457	       575	socks.c	FUNCTION_3	ELSE_4	IF_29	ELSE_5	CALL_38
0x4001457	      0xb807000000	                              mov eax, 7	       577	socks.c	FUNCTION_3	ELSE_4	IF_29
0x400145c	      0xe9c6080000	                           jmp 0x4001d27	       577	socks.c	FUNCTION_3	ELSE_4	IF_29
0x4001461	    0x488b8500fdff	            mov rax, qword [rbp - 0x300]	       580	socks.c	FUNCTION_3	ELSE_4	ELSE_6	CALL_39
0x4001468	    0x488d35000000	                   lea rsi, [0x0400146f]	       580	socks.c	FUNCTION_3	ELSE_4	ELSE_6	CALL_39
0x400146f	          0x4889c7	                            mov rdi, rax	       580	socks.c	FUNCTION_3	ELSE_4	ELSE_6	CALL_39
0x4001472	      0xb800000000	                              mov eax, 0	       580	socks.c	FUNCTION_3	ELSE_4	ELSE_6	CALL_39
0x4001477	      0xe800000000	                          call 0x400147c	       580	socks.c	FUNCTION_3	ELSE_4	ELSE_6	CALL_39
0x400147c	      0xb807000000	                              mov eax, 7	       582	socks.c	FUNCTION_3	ELSE_4	ELSE_6
0x4001481	      0xe9a1080000	                           jmp 0x4001d27	       582	socks.c	FUNCTION_3	ELSE_4	ELSE_6
0x4001486	    0x48c785e0fcff	              mov qword [rbp - 0x320], 0	       587	socks.c	FUNCTION_3
0x4001491	    0x488b85e0fcff	            mov rax, qword [rbp - 0x320]	       588	socks.c	FUNCTION_3
0x4001498	        0x488d5001	                      lea rdx, [rax + 1]	       588	socks.c	FUNCTION_3
0x400149c	    0x488995e0fcff	            mov qword [rbp - 0x320], rdx	       588	socks.c	FUNCTION_3
0x40014a3	    0xc6840570fdff	         mov byte [rbp + rax - 0x290], 5	       588	socks.c	FUNCTION_3
0x40014ab	    0x488b85e0fcff	            mov rax, qword [rbp - 0x320]	       589	socks.c	FUNCTION_3
0x40014b2	        0x488d5001	                      lea rdx, [rax + 1]	       589	socks.c	FUNCTION_3
0x40014b6	    0x488995e0fcff	            mov qword [rbp - 0x320], rdx	       589	socks.c	FUNCTION_3
0x40014bd	    0xc6840570fdff	         mov byte [rbp + rax - 0x290], 1	       589	socks.c	FUNCTION_3
0x40014c5	    0x488b85e0fcff	            mov rax, qword [rbp - 0x320]	       590	socks.c	FUNCTION_3
0x40014cc	        0x488d5001	                      lea rdx, [rax + 1]	       590	socks.c	FUNCTION_3
0x40014d0	    0x488995e0fcff	            mov qword [rbp - 0x320], rdx	       590	socks.c	FUNCTION_3
0x40014d7	    0xc6840570fdff	         mov byte [rbp + rax - 0x290], 0	       590	socks.c	FUNCTION_3
0x40014df	     0xfb685a9fcff	           movzx eax, byte [rbp - 0x357]	       592	socks.c	FUNCTION_3	IF_31
0x40014e6	          0x83f001	                              xor eax, 1	       592	socks.c	FUNCTION_3	IF_31
0x40014e9	            0x84c0	                             test al, al	       592	socks.c	FUNCTION_3	IF_31
0x40014eb	     0xf8482000000	                            je 0x4001573	       592	socks.c	FUNCTION_3	IF_31
0x40014f1	    0x488b85e0fcff	            mov rax, qword [rbp - 0x320]	       593	socks.c	FUNCTION_3	IF_31
0x40014f8	        0x488d5001	                      lea rdx, [rax + 1]	       593	socks.c	FUNCTION_3	IF_31
0x40014fc	    0x488995e0fcff	            mov qword [rbp - 0x320], rdx	       593	socks.c	FUNCTION_3	IF_31
0x4001503	    0xc6840570fdff	         mov byte [rbp + rax - 0x290], 3	       593	socks.c	FUNCTION_3	IF_31
0x400150b	    0x488b85e0fcff	            mov rax, qword [rbp - 0x320]	       594	socks.c	FUNCTION_3	IF_31
0x4001512	        0x488d5001	                      lea rdx, [rax + 1]	       594	socks.c	FUNCTION_3	IF_31
0x4001516	    0x488995e0fcff	            mov qword [rbp - 0x320], rdx	       594	socks.c	FUNCTION_3	IF_31
0x400151d	    0x488b9508fdff	            mov rdx, qword [rbp - 0x2f8]	       594	socks.c	FUNCTION_3	IF_31
0x4001524	    0x88940570fdff	        mov byte [rbp + rax - 0x290], dl	       594	socks.c	FUNCTION_3	IF_31
0x400152b	    0x488d9570fdff	                  lea rdx, [rbp - 0x290]	       595	socks.c	FUNCTION_3	IF_31	CALL_40
0x4001532	    0x488b85e0fcff	            mov rax, qword [rbp - 0x320]	       595	socks.c	FUNCTION_3	IF_31	CALL_40
0x4001539	        0x488d0c02	                    lea rcx, [rdx + rax]	       595	socks.c	FUNCTION_3	IF_31	CALL_40
0x400153d	    0x488b9508fdff	            mov rdx, qword [rbp - 0x2f8]	       595	socks.c	FUNCTION_3	IF_31	CALL_40
0x4001544	    0x488b8588fcff	            mov rax, qword [rbp - 0x378]	       595	socks.c	FUNCTION_3	IF_31	CALL_40
0x400154b	          0x4889c6	                            mov rsi, rax	       595	socks.c	FUNCTION_3	IF_31	CALL_40
0x400154e	          0x4889cf	                            mov rdi, rcx	       595	socks.c	FUNCTION_3	IF_31	CALL_40
0x4001551	      0xe800000000	                          call 0x4001556	       595	socks.c	FUNCTION_3	IF_31	CALL_40
0x4001556	    0x488b95e0fcff	            mov rdx, qword [rbp - 0x320]	       596	socks.c	FUNCTION_3	IF_31
0x400155d	    0x488b8508fdff	            mov rax, qword [rbp - 0x2f8]	       596	socks.c	FUNCTION_3	IF_31
0x4001564	          0x4801d0	                            add rax, rdx	       596	socks.c	FUNCTION_3	IF_31
0x4001567	    0x488985e0fcff	            mov qword [rbp - 0x320], rax	       596	socks.c	FUNCTION_3	IF_31
0x400156e	      0xe9af020000	                           jmp 0x4001822	       596	socks.c	FUNCTION_3	IF_31
0x4001573	    0x48c785f8fcff	              mov qword [rbp - 0x308], 0	       600	socks.c	FUNCTION_3	ELSE_7
0x400157e	    0x488d8dd8fcff	                  lea rcx, [rbp - 0x328]	       601	socks.c	FUNCTION_3	ELSE_7	CALL_41
0x4001585	    0x8b9584fcffff	            mov edx, dword [rbp - 0x37c]	       601	socks.c	FUNCTION_3	ELSE_7	CALL_41
0x400158b	    0x488bb588fcff	            mov rsi, qword [rbp - 0x378]	       601	socks.c	FUNCTION_3	ELSE_7	CALL_41
0x4001592	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	       601	socks.c	FUNCTION_3	ELSE_7	CALL_41
0x4001599	          0x4889c7	                            mov rdi, rax	       601	socks.c	FUNCTION_3	ELSE_7	CALL_41
0x400159c	      0xe800000000	                          call 0x40015a1	       601	socks.c	FUNCTION_3	ELSE_7	CALL_41
0x40015a1	    0x8985c0fcffff	            mov dword [rbp - 0x340], eax	       601	socks.c	FUNCTION_3	ELSE_7	CALL_41
0x40015a7	    0x83bdc0fcffff	cmp dword [rbp - 0x340], 0xffffffffffffffff	       603	socks.c	FUNCTION_3	ELSE_7	IF_32
0x40015ae	            0x750a	                           jne 0x40015ba	       603	socks.c	FUNCTION_3	ELSE_7	IF_32
0x40015b0	      0xb806000000	                              mov eax, 6	       604	socks.c	FUNCTION_3	ELSE_7	IF_32
0x40015b5	      0xe96d070000	                           jmp 0x4001d27	       604	socks.c	FUNCTION_3	ELSE_7	IF_32
0x40015ba	    0x83bdc0fcffff	              cmp dword [rbp - 0x340], 1	       606	socks.c	FUNCTION_3	ELSE_7	IF_33
0x40015c1	            0x7533	                           jne 0x40015f6	       606	socks.c	FUNCTION_3	ELSE_7	IF_33
0x40015c3	    0x488d95d8fcff	                  lea rdx, [rbp - 0x328]	       608	socks.c	FUNCTION_3	ELSE_7	IF_33	CALL_42
0x40015ca	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	       608	socks.c	FUNCTION_3	ELSE_7	IF_33	CALL_42
0x40015d1	          0x4889d6	                            mov rsi, rdx	       608	socks.c	FUNCTION_3	ELSE_7	IF_33	CALL_42
0x40015d4	          0x4889c7	                            mov rdi, rax	       608	socks.c	FUNCTION_3	ELSE_7	IF_33	CALL_42
0x40015d7	      0xe800000000	                          call 0x40015dc	       608	socks.c	FUNCTION_3	ELSE_7	IF_33	CALL_42
0x40015dc	    0x8985bcfcffff	            mov dword [rbp - 0x344], eax	       608	socks.c	FUNCTION_3	ELSE_7	IF_33	CALL_42
0x40015e2	    0x83bdbcfcffff	              cmp dword [rbp - 0x344], 0	       609	socks.c	FUNCTION_3	ELSE_7	IF_33	IF_34
0x40015e9	            0x740b	                            je 0x40015f6	       609	socks.c	FUNCTION_3	ELSE_7	IF_33	IF_34
0x40015eb	    0x8b85bcfcffff	            mov eax, dword [rbp - 0x344]	       610	socks.c	FUNCTION_3	ELSE_7	IF_33	IF_34
0x40015f1	      0xe931070000	                           jmp 0x4001d27	       610	socks.c	FUNCTION_3	ELSE_7	IF_33	IF_34
0x40015f6	    0x488b85d8fcff	            mov rax, qword [rbp - 0x328]	       617	socks.c	FUNCTION_3	ELSE_7	IF_35
0x40015fd	          0x4885c0	                           test rax, rax	       617	socks.c	FUNCTION_3	ELSE_7	IF_35
0x4001600	            0x7411	                            je 0x4001613	       617	socks.c	FUNCTION_3	ELSE_7	IF_35
0x4001602	    0x488b85d8fcff	            mov rax, qword [rbp - 0x328]	       618	socks.c	FUNCTION_3	ELSE_7	IF_35
0x4001609	          0x488b00	                    mov rax, qword [rax]	       618	socks.c	FUNCTION_3	ELSE_7	IF_35
0x400160c	    0x488985f8fcff	            mov qword [rbp - 0x308], rax	       618	socks.c	FUNCTION_3	ELSE_7	IF_35
0x4001613	    0x4883bdf8fcff	              cmp qword [rbp - 0x308], 0	       619	socks.c	FUNCTION_3	ELSE_7	IF_36
0x400161b	     0xf84cb010000	                            je 0x40017ec	       619	socks.c	FUNCTION_3	ELSE_7	IF_36
0x4001621	    0x488d8d30fdff	                  lea rcx, [rbp - 0x2d0]	       622	socks.c	FUNCTION_3	ELSE_7	IF_36	CALL_43
0x4001628	    0x488b85f8fcff	            mov rax, qword [rbp - 0x308]	       622	socks.c	FUNCTION_3	ELSE_7	IF_36	CALL_43
0x400162f	      0xba40000000	                           mov edx, 0x40	       622	socks.c	FUNCTION_3	ELSE_7	IF_36	CALL_43
0x4001634	          0x4889ce	                            mov rsi, rcx	       622	socks.c	FUNCTION_3	ELSE_7	IF_36	CALL_43
0x4001637	          0x4889c7	                            mov rdi, rax	       622	socks.c	FUNCTION_3	ELSE_7	IF_36	CALL_43
0x400163a	      0xe800000000	                          call 0x400163f	       622	socks.c	FUNCTION_3	ELSE_7	IF_36	CALL_43
0x400163f	    0x488b85f8fcff	            mov rax, qword [rbp - 0x308]	       624	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37
0x4001646	          0x8b4004	                mov eax, dword [rax + 4]	       624	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37
0x4001649	          0x83f802	                              cmp eax, 2	       624	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37
0x400164c	     0xf85a2000000	                           jne 0x40016f4	       624	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37
0x4001652	    0x488b85e0fcff	            mov rax, qword [rbp - 0x320]	       626	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37
0x4001659	        0x488d5001	                      lea rdx, [rax + 1]	       626	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37
0x400165d	    0x488995e0fcff	            mov qword [rbp - 0x320], rdx	       626	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37
0x4001664	    0xc6840570fdff	         mov byte [rbp + rax - 0x290], 1	       626	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37
0x400166c	    0x488b85f8fcff	            mov rax, qword [rbp - 0x308]	       628	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37
0x4001673	        0x488b4020	            mov rax, qword [rax + 0x20] 	       628	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37
0x4001677	    0x48898520fdff	            mov qword [rbp - 0x2e0], rax	       628	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37
0x400167e	    0xc785b0fcffff	              mov dword [rbp - 0x350], 0	       629	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	FOR_1
0x4001688	            0xeb3a	                           jmp 0x40016c4	       629	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	FOR_1
0x400168a	    0x488b85e0fcff	            mov rax, qword [rbp - 0x320]	       630	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	FOR_1
0x4001691	        0x488d5001	                      lea rdx, [rax + 1]	       630	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	FOR_1
0x4001695	    0x488995e0fcff	            mov qword [rbp - 0x320], rdx	       630	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	FOR_1
0x400169c	    0x488b9520fdff	            mov rdx, qword [rbp - 0x2e0]	       630	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	FOR_1
0x40016a3	        0x488d4a04	                      lea rcx, [rdx + 4]	       630	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	FOR_1
0x40016a7	    0x8b95b0fcffff	            mov edx, dword [rbp - 0x350]	       630	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	FOR_1
0x40016ad	          0x4863d2	                         movsxd rdx, edx	       630	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	FOR_1
0x40016b0	          0x4801ca	                            add rdx, rcx	       630	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	FOR_1
0x40016b3	           0xfb612	                   movzx edx, byte [rdx]	       630	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	FOR_1
0x40016b6	    0x88940570fdff	        mov byte [rbp + rax - 0x290], dl	       630	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	FOR_1
0x40016bd	    0x8385b0fcffff	              add dword [rbp - 0x350], 1	       629	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	FOR_1
0x40016c4	    0x83bdb0fcffff	              cmp dword [rbp - 0x350], 3	       629	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	FOR_1
0x40016cb	            0x7ebd	                           jle 0x400168a	       629	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	FOR_1
0x40016cd	    0x488d9530fdff	                  lea rdx, [rbp - 0x2d0]	       633	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	CALL_44
0x40016d4	    0x488b8500fdff	            mov rax, qword [rbp - 0x300]	       633	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	CALL_44
0x40016db	    0x488d35000000	                   lea rsi, [0x040016e2]	       633	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	CALL_44
0x40016e2	          0x4889c7	                            mov rdi, rax	       633	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	CALL_44
0x40016e5	      0xb800000000	                              mov eax, 0	       633	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	CALL_44
0x40016ea	      0xe800000000	                          call 0x40016ef	       633	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	CALL_44
0x40016ef	      0xe9df000000	                           jmp 0x40017d3	       633	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	CALL_44
0x40016f4	    0x488b85f8fcff	            mov rax, qword [rbp - 0x308]	       636	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38
0x40016fb	          0x8b4004	                mov eax, dword [rax + 4]	       636	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38
0x40016fe	          0x83f80a	                            cmp eax, 0xa	       636	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38
0x4001701	     0xf859f000000	                           jne 0x40017a6	       636	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38
0x4001707	    0x488b85e0fcff	            mov rax, qword [rbp - 0x320]	       638	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38
0x400170e	        0x488d5001	                      lea rdx, [rax + 1]	       638	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38
0x4001712	    0x488995e0fcff	            mov qword [rbp - 0x320], rdx	       638	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38
0x4001719	    0xc6840570fdff	         mov byte [rbp + rax - 0x290], 4	       638	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38
0x4001721	    0x488b85f8fcff	            mov rax, qword [rbp - 0x308]	       640	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38
0x4001728	        0x488b4020	            mov rax, qword [rax + 0x20] 	       640	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38
0x400172c	    0x48898528fdff	            mov qword [rbp - 0x2d8], rax	       640	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38
0x4001733	    0xc785b0fcffff	              mov dword [rbp - 0x350], 0	       641	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	FOR_2
0x400173d	            0xeb3a	                           jmp 0x4001779	       641	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	FOR_2
0x400173f	    0x488b85e0fcff	            mov rax, qword [rbp - 0x320]	       642	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	FOR_2
0x4001746	        0x488d5001	                      lea rdx, [rax + 1]	       642	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	FOR_2
0x400174a	    0x488995e0fcff	            mov qword [rbp - 0x320], rdx	       642	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	FOR_2
0x4001751	    0x488b9528fdff	            mov rdx, qword [rbp - 0x2d8]	       643	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	FOR_2
0x4001758	        0x488d4a08	                      lea rcx, [rdx + 8]	       643	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	FOR_2
0x400175c	    0x8b95b0fcffff	            mov edx, dword [rbp - 0x350]	       643	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	FOR_2
0x4001762	          0x4863d2	                         movsxd rdx, edx	       643	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	FOR_2
0x4001765	          0x4801ca	                            add rdx, rcx	       643	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	FOR_2
0x4001768	           0xfb612	                   movzx edx, byte [rdx]	       643	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	FOR_2
0x400176b	    0x88940570fdff	        mov byte [rbp + rax - 0x290], dl	       642	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	FOR_2
0x4001772	    0x8385b0fcffff	              add dword [rbp - 0x350], 1	       641	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	FOR_2
0x4001779	    0x83bdb0fcffff	           cmp dword [rbp - 0x350], 0xf 	       641	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	FOR_2
0x4001780	            0x7ebd	                           jle 0x400173f	       641	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	FOR_2
0x4001782	    0x488d9530fdff	                  lea rdx, [rbp - 0x2d0]	       646	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	CALL_45
0x4001789	    0x488b8500fdff	            mov rax, qword [rbp - 0x300]	       646	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	CALL_45
0x4001790	    0x488d35000000	                   lea rsi, [0x04001797]	       646	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	CALL_45
0x4001797	          0x4889c7	                            mov rdi, rax	       646	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	CALL_45
0x400179a	      0xb800000000	                              mov eax, 0	       646	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	CALL_45
0x400179f	      0xe800000000	                          call 0x40017a4	       646	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	CALL_45
0x40017a4	            0xeb2d	                           jmp 0x40017d3	       646	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	CALL_45
0x40017a6	    0x48c785f8fcff	              mov qword [rbp - 0x308], 0	       650	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_9
0x40017b1	    0x488d9530fdff	                  lea rdx, [rbp - 0x2d0]	       652	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_9	CALL_46
0x40017b8	    0x488b8500fdff	            mov rax, qword [rbp - 0x300]	       652	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_9	CALL_46
0x40017bf	    0x488d35000000	                   lea rsi, [0x040017c6]	       652	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_9	CALL_46
0x40017c6	          0x4889c7	                            mov rdi, rax	       652	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_9	CALL_46
0x40017c9	      0xb800000000	                              mov eax, 0	       652	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_9	CALL_46
0x40017ce	      0xe800000000	                          call 0x40017d3	       652	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_9	CALL_46
0x40017d3	    0x488b95d8fcff	            mov rdx, qword [rbp - 0x328]	       655	socks.c	FUNCTION_3	ELSE_7	IF_36	CALL_47
0x40017da	    0x488b8500fdff	            mov rax, qword [rbp - 0x300]	       655	socks.c	FUNCTION_3	ELSE_7	IF_36	CALL_47
0x40017e1	          0x4889d6	                            mov rsi, rdx	       655	socks.c	FUNCTION_3	ELSE_7	IF_36	CALL_47
0x40017e4	          0x4889c7	                            mov rdi, rax	       655	socks.c	FUNCTION_3	ELSE_7	IF_36	CALL_47
0x40017e7	      0xe800000000	                          call 0x40017ec	       655	socks.c	FUNCTION_3	ELSE_7	IF_36	CALL_47
0x40017ec	    0x4883bdf8fcff	              cmp qword [rbp - 0x308], 0	       657	socks.c	FUNCTION_3	ELSE_7	IF_39
0x40017f4	            0x752c	                           jne 0x4001822	       657	socks.c	FUNCTION_3	ELSE_7	IF_39
0x40017f6	    0x488b9588fcff	            mov rdx, qword [rbp - 0x378]	       658	socks.c	FUNCTION_3	ELSE_7	IF_39	CALL_48
0x40017fd	    0x488b8500fdff	            mov rax, qword [rbp - 0x300]	       658	socks.c	FUNCTION_3	ELSE_7	IF_39	CALL_48
0x4001804	    0x488d35000000	                   lea rsi, [0x0400180b]	       658	socks.c	FUNCTION_3	ELSE_7	IF_39	CALL_48
0x400180b	          0x4889c7	                            mov rdi, rax	       658	socks.c	FUNCTION_3	ELSE_7	IF_39	CALL_48
0x400180e	      0xb800000000	                              mov eax, 0	       658	socks.c	FUNCTION_3	ELSE_7	IF_39	CALL_48
0x4001813	      0xe800000000	                          call 0x4001818	       658	socks.c	FUNCTION_3	ELSE_7	IF_39	CALL_48
0x4001818	      0xb806000000	                              mov eax, 6	       660	socks.c	FUNCTION_3	ELSE_7	IF_39
0x400181d	      0xe905050000	                           jmp 0x4001d27	       660	socks.c	FUNCTION_3	ELSE_7	IF_39
0x4001822	    0x488b85e0fcff	            mov rax, qword [rbp - 0x320]	       664	socks.c	FUNCTION_3
0x4001829	        0x488d5001	                      lea rdx, [rax + 1]	       664	socks.c	FUNCTION_3
0x400182d	    0x488995e0fcff	            mov qword [rbp - 0x320], rdx	       664	socks.c	FUNCTION_3
0x4001834	    0x8b9584fcffff	            mov edx, dword [rbp - 0x37c]	       664	socks.c	FUNCTION_3
0x400183a	          0xc1fa08	                              sar edx, 8	       664	socks.c	FUNCTION_3
0x400183d	    0x88940570fdff	        mov byte [rbp + rax - 0x290], dl	       664	socks.c	FUNCTION_3
0x4001844	    0x488b85e0fcff	            mov rax, qword [rbp - 0x320]	       665	socks.c	FUNCTION_3
0x400184b	        0x488d5001	                      lea rdx, [rax + 1]	       665	socks.c	FUNCTION_3
0x400184f	    0x488995e0fcff	            mov qword [rbp - 0x320], rdx	       665	socks.c	FUNCTION_3
0x4001856	    0x8b9584fcffff	            mov edx, dword [rbp - 0x37c]	       665	socks.c	FUNCTION_3
0x400185c	    0x88940570fdff	        mov byte [rbp + rax - 0x290], dl	       665	socks.c	FUNCTION_3
0x4001863	    0x488b8de0fcff	            mov rcx, qword [rbp - 0x320]	       673	socks.c	FUNCTION_3	CALL_50
0x400186a	    0x488dbdd0fcff	                  lea rdi, [rbp - 0x330]	       673	socks.c	FUNCTION_3	CALL_50
0x4001871	    0x488d9570fdff	                  lea rdx, [rbp - 0x290]	       673	socks.c	FUNCTION_3	CALL_50
0x4001878	    0x8bb5b4fcffff	            mov esi, dword [rbp - 0x34c]	       673	socks.c	FUNCTION_3	CALL_50
0x400187e	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	       673	socks.c	FUNCTION_3	CALL_50
0x4001885	          0x4989f8	                             mov r8, rdi	       673	socks.c	FUNCTION_3	CALL_50
0x4001888	          0x4889c7	                            mov rdi, rax	       673	socks.c	FUNCTION_3	CALL_50
0x400188b	      0xe800000000	                          call 0x4001890	       673	socks.c	FUNCTION_3	CALL_50
0x4001890	    0x8985bcfcffff	            mov dword [rbp - 0x344], eax	       673	socks.c	FUNCTION_3	CALL_50
0x4001896	    0x83bdbcfcffff	              cmp dword [rbp - 0x344], 0	       675	socks.c	FUNCTION_3	IF_41
0x400189d	            0x7510	                           jne 0x40018af	       675	socks.c	FUNCTION_3	IF_41
0x400189f	    0x488b85d0fcff	            mov rax, qword [rbp - 0x330]	       675	socks.c	FUNCTION_3	IF_41
0x40018a6	    0x483985e0fcff	           cmp qword [rbp - 0x320], rax 	       675	socks.c	FUNCTION_3	IF_41
0x40018ad	            0x7425	                            je 0x40018d4	       675	socks.c	FUNCTION_3	IF_41
0x40018af	    0x488b8500fdff	            mov rax, qword [rbp - 0x300]	       676	socks.c	FUNCTION_3	IF_41	CALL_51
0x40018b6	    0x488d35000000	                   lea rsi, [0x040018bd]	       676	socks.c	FUNCTION_3	IF_41	CALL_51
0x40018bd	          0x4889c7	                            mov rdi, rax	       676	socks.c	FUNCTION_3	IF_41	CALL_51
0x40018c0	      0xb800000000	                              mov eax, 0	       676	socks.c	FUNCTION_3	IF_41	CALL_51
0x40018c5	      0xe800000000	                          call 0x40018ca	       676	socks.c	FUNCTION_3	IF_41	CALL_51
0x40018ca	      0xb807000000	                              mov eax, 7	       677	socks.c	FUNCTION_3	IF_41
0x40018cf	      0xe953040000	                           jmp 0x4001d27	       677	socks.c	FUNCTION_3	IF_41
0x40018d4	    0x48c785e0fcff	            mov qword [rbp - 0x320], 0xa	       680	socks.c	FUNCTION_3
0x40018df	    0x488dbdc8fcff	                  lea rdi, [rbp - 0x338]	       688	socks.c	FUNCTION_3	ELSE_11	CALL_53
0x40018e6	    0x488b8de0fcff	            mov rcx, qword [rbp - 0x320]	       688	socks.c	FUNCTION_3	ELSE_11	CALL_53
0x40018ed	    0x488d9570fdff	                  lea rdx, [rbp - 0x290]	       688	socks.c	FUNCTION_3	ELSE_11	CALL_53
0x40018f4	    0x8bb5b4fcffff	            mov esi, dword [rbp - 0x34c]	       688	socks.c	FUNCTION_3	ELSE_11	CALL_53
0x40018fa	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	       688	socks.c	FUNCTION_3	ELSE_11	CALL_53
0x4001901	          0x4989f8	                             mov r8, rdi	       688	socks.c	FUNCTION_3	ELSE_11	CALL_53
0x4001904	          0x4889c7	                            mov rdi, rax	       688	socks.c	FUNCTION_3	ELSE_11	CALL_53
0x4001907	      0xe800000000	                          call 0x400190c	       688	socks.c	FUNCTION_3	ELSE_11	CALL_53
0x400190c	    0x8985b8fcffff	            mov dword [rbp - 0x348], eax	       688	socks.c	FUNCTION_3	ELSE_11	CALL_53
0x4001912	    0x83bdb8fcffff	              cmp dword [rbp - 0x348], 0	       691	socks.c	FUNCTION_3	IF_43
0x4001919	            0x7510	                           jne 0x400192b	       691	socks.c	FUNCTION_3	IF_43
0x400191b	    0x488b85c8fcff	            mov rax, qword [rbp - 0x338]	       691	socks.c	FUNCTION_3	IF_43
0x4001922	    0x483985e0fcff	           cmp qword [rbp - 0x320], rax 	       691	socks.c	FUNCTION_3	IF_43
0x4001929	            0x7425	                            je 0x4001950	       691	socks.c	FUNCTION_3	IF_43
0x400192b	    0x488b8500fdff	            mov rax, qword [rbp - 0x300]	       692	socks.c	FUNCTION_3	IF_43	CALL_54
0x4001932	    0x488d35000000	                   lea rsi, [0x04001939]	       692	socks.c	FUNCTION_3	IF_43	CALL_54
0x4001939	          0x4889c7	                            mov rdi, rax	       692	socks.c	FUNCTION_3	IF_43	CALL_54
0x400193c	      0xb800000000	                              mov eax, 0	       692	socks.c	FUNCTION_3	IF_43	CALL_54
0x4001941	      0xe800000000	                          call 0x4001946	       692	socks.c	FUNCTION_3	IF_43	CALL_54
0x4001946	      0xb807000000	                              mov eax, 7	       693	socks.c	FUNCTION_3	IF_43
0x400194b	      0xe9d7030000	                           jmp 0x4001d27	       693	socks.c	FUNCTION_3	IF_43
0x4001950	     0xfb68570fdff	           movzx eax, byte [rbp - 0x290]	       696	socks.c	FUNCTION_3	IF_44
0x4001957	            0x3c05	                               cmp al, 5	       696	socks.c	FUNCTION_3	IF_44
0x4001959	            0x7425	                            je 0x4001980	       696	socks.c	FUNCTION_3	IF_44
0x400195b	    0x488b8500fdff	            mov rax, qword [rbp - 0x300]	       697	socks.c	FUNCTION_3	IF_44	CALL_55
0x4001962	    0x488d35000000	                   lea rsi, [0x04001969]	       697	socks.c	FUNCTION_3	IF_44	CALL_55
0x4001969	          0x4889c7	                            mov rdi, rax	       697	socks.c	FUNCTION_3	IF_44	CALL_55
0x400196c	      0xb800000000	                              mov eax, 0	       697	socks.c	FUNCTION_3	IF_44	CALL_55
0x4001971	      0xe800000000	                          call 0x4001976	       697	socks.c	FUNCTION_3	IF_44	CALL_55
0x4001976	      0xb807000000	                              mov eax, 7	       699	socks.c	FUNCTION_3	IF_44
0x400197b	      0xe9a7030000	                           jmp 0x4001d27	       699	socks.c	FUNCTION_3	IF_44
0x4001980	     0xfb68573fdff	           movzx eax, byte [rbp - 0x28d]	       719	socks.c	FUNCTION_3	IF_45
0x4001987	            0x3c03	                               cmp al, 3	       719	socks.c	FUNCTION_3	IF_45
0x4001989	            0x7524	                           jne 0x40019af	       719	socks.c	FUNCTION_3	IF_45
0x400198b	     0xfb68574fdff	           movzx eax, byte [rbp - 0x28c]	       721	socks.c	FUNCTION_3	IF_45
0x4001992	           0xfb6c0	                           movzx eax, al	       721	socks.c	FUNCTION_3	IF_45
0x4001995	    0x8985c4fcffff	            mov dword [rbp - 0x33c], eax	       721	socks.c	FUNCTION_3	IF_45
0x400199b	    0x8b85c4fcffff	            mov eax, dword [rbp - 0x33c]	       722	socks.c	FUNCTION_3	IF_45
0x40019a1	          0x83c007	                              add eax, 7	       722	socks.c	FUNCTION_3	IF_45
0x40019a4	            0x4898	                                    cdqe	       722	socks.c	FUNCTION_3	IF_45
0x40019a6	    0x488985e0fcff	            mov qword [rbp - 0x320], rax	       722	socks.c	FUNCTION_3	IF_45
0x40019ad	            0xeb16	                           jmp 0x40019c5	       722	socks.c	FUNCTION_3	IF_45
0x40019af	     0xfb68573fdff	           movzx eax, byte [rbp - 0x28d]	       724	socks.c	FUNCTION_3	ELSE_12	IF_46
0x40019b6	            0x3c04	                               cmp al, 4	       724	socks.c	FUNCTION_3	ELSE_12	IF_46
0x40019b8	            0x750b	                           jne 0x40019c5	       724	socks.c	FUNCTION_3	ELSE_12	IF_46
0x40019ba	    0x48c785e0fcff	          mov qword [rbp - 0x320], 0x16 	       726	socks.c	FUNCTION_3	ELSE_12	IF_46
0x40019c5	    0x4883bde0fcff	           cmp qword [rbp - 0x320], 0xa 	       734	socks.c	FUNCTION_3	IF_47	IF_48
0x40019cd	     0xf8e80000000	                           jle 0x4001a53	       734	socks.c	FUNCTION_3	IF_47	IF_48
0x40019d3	    0x488b85e0fcff	            mov rax, qword [rbp - 0x320]	       735	socks.c	FUNCTION_3	IF_47	IF_48	CALL_56
0x40019da	        0x488d48f6	                    lea rcx, [rax - 0xa]	       735	socks.c	FUNCTION_3	IF_47	IF_48	CALL_56
0x40019de	    0x488dbdc8fcff	                  lea rdi, [rbp - 0x338]	       735	socks.c	FUNCTION_3	IF_47	IF_48	CALL_56
0x40019e5	    0x488d8570fdff	                  lea rax, [rbp - 0x290]	       735	socks.c	FUNCTION_3	IF_47	IF_48	CALL_56
0x40019ec	        0x488d500a	                    lea rdx, [rax + 0xa]	       735	socks.c	FUNCTION_3	IF_47	IF_48	CALL_56
0x40019f0	    0x8bb5b4fcffff	            mov esi, dword [rbp - 0x34c]	       735	socks.c	FUNCTION_3	IF_47	IF_48	CALL_56
0x40019f6	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	       735	socks.c	FUNCTION_3	IF_47	IF_48	CALL_56
0x40019fd	          0x4989f8	                             mov r8, rdi	       735	socks.c	FUNCTION_3	IF_47	IF_48	CALL_56
0x4001a00	          0x4889c7	                            mov rdi, rax	       735	socks.c	FUNCTION_3	IF_47	IF_48	CALL_56
0x4001a03	      0xe800000000	                          call 0x4001a08	       735	socks.c	FUNCTION_3	IF_47	IF_48	CALL_56
0x4001a08	    0x8985b8fcffff	            mov dword [rbp - 0x348], eax	       735	socks.c	FUNCTION_3	IF_47	IF_48	CALL_56
0x4001a0e	    0x83bdb8fcffff	              cmp dword [rbp - 0x348], 0	       737	socks.c	FUNCTION_3	IF_47	IF_48	IF_49
0x4001a15	            0x7517	                           jne 0x4001a2e	       737	socks.c	FUNCTION_3	IF_47	IF_48	IF_49
0x4001a17	    0x488b85e0fcff	            mov rax, qword [rbp - 0x320]	       737	socks.c	FUNCTION_3	IF_47	IF_48	IF_49
0x4001a1e	        0x488d50f6	                    lea rdx, [rax - 0xa]	       737	socks.c	FUNCTION_3	IF_47	IF_48	IF_49
0x4001a22	    0x488b85c8fcff	            mov rax, qword [rbp - 0x338]	       737	socks.c	FUNCTION_3	IF_47	IF_48	IF_49
0x4001a29	          0x4839c2	                            cmp rdx, rax	       737	socks.c	FUNCTION_3	IF_47	IF_48	IF_49
0x4001a2c	            0x7425	                            je 0x4001a53	       737	socks.c	FUNCTION_3	IF_47	IF_48	IF_49
0x4001a2e	    0x488b8500fdff	            mov rax, qword [rbp - 0x300]	       738	socks.c	FUNCTION_3	IF_47	IF_48	IF_49	CALL_57
0x4001a35	    0x488d35000000	                   lea rsi, [0x04001a3c]	       738	socks.c	FUNCTION_3	IF_47	IF_48	IF_49	CALL_57
0x4001a3c	          0x4889c7	                            mov rdi, rax	       738	socks.c	FUNCTION_3	IF_47	IF_48	IF_49	CALL_57
0x4001a3f	      0xb800000000	                              mov eax, 0	       738	socks.c	FUNCTION_3	IF_47	IF_48	IF_49	CALL_57
0x4001a44	      0xe800000000	                          call 0x4001a49	       738	socks.c	FUNCTION_3	IF_47	IF_48	IF_49	CALL_57
0x4001a49	      0xb807000000	                              mov eax, 7	       739	socks.c	FUNCTION_3	IF_47	IF_48	IF_49
0x4001a4e	      0xe9d4020000	                           jmp 0x4001d27	       739	socks.c	FUNCTION_3	IF_47	IF_48	IF_49
0x4001a53	     0xfb68571fdff	           movzx eax, byte [rbp - 0x28f]	       746	socks.c	FUNCTION_3	IF_50
0x4001a5a	            0x84c0	                             test al, al	       746	socks.c	FUNCTION_3	IF_50
0x4001a5c	     0xf8493020000	                            je 0x4001cf5	       746	socks.c	FUNCTION_3	IF_50
0x4001a62	     0xfb68573fdff	           movzx eax, byte [rbp - 0x28d]	       747	socks.c	FUNCTION_3	IF_50	IF_51
0x4001a69	            0x3c01	                               cmp al, 1	       747	socks.c	FUNCTION_3	IF_50	IF_51
0x4001a6b	            0x757e	                           jne 0x4001aeb	       747	socks.c	FUNCTION_3	IF_50	IF_51
0x4001a6d	     0xfb68571fdff	           movzx eax, byte [rbp - 0x28f]	       754	socks.c	FUNCTION_3	IF_50	IF_51
0x4001a74	           0xfb6f0	                           movzx esi, al	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4001a77	     0xfb68578fdff	           movzx eax, byte [rbp - 0x288]	       752	socks.c	FUNCTION_3	IF_50	IF_51
0x4001a7e	           0xfb6c0	                           movzx eax, al	       752	socks.c	FUNCTION_3	IF_50	IF_51
0x4001a81	          0xc1e008	                              shl eax, 8	       752	socks.c	FUNCTION_3	IF_50	IF_51
0x4001a84	            0x89c2	                            mov edx, eax	       752	socks.c	FUNCTION_3	IF_50	IF_51
0x4001a86	     0xfb68579fdff	           movzx eax, byte [rbp - 0x287]	       753	socks.c	FUNCTION_3	IF_50	IF_51
0x4001a8d	           0xfb6c0	                           movzx eax, al	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4001a90	             0x9c2	                             or edx, eax	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4001a92	          0x4189d1	                            mov r9d, edx	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4001a95	     0xfb68577fdff	           movzx eax, byte [rbp - 0x289]	       751	socks.c	FUNCTION_3	IF_50	IF_51
0x4001a9c	        0x440fb6c0	                           movzx r8d, al	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4001aa0	     0xfb68576fdff	           movzx eax, byte [rbp - 0x28a]	       751	socks.c	FUNCTION_3	IF_50	IF_51
0x4001aa7	           0xfb6f8	                           movzx edi, al	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4001aaa	     0xfb68575fdff	           movzx eax, byte [rbp - 0x28b]	       750	socks.c	FUNCTION_3	IF_50	IF_51
0x4001ab1	           0xfb6c8	                           movzx ecx, al	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4001ab4	     0xfb68574fdff	           movzx eax, byte [rbp - 0x28c]	       750	socks.c	FUNCTION_3	IF_50	IF_51
0x4001abb	           0xfb6d0	                           movzx edx, al	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4001abe	    0x488b8500fdff	            mov rax, qword [rbp - 0x300]	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4001ac5	              0x56	                                push rsi	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4001ac6	            0x4151	                                 push r9	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4001ac8	          0x4589c1	                            mov r9d, r8d	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4001acb	          0x4189f8	                            mov r8d, edi	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4001ace	    0x488d35000000	                   lea rsi, [0x04001ad5]	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4001ad5	          0x4889c7	                            mov rdi, rax	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4001ad8	      0xb800000000	                              mov eax, 0	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4001add	      0xe800000000	                          call 0x4001ae2	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4001ae2	        0x4883c410	                           add rsp, 0x10	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4001ae6	      0xe903020000	                           jmp 0x4001cee	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4001aeb	     0xfb68573fdff	           movzx eax, byte [rbp - 0x28d]	       756	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52
0x4001af2	            0x3c03	                               cmp al, 3	       756	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52
0x4001af4	     0xf85a3000000	                           jne 0x4001b9d	       756	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52
0x4001afa	    0x488b85e0fcff	            mov rax, qword [rbp - 0x320]	       757	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52
0x4001b01	        0x4883e802	                              sub rax, 2	       757	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52
0x4001b05	     0xfb6840570fd	     movzx eax, byte [rbp + rax - 0x290]	       757	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52
0x4001b0d	    0x8885abfcffff	              mov byte [rbp - 0x355], al	       757	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52
0x4001b13	    0x488b85e0fcff	            mov rax, qword [rbp - 0x320]	       758	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52
0x4001b1a	        0x4883e802	                              sub rax, 2	       758	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52
0x4001b1e	    0xc6840570fdff	         mov byte [rbp + rax - 0x290], 0	       758	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52
0x4001b26	     0xfb68571fdff	           movzx eax, byte [rbp - 0x28f]	       764	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52
0x4001b2d	           0xfb6f0	                           movzx esi, al	       759	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52	CALL_59
0x4001b30	     0xfb685abfcff	           movzx eax, byte [rbp - 0x355]	       762	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52
0x4001b37	          0xc1e008	                              shl eax, 8	       762	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52
0x4001b3a	            0x89c2	                            mov edx, eax	       762	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52
0x4001b3c	    0x488b85e0fcff	            mov rax, qword [rbp - 0x320]	       763	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52
0x4001b43	        0x4883e801	                              sub rax, 1	       763	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52
0x4001b47	     0xfb6840570fd	     movzx eax, byte [rbp + rax - 0x290]	       763	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52
0x4001b4f	           0xfb6c0	                           movzx eax, al	       759	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52	CALL_59
0x4001b52	            0x89d1	                            mov ecx, edx	       759	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52	CALL_59
0x4001b54	             0x9c1	                             or ecx, eax	       759	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52	CALL_59
0x4001b56	    0x488d8570fdff	                  lea rax, [rbp - 0x290]	       759	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52	CALL_59
0x4001b5d	        0x488d5005	                      lea rdx, [rax + 5]	       759	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52	CALL_59
0x4001b61	    0x488b8500fdff	            mov rax, qword [rbp - 0x300]	       759	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52	CALL_59
0x4001b68	          0x4189f0	                            mov r8d, esi	       759	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52	CALL_59
0x4001b6b	    0x488d35000000	                   lea rsi, [0x04001b72]	       759	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52	CALL_59
0x4001b72	          0x4889c7	                            mov rdi, rax	       759	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52	CALL_59
0x4001b75	      0xb800000000	                              mov eax, 0	       759	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52	CALL_59
0x4001b7a	      0xe800000000	                          call 0x4001b7f	       759	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52	CALL_59
0x4001b7f	    0x488b85e0fcff	            mov rax, qword [rbp - 0x320]	       765	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52
0x4001b86	        0x488d50fe	                      lea rdx, [rax - 2]	       765	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52
0x4001b8a	     0xfb685abfcff	           movzx eax, byte [rbp - 0x355]	       765	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52
0x4001b91	    0x88841570fdff	        mov byte [rbp + rdx - 0x290], al	       765	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52
0x4001b98	      0xe951010000	                           jmp 0x4001cee	       765	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52
0x4001b9d	     0xfb68573fdff	           movzx eax, byte [rbp - 0x28d]	       767	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53
0x4001ba4	            0x3c04	                               cmp al, 4	       767	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53
0x4001ba6	     0xf8542010000	                           jne 0x4001cee	       767	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53
0x4001bac	     0xfb68571fdff	           movzx eax, byte [rbp - 0x28f]	       781	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53
0x4001bb3	           0xfb6f0	                           movzx esi, al	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001bb6	     0xfb68584fdff	           movzx eax, byte [rbp - 0x27c]	       779	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53
0x4001bbd	           0xfb6c0	                           movzx eax, al	       779	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53
0x4001bc0	          0xc1e008	                              shl eax, 8	       779	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53
0x4001bc3	            0x89c2	                            mov edx, eax	       779	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53
0x4001bc5	     0xfb68585fdff	           movzx eax, byte [rbp - 0x27b]	       780	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53
0x4001bcc	           0xfb6c0	                           movzx eax, al	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001bcf	             0x9c2	                             or edx, eax	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001bd1	          0x4189d1	                            mov r9d, edx	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001bd4	     0xfb68583fdff	           movzx eax, byte [rbp - 0x27d]	       778	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53
0x4001bdb	           0xfb6f8	                           movzx edi, al	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001bde	     0xfb68582fdff	           movzx eax, byte [rbp - 0x27e]	       778	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53
0x4001be5	        0x440fb6d0	                          movzx r10d, al	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001be9	     0xfb68581fdff	           movzx eax, byte [rbp - 0x27f]	       777	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53
0x4001bf0	           0xfb6c0	                           movzx eax, al	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001bf3	    0x898574fcffff	            mov dword [rbp - 0x38c], eax	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001bf9	     0xfb68580fdff	           movzx eax, byte [rbp - 0x280]	       777	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53
0x4001c00	           0xfb6d8	                           movzx ebx, al	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001c03	    0x899d70fcffff	            mov dword [rbp - 0x390], ebx	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001c09	     0xfb6857ffdff	           movzx eax, byte [rbp - 0x281]	       776	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53
0x4001c10	           0xfb6c8	                           movzx ecx, al	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001c13	    0x898d6cfcffff	            mov dword [rbp - 0x394], ecx	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001c19	     0xfb6857efdff	           movzx eax, byte [rbp - 0x282]	       776	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53
0x4001c20	           0xfb6d0	                           movzx edx, al	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001c23	    0x899568fcffff	            mov dword [rbp - 0x398], edx	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001c29	     0xfb6857dfdff	           movzx eax, byte [rbp - 0x283]	       775	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53
0x4001c30	        0x440fb6f8	                          movzx r15d, al	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001c34	     0xfb6857cfdff	           movzx eax, byte [rbp - 0x284]	       775	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53
0x4001c3b	        0x440fb6f0	                          movzx r14d, al	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001c3f	     0xfb6857bfdff	           movzx eax, byte [rbp - 0x285]	       774	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53
0x4001c46	        0x440fb6e8	                          movzx r13d, al	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001c4a	     0xfb6857afdff	           movzx eax, byte [rbp - 0x286]	       774	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53
0x4001c51	        0x440fb6e0	                          movzx r12d, al	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001c55	     0xfb68579fdff	           movzx eax, byte [rbp - 0x287]	       773	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53
0x4001c5c	           0xfb6d8	                           movzx ebx, al	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001c5f	     0xfb68578fdff	           movzx eax, byte [rbp - 0x288]	       773	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53
0x4001c66	        0x440fb6d8	                          movzx r11d, al	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001c6a	     0xfb68577fdff	           movzx eax, byte [rbp - 0x289]	       772	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53
0x4001c71	        0x440fb6c0	                           movzx r8d, al	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001c75	    0x44898564fcff	            mov dword [rbp - 0x39c], r8d	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001c7c	     0xfb68576fdff	           movzx eax, byte [rbp - 0x28a]	       772	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53
0x4001c83	        0x440fb6c0	                           movzx r8d, al	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001c87	     0xfb68575fdff	           movzx eax, byte [rbp - 0x28b]	       771	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53
0x4001c8e	           0xfb6c8	                           movzx ecx, al	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001c91	     0xfb68574fdff	           movzx eax, byte [rbp - 0x28c]	       771	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53
0x4001c98	           0xfb6d0	                           movzx edx, al	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001c9b	    0x488b8500fdff	            mov rax, qword [rbp - 0x300]	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001ca2	              0x56	                                push rsi	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001ca3	            0x4151	                                 push r9	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001ca5	              0x57	                                push rdi	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001ca6	            0x4152	                                push r10	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001ca8	    0x8bbd74fcffff	            mov edi, dword [rbp - 0x38c]	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001cae	              0x57	                                push rdi	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001caf	    0x8bbd70fcffff	            mov edi, dword [rbp - 0x390]	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001cb5	              0x57	                                push rdi	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001cb6	    0x8bbd6cfcffff	            mov edi, dword [rbp - 0x394]	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001cbc	              0x57	                                push rdi	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001cbd	    0x8bb568fcffff	            mov esi, dword [rbp - 0x398]	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001cc3	              0x56	                                push rsi	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001cc4	            0x4157	                                push r15	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001cc6	            0x4156	                                push r14	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001cc8	            0x4155	                                push r13	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001cca	            0x4154	                                push r12	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001ccc	              0x53	                                push rbx	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001ccd	            0x4153	                                push r11	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001ccf	    0x448b8d64fcff	            mov r9d, dword [rbp - 0x39c]	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001cd6	    0x488d35000000	                   lea rsi, [0x04001cdd]	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001cdd	          0x4889c7	                            mov rdi, rax	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001ce0	      0xb800000000	                              mov eax, 0	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001ce5	      0xe800000000	                          call 0x4001cea	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001cea	        0x4883c470	                           add rsp, 0x70	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001cee	      0xb807000000	                              mov eax, 7	       783	socks.c	FUNCTION_3	IF_50
0x4001cf3	            0xeb32	                           jmp 0x4001d27	       783	socks.c	FUNCTION_3	IF_50
0x4001cf5	    0x488b8500fdff	            mov rax, qword [rbp - 0x300]	       785	socks.c	FUNCTION_3	CALL_61
0x4001cfc	    0x488d35000000	                   lea rsi, [0x04001d03]	       785	socks.c	FUNCTION_3	CALL_61
0x4001d03	          0x4889c7	                            mov rdi, rax	       785	socks.c	FUNCTION_3	CALL_61
0x4001d06	      0xb800000000	                              mov eax, 0	       785	socks.c	FUNCTION_3	CALL_61
0x4001d0b	      0xe800000000	                          call 0x4001d10	       785	socks.c	FUNCTION_3	CALL_61
0x4001d10	    0x8b85b4fcffff	            mov eax, dword [rbp - 0x34c]	       787	socks.c	FUNCTION_3	CALL_62
0x4001d16	      0xbe01000000	                              mov esi, 1	       787	socks.c	FUNCTION_3	CALL_62
0x4001d1b	            0x89c7	                            mov edi, eax	       787	socks.c	FUNCTION_3	CALL_62
0x4001d1d	      0xe800000000	                          call 0x4001d22	       787	socks.c	FUNCTION_3	CALL_62
0x4001d22	      0xb800000000	                              mov eax, 0	       788	socks.c	FUNCTION_3
0x4001d27	        0x488b5dc8	             mov rbx, qword [rbp - 0x38]	       789	socks.c	FUNCTION_3
0x4001d2b	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       789	socks.c	FUNCTION_3
0x4001d34	            0x7405	                            je 0x4001d3b	       789	socks.c	FUNCTION_3
0x4001d36	      0xe800000000	                          call 0x4001d3b	       789	socks.c	FUNCTION_3
0x4001d3b	        0x488d65d8	                   lea rsp, [rbp - 0x28]	       789	socks.c	FUNCTION_3
0x4001d3f	              0x5b	                                 pop rbx	       789	socks.c	FUNCTION_3
0x4001d40	            0x415c	                                 pop r12	       789	socks.c	FUNCTION_3
0x4001d42	            0x415d	                                 pop r13	       789	socks.c	FUNCTION_3
0x4001d44	            0x415e	                                 pop r14	       789	socks.c	FUNCTION_3
0x4001d46	            0x415f	                                 pop r15	       789	socks.c	FUNCTION_3
0x4001d48	              0x5d	                                 pop rbp	       789	socks.c	FUNCTION_3
0x4001d49	              0xc3	                                     ret	       789	socks.c	FUNCTION_3
Curl_blockread_all	WHILE,0:DO,0:FOR,1:ELSE,0:functions,0:CALL,3:SWITCH,0:IF,6	79
0x4000112	              0x55	                                push rbp	        56	socks.c	FUNCTION_1
0x4000113	          0x4889e5	                            mov rbp, rsp	        56	socks.c	FUNCTION_1
0x4000116	        0x4883ec60	                           sub rsp, 0x60	        56	socks.c	FUNCTION_1
0x400011a	        0x48897dc8	             mov qword [rbp - 0x38], rdi	        56	socks.c	FUNCTION_1
0x400011e	          0x8975c4	             mov dword [rbp - 0x3c], esi	        56	socks.c	FUNCTION_1
0x4000121	        0x488955b8	             mov qword [rbp - 0x48], rdx	        56	socks.c	FUNCTION_1
0x4000125	        0x48894db0	             mov qword [rbp - 0x50], rcx	        56	socks.c	FUNCTION_1
0x4000129	        0x4c8945a8	              mov qword [rbp - 0x58], r8	        56	socks.c	FUNCTION_1
0x400012d	    0x64488b042528	                mov rax, qword fs:[0x28]	        56	socks.c	FUNCTION_1
0x4000136	        0x488945f8	                mov qword [rbp - 8], rax	        56	socks.c	FUNCTION_1
0x400013a	            0x31c0	                            xor eax, eax	        56	socks.c	FUNCTION_1
0x400013c	    0x48c745e80000	               mov qword [rbp - 0x18], 0	        58	socks.c	FUNCTION_1
0x4000144	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        61	socks.c	FUNCTION_1
0x4000148	    0x48c700000000	                      mov qword [rax], 0	        61	socks.c	FUNCTION_1
0x400014f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        63	socks.c	FUNCTION_1	FOR_1	CALL_1
0x4000153	          0x488b00	                    mov rax, qword [rax]	        63	socks.c	FUNCTION_1	FOR_1	CALL_1
0x4000156	      0xba01000000	                              mov edx, 1	        63	socks.c	FUNCTION_1	FOR_1	CALL_1
0x400015b	      0xbe00000000	                              mov esi, 0	        63	socks.c	FUNCTION_1	FOR_1	CALL_1
0x4000160	          0x4889c7	                            mov rdi, rax	        63	socks.c	FUNCTION_1	FOR_1	CALL_1
0x4000163	      0xe800000000	                          call 0x4000168	        63	socks.c	FUNCTION_1	FOR_1	CALL_1
0x4000168	        0x488945f0	             mov qword [rbp - 0x10], rax	        63	socks.c	FUNCTION_1	FOR_1	CALL_1
0x400016c	      0x48837df000	               cmp qword [rbp - 0x10], 0	        64	socks.c	FUNCTION_1	FOR_1	IF_1
0x4000171	            0x790c	                           jns 0x400017f	        64	socks.c	FUNCTION_1	FOR_1	IF_1
0x4000173	    0xc745dc1c0000	           mov dword [rbp - 0x24], 0x1c 	        66	socks.c	FUNCTION_1	FOR_1	IF_1
0x400017a	      0xe9ac000000	                           jmp 0x400022b	        67	socks.c	FUNCTION_1	FOR_1	IF_1
0x400017f	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        69	socks.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x4000183	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	        69	socks.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x4000186	          0x4889d1	                            mov rcx, rdx	        69	socks.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x4000189	      0xbaffffffff	                     mov edx, 0xffffffff	        69	socks.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x400018e	      0xbeffffffff	                     mov esi, 0xffffffff	        69	socks.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x4000193	            0x89c7	                            mov edi, eax	        69	socks.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x4000195	      0xe800000000	                          call 0x400019a	        69	socks.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x400019a	            0x85c0	                           test eax, eax	        69	socks.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x400019c	            0x7f0c	                            jg 0x40001aa	        69	socks.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x400019e	    0xc745dcffffff	     mov dword [rbp - 0x24], 0xffffffff 	        70	socks.c	FUNCTION_1	FOR_1	IF_2
0x40001a5	      0xe981000000	                           jmp 0x400022b	        71	socks.c	FUNCTION_1	FOR_1	IF_2
0x40001aa	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	        73	socks.c	FUNCTION_1	FOR_1	CALL_3
0x40001ae	        0x488d4de0	                   lea rcx, [rbp - 0x20]	        73	socks.c	FUNCTION_1	FOR_1	CALL_3
0x40001b2	        0x488b75b8	             mov rsi, qword [rbp - 0x48]	        73	socks.c	FUNCTION_1	FOR_1	CALL_3
0x40001b6	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	        73	socks.c	FUNCTION_1	FOR_1	CALL_3
0x40001b9	            0x89c7	                            mov edi, eax	        73	socks.c	FUNCTION_1	FOR_1	CALL_3
0x40001bb	      0xe800000000	                          call 0x40001c0	        73	socks.c	FUNCTION_1	FOR_1	CALL_3
0x40001c0	          0x8945dc	             mov dword [rbp - 0x24], eax	        73	socks.c	FUNCTION_1	FOR_1	CALL_3
0x40001c3	        0x837ddc51	           cmp dword [rbp - 0x24], 0x51 	        74	socks.c	FUNCTION_1	FOR_1	IF_3
0x40001c7	            0x745b	                            je 0x4000224	        74	socks.c	FUNCTION_1	FOR_1	IF_3
0x40001c9	        0x837ddc00	               cmp dword [rbp - 0x24], 0	        76	socks.c	FUNCTION_1	FOR_1	IF_4
0x40001cd	            0x755b	                           jne 0x400022a	        76	socks.c	FUNCTION_1	FOR_1	IF_4
0x40001cf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        79	socks.c	FUNCTION_1	FOR_1	IF_5
0x40001d3	        0x483945b0	            cmp qword [rbp - 0x50], rax 	        79	socks.c	FUNCTION_1	FOR_1	IF_5
0x40001d7	            0x751c	                           jne 0x40001f5	        79	socks.c	FUNCTION_1	FOR_1	IF_5
0x40001d9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        80	socks.c	FUNCTION_1	FOR_1	IF_5
0x40001dd	        0x480145e8	            add qword [rbp - 0x18], rax 	        80	socks.c	FUNCTION_1	FOR_1	IF_5
0x40001e1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        81	socks.c	FUNCTION_1	FOR_1	IF_5
0x40001e5	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        81	socks.c	FUNCTION_1	FOR_1	IF_5
0x40001e9	          0x488910	                    mov qword [rax], rdx	        81	socks.c	FUNCTION_1	FOR_1	IF_5
0x40001ec	    0xc745dc000000	               mov dword [rbp - 0x24], 0	        82	socks.c	FUNCTION_1	FOR_1	IF_5
0x40001f3	            0xeb36	                           jmp 0x400022b	        83	socks.c	FUNCTION_1	FOR_1	IF_5
0x40001f5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        85	socks.c	FUNCTION_1	FOR_1	IF_6
0x40001f9	          0x4885c0	                           test rax, rax	        85	socks.c	FUNCTION_1	FOR_1	IF_6
0x40001fc	            0x7509	                           jne 0x4000207	        85	socks.c	FUNCTION_1	FOR_1	IF_6
0x40001fe	    0xc745dcffffff	     mov dword [rbp - 0x24], 0xffffffff 	        86	socks.c	FUNCTION_1	FOR_1	IF_6
0x4000205	            0xeb24	                           jmp 0x400022b	        87	socks.c	FUNCTION_1	FOR_1	IF_6
0x4000207	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        90	socks.c	FUNCTION_1	FOR_1
0x400020b	        0x482945b0	             sub qword [rbp - 0x50], rax	        90	socks.c	FUNCTION_1	FOR_1
0x400020f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        91	socks.c	FUNCTION_1	FOR_1
0x4000213	        0x480145b8	            add qword [rbp - 0x48], rax 	        91	socks.c	FUNCTION_1	FOR_1
0x4000217	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        92	socks.c	FUNCTION_1	FOR_1
0x400021b	        0x480145e8	            add qword [rbp - 0x18], rax 	        92	socks.c	FUNCTION_1	FOR_1
0x400021f	      0xe92bffffff	                           jmp 0x400014f	        92	socks.c	FUNCTION_1	FOR_1
0x4000224	              0x90	                                     nop	        75	socks.c	FUNCTION_1	FOR_1	IF_3
0x4000225	      0xe925ffffff	                           jmp 0x400014f	        93	socks.c	FUNCTION_1	FOR_1
0x400022a	              0x90	                                     nop	        77	socks.c	FUNCTION_1	FOR_1	IF_4
0x400022b	          0x8b45dc	             mov eax, dword [rbp - 0x24]	        94	socks.c	FUNCTION_1
0x400022e	        0x488b7df8	                mov rdi, qword [rbp - 8]	        95	socks.c	FUNCTION_1
0x4000232	    0x6448333c2528	                xor rdi, qword fs:[0x28]	        95	socks.c	FUNCTION_1
0x400023b	            0x7405	                            je 0x4000242	        95	socks.c	FUNCTION_1
0x400023d	      0xe800000000	                          call 0x4000242	        95	socks.c	FUNCTION_1
0x4000242	              0xc9	                                   leave	        95	socks.c	FUNCTION_1
0x4000243	              0xc3	                                     ret	        95	socks.c	FUNCTION_1
