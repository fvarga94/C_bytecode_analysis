Curl_pp_flushsend	ELSE,1:functions,0:IF,2:WHILE,0:SWITCH,0:DO,0:CALL,3:FOR,0	79
0x4000ccc	              0x55	                                push rbp	       487	pingpong.c	FUNCTION_8
0x4000ccd	          0x4889e5	                            mov rbp, rsp	       487	pingpong.c	FUNCTION_8
0x4000cd0	              0x53	                                push rbx	       487	pingpong.c	FUNCTION_8
0x4000cd1	        0x4883ec38	                           sub rsp, 0x38	       487	pingpong.c	FUNCTION_8
0x4000cd5	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       487	pingpong.c	FUNCTION_8
0x4000cd9	    0x64488b042528	                mov rax, qword fs:[0x28]	       487	pingpong.c	FUNCTION_8
0x4000ce2	        0x488945e8	             mov qword [rbp - 0x18], rax	       487	pingpong.c	FUNCTION_8
0x4000ce6	            0x31c0	                            xor eax, eax	       487	pingpong.c	FUNCTION_8
0x4000ce8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       489	pingpong.c	FUNCTION_8
0x4000cec	        0x488b4058	            mov rax, qword [rax + 0x58] 	       489	pingpong.c	FUNCTION_8
0x4000cf0	        0x488945e0	             mov qword [rbp - 0x20], rax	       489	pingpong.c	FUNCTION_8
0x4000cf4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       491	pingpong.c	FUNCTION_8
0x4000cf8	    0x8b8058020000	           mov eax, dword [rax + 0x258] 	       491	pingpong.c	FUNCTION_8
0x4000cfe	          0x8945d0	             mov dword [rbp - 0x30], eax	       491	pingpong.c	FUNCTION_8
0x4000d01	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       492	pingpong.c	FUNCTION_8	CALL_1
0x4000d05	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       492	pingpong.c	FUNCTION_8	CALL_1
0x4000d09	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       492	pingpong.c	FUNCTION_8	CALL_1
0x4000d0d	        0x488b4828	            mov rcx, qword [rax + 0x28] 	       492	pingpong.c	FUNCTION_8	CALL_1
0x4000d11	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       492	pingpong.c	FUNCTION_8	CALL_1
0x4000d15	        0x488b7038	            mov rsi, qword [rax + 0x38] 	       492	pingpong.c	FUNCTION_8	CALL_1
0x4000d19	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       493	pingpong.c	FUNCTION_8
0x4000d1d	        0x488b4030	            mov rax, qword [rax + 0x30] 	       493	pingpong.c	FUNCTION_8
0x4000d21	          0x4829c6	                            sub rsi, rax	       492	pingpong.c	FUNCTION_8	CALL_1
0x4000d24	          0x4889f0	                            mov rax, rsi	       492	pingpong.c	FUNCTION_8	CALL_1
0x4000d27	        0x488d3c01	                    lea rdi, [rcx + rax]	       492	pingpong.c	FUNCTION_8	CALL_1
0x4000d2b	        0x488d4dd8	                   lea rcx, [rbp - 0x28]	       492	pingpong.c	FUNCTION_8	CALL_1
0x4000d2f	          0x8b75d0	             mov esi, dword [rbp - 0x30]	       492	pingpong.c	FUNCTION_8	CALL_1
0x4000d32	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       492	pingpong.c	FUNCTION_8	CALL_1
0x4000d36	          0x4989c8	                             mov r8, rcx	       492	pingpong.c	FUNCTION_8	CALL_1
0x4000d39	          0x4889d1	                            mov rcx, rdx	       492	pingpong.c	FUNCTION_8	CALL_1
0x4000d3c	          0x4889fa	                            mov rdx, rdi	       492	pingpong.c	FUNCTION_8	CALL_1
0x4000d3f	          0x4889c7	                            mov rdi, rax	       492	pingpong.c	FUNCTION_8	CALL_1
0x4000d42	      0xe800000000	                          call 0x4000d47	       492	pingpong.c	FUNCTION_8	CALL_1
0x4000d47	          0x8945d4	             mov dword [rbp - 0x2c], eax	       492	pingpong.c	FUNCTION_8	CALL_1
0x4000d4a	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       494	pingpong.c	FUNCTION_8	IF_1
0x4000d4e	            0x7408	                            je 0x4000d58	       494	pingpong.c	FUNCTION_8	IF_1
0x4000d50	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       495	pingpong.c	FUNCTION_8	IF_1
0x4000d53	      0xe985000000	                           jmp 0x4000ddd	       495	pingpong.c	FUNCTION_8	IF_1
0x4000d58	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       497	pingpong.c	FUNCTION_8	IF_2
0x4000d5c	        0x488b4030	            mov rax, qword [rax + 0x30] 	       497	pingpong.c	FUNCTION_8	IF_2
0x4000d60	          0x4889c2	                            mov rdx, rax	       497	pingpong.c	FUNCTION_8	IF_2
0x4000d63	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       497	pingpong.c	FUNCTION_8	IF_2
0x4000d67	          0x4839c2	                            cmp rdx, rax	       497	pingpong.c	FUNCTION_8	IF_2
0x4000d6a	            0x741c	                            je 0x4000d88	       497	pingpong.c	FUNCTION_8	IF_2
0x4000d6c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       499	pingpong.c	FUNCTION_8	IF_2
0x4000d70	        0x488b4030	            mov rax, qword [rax + 0x30] 	       499	pingpong.c	FUNCTION_8	IF_2
0x4000d74	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       499	pingpong.c	FUNCTION_8	IF_2
0x4000d78	          0x4829d0	                            sub rax, rdx	       499	pingpong.c	FUNCTION_8	IF_2
0x4000d7b	          0x4889c2	                            mov rdx, rax	       499	pingpong.c	FUNCTION_8	IF_2
0x4000d7e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       499	pingpong.c	FUNCTION_8	IF_2
0x4000d82	        0x48895030	             mov qword [rax + 0x30], rdx	       499	pingpong.c	FUNCTION_8	IF_2
0x4000d86	            0xeb50	                           jmp 0x4000dd8	       499	pingpong.c	FUNCTION_8	IF_2
0x4000d88	    0x488b05000000	            mov rax, qword [0x04000d8f] 	       502	pingpong.c	FUNCTION_8	ELSE_1	CALL_2
0x4000d8f	          0x488b00	                    mov rax, qword [rax]	       502	pingpong.c	FUNCTION_8	ELSE_1	CALL_2
0x4000d92	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       502	pingpong.c	FUNCTION_8	ELSE_1	CALL_2
0x4000d96	        0x488b5228	            mov rdx, qword [rdx + 0x28] 	       502	pingpong.c	FUNCTION_8	ELSE_1	CALL_2
0x4000d9a	          0x4889d7	                            mov rdi, rdx	       502	pingpong.c	FUNCTION_8	ELSE_1	CALL_2
0x4000d9d	            0xffd0	                                call rax	       502	pingpong.c	FUNCTION_8	ELSE_1	CALL_2
0x4000d9f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       503	pingpong.c	FUNCTION_8	ELSE_1
0x4000da3	    0x48c740280000	               mov qword [rax + 0x28], 0	       503	pingpong.c	FUNCTION_8	ELSE_1
0x4000dab	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       504	pingpong.c	FUNCTION_8	ELSE_1
0x4000daf	    0x48c740380000	               mov qword [rax + 0x38], 0	       504	pingpong.c	FUNCTION_8	ELSE_1
0x4000db7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       504	pingpong.c	FUNCTION_8	ELSE_1
0x4000dbb	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       504	pingpong.c	FUNCTION_8	ELSE_1
0x4000dbf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       504	pingpong.c	FUNCTION_8	ELSE_1
0x4000dc3	        0x48895030	             mov qword [rax + 0x30], rdx	       504	pingpong.c	FUNCTION_8	ELSE_1
0x4000dc7	        0x488b5dc8	             mov rbx, qword [rbp - 0x38]	       505	pingpong.c	FUNCTION_8	ELSE_1	CALL_3
0x4000dcb	      0xe800000000	                          call 0x4000dd0	       505	pingpong.c	FUNCTION_8	ELSE_1	CALL_3
0x4000dd0	        0x48894340	             mov qword [rbx + 0x40], rax	       505	pingpong.c	FUNCTION_8	ELSE_1	CALL_3
0x4000dd4	        0x48895348	             mov qword [rbx + 0x48], rdx	       505	pingpong.c	FUNCTION_8	ELSE_1	CALL_3
0x4000dd8	      0xb800000000	                              mov eax, 0	       507	pingpong.c	FUNCTION_8
0x4000ddd	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       508	pingpong.c	FUNCTION_8
0x4000de1	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       508	pingpong.c	FUNCTION_8
0x4000dea	            0x7405	                            je 0x4000df1	       508	pingpong.c	FUNCTION_8
0x4000dec	      0xe800000000	                          call 0x4000df1	       508	pingpong.c	FUNCTION_8
0x4000df1	        0x4883c438	                           add rsp, 0x38	       508	pingpong.c	FUNCTION_8
0x4000df5	              0x5b	                                 pop rbx	       508	pingpong.c	FUNCTION_8
0x4000df6	              0x5d	                                 pop rbp	       508	pingpong.c	FUNCTION_8
0x4000df7	              0xc3	                                     ret	       508	pingpong.c	FUNCTION_8
Curl_pp_vsendf	ELSE,1:functions,0:IF,7:WHILE,0:SWITCH,0:DO,0:CALL,16:FOR,0	142
0x4000442	              0x55	                                push rbp	       164	pingpong.c	FUNCTION_4
0x4000443	          0x4889e5	                            mov rbp, rsp	       164	pingpong.c	FUNCTION_4
0x4000446	              0x53	                                push rbx	       164	pingpong.c	FUNCTION_4
0x4000447	        0x4883ec68	                           sub rsp, 0x68	       164	pingpong.c	FUNCTION_4
0x400044b	        0x48897da8	             mov qword [rbp - 0x58], rdi	       164	pingpong.c	FUNCTION_4
0x400044f	        0x488975a0	             mov qword [rbp - 0x60], rsi	       164	pingpong.c	FUNCTION_4
0x4000453	        0x48895598	             mov qword [rbp - 0x68], rdx	       164	pingpong.c	FUNCTION_4
0x4000457	    0x64488b042528	                mov rax, qword fs:[0x28]	       164	pingpong.c	FUNCTION_4
0x4000460	        0x488945e8	             mov qword [rbp - 0x18], rax	       164	pingpong.c	FUNCTION_4
0x4000464	            0x31c0	                            xor eax, eax	       164	pingpong.c	FUNCTION_4
0x4000466	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       170	pingpong.c	FUNCTION_4
0x400046a	        0x488b4058	            mov rax, qword [rax + 0x58] 	       170	pingpong.c	FUNCTION_4
0x400046e	        0x488945c0	             mov qword [rbp - 0x40], rax	       170	pingpong.c	FUNCTION_4
0x4000472	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       181	pingpong.c	FUNCTION_4	IF_1
0x4000477	            0x750a	                           jne 0x4000483	       181	pingpong.c	FUNCTION_4	IF_1
0x4000479	      0xb837000000	                           mov eax, 0x37	       183	pingpong.c	FUNCTION_4	IF_1
0x400047e	      0xe9d4010000	                           jmp 0x4000657	       183	pingpong.c	FUNCTION_4	IF_1
0x4000483	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       185	pingpong.c	FUNCTION_4
0x4000487	          0x488b00	                    mov rax, qword [rax]	       185	pingpong.c	FUNCTION_4
0x400048a	        0x488945c8	             mov qword [rbp - 0x38], rax	       185	pingpong.c	FUNCTION_4
0x400048e	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       187	pingpong.c	FUNCTION_4	CALL_4
0x4000492	          0x4889c6	                            mov rsi, rax	       187	pingpong.c	FUNCTION_4	CALL_4
0x4000495	    0x488d3d000000	                   lea rdi, [0x0400049c]	       187	pingpong.c	FUNCTION_4	CALL_4
0x400049c	      0xb800000000	                              mov eax, 0	       187	pingpong.c	FUNCTION_4	CALL_4
0x40004a1	      0xe800000000	                          call 0x40004a6	       187	pingpong.c	FUNCTION_4	CALL_4
0x40004a6	        0x488945d0	             mov qword [rbp - 0x30], rax	       187	pingpong.c	FUNCTION_4	CALL_4
0x40004aa	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       188	pingpong.c	FUNCTION_4	IF_2
0x40004af	            0x750a	                           jne 0x40004bb	       188	pingpong.c	FUNCTION_4	IF_2
0x40004b1	      0xb81b000000	                           mov eax, 0x1b	       189	pingpong.c	FUNCTION_4	IF_2
0x40004b6	      0xe99c010000	                           jmp 0x4000657	       189	pingpong.c	FUNCTION_4	IF_2
0x40004bb	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       191	pingpong.c	FUNCTION_4	CALL_5
0x40004bf	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       191	pingpong.c	FUNCTION_4	CALL_5
0x40004c3	          0x4889d6	                            mov rsi, rdx	       191	pingpong.c	FUNCTION_4	CALL_5
0x40004c6	          0x4889c7	                            mov rdi, rax	       191	pingpong.c	FUNCTION_4	CALL_5
0x40004c9	      0xe800000000	                          call 0x40004ce	       191	pingpong.c	FUNCTION_4	CALL_5
0x40004ce	        0x488945d8	             mov qword [rbp - 0x28], rax	       191	pingpong.c	FUNCTION_4	CALL_5
0x40004d2	    0x488b05000000	            mov rax, qword [0x040004d9] 	       192	pingpong.c	FUNCTION_4	CALL_6
0x40004d9	          0x488b00	                    mov rax, qword [rax]	       192	pingpong.c	FUNCTION_4	CALL_6
0x40004dc	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       192	pingpong.c	FUNCTION_4	CALL_6
0x40004e0	          0x4889d7	                            mov rdi, rdx	       192	pingpong.c	FUNCTION_4	CALL_6
0x40004e3	            0xffd0	                                call rax	       192	pingpong.c	FUNCTION_4	CALL_6
0x40004e5	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       193	pingpong.c	FUNCTION_4	IF_3
0x40004ea	            0x750a	                           jne 0x40004f6	       193	pingpong.c	FUNCTION_4	IF_3
0x40004ec	      0xb81b000000	                           mov eax, 0x1b	       194	pingpong.c	FUNCTION_4	IF_3
0x40004f1	      0xe961010000	                           jmp 0x4000657	       194	pingpong.c	FUNCTION_4	IF_3
0x40004f6	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       196	pingpong.c	FUNCTION_4
0x40004fe	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       197	pingpong.c	FUNCTION_4	CALL_7
0x4000502	          0x4889c7	                            mov rdi, rax	       197	pingpong.c	FUNCTION_4	CALL_7
0x4000505	      0xe800000000	                          call 0x400050a	       197	pingpong.c	FUNCTION_4	CALL_7
0x400050a	        0x488945e0	             mov qword [rbp - 0x20], rax	       197	pingpong.c	FUNCTION_4	CALL_7
0x400050e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       199	pingpong.c	FUNCTION_4	CALL_8
0x4000512	          0x4889c7	                            mov rdi, rax	       199	pingpong.c	FUNCTION_4	CALL_8
0x4000515	      0xe800000000	                          call 0x400051a	       199	pingpong.c	FUNCTION_4	CALL_8
0x400051a	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	       201	pingpong.c	FUNCTION_4	CALL_9
0x4000521	        0x837db400	               cmp dword [rbp - 0x4c], 0	       203	pingpong.c	FUNCTION_4	IF_4
0x4000525	            0x741b	                            je 0x4000542	       203	pingpong.c	FUNCTION_4	IF_4
0x4000527	    0x488b05000000	            mov rax, qword [0x0400052e] 	       204	pingpong.c	FUNCTION_4	IF_4	CALL_10
0x400052e	          0x488b00	                    mov rax, qword [rax]	       204	pingpong.c	FUNCTION_4	IF_4	CALL_10
0x4000531	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       204	pingpong.c	FUNCTION_4	IF_4	CALL_10
0x4000535	          0x4889d7	                            mov rdi, rdx	       204	pingpong.c	FUNCTION_4	IF_4	CALL_10
0x4000538	            0xffd0	                                call rax	       204	pingpong.c	FUNCTION_4	IF_4	CALL_10
0x400053a	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       205	pingpong.c	FUNCTION_4	IF_4
0x400053d	      0xe915010000	                           jmp 0x4000657	       205	pingpong.c	FUNCTION_4	IF_4
0x4000542	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       211	pingpong.c	FUNCTION_4	CALL_11
0x4000546	    0x8bb058020000	           mov esi, dword [rax + 0x258] 	       211	pingpong.c	FUNCTION_4	CALL_11
0x400054c	        0x488d7db8	                   lea rdi, [rbp - 0x48]	       211	pingpong.c	FUNCTION_4	CALL_11
0x4000550	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       211	pingpong.c	FUNCTION_4	CALL_11
0x4000554	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       211	pingpong.c	FUNCTION_4	CALL_11
0x4000558	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       211	pingpong.c	FUNCTION_4	CALL_11
0x400055c	          0x4989f8	                             mov r8, rdi	       211	pingpong.c	FUNCTION_4	CALL_11
0x400055f	          0x4889c7	                            mov rdi, rax	       211	pingpong.c	FUNCTION_4	CALL_11
0x4000562	      0xe800000000	                          call 0x4000567	       211	pingpong.c	FUNCTION_4	CALL_11
0x4000567	          0x8945b4	             mov dword [rbp - 0x4c], eax	       211	pingpong.c	FUNCTION_4	CALL_11
0x400056a	        0x837db400	               cmp dword [rbp - 0x4c], 0	       219	pingpong.c	FUNCTION_4	IF_5
0x400056e	            0x741b	                            je 0x400058b	       219	pingpong.c	FUNCTION_4	IF_5
0x4000570	    0x488b05000000	            mov rax, qword [0x04000577] 	       220	pingpong.c	FUNCTION_4	IF_5	CALL_13
0x4000577	          0x488b00	                    mov rax, qword [rax]	       220	pingpong.c	FUNCTION_4	IF_5	CALL_13
0x400057a	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       220	pingpong.c	FUNCTION_4	IF_5	CALL_13
0x400057e	          0x4889d7	                            mov rdi, rdx	       220	pingpong.c	FUNCTION_4	IF_5	CALL_13
0x4000581	            0xffd0	                                call rax	       220	pingpong.c	FUNCTION_4	IF_5	CALL_13
0x4000583	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       221	pingpong.c	FUNCTION_4	IF_5
0x4000586	      0xe9cc000000	                           jmp 0x4000657	       221	pingpong.c	FUNCTION_4	IF_5
0x400058b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       224	pingpong.c	FUNCTION_4	IF_6
0x400058f	          0x488b00	                    mov rax, qword [rax]	       224	pingpong.c	FUNCTION_4	IF_6
0x4000592	     0xfb680e80700	          movzx eax, byte [rax + 0x7e8] 	       224	pingpong.c	FUNCTION_4	IF_6
0x4000599	            0x84c0	                             test al, al	       224	pingpong.c	FUNCTION_4	IF_6
0x400059b	            0x7429	                            je 0x40005c6	       224	pingpong.c	FUNCTION_4	IF_6
0x400059d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       225	pingpong.c	FUNCTION_4	IF_6	CALL_14
0x40005a1	          0x4889c6	                            mov rsi, rax	       225	pingpong.c	FUNCTION_4	IF_6	CALL_14
0x40005a4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       225	pingpong.c	FUNCTION_4	IF_6	CALL_14
0x40005a8	          0x488b00	                    mov rax, qword [rax]	       225	pingpong.c	FUNCTION_4	IF_6	CALL_14
0x40005ab	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       225	pingpong.c	FUNCTION_4	IF_6	CALL_14
0x40005af	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       225	pingpong.c	FUNCTION_4	IF_6	CALL_14
0x40005b3	          0x4989c8	                             mov r8, rcx	       225	pingpong.c	FUNCTION_4	IF_6	CALL_14
0x40005b6	          0x4889f1	                            mov rcx, rsi	       225	pingpong.c	FUNCTION_4	IF_6	CALL_14
0x40005b9	      0xbe02000000	                              mov esi, 2	       225	pingpong.c	FUNCTION_4	IF_6	CALL_14
0x40005be	          0x4889c7	                            mov rdi, rax	       225	pingpong.c	FUNCTION_4	IF_6	CALL_14
0x40005c1	      0xe800000000	                          call 0x40005c6	       225	pingpong.c	FUNCTION_4	IF_6	CALL_14
0x40005c6	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       228	pingpong.c	FUNCTION_4	IF_7
0x40005ca	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       228	pingpong.c	FUNCTION_4	IF_7
0x40005ce	          0x4839c2	                            cmp rdx, rax	       228	pingpong.c	FUNCTION_4	IF_7
0x40005d1	            0x7433	                            je 0x4000606	       228	pingpong.c	FUNCTION_4	IF_7
0x40005d3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       230	pingpong.c	FUNCTION_4	IF_7
0x40005d7	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       230	pingpong.c	FUNCTION_4	IF_7
0x40005db	        0x48895028	             mov qword [rax + 0x28], rdx	       230	pingpong.c	FUNCTION_4	IF_7
0x40005df	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       231	pingpong.c	FUNCTION_4	IF_7
0x40005e3	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       231	pingpong.c	FUNCTION_4	IF_7
0x40005e7	        0x48895038	             mov qword [rax + 0x38], rdx	       231	pingpong.c	FUNCTION_4	IF_7
0x40005eb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       232	pingpong.c	FUNCTION_4	IF_7
0x40005ef	          0x4889c2	                            mov rdx, rax	       232	pingpong.c	FUNCTION_4	IF_7
0x40005f2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       232	pingpong.c	FUNCTION_4	IF_7
0x40005f6	          0x4829d0	                            sub rax, rdx	       232	pingpong.c	FUNCTION_4	IF_7
0x40005f9	          0x4889c2	                            mov rdx, rax	       232	pingpong.c	FUNCTION_4	IF_7
0x40005fc	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       232	pingpong.c	FUNCTION_4	IF_7
0x4000600	        0x48895030	             mov qword [rax + 0x30], rdx	       232	pingpong.c	FUNCTION_4	IF_7
0x4000604	            0xeb4c	                           jmp 0x4000652	       232	pingpong.c	FUNCTION_4	IF_7
0x4000606	    0x488b05000000	            mov rax, qword [0x0400060d] 	       235	pingpong.c	FUNCTION_4	ELSE_1	CALL_15
0x400060d	          0x488b00	                    mov rax, qword [rax]	       235	pingpong.c	FUNCTION_4	ELSE_1	CALL_15
0x4000610	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       235	pingpong.c	FUNCTION_4	ELSE_1	CALL_15
0x4000614	          0x4889d7	                            mov rdi, rdx	       235	pingpong.c	FUNCTION_4	ELSE_1	CALL_15
0x4000617	            0xffd0	                                call rax	       235	pingpong.c	FUNCTION_4	ELSE_1	CALL_15
0x4000619	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       236	pingpong.c	FUNCTION_4	ELSE_1
0x400061d	    0x48c740280000	               mov qword [rax + 0x28], 0	       236	pingpong.c	FUNCTION_4	ELSE_1
0x4000625	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       237	pingpong.c	FUNCTION_4	ELSE_1
0x4000629	    0x48c740380000	               mov qword [rax + 0x38], 0	       237	pingpong.c	FUNCTION_4	ELSE_1
0x4000631	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       237	pingpong.c	FUNCTION_4	ELSE_1
0x4000635	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       237	pingpong.c	FUNCTION_4	ELSE_1
0x4000639	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       237	pingpong.c	FUNCTION_4	ELSE_1
0x400063d	        0x48895030	             mov qword [rax + 0x30], rdx	       237	pingpong.c	FUNCTION_4	ELSE_1
0x4000641	        0x488b5da8	             mov rbx, qword [rbp - 0x58]	       238	pingpong.c	FUNCTION_4	ELSE_1	CALL_16
0x4000645	      0xe800000000	                          call 0x400064a	       238	pingpong.c	FUNCTION_4	ELSE_1	CALL_16
0x400064a	        0x48894340	             mov qword [rbx + 0x40], rax	       238	pingpong.c	FUNCTION_4	ELSE_1	CALL_16
0x400064e	        0x48895348	             mov qword [rbx + 0x48], rdx	       238	pingpong.c	FUNCTION_4	ELSE_1	CALL_16
0x4000652	      0xb800000000	                              mov eax, 0	       241	pingpong.c	FUNCTION_4
0x4000657	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       242	pingpong.c	FUNCTION_4
0x400065b	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       242	pingpong.c	FUNCTION_4
0x4000664	            0x7405	                            je 0x400066b	       242	pingpong.c	FUNCTION_4
0x4000666	      0xe800000000	                          call 0x400066b	       242	pingpong.c	FUNCTION_4
0x400066b	        0x4883c468	                           add rsp, 0x68	       242	pingpong.c	FUNCTION_4
0x400066f	              0x5b	                                 pop rbx	       242	pingpong.c	FUNCTION_4
0x4000670	              0x5d	                                 pop rbp	       242	pingpong.c	FUNCTION_4
0x4000671	              0xc3	                                     ret	       242	pingpong.c	FUNCTION_4
Curl_pp_getsock	ELSE,0:functions,0:IF,2:WHILE,0:SWITCH,0:DO,0:CALL,2:FOR,0	25
0x4000c79	              0x55	                                push rbp	       469	pingpong.c	FUNCTION_7
0x4000c7a	          0x4889e5	                            mov rbp, rsp	       469	pingpong.c	FUNCTION_7
0x4000c7d	        0x48897de8	             mov qword [rbp - 0x18], rdi	       469	pingpong.c	FUNCTION_7
0x4000c81	        0x488975e0	             mov qword [rbp - 0x20], rsi	       469	pingpong.c	FUNCTION_7
0x4000c85	          0x8955dc	             mov dword [rbp - 0x24], edx	       469	pingpong.c	FUNCTION_7
0x4000c88	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       470	pingpong.c	FUNCTION_7
0x4000c8c	        0x488b4058	            mov rax, qword [rax + 0x58] 	       470	pingpong.c	FUNCTION_7
0x4000c90	        0x488945f8	                mov qword [rbp - 8], rax	       470	pingpong.c	FUNCTION_7
0x4000c94	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       472	pingpong.c	FUNCTION_7	IF_1
0x4000c98	            0x7507	                           jne 0x4000ca1	       472	pingpong.c	FUNCTION_7	IF_1
0x4000c9a	      0xb800000000	                              mov eax, 0	       473	pingpong.c	FUNCTION_7	IF_1
0x4000c9f	            0xeb29	                           jmp 0x4000cca	       473	pingpong.c	FUNCTION_7	IF_1
0x4000ca1	        0x488b45f8	                mov rax, qword [rbp - 8]	       475	pingpong.c	FUNCTION_7
0x4000ca5	    0x8b9058020000	           mov edx, dword [rax + 0x258] 	       475	pingpong.c	FUNCTION_7
0x4000cab	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       475	pingpong.c	FUNCTION_7
0x4000caf	            0x8910	                    mov dword [rax], edx	       475	pingpong.c	FUNCTION_7
0x4000cb1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       477	pingpong.c	FUNCTION_7	IF_2
0x4000cb5	        0x488b4030	            mov rax, qword [rax + 0x30] 	       477	pingpong.c	FUNCTION_7	IF_2
0x4000cb9	          0x4885c0	                           test rax, rax	       477	pingpong.c	FUNCTION_7	IF_2
0x4000cbc	            0x7407	                            je 0x4000cc5	       477	pingpong.c	FUNCTION_7	IF_2
0x4000cbe	      0xb800000100	                        mov eax, 0x10000	       479	pingpong.c	FUNCTION_7	IF_2	CALL_1
0x4000cc3	            0xeb05	                           jmp 0x4000cca	       479	pingpong.c	FUNCTION_7	IF_2	CALL_1
0x4000cc5	      0xb801000000	                              mov eax, 1	       483	pingpong.c	FUNCTION_7	CALL_2
0x4000cca	              0x5d	                                 pop rbp	       484	pingpong.c	FUNCTION_7
0x4000ccb	              0xc3	                                     ret	       484	pingpong.c	FUNCTION_7
Curl_pp_init	ELSE,0:functions,0:IF,0:WHILE,0:SWITCH,0:DO,0:CALL,1:FOR,0	26
0x40003e6	              0x55	                                push rbp	       141	pingpong.c	FUNCTION_3
0x40003e7	          0x4889e5	                            mov rbp, rsp	       141	pingpong.c	FUNCTION_3
0x40003ea	              0x53	                                push rbx	       141	pingpong.c	FUNCTION_3
0x40003eb	        0x4883ec28	                           sub rsp, 0x28	       141	pingpong.c	FUNCTION_3
0x40003ef	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       141	pingpong.c	FUNCTION_3
0x40003f3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       142	pingpong.c	FUNCTION_3
0x40003f7	        0x488b4058	            mov rax, qword [rax + 0x58] 	       142	pingpong.c	FUNCTION_3
0x40003fb	        0x488945e8	             mov qword [rbp - 0x18], rax	       142	pingpong.c	FUNCTION_3
0x40003ff	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       143	pingpong.c	FUNCTION_3
0x4000403	    0x48c740100000	               mov qword [rax + 0x10], 0	       143	pingpong.c	FUNCTION_3
0x400040b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       144	pingpong.c	FUNCTION_3
0x400040f	          0x488b00	                    mov rax, qword [rax]	       144	pingpong.c	FUNCTION_3
0x4000412	    0x488b90200d00	           mov rdx, qword [rax + 0xd20] 	       144	pingpong.c	FUNCTION_3
0x4000419	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       144	pingpong.c	FUNCTION_3
0x400041d	        0x48895018	             mov qword [rax + 0x18], rdx	       144	pingpong.c	FUNCTION_3
0x4000421	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       145	pingpong.c	FUNCTION_3
0x4000425	        0xc6402001	                mov byte [rax + 0x20], 1	       145	pingpong.c	FUNCTION_3
0x4000429	        0x488b5dd8	             mov rbx, qword [rbp - 0x28]	       146	pingpong.c	FUNCTION_3	CALL_1
0x400042d	      0xe800000000	                          call 0x4000432	       146	pingpong.c	FUNCTION_3	CALL_1
0x4000432	        0x48894340	             mov qword [rbx + 0x40], rax	       146	pingpong.c	FUNCTION_3	CALL_1
0x4000436	        0x48895348	             mov qword [rbx + 0x48], rdx	       146	pingpong.c	FUNCTION_3	CALL_1
0x400043a	              0x90	                                     nop	       147	pingpong.c	FUNCTION_3
0x400043b	        0x4883c428	                           add rsp, 0x28	       147	pingpong.c	FUNCTION_3
0x400043f	              0x5b	                                 pop rbx	       147	pingpong.c	FUNCTION_3
0x4000440	              0x5d	                                 pop rbp	       147	pingpong.c	FUNCTION_3
0x4000441	              0xc3	                                     ret	       147	pingpong.c	FUNCTION_3
Curl_pp_disconnect	ELSE,0:functions,0:IF,0:WHILE,0:SWITCH,0:DO,0:CALL,1:FOR,0	15
0x4000df8	              0x55	                                push rbp	       511	pingpong.c	FUNCTION_9
0x4000df9	          0x4889e5	                            mov rbp, rsp	       511	pingpong.c	FUNCTION_9
0x4000dfc	        0x4883ec10	                           sub rsp, 0x10	       511	pingpong.c	FUNCTION_9
0x4000e00	        0x48897df8	                mov qword [rbp - 8], rdi	       511	pingpong.c	FUNCTION_9
0x4000e04	    0x488b05000000	            mov rax, qword [0x04000e0b] 	       512	pingpong.c	FUNCTION_9	CALL_1
0x4000e0b	          0x488b00	                    mov rax, qword [rax]	       512	pingpong.c	FUNCTION_9	CALL_1
0x4000e0e	        0x488b55f8	                mov rdx, qword [rbp - 8]	       512	pingpong.c	FUNCTION_9	CALL_1
0x4000e12	          0x488b12	                    mov rdx, qword [rdx]	       512	pingpong.c	FUNCTION_9	CALL_1
0x4000e15	          0x4889d7	                            mov rdi, rdx	       512	pingpong.c	FUNCTION_9	CALL_1
0x4000e18	            0xffd0	                                call rax	       512	pingpong.c	FUNCTION_9	CALL_1
0x4000e1a	        0x488b45f8	                mov rax, qword [rbp - 8]	       513	pingpong.c	FUNCTION_9
0x4000e1e	    0x48c700000000	                      mov qword [rax], 0	       513	pingpong.c	FUNCTION_9
0x4000e25	      0xb800000000	                              mov eax, 0	       514	pingpong.c	FUNCTION_9
0x4000e2a	              0xc9	                                   leave	       515	pingpong.c	FUNCTION_9
0x4000e2b	              0xc3	                                     ret	       515	pingpong.c	FUNCTION_9
Curl_pp_moredata	ELSE,0:functions,0:IF,0:WHILE,0:SWITCH,0:DO,0:CALL,0:FOR,0	23
0x4000e2c	              0x55	                                push rbp	       518	pingpong.c	FUNCTION_10
0x4000e2d	          0x4889e5	                            mov rbp, rsp	       518	pingpong.c	FUNCTION_10
0x4000e30	        0x48897df8	                mov qword [rbp - 8], rdi	       518	pingpong.c	FUNCTION_10
0x4000e34	        0x488b45f8	                mov rax, qword [rbp - 8]	       519	pingpong.c	FUNCTION_10
0x4000e38	        0x488b4030	            mov rax, qword [rax + 0x30] 	       519	pingpong.c	FUNCTION_10
0x4000e3c	          0x4885c0	                           test rax, rax	       520	pingpong.c	FUNCTION_10
0x4000e3f	            0x7528	                           jne 0x4000e69	       520	pingpong.c	FUNCTION_10
0x4000e41	        0x488b45f8	                mov rax, qword [rbp - 8]	       519	pingpong.c	FUNCTION_10
0x4000e45	          0x488b00	                    mov rax, qword [rax]	       519	pingpong.c	FUNCTION_10
0x4000e48	          0x4885c0	                           test rax, rax	       519	pingpong.c	FUNCTION_10
0x4000e4b	            0x741c	                            je 0x4000e69	       519	pingpong.c	FUNCTION_10
0x4000e4d	        0x488b45f8	                mov rax, qword [rbp - 8]	       519	pingpong.c	FUNCTION_10
0x4000e51	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       519	pingpong.c	FUNCTION_10
0x4000e55	        0x488b45f8	                mov rax, qword [rbp - 8]	       519	pingpong.c	FUNCTION_10
0x4000e59	        0x488b4008	                mov rax, qword [rax + 8]	       519	pingpong.c	FUNCTION_10
0x4000e5d	          0x4839c2	                            cmp rdx, rax	       520	pingpong.c	FUNCTION_10
0x4000e60	            0x7307	                           jae 0x4000e69	       520	pingpong.c	FUNCTION_10
0x4000e62	      0xb801000000	                              mov eax, 1	       520	pingpong.c	FUNCTION_10
0x4000e67	            0xeb05	                           jmp 0x4000e6e	       520	pingpong.c	FUNCTION_10
0x4000e69	      0xb800000000	                              mov eax, 0	       520	pingpong.c	FUNCTION_10
0x4000e6e	          0x83e001	                              and eax, 1	       519	pingpong.c	FUNCTION_10
0x4000e71	              0x5d	                                 pop rbp	       521	pingpong.c	FUNCTION_10
0x4000e72	              0xc3	                                     ret	       521	pingpong.c	FUNCTION_10
Curl_pp_statemach	ELSE,6:functions,0:IF,11:WHILE,0:SWITCH,0:DO,0:CALL,11:FOR,0	129
0x400020e	              0x55	                                push rbp	        82	pingpong.c	FUNCTION_2
0x400020f	          0x4889e5	                            mov rbp, rsp	        82	pingpong.c	FUNCTION_2
0x4000212	              0x53	                                push rbx	        82	pingpong.c	FUNCTION_2
0x4000213	        0x4883ec48	                           sub rsp, 0x48	        82	pingpong.c	FUNCTION_2
0x4000217	        0x48897db8	             mov qword [rbp - 0x48], rdi	        82	pingpong.c	FUNCTION_2
0x400021b	            0x89f0	                            mov eax, esi	        82	pingpong.c	FUNCTION_2
0x400021d	          0x8845b4	               mov byte [rbp - 0x4c], al	        82	pingpong.c	FUNCTION_2
0x4000220	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        83	pingpong.c	FUNCTION_2
0x4000224	        0x488b4058	            mov rax, qword [rax + 0x58] 	        83	pingpong.c	FUNCTION_2
0x4000228	        0x488945d8	             mov qword [rbp - 0x28], rax	        83	pingpong.c	FUNCTION_2
0x400022c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        84	pingpong.c	FUNCTION_2
0x4000230	    0x8b8058020000	           mov eax, dword [rax + 0x258] 	        84	pingpong.c	FUNCTION_2
0x4000236	          0x8945cc	             mov dword [rbp - 0x34], eax	        84	pingpong.c	FUNCTION_2
0x4000239	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        87	pingpong.c	FUNCTION_2	CALL_1
0x400023d	          0x4889c7	                            mov rdi, rax	        87	pingpong.c	FUNCTION_2	CALL_1
0x4000240	      0xe800000000	                          call 0x4000245	        87	pingpong.c	FUNCTION_2	CALL_1
0x4000245	        0x488945e0	             mov qword [rbp - 0x20], rax	        87	pingpong.c	FUNCTION_2	CALL_1
0x4000249	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        88	pingpong.c	FUNCTION_2
0x400024d	          0x488b00	                    mov rax, qword [rax]	        88	pingpong.c	FUNCTION_2
0x4000250	        0x488945e8	             mov qword [rbp - 0x18], rax	        88	pingpong.c	FUNCTION_2
0x4000254	    0xc745c8000000	               mov dword [rbp - 0x38], 0	        89	pingpong.c	FUNCTION_2
0x400025b	      0x48837de000	               cmp qword [rbp - 0x20], 0	        91	pingpong.c	FUNCTION_2	IF_1
0x4000260	            0x7f22	                            jg 0x4000284	        91	pingpong.c	FUNCTION_2	IF_1
0x4000262	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        92	pingpong.c	FUNCTION_2	IF_1	CALL_2
0x4000266	    0x488d35000000	                   lea rsi, [0x0400026d]	        92	pingpong.c	FUNCTION_2	IF_1	CALL_2
0x400026d	          0x4889c7	                            mov rdi, rax	        92	pingpong.c	FUNCTION_2	IF_1	CALL_2
0x4000270	      0xb800000000	                              mov eax, 0	        92	pingpong.c	FUNCTION_2	IF_1	CALL_2
0x4000275	      0xe800000000	                          call 0x400027a	        92	pingpong.c	FUNCTION_2	IF_1	CALL_2
0x400027a	      0xb81c000000	                           mov eax, 0x1c	        93	pingpong.c	FUNCTION_2	IF_1
0x400027f	      0xe95b010000	                           jmp 0x40003df	        93	pingpong.c	FUNCTION_2	IF_1
0x4000284	        0x807db400	                cmp byte [rbp - 0x4c], 0	        96	pingpong.c	FUNCTION_2	IF_2
0x4000288	            0x741c	                            je 0x40002a6	        96	pingpong.c	FUNCTION_2	IF_2
0x400028a	    0x48c745d0e803	          mov qword [rbp - 0x30], 0x3e8 	        97	pingpong.c	FUNCTION_2	IF_2
0x4000292	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        98	pingpong.c	FUNCTION_2	IF_2	IF_3
0x4000296	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	        98	pingpong.c	FUNCTION_2	IF_2	IF_3
0x400029a	            0x7d12	                           jge 0x40002ae	        98	pingpong.c	FUNCTION_2	IF_2	IF_3
0x400029c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        99	pingpong.c	FUNCTION_2	IF_2	IF_3
0x40002a0	        0x488945d0	             mov qword [rbp - 0x30], rax	        99	pingpong.c	FUNCTION_2	IF_2	IF_3
0x40002a4	            0xeb08	                           jmp 0x40002ae	        99	pingpong.c	FUNCTION_2	IF_2	IF_3
0x40002a6	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       102	pingpong.c	FUNCTION_2	ELSE_1
0x40002ae	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       104	pingpong.c	FUNCTION_2	IF_4	CALL_3
0x40002b2	      0xbe00000000	                              mov esi, 0	       104	pingpong.c	FUNCTION_2	IF_4	CALL_3
0x40002b7	          0x4889c7	                            mov rdi, rax	       104	pingpong.c	FUNCTION_2	IF_4	CALL_3
0x40002ba	      0xe800000000	                          call 0x40002bf	       104	pingpong.c	FUNCTION_2	IF_4	CALL_3
0x40002bf	            0x84c0	                             test al, al	       104	pingpong.c	FUNCTION_2	IF_4	CALL_3
0x40002c1	            0x740c	                            je 0x40002cf	       104	pingpong.c	FUNCTION_2	IF_4	CALL_3
0x40002c3	    0xc745c4010000	               mov dword [rbp - 0x3c], 1	       105	pingpong.c	FUNCTION_2	IF_4
0x40002ca	      0xe985000000	                           jmp 0x4000354	       105	pingpong.c	FUNCTION_2	IF_4
0x40002cf	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       106	pingpong.c	FUNCTION_2	ELSE_2	IF_5	CALL_4
0x40002d3	          0x4889c7	                            mov rdi, rax	       106	pingpong.c	FUNCTION_2	ELSE_2	IF_5	CALL_4
0x40002d6	      0xe800000000	                          call 0x40002db	       106	pingpong.c	FUNCTION_2	ELSE_2	IF_5	CALL_4
0x40002db	            0x84c0	                             test al, al	       106	pingpong.c	FUNCTION_2	ELSE_2	IF_5	CALL_4
0x40002dd	            0x7409	                            je 0x40002e8	       106	pingpong.c	FUNCTION_2	ELSE_2	IF_5	CALL_4
0x40002df	    0xc745c4010000	               mov dword [rbp - 0x3c], 1	       108	pingpong.c	FUNCTION_2	ELSE_2	IF_5
0x40002e6	            0xeb6c	                           jmp 0x4000354	       108	pingpong.c	FUNCTION_2	ELSE_2	IF_5
0x40002e8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       109	pingpong.c	FUNCTION_2	ELSE_3	IF_6	CALL_5
0x40002ec	        0x488b4030	            mov rax, qword [rax + 0x30] 	       109	pingpong.c	FUNCTION_2	ELSE_3	IF_6	CALL_5
0x40002f0	          0x4885c0	                           test rax, rax	       109	pingpong.c	FUNCTION_2	ELSE_3	IF_6	CALL_5
0x40002f3	            0x751e	                           jne 0x4000313	       109	pingpong.c	FUNCTION_2	ELSE_3	IF_6	CALL_5
0x40002f5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       109	pingpong.c	FUNCTION_2	ELSE_3	IF_6	CALL_5
0x40002f9	      0xbe00000000	                              mov esi, 0	       109	pingpong.c	FUNCTION_2	ELSE_3	IF_6	CALL_5
0x40002fe	          0x4889c7	                            mov rdi, rax	       109	pingpong.c	FUNCTION_2	ELSE_3	IF_6	CALL_5
0x4000301	      0xe800000000	                          call 0x4000306	       109	pingpong.c	FUNCTION_2	ELSE_3	IF_6	CALL_5
0x4000306	            0x84c0	                             test al, al	       109	pingpong.c	FUNCTION_2	ELSE_3	IF_6	CALL_5
0x4000308	            0x7409	                            je 0x4000313	       109	pingpong.c	FUNCTION_2	ELSE_3	IF_6	CALL_5
0x400030a	    0xc745c4010000	               mov dword [rbp - 0x3c], 1	       111	pingpong.c	FUNCTION_2	ELSE_3	IF_6
0x4000311	            0xeb41	                           jmp 0x4000354	       111	pingpong.c	FUNCTION_2	ELSE_3	IF_6
0x4000313	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       115	pingpong.c	FUNCTION_2	ELSE_4
0x4000317	        0x488b4030	            mov rax, qword [rax + 0x30] 	       115	pingpong.c	FUNCTION_2	ELSE_4
0x400031b	          0x4885c0	                           test rax, rax	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x400031e	            0x7405	                            je 0x4000325	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x4000320	          0x8b55cc	             mov edx, dword [rbp - 0x34]	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x4000323	            0xeb05	                           jmp 0x400032a	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x4000325	      0xbaffffffff	                     mov edx, 0xffffffff	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x400032a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x400032e	        0x488b4030	            mov rax, qword [rax + 0x30] 	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x4000332	          0x4885c0	                           test rax, rax	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x4000335	            0x7505	                           jne 0x400033c	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x4000337	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x400033a	            0xeb05	                           jmp 0x4000341	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x400033c	      0xb8ffffffff	                     mov eax, 0xffffffff	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x4000341	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x4000345	      0xbeffffffff	                     mov esi, 0xffffffff	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x400034a	            0x89c7	                            mov edi, eax	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x400034c	      0xe800000000	                          call 0x4000351	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x4000351	          0x8945c4	             mov dword [rbp - 0x3c], eax	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x4000354	        0x807db400	                cmp byte [rbp - 0x4c], 0	       118	pingpong.c	FUNCTION_2	IF_7
0x4000358	            0x7441	                            je 0x400039b	       118	pingpong.c	FUNCTION_2	IF_7
0x400035a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       120	pingpong.c	FUNCTION_2	IF_7	IF_8	CALL_7
0x400035e	          0x4889c7	                            mov rdi, rax	       120	pingpong.c	FUNCTION_2	IF_7	IF_8	CALL_7
0x4000361	      0xe800000000	                          call 0x4000366	       120	pingpong.c	FUNCTION_2	IF_7	IF_8	CALL_7
0x4000366	            0x85c0	                           test eax, eax	       120	pingpong.c	FUNCTION_2	IF_7	IF_8	CALL_7
0x4000368	            0x7409	                            je 0x4000373	       120	pingpong.c	FUNCTION_2	IF_7	IF_8	CALL_7
0x400036a	    0xc745c82a0000	           mov dword [rbp - 0x38], 0x2a 	       121	pingpong.c	FUNCTION_2	IF_7	IF_8
0x4000371	            0xeb1d	                           jmp 0x4000390	       121	pingpong.c	FUNCTION_2	IF_7	IF_8
0x4000373	      0xe800000000	                          call 0x4000378	       123	pingpong.c	FUNCTION_2	IF_7	CALL_9
0x4000378	          0x4889c1	                            mov rcx, rax	       123	pingpong.c	FUNCTION_2	IF_7	CALL_9
0x400037b	          0x4889d3	                            mov rbx, rdx	       123	pingpong.c	FUNCTION_2	IF_7	CALL_9
0x400037e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       123	pingpong.c	FUNCTION_2	IF_7	CALL_9
0x4000382	          0x4889ce	                            mov rsi, rcx	       123	pingpong.c	FUNCTION_2	IF_7	CALL_9
0x4000385	          0x4889c7	                            mov rdi, rax	       123	pingpong.c	FUNCTION_2	IF_7	CALL_9
0x4000388	      0xe800000000	                          call 0x400038d	       123	pingpong.c	FUNCTION_2	IF_7	CALL_9
0x400038d	          0x8945c8	             mov dword [rbp - 0x38], eax	       123	pingpong.c	FUNCTION_2	IF_7	CALL_9
0x4000390	        0x837dc800	               cmp dword [rbp - 0x38], 0	       125	pingpong.c	FUNCTION_2	IF_7	IF_9
0x4000394	            0x7405	                            je 0x400039b	       125	pingpong.c	FUNCTION_2	IF_7	IF_9
0x4000396	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       126	pingpong.c	FUNCTION_2	IF_7	IF_9
0x4000399	            0xeb44	                           jmp 0x40003df	       126	pingpong.c	FUNCTION_2	IF_7	IF_9
0x400039b	        0x837dc4ff	cmp dword [rbp - 0x3c], 0xffffffffffffffff	       129	pingpong.c	FUNCTION_2	IF_10
0x400039f	            0x7521	                           jne 0x40003c2	       129	pingpong.c	FUNCTION_2	IF_10
0x40003a1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       130	pingpong.c	FUNCTION_2	IF_10	CALL_10
0x40003a5	    0x488d35000000	                   lea rsi, [0x040003ac]	       130	pingpong.c	FUNCTION_2	IF_10	CALL_10
0x40003ac	          0x4889c7	                            mov rdi, rax	       130	pingpong.c	FUNCTION_2	IF_10	CALL_10
0x40003af	      0xb800000000	                              mov eax, 0	       130	pingpong.c	FUNCTION_2	IF_10	CALL_10
0x40003b4	      0xe800000000	                          call 0x40003b9	       130	pingpong.c	FUNCTION_2	IF_10	CALL_10
0x40003b9	    0xc745c81b0000	           mov dword [rbp - 0x38], 0x1b 	       131	pingpong.c	FUNCTION_2	IF_10
0x40003c0	            0xeb1a	                           jmp 0x40003dc	       131	pingpong.c	FUNCTION_2	IF_10
0x40003c2	        0x837dc400	               cmp dword [rbp - 0x3c], 0	       133	pingpong.c	FUNCTION_2	ELSE_6	IF_11
0x40003c6	            0x7414	                            je 0x40003dc	       133	pingpong.c	FUNCTION_2	ELSE_6	IF_11
0x40003c8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       134	pingpong.c	FUNCTION_2	ELSE_6	IF_11
0x40003cc	        0x488b4060	            mov rax, qword [rax + 0x60] 	       134	pingpong.c	FUNCTION_2	ELSE_6	IF_11
0x40003d0	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       134	pingpong.c	FUNCTION_2	ELSE_6	IF_11
0x40003d4	          0x4889d7	                            mov rdi, rdx	       134	pingpong.c	FUNCTION_2	ELSE_6	IF_11
0x40003d7	            0xffd0	                                call rax	       134	pingpong.c	FUNCTION_2	ELSE_6	IF_11
0x40003d9	          0x8945c8	             mov dword [rbp - 0x38], eax	       134	pingpong.c	FUNCTION_2	ELSE_6	IF_11
0x40003dc	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       136	pingpong.c	FUNCTION_2
0x40003df	        0x4883c448	                           add rsp, 0x48	       137	pingpong.c	FUNCTION_2
0x40003e3	              0x5b	                                 pop rbx	       137	pingpong.c	FUNCTION_2
0x40003e4	              0x5d	                                 pop rbp	       137	pingpong.c	FUNCTION_2
0x40003e5	              0xc3	                                     ret	       137	pingpong.c	FUNCTION_2
Curl_pp_readresp	ELSE,7:functions,0:IF,20:WHILE,1:SWITCH,0:DO,0:CALL,17:FOR,1	331
0x400074f	              0x55	                                push rbp	       278	pingpong.c	FUNCTION_6
0x4000750	          0x4889e5	                            mov rbp, rsp	       278	pingpong.c	FUNCTION_6
0x4000753	        0x4883c480	             add rsp, 0xffffffffffffff80	       278	pingpong.c	FUNCTION_6
0x4000757	          0x897d9c	             mov dword [rbp - 0x64], edi	       278	pingpong.c	FUNCTION_6
0x400075a	        0x48897590	             mov qword [rbp - 0x70], rsi	       278	pingpong.c	FUNCTION_6
0x400075e	        0x48895588	             mov qword [rbp - 0x78], rdx	       278	pingpong.c	FUNCTION_6
0x4000762	        0x48894d80	             mov qword [rbp - 0x80], rcx	       278	pingpong.c	FUNCTION_6
0x4000766	    0x64488b042528	                mov rax, qword fs:[0x28]	       278	pingpong.c	FUNCTION_6
0x400076f	        0x488945f8	                mov qword [rbp - 8], rax	       278	pingpong.c	FUNCTION_6
0x4000773	            0x31c0	                            xor eax, eax	       278	pingpong.c	FUNCTION_6
0x4000775	        0xc645aa01	                mov byte [rbp - 0x56], 1	       280	pingpong.c	FUNCTION_6
0x4000779	        0x488b4590	             mov rax, qword [rbp - 0x70]	       283	pingpong.c	FUNCTION_6
0x400077d	        0x488b4058	            mov rax, qword [rax + 0x58] 	       283	pingpong.c	FUNCTION_6
0x4000781	        0x488945d8	             mov qword [rbp - 0x28], rax	       283	pingpong.c	FUNCTION_6
0x4000785	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       284	pingpong.c	FUNCTION_6
0x4000789	          0x488b00	                    mov rax, qword [rax]	       284	pingpong.c	FUNCTION_6
0x400078c	        0x488945e0	             mov qword [rbp - 0x20], rax	       284	pingpong.c	FUNCTION_6
0x4000790	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       285	pingpong.c	FUNCTION_6
0x4000794	    0x488b80200d00	           mov rax, qword [rax + 0xd20] 	       285	pingpong.c	FUNCTION_6
0x400079b	        0x488945e8	             mov qword [rbp - 0x18], rax	       285	pingpong.c	FUNCTION_6
0x400079f	    0xc745ac000000	               mov dword [rbp - 0x54], 0	       286	pingpong.c	FUNCTION_6
0x40007a6	        0x488b4588	             mov rax, qword [rbp - 0x78]	       288	pingpong.c	FUNCTION_6
0x40007aa	    0xc70000000000	                      mov dword [rax], 0	       288	pingpong.c	FUNCTION_6
0x40007b0	        0x488b4580	             mov rax, qword [rbp - 0x80]	       289	pingpong.c	FUNCTION_6
0x40007b4	    0x48c700000000	                      mov qword [rax], 0	       289	pingpong.c	FUNCTION_6
0x40007bb	        0x488b4590	             mov rax, qword [rbp - 0x70]	       291	pingpong.c	FUNCTION_6
0x40007bf	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       291	pingpong.c	FUNCTION_6
0x40007c3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       291	pingpong.c	FUNCTION_6
0x40007c7	          0x4801d0	                            add rax, rdx	       291	pingpong.c	FUNCTION_6
0x40007ca	        0x488945c0	             mov qword [rbp - 0x40], rax	       291	pingpong.c	FUNCTION_6
0x40007ce	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       294	pingpong.c	FUNCTION_6
0x40007d2	        0x488b4590	             mov rax, qword [rbp - 0x70]	       294	pingpong.c	FUNCTION_6
0x40007d6	        0x488b4018	            mov rax, qword [rax + 0x18] 	       294	pingpong.c	FUNCTION_6
0x40007da	          0x4829c2	                            sub rdx, rax	       294	pingpong.c	FUNCTION_6
0x40007dd	          0x4889d0	                            mov rax, rdx	       294	pingpong.c	FUNCTION_6
0x40007e0	        0x488945b8	             mov qword [rbp - 0x48], rax	       294	pingpong.c	FUNCTION_6
0x40007e4	      0xe947040000	                           jmp 0x4000c30	       296	pingpong.c	FUNCTION_6	WHILE_1
0x40007e9	        0x488b4590	             mov rax, qword [rbp - 0x70]	       299	pingpong.c	FUNCTION_6	WHILE_1	IF_1
0x40007ed	          0x488b00	                    mov rax, qword [rax]	       299	pingpong.c	FUNCTION_6	WHILE_1	IF_1
0x40007f0	          0x4885c0	                           test rax, rax	       299	pingpong.c	FUNCTION_6	WHILE_1	IF_1
0x40007f3	     0xf84a5000000	                            je 0x400089e	       299	pingpong.c	FUNCTION_6	WHILE_1	IF_1
0x40007f9	        0x488b4590	             mov rax, qword [rbp - 0x70]	       307	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2
0x40007fd	        0x488b5008	                mov rdx, qword [rax + 8]	       307	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2
0x4000801	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       307	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2
0x4000805	          0x4801c2	                            add rdx, rax	       307	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2
0x4000808	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       307	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2
0x400080c	    0x488b80900700	           mov rax, qword [rax + 0x790] 	       307	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2
0x4000813	        0x488d4801	                      lea rcx, [rax + 1]	       307	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2
0x4000817	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       307	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2
0x400081b	          0x4801c8	                            add rax, rcx	       307	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2
0x400081e	          0x4839c2	                            cmp rdx, rax	       307	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2
0x4000821	            0x7622	                           jbe 0x4000845	       307	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2
0x4000823	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       308	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2	CALL_1
0x4000827	    0x488d35000000	                   lea rsi, [0x0400082e]	       308	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2	CALL_1
0x400082e	          0x4889c7	                            mov rdi, rax	       308	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2	CALL_1
0x4000831	      0xb800000000	                              mov eax, 0	       308	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2	CALL_1
0x4000836	      0xe800000000	                          call 0x400083b	       308	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2	CALL_1
0x400083b	      0xb838000000	                           mov eax, 0x38	       309	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2
0x4000840	      0xe91e040000	                           jmp 0x4000c63	       309	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2
0x4000845	        0x488b4590	             mov rax, qword [rbp - 0x70]	       311	pingpong.c	FUNCTION_6	WHILE_1	IF_1	CALL_2
0x4000849	        0x488b5008	                mov rdx, qword [rax + 8]	       311	pingpong.c	FUNCTION_6	WHILE_1	IF_1	CALL_2
0x400084d	        0x488b4590	             mov rax, qword [rbp - 0x70]	       311	pingpong.c	FUNCTION_6	WHILE_1	IF_1	CALL_2
0x4000851	          0x488b08	                    mov rcx, qword [rax]	       311	pingpong.c	FUNCTION_6	WHILE_1	IF_1	CALL_2
0x4000854	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       311	pingpong.c	FUNCTION_6	WHILE_1	IF_1	CALL_2
0x4000858	          0x4889ce	                            mov rsi, rcx	       311	pingpong.c	FUNCTION_6	WHILE_1	IF_1	CALL_2
0x400085b	          0x4889c7	                            mov rdi, rax	       311	pingpong.c	FUNCTION_6	WHILE_1	IF_1	CALL_2
0x400085e	      0xe800000000	                          call 0x4000863	       311	pingpong.c	FUNCTION_6	WHILE_1	IF_1	CALL_2
0x4000863	        0x488b4590	             mov rax, qword [rbp - 0x70]	       312	pingpong.c	FUNCTION_6	WHILE_1	IF_1
0x4000867	        0x488b4008	                mov rax, qword [rax + 8]	       312	pingpong.c	FUNCTION_6	WHILE_1	IF_1
0x400086b	        0x488945b0	             mov qword [rbp - 0x50], rax	       312	pingpong.c	FUNCTION_6	WHILE_1	IF_1
0x400086f	    0x488b05000000	            mov rax, qword [0x04000876] 	       313	pingpong.c	FUNCTION_6	WHILE_1	IF_1	CALL_3
0x4000876	          0x488b00	                    mov rax, qword [rax]	       313	pingpong.c	FUNCTION_6	WHILE_1	IF_1	CALL_3
0x4000879	        0x488b5590	             mov rdx, qword [rbp - 0x70]	       313	pingpong.c	FUNCTION_6	WHILE_1	IF_1	CALL_3
0x400087d	          0x488b12	                    mov rdx, qword [rdx]	       313	pingpong.c	FUNCTION_6	WHILE_1	IF_1	CALL_3
0x4000880	          0x4889d7	                            mov rdi, rdx	       313	pingpong.c	FUNCTION_6	WHILE_1	IF_1	CALL_3
0x4000883	            0xffd0	                                call rax	       313	pingpong.c	FUNCTION_6	WHILE_1	IF_1	CALL_3
0x4000885	        0x488b4590	             mov rax, qword [rbp - 0x70]	       314	pingpong.c	FUNCTION_6	WHILE_1	IF_1
0x4000889	    0x48c700000000	                      mov qword [rax], 0	       314	pingpong.c	FUNCTION_6	WHILE_1	IF_1
0x4000890	        0x488b4590	             mov rax, qword [rbp - 0x70]	       315	pingpong.c	FUNCTION_6	WHILE_1	IF_1
0x4000894	    0x48c740080000	                  mov qword [rax + 8], 0	       315	pingpong.c	FUNCTION_6	WHILE_1	IF_1
0x400089c	            0xeb69	                           jmp 0x4000907	       315	pingpong.c	FUNCTION_6	WHILE_1	IF_1
0x400089e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       325	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1
0x40008a2	    0x488b80900700	           mov rax, qword [rax + 0x790] 	       325	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1
0x40008a9	          0x4889c2	                            mov rdx, rax	       324	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	CALL_5
0x40008ac	        0x488b4590	             mov rax, qword [rbp - 0x70]	       325	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1
0x40008b0	        0x488b4010	            mov rax, qword [rax + 0x10] 	       325	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1
0x40008b4	          0x4889d1	                            mov rcx, rdx	       324	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	CALL_5
0x40008b7	          0x4829c1	                            sub rcx, rax	       324	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	CALL_5
0x40008ba	        0x488d7db0	                   lea rdi, [rbp - 0x50]	       324	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	CALL_5
0x40008be	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       324	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	CALL_5
0x40008c2	          0x8b759c	             mov esi, dword [rbp - 0x64]	       324	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	CALL_5
0x40008c5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       324	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	CALL_5
0x40008c9	          0x4989f8	                             mov r8, rdi	       324	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	CALL_5
0x40008cc	          0x4889c7	                            mov rdi, rax	       324	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	CALL_5
0x40008cf	      0xe800000000	                          call 0x40008d4	       324	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	CALL_5
0x40008d4	          0x8945ac	             mov dword [rbp - 0x54], eax	       324	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	CALL_5
0x40008d7	        0x837dac51	           cmp dword [rbp - 0x54], 0x51 	       331	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	IF_3
0x40008db	            0x750a	                           jne 0x40008e7	       331	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	IF_3
0x40008dd	      0xb800000000	                              mov eax, 0	       332	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	IF_3
0x40008e2	      0xe97c030000	                           jmp 0x4000c63	       332	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	IF_3
0x40008e7	        0x837dac00	               cmp dword [rbp - 0x54], 0	       334	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	IF_4
0x40008eb	            0x7510	                           jne 0x40008fd	       334	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	IF_4
0x40008ed	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       334	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	IF_4
0x40008f1	          0x4885c0	                           test rax, rax	       334	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	IF_4
0x40008f4	            0x7e07	                           jle 0x40008fd	       334	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	IF_4
0x40008f6	    0xc745ac000000	               mov dword [rbp - 0x54], 0	       336	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	CALL_7
0x40008fd	        0x837dac00	               cmp dword [rbp - 0x54], 0	       339	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	IF_5
0x4000901	            0x7404	                            je 0x4000907	       339	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	IF_5
0x4000903	        0xc645aa00	                mov byte [rbp - 0x56], 0	       341	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	IF_5
0x4000907	         0xfb645aa	            movzx eax, byte [rbp - 0x56]	       344	pingpong.c	FUNCTION_6	WHILE_1	IF_6
0x400090b	          0x83f001	                              xor eax, 1	       344	pingpong.c	FUNCTION_6	WHILE_1	IF_6
0x400090e	            0x84c0	                             test al, al	       344	pingpong.c	FUNCTION_6	WHILE_1	IF_6
0x4000910	     0xf851a030000	                           jne 0x4000c30	       344	pingpong.c	FUNCTION_6	WHILE_1	IF_6
0x4000916	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       346	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7
0x400091a	          0x4885c0	                           test rax, rax	       346	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7
0x400091d	            0x7f28	                            jg 0x4000947	       346	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7
0x400091f	        0xc645aa00	                mov byte [rbp - 0x56], 0	       347	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7
0x4000923	    0xc745ac380000	           mov dword [rbp - 0x54], 0x38 	       348	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7
0x400092a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       349	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7	CALL_8
0x400092e	    0x488d35000000	                   lea rsi, [0x04000935]	       349	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7	CALL_8
0x4000935	          0x4889c7	                            mov rdi, rax	       349	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7	CALL_8
0x4000938	      0xb800000000	                              mov eax, 0	       349	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7	CALL_8
0x400093d	      0xe800000000	                          call 0x4000942	       349	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7	CALL_8
0x4000942	      0xe9e9020000	                           jmp 0x4000c30	       349	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7	CALL_8
0x4000947	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       356	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3
0x400094f	        0xc645ab00	                mov byte [rbp - 0x55], 0	       357	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3
0x4000953	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       359	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3
0x4000957	    0x488b90f00000	            mov rdx, qword [rax + 0xf0] 	       359	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3
0x400095e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       359	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3
0x4000962	          0x4801c2	                            add rdx, rax	       359	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3
0x4000965	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       359	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3
0x4000969	    0x488990f00000	             mov qword [rax + 0xf0], rdx	       359	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3
0x4000970	        0x488b4590	             mov rax, qword [rbp - 0x70]	       361	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3
0x4000974	        0x488b4010	            mov rax, qword [rax + 0x10] 	       361	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3
0x4000978	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       361	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3
0x400097c	          0x4801c2	                            add rdx, rax	       361	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3
0x400097f	        0x488b4590	             mov rax, qword [rbp - 0x70]	       361	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3
0x4000983	        0x48895010	             mov qword [rax + 0x10], rdx	       361	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3
0x4000987	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       362	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1
0x400098f	      0xe92e010000	                           jmp 0x4000ac2	       362	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1
0x4000994	      0x488345b801	               add qword [rbp - 0x48], 1	       363	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1
0x4000999	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       364	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8
0x400099d	           0xfb600	                   movzx eax, byte [rax]	       364	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8
0x40009a0	            0x3c0a	                             cmp al, 0xa	       364	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8
0x40009a2	     0xf8510010000	                           jne 0x4000ab8	       364	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8
0x40009a8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       372	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_9	IF_10
0x40009ac	     0xfb680e80700	          movzx eax, byte [rax + 0x7e8] 	       372	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_9	IF_10
0x40009b3	            0x84c0	                             test al, al	       372	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_9	IF_10
0x40009b5	            0x7424	                            je 0x40009db	       372	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_9	IF_10
0x40009b7	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       373	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_9	IF_10	CALL_9
0x40009bb	        0x488b4590	             mov rax, qword [rbp - 0x70]	       373	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_9	IF_10	CALL_9
0x40009bf	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       373	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_9	IF_10	CALL_9
0x40009c3	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	       373	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_9	IF_10	CALL_9
0x40009c7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       373	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_9	IF_10	CALL_9
0x40009cb	          0x4989f0	                             mov r8, rsi	       373	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_9	IF_10	CALL_9
0x40009ce	      0xbe01000000	                              mov esi, 1	       373	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_9	IF_10	CALL_9
0x40009d3	          0x4889c7	                            mov rdi, rax	       373	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_9	IF_10	CALL_9
0x40009d6	      0xe800000000	                          call 0x40009db	       373	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_9	IF_10	CALL_9
0x40009db	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       381	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	CALL_10
0x40009df	        0x488b4590	             mov rax, qword [rbp - 0x70]	       381	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	CALL_10
0x40009e3	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       381	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	CALL_10
0x40009e7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       381	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	CALL_10
0x40009eb	      0xbe02000000	                              mov esi, 2	       381	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	CALL_10
0x40009f0	          0x4889c7	                            mov rdi, rax	       381	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	CALL_10
0x40009f3	      0xe800000000	                          call 0x40009f8	       381	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	CALL_10
0x40009f8	          0x8945ac	             mov dword [rbp - 0x54], eax	       381	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	CALL_10
0x40009fb	        0x837dac00	               cmp dword [rbp - 0x54], 0	       383	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_11
0x40009ff	            0x7408	                            je 0x4000a09	       383	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_11
0x4000a01	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       384	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_11
0x4000a04	      0xe95a020000	                           jmp 0x4000c63	       384	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_11
0x4000a09	        0x488b4590	             mov rax, qword [rbp - 0x70]	       386	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12	CALL_11
0x4000a0d	        0x488b4068	            mov rax, qword [rax + 0x68] 	       386	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12	CALL_11
0x4000a11	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       386	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12	CALL_11
0x4000a15	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	       386	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12	CALL_11
0x4000a19	        0x488b7118	            mov rsi, qword [rcx + 0x18] 	       386	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12	CALL_11
0x4000a1d	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	       386	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12	CALL_11
0x4000a21	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	       386	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12	CALL_11
0x4000a25	            0xffd0	                                call rax	       386	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12	CALL_11
0x4000a27	            0x84c0	                             test al, al	       386	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12	CALL_11
0x4000a29	            0x7475	                            je 0x4000aa0	       386	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12	CALL_11
0x4000a2b	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       389	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x4000a2f	        0x488b4590	             mov rax, qword [rbp - 0x70]	       389	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x4000a33	        0x488b4018	            mov rax, qword [rax + 0x18] 	       389	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x4000a37	          0x4829c2	                            sub rdx, rax	       389	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x4000a3a	          0x4889d0	                            mov rax, rdx	       389	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x4000a3d	        0x488945f0	             mov qword [rbp - 0x10], rax	       389	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x4000a41	        0x488b4590	             mov rax, qword [rbp - 0x70]	       390	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12	CALL_12
0x4000a45	        0x488b4818	            mov rcx, qword [rax + 0x18] 	       390	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12	CALL_12
0x4000a49	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       390	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12	CALL_12
0x4000a4d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       390	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12	CALL_12
0x4000a51	          0x4889ce	                            mov rsi, rcx	       390	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12	CALL_12
0x4000a54	          0x4889c7	                            mov rdi, rax	       390	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12	CALL_12
0x4000a57	      0xe800000000	                          call 0x4000a5c	       390	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12	CALL_12
0x4000a5c	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       391	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x4000a60	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       391	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x4000a64	          0x4801d0	                            add rax, rdx	       391	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x4000a67	          0xc60000	                       mov byte [rax], 0	       391	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x4000a6a	        0xc645aa00	                mov byte [rbp - 0x56], 0	       392	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x4000a6e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       393	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x4000a72	        0x488d5001	                      lea rdx, [rax + 1]	       393	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x4000a76	        0x488b4590	             mov rax, qword [rbp - 0x70]	       393	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x4000a7a	        0x48895018	             mov qword [rax + 0x18], rdx	       393	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x4000a7e	      0x488345c801	               add qword [rbp - 0x38], 1	       394	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x4000a83	        0x488b4590	             mov rax, qword [rbp - 0x70]	       396	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x4000a87	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       396	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x4000a8b	        0x488b4580	             mov rax, qword [rbp - 0x80]	       396	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x4000a8f	          0x488910	                    mov qword [rax], rdx	       396	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x4000a92	        0x488b4590	             mov rax, qword [rbp - 0x70]	       397	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x4000a96	    0x48c740100000	               mov qword [rax + 0x10], 0	       397	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x4000a9e	            0xeb30	                           jmp 0x4000ad0	       398	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x4000aa0	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       400	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8
0x4000aa8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       401	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8
0x4000aac	        0x488d5001	                      lea rdx, [rax + 1]	       401	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8
0x4000ab0	        0x488b4590	             mov rax, qword [rbp - 0x70]	       401	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8
0x4000ab4	        0x48895018	             mov qword [rax + 0x18], rdx	       401	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8
0x4000ab8	      0x488345c001	               add qword [rbp - 0x40], 1	       362	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1
0x4000abd	      0x488345c801	               add qword [rbp - 0x38], 1	       362	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1
0x4000ac2	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       362	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1
0x4000ac6	        0x483945c8	            cmp qword [rbp - 0x38], rax 	       362	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1
0x4000aca	     0xf8cc4feffff	                            jl 0x4000994	       362	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1
0x4000ad0	         0xfb645aa	            movzx eax, byte [rbp - 0x56]	       405	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_13
0x4000ad4	          0x83f001	                              xor eax, 1	       405	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_13
0x4000ad7	            0x84c0	                             test al, al	       405	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_13
0x4000ad9	            0x741f	                            je 0x4000afa	       405	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_13
0x4000adb	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       405	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_13
0x4000adf	        0x483945c8	            cmp qword [rbp - 0x38], rax 	       405	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_13
0x4000ae3	            0x7415	                            je 0x4000afa	       405	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_13
0x4000ae5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       410	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_13
0x4000ae9	        0x482b45c8	             sub rax, qword [rbp - 0x38]	       410	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_13
0x4000aed	        0x488945d0	             mov qword [rbp - 0x30], rax	       410	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_13
0x4000af1	        0xc645ab01	                mov byte [rbp - 0x55], 1	       411	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_13
0x4000af5	      0xe999000000	                           jmp 0x4000b93	       411	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_13
0x4000afa	        0x807daa00	                cmp byte [rbp - 0x56], 0	       416	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14
0x4000afe	     0xf8481000000	                            je 0x4000b85	       416	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14
0x4000b04	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       418	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15
0x4000b08	        0x483945b8	            cmp qword [rbp - 0x48], rax 	       418	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15
0x4000b0c	            0x754e	                           jne 0x4000b5c	       418	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15
0x4000b0e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       418	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15
0x4000b12	    0x488b80900700	           mov rax, qword [rax + 0x790] 	       418	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15
0x4000b19	          0x4889c2	                            mov rdx, rax	       418	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15
0x4000b1c	        0x48c1ea3f	                           shr rdx, 0x3f	       418	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15
0x4000b20	          0x4801d0	                            add rax, rdx	       418	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15
0x4000b23	          0x48d1f8	                              sar rax, 1	       418	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15
0x4000b26	          0x4889c2	                            mov rdx, rax	       418	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15
0x4000b29	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       418	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15
0x4000b2d	          0x4839c2	                            cmp rdx, rax	       418	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15
0x4000b30	            0x7d2a	                           jge 0x4000b5c	       418	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15
0x4000b32	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       422	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15	CALL_15
0x4000b36	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       422	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15	CALL_15
0x4000b3a	    0x488d35000000	                   lea rsi, [0x04000b41]	       422	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15	CALL_15
0x4000b41	          0x4889c7	                            mov rdi, rax	       422	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15	CALL_15
0x4000b44	      0xb800000000	                              mov eax, 0	       422	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15	CALL_15
0x4000b49	      0xe800000000	                          call 0x4000b4e	       422	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15	CALL_15
0x4000b4e	        0xc645ab01	                mov byte [rbp - 0x55], 1	       424	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15
0x4000b52	    0x48c745d02800	           mov qword [rbp - 0x30], 0x28 	       428	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15
0x4000b5a	            0xeb37	                           jmp 0x4000b93	       428	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15
0x4000b5c	        0x488b4590	             mov rax, qword [rbp - 0x70]	       430	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	ELSE_5	IF_16
0x4000b60	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       430	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	ELSE_5	IF_16
0x4000b64	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       430	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	ELSE_5	IF_16
0x4000b68	    0x488b80900700	           mov rax, qword [rax + 0x790] 	       430	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	ELSE_5	IF_16
0x4000b6f	          0x48d1e8	                              shr rax, 1	       430	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	ELSE_5	IF_16
0x4000b72	          0x4839c2	                            cmp rdx, rax	       430	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	ELSE_5	IF_16
0x4000b75	            0x761c	                           jbe 0x4000b93	       430	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	ELSE_5	IF_16
0x4000b77	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       434	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	ELSE_5	IF_16
0x4000b7b	        0x488945d0	             mov qword [rbp - 0x30], rax	       434	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	ELSE_5	IF_16
0x4000b7f	        0xc645ab01	                mov byte [rbp - 0x55], 1	       435	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	ELSE_5	IF_16
0x4000b83	            0xeb0e	                           jmp 0x4000b93	       435	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	ELSE_5	IF_16
0x4000b85	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       438	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_6	IF_17
0x4000b89	        0x483945c8	            cmp qword [rbp - 0x38], rax 	       438	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_6	IF_17
0x4000b8d	            0x7504	                           jne 0x4000b93	       438	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_6	IF_17
0x4000b8f	        0xc645ab01	                mov byte [rbp - 0x55], 1	       439	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_6	IF_17
0x4000b93	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       441	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18
0x4000b98	            0x7464	                            je 0x4000bfe	       441	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18
0x4000b9a	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       442	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18
0x4000b9e	        0x488b4590	             mov rax, qword [rbp - 0x70]	       442	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18
0x4000ba2	        0x48895008	                mov qword [rax + 8], rdx	       442	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18
0x4000ba6	    0x488b05000000	            mov rax, qword [0x04000bad] 	       443	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18	CALL_16
0x4000bad	          0x488b00	                    mov rax, qword [rax]	       443	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18	CALL_16
0x4000bb0	        0x488b5590	             mov rdx, qword [rbp - 0x70]	       443	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18	CALL_16
0x4000bb4	        0x488b5208	                mov rdx, qword [rdx + 8]	       443	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18	CALL_16
0x4000bb8	          0x4889d7	                            mov rdi, rdx	       443	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18	CALL_16
0x4000bbb	            0xffd0	                                call rax	       443	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18	CALL_16
0x4000bbd	          0x4889c2	                            mov rdx, rax	       443	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18	CALL_16
0x4000bc0	        0x488b4590	             mov rax, qword [rbp - 0x70]	       443	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18	CALL_16
0x4000bc4	          0x488910	                    mov qword [rax], rdx	       443	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18	CALL_16
0x4000bc7	        0x488b4590	             mov rax, qword [rbp - 0x70]	       444	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18	IF_19
0x4000bcb	          0x488b00	                    mov rax, qword [rax]	       444	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18	IF_19
0x4000bce	          0x4885c0	                           test rax, rax	       444	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18	IF_19
0x4000bd1	            0x7424	                            je 0x4000bf7	       444	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18	IF_19
0x4000bd3	        0x488b4590	             mov rax, qword [rbp - 0x70]	       445	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18	CALL_17
0x4000bd7	        0x488b5008	                mov rdx, qword [rax + 8]	       445	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18	CALL_17
0x4000bdb	        0x488b4590	             mov rax, qword [rbp - 0x70]	       445	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18	CALL_17
0x4000bdf	        0x488b4818	            mov rcx, qword [rax + 0x18] 	       445	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18	CALL_17
0x4000be3	        0x488b4590	             mov rax, qword [rbp - 0x70]	       445	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18	CALL_17
0x4000be7	          0x488b00	                    mov rax, qword [rax]	       445	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18	CALL_17
0x4000bea	          0x4889ce	                            mov rsi, rcx	       445	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18	CALL_17
0x4000bed	          0x4889c7	                            mov rdi, rax	       445	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18	CALL_17
0x4000bf0	      0xe800000000	                          call 0x4000bf5	       445	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18	CALL_17
0x4000bf5	            0xeb07	                           jmp 0x4000bfe	       445	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18	CALL_17
0x4000bf7	      0xb81b000000	                           mov eax, 0x1b	       447	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18	ELSE_7
0x4000bfc	            0xeb65	                           jmp 0x4000c63	       447	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18	ELSE_7
0x4000bfe	        0x807dab00	                cmp byte [rbp - 0x55], 0	       449	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_7	IF_20
0x4000c02	            0x742c	                            je 0x4000c30	       449	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_7	IF_20
0x4000c04	        0x488b4590	             mov rax, qword [rbp - 0x70]	       452	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_7	IF_20
0x4000c08	    0x48c740100000	               mov qword [rax + 0x10], 0	       452	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_7	IF_20
0x4000c10	        0x488b4590	             mov rax, qword [rbp - 0x70]	       453	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_7	IF_20
0x4000c14	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       453	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_7	IF_20
0x4000c18	        0x48895018	             mov qword [rax + 0x18], rdx	       453	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_7	IF_20
0x4000c1c	        0x488b4590	             mov rax, qword [rbp - 0x70]	       453	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_7	IF_20
0x4000c20	        0x488b4018	            mov rax, qword [rax + 0x18] 	       453	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_7	IF_20
0x4000c24	        0x488945c0	             mov qword [rbp - 0x40], rax	       453	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_7	IF_20
0x4000c28	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       454	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_7	IF_20
0x4000c30	        0x488b4590	             mov rax, qword [rbp - 0x70]	       296	pingpong.c	FUNCTION_6	WHILE_1
0x4000c34	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       296	pingpong.c	FUNCTION_6	WHILE_1
0x4000c38	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       296	pingpong.c	FUNCTION_6	WHILE_1
0x4000c3c	    0x488b80900700	           mov rax, qword [rax + 0x790] 	       296	pingpong.c	FUNCTION_6	WHILE_1
0x4000c43	          0x4839c2	                            cmp rdx, rax	       296	pingpong.c	FUNCTION_6	WHILE_1
0x4000c46	            0x7310	                           jae 0x4000c58	       296	pingpong.c	FUNCTION_6	WHILE_1
0x4000c48	        0x807daa00	                cmp byte [rbp - 0x56], 0	       296	pingpong.c	FUNCTION_6	WHILE_1
0x4000c4c	            0x740a	                            je 0x4000c58	       296	pingpong.c	FUNCTION_6	WHILE_1
0x4000c4e	        0x837dac00	               cmp dword [rbp - 0x54], 0	       297	pingpong.c	FUNCTION_6	WHILE_1
0x4000c52	     0xf8491fbffff	                            je 0x40007e9	       297	pingpong.c	FUNCTION_6	WHILE_1
0x4000c58	        0x488b4590	             mov rax, qword [rbp - 0x70]	       461	pingpong.c	FUNCTION_6
0x4000c5c	        0xc6402000	                mov byte [rax + 0x20], 0	       461	pingpong.c	FUNCTION_6
0x4000c60	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       463	pingpong.c	FUNCTION_6
0x4000c63	        0x488b75f8	                mov rsi, qword [rbp - 8]	       464	pingpong.c	FUNCTION_6
0x4000c67	    0x644833342528	                xor rsi, qword fs:[0x28]	       464	pingpong.c	FUNCTION_6
0x4000c70	            0x7405	                            je 0x4000c77	       464	pingpong.c	FUNCTION_6
0x4000c72	      0xe800000000	                          call 0x4000c77	       464	pingpong.c	FUNCTION_6
0x4000c77	              0xc9	                                   leave	       464	pingpong.c	FUNCTION_6
0x4000c78	              0xc3	                                     ret	       464	pingpong.c	FUNCTION_6
Curl_pp_state_timeout	ELSE,0:functions,0:IF,1:WHILE,0:SWITCH,0:DO,0:CALL,5:FOR,0	69
0x4000112	              0x55	                                push rbp	        48	pingpong.c	FUNCTION_1
0x4000113	          0x4889e5	                            mov rbp, rsp	        48	pingpong.c	FUNCTION_1
0x4000116	            0x4154	                                push r12	        48	pingpong.c	FUNCTION_1
0x4000118	              0x53	                                push rbx	        48	pingpong.c	FUNCTION_1
0x4000119	        0x4883ec40	                           sub rsp, 0x40	        48	pingpong.c	FUNCTION_1
0x400011d	        0x48897db8	             mov qword [rbp - 0x48], rdi	        48	pingpong.c	FUNCTION_1
0x4000121	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        49	pingpong.c	FUNCTION_1
0x4000125	        0x488b4058	            mov rax, qword [rax + 0x58] 	        49	pingpong.c	FUNCTION_1
0x4000129	        0x488945d0	             mov qword [rbp - 0x30], rax	        49	pingpong.c	FUNCTION_1
0x400012d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        50	pingpong.c	FUNCTION_1
0x4000131	          0x488b00	                    mov rax, qword [rax]	        50	pingpong.c	FUNCTION_1
0x4000134	        0x488945d8	             mov qword [rbp - 0x28], rax	        50	pingpong.c	FUNCTION_1
0x4000138	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        53	pingpong.c	FUNCTION_1
0x400013c	    0x488b80500300	           mov rax, qword [rax + 0x350] 	        53	pingpong.c	FUNCTION_1
0x4000143	          0x4885c0	                           test rax, rax	        54	pingpong.c	FUNCTION_1
0x4000146	            0x740d	                            je 0x4000155	        54	pingpong.c	FUNCTION_1
0x4000148	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        54	pingpong.c	FUNCTION_1
0x400014c	    0x488b80500300	           mov rax, qword [rax + 0x350] 	        54	pingpong.c	FUNCTION_1
0x4000153	            0xeb08	                           jmp 0x400015d	        54	pingpong.c	FUNCTION_1
0x4000155	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        54	pingpong.c	FUNCTION_1
0x4000159	        0x488b4050	            mov rax, qword [rax + 0x50] 	        54	pingpong.c	FUNCTION_1
0x400015d	        0x488945e0	             mov qword [rbp - 0x20], rax	        53	pingpong.c	FUNCTION_1
0x4000161	      0xe800000000	                          call 0x4000166	        64	pingpong.c	FUNCTION_1	CALL_2
0x4000166	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	        64	pingpong.c	FUNCTION_1	CALL_2
0x400016a	        0x488b5948	            mov rbx, qword [rcx + 0x48] 	        64	pingpong.c	FUNCTION_1	CALL_2
0x400016e	        0x488b4940	            mov rcx, qword [rcx + 0x40] 	        64	pingpong.c	FUNCTION_1	CALL_2
0x4000172	          0x4889c6	                            mov rsi, rax	        64	pingpong.c	FUNCTION_1	CALL_2
0x4000175	          0x4889d7	                            mov rdi, rdx	        64	pingpong.c	FUNCTION_1	CALL_2
0x4000178	          0x4889d0	                            mov rax, rdx	        64	pingpong.c	FUNCTION_1	CALL_2
0x400017b	          0x4889ca	                            mov rdx, rcx	        64	pingpong.c	FUNCTION_1	CALL_2
0x400017e	          0x4889d9	                            mov rcx, rbx	        64	pingpong.c	FUNCTION_1	CALL_2
0x4000181	          0x4889f7	                            mov rdi, rsi	        64	pingpong.c	FUNCTION_1	CALL_2
0x4000184	          0x4889c6	                            mov rsi, rax	        64	pingpong.c	FUNCTION_1	CALL_2
0x4000187	      0xe800000000	                          call 0x400018c	        64	pingpong.c	FUNCTION_1	CALL_2
0x400018c	          0x4889c2	                            mov rdx, rax	        64	pingpong.c	FUNCTION_1	CALL_2
0x400018f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        63	pingpong.c	FUNCTION_1
0x4000193	          0x4829d0	                            sub rax, rdx	        63	pingpong.c	FUNCTION_1
0x4000196	        0x488945c8	             mov qword [rbp - 0x38], rax	        63	pingpong.c	FUNCTION_1
0x400019a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        66	pingpong.c	FUNCTION_1	IF_1
0x400019e	    0x488b80300300	           mov rax, qword [rax + 0x330] 	        66	pingpong.c	FUNCTION_1	IF_1
0x40001a5	          0x4885c0	                           test rax, rax	        66	pingpong.c	FUNCTION_1	IF_1
0x40001a8	            0x7457	                            je 0x4000201	        66	pingpong.c	FUNCTION_1	IF_1
0x40001aa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        68	pingpong.c	FUNCTION_1	IF_1
0x40001ae	    0x4c8ba0300300	           mov r12, qword [rax + 0x330] 	        68	pingpong.c	FUNCTION_1	IF_1
0x40001b5	      0xe800000000	                          call 0x40001ba	        69	pingpong.c	FUNCTION_1	IF_1	CALL_4
0x40001ba	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	        69	pingpong.c	FUNCTION_1	IF_1	CALL_4
0x40001be	    0x488b99400200	           mov rbx, qword [rcx + 0x240] 	        69	pingpong.c	FUNCTION_1	IF_1	CALL_4
0x40001c5	    0x488b89380200	           mov rcx, qword [rcx + 0x238] 	        69	pingpong.c	FUNCTION_1	IF_1	CALL_4
0x40001cc	          0x4889c6	                            mov rsi, rax	        69	pingpong.c	FUNCTION_1	IF_1	CALL_4
0x40001cf	          0x4889d7	                            mov rdi, rdx	        69	pingpong.c	FUNCTION_1	IF_1	CALL_4
0x40001d2	          0x4889d0	                            mov rax, rdx	        69	pingpong.c	FUNCTION_1	IF_1	CALL_4
0x40001d5	          0x4889ca	                            mov rdx, rcx	        69	pingpong.c	FUNCTION_1	IF_1	CALL_4
0x40001d8	          0x4889d9	                            mov rcx, rbx	        69	pingpong.c	FUNCTION_1	IF_1	CALL_4
0x40001db	          0x4889f7	                            mov rdi, rsi	        69	pingpong.c	FUNCTION_1	IF_1	CALL_4
0x40001de	          0x4889c6	                            mov rsi, rax	        69	pingpong.c	FUNCTION_1	IF_1	CALL_4
0x40001e1	      0xe800000000	                          call 0x40001e6	        69	pingpong.c	FUNCTION_1	IF_1	CALL_4
0x40001e6	          0x4929c4	                            sub r12, rax	        68	pingpong.c	FUNCTION_1	IF_1
0x40001e9	          0x4c89e0	                            mov rax, r12	        68	pingpong.c	FUNCTION_1	IF_1
0x40001ec	        0x488945e8	             mov qword [rbp - 0x18], rax	        68	pingpong.c	FUNCTION_1	IF_1
0x40001f0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        72	pingpong.c	FUNCTION_1	IF_1	CALL_5
0x40001f4	        0x483945e8	            cmp qword [rbp - 0x18], rax 	        72	pingpong.c	FUNCTION_1	IF_1	CALL_5
0x40001f8	      0x480f4e45e8	          cmovle rax, qword [rbp - 0x18]	        72	pingpong.c	FUNCTION_1	IF_1	CALL_5
0x40001fd	        0x488945c8	             mov qword [rbp - 0x38], rax	        72	pingpong.c	FUNCTION_1	IF_1	CALL_5
0x4000201	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        75	pingpong.c	FUNCTION_1
0x4000205	        0x4883c440	                           add rsp, 0x40	        76	pingpong.c	FUNCTION_1
0x4000209	              0x5b	                                 pop rbx	        76	pingpong.c	FUNCTION_1
0x400020a	            0x415c	                                 pop r12	        76	pingpong.c	FUNCTION_1
0x400020c	              0x5d	                                 pop rbp	        76	pingpong.c	FUNCTION_1
0x400020d	              0xc3	                                     ret	        76	pingpong.c	FUNCTION_1
Curl_pp_sendf	ELSE,0:functions,0:IF,0:WHILE,0:SWITCH,0:DO,0:CALL,3:FOR,0	42
0x4000672	              0x55	                                push rbp	       257	pingpong.c	FUNCTION_5
0x4000673	          0x4889e5	                            mov rbp, rsp	       257	pingpong.c	FUNCTION_5
0x4000676	    0x4881ecf00000	                           sub rsp, 0xf0	       257	pingpong.c	FUNCTION_5
0x400067d	    0x4889bd18ffff	             mov qword [rbp - 0xe8], rdi	       257	pingpong.c	FUNCTION_5
0x4000684	    0x4889b510ffff	             mov qword [rbp - 0xf0], rsi	       257	pingpong.c	FUNCTION_5
0x400068b	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	       257	pingpong.c	FUNCTION_5
0x4000692	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       257	pingpong.c	FUNCTION_5
0x4000699	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       257	pingpong.c	FUNCTION_5
0x40006a0	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       257	pingpong.c	FUNCTION_5
0x40006a7	            0x84c0	                             test al, al	       257	pingpong.c	FUNCTION_5
0x40006a9	            0x7420	                            je 0x40006cb	       257	pingpong.c	FUNCTION_5
0x40006ab	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       257	pingpong.c	FUNCTION_5
0x40006af	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       257	pingpong.c	FUNCTION_5
0x40006b3	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       257	pingpong.c	FUNCTION_5
0x40006b7	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       257	pingpong.c	FUNCTION_5
0x40006bb	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       257	pingpong.c	FUNCTION_5
0x40006bf	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       257	pingpong.c	FUNCTION_5
0x40006c3	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       257	pingpong.c	FUNCTION_5
0x40006c7	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       257	pingpong.c	FUNCTION_5
0x40006cb	    0x64488b042528	                mov rax, qword fs:[0x28]	       257	pingpong.c	FUNCTION_5
0x40006d4	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       257	pingpong.c	FUNCTION_5
0x40006db	            0x31c0	                            xor eax, eax	       257	pingpong.c	FUNCTION_5
0x40006dd	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x10 	       260	pingpong.c	FUNCTION_5	CALL_1
0x40006e7	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       260	pingpong.c	FUNCTION_5	CALL_1
0x40006f1	        0x488d4510	                   lea rax, [rbp + 0x10]	       260	pingpong.c	FUNCTION_5	CALL_1
0x40006f5	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       260	pingpong.c	FUNCTION_5	CALL_1
0x40006fc	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       260	pingpong.c	FUNCTION_5	CALL_1
0x4000703	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       260	pingpong.c	FUNCTION_5	CALL_1
0x400070a	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	       262	pingpong.c	FUNCTION_5	CALL_2
0x4000711	    0x488b8d10ffff	             mov rcx, qword [rbp - 0xf0]	       262	pingpong.c	FUNCTION_5	CALL_2
0x4000718	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       262	pingpong.c	FUNCTION_5	CALL_2
0x400071f	          0x4889ce	                            mov rsi, rcx	       262	pingpong.c	FUNCTION_5	CALL_2
0x4000722	          0x4889c7	                            mov rdi, rax	       262	pingpong.c	FUNCTION_5	CALL_2
0x4000725	      0xe800000000	                          call 0x400072a	       262	pingpong.c	FUNCTION_5	CALL_2
0x400072a	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	       262	pingpong.c	FUNCTION_5	CALL_2
0x4000730	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	       266	pingpong.c	FUNCTION_5
0x4000736	    0x488bb548ffff	             mov rsi, qword [rbp - 0xb8]	       267	pingpong.c	FUNCTION_5
0x400073d	    0x644833342528	                xor rsi, qword fs:[0x28]	       267	pingpong.c	FUNCTION_5
0x4000746	            0x7405	                            je 0x400074d	       267	pingpong.c	FUNCTION_5
0x4000748	      0xe800000000	                          call 0x400074d	       267	pingpong.c	FUNCTION_5
0x400074d	              0xc9	                                   leave	       267	pingpong.c	FUNCTION_5
0x400074e	              0xc3	                                     ret	       267	pingpong.c	FUNCTION_5
