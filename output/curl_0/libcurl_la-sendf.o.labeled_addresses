Curl_read	SWITCH,0:functions,0:CALL,6:DO,0:ELSE,1:WHILE,0:IF,4:FOR,0	140
0x40011b6	              0x55	                                push rbp	       707	sendf.c	FUNCTION_15
0x40011b7	          0x4889e5	                            mov rbp, rsp	       707	sendf.c	FUNCTION_15
0x40011ba	        0x4883ec70	                           sub rsp, 0x70	       707	sendf.c	FUNCTION_15
0x40011be	        0x48897db8	             mov qword [rbp - 0x48], rdi	       707	sendf.c	FUNCTION_15
0x40011c2	          0x8975b4	             mov dword [rbp - 0x4c], esi	       707	sendf.c	FUNCTION_15
0x40011c5	        0x488955a8	             mov qword [rbp - 0x58], rdx	       707	sendf.c	FUNCTION_15
0x40011c9	        0x48894da0	             mov qword [rbp - 0x60], rcx	       707	sendf.c	FUNCTION_15
0x40011cd	        0x4c894598	              mov qword [rbp - 0x68], r8	       707	sendf.c	FUNCTION_15
0x40011d1	    0x64488b042528	                mov rax, qword fs:[0x28]	       707	sendf.c	FUNCTION_15
0x40011da	        0x488945f8	                mov qword [rbp - 8], rax	       707	sendf.c	FUNCTION_15
0x40011de	            0x31c0	                            xor eax, eax	       707	sendf.c	FUNCTION_15
0x40011e0	    0xc745c8380000	           mov dword [rbp - 0x38], 0x38 	       708	sendf.c	FUNCTION_15
0x40011e7	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       709	sendf.c	FUNCTION_15
0x40011ef	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       710	sendf.c	FUNCTION_15
0x40011f7	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       711	sendf.c	FUNCTION_15
0x40011ff	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       712	sendf.c	FUNCTION_15
0x4001203	          0x488b00	                    mov rax, qword [rax]	       712	sendf.c	FUNCTION_15
0x4001206	        0x488945e8	             mov qword [rbp - 0x18], rax	       712	sendf.c	FUNCTION_15
0x400120a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       715	sendf.c	FUNCTION_15	CALL_1
0x400120e	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	       715	sendf.c	FUNCTION_15	CALL_1
0x4001215	      0xbe01000000	                              mov esi, 1	       715	sendf.c	FUNCTION_15	CALL_1
0x400121a	          0x4889c7	                            mov rdi, rax	       715	sendf.c	FUNCTION_15	CALL_1
0x400121d	      0xe800000000	                          call 0x4001222	       715	sendf.c	FUNCTION_15	CALL_1
0x4001222	            0x84c0	                             test al, al	       715	sendf.c	FUNCTION_15	CALL_1
0x4001224	            0x7419	                            je 0x400123f	       715	sendf.c	FUNCTION_15	CALL_1
0x4001226	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       716	sendf.c	FUNCTION_15
0x400122a	    0x488b80600700	           mov rax, qword [rax + 0x760] 	       716	sendf.c	FUNCTION_15
0x4001231	            0x8b00	                    mov eax, dword [rax]	       716	sendf.c	FUNCTION_15
0x4001233	          0x83f801	                              cmp eax, 1	       715	sendf.c	FUNCTION_15	CALL_1
0x4001236	            0x7507	                           jne 0x400123f	       715	sendf.c	FUNCTION_15	CALL_1
0x4001238	      0xb801000000	                              mov eax, 1	       715	sendf.c	FUNCTION_15	CALL_1
0x400123d	            0xeb05	                           jmp 0x4001244	       715	sendf.c	FUNCTION_15	CALL_1
0x400123f	      0xb800000000	                              mov eax, 0	       715	sendf.c	FUNCTION_15	CALL_1
0x4001244	          0x8845c7	               mov byte [rbp - 0x39], al	       715	sendf.c	FUNCTION_15	CALL_1
0x4001247	        0x8065c701	                and byte [rbp - 0x39], 1	       715	sendf.c	FUNCTION_15	CALL_1
0x400124b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       721	sendf.c	FUNCTION_15
0x400124f	    0x8b805c020000	           mov eax, dword [rax + 0x25c] 	       721	sendf.c	FUNCTION_15
0x4001255	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	       721	sendf.c	FUNCTION_15
0x4001258	           0xf94c0	                                 sete al	       721	sendf.c	FUNCTION_15
0x400125b	           0xfb6c0	                           movzx eax, al	       721	sendf.c	FUNCTION_15
0x400125e	          0x8945cc	             mov dword [rbp - 0x34], eax	       721	sendf.c	FUNCTION_15
0x4001261	        0x488b4598	             mov rax, qword [rbp - 0x68]	       723	sendf.c	FUNCTION_15
0x4001265	    0x48c700000000	                      mov qword [rax], 0	       723	sendf.c	FUNCTION_15
0x400126c	        0x807dc700	                cmp byte [rbp - 0x39], 0	       726	sendf.c	FUNCTION_15	IF_1
0x4001270	     0xf84c0000000	                            je 0x4001336	       726	sendf.c	FUNCTION_15	IF_1
0x4001276	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       727	sendf.c	FUNCTION_15	IF_1	CALL_2
0x400127a	    0x488b90a80400	           mov rdx, qword [rax + 0x4a8] 	       727	sendf.c	FUNCTION_15	IF_1	CALL_2
0x4001281	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       727	sendf.c	FUNCTION_15	IF_1	CALL_2
0x4001285	    0x488b80a00400	           mov rax, qword [rax + 0x4a0] 	       727	sendf.c	FUNCTION_15	IF_1	CALL_2
0x400128c	          0x4829c2	                            sub rdx, rax	       727	sendf.c	FUNCTION_15	IF_1	CALL_2
0x400128f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       727	sendf.c	FUNCTION_15	IF_1	CALL_2
0x4001293	          0x4839c2	                            cmp rdx, rax	       727	sendf.c	FUNCTION_15	IF_1	CALL_2
0x4001296	        0x480f46c2	                         cmovbe rax, rdx	       727	sendf.c	FUNCTION_15	IF_1	CALL_2
0x400129a	        0x488945f0	             mov qword [rbp - 0x10], rax	       727	sendf.c	FUNCTION_15	IF_1	CALL_2
0x400129e	      0x48837df000	               cmp qword [rbp - 0x10], 0	       731	sendf.c	FUNCTION_15	IF_1	IF_2
0x40012a3	            0x746a	                            je 0x400130f	       731	sendf.c	FUNCTION_15	IF_1	IF_2
0x40012a5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       732	sendf.c	FUNCTION_15	IF_1	IF_2	CALL_3
0x40012a9	    0x488b90980400	           mov rdx, qword [rax + 0x498] 	       732	sendf.c	FUNCTION_15	IF_1	IF_2	CALL_3
0x40012b0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       732	sendf.c	FUNCTION_15	IF_1	IF_2	CALL_3
0x40012b4	    0x488b80a00400	           mov rax, qword [rax + 0x4a0] 	       732	sendf.c	FUNCTION_15	IF_1	IF_2	CALL_3
0x40012bb	        0x488d0c02	                    lea rcx, [rdx + rax]	       732	sendf.c	FUNCTION_15	IF_1	IF_2	CALL_3
0x40012bf	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       732	sendf.c	FUNCTION_15	IF_1	IF_2	CALL_3
0x40012c3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       732	sendf.c	FUNCTION_15	IF_1	IF_2	CALL_3
0x40012c7	          0x4889ce	                            mov rsi, rcx	       732	sendf.c	FUNCTION_15	IF_1	IF_2	CALL_3
0x40012ca	          0x4889c7	                            mov rdi, rax	       732	sendf.c	FUNCTION_15	IF_1	IF_2	CALL_3
0x40012cd	      0xe800000000	                          call 0x40012d2	       732	sendf.c	FUNCTION_15	IF_1	IF_2	CALL_3
0x40012d2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       733	sendf.c	FUNCTION_15	IF_1	IF_2
0x40012d6	    0x488b90a00400	           mov rdx, qword [rax + 0x4a0] 	       733	sendf.c	FUNCTION_15	IF_1	IF_2
0x40012dd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       733	sendf.c	FUNCTION_15	IF_1	IF_2
0x40012e1	          0x4801c2	                            add rdx, rax	       733	sendf.c	FUNCTION_15	IF_1	IF_2
0x40012e4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       733	sendf.c	FUNCTION_15	IF_1	IF_2
0x40012e8	    0x488990a00400	            mov qword [rax + 0x4a0], rdx	       733	sendf.c	FUNCTION_15	IF_1	IF_2
0x40012ef	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       734	sendf.c	FUNCTION_15	IF_1	IF_2
0x40012f3	    0xc680b1030000	               mov byte [rax + 0x3b1], 0	       734	sendf.c	FUNCTION_15	IF_1	IF_2
0x40012fa	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       736	sendf.c	FUNCTION_15	IF_1	IF_2
0x40012fe	        0x488b4598	             mov rax, qword [rbp - 0x68]	       736	sendf.c	FUNCTION_15	IF_1	IF_2
0x4001302	          0x488910	                    mov qword [rax], rdx	       736	sendf.c	FUNCTION_15	IF_1	IF_2
0x4001305	      0xb800000000	                              mov eax, 0	       737	sendf.c	FUNCTION_15	IF_1	IF_2
0x400130a	      0xe9df000000	                           jmp 0x40013ee	       737	sendf.c	FUNCTION_15	IF_1	IF_2
0x400130f	      0xb800400000	                         mov eax, 0x4000	       741	sendf.c	FUNCTION_15	IF_1	CALL_4
0x4001314	    0x48817da00040	         cmp qword [rbp - 0x60], 0x4000 	       741	sendf.c	FUNCTION_15	IF_1	CALL_4
0x400131c	      0x480f4645a0	          cmovbe rax, qword [rbp - 0x60]	       741	sendf.c	FUNCTION_15	IF_1	CALL_4
0x4001321	        0x488945d0	             mov qword [rbp - 0x30], rax	       741	sendf.c	FUNCTION_15	IF_1	CALL_4
0x4001325	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       742	sendf.c	FUNCTION_15	IF_1
0x4001329	    0x488b80980400	           mov rax, qword [rax + 0x498] 	       742	sendf.c	FUNCTION_15	IF_1
0x4001330	        0x488945d8	             mov qword [rbp - 0x28], rax	       742	sendf.c	FUNCTION_15	IF_1
0x4001334	            0xeb25	                           jmp 0x400135b	       742	sendf.c	FUNCTION_15	IF_1
0x4001336	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       745	sendf.c	FUNCTION_15	ELSE_1	CALL_5
0x400133a	    0x488b80900700	           mov rax, qword [rax + 0x790] 	       745	sendf.c	FUNCTION_15	ELSE_1	CALL_5
0x4001341	          0x4889c2	                            mov rdx, rax	       745	sendf.c	FUNCTION_15	ELSE_1	CALL_5
0x4001344	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       745	sendf.c	FUNCTION_15	ELSE_1	CALL_5
0x4001348	          0x4839c2	                            cmp rdx, rax	       745	sendf.c	FUNCTION_15	ELSE_1	CALL_5
0x400134b	        0x480f46c2	                         cmovbe rax, rdx	       745	sendf.c	FUNCTION_15	ELSE_1	CALL_5
0x400134f	        0x488945d0	             mov qword [rbp - 0x30], rax	       745	sendf.c	FUNCTION_15	ELSE_1	CALL_5
0x4001353	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       746	sendf.c	FUNCTION_15	ELSE_1
0x4001357	        0x488945d8	             mov qword [rbp - 0x28], rax	       746	sendf.c	FUNCTION_15	ELSE_1
0x400135b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       749	sendf.c	FUNCTION_15
0x400135f	          0x8b55cc	             mov edx, dword [rbp - 0x34]	       749	sendf.c	FUNCTION_15
0x4001362	          0x4863d2	                         movsxd rdx, edx	       749	sendf.c	FUNCTION_15
0x4001365	        0x4883c24e	                           add rdx, 0x4e	       749	sendf.c	FUNCTION_15
0x4001369	        0x488b04d0	            mov rax, qword [rax + rdx*8]	       749	sendf.c	FUNCTION_15
0x400136d	        0x4c8d45c8	                    lea r8, [rbp - 0x38]	       749	sendf.c	FUNCTION_15
0x4001371	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       749	sendf.c	FUNCTION_15
0x4001375	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       749	sendf.c	FUNCTION_15
0x4001379	          0x8b75cc	             mov esi, dword [rbp - 0x34]	       749	sendf.c	FUNCTION_15
0x400137c	        0x488b7db8	             mov rdi, qword [rbp - 0x48]	       749	sendf.c	FUNCTION_15
0x4001380	            0xffd0	                                call rax	       749	sendf.c	FUNCTION_15
0x4001382	        0x488945e0	             mov qword [rbp - 0x20], rax	       749	sendf.c	FUNCTION_15
0x4001386	      0x48837de000	               cmp qword [rbp - 0x20], 0	       750	sendf.c	FUNCTION_15	IF_3
0x400138b	            0x7905	                           jns 0x4001392	       750	sendf.c	FUNCTION_15	IF_3
0x400138d	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       751	sendf.c	FUNCTION_15	IF_3
0x4001390	            0xeb5c	                           jmp 0x40013ee	       751	sendf.c	FUNCTION_15	IF_3
0x4001392	        0x807dc700	                cmp byte [rbp - 0x39], 0	       753	sendf.c	FUNCTION_15	IF_4
0x4001396	            0x743c	                            je 0x40013d4	       753	sendf.c	FUNCTION_15	IF_4
0x4001398	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       754	sendf.c	FUNCTION_15	IF_4	CALL_6
0x400139c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       754	sendf.c	FUNCTION_15	IF_4	CALL_6
0x40013a0	    0x488b88980400	           mov rcx, qword [rax + 0x498] 	       754	sendf.c	FUNCTION_15	IF_4	CALL_6
0x40013a7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       754	sendf.c	FUNCTION_15	IF_4	CALL_6
0x40013ab	          0x4889ce	                            mov rsi, rcx	       754	sendf.c	FUNCTION_15	IF_4	CALL_6
0x40013ae	          0x4889c7	                            mov rdi, rax	       754	sendf.c	FUNCTION_15	IF_4	CALL_6
0x40013b1	      0xe800000000	                          call 0x40013b6	       754	sendf.c	FUNCTION_15	IF_4	CALL_6
0x40013b6	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       755	sendf.c	FUNCTION_15	IF_4
0x40013ba	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       755	sendf.c	FUNCTION_15	IF_4
0x40013be	    0x488990a80400	            mov qword [rax + 0x4a8], rdx	       755	sendf.c	FUNCTION_15	IF_4
0x40013c5	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       756	sendf.c	FUNCTION_15	IF_4
0x40013c9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       756	sendf.c	FUNCTION_15	IF_4
0x40013cd	    0x488990a00400	            mov qword [rax + 0x4a0], rdx	       756	sendf.c	FUNCTION_15	IF_4
0x40013d4	        0x488b4598	             mov rax, qword [rbp - 0x68]	       759	sendf.c	FUNCTION_15
0x40013d8	          0x488b10	                    mov rdx, qword [rax]	       759	sendf.c	FUNCTION_15
0x40013db	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       759	sendf.c	FUNCTION_15
0x40013df	          0x4801c2	                            add rdx, rax	       759	sendf.c	FUNCTION_15
0x40013e2	        0x488b4598	             mov rax, qword [rbp - 0x68]	       759	sendf.c	FUNCTION_15
0x40013e6	          0x488910	                    mov qword [rax], rdx	       759	sendf.c	FUNCTION_15
0x40013e9	      0xb800000000	                              mov eax, 0	       761	sendf.c	FUNCTION_15
0x40013ee	        0x488b75f8	                mov rsi, qword [rbp - 8]	       762	sendf.c	FUNCTION_15
0x40013f2	    0x644833342528	                xor rsi, qword fs:[0x28]	       762	sendf.c	FUNCTION_15
0x40013fb	            0x7405	                            je 0x4001402	       762	sendf.c	FUNCTION_15
0x40013fd	      0xe800000000	                          call 0x4001402	       762	sendf.c	FUNCTION_15
0x4001402	              0xc9	                                   leave	       762	sendf.c	FUNCTION_15
0x4001403	              0xc3	                                     ret	       762	sendf.c	FUNCTION_15
Curl_client_write	SWITCH,0:functions,0:CALL,5:DO,0:ELSE,0:WHILE,0:IF,3:FOR,0	50
0x400107c	              0x55	                                push rbp	       644	sendf.c	FUNCTION_13
0x400107d	          0x4889e5	                            mov rbp, rsp	       644	sendf.c	FUNCTION_13
0x4001080	        0x4883ec30	                           sub rsp, 0x30	       644	sendf.c	FUNCTION_13
0x4001084	        0x48897de8	             mov qword [rbp - 0x18], rdi	       644	sendf.c	FUNCTION_13
0x4001088	          0x8975e4	             mov dword [rbp - 0x1c], esi	       644	sendf.c	FUNCTION_13
0x400108b	        0x488955d8	             mov qword [rbp - 0x28], rdx	       644	sendf.c	FUNCTION_13
0x400108f	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       644	sendf.c	FUNCTION_13
0x4001093	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       645	sendf.c	FUNCTION_13
0x4001097	          0x488b00	                    mov rax, qword [rax]	       645	sendf.c	FUNCTION_13
0x400109a	        0x488945f8	                mov qword [rbp - 8], rax	       645	sendf.c	FUNCTION_13
0x400109e	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       647	sendf.c	FUNCTION_13	IF_1
0x40010a3	            0x7510	                           jne 0x40010b5	       647	sendf.c	FUNCTION_13	IF_1
0x40010a5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       648	sendf.c	FUNCTION_13	CALL_1
0x40010a9	          0x4889c7	                            mov rdi, rax	       648	sendf.c	FUNCTION_13	CALL_1
0x40010ac	      0xe800000000	                          call 0x40010b1	       648	sendf.c	FUNCTION_13	CALL_1
0x40010b1	        0x488945d0	             mov qword [rbp - 0x30], rax	       648	sendf.c	FUNCTION_13	CALL_1
0x40010b5	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       653	sendf.c	FUNCTION_13	IF_2
0x40010b8	          0x83e001	                              and eax, 1	       653	sendf.c	FUNCTION_13	IF_2
0x40010bb	            0x85c0	                           test eax, eax	       653	sendf.c	FUNCTION_13	IF_2
0x40010bd	            0x7454	                            je 0x4001113	       653	sendf.c	FUNCTION_13	IF_2
0x40010bf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       654	sendf.c	FUNCTION_13	IF_2
0x40010c3	    0x488b80e00300	           mov rax, qword [rax + 0x3e0] 	       654	sendf.c	FUNCTION_13	IF_2
0x40010ca	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	       654	sendf.c	FUNCTION_13	IF_2
0x40010d0	          0x83e00c	                            and eax, 0xc	       654	sendf.c	FUNCTION_13	IF_2
0x40010d3	            0x85c0	                           test eax, eax	       653	sendf.c	FUNCTION_13	IF_2
0x40010d5	            0x743c	                            je 0x4001113	       653	sendf.c	FUNCTION_13	IF_2
0x40010d7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       655	sendf.c	FUNCTION_13	IF_2
0x40010db	     0xfb680fc0600	          movzx eax, byte [rax + 0x6fc] 	       655	sendf.c	FUNCTION_13	IF_2
0x40010e2	            0x3c41	                            cmp al, 0x41	       654	sendf.c	FUNCTION_13	IF_2
0x40010e4	            0x752d	                           jne 0x4001113	       654	sendf.c	FUNCTION_13	IF_2
0x40010e6	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       657	sendf.c	FUNCTION_13	IF_2	CALL_3
0x40010ed	        0x837df400	                cmp dword [rbp - 0xc], 0	       659	sendf.c	FUNCTION_13	IF_2	IF_3
0x40010f1	            0x7405	                            je 0x40010f8	       659	sendf.c	FUNCTION_13	IF_2	IF_3
0x40010f3	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       660	sendf.c	FUNCTION_13	IF_2	IF_3
0x40010f6	            0xeb32	                           jmp 0x400112a	       660	sendf.c	FUNCTION_13	IF_2	IF_3
0x40010f8	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       664	sendf.c	FUNCTION_13	IF_2	CALL_4
0x40010fc	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       664	sendf.c	FUNCTION_13	IF_2	CALL_4
0x4001100	        0x488b45f8	                mov rax, qword [rbp - 8]	       664	sendf.c	FUNCTION_13	IF_2	CALL_4
0x4001104	          0x4889ce	                            mov rsi, rcx	       664	sendf.c	FUNCTION_13	IF_2	CALL_4
0x4001107	          0x4889c7	                            mov rdi, rax	       664	sendf.c	FUNCTION_13	IF_2	CALL_4
0x400110a	      0xe803f0ffff	               call sym.convert_lineends	       664	sendf.c	FUNCTION_13	IF_2	CALL_4
0x400110f	        0x488945d0	             mov qword [rbp - 0x30], rax	       664	sendf.c	FUNCTION_13	IF_2	CALL_4
0x4001113	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       668	sendf.c	FUNCTION_13	CALL_5
0x4001117	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       668	sendf.c	FUNCTION_13	CALL_5
0x400111b	          0x8b75e4	             mov esi, dword [rbp - 0x1c]	       668	sendf.c	FUNCTION_13	CALL_5
0x400111e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       668	sendf.c	FUNCTION_13	CALL_5
0x4001122	          0x4889c7	                            mov rdi, rax	       668	sendf.c	FUNCTION_13	CALL_5
0x4001125	      0xe8b0fcffff	                     call sym.chop_write	       668	sendf.c	FUNCTION_13	CALL_5
0x400112a	              0xc9	                                   leave	       669	sendf.c	FUNCTION_13
0x400112b	              0xc3	                                     ret	       669	sendf.c	FUNCTION_13
pausewrite	SWITCH,0:functions,0:CALL,6:DO,0:ELSE,2:WHILE,0:IF,6:FOR,1	169
0x4000b65	              0x55	                                push rbp	       481	sendf.c	FUNCTION_11
0x4000b66	          0x4889e5	                            mov rbp, rsp	       481	sendf.c	FUNCTION_11
0x4000b69	        0x4883ec50	                           sub rsp, 0x50	       481	sendf.c	FUNCTION_11
0x4000b6d	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       481	sendf.c	FUNCTION_11
0x4000b71	          0x8975c4	             mov dword [rbp - 0x3c], esi	       481	sendf.c	FUNCTION_11
0x4000b74	        0x488955b8	             mov qword [rbp - 0x48], rdx	       481	sendf.c	FUNCTION_11
0x4000b78	        0x48894db0	             mov qword [rbp - 0x50], rcx	       481	sendf.c	FUNCTION_11
0x4000b7c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       485	sendf.c	FUNCTION_11
0x4000b80	    0x4805c0000000	                           add rax, 0xc0	       485	sendf.c	FUNCTION_11
0x4000b86	        0x488945d8	             mov qword [rbp - 0x28], rax	       485	sendf.c	FUNCTION_11
0x4000b8a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       486	sendf.c	FUNCTION_11
0x4000b8e	    0x4805e80c0000	                          add rax, 0xce8	       486	sendf.c	FUNCTION_11
0x4000b94	        0x488945e0	             mov qword [rbp - 0x20], rax	       486	sendf.c	FUNCTION_11
0x4000b98	        0xc645d301	                mov byte [rbp - 0x2d], 1	       489	sendf.c	FUNCTION_11
0x4000b9c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       491	sendf.c	FUNCTION_11	IF_1
0x4000ba0	    0x8b8078400000	          mov eax, dword [rax + 0x4078] 	       491	sendf.c	FUNCTION_11	IF_1
0x4000ba6	            0x85c0	                           test eax, eax	       491	sendf.c	FUNCTION_11	IF_1
0x4000ba8	            0x7448	                            je 0x4000bf2	       491	sendf.c	FUNCTION_11	IF_1
0x4000baa	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	       492	sendf.c	FUNCTION_11	IF_1	FOR_1
0x4000bb1	            0xeb2e	                           jmp 0x4000be1	       492	sendf.c	FUNCTION_11	IF_1	FOR_1
0x4000bb3	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x4000bb7	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x4000bba	          0x4889d0	                            mov rax, rdx	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x4000bbd	          0x4801c0	                            add rax, rax	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x4000bc0	          0x4801d0	                            add rax, rdx	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x4000bc3	        0x48c1e003	                              shl rax, 3	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x4000bc7	          0x4801c8	                            add rax, rcx	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x4000bca	    0x480590400000	                         add rax, 0x4090	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x4000bd0	            0x8b00	                    mov eax, dword [rax]	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x4000bd2	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x4000bd5	            0x7506	                           jne 0x4000bdd	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x4000bd7	        0xc645d300	                mov byte [rbp - 0x2d], 0	       495	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x4000bdb	            0xeb1c	                           jmp 0x4000bf9	       496	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x4000bdd	        0x8345d401	               add dword [rbp - 0x2c], 1	       492	sendf.c	FUNCTION_11	IF_1	FOR_1
0x4000be1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       492	sendf.c	FUNCTION_11	IF_1	FOR_1
0x4000be5	    0x8b8078400000	          mov eax, dword [rax + 0x4078] 	       492	sendf.c	FUNCTION_11	IF_1	FOR_1
0x4000beb	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	       492	sendf.c	FUNCTION_11	IF_1	FOR_1
0x4000bee	            0x77c3	                            ja 0x4000bb3	       492	sendf.c	FUNCTION_11	IF_1	FOR_1
0x4000bf0	            0xeb07	                           jmp 0x4000bf9	       492	sendf.c	FUNCTION_11	IF_1	FOR_1
0x4000bf2	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	       502	sendf.c	FUNCTION_11	ELSE_1
0x4000bf9	         0xfb645d3	            movzx eax, byte [rbp - 0x2d]	       504	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x4000bfd	          0x83f001	                              xor eax, 1	       504	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x4000c00	            0x84c0	                             test al, al	       504	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x4000c02	     0xf8400010000	                            je 0x4000d08	       504	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x4000c08	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       508	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x4000c0c	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	       508	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x4000c0f	          0x4889d0	                            mov rax, rdx	       508	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x4000c12	          0x4801c0	                            add rax, rax	       508	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x4000c15	          0x4801d0	                            add rax, rdx	       508	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x4000c18	        0x48c1e003	                              shl rax, 3	       508	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x4000c1c	          0x4801c8	                            add rax, rcx	       508	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x4000c1f	    0x480588400000	                         add rax, 0x4088	       508	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x4000c25	          0x488b10	                    mov rdx, qword [rax]	       508	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x4000c28	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       508	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x4000c2c	          0x4801d0	                            add rax, rdx	       508	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x4000c2f	        0x488945e8	             mov qword [rbp - 0x18], rax	       508	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x4000c33	    0x488b05000000	            mov rax, qword [0x04000c3a] 	       510	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_2
0x4000c3a	          0x488b08	                    mov rcx, qword [rax]	       510	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_2
0x4000c3d	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       510	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_2
0x4000c41	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	       510	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_2
0x4000c44	          0x4889d0	                            mov rax, rdx	       510	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_2
0x4000c47	          0x4801c0	                            add rax, rax	       510	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_2
0x4000c4a	          0x4801d0	                            add rax, rdx	       510	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_2
0x4000c4d	        0x48c1e003	                              shl rax, 3	       510	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_2
0x4000c51	          0x4801f0	                            add rax, rsi	       510	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_2
0x4000c54	    0x480580400000	                         add rax, 0x4080	       510	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_2
0x4000c5a	          0x488b00	                    mov rax, qword [rax]	       510	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_2
0x4000c5d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       510	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_2
0x4000c61	          0x4889d6	                            mov rsi, rdx	       510	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_2
0x4000c64	          0x4889c7	                            mov rdi, rax	       510	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_2
0x4000c67	            0xffd1	                                call rcx	       510	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_2
0x4000c69	        0x488945f0	             mov qword [rbp - 0x10], rax	       510	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_2
0x4000c6d	      0x48837df000	               cmp qword [rbp - 0x10], 0	       511	sendf.c	FUNCTION_11	ELSE_1	IF_3	IF_4
0x4000c72	            0x750a	                           jne 0x4000c7e	       511	sendf.c	FUNCTION_11	ELSE_1	IF_3	IF_4
0x4000c74	      0xb81b000000	                           mov eax, 0x1b	       512	sendf.c	FUNCTION_11	ELSE_1	IF_3	IF_4
0x4000c79	      0xe95a010000	                           jmp 0x4000dd8	       512	sendf.c	FUNCTION_11	ELSE_1	IF_3	IF_4
0x4000c7e	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       514	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_3
0x4000c82	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	       514	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_3
0x4000c85	          0x4889d0	                            mov rax, rdx	       514	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_3
0x4000c88	          0x4801c0	                            add rax, rax	       514	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_3
0x4000c8b	          0x4801d0	                            add rax, rdx	       514	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_3
0x4000c8e	        0x48c1e003	                              shl rax, 3	       514	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_3
0x4000c92	          0x4801c8	                            add rax, rcx	       514	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_3
0x4000c95	    0x480588400000	                         add rax, 0x4088	       514	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_3
0x4000c9b	          0x488b10	                    mov rdx, qword [rax]	       514	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_3
0x4000c9e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       514	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_3
0x4000ca2	        0x488d0c02	                    lea rcx, [rdx + rax]	       514	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_3
0x4000ca6	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       514	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_3
0x4000caa	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       514	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_3
0x4000cae	          0x4889c6	                            mov rsi, rax	       514	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_3
0x4000cb1	          0x4889cf	                            mov rdi, rcx	       514	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_3
0x4000cb4	      0xe800000000	                          call 0x4000cb9	       514	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_3
0x4000cb9	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       517	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x4000cbd	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	       517	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x4000cc0	          0x4889d0	                            mov rax, rdx	       517	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x4000cc3	          0x4801c0	                            add rax, rax	       517	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x4000cc6	          0x4801d0	                            add rax, rdx	       517	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x4000cc9	        0x48c1e003	                              shl rax, 3	       517	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x4000ccd	          0x4801c8	                            add rax, rcx	       517	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x4000cd0	    0x488d90804000	                 lea rdx, [rax + 0x4080]	       517	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x4000cd7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       517	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x4000cdb	          0x488902	                    mov qword [rdx], rax	       517	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x4000cde	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       518	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x4000ce2	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	       518	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x4000ce5	          0x4889d0	                            mov rax, rdx	       518	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x4000ce8	          0x4801c0	                            add rax, rax	       518	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x4000ceb	          0x4801d0	                            add rax, rdx	       518	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x4000cee	        0x48c1e003	                              shl rax, 3	       518	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x4000cf2	          0x4801c8	                            add rax, rcx	       518	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x4000cf5	    0x488d90884000	                 lea rdx, [rax + 0x4088]	       518	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x4000cfc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       518	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x4000d00	          0x488902	                    mov qword [rdx], rax	       518	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x4000d03	      0xe9b2000000	                           jmp 0x4000dba	       518	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x4000d08	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       521	sendf.c	FUNCTION_11	ELSE_2	CALL_4
0x4000d0c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       521	sendf.c	FUNCTION_11	ELSE_2	CALL_4
0x4000d10	          0x4889d6	                            mov rsi, rdx	       521	sendf.c	FUNCTION_11	ELSE_2	CALL_4
0x4000d13	          0x4889c7	                            mov rdi, rax	       521	sendf.c	FUNCTION_11	ELSE_2	CALL_4
0x4000d16	      0xe800000000	                          call 0x4000d1b	       521	sendf.c	FUNCTION_11	ELSE_2	CALL_4
0x4000d1b	        0x488945f8	                mov qword [rbp - 8], rax	       521	sendf.c	FUNCTION_11	ELSE_2	CALL_4
0x4000d1f	      0x48837df800	                  cmp qword [rbp - 8], 0	       522	sendf.c	FUNCTION_11	ELSE_2	IF_5
0x4000d24	            0x750a	                           jne 0x4000d30	       522	sendf.c	FUNCTION_11	ELSE_2	IF_5
0x4000d26	      0xb81b000000	                           mov eax, 0x1b	       523	sendf.c	FUNCTION_11	ELSE_2	IF_5
0x4000d2b	      0xe9a8000000	                           jmp 0x4000dd8	       523	sendf.c	FUNCTION_11	ELSE_2	IF_5
0x4000d30	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       526	sendf.c	FUNCTION_11	ELSE_2
0x4000d34	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	       526	sendf.c	FUNCTION_11	ELSE_2
0x4000d37	          0x4889d0	                            mov rax, rdx	       526	sendf.c	FUNCTION_11	ELSE_2
0x4000d3a	          0x4801c0	                            add rax, rax	       526	sendf.c	FUNCTION_11	ELSE_2
0x4000d3d	          0x4801d0	                            add rax, rdx	       526	sendf.c	FUNCTION_11	ELSE_2
0x4000d40	        0x48c1e003	                              shl rax, 3	       526	sendf.c	FUNCTION_11	ELSE_2
0x4000d44	          0x4801c8	                            add rax, rcx	       526	sendf.c	FUNCTION_11	ELSE_2
0x4000d47	    0x488d90804000	                 lea rdx, [rax + 0x4080]	       526	sendf.c	FUNCTION_11	ELSE_2
0x4000d4e	        0x488b45f8	                mov rax, qword [rbp - 8]	       526	sendf.c	FUNCTION_11	ELSE_2
0x4000d52	          0x488902	                    mov qword [rdx], rax	       526	sendf.c	FUNCTION_11	ELSE_2
0x4000d55	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       527	sendf.c	FUNCTION_11	ELSE_2
0x4000d59	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	       527	sendf.c	FUNCTION_11	ELSE_2
0x4000d5c	          0x4889d0	                            mov rax, rdx	       527	sendf.c	FUNCTION_11	ELSE_2
0x4000d5f	          0x4801c0	                            add rax, rax	       527	sendf.c	FUNCTION_11	ELSE_2
0x4000d62	          0x4801d0	                            add rax, rdx	       527	sendf.c	FUNCTION_11	ELSE_2
0x4000d65	        0x48c1e003	                              shl rax, 3	       527	sendf.c	FUNCTION_11	ELSE_2
0x4000d69	          0x4801c8	                            add rax, rcx	       527	sendf.c	FUNCTION_11	ELSE_2
0x4000d6c	    0x488d90884000	                 lea rdx, [rax + 0x4088]	       527	sendf.c	FUNCTION_11	ELSE_2
0x4000d73	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       527	sendf.c	FUNCTION_11	ELSE_2
0x4000d77	          0x488902	                    mov qword [rdx], rax	       527	sendf.c	FUNCTION_11	ELSE_2
0x4000d7a	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       528	sendf.c	FUNCTION_11	ELSE_2
0x4000d7e	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	       528	sendf.c	FUNCTION_11	ELSE_2
0x4000d81	          0x4889d0	                            mov rax, rdx	       528	sendf.c	FUNCTION_11	ELSE_2
0x4000d84	          0x4801c0	                            add rax, rax	       528	sendf.c	FUNCTION_11	ELSE_2
0x4000d87	          0x4801d0	                            add rax, rdx	       528	sendf.c	FUNCTION_11	ELSE_2
0x4000d8a	        0x48c1e003	                              shl rax, 3	       528	sendf.c	FUNCTION_11	ELSE_2
0x4000d8e	          0x4801c8	                            add rax, rcx	       528	sendf.c	FUNCTION_11	ELSE_2
0x4000d91	    0x488d90904000	                 lea rdx, [rax + 0x4090]	       528	sendf.c	FUNCTION_11	ELSE_2
0x4000d98	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       528	sendf.c	FUNCTION_11	ELSE_2
0x4000d9b	            0x8902	                    mov dword [rdx], eax	       528	sendf.c	FUNCTION_11	ELSE_2
0x4000d9d	        0x807dd300	                cmp byte [rbp - 0x2d], 0	       530	sendf.c	FUNCTION_11	ELSE_2	IF_6
0x4000da1	            0x7417	                            je 0x4000dba	       530	sendf.c	FUNCTION_11	ELSE_2	IF_6
0x4000da3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       531	sendf.c	FUNCTION_11	ELSE_2	IF_6
0x4000da7	    0x8b8078400000	          mov eax, dword [rax + 0x4078] 	       531	sendf.c	FUNCTION_11	ELSE_2	IF_6
0x4000dad	          0x8d5001	                      lea edx, [rax + 1]	       531	sendf.c	FUNCTION_11	ELSE_2	IF_6
0x4000db0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       531	sendf.c	FUNCTION_11	ELSE_2	IF_6
0x4000db4	    0x899078400000	          mov dword [rax + 0x4078], edx 	       531	sendf.c	FUNCTION_11	ELSE_2	IF_6
0x4000dba	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       535	sendf.c	FUNCTION_11
0x4000dbe	    0x8b80f4000000	            mov eax, dword [rax + 0xf4] 	       535	sendf.c	FUNCTION_11
0x4000dc4	          0x83c810	                            or eax, 0x10	       535	sendf.c	FUNCTION_11
0x4000dc7	            0x89c2	                            mov edx, eax	       535	sendf.c	FUNCTION_11
0x4000dc9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       535	sendf.c	FUNCTION_11
0x4000dcd	    0x8990f4000000	             mov dword [rax + 0xf4], edx	       535	sendf.c	FUNCTION_11
0x4000dd3	      0xb800000000	                              mov eax, 0	       540	sendf.c	FUNCTION_11
0x4000dd8	              0xc9	                                   leave	       541	sendf.c	FUNCTION_11
0x4000dd9	              0xc3	                                     ret	       541	sendf.c	FUNCTION_11
Curl_recv_has_postponed_data	SWITCH,0:functions,0:CALL,0:DO,0:ELSE,0:WHILE,0:IF,0:FOR,0	7
0x40002cc	              0x55	                                push rbp	       222	sendf.c	FUNCTION_3
0x40002cd	          0x4889e5	                            mov rbp, rsp	       222	sendf.c	FUNCTION_3
0x40002d0	        0x48897df8	                mov qword [rbp - 8], rdi	       222	sendf.c	FUNCTION_3
0x40002d4	          0x8975f4	              mov dword [rbp - 0xc], esi	       222	sendf.c	FUNCTION_3
0x40002d7	      0xb800000000	                              mov eax, 0	       225	sendf.c	FUNCTION_3
0x40002dc	              0x5d	                                 pop rbp	       226	sendf.c	FUNCTION_3
0x40002dd	              0xc3	                                     ret	       226	sendf.c	FUNCTION_3
Curl_sendf	SWITCH,0:functions,0:CALL,7:DO,0:ELSE,1:WHILE,0:IF,4:FOR,1	97
0x40005e7	              0x55	                                push rbp	       277	sendf.c	FUNCTION_6
0x40005e8	          0x4889e5	                            mov rbp, rsp	       277	sendf.c	FUNCTION_6
0x40005eb	    0x4881ec200100	                          sub rsp, 0x120	       277	sendf.c	FUNCTION_6
0x40005f2	    0x89bdfcfeffff	            mov dword [rbp - 0x104], edi	       277	sendf.c	FUNCTION_6
0x40005f8	    0x4889b5f0feff	            mov qword [rbp - 0x110], rsi	       277	sendf.c	FUNCTION_6
0x40005ff	    0x488995e8feff	            mov qword [rbp - 0x118], rdx	       277	sendf.c	FUNCTION_6
0x4000606	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       277	sendf.c	FUNCTION_6
0x400060d	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       277	sendf.c	FUNCTION_6
0x4000614	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       277	sendf.c	FUNCTION_6
0x400061b	            0x84c0	                             test al, al	       277	sendf.c	FUNCTION_6
0x400061d	            0x7420	                            je 0x400063f	       277	sendf.c	FUNCTION_6
0x400061f	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       277	sendf.c	FUNCTION_6
0x4000623	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       277	sendf.c	FUNCTION_6
0x4000627	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       277	sendf.c	FUNCTION_6
0x400062b	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       277	sendf.c	FUNCTION_6
0x400062f	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       277	sendf.c	FUNCTION_6
0x4000633	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       277	sendf.c	FUNCTION_6
0x4000637	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       277	sendf.c	FUNCTION_6
0x400063b	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       277	sendf.c	FUNCTION_6
0x400063f	    0x64488b042528	                mov rax, qword fs:[0x28]	       277	sendf.c	FUNCTION_6
0x4000648	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       277	sendf.c	FUNCTION_6
0x400064f	            0x31c0	                            xor eax, eax	       277	sendf.c	FUNCTION_6
0x4000651	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	       278	sendf.c	FUNCTION_6
0x4000658	          0x488b00	                    mov rax, qword [rax]	       278	sendf.c	FUNCTION_6
0x400065b	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	       278	sendf.c	FUNCTION_6
0x4000662	    0xc78504ffffff	               mov dword [rbp - 0xfc], 0	       281	sendf.c	FUNCTION_6
0x400066c	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x18 	       285	sendf.c	FUNCTION_6	CALL_1
0x4000676	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       285	sendf.c	FUNCTION_6	CALL_1
0x4000680	        0x488d4510	                   lea rax, [rbp + 0x10]	       285	sendf.c	FUNCTION_6	CALL_1
0x4000684	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       285	sendf.c	FUNCTION_6	CALL_1
0x400068b	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       285	sendf.c	FUNCTION_6	CALL_1
0x4000692	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       285	sendf.c	FUNCTION_6	CALL_1
0x4000699	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	       286	sendf.c	FUNCTION_6	CALL_2
0x40006a0	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	       286	sendf.c	FUNCTION_6	CALL_2
0x40006a7	          0x4889d6	                            mov rsi, rdx	       286	sendf.c	FUNCTION_6	CALL_2
0x40006aa	          0x4889c7	                            mov rdi, rax	       286	sendf.c	FUNCTION_6	CALL_2
0x40006ad	      0xe800000000	                          call 0x40006b2	       286	sendf.c	FUNCTION_6	CALL_2
0x40006b2	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	       286	sendf.c	FUNCTION_6	CALL_2
0x40006b9	    0x4883bd28ffff	               cmp qword [rbp - 0xd8], 0	       288	sendf.c	FUNCTION_6	IF_1
0x40006c1	            0x750a	                           jne 0x40006cd	       288	sendf.c	FUNCTION_6	IF_1
0x40006c3	      0xb81b000000	                           mov eax, 0x1b	       289	sendf.c	FUNCTION_6	IF_1
0x40006c8	      0xe900010000	                           jmp 0x40007cd	       289	sendf.c	FUNCTION_6	IF_1
0x40006cd	    0x48c78508ffff	               mov qword [rbp - 0xf8], 0	       291	sendf.c	FUNCTION_6
0x40006d8	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       292	sendf.c	FUNCTION_6	CALL_4
0x40006df	          0x4889c7	                            mov rdi, rax	       292	sendf.c	FUNCTION_6	CALL_4
0x40006e2	      0xe800000000	                          call 0x40006e7	       292	sendf.c	FUNCTION_6	CALL_4
0x40006e7	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	       292	sendf.c	FUNCTION_6	CALL_4
0x40006ee	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       293	sendf.c	FUNCTION_6
0x40006f5	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	       293	sendf.c	FUNCTION_6
0x40006fc	    0x488dbd08ffff	                   lea rdi, [rbp - 0xf8]	       297	sendf.c	FUNCTION_6	FOR_1	CALL_5
0x4000703	    0x488b8d10ffff	             mov rcx, qword [rbp - 0xf0]	       297	sendf.c	FUNCTION_6	FOR_1	CALL_5
0x400070a	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	       297	sendf.c	FUNCTION_6	FOR_1	CALL_5
0x4000711	    0x8bb5fcfeffff	            mov esi, dword [rbp - 0x104]	       297	sendf.c	FUNCTION_6	FOR_1	CALL_5
0x4000717	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	       297	sendf.c	FUNCTION_6	FOR_1	CALL_5
0x400071e	          0x4989f8	                             mov r8, rdi	       297	sendf.c	FUNCTION_6	FOR_1	CALL_5
0x4000721	          0x4889c7	                            mov rdi, rax	       297	sendf.c	FUNCTION_6	FOR_1	CALL_5
0x4000724	      0xe800000000	                          call 0x4000729	       297	sendf.c	FUNCTION_6	FOR_1	CALL_5
0x4000729	    0x898504ffffff	             mov dword [rbp - 0xfc], eax	       297	sendf.c	FUNCTION_6	FOR_1	CALL_5
0x400072f	    0x83bd04ffffff	               cmp dword [rbp - 0xfc], 0	       299	sendf.c	FUNCTION_6	FOR_1	IF_2
0x4000736	            0x7575	                           jne 0x40007ad	       299	sendf.c	FUNCTION_6	FOR_1	IF_2
0x4000738	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       302	sendf.c	FUNCTION_6	FOR_1	IF_3
0x400073f	     0xfb680e80700	          movzx eax, byte [rax + 0x7e8] 	       302	sendf.c	FUNCTION_6	FOR_1	IF_3
0x4000746	            0x84c0	                             test al, al	       302	sendf.c	FUNCTION_6	FOR_1	IF_3
0x4000748	            0x7432	                            je 0x400077c	       302	sendf.c	FUNCTION_6	FOR_1	IF_3
0x400074a	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       303	sendf.c	FUNCTION_6	FOR_1	CALL_6
0x4000751	          0x4889c6	                            mov rsi, rax	       303	sendf.c	FUNCTION_6	FOR_1	CALL_6
0x4000754	    0x488b8df0feff	            mov rcx, qword [rbp - 0x110]	       303	sendf.c	FUNCTION_6	FOR_1	CALL_6
0x400075b	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	       303	sendf.c	FUNCTION_6	FOR_1	CALL_6
0x4000762	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       303	sendf.c	FUNCTION_6	FOR_1	CALL_6
0x4000769	          0x4989c8	                             mov r8, rcx	       303	sendf.c	FUNCTION_6	FOR_1	CALL_6
0x400076c	          0x4889f1	                            mov rcx, rsi	       303	sendf.c	FUNCTION_6	FOR_1	CALL_6
0x400076f	      0xbe04000000	                              mov esi, 4	       303	sendf.c	FUNCTION_6	FOR_1	CALL_6
0x4000774	          0x4889c7	                            mov rdi, rax	       303	sendf.c	FUNCTION_6	FOR_1	CALL_6
0x4000777	      0xe800000000	                          call 0x400077c	       303	sendf.c	FUNCTION_6	FOR_1	CALL_6
0x400077c	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       305	sendf.c	FUNCTION_6	FOR_1	IF_4
0x4000783	    0x483b8510ffff	             cmp rax, qword [rbp - 0xf0]	       305	sendf.c	FUNCTION_6	FOR_1	IF_4
0x400078a	            0x7424	                            je 0x40007b0	       305	sendf.c	FUNCTION_6	FOR_1	IF_4
0x400078c	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       308	sendf.c	FUNCTION_6	FOR_1	IF_4
0x4000793	    0x48298510ffff	             sub qword [rbp - 0xf0], rax	       308	sendf.c	FUNCTION_6	FOR_1	IF_4
0x400079a	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       309	sendf.c	FUNCTION_6	FOR_1	IF_4
0x40007a1	    0x48018518ffff	            add qword [rbp - 0xe8], rax 	       309	sendf.c	FUNCTION_6	FOR_1	IF_4
0x40007a8	      0xe94fffffff	                           jmp 0x40006fc	       313	sendf.c	FUNCTION_6	FOR_1
0x40007ad	              0x90	                                     nop	       300	sendf.c	FUNCTION_6	FOR_1	IF_2
0x40007ae	            0xeb01	                           jmp 0x40007b1	       300	sendf.c	FUNCTION_6	FOR_1	IF_2
0x40007b0	              0x90	                                     nop	       312	sendf.c	FUNCTION_6	FOR_1	ELSE_1
0x40007b1	    0x488b05000000	            mov rax, qword [0x040007b8] 	       315	sendf.c	FUNCTION_6	CALL_7
0x40007b8	          0x488b00	                    mov rax, qword [rax]	       315	sendf.c	FUNCTION_6	CALL_7
0x40007bb	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	       315	sendf.c	FUNCTION_6	CALL_7
0x40007c2	          0x4889d7	                            mov rdi, rdx	       315	sendf.c	FUNCTION_6	CALL_7
0x40007c5	            0xffd0	                                call rax	       315	sendf.c	FUNCTION_6	CALL_7
0x40007c7	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	       317	sendf.c	FUNCTION_6
0x40007cd	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	       318	sendf.c	FUNCTION_6
0x40007d4	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       318	sendf.c	FUNCTION_6
0x40007dd	            0x7405	                            je 0x40007e4	       318	sendf.c	FUNCTION_6
0x40007df	      0xe800000000	                          call 0x40007e4	       318	sendf.c	FUNCTION_6
0x40007e4	              0xc9	                                   leave	       318	sendf.c	FUNCTION_6
0x40007e5	              0xc3	                                     ret	       318	sendf.c	FUNCTION_6
Curl_read_plain	SWITCH,0:functions,0:CALL,1:DO,0:ELSE,0:WHILE,0:IF,2:FOR,0	41
0x400112c	              0x55	                                push rbp	       675	sendf.c	FUNCTION_14
0x400112d	          0x4889e5	                            mov rbp, rsp	       675	sendf.c	FUNCTION_14
0x4001130	        0x4883ec30	                           sub rsp, 0x30	       675	sendf.c	FUNCTION_14
0x4001134	          0x897dec	             mov dword [rbp - 0x14], edi	       675	sendf.c	FUNCTION_14
0x4001137	        0x488975e0	             mov qword [rbp - 0x20], rsi	       675	sendf.c	FUNCTION_14
0x400113b	        0x488955d8	             mov qword [rbp - 0x28], rdx	       675	sendf.c	FUNCTION_14
0x400113f	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       675	sendf.c	FUNCTION_14
0x4001143	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       676	sendf.c	FUNCTION_14	CALL_1
0x4001147	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       676	sendf.c	FUNCTION_14	CALL_1
0x400114b	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       676	sendf.c	FUNCTION_14	CALL_1
0x400114e	      0xb900000000	                              mov ecx, 0	       676	sendf.c	FUNCTION_14	CALL_1
0x4001153	            0x89c7	                            mov edi, eax	       676	sendf.c	FUNCTION_14	CALL_1
0x4001155	      0xe800000000	                          call 0x400115a	       676	sendf.c	FUNCTION_14	CALL_1
0x400115a	        0x488945f8	                mov qword [rbp - 8], rax	       676	sendf.c	FUNCTION_14	CALL_1
0x400115e	      0x48837df8ff	 cmp qword [rbp - 8], 0xffffffffffffffff	       678	sendf.c	FUNCTION_14	IF_1
0x4001163	            0x753f	                           jne 0x40011a4	       678	sendf.c	FUNCTION_14	IF_1
0x4001165	      0xe800000000	                          call 0x400116a	       679	sendf.c	FUNCTION_14	IF_1
0x400116a	            0x8b00	                    mov eax, dword [rax]	       679	sendf.c	FUNCTION_14	IF_1
0x400116c	          0x8945f0	             mov dword [rbp - 0x10], eax	       679	sendf.c	FUNCTION_14	IF_1
0x400116f	        0x837df00b	            cmp dword [rbp - 0x10], 0xb 	       684	sendf.c	FUNCTION_14	IF_1
0x4001173	            0x740c	                            je 0x4001181	       684	sendf.c	FUNCTION_14	IF_1
0x4001175	        0x837df00b	            cmp dword [rbp - 0x10], 0xb 	       684	sendf.c	FUNCTION_14	IF_1
0x4001179	            0x7406	                            je 0x4001181	       684	sendf.c	FUNCTION_14	IF_1
0x400117b	        0x837df004	               cmp dword [rbp - 0x10], 4	       684	sendf.c	FUNCTION_14	IF_1
0x400117f	            0x7507	                           jne 0x4001188	       684	sendf.c	FUNCTION_14	IF_1
0x4001181	      0xb801000000	                              mov eax, 1	       684	sendf.c	FUNCTION_14	IF_1
0x4001186	            0xeb05	                           jmp 0x400118d	       684	sendf.c	FUNCTION_14	IF_1
0x4001188	      0xb800000000	                              mov eax, 0	       684	sendf.c	FUNCTION_14	IF_1
0x400118d	          0x8945f4	              mov dword [rbp - 0xc], eax	       684	sendf.c	FUNCTION_14	IF_1
0x4001190	        0x837df400	                cmp dword [rbp - 0xc], 0	       686	sendf.c	FUNCTION_14	IF_1	IF_2
0x4001194	            0x7407	                            je 0x400119d	       686	sendf.c	FUNCTION_14	IF_1	IF_2
0x4001196	      0xb851000000	                           mov eax, 0x51	       687	sendf.c	FUNCTION_14	IF_1	IF_2
0x400119b	            0xeb17	                           jmp 0x40011b4	       687	sendf.c	FUNCTION_14	IF_1	IF_2
0x400119d	      0xb838000000	                           mov eax, 0x38	       688	sendf.c	FUNCTION_14	IF_1
0x40011a2	            0xeb10	                           jmp 0x40011b4	       688	sendf.c	FUNCTION_14	IF_1
0x40011a4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       692	sendf.c	FUNCTION_14
0x40011a8	        0x488b55f8	                mov rdx, qword [rbp - 8]	       692	sendf.c	FUNCTION_14
0x40011ac	          0x488910	                    mov qword [rax], rdx	       692	sendf.c	FUNCTION_14
0x40011af	      0xb800000000	                              mov eax, 0	       693	sendf.c	FUNCTION_14
0x40011b4	              0xc9	                                   leave	       694	sendf.c	FUNCTION_14
0x40011b5	              0xc3	                                     ret	       694	sendf.c	FUNCTION_14
Curl_write_plain	SWITCH,0:functions,0:CALL,1:DO,0:ELSE,0:WHILE,0:IF,0:FOR,0	36
0x40009e7	              0x55	                                push rbp	       422	sendf.c	FUNCTION_9
0x40009e8	          0x4889e5	                            mov rbp, rsp	       422	sendf.c	FUNCTION_9
0x40009eb	        0x4883ec50	                           sub rsp, 0x50	       422	sendf.c	FUNCTION_9
0x40009ef	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       422	sendf.c	FUNCTION_9
0x40009f3	          0x8975d4	             mov dword [rbp - 0x2c], esi	       422	sendf.c	FUNCTION_9
0x40009f6	        0x488955c8	             mov qword [rbp - 0x38], rdx	       422	sendf.c	FUNCTION_9
0x40009fa	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       422	sendf.c	FUNCTION_9
0x40009fe	        0x4c8945b8	              mov qword [rbp - 0x48], r8	       422	sendf.c	FUNCTION_9
0x4000a02	    0x64488b042528	                mov rax, qword fs:[0x28]	       422	sendf.c	FUNCTION_9
0x4000a0b	        0x488945f8	                mov qword [rbp - 8], rax	       422	sendf.c	FUNCTION_9
0x4000a0f	            0x31c0	                            xor eax, eax	       422	sendf.c	FUNCTION_9
0x4000a11	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       425	sendf.c	FUNCTION_9
0x4000a15	    0x8b805c020000	           mov eax, dword [rax + 0x25c] 	       425	sendf.c	FUNCTION_9
0x4000a1b	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	       425	sendf.c	FUNCTION_9
0x4000a1e	           0xf94c0	                                 sete al	       425	sendf.c	FUNCTION_9
0x4000a21	           0xfb6c0	                           movzx eax, al	       425	sendf.c	FUNCTION_9
0x4000a24	          0x8945ec	             mov dword [rbp - 0x14], eax	       425	sendf.c	FUNCTION_9
0x4000a27	        0x488d7de8	                   lea rdi, [rbp - 0x18]	       427	sendf.c	FUNCTION_9	CALL_1
0x4000a2b	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       427	sendf.c	FUNCTION_9	CALL_1
0x4000a2f	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       427	sendf.c	FUNCTION_9	CALL_1
0x4000a33	          0x8b75ec	             mov esi, dword [rbp - 0x14]	       427	sendf.c	FUNCTION_9	CALL_1
0x4000a36	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       427	sendf.c	FUNCTION_9	CALL_1
0x4000a3a	          0x4989f8	                             mov r8, rdi	       427	sendf.c	FUNCTION_9	CALL_1
0x4000a3d	          0x4889c7	                            mov rdi, rax	       427	sendf.c	FUNCTION_9	CALL_1
0x4000a40	      0xe800000000	                          call 0x4000a45	       427	sendf.c	FUNCTION_9	CALL_1
0x4000a45	        0x488945f0	             mov qword [rbp - 0x10], rax	       427	sendf.c	FUNCTION_9	CALL_1
0x4000a49	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       429	sendf.c	FUNCTION_9
0x4000a4d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       429	sendf.c	FUNCTION_9
0x4000a51	          0x488910	                    mov qword [rax], rdx	       429	sendf.c	FUNCTION_9
0x4000a54	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       431	sendf.c	FUNCTION_9
0x4000a57	        0x488b4df8	                mov rcx, qword [rbp - 8]	       432	sendf.c	FUNCTION_9
0x4000a5b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       432	sendf.c	FUNCTION_9
0x4000a64	            0x7405	                            je 0x4000a6b	       432	sendf.c	FUNCTION_9
0x4000a66	      0xe800000000	                          call 0x4000a6b	       432	sendf.c	FUNCTION_9
0x4000a6b	              0xc9	                                   leave	       432	sendf.c	FUNCTION_9
0x4000a6c	              0xc3	                                     ret	       432	sendf.c	FUNCTION_9
Curl_failf	SWITCH,0:functions,0:CALL,6:DO,0:ELSE,0:WHILE,0:IF,3:FOR,0	90
0x4000414	              0x55	                                push rbp	       252	sendf.c	FUNCTION_5
0x4000415	          0x4889e5	                            mov rbp, rsp	       252	sendf.c	FUNCTION_5
0x4000418	    0x4881ecf00100	                          sub rsp, 0x1f0	       252	sendf.c	FUNCTION_5
0x400041f	    0x4889bd18feff	            mov qword [rbp - 0x1e8], rdi	       252	sendf.c	FUNCTION_5
0x4000426	    0x4889b510feff	            mov qword [rbp - 0x1f0], rsi	       252	sendf.c	FUNCTION_5
0x400042d	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	       252	sendf.c	FUNCTION_5
0x4000434	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       252	sendf.c	FUNCTION_5
0x400043b	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       252	sendf.c	FUNCTION_5
0x4000442	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       252	sendf.c	FUNCTION_5
0x4000449	            0x84c0	                             test al, al	       252	sendf.c	FUNCTION_5
0x400044b	            0x7420	                            je 0x400046d	       252	sendf.c	FUNCTION_5
0x400044d	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       252	sendf.c	FUNCTION_5
0x4000451	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       252	sendf.c	FUNCTION_5
0x4000455	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       252	sendf.c	FUNCTION_5
0x4000459	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       252	sendf.c	FUNCTION_5
0x400045d	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       252	sendf.c	FUNCTION_5
0x4000461	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       252	sendf.c	FUNCTION_5
0x4000465	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       252	sendf.c	FUNCTION_5
0x4000469	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       252	sendf.c	FUNCTION_5
0x400046d	    0x64488b042528	                mov rax, qword fs:[0x28]	       252	sendf.c	FUNCTION_5
0x4000476	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       252	sendf.c	FUNCTION_5
0x400047d	            0x31c0	                            xor eax, eax	       252	sendf.c	FUNCTION_5
0x400047f	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	       253	sendf.c	FUNCTION_5	IF_1
0x4000486	     0xfb680e80700	          movzx eax, byte [rax + 0x7e8] 	       253	sendf.c	FUNCTION_5	IF_1
0x400048d	            0x84c0	                             test al, al	       253	sendf.c	FUNCTION_5	IF_1
0x400048f	            0x7517	                           jne 0x40004a8	       253	sendf.c	FUNCTION_5	IF_1
0x4000491	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	       253	sendf.c	FUNCTION_5	IF_1
0x4000498	    0x488b80000200	           mov rax, qword [rax + 0x200] 	       253	sendf.c	FUNCTION_5	IF_1
0x400049f	          0x4885c0	                           test rax, rax	       253	sendf.c	FUNCTION_5	IF_1
0x40004a2	     0xf8425010000	                            je 0x40005cd	       253	sendf.c	FUNCTION_5	IF_1
0x40004a8	    0xc78528feffff	          mov dword [rbp - 0x1d8], 0x10 	       257	sendf.c	FUNCTION_5	IF_1	CALL_1
0x40004b2	    0xc7852cfeffff	          mov dword [rbp - 0x1d4], 0x30 	       257	sendf.c	FUNCTION_5	IF_1	CALL_1
0x40004bc	        0x488d4510	                   lea rax, [rbp + 0x10]	       257	sendf.c	FUNCTION_5	IF_1	CALL_1
0x40004c0	    0x48898530feff	            mov qword [rbp - 0x1d0], rax	       257	sendf.c	FUNCTION_5	IF_1	CALL_1
0x40004c7	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       257	sendf.c	FUNCTION_5	IF_1	CALL_1
0x40004ce	    0x48898538feff	            mov qword [rbp - 0x1c8], rax	       257	sendf.c	FUNCTION_5	IF_1	CALL_1
0x40004d5	    0x488d8d28feff	                  lea rcx, [rbp - 0x1d8]	       258	sendf.c	FUNCTION_5	IF_1	CALL_2
0x40004dc	    0x488b9510feff	            mov rdx, qword [rbp - 0x1f0]	       258	sendf.c	FUNCTION_5	IF_1	CALL_2
0x40004e3	    0x488d8540feff	                  lea rax, [rbp - 0x1c0]	       258	sendf.c	FUNCTION_5	IF_1	CALL_2
0x40004ea	      0xbe00010000	                          mov esi, 0x100	       258	sendf.c	FUNCTION_5	IF_1	CALL_2
0x40004ef	          0x4889c7	                            mov rdi, rax	       258	sendf.c	FUNCTION_5	IF_1	CALL_2
0x40004f2	      0xe800000000	                          call 0x40004f7	       258	sendf.c	FUNCTION_5	IF_1	CALL_2
0x40004f7	    0x488d8540feff	                  lea rax, [rbp - 0x1c0]	       259	sendf.c	FUNCTION_5	IF_1	CALL_3
0x40004fe	          0x4889c7	                            mov rdi, rax	       259	sendf.c	FUNCTION_5	IF_1	CALL_3
0x4000501	      0xe800000000	                          call 0x4000506	       259	sendf.c	FUNCTION_5	IF_1	CALL_3
0x4000506	    0x48898520feff	            mov qword [rbp - 0x1e0], rax	       259	sendf.c	FUNCTION_5	IF_1	CALL_3
0x400050d	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	       261	sendf.c	FUNCTION_5	IF_1	IF_2
0x4000514	    0x488b80000200	           mov rax, qword [rax + 0x200] 	       261	sendf.c	FUNCTION_5	IF_1	IF_2
0x400051b	          0x4885c0	                           test rax, rax	       261	sendf.c	FUNCTION_5	IF_1	IF_2
0x400051e	            0x7443	                            je 0x4000563	       261	sendf.c	FUNCTION_5	IF_1	IF_2
0x4000520	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	       261	sendf.c	FUNCTION_5	IF_1	IF_2
0x4000527	     0xfb680b84d00	         movzx eax, byte [rax + 0x4db8] 	       261	sendf.c	FUNCTION_5	IF_1	IF_2
0x400052e	          0x83f001	                              xor eax, 1	       261	sendf.c	FUNCTION_5	IF_1	IF_2
0x4000531	            0x84c0	                             test al, al	       261	sendf.c	FUNCTION_5	IF_1	IF_2
0x4000533	            0x742e	                            je 0x4000563	       261	sendf.c	FUNCTION_5	IF_1	IF_2
0x4000535	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	       262	sendf.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x400053c	    0x488b80000200	           mov rax, qword [rax + 0x200] 	       262	sendf.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x4000543	    0x488d9540feff	                  lea rdx, [rbp - 0x1c0]	       262	sendf.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x400054a	          0x4889d6	                            mov rsi, rdx	       262	sendf.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x400054d	          0x4889c7	                            mov rdi, rax	       262	sendf.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x4000550	      0xe800000000	                          call 0x4000555	       262	sendf.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x4000555	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	       263	sendf.c	FUNCTION_5	IF_1	IF_2
0x400055c	    0xc680b84d0000	              mov byte [rax + 0x4db8], 1	       263	sendf.c	FUNCTION_5	IF_1	IF_2
0x4000563	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	       265	sendf.c	FUNCTION_5	IF_1	IF_3
0x400056a	     0xfb680e80700	          movzx eax, byte [rax + 0x7e8] 	       265	sendf.c	FUNCTION_5	IF_1	IF_3
0x4000571	            0x84c0	                             test al, al	       265	sendf.c	FUNCTION_5	IF_1	IF_3
0x4000573	            0x7458	                            je 0x40005cd	       265	sendf.c	FUNCTION_5	IF_1	IF_3
0x4000575	    0x488d9540feff	                  lea rdx, [rbp - 0x1c0]	       266	sendf.c	FUNCTION_5	IF_1	IF_3
0x400057c	    0x488b8520feff	            mov rax, qword [rbp - 0x1e0]	       266	sendf.c	FUNCTION_5	IF_1	IF_3
0x4000583	          0x4801d0	                            add rax, rdx	       266	sendf.c	FUNCTION_5	IF_1	IF_3
0x4000586	          0xc6000a	                     mov byte [rax], 0xa	       266	sendf.c	FUNCTION_5	IF_1	IF_3
0x4000589	    0x48838520feff	              add qword [rbp - 0x1e0], 1	       267	sendf.c	FUNCTION_5	IF_1	IF_3
0x4000591	    0x488d9540feff	                  lea rdx, [rbp - 0x1c0]	       267	sendf.c	FUNCTION_5	IF_1	IF_3
0x4000598	    0x488b8520feff	            mov rax, qword [rbp - 0x1e0]	       267	sendf.c	FUNCTION_5	IF_1	IF_3
0x400059f	          0x4801d0	                            add rax, rdx	       267	sendf.c	FUNCTION_5	IF_1	IF_3
0x40005a2	          0xc60000	                       mov byte [rax], 0	       267	sendf.c	FUNCTION_5	IF_1	IF_3
0x40005a5	    0x488b8d20feff	            mov rcx, qword [rbp - 0x1e0]	       268	sendf.c	FUNCTION_5	IF_1	IF_3	CALL_5
0x40005ac	    0x488d9540feff	                  lea rdx, [rbp - 0x1c0]	       268	sendf.c	FUNCTION_5	IF_1	IF_3	CALL_5
0x40005b3	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	       268	sendf.c	FUNCTION_5	IF_1	IF_3	CALL_5
0x40005ba	    0x41b800000000	                              mov r8d, 0	       268	sendf.c	FUNCTION_5	IF_1	IF_3	CALL_5
0x40005c0	      0xbe00000000	                              mov esi, 0	       268	sendf.c	FUNCTION_5	IF_1	IF_3	CALL_5
0x40005c5	          0x4889c7	                            mov rdi, rax	       268	sendf.c	FUNCTION_5	IF_1	IF_3	CALL_5
0x40005c8	      0xe800000000	                          call 0x40005cd	       268	sendf.c	FUNCTION_5	IF_1	IF_3	CALL_5
0x40005cd	              0x90	                                     nop	       272	sendf.c	FUNCTION_5
0x40005ce	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       272	sendf.c	FUNCTION_5
0x40005d5	    0x644833042528	                xor rax, qword fs:[0x28]	       272	sendf.c	FUNCTION_5
0x40005de	            0x7405	                            je 0x40005e5	       272	sendf.c	FUNCTION_5
0x40005e0	      0xe800000000	                          call 0x40005e5	       272	sendf.c	FUNCTION_5
0x40005e5	              0xc9	                                   leave	       272	sendf.c	FUNCTION_5
0x40005e6	              0xc3	                                     ret	       272	sendf.c	FUNCTION_5
Curl_recv_plain	SWITCH,0:functions,0:CALL,3:DO,0:ELSE,1:WHILE,0:IF,3:FOR,0	65
0x4000a6d	              0x55	                                push rbp	       436	sendf.c	FUNCTION_10
0x4000a6e	          0x4889e5	                            mov rbp, rsp	       436	sendf.c	FUNCTION_10
0x4000a71	        0x4883ec40	                           sub rsp, 0x40	       436	sendf.c	FUNCTION_10
0x4000a75	        0x48897de8	             mov qword [rbp - 0x18], rdi	       436	sendf.c	FUNCTION_10
0x4000a79	          0x8975e4	             mov dword [rbp - 0x1c], esi	       436	sendf.c	FUNCTION_10
0x4000a7c	        0x488955d8	             mov qword [rbp - 0x28], rdx	       436	sendf.c	FUNCTION_10
0x4000a80	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       436	sendf.c	FUNCTION_10
0x4000a84	        0x4c8945c8	              mov qword [rbp - 0x38], r8	       436	sendf.c	FUNCTION_10
0x4000a88	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       437	sendf.c	FUNCTION_10
0x4000a8c	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       437	sendf.c	FUNCTION_10
0x4000a8f	          0x4863d2	                         movsxd rdx, edx	       437	sendf.c	FUNCTION_10
0x4000a92	    0x4881c2940000	                           add rdx, 0x94	       437	sendf.c	FUNCTION_10
0x4000a99	        0x8b449008	       mov eax, dword [rax + rdx*4 + 8] 	       437	sendf.c	FUNCTION_10
0x4000a9d	          0x8945f0	             mov dword [rbp - 0x10], eax	       437	sendf.c	FUNCTION_10
0x4000aa0	    0x48c745f80000	                  mov qword [rbp - 8], 0	       441	sendf.c	FUNCTION_10
0x4000aa8	      0x48837df800	                  cmp qword [rbp - 8], 0	       442	sendf.c	FUNCTION_10	IF_1
0x4000aad	            0x7e13	                           jle 0x4000ac2	       442	sendf.c	FUNCTION_10	IF_1
0x4000aaf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       443	sendf.c	FUNCTION_10	IF_1
0x4000ab3	    0xc70000000000	                      mov dword [rax], 0	       443	sendf.c	FUNCTION_10	IF_1
0x4000ab9	        0x488b45f8	                mov rax, qword [rbp - 8]	       444	sendf.c	FUNCTION_10	IF_1
0x4000abd	      0xe9a1000000	                           jmp 0x4000b63	       444	sendf.c	FUNCTION_10	IF_1
0x4000ac2	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       447	sendf.c	FUNCTION_10	CALL_1
0x4000ac6	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	       447	sendf.c	FUNCTION_10	CALL_1
0x4000aca	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       447	sendf.c	FUNCTION_10	CALL_1
0x4000acd	      0xb900000000	                              mov ecx, 0	       447	sendf.c	FUNCTION_10	CALL_1
0x4000ad2	            0x89c7	                            mov edi, eax	       447	sendf.c	FUNCTION_10	CALL_1
0x4000ad4	      0xe800000000	                          call 0x4000ad9	       447	sendf.c	FUNCTION_10	CALL_1
0x4000ad9	        0x488945f8	                mov qword [rbp - 8], rax	       447	sendf.c	FUNCTION_10	CALL_1
0x4000add	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       449	sendf.c	FUNCTION_10
0x4000ae1	    0xc70000000000	                      mov dword [rax], 0	       449	sendf.c	FUNCTION_10
0x4000ae7	      0x48837df8ff	 cmp qword [rbp - 8], 0xffffffffffffffff	       450	sendf.c	FUNCTION_10	IF_2
0x4000aec	            0x7571	                           jne 0x4000b5f	       450	sendf.c	FUNCTION_10	IF_2
0x4000aee	      0xe800000000	                          call 0x4000af3	       451	sendf.c	FUNCTION_10	IF_2
0x4000af3	            0x8b00	                    mov eax, dword [rax]	       451	sendf.c	FUNCTION_10	IF_2
0x4000af5	          0x8945f4	              mov dword [rbp - 0xc], eax	       451	sendf.c	FUNCTION_10	IF_2
0x4000af8	        0x837df40b	              cmp dword [rbp - 0xc], 0xb	       453	sendf.c	FUNCTION_10	IF_2	IF_3
0x4000afc	            0x740c	                            je 0x4000b0a	       453	sendf.c	FUNCTION_10	IF_2	IF_3
0x4000afe	        0x837df40b	              cmp dword [rbp - 0xc], 0xb	       461	sendf.c	FUNCTION_10	IF_2	IF_3
0x4000b02	            0x7406	                            je 0x4000b0a	       461	sendf.c	FUNCTION_10	IF_2	IF_3
0x4000b04	        0x837df404	                cmp dword [rbp - 0xc], 4	       461	sendf.c	FUNCTION_10	IF_2	IF_3
0x4000b08	            0x750c	                           jne 0x4000b16	       461	sendf.c	FUNCTION_10	IF_2	IF_3
0x4000b0a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       465	sendf.c	FUNCTION_10	IF_2	IF_3
0x4000b0e	    0xc70051000000	                   mov dword [rax], 0x51	       465	sendf.c	FUNCTION_10	IF_2	IF_3
0x4000b14	            0xeb49	                           jmp 0x4000b5f	       465	sendf.c	FUNCTION_10	IF_2	IF_3
0x4000b16	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       468	sendf.c	FUNCTION_10	IF_2	ELSE_1	CALL_2
0x4000b19	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       468	sendf.c	FUNCTION_10	IF_2	ELSE_1	CALL_2
0x4000b1d	            0x89d6	                            mov esi, edx	       468	sendf.c	FUNCTION_10	IF_2	ELSE_1	CALL_2
0x4000b1f	          0x4889c7	                            mov rdi, rax	       468	sendf.c	FUNCTION_10	IF_2	ELSE_1	CALL_2
0x4000b22	      0xe800000000	                          call 0x4000b27	       468	sendf.c	FUNCTION_10	IF_2	ELSE_1	CALL_2
0x4000b27	          0x4889c2	                            mov rdx, rax	       468	sendf.c	FUNCTION_10	IF_2	ELSE_1	CALL_2
0x4000b2a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       468	sendf.c	FUNCTION_10	IF_2	ELSE_1	CALL_2
0x4000b2e	          0x488b00	                    mov rax, qword [rax]	       468	sendf.c	FUNCTION_10	IF_2	ELSE_1	CALL_2
0x4000b31	    0x488d35000000	                   lea rsi, [0x04000b38]	       468	sendf.c	FUNCTION_10	IF_2	ELSE_1	CALL_2
0x4000b38	          0x4889c7	                            mov rdi, rax	       468	sendf.c	FUNCTION_10	IF_2	ELSE_1	CALL_2
0x4000b3b	      0xb800000000	                              mov eax, 0	       468	sendf.c	FUNCTION_10	IF_2	ELSE_1	CALL_2
0x4000b40	      0xe800000000	                          call 0x4000b45	       468	sendf.c	FUNCTION_10	IF_2	ELSE_1	CALL_2
0x4000b45	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       470	sendf.c	FUNCTION_10	IF_2	ELSE_1
0x4000b49	          0x488b00	                    mov rax, qword [rax]	       470	sendf.c	FUNCTION_10	IF_2	ELSE_1
0x4000b4c	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       470	sendf.c	FUNCTION_10	IF_2	ELSE_1
0x4000b4f	    0x8990bc4d0000	          mov dword [rax + 0x4dbc], edx 	       470	sendf.c	FUNCTION_10	IF_2	ELSE_1
0x4000b55	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       471	sendf.c	FUNCTION_10	IF_2	ELSE_1
0x4000b59	    0xc70038000000	                   mov dword [rax], 0x38	       471	sendf.c	FUNCTION_10	IF_2	ELSE_1
0x4000b5f	        0x488b45f8	                mov rax, qword [rbp - 8]	       474	sendf.c	FUNCTION_10
0x4000b63	              0xc9	                                   leave	       475	sendf.c	FUNCTION_10
0x4000b64	              0xc3	                                     ret	       475	sendf.c	FUNCTION_10
showit	SWITCH,2:functions,0:CALL,9:DO,0:ELSE,1:WHILE,0:IF,5:FOR,1	59
0x4001404	              0x55	                                push rbp	       767	sendf.c	FUNCTION_16
0x4001405	          0x4889e5	                            mov rbp, rsp	       767	sendf.c	FUNCTION_16
0x4001408	        0x4883ec30	                           sub rsp, 0x30	       767	sendf.c	FUNCTION_16
0x400140c	        0x48897de8	             mov qword [rbp - 0x18], rdi	       767	sendf.c	FUNCTION_16
0x4001410	          0x8975e4	             mov dword [rbp - 0x1c], esi	       767	sendf.c	FUNCTION_16
0x4001413	        0x488955d8	             mov qword [rbp - 0x28], rdx	       767	sendf.c	FUNCTION_16
0x4001417	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       767	sendf.c	FUNCTION_16
0x400141b	    0xc745fc000000	                  mov dword [rbp - 4], 0	       770	sendf.c	FUNCTION_16
0x4001422	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       809	sendf.c	FUNCTION_16	IF_4
0x4001426	    0x488b80c00200	           mov rax, qword [rax + 0x2c0] 	       809	sendf.c	FUNCTION_16	IF_4
0x400142d	          0x4885c0	                           test rax, rax	       809	sendf.c	FUNCTION_16	IF_4
0x4001430	            0x744e	                            je 0x4001480	       809	sendf.c	FUNCTION_16	IF_4
0x4001432	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       810	sendf.c	FUNCTION_16	IF_4	CALL_4
0x4001436	      0xbe01000000	                              mov esi, 1	       810	sendf.c	FUNCTION_16	IF_4	CALL_4
0x400143b	          0x4889c7	                            mov rdi, rax	       810	sendf.c	FUNCTION_16	IF_4	CALL_4
0x400143e	      0xe800000000	                          call 0x4001443	       810	sendf.c	FUNCTION_16	IF_4	CALL_4
0x4001443	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       811	sendf.c	FUNCTION_16	IF_4
0x4001447	    0x488b80c00200	           mov rax, qword [rax + 0x2c0] 	       811	sendf.c	FUNCTION_16	IF_4
0x400144e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       811	sendf.c	FUNCTION_16	IF_4
0x4001452	    0x4c8b82f80100	            mov r8, qword [rdx + 0x1f8] 	       811	sendf.c	FUNCTION_16	IF_4
0x4001459	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       811	sendf.c	FUNCTION_16	IF_4
0x400145d	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       811	sendf.c	FUNCTION_16	IF_4
0x4001461	          0x8b75e4	             mov esi, dword [rbp - 0x1c]	       811	sendf.c	FUNCTION_16	IF_4
0x4001464	        0x488b7de8	             mov rdi, qword [rbp - 0x18]	       811	sendf.c	FUNCTION_16	IF_4
0x4001468	            0xffd0	                                call rax	       811	sendf.c	FUNCTION_16	IF_4
0x400146a	          0x8945fc	                mov dword [rbp - 4], eax	       811	sendf.c	FUNCTION_16	IF_4
0x400146d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       812	sendf.c	FUNCTION_16	IF_4	CALL_5
0x4001471	      0xbe00000000	                              mov esi, 0	       812	sendf.c	FUNCTION_16	IF_4	CALL_5
0x4001476	          0x4889c7	                            mov rdi, rax	       812	sendf.c	FUNCTION_16	IF_4	CALL_5
0x4001479	      0xe800000000	                          call 0x400147e	       812	sendf.c	FUNCTION_16	IF_4	CALL_5
0x400147e	            0xeb61	                           jmp 0x40014e1	       812	sendf.c	FUNCTION_16	IF_4	CALL_5
0x4001480	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       815	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2
0x4001483	          0x83f802	                              cmp eax, 2	       815	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2
0x4001486	            0x7758	                            ja 0x40014e0	       815	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2
0x4001488	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       819	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_6
0x400148c	    0x488b88f00100	           mov rcx, qword [rax + 0x1f0] 	       819	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_6
0x4001493	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       819	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_6
0x4001496	          0x4889d0	                            mov rax, rdx	       819	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_6
0x4001499	          0x4801c0	                            add rax, rax	       819	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_6
0x400149c	          0x4801d0	                            add rax, rdx	       819	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_6
0x400149f	    0x488d15000000	                   lea rdx, [0x040014a6]	       819	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_6
0x40014a6	          0x4801d0	                            add rax, rdx	       819	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_6
0x40014a9	      0xba01000000	                              mov edx, 1	       819	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_6
0x40014ae	      0xbe02000000	                              mov esi, 2	       819	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_6
0x40014b3	          0x4889c7	                            mov rdi, rax	       819	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_6
0x40014b6	      0xe800000000	                          call 0x40014bb	       819	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_6
0x40014bb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       820	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_7
0x40014bf	    0x488b90f00100	           mov rdx, qword [rax + 0x1f0] 	       820	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_7
0x40014c6	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	       820	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_7
0x40014ca	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       820	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_7
0x40014ce	          0x4889d1	                            mov rcx, rdx	       820	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_7
0x40014d1	      0xba01000000	                              mov edx, 1	       820	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_7
0x40014d6	          0x4889c7	                            mov rdi, rax	       820	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_7
0x40014d9	      0xe800000000	                          call 0x40014de	       820	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2	CALL_7
0x40014de	            0xeb01	                           jmp 0x40014e1	       827	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2
0x40014e0	              0x90	                                     nop	       829	sendf.c	FUNCTION_16	ELSE_1	SWITCH_2
0x40014e1	          0x8b45fc	                mov eax, dword [rbp - 4]	       835	sendf.c	FUNCTION_16
0x40014e4	              0xc9	                                   leave	       836	sendf.c	FUNCTION_16
0x40014e5	              0xc3	                                     ret	       836	sendf.c	FUNCTION_16
Curl_infof	SWITCH,0:functions,0:CALL,5:DO,0:ELSE,0:WHILE,0:IF,1:FOR,0	58
0x40002de	              0x55	                                push rbp	       234	sendf.c	FUNCTION_4
0x40002df	          0x4889e5	                            mov rbp, rsp	       234	sendf.c	FUNCTION_4
0x40002e2	    0x4881ecf00800	                          sub rsp, 0x8f0	       234	sendf.c	FUNCTION_4
0x40002e9	    0x4889bd18f7ff	            mov qword [rbp - 0x8e8], rdi	       234	sendf.c	FUNCTION_4
0x40002f0	    0x4889b510f7ff	            mov qword [rbp - 0x8f0], rsi	       234	sendf.c	FUNCTION_4
0x40002f7	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	       234	sendf.c	FUNCTION_4
0x40002fe	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       234	sendf.c	FUNCTION_4
0x4000305	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       234	sendf.c	FUNCTION_4
0x400030c	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       234	sendf.c	FUNCTION_4
0x4000313	            0x84c0	                             test al, al	       234	sendf.c	FUNCTION_4
0x4000315	            0x7420	                            je 0x4000337	       234	sendf.c	FUNCTION_4
0x4000317	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       234	sendf.c	FUNCTION_4
0x400031b	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       234	sendf.c	FUNCTION_4
0x400031f	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       234	sendf.c	FUNCTION_4
0x4000323	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       234	sendf.c	FUNCTION_4
0x4000327	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       234	sendf.c	FUNCTION_4
0x400032b	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       234	sendf.c	FUNCTION_4
0x400032f	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       234	sendf.c	FUNCTION_4
0x4000333	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       234	sendf.c	FUNCTION_4
0x4000337	    0x64488b042528	                mov rax, qword fs:[0x28]	       234	sendf.c	FUNCTION_4
0x4000340	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       234	sendf.c	FUNCTION_4
0x4000347	            0x31c0	                            xor eax, eax	       234	sendf.c	FUNCTION_4
0x4000349	    0x4883bd18f7ff	              cmp qword [rbp - 0x8e8], 0	       235	sendf.c	FUNCTION_4	IF_1
0x4000351	     0xf84a3000000	                            je 0x40003fa	       235	sendf.c	FUNCTION_4	IF_1
0x4000357	    0x488b8518f7ff	            mov rax, qword [rbp - 0x8e8]	       235	sendf.c	FUNCTION_4	IF_1
0x400035e	     0xfb680e80700	          movzx eax, byte [rax + 0x7e8] 	       235	sendf.c	FUNCTION_4	IF_1
0x4000365	            0x84c0	                             test al, al	       235	sendf.c	FUNCTION_4	IF_1
0x4000367	     0xf848d000000	                            je 0x40003fa	       235	sendf.c	FUNCTION_4	IF_1
0x400036d	    0xc78528f7ffff	          mov dword [rbp - 0x8d8], 0x10 	       239	sendf.c	FUNCTION_4	IF_1	CALL_1
0x4000377	    0xc7852cf7ffff	          mov dword [rbp - 0x8d4], 0x30 	       239	sendf.c	FUNCTION_4	IF_1	CALL_1
0x4000381	        0x488d4510	                   lea rax, [rbp + 0x10]	       239	sendf.c	FUNCTION_4	IF_1	CALL_1
0x4000385	    0x48898530f7ff	            mov qword [rbp - 0x8d0], rax	       239	sendf.c	FUNCTION_4	IF_1	CALL_1
0x400038c	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       239	sendf.c	FUNCTION_4	IF_1	CALL_1
0x4000393	    0x48898538f7ff	            mov qword [rbp - 0x8c8], rax	       239	sendf.c	FUNCTION_4	IF_1	CALL_1
0x400039a	    0x488d8d28f7ff	                  lea rcx, [rbp - 0x8d8]	       240	sendf.c	FUNCTION_4	IF_1	CALL_2
0x40003a1	    0x488b9510f7ff	            mov rdx, qword [rbp - 0x8f0]	       240	sendf.c	FUNCTION_4	IF_1	CALL_2
0x40003a8	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       240	sendf.c	FUNCTION_4	IF_1	CALL_2
0x40003af	      0xbe01080000	                          mov esi, 0x801	       240	sendf.c	FUNCTION_4	IF_1	CALL_2
0x40003b4	          0x4889c7	                            mov rdi, rax	       240	sendf.c	FUNCTION_4	IF_1	CALL_2
0x40003b7	      0xe800000000	                          call 0x40003bc	       240	sendf.c	FUNCTION_4	IF_1	CALL_2
0x40003bc	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       242	sendf.c	FUNCTION_4	IF_1	CALL_4
0x40003c3	          0x4889c7	                            mov rdi, rax	       242	sendf.c	FUNCTION_4	IF_1	CALL_4
0x40003c6	      0xe800000000	                          call 0x40003cb	       242	sendf.c	FUNCTION_4	IF_1	CALL_4
0x40003cb	    0x48898520f7ff	            mov qword [rbp - 0x8e0], rax	       242	sendf.c	FUNCTION_4	IF_1	CALL_4
0x40003d2	    0x488b8d20f7ff	            mov rcx, qword [rbp - 0x8e0]	       243	sendf.c	FUNCTION_4	IF_1	CALL_5
0x40003d9	    0x488d9540f7ff	                  lea rdx, [rbp - 0x8c0]	       243	sendf.c	FUNCTION_4	IF_1	CALL_5
0x40003e0	    0x488b8518f7ff	            mov rax, qword [rbp - 0x8e8]	       243	sendf.c	FUNCTION_4	IF_1	CALL_5
0x40003e7	    0x41b800000000	                              mov r8d, 0	       243	sendf.c	FUNCTION_4	IF_1	CALL_5
0x40003ed	      0xbe00000000	                              mov esi, 0	       243	sendf.c	FUNCTION_4	IF_1	CALL_5
0x40003f2	          0x4889c7	                            mov rdi, rax	       243	sendf.c	FUNCTION_4	IF_1	CALL_5
0x40003f5	      0xe800000000	                          call 0x40003fa	       243	sendf.c	FUNCTION_4	IF_1	CALL_5
0x40003fa	              0x90	                                     nop	       245	sendf.c	FUNCTION_4
0x40003fb	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       245	sendf.c	FUNCTION_4
0x4000402	    0x644833042528	                xor rax, qword fs:[0x28]	       245	sendf.c	FUNCTION_4
0x400040b	            0x7405	                            je 0x4000412	       245	sendf.c	FUNCTION_4
0x400040d	      0xe800000000	                          call 0x4000412	       245	sendf.c	FUNCTION_4
0x4000412	              0xc9	                                   leave	       245	sendf.c	FUNCTION_4
0x4000413	              0xc3	                                     ret	       245	sendf.c	FUNCTION_4
chop_write	SWITCH,0:functions,0:CALL,10:DO,0:ELSE,0:WHILE,1:IF,11:FOR,0	160
0x4000dda	              0x55	                                push rbp	       552	sendf.c	FUNCTION_12
0x4000ddb	          0x4889e5	                            mov rbp, rsp	       552	sendf.c	FUNCTION_12
0x4000dde	        0x4883ec60	                           sub rsp, 0x60	       552	sendf.c	FUNCTION_12
0x4000de2	        0x48897db8	             mov qword [rbp - 0x48], rdi	       552	sendf.c	FUNCTION_12
0x4000de6	          0x8975b4	             mov dword [rbp - 0x4c], esi	       552	sendf.c	FUNCTION_12
0x4000de9	        0x488955a8	             mov qword [rbp - 0x58], rdx	       552	sendf.c	FUNCTION_12
0x4000ded	        0x48894da0	             mov qword [rbp - 0x60], rcx	       552	sendf.c	FUNCTION_12
0x4000df1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       553	sendf.c	FUNCTION_12
0x4000df5	          0x488b00	                    mov rax, qword [rax]	       553	sendf.c	FUNCTION_12
0x4000df8	        0x488945e0	             mov qword [rbp - 0x20], rax	       553	sendf.c	FUNCTION_12
0x4000dfc	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       554	sendf.c	FUNCTION_12
0x4000e04	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       555	sendf.c	FUNCTION_12
0x4000e0c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       556	sendf.c	FUNCTION_12
0x4000e10	        0x488945d0	             mov qword [rbp - 0x30], rax	       556	sendf.c	FUNCTION_12
0x4000e14	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       557	sendf.c	FUNCTION_12
0x4000e18	        0x488945d8	             mov qword [rbp - 0x28], rax	       557	sendf.c	FUNCTION_12
0x4000e1c	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       559	sendf.c	FUNCTION_12	IF_1
0x4000e21	            0x750a	                           jne 0x4000e2d	       559	sendf.c	FUNCTION_12	IF_1
0x4000e23	      0xb800000000	                              mov eax, 0	       560	sendf.c	FUNCTION_12	IF_1
0x4000e28	      0xe94d020000	                           jmp 0x400107a	       560	sendf.c	FUNCTION_12	IF_1
0x4000e2d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       564	sendf.c	FUNCTION_12	IF_2
0x4000e31	    0x8b80b4010000	           mov eax, dword [rax + 0x1b4] 	       564	sendf.c	FUNCTION_12	IF_2
0x4000e37	          0x83e010	                           and eax, 0x10	       564	sendf.c	FUNCTION_12	IF_2
0x4000e3a	            0x85c0	                           test eax, eax	       564	sendf.c	FUNCTION_12	IF_2
0x4000e3c	            0x741c	                            je 0x4000e5a	       564	sendf.c	FUNCTION_12	IF_2
0x4000e3e	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       565	sendf.c	FUNCTION_12	CALL_1
0x4000e42	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       565	sendf.c	FUNCTION_12	CALL_1
0x4000e46	          0x8b75b4	             mov esi, dword [rbp - 0x4c]	       565	sendf.c	FUNCTION_12	CALL_1
0x4000e49	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       565	sendf.c	FUNCTION_12	CALL_1
0x4000e4d	          0x4889c7	                            mov rdi, rax	       565	sendf.c	FUNCTION_12	CALL_1
0x4000e50	      0xe810fdffff	                     call sym.pausewrite	       565	sendf.c	FUNCTION_12	CALL_1
0x4000e55	      0xe920020000	                           jmp 0x400107a	       565	sendf.c	FUNCTION_12	CALL_1
0x4000e5a	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       568	sendf.c	FUNCTION_12	IF_3
0x4000e5d	          0x83e001	                              and eax, 1	       568	sendf.c	FUNCTION_12	IF_3
0x4000e60	            0x85c0	                           test eax, eax	       568	sendf.c	FUNCTION_12	IF_3
0x4000e62	            0x740f	                            je 0x4000e73	       568	sendf.c	FUNCTION_12	IF_3
0x4000e64	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       569	sendf.c	FUNCTION_12	IF_3
0x4000e68	    0x488b80880200	           mov rax, qword [rax + 0x288] 	       569	sendf.c	FUNCTION_12	IF_3
0x4000e6f	        0x488945c8	             mov qword [rbp - 0x38], rax	       569	sendf.c	FUNCTION_12	IF_3
0x4000e73	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       570	sendf.c	FUNCTION_12	IF_4
0x4000e76	          0x83e002	                              and eax, 2	       570	sendf.c	FUNCTION_12	IF_4
0x4000e79	            0x85c0	                           test eax, eax	       570	sendf.c	FUNCTION_12	IF_4
0x4000e7b	     0xf843c010000	                            je 0x4000fbd	       570	sendf.c	FUNCTION_12	IF_4
0x4000e81	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       571	sendf.c	FUNCTION_12	IF_4
0x4000e85	    0x488b80900200	           mov rax, qword [rax + 0x290] 	       571	sendf.c	FUNCTION_12	IF_4
0x4000e8c	          0x4885c0	                           test rax, rax	       570	sendf.c	FUNCTION_12	IF_4
0x4000e8f	            0x7514	                           jne 0x4000ea5	       570	sendf.c	FUNCTION_12	IF_4
0x4000e91	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       571	sendf.c	FUNCTION_12	IF_4
0x4000e95	    0x488b80200200	           mov rax, qword [rax + 0x220] 	       571	sendf.c	FUNCTION_12	IF_4
0x4000e9c	          0x4885c0	                           test rax, rax	       571	sendf.c	FUNCTION_12	IF_4
0x4000e9f	     0xf8418010000	                            je 0x4000fbd	       571	sendf.c	FUNCTION_12	IF_4
0x4000ea5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       577	sendf.c	FUNCTION_12	IF_4
0x4000ea9	    0x488b80900200	           mov rax, qword [rax + 0x290] 	       577	sendf.c	FUNCTION_12	IF_4
0x4000eb0	          0x4885c0	                           test rax, rax	       577	sendf.c	FUNCTION_12	IF_4
0x4000eb3	            0x740d	                            je 0x4000ec2	       577	sendf.c	FUNCTION_12	IF_4
0x4000eb5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       577	sendf.c	FUNCTION_12	IF_4
0x4000eb9	    0x488b80900200	           mov rax, qword [rax + 0x290] 	       577	sendf.c	FUNCTION_12	IF_4
0x4000ec0	            0xeb0b	                           jmp 0x4000ecd	       577	sendf.c	FUNCTION_12	IF_4
0x4000ec2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       577	sendf.c	FUNCTION_12	IF_4
0x4000ec6	    0x488b80880200	           mov rax, qword [rax + 0x288] 	       577	sendf.c	FUNCTION_12	IF_4
0x4000ecd	        0x488945c0	             mov qword [rbp - 0x40], rax	       576	sendf.c	FUNCTION_12	IF_4
0x4000ed1	      0xe9e7000000	                           jmp 0x4000fbd	       581	sendf.c	FUNCTION_12	WHILE_1
0x4000ed6	      0xb800400000	                         mov eax, 0x4000	       582	sendf.c	FUNCTION_12	WHILE_1
0x4000edb	    0x48817dd80040	         cmp qword [rbp - 0x28], 0x4000 	       582	sendf.c	FUNCTION_12	WHILE_1
0x4000ee3	      0x480f4645d8	          cmovbe rax, qword [rbp - 0x28]	       582	sendf.c	FUNCTION_12	WHILE_1
0x4000ee8	        0x488945e8	             mov qword [rbp - 0x18], rax	       582	sendf.c	FUNCTION_12	WHILE_1
0x4000eec	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       584	sendf.c	FUNCTION_12	WHILE_1	IF_5
0x4000ef1	     0xf84b6000000	                            je 0x4000fad	       584	sendf.c	FUNCTION_12	WHILE_1	IF_5
0x4000ef7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       585	sendf.c	FUNCTION_12	WHILE_1	IF_5	CALL_2
0x4000efb	    0x488b88100200	           mov rcx, qword [rax + 0x210] 	       585	sendf.c	FUNCTION_12	WHILE_1	IF_5	CALL_2
0x4000f02	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       585	sendf.c	FUNCTION_12	WHILE_1	IF_5	CALL_2
0x4000f06	        0x488b7dd0	             mov rdi, qword [rbp - 0x30]	       585	sendf.c	FUNCTION_12	WHILE_1	IF_5	CALL_2
0x4000f0a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       585	sendf.c	FUNCTION_12	WHILE_1	IF_5	CALL_2
0x4000f0e	      0xbe01000000	                              mov esi, 1	       585	sendf.c	FUNCTION_12	WHILE_1	IF_5	CALL_2
0x4000f13	            0xffd0	                                call rax	       585	sendf.c	FUNCTION_12	WHILE_1	IF_5	CALL_2
0x4000f15	        0x488945f0	             mov qword [rbp - 0x10], rax	       585	sendf.c	FUNCTION_12	WHILE_1	IF_5	CALL_2
0x4000f19	    0x48817df00100	     cmp qword [rbp - 0x10], 0x10000001 	       587	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6
0x4000f21	            0x7556	                           jne 0x4000f79	       587	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6
0x4000f23	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       588	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	IF_7
0x4000f27	    0x488b80e00300	           mov rax, qword [rax + 0x3e0] 	       588	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	IF_7
0x4000f2e	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	       588	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	IF_7
0x4000f34	          0x83e010	                           and eax, 0x10	       588	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	IF_7
0x4000f37	            0x85c0	                           test eax, eax	       588	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	IF_7
0x4000f39	            0x7422	                            je 0x4000f5d	       588	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	IF_7
0x4000f3b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       592	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	IF_7	CALL_3
0x4000f3f	    0x488d35000000	                   lea rsi, [0x04000f46]	       592	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	IF_7	CALL_3
0x4000f46	          0x4889c7	                            mov rdi, rax	       592	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	IF_7	CALL_3
0x4000f49	      0xb800000000	                              mov eax, 0	       592	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	IF_7	CALL_3
0x4000f4e	      0xe800000000	                          call 0x4000f53	       592	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	IF_7	CALL_3
0x4000f53	      0xb817000000	                           mov eax, 0x17	       593	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	IF_7
0x4000f58	      0xe91d010000	                           jmp 0x400107a	       593	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	IF_7
0x4000f5d	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       595	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	CALL_4
0x4000f61	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       595	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	CALL_4
0x4000f65	          0x8b75b4	             mov esi, dword [rbp - 0x4c]	       595	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	CALL_4
0x4000f68	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       595	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	CALL_4
0x4000f6c	          0x4889c7	                            mov rdi, rax	       595	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	CALL_4
0x4000f6f	      0xe8f1fbffff	                     call sym.pausewrite	       595	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	CALL_4
0x4000f74	      0xe901010000	                           jmp 0x400107a	       595	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	CALL_4
0x4000f79	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       597	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_8
0x4000f7d	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       597	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_8
0x4000f81	            0x742a	                            je 0x4000fad	       597	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_8
0x4000f83	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       598	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_8	CALL_5
0x4000f87	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       598	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_8	CALL_5
0x4000f8b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       598	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_8	CALL_5
0x4000f8f	    0x488d35000000	                   lea rsi, [0x04000f96]	       598	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_8	CALL_5
0x4000f96	          0x4889c7	                            mov rdi, rax	       598	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_8	CALL_5
0x4000f99	      0xb800000000	                              mov eax, 0	       598	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_8	CALL_5
0x4000f9e	      0xe800000000	                          call 0x4000fa3	       598	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_8	CALL_5
0x4000fa3	      0xb817000000	                           mov eax, 0x17	       599	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_8
0x4000fa8	      0xe9cd000000	                           jmp 0x400107a	       599	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_8
0x4000fad	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       603	sendf.c	FUNCTION_12	WHILE_1
0x4000fb1	        0x480145d0	            add qword [rbp - 0x30], rax 	       603	sendf.c	FUNCTION_12	WHILE_1
0x4000fb5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       604	sendf.c	FUNCTION_12	WHILE_1
0x4000fb9	        0x482945d8	             sub qword [rbp - 0x28], rax	       604	sendf.c	FUNCTION_12	WHILE_1
0x4000fbd	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       581	sendf.c	FUNCTION_12	WHILE_1
0x4000fc2	     0xf850effffff	                           jne 0x4000ed6	       581	sendf.c	FUNCTION_12	WHILE_1
0x4000fc8	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       607	sendf.c	FUNCTION_12	IF_9
0x4000fcd	     0xf84a2000000	                            je 0x4001075	       607	sendf.c	FUNCTION_12	IF_9
0x4000fd3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       609	sendf.c	FUNCTION_12	IF_9
0x4000fd7	        0x488945d0	             mov qword [rbp - 0x30], rax	       609	sendf.c	FUNCTION_12	IF_9
0x4000fdb	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       610	sendf.c	FUNCTION_12	IF_9
0x4000fdf	        0x488945d8	             mov qword [rbp - 0x28], rax	       610	sendf.c	FUNCTION_12	IF_9
0x4000fe3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       611	sendf.c	FUNCTION_12	IF_9	CALL_6
0x4000fe7	      0xbe01000000	                              mov esi, 1	       611	sendf.c	FUNCTION_12	IF_9	CALL_6
0x4000fec	          0x4889c7	                            mov rdi, rax	       611	sendf.c	FUNCTION_12	IF_9	CALL_6
0x4000fef	      0xe800000000	                          call 0x4000ff4	       611	sendf.c	FUNCTION_12	IF_9	CALL_6
0x4000ff4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       612	sendf.c	FUNCTION_12	IF_9	CALL_7
0x4000ff8	    0x488b88200200	           mov rcx, qword [rax + 0x220] 	       612	sendf.c	FUNCTION_12	IF_9	CALL_7
0x4000fff	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       612	sendf.c	FUNCTION_12	IF_9	CALL_7
0x4001003	        0x488b7dd0	             mov rdi, qword [rbp - 0x30]	       612	sendf.c	FUNCTION_12	IF_9	CALL_7
0x4001007	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       612	sendf.c	FUNCTION_12	IF_9	CALL_7
0x400100b	      0xbe01000000	                              mov esi, 1	       612	sendf.c	FUNCTION_12	IF_9	CALL_7
0x4001010	            0xffd0	                                call rax	       612	sendf.c	FUNCTION_12	IF_9	CALL_7
0x4001012	        0x488945f8	                mov qword [rbp - 8], rax	       612	sendf.c	FUNCTION_12	IF_9	CALL_7
0x4001016	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       613	sendf.c	FUNCTION_12	IF_9	CALL_8
0x400101a	      0xbe00000000	                              mov esi, 0	       613	sendf.c	FUNCTION_12	IF_9	CALL_8
0x400101f	          0x4889c7	                            mov rdi, rax	       613	sendf.c	FUNCTION_12	IF_9	CALL_8
0x4001022	      0xe800000000	                          call 0x4001027	       613	sendf.c	FUNCTION_12	IF_9	CALL_8
0x4001027	    0x48817df80100	        cmp qword [rbp - 8], 0x10000001 	       615	sendf.c	FUNCTION_12	IF_9	IF_10
0x400102f	            0x751b	                           jne 0x400104c	       615	sendf.c	FUNCTION_12	IF_9	IF_10
0x4001031	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       619	sendf.c	FUNCTION_12	IF_9	CALL_9
0x4001035	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       619	sendf.c	FUNCTION_12	IF_9	CALL_9
0x4001039	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       619	sendf.c	FUNCTION_12	IF_9	CALL_9
0x400103d	      0xbe02000000	                              mov esi, 2	       619	sendf.c	FUNCTION_12	IF_9	CALL_9
0x4001042	          0x4889c7	                            mov rdi, rax	       619	sendf.c	FUNCTION_12	IF_9	CALL_9
0x4001045	      0xe81bfbffff	                     call sym.pausewrite	       619	sendf.c	FUNCTION_12	IF_9	CALL_9
0x400104a	            0xeb2e	                           jmp 0x400107a	       619	sendf.c	FUNCTION_12	IF_9	CALL_9
0x400104c	        0x488b45f8	                mov rax, qword [rbp - 8]	       621	sendf.c	FUNCTION_12	IF_9	IF_11
0x4001050	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	       621	sendf.c	FUNCTION_12	IF_9	IF_11
0x4001054	            0x741f	                            je 0x4001075	       621	sendf.c	FUNCTION_12	IF_9	IF_11
0x4001056	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       622	sendf.c	FUNCTION_12	IF_9	IF_11	CALL_10
0x400105a	    0x488d35000000	                   lea rsi, [0x04001061]	       622	sendf.c	FUNCTION_12	IF_9	IF_11	CALL_10
0x4001061	          0x4889c7	                            mov rdi, rax	       622	sendf.c	FUNCTION_12	IF_9	IF_11	CALL_10
0x4001064	      0xb800000000	                              mov eax, 0	       622	sendf.c	FUNCTION_12	IF_9	IF_11	CALL_10
0x4001069	      0xe800000000	                          call 0x400106e	       622	sendf.c	FUNCTION_12	IF_9	IF_11	CALL_10
0x400106e	      0xb817000000	                           mov eax, 0x17	       623	sendf.c	FUNCTION_12	IF_9	IF_11
0x4001073	            0xeb05	                           jmp 0x400107a	       623	sendf.c	FUNCTION_12	IF_9	IF_11
0x4001075	      0xb800000000	                              mov eax, 0	       627	sendf.c	FUNCTION_12
0x400107a	              0xc9	                                   leave	       628	sendf.c	FUNCTION_12
0x400107b	              0xc3	                                     ret	       628	sendf.c	FUNCTION_12
Curl_debug	SWITCH,1:functions,0:CALL,4:DO,0:ELSE,0:WHILE,0:IF,3:FOR,0	90
0x40014e6	              0x55	                                push rbp	       841	sendf.c	FUNCTION_17
0x40014e7	          0x4889e5	                            mov rbp, rsp	       841	sendf.c	FUNCTION_17
0x40014ea	    0x4881ec000100	                          sub rsp, 0x100	       841	sendf.c	FUNCTION_17
0x40014f1	    0x4889bd28ffff	             mov qword [rbp - 0xd8], rdi	       841	sendf.c	FUNCTION_17
0x40014f8	    0x89b524ffffff	             mov dword [rbp - 0xdc], esi	       841	sendf.c	FUNCTION_17
0x40014fe	    0x48899518ffff	             mov qword [rbp - 0xe8], rdx	       841	sendf.c	FUNCTION_17
0x4001505	    0x48898d10ffff	             mov qword [rbp - 0xf0], rcx	       841	sendf.c	FUNCTION_17
0x400150c	    0x4c898508ffff	              mov qword [rbp - 0xf8], r8	       841	sendf.c	FUNCTION_17
0x4001513	    0x64488b042528	                mov rax, qword fs:[0x28]	       841	sendf.c	FUNCTION_17
0x400151c	        0x488945f8	                mov qword [rbp - 8], rax	       841	sendf.c	FUNCTION_17
0x4001520	            0x31c0	                            xor eax, eax	       841	sendf.c	FUNCTION_17
0x4001522	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       843	sendf.c	FUNCTION_17	IF_1
0x4001529	     0xfb680d10700	          movzx eax, byte [rax + 0x7d1] 	       843	sendf.c	FUNCTION_17	IF_1
0x4001530	            0x84c0	                             test al, al	       843	sendf.c	FUNCTION_17	IF_1
0x4001532	     0xf8433010000	                            je 0x400166b	       843	sendf.c	FUNCTION_17	IF_1
0x4001538	    0x4883bd08ffff	               cmp qword [rbp - 0xf8], 0	       843	sendf.c	FUNCTION_17	IF_1
0x4001540	     0xf8425010000	                            je 0x400166b	       843	sendf.c	FUNCTION_17	IF_1
0x4001546	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       843	sendf.c	FUNCTION_17	IF_1
0x400154d	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	       843	sendf.c	FUNCTION_17	IF_1
0x4001554	          0x4885c0	                           test rax, rax	       843	sendf.c	FUNCTION_17	IF_1
0x4001557	     0xf840e010000	                            je 0x400166b	       843	sendf.c	FUNCTION_17	IF_1
0x400155d	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	       845	sendf.c	FUNCTION_17	IF_1
0x4001568	    0x488d05000000	                   lea rax, [0x0400156f]	       846	sendf.c	FUNCTION_17	IF_1
0x400156f	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       846	sendf.c	FUNCTION_17	IF_1
0x4001576	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	       847	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x400157c	          0x83f802	                              cmp eax, 2	       847	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x400157f	            0x7436	                            je 0x40015b7	       847	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x4001581	          0x83f802	                              cmp eax, 2	       847	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x4001584	            0x7707	                            ja 0x400158d	       847	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x4001586	          0x83f801	                              cmp eax, 1	       847	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x4001589	            0x740e	                            je 0x4001599	       847	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x400158b	            0xeb47	                           jmp 0x40015d4	       861	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x400158d	          0x83f803	                              cmp eax, 3	       847	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x4001590	            0x7415	                            je 0x40015a7	       847	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x4001592	          0x83f804	                              cmp eax, 4	       847	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x4001595	            0x742e	                            je 0x40015c5	       847	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x4001597	            0xeb3b	                           jmp 0x40015d4	       861	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x4001599	    0x488d05000000	                   lea rax, [0x040015a0]	       849	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x40015a0	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       849	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x40015a7	    0x488d05000000	                   lea rax, [0x040015ae]	       852	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x40015ae	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       852	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x40015b5	            0xeb1d	                           jmp 0x40015d4	       853	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x40015b7	    0x488d05000000	                   lea rax, [0x040015be]	       855	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x40015be	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       855	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x40015c5	    0x488d05000000	                   lea rax, [0x040015cc]	       858	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x40015cc	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       858	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x40015d3	              0x90	                                     nop	       859	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x40015d4	    0x4883bd40ffff	               cmp qword [rbp - 0xc0], 0	       864	sendf.c	FUNCTION_17	IF_1	IF_2
0x40015dc	     0xf8489000000	                            je 0x400166b	       864	sendf.c	FUNCTION_17	IF_1	IF_2
0x40015e2	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       865	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x40015e9	    0x488bb0e00000	            mov rsi, qword [rax + 0xe0] 	       865	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x40015f0	    0x488b8d40ffff	             mov rcx, qword [rbp - 0xc0]	       865	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x40015f7	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	       865	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x40015fe	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       865	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x4001605	          0x4989f1	                             mov r9, rsi	       865	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x4001608	          0x4989c8	                             mov r8, rcx	       865	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x400160b	          0x4889d1	                            mov rcx, rdx	       865	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x400160e	    0x488d15000000	                   lea rdx, [0x04001615]	       865	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x4001615	      0xbea0000000	                           mov esi, 0xa0	       865	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x400161a	          0x4889c7	                            mov rdi, rax	       865	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x400161d	      0xb800000000	                              mov eax, 0	       865	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x4001622	      0xe800000000	                          call 0x4001627	       865	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x4001627	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x400162e	          0x4889c7	                            mov rdi, rax	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x4001631	      0xe800000000	                          call 0x4001636	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x4001636	          0x4889c1	                            mov rcx, rax	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x4001639	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x4001640	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x4001647	      0xbe00000000	                              mov esi, 0	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x400164c	          0x4889c7	                            mov rdi, rax	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x400164f	      0xe8b0fdffff	                         call sym.showit	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x4001654	    0x89853cffffff	             mov dword [rbp - 0xc4], eax	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x400165a	    0x83bd3cffffff	               cmp dword [rbp - 0xc4], 0	       868	sendf.c	FUNCTION_17	IF_1	IF_2	IF_3
0x4001661	            0x7408	                            je 0x400166b	       868	sendf.c	FUNCTION_17	IF_1	IF_2	IF_3
0x4001663	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	       869	sendf.c	FUNCTION_17	IF_1	IF_2	IF_3
0x4001669	            0xeb2f	                           jmp 0x400169a	       869	sendf.c	FUNCTION_17	IF_1	IF_2	IF_3
0x400166b	    0x488b8d10ffff	             mov rcx, qword [rbp - 0xf0]	       872	sendf.c	FUNCTION_17	CALL_4
0x4001672	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	       872	sendf.c	FUNCTION_17	CALL_4
0x4001679	    0x8bb524ffffff	             mov esi, dword [rbp - 0xdc]	       872	sendf.c	FUNCTION_17	CALL_4
0x400167f	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       872	sendf.c	FUNCTION_17	CALL_4
0x4001686	          0x4889c7	                            mov rdi, rax	       872	sendf.c	FUNCTION_17	CALL_4
0x4001689	      0xe876fdffff	                         call sym.showit	       872	sendf.c	FUNCTION_17	CALL_4
0x400168e	    0x89853cffffff	             mov dword [rbp - 0xc4], eax	       872	sendf.c	FUNCTION_17	CALL_4
0x4001694	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	       873	sendf.c	FUNCTION_17
0x400169a	        0x488b7df8	                mov rdi, qword [rbp - 8]	       874	sendf.c	FUNCTION_17
0x400169e	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       874	sendf.c	FUNCTION_17
0x40016a7	            0x7405	                            je 0x40016ae	       874	sendf.c	FUNCTION_17
0x40016a9	      0xe800000000	                          call 0x40016ae	       874	sendf.c	FUNCTION_17
0x40016ae	              0xc9	                                   leave	       874	sendf.c	FUNCTION_17
0x40016af	              0xc3	                                     ret	       874	sendf.c	FUNCTION_17
Curl_send_plain	SWITCH,0:functions,0:CALL,4:DO,0:ELSE,2:WHILE,0:IF,3:FOR,0	83
0x40008af	              0x55	                                push rbp	       362	sendf.c	FUNCTION_8
0x40008b0	          0x4889e5	                            mov rbp, rsp	       362	sendf.c	FUNCTION_8
0x40008b3	        0x4883ec40	                           sub rsp, 0x40	       362	sendf.c	FUNCTION_8
0x40008b7	        0x48897de8	             mov qword [rbp - 0x18], rdi	       362	sendf.c	FUNCTION_8
0x40008bb	          0x8975e4	             mov dword [rbp - 0x1c], esi	       362	sendf.c	FUNCTION_8
0x40008be	        0x488955d8	             mov qword [rbp - 0x28], rdx	       362	sendf.c	FUNCTION_8
0x40008c2	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       362	sendf.c	FUNCTION_8
0x40008c6	        0x4c8945c8	              mov qword [rbp - 0x38], r8	       362	sendf.c	FUNCTION_8
0x40008ca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       363	sendf.c	FUNCTION_8
0x40008ce	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       363	sendf.c	FUNCTION_8
0x40008d1	          0x4863d2	                         movsxd rdx, edx	       363	sendf.c	FUNCTION_8
0x40008d4	    0x4881c2940000	                           add rdx, 0x94	       363	sendf.c	FUNCTION_8
0x40008db	        0x8b449008	       mov eax, dword [rax + rdx*4 + 8] 	       363	sendf.c	FUNCTION_8
0x40008df	          0x8945f0	             mov dword [rbp - 0x10], eax	       363	sendf.c	FUNCTION_8
0x40008e2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       373	sendf.c	FUNCTION_8	IF_1
0x40008e6	     0xfb680b60300	          movzx eax, byte [rax + 0x3b6] 	       373	sendf.c	FUNCTION_8	IF_1
0x40008ed	            0x84c0	                             test al, al	       373	sendf.c	FUNCTION_8	IF_1
0x40008ef	            0x7445	                            je 0x4000936	       373	sendf.c	FUNCTION_8	IF_1
0x40008f1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       375	sendf.c	FUNCTION_8	IF_1
0x40008f5	        0x488b4078	            mov rax, qword [rax + 0x78] 	       375	sendf.c	FUNCTION_8	IF_1
0x40008f9	          0x8b7810	            mov edi, dword [rax + 0x10] 	       374	sendf.c	FUNCTION_8	IF_1	CALL_1
0x40008fc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       375	sendf.c	FUNCTION_8	IF_1
0x4000900	        0x488b4078	            mov rax, qword [rax + 0x78] 	       375	sendf.c	FUNCTION_8	IF_1
0x4000904	        0x488b4820	            mov rcx, qword [rax + 0x20] 	       375	sendf.c	FUNCTION_8	IF_1
0x4000908	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       374	sendf.c	FUNCTION_8	IF_1	CALL_1
0x400090c	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	       374	sendf.c	FUNCTION_8	IF_1	CALL_1
0x4000910	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       374	sendf.c	FUNCTION_8	IF_1	CALL_1
0x4000913	          0x4189f9	                            mov r9d, edi	       374	sendf.c	FUNCTION_8	IF_1	CALL_1
0x4000916	          0x4989c8	                             mov r8, rcx	       374	sendf.c	FUNCTION_8	IF_1	CALL_1
0x4000919	      0xb900000020	                     mov ecx, 0x20000000	       374	sendf.c	FUNCTION_8	IF_1	CALL_1
0x400091e	            0x89c7	                            mov edi, eax	       374	sendf.c	FUNCTION_8	IF_1	CALL_1
0x4000920	      0xe800000000	                          call 0x4000925	       374	sendf.c	FUNCTION_8	IF_1	CALL_1
0x4000925	        0x488945f8	                mov qword [rbp - 8], rax	       374	sendf.c	FUNCTION_8	IF_1	CALL_1
0x4000929	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       376	sendf.c	FUNCTION_8	IF_1
0x400092d	    0xc680b6030000	               mov byte [rax + 0x3b6], 0	       376	sendf.c	FUNCTION_8	IF_1
0x4000934	            0xeb1b	                           jmp 0x4000951	       376	sendf.c	FUNCTION_8	IF_1
0x4000936	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       380	sendf.c	FUNCTION_8	CALL_2
0x400093a	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	       380	sendf.c	FUNCTION_8	CALL_2
0x400093e	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       380	sendf.c	FUNCTION_8	CALL_2
0x4000941	      0xb900400000	                         mov ecx, 0x4000	       380	sendf.c	FUNCTION_8	CALL_2
0x4000946	            0x89c7	                            mov edi, eax	       380	sendf.c	FUNCTION_8	CALL_2
0x4000948	      0xe800000000	                          call 0x400094d	       380	sendf.c	FUNCTION_8	CALL_2
0x400094d	        0x488945f8	                mov qword [rbp - 8], rax	       380	sendf.c	FUNCTION_8	CALL_2
0x4000951	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       382	sendf.c	FUNCTION_8
0x4000955	    0xc70000000000	                      mov dword [rax], 0	       382	sendf.c	FUNCTION_8
0x400095b	      0x48837df8ff	 cmp qword [rbp - 8], 0xffffffffffffffff	       383	sendf.c	FUNCTION_8	IF_2
0x4000960	            0x757f	                           jne 0x40009e1	       383	sendf.c	FUNCTION_8	IF_2
0x4000962	      0xe800000000	                          call 0x4000967	       384	sendf.c	FUNCTION_8	IF_2
0x4000967	            0x8b00	                    mov eax, dword [rax]	       384	sendf.c	FUNCTION_8	IF_2
0x4000969	          0x8945f4	              mov dword [rbp - 0xc], eax	       384	sendf.c	FUNCTION_8	IF_2
0x400096c	        0x837df40b	              cmp dword [rbp - 0xc], 0xb	       386	sendf.c	FUNCTION_8	IF_2	IF_3
0x4000970	            0x7412	                            je 0x4000984	       386	sendf.c	FUNCTION_8	IF_2	IF_3
0x4000972	        0x837df40b	              cmp dword [rbp - 0xc], 0xb	       394	sendf.c	FUNCTION_8	IF_2	IF_3
0x4000976	            0x740c	                            je 0x4000984	       394	sendf.c	FUNCTION_8	IF_2	IF_3
0x4000978	        0x837df404	                cmp dword [rbp - 0xc], 4	       394	sendf.c	FUNCTION_8	IF_2	IF_3
0x400097c	            0x7406	                            je 0x4000984	       394	sendf.c	FUNCTION_8	IF_2	IF_3
0x400097e	        0x837df473	            cmp dword [rbp - 0xc], 0x73 	       394	sendf.c	FUNCTION_8	IF_2	IF_3
0x4000982	            0x7514	                           jne 0x4000998	       394	sendf.c	FUNCTION_8	IF_2	IF_3
0x4000984	    0x48c745f80000	                  mov qword [rbp - 8], 0	       399	sendf.c	FUNCTION_8	IF_2	IF_3
0x400098c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       400	sendf.c	FUNCTION_8	IF_2	IF_3
0x4000990	    0xc70051000000	                   mov dword [rax], 0x51	       400	sendf.c	FUNCTION_8	IF_2	IF_3
0x4000996	            0xeb49	                           jmp 0x40009e1	       400	sendf.c	FUNCTION_8	IF_2	IF_3
0x4000998	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       403	sendf.c	FUNCTION_8	IF_2	ELSE_2	CALL_3
0x400099b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       403	sendf.c	FUNCTION_8	IF_2	ELSE_2	CALL_3
0x400099f	            0x89d6	                            mov esi, edx	       403	sendf.c	FUNCTION_8	IF_2	ELSE_2	CALL_3
0x40009a1	          0x4889c7	                            mov rdi, rax	       403	sendf.c	FUNCTION_8	IF_2	ELSE_2	CALL_3
0x40009a4	      0xe800000000	                          call 0x40009a9	       403	sendf.c	FUNCTION_8	IF_2	ELSE_2	CALL_3
0x40009a9	          0x4889c2	                            mov rdx, rax	       403	sendf.c	FUNCTION_8	IF_2	ELSE_2	CALL_3
0x40009ac	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       403	sendf.c	FUNCTION_8	IF_2	ELSE_2	CALL_3
0x40009b0	          0x488b00	                    mov rax, qword [rax]	       403	sendf.c	FUNCTION_8	IF_2	ELSE_2	CALL_3
0x40009b3	    0x488d35000000	                   lea rsi, [0x040009ba]	       403	sendf.c	FUNCTION_8	IF_2	ELSE_2	CALL_3
0x40009ba	          0x4889c7	                            mov rdi, rax	       403	sendf.c	FUNCTION_8	IF_2	ELSE_2	CALL_3
0x40009bd	      0xb800000000	                              mov eax, 0	       403	sendf.c	FUNCTION_8	IF_2	ELSE_2	CALL_3
0x40009c2	      0xe800000000	                          call 0x40009c7	       403	sendf.c	FUNCTION_8	IF_2	ELSE_2	CALL_3
0x40009c7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       405	sendf.c	FUNCTION_8	IF_2	ELSE_2
0x40009cb	          0x488b00	                    mov rax, qword [rax]	       405	sendf.c	FUNCTION_8	IF_2	ELSE_2
0x40009ce	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       405	sendf.c	FUNCTION_8	IF_2	ELSE_2
0x40009d1	    0x8990bc4d0000	          mov dword [rax + 0x4dbc], edx 	       405	sendf.c	FUNCTION_8	IF_2	ELSE_2
0x40009d7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       406	sendf.c	FUNCTION_8	IF_2	ELSE_2
0x40009db	    0xc70037000000	                   mov dword [rax], 0x37	       406	sendf.c	FUNCTION_8	IF_2	ELSE_2
0x40009e1	        0x488b45f8	                mov rax, qword [rbp - 8]	       409	sendf.c	FUNCTION_8
0x40009e5	              0xc9	                                   leave	       410	sendf.c	FUNCTION_8
0x40009e6	              0xc3	                                     ret	       410	sendf.c	FUNCTION_8
Curl_write	SWITCH,1:functions,0:CALL,0:DO,0:ELSE,0:WHILE,0:IF,1:FOR,0	55
0x40007e6	              0x55	                                push rbp	       332	sendf.c	FUNCTION_7
0x40007e7	          0x4889e5	                            mov rbp, rsp	       332	sendf.c	FUNCTION_7
0x40007ea	        0x4883ec50	                           sub rsp, 0x50	       332	sendf.c	FUNCTION_7
0x40007ee	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       332	sendf.c	FUNCTION_7
0x40007f2	          0x8975d4	             mov dword [rbp - 0x2c], esi	       332	sendf.c	FUNCTION_7
0x40007f5	        0x488955c8	             mov qword [rbp - 0x38], rdx	       332	sendf.c	FUNCTION_7
0x40007f9	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       332	sendf.c	FUNCTION_7
0x40007fd	        0x4c8945b8	              mov qword [rbp - 0x48], r8	       332	sendf.c	FUNCTION_7
0x4000801	    0x64488b042528	                mov rax, qword fs:[0x28]	       332	sendf.c	FUNCTION_7
0x400080a	        0x488945f8	                mov qword [rbp - 8], rax	       332	sendf.c	FUNCTION_7
0x400080e	            0x31c0	                            xor eax, eax	       332	sendf.c	FUNCTION_7
0x4000810	    0xc745e8000000	               mov dword [rbp - 0x18], 0	       334	sendf.c	FUNCTION_7
0x4000817	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       335	sendf.c	FUNCTION_7
0x400081b	    0x8b805c020000	           mov eax, dword [rax + 0x25c] 	       335	sendf.c	FUNCTION_7
0x4000821	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	       335	sendf.c	FUNCTION_7
0x4000824	           0xf94c0	                                 sete al	       335	sendf.c	FUNCTION_7
0x4000827	           0xfb6c0	                           movzx eax, al	       335	sendf.c	FUNCTION_7
0x400082a	          0x8945ec	             mov dword [rbp - 0x14], eax	       335	sendf.c	FUNCTION_7
0x400082d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       337	sendf.c	FUNCTION_7
0x4000831	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       337	sendf.c	FUNCTION_7
0x4000834	          0x4863d2	                         movsxd rdx, edx	       337	sendf.c	FUNCTION_7
0x4000837	        0x4883c250	                           add rdx, 0x50	       337	sendf.c	FUNCTION_7
0x400083b	        0x488b04d0	            mov rax, qword [rax + rdx*8]	       337	sendf.c	FUNCTION_7
0x400083f	        0x4c8d45e8	                    lea r8, [rbp - 0x18]	       337	sendf.c	FUNCTION_7
0x4000843	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       337	sendf.c	FUNCTION_7
0x4000847	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       337	sendf.c	FUNCTION_7
0x400084b	          0x8b75ec	             mov esi, dword [rbp - 0x14]	       337	sendf.c	FUNCTION_7
0x400084e	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	       337	sendf.c	FUNCTION_7
0x4000852	            0xffd0	                                call rax	       337	sendf.c	FUNCTION_7
0x4000854	        0x488945f0	             mov qword [rbp - 0x10], rax	       337	sendf.c	FUNCTION_7
0x4000858	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       339	sendf.c	FUNCTION_7
0x400085c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       339	sendf.c	FUNCTION_7
0x4000860	          0x488910	                    mov qword [rax], rdx	       339	sendf.c	FUNCTION_7
0x4000863	      0x48837df000	               cmp qword [rbp - 0x10], 0	       340	sendf.c	FUNCTION_7	IF_1
0x4000868	            0x7807	                            js 0x4000871	       340	sendf.c	FUNCTION_7	IF_1
0x400086a	      0xb800000000	                              mov eax, 0	       342	sendf.c	FUNCTION_7	IF_1
0x400086f	            0xeb28	                           jmp 0x4000899	       342	sendf.c	FUNCTION_7	IF_1
0x4000871	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       345	sendf.c	FUNCTION_7	SWITCH_1
0x4000874	            0x85c0	                           test eax, eax	       345	sendf.c	FUNCTION_7	SWITCH_1
0x4000876	            0x7417	                            je 0x400088f	       345	sendf.c	FUNCTION_7	SWITCH_1
0x4000878	          0x83f851	                           cmp eax, 0x51	       345	sendf.c	FUNCTION_7	SWITCH_1
0x400087b	            0x7519	                           jne 0x4000896	       345	sendf.c	FUNCTION_7	SWITCH_1
0x400087d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       347	sendf.c	FUNCTION_7	SWITCH_1
0x4000881	    0x48c700000000	                      mov qword [rax], 0	       347	sendf.c	FUNCTION_7	SWITCH_1
0x4000888	      0xb800000000	                              mov eax, 0	       348	sendf.c	FUNCTION_7	SWITCH_1
0x400088d	            0xeb0a	                           jmp 0x4000899	       348	sendf.c	FUNCTION_7	SWITCH_1
0x400088f	      0xb837000000	                           mov eax, 0x37	       352	sendf.c	FUNCTION_7	SWITCH_1
0x4000894	            0xeb03	                           jmp 0x4000899	       352	sendf.c	FUNCTION_7	SWITCH_1
0x4000896	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       356	sendf.c	FUNCTION_7	SWITCH_1
0x4000899	        0x488b4df8	                mov rcx, qword [rbp - 8]	       358	sendf.c	FUNCTION_7
0x400089d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       358	sendf.c	FUNCTION_7
0x40008a6	            0x7405	                            je 0x40008ad	       358	sendf.c	FUNCTION_7
0x40008a8	      0xe800000000	                          call 0x40008ad	       358	sendf.c	FUNCTION_7
0x40008ad	              0xc9	                                   leave	       358	sendf.c	FUNCTION_7
0x40008ae	              0xc3	                                     ret	       358	sendf.c	FUNCTION_7
convert_lineends	SWITCH,0:functions,0:CALL,3:DO,0:ELSE,3:WHILE,1:IF,9:FOR,0	118
0x4000112	              0x55	                                push rbp	        61	sendf.c	FUNCTION_1
0x4000113	          0x4889e5	                            mov rbp, rsp	        61	sendf.c	FUNCTION_1
0x4000116	        0x4883ec30	                           sub rsp, 0x30	        61	sendf.c	FUNCTION_1
0x400011a	        0x48897de8	             mov qword [rbp - 0x18], rdi	        61	sendf.c	FUNCTION_1
0x400011e	        0x488975e0	             mov qword [rbp - 0x20], rsi	        61	sendf.c	FUNCTION_1
0x4000122	        0x488955d8	             mov qword [rbp - 0x28], rdx	        61	sendf.c	FUNCTION_1
0x4000126	      0x48837de000	               cmp qword [rbp - 0x20], 0	        65	sendf.c	FUNCTION_1	IF_1
0x400012b	            0x7407	                            je 0x4000134	        65	sendf.c	FUNCTION_1	IF_1
0x400012d	      0x48837dd800	               cmp qword [rbp - 0x28], 0	        65	sendf.c	FUNCTION_1	IF_1
0x4000132	            0x7509	                           jne 0x400013d	        65	sendf.c	FUNCTION_1	IF_1
0x4000134	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        66	sendf.c	FUNCTION_1	IF_1
0x4000138	      0xe98d010000	                           jmp 0x40002ca	        66	sendf.c	FUNCTION_1	IF_1
0x400013d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        69	sendf.c	FUNCTION_1	IF_2
0x4000141	     0xfb680025100	         movzx eax, byte [rax + 0x5102] 	        69	sendf.c	FUNCTION_1	IF_2
0x4000148	            0x84c0	                             test al, al	        69	sendf.c	FUNCTION_1	IF_2
0x400014a	            0x7454	                            je 0x40001a0	        69	sendf.c	FUNCTION_1	IF_2
0x400014c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        72	sendf.c	FUNCTION_1	IF_2	IF_3
0x4000150	           0xfb600	                   movzx eax, byte [rax]	        72	sendf.c	FUNCTION_1	IF_2	IF_3
0x4000153	            0x3c0a	                             cmp al, 0xa	        72	sendf.c	FUNCTION_1	IF_2	IF_3
0x4000155	            0x753e	                           jne 0x4000195	        72	sendf.c	FUNCTION_1	IF_2	IF_3
0x4000157	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        75	sendf.c	FUNCTION_1	IF_2	IF_3	CALL_1
0x400015b	        0x488d50ff	                      lea rdx, [rax - 1]	        75	sendf.c	FUNCTION_1	IF_2	IF_3	CALL_1
0x400015f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        75	sendf.c	FUNCTION_1	IF_2	IF_3	CALL_1
0x4000163	        0x488d4801	                      lea rcx, [rax + 1]	        75	sendf.c	FUNCTION_1	IF_2	IF_3	CALL_1
0x4000167	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        75	sendf.c	FUNCTION_1	IF_2	IF_3	CALL_1
0x400016b	          0x4889ce	                            mov rsi, rcx	        75	sendf.c	FUNCTION_1	IF_2	IF_3	CALL_1
0x400016e	          0x4889c7	                            mov rdi, rax	        75	sendf.c	FUNCTION_1	IF_2	IF_3	CALL_1
0x4000171	      0xe800000000	                          call 0x4000176	        75	sendf.c	FUNCTION_1	IF_2	IF_3	CALL_1
0x4000176	      0x48836dd801	               sub qword [rbp - 0x28], 1	        76	sendf.c	FUNCTION_1	IF_2	IF_3
0x400017b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        78	sendf.c	FUNCTION_1	IF_2	IF_3
0x400017f	    0x488b80085100	          mov rax, qword [rax + 0x5108] 	        78	sendf.c	FUNCTION_1	IF_2	IF_3
0x4000186	        0x488d5001	                      lea rdx, [rax + 1]	        78	sendf.c	FUNCTION_1	IF_2	IF_3
0x400018a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        78	sendf.c	FUNCTION_1	IF_2	IF_3
0x400018e	    0x488990085100	          mov qword [rax + 0x5108], rdx 	        78	sendf.c	FUNCTION_1	IF_2	IF_3
0x4000195	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        80	sendf.c	FUNCTION_1	IF_2
0x4000199	    0xc68002510000	              mov byte [rax + 0x5102], 0	        80	sendf.c	FUNCTION_1	IF_2
0x40001a0	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	        84	sendf.c	FUNCTION_1	CALL_2
0x40001a4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        84	sendf.c	FUNCTION_1	CALL_2
0x40001a8	      0xbe0d000000	                            mov esi, 0xd	        84	sendf.c	FUNCTION_1	CALL_2
0x40001ad	          0x4889c7	                            mov rdi, rax	        84	sendf.c	FUNCTION_1	CALL_2
0x40001b0	      0xe800000000	                          call 0x40001b5	        84	sendf.c	FUNCTION_1	CALL_2
0x40001b5	        0x488945f8	                mov qword [rbp - 8], rax	        84	sendf.c	FUNCTION_1	CALL_2
0x40001b9	        0x488b45f8	                mov rax, qword [rbp - 8]	        84	sendf.c	FUNCTION_1	CALL_2
0x40001bd	        0x488945f0	             mov qword [rbp - 0x10], rax	        84	sendf.c	FUNCTION_1	CALL_2
0x40001c1	      0x48837df000	               cmp qword [rbp - 0x10], 0	        85	sendf.c	FUNCTION_1	IF_4
0x40001c6	     0xf84fa000000	                            je 0x40002c6	        85	sendf.c	FUNCTION_1	IF_4
0x40001cc	            0xeb75	                           jmp 0x4000243	        87	sendf.c	FUNCTION_1	IF_4	WHILE_1
0x40001ce	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        89	sendf.c	FUNCTION_1	IF_4	WHILE_1	IF_5	CALL_3
0x40001d2	      0xba02000000	                              mov edx, 2	        89	sendf.c	FUNCTION_1	IF_4	WHILE_1	IF_5	CALL_3
0x40001d7	    0x488d35000000	                   lea rsi, [0x040001de]	        89	sendf.c	FUNCTION_1	IF_4	WHILE_1	IF_5	CALL_3
0x40001de	          0x4889c7	                            mov rdi, rax	        89	sendf.c	FUNCTION_1	IF_4	WHILE_1	IF_5	CALL_3
0x40001e1	      0xe800000000	                          call 0x40001e6	        89	sendf.c	FUNCTION_1	IF_4	WHILE_1	IF_5	CALL_3
0x40001e6	            0x85c0	                           test eax, eax	        89	sendf.c	FUNCTION_1	IF_4	WHILE_1	IF_5	CALL_3
0x40001e8	            0x752e	                           jne 0x4000218	        89	sendf.c	FUNCTION_1	IF_4	WHILE_1	IF_5	CALL_3
0x40001ea	      0x488345f001	               add qword [rbp - 0x10], 1	        91	sendf.c	FUNCTION_1	IF_4	WHILE_1	IF_5
0x40001ef	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        92	sendf.c	FUNCTION_1	IF_4	WHILE_1	IF_5
0x40001f3	           0xfb610	                   movzx edx, byte [rax]	        92	sendf.c	FUNCTION_1	IF_4	WHILE_1	IF_5
0x40001f6	        0x488b45f8	                mov rax, qword [rbp - 8]	        92	sendf.c	FUNCTION_1	IF_4	WHILE_1	IF_5
0x40001fa	            0x8810	                      mov byte [rax], dl	        92	sendf.c	FUNCTION_1	IF_4	WHILE_1	IF_5
0x40001fc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        94	sendf.c	FUNCTION_1	IF_4	WHILE_1	IF_5
0x4000200	    0x488b80085100	          mov rax, qword [rax + 0x5108] 	        94	sendf.c	FUNCTION_1	IF_4	WHILE_1	IF_5
0x4000207	        0x488d5001	                      lea rdx, [rax + 1]	        94	sendf.c	FUNCTION_1	IF_4	WHILE_1	IF_5
0x400020b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        94	sendf.c	FUNCTION_1	IF_4	WHILE_1	IF_5
0x400020f	    0x488990085100	          mov qword [rax + 0x5108], rdx 	        94	sendf.c	FUNCTION_1	IF_4	WHILE_1	IF_5
0x4000216	            0xeb21	                           jmp 0x4000239	        94	sendf.c	FUNCTION_1	IF_4	WHILE_1	IF_5
0x4000218	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        97	sendf.c	FUNCTION_1	IF_4	WHILE_1	ELSE_1	IF_6
0x400021c	           0xfb600	                   movzx eax, byte [rax]	        97	sendf.c	FUNCTION_1	IF_4	WHILE_1	ELSE_1	IF_6
0x400021f	            0x3c0d	                             cmp al, 0xd	        97	sendf.c	FUNCTION_1	IF_4	WHILE_1	ELSE_1	IF_6
0x4000221	            0x7509	                           jne 0x400022c	        97	sendf.c	FUNCTION_1	IF_4	WHILE_1	ELSE_1	IF_6
0x4000223	        0x488b45f8	                mov rax, qword [rbp - 8]	        99	sendf.c	FUNCTION_1	IF_4	WHILE_1	ELSE_1	IF_6
0x4000227	          0xc6000a	                     mov byte [rax], 0xa	        99	sendf.c	FUNCTION_1	IF_4	WHILE_1	ELSE_1	IF_6
0x400022a	            0xeb0d	                           jmp 0x4000239	        99	sendf.c	FUNCTION_1	IF_4	WHILE_1	ELSE_1	IF_6
0x400022c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       103	sendf.c	FUNCTION_1	IF_4	WHILE_1	ELSE_1	ELSE_2
0x4000230	           0xfb610	                   movzx edx, byte [rax]	       103	sendf.c	FUNCTION_1	IF_4	WHILE_1	ELSE_1	ELSE_2
0x4000233	        0x488b45f8	                mov rax, qword [rbp - 8]	       103	sendf.c	FUNCTION_1	IF_4	WHILE_1	ELSE_1	ELSE_2
0x4000237	            0x8810	                      mov byte [rax], dl	       103	sendf.c	FUNCTION_1	IF_4	WHILE_1	ELSE_1	ELSE_2
0x4000239	      0x488345f801	                  add qword [rbp - 8], 1	       106	sendf.c	FUNCTION_1	IF_4	WHILE_1
0x400023e	      0x488345f001	               add qword [rbp - 0x10], 1	       107	sendf.c	FUNCTION_1	IF_4	WHILE_1
0x4000243	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        87	sendf.c	FUNCTION_1	IF_4	WHILE_1
0x4000247	        0x488d50ff	                      lea rdx, [rax - 1]	        87	sendf.c	FUNCTION_1	IF_4	WHILE_1
0x400024b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        87	sendf.c	FUNCTION_1	IF_4	WHILE_1
0x400024f	          0x4801d0	                            add rax, rdx	        87	sendf.c	FUNCTION_1	IF_4	WHILE_1
0x4000252	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	        87	sendf.c	FUNCTION_1	IF_4	WHILE_1
0x4000256	     0xf8772ffffff	                            ja 0x40001ce	        87	sendf.c	FUNCTION_1	IF_4	WHILE_1
0x400025c	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       110	sendf.c	FUNCTION_1	IF_4	IF_7
0x4000260	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       110	sendf.c	FUNCTION_1	IF_4	IF_7
0x4000264	          0x4801d0	                            add rax, rdx	       110	sendf.c	FUNCTION_1	IF_4	IF_7
0x4000267	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       110	sendf.c	FUNCTION_1	IF_4	IF_7
0x400026b	            0x7631	                           jbe 0x400029e	       110	sendf.c	FUNCTION_1	IF_4	IF_7
0x400026d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       112	sendf.c	FUNCTION_1	IF_4	IF_7	IF_8
0x4000271	           0xfb600	                   movzx eax, byte [rax]	       112	sendf.c	FUNCTION_1	IF_4	IF_7	IF_8
0x4000274	            0x3c0d	                             cmp al, 0xd	       112	sendf.c	FUNCTION_1	IF_4	IF_7	IF_8
0x4000276	            0x7514	                           jne 0x400028c	       112	sendf.c	FUNCTION_1	IF_4	IF_7	IF_8
0x4000278	        0x488b45f8	                mov rax, qword [rbp - 8]	       114	sendf.c	FUNCTION_1	IF_4	IF_7	IF_8
0x400027c	          0xc6000a	                     mov byte [rax], 0xa	       114	sendf.c	FUNCTION_1	IF_4	IF_7	IF_8
0x400027f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       116	sendf.c	FUNCTION_1	IF_4	IF_7	IF_8
0x4000283	    0xc68002510000	              mov byte [rax + 0x5102], 1	       116	sendf.c	FUNCTION_1	IF_4	IF_7	IF_8
0x400028a	            0xeb0d	                           jmp 0x4000299	       116	sendf.c	FUNCTION_1	IF_4	IF_7	IF_8
0x400028c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       120	sendf.c	FUNCTION_1	IF_4	IF_7	ELSE_3
0x4000290	           0xfb610	                   movzx edx, byte [rax]	       120	sendf.c	FUNCTION_1	IF_4	IF_7	ELSE_3
0x4000293	        0x488b45f8	                mov rax, qword [rbp - 8]	       120	sendf.c	FUNCTION_1	IF_4	IF_7	ELSE_3
0x4000297	            0x8810	                      mov byte [rax], dl	       120	sendf.c	FUNCTION_1	IF_4	IF_7	ELSE_3
0x4000299	      0x488345f801	                  add qword [rbp - 8], 1	       122	sendf.c	FUNCTION_1	IF_4	IF_7
0x400029e	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       124	sendf.c	FUNCTION_1	IF_4	IF_9
0x40002a2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       124	sendf.c	FUNCTION_1	IF_4	IF_9
0x40002a6	          0x4801d0	                            add rax, rdx	       124	sendf.c	FUNCTION_1	IF_4	IF_9
0x40002a9	        0x483b45f8	                cmp rax, qword [rbp - 8]	       124	sendf.c	FUNCTION_1	IF_4	IF_9
0x40002ad	            0x7607	                           jbe 0x40002b6	       124	sendf.c	FUNCTION_1	IF_4	IF_9
0x40002af	        0x488b45f8	                mov rax, qword [rbp - 8]	       126	sendf.c	FUNCTION_1	IF_4	IF_9
0x40002b3	          0xc60000	                       mov byte [rax], 0	       126	sendf.c	FUNCTION_1	IF_4	IF_9
0x40002b6	        0x488b55f8	                mov rdx, qword [rbp - 8]	       128	sendf.c	FUNCTION_1	IF_4
0x40002ba	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       128	sendf.c	FUNCTION_1	IF_4
0x40002be	          0x4829c2	                            sub rdx, rax	       128	sendf.c	FUNCTION_1	IF_4
0x40002c1	          0x4889d0	                            mov rax, rdx	       128	sendf.c	FUNCTION_1	IF_4
0x40002c4	            0xeb04	                           jmp 0x40002ca	       128	sendf.c	FUNCTION_1	IF_4
0x40002c6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       130	sendf.c	FUNCTION_1
0x40002ca	              0xc9	                                   leave	       131	sendf.c	FUNCTION_1
0x40002cb	              0xc3	                                     ret	       131	sendf.c	FUNCTION_1
