Curl_speedcheck	CALL,3:FOR,0:functions,0:ELSE,2:DO,0:WHILE,0:SWITCH,0:IF,5	72
0x400013d	              0x55	                                push rbp	        41	speedcheck.c	FUNCTION_2
0x400013e	          0x4889e5	                            mov rbp, rsp	        41	speedcheck.c	FUNCTION_2
0x4000141	        0x4883ec30	                           sub rsp, 0x30	        41	speedcheck.c	FUNCTION_2
0x4000145	        0x48897de8	             mov qword [rbp - 0x18], rdi	        41	speedcheck.c	FUNCTION_2
0x4000149	          0x4889f0	                            mov rax, rsi	        41	speedcheck.c	FUNCTION_2
0x400014c	          0x4889d1	                            mov rcx, rdx	        41	speedcheck.c	FUNCTION_2
0x400014f	          0x4889ca	                            mov rdx, rcx	        41	speedcheck.c	FUNCTION_2
0x4000152	        0x488945d0	             mov qword [rbp - 0x30], rax	        41	speedcheck.c	FUNCTION_2
0x4000156	        0x488955d8	             mov qword [rbp - 0x28], rdx	        41	speedcheck.c	FUNCTION_2
0x400015a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        42	speedcheck.c	FUNCTION_2	IF_1
0x400015e	    0x488b80780b00	           mov rax, qword [rax + 0xb78] 	        42	speedcheck.c	FUNCTION_2	IF_1
0x4000165	          0x4885c0	                           test rax, rax	        42	speedcheck.c	FUNCTION_2	IF_1
0x4000168	     0xf88e7000000	                            js 0x4000255	        42	speedcheck.c	FUNCTION_2	IF_1
0x400016e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        42	speedcheck.c	FUNCTION_2	IF_1
0x4000172	    0x488b80780300	           mov rax, qword [rax + 0x378] 	        42	speedcheck.c	FUNCTION_2	IF_1
0x4000179	          0x4885c0	                           test rax, rax	        42	speedcheck.c	FUNCTION_2	IF_1
0x400017c	     0xf84d3000000	                            je 0x4000255	        42	speedcheck.c	FUNCTION_2	IF_1
0x4000182	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        43	speedcheck.c	FUNCTION_2	IF_1	IF_2
0x4000186	    0x488b90780b00	           mov rdx, qword [rax + 0xb78] 	        43	speedcheck.c	FUNCTION_2	IF_1	IF_2
0x400018d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        43	speedcheck.c	FUNCTION_2	IF_1	IF_2
0x4000191	    0x488b80700300	           mov rax, qword [rax + 0x370] 	        43	speedcheck.c	FUNCTION_2	IF_1	IF_2
0x4000198	          0x4839c2	                            cmp rdx, rax	        43	speedcheck.c	FUNCTION_2	IF_1	IF_2
0x400019b	     0xf8da5000000	                           jge 0x4000246	        43	speedcheck.c	FUNCTION_2	IF_1	IF_2
0x40001a1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        44	speedcheck.c	FUNCTION_2	IF_1	IF_2	IF_3
0x40001a5	    0x488b80f80c00	           mov rax, qword [rax + 0xcf8] 	        44	speedcheck.c	FUNCTION_2	IF_1	IF_2	IF_3
0x40001ac	          0x4885c0	                           test rax, rax	        44	speedcheck.c	FUNCTION_2	IF_1	IF_2	IF_3
0x40001af	            0x751f	                           jne 0x40001d0	        44	speedcheck.c	FUNCTION_2	IF_1	IF_2	IF_3
0x40001b1	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	        46	speedcheck.c	FUNCTION_2	IF_1	IF_2	IF_3
0x40001b5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        46	speedcheck.c	FUNCTION_2	IF_1	IF_2	IF_3
0x40001b9	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	        46	speedcheck.c	FUNCTION_2	IF_1	IF_2	IF_3
0x40001bd	    0x488981f80c00	            mov qword [rcx + 0xcf8], rax	        46	speedcheck.c	FUNCTION_2	IF_1	IF_2	IF_3
0x40001c4	    0x488991000d00	            mov qword [rcx + 0xd00], rdx	        46	speedcheck.c	FUNCTION_2	IF_1	IF_2	IF_3
0x40001cb	      0xe985000000	                           jmp 0x4000255	        46	speedcheck.c	FUNCTION_2	IF_1	IF_2	IF_3
0x40001d0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        49	speedcheck.c	FUNCTION_2	IF_1	IF_2	ELSE_1	CALL_1
0x40001d4	    0x488b90000d00	           mov rdx, qword [rax + 0xd00] 	        49	speedcheck.c	FUNCTION_2	IF_1	IF_2	ELSE_1	CALL_1
0x40001db	    0x488b80f80c00	           mov rax, qword [rax + 0xcf8] 	        49	speedcheck.c	FUNCTION_2	IF_1	IF_2	ELSE_1	CALL_1
0x40001e2	        0x488b7dd0	             mov rdi, qword [rbp - 0x30]	        49	speedcheck.c	FUNCTION_2	IF_1	IF_2	ELSE_1	CALL_1
0x40001e6	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	        49	speedcheck.c	FUNCTION_2	IF_1	IF_2	ELSE_1	CALL_1
0x40001ea	          0x4889d1	                            mov rcx, rdx	        49	speedcheck.c	FUNCTION_2	IF_1	IF_2	ELSE_1	CALL_1
0x40001ed	          0x4889c2	                            mov rdx, rax	        49	speedcheck.c	FUNCTION_2	IF_1	IF_2	ELSE_1	CALL_1
0x40001f0	      0xe800000000	                          call 0x40001f5	        49	speedcheck.c	FUNCTION_2	IF_1	IF_2	ELSE_1	CALL_1
0x40001f5	        0x488945f8	                mov qword [rbp - 8], rax	        49	speedcheck.c	FUNCTION_2	IF_1	IF_2	ELSE_1	CALL_1
0x40001f9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        51	speedcheck.c	FUNCTION_2	IF_1	IF_2	ELSE_1	IF_4
0x40001fd	    0x488b80780300	           mov rax, qword [rax + 0x378] 	        51	speedcheck.c	FUNCTION_2	IF_1	IF_2	ELSE_1	IF_4
0x4000204	    0x4869c0e80300	                    imul rax, rax, 0x3e8	        51	speedcheck.c	FUNCTION_2	IF_1	IF_2	ELSE_1	IF_4
0x400020b	        0x483b45f8	                cmp rax, qword [rbp - 8]	        51	speedcheck.c	FUNCTION_2	IF_1	IF_2	ELSE_1	IF_4
0x400020f	            0x7f44	                            jg 0x4000255	        51	speedcheck.c	FUNCTION_2	IF_1	IF_2	ELSE_1	IF_4
0x4000211	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        53	speedcheck.c	FUNCTION_2	IF_1	IF_2	ELSE_1	IF_4	CALL_2
0x4000215	    0x488b88780300	           mov rcx, qword [rax + 0x378] 	        53	speedcheck.c	FUNCTION_2	IF_1	IF_2	ELSE_1	IF_4	CALL_2
0x400021c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        53	speedcheck.c	FUNCTION_2	IF_1	IF_2	ELSE_1	IF_4	CALL_2
0x4000220	    0x488b90700300	           mov rdx, qword [rax + 0x370] 	        53	speedcheck.c	FUNCTION_2	IF_1	IF_2	ELSE_1	IF_4	CALL_2
0x4000227	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        53	speedcheck.c	FUNCTION_2	IF_1	IF_2	ELSE_1	IF_4	CALL_2
0x400022b	    0x488d35000000	                   lea rsi, [0x04000232]	        53	speedcheck.c	FUNCTION_2	IF_1	IF_2	ELSE_1	IF_4	CALL_2
0x4000232	          0x4889c7	                            mov rdi, rax	        53	speedcheck.c	FUNCTION_2	IF_1	IF_2	ELSE_1	IF_4	CALL_2
0x4000235	      0xb800000000	                              mov eax, 0	        53	speedcheck.c	FUNCTION_2	IF_1	IF_2	ELSE_1	IF_4	CALL_2
0x400023a	      0xe800000000	                          call 0x400023f	        53	speedcheck.c	FUNCTION_2	IF_1	IF_2	ELSE_1	IF_4	CALL_2
0x400023f	      0xb81c000000	                           mov eax, 0x1c	        58	speedcheck.c	FUNCTION_2	IF_1	IF_2	ELSE_1	IF_4
0x4000244	            0xeb3a	                           jmp 0x4000280	        58	speedcheck.c	FUNCTION_2	IF_1	IF_2	ELSE_1	IF_4
0x4000246	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        64	speedcheck.c	FUNCTION_2	IF_1	ELSE_2
0x400024a	    0x48c780f80c00	              mov qword [rax + 0xcf8], 0	        64	speedcheck.c	FUNCTION_2	IF_1	ELSE_2
0x4000255	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        67	speedcheck.c	FUNCTION_2	IF_5
0x4000259	    0x488b80700300	           mov rax, qword [rax + 0x370] 	        67	speedcheck.c	FUNCTION_2	IF_5
0x4000260	          0x4885c0	                           test rax, rax	        67	speedcheck.c	FUNCTION_2	IF_5
0x4000263	            0x7416	                            je 0x400027b	        67	speedcheck.c	FUNCTION_2	IF_5
0x4000265	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        70	speedcheck.c	FUNCTION_2	CALL_3
0x4000269	      0xba07000000	                              mov edx, 7	        70	speedcheck.c	FUNCTION_2	CALL_3
0x400026e	      0xbee8030000	                          mov esi, 0x3e8	        70	speedcheck.c	FUNCTION_2	CALL_3
0x4000273	          0x4889c7	                            mov rdi, rax	        70	speedcheck.c	FUNCTION_2	CALL_3
0x4000276	      0xe800000000	                          call 0x400027b	        70	speedcheck.c	FUNCTION_2	CALL_3
0x400027b	      0xb800000000	                              mov eax, 0	        72	speedcheck.c	FUNCTION_2
0x4000280	              0xc9	                                   leave	        73	speedcheck.c	FUNCTION_2
0x4000281	              0xc3	                                     ret	        73	speedcheck.c	FUNCTION_2
Curl_speedinit	CALL,1:FOR,0:functions,0:ELSE,0:DO,0:WHILE,0:SWITCH,0:IF,0	13
0x4000112	              0x55	                                push rbp	        32	speedcheck.c	FUNCTION_1
0x4000113	          0x4889e5	                            mov rbp, rsp	        32	speedcheck.c	FUNCTION_1
0x4000116	        0x4883ec10	                           sub rsp, 0x10	        32	speedcheck.c	FUNCTION_1
0x400011a	        0x48897df8	                mov qword [rbp - 8], rdi	        32	speedcheck.c	FUNCTION_1
0x400011e	        0x488b45f8	                mov rax, qword [rbp - 8]	        33	speedcheck.c	FUNCTION_1	CALL_1
0x4000122	    0x4805f80c0000	                          add rax, 0xcf8	        33	speedcheck.c	FUNCTION_1	CALL_1
0x4000128	      0xba10000000	                           mov edx, 0x10	        33	speedcheck.c	FUNCTION_1	CALL_1
0x400012d	      0xbe00000000	                              mov esi, 0	        33	speedcheck.c	FUNCTION_1	CALL_1
0x4000132	          0x4889c7	                            mov rdi, rax	        33	speedcheck.c	FUNCTION_1	CALL_1
0x4000135	      0xe800000000	                          call 0x400013a	        33	speedcheck.c	FUNCTION_1	CALL_1
0x400013a	              0x90	                                     nop	        34	speedcheck.c	FUNCTION_1
0x400013b	              0xc9	                                   leave	        34	speedcheck.c	FUNCTION_1
0x400013c	              0xc3	                                     ret	        34	speedcheck.c	FUNCTION_1
