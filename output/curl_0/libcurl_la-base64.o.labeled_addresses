decodeQuantum	CALL,3:FOR,1:DO,0:functions,0:IF,4:ELSE,2:WHILE,1:SWITCH,0	87
0x4000112	              0x55	                                push rbp	        46	base64.c	FUNCTION_1
0x4000113	          0x4889e5	                            mov rbp, rsp	        46	base64.c	FUNCTION_1
0x4000116	              0x53	                                push rbx	        46	base64.c	FUNCTION_1
0x4000117	        0x4883ec48	                           sub rsp, 0x48	        46	base64.c	FUNCTION_1
0x400011b	        0x48897db8	             mov qword [rbp - 0x48], rdi	        46	base64.c	FUNCTION_1
0x400011f	        0x488975b0	             mov qword [rbp - 0x50], rsi	        46	base64.c	FUNCTION_1
0x4000123	    0x48c745c00000	               mov qword [rbp - 0x40], 0	        47	base64.c	FUNCTION_1
0x400012b	    0x48c745e00000	               mov qword [rbp - 0x20], 0	        49	base64.c	FUNCTION_1
0x4000133	    0x48c745d80000	               mov qword [rbp - 0x28], 0	        51	base64.c	FUNCTION_1	FOR_1
0x400013b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        51	base64.c	FUNCTION_1	FOR_1
0x400013f	        0x488945c8	             mov qword [rbp - 0x38], rax	        51	base64.c	FUNCTION_1	FOR_1
0x4000143	      0xe98e000000	                           jmp 0x40001d6	        51	base64.c	FUNCTION_1	FOR_1
0x4000148	    0x48c745e80000	               mov qword [rbp - 0x18], 0	        52	base64.c	FUNCTION_1	FOR_1
0x4000150	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        54	base64.c	FUNCTION_1	FOR_1	IF_1
0x4000154	           0xfb600	                   movzx eax, byte [rax]	        54	base64.c	FUNCTION_1	FOR_1	IF_1
0x4000157	            0x3c3d	                            cmp al, 0x3d	        54	base64.c	FUNCTION_1	FOR_1	IF_1
0x4000159	            0x750c	                           jne 0x4000167	        54	base64.c	FUNCTION_1	FOR_1	IF_1
0x400015b	      0x48c165e006	               shl qword [rbp - 0x20], 6	        55	base64.c	FUNCTION_1	FOR_1	IF_1
0x4000160	      0x488345c001	               add qword [rbp - 0x40], 1	        56	base64.c	FUNCTION_1	FOR_1	IF_1
0x4000165	            0xeb65	                           jmp 0x40001cc	        56	base64.c	FUNCTION_1	FOR_1	IF_1
0x4000167	    0x488d05000000	                   lea rax, [0x0400016e]	        59	base64.c	FUNCTION_1	FOR_1	ELSE_1
0x400016e	        0x488945d0	             mov qword [rbp - 0x30], rax	        59	base64.c	FUNCTION_1	FOR_1	ELSE_1
0x4000172	            0xeb0a	                           jmp 0x400017e	        61	base64.c	FUNCTION_1	FOR_1	ELSE_1	WHILE_1
0x4000174	      0x488345e801	               add qword [rbp - 0x18], 1	        62	base64.c	FUNCTION_1	FOR_1	ELSE_1	WHILE_1
0x4000179	      0x488345d001	               add qword [rbp - 0x30], 1	        63	base64.c	FUNCTION_1	FOR_1	ELSE_1	WHILE_1
0x400017e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        61	base64.c	FUNCTION_1	FOR_1	ELSE_1	WHILE_1
0x4000182	           0xfb600	                   movzx eax, byte [rax]	        61	base64.c	FUNCTION_1	FOR_1	ELSE_1	WHILE_1
0x4000185	            0x84c0	                             test al, al	        61	base64.c	FUNCTION_1	FOR_1	ELSE_1	WHILE_1
0x4000187	            0x7412	                            je 0x400019b	        61	base64.c	FUNCTION_1	FOR_1	ELSE_1	WHILE_1
0x4000189	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        61	base64.c	FUNCTION_1	FOR_1	ELSE_1	WHILE_1
0x400018d	           0xfb610	                   movzx edx, byte [rax]	        61	base64.c	FUNCTION_1	FOR_1	ELSE_1	WHILE_1
0x4000190	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        61	base64.c	FUNCTION_1	FOR_1	ELSE_1	WHILE_1
0x4000194	           0xfb600	                   movzx eax, byte [rax]	        61	base64.c	FUNCTION_1	FOR_1	ELSE_1	WHILE_1
0x4000197	            0x38c2	                              cmp dl, al	        61	base64.c	FUNCTION_1	FOR_1	ELSE_1	WHILE_1
0x4000199	            0x75d9	                           jne 0x4000174	        61	base64.c	FUNCTION_1	FOR_1	ELSE_1	WHILE_1
0x400019b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        66	base64.c	FUNCTION_1	FOR_1	ELSE_1	IF_2
0x400019f	           0xfb610	                   movzx edx, byte [rax]	        66	base64.c	FUNCTION_1	FOR_1	ELSE_1	IF_2
0x40001a2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        66	base64.c	FUNCTION_1	FOR_1	ELSE_1	IF_2
0x40001a6	           0xfb600	                   movzx eax, byte [rax]	        66	base64.c	FUNCTION_1	FOR_1	ELSE_1	IF_2
0x40001a9	            0x38c2	                              cmp dl, al	        66	base64.c	FUNCTION_1	FOR_1	ELSE_1	IF_2
0x40001ab	            0x7518	                           jne 0x40001c5	        66	base64.c	FUNCTION_1	FOR_1	ELSE_1	IF_2
0x40001ad	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        67	base64.c	FUNCTION_1	FOR_1	ELSE_1	IF_2
0x40001b1	        0x48c1e006	                              shl rax, 6	        67	base64.c	FUNCTION_1	FOR_1	ELSE_1	IF_2
0x40001b5	          0x4889c2	                            mov rdx, rax	        67	base64.c	FUNCTION_1	FOR_1	ELSE_1	IF_2
0x40001b8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        67	base64.c	FUNCTION_1	FOR_1	ELSE_1	IF_2
0x40001bc	          0x4801d0	                            add rax, rdx	        67	base64.c	FUNCTION_1	FOR_1	ELSE_1	IF_2
0x40001bf	        0x488945e0	             mov qword [rbp - 0x20], rax	        67	base64.c	FUNCTION_1	FOR_1	ELSE_1	IF_2
0x40001c3	            0xeb07	                           jmp 0x40001cc	        67	base64.c	FUNCTION_1	FOR_1	ELSE_1	IF_2
0x40001c5	      0xb800000000	                              mov eax, 0	        69	base64.c	FUNCTION_1	FOR_1	ELSE_1	ELSE_2
0x40001ca	            0xeb7f	                           jmp 0x400024b	        69	base64.c	FUNCTION_1	FOR_1	ELSE_1	ELSE_2
0x40001cc	      0x488345d801	               add qword [rbp - 0x28], 1	        51	base64.c	FUNCTION_1	FOR_1
0x40001d1	      0x488345c801	               add qword [rbp - 0x38], 1	        51	base64.c	FUNCTION_1	FOR_1
0x40001d6	      0x48837dd803	               cmp qword [rbp - 0x28], 3	        51	base64.c	FUNCTION_1	FOR_1
0x40001db	     0xf8667ffffff	                           jbe 0x4000148	        51	base64.c	FUNCTION_1	FOR_1
0x40001e1	      0x48837dc000	               cmp qword [rbp - 0x40], 0	        73	base64.c	FUNCTION_1	IF_3
0x40001e6	            0x7519	                           jne 0x4000201	        73	base64.c	FUNCTION_1	IF_3
0x40001e8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        74	base64.c	FUNCTION_1	CALL_1
0x40001ec	        0x488d5802	                      lea rbx, [rax + 2]	        74	base64.c	FUNCTION_1	CALL_1
0x40001f0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        74	base64.c	FUNCTION_1	CALL_1
0x40001f4	           0xfb6c0	                           movzx eax, al	        74	base64.c	FUNCTION_1	CALL_1
0x40001f7	          0x4889c7	                            mov rdi, rax	        74	base64.c	FUNCTION_1	CALL_1
0x40001fa	      0xe800000000	                          call 0x40001ff	        74	base64.c	FUNCTION_1	CALL_1
0x40001ff	            0x8803	                      mov byte [rbx], al	        74	base64.c	FUNCTION_1	CALL_1
0x4000201	      0x48c16de008	               shr qword [rbp - 0x20], 8	        76	base64.c	FUNCTION_1
0x4000206	      0x48837dc001	               cmp qword [rbp - 0x40], 1	        77	base64.c	FUNCTION_1	IF_4
0x400020b	            0x7719	                            ja 0x4000226	        77	base64.c	FUNCTION_1	IF_4
0x400020d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        78	base64.c	FUNCTION_1	CALL_2
0x4000211	        0x488d5801	                      lea rbx, [rax + 1]	        78	base64.c	FUNCTION_1	CALL_2
0x4000215	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        78	base64.c	FUNCTION_1	CALL_2
0x4000219	           0xfb6c0	                           movzx eax, al	        78	base64.c	FUNCTION_1	CALL_2
0x400021c	          0x4889c7	                            mov rdi, rax	        78	base64.c	FUNCTION_1	CALL_2
0x400021f	      0xe800000000	                          call 0x4000224	        78	base64.c	FUNCTION_1	CALL_2
0x4000224	            0x8803	                      mov byte [rbx], al	        78	base64.c	FUNCTION_1	CALL_2
0x4000226	      0x48c16de008	               shr qword [rbp - 0x20], 8	        80	base64.c	FUNCTION_1
0x400022b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        81	base64.c	FUNCTION_1	CALL_3
0x400022f	           0xfb6c0	                           movzx eax, al	        81	base64.c	FUNCTION_1	CALL_3
0x4000232	          0x4889c7	                            mov rdi, rax	        81	base64.c	FUNCTION_1	CALL_3
0x4000235	      0xe800000000	                          call 0x400023a	        81	base64.c	FUNCTION_1	CALL_3
0x400023a	            0x89c2	                            mov edx, eax	        81	base64.c	FUNCTION_1	CALL_3
0x400023c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        81	base64.c	FUNCTION_1	CALL_3
0x4000240	            0x8810	                      mov byte [rax], dl	        81	base64.c	FUNCTION_1	CALL_3
0x4000242	      0xb803000000	                              mov eax, 3	        83	base64.c	FUNCTION_1
0x4000247	        0x482b45c0	             sub rax, qword [rbp - 0x40]	        83	base64.c	FUNCTION_1
0x400024b	        0x4883c448	                           add rsp, 0x48	        84	base64.c	FUNCTION_1
0x400024f	              0x5b	                                 pop rbx	        84	base64.c	FUNCTION_1
0x4000250	              0x5d	                                 pop rbp	        84	base64.c	FUNCTION_1
0x4000251	              0xc3	                                     ret	        84	base64.c	FUNCTION_1
Curl_base64url_encode	CALL,1:FOR,0:DO,0:functions,0:IF,0:ELSE,0:WHILE,0:SWITCH,0	20
0x4000793	              0x55	                                push rbp	       318	base64.c	FUNCTION_5
0x4000794	          0x4889e5	                            mov rbp, rsp	       318	base64.c	FUNCTION_5
0x4000797	        0x4883ec30	                           sub rsp, 0x30	       318	base64.c	FUNCTION_5
0x400079b	        0x48897df8	                mov qword [rbp - 8], rdi	       318	base64.c	FUNCTION_5
0x400079f	        0x488975f0	             mov qword [rbp - 0x10], rsi	       318	base64.c	FUNCTION_5
0x40007a3	        0x488955e8	             mov qword [rbp - 0x18], rdx	       318	base64.c	FUNCTION_5
0x40007a7	        0x48894de0	             mov qword [rbp - 0x20], rcx	       318	base64.c	FUNCTION_5
0x40007ab	        0x4c8945d8	              mov qword [rbp - 0x28], r8	       318	base64.c	FUNCTION_5
0x40007af	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	       319	base64.c	FUNCTION_5	CALL_1
0x40007b3	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       319	base64.c	FUNCTION_5	CALL_1
0x40007b7	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       319	base64.c	FUNCTION_5	CALL_1
0x40007bb	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       319	base64.c	FUNCTION_5	CALL_1
0x40007bf	        0x488b45f8	                mov rax, qword [rbp - 8]	       319	base64.c	FUNCTION_5	CALL_1
0x40007c3	          0x4989f9	                             mov r9, rdi	       319	base64.c	FUNCTION_5	CALL_1
0x40007c6	          0x4989f0	                             mov r8, rsi	       319	base64.c	FUNCTION_5	CALL_1
0x40007c9	          0x4889c6	                            mov rsi, rax	       319	base64.c	FUNCTION_5	CALL_1
0x40007cc	    0x488d3d000000	                   lea rdi, [0x040007d3]	       319	base64.c	FUNCTION_5	CALL_1
0x40007d3	      0xe83efcffff	                  call sym.base64_encode	       319	base64.c	FUNCTION_5	CALL_1
0x40007d8	              0xc9	                                   leave	       320	base64.c	FUNCTION_5
0x40007d9	              0xc3	                                     ret	       320	base64.c	FUNCTION_5
Curl_base64_encode	CALL,1:FOR,0:DO,0:functions,0:IF,0:ELSE,0:WHILE,0:SWITCH,0	20
0x400074c	              0x55	                                push rbp	       294	base64.c	FUNCTION_4
0x400074d	          0x4889e5	                            mov rbp, rsp	       294	base64.c	FUNCTION_4
0x4000750	        0x4883ec30	                           sub rsp, 0x30	       294	base64.c	FUNCTION_4
0x4000754	        0x48897df8	                mov qword [rbp - 8], rdi	       294	base64.c	FUNCTION_4
0x4000758	        0x488975f0	             mov qword [rbp - 0x10], rsi	       294	base64.c	FUNCTION_4
0x400075c	        0x488955e8	             mov qword [rbp - 0x18], rdx	       294	base64.c	FUNCTION_4
0x4000760	        0x48894de0	             mov qword [rbp - 0x20], rcx	       294	base64.c	FUNCTION_4
0x4000764	        0x4c8945d8	              mov qword [rbp - 0x28], r8	       294	base64.c	FUNCTION_4
0x4000768	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	       295	base64.c	FUNCTION_4	CALL_1
0x400076c	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       295	base64.c	FUNCTION_4	CALL_1
0x4000770	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       295	base64.c	FUNCTION_4	CALL_1
0x4000774	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       295	base64.c	FUNCTION_4	CALL_1
0x4000778	        0x488b45f8	                mov rax, qword [rbp - 8]	       295	base64.c	FUNCTION_4	CALL_1
0x400077c	          0x4989f9	                             mov r9, rdi	       295	base64.c	FUNCTION_4	CALL_1
0x400077f	          0x4989f0	                             mov r8, rsi	       295	base64.c	FUNCTION_4	CALL_1
0x4000782	          0x4889c6	                            mov rsi, rax	       295	base64.c	FUNCTION_4	CALL_1
0x4000785	    0x488d3d000000	                   lea rdi, [0x0400078c]	       295	base64.c	FUNCTION_4	CALL_1
0x400078c	      0xe885fcffff	                  call sym.base64_encode	       295	base64.c	FUNCTION_4	CALL_1
0x4000791	              0xc9	                                   leave	       296	base64.c	FUNCTION_4
0x4000792	              0xc3	                                     ret	       296	base64.c	FUNCTION_4
base64_encode	CALL,9:FOR,1:DO,0:functions,0:IF,6:ELSE,1:WHILE,1:SWITCH,1	222
0x4000416	              0x55	                                push rbp	       175	base64.c	FUNCTION_3
0x4000417	          0x4889e5	                            mov rbp, rsp	       175	base64.c	FUNCTION_3
0x400041a	        0x4883c480	             add rsp, 0xffffffffffffff80	       175	base64.c	FUNCTION_3
0x400041e	        0x48897da8	             mov qword [rbp - 0x58], rdi	       175	base64.c	FUNCTION_3
0x4000422	        0x488975a0	             mov qword [rbp - 0x60], rsi	       175	base64.c	FUNCTION_3
0x4000426	        0x48895598	             mov qword [rbp - 0x68], rdx	       175	base64.c	FUNCTION_3
0x400042a	        0x48894d90	             mov qword [rbp - 0x70], rcx	       175	base64.c	FUNCTION_3
0x400042e	        0x4c894588	              mov qword [rbp - 0x78], r8	       175	base64.c	FUNCTION_3
0x4000432	        0x4c894d80	              mov qword [rbp - 0x80], r9	       175	base64.c	FUNCTION_3
0x4000436	    0x64488b042528	                mov rax, qword fs:[0x28]	       175	base64.c	FUNCTION_3
0x400043f	        0x488945f8	                mov qword [rbp - 8], rax	       175	base64.c	FUNCTION_3
0x4000443	            0x31c0	                            xor eax, eax	       175	base64.c	FUNCTION_3
0x4000445	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       183	base64.c	FUNCTION_3
0x400044d	        0x488b4598	             mov rax, qword [rbp - 0x68]	       185	base64.c	FUNCTION_3
0x4000451	        0x488945c8	             mov qword [rbp - 0x38], rax	       185	base64.c	FUNCTION_3
0x4000455	        0x488b4588	             mov rax, qword [rbp - 0x78]	       187	base64.c	FUNCTION_3
0x4000459	    0x48c700000000	                      mov qword [rax], 0	       187	base64.c	FUNCTION_3
0x4000460	        0x488b4580	             mov rax, qword [rbp - 0x80]	       188	base64.c	FUNCTION_3
0x4000464	    0x48c700000000	                      mov qword [rax], 0	       188	base64.c	FUNCTION_3
0x400046b	      0x48837d9000	               cmp qword [rbp - 0x70], 0	       190	base64.c	FUNCTION_3	IF_1
0x4000470	            0x7510	                           jne 0x4000482	       190	base64.c	FUNCTION_3	IF_1
0x4000472	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       191	base64.c	FUNCTION_3	CALL_1
0x4000476	          0x4889c7	                            mov rdi, rax	       191	base64.c	FUNCTION_3	CALL_1
0x4000479	      0xe800000000	                          call 0x400047e	       191	base64.c	FUNCTION_3	CALL_1
0x400047e	        0x48894590	             mov qword [rbp - 0x70], rax	       191	base64.c	FUNCTION_3	CALL_1
0x4000482	    0x488b05000000	            mov rax, qword [0x04000489] 	       198	base64.c	FUNCTION_3	CALL_2
0x4000489	          0x488b08	                    mov rcx, qword [rax]	       198	base64.c	FUNCTION_3	CALL_2
0x400048c	        0x488b4590	             mov rax, qword [rbp - 0x70]	       198	base64.c	FUNCTION_3	CALL_2
0x4000490	        0x48c1e002	                              shl rax, 2	       198	base64.c	FUNCTION_3	CALL_2
0x4000494	    0x48baabaaaaaa	          movabs rdx, 0xaaaaaaaaaaaaaaab	       198	base64.c	FUNCTION_3	CALL_2
0x400049e	          0x48f7e2	                                 mul rdx	       198	base64.c	FUNCTION_3	CALL_2
0x40004a1	          0x4889d0	                            mov rax, rdx	       198	base64.c	FUNCTION_3	CALL_2
0x40004a4	          0x48d1e8	                              shr rax, 1	       198	base64.c	FUNCTION_3	CALL_2
0x40004a7	        0x4883c004	                              add rax, 4	       198	base64.c	FUNCTION_3	CALL_2
0x40004ab	          0x4889c7	                            mov rdi, rax	       198	base64.c	FUNCTION_3	CALL_2
0x40004ae	            0xffd1	                                call rcx	       198	base64.c	FUNCTION_3	CALL_2
0x40004b0	        0x488945c0	             mov qword [rbp - 0x40], rax	       198	base64.c	FUNCTION_3	CALL_2
0x40004b4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       198	base64.c	FUNCTION_3	CALL_2
0x40004b8	        0x488945d8	             mov qword [rbp - 0x28], rax	       198	base64.c	FUNCTION_3	CALL_2
0x40004bc	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       199	base64.c	FUNCTION_3	IF_3
0x40004c1	            0x750a	                           jne 0x40004cd	       199	base64.c	FUNCTION_3	IF_3
0x40004c3	      0xb81b000000	                           mov eax, 0x1b	       200	base64.c	FUNCTION_3	IF_3
0x40004c8	      0xe969020000	                           jmp 0x4000736	       200	base64.c	FUNCTION_3	IF_3
0x40004cd	    0xc745bc000000	               mov dword [rbp - 0x44], 0	       207	base64.c	FUNCTION_3	CALL_3
0x40004d4	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       208	base64.c	FUNCTION_3	IF_4
0x40004d8	            0x741b	                            je 0x40004f5	       208	base64.c	FUNCTION_3	IF_4
0x40004da	    0x488b05000000	            mov rax, qword [0x040004e1] 	       209	base64.c	FUNCTION_3	IF_4	CALL_4
0x40004e1	          0x488b00	                    mov rax, qword [rax]	       209	base64.c	FUNCTION_3	IF_4	CALL_4
0x40004e4	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       209	base64.c	FUNCTION_3	IF_4	CALL_4
0x40004e8	          0x4889d7	                            mov rdi, rdx	       209	base64.c	FUNCTION_3	IF_4	CALL_4
0x40004eb	            0xffd0	                                call rax	       209	base64.c	FUNCTION_3	IF_4	CALL_4
0x40004ed	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       210	base64.c	FUNCTION_3	IF_4
0x40004f0	      0xe941020000	                           jmp 0x4000736	       210	base64.c	FUNCTION_3	IF_4
0x40004f5	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       213	base64.c	FUNCTION_3	IF_5
0x40004fa	     0xf84eb010000	                            je 0x40006eb	       213	base64.c	FUNCTION_3	IF_5
0x4000500	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       214	base64.c	FUNCTION_3	IF_5
0x4000504	        0x488945c8	             mov qword [rbp - 0x38], rax	       214	base64.c	FUNCTION_3	IF_5
0x4000508	      0xe9de010000	                           jmp 0x40006eb	       216	base64.c	FUNCTION_3	WHILE_1
0x400050d	    0xc745b8000000	               mov dword [rbp - 0x48], 0	       217	base64.c	FUNCTION_3	WHILE_1	FOR_1
0x4000514	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       217	base64.c	FUNCTION_3	WHILE_1	FOR_1
0x4000517	          0x8945b4	             mov dword [rbp - 0x4c], eax	       217	base64.c	FUNCTION_3	WHILE_1	FOR_1
0x400051a	            0xeb37	                           jmp 0x4000553	       217	base64.c	FUNCTION_3	WHILE_1	FOR_1
0x400051c	      0x48837d9000	               cmp qword [rbp - 0x70], 0	       218	base64.c	FUNCTION_3	WHILE_1	FOR_1	IF_6
0x4000521	            0x7422	                            je 0x4000545	       218	base64.c	FUNCTION_3	WHILE_1	FOR_1	IF_6
0x4000523	        0x8345b801	               add dword [rbp - 0x48], 1	       219	base64.c	FUNCTION_3	WHILE_1	FOR_1	IF_6
0x4000527	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       220	base64.c	FUNCTION_3	WHILE_1	FOR_1	IF_6
0x400052b	           0xfb600	                   movzx eax, byte [rax]	       220	base64.c	FUNCTION_3	WHILE_1	FOR_1	IF_6
0x400052e	            0x89c2	                            mov edx, eax	       220	base64.c	FUNCTION_3	WHILE_1	FOR_1	IF_6
0x4000530	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       220	base64.c	FUNCTION_3	WHILE_1	FOR_1	IF_6
0x4000533	            0x4898	                                    cdqe	       220	base64.c	FUNCTION_3	WHILE_1	FOR_1	IF_6
0x4000535	        0x885405e0	         mov byte [rbp + rax - 0x20], dl	       220	base64.c	FUNCTION_3	WHILE_1	FOR_1	IF_6
0x4000539	      0x488345c801	               add qword [rbp - 0x38], 1	       221	base64.c	FUNCTION_3	WHILE_1	FOR_1	IF_6
0x400053e	      0x48836d9001	               sub qword [rbp - 0x70], 1	       222	base64.c	FUNCTION_3	WHILE_1	FOR_1	IF_6
0x4000543	            0xeb0a	                           jmp 0x400054f	       222	base64.c	FUNCTION_3	WHILE_1	FOR_1	IF_6
0x4000545	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       225	base64.c	FUNCTION_3	WHILE_1	FOR_1	ELSE_1
0x4000548	            0x4898	                                    cdqe	       225	base64.c	FUNCTION_3	WHILE_1	FOR_1	ELSE_1
0x400054a	      0xc64405e000	          mov byte [rbp + rax - 0x20], 0	       225	base64.c	FUNCTION_3	WHILE_1	FOR_1	ELSE_1
0x400054f	        0x8345b401	               add dword [rbp - 0x4c], 1	       217	base64.c	FUNCTION_3	WHILE_1	FOR_1
0x4000553	        0x837db402	               cmp dword [rbp - 0x4c], 2	       217	base64.c	FUNCTION_3	WHILE_1	FOR_1
0x4000557	            0x7ec3	                           jle 0x400051c	       217	base64.c	FUNCTION_3	WHILE_1	FOR_1
0x4000559	         0xfb645e0	            movzx eax, byte [rbp - 0x20]	       228	base64.c	FUNCTION_3	WHILE_1
0x400055d	          0xc0e802	                               shr al, 2	       228	base64.c	FUNCTION_3	WHILE_1
0x4000560	          0x8845f0	               mov byte [rbp - 0x10], al	       228	base64.c	FUNCTION_3	WHILE_1
0x4000563	         0xfb645e0	            movzx eax, byte [rbp - 0x20]	       229	base64.c	FUNCTION_3	WHILE_1
0x4000567	           0xfb6c0	                           movzx eax, al	       229	base64.c	FUNCTION_3	WHILE_1
0x400056a	          0x83e003	                              and eax, 3	       229	base64.c	FUNCTION_3	WHILE_1
0x400056d	          0xc1e004	                              shl eax, 4	       229	base64.c	FUNCTION_3	WHILE_1
0x4000570	            0x89c2	                            mov edx, eax	       229	base64.c	FUNCTION_3	WHILE_1
0x4000572	         0xfb645e1	            movzx eax, byte [rbp - 0x1f]	       230	base64.c	FUNCTION_3	WHILE_1
0x4000576	          0xc0e804	                               shr al, 4	       230	base64.c	FUNCTION_3	WHILE_1
0x4000579	             0x9d0	                             or eax, edx	       229	base64.c	FUNCTION_3	WHILE_1
0x400057b	          0x8845f1	                mov byte [rbp - 0xf], al	       229	base64.c	FUNCTION_3	WHILE_1
0x400057e	         0xfb645e1	            movzx eax, byte [rbp - 0x1f]	       231	base64.c	FUNCTION_3	WHILE_1
0x4000582	           0xfb6c0	                           movzx eax, al	       231	base64.c	FUNCTION_3	WHILE_1
0x4000585	          0x83e00f	                            and eax, 0xf	       231	base64.c	FUNCTION_3	WHILE_1
0x4000588	          0xc1e002	                              shl eax, 2	       231	base64.c	FUNCTION_3	WHILE_1
0x400058b	            0x89c2	                            mov edx, eax	       231	base64.c	FUNCTION_3	WHILE_1
0x400058d	         0xfb645e2	            movzx eax, byte [rbp - 0x1e]	       232	base64.c	FUNCTION_3	WHILE_1
0x4000591	          0xc0e806	                               shr al, 6	       232	base64.c	FUNCTION_3	WHILE_1
0x4000594	             0x9d0	                             or eax, edx	       231	base64.c	FUNCTION_3	WHILE_1
0x4000596	          0x8845f2	                mov byte [rbp - 0xe], al	       231	base64.c	FUNCTION_3	WHILE_1
0x4000599	         0xfb645e2	            movzx eax, byte [rbp - 0x1e]	       233	base64.c	FUNCTION_3	WHILE_1
0x400059d	          0x83e03f	                           and eax, 0x3f	       233	base64.c	FUNCTION_3	WHILE_1
0x40005a0	          0x8845f3	                mov byte [rbp - 0xd], al	       233	base64.c	FUNCTION_3	WHILE_1
0x40005a3	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       235	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40005a6	          0x83f801	                              cmp eax, 1	       235	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40005a9	            0x740a	                            je 0x40005b5	       235	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40005ab	          0x83f802	                              cmp eax, 2	       235	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40005ae	            0x7454	                            je 0x4000604	       235	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40005b0	      0xe9b2000000	                           jmp 0x4000667	       235	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40005b5	         0xfb645f1	             movzx eax, byte [rbp - 0xf]	       239	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40005b9	           0xfb6d0	                           movzx edx, al	       239	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40005bc	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       239	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40005c0	          0x4801d0	                            add rax, rdx	       239	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40005c3	           0xfb600	                   movzx eax, byte [rax]	       239	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40005c6	           0xfbec8	                           movsx ecx, al	       237	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_5
0x40005c9	         0xfb645f0	            movzx eax, byte [rbp - 0x10]	       238	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40005cd	           0xfb6d0	                           movzx edx, al	       238	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40005d0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       238	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40005d4	          0x4801d0	                            add rax, rdx	       238	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40005d7	           0xfb600	                   movzx eax, byte [rax]	       238	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40005da	           0xfbed0	                           movsx edx, al	       237	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_5
0x40005dd	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       237	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_5
0x40005e1	          0x4189c8	                            mov r8d, ecx	       237	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_5
0x40005e4	            0x89d1	                            mov ecx, edx	       237	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_5
0x40005e6	    0x488d15000000	                   lea rdx, [0x040005ed]	       237	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_5
0x40005ed	      0xbe05000000	                              mov esi, 5	       237	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_5
0x40005f2	          0x4889c7	                            mov rdi, rax	       237	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_5
0x40005f5	      0xb800000000	                              mov eax, 0	       237	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_5
0x40005fa	      0xe800000000	                          call 0x40005ff	       237	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_5
0x40005ff	      0xe9e2000000	                           jmp 0x40006e6	       240	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000604	         0xfb645f2	             movzx eax, byte [rbp - 0xe]	       246	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000608	           0xfb6d0	                           movzx edx, al	       246	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x400060b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       246	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x400060f	          0x4801d0	                            add rax, rdx	       246	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000612	           0xfb600	                   movzx eax, byte [rax]	       246	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000615	           0xfbef0	                           movsx esi, al	       243	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_6
0x4000618	         0xfb645f1	             movzx eax, byte [rbp - 0xf]	       245	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x400061c	           0xfb6d0	                           movzx edx, al	       245	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x400061f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       245	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000623	          0x4801d0	                            add rax, rdx	       245	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000626	           0xfb600	                   movzx eax, byte [rax]	       245	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000629	           0xfbec8	                           movsx ecx, al	       243	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_6
0x400062c	         0xfb645f0	            movzx eax, byte [rbp - 0x10]	       244	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000630	           0xfb6d0	                           movzx edx, al	       244	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000633	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       244	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000637	          0x4801d0	                            add rax, rdx	       244	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x400063a	           0xfb600	                   movzx eax, byte [rax]	       244	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x400063d	           0xfbed0	                           movsx edx, al	       243	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_6
0x4000640	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       243	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_6
0x4000644	          0x4189f1	                            mov r9d, esi	       243	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_6
0x4000647	          0x4189c8	                            mov r8d, ecx	       243	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_6
0x400064a	            0x89d1	                            mov ecx, edx	       243	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_6
0x400064c	    0x488d15000000	                   lea rdx, [0x04000653]	       243	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_6
0x4000653	      0xbe05000000	                              mov esi, 5	       243	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_6
0x4000658	          0x4889c7	                            mov rdi, rax	       243	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_6
0x400065b	      0xb800000000	                              mov eax, 0	       243	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_6
0x4000660	      0xe800000000	                          call 0x4000665	       243	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_6
0x4000665	            0xeb7f	                           jmp 0x40006e6	       247	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000667	         0xfb645f3	             movzx eax, byte [rbp - 0xd]	       254	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x400066b	           0xfb6d0	                           movzx edx, al	       254	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x400066e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       254	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000672	          0x4801d0	                            add rax, rdx	       254	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000675	           0xfb600	                   movzx eax, byte [rax]	       254	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000678	           0xfbec8	                           movsx ecx, al	       250	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_7
0x400067b	         0xfb645f2	             movzx eax, byte [rbp - 0xe]	       253	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x400067f	           0xfb6d0	                           movzx edx, al	       253	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000682	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       253	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000686	          0x4801d0	                            add rax, rdx	       253	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000689	           0xfb600	                   movzx eax, byte [rax]	       253	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x400068c	           0xfbef8	                           movsx edi, al	       250	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_7
0x400068f	         0xfb645f1	             movzx eax, byte [rbp - 0xf]	       252	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000693	           0xfb6d0	                           movzx edx, al	       252	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x4000696	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       252	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x400069a	          0x4801d0	                            add rax, rdx	       252	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x400069d	           0xfb600	                   movzx eax, byte [rax]	       252	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40006a0	           0xfbef0	                           movsx esi, al	       250	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_7
0x40006a3	         0xfb645f0	            movzx eax, byte [rbp - 0x10]	       251	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40006a7	           0xfb6d0	                           movzx edx, al	       251	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40006aa	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       251	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40006ae	          0x4801d0	                            add rax, rdx	       251	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40006b1	           0xfb600	                   movzx eax, byte [rax]	       251	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40006b4	           0xfbed0	                           movsx edx, al	       250	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_7
0x40006b7	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       250	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_7
0x40006bb	        0x4883ec08	                              sub rsp, 8	       250	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_7
0x40006bf	              0x51	                                push rcx	       250	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_7
0x40006c0	          0x4189f9	                            mov r9d, edi	       250	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_7
0x40006c3	          0x4189f0	                            mov r8d, esi	       250	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_7
0x40006c6	            0x89d1	                            mov ecx, edx	       250	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_7
0x40006c8	    0x488d15000000	                   lea rdx, [0x040006cf]	       250	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_7
0x40006cf	      0xbe05000000	                              mov esi, 5	       250	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_7
0x40006d4	          0x4889c7	                            mov rdi, rax	       250	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_7
0x40006d7	      0xb800000000	                              mov eax, 0	       250	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_7
0x40006dc	      0xe800000000	                          call 0x40006e1	       250	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_7
0x40006e1	        0x4883c410	                           add rsp, 0x10	       250	base64.c	FUNCTION_3	WHILE_1	SWITCH_1	CALL_7
0x40006e5	              0x90	                                     nop	       255	base64.c	FUNCTION_3	WHILE_1	SWITCH_1
0x40006e6	      0x488345c004	               add qword [rbp - 0x40], 4	       257	base64.c	FUNCTION_3	WHILE_1
0x40006eb	      0x48837d9000	               cmp qword [rbp - 0x70], 0	       216	base64.c	FUNCTION_3	WHILE_1
0x40006f0	     0xf8517feffff	                           jne 0x400050d	       216	base64.c	FUNCTION_3	WHILE_1
0x40006f6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       261	base64.c	FUNCTION_3
0x40006fa	          0xc60000	                       mov byte [rax], 0	       261	base64.c	FUNCTION_3
0x40006fd	        0x488b4588	             mov rax, qword [rbp - 0x78]	       264	base64.c	FUNCTION_3
0x4000701	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       264	base64.c	FUNCTION_3
0x4000705	          0x488910	                    mov qword [rax], rdx	       264	base64.c	FUNCTION_3
0x4000708	    0x488b05000000	            mov rax, qword [0x0400070f] 	       266	base64.c	FUNCTION_3	CALL_8
0x400070f	          0x488b00	                    mov rax, qword [rax]	       266	base64.c	FUNCTION_3	CALL_8
0x4000712	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       266	base64.c	FUNCTION_3	CALL_8
0x4000716	          0x4889d7	                            mov rdi, rdx	       266	base64.c	FUNCTION_3	CALL_8
0x4000719	            0xffd0	                                call rax	       266	base64.c	FUNCTION_3	CALL_8
0x400071b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       269	base64.c	FUNCTION_3	CALL_9
0x400071f	          0x4889c7	                            mov rdi, rax	       269	base64.c	FUNCTION_3	CALL_9
0x4000722	      0xe800000000	                          call 0x4000727	       269	base64.c	FUNCTION_3	CALL_9
0x4000727	          0x4889c2	                            mov rdx, rax	       269	base64.c	FUNCTION_3	CALL_9
0x400072a	        0x488b4580	             mov rax, qword [rbp - 0x80]	       269	base64.c	FUNCTION_3	CALL_9
0x400072e	          0x488910	                    mov qword [rax], rdx	       269	base64.c	FUNCTION_3	CALL_9
0x4000731	      0xb800000000	                              mov eax, 0	       271	base64.c	FUNCTION_3
0x4000736	        0x488b75f8	                mov rsi, qword [rbp - 8]	       272	base64.c	FUNCTION_3
0x400073a	    0x644833342528	                xor rsi, qword fs:[0x28]	       272	base64.c	FUNCTION_3
0x4000743	            0x7405	                            je 0x400074a	       272	base64.c	FUNCTION_3
0x4000745	      0xe800000000	                          call 0x400074a	       272	base64.c	FUNCTION_3
0x400074a	              0xc9	                                   leave	       272	base64.c	FUNCTION_3
0x400074b	              0xc3	                                     ret	       272	base64.c	FUNCTION_3
Curl_base64_decode	CALL,4:FOR,1:DO,0:functions,0:IF,6:ELSE,0:WHILE,1:SWITCH,0	118
0x4000252	              0x55	                                push rbp	       102	base64.c	FUNCTION_2
0x4000253	          0x4889e5	                            mov rbp, rsp	       102	base64.c	FUNCTION_2
0x4000256	        0x4883ec70	                           sub rsp, 0x70	       102	base64.c	FUNCTION_2
0x400025a	        0x48897da8	             mov qword [rbp - 0x58], rdi	       102	base64.c	FUNCTION_2
0x400025e	        0x488975a0	             mov qword [rbp - 0x60], rsi	       102	base64.c	FUNCTION_2
0x4000262	        0x48895598	             mov qword [rbp - 0x68], rdx	       102	base64.c	FUNCTION_2
0x4000266	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       103	base64.c	FUNCTION_2
0x400026e	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       104	base64.c	FUNCTION_2
0x4000276	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       105	base64.c	FUNCTION_2
0x400027e	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       108	base64.c	FUNCTION_2
0x4000286	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       112	base64.c	FUNCTION_2
0x400028a	    0x48c700000000	                      mov qword [rax], 0	       112	base64.c	FUNCTION_2
0x4000291	        0x488b4598	             mov rax, qword [rbp - 0x68]	       113	base64.c	FUNCTION_2
0x4000295	    0x48c700000000	                      mov qword [rax], 0	       113	base64.c	FUNCTION_2
0x400029c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       114	base64.c	FUNCTION_2	CALL_1
0x40002a0	          0x4889c7	                            mov rdi, rax	       114	base64.c	FUNCTION_2	CALL_1
0x40002a3	      0xe800000000	                          call 0x40002a8	       114	base64.c	FUNCTION_2	CALL_1
0x40002a8	        0x488945d8	             mov qword [rbp - 0x28], rax	       114	base64.c	FUNCTION_2	CALL_1
0x40002ac	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       117	base64.c	FUNCTION_2	IF_1
0x40002b1	            0x740c	                            je 0x40002bf	       117	base64.c	FUNCTION_2	IF_1
0x40002b3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       117	base64.c	FUNCTION_2	IF_1
0x40002b7	          0x83e003	                              and eax, 3	       117	base64.c	FUNCTION_2	IF_1
0x40002ba	          0x4885c0	                           test rax, rax	       117	base64.c	FUNCTION_2	IF_1
0x40002bd	            0x740f	                            je 0x40002ce	       117	base64.c	FUNCTION_2	IF_1
0x40002bf	      0xb83d000000	                           mov eax, 0x3d	       118	base64.c	FUNCTION_2	IF_1
0x40002c4	      0xe94b010000	                           jmp 0x4000414	       118	base64.c	FUNCTION_2	IF_1
0x40002c9	      0x488345b801	               add qword [rbp - 0x48], 1	       122	base64.c	FUNCTION_2	WHILE_1
0x40002ce	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       121	base64.c	FUNCTION_2	WHILE_1
0x40002d2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       121	base64.c	FUNCTION_2	WHILE_1
0x40002d6	          0x4801d0	                            add rax, rdx	       121	base64.c	FUNCTION_2	WHILE_1
0x40002d9	           0xfb600	                   movzx eax, byte [rax]	       121	base64.c	FUNCTION_2	WHILE_1
0x40002dc	            0x3c3d	                            cmp al, 0x3d	       121	base64.c	FUNCTION_2	WHILE_1
0x40002de	            0x7412	                            je 0x40002f2	       121	base64.c	FUNCTION_2	WHILE_1
0x40002e0	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       121	base64.c	FUNCTION_2	WHILE_1
0x40002e4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       121	base64.c	FUNCTION_2	WHILE_1
0x40002e8	          0x4801d0	                            add rax, rdx	       121	base64.c	FUNCTION_2	WHILE_1
0x40002eb	           0xfb600	                   movzx eax, byte [rax]	       121	base64.c	FUNCTION_2	WHILE_1
0x40002ee	            0x84c0	                             test al, al	       121	base64.c	FUNCTION_2	WHILE_1
0x40002f0	            0x75d7	                           jne 0x40002c9	       121	base64.c	FUNCTION_2	WHILE_1
0x40002f2	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       125	base64.c	FUNCTION_2	IF_2
0x40002f6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       125	base64.c	FUNCTION_2	IF_2
0x40002fa	          0x4801d0	                            add rax, rdx	       125	base64.c	FUNCTION_2	IF_2
0x40002fd	           0xfb600	                   movzx eax, byte [rax]	       125	base64.c	FUNCTION_2	IF_2
0x4000300	            0x3c3d	                            cmp al, 0x3d	       125	base64.c	FUNCTION_2	IF_2
0x4000302	            0x7520	                           jne 0x4000324	       125	base64.c	FUNCTION_2	IF_2
0x4000304	      0x488345c001	               add qword [rbp - 0x40], 1	       126	base64.c	FUNCTION_2	IF_2
0x4000309	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       127	base64.c	FUNCTION_2	IF_2	IF_3
0x400030d	        0x488d5001	                      lea rdx, [rax + 1]	       127	base64.c	FUNCTION_2	IF_2	IF_3
0x4000311	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       127	base64.c	FUNCTION_2	IF_2	IF_3
0x4000315	          0x4801d0	                            add rax, rdx	       127	base64.c	FUNCTION_2	IF_2	IF_3
0x4000318	           0xfb600	                   movzx eax, byte [rax]	       127	base64.c	FUNCTION_2	IF_2	IF_3
0x400031b	            0x3c3d	                            cmp al, 0x3d	       127	base64.c	FUNCTION_2	IF_2	IF_3
0x400031d	            0x7505	                           jne 0x4000324	       127	base64.c	FUNCTION_2	IF_2	IF_3
0x400031f	      0x488345c001	               add qword [rbp - 0x40], 1	       128	base64.c	FUNCTION_2	IF_2	IF_3
0x4000324	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       132	base64.c	FUNCTION_2	IF_4
0x4000328	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       132	base64.c	FUNCTION_2	IF_4
0x400032c	          0x4801d0	                            add rax, rdx	       132	base64.c	FUNCTION_2	IF_4
0x400032f	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	       132	base64.c	FUNCTION_2	IF_4
0x4000333	            0x740a	                            je 0x400033f	       132	base64.c	FUNCTION_2	IF_4
0x4000335	      0xb83d000000	                           mov eax, 0x3d	       133	base64.c	FUNCTION_2	IF_4
0x400033a	      0xe9d5000000	                           jmp 0x4000414	       133	base64.c	FUNCTION_2	IF_4
0x400033f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       136	base64.c	FUNCTION_2
0x4000343	        0x48c1e802	                              shr rax, 2	       136	base64.c	FUNCTION_2
0x4000347	        0x488945e8	             mov qword [rbp - 0x18], rax	       136	base64.c	FUNCTION_2
0x400034b	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       139	base64.c	FUNCTION_2
0x400034f	          0x4889d0	                            mov rax, rdx	       139	base64.c	FUNCTION_2
0x4000352	          0x4801c0	                            add rax, rax	       139	base64.c	FUNCTION_2
0x4000355	          0x4801d0	                            add rax, rdx	       139	base64.c	FUNCTION_2
0x4000358	        0x482b45c0	             sub rax, qword [rbp - 0x40]	       139	base64.c	FUNCTION_2
0x400035c	        0x488945e0	             mov qword [rbp - 0x20], rax	       139	base64.c	FUNCTION_2
0x4000360	    0x488b05000000	            mov rax, qword [0x04000367] 	       142	base64.c	FUNCTION_2	CALL_2
0x4000367	          0x488b00	                    mov rax, qword [rax]	       142	base64.c	FUNCTION_2	CALL_2
0x400036a	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       142	base64.c	FUNCTION_2	CALL_2
0x400036e	        0x4883c201	                              add rdx, 1	       142	base64.c	FUNCTION_2	CALL_2
0x4000372	          0x4889d7	                            mov rdi, rdx	       142	base64.c	FUNCTION_2	CALL_2
0x4000375	            0xffd0	                                call rax	       142	base64.c	FUNCTION_2	CALL_2
0x4000377	        0x488945f0	             mov qword [rbp - 0x10], rax	       142	base64.c	FUNCTION_2	CALL_2
0x400037b	      0x48837df000	               cmp qword [rbp - 0x10], 0	       143	base64.c	FUNCTION_2	IF_5
0x4000380	            0x750a	                           jne 0x400038c	       143	base64.c	FUNCTION_2	IF_5
0x4000382	      0xb81b000000	                           mov eax, 0x1b	       144	base64.c	FUNCTION_2	IF_5
0x4000387	      0xe988000000	                           jmp 0x4000414	       144	base64.c	FUNCTION_2	IF_5
0x400038c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       146	base64.c	FUNCTION_2
0x4000390	        0x488945d0	             mov qword [rbp - 0x30], rax	       146	base64.c	FUNCTION_2
0x4000394	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       149	base64.c	FUNCTION_2	FOR_1
0x400039c	            0xeb4a	                           jmp 0x40003e8	       149	base64.c	FUNCTION_2	FOR_1
0x400039e	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       150	base64.c	FUNCTION_2	FOR_1	CALL_3
0x40003a2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       150	base64.c	FUNCTION_2	FOR_1	CALL_3
0x40003a6	          0x4889d6	                            mov rsi, rdx	       150	base64.c	FUNCTION_2	FOR_1	CALL_3
0x40003a9	          0x4889c7	                            mov rdi, rax	       150	base64.c	FUNCTION_2	FOR_1	CALL_3
0x40003ac	      0xe861fdffff	                  call sym.decodeQuantum	       150	base64.c	FUNCTION_2	FOR_1	CALL_3
0x40003b1	        0x488945f8	                mov qword [rbp - 8], rax	       150	base64.c	FUNCTION_2	FOR_1	CALL_3
0x40003b5	      0x48837df800	                  cmp qword [rbp - 8], 0	       151	base64.c	FUNCTION_2	FOR_1	IF_6
0x40003ba	            0x751a	                           jne 0x40003d6	       151	base64.c	FUNCTION_2	FOR_1	IF_6
0x40003bc	    0x488b05000000	            mov rax, qword [0x040003c3] 	       152	base64.c	FUNCTION_2	FOR_1	IF_6	CALL_4
0x40003c3	          0x488b00	                    mov rax, qword [rax]	       152	base64.c	FUNCTION_2	FOR_1	IF_6	CALL_4
0x40003c6	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       152	base64.c	FUNCTION_2	FOR_1	IF_6	CALL_4
0x40003ca	          0x4889d7	                            mov rdi, rdx	       152	base64.c	FUNCTION_2	FOR_1	IF_6	CALL_4
0x40003cd	            0xffd0	                                call rax	       152	base64.c	FUNCTION_2	FOR_1	IF_6	CALL_4
0x40003cf	      0xb83d000000	                           mov eax, 0x3d	       154	base64.c	FUNCTION_2	FOR_1	IF_6
0x40003d4	            0xeb3e	                           jmp 0x4000414	       154	base64.c	FUNCTION_2	FOR_1	IF_6
0x40003d6	        0x488b45f8	                mov rax, qword [rbp - 8]	       157	base64.c	FUNCTION_2	FOR_1
0x40003da	        0x480145d0	            add qword [rbp - 0x30], rax 	       157	base64.c	FUNCTION_2	FOR_1
0x40003de	      0x488345a804	               add qword [rbp - 0x58], 4	       158	base64.c	FUNCTION_2	FOR_1
0x40003e3	      0x488345c801	               add qword [rbp - 0x38], 1	       149	base64.c	FUNCTION_2	FOR_1
0x40003e8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       149	base64.c	FUNCTION_2	FOR_1
0x40003ec	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       149	base64.c	FUNCTION_2	FOR_1
0x40003f0	            0x72ac	                            jb 0x400039e	       149	base64.c	FUNCTION_2	FOR_1
0x40003f2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       162	base64.c	FUNCTION_2
0x40003f6	          0xc60000	                       mov byte [rax], 0	       162	base64.c	FUNCTION_2
0x40003f9	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       165	base64.c	FUNCTION_2
0x40003fd	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       165	base64.c	FUNCTION_2
0x4000401	          0x488910	                    mov qword [rax], rdx	       165	base64.c	FUNCTION_2
0x4000404	        0x488b4598	             mov rax, qword [rbp - 0x68]	       166	base64.c	FUNCTION_2
0x4000408	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       166	base64.c	FUNCTION_2
0x400040c	          0x488910	                    mov qword [rax], rdx	       166	base64.c	FUNCTION_2
0x400040f	      0xb800000000	                              mov eax, 0	       168	base64.c	FUNCTION_2
0x4000414	              0xc9	                                   leave	       169	base64.c	FUNCTION_2
0x4000415	              0xc3	                                     ret	       169	base64.c	FUNCTION_2
