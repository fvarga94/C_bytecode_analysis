Curl_ssl_data_pending	functions,0:ELSE,0:IF,0:SWITCH,0:FOR,0:DO,0:WHILE,0:CALL,1	14
0x4001641	              0x55	                                push rbp	       638	vtls.c	FUNCTION_28
0x4001642	          0x4889e5	                            mov rbp, rsp	       638	vtls.c	FUNCTION_28
0x4001645	        0x4883ec10	                           sub rsp, 0x10	       638	vtls.c	FUNCTION_28
0x4001649	        0x48897df8	                mov qword [rbp - 8], rdi	       638	vtls.c	FUNCTION_28
0x400164d	          0x8975f4	              mov dword [rbp - 0xc], esi	       638	vtls.c	FUNCTION_28
0x4001650	    0x488b05000000	            mov rax, qword [0x04001657] 	       639	vtls.c	FUNCTION_28	CALL_1
0x4001657	        0x488b4048	            mov rax, qword [rax + 0x48] 	       639	vtls.c	FUNCTION_28	CALL_1
0x400165b	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	       639	vtls.c	FUNCTION_28	CALL_1
0x400165e	        0x488b55f8	                mov rdx, qword [rbp - 8]	       639	vtls.c	FUNCTION_28	CALL_1
0x4001662	            0x89ce	                            mov esi, ecx	       639	vtls.c	FUNCTION_28	CALL_1
0x4001664	          0x4889d7	                            mov rdi, rdx	       639	vtls.c	FUNCTION_28	CALL_1
0x4001667	            0xffd0	                                call rax	       639	vtls.c	FUNCTION_28	CALL_1
0x4001669	              0xc9	                                   leave	       640	vtls.c	FUNCTION_28
0x400166a	              0xc3	                                     ret	       640	vtls.c	FUNCTION_28
Curl_ssl_getsessionid	functions,0:ELSE,1:IF,5:SWITCH,0:FOR,1:DO,0:WHILE,0:CALL,8	226
0x4000a83	              0x55	                                push rbp	       305	vtls.c	FUNCTION_13
0x4000a84	          0x4889e5	                            mov rbp, rsp	       305	vtls.c	FUNCTION_13
0x4000a87	        0x4883ec60	                           sub rsp, 0x60	       305	vtls.c	FUNCTION_13
0x4000a8b	        0x48897db8	             mov qword [rbp - 0x48], rdi	       305	vtls.c	FUNCTION_13
0x4000a8f	        0x488975b0	             mov qword [rbp - 0x50], rsi	       305	vtls.c	FUNCTION_13
0x4000a93	        0x488955a8	             mov qword [rbp - 0x58], rdx	       305	vtls.c	FUNCTION_13
0x4000a97	          0x894da4	             mov dword [rbp - 0x5c], ecx	       305	vtls.c	FUNCTION_13
0x4000a9a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       307	vtls.c	FUNCTION_13
0x4000a9e	          0x488b00	                    mov rax, qword [rax]	       307	vtls.c	FUNCTION_13
0x4000aa1	        0x488945e0	             mov qword [rbp - 0x20], rax	       307	vtls.c	FUNCTION_13
0x4000aa5	        0xc645ca01	                mov byte [rbp - 0x36], 1	       310	vtls.c	FUNCTION_13
0x4000aa9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       312	vtls.c	FUNCTION_13	CALL_1
0x4000aad	    0x8b8078010000	           mov eax, dword [rax + 0x178] 	       312	vtls.c	FUNCTION_13	CALL_1
0x4000ab3	          0x83f802	                              cmp eax, 2	       312	vtls.c	FUNCTION_13	CALL_1
0x4000ab6	            0x751f	                           jne 0x4000ad7	       312	vtls.c	FUNCTION_13	CALL_1
0x4000ab8	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       312	vtls.c	FUNCTION_13	CALL_1
0x4000abc	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       312	vtls.c	FUNCTION_13	CALL_1
0x4000abf	            0x4898	                                    cdqe	       312	vtls.c	FUNCTION_13	CALL_1
0x4000ac1	     0xfb68402b903	    movzx eax, byte [rdx + rax + 0x3b9] 	       312	vtls.c	FUNCTION_13	CALL_1
0x4000ac9	          0x83f001	                              xor eax, 1	       312	vtls.c	FUNCTION_13	CALL_1
0x4000acc	            0x84c0	                             test al, al	       312	vtls.c	FUNCTION_13	CALL_1
0x4000ace	            0x7407	                            je 0x4000ad7	       312	vtls.c	FUNCTION_13	CALL_1
0x4000ad0	      0xb801000000	                              mov eax, 1	       312	vtls.c	FUNCTION_13	CALL_1
0x4000ad5	            0xeb05	                           jmp 0x4000adc	       312	vtls.c	FUNCTION_13	CALL_1
0x4000ad7	      0xb800000000	                              mov eax, 0	       312	vtls.c	FUNCTION_13	CALL_1
0x4000adc	          0x8845cb	               mov byte [rbp - 0x35], al	       312	vtls.c	FUNCTION_13	CALL_1
0x4000adf	        0x8065cb01	                and byte [rbp - 0x35], 1	       312	vtls.c	FUNCTION_13	CALL_1
0x4000ae3	        0x807dcb00	                cmp byte [rbp - 0x35], 0	       314	vtls.c	FUNCTION_13
0x4000ae7	            0x740c	                            je 0x4000af5	       314	vtls.c	FUNCTION_13
0x4000ae9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       314	vtls.c	FUNCTION_13
0x4000aed	    0x480548030000	                          add rax, 0x348	       314	vtls.c	FUNCTION_13
0x4000af3	            0xeb0a	                           jmp 0x4000aff	       314	vtls.c	FUNCTION_13
0x4000af5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       314	vtls.c	FUNCTION_13
0x4000af9	    0x4805f8020000	                          add rax, 0x2f8	       314	vtls.c	FUNCTION_13
0x4000aff	        0x488945e8	             mov qword [rbp - 0x18], rax	       313	vtls.c	FUNCTION_13
0x4000b03	        0x807dcb00	                cmp byte [rbp - 0x35], 0	       316	vtls.c	FUNCTION_13
0x4000b07	            0x740d	                            je 0x4000b16	       316	vtls.c	FUNCTION_13
0x4000b09	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       316	vtls.c	FUNCTION_13
0x4000b0d	    0x488b80600100	           mov rax, qword [rax + 0x160] 	       316	vtls.c	FUNCTION_13
0x4000b14	            0xeb0b	                           jmp 0x4000b21	       316	vtls.c	FUNCTION_13
0x4000b16	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       316	vtls.c	FUNCTION_13
0x4000b1a	    0x488b80d80000	            mov rax, qword [rax + 0xd8] 	       316	vtls.c	FUNCTION_13
0x4000b21	        0x488945f0	             mov qword [rbp - 0x10], rax	       316	vtls.c	FUNCTION_13
0x4000b25	        0x807dcb00	                cmp byte [rbp - 0x35], 0	       318	vtls.c	FUNCTION_13
0x4000b29	            0x740d	                            je 0x4000b38	       318	vtls.c	FUNCTION_13
0x4000b2b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       318	vtls.c	FUNCTION_13
0x4000b2f	    0x488b80900100	           mov rax, qword [rax + 0x190] 	       318	vtls.c	FUNCTION_13
0x4000b36	            0xeb0a	                           jmp 0x4000b42	       318	vtls.c	FUNCTION_13
0x4000b38	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       318	vtls.c	FUNCTION_13
0x4000b3c	    0x8b8098010000	           mov eax, dword [rax + 0x198] 	       318	vtls.c	FUNCTION_13
0x4000b42	          0x8945cc	             mov dword [rbp - 0x34], eax	       318	vtls.c	FUNCTION_13
0x4000b45	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       319	vtls.c	FUNCTION_13
0x4000b49	    0x48c700000000	                      mov qword [rax], 0	       319	vtls.c	FUNCTION_13
0x4000b50	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       323	vtls.c	FUNCTION_13	IF_1	CALL_4
0x4000b54	    0x8b8078010000	           mov eax, dword [rax + 0x178] 	       323	vtls.c	FUNCTION_13	IF_1	CALL_4
0x4000b5a	          0x83f802	                              cmp eax, 2	       323	vtls.c	FUNCTION_13	IF_1	CALL_4
0x4000b5d	            0x7547	                           jne 0x4000ba6	       323	vtls.c	FUNCTION_13	IF_1	CALL_4
0x4000b5f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       323	vtls.c	FUNCTION_13	IF_1	CALL_4
0x4000b63	    0x8b805c020000	           mov eax, dword [rax + 0x25c] 	       323	vtls.c	FUNCTION_13	IF_1	CALL_4
0x4000b69	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       323	vtls.c	FUNCTION_13	IF_1	CALL_4
0x4000b6c	           0xf95c0	                                setne al	       323	vtls.c	FUNCTION_13	IF_1	CALL_4
0x4000b6f	           0xfb6c0	                           movzx eax, al	       323	vtls.c	FUNCTION_13	IF_1	CALL_4
0x4000b72	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       323	vtls.c	FUNCTION_13	IF_1	CALL_4
0x4000b76	          0x4863d0	                         movsxd rdx, eax	       323	vtls.c	FUNCTION_13	IF_1	CALL_4
0x4000b79	          0x4889d0	                            mov rax, rdx	       323	vtls.c	FUNCTION_13	IF_1	CALL_4
0x4000b7c	          0x4801c0	                            add rax, rax	       323	vtls.c	FUNCTION_13	IF_1	CALL_4
0x4000b7f	          0x4801d0	                            add rax, rdx	       323	vtls.c	FUNCTION_13	IF_1	CALL_4
0x4000b82	        0x48c1e003	                              shl rax, 3	       323	vtls.c	FUNCTION_13	IF_1	CALL_4
0x4000b86	          0x4801c8	                            add rax, rcx	       323	vtls.c	FUNCTION_13	IF_1	CALL_4
0x4000b89	    0x4805c4020000	                          add rax, 0x2c4	       323	vtls.c	FUNCTION_13	IF_1	CALL_4
0x4000b8f	            0x8b00	                    mov eax, dword [rax]	       323	vtls.c	FUNCTION_13	IF_1	CALL_4
0x4000b91	          0x83f802	                              cmp eax, 2	       323	vtls.c	FUNCTION_13	IF_1	CALL_4
0x4000b94	            0x7410	                            je 0x4000ba6	       323	vtls.c	FUNCTION_13	IF_1	CALL_4
0x4000b96	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       323	vtls.c	FUNCTION_13	IF_1	CALL_4
0x4000b9a	     0xfb680c30600	          movzx eax, byte [rax + 0x6c3] 	       323	vtls.c	FUNCTION_13	IF_1	CALL_4
0x4000ba1	          0x83f001	                              xor eax, 1	       323	vtls.c	FUNCTION_13	IF_1	CALL_4
0x4000ba4	            0xeb0e	                           jmp 0x4000bb4	       323	vtls.c	FUNCTION_13	IF_1	CALL_4
0x4000ba6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       323	vtls.c	FUNCTION_13	IF_1	CALL_4
0x4000baa	     0xfb680fb0500	          movzx eax, byte [rax + 0x5fb] 	       323	vtls.c	FUNCTION_13	IF_1	CALL_4
0x4000bb1	          0x83f001	                              xor eax, 1	       323	vtls.c	FUNCTION_13	IF_1	CALL_4
0x4000bb4	            0x84c0	                             test al, al	       323	vtls.c	FUNCTION_13	IF_1	CALL_4
0x4000bb6	            0x740a	                            je 0x4000bc2	       323	vtls.c	FUNCTION_13	IF_1	CALL_4
0x4000bb8	      0xb801000000	                              mov eax, 1	       325	vtls.c	FUNCTION_13	IF_1
0x4000bbd	      0xe927020000	                           jmp 0x4000de9	       325	vtls.c	FUNCTION_13	IF_1
0x4000bc2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       328	vtls.c	FUNCTION_13	IF_2
0x4000bc6	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	       328	vtls.c	FUNCTION_13	IF_2
0x4000bcd	          0x4885c0	                           test rax, rax	       328	vtls.c	FUNCTION_13	IF_2
0x4000bd0	            0x742b	                            je 0x4000bfd	       328	vtls.c	FUNCTION_13	IF_2
0x4000bd2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       328	vtls.c	FUNCTION_13	IF_2
0x4000bd6	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	       328	vtls.c	FUNCTION_13	IF_2
0x4000bdd	            0x8b00	                    mov eax, dword [rax]	       328	vtls.c	FUNCTION_13	IF_2
0x4000bdf	          0x83e010	                           and eax, 0x10	       328	vtls.c	FUNCTION_13	IF_2
0x4000be2	            0x85c0	                           test eax, eax	       328	vtls.c	FUNCTION_13	IF_2
0x4000be4	            0x7417	                            je 0x4000bfd	       328	vtls.c	FUNCTION_13	IF_2
0x4000be6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       329	vtls.c	FUNCTION_13	IF_2
0x4000bea	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	       329	vtls.c	FUNCTION_13	IF_2
0x4000bf1	    0x4805c0000000	                           add rax, 0xc0	       329	vtls.c	FUNCTION_13	IF_2
0x4000bf7	        0x488945d8	             mov qword [rbp - 0x28], rax	       329	vtls.c	FUNCTION_13	IF_2
0x4000bfb	            0xeb0e	                           jmp 0x4000c0b	       329	vtls.c	FUNCTION_13	IF_2
0x4000bfd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       331	vtls.c	FUNCTION_13	ELSE_1
0x4000c01	    0x4805584d0000	                         add rax, 0x4d58	       331	vtls.c	FUNCTION_13	ELSE_1
0x4000c07	        0x488945d8	             mov qword [rbp - 0x28], rax	       331	vtls.c	FUNCTION_13	ELSE_1
0x4000c0b	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       333	vtls.c	FUNCTION_13	ELSE_1	FOR_1
0x4000c13	      0xe9b8010000	                           jmp 0x4000dd0	       333	vtls.c	FUNCTION_13	ELSE_1	FOR_1
0x4000c18	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       334	vtls.c	FUNCTION_13	ELSE_1	FOR_1
0x4000c1c	    0x488b90504d00	          mov rdx, qword [rax + 0x4d50] 	       334	vtls.c	FUNCTION_13	ELSE_1	FOR_1
0x4000c23	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       334	vtls.c	FUNCTION_13	ELSE_1	FOR_1
0x4000c27	        0x48c1e003	                              shl rax, 3	       334	vtls.c	FUNCTION_13	ELSE_1	FOR_1
0x4000c2b	          0x4889c1	                            mov rcx, rax	       334	vtls.c	FUNCTION_13	ELSE_1	FOR_1
0x4000c2e	        0x48c1e104	                              shl rcx, 4	       334	vtls.c	FUNCTION_13	ELSE_1	FOR_1
0x4000c32	          0x4801c8	                            add rax, rcx	       334	vtls.c	FUNCTION_13	ELSE_1	FOR_1
0x4000c35	          0x4801d0	                            add rax, rdx	       334	vtls.c	FUNCTION_13	ELSE_1	FOR_1
0x4000c38	        0x488945f8	                mov qword [rbp - 8], rax	       334	vtls.c	FUNCTION_13	ELSE_1	FOR_1
0x4000c3c	        0x488b45f8	                mov rax, qword [rbp - 8]	       335	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_3
0x4000c40	        0x488b4018	            mov rax, qword [rax + 0x18] 	       335	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_3
0x4000c44	          0x4885c0	                           test rax, rax	       335	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_3
0x4000c47	     0xf847d010000	                            je 0x4000dca	       335	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_3
0x4000c4d	        0x488b45f8	                mov rax, qword [rbp - 8]	       338	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4	CALL_5
0x4000c51	          0x488b10	                    mov rdx, qword [rax]	       338	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4	CALL_5
0x4000c54	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       338	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4	CALL_5
0x4000c58	          0x4889d6	                            mov rsi, rdx	       338	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4	CALL_5
0x4000c5b	          0x4889c7	                            mov rdi, rax	       338	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4	CALL_5
0x4000c5e	      0xe800000000	                          call 0x4000c63	       338	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4	CALL_5
0x4000c63	            0x85c0	                           test eax, eax	       338	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4	CALL_5
0x4000c65	     0xf8460010000	                            je 0x4000dcb	       338	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4	CALL_5
0x4000c6b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       339	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000c6f	     0xfb6809b0300	          movzx eax, byte [rax + 0x39b] 	       339	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000c76	          0x83f001	                              xor eax, 1	       339	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000c79	            0x84c0	                             test al, al	       338	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4	CALL_5
0x4000c7b	            0x740d	                            je 0x4000c8a	       338	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4	CALL_5
0x4000c7d	        0x488b45f8	                mov rax, qword [rbp - 8]	       339	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000c81	        0x488b4008	                mov rax, qword [rax + 8]	       339	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000c85	          0x4885c0	                           test rax, rax	       339	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000c88	            0x744a	                            je 0x4000cd4	       339	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000c8a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       340	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000c8e	     0xfb6809b0300	          movzx eax, byte [rax + 0x39b] 	       340	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000c95	            0x84c0	                             test al, al	       339	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000c97	     0xf842e010000	                            je 0x4000dcb	       339	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000c9d	        0x488b45f8	                mov rax, qword [rbp - 8]	       340	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000ca1	        0x488b4008	                mov rax, qword [rax + 8]	       340	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000ca5	          0x4885c0	                           test rax, rax	       340	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000ca8	     0xf841d010000	                            je 0x4000dcb	       340	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000cae	        0x488b45f8	                mov rax, qword [rbp - 8]	       341	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4	CALL_6
0x4000cb2	        0x488b5008	                mov rdx, qword [rax + 8]	       341	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4	CALL_6
0x4000cb6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       341	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4	CALL_6
0x4000cba	    0x488b80000100	           mov rax, qword [rax + 0x100] 	       341	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4	CALL_6
0x4000cc1	          0x4889d6	                            mov rsi, rdx	       341	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4	CALL_6
0x4000cc4	          0x4889c7	                            mov rdi, rax	       341	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4	CALL_6
0x4000cc7	      0xe800000000	                          call 0x4000ccc	       341	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4	CALL_6
0x4000ccc	            0x85c0	                           test eax, eax	       340	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000cce	     0xf84f7000000	                            je 0x4000dcb	       340	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000cd4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       342	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000cd8	     0xfb6809c0300	          movzx eax, byte [rax + 0x39c] 	       342	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000cdf	          0x83f001	                              xor eax, 1	       342	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000ce2	            0x84c0	                             test al, al	       341	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4	CALL_6
0x4000ce4	            0x740c	                            je 0x4000cf2	       341	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4	CALL_6
0x4000ce6	        0x488b45f8	                mov rax, qword [rbp - 8]	       342	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000cea	          0x8b4034	            mov eax, dword [rax + 0x34] 	       342	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000ced	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       342	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000cf0	            0x743c	                            je 0x4000d2e	       342	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000cf2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       343	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000cf6	     0xfb6809c0300	          movzx eax, byte [rax + 0x39c] 	       343	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000cfd	            0x84c0	                             test al, al	       342	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000cff	     0xf84c6000000	                            je 0x4000dcb	       342	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000d05	        0x488b45f8	                mov rax, qword [rbp - 8]	       343	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000d09	          0x8b4034	            mov eax, dword [rax + 0x34] 	       343	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000d0c	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       343	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000d0f	     0xf84b6000000	                            je 0x4000dcb	       343	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000d15	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       344	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000d19	    0x8b909c010000	           mov edx, dword [rax + 0x19c] 	       344	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000d1f	        0x488b45f8	                mov rax, qword [rbp - 8]	       344	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000d23	          0x8b4034	            mov eax, dword [rax + 0x34] 	       344	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000d26	            0x39c2	                            cmp edx, eax	       343	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000d28	     0xf859d000000	                           jne 0x4000dcb	       343	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000d2e	        0x488b45f8	                mov rax, qword [rbp - 8]	       345	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000d32	          0x8b4030	            mov eax, dword [rax + 0x30] 	       345	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000d35	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	       344	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000d38	     0xf858d000000	                           jne 0x4000dcb	       344	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000d3e	        0x488b45f8	                mov rax, qword [rbp - 8]	       346	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4	CALL_7
0x4000d42	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       346	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4	CALL_7
0x4000d46	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       346	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4	CALL_7
0x4000d4a	    0x488b80e00300	           mov rax, qword [rax + 0x3e0] 	       346	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4	CALL_7
0x4000d51	          0x488b00	                    mov rax, qword [rax]	       346	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4	CALL_7
0x4000d54	          0x4889d6	                            mov rsi, rdx	       346	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4	CALL_7
0x4000d57	          0x4889c7	                            mov rdi, rax	       346	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4	CALL_7
0x4000d5a	      0xe800000000	                          call 0x4000d5f	       346	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4	CALL_7
0x4000d5f	            0x85c0	                           test eax, eax	       345	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000d61	            0x7468	                            je 0x4000dcb	       345	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000d63	        0x488b45f8	                mov rax, qword [rbp - 8]	       347	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4	CALL_8
0x4000d67	        0x488d5038	                   lea rdx, [rax + 0x38]	       347	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4	CALL_8
0x4000d6b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       347	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4	CALL_8
0x4000d6f	          0x4889d6	                            mov rsi, rdx	       347	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4	CALL_8
0x4000d72	          0x4889c7	                            mov rdi, rax	       347	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4	CALL_8
0x4000d75	      0xe800000000	                          call 0x4000d7a	       347	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4	CALL_8
0x4000d7a	            0x84c0	                             test al, al	       346	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4	CALL_7
0x4000d7c	            0x744d	                            je 0x4000dcb	       346	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4	CALL_7
0x4000d7e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       349	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000d82	          0x488b00	                    mov rax, qword [rax]	       349	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000d85	        0x488d5001	                      lea rdx, [rax + 1]	       349	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000d89	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       349	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000d8d	          0x488910	                    mov qword [rax], rdx	       349	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000d90	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       350	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000d94	          0x488b10	                    mov rdx, qword [rax]	       350	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000d97	        0x488b45f8	                mov rax, qword [rbp - 8]	       350	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000d9b	        0x48895028	             mov qword [rax + 0x28], rdx	       350	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000d9f	        0x488b45f8	                mov rax, qword [rbp - 8]	       351	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000da3	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       351	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000da7	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       351	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000dab	          0x488910	                    mov qword [rax], rdx	       351	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000dae	      0x48837da800	               cmp qword [rbp - 0x58], 0	       352	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4	IF_5
0x4000db3	            0x740f	                            je 0x4000dc4	       352	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4	IF_5
0x4000db5	        0x488b45f8	                mov rax, qword [rbp - 8]	       353	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4	IF_5
0x4000db9	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       353	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4	IF_5
0x4000dbd	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       353	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4	IF_5
0x4000dc1	          0x488910	                    mov qword [rax], rdx	       353	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4	IF_5
0x4000dc4	        0xc645ca00	                mov byte [rbp - 0x36], 0	       354	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000dc8	            0xeb1b	                           jmp 0x4000de5	       355	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_4
0x4000dca	              0x90	                                     nop	       337	vtls.c	FUNCTION_13	ELSE_1	FOR_1	IF_3
0x4000dcb	      0x488345d001	               add qword [rbp - 0x30], 1	       333	vtls.c	FUNCTION_13	ELSE_1	FOR_1
0x4000dd0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       333	vtls.c	FUNCTION_13	ELSE_1	FOR_1
0x4000dd4	    0x488b80780700	           mov rax, qword [rax + 0x778] 	       333	vtls.c	FUNCTION_13	ELSE_1	FOR_1
0x4000ddb	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	       333	vtls.c	FUNCTION_13	ELSE_1	FOR_1
0x4000ddf	     0xf8733feffff	                            ja 0x4000c18	       333	vtls.c	FUNCTION_13	ELSE_1	FOR_1
0x4000de5	         0xfb645ca	            movzx eax, byte [rbp - 0x36]	       359	vtls.c	FUNCTION_13
0x4000de9	              0xc9	                                   leave	       360	vtls.c	FUNCTION_13
0x4000dea	              0xc3	                                     ret	       360	vtls.c	FUNCTION_13
Curl_ssl_connect	functions,0:ELSE,0:IF,4:SWITCH,0:FOR,0:DO,0:WHILE,0:CALL,4	68
0x4000828	              0x55	                                push rbp	       232	vtls.c	FUNCTION_9
0x4000829	          0x4889e5	                            mov rbp, rsp	       232	vtls.c	FUNCTION_9
0x400082c	        0x4883ec20	                           sub rsp, 0x20	       232	vtls.c	FUNCTION_9
0x4000830	        0x48897de8	             mov qword [rbp - 0x18], rdi	       232	vtls.c	FUNCTION_9
0x4000834	          0x8975e4	             mov dword [rbp - 0x1c], esi	       232	vtls.c	FUNCTION_9
0x4000837	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       235	vtls.c	FUNCTION_9	IF_1
0x400083b	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       235	vtls.c	FUNCTION_9	IF_1
0x400083e	            0x4898	                                    cdqe	       235	vtls.c	FUNCTION_9	IF_1
0x4000840	     0xfb68402b903	    movzx eax, byte [rdx + rax + 0x3b9] 	       235	vtls.c	FUNCTION_9	IF_1
0x4000848	            0x84c0	                             test al, al	       235	vtls.c	FUNCTION_9	IF_1
0x400084a	            0x7422	                            je 0x400086e	       235	vtls.c	FUNCTION_9	IF_1
0x400084c	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       236	vtls.c	FUNCTION_9	IF_1	CALL_1
0x400084f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       236	vtls.c	FUNCTION_9	IF_1	CALL_1
0x4000853	            0x89d6	                            mov esi, edx	       236	vtls.c	FUNCTION_9	IF_1	CALL_1
0x4000855	          0x4889c7	                            mov rdi, rax	       236	vtls.c	FUNCTION_9	IF_1	CALL_1
0x4000858	      0xe84cfeffff	         call sym.ssl_connect_init_proxy	       236	vtls.c	FUNCTION_9	IF_1	CALL_1
0x400085d	          0x8945fc	                mov dword [rbp - 4], eax	       236	vtls.c	FUNCTION_9	IF_1	CALL_1
0x4000860	        0x837dfc00	                  cmp dword [rbp - 4], 0	       237	vtls.c	FUNCTION_9	IF_1	IF_2
0x4000864	            0x7408	                            je 0x400086e	       237	vtls.c	FUNCTION_9	IF_1	IF_2
0x4000866	          0x8b45fc	                mov eax, dword [rbp - 4]	       238	vtls.c	FUNCTION_9	IF_1	IF_2
0x4000869	      0xe9a2000000	                           jmp 0x4000910	       238	vtls.c	FUNCTION_9	IF_1	IF_2
0x400086e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       241	vtls.c	FUNCTION_9	IF_3	CALL_2
0x4000872	          0x488b00	                    mov rax, qword [rax]	       241	vtls.c	FUNCTION_9	IF_3	CALL_2
0x4000875	          0x4889c7	                            mov rdi, rax	       241	vtls.c	FUNCTION_9	IF_3	CALL_2
0x4000878	      0xe890fdffff	                call sym.ssl_prefs_check	       241	vtls.c	FUNCTION_9	IF_3	CALL_2
0x400087d	          0x83f001	                              xor eax, 1	       241	vtls.c	FUNCTION_9	IF_3	CALL_2
0x4000880	            0x84c0	                             test al, al	       241	vtls.c	FUNCTION_9	IF_3	CALL_2
0x4000882	            0x740a	                            je 0x400088e	       241	vtls.c	FUNCTION_9	IF_3	CALL_2
0x4000884	      0xb823000000	                           mov eax, 0x23	       242	vtls.c	FUNCTION_9	IF_3
0x4000889	      0xe982000000	                           jmp 0x4000910	       242	vtls.c	FUNCTION_9	IF_3
0x400088e	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       245	vtls.c	FUNCTION_9
0x4000892	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       245	vtls.c	FUNCTION_9
0x4000895	          0x4863d0	                         movsxd rdx, eax	       245	vtls.c	FUNCTION_9
0x4000898	          0x4889d0	                            mov rax, rdx	       245	vtls.c	FUNCTION_9
0x400089b	          0x4801c0	                            add rax, rax	       245	vtls.c	FUNCTION_9
0x400089e	          0x4801d0	                            add rax, rdx	       245	vtls.c	FUNCTION_9
0x40008a1	        0x48c1e003	                              shl rax, 3	       245	vtls.c	FUNCTION_9
0x40008a5	          0x4801c8	                            add rax, rcx	       245	vtls.c	FUNCTION_9
0x40008a8	    0x480590020000	                          add rax, 0x290	       245	vtls.c	FUNCTION_9
0x40008ae	          0xc60001	                       mov byte [rax], 1	       245	vtls.c	FUNCTION_9
0x40008b1	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       246	vtls.c	FUNCTION_9
0x40008b5	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       246	vtls.c	FUNCTION_9
0x40008b8	          0x4863d0	                         movsxd rdx, eax	       246	vtls.c	FUNCTION_9
0x40008bb	          0x4889d0	                            mov rax, rdx	       246	vtls.c	FUNCTION_9
0x40008be	          0x4801c0	                            add rax, rax	       246	vtls.c	FUNCTION_9
0x40008c1	          0x4801d0	                            add rax, rdx	       246	vtls.c	FUNCTION_9
0x40008c4	        0x48c1e003	                              shl rax, 3	       246	vtls.c	FUNCTION_9
0x40008c8	          0x4801c8	                            add rax, rcx	       246	vtls.c	FUNCTION_9
0x40008cb	    0x480594020000	                          add rax, 0x294	       246	vtls.c	FUNCTION_9
0x40008d1	    0xc70001000000	                      mov dword [rax], 1	       246	vtls.c	FUNCTION_9
0x40008d7	    0x488b05000000	            mov rax, qword [0x040008de] 	       248	vtls.c	FUNCTION_9	CALL_3
0x40008de	        0x488b4060	            mov rax, qword [rax + 0x60] 	       248	vtls.c	FUNCTION_9	CALL_3
0x40008e2	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	       248	vtls.c	FUNCTION_9	CALL_3
0x40008e5	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       248	vtls.c	FUNCTION_9	CALL_3
0x40008e9	            0x89ce	                            mov esi, ecx	       248	vtls.c	FUNCTION_9	CALL_3
0x40008eb	          0x4889d7	                            mov rdi, rdx	       248	vtls.c	FUNCTION_9	CALL_3
0x40008ee	            0xffd0	                                call rax	       248	vtls.c	FUNCTION_9	CALL_3
0x40008f0	          0x8945fc	                mov dword [rbp - 4], eax	       248	vtls.c	FUNCTION_9	CALL_3
0x40008f3	        0x837dfc00	                  cmp dword [rbp - 4], 0	       250	vtls.c	FUNCTION_9	IF_4
0x40008f7	            0x7514	                           jne 0x400090d	       250	vtls.c	FUNCTION_9	IF_4
0x40008f9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       251	vtls.c	FUNCTION_9	CALL_4
0x40008fd	          0x488b00	                    mov rax, qword [rax]	       251	vtls.c	FUNCTION_9	CALL_4
0x4000900	      0xbe05000000	                              mov esi, 5	       251	vtls.c	FUNCTION_9	CALL_4
0x4000905	          0x4889c7	                            mov rdi, rax	       251	vtls.c	FUNCTION_9	CALL_4
0x4000908	      0xe800000000	                          call 0x400090d	       251	vtls.c	FUNCTION_9	CALL_4
0x400090d	          0x8b45fc	                mov eax, dword [rbp - 4]	       253	vtls.c	FUNCTION_9
0x4000910	              0xc9	                                   leave	       254	vtls.c	FUNCTION_9
0x4000911	              0xc3	                                     ret	       254	vtls.c	FUNCTION_9
Curl_none_session_free	functions,0:ELSE,0:IF,0:SWITCH,0:FOR,0:DO,0:WHILE,0:CALL,0	6
0x40020ca	              0x55	                                push rbp	      1032	vtls.c	FUNCTION_46
0x40020cb	          0x4889e5	                            mov rbp, rsp	      1032	vtls.c	FUNCTION_46
0x40020ce	        0x48897df8	                mov qword [rbp - 8], rdi	      1032	vtls.c	FUNCTION_46
0x40020d2	              0x90	                                     nop	      1034	vtls.c	FUNCTION_46
0x40020d3	              0x5d	                                 pop rbp	      1034	vtls.c	FUNCTION_46
0x40020d4	              0xc3	                                     ret	      1034	vtls.c	FUNCTION_46
Curl_multissl_init	functions,0:ELSE,0:IF,1:SWITCH,0:FOR,0:DO,0:WHILE,0:CALL,2	13
0x40021a2	              0x55	                                push rbp	      1104	vtls.c	FUNCTION_55
0x40021a3	          0x4889e5	                            mov rbp, rsp	      1104	vtls.c	FUNCTION_55
0x40021a6	      0xbf00000000	                              mov edi, 0	      1105	vtls.c	FUNCTION_55	IF_1	CALL_1
0x40021ab	      0xe8e7020000	                  call sym.multissl_init	      1105	vtls.c	FUNCTION_55	IF_1	CALL_1
0x40021b0	            0x85c0	                           test eax, eax	      1105	vtls.c	FUNCTION_55	IF_1	CALL_1
0x40021b2	            0x7407	                            je 0x40021bb	      1105	vtls.c	FUNCTION_55	IF_1	CALL_1
0x40021b4	      0xb801000000	                              mov eax, 1	      1106	vtls.c	FUNCTION_55	IF_1
0x40021b9	            0xeb0d	                           jmp 0x40021c8	      1106	vtls.c	FUNCTION_55	IF_1
0x40021bb	    0x488b05000000	            mov rax, qword [0x040021c2] 	      1107	vtls.c	FUNCTION_55	CALL_2
0x40021c2	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1107	vtls.c	FUNCTION_55	CALL_2
0x40021c6	            0xffd0	                                call rax	      1107	vtls.c	FUNCTION_55	CALL_2
0x40021c8	              0x5d	                                 pop rbp	      1108	vtls.c	FUNCTION_55
0x40021c9	              0xc3	                                     ret	      1108	vtls.c	FUNCTION_55
Curl_ssl_shutdown	functions,0:ELSE,0:IF,1:SWITCH,0:FOR,0:DO,0:WHILE,0:CALL,1	51
0x400143b	              0x55	                                push rbp	       556	vtls.c	FUNCTION_21
0x400143c	          0x4889e5	                            mov rbp, rsp	       556	vtls.c	FUNCTION_21
0x400143f	        0x4883ec10	                           sub rsp, 0x10	       556	vtls.c	FUNCTION_21
0x4001443	        0x48897df8	                mov qword [rbp - 8], rdi	       556	vtls.c	FUNCTION_21
0x4001447	          0x8975f4	              mov dword [rbp - 0xc], esi	       556	vtls.c	FUNCTION_21
0x400144a	    0x488b05000000	            mov rax, qword [0x04001451] 	       557	vtls.c	FUNCTION_21	IF_1	CALL_1
0x4001451	        0x488b4040	            mov rax, qword [rax + 0x40] 	       557	vtls.c	FUNCTION_21	IF_1	CALL_1
0x4001455	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	       557	vtls.c	FUNCTION_21	IF_1	CALL_1
0x4001458	        0x488b55f8	                mov rdx, qword [rbp - 8]	       557	vtls.c	FUNCTION_21	IF_1	CALL_1
0x400145c	            0x89ce	                            mov esi, ecx	       557	vtls.c	FUNCTION_21	IF_1	CALL_1
0x400145e	          0x4889d7	                            mov rdi, rdx	       557	vtls.c	FUNCTION_21	IF_1	CALL_1
0x4001461	            0xffd0	                                call rax	       557	vtls.c	FUNCTION_21	IF_1	CALL_1
0x4001463	            0x85c0	                           test eax, eax	       557	vtls.c	FUNCTION_21	IF_1	CALL_1
0x4001465	            0x740a	                            je 0x4001471	       557	vtls.c	FUNCTION_21	IF_1	CALL_1
0x4001467	      0xb850000000	                           mov eax, 0x50	       558	vtls.c	FUNCTION_21	IF_1
0x400146c	      0xe980000000	                           jmp 0x40014f1	       558	vtls.c	FUNCTION_21	IF_1
0x4001471	        0x488b4df8	                mov rcx, qword [rbp - 8]	       560	vtls.c	FUNCTION_21
0x4001475	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       560	vtls.c	FUNCTION_21
0x4001478	          0x4863d0	                         movsxd rdx, eax	       560	vtls.c	FUNCTION_21
0x400147b	          0x4889d0	                            mov rax, rdx	       560	vtls.c	FUNCTION_21
0x400147e	          0x4801c0	                            add rax, rax	       560	vtls.c	FUNCTION_21
0x4001481	          0x4801d0	                            add rax, rdx	       560	vtls.c	FUNCTION_21
0x4001484	        0x48c1e003	                              shl rax, 3	       560	vtls.c	FUNCTION_21
0x4001488	          0x4801c8	                            add rax, rcx	       560	vtls.c	FUNCTION_21
0x400148b	    0x480590020000	                          add rax, 0x290	       560	vtls.c	FUNCTION_21
0x4001491	          0xc60000	                       mov byte [rax], 0	       560	vtls.c	FUNCTION_21
0x4001494	        0x488b4df8	                mov rcx, qword [rbp - 8]	       561	vtls.c	FUNCTION_21
0x4001498	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       561	vtls.c	FUNCTION_21
0x400149b	          0x4863d0	                         movsxd rdx, eax	       561	vtls.c	FUNCTION_21
0x400149e	          0x4889d0	                            mov rax, rdx	       561	vtls.c	FUNCTION_21
0x40014a1	          0x4801c0	                            add rax, rax	       561	vtls.c	FUNCTION_21
0x40014a4	          0x4801d0	                            add rax, rdx	       561	vtls.c	FUNCTION_21
0x40014a7	        0x48c1e003	                              shl rax, 3	       561	vtls.c	FUNCTION_21
0x40014ab	          0x4801c8	                            add rax, rcx	       561	vtls.c	FUNCTION_21
0x40014ae	    0x480594020000	                          add rax, 0x294	       561	vtls.c	FUNCTION_21
0x40014b4	    0xc70000000000	                      mov dword [rax], 0	       561	vtls.c	FUNCTION_21
0x40014ba	        0x488b45f8	                mov rax, qword [rbp - 8]	       563	vtls.c	FUNCTION_21
0x40014be	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       563	vtls.c	FUNCTION_21
0x40014c1	          0x4863d2	                         movsxd rdx, edx	       563	vtls.c	FUNCTION_21
0x40014c4	        0x4883c24e	                           add rdx, 0x4e	       563	vtls.c	FUNCTION_21
0x40014c8	    0x488b0d000000	            mov rcx, qword [0x040014cf] 	       563	vtls.c	FUNCTION_21
0x40014cf	        0x48890cd0	            mov qword [rax + rdx*8], rcx	       563	vtls.c	FUNCTION_21
0x40014d3	        0x488b45f8	                mov rax, qword [rbp - 8]	       564	vtls.c	FUNCTION_21
0x40014d7	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       564	vtls.c	FUNCTION_21
0x40014da	          0x4863d2	                         movsxd rdx, edx	       564	vtls.c	FUNCTION_21
0x40014dd	        0x4883c250	                           add rdx, 0x50	       564	vtls.c	FUNCTION_21
0x40014e1	    0x488b0d000000	            mov rcx, qword [0x040014e8] 	       564	vtls.c	FUNCTION_21
0x40014e8	        0x48890cd0	            mov qword [rax + rdx*8], rcx	       564	vtls.c	FUNCTION_21
0x40014ec	      0xb800000000	                              mov eax, 0	       566	vtls.c	FUNCTION_21
0x40014f1	              0xc9	                                   leave	       567	vtls.c	FUNCTION_21
0x40014f2	              0xc3	                                     ret	       567	vtls.c	FUNCTION_21
Curl_ssl_check_cxn	functions,0:ELSE,0:IF,0:SWITCH,0:FOR,0:DO,0:WHILE,0:CALL,1	11
0x400161f	              0x55	                                push rbp	       632	vtls.c	FUNCTION_27
0x4001620	          0x4889e5	                            mov rbp, rsp	       632	vtls.c	FUNCTION_27
0x4001623	        0x4883ec10	                           sub rsp, 0x10	       632	vtls.c	FUNCTION_27
0x4001627	        0x48897df8	                mov qword [rbp - 8], rdi	       632	vtls.c	FUNCTION_27
0x400162b	    0x488b05000000	            mov rax, qword [0x04001632] 	       633	vtls.c	FUNCTION_27	CALL_1
0x4001632	        0x488b4038	            mov rax, qword [rax + 0x38] 	       633	vtls.c	FUNCTION_27	CALL_1
0x4001636	        0x488b55f8	                mov rdx, qword [rbp - 8]	       633	vtls.c	FUNCTION_27	CALL_1
0x400163a	          0x4889d7	                            mov rdi, rdx	       633	vtls.c	FUNCTION_27	CALL_1
0x400163d	            0xffd0	                                call rax	       633	vtls.c	FUNCTION_27	CALL_1
0x400163f	              0xc9	                                   leave	       634	vtls.c	FUNCTION_27
0x4001640	              0xc3	                                     ret	       634	vtls.c	FUNCTION_27
Curl_ssl_false_start	functions,0:ELSE,0:IF,0:SWITCH,0:FOR,0:DO,0:WHILE,0:CALL,1	7
0x4002047	              0x55	                                push rbp	       978	vtls.c	FUNCTION_38
0x4002048	          0x4889e5	                            mov rbp, rsp	       978	vtls.c	FUNCTION_38
0x400204b	    0x488b05000000	            mov rax, qword [0x04002052] 	       979	vtls.c	FUNCTION_38	CALL_1
0x4002052	    0x488b80a80000	            mov rax, qword [rax + 0xa8] 	       979	vtls.c	FUNCTION_38	CALL_1
0x4002059	            0xffd0	                                call rax	       979	vtls.c	FUNCTION_38	CALL_1
0x400205b	              0x5d	                                 pop rbp	       980	vtls.c	FUNCTION_38
0x400205c	              0xc3	                                     ret	       980	vtls.c	FUNCTION_38
ssl_connect_init_proxy	functions,0:ELSE,0:IF,2:SWITCH,0:FOR,0:DO,0:WHILE,0:CALL,3	105
0x40006a9	              0x55	                                push rbp	       208	vtls.c	FUNCTION_8
0x40006aa	          0x4889e5	                            mov rbp, rsp	       208	vtls.c	FUNCTION_8
0x40006ad	        0x4883ec20	                           sub rsp, 0x20	       208	vtls.c	FUNCTION_8
0x40006b1	        0x48897de8	             mov qword [rbp - 0x18], rdi	       208	vtls.c	FUNCTION_8
0x40006b5	          0x8975e4	             mov dword [rbp - 0x1c], esi	       208	vtls.c	FUNCTION_8
0x40006b8	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       210	vtls.c	FUNCTION_8	IF_1
0x40006bc	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       210	vtls.c	FUNCTION_8	IF_1
0x40006bf	          0x4863d0	                         movsxd rdx, eax	       210	vtls.c	FUNCTION_8	IF_1
0x40006c2	          0x4889d0	                            mov rax, rdx	       210	vtls.c	FUNCTION_8	IF_1
0x40006c5	          0x4801c0	                            add rax, rax	       210	vtls.c	FUNCTION_8	IF_1
0x40006c8	          0x4801d0	                            add rax, rdx	       210	vtls.c	FUNCTION_8	IF_1
0x40006cb	        0x48c1e003	                              shl rax, 3	       210	vtls.c	FUNCTION_8	IF_1
0x40006cf	          0x4801c8	                            add rax, rcx	       210	vtls.c	FUNCTION_8	IF_1
0x40006d2	    0x480594020000	                          add rax, 0x294	       210	vtls.c	FUNCTION_8	IF_1
0x40006d8	            0x8b00	                    mov eax, dword [rax]	       210	vtls.c	FUNCTION_8	IF_1
0x40006da	          0x83f802	                              cmp eax, 2	       210	vtls.c	FUNCTION_8	IF_1
0x40006dd	     0xf853e010000	                           jne 0x4000821	       210	vtls.c	FUNCTION_8	IF_1
0x40006e3	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       211	vtls.c	FUNCTION_8	IF_1
0x40006e7	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       211	vtls.c	FUNCTION_8	IF_1
0x40006ea	          0x4863d0	                         movsxd rdx, eax	       211	vtls.c	FUNCTION_8	IF_1
0x40006ed	          0x4889d0	                            mov rax, rdx	       211	vtls.c	FUNCTION_8	IF_1
0x40006f0	          0x4801c0	                            add rax, rax	       211	vtls.c	FUNCTION_8	IF_1
0x40006f3	          0x4801d0	                            add rax, rdx	       211	vtls.c	FUNCTION_8	IF_1
0x40006f6	        0x48c1e003	                              shl rax, 3	       211	vtls.c	FUNCTION_8	IF_1
0x40006fa	          0x4801c8	                            add rax, rcx	       211	vtls.c	FUNCTION_8	IF_1
0x40006fd	    0x4805c0020000	                          add rax, 0x2c0	       211	vtls.c	FUNCTION_8	IF_1
0x4000703	           0xfb600	                   movzx eax, byte [rax]	       211	vtls.c	FUNCTION_8	IF_1
0x4000706	          0x83f001	                              xor eax, 1	       211	vtls.c	FUNCTION_8	IF_1
0x4000709	            0x84c0	                             test al, al	       210	vtls.c	FUNCTION_8	IF_1
0x400070b	     0xf8410010000	                            je 0x4000821	       210	vtls.c	FUNCTION_8	IF_1
0x4000711	    0x488b05000000	            mov rax, qword [0x04000718] 	       214	vtls.c	FUNCTION_8	IF_1	IF_2
0x4000718	          0x8b4010	            mov eax, dword [rax + 0x10] 	       214	vtls.c	FUNCTION_8	IF_1	IF_2
0x400071b	          0x83e010	                           and eax, 0x10	       214	vtls.c	FUNCTION_8	IF_1	IF_2
0x400071e	            0x85c0	                           test eax, eax	       214	vtls.c	FUNCTION_8	IF_1	IF_2
0x4000720	            0x750a	                           jne 0x400072c	       214	vtls.c	FUNCTION_8	IF_1	IF_2
0x4000722	      0xb804000000	                              mov eax, 4	       215	vtls.c	FUNCTION_8	IF_1	IF_2
0x4000727	      0xe9fa000000	                           jmp 0x4000826	       215	vtls.c	FUNCTION_8	IF_1	IF_2
0x400072c	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       219	vtls.c	FUNCTION_8	IF_1
0x4000730	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       219	vtls.c	FUNCTION_8	IF_1
0x4000733	          0x4863d0	                         movsxd rdx, eax	       219	vtls.c	FUNCTION_8	IF_1
0x4000736	          0x4889d0	                            mov rax, rdx	       219	vtls.c	FUNCTION_8	IF_1
0x4000739	          0x4801c0	                            add rax, rax	       219	vtls.c	FUNCTION_8	IF_1
0x400073c	          0x4801d0	                            add rax, rdx	       219	vtls.c	FUNCTION_8	IF_1
0x400073f	        0x48c1e003	                              shl rax, 3	       219	vtls.c	FUNCTION_8	IF_1
0x4000743	          0x4801c8	                            add rax, rcx	       219	vtls.c	FUNCTION_8	IF_1
0x4000746	    0x4805d0020000	                          add rax, 0x2d0	       219	vtls.c	FUNCTION_8	IF_1
0x400074c	          0x488b00	                    mov rax, qword [rax]	       219	vtls.c	FUNCTION_8	IF_1
0x400074f	        0x488945f8	                mov qword [rbp - 8], rax	       219	vtls.c	FUNCTION_8	IF_1
0x4000753	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       220	vtls.c	FUNCTION_8	IF_1
0x4000757	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       220	vtls.c	FUNCTION_8	IF_1
0x400075a	          0x4863d0	                         movsxd rdx, eax	       220	vtls.c	FUNCTION_8	IF_1
0x400075d	          0x4889d0	                            mov rax, rdx	       220	vtls.c	FUNCTION_8	IF_1
0x4000760	          0x4801c0	                            add rax, rax	       220	vtls.c	FUNCTION_8	IF_1
0x4000763	          0x4801d0	                            add rax, rdx	       220	vtls.c	FUNCTION_8	IF_1
0x4000766	        0x48c1e003	                              shl rax, 3	       220	vtls.c	FUNCTION_8	IF_1
0x400076a	          0x4801c8	                            add rax, rcx	       220	vtls.c	FUNCTION_8	IF_1
0x400076d	    0x488d90c00200	                  lea rdx, [rax + 0x2c0]	       220	vtls.c	FUNCTION_8	IF_1
0x4000774	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	       220	vtls.c	FUNCTION_8	IF_1
0x4000778	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       220	vtls.c	FUNCTION_8	IF_1
0x400077b	          0x4863c8	                         movsxd rcx, eax	       220	vtls.c	FUNCTION_8	IF_1
0x400077e	          0x4889c8	                            mov rax, rcx	       220	vtls.c	FUNCTION_8	IF_1
0x4000781	          0x4801c0	                            add rax, rax	       220	vtls.c	FUNCTION_8	IF_1
0x4000784	          0x4801c8	                            add rax, rcx	       220	vtls.c	FUNCTION_8	IF_1
0x4000787	        0x48c1e003	                              shl rax, 3	       220	vtls.c	FUNCTION_8	IF_1
0x400078b	          0x4801f0	                            add rax, rsi	       220	vtls.c	FUNCTION_8	IF_1
0x400078e	    0x480590020000	                          add rax, 0x290	       220	vtls.c	FUNCTION_8	IF_1
0x4000794	          0x488b08	                    mov rcx, qword [rax]	       220	vtls.c	FUNCTION_8	IF_1
0x4000797	          0x48890a	                    mov qword [rdx], rcx	       220	vtls.c	FUNCTION_8	IF_1
0x400079a	        0x488b4808	                mov rcx, qword [rax + 8]	       220	vtls.c	FUNCTION_8	IF_1
0x400079e	        0x48894a08	                mov qword [rdx + 8], rcx	       220	vtls.c	FUNCTION_8	IF_1
0x40007a2	        0x488b4010	            mov rax, qword [rax + 0x10] 	       220	vtls.c	FUNCTION_8	IF_1
0x40007a6	        0x48894210	             mov qword [rdx + 0x10], rax	       220	vtls.c	FUNCTION_8	IF_1
0x40007aa	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       222	vtls.c	FUNCTION_8	IF_1	CALL_2
0x40007ad	          0x4863d0	                         movsxd rdx, eax	       222	vtls.c	FUNCTION_8	IF_1	CALL_2
0x40007b0	          0x4889d0	                            mov rax, rdx	       222	vtls.c	FUNCTION_8	IF_1	CALL_2
0x40007b3	          0x4801c0	                            add rax, rax	       222	vtls.c	FUNCTION_8	IF_1	CALL_2
0x40007b6	          0x4801d0	                            add rax, rdx	       222	vtls.c	FUNCTION_8	IF_1	CALL_2
0x40007b9	        0x48c1e003	                              shl rax, 3	       222	vtls.c	FUNCTION_8	IF_1	CALL_2
0x40007bd	    0x488d90900200	                  lea rdx, [rax + 0x290]	       222	vtls.c	FUNCTION_8	IF_1	CALL_2
0x40007c4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       222	vtls.c	FUNCTION_8	IF_1	CALL_2
0x40007c8	          0x4801d0	                            add rax, rdx	       222	vtls.c	FUNCTION_8	IF_1	CALL_2
0x40007cb	      0xba18000000	                           mov edx, 0x18	       222	vtls.c	FUNCTION_8	IF_1	CALL_2
0x40007d0	      0xbe00000000	                              mov esi, 0	       222	vtls.c	FUNCTION_8	IF_1	CALL_2
0x40007d5	          0x4889c7	                            mov rdi, rax	       222	vtls.c	FUNCTION_8	IF_1	CALL_2
0x40007d8	      0xe800000000	                          call 0x40007dd	       222	vtls.c	FUNCTION_8	IF_1	CALL_2
0x40007dd	    0x488b05000000	            mov rax, qword [0x040007e4] 	       223	vtls.c	FUNCTION_8	IF_1	CALL_3
0x40007e4	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       223	vtls.c	FUNCTION_8	IF_1	CALL_3
0x40007e8	        0x488b45f8	                mov rax, qword [rbp - 8]	       223	vtls.c	FUNCTION_8	IF_1	CALL_3
0x40007ec	      0xbe00000000	                              mov esi, 0	       223	vtls.c	FUNCTION_8	IF_1	CALL_3
0x40007f1	          0x4889c7	                            mov rdi, rax	       223	vtls.c	FUNCTION_8	IF_1	CALL_3
0x40007f4	      0xe800000000	                          call 0x40007f9	       223	vtls.c	FUNCTION_8	IF_1	CALL_3
0x40007f9	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       225	vtls.c	FUNCTION_8	IF_1
0x40007fd	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       225	vtls.c	FUNCTION_8	IF_1
0x4000800	          0x4863d0	                         movsxd rdx, eax	       225	vtls.c	FUNCTION_8	IF_1
0x4000803	          0x4889d0	                            mov rax, rdx	       225	vtls.c	FUNCTION_8	IF_1
0x4000806	          0x4801c0	                            add rax, rax	       225	vtls.c	FUNCTION_8	IF_1
0x4000809	          0x4801d0	                            add rax, rdx	       225	vtls.c	FUNCTION_8	IF_1
0x400080c	        0x48c1e003	                              shl rax, 3	       225	vtls.c	FUNCTION_8	IF_1
0x4000810	          0x4801c8	                            add rax, rcx	       225	vtls.c	FUNCTION_8	IF_1
0x4000813	    0x488d90a00200	                  lea rdx, [rax + 0x2a0]	       225	vtls.c	FUNCTION_8	IF_1
0x400081a	        0x488b45f8	                mov rax, qword [rbp - 8]	       225	vtls.c	FUNCTION_8	IF_1
0x400081e	          0x488902	                    mov qword [rdx], rax	       225	vtls.c	FUNCTION_8	IF_1
0x4000821	      0xb800000000	                              mov eax, 0	       227	vtls.c	FUNCTION_8
0x4000826	              0xc9	                                   leave	       228	vtls.c	FUNCTION_8
0x4000827	              0xc3	                                     ret	       228	vtls.c	FUNCTION_8
Curl_none_set_engine_default	functions,0:ELSE,0:IF,0:SWITCH,0:FOR,0:DO,0:WHILE,0:CALL,0	6
0x4002105	              0x55	                                push rbp	      1058	vtls.c	FUNCTION_50
0x4002106	          0x4889e5	                            mov rbp, rsp	      1058	vtls.c	FUNCTION_50
0x4002109	        0x48897df8	                mov qword [rbp - 8], rdi	      1058	vtls.c	FUNCTION_50
0x400210d	      0xb804000000	                              mov eax, 4	      1060	vtls.c	FUNCTION_50
0x4002112	              0x5d	                                 pop rbp	      1061	vtls.c	FUNCTION_50
0x4002113	              0xc3	                                     ret	      1061	vtls.c	FUNCTION_50
Curl_ssl_connect_nonblocking	functions,0:ELSE,0:IF,4:SWITCH,0:FOR,0:DO,0:WHILE,0:CALL,4	63
0x4000912	              0x55	                                push rbp	       259	vtls.c	FUNCTION_10
0x4000913	          0x4889e5	                            mov rbp, rsp	       259	vtls.c	FUNCTION_10
0x4000916	        0x4883ec30	                           sub rsp, 0x30	       259	vtls.c	FUNCTION_10
0x400091a	        0x48897de8	             mov qword [rbp - 0x18], rdi	       259	vtls.c	FUNCTION_10
0x400091e	          0x8975e4	             mov dword [rbp - 0x1c], esi	       259	vtls.c	FUNCTION_10
0x4000921	        0x488955d8	             mov qword [rbp - 0x28], rdx	       259	vtls.c	FUNCTION_10
0x4000925	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       261	vtls.c	FUNCTION_10	IF_1
0x4000929	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       261	vtls.c	FUNCTION_10	IF_1
0x400092c	            0x4898	                                    cdqe	       261	vtls.c	FUNCTION_10	IF_1
0x400092e	     0xfb68402b903	    movzx eax, byte [rdx + rax + 0x3b9] 	       261	vtls.c	FUNCTION_10	IF_1
0x4000936	            0x84c0	                             test al, al	       261	vtls.c	FUNCTION_10	IF_1
0x4000938	            0x7422	                            je 0x400095c	       261	vtls.c	FUNCTION_10	IF_1
0x400093a	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       262	vtls.c	FUNCTION_10	IF_1	CALL_1
0x400093d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       262	vtls.c	FUNCTION_10	IF_1	CALL_1
0x4000941	            0x89d6	                            mov esi, edx	       262	vtls.c	FUNCTION_10	IF_1	CALL_1
0x4000943	          0x4889c7	                            mov rdi, rax	       262	vtls.c	FUNCTION_10	IF_1	CALL_1
0x4000946	      0xe85efdffff	         call sym.ssl_connect_init_proxy	       262	vtls.c	FUNCTION_10	IF_1	CALL_1
0x400094b	          0x8945fc	                mov dword [rbp - 4], eax	       262	vtls.c	FUNCTION_10	IF_1	CALL_1
0x400094e	        0x837dfc00	                  cmp dword [rbp - 4], 0	       263	vtls.c	FUNCTION_10	IF_1	IF_2
0x4000952	            0x7408	                            je 0x400095c	       263	vtls.c	FUNCTION_10	IF_1	IF_2
0x4000954	          0x8b45fc	                mov eax, dword [rbp - 4]	       264	vtls.c	FUNCTION_10	IF_1	IF_2
0x4000957	      0xe986000000	                           jmp 0x40009e2	       264	vtls.c	FUNCTION_10	IF_1	IF_2
0x400095c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       267	vtls.c	FUNCTION_10	IF_3	CALL_2
0x4000960	          0x488b00	                    mov rax, qword [rax]	       267	vtls.c	FUNCTION_10	IF_3	CALL_2
0x4000963	          0x4889c7	                            mov rdi, rax	       267	vtls.c	FUNCTION_10	IF_3	CALL_2
0x4000966	      0xe8a2fcffff	                call sym.ssl_prefs_check	       267	vtls.c	FUNCTION_10	IF_3	CALL_2
0x400096b	          0x83f001	                              xor eax, 1	       267	vtls.c	FUNCTION_10	IF_3	CALL_2
0x400096e	            0x84c0	                             test al, al	       267	vtls.c	FUNCTION_10	IF_3	CALL_2
0x4000970	            0x7407	                            je 0x4000979	       267	vtls.c	FUNCTION_10	IF_3	CALL_2
0x4000972	      0xb823000000	                           mov eax, 0x23	       268	vtls.c	FUNCTION_10	IF_3
0x4000977	            0xeb69	                           jmp 0x40009e2	       268	vtls.c	FUNCTION_10	IF_3
0x4000979	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       271	vtls.c	FUNCTION_10
0x400097d	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       271	vtls.c	FUNCTION_10
0x4000980	          0x4863d0	                         movsxd rdx, eax	       271	vtls.c	FUNCTION_10
0x4000983	          0x4889d0	                            mov rax, rdx	       271	vtls.c	FUNCTION_10
0x4000986	          0x4801c0	                            add rax, rax	       271	vtls.c	FUNCTION_10
0x4000989	          0x4801d0	                            add rax, rdx	       271	vtls.c	FUNCTION_10
0x400098c	        0x48c1e003	                              shl rax, 3	       271	vtls.c	FUNCTION_10
0x4000990	          0x4801c8	                            add rax, rcx	       271	vtls.c	FUNCTION_10
0x4000993	    0x480590020000	                          add rax, 0x290	       271	vtls.c	FUNCTION_10
0x4000999	          0xc60001	                       mov byte [rax], 1	       271	vtls.c	FUNCTION_10
0x400099c	    0x488b05000000	            mov rax, qword [0x040009a3] 	       272	vtls.c	FUNCTION_10	CALL_3
0x40009a3	        0x488b4068	            mov rax, qword [rax + 0x68] 	       272	vtls.c	FUNCTION_10	CALL_3
0x40009a7	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       272	vtls.c	FUNCTION_10	CALL_3
0x40009ab	          0x8b75e4	             mov esi, dword [rbp - 0x1c]	       272	vtls.c	FUNCTION_10	CALL_3
0x40009ae	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       272	vtls.c	FUNCTION_10	CALL_3
0x40009b2	          0x4889cf	                            mov rdi, rcx	       272	vtls.c	FUNCTION_10	CALL_3
0x40009b5	            0xffd0	                                call rax	       272	vtls.c	FUNCTION_10	CALL_3
0x40009b7	          0x8945fc	                mov dword [rbp - 4], eax	       272	vtls.c	FUNCTION_10	CALL_3
0x40009ba	        0x837dfc00	                  cmp dword [rbp - 4], 0	       273	vtls.c	FUNCTION_10	IF_4
0x40009be	            0x751f	                           jne 0x40009df	       273	vtls.c	FUNCTION_10	IF_4
0x40009c0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       273	vtls.c	FUNCTION_10	IF_4
0x40009c4	           0xfb600	                   movzx eax, byte [rax]	       273	vtls.c	FUNCTION_10	IF_4
0x40009c7	            0x84c0	                             test al, al	       273	vtls.c	FUNCTION_10	IF_4
0x40009c9	            0x7414	                            je 0x40009df	       273	vtls.c	FUNCTION_10	IF_4
0x40009cb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       274	vtls.c	FUNCTION_10	CALL_4
0x40009cf	          0x488b00	                    mov rax, qword [rax]	       274	vtls.c	FUNCTION_10	CALL_4
0x40009d2	      0xbe05000000	                              mov esi, 5	       274	vtls.c	FUNCTION_10	CALL_4
0x40009d7	          0x4889c7	                            mov rdi, rax	       274	vtls.c	FUNCTION_10	CALL_4
0x40009da	      0xe800000000	                          call 0x40009df	       274	vtls.c	FUNCTION_10	CALL_4
0x40009df	          0x8b45fc	                mov eax, dword [rbp - 4]	       275	vtls.c	FUNCTION_10
0x40009e2	              0xc9	                                   leave	       276	vtls.c	FUNCTION_10
0x40009e3	              0xc3	                                     ret	       276	vtls.c	FUNCTION_10
Curl_ssl_random	functions,0:ELSE,0:IF,0:SWITCH,0:FOR,0:DO,0:WHILE,0:CALL,1	15
0x4001936	              0x55	                                push rbp	       736	vtls.c	FUNCTION_33
0x4001937	          0x4889e5	                            mov rbp, rsp	       736	vtls.c	FUNCTION_33
0x400193a	        0x4883ec20	                           sub rsp, 0x20	       736	vtls.c	FUNCTION_33
0x400193e	        0x48897df8	                mov qword [rbp - 8], rdi	       736	vtls.c	FUNCTION_33
0x4001942	        0x488975f0	             mov qword [rbp - 0x10], rsi	       736	vtls.c	FUNCTION_33
0x4001946	        0x488955e8	             mov qword [rbp - 0x18], rdx	       736	vtls.c	FUNCTION_33
0x400194a	    0x488b05000000	            mov rax, qword [0x04001951] 	       737	vtls.c	FUNCTION_33	CALL_1
0x4001951	        0x488b4050	            mov rax, qword [rax + 0x50] 	       737	vtls.c	FUNCTION_33	CALL_1
0x4001955	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       737	vtls.c	FUNCTION_33	CALL_1
0x4001959	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       737	vtls.c	FUNCTION_33	CALL_1
0x400195d	        0x488b4df8	                mov rcx, qword [rbp - 8]	       737	vtls.c	FUNCTION_33	CALL_1
0x4001961	          0x4889cf	                            mov rdi, rcx	       737	vtls.c	FUNCTION_33	CALL_1
0x4001964	            0xffd0	                                call rax	       737	vtls.c	FUNCTION_33	CALL_1
0x4001966	              0xc9	                                   leave	       738	vtls.c	FUNCTION_33
0x4001967	              0xc3	                                     ret	       738	vtls.c	FUNCTION_33
pubkey_pem_to_der	functions,0:ELSE,0:IF,6:SWITCH,0:FOR,0:DO,0:WHILE,1:CALL,5	111
0x4001968	              0x55	                                push rbp	       746	vtls.c	FUNCTION_34
0x4001969	          0x4889e5	                            mov rbp, rsp	       746	vtls.c	FUNCTION_34
0x400196c	        0x4883ec60	                           sub rsp, 0x60	       746	vtls.c	FUNCTION_34
0x4001970	        0x48897db8	             mov qword [rbp - 0x48], rdi	       746	vtls.c	FUNCTION_34
0x4001974	        0x488975b0	             mov qword [rbp - 0x50], rsi	       746	vtls.c	FUNCTION_34
0x4001978	        0x488955a8	             mov qword [rbp - 0x58], rdx	       746	vtls.c	FUNCTION_34
0x400197c	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       748	vtls.c	FUNCTION_34
0x4001984	      0x48837db800	               cmp qword [rbp - 0x48], 0	       752	vtls.c	FUNCTION_34	IF_1
0x4001989	            0x750a	                           jne 0x4001995	       752	vtls.c	FUNCTION_34	IF_1
0x400198b	      0xb83d000000	                           mov eax, 0x3d	       753	vtls.c	FUNCTION_34	IF_1
0x4001990	      0xe973010000	                           jmp 0x4001b08	       753	vtls.c	FUNCTION_34	IF_1
0x4001995	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       755	vtls.c	FUNCTION_34	CALL_1
0x4001999	    0x488d35000000	                   lea rsi, [0x040019a0]	       755	vtls.c	FUNCTION_34	CALL_1
0x40019a0	          0x4889c7	                            mov rdi, rax	       755	vtls.c	FUNCTION_34	CALL_1
0x40019a3	      0xe800000000	                          call 0x40019a8	       755	vtls.c	FUNCTION_34	CALL_1
0x40019a8	        0x488945e0	             mov qword [rbp - 0x20], rax	       755	vtls.c	FUNCTION_34	CALL_1
0x40019ac	      0x48837de000	               cmp qword [rbp - 0x20], 0	       756	vtls.c	FUNCTION_34	IF_2
0x40019b1	            0x750a	                           jne 0x40019bd	       756	vtls.c	FUNCTION_34	IF_2
0x40019b3	      0xb83d000000	                           mov eax, 0x3d	       757	vtls.c	FUNCTION_34	IF_2
0x40019b8	      0xe94b010000	                           jmp 0x4001b08	       757	vtls.c	FUNCTION_34	IF_2
0x40019bd	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       759	vtls.c	FUNCTION_34
0x40019c1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       759	vtls.c	FUNCTION_34
0x40019c5	          0x4829c2	                            sub rdx, rax	       759	vtls.c	FUNCTION_34
0x40019c8	          0x4889d0	                            mov rax, rdx	       759	vtls.c	FUNCTION_34
0x40019cb	        0x488945d0	             mov qword [rbp - 0x30], rax	       759	vtls.c	FUNCTION_34
0x40019cf	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       761	vtls.c	FUNCTION_34	IF_3
0x40019d4	            0x7420	                            je 0x40019f6	       761	vtls.c	FUNCTION_34	IF_3
0x40019d6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       761	vtls.c	FUNCTION_34	IF_3
0x40019da	        0x488d50ff	                      lea rdx, [rax - 1]	       761	vtls.c	FUNCTION_34	IF_3
0x40019de	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       761	vtls.c	FUNCTION_34	IF_3
0x40019e2	          0x4801d0	                            add rax, rdx	       761	vtls.c	FUNCTION_34	IF_3
0x40019e5	           0xfb600	                   movzx eax, byte [rax]	       761	vtls.c	FUNCTION_34	IF_3
0x40019e8	            0x3c0a	                             cmp al, 0xa	       761	vtls.c	FUNCTION_34	IF_3
0x40019ea	            0x740a	                            je 0x40019f6	       761	vtls.c	FUNCTION_34	IF_3
0x40019ec	      0xb83d000000	                           mov eax, 0x3d	       762	vtls.c	FUNCTION_34	IF_3
0x40019f1	      0xe912010000	                           jmp 0x4001b08	       762	vtls.c	FUNCTION_34	IF_3
0x40019f6	      0x488345d01a	            add qword [rbp - 0x30], 0x1a	       765	vtls.c	FUNCTION_34
0x40019fb	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       768	vtls.c	FUNCTION_34	CALL_2
0x40019ff	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       768	vtls.c	FUNCTION_34	CALL_2
0x4001a03	          0x4801d0	                            add rax, rdx	       768	vtls.c	FUNCTION_34	CALL_2
0x4001a06	    0x488d35000000	                   lea rsi, [0x04001a0d]	       768	vtls.c	FUNCTION_34	CALL_2
0x4001a0d	          0x4889c7	                            mov rdi, rax	       768	vtls.c	FUNCTION_34	CALL_2
0x4001a10	      0xe800000000	                          call 0x4001a15	       768	vtls.c	FUNCTION_34	CALL_2
0x4001a15	        0x488945e8	             mov qword [rbp - 0x18], rax	       768	vtls.c	FUNCTION_34	CALL_2
0x4001a19	      0x48837de800	               cmp qword [rbp - 0x18], 0	       769	vtls.c	FUNCTION_34	IF_4
0x4001a1e	            0x750a	                           jne 0x4001a2a	       769	vtls.c	FUNCTION_34	IF_4
0x4001a20	      0xb83d000000	                           mov eax, 0x3d	       770	vtls.c	FUNCTION_34	IF_4
0x4001a25	      0xe9de000000	                           jmp 0x4001b08	       770	vtls.c	FUNCTION_34	IF_4
0x4001a2a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       772	vtls.c	FUNCTION_34
0x4001a2e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       772	vtls.c	FUNCTION_34
0x4001a32	          0x4829c2	                            sub rdx, rax	       772	vtls.c	FUNCTION_34
0x4001a35	          0x4889d0	                            mov rax, rdx	       772	vtls.c	FUNCTION_34
0x4001a38	        0x488945f0	             mov qword [rbp - 0x10], rax	       772	vtls.c	FUNCTION_34
0x4001a3c	    0x488b05000000	            mov rax, qword [0x04001a43] 	       774	vtls.c	FUNCTION_34	CALL_3
0x4001a43	          0x488b00	                    mov rax, qword [rax]	       774	vtls.c	FUNCTION_34	CALL_3
0x4001a46	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       774	vtls.c	FUNCTION_34	CALL_3
0x4001a4a	        0x482b55d0	             sub rdx, qword [rbp - 0x30]	       774	vtls.c	FUNCTION_34	CALL_3
0x4001a4e	        0x4883c201	                              add rdx, 1	       774	vtls.c	FUNCTION_34	CALL_3
0x4001a52	          0x4889d7	                            mov rdi, rdx	       774	vtls.c	FUNCTION_34	CALL_3
0x4001a55	            0xffd0	                                call rax	       774	vtls.c	FUNCTION_34	CALL_3
0x4001a57	        0x488945f8	                mov qword [rbp - 8], rax	       774	vtls.c	FUNCTION_34	CALL_3
0x4001a5b	      0x48837df800	                  cmp qword [rbp - 8], 0	       775	vtls.c	FUNCTION_34	IF_5
0x4001a60	            0x7556	                           jne 0x4001ab8	       775	vtls.c	FUNCTION_34	IF_5
0x4001a62	      0xb81b000000	                           mov eax, 0x1b	       776	vtls.c	FUNCTION_34	IF_5
0x4001a67	      0xe99c000000	                           jmp 0x4001b08	       776	vtls.c	FUNCTION_34	IF_5
0x4001a6c	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       784	vtls.c	FUNCTION_34	WHILE_1	IF_6
0x4001a70	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       784	vtls.c	FUNCTION_34	WHILE_1	IF_6
0x4001a74	          0x4801d0	                            add rax, rdx	       784	vtls.c	FUNCTION_34	WHILE_1	IF_6
0x4001a77	           0xfb600	                   movzx eax, byte [rax]	       784	vtls.c	FUNCTION_34	WHILE_1	IF_6
0x4001a7a	            0x3c0a	                             cmp al, 0xa	       784	vtls.c	FUNCTION_34	WHILE_1	IF_6
0x4001a7c	            0x7435	                            je 0x4001ab3	       784	vtls.c	FUNCTION_34	WHILE_1	IF_6
0x4001a7e	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       784	vtls.c	FUNCTION_34	WHILE_1	IF_6
0x4001a82	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       784	vtls.c	FUNCTION_34	WHILE_1	IF_6
0x4001a86	          0x4801d0	                            add rax, rdx	       784	vtls.c	FUNCTION_34	WHILE_1	IF_6
0x4001a89	           0xfb600	                   movzx eax, byte [rax]	       784	vtls.c	FUNCTION_34	WHILE_1	IF_6
0x4001a8c	            0x3c0d	                             cmp al, 0xd	       784	vtls.c	FUNCTION_34	WHILE_1	IF_6
0x4001a8e	            0x7423	                            je 0x4001ab3	       784	vtls.c	FUNCTION_34	WHILE_1	IF_6
0x4001a90	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       785	vtls.c	FUNCTION_34	WHILE_1	IF_6
0x4001a94	        0x488d5001	                      lea rdx, [rax + 1]	       785	vtls.c	FUNCTION_34	WHILE_1	IF_6
0x4001a98	        0x488955d8	             mov qword [rbp - 0x28], rdx	       785	vtls.c	FUNCTION_34	WHILE_1	IF_6
0x4001a9c	        0x488b55f8	                mov rdx, qword [rbp - 8]	       785	vtls.c	FUNCTION_34	WHILE_1	IF_6
0x4001aa0	          0x4801c2	                            add rdx, rax	       785	vtls.c	FUNCTION_34	WHILE_1	IF_6
0x4001aa3	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       785	vtls.c	FUNCTION_34	WHILE_1	IF_6
0x4001aa7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       785	vtls.c	FUNCTION_34	WHILE_1	IF_6
0x4001aab	          0x4801c8	                            add rax, rcx	       785	vtls.c	FUNCTION_34	WHILE_1	IF_6
0x4001aae	           0xfb600	                   movzx eax, byte [rax]	       785	vtls.c	FUNCTION_34	WHILE_1	IF_6
0x4001ab1	            0x8802	                      mov byte [rdx], al	       785	vtls.c	FUNCTION_34	WHILE_1	IF_6
0x4001ab3	      0x488345d001	               add qword [rbp - 0x30], 1	       786	vtls.c	FUNCTION_34	WHILE_1
0x4001ab8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       783	vtls.c	FUNCTION_34	WHILE_1
0x4001abc	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       783	vtls.c	FUNCTION_34	WHILE_1
0x4001ac0	            0x72aa	                            jb 0x4001a6c	       783	vtls.c	FUNCTION_34	WHILE_1
0x4001ac2	        0x488b55f8	                mov rdx, qword [rbp - 8]	       789	vtls.c	FUNCTION_34
0x4001ac6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       789	vtls.c	FUNCTION_34
0x4001aca	          0x4801d0	                            add rax, rdx	       789	vtls.c	FUNCTION_34
0x4001acd	          0xc60000	                       mov byte [rax], 0	       789	vtls.c	FUNCTION_34
0x4001ad0	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       791	vtls.c	FUNCTION_34	CALL_4
0x4001ad4	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	       791	vtls.c	FUNCTION_34	CALL_4
0x4001ad8	        0x488b45f8	                mov rax, qword [rbp - 8]	       791	vtls.c	FUNCTION_34	CALL_4
0x4001adc	          0x4889ce	                            mov rsi, rcx	       791	vtls.c	FUNCTION_34	CALL_4
0x4001adf	          0x4889c7	                            mov rdi, rax	       791	vtls.c	FUNCTION_34	CALL_4
0x4001ae2	      0xe800000000	                          call 0x4001ae7	       791	vtls.c	FUNCTION_34	CALL_4
0x4001ae7	          0x8945cc	             mov dword [rbp - 0x34], eax	       791	vtls.c	FUNCTION_34	CALL_4
0x4001aea	    0x488b05000000	            mov rax, qword [0x04001af1] 	       793	vtls.c	FUNCTION_34	CALL_5
0x4001af1	          0x488b00	                    mov rax, qword [rax]	       793	vtls.c	FUNCTION_34	CALL_5
0x4001af4	        0x488b55f8	                mov rdx, qword [rbp - 8]	       793	vtls.c	FUNCTION_34	CALL_5
0x4001af8	          0x4889d7	                            mov rdi, rdx	       793	vtls.c	FUNCTION_34	CALL_5
0x4001afb	            0xffd0	                                call rax	       793	vtls.c	FUNCTION_34	CALL_5
0x4001afd	    0x48c745f80000	                  mov qword [rbp - 8], 0	       793	vtls.c	FUNCTION_34	CALL_5
0x4001b05	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       795	vtls.c	FUNCTION_34
0x4001b08	              0xc9	                                   leave	       796	vtls.c	FUNCTION_34
0x4001b09	              0xc3	                                     ret	       796	vtls.c	FUNCTION_34
Curl_none_data_pending	functions,0:ELSE,0:IF,0:SWITCH,0:FOR,0:DO,0:WHILE,0:CALL,0	7
0x40020d5	              0x55	                                push rbp	      1038	vtls.c	FUNCTION_47
0x40020d6	          0x4889e5	                            mov rbp, rsp	      1038	vtls.c	FUNCTION_47
0x40020d9	        0x48897df8	                mov qword [rbp - 8], rdi	      1038	vtls.c	FUNCTION_47
0x40020dd	          0x8975f4	              mov dword [rbp - 0xc], esi	      1038	vtls.c	FUNCTION_47
0x40020e0	      0xb800000000	                              mov eax, 0	      1041	vtls.c	FUNCTION_47
0x40020e5	              0x5d	                                 pop rbp	      1042	vtls.c	FUNCTION_47
0x40020e6	              0xc3	                                     ret	      1042	vtls.c	FUNCTION_47
Curl_none_cleanup	functions,0:ELSE,0:IF,0:SWITCH,0:FOR,0:DO,0:WHILE,0:CALL,0	5
0x4002080	              0x55	                                push rbp	      1000	vtls.c	FUNCTION_41
0x4002081	          0x4889e5	                            mov rbp, rsp	      1000	vtls.c	FUNCTION_41
0x4002084	              0x90	                                     nop	      1000	vtls.c	FUNCTION_41
0x4002085	              0x5d	                                 pop rbp	      1000	vtls.c	FUNCTION_41
0x4002086	              0xc3	                                     ret	      1000	vtls.c	FUNCTION_41
Curl_ssl_version	functions,0:ELSE,0:IF,0:SWITCH,0:FOR,0:DO,0:WHILE,0:CALL,2	14
0x40015f2	              0x55	                                push rbp	       615	vtls.c	FUNCTION_26
0x40015f3	          0x4889e5	                            mov rbp, rsp	       615	vtls.c	FUNCTION_26
0x40015f6	        0x4883ec10	                           sub rsp, 0x10	       615	vtls.c	FUNCTION_26
0x40015fa	        0x48897df8	                mov qword [rbp - 8], rdi	       615	vtls.c	FUNCTION_26
0x40015fe	        0x488975f0	             mov qword [rbp - 0x10], rsi	       615	vtls.c	FUNCTION_26
0x4001602	    0x488b05000000	            mov rax, qword [0x04001609] 	       619	vtls.c	FUNCTION_26	CALL_2
0x4001609	        0x488b4030	            mov rax, qword [rax + 0x30] 	       619	vtls.c	FUNCTION_26	CALL_2
0x400160d	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       619	vtls.c	FUNCTION_26	CALL_2
0x4001611	        0x488b55f8	                mov rdx, qword [rbp - 8]	       619	vtls.c	FUNCTION_26	CALL_2
0x4001615	          0x4889ce	                            mov rsi, rcx	       619	vtls.c	FUNCTION_26	CALL_2
0x4001618	          0x4889d7	                            mov rdi, rdx	       619	vtls.c	FUNCTION_26	CALL_2
0x400161b	            0xffd0	                                call rax	       619	vtls.c	FUNCTION_26	CALL_2
0x400161d	              0xc9	                                   leave	       621	vtls.c	FUNCTION_26
0x400161e	              0xc3	                                     ret	       621	vtls.c	FUNCTION_26
Curl_multissl_connect_nonblocking	functions,0:ELSE,0:IF,1:SWITCH,0:FOR,0:DO,0:WHILE,0:CALL,2	21
0x4002209	              0x55	                                push rbp	      1119	vtls.c	FUNCTION_57
0x400220a	          0x4889e5	                            mov rbp, rsp	      1119	vtls.c	FUNCTION_57
0x400220d	        0x4883ec20	                           sub rsp, 0x20	      1119	vtls.c	FUNCTION_57
0x4002211	        0x48897df8	                mov qword [rbp - 8], rdi	      1119	vtls.c	FUNCTION_57
0x4002215	          0x8975f4	              mov dword [rbp - 0xc], esi	      1119	vtls.c	FUNCTION_57
0x4002218	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1119	vtls.c	FUNCTION_57
0x400221c	      0xbf00000000	                              mov edi, 0	      1120	vtls.c	FUNCTION_57	IF_1	CALL_1
0x4002221	      0xe871020000	                  call sym.multissl_init	      1120	vtls.c	FUNCTION_57	IF_1	CALL_1
0x4002226	            0x85c0	                           test eax, eax	      1120	vtls.c	FUNCTION_57	IF_1	CALL_1
0x4002228	            0x7407	                            je 0x4002231	      1120	vtls.c	FUNCTION_57	IF_1	CALL_1
0x400222a	      0xb802000000	                              mov eax, 2	      1121	vtls.c	FUNCTION_57	IF_1
0x400222f	            0xeb1b	                           jmp 0x400224c	      1121	vtls.c	FUNCTION_57	IF_1
0x4002231	    0x488b05000000	            mov rax, qword [0x04002238] 	      1122	vtls.c	FUNCTION_57	CALL_2
0x4002238	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1122	vtls.c	FUNCTION_57	CALL_2
0x400223c	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1122	vtls.c	FUNCTION_57	CALL_2
0x4002240	          0x8b75f4	              mov esi, dword [rbp - 0xc]	      1122	vtls.c	FUNCTION_57	CALL_2
0x4002243	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1122	vtls.c	FUNCTION_57	CALL_2
0x4002247	          0x4889cf	                            mov rdi, rcx	      1122	vtls.c	FUNCTION_57	CALL_2
0x400224a	            0xffd0	                                call rax	      1122	vtls.c	FUNCTION_57	CALL_2
0x400224c	              0xc9	                                   leave	      1123	vtls.c	FUNCTION_57
0x400224d	              0xc3	                                     ret	      1123	vtls.c	FUNCTION_57
Curl_ssl_push_certinfo_len	functions,0:ELSE,0:IF,2:SWITCH,0:FOR,0:DO,0:WHILE,0:CALL,7	95
0x4001788	              0x55	                                push rbp	       687	vtls.c	FUNCTION_31
0x4001789	          0x4889e5	                            mov rbp, rsp	       687	vtls.c	FUNCTION_31
0x400178c	        0x4883ec60	                           sub rsp, 0x60	       687	vtls.c	FUNCTION_31
0x4001790	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       687	vtls.c	FUNCTION_31
0x4001794	          0x8975c4	             mov dword [rbp - 0x3c], esi	       687	vtls.c	FUNCTION_31
0x4001797	        0x488955b8	             mov qword [rbp - 0x48], rdx	       687	vtls.c	FUNCTION_31
0x400179b	        0x48894db0	             mov qword [rbp - 0x50], rcx	       687	vtls.c	FUNCTION_31
0x400179f	        0x4c8945a8	              mov qword [rbp - 0x58], r8	       687	vtls.c	FUNCTION_31
0x40017a3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       688	vtls.c	FUNCTION_31
0x40017a7	    0x4805b0520000	                         add rax, 0x52b0	       688	vtls.c	FUNCTION_31
0x40017ad	        0x488945d8	             mov qword [rbp - 0x28], rax	       688	vtls.c	FUNCTION_31
0x40017b1	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	       691	vtls.c	FUNCTION_31
0x40017b8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       692	vtls.c	FUNCTION_31	CALL_1
0x40017bc	          0x4889c7	                            mov rdi, rax	       692	vtls.c	FUNCTION_31	CALL_1
0x40017bf	      0xe800000000	                          call 0x40017c4	       692	vtls.c	FUNCTION_31	CALL_1
0x40017c4	        0x488945e0	             mov qword [rbp - 0x20], rax	       692	vtls.c	FUNCTION_31	CALL_1
0x40017c8	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       693	vtls.c	FUNCTION_31
0x40017cc	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       693	vtls.c	FUNCTION_31
0x40017d0	          0x4801d0	                            add rax, rdx	       693	vtls.c	FUNCTION_31
0x40017d3	        0x4883c002	                              add rax, 2	       693	vtls.c	FUNCTION_31
0x40017d7	        0x488945e8	             mov qword [rbp - 0x18], rax	       693	vtls.c	FUNCTION_31
0x40017db	    0x488b05000000	            mov rax, qword [0x040017e2] 	       695	vtls.c	FUNCTION_31	CALL_2
0x40017e2	          0x488b00	                    mov rax, qword [rax]	       695	vtls.c	FUNCTION_31	CALL_2
0x40017e5	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       695	vtls.c	FUNCTION_31	CALL_2
0x40017e9	          0x4889d7	                            mov rdi, rdx	       695	vtls.c	FUNCTION_31	CALL_2
0x40017ec	            0xffd0	                                call rax	       695	vtls.c	FUNCTION_31	CALL_2
0x40017ee	        0x488945f0	             mov qword [rbp - 0x10], rax	       695	vtls.c	FUNCTION_31	CALL_2
0x40017f2	      0x48837df000	               cmp qword [rbp - 0x10], 0	       696	vtls.c	FUNCTION_31	IF_1
0x40017f7	            0x750a	                           jne 0x4001803	       696	vtls.c	FUNCTION_31	IF_1
0x40017f9	      0xb81b000000	                           mov eax, 0x1b	       697	vtls.c	FUNCTION_31	IF_1
0x40017fe	      0xe9ea000000	                           jmp 0x40018ed	       697	vtls.c	FUNCTION_31	IF_1
0x4001803	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       700	vtls.c	FUNCTION_31	CALL_3
0x4001807	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	       700	vtls.c	FUNCTION_31	CALL_3
0x400180b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       700	vtls.c	FUNCTION_31	CALL_3
0x400180f	          0x4889d1	                            mov rcx, rdx	       700	vtls.c	FUNCTION_31	CALL_3
0x4001812	    0x488d15000000	                   lea rdx, [0x04001819]	       700	vtls.c	FUNCTION_31	CALL_3
0x4001819	          0x4889c7	                            mov rdi, rax	       700	vtls.c	FUNCTION_31	CALL_3
0x400181c	      0xb800000000	                              mov eax, 0	       700	vtls.c	FUNCTION_31	CALL_3
0x4001821	      0xe800000000	                          call 0x4001826	       700	vtls.c	FUNCTION_31	CALL_3
0x4001826	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       703	vtls.c	FUNCTION_31	CALL_4
0x400182a	        0x488d5001	                      lea rdx, [rax + 1]	       703	vtls.c	FUNCTION_31	CALL_4
0x400182e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       703	vtls.c	FUNCTION_31	CALL_4
0x4001832	        0x488d0c02	                    lea rcx, [rdx + rax]	       703	vtls.c	FUNCTION_31	CALL_4
0x4001836	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       703	vtls.c	FUNCTION_31	CALL_4
0x400183a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       703	vtls.c	FUNCTION_31	CALL_4
0x400183e	          0x4889c6	                            mov rsi, rax	       703	vtls.c	FUNCTION_31	CALL_4
0x4001841	          0x4889cf	                            mov rdi, rcx	       703	vtls.c	FUNCTION_31	CALL_4
0x4001844	      0xe800000000	                          call 0x4001849	       703	vtls.c	FUNCTION_31	CALL_4
0x4001849	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       706	vtls.c	FUNCTION_31
0x400184d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       706	vtls.c	FUNCTION_31
0x4001851	          0x4801d0	                            add rax, rdx	       706	vtls.c	FUNCTION_31
0x4001854	        0x488d5001	                      lea rdx, [rax + 1]	       706	vtls.c	FUNCTION_31
0x4001858	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       706	vtls.c	FUNCTION_31
0x400185c	          0x4801d0	                            add rax, rdx	       706	vtls.c	FUNCTION_31
0x400185f	          0xc60000	                       mov byte [rax], 0	       706	vtls.c	FUNCTION_31
0x4001862	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       708	vtls.c	FUNCTION_31	CALL_5
0x4001866	        0x488b4008	                mov rax, qword [rax + 8]	       708	vtls.c	FUNCTION_31	CALL_5
0x400186a	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	       708	vtls.c	FUNCTION_31	CALL_5
0x400186d	          0x4863d2	                         movsxd rdx, edx	       708	vtls.c	FUNCTION_31	CALL_5
0x4001870	        0x48c1e203	                              shl rdx, 3	       708	vtls.c	FUNCTION_31	CALL_5
0x4001874	          0x4801d0	                            add rax, rdx	       708	vtls.c	FUNCTION_31	CALL_5
0x4001877	          0x488b00	                    mov rax, qword [rax]	       708	vtls.c	FUNCTION_31	CALL_5
0x400187a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       708	vtls.c	FUNCTION_31	CALL_5
0x400187e	          0x4889d6	                            mov rsi, rdx	       708	vtls.c	FUNCTION_31	CALL_5
0x4001881	          0x4889c7	                            mov rdi, rax	       708	vtls.c	FUNCTION_31	CALL_5
0x4001884	      0xe800000000	                          call 0x4001889	       708	vtls.c	FUNCTION_31	CALL_5
0x4001889	        0x488945f8	                mov qword [rbp - 8], rax	       708	vtls.c	FUNCTION_31	CALL_5
0x400188d	      0x48837df800	                  cmp qword [rbp - 8], 0	       709	vtls.c	FUNCTION_31	IF_2
0x4001892	            0x753a	                           jne 0x40018ce	       709	vtls.c	FUNCTION_31	IF_2
0x4001894	    0x488b05000000	            mov rax, qword [0x0400189b] 	       710	vtls.c	FUNCTION_31	IF_2	CALL_6
0x400189b	          0x488b00	                    mov rax, qword [rax]	       710	vtls.c	FUNCTION_31	IF_2	CALL_6
0x400189e	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       710	vtls.c	FUNCTION_31	IF_2	CALL_6
0x40018a2	          0x4889d7	                            mov rdi, rdx	       710	vtls.c	FUNCTION_31	IF_2	CALL_6
0x40018a5	            0xffd0	                                call rax	       710	vtls.c	FUNCTION_31	IF_2	CALL_6
0x40018a7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       711	vtls.c	FUNCTION_31	IF_2	CALL_7
0x40018ab	        0x488b4008	                mov rax, qword [rax + 8]	       711	vtls.c	FUNCTION_31	IF_2	CALL_7
0x40018af	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	       711	vtls.c	FUNCTION_31	IF_2	CALL_7
0x40018b2	          0x4863d2	                         movsxd rdx, edx	       711	vtls.c	FUNCTION_31	IF_2	CALL_7
0x40018b5	        0x48c1e203	                              shl rdx, 3	       711	vtls.c	FUNCTION_31	IF_2	CALL_7
0x40018b9	          0x4801d0	                            add rax, rdx	       711	vtls.c	FUNCTION_31	IF_2	CALL_7
0x40018bc	          0x488b00	                    mov rax, qword [rax]	       711	vtls.c	FUNCTION_31	IF_2	CALL_7
0x40018bf	          0x4889c7	                            mov rdi, rax	       711	vtls.c	FUNCTION_31	IF_2	CALL_7
0x40018c2	      0xe800000000	                          call 0x40018c7	       711	vtls.c	FUNCTION_31	IF_2	CALL_7
0x40018c7	    0xc745d41b0000	           mov dword [rbp - 0x2c], 0x1b 	       712	vtls.c	FUNCTION_31	IF_2
0x40018ce	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       715	vtls.c	FUNCTION_31
0x40018d2	        0x488b4008	                mov rax, qword [rax + 8]	       715	vtls.c	FUNCTION_31
0x40018d6	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	       715	vtls.c	FUNCTION_31
0x40018d9	          0x4863d2	                         movsxd rdx, edx	       715	vtls.c	FUNCTION_31
0x40018dc	        0x48c1e203	                              shl rdx, 3	       715	vtls.c	FUNCTION_31
0x40018e0	          0x4801c2	                            add rdx, rax	       715	vtls.c	FUNCTION_31
0x40018e3	        0x488b45f8	                mov rax, qword [rbp - 8]	       715	vtls.c	FUNCTION_31
0x40018e7	          0x488902	                    mov qword [rdx], rax	       715	vtls.c	FUNCTION_31
0x40018ea	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       716	vtls.c	FUNCTION_31
0x40018ed	              0xc9	                                   leave	       717	vtls.c	FUNCTION_31
0x40018ee	              0xc3	                                     ret	       717	vtls.c	FUNCTION_31
Curl_ssl_config_matches	functions,0:ELSE,0:IF,1:SWITCH,0:FOR,0:DO,0:WHILE,0:CALL,6	94
0x4000112	              0x55	                                push rbp	        88	vtls.c	FUNCTION_1
0x4000113	          0x4889e5	                            mov rbp, rsp	        88	vtls.c	FUNCTION_1
0x4000116	        0x4883ec10	                           sub rsp, 0x10	        88	vtls.c	FUNCTION_1
0x400011a	        0x48897df8	                mov qword [rbp - 8], rdi	        88	vtls.c	FUNCTION_1
0x400011e	        0x488975f0	             mov qword [rbp - 0x10], rsi	        88	vtls.c	FUNCTION_1
0x4000122	        0x488b45f8	                mov rax, qword [rbp - 8]	        89	vtls.c	FUNCTION_1	IF_1
0x4000126	          0x488b10	                    mov rdx, qword [rax]	        89	vtls.c	FUNCTION_1	IF_1
0x4000129	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        89	vtls.c	FUNCTION_1	IF_1
0x400012d	          0x488b00	                    mov rax, qword [rax]	        89	vtls.c	FUNCTION_1	IF_1
0x4000130	          0x4839c2	                            cmp rdx, rax	        89	vtls.c	FUNCTION_1	IF_1
0x4000133	     0xf852a010000	                           jne 0x4000263	        89	vtls.c	FUNCTION_1	IF_1
0x4000139	        0x488b45f8	                mov rax, qword [rbp - 8]	        90	vtls.c	FUNCTION_1	IF_1
0x400013d	        0x488b5008	                mov rdx, qword [rax + 8]	        90	vtls.c	FUNCTION_1	IF_1
0x4000141	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        90	vtls.c	FUNCTION_1	IF_1
0x4000145	        0x488b4008	                mov rax, qword [rax + 8]	        90	vtls.c	FUNCTION_1	IF_1
0x4000149	          0x4839c2	                            cmp rdx, rax	        89	vtls.c	FUNCTION_1	IF_1
0x400014c	     0xf8511010000	                           jne 0x4000263	        89	vtls.c	FUNCTION_1	IF_1
0x4000152	        0x488b45f8	                mov rax, qword [rbp - 8]	        91	vtls.c	FUNCTION_1	IF_1
0x4000156	         0xfb65010	           movzx edx, byte [rax + 0x10] 	        91	vtls.c	FUNCTION_1	IF_1
0x400015a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        91	vtls.c	FUNCTION_1	IF_1
0x400015e	         0xfb64010	           movzx eax, byte [rax + 0x10] 	        91	vtls.c	FUNCTION_1	IF_1
0x4000162	            0x38c2	                              cmp dl, al	        90	vtls.c	FUNCTION_1	IF_1
0x4000164	     0xf85f9000000	                           jne 0x4000263	        90	vtls.c	FUNCTION_1	IF_1
0x400016a	        0x488b45f8	                mov rax, qword [rbp - 8]	        92	vtls.c	FUNCTION_1	IF_1
0x400016e	         0xfb65011	           movzx edx, byte [rax + 0x11] 	        92	vtls.c	FUNCTION_1	IF_1
0x4000172	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        92	vtls.c	FUNCTION_1	IF_1
0x4000176	         0xfb64011	           movzx eax, byte [rax + 0x11] 	        92	vtls.c	FUNCTION_1	IF_1
0x400017a	            0x38c2	                              cmp dl, al	        91	vtls.c	FUNCTION_1	IF_1
0x400017c	     0xf85e1000000	                           jne 0x4000263	        91	vtls.c	FUNCTION_1	IF_1
0x4000182	        0x488b45f8	                mov rax, qword [rbp - 8]	        93	vtls.c	FUNCTION_1	IF_1
0x4000186	         0xfb65012	           movzx edx, byte [rax + 0x12] 	        93	vtls.c	FUNCTION_1	IF_1
0x400018a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        93	vtls.c	FUNCTION_1	IF_1
0x400018e	         0xfb64012	           movzx eax, byte [rax + 0x12] 	        93	vtls.c	FUNCTION_1	IF_1
0x4000192	            0x38c2	                              cmp dl, al	        92	vtls.c	FUNCTION_1	IF_1
0x4000194	     0xf85c9000000	                           jne 0x4000263	        92	vtls.c	FUNCTION_1	IF_1
0x400019a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        94	vtls.c	FUNCTION_1	IF_1	CALL_1
0x400019e	        0x488b5018	            mov rdx, qword [rax + 0x18] 	        94	vtls.c	FUNCTION_1	IF_1	CALL_1
0x40001a2	        0x488b45f8	                mov rax, qword [rbp - 8]	        94	vtls.c	FUNCTION_1	IF_1	CALL_1
0x40001a6	        0x488b4018	            mov rax, qword [rax + 0x18] 	        94	vtls.c	FUNCTION_1	IF_1	CALL_1
0x40001aa	          0x4889d6	                            mov rsi, rdx	        94	vtls.c	FUNCTION_1	IF_1	CALL_1
0x40001ad	          0x4889c7	                            mov rdi, rax	        94	vtls.c	FUNCTION_1	IF_1	CALL_1
0x40001b0	      0xe800000000	                          call 0x40001b5	        94	vtls.c	FUNCTION_1	IF_1	CALL_1
0x40001b5	            0x85c0	                           test eax, eax	        93	vtls.c	FUNCTION_1	IF_1
0x40001b7	     0xf84a6000000	                            je 0x4000263	        93	vtls.c	FUNCTION_1	IF_1
0x40001bd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        95	vtls.c	FUNCTION_1	IF_1	CALL_2
0x40001c1	        0x488b5020	            mov rdx, qword [rax + 0x20] 	        95	vtls.c	FUNCTION_1	IF_1	CALL_2
0x40001c5	        0x488b45f8	                mov rax, qword [rbp - 8]	        95	vtls.c	FUNCTION_1	IF_1	CALL_2
0x40001c9	        0x488b4020	            mov rax, qword [rax + 0x20] 	        95	vtls.c	FUNCTION_1	IF_1	CALL_2
0x40001cd	          0x4889d6	                            mov rsi, rdx	        95	vtls.c	FUNCTION_1	IF_1	CALL_2
0x40001d0	          0x4889c7	                            mov rdi, rax	        95	vtls.c	FUNCTION_1	IF_1	CALL_2
0x40001d3	      0xe800000000	                          call 0x40001d8	        95	vtls.c	FUNCTION_1	IF_1	CALL_2
0x40001d8	            0x85c0	                           test eax, eax	        94	vtls.c	FUNCTION_1	IF_1	CALL_1
0x40001da	     0xf8483000000	                            je 0x4000263	        94	vtls.c	FUNCTION_1	IF_1	CALL_1
0x40001e0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        96	vtls.c	FUNCTION_1	IF_1	CALL_3
0x40001e4	        0x488b5028	            mov rdx, qword [rax + 0x28] 	        96	vtls.c	FUNCTION_1	IF_1	CALL_3
0x40001e8	        0x488b45f8	                mov rax, qword [rbp - 8]	        96	vtls.c	FUNCTION_1	IF_1	CALL_3
0x40001ec	        0x488b4028	            mov rax, qword [rax + 0x28] 	        96	vtls.c	FUNCTION_1	IF_1	CALL_3
0x40001f0	          0x4889d6	                            mov rsi, rdx	        96	vtls.c	FUNCTION_1	IF_1	CALL_3
0x40001f3	          0x4889c7	                            mov rdi, rax	        96	vtls.c	FUNCTION_1	IF_1	CALL_3
0x40001f6	      0xe800000000	                          call 0x40001fb	        96	vtls.c	FUNCTION_1	IF_1	CALL_3
0x40001fb	            0x85c0	                           test eax, eax	        95	vtls.c	FUNCTION_1	IF_1	CALL_2
0x40001fd	            0x7464	                            je 0x4000263	        95	vtls.c	FUNCTION_1	IF_1	CALL_2
0x40001ff	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        97	vtls.c	FUNCTION_1	IF_1	CALL_4
0x4000203	        0x488b5030	            mov rdx, qword [rax + 0x30] 	        97	vtls.c	FUNCTION_1	IF_1	CALL_4
0x4000207	        0x488b45f8	                mov rax, qword [rbp - 8]	        97	vtls.c	FUNCTION_1	IF_1	CALL_4
0x400020b	        0x488b4030	            mov rax, qword [rax + 0x30] 	        97	vtls.c	FUNCTION_1	IF_1	CALL_4
0x400020f	          0x4889d6	                            mov rsi, rdx	        97	vtls.c	FUNCTION_1	IF_1	CALL_4
0x4000212	          0x4889c7	                            mov rdi, rax	        97	vtls.c	FUNCTION_1	IF_1	CALL_4
0x4000215	      0xe800000000	                          call 0x400021a	        97	vtls.c	FUNCTION_1	IF_1	CALL_4
0x400021a	            0x85c0	                           test eax, eax	        96	vtls.c	FUNCTION_1	IF_1	CALL_3
0x400021c	            0x7445	                            je 0x4000263	        96	vtls.c	FUNCTION_1	IF_1	CALL_3
0x400021e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        98	vtls.c	FUNCTION_1	IF_1	CALL_5
0x4000222	        0x488b5038	            mov rdx, qword [rax + 0x38] 	        98	vtls.c	FUNCTION_1	IF_1	CALL_5
0x4000226	        0x488b45f8	                mov rax, qword [rbp - 8]	        98	vtls.c	FUNCTION_1	IF_1	CALL_5
0x400022a	        0x488b4038	            mov rax, qword [rax + 0x38] 	        98	vtls.c	FUNCTION_1	IF_1	CALL_5
0x400022e	          0x4889d6	                            mov rsi, rdx	        98	vtls.c	FUNCTION_1	IF_1	CALL_5
0x4000231	          0x4889c7	                            mov rdi, rax	        98	vtls.c	FUNCTION_1	IF_1	CALL_5
0x4000234	      0xe800000000	                          call 0x4000239	        98	vtls.c	FUNCTION_1	IF_1	CALL_5
0x4000239	            0x85c0	                           test eax, eax	        97	vtls.c	FUNCTION_1	IF_1	CALL_4
0x400023b	            0x7426	                            je 0x4000263	        97	vtls.c	FUNCTION_1	IF_1	CALL_4
0x400023d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        99	vtls.c	FUNCTION_1	IF_1	CALL_6
0x4000241	        0x488b5040	            mov rdx, qword [rax + 0x40] 	        99	vtls.c	FUNCTION_1	IF_1	CALL_6
0x4000245	        0x488b45f8	                mov rax, qword [rbp - 8]	        99	vtls.c	FUNCTION_1	IF_1	CALL_6
0x4000249	        0x488b4040	            mov rax, qword [rax + 0x40] 	        99	vtls.c	FUNCTION_1	IF_1	CALL_6
0x400024d	          0x4889d6	                            mov rsi, rdx	        99	vtls.c	FUNCTION_1	IF_1	CALL_6
0x4000250	          0x4889c7	                            mov rdi, rax	        99	vtls.c	FUNCTION_1	IF_1	CALL_6
0x4000253	      0xe800000000	                          call 0x4000258	        99	vtls.c	FUNCTION_1	IF_1	CALL_6
0x4000258	            0x85c0	                           test eax, eax	        98	vtls.c	FUNCTION_1	IF_1	CALL_5
0x400025a	            0x7407	                            je 0x4000263	        98	vtls.c	FUNCTION_1	IF_1	CALL_5
0x400025c	      0xb801000000	                              mov eax, 1	       100	vtls.c	FUNCTION_1	IF_1
0x4000261	            0xeb05	                           jmp 0x4000268	       100	vtls.c	FUNCTION_1	IF_1
0x4000263	      0xb800000000	                              mov eax, 0	       102	vtls.c	FUNCTION_1
0x4000268	              0xc9	                                   leave	       103	vtls.c	FUNCTION_1
0x4000269	              0xc3	                                     ret	       103	vtls.c	FUNCTION_1
Curl_none_md5sum	functions,0:ELSE,0:IF,0:SWITCH,0:FOR,0:DO,0:WHILE,0:CALL,0	32
0x400212e	              0x55	                                push rbp	      1077	vtls.c	FUNCTION_53
0x400212f	          0x4889e5	                            mov rbp, rsp	      1077	vtls.c	FUNCTION_53
0x4002132	        0x4883ec30	                           sub rsp, 0x30	      1077	vtls.c	FUNCTION_53
0x4002136	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1077	vtls.c	FUNCTION_53
0x400213a	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1077	vtls.c	FUNCTION_53
0x400213e	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1077	vtls.c	FUNCTION_53
0x4002142	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      1077	vtls.c	FUNCTION_53
0x4002146	    0x488b05000000	            mov rax, qword [0x0400214d] 	      1082	vtls.c	FUNCTION_53	CALL_1
0x400214d	          0x4889c7	                            mov rdi, rax	      1082	vtls.c	FUNCTION_53	CALL_1
0x4002150	      0xe800000000	                          call 0x4002155	      1082	vtls.c	FUNCTION_53	CALL_1
0x4002155	        0x488945f8	                mov qword [rbp - 8], rax	      1082	vtls.c	FUNCTION_53	CALL_1
0x4002159	      0x48837df800	                  cmp qword [rbp - 8], 0	      1083	vtls.c	FUNCTION_53	IF_1
0x400215e	            0x7507	                           jne 0x4002167	      1083	vtls.c	FUNCTION_53	IF_1
0x4002160	      0xb81b000000	                           mov eax, 0x1b	      1084	vtls.c	FUNCTION_53	IF_1
0x4002165	            0xeb39	                           jmp 0x40021a0	      1084	vtls.c	FUNCTION_53	IF_1
0x4002167	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1085	vtls.c	FUNCTION_53	CALL_3
0x400216b	          0x4889c7	                            mov rdi, rax	      1085	vtls.c	FUNCTION_53	CALL_3
0x400216e	      0xe800000000	                          call 0x4002173	      1085	vtls.c	FUNCTION_53	CALL_3
0x4002173	            0x89c2	                            mov edx, eax	      1085	vtls.c	FUNCTION_53	CALL_3
0x4002175	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1085	vtls.c	FUNCTION_53	CALL_3
0x4002179	        0x488b45f8	                mov rax, qword [rbp - 8]	      1085	vtls.c	FUNCTION_53	CALL_3
0x400217d	          0x4889ce	                            mov rsi, rcx	      1085	vtls.c	FUNCTION_53	CALL_3
0x4002180	          0x4889c7	                            mov rdi, rax	      1085	vtls.c	FUNCTION_53	CALL_3
0x4002183	      0xe800000000	                          call 0x4002188	      1085	vtls.c	FUNCTION_53	CALL_3
0x4002188	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1086	vtls.c	FUNCTION_53	CALL_4
0x400218c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1086	vtls.c	FUNCTION_53	CALL_4
0x4002190	          0x4889d6	                            mov rsi, rdx	      1086	vtls.c	FUNCTION_53	CALL_4
0x4002193	          0x4889c7	                            mov rdi, rax	      1086	vtls.c	FUNCTION_53	CALL_4
0x4002196	      0xe800000000	                          call 0x400219b	      1086	vtls.c	FUNCTION_53	CALL_4
0x400219b	      0xb800000000	                              mov eax, 0	      1087	vtls.c	FUNCTION_53
0x40021a0	              0xc9	                                   leave	      1088	vtls.c	FUNCTION_53
0x40021a1	              0xc3	                                     ret	      1088	vtls.c	FUNCTION_53
Curl_multissl_close	functions,0:ELSE,0:IF,1:SWITCH,0:FOR,0:DO,0:WHILE,0:CALL,2	20
0x400228d	              0x55	                                push rbp	      1134	vtls.c	FUNCTION_59
0x400228e	          0x4889e5	                            mov rbp, rsp	      1134	vtls.c	FUNCTION_59
0x4002291	        0x4883ec10	                           sub rsp, 0x10	      1134	vtls.c	FUNCTION_59
0x4002295	        0x48897df8	                mov qword [rbp - 8], rdi	      1134	vtls.c	FUNCTION_59
0x4002299	          0x8975f4	              mov dword [rbp - 0xc], esi	      1134	vtls.c	FUNCTION_59
0x400229c	      0xbf00000000	                              mov edi, 0	      1135	vtls.c	FUNCTION_59	IF_1	CALL_1
0x40022a1	      0xe8f1010000	                  call sym.multissl_init	      1135	vtls.c	FUNCTION_59	IF_1	CALL_1
0x40022a6	            0x85c0	                           test eax, eax	      1135	vtls.c	FUNCTION_59	IF_1	CALL_1
0x40022a8	            0x751b	                           jne 0x40022c5	      1135	vtls.c	FUNCTION_59	IF_1	CALL_1
0x40022aa	    0x488b05000000	            mov rax, qword [0x040022b1] 	      1137	vtls.c	FUNCTION_59	CALL_2
0x40022b1	        0x488b4078	            mov rax, qword [rax + 0x78] 	      1137	vtls.c	FUNCTION_59	CALL_2
0x40022b5	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      1137	vtls.c	FUNCTION_59	CALL_2
0x40022b8	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1137	vtls.c	FUNCTION_59	CALL_2
0x40022bc	            0x89ce	                            mov esi, ecx	      1137	vtls.c	FUNCTION_59	CALL_2
0x40022be	          0x4889d7	                            mov rdi, rdx	      1137	vtls.c	FUNCTION_59	CALL_2
0x40022c1	            0xffd0	                                call rax	      1137	vtls.c	FUNCTION_59	CALL_2
0x40022c3	            0xeb01	                           jmp 0x40022c6	      1137	vtls.c	FUNCTION_59	CALL_2
0x40022c5	              0x90	                                     nop	      1136	vtls.c	FUNCTION_59	IF_1
0x40022c6	              0xc9	                                   leave	      1138	vtls.c	FUNCTION_59
0x40022c7	              0xc3	                                     ret	      1138	vtls.c	FUNCTION_59
Curl_multissl_connect	functions,0:ELSE,0:IF,1:SWITCH,0:FOR,0:DO,0:WHILE,0:CALL,2	20
0x40021ca	              0x55	                                push rbp	      1111	vtls.c	FUNCTION_56
0x40021cb	          0x4889e5	                            mov rbp, rsp	      1111	vtls.c	FUNCTION_56
0x40021ce	        0x4883ec10	                           sub rsp, 0x10	      1111	vtls.c	FUNCTION_56
0x40021d2	        0x48897df8	                mov qword [rbp - 8], rdi	      1111	vtls.c	FUNCTION_56
0x40021d6	          0x8975f4	              mov dword [rbp - 0xc], esi	      1111	vtls.c	FUNCTION_56
0x40021d9	      0xbf00000000	                              mov edi, 0	      1112	vtls.c	FUNCTION_56	IF_1	CALL_1
0x40021de	      0xe8b4020000	                  call sym.multissl_init	      1112	vtls.c	FUNCTION_56	IF_1	CALL_1
0x40021e3	            0x85c0	                           test eax, eax	      1112	vtls.c	FUNCTION_56	IF_1	CALL_1
0x40021e5	            0x7407	                            je 0x40021ee	      1112	vtls.c	FUNCTION_56	IF_1	CALL_1
0x40021e7	      0xb802000000	                              mov eax, 2	      1113	vtls.c	FUNCTION_56	IF_1
0x40021ec	            0xeb19	                           jmp 0x4002207	      1113	vtls.c	FUNCTION_56	IF_1
0x40021ee	    0x488b05000000	            mov rax, qword [0x040021f5] 	      1114	vtls.c	FUNCTION_56	CALL_2
0x40021f5	        0x488b4060	            mov rax, qword [rax + 0x60] 	      1114	vtls.c	FUNCTION_56	CALL_2
0x40021f9	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      1114	vtls.c	FUNCTION_56	CALL_2
0x40021fc	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1114	vtls.c	FUNCTION_56	CALL_2
0x4002200	            0x89ce	                            mov esi, ecx	      1114	vtls.c	FUNCTION_56	CALL_2
0x4002202	          0x4889d7	                            mov rdi, rdx	      1114	vtls.c	FUNCTION_56	CALL_2
0x4002205	            0xffd0	                                call rax	      1114	vtls.c	FUNCTION_56	CALL_2
0x4002207	              0xc9	                                   leave	      1115	vtls.c	FUNCTION_56
0x4002208	              0xc3	                                     ret	      1115	vtls.c	FUNCTION_56
Curl_none_init	functions,0:ELSE,0:IF,0:SWITCH,0:FOR,0:DO,0:WHILE,0:CALL,0	5
0x4002075	              0x55	                                push rbp	       995	vtls.c	FUNCTION_40
0x4002076	          0x4889e5	                            mov rbp, rsp	       995	vtls.c	FUNCTION_40
0x4002079	      0xb801000000	                              mov eax, 1	       996	vtls.c	FUNCTION_40
0x400207e	              0x5d	                                 pop rbp	       997	vtls.c	FUNCTION_40
0x400207f	              0xc3	                                     ret	       997	vtls.c	FUNCTION_40
Curl_free_primary_ssl_config	functions,0:ELSE,0:IF,0:SWITCH,0:FOR,0:DO,0:WHILE,0:CALL,6	55
0x40004c1	              0x55	                                push rbp	       127	vtls.c	FUNCTION_3
0x40004c2	          0x4889e5	                            mov rbp, rsp	       127	vtls.c	FUNCTION_3
0x40004c5	        0x4883ec10	                           sub rsp, 0x10	       127	vtls.c	FUNCTION_3
0x40004c9	        0x48897df8	                mov qword [rbp - 8], rdi	       127	vtls.c	FUNCTION_3
0x40004cd	    0x488b05000000	            mov rax, qword [0x040004d4] 	       128	vtls.c	FUNCTION_3	CALL_1
0x40004d4	          0x488b00	                    mov rax, qword [rax]	       128	vtls.c	FUNCTION_3	CALL_1
0x40004d7	        0x488b55f8	                mov rdx, qword [rbp - 8]	       128	vtls.c	FUNCTION_3	CALL_1
0x40004db	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	       128	vtls.c	FUNCTION_3	CALL_1
0x40004df	          0x4889d7	                            mov rdi, rdx	       128	vtls.c	FUNCTION_3	CALL_1
0x40004e2	            0xffd0	                                call rax	       128	vtls.c	FUNCTION_3	CALL_1
0x40004e4	        0x488b45f8	                mov rax, qword [rbp - 8]	       128	vtls.c	FUNCTION_3	CALL_1
0x40004e8	    0x48c740180000	               mov qword [rax + 0x18], 0	       128	vtls.c	FUNCTION_3	CALL_1
0x40004f0	    0x488b05000000	            mov rax, qword [0x040004f7] 	       129	vtls.c	FUNCTION_3	CALL_2
0x40004f7	          0x488b00	                    mov rax, qword [rax]	       129	vtls.c	FUNCTION_3	CALL_2
0x40004fa	        0x488b55f8	                mov rdx, qword [rbp - 8]	       129	vtls.c	FUNCTION_3	CALL_2
0x40004fe	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	       129	vtls.c	FUNCTION_3	CALL_2
0x4000502	          0x4889d7	                            mov rdi, rdx	       129	vtls.c	FUNCTION_3	CALL_2
0x4000505	            0xffd0	                                call rax	       129	vtls.c	FUNCTION_3	CALL_2
0x4000507	        0x488b45f8	                mov rax, qword [rbp - 8]	       129	vtls.c	FUNCTION_3	CALL_2
0x400050b	    0x48c740200000	               mov qword [rax + 0x20], 0	       129	vtls.c	FUNCTION_3	CALL_2
0x4000513	    0x488b05000000	            mov rax, qword [0x0400051a] 	       130	vtls.c	FUNCTION_3	CALL_3
0x400051a	          0x488b00	                    mov rax, qword [rax]	       130	vtls.c	FUNCTION_3	CALL_3
0x400051d	        0x488b55f8	                mov rdx, qword [rbp - 8]	       130	vtls.c	FUNCTION_3	CALL_3
0x4000521	        0x488b5228	            mov rdx, qword [rdx + 0x28] 	       130	vtls.c	FUNCTION_3	CALL_3
0x4000525	          0x4889d7	                            mov rdi, rdx	       130	vtls.c	FUNCTION_3	CALL_3
0x4000528	            0xffd0	                                call rax	       130	vtls.c	FUNCTION_3	CALL_3
0x400052a	        0x488b45f8	                mov rax, qword [rbp - 8]	       130	vtls.c	FUNCTION_3	CALL_3
0x400052e	    0x48c740280000	               mov qword [rax + 0x28], 0	       130	vtls.c	FUNCTION_3	CALL_3
0x4000536	    0x488b05000000	            mov rax, qword [0x0400053d] 	       131	vtls.c	FUNCTION_3	CALL_4
0x400053d	          0x488b00	                    mov rax, qword [rax]	       131	vtls.c	FUNCTION_3	CALL_4
0x4000540	        0x488b55f8	                mov rdx, qword [rbp - 8]	       131	vtls.c	FUNCTION_3	CALL_4
0x4000544	        0x488b5230	            mov rdx, qword [rdx + 0x30] 	       131	vtls.c	FUNCTION_3	CALL_4
0x4000548	          0x4889d7	                            mov rdi, rdx	       131	vtls.c	FUNCTION_3	CALL_4
0x400054b	            0xffd0	                                call rax	       131	vtls.c	FUNCTION_3	CALL_4
0x400054d	        0x488b45f8	                mov rax, qword [rbp - 8]	       131	vtls.c	FUNCTION_3	CALL_4
0x4000551	    0x48c740300000	               mov qword [rax + 0x30], 0	       131	vtls.c	FUNCTION_3	CALL_4
0x4000559	    0x488b05000000	            mov rax, qword [0x04000560] 	       132	vtls.c	FUNCTION_3	CALL_5
0x4000560	          0x488b00	                    mov rax, qword [rax]	       132	vtls.c	FUNCTION_3	CALL_5
0x4000563	        0x488b55f8	                mov rdx, qword [rbp - 8]	       132	vtls.c	FUNCTION_3	CALL_5
0x4000567	        0x488b5238	            mov rdx, qword [rdx + 0x38] 	       132	vtls.c	FUNCTION_3	CALL_5
0x400056b	          0x4889d7	                            mov rdi, rdx	       132	vtls.c	FUNCTION_3	CALL_5
0x400056e	            0xffd0	                                call rax	       132	vtls.c	FUNCTION_3	CALL_5
0x4000570	        0x488b45f8	                mov rax, qword [rbp - 8]	       132	vtls.c	FUNCTION_3	CALL_5
0x4000574	    0x48c740380000	               mov qword [rax + 0x38], 0	       132	vtls.c	FUNCTION_3	CALL_5
0x400057c	    0x488b05000000	            mov rax, qword [0x04000583] 	       133	vtls.c	FUNCTION_3	CALL_6
0x4000583	          0x488b00	                    mov rax, qword [rax]	       133	vtls.c	FUNCTION_3	CALL_6
0x4000586	        0x488b55f8	                mov rdx, qword [rbp - 8]	       133	vtls.c	FUNCTION_3	CALL_6
0x400058a	        0x488b5240	            mov rdx, qword [rdx + 0x40] 	       133	vtls.c	FUNCTION_3	CALL_6
0x400058e	          0x4889d7	                            mov rdi, rdx	       133	vtls.c	FUNCTION_3	CALL_6
0x4000591	            0xffd0	                                call rax	       133	vtls.c	FUNCTION_3	CALL_6
0x4000593	        0x488b45f8	                mov rax, qword [rbp - 8]	       133	vtls.c	FUNCTION_3	CALL_6
0x4000597	    0x48c740400000	               mov qword [rax + 0x40], 0	       133	vtls.c	FUNCTION_3	CALL_6
0x400059f	              0x90	                                     nop	       134	vtls.c	FUNCTION_3
0x40005a0	              0xc9	                                   leave	       134	vtls.c	FUNCTION_3
0x40005a1	              0xc3	                                     ret	       134	vtls.c	FUNCTION_3
ssl_prefs_check	functions,0:ELSE,0:IF,2:SWITCH,1:FOR,0:DO,0:WHILE,0:CALL,2	40
0x400060d	              0x55	                                push rbp	       183	vtls.c	FUNCTION_7
0x400060e	          0x4889e5	                            mov rbp, rsp	       183	vtls.c	FUNCTION_7
0x4000611	        0x4883ec20	                           sub rsp, 0x20	       183	vtls.c	FUNCTION_7
0x4000615	        0x48897de8	             mov qword [rbp - 0x18], rdi	       183	vtls.c	FUNCTION_7
0x4000619	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       185	vtls.c	FUNCTION_7
0x400061d	    0x488b80e80500	           mov rax, qword [rax + 0x5e8] 	       185	vtls.c	FUNCTION_7
0x4000624	        0x488945f8	                mov qword [rbp - 8], rax	       185	vtls.c	FUNCTION_7
0x4000628	      0x48837df800	                  cmp qword [rbp - 8], 0	       186	vtls.c	FUNCTION_7	IF_1
0x400062d	            0x7807	                            js 0x4000636	       186	vtls.c	FUNCTION_7	IF_1
0x400062f	      0x48837df807	                  cmp qword [rbp - 8], 7	       186	vtls.c	FUNCTION_7	IF_1
0x4000634	            0x7e1f	                           jle 0x4000655	       186	vtls.c	FUNCTION_7	IF_1
0x4000636	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       187	vtls.c	FUNCTION_7	IF_1	CALL_1
0x400063a	    0x488d35000000	                   lea rsi, [0x04000641]	       187	vtls.c	FUNCTION_7	IF_1	CALL_1
0x4000641	          0x4889c7	                            mov rdi, rax	       187	vtls.c	FUNCTION_7	IF_1	CALL_1
0x4000644	      0xb800000000	                              mov eax, 0	       187	vtls.c	FUNCTION_7	IF_1	CALL_1
0x4000649	      0xe800000000	                          call 0x400064e	       187	vtls.c	FUNCTION_7	IF_1	CALL_1
0x400064e	      0xb800000000	                              mov eax, 0	       188	vtls.c	FUNCTION_7	IF_1
0x4000653	            0xeb52	                           jmp 0x40006a7	       188	vtls.c	FUNCTION_7	IF_1
0x4000655	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       191	vtls.c	FUNCTION_7	SWITCH_1
0x4000659	    0x488b80f00500	           mov rax, qword [rax + 0x5f0] 	       191	vtls.c	FUNCTION_7	SWITCH_1
0x4000660	          0x4885c0	                           test rax, rax	       191	vtls.c	FUNCTION_7	SWITCH_1
0x4000663	            0x743c	                            je 0x40006a1	       191	vtls.c	FUNCTION_7	SWITCH_1
0x4000665	    0x483d00000100	                        cmp rax, 0x10000	       191	vtls.c	FUNCTION_7	SWITCH_1
0x400066b	            0x7434	                            je 0x40006a1	       191	vtls.c	FUNCTION_7	SWITCH_1
0x400066d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       197	vtls.c	FUNCTION_7	SWITCH_1	IF_2
0x4000671	    0x488b80f00500	           mov rax, qword [rax + 0x5f0] 	       197	vtls.c	FUNCTION_7	SWITCH_1	IF_2
0x4000678	        0x48c1f810	                           sar rax, 0x10	       197	vtls.c	FUNCTION_7	SWITCH_1	IF_2
0x400067c	        0x483b45f8	                cmp rax, qword [rbp - 8]	       197	vtls.c	FUNCTION_7	SWITCH_1	IF_2
0x4000680	            0x7d20	                           jge 0x40006a2	       197	vtls.c	FUNCTION_7	SWITCH_1	IF_2
0x4000682	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       198	vtls.c	FUNCTION_7	SWITCH_1	IF_2	CALL_2
0x4000686	    0x488d35000000	                   lea rsi, [0x0400068d]	       198	vtls.c	FUNCTION_7	SWITCH_1	IF_2	CALL_2
0x400068d	          0x4889c7	                            mov rdi, rax	       198	vtls.c	FUNCTION_7	SWITCH_1	IF_2	CALL_2
0x4000690	      0xb800000000	                              mov eax, 0	       198	vtls.c	FUNCTION_7	SWITCH_1	IF_2	CALL_2
0x4000695	      0xe800000000	                          call 0x400069a	       198	vtls.c	FUNCTION_7	SWITCH_1	IF_2	CALL_2
0x400069a	      0xb800000000	                              mov eax, 0	       199	vtls.c	FUNCTION_7	SWITCH_1	IF_2
0x400069f	            0xeb06	                           jmp 0x40006a7	       199	vtls.c	FUNCTION_7	SWITCH_1	IF_2
0x40006a1	              0x90	                                     nop	       194	vtls.c	FUNCTION_7	SWITCH_1
0x40006a2	      0xb801000000	                              mov eax, 1	       203	vtls.c	FUNCTION_7
0x40006a7	              0xc9	                                   leave	       204	vtls.c	FUNCTION_7
0x40006a8	              0xc3	                                     ret	       204	vtls.c	FUNCTION_7
Curl_ssl_addsessionid	functions,0:ELSE,4:IF,8:SWITCH,0:FOR,1:DO,0:WHILE,0:CALL,12	241
0x4000f10	              0x55	                                push rbp	       411	vtls.c	FUNCTION_16
0x4000f11	          0x4889e5	                            mov rbp, rsp	       411	vtls.c	FUNCTION_16
0x4000f14	        0x4883ec70	                           sub rsp, 0x70	       411	vtls.c	FUNCTION_16
0x4000f18	        0x48897da8	             mov qword [rbp - 0x58], rdi	       411	vtls.c	FUNCTION_16
0x4000f1c	        0x488975a0	             mov qword [rbp - 0x60], rsi	       411	vtls.c	FUNCTION_16
0x4000f20	        0x48895598	             mov qword [rbp - 0x68], rdx	       411	vtls.c	FUNCTION_16
0x4000f24	          0x894d94	             mov dword [rbp - 0x6c], ecx	       411	vtls.c	FUNCTION_16
0x4000f27	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       413	vtls.c	FUNCTION_16
0x4000f2b	          0x488b00	                    mov rax, qword [rax]	       413	vtls.c	FUNCTION_16
0x4000f2e	        0x488945e8	             mov qword [rbp - 0x18], rax	       413	vtls.c	FUNCTION_16
0x4000f32	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       414	vtls.c	FUNCTION_16
0x4000f36	    0x488b80504d00	          mov rax, qword [rax + 0x4d50] 	       414	vtls.c	FUNCTION_16
0x4000f3d	        0x488945c8	             mov qword [rbp - 0x38], rax	       414	vtls.c	FUNCTION_16
0x4000f41	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       415	vtls.c	FUNCTION_16
0x4000f45	    0x488b80504d00	          mov rax, qword [rax + 0x4d50] 	       415	vtls.c	FUNCTION_16
0x4000f4c	        0x488b4028	            mov rax, qword [rax + 0x28] 	       415	vtls.c	FUNCTION_16
0x4000f50	        0x488945d0	             mov qword [rbp - 0x30], rax	       415	vtls.c	FUNCTION_16
0x4000f54	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       420	vtls.c	FUNCTION_16	CALL_1
0x4000f58	    0x8b8078010000	           mov eax, dword [rax + 0x178] 	       420	vtls.c	FUNCTION_16	CALL_1
0x4000f5e	          0x83f802	                              cmp eax, 2	       420	vtls.c	FUNCTION_16	CALL_1
0x4000f61	            0x751f	                           jne 0x4000f82	       420	vtls.c	FUNCTION_16	CALL_1
0x4000f63	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       420	vtls.c	FUNCTION_16	CALL_1
0x4000f67	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       420	vtls.c	FUNCTION_16	CALL_1
0x4000f6a	            0x4898	                                    cdqe	       420	vtls.c	FUNCTION_16	CALL_1
0x4000f6c	     0xfb68402b903	    movzx eax, byte [rdx + rax + 0x3b9] 	       420	vtls.c	FUNCTION_16	CALL_1
0x4000f74	          0x83f001	                              xor eax, 1	       420	vtls.c	FUNCTION_16	CALL_1
0x4000f77	            0x84c0	                             test al, al	       420	vtls.c	FUNCTION_16	CALL_1
0x4000f79	            0x7407	                            je 0x4000f82	       420	vtls.c	FUNCTION_16	CALL_1
0x4000f7b	      0xb801000000	                              mov eax, 1	       420	vtls.c	FUNCTION_16	CALL_1
0x4000f80	            0xeb05	                           jmp 0x4000f87	       420	vtls.c	FUNCTION_16	CALL_1
0x4000f82	      0xb800000000	                              mov eax, 0	       420	vtls.c	FUNCTION_16	CALL_1
0x4000f87	          0x8845bb	               mov byte [rbp - 0x45], al	       420	vtls.c	FUNCTION_16	CALL_1
0x4000f8a	        0x8065bb01	                and byte [rbp - 0x45], 1	       420	vtls.c	FUNCTION_16	CALL_1
0x4000f8e	        0x807dbb00	                cmp byte [rbp - 0x45], 0	       422	vtls.c	FUNCTION_16
0x4000f92	            0x740c	                            je 0x4000fa0	       422	vtls.c	FUNCTION_16
0x4000f94	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       422	vtls.c	FUNCTION_16
0x4000f98	    0x480548030000	                          add rax, 0x348	       422	vtls.c	FUNCTION_16
0x4000f9e	            0xeb0a	                           jmp 0x4000faa	       422	vtls.c	FUNCTION_16
0x4000fa0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       422	vtls.c	FUNCTION_16
0x4000fa4	    0x4805f8020000	                          add rax, 0x2f8	       422	vtls.c	FUNCTION_16
0x4000faa	        0x488945f0	             mov qword [rbp - 0x10], rax	       421	vtls.c	FUNCTION_16
0x4000fae	    0x488b05000000	            mov rax, qword [0x04000fb5] 	       427	vtls.c	FUNCTION_16	CALL_4
0x4000fb5	          0x488b10	                    mov rdx, qword [rax]	       427	vtls.c	FUNCTION_16	CALL_4
0x4000fb8	        0x807dbb00	                cmp byte [rbp - 0x45], 0	       427	vtls.c	FUNCTION_16	CALL_4
0x4000fbc	            0x740d	                            je 0x4000fcb	       427	vtls.c	FUNCTION_16	CALL_4
0x4000fbe	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       427	vtls.c	FUNCTION_16	CALL_4
0x4000fc2	    0x488b80600100	           mov rax, qword [rax + 0x160] 	       427	vtls.c	FUNCTION_16	CALL_4
0x4000fc9	            0xeb0b	                           jmp 0x4000fd6	       427	vtls.c	FUNCTION_16	CALL_4
0x4000fcb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       427	vtls.c	FUNCTION_16	CALL_4
0x4000fcf	    0x488b80d80000	            mov rax, qword [rax + 0xd8] 	       427	vtls.c	FUNCTION_16	CALL_4
0x4000fd6	          0x4889c7	                            mov rdi, rax	       427	vtls.c	FUNCTION_16	CALL_4
0x4000fd9	            0xffd2	                                call rdx	       427	vtls.c	FUNCTION_16	CALL_4
0x4000fdb	        0x488945f8	                mov qword [rbp - 8], rax	       427	vtls.c	FUNCTION_16	CALL_4
0x4000fdf	      0x48837df800	                  cmp qword [rbp - 8], 0	       428	vtls.c	FUNCTION_16	IF_1
0x4000fe4	            0x750a	                           jne 0x4000ff0	       428	vtls.c	FUNCTION_16	IF_1
0x4000fe6	      0xb81b000000	                           mov eax, 0x1b	       429	vtls.c	FUNCTION_16	IF_1
0x4000feb	      0xe9d8020000	                           jmp 0x40012c8	       429	vtls.c	FUNCTION_16	IF_1
0x4000ff0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       431	vtls.c	FUNCTION_16	IF_2
0x4000ff4	     0xfb6809b0300	          movzx eax, byte [rax + 0x39b] 	       431	vtls.c	FUNCTION_16	IF_2
0x4000ffb	            0x84c0	                             test al, al	       431	vtls.c	FUNCTION_16	IF_2
0x4000ffd	            0x7442	                            je 0x4001041	       431	vtls.c	FUNCTION_16	IF_2
0x4000fff	    0x488b05000000	            mov rax, qword [0x04001006] 	       432	vtls.c	FUNCTION_16	IF_2	CALL_5
0x4001006	          0x488b00	                    mov rax, qword [rax]	       432	vtls.c	FUNCTION_16	IF_2	CALL_5
0x4001009	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       432	vtls.c	FUNCTION_16	IF_2	CALL_5
0x400100d	    0x488b92000100	           mov rdx, qword [rdx + 0x100] 	       432	vtls.c	FUNCTION_16	IF_2	CALL_5
0x4001014	          0x4889d7	                            mov rdi, rdx	       432	vtls.c	FUNCTION_16	IF_2	CALL_5
0x4001017	            0xffd0	                                call rax	       432	vtls.c	FUNCTION_16	IF_2	CALL_5
0x4001019	        0x488945d8	             mov qword [rbp - 0x28], rax	       432	vtls.c	FUNCTION_16	IF_2	CALL_5
0x400101d	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       433	vtls.c	FUNCTION_16	IF_2	IF_3
0x4001022	            0x7525	                           jne 0x4001049	       433	vtls.c	FUNCTION_16	IF_2	IF_3
0x4001024	    0x488b05000000	            mov rax, qword [0x0400102b] 	       434	vtls.c	FUNCTION_16	IF_2	IF_3	CALL_6
0x400102b	          0x488b00	                    mov rax, qword [rax]	       434	vtls.c	FUNCTION_16	IF_2	IF_3	CALL_6
0x400102e	        0x488b55f8	                mov rdx, qword [rbp - 8]	       434	vtls.c	FUNCTION_16	IF_2	IF_3	CALL_6
0x4001032	          0x4889d7	                            mov rdi, rdx	       434	vtls.c	FUNCTION_16	IF_2	IF_3	CALL_6
0x4001035	            0xffd0	                                call rax	       434	vtls.c	FUNCTION_16	IF_2	IF_3	CALL_6
0x4001037	      0xb81b000000	                           mov eax, 0x1b	       435	vtls.c	FUNCTION_16	IF_2	IF_3
0x400103c	      0xe987020000	                           jmp 0x40012c8	       435	vtls.c	FUNCTION_16	IF_2	IF_3
0x4001041	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       439	vtls.c	FUNCTION_16	ELSE_1
0x4001049	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       441	vtls.c	FUNCTION_16	IF_4
0x400104d	     0xfb6809c0300	          movzx eax, byte [rax + 0x39c] 	       441	vtls.c	FUNCTION_16	IF_4
0x4001054	            0x84c0	                             test al, al	       441	vtls.c	FUNCTION_16	IF_4
0x4001056	            0x740f	                            je 0x4001067	       441	vtls.c	FUNCTION_16	IF_4
0x4001058	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       442	vtls.c	FUNCTION_16	IF_4
0x400105c	    0x8b809c010000	           mov eax, dword [rax + 0x19c] 	       442	vtls.c	FUNCTION_16	IF_4
0x4001062	          0x8945bc	             mov dword [rbp - 0x44], eax	       442	vtls.c	FUNCTION_16	IF_4
0x4001065	            0xeb07	                           jmp 0x400106e	       442	vtls.c	FUNCTION_16	IF_4
0x4001067	    0xc745bcffffff	     mov dword [rbp - 0x44], 0xffffffff 	       444	vtls.c	FUNCTION_16	ELSE_2
0x400106e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       450	vtls.c	FUNCTION_16	ELSE_2	IF_5
0x4001072	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	       450	vtls.c	FUNCTION_16	ELSE_2	IF_5
0x4001079	          0x4885c0	                           test rax, rax	       450	vtls.c	FUNCTION_16	ELSE_2	IF_5
0x400107c	            0x742b	                            je 0x40010a9	       450	vtls.c	FUNCTION_16	ELSE_2	IF_5
0x400107e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       450	vtls.c	FUNCTION_16	ELSE_2	IF_5
0x4001082	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	       450	vtls.c	FUNCTION_16	ELSE_2	IF_5
0x4001089	            0x8b00	                    mov eax, dword [rax]	       450	vtls.c	FUNCTION_16	ELSE_2	IF_5
0x400108b	          0x83e010	                           and eax, 0x10	       450	vtls.c	FUNCTION_16	ELSE_2	IF_5
0x400108e	            0x85c0	                           test eax, eax	       450	vtls.c	FUNCTION_16	ELSE_2	IF_5
0x4001090	            0x7417	                            je 0x40010a9	       450	vtls.c	FUNCTION_16	ELSE_2	IF_5
0x4001092	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       451	vtls.c	FUNCTION_16	ELSE_2	IF_5
0x4001096	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	       451	vtls.c	FUNCTION_16	ELSE_2	IF_5
0x400109d	    0x4805c0000000	                           add rax, 0xc0	       451	vtls.c	FUNCTION_16	ELSE_2	IF_5
0x40010a3	        0x488945e0	             mov qword [rbp - 0x20], rax	       451	vtls.c	FUNCTION_16	ELSE_2	IF_5
0x40010a7	            0xeb0e	                           jmp 0x40010b7	       451	vtls.c	FUNCTION_16	ELSE_2	IF_5
0x40010a9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       454	vtls.c	FUNCTION_16	ELSE_3
0x40010ad	    0x4805584d0000	                         add rax, 0x4d58	       454	vtls.c	FUNCTION_16	ELSE_3
0x40010b3	        0x488945e0	             mov qword [rbp - 0x20], rax	       454	vtls.c	FUNCTION_16	ELSE_3
0x40010b7	    0x48c745c00100	               mov qword [rbp - 0x40], 1	       458	vtls.c	FUNCTION_16	FOR_1
0x40010bf	            0xeb7b	                           jmp 0x400113c	       458	vtls.c	FUNCTION_16	FOR_1
0x40010c1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       460	vtls.c	FUNCTION_16	FOR_1	IF_6
0x40010c5	    0x488b90504d00	          mov rdx, qword [rax + 0x4d50] 	       460	vtls.c	FUNCTION_16	FOR_1	IF_6
0x40010cc	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       460	vtls.c	FUNCTION_16	FOR_1	IF_6
0x40010d0	        0x48c1e003	                              shl rax, 3	       460	vtls.c	FUNCTION_16	FOR_1	IF_6
0x40010d4	          0x4889c1	                            mov rcx, rax	       460	vtls.c	FUNCTION_16	FOR_1	IF_6
0x40010d7	        0x48c1e104	                              shl rcx, 4	       460	vtls.c	FUNCTION_16	FOR_1	IF_6
0x40010db	          0x4801c8	                            add rax, rcx	       460	vtls.c	FUNCTION_16	FOR_1	IF_6
0x40010de	          0x4801d0	                            add rax, rdx	       460	vtls.c	FUNCTION_16	FOR_1	IF_6
0x40010e1	        0x488b4028	            mov rax, qword [rax + 0x28] 	       460	vtls.c	FUNCTION_16	FOR_1	IF_6
0x40010e5	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	       460	vtls.c	FUNCTION_16	FOR_1	IF_6
0x40010e9	            0x7d4c	                           jge 0x4001137	       460	vtls.c	FUNCTION_16	FOR_1	IF_6
0x40010eb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       461	vtls.c	FUNCTION_16	FOR_1	IF_6
0x40010ef	    0x488b90504d00	          mov rdx, qword [rax + 0x4d50] 	       461	vtls.c	FUNCTION_16	FOR_1	IF_6
0x40010f6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       461	vtls.c	FUNCTION_16	FOR_1	IF_6
0x40010fa	        0x48c1e003	                              shl rax, 3	       461	vtls.c	FUNCTION_16	FOR_1	IF_6
0x40010fe	          0x4889c1	                            mov rcx, rax	       461	vtls.c	FUNCTION_16	FOR_1	IF_6
0x4001101	        0x48c1e104	                              shl rcx, 4	       461	vtls.c	FUNCTION_16	FOR_1	IF_6
0x4001105	          0x4801c8	                            add rax, rcx	       461	vtls.c	FUNCTION_16	FOR_1	IF_6
0x4001108	          0x4801d0	                            add rax, rdx	       461	vtls.c	FUNCTION_16	FOR_1	IF_6
0x400110b	        0x488b4028	            mov rax, qword [rax + 0x28] 	       461	vtls.c	FUNCTION_16	FOR_1	IF_6
0x400110f	        0x488945d0	             mov qword [rbp - 0x30], rax	       461	vtls.c	FUNCTION_16	FOR_1	IF_6
0x4001113	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       462	vtls.c	FUNCTION_16	FOR_1	IF_6
0x4001117	    0x488b90504d00	          mov rdx, qword [rax + 0x4d50] 	       462	vtls.c	FUNCTION_16	FOR_1	IF_6
0x400111e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       462	vtls.c	FUNCTION_16	FOR_1	IF_6
0x4001122	        0x48c1e003	                              shl rax, 3	       462	vtls.c	FUNCTION_16	FOR_1	IF_6
0x4001126	          0x4889c1	                            mov rcx, rax	       462	vtls.c	FUNCTION_16	FOR_1	IF_6
0x4001129	        0x48c1e104	                              shl rcx, 4	       462	vtls.c	FUNCTION_16	FOR_1	IF_6
0x400112d	          0x4801c8	                            add rax, rcx	       462	vtls.c	FUNCTION_16	FOR_1	IF_6
0x4001130	          0x4801d0	                            add rax, rdx	       462	vtls.c	FUNCTION_16	FOR_1	IF_6
0x4001133	        0x488945c8	             mov qword [rbp - 0x38], rax	       462	vtls.c	FUNCTION_16	FOR_1	IF_6
0x4001137	      0x488345c001	               add qword [rbp - 0x40], 1	       459	vtls.c	FUNCTION_16	FOR_1
0x400113c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       458	vtls.c	FUNCTION_16	FOR_1
0x4001140	    0x488b80780700	           mov rax, qword [rax + 0x778] 	       458	vtls.c	FUNCTION_16	FOR_1
0x4001147	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	       458	vtls.c	FUNCTION_16	FOR_1
0x400114b	            0x762d	                           jbe 0x400117a	       458	vtls.c	FUNCTION_16	FOR_1
0x400114d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       459	vtls.c	FUNCTION_16	FOR_1
0x4001151	    0x488b90504d00	          mov rdx, qword [rax + 0x4d50] 	       459	vtls.c	FUNCTION_16	FOR_1
0x4001158	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       459	vtls.c	FUNCTION_16	FOR_1
0x400115c	        0x48c1e003	                              shl rax, 3	       459	vtls.c	FUNCTION_16	FOR_1
0x4001160	          0x4889c1	                            mov rcx, rax	       459	vtls.c	FUNCTION_16	FOR_1
0x4001163	        0x48c1e104	                              shl rcx, 4	       459	vtls.c	FUNCTION_16	FOR_1
0x4001167	          0x4801c8	                            add rax, rcx	       459	vtls.c	FUNCTION_16	FOR_1
0x400116a	          0x4801d0	                            add rax, rdx	       459	vtls.c	FUNCTION_16	FOR_1
0x400116d	        0x488b4018	            mov rax, qword [rax + 0x18] 	       459	vtls.c	FUNCTION_16	FOR_1
0x4001171	          0x4885c0	                           test rax, rax	       458	vtls.c	FUNCTION_16	FOR_1
0x4001174	     0xf8547ffffff	                           jne 0x40010c1	       458	vtls.c	FUNCTION_16	FOR_1
0x400117a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       465	vtls.c	FUNCTION_16	IF_7
0x400117e	    0x488b80780700	           mov rax, qword [rax + 0x778] 	       465	vtls.c	FUNCTION_16	IF_7
0x4001185	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	       465	vtls.c	FUNCTION_16	IF_7
0x4001189	            0x750e	                           jne 0x4001199	       465	vtls.c	FUNCTION_16	IF_7
0x400118b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       467	vtls.c	FUNCTION_16	CALL_7
0x400118f	          0x4889c7	                            mov rdi, rax	       467	vtls.c	FUNCTION_16	CALL_7
0x4001192	      0xe800000000	                          call 0x4001197	       467	vtls.c	FUNCTION_16	CALL_7
0x4001197	            0xeb24	                           jmp 0x40011bd	       467	vtls.c	FUNCTION_16	CALL_7
0x4001199	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       469	vtls.c	FUNCTION_16	ELSE_4
0x400119d	    0x488b90504d00	          mov rdx, qword [rax + 0x4d50] 	       469	vtls.c	FUNCTION_16	ELSE_4
0x40011a4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       469	vtls.c	FUNCTION_16	ELSE_4
0x40011a8	        0x48c1e003	                              shl rax, 3	       469	vtls.c	FUNCTION_16	ELSE_4
0x40011ac	          0x4889c1	                            mov rcx, rax	       469	vtls.c	FUNCTION_16	ELSE_4
0x40011af	        0x48c1e104	                              shl rcx, 4	       469	vtls.c	FUNCTION_16	ELSE_4
0x40011b3	          0x4801c8	                            add rax, rcx	       469	vtls.c	FUNCTION_16	ELSE_4
0x40011b6	          0x4801d0	                            add rax, rdx	       469	vtls.c	FUNCTION_16	ELSE_4
0x40011b9	        0x488945c8	             mov qword [rbp - 0x38], rax	       469	vtls.c	FUNCTION_16	ELSE_4
0x40011bd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       472	vtls.c	FUNCTION_16
0x40011c1	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       472	vtls.c	FUNCTION_16
0x40011c5	        0x48895018	             mov qword [rax + 0x18], rdx	       472	vtls.c	FUNCTION_16
0x40011c9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       473	vtls.c	FUNCTION_16
0x40011cd	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       473	vtls.c	FUNCTION_16
0x40011d1	        0x48895020	             mov qword [rax + 0x20], rdx	       473	vtls.c	FUNCTION_16
0x40011d5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       474	vtls.c	FUNCTION_16
0x40011d9	          0x488b10	                    mov rdx, qword [rax]	       474	vtls.c	FUNCTION_16
0x40011dc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       474	vtls.c	FUNCTION_16
0x40011e0	        0x48895028	             mov qword [rax + 0x28], rdx	       474	vtls.c	FUNCTION_16
0x40011e4	    0x488b05000000	            mov rax, qword [0x040011eb] 	       476	vtls.c	FUNCTION_16	CALL_8
0x40011eb	          0x488b00	                    mov rax, qword [rax]	       476	vtls.c	FUNCTION_16	CALL_8
0x40011ee	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       476	vtls.c	FUNCTION_16	CALL_8
0x40011f2	          0x488b12	                    mov rdx, qword [rdx]	       476	vtls.c	FUNCTION_16	CALL_8
0x40011f5	          0x4889d7	                            mov rdi, rdx	       476	vtls.c	FUNCTION_16	CALL_8
0x40011f8	            0xffd0	                                call rax	       476	vtls.c	FUNCTION_16	CALL_8
0x40011fa	    0x488b05000000	            mov rax, qword [0x04001201] 	       477	vtls.c	FUNCTION_16	CALL_9
0x4001201	          0x488b00	                    mov rax, qword [rax]	       477	vtls.c	FUNCTION_16	CALL_9
0x4001204	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       477	vtls.c	FUNCTION_16	CALL_9
0x4001208	        0x488b5208	                mov rdx, qword [rdx + 8]	       477	vtls.c	FUNCTION_16	CALL_9
0x400120c	          0x4889d7	                            mov rdi, rdx	       477	vtls.c	FUNCTION_16	CALL_9
0x400120f	            0xffd0	                                call rax	       477	vtls.c	FUNCTION_16	CALL_9
0x4001211	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       478	vtls.c	FUNCTION_16
0x4001215	        0x488b55f8	                mov rdx, qword [rbp - 8]	       478	vtls.c	FUNCTION_16
0x4001219	          0x488910	                    mov qword [rax], rdx	       478	vtls.c	FUNCTION_16
0x400121c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       479	vtls.c	FUNCTION_16
0x4001220	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       479	vtls.c	FUNCTION_16
0x4001224	        0x48895008	                mov qword [rax + 8], rdx	       479	vtls.c	FUNCTION_16
0x4001228	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       480	vtls.c	FUNCTION_16
0x400122c	          0x8b55bc	             mov edx, dword [rbp - 0x44]	       480	vtls.c	FUNCTION_16
0x400122f	          0x895034	             mov dword [rax + 0x34], edx	       480	vtls.c	FUNCTION_16
0x4001232	        0x807dbb00	                cmp byte [rbp - 0x45], 0	       482	vtls.c	FUNCTION_16
0x4001236	            0x740d	                            je 0x4001245	       482	vtls.c	FUNCTION_16
0x4001238	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       482	vtls.c	FUNCTION_16
0x400123c	    0x488b80900100	           mov rax, qword [rax + 0x190] 	       482	vtls.c	FUNCTION_16
0x4001243	            0xeb0a	                           jmp 0x400124f	       482	vtls.c	FUNCTION_16
0x4001245	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       482	vtls.c	FUNCTION_16
0x4001249	    0x8b8098010000	           mov eax, dword [rax + 0x198] 	       482	vtls.c	FUNCTION_16
0x400124f	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       482	vtls.c	FUNCTION_16
0x4001253	          0x894230	             mov dword [rdx + 0x30], eax	       482	vtls.c	FUNCTION_16
0x4001256	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       483	vtls.c	FUNCTION_16
0x400125a	    0x488b80e00300	           mov rax, qword [rax + 0x3e0] 	       483	vtls.c	FUNCTION_16
0x4001261	          0x488b10	                    mov rdx, qword [rax]	       483	vtls.c	FUNCTION_16
0x4001264	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       483	vtls.c	FUNCTION_16
0x4001268	        0x48895010	             mov qword [rax + 0x10], rdx	       483	vtls.c	FUNCTION_16
0x400126c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       485	vtls.c	FUNCTION_16	IF_8	CALL_10
0x4001270	        0x488d5038	                   lea rdx, [rax + 0x38]	       485	vtls.c	FUNCTION_16	IF_8	CALL_10
0x4001274	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       485	vtls.c	FUNCTION_16	IF_8	CALL_10
0x4001278	          0x4889d6	                            mov rsi, rdx	       485	vtls.c	FUNCTION_16	IF_8	CALL_10
0x400127b	          0x4889c7	                            mov rdi, rax	       485	vtls.c	FUNCTION_16	IF_8	CALL_10
0x400127e	      0xe800000000	                          call 0x4001283	       485	vtls.c	FUNCTION_16	IF_8	CALL_10
0x4001283	          0x83f001	                              xor eax, 1	       485	vtls.c	FUNCTION_16	IF_8	CALL_10
0x4001286	            0x84c0	                             test al, al	       485	vtls.c	FUNCTION_16	IF_8	CALL_10
0x4001288	            0x7439	                            je 0x40012c3	       485	vtls.c	FUNCTION_16	IF_8	CALL_10
0x400128a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       486	vtls.c	FUNCTION_16	IF_8
0x400128e	    0x48c740180000	               mov qword [rax + 0x18], 0	       486	vtls.c	FUNCTION_16	IF_8
0x4001296	    0x488b05000000	            mov rax, qword [0x0400129d] 	       487	vtls.c	FUNCTION_16	IF_8	CALL_11
0x400129d	          0x488b00	                    mov rax, qword [rax]	       487	vtls.c	FUNCTION_16	IF_8	CALL_11
0x40012a0	        0x488b55f8	                mov rdx, qword [rbp - 8]	       487	vtls.c	FUNCTION_16	IF_8	CALL_11
0x40012a4	          0x4889d7	                            mov rdi, rdx	       487	vtls.c	FUNCTION_16	IF_8	CALL_11
0x40012a7	            0xffd0	                                call rax	       487	vtls.c	FUNCTION_16	IF_8	CALL_11
0x40012a9	    0x488b05000000	            mov rax, qword [0x040012b0] 	       488	vtls.c	FUNCTION_16	IF_8	CALL_12
0x40012b0	          0x488b00	                    mov rax, qword [rax]	       488	vtls.c	FUNCTION_16	IF_8	CALL_12
0x40012b3	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       488	vtls.c	FUNCTION_16	IF_8	CALL_12
0x40012b7	          0x4889d7	                            mov rdi, rdx	       488	vtls.c	FUNCTION_16	IF_8	CALL_12
0x40012ba	            0xffd0	                                call rax	       488	vtls.c	FUNCTION_16	IF_8	CALL_12
0x40012bc	      0xb81b000000	                           mov eax, 0x1b	       489	vtls.c	FUNCTION_16	IF_8
0x40012c1	            0xeb05	                           jmp 0x40012c8	       489	vtls.c	FUNCTION_16	IF_8
0x40012c3	      0xb800000000	                              mov eax, 0	       492	vtls.c	FUNCTION_16
0x40012c8	              0xc9	                                   leave	       493	vtls.c	FUNCTION_16
0x40012c9	              0xc3	                                     ret	       493	vtls.c	FUNCTION_16
Curl_ssl_backend	functions,0:ELSE,0:IF,0:SWITCH,0:FOR,0:DO,0:WHILE,0:CALL,1	8
0x40005a2	              0x55	                                push rbp	       141	vtls.c	FUNCTION_4
0x40005a3	          0x4889e5	                            mov rbp, rsp	       141	vtls.c	FUNCTION_4
0x40005a6	      0xbf00000000	                              mov edi, 0	       143	vtls.c	FUNCTION_4	CALL_1
0x40005ab	      0xe8e71e0000	                  call sym.multissl_init	       143	vtls.c	FUNCTION_4	CALL_1
0x40005b0	    0x488b05000000	            mov rax, qword [0x040005b7] 	       144	vtls.c	FUNCTION_4
0x40005b7	            0x8b00	                    mov eax, dword [rax]	       144	vtls.c	FUNCTION_4
0x40005b9	              0x5d	                                 pop rbp	       148	vtls.c	FUNCTION_4
0x40005ba	              0xc3	                                     ret	       148	vtls.c	FUNCTION_4
Curl_ssl_delsessionid	functions,0:ELSE,0:IF,1:SWITCH,0:FOR,1:DO,0:WHILE,0:CALL,1	35
0x4000e92	              0x55	                                push rbp	       387	vtls.c	FUNCTION_15
0x4000e93	          0x4889e5	                            mov rbp, rsp	       387	vtls.c	FUNCTION_15
0x4000e96	        0x4883ec30	                           sub rsp, 0x30	       387	vtls.c	FUNCTION_15
0x4000e9a	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       387	vtls.c	FUNCTION_15
0x4000e9e	        0x488975d0	             mov qword [rbp - 0x30], rsi	       387	vtls.c	FUNCTION_15
0x4000ea2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       389	vtls.c	FUNCTION_15
0x4000ea6	          0x488b00	                    mov rax, qword [rax]	       389	vtls.c	FUNCTION_15
0x4000ea9	        0x488945f0	             mov qword [rbp - 0x10], rax	       389	vtls.c	FUNCTION_15
0x4000ead	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       391	vtls.c	FUNCTION_15	FOR_1
0x4000eb5	            0xeb45	                           jmp 0x4000efc	       391	vtls.c	FUNCTION_15	FOR_1
0x4000eb7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       392	vtls.c	FUNCTION_15	FOR_1
0x4000ebb	    0x488b90504d00	          mov rdx, qword [rax + 0x4d50] 	       392	vtls.c	FUNCTION_15	FOR_1
0x4000ec2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       392	vtls.c	FUNCTION_15	FOR_1
0x4000ec6	        0x48c1e003	                              shl rax, 3	       392	vtls.c	FUNCTION_15	FOR_1
0x4000eca	          0x4889c1	                            mov rcx, rax	       392	vtls.c	FUNCTION_15	FOR_1
0x4000ecd	        0x48c1e104	                              shl rcx, 4	       392	vtls.c	FUNCTION_15	FOR_1
0x4000ed1	          0x4801c8	                            add rax, rcx	       392	vtls.c	FUNCTION_15	FOR_1
0x4000ed4	          0x4801d0	                            add rax, rdx	       392	vtls.c	FUNCTION_15	FOR_1
0x4000ed7	        0x488945f8	                mov qword [rbp - 8], rax	       392	vtls.c	FUNCTION_15	FOR_1
0x4000edb	        0x488b45f8	                mov rax, qword [rbp - 8]	       394	vtls.c	FUNCTION_15	FOR_1	IF_1
0x4000edf	        0x488b4018	            mov rax, qword [rax + 0x18] 	       394	vtls.c	FUNCTION_15	FOR_1	IF_1
0x4000ee3	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	       394	vtls.c	FUNCTION_15	FOR_1	IF_1
0x4000ee7	            0x750e	                           jne 0x4000ef7	       394	vtls.c	FUNCTION_15	FOR_1	IF_1
0x4000ee9	        0x488b45f8	                mov rax, qword [rbp - 8]	       395	vtls.c	FUNCTION_15	FOR_1	IF_1	CALL_1
0x4000eed	          0x4889c7	                            mov rdi, rax	       395	vtls.c	FUNCTION_15	FOR_1	IF_1	CALL_1
0x4000ef0	      0xe800000000	                          call 0x4000ef5	       395	vtls.c	FUNCTION_15	FOR_1	IF_1	CALL_1
0x4000ef5	            0xeb16	                           jmp 0x4000f0d	       396	vtls.c	FUNCTION_15	FOR_1	IF_1
0x4000ef7	      0x488345e801	               add qword [rbp - 0x18], 1	       391	vtls.c	FUNCTION_15	FOR_1
0x4000efc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       391	vtls.c	FUNCTION_15	FOR_1
0x4000f00	    0x488b80780700	           mov rax, qword [rax + 0x778] 	       391	vtls.c	FUNCTION_15	FOR_1
0x4000f07	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       391	vtls.c	FUNCTION_15	FOR_1
0x4000f0b	            0x77aa	                            ja 0x4000eb7	       391	vtls.c	FUNCTION_15	FOR_1
0x4000f0d	              0x90	                                     nop	       399	vtls.c	FUNCTION_15
0x4000f0e	              0xc9	                                   leave	       399	vtls.c	FUNCTION_15
0x4000f0f	              0xc3	                                     ret	       399	vtls.c	FUNCTION_15
Curl_ssl_kill_session	functions,0:ELSE,0:IF,1:SWITCH,0:FOR,0:DO,0:WHILE,0:CALL,4	41
0x4000deb	              0x55	                                push rbp	       366	vtls.c	FUNCTION_14
0x4000dec	          0x4889e5	                            mov rbp, rsp	       366	vtls.c	FUNCTION_14
0x4000def	        0x4883ec10	                           sub rsp, 0x10	       366	vtls.c	FUNCTION_14
0x4000df3	        0x48897df8	                mov qword [rbp - 8], rdi	       366	vtls.c	FUNCTION_14
0x4000df7	        0x488b45f8	                mov rax, qword [rbp - 8]	       367	vtls.c	FUNCTION_14	IF_1
0x4000dfb	        0x488b4018	            mov rax, qword [rax + 0x18] 	       367	vtls.c	FUNCTION_14	IF_1
0x4000dff	          0x4885c0	                           test rax, rax	       367	vtls.c	FUNCTION_14	IF_1
0x4000e02	     0xf8487000000	                            je 0x4000e8f	       367	vtls.c	FUNCTION_14	IF_1
0x4000e08	    0x488b05000000	            mov rax, qword [0x04000e0f] 	       371	vtls.c	FUNCTION_14	IF_1	CALL_1
0x4000e0f	    0x488b80880000	            mov rax, qword [rax + 0x88] 	       371	vtls.c	FUNCTION_14	IF_1	CALL_1
0x4000e16	        0x488b55f8	                mov rdx, qword [rbp - 8]	       371	vtls.c	FUNCTION_14	IF_1	CALL_1
0x4000e1a	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	       371	vtls.c	FUNCTION_14	IF_1	CALL_1
0x4000e1e	          0x4889d7	                            mov rdi, rdx	       371	vtls.c	FUNCTION_14	IF_1	CALL_1
0x4000e21	            0xffd0	                                call rax	       371	vtls.c	FUNCTION_14	IF_1	CALL_1
0x4000e23	        0x488b45f8	                mov rax, qword [rbp - 8]	       373	vtls.c	FUNCTION_14	IF_1
0x4000e27	    0x48c740180000	               mov qword [rax + 0x18], 0	       373	vtls.c	FUNCTION_14	IF_1
0x4000e2f	        0x488b45f8	                mov rax, qword [rbp - 8]	       374	vtls.c	FUNCTION_14	IF_1
0x4000e33	    0x48c740280000	               mov qword [rax + 0x28], 0	       374	vtls.c	FUNCTION_14	IF_1
0x4000e3b	        0x488b45f8	                mov rax, qword [rbp - 8]	       376	vtls.c	FUNCTION_14	IF_1	CALL_2
0x4000e3f	        0x4883c038	                           add rax, 0x38	       376	vtls.c	FUNCTION_14	IF_1	CALL_2
0x4000e43	          0x4889c7	                            mov rdi, rax	       376	vtls.c	FUNCTION_14	IF_1	CALL_2
0x4000e46	      0xe800000000	                          call 0x4000e4b	       376	vtls.c	FUNCTION_14	IF_1	CALL_2
0x4000e4b	    0x488b05000000	            mov rax, qword [0x04000e52] 	       378	vtls.c	FUNCTION_14	IF_1	CALL_3
0x4000e52	          0x488b00	                    mov rax, qword [rax]	       378	vtls.c	FUNCTION_14	IF_1	CALL_3
0x4000e55	        0x488b55f8	                mov rdx, qword [rbp - 8]	       378	vtls.c	FUNCTION_14	IF_1	CALL_3
0x4000e59	          0x488b12	                    mov rdx, qword [rdx]	       378	vtls.c	FUNCTION_14	IF_1	CALL_3
0x4000e5c	          0x4889d7	                            mov rdi, rdx	       378	vtls.c	FUNCTION_14	IF_1	CALL_3
0x4000e5f	            0xffd0	                                call rax	       378	vtls.c	FUNCTION_14	IF_1	CALL_3
0x4000e61	        0x488b45f8	                mov rax, qword [rbp - 8]	       378	vtls.c	FUNCTION_14	IF_1	CALL_3
0x4000e65	    0x48c700000000	                      mov qword [rax], 0	       378	vtls.c	FUNCTION_14	IF_1	CALL_3
0x4000e6c	    0x488b05000000	            mov rax, qword [0x04000e73] 	       379	vtls.c	FUNCTION_14	IF_1	CALL_4
0x4000e73	          0x488b00	                    mov rax, qword [rax]	       379	vtls.c	FUNCTION_14	IF_1	CALL_4
0x4000e76	        0x488b55f8	                mov rdx, qword [rbp - 8]	       379	vtls.c	FUNCTION_14	IF_1	CALL_4
0x4000e7a	        0x488b5208	                mov rdx, qword [rdx + 8]	       379	vtls.c	FUNCTION_14	IF_1	CALL_4
0x4000e7e	          0x4889d7	                            mov rdi, rdx	       379	vtls.c	FUNCTION_14	IF_1	CALL_4
0x4000e81	            0xffd0	                                call rax	       379	vtls.c	FUNCTION_14	IF_1	CALL_4
0x4000e83	        0x488b45f8	                mov rax, qword [rbp - 8]	       379	vtls.c	FUNCTION_14	IF_1	CALL_4
0x4000e87	    0x48c740080000	                  mov qword [rax + 8], 0	       379	vtls.c	FUNCTION_14	IF_1	CALL_4
0x4000e8f	              0x90	                                     nop	       381	vtls.c	FUNCTION_14
0x4000e90	              0xc9	                                   leave	       381	vtls.c	FUNCTION_14
0x4000e91	              0xc3	                                     ret	       381	vtls.c	FUNCTION_14
Curl_ssl_getsock	functions,0:ELSE,0:IF,0:SWITCH,0:FOR,0:DO,0:WHILE,0:CALL,0	35
0x4001399	              0x55	                                push rbp	       517	vtls.c	FUNCTION_18
0x400139a	          0x4889e5	                            mov rbp, rsp	       517	vtls.c	FUNCTION_18
0x400139d	        0x48897de8	             mov qword [rbp - 0x18], rdi	       517	vtls.c	FUNCTION_18
0x40013a1	        0x488975e0	             mov qword [rbp - 0x20], rsi	       517	vtls.c	FUNCTION_18
0x40013a5	          0x8955dc	             mov dword [rbp - 0x24], edx	       517	vtls.c	FUNCTION_18
0x40013a8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       518	vtls.c	FUNCTION_18
0x40013ac	    0x480590020000	                          add rax, 0x290	       518	vtls.c	FUNCTION_18
0x40013b2	        0x488945f8	                mov qword [rbp - 8], rax	       518	vtls.c	FUNCTION_18
0x40013b6	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       520	vtls.c	FUNCTION_18	IF_1
0x40013ba	            0x7507	                           jne 0x40013c3	       520	vtls.c	FUNCTION_18	IF_1
0x40013bc	      0xb800000000	                              mov eax, 0	       521	vtls.c	FUNCTION_18	IF_1
0x40013c1	            0xeb4b	                           jmp 0x400140e	       521	vtls.c	FUNCTION_18	IF_1
0x40013c3	        0x488b45f8	                mov rax, qword [rbp - 8]	       523	vtls.c	FUNCTION_18	IF_2
0x40013c7	          0x8b4008	                mov eax, dword [rax + 8]	       523	vtls.c	FUNCTION_18	IF_2
0x40013ca	          0x83f803	                              cmp eax, 3	       523	vtls.c	FUNCTION_18	IF_2
0x40013cd	            0x7517	                           jne 0x40013e6	       523	vtls.c	FUNCTION_18	IF_2
0x40013cf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       525	vtls.c	FUNCTION_18	IF_2
0x40013d3	    0x8b9058020000	           mov edx, dword [rax + 0x258] 	       525	vtls.c	FUNCTION_18	IF_2
0x40013d9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       525	vtls.c	FUNCTION_18	IF_2
0x40013dd	            0x8910	                    mov dword [rax], edx	       525	vtls.c	FUNCTION_18	IF_2
0x40013df	      0xb800000100	                        mov eax, 0x10000	       526	vtls.c	FUNCTION_18	IF_2	CALL_1
0x40013e4	            0xeb28	                           jmp 0x400140e	       526	vtls.c	FUNCTION_18	IF_2	CALL_1
0x40013e6	        0x488b45f8	                mov rax, qword [rbp - 8]	       528	vtls.c	FUNCTION_18	IF_3
0x40013ea	          0x8b4008	                mov eax, dword [rax + 8]	       528	vtls.c	FUNCTION_18	IF_3
0x40013ed	          0x83f802	                              cmp eax, 2	       528	vtls.c	FUNCTION_18	IF_3
0x40013f0	            0x7517	                           jne 0x4001409	       528	vtls.c	FUNCTION_18	IF_3
0x40013f2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       530	vtls.c	FUNCTION_18	IF_3
0x40013f6	    0x8b9058020000	           mov edx, dword [rax + 0x258] 	       530	vtls.c	FUNCTION_18	IF_3
0x40013fc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       530	vtls.c	FUNCTION_18	IF_3
0x4001400	            0x8910	                    mov dword [rax], edx	       530	vtls.c	FUNCTION_18	IF_3
0x4001402	      0xb801000000	                              mov eax, 1	       531	vtls.c	FUNCTION_18	IF_3	CALL_2
0x4001407	            0xeb05	                           jmp 0x400140e	       531	vtls.c	FUNCTION_18	IF_3	CALL_2
0x4001409	      0xb800000000	                              mov eax, 0	       534	vtls.c	FUNCTION_18
0x400140e	              0x5d	                                 pop rbp	       535	vtls.c	FUNCTION_18
0x400140f	              0xc3	                                     ret	       535	vtls.c	FUNCTION_18
Curl_ssl_close_all	functions,0:ELSE,0:IF,1:SWITCH,0:FOR,1:DO,0:WHILE,0:CALL,3	51
0x40012ca	              0x55	                                push rbp	       497	vtls.c	FUNCTION_17
0x40012cb	          0x4889e5	                            mov rbp, rsp	       497	vtls.c	FUNCTION_17
0x40012ce	        0x4883ec20	                           sub rsp, 0x20	       497	vtls.c	FUNCTION_17
0x40012d2	        0x48897de8	             mov qword [rbp - 0x18], rdi	       497	vtls.c	FUNCTION_17
0x40012d6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       500	vtls.c	FUNCTION_17	IF_1
0x40012da	    0x488b80504d00	          mov rax, qword [rax + 0x4d50] 	       500	vtls.c	FUNCTION_17	IF_1
0x40012e1	          0x4885c0	                           test rax, rax	       500	vtls.c	FUNCTION_17	IF_1
0x40012e4	     0xf8495000000	                            je 0x400137f	       500	vtls.c	FUNCTION_17	IF_1
0x40012ea	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       500	vtls.c	FUNCTION_17	IF_1
0x40012ee	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	       500	vtls.c	FUNCTION_17	IF_1
0x40012f5	          0x4885c0	                           test rax, rax	       500	vtls.c	FUNCTION_17	IF_1
0x40012f8	            0x7414	                            je 0x400130e	       500	vtls.c	FUNCTION_17	IF_1
0x40012fa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       500	vtls.c	FUNCTION_17	IF_1
0x40012fe	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	       500	vtls.c	FUNCTION_17	IF_1
0x4001305	            0x8b00	                    mov eax, dword [rax]	       500	vtls.c	FUNCTION_17	IF_1
0x4001307	          0x83e010	                           and eax, 0x10	       500	vtls.c	FUNCTION_17	IF_1
0x400130a	            0x85c0	                           test eax, eax	       500	vtls.c	FUNCTION_17	IF_1
0x400130c	            0x7571	                           jne 0x400137f	       500	vtls.c	FUNCTION_17	IF_1
0x400130e	    0x48c745f80000	                  mov qword [rbp - 8], 0	       501	vtls.c	FUNCTION_17	IF_1	FOR_1
0x4001316	            0xeb2d	                           jmp 0x4001345	       501	vtls.c	FUNCTION_17	IF_1	FOR_1
0x4001318	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       503	vtls.c	FUNCTION_17	IF_1	CALL_1
0x400131c	    0x488b90504d00	          mov rdx, qword [rax + 0x4d50] 	       503	vtls.c	FUNCTION_17	IF_1	CALL_1
0x4001323	        0x488b45f8	                mov rax, qword [rbp - 8]	       503	vtls.c	FUNCTION_17	IF_1	CALL_1
0x4001327	        0x48c1e003	                              shl rax, 3	       503	vtls.c	FUNCTION_17	IF_1	CALL_1
0x400132b	          0x4889c1	                            mov rcx, rax	       503	vtls.c	FUNCTION_17	IF_1	CALL_1
0x400132e	        0x48c1e104	                              shl rcx, 4	       503	vtls.c	FUNCTION_17	IF_1	CALL_1
0x4001332	          0x4801c8	                            add rax, rcx	       503	vtls.c	FUNCTION_17	IF_1	CALL_1
0x4001335	          0x4801d0	                            add rax, rdx	       503	vtls.c	FUNCTION_17	IF_1	CALL_1
0x4001338	          0x4889c7	                            mov rdi, rax	       503	vtls.c	FUNCTION_17	IF_1	CALL_1
0x400133b	      0xe800000000	                          call 0x4001340	       503	vtls.c	FUNCTION_17	IF_1	CALL_1
0x4001340	      0x488345f801	                  add qword [rbp - 8], 1	       501	vtls.c	FUNCTION_17	IF_1	FOR_1
0x4001345	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       501	vtls.c	FUNCTION_17	IF_1	FOR_1
0x4001349	    0x488b80780700	           mov rax, qword [rax + 0x778] 	       501	vtls.c	FUNCTION_17	IF_1	FOR_1
0x4001350	        0x483b45f8	                cmp rax, qword [rbp - 8]	       501	vtls.c	FUNCTION_17	IF_1	FOR_1
0x4001354	            0x77c2	                            ja 0x4001318	       501	vtls.c	FUNCTION_17	IF_1	FOR_1
0x4001356	    0x488b05000000	            mov rax, qword [0x0400135d] 	       506	vtls.c	FUNCTION_17	IF_1	CALL_2
0x400135d	          0x488b00	                    mov rax, qword [rax]	       506	vtls.c	FUNCTION_17	IF_1	CALL_2
0x4001360	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       506	vtls.c	FUNCTION_17	IF_1	CALL_2
0x4001364	    0x488b92504d00	          mov rdx, qword [rdx + 0x4d50] 	       506	vtls.c	FUNCTION_17	IF_1	CALL_2
0x400136b	          0x4889d7	                            mov rdi, rdx	       506	vtls.c	FUNCTION_17	IF_1	CALL_2
0x400136e	            0xffd0	                                call rax	       506	vtls.c	FUNCTION_17	IF_1	CALL_2
0x4001370	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       506	vtls.c	FUNCTION_17	IF_1	CALL_2
0x4001374	    0x48c780504d00	            mov qword [rax + 0x4d50], 0 	       506	vtls.c	FUNCTION_17	IF_1	CALL_2
0x400137f	    0x488b05000000	            mov rax, qword [0x04001386] 	       509	vtls.c	FUNCTION_17	CALL_3
0x4001386	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       509	vtls.c	FUNCTION_17	CALL_3
0x400138d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       509	vtls.c	FUNCTION_17	CALL_3
0x4001391	          0x4889d7	                            mov rdi, rdx	       509	vtls.c	FUNCTION_17	CALL_3
0x4001394	            0xffd0	                                call rax	       509	vtls.c	FUNCTION_17	CALL_3
0x4001396	              0x90	                                     nop	       510	vtls.c	FUNCTION_17
0x4001397	              0xc9	                                   leave	       510	vtls.c	FUNCTION_17
0x4001398	              0xc3	                                     ret	       510	vtls.c	FUNCTION_17
Curl_clone_primary_ssl_config	functions,0:ELSE,0:IF,0:SWITCH,0:FOR,0:DO,0:WHILE,0:CALL,0	158
0x400026a	              0x55	                                push rbp	       108	vtls.c	FUNCTION_2
0x400026b	          0x4889e5	                            mov rbp, rsp	       108	vtls.c	FUNCTION_2
0x400026e	        0x4883ec10	                           sub rsp, 0x10	       108	vtls.c	FUNCTION_2
0x4000272	        0x48897df8	                mov qword [rbp - 8], rdi	       108	vtls.c	FUNCTION_2
0x4000276	        0x488975f0	             mov qword [rbp - 0x10], rsi	       108	vtls.c	FUNCTION_2
0x400027a	        0x488b45f8	                mov rax, qword [rbp - 8]	       109	vtls.c	FUNCTION_2
0x400027e	          0x488b10	                    mov rdx, qword [rax]	       109	vtls.c	FUNCTION_2
0x4000281	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       109	vtls.c	FUNCTION_2
0x4000285	          0x488910	                    mov qword [rax], rdx	       109	vtls.c	FUNCTION_2
0x4000288	        0x488b45f8	                mov rax, qword [rbp - 8]	       110	vtls.c	FUNCTION_2
0x400028c	        0x488b5008	                mov rdx, qword [rax + 8]	       110	vtls.c	FUNCTION_2
0x4000290	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       110	vtls.c	FUNCTION_2
0x4000294	        0x48895008	                mov qword [rax + 8], rdx	       110	vtls.c	FUNCTION_2
0x4000298	        0x488b45f8	                mov rax, qword [rbp - 8]	       111	vtls.c	FUNCTION_2
0x400029c	         0xfb65010	           movzx edx, byte [rax + 0x10] 	       111	vtls.c	FUNCTION_2
0x40002a0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       111	vtls.c	FUNCTION_2
0x40002a4	          0x885010	               mov byte [rax + 0x10], dl	       111	vtls.c	FUNCTION_2
0x40002a7	        0x488b45f8	                mov rax, qword [rbp - 8]	       112	vtls.c	FUNCTION_2
0x40002ab	         0xfb65011	           movzx edx, byte [rax + 0x11] 	       112	vtls.c	FUNCTION_2
0x40002af	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       112	vtls.c	FUNCTION_2
0x40002b3	          0x885011	               mov byte [rax + 0x11], dl	       112	vtls.c	FUNCTION_2
0x40002b6	        0x488b45f8	                mov rax, qword [rbp - 8]	       113	vtls.c	FUNCTION_2
0x40002ba	         0xfb65012	           movzx edx, byte [rax + 0x12] 	       113	vtls.c	FUNCTION_2
0x40002be	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       113	vtls.c	FUNCTION_2
0x40002c2	          0x885012	               mov byte [rax + 0x12], dl	       113	vtls.c	FUNCTION_2
0x40002c5	        0x488b45f8	                mov rax, qword [rbp - 8]	       114	vtls.c	FUNCTION_2
0x40002c9	         0xfb65013	           movzx edx, byte [rax + 0x13] 	       114	vtls.c	FUNCTION_2
0x40002cd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       114	vtls.c	FUNCTION_2
0x40002d1	          0x885013	               mov byte [rax + 0x13], dl	       114	vtls.c	FUNCTION_2
0x40002d4	        0x488b45f8	                mov rax, qword [rbp - 8]	       116	vtls.c	FUNCTION_2
0x40002d8	        0x488b4018	            mov rax, qword [rax + 0x18] 	       116	vtls.c	FUNCTION_2
0x40002dc	          0x4885c0	                           test rax, rax	       116	vtls.c	FUNCTION_2
0x40002df	            0x7439	                            je 0x400031a	       116	vtls.c	FUNCTION_2
0x40002e1	    0x488b05000000	            mov rax, qword [0x040002e8] 	       116	vtls.c	FUNCTION_2
0x40002e8	          0x488b00	                    mov rax, qword [rax]	       116	vtls.c	FUNCTION_2
0x40002eb	        0x488b55f8	                mov rdx, qword [rbp - 8]	       116	vtls.c	FUNCTION_2
0x40002ef	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	       116	vtls.c	FUNCTION_2
0x40002f3	          0x4889d7	                            mov rdi, rdx	       116	vtls.c	FUNCTION_2
0x40002f6	            0xffd0	                                call rax	       116	vtls.c	FUNCTION_2
0x40002f8	          0x4889c2	                            mov rdx, rax	       116	vtls.c	FUNCTION_2
0x40002fb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       116	vtls.c	FUNCTION_2
0x40002ff	        0x48895018	             mov qword [rax + 0x18], rdx	       116	vtls.c	FUNCTION_2
0x4000303	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       116	vtls.c	FUNCTION_2
0x4000307	        0x488b4018	            mov rax, qword [rax + 0x18] 	       116	vtls.c	FUNCTION_2
0x400030b	          0x4885c0	                           test rax, rax	       116	vtls.c	FUNCTION_2
0x400030e	            0x7516	                           jne 0x4000326	       116	vtls.c	FUNCTION_2
0x4000310	      0xb800000000	                              mov eax, 0	       116	vtls.c	FUNCTION_2
0x4000315	      0xe9a5010000	                           jmp 0x40004bf	       116	vtls.c	FUNCTION_2
0x400031a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       116	vtls.c	FUNCTION_2
0x400031e	    0x48c740180000	               mov qword [rax + 0x18], 0	       116	vtls.c	FUNCTION_2
0x4000326	        0x488b45f8	                mov rax, qword [rbp - 8]	       117	vtls.c	FUNCTION_2
0x400032a	        0x488b4020	            mov rax, qword [rax + 0x20] 	       117	vtls.c	FUNCTION_2
0x400032e	          0x4885c0	                           test rax, rax	       117	vtls.c	FUNCTION_2
0x4000331	            0x7439	                            je 0x400036c	       117	vtls.c	FUNCTION_2
0x4000333	    0x488b05000000	            mov rax, qword [0x0400033a] 	       117	vtls.c	FUNCTION_2
0x400033a	          0x488b00	                    mov rax, qword [rax]	       117	vtls.c	FUNCTION_2
0x400033d	        0x488b55f8	                mov rdx, qword [rbp - 8]	       117	vtls.c	FUNCTION_2
0x4000341	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	       117	vtls.c	FUNCTION_2
0x4000345	          0x4889d7	                            mov rdi, rdx	       117	vtls.c	FUNCTION_2
0x4000348	            0xffd0	                                call rax	       117	vtls.c	FUNCTION_2
0x400034a	          0x4889c2	                            mov rdx, rax	       117	vtls.c	FUNCTION_2
0x400034d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       117	vtls.c	FUNCTION_2
0x4000351	        0x48895020	             mov qword [rax + 0x20], rdx	       117	vtls.c	FUNCTION_2
0x4000355	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       117	vtls.c	FUNCTION_2
0x4000359	        0x488b4020	            mov rax, qword [rax + 0x20] 	       117	vtls.c	FUNCTION_2
0x400035d	          0x4885c0	                           test rax, rax	       117	vtls.c	FUNCTION_2
0x4000360	            0x7516	                           jne 0x4000378	       117	vtls.c	FUNCTION_2
0x4000362	      0xb800000000	                              mov eax, 0	       117	vtls.c	FUNCTION_2
0x4000367	      0xe953010000	                           jmp 0x40004bf	       117	vtls.c	FUNCTION_2
0x400036c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       117	vtls.c	FUNCTION_2
0x4000370	    0x48c740200000	               mov qword [rax + 0x20], 0	       117	vtls.c	FUNCTION_2
0x4000378	        0x488b45f8	                mov rax, qword [rbp - 8]	       118	vtls.c	FUNCTION_2
0x400037c	        0x488b4028	            mov rax, qword [rax + 0x28] 	       118	vtls.c	FUNCTION_2
0x4000380	          0x4885c0	                           test rax, rax	       118	vtls.c	FUNCTION_2
0x4000383	            0x7439	                            je 0x40003be	       118	vtls.c	FUNCTION_2
0x4000385	    0x488b05000000	            mov rax, qword [0x0400038c] 	       118	vtls.c	FUNCTION_2
0x400038c	          0x488b00	                    mov rax, qword [rax]	       118	vtls.c	FUNCTION_2
0x400038f	        0x488b55f8	                mov rdx, qword [rbp - 8]	       118	vtls.c	FUNCTION_2
0x4000393	        0x488b5228	            mov rdx, qword [rdx + 0x28] 	       118	vtls.c	FUNCTION_2
0x4000397	          0x4889d7	                            mov rdi, rdx	       118	vtls.c	FUNCTION_2
0x400039a	            0xffd0	                                call rax	       118	vtls.c	FUNCTION_2
0x400039c	          0x4889c2	                            mov rdx, rax	       118	vtls.c	FUNCTION_2
0x400039f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       118	vtls.c	FUNCTION_2
0x40003a3	        0x48895028	             mov qword [rax + 0x28], rdx	       118	vtls.c	FUNCTION_2
0x40003a7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       118	vtls.c	FUNCTION_2
0x40003ab	        0x488b4028	            mov rax, qword [rax + 0x28] 	       118	vtls.c	FUNCTION_2
0x40003af	          0x4885c0	                           test rax, rax	       118	vtls.c	FUNCTION_2
0x40003b2	            0x7516	                           jne 0x40003ca	       118	vtls.c	FUNCTION_2
0x40003b4	      0xb800000000	                              mov eax, 0	       118	vtls.c	FUNCTION_2
0x40003b9	      0xe901010000	                           jmp 0x40004bf	       118	vtls.c	FUNCTION_2
0x40003be	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       118	vtls.c	FUNCTION_2
0x40003c2	    0x48c740280000	               mov qword [rax + 0x28], 0	       118	vtls.c	FUNCTION_2
0x40003ca	        0x488b45f8	                mov rax, qword [rbp - 8]	       119	vtls.c	FUNCTION_2
0x40003ce	        0x488b4030	            mov rax, qword [rax + 0x30] 	       119	vtls.c	FUNCTION_2
0x40003d2	          0x4885c0	                           test rax, rax	       119	vtls.c	FUNCTION_2
0x40003d5	            0x7439	                            je 0x4000410	       119	vtls.c	FUNCTION_2
0x40003d7	    0x488b05000000	            mov rax, qword [0x040003de] 	       119	vtls.c	FUNCTION_2
0x40003de	          0x488b00	                    mov rax, qword [rax]	       119	vtls.c	FUNCTION_2
0x40003e1	        0x488b55f8	                mov rdx, qword [rbp - 8]	       119	vtls.c	FUNCTION_2
0x40003e5	        0x488b5230	            mov rdx, qword [rdx + 0x30] 	       119	vtls.c	FUNCTION_2
0x40003e9	          0x4889d7	                            mov rdi, rdx	       119	vtls.c	FUNCTION_2
0x40003ec	            0xffd0	                                call rax	       119	vtls.c	FUNCTION_2
0x40003ee	          0x4889c2	                            mov rdx, rax	       119	vtls.c	FUNCTION_2
0x40003f1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       119	vtls.c	FUNCTION_2
0x40003f5	        0x48895030	             mov qword [rax + 0x30], rdx	       119	vtls.c	FUNCTION_2
0x40003f9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       119	vtls.c	FUNCTION_2
0x40003fd	        0x488b4030	            mov rax, qword [rax + 0x30] 	       119	vtls.c	FUNCTION_2
0x4000401	          0x4885c0	                           test rax, rax	       119	vtls.c	FUNCTION_2
0x4000404	            0x7516	                           jne 0x400041c	       119	vtls.c	FUNCTION_2
0x4000406	      0xb800000000	                              mov eax, 0	       119	vtls.c	FUNCTION_2
0x400040b	      0xe9af000000	                           jmp 0x40004bf	       119	vtls.c	FUNCTION_2
0x4000410	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       119	vtls.c	FUNCTION_2
0x4000414	    0x48c740300000	               mov qword [rax + 0x30], 0	       119	vtls.c	FUNCTION_2
0x400041c	        0x488b45f8	                mov rax, qword [rbp - 8]	       120	vtls.c	FUNCTION_2
0x4000420	        0x488b4038	            mov rax, qword [rax + 0x38] 	       120	vtls.c	FUNCTION_2
0x4000424	          0x4885c0	                           test rax, rax	       120	vtls.c	FUNCTION_2
0x4000427	            0x7436	                            je 0x400045f	       120	vtls.c	FUNCTION_2
0x4000429	    0x488b05000000	            mov rax, qword [0x04000430] 	       120	vtls.c	FUNCTION_2
0x4000430	          0x488b00	                    mov rax, qword [rax]	       120	vtls.c	FUNCTION_2
0x4000433	        0x488b55f8	                mov rdx, qword [rbp - 8]	       120	vtls.c	FUNCTION_2
0x4000437	        0x488b5238	            mov rdx, qword [rdx + 0x38] 	       120	vtls.c	FUNCTION_2
0x400043b	          0x4889d7	                            mov rdi, rdx	       120	vtls.c	FUNCTION_2
0x400043e	            0xffd0	                                call rax	       120	vtls.c	FUNCTION_2
0x4000440	          0x4889c2	                            mov rdx, rax	       120	vtls.c	FUNCTION_2
0x4000443	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       120	vtls.c	FUNCTION_2
0x4000447	        0x48895038	             mov qword [rax + 0x38], rdx	       120	vtls.c	FUNCTION_2
0x400044b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       120	vtls.c	FUNCTION_2
0x400044f	        0x488b4038	            mov rax, qword [rax + 0x38] 	       120	vtls.c	FUNCTION_2
0x4000453	          0x4885c0	                           test rax, rax	       120	vtls.c	FUNCTION_2
0x4000456	            0x7513	                           jne 0x400046b	       120	vtls.c	FUNCTION_2
0x4000458	      0xb800000000	                              mov eax, 0	       120	vtls.c	FUNCTION_2
0x400045d	            0xeb60	                           jmp 0x40004bf	       120	vtls.c	FUNCTION_2
0x400045f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       120	vtls.c	FUNCTION_2
0x4000463	    0x48c740380000	               mov qword [rax + 0x38], 0	       120	vtls.c	FUNCTION_2
0x400046b	        0x488b45f8	                mov rax, qword [rbp - 8]	       121	vtls.c	FUNCTION_2
0x400046f	        0x488b4040	            mov rax, qword [rax + 0x40] 	       121	vtls.c	FUNCTION_2
0x4000473	          0x4885c0	                           test rax, rax	       121	vtls.c	FUNCTION_2
0x4000476	            0x7436	                            je 0x40004ae	       121	vtls.c	FUNCTION_2
0x4000478	    0x488b05000000	            mov rax, qword [0x0400047f] 	       121	vtls.c	FUNCTION_2
0x400047f	          0x488b00	                    mov rax, qword [rax]	       121	vtls.c	FUNCTION_2
0x4000482	        0x488b55f8	                mov rdx, qword [rbp - 8]	       121	vtls.c	FUNCTION_2
0x4000486	        0x488b5240	            mov rdx, qword [rdx + 0x40] 	       121	vtls.c	FUNCTION_2
0x400048a	          0x4889d7	                            mov rdi, rdx	       121	vtls.c	FUNCTION_2
0x400048d	            0xffd0	                                call rax	       121	vtls.c	FUNCTION_2
0x400048f	          0x4889c2	                            mov rdx, rax	       121	vtls.c	FUNCTION_2
0x4000492	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       121	vtls.c	FUNCTION_2
0x4000496	        0x48895040	             mov qword [rax + 0x40], rdx	       121	vtls.c	FUNCTION_2
0x400049a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       121	vtls.c	FUNCTION_2
0x400049e	        0x488b4040	            mov rax, qword [rax + 0x40] 	       121	vtls.c	FUNCTION_2
0x40004a2	          0x4885c0	                           test rax, rax	       121	vtls.c	FUNCTION_2
0x40004a5	            0x7513	                           jne 0x40004ba	       121	vtls.c	FUNCTION_2
0x40004a7	      0xb800000000	                              mov eax, 0	       121	vtls.c	FUNCTION_2
0x40004ac	            0xeb11	                           jmp 0x40004bf	       121	vtls.c	FUNCTION_2
0x40004ae	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       121	vtls.c	FUNCTION_2
0x40004b2	    0x48c740400000	               mov qword [rax + 0x40], 0	       121	vtls.c	FUNCTION_2
0x40004ba	      0xb801000000	                              mov eax, 1	       123	vtls.c	FUNCTION_2
0x40004bf	              0xc9	                                   leave	       124	vtls.c	FUNCTION_2
0x40004c0	              0xc3	                                     ret	       124	vtls.c	FUNCTION_2
Curl_ssl_md5sum	functions,0:ELSE,0:IF,0:SWITCH,0:FOR,0:DO,0:WHILE,0:CALL,1	16
0x4001ffa	              0x55	                                push rbp	       961	vtls.c	FUNCTION_36
0x4001ffb	          0x4889e5	                            mov rbp, rsp	       961	vtls.c	FUNCTION_36
0x4001ffe	        0x4883ec20	                           sub rsp, 0x20	       961	vtls.c	FUNCTION_36
0x4002002	        0x48897df8	                mov qword [rbp - 8], rdi	       961	vtls.c	FUNCTION_36
0x4002006	        0x488975f0	             mov qword [rbp - 0x10], rsi	       961	vtls.c	FUNCTION_36
0x400200a	        0x488955e8	             mov qword [rbp - 0x18], rdx	       961	vtls.c	FUNCTION_36
0x400200e	        0x48894de0	             mov qword [rbp - 0x20], rcx	       961	vtls.c	FUNCTION_36
0x4002012	    0x488b05000000	            mov rax, qword [0x04002019] 	       962	vtls.c	FUNCTION_36	CALL_1
0x4002019	    0x488b80b00000	            mov rax, qword [rax + 0xb0] 	       962	vtls.c	FUNCTION_36	CALL_1
0x4002020	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       962	vtls.c	FUNCTION_36	CALL_1
0x4002024	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       962	vtls.c	FUNCTION_36	CALL_1
0x4002028	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       962	vtls.c	FUNCTION_36	CALL_1
0x400202c	        0x488b7df8	                mov rdi, qword [rbp - 8]	       962	vtls.c	FUNCTION_36	CALL_1
0x4002030	            0xffd0	                                call rax	       962	vtls.c	FUNCTION_36	CALL_1
0x4002032	              0xc9	                                   leave	       963	vtls.c	FUNCTION_36
0x4002033	              0xc3	                                     ret	       963	vtls.c	FUNCTION_36
Curl_none_random	functions,0:ELSE,0:IF,0:SWITCH,0:FOR,0:DO,0:WHILE,0:CALL,0	8
0x40020a8	              0x55	                                push rbp	      1019	vtls.c	FUNCTION_44
0x40020a9	          0x4889e5	                            mov rbp, rsp	      1019	vtls.c	FUNCTION_44
0x40020ac	        0x48897df8	                mov qword [rbp - 8], rdi	      1019	vtls.c	FUNCTION_44
0x40020b0	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1019	vtls.c	FUNCTION_44
0x40020b4	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1019	vtls.c	FUNCTION_44
0x40020b8	      0xb804000000	                              mov eax, 4	      1023	vtls.c	FUNCTION_44
0x40020bd	              0x5d	                                 pop rbp	      1024	vtls.c	FUNCTION_44
0x40020be	              0xc3	                                     ret	      1024	vtls.c	FUNCTION_44
Curl_multissl_get_internals	functions,0:ELSE,0:IF,1:SWITCH,0:FOR,0:DO,0:WHILE,0:CALL,2	20
0x400224e	              0x55	                                push rbp	      1127	vtls.c	FUNCTION_58
0x400224f	          0x4889e5	                            mov rbp, rsp	      1127	vtls.c	FUNCTION_58
0x4002252	        0x4883ec10	                           sub rsp, 0x10	      1127	vtls.c	FUNCTION_58
0x4002256	        0x48897df8	                mov qword [rbp - 8], rdi	      1127	vtls.c	FUNCTION_58
0x400225a	          0x8975f4	              mov dword [rbp - 0xc], esi	      1127	vtls.c	FUNCTION_58
0x400225d	      0xbf00000000	                              mov edi, 0	      1128	vtls.c	FUNCTION_58	IF_1	CALL_1
0x4002262	      0xe830020000	                  call sym.multissl_init	      1128	vtls.c	FUNCTION_58	IF_1	CALL_1
0x4002267	            0x85c0	                           test eax, eax	      1128	vtls.c	FUNCTION_58	IF_1	CALL_1
0x4002269	            0x7407	                            je 0x4002272	      1128	vtls.c	FUNCTION_58	IF_1	CALL_1
0x400226b	      0xb800000000	                              mov eax, 0	      1129	vtls.c	FUNCTION_58	IF_1
0x4002270	            0xeb19	                           jmp 0x400228b	      1129	vtls.c	FUNCTION_58	IF_1
0x4002272	    0x488b05000000	            mov rax, qword [0x04002279] 	      1130	vtls.c	FUNCTION_58	CALL_2
0x4002279	        0x488b4070	            mov rax, qword [rax + 0x70] 	      1130	vtls.c	FUNCTION_58	CALL_2
0x400227d	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      1130	vtls.c	FUNCTION_58	CALL_2
0x4002280	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1130	vtls.c	FUNCTION_58	CALL_2
0x4002284	            0x89ce	                            mov esi, ecx	      1130	vtls.c	FUNCTION_58	CALL_2
0x4002286	          0x4889d7	                            mov rdi, rdx	      1130	vtls.c	FUNCTION_58	CALL_2
0x4002289	            0xffd0	                                call rax	      1130	vtls.c	FUNCTION_58	CALL_2
0x400228b	              0xc9	                                   leave	      1131	vtls.c	FUNCTION_58
0x400228c	              0xc3	                                     ret	      1131	vtls.c	FUNCTION_58
Curl_ssl_set_engine	functions,0:ELSE,0:IF,0:SWITCH,0:FOR,0:DO,0:WHILE,0:CALL,1	14
0x40014f3	              0x55	                                push rbp	       572	vtls.c	FUNCTION_22
0x40014f4	          0x4889e5	                            mov rbp, rsp	       572	vtls.c	FUNCTION_22
0x40014f7	        0x4883ec10	                           sub rsp, 0x10	       572	vtls.c	FUNCTION_22
0x40014fb	        0x48897df8	                mov qword [rbp - 8], rdi	       572	vtls.c	FUNCTION_22
0x40014ff	        0x488975f0	             mov qword [rbp - 0x10], rsi	       572	vtls.c	FUNCTION_22
0x4001503	    0x488b05000000	            mov rax, qword [0x0400150a] 	       573	vtls.c	FUNCTION_22	CALL_1
0x400150a	    0x488b80900000	            mov rax, qword [rax + 0x90] 	       573	vtls.c	FUNCTION_22	CALL_1
0x4001511	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       573	vtls.c	FUNCTION_22	CALL_1
0x4001515	        0x488b55f8	                mov rdx, qword [rbp - 8]	       573	vtls.c	FUNCTION_22	CALL_1
0x4001519	          0x4889ce	                            mov rsi, rcx	       573	vtls.c	FUNCTION_22	CALL_1
0x400151c	          0x4889d7	                            mov rdi, rdx	       573	vtls.c	FUNCTION_22	CALL_1
0x400151f	            0xffd0	                                call rax	       573	vtls.c	FUNCTION_22	CALL_1
0x4001521	              0xc9	                                   leave	       574	vtls.c	FUNCTION_22
0x4001522	              0xc3	                                     ret	       574	vtls.c	FUNCTION_22
Curl_none_check_cxn	functions,0:ELSE,0:IF,0:SWITCH,0:FOR,0:DO,0:WHILE,0:CALL,0	6
0x4002099	              0x55	                                push rbp	      1011	vtls.c	FUNCTION_43
0x400209a	          0x4889e5	                            mov rbp, rsp	      1011	vtls.c	FUNCTION_43
0x400209d	        0x48897df8	                mov qword [rbp - 8], rdi	      1011	vtls.c	FUNCTION_43
0x40020a1	      0xb8ffffffff	                     mov eax, 0xffffffff	      1013	vtls.c	FUNCTION_43
0x40020a6	              0x5d	                                 pop rbp	      1014	vtls.c	FUNCTION_43
0x40020a7	              0xc3	                                     ret	      1014	vtls.c	FUNCTION_43
Curl_ssl_initsessions	functions,0:ELSE,0:IF,2:SWITCH,0:FOR,0:DO,0:WHILE,0:CALL,1	33
0x400156d	              0x55	                                push rbp	       594	vtls.c	FUNCTION_25
0x400156e	          0x4889e5	                            mov rbp, rsp	       594	vtls.c	FUNCTION_25
0x4001571	        0x4883ec20	                           sub rsp, 0x20	       594	vtls.c	FUNCTION_25
0x4001575	        0x48897de8	             mov qword [rbp - 0x18], rdi	       594	vtls.c	FUNCTION_25
0x4001579	        0x488975e0	             mov qword [rbp - 0x20], rsi	       594	vtls.c	FUNCTION_25
0x400157d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       597	vtls.c	FUNCTION_25	IF_1
0x4001581	    0x488b80504d00	          mov rax, qword [rax + 0x4d50] 	       597	vtls.c	FUNCTION_25	IF_1
0x4001588	          0x4885c0	                           test rax, rax	       597	vtls.c	FUNCTION_25	IF_1
0x400158b	            0x7407	                            je 0x4001594	       597	vtls.c	FUNCTION_25	IF_1
0x400158d	      0xb800000000	                              mov eax, 0	       599	vtls.c	FUNCTION_25	IF_1
0x4001592	            0xeb5c	                           jmp 0x40015f0	       599	vtls.c	FUNCTION_25	IF_1
0x4001594	    0x488b05000000	            mov rax, qword [0x0400159b] 	       601	vtls.c	FUNCTION_25	CALL_1
0x400159b	          0x488b00	                    mov rax, qword [rax]	       601	vtls.c	FUNCTION_25	CALL_1
0x400159e	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       601	vtls.c	FUNCTION_25	CALL_1
0x40015a2	      0xbe88000000	                           mov esi, 0x88	       601	vtls.c	FUNCTION_25	CALL_1
0x40015a7	          0x4889d7	                            mov rdi, rdx	       601	vtls.c	FUNCTION_25	CALL_1
0x40015aa	            0xffd0	                                call rax	       601	vtls.c	FUNCTION_25	CALL_1
0x40015ac	        0x488945f8	                mov qword [rbp - 8], rax	       601	vtls.c	FUNCTION_25	CALL_1
0x40015b0	      0x48837df800	                  cmp qword [rbp - 8], 0	       602	vtls.c	FUNCTION_25	IF_2
0x40015b5	            0x7507	                           jne 0x40015be	       602	vtls.c	FUNCTION_25	IF_2
0x40015b7	      0xb81b000000	                           mov eax, 0x1b	       603	vtls.c	FUNCTION_25	IF_2
0x40015bc	            0xeb32	                           jmp 0x40015f0	       603	vtls.c	FUNCTION_25	IF_2
0x40015be	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       606	vtls.c	FUNCTION_25
0x40015c2	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       606	vtls.c	FUNCTION_25
0x40015c6	    0x488990780700	            mov qword [rax + 0x778], rdx	       606	vtls.c	FUNCTION_25
0x40015cd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       607	vtls.c	FUNCTION_25
0x40015d1	        0x488b55f8	                mov rdx, qword [rbp - 8]	       607	vtls.c	FUNCTION_25
0x40015d5	    0x488990504d00	          mov qword [rax + 0x4d50], rdx 	       607	vtls.c	FUNCTION_25
0x40015dc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       608	vtls.c	FUNCTION_25
0x40015e0	    0x48c780584d00	            mov qword [rax + 0x4d58], 1 	       608	vtls.c	FUNCTION_25
0x40015eb	      0xb800000000	                              mov eax, 0	       609	vtls.c	FUNCTION_25
0x40015f0	              0xc9	                                   leave	       610	vtls.c	FUNCTION_25
0x40015f1	              0xc3	                                     ret	       610	vtls.c	FUNCTION_25
Curl_none_close_all	functions,0:ELSE,0:IF,0:SWITCH,0:FOR,0:DO,0:WHILE,0:CALL,0	6
0x40020bf	              0x55	                                push rbp	      1027	vtls.c	FUNCTION_45
0x40020c0	          0x4889e5	                            mov rbp, rsp	      1027	vtls.c	FUNCTION_45
0x40020c3	        0x48897df8	                mov qword [rbp - 8], rdi	      1027	vtls.c	FUNCTION_45
0x40020c7	              0x90	                                     nop	      1029	vtls.c	FUNCTION_45
0x40020c8	              0x5d	                                 pop rbp	      1029	vtls.c	FUNCTION_45
0x40020c9	              0xc3	                                     ret	      1029	vtls.c	FUNCTION_45
Curl_none_cert_status_request	functions,0:ELSE,0:IF,0:SWITCH,0:FOR,0:DO,0:WHILE,0:CALL,0	5
0x40020e7	              0x55	                                push rbp	      1045	vtls.c	FUNCTION_48
0x40020e8	          0x4889e5	                            mov rbp, rsp	      1045	vtls.c	FUNCTION_48
0x40020eb	      0xb800000000	                              mov eax, 0	      1046	vtls.c	FUNCTION_48
0x40020f0	              0x5d	                                 pop rbp	      1047	vtls.c	FUNCTION_48
0x40020f1	              0xc3	                                     ret	      1047	vtls.c	FUNCTION_48
Curl_none_engines_list	functions,0:ELSE,0:IF,0:SWITCH,0:FOR,0:DO,0:WHILE,0:CALL,0	6
0x4002114	              0x55	                                push rbp	      1064	vtls.c	FUNCTION_51
0x4002115	          0x4889e5	                            mov rbp, rsp	      1064	vtls.c	FUNCTION_51
0x4002118	        0x48897df8	                mov qword [rbp - 8], rdi	      1064	vtls.c	FUNCTION_51
0x400211c	      0xb800000000	                              mov eax, 0	      1066	vtls.c	FUNCTION_51
0x4002121	              0x5d	                                 pop rbp	      1067	vtls.c	FUNCTION_51
0x4002122	              0xc3	                                     ret	      1067	vtls.c	FUNCTION_51
Curl_none_set_engine	functions,0:ELSE,0:IF,0:SWITCH,0:FOR,0:DO,0:WHILE,0:CALL,0	7
0x40020f2	              0x55	                                push rbp	      1051	vtls.c	FUNCTION_49
0x40020f3	          0x4889e5	                            mov rbp, rsp	      1051	vtls.c	FUNCTION_49
0x40020f6	        0x48897df8	                mov qword [rbp - 8], rdi	      1051	vtls.c	FUNCTION_49
0x40020fa	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1051	vtls.c	FUNCTION_49
0x40020fe	      0xb804000000	                              mov eax, 4	      1054	vtls.c	FUNCTION_49
0x4002103	              0x5d	                                 pop rbp	      1055	vtls.c	FUNCTION_49
0x4002104	              0xc3	                                     ret	      1055	vtls.c	FUNCTION_49
Curl_ssl_push_certinfo	functions,0:ELSE,0:IF,0:SWITCH,0:FOR,0:DO,0:WHILE,0:CALL,2	21
0x40018ef	              0x55	                                push rbp	       727	vtls.c	FUNCTION_32
0x40018f0	          0x4889e5	                            mov rbp, rsp	       727	vtls.c	FUNCTION_32
0x40018f3	        0x4883ec30	                           sub rsp, 0x30	       727	vtls.c	FUNCTION_32
0x40018f7	        0x48897de8	             mov qword [rbp - 0x18], rdi	       727	vtls.c	FUNCTION_32
0x40018fb	          0x8975e4	             mov dword [rbp - 0x1c], esi	       727	vtls.c	FUNCTION_32
0x40018fe	        0x488955d8	             mov qword [rbp - 0x28], rdx	       727	vtls.c	FUNCTION_32
0x4001902	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       727	vtls.c	FUNCTION_32
0x4001906	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       728	vtls.c	FUNCTION_32	CALL_1
0x400190a	          0x4889c7	                            mov rdi, rax	       728	vtls.c	FUNCTION_32	CALL_1
0x400190d	      0xe800000000	                          call 0x4001912	       728	vtls.c	FUNCTION_32	CALL_1
0x4001912	        0x488945f8	                mov qword [rbp - 8], rax	       728	vtls.c	FUNCTION_32	CALL_1
0x4001916	        0x488b7df8	                mov rdi, qword [rbp - 8]	       730	vtls.c	FUNCTION_32	CALL_2
0x400191a	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       730	vtls.c	FUNCTION_32	CALL_2
0x400191e	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       730	vtls.c	FUNCTION_32	CALL_2
0x4001922	          0x8b75e4	             mov esi, dword [rbp - 0x1c]	       730	vtls.c	FUNCTION_32	CALL_2
0x4001925	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       730	vtls.c	FUNCTION_32	CALL_2
0x4001929	          0x4989f8	                             mov r8, rdi	       730	vtls.c	FUNCTION_32	CALL_2
0x400192c	          0x4889c7	                            mov rdi, rax	       730	vtls.c	FUNCTION_32	CALL_2
0x400192f	      0xe800000000	                          call 0x4001934	       730	vtls.c	FUNCTION_32	CALL_2
0x4001934	              0xc9	                                   leave	       731	vtls.c	FUNCTION_32
0x4001935	              0xc3	                                     ret	       731	vtls.c	FUNCTION_32
Curl_ssl_tls13_ciphersuites	functions,0:ELSE,0:IF,0:SWITCH,0:FOR,0:DO,0:WHILE,0:CALL,0	9
0x400205d	              0x55	                                push rbp	       986	vtls.c	FUNCTION_39
0x400205e	          0x4889e5	                            mov rbp, rsp	       986	vtls.c	FUNCTION_39
0x4002061	    0x488b05000000	            mov rax, qword [0x04002068] 	       987	vtls.c	FUNCTION_39
0x4002068	          0x8b4010	            mov eax, dword [rax + 0x10] 	       987	vtls.c	FUNCTION_39
0x400206b	          0x83e020	                           and eax, 0x20	       987	vtls.c	FUNCTION_39
0x400206e	            0x85c0	                           test eax, eax	       987	vtls.c	FUNCTION_39
0x4002070	           0xf95c0	                                setne al	       987	vtls.c	FUNCTION_39
0x4002073	              0x5d	                                 pop rbp	       988	vtls.c	FUNCTION_39
0x4002074	              0xc3	                                     ret	       988	vtls.c	FUNCTION_39
Curl_none_false_start	functions,0:ELSE,0:IF,0:SWITCH,0:FOR,0:DO,0:WHILE,0:CALL,0	5
0x4002123	              0x55	                                push rbp	      1070	vtls.c	FUNCTION_52
0x4002124	          0x4889e5	                            mov rbp, rsp	      1070	vtls.c	FUNCTION_52
0x4002127	      0xb800000000	                              mov eax, 0	      1071	vtls.c	FUNCTION_52
0x400212c	              0x5d	                                 pop rbp	      1072	vtls.c	FUNCTION_52
0x400212d	              0xc3	                                     ret	      1072	vtls.c	FUNCTION_52
Curl_ssl_init	functions,0:ELSE,0:IF,1:SWITCH,0:FOR,0:DO,0:WHILE,0:CALL,1	13
0x40005bb	              0x55	                                push rbp	       162	vtls.c	FUNCTION_5
0x40005bc	          0x4889e5	                            mov rbp, rsp	       162	vtls.c	FUNCTION_5
0x40005bf	     0xfb605000000	           movzx eax, byte [0x040005c6] 	       164	vtls.c	FUNCTION_5	IF_1
0x40005c6	            0x84c0	                             test al, al	       164	vtls.c	FUNCTION_5	IF_1
0x40005c8	            0x7407	                            je 0x40005d1	       164	vtls.c	FUNCTION_5	IF_1
0x40005ca	      0xb801000000	                              mov eax, 1	       165	vtls.c	FUNCTION_5	IF_1
0x40005cf	            0xeb14	                           jmp 0x40005e5	       165	vtls.c	FUNCTION_5	IF_1
0x40005d1	    0xc60500000000	                mov byte [0x040005d8], 1	       166	vtls.c	FUNCTION_5
0x40005d8	    0x488b05000000	            mov rax, qword [0x040005df] 	       168	vtls.c	FUNCTION_5	CALL_1
0x40005df	        0x488b4020	            mov rax, qword [rax + 0x20] 	       168	vtls.c	FUNCTION_5	CALL_1
0x40005e3	            0xffd0	                                call rax	       168	vtls.c	FUNCTION_5	CALL_1
0x40005e5	              0x5d	                                 pop rbp	       169	vtls.c	FUNCTION_5
0x40005e6	              0xc3	                                     ret	       169	vtls.c	FUNCTION_5
Curl_pin_peer_pubkey	functions,0:ELSE,0:IF,22:SWITCH,0:FOR,0:DO,2:WHILE,0:CALL,29	298
0x4001b0a	              0x55	                                push rbp	       805	vtls.c	FUNCTION_35
0x4001b0b	          0x4889e5	                            mov rbp, rsp	       805	vtls.c	FUNCTION_35
0x4001b0e	    0x4881eca00000	                           sub rsp, 0xa0	       805	vtls.c	FUNCTION_35
0x4001b15	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	       805	vtls.c	FUNCTION_35
0x4001b1c	    0x4889b570ffff	             mov qword [rbp - 0x90], rsi	       805	vtls.c	FUNCTION_35
0x4001b23	    0x48899568ffff	             mov qword [rbp - 0x98], rdx	       805	vtls.c	FUNCTION_35
0x4001b2a	    0x48898d60ffff	             mov qword [rbp - 0xa0], rcx	       805	vtls.c	FUNCTION_35
0x4001b31	    0x64488b042528	                mov rax, qword fs:[0x28]	       805	vtls.c	FUNCTION_35
0x4001b3a	        0x488945f8	                mov qword [rbp - 8], rax	       805	vtls.c	FUNCTION_35
0x4001b3e	            0x31c0	                            xor eax, eax	       805	vtls.c	FUNCTION_35
0x4001b40	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       807	vtls.c	FUNCTION_35
0x4001b48	    0x48c745980000	               mov qword [rbp - 0x68], 0	       807	vtls.c	FUNCTION_35
0x4001b50	    0xc7458c5a0000	           mov dword [rbp - 0x74], 0x5a 	       811	vtls.c	FUNCTION_35
0x4001b57	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       815	vtls.c	FUNCTION_35
0x4001b5f	    0x4883bd70ffff	               cmp qword [rbp - 0x90], 0	       818	vtls.c	FUNCTION_35	IF_1
0x4001b67	            0x750a	                           jne 0x4001b73	       818	vtls.c	FUNCTION_35	IF_1
0x4001b69	      0xb800000000	                              mov eax, 0	       819	vtls.c	FUNCTION_35	IF_1
0x4001b6e	      0xe971040000	                           jmp 0x4001fe4	       819	vtls.c	FUNCTION_35	IF_1
0x4001b73	    0x4883bd68ffff	               cmp qword [rbp - 0x98], 0	       820	vtls.c	FUNCTION_35	IF_2
0x4001b7b	            0x740a	                            je 0x4001b87	       820	vtls.c	FUNCTION_35	IF_2
0x4001b7d	    0x4883bd60ffff	               cmp qword [rbp - 0xa0], 0	       820	vtls.c	FUNCTION_35	IF_2
0x4001b85	            0x7508	                           jne 0x4001b8f	       820	vtls.c	FUNCTION_35	IF_2
0x4001b87	          0x8b458c	             mov eax, dword [rbp - 0x74]	       821	vtls.c	FUNCTION_35	IF_2
0x4001b8a	      0xe955040000	                           jmp 0x4001fe4	       821	vtls.c	FUNCTION_35	IF_2
0x4001b8f	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       824	vtls.c	FUNCTION_35	IF_3	CALL_1
0x4001b96	      0xba08000000	                              mov edx, 8	       824	vtls.c	FUNCTION_35	IF_3	CALL_1
0x4001b9b	    0x488d35000000	                   lea rsi, [0x04001ba2]	       824	vtls.c	FUNCTION_35	IF_3	CALL_1
0x4001ba2	          0x4889c7	                            mov rdi, rax	       824	vtls.c	FUNCTION_35	IF_3	CALL_1
0x4001ba5	      0xe800000000	                          call 0x4001baa	       824	vtls.c	FUNCTION_35	IF_3	CALL_1
0x4001baa	            0x85c0	                           test eax, eax	       824	vtls.c	FUNCTION_35	IF_3	CALL_1
0x4001bac	     0xf8544020000	                           jne 0x4001df6	       824	vtls.c	FUNCTION_35	IF_3	CALL_1
0x4001bb2	    0x488b05000000	            mov rax, qword [0x04001bb9] 	       825	vtls.c	FUNCTION_35	IF_3	IF_4
0x4001bb9	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	       825	vtls.c	FUNCTION_35	IF_3	IF_4
0x4001bc0	          0x4885c0	                           test rax, rax	       825	vtls.c	FUNCTION_35	IF_3	IF_4
0x4001bc3	            0x7508	                           jne 0x4001bcd	       825	vtls.c	FUNCTION_35	IF_3	IF_4
0x4001bc5	          0x8b458c	             mov eax, dword [rbp - 0x74]	       827	vtls.c	FUNCTION_35	IF_3	IF_4
0x4001bc8	      0xe917040000	                           jmp 0x4001fe4	       827	vtls.c	FUNCTION_35	IF_3	IF_4
0x4001bcd	    0x488b05000000	            mov rax, qword [0x04001bd4] 	       831	vtls.c	FUNCTION_35	IF_3	CALL_2
0x4001bd4	          0x488b00	                    mov rax, qword [rax]	       831	vtls.c	FUNCTION_35	IF_3	CALL_2
0x4001bd7	      0xbf20000000	                           mov edi, 0x20	       831	vtls.c	FUNCTION_35	IF_3	CALL_2
0x4001bdc	            0xffd0	                                call rax	       831	vtls.c	FUNCTION_35	IF_3	CALL_2
0x4001bde	        0x488945c0	             mov qword [rbp - 0x40], rax	       831	vtls.c	FUNCTION_35	IF_3	CALL_2
0x4001be2	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       832	vtls.c	FUNCTION_35	IF_3	IF_5
0x4001be7	            0x750a	                           jne 0x4001bf3	       832	vtls.c	FUNCTION_35	IF_3	IF_5
0x4001be9	      0xb81b000000	                           mov eax, 0x1b	       833	vtls.c	FUNCTION_35	IF_3	IF_5
0x4001bee	      0xe9f1030000	                           jmp 0x4001fe4	       833	vtls.c	FUNCTION_35	IF_3	IF_5
0x4001bf3	    0x488b05000000	            mov rax, qword [0x04001bfa] 	       834	vtls.c	FUNCTION_35	IF_3	CALL_3
0x4001bfa	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	       834	vtls.c	FUNCTION_35	IF_3	CALL_3
0x4001c01	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       834	vtls.c	FUNCTION_35	IF_3	CALL_3
0x4001c05	    0x488bb560ffff	             mov rsi, qword [rbp - 0xa0]	       834	vtls.c	FUNCTION_35	IF_3	CALL_3
0x4001c0c	    0x488bbd68ffff	             mov rdi, qword [rbp - 0x98]	       834	vtls.c	FUNCTION_35	IF_3	CALL_3
0x4001c13	      0xb920000000	                           mov ecx, 0x20	       834	vtls.c	FUNCTION_35	IF_3	CALL_3
0x4001c18	            0xffd0	                                call rax	       834	vtls.c	FUNCTION_35	IF_3	CALL_3
0x4001c1a	          0x894590	             mov dword [rbp - 0x70], eax	       834	vtls.c	FUNCTION_35	IF_3	CALL_3
0x4001c1d	        0x837d9000	               cmp dword [rbp - 0x70], 0	       837	vtls.c	FUNCTION_35	IF_3	IF_6
0x4001c21	            0x7408	                            je 0x4001c2b	       837	vtls.c	FUNCTION_35	IF_3	IF_6
0x4001c23	          0x8b4590	             mov eax, dword [rbp - 0x70]	       838	vtls.c	FUNCTION_35	IF_3	IF_6
0x4001c26	      0xe9b9030000	                           jmp 0x4001fe4	       838	vtls.c	FUNCTION_35	IF_3	IF_6
0x4001c2b	        0x488d4da0	                   lea rcx, [rbp - 0x60]	       840	vtls.c	FUNCTION_35	IF_3	CALL_4
0x4001c2f	        0x488d55a8	                   lea rdx, [rbp - 0x58]	       840	vtls.c	FUNCTION_35	IF_3	CALL_4
0x4001c33	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	       840	vtls.c	FUNCTION_35	IF_3	CALL_4
0x4001c37	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       840	vtls.c	FUNCTION_35	IF_3	CALL_4
0x4001c3e	          0x4989c8	                             mov r8, rcx	       840	vtls.c	FUNCTION_35	IF_3	CALL_4
0x4001c41	          0x4889d1	                            mov rcx, rdx	       840	vtls.c	FUNCTION_35	IF_3	CALL_4
0x4001c44	      0xba20000000	                           mov edx, 0x20	       840	vtls.c	FUNCTION_35	IF_3	CALL_4
0x4001c49	          0x4889c7	                            mov rdi, rax	       840	vtls.c	FUNCTION_35	IF_3	CALL_4
0x4001c4c	      0xe800000000	                          call 0x4001c51	       840	vtls.c	FUNCTION_35	IF_3	CALL_4
0x4001c51	          0x894590	             mov dword [rbp - 0x70], eax	       840	vtls.c	FUNCTION_35	IF_3	CALL_4
0x4001c54	    0x488b05000000	            mov rax, qword [0x04001c5b] 	       843	vtls.c	FUNCTION_35	IF_3	CALL_5
0x4001c5b	          0x488b00	                    mov rax, qword [rax]	       843	vtls.c	FUNCTION_35	IF_3	CALL_5
0x4001c5e	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       843	vtls.c	FUNCTION_35	IF_3	CALL_5
0x4001c62	          0x4889d7	                            mov rdi, rdx	       843	vtls.c	FUNCTION_35	IF_3	CALL_5
0x4001c65	            0xffd0	                                call rax	       843	vtls.c	FUNCTION_35	IF_3	CALL_5
0x4001c67	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       843	vtls.c	FUNCTION_35	IF_3	CALL_5
0x4001c6f	        0x837d9000	               cmp dword [rbp - 0x70], 0	       845	vtls.c	FUNCTION_35	IF_3	IF_7
0x4001c73	            0x7408	                            je 0x4001c7d	       845	vtls.c	FUNCTION_35	IF_3	IF_7
0x4001c75	          0x8b4590	             mov eax, dword [rbp - 0x70]	       846	vtls.c	FUNCTION_35	IF_3	IF_7
0x4001c78	      0xe967030000	                           jmp 0x4001fe4	       846	vtls.c	FUNCTION_35	IF_3	IF_7
0x4001c7d	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       848	vtls.c	FUNCTION_35	IF_3	CALL_6
0x4001c81	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       848	vtls.c	FUNCTION_35	IF_3	CALL_6
0x4001c88	    0x488d35000000	                   lea rsi, [0x04001c8f]	       848	vtls.c	FUNCTION_35	IF_3	CALL_6
0x4001c8f	          0x4889c7	                            mov rdi, rax	       848	vtls.c	FUNCTION_35	IF_3	CALL_6
0x4001c92	      0xb800000000	                              mov eax, 0	       848	vtls.c	FUNCTION_35	IF_3	CALL_6
0x4001c97	      0xe800000000	                          call 0x4001c9c	       848	vtls.c	FUNCTION_35	IF_3	CALL_6
0x4001c9c	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       851	vtls.c	FUNCTION_35	IF_3	CALL_7
0x4001ca3	          0x4889c7	                            mov rdi, rax	       851	vtls.c	FUNCTION_35	IF_3	CALL_7
0x4001ca6	      0xe800000000	                          call 0x4001cab	       851	vtls.c	FUNCTION_35	IF_3	CALL_7
0x4001cab	        0x4883c001	                              add rax, 1	       851	vtls.c	FUNCTION_35	IF_3	CALL_7
0x4001caf	        0x488945c8	             mov qword [rbp - 0x38], rax	       851	vtls.c	FUNCTION_35	IF_3	CALL_7
0x4001cb3	    0x488b05000000	            mov rax, qword [0x04001cba] 	       852	vtls.c	FUNCTION_35	IF_3	CALL_8
0x4001cba	          0x488b00	                    mov rax, qword [rax]	       852	vtls.c	FUNCTION_35	IF_3	CALL_8
0x4001cbd	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       852	vtls.c	FUNCTION_35	IF_3	CALL_8
0x4001cc1	          0x4889d7	                            mov rdi, rdx	       852	vtls.c	FUNCTION_35	IF_3	CALL_8
0x4001cc4	            0xffd0	                                call rax	       852	vtls.c	FUNCTION_35	IF_3	CALL_8
0x4001cc6	        0x488945d0	             mov qword [rbp - 0x30], rax	       852	vtls.c	FUNCTION_35	IF_3	CALL_8
0x4001cca	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       853	vtls.c	FUNCTION_35	IF_3	IF_8
0x4001ccf	            0x7525	                           jne 0x4001cf6	       853	vtls.c	FUNCTION_35	IF_3	IF_8
0x4001cd1	    0x488b05000000	            mov rax, qword [0x04001cd8] 	       854	vtls.c	FUNCTION_35	IF_3	IF_8	CALL_9
0x4001cd8	          0x488b00	                    mov rax, qword [rax]	       854	vtls.c	FUNCTION_35	IF_3	IF_8	CALL_9
0x4001cdb	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       854	vtls.c	FUNCTION_35	IF_3	IF_8	CALL_9
0x4001cdf	          0x4889d7	                            mov rdi, rdx	       854	vtls.c	FUNCTION_35	IF_3	IF_8	CALL_9
0x4001ce2	            0xffd0	                                call rax	       854	vtls.c	FUNCTION_35	IF_3	IF_8	CALL_9
0x4001ce4	    0x48c745a80000	               mov qword [rbp - 0x58], 0	       854	vtls.c	FUNCTION_35	IF_3	IF_8	CALL_9
0x4001cec	      0xb81b000000	                           mov eax, 0x1b	       855	vtls.c	FUNCTION_35	IF_3	IF_8
0x4001cf1	      0xe9ee020000	                           jmp 0x4001fe4	       855	vtls.c	FUNCTION_35	IF_3	IF_8
0x4001cf6	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       857	vtls.c	FUNCTION_35	IF_3	CALL_10
0x4001cfa	    0x488b8d70ffff	             mov rcx, qword [rbp - 0x90]	       857	vtls.c	FUNCTION_35	IF_3	CALL_10
0x4001d01	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       857	vtls.c	FUNCTION_35	IF_3	CALL_10
0x4001d05	          0x4889ce	                            mov rsi, rcx	       857	vtls.c	FUNCTION_35	IF_3	CALL_10
0x4001d08	          0x4889c7	                            mov rdi, rax	       857	vtls.c	FUNCTION_35	IF_3	CALL_10
0x4001d0b	      0xe800000000	                          call 0x4001d10	       857	vtls.c	FUNCTION_35	IF_3	CALL_10
0x4001d10	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       859	vtls.c	FUNCTION_35	IF_3
0x4001d14	        0x488945b8	             mov qword [rbp - 0x48], rax	       859	vtls.c	FUNCTION_35	IF_3
0x4001d18	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       861	vtls.c	FUNCTION_35	IF_3	DO_1	CALL_11
0x4001d1c	    0x488d35000000	                   lea rsi, [0x04001d23]	       861	vtls.c	FUNCTION_35	IF_3	DO_1	CALL_11
0x4001d23	          0x4889c7	                            mov rdi, rax	       861	vtls.c	FUNCTION_35	IF_3	DO_1	CALL_11
0x4001d26	      0xe800000000	                          call 0x4001d2b	       861	vtls.c	FUNCTION_35	IF_3	DO_1	CALL_11
0x4001d2b	        0x488945d8	             mov qword [rbp - 0x28], rax	       861	vtls.c	FUNCTION_35	IF_3	DO_1	CALL_11
0x4001d2f	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       866	vtls.c	FUNCTION_35	IF_3	DO_1	IF_9
0x4001d34	            0x7407	                            je 0x4001d3d	       866	vtls.c	FUNCTION_35	IF_3	DO_1	IF_9
0x4001d36	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       867	vtls.c	FUNCTION_35	IF_3	DO_1	IF_9
0x4001d3a	          0xc60000	                       mov byte [rax], 0	       867	vtls.c	FUNCTION_35	IF_3	DO_1	IF_9
0x4001d3d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       870	vtls.c	FUNCTION_35	IF_3	DO_1	IF_10	CALL_12
0x4001d41	        0x4883c008	                              add rax, 8	       870	vtls.c	FUNCTION_35	IF_3	DO_1	IF_10	CALL_12
0x4001d45	          0x4889c7	                            mov rdi, rax	       870	vtls.c	FUNCTION_35	IF_3	DO_1	IF_10	CALL_12
0x4001d48	      0xe800000000	                          call 0x4001d4d	       870	vtls.c	FUNCTION_35	IF_3	DO_1	IF_10	CALL_12
0x4001d4d	          0x4889c2	                            mov rdx, rax	       870	vtls.c	FUNCTION_35	IF_3	DO_1	IF_10	CALL_12
0x4001d50	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       870	vtls.c	FUNCTION_35	IF_3	DO_1	IF_10	CALL_12
0x4001d54	          0x4839c2	                            cmp rdx, rax	       870	vtls.c	FUNCTION_35	IF_3	DO_1	IF_10	CALL_12
0x4001d57	            0x7528	                           jne 0x4001d81	       870	vtls.c	FUNCTION_35	IF_3	DO_1	IF_10	CALL_12
0x4001d59	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       871	vtls.c	FUNCTION_35	IF_3	DO_1	IF_10	CALL_13
0x4001d5d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       871	vtls.c	FUNCTION_35	IF_3	DO_1	IF_10	CALL_13
0x4001d61	        0x488d4808	                      lea rcx, [rax + 8]	       871	vtls.c	FUNCTION_35	IF_3	DO_1	IF_10	CALL_13
0x4001d65	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       871	vtls.c	FUNCTION_35	IF_3	DO_1	IF_10	CALL_13
0x4001d69	          0x4889ce	                            mov rsi, rcx	       871	vtls.c	FUNCTION_35	IF_3	DO_1	IF_10	CALL_13
0x4001d6c	          0x4889c7	                            mov rdi, rax	       871	vtls.c	FUNCTION_35	IF_3	DO_1	IF_10	CALL_13
0x4001d6f	      0xe800000000	                          call 0x4001d74	       871	vtls.c	FUNCTION_35	IF_3	DO_1	IF_10	CALL_13
0x4001d74	            0x85c0	                           test eax, eax	       870	vtls.c	FUNCTION_35	IF_3	DO_1	IF_10	CALL_12
0x4001d76	            0x7509	                           jne 0x4001d81	       870	vtls.c	FUNCTION_35	IF_3	DO_1	IF_10	CALL_12
0x4001d78	    0xc7458c000000	               mov dword [rbp - 0x74], 0	       872	vtls.c	FUNCTION_35	IF_3	DO_1	IF_10
0x4001d7f	            0xeb37	                           jmp 0x4001db8	       873	vtls.c	FUNCTION_35	IF_3	DO_1	IF_10
0x4001d81	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       880	vtls.c	FUNCTION_35	IF_3	DO_1	IF_11
0x4001d86	            0x741e	                            je 0x4001da6	       880	vtls.c	FUNCTION_35	IF_3	DO_1	IF_11
0x4001d88	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       881	vtls.c	FUNCTION_35	IF_3	DO_1	IF_11
0x4001d8c	          0xc6003b	                    mov byte [rax], 0x3b	       881	vtls.c	FUNCTION_35	IF_3	DO_1	IF_11
0x4001d8f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       882	vtls.c	FUNCTION_35	IF_3	DO_1	IF_11	CALL_14
0x4001d93	    0x488d35000000	                   lea rsi, [0x04001d9a]	       882	vtls.c	FUNCTION_35	IF_3	DO_1	IF_11	CALL_14
0x4001d9a	          0x4889c7	                            mov rdi, rax	       882	vtls.c	FUNCTION_35	IF_3	DO_1	IF_11	CALL_14
0x4001d9d	      0xe800000000	                          call 0x4001da2	       882	vtls.c	FUNCTION_35	IF_3	DO_1	IF_11	CALL_14
0x4001da2	        0x488945b8	             mov qword [rbp - 0x48], rax	       882	vtls.c	FUNCTION_35	IF_3	DO_1	IF_11	CALL_14
0x4001da6	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       884	vtls.c	FUNCTION_35	IF_3	DO_1
0x4001dab	            0x740b	                            je 0x4001db8	       884	vtls.c	FUNCTION_35	IF_3	DO_1
0x4001dad	      0x48837db800	               cmp qword [rbp - 0x48], 0	       884	vtls.c	FUNCTION_35	IF_3	DO_1
0x4001db2	     0xf8560ffffff	                           jne 0x4001d18	       884	vtls.c	FUNCTION_35	IF_3	DO_1
0x4001db8	    0x488b05000000	            mov rax, qword [0x04001dbf] 	       885	vtls.c	FUNCTION_35	IF_3	CALL_15
0x4001dbf	          0x488b00	                    mov rax, qword [rax]	       885	vtls.c	FUNCTION_35	IF_3	CALL_15
0x4001dc2	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       885	vtls.c	FUNCTION_35	IF_3	CALL_15
0x4001dc6	          0x4889d7	                            mov rdi, rdx	       885	vtls.c	FUNCTION_35	IF_3	CALL_15
0x4001dc9	            0xffd0	                                call rax	       885	vtls.c	FUNCTION_35	IF_3	CALL_15
0x4001dcb	    0x48c745a80000	               mov qword [rbp - 0x58], 0	       885	vtls.c	FUNCTION_35	IF_3	CALL_15
0x4001dd3	    0x488b05000000	            mov rax, qword [0x04001dda] 	       886	vtls.c	FUNCTION_35	IF_3	CALL_16
0x4001dda	          0x488b00	                    mov rax, qword [rax]	       886	vtls.c	FUNCTION_35	IF_3	CALL_16
0x4001ddd	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       886	vtls.c	FUNCTION_35	IF_3	CALL_16
0x4001de1	          0x4889d7	                            mov rdi, rdx	       886	vtls.c	FUNCTION_35	IF_3	CALL_16
0x4001de4	            0xffd0	                                call rax	       886	vtls.c	FUNCTION_35	IF_3	CALL_16
0x4001de6	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       886	vtls.c	FUNCTION_35	IF_3	CALL_16
0x4001dee	          0x8b458c	             mov eax, dword [rbp - 0x74]	       887	vtls.c	FUNCTION_35	IF_3
0x4001df1	      0xe9ee010000	                           jmp 0x4001fe4	       887	vtls.c	FUNCTION_35	IF_3
0x4001df6	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       890	vtls.c	FUNCTION_35	CALL_17
0x4001dfd	    0x488d35000000	                   lea rsi, [0x04001e04]	       890	vtls.c	FUNCTION_35	CALL_17
0x4001e04	          0x4889c7	                            mov rdi, rax	       890	vtls.c	FUNCTION_35	CALL_17
0x4001e07	      0xe800000000	                          call 0x4001e0c	       890	vtls.c	FUNCTION_35	CALL_17
0x4001e0c	        0x488945e0	             mov qword [rbp - 0x20], rax	       890	vtls.c	FUNCTION_35	CALL_17
0x4001e10	      0x48837de000	               cmp qword [rbp - 0x20], 0	       891	vtls.c	FUNCTION_35	IF_12
0x4001e15	            0x7508	                           jne 0x4001e1f	       891	vtls.c	FUNCTION_35	IF_12
0x4001e17	          0x8b458c	             mov eax, dword [rbp - 0x74]	       892	vtls.c	FUNCTION_35	IF_12
0x4001e1a	      0xe9c5010000	                           jmp 0x4001fe4	       892	vtls.c	FUNCTION_35	IF_12
0x4001e1f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       896	vtls.c	FUNCTION_35	DO_2	IF_13	CALL_18
0x4001e23	      0xba02000000	                              mov edx, 2	       896	vtls.c	FUNCTION_35	DO_2	IF_13	CALL_18
0x4001e28	      0xbe00000000	                              mov esi, 0	       896	vtls.c	FUNCTION_35	DO_2	IF_13	CALL_18
0x4001e2d	          0x4889c7	                            mov rdi, rax	       896	vtls.c	FUNCTION_35	DO_2	IF_13	CALL_18
0x4001e30	      0xe800000000	                          call 0x4001e35	       896	vtls.c	FUNCTION_35	DO_2	IF_13	CALL_18
0x4001e35	            0x85c0	                           test eax, eax	       896	vtls.c	FUNCTION_35	DO_2	IF_13	CALL_18
0x4001e37	     0xf854f010000	                           jne 0x4001f8c	       896	vtls.c	FUNCTION_35	DO_2	IF_13	CALL_18
0x4001e3d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       898	vtls.c	FUNCTION_35	DO_2	CALL_19
0x4001e41	          0x4889c7	                            mov rdi, rax	       898	vtls.c	FUNCTION_35	DO_2	CALL_19
0x4001e44	      0xe800000000	                          call 0x4001e49	       898	vtls.c	FUNCTION_35	DO_2	CALL_19
0x4001e49	        0x488945e8	             mov qword [rbp - 0x18], rax	       898	vtls.c	FUNCTION_35	DO_2	CALL_19
0x4001e4d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       899	vtls.c	FUNCTION_35	DO_2	IF_14	CALL_20
0x4001e51	      0xba00000000	                              mov edx, 0	       899	vtls.c	FUNCTION_35	DO_2	IF_14	CALL_20
0x4001e56	      0xbe00000000	                              mov esi, 0	       899	vtls.c	FUNCTION_35	DO_2	IF_14	CALL_20
0x4001e5b	          0x4889c7	                            mov rdi, rax	       899	vtls.c	FUNCTION_35	DO_2	IF_14	CALL_20
0x4001e5e	      0xe800000000	                          call 0x4001e63	       899	vtls.c	FUNCTION_35	DO_2	IF_14	CALL_20
0x4001e63	            0x85c0	                           test eax, eax	       899	vtls.c	FUNCTION_35	DO_2	IF_14	CALL_20
0x4001e65	     0xf8524010000	                           jne 0x4001f8f	       899	vtls.c	FUNCTION_35	DO_2	IF_14	CALL_20
0x4001e6b	      0x48837de800	               cmp qword [rbp - 0x18], 0	       901	vtls.c	FUNCTION_35	DO_2	IF_15
0x4001e70	     0xf8829010000	                            js 0x4001f9f	       901	vtls.c	FUNCTION_35	DO_2	IF_15
0x4001e76	    0x48817de80000	       cmp qword [rbp - 0x18], 0x100000 	       901	vtls.c	FUNCTION_35	DO_2	IF_15
0x4001e7e	     0xf8f1b010000	                            jg 0x4001f9f	       901	vtls.c	FUNCTION_35	DO_2	IF_15
0x4001e84	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       908	vtls.c	FUNCTION_35	DO_2	CALL_21
0x4001e88	          0x4889c7	                            mov rdi, rax	       908	vtls.c	FUNCTION_35	DO_2	CALL_21
0x4001e8b	      0xe800000000	                          call 0x4001e90	       908	vtls.c	FUNCTION_35	DO_2	CALL_21
0x4001e90	        0x488945f0	             mov qword [rbp - 0x10], rax	       908	vtls.c	FUNCTION_35	DO_2	CALL_21
0x4001e94	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       909	vtls.c	FUNCTION_35	DO_2	IF_16
0x4001e9b	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       909	vtls.c	FUNCTION_35	DO_2	IF_16
0x4001e9f	     0xf87ed000000	                            ja 0x4001f92	       909	vtls.c	FUNCTION_35	DO_2	IF_16
0x4001ea5	    0x488b05000000	            mov rax, qword [0x04001eac] 	       916	vtls.c	FUNCTION_35	DO_2	CALL_22
0x4001eac	          0x488b00	                    mov rax, qword [rax]	       916	vtls.c	FUNCTION_35	DO_2	CALL_22
0x4001eaf	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       916	vtls.c	FUNCTION_35	DO_2	CALL_22
0x4001eb3	        0x4883c201	                              add rdx, 1	       916	vtls.c	FUNCTION_35	DO_2	CALL_22
0x4001eb7	          0x4889d7	                            mov rdi, rdx	       916	vtls.c	FUNCTION_35	DO_2	CALL_22
0x4001eba	            0xffd0	                                call rax	       916	vtls.c	FUNCTION_35	DO_2	CALL_22
0x4001ebc	        0x488945b0	             mov qword [rbp - 0x50], rax	       916	vtls.c	FUNCTION_35	DO_2	CALL_22
0x4001ec0	      0x48837db000	               cmp qword [rbp - 0x50], 0	       917	vtls.c	FUNCTION_35	DO_2	IF_17
0x4001ec5	     0xf84ca000000	                            je 0x4001f95	       917	vtls.c	FUNCTION_35	DO_2	IF_17
0x4001ecb	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       921	vtls.c	FUNCTION_35	DO_2	IF_18	CALL_23
0x4001ecf	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       921	vtls.c	FUNCTION_35	DO_2	IF_18	CALL_23
0x4001ed3	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       921	vtls.c	FUNCTION_35	DO_2	IF_18	CALL_23
0x4001ed7	          0x4889d1	                            mov rcx, rdx	       921	vtls.c	FUNCTION_35	DO_2	IF_18	CALL_23
0x4001eda	      0xba01000000	                              mov edx, 1	       921	vtls.c	FUNCTION_35	DO_2	IF_18	CALL_23
0x4001edf	          0x4889c7	                            mov rdi, rax	       921	vtls.c	FUNCTION_35	DO_2	IF_18	CALL_23
0x4001ee2	      0xe800000000	                          call 0x4001ee7	       921	vtls.c	FUNCTION_35	DO_2	IF_18	CALL_23
0x4001ee7	          0x83f801	                              cmp eax, 1	       921	vtls.c	FUNCTION_35	DO_2	IF_18	CALL_23
0x4001eea	     0xf85a8000000	                           jne 0x4001f98	       921	vtls.c	FUNCTION_35	DO_2	IF_18	CALL_23
0x4001ef0	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       925	vtls.c	FUNCTION_35	DO_2	IF_19
0x4001ef7	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       925	vtls.c	FUNCTION_35	DO_2	IF_19
0x4001efb	            0x752a	                           jne 0x4001f27	       925	vtls.c	FUNCTION_35	DO_2	IF_19
0x4001efd	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	       926	vtls.c	FUNCTION_35	DO_2	IF_19	IF_20	CALL_24
0x4001f04	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	       926	vtls.c	FUNCTION_35	DO_2	IF_19	IF_20	CALL_24
0x4001f08	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       926	vtls.c	FUNCTION_35	DO_2	IF_19	IF_20	CALL_24
0x4001f0f	          0x4889ce	                            mov rsi, rcx	       926	vtls.c	FUNCTION_35	DO_2	IF_19	IF_20	CALL_24
0x4001f12	          0x4889c7	                            mov rdi, rax	       926	vtls.c	FUNCTION_35	DO_2	IF_19	IF_20	CALL_24
0x4001f15	      0xe800000000	                          call 0x4001f1a	       926	vtls.c	FUNCTION_35	DO_2	IF_19	IF_20	CALL_24
0x4001f1a	            0x85c0	                           test eax, eax	       926	vtls.c	FUNCTION_35	DO_2	IF_19	IF_20	CALL_24
0x4001f1c	            0x757d	                           jne 0x4001f9b	       926	vtls.c	FUNCTION_35	DO_2	IF_19	IF_20	CALL_24
0x4001f1e	    0xc7458c000000	               mov dword [rbp - 0x74], 0	       927	vtls.c	FUNCTION_35	DO_2	IF_19	IF_20
0x4001f25	            0xeb74	                           jmp 0x4001f9b	       928	vtls.c	FUNCTION_35	DO_2	IF_19
0x4001f27	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       935	vtls.c	FUNCTION_35	DO_2
0x4001f2b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       935	vtls.c	FUNCTION_35	DO_2
0x4001f2f	          0x4801d0	                            add rax, rdx	       935	vtls.c	FUNCTION_35	DO_2
0x4001f32	          0xc60000	                       mov byte [rax], 0	       935	vtls.c	FUNCTION_35	DO_2
0x4001f35	        0x488d55a8	                   lea rdx, [rbp - 0x58]	       936	vtls.c	FUNCTION_35	DO_2	CALL_25
0x4001f39	        0x488d4d98	                   lea rcx, [rbp - 0x68]	       936	vtls.c	FUNCTION_35	DO_2	CALL_25
0x4001f3d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       936	vtls.c	FUNCTION_35	DO_2	CALL_25
0x4001f41	          0x4889ce	                            mov rsi, rcx	       936	vtls.c	FUNCTION_35	DO_2	CALL_25
0x4001f44	          0x4889c7	                            mov rdi, rax	       936	vtls.c	FUNCTION_35	DO_2	CALL_25
0x4001f47	      0xe81cfaffff	              call sym.pubkey_pem_to_der	       936	vtls.c	FUNCTION_35	DO_2	CALL_25
0x4001f4c	          0x894594	             mov dword [rbp - 0x6c], eax	       936	vtls.c	FUNCTION_35	DO_2	CALL_25
0x4001f4f	        0x837d9400	               cmp dword [rbp - 0x6c], 0	       938	vtls.c	FUNCTION_35	DO_2	IF_21
0x4001f53	            0x7549	                           jne 0x4001f9e	       938	vtls.c	FUNCTION_35	DO_2	IF_21
0x4001f55	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       945	vtls.c	FUNCTION_35	DO_2	IF_22	CALL_26
0x4001f59	    0x48398560ffff	            cmp qword [rbp - 0xa0], rax 	       945	vtls.c	FUNCTION_35	DO_2	IF_22	CALL_26
0x4001f60	            0x753d	                           jne 0x4001f9f	       945	vtls.c	FUNCTION_35	DO_2	IF_22	CALL_26
0x4001f62	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	       945	vtls.c	FUNCTION_35	DO_2	IF_22	CALL_26
0x4001f66	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	       945	vtls.c	FUNCTION_35	DO_2	IF_22	CALL_26
0x4001f6d	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       945	vtls.c	FUNCTION_35	DO_2	IF_22	CALL_26
0x4001f74	          0x4889ce	                            mov rsi, rcx	       945	vtls.c	FUNCTION_35	DO_2	IF_22	CALL_26
0x4001f77	          0x4889c7	                            mov rdi, rax	       945	vtls.c	FUNCTION_35	DO_2	IF_22	CALL_26
0x4001f7a	      0xe800000000	                          call 0x4001f7f	       945	vtls.c	FUNCTION_35	DO_2	IF_22	CALL_26
0x4001f7f	            0x85c0	                           test eax, eax	       945	vtls.c	FUNCTION_35	DO_2	IF_22	CALL_26
0x4001f81	            0x751c	                           jne 0x4001f9f	       945	vtls.c	FUNCTION_35	DO_2	IF_22	CALL_26
0x4001f83	    0xc7458c000000	               mov dword [rbp - 0x74], 0	       946	vtls.c	FUNCTION_35	DO_2	IF_22
0x4001f8a	            0xeb13	                           jmp 0x4001f9f	       946	vtls.c	FUNCTION_35	DO_2	IF_22
0x4001f8c	              0x90	                                     nop	       897	vtls.c	FUNCTION_35	DO_2	IF_13
0x4001f8d	            0xeb10	                           jmp 0x4001f9f	       897	vtls.c	FUNCTION_35	DO_2	IF_13
0x4001f8f	              0x90	                                     nop	       900	vtls.c	FUNCTION_35	DO_2	IF_14
0x4001f90	            0xeb0d	                           jmp 0x4001f9f	       900	vtls.c	FUNCTION_35	DO_2	IF_14
0x4001f92	              0x90	                                     nop	       910	vtls.c	FUNCTION_35	DO_2	IF_16
0x4001f93	            0xeb0a	                           jmp 0x4001f9f	       910	vtls.c	FUNCTION_35	DO_2	IF_16
0x4001f95	              0x90	                                     nop	       918	vtls.c	FUNCTION_35	DO_2	IF_17
0x4001f96	            0xeb07	                           jmp 0x4001f9f	       918	vtls.c	FUNCTION_35	DO_2	IF_17
0x4001f98	              0x90	                                     nop	       922	vtls.c	FUNCTION_35	DO_2	IF_18
0x4001f99	            0xeb04	                           jmp 0x4001f9f	       922	vtls.c	FUNCTION_35	DO_2	IF_18
0x4001f9b	              0x90	                                     nop	       928	vtls.c	FUNCTION_35	DO_2	IF_19
0x4001f9c	            0xeb01	                           jmp 0x4001f9f	       928	vtls.c	FUNCTION_35	DO_2	IF_19
0x4001f9e	              0x90	                                     nop	       939	vtls.c	FUNCTION_35	DO_2	IF_21
0x4001f9f	    0x488b05000000	            mov rax, qword [0x04001fa6] 	       949	vtls.c	FUNCTION_35	CALL_27
0x4001fa6	          0x488b00	                    mov rax, qword [rax]	       949	vtls.c	FUNCTION_35	CALL_27
0x4001fa9	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       949	vtls.c	FUNCTION_35	CALL_27
0x4001fad	          0x4889d7	                            mov rdi, rdx	       949	vtls.c	FUNCTION_35	CALL_27
0x4001fb0	            0xffd0	                                call rax	       949	vtls.c	FUNCTION_35	CALL_27
0x4001fb2	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       949	vtls.c	FUNCTION_35	CALL_27
0x4001fba	    0x488b05000000	            mov rax, qword [0x04001fc1] 	       950	vtls.c	FUNCTION_35	CALL_28
0x4001fc1	          0x488b00	                    mov rax, qword [rax]	       950	vtls.c	FUNCTION_35	CALL_28
0x4001fc4	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       950	vtls.c	FUNCTION_35	CALL_28
0x4001fc8	          0x4889d7	                            mov rdi, rdx	       950	vtls.c	FUNCTION_35	CALL_28
0x4001fcb	            0xffd0	                                call rax	       950	vtls.c	FUNCTION_35	CALL_28
0x4001fcd	    0x48c745980000	               mov qword [rbp - 0x68], 0	       950	vtls.c	FUNCTION_35	CALL_28
0x4001fd5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       951	vtls.c	FUNCTION_35	CALL_29
0x4001fd9	          0x4889c7	                            mov rdi, rax	       951	vtls.c	FUNCTION_35	CALL_29
0x4001fdc	      0xe800000000	                          call 0x4001fe1	       951	vtls.c	FUNCTION_35	CALL_29
0x4001fe1	          0x8b458c	             mov eax, dword [rbp - 0x74]	       953	vtls.c	FUNCTION_35
0x4001fe4	        0x488b4df8	                mov rcx, qword [rbp - 8]	       954	vtls.c	FUNCTION_35
0x4001fe8	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       954	vtls.c	FUNCTION_35
0x4001ff1	            0x7405	                            je 0x4001ff8	       954	vtls.c	FUNCTION_35
0x4001ff3	      0xe800000000	                          call 0x4001ff8	       954	vtls.c	FUNCTION_35
0x4001ff8	              0xc9	                                   leave	       954	vtls.c	FUNCTION_35
0x4001ff9	              0xc3	                                     ret	       954	vtls.c	FUNCTION_35
Curl_none_shutdown	functions,0:ELSE,0:IF,0:SWITCH,0:FOR,0:DO,0:WHILE,0:CALL,0	7
0x4002087	              0x55	                                push rbp	      1004	vtls.c	FUNCTION_42
0x4002088	          0x4889e5	                            mov rbp, rsp	      1004	vtls.c	FUNCTION_42
0x400208b	        0x48897df8	                mov qword [rbp - 8], rdi	      1004	vtls.c	FUNCTION_42
0x400208f	          0x8975f4	              mov dword [rbp - 0xc], esi	      1004	vtls.c	FUNCTION_42
0x4002092	      0xb800000000	                              mov eax, 0	      1007	vtls.c	FUNCTION_42
0x4002097	              0x5d	                                 pop rbp	      1008	vtls.c	FUNCTION_42
0x4002098	              0xc3	                                     ret	      1008	vtls.c	FUNCTION_42
Curl_ssl_cleanup	functions,0:ELSE,0:IF,1:SWITCH,0:FOR,0:DO,0:WHILE,0:CALL,1	12
0x40005e7	              0x55	                                push rbp	       174	vtls.c	FUNCTION_6
0x40005e8	          0x4889e5	                            mov rbp, rsp	       174	vtls.c	FUNCTION_6
0x40005eb	     0xfb605000000	           movzx eax, byte [0x040005f2] 	       175	vtls.c	FUNCTION_6	IF_1
0x40005f2	            0x84c0	                             test al, al	       175	vtls.c	FUNCTION_6	IF_1
0x40005f4	            0x7414	                            je 0x400060a	       175	vtls.c	FUNCTION_6	IF_1
0x40005f6	    0x488b05000000	            mov rax, qword [0x040005fd] 	       177	vtls.c	FUNCTION_6	IF_1	CALL_1
0x40005fd	        0x488b4028	            mov rax, qword [rax + 0x28] 	       177	vtls.c	FUNCTION_6	IF_1	CALL_1
0x4000601	            0xffd0	                                call rax	       177	vtls.c	FUNCTION_6	IF_1	CALL_1
0x4000603	    0xc60500000000	                mov byte [0x0400060a], 0	       178	vtls.c	FUNCTION_6	IF_1
0x400060a	              0x90	                                     nop	       180	vtls.c	FUNCTION_6
0x400060b	              0x5d	                                 pop rbp	       180	vtls.c	FUNCTION_6
0x400060c	              0xc3	                                     ret	       180	vtls.c	FUNCTION_6
multissl_init	functions,0:ELSE,0:IF,6:SWITCH,0:FOR,1:DO,0:WHILE,0:CALL,4	69
0x4002497	              0x55	                                push rbp	      1267	vtls.c	FUNCTION_61
0x4002498	          0x4889e5	                            mov rbp, rsp	      1267	vtls.c	FUNCTION_61
0x400249b	        0x4883ec30	                           sub rsp, 0x30	      1267	vtls.c	FUNCTION_61
0x400249f	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1267	vtls.c	FUNCTION_61
0x40024a3	    0x488b15000000	            mov rdx, qword [0x040024aa] 	      1272	vtls.c	FUNCTION_61	IF_1
0x40024aa	    0x488d05000000	                   lea rax, [0x040024b1]	      1272	vtls.c	FUNCTION_61	IF_1
0x40024b1	          0x4839c2	                            cmp rdx, rax	      1272	vtls.c	FUNCTION_61	IF_1
0x40024b4	            0x740a	                            je 0x40024c0	      1272	vtls.c	FUNCTION_61	IF_1
0x40024b6	      0xb801000000	                              mov eax, 1	      1273	vtls.c	FUNCTION_61	IF_1
0x40024bb	      0xe903010000	                           jmp 0x40025c3	      1273	vtls.c	FUNCTION_61	IF_1
0x40024c0	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1275	vtls.c	FUNCTION_61	IF_2
0x40024c5	            0x7415	                            je 0x40024dc	      1275	vtls.c	FUNCTION_61	IF_2
0x40024c7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1276	vtls.c	FUNCTION_61	IF_2
0x40024cb	    0x488905000000	            mov qword [0x040024d2], rax 	      1276	vtls.c	FUNCTION_61	IF_2
0x40024d2	      0xb800000000	                              mov eax, 0	      1277	vtls.c	FUNCTION_61	IF_2
0x40024d7	      0xe9e7000000	                           jmp 0x40025c3	      1277	vtls.c	FUNCTION_61	IF_2
0x40024dc	    0x488b05000000	            mov rax, qword [0x040024e3] 	      1280	vtls.c	FUNCTION_61	IF_3
0x40024e3	          0x4885c0	                           test rax, rax	      1280	vtls.c	FUNCTION_61	IF_3
0x40024e6	            0x750a	                           jne 0x40024f2	      1280	vtls.c	FUNCTION_61	IF_3
0x40024e8	      0xb801000000	                              mov eax, 1	      1281	vtls.c	FUNCTION_61	IF_3
0x40024ed	      0xe9d1000000	                           jmp 0x40025c3	      1281	vtls.c	FUNCTION_61	IF_3
0x40024f2	    0x488d3d000000	                   lea rdi, [0x040024f9]	      1283	vtls.c	FUNCTION_61	CALL_1
0x40024f9	      0xe800000000	                          call 0x40024fe	      1283	vtls.c	FUNCTION_61	CALL_1
0x40024fe	        0x488945f0	             mov qword [rbp - 0x10], rax	      1283	vtls.c	FUNCTION_61	CALL_1
0x4002502	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1283	vtls.c	FUNCTION_61	CALL_1
0x4002506	        0x488945f8	                mov qword [rbp - 8], rax	      1283	vtls.c	FUNCTION_61	CALL_1
0x400250a	      0x48837df800	                  cmp qword [rbp - 8], 0	      1288	vtls.c	FUNCTION_61	IF_5
0x400250f	     0xf848f000000	                            je 0x40025a4	      1288	vtls.c	FUNCTION_61	IF_5
0x4002515	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      1289	vtls.c	FUNCTION_61	IF_5	FOR_1
0x400251c	            0xeb65	                           jmp 0x4002583	      1289	vtls.c	FUNCTION_61	IF_5	FOR_1
0x400251e	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1290	vtls.c	FUNCTION_61	IF_5	FOR_1	IF_6	CALL_2
0x4002521	            0x4898	                                    cdqe	      1290	vtls.c	FUNCTION_61	IF_5	FOR_1	IF_6	CALL_2
0x4002523	    0x488d14c50000	                        lea rdx, [rax*8]	      1290	vtls.c	FUNCTION_61	IF_5	FOR_1	IF_6	CALL_2
0x400252b	    0x488d05000000	                   lea rax, [0x04002532]	      1290	vtls.c	FUNCTION_61	IF_5	FOR_1	IF_6	CALL_2
0x4002532	        0x488b0402	              mov rax, qword [rdx + rax]	      1290	vtls.c	FUNCTION_61	IF_5	FOR_1	IF_6	CALL_2
0x4002536	        0x488b5008	                mov rdx, qword [rax + 8]	      1290	vtls.c	FUNCTION_61	IF_5	FOR_1	IF_6	CALL_2
0x400253a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1290	vtls.c	FUNCTION_61	IF_5	FOR_1	IF_6	CALL_2
0x400253e	          0x4889d6	                            mov rsi, rdx	      1290	vtls.c	FUNCTION_61	IF_5	FOR_1	IF_6	CALL_2
0x4002541	          0x4889c7	                            mov rdi, rax	      1290	vtls.c	FUNCTION_61	IF_5	FOR_1	IF_6	CALL_2
0x4002544	      0xe800000000	                          call 0x4002549	      1290	vtls.c	FUNCTION_61	IF_5	FOR_1	IF_6	CALL_2
0x4002549	            0x85c0	                           test eax, eax	      1290	vtls.c	FUNCTION_61	IF_5	FOR_1	IF_6	CALL_2
0x400254b	            0x7432	                            je 0x400257f	      1290	vtls.c	FUNCTION_61	IF_5	FOR_1	IF_6	CALL_2
0x400254d	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1291	vtls.c	FUNCTION_61	IF_5	FOR_1	IF_6
0x4002550	            0x4898	                                    cdqe	      1291	vtls.c	FUNCTION_61	IF_5	FOR_1	IF_6
0x4002552	    0x488d14c50000	                        lea rdx, [rax*8]	      1291	vtls.c	FUNCTION_61	IF_5	FOR_1	IF_6
0x400255a	    0x488d05000000	                   lea rax, [0x04002561]	      1291	vtls.c	FUNCTION_61	IF_5	FOR_1	IF_6
0x4002561	        0x488b0402	              mov rax, qword [rdx + rax]	      1291	vtls.c	FUNCTION_61	IF_5	FOR_1	IF_6
0x4002565	    0x488905000000	            mov qword [0x0400256c], rax 	      1291	vtls.c	FUNCTION_61	IF_5	FOR_1	IF_6
0x400256c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1292	vtls.c	FUNCTION_61	IF_5	FOR_1	IF_6	CALL_3
0x4002570	          0x4889c7	                            mov rdi, rax	      1292	vtls.c	FUNCTION_61	IF_5	FOR_1	IF_6	CALL_3
0x4002573	      0xe800000000	                          call 0x4002578	      1292	vtls.c	FUNCTION_61	IF_5	FOR_1	IF_6	CALL_3
0x4002578	      0xb800000000	                              mov eax, 0	      1293	vtls.c	FUNCTION_61	IF_5	FOR_1	IF_6
0x400257d	            0xeb44	                           jmp 0x40025c3	      1293	vtls.c	FUNCTION_61	IF_5	FOR_1	IF_6
0x400257f	        0x8345ec01	               add dword [rbp - 0x14], 1	      1289	vtls.c	FUNCTION_61	IF_5	FOR_1
0x4002583	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1289	vtls.c	FUNCTION_61	IF_5	FOR_1
0x4002586	            0x4898	                                    cdqe	      1289	vtls.c	FUNCTION_61	IF_5	FOR_1
0x4002588	    0x488d14c50000	                        lea rdx, [rax*8]	      1289	vtls.c	FUNCTION_61	IF_5	FOR_1
0x4002590	    0x488d05000000	                   lea rax, [0x04002597]	      1289	vtls.c	FUNCTION_61	IF_5	FOR_1
0x4002597	        0x488b0402	              mov rax, qword [rdx + rax]	      1289	vtls.c	FUNCTION_61	IF_5	FOR_1
0x400259b	          0x4885c0	                           test rax, rax	      1289	vtls.c	FUNCTION_61	IF_5	FOR_1
0x400259e	     0xf857affffff	                           jne 0x400251e	      1289	vtls.c	FUNCTION_61	IF_5	FOR_1
0x40025a4	    0x488b05000000	            mov rax, qword [0x040025ab] 	      1299	vtls.c	FUNCTION_61
0x40025ab	    0x488905000000	            mov qword [0x040025b2], rax 	      1299	vtls.c	FUNCTION_61
0x40025b2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1300	vtls.c	FUNCTION_61	CALL_4
0x40025b6	          0x4889c7	                            mov rdi, rax	      1300	vtls.c	FUNCTION_61	CALL_4
0x40025b9	      0xe800000000	                          call 0x40025be	      1300	vtls.c	FUNCTION_61	CALL_4
0x40025be	      0xb800000000	                              mov eax, 0	      1301	vtls.c	FUNCTION_61
0x40025c3	              0xc9	                                   leave	      1302	vtls.c	FUNCTION_61
0x40025c4	              0xc3	                                     ret	      1302	vtls.c	FUNCTION_61
Curl_multissl_version	functions,0:ELSE,1:IF,5:SWITCH,0:FOR,1:DO,0:WHILE,0:CALL,3	108
0x40022c8	              0x55	                                push rbp	      1229	vtls.c	FUNCTION_60
0x40022c9	          0x4889e5	                            mov rbp, rsp	      1229	vtls.c	FUNCTION_60
0x40022cc	        0x4883ec30	                           sub rsp, 0x30	      1229	vtls.c	FUNCTION_60
0x40022d0	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1229	vtls.c	FUNCTION_60
0x40022d4	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1229	vtls.c	FUNCTION_60
0x40022d8	    0x488b15000000	            mov rdx, qword [0x040022df] 	      1235	vtls.c	FUNCTION_60
0x40022df	    0x488d05000000	                   lea rax, [0x040022e6]	      1235	vtls.c	FUNCTION_60
0x40022e6	          0x4839c2	                            cmp rdx, rax	      1235	vtls.c	FUNCTION_60
0x40022e9	            0x7509	                           jne 0x40022f4	      1235	vtls.c	FUNCTION_60
0x40022eb	    0x488b05000000	            mov rax, qword [0x040022f2] 	      1235	vtls.c	FUNCTION_60
0x40022f2	            0xeb07	                           jmp 0x40022fb	      1235	vtls.c	FUNCTION_60
0x40022f4	    0x488b05000000	            mov rax, qword [0x040022fb] 	      1235	vtls.c	FUNCTION_60
0x40022fb	        0x488945f8	                mov qword [rbp - 8], rax	      1235	vtls.c	FUNCTION_60
0x40022ff	    0x488b05000000	            mov rax, qword [0x04002306] 	      1237	vtls.c	FUNCTION_60	IF_1
0x4002306	        0x483945f8	                cmp qword [rbp - 8], rax	      1237	vtls.c	FUNCTION_60	IF_1
0x400230a	     0xf8424010000	                            je 0x4002434	      1237	vtls.c	FUNCTION_60	IF_1
0x4002310	    0x488d05000000	                   lea rax, [0x04002317]	      1238	vtls.c	FUNCTION_60	IF_1
0x4002317	        0x488945f0	             mov qword [rbp - 0x10], rax	      1238	vtls.c	FUNCTION_60	IF_1
0x400231b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1241	vtls.c	FUNCTION_60	IF_1
0x400231f	    0x488905000000	            mov qword [0x04002326], rax 	      1241	vtls.c	FUNCTION_60	IF_1
0x4002326	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      1243	vtls.c	FUNCTION_60	IF_1	FOR_1
0x400232d	      0xe9c2000000	                           jmp 0x40023f4	      1243	vtls.c	FUNCTION_60	IF_1	FOR_1
0x4002332	        0x837dec00	               cmp dword [rbp - 0x14], 0	      1244	vtls.c	FUNCTION_60	IF_1	FOR_1	IF_2
0x4002336	            0x740f	                            je 0x4002347	      1244	vtls.c	FUNCTION_60	IF_1	FOR_1	IF_2
0x4002338	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1245	vtls.c	FUNCTION_60	IF_1	FOR_1	IF_2
0x400233c	        0x488d5001	                      lea rdx, [rax + 1]	      1245	vtls.c	FUNCTION_60	IF_1	FOR_1	IF_2
0x4002340	        0x488955f0	             mov qword [rbp - 0x10], rdx	      1245	vtls.c	FUNCTION_60	IF_1	FOR_1	IF_2
0x4002344	          0xc60020	                    mov byte [rax], 0x20	      1245	vtls.c	FUNCTION_60	IF_1	FOR_1	IF_2
0x4002347	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1246	vtls.c	FUNCTION_60	IF_1	FOR_1	IF_3
0x400234a	            0x4898	                                    cdqe	      1246	vtls.c	FUNCTION_60	IF_1	FOR_1	IF_3
0x400234c	    0x488d14c50000	                        lea rdx, [rax*8]	      1246	vtls.c	FUNCTION_60	IF_1	FOR_1	IF_3
0x4002354	    0x488d05000000	                   lea rax, [0x0400235b]	      1246	vtls.c	FUNCTION_60	IF_1	FOR_1	IF_3
0x400235b	        0x488b1402	              mov rdx, qword [rdx + rax]	      1246	vtls.c	FUNCTION_60	IF_1	FOR_1	IF_3
0x400235f	    0x488b05000000	            mov rax, qword [0x04002366] 	      1246	vtls.c	FUNCTION_60	IF_1	FOR_1	IF_3
0x4002366	          0x4839c2	                            cmp rdx, rax	      1246	vtls.c	FUNCTION_60	IF_1	FOR_1	IF_3
0x4002369	            0x740f	                            je 0x400237a	      1246	vtls.c	FUNCTION_60	IF_1	FOR_1	IF_3
0x400236b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1247	vtls.c	FUNCTION_60	IF_1	FOR_1	IF_3
0x400236f	        0x488d5001	                      lea rdx, [rax + 1]	      1247	vtls.c	FUNCTION_60	IF_1	FOR_1	IF_3
0x4002373	        0x488955f0	             mov qword [rbp - 0x10], rdx	      1247	vtls.c	FUNCTION_60	IF_1	FOR_1	IF_3
0x4002377	          0xc60028	                    mov byte [rax], 0x28	      1247	vtls.c	FUNCTION_60	IF_1	FOR_1	IF_3
0x400237a	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1248	vtls.c	FUNCTION_60	IF_1	FOR_1	CALL_1
0x400237d	            0x4898	                                    cdqe	      1248	vtls.c	FUNCTION_60	IF_1	FOR_1	CALL_1
0x400237f	    0x488d14c50000	                        lea rdx, [rax*8]	      1248	vtls.c	FUNCTION_60	IF_1	FOR_1	CALL_1
0x4002387	    0x488d05000000	                   lea rax, [0x0400238e]	      1248	vtls.c	FUNCTION_60	IF_1	FOR_1	CALL_1
0x400238e	        0x488b0402	              mov rax, qword [rdx + rax]	      1248	vtls.c	FUNCTION_60	IF_1	FOR_1	CALL_1
0x4002392	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1248	vtls.c	FUNCTION_60	IF_1	FOR_1	CALL_1
0x4002396	    0x488d15000000	                   lea rdx, [0x0400239d]	      1248	vtls.c	FUNCTION_60	IF_1	FOR_1	CALL_1
0x400239d	          0x4889d1	                            mov rcx, rdx	      1248	vtls.c	FUNCTION_60	IF_1	FOR_1	CALL_1
0x40023a0	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1248	vtls.c	FUNCTION_60	IF_1	FOR_1	CALL_1
0x40023a4	          0x4829d1	                            sub rcx, rdx	      1248	vtls.c	FUNCTION_60	IF_1	FOR_1	CALL_1
0x40023a7	          0x4889ca	                            mov rdx, rcx	      1248	vtls.c	FUNCTION_60	IF_1	FOR_1	CALL_1
0x40023aa	          0x4889d1	                            mov rcx, rdx	      1248	vtls.c	FUNCTION_60	IF_1	FOR_1	CALL_1
0x40023ad	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1248	vtls.c	FUNCTION_60	IF_1	FOR_1	CALL_1
0x40023b1	          0x4889ce	                            mov rsi, rcx	      1248	vtls.c	FUNCTION_60	IF_1	FOR_1	CALL_1
0x40023b4	          0x4889d7	                            mov rdi, rdx	      1248	vtls.c	FUNCTION_60	IF_1	FOR_1	CALL_1
0x40023b7	            0xffd0	                                call rax	      1248	vtls.c	FUNCTION_60	IF_1	FOR_1	CALL_1
0x40023b9	        0x480145f0	            add qword [rbp - 0x10], rax 	      1248	vtls.c	FUNCTION_60	IF_1	FOR_1	CALL_1
0x40023bd	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1249	vtls.c	FUNCTION_60	IF_1	FOR_1	IF_4
0x40023c0	            0x4898	                                    cdqe	      1249	vtls.c	FUNCTION_60	IF_1	FOR_1	IF_4
0x40023c2	    0x488d14c50000	                        lea rdx, [rax*8]	      1249	vtls.c	FUNCTION_60	IF_1	FOR_1	IF_4
0x40023ca	    0x488d05000000	                   lea rax, [0x040023d1]	      1249	vtls.c	FUNCTION_60	IF_1	FOR_1	IF_4
0x40023d1	        0x488b1402	              mov rdx, qword [rdx + rax]	      1249	vtls.c	FUNCTION_60	IF_1	FOR_1	IF_4
0x40023d5	    0x488b05000000	            mov rax, qword [0x040023dc] 	      1249	vtls.c	FUNCTION_60	IF_1	FOR_1	IF_4
0x40023dc	          0x4839c2	                            cmp rdx, rax	      1249	vtls.c	FUNCTION_60	IF_1	FOR_1	IF_4
0x40023df	            0x740f	                            je 0x40023f0	      1249	vtls.c	FUNCTION_60	IF_1	FOR_1	IF_4
0x40023e1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1250	vtls.c	FUNCTION_60	IF_1	FOR_1	IF_4
0x40023e5	        0x488d5001	                      lea rdx, [rax + 1]	      1250	vtls.c	FUNCTION_60	IF_1	FOR_1	IF_4
0x40023e9	        0x488955f0	             mov qword [rbp - 0x10], rdx	      1250	vtls.c	FUNCTION_60	IF_1	FOR_1	IF_4
0x40023ed	          0xc60029	                    mov byte [rax], 0x29	      1250	vtls.c	FUNCTION_60	IF_1	FOR_1	IF_4
0x40023f0	        0x8345ec01	               add dword [rbp - 0x14], 1	      1243	vtls.c	FUNCTION_60	IF_1	FOR_1
0x40023f4	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1243	vtls.c	FUNCTION_60	IF_1	FOR_1
0x40023f7	            0x4898	                                    cdqe	      1243	vtls.c	FUNCTION_60	IF_1	FOR_1
0x40023f9	    0x488d14c50000	                        lea rdx, [rax*8]	      1243	vtls.c	FUNCTION_60	IF_1	FOR_1
0x4002401	    0x488d05000000	                   lea rax, [0x04002408]	      1243	vtls.c	FUNCTION_60	IF_1	FOR_1
0x4002408	        0x488b0402	              mov rax, qword [rdx + rax]	      1243	vtls.c	FUNCTION_60	IF_1	FOR_1
0x400240c	          0x4885c0	                           test rax, rax	      1243	vtls.c	FUNCTION_60	IF_1	FOR_1
0x400240f	     0xf851dffffff	                           jne 0x4002332	      1243	vtls.c	FUNCTION_60	IF_1	FOR_1
0x4002415	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1252	vtls.c	FUNCTION_60	IF_1
0x4002419	          0xc60000	                       mov byte [rax], 0	      1252	vtls.c	FUNCTION_60	IF_1
0x400241c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1253	vtls.c	FUNCTION_60	IF_1
0x4002420	    0x488d05000000	                   lea rax, [0x04002427]	      1253	vtls.c	FUNCTION_60	IF_1
0x4002427	          0x4829c2	                            sub rdx, rax	      1253	vtls.c	FUNCTION_60	IF_1
0x400242a	          0x4889d0	                            mov rax, rdx	      1253	vtls.c	FUNCTION_60	IF_1
0x400242d	    0x488905000000	            mov qword [0x04002434], rax 	      1253	vtls.c	FUNCTION_60	IF_1
0x4002434	    0x488b05000000	            mov rax, qword [0x0400243b] 	      1256	vtls.c	FUNCTION_60	IF_5
0x400243b	        0x483945d0	            cmp qword [rbp - 0x30], rax 	      1256	vtls.c	FUNCTION_60	IF_5
0x400243f	            0x7320	                           jae 0x4002461	      1256	vtls.c	FUNCTION_60	IF_5
0x4002441	    0x488b05000000	            mov rax, qword [0x04002448] 	      1257	vtls.c	FUNCTION_60	CALL_2
0x4002448	        0x488d5001	                      lea rdx, [rax + 1]	      1257	vtls.c	FUNCTION_60	CALL_2
0x400244c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1257	vtls.c	FUNCTION_60	CALL_2
0x4002450	    0x488d35000000	                   lea rsi, [0x04002457]	      1257	vtls.c	FUNCTION_60	CALL_2
0x4002457	          0x4889c7	                            mov rdi, rax	      1257	vtls.c	FUNCTION_60	CALL_2
0x400245a	      0xe800000000	                          call 0x400245f	      1257	vtls.c	FUNCTION_60	CALL_2
0x400245f	            0xeb2d	                           jmp 0x400248e	      1257	vtls.c	FUNCTION_60	CALL_2
0x4002461	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1259	vtls.c	FUNCTION_60	ELSE_1	CALL_3
0x4002465	        0x488d50ff	                      lea rdx, [rax - 1]	      1259	vtls.c	FUNCTION_60	ELSE_1	CALL_3
0x4002469	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1259	vtls.c	FUNCTION_60	ELSE_1	CALL_3
0x400246d	    0x488d35000000	                   lea rsi, [0x04002474]	      1259	vtls.c	FUNCTION_60	ELSE_1	CALL_3
0x4002474	          0x4889c7	                            mov rdi, rax	      1259	vtls.c	FUNCTION_60	ELSE_1	CALL_3
0x4002477	      0xe800000000	                          call 0x400247c	      1259	vtls.c	FUNCTION_60	ELSE_1	CALL_3
0x400247c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1260	vtls.c	FUNCTION_60	ELSE_1
0x4002480	        0x488d50ff	                      lea rdx, [rax - 1]	      1260	vtls.c	FUNCTION_60	ELSE_1
0x4002484	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1260	vtls.c	FUNCTION_60	ELSE_1
0x4002488	          0x4801d0	                            add rax, rdx	      1260	vtls.c	FUNCTION_60	ELSE_1
0x400248b	          0xc60000	                       mov byte [rax], 0	      1260	vtls.c	FUNCTION_60	ELSE_1
0x400248e	    0x488b05000000	            mov rax, qword [0x04002495] 	      1263	vtls.c	FUNCTION_60
0x4002495	              0xc9	                                   leave	      1264	vtls.c	FUNCTION_60
0x4002496	              0xc3	                                     ret	      1264	vtls.c	FUNCTION_60
Curl_ssl_close	functions,0:ELSE,0:IF,0:SWITCH,0:FOR,0:DO,0:WHILE,0:CALL,2	15
0x4001410	              0x55	                                push rbp	       550	vtls.c	FUNCTION_20
0x4001411	          0x4889e5	                            mov rbp, rsp	       550	vtls.c	FUNCTION_20
0x4001414	        0x4883ec10	                           sub rsp, 0x10	       550	vtls.c	FUNCTION_20
0x4001418	        0x48897df8	                mov qword [rbp - 8], rdi	       550	vtls.c	FUNCTION_20
0x400141c	          0x8975f4	              mov dword [rbp - 0xc], esi	       550	vtls.c	FUNCTION_20
0x400141f	    0x488b05000000	            mov rax, qword [0x04001426] 	       552	vtls.c	FUNCTION_20	CALL_2
0x4001426	        0x488b4078	            mov rax, qword [rax + 0x78] 	       552	vtls.c	FUNCTION_20	CALL_2
0x400142a	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	       552	vtls.c	FUNCTION_20	CALL_2
0x400142d	        0x488b55f8	                mov rdx, qword [rbp - 8]	       552	vtls.c	FUNCTION_20	CALL_2
0x4001431	            0x89ce	                            mov esi, ecx	       552	vtls.c	FUNCTION_20	CALL_2
0x4001433	          0x4889d7	                            mov rdi, rdx	       552	vtls.c	FUNCTION_20	CALL_2
0x4001436	            0xffd0	                                call rax	       552	vtls.c	FUNCTION_20	CALL_2
0x4001438	              0x90	                                     nop	       553	vtls.c	FUNCTION_20
0x4001439	              0xc9	                                   leave	       553	vtls.c	FUNCTION_20
0x400143a	              0xc3	                                     ret	       553	vtls.c	FUNCTION_20
Curl_ssl_sessionid_lock	functions,0:ELSE,0:IF,1:SWITCH,0:FOR,0:DO,0:WHILE,0:CALL,1	25
0x40009e4	              0x55	                                push rbp	       282	vtls.c	FUNCTION_11
0x40009e5	          0x4889e5	                            mov rbp, rsp	       282	vtls.c	FUNCTION_11
0x40009e8	        0x4883ec10	                           sub rsp, 0x10	       282	vtls.c	FUNCTION_11
0x40009ec	        0x48897df8	                mov qword [rbp - 8], rdi	       282	vtls.c	FUNCTION_11
0x40009f0	        0x488b45f8	                mov rax, qword [rbp - 8]	       283	vtls.c	FUNCTION_11	IF_1
0x40009f4	          0x488b00	                    mov rax, qword [rax]	       283	vtls.c	FUNCTION_11	IF_1
0x40009f7	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	       283	vtls.c	FUNCTION_11	IF_1
0x40009fe	          0x4885c0	                           test rax, rax	       283	vtls.c	FUNCTION_11	IF_1
0x4000a01	            0x7430	                            je 0x4000a33	       283	vtls.c	FUNCTION_11	IF_1
0x4000a03	        0x488b45f8	                mov rax, qword [rbp - 8]	       283	vtls.c	FUNCTION_11	IF_1
0x4000a07	          0x488b00	                    mov rax, qword [rax]	       283	vtls.c	FUNCTION_11	IF_1
0x4000a0a	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	       283	vtls.c	FUNCTION_11	IF_1
0x4000a11	            0x8b00	                    mov eax, dword [rax]	       283	vtls.c	FUNCTION_11	IF_1
0x4000a13	          0x83e010	                           and eax, 0x10	       283	vtls.c	FUNCTION_11	IF_1
0x4000a16	            0x85c0	                           test eax, eax	       283	vtls.c	FUNCTION_11	IF_1
0x4000a18	            0x7419	                            je 0x4000a33	       283	vtls.c	FUNCTION_11	IF_1
0x4000a1a	        0x488b45f8	                mov rax, qword [rbp - 8]	       284	vtls.c	FUNCTION_11	IF_1	CALL_1
0x4000a1e	          0x488b00	                    mov rax, qword [rax]	       284	vtls.c	FUNCTION_11	IF_1	CALL_1
0x4000a21	      0xba02000000	                              mov edx, 2	       284	vtls.c	FUNCTION_11	IF_1	CALL_1
0x4000a26	      0xbe04000000	                              mov esi, 4	       284	vtls.c	FUNCTION_11	IF_1	CALL_1
0x4000a2b	          0x4889c7	                            mov rdi, rax	       284	vtls.c	FUNCTION_11	IF_1	CALL_1
0x4000a2e	      0xe800000000	                          call 0x4000a33	       284	vtls.c	FUNCTION_11	IF_1	CALL_1
0x4000a33	              0x90	                                     nop	       286	vtls.c	FUNCTION_11
0x4000a34	              0xc9	                                   leave	       286	vtls.c	FUNCTION_11
0x4000a35	              0xc3	                                     ret	       286	vtls.c	FUNCTION_11
Curl_ssl_engines_list	functions,0:ELSE,0:IF,0:SWITCH,0:FOR,0:DO,0:WHILE,0:CALL,1	11
0x4001548	              0x55	                                push rbp	       585	vtls.c	FUNCTION_24
0x4001549	          0x4889e5	                            mov rbp, rsp	       585	vtls.c	FUNCTION_24
0x400154c	        0x4883ec10	                           sub rsp, 0x10	       585	vtls.c	FUNCTION_24
0x4001550	        0x48897df8	                mov qword [rbp - 8], rdi	       585	vtls.c	FUNCTION_24
0x4001554	    0x488b05000000	            mov rax, qword [0x0400155b] 	       586	vtls.c	FUNCTION_24	CALL_1
0x400155b	    0x488b80a00000	            mov rax, qword [rax + 0xa0] 	       586	vtls.c	FUNCTION_24	CALL_1
0x4001562	        0x488b55f8	                mov rdx, qword [rbp - 8]	       586	vtls.c	FUNCTION_24	CALL_1
0x4001566	          0x4889d7	                            mov rdi, rdx	       586	vtls.c	FUNCTION_24	CALL_1
0x4001569	            0xffd0	                                call rax	       586	vtls.c	FUNCTION_24	CALL_1
0x400156b	              0xc9	                                   leave	       587	vtls.c	FUNCTION_24
0x400156c	              0xc3	                                     ret	       587	vtls.c	FUNCTION_24
Curl_ssl_cert_status_request	functions,0:ELSE,0:IF,0:SWITCH,0:FOR,0:DO,0:WHILE,0:CALL,1	7
0x4002034	              0x55	                                push rbp	       970	vtls.c	FUNCTION_37
0x4002035	          0x4889e5	                            mov rbp, rsp	       970	vtls.c	FUNCTION_37
0x4002038	    0x488b05000000	            mov rax, qword [0x0400203f] 	       971	vtls.c	FUNCTION_37	CALL_1
0x400203f	        0x488b4058	            mov rax, qword [rax + 0x58] 	       971	vtls.c	FUNCTION_37	CALL_1
0x4002043	            0xffd0	                                call rax	       971	vtls.c	FUNCTION_37	CALL_1
0x4002045	              0x5d	                                 pop rbp	       972	vtls.c	FUNCTION_37
0x4002046	              0xc3	                                     ret	       972	vtls.c	FUNCTION_37
Curl_ssl_sessionid_unlock	functions,0:ELSE,0:IF,1:SWITCH,0:FOR,0:DO,0:WHILE,0:CALL,1	24
0x4000a36	              0x55	                                push rbp	       292	vtls.c	FUNCTION_12
0x4000a37	          0x4889e5	                            mov rbp, rsp	       292	vtls.c	FUNCTION_12
0x4000a3a	        0x4883ec10	                           sub rsp, 0x10	       292	vtls.c	FUNCTION_12
0x4000a3e	        0x48897df8	                mov qword [rbp - 8], rdi	       292	vtls.c	FUNCTION_12
0x4000a42	        0x488b45f8	                mov rax, qword [rbp - 8]	       293	vtls.c	FUNCTION_12	IF_1
0x4000a46	          0x488b00	                    mov rax, qword [rax]	       293	vtls.c	FUNCTION_12	IF_1
0x4000a49	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	       293	vtls.c	FUNCTION_12	IF_1
0x4000a50	          0x4885c0	                           test rax, rax	       293	vtls.c	FUNCTION_12	IF_1
0x4000a53	            0x742b	                            je 0x4000a80	       293	vtls.c	FUNCTION_12	IF_1
0x4000a55	        0x488b45f8	                mov rax, qword [rbp - 8]	       293	vtls.c	FUNCTION_12	IF_1
0x4000a59	          0x488b00	                    mov rax, qword [rax]	       293	vtls.c	FUNCTION_12	IF_1
0x4000a5c	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	       293	vtls.c	FUNCTION_12	IF_1
0x4000a63	            0x8b00	                    mov eax, dword [rax]	       293	vtls.c	FUNCTION_12	IF_1
0x4000a65	          0x83e010	                           and eax, 0x10	       293	vtls.c	FUNCTION_12	IF_1
0x4000a68	            0x85c0	                           test eax, eax	       293	vtls.c	FUNCTION_12	IF_1
0x4000a6a	            0x7414	                            je 0x4000a80	       293	vtls.c	FUNCTION_12	IF_1
0x4000a6c	        0x488b45f8	                mov rax, qword [rbp - 8]	       294	vtls.c	FUNCTION_12	CALL_1
0x4000a70	          0x488b00	                    mov rax, qword [rax]	       294	vtls.c	FUNCTION_12	CALL_1
0x4000a73	      0xbe04000000	                              mov esi, 4	       294	vtls.c	FUNCTION_12	CALL_1
0x4000a78	          0x4889c7	                            mov rdi, rax	       294	vtls.c	FUNCTION_12	CALL_1
0x4000a7b	      0xe800000000	                          call 0x4000a80	       294	vtls.c	FUNCTION_12	CALL_1
0x4000a80	              0x90	                                     nop	       295	vtls.c	FUNCTION_12
0x4000a81	              0xc9	                                   leave	       295	vtls.c	FUNCTION_12
0x4000a82	              0xc3	                                     ret	       295	vtls.c	FUNCTION_12
Curl_ssl_set_engine_default	functions,0:ELSE,0:IF,0:SWITCH,0:FOR,0:DO,0:WHILE,0:CALL,1	11
0x4001523	              0x55	                                push rbp	       579	vtls.c	FUNCTION_23
0x4001524	          0x4889e5	                            mov rbp, rsp	       579	vtls.c	FUNCTION_23
0x4001527	        0x4883ec10	                           sub rsp, 0x10	       579	vtls.c	FUNCTION_23
0x400152b	        0x48897df8	                mov qword [rbp - 8], rdi	       579	vtls.c	FUNCTION_23
0x400152f	    0x488b05000000	            mov rax, qword [0x04001536] 	       580	vtls.c	FUNCTION_23	CALL_1
0x4001536	    0x488b80980000	            mov rax, qword [rax + 0x98] 	       580	vtls.c	FUNCTION_23	CALL_1
0x400153d	        0x488b55f8	                mov rdx, qword [rbp - 8]	       580	vtls.c	FUNCTION_23	CALL_1
0x4001541	          0x4889d7	                            mov rdi, rdx	       580	vtls.c	FUNCTION_23	CALL_1
0x4001544	            0xffd0	                                call rax	       580	vtls.c	FUNCTION_23	CALL_1
0x4001546	              0xc9	                                   leave	       581	vtls.c	FUNCTION_23
0x4001547	              0xc3	                                     ret	       581	vtls.c	FUNCTION_23
Curl_ssl_free_certinfo	functions,0:ELSE,0:IF,1:SWITCH,0:FOR,1:DO,0:WHILE,0:CALL,2	47
0x400166b	              0x55	                                push rbp	       643	vtls.c	FUNCTION_29
0x400166c	          0x4889e5	                            mov rbp, rsp	       643	vtls.c	FUNCTION_29
0x400166f	        0x4883ec20	                           sub rsp, 0x20	       643	vtls.c	FUNCTION_29
0x4001673	        0x48897de8	             mov qword [rbp - 0x18], rdi	       643	vtls.c	FUNCTION_29
0x4001677	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       645	vtls.c	FUNCTION_29
0x400167b	    0x4805b0520000	                         add rax, 0x52b0	       645	vtls.c	FUNCTION_29
0x4001681	        0x488945f8	                mov qword [rbp - 8], rax	       645	vtls.c	FUNCTION_29
0x4001685	        0x488b45f8	                mov rax, qword [rbp - 8]	       647	vtls.c	FUNCTION_29	IF_1
0x4001689	            0x8b00	                    mov eax, dword [rax]	       647	vtls.c	FUNCTION_29	IF_1
0x400168b	            0x85c0	                           test eax, eax	       647	vtls.c	FUNCTION_29	IF_1
0x400168d	     0xf8481000000	                            je 0x4001714	       647	vtls.c	FUNCTION_29	IF_1
0x4001693	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       649	vtls.c	FUNCTION_29	IF_1	FOR_1
0x400169a	            0xeb40	                           jmp 0x40016dc	       649	vtls.c	FUNCTION_29	IF_1	FOR_1
0x400169c	        0x488b45f8	                mov rax, qword [rbp - 8]	       650	vtls.c	FUNCTION_29	IF_1	FOR_1	CALL_1
0x40016a0	        0x488b4008	                mov rax, qword [rax + 8]	       650	vtls.c	FUNCTION_29	IF_1	FOR_1	CALL_1
0x40016a4	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       650	vtls.c	FUNCTION_29	IF_1	FOR_1	CALL_1
0x40016a7	          0x4863d2	                         movsxd rdx, edx	       650	vtls.c	FUNCTION_29	IF_1	FOR_1	CALL_1
0x40016aa	        0x48c1e203	                              shl rdx, 3	       650	vtls.c	FUNCTION_29	IF_1	FOR_1	CALL_1
0x40016ae	          0x4801d0	                            add rax, rdx	       650	vtls.c	FUNCTION_29	IF_1	FOR_1	CALL_1
0x40016b1	          0x488b00	                    mov rax, qword [rax]	       650	vtls.c	FUNCTION_29	IF_1	FOR_1	CALL_1
0x40016b4	          0x4889c7	                            mov rdi, rax	       650	vtls.c	FUNCTION_29	IF_1	FOR_1	CALL_1
0x40016b7	      0xe800000000	                          call 0x40016bc	       650	vtls.c	FUNCTION_29	IF_1	FOR_1	CALL_1
0x40016bc	        0x488b45f8	                mov rax, qword [rbp - 8]	       651	vtls.c	FUNCTION_29	IF_1	FOR_1
0x40016c0	        0x488b4008	                mov rax, qword [rax + 8]	       651	vtls.c	FUNCTION_29	IF_1	FOR_1
0x40016c4	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       651	vtls.c	FUNCTION_29	IF_1	FOR_1
0x40016c7	          0x4863d2	                         movsxd rdx, edx	       651	vtls.c	FUNCTION_29	IF_1	FOR_1
0x40016ca	        0x48c1e203	                              shl rdx, 3	       651	vtls.c	FUNCTION_29	IF_1	FOR_1
0x40016ce	          0x4801d0	                            add rax, rdx	       651	vtls.c	FUNCTION_29	IF_1	FOR_1
0x40016d1	    0x48c700000000	                      mov qword [rax], 0	       651	vtls.c	FUNCTION_29	IF_1	FOR_1
0x40016d8	        0x8345f401	                add dword [rbp - 0xc], 1	       649	vtls.c	FUNCTION_29	IF_1	FOR_1
0x40016dc	        0x488b45f8	                mov rax, qword [rbp - 8]	       649	vtls.c	FUNCTION_29	IF_1	FOR_1
0x40016e0	            0x8b00	                    mov eax, dword [rax]	       649	vtls.c	FUNCTION_29	IF_1	FOR_1
0x40016e2	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       649	vtls.c	FUNCTION_29	IF_1	FOR_1
0x40016e5	            0x7fb5	                            jg 0x400169c	       649	vtls.c	FUNCTION_29	IF_1	FOR_1
0x40016e7	    0x488b05000000	            mov rax, qword [0x040016ee] 	       654	vtls.c	FUNCTION_29	IF_1	CALL_2
0x40016ee	          0x488b00	                    mov rax, qword [rax]	       654	vtls.c	FUNCTION_29	IF_1	CALL_2
0x40016f1	        0x488b55f8	                mov rdx, qword [rbp - 8]	       654	vtls.c	FUNCTION_29	IF_1	CALL_2
0x40016f5	        0x488b5208	                mov rdx, qword [rdx + 8]	       654	vtls.c	FUNCTION_29	IF_1	CALL_2
0x40016f9	          0x4889d7	                            mov rdi, rdx	       654	vtls.c	FUNCTION_29	IF_1	CALL_2
0x40016fc	            0xffd0	                                call rax	       654	vtls.c	FUNCTION_29	IF_1	CALL_2
0x40016fe	        0x488b45f8	                mov rax, qword [rbp - 8]	       655	vtls.c	FUNCTION_29	IF_1
0x4001702	    0x48c740080000	                  mov qword [rax + 8], 0	       655	vtls.c	FUNCTION_29	IF_1
0x400170a	        0x488b45f8	                mov rax, qword [rbp - 8]	       656	vtls.c	FUNCTION_29	IF_1
0x400170e	    0xc70000000000	                      mov dword [rax], 0	       656	vtls.c	FUNCTION_29	IF_1
0x4001714	              0x90	                                     nop	       658	vtls.c	FUNCTION_29
0x4001715	              0xc9	                                   leave	       658	vtls.c	FUNCTION_29
0x4001716	              0xc3	                                     ret	       658	vtls.c	FUNCTION_29
curl_global_sslset	functions,0:ELSE,0:IF,0:SWITCH,0:FOR,0:DO,0:WHILE,0:CALL,0	67
0x40025c5	              0x55	                                push rbp	      1306	vtls.c	FUNCTION_62
0x40025c6	          0x4889e5	                            mov rbp, rsp	      1306	vtls.c	FUNCTION_62
0x40025c9	        0x4883ec30	                           sub rsp, 0x30	      1306	vtls.c	FUNCTION_62
0x40025cd	          0x897dec	             mov dword [rbp - 0x14], edi	      1306	vtls.c	FUNCTION_62
0x40025d0	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1306	vtls.c	FUNCTION_62
0x40025d4	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1306	vtls.c	FUNCTION_62
0x40025d8	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      1309	vtls.c	FUNCTION_62	IF_1
0x40025dd	            0x740e	                            je 0x40025ed	      1309	vtls.c	FUNCTION_62	IF_1
0x40025df	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1310	vtls.c	FUNCTION_62	IF_1
0x40025e3	    0x488d15000000	                   lea rdx, [0x040025ea]	      1310	vtls.c	FUNCTION_62	IF_1
0x40025ea	          0x488910	                    mov qword [rax], rdx	      1310	vtls.c	FUNCTION_62	IF_1
0x40025ed	    0x488b15000000	            mov rdx, qword [0x040025f4] 	      1312	vtls.c	FUNCTION_62	IF_2
0x40025f4	    0x488d05000000	                   lea rax, [0x040025fb]	      1312	vtls.c	FUNCTION_62	IF_2
0x40025fb	          0x4839c2	                            cmp rdx, rax	      1312	vtls.c	FUNCTION_62	IF_2
0x40025fe	            0x7422	                            je 0x4002622	      1312	vtls.c	FUNCTION_62	IF_2
0x4002600	    0x488b05000000	            mov rax, qword [0x04002607] 	      1313	vtls.c	FUNCTION_62	IF_2
0x4002607	            0x8b00	                    mov eax, dword [rax]	      1313	vtls.c	FUNCTION_62	IF_2
0x4002609	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      1313	vtls.c	FUNCTION_62	IF_2
0x400260c	            0x750a	                           jne 0x4002618	      1313	vtls.c	FUNCTION_62	IF_2
0x400260e	      0xb800000000	                              mov eax, 0	      1313	vtls.c	FUNCTION_62	IF_2
0x4002613	      0xe9bc000000	                           jmp 0x40026d4	      1313	vtls.c	FUNCTION_62	IF_2
0x4002618	      0xb802000000	                              mov eax, 2	      1313	vtls.c	FUNCTION_62	IF_2
0x400261d	      0xe9b2000000	                           jmp 0x40026d4	      1313	vtls.c	FUNCTION_62	IF_2
0x4002622	    0xc745fc000000	                  mov dword [rbp - 4], 0	      1315	vtls.c	FUNCTION_62	FOR_1
0x4002629	      0xe980000000	                           jmp 0x40026ae	      1315	vtls.c	FUNCTION_62	FOR_1
0x400262e	          0x8b45fc	                mov eax, dword [rbp - 4]	      1316	vtls.c	FUNCTION_62	FOR_1	IF_3
0x4002631	            0x4898	                                    cdqe	      1316	vtls.c	FUNCTION_62	FOR_1	IF_3
0x4002633	    0x488d14c50000	                        lea rdx, [rax*8]	      1316	vtls.c	FUNCTION_62	FOR_1	IF_3
0x400263b	    0x488d05000000	                   lea rax, [0x04002642]	      1316	vtls.c	FUNCTION_62	FOR_1	IF_3
0x4002642	        0x488b0402	              mov rax, qword [rdx + rax]	      1316	vtls.c	FUNCTION_62	FOR_1	IF_3
0x4002646	            0x8b00	                    mov eax, dword [rax]	      1316	vtls.c	FUNCTION_62	FOR_1	IF_3
0x4002648	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      1316	vtls.c	FUNCTION_62	FOR_1	IF_3
0x400264b	            0x7436	                            je 0x4002683	      1316	vtls.c	FUNCTION_62	FOR_1	IF_3
0x400264d	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1316	vtls.c	FUNCTION_62	FOR_1	IF_3
0x4002652	            0x7456	                            je 0x40026aa	      1316	vtls.c	FUNCTION_62	FOR_1	IF_3
0x4002654	          0x8b45fc	                mov eax, dword [rbp - 4]	      1317	vtls.c	FUNCTION_62	FOR_1	IF_3	CALL_1
0x4002657	            0x4898	                                    cdqe	      1317	vtls.c	FUNCTION_62	FOR_1	IF_3	CALL_1
0x4002659	    0x488d14c50000	                        lea rdx, [rax*8]	      1317	vtls.c	FUNCTION_62	FOR_1	IF_3	CALL_1
0x4002661	    0x488d05000000	                   lea rax, [0x04002668]	      1317	vtls.c	FUNCTION_62	FOR_1	IF_3	CALL_1
0x4002668	        0x488b0402	              mov rax, qword [rdx + rax]	      1317	vtls.c	FUNCTION_62	FOR_1	IF_3	CALL_1
0x400266c	        0x488b4008	                mov rax, qword [rax + 8]	      1317	vtls.c	FUNCTION_62	FOR_1	IF_3	CALL_1
0x4002670	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1317	vtls.c	FUNCTION_62	FOR_1	IF_3	CALL_1
0x4002674	          0x4889d6	                            mov rsi, rdx	      1317	vtls.c	FUNCTION_62	FOR_1	IF_3	CALL_1
0x4002677	          0x4889c7	                            mov rdi, rax	      1317	vtls.c	FUNCTION_62	FOR_1	IF_3	CALL_1
0x400267a	      0xe800000000	                          call 0x400267f	      1317	vtls.c	FUNCTION_62	FOR_1	IF_3	CALL_1
0x400267f	            0x85c0	                           test eax, eax	      1317	vtls.c	FUNCTION_62	FOR_1	IF_3	CALL_1
0x4002681	            0x7427	                            je 0x40026aa	      1317	vtls.c	FUNCTION_62	FOR_1	IF_3	CALL_1
0x4002683	          0x8b45fc	                mov eax, dword [rbp - 4]	      1318	vtls.c	FUNCTION_62	FOR_1	IF_3	CALL_2
0x4002686	            0x4898	                                    cdqe	      1318	vtls.c	FUNCTION_62	FOR_1	IF_3	CALL_2
0x4002688	    0x488d14c50000	                        lea rdx, [rax*8]	      1318	vtls.c	FUNCTION_62	FOR_1	IF_3	CALL_2
0x4002690	    0x488d05000000	                   lea rax, [0x04002697]	      1318	vtls.c	FUNCTION_62	FOR_1	IF_3	CALL_2
0x4002697	        0x488b0402	              mov rax, qword [rdx + rax]	      1318	vtls.c	FUNCTION_62	FOR_1	IF_3	CALL_2
0x400269b	          0x4889c7	                            mov rdi, rax	      1318	vtls.c	FUNCTION_62	FOR_1	IF_3	CALL_2
0x400269e	      0xe8f4fdffff	                  call sym.multissl_init	      1318	vtls.c	FUNCTION_62	FOR_1	IF_3	CALL_2
0x40026a3	      0xb800000000	                              mov eax, 0	      1319	vtls.c	FUNCTION_62	FOR_1	IF_3
0x40026a8	            0xeb2a	                           jmp 0x40026d4	      1319	vtls.c	FUNCTION_62	FOR_1	IF_3
0x40026aa	        0x8345fc01	                  add dword [rbp - 4], 1	      1315	vtls.c	FUNCTION_62	FOR_1
0x40026ae	          0x8b45fc	                mov eax, dword [rbp - 4]	      1315	vtls.c	FUNCTION_62	FOR_1
0x40026b1	            0x4898	                                    cdqe	      1315	vtls.c	FUNCTION_62	FOR_1
0x40026b3	    0x488d14c50000	                        lea rdx, [rax*8]	      1315	vtls.c	FUNCTION_62	FOR_1
0x40026bb	    0x488d05000000	                   lea rax, [0x040026c2]	      1315	vtls.c	FUNCTION_62	FOR_1
0x40026c2	        0x488b0402	              mov rax, qword [rdx + rax]	      1315	vtls.c	FUNCTION_62	FOR_1
0x40026c6	          0x4885c0	                           test rax, rax	      1315	vtls.c	FUNCTION_62	FOR_1
0x40026c9	     0xf855fffffff	                           jne 0x400262e	      1315	vtls.c	FUNCTION_62	FOR_1
0x40026cf	      0xb801000000	                              mov eax, 1	      1323	vtls.c	FUNCTION_62
0x40026d4	              0xc9	                                   leave	      1324	vtls.c	FUNCTION_62
0x40026d5	              0xc3	                                     ret	      1324	vtls.c	FUNCTION_62
Curl_ssl_init_certinfo	functions,0:ELSE,0:IF,1:SWITCH,0:FOR,0:DO,0:WHILE,0:CALL,2	32
0x4001717	              0x55	                                push rbp	       661	vtls.c	FUNCTION_30
0x4001718	          0x4889e5	                            mov rbp, rsp	       661	vtls.c	FUNCTION_30
0x400171b	        0x4883ec20	                           sub rsp, 0x20	       661	vtls.c	FUNCTION_30
0x400171f	        0x48897de8	             mov qword [rbp - 0x18], rdi	       661	vtls.c	FUNCTION_30
0x4001723	          0x8975e4	             mov dword [rbp - 0x1c], esi	       661	vtls.c	FUNCTION_30
0x4001726	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       662	vtls.c	FUNCTION_30
0x400172a	    0x4805b0520000	                         add rax, 0x52b0	       662	vtls.c	FUNCTION_30
0x4001730	        0x488945f0	             mov qword [rbp - 0x10], rax	       662	vtls.c	FUNCTION_30
0x4001734	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       666	vtls.c	FUNCTION_30	CALL_1
0x4001738	          0x4889c7	                            mov rdi, rax	       666	vtls.c	FUNCTION_30	CALL_1
0x400173b	      0xe800000000	                          call 0x4001740	       666	vtls.c	FUNCTION_30	CALL_1
0x4001740	    0x488b05000000	            mov rax, qword [0x04001747] 	       669	vtls.c	FUNCTION_30	CALL_2
0x4001747	          0x488b00	                    mov rax, qword [rax]	       669	vtls.c	FUNCTION_30	CALL_2
0x400174a	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       669	vtls.c	FUNCTION_30	CALL_2
0x400174d	          0x4863d2	                         movsxd rdx, edx	       669	vtls.c	FUNCTION_30	CALL_2
0x4001750	      0xbe08000000	                              mov esi, 8	       669	vtls.c	FUNCTION_30	CALL_2
0x4001755	          0x4889d7	                            mov rdi, rdx	       669	vtls.c	FUNCTION_30	CALL_2
0x4001758	            0xffd0	                                call rax	       669	vtls.c	FUNCTION_30	CALL_2
0x400175a	        0x488945f8	                mov qword [rbp - 8], rax	       669	vtls.c	FUNCTION_30	CALL_2
0x400175e	      0x48837df800	                  cmp qword [rbp - 8], 0	       670	vtls.c	FUNCTION_30	IF_1
0x4001763	            0x7507	                           jne 0x400176c	       670	vtls.c	FUNCTION_30	IF_1
0x4001765	      0xb81b000000	                           mov eax, 0x1b	       671	vtls.c	FUNCTION_30	IF_1
0x400176a	            0xeb1a	                           jmp 0x4001786	       671	vtls.c	FUNCTION_30	IF_1
0x400176c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       673	vtls.c	FUNCTION_30
0x4001770	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       673	vtls.c	FUNCTION_30
0x4001773	            0x8910	                    mov dword [rax], edx	       673	vtls.c	FUNCTION_30
0x4001775	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       674	vtls.c	FUNCTION_30
0x4001779	        0x488b55f8	                mov rdx, qword [rbp - 8]	       674	vtls.c	FUNCTION_30
0x400177d	        0x48895008	                mov qword [rax + 8], rdx	       674	vtls.c	FUNCTION_30
0x4001781	      0xb800000000	                              mov eax, 0	       676	vtls.c	FUNCTION_30
0x4001786	              0xc9	                                   leave	       677	vtls.c	FUNCTION_30
0x4001787	              0xc3	                                     ret	       677	vtls.c	FUNCTION_30
