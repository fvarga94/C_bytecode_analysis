xdl_free_ctx	FOR,0:DO,0:WHILE,0:CALL,6:ELSE,0:IF,0:functions,0:SWITCH,0	31
0x918	              0x55	                                push rbp	       251	xprepare.c	FUNCTION_5
0x919	          0x4889e5	                            mov rbp, rsp	       251	xprepare.c	FUNCTION_5
0x91c	        0x4883ec10	                           sub rsp, 0x10	       251	xprepare.c	FUNCTION_5
0x920	        0x48897df8	                mov qword [rbp - 8], rdi	       251	xprepare.c	FUNCTION_5
0x924	        0x488b45f8	                mov rax, qword [rbp - 8]	       253	xprepare.c	FUNCTION_5	CALL_1
0x928	        0x488b4048	            mov rax, qword [rax + 0x48] 	       253	xprepare.c	FUNCTION_5	CALL_1
0x92c	          0x4889c7	                            mov rdi, rax	       253	xprepare.c	FUNCTION_5	CALL_1
0x92f	      0xe800000000	                          call 0x4000974	       253	xprepare.c	FUNCTION_5	CALL_1
0x934	        0x488b45f8	                mov rax, qword [rbp - 8]	       254	xprepare.c	FUNCTION_5	CALL_2
0x938	        0x488b4070	            mov rax, qword [rax + 0x70] 	       254	xprepare.c	FUNCTION_5	CALL_2
0x93c	          0x4889c7	                            mov rdi, rax	       254	xprepare.c	FUNCTION_5	CALL_2
0x93f	      0xe800000000	                          call 0x4000984	       254	xprepare.c	FUNCTION_5	CALL_2
0x944	        0x488b45f8	                mov rax, qword [rbp - 8]	       255	xprepare.c	FUNCTION_5	CALL_3
0x948	        0x488b4068	            mov rax, qword [rax + 0x68] 	       255	xprepare.c	FUNCTION_5	CALL_3
0x94c	        0x4883e801	                              sub rax, 1	       255	xprepare.c	FUNCTION_5	CALL_3
0x950	          0x4889c7	                            mov rdi, rax	       255	xprepare.c	FUNCTION_5	CALL_3
0x953	      0xe800000000	                          call 0x4000998	       255	xprepare.c	FUNCTION_5	CALL_3
0x958	        0x488b45f8	                mov rax, qword [rbp - 8]	       256	xprepare.c	FUNCTION_5	CALL_4
0x95c	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       256	xprepare.c	FUNCTION_5	CALL_4
0x963	          0x4889c7	                            mov rdi, rax	       256	xprepare.c	FUNCTION_5	CALL_4
0x966	      0xe800000000	                          call 0x40009ab	       256	xprepare.c	FUNCTION_5	CALL_4
0x96b	        0x488b45f8	                mov rax, qword [rbp - 8]	       257	xprepare.c	FUNCTION_5	CALL_5
0x96f	        0x488b4060	            mov rax, qword [rax + 0x60] 	       257	xprepare.c	FUNCTION_5	CALL_5
0x973	          0x4889c7	                            mov rdi, rax	       257	xprepare.c	FUNCTION_5	CALL_5
0x976	      0xe800000000	                          call 0x40009bb	       257	xprepare.c	FUNCTION_5	CALL_5
0x97b	        0x488b45f8	                mov rax, qword [rbp - 8]	       258	xprepare.c	FUNCTION_5	CALL_6
0x97f	          0x4889c7	                            mov rdi, rax	       258	xprepare.c	FUNCTION_5	CALL_6
0x982	      0xe800000000	                          call 0x40009c7	       258	xprepare.c	FUNCTION_5	CALL_6
0x987	              0x90	                                     nop	       259	xprepare.c	FUNCTION_5
0x988	              0xc9	                                   leave	       259	xprepare.c	FUNCTION_5
0x989	              0xc3	                                     ret	       259	xprepare.c	FUNCTION_5
xdl_cleanup_records	FOR,4:DO,0:WHILE,0:CALL,7:ELSE,2:IF,5:functions,0:SWITCH,0	286
0xdc7	              0x55	                                push rbp	       385	xprepare.c	FUNCTION_9
0xdc8	          0x4889e5	                            mov rbp, rsp	       385	xprepare.c	FUNCTION_9
0xdcb	        0x4883ec70	                           sub rsp, 0x70	       385	xprepare.c	FUNCTION_9
0xdcf	        0x48897da8	             mov qword [rbp - 0x58], rdi	       385	xprepare.c	FUNCTION_9
0xdd3	        0x488975a0	             mov qword [rbp - 0x60], rsi	       385	xprepare.c	FUNCTION_9
0xdd7	        0x48895598	             mov qword [rbp - 0x68], rdx	       385	xprepare.c	FUNCTION_9
0xddb	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       391	xprepare.c	FUNCTION_9	IF_1	CALL_1
0xddf	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       391	xprepare.c	FUNCTION_9	IF_1	CALL_1
0xde3	        0x488b4598	             mov rax, qword [rbp - 0x68]	       391	xprepare.c	FUNCTION_9	IF_1	CALL_1
0xde7	        0x488b4038	            mov rax, qword [rax + 0x38] 	       391	xprepare.c	FUNCTION_9	IF_1	CALL_1
0xdeb	          0x4801d0	                            add rax, rdx	       391	xprepare.c	FUNCTION_9	IF_1	CALL_1
0xdee	        0x4883c002	                              add rax, 2	       391	xprepare.c	FUNCTION_9	IF_1	CALL_1
0xdf2	          0x4889c7	                            mov rdi, rax	       391	xprepare.c	FUNCTION_9	IF_1	CALL_1
0xdf5	      0xe800000000	                          call 0x4000e3a	       391	xprepare.c	FUNCTION_9	IF_1	CALL_1
0xdfa	        0x488945d8	             mov qword [rbp - 0x28], rax	       391	xprepare.c	FUNCTION_9	IF_1	CALL_1
0xdfe	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       391	xprepare.c	FUNCTION_9	IF_1	CALL_1
0xe03	            0x750a	                           jne 0x4000e4f	       391	xprepare.c	FUNCTION_9	IF_1	CALL_1
0xe05	      0xb8ffffffff	                     mov eax, 0xffffffff	       393	xprepare.c	FUNCTION_9	IF_1
0xe0a	      0xe9ff030000	                           jmp 0x400124e	       393	xprepare.c	FUNCTION_9	IF_1
0xe0f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       395	xprepare.c	FUNCTION_9	CALL_2
0xe13	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       395	xprepare.c	FUNCTION_9	CALL_2
0xe17	        0x488b4598	             mov rax, qword [rbp - 0x68]	       395	xprepare.c	FUNCTION_9	CALL_2
0xe1b	        0x488b4038	            mov rax, qword [rax + 0x38] 	       395	xprepare.c	FUNCTION_9	CALL_2
0xe1f	          0x4801d0	                            add rax, rdx	       395	xprepare.c	FUNCTION_9	CALL_2
0xe22	        0x4883c002	                              add rax, 2	       395	xprepare.c	FUNCTION_9	CALL_2
0xe26	          0x4889c2	                            mov rdx, rax	       395	xprepare.c	FUNCTION_9	CALL_2
0xe29	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       395	xprepare.c	FUNCTION_9	CALL_2
0xe2d	      0xbe00000000	                              mov esi, 0	       395	xprepare.c	FUNCTION_9	CALL_2
0xe32	          0x4889c7	                            mov rdi, rax	       395	xprepare.c	FUNCTION_9	CALL_2
0xe35	      0xe800000000	                          call 0x4000e7a	       395	xprepare.c	FUNCTION_9	CALL_2
0xe3a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       396	xprepare.c	FUNCTION_9
0xe3e	        0x488945e0	             mov qword [rbp - 0x20], rax	       396	xprepare.c	FUNCTION_9
0xe42	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       397	xprepare.c	FUNCTION_9
0xe46	        0x488b4038	            mov rax, qword [rax + 0x38] 	       397	xprepare.c	FUNCTION_9
0xe4a	        0x488d5001	                      lea rdx, [rax + 1]	       397	xprepare.c	FUNCTION_9
0xe4e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       397	xprepare.c	FUNCTION_9
0xe52	          0x4801d0	                            add rax, rdx	       397	xprepare.c	FUNCTION_9
0xe55	        0x488945e8	             mov qword [rbp - 0x18], rax	       397	xprepare.c	FUNCTION_9
0xe59	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       399	xprepare.c	FUNCTION_9	IF_2	CALL_3
0xe5d	        0x488b4038	            mov rax, qword [rax + 0x38] 	       399	xprepare.c	FUNCTION_9	IF_2	CALL_3
0xe61	          0x4889c7	                            mov rdi, rax	       399	xprepare.c	FUNCTION_9	IF_2	CALL_3
0xe64	      0xe800000000	                          call 0x4000ea9	       399	xprepare.c	FUNCTION_9	IF_2	CALL_3
0xe69	        0x488945c8	             mov qword [rbp - 0x38], rax	       399	xprepare.c	FUNCTION_9	IF_2	CALL_3
0xe6d	    0x48817dc80004	          cmp qword [rbp - 0x38], 0x400 	       399	xprepare.c	FUNCTION_9	IF_2	CALL_3
0xe75	            0x7e08	                           jle 0x4000ebf	       399	xprepare.c	FUNCTION_9	IF_2	CALL_3
0xe77	    0x48c745c80004	          mov qword [rbp - 0x38], 0x400 	       400	xprepare.c	FUNCTION_9	IF_2
0xe7f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       401	xprepare.c	FUNCTION_9	FOR_1
0xe83	        0x488b4050	            mov rax, qword [rax + 0x50] 	       401	xprepare.c	FUNCTION_9	FOR_1
0xe87	        0x488945b8	             mov qword [rbp - 0x48], rax	       401	xprepare.c	FUNCTION_9	FOR_1
0xe8b	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       401	xprepare.c	FUNCTION_9	FOR_1
0xe8f	        0x488b5060	            mov rdx, qword [rax + 0x60] 	       401	xprepare.c	FUNCTION_9	FOR_1
0xe93	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       401	xprepare.c	FUNCTION_9	FOR_1
0xe97	        0x488b4050	            mov rax, qword [rax + 0x50] 	       401	xprepare.c	FUNCTION_9	FOR_1
0xe9b	        0x48c1e003	                              shl rax, 3	       401	xprepare.c	FUNCTION_9	FOR_1
0xe9f	          0x4801d0	                            add rax, rdx	       401	xprepare.c	FUNCTION_9	FOR_1
0xea2	        0x488945d0	             mov qword [rbp - 0x30], rax	       401	xprepare.c	FUNCTION_9	FOR_1
0xea6	            0xeb76	                           jmp 0x4000f5e	       401	xprepare.c	FUNCTION_9	FOR_1
0xea8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       402	xprepare.c	FUNCTION_9	FOR_1
0xeac	        0x488b5050	            mov rdx, qword [rax + 0x50] 	       402	xprepare.c	FUNCTION_9	FOR_1
0xeb0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       402	xprepare.c	FUNCTION_9	FOR_1
0xeb4	          0x488b00	                    mov rax, qword [rax]	       402	xprepare.c	FUNCTION_9	FOR_1
0xeb7	        0x488b4018	            mov rax, qword [rax + 0x18] 	       402	xprepare.c	FUNCTION_9	FOR_1
0xebb	        0x48c1e003	                              shl rax, 3	       402	xprepare.c	FUNCTION_9	FOR_1
0xebf	          0x4801d0	                            add rax, rdx	       402	xprepare.c	FUNCTION_9	FOR_1
0xec2	          0x488b00	                    mov rax, qword [rax]	       402	xprepare.c	FUNCTION_9	FOR_1
0xec5	        0x488945f0	             mov qword [rbp - 0x10], rax	       402	xprepare.c	FUNCTION_9	FOR_1
0xec9	      0x48837df000	               cmp qword [rbp - 0x10], 0	       403	xprepare.c	FUNCTION_9	FOR_1
0xece	            0x740a	                            je 0x4000f1a	       403	xprepare.c	FUNCTION_9	FOR_1
0xed0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       403	xprepare.c	FUNCTION_9	FOR_1
0xed4	        0x488b4030	            mov rax, qword [rax + 0x30] 	       403	xprepare.c	FUNCTION_9	FOR_1
0xed8	            0xeb05	                           jmp 0x4000f1f	       403	xprepare.c	FUNCTION_9	FOR_1
0xeda	      0xb800000000	                              mov eax, 0	       403	xprepare.c	FUNCTION_9	FOR_1
0xedf	        0x488945f8	                mov qword [rbp - 8], rax	       403	xprepare.c	FUNCTION_9	FOR_1
0xee3	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       404	xprepare.c	FUNCTION_9	FOR_1
0xee7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       404	xprepare.c	FUNCTION_9	FOR_1
0xeeb	          0x4801c2	                            add rdx, rax	       404	xprepare.c	FUNCTION_9	FOR_1
0xeee	      0x48837df800	                  cmp qword [rbp - 8], 0	       404	xprepare.c	FUNCTION_9	FOR_1
0xef3	            0x7418	                            je 0x4000f4d	       404	xprepare.c	FUNCTION_9	FOR_1
0xef5	        0x488b45f8	                mov rax, qword [rbp - 8]	       404	xprepare.c	FUNCTION_9	FOR_1
0xef9	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	       404	xprepare.c	FUNCTION_9	FOR_1
0xefd	            0x7c07	                            jl 0x4000f46	       404	xprepare.c	FUNCTION_9	FOR_1
0xeff	      0xb802000000	                              mov eax, 2	       404	xprepare.c	FUNCTION_9	FOR_1
0xf04	            0xeb0c	                           jmp 0x4000f52	       404	xprepare.c	FUNCTION_9	FOR_1
0xf06	      0xb801000000	                              mov eax, 1	       404	xprepare.c	FUNCTION_9	FOR_1
0xf0b	            0xeb05	                           jmp 0x4000f52	       404	xprepare.c	FUNCTION_9	FOR_1
0xf0d	      0xb800000000	                              mov eax, 0	       404	xprepare.c	FUNCTION_9	FOR_1
0xf12	            0x8802	                      mov byte [rdx], al	       404	xprepare.c	FUNCTION_9	FOR_1
0xf14	      0x488345b801	               add qword [rbp - 0x48], 1	       401	xprepare.c	FUNCTION_9	FOR_1
0xf19	      0x488345d008	               add qword [rbp - 0x30], 8	       401	xprepare.c	FUNCTION_9	FOR_1
0xf1e	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       401	xprepare.c	FUNCTION_9	FOR_1
0xf22	        0x488b4058	            mov rax, qword [rax + 0x58] 	       401	xprepare.c	FUNCTION_9	FOR_1
0xf26	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	       401	xprepare.c	FUNCTION_9	FOR_1
0xf2a	     0xf8d78ffffff	                           jge 0x4000ee8	       401	xprepare.c	FUNCTION_9	FOR_1
0xf30	        0x488b4598	             mov rax, qword [rbp - 0x68]	       407	xprepare.c	FUNCTION_9	IF_3	CALL_4
0xf34	        0x488b4038	            mov rax, qword [rax + 0x38] 	       407	xprepare.c	FUNCTION_9	IF_3	CALL_4
0xf38	          0x4889c7	                            mov rdi, rax	       407	xprepare.c	FUNCTION_9	IF_3	CALL_4
0xf3b	      0xe800000000	                          call 0x4000f80	       407	xprepare.c	FUNCTION_9	IF_3	CALL_4
0xf40	        0x488945c8	             mov qword [rbp - 0x38], rax	       407	xprepare.c	FUNCTION_9	IF_3	CALL_4
0xf44	    0x48817dc80004	          cmp qword [rbp - 0x38], 0x400 	       407	xprepare.c	FUNCTION_9	IF_3	CALL_4
0xf4c	            0x7e08	                           jle 0x4000f96	       407	xprepare.c	FUNCTION_9	IF_3	CALL_4
0xf4e	    0x48c745c80004	          mov qword [rbp - 0x38], 0x400 	       408	xprepare.c	FUNCTION_9	IF_3
0xf56	        0x488b4598	             mov rax, qword [rbp - 0x68]	       409	xprepare.c	FUNCTION_9	FOR_2
0xf5a	        0x488b4050	            mov rax, qword [rax + 0x50] 	       409	xprepare.c	FUNCTION_9	FOR_2
0xf5e	        0x488945b8	             mov qword [rbp - 0x48], rax	       409	xprepare.c	FUNCTION_9	FOR_2
0xf62	        0x488b4598	             mov rax, qword [rbp - 0x68]	       409	xprepare.c	FUNCTION_9	FOR_2
0xf66	        0x488b5060	            mov rdx, qword [rax + 0x60] 	       409	xprepare.c	FUNCTION_9	FOR_2
0xf6a	        0x488b4598	             mov rax, qword [rbp - 0x68]	       409	xprepare.c	FUNCTION_9	FOR_2
0xf6e	        0x488b4050	            mov rax, qword [rax + 0x50] 	       409	xprepare.c	FUNCTION_9	FOR_2
0xf72	        0x48c1e003	                              shl rax, 3	       409	xprepare.c	FUNCTION_9	FOR_2
0xf76	          0x4801d0	                            add rax, rdx	       409	xprepare.c	FUNCTION_9	FOR_2
0xf79	        0x488945d0	             mov qword [rbp - 0x30], rax	       409	xprepare.c	FUNCTION_9	FOR_2
0xf7d	            0xeb76	                           jmp 0x4001035	       409	xprepare.c	FUNCTION_9	FOR_2
0xf7f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       410	xprepare.c	FUNCTION_9	FOR_2
0xf83	        0x488b5050	            mov rdx, qword [rax + 0x50] 	       410	xprepare.c	FUNCTION_9	FOR_2
0xf87	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       410	xprepare.c	FUNCTION_9	FOR_2
0xf8b	          0x488b00	                    mov rax, qword [rax]	       410	xprepare.c	FUNCTION_9	FOR_2
0xf8e	        0x488b4018	            mov rax, qword [rax + 0x18] 	       410	xprepare.c	FUNCTION_9	FOR_2
0xf92	        0x48c1e003	                              shl rax, 3	       410	xprepare.c	FUNCTION_9	FOR_2
0xf96	          0x4801d0	                            add rax, rdx	       410	xprepare.c	FUNCTION_9	FOR_2
0xf99	          0x488b00	                    mov rax, qword [rax]	       410	xprepare.c	FUNCTION_9	FOR_2
0xf9c	        0x488945f0	             mov qword [rbp - 0x10], rax	       410	xprepare.c	FUNCTION_9	FOR_2
0xfa0	      0x48837df000	               cmp qword [rbp - 0x10], 0	       411	xprepare.c	FUNCTION_9	FOR_2
0xfa5	            0x740a	                            je 0x4000ff1	       411	xprepare.c	FUNCTION_9	FOR_2
0xfa7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       411	xprepare.c	FUNCTION_9	FOR_2
0xfab	        0x488b4028	            mov rax, qword [rax + 0x28] 	       411	xprepare.c	FUNCTION_9	FOR_2
0xfaf	            0xeb05	                           jmp 0x4000ff6	       411	xprepare.c	FUNCTION_9	FOR_2
0xfb1	      0xb800000000	                              mov eax, 0	       411	xprepare.c	FUNCTION_9	FOR_2
0xfb6	        0x488945f8	                mov qword [rbp - 8], rax	       411	xprepare.c	FUNCTION_9	FOR_2
0xfba	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       412	xprepare.c	FUNCTION_9	FOR_2
0xfbe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       412	xprepare.c	FUNCTION_9	FOR_2
0xfc2	          0x4801c2	                            add rdx, rax	       412	xprepare.c	FUNCTION_9	FOR_2
0xfc5	      0x48837df800	                  cmp qword [rbp - 8], 0	       412	xprepare.c	FUNCTION_9	FOR_2
0xfca	            0x7418	                            je 0x4001024	       412	xprepare.c	FUNCTION_9	FOR_2
0xfcc	        0x488b45f8	                mov rax, qword [rbp - 8]	       412	xprepare.c	FUNCTION_9	FOR_2
0xfd0	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	       412	xprepare.c	FUNCTION_9	FOR_2
0xfd4	            0x7c07	                            jl 0x400101d	       412	xprepare.c	FUNCTION_9	FOR_2
0xfd6	      0xb802000000	                              mov eax, 2	       412	xprepare.c	FUNCTION_9	FOR_2
0xfdb	            0xeb0c	                           jmp 0x4001029	       412	xprepare.c	FUNCTION_9	FOR_2
0xfdd	      0xb801000000	                              mov eax, 1	       412	xprepare.c	FUNCTION_9	FOR_2
0xfe2	            0xeb05	                           jmp 0x4001029	       412	xprepare.c	FUNCTION_9	FOR_2
0xfe4	      0xb800000000	                              mov eax, 0	       412	xprepare.c	FUNCTION_9	FOR_2
0xfe9	            0x8802	                      mov byte [rdx], al	       412	xprepare.c	FUNCTION_9	FOR_2
0xfeb	      0x488345b801	               add qword [rbp - 0x48], 1	       409	xprepare.c	FUNCTION_9	FOR_2
0xff0	      0x488345d008	               add qword [rbp - 0x30], 8	       409	xprepare.c	FUNCTION_9	FOR_2
0xff5	        0x488b4598	             mov rax, qword [rbp - 0x68]	       409	xprepare.c	FUNCTION_9	FOR_2
0xff9	        0x488b4058	            mov rax, qword [rax + 0x58] 	       409	xprepare.c	FUNCTION_9	FOR_2
0xffd	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	       409	xprepare.c	FUNCTION_9	FOR_2
0x1001	     0xf8d78ffffff	                           jge 0x4000fbf	       409	xprepare.c	FUNCTION_9	FOR_2
0x1007	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       415	xprepare.c	FUNCTION_9	FOR_3
0x100f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       415	xprepare.c	FUNCTION_9	FOR_3
0x1013	        0x488b4050	            mov rax, qword [rax + 0x50] 	       415	xprepare.c	FUNCTION_9	FOR_3
0x1017	        0x488945b8	             mov qword [rbp - 0x48], rax	       415	xprepare.c	FUNCTION_9	FOR_3
0x101b	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       415	xprepare.c	FUNCTION_9	FOR_3
0x101f	        0x488b5060	            mov rdx, qword [rax + 0x60] 	       415	xprepare.c	FUNCTION_9	FOR_3
0x1023	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       415	xprepare.c	FUNCTION_9	FOR_3
0x1027	        0x488b4050	            mov rax, qword [rax + 0x50] 	       415	xprepare.c	FUNCTION_9	FOR_3
0x102b	        0x48c1e003	                              shl rax, 3	       415	xprepare.c	FUNCTION_9	FOR_3
0x102f	          0x4801d0	                            add rax, rdx	       415	xprepare.c	FUNCTION_9	FOR_3
0x1032	        0x488945d0	             mov qword [rbp - 0x30], rax	       415	xprepare.c	FUNCTION_9	FOR_3
0x1036	      0xe9a9000000	                           jmp 0x4001124	       415	xprepare.c	FUNCTION_9	FOR_3
0x103b	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       417	xprepare.c	FUNCTION_9	FOR_3	IF_4
0x103f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       417	xprepare.c	FUNCTION_9	FOR_3	IF_4
0x1043	          0x4801d0	                            add rax, rdx	       417	xprepare.c	FUNCTION_9	FOR_3	IF_4
0x1046	           0xfb600	                   movzx eax, byte [rax]	       417	xprepare.c	FUNCTION_9	FOR_3	IF_4
0x1049	            0x3c01	                               cmp al, 1	       417	xprepare.c	FUNCTION_9	FOR_3	IF_4
0x104b	            0x7436	                            je 0x40010c3	       417	xprepare.c	FUNCTION_9	FOR_3	IF_4
0x104d	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       418	xprepare.c	FUNCTION_9	FOR_3	IF_4	CALL_5
0x1051	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       418	xprepare.c	FUNCTION_9	FOR_3	IF_4	CALL_5
0x1055	          0x4801d0	                            add rax, rdx	       418	xprepare.c	FUNCTION_9	FOR_3	IF_4	CALL_5
0x1058	           0xfb600	                   movzx eax, byte [rax]	       418	xprepare.c	FUNCTION_9	FOR_3	IF_4	CALL_5
0x105b	            0x3c02	                               cmp al, 2	       417	xprepare.c	FUNCTION_9	FOR_3	IF_4
0x105d	            0x7569	                           jne 0x4001108	       417	xprepare.c	FUNCTION_9	FOR_3	IF_4
0x105f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       418	xprepare.c	FUNCTION_9	FOR_3	IF_4	CALL_5
0x1063	        0x488b4858	            mov rcx, qword [rax + 0x58] 	       418	xprepare.c	FUNCTION_9	FOR_3	IF_4	CALL_5
0x1067	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       418	xprepare.c	FUNCTION_9	FOR_3	IF_4	CALL_5
0x106b	        0x488b5050	            mov rdx, qword [rax + 0x50] 	       418	xprepare.c	FUNCTION_9	FOR_3	IF_4	CALL_5
0x106f	        0x488b75b8	             mov rsi, qword [rbp - 0x48]	       418	xprepare.c	FUNCTION_9	FOR_3	IF_4	CALL_5
0x1073	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       418	xprepare.c	FUNCTION_9	FOR_3	IF_4	CALL_5
0x1077	          0x4889c7	                            mov rdi, rax	       418	xprepare.c	FUNCTION_9	FOR_3	IF_4	CALL_5
0x107a	      0xe8cafbffff	               call sym.xdl_clean_mmatch	       418	xprepare.c	FUNCTION_9	FOR_3	IF_4	CALL_5
0x107f	            0x85c0	                           test eax, eax	       418	xprepare.c	FUNCTION_9	FOR_3	IF_4	CALL_5
0x1081	            0x7545	                           jne 0x4001108	       418	xprepare.c	FUNCTION_9	FOR_3	IF_4	CALL_5
0x1083	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       419	xprepare.c	FUNCTION_9	FOR_3	IF_4
0x1087	        0x488b4070	            mov rax, qword [rax + 0x70] 	       419	xprepare.c	FUNCTION_9	FOR_3	IF_4
0x108b	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       419	xprepare.c	FUNCTION_9	FOR_3	IF_4
0x108f	        0x48c1e203	                              shl rdx, 3	       419	xprepare.c	FUNCTION_9	FOR_3	IF_4
0x1093	          0x4801c2	                            add rdx, rax	       419	xprepare.c	FUNCTION_9	FOR_3	IF_4
0x1096	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       419	xprepare.c	FUNCTION_9	FOR_3	IF_4
0x109a	          0x488902	                    mov qword [rdx], rax	       419	xprepare.c	FUNCTION_9	FOR_3	IF_4
0x109d	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       420	xprepare.c	FUNCTION_9	FOR_3	IF_4
0x10a1	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       420	xprepare.c	FUNCTION_9	FOR_3	IF_4
0x10a8	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       420	xprepare.c	FUNCTION_9	FOR_3	IF_4
0x10ac	        0x48c1e203	                              shl rdx, 3	       420	xprepare.c	FUNCTION_9	FOR_3	IF_4
0x10b0	          0x4801c2	                            add rdx, rax	       420	xprepare.c	FUNCTION_9	FOR_3	IF_4
0x10b3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       420	xprepare.c	FUNCTION_9	FOR_3	IF_4
0x10b7	          0x488b00	                    mov rax, qword [rax]	       420	xprepare.c	FUNCTION_9	FOR_3	IF_4
0x10ba	        0x488b4018	            mov rax, qword [rax + 0x18] 	       420	xprepare.c	FUNCTION_9	FOR_3	IF_4
0x10be	          0x488902	                    mov qword [rdx], rax	       420	xprepare.c	FUNCTION_9	FOR_3	IF_4
0x10c1	      0x488345c001	               add qword [rbp - 0x40], 1	       421	xprepare.c	FUNCTION_9	FOR_3	IF_4
0x10c6	            0xeb12	                           jmp 0x400111a	       421	xprepare.c	FUNCTION_9	FOR_3	IF_4
0x10c8	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       423	xprepare.c	FUNCTION_9	FOR_3	ELSE_1
0x10cc	        0x488b5068	            mov rdx, qword [rax + 0x68] 	       423	xprepare.c	FUNCTION_9	FOR_3	ELSE_1
0x10d0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       423	xprepare.c	FUNCTION_9	FOR_3	ELSE_1
0x10d4	          0x4801d0	                            add rax, rdx	       423	xprepare.c	FUNCTION_9	FOR_3	ELSE_1
0x10d7	          0xc60001	                       mov byte [rax], 1	       423	xprepare.c	FUNCTION_9	FOR_3	ELSE_1
0x10da	      0x488345b801	               add qword [rbp - 0x48], 1	       416	xprepare.c	FUNCTION_9	FOR_3
0x10df	      0x488345d008	               add qword [rbp - 0x30], 8	       416	xprepare.c	FUNCTION_9	FOR_3
0x10e4	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       416	xprepare.c	FUNCTION_9	FOR_3
0x10e8	        0x488b4058	            mov rax, qword [rax + 0x58] 	       416	xprepare.c	FUNCTION_9	FOR_3
0x10ec	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	       415	xprepare.c	FUNCTION_9	FOR_3
0x10f0	     0xf8d45ffffff	                           jge 0x400107b	       415	xprepare.c	FUNCTION_9	FOR_3
0x10f6	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       425	xprepare.c	FUNCTION_9	ELSE_1
0x10fa	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       425	xprepare.c	FUNCTION_9	ELSE_1
0x10fe	        0x48895078	             mov qword [rax + 0x78], rdx	       425	xprepare.c	FUNCTION_9	ELSE_1
0x1102	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       427	xprepare.c	FUNCTION_9	ELSE_1	FOR_4
0x110a	        0x488b4598	             mov rax, qword [rbp - 0x68]	       427	xprepare.c	FUNCTION_9	ELSE_1	FOR_4
0x110e	        0x488b4050	            mov rax, qword [rax + 0x50] 	       427	xprepare.c	FUNCTION_9	ELSE_1	FOR_4
0x1112	        0x488945b8	             mov qword [rbp - 0x48], rax	       427	xprepare.c	FUNCTION_9	ELSE_1	FOR_4
0x1116	        0x488b4598	             mov rax, qword [rbp - 0x68]	       427	xprepare.c	FUNCTION_9	ELSE_1	FOR_4
0x111a	        0x488b5060	            mov rdx, qword [rax + 0x60] 	       427	xprepare.c	FUNCTION_9	ELSE_1	FOR_4
0x111e	        0x488b4598	             mov rax, qword [rbp - 0x68]	       427	xprepare.c	FUNCTION_9	ELSE_1	FOR_4
0x1122	        0x488b4050	            mov rax, qword [rax + 0x50] 	       427	xprepare.c	FUNCTION_9	ELSE_1	FOR_4
0x1126	        0x48c1e003	                              shl rax, 3	       427	xprepare.c	FUNCTION_9	ELSE_1	FOR_4
0x112a	          0x4801d0	                            add rax, rdx	       427	xprepare.c	FUNCTION_9	ELSE_1	FOR_4
0x112d	        0x488945d0	             mov qword [rbp - 0x30], rax	       427	xprepare.c	FUNCTION_9	ELSE_1	FOR_4
0x1131	      0xe9a9000000	                           jmp 0x400121f	       427	xprepare.c	FUNCTION_9	ELSE_1	FOR_4
0x1136	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       429	xprepare.c	FUNCTION_9	ELSE_1	FOR_4	IF_5
0x113a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       429	xprepare.c	FUNCTION_9	ELSE_1	FOR_4	IF_5
0x113e	          0x4801d0	                            add rax, rdx	       429	xprepare.c	FUNCTION_9	ELSE_1	FOR_4	IF_5
0x1141	           0xfb600	                   movzx eax, byte [rax]	       429	xprepare.c	FUNCTION_9	ELSE_1	FOR_4	IF_5
0x1144	            0x3c01	                               cmp al, 1	       429	xprepare.c	FUNCTION_9	ELSE_1	FOR_4	IF_5
0x1146	            0x7436	                            je 0x40011be	       429	xprepare.c	FUNCTION_9	ELSE_1	FOR_4	IF_5
0x1148	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       430	xprepare.c	FUNCTION_9	ELSE_1	FOR_4	IF_5	CALL_6
0x114c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       430	xprepare.c	FUNCTION_9	ELSE_1	FOR_4	IF_5	CALL_6
0x1150	          0x4801d0	                            add rax, rdx	       430	xprepare.c	FUNCTION_9	ELSE_1	FOR_4	IF_5	CALL_6
0x1153	           0xfb600	                   movzx eax, byte [rax]	       430	xprepare.c	FUNCTION_9	ELSE_1	FOR_4	IF_5	CALL_6
0x1156	            0x3c02	                               cmp al, 2	       429	xprepare.c	FUNCTION_9	ELSE_1	FOR_4	IF_5
0x1158	            0x7569	                           jne 0x4001203	       429	xprepare.c	FUNCTION_9	ELSE_1	FOR_4	IF_5
0x115a	        0x488b4598	             mov rax, qword [rbp - 0x68]	       430	xprepare.c	FUNCTION_9	ELSE_1	FOR_4	IF_5	CALL_6
0x115e	        0x488b4858	            mov rcx, qword [rax + 0x58] 	       430	xprepare.c	FUNCTION_9	ELSE_1	FOR_4	IF_5	CALL_6
0x1162	        0x488b4598	             mov rax, qword [rbp - 0x68]	       430	xprepare.c	FUNCTION_9	ELSE_1	FOR_4	IF_5	CALL_6
0x1166	        0x488b5050	            mov rdx, qword [rax + 0x50] 	       430	xprepare.c	FUNCTION_9	ELSE_1	FOR_4	IF_5	CALL_6
0x116a	        0x488b75b8	             mov rsi, qword [rbp - 0x48]	       430	xprepare.c	FUNCTION_9	ELSE_1	FOR_4	IF_5	CALL_6
0x116e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       430	xprepare.c	FUNCTION_9	ELSE_1	FOR_4	IF_5	CALL_6
0x1172	          0x4889c7	                            mov rdi, rax	       430	xprepare.c	FUNCTION_9	ELSE_1	FOR_4	IF_5	CALL_6
0x1175	      0xe8cffaffff	               call sym.xdl_clean_mmatch	       430	xprepare.c	FUNCTION_9	ELSE_1	FOR_4	IF_5	CALL_6
0x117a	            0x85c0	                           test eax, eax	       430	xprepare.c	FUNCTION_9	ELSE_1	FOR_4	IF_5	CALL_6
0x117c	            0x7545	                           jne 0x4001203	       430	xprepare.c	FUNCTION_9	ELSE_1	FOR_4	IF_5	CALL_6
0x117e	        0x488b4598	             mov rax, qword [rbp - 0x68]	       431	xprepare.c	FUNCTION_9	ELSE_1	FOR_4	IF_5
0x1182	        0x488b4070	            mov rax, qword [rax + 0x70] 	       431	xprepare.c	FUNCTION_9	ELSE_1	FOR_4	IF_5
0x1186	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       431	xprepare.c	FUNCTION_9	ELSE_1	FOR_4	IF_5
0x118a	        0x48c1e203	                              shl rdx, 3	       431	xprepare.c	FUNCTION_9	ELSE_1	FOR_4	IF_5
0x118e	          0x4801c2	                            add rdx, rax	       431	xprepare.c	FUNCTION_9	ELSE_1	FOR_4	IF_5
0x1191	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       431	xprepare.c	FUNCTION_9	ELSE_1	FOR_4	IF_5
0x1195	          0x488902	                    mov qword [rdx], rax	       431	xprepare.c	FUNCTION_9	ELSE_1	FOR_4	IF_5
0x1198	        0x488b4598	             mov rax, qword [rbp - 0x68]	       432	xprepare.c	FUNCTION_9	ELSE_1	FOR_4	IF_5
0x119c	    0x488b80800000	            mov rax, qword [rax + 0x80] 	       432	xprepare.c	FUNCTION_9	ELSE_1	FOR_4	IF_5
0x11a3	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       432	xprepare.c	FUNCTION_9	ELSE_1	FOR_4	IF_5
0x11a7	        0x48c1e203	                              shl rdx, 3	       432	xprepare.c	FUNCTION_9	ELSE_1	FOR_4	IF_5
0x11ab	          0x4801c2	                            add rdx, rax	       432	xprepare.c	FUNCTION_9	ELSE_1	FOR_4	IF_5
0x11ae	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       432	xprepare.c	FUNCTION_9	ELSE_1	FOR_4	IF_5
0x11b2	          0x488b00	                    mov rax, qword [rax]	       432	xprepare.c	FUNCTION_9	ELSE_1	FOR_4	IF_5
0x11b5	        0x488b4018	            mov rax, qword [rax + 0x18] 	       432	xprepare.c	FUNCTION_9	ELSE_1	FOR_4	IF_5
0x11b9	          0x488902	                    mov qword [rdx], rax	       432	xprepare.c	FUNCTION_9	ELSE_1	FOR_4	IF_5
0x11bc	      0x488345c001	               add qword [rbp - 0x40], 1	       433	xprepare.c	FUNCTION_9	ELSE_1	FOR_4	IF_5
0x11c1	            0xeb12	                           jmp 0x4001215	       433	xprepare.c	FUNCTION_9	ELSE_1	FOR_4	IF_5
0x11c3	        0x488b4598	             mov rax, qword [rbp - 0x68]	       435	xprepare.c	FUNCTION_9	ELSE_1	FOR_4	ELSE_2
0x11c7	        0x488b5068	            mov rdx, qword [rax + 0x68] 	       435	xprepare.c	FUNCTION_9	ELSE_1	FOR_4	ELSE_2
0x11cb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       435	xprepare.c	FUNCTION_9	ELSE_1	FOR_4	ELSE_2
0x11cf	          0x4801d0	                            add rax, rdx	       435	xprepare.c	FUNCTION_9	ELSE_1	FOR_4	ELSE_2
0x11d2	          0xc60001	                       mov byte [rax], 1	       435	xprepare.c	FUNCTION_9	ELSE_1	FOR_4	ELSE_2
0x11d5	      0x488345b801	               add qword [rbp - 0x48], 1	       428	xprepare.c	FUNCTION_9	ELSE_1	FOR_4
0x11da	      0x488345d008	               add qword [rbp - 0x30], 8	       428	xprepare.c	FUNCTION_9	ELSE_1	FOR_4
0x11df	        0x488b4598	             mov rax, qword [rbp - 0x68]	       428	xprepare.c	FUNCTION_9	ELSE_1	FOR_4
0x11e3	        0x488b4058	            mov rax, qword [rax + 0x58] 	       428	xprepare.c	FUNCTION_9	ELSE_1	FOR_4
0x11e7	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	       427	xprepare.c	FUNCTION_9	ELSE_1	FOR_4
0x11eb	     0xf8d45ffffff	                           jge 0x4001176	       427	xprepare.c	FUNCTION_9	ELSE_1	FOR_4
0x11f1	        0x488b4598	             mov rax, qword [rbp - 0x68]	       437	xprepare.c	FUNCTION_9
0x11f5	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       437	xprepare.c	FUNCTION_9
0x11f9	        0x48895078	             mov qword [rax + 0x78], rdx	       437	xprepare.c	FUNCTION_9
0x11fd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       439	xprepare.c	FUNCTION_9	CALL_7
0x1201	          0x4889c7	                            mov rdi, rax	       439	xprepare.c	FUNCTION_9	CALL_7
0x1204	      0xe800000000	                          call 0x4001249	       439	xprepare.c	FUNCTION_9	CALL_7
0x1209	      0xb800000000	                              mov eax, 0	       441	xprepare.c	FUNCTION_9
0x120e	              0xc9	                                   leave	       442	xprepare.c	FUNCTION_9
0x120f	              0xc3	                                     ret	       442	xprepare.c	FUNCTION_9
xdl_prepare_env	FOR,0:DO,0:WHILE,0:CALL,19:ELSE,0:IF,5:functions,0:SWITCH,0	143
0x98a	              0x55	                                push rbp	       263	xprepare.c	FUNCTION_6
0x98b	          0x4889e5	                            mov rbp, rsp	       263	xprepare.c	FUNCTION_6
0x98e	    0x4881ecc00000	                           sub rsp, 0xc0	       263	xprepare.c	FUNCTION_6
0x995	    0x4889bd58ffff	             mov qword [rbp - 0xa8], rdi	       263	xprepare.c	FUNCTION_6
0x99c	    0x4889b550ffff	             mov qword [rbp - 0xb0], rsi	       263	xprepare.c	FUNCTION_6
0x9a3	    0x48899548ffff	             mov qword [rbp - 0xb8], rdx	       263	xprepare.c	FUNCTION_6
0x9aa	    0x48898d40ffff	             mov qword [rbp - 0xc0], rcx	       263	xprepare.c	FUNCTION_6
0x9b1	    0x64488b042528	                mov rax, qword fs:[0x28]	       263	xprepare.c	FUNCTION_6
0x9ba	        0x488945f8	                mov qword [rbp - 8], rax	       263	xprepare.c	FUNCTION_6
0x9be	            0x31c0	                            xor eax, eax	       263	xprepare.c	FUNCTION_6
0x9c0	        0x488d4580	                   lea rax, [rbp - 0x80]	       267	xprepare.c	FUNCTION_6	CALL_1
0x9c4	      0xba70000000	                           mov edx, 0x70	       267	xprepare.c	FUNCTION_6	CALL_1
0x9c9	      0xbe00000000	                              mov esi, 0	       267	xprepare.c	FUNCTION_6	CALL_1
0x9ce	          0x4889c7	                            mov rdi, rax	       267	xprepare.c	FUNCTION_6	CALL_1
0x9d1	      0xe800000000	                          call 0x4000a16	       267	xprepare.c	FUNCTION_6	CALL_1
0x9d6	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       276	xprepare.c	FUNCTION_6	CALL_2
0x9dd	          0x488b00	                    mov rax, qword [rax]	       276	xprepare.c	FUNCTION_6	CALL_2
0x9e0	      0x2500c00000	                         and eax, 0xc000	       276	xprepare.c	FUNCTION_6	CALL_2
0x9e5	    0x483d00800000	                         cmp rax, 0x8000	       276	xprepare.c	FUNCTION_6	CALL_2
0x9eb	            0x7507	                           jne 0x4000a34	       276	xprepare.c	FUNCTION_6	CALL_2
0x9ed	      0xb814000000	                           mov eax, 0x14	       276	xprepare.c	FUNCTION_6	CALL_2
0x9f2	            0xeb05	                           jmp 0x4000a39	       276	xprepare.c	FUNCTION_6	CALL_2
0x9f4	      0xb800010000	                          mov eax, 0x100	       276	xprepare.c	FUNCTION_6	CALL_2
0x9f9	    0x48898568ffff	             mov qword [rbp - 0x98], rax	       276	xprepare.c	FUNCTION_6	CALL_2
0xa00	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	       279	xprepare.c	FUNCTION_6	CALL_3
0xa07	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       279	xprepare.c	FUNCTION_6	CALL_3
0xa0e	          0x4889d6	                            mov rsi, rdx	       279	xprepare.c	FUNCTION_6	CALL_3
0xa11	          0x4889c7	                            mov rdi, rax	       279	xprepare.c	FUNCTION_6	CALL_3
0xa14	      0xe800000000	                          call 0x4000a59	       279	xprepare.c	FUNCTION_6	CALL_3
0xa19	        0x4883c001	                              add rax, 1	       279	xprepare.c	FUNCTION_6	CALL_3
0xa1d	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       279	xprepare.c	FUNCTION_6	CALL_3
0xa24	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	       280	xprepare.c	FUNCTION_6	CALL_4
0xa2b	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       280	xprepare.c	FUNCTION_6	CALL_4
0xa32	          0x4889d6	                            mov rsi, rdx	       280	xprepare.c	FUNCTION_6	CALL_4
0xa35	          0x4889c7	                            mov rdi, rax	       280	xprepare.c	FUNCTION_6	CALL_4
0xa38	      0xe800000000	                          call 0x4000a7d	       280	xprepare.c	FUNCTION_6	CALL_4
0xa3d	        0x4883c001	                              add rax, 1	       280	xprepare.c	FUNCTION_6	CALL_4
0xa41	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       280	xprepare.c	FUNCTION_6	CALL_4
0xa48	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       282	xprepare.c	FUNCTION_6	IF_1	CALL_5
0xa4f	          0x488b00	                    mov rax, qword [rax]	       282	xprepare.c	FUNCTION_6	IF_1	CALL_5
0xa52	      0x2500c00000	                         and eax, 0xc000	       282	xprepare.c	FUNCTION_6	IF_1	CALL_5
0xa57	    0x483d00800000	                         cmp rax, 0x8000	       282	xprepare.c	FUNCTION_6	IF_1	CALL_5
0xa5d	            0x7442	                            je 0x4000ae1	       282	xprepare.c	FUNCTION_6	IF_1	CALL_5
0xa5f	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       283	xprepare.c	FUNCTION_6	IF_1	CALL_6
0xa66	          0x488b00	                    mov rax, qword [rax]	       283	xprepare.c	FUNCTION_6	IF_1	CALL_6
0xa69	          0x4889c6	                            mov rsi, rax	       283	xprepare.c	FUNCTION_6	IF_1	CALL_6
0xa6c	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	       283	xprepare.c	FUNCTION_6	IF_1	CALL_6
0xa73	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       283	xprepare.c	FUNCTION_6	IF_1	CALL_6
0xa7a	          0x4801d0	                            add rax, rdx	       283	xprepare.c	FUNCTION_6	IF_1	CALL_6
0xa7d	        0x488d4801	                      lea rcx, [rax + 1]	       283	xprepare.c	FUNCTION_6	IF_1	CALL_6
0xa81	        0x488d4580	                   lea rax, [rbp - 0x80]	       283	xprepare.c	FUNCTION_6	IF_1	CALL_6
0xa85	          0x4889f2	                            mov rdx, rsi	       283	xprepare.c	FUNCTION_6	IF_1	CALL_6
0xa88	          0x4889ce	                            mov rsi, rcx	       283	xprepare.c	FUNCTION_6	IF_1	CALL_6
0xa8b	          0x4889c7	                            mov rdi, rax	       283	xprepare.c	FUNCTION_6	IF_1	CALL_6
0xa8e	      0xe86df5ffff	            call sym.xdl_init_classifier	       283	xprepare.c	FUNCTION_6	IF_1	CALL_6
0xa93	            0x85c0	                           test eax, eax	       282	xprepare.c	FUNCTION_6	IF_1	CALL_5
0xa95	            0x790a	                           jns 0x4000ae1	       282	xprepare.c	FUNCTION_6	IF_1	CALL_5
0xa97	      0xb8ffffffff	                     mov eax, 0xffffffff	       284	xprepare.c	FUNCTION_6	IF_1
0xa9c	      0xe965010000	                           jmp 0x4000c46	       284	xprepare.c	FUNCTION_6	IF_1
0xaa1	    0x488bbd40ffff	             mov rdi, qword [rbp - 0xc0]	       286	xprepare.c	FUNCTION_6	IF_2	CALL_7
0xaa8	        0x488d7580	                   lea rsi, [rbp - 0x80]	       286	xprepare.c	FUNCTION_6	IF_2	CALL_7
0xaac	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	       286	xprepare.c	FUNCTION_6	IF_2	CALL_7
0xab3	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	       286	xprepare.c	FUNCTION_6	IF_2	CALL_7
0xaba	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       286	xprepare.c	FUNCTION_6	IF_2	CALL_7
0xac1	          0x4989f9	                             mov r9, rdi	       286	xprepare.c	FUNCTION_6	IF_2	CALL_7
0xac4	          0x4989f0	                             mov r8, rsi	       286	xprepare.c	FUNCTION_6	IF_2	CALL_7
0xac7	          0x4889c6	                            mov rsi, rax	       286	xprepare.c	FUNCTION_6	IF_2	CALL_7
0xaca	      0xbf01000000	                              mov edi, 1	       286	xprepare.c	FUNCTION_6	IF_2	CALL_7
0xacf	      0xe8c3f9ffff	                call sym.xdl_prepare_ctx	       286	xprepare.c	FUNCTION_6	IF_2	CALL_7
0xad4	            0x85c0	                           test eax, eax	       286	xprepare.c	FUNCTION_6	IF_2	CALL_7
0xad6	            0x7916	                           jns 0x4000b2e	       286	xprepare.c	FUNCTION_6	IF_2	CALL_7
0xad8	        0x488d4580	                   lea rax, [rbp - 0x80]	       288	xprepare.c	FUNCTION_6	IF_2	CALL_8
0xadc	          0x4889c7	                            mov rdi, rax	       288	xprepare.c	FUNCTION_6	IF_2	CALL_8
0xadf	      0xe882f6ffff	            call sym.xdl_free_classifier	       288	xprepare.c	FUNCTION_6	IF_2	CALL_8
0xae4	      0xb8ffffffff	                     mov eax, 0xffffffff	       289	xprepare.c	FUNCTION_6	IF_2
0xae9	      0xe918010000	                           jmp 0x4000c46	       289	xprepare.c	FUNCTION_6	IF_2
0xaee	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       291	xprepare.c	FUNCTION_6	IF_3	CALL_9
0xaf5	    0x488db8880000	                   lea rdi, [rax + 0x88]	       291	xprepare.c	FUNCTION_6	IF_3	CALL_9
0xafc	        0x488d7580	                   lea rsi, [rbp - 0x80]	       291	xprepare.c	FUNCTION_6	IF_3	CALL_9
0xb00	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	       291	xprepare.c	FUNCTION_6	IF_3	CALL_9
0xb07	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       291	xprepare.c	FUNCTION_6	IF_3	CALL_9
0xb0e	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       291	xprepare.c	FUNCTION_6	IF_3	CALL_9
0xb15	          0x4989f9	                             mov r9, rdi	       291	xprepare.c	FUNCTION_6	IF_3	CALL_9
0xb18	          0x4989f0	                             mov r8, rsi	       291	xprepare.c	FUNCTION_6	IF_3	CALL_9
0xb1b	          0x4889c6	                            mov rsi, rax	       291	xprepare.c	FUNCTION_6	IF_3	CALL_9
0xb1e	      0xbf02000000	                              mov edi, 2	       291	xprepare.c	FUNCTION_6	IF_3	CALL_9
0xb23	      0xe86ff9ffff	                call sym.xdl_prepare_ctx	       291	xprepare.c	FUNCTION_6	IF_3	CALL_9
0xb28	            0x85c0	                           test eax, eax	       291	xprepare.c	FUNCTION_6	IF_3	CALL_9
0xb2a	            0x7925	                           jns 0x4000b91	       291	xprepare.c	FUNCTION_6	IF_3	CALL_9
0xb2c	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       293	xprepare.c	FUNCTION_6	IF_3	CALL_10
0xb33	          0x4889c7	                            mov rdi, rax	       293	xprepare.c	FUNCTION_6	IF_3	CALL_10
0xb36	      0xe8ddfdffff	                   call sym.xdl_free_ctx	       293	xprepare.c	FUNCTION_6	IF_3	CALL_10
0xb3b	        0x488d4580	                   lea rax, [rbp - 0x80]	       294	xprepare.c	FUNCTION_6	IF_3	CALL_11
0xb3f	          0x4889c7	                            mov rdi, rax	       294	xprepare.c	FUNCTION_6	IF_3	CALL_11
0xb42	      0xe81ff6ffff	            call sym.xdl_free_classifier	       294	xprepare.c	FUNCTION_6	IF_3	CALL_11
0xb47	      0xb8ffffffff	                     mov eax, 0xffffffff	       295	xprepare.c	FUNCTION_6	IF_3
0xb4c	      0xe9b5000000	                           jmp 0x4000c46	       295	xprepare.c	FUNCTION_6	IF_3
0xb51	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       298	xprepare.c	FUNCTION_6	IF_4	CALL_12
0xb58	          0x488b00	                    mov rax, qword [rax]	       298	xprepare.c	FUNCTION_6	IF_4	CALL_12
0xb5b	      0x2500c00000	                         and eax, 0xc000	       298	xprepare.c	FUNCTION_6	IF_4	CALL_12
0xb60	    0x483d00400000	                         cmp rax, 0x4000	       298	xprepare.c	FUNCTION_6	IF_4	CALL_12
0xb66	            0x7476	                            je 0x4000c1e	       298	xprepare.c	FUNCTION_6	IF_4	CALL_12
0xb68	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       299	xprepare.c	FUNCTION_6	IF_4	CALL_13
0xb6f	          0x488b00	                    mov rax, qword [rax]	       299	xprepare.c	FUNCTION_6	IF_4	CALL_13
0xb72	      0x2500c00000	                         and eax, 0xc000	       299	xprepare.c	FUNCTION_6	IF_4	CALL_13
0xb77	    0x483d00800000	                         cmp rax, 0x8000	       298	xprepare.c	FUNCTION_6	IF_4	CALL_12
0xb7d	            0x745f	                            je 0x4000c1e	       298	xprepare.c	FUNCTION_6	IF_4	CALL_12
0xb7f	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       300	xprepare.c	FUNCTION_6	IF_4	CALL_14
0xb86	    0x488d90880000	                   lea rdx, [rax + 0x88]	       300	xprepare.c	FUNCTION_6	IF_4	CALL_14
0xb8d	    0x488b8d40ffff	             mov rcx, qword [rbp - 0xc0]	       300	xprepare.c	FUNCTION_6	IF_4	CALL_14
0xb94	        0x488d4580	                   lea rax, [rbp - 0x80]	       300	xprepare.c	FUNCTION_6	IF_4	CALL_14
0xb98	          0x4889ce	                            mov rsi, rcx	       300	xprepare.c	FUNCTION_6	IF_4	CALL_14
0xb9b	          0x4889c7	                            mov rdi, rax	       300	xprepare.c	FUNCTION_6	IF_4	CALL_14
0xb9e	      0xe8c7070000	              call sym.xdl_optimize_ctxs	       300	xprepare.c	FUNCTION_6	IF_4	CALL_14
0xba3	            0x85c0	                           test eax, eax	       299	xprepare.c	FUNCTION_6	IF_4	CALL_13
0xba5	            0x7937	                           jns 0x4000c1e	       299	xprepare.c	FUNCTION_6	IF_4	CALL_13
0xba7	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       302	xprepare.c	FUNCTION_6	IF_4	CALL_15
0xbae	    0x480588000000	                           add rax, 0x88	       302	xprepare.c	FUNCTION_6	IF_4	CALL_15
0xbb4	          0x4889c7	                            mov rdi, rax	       302	xprepare.c	FUNCTION_6	IF_4	CALL_15
0xbb7	      0xe85cfdffff	                   call sym.xdl_free_ctx	       302	xprepare.c	FUNCTION_6	IF_4	CALL_15
0xbbc	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       303	xprepare.c	FUNCTION_6	IF_4	CALL_16
0xbc3	          0x4889c7	                            mov rdi, rax	       303	xprepare.c	FUNCTION_6	IF_4	CALL_16
0xbc6	      0xe84dfdffff	                   call sym.xdl_free_ctx	       303	xprepare.c	FUNCTION_6	IF_4	CALL_16
0xbcb	        0x488d4580	                   lea rax, [rbp - 0x80]	       304	xprepare.c	FUNCTION_6	IF_4	CALL_17
0xbcf	          0x4889c7	                            mov rdi, rax	       304	xprepare.c	FUNCTION_6	IF_4	CALL_17
0xbd2	      0xe88ff5ffff	            call sym.xdl_free_classifier	       304	xprepare.c	FUNCTION_6	IF_4	CALL_17
0xbd7	      0xb8ffffffff	                     mov eax, 0xffffffff	       305	xprepare.c	FUNCTION_6	IF_4
0xbdc	            0xeb28	                           jmp 0x4000c46	       305	xprepare.c	FUNCTION_6	IF_4
0xbde	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       308	xprepare.c	FUNCTION_6	IF_5	CALL_18
0xbe5	          0x488b00	                    mov rax, qword [rax]	       308	xprepare.c	FUNCTION_6	IF_5	CALL_18
0xbe8	      0x2500c00000	                         and eax, 0xc000	       308	xprepare.c	FUNCTION_6	IF_5	CALL_18
0xbed	    0x483d00800000	                         cmp rax, 0x8000	       308	xprepare.c	FUNCTION_6	IF_5	CALL_18
0xbf3	            0x740c	                            je 0x4000c41	       308	xprepare.c	FUNCTION_6	IF_5	CALL_18
0xbf5	        0x488d4580	                   lea rax, [rbp - 0x80]	       309	xprepare.c	FUNCTION_6	CALL_19
0xbf9	          0x4889c7	                            mov rdi, rax	       309	xprepare.c	FUNCTION_6	CALL_19
0xbfc	      0xe865f5ffff	            call sym.xdl_free_classifier	       309	xprepare.c	FUNCTION_6	CALL_19
0xc01	      0xb800000000	                              mov eax, 0	       311	xprepare.c	FUNCTION_6
0xc06	        0x488b4df8	                mov rcx, qword [rbp - 8]	       312	xprepare.c	FUNCTION_6
0xc0a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       312	xprepare.c	FUNCTION_6
0xc13	            0x7405	                            je 0x4000c5a	       312	xprepare.c	FUNCTION_6
0xc15	      0xe800000000	                          call 0x4000c5a	       312	xprepare.c	FUNCTION_6
0xc1a	              0xc9	                                   leave	       312	xprepare.c	FUNCTION_6
0xc1b	              0xc3	                                     ret	       312	xprepare.c	FUNCTION_6
xdl_free_classifier	FOR,0:DO,0:WHILE,0:CALL,3:ELSE,0:IF,0:functions,0:SWITCH,0	19
0x166	              0x55	                                push rbp	       102	xprepare.c	FUNCTION_2
0x167	          0x4889e5	                            mov rbp, rsp	       102	xprepare.c	FUNCTION_2
0x16a	        0x4883ec10	                           sub rsp, 0x10	       102	xprepare.c	FUNCTION_2
0x16e	        0x48897df8	                mov qword [rbp - 8], rdi	       102	xprepare.c	FUNCTION_2
0x172	        0x488b45f8	                mov rax, qword [rbp - 8]	       104	xprepare.c	FUNCTION_2	CALL_1
0x176	        0x488b4050	            mov rax, qword [rax + 0x50] 	       104	xprepare.c	FUNCTION_2	CALL_1
0x17a	          0x4889c7	                            mov rdi, rax	       104	xprepare.c	FUNCTION_2	CALL_1
0x17d	      0xe800000000	                          call 0x40001c2	       104	xprepare.c	FUNCTION_2	CALL_1
0x182	        0x488b45f8	                mov rax, qword [rbp - 8]	       105	xprepare.c	FUNCTION_2	CALL_2
0x186	        0x488b4010	            mov rax, qword [rax + 0x10] 	       105	xprepare.c	FUNCTION_2	CALL_2
0x18a	          0x4889c7	                            mov rdi, rax	       105	xprepare.c	FUNCTION_2	CALL_2
0x18d	      0xe800000000	                          call 0x40001d2	       105	xprepare.c	FUNCTION_2	CALL_2
0x192	        0x488b45f8	                mov rax, qword [rbp - 8]	       106	xprepare.c	FUNCTION_2	CALL_3
0x196	        0x4883c018	                           add rax, 0x18	       106	xprepare.c	FUNCTION_2	CALL_3
0x19a	          0x4889c7	                            mov rdi, rax	       106	xprepare.c	FUNCTION_2	CALL_3
0x19d	      0xe800000000	                          call 0x40001e2	       106	xprepare.c	FUNCTION_2	CALL_3
0x1a2	              0x90	                                     nop	       107	xprepare.c	FUNCTION_2
0x1a3	              0xc9	                                   leave	       107	xprepare.c	FUNCTION_2
0x1a4	              0xc3	                                     ret	       107	xprepare.c	FUNCTION_2
xdl_free_env	FOR,0:DO,0:WHILE,0:CALL,2:ELSE,0:IF,0:functions,0:SWITCH,0	14
0xc1c	              0x55	                                push rbp	       315	xprepare.c	FUNCTION_7
0xc1d	          0x4889e5	                            mov rbp, rsp	       315	xprepare.c	FUNCTION_7
0xc20	        0x4883ec10	                           sub rsp, 0x10	       315	xprepare.c	FUNCTION_7
0xc24	        0x48897df8	                mov qword [rbp - 8], rdi	       315	xprepare.c	FUNCTION_7
0xc28	        0x488b45f8	                mov rax, qword [rbp - 8]	       317	xprepare.c	FUNCTION_7	CALL_1
0xc2c	    0x480588000000	                           add rax, 0x88	       317	xprepare.c	FUNCTION_7	CALL_1
0xc32	          0x4889c7	                            mov rdi, rax	       317	xprepare.c	FUNCTION_7	CALL_1
0xc35	      0xe8defcffff	                   call sym.xdl_free_ctx	       317	xprepare.c	FUNCTION_7	CALL_1
0xc3a	        0x488b45f8	                mov rax, qword [rbp - 8]	       318	xprepare.c	FUNCTION_7	CALL_2
0xc3e	          0x4889c7	                            mov rdi, rax	       318	xprepare.c	FUNCTION_7	CALL_2
0xc41	      0xe8d2fcffff	                   call sym.xdl_free_ctx	       318	xprepare.c	FUNCTION_7	CALL_2
0xc46	              0x90	                                     nop	       319	xprepare.c	FUNCTION_7
0xc47	              0xc9	                                   leave	       319	xprepare.c	FUNCTION_7
0xc48	              0xc3	                                     ret	       319	xprepare.c	FUNCTION_7
xdl_classify_record	FOR,1:DO,0:WHILE,0:CALL,5:ELSE,0:IF,5:functions,0:SWITCH,0	202
0x1a5	              0x55	                                push rbp	       111	xprepare.c	FUNCTION_3
0x1a6	          0x4889e5	                            mov rbp, rsp	       111	xprepare.c	FUNCTION_3
0x1a9	        0x4883ec40	                           sub rsp, 0x40	       111	xprepare.c	FUNCTION_3
0x1ad	          0x897ddc	             mov dword [rbp - 0x24], edi	       111	xprepare.c	FUNCTION_3
0x1b0	        0x488975d0	             mov qword [rbp - 0x30], rsi	       111	xprepare.c	FUNCTION_3
0x1b4	        0x488955c8	             mov qword [rbp - 0x38], rdx	       111	xprepare.c	FUNCTION_3
0x1b8	          0x894dd8	             mov dword [rbp - 0x28], ecx	       111	xprepare.c	FUNCTION_3
0x1bb	        0x4c8945c0	              mov qword [rbp - 0x40], r8	       111	xprepare.c	FUNCTION_3
0x1bf	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       117	xprepare.c	FUNCTION_3
0x1c3	        0x488b4008	                mov rax, qword [rax + 8]	       117	xprepare.c	FUNCTION_3
0x1c7	        0x488945e8	             mov qword [rbp - 0x18], rax	       117	xprepare.c	FUNCTION_3
0x1cb	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       118	xprepare.c	FUNCTION_3	CALL_1
0x1cf	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       118	xprepare.c	FUNCTION_3	CALL_1
0x1d3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       118	xprepare.c	FUNCTION_3	CALL_1
0x1d7	        0x488b7018	            mov rsi, qword [rax + 0x18] 	       118	xprepare.c	FUNCTION_3	CALL_1
0x1db	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       118	xprepare.c	FUNCTION_3	CALL_1
0x1df	            0x8b00	                    mov eax, dword [rax]	       118	xprepare.c	FUNCTION_3	CALL_1
0x1e1	            0x89c1	                            mov ecx, eax	       118	xprepare.c	FUNCTION_3	CALL_1
0x1e3	          0x48d3ee	                             shr rsi, cl	       118	xprepare.c	FUNCTION_3	CALL_1
0x1e6	          0x4889f0	                            mov rax, rsi	       118	xprepare.c	FUNCTION_3	CALL_1
0x1e9	          0x4801c2	                            add rdx, rax	       118	xprepare.c	FUNCTION_3	CALL_1
0x1ec	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       118	xprepare.c	FUNCTION_3	CALL_1
0x1f0	            0x8b00	                    mov eax, dword [rax]	       118	xprepare.c	FUNCTION_3	CALL_1
0x1f2	      0xbe01000000	                              mov esi, 1	       118	xprepare.c	FUNCTION_3	CALL_1
0x1f7	            0x89c1	                            mov ecx, eax	       118	xprepare.c	FUNCTION_3	CALL_1
0x1f9	          0x48d3e6	                             shl rsi, cl	       118	xprepare.c	FUNCTION_3	CALL_1
0x1fc	          0x4889f0	                            mov rax, rsi	       118	xprepare.c	FUNCTION_3	CALL_1
0x1ff	        0x4883e801	                              sub rax, 1	       118	xprepare.c	FUNCTION_3	CALL_1
0x203	          0x4821d0	                            and rax, rdx	       118	xprepare.c	FUNCTION_3	CALL_1
0x206	        0x488945f0	             mov qword [rbp - 0x10], rax	       118	xprepare.c	FUNCTION_3	CALL_1
0x20a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       119	xprepare.c	FUNCTION_3	FOR_1
0x20e	        0x488b4010	            mov rax, qword [rax + 0x10] 	       119	xprepare.c	FUNCTION_3	FOR_1
0x212	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       119	xprepare.c	FUNCTION_3	FOR_1
0x216	        0x48c1e203	                              shl rdx, 3	       119	xprepare.c	FUNCTION_3	FOR_1
0x21a	          0x4801d0	                            add rax, rdx	       119	xprepare.c	FUNCTION_3	FOR_1
0x21d	          0x488b00	                    mov rax, qword [rax]	       119	xprepare.c	FUNCTION_3	FOR_1
0x220	        0x488945e0	             mov qword [rbp - 0x20], rax	       119	xprepare.c	FUNCTION_3	FOR_1
0x224	            0xeb57	                           jmp 0x40002bd	       119	xprepare.c	FUNCTION_3	FOR_1
0x226	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       120	xprepare.c	FUNCTION_3	FOR_1	IF_1
0x22a	        0x488b5008	                mov rdx, qword [rax + 8]	       120	xprepare.c	FUNCTION_3	FOR_1	IF_1
0x22e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       120	xprepare.c	FUNCTION_3	FOR_1	IF_1
0x232	        0x488b4018	            mov rax, qword [rax + 0x18] 	       120	xprepare.c	FUNCTION_3	FOR_1	IF_1
0x236	          0x4839c2	                            cmp rdx, rax	       120	xprepare.c	FUNCTION_3	FOR_1	IF_1
0x239	            0x7537	                           jne 0x40002b2	       120	xprepare.c	FUNCTION_3	FOR_1	IF_1
0x23b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       121	xprepare.c	FUNCTION_3	FOR_1	IF_1	CALL_2
0x23f	        0x488b7868	            mov rdi, qword [rax + 0x68] 	       121	xprepare.c	FUNCTION_3	FOR_1	IF_1	CALL_2
0x243	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       121	xprepare.c	FUNCTION_3	FOR_1	IF_1	CALL_2
0x247	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       121	xprepare.c	FUNCTION_3	FOR_1	IF_1	CALL_2
0x24b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       121	xprepare.c	FUNCTION_3	FOR_1	IF_1	CALL_2
0x24f	        0x488b5008	                mov rdx, qword [rax + 8]	       121	xprepare.c	FUNCTION_3	FOR_1	IF_1	CALL_2
0x253	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       121	xprepare.c	FUNCTION_3	FOR_1	IF_1	CALL_2
0x257	        0x488b7018	            mov rsi, qword [rax + 0x18] 	       121	xprepare.c	FUNCTION_3	FOR_1	IF_1	CALL_2
0x25b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       121	xprepare.c	FUNCTION_3	FOR_1	IF_1	CALL_2
0x25f	        0x488b4010	            mov rax, qword [rax + 0x10] 	       121	xprepare.c	FUNCTION_3	FOR_1	IF_1	CALL_2
0x263	          0x4989f8	                             mov r8, rdi	       121	xprepare.c	FUNCTION_3	FOR_1	IF_1	CALL_2
0x266	          0x4889c7	                            mov rdi, rax	       121	xprepare.c	FUNCTION_3	FOR_1	IF_1	CALL_2
0x269	      0xe800000000	                          call 0x40002ae	       121	xprepare.c	FUNCTION_3	FOR_1	IF_1	CALL_2
0x26e	            0x85c0	                           test eax, eax	       120	xprepare.c	FUNCTION_3	FOR_1	IF_1
0x270	            0x7514	                           jne 0x40002c6	       120	xprepare.c	FUNCTION_3	FOR_1	IF_1
0x272	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       119	xprepare.c	FUNCTION_3	FOR_1
0x276	          0x488b00	                    mov rax, qword [rax]	       119	xprepare.c	FUNCTION_3	FOR_1
0x279	        0x488945e0	             mov qword [rbp - 0x20], rax	       119	xprepare.c	FUNCTION_3	FOR_1
0x27d	      0x48837de000	               cmp qword [rbp - 0x20], 0	       119	xprepare.c	FUNCTION_3	FOR_1
0x282	            0x75a2	                           jne 0x4000266	       119	xprepare.c	FUNCTION_3	FOR_1
0x284	            0xeb01	                           jmp 0x40002c7	       119	xprepare.c	FUNCTION_3	FOR_1
0x286	              0x90	                                     nop	       123	xprepare.c	FUNCTION_3	FOR_1	IF_1
0x287	      0x48837de000	               cmp qword [rbp - 0x20], 0	       125	xprepare.c	FUNCTION_3	IF_2
0x28c	     0xf854b010000	                           jne 0x400041d	       125	xprepare.c	FUNCTION_3	IF_2
0x292	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       126	xprepare.c	FUNCTION_3	IF_2	IF_3	CALL_3
0x296	        0x4883c018	                           add rax, 0x18	       126	xprepare.c	FUNCTION_3	IF_2	IF_3	CALL_3
0x29a	          0x4889c7	                            mov rdi, rax	       126	xprepare.c	FUNCTION_3	IF_2	IF_3	CALL_3
0x29d	      0xe800000000	                          call 0x40002e2	       126	xprepare.c	FUNCTION_3	IF_2	IF_3	CALL_3
0x2a2	        0x488945e0	             mov qword [rbp - 0x20], rax	       126	xprepare.c	FUNCTION_3	IF_2	IF_3	CALL_3
0x2a6	      0x48837de000	               cmp qword [rbp - 0x20], 0	       126	xprepare.c	FUNCTION_3	IF_2	IF_3	CALL_3
0x2ab	            0x750a	                           jne 0x40002f7	       126	xprepare.c	FUNCTION_3	IF_2	IF_3	CALL_3
0x2ad	      0xb8ffffffff	                     mov eax, 0xffffffff	       128	xprepare.c	FUNCTION_3	IF_2	IF_3
0x2b2	      0xe9de010000	                           jmp 0x40004d5	       128	xprepare.c	FUNCTION_3	IF_2	IF_3
0x2b7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       130	xprepare.c	FUNCTION_3	IF_2
0x2bb	        0x488b4060	            mov rax, qword [rax + 0x60] 	       130	xprepare.c	FUNCTION_3	IF_2
0x2bf	        0x488d4801	                      lea rcx, [rax + 1]	       130	xprepare.c	FUNCTION_3	IF_2
0x2c3	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       130	xprepare.c	FUNCTION_3	IF_2
0x2c7	        0x48894a60	             mov qword [rdx + 0x60], rcx	       130	xprepare.c	FUNCTION_3	IF_2
0x2cb	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       130	xprepare.c	FUNCTION_3	IF_2
0x2cf	        0x48894220	             mov qword [rdx + 0x20], rax	       130	xprepare.c	FUNCTION_3	IF_2
0x2d3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       131	xprepare.c	FUNCTION_3	IF_2	IF_4
0x2d7	        0x488b5060	            mov rdx, qword [rax + 0x60] 	       131	xprepare.c	FUNCTION_3	IF_2	IF_4
0x2db	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       131	xprepare.c	FUNCTION_3	IF_2	IF_4
0x2df	        0x488b4058	            mov rax, qword [rax + 0x58] 	       131	xprepare.c	FUNCTION_3	IF_2	IF_4
0x2e3	          0x4839c2	                            cmp rdx, rax	       131	xprepare.c	FUNCTION_3	IF_2	IF_4
0x2e6	            0x7e58	                           jle 0x4000380	       131	xprepare.c	FUNCTION_3	IF_2	IF_4
0x2e8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       132	xprepare.c	FUNCTION_3	IF_2	IF_4
0x2ec	        0x488b4058	            mov rax, qword [rax + 0x58] 	       132	xprepare.c	FUNCTION_3	IF_2	IF_4
0x2f0	        0x488d1400	                    lea rdx, [rax + rax]	       132	xprepare.c	FUNCTION_3	IF_2	IF_4
0x2f4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       132	xprepare.c	FUNCTION_3	IF_2	IF_4
0x2f8	        0x48895058	             mov qword [rax + 0x58], rdx	       132	xprepare.c	FUNCTION_3	IF_2	IF_4
0x2fc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       133	xprepare.c	FUNCTION_3	IF_2	IF_4	IF_5	CALL_4
0x300	        0x488b4058	            mov rax, qword [rax + 0x58] 	       133	xprepare.c	FUNCTION_3	IF_2	IF_4	IF_5	CALL_4
0x304	    0x488d14c50000	                        lea rdx, [rax*8]	       133	xprepare.c	FUNCTION_3	IF_2	IF_4	IF_5	CALL_4
0x30c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       133	xprepare.c	FUNCTION_3	IF_2	IF_4	IF_5	CALL_4
0x310	        0x488b4050	            mov rax, qword [rax + 0x50] 	       133	xprepare.c	FUNCTION_3	IF_2	IF_4	IF_5	CALL_4
0x314	          0x4889d6	                            mov rsi, rdx	       133	xprepare.c	FUNCTION_3	IF_2	IF_4	IF_5	CALL_4
0x317	          0x4889c7	                            mov rdi, rax	       133	xprepare.c	FUNCTION_3	IF_2	IF_4	IF_5	CALL_4
0x31a	      0xe800000000	                          call 0x400035f	       133	xprepare.c	FUNCTION_3	IF_2	IF_4	IF_5	CALL_4
0x31f	        0x488945f8	                mov qword [rbp - 8], rax	       133	xprepare.c	FUNCTION_3	IF_2	IF_4	IF_5	CALL_4
0x323	      0x48837df800	                  cmp qword [rbp - 8], 0	       133	xprepare.c	FUNCTION_3	IF_2	IF_4	IF_5	CALL_4
0x328	            0x750a	                           jne 0x4000374	       133	xprepare.c	FUNCTION_3	IF_2	IF_4	IF_5	CALL_4
0x32a	      0xb8ffffffff	                     mov eax, 0xffffffff	       135	xprepare.c	FUNCTION_3	IF_2	IF_4	IF_5
0x32f	      0xe961010000	                           jmp 0x40004d5	       135	xprepare.c	FUNCTION_3	IF_2	IF_4	IF_5
0x334	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       137	xprepare.c	FUNCTION_3	IF_2	IF_4
0x338	        0x488b55f8	                mov rdx, qword [rbp - 8]	       137	xprepare.c	FUNCTION_3	IF_2	IF_4
0x33c	        0x48895050	             mov qword [rax + 0x50], rdx	       137	xprepare.c	FUNCTION_3	IF_2	IF_4
0x340	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       139	xprepare.c	FUNCTION_3	IF_2
0x344	        0x488b5050	            mov rdx, qword [rax + 0x50] 	       139	xprepare.c	FUNCTION_3	IF_2
0x348	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       139	xprepare.c	FUNCTION_3	IF_2
0x34c	        0x488b4020	            mov rax, qword [rax + 0x20] 	       139	xprepare.c	FUNCTION_3	IF_2
0x350	        0x48c1e003	                              shl rax, 3	       139	xprepare.c	FUNCTION_3	IF_2
0x354	          0x4801c2	                            add rdx, rax	       139	xprepare.c	FUNCTION_3	IF_2
0x357	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       139	xprepare.c	FUNCTION_3	IF_2
0x35b	          0x488902	                    mov qword [rdx], rax	       139	xprepare.c	FUNCTION_3	IF_2
0x35e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       140	xprepare.c	FUNCTION_3	IF_2
0x362	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       140	xprepare.c	FUNCTION_3	IF_2
0x366	        0x48895010	             mov qword [rax + 0x10], rdx	       140	xprepare.c	FUNCTION_3	IF_2
0x36a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       141	xprepare.c	FUNCTION_3	IF_2
0x36e	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       141	xprepare.c	FUNCTION_3	IF_2
0x372	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       141	xprepare.c	FUNCTION_3	IF_2
0x376	        0x48895018	             mov qword [rax + 0x18], rdx	       141	xprepare.c	FUNCTION_3	IF_2
0x37a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       142	xprepare.c	FUNCTION_3	IF_2
0x37e	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       142	xprepare.c	FUNCTION_3	IF_2
0x382	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       142	xprepare.c	FUNCTION_3	IF_2
0x386	        0x48895008	                mov qword [rax + 8], rdx	       142	xprepare.c	FUNCTION_3	IF_2
0x38a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       143	xprepare.c	FUNCTION_3	IF_2
0x38e	    0x48c740300000	               mov qword [rax + 0x30], 0	       143	xprepare.c	FUNCTION_3	IF_2
0x396	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       143	xprepare.c	FUNCTION_3	IF_2
0x39a	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       143	xprepare.c	FUNCTION_3	IF_2
0x39e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       143	xprepare.c	FUNCTION_3	IF_2
0x3a2	        0x48895028	             mov qword [rax + 0x28], rdx	       143	xprepare.c	FUNCTION_3	IF_2
0x3a6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       144	xprepare.c	FUNCTION_3	IF_2
0x3aa	        0x488b4010	            mov rax, qword [rax + 0x10] 	       144	xprepare.c	FUNCTION_3	IF_2
0x3ae	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       144	xprepare.c	FUNCTION_3	IF_2
0x3b2	        0x48c1e203	                              shl rdx, 3	       144	xprepare.c	FUNCTION_3	IF_2
0x3b6	          0x4801d0	                            add rax, rdx	       144	xprepare.c	FUNCTION_3	IF_2
0x3b9	          0x488b10	                    mov rdx, qword [rax]	       144	xprepare.c	FUNCTION_3	IF_2
0x3bc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       144	xprepare.c	FUNCTION_3	IF_2
0x3c0	          0x488910	                    mov qword [rax], rdx	       144	xprepare.c	FUNCTION_3	IF_2
0x3c3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       145	xprepare.c	FUNCTION_3	IF_2
0x3c7	        0x488b4010	            mov rax, qword [rax + 0x10] 	       145	xprepare.c	FUNCTION_3	IF_2
0x3cb	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       145	xprepare.c	FUNCTION_3	IF_2
0x3cf	        0x48c1e203	                              shl rdx, 3	       145	xprepare.c	FUNCTION_3	IF_2
0x3d3	          0x4801c2	                            add rdx, rax	       145	xprepare.c	FUNCTION_3	IF_2
0x3d6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       145	xprepare.c	FUNCTION_3	IF_2
0x3da	          0x488902	                    mov qword [rdx], rax	       145	xprepare.c	FUNCTION_3	IF_2
0x3dd	        0x837ddc01	               cmp dword [rbp - 0x24], 1	       148	xprepare.c	FUNCTION_3
0x3e1	            0x7516	                           jne 0x4000439	       148	xprepare.c	FUNCTION_3
0x3e3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       148	xprepare.c	FUNCTION_3
0x3e7	        0x488b4028	            mov rax, qword [rax + 0x28] 	       148	xprepare.c	FUNCTION_3
0x3eb	        0x488d5001	                      lea rdx, [rax + 1]	       148	xprepare.c	FUNCTION_3
0x3ef	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       148	xprepare.c	FUNCTION_3
0x3f3	        0x48895028	             mov qword [rax + 0x28], rdx	       148	xprepare.c	FUNCTION_3
0x3f7	            0xeb14	                           jmp 0x400044d	       148	xprepare.c	FUNCTION_3
0x3f9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       148	xprepare.c	FUNCTION_3
0x3fd	        0x488b4030	            mov rax, qword [rax + 0x30] 	       148	xprepare.c	FUNCTION_3
0x401	        0x488d5001	                      lea rdx, [rax + 1]	       148	xprepare.c	FUNCTION_3
0x405	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       148	xprepare.c	FUNCTION_3
0x409	        0x48895030	             mov qword [rax + 0x30], rdx	       148	xprepare.c	FUNCTION_3
0x40d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       150	xprepare.c	FUNCTION_3
0x411	        0x488b4020	            mov rax, qword [rax + 0x20] 	       150	xprepare.c	FUNCTION_3
0x415	          0x4889c2	                            mov rdx, rax	       150	xprepare.c	FUNCTION_3
0x418	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       150	xprepare.c	FUNCTION_3
0x41c	        0x48895018	             mov qword [rax + 0x18], rdx	       150	xprepare.c	FUNCTION_3
0x420	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       152	xprepare.c	FUNCTION_3	CALL_5
0x424	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       152	xprepare.c	FUNCTION_3	CALL_5
0x428	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       152	xprepare.c	FUNCTION_3	CALL_5
0x42c	        0x488b7018	            mov rsi, qword [rax + 0x18] 	       152	xprepare.c	FUNCTION_3	CALL_5
0x430	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       152	xprepare.c	FUNCTION_3	CALL_5
0x433	            0x89c1	                            mov ecx, eax	       152	xprepare.c	FUNCTION_3	CALL_5
0x435	          0x48d3ee	                             shr rsi, cl	       152	xprepare.c	FUNCTION_3	CALL_5
0x438	          0x4889f0	                            mov rax, rsi	       152	xprepare.c	FUNCTION_3	CALL_5
0x43b	          0x4801c2	                            add rdx, rax	       152	xprepare.c	FUNCTION_3	CALL_5
0x43e	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       152	xprepare.c	FUNCTION_3	CALL_5
0x441	      0xbe01000000	                              mov esi, 1	       152	xprepare.c	FUNCTION_3	CALL_5
0x446	            0x89c1	                            mov ecx, eax	       152	xprepare.c	FUNCTION_3	CALL_5
0x448	          0x48d3e6	                             shl rsi, cl	       152	xprepare.c	FUNCTION_3	CALL_5
0x44b	          0x4889f0	                            mov rax, rsi	       152	xprepare.c	FUNCTION_3	CALL_5
0x44e	        0x4883e801	                              sub rax, 1	       152	xprepare.c	FUNCTION_3	CALL_5
0x452	          0x4821d0	                            and rax, rdx	       152	xprepare.c	FUNCTION_3	CALL_5
0x455	        0x488945f0	             mov qword [rbp - 0x10], rax	       152	xprepare.c	FUNCTION_3	CALL_5
0x459	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       153	xprepare.c	FUNCTION_3
0x45d	    0x488d14c50000	                        lea rdx, [rax*8]	       153	xprepare.c	FUNCTION_3
0x465	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       153	xprepare.c	FUNCTION_3
0x469	          0x4801d0	                            add rax, rdx	       153	xprepare.c	FUNCTION_3
0x46c	          0x488b10	                    mov rdx, qword [rax]	       153	xprepare.c	FUNCTION_3
0x46f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       153	xprepare.c	FUNCTION_3
0x473	          0x488910	                    mov qword [rax], rdx	       153	xprepare.c	FUNCTION_3
0x476	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       154	xprepare.c	FUNCTION_3
0x47a	    0x488d14c50000	                        lea rdx, [rax*8]	       154	xprepare.c	FUNCTION_3
0x482	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       154	xprepare.c	FUNCTION_3
0x486	          0x4801c2	                            add rdx, rax	       154	xprepare.c	FUNCTION_3
0x489	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       154	xprepare.c	FUNCTION_3
0x48d	          0x488902	                    mov qword [rdx], rax	       154	xprepare.c	FUNCTION_3
0x490	      0xb800000000	                              mov eax, 0	       156	xprepare.c	FUNCTION_3
0x495	              0xc9	                                   leave	       157	xprepare.c	FUNCTION_3
0x496	              0xc3	                                     ret	       157	xprepare.c	FUNCTION_3
xdl_trim_ends	FOR,2:DO,0:WHILE,0:CALL,1:ELSE,0:IF,2:functions,0:SWITCH,0	93
0x1210	              0x55	                                push rbp	       448	xprepare.c	FUNCTION_10
0x1211	          0x4889e5	                            mov rbp, rsp	       448	xprepare.c	FUNCTION_10
0x1214	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       448	xprepare.c	FUNCTION_10
0x1218	        0x488975d0	             mov qword [rbp - 0x30], rsi	       448	xprepare.c	FUNCTION_10
0x121c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       452	xprepare.c	FUNCTION_10
0x1220	        0x488b4060	            mov rax, qword [rax + 0x60] 	       452	xprepare.c	FUNCTION_10
0x1224	        0x488945e8	             mov qword [rbp - 0x18], rax	       452	xprepare.c	FUNCTION_10
0x1228	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       453	xprepare.c	FUNCTION_10
0x122c	        0x488b4060	            mov rax, qword [rax + 0x60] 	       453	xprepare.c	FUNCTION_10
0x1230	        0x488945f0	             mov qword [rbp - 0x10], rax	       453	xprepare.c	FUNCTION_10
0x1234	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       454	xprepare.c	FUNCTION_10	FOR_1	CALL_1
0x123c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       454	xprepare.c	FUNCTION_10	FOR_1	CALL_1
0x1240	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       454	xprepare.c	FUNCTION_10	FOR_1	CALL_1
0x1244	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       454	xprepare.c	FUNCTION_10	FOR_1	CALL_1
0x1248	        0x488b4038	            mov rax, qword [rax + 0x38] 	       454	xprepare.c	FUNCTION_10	FOR_1	CALL_1
0x124c	          0x4839c2	                            cmp rdx, rax	       454	xprepare.c	FUNCTION_10	FOR_1	CALL_1
0x124f	        0x480f4ec2	                         cmovle rax, rdx	       454	xprepare.c	FUNCTION_10	FOR_1	CALL_1
0x1253	        0x488945f8	                mov qword [rbp - 8], rax	       454	xprepare.c	FUNCTION_10	FOR_1	CALL_1
0x1257	            0xeb2a	                           jmp 0x40012c3	       454	xprepare.c	FUNCTION_10	FOR_1	CALL_1
0x1259	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       456	xprepare.c	FUNCTION_10	FOR_1	IF_1
0x125d	          0x488b00	                    mov rax, qword [rax]	       456	xprepare.c	FUNCTION_10	FOR_1	IF_1
0x1260	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       456	xprepare.c	FUNCTION_10	FOR_1	IF_1
0x1264	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       456	xprepare.c	FUNCTION_10	FOR_1	IF_1
0x1268	          0x488b00	                    mov rax, qword [rax]	       456	xprepare.c	FUNCTION_10	FOR_1	IF_1
0x126b	        0x488b4018	            mov rax, qword [rax + 0x18] 	       456	xprepare.c	FUNCTION_10	FOR_1	IF_1
0x126f	          0x4839c2	                            cmp rdx, rax	       456	xprepare.c	FUNCTION_10	FOR_1	IF_1
0x1272	            0x751b	                           jne 0x40012cf	       456	xprepare.c	FUNCTION_10	FOR_1	IF_1
0x1274	      0x488345e001	               add qword [rbp - 0x20], 1	       455	xprepare.c	FUNCTION_10	FOR_1
0x1279	      0x488345e808	               add qword [rbp - 0x18], 8	       455	xprepare.c	FUNCTION_10	FOR_1
0x127e	      0x488345f008	               add qword [rbp - 0x10], 8	       455	xprepare.c	FUNCTION_10	FOR_1
0x1283	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       454	xprepare.c	FUNCTION_10	FOR_1	CALL_1
0x1287	        0x483b45f8	                cmp rax, qword [rbp - 8]	       454	xprepare.c	FUNCTION_10	FOR_1	CALL_1
0x128b	            0x7ccc	                            jl 0x4001299	       454	xprepare.c	FUNCTION_10	FOR_1	CALL_1
0x128d	            0xeb01	                           jmp 0x40012d0	       454	xprepare.c	FUNCTION_10	FOR_1	CALL_1
0x128f	              0x90	                                     nop	       457	xprepare.c	FUNCTION_10	FOR_1	IF_1
0x1290	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       459	xprepare.c	FUNCTION_10
0x1294	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       459	xprepare.c	FUNCTION_10
0x1298	        0x48895050	             mov qword [rax + 0x50], rdx	       459	xprepare.c	FUNCTION_10
0x129c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       459	xprepare.c	FUNCTION_10
0x12a0	        0x488b5050	            mov rdx, qword [rax + 0x50] 	       459	xprepare.c	FUNCTION_10
0x12a4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       459	xprepare.c	FUNCTION_10
0x12a8	        0x48895050	             mov qword [rax + 0x50], rdx	       459	xprepare.c	FUNCTION_10
0x12ac	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       461	xprepare.c	FUNCTION_10
0x12b0	        0x488b5060	            mov rdx, qword [rax + 0x60] 	       461	xprepare.c	FUNCTION_10
0x12b4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       461	xprepare.c	FUNCTION_10
0x12b8	        0x488b4038	            mov rax, qword [rax + 0x38] 	       461	xprepare.c	FUNCTION_10
0x12bc	        0x48c1e003	                              shl rax, 3	       461	xprepare.c	FUNCTION_10
0x12c0	        0x4883e808	                              sub rax, 8	       461	xprepare.c	FUNCTION_10
0x12c4	          0x4801d0	                            add rax, rdx	       461	xprepare.c	FUNCTION_10
0x12c7	        0x488945e8	             mov qword [rbp - 0x18], rax	       461	xprepare.c	FUNCTION_10
0x12cb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       462	xprepare.c	FUNCTION_10
0x12cf	        0x488b5060	            mov rdx, qword [rax + 0x60] 	       462	xprepare.c	FUNCTION_10
0x12d3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       462	xprepare.c	FUNCTION_10
0x12d7	        0x488b4038	            mov rax, qword [rax + 0x38] 	       462	xprepare.c	FUNCTION_10
0x12db	        0x48c1e003	                              shl rax, 3	       462	xprepare.c	FUNCTION_10
0x12df	        0x4883e808	                              sub rax, 8	       462	xprepare.c	FUNCTION_10
0x12e3	          0x4801d0	                            add rax, rdx	       462	xprepare.c	FUNCTION_10
0x12e6	        0x488945f0	             mov qword [rbp - 0x10], rax	       462	xprepare.c	FUNCTION_10
0x12ea	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       463	xprepare.c	FUNCTION_10	FOR_2
0x12ee	        0x482945f8	                sub qword [rbp - 8], rax	       463	xprepare.c	FUNCTION_10	FOR_2
0x12f2	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       463	xprepare.c	FUNCTION_10	FOR_2
0x12fa	            0xeb2a	                           jmp 0x4001366	       463	xprepare.c	FUNCTION_10	FOR_2
0x12fc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       464	xprepare.c	FUNCTION_10	FOR_2	IF_2
0x1300	          0x488b00	                    mov rax, qword [rax]	       464	xprepare.c	FUNCTION_10	FOR_2	IF_2
0x1303	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       464	xprepare.c	FUNCTION_10	FOR_2	IF_2
0x1307	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       464	xprepare.c	FUNCTION_10	FOR_2	IF_2
0x130b	          0x488b00	                    mov rax, qword [rax]	       464	xprepare.c	FUNCTION_10	FOR_2	IF_2
0x130e	        0x488b4018	            mov rax, qword [rax + 0x18] 	       464	xprepare.c	FUNCTION_10	FOR_2	IF_2
0x1312	          0x4839c2	                            cmp rdx, rax	       464	xprepare.c	FUNCTION_10	FOR_2	IF_2
0x1315	            0x751b	                           jne 0x4001372	       464	xprepare.c	FUNCTION_10	FOR_2	IF_2
0x1317	      0x488345e001	               add qword [rbp - 0x20], 1	       463	xprepare.c	FUNCTION_10	FOR_2
0x131c	      0x48836de808	               sub qword [rbp - 0x18], 8	       463	xprepare.c	FUNCTION_10	FOR_2
0x1321	      0x48836df008	               sub qword [rbp - 0x10], 8	       463	xprepare.c	FUNCTION_10	FOR_2
0x1326	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       463	xprepare.c	FUNCTION_10	FOR_2
0x132a	        0x483b45f8	                cmp rax, qword [rbp - 8]	       463	xprepare.c	FUNCTION_10	FOR_2
0x132e	            0x7ccc	                            jl 0x400133c	       463	xprepare.c	FUNCTION_10	FOR_2
0x1330	            0xeb01	                           jmp 0x4001373	       463	xprepare.c	FUNCTION_10	FOR_2
0x1332	              0x90	                                     nop	       465	xprepare.c	FUNCTION_10	FOR_2	IF_2
0x1333	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       467	xprepare.c	FUNCTION_10
0x1337	        0x488b4038	            mov rax, qword [rax + 0x38] 	       467	xprepare.c	FUNCTION_10
0x133b	        0x482b45e0	             sub rax, qword [rbp - 0x20]	       467	xprepare.c	FUNCTION_10
0x133f	        0x488d50ff	                      lea rdx, [rax - 1]	       467	xprepare.c	FUNCTION_10
0x1343	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       467	xprepare.c	FUNCTION_10
0x1347	        0x48895058	             mov qword [rax + 0x58], rdx	       467	xprepare.c	FUNCTION_10
0x134b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       468	xprepare.c	FUNCTION_10
0x134f	        0x488b4038	            mov rax, qword [rax + 0x38] 	       468	xprepare.c	FUNCTION_10
0x1353	        0x482b45e0	             sub rax, qword [rbp - 0x20]	       468	xprepare.c	FUNCTION_10
0x1357	        0x488d50ff	                      lea rdx, [rax - 1]	       468	xprepare.c	FUNCTION_10
0x135b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       468	xprepare.c	FUNCTION_10
0x135f	        0x48895058	             mov qword [rax + 0x58], rdx	       468	xprepare.c	FUNCTION_10
0x1363	      0xb800000000	                              mov eax, 0	       470	xprepare.c	FUNCTION_10
0x1368	              0x5d	                                 pop rbp	       471	xprepare.c	FUNCTION_10
0x1369	              0xc3	                                     ret	       471	xprepare.c	FUNCTION_10
xdl_clean_mmatch	FOR,2:DO,0:WHILE,0:CALL,0:ELSE,4:IF,8:functions,0:SWITCH,0	105
0xc49	              0x55	                                push rbp	       322	xprepare.c	FUNCTION_8
0xc4a	          0x4889e5	                            mov rbp, rsp	       322	xprepare.c	FUNCTION_8
0xc4d	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       322	xprepare.c	FUNCTION_8
0xc51	        0x488975c0	             mov qword [rbp - 0x40], rsi	       322	xprepare.c	FUNCTION_8
0xc55	        0x488955b8	             mov qword [rbp - 0x48], rdx	       322	xprepare.c	FUNCTION_8
0xc59	        0x48894db0	             mov qword [rbp - 0x50], rcx	       322	xprepare.c	FUNCTION_8
0xc5d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       332	xprepare.c	FUNCTION_8	IF_1
0xc61	        0x482b45b8	             sub rax, qword [rbp - 0x48]	       332	xprepare.c	FUNCTION_8	IF_1
0xc65	        0x4883f864	                           cmp rax, 0x64	       332	xprepare.c	FUNCTION_8	IF_1
0xc69	            0x7e0c	                           jle 0x4000cb7	       332	xprepare.c	FUNCTION_8	IF_1
0xc6b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       333	xprepare.c	FUNCTION_8	IF_1
0xc6f	        0x4883e864	                           sub rax, 0x64	       333	xprepare.c	FUNCTION_8	IF_1
0xc73	        0x488945b8	             mov qword [rbp - 0x48], rax	       333	xprepare.c	FUNCTION_8	IF_1
0xc77	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       334	xprepare.c	FUNCTION_8	IF_2
0xc7b	        0x482b45c0	             sub rax, qword [rbp - 0x40]	       334	xprepare.c	FUNCTION_8	IF_2
0xc7f	        0x4883f864	                           cmp rax, 0x64	       334	xprepare.c	FUNCTION_8	IF_2
0xc83	            0x7e0c	                           jle 0x4000cd1	       334	xprepare.c	FUNCTION_8	IF_2
0xc85	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       335	xprepare.c	FUNCTION_8	IF_2
0xc89	        0x4883c064	                           add rax, 0x64	       335	xprepare.c	FUNCTION_8	IF_2
0xc8d	        0x488945b0	             mov qword [rbp - 0x50], rax	       335	xprepare.c	FUNCTION_8	IF_2
0xc91	    0x48c745d80100	               mov qword [rbp - 0x28], 1	       343	xprepare.c	FUNCTION_8	FOR_1
0xc99	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       343	xprepare.c	FUNCTION_8	FOR_1
0xca1	    0x48c745e80100	               mov qword [rbp - 0x18], 1	       343	xprepare.c	FUNCTION_8	FOR_1
0xca9	            0xeb43	                           jmp 0x4000d2e	       343	xprepare.c	FUNCTION_8	FOR_1
0xcab	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       344	xprepare.c	FUNCTION_8	FOR_1	IF_3
0xcaf	        0x482b45d8	             sub rax, qword [rbp - 0x28]	       344	xprepare.c	FUNCTION_8	FOR_1	IF_3
0xcb3	          0x4889c2	                            mov rdx, rax	       344	xprepare.c	FUNCTION_8	FOR_1	IF_3
0xcb6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       344	xprepare.c	FUNCTION_8	FOR_1	IF_3
0xcba	          0x4801d0	                            add rax, rdx	       344	xprepare.c	FUNCTION_8	FOR_1	IF_3
0xcbd	           0xfb600	                   movzx eax, byte [rax]	       344	xprepare.c	FUNCTION_8	FOR_1	IF_3
0xcc0	            0x84c0	                             test al, al	       344	xprepare.c	FUNCTION_8	FOR_1	IF_3
0xcc2	            0x7507	                           jne 0x4000d0b	       344	xprepare.c	FUNCTION_8	FOR_1	IF_3
0xcc4	      0x488345e001	               add qword [rbp - 0x20], 1	       345	xprepare.c	FUNCTION_8	FOR_1	IF_3
0xcc9	            0xeb1e	                           jmp 0x4000d29	       345	xprepare.c	FUNCTION_8	FOR_1	IF_3
0xccb	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       346	xprepare.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0xccf	        0x482b45d8	             sub rax, qword [rbp - 0x28]	       346	xprepare.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0xcd3	          0x4889c2	                            mov rdx, rax	       346	xprepare.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0xcd6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       346	xprepare.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0xcda	          0x4801d0	                            add rax, rdx	       346	xprepare.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0xcdd	           0xfb600	                   movzx eax, byte [rax]	       346	xprepare.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0xce0	            0x3c02	                               cmp al, 2	       346	xprepare.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0xce2	            0x751a	                           jne 0x4000d3e	       346	xprepare.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0xce4	      0x488345e801	               add qword [rbp - 0x18], 1	       347	xprepare.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0xce9	      0x488345d801	               add qword [rbp - 0x28], 1	       343	xprepare.c	FUNCTION_8	FOR_1
0xcee	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       343	xprepare.c	FUNCTION_8	FOR_1
0xcf2	        0x482b45d8	             sub rax, qword [rbp - 0x28]	       343	xprepare.c	FUNCTION_8	FOR_1
0xcf6	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	       343	xprepare.c	FUNCTION_8	FOR_1
0xcfa	            0x7daf	                           jge 0x4000ceb	       343	xprepare.c	FUNCTION_8	FOR_1
0xcfc	            0xeb01	                           jmp 0x4000d3f	       343	xprepare.c	FUNCTION_8	FOR_1
0xcfe	              0x90	                                     nop	       349	xprepare.c	FUNCTION_8	FOR_1	ELSE_2
0xcff	      0x48837de000	               cmp qword [rbp - 0x20], 0	       357	xprepare.c	FUNCTION_8	IF_5
0xd04	            0x750a	                           jne 0x4000d50	       357	xprepare.c	FUNCTION_8	IF_5
0xd06	      0xb800000000	                              mov eax, 0	       358	xprepare.c	FUNCTION_8	IF_5
0xd0b	      0xe9b5000000	                           jmp 0x4000e05	       358	xprepare.c	FUNCTION_8	IF_5
0xd10	    0x48c745d80100	               mov qword [rbp - 0x28], 1	       359	xprepare.c	FUNCTION_8	FOR_2
0xd18	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       359	xprepare.c	FUNCTION_8	FOR_2
0xd20	    0x48c745f80100	                  mov qword [rbp - 8], 1	       359	xprepare.c	FUNCTION_8	FOR_2
0xd28	            0xeb49	                           jmp 0x4000db3	       359	xprepare.c	FUNCTION_8	FOR_2
0xd2a	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       360	xprepare.c	FUNCTION_8	FOR_2	IF_6
0xd2e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       360	xprepare.c	FUNCTION_8	FOR_2	IF_6
0xd32	          0x4801d0	                            add rax, rdx	       360	xprepare.c	FUNCTION_8	FOR_2	IF_6
0xd35	          0x4889c2	                            mov rdx, rax	       360	xprepare.c	FUNCTION_8	FOR_2	IF_6
0xd38	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       360	xprepare.c	FUNCTION_8	FOR_2	IF_6
0xd3c	          0x4801d0	                            add rax, rdx	       360	xprepare.c	FUNCTION_8	FOR_2	IF_6
0xd3f	           0xfb600	                   movzx eax, byte [rax]	       360	xprepare.c	FUNCTION_8	FOR_2	IF_6
0xd42	            0x84c0	                             test al, al	       360	xprepare.c	FUNCTION_8	FOR_2	IF_6
0xd44	            0x7507	                           jne 0x4000d8d	       360	xprepare.c	FUNCTION_8	FOR_2	IF_6
0xd46	      0x488345f001	               add qword [rbp - 0x10], 1	       361	xprepare.c	FUNCTION_8	FOR_2	IF_6
0xd4b	            0xeb21	                           jmp 0x4000dae	       361	xprepare.c	FUNCTION_8	FOR_2	IF_6
0xd4d	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       362	xprepare.c	FUNCTION_8	FOR_2	ELSE_3	IF_7
0xd51	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       362	xprepare.c	FUNCTION_8	FOR_2	ELSE_3	IF_7
0xd55	          0x4801d0	                            add rax, rdx	       362	xprepare.c	FUNCTION_8	FOR_2	ELSE_3	IF_7
0xd58	          0x4889c2	                            mov rdx, rax	       362	xprepare.c	FUNCTION_8	FOR_2	ELSE_3	IF_7
0xd5b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       362	xprepare.c	FUNCTION_8	FOR_2	ELSE_3	IF_7
0xd5f	          0x4801d0	                            add rax, rdx	       362	xprepare.c	FUNCTION_8	FOR_2	ELSE_3	IF_7
0xd62	           0xfb600	                   movzx eax, byte [rax]	       362	xprepare.c	FUNCTION_8	FOR_2	ELSE_3	IF_7
0xd65	            0x3c02	                               cmp al, 2	       362	xprepare.c	FUNCTION_8	FOR_2	ELSE_3	IF_7
0xd67	            0x751d	                           jne 0x4000dc6	       362	xprepare.c	FUNCTION_8	FOR_2	ELSE_3	IF_7
0xd69	      0x488345f801	                  add qword [rbp - 8], 1	       363	xprepare.c	FUNCTION_8	FOR_2	ELSE_3	IF_7
0xd6e	      0x488345d801	               add qword [rbp - 0x28], 1	       359	xprepare.c	FUNCTION_8	FOR_2
0xd73	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       359	xprepare.c	FUNCTION_8	FOR_2
0xd77	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       359	xprepare.c	FUNCTION_8	FOR_2
0xd7b	          0x4801d0	                            add rax, rdx	       359	xprepare.c	FUNCTION_8	FOR_2
0xd7e	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	       359	xprepare.c	FUNCTION_8	FOR_2
0xd82	            0x7ea6	                           jle 0x4000d6a	       359	xprepare.c	FUNCTION_8	FOR_2
0xd84	            0xeb01	                           jmp 0x4000dc7	       359	xprepare.c	FUNCTION_8	FOR_2
0xd86	              0x90	                                     nop	       365	xprepare.c	FUNCTION_8	FOR_2	ELSE_4
0xd87	      0x48837df000	               cmp qword [rbp - 0x10], 0	       371	xprepare.c	FUNCTION_8	IF_8
0xd8c	            0x7507	                           jne 0x4000dd5	       371	xprepare.c	FUNCTION_8	IF_8
0xd8e	      0xb800000000	                              mov eax, 0	       372	xprepare.c	FUNCTION_8	IF_8
0xd93	            0xeb30	                           jmp 0x4000e05	       372	xprepare.c	FUNCTION_8	IF_8
0xd95	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       373	xprepare.c	FUNCTION_8
0xd99	        0x480145f0	            add qword [rbp - 0x10], rax 	       373	xprepare.c	FUNCTION_8
0xd9d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       374	xprepare.c	FUNCTION_8
0xda1	        0x480145f8	                add qword [rbp - 8], rax	       374	xprepare.c	FUNCTION_8
0xda5	        0x488b45f8	                mov rax, qword [rbp - 8]	       376	xprepare.c	FUNCTION_8
0xda9	    0x488d0c850000	                        lea rcx, [rax*4]	       376	xprepare.c	FUNCTION_8
0xdb1	        0x488b55f8	                mov rdx, qword [rbp - 8]	       376	xprepare.c	FUNCTION_8
0xdb5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       376	xprepare.c	FUNCTION_8
0xdb9	          0x4801d0	                            add rax, rdx	       376	xprepare.c	FUNCTION_8
0xdbc	          0x4839c1	                            cmp rcx, rax	       376	xprepare.c	FUNCTION_8
0xdbf	           0xf9cc0	                                 setl al	       376	xprepare.c	FUNCTION_8
0xdc2	           0xfb6c0	                           movzx eax, al	       376	xprepare.c	FUNCTION_8
0xdc5	              0x5d	                                 pop rbp	       377	xprepare.c	FUNCTION_8
0xdc6	              0xc3	                                     ret	       377	xprepare.c	FUNCTION_8
xdl_init_classifier	FOR,0:DO,0:WHILE,0:CALL,8:ELSE,0:IF,3:functions,0:SWITCH,0	95
0x0	              0x55	                                push rbp	        71	xprepare.c	FUNCTION_1
0x1	          0x4889e5	                            mov rbp, rsp	        71	xprepare.c	FUNCTION_1
0x4	        0x4883ec20	                           sub rsp, 0x20	        71	xprepare.c	FUNCTION_1
0x8	        0x48897df8	                mov qword [rbp - 8], rdi	        71	xprepare.c	FUNCTION_1
0xc	        0x488975f0	             mov qword [rbp - 0x10], rsi	        71	xprepare.c	FUNCTION_1
0x10	        0x488955e8	             mov qword [rbp - 0x18], rdx	        71	xprepare.c	FUNCTION_1
0x14	        0x488b45f8	                mov rax, qword [rbp - 8]	        72	xprepare.c	FUNCTION_1
0x18	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        72	xprepare.c	FUNCTION_1
0x1c	        0x48895068	             mov qword [rax + 0x68], rdx	        72	xprepare.c	FUNCTION_1
0x20	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        74	xprepare.c	FUNCTION_1	CALL_1
0x24	            0x89c7	                            mov edi, eax	        74	xprepare.c	FUNCTION_1	CALL_1
0x26	      0xe800000000	                          call 0x400006b	        74	xprepare.c	FUNCTION_1	CALL_1
0x2b	            0x89c2	                            mov edx, eax	        74	xprepare.c	FUNCTION_1	CALL_1
0x2d	        0x488b45f8	                mov rax, qword [rbp - 8]	        74	xprepare.c	FUNCTION_1	CALL_1
0x31	            0x8910	                    mov dword [rax], edx	        74	xprepare.c	FUNCTION_1	CALL_1
0x33	        0x488b45f8	                mov rax, qword [rbp - 8]	        75	xprepare.c	FUNCTION_1
0x37	            0x8b00	                    mov eax, dword [rax]	        75	xprepare.c	FUNCTION_1
0x39	      0xba01000000	                              mov edx, 1	        75	xprepare.c	FUNCTION_1
0x3e	            0x89c1	                            mov ecx, eax	        75	xprepare.c	FUNCTION_1
0x40	            0xd3e2	                             shl edx, cl	        75	xprepare.c	FUNCTION_1
0x42	            0x89d0	                            mov eax, edx	        75	xprepare.c	FUNCTION_1
0x44	          0x4863d0	                         movsxd rdx, eax	        75	xprepare.c	FUNCTION_1
0x47	        0x488b45f8	                mov rax, qword [rbp - 8]	        75	xprepare.c	FUNCTION_1
0x4b	        0x48895008	                mov qword [rax + 8], rdx	        75	xprepare.c	FUNCTION_1
0x4f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        77	xprepare.c	FUNCTION_1	IF_1	CALL_2
0x53	        0x488d5003	                      lea rdx, [rax + 3]	        77	xprepare.c	FUNCTION_1	IF_1	CALL_2
0x57	          0x4885c0	                           test rax, rax	        77	xprepare.c	FUNCTION_1	IF_1	CALL_2
0x5a	        0x480f48c2	                          cmovs rax, rdx	        77	xprepare.c	FUNCTION_1	IF_1	CALL_2
0x5e	        0x48c1f802	                              sar rax, 2	        77	xprepare.c	FUNCTION_1	IF_1	CALL_2
0x62	        0x488d5001	                      lea rdx, [rax + 1]	        77	xprepare.c	FUNCTION_1	IF_1	CALL_2
0x66	        0x488b45f8	                mov rax, qword [rbp - 8]	        77	xprepare.c	FUNCTION_1	IF_1	CALL_2
0x6a	        0x4883c018	                           add rax, 0x18	        77	xprepare.c	FUNCTION_1	IF_1	CALL_2
0x6e	      0xbe38000000	                           mov esi, 0x38	        77	xprepare.c	FUNCTION_1	IF_1	CALL_2
0x73	          0x4889c7	                            mov rdi, rax	        77	xprepare.c	FUNCTION_1	IF_1	CALL_2
0x76	      0xe800000000	                          call 0x40000bb	        77	xprepare.c	FUNCTION_1	IF_1	CALL_2
0x7b	            0x85c0	                           test eax, eax	        77	xprepare.c	FUNCTION_1	IF_1	CALL_2
0x7d	            0x790a	                           jns 0x40000c9	        77	xprepare.c	FUNCTION_1	IF_1	CALL_2
0x7f	      0xb8ffffffff	                     mov eax, 0xffffffff	        79	xprepare.c	FUNCTION_1	IF_1
0x84	      0xe9db000000	                           jmp 0x40001a4	        79	xprepare.c	FUNCTION_1	IF_1
0x89	        0x488b45f8	                mov rax, qword [rbp - 8]	        81	xprepare.c	FUNCTION_1	IF_2	CALL_3
0x8d	        0x488b4008	                mov rax, qword [rax + 8]	        81	xprepare.c	FUNCTION_1	IF_2	CALL_3
0x91	        0x48c1e003	                              shl rax, 3	        81	xprepare.c	FUNCTION_1	IF_2	CALL_3
0x95	          0x4889c7	                            mov rdi, rax	        81	xprepare.c	FUNCTION_1	IF_2	CALL_3
0x98	      0xe800000000	                          call 0x40000dd	        81	xprepare.c	FUNCTION_1	IF_2	CALL_3
0x9d	          0x4889c2	                            mov rdx, rax	        81	xprepare.c	FUNCTION_1	IF_2	CALL_3
0xa0	        0x488b45f8	                mov rax, qword [rbp - 8]	        81	xprepare.c	FUNCTION_1	IF_2	CALL_3
0xa4	        0x48895010	             mov qword [rax + 0x10], rdx	        81	xprepare.c	FUNCTION_1	IF_2	CALL_3
0xa8	        0x488b45f8	                mov rax, qword [rbp - 8]	        81	xprepare.c	FUNCTION_1	IF_2	CALL_3
0xac	        0x488b4010	            mov rax, qword [rax + 0x10] 	        81	xprepare.c	FUNCTION_1	IF_2	CALL_3
0xb0	          0x4885c0	                           test rax, rax	        81	xprepare.c	FUNCTION_1	IF_2	CALL_3
0xb3	            0x751a	                           jne 0x400010f	        81	xprepare.c	FUNCTION_1	IF_2	CALL_3
0xb5	        0x488b45f8	                mov rax, qword [rbp - 8]	        83	xprepare.c	FUNCTION_1	IF_2	CALL_4
0xb9	        0x4883c018	                           add rax, 0x18	        83	xprepare.c	FUNCTION_1	IF_2	CALL_4
0xbd	          0x4889c7	                            mov rdi, rax	        83	xprepare.c	FUNCTION_1	IF_2	CALL_4
0xc0	      0xe800000000	                          call 0x4000105	        83	xprepare.c	FUNCTION_1	IF_2	CALL_4
0xc5	      0xb8ffffffff	                     mov eax, 0xffffffff	        84	xprepare.c	FUNCTION_1	IF_2
0xca	      0xe995000000	                           jmp 0x40001a4	        84	xprepare.c	FUNCTION_1	IF_2
0xcf	        0x488b45f8	                mov rax, qword [rbp - 8]	        86	xprepare.c	FUNCTION_1	CALL_5
0xd3	        0x488b4008	                mov rax, qword [rax + 8]	        86	xprepare.c	FUNCTION_1	CALL_5
0xd7	    0x488d14c50000	                        lea rdx, [rax*8]	        86	xprepare.c	FUNCTION_1	CALL_5
0xdf	        0x488b45f8	                mov rax, qword [rbp - 8]	        86	xprepare.c	FUNCTION_1	CALL_5
0xe3	        0x488b4010	            mov rax, qword [rax + 0x10] 	        86	xprepare.c	FUNCTION_1	CALL_5
0xe7	      0xbe00000000	                              mov esi, 0	        86	xprepare.c	FUNCTION_1	CALL_5
0xec	          0x4889c7	                            mov rdi, rax	        86	xprepare.c	FUNCTION_1	CALL_5
0xef	      0xe800000000	                          call 0x4000134	        86	xprepare.c	FUNCTION_1	CALL_5
0xf4	        0x488b45f8	                mov rax, qword [rbp - 8]	        88	xprepare.c	FUNCTION_1
0xf8	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        88	xprepare.c	FUNCTION_1
0xfc	        0x48895058	             mov qword [rax + 0x58], rdx	        88	xprepare.c	FUNCTION_1
0x100	        0x488b45f8	                mov rax, qword [rbp - 8]	        89	xprepare.c	FUNCTION_1	IF_3	CALL_6
0x104	        0x488b4058	            mov rax, qword [rax + 0x58] 	        89	xprepare.c	FUNCTION_1	IF_3	CALL_6
0x108	        0x48c1e003	                              shl rax, 3	        89	xprepare.c	FUNCTION_1	IF_3	CALL_6
0x10c	          0x4889c7	                            mov rdi, rax	        89	xprepare.c	FUNCTION_1	IF_3	CALL_6
0x10f	      0xe800000000	                          call 0x4000154	        89	xprepare.c	FUNCTION_1	IF_3	CALL_6
0x114	          0x4889c2	                            mov rdx, rax	        89	xprepare.c	FUNCTION_1	IF_3	CALL_6
0x117	        0x488b45f8	                mov rax, qword [rbp - 8]	        89	xprepare.c	FUNCTION_1	IF_3	CALL_6
0x11b	        0x48895050	             mov qword [rax + 0x50], rdx	        89	xprepare.c	FUNCTION_1	IF_3	CALL_6
0x11f	        0x488b45f8	                mov rax, qword [rbp - 8]	        89	xprepare.c	FUNCTION_1	IF_3	CALL_6
0x123	        0x488b4050	            mov rax, qword [rax + 0x50] 	        89	xprepare.c	FUNCTION_1	IF_3	CALL_6
0x127	          0x4885c0	                           test rax, rax	        89	xprepare.c	FUNCTION_1	IF_3	CALL_6
0x12a	            0x7527	                           jne 0x4000193	        89	xprepare.c	FUNCTION_1	IF_3	CALL_6
0x12c	        0x488b45f8	                mov rax, qword [rbp - 8]	        91	xprepare.c	FUNCTION_1	IF_3	CALL_7
0x130	        0x488b4010	            mov rax, qword [rax + 0x10] 	        91	xprepare.c	FUNCTION_1	IF_3	CALL_7
0x134	          0x4889c7	                            mov rdi, rax	        91	xprepare.c	FUNCTION_1	IF_3	CALL_7
0x137	      0xe800000000	                          call 0x400017c	        91	xprepare.c	FUNCTION_1	IF_3	CALL_7
0x13c	        0x488b45f8	                mov rax, qword [rbp - 8]	        92	xprepare.c	FUNCTION_1	IF_3	CALL_8
0x140	        0x4883c018	                           add rax, 0x18	        92	xprepare.c	FUNCTION_1	IF_3	CALL_8
0x144	          0x4889c7	                            mov rdi, rax	        92	xprepare.c	FUNCTION_1	IF_3	CALL_8
0x147	      0xe800000000	                          call 0x400018c	        92	xprepare.c	FUNCTION_1	IF_3	CALL_8
0x14c	      0xb8ffffffff	                     mov eax, 0xffffffff	        93	xprepare.c	FUNCTION_1	IF_3
0x151	            0xeb11	                           jmp 0x40001a4	        93	xprepare.c	FUNCTION_1	IF_3
0x153	        0x488b45f8	                mov rax, qword [rbp - 8]	        96	xprepare.c	FUNCTION_1
0x157	    0x48c740600000	               mov qword [rax + 0x60], 0	        96	xprepare.c	FUNCTION_1
0x15f	      0xb800000000	                              mov eax, 0	        98	xprepare.c	FUNCTION_1
0x164	              0xc9	                                   leave	        99	xprepare.c	FUNCTION_1
0x165	              0xc3	                                     ret	        99	xprepare.c	FUNCTION_1
xdl_prepare_ctx	FOR,1:DO,0:WHILE,0:CALL,22:ELSE,1:IF,12:functions,0:SWITCH,0	260
0x497	              0x55	                                push rbp	       161	xprepare.c	FUNCTION_4
0x498	          0x4889e5	                            mov rbp, rsp	       161	xprepare.c	FUNCTION_4
0x49b	    0x4881ecc00000	                           sub rsp, 0xc0	       161	xprepare.c	FUNCTION_4
0x4a2	    0x89bd6cffffff	             mov dword [rbp - 0x94], edi	       161	xprepare.c	FUNCTION_4
0x4a8	    0x4889b560ffff	             mov qword [rbp - 0xa0], rsi	       161	xprepare.c	FUNCTION_4
0x4af	    0x48899558ffff	             mov qword [rbp - 0xa8], rdx	       161	xprepare.c	FUNCTION_4
0x4b6	    0x48898d50ffff	             mov qword [rbp - 0xb0], rcx	       161	xprepare.c	FUNCTION_4
0x4bd	    0x4c898548ffff	              mov qword [rbp - 0xb8], r8	       161	xprepare.c	FUNCTION_4
0x4c4	    0x4c898d40ffff	              mov qword [rbp - 0xc0], r9	       161	xprepare.c	FUNCTION_4
0x4cb	    0x64488b042528	                mov rax, qword fs:[0x28]	       161	xprepare.c	FUNCTION_4
0x4d4	        0x488945f8	                mov qword [rbp - 8], rax	       161	xprepare.c	FUNCTION_4
0x4d8	            0x31c0	                            xor eax, eax	       161	xprepare.c	FUNCTION_4
0x4da	    0x48c745a80000	               mov qword [rbp - 0x58], 0	       173	xprepare.c	FUNCTION_4
0x4e2	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       174	xprepare.c	FUNCTION_4
0x4ea	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       175	xprepare.c	FUNCTION_4
0x4f2	    0x48c745a00000	               mov qword [rbp - 0x60], 0	       176	xprepare.c	FUNCTION_4
0x4fa	    0x48c745980000	               mov qword [rbp - 0x68], 0	       177	xprepare.c	FUNCTION_4
0x502	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       179	xprepare.c	FUNCTION_4	IF_1	CALL_1
0x509	        0x488d5003	                      lea rdx, [rax + 3]	       179	xprepare.c	FUNCTION_4	IF_1	CALL_1
0x50d	          0x4885c0	                           test rax, rax	       179	xprepare.c	FUNCTION_4	IF_1	CALL_1
0x510	        0x480f48c2	                          cmovs rax, rdx	       179	xprepare.c	FUNCTION_4	IF_1	CALL_1
0x514	        0x48c1f802	                              sar rax, 2	       179	xprepare.c	FUNCTION_4	IF_1	CALL_1
0x518	        0x488d5001	                      lea rdx, [rax + 1]	       179	xprepare.c	FUNCTION_4	IF_1	CALL_1
0x51c	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       179	xprepare.c	FUNCTION_4	IF_1	CALL_1
0x523	      0xbe20000000	                           mov esi, 0x20	       179	xprepare.c	FUNCTION_4	IF_1	CALL_1
0x528	          0x4889c7	                            mov rdi, rax	       179	xprepare.c	FUNCTION_4	IF_1	CALL_1
0x52b	      0xe800000000	                          call 0x4000570	       179	xprepare.c	FUNCTION_4	IF_1	CALL_1
0x530	            0x85c0	                           test eax, eax	       179	xprepare.c	FUNCTION_4	IF_1	CALL_1
0x532	     0xf8861030000	                            js 0x40008d9	       179	xprepare.c	FUNCTION_4	IF_1	CALL_1
0x538	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       181	xprepare.c	FUNCTION_4	IF_2	CALL_2
0x53f	        0x48c1e003	                              shl rax, 3	       181	xprepare.c	FUNCTION_4	IF_2	CALL_2
0x543	          0x4889c7	                            mov rdi, rax	       181	xprepare.c	FUNCTION_4	IF_2	CALL_2
0x546	      0xe800000000	                          call 0x400058b	       181	xprepare.c	FUNCTION_4	IF_2	CALL_2
0x54b	        0x48894598	             mov qword [rbp - 0x68], rax	       181	xprepare.c	FUNCTION_4	IF_2	CALL_2
0x54f	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       181	xprepare.c	FUNCTION_4	IF_2	CALL_2
0x554	     0xf8442030000	                            je 0x40008dc	       181	xprepare.c	FUNCTION_4	IF_2	CALL_2
0x55a	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       184	xprepare.c	FUNCTION_4	IF_3	CALL_3
0x561	          0x488b00	                    mov rax, qword [rax]	       184	xprepare.c	FUNCTION_4	IF_3	CALL_3
0x564	      0x2500c00000	                         and eax, 0xc000	       184	xprepare.c	FUNCTION_4	IF_3	CALL_3
0x569	    0x483d00800000	                         cmp rax, 0x8000	       184	xprepare.c	FUNCTION_4	IF_3	CALL_3
0x56f	            0x7514	                           jne 0x40005c5	       184	xprepare.c	FUNCTION_4	IF_3	CALL_3
0x571	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       185	xprepare.c	FUNCTION_4	IF_3
0x579	    0xc7857cffffff	               mov dword [rbp - 0x84], 0	       185	xprepare.c	FUNCTION_4	IF_3
0x583	            0xeb67	                           jmp 0x400062c	       185	xprepare.c	FUNCTION_4	IF_3
0x585	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       187	xprepare.c	FUNCTION_4	ELSE_1	CALL_4
0x58c	            0x89c7	                            mov edi, eax	       187	xprepare.c	FUNCTION_4	ELSE_1	CALL_4
0x58e	      0xe800000000	                          call 0x40005d3	       187	xprepare.c	FUNCTION_4	ELSE_1	CALL_4
0x593	    0x89857cffffff	             mov dword [rbp - 0x84], eax	       187	xprepare.c	FUNCTION_4	ELSE_1	CALL_4
0x599	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	       188	xprepare.c	FUNCTION_4	ELSE_1
0x59f	      0xba01000000	                              mov edx, 1	       188	xprepare.c	FUNCTION_4	ELSE_1
0x5a4	            0x89c1	                            mov ecx, eax	       188	xprepare.c	FUNCTION_4	ELSE_1
0x5a6	            0xd3e2	                             shl edx, cl	       188	xprepare.c	FUNCTION_4	ELSE_1
0x5a8	            0x89d0	                            mov eax, edx	       188	xprepare.c	FUNCTION_4	ELSE_1
0x5aa	            0x4898	                                    cdqe	       188	xprepare.c	FUNCTION_4	ELSE_1
0x5ac	        0x488945c0	             mov qword [rbp - 0x40], rax	       188	xprepare.c	FUNCTION_4	ELSE_1
0x5b0	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       189	xprepare.c	FUNCTION_4	ELSE_1	IF_4	CALL_5
0x5b4	        0x48c1e003	                              shl rax, 3	       189	xprepare.c	FUNCTION_4	ELSE_1	IF_4	CALL_5
0x5b8	          0x4889c7	                            mov rdi, rax	       189	xprepare.c	FUNCTION_4	ELSE_1	IF_4	CALL_5
0x5bb	      0xe800000000	                          call 0x4000600	       189	xprepare.c	FUNCTION_4	ELSE_1	IF_4	CALL_5
0x5c0	        0x488945a0	             mov qword [rbp - 0x60], rax	       189	xprepare.c	FUNCTION_4	ELSE_1	IF_4	CALL_5
0x5c4	      0x48837da000	               cmp qword [rbp - 0x60], 0	       189	xprepare.c	FUNCTION_4	ELSE_1	IF_4	CALL_5
0x5c9	     0xf84d0020000	                            je 0x40008df	       189	xprepare.c	FUNCTION_4	ELSE_1	IF_4	CALL_5
0x5cf	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       191	xprepare.c	FUNCTION_4	ELSE_1	CALL_6
0x5d3	    0x488d14c50000	                        lea rdx, [rax*8]	       191	xprepare.c	FUNCTION_4	ELSE_1	CALL_6
0x5db	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       191	xprepare.c	FUNCTION_4	ELSE_1	CALL_6
0x5df	      0xbe00000000	                              mov esi, 0	       191	xprepare.c	FUNCTION_4	ELSE_1	CALL_6
0x5e4	          0x4889c7	                            mov rdi, rax	       191	xprepare.c	FUNCTION_4	ELSE_1	CALL_6
0x5e7	      0xe800000000	                          call 0x400062c	       191	xprepare.c	FUNCTION_4	ELSE_1	CALL_6
0x5ec	    0x48c745900000	               mov qword [rbp - 0x70], 0	       194	xprepare.c	FUNCTION_4
0x5f4	        0x488d5580	                   lea rdx, [rbp - 0x80]	       195	xprepare.c	FUNCTION_4	IF_5	CALL_7
0x5f8	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       195	xprepare.c	FUNCTION_4	IF_5	CALL_7
0x5ff	          0x4889d6	                            mov rsi, rdx	       195	xprepare.c	FUNCTION_4	IF_5	CALL_7
0x602	          0x4889c7	                            mov rdi, rax	       195	xprepare.c	FUNCTION_4	IF_5	CALL_7
0x605	      0xe800000000	                          call 0x400064a	       195	xprepare.c	FUNCTION_4	IF_5	CALL_7
0x60a	        0x488945c8	             mov qword [rbp - 0x38], rax	       195	xprepare.c	FUNCTION_4	IF_5	CALL_7
0x60e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       195	xprepare.c	FUNCTION_4	IF_5	CALL_7
0x612	        0x48894588	             mov qword [rbp - 0x78], rax	       195	xprepare.c	FUNCTION_4	IF_5	CALL_7
0x616	        0x488b4588	             mov rax, qword [rbp - 0x78]	       195	xprepare.c	FUNCTION_4	IF_5	CALL_7
0x61a	          0x4885c0	                           test rax, rax	       195	xprepare.c	FUNCTION_4	IF_5	CALL_7
0x61d	     0xf844c010000	                            je 0x40007af	       195	xprepare.c	FUNCTION_4	IF_5	CALL_7
0x623	        0x488b4580	             mov rax, qword [rbp - 0x80]	       196	xprepare.c	FUNCTION_4	IF_5	FOR_1
0x627	          0x4889c2	                            mov rdx, rax	       196	xprepare.c	FUNCTION_4	IF_5	FOR_1
0x62a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       196	xprepare.c	FUNCTION_4	IF_5	FOR_1
0x62e	          0x4801d0	                            add rax, rdx	       196	xprepare.c	FUNCTION_4	IF_5	FOR_1
0x631	        0x488945d0	             mov qword [rbp - 0x30], rax	       196	xprepare.c	FUNCTION_4	IF_5	FOR_1
0x635	      0xe927010000	                           jmp 0x40007a1	       196	xprepare.c	FUNCTION_4	IF_5	FOR_1
0x63a	        0x488b4588	             mov rax, qword [rbp - 0x78]	       197	xprepare.c	FUNCTION_4	IF_5	FOR_1
0x63e	        0x488945d8	             mov qword [rbp - 0x28], rax	       197	xprepare.c	FUNCTION_4	IF_5	FOR_1
0x642	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       198	xprepare.c	FUNCTION_4	IF_5	FOR_1	CALL_8
0x649	          0x488b00	                    mov rax, qword [rax]	       198	xprepare.c	FUNCTION_4	IF_5	FOR_1	CALL_8
0x64c	          0x4889c2	                            mov rdx, rax	       198	xprepare.c	FUNCTION_4	IF_5	FOR_1	CALL_8
0x64f	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       198	xprepare.c	FUNCTION_4	IF_5	FOR_1	CALL_8
0x653	        0x488d4588	                   lea rax, [rbp - 0x78]	       198	xprepare.c	FUNCTION_4	IF_5	FOR_1	CALL_8
0x657	          0x4889ce	                            mov rsi, rcx	       198	xprepare.c	FUNCTION_4	IF_5	FOR_1	CALL_8
0x65a	          0x4889c7	                            mov rdi, rax	       198	xprepare.c	FUNCTION_4	IF_5	FOR_1	CALL_8
0x65d	      0xe800000000	                          call 0x40006a2	       198	xprepare.c	FUNCTION_4	IF_5	FOR_1	CALL_8
0x662	        0x488945e0	             mov qword [rbp - 0x20], rax	       198	xprepare.c	FUNCTION_4	IF_5	FOR_1	CALL_8
0x666	        0x488b4590	             mov rax, qword [rbp - 0x70]	       199	xprepare.c	FUNCTION_4	IF_5	FOR_1	IF_6
0x66a	    0x483b8558ffff	             cmp rax, qword [rbp - 0xa8]	       199	xprepare.c	FUNCTION_4	IF_5	FOR_1	IF_6
0x671	            0x7c3c	                            jl 0x40006ef	       199	xprepare.c	FUNCTION_4	IF_5	FOR_1	IF_6
0x673	    0x48d1a558ffff	               shl qword [rbp - 0xa8], 1	       200	xprepare.c	FUNCTION_4	IF_5	FOR_1	IF_6
0x67a	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       201	xprepare.c	FUNCTION_4	IF_5	FOR_1	IF_6	IF_7	CALL_9
0x681	    0x488d14c50000	                        lea rdx, [rax*8]	       201	xprepare.c	FUNCTION_4	IF_5	FOR_1	IF_6	IF_7	CALL_9
0x689	        0x488b4598	             mov rax, qword [rbp - 0x68]	       201	xprepare.c	FUNCTION_4	IF_5	FOR_1	IF_6	IF_7	CALL_9
0x68d	          0x4889d6	                            mov rsi, rdx	       201	xprepare.c	FUNCTION_4	IF_5	FOR_1	IF_6	IF_7	CALL_9
0x690	          0x4889c7	                            mov rdi, rax	       201	xprepare.c	FUNCTION_4	IF_5	FOR_1	IF_6	IF_7	CALL_9
0x693	      0xe800000000	                          call 0x40006d8	       201	xprepare.c	FUNCTION_4	IF_5	FOR_1	IF_6	IF_7	CALL_9
0x698	        0x488945e8	             mov qword [rbp - 0x18], rax	       201	xprepare.c	FUNCTION_4	IF_5	FOR_1	IF_6	IF_7	CALL_9
0x69c	      0x48837de800	               cmp qword [rbp - 0x18], 0	       201	xprepare.c	FUNCTION_4	IF_5	FOR_1	IF_6	IF_7	CALL_9
0x6a1	     0xf84fb010000	                            je 0x40008e2	       201	xprepare.c	FUNCTION_4	IF_5	FOR_1	IF_6	IF_7	CALL_9
0x6a7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       203	xprepare.c	FUNCTION_4	IF_5	FOR_1	IF_6
0x6ab	        0x48894598	             mov qword [rbp - 0x68], rax	       203	xprepare.c	FUNCTION_4	IF_5	FOR_1	IF_6
0x6af	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       205	xprepare.c	FUNCTION_4	IF_5	FOR_1	IF_8	CALL_10
0x6b6	          0x4889c7	                            mov rdi, rax	       205	xprepare.c	FUNCTION_4	IF_5	FOR_1	IF_8	CALL_10
0x6b9	      0xe800000000	                          call 0x40006fe	       205	xprepare.c	FUNCTION_4	IF_5	FOR_1	IF_8	CALL_10
0x6be	        0x488945f0	             mov qword [rbp - 0x10], rax	       205	xprepare.c	FUNCTION_4	IF_5	FOR_1	IF_8	CALL_10
0x6c2	      0x48837df000	               cmp qword [rbp - 0x10], 0	       205	xprepare.c	FUNCTION_4	IF_5	FOR_1	IF_8	CALL_10
0x6c7	     0xf84d8010000	                            je 0x40008e5	       205	xprepare.c	FUNCTION_4	IF_5	FOR_1	IF_8	CALL_10
0x6cd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       207	xprepare.c	FUNCTION_4	IF_5	FOR_1
0x6d1	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       207	xprepare.c	FUNCTION_4	IF_5	FOR_1
0x6d5	        0x48895008	                mov qword [rax + 8], rdx	       207	xprepare.c	FUNCTION_4	IF_5	FOR_1
0x6d9	        0x488b4588	             mov rax, qword [rbp - 0x78]	       208	xprepare.c	FUNCTION_4	IF_5	FOR_1
0x6dd	          0x4889c2	                            mov rdx, rax	       208	xprepare.c	FUNCTION_4	IF_5	FOR_1
0x6e0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       208	xprepare.c	FUNCTION_4	IF_5	FOR_1
0x6e4	          0x4829c2	                            sub rdx, rax	       208	xprepare.c	FUNCTION_4	IF_5	FOR_1
0x6e7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       208	xprepare.c	FUNCTION_4	IF_5	FOR_1
0x6eb	        0x48895010	             mov qword [rax + 0x10], rdx	       208	xprepare.c	FUNCTION_4	IF_5	FOR_1
0x6ef	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       209	xprepare.c	FUNCTION_4	IF_5	FOR_1
0x6f3	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       209	xprepare.c	FUNCTION_4	IF_5	FOR_1
0x6f7	        0x48895018	             mov qword [rax + 0x18], rdx	       209	xprepare.c	FUNCTION_4	IF_5	FOR_1
0x6fb	        0x488b4590	             mov rax, qword [rbp - 0x70]	       210	xprepare.c	FUNCTION_4	IF_5	FOR_1
0x6ff	        0x488d5001	                      lea rdx, [rax + 1]	       210	xprepare.c	FUNCTION_4	IF_5	FOR_1
0x703	        0x48895590	             mov qword [rbp - 0x70], rdx	       210	xprepare.c	FUNCTION_4	IF_5	FOR_1
0x707	    0x488d14c50000	                        lea rdx, [rax*8]	       210	xprepare.c	FUNCTION_4	IF_5	FOR_1
0x70f	        0x488b4598	             mov rax, qword [rbp - 0x68]	       210	xprepare.c	FUNCTION_4	IF_5	FOR_1
0x713	          0x4801c2	                            add rdx, rax	       210	xprepare.c	FUNCTION_4	IF_5	FOR_1
0x716	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       210	xprepare.c	FUNCTION_4	IF_5	FOR_1
0x71a	          0x488902	                    mov qword [rdx], rax	       210	xprepare.c	FUNCTION_4	IF_5	FOR_1
0x71d	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       212	xprepare.c	FUNCTION_4	IF_5	FOR_1	IF_9	CALL_11
0x724	          0x488b00	                    mov rax, qword [rax]	       212	xprepare.c	FUNCTION_4	IF_5	FOR_1	IF_9	CALL_11
0x727	      0x2500c00000	                         and eax, 0xc000	       212	xprepare.c	FUNCTION_4	IF_5	FOR_1	IF_9	CALL_11
0x72c	    0x483d00800000	                         cmp rax, 0x8000	       212	xprepare.c	FUNCTION_4	IF_5	FOR_1	IF_9	CALL_11
0x732	            0x742d	                            je 0x40007a1	       212	xprepare.c	FUNCTION_4	IF_5	FOR_1	IF_9	CALL_11
0x734	        0x488b7df0	             mov rdi, qword [rbp - 0x10]	       213	xprepare.c	FUNCTION_4	IF_5	FOR_1	IF_9	CALL_12
0x738	    0x8b8d7cffffff	             mov ecx, dword [rbp - 0x84]	       213	xprepare.c	FUNCTION_4	IF_5	FOR_1	IF_9	CALL_12
0x73e	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       213	xprepare.c	FUNCTION_4	IF_5	FOR_1	IF_9	CALL_12
0x742	    0x488bb548ffff	             mov rsi, qword [rbp - 0xb8]	       213	xprepare.c	FUNCTION_4	IF_5	FOR_1	IF_9	CALL_12
0x749	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	       213	xprepare.c	FUNCTION_4	IF_5	FOR_1	IF_9	CALL_12
0x74f	          0x4989f8	                             mov r8, rdi	       213	xprepare.c	FUNCTION_4	IF_5	FOR_1	IF_9	CALL_12
0x752	            0x89c7	                            mov edi, eax	       213	xprepare.c	FUNCTION_4	IF_5	FOR_1	IF_9	CALL_12
0x754	      0xe84cfaffff	            call sym.xdl_classify_record	       213	xprepare.c	FUNCTION_4	IF_5	FOR_1	IF_9	CALL_12
0x759	            0x85c0	                           test eax, eax	       212	xprepare.c	FUNCTION_4	IF_5	FOR_1	IF_9	CALL_11
0x75b	     0xf8847010000	                            js 0x40008e8	       212	xprepare.c	FUNCTION_4	IF_5	FOR_1	IF_9	CALL_11
0x761	        0x488b4588	             mov rax, qword [rbp - 0x78]	       196	xprepare.c	FUNCTION_4	IF_5	FOR_1
0x765	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	       196	xprepare.c	FUNCTION_4	IF_5	FOR_1
0x769	     0xf82cbfeffff	                            jb 0x400067a	       196	xprepare.c	FUNCTION_4	IF_5	FOR_1
0x76f	        0x488b4590	             mov rax, qword [rbp - 0x70]	       218	xprepare.c	FUNCTION_4	IF_10	CALL_13
0x773	        0x4883c002	                              add rax, 2	       218	xprepare.c	FUNCTION_4	IF_10	CALL_13
0x777	          0x4889c7	                            mov rdi, rax	       218	xprepare.c	FUNCTION_4	IF_10	CALL_13
0x77a	      0xe800000000	                          call 0x40007bf	       218	xprepare.c	FUNCTION_4	IF_10	CALL_13
0x77f	        0x488945b0	             mov qword [rbp - 0x50], rax	       218	xprepare.c	FUNCTION_4	IF_10	CALL_13
0x783	      0x48837db000	               cmp qword [rbp - 0x50], 0	       218	xprepare.c	FUNCTION_4	IF_10	CALL_13
0x788	     0xf841d010000	                            je 0x40008eb	       218	xprepare.c	FUNCTION_4	IF_10	CALL_13
0x78e	        0x488b4590	             mov rax, qword [rbp - 0x70]	       220	xprepare.c	FUNCTION_4	CALL_14
0x792	        0x4883c002	                              add rax, 2	       220	xprepare.c	FUNCTION_4	CALL_14
0x796	          0x4889c2	                            mov rdx, rax	       220	xprepare.c	FUNCTION_4	CALL_14
0x799	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       220	xprepare.c	FUNCTION_4	CALL_14
0x79d	      0xbe00000000	                              mov esi, 0	       220	xprepare.c	FUNCTION_4	CALL_14
0x7a2	          0x4889c7	                            mov rdi, rax	       220	xprepare.c	FUNCTION_4	CALL_14
0x7a5	      0xe800000000	                          call 0x40007ea	       220	xprepare.c	FUNCTION_4	CALL_14
0x7aa	        0x488b4590	             mov rax, qword [rbp - 0x70]	       222	xprepare.c	FUNCTION_4	IF_11	CALL_15
0x7ae	        0x4883c001	                              add rax, 1	       222	xprepare.c	FUNCTION_4	IF_11	CALL_15
0x7b2	        0x48c1e003	                              shl rax, 3	       222	xprepare.c	FUNCTION_4	IF_11	CALL_15
0x7b6	          0x4889c7	                            mov rdi, rax	       222	xprepare.c	FUNCTION_4	IF_11	CALL_15
0x7b9	      0xe800000000	                          call 0x40007fe	       222	xprepare.c	FUNCTION_4	IF_11	CALL_15
0x7be	        0x488945b8	             mov qword [rbp - 0x48], rax	       222	xprepare.c	FUNCTION_4	IF_11	CALL_15
0x7c2	      0x48837db800	               cmp qword [rbp - 0x48], 0	       222	xprepare.c	FUNCTION_4	IF_11	CALL_15
0x7c7	     0xf84e1000000	                            je 0x40008ee	       222	xprepare.c	FUNCTION_4	IF_11	CALL_15
0x7cd	        0x488b4590	             mov rax, qword [rbp - 0x70]	       224	xprepare.c	FUNCTION_4	IF_12	CALL_16
0x7d1	        0x4883c001	                              add rax, 1	       224	xprepare.c	FUNCTION_4	IF_12	CALL_16
0x7d5	        0x48c1e003	                              shl rax, 3	       224	xprepare.c	FUNCTION_4	IF_12	CALL_16
0x7d9	          0x4889c7	                            mov rdi, rax	       224	xprepare.c	FUNCTION_4	IF_12	CALL_16
0x7dc	      0xe800000000	                          call 0x4000821	       224	xprepare.c	FUNCTION_4	IF_12	CALL_16
0x7e1	        0x488945a8	             mov qword [rbp - 0x58], rax	       224	xprepare.c	FUNCTION_4	IF_12	CALL_16
0x7e5	      0x48837da800	               cmp qword [rbp - 0x58], 0	       224	xprepare.c	FUNCTION_4	IF_12	CALL_16
0x7ea	     0xf84c1000000	                            je 0x40008f1	       224	xprepare.c	FUNCTION_4	IF_12	CALL_16
0x7f0	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       227	xprepare.c	FUNCTION_4
0x7f7	        0x488b5590	             mov rdx, qword [rbp - 0x70]	       227	xprepare.c	FUNCTION_4
0x7fb	        0x48895038	             mov qword [rax + 0x38], rdx	       227	xprepare.c	FUNCTION_4
0x7ff	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       228	xprepare.c	FUNCTION_4
0x806	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       228	xprepare.c	FUNCTION_4
0x80a	        0x48895060	             mov qword [rax + 0x60], rdx	       228	xprepare.c	FUNCTION_4
0x80e	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       229	xprepare.c	FUNCTION_4
0x815	    0x8b957cffffff	             mov edx, dword [rbp - 0x84]	       229	xprepare.c	FUNCTION_4
0x81b	          0x895040	             mov dword [rax + 0x40], edx	       229	xprepare.c	FUNCTION_4
0x81e	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       230	xprepare.c	FUNCTION_4
0x825	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       230	xprepare.c	FUNCTION_4
0x829	        0x48895048	             mov qword [rax + 0x48], rdx	       230	xprepare.c	FUNCTION_4
0x82d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       231	xprepare.c	FUNCTION_4
0x831	        0x488d5001	                      lea rdx, [rax + 1]	       231	xprepare.c	FUNCTION_4
0x835	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       231	xprepare.c	FUNCTION_4
0x83c	        0x48895068	             mov qword [rax + 0x68], rdx	       231	xprepare.c	FUNCTION_4
0x840	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       232	xprepare.c	FUNCTION_4
0x847	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       232	xprepare.c	FUNCTION_4
0x84b	        0x48895070	             mov qword [rax + 0x70], rdx	       232	xprepare.c	FUNCTION_4
0x84f	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       233	xprepare.c	FUNCTION_4
0x856	    0x48c740780000	               mov qword [rax + 0x78], 0	       233	xprepare.c	FUNCTION_4
0x85e	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       234	xprepare.c	FUNCTION_4
0x865	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       234	xprepare.c	FUNCTION_4
0x869	    0x488990800000	             mov qword [rax + 0x80], rdx	       234	xprepare.c	FUNCTION_4
0x870	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       235	xprepare.c	FUNCTION_4
0x877	    0x48c740500000	               mov qword [rax + 0x50], 0	       235	xprepare.c	FUNCTION_4
0x87f	        0x488b4590	             mov rax, qword [rbp - 0x70]	       236	xprepare.c	FUNCTION_4
0x883	        0x488d50ff	                      lea rdx, [rax - 1]	       236	xprepare.c	FUNCTION_4
0x887	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       236	xprepare.c	FUNCTION_4
0x88e	        0x48895058	             mov qword [rax + 0x58], rdx	       236	xprepare.c	FUNCTION_4
0x892	      0xb800000000	                              mov eax, 0	       238	xprepare.c	FUNCTION_4
0x897	            0xeb69	                           jmp 0x4000942	       238	xprepare.c	FUNCTION_4
0x899	              0x90	                                     nop	       180	xprepare.c	FUNCTION_4	IF_1
0x89a	            0xeb16	                           jmp 0x40008f2	       180	xprepare.c	FUNCTION_4	IF_1
0x89c	              0x90	                                     nop	       182	xprepare.c	FUNCTION_4	IF_2
0x89d	            0xeb13	                           jmp 0x40008f2	       182	xprepare.c	FUNCTION_4	IF_2
0x89f	              0x90	                                     nop	       190	xprepare.c	FUNCTION_4	ELSE_1	IF_4
0x8a0	            0xeb10	                           jmp 0x40008f2	       190	xprepare.c	FUNCTION_4	ELSE_1	IF_4
0x8a2	              0x90	                                     nop	       202	xprepare.c	FUNCTION_4	IF_5	FOR_1	IF_6	IF_7
0x8a3	            0xeb0d	                           jmp 0x40008f2	       202	xprepare.c	FUNCTION_4	IF_5	FOR_1	IF_6	IF_7
0x8a5	              0x90	                                     nop	       206	xprepare.c	FUNCTION_4	IF_5	FOR_1	IF_8
0x8a6	            0xeb0a	                           jmp 0x40008f2	       206	xprepare.c	FUNCTION_4	IF_5	FOR_1	IF_8
0x8a8	              0x90	                                     nop	       214	xprepare.c	FUNCTION_4	IF_5	FOR_1	IF_9
0x8a9	            0xeb07	                           jmp 0x40008f2	       214	xprepare.c	FUNCTION_4	IF_5	FOR_1	IF_9
0x8ab	              0x90	                                     nop	       219	xprepare.c	FUNCTION_4	IF_10
0x8ac	            0xeb04	                           jmp 0x40008f2	       219	xprepare.c	FUNCTION_4	IF_10
0x8ae	              0x90	                                     nop	       223	xprepare.c	FUNCTION_4	IF_11
0x8af	            0xeb01	                           jmp 0x40008f2	       223	xprepare.c	FUNCTION_4	IF_11
0x8b1	              0x90	                                     nop	       225	xprepare.c	FUNCTION_4	IF_12
0x8b2	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       241	xprepare.c	FUNCTION_4	CALL_17
0x8b6	          0x4889c7	                            mov rdi, rax	       241	xprepare.c	FUNCTION_4	CALL_17
0x8b9	      0xe800000000	                          call 0x40008fe	       241	xprepare.c	FUNCTION_4	CALL_17
0x8be	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       242	xprepare.c	FUNCTION_4	CALL_18
0x8c2	          0x4889c7	                            mov rdi, rax	       242	xprepare.c	FUNCTION_4	CALL_18
0x8c5	      0xe800000000	                          call 0x400090a	       242	xprepare.c	FUNCTION_4	CALL_18
0x8ca	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       243	xprepare.c	FUNCTION_4	CALL_19
0x8ce	          0x4889c7	                            mov rdi, rax	       243	xprepare.c	FUNCTION_4	CALL_19
0x8d1	      0xe800000000	                          call 0x4000916	       243	xprepare.c	FUNCTION_4	CALL_19
0x8d6	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       244	xprepare.c	FUNCTION_4	CALL_20
0x8da	          0x4889c7	                            mov rdi, rax	       244	xprepare.c	FUNCTION_4	CALL_20
0x8dd	      0xe800000000	                          call 0x4000922	       244	xprepare.c	FUNCTION_4	CALL_20
0x8e2	        0x488b4598	             mov rax, qword [rbp - 0x68]	       245	xprepare.c	FUNCTION_4	CALL_21
0x8e6	          0x4889c7	                            mov rdi, rax	       245	xprepare.c	FUNCTION_4	CALL_21
0x8e9	      0xe800000000	                          call 0x400092e	       245	xprepare.c	FUNCTION_4	CALL_21
0x8ee	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       246	xprepare.c	FUNCTION_4	CALL_22
0x8f5	          0x4889c7	                            mov rdi, rax	       246	xprepare.c	FUNCTION_4	CALL_22
0x8f8	      0xe800000000	                          call 0x400093d	       246	xprepare.c	FUNCTION_4	CALL_22
0x8fd	      0xb8ffffffff	                     mov eax, 0xffffffff	       247	xprepare.c	FUNCTION_4
0x902	        0x488b4df8	                mov rcx, qword [rbp - 8]	       248	xprepare.c	FUNCTION_4
0x906	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       248	xprepare.c	FUNCTION_4
0x90f	            0x7405	                            je 0x4000956	       248	xprepare.c	FUNCTION_4
0x911	      0xe800000000	                          call 0x4000956	       248	xprepare.c	FUNCTION_4
0x916	              0xc9	                                   leave	       248	xprepare.c	FUNCTION_4
0x917	              0xc3	                                     ret	       248	xprepare.c	FUNCTION_4
xdl_optimize_ctxs	FOR,0:DO,0:WHILE,0:CALL,2:ELSE,0:IF,1:functions,0:SWITCH,0	26
0x136a	              0x55	                                push rbp	       474	xprepare.c	FUNCTION_11
0x136b	          0x4889e5	                            mov rbp, rsp	       474	xprepare.c	FUNCTION_11
0x136e	        0x4883ec20	                           sub rsp, 0x20	       474	xprepare.c	FUNCTION_11
0x1372	        0x48897df8	                mov qword [rbp - 8], rdi	       474	xprepare.c	FUNCTION_11
0x1376	        0x488975f0	             mov qword [rbp - 0x10], rsi	       474	xprepare.c	FUNCTION_11
0x137a	        0x488955e8	             mov qword [rbp - 0x18], rdx	       474	xprepare.c	FUNCTION_11
0x137e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       476	xprepare.c	FUNCTION_11	IF_1	CALL_1
0x1382	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       476	xprepare.c	FUNCTION_11	IF_1	CALL_1
0x1386	          0x4889d6	                            mov rsi, rdx	       476	xprepare.c	FUNCTION_11	IF_1	CALL_1
0x1389	          0x4889c7	                            mov rdi, rax	       476	xprepare.c	FUNCTION_11	IF_1	CALL_1
0x138c	      0xe87ffeffff	                  call sym.xdl_trim_ends	       476	xprepare.c	FUNCTION_11	IF_1	CALL_1
0x1391	            0x85c0	                           test eax, eax	       476	xprepare.c	FUNCTION_11	IF_1	CALL_1
0x1393	            0x781b	                            js 0x40013f0	       476	xprepare.c	FUNCTION_11	IF_1	CALL_1
0x1395	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       477	xprepare.c	FUNCTION_11	IF_1	CALL_2
0x1399	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       477	xprepare.c	FUNCTION_11	IF_1	CALL_2
0x139d	        0x488b45f8	                mov rax, qword [rbp - 8]	       477	xprepare.c	FUNCTION_11	IF_1	CALL_2
0x13a1	          0x4889ce	                            mov rsi, rcx	       477	xprepare.c	FUNCTION_11	IF_1	CALL_2
0x13a4	          0x4889c7	                            mov rdi, rax	       477	xprepare.c	FUNCTION_11	IF_1	CALL_2
0x13a7	      0xe81bfaffff	            call sym.xdl_cleanup_records	       477	xprepare.c	FUNCTION_11	IF_1	CALL_2
0x13ac	            0x85c0	                           test eax, eax	       476	xprepare.c	FUNCTION_11	IF_1	CALL_1
0x13ae	            0x7907	                           jns 0x40013f7	       476	xprepare.c	FUNCTION_11	IF_1	CALL_1
0x13b0	      0xb8ffffffff	                     mov eax, 0xffffffff	       479	xprepare.c	FUNCTION_11	IF_1
0x13b5	            0xeb05	                           jmp 0x40013fc	       479	xprepare.c	FUNCTION_11	IF_1
0x13b7	      0xb800000000	                              mov eax, 0	       482	xprepare.c	FUNCTION_11
0x13bc	              0xc9	                                   leave	       483	xprepare.c	FUNCTION_11
0x13bd	              0xc3	                                     ret	       483	xprepare.c	FUNCTION_11
