gui_write	WHILE,2:SWITCH,1:CALL,31:ELSE,12:DO,0:IF,21:FOR,1:functions,0	475
0x4003990	            0x4157	                                push r15	      1765	gui.c	FUNCTION_30
0x4003992	            0x4156	                                push r14	      1765	gui.c	FUNCTION_30
0x4003994	            0x4155	                                push r13	      1765	gui.c	FUNCTION_30
0x4003996	            0x4154	                                push r12	      1765	gui.c	FUNCTION_30
0x4003998	              0x55	                                push rbp	      1765	gui.c	FUNCTION_30
0x4003999	              0x53	                                push rbx	      1765	gui.c	FUNCTION_30
0x400399a	        0x4883ec28	                           sub rsp, 0x28	      1765	gui.c	FUNCTION_30
0x400399e	    0x64488b042528	                mov rax, qword fs:[0x28]	      1765	gui.c	FUNCTION_30
0x40039a7	      0x4889442418	             mov qword [rsp + 0x18], rax	      1765	gui.c	FUNCTION_30
0x40039ac	            0x31c0	                            xor eax, eax	      1765	gui.c	FUNCTION_30
0x40039ae	            0x85f6	                           test esi, esi	      1797	gui.c	FUNCTION_30	WHILE_1
0x40039b0	     0xf84cf070000	                            je 0x4004185	      1797	gui.c	FUNCTION_30	WHILE_1
0x40039b6	          0x4989fd	                            mov r13, rdi	      1797	gui.c	FUNCTION_30	WHILE_1
0x40039b9	          0x4189f6	                           mov r14d, esi	      1797	gui.c	FUNCTION_30	WHILE_1
0x40039bc	    0xc74424040000	                  mov dword [rsp + 4], 0	      1797	gui.c	FUNCTION_30	WHILE_1
0x40039c4	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      1797	gui.c	FUNCTION_30	WHILE_1
0x40039cc	    0xc74424080000	                  mov dword [rsp + 8], 0	      1797	gui.c	FUNCTION_30	WHILE_1
0x40039d4	    0xc70424000000	                      mov dword [rsp], 0	      1797	gui.c	FUNCTION_30	WHILE_1
0x40039db	       0xf1f440000	                   nop dword [rax + rax]	      1797	gui.c	FUNCTION_30	WHILE_1
0x40039e0	      0x410fb64500	                   movzx eax, byte [r13]	      1797	gui.c	FUNCTION_30	WHILE_1
0x40039e5	            0x3c1b	                            cmp al, 0x1b	      1799	gui.c	FUNCTION_30	WHILE_1	IF_4
0x40039e7	     0xf8473020000	                            je 0x4003c60	      1799	gui.c	FUNCTION_30	WHILE_1	IF_4
0x40039ed	          0x8d50ff	                      lea edx, [rax - 1]	      1894	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x40039f0	          0x80fa01	                               cmp dl, 1	      1894	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x40039f3	            0x763b	                           jbe 0x4003a30	      1894	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x40039f5	            0x3c1f	                            cmp al, 0x1f	      1894	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x40039f7	            0x7737	                            ja 0x4003a30	      1894	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x40039f9	            0x3c0a	                             cmp al, 0xa	      1899	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12
0x40039fb	     0xf8497020000	                            je 0x4003c98	      1899	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12
0x4003a01	            0x3c0d	                             cmp al, 0xd	      1907	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_7	IF_14
0x4003a03	     0xf84e9020000	                            je 0x4003cf2	      1907	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_7	IF_14
0x4003a09	            0x3c08	                               cmp al, 8	      1911	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_8	IF_15
0x4003a0b	     0xf85ae070000	                           jne 0x40041bf	      1911	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_8	IF_15
0x4003a11	    0x8b0500000000	            mov eax, dword [0x04003a17] 	      1913	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_8	IF_15	IF_16
0x4003a17	            0x85c0	                           test eax, eax	      1913	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_8	IF_15	IF_16
0x4003a19	     0xf8448020000	                            je 0x4003c67	      1913	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_8	IF_15	IF_16
0x4003a1f	          0x83e801	                              sub eax, 1	      1914	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_8	IF_15	IF_16
0x4003a22	    0x890500000000	            mov dword [0x04003a28], eax 	      1914	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_8	IF_15	IF_16
0x4003a28	      0xe93a020000	                           jmp 0x4003c67	      1914	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_8	IF_15	IF_16
0x4003a2d	           0xf1f00	                         nop dword [rax]	      1914	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_8	IF_15	IF_16
0x4003a30	          0x4585f6	                         test r14d, r14d	      1932	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x4003a33	      0x4c896c2410	             mov qword [rsp + 0x10], r13	      1931	gui.c	FUNCTION_30	WHILE_1	ELSE_11
0x4003a38	            0x7ea6	                           jle 0x40039e0	      1932	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x4003a3a	      0x410fb64500	                   movzx eax, byte [r13]	      1936	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x4003a3f	          0x8d50ff	                      lea edx, [rax - 1]	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x4003a42	          0x80fa01	                               cmp dl, 1	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x4003a45	            0x7604	                           jbe 0x4003a4b	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x4003a47	            0x3c1f	                            cmp al, 0x1f	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x4003a49	            0x769a	                           jbe 0x40039e5	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x4003a4b	        0x498d5d01	                      lea rbx, [r13 + 1]	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x4003a4f	            0xeb1d	                           jmp 0x4003a6e	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x4003a51	     0xf1f80000000	                         nop dword [rax]	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x4003a58	           0xfb603	                   movzx eax, byte [rbx]	      1936	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x4003a5b	        0x488d4b01	                      lea rcx, [rbx + 1]	      1936	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x4003a5f	          0x8d50ff	                      lea edx, [rax - 1]	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x4003a62	          0x80fa01	                               cmp dl, 1	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x4003a65	            0x7604	                           jbe 0x4003a6b	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x4003a67	            0x3c1f	                            cmp al, 0x1f	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x4003a69	            0x760e	                           jbe 0x4003a79	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x4003a6b	          0x4889cb	                            mov rbx, rcx	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x4003a6e	        0x4183ee01	                             sub r14d, 1	      1932	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x4003a72	      0x48895c2410	             mov qword [rsp + 0x10], rbx	      1947	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x4003a77	            0x75df	                           jne 0x4003a58	      1932	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x4003a79	          0x4189dc	                           mov r12d, ebx	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x4003a7c	          0x4529ec	                          sub r12d, r13d	      1941	gui.c	FUNCTION_30	WHILE_1	ELSE_11	WHILE_2
0x4003a7f	          0x4585e4	                         test r12d, r12d	      2046	gui.c	FUNCTION_36	IF_1
0x4003a82	     0xf8408020000	                            je 0x4003c90	      2046	gui.c	FUNCTION_36	IF_1
0x4003a88	     0xf88e6010000	                            js 0x4003c74	      2049	gui.c	FUNCTION_36	IF_2
0x4003a8e	    0x8b2d00000000	            mov ebp, dword [0x04003a94] 	      2055	gui.c	FUNCTION_36	WHILE_1	IF_3
0x4003a94	            0x85ed	                           test ebp, ebp	      2055	gui.c	FUNCTION_36	WHILE_1	IF_3
0x4003a96	     0xf848c000000	                            je 0x4003b28	      2055	gui.c	FUNCTION_36	WHILE_1	IF_3
0x4003a9c	            0x31ed	                            xor ebp, ebp	      2055	gui.c	FUNCTION_36	WHILE_1	IF_3
0x4003a9e	            0x31db	                            xor ebx, ebx	      2055	gui.c	FUNCTION_36	WHILE_1	IF_3
0x4003aa0	          0x4863d3	                         movsxd rdx, ebx	      2061	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x4003aa3	      0x4d8d7c1500	                    lea r15, [r13 + rdx]	      2061	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x4003aa8	          0x4c89ff	                            mov rdi, r15	      2061	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x4003aab	    0xff1500000000	                 call qword [0x04003ab1]	      2061	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x4003ab1	             0x1c5	                            add ebp, eax	      2061	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x4003ab3	    0x8b0500000000	            mov eax, dword [0x04003ab9] 	      2062	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1	IF_4
0x4003ab9	             0x1e8	                            add eax, ebp	      2062	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1	IF_4
0x4003abb	            0x4898	                                    cdqe	      2062	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1	IF_4
0x4003abd	    0x483b05000000	            cmp rax, qword [0x04003ac4] 	      2062	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1	IF_4
0x4003ac4	            0x7f10	                            jg 0x4003ad6	      2062	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1	IF_4
0x4003ac6	          0x4c89ff	                            mov rdi, r15	      2064	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x4003ac9	    0xff1500000000	                 call qword [0x04003acf]	      2064	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x4003acf	             0x1c3	                            add ebx, eax	      2064	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x4003ad1	          0x4439e3	                           cmp ebx, r12d	      2059	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x4003ad4	            0x7cca	                            jl 0x4003aa0	      2059	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x4003ad6	          0x4439e3	                           cmp ebx, r12d	      2059	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x4003ad9	        0x410f4fdc	                         cmovg ebx, r12d	      2059	gui.c	FUNCTION_36	WHILE_1	IF_3	FOR_1
0x4003add	          0x4c89ef	                            mov rdi, r13	      2076	gui.c	FUNCTION_36	WHILE_1	CALL_2
0x4003ae0	            0x89de	                            mov esi, ebx	      2076	gui.c	FUNCTION_36	WHILE_1	CALL_2
0x4003ae2	          0x4129dc	                           sub r12d, ebx	      2079	gui.c	FUNCTION_36	WHILE_1
0x4003ae5	      0xe816c7ffff	 call sym.gui_outstr_nowrap.constprop.21	      2076	gui.c	FUNCTION_36	WHILE_1	CALL_2
0x4003aea	          0x4863c3	                         movsxd rax, ebx	      2078	gui.c	FUNCTION_36	WHILE_1
0x4003aed	          0x4901c5	                            add r13, rax	      2078	gui.c	FUNCTION_36	WHILE_1
0x4003af0	          0x4585e4	                         test r12d, r12d	      2082	gui.c	FUNCTION_36	WHILE_1	IF_7
0x4003af3	            0x7e5e	                           jle 0x4003b53	      2082	gui.c	FUNCTION_36	WHILE_1	IF_7
0x4003af5	    0x486305000000	         movsxd rax, dword [0x04003afc] 	      2082	gui.c	FUNCTION_36	WHILE_1	IF_7
0x4003afc	    0x483b05000000	            cmp rax, qword [0x04003b03] 	      2082	gui.c	FUNCTION_36	WHILE_1	IF_7
0x4003b03	     0xf8c27010000	                            jl 0x4003c30	      2082	gui.c	FUNCTION_36	WHILE_1	IF_7
0x4003b09	    0x8b2d00000000	            mov ebp, dword [0x04003b0f] 	      2055	gui.c	FUNCTION_36	WHILE_1	IF_3
0x4003b0f	    0x830500000000	               add dword [0x04003b16], 1	      2090	gui.c	FUNCTION_36	WHILE_1	IF_8
0x4003b16	    0xc70500000000	               mov dword [0x04003b20], 0	      2089	gui.c	FUNCTION_36	WHILE_1	IF_8
0x4003b20	            0x85ed	                           test ebp, ebp	      2055	gui.c	FUNCTION_36	WHILE_1	IF_3
0x4003b22	     0xf8574ffffff	                           jne 0x4003a9c	      2055	gui.c	FUNCTION_36	WHILE_1	IF_3
0x4003b28	    0x8b1500000000	            mov edx, dword [0x04003b2e] 	      2071	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x4003b2e	    0x488b1d000000	            mov rbx, qword [0x04003b35] 	      2071	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x4003b35	        0x428d0422	                    lea eax, [rdx + r12]	      2071	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x4003b39	            0x4898	                                    cdqe	      2071	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x4003b3b	          0x4839d8	                            cmp rax, rbx	      2071	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x4003b3e	            0x7e08	                           jle 0x4003b48	      2071	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x4003b40	            0x29d3	                            sub ebx, edx	      2072	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x4003b42	            0xeb99	                           jmp 0x4003add	      2072	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x4003b44	         0xf1f4000	                         nop dword [rax]	      2072	gui.c	FUNCTION_36	WHILE_1	ELSE_1	IF_6
0x4003b48	          0x4489e6	                           mov esi, r12d	      2076	gui.c	FUNCTION_36	WHILE_1	CALL_2
0x4003b4b	          0x4c89ef	                            mov rdi, r13	      2076	gui.c	FUNCTION_36	WHILE_1	CALL_2
0x4003b4e	      0xe8adc6ffff	 call sym.gui_outstr_nowrap.constprop.21	      2076	gui.c	FUNCTION_36	WHILE_1	CALL_2
0x4003b53	    0x486305000000	         movsxd rax, dword [0x04003b5a] 	      2087	gui.c	FUNCTION_36	WHILE_1	IF_8
0x4003b5a	    0x483905000000	            cmp qword [0x04003b61], rax 	      2087	gui.c	FUNCTION_36	WHILE_1	IF_8
0x4003b61	     0xf8e42060000	                           jle 0x40041a9	      2087	gui.c	FUNCTION_36	WHILE_1	IF_8
0x4003b67	      0x4c8b6c2410	            mov r13, qword [rsp + 0x10] 	      2087	gui.c	FUNCTION_36	WHILE_1	IF_8
0x4003b6c	          0x4585f6	                         test r14d, r14d	      1797	gui.c	FUNCTION_30	WHILE_1
0x4003b6f	     0xf856bfeffff	                           jne 0x40039e0	      1797	gui.c	FUNCTION_30	WHILE_1
0x4003b75	        0x8b5c240c	              mov ebx, dword [rsp + 0xc]	      1956	gui.c	FUNCTION_30	IF_19
0x4003b79	            0x85db	                           test ebx, ebx	      1956	gui.c	FUNCTION_30	IF_19
0x4003b7b	     0xf85b9040000	                           jne 0x400403a	      1956	gui.c	FUNCTION_30	IF_19
0x4003b81	    0x488b05000000	            mov rax, qword [0x04003b88] 	      1961	gui.c	FUNCTION_30	IF_20
0x4003b88	    0x488b15000000	            mov rdx, qword [0x04003b8f] 	      1961	gui.c	FUNCTION_30	IF_20
0x4003b8f	          0x4839d0	                            cmp rax, rdx	      1961	gui.c	FUNCTION_30	IF_20
0x4003b92	     0xf8448050000	                            je 0x40040e0	      1961	gui.c	FUNCTION_30	IF_20
0x4003b98	    0xc70500000000	     mov dword [0x04003ba2], 0xffffffff 	      1962	gui.c	FUNCTION_30	IF_20
0x4003ba2	    0x448b15000000	           mov r10d, dword [0x04003ba9] 	      4607	gui.c	ELSE_2	FUNCTION_70	IF_1
0x4003ba9	          0x4585d2	                         test r10d, r10d	      4607	gui.c	ELSE_2	FUNCTION_70	IF_1
0x4003bac	            0x7417	                            je 0x4003bc5	      4607	gui.c	ELSE_2	FUNCTION_70	IF_1
0x4003bae	      0x448b4c2404	                mov r9d, dword [rsp + 4]	      4610	gui.c	ELSE_2	FUNCTION_70	IF_2
0x4003bb3	          0x4585c9	                           test r9d, r9d	      4610	gui.c	ELSE_2	FUNCTION_70	IF_2
0x4003bb6	     0xf84c1010000	                            je 0x4003d7d	      4610	gui.c	ELSE_2	FUNCTION_70	IF_2
0x4003bbc	        0x8b7c2404	                mov edi, dword [rsp + 4]	      4610	gui.c	ELSE_2	FUNCTION_70	IF_2
0x4003bc0	      0xe8bbd2ffff	call sym.gui_update_horiz_scrollbar.part.0	      4610	gui.c	ELSE_2	FUNCTION_70	IF_2
0x4003bc5	    0x48833d000000	               cmp qword [0x04003bcd], 0	      4193	gui.c	FUNCTION_65	IF_1
0x4003bcd	     0xf84e3010000	                            je 0x4003db6	      4193	gui.c	FUNCTION_65	IF_1
0x4003bd3	        0x8b7c2404	                mov edi, dword [rsp + 4]	      4193	gui.c	FUNCTION_65	IF_1
0x4003bd7	      0xe8f4ccffff	  call sym.gui_update_scrollbars.part.12	      4193	gui.c	FUNCTION_65	IF_1
0x4003bdc	    0x488b05000000	            mov rax, qword [0x04003be3] 	      4193	gui.c	FUNCTION_65	IF_1
0x4003be3	    0x488905000000	            mov qword [0x04003bea], rax 	      1972	gui.c	FUNCTION_30
0x4003bea	    0x8b0500000000	            mov eax, dword [0x04003bf0] 	      2034	gui.c	FUNCTION_35	IF_1
0x4003bf0	    0xc70500000000	     mov dword [0x04003bfa], 0xffffffff 	      1979	gui.c	FUNCTION_30
0x4003bfa	            0x85c0	                           test eax, eax	      2034	gui.c	FUNCTION_35	IF_1
0x4003bfc	            0x7505	                           jne 0x4003c03	      2034	gui.c	FUNCTION_35	IF_1
0x4003bfe	      0xe800000000	                          call 0x4003c03	      2035	gui.c	FUNCTION_35	CALL_1
0x4003c03	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1983	gui.c	FUNCTION_30
0x4003c08	    0x644833042528	                xor rax, qword fs:[0x28]	      1983	gui.c	FUNCTION_30
0x4003c11	     0xf85b8050000	                           jne 0x40041cf	      1983	gui.c	FUNCTION_30
0x4003c17	        0x4883c428	                           add rsp, 0x28	      1983	gui.c	FUNCTION_30
0x4003c1b	              0x5b	                                 pop rbx	      1983	gui.c	FUNCTION_30
0x4003c1c	              0x5d	                                 pop rbp	      1983	gui.c	FUNCTION_30
0x4003c1d	            0x415c	                                 pop r12	      1983	gui.c	FUNCTION_30
0x4003c1f	            0x415d	                                 pop r13	      1983	gui.c	FUNCTION_30
0x4003c21	            0x415e	                                 pop r14	      1983	gui.c	FUNCTION_30
0x4003c23	            0x415f	                                 pop r15	      1983	gui.c	FUNCTION_30
0x4003c25	              0xc3	                                     ret	      1983	gui.c	FUNCTION_30
0x4003c26	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1983	gui.c	FUNCTION_30
0x4003c30	      0xbe01000000	                              mov esi, 1	      2083	gui.c	FUNCTION_36	WHILE_1	IF_7	CALL_3
0x4003c35	      0xbf00000000	                              mov edi, 0	      2083	gui.c	FUNCTION_36	WHILE_1	IF_7	CALL_3
0x4003c3a	      0xe8c1c5ffff	 call sym.gui_outstr_nowrap.constprop.21	      2083	gui.c	FUNCTION_36	WHILE_1	IF_7	CALL_3
0x4003c3f	    0x486305000000	         movsxd rax, dword [0x04003c46] 	      2087	gui.c	FUNCTION_36	WHILE_1	IF_8
0x4003c46	    0x483b05000000	            cmp rax, qword [0x04003c4d] 	      2087	gui.c	FUNCTION_36	WHILE_1	IF_8
0x4003c4d	     0xf8c3bfeffff	                            jl 0x4003a8e	      2087	gui.c	FUNCTION_36	WHILE_1	IF_8
0x4003c53	      0xe9b1feffff	                           jmp 0x4003b09	      2087	gui.c	FUNCTION_36	WHILE_1	IF_8
0x4003c58	     0xf1f84000000	                   nop dword [rax + rax]	      2087	gui.c	FUNCTION_36	WHILE_1	IF_8
0x4003c60	      0x41807d017c	                cmp byte [r13 + 1], 0x7c	      1799	gui.c	FUNCTION_30	WHILE_1	IF_4
0x4003c65	            0x7458	                            je 0x4003cbf	      1799	gui.c	FUNCTION_30	WHILE_1	IF_4
0x4003c67	        0x4183ee01	                             sub r14d, 1	      1926	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x4003c6b	        0x4983c501	                              add r13, 1	      1927	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x4003c6f	      0xe9f8feffff	                           jmp 0x4003b6c	      1927	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11
0x4003c74	          0x4c89ef	                            mov rdi, r13	      2050	gui.c	FUNCTION_36	CALL_1
0x4003c77	      0xe800000000	                          call 0x4003c7c	      2050	gui.c	FUNCTION_36	CALL_1
0x4003c7c	            0x85c0	                           test eax, eax	      2052	gui.c	FUNCTION_36	WHILE_1
0x4003c7e	          0x4189c4	                           mov r12d, eax	      2050	gui.c	FUNCTION_36	CALL_1
0x4003c81	     0xf8f07feffff	                            jg 0x4003a8e	      2052	gui.c	FUNCTION_36	WHILE_1
0x4003c87	    0x660f1f840000	                    nop word [rax + rax]	      2052	gui.c	FUNCTION_36	WHILE_1
0x4003c90	          0x4989dd	                            mov r13, rbx	      2052	gui.c	FUNCTION_36	WHILE_1
0x4003c93	      0xe9d4feffff	                           jmp 0x4003b6c	      2052	gui.c	FUNCTION_36	WHILE_1
0x4003c98	    0x8b0500000000	            mov eax, dword [0x04003c9e] 	      1902	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	IF_13
0x4003c9e	    0x3b0500000000	            cmp eax, dword [0x04003ca4] 	      1902	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	IF_13
0x4003ca4	    0xc70500000000	               mov dword [0x04003cae], 0	      1901	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12
0x4003cae	     0xf8db4000000	                           jge 0x4003d68	      1902	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	IF_13
0x4003cb4	          0x83c001	                              add eax, 1	      1903	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	IF_13
0x4003cb7	    0x890500000000	            mov dword [0x04003cbd], eax 	      1903	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	IF_13
0x4003cbd	            0xeba8	                           jmp 0x4003c67	      1903	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	IF_13
0x4003cbf	        0x498d4502	                      lea rax, [r13 + 2]	      1801	gui.c	FUNCTION_30	WHILE_1	IF_4
0x4003cc3	      0x4889442410	             mov qword [rsp + 0x10], rax	      1801	gui.c	FUNCTION_30	WHILE_1	IF_4
0x4003cc8	      0x410fb64d02	               movzx ecx, byte [r13 + 2]	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x4003ccd	            0x89ca	                            mov edx, ecx	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x4003ccf	          0x83e930	                           sub ecx, 0x30	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x4003cd2	          0x83f909	                              cmp ecx, 9	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x4003cd5	            0x763b	                           jbe 0x4003d12	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x4003cd7	          0x80fa2d	                            cmp dl, 0x2d	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x4003cda	            0x7425	                            je 0x4003d01	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x4003cdc	          0x83ea24	                           sub edx, 0x24	      1815	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4003cdf	          0x80fa4f	                            cmp dl, 0x4f	      1815	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4003ce2	     0xf87da000000	                            ja 0x4003dc2	      1815	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4003ce8	           0xfb6d2	                           movzx edx, dl	      1815	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4003ceb	    0xff24d5000000	                       jmp qword [rdx*8]	      1815	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4003cf2	    0xc70500000000	               mov dword [0x04003cfc], 0	      1909	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_7	IF_14
0x4003cfc	      0xe966ffffff	                           jmp 0x4003c67	      1909	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_7	IF_14
0x4003d01	      0x410fb64503	               movzx eax, byte [r13 + 3]	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x4003d06	          0x83e830	                           sub eax, 0x30	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x4003d09	          0x83f809	                              cmp eax, 9	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x4003d0c	     0xf87b0000000	                            ja 0x4003dc2	      1802	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_9
0x4003d12	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1804	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_10
0x4003d17	          0x4963de	                        movsxd rbx, r14d	      1805	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_6
0x4003d1a	          0x4c01eb	                            add rbx, r13	      1805	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_6
0x4003d1d	      0xe800000000	                          call 0x4003d22	      1804	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_10
0x4003d22	          0x890424	                    mov dword [rsp], eax	      1804	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	CALL_10
0x4003d25	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1805	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_6
0x4003d2a	          0x4839c3	                            cmp rbx, rax	      1805	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_6
0x4003d2d	     0xf8242feffff	                            jb 0x4003b75	      1805	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_6
0x4003d33	           0xfb610	                   movzx edx, byte [rax]	      1807	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7
0x4003d36	          0x80fa3b	                            cmp dl, 0x3b	      1807	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7
0x4003d39	            0x75a1	                           jne 0x4003cdc	      1807	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7
0x4003d3b	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1810	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7	CALL_11
0x4003d40	        0x4883c001	                              add rax, 1	      1809	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7
0x4003d44	      0x4889442410	             mov qword [rsp + 0x10], rax	      1809	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7
0x4003d49	      0xe800000000	                          call 0x4003d4e	      1810	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7	CALL_11
0x4003d4e	        0x89442408	                mov dword [rsp + 8], eax	      1810	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7	CALL_11
0x4003d52	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1811	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7	IF_8
0x4003d57	          0x4839c3	                            cmp rbx, rax	      1811	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7	IF_8
0x4003d5a	     0xf8215feffff	                            jb 0x4003b75	      1811	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7	IF_8
0x4003d60	           0xfb610	                   movzx edx, byte [rax]	      1811	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7	IF_8
0x4003d63	      0xe974ffffff	                           jmp 0x4003cdc	      1811	gui.c	FUNCTION_30	WHILE_1	IF_4	IF_5	IF_7	IF_8
0x4003d68	    0x8b3d00000000	            mov edi, dword [0x04003d6e] 	      1905	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	CALL_24
0x4003d6e	      0xbe01000000	                              mov esi, 1	      1905	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	CALL_24
0x4003d73	      0xe848c9ffff	               call sym.gui_delete_lines	      1905	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	CALL_24
0x4003d78	      0xe9eafeffff	                           jmp 0x4003c67	      1905	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	IF_12	CALL_24
0x4003d7d	    0x833d00000000	               cmp dword [0x04003d84], 2	      4610	gui.c	ELSE_2	FUNCTION_70	IF_2
0x4003d84	     0xf843bfeffff	                            je 0x4003bc5	      4610	gui.c	ELSE_2	FUNCTION_70	IF_2
0x4003d8a	    0x448b82940200	           mov r8d, dword [rdx + 0x294] 	      4613	gui.c	ELSE_2	FUNCTION_70	IF_3
0x4003d91	          0x4585c0	                           test r8d, r8d	      4613	gui.c	ELSE_2	FUNCTION_70	IF_3
0x4003d94	     0xf8422feffff	                            je 0x4003bbc	      4613	gui.c	ELSE_2	FUNCTION_70	IF_3
0x4003d9a	    0x8b3d00000000	            mov edi, dword [0x04003da0] 	      4613	gui.c	ELSE_2	FUNCTION_70	IF_3
0x4003da0	            0x85ff	                           test edi, edi	      4613	gui.c	ELSE_2	FUNCTION_70	IF_3
0x4003da2	     0xf8414feffff	                            je 0x4003bbc	      4613	gui.c	ELSE_2	FUNCTION_70	IF_3
0x4003da8	    0x48833d000000	               cmp qword [0x04003db0], 0	      4193	gui.c	FUNCTION_65	IF_1
0x4003db0	     0xf851dfeffff	                           jne 0x4003bd3	      4193	gui.c	FUNCTION_65	IF_1
0x4003db6	    0x488b05000000	            mov rax, qword [0x04003dbd] 	      4193	gui.c	FUNCTION_65	IF_1
0x4003dbd	      0xe921feffff	                           jmp 0x4003be3	      4193	gui.c	FUNCTION_65	IF_1
0x4003dc2	        0x498d4501	                      lea rax, [r13 + 1]	      1879	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4003dc6	        0x4883c001	                              add rax, 1	      1882	gui.c	FUNCTION_30	WHILE_1	IF_4
0x4003dca	          0x4889c2	                            mov rdx, rax	      1882	gui.c	FUNCTION_30	WHILE_1	IF_4
0x4003dcd	      0x4889442410	             mov qword [rsp + 0x10], rax	      1882	gui.c	FUNCTION_30	WHILE_1	IF_4
0x4003dd2	          0x4c29ea	                            sub rdx, r13	      1882	gui.c	FUNCTION_30	WHILE_1	IF_4
0x4003dd5	          0x4989c5	                            mov r13, rax	      1883	gui.c	FUNCTION_30	WHILE_1	IF_4
0x4003dd8	          0x4129d6	                           sub r14d, edx	      1882	gui.c	FUNCTION_30	WHILE_1	IF_4
0x4003ddb	      0xe98cfdffff	                           jmp 0x4003b6c	      1883	gui.c	FUNCTION_30	WHILE_1	IF_4
0x4003de0	    0xc744240c0100	                mov dword [rsp + 0xc], 1	      1827	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4003de8	            0xebdc	                           jmp 0x4003dc6	      1827	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4003dea	    0x448b25000000	           mov r12d, dword [0x04003df1] 	      1860	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_17
0x4003df1	    0x8b1d00000000	            mov ebx, dword [0x04003df7] 	      2899	gui.c	FUNCTION_44	IF_2
0x4003df7	          0x4139dc	                           cmp r12d, ebx	      2899	gui.c	FUNCTION_44	IF_2
0x4003dfa	     0xf8d76020000	                           jge 0x4004076	      2899	gui.c	FUNCTION_44	IF_2
0x4003e00	      0xbe01000000	                              mov esi, 1	      2905	gui.c	FUNCTION_44	ELSE_1	CALL_2
0x4003e05	          0x4489e7	                           mov edi, r12d	      2905	gui.c	FUNCTION_44	ELSE_1	CALL_2
0x4003e08	      0xe800000000	                          call 0x4003e0d	      2905	gui.c	FUNCTION_44	ELSE_1	CALL_2
0x4003e0d	    0x8b0500000000	            mov eax, dword [0x04003e13] 	      2907	gui.c	FUNCTION_44	ELSE_1	IF_3
0x4003e13	    0x3b0500000000	            cmp eax, dword [0x04003e19] 	      2907	gui.c	FUNCTION_44	ELSE_1	IF_3
0x4003e19	     0xf8cdd010000	                            jl 0x4003ffc	      2907	gui.c	FUNCTION_44	ELSE_1	IF_3
0x4003e1f	    0x8b1500000000	            mov edx, dword [0x04003e25] 	      2908	gui.c	FUNCTION_44	ELSE_1	IF_3
0x4003e25	    0x3b1500000000	            cmp edx, dword [0x04003e2b] 	      2908	gui.c	FUNCTION_44	ELSE_1	IF_3
0x4003e2b	     0xf8ccb010000	                            jl 0x4003ffc	      2908	gui.c	FUNCTION_44	ELSE_1	IF_3
0x4003e31	    0x3b1500000000	            cmp edx, dword [0x04003e37] 	      2909	gui.c	FUNCTION_44	ELSE_1	IF_3
0x4003e37	     0xf8fbf010000	                            jg 0x4003ffc	      2909	gui.c	FUNCTION_44	ELSE_1	IF_3
0x4003e3d	    0x3b0500000000	            cmp eax, dword [0x04003e43] 	      2911	gui.c	FUNCTION_44	ELSE_1	IF_3	IF_4
0x4003e43	     0xf8daa010000	                           jge 0x4003ff3	      2911	gui.c	FUNCTION_44	ELSE_1	IF_3	IF_4
0x4003e49	          0x83c001	                              add eax, 1	      2912	gui.c	FUNCTION_44	ELSE_1	IF_3	IF_4
0x4003e4c	    0x890500000000	            mov dword [0x04003e52], eax 	      2912	gui.c	FUNCTION_44	ELSE_1	IF_3	IF_4
0x4003e52	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2912	gui.c	FUNCTION_44	ELSE_1	IF_3	IF_4
0x4003e57	      0xe96affffff	                           jmp 0x4003dc6	      2912	gui.c	FUNCTION_44	ELSE_1	IF_3	IF_4
0x4003e5c	         0xf1f4000	                         nop dword [rax]	      2912	gui.c	FUNCTION_44	ELSE_1	IF_3	IF_4
0x4003e60	          0x8b3424	                    mov esi, dword [rsp]	      1714	gui.c	FUNCTION_26	IF_1
0x4003e63	    0x8b1500000000	            mov edx, dword [0x04003e69] 	      1715	gui.c	FUNCTION_26	IF_1
0x4003e69	             0x9f2	                             or edx, esi	      1715	gui.c	FUNCTION_26	IF_1
0x4003e6b	    0x81fe00010000	                          cmp esi, 0x100	      1715	gui.c	FUNCTION_26	IF_1
0x4003e71	           0xf4dd6	                         cmovge edx, esi	      1715	gui.c	FUNCTION_26	IF_1
0x4003e74	    0x891500000000	            mov dword [0x04003e7a], edx 	      1715	gui.c	FUNCTION_26	IF_1
0x4003e7a	      0xe947ffffff	                           jmp 0x4003dc6	      1715	gui.c	FUNCTION_26	IF_1
0x4003e7f	      0xbf0f270000	                         mov edi, 0x270f	      1818	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_12
0x4003e84	      0xe800000000	                          call 0x4003e89	      1818	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_12
0x4003e89	      0xe800000000	                          call 0x4003e8e	      1819	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_13
0x4003e8e	    0xc60500000000	                mov byte [0x04003e95], 0	      1820	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4003e95	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1820	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4003e9a	    0xc74424040100	                  mov dword [rsp + 4], 1	      1821	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4003ea2	      0xe91fffffff	                           jmp 0x4003dc6	      1822	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4003ea7	    0x8b0500000000	            mov eax, dword [0x04003ead] 	      1866	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_19
0x4003ead	    0x448b25000000	           mov r12d, dword [0x04003eb4] 	      1866	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_19
0x4003eb4	    0x8b1d00000000	            mov ebx, dword [0x04003eba] 	      1866	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_19
0x4003eba	          0x8d68ff	                      lea ebp, [rax - 1]	      1866	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_19
0x4003ebd	          0x4489e6	                           mov esi, r12d	      1741	gui.c	ELSE_1	FUNCTION_28	CALL_1
0x4003ec0	          0x4489e7	                           mov edi, r12d	      1741	gui.c	ELSE_1	FUNCTION_28	CALL_1
0x4003ec3	      0xe800000000	                          call 0x4003ec8	      1741	gui.c	ELSE_1	FUNCTION_28	CALL_1
0x4003ec8	            0x89e9	                            mov ecx, ebp	      1743	gui.c	ELSE_1	FUNCTION_28	CALL_2
0x4003eca	          0x4489e2	                           mov edx, r12d	      1743	gui.c	ELSE_1	FUNCTION_28	CALL_2
0x4003ecd	            0x89de	                            mov esi, ebx	      1743	gui.c	ELSE_1	FUNCTION_28	CALL_2
0x4003ecf	          0x4489e7	                           mov edi, r12d	      1743	gui.c	ELSE_1	FUNCTION_28	CALL_2
0x4003ed2	      0xe800000000	                          call 0x4003ed7	      1743	gui.c	ELSE_1	FUNCTION_28	CALL_2
0x4003ed7	    0x443b25000000	           cmp r12d, dword [0x04003ede] 	      1746	gui.c	ELSE_1	FUNCTION_28	IF_1
0x4003ede	     0xf8518010000	                           jne 0x4003ffc	      1746	gui.c	ELSE_1	FUNCTION_28	IF_1
0x4003ee4	    0x8b0500000000	            mov eax, dword [0x04003eea] 	      1747	gui.c	ELSE_1	FUNCTION_28	IF_1
0x4003eea	            0x39c3	                            cmp ebx, eax	      1747	gui.c	ELSE_1	FUNCTION_28	IF_1
0x4003eec	     0xf8f0a010000	                            jg 0x4003ffc	      1747	gui.c	ELSE_1	FUNCTION_28	IF_1
0x4003ef2	            0x39c5	                            cmp ebp, eax	      1747	gui.c	ELSE_1	FUNCTION_28	IF_1
0x4003ef4	     0xf8dfb000000	                           jge 0x4003ff5	      1747	gui.c	ELSE_1	FUNCTION_28	IF_1
0x4003efa	      0xe9fd000000	                           jmp 0x4003ffc	      1747	gui.c	ELSE_1	FUNCTION_28	IF_1
0x4003eff	              0x90	                                     nop	      1747	gui.c	ELSE_1	FUNCTION_28	IF_1
0x4003f00	          0x8b0424	                    mov eax, dword [rsp]	      1876	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_22
0x4003f03	      0xbf14000000	                           mov edi, 0x14	      1876	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_22
0x4003f08	            0x85c0	                           test eax, eax	      1876	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_22
0x4003f0a	           0xf45f8	                         cmovne edi, eax	      1876	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_22
0x4003f0d	      0xe800000000	                          call 0x4003f12	      1876	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_22
0x4003f12	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1876	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_22
0x4003f17	      0xe9aafeffff	                           jmp 0x4003dc6	      1877	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4003f1c	    0x8b3d00000000	            mov edi, dword [0x04003f22] 	      1854	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_15
0x4003f22	      0xbe01000000	                              mov esi, 1	      1854	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_15
0x4003f27	      0xe894c7ffff	               call sym.gui_delete_lines	      1854	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_15
0x4003f2c	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1854	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_15
0x4003f31	      0xe990feffff	                           jmp 0x4003dc6	      1855	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x4003f36	          0x8b3424	                    mov esi, dword [rsp]	      1842	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_10
0x4003f39	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      1842	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_10
0x4003f3d	            0x39ce	                            cmp esi, ecx	      1842	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_10
0x4003f3f	     0xf8d1d010000	                           jge 0x4004062	      1842	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_10
0x4003f45	    0x893500000000	            mov dword [0x04003f4b], esi 	      1844	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_10
0x4003f4b	    0x890d00000000	            mov dword [0x04003f51], ecx 	      1845	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_10
0x4003f51	      0xe970feffff	                           jmp 0x4003dc6	      1845	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_10
0x4003f56	          0x8b3424	                    mov esi, dword [rsp]	      1830	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_9
0x4003f59	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      1830	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_9
0x4003f5d	            0x39ce	                            cmp esi, ecx	      1830	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_9
0x4003f5f	     0xf8de9000000	                           jge 0x400404e	      1830	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_9
0x4003f65	    0x893500000000	            mov dword [0x04003f6b], esi 	      1832	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_9
0x4003f6b	    0x890d00000000	            mov dword [0x04003f71], ecx 	      1833	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_9
0x4003f71	      0xe950feffff	                           jmp 0x4003dc6	      1833	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	IF_9
0x4003f76	          0x8b3424	                    mov esi, dword [rsp]	      1029	gui.c	FUNCTION_13
0x4003f79	    0x893500000000	            mov dword [0x04003f7f], esi 	      1029	gui.c	FUNCTION_13
0x4003f7f	        0x8b742408	                mov esi, dword [rsp + 8]	      1030	gui.c	FUNCTION_13
0x4003f83	    0x893500000000	            mov dword [0x04003f89], esi 	      1030	gui.c	FUNCTION_13
0x4003f89	      0xe938feffff	                           jmp 0x4003dc6	      1030	gui.c	FUNCTION_13
0x4003f8e	          0x8b3424	                    mov esi, dword [rsp]	      2896	gui.c	FUNCTION_44	IF_1
0x4003f91	            0x85f6	                           test esi, esi	      2896	gui.c	FUNCTION_44	IF_1
0x4003f93	     0xf8e2dfeffff	                           jle 0x4003dc6	      2896	gui.c	FUNCTION_44	IF_1
0x4003f99	    0x448b25000000	           mov r12d, dword [0x04003fa0] 	      1863	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_18
0x4003fa0	    0x8b1d00000000	            mov ebx, dword [0x04003fa6] 	      2899	gui.c	FUNCTION_44	IF_2
0x4003fa6	        0x428d1426	                    lea edx, [rsi + r12]	      2899	gui.c	FUNCTION_44	IF_2
0x4003faa	            0x39da	                            cmp edx, ebx	      2899	gui.c	FUNCTION_44	IF_2
0x4003fac	     0xf8f7e010000	                            jg 0x4004130	      2899	gui.c	FUNCTION_44	IF_2
0x4003fb2	          0x4489e7	                           mov edi, r12d	      2905	gui.c	FUNCTION_44	ELSE_1	CALL_2
0x4003fb5	      0xe800000000	                          call 0x4003fba	      2905	gui.c	FUNCTION_44	ELSE_1	CALL_2
0x4003fba	    0x8b0500000000	            mov eax, dword [0x04003fc0] 	      2907	gui.c	FUNCTION_44	ELSE_1	IF_3
0x4003fc0	    0x3b0500000000	            cmp eax, dword [0x04003fc6] 	      2907	gui.c	FUNCTION_44	ELSE_1	IF_3
0x4003fc6	            0x7c34	                            jl 0x4003ffc	      2907	gui.c	FUNCTION_44	ELSE_1	IF_3
0x4003fc8	    0x8b1500000000	            mov edx, dword [0x04003fce] 	      2908	gui.c	FUNCTION_44	ELSE_1	IF_3
0x4003fce	    0x3b1500000000	            cmp edx, dword [0x04003fd4] 	      2908	gui.c	FUNCTION_44	ELSE_1	IF_3
0x4003fd4	            0x7c26	                            jl 0x4003ffc	      2908	gui.c	FUNCTION_44	ELSE_1	IF_3
0x4003fd6	    0x3b1500000000	            cmp edx, dword [0x04003fdc] 	      2909	gui.c	FUNCTION_44	ELSE_1	IF_3
0x4003fdc	            0x7f1e	                            jg 0x4003ffc	      2909	gui.c	FUNCTION_44	ELSE_1	IF_3
0x4003fde	    0x8b1500000000	            mov edx, dword [0x04003fe4] 	      2911	gui.c	FUNCTION_44	ELSE_1	IF_3	IF_4
0x4003fe4	            0x89d1	                            mov ecx, edx	      2911	gui.c	FUNCTION_44	ELSE_1	IF_3	IF_4
0x4003fe6	          0x2b0c24	                    sub ecx, dword [rsp]	      2911	gui.c	FUNCTION_44	ELSE_1	IF_3	IF_4
0x4003fe9	            0x39c8	                            cmp eax, ecx	      2911	gui.c	FUNCTION_44	ELSE_1	IF_3	IF_4
0x4003feb	     0xf8e81010000	                           jle 0x4004172	      2911	gui.c	FUNCTION_44	ELSE_1	IF_3	IF_4
0x4003ff1	            0x39d0	                            cmp eax, edx	      2913	gui.c	FUNCTION_44	ELSE_1	IF_3	ELSE_2	IF_5
0x4003ff3	            0x7f07	                            jg 0x4003ffc	      2913	gui.c	FUNCTION_44	ELSE_1	IF_3	ELSE_2	IF_5
0x4003ff5	    0xc60500000000	                mov byte [0x04003ffc], 0	      1748	gui.c	ELSE_1	FUNCTION_28	IF_1
0x4003ffc	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1748	gui.c	ELSE_1	FUNCTION_28	IF_1
0x4004001	      0xe9c0fdffff	                           jmp 0x4003dc6	      1748	gui.c	ELSE_1	FUNCTION_28	IF_1
0x4004006	    0x813c24ff0000	                   cmp dword [rsp], 0xff	      1723	gui.c	ELSE_1	FUNCTION_27	IF_1
0x400400d	     0xf8ebd000000	                           jle 0x40040d0	      1723	gui.c	ELSE_1	FUNCTION_27	IF_1
0x4004013	    0xc70500000000	               mov dword [0x0400401d], 0	      1724	gui.c	ELSE_1	FUNCTION_27	IF_1
0x400401d	      0xe9a4fdffff	                           jmp 0x4003dc6	      1724	gui.c	ELSE_1	FUNCTION_27	IF_1
0x4004022	          0x8b3424	                    mov esi, dword [rsp]	      1857	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_16
0x4004025	    0x8b3d00000000	            mov edi, dword [0x0400402b] 	      1857	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_16
0x400402b	      0xe890c6ffff	               call sym.gui_delete_lines	      1857	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_16
0x4004030	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1857	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	CALL_16
0x4004035	      0xe98cfdffff	                           jmp 0x4003dc6	      1858	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1
0x400403a	      0xbe01000000	                              mov esi, 1	      1957	gui.c	FUNCTION_30	CALL_28
0x400403f	      0xbf01000000	                              mov edi, 1	      1957	gui.c	FUNCTION_30	CALL_28
0x4004044	      0xe800000000	                          call 0x4004049	      1957	gui.c	FUNCTION_30	CALL_28
0x4004049	      0xe933fbffff	                           jmp 0x4003b81	      1957	gui.c	FUNCTION_30	CALL_28
0x400404e	          0x8b3424	                    mov esi, dword [rsp]	      1838	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	ELSE_3
0x4004051	    0x890d00000000	            mov dword [0x04004057], ecx 	      1837	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	ELSE_3
0x4004057	    0x893500000000	            mov dword [0x0400405d], esi 	      1838	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	ELSE_3
0x400405d	      0xe964fdffff	                           jmp 0x4003dc6	      1838	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	ELSE_3
0x4004062	          0x8b3424	                    mov esi, dword [rsp]	      1850	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	ELSE_4
0x4004065	    0x890d00000000	            mov dword [0x0400406b], ecx 	      1849	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	ELSE_4
0x400406b	    0x893500000000	            mov dword [0x04004071], esi 	      1850	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	ELSE_4
0x4004071	      0xe950fdffff	                           jmp 0x4003dc6	      1850	gui.c	FUNCTION_30	WHILE_1	IF_4	SWITCH_1	ELSE_4
0x4004076	    0x8b2d00000000	            mov ebp, dword [0x0400407c] 	      2901	gui.c	FUNCTION_44	IF_2	CALL_1
0x400407c	    0x448b3d000000	           mov r15d, dword [0x04004083] 	      2901	gui.c	FUNCTION_44	IF_2	CALL_1
0x4004083	            0x89de	                            mov esi, ebx	      1741	gui.c	ELSE_1	FUNCTION_28	CALL_1
0x4004085	          0x4489e7	                           mov edi, r12d	      1741	gui.c	ELSE_1	FUNCTION_28	CALL_1
0x4004088	      0xe800000000	                          call 0x400408d	      1741	gui.c	ELSE_1	FUNCTION_28	CALL_1
0x400408d	            0x89da	                            mov edx, ebx	      1743	gui.c	ELSE_1	FUNCTION_28	CALL_2
0x400408f	            0x89e9	                            mov ecx, ebp	      1743	gui.c	ELSE_1	FUNCTION_28	CALL_2
0x4004091	          0x4489fe	                           mov esi, r15d	      1743	gui.c	ELSE_1	FUNCTION_28	CALL_2
0x4004094	          0x4489e7	                           mov edi, r12d	      1743	gui.c	ELSE_1	FUNCTION_28	CALL_2
0x4004097	      0xe800000000	                          call 0x400409c	      1743	gui.c	ELSE_1	FUNCTION_28	CALL_2
0x400409c	    0x8b1500000000	            mov edx, dword [0x040040a2] 	      1746	gui.c	ELSE_1	FUNCTION_28	IF_1
0x40040a2	          0x4139d4	                           cmp r12d, edx	      1746	gui.c	ELSE_1	FUNCTION_28	IF_1
0x40040a5	     0xf8f51ffffff	                            jg 0x4003ffc	      1746	gui.c	ELSE_1	FUNCTION_28	IF_1
0x40040ab	            0x39da	                            cmp edx, ebx	      1746	gui.c	ELSE_1	FUNCTION_28	IF_1
0x40040ad	     0xf8f49ffffff	                            jg 0x4003ffc	      1746	gui.c	ELSE_1	FUNCTION_28	IF_1
0x40040b3	    0x8b0500000000	            mov eax, dword [0x040040b9] 	      1747	gui.c	ELSE_1	FUNCTION_28	IF_1
0x40040b9	          0x4139c7	                           cmp r15d, eax	      1747	gui.c	ELSE_1	FUNCTION_28	IF_1
0x40040bc	     0xf8e30feffff	                           jle 0x4003ef2	      1747	gui.c	ELSE_1	FUNCTION_28	IF_1
0x40040c2	      0xe935ffffff	                           jmp 0x4003ffc	      1747	gui.c	ELSE_1	FUNCTION_28	IF_1
0x40040c7	    0x660f1f840000	                    nop word [rax + rax]	      1747	gui.c	ELSE_1	FUNCTION_28	IF_1
0x40040d0	          0x8b1424	                    mov edx, dword [rsp]	      1726	gui.c	FUNCTION_27
0x40040d3	            0xf7d2	                                 not edx	      1726	gui.c	FUNCTION_27
0x40040d5	    0x211500000000	             and dword [0x040040db], edx	      1726	gui.c	FUNCTION_27
0x40040db	      0xe9e6fcffff	                           jmp 0x4003dc6	      1726	gui.c	FUNCTION_27
0x40040e0	      0x448b5c2404	               mov r11d, dword [rsp + 4]	      1968	gui.c	FUNCTION_30	IF_21
0x40040e5	          0x4585db	                         test r11d, r11d	      1968	gui.c	FUNCTION_30	IF_21
0x40040e8	     0xf85b4faffff	                           jne 0x4003ba2	      1968	gui.c	FUNCTION_30	IF_21
0x40040ee	    0x8b3500000000	            mov esi, dword [0x040040f4] 	      4607	gui.c	ELSE_2	FUNCTION_70	IF_1
0x40040f4	            0x85f6	                           test esi, esi	      4607	gui.c	ELSE_2	FUNCTION_70	IF_1
0x40040f6	     0xf84e7faffff	                            je 0x4003be3	      4607	gui.c	ELSE_2	FUNCTION_70	IF_1
0x40040fc	    0x833d00000000	               cmp dword [0x04004103], 2	      4610	gui.c	ELSE_2	FUNCTION_70	IF_2
0x4004103	     0xf84dafaffff	                            je 0x4003be3	      4610	gui.c	ELSE_2	FUNCTION_70	IF_2
0x4004109	    0x8b8894020000	           mov ecx, dword [rax + 0x294] 	      4613	gui.c	ELSE_2	FUNCTION_70	IF_3
0x400410f	            0x85c9	                           test ecx, ecx	      4613	gui.c	ELSE_2	FUNCTION_70	IF_3
0x4004111	            0x740e	                            je 0x4004121	      4613	gui.c	ELSE_2	FUNCTION_70	IF_3
0x4004113	    0x8b1500000000	            mov edx, dword [0x04004119] 	      4613	gui.c	ELSE_2	FUNCTION_70	IF_3
0x4004119	            0x85d2	                           test edx, edx	      4613	gui.c	ELSE_2	FUNCTION_70	IF_3
0x400411b	     0xf85c2faffff	                           jne 0x4003be3	      4613	gui.c	ELSE_2	FUNCTION_70	IF_3
0x4004121	            0x31ff	                            xor edi, edi	      4613	gui.c	ELSE_2	FUNCTION_70	IF_3
0x4004123	      0xe858cdffff	call sym.gui_update_horiz_scrollbar.part.0	      4613	gui.c	ELSE_2	FUNCTION_70	IF_3
0x4004128	      0xe989fcffff	                           jmp 0x4003db6	      4613	gui.c	ELSE_2	FUNCTION_70	IF_3
0x400412d	           0xf1f00	                         nop dword [rax]	      4613	gui.c	ELSE_2	FUNCTION_70	IF_3
0x4004130	    0x8b2d00000000	            mov ebp, dword [0x04004136] 	      2901	gui.c	FUNCTION_44	IF_2	CALL_1
0x4004136	    0x448b3d000000	           mov r15d, dword [0x0400413d] 	      2901	gui.c	FUNCTION_44	IF_2	CALL_1
0x400413d	            0x89de	                            mov esi, ebx	      1741	gui.c	ELSE_1	FUNCTION_28	CALL_1
0x400413f	          0x4489e7	                           mov edi, r12d	      1741	gui.c	ELSE_1	FUNCTION_28	CALL_1
0x4004142	      0xe800000000	                          call 0x4004147	      1741	gui.c	ELSE_1	FUNCTION_28	CALL_1
0x4004147	            0x89da	                            mov edx, ebx	      1743	gui.c	ELSE_1	FUNCTION_28	CALL_2
0x4004149	            0x89e9	                            mov ecx, ebp	      1743	gui.c	ELSE_1	FUNCTION_28	CALL_2
0x400414b	          0x4489fe	                           mov esi, r15d	      1743	gui.c	ELSE_1	FUNCTION_28	CALL_2
0x400414e	          0x4489e7	                           mov edi, r12d	      1743	gui.c	ELSE_1	FUNCTION_28	CALL_2
0x4004151	      0xe800000000	                          call 0x4004156	      1743	gui.c	ELSE_1	FUNCTION_28	CALL_2
0x4004156	    0x8b1500000000	            mov edx, dword [0x0400415c] 	      1746	gui.c	ELSE_1	FUNCTION_28	IF_1
0x400415c	            0x39da	                            cmp edx, ebx	      1746	gui.c	ELSE_1	FUNCTION_28	IF_1
0x400415e	     0xf8f98feffff	                            jg 0x4003ffc	      1746	gui.c	ELSE_1	FUNCTION_28	IF_1
0x4004164	          0x4139d4	                           cmp r12d, edx	      1746	gui.c	ELSE_1	FUNCTION_28	IF_1
0x4004167	     0xf8e46ffffff	                           jle 0x40040b3	      1746	gui.c	ELSE_1	FUNCTION_28	IF_1
0x400416d	      0xe98afeffff	                           jmp 0x4003ffc	      1746	gui.c	ELSE_1	FUNCTION_28	IF_1
0x4004172	           0x30424	                    add eax, dword [rsp]	      2912	gui.c	FUNCTION_44	ELSE_1	IF_3	IF_4
0x4004175	    0x890500000000	            mov dword [0x0400417b], eax 	      2912	gui.c	FUNCTION_44	ELSE_1	IF_3	IF_4
0x400417b	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2912	gui.c	FUNCTION_44	ELSE_1	IF_3	IF_4
0x4004180	      0xe941fcffff	                           jmp 0x4003dc6	      2912	gui.c	FUNCTION_44	ELSE_1	IF_3	IF_4
0x4004185	    0x488b05000000	            mov rax, qword [0x0400418c] 	      1961	gui.c	FUNCTION_30	IF_20
0x400418c	    0x488b15000000	            mov rdx, qword [0x04004193] 	      1961	gui.c	FUNCTION_30	IF_20
0x4004193	    0xc74424040000	                  mov dword [rsp + 4], 0	      1769	gui.c	FUNCTION_30
0x400419b	          0x4839c2	                            cmp rdx, rax	      1961	gui.c	FUNCTION_30	IF_20
0x400419e	     0xf85f4f9ffff	                           jne 0x4003b98	      1961	gui.c	FUNCTION_30	IF_20
0x40041a4	      0xe945ffffff	                           jmp 0x40040ee	      1961	gui.c	FUNCTION_30	IF_20
0x40041a9	    0xc70500000000	               mov dword [0x040041b3], 0	      2089	gui.c	FUNCTION_36	WHILE_1	IF_8
0x40041b3	    0x830500000000	               add dword [0x040041ba], 1	      2090	gui.c	FUNCTION_36	WHILE_1	IF_8
0x40041ba	      0xe9a8f9ffff	                           jmp 0x4003b67	      2090	gui.c	FUNCTION_36	WHILE_1	IF_8
0x40041bf	            0x3c0c	                             cmp al, 0xc	      1916	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_9	IF_17
0x40041c1	            0x7511	                           jne 0x40041d4	      1916	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_9	IF_17
0x40041c3	    0x830500000000	               add dword [0x040041ca], 1	      1918	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_9	IF_17
0x40041ca	      0xe998faffff	                           jmp 0x4003c67	      1918	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_9	IF_17
0x40041cf	      0xe800000000	                          call 0x40041d4	      1983	gui.c	FUNCTION_30
0x40041d4	            0x3c07	                               cmp al, 7	      1920	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_10	IF_18
0x40041d6	     0xf858bfaffff	                           jne 0x4003c67	      1920	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_10	IF_18
0x40041dc	      0xe800000000	                          call 0x40041e1	      1922	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_10	IF_18	CALL_25
0x40041e1	      0xe981faffff	                           jmp 0x4003c67	      1922	gui.c	FUNCTION_30	WHILE_1	ELSE_5	IF_11	ELSE_10	IF_18	CALL_25
gui_update_screen	WHILE,0:SWITCH,0:CALL,12:ELSE,0:DO,0:IF,5:FOR,0:functions,0	84
0x4007f60	              0x55	                                push rbp	      5127	gui.c	FUNCTION_88
0x4007f61	              0x53	                                push rbx	      5127	gui.c	FUNCTION_88
0x4007f62	        0x4883ec08	                              sub rsp, 8	      5127	gui.c	FUNCTION_88
0x4007f66	      0xe800000000	                          call 0x4007f6b	      5134	gui.c	FUNCTION_88	CALL_1
0x4007f6b	      0xe800000000	                          call 0x4007f70	      5135	gui.c	FUNCTION_88	CALL_2
0x4007f70	    0x8b1500000000	            mov edx, dword [0x04007f76] 	      5138	gui.c	FUNCTION_88	IF_1	CALL_3
0x4007f76	            0x85d2	                           test edx, edx	      5138	gui.c	FUNCTION_88	IF_1	CALL_3
0x4007f78	            0x7426	                            je 0x4007fa0	      5138	gui.c	FUNCTION_88	IF_1	CALL_3
0x4007f7a	            0x31ff	                            xor edi, edi	      5157	gui.c	FUNCTION_88	CALL_7
0x4007f7c	      0xe800000000	                          call 0x4007f81	      5157	gui.c	FUNCTION_88	CALL_7
0x4007f81	      0xe800000000	                          call 0x4007f86	      5158	gui.c	FUNCTION_88	CALL_8
0x4007f86	        0x4883c408	                              add rsp, 8	      5172	gui.c	FUNCTION_88
0x4007f8a	            0x31f6	                            xor esi, esi	      5171	gui.c	FUNCTION_88	CALL_12
0x4007f8c	      0xbf01000000	                              mov edi, 1	      5171	gui.c	FUNCTION_88	CALL_12
0x4007f91	              0x5b	                                 pop rbx	      5172	gui.c	FUNCTION_88
0x4007f92	              0x5d	                                 pop rbp	      5172	gui.c	FUNCTION_88
0x4007f93	      0xe900000000	                           jmp 0x4007f98	      5171	gui.c	FUNCTION_88	CALL_12
0x4007f98	     0xf1f84000000	                   nop dword [rax + rax]	      5171	gui.c	FUNCTION_88	CALL_12
0x4007fa0	      0xe800000000	                          call 0x4007fa5	      5138	gui.c	FUNCTION_88	IF_1	CALL_3
0x4007fa5	            0x85c0	                           test eax, eax	      5138	gui.c	FUNCTION_88	IF_1	CALL_3
0x4007fa7	    0x488b05000000	            mov rax, qword [0x04007fae] 	      5138	gui.c	FUNCTION_88	IF_1	CALL_3
0x4007fae	     0xf849c000000	                            je 0x4008050	      5138	gui.c	FUNCTION_88	IF_1	CALL_3
0x4007fb4	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x4007fb8	    0x483915000000	            cmp qword [0x04007fbf], rdx 	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x4007fbf	     0xf84aa000000	                            je 0x400806f	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x4007fc5	      0xe800000000	                          call 0x4007fca	      5144	gui.c	FUNCTION_88	IF_1	IF_2	CALL_5
0x4007fca	            0x85c0	                           test eax, eax	      5144	gui.c	FUNCTION_88	IF_1	IF_2	CALL_5
0x4007fcc	     0xf85b6000000	                           jne 0x4008088	      5144	gui.c	FUNCTION_88	IF_1	IF_2	CALL_5
0x4007fd2	    0x488b05000000	            mov rax, qword [0x04007fd9] 	      5147	gui.c	FUNCTION_88	IF_1	IF_3
0x4007fd9	    0x4883b8a80200	              cmp qword [rax + 0x2a8], 0	      5147	gui.c	FUNCTION_88	IF_1	IF_3
0x4007fe1	     0xf8ec1000000	                           jle 0x40080a8	      5147	gui.c	FUNCTION_88	IF_1	IF_3
0x4007fe7	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      5154	gui.c	FUNCTION_88	IF_1
0x4007feb	    0x488b2d000000	            mov rbp, qword [0x04007ff2] 	      5149	gui.c	FUNCTION_88	IF_1	IF_3
0x4007ff2	            0x31ff	                            xor edi, edi	      5157	gui.c	FUNCTION_88	CALL_7
0x4007ff4	        0x488b5838	            mov rbx, qword [rax + 0x38] 	      5150	gui.c	FUNCTION_88	IF_1	IF_3
0x4007ff8	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5154	gui.c	FUNCTION_88	IF_1
0x4007ffc	    0x488915000000	            mov qword [0x04008003], rdx 	      5154	gui.c	FUNCTION_88	IF_1
0x4008003	    0x488905000000	            mov qword [0x0400800a], rax 	      5154	gui.c	FUNCTION_88	IF_1
0x400800a	      0xe800000000	                          call 0x400800f	      5157	gui.c	FUNCTION_88	CALL_7
0x400800f	      0xe800000000	                          call 0x4008014	      5158	gui.c	FUNCTION_88	CALL_8
0x4008014	          0x4839dd	                            cmp rbp, rbx	      5161	gui.c	FUNCTION_88	IF_4
0x4008017	     0xf84ab000000	                            je 0x40080c8	      5161	gui.c	FUNCTION_88	IF_4
0x400801d	    0x488b3d000000	            mov rdi, qword [0x04008024] 	      5166	gui.c	FUNCTION_88	IF_4	CALL_10
0x4008024	          0x4889ee	                            mov rsi, rbp	      5166	gui.c	FUNCTION_88	IF_4	CALL_10
0x4008027	      0xe800000000	                          call 0x400802c	      5166	gui.c	FUNCTION_88	IF_4	CALL_10
0x400802c	    0x488b3d000000	            mov rdi, qword [0x04008033] 	      5167	gui.c	FUNCTION_88	IF_4	CALL_11
0x4008033	          0x4889de	                            mov rsi, rbx	      5167	gui.c	FUNCTION_88	IF_4	CALL_11
0x4008036	      0xe800000000	                          call 0x400803b	      5167	gui.c	FUNCTION_88	IF_4	CALL_11
0x400803b	    0x488b05000000	            mov rax, qword [0x04008042] 	      5168	gui.c	FUNCTION_88	IF_4
0x4008042	    0x83a0b4000000	      and dword [rax + 0xb4], 0xffffffef	      5168	gui.c	FUNCTION_88	IF_4
0x4008049	      0xe938ffffff	                           jmp 0x4007f86	      5168	gui.c	FUNCTION_88	IF_4
0x400804e	            0x6690	                                     nop	      5168	gui.c	FUNCTION_88	IF_4
0x4008050	    0x4883b8a80200	              cmp qword [rax + 0x2a8], 0	      5140	gui.c	FUNCTION_88	IF_1
0x4008058	     0xf8e1cffffff	                           jle 0x4007f7a	      5140	gui.c	FUNCTION_88	IF_1
0x400805e	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x4008062	    0x483915000000	            cmp qword [0x04008069], rdx 	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x4008069	     0xf8556ffffff	                           jne 0x4007fc5	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x400806f	        0x488b4040	            mov rax, qword [rax + 0x40] 	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x4008073	    0x483905000000	            cmp qword [0x0400807a], rax 	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x400807a	     0xf8545ffffff	                           jne 0x4007fc5	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x4008080	      0xe9f5feffff	                           jmp 0x4007f7a	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x4008085	           0xf1f00	                         nop dword [rax]	      5142	gui.c	FUNCTION_88	IF_1	CALL_4
0x4008088	    0x4c8b05000000	              mov r8, qword [0x0400808f]	      5145	gui.c	FUNCTION_88	IF_1	CALL_6
0x400808f	            0x31c9	                            xor ecx, ecx	      5145	gui.c	FUNCTION_88	IF_1	CALL_6
0x4008091	            0x31d2	                            xor edx, edx	      5145	gui.c	FUNCTION_88	IF_1	CALL_6
0x4008093	            0x31f6	                            xor esi, esi	      5145	gui.c	FUNCTION_88	IF_1	CALL_6
0x4008095	      0xbf1e000000	                           mov edi, 0x1e	      5145	gui.c	FUNCTION_88	IF_1	CALL_6
0x400809a	      0xe800000000	                          call 0x400809f	      5145	gui.c	FUNCTION_88	IF_1	CALL_6
0x400809f	      0xe92effffff	                           jmp 0x4007fd2	      5145	gui.c	FUNCTION_88	IF_1	CALL_6
0x40080a4	         0xf1f4000	                         nop dword [rax]	      5145	gui.c	FUNCTION_88	IF_1	CALL_6
0x40080a8	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      5154	gui.c	FUNCTION_88	IF_1
0x40080ac	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5154	gui.c	FUNCTION_88	IF_1
0x40080b0	    0x488915000000	            mov qword [0x040080b7], rdx 	      5154	gui.c	FUNCTION_88	IF_1
0x40080b7	    0x488905000000	            mov qword [0x040080be], rax 	      5154	gui.c	FUNCTION_88	IF_1
0x40080be	      0xe9b7feffff	                           jmp 0x4007f7a	      5154	gui.c	FUNCTION_88	IF_1
0x40080c3	       0xf1f440000	                   nop dword [rax + rax]	      5154	gui.c	FUNCTION_88	IF_1
0x40080c8	    0x488b3d000000	            mov rdi, qword [0x040080cf] 	      5162	gui.c	FUNCTION_88	IF_4	CALL_9
0x40080cf	      0xe800000000	                          call 0x40080d4	      5162	gui.c	FUNCTION_88	IF_4	CALL_9
0x40080d4	            0x85c0	                           test eax, eax	      5162	gui.c	FUNCTION_88	IF_4	CALL_9
0x40080d6	     0xf8550ffffff	                           jne 0x400802c	      5162	gui.c	FUNCTION_88	IF_4	CALL_9
0x40080dc	    0x8b0500000000	            mov eax, dword [0x040080e2] 	      5163	gui.c	FUNCTION_88	IF_4
0x40080e2	            0x85c0	                           test eax, eax	      5163	gui.c	FUNCTION_88	IF_4
0x40080e4	     0xf8542ffffff	                           jne 0x400802c	      5163	gui.c	FUNCTION_88	IF_4
0x40080ea	      0xe997feffff	                           jmp 0x4007f86	      5163	gui.c	FUNCTION_88	IF_4
gui_do_findrepl	WHILE,0:SWITCH,0:CALL,32:ELSE,4:DO,0:IF,16:FOR,0:functions,0	251
0x4008330	            0x4157	                                push r15	      5276	gui.c	FUNCTION_91
0x4008332	            0x4156	                                push r14	      5276	gui.c	FUNCTION_91
0x4008334	            0x4155	                                push r13	      5276	gui.c	FUNCTION_91
0x4008336	            0x4154	                                push r12	      5276	gui.c	FUNCTION_91
0x4008338	              0x55	                                push rbp	      5276	gui.c	FUNCTION_91
0x4008339	              0x53	                                push rbx	      5276	gui.c	FUNCTION_91
0x400833a	    0x4881ecf80000	                           sub rsp, 0xf8	      5276	gui.c	FUNCTION_91
0x4008341	    0x448b0d000000	            mov r9d, dword [0x04008348] 	      5288	gui.c	FUNCTION_91	IF_1
0x4008348	    0x64488b042528	                mov rax, qword fs:[0x28]	      5276	gui.c	FUNCTION_91
0x4008351	    0x48898424e800	             mov qword [rsp + 0xe8], rax	      5276	gui.c	FUNCTION_91
0x4008359	            0x31c0	                            xor eax, eax	      5276	gui.c	FUNCTION_91
0x400835b	          0x4585c9	                           test r9d, r9d	      5288	gui.c	FUNCTION_91	IF_1
0x400835e	     0xf859c010000	                           jne 0x4008500	      5288	gui.c	FUNCTION_91	IF_1
0x4008364	    0x448b05000000	            mov r8d, dword [0x0400836b] 	      5288	gui.c	FUNCTION_91	IF_1
0x400836b	          0x4585c0	                           test r8d, r8d	      5288	gui.c	FUNCTION_91	IF_1
0x400836e	     0xf858c010000	                           jne 0x4008500	      5288	gui.c	FUNCTION_91	IF_1
0x4008374	    0x8b0500000000	            mov eax, dword [0x0400837a] 	      5282	gui.c	FUNCTION_91
0x400837a	          0x4189fc	                           mov r12d, edi	      5279	gui.c	FUNCTION_91
0x400837d	            0x89fd	                            mov ebp, edi	      5279	gui.c	FUNCTION_91
0x400837f	        0x4183e407	                             and r12d, 7	      5279	gui.c	FUNCTION_91
0x4008383	          0x4989f7	                            mov r15, rsi	      5279	gui.c	FUNCTION_91
0x4008386	          0x4989d6	                            mov r14, rdx	      5279	gui.c	FUNCTION_91
0x4008389	          0x4189cd	                           mov r13d, ecx	      5279	gui.c	FUNCTION_91
0x400838c	        0x8944240c	              mov dword [rsp + 0xc], eax	      5282	gui.c	FUNCTION_91
0x4008390	      0x418d4424fd	                      lea eax, [r12 - 3]	      5292	gui.c	FUNCTION_91	IF_2	CALL_1
0x4008395	          0x83f801	                              cmp eax, 1	      5292	gui.c	FUNCTION_91	IF_2	CALL_1
0x4008398	     0xf864d010000	                           jbe 0x40084eb	      5292	gui.c	FUNCTION_91	IF_2	CALL_1
0x400839e	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5297	gui.c	FUNCTION_91	CALL_2
0x40083a3	      0xba64000000	                           mov edx, 0x64	      5297	gui.c	FUNCTION_91	CALL_2
0x40083a8	      0xbe01000000	                              mov esi, 1	      5297	gui.c	FUNCTION_91	CALL_2
0x40083ad	    0xc70500000000	               mov dword [0x040083b7], 1	      5295	gui.c	FUNCTION_91
0x40083b7	      0xe800000000	                          call 0x40083bc	      5297	gui.c	FUNCTION_91	CALL_2
0x40083bc	        0x4183fc04	                             cmp r12d, 4	      5298	gui.c	FUNCTION_91	IF_3
0x40083c0	     0xf84e2020000	                            je 0x40086a8	      5298	gui.c	FUNCTION_91	IF_3
0x40083c6	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5301	gui.c	FUNCTION_91	CALL_4
0x40083cb	      0xbe00000000	                              mov esi, 0	      5301	gui.c	FUNCTION_91	CALL_4
0x40083d0	      0xe800000000	                          call 0x40083d5	      5301	gui.c	FUNCTION_91	CALL_4
0x40083d5	        0x40f6c510	                          test bpl, 0x10	      5302	gui.c	FUNCTION_91	IF_4
0x40083d9	     0xf85b1010000	                           jne 0x4008590	      5302	gui.c	FUNCTION_91	IF_4
0x40083df	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5305	gui.c	FUNCTION_91	CALL_6
0x40083e4	      0xbe00000000	                              mov esi, 0	      5305	gui.c	FUNCTION_91	CALL_6
0x40083e9	      0xe800000000	                          call 0x40083ee	      5305	gui.c	FUNCTION_91	CALL_6
0x40083ee	          0x83e508	                              and ebp, 8	      5306	gui.c	FUNCTION_91	IF_5
0x40083f1	     0xf8503020000	                           jne 0x40085fa	      5306	gui.c	FUNCTION_91	IF_5
0x40083f7	        0x4183fc04	                             cmp r12d, 4	      5308	gui.c	FUNCTION_91	IF_6
0x40083fb	     0xf844e010000	                            je 0x400854f	      5308	gui.c	FUNCTION_91	IF_6
0x4008401	          0x4585ed	                         test r13d, r13d	      5308	gui.c	FUNCTION_91	IF_6
0x4008404	     0xf8545010000	                           jne 0x400854f	      5308	gui.c	FUNCTION_91	IF_6
0x400840a	        0x41803f00	                       cmp byte [r15], 0	      5247	gui.c	FUNCTION_90	WHILE_1
0x400840e	            0x7441	                            je 0x4008451	      5247	gui.c	FUNCTION_90	WHILE_1
0x4008410	          0x4c89ff	                            mov rdi, r15	      5250	gui.c	FUNCTION_90	WHILE_1
0x4008413	    0xff1500000000	                 call qword [0x04008419]	      5250	gui.c	FUNCTION_90	WHILE_1
0x4008419	          0x83f801	                              cmp eax, 1	      5252	gui.c	FUNCTION_90	WHILE_1	IF_1
0x400841c	     0xf8e86010000	                           jle 0x40085a8	      5252	gui.c	FUNCTION_90	WHILE_1	IF_1
0x4008422	          0x83e801	                              sub eax, 1	      5252	gui.c	FUNCTION_90	WHILE_1	IF_1
0x4008425	      0x498d5c0701	                lea rbx, [r15 + rax + 1]	      5252	gui.c	FUNCTION_90	WHILE_1	IF_1
0x400842a	    0x660f1f440000	                    nop word [rax + rax]	      5252	gui.c	FUNCTION_90	WHILE_1	IF_1
0x4008430	        0x4983c701	                              add r15, 1	      5255	gui.c	FUNCTION_90	WHILE_1	IF_1	CALL_1
0x4008434	      0x410fb677ff	               movzx esi, byte [r15 - 1]	      5255	gui.c	FUNCTION_90	WHILE_1	IF_1	CALL_1
0x4008439	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5255	gui.c	FUNCTION_90	WHILE_1	IF_1	CALL_1
0x400843e	      0xe800000000	                          call 0x4008443	      5255	gui.c	FUNCTION_90	WHILE_1	IF_1	CALL_1
0x4008443	          0x4c39fb	                            cmp rbx, r15	      5254	gui.c	FUNCTION_90	WHILE_1	IF_1	WHILE_2
0x4008446	            0x75e8	                           jne 0x4008430	      5254	gui.c	FUNCTION_90	WHILE_1	IF_1	WHILE_2
0x4008448	          0x4989df	                            mov r15, rbx	      5276	gui.c	FUNCTION_91
0x400844b	        0x41803f00	                       cmp byte [r15], 0	      5247	gui.c	FUNCTION_90	WHILE_1
0x400844f	            0x75bf	                           jne 0x4008410	      5247	gui.c	FUNCTION_90	WHILE_1
0x4008451	            0x85ed	                           test ebp, ebp	      5312	gui.c	FUNCTION_91	IF_7
0x4008453	     0xf858d010000	                           jne 0x40085e6	      5312	gui.c	FUNCTION_91	IF_7
0x4008459	        0x4183fc04	                             cmp r12d, 4	      5315	gui.c	FUNCTION_91	IF_8
0x400845d	     0xf84db010000	                            je 0x400863e	      5315	gui.c	FUNCTION_91	IF_8
0x4008463	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5325	gui.c	FUNCTION_91	CALL_16
0x4008468	            0x31f6	                            xor esi, esi	      5325	gui.c	FUNCTION_91	CALL_16
0x400846a	      0xe800000000	                          call 0x400846f	      5325	gui.c	FUNCTION_91	CALL_16
0x400846f	        0x4183fc03	                             cmp r12d, 3	      5327	gui.c	FUNCTION_91	IF_10
0x4008473	    0x41b80c020000	                          mov r8d, 0x20c	      5367	gui.c	FUNCTION_91	ELSE_4
0x4008479	     0xf843d020000	                            je 0x40086bc	      5327	gui.c	FUNCTION_91	IF_10
0x400847f	        0x4183fd01	                             cmp r13d, 1	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x4008483	      0xb901000000	                              mov ecx, 1	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x4008488	    0x8b1d00000000	            mov ebx, dword [0x0400848e] 	      5373	gui.c	FUNCTION_91	ELSE_4
0x400848e	            0x19f6	                            sbb esi, esi	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x4008490	        0x4883ec08	                              sub rsp, 8	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x4008494	          0x4531c9	                            xor r9d, r9d	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x4008497	            0x6a00	                                  push 0	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x4008499	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x400849e	          0x83e610	                           and esi, 0x10	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x40084a1	          0x83c62f	                           add esi, 0x2f	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x40084a4	            0x31ff	                            xor edi, edi	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x40084a6	      0xe800000000	                          call 0x40084ab	      5374	gui.c	FUNCTION_91	ELSE_4	CALL_30
0x40084ab	              0x59	                                 pop rcx	      5376	gui.c	FUNCTION_91	ELSE_4
0x40084ac	              0x5e	                                 pop rsi	      5376	gui.c	FUNCTION_91	ELSE_4
0x40084ad	    0x891d00000000	            mov dword [0x040084b3], ebx 	      5376	gui.c	FUNCTION_91	ELSE_4
0x40084b3	    0xf60500000000	           test byte [0x040084ba], 0x11 	      5383	gui.c	FUNCTION_91	IF_16
0x40084ba	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      5381	gui.c	FUNCTION_91
0x40084be	    0x890500000000	            mov dword [0x040084c4], eax 	      5381	gui.c	FUNCTION_91
0x40084c4	     0xf85fe000000	                           jne 0x40085c8	      5383	gui.c	FUNCTION_91	IF_16
0x40084ca	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      5390	gui.c	FUNCTION_91	CALL_32
0x40084cf	      0xe800000000	                          call 0x40084d4	      5390	gui.c	FUNCTION_91	CALL_32
0x40084d4	        0x8b542410	            mov edx, dword [rsp + 0x10] 	      5392	gui.c	FUNCTION_91
0x40084d8	            0x31c0	                            xor eax, eax	      5392	gui.c	FUNCTION_91
0x40084da	    0xc70500000000	               mov dword [0x040084e4], 0	      5391	gui.c	FUNCTION_91
0x40084e4	            0x85d2	                           test edx, edx	      5392	gui.c	FUNCTION_91
0x40084e6	           0xf9fc0	                                 setg al	      5392	gui.c	FUNCTION_91
0x40084e9	            0xeb17	                           jmp 0x4008502	      5392	gui.c	FUNCTION_91
0x40084eb	      0xe800000000	                          call 0x40084f0	      5292	gui.c	FUNCTION_91	IF_2	CALL_1
0x40084f0	            0x85c0	                           test eax, eax	      5292	gui.c	FUNCTION_91	IF_2	CALL_1
0x40084f2	     0xf84a6feffff	                            je 0x400839e	      5292	gui.c	FUNCTION_91	IF_2	CALL_1
0x40084f8	     0xf1f84000000	                   nop dword [rax + rax]	      5292	gui.c	FUNCTION_91	IF_2	CALL_1
0x4008500	            0x31c0	                            xor eax, eax	      5289	gui.c	FUNCTION_91	IF_1
0x4008502	    0x488b8c24e800	            mov rcx, qword [rsp + 0xe8] 	      5393	gui.c	FUNCTION_91
0x400850a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      5393	gui.c	FUNCTION_91
0x4008513	     0xf854d020000	                           jne 0x4008766	      5393	gui.c	FUNCTION_91
0x4008519	    0x4881c4f80000	                           add rsp, 0xf8	      5393	gui.c	FUNCTION_91
0x4008520	              0x5b	                                 pop rbx	      5393	gui.c	FUNCTION_91
0x4008521	              0x5d	                                 pop rbp	      5393	gui.c	FUNCTION_91
0x4008522	            0x415c	                                 pop r12	      5393	gui.c	FUNCTION_91
0x4008524	            0x415d	                                 pop r13	      5393	gui.c	FUNCTION_91
0x4008526	            0x415e	                                 pop r14	      5393	gui.c	FUNCTION_91
0x4008528	            0x415f	                                 pop r15	      5393	gui.c	FUNCTION_91
0x400852a	              0xc3	                                     ret	      5393	gui.c	FUNCTION_91
0x400852b	       0xf1f440000	                   nop dword [rax + rax]	      5393	gui.c	FUNCTION_91
0x4008530	        0x410fb637	                   movzx esi, byte [r15]	      5259	gui.c	FUNCTION_90	WHILE_1	IF_2
0x4008534	        0x4080fe2f	                           cmp sil, 0x2f	      5259	gui.c	FUNCTION_90	WHILE_1	IF_2
0x4008538	     0xf84d0000000	                            je 0x400860e	      5259	gui.c	FUNCTION_90	WHILE_1	IF_2
0x400853e	        0x498d5f01	                      lea rbx, [r15 + 1]	      5262	gui.c	FUNCTION_90	WHILE_1
0x4008542	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5261	gui.c	FUNCTION_90	WHILE_1	CALL_3
0x4008547	          0x4989df	                            mov r15, rbx	      5276	gui.c	FUNCTION_91
0x400854a	      0xe800000000	                          call 0x400854f	      5261	gui.c	FUNCTION_90	WHILE_1	CALL_3
0x400854f	        0x41803f00	                       cmp byte [r15], 0	      5247	gui.c	FUNCTION_90	WHILE_1
0x4008553	     0xf84f8feffff	                            je 0x4008451	      5247	gui.c	FUNCTION_90	WHILE_1
0x4008559	          0x4c89ff	                            mov rdi, r15	      5250	gui.c	FUNCTION_90	WHILE_1
0x400855c	    0xff1500000000	                 call qword [0x04008562]	      5250	gui.c	FUNCTION_90	WHILE_1
0x4008562	          0x83f801	                              cmp eax, 1	      5252	gui.c	FUNCTION_90	WHILE_1	IF_1
0x4008565	            0x7ec9	                           jle 0x4008530	      5252	gui.c	FUNCTION_90	WHILE_1	IF_1
0x4008567	          0x83e801	                              sub eax, 1	      5252	gui.c	FUNCTION_90	WHILE_1	IF_1
0x400856a	      0x498d5c0701	                lea rbx, [r15 + rax + 1]	      5252	gui.c	FUNCTION_90	WHILE_1	IF_1
0x400856f	              0x90	                                     nop	      5252	gui.c	FUNCTION_90	WHILE_1	IF_1
0x4008570	        0x4983c701	                              add r15, 1	      5255	gui.c	FUNCTION_90	WHILE_1	IF_1	CALL_1
0x4008574	      0x410fb677ff	               movzx esi, byte [r15 - 1]	      5255	gui.c	FUNCTION_90	WHILE_1	IF_1	CALL_1
0x4008579	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5255	gui.c	FUNCTION_90	WHILE_1	IF_1	CALL_1
0x400857e	      0xe800000000	                          call 0x4008583	      5255	gui.c	FUNCTION_90	WHILE_1	IF_1	CALL_1
0x4008583	          0x4939df	                            cmp r15, rbx	      5254	gui.c	FUNCTION_90	WHILE_1	IF_1	WHILE_2
0x4008586	            0x75e8	                           jne 0x4008570	      5254	gui.c	FUNCTION_90	WHILE_1	IF_1	WHILE_2
0x4008588	          0x4989df	                            mov r15, rbx	      5276	gui.c	FUNCTION_91
0x400858b	            0xebc2	                           jmp 0x400854f	      5276	gui.c	FUNCTION_91
0x400858d	           0xf1f00	                         nop dword [rax]	      5276	gui.c	FUNCTION_91
0x4008590	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5303	gui.c	FUNCTION_91	CALL_5
0x4008595	      0xbe00000000	                              mov esi, 0	      5303	gui.c	FUNCTION_91	CALL_5
0x400859a	      0xe800000000	                          call 0x400859f	      5303	gui.c	FUNCTION_91	CALL_5
0x400859f	      0xe94afeffff	                           jmp 0x40083ee	      5303	gui.c	FUNCTION_91	CALL_5
0x40085a4	         0xf1f4000	                         nop dword [rax]	      5303	gui.c	FUNCTION_91	CALL_5
0x40085a8	        0x410fb637	                   movzx esi, byte [r15]	      5259	gui.c	FUNCTION_90	WHILE_1	IF_2
0x40085ac	        0x4080fe3f	                           cmp sil, 0x3f	      5259	gui.c	FUNCTION_90	WHILE_1	IF_2
0x40085b0	            0x7474	                            je 0x4008626	      5259	gui.c	FUNCTION_90	WHILE_1	IF_2
0x40085b2	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5261	gui.c	FUNCTION_90	WHILE_1	CALL_3
0x40085b7	        0x498d5f01	                      lea rbx, [r15 + 1]	      5262	gui.c	FUNCTION_90	WHILE_1
0x40085bb	      0xe800000000	                          call 0x40085c0	      5261	gui.c	FUNCTION_90	WHILE_1	CALL_3
0x40085c0	          0x4989df	                            mov r15, rbx	      5276	gui.c	FUNCTION_91
0x40085c3	      0xe983feffff	                           jmp 0x400844b	      5276	gui.c	FUNCTION_91
0x40085c8	      0xe800000000	                          call 0x40085cd	      5385	gui.c	FUNCTION_91	IF_16	CALL_31
0x40085cd	    0xc70500000000	               mov dword [0x040085d7], 0	      5386	gui.c	FUNCTION_91	IF_16
0x40085d7	    0xc70500000000	               mov dword [0x040085e1], 0	      5387	gui.c	FUNCTION_91	IF_16
0x40085e1	      0xe9e4feffff	                           jmp 0x40084ca	      5387	gui.c	FUNCTION_91	IF_16
0x40085e6	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5313	gui.c	FUNCTION_91	CALL_10
0x40085eb	      0xbe00000000	                              mov esi, 0	      5313	gui.c	FUNCTION_91	CALL_10
0x40085f0	      0xe800000000	                          call 0x40085f5	      5313	gui.c	FUNCTION_91	CALL_10
0x40085f5	      0xe95ffeffff	                           jmp 0x4008459	      5313	gui.c	FUNCTION_91	CALL_10
0x40085fa	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5307	gui.c	FUNCTION_91	CALL_7
0x40085ff	      0xbe00000000	                              mov esi, 0	      5307	gui.c	FUNCTION_91	CALL_7
0x4008604	      0xe800000000	                          call 0x4008609	      5307	gui.c	FUNCTION_91	CALL_7
0x4008609	      0xe9e9fdffff	                           jmp 0x40083f7	      5307	gui.c	FUNCTION_91	CALL_7
0x400860e	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5260	gui.c	FUNCTION_90	WHILE_1	CALL_2
0x4008613	      0xbe5c000000	                           mov esi, 0x5c	      5260	gui.c	FUNCTION_90	WHILE_1	CALL_2
0x4008618	      0xe800000000	                          call 0x400861d	      5260	gui.c	FUNCTION_90	WHILE_1	CALL_2
0x400861d	        0x410fb637	                   movzx esi, byte [r15]	      5260	gui.c	FUNCTION_90	WHILE_1	CALL_2
0x4008621	      0xe918ffffff	                           jmp 0x400853e	      5260	gui.c	FUNCTION_90	WHILE_1	CALL_2
0x4008626	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5260	gui.c	FUNCTION_90	WHILE_1	CALL_2
0x400862b	      0xbe5c000000	                           mov esi, 0x5c	      5260	gui.c	FUNCTION_90	WHILE_1	CALL_2
0x4008630	      0xe800000000	                          call 0x4008635	      5260	gui.c	FUNCTION_90	WHILE_1	CALL_2
0x4008635	        0x410fb637	                   movzx esi, byte [r15]	      5260	gui.c	FUNCTION_90	WHILE_1	CALL_2
0x4008639	      0xe974ffffff	                           jmp 0x40085b2	      5260	gui.c	FUNCTION_90	WHILE_1	CALL_2
0x400863e	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5317	gui.c	FUNCTION_91	IF_8	CALL_11
0x4008643	      0xbe00000000	                              mov esi, 0	      5317	gui.c	FUNCTION_91	IF_8	CALL_11
0x4008648	      0xe800000000	                          call 0x400864d	      5317	gui.c	FUNCTION_91	IF_8	CALL_11
0x400864d	      0xbe00000000	                              mov esi, 0	      5319	gui.c	FUNCTION_91	IF_8	CALL_12
0x4008652	          0x4c89f7	                            mov rdi, r14	      5319	gui.c	FUNCTION_91	IF_8	CALL_12
0x4008655	      0xe800000000	                          call 0x400865a	      5319	gui.c	FUNCTION_91	IF_8	CALL_12
0x400865a	          0x4885c0	                           test rax, rax	      5320	gui.c	FUNCTION_91	IF_8	IF_9
0x400865d	          0x4889c3	                            mov rbx, rax	      5319	gui.c	FUNCTION_91	IF_8	CALL_12
0x4008660	            0x740d	                            je 0x400866f	      5320	gui.c	FUNCTION_91	IF_8	IF_9
0x4008662	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5321	gui.c	FUNCTION_91	IF_8	CALL_13
0x4008667	          0x4889c6	                            mov rsi, rax	      5321	gui.c	FUNCTION_91	IF_8	CALL_13
0x400866a	      0xe800000000	                          call 0x400866f	      5321	gui.c	FUNCTION_91	IF_8	CALL_13
0x400866f	          0x4889df	                            mov rdi, rbx	      5322	gui.c	FUNCTION_91	IF_8	CALL_14
0x4008672	      0xe800000000	                          call 0x4008677	      5322	gui.c	FUNCTION_91	IF_8	CALL_14
0x4008677	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5323	gui.c	FUNCTION_91	IF_8	CALL_15
0x400867c	      0xbe00000000	                              mov esi, 0	      5323	gui.c	FUNCTION_91	IF_8	CALL_15
0x4008681	      0xe800000000	                          call 0x4008686	      5323	gui.c	FUNCTION_91	IF_8	CALL_15
0x4008686	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5325	gui.c	FUNCTION_91	CALL_16
0x400868b	            0x31f6	                            xor esi, esi	      5325	gui.c	FUNCTION_91	CALL_16
0x400868d	      0xe800000000	                          call 0x4008692	      5325	gui.c	FUNCTION_91	CALL_16
0x4008692	            0x31ff	                            xor edi, edi	      5362	gui.c	FUNCTION_91	IF_14	CALL_28
0x4008694	      0xe800000000	                          call 0x4008699	      5362	gui.c	FUNCTION_91	IF_14	CALL_28
0x4008699	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      5363	gui.c	FUNCTION_91	IF_14	CALL_29
0x400869e	      0xe800000000	                          call 0x40086a3	      5363	gui.c	FUNCTION_91	IF_14	CALL_29
0x40086a3	      0xe90bfeffff	                           jmp 0x40084b3	      5363	gui.c	FUNCTION_91	IF_14	CALL_29
0x40086a8	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5299	gui.c	FUNCTION_91	CALL_3
0x40086ad	      0xbe00000000	                              mov esi, 0	      5299	gui.c	FUNCTION_91	CALL_3
0x40086b2	      0xe800000000	                          call 0x40086b7	      5299	gui.c	FUNCTION_91	CALL_3
0x40086b7	      0xe90afdffff	                           jmp 0x40083c6	      5299	gui.c	FUNCTION_91	CALL_3
0x40086bc	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      5331	gui.c	FUNCTION_91	IF_10	CALL_17
0x40086c1	      0xbe03000000	                              mov esi, 3	      5331	gui.c	FUNCTION_91	IF_10	CALL_17
0x40086c6	      0xe800000000	                          call 0x40086cb	      5331	gui.c	FUNCTION_91	IF_10	CALL_17
0x40086cb	          0x4885c0	                           test rax, rax	      5333	gui.c	FUNCTION_91	IF_10	IF_11
0x40086ce	      0x4889442430	             mov qword [rsp + 0x30], rax	      5331	gui.c	FUNCTION_91	IF_10	CALL_17
0x40086d3	    0xc78424d80000	               mov dword [rsp + 0xd8], 0	      5332	gui.c	FUNCTION_91	IF_10
0x40086de	            0x7445	                            je 0x4008725	      5333	gui.c	FUNCTION_91	IF_10	IF_11
0x40086e0	      0xe800000000	                          call 0x40086e5	      5335	gui.c	FUNCTION_91	IF_10	IF_11	CALL_18
0x40086e5	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      5336	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	CALL_19
0x40086ea	            0x31d2	                            xor edx, edx	      5336	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	CALL_19
0x40086ec	          0x4889c6	                            mov rsi, rax	      5336	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	CALL_19
0x40086ef	          0x4889c3	                            mov rbx, rax	      5335	gui.c	FUNCTION_91	IF_10	IF_11	CALL_18
0x40086f2	      0xe800000000	                          call 0x40086f7	      5336	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	CALL_19
0x40086f7	            0x85c0	                           test eax, eax	      5336	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	CALL_19
0x40086f9	            0x7407	                            je 0x4008702	      5336	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	CALL_19
0x40086fb	      0x483b5c2438	            cmp rbx, qword [rsp + 0x38] 	      5337	gui.c	FUNCTION_91	IF_10	IF_11	IF_12
0x4008700	            0x742e	                            je 0x4008730	      5337	gui.c	FUNCTION_91	IF_10	IF_11	IF_12
0x4008702	            0x31ff	                            xor edi, edi	      5354	gui.c	FUNCTION_91	IF_10	IF_11	CALL_26
0x4008704	      0xba05000000	                              mov edx, 5	      5354	gui.c	FUNCTION_91	IF_10	IF_11	CALL_26
0x4008709	      0xbe00000000	                              mov esi, 0	      5354	gui.c	FUNCTION_91	IF_10	IF_11	CALL_26
0x400870e	      0xe800000000	                          call 0x4008713	      5354	gui.c	FUNCTION_91	IF_10	IF_11	CALL_26
0x4008713	          0x4889c7	                            mov rdi, rax	      5354	gui.c	FUNCTION_91	IF_10	IF_11	CALL_26
0x4008716	      0xe800000000	                          call 0x400871b	      5354	gui.c	FUNCTION_91	IF_10	IF_11	CALL_26
0x400871b	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      5355	gui.c	FUNCTION_91	IF_10	IF_11	CALL_27
0x4008720	      0xe800000000	                          call 0x4008725	      5355	gui.c	FUNCTION_91	IF_10	IF_11	CALL_27
0x4008725	    0x41b80c030000	                          mov r8d, 0x30c	      5372	gui.c	FUNCTION_91	ELSE_4	IF_15
0x400872b	      0xe94ffdffff	                           jmp 0x400847f	      5372	gui.c	FUNCTION_91	ELSE_4	IF_15
0x4008730	      0xe800000000	                          call 0x4008735	      5341	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	CALL_20
0x4008735	      0xe800000000	                          call 0x400873a	      5343	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_21
0x400873a	          0x83f801	                              cmp eax, 1	      5343	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_21
0x400873d	            0x75dc	                           jne 0x400871b	      5343	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_21
0x400873f	            0x31ff	                            xor edi, edi	      5346	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_22
0x4008741	      0xe800000000	                          call 0x4008746	      5346	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_22
0x4008746	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	      5348	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_23
0x400874e	      0x482b7c2438	             sub rdi, qword [rsp + 0x38]	      5348	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_23
0x4008753	            0x31d2	                            xor edx, edx	      5348	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_23
0x4008755	            0x31f6	                            xor esi, esi	      5348	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_23
0x4008757	      0xe800000000	                          call 0x400875c	      5348	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_23
0x400875c	          0x4c89f7	                            mov rdi, r14	      5350	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_24
0x400875f	      0xe800000000	                          call 0x4008764	      5350	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_24
0x4008764	            0xebb5	                           jmp 0x400871b	      5350	gui.c	FUNCTION_91	IF_10	IF_11	IF_12	IF_13	CALL_24
0x4008766	      0xe800000000	                          call 0x400876b	      5393	gui.c	FUNCTION_91
gui_can_update_cursor	WHILE,0:SWITCH,0:CALL,0:ELSE,0:DO,0:IF,0:FOR,0:functions,0	2
0x40019c0	    0xc70500000000	               mov dword [0x040019ca], 1	      2005	gui.c	FUNCTION_32
0x40019ca	              0xc3	                                     ret	      2005	gui.c	FUNCTION_32
gui_menu_cb	WHILE,0:SWITCH,0:CALL,3:ELSE,0:DO,0:IF,1:FOR,0:functions,0	30
0x4005070	              0x53	                                push rbx	      3413	gui.c	FUNCTION_52
0x4005071	        0x4883ec10	                           sub rsp, 0x10	      3413	gui.c	FUNCTION_52
0x4005075	    0x64488b042528	                mov rax, qword fs:[0x28]	      3413	gui.c	FUNCTION_52
0x400507e	      0x4889442408	                mov qword [rsp + 8], rax	      3413	gui.c	FUNCTION_52
0x4005083	            0x31c0	                            xor eax, eax	      3413	gui.c	FUNCTION_52
0x4005085	    0x8b0500000000	            mov eax, dword [0x0400508b] 	      3417	gui.c	FUNCTION_52	IF_1
0x400508b	            0x85c0	                           test eax, eax	      3417	gui.c	FUNCTION_52	IF_1
0x400508d	            0x7419	                            je 0x40050a8	      3417	gui.c	FUNCTION_52	IF_1
0x400508f	      0x488b442408	                mov rax, qword [rsp + 8]	      3426	gui.c	FUNCTION_52
0x4005094	    0x644833042528	                xor rax, qword fs:[0x28]	      3426	gui.c	FUNCTION_52
0x400509d	            0x7541	                           jne 0x40050e0	      3426	gui.c	FUNCTION_52
0x400509f	        0x4883c410	                           add rsp, 0x10	      3426	gui.c	FUNCTION_52
0x40050a3	              0x5b	                                 pop rbx	      3426	gui.c	FUNCTION_52
0x40050a4	              0xc3	                                     ret	      3426	gui.c	FUNCTION_52
0x40050a5	           0xf1f00	                         nop dword [rax]	      3426	gui.c	FUNCTION_52
0x40050a8	          0x4889fb	                            mov rbx, rdi	      3426	gui.c	FUNCTION_52
0x40050ab	      0xbe03000000	                              mov esi, 3	      3423	gui.c	FUNCTION_52	CALL_1
0x40050b0	          0x4889e7	                            mov rdi, rsp	      3423	gui.c	FUNCTION_52	CALL_1
0x40050b3	        0xc604249b	                    mov byte [rsp], 0x9b	      3420	gui.c	FUNCTION_52
0x40050b7	      0xc6442401fa	                mov byte [rsp + 1], 0xfa	      3421	gui.c	FUNCTION_52
0x40050bc	      0xc644240258	                mov byte [rsp + 2], 0x58	      3422	gui.c	FUNCTION_52
0x40050c1	      0xe800000000	                          call 0x40050c6	      3423	gui.c	FUNCTION_52	CALL_1
0x40050c6	          0x4889e6	                            mov rsi, rsp	      3424	gui.c	FUNCTION_52	CALL_2
0x40050c9	          0x4889df	                            mov rdi, rbx	      3424	gui.c	FUNCTION_52	CALL_2
0x40050cc	      0xe800000000	                          call 0x40050d1	      3424	gui.c	FUNCTION_52	CALL_2
0x40050d1	      0xbe08000000	                              mov esi, 8	      3425	gui.c	FUNCTION_52	CALL_3
0x40050d6	          0x4889e7	                            mov rdi, rsp	      3425	gui.c	FUNCTION_52	CALL_3
0x40050d9	      0xe800000000	                          call 0x40050de	      3425	gui.c	FUNCTION_52	CALL_3
0x40050de	            0xebaf	                           jmp 0x400508f	      3425	gui.c	FUNCTION_52	CALL_3
0x40050e0	      0xe800000000	                          call 0x40050e5	      3426	gui.c	FUNCTION_52
ex_gui	WHILE,0:SWITCH,0:CALL,7:ELSE,0:DO,0:IF,3:FOR,0:functions,0	44
0x4007e70	              0x53	                                push rbx	      4989	gui.c	FUNCTION_82
0x4007e71	          0x4889fb	                            mov rbx, rdi	      4989	gui.c	FUNCTION_82
0x4007e74	          0x488b3f	                    mov rdi, qword [rdi]	      4990	gui.c	FUNCTION_82
0x4007e77	          0x803f2d	                    cmp byte [rdi], 0x2d	      4997	gui.c	FUNCTION_82	IF_1
0x4007e7a	          0x4889f8	                            mov rax, rdi	      4997	gui.c	FUNCTION_82	IF_1
0x4007e7d	            0x7449	                            je 0x4007ec8	      4997	gui.c	FUNCTION_82	IF_1
0x4007e7f	    0x8b1500000000	            mov edx, dword [0x04007e85] 	      5004	gui.c	FUNCTION_82	IF_2
0x4007e85	            0x85d2	                           test edx, edx	      5004	gui.c	FUNCTION_82	IF_2
0x4007e87	            0x7427	                            je 0x4007eb0	      5004	gui.c	FUNCTION_82	IF_2
0x4007e89	           0xfb638	                   movzx edi, byte [rax]	      5014	gui.c	FUNCTION_82	IF_3	CALL_6
0x4007e8c	      0xe800000000	                          call 0x4007e91	      5014	gui.c	FUNCTION_82	IF_3	CALL_6
0x4007e91	            0x85c0	                           test eax, eax	      5014	gui.c	FUNCTION_82	IF_3	CALL_6
0x4007e93	            0x740b	                            je 0x4007ea0	      5014	gui.c	FUNCTION_82	IF_3	CALL_6
0x4007e95	              0x5b	                                 pop rbx	      5016	gui.c	FUNCTION_82
0x4007e96	              0xc3	                                     ret	      5016	gui.c	FUNCTION_82
0x4007e97	    0x660f1f840000	                    nop word [rax + rax]	      5016	gui.c	FUNCTION_82
0x4007ea0	          0x4889df	                            mov rdi, rbx	      5015	gui.c	FUNCTION_82	CALL_7
0x4007ea3	              0x5b	                                 pop rbx	      5016	gui.c	FUNCTION_82
0x4007ea4	      0xe900000000	                           jmp 0x4007ea9	      5015	gui.c	FUNCTION_82	CALL_7
0x4007ea9	     0xf1f80000000	                         nop dword [rax]	      5015	gui.c	FUNCTION_82	CALL_7
0x4007eb0	      0xe800000000	                          call 0x4007eb5	      5008	gui.c	FUNCTION_82	IF_2	CALL_3
0x4007eb5	      0xe800000000	                          call 0x4007eba	      5009	gui.c	FUNCTION_82	IF_2	CALL_4
0x4007eba	      0xe800000000	                          call 0x4007ebf	      5011	gui.c	FUNCTION_82	IF_2	CALL_5
0x4007ebf	          0x488b03	                    mov rax, qword [rbx]	      5011	gui.c	FUNCTION_82	IF_2	CALL_5
0x4007ec2	            0xebc5	                           jmp 0x4007e89	      5011	gui.c	FUNCTION_82	IF_2	CALL_5
0x4007ec4	         0xf1f4000	                         nop dword [rax]	      5011	gui.c	FUNCTION_82	IF_2	CALL_5
0x4007ec8	         0xfb65701	               movzx edx, byte [rdi + 1]	      4998	gui.c	FUNCTION_82	IF_1
0x4007ecc	            0x89d1	                            mov ecx, edx	      4998	gui.c	FUNCTION_82	IF_1
0x4007ece	          0x83e1fb	                     and ecx, 0xfffffffb	      4998	gui.c	FUNCTION_82	IF_1
0x4007ed1	          0x80f962	                            cmp cl, 0x62	      4998	gui.c	FUNCTION_82	IF_1
0x4007ed4	            0x75a9	                           jne 0x4007e7f	      4998	gui.c	FUNCTION_82	IF_1
0x4007ed6	         0xfb64f02	               movzx ecx, byte [rdi + 2]	      4999	gui.c	FUNCTION_82	IF_1	CALL_1
0x4007eda	          0xf6c1df	                           test cl, 0xdf	      4999	gui.c	FUNCTION_82	IF_1	CALL_1
0x4007edd	            0x7405	                            je 0x4007ee4	      4999	gui.c	FUNCTION_82	IF_1	CALL_1
0x4007edf	          0x80f909	                               cmp cl, 9	      4999	gui.c	FUNCTION_82	IF_1	CALL_1
0x4007ee2	            0x759b	                           jne 0x4007e7f	      4999	gui.c	FUNCTION_82	IF_1	CALL_1
0x4007ee4	            0x31c0	                            xor eax, eax	      5001	gui.c	FUNCTION_82	IF_1
0x4007ee6	          0x80fa62	                            cmp dl, 0x62	      5001	gui.c	FUNCTION_82	IF_1
0x4007ee9	           0xf94c0	                                 sete al	      5001	gui.c	FUNCTION_82	IF_1
0x4007eec	        0x4883c702	                              add rdi, 2	      5002	gui.c	FUNCTION_82	IF_1	CALL_2
0x4007ef0	    0x890500000000	            mov dword [0x04007ef6], eax 	      5001	gui.c	FUNCTION_82	IF_1
0x4007ef6	      0xe800000000	                          call 0x4007efb	      5002	gui.c	FUNCTION_82	IF_1	CALL_2
0x4007efb	          0x488903	                    mov qword [rbx], rax	      5002	gui.c	FUNCTION_82	IF_1	CALL_2
0x4007efe	      0xe97cffffff	                           jmp 0x4007e7f	      5002	gui.c	FUNCTION_82	IF_1	CALL_2
gui_update_cursor_later	WHILE,0:SWITCH,0:CALL,2:ELSE,0:DO,0:IF,0:FOR,0:functions,0	2
0x40019b0	      0xbf00000000	                              mov edi, 0	      1758	gui.c	FUNCTION_29	CALL_2
0x40019b5	      0xe900000000	                           jmp 0x40019ba	      1758	gui.c	FUNCTION_29	CALL_2
gfp_setname	WHILE,0:SWITCH,0:CALL,2:ELSE,1:DO,0:IF,1:FOR,0:functions,0	55
0x4000050	              0x55	                                push rbp	      5030	gui.c	FUNCTION_83
0x4000051	              0x53	                                push rbx	      5030	gui.c	FUNCTION_83
0x4000052	          0x4889fd	                            mov rbp, rdi	      5030	gui.c	FUNCTION_83
0x4000055	          0x4889f3	                            mov rbx, rsi	      5030	gui.c	FUNCTION_83
0x4000058	        0x4883ec08	                              sub rsp, 8	      5030	gui.c	FUNCTION_83
0x400005c	      0xe800000000	                          call 0x4000061	      5033	gui.c	FUNCTION_83	IF_1	CALL_1
0x4000061	    0x483dff0f0000	                          cmp rax, 0xfff	      5033	gui.c	FUNCTION_83	IF_1	CALL_1
0x4000067	            0x760f	                           jbe 0x4000078	      5033	gui.c	FUNCTION_83	IF_1	CALL_1
0x4000069	          0xc60300	                       mov byte [rbx], 0	      5034	gui.c	FUNCTION_83	IF_1
0x400006c	        0x4883c408	                              add rsp, 8	      5037	gui.c	FUNCTION_83
0x4000070	              0x5b	                                 pop rbx	      5037	gui.c	FUNCTION_83
0x4000071	              0x5d	                                 pop rbp	      5037	gui.c	FUNCTION_83
0x4000072	              0xc3	                                     ret	      5037	gui.c	FUNCTION_83
0x4000073	       0xf1f440000	                   nop dword [rax + rax]	      5037	gui.c	FUNCTION_83
0x4000078	        0x4883c001	                              add rax, 1	       110	string3.h	FUNCTION_100	CALL_3
0x400007c	          0x83f808	                              cmp eax, 8	       110	string3.h	FUNCTION_100	CALL_3
0x400007f	            0x7327	                           jae 0x40000a8	       110	string3.h	FUNCTION_100	CALL_3
0x4000081	            0xa804	                              test al, 4	       110	string3.h	FUNCTION_100	CALL_3
0x4000083	            0x755b	                           jne 0x40000e0	       110	string3.h	FUNCTION_100	CALL_3
0x4000085	            0x85c0	                           test eax, eax	       110	string3.h	FUNCTION_100	CALL_3
0x4000087	            0x74e3	                            je 0x400006c	       110	string3.h	FUNCTION_100	CALL_3
0x4000089	         0xfb65500	                   movzx edx, byte [rbp]	       110	string3.h	FUNCTION_100	CALL_3
0x400008d	            0xa802	                              test al, 2	       110	string3.h	FUNCTION_100	CALL_3
0x400008f	            0x8813	                      mov byte [rbx], dl	       110	string3.h	FUNCTION_100	CALL_3
0x4000091	            0x74d9	                            je 0x400006c	       110	string3.h	FUNCTION_100	CALL_3
0x4000093	            0x89c0	                            mov eax, eax	       110	string3.h	FUNCTION_100	CALL_3
0x4000095	       0xfb75405fe	         movzx edx, word [rbp + rax - 2]	       110	string3.h	FUNCTION_100	CALL_3
0x400009a	      0x66895403fe	            mov word [rbx + rax - 2], dx	       110	string3.h	FUNCTION_100	CALL_3
0x400009f	            0xebcb	                           jmp 0x400006c	       110	string3.h	FUNCTION_100	CALL_3
0x40000a1	     0xf1f80000000	                         nop dword [rax]	       110	string3.h	FUNCTION_100	CALL_3
0x40000a8	        0x488b5500	                    mov rdx, qword [rbp]	       110	string3.h	FUNCTION_100	CALL_3
0x40000ac	        0x488d7b08	                      lea rdi, [rbx + 8]	       110	string3.h	FUNCTION_100	CALL_3
0x40000b0	          0x4889ee	                            mov rsi, rbp	       110	string3.h	FUNCTION_100	CALL_3
0x40000b3	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	       110	string3.h	FUNCTION_100	CALL_3
0x40000b7	          0x488913	                    mov qword [rbx], rdx	       110	string3.h	FUNCTION_100	CALL_3
0x40000ba	            0x89c2	                            mov edx, eax	       110	string3.h	FUNCTION_100	CALL_3
0x40000bc	      0x488b4c15f8	          mov rcx, qword [rbp + rdx - 8]	       110	string3.h	FUNCTION_100	CALL_3
0x40000c1	      0x48894c13f8	          mov qword [rbx + rdx - 8], rcx	       110	string3.h	FUNCTION_100	CALL_3
0x40000c6	          0x4829fb	                            sub rbx, rdi	       110	string3.h	FUNCTION_100	CALL_3
0x40000c9	          0x4829de	                            sub rsi, rbx	       110	string3.h	FUNCTION_100	CALL_3
0x40000cc	             0x1c3	                            add ebx, eax	       110	string3.h	FUNCTION_100	CALL_3
0x40000ce	          0xc1eb03	                              shr ebx, 3	       110	string3.h	FUNCTION_100	CALL_3
0x40000d1	            0x89d9	                            mov ecx, ebx	       110	string3.h	FUNCTION_100	CALL_3
0x40000d3	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	       110	string3.h	FUNCTION_100	CALL_3
0x40000d6	        0x4883c408	                              add rsp, 8	      5037	gui.c	FUNCTION_83
0x40000da	              0x5b	                                 pop rbx	      5037	gui.c	FUNCTION_83
0x40000db	              0x5d	                                 pop rbp	      5037	gui.c	FUNCTION_83
0x40000dc	              0xc3	                                     ret	      5037	gui.c	FUNCTION_83
0x40000dd	           0xf1f00	                         nop dword [rax]	      5037	gui.c	FUNCTION_83
0x40000e0	          0x8b5500	                    mov edx, dword [rbp]	       110	string3.h	FUNCTION_100	CALL_3
0x40000e3	            0x89c0	                            mov eax, eax	       110	string3.h	FUNCTION_100	CALL_3
0x40000e5	            0x8913	                    mov dword [rbx], edx	       110	string3.h	FUNCTION_100	CALL_3
0x40000e7	        0x8b5405fc	          mov edx, dword [rbp + rax - 4]	       110	string3.h	FUNCTION_100	CALL_3
0x40000eb	        0x895403fc	          mov dword [rbx + rax - 4], edx	       110	string3.h	FUNCTION_100	CALL_3
0x40000ef	      0xe978ffffff	                           jmp 0x400006c	       110	string3.h	FUNCTION_100	CALL_3
gui_get_shellsize	WHILE,0:SWITCH,0:CALL,0:ELSE,0:DO,0:IF,0:FOR,0:functions,0	6
0x40012d0	    0x486305000000	         movsxd rax, dword [0x040012d7] 	      1556	gui.c	FUNCTION_22
0x40012d7	    0x488905000000	            mov qword [0x040012de], rax 	      1556	gui.c	FUNCTION_22
0x40012de	    0x486305000000	         movsxd rax, dword [0x040012e5] 	      1557	gui.c	FUNCTION_22
0x40012e5	    0x488905000000	            mov qword [0x040012ec], rax 	      1557	gui.c	FUNCTION_22
0x40012ec	      0xb801000000	                              mov eax, 1	      1559	gui.c	FUNCTION_22
0x40012f1	              0xc3	                                     ret	      1559	gui.c	FUNCTION_22
gui_find_bitmap	WHILE,0:SWITCH,0:CALL,3:ELSE,0:DO,0:IF,2:FOR,0:functions,0	36
0x4007930	            0x4154	                                push r12	      5045	gui.c	FUNCTION_84
0x4007932	              0x55	                                push rbp	      5045	gui.c	FUNCTION_84
0x4007933	          0x4989d4	                            mov r12, rdx	      5045	gui.c	FUNCTION_84
0x4007936	              0x53	                                push rbx	      5045	gui.c	FUNCTION_84
0x4007937	          0x4889fd	                            mov rbp, rdi	      5045	gui.c	FUNCTION_84
0x400793a	          0x4889f3	                            mov rbx, rsi	      5045	gui.c	FUNCTION_84
0x400793d	      0xe800000000	                          call 0x4007942	      5046	gui.c	FUNCTION_84	IF_1	CALL_1
0x4007942	    0x483df20f0000	                          cmp rax, 0xff2	      5046	gui.c	FUNCTION_84	IF_1	CALL_1
0x4007948	            0x760e	                           jbe 0x4007958	      5046	gui.c	FUNCTION_84	IF_1	CALL_1
0x400794a	              0x5b	                                 pop rbx	      5053	gui.c	FUNCTION_84
0x400794b	            0x31c0	                            xor eax, eax	      5047	gui.c	FUNCTION_84	IF_1
0x400794d	              0x5d	                                 pop rbp	      5053	gui.c	FUNCTION_84
0x400794e	            0x415c	                                 pop r12	      5053	gui.c	FUNCTION_84
0x4007950	              0xc3	                                     ret	      5053	gui.c	FUNCTION_84
0x4007951	     0xf1f80000000	                         nop dword [rax]	      5053	gui.c	FUNCTION_84
0x4007958	          0x4d89e0	                             mov r8, r12	      5048	gui.c	FUNCTION_84	CALL_2
0x400795b	          0x4889e9	                            mov rcx, rbp	      5048	gui.c	FUNCTION_84	CALL_2
0x400795e	      0xba00000000	                              mov edx, 0	      5048	gui.c	FUNCTION_84	CALL_2
0x4007963	      0xbe00100000	                         mov esi, 0x1000	      5048	gui.c	FUNCTION_84	CALL_2
0x4007968	          0x4889df	                            mov rdi, rbx	      5048	gui.c	FUNCTION_84	CALL_2
0x400796b	            0x31c0	                            xor eax, eax	      5048	gui.c	FUNCTION_84	CALL_2
0x400796d	      0xe800000000	                          call 0x4007972	      5048	gui.c	FUNCTION_84	CALL_2
0x4007972	            0x31f6	                            xor esi, esi	      5049	gui.c	FUNCTION_84	IF_2	CALL_3
0x4007974	          0x4889d9	                            mov rcx, rbx	      5049	gui.c	FUNCTION_84	IF_2	CALL_3
0x4007977	      0xba00000000	                              mov edx, 0	      5049	gui.c	FUNCTION_84	IF_2	CALL_3
0x400797c	          0x4889df	                            mov rdi, rbx	      5049	gui.c	FUNCTION_84	IF_2	CALL_3
0x400797f	      0xe800000000	                          call 0x4007984	      5049	gui.c	FUNCTION_84	IF_2	CALL_3
0x4007984	            0x85c0	                           test eax, eax	      5049	gui.c	FUNCTION_84	IF_2	CALL_3
0x4007986	            0x74c2	                            je 0x400794a	      5049	gui.c	FUNCTION_84	IF_2	CALL_3
0x4007988	            0x31c0	                            xor eax, eax	      5047	gui.c	FUNCTION_84	IF_1
0x400798a	          0x803b00	                       cmp byte [rbx], 0	      5047	gui.c	FUNCTION_84	IF_1
0x400798d	              0x5b	                                 pop rbx	      5053	gui.c	FUNCTION_84
0x400798e	              0x5d	                                 pop rbp	      5053	gui.c	FUNCTION_84
0x400798f	            0x415c	                                 pop r12	      5053	gui.c	FUNCTION_84
0x4007991	           0xf95c0	                                setne al	      5047	gui.c	FUNCTION_84	IF_1
0x4007994	              0xc3	                                     ret	      5053	gui.c	FUNCTION_84
gui_mouse_correct	WHILE,0:SWITCH,0:CALL,8:ELSE,0:DO,0:IF,4:FOR,0:functions,0	150
0x40076a0	              0x55	                                push rbp	      4920	gui.c	FUNCTION_80
0x40076a1	              0x53	                                push rbx	      4920	gui.c	FUNCTION_80
0x40076a2	        0x4883ec28	                           sub rsp, 0x28	      4920	gui.c	FUNCTION_80
0x40076a6	    0x448b05000000	            mov r8d, dword [0x040076ad] 	      4926	gui.c	FUNCTION_80	IF_1
0x40076ad	    0xc70500000000	               mov dword [0x040076b7], 0	      4924	gui.c	FUNCTION_80
0x40076b7	    0x64488b042528	                mov rax, qword fs:[0x28]	      4920	gui.c	FUNCTION_80
0x40076c0	      0x4889442418	             mov qword [rsp + 0x18], rax	      4920	gui.c	FUNCTION_80
0x40076c5	            0x31c0	                            xor eax, eax	      4920	gui.c	FUNCTION_80
0x40076c7	          0x4585c0	                           test r8d, r8d	      4926	gui.c	FUNCTION_80	IF_1
0x40076ca	            0x740a	                            je 0x40076d6	      4926	gui.c	FUNCTION_80	IF_1
0x40076cc	    0x8b3d00000000	            mov edi, dword [0x040076d2] 	      4926	gui.c	FUNCTION_80	IF_1
0x40076d2	            0x85ff	                           test edi, edi	      4926	gui.c	FUNCTION_80	IF_1
0x40076d4	            0x7522	                           jne 0x40076f8	      4926	gui.c	FUNCTION_80	IF_1
0x40076d6	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4942	gui.c	FUNCTION_80
0x40076db	    0x644833042528	                xor rax, qword fs:[0x28]	      4942	gui.c	FUNCTION_80
0x40076e4	     0xf85eb010000	                           jne 0x40078d5	      4942	gui.c	FUNCTION_80
0x40076ea	        0x4883c428	                           add rsp, 0x28	      4942	gui.c	FUNCTION_80
0x40076ee	              0x5b	                                 pop rbx	      4942	gui.c	FUNCTION_80
0x40076ef	              0x5d	                                 pop rbp	      4942	gui.c	FUNCTION_80
0x40076f0	              0xc3	                                     ret	      4942	gui.c	FUNCTION_80
0x40076f1	     0xf1f80000000	                         nop dword [rax]	      4942	gui.c	FUNCTION_80
0x40076f8	      0x488d74240c	                    lea rsi, [rsp + 0xc]	      4929	gui.c	FUNCTION_80	CALL_1
0x40076fd	      0x488d7c2408	                      lea rdi, [rsp + 8]	      4929	gui.c	FUNCTION_80	CALL_1
0x4007702	      0xe800000000	                          call 0x4007707	      4929	gui.c	FUNCTION_80	CALL_1
0x4007707	      0x4863442408	            movsxd rax, dword [rsp + 8] 	      4931	gui.c	FUNCTION_80	IF_2
0x400770c	            0x85c0	                           test eax, eax	      4931	gui.c	FUNCTION_80	IF_2
0x400770e	            0x78c6	                            js 0x40076d6	      4931	gui.c	FUNCTION_80	IF_2
0x4007710	    0x486315000000	         movsxd rdx, dword [0x04007717] 	      4931	gui.c	FUNCTION_80	IF_2
0x4007717	    0x480faf150000	            imul rdx, qword [0x0400771f]	      4931	gui.c	FUNCTION_80	IF_2
0x400771f	          0x4839d0	                            cmp rax, rdx	      4931	gui.c	FUNCTION_80	IF_2
0x4007722	            0x7fb2	                            jg 0x40076d6	      4931	gui.c	FUNCTION_80	IF_2
0x4007724	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x4007728	            0x85c0	                           test eax, eax	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x400772a	            0x78aa	                            js 0x40076d6	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x400772c	    0x2b0500000000	             sub eax, dword [0x04007732]	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x4007732	              0x99	                                     cdq	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x4007733	    0xf73d00000000	                 idiv dword [0x04007739]	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x4007739	            0x89c3	                            mov ebx, eax	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x400773b	      0xe800000000	                          call 0x4007740	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x4007740	            0x39c3	                            cmp ebx, eax	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x4007742	            0x7c92	                            jl 0x40076d6	      4933	gui.c	FUNCTION_80	IF_3	CALL_3
0x4007744	        0x8b6c240c	              mov ebp, dword [rsp + 0xc]	      4934	gui.c	FUNCTION_80	CALL_4
0x4007748	    0x8b3500000000	            mov esi, dword [0x0400774e] 	      4954	gui.c	FUNCTION_81	CALL_1
0x400774e	            0x89e8	                            mov eax, ebp	      4954	gui.c	FUNCTION_81	CALL_1
0x4007750	            0x29f0	                            sub eax, esi	      4954	gui.c	FUNCTION_81	CALL_1
0x4007752	              0x99	                                     cdq	      4954	gui.c	FUNCTION_81	CALL_1
0x4007753	    0xf73d00000000	                 idiv dword [0x04007759]	      4954	gui.c	FUNCTION_81	CALL_1
0x4007759	            0x89c1	                            mov ecx, eax	      4954	gui.c	FUNCTION_81	CALL_1
0x400775b	        0x89442410	             mov dword [rsp + 0x10], eax	      4954	gui.c	FUNCTION_81	CALL_1
0x400775f	        0x8b442408	                mov eax, dword [rsp + 8]	      4955	gui.c	FUNCTION_81	CALL_2
0x4007763	          0xc1e91f	                           shr ecx, 0x1f	      4956	gui.c	FUNCTION_81	IF_1
0x4007766	            0x29f0	                            sub eax, esi	      4955	gui.c	FUNCTION_81	CALL_2
0x4007768	              0x99	                                     cdq	      4955	gui.c	FUNCTION_81	CALL_2
0x4007769	    0xf73d00000000	                 idiv dword [0x0400776f]	      4955	gui.c	FUNCTION_81	CALL_2
0x400776f	            0x84c9	                             test cl, cl	      4956	gui.c	FUNCTION_81	IF_1
0x4007771	        0x89442414	             mov dword [rsp + 0x14], eax	      4955	gui.c	FUNCTION_81	CALL_2
0x4007775	     0xf855bffffff	                           jne 0x40076d6	      4956	gui.c	FUNCTION_81	IF_1
0x400777b	          0xc1e81f	                           shr eax, 0x1f	      4956	gui.c	FUNCTION_81	IF_1
0x400777e	            0x84c0	                             test al, al	      4956	gui.c	FUNCTION_81	IF_1
0x4007780	     0xf8550ffffff	                           jne 0x40076d6	      4956	gui.c	FUNCTION_81	IF_1
0x4007786	      0x488d742414	                   lea rsi, [rsp + 0x14]	      4958	gui.c	FUNCTION_81	CALL_3
0x400778b	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      4958	gui.c	FUNCTION_81	CALL_3
0x4007790	      0xe800000000	                          call 0x4007795	      4958	gui.c	FUNCTION_81	CALL_3
0x4007795	          0x4885c0	                           test rax, rax	      4959	gui.c	FUNCTION_81	IF_2
0x4007798	          0x4889c3	                            mov rbx, rax	      4958	gui.c	FUNCTION_81	CALL_3
0x400779b	     0xf8435ffffff	                            je 0x40076d6	      4959	gui.c	FUNCTION_81	IF_2
0x40077a1	    0x8b0500000000	            mov eax, dword [0x040077a7] 	      4962	gui.c	FUNCTION_81	IF_3
0x40077a7	      0x3d01020000	                          cmp eax, 0x201	      4962	gui.c	FUNCTION_81	IF_3
0x40077ac	     0xf84c3000000	                            je 0x4007875	      4962	gui.c	FUNCTION_81	IF_3
0x40077b2	      0x3d00030000	                          cmp eax, 0x300	      4962	gui.c	FUNCTION_81	IF_3
0x40077b7	     0xf84b8000000	                            je 0x4007875	      4962	gui.c	FUNCTION_81	IF_3
0x40077bd	    0x8b8ba0000000	            mov ecx, dword [rbx + 0xa0] 	      4969	gui.c	FUNCTION_81	ELSE_2	IF_5
0x40077c3	        0x8b542410	            mov edx, dword [rsp + 0x10] 	      4969	gui.c	FUNCTION_81	ELSE_2	IF_5
0x40077c7	            0x39d1	                            cmp ecx, edx	      4969	gui.c	FUNCTION_81	ELSE_2	IF_5
0x40077c9	     0xf8cdb000000	                            jl 0x40078aa	      4969	gui.c	FUNCTION_81	ELSE_2	IF_5
0x40077cf	            0xa808	                              test al, 8	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x40077d1	            0x7534	                           jne 0x4007807	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x40077d3	    0x8bb3b0000000	            mov esi, dword [rbx + 0xb0] 	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x40077d9	            0x85f6	                           test esi, esi	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x40077db	            0x7e10	                           jle 0x40077ed	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x40077dd	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x40077e1	    0x3983ac000000	            cmp dword [rbx + 0xac], eax 	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x40077e7	     0xf84ed000000	                            je 0x40078da	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x40077ed	    0x8b83a4000000	            mov eax, dword [rbx + 0xa4] 	      4974	gui.c	FUNCTION_81	ELSE_4	IF_7
0x40077f3	            0x85c0	                           test eax, eax	      4974	gui.c	FUNCTION_81	ELSE_4	IF_7
0x40077f5	            0x7e10	                           jle 0x4007807	      4974	gui.c	FUNCTION_81	ELSE_4	IF_7
0x40077f7	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      4975	gui.c	FUNCTION_81	ELSE_4	IF_7
0x40077fb	    0x3983a0000000	            cmp dword [rbx + 0xa0], eax 	      4975	gui.c	FUNCTION_81	ELSE_4	IF_7
0x4007801	     0xf84b2000000	                            je 0x40078b9	      4975	gui.c	FUNCTION_81	ELSE_4	IF_7
0x4007807	      0xbffeffffff	                     mov edi, 0xfffffffe	      4978	gui.c	FUNCTION_81	CALL_11
0x400780c	      0xe800000000	                          call 0x4007811	      4978	gui.c	FUNCTION_81	CALL_11
0x4007811	    0x48391d000000	            cmp qword [0x04007818], rbx 	      4935	gui.c	FUNCTION_80	IF_4
0x4007818	     0xf84b8feffff	                            je 0x40076d6	      4935	gui.c	FUNCTION_80	IF_4
0x400781e	      0xe800000000	                          call 0x4007823	      4937	gui.c	FUNCTION_80	IF_4	CALL_5
0x4007823	    0x488b0d000000	            mov rcx, qword [0x0400782a] 	      4939	gui.c	FUNCTION_80	IF_4	CALL_8
0x400782a	    0x8b0500000000	            mov eax, dword [0x04007830] 	      4939	gui.c	FUNCTION_80	IF_4	CALL_8
0x4007830	    0x8bb1a8010000	           mov esi, dword [rcx + 0x1a8] 	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4007836	     0x3b19c000000	             add esi, dword [rcx + 0x9c]	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x400783c	     0x3b1dc000000	             add esi, dword [rcx + 0xdc]	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4007842	    0x8bb9ac000000	            mov edi, dword [rcx + 0xac] 	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4007848	     0x3b9a8000000	             add edi, dword [rcx + 0xa8]	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x400784e	     0xfaf3d000000	            imul edi, dword [0x04007855]	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4007855	            0x89f2	                            mov edx, esi	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4007857	            0x89c6	                            mov esi, eax	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4007859	          0xc1ee1f	                           shr esi, 0x1f	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x400785c	           0xfafd0	                           imul edx, eax	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x400785f	             0x1c6	                            add esi, eax	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4007861	            0x89f0	                            mov eax, esi	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4007863	            0xd1f8	                              sar eax, 1	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4007865	          0x83ef03	                              sub edi, 3	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4007868	          0x8d3402	                    lea esi, [rdx + rax]	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x400786b	      0xe800000000	                          call 0x4007870	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4007870	      0xe961feffff	                           jmp 0x40076d6	      4938	gui.c	FUNCTION_80	IF_4	CALL_7
0x4007875	            0x89e8	                            mov eax, ebp	      4964	gui.c	FUNCTION_81	IF_3	IF_4	CALL_4
0x4007877	    0x2b0500000000	             sub eax, dword [0x0400787d]	      4964	gui.c	FUNCTION_81	IF_3	IF_4	CALL_4
0x400787d	              0x99	                                     cdq	      4964	gui.c	FUNCTION_81	IF_3	IF_4	CALL_4
0x400787e	    0xf73d00000000	                 idiv dword [0x04007884]	      4964	gui.c	FUNCTION_81	IF_3	IF_4	CALL_4
0x4007884	    0x3b0500000000	            cmp eax, dword [0x0400788a] 	      4964	gui.c	FUNCTION_81	IF_3	IF_4	CALL_4
0x400788a	            0x7c0f	                            jl 0x400789b	      4964	gui.c	FUNCTION_81	IF_3	IF_4	CALL_4
0x400788c	      0xbf0f000000	                            mov edi, 0xf	      4965	gui.c	FUNCTION_81	IF_3	CALL_5
0x4007891	      0xe800000000	                          call 0x4007896	      4965	gui.c	FUNCTION_81	IF_3	CALL_5
0x4007896	      0xe976ffffff	                           jmp 0x4007811	      4965	gui.c	FUNCTION_81	IF_3	CALL_5
0x400789b	      0xbf0e000000	                            mov edi, 0xe	      4967	gui.c	FUNCTION_81	IF_3	CALL_6
0x40078a0	      0xe800000000	                          call 0x40078a5	      4967	gui.c	FUNCTION_81	IF_3	CALL_6
0x40078a5	      0xe967ffffff	                           jmp 0x4007811	      4967	gui.c	FUNCTION_81	IF_3	CALL_6
0x40078aa	      0xbf09000000	                              mov edi, 9	      4970	gui.c	FUNCTION_81	ELSE_2	IF_5
0x40078af	      0xe800000000	                          call 0x40078b4	      4970	gui.c	FUNCTION_81	ELSE_2	IF_5
0x40078b4	      0xe958ffffff	                           jmp 0x4007811	      4970	gui.c	FUNCTION_81	ELSE_2	IF_5
0x40078b9	    0x833d00000000	               cmp dword [0x040078c0], 0	      4975	gui.c	FUNCTION_81	ELSE_4	IF_7
0x40078c0	     0xf8541ffffff	                           jne 0x4007807	      4975	gui.c	FUNCTION_81	ELSE_4	IF_7
0x40078c6	      0xbf0a000000	                            mov edi, 0xa	      4976	gui.c	FUNCTION_81	ELSE_4	IF_7
0x40078cb	      0xe800000000	                          call 0x40078d0	      4976	gui.c	FUNCTION_81	ELSE_4	IF_7
0x40078d0	      0xe93cffffff	                           jmp 0x4007811	      4976	gui.c	FUNCTION_81	ELSE_4	IF_7
0x40078d5	      0xe800000000	                          call 0x40078da	      4942	gui.c	FUNCTION_80
0x40078da	            0x39d1	                            cmp ecx, edx	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x40078dc	            0x741c	                            je 0x40078fa	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x40078de	    0x833d00000000	               cmp dword [0x040078e5], 0	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x40078e5	     0xf851cffffff	                           jne 0x4007807	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x40078eb	      0xbf0c000000	                            mov edi, 0xc	      4973	gui.c	FUNCTION_81	ELSE_3	IF_6
0x40078f0	      0xe800000000	                          call 0x40078f5	      4973	gui.c	FUNCTION_81	ELSE_3	IF_6
0x40078f5	      0xe917ffffff	                           jmp 0x4007811	      4973	gui.c	FUNCTION_81	ELSE_3	IF_6
0x40078fa	          0x4889df	                            mov rdi, rbx	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x40078fd	      0xe800000000	                          call 0x4007902	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x4007902	            0x85c0	                           test eax, eax	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x4007904	            0x7509	                           jne 0x400790f	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x4007906	    0x833d00000000	               cmp dword [0x0400790d], 0	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x400790d	            0x74dc	                            je 0x40078eb	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x400790f	    0xf60500000000	               test byte [0x04007916], 8	      4974	gui.c	FUNCTION_81	ELSE_4	IF_7
0x4007916	     0xf84d1feffff	                            je 0x40077ed	      4974	gui.c	FUNCTION_81	ELSE_4	IF_7
0x400791c	      0xe9e6feffff	                           jmp 0x4007807	      4974	gui.c	FUNCTION_81	ELSE_4	IF_7
get_tabline_label	WHILE,0:SWITCH,0:CALL,16:ELSE,1:DO,0:IF,8:FOR,1:functions,0	232
0x4006020	            0x4157	                                push r15	      3734	gui.c	FUNCTION_57
0x4006022	            0x4156	                                push r14	      3734	gui.c	FUNCTION_57
0x4006024	            0x4155	                                push r13	      3734	gui.c	FUNCTION_57
0x4006026	            0x4154	                                push r12	      3734	gui.c	FUNCTION_57
0x4006028	              0x55	                                push rbp	      3734	gui.c	FUNCTION_57
0x4006029	              0x53	                                push rbx	      3734	gui.c	FUNCTION_57
0x400602a	            0x89f5	                            mov ebp, esi	      3734	gui.c	FUNCTION_57
0x400602c	          0x4889fb	                            mov rbx, rdi	      3734	gui.c	FUNCTION_57
0x400602f	    0x4881ec281000	                         sub rsp, 0x1028	      3734	gui.c	FUNCTION_57
0x4006036	    0x64488b042528	                mov rax, qword fs:[0x28]	      3734	gui.c	FUNCTION_57
0x400603f	    0x488984241810	          mov qword [rsp + 0x1018], rax 	      3734	gui.c	FUNCTION_57
0x4006047	            0x31c0	                            xor eax, eax	      3734	gui.c	FUNCTION_57
0x4006049	            0x85f6	                           test esi, esi	      3742	gui.c	FUNCTION_57
0x400604b	     0xf849f010000	                            je 0x40061f0	      3742	gui.c	FUNCTION_57
0x4006051	    0x488b05000000	            mov rax, qword [0x04006058] 	      3743	gui.c	FUNCTION_57	IF_1
0x4006058	          0x803800	                       cmp byte [rax], 0	      3743	gui.c	FUNCTION_57	IF_1
0x400605b	     0xf854f030000	                           jne 0x40063b0	      3743	gui.c	FUNCTION_57	IF_1
0x4006061	    0x483b1d000000	            cmp rbx, qword [0x04006068] 	      3795	gui.c	FUNCTION_57	IF_3	CALL_7
0x4006068	     0xf8402030000	                            je 0x4006370	      3795	gui.c	FUNCTION_57	IF_3	CALL_7
0x400606e	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      3795	gui.c	FUNCTION_57	IF_3	CALL_7
0x4006072	        0x488b7808	                mov rdi, qword [rax + 8]	      3795	gui.c	FUNCTION_57	IF_3	CALL_7
0x4006076	      0xe800000000	                          call 0x400607b	      3795	gui.c	FUNCTION_57	IF_3	CALL_7
0x400607b	            0x85ed	                           test ebp, ebp	      3796	gui.c	FUNCTION_57	IF_3	IF_4
0x400607d	     0xf8405030000	                            je 0x4006388	      3796	gui.c	FUNCTION_57	IF_3	IF_4
0x4006083	    0x483b1d000000	            cmp rbx, qword [0x0400608a] 	      3799	gui.c	FUNCTION_57	IF_3
0x400608a	     0xf8411030000	                            je 0x40063a1	      3799	gui.c	FUNCTION_57	IF_3
0x4006090	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      3799	gui.c	FUNCTION_57	IF_3
0x4006094	          0x4885db	                           test rbx, rbx	      3800	gui.c	FUNCTION_57	IF_3	FOR_1
0x4006097	     0xf8423010000	                            je 0x40061c0	      3800	gui.c	FUNCTION_57	IF_3	FOR_1
0x400609d	            0x31ed	                            xor ebp, ebp	      3800	gui.c	FUNCTION_57	IF_3	FOR_1
0x400609f	          0x4531e4	                          xor r12d, r12d	      3800	gui.c	FUNCTION_57	IF_3	FOR_1
0x40060a2	    0x41bd01000000	                             mov r13d, 1	      3802	gui.c	FUNCTION_57	IF_3	FOR_1	IF_5
0x40060a8	     0xf1f84000000	                   nop dword [rax + rax]	      3802	gui.c	FUNCTION_57	IF_3	FOR_1	IF_5
0x40060b0	        0x488b7b08	                mov rdi, qword [rbx + 8]	      3801	gui.c	FUNCTION_57	IF_3	FOR_1	IF_5	CALL_9
0x40060b4	      0xe800000000	                          call 0x40060b9	      3801	gui.c	FUNCTION_57	IF_3	FOR_1	IF_5	CALL_9
0x40060b9	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      3800	gui.c	FUNCTION_57	IF_3	FOR_1
0x40060bd	            0x85c0	                           test eax, eax	      3802	gui.c	FUNCTION_57	IF_3	FOR_1	IF_5
0x40060bf	        0x450f45e5	                       cmovne r12d, r13d	      3802	gui.c	FUNCTION_57	IF_3	FOR_1	IF_5
0x40060c3	          0x83c501	                              add ebp, 1	      3800	gui.c	FUNCTION_57	IF_3	FOR_1
0x40060c6	          0x4885db	                           test rbx, rbx	      3800	gui.c	FUNCTION_57	IF_3	FOR_1
0x40060c9	            0x75e5	                           jne 0x40060b0	      3800	gui.c	FUNCTION_57	IF_3	FOR_1
0x40060cb	          0x83fd01	                              cmp ebp, 1	      3803	gui.c	FUNCTION_57	IF_3	IF_6
0x40060ce	            0x7f0a	                            jg 0x40060da	      3803	gui.c	FUNCTION_57	IF_3	IF_6
0x40060d0	        0x41f6c401	                            test r12b, 1	      3803	gui.c	FUNCTION_57	IF_3	IF_6
0x40060d4	     0xf84e6000000	                            je 0x40061c0	      3803	gui.c	FUNCTION_57	IF_3	IF_6
0x40060da	          0x83fd01	                              cmp ebp, 1	      3805	gui.c	FUNCTION_57	IF_3	IF_6	IF_7
0x40060dd	     0xf8eed020000	                           jle 0x40063d0	      3805	gui.c	FUNCTION_57	IF_3	IF_6	IF_7
0x40060e3	      0x4c8d6c2410	                   lea r13, [rsp + 0x10]	      3806	gui.c	FUNCTION_57	IF_3	IF_6	CALL_10
0x40060e8	            0x31c0	                            xor eax, eax	      3806	gui.c	FUNCTION_57	IF_3	IF_6	CALL_10
0x40060ea	            0x89e9	                            mov ecx, ebp	      3806	gui.c	FUNCTION_57	IF_3	IF_6	CALL_10
0x40060ec	      0xba00000000	                              mov edx, 0	      3806	gui.c	FUNCTION_57	IF_3	IF_6	CALL_10
0x40060f1	      0xbe28000000	                           mov esi, 0x28	      3806	gui.c	FUNCTION_57	IF_3	IF_6	CALL_10
0x40060f6	          0x4c89ef	                            mov rdi, r13	      3806	gui.c	FUNCTION_57	IF_3	IF_6	CALL_10
0x40060f9	      0xe800000000	                          call 0x40060fe	      3806	gui.c	FUNCTION_57	IF_3	IF_6	CALL_10
0x40060fe	          0x4585e4	                         test r12d, r12d	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x4006101	     0xf85dc020000	                           jne 0x40063e3	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x4006107	          0x4c89e8	                            mov rax, r13	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x400610a	            0x8b08	                    mov ecx, dword [rax]	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x400610c	        0x4883c004	                              add rax, 4	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x4006110	    0x8d91fffefefe	              lea edx, [rcx - 0x1010101]	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x4006116	            0xf7d1	                                 not ecx	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x4006118	            0x21ca	                            and edx, ecx	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x400611a	    0x81e280808080	                     and edx, 0x80808080	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x4006120	            0x74e8	                            je 0x400610a	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x4006122	            0x89d1	                            mov ecx, edx	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x4006124	          0xc1e910	                           shr ecx, 0x10	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x4006127	    0xf7c280800000	                        test edx, 0x8080	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x400612d	           0xf44d1	                          cmove edx, ecx	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x4006130	        0x488d4802	                      lea rcx, [rax + 2]	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x4006134	            0x89d6	                            mov esi, edx	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x4006136	        0x480f44c1	                          cmove rax, rcx	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x400613a	          0x4000d6	                             add sil, dl	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x400613d	        0x4883d803	                              sbb rax, 3	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x4006141	          0x4889c3	                            mov rbx, rax	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x4006144	      0xb820000000	                           mov eax, 0x20	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x4006149	          0x668903	                      mov word [rbx], ax	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x400614c	    0x488b2d000000	            mov rbp, qword [0x04006153] 	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x4006153	          0x4889ef	                            mov rdi, rbp	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x4006156	      0xe800000000	                          call 0x400615b	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x400615b	        0x488d7b01	                      lea rdi, [rbx + 1]	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x400615f	        0x488d5001	                      lea rdx, [rax + 1]	        59	string3.h	FUNCTION_95	CALL_3
0x4006163	          0x4889ee	                            mov rsi, rbp	        59	string3.h	FUNCTION_95	CALL_3
0x4006166	          0x4889f8	                            mov rax, rdi	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x4006169	          0x4c29e8	                            sub rax, r13	      3812	gui.c	FUNCTION_57	IF_3	IF_6	CALL_14
0x400616c	      0x488d7c0500	                    lea rdi, [rbp + rax]	        59	string3.h	FUNCTION_95	CALL_3
0x4006171	      0xe800000000	                          call 0x4006176	        59	string3.h	FUNCTION_95	CALL_3
0x4006176	          0x4c89ea	                            mov rdx, r13	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x4006179	            0x8b0a	                    mov ecx, dword [rdx]	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x400617b	        0x4883c204	                              add rdx, 4	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x400617f	    0x8d81fffefefe	              lea eax, [rcx - 0x1010101]	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x4006185	            0xf7d1	                                 not ecx	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x4006187	            0x21c8	                            and eax, ecx	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x4006189	      0x2580808080	                     and eax, 0x80808080	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x400618e	            0x74e9	                            je 0x4006179	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x4006190	            0x89c1	                            mov ecx, eax	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x4006192	    0x488b3d000000	            mov rdi, qword [0x04006199] 	        59	string3.h	FUNCTION_95	CALL_3
0x4006199	          0xc1e910	                           shr ecx, 0x10	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x400619c	      0xa980800000	                        test eax, 0x8080	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x40061a1	           0xf44c1	                          cmove eax, ecx	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x40061a4	        0x488d4a02	                      lea rcx, [rdx + 2]	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x40061a8	            0x89c6	                            mov esi, eax	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x40061aa	        0x480f44d1	                          cmove rdx, rcx	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x40061ae	          0x4000c6	                             add sil, al	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x40061b1	          0x4c89ee	                            mov rsi, r13	        59	string3.h	FUNCTION_95	CALL_3
0x40061b4	        0x4883da03	                              sbb rdx, 3	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x40061b8	          0x4c29ea	                            sub rdx, r13	      3813	gui.c	FUNCTION_57	IF_3	IF_6	CALL_16
0x40061bb	      0xe800000000	                          call 0x40061c0	        59	string3.h	FUNCTION_95	CALL_3
0x40061c0	    0x488b84241810	          mov rax, qword [rsp + 0x1018] 	      3816	gui.c	FUNCTION_57
0x40061c8	    0x644833042528	                xor rax, qword fs:[0x28]	      3816	gui.c	FUNCTION_57
0x40061d1	     0xf8551020000	                           jne 0x4006428	      3816	gui.c	FUNCTION_57
0x40061d7	    0x4881c4281000	                         add rsp, 0x1028	      3816	gui.c	FUNCTION_57
0x40061de	              0x5b	                                 pop rbx	      3816	gui.c	FUNCTION_57
0x40061df	              0x5d	                                 pop rbp	      3816	gui.c	FUNCTION_57
0x40061e0	            0x415c	                                 pop r12	      3816	gui.c	FUNCTION_57
0x40061e2	            0x415d	                                 pop r13	      3816	gui.c	FUNCTION_57
0x40061e4	            0x415e	                                 pop r14	      3816	gui.c	FUNCTION_57
0x40061e6	            0x415f	                                 pop r15	      3816	gui.c	FUNCTION_57
0x40061e8	              0xc3	                                     ret	      3816	gui.c	FUNCTION_57
0x40061e9	     0xf1f80000000	                         nop dword [rax]	      3816	gui.c	FUNCTION_57
0x40061f0	    0x488b05000000	            mov rax, qword [0x040061f7] 	      3743	gui.c	FUNCTION_57	IF_1
0x40061f7	          0x803800	                       cmp byte [rax], 0	      3743	gui.c	FUNCTION_57	IF_1
0x40061fa	     0xf8461feffff	                            je 0x4006061	      3743	gui.c	FUNCTION_57	IF_1
0x4006200	    0x8b0500000000	            mov eax, dword [0x04006206] 	      3746	gui.c	FUNCTION_57	IF_1
0x4006206	    0x41bc00000000	                             mov r12d, 0	      3742	gui.c	FUNCTION_57
0x400620c	    0x41be00000000	                             mov r14d, 0	      3749	gui.c	FUNCTION_57	IF_1
0x4006212	        0x8944240c	              mov dword [rsp + 0xc], eax	      3746	gui.c	FUNCTION_57	IF_1
0x4006216	          0x4889df	                            mov rdi, rbx	      3754	gui.c	FUNCTION_57	IF_1	CALL_1
0x4006219	    0xc70500000000	               mov dword [0x04006223], 0	      3752	gui.c	FUNCTION_57	IF_1
0x4006223	      0x4c8d6c2410	                   lea r13, [rsp + 0x10]	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x4006228	      0xe800000000	                          call 0x400622d	      3754	gui.c	FUNCTION_57	IF_1	CALL_1
0x400622d	      0xbf09000000	                              mov edi, 9	      3756	gui.c	FUNCTION_57	IF_1	CALL_2
0x4006232	          0x4863f0	                         movsxd rsi, eax	      3754	gui.c	FUNCTION_57	IF_1	CALL_1
0x4006235	    0x488935000000	            mov qword [0x0400623c], rsi 	      3754	gui.c	FUNCTION_57	IF_1	CALL_1
0x400623c	      0xe800000000	                          call 0x4006241	      3756	gui.c	FUNCTION_57	IF_1	CALL_2
0x4006241	            0x31f6	                            xor esi, esi	      3757	gui.c	FUNCTION_57	IF_1	CALL_3
0x4006243	          0x4c89f7	                            mov rdi, r14	      3757	gui.c	FUNCTION_57	IF_1	CALL_3
0x4006246	      0xe800000000	                          call 0x400624b	      3757	gui.c	FUNCTION_57	IF_1	CALL_3
0x400624b	    0x4c8b3d000000	            mov r15, qword [0x04006252] 	      3760	gui.c	FUNCTION_57	IF_1
0x4006252	          0x4189c0	                            mov r8d, eax	      3757	gui.c	FUNCTION_57	IF_1	CALL_3
0x4006255	    0x488b05000000	            mov rax, qword [0x0400625c] 	      3760	gui.c	FUNCTION_57	IF_1
0x400625c	        0x4883ec08	                              sub rsp, 8	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x4006260	          0x4531c9	                            xor r9d, r9d	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x4006263	      0xba00100000	                         mov edx, 0x1000	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x4006268	          0x4c89ee	                            mov rsi, r13	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x400626b	    0x48891d000000	            mov qword [0x04006272], rbx 	      3764	gui.c	FUNCTION_57	IF_1
0x4006272	        0x49894720	             mov qword [r15 + 0x20], rax	      3760	gui.c	FUNCTION_57	IF_1
0x4006276	    0x488b05000000	            mov rax, qword [0x0400627d] 	      3761	gui.c	FUNCTION_57	IF_1
0x400627d	        0x49894728	             mov qword [r15 + 0x28], rax	      3761	gui.c	FUNCTION_57	IF_1
0x4006281	    0x488b05000000	            mov rax, qword [0x04006288] 	      3762	gui.c	FUNCTION_57	IF_1
0x4006288	        0x49894710	             mov qword [r15 + 0x10], rax	      3762	gui.c	FUNCTION_57	IF_1
0x400628c	        0x488b4308	                mov rax, qword [rbx + 8]	      3765	gui.c	FUNCTION_57	IF_1
0x4006290	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3768	gui.c	FUNCTION_57	IF_1
0x4006294	    0x488905000000	            mov qword [0x0400629b], rax 	      3765	gui.c	FUNCTION_57	IF_1
0x400629b	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      3766	gui.c	FUNCTION_57	IF_1
0x400629f	    0x48893d000000	            mov qword [0x040062a6], rdi 	      3768	gui.c	FUNCTION_57	IF_1
0x40062a6	    0x488905000000	            mov qword [0x040062ad], rax 	      3766	gui.c	FUNCTION_57	IF_1
0x40062ad	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      3767	gui.c	FUNCTION_57	IF_1
0x40062b1	    0x488905000000	            mov qword [0x040062b8], rax 	      3767	gui.c	FUNCTION_57	IF_1
0x40062b8	        0x488b4708	                mov rax, qword [rdi + 8]	      3769	gui.c	FUNCTION_57	IF_1
0x40062bc	            0x6a00	                                  push 0	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x40062be	            0x6a00	                                  push 0	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x40062c0	        0x498b0c24	                    mov rcx, qword [r12]	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x40062c4	    0x488905000000	            mov qword [0x040062cb], rax 	      3769	gui.c	FUNCTION_57	IF_1
0x40062cb	    0x488b05000000	            mov rax, qword [0x040062d2] 	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x40062d2	              0x50	                                push rax	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x40062d3	      0xe800000000	                          call 0x40062d8	      3772	gui.c	FUNCTION_57	IF_1	CALL_4
0x40062d8	    0x488b3d000000	            mov rdi, qword [0x040062df] 	       110	string3.h	FUNCTION_100	CALL_3
0x40062df	        0x4883c420	                           add rsp, 0x20	       110	string3.h	FUNCTION_100	CALL_3
0x40062e3	          0x4c89ee	                            mov rsi, r13	       110	string3.h	FUNCTION_100	CALL_3
0x40062e6	      0xe800000000	                          call 0x40062eb	       110	string3.h	FUNCTION_100	CALL_3
0x40062eb	        0x498b4708	                mov rax, qword [r15 + 8]	      3778	gui.c	FUNCTION_57	IF_1
0x40062ef	    0x4c893d000000	            mov qword [0x040062f6], r15 	      3777	gui.c	FUNCTION_57	IF_1
0x40062f6	    0x488905000000	            mov qword [0x040062fd], rax 	      3778	gui.c	FUNCTION_57	IF_1
0x40062fd	        0x498b4720	            mov rax, qword [r15 + 0x20] 	      3779	gui.c	FUNCTION_57	IF_1
0x4006301	    0x488905000000	            mov qword [0x04006308], rax 	      3779	gui.c	FUNCTION_57	IF_1
0x4006308	        0x498b4728	            mov rax, qword [r15 + 0x28] 	      3780	gui.c	FUNCTION_57	IF_1
0x400630c	    0x488905000000	            mov qword [0x04006313], rax 	      3780	gui.c	FUNCTION_57	IF_1
0x4006313	        0x498b4710	            mov rax, qword [r15 + 0x10] 	      3781	gui.c	FUNCTION_57	IF_1
0x4006317	    0x488905000000	            mov qword [0x0400631e], rax 	      3781	gui.c	FUNCTION_57	IF_1
0x400631e	        0x488b4008	                mov rax, qword [rax + 8]	      3782	gui.c	FUNCTION_57	IF_1
0x4006322	    0x488905000000	            mov qword [0x04006329], rax 	      3782	gui.c	FUNCTION_57	IF_1
0x4006329	    0x8b0500000000	            mov eax, dword [0x0400632f] 	      3784	gui.c	FUNCTION_57	IF_1	IF_2
0x400632f	            0x85c0	                           test eax, eax	      3784	gui.c	FUNCTION_57	IF_1	IF_2
0x4006331	     0xf85c9000000	                           jne 0x4006400	      3784	gui.c	FUNCTION_57	IF_1	IF_2
0x4006337	      0x448b7c240c	            mov r15d, dword [rsp + 0xc] 	      3787	gui.c	FUNCTION_57	IF_1
0x400633c	          0x4109c7	                            or r15d, eax	      3787	gui.c	FUNCTION_57	IF_1
0x400633f	        0x498b0424	                    mov rax, qword [r12]	      3787	gui.c	FUNCTION_57	IF_1
0x4006343	    0x44893d000000	           mov dword [0x0400634a], r15d 	      3787	gui.c	FUNCTION_57	IF_1
0x400634a	          0x803800	                       cmp byte [rax], 0	      3792	gui.c	FUNCTION_57	IF_3
0x400634d	     0xf840efdffff	                            je 0x4006061	      3792	gui.c	FUNCTION_57	IF_3
0x4006353	    0x488b05000000	            mov rax, qword [0x0400635a] 	      3792	gui.c	FUNCTION_57	IF_3
0x400635a	          0x803800	                       cmp byte [rax], 0	      3792	gui.c	FUNCTION_57	IF_3
0x400635d	     0xf855dfeffff	                           jne 0x40061c0	      3792	gui.c	FUNCTION_57	IF_3
0x4006363	    0x483b1d000000	            cmp rbx, qword [0x0400636a] 	      3795	gui.c	FUNCTION_57	IF_3	CALL_7
0x400636a	     0xf85fefcffff	                           jne 0x400606e	      3795	gui.c	FUNCTION_57	IF_3	CALL_7
0x4006370	    0x488b3d000000	            mov rdi, qword [0x04006377] 	      3795	gui.c	FUNCTION_57	IF_3	CALL_7
0x4006377	      0xe800000000	                          call 0x400637c	      3795	gui.c	FUNCTION_57	IF_3	CALL_7
0x400637c	            0x85ed	                           test ebp, ebp	      3796	gui.c	FUNCTION_57	IF_3	IF_4
0x400637e	     0xf85fffcffff	                           jne 0x4006083	      3796	gui.c	FUNCTION_57	IF_3	IF_4
0x4006384	         0xf1f4000	                         nop dword [rax]	      3796	gui.c	FUNCTION_57	IF_3	IF_4
0x4006388	    0x488b3d000000	            mov rdi, qword [0x0400638f] 	      3797	gui.c	FUNCTION_57	IF_3	CALL_8
0x400638f	      0xe800000000	                          call 0x4006394	      3797	gui.c	FUNCTION_57	IF_3	CALL_8
0x4006394	    0x483b1d000000	            cmp rbx, qword [0x0400639b] 	      3799	gui.c	FUNCTION_57	IF_3
0x400639b	     0xf85effcffff	                           jne 0x4006090	      3799	gui.c	FUNCTION_57	IF_3
0x40063a1	    0x488b1d000000	            mov rbx, qword [0x040063a8] 	      3799	gui.c	FUNCTION_57	IF_3
0x40063a8	      0xe9e7fcffff	                           jmp 0x4006094	      3799	gui.c	FUNCTION_57	IF_3
0x40063ad	           0xf1f00	                         nop dword [rax]	      3799	gui.c	FUNCTION_57	IF_3
0x40063b0	    0x8b0500000000	            mov eax, dword [0x040063b6] 	      3746	gui.c	FUNCTION_57	IF_1
0x40063b6	    0x41bc00000000	                             mov r12d, 0	      3742	gui.c	FUNCTION_57
0x40063bc	    0x41be00000000	                             mov r14d, 0	      3749	gui.c	FUNCTION_57	IF_1
0x40063c2	        0x8944240c	              mov dword [rsp + 0xc], eax	      3746	gui.c	FUNCTION_57	IF_1
0x40063c6	      0xe94bfeffff	                           jmp 0x4006216	      3746	gui.c	FUNCTION_57	IF_1
0x40063cb	       0xf1f440000	                   nop dword [rax + rax]	      3746	gui.c	FUNCTION_57	IF_1
0x40063d0	          0x4585e4	                         test r12d, r12d	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x40063d3	      0xc644241000	                mov byte [rsp + 0x10], 0	      3808	gui.c	FUNCTION_57	IF_3	IF_6	ELSE_1
0x40063d8	      0x4c8d6c2410	                   lea r13, [rsp + 0x10]	      3808	gui.c	FUNCTION_57	IF_3	IF_6	ELSE_1
0x40063dd	     0xf8424fdffff	                            je 0x4006107	      3809	gui.c	FUNCTION_57	IF_3	IF_6	IF_8
0x40063e3	      0xba28000000	                           mov edx, 0x28	       148	string3.h	FUNCTION_104	CALL_3
0x40063e8	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_104	CALL_3
0x40063ed	          0x4c89ef	                            mov rdi, r13	       148	string3.h	FUNCTION_104	CALL_3
0x40063f0	      0xe800000000	                          call 0x40063f5	       148	string3.h	FUNCTION_104	CALL_3
0x40063f5	      0xe90dfdffff	                           jmp 0x4006107	       148	string3.h	FUNCTION_104	CALL_3
0x40063fa	    0x660f1f440000	                    nop word [rax + rax]	       148	string3.h	FUNCTION_104	CALL_3
0x4006400	    0x41b8fbffffff	                     mov r8d, 0xfffffffb	      3785	gui.c	FUNCTION_57	IF_1	IF_2	CALL_6
0x4006406	      0xb901000000	                              mov ecx, 1	      3785	gui.c	FUNCTION_57	IF_1	IF_2	CALL_6
0x400640b	      0xba00000000	                              mov edx, 0	      3785	gui.c	FUNCTION_57	IF_1	IF_2	CALL_6
0x4006410	      0xbeffffffff	                     mov esi, 0xffffffff	      3785	gui.c	FUNCTION_57	IF_1	IF_2	CALL_6
0x4006415	          0x4c89f7	                            mov rdi, r14	      3785	gui.c	FUNCTION_57	IF_1	IF_2	CALL_6
0x4006418	      0xe800000000	                          call 0x400641d	      3785	gui.c	FUNCTION_57	IF_1	IF_2	CALL_6
0x400641d	    0x8b0500000000	            mov eax, dword [0x04006423] 	      3785	gui.c	FUNCTION_57	IF_1	IF_2	CALL_6
0x4006423	      0xe90fffffff	                           jmp 0x4006337	      3785	gui.c	FUNCTION_57	IF_1	IF_2	CALL_6
0x4006428	      0xe800000000	                          call 0x400642d	      3816	gui.c	FUNCTION_57
gui_update_cursor	WHILE,0:SWITCH,0:CALL,22:ELSE,7:DO,0:IF,35:FOR,0:functions,0	370
0x4003000	            0x4155	                                push r13	      1056	gui.c	FUNCTION_15
0x4003002	            0x4154	                                push r12	      1056	gui.c	FUNCTION_15
0x4003004	              0x55	                                push rbp	      1056	gui.c	FUNCTION_15
0x4003005	              0x53	                                push rbx	      1056	gui.c	FUNCTION_15
0x4003006	        0x4883ec48	                           sub rsp, 0x48	      1056	gui.c	FUNCTION_15
0x400300a	    0x448b05000000	            mov r8d, dword [0x04003011] 	      1073	gui.c	FUNCTION_15	IF_1
0x4003011	    0x64488b042528	                mov rax, qword fs:[0x28]	      1056	gui.c	FUNCTION_15
0x400301a	      0x4889442438	             mov qword [rsp + 0x38], rax	      1056	gui.c	FUNCTION_15
0x400301f	            0x31c0	                            xor eax, eax	      1056	gui.c	FUNCTION_15
0x4003021	    0x48c744240899	 mov qword [rsp + 8], 0xffffffffffffd499	      1063	gui.c	FUNCTION_15
0x400302a	    0x48c744241099	mov qword [rsp + 0x10], 0xffffffffffffd499	      1064	gui.c	FUNCTION_15
0x4003033	          0x4585c0	                           test r8d, r8d	      1073	gui.c	FUNCTION_15	IF_1
0x4003036	            0x740e	                            je 0x4003046	      1073	gui.c	FUNCTION_15	IF_1
0x4003038	    0x8b0500000000	            mov eax, dword [0x0400303e] 	      1073	gui.c	FUNCTION_15	IF_1
0x400303e	    0x3b0500000000	            cmp eax, dword [0x04003044] 	      1073	gui.c	FUNCTION_15	IF_1
0x4003044	            0x7422	                            je 0x4003068	      1073	gui.c	FUNCTION_15	IF_1
0x4003046	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      1318	gui.c	FUNCTION_15
0x400304b	    0x644833042528	                xor rax, qword fs:[0x28]	      1318	gui.c	FUNCTION_15
0x4003054	     0xf859b030000	                           jne 0x40033f5	      1318	gui.c	FUNCTION_15
0x400305a	        0x4883c448	                           add rsp, 0x48	      1318	gui.c	FUNCTION_15
0x400305e	              0x5b	                                 pop rbx	      1318	gui.c	FUNCTION_15
0x400305f	              0x5d	                                 pop rbp	      1318	gui.c	FUNCTION_15
0x4003060	            0x415c	                                 pop r12	      1318	gui.c	FUNCTION_15
0x4003062	            0x415d	                                 pop r13	      1318	gui.c	FUNCTION_15
0x4003064	              0xc3	                                     ret	      1318	gui.c	FUNCTION_15
0x4003065	           0xf1f00	                         nop dword [rax]	      1318	gui.c	FUNCTION_15
0x4003068	    0x8b1500000000	            mov edx, dword [0x0400306e] 	      1074	gui.c	FUNCTION_15	IF_1
0x400306e	    0x3b1500000000	            cmp edx, dword [0x04003074] 	      1074	gui.c	FUNCTION_15	IF_1
0x4003074	            0x75d0	                           jne 0x4003046	      1074	gui.c	FUNCTION_15	IF_1
0x4003076	    0x8b0d00000000	            mov ecx, dword [0x0400307c] 	      1039	gui.c	FUNCTION_14	IF_1
0x400307c	            0x89f3	                            mov ebx, esi	      1039	gui.c	FUNCTION_14	IF_1
0x400307e	            0x39ca	                            cmp edx, ecx	      1039	gui.c	FUNCTION_14	IF_1
0x4003080	            0x7f09	                            jg 0x400308b	      1039	gui.c	FUNCTION_14	IF_1
0x4003082	          0x8d4aff	                      lea ecx, [rdx - 1]	      1040	gui.c	FUNCTION_14	IF_1
0x4003085	    0x890d00000000	            mov dword [0x0400308b], ecx 	      1040	gui.c	FUNCTION_14	IF_1
0x400308b	    0x448b05000000	            mov r8d, dword [0x04003092] 	      1041	gui.c	FUNCTION_14	IF_2
0x4003092	          0x4439c0	                            cmp eax, r8d	      1041	gui.c	FUNCTION_14	IF_2
0x4003095	            0x7f0b	                            jg 0x40030a2	      1041	gui.c	FUNCTION_14	IF_2
0x4003097	        0x448d40ff	                      lea r8d, [rax - 1]	      1042	gui.c	FUNCTION_14	IF_2
0x400309b	    0x448905000000	            mov dword [0x040030a2], r8d 	      1042	gui.c	FUNCTION_14	IF_2
0x40030a2	    0x448b0d000000	            mov r9d, dword [0x040030a9] 	      1043	gui.c	FUNCTION_14	IF_3
0x40030a9	          0x4439ca	                            cmp edx, r9d	      1043	gui.c	FUNCTION_14	IF_3
0x40030ac	            0x7e0e	                           jle 0x40030bc	      1043	gui.c	FUNCTION_14	IF_3
0x40030ae	    0x8b3500000000	            mov esi, dword [0x040030b4] 	      1043	gui.c	FUNCTION_14	IF_3
0x40030b4	            0x39f0	                            cmp eax, esi	      1043	gui.c	FUNCTION_14	IF_3
0x40030b6	     0xf8f8b020000	                            jg 0x4003347	      1043	gui.c	FUNCTION_14	IF_3
0x40030bc	    0xc60500000000	                mov byte [0x040030c3], 0	      2664	gui.c	FUNCTION_40	IF_1
0x40030c3	            0x85c9	                           test ecx, ecx	      1082	gui.c	FUNCTION_15	IF_2	IF_3
0x40030c5	     0xf887bffffff	                            js 0x4003046	      1082	gui.c	FUNCTION_15	IF_2	IF_3
0x40030cb	    0x8b3d00000000	            mov edi, dword [0x040030d1] 	      1085	gui.c	FUNCTION_15	IF_2	IF_4
0x40030d1	    0x8b3500000000	            mov esi, dword [0x040030d7] 	      1085	gui.c	FUNCTION_15	IF_2	IF_4
0x40030d7	            0x39cf	                            cmp edi, ecx	      1085	gui.c	FUNCTION_15	IF_2	IF_4
0x40030d9	            0x750a	                           jne 0x40030e5	      1085	gui.c	FUNCTION_15	IF_2	IF_4
0x40030db	    0x8b0500000000	            mov eax, dword [0x040030e1] 	      1085	gui.c	FUNCTION_15	IF_2	IF_4
0x40030e1	            0x39c6	                            cmp esi, eax	      1085	gui.c	FUNCTION_15	IF_2	IF_4
0x40030e3	            0x7413	                            je 0x40030f8	      1085	gui.c	FUNCTION_15	IF_2	IF_4
0x40030e5	            0x89cf	                            mov edi, ecx	      1086	gui.c	FUNCTION_15	IF_2	CALL_3
0x40030e7	      0xe800000000	                          call 0x40030ec	      1086	gui.c	FUNCTION_15	IF_2	CALL_3
0x40030ec	    0x8b3d00000000	            mov edi, dword [0x040030f2] 	      1086	gui.c	FUNCTION_15	IF_2	CALL_3
0x40030f2	    0x8b0500000000	            mov eax, dword [0x040030f8] 	      1086	gui.c	FUNCTION_15	IF_2	CALL_3
0x40030f8	    0x890500000000	            mov dword [0x040030fe], eax 	      1089	gui.c	FUNCTION_15	IF_2
0x40030fe	    0x8b0500000000	            mov eax, dword [0x04003104] 	      1092	gui.c	FUNCTION_15	IF_2	IF_5
0x4003104	    0x893d00000000	            mov dword [0x0400310a], edi 	      1088	gui.c	FUNCTION_15	IF_2
0x400310a	            0x85c0	                           test eax, eax	      1092	gui.c	FUNCTION_15	IF_2	IF_5
0x400310c	     0xf8434ffffff	                            je 0x4003046	      1092	gui.c	FUNCTION_15	IF_2	IF_5
0x4003112	    0x48833d000000	               cmp qword [0x0400311a], 0	      1092	gui.c	FUNCTION_15	IF_2	IF_5
0x400311a	     0xf8426ffffff	                            je 0x4003046	      1092	gui.c	FUNCTION_15	IF_2	IF_5
0x4003120	            0x85db	                           test ebx, ebx	      1096	gui.c	FUNCTION_15	IF_2	IF_6
0x4003122	     0xf85ad020000	                           jne 0x40033d5	      1096	gui.c	FUNCTION_15	IF_2	IF_6
0x4003128	    0x393d00000000	            cmp dword [0x0400312e], edi 	      1100	gui.c	FUNCTION_15	IF_2	IF_7
0x400312e	     0xf8e12ffffff	                           jle 0x4003046	      1100	gui.c	FUNCTION_15	IF_2	IF_7
0x4003134	    0x8b0500000000	            mov eax, dword [0x0400313a] 	      1100	gui.c	FUNCTION_15	IF_2	IF_7
0x400313a	    0x390500000000	            cmp dword [0x04003140], eax 	      1100	gui.c	FUNCTION_15	IF_2	IF_7
0x4003140	     0xf8d00ffffff	                           jge 0x4003046	      1100	gui.c	FUNCTION_15	IF_2	IF_7
0x4003146	    0xc60500000000	                mov byte [0x0400314d], 1	      1103	gui.c	FUNCTION_15	IF_2
0x400314d	      0xe800000000	                          call 0x4003152	      1110	gui.c	FUNCTION_15	IF_2	IF_8	CALL_5
0x4003152	            0x85c0	                           test eax, eax	      1110	gui.c	FUNCTION_15	IF_2	IF_8	CALL_5
0x4003154	     0xf84da020000	                            je 0x4003434	      1110	gui.c	FUNCTION_15	IF_2	IF_8	CALL_5
0x400315a	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1111	gui.c	FUNCTION_15	IF_2	CALL_6
0x400315f	      0x488d7c2408	                      lea rdi, [rsp + 8]	      1111	gui.c	FUNCTION_15	IF_2	CALL_6
0x4003164	      0xe800000000	                          call 0x4003169	      1111	gui.c	FUNCTION_15	IF_2	CALL_6
0x4003169	          0x4889c3	                            mov rbx, rax	      1111	gui.c	FUNCTION_15	IF_2	CALL_6
0x400316c	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	      1124	gui.c	FUNCTION_15	IF_2	CALL_8
0x4003170	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	      1124	gui.c	FUNCTION_15	IF_2	CALL_8
0x4003174	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      1124	gui.c	FUNCTION_15	IF_2	CALL_8
0x4003178	    0xf60500000000	           test byte [0x0400317f], 0x20 	      1116	gui.c	FUNCTION_15	IF_2	IF_9
0x400317f	          0x8b6b2c	            mov ebp, dword [rbx + 0x2c] 	      1116	gui.c	FUNCTION_15	IF_2	IF_9
0x4003182	    0x48c744241899	mov qword [rsp + 0x18], 0xffffffffffffd499	      1121	gui.c	FUNCTION_15	IF_2
0x400318b	         0xf446b28	           cmove ebp, dword [rbx + 0x28]	      1116	gui.c	FUNCTION_15	IF_2	IF_9
0x400318f	    0x48c744242099	mov qword [rsp + 0x20], 0xffffffffffffd499	      1122	gui.c	FUNCTION_15	IF_2
0x4003198	      0xe800000000	                          call 0x400319d	      1124	gui.c	FUNCTION_15	IF_2	CALL_8
0x400319d	      0x48837b1000	               cmp qword [rbx + 0x10], 0	      1127	gui.c	FUNCTION_15	IF_2	IF_10
0x40031a2	            0x740e	                            je 0x40031b2	      1127	gui.c	FUNCTION_15	IF_2	IF_10
0x40031a4	      0x48837b1800	               cmp qword [rbx + 0x18], 0	      1127	gui.c	FUNCTION_15	IF_2	IF_10
0x40031a9	            0x7407	                            je 0x40031b2	      1127	gui.c	FUNCTION_15	IF_2	IF_10
0x40031ab	      0x48837b2000	               cmp qword [rbx + 0x20], 0	      1128	gui.c	FUNCTION_15	IF_2	IF_10
0x40031b0	            0x7507	                           jne 0x40031b9	      1128	gui.c	FUNCTION_15	IF_2	IF_10
0x40031b2	            0x31ff	                            xor edi, edi	      1129	gui.c	FUNCTION_15	IF_2	CALL_9
0x40031b4	      0xe800000000	                          call 0x40031b9	      1129	gui.c	FUNCTION_15	IF_2	CALL_9
0x40031b9	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1131	gui.c	FUNCTION_15	IF_2	IF_11
0x40031be	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      1131	gui.c	FUNCTION_15	IF_2	IF_11
0x40031c4	     0xf8430030000	                            je 0x40034fa	      1131	gui.c	FUNCTION_15	IF_2	IF_11
0x40031ca	      0x488b542408	                mov rdx, qword [rsp + 8]	      1134	gui.c	FUNCTION_15	IF_2	IF_11
0x40031cf	      0x4889442420	             mov qword [rsp + 0x20], rax	      1135	gui.c	FUNCTION_15	IF_2	IF_11
0x40031d4	          0x4531ed	                          xor r13d, r13d	      1133	gui.c	FUNCTION_15	IF_2	IF_11
0x40031d7	      0x4889542418	             mov qword [rsp + 0x18], rdx	      1134	gui.c	FUNCTION_15	IF_2	IF_11
0x40031dc	    0x48630d000000	         movsxd rcx, dword [0x040031e3] 	      1173	gui.c	FUNCTION_15	IF_2
0x40031e3	    0x488b15000000	            mov rdx, qword [0x040031ea] 	      1173	gui.c	FUNCTION_15	IF_2
0x40031ea	    0x8b0500000000	            mov eax, dword [0x040031f0] 	      1173	gui.c	FUNCTION_15	IF_2
0x40031f0	           0x3048a	            add eax, dword [rdx + rcx*4]	      1173	gui.c	FUNCTION_15	IF_2
0x40031f3	    0x488b15000000	            mov rdx, qword [0x040031fa] 	      1173	gui.c	FUNCTION_15	IF_2
0x40031fa	         0xfb72c42	           movzx ebp, word [rdx + rax*2]	      1173	gui.c	FUNCTION_15	IF_2
0x40031fe	            0x31c0	                            xor eax, eax	      1069	gui.c	FUNCTION_15
0x4003200	    0x81fdff000000	                           cmp ebp, 0xff	      1174	gui.c	FUNCTION_15	IF_2	IF_17
0x4003206	     0xf8f42020000	                            jg 0x400344e	      1174	gui.c	FUNCTION_15	IF_2	IF_17
0x400320c	    0x48817c241899	cmp qword [rsp + 0x18], 0xffffffffffffd499	      1186	gui.c	FUNCTION_15	IF_2	IF_21
0x4003215	     0xf8475020000	                            je 0x4003490	      1186	gui.c	FUNCTION_15	IF_2	IF_21
0x400321b	    0x48817c242099	cmp qword [rsp + 0x20], 0xffffffffffffd499	      1188	gui.c	FUNCTION_15	IF_2	IF_22
0x4003224	            0x7518	                           jne 0x400323e	      1188	gui.c	FUNCTION_15	IF_2	IF_22
0x4003226	    0x488b15000000	            mov rdx, qword [0x0400322d] 	      1189	gui.c	FUNCTION_15	IF_2	IF_22
0x400322d	        0x40f6c501	                             test bpl, 1	      1189	gui.c	FUNCTION_15	IF_2	IF_22
0x4003231	    0x480f44150000	           cmove rdx, qword [0x04003239]	      1189	gui.c	FUNCTION_15	IF_2	IF_22
0x4003239	      0x4889542420	             mov qword [rsp + 0x20], rdx	      1189	gui.c	FUNCTION_15	IF_2	IF_22
0x400323e	          0x4885c0	                           test rax, rax	      1192	gui.c	FUNCTION_15	IF_2	IF_23
0x4003241	     0xf845f030000	                            je 0x40035a6	      1192	gui.c	FUNCTION_15	IF_2	IF_23
0x4003247	            0x89ee	                            mov esi, ebp	      1195	gui.c	FUNCTION_15	IF_2	IF_23
0x4003249	        0x488b5008	                mov rdx, qword [rax + 8]	      1197	gui.c	FUNCTION_15	IF_2	IF_23
0x400324d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1197	gui.c	FUNCTION_15	IF_2	IF_23
0x4003251	          0x83e601	                              and esi, 1	      1195	gui.c	FUNCTION_15	IF_2	IF_23
0x4003254	     0xf84a0010000	                            je 0x40033fa	      1195	gui.c	FUNCTION_15	IF_2	IF_23
0x400325a	    0x4881fa99d4ff	             cmp rdx, 0xffffffffffffd499	      1198	gui.c	FUNCTION_15	IF_2	IF_23	IF_24
0x4003261	    0x488915000000	            mov qword [0x04003268], rdx 	      1198	gui.c	FUNCTION_15	IF_2	IF_23	IF_24
0x4003268	    0x488905000000	            mov qword [0x0400326f], rax 	      1196	gui.c	FUNCTION_15	IF_2	IF_23
0x400326f	     0xf8499030000	                            je 0x400360e	      1198	gui.c	FUNCTION_15	IF_2	IF_23	IF_24
0x4003275	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      1201	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x400327b	     0xf8481030000	                            je 0x4003602	      1201	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x4003281	        0x41f6c501	                            test r13b, 1	      1215	gui.c	FUNCTION_15	IF_2	IF_26
0x4003285	            0x7414	                            je 0x400329b	      1215	gui.c	FUNCTION_15	IF_2	IF_26
0x4003287	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1217	gui.c	FUNCTION_15	IF_2	IF_26
0x400328c	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1218	gui.c	FUNCTION_15	IF_2	IF_26
0x4003291	      0x4889442418	             mov qword [rsp + 0x18], rax	      1219	gui.c	FUNCTION_15	IF_2	IF_26
0x4003296	      0x4889542420	             mov qword [rsp + 0x20], rdx	      1218	gui.c	FUNCTION_15	IF_2	IF_26
0x400329b	    0x833d00000000	               cmp dword [0x040032a2], 0	      1226	gui.c	FUNCTION_15	IF_2	IF_27
0x40032a2	     0xf8443020000	                            je 0x40034eb	      1226	gui.c	FUNCTION_15	IF_2	IF_27
0x40032a8	            0x8b03	                    mov eax, dword [rbx]	      1233	gui.c	FUNCTION_15	IF_2	IF_28
0x40032aa	    0x448b25000000	           mov r12d, dword [0x040032b1] 	      1232	gui.c	FUNCTION_15	IF_2
0x40032b1	            0x85c0	                           test eax, eax	      1233	gui.c	FUNCTION_15	IF_2	IF_28
0x40032b3	     0xf84f4010000	                            je 0x40034ad	      1233	gui.c	FUNCTION_15	IF_2	IF_28
0x40032b9	          0x83f802	                              cmp eax, 2	      1273	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x40032bc	     0xf84e7030000	                            je 0x40036a9	      1273	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x40032c2	    0x8b0500000000	            mov eax, dword [0x040032c8] 	      1280	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x40032c8	      0xb964000000	                           mov ecx, 0x64	      1280	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x40032cd	    0x8b2d00000000	            mov ebp, dword [0x040032d3] 	      1281	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x40032d3	         0xfaf4308	               imul eax, dword [rbx + 8]	      1280	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x40032d7	          0x83c063	                           add eax, 0x63	      1280	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x40032da	              0x99	                                     cdq	      1280	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x40032db	            0xf7f9	                                idiv ecx	      1280	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x40032dd	          0x4189c5	                           mov r13d, eax	      1280	gui.c	FUNCTION_15	IF_2	ELSE_6	ELSE_7
0x40032e0	    0x833d00000000	               cmp dword [0x040032e7], 0	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x40032e7	     0xf852a030000	                           jne 0x4003617	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x40032ed	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      1303	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_21
0x40032f2	          0x4489ee	                           mov esi, r13d	      1303	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_21
0x40032f5	            0x89ef	                            mov edi, ebp	      1303	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_21
0x40032f7	      0xe800000000	                          call 0x40032fc	      1303	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_21
0x40032fc	    0x8b0500000000	            mov eax, dword [0x04003302] 	      1303	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_21
0x4003302	    0x48630d000000	         movsxd rcx, dword [0x04003309] 	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x4003309	    0x488b15000000	            mov rdx, qword [0x04003310] 	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x4003310	            0x89c6	                            mov esi, eax	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x4003312	        0x488d148a	                  lea rdx, [rdx + rcx*4]	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x4003316	    0x488b0d000000	            mov rcx, qword [0x0400331d] 	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x400331d	             0x332	                    add esi, dword [rdx]	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x400331f	         0xfb70c71	           movzx ecx, word [rcx + rsi*2]	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x4003323	      0xbe18000000	                           mov esi, 0x18	      1311	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_22
0x4003328	    0x890d00000000	            mov dword [0x0400332e], ecx 	      1310	gui.c	FUNCTION_15	IF_2	ELSE_6
0x400332e	             0x302	                    add eax, dword [rdx]	      1311	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_22
0x4003330	            0x31c9	                            xor ecx, ecx	      1311	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_22
0x4003332	            0x31d2	                            xor edx, edx	      1311	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_22
0x4003334	            0x89c7	                            mov edi, eax	      1311	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_22
0x4003336	      0xe800000000	                          call 0x400333b	      1311	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_22
0x400333b	    0x448925000000	           mov dword [0x04003342], r12d 	      1316	gui.c	FUNCTION_15	IF_2
0x4003342	      0xe9fffcffff	                           jmp 0x4003046	      1316	gui.c	FUNCTION_15	IF_2
0x4003347	    0x803d00000000	                cmp byte [0x0400334e], 0	      1078	gui.c	FUNCTION_15	IF_2
0x400334e	     0xf846ffdffff	                            je 0x40030c3	      1078	gui.c	FUNCTION_15	IF_2
0x4003354	            0x85ff	                           test edi, edi	      1078	gui.c	FUNCTION_15	IF_2
0x4003356	            0x7509	                           jne 0x4003361	      1078	gui.c	FUNCTION_15	IF_2
0x4003358	          0x4139c9	                            cmp r9d, ecx	      1079	gui.c	FUNCTION_15	IF_2
0x400335b	     0xf8486000000	                            je 0x40033e7	      1079	gui.c	FUNCTION_15	IF_2
0x4003361	    0x8b3d00000000	            mov edi, dword [0x04003367] 	      2721	gui.c	FUNCTION_42	IF_1
0x4003367	            0x85ff	                           test edi, edi	      2721	gui.c	FUNCTION_42	IF_1
0x4003369	     0xf844dfdffff	                            je 0x40030bc	      2721	gui.c	FUNCTION_42	IF_1
0x400336f	    0x48833d000000	               cmp qword [0x04003377], 0	      2721	gui.c	FUNCTION_42	IF_1
0x4003377	     0xf843ffdffff	                            je 0x40030bc	      2721	gui.c	FUNCTION_42	IF_1
0x400337d	    0x41b810000000	                           mov r8d, 0x10	      2721	gui.c	FUNCTION_42	IF_1
0x4003383	            0x89f1	                            mov ecx, esi	      2721	gui.c	FUNCTION_42	IF_1
0x4003385	          0x4489ca	                            mov edx, r9d	      2721	gui.c	FUNCTION_42	IF_1
0x4003388	          0x4489cf	                            mov edi, r9d	      2721	gui.c	FUNCTION_42	IF_1
0x400338b	      0xe8e0f6ffff	        call sym.gui_redraw_block.part.7	      2721	gui.c	FUNCTION_42	IF_1
0x4003390	            0x85c0	                           test eax, eax	      2651	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_4
0x4003392	            0x7436	                            je 0x40033ca	      2651	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_4
0x4003394	    0x8b0500000000	            mov eax, dword [0x0400339a] 	      2653	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4
0x400339a	            0x85c0	                           test eax, eax	      2653	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4
0x400339c	            0x7e2c	                           jle 0x40033ca	      2653	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4
0x400339e	    0x8b1500000000	            mov edx, dword [0x040033a4] 	      2721	gui.c	FUNCTION_42	IF_1
0x40033a4	            0x85d2	                           test edx, edx	      2721	gui.c	FUNCTION_42	IF_1
0x40033a6	            0x7422	                            je 0x40033ca	      2721	gui.c	FUNCTION_42	IF_1
0x40033a8	    0x48833d000000	               cmp qword [0x040033b0], 0	      2721	gui.c	FUNCTION_42	IF_1
0x40033b0	            0x7418	                            je 0x40033ca	      2721	gui.c	FUNCTION_42	IF_1
0x40033b2	    0x8b3d00000000	            mov edi, dword [0x040033b8] 	      2654	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_5
0x40033b8	          0x8d70ff	                      lea esi, [rax - 1]	      2654	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_5
0x40033bb	    0x41b810000000	                           mov r8d, 0x10	      2654	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_5
0x40033c1	            0x89f1	                            mov ecx, esi	      2654	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_5
0x40033c3	            0x89fa	                            mov edx, edi	      2654	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_5
0x40033c5	      0xe8a6f6ffff	        call sym.gui_redraw_block.part.7	      2654	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_5
0x40033ca	    0x8b0d00000000	            mov ecx, dword [0x040033d0] 	      2654	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_5
0x40033d0	      0xe9e7fcffff	                           jmp 0x40030bc	      2654	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_5
0x40033d5	            0x89fe	                            mov esi, edi	      1097	gui.c	FUNCTION_15	IF_2	CALL_4
0x40033d7	      0xe800000000	                          call 0x40033dc	      1097	gui.c	FUNCTION_15	IF_2	CALL_4
0x40033dc	    0x8b3d00000000	            mov edi, dword [0x040033e2] 	      1097	gui.c	FUNCTION_15	IF_2	CALL_4
0x40033e2	      0xe941fdffff	                           jmp 0x4003128	      1097	gui.c	FUNCTION_15	IF_2	CALL_4
0x40033e7	          0x4439c6	                            cmp esi, r8d	      1079	gui.c	FUNCTION_15	IF_2
0x40033ea	     0xf8571ffffff	                           jne 0x4003361	      1079	gui.c	FUNCTION_15	IF_2
0x40033f0	      0xe951fcffff	                           jmp 0x4003046	      1079	gui.c	FUNCTION_15	IF_2
0x40033f5	      0xe800000000	                          call 0x40033fa	      1318	gui.c	FUNCTION_15
0x40033fa	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      1198	gui.c	FUNCTION_15	IF_2	IF_23	IF_24
0x4003400	    0x488905000000	            mov qword [0x04003407], rax 	      1198	gui.c	FUNCTION_15	IF_2	IF_23	IF_24
0x4003407	    0x488915000000	            mov qword [0x0400340e], rdx 	      1196	gui.c	FUNCTION_15	IF_2	IF_23
0x400340e	     0xf84bb010000	                            je 0x40035cf	      1198	gui.c	FUNCTION_15	IF_2	IF_23	IF_24
0x4003414	    0x4881fa99d4ff	             cmp rdx, 0xffffffffffffd499	      1201	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x400341b	     0xf8560feffff	                           jne 0x4003281	      1201	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x4003421	    0x488b05000000	            mov rax, qword [0x04003428] 	      1203	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x4003428	    0x488905000000	            mov qword [0x0400342f], rax 	      1209	gui.c	FUNCTION_15	IF_2	ELSE_4
0x400342f	      0xe94dfeffff	                           jmp 0x4003281	      1209	gui.c	FUNCTION_15	IF_2	ELSE_4
0x4003434	            0x31ff	                            xor edi, edi	      1114	gui.c	FUNCTION_15	IF_2	CALL_7
0x4003436	      0xe800000000	                          call 0x400343b	      1114	gui.c	FUNCTION_15	IF_2	CALL_7
0x400343b	          0x4863d8	                         movsxd rbx, eax	      1114	gui.c	FUNCTION_15	IF_2	CALL_7
0x400343e	        0x48c1e306	                              shl rbx, 6	      1114	gui.c	FUNCTION_15	IF_2	CALL_7
0x4003442	    0x4881c3000000	                              add rbx, 0	      1114	gui.c	FUNCTION_15	IF_2	CALL_7
0x4003449	      0xe91efdffff	                           jmp 0x400316c	      1114	gui.c	FUNCTION_15	IF_2	CALL_7
0x400344e	            0x89ef	                            mov edi, ebp	      1175	gui.c	FUNCTION_15	IF_2	CALL_15
0x4003450	      0xe800000000	                          call 0x4003455	      1175	gui.c	FUNCTION_15	IF_2	CALL_15
0x4003455	          0x4885c0	                           test rax, rax	      1176	gui.c	FUNCTION_15	IF_2	IF_18
0x4003458	     0xf84aefdffff	                            je 0x400320c	      1176	gui.c	FUNCTION_15	IF_2	IF_18
0x400345e	           0xfbf28	                   movsx ebp, word [rax]	      1178	gui.c	FUNCTION_15	IF_2	IF_18
0x4003461	    0x48817c241899	cmp qword [rsp + 0x18], 0xffffffffffffd499	      1179	gui.c	FUNCTION_15	IF_2	IF_18	IF_19
0x400346a	            0x89e9	                            mov ecx, ebp	      1178	gui.c	FUNCTION_15	IF_2	IF_18
0x400346c	     0xf841d010000	                            je 0x400358f	      1179	gui.c	FUNCTION_15	IF_2	IF_18	IF_19
0x4003472	    0x48817c242099	cmp qword [rsp + 0x20], 0xffffffffffffd499	      1182	gui.c	FUNCTION_15	IF_2	IF_18	IF_20
0x400347b	     0xf84f8000000	                            je 0x4003579	      1182	gui.c	FUNCTION_15	IF_2	IF_18	IF_20
0x4003481	    0x48817c241899	cmp qword [rsp + 0x18], 0xffffffffffffd499	      1186	gui.c	FUNCTION_15	IF_2	IF_21
0x400348a	     0xf85b7fdffff	                           jne 0x4003247	      1186	gui.c	FUNCTION_15	IF_2	IF_21
0x4003490	        0x40f6c501	                             test bpl, 1	      1187	gui.c	FUNCTION_15	IF_2	IF_21
0x4003494	    0x488b15000000	            mov rdx, qword [0x0400349b] 	      1187	gui.c	FUNCTION_15	IF_2	IF_21
0x400349b	    0x480f45150000	          cmovne rdx, qword [0x040034a3]	      1187	gui.c	FUNCTION_15	IF_2	IF_21
0x40034a3	      0x4889542418	             mov qword [rsp + 0x18], rdx	      1187	gui.c	FUNCTION_15	IF_2	IF_21
0x40034a8	      0xe96efdffff	                           jmp 0x400321b	      1187	gui.c	FUNCTION_15	IF_2	IF_21
0x40034ad	          0x4489e8	                           mov eax, r13d	      1243	gui.c	FUNCTION_15	IF_2	IF_28
0x40034b0	    0x486315000000	         movsxd rdx, dword [0x040034b7] 	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x40034b7	    0x8b3d00000000	            mov edi, dword [0x040034bd] 	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x40034bd	             0x9e8	                             or eax, ebp	      1243	gui.c	FUNCTION_15	IF_2	IF_28
0x40034bf	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x40034c4	      0xbe14000000	                           mov esi, 0x14	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x40034c9	          0x83e0fe	                     and eax, 0xfffffffe	      1243	gui.c	FUNCTION_15	IF_2	IF_28
0x40034cc	    0x890500000000	            mov dword [0x040034d2], eax 	      1243	gui.c	FUNCTION_15	IF_2	IF_28
0x40034d2	    0x488b05000000	            mov rax, qword [0x040034d9] 	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x40034d9	           0x33c90	            add edi, dword [rax + rdx*4]	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x40034dc	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x40034e1	      0xe800000000	                          call 0x40034e6	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x40034e6	      0xe950feffff	                           jmp 0x400333b	      1261	gui.c	FUNCTION_15	IF_2	IF_28	ELSE_5	CALL_20
0x40034eb	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1228	gui.c	FUNCTION_15	IF_2	IF_27	CALL_16
0x40034f0	      0xe800000000	                          call 0x40034f5	      1228	gui.c	FUNCTION_15	IF_2	IF_27	CALL_16
0x40034f5	      0xe94cfbffff	                           jmp 0x4003046	      1229	gui.c	FUNCTION_15	IF_2	IF_27
0x40034fa	            0x85ed	                           test ebp, ebp	      1139	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12
0x40034fc	    0x41bd01000000	                             mov r13d, 1	      1123	gui.c	FUNCTION_15	IF_2
0x4003502	     0xf8ed4fcffff	                           jle 0x40031dc	      1139	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12
0x4003508	      0x488d542420	                   lea rdx, [rsp + 0x20]	      1141	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	CALL_10
0x400350d	      0x488d742418	                   lea rsi, [rsp + 0x18]	      1141	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	CALL_10
0x4003512	            0x89ef	                            mov edi, ebp	      1141	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	CALL_10
0x4003514	      0xe800000000	                          call 0x4003519	      1141	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	CALL_10
0x4003519	          0x4189c5	                           mov r13d, eax	      1141	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	CALL_10
0x400351c	      0xe800000000	                          call 0x4003521	      1149	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	CALL_11
0x4003521	            0x85c0	                           test eax, eax	      1147	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13
0x4003523	     0xf84b3fcffff	                            je 0x40031dc	      1147	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13
0x4003529	      0xbf00000000	                              mov edi, 0	      1155	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	CALL_13
0x400352e	      0xe800000000	                          call 0x4003533	      1155	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	CALL_13
0x4003533	            0x85c0	                           test eax, eax	      1156	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14
0x4003535	     0xf8ea1fcffff	                           jle 0x40031dc	      1156	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14
0x400353b	      0x488d542430	                   lea rdx, [rsp + 0x30]	      1158	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	CALL_14
0x4003540	      0x488d742428	                   lea rsi, [rsp + 0x28]	      1158	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	CALL_14
0x4003545	            0x89c7	                            mov edi, eax	      1158	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	CALL_14
0x4003547	      0xe800000000	                          call 0x400354c	      1158	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	CALL_14
0x400354c	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      1159	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	IF_15
0x4003551	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      1159	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	IF_15
0x4003557	            0x7405	                            je 0x400355e	      1159	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	IF_15
0x4003559	      0x4889442420	             mov qword [rsp + 0x20], rax	      1160	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	IF_15
0x400355e	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1161	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	IF_16
0x4003563	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      1161	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	IF_16
0x4003569	     0xf846dfcffff	                            je 0x40031dc	      1161	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	IF_16
0x400356f	      0x4889442418	             mov qword [rsp + 0x18], rax	      1162	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	IF_16
0x4003574	      0xe963fcffff	                           jmp 0x40031dc	      1162	gui.c	FUNCTION_15	IF_2	ELSE_3	IF_12	IF_13	IF_14	IF_16
0x4003579	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1184	gui.c	FUNCTION_15	IF_2	IF_18	IF_20
0x400357d	          0x80e101	                               and cl, 1	      1184	gui.c	FUNCTION_15	IF_2	IF_18	IF_20
0x4003580	      0x480f455008	             cmovne rdx, qword [rax + 8]	      1184	gui.c	FUNCTION_15	IF_2	IF_18	IF_20
0x4003585	      0x4889542420	             mov qword [rsp + 0x20], rdx	      1183	gui.c	FUNCTION_15	IF_2	IF_18	IF_20
0x400358a	      0xe97dfcffff	                           jmp 0x400320c	      1183	gui.c	FUNCTION_15	IF_2	IF_18	IF_20
0x400358f	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1181	gui.c	FUNCTION_15	IF_2	IF_18	IF_19
0x4003593	        0x40f6c501	                             test bpl, 1	      1181	gui.c	FUNCTION_15	IF_2	IF_18	IF_19
0x4003597	      0x480f445008	              cmove rdx, qword [rax + 8]	      1181	gui.c	FUNCTION_15	IF_2	IF_18	IF_19
0x400359c	      0x4889542418	             mov qword [rsp + 0x18], rdx	      1180	gui.c	FUNCTION_15	IF_2	IF_18	IF_19
0x40035a1	      0xe9ccfeffff	                           jmp 0x4003472	      1180	gui.c	FUNCTION_15	IF_2	IF_18	IF_19
0x40035a6	        0x40f6c501	                             test bpl, 1	      1208	gui.c	FUNCTION_15	IF_2	ELSE_4
0x40035aa	    0x488b05000000	            mov rax, qword [0x040035b1] 	      1210	gui.c	FUNCTION_15	IF_2	ELSE_4
0x40035b1	    0x488b15000000	            mov rdx, qword [0x040035b8] 	      1210	gui.c	FUNCTION_15	IF_2	ELSE_4
0x40035b8	            0x7509	                           jne 0x40035c3	      1208	gui.c	FUNCTION_15	IF_2	ELSE_4
0x40035ba	          0x4889c1	                            mov rcx, rax	      1208	gui.c	FUNCTION_15	IF_2	ELSE_4
0x40035bd	          0x4889d0	                            mov rax, rdx	      1210	gui.c	FUNCTION_15	IF_2	ELSE_4
0x40035c0	          0x4889ca	                            mov rdx, rcx	      1207	gui.c	FUNCTION_15	IF_2	ELSE_4
0x40035c3	    0x488915000000	            mov qword [0x040035ca], rdx 	      1207	gui.c	FUNCTION_15	IF_2	ELSE_4
0x40035ca	      0xe959feffff	                           jmp 0x4003428	      1207	gui.c	FUNCTION_15	IF_2	ELSE_4
0x40035cf	    0x488b0d000000	            mov rcx, qword [0x040035d6] 	      1200	gui.c	FUNCTION_15	IF_2	IF_23	IF_24
0x40035d6	          0x4889d0	                            mov rax, rdx	      1197	gui.c	FUNCTION_15	IF_2	IF_23
0x40035d9	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      1201	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x40035df	    0x48890d000000	            mov qword [0x040035e6], rcx 	      1199	gui.c	FUNCTION_15	IF_2	IF_23	IF_24
0x40035e6	     0xf8595fcffff	                           jne 0x4003281	      1201	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x40035ec	            0x85f6	                           test esi, esi	      1203	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x40035ee	    0x488b05000000	            mov rax, qword [0x040035f5] 	      1203	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x40035f5	    0x480f45050000	          cmovne rax, qword [0x040035fd]	      1203	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x40035fd	      0xe926feffff	                           jmp 0x4003428	      1203	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x4003602	    0x488b05000000	            mov rax, qword [0x04003609] 	      1203	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x4003609	      0xe91afeffff	                           jmp 0x4003428	      1203	gui.c	FUNCTION_15	IF_2	IF_23	IF_25
0x400360e	    0x488b0d000000	            mov rcx, qword [0x04003615] 	      1200	gui.c	FUNCTION_15	IF_2	IF_23	IF_24
0x4003615	            0xebc2	                           jmp 0x40035d9	      1200	gui.c	FUNCTION_15	IF_2	IF_23	IF_24
0x4003617	    0x486315000000	         movsxd rdx, dword [0x0400361e] 	      1285	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x400361e	    0x488b05000000	            mov rax, qword [0x04003625] 	      1285	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x4003625	    0x8b3500000000	            mov esi, dword [0x0400362b] 	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x400362b	          0x8b0490	            mov eax, dword [rax + rdx*4]	      1285	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x400362e	             0x1c6	                            add esi, eax	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x4003630	     0x30500000000	             add eax, dword [0x04003636]	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x4003636	            0x89c7	                            mov edi, eax	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x4003638	    0xff1500000000	                 call qword [0x0400363e]	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x400363e	          0x83e801	                              sub eax, 1	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x4003641	     0xf8ea6fcffff	                           jle 0x40032ed	      1284	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32
0x4003647	    0x8b0500000000	            mov eax, dword [0x0400364d] 	      1289	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_33
0x400364d	             0x1e8	                            add eax, ebp	      1289	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_33
0x400364f	          0x833b02	                      cmp dword [rbx], 2	      1289	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_33
0x4003652	           0xf45e8	                         cmovne ebp, eax	      1289	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_33
0x4003655	    0x488b05000000	            mov rax, qword [0x0400365c] 	      1291	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x400365c	    0x83b854020000	              cmp dword [rax + 0x254], 0	      1291	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x4003663	     0xf8484fcffff	                            je 0x40032ed	      1291	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x4003669	    0xf60500000000	               test byte [0x04003670], 8	      1291	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x4003670	            0x740d	                            je 0x400367f	      1291	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x4003672	    0x833d00000000	               cmp dword [0x04003679], 0	      1291	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x4003679	     0xf846efcffff	                            je 0x40032ed	      1291	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x400367f	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      1303	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_21
0x4003684	          0x4489ee	                           mov esi, r13d	      1303	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_21
0x4003687	            0x89ef	                            mov edi, ebp	      1303	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_21
0x4003689	    0x830500000000	               add dword [0x04003690], 1	      1298	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_32	IF_34
0x4003690	      0xe800000000	                          call 0x4003695	      1303	gui.c	FUNCTION_15	IF_2	ELSE_6	CALL_21
0x4003695	    0x8b0500000000	            mov eax, dword [0x0400369b] 	      1306	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_35
0x400369b	          0x83e801	                              sub eax, 1	      1306	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_35
0x400369e	    0x890500000000	            mov dword [0x040036a4], eax 	      1306	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_35
0x40036a4	      0xe959fcffff	                           jmp 0x4003302	      1306	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_35
0x40036a9	    0x8b0500000000	            mov eax, dword [0x040036af] 	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x40036af	      0xb964000000	                           mov ecx, 0x64	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x40036b4	    0x448b2d000000	           mov r13d, dword [0x040036bb] 	      1275	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x40036bb	         0xfaf4308	               imul eax, dword [rbx + 8]	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x40036bf	          0x83c063	                           add eax, 0x63	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x40036c2	              0x99	                                     cdq	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x40036c3	            0xf7f9	                                idiv ecx	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x40036c5	            0x89c5	                            mov ebp, eax	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
0x40036c7	      0xe914fcffff	                           jmp 0x40032e0	      1276	gui.c	FUNCTION_15	IF_2	ELSE_6	IF_31
no_console_input	WHILE,0:SWITCH,0:CALL,2:ELSE,0:DO,0:IF,0:FOR,0:functions,0	22
0x4007f10	        0x4883ec08	                              sub rsp, 8	      5110	gui.c	FUNCTION_87
0x4007f14	    0x8b1500000000	            mov edx, dword [0x04007f1a] 	      5113	gui.c	FUNCTION_87	CALL_2
0x4007f1a	            0x85d2	                           test edx, edx	      5113	gui.c	FUNCTION_87	CALL_2
0x4007f1c	            0x740a	                            je 0x4007f28	      5113	gui.c	FUNCTION_87	CALL_2
0x4007f1e	    0x8b0500000000	            mov eax, dword [0x04007f24] 	      5111	gui.c	FUNCTION_87
0x4007f24	            0x85c0	                           test eax, eax	      5111	gui.c	FUNCTION_87
0x4007f26	            0x740b	                            je 0x4007f33	      5111	gui.c	FUNCTION_87
0x4007f28	            0x31ff	                            xor edi, edi	      5113	gui.c	FUNCTION_87	CALL_2
0x4007f2a	      0xe800000000	                          call 0x4007f2f	      5113	gui.c	FUNCTION_87	CALL_2
0x4007f2f	            0x85c0	                           test eax, eax	      5113	gui.c	FUNCTION_87	CALL_2
0x4007f31	            0x740d	                            je 0x4007f40	      5113	gui.c	FUNCTION_87	CALL_2
0x4007f33	            0x31c0	                            xor eax, eax	      5113	gui.c	FUNCTION_87	CALL_2
0x4007f35	        0x4883c408	                              add rsp, 8	      5116	gui.c	FUNCTION_87
0x4007f39	              0xc3	                                     ret	      5116	gui.c	FUNCTION_87
0x4007f3a	    0x660f1f440000	                    nop word [rax + rax]	      5116	gui.c	FUNCTION_87
0x4007f40	      0xbf02000000	                              mov edi, 2	      5113	gui.c	FUNCTION_87	CALL_2
0x4007f45	      0xe800000000	                          call 0x4007f4a	      5113	gui.c	FUNCTION_87	CALL_2
0x4007f4a	            0x85c0	                           test eax, eax	      5113	gui.c	FUNCTION_87	CALL_2
0x4007f4c	           0xf94c0	                                 sete al	      5113	gui.c	FUNCTION_87	CALL_2
0x4007f4f	        0x4883c408	                              add rsp, 8	      5116	gui.c	FUNCTION_87
0x4007f53	           0xfb6c0	                           movzx eax, al	      5113	gui.c	FUNCTION_87	CALL_2
0x4007f56	              0xc3	                                     ret	      5116	gui.c	FUNCTION_87
gui_do_scroll	WHILE,0:SWITCH,0:CALL,14:ELSE,1:DO,0:IF,12:FOR,1:functions,0	125
0x40069c0	            0x4157	                                push r15	      4422	gui.c	FUNCTION_67
0x40069c2	            0x4156	                                push r14	      4422	gui.c	FUNCTION_67
0x40069c4	            0x4155	                                push r13	      4422	gui.c	FUNCTION_67
0x40069c6	            0x4154	                                push r12	      4422	gui.c	FUNCTION_67
0x40069c8	              0x55	                                push rbp	      4422	gui.c	FUNCTION_67
0x40069c9	              0x53	                                push rbx	      4422	gui.c	FUNCTION_67
0x40069ca	        0x4883ec18	                           sub rsp, 0x18	      4422	gui.c	FUNCTION_67
0x40069ce	    0x8b0d00000000	            mov ecx, dword [0x040069d4] 	      4432	gui.c	FUNCTION_67	FOR_1	CALL_1
0x40069d4	    0x4c8b3d000000	            mov r15, qword [0x040069db] 	      4432	gui.c	FUNCTION_67	FOR_1	CALL_1
0x40069db	            0x85c9	                           test ecx, ecx	      4432	gui.c	FUNCTION_67	FOR_1	CALL_1
0x40069dd	            0x7e31	                           jle 0x4006a10	      4432	gui.c	FUNCTION_67	FOR_1	CALL_1
0x40069df	            0x31c0	                            xor eax, eax	      4433	gui.c	FUNCTION_67	FOR_1	IF_1
0x40069e1	            0xeb10	                           jmp 0x40069f3	      4433	gui.c	FUNCTION_67	FOR_1	IF_1
0x40069e3	       0xf1f440000	                   nop dword [rax + rax]	      4433	gui.c	FUNCTION_67	FOR_1	IF_1
0x40069e8	          0x83c001	                              add eax, 1	      4432	gui.c	FUNCTION_67	FOR_1	CALL_1
0x40069eb	        0x4d8b7f20	            mov r15, qword [r15 + 0x20] 	      4432	gui.c	FUNCTION_67	FOR_1	CALL_1
0x40069ef	            0x39c8	                            cmp eax, ecx	      4432	gui.c	FUNCTION_67	FOR_1	CALL_1
0x40069f1	            0x741d	                            je 0x4006a10	      4432	gui.c	FUNCTION_67	FOR_1	CALL_1
0x40069f3	          0x4d85ff	                           test r15, r15	      4433	gui.c	FUNCTION_67	FOR_1	IF_1
0x40069f6	            0x75f0	                           jne 0x40069e8	      4433	gui.c	FUNCTION_67	FOR_1	IF_1
0x40069f8	            0x31c0	                            xor eax, eax	      4437	gui.c	FUNCTION_67	IF_2
0x40069fa	        0x4883c418	                           add rsp, 0x18	      4522	gui.c	FUNCTION_67
0x40069fe	              0x5b	                                 pop rbx	      4522	gui.c	FUNCTION_67
0x40069ff	              0x5d	                                 pop rbp	      4522	gui.c	FUNCTION_67
0x4006a00	            0x415c	                                 pop r12	      4522	gui.c	FUNCTION_67
0x4006a02	            0x415d	                                 pop r13	      4522	gui.c	FUNCTION_67
0x4006a04	            0x415e	                                 pop r14	      4522	gui.c	FUNCTION_67
0x4006a06	            0x415f	                                 pop r15	      4522	gui.c	FUNCTION_67
0x4006a08	              0xc3	                                     ret	      4522	gui.c	FUNCTION_67
0x4006a09	     0xf1f80000000	                         nop dword [rax]	      4522	gui.c	FUNCTION_67
0x4006a10	          0x4d85ff	                           test r15, r15	      4435	gui.c	FUNCTION_67	IF_2
0x4006a13	            0x74e3	                            je 0x40069f8	      4435	gui.c	FUNCTION_67	IF_2
0x4006a15	    0x488b05000000	            mov rax, qword [0x04006a1c] 	      4442	gui.c	FUNCTION_67
0x4006a1c	        0x498b5f78	            mov rbx, qword [r15 + 0x78] 	      4442	gui.c	FUNCTION_67
0x4006a20	        0x488d7801	                      lea rdi, [rax + 1]	      4442	gui.c	FUNCTION_67
0x4006a24	          0x4829df	                            sub rdi, rbx	      4443	gui.c	FUNCTION_67	IF_3
0x4006a27	            0x74cf	                            je 0x40069f8	      4443	gui.c	FUNCTION_67	IF_3
0x4006a29	        0x418b4740	            mov eax, dword [r15 + 0x40] 	      4451	gui.c	FUNCTION_67
0x4006a2d	    0x488b2d000000	            mov rbp, qword [0x04006a34] 	      4446	gui.c	FUNCTION_67
0x4006a34	    0x458baf840000	           mov r13d, dword [r15 + 0x84] 	      4449	gui.c	FUNCTION_67
0x4006a3b	        0x4d8b6738	            mov r12, qword [r15 + 0x38] 	      4451	gui.c	FUNCTION_67
0x4006a3f	        0x458b7744	           mov r14d, dword [r15 + 0x44] 	      4451	gui.c	FUNCTION_67
0x4006a43	    0x4c893d000000	            mov qword [0x04006a4a], r15 	      4452	gui.c	FUNCTION_67
0x4006a4a	        0x8944240c	              mov dword [rsp + 0xc], eax	      4451	gui.c	FUNCTION_67
0x4006a4e	        0x498b4708	                mov rax, qword [r15 + 8]	      4453	gui.c	FUNCTION_67
0x4006a52	    0x488905000000	            mov qword [0x04006a59], rax 	      4453	gui.c	FUNCTION_67
0x4006a59	     0xf8809010000	                            js 0x4006b68	      4454	gui.c	FUNCTION_67	IF_4
0x4006a5f	            0x31f6	                            xor esi, esi	      4457	gui.c	FUNCTION_67	CALL_3
0x4006a61	    0x48833d000000	               cmp qword [0x04006a69], 0	      4457	gui.c	FUNCTION_67	CALL_3
0x4006a69	        0x400f94c6	                                sete sil	      4457	gui.c	FUNCTION_67	CALL_3
0x4006a6d	      0xe800000000	                          call 0x4006a72	      4457	gui.c	FUNCTION_67	CALL_3
0x4006a72	    0x833d00000000	cmp dword [0x04006a79], 0xffffffffffffffff	      4461	gui.c	FUNCTION_67	IF_5
0x4006a79	     0xf840c010000	                            je 0x4006b8b	      4461	gui.c	FUNCTION_67	IF_5
0x4006a7f	        0x493b5f78	            cmp rbx, qword [r15 + 0x78] 	      4464	gui.c	FUNCTION_67	IF_6
0x4006a83	     0xf8417010000	                            je 0x4006ba0	      4464	gui.c	FUNCTION_67	IF_6
0x4006a89	    0x48833d000000	               cmp qword [0x04006a91], 0	      4470	gui.c	FUNCTION_67	IF_6	IF_7
0x4006a91	     0xf8524010000	                           jne 0x4006bbb	      4470	gui.c	FUNCTION_67	IF_6	IF_7
0x4006a97	        0x4d3b6738	            cmp r12, qword [r15 + 0x38] 	      4475	gui.c	FUNCTION_67	IF_6	IF_8
0x4006a9b	            0x7409	                            je 0x4006aa6	      4475	gui.c	FUNCTION_67	IF_6	IF_8
0x4006a9d	        0x418b7f48	            mov edi, dword [r15 + 0x48] 	      4476	gui.c	FUNCTION_67	IF_6	CALL_6
0x4006aa1	      0xe800000000	                          call 0x4006aa6	      4476	gui.c	FUNCTION_67	IF_6	CALL_6
0x4006aa6	        0x498b4778	            mov rax, qword [r15 + 0x78] 	      4477	gui.c	FUNCTION_67	IF_6
0x4006aaa	    0x498987500500	            mov qword [r15 + 0x550], rax	      4477	gui.c	FUNCTION_67	IF_6
0x4006ab1	      0xe800000000	                          call 0x4006ab6	      4481	gui.c	FUNCTION_67	CALL_7
0x4006ab6	        0x493b5f78	            cmp rbx, qword [r15 + 0x78] 	      4490	gui.c	FUNCTION_67	IF_9
0x4006aba	        0x488b4508	                mov rax, qword [rbp + 8]	      4484	gui.c	FUNCTION_67
0x4006abe	    0x48892d000000	            mov qword [0x04006ac5], rbp 	      4483	gui.c	FUNCTION_67
0x4006ac5	    0x488905000000	            mov qword [0x04006acc], rax 	      4484	gui.c	FUNCTION_67
0x4006acc	            0x750f	                           jne 0x4006add	      4490	gui.c	FUNCTION_67	IF_9
0x4006ace	    0x418b87280100	           mov eax, dword [r15 + 0x128] 	      4491	gui.c	FUNCTION_67	IF_9
0x4006ad5	            0x85c0	                           test eax, eax	      4491	gui.c	FUNCTION_67	IF_9
0x4006ad7	     0xf84f3000000	                            je 0x4006bd0	      4491	gui.c	FUNCTION_67	IF_9
0x4006add	      0xe800000000	                          call 0x4006ae2	      4500	gui.c	FUNCTION_67	IF_9	IF_10	CALL_8
0x4006ae2	            0x85c0	                           test eax, eax	      4500	gui.c	FUNCTION_67	IF_9	IF_10	CALL_8
0x4006ae4	      0xb90a000000	                            mov ecx, 0xa	      4497	gui.c	FUNCTION_67	IF_9
0x4006ae9	            0x7410	                            je 0x4006afb	      4500	gui.c	FUNCTION_67	IF_9	IF_10	CALL_8
0x4006aeb	    0x41c787f80000	               mov dword [r15 + 0xf8], 0	      4503	gui.c	FUNCTION_67	IF_9	IF_10
0x4006af6	      0xb928000000	                           mov ecx, 0x28	      4502	gui.c	FUNCTION_67	IF_9	IF_10
0x4006afb	    0x413b8f280100	           cmp ecx, dword [r15 + 0x128] 	      4508	gui.c	FUNCTION_67	IF_9	IF_11
0x4006b02	            0x7e07	                           jle 0x4006b0b	      4508	gui.c	FUNCTION_67	IF_9	IF_11
0x4006b04	    0x41898f280100	            mov dword [r15 + 0x128], ecx	      4509	gui.c	FUNCTION_67	IF_9	IF_11
0x4006b0b	          0x4c89ff	                            mov rdi, r15	      4511	gui.c	FUNCTION_67	IF_9	CALL_10
0x4006b0e	    0x830500000000	               add dword [0x04006b15], 1	      2016	gui.c	FUNCTION_33
0x4006b15	      0xe800000000	                          call 0x4006b1a	      4511	gui.c	FUNCTION_67	IF_9	CALL_10
0x4006b1a	    0x832d00000000	               sub dword [0x04006b21], 1	      2025	gui.c	FUNCTION_34
0x4006b21	      0xe800000000	                          call 0x4006b26	      4517	gui.c	FUNCTION_67	IF_12	CALL_12
0x4006b26	            0x85c0	                           test eax, eax	      4517	gui.c	FUNCTION_67	IF_12	CALL_12
0x4006b28	     0xf85ba000000	                           jne 0x4006be8	      4517	gui.c	FUNCTION_67	IF_12	CALL_12
0x4006b2e	    0x4c393d000000	            cmp qword [0x04006b35], r15 	      4521	gui.c	FUNCTION_67	CALL_14
0x4006b35	     0xf85bdfeffff	                           jne 0x40069f8	      4521	gui.c	FUNCTION_67	CALL_14
0x4006b3b	        0x4d3b6738	            cmp r12, qword [r15 + 0x38] 	      4521	gui.c	FUNCTION_67	CALL_14
0x4006b3f	      0xb801000000	                              mov eax, 1	      4521	gui.c	FUNCTION_67	CALL_14
0x4006b44	     0xf85b0feffff	                           jne 0x40069fa	      4521	gui.c	FUNCTION_67	CALL_14
0x4006b4a	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      4521	gui.c	FUNCTION_67	CALL_14
0x4006b4e	        0x49c1e620	                           shl r14, 0x20	      4521	gui.c	FUNCTION_67	CALL_14
0x4006b52	          0x4909c6	                             or r14, rax	      4521	gui.c	FUNCTION_67	CALL_14
0x4006b55	            0x31c0	                            xor eax, eax	      4437	gui.c	FUNCTION_67	IF_2
0x4006b57	        0x4d397740	            cmp qword [r15 + 0x40], r14 	      4437	gui.c	FUNCTION_67	IF_2
0x4006b5b	           0xf95c0	                                setne al	      4437	gui.c	FUNCTION_67	IF_2
0x4006b5e	      0xe997feffff	                           jmp 0x40069fa	      4437	gui.c	FUNCTION_67	IF_2
0x4006b63	       0xf1f440000	                   nop dword [rax + rax]	      4437	gui.c	FUNCTION_67	IF_2
0x4006b68	            0x31f6	                            xor esi, esi	      4455	gui.c	FUNCTION_67	CALL_2
0x4006b6a	    0x48833d000000	               cmp qword [0x04006b72], 0	      4455	gui.c	FUNCTION_67	CALL_2
0x4006b72	        0x400f94c6	                                sete sil	      4455	gui.c	FUNCTION_67	CALL_2
0x4006b76	          0x48f7df	                                 neg rdi	      4455	gui.c	FUNCTION_67	CALL_2
0x4006b79	      0xe800000000	                          call 0x4006b7e	      4455	gui.c	FUNCTION_67	CALL_2
0x4006b7e	    0x833d00000000	cmp dword [0x04006b85], 0xffffffffffffffff	      4461	gui.c	FUNCTION_67	IF_5
0x4006b85	     0xf85f4feffff	                           jne 0x4006a7f	      4461	gui.c	FUNCTION_67	IF_5
0x4006b8b	        0x493b5f78	            cmp rbx, qword [r15 + 0x78] 	      4464	gui.c	FUNCTION_67	IF_6
0x4006b8f	    0x48c705000000	               mov qword [0x04006b9a], 0	      4462	gui.c	FUNCTION_67	IF_5
0x4006b9a	     0xf85e9feffff	                           jne 0x4006a89	      4464	gui.c	FUNCTION_67	IF_6
0x4006ba0	    0x453baf840000	           cmp r13d, dword [r15 + 0x84] 	      4466	gui.c	FUNCTION_67	IF_6
0x4006ba7	     0xf8404ffffff	                            je 0x4006ab1	      4466	gui.c	FUNCTION_67	IF_6
0x4006bad	    0x48833d000000	               cmp qword [0x04006bb5], 0	      4470	gui.c	FUNCTION_67	IF_6	IF_7
0x4006bb5	     0xf84dcfeffff	                            je 0x4006a97	      4470	gui.c	FUNCTION_67	IF_6	IF_7
0x4006bbb	      0xe800000000	                          call 0x4006bc0	      4472	gui.c	FUNCTION_67	IF_6	IF_7	CALL_4
0x4006bc0	      0xe800000000	                          call 0x4006bc5	      4473	gui.c	FUNCTION_67	IF_6	IF_7	CALL_5
0x4006bc5	      0xe9cdfeffff	                           jmp 0x4006a97	      4473	gui.c	FUNCTION_67	IF_6	IF_7	CALL_5
0x4006bca	    0x660f1f440000	                    nop word [rax + rax]	      4473	gui.c	FUNCTION_67	IF_6	IF_7	CALL_5
0x4006bd0	    0x453baf840000	           cmp r13d, dword [r15 + 0x84] 	      4493	gui.c	FUNCTION_67	IF_9
0x4006bd7	     0xf8500ffffff	                           jne 0x4006add	      4493	gui.c	FUNCTION_67	IF_9
0x4006bdd	      0xe93fffffff	                           jmp 0x4006b21	      4493	gui.c	FUNCTION_67	IF_9
0x4006be2	    0x660f1f440000	                    nop word [rax + rax]	      4493	gui.c	FUNCTION_67	IF_9
0x4006be8	      0xe800000000	                          call 0x4006bed	      4518	gui.c	FUNCTION_67	CALL_13
0x4006bed	      0xe93cffffff	                           jmp 0x4006b2e	      4518	gui.c	FUNCTION_67	CALL_13
gui_check_colors	WHILE,0:SWITCH,0:CALL,2:ELSE,0:DO,0:IF,2:FOR,0:functions,0	59
0x40070f0	    0x488b05000000	            mov rax, qword [0x040070f7] 	      4735	gui.c	FUNCTION_72	IF_1
0x40070f7	    0x483905000000	            cmp qword [0x040070fe], rax 	      4735	gui.c	FUNCTION_72	IF_1
0x40070fe	              0x53	                                push rbx	      4734	gui.c	FUNCTION_72
0x40070ff	            0x740f	                            je 0x4007110	      4735	gui.c	FUNCTION_72	IF_1
0x4007101	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      4735	gui.c	FUNCTION_72	IF_1
0x4007107	            0x7407	                            je 0x4007110	      4735	gui.c	FUNCTION_72	IF_1
0x4007109	              0x5b	                                 pop rbx	      4741	gui.c	FUNCTION_72
0x400710a	              0xc3	                                     ret	      4741	gui.c	FUNCTION_72
0x400710b	       0xf1f440000	                   nop dword [rax + rax]	      4741	gui.c	FUNCTION_72
0x4007110	      0xbf00000000	                              mov edi, 0	      4768	gui.c	FUNCTION_75	CALL_1
0x4007115	      0xe800000000	                          call 0x400711a	      4768	gui.c	FUNCTION_75	CALL_1
0x400711a	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      4770	gui.c	FUNCTION_75	IF_2
0x4007120	          0x4889c3	                            mov rbx, rax	      4768	gui.c	FUNCTION_75	CALL_1
0x4007123	            0x7463	                            je 0x4007188	      4770	gui.c	FUNCTION_75	IF_2
0x4007125	      0xbf00000000	                              mov edi, 0	      4754	gui.c	FUNCTION_74	CALL_3
0x400712a	    0x48891d000000	            mov qword [0x04007131], rbx 	      4753	gui.c	FUNCTION_74	CALL_1
0x4007131	      0xe800000000	                          call 0x4007136	      4754	gui.c	FUNCTION_74	CALL_3
0x4007136	          0x4889c7	                            mov rdi, rax	      4754	gui.c	FUNCTION_74	CALL_3
0x4007139	      0xe800000000	                          call 0x400713e	      4754	gui.c	FUNCTION_74	CALL_3
0x400713e	    0x488b05000000	            mov rax, qword [0x04007145] 	      4738	gui.c	FUNCTION_72	IF_1	IF_2
0x4007145	    0x483905000000	            cmp qword [0x0400714c], rax 	      4738	gui.c	FUNCTION_72	IF_1	IF_2
0x400714c	            0x7408	                            je 0x4007156	      4738	gui.c	FUNCTION_72	IF_1	IF_2
0x400714e	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      4738	gui.c	FUNCTION_72	IF_1	IF_2
0x4007154	            0x75b3	                           jne 0x4007109	      4738	gui.c	FUNCTION_72	IF_1	IF_2
0x4007156	      0xbf00000000	                              mov edi, 0	      4768	gui.c	FUNCTION_75	CALL_1
0x400715b	      0xe800000000	                          call 0x4007160	      4768	gui.c	FUNCTION_75	CALL_1
0x4007160	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      4770	gui.c	FUNCTION_75	IF_2
0x4007166	          0x4889c3	                            mov rbx, rax	      4768	gui.c	FUNCTION_75	CALL_1
0x4007169	            0x744d	                            je 0x40071b8	      4770	gui.c	FUNCTION_75	IF_2
0x400716b	      0xbf00000000	                              mov edi, 0	      4747	gui.c	FUNCTION_73	CALL_3
0x4007170	    0x48891d000000	            mov qword [0x04007177], rbx 	      4746	gui.c	FUNCTION_73	CALL_1
0x4007177	      0xe800000000	                          call 0x400717c	      4747	gui.c	FUNCTION_73	CALL_3
0x400717c	              0x5b	                                 pop rbx	      4741	gui.c	FUNCTION_72
0x400717d	          0x4889c7	                            mov rdi, rax	      4747	gui.c	FUNCTION_73	CALL_3
0x4007180	      0xe900000000	                           jmp 0x4007185	      4747	gui.c	FUNCTION_73	CALL_3
0x4007185	           0xf1f00	                         nop dword [rax]	      4747	gui.c	FUNCTION_73	CALL_3
0x4007188	    0x8b1500000000	            mov edx, dword [0x0400718e] 	      4772	gui.c	FUNCTION_75	IF_2
0x400718e	            0x85d2	                           test edx, edx	      4772	gui.c	FUNCTION_75	IF_2
0x4007190	            0x7493	                            je 0x4007125	      4772	gui.c	FUNCTION_75	IF_2
0x4007192	            0x31ff	                            xor edi, edi	      4775	gui.c	FUNCTION_75	CALL_3
0x4007194	      0xba05000000	                              mov edx, 5	      4775	gui.c	FUNCTION_75	CALL_3
0x4007199	      0xbe00000000	                              mov esi, 0	      4775	gui.c	FUNCTION_75	CALL_3
0x400719e	      0xe800000000	                          call 0x40071a3	      4775	gui.c	FUNCTION_75	CALL_3
0x40071a3	      0xbe00000000	                              mov esi, 0	      4775	gui.c	FUNCTION_75	CALL_3
0x40071a8	          0x4889c7	                            mov rdi, rax	      4775	gui.c	FUNCTION_75	CALL_3
0x40071ab	      0xe800000000	                          call 0x40071b0	      4775	gui.c	FUNCTION_75	CALL_3
0x40071b0	      0xe970ffffff	                           jmp 0x4007125	      4775	gui.c	FUNCTION_75	CALL_3
0x40071b5	           0xf1f00	                         nop dword [rax]	      4775	gui.c	FUNCTION_75	CALL_3
0x40071b8	    0x8b0500000000	            mov eax, dword [0x040071be] 	      4772	gui.c	FUNCTION_75	IF_2
0x40071be	            0x85c0	                           test eax, eax	      4772	gui.c	FUNCTION_75	IF_2
0x40071c0	            0x74a9	                            je 0x400716b	      4772	gui.c	FUNCTION_75	IF_2
0x40071c2	            0x31ff	                            xor edi, edi	      4775	gui.c	FUNCTION_75	CALL_3
0x40071c4	      0xba05000000	                              mov edx, 5	      4775	gui.c	FUNCTION_75	CALL_3
0x40071c9	      0xbe00000000	                              mov esi, 0	      4775	gui.c	FUNCTION_75	CALL_3
0x40071ce	      0xe800000000	                          call 0x40071d3	      4775	gui.c	FUNCTION_75	CALL_3
0x40071d3	      0xbe00000000	                              mov esi, 0	      4775	gui.c	FUNCTION_75	CALL_3
0x40071d8	          0x4889c7	                            mov rdi, rax	      4775	gui.c	FUNCTION_75	CALL_3
0x40071db	      0xe800000000	                          call 0x40071e0	      4775	gui.c	FUNCTION_75	CALL_3
0x40071e0	            0xeb89	                           jmp 0x400716b	      4775	gui.c	FUNCTION_75	CALL_3
gui_init_which_components	WHILE,0:SWITCH,1:CALL,18:ELSE,2:DO,0:IF,25:FOR,3:functions,1	380
0x4005220	            0x4157	                                push r15	      3438	gui.c	FUNCTION_53
0x4005222	            0x4156	                                push r14	      3438	gui.c	FUNCTION_53
0x4005224	            0x4155	                                push r13	      3438	gui.c	FUNCTION_53
0x4005226	            0x4154	                                push r12	      3438	gui.c	FUNCTION_53
0x4005228	              0x55	                                push rbp	      3438	gui.c	FUNCTION_53
0x4005229	              0x53	                                push rbx	      3438	gui.c	FUNCTION_53
0x400522a	        0x4883ec18	                           sub rsp, 0x18	      3438	gui.c	FUNCTION_53
0x400522e	          0x4885ff	                           test rdi, rdi	      3469	gui.c	FUNCTION_53	IF_1
0x4005231	            0x7410	                            je 0x4005243	      3469	gui.c	FUNCTION_53	IF_1
0x4005233	    0x448b05000000	            mov r8d, dword [0x0400523a] 	      3469	gui.c	FUNCTION_53	IF_1
0x400523a	          0x4585c0	                           test r8d, r8d	      3469	gui.c	FUNCTION_53	IF_1
0x400523d	     0xf853d010000	                           jne 0x4005380	      3469	gui.c	FUNCTION_53	IF_1
0x4005243	    0x488b1d000000	            mov rbx, qword [0x0400524a] 	      3469	gui.c	FUNCTION_53	IF_1
0x400524a	    0xc60500000000	                mov byte [0x04005251], 0	      3484	gui.c	FUNCTION_53
0x4005251	    0xc70500000000	               mov dword [0x0400525b], 0	      3488	gui.c	FUNCTION_53	FOR_1
0x400525b	          0x4531ff	                          xor r15d, r15d	      3489	gui.c	FUNCTION_53	FOR_2
0x400525e	    0xc70500000000	               mov dword [0x04005268], 0	      3488	gui.c	FUNCTION_53	FOR_1
0x4005268	    0xc70500000000	               mov dword [0x04005272], 0	      3488	gui.c	FUNCTION_53	FOR_1
0x4005272	          0x4531f6	                          xor r14d, r14d	      3489	gui.c	FUNCTION_53	FOR_2
0x4005275	           0xfb603	                   movzx eax, byte [rbx]	      3489	gui.c	FUNCTION_53	FOR_2
0x4005278	            0x84c0	                             test al, al	      3489	gui.c	FUNCTION_53	FOR_2
0x400527a	            0x742e	                            je 0x40052aa	      3489	gui.c	FUNCTION_53	FOR_2
0x400527c	         0xf1f4000	                         nop dword [rax]	      3489	gui.c	FUNCTION_53	FOR_2
0x4005280	          0x83e84c	                           sub eax, 0x4c	      3490	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x4005283	            0x3c28	                            cmp al, 0x28	      3490	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x4005285	            0x7718	                            ja 0x400529f	      3490	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x4005287	           0xfb6c0	                           movzx eax, al	      3490	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x400528a	    0xff24c5000000	                       jmp qword [rax*8]	      3490	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x4005291	     0xf1f80000000	                         nop dword [rax]	      3490	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x4005298	    0xc60500000000	                mov byte [0x0400529f], 1	      3511	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x400529f	        0x4883c301	                              add rbx, 1	      3489	gui.c	FUNCTION_53	FOR_2
0x40052a3	           0xfb603	                   movzx eax, byte [rbx]	      3489	gui.c	FUNCTION_53	FOR_2
0x40052a6	            0x84c0	                             test al, al	      3489	gui.c	FUNCTION_53	FOR_2
0x40052a8	            0x75d6	                           jne 0x4005280	      3489	gui.c	FUNCTION_53	FOR_2
0x40052aa	    0x8b3500000000	            mov esi, dword [0x040052b0] 	      3537	gui.c	FUNCTION_53	IF_5
0x40052b0	            0x85f6	                           test esi, esi	      3537	gui.c	FUNCTION_53	IF_5
0x40052b2	     0xf8528010000	                           jne 0x40053e0	      3537	gui.c	FUNCTION_53	IF_5
0x40052b8	        0x4883c418	                           add rsp, 0x18	      3672	gui.c	FUNCTION_53
0x40052bc	              0x5b	                                 pop rbx	      3672	gui.c	FUNCTION_53
0x40052bd	              0x5d	                                 pop rbp	      3672	gui.c	FUNCTION_53
0x40052be	            0x415c	                                 pop r12	      3672	gui.c	FUNCTION_53
0x40052c0	            0x415d	                                 pop r13	      3672	gui.c	FUNCTION_53
0x40052c2	            0x415e	                                 pop r14	      3672	gui.c	FUNCTION_53
0x40052c4	            0x415f	                                 pop r15	      3672	gui.c	FUNCTION_53
0x40052c6	              0xc3	                                     ret	      3672	gui.c	FUNCTION_53
0x40052c7	    0x660f1f840000	                    nop word [rax + rax]	      3672	gui.c	FUNCTION_53
0x40052d0	      0xe800000000	                          call 0x40052d5	      3503	gui.c	FUNCTION_53	FOR_2	SWITCH_1	IF_4	CALL_5
0x40052d5	            0x85c0	                           test eax, eax	      3503	gui.c	FUNCTION_53	FOR_2	SWITCH_1	IF_4	CALL_5
0x40052d7	            0x74c6	                            je 0x400529f	      3503	gui.c	FUNCTION_53	FOR_2	SWITCH_1	IF_4	CALL_5
0x40052d9	        0x4883c301	                              add rbx, 1	      3489	gui.c	FUNCTION_53	FOR_2
0x40052dd	    0xc70500000000	               mov dword [0x040052e7], 1	      3504	gui.c	FUNCTION_53	FOR_2	SWITCH_1	IF_4
0x40052e7	           0xfb603	                   movzx eax, byte [rbx]	      3489	gui.c	FUNCTION_53	FOR_2
0x40052ea	            0x84c0	                             test al, al	      3489	gui.c	FUNCTION_53	FOR_2
0x40052ec	            0x7592	                           jne 0x4005280	      3489	gui.c	FUNCTION_53	FOR_2
0x40052ee	            0xebba	                           jmp 0x40052aa	      3489	gui.c	FUNCTION_53	FOR_2
0x40052f0	      0xe800000000	                          call 0x40052f5	      3499	gui.c	FUNCTION_53	FOR_2	SWITCH_1	IF_3	CALL_4
0x40052f5	            0x85c0	                           test eax, eax	      3499	gui.c	FUNCTION_53	FOR_2	SWITCH_1	IF_3	CALL_4
0x40052f7	            0x74a6	                            je 0x400529f	      3499	gui.c	FUNCTION_53	FOR_2	SWITCH_1	IF_3	CALL_4
0x40052f9	        0x4883c301	                              add rbx, 1	      3489	gui.c	FUNCTION_53	FOR_2
0x40052fd	    0xc70500000000	               mov dword [0x04005307], 1	      3500	gui.c	FUNCTION_53	FOR_2	SWITCH_1	IF_3
0x4005307	           0xfb603	                   movzx eax, byte [rbx]	      3489	gui.c	FUNCTION_53	FOR_2
0x400530a	            0x84c0	                             test al, al	      3489	gui.c	FUNCTION_53	FOR_2
0x400530c	     0xf856effffff	                           jne 0x4005280	      3489	gui.c	FUNCTION_53	FOR_2
0x4005312	            0xeb96	                           jmp 0x40052aa	      3489	gui.c	FUNCTION_53	FOR_2
0x4005314	         0xf1f4000	                         nop dword [rax]	      3489	gui.c	FUNCTION_53	FOR_2
0x4005318	        0x4883c301	                              add rbx, 1	      3489	gui.c	FUNCTION_53	FOR_2
0x400531c	           0xfb603	                   movzx eax, byte [rbx]	      3489	gui.c	FUNCTION_53	FOR_2
0x400531f	    0x41be01000000	                             mov r14d, 1	      3519	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x4005325	            0x84c0	                             test al, al	      3489	gui.c	FUNCTION_53	FOR_2
0x4005327	     0xf8553ffffff	                           jne 0x4005280	      3489	gui.c	FUNCTION_53	FOR_2
0x400532d	      0xe978ffffff	                           jmp 0x40052aa	      3489	gui.c	FUNCTION_53	FOR_2
0x4005332	    0x660f1f440000	                    nop word [rax + rax]	      3489	gui.c	FUNCTION_53	FOR_2
0x4005338	        0x4883c301	                              add rbx, 1	      3489	gui.c	FUNCTION_53	FOR_2
0x400533c	    0xc70500000000	               mov dword [0x04005346], 1	      3507	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x4005346	           0xfb603	                   movzx eax, byte [rbx]	      3489	gui.c	FUNCTION_53	FOR_2
0x4005349	            0x84c0	                             test al, al	      3489	gui.c	FUNCTION_53	FOR_2
0x400534b	     0xf852fffffff	                           jne 0x4005280	      3489	gui.c	FUNCTION_53	FOR_2
0x4005351	      0xe954ffffff	                           jmp 0x40052aa	      3489	gui.c	FUNCTION_53	FOR_2
0x4005356	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3489	gui.c	FUNCTION_53	FOR_2
0x4005360	        0x4883c301	                              add rbx, 1	      3489	gui.c	FUNCTION_53	FOR_2
0x4005364	           0xfb603	                   movzx eax, byte [rbx]	      3489	gui.c	FUNCTION_53	FOR_2
0x4005367	    0x41bf01000000	                             mov r15d, 1	      3529	gui.c	FUNCTION_53	FOR_2	SWITCH_1
0x400536d	            0x84c0	                             test al, al	      3489	gui.c	FUNCTION_53	FOR_2
0x400536f	     0xf850bffffff	                           jne 0x4005280	      3489	gui.c	FUNCTION_53	FOR_2
0x4005375	      0xe930ffffff	                           jmp 0x40052aa	      3489	gui.c	FUNCTION_53	FOR_2
0x400537a	    0x660f1f440000	                    nop word [rax + rax]	      3489	gui.c	FUNCTION_53	FOR_2
0x4005380	      0xbe67000000	                           mov esi, 0x67	      3474	gui.c	FUNCTION_53	IF_1	CALL_1
0x4005385	          0x4889fd	                            mov rbp, rdi	      3474	gui.c	FUNCTION_53	IF_1	CALL_1
0x4005388	      0xe800000000	                          call 0x400538d	      3474	gui.c	FUNCTION_53	IF_1	CALL_1
0x400538d	    0x488b3d000000	            mov rdi, qword [0x04005394] 	      3475	gui.c	FUNCTION_53	IF_1	CALL_2
0x4005394	          0x4889c3	                            mov rbx, rax	      3474	gui.c	FUNCTION_53	IF_1	CALL_1
0x4005397	      0xbe67000000	                           mov esi, 0x67	      3475	gui.c	FUNCTION_53	IF_1	CALL_2
0x400539c	      0xe800000000	                          call 0x40053a1	      3475	gui.c	FUNCTION_53	IF_1	CALL_2
0x40053a1	          0x4885db	                           test rbx, rbx	      3476	gui.c	FUNCTION_53	IF_1	IF_2
0x40053a4	    0x488b1d000000	            mov rbx, qword [0x040053ab] 	      3478	gui.c	FUNCTION_53	IF_1	IF_2
0x40053ab	           0xf95c2	                                setne dl	      3476	gui.c	FUNCTION_53	IF_1	IF_2
0x40053ae	          0x4885c0	                           test rax, rax	      3476	gui.c	FUNCTION_53	IF_1	IF_2
0x40053b1	           0xf95c0	                                setne al	      3476	gui.c	FUNCTION_53	IF_1	IF_2
0x40053b4	            0x38c2	                              cmp dl, al	      3476	gui.c	FUNCTION_53	IF_1	IF_2
0x40053b6	     0xf848efeffff	                            je 0x400524a	      3476	gui.c	FUNCTION_53	IF_1	IF_2
0x40053bc	      0xbf3f000000	                           mov edi, 0x3f	      3480	gui.c	FUNCTION_53	IF_1	IF_2	CALL_3
0x40053c1	    0x48892d000000	            mov qword [0x040053c8], rbp 	      3479	gui.c	FUNCTION_53	IF_1	IF_2
0x40053c8	      0xe800000000	                          call 0x40053cd	      3480	gui.c	FUNCTION_53	IF_1	IF_2	CALL_3
0x40053cd	    0x48891d000000	            mov qword [0x040053d4], rbx 	      3481	gui.c	FUNCTION_53	IF_1	IF_2
0x40053d4	      0xe971feffff	                           jmp 0x400524a	      3481	gui.c	FUNCTION_53	IF_1	IF_2
0x40053d9	     0xf1f80000000	                         nop dword [rax]	      3481	gui.c	FUNCTION_53	IF_1	IF_2
0x40053e0	    0x488b3d000000	            mov rdi, qword [0x040053e7] 	      3682	gui.c	FUNCTION_54	CALL_1
0x40053e7	      0xbe65000000	                           mov esi, 0x65	      3682	gui.c	FUNCTION_54	CALL_1
0x40053ec	      0xe800000000	                          call 0x40053f1	      3682	gui.c	FUNCTION_54	CALL_1
0x40053f1	          0x4885c0	                           test rax, rax	      3682	gui.c	FUNCTION_54	CALL_1
0x40053f4	     0xf84ee030000	                            je 0x40057e8	      3682	gui.c	FUNCTION_54	CALL_1
0x40053fa	    0x488b05000000	            mov rax, qword [0x04005401] 	      3693	gui.c	FUNCTION_55	IF_1
0x4005401	          0x4885c0	                           test rax, rax	      3693	gui.c	FUNCTION_55	IF_1
0x4005404	     0xf84de030000	                            je 0x40057e8	      3693	gui.c	FUNCTION_55	IF_1
0x400540a	            0x31db	                            xor ebx, ebx	      3694	gui.c	FUNCTION_55	IF_1
0x400540c	        0x4883f801	                              cmp rax, 1	      3694	gui.c	FUNCTION_55	IF_1
0x4005410	    0xc744240c0100	                mov dword [rsp + 0xc], 1	      3694	gui.c	FUNCTION_55	IF_1
0x4005418	     0xf84fb030000	                            je 0x4005819	      3694	gui.c	FUNCTION_55	IF_1
0x400541e	      0xe800000000	                          call 0x4005423	      3546	gui.c	FUNCTION_53	IF_5	IF_6	CALL_7
0x4005423	            0x85c0	                           test eax, eax	      3546	gui.c	FUNCTION_53	IF_5	IF_6	CALL_7
0x4005425	           0xf94c0	                                 sete al	      3546	gui.c	FUNCTION_53	IF_5	IF_6	CALL_7
0x4005428	            0x38d8	                              cmp al, bl	      3546	gui.c	FUNCTION_53	IF_5	IF_6	CALL_7
0x400542a	     0xf84a0030000	                            je 0x40057d0	      3546	gui.c	FUNCTION_53	IF_5	IF_6	CALL_7
0x4005430	    0x488b1d000000	            mov rbx, qword [0x04005437] 	      3550	gui.c	FUNCTION_53	IF_5	IF_6
0x4005437	      0xe800000000	                          call 0x400543c	      3551	gui.c	FUNCTION_53	IF_5	IF_6	CALL_8
0x400543c	    0x8b0d00000000	            mov ecx, dword [0x04005442] 	      3682	gui.c	FUNCTION_54	CALL_1
0x4005442	          0x4863db	                         movsxd rbx, ebx	      3552	gui.c	FUNCTION_53	IF_5	IF_6
0x4005445	    0x48891d000000	            mov qword [0x0400544c], rbx 	      3552	gui.c	FUNCTION_53	IF_5	IF_6
0x400544c	            0x85c9	                           test ecx, ecx	      3682	gui.c	FUNCTION_54	CALL_1
0x400544e	     0xf85a6030000	                           jne 0x40057fa	      3682	gui.c	FUNCTION_54	CALL_1
0x4005454	    0xc70500000000	               mov dword [0x0400545e], 1	      3557	gui.c	FUNCTION_53	IF_5	IF_6	IF_8
0x400545e	    0xc74424080100	                  mov dword [rsp + 8], 1	      3553	gui.c	FUNCTION_53	IF_5	IF_6
0x4005466	      0xbb00000000	                              mov ebx, 0	      3553	gui.c	FUNCTION_53	IF_5	IF_6
0x400546b	            0x31ed	                            xor ebp, ebp	      3553	gui.c	FUNCTION_53	IF_5	IF_6
0x400546d	    0x8bb3c0000000	            mov esi, dword [rbx + 0xc0] 	      3567	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x4005473	    0x8b04ad000000	                  mov eax, dword [rbp*4]	      3567	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x400547a	          0x4c63e5	                         movsxd r12, ebp	      3567	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x400547d	            0x39c6	                            cmp esi, eax	      3567	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x400547f	     0xf84eb020000	                            je 0x4005770	      3567	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x4005485	        0x4883fd02	                              cmp rbp, 2	      3571	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_10
0x4005489	     0xf84f2030000	                            je 0x4005881	      3571	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_10
0x400548f	    0x4c8b2d000000	            mov r13, qword [0x04005496] 	      3576	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1
0x4005496	          0x4d85ed	                           test r13, r13	      3576	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1
0x4005499	     0xf847e010000	                            je 0x400561d	      3576	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1
0x400549f	          0x4585e4	                         test r12d, r12d	      3576	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1
0x40054a2	     0xf84f2000000	                            je 0x400559a	      3576	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1
0x40054a8	            0xeb41	                           jmp 0x40054eb	      3576	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1
0x40054aa	    0x660f1f440000	                    nop word [rax + rax]	      3576	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1
0x40054b0	    0x418bbdac0000	            mov edi, dword [r13 + 0xac] 	      4384	gui.c	FUNCTION_66
0x40054b7	        0x448d0439	                    lea r8d, [rcx + rdi]	      4384	gui.c	FUNCTION_66
0x40054bb	          0x4139c0	                            cmp r8d, eax	      4384	gui.c	FUNCTION_66
0x40054be	            0x7c58	                            jl 0x4005518	      4384	gui.c	FUNCTION_66
0x40054c0	    0x391500000000	            cmp dword [0x040054c6], edx 	      4388	gui.c	FUNCTION_66	IF_1
0x40054c6	     0xf8491030000	                            je 0x400585d	      4388	gui.c	FUNCTION_66	IF_1
0x40054cc	    0x498dbde01800	                 lea rdi, [r13 + 0x18e0]	      4412	gui.c	FUNCTION_66	CALL_1
0x40054d3	      0xe800000000	                          call 0x40054d8	      4412	gui.c	FUNCTION_66	CALL_1
0x40054d8	        0x4d8b6d20	            mov r13, qword [r13 + 0x20] 	      3576	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1
0x40054dc	          0x4d85ed	                           test r13, r13	      3576	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1
0x40054df	     0xf842b010000	                            je 0x4005610	      3576	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1
0x40054e5	    0x8bb3c0000000	            mov esi, dword [rbx + 0xc0] 	      3576	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1
0x40054eb	    0x488b0d000000	            mov rcx, qword [0x040054f2] 	      4382	gui.c	FUNCTION_66
0x40054f2	    0x8b1500000000	            mov edx, dword [0x040054f8] 	      4388	gui.c	FUNCTION_66	IF_1
0x40054f8	    0x8b81ac000000	            mov eax, dword [rcx + 0xac] 	      4382	gui.c	FUNCTION_66
0x40054fe	            0x89c7	                            mov edi, eax	      4382	gui.c	FUNCTION_66
0x4005500	          0xc1ef1f	                           shr edi, 0x1f	      4382	gui.c	FUNCTION_66
0x4005503	             0x1f8	                            add eax, edi	      4382	gui.c	FUNCTION_66
0x4005505	            0xd1f8	                              sar eax, 1	      4382	gui.c	FUNCTION_66
0x4005507	     0x381a8000000	             add eax, dword [rcx + 0xa8]	      4382	gui.c	FUNCTION_66
0x400550d	    0x418b8da80000	            mov ecx, dword [r13 + 0xa8] 	      4383	gui.c	FUNCTION_66
0x4005514	            0x39c1	                            cmp ecx, eax	      4384	gui.c	FUNCTION_66
0x4005516	            0x7e98	                           jle 0x40054b0	      4384	gui.c	FUNCTION_66
0x4005518	    0x391500000000	            cmp dword [0x0400551e], edx 	      4388	gui.c	FUNCTION_66	IF_1
0x400551e	     0xf8544020000	                           jne 0x4005768	      4388	gui.c	FUNCTION_66	IF_1
0x4005524	    0x4c8b05000000	              mov r8, qword [0x0400552b]	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x400552b	            0x4898	                                    cdqe	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x400552d	          0x4c89c7	                             mov rdi, r8	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x4005530	        0x48c1ef3f	                           shr rdi, 0x3f	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x4005534	          0x4c01c7	                             add rdi, r8	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x4005537	          0x48d1ff	                              sar rdi, 1	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x400553a	          0x4839f8	                            cmp rax, rdi	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x400553d	     0xf8f25020000	                            jg 0x4005768	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x4005543	    0x418bbdac0000	            mov edi, dword [r13 + 0xac] 	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x400554a	             0x1f9	                            add ecx, edi	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x400554c	      0xb800000000	                              mov eax, 0	      4403	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x4005551	          0x4863c9	                         movsxd rcx, ecx	      4407	gui.c	FUNCTION_66	ELSE_1	ELSE_2	IF_5
0x4005554	          0x4c39c1	                             cmp rcx, r8	      4403	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x4005557	           0xf45f0	                         cmovne esi, eax	      4403	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x400555a	      0xe96dffffff	                           jmp 0x40054cc	      4403	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x400555f	              0x90	                                     nop	      4403	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x4005560	    0x418b8dac0000	            mov ecx, dword [r13 + 0xac] 	      4384	gui.c	FUNCTION_66
0x4005567	             0x1f9	                            add ecx, edi	      4384	gui.c	FUNCTION_66
0x4005569	            0x39c8	                            cmp eax, ecx	      4384	gui.c	FUNCTION_66
0x400556b	            0x7f54	                            jg 0x40055c1	      4384	gui.c	FUNCTION_66
0x400556d	    0x8b1500000000	            mov edx, dword [0x04005573] 	      4388	gui.c	FUNCTION_66	IF_1
0x4005573	    0x391500000000	            cmp dword [0x04005579], edx 	      4388	gui.c	FUNCTION_66	IF_1
0x4005579	     0xf84ba020000	                            je 0x4005839	      4388	gui.c	FUNCTION_66	IF_1
0x400557f	    0x498dbd901800	                 lea rdi, [r13 + 0x1890]	      4412	gui.c	FUNCTION_66	CALL_1
0x4005586	      0xe800000000	                          call 0x400558b	      4412	gui.c	FUNCTION_66	CALL_1
0x400558b	        0x4d8b6d20	            mov r13, qword [r13 + 0x20] 	      3576	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1
0x400558f	          0x4d85ed	                           test r13, r13	      3576	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1
0x4005592	            0x747c	                            je 0x4005610	      3576	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1
0x4005594	    0x8bb3c0000000	            mov esi, dword [rbx + 0xc0] 	      3576	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	ELSE_1
0x400559a	    0x488b0d000000	            mov rcx, qword [0x040055a1] 	      4382	gui.c	FUNCTION_66
0x40055a1	    0x8b81ac000000	            mov eax, dword [rcx + 0xac] 	      4382	gui.c	FUNCTION_66
0x40055a7	            0x89c7	                            mov edi, eax	      4382	gui.c	FUNCTION_66
0x40055a9	          0xc1ef1f	                           shr edi, 0x1f	      4382	gui.c	FUNCTION_66
0x40055ac	             0x1f8	                            add eax, edi	      4382	gui.c	FUNCTION_66
0x40055ae	    0x418bbda80000	            mov edi, dword [r13 + 0xa8] 	      4383	gui.c	FUNCTION_66
0x40055b5	            0xd1f8	                              sar eax, 1	      4382	gui.c	FUNCTION_66
0x40055b7	     0x381a8000000	             add eax, dword [rcx + 0xa8]	      4382	gui.c	FUNCTION_66
0x40055bd	            0x39c7	                            cmp edi, eax	      4384	gui.c	FUNCTION_66
0x40055bf	            0x7e9f	                           jle 0x4005560	      4384	gui.c	FUNCTION_66
0x40055c1	    0x8b1500000000	            mov edx, dword [0x040055c7] 	      4388	gui.c	FUNCTION_66	IF_1
0x40055c7	    0x391500000000	            cmp dword [0x040055cd], edx 	      4388	gui.c	FUNCTION_66	IF_1
0x40055cd	            0x7531	                           jne 0x4005600	      4388	gui.c	FUNCTION_66	IF_1
0x40055cf	    0x488b0d000000	            mov rcx, qword [0x040055d6] 	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x40055d6	            0x4898	                                    cdqe	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x40055d8	          0x4989c8	                             mov r8, rcx	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x40055db	        0x49c1e83f	                            shr r8, 0x3f	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x40055df	          0x4c01c1	                             add rcx, r8	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x40055e2	          0x48d1f9	                              sar rcx, 1	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x40055e5	          0x4839c8	                            cmp rax, rcx	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x40055e8	            0x7e16	                           jle 0x4005600	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x40055ea	            0x85ff	                           test edi, edi	      4403	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x40055ec	      0xb800000000	                              mov eax, 0	      4403	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x40055f1	           0xf45f0	                         cmovne esi, eax	      4403	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x40055f4	            0xeb89	                           jmp 0x400557f	      4403	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x40055f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4403	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x4005600	            0x31f6	                            xor esi, esi	      4403	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x4005602	      0xe978ffffff	                           jmp 0x400557f	      4403	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x4005607	    0x660f1f840000	                    nop word [rax + rax]	      4403	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x4005610	    0x8bb3c0000000	            mov esi, dword [rbx + 0xc0] 	      4403	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x4005616	    0x8b04ad000000	                  mov eax, dword [rbp*4]	      4403	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x400561d	            0x39c6	                            cmp esi, eax	      3581	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11
0x400561f	     0xf846b010000	                            je 0x4005790	      3581	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11
0x4005625	      0x834c240802	                   or dword [rsp + 8], 2	      3586	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	ELSE_2
0x400562a	            0x85f6	                           test esi, esi	      3587	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	IF_13
0x400562c	    0x488b15000000	            mov rdx, qword [0x04005633] 	      3587	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	IF_13
0x4005633	            0x7408	                            je 0x400563d	      3587	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	IF_13
0x4005635	    0xc744240c0100	                mov dword [rsp + 0xc], 1	      3588	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	IF_13
0x400563d	    0x8934ad000000	                  mov dword [rbp*4], esi	      3592	gui.c	FUNCTION_53	IF_5	FOR_3
0x4005644	        0x4883c501	                              add rbp, 1	      3592	gui.c	FUNCTION_53	IF_5	FOR_3
0x4005648	        0x4883c304	                              add rbx, 4	      3592	gui.c	FUNCTION_53	IF_5	FOR_3
0x400564c	        0x4883fd03	                              cmp rbp, 3	      3561	gui.c	FUNCTION_53	IF_5	FOR_3
0x4005650	      0x428974a248	     mov dword [rdx + r12*4 + 0x48], esi	      3591	gui.c	FUNCTION_53	IF_5	FOR_3
0x4005655	     0xf8512feffff	                           jne 0x400546d	      3561	gui.c	FUNCTION_53	IF_5	FOR_3
0x400565b	     0xfbe3d000000	           movsx edi, byte [0x04005662] 	      3596	gui.c	FUNCTION_53	IF_5	IF_14
0x4005662	    0x3b3d00000000	            cmp edi, dword [0x04005668] 	      3596	gui.c	FUNCTION_53	IF_5	IF_14
0x4005668	            0x7438	                            je 0x40056a2	      3596	gui.c	FUNCTION_53	IF_5	IF_14
0x400566a	    0x488b1d000000	            mov rbx, qword [0x04005671] 	      3600	gui.c	FUNCTION_53	IF_5	IF_14
0x4005671	      0xe800000000	                          call 0x4005676	      3601	gui.c	FUNCTION_53	IF_5	IF_14	CALL_11
0x4005676	     0xfbe15000000	           movsx edx, byte [0x0400567d] 	      3603	gui.c	FUNCTION_53	IF_5	IF_14
0x400567d	      0x834c240801	                   or dword [rsp + 8], 1	      3604	gui.c	FUNCTION_53	IF_5	IF_14
0x4005682	      0xb801000000	                              mov eax, 1	      3606	gui.c	FUNCTION_53	IF_5	IF_14	IF_15
0x4005687	          0x4863db	                         movsxd rbx, ebx	      3602	gui.c	FUNCTION_53	IF_5	IF_14
0x400568a	    0x48891d000000	            mov qword [0x04005691], rbx 	      3602	gui.c	FUNCTION_53	IF_5	IF_14
0x4005691	            0x84d2	                             test dl, dl	      3606	gui.c	FUNCTION_53	IF_5	IF_14	IF_15
0x4005693	       0xf4444240c	            cmove eax, dword [rsp + 0xc]	      3606	gui.c	FUNCTION_53	IF_5	IF_14	IF_15
0x4005698	    0x891500000000	            mov dword [0x0400569e], edx 	      3603	gui.c	FUNCTION_53	IF_5	IF_14
0x400569e	        0x8944240c	              mov dword [rsp + 0xc], eax	      3606	gui.c	FUNCTION_53	IF_5	IF_14	IF_15
0x40056a2	    0x443935000000	           cmp dword [0x040056a9], r14d 	      3611	gui.c	FUNCTION_53	IF_5	IF_16
0x40056a9	     0xf84f1000000	                            je 0x40057a0	      3611	gui.c	FUNCTION_53	IF_5	IF_16
0x40056af	          0x4489f7	                           mov edi, r14d	      3613	gui.c	FUNCTION_53	IF_5	IF_16	CALL_12
0x40056b2	      0xe800000000	                          call 0x40056b7	      3613	gui.c	FUNCTION_53	IF_5	IF_16	CALL_12
0x40056b7	      0x834c240801	                   or dword [rsp + 8], 1	      3615	gui.c	FUNCTION_53	IF_5	IF_16
0x40056bc	      0xb801000000	                              mov eax, 1	      3617	gui.c	FUNCTION_53	IF_5	IF_16	IF_17
0x40056c1	          0x4585f6	                         test r14d, r14d	      3617	gui.c	FUNCTION_53	IF_5	IF_16	IF_17
0x40056c4	       0xf4444240c	            cmove eax, dword [rsp + 0xc]	      3617	gui.c	FUNCTION_53	IF_5	IF_16	IF_17
0x40056c9	    0x443b3d000000	           cmp r15d, dword [0x040056d0] 	      3631	gui.c	FUNCTION_53	IF_5	IF_20
0x40056d0	    0x448935000000	           mov dword [0x040056d7], r14d 	      3614	gui.c	FUNCTION_53	IF_5	IF_16
0x40056d7	        0x8944240c	              mov dword [rsp + 0xc], eax	      3617	gui.c	FUNCTION_53	IF_5	IF_16	IF_17
0x40056db	     0xf85c8000000	                           jne 0x40057a9	      3631	gui.c	FUNCTION_53	IF_5	IF_20
0x40056e1	      0x448b7c2408	               mov r15d, dword [rsp + 8]	      3646	gui.c	FUNCTION_53	IF_5	IF_21	CALL_15
0x40056e6	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      3646	gui.c	FUNCTION_53	IF_5	IF_21	CALL_15
0x40056ea	            0x31ff	                            xor edi, edi	      3646	gui.c	FUNCTION_53	IF_5	IF_21	CALL_15
0x40056ec	    0x488b1d000000	            mov rbx, qword [0x040056f3] 	      3640	gui.c	FUNCTION_53	IF_5	IF_21
0x40056f3	    0x488b2d000000	            mov rbp, qword [0x040056fa] 	      3641	gui.c	FUNCTION_53	IF_5	IF_21
0x40056fa	          0x4489fa	                           mov edx, r15d	      3646	gui.c	FUNCTION_53	IF_5	IF_21	CALL_15
0x40056fd	      0xe800000000	                          call 0x4005702	      3646	gui.c	FUNCTION_53	IF_5	IF_21	CALL_15
0x4005702	    0x8b0500000000	            mov eax, dword [0x04005708] 	      3659	gui.c	FUNCTION_53	IF_5	IF_21	IF_22
0x4005708	            0x85c0	                           test eax, eax	      3659	gui.c	FUNCTION_53	IF_5	IF_21	IF_22
0x400570a	            0x750b	                           jne 0x4005717	      3659	gui.c	FUNCTION_53	IF_5	IF_21	IF_22
0x400570c	        0x4183ff03	                             cmp r15d, 3	      3659	gui.c	FUNCTION_53	IF_5	IF_21	IF_22
0x4005710	            0x7405	                            je 0x4005717	      3659	gui.c	FUNCTION_53	IF_5	IF_21	IF_22
0x4005712	      0xe800000000	                          call 0x4005717	      3660	gui.c	FUNCTION_53	IF_5	IF_21	CALL_16
0x4005717	      0xf644240801	                  test byte [rsp + 8], 1	      3661	gui.c	FUNCTION_53	IF_5	IF_21	IF_23
0x400571c	            0x7507	                           jne 0x4005725	      3661	gui.c	FUNCTION_53	IF_5	IF_21	IF_23
0x400571e	    0x48892d000000	            mov qword [0x04005725], rbp 	      3662	gui.c	FUNCTION_53	IF_5	IF_21	IF_23
0x4005725	      0xf644240802	                  test byte [rsp + 8], 2	      3663	gui.c	FUNCTION_53	IF_5	IF_21	IF_24
0x400572a	            0x750c	                           jne 0x4005738	      3663	gui.c	FUNCTION_53	IF_5	IF_21	IF_24
0x400572c	    0x48891d000000	            mov qword [0x04005733], rbx 	      3664	gui.c	FUNCTION_53	IF_5	IF_21	IF_24
0x4005733	       0xf1f440000	                   nop dword [rax + rax]	      3664	gui.c	FUNCTION_53	IF_5	IF_21	IF_24
0x4005738	    0x488b05000000	            mov rax, qword [0x0400573f] 	      3669	gui.c	FUNCTION_53	IF_5	IF_25	CALL_17
0x400573f	    0x8b989c000000	            mov ebx, dword [rax + 0x9c] 	      3669	gui.c	FUNCTION_53	IF_5	IF_25	CALL_17
0x4005745	      0xe800000000	                          call 0x400574a	      3669	gui.c	FUNCTION_53	IF_5	IF_25	CALL_17
0x400574a	            0x39c3	                            cmp ebx, eax	      3669	gui.c	FUNCTION_53	IF_5	IF_25	CALL_17
0x400574c	     0xf8466fbffff	                            je 0x40052b8	      3669	gui.c	FUNCTION_53	IF_5	IF_25	CALL_17
0x4005752	        0x4883c418	                           add rsp, 0x18	      3672	gui.c	FUNCTION_53
0x4005756	              0x5b	                                 pop rbx	      3672	gui.c	FUNCTION_53
0x4005757	              0x5d	                                 pop rbp	      3672	gui.c	FUNCTION_53
0x4005758	            0x415c	                                 pop r12	      3672	gui.c	FUNCTION_53
0x400575a	            0x415d	                                 pop r13	      3672	gui.c	FUNCTION_53
0x400575c	            0x415e	                                 pop r14	      3672	gui.c	FUNCTION_53
0x400575e	            0x415f	                                 pop r15	      3672	gui.c	FUNCTION_53
0x4005760	      0xe900000000	                           jmp 0x4005765	      3670	gui.c	FUNCTION_53	IF_5	CALL_18
0x4005765	           0xf1f00	                         nop dword [rax]	      3670	gui.c	FUNCTION_53	IF_5	CALL_18
0x4005768	            0x31f6	                            xor esi, esi	      4403	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x400576a	      0xe95dfdffff	                           jmp 0x40054cc	      4403	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x400576f	              0x90	                                     nop	      4403	gui.c	FUNCTION_66	ELSE_1	IF_3	IF_4
0x4005770	    0x488b15000000	            mov rdx, qword [0x04005777] 	      3569	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x4005777	          0x4863cd	                         movsxd rcx, ebp	      3569	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x400577a	        0x3b748a48	    cmp esi, dword [rdx + rcx*4 + 0x48] 	      3568	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x400577e	     0xf8501fdffff	                           jne 0x4005485	      3568	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x4005784	      0xe9b4feffff	                           jmp 0x400563d	      3568	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x4005789	     0xf1f80000000	                         nop dword [rax]	      3568	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x4005790	    0x488b15000000	            mov rdx, qword [0x04005797] 	      3568	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x4005797	      0xe9a1feffff	                           jmp 0x400563d	      3568	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x400579c	         0xf1f4000	                         nop dword [rax]	      3568	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9
0x40057a0	    0x44393d000000	           cmp dword [0x040057a7], r15d 	      3631	gui.c	FUNCTION_53	IF_5	IF_20
0x40057a7	            0x740f	                            je 0x40057b8	      3631	gui.c	FUNCTION_53	IF_5	IF_20
0x40057a9	          0x4489ff	                           mov edi, r15d	      3633	gui.c	FUNCTION_53	IF_5	IF_20	CALL_14
0x40057ac	      0xe800000000	                          call 0x40057b1	      3633	gui.c	FUNCTION_53	IF_5	IF_20	CALL_14
0x40057b1	    0x44893d000000	           mov dword [0x040057b8], r15d 	      3634	gui.c	FUNCTION_53	IF_5	IF_20
0x40057b8	        0x8b542408	                mov edx, dword [rsp + 8]	      3637	gui.c	FUNCTION_53	IF_5	IF_21
0x40057bc	            0x85d2	                           test edx, edx	      3637	gui.c	FUNCTION_53	IF_5	IF_21
0x40057be	     0xf8474ffffff	                            je 0x4005738	      3637	gui.c	FUNCTION_53	IF_5	IF_21
0x40057c4	      0xe918ffffff	                           jmp 0x40056e1	      3637	gui.c	FUNCTION_53	IF_5	IF_21
0x40057c9	     0xf1f80000000	                         nop dword [rax]	      3637	gui.c	FUNCTION_53	IF_5	IF_21
0x40057d0	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      3540	gui.c	FUNCTION_53	IF_5
0x40057d8	    0xc74424080000	                  mov dword [rsp + 8], 0	      3539	gui.c	FUNCTION_53	IF_5
0x40057e0	      0xe981fcffff	                           jmp 0x4005466	      3539	gui.c	FUNCTION_53	IF_5
0x40057e5	           0xf1f00	                         nop dword [rax]	      3539	gui.c	FUNCTION_53	IF_5
0x40057e8	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      3693	gui.c	FUNCTION_55	IF_1
0x40057f0	      0xbb01000000	                              mov ebx, 1	      3693	gui.c	FUNCTION_55	IF_1
0x40057f5	      0xe924fcffff	                           jmp 0x400541e	      3693	gui.c	FUNCTION_55	IF_1
0x40057fa	    0x488b3d000000	            mov rdi, qword [0x04005801] 	      3682	gui.c	FUNCTION_54	CALL_1
0x4005801	      0xbe65000000	                           mov esi, 0x65	      3682	gui.c	FUNCTION_54	CALL_1
0x4005806	      0xe800000000	                          call 0x400580b	      3682	gui.c	FUNCTION_54	CALL_1
0x400580b	          0x4885c0	                           test rax, rax	      3682	gui.c	FUNCTION_54	CALL_1
0x400580e	     0xf854afcffff	                           jne 0x400545e	      3682	gui.c	FUNCTION_54	CALL_1
0x4005814	      0xe93bfcffff	                           jmp 0x4005454	      3682	gui.c	FUNCTION_54	CALL_1
0x4005819	    0x488b05000000	            mov rax, qword [0x04005820] 	      3694	gui.c	FUNCTION_55	IF_1
0x4005820	        0x48833801	                      cmp qword [rax], 1	      3694	gui.c	FUNCTION_55	IF_1
0x4005824	            0x19d2	                            sbb edx, edx	      3694	gui.c	FUNCTION_55	IF_1
0x4005826	          0x83c201	                              add edx, 1	      3694	gui.c	FUNCTION_55	IF_1
0x4005829	        0x48833801	                      cmp qword [rax], 1	      3694	gui.c	FUNCTION_55	IF_1
0x400582d	        0x8954240c	              mov dword [rsp + 0xc], edx	      3694	gui.c	FUNCTION_55	IF_1
0x4005831	           0xf92c3	                                 setb bl	      3694	gui.c	FUNCTION_55	IF_1
0x4005834	      0xe9e5fbffff	                           jmp 0x400541e	      3694	gui.c	FUNCTION_55	IF_1
0x4005839	    0x488b0d000000	            mov rcx, qword [0x04005840] 	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x4005840	            0x4898	                                    cdqe	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x4005842	          0x4989c8	                             mov r8, rcx	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x4005845	        0x49c1e83f	                            shr r8, 0x3f	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x4005849	          0x4c01c1	                             add rcx, r8	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x400584c	          0x48d1f9	                              sar rcx, 1	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x400584f	          0x4839c8	                            cmp rax, rcx	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x4005852	     0xf8f92fdffff	                            jg 0x40055ea	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x4005858	      0xe922fdffff	                           jmp 0x400557f	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x400585d	    0x4c8b05000000	              mov r8, qword [0x04005864]	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x4005864	            0x4898	                                    cdqe	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x4005866	          0x4d89c1	                              mov r9, r8	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x4005869	        0x49c1e93f	                            shr r9, 0x3f	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x400586d	          0x4d01c1	                              add r9, r8	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x4005870	          0x49d1f9	                               sar r9, 1	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x4005873	          0x4c39c8	                             cmp rax, r9	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x4005876	     0xf8f50fcffff	                            jg 0x40054cc	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x400587c	      0xe9c9fcffff	                           jmp 0x400554a	      4400	gui.c	FUNCTION_66	ELSE_1	IF_3
0x4005881	      0xbf00000000	                              mov edi, 0	      3572	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_10	CALL_10
0x4005886	      0xe800000000	                          call 0x400588b	      3572	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_10	CALL_10
0x400588b	    0x8bb3c0000000	            mov esi, dword [rbx + 0xc0] 	      3581	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11
0x4005891	    0x3b3500000000	            cmp esi, dword [0x04005897] 	      3581	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11
0x4005897	     0xf84f3feffff	                            je 0x4005790	      3581	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11
0x400589d	      0x834c240801	                   or dword [rsp + 8], 1	      3584	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	IF_12
0x40058a2	            0x85f6	                           test esi, esi	      3587	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	IF_13
0x40058a4	     0xf84e6feffff	                            je 0x4005790	      3587	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	IF_13
0x40058aa	    0x488b05000000	            mov rax, qword [0x040058b1] 	      3591	gui.c	FUNCTION_53	IF_5	FOR_3
0x40058b1	    0x893500000000	            mov dword [0x040058b7], esi 	      3592	gui.c	FUNCTION_53	IF_5	FOR_3
0x40058b7	    0xc744240c0100	                mov dword [rsp + 0xc], 1	      3588	gui.c	FUNCTION_53	IF_5	FOR_3	IF_9	IF_11	IF_13
0x40058bf	          0x897050	             mov dword [rax + 0x50], esi	      3591	gui.c	FUNCTION_53	IF_5	FOR_3
0x40058c2	      0xe994fdffff	                           jmp 0x400565b	      3591	gui.c	FUNCTION_53	IF_5	FOR_3
gui_inchar	WHILE,0:SWITCH,0:CALL,3:ELSE,0:DO,0:IF,1:FOR,0:functions,0	103
0x4004580	            0x4155	                                push r13	      3045	gui.c	FUNCTION_48
0x4004582	            0x4154	                                push r12	      3045	gui.c	FUNCTION_48
0x4004584	          0x4989fd	                            mov r13, rdi	      3045	gui.c	FUNCTION_48
0x4004587	              0x55	                                push rbp	      3045	gui.c	FUNCTION_48
0x4004588	              0x53	                                push rbx	      3045	gui.c	FUNCTION_48
0x4004589	            0x89f5	                            mov ebp, esi	      3045	gui.c	FUNCTION_48
0x400458b	          0x4189cc	                           mov r12d, ecx	      3045	gui.c	FUNCTION_48
0x400458e	        0x4883ec28	                           sub rsp, 0x28	      3045	gui.c	FUNCTION_48
0x4004592	    0x64488b042528	                mov rax, qword fs:[0x28]	      3045	gui.c	FUNCTION_48
0x400459b	      0x4889442418	             mov qword [rsp + 0x18], rax	      3045	gui.c	FUNCTION_48
0x40045a0	            0x31c0	                            xor eax, eax	      3045	gui.c	FUNCTION_48
0x40045a2	          0x4885d2	                           test rdx, rdx	      2968	gui.c	FUNCTION_47	IF_1
0x40045a5	            0x7539	                           jne 0x40045e0	      2968	gui.c	FUNCTION_47	IF_1
0x40045a7	      0xe800000000	                          call 0x40045ac	      2972	gui.c	FUNCTION_47	CALL_2
0x40045ac	      0xe800000000	                          call 0x40045b1	      2973	gui.c	FUNCTION_47	IF_2	CALL_3
0x40045b1	            0x85c0	                           test eax, eax	      2973	gui.c	FUNCTION_47	IF_2	CALL_3
0x40045b3	            0x757b	                           jne 0x4004630	      2973	gui.c	FUNCTION_47	IF_2	CALL_3
0x40045b5	            0x31c0	                            xor eax, eax	      3049	gui.c	FUNCTION_48
0x40045b7	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      3050	gui.c	FUNCTION_48
0x40045bc	    0x644833142528	                xor rdx, qword fs:[0x28]	      3050	gui.c	FUNCTION_48
0x40045c5	     0xf8537010000	                           jne 0x4004702	      3050	gui.c	FUNCTION_48
0x40045cb	        0x4883c428	                           add rsp, 0x28	      3050	gui.c	FUNCTION_48
0x40045cf	              0x5b	                                 pop rbx	      3050	gui.c	FUNCTION_48
0x40045d0	              0x5d	                                 pop rbp	      3050	gui.c	FUNCTION_48
0x40045d1	            0x415c	                                 pop r12	      3050	gui.c	FUNCTION_48
0x40045d3	            0x415d	                                 pop r13	      3050	gui.c	FUNCTION_48
0x40045d5	              0xc3	                                     ret	      3050	gui.c	FUNCTION_48
0x40045d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3050	gui.c	FUNCTION_48
0x40045e0	            0x31ff	                            xor edi, edi	      2969	gui.c	FUNCTION_47	CALL_1
0x40045e2	          0x4889d3	                            mov rbx, rdx	      2969	gui.c	FUNCTION_47	CALL_1
0x40045e5	      0xe800000000	                          call 0x40045ea	      2969	gui.c	FUNCTION_47	CALL_1
0x40045ea	      0xe800000000	                          call 0x40045ef	      2972	gui.c	FUNCTION_47	CALL_2
0x40045ef	      0xe800000000	                          call 0x40045f4	      2973	gui.c	FUNCTION_47	IF_2	CALL_3
0x40045f4	            0x85c0	                           test eax, eax	      2973	gui.c	FUNCTION_47	IF_2	CALL_3
0x40045f6	            0x7538	                           jne 0x4004630	      2973	gui.c	FUNCTION_47	IF_2	CALL_3
0x40045f8	      0xe800000000	                          call 0x40045fd	      2979	gui.c	FUNCTION_47	CALL_4
0x40045fd	          0x4885db	                           test rbx, rbx	      2981	gui.c	FUNCTION_47	IF_4
0x4004600	            0x7e4e	                           jle 0x4004650	      2981	gui.c	FUNCTION_47	IF_4
0x4004602	      0xe800000000	                          call 0x4004607	      2985	gui.c	FUNCTION_47	IF_4	CALL_5
0x4004607	          0x4889df	                            mov rdi, rbx	      2941	gui.c	FUNCTION_46	CALL_1
0x400460a	            0x31c9	                            xor ecx, ecx	      2941	gui.c	FUNCTION_46	CALL_1
0x400460c	            0x31d2	                            xor edx, edx	      2941	gui.c	FUNCTION_46	CALL_1
0x400460e	      0xbe00000000	                              mov esi, 0	      2941	gui.c	FUNCTION_46	CALL_1
0x4004613	      0xe800000000	                          call 0x4004618	      2941	gui.c	FUNCTION_46	CALL_1
0x4004618	      0xbf01000000	                              mov edi, 1	      2987	gui.c	FUNCTION_47	IF_4	CALL_7
0x400461d	            0x89c3	                            mov ebx, eax	      2941	gui.c	FUNCTION_46	CALL_1
0x400461f	      0xe800000000	                          call 0x4004624	      2987	gui.c	FUNCTION_47	IF_4	CALL_7
0x4004624	            0x85db	                           test ebx, ebx	      3046	gui.c	FUNCTION_48	IF_1	CALL_1
0x4004626	            0x748d	                            je 0x40045b5	      3046	gui.c	FUNCTION_48	IF_1	CALL_1
0x4004628	     0xf1f84000000	                   nop dword [rax + rax]	      3046	gui.c	FUNCTION_48	IF_1	CALL_1
0x4004630	          0x4489e7	                           mov edi, r12d	      3047	gui.c	FUNCTION_48	IF_1	CALL_2
0x4004633	      0xe800000000	                          call 0x4004638	      3047	gui.c	FUNCTION_48	IF_1	CALL_2
0x4004638	            0x85c0	                           test eax, eax	      3047	gui.c	FUNCTION_48	IF_1	CALL_2
0x400463a	     0xf8575ffffff	                           jne 0x40045b5	      3047	gui.c	FUNCTION_48	IF_1	CALL_2
0x4004640	          0x4863f5	                         movsxd rsi, ebp	      3048	gui.c	FUNCTION_48	CALL_3
0x4004643	          0x4c89ef	                            mov rdi, r13	      3048	gui.c	FUNCTION_48	CALL_3
0x4004646	      0xe800000000	                          call 0x400464b	      3048	gui.c	FUNCTION_48	CALL_3
0x400464b	      0xe967ffffff	                           jmp 0x40045b7	      3048	gui.c	FUNCTION_48	CALL_3
0x4004650	            0x31f6	                            xor esi, esi	      2992	gui.c	FUNCTION_47	CALL_8
0x4004652	          0x4889e7	                            mov rdi, rsp	      2992	gui.c	FUNCTION_47	CALL_8
0x4004655	      0xe800000000	                          call 0x400465a	      2992	gui.c	FUNCTION_47	CALL_8
0x400465a	      0xe800000000	                          call 0x400465f	      2998	gui.c	FUNCTION_47	CALL_9
0x400465f	    0x488b3d000000	            mov rdi, qword [0x04004666] 	      2941	gui.c	FUNCTION_46	CALL_1
0x4004666	            0x31c9	                            xor ecx, ecx	      2941	gui.c	FUNCTION_46	CALL_1
0x4004668	            0x31d2	                            xor edx, edx	      2941	gui.c	FUNCTION_46	CALL_1
0x400466a	      0xbe00000000	                              mov esi, 0	      2941	gui.c	FUNCTION_46	CALL_1
0x400466f	      0xe800000000	                          call 0x4004674	      2941	gui.c	FUNCTION_46	CALL_1
0x4004674	          0x83f801	                              cmp eax, 1	      3006	gui.c	FUNCTION_47	IF_5	CALL_10
0x4004677	            0x7457	                            je 0x40046d0	      3006	gui.c	FUNCTION_47	IF_5	CALL_10
0x4004679	      0xe800000000	                          call 0x400467e	      3008	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_11
0x400467e	            0x85c0	                           test eax, eax	      3008	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_11
0x4004680	            0x750e	                           jne 0x4004690	      3008	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_11
0x4004682	    0x443b25000000	           cmp r12d, dword [0x04004689] 	      3025	gui.c	FUNCTION_47	IF_7
0x4004689	            0x7459	                            je 0x40046e4	      3025	gui.c	FUNCTION_47	IF_7
0x400468b	            0x31db	                            xor ebx, ebx	      3045	gui.c	FUNCTION_48
0x400468d	            0xeb46	                           jmp 0x40046d5	      3045	gui.c	FUNCTION_48
0x400468f	              0x90	                                     nop	      3045	gui.c	FUNCTION_48
0x4004690	          0x4889e7	                            mov rdi, rsp	      3010	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_12
0x4004693	      0xe800000000	                          call 0x4004698	      3010	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_12
0x4004698	    0x483b05000000	            cmp rax, qword [0x0400469f] 	      3010	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_12
0x400469f	            0x7ce1	                            jl 0x4004682	      3010	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_12
0x40046a1	    0x443b25000000	           cmp r12d, dword [0x040046a8] 	      3012	gui.c	FUNCTION_47	ELSE_1	IF_6
0x40046a8	            0x75e1	                           jne 0x400468b	      3012	gui.c	FUNCTION_47	ELSE_1	IF_6
0x40046aa	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      3020	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_13
0x40046af	      0xbe03000000	                              mov esi, 3	      3020	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_13
0x40046b4	      0xc64424109b	            mov byte [rsp + 0x10], 0x9b 	      3017	gui.c	FUNCTION_47	ELSE_1	IF_6
0x40046b9	      0xc6442411fd	            mov byte [rsp + 0x11], 0xfd 	      3018	gui.c	FUNCTION_47	ELSE_1	IF_6
0x40046be	      0xc644241260	            mov byte [rsp + 0x12], 0x60 	      3019	gui.c	FUNCTION_47	ELSE_1	IF_6
0x40046c3	      0xe800000000	                          call 0x40046c8	      3020	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_13
0x40046c8	     0xf1f84000000	                   nop dword [rax + rax]	      3020	gui.c	FUNCTION_47	ELSE_1	IF_6	CALL_13
0x40046d0	      0xbb01000000	                              mov ebx, 1	      3045	gui.c	FUNCTION_48
0x40046d5	      0xbf01000000	                              mov edi, 1	      3032	gui.c	FUNCTION_47	CALL_16
0x40046da	      0xe800000000	                          call 0x40046df	      3032	gui.c	FUNCTION_47	CALL_16
0x40046df	      0xe940ffffff	                           jmp 0x4004624	      3032	gui.c	FUNCTION_47	CALL_16
0x40046e4	      0xe800000000	                          call 0x40046e9	      3028	gui.c	FUNCTION_47	IF_7	CALL_14
0x40046e9	            0x31c9	                            xor ecx, ecx	      2941	gui.c	FUNCTION_46	CALL_1
0x40046eb	            0x31d2	                            xor edx, edx	      2941	gui.c	FUNCTION_46	CALL_1
0x40046ed	      0xbe00000000	                              mov esi, 0	      2941	gui.c	FUNCTION_46	CALL_1
0x40046f2	    0x48c7c7ffffff	             mov rdi, 0xffffffffffffffff	      2941	gui.c	FUNCTION_46	CALL_1
0x40046f9	      0xe800000000	                          call 0x40046fe	      2941	gui.c	FUNCTION_46	CALL_1
0x40046fe	            0x89c3	                            mov ebx, eax	      2941	gui.c	FUNCTION_46	CALL_1
0x4004700	            0xebd3	                           jmp 0x40046d5	      2941	gui.c	FUNCTION_46	CALL_1
0x4004702	      0xe800000000	                          call 0x4004707	      3050	gui.c	FUNCTION_48
send_tabline_event	WHILE,0:SWITCH,0:CALL,5:ELSE,0:DO,0:IF,2:FOR,0:functions,0	44
0x4006430	              0x53	                                push rbx	      3825	gui.c	FUNCTION_58
0x4006431	            0x89fb	                            mov ebx, edi	      3825	gui.c	FUNCTION_58
0x4006433	        0x4883ec10	                           sub rsp, 0x10	      3825	gui.c	FUNCTION_58
0x4006437	    0x488b3d000000	            mov rdi, qword [0x0400643e] 	      3828	gui.c	FUNCTION_58	IF_1	CALL_1
0x400643e	    0x64488b042528	                mov rax, qword fs:[0x28]	      3825	gui.c	FUNCTION_58
0x4006447	      0x4889442408	                mov qword [rsp + 8], rax	      3825	gui.c	FUNCTION_58
0x400644c	            0x31c0	                            xor eax, eax	      3825	gui.c	FUNCTION_58
0x400644e	      0xe800000000	                          call 0x4006453	      3828	gui.c	FUNCTION_58	IF_1	CALL_1
0x4006453	            0x39d8	                            cmp eax, ebx	      3828	gui.c	FUNCTION_58	IF_1	CALL_1
0x4006455	     0xf847d000000	                            je 0x40064d8	      3828	gui.c	FUNCTION_58	IF_1	CALL_1
0x400645b	    0x8b0500000000	            mov eax, dword [0x04006461] 	      3832	gui.c	FUNCTION_58	IF_2
0x4006461	            0x85c0	                           test eax, eax	      3832	gui.c	FUNCTION_58	IF_2
0x4006463	            0x750a	                           jne 0x400646f	      3832	gui.c	FUNCTION_58	IF_2
0x4006465	    0x8b0500000000	            mov eax, dword [0x0400646b] 	      3834	gui.c	FUNCTION_58	IF_2
0x400646b	            0x85c0	                           test eax, eax	      3834	gui.c	FUNCTION_58	IF_2
0x400646d	            0x7431	                            je 0x40064a0	      3834	gui.c	FUNCTION_58	IF_2
0x400646f	    0x488b3d000000	            mov rdi, qword [0x04006476] 	      3839	gui.c	FUNCTION_58	IF_2	CALL_3
0x4006476	      0xe800000000	                          call 0x400647b	      3839	gui.c	FUNCTION_58	IF_2	CALL_3
0x400647b	            0x89c7	                            mov edi, eax	      3839	gui.c	FUNCTION_58	IF_2	CALL_3
0x400647d	      0xe800000000	                          call 0x4006482	      3839	gui.c	FUNCTION_58	IF_2	CALL_3
0x4006482	            0x31c0	                            xor eax, eax	      3840	gui.c	FUNCTION_58	IF_2
0x4006484	      0x488b542408	                mov rdx, qword [rsp + 8]	      3850	gui.c	FUNCTION_58
0x4006489	    0x644833142528	                xor rdx, qword fs:[0x28]	      3850	gui.c	FUNCTION_58
0x4006492	            0x7548	                           jne 0x40064dc	      3850	gui.c	FUNCTION_58
0x4006494	        0x4883c410	                           add rsp, 0x10	      3850	gui.c	FUNCTION_58
0x4006498	              0x5b	                                 pop rbx	      3850	gui.c	FUNCTION_58
0x4006499	              0xc3	                                     ret	      3850	gui.c	FUNCTION_58
0x400649a	    0x660f1f440000	                    nop word [rax + rax]	      3850	gui.c	FUNCTION_58
0x40064a0	      0xbe03000000	                              mov esi, 3	      3846	gui.c	FUNCTION_58	CALL_4
0x40064a5	          0x4889e7	                            mov rdi, rsp	      3846	gui.c	FUNCTION_58	CALL_4
0x40064a8	        0xc604249b	                    mov byte [rsp], 0x9b	      3843	gui.c	FUNCTION_58
0x40064ac	      0xc6442401f0	                mov byte [rsp + 1], 0xf0	      3844	gui.c	FUNCTION_58
0x40064b1	      0xc644240258	                mov byte [rsp + 2], 0x58	      3845	gui.c	FUNCTION_58
0x40064b6	      0xe800000000	                          call 0x40064bb	      3846	gui.c	FUNCTION_58	CALL_4
0x40064bb	      0xbe01000000	                              mov esi, 1	      3848	gui.c	FUNCTION_58	CALL_5
0x40064c0	          0x4889e7	                            mov rdi, rsp	      3848	gui.c	FUNCTION_58	CALL_5
0x40064c3	          0x881c24	                      mov byte [rsp], bl	      3847	gui.c	FUNCTION_58
0x40064c6	      0xe800000000	                          call 0x40064cb	      3848	gui.c	FUNCTION_58	CALL_5
0x40064cb	      0xb801000000	                              mov eax, 1	      3849	gui.c	FUNCTION_58
0x40064d0	            0xebb2	                           jmp 0x4006484	      3849	gui.c	FUNCTION_58
0x40064d2	    0x660f1f440000	                    nop word [rax + rax]	      3849	gui.c	FUNCTION_58
0x40064d8	            0x31c0	                            xor eax, eax	      3829	gui.c	FUNCTION_58	IF_1
0x40064da	            0xeba8	                           jmp 0x4006484	      3829	gui.c	FUNCTION_58	IF_1
0x40064dc	      0xe800000000	                          call 0x40064e1	      3850	gui.c	FUNCTION_58
gui_mouse_moved	WHILE,0:SWITCH,0:CALL,11:ELSE,0:DO,0:IF,7:FOR,0:functions,0	200
0x4007330	            0x4154	                                push r12	      4849	gui.c	FUNCTION_79
0x4007332	              0x55	                                push rbp	      4849	gui.c	FUNCTION_79
0x4007333	              0x53	                                push rbx	      4849	gui.c	FUNCTION_79
0x4007334	        0x4883ec20	                           sub rsp, 0x20	      4849	gui.c	FUNCTION_79
0x4007338	    0x8b1d00000000	            mov ebx, dword [0x0400733e] 	      4854	gui.c	FUNCTION_79	IF_1
0x400733e	    0x64488b042528	                mov rax, qword fs:[0x28]	      4849	gui.c	FUNCTION_79
0x4007347	      0x4889442418	             mov qword [rsp + 0x18], rax	      4849	gui.c	FUNCTION_79
0x400734c	            0x31c0	                            xor eax, eax	      4849	gui.c	FUNCTION_79
0x400734e	            0x85db	                           test ebx, ebx	      4854	gui.c	FUNCTION_79	IF_1
0x4007350	            0x740c	                            je 0x400735e	      4854	gui.c	FUNCTION_79	IF_1
0x4007352	    0x448b1d000000	           mov r11d, dword [0x04007359] 	      4854	gui.c	FUNCTION_79	IF_1
0x4007359	          0x4585db	                         test r11d, r11d	      4854	gui.c	FUNCTION_79	IF_1
0x400735c	            0x7422	                            je 0x4007380	      4854	gui.c	FUNCTION_79	IF_1
0x400735e	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4913	gui.c	FUNCTION_79
0x4007363	    0x644833042528	                xor rax, qword fs:[0x28]	      4913	gui.c	FUNCTION_79
0x400736c	     0xf851d030000	                           jne 0x400768f	      4913	gui.c	FUNCTION_79
0x4007372	        0x4883c420	                           add rsp, 0x20	      4913	gui.c	FUNCTION_79
0x4007376	              0x5b	                                 pop rbx	      4913	gui.c	FUNCTION_79
0x4007377	              0x5d	                                 pop rbp	      4913	gui.c	FUNCTION_79
0x4007378	            0x415c	                                 pop r12	      4913	gui.c	FUNCTION_79
0x400737a	              0xc3	                                     ret	      4913	gui.c	FUNCTION_79
0x400737b	       0xf1f440000	                   nop dword [rax + rax]	      4913	gui.c	FUNCTION_79
0x4007380	            0x89f3	                            mov ebx, esi	      4913	gui.c	FUNCTION_79
0x4007382	    0x8b3500000000	            mov esi, dword [0x04007388] 	      4954	gui.c	FUNCTION_81	CALL_1
0x4007388	          0x4863ef	                         movsxd rbp, edi	      4954	gui.c	FUNCTION_81	CALL_1
0x400738b	            0x89d8	                            mov eax, ebx	      4954	gui.c	FUNCTION_81	CALL_1
0x400738d	            0x29f0	                            sub eax, esi	      4954	gui.c	FUNCTION_81	CALL_1
0x400738f	              0x99	                                     cdq	      4954	gui.c	FUNCTION_81	CALL_1
0x4007390	    0xf73d00000000	                 idiv dword [0x04007396]	      4954	gui.c	FUNCTION_81	CALL_1
0x4007396	            0x89c1	                            mov ecx, eax	      4954	gui.c	FUNCTION_81	CALL_1
0x4007398	        0x89442408	                mov dword [rsp + 8], eax	      4954	gui.c	FUNCTION_81	CALL_1
0x400739c	            0x89e8	                            mov eax, ebp	      4955	gui.c	FUNCTION_81	CALL_2
0x400739e	            0x29f0	                            sub eax, esi	      4955	gui.c	FUNCTION_81	CALL_2
0x40073a0	          0xc1e91f	                           shr ecx, 0x1f	      4956	gui.c	FUNCTION_81	IF_1
0x40073a3	              0x99	                                     cdq	      4955	gui.c	FUNCTION_81	CALL_2
0x40073a4	    0xf73d00000000	                 idiv dword [0x040073aa]	      4955	gui.c	FUNCTION_81	CALL_2
0x40073aa	            0x84c9	                             test cl, cl	      4956	gui.c	FUNCTION_81	IF_1
0x40073ac	        0x8944240c	              mov dword [rsp + 0xc], eax	      4955	gui.c	FUNCTION_81	CALL_2
0x40073b0	     0xf856a020000	                           jne 0x4007620	      4956	gui.c	FUNCTION_81	IF_1
0x40073b6	          0xc1e81f	                           shr eax, 0x1f	      4956	gui.c	FUNCTION_81	IF_1
0x40073b9	            0x84c0	                             test al, al	      4956	gui.c	FUNCTION_81	IF_1
0x40073bb	     0xf855f020000	                           jne 0x4007620	      4956	gui.c	FUNCTION_81	IF_1
0x40073c1	      0x488d74240c	                    lea rsi, [rsp + 0xc]	      4958	gui.c	FUNCTION_81	CALL_3
0x40073c6	      0x488d7c2408	                      lea rdi, [rsp + 8]	      4958	gui.c	FUNCTION_81	CALL_3
0x40073cb	      0xe800000000	                          call 0x40073d0	      4958	gui.c	FUNCTION_81	CALL_3
0x40073d0	          0x4885c0	                           test rax, rax	      4959	gui.c	FUNCTION_81	IF_2
0x40073d3	          0x4989c4	                            mov r12, rax	      4958	gui.c	FUNCTION_81	CALL_3
0x40073d6	     0xf8444020000	                            je 0x4007620	      4959	gui.c	FUNCTION_81	IF_2
0x40073dc	    0x8b0500000000	            mov eax, dword [0x040073e2] 	      4962	gui.c	FUNCTION_81	IF_3
0x40073e2	      0x3d01020000	                          cmp eax, 0x201	      4962	gui.c	FUNCTION_81	IF_3
0x40073e7	     0xf84e3010000	                            je 0x40075d0	      4962	gui.c	FUNCTION_81	IF_3
0x40073ed	      0x3d00030000	                          cmp eax, 0x300	      4962	gui.c	FUNCTION_81	IF_3
0x40073f2	     0xf84d8010000	                            je 0x40075d0	      4962	gui.c	FUNCTION_81	IF_3
0x40073f8	    0x418b8c24a000	            mov ecx, dword [r12 + 0xa0] 	      4969	gui.c	FUNCTION_81	ELSE_2	IF_5
0x4007400	        0x8b542408	                mov edx, dword [rsp + 8]	      4969	gui.c	FUNCTION_81	ELSE_2	IF_5
0x4007404	            0x39d1	                            cmp ecx, edx	      4969	gui.c	FUNCTION_81	ELSE_2	IF_5
0x4007406	     0xf8c04020000	                            jl 0x4007610	      4969	gui.c	FUNCTION_81	ELSE_2	IF_5
0x400740c	            0xa808	                              test al, 8	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x400740e	            0x753e	                           jne 0x400744e	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x4007410	    0x458b9424b000	           mov r10d, dword [r12 + 0xb0] 	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x4007418	          0x4585d2	                         test r10d, r10d	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x400741b	            0x7e12	                           jle 0x400742f	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x400741d	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x4007421	    0x41398424ac00	            cmp dword [r12 + 0xac], eax 	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x4007429	     0xf8418020000	                            je 0x4007647	      4971	gui.c	FUNCTION_81	ELSE_3	IF_6
0x400742f	    0x458b8c24a400	            mov r9d, dword [r12 + 0xa4] 	      4974	gui.c	FUNCTION_81	ELSE_4	IF_7
0x4007437	          0x4585c9	                           test r9d, r9d	      4974	gui.c	FUNCTION_81	ELSE_4	IF_7
0x400743a	            0x7e12	                           jle 0x400744e	      4974	gui.c	FUNCTION_81	ELSE_4	IF_7
0x400743c	        0x8b442408	                mov eax, dword [rsp + 8]	      4975	gui.c	FUNCTION_81	ELSE_4	IF_7
0x4007440	    0x41398424a000	            cmp dword [r12 + 0xa0], eax 	      4975	gui.c	FUNCTION_81	ELSE_4	IF_7
0x4007448	     0xf84da010000	                            je 0x4007628	      4975	gui.c	FUNCTION_81	ELSE_4	IF_7
0x400744e	      0xbffeffffff	                     mov edi, 0xfffffffe	      4978	gui.c	FUNCTION_81	CALL_11
0x4007453	      0xe800000000	                          call 0x4007458	      4978	gui.c	FUNCTION_81	CALL_11
0x4007458	    0x8b3d00000000	            mov edi, dword [0x0400745e] 	      4863	gui.c	FUNCTION_79	IF_2
0x400745e	            0x85ff	                           test edi, edi	      4863	gui.c	FUNCTION_79	IF_2
0x4007460	     0xf84f8feffff	                            je 0x400735e	      4863	gui.c	FUNCTION_79	IF_2
0x4007466	    0x8b0500000000	            mov eax, dword [0x0400746c] 	      4864	gui.c	FUNCTION_79	IF_2
0x400746c	            0x85c0	                           test eax, eax	      4864	gui.c	FUNCTION_79	IF_2
0x400746e	     0xf85eafeffff	                           jne 0x400735e	      4864	gui.c	FUNCTION_79	IF_2
0x4007474	    0x8b0500000000	            mov eax, dword [0x0400747a] 	      4865	gui.c	FUNCTION_79	IF_2
0x400747a	            0xa811	                           test al, 0x11	      4866	gui.c	FUNCTION_79	IF_2
0x400747c	     0xf84dcfeffff	                            je 0x400735e	      4866	gui.c	FUNCTION_79	IF_2
0x4007482	      0x3d01020000	                          cmp eax, 0x201	      4866	gui.c	FUNCTION_79	IF_2
0x4007487	     0xf84d1feffff	                            je 0x400735e	      4866	gui.c	FUNCTION_79	IF_2
0x400748d	    0x8b3500000000	            mov esi, dword [0x04007493] 	      4867	gui.c	FUNCTION_79	IF_2
0x4007493	            0x85f6	                           test esi, esi	      4867	gui.c	FUNCTION_79	IF_2
0x4007495	     0xf85c3feffff	                           jne 0x400735e	      4867	gui.c	FUNCTION_79	IF_2
0x400749b	    0x8b0d00000000	            mov ecx, dword [0x040074a1] 	      4868	gui.c	FUNCTION_79	IF_2
0x40074a1	            0x85c9	                           test ecx, ecx	      4868	gui.c	FUNCTION_79	IF_2
0x40074a3	     0xf85b5feffff	                           jne 0x400735e	      4868	gui.c	FUNCTION_79	IF_2
0x40074a9	    0x8b1500000000	            mov edx, dword [0x040074af] 	      4869	gui.c	FUNCTION_79	IF_2
0x40074af	            0x85d2	                           test edx, edx	      4869	gui.c	FUNCTION_79	IF_2
0x40074b1	     0xf84a7feffff	                            je 0x400735e	      4869	gui.c	FUNCTION_79	IF_2
0x40074b7	            0x85ed	                           test ebp, ebp	      4872	gui.c	FUNCTION_79	IF_2	IF_3
0x40074b9	     0xf889ffeffff	                            js 0x400735e	      4872	gui.c	FUNCTION_79	IF_2	IF_3
0x40074bf	    0x486305000000	         movsxd rax, dword [0x040074c6] 	      4872	gui.c	FUNCTION_79	IF_2	IF_3
0x40074c6	    0x480faf050000	            imul rax, qword [0x040074ce]	      4872	gui.c	FUNCTION_79	IF_2	IF_3
0x40074ce	          0x4839c5	                            cmp rbp, rax	      4872	gui.c	FUNCTION_79	IF_2	IF_3
0x40074d1	     0xf8f87feffff	                            jg 0x400735e	      4872	gui.c	FUNCTION_79	IF_2	IF_3
0x40074d7	    0x4c3925000000	            cmp qword [0x040074de], r12 	      4877	gui.c	FUNCTION_79	IF_2	IF_4
0x40074de	     0xf847afeffff	                            je 0x400735e	      4877	gui.c	FUNCTION_79	IF_2	IF_4
0x40074e4	          0x4d85e4	                           test r12, r12	      4877	gui.c	FUNCTION_79	IF_2	IF_4
0x40074e7	     0xf8471feffff	                            je 0x400735e	      4877	gui.c	FUNCTION_79	IF_2	IF_4
0x40074ed	            0x89d8	                            mov eax, ebx	      4881	gui.c	FUNCTION_79	IF_2	IF_5	CALL_4
0x40074ef	    0x2b0500000000	             sub eax, dword [0x040074f5]	      4881	gui.c	FUNCTION_79	IF_2	IF_5	CALL_4
0x40074f5	              0x99	                                     cdq	      4881	gui.c	FUNCTION_79	IF_2	IF_5	CALL_4
0x40074f6	    0xf73d00000000	                 idiv dword [0x040074fc]	      4881	gui.c	FUNCTION_79	IF_2	IF_5	CALL_4
0x40074fc	            0x89c3	                            mov ebx, eax	      4881	gui.c	FUNCTION_79	IF_2	IF_5	CALL_4
0x40074fe	      0xe800000000	                          call 0x4007503	      4881	gui.c	FUNCTION_79	IF_2	IF_5	CALL_4
0x4007503	            0x39c3	                            cmp ebx, eax	      4881	gui.c	FUNCTION_79	IF_2	IF_5	CALL_4
0x4007505	     0xf8c53feffff	                            jl 0x400735e	      4881	gui.c	FUNCTION_79	IF_2	IF_5	CALL_4
0x400750b	    0x833d00000000	               cmp dword [0x04007512], 0	      4890	gui.c	FUNCTION_79	IF_2	IF_6
0x4007512	            0x7414	                            je 0x4007528	      4890	gui.c	FUNCTION_79	IF_2	IF_6
0x4007514	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      4894	gui.c	FUNCTION_79	IF_2	IF_6	CALL_5
0x4007519	      0xbe01000000	                              mov esi, 1	      4894	gui.c	FUNCTION_79	IF_2	IF_6	CALL_5
0x400751e	      0xc64424101b	            mov byte [rsp + 0x10], 0x1b 	      4893	gui.c	FUNCTION_79	IF_2	IF_6
0x4007523	      0xe800000000	                          call 0x4007528	      4894	gui.c	FUNCTION_79	IF_2	IF_6	CALL_5
0x4007528	    0x418b9424a800	            mov edx, dword [r12 + 0xa8] 	      4901	gui.c	FUNCTION_79	IF_2
0x4007530	    0x418b8c24a801	           mov ecx, dword [r12 + 0x1a8] 	      4900	gui.c	FUNCTION_79	IF_2	CALL_6
0x4007538	      0xbe80000000	                           mov esi, 0x80	      3058	gui.c	FUNCTION_49
0x400753d	    0x41038c249c00	             add ecx, dword [r12 + 0x9c]	      4900	gui.c	FUNCTION_79	IF_2	CALL_6
0x4007545	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      4904	gui.c	FUNCTION_79	IF_2	CALL_8
0x400754a	      0xc64424109b	            mov byte [rsp + 0x10], 0x9b 	      4896	gui.c	FUNCTION_79	IF_2
0x400754f	    0x41038c24a000	             add ecx, dword [r12 + 0xa0]	      4900	gui.c	FUNCTION_79	IF_2	CALL_6
0x4007557	      0xc6442411fb	            mov byte [rsp + 0x11], 0xfb 	      4897	gui.c	FUNCTION_79	IF_2
0x400755c	    0x8d8210270000	                 lea eax, [rdx + 0x2710]	      4900	gui.c	FUNCTION_79	IF_2	CALL_6
0x4007562	            0x85d2	                           test edx, edx	      4900	gui.c	FUNCTION_79	IF_2	CALL_6
0x4007564	      0xbaffffffff	                     mov edx, 0xffffffff	      4900	gui.c	FUNCTION_79	IF_2	CALL_6
0x4007569	      0xc644241258	            mov byte [rsp + 0x12], 0x58 	      4898	gui.c	FUNCTION_79	IF_2
0x400756e	      0xc644241300	                mov byte [rsp + 0x13], 0	      4899	gui.c	FUNCTION_79	IF_2
0x4007573	           0xf44c2	                          cmove eax, edx	      4900	gui.c	FUNCTION_79	IF_2	CALL_6
0x4007576	              0x99	                                     cdq	      3058	gui.c	FUNCTION_49
0x4007577	            0xf7fe	                                idiv esi	      3058	gui.c	FUNCTION_49
0x4007579	          0x83c021	                           add eax, 0x21	      3058	gui.c	FUNCTION_49
0x400757c	        0x88442414	               mov byte [rsp + 0x14], al	      3058	gui.c	FUNCTION_49
0x4007580	          0x8d4221	                   lea eax, [rdx + 0x21]	      3059	gui.c	FUNCTION_49
0x4007583	        0x88442415	               mov byte [rsp + 0x15], al	      3059	gui.c	FUNCTION_49
0x4007587	            0x89c8	                            mov eax, ecx	      3060	gui.c	FUNCTION_49
0x4007589	              0x99	                                     cdq	      3060	gui.c	FUNCTION_49
0x400758a	            0xf7fe	                                idiv esi	      3060	gui.c	FUNCTION_49
0x400758c	      0xbe08000000	                              mov esi, 8	      4904	gui.c	FUNCTION_79	IF_2	CALL_8
0x4007591	          0x83c021	                           add eax, 0x21	      3060	gui.c	FUNCTION_49
0x4007594	          0x83c221	                           add edx, 0x21	      3061	gui.c	FUNCTION_49
0x4007597	        0x88442416	               mov byte [rsp + 0x16], al	      3060	gui.c	FUNCTION_49
0x400759b	        0x88542417	               mov byte [rsp + 0x17], dl	      3061	gui.c	FUNCTION_49
0x400759f	      0xe800000000	                          call 0x40075a4	      4904	gui.c	FUNCTION_79	IF_2	CALL_8
0x40075a4	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      4906	gui.c	FUNCTION_79	IF_2	CALL_9
0x40075a9	      0xbe08000000	                              mov esi, 8	      4906	gui.c	FUNCTION_79	IF_2	CALL_9
0x40075ae	      0xc644241303	                mov byte [rsp + 0x13], 3	      4905	gui.c	FUNCTION_79	IF_2
0x40075b3	      0xe800000000	                          call 0x40075b8	      4906	gui.c	FUNCTION_79	IF_2	CALL_9
0x40075b8	      0xe800000000	                          call 0x40075bd	      4909	gui.c	FUNCTION_79	IF_2	IF_7	CALL_10
0x40075bd	            0x85c0	                           test eax, eax	      4909	gui.c	FUNCTION_79	IF_2	IF_7	CALL_10
0x40075bf	     0xf8499fdffff	                            je 0x400735e	      4909	gui.c	FUNCTION_79	IF_2	IF_7	CALL_10
0x40075c5	      0xe800000000	                          call 0x40075ca	      4910	gui.c	FUNCTION_79	IF_2	CALL_11
0x40075ca	      0xe98ffdffff	                           jmp 0x400735e	      4910	gui.c	FUNCTION_79	IF_2	CALL_11
0x40075cf	              0x90	                                     nop	      4910	gui.c	FUNCTION_79	IF_2	CALL_11
0x40075d0	            0x89d8	                            mov eax, ebx	      4964	gui.c	FUNCTION_81	IF_3	IF_4	CALL_4
0x40075d2	    0x2b0500000000	             sub eax, dword [0x040075d8]	      4964	gui.c	FUNCTION_81	IF_3	IF_4	CALL_4
0x40075d8	              0x99	                                     cdq	      4964	gui.c	FUNCTION_81	IF_3	IF_4	CALL_4
0x40075d9	    0xf73d00000000	                 idiv dword [0x040075df]	      4964	gui.c	FUNCTION_81	IF_3	IF_4	CALL_4
0x40075df	    0x3b0500000000	            cmp eax, dword [0x040075e5] 	      4964	gui.c	FUNCTION_81	IF_3	IF_4	CALL_4
0x40075e5	            0x7c19	                            jl 0x4007600	      4964	gui.c	FUNCTION_81	IF_3	IF_4	CALL_4
0x40075e7	      0xbf0f000000	                            mov edi, 0xf	      4965	gui.c	FUNCTION_81	IF_3	CALL_5
0x40075ec	      0xe800000000	                          call 0x40075f1	      4965	gui.c	FUNCTION_81	IF_3	CALL_5
0x40075f1	      0xe962feffff	                           jmp 0x4007458	      4965	gui.c	FUNCTION_81	IF_3	CALL_5
0x40075f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4965	gui.c	FUNCTION_81	IF_3	CALL_5
0x4007600	      0xbf0e000000	                            mov edi, 0xe	      4967	gui.c	FUNCTION_81	IF_3	CALL_6
0x4007605	      0xe800000000	                          call 0x400760a	      4967	gui.c	FUNCTION_81	IF_3	CALL_6
0x400760a	      0xe949feffff	                           jmp 0x4007458	      4967	gui.c	FUNCTION_81	IF_3	CALL_6
0x400760f	              0x90	                                     nop	      4967	gui.c	FUNCTION_81	IF_3	CALL_6
0x4007610	      0xbf09000000	                              mov edi, 9	      4970	gui.c	FUNCTION_81	ELSE_2	IF_5
0x4007615	      0xe800000000	                          call 0x400761a	      4970	gui.c	FUNCTION_81	ELSE_2	IF_5
0x400761a	      0xe939feffff	                           jmp 0x4007458	      4970	gui.c	FUNCTION_81	ELSE_2	IF_5
0x400761f	              0x90	                                     nop	      4970	gui.c	FUNCTION_81	ELSE_2	IF_5
0x4007620	          0x4531e4	                          xor r12d, r12d	      4957	gui.c	FUNCTION_81	IF_1
0x4007623	      0xe930feffff	                           jmp 0x4007458	      4957	gui.c	FUNCTION_81	IF_1
0x4007628	    0x448b05000000	            mov r8d, dword [0x0400762f] 	      4975	gui.c	FUNCTION_81	ELSE_4	IF_7
0x400762f	          0x4585c0	                           test r8d, r8d	      4975	gui.c	FUNCTION_81	ELSE_4	IF_7
0x4007632	     0xf8516feffff	                           jne 0x400744e	      4975	gui.c	FUNCTION_81	ELSE_4	IF_7
0x4007638	      0xbf0a000000	                            mov edi, 0xa	      4976	gui.c	FUNCTION_81	ELSE_4	IF_7
0x400763d	      0xe800000000	                          call 0x4007642	      4976	gui.c	FUNCTION_81	ELSE_4	IF_7
0x4007642	      0xe911feffff	                           jmp 0x4007458	      4976	gui.c	FUNCTION_81	ELSE_4	IF_7
0x4007647	            0x39d1	                            cmp ecx, edx	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x4007649	            0x741d	                            je 0x4007668	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x400764b	    0x8b0500000000	            mov eax, dword [0x04007651] 	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x4007651	            0x85c0	                           test eax, eax	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x4007653	     0xf85f5fdffff	                           jne 0x400744e	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x4007659	      0xbf0c000000	                            mov edi, 0xc	      4973	gui.c	FUNCTION_81	ELSE_3	IF_6
0x400765e	      0xe800000000	                          call 0x4007663	      4973	gui.c	FUNCTION_81	ELSE_3	IF_6
0x4007663	      0xe9f0fdffff	                           jmp 0x4007458	      4973	gui.c	FUNCTION_81	ELSE_3	IF_6
0x4007668	          0x4c89e7	                            mov rdi, r12	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x400766b	      0xe800000000	                          call 0x4007670	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x4007670	            0x85c0	                           test eax, eax	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x4007672	            0x7509	                           jne 0x400767d	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x4007674	    0x833d00000000	               cmp dword [0x0400767b], 0	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x400767b	            0x74dc	                            je 0x4007659	      4972	gui.c	FUNCTION_81	ELSE_3	IF_6	CALL_8
0x400767d	    0xf60500000000	               test byte [0x04007684], 8	      4974	gui.c	FUNCTION_81	ELSE_4	IF_7
0x4007684	     0xf84a5fdffff	                            je 0x400742f	      4974	gui.c	FUNCTION_81	ELSE_4	IF_7
0x400768a	      0xe9bffdffff	                           jmp 0x400744e	      4974	gui.c	FUNCTION_81	ELSE_4	IF_7
0x400768f	      0xe800000000	                          call 0x4007694	      4913	gui.c	FUNCTION_79
gui_prepare	WHILE,0:SWITCH,0:CALL,1:ELSE,0:DO,0:IF,0:FOR,0:functions,0	3
0x4001080	    0xc70500000000	               mov dword [0x0400108a], 0	       353	gui.c	FUNCTION_5
0x400108a	    0xc70500000000	               mov dword [0x04001094], 0	       354	gui.c	FUNCTION_5
0x4001094	      0xe900000000	                           jmp 0x4001099	       355	gui.c	FUNCTION_5	CALL_1
gui_drag_scrollbar	WHILE,0:SWITCH,0:CALL,22:ELSE,9:DO,0:IF,28:FOR,1:functions,0	224
0x4006d20	          0x4885ff	                           test rdi, rdi	      3975	gui.c	FUNCTION_63	IF_1
0x4006d23	            0x7434	                            je 0x4006d59	      3975	gui.c	FUNCTION_63	IF_1
0x4006d25	    0x8b0500000000	            mov eax, dword [0x04006d2b] 	      3979	gui.c	FUNCTION_63	IF_2
0x4006d2b	            0x85c0	                           test eax, eax	      3979	gui.c	FUNCTION_63	IF_2
0x4006d2d	            0x752a	                           jne 0x4006d59	      3979	gui.c	FUNCTION_63	IF_2
0x4006d2f	            0x4156	                                push r14	      3961	gui.c	FUNCTION_63
0x4006d31	            0x4155	                                push r13	      3961	gui.c	FUNCTION_63
0x4006d33	            0x4154	                                push r12	      3961	gui.c	FUNCTION_63
0x4006d35	              0x55	                                push rbp	      3961	gui.c	FUNCTION_63
0x4006d36	    0x8b2d00000000	            mov ebp, dword [0x04006d3c] 	      3983	gui.c	FUNCTION_63	IF_3
0x4006d3c	              0x53	                                push rbx	      3961	gui.c	FUNCTION_63
0x4006d3d	          0x4889fb	                            mov rbx, rdi	      3961	gui.c	FUNCTION_63
0x4006d40	    0x488b3d000000	            mov rdi, qword [0x04006d47] 	      3965	gui.c	FUNCTION_63
0x4006d47	            0x85ed	                           test ebp, ebp	      3983	gui.c	FUNCTION_63	IF_3
0x4006d49	            0x7415	                            je 0x4006d60	      3983	gui.c	FUNCTION_63	IF_3
0x4006d4b	        0x483b7b08	                cmp rdi, qword [rbx + 8]	      3983	gui.c	FUNCTION_63	IF_3
0x4006d4f	            0x740f	                            je 0x4006d60	      3983	gui.c	FUNCTION_63	IF_3
0x4006d51	              0x5b	                                 pop rbx	      4155	gui.c	FUNCTION_63
0x4006d52	              0x5d	                                 pop rbp	      4155	gui.c	FUNCTION_63
0x4006d53	            0x415c	                                 pop r12	      4155	gui.c	FUNCTION_63
0x4006d55	            0x415d	                                 pop r13	      4155	gui.c	FUNCTION_63
0x4006d57	            0x415e	                                 pop r14	      4155	gui.c	FUNCTION_63
0x4006d59	            0xf3c3	                                     ret	      4155	gui.c	FUNCTION_63
0x4006d5b	       0xf1f440000	                   nop dword [rax + rax]	      4155	gui.c	FUNCTION_63
0x4006d60	            0x85d2	                           test edx, edx	      3987	gui.c	FUNCTION_63	IF_4
0x4006d62	    0x448baf940000	           mov r13d, dword [rdi + 0x94] 	      3965	gui.c	FUNCTION_63
0x4006d69	        0x4c8b7778	            mov r14, qword [rdi + 0x78] 	      3966	gui.c	FUNCTION_63
0x4006d6d	    0x448ba7840000	           mov r12d, dword [rdi + 0x84] 	      3968	gui.c	FUNCTION_63
0x4006d74	     0xf853e010000	                           jne 0x4006eb8	      3987	gui.c	FUNCTION_63	IF_4
0x4006d7a	        0x488b4308	                mov rax, qword [rbx + 8]	      3987	gui.c	FUNCTION_63	IF_4
0x4006d7e	    0xc70500000000	     mov dword [0x04006d88], 0xffffffff 	      3999	gui.c	FUNCTION_63	ELSE_3
0x4006d88	    0x48c705000000	               mov qword [0x04006d93], 0	      4003	gui.c	FUNCTION_63	ELSE_3
0x4006d93	          0x4885c0	                           test rax, rax	      4008	gui.c	FUNCTION_63	IF_7
0x4006d96	     0xf8454010000	                            je 0x4006ef0	      4008	gui.c	FUNCTION_63	IF_7
0x4006d9c	          0x4885f6	                           test rsi, rsi	      4008	gui.c	FUNCTION_63	IF_7
0x4006d9f	      0xbd00000000	                              mov ebp, 0	      4008	gui.c	FUNCTION_63	IF_7
0x4006da4	    0x448b1d000000	           mov r11d, dword [0x04006dab] 	      4030	gui.c	FUNCTION_63	IF_11
0x4006dab	        0x480f48f5	                          cmovs rsi, rbp	      4030	gui.c	FUNCTION_63	IF_11
0x4006daf	    0x488ba8b81800	          mov rbp, qword [rax + 0x18b8] 	      4020	gui.c	FUNCTION_63	IF_10
0x4006db6	    0x482ba8b01800	           sub rbp, qword [rax + 0x18b0]	      4020	gui.c	FUNCTION_63	IF_10
0x4006dbd	        0x4883c501	                              add rbp, 1	      4020	gui.c	FUNCTION_63	IF_10
0x4006dc1	          0x4839f5	                            cmp rbp, rsi	      4020	gui.c	FUNCTION_63	IF_10
0x4006dc4	        0x480f4fee	                          cmovg rbp, rsi	      4020	gui.c	FUNCTION_63	IF_10
0x4006dc8	          0x4585db	                         test r11d, r11d	      4030	gui.c	FUNCTION_63	IF_11
0x4006dcb	    0x4889a8a81800	          mov qword [rax + 0x18a8], rbp 	      4024	gui.c	FUNCTION_63
0x4006dd2	     0xf8579ffffff	                           jne 0x4006d51	      4030	gui.c	FUNCTION_63	IF_11
0x4006dd8	    0x488b88981800	          mov rcx, qword [rax + 0x1898] 	      4036	gui.c	FUNCTION_63	IF_12	CALL_1
0x4006ddf	    0x488d98901800	                 lea rbx, [rax + 0x1890]	      4009	gui.c	FUNCTION_63	IF_7
0x4006de6	          0x4885c9	                           test rcx, rcx	      4036	gui.c	FUNCTION_63	IF_12	CALL_1
0x4006de9	     0xf842d010000	                            je 0x4006f1c	      4036	gui.c	FUNCTION_63	IF_12	CALL_1
0x4006def	          0x4839cf	                            cmp rdi, rcx	      4036	gui.c	FUNCTION_63	IF_12	CALL_1
0x4006df2	     0xf8424010000	                            je 0x4006f1c	      4036	gui.c	FUNCTION_63	IF_12	CALL_1
0x4006df8	    0x488b05000000	            mov rax, qword [0x04006dff] 	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x4006dff	            0x31d2	                            xor edx, edx	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x4006e01	          0x4839c8	                            cmp rax, rcx	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x4006e04	            0x741f	                            je 0x4006e25	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x4006e06	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x4006e10	          0x4885c0	                           test rax, rax	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x4006e13	     0xf8438ffffff	                            je 0x4006d51	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x4006e19	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x4006e1d	          0x83c201	                              add edx, 1	      4053	gui.c	FUNCTION_63	IF_15	FOR_1
0x4006e20	          0x4839c8	                            cmp rax, rcx	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x4006e23	            0x75eb	                           jne 0x4006e10	      4052	gui.c	FUNCTION_63	IF_15	FOR_1
0x4006e25	    0x8b0500000000	            mov eax, dword [0x04006e2b] 	      4060	gui.c	FUNCTION_63	IF_15	IF_17
0x4006e2b	    0x891500000000	            mov dword [0x04006e31], edx 	      4058	gui.c	FUNCTION_63	IF_15
0x4006e31	    0x48892d000000	            mov qword [0x04006e38], rbp 	      4059	gui.c	FUNCTION_63	IF_15
0x4006e38	            0xa801	                              test al, 1	      4060	gui.c	FUNCTION_63	IF_15	IF_17
0x4006e3a	     0xf8590010000	                           jne 0x4006fd0	      4060	gui.c	FUNCTION_63	IF_15	IF_17
0x4006e40	            0xa810	                           test al, 0x10	      4065	gui.c	FUNCTION_63	IF_15	ELSE_5	IF_18
0x4006e42	     0xf8598010000	                           jne 0x4006fe0	      4065	gui.c	FUNCTION_63	IF_15	ELSE_5	IF_18
0x4006e48	            0xa808	                              test al, 8	      4070	gui.c	FUNCTION_63	IF_15	ELSE_6	IF_19
0x4006e4a	     0xf8560010000	                           jne 0x4006fb0	      4070	gui.c	FUNCTION_63	IF_15	ELSE_6	IF_19
0x4006e50	        0x488b4308	                mov rax, qword [rbx + 8]	      4080	gui.c	FUNCTION_63	IF_15
0x4006e54	    0x448b05000000	            mov r8d, dword [0x04006e5b] 	      4085	gui.c	FUNCTION_63	IF_15	IF_21
0x4006e5b	        0x488b4878	            mov rcx, qword [rax + 0x78] 	      4080	gui.c	FUNCTION_63	IF_15
0x4006e5f	          0x4585c0	                           test r8d, r8d	      4085	gui.c	FUNCTION_63	IF_15	IF_21
0x4006e62	        0x488d71ff	                      lea rsi, [rcx - 1]	      4080	gui.c	FUNCTION_63	IF_15
0x4006e66	        0x48897318	             mov qword [rbx + 0x18], rsi	      4080	gui.c	FUNCTION_63	IF_15
0x4006e6a	            0x740e	                            je 0x4006e7a	      4085	gui.c	FUNCTION_63	IF_15	IF_21
0x4006e6c	    0x8b3d00000000	            mov edi, dword [0x04006e72] 	      4085	gui.c	FUNCTION_63	IF_15	IF_21
0x4006e72	            0x85ff	                           test edi, edi	      4085	gui.c	FUNCTION_63	IF_15	IF_21
0x4006e74	     0xf8586010000	                           jne 0x4007000	      4085	gui.c	FUNCTION_63	IF_15	IF_21
0x4006e7a	    0x488b3d000000	            mov rdi, qword [0x04006e81] 	      4085	gui.c	FUNCTION_63	IF_15	IF_21
0x4006e81	    0x8b8f88020000	           mov ecx, dword [rdi + 0x288] 	      4134	gui.c	FUNCTION_63	IF_27
0x4006e87	            0x85c9	                           test ecx, ecx	      4134	gui.c	FUNCTION_63	IF_27
0x4006e89	            0x7416	                            je 0x4006ea1	      4134	gui.c	FUNCTION_63	IF_27
0x4006e8b	        0x488b4308	                mov rax, qword [rbx + 8]	      4135	gui.c	FUNCTION_63	IF_27
0x4006e8f	          0x4885c0	                           test rax, rax	      4135	gui.c	FUNCTION_63	IF_27
0x4006e92	     0xf84aa010000	                            je 0x4007042	      4135	gui.c	FUNCTION_63	IF_27
0x4006e98	          0x4839f8	                            cmp rax, rdi	      4136	gui.c	FUNCTION_63	IF_27
0x4006e9b	     0xf84ec010000	                            je 0x400708d	      4136	gui.c	FUNCTION_63	IF_27
0x4006ea1	              0x5b	                                 pop rbx	      4155	gui.c	FUNCTION_63
0x4006ea2	              0x5d	                                 pop rbp	      4155	gui.c	FUNCTION_63
0x4006ea3	            0x415c	                                 pop r12	      4155	gui.c	FUNCTION_63
0x4006ea5	            0x415d	                                 pop r13	      4155	gui.c	FUNCTION_63
0x4006ea7	            0x415e	                                 pop r14	      4155	gui.c	FUNCTION_63
0x4006ea9	      0xbe01000000	                              mov esi, 1	      4149	gui.c	FUNCTION_63	CALL_19
0x4006eae	            0x31ff	                            xor edi, edi	      4149	gui.c	FUNCTION_63	CALL_19
0x4006eb0	      0xe900000000	                           jmp 0x4006eb5	      4149	gui.c	FUNCTION_63	CALL_19
0x4006eb5	           0xf1f00	                         nop dword [rax]	      4149	gui.c	FUNCTION_63	CALL_19
0x4006eb8	        0x488b4308	                mov rax, qword [rbx + 8]	      3989	gui.c	FUNCTION_63	IF_4	IF_5
0x4006ebc	          0x4885c0	                           test rax, rax	      3989	gui.c	FUNCTION_63	IF_4	IF_5
0x4006ebf	     0xf842b010000	                            je 0x4006ff0	      3989	gui.c	FUNCTION_63	IF_4	IF_5
0x4006ec5	    0x488d90901800	                 lea rdx, [rax + 0x1890]	      3991	gui.c	FUNCTION_63	IF_4	ELSE_1	IF_6
0x4006ecc	          0x4839d3	                            cmp rbx, rdx	      3992	gui.c	FUNCTION_63	IF_4	ELSE_1	IF_6
0x4006ecf	           0xf95c2	                                setne dl	      3992	gui.c	FUNCTION_63	IF_4	ELSE_1	IF_6
0x4006ed2	           0xfb6d2	                           movzx edx, dl	      3992	gui.c	FUNCTION_63	IF_4	ELSE_1	IF_6
0x4006ed5	    0x891500000000	            mov dword [0x04006edb], edx 	      3992	gui.c	FUNCTION_63	IF_4	ELSE_1	IF_6
0x4006edb	    0x488905000000	            mov qword [0x04006ee2], rax 	      3995	gui.c	FUNCTION_63	IF_4
0x4006ee2	      0xe9acfeffff	                           jmp 0x4006d93	      3995	gui.c	FUNCTION_63	IF_4
0x4006ee7	    0x660f1f840000	                    nop word [rax + rax]	      3995	gui.c	FUNCTION_63	IF_4
0x4006ef0	          0x4885f6	                           test rsi, rsi	      3995	gui.c	FUNCTION_63	IF_4
0x4006ef3	        0x488b6b28	            mov rbp, qword [rbx + 0x28] 	      4020	gui.c	FUNCTION_63	IF_10
0x4006ef7	        0x480f48f0	                          cmovs rsi, rax	      4020	gui.c	FUNCTION_63	IF_10
0x4006efb	        0x482b6b20	             sub rbp, qword [rbx + 0x20]	      4020	gui.c	FUNCTION_63	IF_10
0x4006eff	    0x8b0500000000	            mov eax, dword [0x04006f05] 	      4030	gui.c	FUNCTION_63	IF_11
0x4006f05	        0x4883c501	                              add rbp, 1	      4020	gui.c	FUNCTION_63	IF_10
0x4006f09	          0x4839ee	                            cmp rsi, rbp	      4020	gui.c	FUNCTION_63	IF_10
0x4006f0c	        0x480f4eee	                         cmovle rbp, rsi	      4020	gui.c	FUNCTION_63	IF_10
0x4006f10	            0x85c0	                           test eax, eax	      4030	gui.c	FUNCTION_63	IF_11
0x4006f12	        0x48896b18	             mov qword [rbx + 0x18], rbp	      4024	gui.c	FUNCTION_63
0x4006f16	     0xf8535feffff	                           jne 0x4006d51	      4030	gui.c	FUNCTION_63	IF_11
0x4006f1c	      0xe800000000	                          call 0x4006f21	      4036	gui.c	FUNCTION_63	IF_12	CALL_1
0x4006f21	            0x85c0	                           test eax, eax	      4036	gui.c	FUNCTION_63	IF_12	CALL_1
0x4006f23	     0xf8528feffff	                           jne 0x4006d51	      4036	gui.c	FUNCTION_63	IF_12	CALL_1
0x4006f29	        0x488b4b08	                mov rcx, qword [rbx + 8]	      4041	gui.c	FUNCTION_63	IF_13
0x4006f2d	          0x4885c9	                           test rcx, rcx	      4041	gui.c	FUNCTION_63	IF_13
0x4006f30	     0xf85c2feffff	                           jne 0x4006df8	      4041	gui.c	FUNCTION_63	IF_13
0x4006f36	    0x488b3d000000	            mov rdi, qword [0x04006f3d] 	      4041	gui.c	FUNCTION_63	IF_13
0x4006f3d	    0x448b97540200	          mov r10d, dword [rdi + 0x254] 	      4041	gui.c	FUNCTION_63	IF_13
0x4006f44	          0x4585d2	                         test r10d, r10d	      4041	gui.c	FUNCTION_63	IF_13
0x4006f47	            0x7416	                            je 0x4006f5f	      4041	gui.c	FUNCTION_63	IF_13
0x4006f49	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      4043	gui.c	FUNCTION_63	IF_13
0x4006f4d	        0x4883c001	                              add rax, 1	      4043	gui.c	FUNCTION_63	IF_13
0x4006f51	        0x482b4320	             sub rax, qword [rbx + 0x20]	      4043	gui.c	FUNCTION_63	IF_13
0x4006f55	          0x4829e8	                            sub rax, rbp	      4043	gui.c	FUNCTION_63	IF_13
0x4006f58	        0x480f49c8	                         cmovns rcx, rax	      4043	gui.c	FUNCTION_63	IF_13
0x4006f5c	          0x4889cd	                            mov rbp, rcx	      4043	gui.c	FUNCTION_63	IF_13
0x4006f5f	    0x8b0500000000	            mov eax, dword [0x04006f65] 	      4105	gui.c	FUNCTION_63	ELSE_7	IF_22
0x4006f65	    0x48892d000000	            mov qword [0x04006f6c], rbp 	      4103	gui.c	FUNCTION_63	ELSE_7
0x4006f6c	            0xa801	                              test al, 1	      4105	gui.c	FUNCTION_63	ELSE_7	IF_22
0x4006f6e	     0xf852d010000	                           jne 0x40070a1	      4105	gui.c	FUNCTION_63	ELSE_7	IF_22
0x4006f74	            0xa810	                           test al, 0x10	      4107	gui.c	FUNCTION_63	ELSE_7	ELSE_8	IF_23
0x4006f76	     0xf853b010000	                           jne 0x40070b7	      4107	gui.c	FUNCTION_63	ELSE_7	ELSE_8	IF_23
0x4006f7c	            0xa808	                              test al, 8	      4109	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24
0x4006f7e	            0x7410	                            je 0x4006f90	      4109	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24
0x4006f80	    0x8b3500000000	            mov esi, dword [0x04006f86] 	      4111	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24	IF_25
0x4006f86	            0x85f6	                           test esi, esi	      4111	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24	IF_25
0x4006f88	     0xf843a010000	                            je 0x40070c8	      4111	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24	IF_25
0x4006f8e	            0x6690	                                     nop	      4111	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24	IF_25
0x4006f90	    0x443baf940000	           cmp r13d, dword [rdi + 0x94] 	      4117	gui.c	FUNCTION_63	ELSE_7	IF_26
0x4006f97	     0xf84e4feffff	                            je 0x4006e81	      4117	gui.c	FUNCTION_63	ELSE_7	IF_26
0x4006f9d	      0xe800000000	                          call 0x4006fa2	      4119	gui.c	FUNCTION_63	ELSE_7	IF_26	CALL_13
0x4006fa2	      0xe800000000	                          call 0x4006fa7	      4120	gui.c	FUNCTION_63	ELSE_7	IF_26	CALL_14
0x4006fa7	      0xe9cefeffff	                           jmp 0x4006e7a	      4120	gui.c	FUNCTION_63	ELSE_7	IF_26	CALL_14
0x4006fac	         0xf1f4000	                         nop dword [rax]	      4120	gui.c	FUNCTION_63	ELSE_7	IF_26	CALL_14
0x4006fb0	    0x448b0d000000	            mov r9d, dword [0x04006fb7] 	      4072	gui.c	FUNCTION_63	IF_15	ELSE_6	IF_19	IF_20
0x4006fb7	          0x4585c9	                           test r9d, r9d	      4072	gui.c	FUNCTION_63	IF_15	ELSE_6	IF_19	IF_20
0x4006fba	     0xf8590feffff	                           jne 0x4006e50	      4072	gui.c	FUNCTION_63	IF_15	ELSE_6	IF_19	IF_20
0x4006fc0	      0xe800000000	                          call 0x4006fc5	      4074	gui.c	FUNCTION_63	IF_15	ELSE_6	IF_19	IF_20	CALL_6
0x4006fc5	      0xe800000000	                          call 0x4006fca	      4075	gui.c	FUNCTION_63	IF_15	ELSE_6	IF_19	IF_20	CALL_7
0x4006fca	      0xe981feffff	                           jmp 0x4006e50	      4075	gui.c	FUNCTION_63	IF_15	ELSE_6	IF_19	IF_20	CALL_7
0x4006fcf	              0x90	                                     nop	      4075	gui.c	FUNCTION_63	IF_15	ELSE_6	IF_19	IF_20	CALL_7
0x4006fd0	      0xe800000000	                          call 0x4006fd5	      4062	gui.c	FUNCTION_63	IF_15	IF_17	CALL_2
0x4006fd5	      0xe800000000	                          call 0x4006fda	      4063	gui.c	FUNCTION_63	IF_15	IF_17	CALL_3
0x4006fda	      0xe971feffff	                           jmp 0x4006e50	      4063	gui.c	FUNCTION_63	IF_15	IF_17	CALL_3
0x4006fdf	              0x90	                                     nop	      4063	gui.c	FUNCTION_63	IF_15	IF_17	CALL_3
0x4006fe0	      0xe800000000	                          call 0x4006fe5	      4067	gui.c	FUNCTION_63	IF_15	ELSE_5	IF_18	CALL_4
0x4006fe5	      0xe800000000	                          call 0x4006fea	      4068	gui.c	FUNCTION_63	IF_15	ELSE_5	IF_18	CALL_5
0x4006fea	      0xe961feffff	                           jmp 0x4006e50	      4068	gui.c	FUNCTION_63	IF_15	ELSE_5	IF_18	CALL_5
0x4006fef	              0x90	                                     nop	      4068	gui.c	FUNCTION_63	IF_15	ELSE_5	IF_18	CALL_5
0x4006ff0	    0xc70500000000	               mov dword [0x04006ffa], 2	      3990	gui.c	FUNCTION_63	IF_4	IF_5
0x4006ffa	      0xe9dcfeffff	                           jmp 0x4006edb	      3990	gui.c	FUNCTION_63	IF_4	IF_5
0x4006fff	              0x90	                                     nop	      3990	gui.c	FUNCTION_63	IF_4	IF_5
0x4007000	    0x488db8e01800	                 lea rdi, [rax + 0x18e0]	      4088	gui.c	FUNCTION_63	IF_15	IF_21
0x4007007	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x400700b	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x400700f	          0x4839fb	                            cmp rbx, rdi	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4007012	        0x400f95c7	                               setne dil	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4007016	        0x400fb6ff	                          movzx edi, dil	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x400701a	    0x4c8d04bd0000	                         lea r8, [rdi*4]	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4007022	          0x4c01c7	                             add rdi, r8	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4007025	        0x48c1e704	                              shl rdi, 4	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4007029	    0x488dbc389018	           lea rdi, [rax + rdi + 0x1890]	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4007031	      0xe800000000	                          call 0x4007036	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4007036	    0x488b3d000000	            mov rdi, qword [0x0400703d] 	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x400703d	      0xe93ffeffff	                           jmp 0x4006e81	      4086	gui.c	FUNCTION_63	IF_15	IF_21	CALL_8
0x4007042	    0x443baf940000	           cmp r13d, dword [rdi + 0x94] 	      4135	gui.c	FUNCTION_63	IF_27
0x4007049	     0xf8452feffff	                            je 0x4006ea1	      4135	gui.c	FUNCTION_63	IF_27
0x400704f	      0xbf01000000	                              mov edi, 1	      4142	gui.c	FUNCTION_63	IF_27	CALL_15
0x4007054	      0xe800000000	                          call 0x4007059	      4142	gui.c	FUNCTION_63	IF_27	CALL_15
0x4007059	    0x488b1d000000	            mov rbx, qword [0x04007060] 	      4144	gui.c	FUNCTION_63	IF_27	CALL_16
0x4007060	          0x4885db	                           test rbx, rbx	      4144	gui.c	FUNCTION_63	IF_27	CALL_16
0x4007063	            0x741e	                            je 0x4007083	      4144	gui.c	FUNCTION_63	IF_27	CALL_16
0x4007065	           0xf1f00	                         nop dword [rax]	      4144	gui.c	FUNCTION_63	IF_27	CALL_16
0x4007068	    0x8b9328010000	           mov edx, dword [rbx + 0x128] 	      4145	gui.c	FUNCTION_63	IF_27	IF_28
0x400706e	            0x85d2	                           test edx, edx	      4145	gui.c	FUNCTION_63	IF_27	IF_28
0x4007070	            0x7e08	                           jle 0x400707a	      4145	gui.c	FUNCTION_63	IF_27	IF_28
0x4007072	          0x4889df	                            mov rdi, rbx	      4146	gui.c	FUNCTION_63	IF_27	CALL_17
0x4007075	      0xe800000000	                          call 0x400707a	      4146	gui.c	FUNCTION_63	IF_27	CALL_17
0x400707a	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      4144	gui.c	FUNCTION_63	IF_27	CALL_16
0x400707e	          0x4885db	                           test rbx, rbx	      4144	gui.c	FUNCTION_63	IF_27	CALL_16
0x4007081	            0x75e5	                           jne 0x4007068	      4144	gui.c	FUNCTION_63	IF_27	CALL_16
0x4007083	      0xe800000000	                          call 0x4007088	      4147	gui.c	FUNCTION_63	IF_27	CALL_18
0x4007088	      0xe914feffff	                           jmp 0x4006ea1	      4147	gui.c	FUNCTION_63	IF_27	CALL_18
0x400708d	        0x4c3b7778	            cmp r14, qword [rdi + 0x78] 	      4136	gui.c	FUNCTION_63	IF_27
0x4007091	            0x75bc	                           jne 0x400704f	      4136	gui.c	FUNCTION_63	IF_27
0x4007093	    0x443ba7840000	           cmp r12d, dword [rdi + 0x84] 	      4138	gui.c	FUNCTION_63	IF_27
0x400709a	            0x75b3	                           jne 0x400704f	      4138	gui.c	FUNCTION_63	IF_27
0x400709c	      0xe900feffff	                           jmp 0x4006ea1	      4138	gui.c	FUNCTION_63	IF_27
0x40070a1	          0x4889ef	                            mov rdi, rbp	      4106	gui.c	FUNCTION_63	ELSE_7	CALL_9
0x40070a4	            0x31f6	                            xor esi, esi	      4106	gui.c	FUNCTION_63	ELSE_7	CALL_9
0x40070a6	      0xe800000000	                          call 0x40070ab	      4106	gui.c	FUNCTION_63	ELSE_7	CALL_9
0x40070ab	    0x488b3d000000	            mov rdi, qword [0x040070b2] 	      4106	gui.c	FUNCTION_63	ELSE_7	CALL_9
0x40070b2	      0xe9d9feffff	                           jmp 0x4006f90	      4106	gui.c	FUNCTION_63	ELSE_7	CALL_9
0x40070b7	      0xe800000000	                          call 0x40070bc	      4108	gui.c	FUNCTION_63	ELSE_7	ELSE_8	IF_23
0x40070bc	    0x488b3d000000	            mov rdi, qword [0x040070c3] 	      4108	gui.c	FUNCTION_63	ELSE_7	ELSE_8	IF_23
0x40070c3	      0xe9c8feffff	                           jmp 0x4006f90	      4108	gui.c	FUNCTION_63	ELSE_7	ELSE_8	IF_23
0x40070c8	          0x4889ef	                            mov rdi, rbp	      4113	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24	IF_25	CALL_11
0x40070cb	            0x31f6	                            xor esi, esi	      4113	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24	IF_25	CALL_11
0x40070cd	      0xe800000000	                          call 0x40070d2	      4113	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24	IF_25	CALL_11
0x40070d2	      0xe800000000	                          call 0x40070d7	      4114	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24	IF_25	CALL_12
0x40070d7	    0x488b3d000000	            mov rdi, qword [0x040070de] 	      4114	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24	IF_25	CALL_12
0x40070de	      0xe9adfeffff	                           jmp 0x4006f90	      4114	gui.c	FUNCTION_63	ELSE_7	ELSE_9	IF_24	IF_25	CALL_12
gui_do_horiz_scroll	WHILE,0:SWITCH,0:CALL,5:ELSE,1:DO,0:IF,5:FOR,0:functions,0	76
0x4006c00	    0x488b05000000	            mov rax, qword [0x04006c07] 	      4698	gui.c	FUNCTION_71	IF_1
0x4006c07	    0x8b8894020000	           mov ecx, dword [rax + 0x294] 	      4698	gui.c	FUNCTION_71	IF_1
0x4006c0d	            0x85c9	                           test ecx, ecx	      4698	gui.c	FUNCTION_71	IF_1
0x4006c0f	            0x753f	                           jne 0x4006c50	      4698	gui.c	FUNCTION_71	IF_1
0x4006c11	    0x39b894000000	            cmp dword [rax + 0x94], edi 	      4701	gui.c	FUNCTION_71	IF_2
0x4006c17	            0x7437	                            je 0x4006c50	      4701	gui.c	FUNCTION_71	IF_2
0x4006c19	            0x4156	                                push r14	      4696	gui.c	FUNCTION_71
0x4006c1b	            0x4155	                                push r13	      4696	gui.c	FUNCTION_71
0x4006c1d	            0x4154	                                push r12	      4696	gui.c	FUNCTION_71
0x4006c1f	              0x55	                                push rbp	      4696	gui.c	FUNCTION_71
0x4006c20	            0x89f5	                            mov ebp, esi	      4696	gui.c	FUNCTION_71
0x4006c22	              0x53	                                push rbx	      4696	gui.c	FUNCTION_71
0x4006c23	    0x89b894000000	             mov dword [rax + 0x94], edi	      4704	gui.c	FUNCTION_71
0x4006c29	          0x4889fb	                            mov rbx, rdi	      4704	gui.c	FUNCTION_71
0x4006c2c	    0x488b3d000000	            mov rdi, qword [0x04006c33] 	      4708	gui.c	FUNCTION_71	IF_3	CALL_1
0x4006c33	      0xbe68000000	                           mov esi, 0x68	      4708	gui.c	FUNCTION_71	IF_3	CALL_1
0x4006c38	      0xe800000000	                          call 0x4006c3d	      4708	gui.c	FUNCTION_71	IF_3	CALL_1
0x4006c3d	          0x4885c0	                           test rax, rax	      4708	gui.c	FUNCTION_71	IF_3	CALL_1
0x4006c40	            0x7416	                            je 0x4006c58	      4708	gui.c	FUNCTION_71	IF_3	CALL_1
0x4006c42	              0x5b	                                 pop rbx	      4727	gui.c	FUNCTION_71
0x4006c43	              0x5d	                                 pop rbp	      4727	gui.c	FUNCTION_71
0x4006c44	            0x415c	                                 pop r12	      4727	gui.c	FUNCTION_71
0x4006c46	            0x415d	                                 pop r13	      4727	gui.c	FUNCTION_71
0x4006c48	            0x415e	                                 pop r14	      4727	gui.c	FUNCTION_71
0x4006c4a	      0xe900000000	                           jmp 0x4006c4f	      4726	gui.c	FUNCTION_71	CALL_5
0x4006c4f	              0x90	                                     nop	      4726	gui.c	FUNCTION_71	CALL_5
0x4006c50	            0x31c0	                            xor eax, eax	      4727	gui.c	FUNCTION_71
0x4006c52	              0xc3	                                     ret	      4727	gui.c	FUNCTION_71
0x4006c53	       0xf1f440000	                   nop dword [rax + rax]	      4727	gui.c	FUNCTION_71
0x4006c58	      0xe800000000	                          call 0x4006c5d	      4709	gui.c	FUNCTION_71	IF_3	CALL_2
0x4006c5d	            0x85c0	                           test eax, eax	      4709	gui.c	FUNCTION_71	IF_3	CALL_2
0x4006c5f	            0x75e1	                           jne 0x4006c42	      4709	gui.c	FUNCTION_71	IF_3	CALL_2
0x4006c61	    0x488b05000000	            mov rax, qword [0x04006c68] 	      4710	gui.c	FUNCTION_71	IF_3	CALL_3
0x4006c68	          0x4531ed	                          xor r13d, r13d	      4540	gui.c	FUNCTION_68
0x4006c6b	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      4539	gui.c	FUNCTION_68	CALL_1
0x4006c6f	      0xe800000000	                          call 0x4006c74	      4539	gui.c	FUNCTION_68	CALL_1
0x4006c74	          0x803800	                       cmp byte [rax], 0	      4541	gui.c	FUNCTION_68	IF_1
0x4006c77	          0x4989c4	                            mov r12, rax	      4539	gui.c	FUNCTION_68	CALL_1
0x4006c7a	            0x7511	                           jne 0x4006c8d	      4541	gui.c	FUNCTION_68	IF_1
0x4006c7c	            0xeb39	                           jmp 0x4006cb7	      4541	gui.c	FUNCTION_68	IF_1
0x4006c7e	            0x6690	                                     nop	      4541	gui.c	FUNCTION_68	IF_1
0x4006c80	          0x4901c4	                            add r12, rax	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x4006c83	      0x41803c2400	                       cmp byte [r12], 0	      4546	gui.c	FUNCTION_68	IF_1	FOR_1	IF_2
0x4006c88	            0x742d	                            je 0x4006cb7	      4546	gui.c	FUNCTION_68	IF_1	FOR_1	IF_2
0x4006c8a	          0x4501f5	                          add r13d, r14d	      4548	gui.c	FUNCTION_68	IF_1	FOR_1
0x4006c8d	          0x4489ee	                           mov esi, r13d	      4544	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_2
0x4006c90	          0x4c89e7	                            mov rdi, r12	      4544	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_2
0x4006c93	      0xe800000000	                          call 0x4006c98	      4544	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_2
0x4006c98	    0x8b1500000000	            mov edx, dword [0x04006c9e] 	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x4006c9e	          0x4189c6	                           mov r14d, eax	      4544	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_2
0x4006ca1	      0xb801000000	                              mov eax, 1	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x4006ca6	            0x85d2	                           test edx, edx	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x4006ca8	            0x74d6	                            je 0x4006c80	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x4006caa	          0x4c89e7	                            mov rdi, r12	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x4006cad	    0xff1500000000	                 call qword [0x04006cb3]	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x4006cb3	            0x4898	                                    cdqe	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x4006cb5	            0xebc9	                           jmp 0x4006c80	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x4006cb7	          0x4439eb	                           cmp ebx, r13d	      4710	gui.c	FUNCTION_71	IF_3	CALL_3
0x4006cba	            0x7e86	                           jle 0x4006c42	      4710	gui.c	FUNCTION_71	IF_3	CALL_3
0x4006cbc	            0x85ed	                           test ebp, ebp	      4712	gui.c	FUNCTION_71	IF_3	IF_4
0x4006cbe	            0x7535	                           jne 0x4006cf5	      4712	gui.c	FUNCTION_71	IF_3	IF_4
0x4006cc0	    0x488b05000000	            mov rax, qword [0x04006cc7] 	      4718	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x4006cc7	    0x488b15000000	            mov rdx, qword [0x04006cce] 	      4718	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x4006cce	        0x48395078	            cmp qword [rax + 0x78], rdx 	      4718	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x4006cd2	     0xf8f6affffff	                            jg 0x4006c42	      4718	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x4006cd8	    0x483b90e80000	            cmp rdx, qword [rax + 0xe8] 	      4719	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x4006cdf	     0xf8d5dffffff	                           jge 0x4006c42	      4719	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x4006ce5	        0x48895038	             mov qword [rax + 0x38], rdx	      4721	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x4006ce9	    0xc74040000000	               mov dword [rax + 0x40], 0	      4722	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x4006cf0	      0xe94dffffff	                           jmp 0x4006c42	      4722	gui.c	FUNCTION_71	IF_3	ELSE_1	IF_5
0x4006cf5	    0x488b1d000000	            mov rbx, qword [0x04006cfc] 	      4714	gui.c	FUNCTION_71	IF_3	IF_4	CALL_4
0x4006cfc	      0xe87f9affff	          call sym.gui_find_longest_lnum	      4714	gui.c	FUNCTION_71	IF_3	IF_4	CALL_4
0x4006d01	        0x48894338	             mov qword [rbx + 0x38], rax	      4714	gui.c	FUNCTION_71	IF_3	IF_4	CALL_4
0x4006d05	    0x488b05000000	            mov rax, qword [0x04006d0c] 	      4715	gui.c	FUNCTION_71	IF_3	IF_4
0x4006d0c	    0xc74040000000	               mov dword [rax + 0x40], 0	      4715	gui.c	FUNCTION_71	IF_3	IF_4
0x4006d13	      0xe92affffff	                           jmp 0x4006c42	      4715	gui.c	FUNCTION_71	IF_3	IF_4
send_tabline_menu_event	WHILE,0:SWITCH,0:CALL,2:ELSE,0:DO,0:IF,1:FOR,0:functions,0	32
0x40064f0	              0x55	                                push rbp	      3857	gui.c	FUNCTION_59
0x40064f1	              0x53	                                push rbx	      3857	gui.c	FUNCTION_59
0x40064f2	        0x4883ec18	                           sub rsp, 0x18	      3857	gui.c	FUNCTION_59
0x40064f6	    0x64488b042528	                mov rax, qword fs:[0x28]	      3857	gui.c	FUNCTION_59
0x40064ff	      0x4889442408	                mov qword [rsp + 8], rax	      3857	gui.c	FUNCTION_59
0x4006504	            0x31c0	                            xor eax, eax	      3857	gui.c	FUNCTION_59
0x4006506	    0x8b0500000000	            mov eax, dword [0x0400650c] 	      3861	gui.c	FUNCTION_59	IF_1
0x400650c	            0x85c0	                           test eax, eax	      3861	gui.c	FUNCTION_59	IF_1
0x400650e	            0x7420	                            je 0x4006530	      3861	gui.c	FUNCTION_59	IF_1
0x4006510	      0x488b442408	                mov rax, qword [rsp + 8]	      3871	gui.c	FUNCTION_59
0x4006515	    0x644833042528	                xor rax, qword fs:[0x28]	      3871	gui.c	FUNCTION_59
0x400651e	            0x7546	                           jne 0x4006566	      3871	gui.c	FUNCTION_59
0x4006520	        0x4883c418	                           add rsp, 0x18	      3871	gui.c	FUNCTION_59
0x4006524	              0x5b	                                 pop rbx	      3871	gui.c	FUNCTION_59
0x4006525	              0x5d	                                 pop rbp	      3871	gui.c	FUNCTION_59
0x4006526	              0xc3	                                     ret	      3871	gui.c	FUNCTION_59
0x4006527	    0x660f1f840000	                    nop word [rax + rax]	      3871	gui.c	FUNCTION_59
0x4006530	            0x89fd	                            mov ebp, edi	      3871	gui.c	FUNCTION_59
0x4006532	            0x89f3	                            mov ebx, esi	      3871	gui.c	FUNCTION_59
0x4006534	          0x4889e7	                            mov rdi, rsp	      3867	gui.c	FUNCTION_59	CALL_1
0x4006537	      0xbe03000000	                              mov esi, 3	      3867	gui.c	FUNCTION_59	CALL_1
0x400653c	        0xc604249b	                    mov byte [rsp], 0x9b	      3864	gui.c	FUNCTION_59
0x4006540	      0xc6442401ef	                mov byte [rsp + 1], 0xef	      3865	gui.c	FUNCTION_59
0x4006545	      0xc644240258	                mov byte [rsp + 2], 0x58	      3866	gui.c	FUNCTION_59
0x400654a	      0xe800000000	                          call 0x400654f	      3867	gui.c	FUNCTION_59	CALL_1
0x400654f	      0xbe02000000	                              mov esi, 2	      3870	gui.c	FUNCTION_59	CALL_2
0x4006554	          0x4889e7	                            mov rdi, rsp	      3870	gui.c	FUNCTION_59	CALL_2
0x4006557	        0x40882c24	                     mov byte [rsp], bpl	      3868	gui.c	FUNCTION_59
0x400655b	        0x885c2401	                  mov byte [rsp + 1], bl	      3869	gui.c	FUNCTION_59
0x400655f	      0xe800000000	                          call 0x4006564	      3870	gui.c	FUNCTION_59	CALL_2
0x4006564	            0xebaa	                           jmp 0x4006510	      3870	gui.c	FUNCTION_59	CALL_2
0x4006566	      0xe800000000	                          call 0x400656b	      3871	gui.c	FUNCTION_59
gui_handle_drop	WHILE,0:SWITCH,0:CALL,27:ELSE,4:DO,0:IF,11:FOR,1:functions,0	151
0x4008770	            0x4156	                                push r14	      5435	gui.c	FUNCTION_93
0x4008772	            0x4155	                                push r13	      5435	gui.c	FUNCTION_93
0x4008774	            0x4154	                                push r12	      5435	gui.c	FUNCTION_93
0x4008776	              0x55	                                push rbp	      5435	gui.c	FUNCTION_93
0x4008777	              0x53	                                push rbx	      5435	gui.c	FUNCTION_93
0x4008778	        0x4883ec10	                           sub rsp, 0x10	      5435	gui.c	FUNCTION_93
0x400877c	    0x64488b042528	                mov rax, qword fs:[0x28]	      5435	gui.c	FUNCTION_93
0x4008785	      0x4889442408	                mov qword [rsp + 8], rax	      5435	gui.c	FUNCTION_93
0x400878a	            0x31c0	                            xor eax, eax	      5435	gui.c	FUNCTION_93
0x400878c	    0x8b0500000000	            mov eax, dword [0x04008792] 	      5445	gui.c	FUNCTION_93	IF_1
0x4008792	            0x85c0	                           test eax, eax	      5445	gui.c	FUNCTION_93	IF_1
0x4008794	     0xf85a6000000	                           jne 0x4008840	      5445	gui.c	FUNCTION_93	IF_1
0x400879a	    0xf60500000000	               test byte [0x040087a1], 8	      5453	gui.c	FUNCTION_93	IF_2
0x40087a1	          0x4989ce	                            mov r14, rcx	      5453	gui.c	FUNCTION_93	IF_2
0x40087a4	          0x4589c5	                           mov r13d, r8d	      5453	gui.c	FUNCTION_93	IF_2
0x40087a7	    0xc70500000000	               mov dword [0x040087b1], 1	      5447	gui.c	FUNCTION_93
0x40087b1	     0xf84b1000000	                            je 0x4008868	      5453	gui.c	FUNCTION_93	IF_2
0x40087b7	          0x4489c6	                            mov esi, r8d	      5455	gui.c	FUNCTION_93	IF_2	CALL_1
0x40087ba	          0x4889cf	                            mov rdi, rcx	      5455	gui.c	FUNCTION_93	IF_2	CALL_1
0x40087bd	            0x31ed	                            xor ebp, ebp	      5456	gui.c	FUNCTION_93	IF_2	FOR_1
0x40087bf	      0xe800000000	                          call 0x40087c4	      5455	gui.c	FUNCTION_93	IF_2	CALL_1
0x40087c4	          0x4585ed	                         test r13d, r13d	      5456	gui.c	FUNCTION_93	IF_2	FOR_1
0x40087c7	          0x4c89f3	                            mov rbx, r14	      5456	gui.c	FUNCTION_93	IF_2	FOR_1
0x40087ca	            0x7e62	                           jle 0x400882e	      5456	gui.c	FUNCTION_93	IF_2	FOR_1
0x40087cc	         0xf1f4000	                         nop dword [rax]	      5456	gui.c	FUNCTION_93	IF_2	FOR_1
0x40087d0	          0x488b3b	                    mov rdi, qword [rbx]	      5458	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3
0x40087d3	          0x4885ff	                           test rdi, rdi	      5458	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3
0x40087d6	            0x744a	                            je 0x4008822	      5458	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3
0x40087d8	            0x85ed	                           test ebp, ebp	      5460	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	IF_4
0x40087da	            0x7e12	                           jle 0x40087ee	      5460	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	IF_4
0x40087dc	      0xbf00000000	                              mov edi, 0	      5461	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_2
0x40087e1	      0xbe01000000	                              mov esi, 1	      5461	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_2
0x40087e6	      0xe800000000	                          call 0x40087eb	      5461	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_2
0x40087eb	          0x488b3b	                    mov rdi, qword [rbx]	      5461	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_2
0x40087ee	      0xbe00000000	                              mov esi, 0	      5469	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_4
0x40087f3	      0xe800000000	                          call 0x40087f8	      5469	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_4
0x40087f8	          0x4885c0	                           test rax, rax	      5471	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	IF_5
0x40087fb	          0x4989c4	                            mov r12, rax	      5469	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_4
0x40087fe	            0x7412	                            je 0x4008812	      5471	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	IF_5
0x4008800	          0x4889c7	                            mov rdi, rax	      5472	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_6
0x4008803	      0xe800000000	                          call 0x4008808	      5472	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_6
0x4008808	          0x4c89e7	                            mov rdi, r12	      5472	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_6
0x400880b	            0x89c6	                            mov esi, eax	      5472	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_6
0x400880d	      0xe800000000	                          call 0x4008812	      5472	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_6
0x4008812	          0x4c89e7	                            mov rdi, r12	      5473	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_7
0x4008815	      0xe800000000	                          call 0x400881a	      5473	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_7
0x400881a	          0x488b3b	                    mov rdi, qword [rbx]	      5474	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_8
0x400881d	      0xe800000000	                          call 0x4008822	      5474	gui.c	FUNCTION_93	IF_2	FOR_1	IF_3	CALL_8
0x4008822	          0x83c501	                              add ebp, 1	      5456	gui.c	FUNCTION_93	IF_2	FOR_1
0x4008825	        0x4883c308	                              add rbx, 8	      5456	gui.c	FUNCTION_93	IF_2	FOR_1
0x4008829	          0x4139ed	                           cmp r13d, ebp	      5456	gui.c	FUNCTION_93	IF_2	FOR_1
0x400882c	            0x75a2	                           jne 0x40087d0	      5456	gui.c	FUNCTION_93	IF_2	FOR_1
0x400882e	          0x4c89f7	                            mov rdi, r14	      5477	gui.c	FUNCTION_93	IF_2	CALL_9
0x4008831	      0xe800000000	                          call 0x4008836	      5477	gui.c	FUNCTION_93	IF_2	CALL_9
0x4008836	    0xc70500000000	               mov dword [0x04008840], 0	      5531	gui.c	FUNCTION_93
0x4008840	      0x488b442408	                mov rax, qword [rsp + 8]	      5532	gui.c	FUNCTION_93
0x4008845	    0x644833042528	                xor rax, qword fs:[0x28]	      5532	gui.c	FUNCTION_93
0x400884e	     0xf8546010000	                           jne 0x400899a	      5532	gui.c	FUNCTION_93
0x4008854	        0x4883c410	                           add rsp, 0x10	      5532	gui.c	FUNCTION_93
0x4008858	              0x5b	                                 pop rbx	      5532	gui.c	FUNCTION_93
0x4008859	              0x5d	                                 pop rbp	      5532	gui.c	FUNCTION_93
0x400885a	            0x415c	                                 pop r12	      5532	gui.c	FUNCTION_93
0x400885c	            0x415d	                                 pop r13	      5532	gui.c	FUNCTION_93
0x400885e	            0x415e	                                 pop r14	      5532	gui.c	FUNCTION_93
0x4008860	              0xc3	                                     ret	      5532	gui.c	FUNCTION_93
0x4008861	     0xf1f80000000	                         nop dword [rax]	      5532	gui.c	FUNCTION_93
0x4008868	    0x8b0d00000000	            mov ecx, dword [0x0400886e] 	      5410	gui.c	FUNCTION_92	CALL_1
0x400886e	            0x89f0	                            mov eax, esi	      5410	gui.c	FUNCTION_92	CALL_1
0x4008870	            0x89d3	                            mov ebx, edx	      5410	gui.c	FUNCTION_92	CALL_1
0x4008872	            0x29c8	                            sub eax, ecx	      5410	gui.c	FUNCTION_92	CALL_1
0x4008874	              0x99	                                     cdq	      5410	gui.c	FUNCTION_92	CALL_1
0x4008875	    0xf73d00000000	                 idiv dword [0x0400887b]	      5410	gui.c	FUNCTION_92	CALL_1
0x400887b	            0x89c6	                            mov esi, eax	      5410	gui.c	FUNCTION_92	CALL_1
0x400887d	          0x890424	                    mov dword [rsp], eax	      5410	gui.c	FUNCTION_92	CALL_1
0x4008880	            0x89f8	                            mov eax, edi	      5411	gui.c	FUNCTION_92	CALL_2
0x4008882	            0x29c8	                            sub eax, ecx	      5411	gui.c	FUNCTION_92	CALL_2
0x4008884	              0x99	                                     cdq	      5411	gui.c	FUNCTION_92	CALL_2
0x4008885	    0xf73d00000000	                 idiv dword [0x0400888b]	      5411	gui.c	FUNCTION_92	CALL_2
0x400888b	            0x85f6	                           test esi, esi	      5414	gui.c	FUNCTION_92	IF_1
0x400888d	        0x89442404	                mov dword [rsp + 4], eax	      5411	gui.c	FUNCTION_92	CALL_2
0x4008891	            0x7827	                            js 0x40088ba	      5414	gui.c	FUNCTION_92	IF_1
0x4008893	            0x85c0	                           test eax, eax	      5414	gui.c	FUNCTION_92	IF_1
0x4008895	            0x7823	                            js 0x40088ba	      5414	gui.c	FUNCTION_92	IF_1
0x4008897	      0x488d742404	                      lea rsi, [rsp + 4]	      5416	gui.c	FUNCTION_92	IF_1	CALL_3
0x400889c	          0x4889e7	                            mov rdi, rsp	      5416	gui.c	FUNCTION_92	IF_1	CALL_3
0x400889f	      0xe800000000	                          call 0x40088a4	      5416	gui.c	FUNCTION_92	IF_1	CALL_3
0x40088a4	          0x4885c0	                           test rax, rax	      5417	gui.c	FUNCTION_92	IF_1	IF_2
0x40088a7	            0x7411	                            je 0x40088ba	      5417	gui.c	FUNCTION_92	IF_1	IF_2
0x40088a9	    0x483b05000000	            cmp rax, qword [0x040088b0] 	      5417	gui.c	FUNCTION_92	IF_1	IF_2
0x40088b0	            0x7408	                            je 0x40088ba	      5417	gui.c	FUNCTION_92	IF_1	IF_2
0x40088b2	          0x4889c7	                            mov rdi, rax	      5418	gui.c	FUNCTION_92	IF_1	CALL_4
0x40088b5	      0xe800000000	                          call 0x40088ba	      5418	gui.c	FUNCTION_92	IF_1	CALL_4
0x40088ba	          0x4489ee	                           mov esi, r13d	      5484	gui.c	FUNCTION_93	ELSE_1	CALL_11
0x40088bd	          0x4c89f7	                            mov rdi, r14	      5484	gui.c	FUNCTION_93	ELSE_1	CALL_11
0x40088c0	            0x31ed	                            xor ebp, ebp	      5490	gui.c	FUNCTION_93	ELSE_1	ELSE_2
0x40088c2	      0xe800000000	                          call 0x40088c7	      5484	gui.c	FUNCTION_93	ELSE_1	CALL_11
0x40088c7	          0xf6c304	                              test bl, 4	      5487	gui.c	FUNCTION_93	ELSE_1	IF_6
0x40088ca	     0xf8590000000	                           jne 0x4008960	      5487	gui.c	FUNCTION_93	ELSE_1	IF_6
0x40088d0	            0x89da	                            mov edx, ebx	      5502	gui.c	FUNCTION_93	ELSE_1	CALL_16
0x40088d2	          0x4c89f6	                            mov rsi, r14	      5502	gui.c	FUNCTION_93	ELSE_1	CALL_16
0x40088d5	          0x4489ef	                           mov edi, r13d	      5502	gui.c	FUNCTION_93	ELSE_1	CALL_16
0x40088d8	          0xc1ea04	                              shr edx, 4	      5502	gui.c	FUNCTION_93	ELSE_1	CALL_16
0x40088db	          0x83e201	                              and edx, 1	      5502	gui.c	FUNCTION_93	ELSE_1	CALL_16
0x40088de	      0xe800000000	                          call 0x40088e3	      5502	gui.c	FUNCTION_93	ELSE_1	CALL_16
0x40088e3	          0x4885ed	                           test rbp, rbp	      5507	gui.c	FUNCTION_93	ELSE_1	IF_8
0x40088e6	            0x7426	                            je 0x400890e	      5507	gui.c	FUNCTION_93	ELSE_1	IF_8
0x40088e8	          0x4889ef	                            mov rdi, rbp	      5509	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	CALL_17
0x40088eb	      0xe800000000	                          call 0x40088f0	      5509	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	CALL_17
0x40088f0	            0x85c0	                           test eax, eax	      5509	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	CALL_17
0x40088f2	            0x754c	                           jne 0x4008940	      5509	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	CALL_17
0x40088f4	      0xbe00000000	                              mov esi, 0	      5514	gui.c	FUNCTION_93	ELSE_1	IF_8	ELSE_4	IF_11	CALL_20
0x40088f9	          0x4889ef	                            mov rdi, rbp	      5514	gui.c	FUNCTION_93	ELSE_1	IF_8	ELSE_4	IF_11	CALL_20
0x40088fc	      0xe800000000	                          call 0x4008901	      5514	gui.c	FUNCTION_93	ELSE_1	IF_8	ELSE_4	IF_11	CALL_20
0x4008901	          0x83f801	                              cmp eax, 1	      5514	gui.c	FUNCTION_93	ELSE_1	IF_8	ELSE_4	IF_11	CALL_20
0x4008904	            0x7446	                            je 0x400894c	      5514	gui.c	FUNCTION_93	ELSE_1	IF_8	ELSE_4	IF_11	CALL_20
0x4008906	          0x4889ef	                            mov rdi, rbp	      5516	gui.c	FUNCTION_93	ELSE_1	IF_8	CALL_22
0x4008909	      0xe800000000	                          call 0x400890e	      5516	gui.c	FUNCTION_93	ELSE_1	IF_8	CALL_22
0x400890e	      0xbf28000000	                           mov edi, 0x28	      5520	gui.c	FUNCTION_93	ELSE_1	CALL_23
0x4008913	      0xe800000000	                          call 0x4008918	      5520	gui.c	FUNCTION_93	ELSE_1	CALL_23
0x4008918	            0x31ff	                            xor edi, edi	      5522	gui.c	FUNCTION_93	ELSE_1	CALL_24
0x400891a	      0xe800000000	                          call 0x400891f	      5522	gui.c	FUNCTION_93	ELSE_1	CALL_24
0x400891f	      0xe800000000	                          call 0x4008924	      5525	gui.c	FUNCTION_93	ELSE_1	CALL_25
0x4008924	      0xe800000000	                          call 0x4008929	      5527	gui.c	FUNCTION_93	ELSE_1	CALL_26
0x4008929	            0x31f6	                            xor esi, esi	      5528	gui.c	FUNCTION_93	ELSE_1	CALL_27
0x400892b	            0x31ff	                            xor edi, edi	      5528	gui.c	FUNCTION_93	ELSE_1	CALL_27
0x400892d	      0xe800000000	                          call 0x4008932	      5528	gui.c	FUNCTION_93	ELSE_1	CALL_27
0x4008932	      0xe9fffeffff	                           jmp 0x4008836	      5528	gui.c	FUNCTION_93	ELSE_1	CALL_27
0x4008937	    0x660f1f840000	                    nop word [rax + rax]	      5528	gui.c	FUNCTION_93	ELSE_1	CALL_27
0x4008940	          0x4889ef	                            mov rdi, rbp	      5511	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	IF_10	CALL_18
0x4008943	      0xe800000000	                          call 0x4008948	      5511	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	IF_10	CALL_18
0x4008948	            0x85c0	                           test eax, eax	      5511	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	IF_10	CALL_18
0x400894a	            0x75ba	                           jne 0x4008906	      5511	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	IF_10	CALL_18
0x400894c	      0xbf01000000	                              mov edi, 1	      5512	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	CALL_19
0x4008951	      0xe800000000	                          call 0x4008956	      5512	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	CALL_19
0x4008956	            0xebae	                           jmp 0x4008906	      5512	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	CALL_19
0x4008958	     0xf1f84000000	                   nop dword [rax + rax]	      5512	gui.c	FUNCTION_93	ELSE_1	IF_8	IF_9	CALL_19
0x4008960	          0x498b3e	                    mov rdi, qword [r14]	      5488	gui.c	FUNCTION_93	ELSE_1	CALL_12
0x4008963	      0xe800000000	                          call 0x4008968	      5488	gui.c	FUNCTION_93	ELSE_1	CALL_12
0x4008968	        0x4183fd01	                             cmp r13d, 1	      5495	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7
0x400896c	          0x4889c5	                            mov rbp, rax	      5488	gui.c	FUNCTION_93	ELSE_1	CALL_12
0x400896f	     0xf855bffffff	                           jne 0x40088d0	      5495	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7
0x4008975	          0x498b3e	                    mov rdi, qword [r14]	      5496	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_13
0x4008978	      0xe800000000	                          call 0x400897d	      5496	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_13
0x400897d	            0x85c0	                           test eax, eax	      5496	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_13
0x400897f	     0xf844bffffff	                            je 0x40088d0	      5496	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_13
0x4008985	          0x498b3e	                    mov rdi, qword [r14]	      5498	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_14
0x4008988	      0xe800000000	                          call 0x400898d	      5498	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_14
0x400898d	          0x4c89f7	                            mov rdi, r14	      5499	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_15
0x4008990	      0xe800000000	                          call 0x4008995	      5499	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_15
0x4008995	      0xe949ffffff	                           jmp 0x40088e3	      5499	gui.c	FUNCTION_93	ELSE_1	ELSE_2	IF_7	CALL_15
0x400899a	      0xe800000000	                  call section_end..text	      5532	gui.c	FUNCTION_93
gui_wait_for_chars_3	WHILE,0:SWITCH,0:CALL,1:ELSE,0:DO,0:IF,0:FOR,0:functions,0	1
0x4000040	      0xe900000000	                           jmp 0x4000045	      2929	gui.c	FUNCTION_45	CALL_1
gui_remove_scrollbars	WHILE,0:SWITCH,0:CALL,1:ELSE,1:DO,0:IF,1:FOR,1:functions,1	36
0x4006570	            0x4155	                                push r13	      3884	gui.c	FUNCTION_60
0x4006572	            0x4154	                                push r12	      3884	gui.c	FUNCTION_60
0x4006574	          0x4531e4	                          xor r12d, r12d	      3888	gui.c	FUNCTION_60	FOR_1
0x4006577	              0x55	                                push rbp	      3884	gui.c	FUNCTION_60
0x4006578	              0x53	                                push rbx	      3884	gui.c	FUNCTION_60
0x4006579	        0x4883ec08	                              sub rsp, 8	      3884	gui.c	FUNCTION_60
0x400657d	    0x488b1d000000	            mov rbx, qword [0x04006584] 	      3894	gui.c	FUNCTION_60	FOR_1	ELSE_1
0x4006584	          0x4d63ec	                        movsxd r13, r12d	      3894	gui.c	FUNCTION_60	FOR_1	ELSE_1
0x4006587	          0x4885db	                           test rbx, rbx	      3894	gui.c	FUNCTION_60	FOR_1	ELSE_1
0x400658a	            0x7428	                            je 0x40065b4	      3894	gui.c	FUNCTION_60	FOR_1	ELSE_1
0x400658c	      0x4b8d6cad00	                  lea rbp, [r13 + r13*4]	      4412	gui.c	FUNCTION_66	CALL_1
0x4006591	        0x48c1e504	                              shl rbp, 4	      4412	gui.c	FUNCTION_66	CALL_1
0x4006595	    0x4881c5901800	                         add rbp, 0x1890	      4412	gui.c	FUNCTION_66	CALL_1
0x400659c	         0xf1f4000	                         nop dword [rax]	      4412	gui.c	FUNCTION_66	CALL_1
0x40065a0	        0x488d3c2b	                    lea rdi, [rbx + rbp]	      4412	gui.c	FUNCTION_66	CALL_1
0x40065a4	            0x31f6	                            xor esi, esi	      4412	gui.c	FUNCTION_66	CALL_1
0x40065a6	      0xe800000000	                          call 0x40065ab	      4412	gui.c	FUNCTION_66	CALL_1
0x40065ab	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      3894	gui.c	FUNCTION_60	FOR_1	ELSE_1
0x40065af	          0x4885db	                           test rbx, rbx	      3894	gui.c	FUNCTION_60	FOR_1	ELSE_1
0x40065b2	            0x75ec	                           jne 0x40065a0	      3894	gui.c	FUNCTION_60	FOR_1	ELSE_1
0x40065b4	    0x488b05000000	            mov rax, qword [0x040065bb] 	      3899	gui.c	FUNCTION_60	FOR_1
0x40065bb	        0x4183c401	                             add r12d, 1	      3888	gui.c	FUNCTION_60	FOR_1
0x40065bf	        0x4183fc02	                             cmp r12d, 2	      3890	gui.c	FUNCTION_60	FOR_1	IF_1
0x40065c3	    0x42c744a848ff	mov dword [rax + r13*4 + 0x48], 0xffffffff 	      3899	gui.c	FUNCTION_60	FOR_1
0x40065cc	            0x75af	                           jne 0x400657d	      3890	gui.c	FUNCTION_60	FOR_1	IF_1
0x40065ce	            0x31f6	                            xor esi, esi	      3891	gui.c	FUNCTION_60	FOR_1	CALL_1
0x40065d0	      0xbf00000000	                              mov edi, 0	      3891	gui.c	FUNCTION_60	FOR_1	CALL_1
0x40065d5	      0xe800000000	                          call 0x40065da	      3891	gui.c	FUNCTION_60	FOR_1	CALL_1
0x40065da	    0x488b05000000	            mov rax, qword [0x040065e1] 	      3899	gui.c	FUNCTION_60	FOR_1
0x40065e1	    0xc74050ffffff	     mov dword [rax + 0x50], 0xffffffff 	      3899	gui.c	FUNCTION_60	FOR_1
0x40065e8	        0x4883c408	                              add rsp, 8	      3901	gui.c	FUNCTION_60
0x40065ec	              0x5b	                                 pop rbx	      3901	gui.c	FUNCTION_60
0x40065ed	              0x5d	                                 pop rbp	      3901	gui.c	FUNCTION_60
0x40065ee	            0x415c	                                 pop r12	      3901	gui.c	FUNCTION_60
0x40065f0	            0x415d	                                 pop r13	      3901	gui.c	FUNCTION_60
0x40065f2	              0xc3	                                     ret	      3901	gui.c	FUNCTION_60
gui_start	WHILE,0:SWITCH,0:CALL,15:ELSE,1:DO,0:IF,4:FOR,0:functions,0	210
0x4007ac0	            0x4155	                                push r13	        76	gui.c	FUNCTION_1
0x4007ac2	            0x4154	                                push r12	        76	gui.c	FUNCTION_1
0x4007ac4	              0x55	                                push rbp	        76	gui.c	FUNCTION_1
0x4007ac5	              0x53	                                push rbx	        76	gui.c	FUNCTION_1
0x4007ac6	        0x4883ec48	                           sub rsp, 0x48	        76	gui.c	FUNCTION_1
0x4007aca	    0x488b3d000000	            mov rdi, qword [0x04007ad1] 	        80	gui.c	FUNCTION_1	CALL_1
0x4007ad1	    0x64488b042528	                mov rax, qword fs:[0x28]	        76	gui.c	FUNCTION_1
0x4007ada	      0x4889442438	             mov qword [rsp + 0x38], rax	        76	gui.c	FUNCTION_1
0x4007adf	            0x31c0	                            xor eax, eax	        76	gui.c	FUNCTION_1
0x4007ae1	      0xe800000000	                          call 0x4007ae6	        80	gui.c	FUNCTION_1	CALL_1
0x4007ae6	            0x31ff	                            xor edi, edi	        82	gui.c	FUNCTION_1	CALL_2
0x4007ae8	          0x4889c3	                            mov rbx, rax	        80	gui.c	FUNCTION_1	CALL_1
0x4007aeb	      0xe800000000	                          call 0x4007af0	        82	gui.c	FUNCTION_1	CALL_2
0x4007af0	    0x8b0500000000	            mov eax, dword [0x04007af6] 	        83	gui.c	FUNCTION_1	IF_1
0x4007af6	            0x85c0	                           test eax, eax	        83	gui.c	FUNCTION_1	IF_1
0x4007af8	     0xf8542010000	                           jne 0x4007c40	        83	gui.c	FUNCTION_1	IF_1
0x4007afe	    0x8b0500000000	            mov eax, dword [0x04007b04] 	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x4007b04	    0x830500000000	               add dword [0x04007b0b], 1	        87	gui.c	FUNCTION_1
0x4007b0b	    0xc70500000000	               mov dword [0x04007b15], 0	        85	gui.c	FUNCTION_1
0x4007b15	            0x85c0	                           test eax, eax	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x4007b17	            0x741a	                            je 0x4007b33	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x4007b19	    0x488b3d000000	            mov rdi, qword [0x04007b20] 	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x4007b20	      0xbe66000000	                           mov esi, 0x66	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x4007b25	      0xe800000000	                          call 0x4007b2a	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x4007b2a	          0x4885c0	                           test rax, rax	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x4007b2d	     0xf841d010000	                            je 0x4007c50	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x4007b33	      0xe800000000	                          call 0x4007b38	       112	gui.c	FUNCTION_1	ELSE_1	IF_3	CALL_7
0x4007b38	          0x83f801	                              cmp eax, 1	       112	gui.c	FUNCTION_1	ELSE_1	IF_3	CALL_7
0x4007b3b	            0x740a	                            je 0x4007b47	       112	gui.c	FUNCTION_1	ELSE_1	IF_3	CALL_7
0x4007b3d	      0xbf01000000	                              mov edi, 1	       113	gui.c	FUNCTION_1	ELSE_1	CALL_8
0x4007b42	      0xe800000000	                          call 0x4007b47	       113	gui.c	FUNCTION_1	ELSE_1	CALL_8
0x4007b47	      0xbf00000000	                              mov edi, 0	       169	gui.c	FUNCTION_2	CALL_1
0x4007b4c	    0x830500000000	               add dword [0x04007b53], 1	       162	gui.c	FUNCTION_2
0x4007b53	    0xc70500000000	               mov dword [0x04007b5d], 1	       163	gui.c	FUNCTION_2
0x4007b5d	    0xc70500000000	               mov dword [0x04007b67], 0	       166	gui.c	FUNCTION_2
0x4007b67	      0xe800000000	                          call 0x4007b6c	       169	gui.c	FUNCTION_2	CALL_1
0x4007b6c	    0x8b0500000000	            mov eax, dword [0x04007b72] 	       170	gui.c	FUNCTION_2
0x4007b72	    0x8b1500000000	            mov edx, dword [0x04007b78] 	       173	gui.c	FUNCTION_2	IF_1
0x4007b78	          0x83e801	                              sub eax, 1	       170	gui.c	FUNCTION_2
0x4007b7b	            0x85d2	                           test edx, edx	       173	gui.c	FUNCTION_2	IF_1
0x4007b7d	    0x890500000000	            mov dword [0x04007b83], eax 	       170	gui.c	FUNCTION_2
0x4007b83	            0x756b	                           jne 0x4007bf0	       173	gui.c	FUNCTION_2	IF_1
0x4007b85	    0x890500000000	            mov dword [0x04007b8b], eax 	       187	gui.c	FUNCTION_2
0x4007b8b	            0x85d2	                           test edx, edx	       118	gui.c	FUNCTION_1	IF_4
0x4007b8d	     0xf848d000000	                            je 0x4007c20	       118	gui.c	FUNCTION_1	IF_4
0x4007b93	          0x4889df	                            mov rdi, rbx	       137	gui.c	FUNCTION_1	CALL_13
0x4007b96	      0xe800000000	                          call 0x4007b9b	       137	gui.c	FUNCTION_1	CALL_13
0x4007b9b	      0xe800000000	                          call 0x4007ba0	       141	gui.c	FUNCTION_1	CALL_14
0x4007ba0	    0x833d00000000	               cmp dword [0x04007ba7], 1	       142	gui.c	FUNCTION_1	CALL_15
0x4007ba7	    0x4c8b05000000	              mov r8, qword [0x04007bae]	       142	gui.c	FUNCTION_1	CALL_15
0x4007bae	            0x19ff	                            sbb edi, edi	       142	gui.c	FUNCTION_1	CALL_15
0x4007bb0	            0x31c9	                            xor ecx, ecx	       142	gui.c	FUNCTION_1	CALL_15
0x4007bb2	            0x31d2	                            xor edx, edx	       142	gui.c	FUNCTION_1	CALL_15
0x4007bb4	            0xf7d7	                                 not edi	       142	gui.c	FUNCTION_1	CALL_15
0x4007bb6	            0x31f6	                            xor esi, esi	       142	gui.c	FUNCTION_1	CALL_15
0x4007bb8	          0x83c738	                           add edi, 0x38	       142	gui.c	FUNCTION_1	CALL_15
0x4007bbb	      0xe800000000	                          call 0x4007bc0	       142	gui.c	FUNCTION_1	CALL_15
0x4007bc0	    0x832d00000000	               sub dword [0x04007bc7], 1	       144	gui.c	FUNCTION_1
0x4007bc7	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       145	gui.c	FUNCTION_1
0x4007bcc	    0x644833042528	                xor rax, qword fs:[0x28]	       145	gui.c	FUNCTION_1
0x4007bd5	     0xf8585010000	                           jne 0x4007d60	       145	gui.c	FUNCTION_1
0x4007bdb	        0x4883c448	                           add rsp, 0x48	       145	gui.c	FUNCTION_1
0x4007bdf	              0x5b	                                 pop rbx	       145	gui.c	FUNCTION_1
0x4007be0	              0x5d	                                 pop rbp	       145	gui.c	FUNCTION_1
0x4007be1	            0x415c	                                 pop r12	       145	gui.c	FUNCTION_1
0x4007be3	            0x415d	                                 pop r13	       145	gui.c	FUNCTION_1
0x4007be5	              0xc3	                                     ret	       145	gui.c	FUNCTION_1
0x4007be6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       145	gui.c	FUNCTION_1
0x4007bf0	      0x488d742408	                      lea rsi, [rsp + 8]	       179	gui.c	FUNCTION_2	IF_1	IF_2	CALL_2
0x4007bf5	          0x4889e7	                            mov rdi, rsp	       179	gui.c	FUNCTION_2	IF_1	IF_2	CALL_2
0x4007bf8	      0xe800000000	                          call 0x4007bfd	       179	gui.c	FUNCTION_2	IF_1	IF_2	CALL_2
0x4007bfd	          0x83f801	                              cmp eax, 1	       179	gui.c	FUNCTION_2	IF_1	IF_2	CALL_2
0x4007c00	     0xf84fa000000	                            je 0x4007d00	       179	gui.c	FUNCTION_2	IF_1	IF_2	CALL_2
0x4007c06	      0xe800000000	                          call 0x4007c0b	       184	gui.c	FUNCTION_2	IF_1	CALL_4
0x4007c0b	    0x8b0500000000	            mov eax, dword [0x04007c11] 	       184	gui.c	FUNCTION_2	IF_1	CALL_4
0x4007c11	    0x8b1500000000	            mov edx, dword [0x04007c17] 	       184	gui.c	FUNCTION_2	IF_1	CALL_4
0x4007c17	          0x83e801	                              sub eax, 1	       184	gui.c	FUNCTION_2	IF_1	CALL_4
0x4007c1a	      0xe966ffffff	                           jmp 0x4007b85	       184	gui.c	FUNCTION_2	IF_1	CALL_4
0x4007c1f	              0x90	                                     nop	       184	gui.c	FUNCTION_2	IF_1	CALL_4
0x4007c20	          0x4889df	                            mov rdi, rbx	       130	gui.c	FUNCTION_1	IF_4	CALL_10
0x4007c23	      0xe800000000	                          call 0x4007c28	       130	gui.c	FUNCTION_1	IF_4	CALL_10
0x4007c28	      0xbf02000000	                              mov edi, 2	       131	gui.c	FUNCTION_1	IF_4	CALL_11
0x4007c2d	      0xe800000000	                          call 0x4007c32	       131	gui.c	FUNCTION_1	IF_4	CALL_11
0x4007c32	      0xe800000000	                          call 0x4007c37	       133	gui.c	FUNCTION_1	IF_4	CALL_12
0x4007c37	      0xe957ffffff	                           jmp 0x4007b93	       133	gui.c	FUNCTION_1	IF_4	CALL_12
0x4007c3c	         0xf1f4000	                         nop dword [rax]	       133	gui.c	FUNCTION_1	IF_4	CALL_12
0x4007c40	      0xe800000000	                          call 0x4007c45	        84	gui.c	FUNCTION_1	CALL_3
0x4007c45	      0xe9b4feffff	                           jmp 0x4007afe	        84	gui.c	FUNCTION_1	CALL_3
0x4007c4a	    0x660f1f440000	                    nop word [rax + rax]	        84	gui.c	FUNCTION_1	CALL_3
0x4007c50	    0x833d00000000	               cmp dword [0x04007c57], 1	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x4007c57	     0xf8fd6feffff	                            jg 0x4007b33	        98	gui.c	FUNCTION_1	IF_2	CALL_4
0x4007c5d	      0xe800000000	                          call 0x4007c62	       100	gui.c	FUNCTION_1	IF_2	CALL_5
0x4007c62	            0x85c0	                           test eax, eax	       100	gui.c	FUNCTION_1	IF_2	CALL_5
0x4007c64	     0xf85c9feffff	                           jne 0x4007b33	       100	gui.c	FUNCTION_1	IF_2	CALL_5
0x4007c6a	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       221	gui.c	FUNCTION_3	CALL_1
0x4007c6f	      0xe800000000	                          call 0x4007c74	       221	gui.c	FUNCTION_3	CALL_1
0x4007c74	          0x4189c4	                           mov r12d, eax	       221	gui.c	FUNCTION_3	CALL_1
0x4007c77	      0xe800000000	                          call 0x4007c7c	       222	gui.c	FUNCTION_3	CALL_2
0x4007c7c	            0x85c0	                           test eax, eax	       223	gui.c	FUNCTION_3	IF_1
0x4007c7e	            0x89c5	                            mov ebp, eax	       222	gui.c	FUNCTION_3	CALL_2
0x4007c80	     0xf88bf000000	                            js 0x4007d45	       223	gui.c	FUNCTION_3	IF_1
0x4007c86	     0xf84d9000000	                            je 0x4007d65	       228	gui.c	FUNCTION_3	ELSE_1	IF_2
0x4007c8c	          0x4585e4	                         test r12d, r12d	       233	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3
0x4007c8f	     0xf88af010000	                            js 0x4007e44	       233	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3
0x4007c95	        0x8b7c2414	            mov edi, dword [rsp + 0x14] 	       237	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	CALL_5
0x4007c99	      0xe800000000	                          call 0x4007c9e	       237	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	CALL_5
0x4007c9e	      0x448b642410	           mov r12d, dword [rsp + 0x10] 	       238	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	CALL_6
0x4007ca3	      0x488d742420	                   lea rsi, [rsp + 0x20]	       334	gui.c	FUNCTION_4	CALL_1
0x4007ca8	      0xba09000000	                              mov edx, 9	       334	gui.c	FUNCTION_4	CALL_1
0x4007cad	          0x4489e7	                           mov edi, r12d	       334	gui.c	FUNCTION_4	CALL_1
0x4007cb0	      0xe800000000	                          call 0x4007cb5	       334	gui.c	FUNCTION_4	CALL_1
0x4007cb5	          0x4489e7	                           mov edi, r12d	       336	gui.c	FUNCTION_4	CALL_2
0x4007cb8	          0x4989c5	                            mov r13, rax	       334	gui.c	FUNCTION_4	CALL_1
0x4007cbb	      0xe800000000	                          call 0x4007cc0	       336	gui.c	FUNCTION_4	CALL_2
0x4007cc0	          0x4d85ed	                           test r13, r13	       337	gui.c	FUNCTION_4	IF_1
0x4007cc3	     0xf887b010000	                            js 0x4007e44	       337	gui.c	FUNCTION_4	IF_1
0x4007cc9	    0x42c6442c2000	          mov byte [rsp + r13 + 0x20], 0	       339	gui.c	FUNCTION_4
0x4007ccf	      0x807c24206f	            cmp byte [rsp + 0x20], 0x6f 	       340	gui.c	FUNCTION_4	IF_2	CALL_3
0x4007cd4	            0x753d	                           jne 0x4007d13	       340	gui.c	FUNCTION_4	IF_2	CALL_3
0x4007cd6	      0x807c24216b	            cmp byte [rsp + 0x21], 0x6b 	       340	gui.c	FUNCTION_4	IF_2	CALL_3
0x4007cdb	            0x7536	                           jne 0x4007d13	       340	gui.c	FUNCTION_4	IF_2	CALL_3
0x4007cdd	      0x807c242200	                cmp byte [rsp + 0x22], 0	       340	gui.c	FUNCTION_4	IF_2	CALL_3
0x4007ce2	            0x752f	                           jne 0x4007d13	       340	gui.c	FUNCTION_4	IF_2	CALL_3
0x4007ce4	    0x833d00000000	               cmp dword [0x04007ceb], 0	       264	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_7
0x4007ceb	            0x740a	                            je 0x4007cf7	       264	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_7
0x4007ced	      0xbf00000000	                              mov edi, 0	       265	gui.c	FUNCTION_3	ELSE_1	IF_2	CALL_12
0x4007cf2	      0xe800000000	                          call 0x4007cf7	       265	gui.c	FUNCTION_3	ELSE_1	IF_2	CALL_12
0x4007cf7	            0x31ff	                            xor edi, edi	       271	gui.c	FUNCTION_3	ELSE_1	IF_2	CALL_13
0x4007cf9	      0xe800000000	                          call 0x4007cfe	       271	gui.c	FUNCTION_3	ELSE_1	IF_2	CALL_13
0x4007cfe	            0x6690	                                     nop	       271	gui.c	FUNCTION_3	ELSE_1	IF_2	CALL_13
0x4007d00	        0x488b3424	                    mov rsi, qword [rsp]	       180	gui.c	FUNCTION_2	IF_1	CALL_3
0x4007d04	      0xbf3a000000	                           mov edi, 0x3a	       180	gui.c	FUNCTION_2	IF_1	CALL_3
0x4007d09	      0xe800000000	                          call 0x4007d0e	       180	gui.c	FUNCTION_2	IF_1	CALL_3
0x4007d0e	      0xe9f3feffff	                           jmp 0x4007c06	       180	gui.c	FUNCTION_2	IF_1	CALL_3
0x4007d13	      0x488d742408	                      lea rsi, [rsp + 8]	       247	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_8
0x4007d18	            0x31d2	                            xor edx, edx	       247	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_8
0x4007d1a	            0x89ef	                            mov edi, ebp	       247	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_8
0x4007d1c	      0xe800000000	                          call 0x4007d21	       247	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_8
0x4007d21	            0x31ff	                            xor edi, edi	       249	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_10
0x4007d23	      0xba05000000	                              mov edx, 5	       249	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_10
0x4007d28	      0xbe00000000	                              mov esi, 0	       249	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_10
0x4007d2d	      0xe800000000	                          call 0x4007d32	       249	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_10
0x4007d32	          0x4889c7	                            mov rdi, rax	       249	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_10
0x4007d35	      0xe800000000	                          call 0x4007d3a	       249	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_10
0x4007d3a	    0x8b1500000000	            mov edx, dword [0x04007d40] 	       249	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_10
0x4007d40	      0xe946feffff	                           jmp 0x4007b8b	       249	gui.c	FUNCTION_3	ELSE_1	IF_2	IF_3	IF_4	CALL_10
0x4007d45	            0x31ff	                            xor edi, edi	       225	gui.c	FUNCTION_3	IF_1	CALL_4
0x4007d47	      0xba05000000	                              mov edx, 5	       225	gui.c	FUNCTION_3	IF_1	CALL_4
0x4007d4c	      0xbe00000000	                              mov esi, 0	       225	gui.c	FUNCTION_3	IF_1	CALL_4
0x4007d51	      0xe800000000	                          call 0x4007d56	       225	gui.c	FUNCTION_3	IF_1	CALL_4
0x4007d56	          0x4889c7	                            mov rdi, rax	       225	gui.c	FUNCTION_3	IF_1	CALL_4
0x4007d59	      0xe800000000	                          call 0x4007d5e	       225	gui.c	FUNCTION_3	IF_1	CALL_4
0x4007d5e	            0xebda	                           jmp 0x4007d3a	       225	gui.c	FUNCTION_3	IF_1	CALL_4
0x4007d60	      0xe800000000	                          call 0x4007d65	       145	gui.c	FUNCTION_1
0x4007d65	      0xe800000000	                          call 0x4007d6a	       277	gui.c	FUNCTION_3	IF_8	CALL_14
0x4007d6a	          0x83e801	                              sub eax, 1	       277	gui.c	FUNCTION_3	IF_8	CALL_14
0x4007d6d	            0x740a	                            je 0x4007d79	       277	gui.c	FUNCTION_3	IF_8	CALL_14
0x4007d6f	      0xbf01000000	                              mov edi, 1	       278	gui.c	FUNCTION_3	CALL_15
0x4007d74	      0xe800000000	                          call 0x4007d79	       278	gui.c	FUNCTION_3	CALL_15
0x4007d79	      0xe800000000	                          call 0x4007d7e	       287	gui.c	FUNCTION_3	CALL_16
0x4007d7e	          0x4585e4	                         test r12d, r12d	       292	gui.c	FUNCTION_3	IF_9
0x4007d81	            0x7809	                            js 0x4007d8c	       292	gui.c	FUNCTION_3	IF_9
0x4007d83	        0x8b7c2410	            mov edi, dword [rsp + 0x10] 	       293	gui.c	FUNCTION_3	CALL_18
0x4007d87	      0xe800000000	                          call 0x4007d8c	       293	gui.c	FUNCTION_3	CALL_18
0x4007d8c	      0xbf00000000	                              mov edi, 0	       169	gui.c	FUNCTION_2	CALL_1
0x4007d91	    0x830500000000	               add dword [0x04007d98], 1	       162	gui.c	FUNCTION_2
0x4007d98	    0xc70500000000	               mov dword [0x04007da2], 1	       163	gui.c	FUNCTION_2
0x4007da2	    0xc70500000000	               mov dword [0x04007dac], 0	       166	gui.c	FUNCTION_2
0x4007dac	      0xe800000000	                          call 0x4007db1	       169	gui.c	FUNCTION_2	CALL_1
0x4007db1	    0x8b0500000000	            mov eax, dword [0x04007db7] 	       170	gui.c	FUNCTION_2
0x4007db7	          0x83e801	                              sub eax, 1	       170	gui.c	FUNCTION_2
0x4007dba	    0x833d00000000	               cmp dword [0x04007dc1], 0	       173	gui.c	FUNCTION_2	IF_1
0x4007dc1	    0x890500000000	            mov dword [0x04007dc7], eax 	       170	gui.c	FUNCTION_2
0x4007dc7	            0x754d	                           jne 0x4007e16	       173	gui.c	FUNCTION_2	IF_1
0x4007dc9	    0x832d00000000	               sub dword [0x04007dd0], 1	       187	gui.c	FUNCTION_2
0x4007dd0	          0x4585e4	                         test r12d, r12d	       304	gui.c	FUNCTION_3	IF_10
0x4007dd3	            0x7825	                            js 0x4007dfa	       304	gui.c	FUNCTION_3	IF_10
0x4007dd5	    0x833d00000000	               cmp dword [0x04007ddc], 0	       306	gui.c	FUNCTION_3	IF_10	IF_11
0x4007ddc	            0x7451	                            je 0x4007e2f	       306	gui.c	FUNCTION_3	IF_10	IF_11
0x4007dde	        0x8b7c2414	            mov edi, dword [rsp + 0x14] 	       307	gui.c	FUNCTION_3	IF_10	CALL_21
0x4007de2	      0xba03000000	                              mov edx, 3	       307	gui.c	FUNCTION_3	IF_10	CALL_21
0x4007de7	      0xbe00000000	                              mov esi, 0	       307	gui.c	FUNCTION_3	IF_10	CALL_21
0x4007dec	      0xe800000000	                          call 0x4007df1	       307	gui.c	FUNCTION_3	IF_10	CALL_21
0x4007df1	        0x8b7c2414	            mov edi, dword [rsp + 0x14] 	       310	gui.c	FUNCTION_3	IF_10	CALL_23
0x4007df5	      0xe800000000	                          call 0x4007dfa	       310	gui.c	FUNCTION_3	IF_10	CALL_23
0x4007dfa	    0x833d00000000	               cmp dword [0x04007e01], 0	       314	gui.c	FUNCTION_3	IF_12
0x4007e01	     0xf8533ffffff	                           jne 0x4007d3a	       314	gui.c	FUNCTION_3	IF_12
0x4007e07	      0xbf01000000	                              mov edi, 1	       315	gui.c	FUNCTION_3	CALL_24
0x4007e0c	      0xe800000000	                          call 0x4007e11	       315	gui.c	FUNCTION_3	CALL_24
0x4007e11	      0xe924ffffff	                           jmp 0x4007d3a	       315	gui.c	FUNCTION_3	CALL_24
0x4007e16	      0x488d742408	                      lea rsi, [rsp + 8]	       179	gui.c	FUNCTION_2	IF_1	IF_2	CALL_2
0x4007e1b	          0x4889e7	                            mov rdi, rsp	       179	gui.c	FUNCTION_2	IF_1	IF_2	CALL_2
0x4007e1e	      0xe800000000	                          call 0x4007e23	       179	gui.c	FUNCTION_2	IF_1	IF_2	CALL_2
0x4007e23	          0x83e801	                              sub eax, 1	       179	gui.c	FUNCTION_2	IF_1	IF_2	CALL_2
0x4007e26	            0x7430	                            je 0x4007e58	       179	gui.c	FUNCTION_2	IF_1	IF_2	CALL_2
0x4007e28	      0xe800000000	                          call 0x4007e2d	       184	gui.c	FUNCTION_2	IF_1	CALL_4
0x4007e2d	            0xeb9a	                           jmp 0x4007dc9	       184	gui.c	FUNCTION_2	IF_1	CALL_4
0x4007e2f	        0x8b7c2414	            mov edi, dword [rsp + 0x14] 	       309	gui.c	FUNCTION_3	IF_10	CALL_22
0x4007e33	      0xba05000000	                              mov edx, 5	       309	gui.c	FUNCTION_3	IF_10	CALL_22
0x4007e38	      0xbe00000000	                              mov esi, 0	       309	gui.c	FUNCTION_3	IF_10	CALL_22
0x4007e3d	      0xe800000000	                          call 0x4007e42	       309	gui.c	FUNCTION_3	IF_10	CALL_22
0x4007e42	            0xebad	                           jmp 0x4007df1	       309	gui.c	FUNCTION_3	IF_10	CALL_22
0x4007e44	      0xbe01000000	                              mov esi, 1	       260	gui.c	FUNCTION_3	ELSE_1	IF_2	CALL_11
0x4007e49	      0xbf2c010000	                          mov edi, 0x12c	       260	gui.c	FUNCTION_3	ELSE_1	IF_2	CALL_11
0x4007e4e	      0xe800000000	                          call 0x4007e53	       260	gui.c	FUNCTION_3	ELSE_1	IF_2	CALL_11
0x4007e53	      0xe98cfeffff	                           jmp 0x4007ce4	       260	gui.c	FUNCTION_3	ELSE_1	IF_2	CALL_11
0x4007e58	        0x488b3424	                    mov rsi, qword [rsp]	       180	gui.c	FUNCTION_2	IF_1	CALL_3
0x4007e5c	      0xbf3a000000	                           mov edi, 0x3a	       180	gui.c	FUNCTION_2	IF_1	CALL_3
0x4007e61	      0xe800000000	                          call 0x4007e66	       180	gui.c	FUNCTION_2	IF_1	CALL_3
0x4007e66	            0xebc0	                           jmp 0x4007e28	       180	gui.c	FUNCTION_2	IF_1	CALL_3
gui_delete_lines	WHILE,0:SWITCH,0:CALL,2:ELSE,2:DO,0:IF,5:FOR,0:functions,0	57
0x40006c0	            0x85f6	                           test esi, esi	      2868	gui.c	FUNCTION_43	IF_1
0x40006c2	            0x7e66	                           jle 0x400072a	      2868	gui.c	FUNCTION_43	IF_1
0x40006c4	            0x4155	                                push r13	      2867	gui.c	FUNCTION_43
0x40006c6	            0x4154	                                push r12	      2867	gui.c	FUNCTION_43
0x40006c8	        0x448d2c3e	                   lea r13d, [rsi + rdi]	      2871	gui.c	FUNCTION_43	IF_2
0x40006cc	              0x55	                                push rbp	      2867	gui.c	FUNCTION_43
0x40006cd	              0x53	                                push rbx	      2867	gui.c	FUNCTION_43
0x40006ce	            0x89f5	                            mov ebp, esi	      2867	gui.c	FUNCTION_43
0x40006d0	            0x89fb	                            mov ebx, edi	      2867	gui.c	FUNCTION_43
0x40006d2	        0x4883ec08	                              sub rsp, 8	      2867	gui.c	FUNCTION_43
0x40006d6	    0x448b25000000	           mov r12d, dword [0x040006dd] 	      2871	gui.c	FUNCTION_43	IF_2
0x40006dd	          0x4539e5	                          cmp r13d, r12d	      2871	gui.c	FUNCTION_43	IF_2
0x40006e0	            0x7f4e	                            jg 0x4000730	      2871	gui.c	FUNCTION_43	IF_2
0x40006e2	      0xe800000000	                          call 0x40006e7	      2877	gui.c	FUNCTION_43	ELSE_1	CALL_2
0x40006e7	    0x8b0500000000	            mov eax, dword [0x040006ed] 	      2881	gui.c	FUNCTION_43	ELSE_1	IF_3
0x40006ed	            0x39c3	                            cmp ebx, eax	      2881	gui.c	FUNCTION_43	ELSE_1	IF_3
0x40006ef	            0x7f2f	                            jg 0x4000720	      2881	gui.c	FUNCTION_43	ELSE_1	IF_3
0x40006f1	    0x8b1500000000	            mov edx, dword [0x040006f7] 	      2882	gui.c	FUNCTION_43	ELSE_1	IF_3
0x40006f7	    0x3b1500000000	            cmp edx, dword [0x040006fd] 	      2882	gui.c	FUNCTION_43	ELSE_1	IF_3
0x40006fd	            0x7c21	                            jl 0x4000720	      2882	gui.c	FUNCTION_43	ELSE_1	IF_3
0x40006ff	    0x3b1500000000	            cmp edx, dword [0x04000705] 	      2883	gui.c	FUNCTION_43	ELSE_1	IF_3
0x4000705	            0x7f19	                            jg 0x4000720	      2883	gui.c	FUNCTION_43	ELSE_1	IF_3
0x4000707	          0x4139c5	                           cmp r13d, eax	      2885	gui.c	FUNCTION_43	ELSE_1	IF_3	IF_4
0x400070a	            0x7f66	                            jg 0x4000772	      2885	gui.c	FUNCTION_43	ELSE_1	IF_3	IF_4
0x400070c	    0x3b0500000000	            cmp eax, dword [0x04000712] 	      2887	gui.c	FUNCTION_43	ELSE_1	IF_3	ELSE_2	IF_5
0x4000712	            0x7f0c	                            jg 0x4000720	      2887	gui.c	FUNCTION_43	ELSE_1	IF_3	ELSE_2	IF_5
0x4000714	            0x29e8	                            sub eax, ebp	      2888	gui.c	FUNCTION_43	ELSE_1	IF_3	ELSE_2	IF_5
0x4000716	    0x890500000000	            mov dword [0x0400071c], eax 	      2888	gui.c	FUNCTION_43	ELSE_1	IF_3	ELSE_2	IF_5
0x400071c	         0xf1f4000	                         nop dword [rax]	      2888	gui.c	FUNCTION_43	ELSE_1	IF_3	ELSE_2	IF_5
0x4000720	        0x4883c408	                              add rsp, 8	      2891	gui.c	FUNCTION_43
0x4000724	              0x5b	                                 pop rbx	      2891	gui.c	FUNCTION_43
0x4000725	              0x5d	                                 pop rbp	      2891	gui.c	FUNCTION_43
0x4000726	            0x415c	                                 pop r12	      2891	gui.c	FUNCTION_43
0x4000728	            0x415d	                                 pop r13	      2891	gui.c	FUNCTION_43
0x400072a	            0xf3c3	                                     ret	      2891	gui.c	FUNCTION_43
0x400072c	         0xf1f4000	                         nop dword [rax]	      2891	gui.c	FUNCTION_43
0x4000730	    0x448b2d000000	           mov r13d, dword [0x04000737] 	      2873	gui.c	FUNCTION_43	IF_2	CALL_1
0x4000737	    0x8b2d00000000	            mov ebp, dword [0x0400073d] 	      2873	gui.c	FUNCTION_43	IF_2	CALL_1
0x400073d	          0x4489e6	                           mov esi, r12d	      1741	gui.c	ELSE_1	FUNCTION_28	CALL_1
0x4000740	      0xe800000000	                          call 0x4000745	      1741	gui.c	ELSE_1	FUNCTION_28	CALL_1
0x4000745	          0x4489e2	                           mov edx, r12d	      1743	gui.c	ELSE_1	FUNCTION_28	CALL_2
0x4000748	            0x89df	                            mov edi, ebx	      1743	gui.c	ELSE_1	FUNCTION_28	CALL_2
0x400074a	          0x4489e9	                           mov ecx, r13d	      1743	gui.c	ELSE_1	FUNCTION_28	CALL_2
0x400074d	            0x89ee	                            mov esi, ebp	      1743	gui.c	ELSE_1	FUNCTION_28	CALL_2
0x400074f	      0xe800000000	                          call 0x4000754	      1743	gui.c	ELSE_1	FUNCTION_28	CALL_2
0x4000754	    0x8b0500000000	            mov eax, dword [0x0400075a] 	      1746	gui.c	ELSE_1	FUNCTION_28	IF_1
0x400075a	          0x4139c4	                           cmp r12d, eax	      1746	gui.c	ELSE_1	FUNCTION_28	IF_1
0x400075d	            0x7cc1	                            jl 0x4000720	      1746	gui.c	ELSE_1	FUNCTION_28	IF_1
0x400075f	            0x39c3	                            cmp ebx, eax	      1746	gui.c	ELSE_1	FUNCTION_28	IF_1
0x4000761	            0x7fbd	                            jg 0x4000720	      1746	gui.c	ELSE_1	FUNCTION_28	IF_1
0x4000763	    0x8b0500000000	            mov eax, dword [0x04000769] 	      1747	gui.c	ELSE_1	FUNCTION_28	IF_1
0x4000769	            0x39c5	                            cmp ebp, eax	      1747	gui.c	ELSE_1	FUNCTION_28	IF_1
0x400076b	            0x7fb3	                            jg 0x4000720	      1747	gui.c	ELSE_1	FUNCTION_28	IF_1
0x400076d	          0x4139c5	                           cmp r13d, eax	      1747	gui.c	ELSE_1	FUNCTION_28	IF_1
0x4000770	            0x7cae	                            jl 0x4000720	      1747	gui.c	ELSE_1	FUNCTION_28	IF_1
0x4000772	    0xc60500000000	                mov byte [0x04000779], 0	      1748	gui.c	ELSE_1	FUNCTION_28	IF_1
0x4000779	            0xeba5	                           jmp 0x4000720	      1748	gui.c	ELSE_1	FUNCTION_28	IF_1
gui_shell_closed	WHILE,0:SWITCH,0:CALL,3:ELSE,0:DO,0:IF,1:FOR,0:functions,0	35
0x40080f0	              0x55	                                push rbp	       816	gui.c	FUNCTION_9
0x40080f1	              0x53	                                push rbx	       816	gui.c	FUNCTION_9
0x40080f2	      0xbd00000000	                              mov ebp, 0	       819	gui.c	FUNCTION_9
0x40080f7	      0xb91e000000	                           mov ecx, 0x1e	       819	gui.c	FUNCTION_9
0x40080fc	          0x4889ee	                            mov rsi, rbp	       819	gui.c	FUNCTION_9
0x40080ff	    0x4881ec080100	                          sub rsp, 0x108	       816	gui.c	FUNCTION_9
0x4008106	    0xc70500000000	               mov dword [0x04008110], 1	       822	gui.c	FUNCTION_9
0x4008110	          0x4889e7	                            mov rdi, rsp	       819	gui.c	FUNCTION_9
0x4008113	          0x4889e3	                            mov rbx, rsp	       819	gui.c	FUNCTION_9
0x4008116	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	       819	gui.c	FUNCTION_9
0x4008119	            0x31f6	                            xor esi, esi	       831	gui.c	FUNCTION_9	IF_1	CALL_1
0x400811b	            0x31ff	                            xor edi, edi	       831	gui.c	FUNCTION_9	IF_1	CALL_1
0x400811d	    0xc70500000000	               mov dword [0x04008127], 1	       824	gui.c	FUNCTION_9
0x4008127	    0x64488b042528	                mov rax, qword fs:[0x28]	       816	gui.c	FUNCTION_9
0x4008130	    0x48898424f800	             mov qword [rsp + 0xf8], rax	       816	gui.c	FUNCTION_9
0x4008138	            0x31c0	                            xor eax, eax	       816	gui.c	FUNCTION_9
0x400813a	    0xc70500000000	               mov dword [0x04008144], 1	       827	gui.c	FUNCTION_9
0x4008144	      0xe800000000	                          call 0x4008149	       831	gui.c	FUNCTION_9	IF_1	CALL_1
0x4008149	            0x85c0	                           test eax, eax	       831	gui.c	FUNCTION_9	IF_1	CALL_1
0x400814b	            0x7507	                           jne 0x4008154	       831	gui.c	FUNCTION_9	IF_1	CALL_1
0x400814d	            0x31ff	                            xor edi, edi	       832	gui.c	FUNCTION_9	CALL_2
0x400814f	      0xe800000000	                          call 0x4008154	       832	gui.c	FUNCTION_9	CALL_2
0x4008154	    0x488b8424f800	            mov rax, qword [rsp + 0xf8] 	       836	gui.c	FUNCTION_9	CALL_3
0x400815c	    0x644833042528	                xor rax, qword fs:[0x28]	       836	gui.c	FUNCTION_9	CALL_3
0x4008165	      0xb91e000000	                           mov ecx, 0x1e	       835	gui.c	FUNCTION_9
0x400816a	          0x4889ef	                            mov rdi, rbp	       835	gui.c	FUNCTION_9
0x400816d	          0x4889de	                            mov rsi, rbx	       835	gui.c	FUNCTION_9
0x4008170	    0xc70500000000	               mov dword [0x0400817a], 0	       834	gui.c	FUNCTION_9
0x400817a	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	       835	gui.c	FUNCTION_9
0x400817d	            0x750e	                           jne 0x400818d	       836	gui.c	FUNCTION_9	CALL_3
0x400817f	    0x4881c4080100	                          add rsp, 0x108	       837	gui.c	FUNCTION_9
0x4008186	              0x5b	                                 pop rbx	       837	gui.c	FUNCTION_9
0x4008187	              0x5d	                                 pop rbp	       837	gui.c	FUNCTION_9
0x4008188	      0xe9d3fdffff	               jmp sym.gui_update_screen	       836	gui.c	FUNCTION_9	CALL_3
0x400818d	      0xe800000000	                          call 0x4008192	       836	gui.c	FUNCTION_9	CALL_3
get_find_dialog_text	WHILE,0:SWITCH,0:CALL,10:ELSE,1:DO,0:IF,7:FOR,1:functions,0	109
0x40081a0	            0x4156	                                push r14	      5188	gui.c	FUNCTION_89
0x40081a2	            0x4155	                                push r13	      5188	gui.c	FUNCTION_89
0x40081a4	          0x4989d6	                            mov r14, rdx	      5188	gui.c	FUNCTION_89
0x40081a7	            0x4154	                                push r12	      5188	gui.c	FUNCTION_89
0x40081a9	              0x55	                                push rbp	      5188	gui.c	FUNCTION_89
0x40081aa	          0x4889f5	                            mov rbp, rsi	      5188	gui.c	FUNCTION_89
0x40081ad	              0x53	                                push rbx	      5188	gui.c	FUNCTION_89
0x40081ae	          0x803f00	                       cmp byte [rdi], 0	      5191	gui.c	FUNCTION_89	IF_1
0x40081b1	     0xf84a9000000	                            je 0x4008260	      5191	gui.c	FUNCTION_89	IF_1
0x40081b7	      0xe800000000	                          call 0x40081bc	      5197	gui.c	FUNCTION_89	ELSE_1	IF_2	CALL_2
0x40081bc	          0x4885c0	                           test rax, rax	      5198	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3
0x40081bf	          0x4989c5	                            mov r13, rax	      5197	gui.c	FUNCTION_89	ELSE_1	IF_2	CALL_2
0x40081c2	     0xf84a9000000	                            je 0x4008271	      5198	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3
0x40081c8	          0x4889c7	                            mov rdi, rax	      5200	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	CALL_3
0x40081cb	      0xe800000000	                          call 0x40081d0	      5200	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	CALL_3
0x40081d0	          0x83f801	                              cmp eax, 1	      5204	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_4
0x40081d3	          0x4889c3	                            mov rbx, rax	      5200	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	CALL_3
0x40081d6	          0x4189c4	                           mov r12d, eax	      5200	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	CALL_3
0x40081d9	            0x7e37	                           jle 0x4008212	      5204	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_4
0x40081db	      0xbf00000000	                              mov edi, 0	      5204	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_4
0x40081e0	      0xb902000000	                              mov ecx, 2	      5204	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_4
0x40081e5	          0x4c89ee	                            mov rsi, r13	      5204	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_4
0x40081e8	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5204	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_4
0x40081ea	     0xf84d0000000	                            je 0x40082c0	      5204	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4	CALL_4
0x40081f0	      0x41807d005c	                    cmp byte [r13], 0x5c	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x40081f5	     0xf84f0000000	                            je 0x40082eb	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x40081fb	        0x4183fc03	                             cmp r12d, 3	      5219	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6
0x40081ff	            0x7e11	                           jle 0x4008212	      5219	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6
0x4008201	      0xbf00000000	                              mov edi, 0	      5220	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_7
0x4008206	      0xb902000000	                              mov ecx, 2	      5220	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_7
0x400820b	          0x4c89ee	                            mov rsi, r13	      5220	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_7
0x400820e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5220	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_7
0x4008210	            0x746e	                            je 0x4008280	      5220	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_7
0x4008212	          0x4c89ef	                            mov rdi, r13	      5220	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_7
0x4008215	            0x31c0	                            xor eax, eax	      5188	gui.c	FUNCTION_89
0x4008217	            0xeb0c	                           jmp 0x4008225	      5188	gui.c	FUNCTION_89
0x4008219	     0xf1f80000000	                         nop dword [rax]	      5188	gui.c	FUNCTION_89
0x4008220	          0x4889ef	                            mov rdi, rbp	      5188	gui.c	FUNCTION_89
0x4008223	            0x89d8	                            mov eax, ebx	      5188	gui.c	FUNCTION_89
0x4008225	          0x8d5801	                      lea ebx, [rax + 1]	      5229	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1
0x4008228	          0x4139dc	                           cmp r12d, ebx	      5229	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1
0x400822b	            0x7e47	                           jle 0x4008274	      5229	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1
0x400822d	          0x803f5c	                    cmp byte [rdi], 0x5c	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x4008230	        0x488d6f01	                      lea rbp, [rdi + 1]	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x4008234	            0x75ea	                           jne 0x4008220	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x4008236	         0xfb65701	               movzx edx, byte [rdi + 1]	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x400823a	          0x83e2ef	                     and edx, 0xffffffef	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x400823d	          0x80fa2f	                            cmp dl, 0x2f	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x4008240	            0x75de	                           jne 0x4008220	      5230	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x4008242	          0x4489e2	                           mov edx, r12d	        59	string3.h	FUNCTION_95	CALL_3
0x4008245	          0x4889ee	                            mov rsi, rbp	        59	string3.h	FUNCTION_95	CALL_3
0x4008248	        0x4183ec01	                             sub r12d, 1	      5234	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	FOR_1	IF_7
0x400824c	            0x29c2	                            sub edx, eax	        59	string3.h	FUNCTION_95	CALL_3
0x400824e	          0x4863d2	                         movsxd rdx, edx	        59	string3.h	FUNCTION_95	CALL_3
0x4008251	      0xe800000000	                          call 0x4008256	        59	string3.h	FUNCTION_95	CALL_3
0x4008256	            0xebc8	                           jmp 0x4008220	        59	string3.h	FUNCTION_95	CALL_3
0x4008258	     0xf1f84000000	                   nop dword [rax + rax]	        59	string3.h	FUNCTION_95	CALL_3
0x4008260	      0xe800000000	                          call 0x4008265	      5192	gui.c	FUNCTION_89	CALL_1
0x4008265	          0x4885c0	                           test rax, rax	      5195	gui.c	FUNCTION_89	ELSE_1	IF_2
0x4008268	          0x4889c7	                            mov rdi, rax	      5192	gui.c	FUNCTION_89	CALL_1
0x400826b	     0xf8546ffffff	                           jne 0x40081b7	      5195	gui.c	FUNCTION_89	ELSE_1	IF_2
0x4008271	          0x4531ed	                          xor r13d, r13d	      5188	gui.c	FUNCTION_89
0x4008274	              0x5b	                                 pop rbx	      5239	gui.c	FUNCTION_89
0x4008275	          0x4c89e8	                            mov rax, r13	      5239	gui.c	FUNCTION_89
0x4008278	              0x5d	                                 pop rbp	      5239	gui.c	FUNCTION_89
0x4008279	            0x415c	                                 pop r12	      5239	gui.c	FUNCTION_89
0x400827b	            0x415d	                                 pop r13	      5239	gui.c	FUNCTION_89
0x400827d	            0x415e	                                 pop r14	      5239	gui.c	FUNCTION_89
0x400827f	              0xc3	                                     ret	      5239	gui.c	FUNCTION_89
0x4008280	          0x4963dc	                        movsxd rbx, r12d	      5221	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_8
0x4008283	      0xbf00000000	                              mov edi, 0	      5221	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_8
0x4008288	      0xb902000000	                              mov ecx, 2	      5221	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_8
0x400828d	      0x498d741dfe	                lea rsi, [r13 + rbx - 2]	      5221	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_8
0x4008292	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5221	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_8
0x4008294	     0xf8578ffffff	                           jne 0x4008212	      5221	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6	CALL_8
0x400829a	      0x418d5424fc	                      lea edx, [r12 - 4]	        59	string3.h	FUNCTION_95	CALL_3
0x400829f	        0x498d7502	                      lea rsi, [r13 + 2]	        59	string3.h	FUNCTION_95	CALL_3
0x40082a3	    0xc74500010000	                      mov dword [rbp], 1	      5223	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6
0x40082aa	          0x4c89ef	                            mov rdi, r13	        59	string3.h	FUNCTION_95	CALL_3
0x40082ad	          0x4863d2	                         movsxd rdx, edx	        59	string3.h	FUNCTION_95	CALL_3
0x40082b0	      0xe800000000	                          call 0x40082b5	        59	string3.h	FUNCTION_95	CALL_3
0x40082b5	    0x41c6441dfc00	             mov byte [r13 + rbx - 4], 0	      5225	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6
0x40082bb	      0xe952ffffff	                           jmp 0x4008212	      5225	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_6
0x40082c0	          0x8d50ff	                      lea edx, [rax - 1]	        59	string3.h	FUNCTION_95	CALL_3
0x40082c3	        0x498d7502	                      lea rsi, [r13 + 2]	        59	string3.h	FUNCTION_95	CALL_3
0x40082c7	        0x448d63fe	                     lea r12d, [rbx - 2]	      5207	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_4
0x40082cb	          0x4c89ef	                            mov rdi, r13	        59	string3.h	FUNCTION_95	CALL_3
0x40082ce	          0x4863d2	                         movsxd rdx, edx	        59	string3.h	FUNCTION_95	CALL_3
0x40082d1	      0xe800000000	                          call 0x40082d6	        59	string3.h	FUNCTION_95	CALL_3
0x40082d6	        0x4183fc01	                             cmp r12d, 1	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x40082da	     0xf8e32ffffff	                           jle 0x4008212	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x40082e0	      0x41807d005c	                    cmp byte [r13], 0x5c	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x40082e5	     0xf8510ffffff	                           jne 0x40081fb	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x40082eb	      0x410fb64501	               movzx eax, byte [r13 + 1]	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x40082f0	            0x89c2	                            mov edx, eax	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x40082f2	          0x83e2df	                     and edx, 0xffffffdf	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x40082f5	          0x80fa43	                            cmp dl, 0x43	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x40082f8	     0xf85fdfeffff	                           jne 0x40081fb	      5211	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x40082fe	            0x3c43	                            cmp al, 0x43	      5213	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x4008300	      0x418d5424ff	                      lea edx, [r12 - 1]	        59	string3.h	FUNCTION_95	CALL_3
0x4008305	        0x498d7502	                      lea rsi, [r13 + 2]	        59	string3.h	FUNCTION_95	CALL_3
0x4008309	           0xf94c0	                                 sete al	      5213	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x400830c	          0x4c89ef	                            mov rdi, r13	        59	string3.h	FUNCTION_95	CALL_3
0x400830f	        0x4183ec02	                             sub r12d, 2	      5215	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x4008313	           0xfb6c0	                           movzx eax, al	      5213	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x4008316	          0x4863d2	                         movsxd rdx, edx	        59	string3.h	FUNCTION_95	CALL_3
0x4008319	          0x418906	                    mov dword [r14], eax	      5213	gui.c	FUNCTION_89	ELSE_1	IF_2	IF_3	IF_5
0x400831c	      0xe800000000	                          call 0x4008321	        59	string3.h	FUNCTION_95	CALL_3
0x4008321	      0xe9d5feffff	                           jmp 0x40081fb	        59	string3.h	FUNCTION_95	CALL_3
gui_redraw	WHILE,0:SWITCH,0:CALL,6:ELSE,0:DO,0:IF,1:FOR,0:functions,0	44
0x4004350	    0x8b0500000000	            mov eax, dword [0x04004356] 	      2721	gui.c	FUNCTION_42	IF_1
0x4004356	              0x53	                                push rbx	      2674	gui.c	FUNCTION_41
0x4004357	            0x85c0	                           test eax, eax	      2721	gui.c	FUNCTION_42	IF_1
0x4004359	            0x7463	                            je 0x40043be	      2721	gui.c	FUNCTION_42	IF_1
0x400435b	    0x48833d000000	               cmp qword [0x04004363], 0	      2721	gui.c	FUNCTION_42	IF_1
0x4004363	            0x7459	                            je 0x40043be	      2721	gui.c	FUNCTION_42	IF_1
0x4004365	    0x448b15000000	           mov r10d, dword [0x0400436c] 	      2677	gui.c	FUNCTION_41	CALL_1
0x400436c	        0x8d4417ff	                lea eax, [rdi + rdx - 1]	      2677	gui.c	FUNCTION_41	CALL_1
0x4004370	    0x8b1d00000000	            mov ebx, dword [0x04004376] 	      2678	gui.c	FUNCTION_41	CALL_2
0x4004376	          0x4189cb	                           mov r11d, ecx	      2678	gui.c	FUNCTION_41	CALL_2
0x4004379	    0x448b0d000000	            mov r9d, dword [0x04004380] 	      2677	gui.c	FUNCTION_41	CALL_1
0x4004380	          0x4189f0	                            mov r8d, esi	      2677	gui.c	FUNCTION_41	CALL_1
0x4004383	          0x4429d0	                           sub eax, r10d	      2677	gui.c	FUNCTION_41	CALL_1
0x4004386	              0x99	                                     cdq	      2677	gui.c	FUNCTION_41	CALL_1
0x4004387	            0xf7fb	                                idiv ebx	      2677	gui.c	FUNCTION_41	CALL_1
0x4004389	            0x89c1	                            mov ecx, eax	      2677	gui.c	FUNCTION_41	CALL_1
0x400438b	      0x428d441eff	                lea eax, [rsi + r11 - 1]	      2677	gui.c	FUNCTION_41	CALL_1
0x4004390	          0x4429d0	                           sub eax, r10d	      2677	gui.c	FUNCTION_41	CALL_1
0x4004393	              0x99	                                     cdq	      2677	gui.c	FUNCTION_41	CALL_1
0x4004394	          0x41f7f9	                                idiv r9d	      2677	gui.c	FUNCTION_41	CALL_1
0x4004397	          0x4189c3	                           mov r11d, eax	      2677	gui.c	FUNCTION_41	CALL_1
0x400439a	            0x89f8	                            mov eax, edi	      2677	gui.c	FUNCTION_41	CALL_1
0x400439c	          0x4429d0	                           sub eax, r10d	      2677	gui.c	FUNCTION_41	CALL_1
0x400439f	              0x99	                                     cdq	      2677	gui.c	FUNCTION_41	CALL_1
0x40043a0	            0xf7fb	                                idiv ebx	      2677	gui.c	FUNCTION_41	CALL_1
0x40043a2	            0x89c6	                            mov esi, eax	      2677	gui.c	FUNCTION_41	CALL_1
0x40043a4	          0x4489c0	                            mov eax, r8d	      2677	gui.c	FUNCTION_41	CALL_1
0x40043a7	    0x41b810000000	                           mov r8d, 0x10	      2677	gui.c	FUNCTION_41	CALL_1
0x40043ad	          0x4429d0	                           sub eax, r10d	      2677	gui.c	FUNCTION_41	CALL_1
0x40043b0	              0x99	                                     cdq	      2677	gui.c	FUNCTION_41	CALL_1
0x40043b1	          0x41f7f9	                                idiv r9d	      2677	gui.c	FUNCTION_41	CALL_1
0x40043b4	          0x4489da	                           mov edx, r11d	      2677	gui.c	FUNCTION_41	CALL_1
0x40043b7	            0x89c7	                            mov edi, eax	      2677	gui.c	FUNCTION_41	CALL_1
0x40043b9	      0xe8b2e6ffff	        call sym.gui_redraw_block.part.7	      2677	gui.c	FUNCTION_41	CALL_1
0x40043be	    0x8b0500000000	            mov eax, dword [0x040043c4] 	      2691	gui.c	FUNCTION_41	IF_1
0x40043c4	    0x390500000000	            cmp dword [0x040043ca], eax 	      2691	gui.c	FUNCTION_41	IF_1
0x40043ca	            0x7404	                            je 0x40043d0	      2691	gui.c	FUNCTION_41	IF_1
0x40043cc	              0x5b	                                 pop rbx	      2693	gui.c	FUNCTION_41
0x40043cd	              0xc3	                                     ret	      2693	gui.c	FUNCTION_41
0x40043ce	            0x6690	                                     nop	      2693	gui.c	FUNCTION_41
0x40043d0	              0x5b	                                 pop rbx	      2693	gui.c	FUNCTION_41
0x40043d1	      0xbe01000000	                              mov esi, 1	      2692	gui.c	FUNCTION_41	CALL_6
0x40043d6	      0xbf01000000	                              mov edi, 1	      2692	gui.c	FUNCTION_41	CALL_6
0x40043db	      0xe920ecffff	               jmp sym.gui_update_cursor	      2692	gui.c	FUNCTION_41	CALL_6
gui_may_resize_shell	WHILE,0:SWITCH,0:CALL,1:ELSE,0:DO,0:IF,1:FOR,0:functions,0	7
0x4003970	    0x8b3500000000	            mov esi, dword [0x04003976] 	      1547	gui.c	FUNCTION_21	IF_1
0x4003976	            0x85f6	                           test esi, esi	      1547	gui.c	FUNCTION_21	IF_1
0x4003978	            0x7506	                           jne 0x4003980	      1547	gui.c	FUNCTION_21	IF_1
0x400397a	            0xf3c3	                                     ret	      1547	gui.c	FUNCTION_21	IF_1
0x400397c	         0xf1f4000	                         nop dword [rax]	      1547	gui.c	FUNCTION_21	IF_1
0x4003980	    0x8b3d00000000	            mov edi, dword [0x04003986] 	      1550	gui.c	FUNCTION_21	CALL_1
0x4003986	      0xe945fdffff	                jmp sym.gui_resize_shell	      1550	gui.c	FUNCTION_21	CALL_1
gui_init_font	WHILE,1:SWITCH,0:CALL,10:ELSE,3:DO,0:IF,8:FOR,0:functions,0	47
0x40017c0	    0x4881ec680100	                          sub rsp, 0x168	       850	gui.c	FUNCTION_10
0x40017c7	    0x64488b042528	                mov rax, qword fs:[0x28]	       850	gui.c	FUNCTION_10
0x40017d0	    0x488984245801	            mov qword [rsp + 0x158], rax	       850	gui.c	FUNCTION_10
0x40017d8	            0x31c0	                            xor eax, eax	       850	gui.c	FUNCTION_10
0x40017da	    0x8b0500000000	            mov eax, dword [0x040017e0] 	       856	gui.c	FUNCTION_10	IF_1
0x40017e0	      0x48897c2408	                mov qword [rsp + 8], rdi	       850	gui.c	FUNCTION_10
0x40017e5	            0x85c0	                           test eax, eax	       856	gui.c	FUNCTION_10	IF_1
0x40017e7	            0x744d	                            je 0x4001836	       856	gui.c	FUNCTION_10	IF_1
0x40017e9	      0xc644241000	                mov byte [rsp + 0x10], 0	       859	gui.c	FUNCTION_10
0x40017ee	          0x803f00	                       cmp byte [rdi], 0	       860	gui.c	FUNCTION_10	IF_2
0x40017f1	            0x7465	                            je 0x4001858	       860	gui.c	FUNCTION_10	IF_2
0x40017f3	       0xf1f440000	                   nop dword [rax + rax]	       860	gui.c	FUNCTION_10	IF_2
0x40017f8	      0x488d742410	                   lea rsi, [rsp + 0x10]	       873	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	CALL_2
0x40017fd	      0x488d7c2408	                      lea rdi, [rsp + 8]	       873	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	CALL_2
0x4001802	      0xb900000000	                              mov ecx, 0	       873	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	CALL_2
0x4001807	      0xba40010000	                          mov edx, 0x140	       873	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	CALL_2
0x400180c	      0xe800000000	                          call 0x4001811	       873	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	CALL_2
0x4001811	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       880	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	IF_4	CALL_3
0x4001816	            0x31f6	                            xor esi, esi	       880	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	IF_4	CALL_3
0x4001818	      0xe800000000	                          call 0x400181d	       880	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	IF_4	CALL_3
0x400181d	          0x83f801	                              cmp eax, 1	       880	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	IF_4	CALL_3
0x4001820	            0x744e	                            je 0x4001870	       880	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1	IF_4	CALL_3
0x4001822	      0x488b442408	                mov rax, qword [rsp + 8]	       870	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1
0x4001827	          0x803800	                       cmp byte [rax], 0	       870	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1
0x400182a	            0x75cc	                           jne 0x40017f8	       870	gui.c	FUNCTION_10	ELSE_1	ELSE_2	WHILE_1
0x400182c	    0x48833d000000	               cmp qword [0x04001834], 0	       897	gui.c	FUNCTION_10	IF_6
0x4001834	            0x7422	                            je 0x4001858	       897	gui.c	FUNCTION_10	IF_6
0x4001836	            0x31c0	                            xor eax, eax	       857	gui.c	FUNCTION_10	IF_1
0x4001838	    0x488b8c245801	           mov rcx, qword [rsp + 0x158] 	       922	gui.c	FUNCTION_10
0x4001840	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       922	gui.c	FUNCTION_10
0x4001849	            0x7540	                           jne 0x400188b	       922	gui.c	FUNCTION_10
0x400184b	    0x4881c4680100	                          add rsp, 0x168	       922	gui.c	FUNCTION_10
0x4001852	              0xc3	                                     ret	       922	gui.c	FUNCTION_10
0x4001853	       0xf1f440000	                   nop dword [rax + rax]	       922	gui.c	FUNCTION_10
0x4001858	            0x31f6	                            xor esi, esi	       904	gui.c	FUNCTION_10	IF_6	CALL_7
0x400185a	            0x31ff	                            xor edi, edi	       904	gui.c	FUNCTION_10	IF_6	CALL_7
0x400185c	      0xe800000000	                          call 0x4001861	       904	gui.c	FUNCTION_10	IF_6	CALL_7
0x4001861	          0x83f801	                              cmp eax, 1	       907	gui.c	FUNCTION_10	IF_7
0x4001864	            0x75d2	                           jne 0x4001838	       907	gui.c	FUNCTION_10	IF_7
0x4001866	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       907	gui.c	FUNCTION_10	IF_7
0x4001870	      0xba0f000000	                            mov edx, 0xf	       918	gui.c	FUNCTION_10	IF_7	CALL_10
0x4001875	      0xbe01000000	                              mov esi, 1	       918	gui.c	FUNCTION_10	IF_7	CALL_10
0x400187a	      0xbf01000000	                              mov edi, 1	       918	gui.c	FUNCTION_10	IF_7	CALL_10
0x400187f	      0xe800000000	                          call 0x4001884	       918	gui.c	FUNCTION_10	IF_7	CALL_10
0x4001884	      0xb801000000	                              mov eax, 1	       918	gui.c	FUNCTION_10	IF_7	CALL_10
0x4001889	            0xebad	                           jmp 0x4001838	       918	gui.c	FUNCTION_10	IF_7	CALL_10
0x400188b	      0xe800000000	              call sym.gui_new_shellsize	       922	gui.c	FUNCTION_10
gui_dont_update_cursor	WHILE,0:SWITCH,0:CALL,1:ELSE,0:DO,0:IF,2:FOR,0:functions,0	45
0x40041f0	    0x8b3500000000	            mov esi, dword [0x040041f6] 	      1993	gui.c	FUNCTION_31	IF_1
0x40041f6	            0x85f6	                           test esi, esi	      1993	gui.c	FUNCTION_31	IF_1
0x40041f8	     0xf84a4000000	                            je 0x40042a2	      1993	gui.c	FUNCTION_31	IF_1
0x40041fe	            0x85ff	                           test edi, edi	      1996	gui.c	FUNCTION_31	IF_1	IF_2
0x4004200	            0x7409	                            je 0x400420b	      1996	gui.c	FUNCTION_31	IF_1	IF_2
0x4004202	    0x803d00000000	                cmp byte [0x04004209], 0	      2630	gui.c	FUNCTION_40	IF_1
0x4004209	            0x7515	                           jne 0x4004220	      2630	gui.c	FUNCTION_40	IF_1
0x400420b	    0xc70500000000	               mov dword [0x04004215], 0	      1998	gui.c	FUNCTION_31	IF_1
0x4004215	              0xc3	                                     ret	      1998	gui.c	FUNCTION_31	IF_1
0x4004216	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1998	gui.c	FUNCTION_31	IF_1
0x4004220	    0x8b0d00000000	            mov ecx, dword [0x04004226] 	      2721	gui.c	FUNCTION_42	IF_1
0x4004226	            0x85c9	                           test ecx, ecx	      2721	gui.c	FUNCTION_42	IF_1
0x4004228	            0x747e	                            je 0x40042a8	      2721	gui.c	FUNCTION_42	IF_1
0x400422a	    0x48833d000000	               cmp qword [0x04004232], 0	      2721	gui.c	FUNCTION_42	IF_1
0x4004232	            0x7474	                            je 0x40042a8	      2721	gui.c	FUNCTION_42	IF_1
0x4004234	        0x4883ec08	                              sub rsp, 8	      1992	gui.c	FUNCTION_31
0x4004238	    0x8b3500000000	            mov esi, dword [0x0400423e] 	      2651	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_4
0x400423e	    0x8b3d00000000	            mov edi, dword [0x04004244] 	      2651	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_4
0x4004244	    0x41b810000000	                           mov r8d, 0x10	      2651	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_4
0x400424a	            0x89f1	                            mov ecx, esi	      2651	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_4
0x400424c	            0x89fa	                            mov edx, edi	      2651	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_4
0x400424e	      0xe81de8ffff	        call sym.gui_redraw_block.part.7	      2651	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_4
0x4004253	            0x85c0	                           test eax, eax	      2651	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_4
0x4004255	            0x7436	                            je 0x400428d	      2651	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_4
0x4004257	    0x8b0500000000	            mov eax, dword [0x0400425d] 	      2653	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4
0x400425d	            0x85c0	                           test eax, eax	      2653	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4
0x400425f	            0x7e2c	                           jle 0x400428d	      2653	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4
0x4004261	    0x8b1500000000	            mov edx, dword [0x04004267] 	      2721	gui.c	FUNCTION_42	IF_1
0x4004267	            0x85d2	                           test edx, edx	      2721	gui.c	FUNCTION_42	IF_1
0x4004269	            0x7422	                            je 0x400428d	      2721	gui.c	FUNCTION_42	IF_1
0x400426b	    0x48833d000000	               cmp qword [0x04004273], 0	      2721	gui.c	FUNCTION_42	IF_1
0x4004273	            0x7418	                            je 0x400428d	      2721	gui.c	FUNCTION_42	IF_1
0x4004275	    0x8b3d00000000	            mov edi, dword [0x0400427b] 	      2654	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_5
0x400427b	          0x8d70ff	                      lea esi, [rax - 1]	      2654	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_5
0x400427e	    0x41b810000000	                           mov r8d, 0x10	      2654	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_5
0x4004284	            0x89f1	                            mov ecx, esi	      2654	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_5
0x4004286	            0x89fa	                            mov edx, edi	      2654	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_5
0x4004288	      0xe8e3e7ffff	        call sym.gui_redraw_block.part.7	      2654	gui.c	FUNCTION_40	IF_1	ELSE_1	IF_4	CALL_5
0x400428d	    0xc60500000000	                mov byte [0x04004294], 0	      2664	gui.c	FUNCTION_40	IF_1
0x4004294	    0xc70500000000	               mov dword [0x0400429e], 0	      1998	gui.c	FUNCTION_31	IF_1
0x400429e	        0x4883c408	                              add rsp, 8	      2000	gui.c	FUNCTION_31
0x40042a2	            0xf3c3	                                     ret	      2000	gui.c	FUNCTION_31
0x40042a4	         0xf1f4000	                         nop dword [rax]	      2000	gui.c	FUNCTION_31
0x40042a8	    0xc60500000000	                mov byte [0x040042af], 0	      2664	gui.c	FUNCTION_40	IF_1
0x40042af	      0xe957ffffff	                           jmp 0x400420b	      2664	gui.c	FUNCTION_40	IF_1
gui_set_shellsize	WHILE,0:SWITCH,0:CALL,21:ELSE,1:DO,0:IF,13:FOR,0:functions,0	276
0x4001300	            0x4157	                                push r15	      1573	gui.c	FUNCTION_23
0x4001302	            0x4156	                                push r14	      1573	gui.c	FUNCTION_23
0x4001304	            0x4155	                                push r13	      1573	gui.c	FUNCTION_23
0x4001306	            0x4154	                                push r12	      1573	gui.c	FUNCTION_23
0x4001308	              0x55	                                push rbp	      1573	gui.c	FUNCTION_23
0x4001309	              0x53	                                push rbx	      1573	gui.c	FUNCTION_23
0x400130a	        0x4883ec38	                           sub rsp, 0x38	      1573	gui.c	FUNCTION_23
0x400130e	    0x8b2d00000000	            mov ebp, dword [0x04001314] 	      1588	gui.c	FUNCTION_23	IF_1
0x4001314	    0x64488b042528	                mov rax, qword fs:[0x28]	      1573	gui.c	FUNCTION_23
0x400131d	      0x4889442428	             mov qword [rsp + 0x28], rax	      1573	gui.c	FUNCTION_23
0x4001322	            0x31c0	                            xor eax, eax	      1573	gui.c	FUNCTION_23
0x4001324	    0xc7442420ffff	     mov dword [rsp + 0x20], 0xffffffff 	      1586	gui.c	FUNCTION_23
0x400132c	    0xc7442424ffff	     mov dword [rsp + 0x24], 0xffffffff 	      1586	gui.c	FUNCTION_23
0x4001334	            0x85ed	                           test ebp, ebp	      1588	gui.c	FUNCTION_23	IF_1
0x4001336	     0xf8413020000	                            je 0x400154f	      1588	gui.c	FUNCTION_23	IF_1
0x400133c	            0x85ff	                           test edi, edi	      1594	gui.c	FUNCTION_23	IF_2	CALL_1
0x400133e	            0x89fd	                            mov ebp, edi	      1594	gui.c	FUNCTION_23	IF_2	CALL_1
0x4001340	          0x4189f4	                           mov r12d, esi	      1594	gui.c	FUNCTION_23	IF_2	CALL_1
0x4001343	          0x4189d5	                           mov r13d, edx	      1594	gui.c	FUNCTION_23	IF_2	CALL_1
0x4001346	     0xf842c020000	                            je 0x4001578	      1594	gui.c	FUNCTION_23	IF_2	CALL_1
0x400134c	    0x8b0500000000	            mov eax, dword [0x04001352] 	      1412	gui.c	FUNCTION_18
0x4001352	    0x448b05000000	            mov r8d, dword [0x04001359] 	      1414	gui.c	FUNCTION_18	IF_1
0x4001359	    0x448b15000000	           mov r10d, dword [0x04001360] 	      1414	gui.c	FUNCTION_18	IF_1
0x4001360	    0x448b1d000000	           mov r11d, dword [0x04001367] 	      1416	gui.c	FUNCTION_18	IF_2
0x4001367	    0x8b1d00000000	            mov ebx, dword [0x0400136d] 	      1430	gui.c	FUNCTION_19	IF_1
0x400136d	        0x448d3c00	                   lea r15d, [rax + rax]	      1412	gui.c	FUNCTION_18
0x4001371	    0x8b0500000000	            mov eax, dword [0x04001377] 	      1416	gui.c	FUNCTION_18	IF_2
0x4001377	          0x4501f8	                           add r8d, r15d	      1414	gui.c	FUNCTION_18	IF_1
0x400137a	          0x4585d2	                         test r10d, r10d	      1414	gui.c	FUNCTION_18	IF_1
0x400137d	          0x4589c6	                           mov r14d, r8d	      1414	gui.c	FUNCTION_18	IF_1
0x4001380	        0x450f44f7	                        cmove r14d, r15d	      1414	gui.c	FUNCTION_18	IF_1
0x4001384	          0x4401f0	                           add eax, r14d	      1416	gui.c	FUNCTION_18	IF_2
0x4001387	          0x4585db	                         test r11d, r11d	      1416	gui.c	FUNCTION_18	IF_2
0x400138a	        0x440f45f0	                        cmovne r14d, eax	      1416	gui.c	FUNCTION_18	IF_2
0x400138e	    0x8b0500000000	            mov eax, dword [0x04001394] 	      1430	gui.c	FUNCTION_19	IF_1
0x4001394	          0x4401f8	                           add eax, r15d	      1430	gui.c	FUNCTION_19	IF_1
0x4001397	            0x85db	                           test ebx, ebx	      1430	gui.c	FUNCTION_19	IF_1
0x4001399	        0x440f45f8	                        cmovne r15d, eax	      1430	gui.c	FUNCTION_19	IF_1
0x400139d	          0x4585e4	                         test r12d, r12d	      1604	gui.c	FUNCTION_23	IF_3
0x40013a0	     0xf854a030000	                           jne 0x40016f0	      1604	gui.c	FUNCTION_23	IF_3
0x40013a6	    0x8b1d00000000	            mov ebx, dword [0x040013ac] 	      1618	gui.c	FUNCTION_23	ELSE_1
0x40013ac	    0x8b0500000000	            mov eax, dword [0x040013b2] 	      1619	gui.c	FUNCTION_23	ELSE_1
0x40013b2	     0xfaf1d000000	            imul ebx, dword [0x040013b9]	      1618	gui.c	FUNCTION_23	ELSE_1
0x40013b9	     0xfaf05000000	            imul eax, dword [0x040013c0]	      1619	gui.c	FUNCTION_23	ELSE_1
0x40013c0	          0x4401f3	                           add ebx, r14d	      1618	gui.c	FUNCTION_23	ELSE_1
0x40013c3	          0x4401f8	                           add eax, r15d	      1619	gui.c	FUNCTION_23	ELSE_1
0x40013c6	          0x4585e4	                         test r12d, r12d	      1622	gui.c	FUNCTION_23	IF_5
0x40013c9	        0x89442404	                mov dword [rsp + 4], eax	      1619	gui.c	FUNCTION_23	ELSE_1
0x40013cd	     0xf858d020000	                           jne 0x4001660	      1622	gui.c	FUNCTION_23	IF_5
0x40013d3	      0xe800000000	                          call 0x40013d8	      1651	gui.c	FUNCTION_23	CALL_10
0x40013d8	    0x488b05000000	            mov rax, qword [0x040013df] 	      1652	gui.c	FUNCTION_23
0x40013df	    0x890500000000	            mov dword [0x040013e5], eax 	      1652	gui.c	FUNCTION_23
0x40013e5	    0x488b05000000	            mov rax, qword [0x040013ec] 	      1653	gui.c	FUNCTION_23
0x40013ec	    0x890500000000	            mov dword [0x040013f2], eax 	      1653	gui.c	FUNCTION_23
0x40013f2	    0x8b0500000000	            mov eax, dword [0x040013f8] 	      1655	gui.c	FUNCTION_23
0x40013f8	          0x8d0440	                  lea eax, [rax + rax*2]	      1655	gui.c	FUNCTION_23
0x40013fb	        0x418d0486	                  lea eax, [r14 + rax*4]	      1655	gui.c	FUNCTION_23
0x40013ff	        0x89442408	                mov dword [rsp + 8], eax	      1655	gui.c	FUNCTION_23
0x4001403	    0x8b0500000000	            mov eax, dword [0x04001409] 	      1656	gui.c	FUNCTION_23
0x4001409	        0x418d0447	                  lea eax, [r15 + rax*2]	      1656	gui.c	FUNCTION_23
0x400140d	        0x8944240c	              mov dword [rsp + 0xc], eax	      1656	gui.c	FUNCTION_23
0x4001411	      0xe800000000	                          call 0x4001416	      1657	gui.c	FUNCTION_23	CALL_11
0x4001416	     0xfaf05000000	            imul eax, dword [0x0400141d]	      1657	gui.c	FUNCTION_23	CALL_11
0x400141d	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      1657	gui.c	FUNCTION_23	CALL_11
0x4001421	            0x85ed	                           test ebp, ebp	      1660	gui.c	FUNCTION_23	IF_10
0x4001423	          0x8d0c10	                    lea ecx, [rax + rdx]	      1657	gui.c	FUNCTION_23	CALL_11
0x4001426	     0xf85d4010000	                           jne 0x4001600	      1660	gui.c	FUNCTION_23	IF_10
0x400142c	        0x4883ec08	                              sub rsp, 8	      1672	gui.c	FUNCTION_23	CALL_15
0x4001430	          0x4589f9	                           mov r9d, r15d	      1672	gui.c	FUNCTION_23	CALL_15
0x4001433	          0x4589f0	                           mov r8d, r14d	      1672	gui.c	FUNCTION_23	CALL_15
0x4001436	            0x4155	                                push r13	      1672	gui.c	FUNCTION_23	CALL_15
0x4001438	        0x8b542418	            mov edx, dword [rsp + 0x18] 	      1672	gui.c	FUNCTION_23	CALL_15
0x400143c	            0x89df	                            mov edi, ebx	      1672	gui.c	FUNCTION_23	CALL_15
0x400143e	        0x8b742414	            mov esi, dword [rsp + 0x14] 	      1672	gui.c	FUNCTION_23	CALL_15
0x4001442	      0xe800000000	                          call 0x4001447	      1672	gui.c	FUNCTION_23	CALL_15
0x4001447	          0x4585e4	                         test r12d, r12d	      1675	gui.c	FUNCTION_23	IF_12
0x400144a	            0x4158	                                  pop r8	      1675	gui.c	FUNCTION_23	IF_12
0x400144c	            0x4159	                                  pop r9	      1675	gui.c	FUNCTION_23	IF_12
0x400144e	            0x7430	                            je 0x4001480	      1675	gui.c	FUNCTION_23	IF_12
0x4001450	        0x8b7c2420	            mov edi, dword [rsp + 0x20] 	      1675	gui.c	FUNCTION_23	IF_12
0x4001454	            0x85ff	                           test edi, edi	      1675	gui.c	FUNCTION_23	IF_12
0x4001456	            0x7828	                            js 0x4001480	      1675	gui.c	FUNCTION_23	IF_12
0x4001458	        0x8b742424	            mov esi, dword [rsp + 0x24] 	      1675	gui.c	FUNCTION_23	IF_12
0x400145c	            0x85f6	                           test esi, esi	      1675	gui.c	FUNCTION_23	IF_12
0x400145e	            0x7820	                            js 0x4001480	      1675	gui.c	FUNCTION_23	IF_12
0x4001460	      0xe800000000	                          call 0x4001465	      1680	gui.c	FUNCTION_23	IF_12	CALL_16
0x4001465	      0x488d742424	                   lea rsi, [rsp + 0x24]	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x400146a	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x400146f	      0xe800000000	                          call 0x4001474	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x4001474	          0x83f801	                              cmp eax, 1	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x4001477	     0xf848b020000	                            je 0x4001708	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x400147d	           0xf1f00	                         nop dword [rax]	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x4001480	    0x8b0500000000	            mov eax, dword [0x04001486] 	      1344	gui.c	FUNCTION_17
0x4001486	    0x8b1500000000	            mov edx, dword [0x0400148c] 	      1348	gui.c	FUNCTION_17	IF_1
0x400148c	      0xbb00000000	                              mov ebx, 0	      1348	gui.c	FUNCTION_17	IF_1
0x4001491	    0x8b2d00000000	            mov ebp, dword [0x04001497] 	      1378	gui.c	FUNCTION_17
0x4001497	    0x448b25000000	           mov r12d, dword [0x0400149e] 	      1379	gui.c	FUNCTION_17
0x400149e	          0x83c001	                              add eax, 1	      1344	gui.c	FUNCTION_17
0x40014a1	            0x85d2	                           test edx, edx	      1348	gui.c	FUNCTION_17	IF_1
0x40014a3	     0xf451d000000	          cmovne ebx, dword [0x040014aa]	      1348	gui.c	FUNCTION_17	IF_1
0x40014aa	     0xfaf2d000000	            imul ebp, dword [0x040014b1]	      1378	gui.c	FUNCTION_17
0x40014b1	    0x440faf250000	           imul r12d, dword [0x040014b9]	      1379	gui.c	FUNCTION_17
0x40014b9	    0x890500000000	            mov dword [0x040014bf], eax 	      1344	gui.c	FUNCTION_17
0x40014bf	    0x8b0500000000	            mov eax, dword [0x040014c5] 	      1378	gui.c	FUNCTION_17
0x40014c5	            0x31f6	                            xor esi, esi	      1381	gui.c	FUNCTION_17	CALL_5
0x40014c7	            0x89df	                            mov edi, ebx	      1381	gui.c	FUNCTION_17	CALL_5
0x40014c9	             0x1c0	                            add eax, eax	      1378	gui.c	FUNCTION_17
0x40014cb	             0x1c5	                            add ebp, eax	      1378	gui.c	FUNCTION_17
0x40014cd	          0x4101c4	                           add r12d, eax	      1379	gui.c	FUNCTION_17
0x40014d0	            0x89ea	                            mov edx, ebp	      1381	gui.c	FUNCTION_17	CALL_5
0x40014d2	          0x4489e1	                           mov ecx, r12d	      1381	gui.c	FUNCTION_17	CALL_5
0x40014d5	      0xe800000000	                          call 0x40014da	      1381	gui.c	FUNCTION_17	CALL_5
0x40014da	    0x8b0d00000000	            mov ecx, dword [0x040014e0] 	      1392	gui.c	FUNCTION_17	IF_6
0x40014e0	            0x85c9	                           test ecx, ecx	      1392	gui.c	FUNCTION_17	IF_6
0x40014e2	     0xf85b8000000	                           jne 0x40015a0	      1392	gui.c	FUNCTION_17	IF_6
0x40014e8	    0x8b0500000000	            mov eax, dword [0x040014ee] 	      1401	gui.c	FUNCTION_17
0x40014ee	             0x1eb	                            add ebx, ebp	      1399	gui.c	FUNCTION_17
0x40014f0	    0xc70500000000	               mov dword [0x040014fa], 0	      1398	gui.c	FUNCTION_17
0x40014fa	    0x891d00000000	            mov dword [0x04001500], ebx 	      1399	gui.c	FUNCTION_17
0x4001500	          0x83e801	                              sub eax, 1	      1401	gui.c	FUNCTION_17
0x4001503	    0x890500000000	            mov dword [0x04001509], eax 	      1401	gui.c	FUNCTION_17
0x4001509	    0x48833d000000	               cmp qword [0x04001511], 0	      4193	gui.c	FUNCTION_65	IF_1
0x4001511	            0x740a	                            je 0x400151d	      4193	gui.c	FUNCTION_65	IF_1
0x4001513	      0xbf01000000	                              mov edi, 1	      4193	gui.c	FUNCTION_65	IF_1
0x4001518	      0xe8b3f3ffff	  call sym.gui_update_scrollbars.part.12	      4193	gui.c	FUNCTION_65	IF_1
0x400151d	    0x8b0500000000	            mov eax, dword [0x04001523] 	      1706	gui.c	FUNCTION_25
0x4001523	    0xc70500000000	               mov dword [0x0400152d], 0	      1705	gui.c	FUNCTION_25
0x400152d	    0xc70500000000	               mov dword [0x04001537], 0	      1707	gui.c	FUNCTION_25
0x4001537	          0x83e801	                              sub eax, 1	      1706	gui.c	FUNCTION_25
0x400153a	    0x890500000000	            mov dword [0x04001540], eax 	      1706	gui.c	FUNCTION_25
0x4001540	    0x8b0500000000	            mov eax, dword [0x04001546] 	      1708	gui.c	FUNCTION_25
0x4001546	          0x83e801	                              sub eax, 1	      1708	gui.c	FUNCTION_25
0x4001549	    0x890500000000	            mov dword [0x0400154f], eax 	      1708	gui.c	FUNCTION_25
0x400154f	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1688	gui.c	FUNCTION_23
0x4001554	    0x644833042528	                xor rax, qword fs:[0x28]	      1688	gui.c	FUNCTION_23
0x400155d	     0xf854a020000	                           jne 0x40017ad	      1688	gui.c	FUNCTION_23
0x4001563	        0x4883c438	                           add rsp, 0x38	      1688	gui.c	FUNCTION_23
0x4001567	              0x5b	                                 pop rbx	      1688	gui.c	FUNCTION_23
0x4001568	              0x5d	                                 pop rbp	      1688	gui.c	FUNCTION_23
0x4001569	            0x415c	                                 pop r12	      1688	gui.c	FUNCTION_23
0x400156b	            0x415d	                                 pop r13	      1688	gui.c	FUNCTION_23
0x400156d	            0x415e	                                 pop r14	      1688	gui.c	FUNCTION_23
0x400156f	            0x415f	                                 pop r15	      1688	gui.c	FUNCTION_23
0x4001571	              0xc3	                                     ret	      1688	gui.c	FUNCTION_23
0x4001572	    0x660f1f440000	                    nop word [rax + rax]	      1688	gui.c	FUNCTION_23
0x4001578	    0x488b3d000000	            mov rdi, qword [0x0400157f] 	      1594	gui.c	FUNCTION_23	IF_2	CALL_1
0x400157f	      0xbe6b000000	                           mov esi, 0x6b	      1594	gui.c	FUNCTION_23	IF_2	CALL_1
0x4001584	      0xe800000000	                          call 0x4001589	      1594	gui.c	FUNCTION_23	IF_2	CALL_1
0x4001589	          0x4885c0	                           test rax, rax	      1594	gui.c	FUNCTION_23	IF_2	CALL_1
0x400158c	     0xf84ee010000	                            je 0x4001780	      1594	gui.c	FUNCTION_23	IF_2	CALL_1
0x4001592	      0xe800000000	                          call 0x4001597	      1597	gui.c	FUNCTION_23	IF_2	CALL_3
0x4001597	            0xebb6	                           jmp 0x400154f	      1598	gui.c	FUNCTION_23	IF_2
0x4001599	     0xf1f80000000	                         nop dword [rax]	      1598	gui.c	FUNCTION_23	IF_2
0x40015a0	    0x448b05000000	            mov r8d, dword [0x040015a7] 	      1393	gui.c	FUNCTION_17	IF_6	CALL_8
0x40015a7	            0x89de	                            mov esi, ebx	      1393	gui.c	FUNCTION_17	IF_6	CALL_8
0x40015a9	            0x89e9	                            mov ecx, ebp	      1393	gui.c	FUNCTION_17	IF_6	CALL_8
0x40015ab	          0x4489e2	                           mov edx, r12d	      1393	gui.c	FUNCTION_17	IF_6	CALL_8
0x40015ae	      0xbf00000000	                              mov edi, 0	      1393	gui.c	FUNCTION_17	IF_6	CALL_8
0x40015b3	             0x1eb	                            add ebx, ebp	      1399	gui.c	FUNCTION_17
0x40015b5	      0xe800000000	                          call 0x40015ba	      1393	gui.c	FUNCTION_17	IF_6	CALL_8
0x40015ba	    0x8b0500000000	            mov eax, dword [0x040015c0] 	      1401	gui.c	FUNCTION_17
0x40015c0	    0xc70500000000	               mov dword [0x040015ca], 0	      1398	gui.c	FUNCTION_17
0x40015ca	    0x891d00000000	            mov dword [0x040015d0], ebx 	      1399	gui.c	FUNCTION_17
0x40015d0	          0x83e801	                              sub eax, 1	      1401	gui.c	FUNCTION_17
0x40015d3	    0x890500000000	            mov dword [0x040015d9], eax 	      1401	gui.c	FUNCTION_17
0x40015d9	    0x8b0500000000	            mov eax, dword [0x040015df] 	      4607	gui.c	ELSE_2	FUNCTION_70	IF_1
0x40015df	            0x85c0	                           test eax, eax	      4607	gui.c	ELSE_2	FUNCTION_70	IF_1
0x40015e1	     0xf8422ffffff	                            je 0x4001509	      4607	gui.c	ELSE_2	FUNCTION_70	IF_1
0x40015e7	      0xbf01000000	                              mov edi, 1	      4607	gui.c	ELSE_2	FUNCTION_70	IF_1
0x40015ec	      0xe88ff8ffff	call sym.gui_update_horiz_scrollbar.part.0	      4607	gui.c	ELSE_2	FUNCTION_70	IF_1
0x40015f1	      0xe913ffffff	                           jmp 0x4001509	      4607	gui.c	ELSE_2	FUNCTION_70	IF_1
0x40015f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4607	gui.c	ELSE_2	FUNCTION_70	IF_1
0x4001600	      0x488d74241c	                   lea rsi, [rsp + 0x1c]	      1664	gui.c	FUNCTION_23	IF_10	CALL_12
0x4001605	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      1664	gui.c	FUNCTION_23	IF_10	CALL_12
0x400160a	        0x894c240c	              mov dword [rsp + 0xc], ecx	      1664	gui.c	FUNCTION_23	IF_10	CALL_12
0x400160e	      0xe800000000	                          call 0x4001613	      1664	gui.c	FUNCTION_23	IF_10	CALL_12
0x4001613	    0x8b0500000000	            mov eax, dword [0x04001619] 	      1665	gui.c	FUNCTION_23	IF_10	IF_11
0x4001619	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      1665	gui.c	FUNCTION_23	IF_10	IF_11
0x400161d	             0x1d8	                            add eax, ebx	      1665	gui.c	FUNCTION_23	IF_10	IF_11
0x400161f	        0x3b442418	            cmp eax, dword [rsp + 0x18] 	      1665	gui.c	FUNCTION_23	IF_10	IF_11
0x4001623	            0x7c17	                            jl 0x400163c	      1665	gui.c	FUNCTION_23	IF_10	IF_11
0x4001625	    0x8b0500000000	            mov eax, dword [0x0400162b] 	      1666	gui.c	FUNCTION_23	IF_10	IF_11
0x400162b	        0x8b542404	                mov edx, dword [rsp + 4]	      1666	gui.c	FUNCTION_23	IF_10	IF_11
0x400162f	          0x8d0442	                  lea eax, [rdx + rax*2]	      1666	gui.c	FUNCTION_23	IF_10	IF_11
0x4001632	        0x3b44241c	            cmp eax, dword [rsp + 0x1c] 	      1666	gui.c	FUNCTION_23	IF_10	IF_11
0x4001636	     0xf8df0fdffff	                           jge 0x400142c	      1666	gui.c	FUNCTION_23	IF_10	IF_11
0x400163c	        0x894c240c	              mov dword [rsp + 0xc], ecx	      1666	gui.c	FUNCTION_23	IF_10	IF_11
0x4001640	      0xe800000000	                          call 0x4001645	      1667	gui.c	FUNCTION_23	IF_10	IF_11	CALL_13
0x4001645	            0x85c0	                           test eax, eax	      1667	gui.c	FUNCTION_23	IF_10	IF_11	CALL_13
0x4001647	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      1667	gui.c	FUNCTION_23	IF_10	IF_11	CALL_13
0x400164b	     0xf84dbfdffff	                            je 0x400142c	      1667	gui.c	FUNCTION_23	IF_10	IF_11	CALL_13
0x4001651	      0xe800000000	                          call 0x4001656	      1668	gui.c	FUNCTION_23	IF_10	CALL_14
0x4001656	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      1668	gui.c	FUNCTION_23	IF_10	CALL_14
0x400165a	      0xe9cdfdffff	                           jmp 0x400142c	      1668	gui.c	FUNCTION_23	IF_10	CALL_14
0x400165f	              0x90	                                     nop	      1668	gui.c	FUNCTION_23	IF_10	CALL_14
0x4001660	      0x488d74241c	                   lea rsi, [rsp + 0x1c]	      1624	gui.c	FUNCTION_23	IF_5	CALL_8
0x4001665	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      1624	gui.c	FUNCTION_23	IF_5	CALL_8
0x400166a	      0xe800000000	                          call 0x400166f	      1624	gui.c	FUNCTION_23	IF_5	CALL_8
0x400166f	            0x31c9	                            xor ecx, ecx	      1584	gui.c	FUNCTION_23
0x4001671	        0x41f6c502	                            test r13b, 2	      1625	gui.c	FUNCTION_23	IF_5	IF_6
0x4001675	            0x7434	                            je 0x40016ab	      1625	gui.c	FUNCTION_23	IF_5	IF_6
0x4001677	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      1625	gui.c	FUNCTION_23	IF_5	IF_6
0x400167b	            0x39c3	                            cmp ebx, eax	      1625	gui.c	FUNCTION_23	IF_5	IF_6
0x400167d	            0x7e2c	                           jle 0x40016ab	      1625	gui.c	FUNCTION_23	IF_5	IF_6
0x400167f	    0x8b1d00000000	            mov ebx, dword [0x04001685] 	      1627	gui.c	FUNCTION_23	IF_5	IF_6
0x4001685	          0x4429f0	                           sub eax, r14d	      1627	gui.c	FUNCTION_23	IF_5	IF_6
0x4001688	              0x99	                                     cdq	      1627	gui.c	FUNCTION_23	IF_5	IF_6
0x4001689	            0xf7fb	                                idiv ebx	      1627	gui.c	FUNCTION_23	IF_5	IF_6
0x400168b	          0x4863d0	                         movsxd rdx, eax	      1627	gui.c	FUNCTION_23	IF_5	IF_6
0x400168e	        0x4883fa0b	                            cmp rdx, 0xb	      1628	gui.c	FUNCTION_23	IF_5	IF_6	IF_7
0x4001692	     0xf8e00010000	                           jle 0x4001798	      1628	gui.c	FUNCTION_23	IF_5	IF_6	IF_7
0x4001698	    0x488915000000	            mov qword [0x0400169f], rdx 	      1627	gui.c	FUNCTION_23	IF_5	IF_6
0x400169f	           0xfafc3	                           imul eax, ebx	      1630	gui.c	FUNCTION_23	IF_5	IF_6
0x40016a2	      0xb901000000	                              mov ecx, 1	      1632	gui.c	FUNCTION_23	IF_5	IF_6
0x40016a7	        0x428d1c30	                    lea ebx, [rax + r14]	      1630	gui.c	FUNCTION_23	IF_5	IF_6
0x40016ab	        0x41f6c501	                            test r13b, 1	      1635	gui.c	FUNCTION_23	IF_5	IF_8
0x40016af	            0x740a	                            je 0x40016bb	      1635	gui.c	FUNCTION_23	IF_5	IF_8
0x40016b1	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      1635	gui.c	FUNCTION_23	IF_5	IF_8
0x40016b5	        0x39442404	                cmp dword [rsp + 4], eax	      1635	gui.c	FUNCTION_23	IF_5	IF_8
0x40016b9	            0x7f7d	                            jg 0x4001738	      1635	gui.c	FUNCTION_23	IF_5	IF_8
0x40016bb	    0x8b0500000000	            mov eax, dword [0x040016c1] 	      1645	gui.c	FUNCTION_23	IF_5	IF_9
0x40016c1	             0x1d8	                            add eax, ebx	      1645	gui.c	FUNCTION_23	IF_5	IF_9
0x40016c3	        0x3b442418	            cmp eax, dword [rsp + 0x18] 	      1645	gui.c	FUNCTION_23	IF_5	IF_9
0x40016c7	     0xf8c06fdffff	                            jl 0x40013d3	      1645	gui.c	FUNCTION_23	IF_5	IF_9
0x40016cd	        0x8b442404	                mov eax, dword [rsp + 4]	      1646	gui.c	FUNCTION_23	IF_5	IF_9
0x40016d1	     0x30500000000	             add eax, dword [0x040016d7]	      1646	gui.c	FUNCTION_23	IF_5	IF_9
0x40016d7	        0x3b44241c	            cmp eax, dword [rsp + 0x1c] 	      1646	gui.c	FUNCTION_23	IF_5	IF_9
0x40016db	     0xf8cf2fcffff	                            jl 0x40013d3	      1646	gui.c	FUNCTION_23	IF_5	IF_9
0x40016e1	            0x31ed	                            xor ebp, ebp	      1648	gui.c	FUNCTION_23	IF_5	IF_9
0x40016e3	      0xe9ebfcffff	                           jmp 0x40013d3	      1648	gui.c	FUNCTION_23	IF_5	IF_9
0x40016e8	     0xf1f84000000	                   nop dword [rax + rax]	      1648	gui.c	FUNCTION_23	IF_5	IF_9
0x40016f0	      0x488d742424	                   lea rsi, [rsp + 0x24]	      1606	gui.c	FUNCTION_23	CALL_6
0x40016f5	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1606	gui.c	FUNCTION_23	CALL_6
0x40016fa	      0xe800000000	                          call 0x40016ff	      1606	gui.c	FUNCTION_23	CALL_6
0x40016ff	      0xe9a2fcffff	                           jmp 0x40013a6	      1606	gui.c	FUNCTION_23	CALL_6
0x4001704	         0xf1f4000	                         nop dword [rax]	      1606	gui.c	FUNCTION_23	CALL_6
0x4001708	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x400170c	        0x8b742424	            mov esi, dword [rsp + 0x24] 	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x4001710	            0x85c0	                           test eax, eax	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x4001712	            0x7808	                            js 0x400171c	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x4001714	            0x85f6	                           test esi, esi	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x4001716	     0xf8964fdffff	                           jns 0x4001480	      1681	gui.c	FUNCTION_23	IF_12	IF_13	CALL_17
0x400171c	            0x31ff	                            xor edi, edi	      1682	gui.c	FUNCTION_23	IF_12	CALL_18
0x400171e	            0x85f6	                           test esi, esi	      1682	gui.c	FUNCTION_23	IF_12	CALL_18
0x4001720	           0xf48f7	                          cmovs esi, edi	      1682	gui.c	FUNCTION_23	IF_12	CALL_18
0x4001723	            0x85c0	                           test eax, eax	      1682	gui.c	FUNCTION_23	IF_12	CALL_18
0x4001725	           0xf49f8	                         cmovns edi, eax	      1682	gui.c	FUNCTION_23	IF_12	CALL_18
0x4001728	      0xe800000000	                          call 0x400172d	      1682	gui.c	FUNCTION_23	IF_12	CALL_18
0x400172d	      0xe94efdffff	                           jmp 0x4001480	      1682	gui.c	FUNCTION_23	IF_12	CALL_18
0x4001732	    0x660f1f440000	                    nop word [rax + rax]	      1682	gui.c	FUNCTION_23	IF_12	CALL_18
0x4001738	          0x4429f8	                           sub eax, r15d	      1637	gui.c	FUNCTION_23	IF_5	IF_8
0x400173b	        0x894c2408	                mov dword [rsp + 8], ecx	      1637	gui.c	FUNCTION_23	IF_5	IF_8
0x400173f	              0x99	                                     cdq	      1637	gui.c	FUNCTION_23	IF_5	IF_8
0x4001740	    0xf73d00000000	                 idiv dword [0x04001746]	      1637	gui.c	FUNCTION_23	IF_5	IF_8
0x4001746	            0x4898	                                    cdqe	      1637	gui.c	FUNCTION_23	IF_5	IF_8
0x4001748	    0x488905000000	            mov qword [0x0400174f], rax 	      1637	gui.c	FUNCTION_23	IF_5	IF_8
0x400174f	      0xe800000000	                          call 0x4001754	      1638	gui.c	FUNCTION_23	IF_5	IF_8	CALL_9
0x4001754	    0x8b0500000000	            mov eax, dword [0x0400175a] 	      1639	gui.c	FUNCTION_23	IF_5	IF_8
0x400175a	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      1645	gui.c	FUNCTION_23	IF_5	IF_9
0x400175e	     0xfaf05000000	            imul eax, dword [0x04001765]	      1639	gui.c	FUNCTION_23	IF_5	IF_8
0x4001765	          0x4401f8	                           add eax, r15d	      1639	gui.c	FUNCTION_23	IF_5	IF_8
0x4001768	          0x83f901	                              cmp ecx, 1	      1645	gui.c	FUNCTION_23	IF_5	IF_9
0x400176b	        0x89442404	                mov dword [rsp + 4], eax	      1639	gui.c	FUNCTION_23	IF_5	IF_8
0x400176f	     0xf8546ffffff	                           jne 0x40016bb	      1645	gui.c	FUNCTION_23	IF_5	IF_9
0x4001775	            0x31ed	                            xor ebp, ebp	      1648	gui.c	FUNCTION_23	IF_5	IF_9
0x4001777	      0xe957fcffff	                           jmp 0x40013d3	      1648	gui.c	FUNCTION_23	IF_5	IF_9
0x400177c	         0xf1f4000	                         nop dword [rax]	      1648	gui.c	FUNCTION_23	IF_5	IF_9
0x4001780	      0xe800000000	                          call 0x4001785	      1595	gui.c	FUNCTION_23	IF_2	CALL_2
0x4001785	            0x85c0	                           test eax, eax	      1595	gui.c	FUNCTION_23	IF_2	CALL_2
0x4001787	     0xf8505feffff	                           jne 0x4001592	      1595	gui.c	FUNCTION_23	IF_2	CALL_2
0x400178d	      0xe9bafbffff	                           jmp 0x400134c	      1595	gui.c	FUNCTION_23	IF_2	CALL_2
0x4001792	    0x660f1f440000	                    nop word [rax + rax]	      1595	gui.c	FUNCTION_23	IF_2	CALL_2
0x4001798	    0x48c705000000	            mov qword [0x040017a3], 0xc 	      1629	gui.c	FUNCTION_23	IF_5	IF_6	IF_7
0x40017a3	      0xb80c000000	                            mov eax, 0xc	      1629	gui.c	FUNCTION_23	IF_5	IF_6	IF_7
0x40017a8	      0xe9f2feffff	                           jmp 0x400169f	      1629	gui.c	FUNCTION_23	IF_5	IF_6	IF_7
0x40017ad	      0xe800000000	                          call 0x40017b2	      1688	gui.c	FUNCTION_23
gui_send_mouse_event	WHILE,0:SWITCH,2:CALL,26:ELSE,9:DO,0:IF,32:FOR,0:functions,0	543
0x4004710	            0x4157	                                push r15	      3087	gui.c	FUNCTION_50
0x4004712	            0x4156	                                push r14	      3087	gui.c	FUNCTION_50
0x4004714	            0x4155	                                push r13	      3087	gui.c	FUNCTION_50
0x4004716	            0x4154	                                push r12	      3087	gui.c	FUNCTION_50
0x4004718	          0x4189f5	                           mov r13d, esi	      3087	gui.c	FUNCTION_50
0x400471b	              0x55	                                push rbp	      3087	gui.c	FUNCTION_50
0x400471c	              0x53	                                push rbx	      3087	gui.c	FUNCTION_50
0x400471d	          0x4189d4	                           mov r12d, edx	      3087	gui.c	FUNCTION_50
0x4004720	          0x4489c5	                            mov ebp, r8d	      3087	gui.c	FUNCTION_50
0x4004723	        0x4883ec38	                           sub rsp, 0x38	      3087	gui.c	FUNCTION_50
0x4004727	    0x64488b042528	                mov rax, qword fs:[0x28]	      3087	gui.c	FUNCTION_50
0x4004730	      0x4889442428	             mov qword [rsp + 0x28], rax	      3087	gui.c	FUNCTION_50
0x4004735	            0x31c0	                            xor eax, eax	      3087	gui.c	FUNCTION_50
0x4004737	    0x81ff00030000	                          cmp edi, 0x300	      3102	gui.c	FUNCTION_50	SWITCH_1
0x400473d	     0xf849d040000	                            je 0x4004be0	      3102	gui.c	FUNCTION_50	SWITCH_1
0x4004743	            0x89fb	                            mov ebx, edi	      3102	gui.c	FUNCTION_50	SWITCH_1
0x4004745	     0xf8e05030000	                           jle 0x4004a50	      3102	gui.c	FUNCTION_50	SWITCH_1
0x400474b	    0x81ff00050000	                          cmp edi, 0x500	      3102	gui.c	FUNCTION_50	SWITCH_1
0x4004751	     0xf8441040000	                            je 0x4004b98	      3102	gui.c	FUNCTION_50	SWITCH_1
0x4004757	    0x81ff00060000	                          cmp edi, 0x600	      3102	gui.c	FUNCTION_50	SWITCH_1
0x400475d	     0xf846d040000	                            je 0x4004bd0	      3102	gui.c	FUNCTION_50	SWITCH_1
0x4004763	    0x81ff00040000	                          cmp edi, 0x400	      3102	gui.c	FUNCTION_50	SWITCH_1
0x4004769	     0xf8439040000	                            je 0x4004ba8	      3102	gui.c	FUNCTION_50	SWITCH_1
0x400476f	    0x66833d000000	                cmp word [0x04004777], 1	      3160	gui.c	FUNCTION_50	IF_6
0x4004777	     0xf8403050000	                            je 0x4004c80	      3160	gui.c	FUNCTION_50	IF_6
0x400477d	        0x894c240c	              mov dword [rsp + 0xc], ecx	      3160	gui.c	FUNCTION_50	IF_6
0x4004781	      0xe800000000	                          call 0x4004786	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4004786	          0x83f850	                           cmp eax, 0x50	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4004789	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x400478d	     0xf84a5050000	                            je 0x4004d38	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4004793	     0xf8eb7040000	                           jle 0x4004c50	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4004799	      0x3d01010000	                          cmp eax, 0x101	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x400479e	     0xf847c040000	                            je 0x4004c20	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40047a4	     0xf8e96060000	                           jle 0x4004e40	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40047aa	      0x3d00030000	                          cmp eax, 0x300	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40047af	     0xf84d0050000	                            je 0x4004d85	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40047b5	     0xf8ebf050000	                           jle 0x4004d7a	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40047bb	      0x3d00100000	                         cmp eax, 0x1000	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40047c0	     0xf8553040000	                           jne 0x4004c19	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x40047c6	    0x41bf76000000	                          mov r15d, 0x76	      3175	gui.c	FUNCTION_50	SWITCH_2
0x40047cc	    0x8b0500000000	            mov eax, dword [0x040047d2] 	      3217	gui.c	FUNCTION_50	IF_9
0x40047d2	            0x89c2	                            mov edx, eax	      3217	gui.c	FUNCTION_50	IF_9
0x40047d4	          0x80e6fe	                            and dh, 0xfe	      3217	gui.c	FUNCTION_50	IF_9
0x40047d7	          0x83fa01	                              cmp edx, 1	      3217	gui.c	FUNCTION_50	IF_9
0x40047da	            0x7404	                            je 0x40047e0	      3217	gui.c	FUNCTION_50	IF_9
0x40047dc	            0xa810	                           test al, 0x10	      3217	gui.c	FUNCTION_50	IF_9
0x40047de	            0x7450	                            je 0x4004830	      3217	gui.c	FUNCTION_50	IF_9
0x40047e0	          0x4489e0	                           mov eax, r12d	      3219	gui.c	FUNCTION_50	IF_9
0x40047e3	    0x2b0500000000	             sub eax, dword [0x040047e9]	      3219	gui.c	FUNCTION_50	IF_9
0x40047e9	    0x488b35000000	            mov rsi, qword [0x040047f0] 	      3219	gui.c	FUNCTION_50	IF_9
0x40047f0	              0x99	                                     cdq	      3219	gui.c	FUNCTION_50	IF_9
0x40047f1	    0xf73d00000000	                 idiv dword [0x040047f7]	      3219	gui.c	FUNCTION_50	IF_9
0x40047f7	    0x488b15000000	            mov rdx, qword [0x040047fe] 	      3219	gui.c	FUNCTION_50	IF_9
0x40047fe	    0x8b929c000000	            mov edx, dword [rdx + 0x9c] 	      3219	gui.c	FUNCTION_50	IF_9
0x4004804	           0x3560c	              add edx, dword [rsi + 0xc]	      3219	gui.c	FUNCTION_50	IF_9
0x4004807	            0x39d0	                            cmp eax, edx	      3219	gui.c	FUNCTION_50	IF_9
0x4004809	            0x7c25	                            jl 0x4004830	      3219	gui.c	FUNCTION_50	IF_9
0x400480b	          0x83fb43	                           cmp ebx, 0x43	      3219	gui.c	FUNCTION_50	IF_9
0x400480e	            0x7420	                            je 0x4004830	      3219	gui.c	FUNCTION_50	IF_9
0x4004810	    0x8b3d00000000	            mov edi, dword [0x04004816] 	      3221	gui.c	FUNCTION_50	IF_9
0x4004816	            0x85ff	                           test edi, edi	      3221	gui.c	FUNCTION_50	IF_9
0x4004818	            0x7516	                           jne 0x4004830	      3221	gui.c	FUNCTION_50	IF_9
0x400481a	    0x8b3500000000	            mov esi, dword [0x04004820] 	      3225	gui.c	FUNCTION_50	IF_9
0x4004820	      0xb820000000	                           mov eax, 0x20	      3225	gui.c	FUNCTION_50	IF_9
0x4004825	            0x85f6	                           test esi, esi	      3225	gui.c	FUNCTION_50	IF_9
0x4004827	        0x440f44f8	                         cmove r15d, eax	      3225	gui.c	FUNCTION_50	IF_9
0x400482b	       0xf1f440000	                   nop dword [rax + rax]	      3225	gui.c	FUNCTION_50	IF_9
0x4004830	          0x4189ee	                           mov r14d, ebp	      3230	gui.c	FUNCTION_50	IF_10
0x4004833	    0x8b1500000000	            mov edx, dword [0x04004839] 	      3236	gui.c	FUNCTION_50	IF_11
0x4004839	      0xb878000000	                           mov eax, 0x78	      3231	gui.c	FUNCTION_50	IF_10
0x400483e	        0x4183e614	                          and r14d, 0x14	      3230	gui.c	FUNCTION_50	IF_10
0x4004842	        0x894c240c	              mov dword [rsp + 0xc], ecx	      3230	gui.c	FUNCTION_50	IF_10
0x4004846	        0x4183fe14	                          cmp r14d, 0x14	      3231	gui.c	FUNCTION_50	IF_10
0x400484a	        0x440f44f8	                         cmove r15d, eax	      3231	gui.c	FUNCTION_50	IF_10
0x400484e	            0x85d2	                           test edx, edx	      3236	gui.c	FUNCTION_50	IF_11
0x4004850	     0xf85da030000	                           jne 0x4004c30	      3236	gui.c	FUNCTION_50	IF_11
0x4004856	          0x4489ff	                           mov edi, r15d	      3246	gui.c	FUNCTION_50	IF_12	CALL_11
0x4004859	      0xe800000000	                          call 0x400485e	      3246	gui.c	FUNCTION_50	IF_12	CALL_11
0x400485e	            0x85c0	                           test eax, eax	      3246	gui.c	FUNCTION_50	IF_12	CALL_11
0x4004860	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      3246	gui.c	FUNCTION_50	IF_12	CALL_11
0x4004864	     0xf84a6040000	                            je 0x4004d10	      3246	gui.c	FUNCTION_50	IF_12	CALL_11
0x400486a	        0x4183ff63	                          cmp r15d, 0x63	      3246	gui.c	FUNCTION_50	IF_12	CALL_11
0x400486e	     0xf8544040000	                           jne 0x4004cb8	      3246	gui.c	FUNCTION_50	IF_12	CALL_11
0x4004874	    0x8b0500000000	            mov eax, dword [0x0400487a] 	      3249	gui.c	FUNCTION_50	IF_12	IF_13
0x400487a	            0x85c0	                           test eax, eax	      3249	gui.c	FUNCTION_50	IF_12	IF_13
0x400487c	            0x740d	                            je 0x400488b	      3249	gui.c	FUNCTION_50	IF_12	IF_13
0x400487e	    0xf60500000000	               test byte [0x04004885], 1	      3249	gui.c	FUNCTION_50	IF_12	IF_13
0x4004885	     0xf85ef010000	                           jne 0x4004a7a	      3249	gui.c	FUNCTION_50	IF_12	IF_13
0x400488b	        0x894c240c	              mov dword [rsp + 0xc], ecx	      3249	gui.c	FUNCTION_50	IF_12	IF_13
0x400488f	      0xe800000000	                          call 0x4004894	      3256	gui.c	FUNCTION_50	IF_12	IF_14	CALL_12
0x4004894	            0x85c0	                           test eax, eax	      3256	gui.c	FUNCTION_50	IF_12	IF_14	CALL_12
0x4004896	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      3256	gui.c	FUNCTION_50	IF_12	IF_14	CALL_12
0x400489a	     0xf8440040000	                            je 0x4004ce0	      3256	gui.c	FUNCTION_50	IF_12	IF_14	CALL_12
0x40048a0	            0x85db	                           test ebx, ebx	      3256	gui.c	FUNCTION_50	IF_12	IF_14	CALL_12
0x40048a2	     0xf8580050000	                           jne 0x4004e28	      3256	gui.c	FUNCTION_50	IF_12	IF_14	CALL_12
0x40048a8	        0x4183fe04	                             cmp r14d, 4	      3257	gui.c	FUNCTION_50	IF_12	IF_14
0x40048ac	     0xf84fd040000	                            je 0x4004daf	      3257	gui.c	FUNCTION_50	IF_12	IF_14
0x40048b2	    0x8b3d00000000	            mov edi, dword [0x040048b8] 	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x40048b8	          0x4489e0	                           mov eax, r12d	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x40048bb	          0x4531f6	                          xor r14d, r14d	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x40048be	            0x31db	                            xor ebx, ebx	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x40048c0	            0x29f8	                            sub eax, edi	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x40048c2	              0x99	                                     cdq	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x40048c3	    0xf73d00000000	                 idiv dword [0x040048c9]	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x40048c9	            0x89c6	                            mov esi, eax	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x40048cb	          0x4489e8	                           mov eax, r13d	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x40048ce	            0x29f8	                            sub eax, edi	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x40048d0	              0x99	                                     cdq	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x40048d1	    0xf73d00000000	                 idiv dword [0x040048d7]	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x40048d7	            0x89ca	                            mov edx, ecx	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x40048d9	            0x89c7	                            mov edi, eax	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x40048db	      0xe800000000	                          call 0x40048e0	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x40048e0	      0xc644240c00	                 mov byte [rsp + 0xc], 0	      3289	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18	CALL_20
0x40048e5	          0x4489ff	                           mov edi, r15d	      3296	gui.c	FUNCTION_50	IF_12	IF_19	IF_20	CALL_21
0x40048e8	      0xe800000000	                          call 0x40048ed	      3296	gui.c	FUNCTION_50	IF_12	IF_19	IF_20	CALL_21
0x40048ed	            0x85c0	                           test eax, eax	      3296	gui.c	FUNCTION_50	IF_12	IF_19	IF_20	CALL_21
0x40048ef	     0xf8485010000	                            je 0x4004a7a	      3296	gui.c	FUNCTION_50	IF_12	IF_19	IF_20	CALL_21
0x40048f5	      0x807c240c00	                 cmp byte [rsp + 0xc], 0	      3296	gui.c	FUNCTION_50	IF_12	IF_19	IF_20	CALL_21
0x40048fa	     0xf857a010000	                           jne 0x4004a7a	      3296	gui.c	FUNCTION_50	IF_12	IF_19	IF_20	CALL_21
0x4004900	        0x4183ff63	                          cmp r15d, 0x63	      3299	gui.c	FUNCTION_50	IF_12	IF_19	IF_21
0x4004904	      0xb800000000	                              mov eax, 0	      3299	gui.c	FUNCTION_50	IF_12	IF_19	IF_21
0x4004909	           0xf45d8	                         cmovne ebx, eax	      3299	gui.c	FUNCTION_50	IF_12	IF_19	IF_21
0x400490c	            0x31c9	                            xor ecx, ecx	      3299	gui.c	FUNCTION_50	IF_12	IF_19	IF_21
0x400490e	    0x66833d000000	                cmp word [0x04004916], 0	      3304	gui.c	FUNCTION_50	IF_22
0x4004916	            0x7409	                            je 0x4004921	      3304	gui.c	FUNCTION_50	IF_22
0x4004918	          0x4584f6	                         test r14b, r14b	      3304	gui.c	FUNCTION_50	IF_22
0x400491b	     0xf85a5030000	                           jne 0x4004cc6	      3304	gui.c	FUNCTION_50	IF_22
0x4004921	    0x448b35000000	           mov r14d, dword [0x04004928] 	      3309	gui.c	FUNCTION_50	IF_23
0x4004928	          0x4585f6	                         test r14d, r14d	      3309	gui.c	FUNCTION_50	IF_23
0x400492b	     0xf8549010000	                           jne 0x4004a7a	      3309	gui.c	FUNCTION_50	IF_23
0x4004931	          0x4489e8	                           mov eax, r13d	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x4004934	    0x2b0500000000	             sub eax, dword [0x0400493a]	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x400493a	        0x894c240c	              mov dword [rsp + 0xc], ecx	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x400493e	              0x99	                                     cdq	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x400493f	    0xf73d00000000	                 idiv dword [0x04004945]	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x4004945	            0x89c7	                            mov edi, eax	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x4004947	      0xe800000000	                          call 0x400494c	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x400494c	          0x4189c5	                           mov r13d, eax	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x400494f	          0x4489e0	                           mov eax, r12d	      3397	gui.c	ELSE_9	FUNCTION_51	CALL_4
0x4004952	    0x2b0500000000	             sub eax, dword [0x04004958]	      3397	gui.c	ELSE_9	FUNCTION_51	CALL_4
0x4004958	              0x99	                                     cdq	      3397	gui.c	ELSE_9	FUNCTION_51	CALL_4
0x4004959	    0xf73d00000000	                 idiv dword [0x0400495f]	      3397	gui.c	ELSE_9	FUNCTION_51	CALL_4
0x400495f	            0x89c7	                            mov edi, eax	      3397	gui.c	ELSE_9	FUNCTION_51	CALL_4
0x4004961	      0xe800000000	                          call 0x4004966	      3397	gui.c	ELSE_9	FUNCTION_51	CALL_4
0x4004966	          0x4489ef	                           mov edi, r13d	      3400	gui.c	ELSE_9	FUNCTION_51	CALL_5
0x4004969	            0x89c6	                            mov esi, eax	      3400	gui.c	ELSE_9	FUNCTION_51	CALL_5
0x400496b	          0x4189c7	                           mov r15d, eax	      3397	gui.c	ELSE_9	FUNCTION_51	CALL_4
0x400496e	      0xe800000000	                          call 0x4004973	      3400	gui.c	ELSE_9	FUNCTION_51	CALL_5
0x4004973	          0x83fb43	                           cmp ebx, 0x43	      3318	gui.c	FUNCTION_50	IF_24
0x4004976	          0x4189c5	                           mov r13d, eax	      3400	gui.c	ELSE_9	FUNCTION_51	CALL_5
0x4004979	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      3318	gui.c	FUNCTION_50	IF_24
0x400497d	     0xf84e1040000	                            je 0x4004e64	      3318	gui.c	FUNCTION_50	IF_24
0x4004983	        0x418d477f	                   lea eax, [r15 + 0x7f]	      3318	gui.c	FUNCTION_50	IF_24
0x4004987	          0x4585ff	                         test r15d, r15d	      3318	gui.c	FUNCTION_50	IF_24
0x400498a	    0x488b15000000	            mov rdx, qword [0x04004991] 	      3332	gui.c	FUNCTION_50	IF_27
0x4004991	        0x410f49c7	                        cmovns eax, r15d	      3332	gui.c	FUNCTION_50	IF_27
0x4004995	          0xc1f807	                              sar eax, 7	      3332	gui.c	FUNCTION_50	IF_27
0x4004998	        0x488b7a78	            mov rdi, qword [rdx + 0x78] 	      3332	gui.c	FUNCTION_50	IF_27
0x400499c	          0x83c021	                           add eax, 0x21	      3332	gui.c	FUNCTION_50	IF_27
0x400499f	    0x483b3d000000	            cmp rdi, qword [0x040049a6] 	      3332	gui.c	FUNCTION_50	IF_27
0x40049a6	     0xf8429050000	                            je 0x4004ed5	      3332	gui.c	FUNCTION_50	IF_27
0x40049ac	          0x4489f9	                           mov ecx, r15d	      3332	gui.c	FUNCTION_50	IF_27
0x40049af	          0xc1f91f	                           sar ecx, 0x1f	      3332	gui.c	FUNCTION_50	IF_27
0x40049b2	          0xc1e919	                           shr ecx, 0x19	      3332	gui.c	FUNCTION_50	IF_27
0x40049b5	        0x418d340f	                    lea esi, [r15 + rcx]	      3332	gui.c	FUNCTION_50	IF_27
0x40049b9	          0x83e67f	                           and esi, 0x7f	      3332	gui.c	FUNCTION_50	IF_27
0x40049bc	            0x29ce	                            sub esi, ecx	      3332	gui.c	FUNCTION_50	IF_27
0x40049be	          0x83c621	                           add esi, 0x21	      3332	gui.c	FUNCTION_50	IF_27
0x40049c1	          0x4585ff	                         test r15d, r15d	      3332	gui.c	FUNCTION_50	IF_27
0x40049c4	        0x450f49f7	                       cmovns r14d, r15d	      3332	gui.c	FUNCTION_50	IF_27
0x40049c8	            0x89d9	                            mov ecx, ebx	      3342	gui.c	FUNCTION_50	IF_28
0x40049ca	      0xc64424109b	            mov byte [rsp + 0x10], 0x9b 	      3339	gui.c	FUNCTION_50
0x40049cf	      0xc6442411fb	            mov byte [rsp + 0x11], 0xfb 	      3340	gui.c	FUNCTION_50
0x40049d4	          0x83e1bf	                     and ecx, 0xffffffbf	      3342	gui.c	FUNCTION_50	IF_28
0x40049d7	      0xc644241258	            mov byte [rsp + 0x12], 0x58 	      3341	gui.c	FUNCTION_50
0x40049dc	          0x83f903	                              cmp ecx, 3	      3342	gui.c	FUNCTION_50	IF_28
0x40049df	     0xf8580050000	                           jne 0x4004f65	      3342	gui.c	FUNCTION_50	IF_28
0x40049e5	        0x418d557f	                   lea edx, [r13 + 0x7f]	      3058	gui.c	FUNCTION_49
0x40049e9	             0x9dd	                             or ebp, ebx	      3369	gui.c	FUNCTION_50
0x40049eb	          0x4585ed	                         test r13d, r13d	      3058	gui.c	FUNCTION_49
0x40049ee	          0x4489e9	                           mov ecx, r13d	      3059	gui.c	FUNCTION_49
0x40049f1	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      3371	gui.c	FUNCTION_50	CALL_26
0x40049f6	      0x4088742417	              mov byte [rsp + 0x17], sil	      3061	gui.c	FUNCTION_49
0x40049fb	        0x410f49d5	                        cmovns edx, r13d	      3058	gui.c	FUNCTION_49
0x40049ff	          0xc1f91f	                           sar ecx, 0x1f	      3059	gui.c	FUNCTION_49
0x4004a02	      0xbe08000000	                              mov esi, 8	      3371	gui.c	FUNCTION_50	CALL_26
0x4004a07	          0xc1fa07	                              sar edx, 7	      3058	gui.c	FUNCTION_49
0x4004a0a	          0xc1e919	                           shr ecx, 0x19	      3059	gui.c	FUNCTION_49
0x4004a0d	      0x40886c2413	              mov byte [rsp + 0x13], bpl	      3369	gui.c	FUNCTION_50
0x4004a12	          0x83c221	                           add edx, 0x21	      3058	gui.c	FUNCTION_49
0x4004a15	        0x88442416	               mov byte [rsp + 0x16], al	      3060	gui.c	FUNCTION_49
0x4004a19	        0x88542414	               mov byte [rsp + 0x14], dl	      3058	gui.c	FUNCTION_49
0x4004a1d	      0x418d540d00	                    lea edx, [r13 + rcx]	      3059	gui.c	FUNCTION_49
0x4004a22	          0x83e27f	                           and edx, 0x7f	      3059	gui.c	FUNCTION_49
0x4004a25	            0x29ca	                            sub edx, ecx	      3059	gui.c	FUNCTION_49
0x4004a27	          0x83c221	                           add edx, 0x21	      3059	gui.c	FUNCTION_49
0x4004a2a	        0x88542415	               mov byte [rsp + 0x15], dl	      3059	gui.c	FUNCTION_49
0x4004a2e	      0xe800000000	                          call 0x4004a33	      3371	gui.c	FUNCTION_50	CALL_26
0x4004a33	    0x448935000000	           mov dword [0x04004a3a], r14d 	      3371	gui.c	FUNCTION_50	CALL_26
0x4004a3a	    0x44892d000000	           mov dword [0x04004a41], r13d 	      3377	gui.c	FUNCTION_50	ELSE_9
0x4004a41	    0xc70500000000	     mov dword [0x04004a4b], 0xffffffff 	      3384	gui.c	FUNCTION_50	ELSE_9
0x4004a4b	            0xeb2d	                           jmp 0x4004a7a	      3384	gui.c	FUNCTION_50	ELSE_9
0x4004a4d	           0xf1f00	                         nop dword [rax]	      3384	gui.c	FUNCTION_50	ELSE_9
0x4004a50	    0x81ff00010000	                          cmp edi, 0x100	      3102	gui.c	FUNCTION_50	SWITCH_1
0x4004a56	     0xf8494010000	                            je 0x4004bf0	      3102	gui.c	FUNCTION_50	SWITCH_1
0x4004a5c	    0x81ff00020000	                          cmp edi, 0x200	      3102	gui.c	FUNCTION_50	SWITCH_1
0x4004a62	      0xba4c000000	                           mov edx, 0x4c	      3115	gui.c	FUNCTION_50	SWITCH_1
0x4004a67	     0xf8502fdffff	                           jne 0x400476f	      3102	gui.c	FUNCTION_50	SWITCH_1
0x4004a6d	           0xf1f00	                         nop dword [rax]	      3102	gui.c	FUNCTION_50	SWITCH_1
0x4004a70	    0x8b0500000000	            mov eax, dword [0x04004a76] 	      3124	gui.c	FUNCTION_50	SWITCH_1	IF_1
0x4004a76	            0x85c0	                           test eax, eax	      3124	gui.c	FUNCTION_50	SWITCH_1	IF_1
0x4004a78	            0x7426	                            je 0x4004aa0	      3124	gui.c	FUNCTION_50	SWITCH_1	IF_1
0x4004a7a	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      3386	gui.c	FUNCTION_50	ELSE_9
0x4004a7f	    0x644833042528	                xor rax, qword fs:[0x28]	      3386	gui.c	FUNCTION_50	ELSE_9
0x4004a88	     0xf8576050000	                           jne 0x4005004	      3386	gui.c	FUNCTION_50	ELSE_9
0x4004a8e	        0x4883c438	                           add rsp, 0x38	      3386	gui.c	FUNCTION_50	ELSE_9
0x4004a92	              0x5b	                                 pop rbx	      3386	gui.c	FUNCTION_50	ELSE_9
0x4004a93	              0x5d	                                 pop rbp	      3386	gui.c	FUNCTION_50	ELSE_9
0x4004a94	            0x415c	                                 pop r12	      3386	gui.c	FUNCTION_50	ELSE_9
0x4004a96	            0x415d	                                 pop r13	      3386	gui.c	FUNCTION_50	ELSE_9
0x4004a98	            0x415e	                                 pop r14	      3386	gui.c	FUNCTION_50	ELSE_9
0x4004a9a	            0x415f	                                 pop r15	      3386	gui.c	FUNCTION_50	ELSE_9
0x4004a9c	              0xc3	                                     ret	      3386	gui.c	FUNCTION_50	ELSE_9
0x4004a9d	           0xf1f00	                         nop dword [rax]	      3386	gui.c	FUNCTION_50	ELSE_9
0x4004aa0	          0x4489e8	                           mov eax, r13d	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x4004aa3	    0x2b0500000000	             sub eax, dword [0x04004aa9]	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x4004aa9	        0x88542415	               mov byte [rsp + 0x15], dl	      3129	gui.c	FUNCTION_50	SWITCH_1
0x4004aad	      0xc64424139b	            mov byte [rsp + 0x13], 0x9b 	      3127	gui.c	FUNCTION_50	SWITCH_1
0x4004ab2	      0xc6442414fd	            mov byte [rsp + 0x14], 0xfd 	      3128	gui.c	FUNCTION_50	SWITCH_1
0x4004ab7	              0x99	                                     cdq	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x4004ab8	    0xf73d00000000	                 idiv dword [0x04004abe]	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x4004abe	            0x89c7	                            mov edi, eax	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x4004ac0	      0xe800000000	                          call 0x4004ac5	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x4004ac5	          0x4189c5	                           mov r13d, eax	      3396	gui.c	ELSE_9	FUNCTION_51	CALL_2
0x4004ac8	          0x4489e0	                           mov eax, r12d	      3397	gui.c	ELSE_9	FUNCTION_51	CALL_4
0x4004acb	    0x2b0500000000	             sub eax, dword [0x04004ad1]	      3397	gui.c	ELSE_9	FUNCTION_51	CALL_4
0x4004ad1	              0x99	                                     cdq	      3397	gui.c	ELSE_9	FUNCTION_51	CALL_4
0x4004ad2	    0xf73d00000000	                 idiv dword [0x04004ad8]	      3397	gui.c	ELSE_9	FUNCTION_51	CALL_4
0x4004ad8	            0x89c7	                            mov edi, eax	      3397	gui.c	ELSE_9	FUNCTION_51	CALL_4
0x4004ada	      0xe800000000	                          call 0x4004adf	      3397	gui.c	ELSE_9	FUNCTION_51	CALL_4
0x4004adf	          0x4489ef	                           mov edi, r13d	      3400	gui.c	ELSE_9	FUNCTION_51	CALL_5
0x4004ae2	            0x89c6	                            mov esi, eax	      3400	gui.c	ELSE_9	FUNCTION_51	CALL_5
0x4004ae4	            0x89c3	                            mov ebx, eax	      3397	gui.c	ELSE_9	FUNCTION_51	CALL_4
0x4004ae6	      0xe800000000	                          call 0x4004aeb	      3400	gui.c	ELSE_9	FUNCTION_51	CALL_5
0x4004aeb	          0x8d507f	                   lea edx, [rax + 0x7f]	      3134	gui.c	FUNCTION_50	SWITCH_1
0x4004aee	            0x85c0	                           test eax, eax	      3134	gui.c	FUNCTION_50	SWITCH_1
0x4004af0	           0xf49d0	                         cmovns edx, eax	      3134	gui.c	FUNCTION_50	SWITCH_1
0x4004af3	          0xc1fa07	                              sar edx, 7	      3134	gui.c	FUNCTION_50	SWITCH_1
0x4004af6	          0x83c221	                           add edx, 0x21	      3134	gui.c	FUNCTION_50	SWITCH_1
0x4004af9	        0x88542416	               mov byte [rsp + 0x16], dl	      3134	gui.c	FUNCTION_50	SWITCH_1
0x4004afd	              0x99	                                     cdq	      3135	gui.c	FUNCTION_50	SWITCH_1
0x4004afe	          0xc1ea19	                           shr edx, 0x19	      3135	gui.c	FUNCTION_50	SWITCH_1
0x4004b01	             0x1d0	                            add eax, edx	      3135	gui.c	FUNCTION_50	SWITCH_1
0x4004b03	          0x83e07f	                           and eax, 0x7f	      3135	gui.c	FUNCTION_50	SWITCH_1
0x4004b06	            0x29d0	                            sub eax, edx	      3135	gui.c	FUNCTION_50	SWITCH_1
0x4004b08	            0x89da	                            mov edx, ebx	      3137	gui.c	FUNCTION_50	SWITCH_1
0x4004b0a	          0x83c021	                           add eax, 0x21	      3135	gui.c	FUNCTION_50	SWITCH_1
0x4004b0d	            0x85db	                           test ebx, ebx	      3136	gui.c	FUNCTION_50	SWITCH_1
0x4004b0f	        0x88442417	               mov byte [rsp + 0x17], al	      3135	gui.c	FUNCTION_50	SWITCH_1
0x4004b13	          0x8d437f	                   lea eax, [rbx + 0x7f]	      3136	gui.c	FUNCTION_50	SWITCH_1
0x4004b16	           0xf49c3	                         cmovns eax, ebx	      3136	gui.c	FUNCTION_50	SWITCH_1
0x4004b19	          0xc1fa1f	                           sar edx, 0x1f	      3137	gui.c	FUNCTION_50	SWITCH_1
0x4004b1c	          0xc1f807	                              sar eax, 7	      3136	gui.c	FUNCTION_50	SWITCH_1
0x4004b1f	          0xc1ea19	                           shr edx, 0x19	      3137	gui.c	FUNCTION_50	SWITCH_1
0x4004b22	          0x83c021	                           add eax, 0x21	      3136	gui.c	FUNCTION_50	SWITCH_1
0x4004b25	        0x88442418	               mov byte [rsp + 0x18], al	      3136	gui.c	FUNCTION_50	SWITCH_1
0x4004b29	          0x8d0413	                    lea eax, [rbx + rdx]	      3137	gui.c	FUNCTION_50	SWITCH_1
0x4004b2c	          0x83e07f	                           and eax, 0x7f	      3137	gui.c	FUNCTION_50	SWITCH_1
0x4004b2f	            0x29d0	                            sub eax, edx	      3137	gui.c	FUNCTION_50	SWITCH_1
0x4004b31	          0x83c021	                           add eax, 0x21	      3137	gui.c	FUNCTION_50	SWITCH_1
0x4004b34	            0x85ed	                           test ebp, ebp	      3139	gui.c	FUNCTION_50	SWITCH_1	IF_2
0x4004b36	        0x88442419	               mov byte [rsp + 0x19], al	      3137	gui.c	FUNCTION_50	SWITCH_1
0x4004b3a	     0xf8478000000	                            je 0x4004bb8	      3139	gui.c	FUNCTION_50	SWITCH_1	IF_2
0x4004b40	        0x40f6c504	                             test bpl, 4	      3146	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_3
0x4004b44	      0xc64424109b	            mov byte [rsp + 0x10], 0x9b 	      3143	gui.c	FUNCTION_50	SWITCH_1	ELSE_1
0x4004b49	      0xc6442411fc	            mov byte [rsp + 0x11], 0xfc 	      3144	gui.c	FUNCTION_50	SWITCH_1	ELSE_1
0x4004b4e	     0xf85ac000000	                           jne 0x4004c00	      3146	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_3
0x4004b54	      0xc644241200	                mov byte [rsp + 0x12], 0	      3145	gui.c	FUNCTION_50	SWITCH_1	ELSE_1
0x4004b59	      0xb808000000	                              mov eax, 8	      3145	gui.c	FUNCTION_50	SWITCH_1	ELSE_1
0x4004b5e	      0xba0c000000	                            mov edx, 0xc	      3145	gui.c	FUNCTION_50	SWITCH_1	ELSE_1
0x4004b63	      0xb904000000	                              mov ecx, 4	      3145	gui.c	FUNCTION_50	SWITCH_1	ELSE_1
0x4004b68	        0x40f6c510	                          test bpl, 0x10	      3148	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_4
0x4004b6c	            0x7406	                            je 0x4004b74	      3148	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_4
0x4004b6e	        0x884c2412	               mov byte [rsp + 0x12], cl	      3149	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_4
0x4004b72	            0x89d0	                            mov eax, edx	      3149	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_4
0x4004b74	          0x83e508	                              and ebp, 8	      3150	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_5
0x4004b77	            0x7404	                            je 0x4004b7d	      3150	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_5
0x4004b79	        0x88442412	               mov byte [rsp + 0x12], al	      3151	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_5
0x4004b7d	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      3152	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	CALL_3
0x4004b82	      0xbe0a000000	                            mov esi, 0xa	      3152	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	CALL_3
0x4004b87	      0xe800000000	                          call 0x4004b8c	      3152	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	CALL_3
0x4004b8c	      0xe9e9feffff	                           jmp 0x4004a7a	      3152	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	CALL_3
0x4004b91	     0xf1f80000000	                         nop dword [rax]	      3152	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	CALL_3
0x4004b98	      0xba4d000000	                           mov edx, 0x4d	      3118	gui.c	FUNCTION_50	SWITCH_1
0x4004b9d	      0xe9cefeffff	                           jmp 0x4004a70	      3118	gui.c	FUNCTION_50	SWITCH_1
0x4004ba2	    0x660f1f440000	                    nop word [rax + rax]	      3118	gui.c	FUNCTION_50	SWITCH_1
0x4004ba8	      0xba5c000000	                           mov edx, 0x5c	      3102	gui.c	FUNCTION_50	SWITCH_1
0x4004bad	      0xe9befeffff	                           jmp 0x4004a70	      3102	gui.c	FUNCTION_50	SWITCH_1
0x4004bb2	    0x660f1f440000	                    nop word [rax + rax]	      3102	gui.c	FUNCTION_50	SWITCH_1
0x4004bb8	      0x488d7c2413	                   lea rdi, [rsp + 0x13]	      3140	gui.c	FUNCTION_50	SWITCH_1	CALL_2
0x4004bbd	      0xbe07000000	                              mov esi, 7	      3140	gui.c	FUNCTION_50	SWITCH_1	CALL_2
0x4004bc2	      0xe800000000	                          call 0x4004bc7	      3140	gui.c	FUNCTION_50	SWITCH_1	CALL_2
0x4004bc7	      0xe9aefeffff	                           jmp 0x4004a7a	      3140	gui.c	FUNCTION_50	SWITCH_1	CALL_2
0x4004bcc	         0xf1f4000	                         nop dword [rax]	      3140	gui.c	FUNCTION_50	SWITCH_1	CALL_2
0x4004bd0	      0xba4e000000	                           mov edx, 0x4e	      3140	gui.c	FUNCTION_50	SWITCH_1	CALL_2
0x4004bd5	      0xe996feffff	                           jmp 0x4004a70	      3140	gui.c	FUNCTION_50	SWITCH_1	CALL_2
0x4004bda	    0x660f1f440000	                    nop word [rax + rax]	      3140	gui.c	FUNCTION_50	SWITCH_1	CALL_2
0x4004be0	      0xba59000000	                           mov edx, 0x59	      3102	gui.c	FUNCTION_50	SWITCH_1
0x4004be5	      0xe986feffff	                           jmp 0x4004a70	      3102	gui.c	FUNCTION_50	SWITCH_1
0x4004bea	    0x660f1f440000	                    nop word [rax + rax]	      3102	gui.c	FUNCTION_50	SWITCH_1
0x4004bf0	      0xba4b000000	                           mov edx, 0x4b	      3112	gui.c	FUNCTION_50	SWITCH_1
0x4004bf5	      0xe976feffff	                           jmp 0x4004a70	      3112	gui.c	FUNCTION_50	SWITCH_1
0x4004bfa	    0x660f1f440000	                    nop word [rax + rax]	      3112	gui.c	FUNCTION_50	SWITCH_1
0x4004c00	      0xc644241202	                mov byte [rsp + 0x12], 2	      3147	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_3
0x4004c05	      0xb80a000000	                            mov eax, 0xa	      3147	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_3
0x4004c0a	      0xba0e000000	                            mov edx, 0xe	      3147	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_3
0x4004c0f	      0xb906000000	                              mov ecx, 6	      3147	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_3
0x4004c14	      0xe94fffffff	                           jmp 0x4004b68	      3147	gui.c	FUNCTION_50	SWITCH_1	ELSE_1	IF_3
0x4004c19	      0x3d00200000	                         cmp eax, 0x2000	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4004c1e	            0x7552	                           jne 0x4004c72	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4004c20	    0x41bf6e000000	                          mov r15d, 0x6e	      3174	gui.c	FUNCTION_50	SWITCH_2
0x4004c26	      0xe9a1fbffff	                           jmp 0x40047cc	      3174	gui.c	FUNCTION_50	SWITCH_2
0x4004c2b	       0xf1f440000	                   nop dword [rax + rax]	      3174	gui.c	FUNCTION_50	SWITCH_2
0x4004c30	      0xbf20000000	                           mov edi, 0x20	      3246	gui.c	FUNCTION_50	IF_12	CALL_11
0x4004c35	      0xe800000000	                          call 0x4004c3a	      3246	gui.c	FUNCTION_50	IF_12	CALL_11
0x4004c3a	            0x85c0	                           test eax, eax	      3246	gui.c	FUNCTION_50	IF_12	CALL_11
0x4004c3c	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      3246	gui.c	FUNCTION_50	IF_12	CALL_11
0x4004c40	            0x7576	                           jne 0x4004cb8	      3246	gui.c	FUNCTION_50	IF_12	CALL_11
0x4004c42	    0x41bf20000000	                          mov r15d, 0x20	      3237	gui.c	FUNCTION_50	IF_11
0x4004c48	      0xe927fcffff	                           jmp 0x4004874	      3237	gui.c	FUNCTION_50	IF_11
0x4004c4d	           0xf1f00	                         nop dword [rax]	      3237	gui.c	FUNCTION_50	IF_11
0x4004c50	          0x83f808	                              cmp eax, 8	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4004c53	     0xf84ef000000	                            je 0x4004d48	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4004c59	     0xf8fc1000000	                            jg 0x4004d20	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4004c5f	          0x83f802	                              cmp eax, 2	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4004c62	     0xf845efbffff	                            je 0x40047c6	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4004c68	          0x83f804	                              cmp eax, 4	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4004c6b	            0x74b3	                            je 0x4004c20	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4004c6d	          0x83f801	                              cmp eax, 1	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4004c70	            0x74ae	                            je 0x4004c20	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4004c72	    0x41bf20000000	                          mov r15d, 0x20	      3208	gui.c	FUNCTION_50	SWITCH_2
0x4004c78	      0xe94ffbffff	                           jmp 0x40047cc	      3209	gui.c	FUNCTION_50	SWITCH_2
0x4004c7d	           0xf1f00	                         nop dword [rax]	      3209	gui.c	FUNCTION_50	SWITCH_2
0x4004c80	    0x8b3500000000	            mov esi, dword [0x04004c86] 	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x4004c86	          0x4489e0	                           mov eax, r12d	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x4004c89	            0x89df	                            mov edi, ebx	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x4004c8b	            0x29f0	                            sub eax, esi	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x4004c8d	              0x99	                                     cdq	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x4004c8e	    0xf73d00000000	                 idiv dword [0x04004c94]	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x4004c94	          0x4189c4	                           mov r12d, eax	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x4004c97	          0x4489e8	                           mov eax, r13d	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x4004c9a	            0x29f0	                            sub eax, esi	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x4004c9c	              0x99	                                     cdq	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x4004c9d	    0xf73d00000000	                 idiv dword [0x04004ca3]	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x4004ca3	          0x4489e2	                           mov edx, r12d	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x4004ca6	            0x89c6	                            mov esi, eax	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x4004ca8	      0xe800000000	                          call 0x4004cad	      3162	gui.c	FUNCTION_50	IF_6	CALL_6
0x4004cad	      0xe9c8fdffff	                           jmp 0x4004a7a	      3163	gui.c	FUNCTION_50	IF_6
0x4004cb2	    0x660f1f440000	                    nop word [rax + rax]	      3163	gui.c	FUNCTION_50	IF_6
0x4004cb8	    0x66833d000000	                cmp word [0x04004cc0], 0	      3304	gui.c	FUNCTION_50	IF_22
0x4004cc0	     0xf845bfcffff	                            je 0x4004921	      3304	gui.c	FUNCTION_50	IF_22
0x4004cc6	      0xbf00000000	                              mov edi, 0	      3305	gui.c	FUNCTION_50	CALL_22
0x4004ccb	        0x894c240c	              mov dword [rsp + 0xc], ecx	      3305	gui.c	FUNCTION_50	CALL_22
0x4004ccf	      0xe800000000	                          call 0x4004cd4	      3305	gui.c	FUNCTION_50	CALL_22
0x4004cd4	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      3305	gui.c	FUNCTION_50	CALL_22
0x4004cd8	      0xe944fcffff	                           jmp 0x4004921	      3305	gui.c	FUNCTION_50	CALL_22
0x4004cdd	           0xf1f00	                         nop dword [rax]	      3305	gui.c	FUNCTION_50	CALL_22
0x4004ce0	          0x83fb02	                              cmp ebx, 2	      3266	gui.c	FUNCTION_50	IF_12	IF_15
0x4004ce3	     0xf84c9000000	                            je 0x4004db2	      3266	gui.c	FUNCTION_50	IF_12	IF_15
0x4004ce9	            0x85db	                           test ebx, ebx	      3287	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18
0x4004ceb	     0xf84c1fbffff	                            je 0x40048b2	      3287	gui.c	FUNCTION_50	IF_12	ELSE_5	IF_18
0x4004cf1	          0x83fb01	                              cmp ebx, 1	      3294	gui.c	FUNCTION_50	IF_12	IF_19
0x4004cf4	    0x41be01000000	                             mov r14d, 1	      3294	gui.c	FUNCTION_50	IF_12	IF_19
0x4004cfa	     0xf840cfcffff	                            je 0x400490c	      3294	gui.c	FUNCTION_50	IF_12	IF_19
0x4004d00	          0x83fb03	                              cmp ebx, 3	      3294	gui.c	FUNCTION_50	IF_12	IF_19
0x4004d03	       0xf9444240c	                   sete byte [rsp + 0xc]	      3294	gui.c	FUNCTION_50	IF_12	IF_19
0x4004d08	      0xe9d8fbffff	                           jmp 0x40048e5	      3294	gui.c	FUNCTION_50	IF_12	IF_19
0x4004d0d	           0xf1f00	                         nop dword [rax]	      3294	gui.c	FUNCTION_50	IF_12	IF_19
0x4004d10	        0x4183ff78	                          cmp r15d, 0x78	      3249	gui.c	FUNCTION_50	IF_12	IF_13
0x4004d14	     0xf855afbffff	                           jne 0x4004874	      3249	gui.c	FUNCTION_50	IF_12	IF_13
0x4004d1a	      0xe96cfbffff	                           jmp 0x400488b	      3249	gui.c	FUNCTION_50	IF_12	IF_13
0x4004d1f	              0x90	                                     nop	      3249	gui.c	FUNCTION_50	IF_12	IF_13
0x4004d20	          0x83f828	                           cmp eax, 0x28	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4004d23	            0x7423	                            je 0x4004d48	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4004d25	          0x83f830	                           cmp eax, 0x30	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4004d28	            0x740e	                            je 0x4004d38	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4004d2a	          0x83f810	                           cmp eax, 0x10	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4004d2d	     0xf853fffffff	                           jne 0x4004c72	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4004d33	       0xf1f440000	                   nop dword [rax + rax]	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4004d38	    0x41bf69000000	                          mov r15d, 0x69	      3184	gui.c	FUNCTION_50	SWITCH_2
0x4004d3e	      0xe989faffff	                           jmp 0x40047cc	      3184	gui.c	FUNCTION_50	SWITCH_2
0x4004d43	       0xf1f440000	                   nop dword [rax + rax]	      3184	gui.c	FUNCTION_50	SWITCH_2
0x4004d48	          0x4489e0	                           mov eax, r12d	      3201	gui.c	FUNCTION_50	SWITCH_2	IF_8	CALL_9
0x4004d4b	    0x2b0500000000	             sub eax, dword [0x04004d51]	      3201	gui.c	FUNCTION_50	SWITCH_2	IF_8	CALL_9
0x4004d51	              0x99	                                     cdq	      3201	gui.c	FUNCTION_50	SWITCH_2	IF_8	CALL_9
0x4004d52	    0xf73d00000000	                 idiv dword [0x04004d58]	      3201	gui.c	FUNCTION_50	SWITCH_2	IF_8	CALL_9
0x4004d58	    0x3b0500000000	            cmp eax, dword [0x04004d5e] 	      3201	gui.c	FUNCTION_50	SWITCH_2	IF_8	CALL_9
0x4004d5e	            0x7d0f	                           jge 0x4004d6f	      3201	gui.c	FUNCTION_50	SWITCH_2	IF_8	CALL_9
0x4004d60	          0x83fb01	                              cmp ebx, 1	      3201	gui.c	FUNCTION_50	SWITCH_2	IF_8	CALL_9
0x4004d63	    0x41bf20000000	                          mov r15d, 0x20	      3202	gui.c	FUNCTION_50	SWITCH_2	IF_8
0x4004d69	     0xf855dfaffff	                           jne 0x40047cc	      3201	gui.c	FUNCTION_50	SWITCH_2	IF_8	CALL_9
0x4004d6f	    0x41bf63000000	                          mov r15d, 0x63	      3204	gui.c	FUNCTION_50	SWITCH_2	ELSE_3
0x4004d75	      0xe952faffff	                           jmp 0x40047cc	      3204	gui.c	FUNCTION_50	SWITCH_2	ELSE_3
0x4004d7a	      0x3d01020000	                          cmp eax, 0x201	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4004d7f	     0xf85edfeffff	                           jne 0x4004c72	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4004d85	          0x4489e0	                           mov eax, r12d	      3189	gui.c	FUNCTION_50	SWITCH_2	IF_7	CALL_8
0x4004d88	    0x2b0500000000	             sub eax, dword [0x04004d8e]	      3189	gui.c	FUNCTION_50	SWITCH_2	IF_7	CALL_8
0x4004d8e	          0x4531ff	                          xor r15d, r15d	      3190	gui.c	FUNCTION_50	SWITCH_2	IF_7
0x4004d91	              0x99	                                     cdq	      3189	gui.c	FUNCTION_50	SWITCH_2	IF_7	CALL_8
0x4004d92	    0xf73d00000000	                 idiv dword [0x04004d98]	      3189	gui.c	FUNCTION_50	SWITCH_2	IF_7	CALL_8
0x4004d98	    0x3b0500000000	            cmp eax, dword [0x04004d9e] 	      3190	gui.c	FUNCTION_50	SWITCH_2	IF_7
0x4004d9e	        0x410f9cc7	                               setl r15b	      3190	gui.c	FUNCTION_50	SWITCH_2	IF_7
0x4004da2	    0x468d3cbd6e00	                lea r15d, [r15*4 + 0x6e]	      3190	gui.c	FUNCTION_50	SWITCH_2	IF_7
0x4004daa	      0xe91dfaffff	                           jmp 0x40047cc	      3190	gui.c	FUNCTION_50	SWITCH_2	IF_7
0x4004daf	          0x83e5fb	                     and ebp, 0xfffffffb	      3260	gui.c	FUNCTION_50	IF_12	IF_14
0x4004db2	    0x66833d000000	                cmp word [0x04004dba], 0	      3268	gui.c	FUNCTION_50	IF_12	IF_15	IF_16
0x4004dba	            0x7528	                           jne 0x4004de4	      3268	gui.c	FUNCTION_50	IF_12	IF_15	IF_16
0x4004dbc	    0xf60500000000	               test byte [0x04004dc3], 8	      3270	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	IF_17
0x4004dc3	     0xf84b4010000	                            je 0x4004f7d	      3270	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	IF_17
0x4004dc9	    0x8b3d00000000	            mov edi, dword [0x04004dcf] 	      3272	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	IF_17
0x4004dcf	    0x8b3500000000	            mov esi, dword [0x04004dd5] 	      3273	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	IF_17
0x4004dd5	            0x31d2	                            xor edx, edx	      3280	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	CALL_14
0x4004dd7	        0x894c240c	              mov dword [rsp + 0xc], ecx	      3280	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	CALL_14
0x4004ddb	      0xe800000000	                          call 0x4004de0	      3280	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	CALL_14
0x4004de0	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      3280	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	CALL_14
0x4004de4	    0x8b3d00000000	            mov edi, dword [0x04004dea] 	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x4004dea	          0x4489e0	                           mov eax, r12d	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x4004ded	          0x4531f6	                          xor r14d, r14d	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x4004df0	      0xbb02000000	                              mov ebx, 2	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x4004df5	            0x29f8	                            sub eax, edi	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x4004df7	              0x99	                                     cdq	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x4004df8	    0xf73d00000000	                 idiv dword [0x04004dfe]	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x4004dfe	            0x89c6	                            mov esi, eax	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x4004e00	          0x4489e8	                           mov eax, r13d	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x4004e03	            0x29f8	                            sub eax, edi	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x4004e05	      0xbf02000000	                              mov edi, 2	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x4004e0a	              0x99	                                     cdq	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x4004e0b	    0xf73d00000000	                 idiv dword [0x04004e11]	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x4004e11	            0x89f2	                            mov edx, esi	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x4004e13	            0x89c6	                            mov esi, eax	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x4004e15	      0xe800000000	                          call 0x4004e1a	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x4004e1a	      0xc644240c00	                 mov byte [rsp + 0xc], 0	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x4004e1f	      0xe9c1faffff	                           jmp 0x40048e5	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x4004e24	         0xf1f4000	                         nop dword [rax]	      3282	gui.c	FUNCTION_50	IF_12	IF_15	CALL_17
0x4004e28	          0x83fb02	                              cmp ebx, 2	      3266	gui.c	FUNCTION_50	IF_12	IF_15
0x4004e2b	     0xf85c0feffff	                           jne 0x4004cf1	      3266	gui.c	FUNCTION_50	IF_12	IF_15
0x4004e31	      0xe97cffffff	                           jmp 0x4004db2	      3266	gui.c	FUNCTION_50	IF_12	IF_15
0x4004e36	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3266	gui.c	FUNCTION_50	IF_12	IF_15
0x4004e40	      0x3dd0000000	                           cmp eax, 0xd0	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4004e45	     0xf84edfeffff	                            je 0x4004d38	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4004e4b	      0x3df0000000	                           cmp eax, 0xf0	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4004e50	     0xf84e2feffff	                            je 0x4004d38	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4004e56	          0x83f870	                           cmp eax, 0x70	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4004e59	     0xf8513feffff	                           jne 0x4004c72	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4004e5f	      0xe9d4feffff	                           jmp 0x4004d38	      3167	gui.c	FUNCTION_50	SWITCH_2	CALL_7
0x4004e64	    0x44393d000000	           cmp dword [0x04004e6b], r15d 	      3320	gui.c	FUNCTION_50	IF_24	IF_25
0x4004e6b	     0xf8430010000	                            je 0x4004fa1	      3320	gui.c	FUNCTION_50	IF_24	IF_25
0x4004e71	          0x4585e4	                         test r12d, r12d	      3323	gui.c	FUNCTION_50	IF_24	IF_26
0x4004e74	     0xf8838010000	                            js 0x4004fb2	      3323	gui.c	FUNCTION_50	IF_24	IF_26
0x4004e7a	        0x418d477f	                   lea eax, [r15 + 0x7f]	      3323	gui.c	FUNCTION_50	IF_24	IF_26
0x4004e7e	          0x4585ff	                         test r15d, r15d	      3323	gui.c	FUNCTION_50	IF_24	IF_26
0x4004e81	          0x4489fa	                           mov edx, r15d	      3323	gui.c	FUNCTION_50	IF_24	IF_26
0x4004e84	    0x41be00000000	                             mov r14d, 0	      3323	gui.c	FUNCTION_50	IF_24	IF_26
0x4004e8a	        0x410f49c7	                        cmovns eax, r15d	      3323	gui.c	FUNCTION_50	IF_24	IF_26
0x4004e8e	          0xc1fa1f	                           sar edx, 0x1f	      3323	gui.c	FUNCTION_50	IF_24	IF_26
0x4004e91	          0xc1ea19	                           shr edx, 0x19	      3323	gui.c	FUNCTION_50	IF_24	IF_26
0x4004e94	          0xc1f807	                              sar eax, 7	      3323	gui.c	FUNCTION_50	IF_24	IF_26
0x4004e97	        0x418d3417	                    lea esi, [r15 + rdx]	      3323	gui.c	FUNCTION_50	IF_24	IF_26
0x4004e9b	          0x83c021	                           add eax, 0x21	      3323	gui.c	FUNCTION_50	IF_24	IF_26
0x4004e9e	          0x83e67f	                           and esi, 0x7f	      3323	gui.c	FUNCTION_50	IF_24	IF_26
0x4004ea1	            0x29d6	                            sub esi, edx	      3323	gui.c	FUNCTION_50	IF_24	IF_26
0x4004ea3	          0x83c621	                           add esi, 0x21	      3323	gui.c	FUNCTION_50	IF_24	IF_26
0x4004ea6	          0x4585ff	                         test r15d, r15d	      3323	gui.c	FUNCTION_50	IF_24	IF_26
0x4004ea9	        0x450f49f7	                       cmovns r14d, r15d	      3323	gui.c	FUNCTION_50	IF_24	IF_26
0x4004ead	    0x488b15000000	            mov rdx, qword [0x04004eb4] 	      3332	gui.c	FUNCTION_50	IF_27
0x4004eb4	    0x488b3d000000	            mov rdi, qword [0x04004ebb] 	      3332	gui.c	FUNCTION_50	IF_27
0x4004ebb	        0x48397a78	            cmp qword [rdx + 0x78], rdi 	      3332	gui.c	FUNCTION_50	IF_27
0x4004ebf	            0x7433	                            je 0x4004ef4	      3332	gui.c	FUNCTION_50	IF_27
0x4004ec1	      0xc64424109b	            mov byte [rsp + 0x10], 0x9b 	      3339	gui.c	FUNCTION_50
0x4004ec6	      0xc6442411fb	            mov byte [rsp + 0x11], 0xfb 	      3340	gui.c	FUNCTION_50
0x4004ecb	      0xc644241258	            mov byte [rsp + 0x12], 0x58 	      3341	gui.c	FUNCTION_50
0x4004ed0	      0xe910fbffff	                           jmp 0x40049e5	      3341	gui.c	FUNCTION_50
0x4004ed5	          0x4589f8	                           mov r8d, r15d	      3341	gui.c	FUNCTION_50
0x4004ed8	        0x41c1f81f	                           sar r8d, 0x1f	      3341	gui.c	FUNCTION_50
0x4004edc	        0x41c1e819	                           shr r8d, 0x19	      3341	gui.c	FUNCTION_50
0x4004ee0	        0x438d3407	                     lea esi, [r15 + r8]	      3341	gui.c	FUNCTION_50
0x4004ee4	          0x83e67f	                           and esi, 0x7f	      3341	gui.c	FUNCTION_50
0x4004ee7	          0x4429c6	                            sub esi, r8d	      3341	gui.c	FUNCTION_50
0x4004eea	          0x83c621	                           add esi, 0x21	      3341	gui.c	FUNCTION_50
0x4004eed	          0x4585ff	                         test r15d, r15d	      3341	gui.c	FUNCTION_50
0x4004ef0	        0x450f49f7	                       cmovns r14d, r15d	      3341	gui.c	FUNCTION_50
0x4004ef4	    0x448b82840000	            mov r8d, dword [rdx + 0x84] 	      3334	gui.c	FUNCTION_50	IF_27
0x4004efb	    0x443b05000000	            cmp r8d, dword [0x04004f02] 	      3334	gui.c	FUNCTION_50	IF_27
0x4004f02	     0xf85c0faffff	                           jne 0x40049c8	      3334	gui.c	FUNCTION_50	IF_27
0x4004f08	          0x4189d9	                            mov r9d, ebx	      3342	gui.c	FUNCTION_50	IF_28
0x4004f0b	      0xc64424109b	            mov byte [rsp + 0x10], 0x9b 	      3339	gui.c	FUNCTION_50
0x4004f10	      0xc6442411fb	            mov byte [rsp + 0x11], 0xfb 	      3340	gui.c	FUNCTION_50
0x4004f15	        0x4183e1bf	                     and r9d, 0xffffffbf	      3342	gui.c	FUNCTION_50	IF_28
0x4004f19	      0xc644241258	            mov byte [rsp + 0x12], 0x58 	      3341	gui.c	FUNCTION_50
0x4004f1e	        0x4183f903	                              cmp r9d, 3	      3342	gui.c	FUNCTION_50	IF_28
0x4004f22	     0xf84bdfaffff	                            je 0x40049e5	      3342	gui.c	FUNCTION_50	IF_28
0x4004f28	            0x85c9	                           test ecx, ecx	      3344	gui.c	FUNCTION_50	IF_28	IF_29
0x4004f2a	            0x7439	                            je 0x4004f65	      3344	gui.c	FUNCTION_50	IF_28	IF_29
0x4004f2c	    0x391d00000000	            cmp dword [0x04004f32], ebx 	      3350	gui.c	FUNCTION_50	IF_28	IF_29	IF_30
0x4004f32	     0xf848f000000	                            je 0x4004fc7	      3350	gui.c	FUNCTION_50	IF_28	IF_29	IF_30
0x4004f38	    0xc70500000000	               mov dword [0x04004f42], 1	      3353	gui.c	FUNCTION_50	IF_28	IF_29	ELSE_6	IF_31
0x4004f42	      0xba20000000	                           mov edx, 0x20	      3353	gui.c	FUNCTION_50	IF_28	IF_29	ELSE_6	IF_31
0x4004f47	    0x891d00000000	            mov dword [0x04004f4d], ebx 	      3357	gui.c	FUNCTION_50	IF_28
0x4004f4d	          0x83e33f	                           and ebx, 0x3f	      3364	gui.c	FUNCTION_50	IF_28	CALL_24
0x4004f50	    0x48893d000000	            mov qword [0x04004f57], rdi 	      3358	gui.c	FUNCTION_50	IF_28
0x4004f57	    0x448905000000	            mov dword [0x04004f5e], r8d 	      3360	gui.c	FUNCTION_50	IF_28
0x4004f5e	             0x9d3	                             or ebx, edx	      3364	gui.c	FUNCTION_50	IF_28	CALL_24
0x4004f60	      0xe980faffff	                           jmp 0x40049e5	      3364	gui.c	FUNCTION_50	IF_28	CALL_24
0x4004f65	    0x448b82840000	            mov r8d, dword [rdx + 0x84] 	      3364	gui.c	FUNCTION_50	IF_28	CALL_24
0x4004f6c	    0xc70500000000	               mov dword [0x04004f76], 1	      3356	gui.c	FUNCTION_50	IF_28	ELSE_7
0x4004f76	      0xba20000000	                           mov edx, 0x20	      3356	gui.c	FUNCTION_50	IF_28	ELSE_7
0x4004f7b	            0xebca	                           jmp 0x4004f47	      3356	gui.c	FUNCTION_50	IF_28	ELSE_7
0x4004f7d	    0x488b05000000	            mov rax, qword [0x04004f84] 	      3277	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	ELSE_4
0x4004f84	    0x8bb0a8010000	           mov esi, dword [rax + 0x1a8] 	      3278	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	ELSE_4	CALL_13
0x4004f8a	     0x3b09c000000	             add esi, dword [rax + 0x9c]	      3278	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	ELSE_4	CALL_13
0x4004f90	    0x8bb8e0000000	            mov edi, dword [rax + 0xe0] 	      3277	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	ELSE_4
0x4004f96	     0x3b0dc000000	             add esi, dword [rax + 0xdc]	      3278	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	ELSE_4	CALL_13
0x4004f9c	      0xe934feffff	                           jmp 0x4004dd5	      3278	gui.c	FUNCTION_50	IF_12	IF_15	IF_16	ELSE_4	CALL_13
0x4004fa1	    0x390500000000	            cmp dword [0x04004fa7], eax 	      3320	gui.c	FUNCTION_50	IF_24	IF_25
0x4004fa7	     0xf85c4feffff	                           jne 0x4004e71	      3320	gui.c	FUNCTION_50	IF_24	IF_25
0x4004fad	      0xe9c8faffff	                           jmp 0x4004a7a	      3320	gui.c	FUNCTION_50	IF_24	IF_25
0x4004fb2	      0xbe20000000	                           mov esi, 0x20	      3320	gui.c	FUNCTION_50	IF_24	IF_25
0x4004fb7	      0xb821000000	                           mov eax, 0x21	      3320	gui.c	FUNCTION_50	IF_24	IF_25
0x4004fbc	    0x41bfffffffff	                    mov r15d, 0xffffffff	      3324	gui.c	FUNCTION_50	IF_24	IF_26
0x4004fc2	      0xe9e6feffff	                           jmp 0x4004ead	      3324	gui.c	FUNCTION_50	IF_24	IF_26
0x4004fc7	    0x44393d000000	           cmp dword [0x04004fce], r15d 	      3350	gui.c	FUNCTION_50	IF_28	IF_29	IF_30
0x4004fce	     0xf8564ffffff	                           jne 0x4004f38	      3350	gui.c	FUNCTION_50	IF_28	IF_29	IF_30
0x4004fd4	    0x44392d000000	           cmp dword [0x04004fdb], r13d 	      3350	gui.c	FUNCTION_50	IF_28	IF_29	IF_30
0x4004fdb	     0xf8557ffffff	                           jne 0x4004f38	      3350	gui.c	FUNCTION_50	IF_28	IF_29	IF_30
0x4004fe1	    0x8b1500000000	            mov edx, dword [0x04004fe7] 	      3352	gui.c	FUNCTION_50	IF_28	IF_29	ELSE_6	IF_31
0x4004fe7	          0x8d4a01	                      lea ecx, [rdx + 1]	      3352	gui.c	FUNCTION_50	IF_28	IF_29	ELSE_6	IF_31
0x4004fea	          0x83f904	                              cmp ecx, 4	      3352	gui.c	FUNCTION_50	IF_28	IF_29	ELSE_6	IF_31
0x4004fed	    0x890d00000000	            mov dword [0x04004ff3], ecx 	      3352	gui.c	FUNCTION_50	IF_28	IF_29	ELSE_6	IF_31
0x4004ff3	     0xf8f3fffffff	                            jg 0x4004f38	      3352	gui.c	FUNCTION_50	IF_28	IF_29	ELSE_6	IF_31
0x4004ff9	          0xc1e206	                              shl edx, 6	      3352	gui.c	FUNCTION_50	IF_28	IF_29	ELSE_6	IF_31
0x4004ffc	          0x83ca20	                            or edx, 0x20	      3352	gui.c	FUNCTION_50	IF_28	IF_29	ELSE_6	IF_31
0x4004fff	      0xe943ffffff	                           jmp 0x4004f47	      3352	gui.c	FUNCTION_50	IF_28	IF_29	ELSE_6	IF_31
0x4005004	      0xe800000000	                          call 0x4005009	      3386	gui.c	FUNCTION_50	ELSE_9
gui_focus_change	WHILE,0:SWITCH,0:CALL,3:ELSE,0:DO,0:IF,1:FOR,0:functions,0	32
0x40072b0	              0x53	                                push rbx	      4816	gui.c	FUNCTION_78
0x40072b1	            0x31f6	                            xor esi, esi	      4823	gui.c	FUNCTION_78	CALL_1
0x40072b3	            0x89fb	                            mov ebx, edi	      4816	gui.c	FUNCTION_78
0x40072b5	        0x4883ec10	                           sub rsp, 0x10	      4816	gui.c	FUNCTION_78
0x40072b9	    0x893d00000000	            mov dword [0x040072bf], edi 	      4822	gui.c	FUNCTION_78
0x40072bf	      0xbf01000000	                              mov edi, 1	      4823	gui.c	FUNCTION_78	CALL_1
0x40072c4	    0x64488b042528	                mov rax, qword fs:[0x28]	      4816	gui.c	FUNCTION_78
0x40072cd	      0x4889442408	                mov qword [rsp + 8], rax	      4816	gui.c	FUNCTION_78
0x40072d2	            0x31c0	                            xor eax, eax	      4816	gui.c	FUNCTION_78
0x40072d4	      0xe800000000	                          call 0x40072d9	      4823	gui.c	FUNCTION_78	CALL_1
0x40072d9	            0x89df	                            mov edi, ebx	      4826	gui.c	FUNCTION_78	CALL_2
0x40072db	      0xe800000000	                          call 0x40072e0	      4826	gui.c	FUNCTION_78	CALL_2
0x40072e0	    0x8b0500000000	            mov eax, dword [0x040072e6] 	      4832	gui.c	FUNCTION_78	IF_1
0x40072e6	            0x85c0	                           test eax, eax	      4832	gui.c	FUNCTION_78	IF_1
0x40072e8	            0x7524	                           jne 0x400730e	      4832	gui.c	FUNCTION_78	IF_1
0x40072ea	          0x83fb01	                              cmp ebx, 1	      4838	gui.c	FUNCTION_78	IF_1
0x40072ed	      0xbe03000000	                              mov esi, 3	      4839	gui.c	FUNCTION_78	IF_1	CALL_3
0x40072f2	          0x4889e7	                            mov rdi, rsp	      4839	gui.c	FUNCTION_78	IF_1	CALL_3
0x40072f5	            0x19c0	                            sbb eax, eax	      4838	gui.c	FUNCTION_78	IF_1
0x40072f7	        0xc604249b	                    mov byte [rsp], 0x9b	      4836	gui.c	FUNCTION_78	IF_1
0x40072fb	      0xc6442401fd	                mov byte [rsp + 1], 0xfd	      4837	gui.c	FUNCTION_78	IF_1
0x4007300	            0xf7d0	                                 not eax	      4838	gui.c	FUNCTION_78	IF_1
0x4007302	          0x83c063	                           add eax, 0x63	      4838	gui.c	FUNCTION_78	IF_1
0x4007305	        0x88442402	                  mov byte [rsp + 2], al	      4838	gui.c	FUNCTION_78	IF_1
0x4007309	      0xe800000000	                          call 0x400730e	      4839	gui.c	FUNCTION_78	IF_1	CALL_3
0x400730e	      0x488b442408	                mov rax, qword [rsp + 8]	      4842	gui.c	FUNCTION_78
0x4007313	    0x644833042528	                xor rax, qword fs:[0x28]	      4842	gui.c	FUNCTION_78
0x400731c	            0x7506	                           jne 0x4007324	      4842	gui.c	FUNCTION_78
0x400731e	        0x4883c410	                           add rsp, 0x10	      4842	gui.c	FUNCTION_78
0x4007322	              0x5b	                                 pop rbx	      4842	gui.c	FUNCTION_78
0x4007323	              0xc3	                                     ret	      4842	gui.c	FUNCTION_78
0x4007324	      0xe800000000	                          call 0x4007329	      4842	gui.c	FUNCTION_78
display_errors	WHILE,0:SWITCH,0:CALL,9:ELSE,1:DO,0:IF,4:FOR,1:functions,0	71
0x40079a0	              0x55	                                push rbp	      5078	gui.c	FUNCTION_86
0x40079a1	              0x53	                                push rbx	      5078	gui.c	FUNCTION_86
0x40079a2	      0xbf02000000	                              mov edi, 2	      5081	gui.c	FUNCTION_86	IF_1	CALL_1
0x40079a7	        0x4883ec08	                              sub rsp, 8	      5078	gui.c	FUNCTION_86
0x40079ab	      0xe800000000	                          call 0x40079b0	      5081	gui.c	FUNCTION_86	IF_1	CALL_1
0x40079b0	            0x85c0	                           test eax, eax	      5081	gui.c	FUNCTION_86	IF_1	CALL_1
0x40079b2	     0xf85a8000000	                           jne 0x4007a60	      5081	gui.c	FUNCTION_86	IF_1	CALL_1
0x40079b8	    0x488b2d000000	            mov rbp, qword [0x040079bf] 	      5083	gui.c	FUNCTION_86	ELSE_1	IF_2
0x40079bf	          0x4885ed	                           test rbp, rbp	      5083	gui.c	FUNCTION_86	ELSE_1	IF_2
0x40079c2	     0xf84e8000000	                            je 0x4007ab0	      5083	gui.c	FUNCTION_86	ELSE_1	IF_2
0x40079c8	         0xfb65d00	                   movzx ebx, byte [rbp]	      5086	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1
0x40079cc	            0x84db	                             test bl, bl	      5086	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1
0x40079ce	            0x747c	                            je 0x4007a4c	      5086	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1
0x40079d0	      0xe800000000	                          call 0x40079d5	      5086	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1
0x40079d5	          0x488b00	                    mov rax, qword [rax]	      5086	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1
0x40079d8	            0xeb12	                           jmp 0x40079ec	      5086	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1
0x40079da	    0x660f1f440000	                    nop word [rax + rax]	      5086	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1
0x40079e0	        0x4883c501	                              add rbp, 1	      5086	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1
0x40079e4	         0xfb65d00	                   movzx ebx, byte [rbp]	      5086	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1
0x40079e8	            0x84db	                             test bl, bl	      5086	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1
0x40079ea	            0x7460	                            je 0x4007a4c	      5086	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1
0x40079ec	      0xf644580120	      test byte [rax + rbx*2 + 1], 0x20 	      5087	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x40079f1	            0x75ed	                           jne 0x40079e0	      5087	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x40079f3	          0x4889ef	                            mov rdi, rbp	      5090	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	IF_4	CALL_4
0x40079f6	      0xe800000000	                          call 0x40079fb	      5090	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	IF_4	CALL_4
0x40079fb	    0x483dd0070000	                          cmp rax, 0x7d0	      5090	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	IF_4	CALL_4
0x4007a01	            0x7775	                            ja 0x4007a78	      5090	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	IF_4	CALL_4
0x4007a03	      0xba05000000	                              mov edx, 5	      5093	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_8
0x4007a08	      0xbe00000000	                              mov esi, 0	      5093	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_8
0x4007a0d	            0x31ff	                            xor edi, edi	      5093	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_8
0x4007a0f	      0xe800000000	                          call 0x4007a14	      5093	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_8
0x4007a14	      0xba05000000	                              mov edx, 5	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x4007a19	      0xbe00000000	                              mov esi, 0	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x4007a1e	            0x31ff	                            xor edi, edi	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x4007a20	          0x4889c3	                            mov rbx, rax	      5093	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_8
0x4007a23	      0xe800000000	                          call 0x4007a28	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x4007a28	        0x4883ec08	                              sub rsp, 8	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x4007a2c	          0x4889ea	                            mov rdx, rbp	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x4007a2f	          0x4531c9	                            xor r9d, r9d	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x4007a32	            0x6a00	                                  push 0	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x4007a34	    0x41b801000000	                              mov r8d, 1	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x4007a3a	          0x4889d9	                            mov rcx, rbx	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x4007a3d	          0x4889c6	                            mov rsi, rax	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x4007a40	      0xbf01000000	                              mov edi, 1	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x4007a45	      0xe800000000	                          call 0x4007a4a	      5092	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3	CALL_7
0x4007a4a	              0x58	                                 pop rax	      5094	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3
0x4007a4b	              0x5a	                                 pop rdx	      5094	gui.c	FUNCTION_86	ELSE_1	IF_2	FOR_1	IF_3
0x4007a4c	        0x4883c408	                              add rsp, 8	      5098	gui.c	FUNCTION_86
0x4007a50	      0xbf00000000	                              mov edi, 0	      5096	gui.c	FUNCTION_86	ELSE_1	IF_2	CALL_9
0x4007a55	              0x5b	                                 pop rbx	      5098	gui.c	FUNCTION_86
0x4007a56	              0x5d	                                 pop rbp	      5098	gui.c	FUNCTION_86
0x4007a57	      0xe900000000	                           jmp 0x4007a5c	      5096	gui.c	FUNCTION_86	ELSE_1	IF_2	CALL_9
0x4007a5c	         0xf1f4000	                         nop dword [rax]	      5096	gui.c	FUNCTION_86	ELSE_1	IF_2	CALL_9
0x4007a60	    0x488b3d000000	            mov rdi, qword [0x04007a67] 	      5082	gui.c	FUNCTION_86	CALL_2
0x4007a67	        0x4883c408	                              add rsp, 8	      5098	gui.c	FUNCTION_86
0x4007a6b	              0x5b	                                 pop rbx	      5098	gui.c	FUNCTION_86
0x4007a6c	              0x5d	                                 pop rbp	      5098	gui.c	FUNCTION_86
0x4007a6d	      0xe900000000	                           jmp 0x4007a72	      5082	gui.c	FUNCTION_86	CALL_2
0x4007a72	    0x660f1f440000	                    nop word [rax + rax]	      5082	gui.c	FUNCTION_86	CALL_2
0x4007a78	    0x48b92e2e2e28	          movabs rcx, 0x6e757274282e2e2e	       110	string3.h	FUNCTION_100	CALL_3
0x4007a82	    0xc785ca070000	     mov dword [rbp + 0x7ca], 0x65746163	       110	string3.h	FUNCTION_100	CALL_3
0x4007a8c	    0xc685d0070000	               mov byte [rbp + 0x7d0], 0	       110	string3.h	FUNCTION_100	CALL_3
0x4007a93	    0x48898dc20700	           mov qword [rbp + 0x7c2], rcx 	       110	string3.h	FUNCTION_100	CALL_3
0x4007a9a	      0xb964290000	                         mov ecx, 0x2964	       110	string3.h	FUNCTION_100	CALL_3
0x4007a9f	    0x66898dce0700	              mov word [rbp + 0x7ce], cx	       110	string3.h	FUNCTION_100	CALL_3
0x4007aa6	      0xe958ffffff	                           jmp 0x4007a03	       110	string3.h	FUNCTION_100	CALL_3
0x4007aab	       0xf1f440000	                   nop dword [rax + rax]	       110	string3.h	FUNCTION_100	CALL_3
0x4007ab0	        0x4883c408	                              add rsp, 8	      5098	gui.c	FUNCTION_86
0x4007ab4	              0x5b	                                 pop rbx	      5098	gui.c	FUNCTION_86
0x4007ab5	              0x5d	                                 pop rbp	      5098	gui.c	FUNCTION_86
0x4007ab6	              0xc3	                                     ret	      5098	gui.c	FUNCTION_86
gui_exit	WHILE,0:SWITCH,0:CALL,2:ELSE,0:DO,0:IF,0:FOR,0:functions,0	7
0x4001220	              0x53	                                push rbx	       797	gui.c	FUNCTION_8
0x4001221	            0x89fb	                            mov ebx, edi	       797	gui.c	FUNCTION_8
0x4001223	      0xe800000000	                          call 0x4001228	       800	gui.c	FUNCTION_8	CALL_1
0x4001228	            0x89df	                            mov edi, ebx	       802	gui.c	FUNCTION_8	CALL_2
0x400122a	    0xc70500000000	               mov dword [0x04001234], 0	       801	gui.c	FUNCTION_8
0x4001234	              0x5b	                                 pop rbx	       803	gui.c	FUNCTION_8
0x4001235	      0xe900000000	                           jmp 0x400123a	       802	gui.c	FUNCTION_8	CALL_2
gui_update_tabline	WHILE,0:SWITCH,0:CALL,6:ELSE,0:DO,0:IF,4:FOR,0:functions,0	63
0x4005130	              0x55	                                push rbp	      3705	gui.c	FUNCTION_56
0x4005131	              0x53	                                push rbx	      3705	gui.c	FUNCTION_56
0x4005132	        0x4883ec18	                           sub rsp, 0x18	      3705	gui.c	FUNCTION_56
0x4005136	    0x8b3500000000	            mov esi, dword [0x0400513c] 	      3682	gui.c	FUNCTION_54	CALL_1
0x400513c	            0x85f6	                           test esi, esi	      3682	gui.c	FUNCTION_54	CALL_1
0x400513e	            0x7570	                           jne 0x40051b0	      3682	gui.c	FUNCTION_54	CALL_1
0x4005140	      0xbd01000000	                              mov ebp, 1	      3705	gui.c	FUNCTION_56
0x4005145	            0x31db	                            xor ebx, ebx	      3695	gui.c	FUNCTION_55	IF_1
0x4005147	      0xe800000000	                          call 0x400514c	      3707	gui.c	FUNCTION_56	CALL_2
0x400514c	    0x8b0d00000000	            mov ecx, dword [0x04005152] 	      3709	gui.c	FUNCTION_56	IF_1
0x4005152	            0x85c9	                           test ecx, ecx	      3709	gui.c	FUNCTION_56	IF_1
0x4005154	            0x750a	                           jne 0x4005160	      3709	gui.c	FUNCTION_56	IF_1
0x4005156	    0x8b1500000000	            mov edx, dword [0x0400515c] 	      3709	gui.c	FUNCTION_56	IF_1
0x400515c	            0x85d2	                           test edx, edx	      3709	gui.c	FUNCTION_56	IF_1
0x400515e	            0x7410	                            je 0x4005170	      3709	gui.c	FUNCTION_56	IF_1
0x4005160	        0x4883c418	                           add rsp, 0x18	      3725	gui.c	FUNCTION_56
0x4005164	              0x5b	                                 pop rbx	      3725	gui.c	FUNCTION_56
0x4005165	              0x5d	                                 pop rbp	      3725	gui.c	FUNCTION_56
0x4005166	              0xc3	                                     ret	      3725	gui.c	FUNCTION_56
0x4005167	    0x660f1f840000	                    nop word [rax + rax]	      3725	gui.c	FUNCTION_56
0x4005170	        0x8944240c	              mov dword [rsp + 0xc], eax	      3725	gui.c	FUNCTION_56
0x4005174	      0xe800000000	                          call 0x4005179	      3713	gui.c	FUNCTION_56	IF_1	CALL_3
0x4005179	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      3715	gui.c	FUNCTION_56	IF_1	IF_2
0x400517d	            0x85c0	                           test eax, eax	      3715	gui.c	FUNCTION_56	IF_1	IF_2
0x400517f	           0xf94c0	                                 sete al	      3715	gui.c	FUNCTION_56	IF_1	IF_2
0x4005182	          0x4038e8	                             cmp al, bpl	      3715	gui.c	FUNCTION_56	IF_1	IF_2
0x4005185	     0xf847d000000	                            je 0x4005208	      3715	gui.c	FUNCTION_56	IF_1	IF_2
0x400518b	            0x89df	                            mov edi, ebx	      3716	gui.c	FUNCTION_56	IF_1	CALL_4
0x400518d	      0xe800000000	                          call 0x4005192	      3716	gui.c	FUNCTION_56	IF_1	CALL_4
0x4005192	            0x85db	                           test ebx, ebx	      3717	gui.c	FUNCTION_56	IF_1	IF_3
0x4005194	            0x7405	                            je 0x400519b	      3717	gui.c	FUNCTION_56	IF_1	IF_3
0x4005196	      0xe800000000	                          call 0x400519b	      3718	gui.c	FUNCTION_56	IF_1	CALL_5
0x400519b	        0x4883c418	                           add rsp, 0x18	      3725	gui.c	FUNCTION_56
0x400519f	            0x89de	                            mov esi, ebx	      3723	gui.c	FUNCTION_56	IF_1	CALL_6
0x40051a1	      0xba01000000	                              mov edx, 1	      3723	gui.c	FUNCTION_56	IF_1	CALL_6
0x40051a6	              0x5b	                                 pop rbx	      3725	gui.c	FUNCTION_56
0x40051a7	              0x5d	                                 pop rbp	      3725	gui.c	FUNCTION_56
0x40051a8	            0x31ff	                            xor edi, edi	      3723	gui.c	FUNCTION_56	IF_1	CALL_6
0x40051aa	      0xe951c1ffff	               jmp sym.gui_set_shellsize	      3723	gui.c	FUNCTION_56	IF_1	CALL_6
0x40051af	              0x90	                                     nop	      3723	gui.c	FUNCTION_56	IF_1	CALL_6
0x40051b0	    0x488b3d000000	            mov rdi, qword [0x040051b7] 	      3682	gui.c	FUNCTION_54	CALL_1
0x40051b7	      0xbe65000000	                           mov esi, 0x65	      3682	gui.c	FUNCTION_54	CALL_1
0x40051bc	      0xe800000000	                          call 0x40051c1	      3682	gui.c	FUNCTION_54	CALL_1
0x40051c1	          0x4885c0	                           test rax, rax	      3682	gui.c	FUNCTION_54	CALL_1
0x40051c4	     0xf8476ffffff	                            je 0x4005140	      3682	gui.c	FUNCTION_54	CALL_1
0x40051ca	    0x488b05000000	            mov rax, qword [0x040051d1] 	      3693	gui.c	FUNCTION_55	IF_1
0x40051d1	          0x4885c0	                           test rax, rax	      3693	gui.c	FUNCTION_55	IF_1
0x40051d4	     0xf8466ffffff	                            je 0x4005140	      3693	gui.c	FUNCTION_55	IF_1
0x40051da	            0x31ed	                            xor ebp, ebp	      3694	gui.c	FUNCTION_55	IF_1
0x40051dc	        0x4883f801	                              cmp rax, 1	      3694	gui.c	FUNCTION_55	IF_1
0x40051e0	      0xbb01000000	                              mov ebx, 1	      3696	gui.c	FUNCTION_55
0x40051e5	     0xf855cffffff	                           jne 0x4005147	      3694	gui.c	FUNCTION_55	IF_1
0x40051eb	    0x488b05000000	            mov rax, qword [0x040051f2] 	      3694	gui.c	FUNCTION_55	IF_1
0x40051f2	        0x48833800	                      cmp qword [rax], 0	      3694	gui.c	FUNCTION_55	IF_1
0x40051f6	     0xf854bffffff	                           jne 0x4005147	      3694	gui.c	FUNCTION_55	IF_1
0x40051fc	      0xe93fffffff	                           jmp 0x4005140	      3694	gui.c	FUNCTION_55	IF_1
0x4005201	     0xf1f80000000	                         nop dword [rax]	      3694	gui.c	FUNCTION_55	IF_1
0x4005208	            0x85db	                           test ebx, ebx	      3717	gui.c	FUNCTION_56	IF_1	IF_3
0x400520a	     0xf8450ffffff	                            je 0x4005160	      3717	gui.c	FUNCTION_56	IF_1	IF_3
0x4005210	        0x4883c418	                           add rsp, 0x18	      3725	gui.c	FUNCTION_56
0x4005214	              0x5b	                                 pop rbx	      3725	gui.c	FUNCTION_56
0x4005215	              0x5d	                                 pop rbp	      3725	gui.c	FUNCTION_56
0x4005216	      0xe900000000	                           jmp 0x400521b	      3718	gui.c	FUNCTION_56	IF_1	CALL_5
gui_find_scrollbar	WHILE,0:SWITCH,0:CALL,0:ELSE,0:DO,0:IF,1:FOR,0:functions,1	26
0x4006660	    0x48393d000000	            cmp qword [0x04006667], rdi 	      3932	gui.c	FUNCTION_62	IF_1
0x4006667	            0x744f	                            je 0x40066b8	      3932	gui.c	FUNCTION_62	IF_1
0x4006669	    0x488b05000000	            mov rax, qword [0x04006670] 	      3934	gui.c	FUNCTION_62
0x4006670	          0x4885c0	                           test rax, rax	      3934	gui.c	FUNCTION_62
0x4006673	            0x751d	                           jne 0x4006692	      3934	gui.c	FUNCTION_62
0x4006675	            0xeb47	                           jmp 0x40066be	      3934	gui.c	FUNCTION_62
0x4006677	    0x660f1f840000	                    nop word [rax + rax]	      3934	gui.c	FUNCTION_62
0x4006680	    0x483bb8e01800	          cmp rdi, qword [rax + 0x18e0] 	      3938	gui.c	FUNCTION_62	FUNCTION_1	IF_2
0x4006687	            0x741f	                            je 0x40066a8	      3938	gui.c	FUNCTION_62	FUNCTION_1	IF_2
0x4006689	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3934	gui.c	FUNCTION_62
0x400668d	          0x4885c0	                           test rax, rax	      3934	gui.c	FUNCTION_62
0x4006690	            0x741e	                            je 0x40066b0	      3934	gui.c	FUNCTION_62
0x4006692	    0x483bb8901800	          cmp rdi, qword [rax + 0x1890] 	      3936	gui.c	FUNCTION_62	FUNCTION_1	IF_1
0x4006699	            0x75e5	                           jne 0x4006680	      3936	gui.c	FUNCTION_62	FUNCTION_1	IF_1
0x400669b	    0x480590180000	                         add rax, 0x1890	      3937	gui.c	FUNCTION_62	FUNCTION_1	IF_1
0x40066a1	              0xc3	                                     ret	      3937	gui.c	FUNCTION_62	FUNCTION_1	IF_1
0x40066a2	    0x660f1f440000	                    nop word [rax + rax]	      3937	gui.c	FUNCTION_62	FUNCTION_1	IF_1
0x40066a8	    0x4805e0180000	                         add rax, 0x18e0	      3939	gui.c	FUNCTION_62	FUNCTION_1	IF_2
0x40066ae	              0xc3	                                     ret	      3939	gui.c	FUNCTION_62	FUNCTION_1	IF_2
0x40066af	              0x90	                                     nop	      3939	gui.c	FUNCTION_62	FUNCTION_1	IF_2
0x40066b0	            0xf3c3	                                     ret	      3939	gui.c	FUNCTION_62	FUNCTION_1	IF_2
0x40066b2	    0x660f1f440000	                    nop word [rax + rax]	      3939	gui.c	FUNCTION_62	FUNCTION_1	IF_2
0x40066b8	      0xb800000000	                              mov eax, 0	      3933	gui.c	FUNCTION_62	IF_1
0x40066bd	              0xc3	                                     ret	      3933	gui.c	FUNCTION_62	IF_1
0x40066be	            0x31c0	                            xor eax, eax	      3941	gui.c	FUNCTION_62
0x40066c0	              0xc3	                                     ret	      3942	gui.c	FUNCTION_62
gui_may_update_scrollbars	WHILE,0:SWITCH,0:CALL,3:ELSE,0:DO,0:IF,1:FOR,0:functions,0	25
0x40066d0	    0x8b0d00000000	            mov ecx, dword [0x040066d6] 	      4167	gui.c	FUNCTION_64	IF_1
0x40066d6	            0x85c9	                           test ecx, ecx	      4167	gui.c	FUNCTION_64	IF_1
0x40066d8	            0x740a	                            je 0x40066e4	      4167	gui.c	FUNCTION_64	IF_1
0x40066da	    0x8b1500000000	            mov edx, dword [0x040066e0] 	      4167	gui.c	FUNCTION_64	IF_1
0x40066e0	            0x85d2	                           test edx, edx	      4167	gui.c	FUNCTION_64	IF_1
0x40066e2	            0x740c	                            je 0x40066f0	      4167	gui.c	FUNCTION_64	IF_1
0x40066e4	    0xc70500000000	               mov dword [0x040066ee], 1	      4173	gui.c	FUNCTION_64
0x40066ee	              0xc3	                                     ret	      4173	gui.c	FUNCTION_64
0x40066ef	              0x90	                                     nop	      4173	gui.c	FUNCTION_64
0x40066f0	        0x4883ec08	                              sub rsp, 8	      4166	gui.c	FUNCTION_64
0x40066f4	      0xe800000000	                          call 0x40066f9	      4169	gui.c	FUNCTION_64	IF_1	CALL_1
0x40066f9	            0x31ff	                            xor edi, edi	      4170	gui.c	FUNCTION_64	IF_1	CALL_2
0x40066fb	      0xe800000000	                          call 0x4006700	      4170	gui.c	FUNCTION_64	IF_1	CALL_2
0x4006700	    0x8b0500000000	            mov eax, dword [0x04006706] 	      4607	gui.c	ELSE_2	FUNCTION_70	IF_1
0x4006706	            0x85c0	                           test eax, eax	      4607	gui.c	ELSE_2	FUNCTION_70	IF_1
0x4006708	            0x740a	                            je 0x4006714	      4607	gui.c	ELSE_2	FUNCTION_70	IF_1
0x400670a	      0xbf01000000	                              mov edi, 1	      4607	gui.c	ELSE_2	FUNCTION_70	IF_1
0x400670f	      0xe86ca7ffff	call sym.gui_update_horiz_scrollbar.part.0	      4607	gui.c	ELSE_2	FUNCTION_70	IF_1
0x4006714	    0x48833d000000	               cmp qword [0x0400671c], 0	      4193	gui.c	FUNCTION_65	IF_1
0x400671c	            0x740a	                            je 0x4006728	      4193	gui.c	FUNCTION_65	IF_1
0x400671e	      0xbf01000000	                              mov edi, 1	      4193	gui.c	FUNCTION_65	IF_1
0x4006723	      0xe8a8a1ffff	  call sym.gui_update_scrollbars.part.12	      4193	gui.c	FUNCTION_65	IF_1
0x4006728	    0xc70500000000	               mov dword [0x04006732], 1	      4173	gui.c	FUNCTION_64
0x4006732	        0x4883c408	                              add rsp, 8	      4174	gui.c	FUNCTION_64
0x4006736	              0xc3	                                     ret	      4174	gui.c	FUNCTION_64
gui_get_lightness	WHILE,0:SWITCH,0:CALL,1:ELSE,0:DO,0:IF,0:FOR,0:functions,0	18
0x4007270	        0x4883ec08	                              sub rsp, 8	      4784	gui.c	FUNCTION_76
0x4007274	      0xe800000000	                          call 0x4007279	      4785	gui.c	FUNCTION_76	CALL_1
0x4007279	          0x4889c2	                            mov rdx, rax	      4787	gui.c	FUNCTION_76
0x400727c	        0x4883c408	                              add rsp, 8	      4790	gui.c	FUNCTION_76
0x4007280	        0x48c1ea10	                           shr rdx, 0x10	      4787	gui.c	FUNCTION_76
0x4007284	           0xfb6d2	                           movzx edx, dl	      4787	gui.c	FUNCTION_76
0x4007287	    0x69ca2b010000	                    imul ecx, edx, 0x12b	      4787	gui.c	FUNCTION_76
0x400728d	           0xfb6d4	                           movzx edx, ah	      4787	gui.c	FUNCTION_76
0x4007290	           0xfb6c0	                           movzx eax, al	      4787	gui.c	FUNCTION_76
0x4007293	    0x69d24b020000	                    imul edx, edx, 0x24b	      4787	gui.c	FUNCTION_76
0x4007299	          0x6bc072	                     imul eax, eax, 0x72	      4787	gui.c	FUNCTION_76
0x400729c	             0x1ca	                            add edx, ecx	      4787	gui.c	FUNCTION_76
0x400729e	             0x1d0	                            add eax, edx	      4787	gui.c	FUNCTION_76
0x40072a0	      0xbad34d6210	                     mov edx, 0x10624dd3	      4787	gui.c	FUNCTION_76
0x40072a5	            0xf7ea	                                imul edx	      4787	gui.c	FUNCTION_76
0x40072a7	            0x89d0	                            mov eax, edx	      4787	gui.c	FUNCTION_76
0x40072a9	          0xc1e806	                              shr eax, 6	      4787	gui.c	FUNCTION_76
0x40072ac	              0xc3	                                     ret	      4790	gui.c	FUNCTION_76
gui_find_longest_lnum	WHILE,0:SWITCH,0:CALL,4:ELSE,2:DO,0:IF,3:FOR,1:functions,0	102
0x4000780	            0x4157	                                push r15	      4563	gui.c	FUNCTION_69
0x4000782	            0x4156	                                push r14	      4563	gui.c	FUNCTION_69
0x4000784	      0xbe68000000	                           mov esi, 0x68	      4569	gui.c	FUNCTION_69	IF_1	CALL_1
0x4000789	            0x4155	                                push r13	      4563	gui.c	FUNCTION_69
0x400078b	            0x4154	                                push r12	      4563	gui.c	FUNCTION_69
0x400078d	              0x55	                                push rbp	      4563	gui.c	FUNCTION_69
0x400078e	              0x53	                                push rbx	      4563	gui.c	FUNCTION_69
0x400078f	        0x4883ec08	                              sub rsp, 8	      4563	gui.c	FUNCTION_69
0x4000793	    0x488b3d000000	            mov rdi, qword [0x0400079a] 	      4569	gui.c	FUNCTION_69	IF_1	CALL_1
0x400079a	      0xe800000000	                          call 0x400079f	      4569	gui.c	FUNCTION_69	IF_1	CALL_1
0x400079f	          0x4885c0	                           test rax, rax	      4569	gui.c	FUNCTION_69	IF_1	CALL_1
0x40007a2	    0x488b05000000	            mov rax, qword [0x040007a9] 	      4570	gui.c	FUNCTION_69	IF_1
0x40007a9	            0x741d	                            je 0x40007c8	      4569	gui.c	FUNCTION_69	IF_1	CALL_1
0x40007ab	        0x4c8b6038	            mov r12, qword [rax + 0x38] 	      4569	gui.c	FUNCTION_69	IF_1	CALL_1
0x40007af	        0x4883c408	                              add rsp, 8	      4600	gui.c	FUNCTION_69	ELSE_2
0x40007b3	          0x4c89e0	                            mov rax, r12	      4600	gui.c	FUNCTION_69	ELSE_2
0x40007b6	              0x5b	                                 pop rbx	      4600	gui.c	FUNCTION_69	ELSE_2
0x40007b7	              0x5d	                                 pop rbp	      4600	gui.c	FUNCTION_69	ELSE_2
0x40007b8	            0x415c	                                 pop r12	      4600	gui.c	FUNCTION_69	ELSE_2
0x40007ba	            0x415d	                                 pop r13	      4600	gui.c	FUNCTION_69	ELSE_2
0x40007bc	            0x415e	                                 pop r14	      4600	gui.c	FUNCTION_69	ELSE_2
0x40007be	            0x415f	                                 pop r15	      4600	gui.c	FUNCTION_69	ELSE_2
0x40007c0	              0xc3	                                     ret	      4600	gui.c	FUNCTION_69	ELSE_2
0x40007c1	     0xf1f80000000	                         nop dword [rax]	      4600	gui.c	FUNCTION_69	ELSE_2
0x40007c8	        0x4c8b6878	            mov r13, qword [rax + 0x78] 	      4570	gui.c	FUNCTION_69	IF_1
0x40007cc	        0x4c8b6038	            mov r12, qword [rax + 0x38] 	      4570	gui.c	FUNCTION_69	IF_1
0x40007d0	          0x4d39e5	                            cmp r13, r12	      4570	gui.c	FUNCTION_69	IF_1
0x40007d3	            0x7fda	                            jg 0x40007af	      4570	gui.c	FUNCTION_69	IF_1
0x40007d5	    0x488b80e80000	            mov rax, qword [rax + 0xe8] 	      4571	gui.c	FUNCTION_69	IF_1
0x40007dc	          0x4939c4	                            cmp r12, rax	      4571	gui.c	FUNCTION_69	IF_1
0x40007df	            0x7dce	                           jge 0x40007af	      4571	gui.c	FUNCTION_69	IF_1
0x40007e1	    0x488b15000000	            mov rdx, qword [0x040007e8] 	      4572	gui.c	FUNCTION_69	IF_1
0x40007e8	          0x488b12	                    mov rdx, qword [rdx]	      4572	gui.c	FUNCTION_69	IF_1
0x40007eb	        0x4883c201	                              add rdx, 1	      4572	gui.c	FUNCTION_69	IF_1
0x40007ef	          0x4839d0	                            cmp rax, rdx	      4572	gui.c	FUNCTION_69	IF_1
0x40007f2	            0x7fbb	                            jg 0x40007af	      4572	gui.c	FUNCTION_69	IF_1
0x40007f4	          0x4939c5	                            cmp r13, rax	      4581	gui.c	FUNCTION_69	IF_1	FOR_1
0x40007f7	     0xf8dc5000000	                           jge 0x40008c2	      4581	gui.c	FUNCTION_69	IF_1	FOR_1
0x40007fd	          0x4531f6	                          xor r14d, r14d	      4581	gui.c	FUNCTION_69	IF_1	FOR_1
0x4000800	          0x4531e4	                          xor r12d, r12d	      4581	gui.c	FUNCTION_69	IF_1	FOR_1
0x4000803	       0xf1f440000	                   nop dword [rax + rax]	      4581	gui.c	FUNCTION_69	IF_1	FOR_1
0x4000808	          0x4c89ef	                            mov rdi, r13	      4539	gui.c	FUNCTION_68	CALL_1
0x400080b	      0xe800000000	                          call 0x4000810	      4539	gui.c	FUNCTION_68	CALL_1
0x4000810	          0x803800	                       cmp byte [rax], 0	      4541	gui.c	FUNCTION_68	IF_1
0x4000813	          0x4889c3	                            mov rbx, rax	      4539	gui.c	FUNCTION_68	CALL_1
0x4000816	            0x7470	                            je 0x4000888	      4541	gui.c	FUNCTION_68	IF_1
0x4000818	            0x31ed	                            xor ebp, ebp	      4541	gui.c	FUNCTION_68	IF_1
0x400081a	            0xeb0f	                           jmp 0x400082b	      4541	gui.c	FUNCTION_68	IF_1
0x400081c	         0xf1f4000	                         nop dword [rax]	      4541	gui.c	FUNCTION_68	IF_1
0x4000820	          0x4801c3	                            add rbx, rax	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x4000823	          0x803b00	                       cmp byte [rbx], 0	      4546	gui.c	FUNCTION_68	IF_1	FOR_1	IF_2
0x4000826	            0x7432	                            je 0x400085a	      4546	gui.c	FUNCTION_68	IF_1	FOR_1	IF_2
0x4000828	          0x4401fd	                           add ebp, r15d	      4548	gui.c	FUNCTION_68	IF_1	FOR_1
0x400082b	            0x89ee	                            mov esi, ebp	      4544	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_2
0x400082d	          0x4889df	                            mov rdi, rbx	      4544	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_2
0x4000830	      0xe800000000	                          call 0x4000835	      4544	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_2
0x4000835	    0x8b1500000000	            mov edx, dword [0x0400083b] 	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x400083b	          0x4189c7	                           mov r15d, eax	      4544	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_2
0x400083e	      0xb801000000	                              mov eax, 1	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x4000843	            0x85d2	                           test edx, edx	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x4000845	            0x74d9	                            je 0x4000820	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x4000847	          0x4889df	                            mov rdi, rbx	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x400084a	    0xff1500000000	                 call qword [0x04000850]	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x4000850	            0x4898	                                    cdqe	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x4000852	          0x4801c3	                            add rbx, rax	      4545	gui.c	FUNCTION_68	IF_1	FOR_1	CALL_3
0x4000855	          0x803b00	                       cmp byte [rbx], 0	      4546	gui.c	FUNCTION_68	IF_1	FOR_1	IF_2
0x4000858	            0x75ce	                           jne 0x4000828	      4546	gui.c	FUNCTION_68	IF_1	FOR_1	IF_2
0x400085a	          0x4139ee	                           cmp r14d, ebp	      4584	gui.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x400085d	          0x4489f0	                           mov eax, r14d	      4584	gui.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x4000860	            0x7d2b	                           jge 0x400088d	      4584	gui.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x4000862	    0x488b05000000	            mov rax, qword [0x04000869] 	      4584	gui.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x4000869	          0x4c63f5	                         movsxd r14, ebp	      4586	gui.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x400086c	          0x4d89ec	                            mov r12, r13	      4586	gui.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x400086f	        0x4983c501	                              add r13, 1	      4581	gui.c	FUNCTION_69	IF_1	FOR_1
0x4000873	    0x4c39a8e80000	            cmp qword [rax + 0xe8], r13 	      4581	gui.c	FUNCTION_69	IF_1	FOR_1
0x400087a	            0x7f8c	                            jg 0x4000808	      4581	gui.c	FUNCTION_69	IF_1	FOR_1
0x400087c	      0xe92effffff	                           jmp 0x40007af	      4581	gui.c	FUNCTION_69	IF_1	FOR_1
0x4000881	     0xf1f80000000	                         nop dword [rax]	      4581	gui.c	FUNCTION_69	IF_1	FOR_1
0x4000888	          0x4489f0	                           mov eax, r14d	      4584	gui.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x400088b	            0x31ed	                            xor ebp, ebp	      4540	gui.c	FUNCTION_68
0x400088d	            0x39c5	                            cmp ebp, eax	      4589	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3
0x400088f	    0x488b05000000	            mov rax, qword [0x04000896] 	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x4000896	            0x75d7	                           jne 0x400086f	      4589	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3
0x4000898	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x400089c	          0x4489ea	                           mov edx, r13d	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x400089f	            0x29f2	                            sub edx, esi	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x40008a1	            0x89d1	                            mov ecx, edx	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x40008a3	          0xc1f91f	                           sar ecx, 0x1f	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x40008a6	            0x31ca	                            xor edx, ecx	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x40008a8	            0x29ca	                            sub edx, ecx	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x40008aa	            0x89d1	                            mov ecx, edx	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x40008ac	          0x4489e2	                           mov edx, r12d	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x40008af	            0x29f2	                            sub edx, esi	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x40008b1	            0x89d6	                            mov esi, edx	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x40008b3	          0xc1fe1f	                           sar esi, 0x1f	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x40008b6	            0x31f2	                            xor edx, esi	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x40008b8	            0x29f2	                            sub edx, esi	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x40008ba	            0x39d1	                            cmp ecx, edx	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x40008bc	        0x4d0f4ce5	                          cmovl r12, r13	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x40008c0	            0xebad	                           jmp 0x400086f	      4590	gui.c	FUNCTION_69	IF_1	FOR_1	ELSE_1	IF_3	CALL_3
0x40008c2	          0x4531e4	                          xor r12d, r12d	      4581	gui.c	FUNCTION_69	IF_1	FOR_1
0x40008c5	      0xe9e5feffff	                           jmp 0x40007af	      4599	gui.c	FUNCTION_69	ELSE_2
