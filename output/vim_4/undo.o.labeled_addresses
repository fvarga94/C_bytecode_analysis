undo_write	IF,4:CALL,4:functions,0:FOR,0:DO,0:WHILE,1:ELSE,0:SWITCH,0	80
0x4000510	            0x4156	                                push r14	       886	undo.c	FUNCTION_15
0x4000512	            0x4155	                                push r13	       886	undo.c	FUNCTION_15
0x4000514	          0x4989fe	                            mov r14, rdi	       886	undo.c	FUNCTION_15
0x4000517	            0x4154	                                push r12	       886	undo.c	FUNCTION_15
0x4000519	              0x55	                                push rbp	       886	undo.c	FUNCTION_15
0x400051a	          0x4989f4	                            mov r12, rsi	       886	undo.c	FUNCTION_15
0x400051d	              0x53	                                push rbx	       886	undo.c	FUNCTION_15
0x400051e	      0x48837f1800	               cmp qword [rdi + 0x18], 0	       888	undo.c	FUNCTION_15	IF_1
0x4000523	          0x4889d5	                            mov rbp, rdx	       886	undo.c	FUNCTION_15
0x4000526	     0xf84d0000000	                            je 0x40005fc	       888	undo.c	FUNCTION_15	IF_1
0x400052c	        0x488b7f20	            mov rdi, qword [rdi + 0x20] 	       888	undo.c	FUNCTION_15	IF_1
0x4000530	    0x41bd00200000	                        mov r13d, 0x2000	       895	undo.c	FUNCTION_15	IF_1	WHILE_1
0x4000536	      0x488d443d00	                    lea rax, [rbp + rdi]	       893	undo.c	FUNCTION_15	IF_1	WHILE_1
0x400053b	    0x483dff1f0000	                         cmp rax, 0x1fff	       893	undo.c	FUNCTION_15	IF_1	WHILE_1
0x4000541	            0x767d	                           jbe 0x40005c0	       893	undo.c	FUNCTION_15	IF_1	WHILE_1
0x4000543	          0x4c89eb	                            mov rbx, r13	       895	undo.c	FUNCTION_15	IF_1	WHILE_1
0x4000546	          0x4c89e6	                            mov rsi, r12	        59	string3.h	FUNCTION_68	CALL_3
0x4000549	          0x4829fb	                            sub rbx, rdi	       895	undo.c	FUNCTION_15	IF_1	WHILE_1
0x400054c	        0x49037e18	             add rdi, qword [r14 + 0x18]	        59	string3.h	FUNCTION_68	CALL_3
0x4000550	          0x4889da	                            mov rdx, rbx	        59	string3.h	FUNCTION_68	CALL_3
0x4000553	      0xe800000000	                          call 0x4000558	        59	string3.h	FUNCTION_68	CALL_3
0x4000558	        0x498b7618	            mov rsi, qword [r14 + 0x18] 	       921	undo.c	FUNCTION_16	IF_1
0x400055c	    0x49c746200020	         mov qword [r14 + 0x20], 0x2000 	       900	undo.c	FUNCTION_15	IF_1	WHILE_1
0x4000564	          0x4885f6	                           test rsi, rsi	       921	undo.c	FUNCTION_16	IF_1
0x4000567	            0x743f	                            je 0x40005a8	       921	undo.c	FUNCTION_16	IF_1
0x4000569	        0x498b7e10	            mov rdi, qword [r14 + 0x10] 	       921	undo.c	FUNCTION_16	IF_1
0x400056d	          0x4885ff	                           test rdi, rdi	       921	undo.c	FUNCTION_16	IF_1
0x4000570	            0x7436	                            je 0x40005a8	       921	undo.c	FUNCTION_16	IF_1
0x4000572	      0xba00200000	                         mov edx, 0x2000	       923	undo.c	FUNCTION_16	IF_1	CALL_1
0x4000577	      0xe800000000	                          call 0x400057c	       923	undo.c	FUNCTION_16	IF_1	CALL_1
0x400057c	        0x498b4e08	                mov rcx, qword [r14 + 8]	       924	undo.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x4000580	        0x498b7620	            mov rsi, qword [r14 + 0x20] 	       924	undo.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x4000584	      0xba01000000	                              mov edx, 1	       924	undo.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x4000589	        0x498b7e18	            mov rdi, qword [r14 + 0x18] 	       924	undo.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x400058d	      0xe800000000	                          call 0x4000592	       924	undo.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x4000592	        0x4883f801	                              cmp rax, 1	       924	undo.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x4000596	            0x7458	                            je 0x40005f0	       924	undo.c	FUNCTION_16	IF_1	IF_2	CALL_2
0x4000598	            0x31db	                            xor ebx, ebx	       902	undo.c	FUNCTION_15	IF_1	WHILE_1	IF_2
0x400059a	            0x89d8	                            mov eax, ebx	       915	undo.c	FUNCTION_15
0x400059c	              0x5b	                                 pop rbx	       915	undo.c	FUNCTION_15
0x400059d	              0x5d	                                 pop rbp	       915	undo.c	FUNCTION_15
0x400059e	            0x415c	                                 pop r12	       915	undo.c	FUNCTION_15
0x40005a0	            0x415d	                                 pop r13	       915	undo.c	FUNCTION_15
0x40005a2	            0x415e	                                 pop r14	       915	undo.c	FUNCTION_15
0x40005a4	              0xc3	                                     ret	       915	undo.c	FUNCTION_15
0x40005a5	           0xf1f00	                         nop dword [rax]	       915	undo.c	FUNCTION_15
0x40005a8	      0xbf00200000	                         mov edi, 0x2000	       921	undo.c	FUNCTION_16	IF_1
0x40005ad	          0x4829dd	                            sub rbp, rbx	       898	undo.c	FUNCTION_15	IF_1	WHILE_1
0x40005b0	          0x4901dc	                            add r12, rbx	       899	undo.c	FUNCTION_15	IF_1	WHILE_1
0x40005b3	      0x488d443d00	                    lea rax, [rbp + rdi]	       893	undo.c	FUNCTION_15	IF_1	WHILE_1
0x40005b8	    0x483dff1f0000	                         cmp rax, 0x1fff	       893	undo.c	FUNCTION_15	IF_1	WHILE_1
0x40005be	            0x7783	                            ja 0x4000543	       893	undo.c	FUNCTION_15	IF_1	WHILE_1
0x40005c0	          0x4885ed	                           test rbp, rbp	       904	undo.c	FUNCTION_15	IF_1	IF_3
0x40005c3	      0xbb01000000	                              mov ebx, 1	       909	undo.c	FUNCTION_15	IF_1
0x40005c8	            0x74d0	                            je 0x400059a	       904	undo.c	FUNCTION_15	IF_1	IF_3
0x40005ca	        0x49037e18	             add rdi, qword [r14 + 0x18]	        59	string3.h	FUNCTION_68	CALL_3
0x40005ce	          0x4889ea	                            mov rdx, rbp	        59	string3.h	FUNCTION_68	CALL_3
0x40005d1	          0x4c89e6	                            mov rsi, r12	        59	string3.h	FUNCTION_68	CALL_3
0x40005d4	      0xe800000000	                          call 0x40005d9	        59	string3.h	FUNCTION_68	CALL_3
0x40005d9	        0x49016e20	            add qword [r14 + 0x20], rbp 	       907	undo.c	FUNCTION_15	IF_1	IF_3
0x40005dd	            0x89d8	                            mov eax, ebx	       915	undo.c	FUNCTION_15
0x40005df	              0x5b	                                 pop rbx	       915	undo.c	FUNCTION_15
0x40005e0	              0x5d	                                 pop rbp	       915	undo.c	FUNCTION_15
0x40005e1	            0x415c	                                 pop r12	       915	undo.c	FUNCTION_15
0x40005e3	            0x415d	                                 pop r13	       915	undo.c	FUNCTION_15
0x40005e5	            0x415e	                                 pop r14	       915	undo.c	FUNCTION_15
0x40005e7	              0xc3	                                     ret	       915	undo.c	FUNCTION_15
0x40005e8	     0xf1f84000000	                   nop dword [rax + rax]	       915	undo.c	FUNCTION_15
0x40005f0	    0x49c746200000	               mov qword [r14 + 0x20], 0	       926	undo.c	FUNCTION_16	IF_1
0x40005f8	            0x31ff	                            xor edi, edi	       926	undo.c	FUNCTION_16	IF_1
0x40005fa	            0xebb1	                           jmp 0x40005ad	       926	undo.c	FUNCTION_16	IF_1
0x40005fc	        0x488b4f08	                mov rcx, qword [rdi + 8]	       912	undo.c	FUNCTION_15	IF_4	CALL_4
0x4000600	      0xba01000000	                              mov edx, 1	       912	undo.c	FUNCTION_15	IF_4	CALL_4
0x4000605	          0x4889ee	                            mov rsi, rbp	       912	undo.c	FUNCTION_15	IF_4	CALL_4
0x4000608	          0x4c89e7	                            mov rdi, r12	       912	undo.c	FUNCTION_15	IF_4	CALL_4
0x400060b	            0x31db	                            xor ebx, ebx	       902	undo.c	FUNCTION_15	IF_1	WHILE_1	IF_2
0x400060d	      0xe800000000	                          call 0x4000612	       912	undo.c	FUNCTION_15	IF_4	CALL_4
0x4000612	        0x4883f801	                              cmp rax, 1	       902	undo.c	FUNCTION_15	IF_1	WHILE_1	IF_2
0x4000616	           0xf94c3	                                 sete bl	       902	undo.c	FUNCTION_15	IF_1	WHILE_1	IF_2
0x4000619	      0xe97cffffff	                           jmp 0x400059a	       902	undo.c	FUNCTION_15	IF_1	WHILE_1	IF_2
u_undo	IF,2:CALL,3:functions,0:FOR,0:DO,0:WHILE,0:ELSE,1:SWITCH,0	68
0x4003fa0	    0x488b05000000	            mov rax, qword [0x04003fa7] 	      2155	undo.c	FUNCTION_37	IF_1
0x4003fa7	              0x53	                                push rbx	      2149	undo.c	FUNCTION_37
0x4003fa8	            0x89fb	                            mov ebx, edi	      2149	undo.c	FUNCTION_37
0x4003faa	    0x8bb834120000	          mov edi, dword [rax + 0x1234] 	      2155	undo.c	FUNCTION_37	IF_1
0x4003fb0	            0x85ff	                           test edi, edi	      2155	undo.c	FUNCTION_37	IF_1
0x4003fb2	     0xf8498000000	                            je 0x4004050	      2155	undo.c	FUNCTION_37	IF_1
0x4003fb8	    0x488b3d000000	            mov rdi, qword [0x04003fbf] 	      2161	undo.c	FUNCTION_37	IF_2	CALL_2
0x4003fbf	      0xbe75000000	                           mov esi, 0x75	      2161	undo.c	FUNCTION_37	IF_2	CALL_2
0x4003fc4	      0xe800000000	                          call 0x4003fc9	      2161	undo.c	FUNCTION_37	IF_2	CALL_2
0x4003fc9	          0x4885c0	                           test rax, rax	      2161	undo.c	FUNCTION_37	IF_2	CALL_2
0x4003fcc	     0xf84ce000000	                            je 0x40040a0	      2161	undo.c	FUNCTION_37	IF_2	CALL_2
0x4003fd2	    0x8b3500000000	            mov esi, dword [0x04003fd8] 	      2164	undo.c	FUNCTION_37	ELSE_1
0x4003fd8	            0x31c0	                            xor eax, eax	      2164	undo.c	FUNCTION_37	ELSE_1
0x4003fda	            0x85f6	                           test esi, esi	      2164	undo.c	FUNCTION_37	ELSE_1
0x4003fdc	           0xf94c0	                                 sete al	      2164	undo.c	FUNCTION_37	ELSE_1
0x4003fdf	    0x890500000000	            mov dword [0x04003fe5], eax 	      2164	undo.c	FUNCTION_37	ELSE_1
0x4003fe5	    0x488b05000000	            mov rax, qword [0x04003fec] 	       335	undo.c	FUNCTION_8	IF_1
0x4003fec	      0xba05000000	                              mov edx, 5	       337	undo.c	FUNCTION_8	IF_1	CALL_2
0x4003ff1	      0xbe00000000	                              mov esi, 0	       337	undo.c	FUNCTION_8	IF_1	CALL_2
0x4003ff6	    0x8b8840150000	          mov ecx, dword [rax + 0x1540] 	       335	undo.c	FUNCTION_8	IF_1
0x4003ffc	            0x85c9	                           test ecx, ecx	       335	undo.c	FUNCTION_8	IF_1
0x4003ffe	            0x743a	                            je 0x400403a	       335	undo.c	FUNCTION_8	IF_1
0x4004000	    0x8b1500000000	            mov edx, dword [0x04004006] 	       343	undo.c	FUNCTION_8	IF_2
0x4004006	            0x85d2	                           test edx, edx	       343	undo.c	FUNCTION_8	IF_2
0x4004008	            0x7526	                           jne 0x4004030	       343	undo.c	FUNCTION_8	IF_2
0x400400a	    0x8b0500000000	            mov eax, dword [0x04004010] 	       352	undo.c	FUNCTION_8	IF_3
0x4004010	      0xba05000000	                              mov edx, 5	       354	undo.c	FUNCTION_8	IF_3	CALL_6
0x4004015	      0xbe00000000	                              mov esi, 0	       354	undo.c	FUNCTION_8	IF_3	CALL_6
0x400401a	            0x85c0	                           test eax, eax	       352	undo.c	FUNCTION_8	IF_3
0x400401c	            0x751c	                           jne 0x400403a	       352	undo.c	FUNCTION_8	IF_3
0x400401e	            0x89df	                            mov edi, ebx	       352	undo.c	FUNCTION_8	IF_3
0x4004020	              0x5b	                                 pop rbx	      2166	undo.c	FUNCTION_37
0x4004021	      0xe91ad3ffff	                   jmp sym.u_doit.part.9	      2166	undo.c	FUNCTION_37
0x4004026	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2166	undo.c	FUNCTION_37
0x4004030	      0xba05000000	                              mov edx, 5	       345	undo.c	FUNCTION_8	IF_2	CALL_4
0x4004035	      0xbe00000000	                              mov esi, 0	       345	undo.c	FUNCTION_8	IF_2	CALL_4
0x400403a	            0x31ff	                            xor edi, edi	       345	undo.c	FUNCTION_8	IF_2	CALL_4
0x400403c	      0xe800000000	                          call 0x4004041	       345	undo.c	FUNCTION_8	IF_2	CALL_4
0x4004041	              0x5b	                                 pop rbx	      2166	undo.c	FUNCTION_37
0x4004042	          0x4889c7	                            mov rdi, rax	       345	undo.c	FUNCTION_8	IF_2	CALL_4
0x4004045	      0xe900000000	                           jmp 0x400404a	       345	undo.c	FUNCTION_8	IF_2	CALL_4
0x400404a	    0x660f1f440000	                    nop word [rax + rax]	       345	undo.c	FUNCTION_8	IF_2	CALL_4
0x4004050	    0x48833d000000	               cmp qword [0x04004058], 0	      2990	undo.c	FUNCTION_43	IF_2	CALL_1
0x4004058	            0x746e	                            je 0x40040c8	      2990	undo.c	FUNCTION_43	IF_2	CALL_1
0x400405a	    0x488b90481600	          mov rdx, qword [rax + 0x1648] 	       367	undo.c	FUNCTION_9	IF_1
0x4004061	    0x4881fac01dfe	             cmp rdx, 0xfffffffffffe1dc0	       368	undo.c	FUNCTION_9	IF_1
0x4004068	    0x480f44150000	           cmove rdx, qword [0x04004070]	       368	undo.c	FUNCTION_9	IF_1
0x4004070	          0x4885d2	                           test rdx, rdx	      2993	undo.c	FUNCTION_43	IF_3	CALL_2
0x4004073	            0x783b	                            js 0x40040b0	      2993	undo.c	FUNCTION_43	IF_3	CALL_2
0x4004075	      0xe8d6c3ffff	                       call sym.u_getbot	      2997	undo.c	FUNCTION_43	ELSE_1	CALL_3
0x400407a	    0x488b05000000	            mov rax, qword [0x04004081] 	      2998	undo.c	FUNCTION_43	ELSE_1
0x4004081	      0xbb01000000	                              mov ebx, 1	      2158	undo.c	FUNCTION_37	IF_1
0x4004086	    0x48c780281200	            mov qword [rax + 0x1228], 0 	      2998	undo.c	FUNCTION_43	ELSE_1
0x4004091	      0xe922ffffff	                           jmp 0x4003fb8	      2998	undo.c	FUNCTION_43	ELSE_1
0x4004096	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2998	undo.c	FUNCTION_43	ELSE_1
0x40040a0	      0xb801000000	                              mov eax, 1	      2162	undo.c	FUNCTION_37	IF_2
0x40040a5	      0xe935ffffff	                           jmp 0x4003fdf	      2162	undo.c	FUNCTION_37	IF_2
0x40040aa	    0x660f1f440000	                    nop word [rax + rax]	      2162	undo.c	FUNCTION_37	IF_2
0x40040b0	    0xc78034120000	            mov dword [rax + 0x1234], 1 	      2994	undo.c	FUNCTION_43	IF_3
0x40040ba	      0xbb01000000	                              mov ebx, 1	      2158	undo.c	FUNCTION_37	IF_1
0x40040bf	      0xe9f4feffff	                           jmp 0x4003fb8	      2158	undo.c	FUNCTION_37	IF_1
0x40040c4	         0xf1f4000	                         nop dword [rax]	      2158	undo.c	FUNCTION_37	IF_1
0x40040c8	      0xe800000000	                          call 0x40040cd	      2990	undo.c	FUNCTION_43	IF_2	CALL_1
0x40040cd	            0x85c0	                           test eax, eax	      2990	undo.c	FUNCTION_43	IF_2	CALL_1
0x40040cf	      0xbb01000000	                              mov ebx, 1	      2158	undo.c	FUNCTION_37	IF_1
0x40040d4	     0xf85defeffff	                           jne 0x4003fb8	      2990	undo.c	FUNCTION_43	IF_2	CALL_1
0x40040da	    0x488b05000000	            mov rax, qword [0x040040e1] 	      2990	undo.c	FUNCTION_43	IF_2	CALL_1
0x40040e1	      0xe974ffffff	                           jmp 0x400405a	      2990	undo.c	FUNCTION_43	IF_2	CALL_1
u_eval_tree	IF,6:CALL,10:functions,0:FOR,0:DO,0:WHILE,1:ELSE,0:SWITCH,0	78
0x4006f20	          0x4885ff	                           test rdi, rdi	      3563	undo.c	FUNCTION_66	WHILE_1
0x4006f23	     0xf8431010000	                            je 0x400705a	      3563	undo.c	FUNCTION_66	WHILE_1
0x4006f29	            0x4155	                                push r13	      3559	undo.c	FUNCTION_66
0x4006f2b	            0x4154	                                push r12	      3559	undo.c	FUNCTION_66
0x4006f2d	          0x4989f5	                            mov r13, rsi	      3559	undo.c	FUNCTION_66
0x4006f30	              0x55	                                push rbp	      3559	undo.c	FUNCTION_66
0x4006f31	              0x53	                                push rbx	      3559	undo.c	FUNCTION_66
0x4006f32	          0x4889fb	                            mov rbx, rdi	      3559	undo.c	FUNCTION_66
0x4006f35	        0x4883ec08	                              sub rsp, 8	      3559	undo.c	FUNCTION_66
0x4006f39	            0xeb75	                           jmp 0x4006fb0	      3559	undo.c	FUNCTION_66
0x4006f3b	       0xf1f440000	                   nop dword [rax + rax]	      3559	undo.c	FUNCTION_66
0x4006f40	    0x483998281200	          cmp qword [rax + 0x1228], rbx 	      3572	undo.c	FUNCTION_66	WHILE_1	IF_3
0x4006f47	     0xf84e3000000	                            je 0x4007030	      3572	undo.c	FUNCTION_66	WHILE_1	IF_3
0x4006f4d	    0x488b93300200	           mov rdx, qword [rbx + 0x230] 	      3574	undo.c	FUNCTION_66	WHILE_1	IF_4
0x4006f54	          0x4885d2	                           test rdx, rdx	      3574	undo.c	FUNCTION_66	WHILE_1	IF_4
0x4006f57	            0x7e0f	                           jle 0x4006f68	      3574	undo.c	FUNCTION_66	WHILE_1	IF_4
0x4006f59	            0x31c9	                            xor ecx, ecx	      3575	undo.c	FUNCTION_66	WHILE_1	CALL_6
0x4006f5b	      0xbe00000000	                              mov esi, 0	      3575	undo.c	FUNCTION_66	WHILE_1	CALL_6
0x4006f60	          0x4889ef	                            mov rdi, rbp	      3575	undo.c	FUNCTION_66	WHILE_1	CALL_6
0x4006f63	      0xe800000000	                          call 0x4006f68	      3575	undo.c	FUNCTION_66	WHILE_1	CALL_6
0x4006f68	      0x48837b1000	               cmp qword [rbx + 0x10], 0	      3577	undo.c	FUNCTION_66	WHILE_1	IF_5
0x4006f6d	            0x7429	                            je 0x4006f98	      3577	undo.c	FUNCTION_66	WHILE_1	IF_5
0x4006f6f	      0xe800000000	                          call 0x4006f74	      3579	undo.c	FUNCTION_66	WHILE_1	IF_5	CALL_7
0x4006f74	          0x4885c0	                           test rax, rax	      3581	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6
0x4006f77	          0x4989c4	                            mov r12, rax	      3579	undo.c	FUNCTION_66	WHILE_1	IF_5	CALL_7
0x4006f7a	            0x741c	                            je 0x4006f98	      3581	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6
0x4006f7c	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3584	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6	CALL_8
0x4006f80	          0x4889c6	                            mov rsi, rax	      3584	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6	CALL_8
0x4006f83	      0xe800000000	                          call 0x4006f88	      3584	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6	CALL_8
0x4006f88	          0x4c89e2	                            mov rdx, r12	      3585	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6	CALL_9
0x4006f8b	      0xbe00000000	                              mov esi, 0	      3585	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6	CALL_9
0x4006f90	          0x4889ef	                            mov rdi, rbp	      3585	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6	CALL_9
0x4006f93	      0xe800000000	                          call 0x4006f98	      3585	undo.c	FUNCTION_66	WHILE_1	IF_5	IF_6	CALL_9
0x4006f98	          0x4889ee	                            mov rsi, rbp	      3589	undo.c	FUNCTION_66	WHILE_1	CALL_10
0x4006f9b	          0x4c89ef	                            mov rdi, r13	      3589	undo.c	FUNCTION_66	WHILE_1	CALL_10
0x4006f9e	      0xe800000000	                          call 0x4006fa3	      3589	undo.c	FUNCTION_66	WHILE_1	CALL_10
0x4006fa3	        0x488b5b08	                mov rbx, qword [rbx + 8]	      3590	undo.c	FUNCTION_66	WHILE_1
0x4006fa7	          0x4885db	                           test rbx, rbx	      3563	undo.c	FUNCTION_66	WHILE_1
0x4006faa	     0xf84a0000000	                            je 0x4007050	      3563	undo.c	FUNCTION_66	WHILE_1
0x4006fb0	      0xe800000000	                          call 0x4006fb5	      3565	undo.c	FUNCTION_66	WHILE_1	CALL_1
0x4006fb5	          0x4885c0	                           test rax, rax	      3566	undo.c	FUNCTION_66	WHILE_1	IF_1
0x4006fb8	          0x4889c5	                            mov rbp, rax	      3565	undo.c	FUNCTION_66	WHILE_1	CALL_1
0x4006fbb	     0xf848f000000	                            je 0x4007050	      3566	undo.c	FUNCTION_66	WHILE_1	IF_1
0x4006fc1	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	      3568	undo.c	FUNCTION_66	WHILE_1	CALL_2
0x4006fc5	            0x31c9	                            xor ecx, ecx	      3568	undo.c	FUNCTION_66	WHILE_1	CALL_2
0x4006fc7	      0xbe00000000	                              mov esi, 0	      3568	undo.c	FUNCTION_66	WHILE_1	CALL_2
0x4006fcc	          0x4889c7	                            mov rdi, rax	      3568	undo.c	FUNCTION_66	WHILE_1	CALL_2
0x4006fcf	      0xe800000000	                          call 0x4006fd4	      3568	undo.c	FUNCTION_66	WHILE_1	CALL_2
0x4006fd4	    0x488b93280200	           mov rdx, qword [rbx + 0x228] 	      3569	undo.c	FUNCTION_66	WHILE_1	CALL_3
0x4006fdb	            0x31c9	                            xor ecx, ecx	      3569	undo.c	FUNCTION_66	WHILE_1	CALL_3
0x4006fdd	      0xbe00000000	                              mov esi, 0	      3569	undo.c	FUNCTION_66	WHILE_1	CALL_3
0x4006fe2	          0x4889ef	                            mov rdi, rbp	      3569	undo.c	FUNCTION_66	WHILE_1	CALL_3
0x4006fe5	      0xe800000000	                          call 0x4006fea	      3569	undo.c	FUNCTION_66	WHILE_1	CALL_3
0x4006fea	    0x488b05000000	            mov rax, qword [0x04006ff1] 	      3570	undo.c	FUNCTION_66	WHILE_1	IF_2
0x4006ff1	    0x483998201200	          cmp qword [rax + 0x1220], rbx 	      3570	undo.c	FUNCTION_66	WHILE_1	IF_2
0x4006ff8	     0xf8542ffffff	                           jne 0x4006f40	      3570	undo.c	FUNCTION_66	WHILE_1	IF_2
0x4006ffe	            0x31c9	                            xor ecx, ecx	      3571	undo.c	FUNCTION_66	WHILE_1	CALL_4
0x4007000	      0xba01000000	                              mov edx, 1	      3571	undo.c	FUNCTION_66	WHILE_1	CALL_4
0x4007005	      0xbe00000000	                              mov esi, 0	      3571	undo.c	FUNCTION_66	WHILE_1	CALL_4
0x400700a	          0x4889ef	                            mov rdi, rbp	      3571	undo.c	FUNCTION_66	WHILE_1	CALL_4
0x400700d	      0xe800000000	                          call 0x4007012	      3571	undo.c	FUNCTION_66	WHILE_1	CALL_4
0x4007012	    0x488b05000000	            mov rax, qword [0x04007019] 	      3571	undo.c	FUNCTION_66	WHILE_1	CALL_4
0x4007019	    0x483998281200	          cmp qword [rax + 0x1228], rbx 	      3572	undo.c	FUNCTION_66	WHILE_1	IF_3
0x4007020	     0xf8527ffffff	                           jne 0x4006f4d	      3572	undo.c	FUNCTION_66	WHILE_1	IF_3
0x4007026	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3572	undo.c	FUNCTION_66	WHILE_1	IF_3
0x4007030	            0x31c9	                            xor ecx, ecx	      3573	undo.c	FUNCTION_66	WHILE_1	CALL_5
0x4007032	      0xba01000000	                              mov edx, 1	      3573	undo.c	FUNCTION_66	WHILE_1	CALL_5
0x4007037	      0xbe00000000	                              mov esi, 0	      3573	undo.c	FUNCTION_66	WHILE_1	CALL_5
0x400703c	          0x4889ef	                            mov rdi, rbp	      3573	undo.c	FUNCTION_66	WHILE_1	CALL_5
0x400703f	      0xe800000000	                          call 0x4007044	      3573	undo.c	FUNCTION_66	WHILE_1	CALL_5
0x4007044	      0xe904ffffff	                           jmp 0x4006f4d	      3573	undo.c	FUNCTION_66	WHILE_1	CALL_5
0x4007049	     0xf1f80000000	                         nop dword [rax]	      3573	undo.c	FUNCTION_66	WHILE_1	CALL_5
0x4007050	        0x4883c408	                              add rsp, 8	      3592	undo.c	FUNCTION_66
0x4007054	              0x5b	                                 pop rbx	      3592	undo.c	FUNCTION_66
0x4007055	              0x5d	                                 pop rbp	      3592	undo.c	FUNCTION_66
0x4007056	            0x415c	                                 pop r12	      3592	undo.c	FUNCTION_66
0x4007058	            0x415d	                                 pop r13	      3592	undo.c	FUNCTION_66
0x400705a	            0xf3c3	                                     ret	      3592	undo.c	FUNCTION_66
undo_time	IF,47:CALL,14:functions,0:FOR,1:DO,0:WHILE,6:ELSE,18:SWITCH,0	523
0x4004180	            0x4157	                                push r15	      2266	undo.c	FUNCTION_40
0x4004182	            0x4156	                                push r14	      2266	undo.c	FUNCTION_40
0x4004184	            0x4155	                                push r13	      2266	undo.c	FUNCTION_40
0x4004186	            0x4154	                                push r12	      2266	undo.c	FUNCTION_40
0x4004188	              0x55	                                push rbp	      2266	undo.c	FUNCTION_40
0x4004189	              0x53	                                push rbx	      2266	undo.c	FUNCTION_40
0x400418a	        0x4883ec48	                           sub rsp, 0x48	      2266	undo.c	FUNCTION_40
0x400418e	    0x4c8b0d000000	              mov r9, qword [0x04004195]	      2283	undo.c	FUNCTION_40	IF_1
0x4004195	      0x48897c2408	                mov qword [rsp + 8], rdi	      2266	undo.c	FUNCTION_40
0x400419a	        0x894c2414	             mov dword [rsp + 0x14], ecx	      2266	undo.c	FUNCTION_40
0x400419e	    0x458b81341200	           mov r8d, dword [r9 + 0x1234] 	      2283	undo.c	FUNCTION_40	IF_1
0x40041a5	          0x4585c0	                           test r8d, r8d	      2283	undo.c	FUNCTION_40	IF_1
0x40041a8	     0xf8403040000	                            je 0x40045b1	      2283	undo.c	FUNCTION_40	IF_1
0x40041ae	      0x41f6411001	                test byte [r9 + 0x10], 1	      2288	undo.c	FUNCTION_40	IF_2
0x40041b3	    0x48c705000000	               mov qword [0x040041be], 0	      2286	undo.c	FUNCTION_40
0x40041be	    0x48c705000000	               mov qword [0x040041c9], 0	      2287	undo.c	FUNCTION_40
0x40041c9	            0x740b	                            je 0x40041d6	      2288	undo.c	FUNCTION_40	IF_2
0x40041cb	    0x48c705000000	mov qword [0x040041d6], 0xffffffffffffffff 	      2289	undo.c	FUNCTION_40	IF_2
0x40041d6	        0x8b7c2414	            mov edi, dword [rsp + 0x14] 	      2293	undo.c	FUNCTION_40	IF_3
0x40041da	            0x85ff	                           test edi, edi	      2293	undo.c	FUNCTION_40	IF_3
0x40041dc	     0xf847e020000	                            je 0x4004460	      2293	undo.c	FUNCTION_40	IF_3
0x40041e2	    0x498b81481200	           mov rax, qword [r9 + 0x1248] 	      2293	undo.c	FUNCTION_40	IF_3
0x40041e9	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	      2293	undo.c	FUNCTION_40	IF_3
0x40041ee	    0x49c7c7ffffff	             mov r15, 0xffffffffffffffff	      2296	undo.c	FUNCTION_40	IF_3
0x40041f5	      0x4889442428	             mov qword [rsp + 0x28], rax	      2296	undo.c	FUNCTION_40	IF_3
0x40041fa	          0x4d85ed	                           test r13, r13	      2363	undo.c	FUNCTION_40	IF_16
0x40041fd	     0xf84c3050000	                            je 0x40047c6	      2363	undo.c	FUNCTION_40	IF_16
0x4004203	    0x8b0500000000	            mov eax, dword [0x04004209] 	      2363	undo.c	FUNCTION_40	IF_16
0x4004209	    0x4d8b99281200	           mov r11, qword [r9 + 0x1228] 	      2386	undo.c	FUNCTION_40	FOR_1	IF_17
0x4004210	          0x4531f6	                          xor r14d, r14d	      2386	undo.c	FUNCTION_40	FOR_1	IF_17
0x4004213	      0x4c8b642428	            mov r12, qword [rsp + 0x28] 	      2386	undo.c	FUNCTION_40	FOR_1	IF_17
0x4004218	      0x4c897c2418	             mov qword [rsp + 0x18], r15	      2386	undo.c	FUNCTION_40	FOR_1	IF_17
0x400421d	    0x41b801000000	                              mov r8d, 1	      2386	undo.c	FUNCTION_40	FOR_1	IF_17
0x4004223	          0x4d89ca	                             mov r10, r9	      2386	undo.c	FUNCTION_40	FOR_1	IF_17
0x4004226	          0x8d4801	                      lea ecx, [rax + 1]	      2386	undo.c	FUNCTION_40	FOR_1	IF_17
0x4004229	          0x4d85db	                           test r11, r11	      2386	undo.c	FUNCTION_40	FOR_1	IF_17
0x400422c	          0x4c89d8	                            mov rax, r11	      2386	undo.c	FUNCTION_40	FOR_1	IF_17
0x400422f	            0x89cb	                            mov ebx, ecx	      2383	undo.c	FUNCTION_40	FOR_1
0x4004231	          0x8d6901	                      lea ebp, [rcx + 1]	      2383	undo.c	FUNCTION_40	FOR_1
0x4004234	     0xf84ba020000	                            je 0x40044f4	      2386	undo.c	FUNCTION_40	FOR_1	IF_17
0x400423a	      0x4c89542420	             mov qword [rsp + 0x20], r10	      2386	undo.c	FUNCTION_40	FOR_1	IF_17
0x400423f	            0xeb3e	                           jmp 0x400427f	      2386	undo.c	FUNCTION_40	FOR_1	IF_17
0x4004241	     0xf1f80000000	                         nop dword [rax]	      2386	undo.c	FUNCTION_40	FOR_1	IF_17
0x4004248	        0x4183f801	                              cmp r8d, 1	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x400424c	    0x488bb8280200	           mov rdi, qword [rax + 0x228] 	      2395	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_18
0x4004253	     0xf849f070000	                            je 0x40049f8	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x4004259	        0x488b7808	                mov rdi, qword [rax + 8]	      2436	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x400425d	          0x4885ff	                           test rdi, rdi	      2436	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x4004260	     0xf84ca000000	                            je 0x4004330	      2436	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x4004266	        0x448b4f28	            mov r9d, dword [rdi + 0x28] 	      2436	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x400426a	          0x4439cd	                            cmp ebp, r9d	      2437	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x400426d	     0xf84bd000000	                            je 0x4004330	      2437	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x4004273	          0x4439c9	                            cmp ecx, r9d	      2437	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x4004276	     0xf84b4000000	                            je 0x4004330	      2437	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x400427c	          0x4889f8	                            mov rax, rdi	      2437	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_23
0x400427f	            0x85f6	                           test esi, esi	      2394	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_18
0x4004281	          0x894828	             mov dword [rax + 0x28], ecx	      2393	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1
0x4004284	            0x75c2	                           jne 0x4004248	      2394	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_18
0x4004286	            0x85d2	                           test edx, edx	      2396	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_11	IF_19
0x4004288	     0xf84e2000000	                            je 0x4004370	      2396	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_11	IF_19
0x400428e	        0x4183f801	                              cmp r8d, 1	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x4004292	    0x488bb8300200	           mov rdi, qword [rax + 0x230] 	      2397	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_11	IF_19
0x4004299	     0xf8450060000	                            je 0x40048ef	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x400429f	          0x4c39ef	                            cmp rdi, r13	      2429	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_22
0x40042a2	            0x75b5	                           jne 0x4004259	      2429	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_22
0x40042a4	            0x85f6	                           test esi, esi	      2429	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_22
0x40042a6	            0x75b1	                           jne 0x4004259	      2429	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_22
0x40042a8	        0x4c8b6020	            mov r12, qword [rax + 0x20] 	      2431	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_22
0x40042ac	    0x892d00000000	            mov dword [0x040042b2], ebp 	      2431	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	IF_22
0x40042b2	          0x4589f5	                          mov r13d, r14d	      2512	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x40042b5	        0x4183f501	                             xor r13d, 1	      2512	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x40042b9	        0x4183e501	                             and r13d, 1	      2512	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x40042bd	          0x4d85e4	                           test r12, r12	      2512	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x40042c0	     0xf8f43030000	                            jg 0x4004609	      2512	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x40042c6	        0x4183f601	                             xor r14d, 1	      2512	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x40042ca	        0x4183e601	                             and r14d, 1	      2512	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x40042ce	            0xeb2c	                           jmp 0x40042fc	      2512	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x40042d0	          0x488b00	                    mov rax, qword [rax]	      2510	undo.c	FUNCTION_40	IF_33	WHILE_2	ELSE_18
0x40042d3	          0x4885c0	                           test rax, rax	      2511	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x40042d6	     0xf8413010000	                            je 0x40043ef	      2511	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x40042dc	        0x4c396020	            cmp qword [rax + 0x20], r12 	      2512	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x40042e0	            0x7509	                           jne 0x40042eb	      2512	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x40042e2	          0x4584f6	                         test r14b, r14b	      2512	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x40042e5	     0xf8504010000	                           jne 0x40043ef	      2512	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x40042eb	    0x488982281200	          mov qword [rdx + 0x1228], rax 	      2514	undo.c	FUNCTION_40	IF_33	WHILE_2
0x40042f2	      0xbf01000000	                              mov edi, 1	      2515	undo.c	FUNCTION_40	IF_33	WHILE_2	CALL_10
0x40042f7	      0xe834c7ffff	                     call sym.u_undoredo	      2515	undo.c	FUNCTION_40	IF_33	WHILE_2	CALL_10
0x40042fc	    0x8b0500000000	            mov eax, dword [0x04004302] 	      2501	undo.c	FUNCTION_40	IF_33	WHILE_2
0x4004302	            0x85c0	                           test eax, eax	      2501	undo.c	FUNCTION_40	IF_33	WHILE_2
0x4004304	     0xf85e5000000	                           jne 0x40043ef	      2501	undo.c	FUNCTION_40	IF_33	WHILE_2
0x400430a	            0x31ff	                            xor edi, edi	      2504	undo.c	FUNCTION_40	IF_33	WHILE_2	CALL_9
0x400430c	      0xe800000000	                          call 0x4004311	      2504	undo.c	FUNCTION_40	IF_33	WHILE_2	CALL_9
0x4004311	    0x488b15000000	            mov rdx, qword [0x04004318] 	      2506	undo.c	FUNCTION_40	IF_33	WHILE_2
0x4004318	    0x488b82281200	          mov rax, qword [rdx + 0x1228] 	      2506	undo.c	FUNCTION_40	IF_33	WHILE_2
0x400431f	          0x4885c0	                           test rax, rax	      2507	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_34
0x4004322	            0x75ac	                           jne 0x40042d0	      2507	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_34
0x4004324	    0x488b82201200	          mov rax, qword [rdx + 0x1220] 	      2508	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_34
0x400432b	            0xeba6	                           jmp 0x40042d3	      2508	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_34
0x400432d	           0xf1f00	                         nop dword [rax]	      2508	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_34
0x4004330	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      2441	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x4004334	          0x4885ff	                           test rdi, rdi	      2441	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x4004337	            0x7412	                            je 0x400434b	      2441	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x4004339	        0x448b4f28	            mov r9d, dword [rdi + 0x28] 	      2442	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x400433d	          0x4439cd	                            cmp ebp, r9d	      2443	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x4004340	            0x7409	                            je 0x400434b	      2443	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x4004342	          0x4439c9	                            cmp ecx, r9d	      2443	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x4004345	     0xf8531ffffff	                           jne 0x400427c	      2443	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_13	IF_24
0x400434b	          0x488b38	                    mov rdi, qword [rax]	      2448	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x400434e	          0x4885ff	                           test rdi, rdi	      2448	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x4004351	            0x743d	                            je 0x4004390	      2448	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x4004353	        0x4c8b4818	              mov r9, qword [rax + 0x18]	      2448	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x4004357	          0x4d85c9	                             test r9, r9	      2448	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x400435a	     0xf84d0000000	                            je 0x4004430	      2448	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x4004360	          0x896828	             mov dword [rax + 0x28], ebp	      2461	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15
0x4004363	          0x4c89c8	                             mov rax, r9	      2461	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15
0x4004366	      0xe914ffffff	                           jmp 0x400427f	      2461	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15
0x400436b	       0xf1f440000	                   nop dword [rax + rax]	      2461	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15
0x4004370	        0x4183f801	                              cmp r8d, 1	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x4004374	        0x488b7820	            mov rdi, qword [rax + 0x20] 	      2399	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12
0x4004378	     0xf8521ffffff	                           jne 0x400429f	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x400437e	      0x48897c2430	             mov qword [rsp + 0x30], rdi	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x4004383	          0x4989fa	                            mov r10, rdi	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x4004386	      0xe979050000	                           jmp 0x4004904	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x400438b	       0xf1f440000	                   nop dword [rax + rax]	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x4004390	        0x488b7818	            mov rdi, qword [rax + 0x18] 	      2462	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15	IF_27
0x4004394	          0x896828	             mov dword [rax + 0x28], ebp	      2461	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15
0x4004397	          0x4885ff	                           test rdi, rdi	      2462	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15	IF_27
0x400439a	     0xf85dcfeffff	                           jne 0x400427c	      2462	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15	IF_27
0x40043a0	      0x4c8b542420	            mov r10, qword [rsp + 0x20] 	      2462	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15	IF_27
0x40043a5	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      2472	undo.c	FUNCTION_40	FOR_1	IF_29
0x40043a9	            0x85c0	                           test eax, eax	      2472	undo.c	FUNCTION_40	FOR_1	IF_29
0x40043ab	     0xf8566040000	                           jne 0x4004817	      2472	undo.c	FUNCTION_40	FOR_1	IF_29
0x40043b1	      0x4c3b7c2418	            cmp r15, qword [rsp + 0x18] 	      2478	undo.c	FUNCTION_40	FOR_1	IF_30
0x40043b6	     0xf848d040000	                            je 0x4004849	      2478	undo.c	FUNCTION_40	FOR_1	IF_30
0x40043bc	    0x48837c240800	                  cmp qword [rsp + 8], 0	      2491	undo.c	FUNCTION_40	FOR_1	IF_32
0x40043c2	      0xb801000000	                              mov eax, 1	      2491	undo.c	FUNCTION_40	FOR_1	IF_32
0x40043c7	        0x440f48f0	                         cmovs r14d, eax	      2491	undo.c	FUNCTION_40	FOR_1	IF_32
0x40043cb	        0x4183c001	                              add r8d, 1	      2377	undo.c	FUNCTION_40	FOR_1
0x40043cf	          0x83c102	                              add ecx, 2	      2377	undo.c	FUNCTION_40	FOR_1
0x40043d2	            0x31f6	                            xor esi, esi	      2488	undo.c	FUNCTION_40	FOR_1
0x40043d4	            0x31d2	                            xor edx, edx	      2489	undo.c	FUNCTION_40	FOR_1
0x40043d6	        0x4183f803	                              cmp r8d, 3	      2377	undo.c	FUNCTION_40	FOR_1
0x40043da	     0xf8500010000	                           jne 0x40044e0	      2377	undo.c	FUNCTION_40	FOR_1
0x40043e0	          0x4d85e4	                           test r12, r12	      2496	undo.c	FUNCTION_40	IF_33
0x40043e3	    0x892d00000000	            mov dword [0x040043e9], ebp 	      2496	undo.c	FUNCTION_40	IF_33
0x40043e9	     0xf84d7feffff	                            je 0x40042c6	      2496	undo.c	FUNCTION_40	IF_33
0x40043ef	      0xbd01000000	                              mov ebp, 1	      2280	undo.c	FUNCTION_40
0x40043f4	    0xf60500000000	               test byte [0x040043fb], 2	      2909	undo.c	FUNCTION_42	IF_1
0x40043fb	            0x740e	                            je 0x400440b	      2909	undo.c	FUNCTION_42	IF_1
0x40043fd	    0x8b0d00000000	            mov ecx, dword [0x04004403] 	      2909	undo.c	FUNCTION_42	IF_1
0x4004403	            0x85c9	                           test ecx, ecx	      2909	undo.c	FUNCTION_42	IF_1
0x4004405	     0xf85b1030000	                           jne 0x40047bc	      2909	undo.c	FUNCTION_42	IF_1
0x400440b	    0x8b1500000000	            mov edx, dword [0x04004411] 	      2913	undo.c	FUNCTION_42	IF_2
0x4004411	            0x85d2	                           test edx, edx	      2913	undo.c	FUNCTION_42	IF_2
0x4004413	     0xf84f0000000	                            je 0x4004509	      2913	undo.c	FUNCTION_42	IF_2
0x4004419	        0x4883c448	                           add rsp, 0x48	      2602	undo.c	FUNCTION_40
0x400441d	              0x5b	                                 pop rbx	      2602	undo.c	FUNCTION_40
0x400441e	              0x5d	                                 pop rbp	      2602	undo.c	FUNCTION_40
0x400441f	            0x415c	                                 pop r12	      2602	undo.c	FUNCTION_40
0x4004421	            0x415d	                                 pop r13	      2602	undo.c	FUNCTION_40
0x4004423	            0x415e	                                 pop r14	      2602	undo.c	FUNCTION_40
0x4004425	            0x415f	                                 pop r15	      2602	undo.c	FUNCTION_40
0x4004427	              0xc3	                                     ret	      2602	undo.c	FUNCTION_40
0x4004428	     0xf1f84000000	                   nop dword [rax + rax]	      2602	undo.c	FUNCTION_40
0x4004430	        0x448b4f28	            mov r9d, dword [rdi + 0x28] 	      2449	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x4004434	          0x4439c9	                            cmp ecx, r9d	      2450	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x4004437	     0xf8459010000	                            je 0x4004596	      2450	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x400443d	          0x4439cd	                            cmp ebp, r9d	      2450	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x4004440	     0xf8450010000	                            je 0x4004596	      2450	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25
0x4004446	          0x4c39d8	                            cmp rax, r11	      2453	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25	IF_26
0x4004449	     0xf852dfeffff	                           jne 0x400427c	      2453	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25	IF_26
0x400444f	        0x41896b28	             mov dword [r11 + 0x28], ebp	      2454	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25	IF_26
0x4004453	      0xe924feffff	                           jmp 0x400427c	      2454	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25	IF_26
0x4004458	     0xf1f84000000	                   nop dword [rax + rax]	      2454	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_14	IF_25	IF_26
0x4004460	            0x85f6	                           test esi, esi	      2300	undo.c	FUNCTION_40	ELSE_1	IF_4
0x4004462	            0x7439	                            je 0x400449d	      2300	undo.c	FUNCTION_40	ELSE_1	IF_4
0x4004464	      0x488b442408	                mov rax, qword [rsp + 8]	      2301	undo.c	FUNCTION_40	ELSE_1	IF_4
0x4004469	          0x4989c5	                            mov r13, rax	      2301	undo.c	FUNCTION_40	ELSE_1	IF_4
0x400446c	    0x4d03a9501200	            add r13, qword [r9 + 0x1250]	      2301	undo.c	FUNCTION_40	ELSE_1	IF_4
0x4004473	          0x4885c0	                           test rax, rax	      2341	undo.c	FUNCTION_40	ELSE_1	ELSE_6	IF_11
0x4004476	     0xf89ee000000	                           jns 0x400456a	      2341	undo.c	FUNCTION_40	ELSE_1	ELSE_6	IF_11
0x400447c	          0x4d85ed	                           test r13, r13	      2343	undo.c	FUNCTION_40	ELSE_1	ELSE_6	IF_11	IF_12
0x400447f	     0xf8841030000	                            js 0x40047c6	      2343	undo.c	FUNCTION_40	ELSE_1	ELSE_6	IF_11	IF_12
0x4004485	    0x498b81481200	           mov rax, qword [r9 + 0x1248] 	      2343	undo.c	FUNCTION_40	ELSE_1	ELSE_6	IF_11	IF_12
0x400448c	    0x49c7c7ffffff	             mov r15, 0xffffffffffffffff	      2345	undo.c	FUNCTION_40	ELSE_1	ELSE_6	IF_11
0x4004493	      0x4889442428	             mov qword [rsp + 0x28], rax	      2345	undo.c	FUNCTION_40	ELSE_1	ELSE_6	IF_11
0x4004498	      0xe95dfdffff	                           jmp 0x40041fa	      2345	undo.c	FUNCTION_40	ELSE_1	ELSE_6	IF_11
0x400449d	            0x85d2	                           test edx, edx	      2302	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5
0x400449f	     0xf858a000000	                           jne 0x400452f	      2302	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5
0x40044a5	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      2340	undo.c	FUNCTION_40	ELSE_1	ELSE_6
0x40044aa	    0x498b81481200	           mov rax, qword [r9 + 0x1248] 	      2340	undo.c	FUNCTION_40	ELSE_1	ELSE_6
0x40044b1	          0x4885db	                           test rbx, rbx	      2341	undo.c	FUNCTION_40	ELSE_1	ELSE_6	IF_11
0x40044b4	        0x4c8d2c03	                    lea r13, [rbx + rax]	      2340	undo.c	FUNCTION_40	ELSE_1	ELSE_6
0x40044b8	            0x78c2	                            js 0x400447c	      2341	undo.c	FUNCTION_40	ELSE_1	ELSE_6	IF_11
0x40044ba	    0x498b91381200	           mov rdx, qword [r9 + 0x1238] 	      2341	undo.c	FUNCTION_40	ELSE_1	ELSE_6	IF_11
0x40044c1	        0x4c8d7a02	                      lea r15, [rdx + 2]	      2354	undo.c	FUNCTION_40	ELSE_1	ELSE_7	ELSE_9
0x40044c5	            0x31d2	                            xor edx, edx	      2354	undo.c	FUNCTION_40	ELSE_1	ELSE_7	ELSE_9
0x40044c7	      0x4889442428	             mov qword [rsp + 0x28], rax	      2354	undo.c	FUNCTION_40	ELSE_1	ELSE_7	ELSE_9
0x40044cc	        0x498d47ff	                      lea rax, [r15 - 1]	      2356	undo.c	FUNCTION_40	ELSE_1	ELSE_7	IF_15
0x40044d0	          0x4d39ef	                            cmp r15, r13	      2356	undo.c	FUNCTION_40	ELSE_1	ELSE_7	IF_15
0x40044d3	        0x4c0f4ee8	                         cmovle r13, rax	      2356	undo.c	FUNCTION_40	ELSE_1	ELSE_7	IF_15
0x40044d7	      0xe91efdffff	                           jmp 0x40041fa	      2356	undo.c	FUNCTION_40	ELSE_1	ELSE_7	IF_15
0x40044dc	         0xf1f4000	                         nop dword [rax]	      2356	undo.c	FUNCTION_40	ELSE_1	ELSE_7	IF_15
0x40044e0	          0x4d85db	                           test r11, r11	      2386	undo.c	FUNCTION_40	FOR_1	IF_17
0x40044e3	          0x4d89e5	                            mov r13, r12	      2386	undo.c	FUNCTION_40	FOR_1	IF_17
0x40044e6	            0x89cb	                            mov ebx, ecx	      2383	undo.c	FUNCTION_40	FOR_1
0x40044e8	          0x8d6901	                      lea ebp, [rcx + 1]	      2383	undo.c	FUNCTION_40	FOR_1
0x40044eb	          0x4c89d8	                            mov rax, r11	      2383	undo.c	FUNCTION_40	FOR_1
0x40044ee	     0xf8546fdffff	                           jne 0x400423a	      2386	undo.c	FUNCTION_40	FOR_1	IF_17
0x40044f4	    0x498b82201200	          mov rax, qword [r10 + 0x1220] 	      2387	undo.c	FUNCTION_40	FOR_1	IF_17
0x40044fb	          0x4885c0	                           test rax, rax	      2391	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1
0x40044fe	     0xf8536fdffff	                           jne 0x400423a	      2391	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1
0x4004504	      0xe99cfeffff	                           jmp 0x40043a5	      2391	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1
0x4004509	      0xe800000000	                          call 0x400450e	      2914	undo.c	FUNCTION_42	IF_2	CALL_2
0x400450e	            0x85c0	                           test eax, eax	      2914	undo.c	FUNCTION_42	IF_2	CALL_2
0x4004510	     0xf8403ffffff	                            je 0x4004419	      2914	undo.c	FUNCTION_42	IF_2	CALL_2
0x4004516	        0x8b742414	            mov esi, dword [rsp + 0x14] 	      2914	undo.c	FUNCTION_42	IF_2	CALL_2
0x400451a	        0x4883c448	                           add rsp, 0x48	      2602	undo.c	FUNCTION_40
0x400451e	            0x89ef	                            mov edi, ebp	      2602	undo.c	FUNCTION_40
0x4004520	              0x5b	                                 pop rbx	      2602	undo.c	FUNCTION_40
0x4004521	              0x5d	                                 pop rbp	      2602	undo.c	FUNCTION_40
0x4004522	            0x415c	                                 pop r12	      2602	undo.c	FUNCTION_40
0x4004524	            0x415d	                                 pop r13	      2602	undo.c	FUNCTION_40
0x4004526	            0x415e	                                 pop r14	      2602	undo.c	FUNCTION_40
0x4004528	            0x415f	                                 pop r15	      2602	undo.c	FUNCTION_40
0x400452a	      0xe931bcffff	               jmp sym.u_undo_end.part.7	      2602	undo.c	FUNCTION_40
0x400452f	    0x48837c240800	                  cmp qword [rsp + 8], 0	      2304	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6
0x4004535	     0xf8848030000	                            js 0x4004883	      2304	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6
0x400453b	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	      2329	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5
0x4004540	    0x4d03a9581200	            add r13, qword [r9 + 0x1258]	      2329	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5
0x4004547	    0x498b81401200	           mov rax, qword [r9 + 0x1240] 	      2330	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5	IF_10
0x400454e	          0x4939c5	                            cmp r13, rax	      2330	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5	IF_10
0x4004551	            0x7e4e	                           jle 0x40045a1	      2330	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5	IF_10
0x4004553	    0x498b91381200	           mov rdx, qword [r9 + 0x1238] 	      2334	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5	IF_10
0x400455a	    0x498b81481200	           mov rax, qword [r9 + 0x1248] 	      2334	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5	IF_10
0x4004561	        0x4c8d6a01	                      lea r13, [rdx + 1]	      2334	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5	IF_10
0x4004565	      0xe957ffffff	                           jmp 0x40044c1	      2334	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5	IF_10
0x400456a	        0x89542420	             mov dword [rsp + 0x20], edx	      2334	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5	IF_10
0x400456e	        0x89742418	             mov dword [rsp + 0x18], esi	      2334	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	ELSE_5	IF_10
0x4004572	      0xe800000000	                          call 0x4004577	      2350	undo.c	FUNCTION_40	ELSE_1	ELSE_7	CALL_2
0x4004577	    0x4c8b0d000000	              mov r9, qword [0x0400457e]	      2350	undo.c	FUNCTION_40	ELSE_1	ELSE_7	CALL_2
0x400457e	        0x4c8d7801	                      lea r15, [rax + 1]	      2350	undo.c	FUNCTION_40	ELSE_1	ELSE_7	CALL_2
0x4004582	        0x8b742418	            mov esi, dword [rsp + 0x18] 	      2350	undo.c	FUNCTION_40	ELSE_1	ELSE_7	CALL_2
0x4004586	        0x8b542420	            mov edx, dword [rsp + 0x20] 	      2350	undo.c	FUNCTION_40	ELSE_1	ELSE_7	CALL_2
0x400458a	    0x498b81481200	           mov rax, qword [r9 + 0x1248] 	      2350	undo.c	FUNCTION_40	ELSE_1	ELSE_7	CALL_2
0x4004591	      0xe931ffffff	                           jmp 0x40044c7	      2350	undo.c	FUNCTION_40	ELSE_1	ELSE_7	CALL_2
0x4004596	          0x896828	             mov dword [rax + 0x28], ebp	      2461	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15
0x4004599	          0x4889f8	                            mov rax, rdi	      2461	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15
0x400459c	      0xe9defcffff	                           jmp 0x400427f	      2461	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_15
0x40045a1	        0x4c8d7802	                      lea r15, [rax + 2]	      2352	undo.c	FUNCTION_40	ELSE_1	ELSE_7	ELSE_8	IF_14
0x40045a5	    0x498b81481200	           mov rax, qword [r9 + 0x1248] 	      2352	undo.c	FUNCTION_40	ELSE_1	ELSE_7	ELSE_8	IF_14
0x40045ac	      0xe916ffffff	                           jmp 0x40044c7	      2352	undo.c	FUNCTION_40	ELSE_1	ELSE_7	ELSE_8	IF_14
0x40045b1	    0x48833d000000	               cmp qword [0x040045b9], 0	      2990	undo.c	FUNCTION_43	IF_2	CALL_1
0x40045b9	     0xf8428020000	                            je 0x40047e7	      2990	undo.c	FUNCTION_43	IF_2	CALL_1
0x40045bf	    0x498b81481600	           mov rax, qword [r9 + 0x1648] 	       367	undo.c	FUNCTION_9	IF_1
0x40045c6	    0x483dc01dfeff	             cmp rax, 0xfffffffffffe1dc0	       368	undo.c	FUNCTION_9	IF_1
0x40045cc	    0x480f44050000	           cmove rax, qword [0x040045d4]	       368	undo.c	FUNCTION_9	IF_1
0x40045d4	          0x4885c0	                           test rax, rax	      2993	undo.c	FUNCTION_43	IF_3	CALL_2
0x40045d7	     0xf88fa010000	                            js 0x40047d7	      2993	undo.c	FUNCTION_43	IF_3	CALL_2
0x40045dd	        0x89542420	             mov dword [rsp + 0x20], edx	      2993	undo.c	FUNCTION_43	IF_3	CALL_2
0x40045e1	        0x89742418	             mov dword [rsp + 0x18], esi	      2993	undo.c	FUNCTION_43	IF_3	CALL_2
0x40045e5	      0xe866beffff	                       call sym.u_getbot	      2997	undo.c	FUNCTION_43	ELSE_1	CALL_3
0x40045ea	    0x4c8b0d000000	              mov r9, qword [0x040045f1]	      2998	undo.c	FUNCTION_43	ELSE_1
0x40045f1	        0x8b542420	            mov edx, dword [rsp + 0x20] 	      2998	undo.c	FUNCTION_43	ELSE_1
0x40045f5	        0x8b742418	            mov esi, dword [rsp + 0x18] 	      2998	undo.c	FUNCTION_43	ELSE_1
0x40045f9	    0x49c781281200	              mov qword [r9 + 0x1228], 0	      2998	undo.c	FUNCTION_43	ELSE_1
0x4004604	      0xe9a5fbffff	                           jmp 0x40041ae	      2998	undo.c	FUNCTION_43	ELSE_1
0x4004609	    0x8b0500000000	            mov eax, dword [0x0400460f] 	      2501	undo.c	FUNCTION_40	IF_33	WHILE_2
0x400460f	            0x85c0	                           test eax, eax	      2501	undo.c	FUNCTION_40	IF_33	WHILE_2
0x4004611	            0x7551	                           jne 0x4004664	      2501	undo.c	FUNCTION_40	IF_33	WHILE_2
0x4004613	            0x31ff	                            xor edi, edi	      2504	undo.c	FUNCTION_40	IF_33	WHILE_2	CALL_9
0x4004615	      0xe800000000	                          call 0x400461a	      2504	undo.c	FUNCTION_40	IF_33	WHILE_2	CALL_9
0x400461a	    0x488b05000000	            mov rax, qword [0x04004621] 	      2506	undo.c	FUNCTION_40	IF_33	WHILE_2
0x4004621	    0x488b90281200	          mov rdx, qword [rax + 0x1228] 	      2506	undo.c	FUNCTION_40	IF_33	WHILE_2
0x4004628	          0x4885d2	                           test rdx, rdx	      2507	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_34
0x400462b	     0xf849c020000	                            je 0x40048cd	      2507	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_34
0x4004631	          0x4c8b3a	                    mov r15, qword [rdx]	      2510	undo.c	FUNCTION_40	IF_33	WHILE_2	ELSE_18
0x4004634	          0x4d85ff	                           test r15, r15	      2511	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x4004637	            0x742b	                            je 0x4004664	      2511	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x4004639	        0x41395f28	            cmp dword [r15 + 0x28], ebx 	      2511	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x400463d	            0x7525	                           jne 0x4004664	      2511	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x400463f	        0x4d396720	            cmp qword [r15 + 0x20], r12 	      2512	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x4004643	            0x7505	                           jne 0x400464a	      2512	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x4004645	          0x4584ed	                         test r13b, r13b	      2512	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x4004648	            0x751a	                           jne 0x4004664	      2512	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_35
0x400464a	    0x4c89b8281200	          mov qword [rax + 0x1228], r15 	      2514	undo.c	FUNCTION_40	IF_33	WHILE_2
0x4004651	      0xbf01000000	                              mov edi, 1	      2515	undo.c	FUNCTION_40	IF_33	WHILE_2	CALL_10
0x4004656	      0xe8d5c3ffff	                     call sym.u_undoredo	      2515	undo.c	FUNCTION_40	IF_33	WHILE_2	CALL_10
0x400465b	        0x41896f28	             mov dword [r15 + 0x28], ebp	      2517	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_36
0x400465f	      0xe959fcffff	                           jmp 0x40042bd	      2517	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_36
0x4004664	      0xbd01000000	                              mov ebp, 1	      2517	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_36
0x4004669	        0x4183e601	                             and r14d, 1	      2573	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_44
0x400466d	           0xf1f00	                         nop dword [rax]	      2573	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_44
0x4004670	    0x8b0500000000	            mov eax, dword [0x04004676] 	      2526	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x4004676	            0x85c0	                           test eax, eax	      2526	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x4004678	     0xf8576fdffff	                           jne 0x40043f4	      2526	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x400467e	            0x31ff	                            xor edi, edi	      2529	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	CALL_11
0x4004680	      0xe800000000	                          call 0x4004685	      2529	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	CALL_11
0x4004685	    0x488b35000000	            mov rsi, qword [0x0400468c] 	      2531	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x400468c	    0x488b8e281200	          mov rcx, qword [rsi + 0x1228] 	      2531	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x4004693	          0x4885c9	                           test rcx, rcx	      2532	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_38
0x4004696	            0x7510	                           jne 0x40046a8	      2532	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_38
0x4004698	      0xe957fdffff	                           jmp 0x40043f4	      2532	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_38
0x400469d	           0xf1f00	                         nop dword [rax]	      2532	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_38
0x40046a0	          0x395828	            cmp dword [rax + 0x28], ebx 	      2537	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x40046a3	            0x750c	                           jne 0x40046b1	      2537	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x40046a5	          0x4889c1	                            mov rcx, rax	      2537	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x40046a8	        0x488b4118	            mov rax, qword [rcx + 0x18] 	      2536	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x40046ac	          0x4885c0	                           test rax, rax	      2536	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x40046af	            0x75ef	                           jne 0x40046a0	      2536	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x40046b1	          0x4989cd	                            mov r13, rcx	      2536	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x40046b4	            0xeb12	                           jmp 0x40046c8	      2536	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x40046b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2536	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_4
0x40046c0	          0x395a28	            cmp dword [rdx + 0x28], ebx 	      2543	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_5
0x40046c3	            0x750c	                           jne 0x40046d1	      2543	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_5
0x40046c5	          0x4989d5	                            mov r13, rdx	      2543	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_5
0x40046c8	        0x498b5510	            mov rdx, qword [r13 + 0x10] 	      2542	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_5
0x40046cc	          0x4885d2	                           test rdx, rdx	      2542	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_5
0x40046cf	            0x75ef	                           jne 0x40046c0	      2542	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	WHILE_5
0x40046d1	          0x4c39e9	                            cmp rcx, r13	      2545	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x40046d4	            0x7511	                           jne 0x40046e7	      2545	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x40046d6	            0xeb53	                           jmp 0x400472b	      2545	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x40046d8	     0xf1f84000000	                   nop dword [rax + rax]	      2545	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x40046e0	          0x4889c1	                            mov rcx, rax	      2545	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x40046e3	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2545	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x40046e7	          0x4885c0	                           test rax, rax	      2549	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	WHILE_6
0x40046ea	            0x75f4	                           jne 0x40046e0	      2549	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	WHILE_6
0x40046ec	          0x4885d2	                           test rdx, rdx	      2551	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_40
0x40046ef	            0x7408	                            je 0x40046f9	      2551	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_40
0x40046f1	        0x498b4518	            mov rax, qword [r13 + 0x18] 	      2553	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_40
0x40046f5	        0x48894218	             mov qword [rdx + 0x18], rax	      2552	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_40
0x40046f9	        0x498b4518	            mov rax, qword [r13 + 0x18] 	      2554	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x40046fd	        0x48895010	             mov qword [rax + 0x10], rdx	      2554	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x4004701	    0x49c745180000	               mov qword [r13 + 0x18], 0	      2556	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x4004709	        0x49894d10	             mov qword [r13 + 0x10], rcx	      2557	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x400470d	        0x4c896918	             mov qword [rcx + 0x18], r13	      2558	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39
0x4004711	    0x483b8e181200	          cmp rcx, qword [rsi + 0x1218] 	      2560	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_41
0x4004718	     0xf8492000000	                            je 0x40047b0	      2560	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_41
0x400471e	        0x498b4500	                    mov rax, qword [r13]	      2563	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_42
0x4004722	          0x4885c0	                           test rax, rax	      2563	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_42
0x4004725	            0x7404	                            je 0x400472b	      2563	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_42
0x4004727	        0x4c896808	                mov qword [rax + 8], r13	      2564	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_42
0x400472b	        0x41395d28	            cmp dword [r13 + 0x28], ebx 	      2568	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_43
0x400472f	    0x4c89ae281200	          mov qword [rsi + 0x1228], r13 	      2566	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x4004736	     0xf85b8fcffff	                           jne 0x40043f4	      2568	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_43
0x400473c	        0x4d396520	            cmp qword [r13 + 0x20], r12 	      2573	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_44
0x4004740	            0x7509	                           jne 0x400474b	      2573	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_44
0x4004742	          0x4584f6	                         test r14b, r14b	      2573	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_44
0x4004745	     0xf8572010000	                           jne 0x40048bd	      2573	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_44
0x400474b	            0x31ff	                            xor edi, edi	      2579	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	CALL_12
0x400474d	      0xe8dec2ffff	                     call sym.u_undoredo	      2579	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	CALL_12
0x4004752	        0x498b4508	                mov rax, qword [r13 + 8]	      2583	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_45
0x4004756	    0x488b15000000	            mov rdx, qword [0x0400475d] 	      2584	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_45
0x400475d	          0x4885c0	                           test rax, rax	      2583	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_45
0x4004760	            0x743e	                            je 0x40047a0	      2583	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_45
0x4004762	        0x4d396520	            cmp qword [r13 + 0x20], r12 	      2588	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_46
0x4004766	    0x488982281200	          mov qword [rdx + 0x1228], rax 	      2585	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x400476d	     0xf849d000000	                            je 0x4004810	      2588	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_46
0x4004773	        0x498b4508	                mov rax, qword [r13 + 8]	      2591	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x4004777	          0x4885c0	                           test rax, rax	      2592	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_47
0x400477a	            0x740b	                            je 0x4004787	      2592	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_47
0x400477c	            0x31ed	                            xor ebp, ebp	      2586	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x400477e	          0x395828	            cmp dword [rax + 0x28], ebx 	      2592	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_47
0x4004781	     0xf84e9feffff	                            je 0x4004670	      2592	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_47
0x4004787	      0xbf00000000	                              mov edi, 0	      2595	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_47	CALL_13
0x400478c	            0x31ed	                            xor ebp, ebp	      2586	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x400478e	      0xe800000000	                          call 0x4004793	      2595	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_47	CALL_13
0x4004793	      0xe95cfcffff	                           jmp 0x40043f4	      2596	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_47
0x4004798	     0xf1f84000000	                   nop dword [rax + rax]	      2596	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_47
0x40047a0	    0x4c89aa201200	          mov qword [rdx + 0x1220], r13 	      2584	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_45
0x40047a7	        0x498b4508	                mov rax, qword [r13 + 8]	      2584	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_45
0x40047ab	            0xebb5	                           jmp 0x4004762	      2584	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_45
0x40047ad	           0xf1f00	                         nop dword [rax]	      2584	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_45
0x40047b0	    0x4c89ae181200	          mov qword [rsi + 0x1218], r13 	      2561	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_41
0x40047b7	      0xe962ffffff	                           jmp 0x400471e	      2561	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_39	IF_41
0x40047bc	      0xe800000000	                          call 0x40047c1	      2910	undo.c	FUNCTION_42	CALL_1
0x40047c1	      0xe945fcffff	                           jmp 0x400440b	      2910	undo.c	FUNCTION_42	CALL_1
0x40047c6	    0x8b1d00000000	            mov ebx, dword [0x040047cc] 	      2365	undo.c	FUNCTION_40	IF_16
0x40047cc	          0x4531f6	                          xor r14d, r14d	      2279	undo.c	FUNCTION_40
0x40047cf	          0x4531e4	                          xor r12d, r12d	      2366	undo.c	FUNCTION_40	IF_16
0x40047d2	      0xe9dbfaffff	                           jmp 0x40042b2	      2366	undo.c	FUNCTION_40	IF_16
0x40047d7	    0x41c781341200	              mov dword [r9 + 0x1234], 1	      2994	undo.c	FUNCTION_43	IF_3
0x40047e2	      0xe9c7f9ffff	                           jmp 0x40041ae	      2994	undo.c	FUNCTION_43	IF_3
0x40047e7	        0x89542420	             mov dword [rsp + 0x20], edx	      2994	undo.c	FUNCTION_43	IF_3
0x40047eb	        0x89742418	             mov dword [rsp + 0x18], esi	      2994	undo.c	FUNCTION_43	IF_3
0x40047ef	      0xe800000000	                          call 0x40047f4	      2990	undo.c	FUNCTION_43	IF_2	CALL_1
0x40047f4	            0x85c0	                           test eax, eax	      2990	undo.c	FUNCTION_43	IF_2	CALL_1
0x40047f6	    0x4c8b0d000000	              mov r9, qword [0x040047fd]	      2990	undo.c	FUNCTION_43	IF_2	CALL_1
0x40047fd	        0x8b742418	            mov esi, dword [rsp + 0x18] 	      2990	undo.c	FUNCTION_43	IF_2	CALL_1
0x4004801	        0x8b542420	            mov edx, dword [rsp + 0x20] 	      2990	undo.c	FUNCTION_43	IF_2	CALL_1
0x4004805	     0xf84b4fdffff	                            je 0x40045bf	      2990	undo.c	FUNCTION_43	IF_2	CALL_1
0x400480b	      0xe99ef9ffff	                           jmp 0x40041ae	      2990	undo.c	FUNCTION_43	IF_2	CALL_1
0x4004810	            0x31ed	                            xor ebp, ebp	      2586	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x4004812	      0xe9ddfbffff	                           jmp 0x40043f4	      2586	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3
0x4004817	      0xbe00000000	                              mov esi, 0	      2474	undo.c	FUNCTION_40	FOR_1	IF_29	CALL_4
0x400481c	            0x31ff	                            xor edi, edi	      2474	undo.c	FUNCTION_40	FOR_1	IF_29	CALL_4
0x400481e	      0xba05000000	                              mov edx, 5	      2474	undo.c	FUNCTION_40	FOR_1	IF_29	CALL_4
0x4004823	    0x892d00000000	            mov dword [0x04004829], ebp 	      2474	undo.c	FUNCTION_40	FOR_1	IF_29	CALL_4
0x4004829	      0xe800000000	                          call 0x400482e	      2474	undo.c	FUNCTION_40	FOR_1	IF_29	CALL_4
0x400482e	      0x488b742408	                mov rsi, qword [rsp + 8]	      2474	undo.c	FUNCTION_40	FOR_1	IF_29	CALL_4
0x4004833	        0x4883c448	                           add rsp, 0x48	      2602	undo.c	FUNCTION_40
0x4004837	          0x4889c7	                            mov rdi, rax	      2474	undo.c	FUNCTION_40	FOR_1	IF_29	CALL_4
0x400483a	              0x5b	                                 pop rbx	      2602	undo.c	FUNCTION_40
0x400483b	              0x5d	                                 pop rbp	      2602	undo.c	FUNCTION_40
0x400483c	            0x415c	                                 pop r12	      2602	undo.c	FUNCTION_40
0x400483e	            0x415d	                                 pop r13	      2602	undo.c	FUNCTION_40
0x4004840	            0x415e	                                 pop r14	      2602	undo.c	FUNCTION_40
0x4004842	            0x415f	                                 pop r15	      2602	undo.c	FUNCTION_40
0x4004844	      0xe900000000	                           jmp 0x4004849	      2474	undo.c	FUNCTION_40	FOR_1	IF_29	CALL_4
0x4004849	    0x48837c240800	                  cmp qword [rsp + 8], 0	      2480	undo.c	FUNCTION_40	FOR_1	IF_30	IF_31
0x400484f	    0x892d00000000	            mov dword [0x04004855], ebp 	      2480	undo.c	FUNCTION_40	FOR_1	IF_30	IF_31
0x4004855	      0xba05000000	                              mov edx, 5	      2481	undo.c	FUNCTION_40	FOR_1	IF_30	CALL_6
0x400485a	      0xbe00000000	                              mov esi, 0	      2481	undo.c	FUNCTION_40	FOR_1	IF_30	CALL_6
0x400485f	            0x7805	                            js 0x4004866	      2480	undo.c	FUNCTION_40	FOR_1	IF_30	IF_31
0x4004861	      0xbe00000000	                              mov esi, 0	      2483	undo.c	FUNCTION_40	FOR_1	IF_30	CALL_8
0x4004866	            0x31ff	                            xor edi, edi	      2483	undo.c	FUNCTION_40	FOR_1	IF_30	CALL_8
0x4004868	      0xe800000000	                          call 0x400486d	      2483	undo.c	FUNCTION_40	FOR_1	IF_30	CALL_8
0x400486d	        0x4883c448	                           add rsp, 0x48	      2602	undo.c	FUNCTION_40
0x4004871	          0x4889c7	                            mov rdi, rax	      2483	undo.c	FUNCTION_40	FOR_1	IF_30	CALL_8
0x4004874	              0x5b	                                 pop rbx	      2602	undo.c	FUNCTION_40
0x4004875	              0x5d	                                 pop rbp	      2602	undo.c	FUNCTION_40
0x4004876	            0x415c	                                 pop r12	      2602	undo.c	FUNCTION_40
0x4004878	            0x415d	                                 pop r13	      2602	undo.c	FUNCTION_40
0x400487a	            0x415e	                                 pop r14	      2602	undo.c	FUNCTION_40
0x400487c	            0x415f	                                 pop r15	      2602	undo.c	FUNCTION_40
0x400487e	      0xe900000000	                           jmp 0x4004883	      2483	undo.c	FUNCTION_40	FOR_1	IF_30	CALL_8
0x4004883	    0x498b81281200	           mov rax, qword [r9 + 0x1228] 	      2309	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6
0x400488a	          0x4885c0	                           test rax, rax	      2310	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_7
0x400488d	            0x7457	                            je 0x40048e6	      2310	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_7
0x400488f	          0x488b00	                    mov rax, qword [rax]	      2311	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_7
0x4004892	          0x4885c0	                           test rax, rax	      2314	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_8
0x4004895	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	      2317	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_8
0x400489a	            0x743d	                            je 0x40048d9	      2314	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_8
0x400489c	    0x4883b8300200	              cmp qword [rax + 0x230], 0	      2314	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_8
0x40048a4	            0x7433	                            je 0x40048d9	      2314	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_8
0x40048a6	    0x4d03a9581200	            add r13, qword [r9 + 0x1258]	      2317	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_8
0x40048ad	          0x4d85ed	                           test r13, r13	      2324	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_9
0x40048b0	      0xb800000000	                              mov eax, 0	      2324	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_9
0x40048b5	           0xf4ed0	                         cmovle edx, eax	      2324	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_9
0x40048b8	      0xe9bffbffff	                           jmp 0x400447c	      2324	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	IF_9
0x40048bd	        0x4983ec01	                              sub r12, 1	      2575	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_44
0x40048c1	    0x4c89a6481200	          mov qword [rsi + 0x1248], r12 	      2575	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_44
0x40048c8	      0xe927fbffff	                           jmp 0x40043f4	      2576	undo.c	FUNCTION_40	IF_33	IF_37	WHILE_3	IF_44
0x40048cd	    0x4c8bb8201200	          mov r15, qword [rax + 0x1220] 	      2508	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_34
0x40048d4	      0xe95bfdffff	                           jmp 0x4004634	      2508	undo.c	FUNCTION_40	IF_33	WHILE_2	IF_34
0x40048d9	    0x4d03a9581200	            add r13, qword [r9 + 0x1258]	      2320	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	ELSE_4
0x40048e0	        0x4983c501	                              add r13, 1	      2320	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	ELSE_4
0x40048e4	            0xebc7	                           jmp 0x40048ad	      2320	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	ELSE_4
0x40048e6	    0x498b81201200	           mov rax, qword [r9 + 0x1220] 	      2313	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	ELSE_3
0x40048ed	            0xeba3	                           jmp 0x4004892	      2313	undo.c	FUNCTION_40	ELSE_1	ELSE_2	IF_5	IF_6	ELSE_3
0x40048ef	          0x4885ff	                           test rdi, rdi	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x40048f2	     0xf84a7f9ffff	                            je 0x400429f	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x40048f8	        0x4c8b4820	              mov r9, qword [rax + 0x20]	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x40048fc	      0x4c894c2430	              mov qword [rsp + 0x30], r9	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x4004901	          0x4d89ca	                             mov r10, r9	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x4004904	      0x4c39542428	            cmp qword [rsp + 0x28], r10 	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004909	        0x410f9cc1	                                setl r9b	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400490d	    0x48837c240800	                  cmp qword [rsp + 8], 0	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004913	     0xf8890000000	                            js 0x40049a9	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004919	          0x4584c9	                           test r9b, r9b	      2407	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400491c	     0xf847df9ffff	                            je 0x400429f	      2407	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004922	            0x85f6	                           test esi, esi	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004924	            0x743d	                            je 0x4004963	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004926	      0x48397c2418	            cmp qword [rsp + 0x18], rdi 	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400492b	            0x7536	                           jne 0x4004963	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400492d	      0x4c3b642430	            cmp r12, qword [rsp + 0x30] 	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004932	        0x410f9cc1	                                setl r9b	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004936	    0x48837c240800	                  cmp qword [rsp + 8], 0	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400493c	            0x7909	                           jns 0x4004947	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400493e	      0x4c3b642430	            cmp r12, qword [rsp + 0x30] 	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004943	        0x410f9fc1	                                setg r9b	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004947	          0x4584c9	                           test r9b, r9b	      2423	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400494a	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	      2423	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400494f	    0x4c0f45642430	          cmovne r12, qword [rsp + 0x30]	      2423	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004955	        0x4c0f45cf	                          cmovne r9, rdi	      2423	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004959	      0x4c894c2418	              mov qword [rsp + 0x18], r9	      2423	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400495e	      0xe93cf9ffff	                           jmp 0x400429f	      2423	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004963	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004968	          0x4d39d7	                            cmp r15, r10	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400496b	            0x7477	                            je 0x40049e4	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400496d	          0x4c39ef	                            cmp rdi, r13	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004970	            0x7e55	                           jle 0x40049c7	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004972	          0x4d39ea	                            cmp r10, r13	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004975	          0x4989f9	                             mov r9, rdi	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004978	            0x7e3d	                           jle 0x40049b7	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400497a	          0x4d29e9	                             sub r9, r13	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400497d	      0x4c894c2438	              mov qword [rsp + 0x38], r9	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004982	          0x4d89d1	                             mov r9, r10	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004985	      0x4c8b542438	            mov r10, qword [rsp + 0x38] 	      2423	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400498a	          0x4d29e9	                             sub r9, r13	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400498d	          0x4d39ca	                             cmp r10, r9	      2423	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004990	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	      2423	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x4004995	    0x4c0f4e642430	          cmovle r12, qword [rsp + 0x30]	      2423	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400499b	        0x4c0f4ecf	                          cmovle r9, rdi	      2423	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x400499f	      0x4c894c2418	              mov qword [rsp + 0x18], r9	      2423	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40049a4	      0xe9f6f8ffff	                           jmp 0x400429f	      2423	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40049a9	      0x4c39542428	            cmp qword [rsp + 0x28], r10 	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40049ae	        0x410f9dc1	                               setge r9b	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40049b2	      0xe962ffffff	                           jmp 0x4004919	      2409	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40049b7	          0x4d29e9	                             sub r9, r13	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40049ba	          0x4d89ca	                             mov r10, r9	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40049bd	          0x4d89e9	                             mov r9, r13	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40049c0	      0x4c2b4c2418	              sub r9, qword [rsp + 0x18]	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40049c5	            0xebc6	                           jmp 0x400498d	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40049c7	          0x4d39ea	                            cmp r10, r13	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40049ca	          0x4d89e9	                             mov r9, r13	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40049cd	            0x7e24	                           jle 0x40049f3	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40049cf	          0x4929f9	                             sub r9, rdi	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40049d2	      0x4c894c2438	              mov qword [rsp + 0x38], r9	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40049d7	          0x4d89d1	                             mov r9, r10	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40049da	      0x4c8b542438	            mov r10, qword [rsp + 0x38] 	      2423	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40049df	          0x4d29e9	                             sub r9, r13	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40049e2	            0xeba9	                           jmp 0x400498d	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40049e4	      0x4c8b642430	            mov r12, qword [rsp + 0x30] 	      2423	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40049e9	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      2423	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40049ee	      0xe9acf8ffff	                           jmp 0x400429f	      2423	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40049f3	          0x4929f9	                             sub r9, rdi	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40049f6	            0xebc2	                           jmp 0x40049ba	      2414	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20	IF_21
0x40049f8	          0x4885ff	                           test rdi, rdi	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x40049fb	     0xf85f7feffff	                           jne 0x40048f8	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x4004a01	            0x85d2	                           test edx, edx	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x4004a03	     0xf8550f8ffff	                           jne 0x4004259	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
0x4004a09	      0xe9eafeffff	                           jmp 0x40048f8	      2401	undo.c	FUNCTION_40	FOR_1	ELSE_10	WHILE_1	ELSE_12	IF_20
ex_undolist	IF,9:CALL,21:functions,0:FOR,1:DO,0:WHILE,2:ELSE,5:SWITCH,0	236
0x4004b60	            0x4157	                                push r15	      3007	undo.c	FUNCTION_44
0x4004b62	            0x4156	                                push r14	      3007	undo.c	FUNCTION_44
0x4004b64	      0xba14000000	                           mov edx, 0x14	      3022	undo.c	FUNCTION_44	CALL_1
0x4004b69	            0x4155	                                push r13	      3007	undo.c	FUNCTION_44
0x4004b6b	            0x4154	                                push r12	      3007	undo.c	FUNCTION_44
0x4004b6d	      0xbe08000000	                              mov esi, 8	      3022	undo.c	FUNCTION_44	CALL_1
0x4004b72	              0x55	                                push rbp	      3007	undo.c	FUNCTION_44
0x4004b73	              0x53	                                push rbx	      3007	undo.c	FUNCTION_44
0x4004b74	        0x4883ec48	                           sub rsp, 0x48	      3007	undo.c	FUNCTION_44
0x4004b78	    0x8b2d00000000	            mov ebp, dword [0x04004b7e] 	      3020	undo.c	FUNCTION_44
0x4004b7e	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      3022	undo.c	FUNCTION_44	CALL_1
0x4004b83	    0x64488b042528	                mov rax, qword fs:[0x28]	      3007	undo.c	FUNCTION_44
0x4004b8c	      0x4889442438	             mov qword [rsp + 0x38], rax	      3007	undo.c	FUNCTION_44
0x4004b91	            0x31c0	                            xor eax, eax	      3007	undo.c	FUNCTION_44
0x4004b93	        0x448d6d01	                     lea r13d, [rbp + 1]	      3020	undo.c	FUNCTION_44
0x4004b97	          0x83c502	                              add ebp, 2	      3021	undo.c	FUNCTION_44
0x4004b9a	    0x892d00000000	            mov dword [0x04004ba0], ebp 	      3021	undo.c	FUNCTION_44
0x4004ba0	      0xe800000000	                          call 0x4004ba5	      3022	undo.c	FUNCTION_44	CALL_1
0x4004ba5	    0x488b05000000	            mov rax, qword [0x04004bac] 	      3024	undo.c	FUNCTION_44
0x4004bac	    0x488b98181200	          mov rbx, qword [rax + 0x1218] 	      3024	undo.c	FUNCTION_44
0x4004bb3	          0x4885db	                           test rbx, rbx	      3025	undo.c	FUNCTION_44	WHILE_1
0x4004bb6	     0xf8431020000	                            je 0x4004ded	      3025	undo.c	FUNCTION_44	WHILE_1
0x4004bbc	    0x41bc01000000	                             mov r12d, 1	      3025	undo.c	FUNCTION_44	WHILE_1
0x4004bc2	    0x660f1f440000	                    nop word [rax + rax]	      3025	undo.c	FUNCTION_44	WHILE_1
0x4004bc8	        0x488b4308	                mov rax, qword [rbx + 8]	      3027	undo.c	FUNCTION_44	WHILE_1	IF_1
0x4004bcc	          0x4885c0	                           test rax, rax	      3027	undo.c	FUNCTION_44	WHILE_1	IF_1
0x4004bcf	            0x7428	                            je 0x4004bf9	      3027	undo.c	FUNCTION_44	WHILE_1	IF_1
0x4004bd1	        0x44896b28	            mov dword [rbx + 0x28], r13d	      3046	undo.c	FUNCTION_44	WHILE_1
0x4004bd5	          0x8b5028	            mov edx, dword [rax + 0x28] 	      3049	undo.c	FUNCTION_44	WHILE_1	IF_4
0x4004bd8	            0x39d5	                            cmp ebp, edx	      3050	undo.c	FUNCTION_44	WHILE_1	IF_4
0x4004bda	     0xf84a0010000	                            je 0x4004d80	      3050	undo.c	FUNCTION_44	WHILE_1	IF_4
0x4004be0	          0x4139d5	                           cmp r13d, edx	      3050	undo.c	FUNCTION_44	WHILE_1	IF_4
0x4004be3	     0xf8497010000	                            je 0x4004d80	      3050	undo.c	FUNCTION_44	WHILE_1	IF_4
0x4004be9	          0x4889c3	                            mov rbx, rax	      3053	undo.c	FUNCTION_44	WHILE_1	IF_4
0x4004bec	        0x4183c401	                             add r12d, 1	      3053	undo.c	FUNCTION_44	WHILE_1	IF_4
0x4004bf0	        0x488b4308	                mov rax, qword [rbx + 8]	      3027	undo.c	FUNCTION_44	WHILE_1	IF_1
0x4004bf4	          0x4885c0	                           test rax, rax	      3027	undo.c	FUNCTION_44	WHILE_1	IF_1
0x4004bf7	            0x75d8	                           jne 0x4004bd1	      3027	undo.c	FUNCTION_44	WHILE_1	IF_1
0x4004bf9	          0x8b4328	            mov eax, dword [rbx + 0x28] 	      3027	undo.c	FUNCTION_44	WHILE_1	IF_1
0x4004bfc	            0x39c5	                            cmp ebp, eax	      3028	undo.c	FUNCTION_44	WHILE_1	IF_1
0x4004bfe	     0xf84bc010000	                            je 0x4004dc0	      3028	undo.c	FUNCTION_44	WHILE_1	IF_1
0x4004c04	          0x4139c5	                           cmp r13d, eax	      3028	undo.c	FUNCTION_44	WHILE_1	IF_1
0x4004c07	     0xf84b3010000	                            je 0x4004dc0	      3028	undo.c	FUNCTION_44	WHILE_1	IF_1
0x4004c0d	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      3030	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_2	CALL_2
0x4004c12	      0xbe01000000	                              mov esi, 1	      3030	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_2	CALL_2
0x4004c17	      0xe800000000	                          call 0x4004c1c	      3030	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_2	CALL_2
0x4004c1c	            0x85c0	                           test eax, eax	      3030	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_2	CALL_2
0x4004c1e	     0xf84c9010000	                            je 0x4004ded	      3030	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_2	CALL_2
0x4004c24	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	      3032	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_3
0x4004c28	    0x488b3d000000	            mov rdi, qword [0x04004c2f] 	      3032	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_3
0x4004c2f	          0x4589e0	                           mov r8d, r12d	      3032	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_3
0x4004c32	      0xba00000000	                              mov edx, 0	      3032	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_3
0x4004c37	      0xbe01040000	                          mov esi, 0x401	      3032	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_3
0x4004c3c	            0x31c0	                            xor eax, eax	      3032	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_3
0x4004c3e	    0x41bf01040000	                         mov r15d, 0x401	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x4004c44	      0xe800000000	                          call 0x4004c49	      3032	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_3
0x4004c49	    0x4c8b35000000	            mov r14, qword [0x04004c50] 	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x4004c50	          0x4c89f7	                            mov rdi, r14	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x4004c53	      0xe800000000	                          call 0x4004c58	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x4004c58	          0x4929c7	                            sub r15, rax	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x4004c5b	          0x4901c6	                            add r14, rax	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x4004c5e	    0x488b83280200	           mov rax, qword [rbx + 0x228] 	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x4004c65	      0x4889442418	             mov qword [rsp + 0x18], rax	      3034	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_6
0x4004c6a	      0xe800000000	                          call 0x4004c6f	      3117	undo.c	FUNCTION_45	IF_1	CALL_1
0x4004c6f	      0x482b442418	             sub rax, qword [rsp + 0x18]	      3117	undo.c	FUNCTION_45	IF_1	CALL_1
0x4004c74	        0x4883f863	                           cmp rax, 0x63	      3117	undo.c	FUNCTION_45	IF_1	CALL_1
0x4004c78	            0x7e46	                           jle 0x4004cc0	      3117	undo.c	FUNCTION_45	IF_1	CALL_1
0x4004c7a	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      3119	undo.c	FUNCTION_45	IF_1	CALL_2
0x4004c7f	      0xe800000000	                          call 0x4004c84	      3119	undo.c	FUNCTION_45	IF_1	CALL_2
0x4004c84	      0x4889442408	                mov qword [rsp + 8], rax	      3119	undo.c	FUNCTION_45	IF_1	CALL_2
0x4004c89	      0xe800000000	                          call 0x4004c8e	      3120	undo.c	FUNCTION_45	IF_1	IF_2	CALL_3
0x4004c8e	      0x482b442418	             sub rax, qword [rsp + 0x18]	      3120	undo.c	FUNCTION_45	IF_1	IF_2	CALL_3
0x4004c93	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      3120	undo.c	FUNCTION_45	IF_1	IF_2	CALL_3
0x4004c98	    0x483dbfa80000	                         cmp rax, 0xa8bf	      3120	undo.c	FUNCTION_45	IF_1	IF_2	CALL_3
0x4004c9e	     0xf8f2c020000	                            jg 0x4004ed0	      3120	undo.c	FUNCTION_45	IF_1	IF_2	CALL_3
0x4004ca4	      0xba00000000	                              mov edx, 0	      3122	undo.c	FUNCTION_45	IF_1	CALL_4
0x4004ca9	          0x4c89fe	                            mov rsi, r15	      3122	undo.c	FUNCTION_45	IF_1	CALL_4
0x4004cac	          0x4c89f7	                            mov rdi, r14	      3122	undo.c	FUNCTION_45	IF_1	CALL_4
0x4004caf	      0xe800000000	                          call 0x4004cb4	      3122	undo.c	FUNCTION_45	IF_1	CALL_4
0x4004cb4	            0xeb3f	                           jmp 0x4004cf5	      3122	undo.c	FUNCTION_45	IF_1	CALL_4
0x4004cb6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3122	undo.c	FUNCTION_45	IF_1	CALL_4
0x4004cc0	      0xe800000000	                          call 0x4004cc5	      3130	undo.c	FUNCTION_45	CALL_8
0x4004cc5	      0x482b442418	             sub rax, qword [rsp + 0x18]	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x4004cca	      0xba05000000	                              mov edx, 5	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x4004ccf	      0xbe00000000	                              mov esi, 0	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x4004cd4	            0x31ff	                            xor edi, edi	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x4004cd6	      0x4889442408	                mov qword [rsp + 8], rax	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x4004cdb	      0xe800000000	                          call 0x4004ce0	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x4004ce0	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x4004ce5	          0x4889c2	                            mov rdx, rax	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x4004ce8	          0x4c89fe	                            mov rsi, r15	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x4004ceb	          0x4c89f7	                            mov rdi, r14	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x4004cee	            0x31c0	                            xor eax, eax	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x4004cf0	      0xe800000000	                          call 0x4004cf5	      3129	undo.c	FUNCTION_45	ELSE_2	CALL_7
0x4004cf5	    0x4883bb300200	              cmp qword [rbx + 0x230], 0	      3036	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3
0x4004cfd	            0x7f13	                            jg 0x4004d12	      3036	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3
0x4004cff	            0xeb41	                           jmp 0x4004d42	      3036	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3
0x4004d01	     0xf1f80000000	                         nop dword [rax]	      3036	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3
0x4004d08	      0xba20000000	                           mov edx, 0x20	       148	string3.h	FUNCTION_77	CALL_3
0x4004d0d	      0x6641891406	                mov word [r14 + rax], dx	       148	string3.h	FUNCTION_77	CALL_3
0x4004d12	    0x4c8b35000000	            mov r14, qword [0x04004d19] 	      3038	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	WHILE_2	CALL_7
0x4004d19	          0x4c89f7	                            mov rdi, r14	      3038	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	WHILE_2	CALL_7
0x4004d1c	      0xe800000000	                          call 0x4004d21	      3038	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	WHILE_2	CALL_7
0x4004d21	        0x4883f820	                           cmp rax, 0x20	      3038	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	WHILE_2	CALL_7
0x4004d25	            0x76e1	                           jbe 0x4004d08	      3038	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	WHILE_2	CALL_7
0x4004d27	    0x488b8b300200	           mov rcx, qword [rbx + 0x230] 	      3040	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_9
0x4004d2e	      0xba00000000	                              mov edx, 0	      3040	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_9
0x4004d33	      0xbe01040000	                          mov esi, 0x401	      3040	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_9
0x4004d38	          0x4c89f7	                            mov rdi, r14	      3040	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_9
0x4004d3b	            0x31c0	                            xor eax, eax	      3040	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_9
0x4004d3d	      0xe800000000	                          call 0x4004d42	      3040	undo.c	FUNCTION_44	WHILE_1	IF_1	IF_3	CALL_9
0x4004d42	      0x4863442420	         movsxd rax, dword [rsp + 0x20] 	      3043	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_10
0x4004d47	    0x488b3d000000	            mov rdi, qword [0x04004d4e] 	      3043	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_10
0x4004d4e	          0x8d5001	                      lea edx, [rax + 1]	      3043	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_10
0x4004d51	        0x89542420	             mov dword [rsp + 0x20], edx	      3043	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_10
0x4004d55	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      3043	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_10
0x4004d5a	        0x4c8d34c2	                  lea r14, [rdx + rax*8]	      3043	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_10
0x4004d5e	      0xe800000000	                          call 0x4004d63	      3043	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_10
0x4004d63	          0x498906	                    mov qword [r14], rax	      3043	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_10
0x4004d66	        0x488b4308	                mov rax, qword [rbx + 8]	      3043	undo.c	FUNCTION_44	WHILE_1	IF_1	CALL_10
0x4004d6a	        0x44896b28	            mov dword [rbx + 0x28], r13d	      3046	undo.c	FUNCTION_44	WHILE_1
0x4004d6e	          0x4885c0	                           test rax, rax	      3049	undo.c	FUNCTION_44	WHILE_1	IF_4
0x4004d71	     0xf855efeffff	                           jne 0x4004bd5	      3049	undo.c	FUNCTION_44	WHILE_1	IF_4
0x4004d77	    0x660f1f840000	                    nop word [rax + rax]	      3049	undo.c	FUNCTION_44	WHILE_1	IF_4
0x4004d80	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      3057	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x4004d84	          0x4885c0	                           test rax, rax	      3057	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x4004d87	            0x7417	                            je 0x4004da0	      3057	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x4004d89	          0x8b5028	            mov edx, dword [rax + 0x28] 	      3058	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x4004d8c	          0x4139d5	                           cmp r13d, edx	      3059	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x4004d8f	            0x740f	                            je 0x4004da0	      3059	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x4004d91	            0x39d5	                            cmp ebp, edx	      3059	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x4004d93	            0x740b	                            je 0x4004da0	      3059	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x4004d95	          0x4889c3	                            mov rbx, rax	      3059	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x4004d98	      0xe92bfeffff	                           jmp 0x4004bc8	      3059	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x4004d9d	           0xf1f00	                         nop dword [rax]	      3059	undo.c	FUNCTION_44	WHILE_1	ELSE_1	IF_5
0x4004da0	          0x488b13	                    mov rdx, qword [rbx]	      3064	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4004da3	          0x4885d2	                           test rdx, rdx	      3064	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4004da6	            0x7428	                            je 0x4004dd0	      3064	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4004da8	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      3064	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4004dac	          0x4885c0	                           test rax, rax	      3064	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4004daf	     0xf84fb000000	                            je 0x4004eb0	      3064	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4004db5	          0x896b28	             mov dword [rbx + 0x28], ebp	      3075	undo.c	FUNCTION_44	WHILE_1	ELSE_3
0x4004db8	          0x4889c3	                            mov rbx, rax	      3076	undo.c	FUNCTION_44	WHILE_1	ELSE_3	IF_7
0x4004dbb	      0xe908feffff	                           jmp 0x4004bc8	      3076	undo.c	FUNCTION_44	WHILE_1	ELSE_3	IF_7
0x4004dc0	        0x44896b28	            mov dword [rbx + 0x28], r13d	      3046	undo.c	FUNCTION_44	WHILE_1
0x4004dc4	            0xebba	                           jmp 0x4004d80	      3046	undo.c	FUNCTION_44	WHILE_1
0x4004dc6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3046	undo.c	FUNCTION_44	WHILE_1
0x4004dd0	          0x896b28	             mov dword [rbx + 0x28], ebp	      3075	undo.c	FUNCTION_44	WHILE_1	ELSE_3
0x4004dd3	        0x488b5b18	            mov rbx, qword [rbx + 0x18] 	      3076	undo.c	FUNCTION_44	WHILE_1	ELSE_3	IF_7
0x4004dd7	          0x4885db	                           test rbx, rbx	      3076	undo.c	FUNCTION_44	WHILE_1	ELSE_3	IF_7
0x4004dda	     0xf85e8fdffff	                           jne 0x4004bc8	      3076	undo.c	FUNCTION_44	WHILE_1	ELSE_3	IF_7
0x4004de0	        0x4183ec01	                             sub r12d, 1	      3081	undo.c	FUNCTION_44	WHILE_1	ELSE_3	ELSE_4
0x4004de4	          0x4885d2	                           test rdx, rdx	      3025	undo.c	FUNCTION_44	WHILE_1
0x4004de7	     0xf8523010000	                           jne 0x4004f10	      3025	undo.c	FUNCTION_44	WHILE_1
0x4004ded	        0x8b742420	            mov esi, dword [rsp + 0x20] 	      3086	undo.c	FUNCTION_44	IF_8
0x4004df1	            0x85f6	                           test esi, esi	      3086	undo.c	FUNCTION_44	IF_8
0x4004df3	     0xf84ef000000	                            je 0x4004ee8	      3086	undo.c	FUNCTION_44	IF_8
0x4004df9	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      3090	undo.c	FUNCTION_44	ELSE_5	CALL_13
0x4004dfe	      0xe800000000	                          call 0x4004e03	      3090	undo.c	FUNCTION_44	ELSE_5	CALL_13
0x4004e03	      0xe800000000	                          call 0x4004e08	      3092	undo.c	FUNCTION_44	ELSE_5	CALL_14
0x4004e08	    0x8b1d00000000	            mov ebx, dword [0x04004e0e] 	      3093	undo.c	FUNCTION_44	ELSE_5	CALL_16
0x4004e0e	            0x31ff	                            xor edi, edi	      3093	undo.c	FUNCTION_44	ELSE_5	CALL_16
0x4004e10	      0xba05000000	                              mov edx, 5	      3093	undo.c	FUNCTION_44	ELSE_5	CALL_16
0x4004e15	      0xbe00000000	                              mov esi, 0	      3093	undo.c	FUNCTION_44	ELSE_5	CALL_16
0x4004e1a	      0xe800000000	                          call 0x4004e1f	      3093	undo.c	FUNCTION_44	ELSE_5	CALL_16
0x4004e1f	            0x89de	                            mov esi, ebx	      3093	undo.c	FUNCTION_44	ELSE_5	CALL_16
0x4004e21	          0x4889c7	                            mov rdi, rax	      3093	undo.c	FUNCTION_44	ELSE_5	CALL_16
0x4004e24	      0xe800000000	                          call 0x4004e29	      3093	undo.c	FUNCTION_44	ELSE_5	CALL_16
0x4004e29	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x4004e2d	            0x85c0	                           test eax, eax	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x4004e2f	            0x7e50	                           jle 0x4004e81	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x4004e31	    0x8b0500000000	            mov eax, dword [0x04004e37] 	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x4004e37	            0x85c0	                           test eax, eax	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x4004e39	            0x7546	                           jne 0x4004e81	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x4004e3b	            0x31ed	                            xor ebp, ebp	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x4004e3d	            0x31db	                            xor ebx, ebx	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x4004e3f	            0xeb2c	                           jmp 0x4004e6d	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x4004e41	     0xf1f80000000	                         nop dword [rax]	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x4004e48	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      3100	undo.c	FUNCTION_44	ELSE_5	FOR_1	CALL_19
0x4004e4d	          0x83c301	                              add ebx, 1	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x4004e50	        0x488b3c28	              mov rdi, qword [rax + rbp]	      3100	undo.c	FUNCTION_44	ELSE_5	FOR_1	CALL_19
0x4004e54	      0xe800000000	                          call 0x4004e59	      3100	undo.c	FUNCTION_44	ELSE_5	FOR_1	CALL_19
0x4004e59	        0x395c2420	            cmp dword [rsp + 0x20], ebx 	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x4004e5d	            0x7e22	                           jle 0x4004e81	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x4004e5f	    0x8b0500000000	            mov eax, dword [0x04004e65] 	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x4004e65	        0x4883c508	                              add rbp, 8	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x4004e69	            0x85c0	                           test eax, eax	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x4004e6b	            0x7514	                           jne 0x4004e81	      3095	undo.c	FUNCTION_44	ELSE_5	FOR_1
0x4004e6d	      0xbf0a000000	                            mov edi, 0xa	      3097	undo.c	FUNCTION_44	ELSE_5	FOR_1	CALL_18
0x4004e72	      0xe800000000	                          call 0x4004e77	      3097	undo.c	FUNCTION_44	ELSE_5	FOR_1	CALL_18
0x4004e77	    0x8b0500000000	            mov eax, dword [0x04004e7d] 	      3098	undo.c	FUNCTION_44	ELSE_5	FOR_1	IF_9
0x4004e7d	            0x85c0	                           test eax, eax	      3098	undo.c	FUNCTION_44	ELSE_5	FOR_1	IF_9
0x4004e7f	            0x74c7	                            je 0x4004e48	      3098	undo.c	FUNCTION_44	ELSE_5	FOR_1	IF_9
0x4004e81	      0xe800000000	                          call 0x4004e86	      3102	undo.c	FUNCTION_44	ELSE_5	CALL_20
0x4004e86	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      3104	undo.c	FUNCTION_44	ELSE_5	CALL_21
0x4004e8b	      0xe800000000	                          call 0x4004e90	      3104	undo.c	FUNCTION_44	ELSE_5	CALL_21
0x4004e90	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      3106	undo.c	FUNCTION_44
0x4004e95	    0x644833042528	                xor rax, qword fs:[0x28]	      3106	undo.c	FUNCTION_44
0x4004e9e	            0x7578	                           jne 0x4004f18	      3106	undo.c	FUNCTION_44
0x4004ea0	        0x4883c448	                           add rsp, 0x48	      3106	undo.c	FUNCTION_44
0x4004ea4	              0x5b	                                 pop rbx	      3106	undo.c	FUNCTION_44
0x4004ea5	              0x5d	                                 pop rbp	      3106	undo.c	FUNCTION_44
0x4004ea6	            0x415c	                                 pop r12	      3106	undo.c	FUNCTION_44
0x4004ea8	            0x415d	                                 pop r13	      3106	undo.c	FUNCTION_44
0x4004eaa	            0x415e	                                 pop r14	      3106	undo.c	FUNCTION_44
0x4004eac	            0x415f	                                 pop r15	      3106	undo.c	FUNCTION_44
0x4004eae	              0xc3	                                     ret	      3106	undo.c	FUNCTION_44
0x4004eaf	              0x90	                                     nop	      3106	undo.c	FUNCTION_44
0x4004eb0	          0x8b4228	            mov eax, dword [rdx + 0x28] 	      3065	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4004eb3	            0x39c5	                            cmp ebp, eax	      3066	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4004eb5	            0x7451	                            je 0x4004f08	      3066	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4004eb7	          0x4139c5	                           cmp r13d, eax	      3066	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4004eba	            0x744c	                            je 0x4004f08	      3066	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4004ebc	        0x4183ec01	                             sub r12d, 1	      3069	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4004ec0	          0x4889d3	                            mov rbx, rdx	      3069	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4004ec3	      0xe900fdffff	                           jmp 0x4004bc8	      3069	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4004ec8	     0xf1f84000000	                   nop dword [rax + rax]	      3069	undo.c	FUNCTION_44	WHILE_1	ELSE_2	IF_6
0x4004ed0	      0xba00000000	                              mov edx, 0	      3125	undo.c	FUNCTION_45	IF_1	CALL_5
0x4004ed5	          0x4c89fe	                            mov rsi, r15	      3125	undo.c	FUNCTION_45	IF_1	CALL_5
0x4004ed8	          0x4c89f7	                            mov rdi, r14	      3125	undo.c	FUNCTION_45	IF_1	CALL_5
0x4004edb	      0xe800000000	                          call 0x4004ee0	      3125	undo.c	FUNCTION_45	IF_1	CALL_5
0x4004ee0	      0xe910feffff	                           jmp 0x4004cf5	      3125	undo.c	FUNCTION_45	IF_1	CALL_5
0x4004ee5	           0xf1f00	                         nop dword [rax]	      3125	undo.c	FUNCTION_45	IF_1	CALL_5
0x4004ee8	            0x31ff	                            xor edi, edi	      3087	undo.c	FUNCTION_44	CALL_12
0x4004eea	      0xba05000000	                              mov edx, 5	      3087	undo.c	FUNCTION_44	CALL_12
0x4004eef	      0xbe00000000	                              mov esi, 0	      3087	undo.c	FUNCTION_44	CALL_12
0x4004ef4	      0xe800000000	                          call 0x4004ef9	      3087	undo.c	FUNCTION_44	CALL_12
0x4004ef9	          0x4889c7	                            mov rdi, rax	      3087	undo.c	FUNCTION_44	CALL_12
0x4004efc	      0xe800000000	                          call 0x4004f01	      3087	undo.c	FUNCTION_44	CALL_12
0x4004f01	            0xeb8d	                           jmp 0x4004e90	      3087	undo.c	FUNCTION_44	CALL_12
0x4004f03	       0xf1f440000	                   nop dword [rax + rax]	      3087	undo.c	FUNCTION_44	CALL_12
0x4004f08	          0x896b28	             mov dword [rbx + 0x28], ebp	      3075	undo.c	FUNCTION_44	WHILE_1	ELSE_3
0x4004f0b	      0xe9d0feffff	                           jmp 0x4004de0	      3075	undo.c	FUNCTION_44	WHILE_1	ELSE_3
0x4004f10	          0x4889d3	                            mov rbx, rdx	      3075	undo.c	FUNCTION_44	WHILE_1	ELSE_3
0x4004f13	      0xe9b0fcffff	                           jmp 0x4004bc8	      3075	undo.c	FUNCTION_44	WHILE_1	ELSE_3
0x4004f18	      0xe800000000	                          call 0x4004f1d	      3106	undo.c	FUNCTION_44
u_unchanged	IF,0:CALL,1:functions,0:FOR,0:DO,0:WHILE,0:ELSE,0:SWITCH,0	19
0x4004fa0	    0x488b97181200	          mov rdx, qword [rdi + 0x1218] 	      3162	undo.c	ELSE_1	FUNCTION_47	CALL_1
0x4004fa7	          0x4889f9	                            mov rcx, rdi	      3161	undo.c	ELSE_1	FUNCTION_47
0x4004faa	          0x4885d2	                           test rdx, rdx	      3227	undo.c	FUNCTION_50	FOR_1
0x4004fad	            0x7433	                            je 0x4004fe2	      3227	undo.c	FUNCTION_50	FOR_1
0x4004faf	        0x4883ec08	                              sub rsp, 8	      3161	undo.c	ELSE_1	FUNCTION_47
0x4004fb3	       0xf1f440000	                   nop dword [rax + rax]	      3161	undo.c	ELSE_1	FUNCTION_47
0x4004fb8	        0x488b7a10	            mov rdi, qword [rdx + 0x10] 	      3230	undo.c	FUNCTION_50	FOR_1	IF_1
0x4004fbc	        0x834a5801	                or dword [rdx + 0x58], 1	      3229	undo.c	FUNCTION_50	FOR_1
0x4004fc0	          0x4885ff	                           test rdi, rdi	      3230	undo.c	FUNCTION_50	FOR_1	IF_1
0x4004fc3	            0x7405	                            je 0x4004fca	      3230	undo.c	FUNCTION_50	FOR_1	IF_1
0x4004fc5	      0xe856b6ffff	                  call sym.u_unch_branch	      3231	undo.c	FUNCTION_50	FOR_1	CALL_1
0x4004fca	        0x488b5208	                mov rdx, qword [rdx + 8]	      3227	undo.c	FUNCTION_50	FOR_1
0x4004fce	          0x4885d2	                           test rdx, rdx	      3227	undo.c	FUNCTION_50	FOR_1
0x4004fd1	            0x75e5	                           jne 0x4004fb8	      3227	undo.c	FUNCTION_50	FOR_1
0x4004fd3	    0xc78154170000	            mov dword [rcx + 0x1754], 0 	      3163	undo.c	ELSE_1	FUNCTION_47
0x4004fdd	        0x4883c408	                              add rsp, 8	      3164	undo.c	ELSE_1	FUNCTION_47
0x4004fe1	              0xc3	                                     ret	      3164	undo.c	ELSE_1	FUNCTION_47
0x4004fe2	    0xc78754170000	            mov dword [rdi + 0x1754], 0 	      3163	undo.c	ELSE_1	FUNCTION_47
0x4004fec	              0xc3	                                     ret	      3163	undo.c	ELSE_1	FUNCTION_47
u_undoredo	IF,33:CALL,31:functions,0:FOR,5:DO,0:WHILE,1:ELSE,12:SWITCH,0	510
0x4000a30	            0x4157	                                push r15	      2615	undo.c	FUNCTION_41
0x4000a32	            0x4156	                                push r14	      2615	undo.c	FUNCTION_41
0x4000a34	            0x4155	                                push r13	      2615	undo.c	FUNCTION_41
0x4000a36	            0x4154	                                push r12	      2615	undo.c	FUNCTION_41
0x4000a38	              0x55	                                push rbp	      2615	undo.c	FUNCTION_41
0x4000a39	              0x53	                                push rbx	      2615	undo.c	FUNCTION_41
0x4000a3a	    0x4881ec280200	                          sub rsp, 0x228	      2615	undo.c	FUNCTION_41
0x4000a41	    0x64488b042528	                mov rax, qword fs:[0x28]	      2615	undo.c	FUNCTION_41
0x4000a4a	    0x488984241802	            mov qword [rsp + 0x218], rax	      2615	undo.c	FUNCTION_41
0x4000a52	            0x31c0	                            xor eax, eax	      2615	undo.c	FUNCTION_41
0x4000a54	    0x488b05000000	            mov rax, qword [0x04000a5b] 	      2630	undo.c	FUNCTION_41
0x4000a5b	        0x897c2444	             mov dword [rsp + 0x44], edi	      2615	undo.c	FUNCTION_41
0x4000a5f	    0x488b80281200	          mov rax, qword [rax + 0x1228] 	      2630	undo.c	FUNCTION_41
0x4000a66	          0x4889c3	                            mov rbx, rax	      2630	undo.c	FUNCTION_41
0x4000a69	      0x4889442430	             mov qword [rsp + 0x30], rax	      2630	undo.c	FUNCTION_41
0x4000a6e	      0xe800000000	                          call 0x4000a73	      2634	undo.c	FUNCTION_41	CALL_1
0x4000a73	          0x8b4358	            mov eax, dword [rbx + 0x58] 	      2639	undo.c	FUNCTION_41
0x4000a76	        0x89442438	             mov dword [rsp + 0x38], eax	      2639	undo.c	FUNCTION_41
0x4000a7a	    0x488b05000000	            mov rax, qword [0x04000a81] 	      2640	undo.c	FUNCTION_41
0x4000a81	    0x8b88c8000000	            mov ecx, dword [rax + 0xc8] 	      2640	undo.c	FUNCTION_41
0x4000a87	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2641	undo.c	FUNCTION_41
0x4000a8a	          0x83e001	                              and eax, 1	      2641	undo.c	FUNCTION_41
0x4000a8d	        0x894c2440	             mov dword [rsp + 0x40], ecx	      2640	undo.c	FUNCTION_41
0x4000a91	            0x89c2	                            mov edx, eax	      2641	undo.c	FUNCTION_41
0x4000a93	      0xb802000000	                              mov eax, 2	      2641	undo.c	FUNCTION_41
0x4000a98	           0xf44c2	                          cmove eax, edx	      2641	undo.c	FUNCTION_41
0x4000a9b	        0x8944243c	             mov dword [rsp + 0x3c], eax	      2641	undo.c	FUNCTION_41
0x4000a9f	      0xe800000000	                          call 0x4000aa4	      2642	undo.c	FUNCTION_41	CALL_3
0x4000aa4	    0x488b15000000	            mov rdx, qword [0x04000aab] 	      2647	undo.c	FUNCTION_41	CALL_4
0x4000aab	        0x4c8b7330	            mov r14, qword [rbx + 0x30] 	      2654	undo.c	FUNCTION_41	FOR_1
0x4000aaf	      0xb934000000	                           mov ecx, 0x34	        59	string3.h	FUNCTION_68	CALL_3
0x4000ab4	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	        59	string3.h	FUNCTION_68	CALL_3
0x4000ab9	    0x488b82f80200	           mov rax, qword [rdx + 0x2f8] 	      2648	undo.c	FUNCTION_41
0x4000ac0	          0x4d85f6	                           test r14, r14	      2654	undo.c	FUNCTION_41	FOR_1
0x4000ac3	    0x488db2580100	                  lea rsi, [rdx + 0x158]	        59	string3.h	FUNCTION_68	CALL_3
0x4000aca	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	        59	string3.h	FUNCTION_68	CALL_3
0x4000acd	    0xc782e8110000	            mov dword [rdx + 0x11e8], 0 	      2650	undo.c	FUNCTION_41
0x4000ad7	    0x48c782001200	            mov qword [rdx + 0x1200], 0 	      2651	undo.c	FUNCTION_41
0x4000ae2	      0x4889442468	             mov qword [rsp + 0x68], rax	      2648	undo.c	FUNCTION_41
0x4000ae7	    0x8b8200030000	           mov eax, dword [rdx + 0x300] 	      2648	undo.c	FUNCTION_41
0x4000aed	    0xc78208120000	            mov dword [rdx + 0x1208], 0 	      2652	undo.c	FUNCTION_41
0x4000af7	        0x89442464	             mov dword [rsp + 0x64], eax	      2648	undo.c	FUNCTION_41
0x4000afb	    0x8b8204030000	           mov eax, dword [rdx + 0x304] 	      2648	undo.c	FUNCTION_41
0x4000b01	        0x89442460	             mov dword [rsp + 0x60], eax	      2648	undo.c	FUNCTION_41
0x4000b05	    0x488b82080300	           mov rax, qword [rdx + 0x308] 	      2648	undo.c	FUNCTION_41
0x4000b0c	      0x4889442448	             mov qword [rsp + 0x48], rax	      2648	undo.c	FUNCTION_41
0x4000b11	    0x8b8210030000	           mov eax, dword [rdx + 0x310] 	      2648	undo.c	FUNCTION_41
0x4000b17	        0x89442450	             mov dword [rsp + 0x50], eax	      2648	undo.c	FUNCTION_41
0x4000b1b	    0x8b8214030000	           mov eax, dword [rdx + 0x314] 	      2648	undo.c	FUNCTION_41
0x4000b21	        0x89442454	             mov dword [rsp + 0x54], eax	      2648	undo.c	FUNCTION_41
0x4000b25	    0x8b8218030000	           mov eax, dword [rdx + 0x318] 	      2648	undo.c	FUNCTION_41
0x4000b2b	        0x89442458	             mov dword [rsp + 0x58], eax	      2648	undo.c	FUNCTION_41
0x4000b2f	    0x8b821c030000	           mov eax, dword [rdx + 0x31c] 	      2648	undo.c	FUNCTION_41
0x4000b35	        0x8944245c	             mov dword [rsp + 0x5c], eax	      2648	undo.c	FUNCTION_41
0x4000b39	          0x488b02	                    mov rax, qword [rdx]	      2649	undo.c	FUNCTION_41
0x4000b3c	    0x488982e01100	          mov qword [rdx + 0x11e0], rax 	      2649	undo.c	FUNCTION_41
0x4000b43	     0xf84df040000	                            je 0x4001028	      2654	undo.c	FUNCTION_41	FOR_1
0x4000b49	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2654	undo.c	FUNCTION_41	FOR_1
0x4000b52	    0x48c7442428ff	     mov qword [rsp + 0x28], 0x7fffffff 	      2654	undo.c	FUNCTION_41	FOR_1
0x4000b5b	       0xf1f440000	                   nop dword [rax + rax]	      2654	undo.c	FUNCTION_41	FOR_1
0x4000b60	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	      2657	undo.c	FUNCTION_41	FOR_1
0x4000b64	        0x498b4e08	                mov rcx, qword [r14 + 8]	      2656	undo.c	FUNCTION_41	FOR_1
0x4000b68	          0x4885d2	                           test rdx, rdx	      2658	undo.c	FUNCTION_41	FOR_1	IF_1
0x4000b6b	        0x48890c24	                    mov qword [rsp], rcx	      2656	undo.c	FUNCTION_41	FOR_1
0x4000b6f	      0x4889542410	             mov qword [rsp + 0x10], rdx	      2657	undo.c	FUNCTION_41	FOR_1
0x4000b74	     0xf856e020000	                           jne 0x4000de8	      2658	undo.c	FUNCTION_41	FOR_1	IF_1
0x4000b7a	        0x488d7001	                      lea rsi, [rax + 1]	      2659	undo.c	FUNCTION_41	FOR_1	IF_1
0x4000b7e	          0x4839f1	                            cmp rcx, rsi	      2660	undo.c	FUNCTION_41	FOR_1	IF_2
0x4000b81	      0x4889742410	             mov qword [rsp + 0x10], rsi	      2659	undo.c	FUNCTION_41	FOR_1	IF_1
0x4000b86	     0xf8d73020000	                           jge 0x4000dff	      2660	undo.c	FUNCTION_41	FOR_1	IF_2
0x4000b8c	          0x4839c1	                            cmp rcx, rax	      2660	undo.c	FUNCTION_41	FOR_1	IF_2
0x4000b8f	     0xf8f6a020000	                            jg 0x4000dff	      2660	undo.c	FUNCTION_41	FOR_1	IF_2
0x4000b95	      0x4c8b642410	            mov r12, qword [rsp + 0x10] 	      2669	undo.c	FUNCTION_41	FOR_1
0x4000b9a	        0x4d8b6e28	            mov r13, qword [r14 + 0x28] 	      2670	undo.c	FUNCTION_41	FOR_1
0x4000b9e	          0x4929cc	                            sub r12, rcx	      2669	undo.c	FUNCTION_41	FOR_1
0x4000ba1	      0x483b4c2428	            cmp rcx, qword [rsp + 0x28] 	      2672	undo.c	FUNCTION_41	FOR_1	IF_3
0x4000ba6	      0x498d7424ff	                      lea rsi, [r12 - 1]	      2669	undo.c	FUNCTION_41	FOR_1
0x4000bab	      0x4889742408	                mov qword [rsp + 8], rsi	      2669	undo.c	FUNCTION_41	FOR_1
0x4000bb0	            0x7d4e	                           jge 0x4000c00	      2672	undo.c	FUNCTION_41	FOR_1	IF_3
0x4000bb2	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      2677	undo.c	FUNCTION_41	FOR_1	IF_3
0x4000bb7	        0x488b4040	            mov rax, qword [rax + 0x40] 	      2677	undo.c	FUNCTION_41	FOR_1	IF_3
0x4000bbb	          0x4839c1	                            cmp rcx, rax	      2678	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4000bbe	     0xf8f14030000	                            jg 0x4000ed8	      2678	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4000bc4	      0x4a8d542901	                lea rdx, [rcx + r13 + 1]	      2678	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4000bc9	          0x4839d0	                            cmp rax, rdx	      2678	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4000bcc	     0xf8f06030000	                            jg 0x4000ed8	      2678	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4000bd2	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      2680	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4000bd7	    0x488b05000000	            mov rax, qword [0x04000bde] 	      2680	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4000bde	        0x488b5140	            mov rdx, qword [rcx + 0x40] 	      2680	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4000be2	        0x488b7148	            mov rsi, qword [rcx + 0x48] 	      2680	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4000be6	        0x48895038	             mov qword [rax + 0x38], rdx	      2680	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4000bea	        0x48897040	             mov qword [rax + 0x40], rsi	      2680	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4000bee	        0x488d42ff	                      lea rax, [rdx - 1]	      2681	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4000bf2	      0x4889442428	             mov qword [rsp + 0x28], rax	      2681	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4000bf7	    0x660f1f840000	                    nop word [rax + rax]	      2681	undo.c	FUNCTION_41	FOR_1	IF_3	IF_4
0x4000c00	      0x488b442408	                mov rax, qword [rsp + 8]	      2707	undo.c	FUNCTION_41	FOR_1	IF_8
0x4000c05	          0x4885c0	                           test rax, rax	      2707	undo.c	FUNCTION_41	FOR_1	IF_8
0x4000c08	     0xf8eb2020000	                           jle 0x4000ec0	      2707	undo.c	FUNCTION_41	FOR_1	IF_8
0x4000c0e	    0x4c8d3cc50000	                        lea r15, [rax*8]	      2709	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9
0x4000c16	            0x31f6	                            xor esi, esi	      2709	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9
0x4000c18	          0x4c89ff	                            mov rdi, r15	      2709	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9
0x4000c1b	      0xe800000000	                          call 0x4000c20	      2709	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9
0x4000c20	          0x4885c0	                           test rax, rax	      2709	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9
0x4000c23	      0x4889442418	             mov qword [rsp + 0x18], rax	      2709	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9
0x4000c28	     0xf8490030000	                            je 0x4000fbe	      2709	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9
0x4000c2e	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4000c33	        0x4983fc01	                              cmp r12, 1	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4000c37	        0x4c8d78ff	                      lea r15, [rax - 1]	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4000c3b	     0xf8475030000	                            je 0x4000fb6	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4000c41	          0x4889c5	                            mov rbp, rax	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4000c44	          0x4c29e5	                            sub rbp, r12	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4000c47	          0x4929c4	                            sub r12, rax	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4000c4a	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4000c4f	        0x4a8d1ce0	                  lea rbx, [rax + r12*8]	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4000c53	          0x4531e4	                          xor r12d, r12d	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4000c56	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4000c60	          0x4c89ff	                            mov rdi, r15	      3516	undo.c	FUNCTION_62	CALL_2
0x4000c63	      0xe800000000	                          call 0x4000c68	      3516	undo.c	FUNCTION_62	CALL_2
0x4000c68	          0x4889c7	                            mov rdi, rax	      3516	undo.c	FUNCTION_62	CALL_2
0x4000c6b	      0xe800000000	                          call 0x4000c70	      3516	undo.c	FUNCTION_62	CALL_2
0x4000c70	          0x4885c0	                           test rax, rax	      2729	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_10	CALL_13
0x4000c73	      0x4a8944fbf8	        mov qword [rbx + r15*8 - 8], rax	      2729	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_10	CALL_13
0x4000c78	     0xf84ea020000	                            je 0x4000f68	      2729	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_10	CALL_13
0x4000c7e	    0x488b05000000	            mov rax, qword [0x04000c85] 	      2733	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_11
0x4000c85	          0x4c89ff	                            mov rdi, r15	      2735	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	CALL_15
0x4000c88	        0x48833801	                      cmp qword [rax], 1	      2734	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_11
0x4000c8c	      0xb801000000	                              mov eax, 1	      2734	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_11
0x4000c91	        0x440f44e0	                         cmove r12d, eax	      2734	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	IF_11
0x4000c95	            0x31f6	                            xor esi, esi	      2735	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	CALL_15
0x4000c97	        0x4983ef01	                              sub r15, 1	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4000c9b	      0xe800000000	                          call 0x4000ca0	      2735	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	CALL_15
0x4000ca0	          0x4939ef	                            cmp r15, rbp	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4000ca3	            0x75bb	                           jne 0x4000c60	      2726	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3
0x4000ca5	        0x4983fd00	                              cmp r13, 0	      2742	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12
0x4000ca9	            0x7476	                            je 0x4000d21	      2742	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12
0x4000cab	            0x7e6b	                           jle 0x4000d18	      2744	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4
0x4000cad	        0x488b0424	                    mov rax, qword [rsp]	      2744	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4
0x4000cb1	        0x4183e401	                             and r12d, 1	      2744	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4
0x4000cb5	            0x31ed	                            xor ebp, ebp	      2744	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4
0x4000cb7	      0x4d8d7c0500	                    lea r15, [r13 + rax]	      2744	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4
0x4000cbc	          0x4889c3	                            mov rbx, rax	      2656	undo.c	FUNCTION_41	FOR_1
0x4000cbf	            0xeb35	                           jmp 0x4000cf6	      2656	undo.c	FUNCTION_41	FOR_1
0x4000cc1	     0xf1f80000000	                         nop dword [rax]	      2656	undo.c	FUNCTION_41	FOR_1
0x4000cc8	          0x4584e4	                         test r12b, r12b	      2750	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	IF_13
0x4000ccb	            0x7436	                            je 0x4000d03	      2750	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	IF_13
0x4000ccd	      0xba01000000	                              mov edx, 1	      2751	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_16
0x4000cd2	      0xbf01000000	                              mov edi, 1	      2751	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_16
0x4000cd7	      0xe800000000	                          call 0x4000cdc	      2751	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_16
0x4000cdc	        0x498b4620	            mov rax, qword [r14 + 0x20] 	      2754	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_18
0x4000ce0	        0x4883c301	                              add rbx, 1	      2744	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4
0x4000ce4	        0x488b3c28	              mov rdi, qword [rax + rbp]	      2754	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_18
0x4000ce8	        0x4883c508	                              add rbp, 8	      2754	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_18
0x4000cec	      0xe800000000	                          call 0x4000cf1	      2754	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_18
0x4000cf1	          0x4c39fb	                            cmp rbx, r15	      2744	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4
0x4000cf4	            0x7422	                            je 0x4000d18	      2744	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4
0x4000cf6	        0x498b4620	            mov rax, qword [r14 + 0x20] 	      2751	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_16
0x4000cfa	          0x4885db	                           test rbx, rbx	      2750	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	IF_13
0x4000cfd	        0x488b3428	              mov rsi, qword [rax + rbp]	      2751	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_16
0x4000d01	            0x74c5	                            je 0x4000cc8	      2750	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	IF_13
0x4000d03	            0x31c9	                            xor ecx, ecx	      2753	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_17
0x4000d05	            0x31d2	                            xor edx, edx	      2753	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_17
0x4000d07	          0x4889df	                            mov rdi, rbx	      2753	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_17
0x4000d0a	      0xe800000000	                          call 0x4000d0f	      2753	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_17
0x4000d0f	            0xebcb	                           jmp 0x4000cdc	      2753	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_17
0x4000d11	     0xf1f80000000	                         nop dword [rax]	      2753	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	FOR_4	CALL_17
0x4000d18	        0x498b7e20	            mov rdi, qword [r14 + 0x20] 	      2756	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	CALL_19
0x4000d1c	      0xe800000000	                          call 0x4000d21	      2756	undo.c	FUNCTION_41	FOR_1	ELSE_3	IF_12	CALL_19
0x4000d21	      0x4c396c2408	                cmp qword [rsp + 8], r13	      2760	undo.c	FUNCTION_41	FOR_1	IF_14
0x4000d26	     0xf8524010000	                           jne 0x4000e50	      2760	undo.c	FUNCTION_41	FOR_1	IF_14
0x4000d2c	        0x488b0424	                    mov rax, qword [rsp]	      2760	undo.c	FUNCTION_41	FOR_1	IF_14
0x4000d30	            0x31ed	                            xor ebp, ebp	      2760	undo.c	FUNCTION_41	FOR_1	IF_14
0x4000d32	        0x488d5801	                      lea rbx, [rax + 1]	      2760	undo.c	FUNCTION_41	FOR_1	IF_14
0x4000d36	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      2770	undo.c	FUNCTION_41	FOR_1	CALL_21
0x4000d3b	            0x31f6	                            xor esi, esi	      2770	undo.c	FUNCTION_41	FOR_1	CALL_21
0x4000d3d	          0x4889e9	                            mov rcx, rbp	      2770	undo.c	FUNCTION_41	FOR_1	CALL_21
0x4000d40	          0x4889df	                            mov rdi, rbx	      2770	undo.c	FUNCTION_41	FOR_1	CALL_21
0x4000d43	      0xe800000000	                          call 0x4000d48	      2770	undo.c	FUNCTION_41	FOR_1	CALL_21
0x4000d48	    0x488b15000000	            mov rdx, qword [0x04000d4f] 	      2773	undo.c	FUNCTION_41	FOR_1	IF_17
0x4000d4f	    0x48399ae01100	          cmp qword [rdx + 0x11e0], rbx 	      2773	undo.c	FUNCTION_41	FOR_1	IF_17
0x4000d56	            0x7e07	                           jle 0x4000d5f	      2773	undo.c	FUNCTION_41	FOR_1	IF_17
0x4000d58	    0x48899ae01100	          mov qword [rdx + 0x11e0], rbx 	      2774	undo.c	FUNCTION_41	FOR_1	IF_17
0x4000d5f	          0x4d85ed	                           test r13, r13	      2775	undo.c	FUNCTION_41	FOR_1	IF_18
0x4000d62	    0x488b8a001200	          mov rcx, qword [rdx + 0x1200] 	      2775	undo.c	FUNCTION_41	FOR_1	IF_18
0x4000d69	        0x488b0424	                    mov rax, qword [rsp]	      2775	undo.c	FUNCTION_41	FOR_1	IF_18
0x4000d6d	            0x7561	                           jne 0x4000dd0	      2775	undo.c	FUNCTION_41	FOR_1	IF_18
0x4000d6f	          0x4839c8	                            cmp rax, rcx	      2775	undo.c	FUNCTION_41	FOR_1	IF_18
0x4000d72	            0x7c5c	                            jl 0x4000dd0	      2775	undo.c	FUNCTION_41	FOR_1	IF_18
0x4000d74	    0x48899a001200	          mov qword [rdx + 0x1200], rbx 	      2776	undo.c	FUNCTION_41	FOR_1	IF_18
0x4000d7b	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      2781	undo.c	FUNCTION_41	FOR_1
0x4000d80	    0x48010d000000	            add qword [0x04000d87], rcx 	      2781	undo.c	FUNCTION_41	FOR_1
0x4000d87	        0x4883c001	                              add rax, 1	      2784	undo.c	FUNCTION_41	FOR_1
0x4000d8b	        0x49894610	             mov qword [r14 + 0x10], rax	      2784	undo.c	FUNCTION_41	FOR_1
0x4000d8f	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      2790	undo.c	FUNCTION_41	FOR_1
0x4000d94	    0x4c012d000000	            add qword [0x04000d9b], r13 	      2780	undo.c	FUNCTION_41	FOR_1
0x4000d9b	        0x49894e28	             mov qword [r14 + 0x28], rcx	      2782	undo.c	FUNCTION_41	FOR_1
0x4000d9f	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2783	undo.c	FUNCTION_41	FOR_1
0x4000da4	        0x49894e20	             mov qword [r14 + 0x20], rcx	      2783	undo.c	FUNCTION_41	FOR_1
0x4000da8	          0x498b0e	                    mov rcx, qword [r14]	      2789	undo.c	FUNCTION_41	FOR_1
0x4000dab	          0x498906	                    mov qword [r14], rax	      2790	undo.c	FUNCTION_41	FOR_1
0x4000dae	          0x4885c9	                           test rcx, rcx	      2654	undo.c	FUNCTION_41	FOR_1
0x4000db1	     0xf8471020000	                            je 0x4001028	      2654	undo.c	FUNCTION_41	FOR_1
0x4000db7	      0x4c89742420	             mov qword [rsp + 0x20], r14	      2654	undo.c	FUNCTION_41	FOR_1
0x4000dbc	          0x488b02	                    mov rax, qword [rdx]	      2654	undo.c	FUNCTION_41	FOR_1
0x4000dbf	          0x4989ce	                            mov r14, rcx	      2654	undo.c	FUNCTION_41	FOR_1
0x4000dc2	      0xe999fdffff	                           jmp 0x4000b60	      2654	undo.c	FUNCTION_41	FOR_1
0x4000dc7	    0x660f1f840000	                    nop word [rax + rax]	      2654	undo.c	FUNCTION_41	FOR_1
0x4000dd0	          0x4c01e8	                            add rax, r13	      2777	undo.c	FUNCTION_41	FOR_1	ELSE_5	IF_19
0x4000dd3	          0x4839c8	                            cmp rax, rcx	      2777	undo.c	FUNCTION_41	FOR_1	ELSE_5	IF_19
0x4000dd6	            0x7ea3	                           jle 0x4000d7b	      2777	undo.c	FUNCTION_41	FOR_1	ELSE_5	IF_19
0x4000dd8	    0x488982001200	          mov qword [rdx + 0x1200], rax 	      2778	undo.c	FUNCTION_41	FOR_1	ELSE_5	IF_19
0x4000ddf	            0xeb9a	                           jmp 0x4000d7b	      2778	undo.c	FUNCTION_41	FOR_1	ELSE_5	IF_19
0x4000de1	     0xf1f80000000	                         nop dword [rax]	      2778	undo.c	FUNCTION_41	FOR_1	ELSE_5	IF_19
0x4000de8	          0x4839d1	                            cmp rcx, rdx	      2660	undo.c	FUNCTION_41	FOR_1	IF_2
0x4000deb	            0x7d12	                           jge 0x4000dff	      2660	undo.c	FUNCTION_41	FOR_1	IF_2
0x4000ded	          0x4839c1	                            cmp rcx, rax	      2660	undo.c	FUNCTION_41	FOR_1	IF_2
0x4000df0	            0x7f0d	                            jg 0x4000dff	      2660	undo.c	FUNCTION_41	FOR_1	IF_2
0x4000df2	        0x4883c001	                              add rax, 1	      2661	undo.c	FUNCTION_41	FOR_1	IF_2
0x4000df6	          0x4839c2	                            cmp rdx, rax	      2661	undo.c	FUNCTION_41	FOR_1	IF_2
0x4000df9	     0xf8e96fdffff	                           jle 0x4000b95	      2661	undo.c	FUNCTION_41	FOR_1	IF_2
0x4000dff	      0xe800000000	                          call 0x4000e04	      2663	undo.c	FUNCTION_41	FOR_1	IF_2	CALL_5
0x4000e04	            0x31ff	                            xor edi, edi	      2664	undo.c	FUNCTION_41	FOR_1	IF_2	CALL_7
0x4000e06	      0xba05000000	                              mov edx, 5	      2664	undo.c	FUNCTION_41	FOR_1	IF_2	CALL_7
0x4000e0b	      0xbe00000000	                              mov esi, 0	      2664	undo.c	FUNCTION_41	FOR_1	IF_2	CALL_7
0x4000e10	      0xe800000000	                          call 0x4000e15	      2664	undo.c	FUNCTION_41	FOR_1	IF_2	CALL_7
0x4000e15	          0x4889c7	                            mov rdi, rax	      2664	undo.c	FUNCTION_41	FOR_1	IF_2	CALL_7
0x4000e18	      0xe800000000	                          call 0x4000e1d	      2664	undo.c	FUNCTION_41	FOR_1	IF_2	CALL_7
0x4000e1d	    0x488b84241802	           mov rax, qword [rsp + 0x218] 	      2665	undo.c	FUNCTION_41	FOR_1	IF_2	CALL_8
0x4000e25	    0x644833042528	                xor rax, qword fs:[0x28]	      2665	undo.c	FUNCTION_41	FOR_1	IF_2	CALL_8
0x4000e2e	     0xf8500050000	                           jne 0x4001334	      2665	undo.c	FUNCTION_41	FOR_1	IF_2	CALL_8
0x4000e34	    0x4881c4280200	                          add rsp, 0x228	      2892	undo.c	FUNCTION_41
0x4000e3b	              0x5b	                                 pop rbx	      2892	undo.c	FUNCTION_41
0x4000e3c	              0x5d	                                 pop rbp	      2892	undo.c	FUNCTION_41
0x4000e3d	            0x415c	                                 pop r12	      2892	undo.c	FUNCTION_41
0x4000e3f	            0x415d	                                 pop r13	      2892	undo.c	FUNCTION_41
0x4000e41	            0x415e	                                 pop r14	      2892	undo.c	FUNCTION_41
0x4000e43	            0x415f	                                 pop r15	      2892	undo.c	FUNCTION_41
0x4000e45	      0xe900000000	                           jmp 0x4000e4a	      2665	undo.c	FUNCTION_41	FOR_1	IF_2	CALL_8
0x4000e4a	    0x660f1f440000	                    nop word [rax + rax]	      2665	undo.c	FUNCTION_41	FOR_1	IF_2	CALL_8
0x4000e50	        0x488b0424	                    mov rax, qword [rsp]	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_20
0x4000e54	      0x488b742408	                mov rsi, qword [rsp + 8]	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_20
0x4000e59	          0x4c89ed	                            mov rbp, r13	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_20
0x4000e5c	      0xbaffffff7f	                     mov edx, 0x7fffffff	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_20
0x4000e61	          0x4989c4	                            mov r12, rax	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_20
0x4000e64	        0x488d5801	                      lea rbx, [rax + 1]	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_20
0x4000e68	          0x4829f5	                            sub rbp, rsi	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_20
0x4000e6b	          0x4901f4	                            add r12, rsi	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_20
0x4000e6e	          0x4889e9	                            mov rcx, rbp	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_20
0x4000e71	          0x4c89e6	                            mov rsi, r12	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_20
0x4000e74	          0x4889df	                            mov rdi, rbx	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_20
0x4000e77	      0xe800000000	                          call 0x4000e7c	      2762	undo.c	FUNCTION_41	FOR_1	IF_14	CALL_20
0x4000e7c	    0x488b05000000	            mov rax, qword [0x04000e83] 	      2764	undo.c	FUNCTION_41	FOR_1	IF_14	IF_15
0x4000e83	    0x488b90e01100	          mov rdx, qword [rax + 0x11e0] 	      2764	undo.c	FUNCTION_41	FOR_1	IF_14	IF_15
0x4000e8a	          0x4939d4	                            cmp r12, rdx	      2764	undo.c	FUNCTION_41	FOR_1	IF_14	IF_15
0x4000e8d	            0x7d0a	                           jge 0x4000e99	      2764	undo.c	FUNCTION_41	FOR_1	IF_14	IF_15
0x4000e8f	          0x4801ea	                            add rdx, rbp	      2765	undo.c	FUNCTION_41	FOR_1	IF_14	IF_15
0x4000e92	    0x488990e01100	          mov qword [rax + 0x11e0], rdx 	      2765	undo.c	FUNCTION_41	FOR_1	IF_14	IF_15
0x4000e99	    0x488b90001200	          mov rdx, qword [rax + 0x1200] 	      2766	undo.c	FUNCTION_41	FOR_1	IF_14	IF_16
0x4000ea0	          0x4939d4	                            cmp r12, rdx	      2766	undo.c	FUNCTION_41	FOR_1	IF_14	IF_16
0x4000ea3	     0xf8d8dfeffff	                           jge 0x4000d36	      2766	undo.c	FUNCTION_41	FOR_1	IF_14	IF_16
0x4000ea9	          0x4801ea	                            add rdx, rbp	      2767	undo.c	FUNCTION_41	FOR_1	IF_14	IF_16
0x4000eac	    0x488990001200	          mov qword [rax + 0x1200], rdx 	      2767	undo.c	FUNCTION_41	FOR_1	IF_14	IF_16
0x4000eb3	      0xe97efeffff	                           jmp 0x4000d36	      2767	undo.c	FUNCTION_41	FOR_1	IF_14	IF_16
0x4000eb8	     0xf1f84000000	                   nop dword [rax + rax]	      2767	undo.c	FUNCTION_41	FOR_1	IF_14	IF_16
0x4000ec0	          0x4531e4	                          xor r12d, r12d	      2704	undo.c	FUNCTION_41	FOR_1
0x4000ec3	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2739	undo.c	FUNCTION_41	FOR_1	ELSE_3
0x4000ecc	      0xe9d4fdffff	                           jmp 0x4000ca5	      2739	undo.c	FUNCTION_41	FOR_1	ELSE_3
0x4000ed1	     0xf1f80000000	                         nop dword [rax]	      2739	undo.c	FUNCTION_41	FOR_1	ELSE_3
0x4000ed8	    0x48837c240800	                  cmp qword [rsp + 8], 0	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4000ede	     0xf8e90000000	                           jle 0x4000f74	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4000ee4	        0x488b0424	                    mov rax, qword [rsp]	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4000ee8	            0x31ed	                            xor ebp, ebp	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4000eea	          0x4d85ed	                           test r13, r13	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4000eed	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4000ef2	        0x488d5801	                      lea rbx, [rax + 1]	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4000ef6	            0x7f16	                            jg 0x4000f0e	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4000ef8	            0xeb7a	                           jmp 0x4000f74	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4000efa	    0x660f1f440000	                    nop word [rax + rax]	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4000f00	        0x4883c501	                              add rbp, 1	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4000f04	          0x4939ed	                            cmp r13, rbp	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4000f07	            0x7e77	                           jle 0x4000f80	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4000f09	          0x4939ef	                            cmp r15, rbp	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4000f0c	            0x7e72	                           jle 0x4000f80	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4000f0e	        0x488d3c2b	                    lea rdi, [rbx + rbp]	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4000f12	      0xe800000000	                          call 0x4000f17	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4000f17	        0x498b5620	            mov rdx, qword [r14 + 0x20] 	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4000f1b	          0x4889c6	                            mov rsi, rax	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4000f1e	        0x488b3cea	            mov rdi, qword [rdx + rbp*8]	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4000f22	      0xe800000000	                          call 0x4000f27	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4000f27	            0x85c0	                           test eax, eax	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4000f29	            0x74d5	                            je 0x4000f00	      2689	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2	IF_5	CALL_10
0x4000f2b	    0x48817c2428ff	     cmp qword [rsp + 0x28], 0x7fffffff 	      2691	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4000f34	            0x7563	                           jne 0x4000f99	      2691	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4000f36	          0x4939ed	                            cmp r13, rbp	      2691	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4000f39	            0x755e	                           jne 0x4000f99	      2691	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4000f3b	        0x49833e00	                      cmp qword [r14], 0	      2691	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4000f3f	     0xf85bbfcffff	                           jne 0x4000c00	      2691	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4000f45	        0x488b0c24	                    mov rcx, qword [rsp]	      2694	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4000f49	    0x488b05000000	            mov rax, qword [0x04000f50] 	      2694	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4000f50	        0x488d5101	                      lea rdx, [rcx + 1]	      2694	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4000f54	      0x48894c2428	             mov qword [rsp + 0x28], rcx	      2694	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4000f59	        0x48895038	             mov qword [rax + 0x38], rdx	      2694	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4000f5d	      0xe99efcffff	                           jmp 0x4000c00	      2694	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4000f62	    0x660f1f440000	                    nop word [rax + rax]	      2694	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4000f68	            0x31ff	                            xor edi, edi	      2730	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	CALL_14
0x4000f6a	      0xe800000000	                          call 0x4000f6f	      2730	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	CALL_14
0x4000f6f	      0xe90afdffff	                           jmp 0x4000c7e	      2730	undo.c	FUNCTION_41	FOR_1	IF_8	FOR_3	CALL_14
0x4000f74	            0x31ed	                            xor ebp, ebp	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4000f76	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2688	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	FOR_2
0x4000f80	          0x4939ed	                            cmp r13, rbp	      2691	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4000f83	            0x750b	                           jne 0x4000f90	      2691	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4000f85	    0x48817c2428ff	     cmp qword [rsp + 0x28], 0x7fffffff 	      2691	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4000f8e	            0x74ab	                            je 0x4000f3b	      2691	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	IF_6
0x4000f90	          0x4939ed	                            cmp r13, rbp	      2696	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	ELSE_2	IF_7
0x4000f93	     0xf8e67fcffff	                           jle 0x4000c00	      2696	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	ELSE_2	IF_7
0x4000f99	        0x48032c24	                    add rbp, qword [rsp]	      2698	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	ELSE_2	IF_7
0x4000f9d	    0x488b05000000	            mov rax, qword [0x04000fa4] 	      2699	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	ELSE_2	IF_7
0x4000fa4	        0x488d5501	                      lea rdx, [rbp + 1]	      2699	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	ELSE_2	IF_7
0x4000fa8	      0x48896c2428	             mov qword [rsp + 0x28], rbp	      2698	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	ELSE_2	IF_7
0x4000fad	        0x48895038	             mov qword [rax + 0x38], rdx	      2699	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	ELSE_2	IF_7
0x4000fb1	      0xe94afcffff	                           jmp 0x4000c00	      2699	undo.c	FUNCTION_41	FOR_1	IF_3	ELSE_1	ELSE_2	IF_7
0x4000fb6	          0x4531e4	                          xor r12d, r12d	      2704	undo.c	FUNCTION_41	FOR_1
0x4000fb9	      0xe9e7fcffff	                           jmp 0x4000ca5	      2704	undo.c	FUNCTION_41	FOR_1
0x4000fbe	          0x4c89ff	                            mov rdi, r15	      2712	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	CALL_11
0x4000fc1	      0xe800000000	                          call 0x4000fc6	      2712	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	CALL_11
0x4000fc6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2712	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	CALL_11
0x4000fd0	        0x498b4628	            mov rax, qword [r14 + 0x28] 	      2720	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1	CALL_12
0x4000fd4	          0x4d8b26	                    mov r12, qword [r14]	      2719	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1
0x4000fd7	        0x488d68ff	                      lea rbp, [rax - 1]	      2719	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1
0x4000fdb	          0x4885c0	                           test rax, rax	      3397	undo.c	FUNCTION_56	WHILE_1
0x4000fde	    0x488d1ced0000	                        lea rbx, [rbp*8]	      3397	undo.c	FUNCTION_56	WHILE_1
0x4000fe6	            0x7f0c	                            jg 0x4000ff4	      3397	undo.c	FUNCTION_56	WHILE_1
0x4000fe8	            0xeb20	                           jmp 0x400100a	      3397	undo.c	FUNCTION_56	WHILE_1
0x4000fea	    0x660f1f440000	                    nop word [rax + rax]	      3397	undo.c	FUNCTION_56	WHILE_1
0x4000ff0	        0x4883ed01	                              sub rbp, 1	      3397	undo.c	FUNCTION_56	WHILE_1
0x4000ff4	        0x498b4620	            mov rax, qword [r14 + 0x20] 	      3398	undo.c	FUNCTION_56	CALL_1
0x4000ff8	        0x488b3c18	              mov rdi, qword [rax + rbx]	      3398	undo.c	FUNCTION_56	CALL_1
0x4000ffc	        0x4883eb08	                              sub rbx, 8	      3398	undo.c	FUNCTION_56	CALL_1
0x4001000	      0xe800000000	                          call 0x4001005	      3398	undo.c	FUNCTION_56	CALL_1
0x4001005	          0x4885ed	                           test rbp, rbp	      3397	undo.c	FUNCTION_56	WHILE_1
0x4001008	            0x75e6	                           jne 0x4000ff0	      3397	undo.c	FUNCTION_56	WHILE_1
0x400100a	        0x498b7e20	            mov rdi, qword [r14 + 0x20] 	      3399	undo.c	FUNCTION_56	CALL_2
0x400100e	      0xe800000000	                          call 0x4001013	      3399	undo.c	FUNCTION_56	CALL_2
0x4001013	          0x4c89f7	                            mov rdi, r14	      3403	undo.c	FUNCTION_56	CALL_3
0x4001016	          0x4d89e6	                            mov r14, r12	      3403	undo.c	FUNCTION_56	CALL_3
0x4001019	      0xe800000000	                          call 0x400101e	      3403	undo.c	FUNCTION_56	CALL_3
0x400101e	          0x4d85e4	                           test r12, r12	      2717	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1
0x4001021	            0x75ad	                           jne 0x4000fd0	      2717	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1
0x4001023	      0x4c8b742420	            mov r14, qword [rsp + 0x20] 	      2717	undo.c	FUNCTION_41	FOR_1	IF_8	IF_9	WHILE_1
0x4001028	        0x8b4c2440	            mov ecx, dword [rsp + 0x40] 	      2795	undo.c	FUNCTION_41
0x400102c	            0x31c0	                            xor eax, eax	      2795	undo.c	FUNCTION_41
0x400102e	      0x488b5c2430	            mov rbx, qword [rsp + 0x30] 	      2794	undo.c	FUNCTION_41
0x4001033	            0x85c9	                           test ecx, ecx	      2795	undo.c	FUNCTION_41
0x4001035	        0x4c897330	             mov qword [rbx + 0x30], r14	      2794	undo.c	FUNCTION_41
0x4001039	           0xf95c0	                                setne al	      2795	undo.c	FUNCTION_41
0x400103c	         0x344243c	             add eax, dword [rsp + 0x3c]	      2795	undo.c	FUNCTION_41
0x4001040	      0xf644243802	               test byte [rsp + 0x38], 2	      2796	undo.c	FUNCTION_41	IF_20	CALL_22
0x4001045	          0x894358	             mov dword [rbx + 0x58], eax	      2795	undo.c	FUNCTION_41
0x4001048	            0x7411	                            je 0x400105b	      2796	undo.c	FUNCTION_41	IF_20	CALL_22
0x400104a	    0x488b05000000	            mov rax, qword [0x04001051] 	      2796	undo.c	FUNCTION_41	IF_20	CALL_22
0x4001051	        0x48833801	                      cmp qword [rax], 1	      2796	undo.c	FUNCTION_41	IF_20	CALL_22
0x4001055	     0xf84a3020000	                            je 0x40012fe	      2796	undo.c	FUNCTION_41	IF_20	CALL_22
0x400105b	      0xf644243801	               test byte [rsp + 0x38], 1	      2798	undo.c	FUNCTION_41	IF_21
0x4001060	     0xf8519020000	                           jne 0x400127f	      2798	undo.c	FUNCTION_41	IF_21
0x4001066	    0x488b3d000000	            mov rdi, qword [0x0400106d] 	      2803	undo.c	FUNCTION_41	ELSE_6	IF_22	CALL_24
0x400106d	      0xe800000000	                          call 0x4001072	      2803	undo.c	FUNCTION_41	ELSE_6	IF_22	CALL_24
0x4001072	            0x85c0	                           test eax, eax	      2803	undo.c	FUNCTION_41	ELSE_6	IF_22	CALL_24
0x4001074	     0xf845e020000	                            je 0x40012d8	      2803	undo.c	FUNCTION_41	ELSE_6	IF_22	CALL_24
0x400107a	    0x488b15000000	            mov rdx, qword [0x04001081] 	      2803	undo.c	FUNCTION_41	ELSE_6	IF_22	CALL_24
0x4001081	            0x31c0	                            xor eax, eax	      2803	undo.c	FUNCTION_41	ELSE_6	IF_22	CALL_24
0x4001083	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      2803	undo.c	FUNCTION_41	ELSE_6	IF_22	CALL_24
0x4001088	            0xeb26	                           jmp 0x40010b0	      2803	undo.c	FUNCTION_41	ELSE_6	IF_22	CALL_24
0x400108a	    0x660f1f440000	                    nop word [rax + rax]	      2803	undo.c	FUNCTION_41	ELSE_6	IF_22	CALL_24
0x4001090	      0x488b740470	      mov rsi, qword [rsp + rax + 0x70] 	      2815	undo.c	FUNCTION_41	FOR_5	IF_24
0x4001095	      0x488b7c0478	      mov rdi, qword [rsp + rax + 0x78] 	      2815	undo.c	FUNCTION_41	FOR_5	IF_24
0x400109a	      0x4889740160	       mov qword [rcx + rax + 0x60], rsi	      2815	undo.c	FUNCTION_41	FOR_5	IF_24
0x400109f	      0x48897c0168	       mov qword [rcx + rax + 0x68], rdi	      2815	undo.c	FUNCTION_41	FOR_5	IF_24
0x40010a4	        0x4883c010	                           add rax, 0x10	      2815	undo.c	FUNCTION_41	FOR_5	IF_24
0x40010a8	    0x483da0010000	                          cmp rax, 0x1a0	      2810	undo.c	FUNCTION_41	FOR_5
0x40010ae	            0x743f	                            je 0x40010ef	      2810	undo.c	FUNCTION_41	FOR_5
0x40010b0	    0x48837c016000	         cmp qword [rcx + rax + 0x60], 0	      2812	undo.c	FUNCTION_41	FOR_5	IF_23
0x40010b6	            0x741a	                            je 0x40010d2	      2812	undo.c	FUNCTION_41	FOR_5	IF_23
0x40010b8	      0x488b740160	      mov rsi, qword [rcx + rax + 0x60] 	      2813	undo.c	FUNCTION_41	FOR_5	IF_23
0x40010bd	      0x488b7c0168	      mov rdi, qword [rcx + rax + 0x68] 	      2813	undo.c	FUNCTION_41	FOR_5	IF_23
0x40010c2	    0x4889b4025801	      mov qword [rdx + rax + 0x158], rsi	      2813	undo.c	FUNCTION_41	FOR_5	IF_23
0x40010ca	    0x4889bc026001	      mov qword [rdx + rax + 0x160], rdi	      2813	undo.c	FUNCTION_41	FOR_5	IF_23
0x40010d2	    0x48837c047000	         cmp qword [rsp + rax + 0x70], 0	      2814	undo.c	FUNCTION_41	FOR_5	IF_24
0x40010d8	            0x75b6	                           jne 0x4001090	      2814	undo.c	FUNCTION_41	FOR_5	IF_24
0x40010da	    0x48c744016000	         mov qword [rcx + rax + 0x60], 0	      2817	undo.c	FUNCTION_41	FOR_5	ELSE_7
0x40010e3	        0x4883c010	                           add rax, 0x10	      2817	undo.c	FUNCTION_41	FOR_5	ELSE_7
0x40010e7	    0x483da0010000	                          cmp rax, 0x1a0	      2810	undo.c	FUNCTION_41	FOR_5
0x40010ed	            0x75c1	                           jne 0x40010b0	      2810	undo.c	FUNCTION_41	FOR_5
0x40010ef	      0x488b5c2430	            mov rbx, qword [rsp + 0x30] 	      2819	undo.c	FUNCTION_41	ELSE_7	IF_25
0x40010f4	    0x4883bb000200	              cmp qword [rbx + 0x200], 0	      2819	undo.c	FUNCTION_41	ELSE_7	IF_25
0x40010fc	     0xf849d000000	                            je 0x400119f	      2819	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4001102	    0x488b83000200	           mov rax, qword [rbx + 0x200] 	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4001109	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x400110e	    0x488982f80200	            mov qword [rdx + 0x2f8], rax	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4001115	    0x488b83080200	           mov rax, qword [rbx + 0x208] 	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x400111c	    0x488982000300	            mov qword [rdx + 0x300], rax	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4001123	    0x488b83100200	           mov rax, qword [rbx + 0x210] 	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x400112a	    0x488982080300	            mov qword [rdx + 0x308], rax	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4001131	    0x488b83180200	           mov rax, qword [rbx + 0x218] 	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4001138	    0x488982100300	            mov qword [rdx + 0x310], rax	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x400113f	    0x488b83200200	           mov rax, qword [rbx + 0x220] 	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4001146	    0x488982180300	            mov qword [rdx + 0x318], rax	      2821	undo.c	FUNCTION_41	ELSE_7	IF_25
0x400114d	    0x48898b000200	            mov qword [rbx + 0x200], rcx	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4001154	          0x4889d8	                            mov rax, rbx	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4001157	        0x8b5c2464	            mov ebx, dword [rsp + 0x64] 	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x400115b	        0x8b4c2460	            mov ecx, dword [rsp + 0x60] 	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x400115f	    0x899808020000	            mov dword [rax + 0x208], ebx	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4001165	      0x488b5c2448	            mov rbx, qword [rsp + 0x48] 	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x400116a	    0x89880c020000	            mov dword [rax + 0x20c], ecx	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4001170	        0x8b4c2450	            mov ecx, dword [rsp + 0x50] 	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4001174	    0x488998100200	            mov qword [rax + 0x210], rbx	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x400117b	        0x8b5c2454	            mov ebx, dword [rsp + 0x54] 	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x400117f	    0x898818020000	            mov dword [rax + 0x218], ecx	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4001185	        0x8b4c2458	            mov ecx, dword [rsp + 0x58] 	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4001189	    0x89981c020000	            mov dword [rax + 0x21c], ebx	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x400118f	        0x8b5c245c	            mov ebx, dword [rsp + 0x5c] 	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4001193	    0x898820020000	            mov dword [rax + 0x220], ecx	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x4001199	    0x899824020000	            mov dword [rax + 0x224], ebx	      2822	undo.c	FUNCTION_41	ELSE_7	IF_25
0x400119f	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      2830	undo.c	FUNCTION_41	IF_26
0x40011a4	    0x488b0d000000	            mov rcx, qword [0x040011ab] 	      2830	undo.c	FUNCTION_41	IF_26
0x40011ab	        0x488b7040	            mov rsi, qword [rax + 0x40] 	      2830	undo.c	FUNCTION_41	IF_26
0x40011af	        0x488b4138	            mov rax, qword [rcx + 0x38] 	      2830	undo.c	FUNCTION_41	IF_26
0x40011b3	        0x488d7e01	                      lea rdi, [rsi + 1]	      2831	undo.c	FUNCTION_41	IF_26
0x40011b7	          0x4839c7	                            cmp rdi, rax	      2831	undo.c	FUNCTION_41	IF_26
0x40011ba	            0x750e	                           jne 0x40011ca	      2831	undo.c	FUNCTION_41	IF_26
0x40011bc	        0x4883f801	                              cmp rax, 1	      2831	undo.c	FUNCTION_41	IF_26
0x40011c0	            0x7e08	                           jle 0x40011ca	      2831	undo.c	FUNCTION_41	IF_26
0x40011c2	        0x4883e801	                              sub rax, 1	      2832	undo.c	FUNCTION_41	IF_26
0x40011c6	        0x48894138	             mov qword [rcx + 0x38], rax	      2832	undo.c	FUNCTION_41	IF_26
0x40011ca	          0x483902	                    cmp qword [rdx], rax	      2833	undo.c	FUNCTION_41	IF_27
0x40011cd	     0xf8cb6000000	                            jl 0x4001289	      2833	undo.c	FUNCTION_41	IF_27
0x40011d3	          0x4839c6	                            cmp rsi, rax	      2835	undo.c	FUNCTION_41	IF_27	IF_28
0x40011d6	     0xf84d5000000	                            je 0x40012b1	      2835	undo.c	FUNCTION_41	IF_27	IF_28
0x40011dc	      0xbf06000000	                              mov edi, 6	      2846	undo.c	FUNCTION_41	IF_27	CALL_28
0x40011e1	      0xe800000000	                          call 0x40011e6	      2846	undo.c	FUNCTION_41	IF_27	CALL_28
0x40011e6	      0xe800000000	                          call 0x40011eb	      2861	undo.c	FUNCTION_41	CALL_29
0x40011eb	      0x488b5c2430	            mov rbx, qword [rsp + 0x30] 	      2864	undo.c	FUNCTION_41
0x40011f0	    0x488b05000000	            mov rax, qword [0x040011f7] 	      2864	undo.c	FUNCTION_41
0x40011f7	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	      2864	undo.c	FUNCTION_41
0x40011fb	    0x488990481200	          mov qword [rax + 0x1248], rdx 	      2864	undo.c	FUNCTION_41
0x4001202	        0x8b542444	            mov edx, dword [rsp + 0x44] 	      2865	undo.c	FUNCTION_41	IF_30
0x4001206	            0x85d2	                           test edx, edx	      2865	undo.c	FUNCTION_41	IF_30
0x4001208	     0xf848e000000	                            je 0x400129c	      2865	undo.c	FUNCTION_41	IF_30
0x400120e	          0x488b13	                    mov rdx, qword [rbx]	      2869	undo.c	FUNCTION_41	IF_30	IF_31
0x4001211	          0x4885d2	                           test rdx, rdx	      2869	undo.c	FUNCTION_41	IF_30	IF_31
0x4001214	     0xf8407010000	                            je 0x4001321	      2869	undo.c	FUNCTION_41	IF_30	IF_31
0x400121a	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      2870	undo.c	FUNCTION_41	IF_30	IF_31
0x400121e	    0x488990481200	          mov qword [rax + 0x1248], rdx 	      2870	undo.c	FUNCTION_41	IF_30	IF_31
0x4001225	          0x4889da	                            mov rdx, rbx	      2870	undo.c	FUNCTION_41	IF_30	IF_31
0x4001228	    0x488b92300200	           mov rdx, qword [rdx + 0x230] 	      2876	undo.c	FUNCTION_41	ELSE_11	IF_32
0x400122f	          0x4885d2	                           test rdx, rdx	      2876	undo.c	FUNCTION_41	ELSE_11	IF_32
0x4001232	            0x740b	                            je 0x400123f	      2876	undo.c	FUNCTION_41	ELSE_11	IF_32
0x4001234	        0x4883ea01	                              sub rdx, 1	      2879	undo.c	FUNCTION_41	ELSE_11	IF_32	IF_33
0x4001238	    0x488990581200	          mov qword [rax + 0x1258], rdx 	      2879	undo.c	FUNCTION_41	ELSE_11	IF_32	IF_33
0x400123f	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      2886	undo.c	FUNCTION_41
0x4001244	    0x488b91280200	           mov rdx, qword [rcx + 0x228] 	      2886	undo.c	FUNCTION_41
0x400124b	    0x488990501200	          mov qword [rax + 0x1250], rdx 	      2886	undo.c	FUNCTION_41
0x4001252	    0x488b84241802	           mov rax, qword [rsp + 0x218] 	      2888	undo.c	FUNCTION_41	CALL_30
0x400125a	    0x644833042528	                xor rax, qword fs:[0x28]	      2888	undo.c	FUNCTION_41	CALL_30
0x4001263	     0xf85cb000000	                           jne 0x4001334	      2888	undo.c	FUNCTION_41	CALL_30
0x4001269	    0x4881c4280200	                          add rsp, 0x228	      2892	undo.c	FUNCTION_41
0x4001270	              0x5b	                                 pop rbx	      2892	undo.c	FUNCTION_41
0x4001271	              0x5d	                                 pop rbp	      2892	undo.c	FUNCTION_41
0x4001272	            0x415c	                                 pop r12	      2892	undo.c	FUNCTION_41
0x4001274	            0x415d	                                 pop r13	      2892	undo.c	FUNCTION_41
0x4001276	            0x415e	                                 pop r14	      2892	undo.c	FUNCTION_41
0x4001278	            0x415f	                                 pop r15	      2892	undo.c	FUNCTION_41
0x400127a	      0xe900000000	                           jmp 0x400127f	      2888	undo.c	FUNCTION_41	CALL_30
0x400127f	      0xe800000000	                          call 0x4001284	      2799	undo.c	FUNCTION_41	CALL_23
0x4001284	      0xe9f1fdffff	                           jmp 0x400107a	      2799	undo.c	FUNCTION_41	CALL_23
0x4001289	    0xc74140000000	               mov dword [rcx + 0x40], 0	      2854	undo.c	FUNCTION_41	ELSE_10
0x4001290	    0xc74144000000	               mov dword [rcx + 0x44], 0	      2856	undo.c	FUNCTION_41	ELSE_10
0x4001297	      0xe94affffff	                           jmp 0x40011e6	      2856	undo.c	FUNCTION_41	ELSE_10
0x400129c	    0x488b93300200	           mov rdx, qword [rbx + 0x230] 	      2876	undo.c	FUNCTION_41	ELSE_11	IF_32
0x40012a3	          0x4885d2	                           test rdx, rdx	      2876	undo.c	FUNCTION_41	ELSE_11	IF_32
0x40012a6	            0x7497	                            je 0x400123f	      2876	undo.c	FUNCTION_41	ELSE_11	IF_32
0x40012a8	    0x488990581200	          mov qword [rax + 0x1258], rdx 	      2881	undo.c	FUNCTION_41	ELSE_11	IF_32	ELSE_12
0x40012af	            0xeb8e	                           jmp 0x400123f	      2881	undo.c	FUNCTION_41	ELSE_11	IF_32	ELSE_12
0x40012b1	      0x488b5c2430	            mov rbx, qword [rsp + 0x30] 	      2837	undo.c	FUNCTION_41	IF_27	IF_28
0x40012b6	          0x8b4348	            mov eax, dword [rbx + 0x48] 	      2837	undo.c	FUNCTION_41	IF_27	IF_28
0x40012b9	          0x894140	             mov dword [rcx + 0x40], eax	      2837	undo.c	FUNCTION_41	IF_27	IF_28
0x40012bc	      0xe800000000	                          call 0x40012c1	      2839	undo.c	FUNCTION_41	IF_27	IF_28	IF_29	CALL_26
0x40012c1	            0x85c0	                           test eax, eax	      2839	undo.c	FUNCTION_41	IF_27	IF_28	IF_29	CALL_26
0x40012c3	            0x7426	                            je 0x40012eb	      2839	undo.c	FUNCTION_41	IF_27	IF_28	IF_29	CALL_26
0x40012c5	        0x488b7b50	            mov rdi, qword [rbx + 0x50] 	      2839	undo.c	FUNCTION_41	IF_27	IF_28	IF_29	CALL_26
0x40012c9	          0x4885ff	                           test rdi, rdi	      2839	undo.c	FUNCTION_41	IF_27	IF_28	IF_29	CALL_26
0x40012cc	            0x781d	                            js 0x40012eb	      2839	undo.c	FUNCTION_41	IF_27	IF_28	IF_29	CALL_26
0x40012ce	      0xe800000000	                          call 0x40012d3	      2840	undo.c	FUNCTION_41	IF_27	IF_28	CALL_27
0x40012d3	      0xe90effffff	                           jmp 0x40011e6	      2840	undo.c	FUNCTION_41	IF_27	IF_28	CALL_27
0x40012d8	    0x488b3d000000	            mov rdi, qword [0x040012df] 	      2805	undo.c	FUNCTION_41	ELSE_6	IF_22
0x40012df	            0x31f6	                            xor esi, esi	      2805	undo.c	FUNCTION_41	ELSE_6	IF_22
0x40012e1	      0xe800000000	                          call 0x40012e6	      2805	undo.c	FUNCTION_41	ELSE_6	IF_22
0x40012e6	      0xe98ffdffff	                           jmp 0x400107a	      2805	undo.c	FUNCTION_41	ELSE_6	IF_22
0x40012eb	    0x488b05000000	            mov rax, qword [0x040012f2] 	      2842	undo.c	FUNCTION_41	IF_27	IF_28	ELSE_8
0x40012f2	    0xc74044000000	               mov dword [rax + 0x44], 0	      2842	undo.c	FUNCTION_41	IF_27	IF_28	ELSE_8
0x40012f9	      0xe9e8feffff	                           jmp 0x40011e6	      2842	undo.c	FUNCTION_41	IF_27	IF_28	ELSE_8
0x40012fe	      0xbf01000000	                              mov edi, 1	      2796	undo.c	FUNCTION_41	IF_20	CALL_22
0x4001303	      0xe800000000	                          call 0x4001308	      2796	undo.c	FUNCTION_41	IF_20	CALL_22
0x4001308	          0x803800	                       cmp byte [rax], 0	      2796	undo.c	FUNCTION_41	IF_20	CALL_22
0x400130b	     0xf854afdffff	                           jne 0x400105b	      2796	undo.c	FUNCTION_41	IF_20	CALL_22
0x4001311	    0x488b05000000	            mov rax, qword [0x04001318] 	      2797	undo.c	FUNCTION_41	IF_20
0x4001318	        0x83481001	                or dword [rax + 0x10], 1	      2797	undo.c	FUNCTION_41	IF_20
0x400131c	      0xe93afdffff	                           jmp 0x400105b	      2797	undo.c	FUNCTION_41	IF_20
0x4001321	    0x48c780481200	            mov qword [rax + 0x1248], 0 	      2872	undo.c	FUNCTION_41	IF_30	ELSE_11
0x400132c	          0x4889da	                            mov rdx, rbx	      2872	undo.c	FUNCTION_41	IF_30	ELSE_11
0x400132f	      0xe9f4feffff	                           jmp 0x4001228	      2872	undo.c	FUNCTION_41	IF_30	ELSE_11
0x4001334	      0xe800000000	                          call 0x4001339	      2888	undo.c	FUNCTION_41	CALL_30
u_clearall	IF,0:CALL,0:functions,0:FOR,0:DO,0:WHILE,0:ELSE,0:SWITCH,0	8
0x4005120	    0x48c787281200	            mov qword [rdi + 0x1228], 0 	      3412	undo.c	FUNCTION_57
0x400512b	    0x48c787181200	            mov qword [rdi + 0x1218], 0 	      3412	undo.c	FUNCTION_57
0x4005136	    0x48c787201200	            mov qword [rdi + 0x1220], 0 	      3412	undo.c	FUNCTION_57
0x4005141	    0xc78734120000	            mov dword [rdi + 0x1234], 1 	      3413	undo.c	FUNCTION_57
0x400514b	    0xc78730120000	            mov dword [rdi + 0x1230], 0 	      3414	undo.c	FUNCTION_57
0x4005155	    0x48c787601200	            mov qword [rdi + 0x1260], 0 	      3415	undo.c	FUNCTION_57
0x4005160	    0x48c787681200	            mov qword [rdi + 0x1268], 0 	      3416	undo.c	FUNCTION_57
0x400516b	              0xc3	                                     ret	      3416	undo.c	FUNCTION_57
u_find_first_changed	IF,4:CALL,4:functions,0:FOR,1:DO,0:WHILE,0:ELSE,0:SWITCH,0	61
0x4004ff0	    0x488b3d000000	            mov rdi, qword [0x04004ff7] 	      3173	undo.c	FUNCTION_48
0x4004ff7	            0x4156	                                push r14	      3172	undo.c	FUNCTION_48
0x4004ff9	            0x4155	                                push r13	      3172	undo.c	FUNCTION_48
0x4004ffb	            0x4154	                                push r12	      3172	undo.c	FUNCTION_48
0x4004ffd	              0x55	                                push rbp	      3172	undo.c	FUNCTION_48
0x4004ffe	              0x53	                                push rbx	      3172	undo.c	FUNCTION_48
0x4004fff	    0x4883bf281200	             cmp qword [rdi + 0x1228], 0	      3177	undo.c	FUNCTION_48	IF_1
0x4005007	    0x488baf201200	          mov rbp, qword [rdi + 0x1220] 	      3173	undo.c	FUNCTION_48
0x400500e	     0xf858f000000	                           jne 0x40050a3	      3177	undo.c	FUNCTION_48	IF_1
0x4005014	          0x4885ed	                           test rbp, rbp	      3177	undo.c	FUNCTION_48	IF_1
0x4005017	     0xf8486000000	                            je 0x40050a3	      3177	undo.c	FUNCTION_48	IF_1
0x400501d	        0x4c8b6d30	            mov r13, qword [rbp + 0x30] 	      3181	undo.c	FUNCTION_48
0x4005021	      0x49837d0800	                  cmp qword [r13 + 8], 0	      3182	undo.c	FUNCTION_48	IF_2
0x4005026	            0x757b	                           jne 0x40050a3	      3182	undo.c	FUNCTION_48	IF_2
0x4005028	      0x49837d1000	               cmp qword [r13 + 0x10], 0	      3182	undo.c	FUNCTION_48	IF_2
0x400502d	            0x7574	                           jne 0x40050a3	      3182	undo.c	FUNCTION_48	IF_2
0x400502f	          0x488b07	                    mov rax, qword [rdi]	      3185	undo.c	FUNCTION_48	FOR_1
0x4005032	        0x4883f801	                              cmp rax, 1	      3185	undo.c	FUNCTION_48	FOR_1
0x4005036	            0x7e74	                           jle 0x40050ac	      3185	undo.c	FUNCTION_48	FOR_1
0x4005038	      0x49837d2800	               cmp qword [r13 + 0x28], 0	      3186	undo.c	FUNCTION_48	FOR_1
0x400503d	     0xf8e7c000000	                           jle 0x40050bf	      3186	undo.c	FUNCTION_48	FOR_1
0x4005043	          0x4531e4	                          xor r12d, r12d	      3186	undo.c	FUNCTION_48	FOR_1
0x4005046	      0xbb01000000	                              mov ebx, 1	      3186	undo.c	FUNCTION_48	FOR_1
0x400504b	            0xeb23	                           jmp 0x4005070	      3186	undo.c	FUNCTION_48	FOR_1
0x400504d	           0xf1f00	                         nop dword [rax]	      3186	undo.c	FUNCTION_48	FOR_1
0x4005050	    0x488b3d000000	            mov rdi, qword [0x04005057] 	      3185	undo.c	FUNCTION_48	FOR_1
0x4005057	        0x4883c301	                              add rbx, 1	      3186	undo.c	FUNCTION_48	FOR_1
0x400505b	        0x498b5528	            mov rdx, qword [r13 + 0x28] 	      3186	undo.c	FUNCTION_48	FOR_1
0x400505f	          0x488b07	                    mov rax, qword [rdi]	      3185	undo.c	FUNCTION_48	FOR_1
0x4005062	          0x4839d8	                            cmp rax, rbx	      3185	undo.c	FUNCTION_48	FOR_1
0x4005065	            0x7e51	                           jle 0x40050b8	      3185	undo.c	FUNCTION_48	FOR_1
0x4005067	        0x4983c408	                              add r12, 8	      3185	undo.c	FUNCTION_48	FOR_1
0x400506b	          0x4839da	                            cmp rdx, rbx	      3186	undo.c	FUNCTION_48	FOR_1
0x400506e	            0x7c48	                            jl 0x40050b8	      3186	undo.c	FUNCTION_48	FOR_1
0x4005070	        0x498b4520	            mov rax, qword [r13 + 0x20] 	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x4005074	            0x31d2	                            xor edx, edx	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x4005076	          0x4889de	                            mov rsi, rbx	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x4005079	        0x4e8b3420	              mov r14, qword [rax + r12]	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x400507d	      0xe800000000	                          call 0x4005082	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x4005082	          0x4889c7	                            mov rdi, rax	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x4005085	          0x4c89f6	                            mov rsi, r14	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x4005088	      0xe800000000	                          call 0x400508d	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x400508d	            0x85c0	                           test eax, eax	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x400508f	            0x74bf	                            je 0x4005050	      3187	undo.c	FUNCTION_48	FOR_1	IF_3	CALL_2
0x4005091	    0xc74548000000	               mov dword [rbp + 0x48], 0	      3197	undo.c	FUNCTION_48	IF_4	CALL_4
0x4005098	    0xc7454c000000	               mov dword [rbp + 0x4c], 0	      3197	undo.c	FUNCTION_48	IF_4	CALL_4
0x400509f	        0x48895d40	            mov qword [rbp + 0x40], rbx 	      3198	undo.c	FUNCTION_48	IF_4
0x40050a3	              0x5b	                                 pop rbx	      3200	undo.c	FUNCTION_48
0x40050a4	              0x5d	                                 pop rbp	      3200	undo.c	FUNCTION_48
0x40050a5	            0x415c	                                 pop r12	      3200	undo.c	FUNCTION_48
0x40050a7	            0x415d	                                 pop r13	      3200	undo.c	FUNCTION_48
0x40050a9	            0x415e	                                 pop r14	      3200	undo.c	FUNCTION_48
0x40050ab	              0xc3	                                     ret	      3200	undo.c	FUNCTION_48
0x40050ac	        0x498b5528	            mov rdx, qword [r13 + 0x28] 	      3200	undo.c	FUNCTION_48
0x40050b0	      0xbb01000000	                              mov ebx, 1	      3185	undo.c	FUNCTION_48	FOR_1
0x40050b5	           0xf1f00	                         nop dword [rax]	      3185	undo.c	FUNCTION_48	FOR_1
0x40050b8	          0x4839d0	                            cmp rax, rdx	      3194	undo.c	FUNCTION_48	IF_4
0x40050bb	            0x75d4	                           jne 0x4005091	      3194	undo.c	FUNCTION_48	IF_4
0x40050bd	            0xebe4	                           jmp 0x40050a3	      3194	undo.c	FUNCTION_48	IF_4
0x40050bf	      0xbb01000000	                              mov ebx, 1	      3186	undo.c	FUNCTION_48	FOR_1
0x40050c4	            0xebcb	                           jmp 0x4005091	      3186	undo.c	FUNCTION_48	FOR_1
u_savesub	IF,1:CALL,1:functions,0:FOR,0:DO,0:WHILE,0:ELSE,0:SWITCH,0	10
0x4002230	    0x8b0500000000	            mov eax, dword [0x04002236] 	       289	undo.c	FUNCTION_5	IF_1
0x4002236	            0x85c0	                           test eax, eax	       289	undo.c	FUNCTION_5	IF_1
0x4002238	            0x7406	                            je 0x4002240	       289	undo.c	FUNCTION_5	IF_1
0x400223a	      0xb801000000	                              mov eax, 1	       293	undo.c	FUNCTION_5
0x400223f	              0xc3	                                     ret	       293	undo.c	FUNCTION_5
0x4002240	        0x488d7701	                      lea rsi, [rdi + 1]	       292	undo.c	FUNCTION_5	CALL_1
0x4002244	            0x31c9	                            xor ecx, ecx	       292	undo.c	FUNCTION_5	CALL_1
0x4002246	        0x4883ef01	                              sub rdi, 1	       292	undo.c	FUNCTION_5	CALL_1
0x400224a	          0x4889f2	                            mov rdx, rsi	       292	undo.c	FUNCTION_5	CALL_1
0x400224d	      0xe9fef5ffff	                    jmp sym.u_savecommon	       292	undo.c	FUNCTION_5	CALL_1
u_update_save_nr	IF,2:CALL,0:functions,0:FOR,0:DO,0:WHILE,0:ELSE,1:SWITCH,0	15
0x40050d0	    0x488b87401200	          mov rax, qword [rdi + 0x1240] 	      3211	undo.c	FUNCTION_49
0x40050d7	    0x488b97281200	          mov rdx, qword [rdi + 0x1228] 	      3213	undo.c	FUNCTION_49
0x40050de	        0x4883c001	                              add rax, 1	      3211	undo.c	FUNCTION_49
0x40050e2	          0x4885d2	                           test rdx, rdx	      3214	undo.c	FUNCTION_49	IF_1
0x40050e5	    0x488987401200	          mov qword [rdi + 0x1240], rax 	      3211	undo.c	FUNCTION_49
0x40050ec	    0x488987581200	          mov qword [rdi + 0x1258], rax 	      3212	undo.c	FUNCTION_49
0x40050f3	            0x741b	                            je 0x4005110	      3214	undo.c	FUNCTION_49	IF_1
0x40050f5	          0x488b12	                    mov rdx, qword [rdx]	      3215	undo.c	FUNCTION_49	IF_1
0x40050f8	          0x4885d2	                           test rdx, rdx	      3218	undo.c	FUNCTION_49	IF_2
0x40050fb	            0x7407	                            je 0x4005104	      3218	undo.c	FUNCTION_49	IF_2
0x40050fd	    0x488982300200	            mov qword [rdx + 0x230], rax	      3219	undo.c	FUNCTION_49	IF_2
0x4005104	            0xf3c3	                                     ret	      3219	undo.c	FUNCTION_49	IF_2
0x4005106	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3219	undo.c	FUNCTION_49	IF_2
0x4005110	    0x488b97201200	          mov rdx, qword [rdi + 0x1220] 	      3217	undo.c	FUNCTION_49	ELSE_1
0x4005117	            0xebdf	                           jmp 0x40050f8	      3217	undo.c	FUNCTION_49	ELSE_1
ex_undojoin	IF,4:CALL,3:functions,0:FOR,0:DO,0:WHILE,0:ELSE,1:SWITCH,0	24
0x4004f20	    0x488b05000000	            mov rax, qword [0x04004f27] 	      3139	undo.c	FUNCTION_46	IF_1
0x4004f27	    0x4883b8201200	             cmp qword [rax + 0x1220], 0	      3139	undo.c	FUNCTION_46	IF_1
0x4004f2f	            0x745e	                            je 0x4004f8f	      3139	undo.c	FUNCTION_46	IF_1
0x4004f31	    0x4883b8281200	             cmp qword [rax + 0x1228], 0	      3141	undo.c	FUNCTION_46	IF_2
0x4004f39	            0x7425	                            je 0x4004f60	      3141	undo.c	FUNCTION_46	IF_2
0x4004f3b	        0x4883ec08	                              sub rsp, 8	      3138	undo.c	FUNCTION_46
0x4004f3f	            0x31ff	                            xor edi, edi	      3143	undo.c	FUNCTION_46	IF_2	CALL_2
0x4004f41	      0xba05000000	                              mov edx, 5	      3143	undo.c	FUNCTION_46	IF_2	CALL_2
0x4004f46	      0xbe00000000	                              mov esi, 0	      3143	undo.c	FUNCTION_46	IF_2	CALL_2
0x4004f4b	      0xe800000000	                          call 0x4004f50	      3143	undo.c	FUNCTION_46	IF_2	CALL_2
0x4004f50	        0x4883c408	                              add rsp, 8	      3153	undo.c	FUNCTION_46	ELSE_1
0x4004f54	          0x4889c7	                            mov rdi, rax	      3143	undo.c	FUNCTION_46	IF_2	CALL_2
0x4004f57	      0xe900000000	                           jmp 0x4004f5c	      3143	undo.c	FUNCTION_46	IF_2	CALL_2
0x4004f5c	         0xf1f4000	                         nop dword [rax]	      3143	undo.c	FUNCTION_46	IF_2	CALL_2
0x4004f60	    0x8b9034120000	          mov edx, dword [rax + 0x1234] 	      3146	undo.c	FUNCTION_46	IF_3
0x4004f66	            0x85d2	                           test edx, edx	      3146	undo.c	FUNCTION_46	IF_3
0x4004f68	            0x7425	                            je 0x4004f8f	      3146	undo.c	FUNCTION_46	IF_3
0x4004f6a	    0x488b90481600	          mov rdx, qword [rax + 0x1648] 	       367	undo.c	FUNCTION_9	IF_1
0x4004f71	    0x4881fac01dfe	             cmp rdx, 0xfffffffffffe1dc0	       368	undo.c	FUNCTION_9	IF_1
0x4004f78	    0x480f44150000	           cmove rdx, qword [0x04004f80]	       368	undo.c	FUNCTION_9	IF_1
0x4004f80	          0x4885d2	                           test rdx, rdx	      3148	undo.c	FUNCTION_46	IF_4	CALL_3
0x4004f83	            0x780a	                            js 0x4004f8f	      3148	undo.c	FUNCTION_46	IF_4	CALL_3
0x4004f85	    0xc78034120000	            mov dword [rax + 0x1234], 0 	      3152	undo.c	FUNCTION_46	ELSE_1
0x4004f8f	            0xf3c3	                                     ret	      3152	undo.c	FUNCTION_46	ELSE_1
u_savedel	IF,1:CALL,1:functions,0:FOR,0:DO,0:WHILE,0:ELSE,0:SWITCH,0	14
0x4002290	    0x8b0500000000	            mov eax, dword [0x04002296] 	       320	undo.c	FUNCTION_7	IF_1
0x4002296	            0x85c0	                           test eax, eax	       320	undo.c	FUNCTION_7	IF_1
0x4002298	            0x7526	                           jne 0x40022c0	       320	undo.c	FUNCTION_7	IF_1
0x400229a	    0x488b05000000	            mov rax, qword [0x040022a1] 	       324	undo.c	FUNCTION_7
0x40022a1	      0xba02000000	                              mov edx, 2	       323	undo.c	FUNCTION_7	CALL_1
0x40022a6	          0x483930	                    cmp qword [rax], rsi	       323	undo.c	FUNCTION_7	CALL_1
0x40022a9	        0x480f45d7	                         cmovne rdx, rdi	       323	undo.c	FUNCTION_7	CALL_1
0x40022ad	          0x4801fe	                            add rsi, rdi	       323	undo.c	FUNCTION_7	CALL_1
0x40022b0	            0x31c9	                            xor ecx, ecx	       323	undo.c	FUNCTION_7	CALL_1
0x40022b2	        0x4883ef01	                              sub rdi, 1	       323	undo.c	FUNCTION_7	CALL_1
0x40022b6	      0xe995f5ffff	                    jmp sym.u_savecommon	       323	undo.c	FUNCTION_7	CALL_1
0x40022bb	       0xf1f440000	                   nop dword [rax + rax]	       323	undo.c	FUNCTION_7	CALL_1
0x40022c0	      0xb801000000	                              mov eax, 1	       325	undo.c	FUNCTION_7
0x40022c5	              0xc3	                                     ret	       325	undo.c	FUNCTION_7
u_redo	IF,1:CALL,2:functions,0:FOR,0:DO,0:WHILE,0:ELSE,0:SWITCH,0	35
0x40040f0	              0x53	                                push rbx	      2174	undo.c	FUNCTION_38
0x40040f1	            0x89fb	                            mov ebx, edi	      2174	undo.c	FUNCTION_38
0x40040f3	    0x488b3d000000	            mov rdi, qword [0x040040fa] 	      2175	undo.c	FUNCTION_38	IF_1	CALL_1
0x40040fa	      0xbe75000000	                           mov esi, 0x75	      2175	undo.c	FUNCTION_38	IF_1	CALL_1
0x40040ff	      0xe800000000	                          call 0x4004104	      2175	undo.c	FUNCTION_38	IF_1	CALL_1
0x4004104	          0x4885c0	                           test rax, rax	      2175	undo.c	FUNCTION_38	IF_1	CALL_1
0x4004107	            0x7467	                            je 0x4004170	      2175	undo.c	FUNCTION_38	IF_1	CALL_1
0x4004109	    0x488b05000000	            mov rax, qword [0x04004110] 	       335	undo.c	FUNCTION_8	IF_1
0x4004110	      0xba05000000	                              mov edx, 5	       337	undo.c	FUNCTION_8	IF_1	CALL_2
0x4004115	      0xbe00000000	                              mov esi, 0	       337	undo.c	FUNCTION_8	IF_1	CALL_2
0x400411a	    0x8b8840150000	          mov ecx, dword [rax + 0x1540] 	       335	undo.c	FUNCTION_8	IF_1
0x4004120	            0x85c9	                           test ecx, ecx	       335	undo.c	FUNCTION_8	IF_1
0x4004122	            0x7436	                            je 0x400415a	       335	undo.c	FUNCTION_8	IF_1
0x4004124	    0x8b1500000000	            mov edx, dword [0x0400412a] 	       343	undo.c	FUNCTION_8	IF_2
0x400412a	            0x85d2	                           test edx, edx	       343	undo.c	FUNCTION_8	IF_2
0x400412c	            0x7522	                           jne 0x4004150	       343	undo.c	FUNCTION_8	IF_2
0x400412e	    0x8b0500000000	            mov eax, dword [0x04004134] 	       352	undo.c	FUNCTION_8	IF_3
0x4004134	      0xba05000000	                              mov edx, 5	       354	undo.c	FUNCTION_8	IF_3	CALL_6
0x4004139	      0xbe00000000	                              mov esi, 0	       354	undo.c	FUNCTION_8	IF_3	CALL_6
0x400413e	            0x85c0	                           test eax, eax	       352	undo.c	FUNCTION_8	IF_3
0x4004140	            0x7518	                           jne 0x400415a	       352	undo.c	FUNCTION_8	IF_3
0x4004142	            0x89df	                            mov edi, ebx	       352	undo.c	FUNCTION_8	IF_3
0x4004144	              0x5b	                                 pop rbx	      2178	undo.c	FUNCTION_38
0x4004145	      0xe9f6d1ffff	                   jmp sym.u_doit.part.9	      2178	undo.c	FUNCTION_38
0x400414a	    0x660f1f440000	                    nop word [rax + rax]	      2178	undo.c	FUNCTION_38
0x4004150	      0xba05000000	                              mov edx, 5	       345	undo.c	FUNCTION_8	IF_2	CALL_4
0x4004155	      0xbe00000000	                              mov esi, 0	       345	undo.c	FUNCTION_8	IF_2	CALL_4
0x400415a	            0x31ff	                            xor edi, edi	       345	undo.c	FUNCTION_8	IF_2	CALL_4
0x400415c	      0xe800000000	                          call 0x4004161	       345	undo.c	FUNCTION_8	IF_2	CALL_4
0x4004161	              0x5b	                                 pop rbx	      2178	undo.c	FUNCTION_38
0x4004162	          0x4889c7	                            mov rdi, rax	       345	undo.c	FUNCTION_8	IF_2	CALL_4
0x4004165	      0xe900000000	                           jmp 0x400416a	       345	undo.c	FUNCTION_8	IF_2	CALL_4
0x400416a	    0x660f1f440000	                    nop word [rax + rax]	       345	undo.c	FUNCTION_8	IF_2	CALL_4
0x4004170	    0xc70500000000	               mov dword [0x0400417a], 0	      2176	undo.c	FUNCTION_38	IF_1
0x400417a	            0xeb8d	                           jmp 0x4004109	      2176	undo.c	FUNCTION_38	IF_1
u_savecommon	IF,37:CALL,37:functions,0:FOR,2:DO,0:WHILE,2:ELSE,11:SWITCH,0	551
0x4001850	            0x4157	                                push r15	       387	undo.c	FUNCTION_10
0x4001852	            0x4156	                                push r14	       387	undo.c	FUNCTION_10
0x4001854	            0x4155	                                push r13	       387	undo.c	FUNCTION_10
0x4001856	            0x4154	                                push r12	       387	undo.c	FUNCTION_10
0x4001858	              0x55	                                push rbp	       387	undo.c	FUNCTION_10
0x4001859	              0x53	                                push rbx	       387	undo.c	FUNCTION_10
0x400185a	        0x4883ec48	                           sub rsp, 0x48	       387	undo.c	FUNCTION_10
0x400185e	    0x488b1d000000	            mov rbx, qword [0x04001865] 	       387	undo.c	FUNCTION_10
0x4001865	    0x64488b042528	                mov rax, qword fs:[0x28]	       387	undo.c	FUNCTION_10
0x400186e	      0x4889442438	             mov qword [rsp + 0x38], rax	       387	undo.c	FUNCTION_10
0x4001873	            0x31c0	                            xor eax, eax	       387	undo.c	FUNCTION_10
0x4001875	            0x85c9	                           test ecx, ecx	       396	undo.c	FUNCTION_10	IF_1
0x4001877	      0x48897c2418	             mov qword [rsp + 0x18], rdi	       387	undo.c	FUNCTION_10
0x400187c	      0x4889742420	             mov qword [rsp + 0x20], rsi	       387	undo.c	FUNCTION_10
0x4001881	      0x4889542428	             mov qword [rsp + 0x28], rdx	       387	undo.c	FUNCTION_10
0x4001886	     0xf84c9020000	                            je 0x4001b55	       396	undo.c	FUNCTION_10	IF_1
0x400188c	      0x4c8b742420	            mov r14, qword [rsp + 0x20] 	       447	undo.c	FUNCTION_10
0x4001891	      0x4c2b742418	             sub r14, qword [rsp + 0x18]	       447	undo.c	FUNCTION_10
0x4001896	    0x8b8b34120000	          mov ecx, dword [rbx + 0x1234] 	       452	undo.c	FUNCTION_10	IF_7
0x400189c	        0x498d46ff	                      lea rax, [r14 - 1]	       447	undo.c	FUNCTION_10
0x40018a0	            0x85c9	                           test ecx, ecx	       452	undo.c	FUNCTION_10	IF_7
0x40018a2	      0x4889442410	             mov qword [rsp + 0x10], rax	       447	undo.c	FUNCTION_10
0x40018a7	     0xf84f3000000	                            je 0x40019a0	       452	undo.c	FUNCTION_10	IF_7
0x40018ad	    0x488b83481600	          mov rax, qword [rbx + 0x1648] 	       367	undo.c	FUNCTION_9	IF_1
0x40018b4	    0xc7839c090000	              mov dword [rbx + 0x99c], 1	       456	undo.c	FUNCTION_10	IF_7
0x40018be	    0x483dc01dfeff	             cmp rax, 0xfffffffffffe1dc0	       368	undo.c	FUNCTION_9	IF_1
0x40018c4	    0x480f44050000	           cmove rax, qword [0x040018cc]	       368	undo.c	FUNCTION_9	IF_1
0x40018cc	          0x4885c0	                           test rax, rax	       459	undo.c	FUNCTION_10	IF_7	IF_8	CALL_13
0x40018cf	     0xf884b070000	                            js 0x4002020	       459	undo.c	FUNCTION_10	IF_7	IF_8	CALL_13
0x40018d5	            0x31f6	                            xor esi, esi	       465	undo.c	FUNCTION_10	IF_7	IF_8
0x40018d7	      0xbf38020000	                          mov edi, 0x238	       465	undo.c	FUNCTION_10	IF_7	IF_8
0x40018dc	      0xe800000000	                          call 0x40018e1	       465	undo.c	FUNCTION_10	IF_7	IF_8
0x40018e1	          0x4885c0	                           test rax, rax	       466	undo.c	FUNCTION_10	IF_7	IF_8	IF_9
0x40018e4	          0x4989c5	                            mov r13, rax	       465	undo.c	FUNCTION_10	IF_7	IF_8
0x40018e7	     0xf842c020000	                            je 0x4001b19	       466	undo.c	FUNCTION_10	IF_7	IF_8	IF_9
0x40018ed	    0x488b1d000000	            mov rbx, qword [0x040018f4] 	       466	undo.c	FUNCTION_10	IF_7	IF_8	IF_9
0x40018f4	    0x488bb3281200	          mov rsi, qword [rbx + 0x1228] 	       479	undo.c	FUNCTION_10	IF_7	ELSE_1
0x40018fb	          0x4885f6	                           test rsi, rsi	       480	undo.c	FUNCTION_10	IF_7	ELSE_1	IF_10
0x40018fe	      0x4889742430	             mov qword [rsp + 0x30], rsi	       479	undo.c	FUNCTION_10	IF_7	ELSE_1
0x4001903	            0x741b	                            je 0x4001920	       480	undo.c	FUNCTION_10	IF_7	ELSE_1	IF_10
0x4001905	          0x488b06	                    mov rax, qword [rsi]	       482	undo.c	FUNCTION_10	IF_7	ELSE_1	IF_10
0x4001908	    0x48c783281200	            mov qword [rbx + 0x1228], 0 	       483	undo.c	FUNCTION_10	IF_7	ELSE_1	IF_10
0x4001913	    0x488983201200	          mov qword [rbx + 0x1220], rax 	       482	undo.c	FUNCTION_10	IF_7	ELSE_1	IF_10
0x400191a	    0x660f1f440000	                    nop word [rax + rax]	       482	undo.c	FUNCTION_10	IF_7	ELSE_1	IF_10
0x4001920	    0x488b83481600	          mov rax, qword [rbx + 0x1648] 	       367	undo.c	FUNCTION_9	IF_1
0x4001927	    0x486393301200	       movsxd rdx, dword [rbx + 0x1230] 	       489	undo.c	FUNCTION_10	IF_7	WHILE_1	CALL_14
0x400192e	    0x483dc01dfeff	             cmp rax, 0xfffffffffffe1dc0	       368	undo.c	FUNCTION_9	IF_1
0x4001934	    0x480f44050000	           cmove rax, qword [0x0400193c]	       368	undo.c	FUNCTION_9	IF_1
0x400193c	          0x4839c2	                            cmp rdx, rax	       489	undo.c	FUNCTION_10	IF_7	WHILE_1	CALL_14
0x400193f	     0xf8e4b040000	                           jle 0x4001d90	       489	undo.c	FUNCTION_10	IF_7	WHILE_1	CALL_14
0x4001945	    0x488bab181200	          mov rbp, qword [rbx + 0x1218] 	       490	undo.c	FUNCTION_10	IF_7	WHILE_1
0x400194c	          0x4885ed	                           test rbp, rbp	       490	undo.c	FUNCTION_10	IF_7	WHILE_1
0x400194f	     0xf843b040000	                            je 0x4001d90	       490	undo.c	FUNCTION_10	IF_7	WHILE_1
0x4001955	          0x4839f5	                            cmp rbp, rsi	       494	undo.c	FUNCTION_10	IF_7	WHILE_1	IF_11
0x4001958	            0x7422	                            je 0x400197c	       494	undo.c	FUNCTION_10	IF_7	WHILE_1	IF_11
0x400195a	        0x488b7510	            mov rsi, qword [rbp + 0x10] 	       497	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_2	IF_12
0x400195e	          0x4885f6	                           test rsi, rsi	       497	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_2	IF_12
0x4001961	            0x7510	                           jne 0x4001973	       497	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_2	IF_12
0x4001963	      0xe9c6050000	                           jmp 0x4001f2e	       497	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_2	IF_12
0x4001968	     0xf1f84000000	                   nop dword [rax + rax]	       497	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_2	IF_12
0x4001970	          0x4889c6	                            mov rsi, rax	       497	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_2	IF_12
0x4001973	        0x488b4610	            mov rax, qword [rsi + 0x10] 	       497	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_2	IF_12
0x4001977	          0x4885c0	                           test rax, rax	       503	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_3	WHILE_2
0x400197a	            0x75f4	                           jne 0x4001970	       503	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_3	WHILE_2
0x400197c	      0x488d542430	                   lea rdx, [rsp + 0x30]	       505	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_3	CALL_17
0x4001981	          0x4889df	                            mov rdi, rbx	       505	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_3	CALL_17
0x4001984	      0xe8f7edffff	                   call sym.u_freebranch	       505	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_3	CALL_17
0x4001989	    0x488b1d000000	            mov rbx, qword [0x04001990] 	       505	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_3	CALL_17
0x4001990	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	       505	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_3	CALL_17
0x4001995	            0xeb89	                           jmp 0x4001920	       505	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_3	CALL_17
0x4001997	    0x660f1f840000	                    nop word [rax + rax]	       505	undo.c	FUNCTION_10	IF_7	WHILE_1	ELSE_3	CALL_17
0x40019a0	    0x488b83481600	          mov rax, qword [rbx + 0x1648] 	       367	undo.c	FUNCTION_9	IF_1
0x40019a7	    0x483dc01dfeff	             cmp rax, 0xfffffffffffe1dc0	       368	undo.c	FUNCTION_9	IF_1
0x40019ad	    0x480f44050000	           cmove rax, qword [0x040019b5]	       368	undo.c	FUNCTION_9	IF_1
0x40019b5	          0x4885c0	                           test rax, rax	       569	undo.c	FUNCTION_10	ELSE_6	IF_21	CALL_24
0x40019b8	     0xf8880060000	                            js 0x400203e	       569	undo.c	FUNCTION_10	ELSE_6	IF_21	CALL_24
0x40019be	    0x48837c241001	               cmp qword [rsp + 0x10], 1	       581	undo.c	FUNCTION_10	ELSE_6	IF_22
0x40019c4	     0xf846e020000	                            je 0x4001c38	       581	undo.c	FUNCTION_10	ELSE_6	IF_22
0x40019ca	      0xe881eaffff	                       call sym.u_getbot	       643	undo.c	FUNCTION_10	ELSE_6	CALL_27
0x40019cf	            0x31f6	                            xor esi, esi	       658	undo.c	FUNCTION_10
0x40019d1	      0xbf30000000	                           mov edi, 0x30	       658	undo.c	FUNCTION_10
0x40019d6	      0xe800000000	                          call 0x40019db	       658	undo.c	FUNCTION_10
0x40019db	          0x4885c0	                           test rax, rax	       659	undo.c	FUNCTION_10	IF_30
0x40019de	          0x4889c5	                            mov rbp, rax	       658	undo.c	FUNCTION_10
0x40019e1	     0xf8432010000	                            je 0x4001b19	       659	undo.c	FUNCTION_10	IF_30
0x40019e7	        0x488d7808	                      lea rdi, [rax + 8]	        90	string3.h	FUNCTION_70	CALL_6
0x40019eb	          0x4889c1	                            mov rcx, rax	        90	string3.h	FUNCTION_70	CALL_6
0x40019ee	    0x48c700000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_70	CALL_6
0x40019f5	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_70	CALL_6
0x40019f7	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_70	CALL_6
0x40019fb	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_70	CALL_6
0x40019fe	          0x83c130	                           add ecx, 0x30	        90	string3.h	FUNCTION_70	CALL_6
0x4001a01	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_70	CALL_6
0x4001a04	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_70	CALL_6
0x4001a07	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       666	undo.c	FUNCTION_10
0x4001a0c	        0x48894528	            mov qword [rbp + 0x28], rax 	       666	undo.c	FUNCTION_10
0x4001a10	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       667	undo.c	FUNCTION_10
0x4001a15	        0x48894508	                mov qword [rbp + 8], rax	       667	undo.c	FUNCTION_10
0x4001a19	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       668	undo.c	FUNCTION_10	IF_31
0x4001a1e	          0x4885c0	                           test rax, rax	       668	undo.c	FUNCTION_10	IF_31
0x4001a21	     0xf84d9010000	                            je 0x4001c00	       668	undo.c	FUNCTION_10	IF_31
0x4001a27	        0x48894510	            mov qword [rbp + 0x10], rax 	       669	undo.c	FUNCTION_10	IF_31
0x4001a2b	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       682	undo.c	FUNCTION_10	IF_33
0x4001a30	          0x4885c0	                           test rax, rax	       682	undo.c	FUNCTION_10	IF_33
0x4001a33	     0xf8ef2010000	                           jle 0x4001c2b	       682	undo.c	FUNCTION_10	IF_33
0x4001a39	    0x488d3cc50000	                        lea rdi, [rax*8]	       684	undo.c	FUNCTION_10	IF_33	IF_34
0x4001a41	            0x31f6	                            xor esi, esi	       684	undo.c	FUNCTION_10	IF_33	IF_34
0x4001a43	            0x31db	                            xor ebx, ebx	       690	undo.c	FUNCTION_10	IF_33	FOR_2
0x4001a45	      0xe800000000	                          call 0x4001a4a	       684	undo.c	FUNCTION_10	IF_33	IF_34
0x4001a4a	      0x4c8b642418	            mov r12, qword [rsp + 0x18] 	       690	undo.c	FUNCTION_10	IF_33	FOR_2
0x4001a4f	        0x48894520	            mov qword [rbp + 0x20], rax 	       684	undo.c	FUNCTION_10	IF_33	IF_34
0x4001a53	        0x4983c401	                              add r12, 1	       690	undo.c	FUNCTION_10	IF_33	FOR_2
0x4001a57	          0x4885c0	                           test rax, rax	       684	undo.c	FUNCTION_10	IF_33	IF_34
0x4001a5a	            0x750f	                           jne 0x4001a6b	       684	undo.c	FUNCTION_10	IF_33	IF_34
0x4001a5c	      0xe9a9000000	                           jmp 0x4001b0a	       684	undo.c	FUNCTION_10	IF_33	IF_34
0x4001a61	     0xf1f80000000	                         nop dword [rax]	       684	undo.c	FUNCTION_10	IF_33	IF_34
0x4001a68	          0x4d89ec	                            mov r12, r13	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_32
0x4001a6b	      0xe800000000	                          call 0x4001a70	       692	undo.c	FUNCTION_10	IF_33	FOR_2	CALL_30
0x4001a70	    0x8b0500000000	            mov eax, dword [0x04001a76] 	       693	undo.c	FUNCTION_10	IF_33	FOR_2	IF_35
0x4001a76	            0x85c0	                           test eax, eax	       693	undo.c	FUNCTION_10	IF_33	FOR_2	IF_35
0x4001a78	     0xf8532060000	                           jne 0x40020b0	       693	undo.c	FUNCTION_10	IF_33	FOR_2	IF_35
0x4001a7e	        0x488b4520	            mov rax, qword [rbp + 0x20] 	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_32
0x4001a82	          0x4c89e7	                            mov rdi, r12	      3516	undo.c	FUNCTION_62	CALL_2
0x4001a85	      0x4d8d6c2401	                      lea r13, [r12 + 1]	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_32
0x4001a8a	        0x4c8d3cd8	                  lea r15, [rax + rbx*8]	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_32
0x4001a8e	      0xe800000000	                          call 0x4001a93	      3516	undo.c	FUNCTION_62	CALL_2
0x4001a93	          0x4889c7	                            mov rdi, rax	      3516	undo.c	FUNCTION_62	CALL_2
0x4001a96	      0xe800000000	                          call 0x4001a9b	      3516	undo.c	FUNCTION_62	CALL_2
0x4001a9b	          0x4885c0	                           test rax, rax	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_32
0x4001a9e	          0x498907	                    mov qword [r15], rax	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_32
0x4001aa1	     0xf84c1050000	                            je 0x4002068	       698	undo.c	FUNCTION_10	IF_33	FOR_2	IF_36	CALL_32
0x4001aa7	        0x4883c301	                              add rbx, 1	       690	undo.c	FUNCTION_10	IF_33	FOR_2
0x4001aab	      0x483b5c2410	            cmp rbx, qword [rsp + 0x10] 	       690	undo.c	FUNCTION_10	IF_33	FOR_2
0x4001ab0	            0x75b6	                           jne 0x4001a68	       690	undo.c	FUNCTION_10	IF_33	FOR_2
0x4001ab2	    0x488b05000000	            mov rax, qword [0x04001ab9] 	       707	undo.c	FUNCTION_10
0x4001ab9	    0xc70500000000	               mov dword [0x04001ac3], 0	       710	undo.c	FUNCTION_10
0x4001ac3	    0x488b90201200	          mov rdx, qword [rax + 0x1220] 	       707	undo.c	FUNCTION_10
0x4001aca	        0x488b4a30	            mov rcx, qword [rdx + 0x30] 	       707	undo.c	FUNCTION_10
0x4001ace	        0x48894d00	                    mov qword [rbp], rcx	       707	undo.c	FUNCTION_10
0x4001ad2	        0x48896a30	             mov qword [rdx + 0x30], rbp	       708	undo.c	FUNCTION_10
0x4001ad6	      0xbd01000000	                              mov ebp, 1	       715	undo.c	FUNCTION_10
0x4001adb	    0xc78034120000	            mov dword [rax + 0x1234], 0 	       709	undo.c	FUNCTION_10
0x4001ae5	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	       727	undo.c	FUNCTION_10
0x4001aea	    0x644833142528	                xor rdx, qword fs:[0x28]	       727	undo.c	FUNCTION_10
0x4001af3	            0x89e8	                            mov eax, ebp	       727	undo.c	FUNCTION_10
0x4001af5	     0xf8517070000	                           jne 0x4002212	       727	undo.c	FUNCTION_10
0x4001afb	        0x4883c448	                           add rsp, 0x48	       727	undo.c	FUNCTION_10
0x4001aff	              0x5b	                                 pop rbx	       727	undo.c	FUNCTION_10
0x4001b00	              0x5d	                                 pop rbp	       727	undo.c	FUNCTION_10
0x4001b01	            0x415c	                                 pop r12	       727	undo.c	FUNCTION_10
0x4001b03	            0x415d	                                 pop r13	       727	undo.c	FUNCTION_10
0x4001b05	            0x415e	                                 pop r14	       727	undo.c	FUNCTION_10
0x4001b07	            0x415f	                                 pop r15	       727	undo.c	FUNCTION_10
0x4001b09	              0xc3	                                     ret	       727	undo.c	FUNCTION_10
0x4001b0a	            0x31ff	                            xor edi, edi	      3399	undo.c	FUNCTION_56	CALL_2
0x4001b0c	      0xe800000000	                          call 0x4001b11	      3399	undo.c	FUNCTION_56	CALL_2
0x4001b11	          0x4889ef	                            mov rdi, rbp	      3403	undo.c	FUNCTION_56	CALL_3
0x4001b14	      0xe800000000	                          call 0x4001b19	      3403	undo.c	FUNCTION_56	CALL_3
0x4001b19	            0x31ff	                            xor edi, edi	       719	undo.c	FUNCTION_10	IF_37	CALL_36
0x4001b1b	      0xba05000000	                              mov edx, 5	       719	undo.c	FUNCTION_10	IF_37	CALL_36
0x4001b20	      0xbe00000000	                              mov esi, 0	       719	undo.c	FUNCTION_10	IF_37	CALL_36
0x4001b25	    0xc70500000000	               mov dword [0x04001b2f], 0	       718	undo.c	FUNCTION_10
0x4001b2f	      0xe800000000	                          call 0x4001b34	       719	undo.c	FUNCTION_10	IF_37	CALL_36
0x4001b34	      0xbe01000000	                              mov esi, 1	       719	undo.c	FUNCTION_10	IF_37	CALL_36
0x4001b39	          0x4889c7	                            mov rdi, rax	       719	undo.c	FUNCTION_10	IF_37	CALL_36
0x4001b3c	      0xe800000000	                          call 0x4001b41	       719	undo.c	FUNCTION_10	IF_37	CALL_36
0x4001b41	          0x83f879	                           cmp eax, 0x79	       719	undo.c	FUNCTION_10	IF_37	CALL_36
0x4001b44	     0xf84fe010000	                            je 0x4001d48	       719	undo.c	FUNCTION_10	IF_37	CALL_36
0x4001b4a	            0x31ff	                            xor edi, edi	       725	undo.c	FUNCTION_10	CALL_37
0x4001b4c	            0x31ed	                            xor ebp, ebp	       726	undo.c	FUNCTION_10
0x4001b4e	      0xe800000000	                          call 0x4001b53	       725	undo.c	FUNCTION_10	CALL_37
0x4001b53	            0xeb90	                           jmp 0x4001ae5	       726	undo.c	FUNCTION_10
0x4001b55	    0x448b83401500	          mov r8d, dword [rbx + 0x1540] 	       335	undo.c	FUNCTION_8	IF_1
0x4001b5c	          0x4585c0	                           test r8d, r8d	       335	undo.c	FUNCTION_8	IF_1
0x4001b5f	     0xf8495050000	                            je 0x40020fa	       335	undo.c	FUNCTION_8	IF_1
0x4001b65	    0x8b3d00000000	            mov edi, dword [0x04001b6b] 	       343	undo.c	FUNCTION_8	IF_2
0x4001b6b	            0x85ff	                           test edi, edi	       343	undo.c	FUNCTION_8	IF_2
0x4001b6d	     0xf85fd010000	                           jne 0x4001d70	       343	undo.c	FUNCTION_8	IF_2
0x4001b73	    0x8b2d00000000	            mov ebp, dword [0x04001b79] 	       352	undo.c	FUNCTION_8	IF_3
0x4001b79	            0x85ed	                           test ebp, ebp	       352	undo.c	FUNCTION_8	IF_3
0x4001b7b	     0xf85c7040000	                           jne 0x4002048	       352	undo.c	FUNCTION_8	IF_3
0x4001b81	      0xe800000000	                          call 0x4001b86	       408	undo.c	FUNCTION_10	IF_1	IF_3	CALL_2
0x4001b86	            0x85c0	                           test eax, eax	       408	undo.c	FUNCTION_10	IF_1	IF_3	CALL_2
0x4001b88	            0x742c	                            je 0x4001bb6	       408	undo.c	FUNCTION_10	IF_1	IF_3	CALL_2
0x4001b8a	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       410	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_3
0x4001b8f	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       410	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_3
0x4001b94	      0xe800000000	                          call 0x4001b99	       410	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_3
0x4001b99	            0x85c0	                           test eax, eax	       410	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_3
0x4001b9b	     0xf8540060000	                           jne 0x40021e1	       410	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_3
0x4001ba1	    0x488b05000000	            mov rax, qword [0x04001ba8] 	       415	undo.c	FUNCTION_10	IF_1	IF_3	IF_5
0x4001ba8	    0x8bb060150000	          mov esi, dword [rax + 0x1560] 	       415	undo.c	FUNCTION_10	IF_1	IF_3	IF_5
0x4001bae	            0x85f6	                           test esi, esi	       415	undo.c	FUNCTION_10	IF_1	IF_3	IF_5
0x4001bb0	     0xf85a7050000	                           jne 0x400215d	       415	undo.c	FUNCTION_10	IF_1	IF_3	IF_5
0x4001bb6	      0xe800000000	                          call 0x4001bbb	       424	undo.c	FUNCTION_10	IF_1	CALL_8
0x4001bbb	            0x31ff	                            xor edi, edi	       433	undo.c	FUNCTION_10	IF_1	CALL_9
0x4001bbd	      0xe800000000	                          call 0x4001bc2	       433	undo.c	FUNCTION_10	IF_1	CALL_9
0x4001bc2	    0x488b1d000000	            mov rbx, qword [0x04001bc9] 	       434	undo.c	FUNCTION_10	IF_1	IF_6
0x4001bc9	          0x488b03	                    mov rax, qword [rbx]	       434	undo.c	FUNCTION_10	IF_1	IF_6
0x4001bcc	        0x4883c001	                              add rax, 1	       434	undo.c	FUNCTION_10	IF_1	IF_6
0x4001bd0	      0x4839442420	            cmp qword [rsp + 0x20], rax 	       434	undo.c	FUNCTION_10	IF_1	IF_6
0x4001bd5	     0xf8eb1fcffff	                           jle 0x400188c	       434	undo.c	FUNCTION_10	IF_1	IF_6
0x4001bdb	            0x31ff	                            xor edi, edi	       438	undo.c	FUNCTION_10	IF_1	IF_6	CALL_11
0x4001bdd	      0xba05000000	                              mov edx, 5	       438	undo.c	FUNCTION_10	IF_1	IF_6	CALL_11
0x4001be2	      0xbe00000000	                              mov esi, 0	       438	undo.c	FUNCTION_10	IF_1	IF_6	CALL_11
0x4001be7	      0xe800000000	                          call 0x4001bec	       438	undo.c	FUNCTION_10	IF_1	IF_6	CALL_11
0x4001bec	          0x4889c7	                            mov rdi, rax	       438	undo.c	FUNCTION_10	IF_1	IF_6	CALL_11
0x4001bef	      0xe800000000	                          call 0x4001bf4	       438	undo.c	FUNCTION_10	IF_1	IF_6	CALL_11
0x4001bf4	      0xe9ecfeffff	                           jmp 0x4001ae5	       439	undo.c	FUNCTION_10	IF_1	IF_6
0x4001bf9	     0xf1f80000000	                         nop dword [rax]	       439	undo.c	FUNCTION_10	IF_1	IF_6
0x4001c00	    0x488b05000000	            mov rax, qword [0x04001c07] 	       674	undo.c	FUNCTION_10	ELSE_9	IF_32
0x4001c07	          0x488b10	                    mov rdx, qword [rax]	       674	undo.c	FUNCTION_10	ELSE_9	IF_32
0x4001c0a	      0x4839542420	            cmp qword [rsp + 0x20], rdx 	       674	undo.c	FUNCTION_10	ELSE_9	IF_32
0x4001c0f	     0xf8e47010000	                           jle 0x4001d5c	       674	undo.c	FUNCTION_10	ELSE_9	IF_32
0x4001c15	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       682	undo.c	FUNCTION_10	IF_33
0x4001c1a	    0x48c745100000	               mov qword [rbp + 0x10], 0	       675	undo.c	FUNCTION_10	ELSE_9	IF_32
0x4001c22	          0x4885c0	                           test rax, rax	       682	undo.c	FUNCTION_10	IF_33
0x4001c25	     0xf8f0efeffff	                            jg 0x4001a39	       682	undo.c	FUNCTION_10	IF_33
0x4001c2b	    0x48c745200000	               mov qword [rbp + 0x20], 0	       706	undo.c	FUNCTION_10	ELSE_11
0x4001c33	      0xe97afeffff	                           jmp 0x4001ab2	       706	undo.c	FUNCTION_10	ELSE_11
0x4001c38	    0x488b83201200	          mov rax, qword [rbx + 0x1220] 	      3242	undo.c	FUNCTION_51	IF_1
0x4001c3f	          0x4885c0	                           test rax, rax	      3242	undo.c	FUNCTION_51	IF_1
0x4001c42	     0xf846f050000	                            je 0x40021b7	      3242	undo.c	FUNCTION_51	IF_1
0x4001c48	        0x488b6830	            mov rbp, qword [rax + 0x30] 	      3242	undo.c	FUNCTION_51	IF_1
0x4001c4c	          0x4885ed	                           test rbp, rbp	      3242	undo.c	FUNCTION_51	IF_1
0x4001c4f	     0xf8462050000	                            je 0x40021b7	      3242	undo.c	FUNCTION_51	IF_1
0x4001c55	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      3242	undo.c	FUNCTION_51	IF_1
0x4001c59	            0x31f6	                            xor esi, esi	      3242	undo.c	FUNCTION_51	IF_1
0x4001c5b	          0x4531ed	                          xor r13d, r13d	      3242	undo.c	FUNCTION_51	IF_1
0x4001c5e	            0xeb3b	                           jmp 0x4001c9b	      3242	undo.c	FUNCTION_51	IF_1
0x4001c60	        0x488b5508	                mov rdx, qword [rbp + 8]	       599	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001c64	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       599	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001c69	          0x4839d1	                            cmp rcx, rdx	       599	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001c6c	            0x7c0c	                            jl 0x4001c7a	       599	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001c6e	          0x4801d0	                            add rax, rdx	       600	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001c71	          0x4839c1	                            cmp rcx, rax	       600	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001c74	     0xf8c50fdffff	                            jl 0x40019ca	       600	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001c7a	        0x4883c601	                              add rsi, 1	       585	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1
0x4001c7e	        0x488b4500	                    mov rax, qword [rbp]	       638	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1
0x4001c82	        0x4883fe0a	                            cmp rsi, 0xa	       585	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1
0x4001c86	     0xf843efdffff	                            je 0x40019ca	       585	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1
0x4001c8c	          0x4885c0	                           test rax, rax	       587	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_23
0x4001c8f	          0x4989ed	                            mov r13, rbp	       587	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_23
0x4001c92	     0xf8432fdffff	                            je 0x40019ca	       587	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_23
0x4001c98	          0x4889c5	                            mov rbp, rax	       587	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_23
0x4001c9b	          0x4839fd	                            cmp rbp, rdi	       592	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001c9e	     0xf8484030000	                            je 0x4002028	       592	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001ca4	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       593	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001ca8	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       594	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001cac	          0x4889c1	                            mov rcx, rax	       593	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001caf	        0x48034d08	                add rcx, qword [rbp + 8]	       593	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001cb3	        0x4883c101	                              add rcx, 1	       593	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001cb7	          0x4885d2	                           test rdx, rdx	       596	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001cba	            0x7507	                           jne 0x4001cc3	       596	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001cbc	          0x488b13	                    mov rdx, qword [rbx]	       596	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001cbf	        0x4883c201	                              add rdx, 1	       596	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001cc3	          0x4839ca	                            cmp rdx, rcx	       592	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001cc6	     0xf85fefcffff	                           jne 0x40019ca	       592	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001ccc	        0x4883f801	                              cmp rax, 1	       598	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001cd0	            0x7f8e	                            jg 0x4001c60	       598	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4001cd2	            0x75a6	                           jne 0x4001c7a	       604	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
0x4001cd4	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       604	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
0x4001cd9	        0x483b4508	                cmp rax, qword [rbp + 8]	       604	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
0x4001cdd	            0x759b	                           jne 0x4001c7a	       604	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
0x4001cdf	          0x4885f6	                           test rsi, rsi	       606	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x4001ce2	            0x7431	                            je 0x4001d15	       606	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x4001ce4	      0xe867e7ffff	                       call sym.u_getbot	       611	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26	CALL_26
0x4001ce9	    0x488b1d000000	            mov rbx, qword [0x04001cf0] 	       612	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x4001cf0	        0x488b4500	                    mov rax, qword [rbp]	       620	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x4001cf4	    0xc78334120000	            mov dword [rbx + 0x1234], 0 	       612	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x4001cfe	        0x49894500	                    mov qword [r13], rax	       620	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x4001d02	    0x488b83201200	          mov rax, qword [rbx + 0x1220] 	       621	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x4001d09	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       621	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x4001d0d	        0x48895500	                    mov qword [rbp], rdx	       621	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x4001d11	        0x48896830	             mov qword [rax + 0x30], rbp	       622	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_26
0x4001d15	    0x48837c242800	               cmp qword [rsp + 0x28], 0	       626	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_27
0x4001d1b	     0xf85de040000	                           jne 0x40021ff	       626	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_27
0x4001d21	          0x488b03	                    mov rax, qword [rbx]	       628	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_7	IF_28
0x4001d24	      0x4839442420	            cmp qword [rsp + 0x20], rax 	       628	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_7	IF_28
0x4001d29	     0xf8ee8040000	                           jle 0x4002217	       628	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_7	IF_28
0x4001d2f	    0x48c745100000	               mov qword [rbp + 0x10], 0	       629	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_7	IF_28
0x4001d37	      0xbd01000000	                              mov ebp, 1	       635	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
0x4001d3c	      0xe9a4fdffff	                           jmp 0x4001ae5	       635	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
0x4001d41	     0xf1f80000000	                         nop dword [rax]	       635	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
0x4001d48	    0xc70500000000	               mov dword [0x04001d52], 1	       722	undo.c	FUNCTION_10	IF_37
0x4001d52	      0xbd01000000	                              mov ebp, 1	       723	undo.c	FUNCTION_10	IF_37
0x4001d57	      0xe989fdffff	                           jmp 0x4001ae5	       723	undo.c	FUNCTION_10	IF_37
0x4001d5c	    0x488b80201200	          mov rax, qword [rax + 0x1220] 	       679	undo.c	FUNCTION_10	ELSE_10
0x4001d63	        0x48895518	            mov qword [rbp + 0x18], rdx 	       678	undo.c	FUNCTION_10	ELSE_10
0x4001d67	        0x48896838	             mov qword [rax + 0x38], rbp	       679	undo.c	FUNCTION_10	ELSE_10
0x4001d6b	      0xe9bbfcffff	                           jmp 0x4001a2b	       679	undo.c	FUNCTION_10	ELSE_10
0x4001d70	      0xba05000000	                              mov edx, 5	       345	undo.c	FUNCTION_8	IF_2	CALL_4
0x4001d75	      0xbe00000000	                              mov esi, 0	       345	undo.c	FUNCTION_8	IF_2	CALL_4
0x4001d7a	            0x31ff	                            xor edi, edi	       345	undo.c	FUNCTION_8	IF_2	CALL_4
0x4001d7c	      0xe800000000	                          call 0x4001d81	       345	undo.c	FUNCTION_8	IF_2	CALL_4
0x4001d81	          0x4889c7	                            mov rdi, rax	       345	undo.c	FUNCTION_8	IF_2	CALL_4
0x4001d84	            0x31ed	                            xor ebp, ebp	       401	undo.c	FUNCTION_10	IF_1	IF_2
0x4001d86	      0xe800000000	                          call 0x4001d8b	       345	undo.c	FUNCTION_8	IF_2	CALL_4
0x4001d8b	      0xe955fdffff	                           jmp 0x4001ae5	       345	undo.c	FUNCTION_8	IF_2	CALL_4
0x4001d90	          0x4d85ed	                           test r13, r13	       512	undo.c	FUNCTION_10	IF_7	IF_13
0x4001d93	     0xf8481030000	                            je 0x400211a	       512	undo.c	FUNCTION_10	IF_7	IF_13
0x4001d99	    0x49c745080000	                  mov qword [r13 + 8], 0	       520	undo.c	FUNCTION_10	IF_7
0x4001da1	    0x488b83201200	          mov rax, qword [rbx + 0x1220] 	       521	undo.c	FUNCTION_10	IF_7
0x4001da8	          0x4885f6	                           test rsi, rsi	       523	undo.c	FUNCTION_10	IF_7	IF_15
0x4001dab	        0x49897510	             mov qword [r13 + 0x10], rsi	       522	undo.c	FUNCTION_10	IF_7
0x4001daf	        0x49894500	                    mov qword [r13], rax	       521	undo.c	FUNCTION_10	IF_7
0x4001db3	     0xf848b030000	                            je 0x4002144	       523	undo.c	FUNCTION_10	IF_7	IF_15
0x4001db9	        0x488b4618	            mov rax, qword [rsi + 0x18] 	       525	undo.c	FUNCTION_10	IF_7	IF_15
0x4001dbd	          0x4885c0	                           test rax, rax	       526	undo.c	FUNCTION_10	IF_7	IF_15	IF_16
0x4001dc0	        0x49894518	             mov qword [r13 + 0x18], rax	       525	undo.c	FUNCTION_10	IF_7	IF_15
0x4001dc4	            0x7404	                            je 0x4001dca	       526	undo.c	FUNCTION_10	IF_7	IF_15	IF_16
0x4001dc6	        0x4c896810	             mov qword [rax + 0x10], r13	       527	undo.c	FUNCTION_10	IF_7	IF_15	IF_16
0x4001dca	        0x4c896e18	             mov qword [rsi + 0x18], r13	       528	undo.c	FUNCTION_10	IF_7	IF_15
0x4001dce	    0x4839b3181200	          cmp qword [rbx + 0x1218], rsi 	       529	undo.c	FUNCTION_10	IF_7	IF_15	IF_17
0x4001dd5	     0xf84a0030000	                            je 0x400217b	       529	undo.c	FUNCTION_10	IF_7	IF_15	IF_17
0x4001ddb	    0x488b83201200	          mov rax, qword [rbx + 0x1220] 	       534	undo.c	FUNCTION_10	IF_7	IF_18
0x4001de2	          0x4885c0	                           test rax, rax	       534	undo.c	FUNCTION_10	IF_7	IF_18
0x4001de5	            0x7404	                            je 0x4001deb	       534	undo.c	FUNCTION_10	IF_7	IF_18
0x4001de7	        0x4c896808	                mov qword [rax + 8], r13	       535	undo.c	FUNCTION_10	IF_7	IF_18
0x4001deb	    0x488b83381200	          mov rax, qword [rbx + 0x1238] 	       537	undo.c	FUNCTION_10	IF_7
0x4001df2	        0x4883c001	                              add rax, 1	       537	undo.c	FUNCTION_10	IF_7
0x4001df6	    0x488983381200	          mov qword [rbx + 0x1238], rax 	       537	undo.c	FUNCTION_10	IF_7
0x4001dfd	        0x49894520	             mov qword [r13 + 0x20], rax	       537	undo.c	FUNCTION_10	IF_7
0x4001e01	    0x488983481200	          mov qword [rbx + 0x1248], rax 	       538	undo.c	FUNCTION_10	IF_7
0x4001e08	      0xe800000000	                          call 0x4001e0d	       539	undo.c	FUNCTION_10	IF_7	CALL_20
0x4001e0d	    0x488b15000000	            mov rdx, qword [0x04001e14] 	       541	undo.c	FUNCTION_10	IF_7
0x4001e14	    0x498985280200	            mov qword [r13 + 0x228], rax	       539	undo.c	FUNCTION_10	IF_7	CALL_20
0x4001e1b	        0x4883c001	                              add rax, 1	       541	undo.c	FUNCTION_10	IF_7
0x4001e1f	    0x49c785300200	              mov qword [r13 + 0x230], 0	       540	undo.c	FUNCTION_10	IF_7
0x4001e2a	    0x488982501200	          mov qword [rdx + 0x1250], rax 	       541	undo.c	FUNCTION_10	IF_7
0x4001e31	    0x488b05000000	            mov rax, qword [0x04001e38] 	       546	undo.c	FUNCTION_10	IF_7
0x4001e38	    0x41c745280000	               mov dword [r13 + 0x28], 0	       543	undo.c	FUNCTION_10	IF_7
0x4001e40	    0x49c745300000	               mov qword [r13 + 0x30], 0	       544	undo.c	FUNCTION_10	IF_7
0x4001e48	    0x49c745380000	               mov qword [r13 + 0x38], 0	       545	undo.c	FUNCTION_10	IF_7
0x4001e50	        0x488b5040	            mov rdx, qword [rax + 0x40] 	       546	undo.c	FUNCTION_10	IF_7
0x4001e54	        0x488b4038	            mov rax, qword [rax + 0x38] 	       546	undo.c	FUNCTION_10	IF_7
0x4001e58	        0x49895548	             mov qword [r13 + 0x48], rdx	       546	undo.c	FUNCTION_10	IF_7
0x4001e5c	        0x49894540	             mov qword [r13 + 0x40], rax	       546	undo.c	FUNCTION_10	IF_7
0x4001e60	      0xe800000000	                          call 0x4001e65	       548	undo.c	FUNCTION_10	IF_7	IF_19	CALL_21
0x4001e65	            0x85c0	                           test eax, eax	       548	undo.c	FUNCTION_10	IF_7	IF_19	CALL_21
0x4001e67	     0xf84a6010000	                            je 0x4002013	       548	undo.c	FUNCTION_10	IF_7	IF_19	CALL_21
0x4001e6d	    0x488b05000000	            mov rax, qword [0x04001e74] 	       548	undo.c	FUNCTION_10	IF_7	IF_19	CALL_21
0x4001e74	          0x8b5044	            mov edx, dword [rax + 0x44] 	       548	undo.c	FUNCTION_10	IF_7	IF_19	CALL_21
0x4001e77	            0x85d2	                           test edx, edx	       548	undo.c	FUNCTION_10	IF_7	IF_19	CALL_21
0x4001e79	     0xf8e94010000	                           jle 0x4002013	       548	undo.c	FUNCTION_10	IF_7	IF_19	CALL_21
0x4001e7f	      0xe800000000	                          call 0x4001e84	       549	undo.c	FUNCTION_10	IF_7	CALL_22
0x4001e84	            0x4898	                                    cdqe	       549	undo.c	FUNCTION_10	IF_7	CALL_22
0x4001e86	        0x49894550	             mov qword [r13 + 0x50], rax	       549	undo.c	FUNCTION_10	IF_7	CALL_22
0x4001e8a	    0x488b1d000000	            mov rbx, qword [0x04001e91] 	       555	undo.c	FUNCTION_10	IF_7
0x4001e91	            0x31d2	                            xor edx, edx	       555	undo.c	FUNCTION_10	IF_7
0x4001e93	      0xb902000000	                              mov ecx, 2	       556	undo.c	FUNCTION_10	IF_7
0x4001e98	        0x498d7d60	                   lea rdi, [r13 + 0x60]	        59	string3.h	FUNCTION_68	CALL_3
0x4001e9c	    0x8b83c8000000	            mov eax, dword [rbx + 0xc8] 	       555	undo.c	FUNCTION_10	IF_7
0x4001ea2	    0x488db3580100	                  lea rsi, [rbx + 0x158]	        59	string3.h	FUNCTION_68	CALL_3
0x4001ea9	            0x85c0	                           test eax, eax	       555	undo.c	FUNCTION_10	IF_7
0x4001eab	          0x8b4310	            mov eax, dword [rbx + 0x10] 	       556	undo.c	FUNCTION_10	IF_7
0x4001eae	           0xf95c2	                                setne dl	       555	undo.c	FUNCTION_10	IF_7
0x4001eb1	          0x83e001	                              and eax, 1	       556	undo.c	FUNCTION_10	IF_7
0x4001eb4	           0xf45c1	                         cmovne eax, ecx	       556	undo.c	FUNCTION_10	IF_7
0x4001eb7	             0x1d0	                            add eax, edx	       555	undo.c	FUNCTION_10	IF_7
0x4001eb9	      0xbaa0010000	                          mov edx, 0x1a0	        59	string3.h	FUNCTION_68	CALL_3
0x4001ebe	        0x41894558	             mov dword [r13 + 0x58], eax	       555	undo.c	FUNCTION_10	IF_7
0x4001ec2	      0xe800000000	                          call 0x4001ec7	        59	string3.h	FUNCTION_68	CALL_3
0x4001ec7	    0x488b83f80200	           mov rax, qword [rbx + 0x2f8] 	       560	undo.c	FUNCTION_10	IF_7
0x4001ece	    0x4883bb181200	             cmp qword [rbx + 0x1218], 0	       563	undo.c	FUNCTION_10	IF_7	IF_20
0x4001ed6	    0x498985000200	            mov qword [r13 + 0x200], rax	       560	undo.c	FUNCTION_10	IF_7
0x4001edd	    0x488b83000300	           mov rax, qword [rbx + 0x300] 	       560	undo.c	FUNCTION_10	IF_7
0x4001ee4	    0x498985080200	            mov qword [r13 + 0x208], rax	       560	undo.c	FUNCTION_10	IF_7
0x4001eeb	    0x488b83080300	           mov rax, qword [rbx + 0x308] 	       560	undo.c	FUNCTION_10	IF_7
0x4001ef2	    0x498985100200	            mov qword [r13 + 0x210], rax	       560	undo.c	FUNCTION_10	IF_7
0x4001ef9	    0x488b83100300	           mov rax, qword [rbx + 0x310] 	       560	undo.c	FUNCTION_10	IF_7
0x4001f00	    0x498985180200	            mov qword [r13 + 0x218], rax	       560	undo.c	FUNCTION_10	IF_7
0x4001f07	    0x488b83180300	           mov rax, qword [rbx + 0x318] 	       560	undo.c	FUNCTION_10	IF_7
0x4001f0e	    0x498985200200	            mov qword [r13 + 0x220], rax	       560	undo.c	FUNCTION_10	IF_7
0x4001f15	    0x4c89ab201200	          mov qword [rbx + 0x1220], r13 	       562	undo.c	FUNCTION_10	IF_7
0x4001f1c	     0xf842f020000	                            je 0x4002151	       563	undo.c	FUNCTION_10	IF_7	IF_20
0x4001f22	    0x838330120000	             add dword [rbx + 0x1230], 1	       565	undo.c	FUNCTION_10	IF_7
0x4001f29	      0xe9a1faffff	                           jmp 0x40019cf	       565	undo.c	FUNCTION_10	IF_7
0x4001f2e	        0x488b4518	            mov rax, qword [rbp + 0x18] 	      3305	undo.c	FUNCTION_53	IF_2
0x4001f32	          0x4885c0	                           test rax, rax	      3305	undo.c	FUNCTION_53	IF_2
0x4001f35	            0x7408	                            je 0x4001f3f	      3305	undo.c	FUNCTION_53	IF_2
0x4001f37	    0x48c740100000	               mov qword [rax + 0x10], 0	      3306	undo.c	FUNCTION_53	IF_2
0x4001f3f	        0x488b5500	                    mov rdx, qword [rbp]	      3309	undo.c	FUNCTION_53	IF_3
0x4001f43	        0x488b4508	                mov rax, qword [rbp + 8]	      3310	undo.c	FUNCTION_53	IF_3
0x4001f47	          0x4885d2	                           test rdx, rdx	      3309	undo.c	FUNCTION_53	IF_3
0x4001f4a	     0xf8437020000	                            je 0x4002187	      3309	undo.c	FUNCTION_53	IF_3
0x4001f50	        0x48894208	                mov qword [rdx + 8], rax	      3312	undo.c	FUNCTION_53	ELSE_1
0x4001f54	        0x488b4508	                mov rax, qword [rbp + 8]	      3314	undo.c	FUNCTION_53	IF_4
0x4001f58	          0x4885c0	                           test rax, rax	      3314	undo.c	FUNCTION_53	IF_4
0x4001f5b	            0x750f	                           jne 0x4001f6c	      3314	undo.c	FUNCTION_53	IF_4
0x4001f5d	      0xe973020000	                           jmp 0x40021d5	      3314	undo.c	FUNCTION_53	IF_4
0x4001f62	    0x660f1f440000	                    nop word [rax + rax]	      3314	undo.c	FUNCTION_53	IF_4
0x4001f68	        0x488b5500	                    mov rdx, qword [rbp]	      3314	undo.c	FUNCTION_53	IF_4
0x4001f6c	          0x488910	                    mov qword [rax], rdx	      3319	undo.c	FUNCTION_53	ELSE_2	FOR_1
0x4001f6f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3318	undo.c	FUNCTION_53	ELSE_2	FOR_1
0x4001f73	          0x4885c0	                           test rax, rax	      3317	undo.c	FUNCTION_53	ELSE_2	FOR_1
0x4001f76	            0x75f0	                           jne 0x4001f68	      3317	undo.c	FUNCTION_53	ELSE_2	FOR_1
0x4001f78	    0x488b93201200	          mov rdx, qword [rbx + 0x1220] 	      3317	undo.c	FUNCTION_53	ELSE_2	FOR_1
0x4001f7f	    0x483bab281200	          cmp rbp, qword [rbx + 0x1228] 	      3371	undo.c	FUNCTION_55	IF_1
0x4001f86	     0xf840b020000	                            je 0x4002197	      3371	undo.c	FUNCTION_55	IF_1
0x4001f8c	          0x4839d5	                            cmp rbp, rdx	      3373	undo.c	FUNCTION_55	IF_2
0x4001f8f	     0xf8412020000	                            je 0x40021a7	      3373	undo.c	FUNCTION_55	IF_2
0x4001f95	        0x4c8b6530	            mov r12, qword [rbp + 0x30] 	      3378	undo.c	FUNCTION_55	FOR_1
0x4001f99	          0x4d85e4	                           test r12, r12	      3378	undo.c	FUNCTION_55	FOR_1
0x4001f9c	            0x7461	                            je 0x4001fff	      3378	undo.c	FUNCTION_55	FOR_1
0x4001f9e	            0x6690	                                     nop	      3378	undo.c	FUNCTION_55	FOR_1
0x4001fa0	      0x498b4c2428	            mov rcx, qword [r12 + 0x28] 	      3381	undo.c	FUNCTION_55	FOR_1	CALL_1
0x4001fa5	        0x498b0424	                    mov rax, qword [r12]	      3380	undo.c	FUNCTION_55	FOR_1
0x4001fa9	        0x4c8d79ff	                      lea r15, [rcx - 1]	      3380	undo.c	FUNCTION_55	FOR_1
0x4001fad	          0x4885c9	                           test rcx, rcx	      3397	undo.c	FUNCTION_56	WHILE_1
0x4001fb0	      0x4889442408	                mov qword [rsp + 8], rax	      3380	undo.c	FUNCTION_55	FOR_1
0x4001fb5	    0x4e8d34fd0000	                        lea r14, [r15*8]	      3380	undo.c	FUNCTION_55	FOR_1
0x4001fbd	            0x7f0d	                            jg 0x4001fcc	      3397	undo.c	FUNCTION_56	WHILE_1
0x4001fbf	            0xeb22	                           jmp 0x4001fe3	      3397	undo.c	FUNCTION_56	WHILE_1
0x4001fc1	     0xf1f80000000	                         nop dword [rax]	      3397	undo.c	FUNCTION_56	WHILE_1
0x4001fc8	        0x4983ef01	                              sub r15, 1	      3397	undo.c	FUNCTION_56	WHILE_1
0x4001fcc	      0x498b4c2420	            mov rcx, qword [r12 + 0x20] 	      3398	undo.c	FUNCTION_56	CALL_1
0x4001fd1	        0x4a8b3c31	              mov rdi, qword [rcx + r14]	      3398	undo.c	FUNCTION_56	CALL_1
0x4001fd5	        0x4983ee08	                              sub r14, 8	      3398	undo.c	FUNCTION_56	CALL_1
0x4001fd9	      0xe800000000	                          call 0x4001fde	      3398	undo.c	FUNCTION_56	CALL_1
0x4001fde	          0x4d85ff	                           test r15, r15	      3397	undo.c	FUNCTION_56	WHILE_1
0x4001fe1	            0x75e5	                           jne 0x4001fc8	      3397	undo.c	FUNCTION_56	WHILE_1
0x4001fe3	      0x498b7c2420	            mov rdi, qword [r12 + 0x20] 	      3399	undo.c	FUNCTION_56	CALL_2
0x4001fe8	      0xe800000000	                          call 0x4001fed	      3399	undo.c	FUNCTION_56	CALL_2
0x4001fed	          0x4c89e7	                            mov rdi, r12	      3403	undo.c	FUNCTION_56	CALL_3
0x4001ff0	      0xe800000000	                          call 0x4001ff5	      3403	undo.c	FUNCTION_56	CALL_3
0x4001ff5	      0x4c8b642408	                mov r12, qword [rsp + 8]	      3403	undo.c	FUNCTION_56	CALL_3
0x4001ffa	          0x4d85e4	                           test r12, r12	      3378	undo.c	FUNCTION_55	FOR_1
0x4001ffd	            0x75a1	                           jne 0x4001fa0	      3378	undo.c	FUNCTION_55	FOR_1
0x4001fff	          0x4889ef	                            mov rdi, rbp	      3387	undo.c	FUNCTION_55	CALL_2
0x4002002	      0xe800000000	                          call 0x4002007	      3387	undo.c	FUNCTION_55	CALL_2
0x4002007	    0x83ab30120000	             sub dword [rbx + 0x1230], 1	      3388	undo.c	FUNCTION_55
0x400200e	      0xe976f9ffff	                           jmp 0x4001989	      3388	undo.c	FUNCTION_55
0x4002013	    0x49c74550ffff	mov qword [r13 + 0x50], 0xffffffffffffffff	       551	undo.c	FUNCTION_10	IF_7	ELSE_5
0x400201b	      0xe96afeffff	                           jmp 0x4001e8a	       551	undo.c	FUNCTION_10	IF_7	ELSE_5
0x4002020	          0x4531ed	                          xor r13d, r13d	       473	undo.c	FUNCTION_10	IF_7	ELSE_1
0x4002023	      0xe9ccf8ffff	                           jmp 0x40018f4	       473	undo.c	FUNCTION_10	IF_7	ELSE_1
0x4002028	          0x488b03	                    mov rax, qword [rbx]	       598	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x400202b	        0x48394518	            cmp qword [rbp + 0x18], rax 	       598	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x400202f	     0xf8595f9ffff	                           jne 0x40019ca	       598	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4002035	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       598	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x4002039	      0xe98efcffff	                           jmp 0x4001ccc	       598	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_24
0x400203e	      0xbd01000000	                              mov ebp, 1	       570	undo.c	FUNCTION_10	ELSE_6	IF_21
0x4002043	      0xe99dfaffff	                           jmp 0x4001ae5	       570	undo.c	FUNCTION_10	ELSE_6	IF_21
0x4002048	      0xba05000000	                              mov edx, 5	       354	undo.c	FUNCTION_8	IF_3	CALL_6
0x400204d	      0xbe00000000	                              mov esi, 0	       354	undo.c	FUNCTION_8	IF_3	CALL_6
0x4002052	            0x31ff	                            xor edi, edi	       354	undo.c	FUNCTION_8	IF_3	CALL_6
0x4002054	      0xe800000000	                          call 0x4002059	       354	undo.c	FUNCTION_8	IF_3	CALL_6
0x4002059	          0x4889c7	                            mov rdi, rax	       354	undo.c	FUNCTION_8	IF_3	CALL_6
0x400205c	            0x31ed	                            xor ebp, ebp	       401	undo.c	FUNCTION_10	IF_1	IF_2
0x400205e	      0xe800000000	                          call 0x4002063	       354	undo.c	FUNCTION_8	IF_3	CALL_6
0x4002063	      0xe97dfaffff	                           jmp 0x4001ae5	       354	undo.c	FUNCTION_8	IF_3	CALL_6
0x4002068	        0x4c8d63ff	                      lea r12, [rbx - 1]	       354	undo.c	FUNCTION_8	IF_3	CALL_6
0x400206c	          0x4885db	                           test rbx, rbx	      3397	undo.c	FUNCTION_56	WHILE_1
0x400206f	    0x4e8d2ce50000	                        lea r13, [r12*8]	      3397	undo.c	FUNCTION_56	WHILE_1
0x4002077	            0x750b	                           jne 0x4002084	      3397	undo.c	FUNCTION_56	WHILE_1
0x4002079	            0xeb1f	                           jmp 0x400209a	      3397	undo.c	FUNCTION_56	WHILE_1
0x400207b	       0xf1f440000	                   nop dword [rax + rax]	      3397	undo.c	FUNCTION_56	WHILE_1
0x4002080	        0x4983ec01	                              sub r12, 1	      3397	undo.c	FUNCTION_56	WHILE_1
0x4002084	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      3398	undo.c	FUNCTION_56	CALL_1
0x4002088	        0x4a8b3c28	              mov rdi, qword [rax + r13]	      3398	undo.c	FUNCTION_56	CALL_1
0x400208c	        0x4983ed08	                              sub r13, 8	      3398	undo.c	FUNCTION_56	CALL_1
0x4002090	      0xe800000000	                          call 0x4002095	      3398	undo.c	FUNCTION_56	CALL_1
0x4002095	          0x4d85e4	                           test r12, r12	      3397	undo.c	FUNCTION_56	WHILE_1
0x4002098	            0x75e6	                           jne 0x4002080	      3397	undo.c	FUNCTION_56	WHILE_1
0x400209a	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	      3399	undo.c	FUNCTION_56	CALL_2
0x400209e	      0xe800000000	                          call 0x40020a3	      3399	undo.c	FUNCTION_56	CALL_2
0x40020a3	          0x4889ef	                            mov rdi, rbp	      3403	undo.c	FUNCTION_56	CALL_3
0x40020a6	      0xe800000000	                          call 0x40020ab	      3403	undo.c	FUNCTION_56	CALL_3
0x40020ab	      0xe969faffff	                           jmp 0x4001b19	      3403	undo.c	FUNCTION_56	CALL_3
0x40020b0	        0x4c8d63ff	                      lea r12, [rbx - 1]	      3403	undo.c	FUNCTION_56	CALL_3
0x40020b4	          0x4885db	                           test rbx, rbx	      3397	undo.c	FUNCTION_56	WHILE_1
0x40020b7	    0x4e8d2ce50000	                        lea r13, [r12*8]	      3397	undo.c	FUNCTION_56	WHILE_1
0x40020bf	            0x750b	                           jne 0x40020cc	      3397	undo.c	FUNCTION_56	WHILE_1
0x40020c1	            0xeb1f	                           jmp 0x40020e2	      3397	undo.c	FUNCTION_56	WHILE_1
0x40020c3	       0xf1f440000	                   nop dword [rax + rax]	      3397	undo.c	FUNCTION_56	WHILE_1
0x40020c8	        0x4983ec01	                              sub r12, 1	      3397	undo.c	FUNCTION_56	WHILE_1
0x40020cc	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      3398	undo.c	FUNCTION_56	CALL_1
0x40020d0	        0x4a8b3c28	              mov rdi, qword [rax + r13]	      3398	undo.c	FUNCTION_56	CALL_1
0x40020d4	        0x4983ed08	                              sub r13, 8	      3398	undo.c	FUNCTION_56	CALL_1
0x40020d8	      0xe800000000	                          call 0x40020dd	      3398	undo.c	FUNCTION_56	CALL_1
0x40020dd	          0x4d85e4	                           test r12, r12	      3397	undo.c	FUNCTION_56	WHILE_1
0x40020e0	            0x75e6	                           jne 0x40020c8	      3397	undo.c	FUNCTION_56	WHILE_1
0x40020e2	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	      3399	undo.c	FUNCTION_56	CALL_2
0x40020e6	      0xe800000000	                          call 0x40020eb	      3399	undo.c	FUNCTION_56	CALL_2
0x40020eb	          0x4889ef	                            mov rdi, rbp	      3403	undo.c	FUNCTION_56	CALL_3
0x40020ee	            0x31ed	                            xor ebp, ebp	       696	undo.c	FUNCTION_10	IF_33	FOR_2	IF_35
0x40020f0	      0xe800000000	                          call 0x40020f5	      3403	undo.c	FUNCTION_56	CALL_3
0x40020f5	      0xe9ebf9ffff	                           jmp 0x4001ae5	      3403	undo.c	FUNCTION_56	CALL_3
0x40020fa	      0xba05000000	                              mov edx, 5	       337	undo.c	FUNCTION_8	IF_1	CALL_2
0x40020ff	      0xbe00000000	                              mov esi, 0	       337	undo.c	FUNCTION_8	IF_1	CALL_2
0x4002104	            0x31ff	                            xor edi, edi	       337	undo.c	FUNCTION_8	IF_1	CALL_2
0x4002106	      0xe800000000	                          call 0x400210b	       337	undo.c	FUNCTION_8	IF_1	CALL_2
0x400210b	          0x4889c7	                            mov rdi, rax	       337	undo.c	FUNCTION_8	IF_1	CALL_2
0x400210e	            0x31ed	                            xor ebp, ebp	       401	undo.c	FUNCTION_10	IF_1	IF_2
0x4002110	      0xe800000000	                          call 0x4002115	       337	undo.c	FUNCTION_8	IF_1	CALL_2
0x4002115	      0xe9cbf9ffff	                           jmp 0x4001ae5	       337	undo.c	FUNCTION_8	IF_1	CALL_2
0x400211a	          0x4885f6	                           test rsi, rsi	       514	undo.c	FUNCTION_10	IF_7	IF_13	IF_14
0x400211d	            0x7411	                            je 0x4002130	       514	undo.c	FUNCTION_10	IF_7	IF_13	IF_14
0x400211f	          0x4889df	                            mov rdi, rbx	       515	undo.c	FUNCTION_10	IF_7	IF_13	CALL_19
0x4002122	            0x31d2	                            xor edx, edx	       515	undo.c	FUNCTION_10	IF_7	IF_13	CALL_19
0x4002124	      0xe857e6ffff	                   call sym.u_freebranch	       515	undo.c	FUNCTION_10	IF_7	IF_13	CALL_19
0x4002129	    0x488b1d000000	            mov rbx, qword [0x04002130] 	       515	undo.c	FUNCTION_10	IF_7	IF_13	CALL_19
0x4002130	    0xc78334120000	            mov dword [rbx + 0x1234], 0 	       516	undo.c	FUNCTION_10	IF_7	IF_13
0x400213a	      0xbd01000000	                              mov ebp, 1	       517	undo.c	FUNCTION_10	IF_7	IF_13
0x400213f	      0xe9a1f9ffff	                           jmp 0x4001ae5	       517	undo.c	FUNCTION_10	IF_7	IF_13
0x4002144	    0x49c745180000	               mov qword [r13 + 0x18], 0	       533	undo.c	FUNCTION_10	IF_7	ELSE_4
0x400214c	      0xe98afcffff	                           jmp 0x4001ddb	       533	undo.c	FUNCTION_10	IF_7	ELSE_4
0x4002151	    0x4c89ab181200	          mov qword [rbx + 0x1218], r13 	       564	undo.c	FUNCTION_10	IF_7	IF_20
0x4002158	      0xe9c5fdffff	                           jmp 0x4001f22	       564	undo.c	FUNCTION_10	IF_7	IF_20
0x400215d	            0x31ff	                            xor edi, edi	       417	undo.c	FUNCTION_10	IF_1	IF_3	IF_5	CALL_7
0x400215f	      0xba05000000	                              mov edx, 5	       417	undo.c	FUNCTION_10	IF_1	IF_3	IF_5	CALL_7
0x4002164	      0xbe00000000	                              mov esi, 0	       417	undo.c	FUNCTION_10	IF_1	IF_3	IF_5	CALL_7
0x4002169	      0xe800000000	                          call 0x400216e	       417	undo.c	FUNCTION_10	IF_1	IF_3	IF_5	CALL_7
0x400216e	          0x4889c7	                            mov rdi, rax	       417	undo.c	FUNCTION_10	IF_1	IF_3	IF_5	CALL_7
0x4002171	      0xe800000000	                          call 0x4002176	       417	undo.c	FUNCTION_10	IF_1	IF_3	IF_5	CALL_7
0x4002176	      0xe96af9ffff	                           jmp 0x4001ae5	       418	undo.c	FUNCTION_10	IF_1	IF_3	IF_5
0x400217b	    0x4c89ab181200	          mov qword [rbx + 0x1218], r13 	       530	undo.c	FUNCTION_10	IF_7	IF_15	IF_17
0x4002182	      0xe954fcffff	                           jmp 0x4001ddb	       530	undo.c	FUNCTION_10	IF_7	IF_15	IF_17
0x4002187	    0x488983181200	          mov qword [rbx + 0x1218], rax 	      3310	undo.c	FUNCTION_53	IF_3
0x400218e	        0x488b5500	                    mov rdx, qword [rbp]	      3310	undo.c	FUNCTION_53	IF_3
0x4002192	      0xe9bdfdffff	                           jmp 0x4001f54	      3310	undo.c	FUNCTION_53	IF_3
0x4002197	    0x48c783281200	            mov qword [rbx + 0x1228], 0 	      3372	undo.c	FUNCTION_55	IF_1
0x40021a2	      0xe9e5fdffff	                           jmp 0x4001f8c	      3372	undo.c	FUNCTION_55	IF_1
0x40021a7	    0x48c783201200	            mov qword [rbx + 0x1220], 0 	      3374	undo.c	FUNCTION_55	IF_2
0x40021b2	      0xe9defdffff	                           jmp 0x4001f95	      3374	undo.c	FUNCTION_55	IF_2
0x40021b7	            0x31ff	                            xor edi, edi	      3244	undo.c	FUNCTION_51	IF_1	CALL_2
0x40021b9	      0xba05000000	                              mov edx, 5	      3244	undo.c	FUNCTION_51	IF_1	CALL_2
0x40021be	      0xbe00000000	                              mov esi, 0	      3244	undo.c	FUNCTION_51	IF_1	CALL_2
0x40021c3	      0xe800000000	                          call 0x40021c8	      3244	undo.c	FUNCTION_51	IF_1	CALL_2
0x40021c8	          0x4889c7	                            mov rdi, rax	      3244	undo.c	FUNCTION_51	IF_1	CALL_2
0x40021cb	      0xe800000000	                          call 0x40021d0	      3244	undo.c	FUNCTION_51	IF_1	CALL_2
0x40021d0	      0xe9f5f7ffff	                           jmp 0x40019ca	      3244	undo.c	FUNCTION_51	IF_1	CALL_2
0x40021d5	    0x488993201200	          mov qword [rbx + 0x1220], rdx 	      3315	undo.c	FUNCTION_53	IF_4
0x40021dc	      0xe99efdffff	                           jmp 0x4001f7f	      3315	undo.c	FUNCTION_53	IF_4
0x40021e1	            0x31ff	                            xor edi, edi	       412	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_5
0x40021e3	      0xba05000000	                              mov edx, 5	       412	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_5
0x40021e8	      0xbe00000000	                              mov esi, 0	       412	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_5
0x40021ed	      0xe800000000	                          call 0x40021f2	       412	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_5
0x40021f2	          0x4889c7	                            mov rdi, rax	       412	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_5
0x40021f5	      0xe800000000	                          call 0x40021fa	       412	undo.c	FUNCTION_10	IF_1	IF_3	IF_4	CALL_5
0x40021fa	      0xe9e6f8ffff	                           jmp 0x4001ae5	       413	undo.c	FUNCTION_10	IF_1	IF_3	IF_4
0x40021ff	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       627	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_27
0x4002204	        0x48894510	            mov qword [rbp + 0x10], rax 	       627	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	IF_27
0x4002208	      0xbd01000000	                              mov ebp, 1	       635	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
0x400220d	      0xe9d3f8ffff	                           jmp 0x4001ae5	       635	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
0x4002212	      0xe800000000	                          call 0x4002217	       727	undo.c	FUNCTION_10
0x4002217	        0x48894518	            mov qword [rbp + 0x18], rax 	       632	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_8
0x400221b	    0x488b83201200	          mov rax, qword [rbx + 0x1220] 	       633	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_8
0x4002222	        0x48896838	             mov qword [rax + 0x38], rbp	       633	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25	ELSE_8
0x4002226	      0xbd01000000	                              mov ebp, 1	       635	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
0x400222b	      0xe9b5f8ffff	                           jmp 0x4001ae5	       635	undo.c	FUNCTION_10	ELSE_6	IF_22	FOR_1	IF_25
u_inssub	IF,1:CALL,1:functions,0:FOR,0:DO,0:WHILE,0:ELSE,0:SWITCH,0	11
0x4002260	    0x8b0500000000	            mov eax, dword [0x04002266] 	       304	undo.c	FUNCTION_6	IF_1
0x4002266	          0x4889fe	                            mov rsi, rdi	       303	undo.c	FUNCTION_6
0x4002269	            0x85c0	                           test eax, eax	       304	undo.c	FUNCTION_6	IF_1
0x400226b	            0x740b	                            je 0x4002278	       304	undo.c	FUNCTION_6	IF_1
0x400226d	      0xb801000000	                              mov eax, 1	       308	undo.c	FUNCTION_6
0x4002272	              0xc3	                                     ret	       308	undo.c	FUNCTION_6
0x4002273	       0xf1f440000	                   nop dword [rax + rax]	       308	undo.c	FUNCTION_6
0x4002278	        0x488d5701	                      lea rdx, [rdi + 1]	       307	undo.c	FUNCTION_6	CALL_1
0x400227c	        0x488d7fff	                      lea rdi, [rdi - 1]	       307	undo.c	FUNCTION_6	CALL_1
0x4002280	            0x31c9	                            xor ecx, ecx	       307	undo.c	FUNCTION_6	CALL_1
0x4002282	      0xe9c9f5ffff	                    jmp sym.u_savecommon	       307	undo.c	FUNCTION_6	CALL_1
curbufIsChanged	IF,0:CALL,1:functions,0:FOR,0:DO,0:WHILE,0:ELSE,0:SWITCH,0	30
0x4006ec0	              0x55	                                push rbp	      3548	undo.c	FUNCTION_65
0x4006ec1	              0x53	                                push rbx	      3548	undo.c	FUNCTION_65
0x4006ec2	        0x4883ec08	                              sub rsp, 8	      3548	undo.c	FUNCTION_65
0x4006ec6	    0x488b2d000000	            mov rbp, qword [0x04006ecd] 	      3549	undo.c	FUNCTION_65	CALL_1
0x4006ecd	    0x488bbd481c00	          mov rdi, qword [rbp + 0x1c48] 	      3530	undo.c	FUNCTION_63	IF_1	CALL_1
0x4006ed4	      0xe800000000	                          call 0x4006ed9	      3530	undo.c	FUNCTION_63	IF_1	CALL_1
0x4006ed9	            0x85c0	                           test eax, eax	      3530	undo.c	FUNCTION_63	IF_1	CALL_1
0x4006edb	            0x7413	                            je 0x4006ef0	      3530	undo.c	FUNCTION_63	IF_1	CALL_1
0x4006edd	      0xbb01000000	                              mov ebx, 1	      3531	undo.c	FUNCTION_63	IF_1
0x4006ee2	        0x4883c408	                              add rsp, 8	      3550	undo.c	FUNCTION_65
0x4006ee6	            0x89d8	                            mov eax, ebx	      3550	undo.c	FUNCTION_65
0x4006ee8	              0x5b	                                 pop rbx	      3550	undo.c	FUNCTION_65
0x4006ee9	              0x5d	                                 pop rbp	      3550	undo.c	FUNCTION_65
0x4006eea	              0xc3	                                     ret	      3550	undo.c	FUNCTION_65
0x4006eeb	       0xf1f440000	                   nop dword [rax + rax]	      3550	undo.c	FUNCTION_65
0x4006ef0	          0x4889ef	                            mov rdi, rbp	      3542	undo.c	FUNCTION_64	CALL_1
0x4006ef3	            0x89c3	                            mov ebx, eax	      3542	undo.c	FUNCTION_64	CALL_1
0x4006ef5	      0xe800000000	                          call 0x4006efa	      3542	undo.c	FUNCTION_64	CALL_1
0x4006efa	            0x85c0	                           test eax, eax	      3543	undo.c	FUNCTION_64	CALL_2
0x4006efc	            0x75e4	                           jne 0x4006ee2	      3543	undo.c	FUNCTION_64	CALL_2
0x4006efe	    0x8b85c8000000	            mov eax, dword [rbp + 0xc8] 	      3543	undo.c	FUNCTION_64	CALL_2
0x4006f04	            0x85c0	                           test eax, eax	      3543	undo.c	FUNCTION_64	CALL_2
0x4006f06	            0x75d5	                           jne 0x4006edd	      3543	undo.c	FUNCTION_64	CALL_2
0x4006f08	      0xbe01000000	                              mov esi, 1	      3543	undo.c	FUNCTION_64	CALL_2
0x4006f0d	          0x4889ef	                            mov rdi, rbp	      3543	undo.c	FUNCTION_64	CALL_2
0x4006f10	            0x31db	                            xor ebx, ebx	      3531	undo.c	FUNCTION_63	IF_1
0x4006f12	      0xe800000000	                          call 0x4006f17	      3543	undo.c	FUNCTION_64	CALL_2
0x4006f17	            0x85c0	                           test eax, eax	      3531	undo.c	FUNCTION_63	IF_1
0x4006f19	           0xf95c3	                                setne bl	      3531	undo.c	FUNCTION_63	IF_1
0x4006f1c	            0xebc4	                           jmp 0x4006ee2	      3531	undo.c	FUNCTION_63	IF_1
u_save_cursor	IF,0:CALL,1:functions,0:FOR,0:DO,0:WHILE,0:ELSE,0:SWITCH,0	74
0x4002400	    0x8b0500000000	            mov eax, dword [0x04002406] 	       266	undo.c	FUNCTION_4	IF_1
0x4002406	            0x85c0	                           test eax, eax	       266	undo.c	FUNCTION_4	IF_1
0x4002408	     0xf8512010000	                           jne 0x4002520	       266	undo.c	FUNCTION_4	IF_1
0x400240e	            0x4154	                                push r12	       252	undo.c	FUNCTION_3
0x4002410	              0x55	                                push rbp	       252	undo.c	FUNCTION_3
0x4002411	              0x53	                                push rbx	       252	undo.c	FUNCTION_3
0x4002412	        0x4883ec10	                           sub rsp, 0x10	       252	undo.c	FUNCTION_3
0x4002416	    0x488b0d000000	            mov rcx, qword [0x0400241d] 	       254	undo.c	FUNCTION_3
0x400241d	    0x4c8b25000000	            mov r12, qword [0x04002424] 	       269	undo.c	FUNCTION_4	IF_2
0x4002424	        0x488b5938	            mov rbx, qword [rcx + 0x38] 	       254	undo.c	FUNCTION_3
0x4002428	        0x498b1424	                    mov rdx, qword [r12]	       269	undo.c	FUNCTION_4	IF_2
0x400242c	        0x488d6bff	                      lea rbp, [rbx - 1]	       253	undo.c	FUNCTION_3	CALL_1
0x4002430	          0x4839d5	                            cmp rbp, rdx	       269	undo.c	FUNCTION_4	IF_2
0x4002433	     0xf8fd7000000	                            jg 0x4002510	       269	undo.c	FUNCTION_4	IF_2
0x4002439	        0x488d7301	                      lea rsi, [rbx + 1]	       254	undo.c	FUNCTION_3
0x400243d	        0x488d7a01	                      lea rdi, [rdx + 1]	       271	undo.c	FUNCTION_4	IF_2
0x4002441	          0x4839fe	                            cmp rsi, rdi	       271	undo.c	FUNCTION_4	IF_2
0x4002444	     0xf8fc6000000	                            jg 0x4002510	       271	undo.c	FUNCTION_4	IF_2
0x400244a	    0x49399c246812	          cmp qword [r12 + 0x1268], rbx 	      3427	undo.c	FUNCTION_58	IF_2
0x4002452	        0x410f94c0	                                sete r8b	      3427	undo.c	FUNCTION_58	IF_2
0x4002456	          0x4885db	                           test rbx, rbx	      3427	undo.c	FUNCTION_58	IF_2
0x4002459	        0x400f9ec7	                               setle dil	      3427	undo.c	FUNCTION_58	IF_2
0x400245d	          0x4108f8	                             or r8b, dil	      3427	undo.c	FUNCTION_58	IF_2
0x4002460	     0xf858c000000	                           jne 0x40024f2	      3427	undo.c	FUNCTION_58	IF_2
0x4002466	          0x4839d3	                            cmp rbx, rdx	      3427	undo.c	FUNCTION_58	IF_2
0x4002469	     0xf8f83000000	                            jg 0x40024f2	      3427	undo.c	FUNCTION_58	IF_2
0x400246f	    0x498bbc246012	          mov rdi, qword [r12 + 0x1260] 	      3446	undo.c	FUNCTION_59	IF_1
0x4002477	          0x4885ff	                           test rdi, rdi	      3446	undo.c	FUNCTION_59	IF_1
0x400247a	            0x743b	                            je 0x40024b7	      3446	undo.c	FUNCTION_59	IF_1
0x400247c	        0x8944240c	              mov dword [rsp + 0xc], eax	      3446	undo.c	FUNCTION_59	IF_1
0x4002480	        0x48893424	                    mov qword [rsp], rsi	      3446	undo.c	FUNCTION_59	IF_1
0x4002484	      0xe800000000	                          call 0x4002489	      3448	undo.c	FUNCTION_59	IF_1	CALL_1
0x4002489	    0x4c8b25000000	            mov r12, qword [0x04002490] 	      3448	undo.c	FUNCTION_59	IF_1	CALL_1
0x4002490	    0x488b0d000000	            mov rcx, qword [0x04002497] 	      3448	undo.c	FUNCTION_59	IF_1	CALL_1
0x4002497	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      3448	undo.c	FUNCTION_59	IF_1	CALL_1
0x400249b	        0x488b3424	                    mov rsi, qword [rsp]	      3448	undo.c	FUNCTION_59	IF_1	CALL_1
0x400249f	    0x49c784246012	            mov qword [r12 + 0x1260], 0 	      3448	undo.c	FUNCTION_59	IF_1	CALL_1
0x40024ab	    0x49c784246812	            mov qword [r12 + 0x1268], 0 	      3449	undo.c	FUNCTION_59	IF_1
0x40024b7	        0x483b5938	            cmp rbx, qword [rcx + 0x38] 	      3431	undo.c	FUNCTION_58	IF_3
0x40024bb	    0x49899c246812	          mov qword [r12 + 0x1268], rbx 	      3430	undo.c	FUNCTION_58
0x40024c3	            0x7461	                            je 0x4002526	      3431	undo.c	FUNCTION_58	IF_3
0x40024c5	          0x4889df	                            mov rdi, rbx	      3516	undo.c	FUNCTION_62	CALL_2
0x40024c8	    0x418984247012	          mov dword [r12 + 0x1270], eax 	      3516	undo.c	FUNCTION_62	CALL_2
0x40024d0	        0x48893424	                    mov qword [rsp], rsi	      3516	undo.c	FUNCTION_62	CALL_2
0x40024d4	      0xe800000000	                          call 0x40024d9	      3516	undo.c	FUNCTION_62	CALL_2
0x40024d9	          0x4889c7	                            mov rdi, rax	      3516	undo.c	FUNCTION_62	CALL_2
0x40024dc	      0xe800000000	                          call 0x40024e1	      3516	undo.c	FUNCTION_62	CALL_2
0x40024e1	          0x4885c0	                           test rax, rax	      3435	undo.c	FUNCTION_58	IF_4	CALL_2
0x40024e4	    0x498984246012	          mov qword [r12 + 0x1260], rax 	      3435	undo.c	FUNCTION_58	IF_4	CALL_2
0x40024ec	        0x488b3424	                    mov rsi, qword [rsp]	      3435	undo.c	FUNCTION_58	IF_4	CALL_2
0x40024f0	            0x7439	                            je 0x400252b	      3435	undo.c	FUNCTION_58	IF_4	CALL_2
0x40024f2	        0x4883c410	                           add rsp, 0x10	       255	undo.c	FUNCTION_3
0x40024f6	          0x4889ef	                            mov rdi, rbp	       277	undo.c	FUNCTION_4	CALL_2
0x40024f9	            0x31c9	                            xor ecx, ecx	       277	undo.c	FUNCTION_4	CALL_2
0x40024fb	              0x5b	                                 pop rbx	       255	undo.c	FUNCTION_3
0x40024fc	              0x5d	                                 pop rbp	       255	undo.c	FUNCTION_3
0x40024fd	            0x415c	                                 pop r12	       255	undo.c	FUNCTION_3
0x40024ff	            0x31d2	                            xor edx, edx	       277	undo.c	FUNCTION_4	CALL_2
0x4002501	      0xe94af3ffff	                    jmp sym.u_savecommon	       277	undo.c	FUNCTION_4	CALL_2
0x4002506	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       277	undo.c	FUNCTION_4	CALL_2
0x4002510	        0x4883c410	                           add rsp, 0x10	       255	undo.c	FUNCTION_3
0x4002514	              0x5b	                                 pop rbx	       255	undo.c	FUNCTION_3
0x4002515	              0x5d	                                 pop rbp	       255	undo.c	FUNCTION_3
0x4002516	            0x415c	                                 pop r12	       255	undo.c	FUNCTION_3
0x4002518	              0xc3	                                     ret	       255	undo.c	FUNCTION_3
0x4002519	     0xf1f80000000	                         nop dword [rax]	       255	undo.c	FUNCTION_3
0x4002520	      0xb801000000	                              mov eax, 1	       267	undo.c	FUNCTION_4	IF_1
0x4002525	              0xc3	                                     ret	       267	undo.c	FUNCTION_4	IF_1
0x4002526	          0x8b4140	            mov eax, dword [rcx + 0x40] 	      3432	undo.c	FUNCTION_58	IF_3
0x4002529	            0xeb9a	                           jmp 0x40024c5	      3432	undo.c	FUNCTION_58	IF_3
0x400252b	            0x31ff	                            xor edi, edi	      3436	undo.c	FUNCTION_58	CALL_3
0x400252d	      0xe800000000	                          call 0x4002532	      3436	undo.c	FUNCTION_58	CALL_3
0x4002532	        0x488b3424	                    mov rsi, qword [rsp]	      3436	undo.c	FUNCTION_58	CALL_3
0x4002536	            0xebba	                           jmp 0x40024f2	      3436	undo.c	FUNCTION_58	CALL_3
u_blockfree	IF,0:CALL,2:functions,0:FOR,0:DO,0:WHILE,1:ELSE,0:SWITCH,0	93
0x4005380	            0x4157	                                push r15	      3503	undo.c	FUNCTION_61
0x4005382	            0x4156	                                push r14	      3503	undo.c	FUNCTION_61
0x4005384	          0x4989fe	                            mov r14, rdi	      3503	undo.c	FUNCTION_61
0x4005387	            0x4155	                                push r13	      3503	undo.c	FUNCTION_61
0x4005389	            0x4154	                                push r12	      3503	undo.c	FUNCTION_61
0x400538b	              0x55	                                push rbp	      3503	undo.c	FUNCTION_61
0x400538c	              0x53	                                push rbx	      3503	undo.c	FUNCTION_61
0x400538d	        0x4883ec08	                              sub rsp, 8	      3503	undo.c	FUNCTION_61
0x4005391	    0x4c8baf181200	          mov r13, qword [rdi + 0x1218] 	      3504	undo.c	FUNCTION_61	WHILE_1
0x4005398	          0x4d85ed	                           test r13, r13	      3504	undo.c	FUNCTION_61	WHILE_1
0x400539b	     0xf8402010000	                            je 0x40054a3	      3504	undo.c	FUNCTION_61	WHILE_1
0x40053a1	        0x498b7510	            mov rsi, qword [r13 + 0x10] 	      3302	undo.c	FUNCTION_53	IF_1
0x40053a5	          0x4885f6	                           test rsi, rsi	      3302	undo.c	FUNCTION_53	IF_1
0x40053a8	            0x740a	                            je 0x40053b4	      3302	undo.c	FUNCTION_53	IF_1
0x40053aa	            0x31d2	                            xor edx, edx	      3303	undo.c	FUNCTION_53	CALL_1
0x40053ac	          0x4c89f7	                            mov rdi, r14	      3303	undo.c	FUNCTION_53	CALL_1
0x40053af	      0xe8ccb3ffff	                   call sym.u_freebranch	      3303	undo.c	FUNCTION_53	CALL_1
0x40053b4	        0x498b4518	            mov rax, qword [r13 + 0x18] 	      3305	undo.c	FUNCTION_53	IF_2
0x40053b8	          0x4885c0	                           test rax, rax	      3305	undo.c	FUNCTION_53	IF_2
0x40053bb	            0x7408	                            je 0x40053c5	      3305	undo.c	FUNCTION_53	IF_2
0x40053bd	    0x48c740100000	               mov qword [rax + 0x10], 0	      3306	undo.c	FUNCTION_53	IF_2
0x40053c5	        0x498b5500	                    mov rdx, qword [r13]	      3309	undo.c	FUNCTION_53	IF_3
0x40053c9	        0x498b4508	                mov rax, qword [r13 + 8]	      3310	undo.c	FUNCTION_53	IF_3
0x40053cd	          0x4885d2	                           test rdx, rdx	      3309	undo.c	FUNCTION_53	IF_3
0x40053d0	     0xf8407010000	                            je 0x40054dd	      3309	undo.c	FUNCTION_53	IF_3
0x40053d6	        0x48894208	                mov qword [rdx + 8], rax	      3312	undo.c	FUNCTION_53	ELSE_1
0x40053da	        0x498b4508	                mov rax, qword [r13 + 8]	      3314	undo.c	FUNCTION_53	IF_4
0x40053de	          0x4885c0	                           test rax, rax	      3314	undo.c	FUNCTION_53	IF_4
0x40053e1	            0x7511	                           jne 0x40053f4	      3314	undo.c	FUNCTION_53	IF_4
0x40053e3	      0xe90d010000	                           jmp 0x40054f5	      3314	undo.c	FUNCTION_53	IF_4
0x40053e8	     0xf1f84000000	                   nop dword [rax + rax]	      3314	undo.c	FUNCTION_53	IF_4
0x40053f0	        0x498b5500	                    mov rdx, qword [r13]	      3314	undo.c	FUNCTION_53	IF_4
0x40053f4	          0x488910	                    mov qword [rax], rdx	      3319	undo.c	FUNCTION_53	ELSE_2	FOR_1
0x40053f7	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3318	undo.c	FUNCTION_53	ELSE_2	FOR_1
0x40053fb	          0x4885c0	                           test rax, rax	      3317	undo.c	FUNCTION_53	ELSE_2	FOR_1
0x40053fe	            0x75f0	                           jne 0x40053f0	      3317	undo.c	FUNCTION_53	ELSE_2	FOR_1
0x4005400	    0x498b96201200	          mov rdx, qword [r14 + 0x1220] 	      3317	undo.c	FUNCTION_53	ELSE_2	FOR_1
0x4005407	    0x4d39ae281200	          cmp qword [r14 + 0x1228], r13 	      3371	undo.c	FUNCTION_55	IF_1
0x400540e	     0xf84b9000000	                            je 0x40054cd	      3371	undo.c	FUNCTION_55	IF_1
0x4005414	          0x4939d5	                            cmp r13, rdx	      3373	undo.c	FUNCTION_55	IF_2
0x4005417	     0xf84a0000000	                            je 0x40054bd	      3373	undo.c	FUNCTION_55	IF_2
0x400541d	        0x4d8b7d30	            mov r15, qword [r13 + 0x30] 	      3378	undo.c	FUNCTION_55	FOR_1
0x4005421	          0x4d85ff	                           test r15, r15	      3378	undo.c	FUNCTION_55	FOR_1
0x4005424	            0x745d	                            je 0x4005483	      3378	undo.c	FUNCTION_55	FOR_1
0x4005426	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3378	undo.c	FUNCTION_55	FOR_1
0x4005430	        0x498b4728	            mov rax, qword [r15 + 0x28] 	      3381	undo.c	FUNCTION_55	FOR_1	CALL_1
0x4005434	          0x4d8b27	                    mov r12, qword [r15]	      3380	undo.c	FUNCTION_55	FOR_1
0x4005437	        0x488d68ff	                      lea rbp, [rax - 1]	      3380	undo.c	FUNCTION_55	FOR_1
0x400543b	          0x4885c0	                           test rax, rax	      3397	undo.c	FUNCTION_56	WHILE_1
0x400543e	    0x488d1ced0000	                        lea rbx, [rbp*8]	      3397	undo.c	FUNCTION_56	WHILE_1
0x4005446	            0x7f0c	                            jg 0x4005454	      3397	undo.c	FUNCTION_56	WHILE_1
0x4005448	            0xeb20	                           jmp 0x400546a	      3397	undo.c	FUNCTION_56	WHILE_1
0x400544a	    0x660f1f440000	                    nop word [rax + rax]	      3397	undo.c	FUNCTION_56	WHILE_1
0x4005450	        0x4883ed01	                              sub rbp, 1	      3397	undo.c	FUNCTION_56	WHILE_1
0x4005454	        0x498b4720	            mov rax, qword [r15 + 0x20] 	      3398	undo.c	FUNCTION_56	CALL_1
0x4005458	        0x488b3c18	              mov rdi, qword [rax + rbx]	      3398	undo.c	FUNCTION_56	CALL_1
0x400545c	        0x4883eb08	                              sub rbx, 8	      3398	undo.c	FUNCTION_56	CALL_1
0x4005460	      0xe800000000	                          call 0x4005465	      3398	undo.c	FUNCTION_56	CALL_1
0x4005465	          0x4885ed	                           test rbp, rbp	      3397	undo.c	FUNCTION_56	WHILE_1
0x4005468	            0x75e6	                           jne 0x4005450	      3397	undo.c	FUNCTION_56	WHILE_1
0x400546a	        0x498b7f20	            mov rdi, qword [r15 + 0x20] 	      3399	undo.c	FUNCTION_56	CALL_2
0x400546e	      0xe800000000	                          call 0x4005473	      3399	undo.c	FUNCTION_56	CALL_2
0x4005473	          0x4c89ff	                            mov rdi, r15	      3403	undo.c	FUNCTION_56	CALL_3
0x4005476	          0x4d89e7	                            mov r15, r12	      3403	undo.c	FUNCTION_56	CALL_3
0x4005479	      0xe800000000	                          call 0x400547e	      3403	undo.c	FUNCTION_56	CALL_3
0x400547e	          0x4d85e4	                           test r12, r12	      3378	undo.c	FUNCTION_55	FOR_1
0x4005481	            0x75ad	                           jne 0x4005430	      3378	undo.c	FUNCTION_55	FOR_1
0x4005483	          0x4c89ef	                            mov rdi, r13	      3387	undo.c	FUNCTION_55	CALL_2
0x4005486	      0xe800000000	                          call 0x400548b	      3387	undo.c	FUNCTION_55	CALL_2
0x400548b	    0x4d8bae181200	          mov r13, qword [r14 + 0x1218] 	      3504	undo.c	FUNCTION_61	WHILE_1
0x4005492	    0x4183ae301200	             sub dword [r14 + 0x1230], 1	      3388	undo.c	FUNCTION_55
0x400549a	          0x4d85ed	                           test r13, r13	      3504	undo.c	FUNCTION_61	WHILE_1
0x400549d	     0xf85fefeffff	                           jne 0x40053a1	      3504	undo.c	FUNCTION_61	WHILE_1
0x40054a3	    0x498bbe601200	          mov rdi, qword [r14 + 0x1260] 	      3506	undo.c	FUNCTION_61	CALL_2
0x40054aa	        0x4883c408	                              add rsp, 8	      3507	undo.c	FUNCTION_61
0x40054ae	              0x5b	                                 pop rbx	      3507	undo.c	FUNCTION_61
0x40054af	              0x5d	                                 pop rbp	      3507	undo.c	FUNCTION_61
0x40054b0	            0x415c	                                 pop r12	      3507	undo.c	FUNCTION_61
0x40054b2	            0x415d	                                 pop r13	      3507	undo.c	FUNCTION_61
0x40054b4	            0x415e	                                 pop r14	      3507	undo.c	FUNCTION_61
0x40054b6	            0x415f	                                 pop r15	      3507	undo.c	FUNCTION_61
0x40054b8	      0xe900000000	                           jmp 0x40054bd	      3506	undo.c	FUNCTION_61	CALL_2
0x40054bd	    0x49c786201200	            mov qword [r14 + 0x1220], 0 	      3374	undo.c	FUNCTION_55	IF_2
0x40054c8	      0xe950ffffff	                           jmp 0x400541d	      3374	undo.c	FUNCTION_55	IF_2
0x40054cd	    0x49c786281200	            mov qword [r14 + 0x1228], 0 	      3372	undo.c	FUNCTION_55	IF_1
0x40054d8	      0xe937ffffff	                           jmp 0x4005414	      3372	undo.c	FUNCTION_55	IF_1
0x40054dd	    0x498986181200	          mov qword [r14 + 0x1218], rax 	      3310	undo.c	FUNCTION_53	IF_3
0x40054e4	        0x498b4508	                mov rax, qword [r13 + 8]	      3314	undo.c	FUNCTION_53	IF_4
0x40054e8	        0x498b5500	                    mov rdx, qword [r13]	      3314	undo.c	FUNCTION_53	IF_4
0x40054ec	          0x4885c0	                           test rax, rax	      3314	undo.c	FUNCTION_53	IF_4
0x40054ef	     0xf85fffeffff	                           jne 0x40053f4	      3314	undo.c	FUNCTION_53	IF_4
0x40054f5	    0x498996201200	          mov qword [r14 + 0x1220], rdx 	      3315	undo.c	FUNCTION_53	IF_4
0x40054fc	      0xe906ffffff	                           jmp 0x4005407	      3315	undo.c	FUNCTION_53	IF_4
u_compute_hash	IF,0:CALL,5:functions,0:FOR,1:DO,0:WHILE,0:ELSE,0:SWITCH,0	40
0x4002540	            0x4154	                                push r12	       753	undo.c	FUNCTION_11
0x4002542	              0x55	                                push rbp	       753	undo.c	FUNCTION_11
0x4002543	          0x4989fc	                            mov r12, rdi	       753	undo.c	FUNCTION_11
0x4002546	              0x53	                                push rbx	       753	undo.c	FUNCTION_11
0x4002547	      0xbb01000000	                              mov ebx, 1	       753	undo.c	FUNCTION_11
0x400254c	        0x4883ec70	                           sub rsp, 0x70	       753	undo.c	FUNCTION_11
0x4002550	          0x4889e7	                            mov rdi, rsp	       758	undo.c	FUNCTION_11	CALL_1
0x4002553	    0x64488b042528	                mov rax, qword fs:[0x28]	       753	undo.c	FUNCTION_11
0x400255c	      0x4889442468	             mov qword [rsp + 0x68], rax	       753	undo.c	FUNCTION_11
0x4002561	            0x31c0	                            xor eax, eax	       753	undo.c	FUNCTION_11
0x4002563	      0xe800000000	                          call 0x4002568	       758	undo.c	FUNCTION_11	CALL_1
0x4002568	    0x488b05000000	            mov rax, qword [0x0400256f] 	       759	undo.c	FUNCTION_11	FOR_1
0x400256f	        0x48833800	                      cmp qword [rax], 0	       759	undo.c	FUNCTION_11	FOR_1
0x4002573	            0x7e34	                           jle 0x40025a9	       759	undo.c	FUNCTION_11	FOR_1
0x4002575	           0xf1f00	                         nop dword [rax]	       759	undo.c	FUNCTION_11	FOR_1
0x4002578	          0x4889df	                            mov rdi, rbx	       761	undo.c	FUNCTION_11	FOR_1	CALL_2
0x400257b	        0x4883c301	                              add rbx, 1	       759	undo.c	FUNCTION_11	FOR_1
0x400257f	      0xe800000000	                          call 0x4002584	       761	undo.c	FUNCTION_11	FOR_1	CALL_2
0x4002584	          0x4889c7	                            mov rdi, rax	       762	undo.c	FUNCTION_11	FOR_1	CALL_4
0x4002587	          0x4889c5	                            mov rbp, rax	       761	undo.c	FUNCTION_11	FOR_1	CALL_2
0x400258a	      0xe800000000	                          call 0x400258f	       762	undo.c	FUNCTION_11	FOR_1	CALL_4
0x400258f	          0x8d5001	                      lea edx, [rax + 1]	       762	undo.c	FUNCTION_11	FOR_1	CALL_4
0x4002592	          0x4889ee	                            mov rsi, rbp	       762	undo.c	FUNCTION_11	FOR_1	CALL_4
0x4002595	          0x4889e7	                            mov rdi, rsp	       762	undo.c	FUNCTION_11	FOR_1	CALL_4
0x4002598	      0xe800000000	                          call 0x400259d	       762	undo.c	FUNCTION_11	FOR_1	CALL_4
0x400259d	    0x488b05000000	            mov rax, qword [0x040025a4] 	       759	undo.c	FUNCTION_11	FOR_1
0x40025a4	          0x483918	                    cmp qword [rax], rbx	       759	undo.c	FUNCTION_11	FOR_1
0x40025a7	            0x7dcf	                           jge 0x4002578	       759	undo.c	FUNCTION_11	FOR_1
0x40025a9	          0x4c89e6	                            mov rsi, r12	       764	undo.c	FUNCTION_11	CALL_5
0x40025ac	          0x4889e7	                            mov rdi, rsp	       764	undo.c	FUNCTION_11	CALL_5
0x40025af	      0xe800000000	                          call 0x40025b4	       764	undo.c	FUNCTION_11	CALL_5
0x40025b4	      0x488b442468	            mov rax, qword [rsp + 0x68] 	       765	undo.c	FUNCTION_11
0x40025b9	    0x644833042528	                xor rax, qword fs:[0x28]	       765	undo.c	FUNCTION_11
0x40025c2	            0x7509	                           jne 0x40025cd	       765	undo.c	FUNCTION_11
0x40025c4	        0x4883c470	                           add rsp, 0x70	       765	undo.c	FUNCTION_11
0x40025c8	              0x5b	                                 pop rbx	       765	undo.c	FUNCTION_11
0x40025c9	              0x5d	                                 pop rbp	       765	undo.c	FUNCTION_11
0x40025ca	            0x415c	                                 pop r12	       765	undo.c	FUNCTION_11
0x40025cc	              0xc3	                                     ret	       765	undo.c	FUNCTION_11
0x40025cd	      0xe800000000	                          call 0x40025d2	       765	undo.c	FUNCTION_11
u_undoline	IF,5:CALL,8:functions,0:FOR,0:DO,0:WHILE,0:ELSE,0:SWITCH,0	60
0x4005270	    0x8b0500000000	            mov eax, dword [0x04005276] 	      3465	undo.c	FUNCTION_60	IF_1
0x4005276	            0x85c0	                           test eax, eax	      3465	undo.c	FUNCTION_60	IF_1
0x4005278	            0x753d	                           jne 0x40052b7	      3465	undo.c	FUNCTION_60	IF_1
0x400527a	    0x488b05000000	            mov rax, qword [0x04005281] 	      3468	undo.c	FUNCTION_60	IF_2
0x4005281	    0x4883b8601200	             cmp qword [rax + 0x1260], 0	      3468	undo.c	FUNCTION_60	IF_2
0x4005289	            0x740c	                            je 0x4005297	      3468	undo.c	FUNCTION_60	IF_2
0x400528b	    0x488bb8681200	          mov rdi, qword [rax + 0x1268] 	      3469	undo.c	FUNCTION_60	IF_2
0x4005292	          0x483b38	                    cmp rdi, qword [rax]	      3469	undo.c	FUNCTION_60	IF_2
0x4005295	            0x7e09	                           jle 0x40052a0	      3469	undo.c	FUNCTION_60	IF_2
0x4005297	      0xe900000000	                           jmp 0x400529c	      3471	undo.c	FUNCTION_60	IF_2	CALL_1
0x400529c	         0xf1f4000	                         nop dword [rax]	      3471	undo.c	FUNCTION_60	IF_2	CALL_1
0x40052a0	        0x488d7701	                      lea rsi, [rdi + 1]	      3476	undo.c	FUNCTION_60	IF_3	CALL_2
0x40052a4	              0x53	                                push rbx	      3461	undo.c	FUNCTION_60
0x40052a5	        0x4883ef01	                              sub rdi, 1	      3476	undo.c	FUNCTION_60	IF_3	CALL_2
0x40052a9	            0x31c9	                            xor ecx, ecx	      3476	undo.c	FUNCTION_60	IF_3	CALL_2
0x40052ab	            0x31d2	                            xor edx, edx	      3476	undo.c	FUNCTION_60	IF_3	CALL_2
0x40052ad	      0xe800000000	                          call 0x40052b2	      3476	undo.c	FUNCTION_60	IF_3	CALL_2
0x40052b2	            0x85c0	                           test eax, eax	      3476	undo.c	FUNCTION_60	IF_3	CALL_2
0x40052b4	            0x750a	                           jne 0x40052c0	      3476	undo.c	FUNCTION_60	IF_3	CALL_2
0x40052b6	              0x5b	                                 pop rbx	      3496	undo.c	FUNCTION_60
0x40052b7	            0xf3c3	                                     ret	      3496	undo.c	FUNCTION_60
0x40052b9	     0xf1f80000000	                         nop dword [rax]	      3496	undo.c	FUNCTION_60
0x40052c0	    0x488b05000000	            mov rax, qword [0x040052c7] 	      3479	undo.c	FUNCTION_60	CALL_3
0x40052c7	    0x488bb8681200	          mov rdi, qword [rax + 0x1268] 	      3516	undo.c	FUNCTION_62	CALL_2
0x40052ce	      0xe800000000	                          call 0x40052d3	      3516	undo.c	FUNCTION_62	CALL_2
0x40052d3	          0x4889c7	                            mov rdi, rax	      3516	undo.c	FUNCTION_62	CALL_2
0x40052d6	      0xe800000000	                          call 0x40052db	      3516	undo.c	FUNCTION_62	CALL_2
0x40052db	          0x4885c0	                           test rax, rax	      3480	undo.c	FUNCTION_60	IF_4
0x40052de	          0x4889c3	                            mov rbx, rax	      3516	undo.c	FUNCTION_62	CALL_2
0x40052e1	     0xf848c000000	                            je 0x4005373	      3480	undo.c	FUNCTION_60	IF_4
0x40052e7	    0x488b05000000	            mov rax, qword [0x040052ee] 	      3485	undo.c	FUNCTION_60	CALL_5
0x40052ee	      0xba01000000	                              mov edx, 1	      3485	undo.c	FUNCTION_60	CALL_5
0x40052f3	    0x488bb0601200	          mov rsi, qword [rax + 0x1260] 	      3485	undo.c	FUNCTION_60	CALL_5
0x40052fa	    0x488bb8681200	          mov rdi, qword [rax + 0x1268] 	      3485	undo.c	FUNCTION_60	CALL_5
0x4005301	      0xe800000000	                          call 0x4005306	      3485	undo.c	FUNCTION_60	CALL_5
0x4005306	    0x488b05000000	            mov rax, qword [0x0400530d] 	      3486	undo.c	FUNCTION_60	CALL_6
0x400530d	            0x31f6	                            xor esi, esi	      3486	undo.c	FUNCTION_60	CALL_6
0x400530f	    0x488bb8681200	          mov rdi, qword [rax + 0x1268] 	      3486	undo.c	FUNCTION_60	CALL_6
0x4005316	      0xe800000000	                          call 0x400531b	      3486	undo.c	FUNCTION_60	CALL_6
0x400531b	    0x488b05000000	            mov rax, qword [0x04005322] 	      3487	undo.c	FUNCTION_60	CALL_7
0x4005322	    0x488bb8601200	          mov rdi, qword [rax + 0x1260] 	      3487	undo.c	FUNCTION_60	CALL_7
0x4005329	      0xe800000000	                          call 0x400532e	      3487	undo.c	FUNCTION_60	CALL_7
0x400532e	    0x488b15000000	            mov rdx, qword [0x04005335] 	      3488	undo.c	FUNCTION_60
0x4005335	    0x488b05000000	            mov rax, qword [0x0400533c] 	      3491	undo.c	FUNCTION_60	IF_5
0x400533c	    0x488b8a681200	          mov rcx, qword [rdx + 0x1268] 	      3491	undo.c	FUNCTION_60	IF_5
0x4005343	        0x48394838	            cmp qword [rax + 0x38], rcx 	      3491	undo.c	FUNCTION_60	IF_5
0x4005347	    0x48899a601200	          mov qword [rdx + 0x1260], rbx 	      3488	undo.c	FUNCTION_60
0x400534e	    0x8bb270120000	          mov esi, dword [rdx + 0x1270] 	      3490	undo.c	FUNCTION_60
0x4005354	            0x7412	                            je 0x4005368	      3491	undo.c	FUNCTION_60	IF_5
0x4005356	          0x897040	             mov dword [rax + 0x40], esi	      3493	undo.c	FUNCTION_60
0x4005359	        0x48894838	             mov qword [rax + 0x38], rcx	      3494	undo.c	FUNCTION_60
0x400535d	              0x5b	                                 pop rbx	      3496	undo.c	FUNCTION_60
0x400535e	      0xe900000000	                           jmp 0x4005363	      3495	undo.c	FUNCTION_60	CALL_8
0x4005363	       0xf1f440000	                   nop dword [rax + rax]	      3495	undo.c	FUNCTION_60	CALL_8
0x4005368	          0x8b7840	            mov edi, dword [rax + 0x40] 	      3492	undo.c	FUNCTION_60	IF_5
0x400536b	    0x89ba70120000	          mov dword [rdx + 0x1270], edi 	      3492	undo.c	FUNCTION_60	IF_5
0x4005371	            0xebe3	                           jmp 0x4005356	      3492	undo.c	FUNCTION_60	IF_5
0x4005373	              0x5b	                                 pop rbx	      3496	undo.c	FUNCTION_60
0x4005374	            0x31ff	                            xor edi, edi	      3482	undo.c	FUNCTION_60	IF_4	CALL_4
0x4005376	      0xe900000000	                           jmp 0x400537b	      3482	undo.c	FUNCTION_60	IF_4	CALL_4
