set_var_lval	functions,0:SWITCH,0:IF,20:DO,0:ELSE,9:WHILE,0:CALL,27:FOR,2	354
0x4007f50	            0x4157	                                push r15	      2246	eval.c	FUNCTION_46
0x4007f52	            0x4156	                                push r14	      2246	eval.c	FUNCTION_46
0x4007f54	            0x4155	                                push r13	      2246	eval.c	FUNCTION_46
0x4007f56	            0x4154	                                push r12	      2246	eval.c	FUNCTION_46
0x4007f58	          0x4989d4	                            mov r12, rdx	      2246	eval.c	FUNCTION_46
0x4007f5b	              0x55	                                push rbp	      2246	eval.c	FUNCTION_46
0x4007f5c	              0x53	                                push rbx	      2246	eval.c	FUNCTION_46
0x4007f5d	          0x4c89c5	                             mov rbp, r8	      2246	eval.c	FUNCTION_46
0x4007f60	          0x4889fb	                            mov rbx, rdi	      2246	eval.c	FUNCTION_46
0x4007f63	        0x4883ec48	                           sub rsp, 0x48	      2246	eval.c	FUNCTION_46
0x4007f67	    0x64488b042528	                mov rax, qword fs:[0x28]	      2246	eval.c	FUNCTION_46
0x4007f70	      0x4889442438	             mov qword [rsp + 0x38], rax	      2246	eval.c	FUNCTION_46
0x4007f75	            0x31c0	                            xor eax, eax	      2246	eval.c	FUNCTION_46
0x4007f77	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      2251	eval.c	FUNCTION_46	IF_1
0x4007f7b	          0x4885c0	                           test rax, rax	      2251	eval.c	FUNCTION_46	IF_1
0x4007f7e	     0xf840c030000	                            je 0x4008290	      2251	eval.c	FUNCTION_46	IF_1
0x4007f84	          0x4c8b2f	                    mov r13, qword [rdi]	      2277	eval.c	FUNCTION_46	ELSE_2	IF_5	CALL_9
0x4007f87	        0x488b7f58	            mov rdi, qword [rdi + 0x58] 	      2277	eval.c	FUNCTION_46	ELSE_2	IF_5	CALL_9
0x4007f8b	          0x4885ff	                           test rdi, rdi	      2277	eval.c	FUNCTION_46	ELSE_2	IF_5	CALL_9
0x4007f8e	     0xf84bc030000	                            je 0x4008350	      2277	eval.c	FUNCTION_46	ELSE_2	IF_5	CALL_9
0x4007f94	        0x488b7008	                mov rsi, qword [rax + 8]	      2279	eval.c	FUNCTION_46	ELSE_2	IF_5
0x4007f98	           0xfbe36	                   movsx esi, byte [rsi]	      2277	eval.c	FUNCTION_46	ELSE_2	IF_5	CALL_9
0x4007f9b	        0x40f6c601	                             test sil, 1	      7721	eval.c	FUNCTION_148	IF_1
0x4007f9f	            0x744f	                            je 0x4007ff0	      7721	eval.c	FUNCTION_148	IF_1
0x4007fa1	          0x4d85ed	                           test r13, r13	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x4007fa4	     0xf84f5000000	                            je 0x400809f	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x4007faa	      0xba05000000	                              mov edx, 5	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x4007faf	      0xbe00000000	                              mov esi, 0	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x4007fb4	            0x31ff	                            xor edi, edi	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4007fb6	      0xe800000000	                          call 0x4007fbb	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4007fbb	          0x4c89ee	                            mov rsi, r13	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4007fbe	          0x4889c7	                            mov rdi, rax	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4007fc1	      0xe800000000	                          call 0x4007fc6	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4007fc6	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      2378	eval.c	FUNCTION_46
0x4007fcb	    0x644833042528	                xor rax, qword fs:[0x28]	      2378	eval.c	FUNCTION_46
0x4007fd4	     0xf85ea040000	                           jne 0x40084c4	      2378	eval.c	FUNCTION_46
0x4007fda	        0x4883c448	                           add rsp, 0x48	      2378	eval.c	FUNCTION_46
0x4007fde	              0x5b	                                 pop rbx	      2378	eval.c	FUNCTION_46
0x4007fdf	              0x5d	                                 pop rbp	      2378	eval.c	FUNCTION_46
0x4007fe0	            0x415c	                                 pop r12	      2378	eval.c	FUNCTION_46
0x4007fe2	            0x415d	                                 pop r13	      2378	eval.c	FUNCTION_46
0x4007fe4	            0x415e	                                 pop r14	      2378	eval.c	FUNCTION_46
0x4007fe6	            0x415f	                                 pop r15	      2378	eval.c	FUNCTION_46
0x4007fe8	              0xc3	                                     ret	      2378	eval.c	FUNCTION_46
0x4007fe9	     0xf1f80000000	                         nop dword [rax]	      2378	eval.c	FUNCTION_46
0x4007ff0	          0x83e602	                              and esi, 2	      7729	eval.c	FUNCTION_148	IF_2
0x4007ff3	            0x741b	                            je 0x4008010	      7729	eval.c	FUNCTION_148	IF_2
0x4007ff5	          0x4d85ed	                           test r13, r13	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4007ff8	     0xf84ba030000	                            je 0x40083b8	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4007ffe	      0xba05000000	                              mov edx, 5	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4008003	      0xbe00000000	                              mov esi, 0	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4008008	            0xebaa	                           jmp 0x4007fb4	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x400800a	    0x660f1f440000	                    nop word [rax + rax]	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4008010	          0x8b5328	            mov edx, dword [rbx + 0x28] 	      2281	eval.c	FUNCTION_46	ELSE_3	IF_6
0x4008013	            0x85d2	                           test edx, edx	      2281	eval.c	FUNCTION_46	ELSE_3	IF_6
0x4008015	     0xf84a5000000	                            je 0x40080c0	      2281	eval.c	FUNCTION_46	ELSE_3	IF_6
0x400801b	      0x498b442408	                mov rax, qword [r12 + 8]	      2289	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1
0x4008020	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      2283	eval.c	FUNCTION_46	ELSE_3	IF_6
0x4008024	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	      2284	eval.c	FUNCTION_46	ELSE_3	IF_6
0x4008028	          0x4c8b20	                    mov r12, qword [rax]	      2289	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1
0x400802b	          0x4d85e4	                           test r12, r12	      2289	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1
0x400802e	     0xf8436010000	                            je 0x400816a	      2289	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1
0x4008034	          0x4885ff	                           test rdi, rdi	      2289	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1
0x4008037	     0xf842d010000	                            je 0x400816a	      2289	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1
0x400803d	         0xfb64714	           movzx eax, byte [rdi + 0x14] 	      2291	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1	IF_7	CALL_10
0x4008041	            0xa801	                              test al, 1	      7721	eval.c	FUNCTION_148	IF_1
0x4008043	     0xf8558ffffff	                           jne 0x4007fa1	      7721	eval.c	FUNCTION_148	IF_1
0x4008049	            0xa802	                              test al, 2	      7729	eval.c	FUNCTION_148	IF_2
0x400804b	            0x75a8	                           jne 0x4007ff5	      7729	eval.c	FUNCTION_148	IF_2
0x400804d	        0x498b0424	                    mov rax, qword [r12]	      2293	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1
0x4008051	          0x4885c0	                           test rax, rax	      2294	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1	IF_8
0x4008054	     0xf841e010000	                            je 0x4008178	      2294	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1	IF_8
0x400805a	        0x448b4340	            mov r8d, dword [rbx + 0x40] 	      2294	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1	IF_8
0x400805e	          0x4585c0	                           test r8d, r8d	      2294	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1	IF_8
0x4008061	     0xf84f9020000	                            je 0x4008360	      2294	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1	IF_8
0x4008067	          0x4889fa	                            mov rdx, rdi	      2294	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1	IF_8
0x400806a	            0xeb15	                           jmp 0x4008081	      2294	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1	IF_8
0x400806c	         0xf1f4000	                         nop dword [rax]	      2294	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1	IF_8
0x4008070	          0x83e102	                              and ecx, 2	      7729	eval.c	FUNCTION_148	IF_2
0x4008073	            0x7580	                           jne 0x4007ff5	      7729	eval.c	FUNCTION_148	IF_2
0x4008075	          0x488b00	                    mov rax, qword [rax]	      2293	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1
0x4008078	          0x4885c0	                           test rax, rax	      2294	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1	IF_8
0x400807b	     0xf84f7000000	                            je 0x4008178	      2294	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1	IF_8
0x4008081	          0x488b12	                    mov rdx, qword [rdx]	      2296	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1
0x4008084	          0x4885d2	                           test rdx, rdx	      2289	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1
0x4008087	     0xf84eb000000	                            je 0x4008178	      2289	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1
0x400808d	         0xfb64a14	           movzx ecx, byte [rdx + 0x14] 	      2291	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1	IF_7	CALL_10
0x4008091	          0xf6c101	                              test cl, 1	      7721	eval.c	FUNCTION_148	IF_1
0x4008094	            0x74da	                            je 0x4008070	      7721	eval.c	FUNCTION_148	IF_1
0x4008096	          0x4d85ed	                           test r13, r13	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x4008099	     0xf850bffffff	                           jne 0x4007faa	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x400809f	      0xba05000000	                              mov edx, 5	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x40080a4	      0xbe00000000	                              mov esi, 0	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x40080a9	            0x31ff	                            xor edi, edi	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x40080ab	      0xe800000000	                          call 0x40080b0	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x40080b0	          0x4989c5	                            mov r13, rax	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x40080b3	      0xe9f2feffff	                           jmp 0x4007faa	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x40080b8	     0xf1f84000000	                   nop dword [rax + rax]	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x40080c0	          0x4885ff	                           test rdi, rdi	      2339	eval.c	FUNCTION_46	ELSE_6	IF_15
0x40080c3	     0xf844f030000	                            je 0x4008418	      2339	eval.c	FUNCTION_46	ELSE_6	IF_15
0x40080c9	          0x4885ed	                           test rbp, rbp	      2341	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_16
0x40080cc	            0x742a	                            je 0x40080f8	      2341	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_16
0x40080ce	        0x807d003d	                    cmp byte [rbp], 0x3d	      2341	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_16
0x40080d2	            0x7424	                            je 0x40080f8	      2341	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_16
0x40080d4	            0x31ff	                            xor edi, edi	      2343	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_16	CALL_20
0x40080d6	      0xba05000000	                              mov edx, 5	      2343	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_16	CALL_20
0x40080db	      0xbe00000000	                              mov esi, 0	      2343	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_16	CALL_20
0x40080e0	      0xe800000000	                          call 0x40080e5	      2343	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_16	CALL_20
0x40080e5	          0x4889ee	                            mov rsi, rbp	      2343	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_16	CALL_20
0x40080e8	          0x4889c7	                            mov rdi, rax	      2343	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_16	CALL_20
0x40080eb	      0xe800000000	                          call 0x40080f0	      2343	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_16	CALL_20
0x40080f0	      0xe9d1feffff	                           jmp 0x4007fc6	      2344	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_16
0x40080f5	           0xf1f00	                         nop dword [rax]	      2344	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_16
0x40080f8	        0x894c240c	              mov dword [rsp + 0xc], ecx	      2344	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_16
0x40080fc	      0xe800000000	                          call 0x4008101	      2348	eval.c	FUNCTION_46	ELSE_6	IF_15	CALL_21
0x4008101	          0x4885c0	                           test rax, rax	      2349	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_17
0x4008104	      0x4889442418	             mov qword [rsp + 0x18], rax	      2348	eval.c	FUNCTION_46	ELSE_6	IF_15	CALL_21
0x4008109	     0xf84b7feffff	                            je 0x4007fc6	      2349	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_17
0x400810f	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      2351	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_18	CALL_22
0x4008113	          0x4889c6	                            mov rsi, rax	      2351	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_18	CALL_22
0x4008116	        0x488b7a08	                mov rdi, qword [rdx + 8]	      2351	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_18	CALL_22
0x400811a	      0xe800000000	                          call 0x400811f	      2351	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_18	CALL_22
0x400811f	            0x85c0	                           test eax, eax	      2351	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_18	CALL_22
0x4008121	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      2351	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_18	CALL_22
0x4008125	     0xf840b030000	                            je 0x4008436	      2351	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_18	CALL_22
0x400812b	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      2356	eval.c	FUNCTION_46	ELSE_6	IF_15
0x4008130	        0x48897310	             mov qword [rbx + 0x10], rsi	      2356	eval.c	FUNCTION_46	ELSE_6	IF_15
0x4008134	            0x85c9	                           test ecx, ecx	      2369	eval.c	FUNCTION_46	ELSE_6	IF_20
0x4008136	     0xf85cc020000	                           jne 0x4008408	      2369	eval.c	FUNCTION_46	ELSE_6	IF_20
0x400813c	        0x498b0424	                    mov rax, qword [r12]	      2373	eval.c	FUNCTION_46	ELSE_6	ELSE_9
0x4008140	      0x498b542408	                mov rdx, qword [r12 + 8]	      2373	eval.c	FUNCTION_46	ELSE_6	ELSE_9
0x4008145	          0x488906	                    mov qword [rsi], rax	      2373	eval.c	FUNCTION_46	ELSE_6	ELSE_9
0x4008148	        0x48895608	                mov qword [rsi + 8], rdx	      2373	eval.c	FUNCTION_46	ELSE_6	ELSE_9
0x400814c	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2374	eval.c	FUNCTION_46	ELSE_6	ELSE_9
0x4008150	        0xc6400400	                   mov byte [rax + 4], 0	      2374	eval.c	FUNCTION_46	ELSE_6	ELSE_9
0x4008154	    0x49c704240000	                      mov qword [r12], 0	        90	string3.h	FUNCTION_194	CALL_6
0x400815c	    0x49c744240800	                  mov qword [r12 + 8], 0	        90	string3.h	FUNCTION_194	CALL_6
0x4008165	      0xe95cfeffff	                           jmp 0x4007fc6	        90	string3.h	FUNCTION_194	CALL_6
0x400816a	          0x4d85e4	                           test r12, r12	      2303	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2
0x400816d	     0xf847d010000	                            je 0x40082f0	      2303	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2
0x4008173	       0xf1f440000	                   nop dword [rax + rax]	      2303	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2
0x4008178	          0x4885ed	                           test rbp, rbp	      2303	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2
0x400817b	            0x7557	                           jne 0x40081d4	      2303	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2
0x400817d	      0xe99f000000	                           jmp 0x4008221	      2303	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2
0x4008182	    0x660f1f440000	                    nop word [rax + rax]	      2303	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2
0x4008188	      0x498d742410	                   lea rsi, [r12 + 0x10]	      2306	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	CALL_11
0x400818d	        0x4883c710	                           add rdi, 0x10	      2306	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	CALL_11
0x4008191	          0x4889ea	                            mov rdx, rbp	      2306	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	CALL_11
0x4008194	      0xe877cdffff	                          call sym.tv_op	      2306	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	CALL_11
0x4008199	        0x4d8b2424	                    mov r12, qword [r12]	      2312	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2
0x400819d	          0x4d85e4	                           test r12, r12	      2313	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_10
0x40081a0	     0xf844a010000	                            je 0x40082f0	      2313	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_10
0x40081a6	          0x8b4b40	            mov ecx, dword [rbx + 0x40] 	      2313	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_10
0x40081a9	            0x85c9	                           test ecx, ecx	      2313	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_10
0x40081ab	            0x750e	                           jne 0x40081bb	      2313	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_10
0x40081ad	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      2313	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_10
0x40081b1	        0x48394338	            cmp qword [rbx + 0x38], rax 	      2313	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_10
0x40081b5	     0xf8475010000	                            je 0x4008330	      2313	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_10
0x40081bb	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      2315	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_11
0x40081bf	          0x488b38	                    mov rdi, qword [rax]	      2315	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_11
0x40081c2	          0x4885ff	                           test rdi, rdi	      2315	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_11
0x40081c5	     0xf84a5000000	                            je 0x4008270	      2315	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_11
0x40081cb	      0x4883433001	               add qword [rbx + 0x30], 1	      2325	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2
0x40081d0	        0x48897b18	             mov qword [rbx + 0x18], rdi	      2324	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2
0x40081d4	        0x807d003d	                    cmp byte [rbp], 0x3d	      2305	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_9
0x40081d8	            0x75ae	                           jne 0x4008188	      2305	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_9
0x40081da	        0x4883c710	                           add rdi, 0x10	      2309	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	ELSE_4	CALL_12
0x40081de	      0xe800000000	                          call 0x40081e3	      2309	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	ELSE_4	CALL_12
0x40081e3	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      2310	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	ELSE_4	CALL_13
0x40081e7	      0x498d7c2410	                   lea rdi, [r12 + 0x10]	      2310	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	ELSE_4	CALL_13
0x40081ec	        0x488d7010	                   lea rsi, [rax + 0x10]	      2310	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	ELSE_4	CALL_13
0x40081f0	      0xe800000000	                          call 0x40081f5	      2310	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	ELSE_4	CALL_13
0x40081f5	            0xeba2	                           jmp 0x4008199	      2310	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	ELSE_4	CALL_13
0x40081f7	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      2318	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_11	IF_12	CALL_14
0x40081fb	            0x31f6	                            xor esi, esi	      2318	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_11	IF_12	CALL_14
0x40081fd	      0xe800000000	                          call 0x4008202	      2318	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_11	IF_12	CALL_14
0x4008202	            0x85c0	                           test eax, eax	      2318	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_11	IF_12	CALL_14
0x4008204	     0xf84e6000000	                            je 0x40082f0	      2318	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_11	IF_12	CALL_14
0x400820a	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      2318	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_11	IF_12	CALL_14
0x400820e	          0x488b38	                    mov rdi, qword [rax]	      2318	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_11	IF_12	CALL_14
0x4008211	     0xf1f80000000	                         nop dword [rax]	      2318	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_11	IF_12	CALL_14
0x4008218	      0x4883433001	               add qword [rbx + 0x30], 1	      2325	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2
0x400821d	        0x48897b18	             mov qword [rbx + 0x18], rdi	      2324	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2
0x4008221	        0x4883c710	                           add rdi, 0x10	      2309	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	ELSE_4	CALL_12
0x4008225	      0xe800000000	                          call 0x400822a	      2309	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	ELSE_4	CALL_12
0x400822a	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      2310	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	ELSE_4	CALL_13
0x400822e	      0x498d7c2410	                   lea rdi, [r12 + 0x10]	      2310	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	ELSE_4	CALL_13
0x4008233	        0x488d7010	                   lea rsi, [rax + 0x10]	      2310	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	ELSE_4	CALL_13
0x4008237	      0xe800000000	                          call 0x400823c	      2310	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	ELSE_4	CALL_13
0x400823c	        0x4d8b2424	                    mov r12, qword [r12]	      2312	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2
0x4008240	          0x4d85e4	                           test r12, r12	      2313	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_10
0x4008243	     0xf84a7000000	                            je 0x40082f0	      2313	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_10
0x4008249	          0x8b7340	            mov esi, dword [rbx + 0x40] 	      2313	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_10
0x400824c	            0x85f6	                           test esi, esi	      2313	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_10
0x400824e	            0x750e	                           jne 0x400825e	      2313	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_10
0x4008250	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      2313	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_10
0x4008254	        0x48394338	            cmp qword [rbx + 0x38], rax 	      2313	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_10
0x4008258	     0xf84d2000000	                            je 0x4008330	      2313	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_10
0x400825e	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      2315	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_11
0x4008262	          0x488b38	                    mov rdi, qword [rax]	      2315	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_11
0x4008265	          0x4885ff	                           test rdi, rdi	      2315	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_11
0x4008268	            0x75ae	                           jne 0x4008218	      2315	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_11
0x400826a	            0xeb8b	                           jmp 0x40081f7	      2315	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_11
0x400826c	         0xf1f4000	                         nop dword [rax]	      2315	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_11
0x4008270	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      2318	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_11	IF_12	CALL_14
0x4008274	            0x31f6	                            xor esi, esi	      2318	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_11	IF_12	CALL_14
0x4008276	      0xe800000000	                          call 0x400827b	      2318	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_11	IF_12	CALL_14
0x400827b	            0x85c0	                           test eax, eax	      2318	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_11	IF_12	CALL_14
0x400827d	            0x7471	                            je 0x40082f0	      2318	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_11	IF_12	CALL_14
0x400827f	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      2318	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_11	IF_12	CALL_14
0x4008283	          0x488b38	                    mov rdi, qword [rax]	      2318	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_11	IF_12	CALL_14
0x4008286	      0xe940ffffff	                           jmp 0x40081cb	      2318	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_11	IF_12	CALL_14
0x400828b	       0xf1f440000	                   nop dword [rax + rax]	      2318	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_2	IF_11	IF_12	CALL_14
0x4008290	          0x4d85c0	                             test r8, r8	      2255	eval.c	FUNCTION_46	IF_1	IF_2
0x4008293	        0x440fb636	                  movzx r14d, byte [rsi]	      2253	eval.c	FUNCTION_46	IF_1
0x4008297	          0x4989f5	                            mov r13, rsi	      2253	eval.c	FUNCTION_46	IF_1
0x400829a	          0xc60600	                       mov byte [rsi], 0	      2254	eval.c	FUNCTION_46	IF_1
0x400829d	     0xf8435010000	                            je 0x40083d8	      2255	eval.c	FUNCTION_46	IF_1	IF_2
0x40082a3	        0x4180383d	                     cmp byte [r8], 0x3d	      2255	eval.c	FUNCTION_46	IF_1	IF_2
0x40082a7	     0xf842b010000	                            je 0x40083d8	      2255	eval.c	FUNCTION_46	IF_1	IF_2
0x40082ad	          0x4c8b3f	                    mov r15, qword [rdi]	      2261	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_2
0x40082b0	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2260	eval.c	FUNCTION_46	IF_1	IF_2
0x40082b9	          0x4c89ff	                            mov rdi, r15	      2261	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_2
0x40082bc	      0xe800000000	                          call 0x40082c1	      2261	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_2
0x40082c1	      0x488d4c2418	                   lea rcx, [rsp + 0x18]	      2261	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_2
0x40082c6	      0x488d542420	                   lea rdx, [rsp + 0x20]	      2261	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_2
0x40082cb	          0x4531c9	                            xor r9d, r9d	      2261	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_2
0x40082ce	    0x41b801000000	                              mov r8d, 1	      2261	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_2
0x40082d4	            0x89c6	                            mov esi, eax	      2261	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_2
0x40082d6	          0x4c89ff	                            mov rdi, r15	      2261	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_2
0x40082d9	      0xe800000000	                          call 0x40082de	      2261	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_2
0x40082de	          0x83f801	                              cmp eax, 1	      2261	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_2
0x40082e1	     0xf8477010000	                            je 0x400845e	      2261	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_2
0x40082e7	        0x45887500	                    mov byte [r13], r14b	      2275	eval.c	FUNCTION_46	IF_1
0x40082eb	      0xe9d6fcffff	                           jmp 0x4007fc6	      2275	eval.c	FUNCTION_46	IF_1
0x40082f0	          0x8b4340	            mov eax, dword [rbx + 0x40] 	      2329	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x40082f3	            0x85c0	                           test eax, eax	      2329	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x40082f5	     0xf84f5000000	                            je 0x40083f0	      2329	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x40082fb	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      2330	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x40082ff	          0x4885c0	                           test rax, rax	      2330	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x4008302	     0xf84befcffff	                            je 0x4007fc6	      2330	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x4008308	        0x48833800	                      cmp qword [rax], 0	      2330	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x400830c	     0xf84b4fcffff	                            je 0x4007fc6	      2330	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x4008312	            0x31ff	                            xor edi, edi	      2332	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x4008314	      0xba05000000	                              mov edx, 5	      2332	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x4008319	      0xbe00000000	                              mov esi, 0	      2332	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x400831e	      0xe800000000	                          call 0x4008323	      2332	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x4008323	          0x4889c7	                            mov rdi, rax	      2332	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x4008326	      0xe800000000	                          call 0x400832b	      2332	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x400832b	      0xe996fcffff	                           jmp 0x4007fc6	      2332	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x4008330	            0x31ff	                            xor edi, edi	      2328	eval.c	FUNCTION_46	ELSE_3	IF_6	CALL_16
0x4008332	      0xba05000000	                              mov edx, 5	      2328	eval.c	FUNCTION_46	ELSE_3	IF_6	CALL_16
0x4008337	      0xbe00000000	                              mov esi, 0	      2328	eval.c	FUNCTION_46	ELSE_3	IF_6	CALL_16
0x400833c	      0xe800000000	                          call 0x4008341	      2328	eval.c	FUNCTION_46	ELSE_3	IF_6	CALL_16
0x4008341	          0x4889c7	                            mov rdi, rax	      2328	eval.c	FUNCTION_46	ELSE_3	IF_6	CALL_16
0x4008344	      0xe800000000	                          call 0x4008349	      2328	eval.c	FUNCTION_46	ELSE_3	IF_6	CALL_16
0x4008349	      0xe978fcffff	                           jmp 0x4007fc6	      2328	eval.c	FUNCTION_46	ELSE_3	IF_6	CALL_16
0x400834e	            0x6690	                                     nop	      2328	eval.c	FUNCTION_46	ELSE_3	IF_6	CALL_16
0x4008350	         0xfbe7004	               movsx esi, byte [rax + 4]	      2277	eval.c	FUNCTION_46	ELSE_2	IF_5	CALL_9
0x4008354	      0xe942fcffff	                           jmp 0x4007f9b	      2277	eval.c	FUNCTION_46	ELSE_2	IF_5	CALL_9
0x4008359	     0xf1f80000000	                         nop dword [rax]	      2277	eval.c	FUNCTION_46	ELSE_2	IF_5	CALL_9
0x4008360	        0x4c8b4338	              mov r8, qword [rbx + 0x38]	      2277	eval.c	FUNCTION_46	ELSE_2	IF_5	CALL_9
0x4008364	          0x4863d2	                         movsxd rdx, edx	      2277	eval.c	FUNCTION_46	ELSE_2	IF_5	CALL_9
0x4008367	            0x31c9	                            xor ecx, ecx	      2294	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1	IF_8
0x4008369	          0x4929d0	                             sub r8, rdx	      2294	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1	IF_8
0x400836c	          0x4889fa	                            mov rdx, rdi	      2294	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1	IF_8
0x400836f	            0xeb20	                           jmp 0x4008391	      2294	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1	IF_8
0x4008371	     0xf1f80000000	                         nop dword [rax]	      2294	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1	IF_8
0x4008378	          0x83e602	                              and esi, 2	      7729	eval.c	FUNCTION_148	IF_2
0x400837b	     0xf8574fcffff	                           jne 0x4007ff5	      7729	eval.c	FUNCTION_148	IF_2
0x4008381	          0x488b00	                    mov rax, qword [rax]	      2293	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1
0x4008384	        0x4883c101	                              add rcx, 1	      2293	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1
0x4008388	          0x4885c0	                           test rax, rax	      2294	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1	IF_8
0x400838b	     0xf84e7fdffff	                            je 0x4008178	      2294	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1	IF_8
0x4008391	          0x4c39c1	                             cmp rcx, r8	      2294	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1	IF_8
0x4008394	     0xf84defdffff	                            je 0x4008178	      2294	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1	IF_8
0x400839a	          0x488b12	                    mov rdx, qword [rdx]	      2296	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1
0x400839d	          0x4885d2	                           test rdx, rdx	      2289	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1
0x40083a0	     0xf84d2fdffff	                            je 0x4008178	      2289	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1
0x40083a6	         0xfb67214	           movzx esi, byte [rdx + 0x14] 	      2291	eval.c	FUNCTION_46	ELSE_3	IF_6	FOR_1	IF_7	CALL_10
0x40083aa	        0x40f6c601	                             test sil, 1	      7721	eval.c	FUNCTION_148	IF_1
0x40083ae	            0x74c8	                            je 0x4008378	      7721	eval.c	FUNCTION_148	IF_1
0x40083b0	      0xe9ecfbffff	                           jmp 0x4007fa1	      7721	eval.c	FUNCTION_148	IF_1
0x40083b5	           0xf1f00	                         nop dword [rax]	      7721	eval.c	FUNCTION_148	IF_1
0x40083b8	      0xba05000000	                              mov edx, 5	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x40083bd	      0xbe00000000	                              mov esi, 0	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x40083c2	            0x31ff	                            xor edi, edi	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x40083c4	      0xe800000000	                          call 0x40083c9	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x40083c9	          0x4989c5	                            mov r13, rax	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x40083cc	      0xe92dfcffff	                           jmp 0x4007ffe	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x40083d1	     0xf1f80000000	                         nop dword [rax]	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x40083d8	          0x488b3b	                    mov rdi, qword [rbx]	      2274	eval.c	FUNCTION_46	IF_1	CALL_8
0x40083db	            0x89ca	                            mov edx, ecx	      2274	eval.c	FUNCTION_46	IF_1	CALL_8
0x40083dd	          0x4c89e6	                            mov rsi, r12	      2274	eval.c	FUNCTION_46	IF_1	CALL_8
0x40083e0	      0xe800000000	                          call 0x40083e5	      2274	eval.c	FUNCTION_46	IF_1	CALL_8
0x40083e5	      0xe9fdfeffff	                           jmp 0x40082e7	      2274	eval.c	FUNCTION_46	IF_1	CALL_8
0x40083ea	    0x660f1f440000	                    nop word [rax + rax]	      2274	eval.c	FUNCTION_46	IF_1	CALL_8
0x40083f0	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      2329	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x40083f4	        0x48394338	            cmp qword [rbx + 0x38], rax 	      2329	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x40083f8	     0xf84c8fbffff	                            je 0x4007fc6	      2329	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x40083fe	      0xe90fffffff	                           jmp 0x4008312	      2329	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x4008403	       0xf1f440000	                   nop dword [rax + rax]	      2329	eval.c	FUNCTION_46	ELSE_3	IF_6	ELSE_5	IF_14
0x4008408	          0x4c89e7	                            mov rdi, r12	      2370	eval.c	FUNCTION_46	ELSE_6	CALL_26
0x400840b	      0xe800000000	                          call 0x4008410	      2370	eval.c	FUNCTION_46	ELSE_6	CALL_26
0x4008410	      0xe9b1fbffff	                           jmp 0x4007fc6	      2370	eval.c	FUNCTION_46	ELSE_6	CALL_26
0x4008415	           0xf1f00	                         nop dword [rax]	      2370	eval.c	FUNCTION_46	ELSE_6	CALL_26
0x4008418	          0x4885ed	                           test rbp, rbp	      2358	eval.c	FUNCTION_46	ELSE_6	ELSE_7	IF_19
0x400841b	            0x7428	                            je 0x4008445	      2358	eval.c	FUNCTION_46	ELSE_6	ELSE_7	IF_19
0x400841d	        0x807d003d	                    cmp byte [rbp], 0x3d	      2358	eval.c	FUNCTION_46	ELSE_6	ELSE_7	IF_19
0x4008421	            0x7422	                            je 0x4008445	      2358	eval.c	FUNCTION_46	ELSE_6	ELSE_7	IF_19
0x4008423	          0x4889ea	                            mov rdx, rbp	      2360	eval.c	FUNCTION_46	ELSE_6	ELSE_7	IF_19	CALL_24
0x4008426	          0x4c89e6	                            mov rsi, r12	      2360	eval.c	FUNCTION_46	ELSE_6	ELSE_7	IF_19	CALL_24
0x4008429	          0x4889c7	                            mov rdi, rax	      2360	eval.c	FUNCTION_46	ELSE_6	ELSE_7	IF_19	CALL_24
0x400842c	      0xe8dfcaffff	                          call sym.tv_op	      2360	eval.c	FUNCTION_46	ELSE_6	ELSE_7	IF_19	CALL_24
0x4008431	      0xe990fbffff	                           jmp 0x4007fc6	      2361	eval.c	FUNCTION_46	ELSE_6	ELSE_7	IF_19
0x4008436	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      2353	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_18	CALL_23
0x400843b	      0xe800000000	                          call 0x4008440	      2353	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_18	CALL_23
0x4008440	      0xe981fbffff	                           jmp 0x4007fc6	      2354	eval.c	FUNCTION_46	ELSE_6	IF_15	IF_18
0x4008445	          0x4889c7	                            mov rdi, rax	      2364	eval.c	FUNCTION_46	ELSE_6	CALL_25
0x4008448	        0x894c240c	              mov dword [rsp + 0xc], ecx	      2364	eval.c	FUNCTION_46	ELSE_6	CALL_25
0x400844c	      0xe800000000	                          call 0x4008451	      2364	eval.c	FUNCTION_46	ELSE_6	CALL_25
0x4008451	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	      2364	eval.c	FUNCTION_46	ELSE_6	CALL_25
0x4008455	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      2364	eval.c	FUNCTION_46	ELSE_6	CALL_25
0x4008459	      0xe9d6fcffff	                           jmp 0x4008134	      2364	eval.c	FUNCTION_46	ELSE_6	CALL_25
0x400845e	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2264	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4
0x4008463	          0x4885c0	                           test rax, rax	      2264	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4
0x4008466	            0x7436	                            je 0x400849e	      2264	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4
0x4008468	         0xfb67810	           movzx edi, byte [rax + 0x10] 	      2265	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_3
0x400846c	          0x488b33	                    mov rsi, qword [rbx]	      2265	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_3
0x400846f	            0x31d2	                            xor edx, edx	      2265	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_3
0x4008471	      0xe800000000	                          call 0x4008476	      2265	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_3
0x4008476	            0x85c0	                           test eax, eax	      2265	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_3
0x4008478	            0x740f	                            je 0x4008489	      2265	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_3
0x400847a	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2270	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_7
0x400847f	      0xe800000000	                          call 0x4008484	      2270	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_7
0x4008484	      0xe95efeffff	                           jmp 0x40082e7	      2256	eval.c	FUNCTION_46	IF_1	IF_2
0x4008489	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2266	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_4
0x400848e	          0x488b33	                    mov rsi, qword [rbx]	      2266	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_4
0x4008491	         0xfbe7804	               movsx edi, byte [rax + 4]	      2266	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_4
0x4008495	      0xe8f67effff	     call sym.tv_check_lock.constprop.25	      2266	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_4
0x400849a	            0x85c0	                           test eax, eax	      2266	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_4
0x400849c	            0x75dc	                           jne 0x400847a	      2266	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_4
0x400849e	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2268	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_5
0x40084a3	          0x4889ea	                            mov rdx, rbp	      2268	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_5
0x40084a6	          0x4c89e6	                            mov rsi, r12	      2268	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_5
0x40084a9	      0xe862caffff	                          call sym.tv_op	      2268	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_5
0x40084ae	          0x83f801	                              cmp eax, 1	      2268	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_5
0x40084b1	            0x75c7	                           jne 0x400847a	      2268	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	IF_4	CALL_5
0x40084b3	          0x488b3b	                    mov rdi, qword [rbx]	      2269	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_6
0x40084b6	      0x488d742420	                   lea rsi, [rsp + 0x20]	      2269	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_6
0x40084bb	            0x31d2	                            xor edx, edx	      2269	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_6
0x40084bd	      0xe800000000	                          call 0x40084c2	      2269	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_6
0x40084c2	            0xebb6	                           jmp 0x400847a	      2269	eval.c	FUNCTION_46	IF_1	IF_2	IF_3	CALL_6
0x40084c4	      0xe800000000	                          call 0x40084c9	      2378	eval.c	FUNCTION_46
get_name_len	functions,0:SWITCH,0:IF,6:DO,0:ELSE,0:WHILE,0:CALL,10:FOR,0	107
0x400b790	            0x4157	                                push r15	      6144	eval.c	FUNCTION_97
0x400b792	            0x4156	                                push r14	      6144	eval.c	FUNCTION_97
0x400b794	          0x4189d6	                           mov r14d, edx	      6144	eval.c	FUNCTION_97
0x400b797	            0x4155	                                push r13	      6144	eval.c	FUNCTION_97
0x400b799	            0x4154	                                push r12	      6144	eval.c	FUNCTION_97
0x400b79b	          0x4189cd	                           mov r13d, ecx	      6144	eval.c	FUNCTION_97
0x400b79e	              0x55	                                push rbp	      6144	eval.c	FUNCTION_97
0x400b79f	              0x53	                                push rbx	      6144	eval.c	FUNCTION_97
0x400b7a0	          0x4889fb	                            mov rbx, rdi	      6144	eval.c	FUNCTION_97
0x400b7a3	          0x4989f4	                            mov r12, rsi	      6144	eval.c	FUNCTION_97
0x400b7a6	        0x4883ec28	                           sub rsp, 0x28	      6144	eval.c	FUNCTION_97
0x400b7aa	    0x48c706000000	                      mov qword [rsi], 0	      6150	eval.c	FUNCTION_97
0x400b7b1	          0x488b3f	                    mov rdi, qword [rdi]	      6152	eval.c	FUNCTION_97	IF_1
0x400b7b4	    0x64488b042528	                mov rax, qword fs:[0x28]	      6144	eval.c	FUNCTION_97
0x400b7bd	      0x4889442418	             mov qword [rsp + 0x18], rax	      6144	eval.c	FUNCTION_97
0x400b7c2	            0x31c0	                            xor eax, eax	      6144	eval.c	FUNCTION_97
0x400b7c4	          0x803f80	                    cmp byte [rdi], 0x80	      6152	eval.c	FUNCTION_97	IF_1
0x400b7c7	     0xf84a3000000	                            je 0x400b870	      6152	eval.c	FUNCTION_97	IF_1
0x400b7cd	      0xe800000000	                          call 0x400b7d2	      6159	eval.c	FUNCTION_97	CALL_2
0x400b7d2	          0x4863e8	                         movsxd rbp, eax	      6159	eval.c	FUNCTION_97	CALL_2
0x400b7d5	            0x85ed	                           test ebp, ebp	      6160	eval.c	FUNCTION_97	IF_2
0x400b7d7	     0xf8edb000000	                           jle 0x400b8b8	      6160	eval.c	FUNCTION_97	IF_2
0x400b7dd	          0x4863fd	                         movsxd rdi, ebp	      6163	eval.c	FUNCTION_97	IF_2
0x400b7e0	          0x48033b	                    add rdi, qword [rbx]	      6163	eval.c	FUNCTION_97	IF_2
0x400b7e3	            0x31c9	                            xor ecx, ecx	      6169	eval.c	FUNCTION_97	CALL_3
0x400b7e5	          0x48893b	                    mov qword [rbx], rdi	      6163	eval.c	FUNCTION_97	IF_2
0x400b7e8	      0x488d742408	                      lea rsi, [rsp + 8]	      6169	eval.c	FUNCTION_97	CALL_3
0x400b7ed	      0x488d542410	                   lea rdx, [rsp + 0x10]	      6169	eval.c	FUNCTION_97	CALL_3
0x400b7f2	      0xe800000000	                          call 0x400b7f7	      6169	eval.c	FUNCTION_97	CALL_3
0x400b7f7	      0x488b742408	                mov rsi, qword [rsp + 8]	      6171	eval.c	FUNCTION_97	IF_3
0x400b7fc	          0x4989c7	                            mov r15, rax	      6169	eval.c	FUNCTION_97	CALL_3
0x400b7ff	          0x4885f6	                           test rsi, rsi	      6171	eval.c	FUNCTION_97	IF_3
0x400b802	     0xf84c0000000	                            je 0x400b8c8	      6171	eval.c	FUNCTION_97	IF_3
0x400b808	          0x4585f6	                         test r14d, r14d	      6175	eval.c	FUNCTION_97	IF_3	IF_4
0x400b80b	     0xf848f000000	                            je 0x400b8a0	      6175	eval.c	FUNCTION_97	IF_3	IF_4
0x400b811	          0x488b3b	                    mov rdi, qword [rbx]	      6186	eval.c	FUNCTION_97	IF_3	CALL_5
0x400b814	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      6186	eval.c	FUNCTION_97	IF_3	CALL_5
0x400b819	          0x4889c1	                            mov rcx, rax	      6186	eval.c	FUNCTION_97	IF_3	CALL_5
0x400b81c	          0x4829ef	                            sub rdi, rbp	      6186	eval.c	FUNCTION_97	IF_3	CALL_5
0x400b81f	      0xe89cfdffff	             call sym.make_expanded_name	      6186	eval.c	FUNCTION_97	IF_3	CALL_5
0x400b824	          0x4885c0	                           test rax, rax	      6187	eval.c	FUNCTION_97	IF_3	IF_5
0x400b827	          0x4889c5	                            mov rbp, rax	      6186	eval.c	FUNCTION_97	IF_3	CALL_5
0x400b82a	     0xf84e0000000	                            je 0x400b910	      6187	eval.c	FUNCTION_97	IF_3	IF_5
0x400b830	          0x4c89ff	                            mov rdi, r15	      6190	eval.c	FUNCTION_97	IF_3	CALL_6
0x400b833	        0x49890424	                    mov qword [r12], rax	      6189	eval.c	FUNCTION_97	IF_3
0x400b837	      0xe800000000	                          call 0x400b83c	      6190	eval.c	FUNCTION_97	IF_3	CALL_6
0x400b83c	          0x4889ef	                            mov rdi, rbp	      6191	eval.c	FUNCTION_97	IF_3	CALL_7
0x400b83f	          0x488903	                    mov qword [rbx], rax	      6190	eval.c	FUNCTION_97	IF_3	CALL_6
0x400b842	      0xe800000000	                          call 0x400b847	      6191	eval.c	FUNCTION_97	IF_3	CALL_7
0x400b847	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      6199	eval.c	FUNCTION_97
0x400b84c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      6199	eval.c	FUNCTION_97
0x400b855	     0xf85bf000000	                           jne 0x400b91a	      6199	eval.c	FUNCTION_97
0x400b85b	        0x4883c428	                           add rsp, 0x28	      6199	eval.c	FUNCTION_97
0x400b85f	              0x5b	                                 pop rbx	      6199	eval.c	FUNCTION_97
0x400b860	              0x5d	                                 pop rbp	      6199	eval.c	FUNCTION_97
0x400b861	            0x415c	                                 pop r12	      6199	eval.c	FUNCTION_97
0x400b863	            0x415d	                                 pop r13	      6199	eval.c	FUNCTION_97
0x400b865	            0x415e	                                 pop r14	      6199	eval.c	FUNCTION_97
0x400b867	            0x415f	                                 pop r15	      6199	eval.c	FUNCTION_97
0x400b869	              0xc3	                                     ret	      6199	eval.c	FUNCTION_97
0x400b86a	    0x660f1f440000	                    nop word [rax + rax]	      6199	eval.c	FUNCTION_97
0x400b870	        0x807f01fd	                cmp byte [rdi + 1], 0xfd	      6152	eval.c	FUNCTION_97	IF_1
0x400b874	     0xf8553ffffff	                           jne 0x400b7cd	      6152	eval.c	FUNCTION_97	IF_1
0x400b87a	        0x807f0252	                cmp byte [rdi + 2], 0x52	      6153	eval.c	FUNCTION_97	IF_1
0x400b87e	     0xf8549ffffff	                           jne 0x400b7cd	      6153	eval.c	FUNCTION_97	IF_1
0x400b884	        0x4883c703	                              add rdi, 3	      6156	eval.c	FUNCTION_97	IF_1
0x400b888	          0x48893b	                    mov qword [rbx], rdi	      6156	eval.c	FUNCTION_97	IF_1
0x400b88b	          0x4889df	                            mov rdi, rbx	      6157	eval.c	FUNCTION_97	IF_1	CALL_1
0x400b88e	      0xe800000000	                          call 0x400b893	      6157	eval.c	FUNCTION_97	IF_1	CALL_1
0x400b893	          0x83c003	                              add eax, 3	      6157	eval.c	FUNCTION_97	IF_1	CALL_1
0x400b896	            0xebaf	                           jmp 0x400b847	      6157	eval.c	FUNCTION_97	IF_1	CALL_1
0x400b898	     0xf1f84000000	                   nop dword [rax + rax]	      6157	eval.c	FUNCTION_97	IF_1	CALL_1
0x400b8a0	          0x482b03	                    sub rax, qword [rbx]	      6177	eval.c	FUNCTION_97	IF_3	IF_4
0x400b8a3	          0x4c89ff	                            mov rdi, r15	      6178	eval.c	FUNCTION_97	IF_3	IF_4	CALL_4
0x400b8a6	             0x1c5	                            add ebp, eax	      6177	eval.c	FUNCTION_97	IF_3	IF_4
0x400b8a8	      0xe800000000	                          call 0x400b8ad	      6178	eval.c	FUNCTION_97	IF_3	IF_4	CALL_4
0x400b8ad	          0x488903	                    mov qword [rbx], rax	      6178	eval.c	FUNCTION_97	IF_3	IF_4	CALL_4
0x400b8b0	            0x89e8	                            mov eax, ebp	      6179	eval.c	FUNCTION_97	IF_3	IF_4
0x400b8b2	            0xeb93	                           jmp 0x400b847	      6179	eval.c	FUNCTION_97	IF_3	IF_4
0x400b8b4	         0xf1f4000	                         nop dword [rax]	      6179	eval.c	FUNCTION_97	IF_3	IF_4
0x400b8b8	          0x488b3b	                    mov rdi, qword [rbx]	      6179	eval.c	FUNCTION_97	IF_3	IF_4
0x400b8bb	      0xb902000000	                              mov ecx, 2	      6169	eval.c	FUNCTION_97	CALL_3
0x400b8c0	      0xe923ffffff	                           jmp 0x400b7e8	      6169	eval.c	FUNCTION_97	CALL_3
0x400b8c5	           0xf1f00	                         nop dword [rax]	      6169	eval.c	FUNCTION_97	CALL_3
0x400b8c8	          0x4889df	                            mov rdi, rbx	      6194	eval.c	FUNCTION_97	CALL_8
0x400b8cb	      0xe800000000	                          call 0x400b8d0	      6194	eval.c	FUNCTION_97	CALL_8
0x400b8d0	      0x448d640500	                   lea r12d, [rbp + rax]	      6195	eval.c	FUNCTION_97	IF_6
0x400b8d5	             0x1c5	                            add ebp, eax	      6195	eval.c	FUNCTION_97	IF_6
0x400b8d7	            0x752f	                           jne 0x400b908	      6195	eval.c	FUNCTION_97	IF_6
0x400b8d9	          0x4585ed	                         test r13d, r13d	      6195	eval.c	FUNCTION_97	IF_6
0x400b8dc	            0x742a	                            je 0x400b908	      6195	eval.c	FUNCTION_97	IF_6
0x400b8de	          0x488b1b	                    mov rbx, qword [rbx]	      6196	eval.c	FUNCTION_97	CALL_10
0x400b8e1	      0xba05000000	                              mov edx, 5	      6196	eval.c	FUNCTION_97	CALL_10
0x400b8e6	      0xbe00000000	                              mov esi, 0	      6196	eval.c	FUNCTION_97	CALL_10
0x400b8eb	            0x31ff	                            xor edi, edi	      6196	eval.c	FUNCTION_97	CALL_10
0x400b8ed	      0xe800000000	                          call 0x400b8f2	      6196	eval.c	FUNCTION_97	CALL_10
0x400b8f2	          0x4889de	                            mov rsi, rbx	      6196	eval.c	FUNCTION_97	CALL_10
0x400b8f5	          0x4889c7	                            mov rdi, rax	      6196	eval.c	FUNCTION_97	CALL_10
0x400b8f8	      0xe800000000	                          call 0x400b8fd	      6196	eval.c	FUNCTION_97	CALL_10
0x400b8fd	          0x4489e0	                           mov eax, r12d	      6196	eval.c	FUNCTION_97	CALL_10
0x400b900	      0xe942ffffff	                           jmp 0x400b847	      6196	eval.c	FUNCTION_97	CALL_10
0x400b905	           0xf1f00	                         nop dword [rax]	      6196	eval.c	FUNCTION_97	CALL_10
0x400b908	          0x4489e0	                           mov eax, r12d	      6194	eval.c	FUNCTION_97	CALL_8
0x400b90b	      0xe937ffffff	                           jmp 0x400b847	      6194	eval.c	FUNCTION_97	CALL_8
0x400b910	      0xb8ffffffff	                     mov eax, 0xffffffff	      6188	eval.c	FUNCTION_97	IF_3	IF_5
0x400b915	      0xe92dffffff	                           jmp 0x400b847	      6188	eval.c	FUNCTION_97	IF_3	IF_5
0x400b91a	      0xe800000000	                          call 0x400b91f	      6199	eval.c	FUNCTION_97
set_context_for_expression	functions,0:SWITCH,0:IF,18:DO,0:ELSE,12:WHILE,4:CALL,6:FOR,1	205
0x4000b90	    0x81fadb000000	                           cmp edx, 0xdb	      2610	eval.c	FUNCTION_51	IF_1
0x4000b96	            0x4156	                                push r14	      2605	eval.c	FUNCTION_51
0x4000b98	            0x4155	                                push r13	      2605	eval.c	FUNCTION_51
0x4000b9a	          0x4989fd	                            mov r13, rdi	      2605	eval.c	FUNCTION_51
0x4000b9d	            0x4154	                                push r12	      2605	eval.c	FUNCTION_51
0x4000b9f	              0x55	                                push rbp	      2605	eval.c	FUNCTION_51
0x4000ba0	            0x89d5	                            mov ebp, edx	      2605	eval.c	FUNCTION_51
0x4000ba2	              0x53	                                push rbx	      2605	eval.c	FUNCTION_51
0x4000ba3	          0x4889f3	                            mov rbx, rsi	      2605	eval.c	FUNCTION_51
0x4000ba6	     0xf8456020000	                            je 0x4000e02	      2610	eval.c	FUNCTION_51	IF_1
0x4000bac	            0x31c0	                            xor eax, eax	      2628	eval.c	FUNCTION_51	ELSE_1
0x4000bae	          0x83fa32	                           cmp edx, 0x32	      2628	eval.c	FUNCTION_51	ELSE_1
0x4000bb1	      0xbe00000000	                              mov esi, 0	      2628	eval.c	FUNCTION_51	ELSE_1
0x4000bb6	           0xf95c0	                                setne al	      2628	eval.c	FUNCTION_51	ELSE_1
0x4000bb9	        0x8d440012	            lea eax, [rax + rax + 0x12] 	      2628	eval.c	FUNCTION_51	ELSE_1
0x4000bbd	            0x8907	                    mov dword [rdi], eax	      2627	eval.c	FUNCTION_51	ELSE_1
0x4000bbf	          0x4889df	                            mov rdi, rbx	      2627	eval.c	FUNCTION_51	ELSE_1
0x4000bc2	      0xe800000000	                          call 0x4000bc7	      2627	eval.c	FUNCTION_51	ELSE_1
0x4000bc7	          0x4531e4	                          xor r12d, r12d	      2627	eval.c	FUNCTION_51	ELSE_1
0x4000bca	            0xeb11	                           jmp 0x4000bdd	      2627	eval.c	FUNCTION_51	ELSE_1
0x4000bcc	         0xf1f4000	                         nop dword [rax]	      2627	eval.c	FUNCTION_51	ELSE_1
0x4000bd0	      0xbe00000000	                              mov esi, 0	      2627	eval.c	FUNCTION_51	ELSE_1
0x4000bd5	          0x4889df	                            mov rdi, rbx	      2627	eval.c	FUNCTION_51	ELSE_1
0x4000bd8	      0xe800000000	                          call 0x4000bdd	      2627	eval.c	FUNCTION_51	ELSE_1
0x4000bdd	          0x4885c0	                           test rax, rax	      2629	eval.c	FUNCTION_51	ELSE_1	WHILE_1	CALL_5
0x4000be0	        0x49894508	                mov qword [r13 + 8], rax	      2629	eval.c	FUNCTION_51	ELSE_1	WHILE_1	CALL_5
0x4000be4	     0xf84f5010000	                            je 0x4000ddf	      2629	eval.c	FUNCTION_51	ELSE_1	WHILE_1	CALL_5
0x4000bea	        0x440fb630	                  movzx r14d, byte [rax]	      2632	eval.c	FUNCTION_51	ELSE_1	WHILE_1
0x4000bee	        0x4183fe26	                          cmp r14d, 0x26	      2633	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4
0x4000bf2	            0x747c	                            je 0x4000c70	      2633	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4
0x4000bf4	        0x4183fe24	                          cmp r14d, 0x24	      2650	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_3	IF_8
0x4000bf8	     0xf84b2000000	                            je 0x4000cb0	      2650	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_3	IF_8
0x4000bfe	        0x4183fe3d	                          cmp r14d, 0x3d	      2655	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_4	IF_9
0x4000c02	     0xf8420010000	                            je 0x4000d28	      2655	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_4	IF_9
0x4000c08	        0x4183fe23	                          cmp r14d, 0x23	      2660	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_5	IF_10
0x4000c0c	     0xf842e010000	                            je 0x4000d40	      2660	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_5	IF_10
0x4000c12	        0x4183fe3c	                          cmp r14d, 0x3c	      2666	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_6	IF_11
0x4000c16	          0x4889c7	                            mov rdi, rax	      2666	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_6	IF_11
0x4000c19	     0xf8489010000	                            je 0x4000da8	      2666	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_6	IF_11
0x4000c1f	    0x81fddb000000	                           cmp ebp, 0xdb	      2673	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12
0x4000c25	     0xf8595000000	                           jne 0x4000cc0	      2673	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12
0x4000c2b	          0x4585e4	                         test r12d, r12d	      2673	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12
0x4000c2e	     0xf858c000000	                           jne 0x4000cc0	      2673	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12
0x4000c34	    0x41c745001400	                   mov dword [r13], 0x14	      2705	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_12
0x4000c3c	          0x4889fb	                            mov rbx, rdi	      2705	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_12
0x4000c3f	          0x4531e4	                          xor r12d, r12d	      2705	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_12
0x4000c42	    0x660f1f440000	                    nop word [rax + rax]	      2705	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_12
0x4000c48	          0x803b00	                       cmp byte [rbx], 0	      2707	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_18
0x4000c4b	            0x7483	                            je 0x4000bd0	      2707	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_18
0x4000c4d	           0xf1f00	                         nop dword [rax]	      2707	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_18
0x4000c50	        0x4883c301	                              add rbx, 1	      2708	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_18	WHILE_4
0x4000c54	           0xfb603	                   movzx eax, byte [rbx]	      2708	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_18	WHILE_4
0x4000c57	            0x85c0	                           test eax, eax	      2708	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_18	WHILE_4
0x4000c59	     0xf8471ffffff	                            je 0x4000bd0	      2708	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_18	WHILE_4
0x4000c5f	          0x83f820	                           cmp eax, 0x20	      2708	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_18	WHILE_4
0x4000c62	            0x74ec	                            je 0x4000c50	      2708	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_18	WHILE_4
0x4000c64	          0x83f809	                              cmp eax, 9	      2708	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_18	WHILE_4
0x4000c67	            0x74e7	                            je 0x4000c50	      2708	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_18	WHILE_4
0x4000c69	      0xe962ffffff	                           jmp 0x4000bd0	      2708	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_18	WHILE_4
0x4000c6e	            0x6690	                                     nop	      2708	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_18	WHILE_4
0x4000c70	         0xfb65001	               movzx edx, byte [rax + 1]	      2635	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4
0x4000c74	          0x83fa26	                           cmp edx, 0x26	      2636	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	IF_5
0x4000c77	     0xf8433010000	                            je 0x4000db0	      2636	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	IF_5
0x4000c7d	          0x83fa20	                           cmp edx, 0x20	      2642	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	ELSE_2	IF_6
0x4000c80	     0xf844a010000	                            je 0x4000dd0	      2642	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	ELSE_2	IF_6
0x4000c86	          0x83fa6c	                           cmp edx, 0x6c	      2645	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	ELSE_2	IF_6	IF_7
0x4000c89	    0x41c745000400	                      mov dword [r13], 4	      2644	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	ELSE_2	IF_6
0x4000c91	            0x7408	                            je 0x4000c9b	      2645	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	ELSE_2	IF_6	IF_7
0x4000c93	          0x83fa67	                           cmp edx, 0x67	      2645	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	ELSE_2	IF_6	IF_7
0x4000c96	          0x4889c3	                            mov rbx, rax	      2645	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	ELSE_2	IF_6	IF_7
0x4000c99	            0x75ad	                           jne 0x4000c48	      2645	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	ELSE_2	IF_6	IF_7
0x4000c9b	        0x8078023a	                cmp byte [rax + 2], 0x3a	      2645	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	ELSE_2	IF_6	IF_7
0x4000c9f	          0x4889c3	                            mov rbx, rax	      2645	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	ELSE_2	IF_6	IF_7
0x4000ca2	            0x75a4	                           jne 0x4000c48	      2645	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	ELSE_2	IF_6	IF_7
0x4000ca4	        0x4883c302	                              add rbx, 2	      2646	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	ELSE_2	IF_6	IF_7
0x4000ca8	        0x49895d08	                mov qword [r13 + 8], rbx	      2646	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	ELSE_2	IF_6	IF_7
0x4000cac	            0xeb9a	                           jmp 0x4000c48	      2646	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	ELSE_2	IF_6	IF_7
0x4000cae	            0x6690	                                     nop	      2646	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	ELSE_2	IF_6	IF_7
0x4000cb0	    0x41c745001a00	                   mov dword [r13], 0x1a	      2653	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_3	IF_8
0x4000cb8	          0x4889c3	                            mov rbx, rax	      2653	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_3	IF_8
0x4000cbb	            0xeb8b	                           jmp 0x4000c48	      2653	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_3	IF_8
0x4000cbd	           0xf1f00	                         nop dword [rax]	      2653	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_3	IF_8
0x4000cc0	        0x4183fe22	                          cmp r14d, 0x22	      2675	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13
0x4000cc4	            0x743d	                            je 0x4000d03	      2675	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13
0x4000cc6	        0x4183fe27	                          cmp r14d, 0x27	      2682	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_8	IF_15
0x4000cca	     0xf84a1000000	                            je 0x4000d71	      2682	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_8	IF_15
0x4000cd0	        0x4183fe7c	                          cmp r14d, 0x7c	      2689	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_9	IF_16
0x4000cd4	     0xf8412010000	                            je 0x4000dec	      2689	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_9	IF_16
0x4000cda	    0x41c745001400	                   mov dword [r13], 0x14	      2700	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_11
0x4000ce2	          0x4889fb	                            mov rbx, rdi	      2700	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_11
0x4000ce5	      0xe95effffff	                           jmp 0x4000c48	      2700	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_11
0x4000cea	    0x660f1f440000	                    nop word [rax + rax]	      2700	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_11
0x4000cf0	        0x807f0200	                   cmp byte [rdi + 2], 0	      2678	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13	WHILE_2	IF_14
0x4000cf4	            0x740a	                            je 0x4000d00	      2678	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13	WHILE_2	IF_14
0x4000cf6	        0x488d5f02	                      lea rbx, [rdi + 2]	      2679	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13	WHILE_2	IF_14
0x4000cfa	        0x49895d08	                mov qword [r13 + 8], rbx	      2679	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13	WHILE_2	IF_14
0x4000cfe	            0x6690	                                     nop	      2679	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13	WHILE_2	IF_14
0x4000d00	          0x4889df	                            mov rdi, rbx	      2679	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13	WHILE_2	IF_14
0x4000d03	        0x488d5f01	                      lea rbx, [rdi + 1]	      2677	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13	WHILE_2
0x4000d07	        0x49895d08	                mov qword [r13 + 8], rbx	      2677	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13	WHILE_2
0x4000d0b	         0xfb64701	               movzx eax, byte [rdi + 1]	      2677	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13	WHILE_2
0x4000d0f	          0x83f822	                           cmp eax, 0x22	      2677	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13	WHILE_2
0x4000d12	     0xf847f000000	                            je 0x4000d97	      2677	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13	WHILE_2
0x4000d18	            0x85c0	                           test eax, eax	      2677	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13	WHILE_2
0x4000d1a	            0x747b	                            je 0x4000d97	      2677	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13	WHILE_2
0x4000d1c	          0x83f85c	                           cmp eax, 0x5c	      2678	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13	WHILE_2	IF_14
0x4000d1f	            0x75df	                           jne 0x4000d00	      2678	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13	WHILE_2	IF_14
0x4000d21	            0xebcd	                           jmp 0x4000cf0	      2678	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13	WHILE_2	IF_14
0x4000d23	       0xf1f440000	                   nop dword [rax + rax]	      2678	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	IF_13	WHILE_2	IF_14
0x4000d28	    0x41c745001400	                   mov dword [r13], 0x14	      2658	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_4	IF_9
0x4000d30	          0x4889c3	                            mov rbx, rax	      2658	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_4	IF_9
0x4000d33	    0x41bc01000000	                             mov r12d, 1	      2657	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_4	IF_9
0x4000d39	      0xe90affffff	                           jmp 0x4000c48	      2657	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_4	IF_9
0x4000d3e	            0x6690	                                     nop	      2657	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_4	IF_9
0x4000d40	        0x418b5500	                    mov edx, dword [r13]	      2661	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_5	IF_10
0x4000d44	          0x83fa14	                           cmp edx, 0x14	      2661	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_5	IF_10
0x4000d47	     0xf8492000000	                            je 0x4000ddf	      2661	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_5	IF_10
0x4000d4d	          0x83fa12	                           cmp edx, 0x12	      2667	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_6	IF_11
0x4000d50	          0x4889c7	                            mov rdi, rax	      2667	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_6	IF_11
0x4000d53	     0xf85c6feffff	                           jne 0x4000c1f	      2667	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_6	IF_11
0x4000d59	      0xbe28000000	                           mov esi, 0x28	      2668	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_6	IF_11	CALL_6
0x4000d5e	      0xe800000000	                          call 0x4000d63	      2668	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_6	IF_11	CALL_6
0x4000d63	          0x4885c0	                           test rax, rax	      2668	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_6	IF_11	CALL_6
0x4000d66	            0x7477	                            je 0x4000ddf	      2668	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_6	IF_11	CALL_6
0x4000d68	        0x498b7d08	                mov rdi, qword [r13 + 8]	      2668	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_6	IF_11	CALL_6
0x4000d6c	      0xe9aefeffff	                           jmp 0x4000c1f	      2668	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_6	IF_11	CALL_6
0x4000d71	        0x4883c701	                              add rdi, 1	      2668	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_6	IF_11	CALL_6
0x4000d75	            0xeb0e	                           jmp 0x4000d85	      2668	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_6	IF_11	CALL_6
0x4000d77	    0x660f1f840000	                    nop word [rax + rax]	      2668	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_6	IF_11	CALL_6
0x4000d80	          0x83f827	                           cmp eax, 0x27	      2685	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_8	IF_15	WHILE_3
0x4000d83	            0x7412	                            je 0x4000d97	      2685	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_8	IF_15	WHILE_3
0x4000d85	        0x49897d08	                mov qword [r13 + 8], rdi	      2685	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_8	IF_15	WHILE_3
0x4000d89	           0xfb607	                   movzx eax, byte [rdi]	      2685	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_8	IF_15	WHILE_3
0x4000d8c	          0x4889fb	                            mov rbx, rdi	      2685	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_8	IF_15	WHILE_3
0x4000d8f	        0x4883c701	                              add rdi, 1	      2685	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_8	IF_15	WHILE_3
0x4000d93	            0x85c0	                           test eax, eax	      2685	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_8	IF_15	WHILE_3
0x4000d95	            0x75e9	                           jne 0x4000d80	      2685	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_8	IF_15	WHILE_3
0x4000d97	    0x41c745000000	                      mov dword [r13], 0	      2687	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_8	IF_15
0x4000d9f	      0xe9a4feffff	                           jmp 0x4000c48	      2687	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_8	IF_15
0x4000da4	         0xf1f4000	                         nop dword [rax]	      2687	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_8	IF_15
0x4000da8	        0x418b5500	                    mov edx, dword [r13]	      2687	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_8	IF_15
0x4000dac	            0xeb9f	                           jmp 0x4000d4d	      2687	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_8	IF_15
0x4000dae	            0x6690	                                     nop	      2687	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_8	IF_15
0x4000db0	        0x488d5801	                      lea rbx, [rax + 1]	      2638	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	IF_5
0x4000db4	    0x81fddb000000	                           cmp ebp, 0xdb	      2640	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	IF_5
0x4000dba	        0x49895d08	                mov qword [r13 + 8], rbx	      2638	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	IF_5
0x4000dbe	            0x7518	                           jne 0x4000dd8	      2640	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	IF_5
0x4000dc0	            0x31c0	                            xor eax, eax	      2640	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	IF_5
0x4000dc2	          0x4585e4	                         test r12d, r12d	      2640	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	IF_5
0x4000dc5	            0x7511	                           jne 0x4000dd8	      2640	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	IF_5
0x4000dc7	        0x41894500	                    mov dword [r13], eax	      2639	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	IF_5
0x4000dcb	      0xe978feffff	                           jmp 0x4000c48	      2639	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	IF_5
0x4000dd0	          0x4889c3	                            mov rbx, rax	      2639	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	IF_5
0x4000dd3	      0xe978feffff	                           jmp 0x4000c50	      2639	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	IF_5
0x4000dd8	      0xb814000000	                           mov eax, 0x14	      2640	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	IF_5
0x4000ddd	            0xebe8	                           jmp 0x4000dc7	      2640	eval.c	FUNCTION_51	ELSE_1	WHILE_1	IF_4	IF_5
0x4000ddf	        0x49895d08	                mov qword [r13 + 8], rbx	      2711	eval.c	FUNCTION_51
0x4000de3	              0x5b	                                 pop rbx	      2712	eval.c	FUNCTION_51
0x4000de4	              0x5d	                                 pop rbp	      2712	eval.c	FUNCTION_51
0x4000de5	            0x415c	                                 pop r12	      2712	eval.c	FUNCTION_51
0x4000de7	            0x415d	                                 pop r13	      2712	eval.c	FUNCTION_51
0x4000de9	            0x415e	                                 pop r14	      2712	eval.c	FUNCTION_51
0x4000deb	              0xc3	                                     ret	      2712	eval.c	FUNCTION_51
0x4000dec	        0x807f017c	                cmp byte [rdi + 1], 0x7c	      2691	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_9	IF_16	IF_17
0x4000df0	            0x747f	                            je 0x4000e71	      2691	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_9	IF_16	IF_17
0x4000df2	    0x41c745000100	                      mov dword [r13], 1	      2697	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_9	IF_16	ELSE_10
0x4000dfa	          0x4889fb	                            mov rbx, rdi	      2697	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_9	IF_16	ELSE_10
0x4000dfd	      0xe946feffff	                           jmp 0x4000c48	      2697	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_9	IF_16	ELSE_10
0x4000e02	    0xc7070f000000	                    mov dword [rdi], 0xf	      2612	eval.c	FUNCTION_51	IF_1
0x4000e08	      0xbe00000000	                              mov esi, 0	      2613	eval.c	FUNCTION_51	IF_1	IF_2	CALL_1
0x4000e0d	          0x4889df	                            mov rdi, rbx	      2613	eval.c	FUNCTION_51	IF_1	IF_2	CALL_1
0x4000e10	      0xe800000000	                          call 0x4000e15	      2613	eval.c	FUNCTION_51	IF_1	IF_2	CALL_1
0x4000e15	          0x4885c0	                           test rax, rax	      2613	eval.c	FUNCTION_51	IF_1	IF_2	CALL_1
0x4000e18	     0xf85a9fdffff	                           jne 0x4000bc7	      2613	eval.c	FUNCTION_51	IF_1	IF_2	CALL_1
0x4000e1e	          0x4889df	                            mov rdi, rbx	      2616	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_2
0x4000e21	      0xe800000000	                          call 0x4000e26	      2616	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_2
0x4000e26	          0x4801d8	                            add rax, rbx	      2616	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_2
0x4000e29	          0x4889c5	                            mov rbp, rax	      2616	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_2
0x4000e2c	            0x7316	                           jae 0x4000e44	      2616	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_2
0x4000e2e	            0xebb3	                           jmp 0x4000de3	      2616	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_2
0x4000e30	          0x4801c5	                            add rbp, rax	      2619	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_3
0x4000e33	         0xfb64500	                   movzx eax, byte [rbp]	      2620	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	IF_3	CALL_4
0x4000e37	            0x3c20	                            cmp al, 0x20	      2620	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	IF_3	CALL_4
0x4000e39	            0x74a8	                            je 0x4000de3	      2620	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	IF_3	CALL_4
0x4000e3b	            0x3c09	                               cmp al, 9	      2620	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	IF_3	CALL_4
0x4000e3d	            0x74a4	                            je 0x4000de3	      2620	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	IF_3	CALL_4
0x4000e3f	          0x4839eb	                            cmp rbx, rbp	      2616	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_2
0x4000e42	            0x779f	                            ja 0x4000de3	      2616	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_2
0x4000e44	    0x8b1500000000	            mov edx, dword [0x04000e4a] 	      2619	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_3
0x4000e4a	        0x49896d08	                mov qword [r13 + 8], rbp	      2618	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1
0x4000e4e	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      2618	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1
0x4000e55	            0x85d2	                           test edx, edx	      2619	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_3
0x4000e57	            0x74d7	                            je 0x4000e30	      2619	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_3
0x4000e59	      0x488d740500	                    lea rsi, [rbp + rax]	      2619	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_3
0x4000e5e	          0x4889df	                            mov rdi, rbx	      2619	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_3
0x4000e61	    0xff1500000000	                 call qword [0x04000e67]	      2619	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_3
0x4000e67	          0x83c001	                              add eax, 1	      2619	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_3
0x4000e6a	            0x4898	                                    cdqe	      2619	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_3
0x4000e6c	          0x48f7d8	                                 neg rax	      2619	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_3
0x4000e6f	            0xebbf	                           jmp 0x4000e30	      2619	eval.c	FUNCTION_51	IF_1	IF_2	FOR_1	CALL_3
0x4000e71	        0x4883c701	                              add rdi, 1	      2693	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_9	IF_16	IF_17
0x4000e75	    0x41c745001400	                   mov dword [r13], 0x14	      2694	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_9	IF_16	IF_17
0x4000e7d	        0x49897d08	                mov qword [r13 + 8], rdi	      2693	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_9	IF_16	IF_17
0x4000e81	          0x4889fb	                            mov rbx, rdi	      2693	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_9	IF_16	IF_17
0x4000e84	      0xe9bffdffff	                           jmp 0x4000c48	      2693	eval.c	FUNCTION_51	ELSE_1	WHILE_1	ELSE_7	IF_12	ELSE_9	IF_16	IF_17
eval3	functions,0:SWITCH,0:IF,9:DO,0:ELSE,0:WHILE,1:CALL,7:FOR,0	119
0x400a4d0	            0x4157	                                push r15	      3434	eval.c	FUNCTION_66
0x400a4d2	            0x4156	                                push r14	      3434	eval.c	FUNCTION_66
0x400a4d4	            0x31c9	                            xor ecx, ecx	      3639	eval.c	FUNCTION_68	IF_1	CALL_1
0x400a4d6	            0x4155	                                push r13	      3434	eval.c	FUNCTION_66
0x400a4d8	            0x4154	                                push r12	      3434	eval.c	FUNCTION_66
0x400a4da	          0x4989f6	                            mov r14, rsi	      3434	eval.c	FUNCTION_66
0x400a4dd	              0x55	                                push rbp	      3434	eval.c	FUNCTION_66
0x400a4de	              0x53	                                push rbx	      3434	eval.c	FUNCTION_66
0x400a4df	          0x4889fd	                            mov rbp, rdi	      3434	eval.c	FUNCTION_66
0x400a4e2	          0x4189d7	                           mov r15d, edx	      3434	eval.c	FUNCTION_66
0x400a4e5	        0x4883ec48	                           sub rsp, 0x48	      3434	eval.c	FUNCTION_66
0x400a4e9	    0x64488b042528	                mov rax, qword fs:[0x28]	      3434	eval.c	FUNCTION_66
0x400a4f2	      0x4889442438	             mov qword [rsp + 0x38], rax	      3434	eval.c	FUNCTION_66
0x400a4f7	            0x31c0	                            xor eax, eax	      3434	eval.c	FUNCTION_66
0x400a4f9	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      3438	eval.c	FUNCTION_66
0x400a501	      0xe85a3a0000	                          call sym.eval6	      3639	eval.c	FUNCTION_68	IF_1	CALL_1
0x400a506	            0x85c0	                           test eax, eax	      3639	eval.c	FUNCTION_68	IF_1	CALL_1
0x400a508	     0xf845a010000	                            je 0x400a668	      3639	eval.c	FUNCTION_68	IF_1	CALL_1
0x400a50e	          0x4489fa	                           mov edx, r15d	      3639	eval.c	FUNCTION_68	IF_1	CALL_1
0x400a511	          0x4c89f6	                            mov rsi, r14	      3639	eval.c	FUNCTION_68	IF_1	CALL_1
0x400a514	          0x4889ef	                            mov rdi, rbp	      3639	eval.c	FUNCTION_68	IF_1	CALL_1
0x400a517	      0xe8543e0000	                  call sym.eval5.part.17	      3639	eval.c	FUNCTION_68	IF_1	CALL_1
0x400a51c	            0x85c0	                           test eax, eax	      3523	eval.c	FUNCTION_67	IF_1	CALL_1
0x400a51e	     0xf8444010000	                            je 0x400a668	      3523	eval.c	FUNCTION_67	IF_1	CALL_1
0x400a524	          0x4489fa	                           mov edx, r15d	      3523	eval.c	FUNCTION_67	IF_1	CALL_1
0x400a527	          0x4c89f6	                            mov rsi, r14	      3523	eval.c	FUNCTION_67	IF_1	CALL_1
0x400a52a	          0x4889ef	                            mov rdi, rbp	      3523	eval.c	FUNCTION_67	IF_1	CALL_1
0x400a52d	      0xe88efcffff	                  call sym.eval4.part.13	      3523	eval.c	FUNCTION_67	IF_1	CALL_1
0x400a532	            0x85c0	                           test eax, eax	      3443	eval.c	FUNCTION_66	IF_1	CALL_1
0x400a534	     0xf842e010000	                            je 0x400a668	      3443	eval.c	FUNCTION_66	IF_1	CALL_1
0x400a53a	    0xc744240c0100	                mov dword [rsp + 0xc], 1	      3443	eval.c	FUNCTION_66	IF_1	CALL_1
0x400a542	    0x41bd01000000	                             mov r13d, 1	      3443	eval.c	FUNCTION_66	IF_1	CALL_1
0x400a548	     0xf1f84000000	                   nop dword [rax + rax]	      3443	eval.c	FUNCTION_66	IF_1	CALL_1
0x400a550	        0x488b7d00	                    mov rdi, qword [rbp]	      3451	eval.c	FUNCTION_66	WHILE_1
0x400a554	          0x803f26	                    cmp byte [rdi], 0x26	      3451	eval.c	FUNCTION_66	WHILE_1
0x400a557	     0xf85d0000000	                           jne 0x400a62d	      3451	eval.c	FUNCTION_66	WHILE_1
0x400a55d	        0x807f0126	                cmp byte [rdi + 1], 0x26	      3451	eval.c	FUNCTION_66	WHILE_1
0x400a561	     0xf85c6000000	                           jne 0x400a62d	      3451	eval.c	FUNCTION_66	WHILE_1
0x400a567	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      3453	eval.c	FUNCTION_66	WHILE_1	IF_2
0x400a56b	          0x4585ff	                         test r15d, r15d	      3453	eval.c	FUNCTION_66	WHILE_1	IF_2
0x400a56e	           0xf95c3	                                setne bl	      3453	eval.c	FUNCTION_66	WHILE_1	IF_2
0x400a571	            0x85c9	                           test ecx, ecx	      3453	eval.c	FUNCTION_66	WHILE_1	IF_2
0x400a573	            0x743d	                            je 0x400a5b2	      3453	eval.c	FUNCTION_66	WHILE_1	IF_2
0x400a575	            0x84db	                             test bl, bl	      3453	eval.c	FUNCTION_66	WHILE_1	IF_2
0x400a577	            0x7439	                            je 0x400a5b2	      3453	eval.c	FUNCTION_66	WHILE_1	IF_2
0x400a579	      0x488d74241c	                   lea rsi, [rsp + 0x1c]	      3455	eval.c	FUNCTION_66	WHILE_1	IF_2	IF_3	CALL_2
0x400a57e	          0x4c89f7	                            mov rdi, r14	      3455	eval.c	FUNCTION_66	WHILE_1	IF_2	IF_3	CALL_2
0x400a581	      0xe800000000	                          call 0x400a586	      3455	eval.c	FUNCTION_66	WHILE_1	IF_2	IF_3	CALL_2
0x400a586	          0x4c89f7	                            mov rdi, r14	      3457	eval.c	FUNCTION_66	WHILE_1	IF_2	CALL_3
0x400a589	          0x4885c0	                           test rax, rax	      3456	eval.c	FUNCTION_66	WHILE_1	IF_2	IF_3
0x400a58c	      0xb800000000	                              mov eax, 0	      3456	eval.c	FUNCTION_66	WHILE_1	IF_2	IF_3
0x400a591	        0x4c0f44e8	                          cmove r13, rax	      3456	eval.c	FUNCTION_66	WHILE_1	IF_2	IF_3
0x400a595	      0xe800000000	                          call 0x400a59a	      3457	eval.c	FUNCTION_66	WHILE_1	IF_2	CALL_3
0x400a59a	        0x8b54241c	            mov edx, dword [rsp + 0x1c] 	      3458	eval.c	FUNCTION_66	WHILE_1	IF_2	IF_4
0x400a59e	            0x85d2	                           test edx, edx	      3458	eval.c	FUNCTION_66	WHILE_1	IF_2	IF_4
0x400a5a0	     0xf85c2000000	                           jne 0x400a668	      3458	eval.c	FUNCTION_66	WHILE_1	IF_2	IF_4
0x400a5a6	        0x488b7d00	                    mov rdi, qword [rbp]	      3458	eval.c	FUNCTION_66	WHILE_1	IF_2	IF_4
0x400a5aa	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      3460	eval.c	FUNCTION_66	WHILE_1	IF_2
0x400a5b2	        0x4883c702	                              add rdi, 2	      3466	eval.c	FUNCTION_66	WHILE_1	CALL_4
0x400a5b6	          0x4421eb	                           and ebx, r13d	      3467	eval.c	FUNCTION_66	WHILE_1	IF_5	CALL_5
0x400a5b9	      0xe800000000	                          call 0x400a5be	      3466	eval.c	FUNCTION_66	WHILE_1	CALL_4
0x400a5be	        0x440fb6e3	                          movzx r12d, bl	      3467	eval.c	FUNCTION_66	WHILE_1	IF_5	CALL_5
0x400a5c2	      0x488d742420	                   lea rsi, [rsp + 0x20]	      3639	eval.c	FUNCTION_68	IF_1	CALL_1
0x400a5c7	            0x31c9	                            xor ecx, ecx	      3639	eval.c	FUNCTION_68	IF_1	CALL_1
0x400a5c9	        0x48894500	                    mov qword [rbp], rax	      3466	eval.c	FUNCTION_66	WHILE_1	CALL_4
0x400a5cd	          0x4489e2	                           mov edx, r12d	      3639	eval.c	FUNCTION_68	IF_1	CALL_1
0x400a5d0	          0x4889ef	                            mov rdi, rbp	      3639	eval.c	FUNCTION_68	IF_1	CALL_1
0x400a5d3	      0xe888390000	                          call sym.eval6	      3639	eval.c	FUNCTION_68	IF_1	CALL_1
0x400a5d8	            0x85c0	                           test eax, eax	      3639	eval.c	FUNCTION_68	IF_1	CALL_1
0x400a5da	     0xf8488000000	                            je 0x400a668	      3639	eval.c	FUNCTION_68	IF_1	CALL_1
0x400a5e0	      0x488d742420	                   lea rsi, [rsp + 0x20]	      3639	eval.c	FUNCTION_68	IF_1	CALL_1
0x400a5e5	          0x4489e2	                           mov edx, r12d	      3639	eval.c	FUNCTION_68	IF_1	CALL_1
0x400a5e8	          0x4889ef	                            mov rdi, rbp	      3639	eval.c	FUNCTION_68	IF_1	CALL_1
0x400a5eb	      0xe8803d0000	                  call sym.eval5.part.17	      3639	eval.c	FUNCTION_68	IF_1	CALL_1
0x400a5f0	            0x85c0	                           test eax, eax	      3523	eval.c	FUNCTION_67	IF_1	CALL_1
0x400a5f2	            0x7474	                            je 0x400a668	      3523	eval.c	FUNCTION_67	IF_1	CALL_1
0x400a5f4	      0x488d742420	                   lea rsi, [rsp + 0x20]	      3523	eval.c	FUNCTION_67	IF_1	CALL_1
0x400a5f9	          0x4489e2	                           mov edx, r12d	      3523	eval.c	FUNCTION_67	IF_1	CALL_1
0x400a5fc	          0x4889ef	                            mov rdi, rbp	      3523	eval.c	FUNCTION_67	IF_1	CALL_1
0x400a5ff	      0xe8bcfbffff	                  call sym.eval4.part.13	      3523	eval.c	FUNCTION_67	IF_1	CALL_1
0x400a604	            0x85c0	                           test eax, eax	      3467	eval.c	FUNCTION_66	WHILE_1	IF_5	CALL_5
0x400a606	            0x7460	                            je 0x400a668	      3467	eval.c	FUNCTION_66	WHILE_1	IF_5	CALL_5
0x400a608	            0x84db	                             test bl, bl	      3473	eval.c	FUNCTION_66	WHILE_1	IF_6
0x400a60a	            0x752c	                           jne 0x400a638	      3473	eval.c	FUNCTION_66	WHILE_1	IF_6
0x400a60c	          0x4585ff	                         test r15d, r15d	      3481	eval.c	FUNCTION_66	WHILE_1	IF_9
0x400a60f	     0xf843bffffff	                            je 0x400a550	      3481	eval.c	FUNCTION_66	WHILE_1	IF_9
0x400a615	        0x4d896e08	                mov qword [r14 + 8], r13	      3484	eval.c	FUNCTION_66	WHILE_1	IF_9
0x400a619	        0x488b7d00	                    mov rdi, qword [rbp]	      3451	eval.c	FUNCTION_66	WHILE_1
0x400a61d	    0x41c706010000	                      mov dword [r14], 1	      3483	eval.c	FUNCTION_66	WHILE_1	IF_9
0x400a624	          0x803f26	                    cmp byte [rdi], 0x26	      3451	eval.c	FUNCTION_66	WHILE_1
0x400a627	     0xf8430ffffff	                            je 0x400a55d	      3451	eval.c	FUNCTION_66	WHILE_1
0x400a62d	      0xb801000000	                              mov eax, 1	      3488	eval.c	FUNCTION_66
0x400a632	            0xeb36	                           jmp 0x400a66a	      3488	eval.c	FUNCTION_66
0x400a634	         0xf1f4000	                         nop dword [rax]	      3488	eval.c	FUNCTION_66
0x400a638	      0x488d74241c	                   lea rsi, [rsp + 0x1c]	      3475	eval.c	FUNCTION_66	WHILE_1	IF_6	IF_7	CALL_6
0x400a63d	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      3475	eval.c	FUNCTION_66	WHILE_1	IF_6	IF_7	CALL_6
0x400a642	          0x4531ed	                          xor r13d, r13d	      3476	eval.c	FUNCTION_66	WHILE_1	IF_6	IF_7
0x400a645	      0xe800000000	                          call 0x400a64a	      3475	eval.c	FUNCTION_66	WHILE_1	IF_6	IF_7	CALL_6
0x400a64a	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      3477	eval.c	FUNCTION_66	WHILE_1	IF_6	CALL_7
0x400a64f	          0x4885c0	                           test rax, rax	      3476	eval.c	FUNCTION_66	WHILE_1	IF_6	IF_7
0x400a652	        0x410f95c5	                              setne r13b	      3476	eval.c	FUNCTION_66	WHILE_1	IF_6	IF_7
0x400a656	      0xe800000000	                          call 0x400a65b	      3477	eval.c	FUNCTION_66	WHILE_1	IF_6	CALL_7
0x400a65b	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      3478	eval.c	FUNCTION_66	WHILE_1	IF_6	IF_8
0x400a65f	            0x85c0	                           test eax, eax	      3478	eval.c	FUNCTION_66	WHILE_1	IF_6	IF_8
0x400a661	            0x74b2	                            je 0x400a615	      3478	eval.c	FUNCTION_66	WHILE_1	IF_6	IF_8
0x400a663	       0xf1f440000	                   nop dword [rax + rax]	      3478	eval.c	FUNCTION_66	WHILE_1	IF_6	IF_8
0x400a668	            0x31c0	                            xor eax, eax	      3444	eval.c	FUNCTION_66	IF_1
0x400a66a	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      3489	eval.c	FUNCTION_66
0x400a66f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3489	eval.c	FUNCTION_66
0x400a678	            0x750f	                           jne 0x400a689	      3489	eval.c	FUNCTION_66
0x400a67a	        0x4883c448	                           add rsp, 0x48	      3489	eval.c	FUNCTION_66
0x400a67e	              0x5b	                                 pop rbx	      3489	eval.c	FUNCTION_66
0x400a67f	              0x5d	                                 pop rbp	      3489	eval.c	FUNCTION_66
0x400a680	            0x415c	                                 pop r12	      3489	eval.c	FUNCTION_66
0x400a682	            0x415d	                                 pop r13	      3489	eval.c	FUNCTION_66
0x400a684	            0x415e	                                 pop r14	      3489	eval.c	FUNCTION_66
0x400a686	            0x415f	                                 pop r15	      3489	eval.c	FUNCTION_66
0x400a688	              0xc3	                                     ret	      3489	eval.c	FUNCTION_66
0x400a689	      0xe800000000	                          call 0x400a68e	      3489	eval.c	FUNCTION_66
assert_inrange	functions,0:SWITCH,0:IF,3:DO,0:ELSE,1:WHILE,0:CALL,11:FOR,0	81
0x4008fb0	            0x4154	                                push r12	      8932	eval.c	FUNCTION_173
0x4008fb2	              0x55	                                push rbp	      8932	eval.c	FUNCTION_173
0x4008fb3	              0x53	                                push rbx	      8932	eval.c	FUNCTION_173
0x4008fb4	          0x4889fb	                            mov rbx, rdi	      8932	eval.c	FUNCTION_173
0x4008fb7	    0x4881ec600100	                          sub rsp, 0x160	      8932	eval.c	FUNCTION_173
0x4008fbe	      0x488d742414	                   lea rsi, [rsp + 0x14]	      8935	eval.c	FUNCTION_173	CALL_1
0x4008fc3	    0xc74424140000	               mov dword [rsp + 0x14], 0	      8934	eval.c	FUNCTION_173
0x4008fcb	    0x64488b042528	                mov rax, qword fs:[0x28]	      8932	eval.c	FUNCTION_173
0x4008fd4	    0x488984245801	            mov qword [rsp + 0x158], rax	      8932	eval.c	FUNCTION_173
0x4008fdc	            0x31c0	                            xor eax, eax	      8932	eval.c	FUNCTION_173
0x4008fde	      0xe800000000	                          call 0x4008fe3	      8935	eval.c	FUNCTION_173	CALL_1
0x4008fe3	        0x488d7b10	                   lea rdi, [rbx + 0x10]	      8936	eval.c	FUNCTION_173	CALL_2
0x4008fe7	      0x488d742414	                   lea rsi, [rsp + 0x14]	      8936	eval.c	FUNCTION_173	CALL_2
0x4008fec	          0x4889c5	                            mov rbp, rax	      8935	eval.c	FUNCTION_173	CALL_1
0x4008fef	      0xe800000000	                          call 0x4008ff4	      8936	eval.c	FUNCTION_173	CALL_2
0x4008ff4	        0x488d7b20	                   lea rdi, [rbx + 0x20]	      8937	eval.c	FUNCTION_173	CALL_3
0x4008ff8	      0x488d742414	                   lea rsi, [rsp + 0x14]	      8937	eval.c	FUNCTION_173	CALL_3
0x4008ffd	          0x4989c4	                            mov r12, rax	      8936	eval.c	FUNCTION_173	CALL_2
0x4009000	      0xe800000000	                          call 0x4009005	      8937	eval.c	FUNCTION_173	CALL_3
0x4009005	        0x8b542414	            mov edx, dword [rsp + 0x14] 	      8942	eval.c	FUNCTION_173	IF_1
0x4009009	            0x85d2	                           test edx, edx	      8942	eval.c	FUNCTION_173	IF_1
0x400900b	     0xf859f000000	                           jne 0x40090b0	      8942	eval.c	FUNCTION_173	IF_1
0x4009011	          0x4839c5	                            cmp rbp, rax	      8944	eval.c	FUNCTION_173	IF_2
0x4009014	            0x7f2a	                            jg 0x4009040	      8944	eval.c	FUNCTION_173	IF_2
0x4009016	          0x4939c4	                            cmp r12, rax	      8944	eval.c	FUNCTION_173	IF_2
0x4009019	            0x7c25	                            jl 0x4009040	      8944	eval.c	FUNCTION_173	IF_2
0x400901b	    0x488b8c245801	           mov rcx, qword [rsp + 0x158] 	      8963	eval.c	FUNCTION_173
0x4009023	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      8963	eval.c	FUNCTION_173
0x400902c	            0x89d0	                            mov eax, edx	      8963	eval.c	FUNCTION_173
0x400902e	     0xf85cb000000	                           jne 0x40090ff	      8963	eval.c	FUNCTION_173
0x4009034	    0x4881c4600100	                          add rsp, 0x160	      8963	eval.c	FUNCTION_173
0x400903b	              0x5b	                                 pop rbx	      8963	eval.c	FUNCTION_173
0x400903c	              0x5d	                                 pop rbp	      8963	eval.c	FUNCTION_173
0x400903d	            0x415c	                                 pop r12	      8963	eval.c	FUNCTION_173
0x400903f	              0xc3	                                     ret	      8963	eval.c	FUNCTION_173
0x4009040	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      8946	eval.c	FUNCTION_173	IF_2	CALL_4
0x4009045	      0x4889442408	                mov qword [rsp + 8], rax	      8946	eval.c	FUNCTION_173	IF_2	CALL_4
0x400904a	      0xe800000000	                          call 0x400904f	      8946	eval.c	FUNCTION_173	IF_2	CALL_4
0x400904f	          0x8b4b30	            mov ecx, dword [rbx + 0x30] 	      8947	eval.c	FUNCTION_173	IF_2	IF_3
0x4009052	      0x488b442408	                mov rax, qword [rsp + 8]	      8947	eval.c	FUNCTION_173	IF_2	IF_3
0x4009057	            0x85c9	                           test ecx, ecx	      8947	eval.c	FUNCTION_173	IF_2	IF_3
0x4009059	            0x7565	                           jne 0x40090c0	      8947	eval.c	FUNCTION_173	IF_2	IF_3
0x400905b	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	      8954	eval.c	FUNCTION_173	IF_2	ELSE_1	CALL_8
0x4009063	          0x4989c1	                             mov r9, rax	      8954	eval.c	FUNCTION_173	IF_2	ELSE_1	CALL_8
0x4009066	      0xbec8000000	                           mov esi, 0xc8	      8954	eval.c	FUNCTION_173	IF_2	ELSE_1	CALL_8
0x400906b	          0x4d89e0	                             mov r8, r12	      8954	eval.c	FUNCTION_173	IF_2	ELSE_1	CALL_8
0x400906e	          0x4889e9	                            mov rcx, rbp	      8954	eval.c	FUNCTION_173	IF_2	ELSE_1	CALL_8
0x4009071	      0xba00000000	                              mov edx, 0	      8954	eval.c	FUNCTION_173	IF_2	ELSE_1	CALL_8
0x4009076	            0x31c0	                            xor eax, eax	      8954	eval.c	FUNCTION_173	IF_2	ELSE_1	CALL_8
0x4009078	      0xe800000000	                          call 0x400907d	      8954	eval.c	FUNCTION_173	IF_2	ELSE_1	CALL_8
0x400907d	    0x488db4249000	                   lea rsi, [rsp + 0x90]	      8956	eval.c	FUNCTION_173	IF_2	ELSE_1	CALL_9
0x4009085	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      8956	eval.c	FUNCTION_173	IF_2	ELSE_1	CALL_9
0x400908a	      0xe800000000	                          call 0x400908f	      8956	eval.c	FUNCTION_173	IF_2	ELSE_1	CALL_9
0x400908f	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      8958	eval.c	FUNCTION_173	IF_2	CALL_10
0x4009094	      0xe800000000	                          call 0x4009099	      8958	eval.c	FUNCTION_173	IF_2	CALL_10
0x4009099	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      8959	eval.c	FUNCTION_173	IF_2	CALL_11
0x400909e	      0xe800000000	                          call 0x40090a3	      8959	eval.c	FUNCTION_173	IF_2	CALL_11
0x40090a3	      0xba01000000	                              mov edx, 1	      8960	eval.c	FUNCTION_173	IF_2
0x40090a8	      0xe96effffff	                           jmp 0x400901b	      8960	eval.c	FUNCTION_173	IF_2
0x40090ad	           0xf1f00	                         nop dword [rax]	      8960	eval.c	FUNCTION_173	IF_2
0x40090b0	            0x31d2	                            xor edx, edx	      8943	eval.c	FUNCTION_173	IF_1
0x40090b2	      0xe964ffffff	                           jmp 0x400901b	      8943	eval.c	FUNCTION_173	IF_1
0x40090b7	    0x660f1f840000	                    nop word [rax + rax]	      8943	eval.c	FUNCTION_173	IF_1
0x40090c0	        0x4883ec08	                              sub rsp, 8	      5759	eval.c	FUNCTION_89	CALL_1
0x40090c4	        0x488d7b30	                   lea rdi, [rbx + 0x30]	      5759	eval.c	FUNCTION_89	CALL_1
0x40090c8	    0x41b901000000	                              mov r9d, 1	      5759	eval.c	FUNCTION_89	CALL_1
0x40090ce	            0x6a00	                                  push 0	      5759	eval.c	FUNCTION_89	CALL_1
0x40090d0	          0x4531c0	                            xor r8d, r8d	      5759	eval.c	FUNCTION_89	CALL_1
0x40090d3	            0x31c9	                            xor ecx, ecx	      5759	eval.c	FUNCTION_89	CALL_1
0x40090d5	      0x488d542450	                   lea rdx, [rsp + 0x50]	      5759	eval.c	FUNCTION_89	CALL_1
0x40090da	      0x488d742428	                   lea rsi, [rsp + 0x28]	      5759	eval.c	FUNCTION_89	CALL_1
0x40090df	      0xe800000000	                          call 0x40090e4	      5759	eval.c	FUNCTION_89	CALL_1
0x40090e4	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      8949	eval.c	FUNCTION_173	IF_2	IF_3	CALL_6
0x40090e9	          0x4889c6	                            mov rsi, rax	      8949	eval.c	FUNCTION_173	IF_2	IF_3	CALL_6
0x40090ec	      0xe800000000	                          call 0x40090f1	      8949	eval.c	FUNCTION_173	IF_2	IF_3	CALL_6
0x40090f1	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      8950	eval.c	FUNCTION_173	IF_2	IF_3	CALL_7
0x40090f6	      0xe800000000	                          call 0x40090fb	      8950	eval.c	FUNCTION_173	IF_2	IF_3	CALL_7
0x40090fb	              0x58	                                 pop rax	      8950	eval.c	FUNCTION_173	IF_2	IF_3	CALL_7
0x40090fc	              0x5a	                                 pop rdx	      8950	eval.c	FUNCTION_173	IF_2	IF_3	CALL_7
0x40090fd	            0xeb90	                           jmp 0x400908f	      8950	eval.c	FUNCTION_173	IF_2	IF_3	CALL_7
0x40090ff	      0xe800000000	                          call 0x4009104	      8963	eval.c	FUNCTION_173
get_tv_float	functions,0:SWITCH,1:IF,0:DO,0:ELSE,0:WHILE,0:CALL,15:FOR,0	52
0x4003d80	        0x4883ec08	                              sub rsp, 8	      7023	eval.c	ELSE_1	FUNCTION_126
0x4003d84	          0x833f0a	                    cmp dword [rdi], 0xa	      7024	eval.c	ELSE_1	FUNCTION_126	SWITCH_1
0x4003d87	        0x660fefc0	                         pxor xmm0, xmm0	      7060	eval.c	ELSE_1	FUNCTION_126
0x4003d8b	            0x7736	                            ja 0x4003dc3	      7024	eval.c	ELSE_1	FUNCTION_126	SWITCH_1
0x4003d8d	            0x8b07	                    mov eax, dword [rdi]	      7024	eval.c	ELSE_1	FUNCTION_126	SWITCH_1
0x4003d8f	    0xff24c5000000	                       jmp qword [rax*8]	      7024	eval.c	ELSE_1	FUNCTION_126	SWITCH_1
0x4003d96	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      7024	eval.c	ELSE_1	FUNCTION_126	SWITCH_1
0x4003da0	      0xba05000000	                              mov edx, 5	      7048	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_12
0x4003da5	      0xbe00000000	                              mov esi, 0	      7048	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_12
0x4003daa	    0x660f1f440000	                    nop word [rax + rax]	      7048	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_12
0x4003db0	            0x31ff	                            xor edi, edi	      7053	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_14
0x4003db2	      0xe800000000	                          call 0x4003db7	      7053	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_14
0x4003db7	          0x4889c7	                            mov rdi, rax	      7053	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_14
0x4003dba	      0xe800000000	                          call 0x4003dbf	      7053	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_14
0x4003dbf	        0x660fefc0	                         pxor xmm0, xmm0	      7060	eval.c	ELSE_1	FUNCTION_126
0x4003dc3	        0x4883c408	                              add rsp, 8	      7061	eval.c	ELSE_1	FUNCTION_126
0x4003dc7	              0xc3	                                     ret	      7061	eval.c	ELSE_1	FUNCTION_126
0x4003dc8	     0xf1f84000000	                   nop dword [rax + rax]	      7061	eval.c	ELSE_1	FUNCTION_126
0x4003dd0	      0xba05000000	                              mov edx, 5	      7053	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_14
0x4003dd5	      0xbe00000000	                              mov esi, 0	      7053	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_14
0x4003dda	            0xebd4	                           jmp 0x4003db0	      7053	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_14
0x4003ddc	         0xf1f4000	                         nop dword [rax]	      7053	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_14
0x4003de0	      0xbf00000000	                              mov edi, 0	      7057	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_15
0x4003de5	      0xe800000000	                          call 0x4003dea	      7057	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_15
0x4003dea	        0x660fefc0	                         pxor xmm0, xmm0	      7060	eval.c	ELSE_1	FUNCTION_126
0x4003dee	            0xebd3	                           jmp 0x4003dc3	      7058	eval.c	ELSE_1	FUNCTION_126	SWITCH_1
0x4003df0	        0x660fefc0	                         pxor xmm0, xmm0	      7027	eval.c	ELSE_1	FUNCTION_126	SWITCH_1
0x4003df4	    0xf2480f2a4708	          cvtsi2sd xmm0, qword [rdi + 8]	      7027	eval.c	ELSE_1	FUNCTION_126	SWITCH_1
0x4003dfa	            0xebc7	                           jmp 0x4003dc3	      7027	eval.c	ELSE_1	FUNCTION_126	SWITCH_1
0x4003dfc	         0xf1f4000	                         nop dword [rax]	      7027	eval.c	ELSE_1	FUNCTION_126	SWITCH_1
0x4003e00	      0xba05000000	                              mov edx, 5	      7035	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_4
0x4003e05	      0xbe00000000	                              mov esi, 0	      7035	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_4
0x4003e0a	            0xeba4	                           jmp 0x4003db0	      7035	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_4
0x4003e0c	         0xf1f4000	                         nop dword [rax]	      7035	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_4
0x4003e10	      0xba05000000	                              mov edx, 5	      7032	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_2
0x4003e15	      0xbe00000000	                              mov esi, 0	      7032	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_2
0x4003e1a	            0xeb94	                           jmp 0x4003db0	      7032	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_2
0x4003e1c	         0xf1f4000	                         nop dword [rax]	      7032	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_2
0x4003e20	      0xba05000000	                              mov edx, 5	      7038	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_6
0x4003e25	      0xbe00000000	                              mov esi, 0	      7038	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_6
0x4003e2a	            0xeb84	                           jmp 0x4003db0	      7038	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_6
0x4003e2c	         0xf1f4000	                         nop dword [rax]	      7038	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_6
0x4003e30	      0xba05000000	                              mov edx, 5	      7041	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_8
0x4003e35	      0xbe00000000	                              mov esi, 0	      7041	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_8
0x4003e3a	      0xe971ffffff	                           jmp 0x4003db0	      7041	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_8
0x4003e3f	              0x90	                                     nop	      7041	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_8
0x4003e40	      0xf20f104708	            movsd xmm0, qword [rdi + 8] 	      7029	eval.c	ELSE_1	FUNCTION_126	SWITCH_1
0x4003e45	      0xe979ffffff	                           jmp 0x4003dc3	      7029	eval.c	ELSE_1	FUNCTION_126	SWITCH_1
0x4003e4a	    0x660f1f440000	                    nop word [rax + rax]	      7029	eval.c	ELSE_1	FUNCTION_126	SWITCH_1
0x4003e50	      0xba05000000	                              mov edx, 5	      7044	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_10
0x4003e55	      0xbe00000000	                              mov esi, 0	      7044	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_10
0x4003e5a	      0xe951ffffff	                           jmp 0x4003db0	      7044	eval.c	ELSE_1	FUNCTION_126	SWITCH_1	CALL_10
eval_spell_expr	functions,0:SWITCH,0:IF,4:DO,0:ELSE,1:WHILE,0:CALL,5:FOR,0	76
0x400ab20	            0x4156	                                push r14	       943	eval.c	FUNCTION_23
0x400ab22	            0x4155	                                push r13	       943	eval.c	FUNCTION_23
0x400ab24	              0x55	                                push rbp	       943	eval.c	FUNCTION_23
0x400ab25	              0x53	                                push rbx	       943	eval.c	FUNCTION_23
0x400ab26	          0x4889fd	                            mov rbp, rdi	       943	eval.c	FUNCTION_23
0x400ab29	          0x4889f7	                            mov rdi, rsi	       947	eval.c	FUNCTION_23	CALL_1
0x400ab2c	        0x4883ec38	                           sub rsp, 0x38	       943	eval.c	FUNCTION_23
0x400ab30	    0x64488b042528	                mov rax, qword fs:[0x28]	       943	eval.c	FUNCTION_23
0x400ab39	      0x4889442428	             mov qword [rsp + 0x28], rax	       943	eval.c	FUNCTION_23
0x400ab3e	            0x31c0	                            xor eax, eax	       943	eval.c	FUNCTION_23
0x400ab40	      0xe800000000	                          call 0x400ab45	       947	eval.c	FUNCTION_23	CALL_1
0x400ab45	    0x8b1d00000000	            mov ebx, dword [0x0400ab4b] 	       911	eval.c	FUNCTION_21	IF_1
0x400ab4b	      0x4889442408	                mov qword [rsp + 8], rax	       947	eval.c	FUNCTION_23	CALL_1
0x400ab50	    0x4c8b2d000000	            mov r13, qword [0x0400ab57] 	       910	eval.c	FUNCTION_21
0x400ab57	    0x4c8b35000000	            mov r14, qword [0x0400ab5e] 	       910	eval.c	FUNCTION_21
0x400ab5e	            0x85db	                           test ebx, ebx	       911	eval.c	FUNCTION_21	IF_1
0x400ab60	     0xf84ca000000	                            je 0x400ac30	       911	eval.c	FUNCTION_21	IF_1
0x400ab66	    0x48833d000000	               cmp qword [0x0400ab6e], 0	       953	eval.c	FUNCTION_23	IF_1
0x400ab6e	    0xc70500000000	               mov dword [0x0400ab78], 2	       951	eval.c	FUNCTION_23
0x400ab78	    0x48892d000000	            mov qword [0x0400ab7f], rbp 	       952	eval.c	FUNCTION_23
0x400ab7f	            0x7507	                           jne 0x400ab88	       953	eval.c	FUNCTION_23	IF_1
0x400ab81	    0x830500000000	               add dword [0x0400ab88], 1	       954	eval.c	FUNCTION_23	IF_1
0x400ab88	      0x488d742410	                   lea rsi, [rsp + 0x10]	       956	eval.c	FUNCTION_23	IF_2	CALL_3
0x400ab8d	      0x488d7c2408	                      lea rdi, [rsp + 8]	       956	eval.c	FUNCTION_23	IF_2	CALL_3
0x400ab92	      0xba01000000	                              mov edx, 1	       956	eval.c	FUNCTION_23	IF_2	CALL_3
0x400ab97	            0x31ed	                            xor ebp, ebp	       946	eval.c	FUNCTION_23
0x400ab99	      0xe800000000	                          call 0x400ab9e	       956	eval.c	FUNCTION_23	IF_2	CALL_3
0x400ab9e	          0x83f801	                              cmp eax, 1	       956	eval.c	FUNCTION_23	IF_2	CALL_3
0x400aba1	            0x7510	                           jne 0x400abb3	       956	eval.c	FUNCTION_23	IF_2	CALL_3
0x400aba3	      0x837c241005	               cmp dword [rsp + 0x10], 5	       958	eval.c	FUNCTION_23	IF_2	IF_3
0x400aba8	      0x488b6c2418	            mov rbp, qword [rsp + 0x18] 	       961	eval.c	FUNCTION_23	IF_2	ELSE_1
0x400abad	     0xf85a5000000	                           jne 0x400ac58	       958	eval.c	FUNCTION_23	IF_2	IF_3
0x400abb3	    0x48833d000000	               cmp qword [0x0400abbb], 0	       964	eval.c	FUNCTION_23	IF_4
0x400abbb	            0x7507	                           jne 0x400abc4	       964	eval.c	FUNCTION_23	IF_4
0x400abbd	    0x832d00000000	               sub dword [0x0400abc4], 1	       965	eval.c	FUNCTION_23	IF_4
0x400abc4	            0x85db	                           test ebx, ebx	       925	eval.c	FUNCTION_22	IF_1
0x400abc6	    0x4c892d000000	            mov qword [0x0400abcd], r13 	       924	eval.c	FUNCTION_22
0x400abcd	    0x4c8935000000	            mov qword [0x0400abd4], r14 	       924	eval.c	FUNCTION_22
0x400abd4	            0x742a	                            je 0x400ac00	       925	eval.c	FUNCTION_22	IF_1
0x400abd6	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       969	eval.c	FUNCTION_23
0x400abdb	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       969	eval.c	FUNCTION_23
0x400abe4	          0x4889e8	                            mov rax, rbp	       969	eval.c	FUNCTION_23
0x400abe7	     0xf857c000000	                           jne 0x400ac69	       969	eval.c	FUNCTION_23
0x400abed	        0x4883c438	                           add rsp, 0x38	       969	eval.c	FUNCTION_23
0x400abf1	              0x5b	                                 pop rbx	       969	eval.c	FUNCTION_23
0x400abf2	              0x5d	                                 pop rbp	       969	eval.c	FUNCTION_23
0x400abf3	            0x415d	                                 pop r13	       969	eval.c	FUNCTION_23
0x400abf5	            0x415e	                                 pop r14	       969	eval.c	FUNCTION_23
0x400abf7	              0xc3	                                     ret	       969	eval.c	FUNCTION_23
0x400abf8	     0xf1f84000000	                   nop dword [rax + rax]	       969	eval.c	FUNCTION_23
0x400ac00	      0xbe00000000	                              mov esi, 0	       927	eval.c	FUNCTION_22	IF_1	CALL_1
0x400ac05	      0xbf00000000	                              mov edi, 0	       927	eval.c	FUNCTION_22	IF_1	CALL_1
0x400ac0a	      0xe800000000	                          call 0x400ac0f	       927	eval.c	FUNCTION_22	IF_1	CALL_1
0x400ac0f	        0x488b5008	                mov rdx, qword [rax + 8]	       928	eval.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x400ac13	          0x4885d2	                           test rdx, rdx	       928	eval.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x400ac16	            0x7430	                            je 0x400ac48	       928	eval.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x400ac18	    0x4881fa000000	                              cmp rdx, 0	       928	eval.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x400ac1f	            0x7427	                            je 0x400ac48	       928	eval.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x400ac21	          0x4889c6	                            mov rsi, rax	       931	eval.c	FUNCTION_22	IF_1	CALL_4
0x400ac24	      0xbf00000000	                              mov edi, 0	       931	eval.c	FUNCTION_22	IF_1	CALL_4
0x400ac29	      0xe800000000	                          call 0x400ac2e	       931	eval.c	FUNCTION_22	IF_1	CALL_4
0x400ac2e	            0xeba6	                           jmp 0x400abd6	       931	eval.c	FUNCTION_22	IF_1	CALL_4
0x400ac30	      0xbe00000000	                              mov esi, 0	       912	eval.c	FUNCTION_21	CALL_1
0x400ac35	      0xbf00000000	                              mov edi, 0	       912	eval.c	FUNCTION_21	CALL_1
0x400ac3a	      0xe800000000	                          call 0x400ac3f	       912	eval.c	FUNCTION_21	CALL_1
0x400ac3f	      0xe922ffffff	                           jmp 0x400ab66	       912	eval.c	FUNCTION_21	CALL_1
0x400ac44	         0xf1f4000	                         nop dword [rax]	       912	eval.c	FUNCTION_21	CALL_1
0x400ac48	      0xbf00000000	                              mov edi, 0	       929	eval.c	FUNCTION_22	IF_1	CALL_3
0x400ac4d	      0xe800000000	                          call 0x400ac52	       929	eval.c	FUNCTION_22	IF_1	CALL_3
0x400ac52	            0xeb82	                           jmp 0x400abd6	       929	eval.c	FUNCTION_22	IF_1	CALL_3
0x400ac54	         0xf1f4000	                         nop dword [rax]	       929	eval.c	FUNCTION_22	IF_1	CALL_3
0x400ac58	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       959	eval.c	FUNCTION_23	IF_2	CALL_4
0x400ac5d	            0x31ed	                            xor ebp, ebp	       946	eval.c	FUNCTION_23
0x400ac5f	      0xe800000000	                          call 0x400ac64	       959	eval.c	FUNCTION_23	IF_2	CALL_4
0x400ac64	      0xe94affffff	                           jmp 0x400abb3	       959	eval.c	FUNCTION_23	IF_2	CALL_4
0x400ac69	      0xe800000000	                          call 0x400ac6e	       969	eval.c	FUNCTION_23
get_var_value	functions,0:SWITCH,0:IF,1:DO,0:ELSE,0:WHILE,0:CALL,2:FOR,0	136
0x4007780	            0x4154	                                push r12	      7322	eval.c	FUNCTION_134
0x4007782	              0x55	                                push rbp	      7322	eval.c	FUNCTION_134
0x4007783	              0x53	                                push rbx	      7322	eval.c	FUNCTION_134
0x4007784	        0x4883ec10	                           sub rsp, 0x10	      7322	eval.c	FUNCTION_134
0x4007788	    0x64488b042528	                mov rax, qword fs:[0x28]	      7322	eval.c	FUNCTION_134
0x4007791	      0x4889442408	                mov qword [rsp + 8], rax	      7322	eval.c	FUNCTION_134
0x4007796	            0x31c0	                            xor eax, eax	      7322	eval.c	FUNCTION_134
0x4007798	           0xfb607	                   movzx eax, byte [rdi]	      7270	eval.c	FUNCTION_133	IF_1
0x400779b	            0x84c0	                             test al, al	      7270	eval.c	FUNCTION_133	IF_1
0x400779d	     0xf84f5000000	                            je 0x4007898	      7270	eval.c	FUNCTION_133	IF_1
0x40077a3	        0x807f013a	                cmp byte [rdi + 1], 0x3a	      7272	eval.c	FUNCTION_133	IF_2
0x40077a7	          0x4889fb	                            mov rbx, rdi	      7272	eval.c	FUNCTION_133	IF_2
0x40077aa	     0xf84d0000000	                            je 0x4007880	      7272	eval.c	FUNCTION_133	IF_2
0x40077b0	            0x3c3a	                            cmp al, 0x3a	      7275	eval.c	FUNCTION_133	IF_2	IF_3
0x40077b2	     0xf84e0000000	                            je 0x4007898	      7275	eval.c	FUNCTION_133	IF_2	IF_3
0x40077b8	            0x3c23	                            cmp al, 0x23	      7275	eval.c	FUNCTION_133	IF_2	IF_3
0x40077ba	     0xf84d8000000	                            je 0x4007898	      7275	eval.c	FUNCTION_133	IF_2	IF_3
0x40077c0	        0x48893c24	                    mov qword [rsp], rdi	      7277	eval.c	FUNCTION_133	IF_2
0x40077c4	          0x4889fe	                            mov rsi, rdi	      7280	eval.c	FUNCTION_133	IF_2	CALL_1
0x40077c7	      0xbf00000000	                              mov edi, 0	      7280	eval.c	FUNCTION_133	IF_2	CALL_1
0x40077cc	      0xe800000000	                          call 0x40077d1	      7280	eval.c	FUNCTION_133	IF_2	CALL_1
0x40077d1	        0x488b4008	                mov rax, qword [rax + 8]	      7281	eval.c	FUNCTION_133	IF_2	IF_4	CALL_2
0x40077d5	    0x483d00000000	                              cmp rax, 0	      7281	eval.c	FUNCTION_133	IF_2	IF_4	CALL_2
0x40077db	     0xf845f010000	                            je 0x4007940	      7281	eval.c	FUNCTION_133	IF_2	IF_4	CALL_2
0x40077e1	          0x4885c0	                           test rax, rax	      7281	eval.c	FUNCTION_133	IF_2	IF_4	CALL_2
0x40077e4	    0x41bc00000000	                             mov r12d, 0	      7282	eval.c	FUNCTION_133	IF_2	IF_4
0x40077ea	     0xf8450010000	                            je 0x4007940	      7281	eval.c	FUNCTION_133	IF_2	IF_4	CALL_2
0x40077f0	        0x488b2c24	                    mov rbp, qword [rsp]	      7200	eval.c	FUNCTION_131	CALL_2
0x40077f4	        0x807d0000	                       cmp byte [rbp], 0	      7221	eval.c	FUNCTION_132	IF_1
0x40077f8	            0x751e	                           jne 0x4007818	      7221	eval.c	FUNCTION_132	IF_1
0x40077fa	           0xfb603	                   movzx eax, byte [rbx]	      7224	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x40077fd	          0x83e861	                           sub eax, 0x61	      7224	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4007800	            0x3c16	                            cmp al, 0x16	      7224	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4007802	     0xf8761010000	                            ja 0x4007969	      7224	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4007808	           0xfb6c0	                           movzx eax, al	      7224	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x400780b	    0xff24c5000000	                       jmp qword [rax*8]	      7224	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4007812	    0x660f1f440000	                    nop word [rax + rax]	      7224	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4007818	          0x4c89e7	                            mov rdi, r12	      7238	eval.c	FUNCTION_132	CALL_3
0x400781b	          0x4889ee	                            mov rsi, rbp	      7238	eval.c	FUNCTION_132	CALL_3
0x400781e	      0xe800000000	                          call 0x4007823	      7238	eval.c	FUNCTION_132	CALL_3
0x4007823	        0x488b7808	                mov rdi, qword [rax + 8]	      7239	eval.c	FUNCTION_132	IF_2	CALL_4
0x4007827	    0x4881ff000000	                              cmp rdi, 0	      7239	eval.c	FUNCTION_132	IF_2	CALL_4
0x400782e	     0xf842c010000	                            je 0x4007960	      7239	eval.c	FUNCTION_132	IF_2	CALL_4
0x4007834	          0x4885ff	                           test rdi, rdi	      7239	eval.c	FUNCTION_132	IF_2	CALL_4
0x4007837	     0xf8423010000	                            je 0x4007960	      7239	eval.c	FUNCTION_132	IF_2	CALL_4
0x400783d	        0x4883ef11	                           sub rdi, 0x11	      7256	eval.c	FUNCTION_132	CALL_9
0x4007841	          0x4885ff	                           test rdi, rdi	      7201	eval.c	FUNCTION_131	IF_3
0x4007844	     0xf841f010000	                            je 0x4007969	      7201	eval.c	FUNCTION_131	IF_3
0x400784a	      0xbe00000000	                              mov esi, 0	      7085	eval.c	FUNCTION_128	CALL_1
0x400784f	      0xe800000000	                          call 0x4007854	      7085	eval.c	FUNCTION_128	CALL_1
0x4007854	      0xba00000000	                              mov edx, 0	      7087	eval.c	FUNCTION_128
0x4007859	          0x4885c0	                           test rax, rax	      7087	eval.c	FUNCTION_128
0x400785c	        0x480f44c2	                          cmove rax, rdx	      7087	eval.c	FUNCTION_128
0x4007860	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      7329	eval.c	FUNCTION_134
0x4007865	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      7329	eval.c	FUNCTION_134
0x400786e	     0xf8558010000	                           jne 0x40079cc	      7329	eval.c	FUNCTION_134
0x4007874	        0x4883c410	                           add rsp, 0x10	      7329	eval.c	FUNCTION_134
0x4007878	              0x5b	                                 pop rbx	      7329	eval.c	FUNCTION_134
0x4007879	              0x5d	                                 pop rbp	      7329	eval.c	FUNCTION_134
0x400787a	            0x415c	                                 pop r12	      7329	eval.c	FUNCTION_134
0x400787c	              0xc3	                                     ret	      7329	eval.c	FUNCTION_134
0x400787d	           0xf1f00	                         nop dword [rax]	      7329	eval.c	FUNCTION_134
0x4007880	          0x4889e6	                            mov rsi, rsp	      7329	eval.c	FUNCTION_134
0x4007883	      0xe8d889ffff	             call sym.find_var_ht.part.5	      7329	eval.c	FUNCTION_134
0x4007888	          0x4885c0	                           test rax, rax	      7198	eval.c	FUNCTION_131	IF_2
0x400788b	          0x4989c4	                            mov r12, rax	      7198	eval.c	FUNCTION_131	IF_2
0x400788e	     0xf855cffffff	                           jne 0x40077f0	      7198	eval.c	FUNCTION_131	IF_2
0x4007894	         0xf1f4000	                         nop dword [rax]	      7198	eval.c	FUNCTION_131	IF_2
0x4007898	            0x31c0	                            xor eax, eax	      7327	eval.c	FUNCTION_134	IF_1
0x400789a	            0xebc4	                           jmp 0x4007860	      7327	eval.c	FUNCTION_134	IF_1
0x400789c	         0xf1f4000	                         nop dword [rax]	      7327	eval.c	FUNCTION_134	IF_1
0x40078a0	      0xbf00000000	                              mov edi, 0	      7228	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x40078a5	            0xeba3	                           jmp 0x400784a	      7228	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x40078a7	    0x660f1f840000	                    nop word [rax + rax]	      7228	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x40078b0	    0x488b05000000	            mov rax, qword [0x040078b7] 	      7231	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x40078b7	    0x488db8b80000	                   lea rdi, [rax + 0xb8]	      7231	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x40078be	            0xeb81	                           jmp 0x4007841	      7231	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x40078c0	    0x486315000000	         movsxd rdx, dword [0x040078c7] 	      7226	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x40078c7	    0x488b05000000	            mov rax, qword [0x040078ce] 	      7226	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x40078ce	      0x488b7cd0f8	        mov rdi, qword [rax + rdx*8 - 8]	      7226	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x40078d3	      0xe969ffffff	                           jmp 0x4007841	      7226	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x40078d8	     0xf1f84000000	                   nop dword [rax + rax]	      7226	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x40078e0	      0xe800000000	                          call 0x40078e5	      7232	eval.c	FUNCTION_132	IF_1	SWITCH_1	CALL_1
0x40078e5	          0x4889c7	                            mov rdi, rax	      7232	eval.c	FUNCTION_132	IF_1	SWITCH_1	CALL_1
0x40078e8	      0xe954ffffff	                           jmp 0x4007841	      7232	eval.c	FUNCTION_132	IF_1	SWITCH_1	CALL_1
0x40078ed	           0xf1f00	                         nop dword [rax]	      7232	eval.c	FUNCTION_132	IF_1	SWITCH_1	CALL_1
0x40078f0	      0xbf00000000	                              mov edi, 0	      7227	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x40078f5	      0xe950ffffff	                           jmp 0x400784a	      7227	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x40078fa	    0x660f1f440000	                    nop word [rax + rax]	      7227	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4007900	    0x488b05000000	            mov rax, qword [0x04007907] 	      7229	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4007907	    0x488db8181700	                 lea rdi, [rax + 0x1718]	      7229	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x400790e	      0xe92effffff	                           jmp 0x4007841	      7229	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4007913	       0xf1f440000	                   nop dword [rax + rax]	      7229	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4007918	      0xe800000000	                          call 0x400791d	      7233	eval.c	FUNCTION_132	IF_1	SWITCH_1	CALL_2
0x400791d	          0x4889c7	                            mov rdi, rax	      7233	eval.c	FUNCTION_132	IF_1	SWITCH_1	CALL_2
0x4007920	      0xe91cffffff	                           jmp 0x4007841	      7233	eval.c	FUNCTION_132	IF_1	SWITCH_1	CALL_2
0x4007925	           0xf1f00	                         nop dword [rax]	      7233	eval.c	FUNCTION_132	IF_1	SWITCH_1	CALL_2
0x4007928	    0x488b05000000	            mov rax, qword [0x0400792f] 	      7230	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x400792f	    0x488db8580500	                  lea rdi, [rax + 0x558]	      7230	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4007936	      0xe906ffffff	                           jmp 0x4007841	      7230	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x400793b	       0xf1f440000	                   nop dword [rax + rax]	      7230	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4007940	      0xe800000000	                          call 0x4007945	      7284	eval.c	FUNCTION_133	IF_2	CALL_3
0x4007945	    0x41bc00000000	                             mov r12d, 0	      7286	eval.c	FUNCTION_133	IF_2	IF_5
0x400794b	          0x4885c0	                           test rax, rax	      7286	eval.c	FUNCTION_133	IF_2	IF_5
0x400794e	        0x4c0f45e0	                         cmovne r12, rax	      7286	eval.c	FUNCTION_133	IF_2	IF_5
0x4007952	      0xe999feffff	                           jmp 0x40077f0	      7286	eval.c	FUNCTION_133	IF_2	IF_5
0x4007957	    0x660f1f840000	                    nop word [rax + rax]	      7286	eval.c	FUNCTION_133	IF_2	IF_5
0x4007960	    0x4981fc000000	                              cmp r12, 0	      7245	eval.c	FUNCTION_132	IF_2	IF_3
0x4007967	            0x7427	                            je 0x4007990	      7245	eval.c	FUNCTION_132	IF_2	IF_3
0x4007969	            0x31f6	                            xor esi, esi	      7205	eval.c	FUNCTION_131	CALL_3
0x400796b	          0x4889df	                            mov rdi, rbx	      7205	eval.c	FUNCTION_131	CALL_3
0x400796e	      0xe800000000	                          call 0x4007973	      7205	eval.c	FUNCTION_131	CALL_3
0x4007973	          0x4885c0	                           test rax, rax	      7326	eval.c	FUNCTION_134	IF_1
0x4007976	          0x4889c7	                            mov rdi, rax	      7205	eval.c	FUNCTION_131	CALL_3
0x4007979	     0xf85cbfeffff	                           jne 0x400784a	      7326	eval.c	FUNCTION_134	IF_1
0x400797f	            0x31c0	                            xor eax, eax	      7327	eval.c	FUNCTION_134	IF_1
0x4007981	      0xe9dafeffff	                           jmp 0x4007860	      7327	eval.c	FUNCTION_134	IF_1
0x4007986	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      7327	eval.c	FUNCTION_134	IF_1
0x4007990	            0x31f6	                            xor esi, esi	      7249	eval.c	FUNCTION_132	IF_2	IF_3	IF_4	CALL_6
0x4007992	          0x4889ef	                            mov rdi, rbp	      7249	eval.c	FUNCTION_132	IF_2	IF_3	IF_4	CALL_6
0x4007995	      0xe800000000	                          call 0x400799a	      7249	eval.c	FUNCTION_132	IF_2	IF_3	IF_4	CALL_6
0x400799a	            0x85c0	                           test eax, eax	      7249	eval.c	FUNCTION_132	IF_2	IF_3	IF_4	CALL_6
0x400799c	            0x74cb	                            je 0x4007969	      7249	eval.c	FUNCTION_132	IF_2	IF_3	IF_4	CALL_6
0x400799e	      0xe800000000	                          call 0x40079a3	      7249	eval.c	FUNCTION_132	IF_2	IF_3	IF_4	CALL_6
0x40079a3	            0x85c0	                           test eax, eax	      7249	eval.c	FUNCTION_132	IF_2	IF_3	IF_4	CALL_6
0x40079a5	            0x75c2	                           jne 0x4007969	      7249	eval.c	FUNCTION_132	IF_2	IF_3	IF_4	CALL_6
0x40079a7	      0xbf00000000	                              mov edi, 0	      7251	eval.c	FUNCTION_132	IF_2	IF_3	CALL_7
0x40079ac	          0x4889ee	                            mov rsi, rbp	      7251	eval.c	FUNCTION_132	IF_2	IF_3	CALL_7
0x40079af	      0xe800000000	                          call 0x40079b4	      7251	eval.c	FUNCTION_132	IF_2	IF_3	CALL_7
0x40079b4	        0x488b7808	                mov rdi, qword [rax + 8]	      7253	eval.c	FUNCTION_132	IF_2	IF_5	CALL_8
0x40079b8	          0x4885ff	                           test rdi, rdi	      7253	eval.c	FUNCTION_132	IF_2	IF_5	CALL_8
0x40079bb	            0x74ac	                            je 0x4007969	      7253	eval.c	FUNCTION_132	IF_2	IF_5	CALL_8
0x40079bd	    0x4881ff000000	                              cmp rdi, 0	      7253	eval.c	FUNCTION_132	IF_2	IF_5	CALL_8
0x40079c4	     0xf8573feffff	                           jne 0x400783d	      7253	eval.c	FUNCTION_132	IF_2	IF_5	CALL_8
0x40079ca	            0xeb9d	                           jmp 0x4007969	      7253	eval.c	FUNCTION_132	IF_2	IF_5	CALL_8
0x40079cc	      0xe800000000	                          call 0x40079d1	      7329	eval.c	FUNCTION_134
get_user_var_name	functions,0:SWITCH,0:IF,11:DO,0:ELSE,4:WHILE,4:CALL,11:FOR,0	264
0x4000e90	            0x85f6	                           test esi, esi	      3144	eval.c	FUNCTION_61	IF_1
0x4000e92	            0x4154	                                push r12	      3135	eval.c	FUNCTION_61
0x4000e94	              0x55	                                push rbp	      3135	eval.c	FUNCTION_61
0x4000e95	              0x53	                                push rbx	      3135	eval.c	FUNCTION_61
0x4000e96	     0xf85b4000000	                           jne 0x4000f50	      3144	eval.c	FUNCTION_61	IF_1
0x4000e9c	    0x48833d000000	               cmp qword [0x04000ea4], 0	      3151	eval.c	FUNCTION_61	IF_2
0x4000ea4	    0xc70500000000	               mov dword [0x04000eae], 0	      3146	eval.c	FUNCTION_61	IF_1
0x4000eae	    0x48c705000000	               mov qword [0x04000eb9], 0	      3146	eval.c	FUNCTION_61	IF_1
0x4000eb9	    0x48c705000000	               mov qword [0x04000ec4], 0	      3146	eval.c	FUNCTION_61	IF_1
0x4000ec4	    0x48c705000000	               mov qword [0x04000ecf], 0	      3146	eval.c	FUNCTION_61	IF_1
0x4000ecf	    0x48c705000000	               mov qword [0x04000eda], 0	      3147	eval.c	FUNCTION_61	IF_1
0x4000eda	     0xf84e8000000	                            je 0x4000fc8	      3151	eval.c	FUNCTION_61	IF_2
0x4000ee0	    0x48c705000000	               mov qword [0x04000eeb], 1	      3153	eval.c	FUNCTION_61	IF_2	IF_3
0x4000eeb	    0x488b05000000	            mov rax, qword [0x04000ef2] 	      3154	eval.c	FUNCTION_61	IF_2	IF_3
0x4000ef2	        0x488b5808	                mov rbx, qword [rax + 8]	      3157	eval.c	FUNCTION_61	IF_2	WHILE_1	CALL_1
0x4000ef6	    0x488905000000	            mov qword [0x04000efd], rax 	      3157	eval.c	FUNCTION_61	IF_2	WHILE_1	CALL_1
0x4000efd	    0x4881fb000000	                              cmp rbx, 0	      3157	eval.c	FUNCTION_61	IF_2	WHILE_1	CALL_1
0x4000f04	            0x7405	                            je 0x4000f0b	      3157	eval.c	FUNCTION_61	IF_2	WHILE_1	CALL_1
0x4000f06	          0x4885db	                           test rbx, rbx	      3157	eval.c	FUNCTION_61	IF_2	WHILE_1	CALL_1
0x4000f09	            0x7525	                           jne 0x4000f30	      3157	eval.c	FUNCTION_61	IF_2	WHILE_1	CALL_1
0x4000f0b	        0x4883c010	                           add rax, 0x10	      3157	eval.c	FUNCTION_61	IF_2	WHILE_1	CALL_1
0x4000f0f	              0x90	                                     nop	      3157	eval.c	FUNCTION_61	IF_2	WHILE_1	CALL_1
0x4000f10	        0x488b5808	                mov rbx, qword [rax + 8]	      3157	eval.c	FUNCTION_61	IF_2	WHILE_1	CALL_1
0x4000f14	          0x4889c2	                            mov rdx, rax	      3158	eval.c	FUNCTION_61	IF_2	WHILE_1
0x4000f17	        0x4883c010	                           add rax, 0x10	      3158	eval.c	FUNCTION_61	IF_2	WHILE_1
0x4000f1b	          0x4885db	                           test rbx, rbx	      3157	eval.c	FUNCTION_61	IF_2	WHILE_1	CALL_1
0x4000f1e	            0x74f0	                            je 0x4000f10	      3157	eval.c	FUNCTION_61	IF_2	WHILE_1	CALL_1
0x4000f20	    0x4881fb000000	                              cmp rbx, 0	      3157	eval.c	FUNCTION_61	IF_2	WHILE_1	CALL_1
0x4000f27	            0x74e7	                            je 0x4000f10	      3157	eval.c	FUNCTION_61	IF_2	WHILE_1	CALL_1
0x4000f29	    0x488915000000	            mov qword [0x04000f30], rdx 	      3157	eval.c	FUNCTION_61	IF_2	WHILE_1	CALL_1
0x4000f30	        0x488b7f08	                mov rdi, qword [rdi + 8]	      3159	eval.c	FUNCTION_61	IF_2	IF_4	CALL_2
0x4000f34	      0xbe00000000	                              mov esi, 0	      3159	eval.c	FUNCTION_61	IF_2	IF_4	CALL_2
0x4000f39	      0xb902000000	                              mov ecx, 2	      3159	eval.c	FUNCTION_61	IF_2	IF_4	CALL_2
0x4000f3e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3159	eval.c	FUNCTION_61	IF_2	IF_4	CALL_2
0x4000f40	     0xf847a020000	                            je 0x40011c0	      3159	eval.c	FUNCTION_61	IF_2	IF_4	CALL_2
0x4000f46	          0x4889d8	                            mov rax, rbx	      3210	eval.c	FUNCTION_61
0x4000f49	              0x5b	                                 pop rbx	      3210	eval.c	FUNCTION_61
0x4000f4a	              0x5d	                                 pop rbp	      3210	eval.c	FUNCTION_61
0x4000f4b	            0x415c	                                 pop r12	      3210	eval.c	FUNCTION_61
0x4000f4d	              0xc3	                                     ret	      3210	eval.c	FUNCTION_61
0x4000f4e	            0x6690	                                     nop	      3210	eval.c	FUNCTION_61
0x4000f50	    0x488b05000000	            mov rax, qword [0x04000f57] 	      3151	eval.c	FUNCTION_61	IF_2
0x4000f57	    0x483905000000	            cmp qword [0x04000f5e], rax 	      3151	eval.c	FUNCTION_61	IF_2
0x4000f5e	            0x7628	                           jbe 0x4000f88	      3151	eval.c	FUNCTION_61	IF_2
0x4000f60	        0x488d5001	                      lea rdx, [rax + 1]	      3153	eval.c	FUNCTION_61	IF_2	IF_3
0x4000f64	          0x4885c0	                           test rax, rax	      3153	eval.c	FUNCTION_61	IF_2	IF_3
0x4000f67	    0x488915000000	            mov qword [0x04000f6e], rdx 	      3153	eval.c	FUNCTION_61	IF_2	IF_3
0x4000f6e	     0xf8477ffffff	                            je 0x4000eeb	      3153	eval.c	FUNCTION_61	IF_2	IF_3
0x4000f74	    0x488b05000000	            mov rax, qword [0x04000f7b] 	      3156	eval.c	FUNCTION_61	IF_2	ELSE_1
0x4000f7b	        0x4883c010	                           add rax, 0x10	      3156	eval.c	FUNCTION_61	IF_2	ELSE_1
0x4000f7f	      0xe96effffff	                           jmp 0x4000ef2	      3156	eval.c	FUNCTION_61	IF_2	ELSE_1
0x4000f84	         0xf1f4000	                         nop dword [rax]	      3156	eval.c	FUNCTION_61	IF_2	ELSE_1
0x4000f88	    0x488b05000000	            mov rax, qword [0x04000f8f] 	      3165	eval.c	FUNCTION_61
0x4000f8f	    0x488b15000000	            mov rdx, qword [0x04000f96] 	      3165	eval.c	FUNCTION_61
0x4000f96	    0x488b80301700	          mov rax, qword [rax + 0x1730] 	      3165	eval.c	FUNCTION_61
0x4000f9d	        0x48395018	            cmp qword [rax + 0x18], rdx 	      3166	eval.c	FUNCTION_61	IF_5
0x4000fa1	     0xf86c9000000	                           jbe 0x4001070	      3166	eval.c	FUNCTION_61	IF_5
0x4000fa7	        0x488d4a01	                      lea rcx, [rdx + 1]	      3168	eval.c	FUNCTION_61	IF_5	IF_6
0x4000fab	          0x4885d2	                           test rdx, rdx	      3168	eval.c	FUNCTION_61	IF_5	IF_6
0x4000fae	    0x48890d000000	            mov qword [0x04000fb5], rcx 	      3168	eval.c	FUNCTION_61	IF_5	IF_6
0x4000fb5	            0x7435	                            je 0x4000fec	      3168	eval.c	FUNCTION_61	IF_5	IF_6
0x4000fb7	    0x488b05000000	            mov rax, qword [0x04000fbe] 	      3171	eval.c	FUNCTION_61	IF_5	ELSE_2
0x4000fbe	        0x4883c010	                           add rax, 0x10	      3171	eval.c	FUNCTION_61	IF_5	ELSE_2
0x4000fc2	            0xeb2c	                           jmp 0x4000ff0	      3171	eval.c	FUNCTION_61	IF_5	ELSE_2
0x4000fc4	         0xf1f4000	                         nop dword [rax]	      3171	eval.c	FUNCTION_61	IF_5	ELSE_2
0x4000fc8	    0x488b05000000	            mov rax, qword [0x04000fcf] 	      3165	eval.c	FUNCTION_61
0x4000fcf	    0x488b80301700	          mov rax, qword [rax + 0x1730] 	      3165	eval.c	FUNCTION_61
0x4000fd6	      0x4883781800	               cmp qword [rax + 0x18], 0	      3166	eval.c	FUNCTION_61	IF_5
0x4000fdb	     0xf848f000000	                            je 0x4001070	      3166	eval.c	FUNCTION_61	IF_5
0x4000fe1	    0x48c705000000	               mov qword [0x04000fec], 1	      3168	eval.c	FUNCTION_61	IF_5	IF_6
0x4000fec	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3169	eval.c	FUNCTION_61	IF_5	IF_6
0x4000ff0	        0x488b6808	                mov rbp, qword [rax + 8]	      3172	eval.c	FUNCTION_61	IF_5	WHILE_2	CALL_4
0x4000ff4	    0x488905000000	            mov qword [0x04000ffb], rax 	      3172	eval.c	FUNCTION_61	IF_5	WHILE_2	CALL_4
0x4000ffb	    0x4881fd000000	                              cmp rbp, 0	      3172	eval.c	FUNCTION_61	IF_5	WHILE_2	CALL_4
0x4001002	            0x7405	                            je 0x4001009	      3172	eval.c	FUNCTION_61	IF_5	WHILE_2	CALL_4
0x4001004	          0x4885ed	                           test rbp, rbp	      3172	eval.c	FUNCTION_61	IF_5	WHILE_2	CALL_4
0x4001007	            0x7527	                           jne 0x4001030	      3172	eval.c	FUNCTION_61	IF_5	WHILE_2	CALL_4
0x4001009	        0x4883c010	                           add rax, 0x10	      3172	eval.c	FUNCTION_61	IF_5	WHILE_2	CALL_4
0x400100d	           0xf1f00	                         nop dword [rax]	      3172	eval.c	FUNCTION_61	IF_5	WHILE_2	CALL_4
0x4001010	        0x488b6808	                mov rbp, qword [rax + 8]	      3172	eval.c	FUNCTION_61	IF_5	WHILE_2	CALL_4
0x4001014	          0x4889c2	                            mov rdx, rax	      3173	eval.c	FUNCTION_61	IF_5	WHILE_2
0x4001017	        0x4883c010	                           add rax, 0x10	      3173	eval.c	FUNCTION_61	IF_5	WHILE_2
0x400101b	          0x4885ed	                           test rbp, rbp	      3172	eval.c	FUNCTION_61	IF_5	WHILE_2	CALL_4
0x400101e	            0x74f0	                            je 0x4001010	      3172	eval.c	FUNCTION_61	IF_5	WHILE_2	CALL_4
0x4001020	    0x4881fd000000	                              cmp rbp, 0	      3172	eval.c	FUNCTION_61	IF_5	WHILE_2	CALL_4
0x4001027	            0x74e7	                            je 0x4001010	      3172	eval.c	FUNCTION_61	IF_5	WHILE_2	CALL_4
0x4001029	    0x488915000000	            mov qword [0x04001030], rdx 	      3172	eval.c	FUNCTION_61	IF_5	WHILE_2	CALL_4
0x4001030	          0x4889ef	                            mov rdi, rbp	      3110	eval.c	FUNCTION_60	CALL_1
0x4001033	      0xe800000000	                          call 0x4001038	      3110	eval.c	FUNCTION_60	CALL_1
0x4001038	          0x4889c3	                            mov rbx, rax	      3110	eval.c	FUNCTION_60	CALL_1
0x400103b	          0x8d4003	                      lea eax, [rax + 3]	      3111	eval.c	FUNCTION_60	IF_1
0x400103e	    0x3b0500000000	            cmp eax, dword [0x04001044] 	      3111	eval.c	FUNCTION_60	IF_1
0x4001044	     0xf8fb6010000	                            jg 0x4001200	      3111	eval.c	FUNCTION_60	IF_1
0x400104a	    0x488b1d000000	            mov rbx, qword [0x04001051] 	      3111	eval.c	FUNCTION_60	IF_1
0x4001051	        0x488d7b02	                      lea rdi, [rbx + 2]	       110	string3.h	FUNCTION_197	CALL_3
0x4001055	          0xc60362	                    mov byte [rbx], 0x62	      3123	eval.c	FUNCTION_60
0x4001058	        0xc643013a	                mov byte [rbx + 1], 0x3a	      3124	eval.c	FUNCTION_60
0x400105c	          0x4889ee	                            mov rsi, rbp	       110	string3.h	FUNCTION_197	CALL_3
0x400105f	      0xe800000000	                          call 0x4001064	       110	string3.h	FUNCTION_197	CALL_3
0x4001064	          0x4889d8	                            mov rax, rbx	      3210	eval.c	FUNCTION_61
0x4001067	              0x5b	                                 pop rbx	      3210	eval.c	FUNCTION_61
0x4001068	              0x5d	                                 pop rbp	      3210	eval.c	FUNCTION_61
0x4001069	            0x415c	                                 pop r12	      3210	eval.c	FUNCTION_61
0x400106b	              0xc3	                                     ret	      3210	eval.c	FUNCTION_61
0x400106c	         0xf1f4000	                         nop dword [rax]	      3210	eval.c	FUNCTION_61
0x4001070	    0x488b05000000	            mov rax, qword [0x04001077] 	      3178	eval.c	FUNCTION_61
0x4001077	    0x488b90700500	           mov rdx, qword [rax + 0x570] 	      3178	eval.c	FUNCTION_61
0x400107e	    0x488b05000000	            mov rax, qword [0x04001085] 	      3179	eval.c	FUNCTION_61	IF_7
0x4001085	        0x48394218	            cmp qword [rdx + 0x18], rax 	      3179	eval.c	FUNCTION_61	IF_7
0x4001089	     0xf8699000000	                           jbe 0x4001128	      3179	eval.c	FUNCTION_61	IF_7
0x400108f	        0x488d4801	                      lea rcx, [rax + 1]	      3181	eval.c	FUNCTION_61	IF_7	IF_8
0x4001093	          0x4885c0	                           test rax, rax	      3181	eval.c	FUNCTION_61	IF_7	IF_8
0x4001096	    0x48890d000000	            mov qword [0x0400109d], rcx 	      3181	eval.c	FUNCTION_61	IF_7	IF_8
0x400109d	     0xf851d020000	                           jne 0x40012c0	      3181	eval.c	FUNCTION_61	IF_7	IF_8
0x40010a3	        0x488b4230	            mov rax, qword [rdx + 0x30] 	      3182	eval.c	FUNCTION_61	IF_7	IF_8
0x40010a7	        0x488b6808	                mov rbp, qword [rax + 8]	      3185	eval.c	FUNCTION_61	IF_7	WHILE_3	CALL_6
0x40010ab	    0x488905000000	            mov qword [0x040010b2], rax 	      3185	eval.c	FUNCTION_61	IF_7	WHILE_3	CALL_6
0x40010b2	    0x4881fd000000	                              cmp rbp, 0	      3185	eval.c	FUNCTION_61	IF_7	WHILE_3	CALL_6
0x40010b9	            0x7405	                            je 0x40010c0	      3185	eval.c	FUNCTION_61	IF_7	WHILE_3	CALL_6
0x40010bb	          0x4885ed	                           test rbp, rbp	      3185	eval.c	FUNCTION_61	IF_7	WHILE_3	CALL_6
0x40010be	            0x7528	                           jne 0x40010e8	      3185	eval.c	FUNCTION_61	IF_7	WHILE_3	CALL_6
0x40010c0	        0x4883c010	                           add rax, 0x10	      3185	eval.c	FUNCTION_61	IF_7	WHILE_3	CALL_6
0x40010c4	         0xf1f4000	                         nop dword [rax]	      3185	eval.c	FUNCTION_61	IF_7	WHILE_3	CALL_6
0x40010c8	        0x488b6808	                mov rbp, qword [rax + 8]	      3185	eval.c	FUNCTION_61	IF_7	WHILE_3	CALL_6
0x40010cc	          0x4889c2	                            mov rdx, rax	      3186	eval.c	FUNCTION_61	IF_7	WHILE_3
0x40010cf	        0x4883c010	                           add rax, 0x10	      3186	eval.c	FUNCTION_61	IF_7	WHILE_3
0x40010d3	    0x4881fd000000	                              cmp rbp, 0	      3185	eval.c	FUNCTION_61	IF_7	WHILE_3	CALL_6
0x40010da	            0x74ec	                            je 0x40010c8	      3185	eval.c	FUNCTION_61	IF_7	WHILE_3	CALL_6
0x40010dc	          0x4885ed	                           test rbp, rbp	      3185	eval.c	FUNCTION_61	IF_7	WHILE_3	CALL_6
0x40010df	            0x74e7	                            je 0x40010c8	      3185	eval.c	FUNCTION_61	IF_7	WHILE_3	CALL_6
0x40010e1	    0x488915000000	            mov qword [0x040010e8], rdx 	      3185	eval.c	FUNCTION_61	IF_7	WHILE_3	CALL_6
0x40010e8	          0x4889ef	                            mov rdi, rbp	      3110	eval.c	FUNCTION_60	CALL_1
0x40010eb	      0xe800000000	                          call 0x40010f0	      3110	eval.c	FUNCTION_60	CALL_1
0x40010f0	          0x4889c3	                            mov rbx, rax	      3110	eval.c	FUNCTION_60	CALL_1
0x40010f3	          0x8d4003	                      lea eax, [rax + 3]	      3111	eval.c	FUNCTION_60	IF_1
0x40010f6	    0x3b0500000000	            cmp eax, dword [0x040010fc] 	      3111	eval.c	FUNCTION_60	IF_1
0x40010fc	     0xf8f7e010000	                            jg 0x4001280	      3111	eval.c	FUNCTION_60	IF_1
0x4001102	    0x488b1d000000	            mov rbx, qword [0x04001109] 	      3111	eval.c	FUNCTION_60	IF_1
0x4001109	        0x488d7b02	                      lea rdi, [rbx + 2]	       110	string3.h	FUNCTION_197	CALL_3
0x400110d	          0xc60377	                    mov byte [rbx], 0x77	      3123	eval.c	FUNCTION_60
0x4001110	        0xc643013a	                mov byte [rbx + 1], 0x3a	      3124	eval.c	FUNCTION_60
0x4001114	          0x4889ee	                            mov rsi, rbp	       110	string3.h	FUNCTION_197	CALL_3
0x4001117	      0xe800000000	                          call 0x400111c	       110	string3.h	FUNCTION_197	CALL_3
0x400111c	          0x4889d8	                            mov rax, rbx	      3210	eval.c	FUNCTION_61
0x400111f	              0x5b	                                 pop rbx	      3210	eval.c	FUNCTION_61
0x4001120	              0x5d	                                 pop rbp	      3210	eval.c	FUNCTION_61
0x4001121	            0x415c	                                 pop r12	      3210	eval.c	FUNCTION_61
0x4001123	              0xc3	                                     ret	      3210	eval.c	FUNCTION_61
0x4001124	         0xf1f4000	                         nop dword [rax]	      3210	eval.c	FUNCTION_61
0x4001128	    0x488b05000000	            mov rax, qword [0x0400112f] 	      3191	eval.c	FUNCTION_61
0x400112f	    0x488b90d00000	            mov rdx, qword [rax + 0xd0] 	      3191	eval.c	FUNCTION_61
0x4001136	    0x488b05000000	            mov rax, qword [0x0400113d] 	      3192	eval.c	FUNCTION_61	IF_9
0x400113d	        0x48394218	            cmp qword [rdx + 0x18], rax 	      3192	eval.c	FUNCTION_61	IF_9
0x4001141	     0xf8689010000	                           jbe 0x40012d0	      3192	eval.c	FUNCTION_61	IF_9
0x4001147	        0x488d4801	                      lea rcx, [rax + 1]	      3194	eval.c	FUNCTION_61	IF_9	IF_10
0x400114b	          0x4885c0	                           test rax, rax	      3194	eval.c	FUNCTION_61	IF_9	IF_10
0x400114e	    0x48890d000000	            mov qword [0x04001155], rcx 	      3194	eval.c	FUNCTION_61	IF_9	IF_10
0x4001155	     0xf84ae010000	                            je 0x4001309	      3194	eval.c	FUNCTION_61	IF_9	IF_10
0x400115b	    0x488b05000000	            mov rax, qword [0x04001162] 	      3197	eval.c	FUNCTION_61	IF_9	ELSE_4
0x4001162	        0x4883c010	                           add rax, 0x10	      3197	eval.c	FUNCTION_61	IF_9	ELSE_4
0x4001166	        0x488b7008	                mov rsi, qword [rax + 8]	      3198	eval.c	FUNCTION_61	IF_9	WHILE_4	CALL_8
0x400116a	    0x488905000000	            mov qword [0x04001171], rax 	      3198	eval.c	FUNCTION_61	IF_9	WHILE_4	CALL_8
0x4001171	    0x4881fe000000	                              cmp rsi, 0	      3198	eval.c	FUNCTION_61	IF_9	WHILE_4	CALL_8
0x4001178	            0x7405	                            je 0x400117f	      3198	eval.c	FUNCTION_61	IF_9	WHILE_4	CALL_8
0x400117a	          0x4885f6	                           test rsi, rsi	      3198	eval.c	FUNCTION_61	IF_9	WHILE_4	CALL_8
0x400117d	            0x7529	                           jne 0x40011a8	      3198	eval.c	FUNCTION_61	IF_9	WHILE_4	CALL_8
0x400117f	        0x4883c010	                           add rax, 0x10	      3198	eval.c	FUNCTION_61	IF_9	WHILE_4	CALL_8
0x4001183	       0xf1f440000	                   nop dword [rax + rax]	      3198	eval.c	FUNCTION_61	IF_9	WHILE_4	CALL_8
0x4001188	        0x488b7008	                mov rsi, qword [rax + 8]	      3198	eval.c	FUNCTION_61	IF_9	WHILE_4	CALL_8
0x400118c	          0x4889c2	                            mov rdx, rax	      3199	eval.c	FUNCTION_61	IF_9	WHILE_4
0x400118f	        0x4883c010	                           add rax, 0x10	      3199	eval.c	FUNCTION_61	IF_9	WHILE_4
0x4001193	    0x4881fe000000	                              cmp rsi, 0	      3198	eval.c	FUNCTION_61	IF_9	WHILE_4	CALL_8
0x400119a	            0x74ec	                            je 0x4001188	      3198	eval.c	FUNCTION_61	IF_9	WHILE_4	CALL_8
0x400119c	          0x4885f6	                           test rsi, rsi	      3198	eval.c	FUNCTION_61	IF_9	WHILE_4	CALL_8
0x400119f	            0x74e7	                            je 0x4001188	      3198	eval.c	FUNCTION_61	IF_9	WHILE_4	CALL_8
0x40011a1	    0x488915000000	            mov qword [0x040011a8], rdx 	      3198	eval.c	FUNCTION_61	IF_9	WHILE_4	CALL_8
0x40011a8	              0x5b	                                 pop rbx	      3210	eval.c	FUNCTION_61
0x40011a9	              0x5d	                                 pop rbp	      3210	eval.c	FUNCTION_61
0x40011aa	            0x415c	                                 pop r12	      3210	eval.c	FUNCTION_61
0x40011ac	      0xbf74000000	                           mov edi, 0x74	      3200	eval.c	FUNCTION_61	IF_9	CALL_9
0x40011b1	      0xe98aeeffff	              jmp sym.cat_prefix_varname	      3200	eval.c	FUNCTION_61	IF_9	CALL_9
0x40011b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3200	eval.c	FUNCTION_61	IF_9	CALL_9
0x40011c0	          0x4889df	                            mov rdi, rbx	      3110	eval.c	FUNCTION_60	CALL_1
0x40011c3	      0xe800000000	                          call 0x40011c8	      3110	eval.c	FUNCTION_60	CALL_1
0x40011c8	          0x4889c5	                            mov rbp, rax	      3110	eval.c	FUNCTION_60	CALL_1
0x40011cb	          0x8d4003	                      lea eax, [rax + 3]	      3111	eval.c	FUNCTION_60	IF_1
0x40011ce	    0x3b0500000000	            cmp eax, dword [0x040011d4] 	      3111	eval.c	FUNCTION_60	IF_1
0x40011d4	            0x7f6a	                            jg 0x4001240	      3111	eval.c	FUNCTION_60	IF_1
0x40011d6	    0x488b2d000000	            mov rbp, qword [0x040011dd] 	      3111	eval.c	FUNCTION_60	IF_1
0x40011dd	        0x488d7d02	                      lea rdi, [rbp + 2]	       110	string3.h	FUNCTION_197	CALL_3
0x40011e1	        0xc6450067	                    mov byte [rbp], 0x67	      3123	eval.c	FUNCTION_60
0x40011e5	        0xc645013a	                mov byte [rbp + 1], 0x3a	      3124	eval.c	FUNCTION_60
0x40011e9	          0x4889de	                            mov rsi, rbx	       110	string3.h	FUNCTION_197	CALL_3
0x40011ec	          0x4889eb	                            mov rbx, rbp	       110	string3.h	FUNCTION_197	CALL_3
0x40011ef	      0xe800000000	                          call 0x40011f4	       110	string3.h	FUNCTION_197	CALL_3
0x40011f4	          0x4889d8	                            mov rax, rbx	      3210	eval.c	FUNCTION_61
0x40011f7	              0x5b	                                 pop rbx	      3210	eval.c	FUNCTION_61
0x40011f8	              0x5d	                                 pop rbp	      3210	eval.c	FUNCTION_61
0x40011f9	            0x415c	                                 pop r12	      3210	eval.c	FUNCTION_61
0x40011fb	              0xc3	                                     ret	      3210	eval.c	FUNCTION_61
0x40011fc	         0xf1f4000	                         nop dword [rax]	      3210	eval.c	FUNCTION_61
0x4001200	    0x488b3d000000	            mov rdi, qword [0x04001207] 	      3113	eval.c	FUNCTION_60	IF_1	CALL_2
0x4001207	        0x448d630d	                   lea r12d, [rbx + 0xd]	      3114	eval.c	FUNCTION_60	IF_1
0x400120b	      0xe800000000	                          call 0x4001210	      3113	eval.c	FUNCTION_60	IF_1	CALL_2
0x4001210	          0x4489e7	                           mov edi, r12d	      3115	eval.c	FUNCTION_60	IF_1	CALL_3
0x4001213	      0xe800000000	                          call 0x4001218	      3115	eval.c	FUNCTION_60	IF_1	CALL_3
0x4001218	          0x4885c0	                           test rax, rax	      3116	eval.c	FUNCTION_60	IF_1	IF_2
0x400121b	          0x4889c3	                            mov rbx, rax	      3115	eval.c	FUNCTION_60	IF_1	CALL_3
0x400121e	    0x488905000000	            mov qword [0x04001225], rax 	      3115	eval.c	FUNCTION_60	IF_1	CALL_3
0x4001225	     0xf8403010000	                            je 0x400132e	      3116	eval.c	FUNCTION_60	IF_1	IF_2
0x400122b	    0x448925000000	           mov dword [0x04001232], r12d 	      3121	eval.c	FUNCTION_60	IF_1
0x4001232	      0xe91afeffff	                           jmp 0x4001051	      3121	eval.c	FUNCTION_60	IF_1
0x4001237	    0x660f1f840000	                    nop word [rax + rax]	      3121	eval.c	FUNCTION_60	IF_1
0x4001240	    0x488b3d000000	            mov rdi, qword [0x04001247] 	      3113	eval.c	FUNCTION_60	IF_1	CALL_2
0x4001247	        0x448d650d	                   lea r12d, [rbp + 0xd]	      3114	eval.c	FUNCTION_60	IF_1
0x400124b	      0xe800000000	                          call 0x4001250	      3113	eval.c	FUNCTION_60	IF_1	CALL_2
0x4001250	          0x4489e7	                           mov edi, r12d	      3115	eval.c	FUNCTION_60	IF_1	CALL_3
0x4001253	      0xe800000000	                          call 0x4001258	      3115	eval.c	FUNCTION_60	IF_1	CALL_3
0x4001258	          0x4885c0	                           test rax, rax	      3116	eval.c	FUNCTION_60	IF_1	IF_2
0x400125b	          0x4889c5	                            mov rbp, rax	      3115	eval.c	FUNCTION_60	IF_1	CALL_3
0x400125e	    0x488905000000	            mov qword [0x04001265], rax 	      3115	eval.c	FUNCTION_60	IF_1	CALL_3
0x4001265	     0xf84c3000000	                            je 0x400132e	      3116	eval.c	FUNCTION_60	IF_1	IF_2
0x400126b	    0x448925000000	           mov dword [0x04001272], r12d 	      3121	eval.c	FUNCTION_60	IF_1
0x4001272	      0xe966ffffff	                           jmp 0x40011dd	      3121	eval.c	FUNCTION_60	IF_1
0x4001277	    0x660f1f840000	                    nop word [rax + rax]	      3121	eval.c	FUNCTION_60	IF_1
0x4001280	    0x488b3d000000	            mov rdi, qword [0x04001287] 	      3113	eval.c	FUNCTION_60	IF_1	CALL_2
0x4001287	        0x448d630d	                   lea r12d, [rbx + 0xd]	      3114	eval.c	FUNCTION_60	IF_1
0x400128b	      0xe800000000	                          call 0x4001290	      3113	eval.c	FUNCTION_60	IF_1	CALL_2
0x4001290	          0x4489e7	                           mov edi, r12d	      3115	eval.c	FUNCTION_60	IF_1	CALL_3
0x4001293	      0xe800000000	                          call 0x4001298	      3115	eval.c	FUNCTION_60	IF_1	CALL_3
0x4001298	          0x4885c0	                           test rax, rax	      3116	eval.c	FUNCTION_60	IF_1	IF_2
0x400129b	          0x4889c3	                            mov rbx, rax	      3115	eval.c	FUNCTION_60	IF_1	CALL_3
0x400129e	    0x488905000000	            mov qword [0x040012a5], rax 	      3115	eval.c	FUNCTION_60	IF_1	CALL_3
0x40012a5	     0xf8483000000	                            je 0x400132e	      3116	eval.c	FUNCTION_60	IF_1	IF_2
0x40012ab	    0x448925000000	           mov dword [0x040012b2], r12d 	      3121	eval.c	FUNCTION_60	IF_1
0x40012b2	      0xe952feffff	                           jmp 0x4001109	      3121	eval.c	FUNCTION_60	IF_1
0x40012b7	    0x660f1f840000	                    nop word [rax + rax]	      3121	eval.c	FUNCTION_60	IF_1
0x40012c0	    0x488b05000000	            mov rax, qword [0x040012c7] 	      3184	eval.c	FUNCTION_61	IF_7	ELSE_3
0x40012c7	        0x4883c010	                           add rax, 0x10	      3184	eval.c	FUNCTION_61	IF_7	ELSE_3
0x40012cb	      0xe9d7fdffff	                           jmp 0x40010a7	      3184	eval.c	FUNCTION_61	IF_7	ELSE_3
0x40012d0	    0x486305000000	         movsxd rax, dword [0x040012d7] 	      3204	eval.c	FUNCTION_61	IF_11
0x40012d7	          0x83f856	                           cmp eax, 0x56	      3204	eval.c	FUNCTION_61	IF_11
0x40012da	            0x7f36	                            jg 0x4001312	      3204	eval.c	FUNCTION_61	IF_11
0x40012dc	          0x8d5001	                      lea edx, [rax + 1]	      3205	eval.c	FUNCTION_61	CALL_10
0x40012df	      0xbf76000000	                           mov edi, 0x76	      3205	eval.c	FUNCTION_61	CALL_10
0x40012e4	              0x5b	                                 pop rbx	      3210	eval.c	FUNCTION_61
0x40012e5	    0x891500000000	            mov dword [0x040012eb], edx 	      3205	eval.c	FUNCTION_61	CALL_10
0x40012eb	    0x488d14c50000	                        lea rdx, [rax*8]	      3205	eval.c	FUNCTION_61	CALL_10
0x40012f3	        0x48c1e006	                              shl rax, 6	      3205	eval.c	FUNCTION_61	CALL_10
0x40012f7	              0x5d	                                 pop rbp	      3210	eval.c	FUNCTION_61
0x40012f8	          0x4829d0	                            sub rax, rdx	      3205	eval.c	FUNCTION_61	CALL_10
0x40012fb	            0x415c	                                 pop r12	      3210	eval.c	FUNCTION_61
0x40012fd	    0x488bb0000000	                    mov rsi, qword [rax]	      3205	eval.c	FUNCTION_61	CALL_10
0x4001304	      0xe937edffff	              jmp sym.cat_prefix_varname	      3205	eval.c	FUNCTION_61	CALL_10
0x4001309	        0x488b4230	            mov rax, qword [rdx + 0x30] 	      3195	eval.c	FUNCTION_61	IF_9	IF_10
0x400130d	      0xe954feffff	                           jmp 0x4001166	      3195	eval.c	FUNCTION_61	IF_9	IF_10
0x4001312	    0x488b3d000000	            mov rdi, qword [0x04001319] 	      3207	eval.c	FUNCTION_61	CALL_11
0x4001319	          0x4885ff	                           test rdi, rdi	      3207	eval.c	FUNCTION_61	CALL_11
0x400131c	            0x7410	                            je 0x400132e	      3207	eval.c	FUNCTION_61	CALL_11
0x400131e	      0xe800000000	                          call 0x4001323	      3207	eval.c	FUNCTION_61	CALL_11
0x4001323	    0x48c705000000	               mov qword [0x0400132e], 0	      3207	eval.c	FUNCTION_61	CALL_11
0x400132e	    0xc70500000000	               mov dword [0x04001338], 0	      3118	eval.c	FUNCTION_60	IF_1	IF_2
0x4001338	            0x31db	                            xor ebx, ebx	      3119	eval.c	FUNCTION_60	IF_1	IF_2
0x400133a	      0xe907fcffff	                           jmp 0x4000f46	      3119	eval.c	FUNCTION_60	IF_1	IF_2
ex_let	functions,0:SWITCH,0:IF,12:DO,0:ELSE,5:WHILE,0:CALL,22:FOR,0	454
0x40106e0	            0x4157	                                push r15	      1235	eval.c	FUNCTION_31
0x40106e2	            0x4156	                                push r14	      1235	eval.c	FUNCTION_31
0x40106e4	            0x4155	                                push r13	      1235	eval.c	FUNCTION_31
0x40106e6	            0x4154	                                push r12	      1235	eval.c	FUNCTION_31
0x40106e8	              0x55	                                push rbp	      1235	eval.c	FUNCTION_31
0x40106e9	              0x53	                                push rbx	      1235	eval.c	FUNCTION_31
0x40106ea	          0x4889fb	                            mov rbx, rdi	      1235	eval.c	FUNCTION_31
0x40106ed	    0x4881eca80000	                           sub rsp, 0xa8	      1235	eval.c	FUNCTION_31
0x40106f4	          0x488b2f	                    mov rbp, qword [rdi]	      1236	eval.c	FUNCTION_31
0x40106f7	    0x64488b042528	                mov rax, qword fs:[0x28]	      1235	eval.c	FUNCTION_31
0x4010700	    0x488984249800	             mov qword [rsp + 0x98], rax	      1235	eval.c	FUNCTION_31
0x4010708	            0x31c0	                            xor eax, eax	      1235	eval.c	FUNCTION_31
0x401070a	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      1240	eval.c	FUNCTION_31
0x4010712	    0xc74424200000	               mov dword [rsp + 0x20], 0	      1241	eval.c	FUNCTION_31
0x401071a	    0xc74424240100	               mov dword [rsp + 0x24], 1	      1244	eval.c	FUNCTION_31
0x4010722	         0xfb64500	                   movzx eax, byte [rbp]	      1421	eval.c	FUNCTION_33	IF_1
0x4010726	            0x3c5b	                            cmp al, 0x5b	      1421	eval.c	FUNCTION_33	IF_1
0x4010728	     0xf8442010000	                            je 0x4010870	      1421	eval.c	FUNCTION_33	IF_1
0x401072e	            0x3c40	                            cmp al, 0x40	      1467	eval.c	FUNCTION_34	IF_1
0x4010730	     0xf849a010000	                            je 0x40108d0	      1467	eval.c	FUNCTION_34	IF_1
0x4010736	          0x83e0fd	                     and eax, 0xfffffffd	      1469	eval.c	FUNCTION_34	CALL_1
0x4010739	            0x31ff	                            xor edi, edi	      1469	eval.c	FUNCTION_34	CALL_1
0x401073b	            0x3c24	                            cmp al, 0x24	      1469	eval.c	FUNCTION_34	CALL_1
0x401073d	        0x400f94c7	                                sete dil	      1469	eval.c	FUNCTION_34	CALL_1
0x4010741	          0x4801ef	                            add rdi, rbp	      1469	eval.c	FUNCTION_34	CALL_1
0x4010744	      0xbe03000000	                              mov esi, 3	      1469	eval.c	FUNCTION_34	CALL_1
0x4010749	      0xe8d2fcfeff	     call sym.find_name_end.constprop.27	      1469	eval.c	FUNCTION_34	CALL_1
0x401074e	          0x4885c0	                           test rax, rax	      1247	eval.c	FUNCTION_31	IF_1
0x4010751	            0x746e	                            je 0x40107c1	      1247	eval.c	FUNCTION_31	IF_1
0x4010753	          0x4839c5	                            cmp rbp, rax	      1249	eval.c	FUNCTION_31	IF_2
0x4010756	            0x730c	                           jae 0x4010764	      1249	eval.c	FUNCTION_31	IF_2
0x4010758	            0x31d2	                            xor edx, edx	      1250	eval.c	FUNCTION_31	IF_2
0x401075a	        0x8078ff2e	                cmp byte [rax - 1], 0x2e	      1250	eval.c	FUNCTION_31	IF_2
0x401075e	           0xf94c2	                                 sete dl	      1250	eval.c	FUNCTION_31	IF_2
0x4010761	          0x4829d0	                            sub rax, rdx	      1250	eval.c	FUNCTION_31	IF_2
0x4010764	          0x4889c7	                            mov rdi, rax	      1251	eval.c	FUNCTION_31	CALL_2
0x4010767	      0xe800000000	                          call 0x401076c	      1251	eval.c	FUNCTION_31	CALL_2
0x401076c	           0xfb630	                   movzx esi, byte [rax]	      1252	eval.c	FUNCTION_31	IF_3	CALL_3
0x401076f	          0x4989c4	                            mov r12, rax	      1251	eval.c	FUNCTION_31	CALL_2
0x4010772	        0x4080fe3d	                           cmp sil, 0x3d	      1252	eval.c	FUNCTION_31	IF_3	CALL_3
0x4010776	            0x7478	                            je 0x40107f0	      1252	eval.c	FUNCTION_31	IF_3	CALL_3
0x4010778	      0xbf00000000	                              mov edi, 0	      1252	eval.c	FUNCTION_31	IF_3	CALL_3
0x401077d	      0xe800000000	                          call 0x4010782	      1252	eval.c	FUNCTION_31	IF_3	CALL_3
0x4010782	          0x4885c0	                           test rax, rax	      1252	eval.c	FUNCTION_31	IF_3	CALL_3
0x4010785	            0x7408	                            je 0x401078f	      1252	eval.c	FUNCTION_31	IF_3	CALL_3
0x4010787	    0x41807c24013d	                cmp byte [r12 + 1], 0x3d	      1252	eval.c	FUNCTION_31	IF_3	CALL_3
0x401078d	            0x7461	                            je 0x40107f0	      1252	eval.c	FUNCTION_31	IF_3	CALL_3
0x401078f	         0xfb67d00	                   movzx edi, byte [rbp]	      1258	eval.c	FUNCTION_31	IF_3	IF_4
0x4010793	        0x4080ff5b	                           cmp dil, 0x5b	      1258	eval.c	FUNCTION_31	IF_3	IF_4
0x4010797	     0xf8463020000	                            je 0x4010a00	      1258	eval.c	FUNCTION_31	IF_3	IF_4
0x401079d	      0xe800000000	                          call 0x40107a2	      1260	eval.c	FUNCTION_31	IF_3	ELSE_1	IF_5	CALL_6
0x40107a2	            0x85c0	                           test eax, eax	      1260	eval.c	FUNCTION_31	IF_3	ELSE_1	IF_5	CALL_6
0x40107a4	     0xf8456010000	                            je 0x4010900	      1260	eval.c	FUNCTION_31	IF_3	ELSE_1	IF_5	CALL_6
0x40107aa	          0x8b4b30	            mov ecx, dword [rbx + 0x30] 	      1263	eval.c	FUNCTION_31	IF_3	ELSE_2	IF_6
0x40107ad	            0x85c9	                           test ecx, ecx	      1263	eval.c	FUNCTION_31	IF_3	ELSE_2	IF_6
0x40107af	     0xf841b040000	                            je 0x4010bd0	      1263	eval.c	FUNCTION_31	IF_3	ELSE_2	IF_6
0x40107b5	          0x4889ef	                            mov rdi, rbp	      1274	eval.c	FUNCTION_31	IF_3	CALL_15
0x40107b8	      0xe800000000	                          call 0x40107bd	      1274	eval.c	FUNCTION_31	IF_3	CALL_15
0x40107bd	        0x48894308	                mov qword [rbx + 8], rax	      1274	eval.c	FUNCTION_31	IF_3	CALL_15
0x40107c1	    0x488b84249800	            mov rax, qword [rsp + 0x98] 	      1305	eval.c	FUNCTION_31
0x40107c9	    0x644833042528	                xor rax, qword fs:[0x28]	      1305	eval.c	FUNCTION_31
0x40107d2	     0xf85a2060000	                           jne 0x4010e7a	      1305	eval.c	FUNCTION_31
0x40107d8	    0x4881c4a80000	                           add rsp, 0xa8	      1305	eval.c	FUNCTION_31
0x40107df	              0x5b	                                 pop rbx	      1305	eval.c	FUNCTION_31
0x40107e0	              0x5d	                                 pop rbp	      1305	eval.c	FUNCTION_31
0x40107e1	            0x415c	                                 pop r12	      1305	eval.c	FUNCTION_31
0x40107e3	            0x415d	                                 pop r13	      1305	eval.c	FUNCTION_31
0x40107e5	            0x415e	                                 pop r14	      1305	eval.c	FUNCTION_31
0x40107e7	            0x415f	                                 pop r15	      1305	eval.c	FUNCTION_31
0x40107e9	              0xc3	                                     ret	      1305	eval.c	FUNCTION_31
0x40107ea	    0x660f1f440000	                    nop word [rax + rax]	      1305	eval.c	FUNCTION_31
0x40107f0	      0xc64424503d	            mov byte [rsp + 0x50], 0x3d 	      1278	eval.c	FUNCTION_31	ELSE_3
0x40107f5	      0xc644245100	                mov byte [rsp + 0x51], 0	      1279	eval.c	FUNCTION_31	ELSE_3
0x40107fa	      0x410fb63424	                   movzx esi, byte [r12]	      1280	eval.c	FUNCTION_31	ELSE_3	IF_7
0x40107ff	        0x4080fe3d	                           cmp sil, 0x3d	      1280	eval.c	FUNCTION_31	ELSE_3	IF_7
0x4010803	     0xf84df010000	                            je 0x40109e8	      1280	eval.c	FUNCTION_31	ELSE_3	IF_7
0x4010809	      0xbf00000000	                              mov edi, 0	      1282	eval.c	FUNCTION_31	ELSE_3	IF_7	IF_8	CALL_16
0x401080e	      0xe800000000	                          call 0x4010813	      1282	eval.c	FUNCTION_31	ELSE_3	IF_7	IF_8	CALL_16
0x4010813	          0x4885c0	                           test rax, rax	      1282	eval.c	FUNCTION_31	ELSE_3	IF_7	IF_8	CALL_16
0x4010816	            0x7409	                            je 0x4010821	      1282	eval.c	FUNCTION_31	ELSE_3	IF_7	IF_8	CALL_16
0x4010818	      0x410fb60424	                   movzx eax, byte [r12]	      1283	eval.c	FUNCTION_31	ELSE_3	IF_7	IF_8
0x401081d	        0x88442450	               mov byte [rsp + 0x50], al	      1283	eval.c	FUNCTION_31	ELSE_3	IF_7	IF_8
0x4010821	      0x498d7c2402	                      lea rdi, [r12 + 2]	      1284	eval.c	FUNCTION_31	ELSE_3	IF_7	CALL_17
0x4010826	      0xe800000000	                          call 0x401082b	      1284	eval.c	FUNCTION_31	ELSE_3	IF_7	CALL_17
0x401082b	          0x4889c7	                            mov rdi, rax	      1284	eval.c	FUNCTION_31	ELSE_3	IF_7	CALL_17
0x401082e	          0x8b5330	            mov edx, dword [rbx + 0x30] 	      1289	eval.c	FUNCTION_31	ELSE_3	IF_9
0x4010831	            0x85d2	                           test edx, edx	      1289	eval.c	FUNCTION_31	ELSE_3	IF_9
0x4010833	            0x7407	                            je 0x401083c	      1289	eval.c	FUNCTION_31	ELSE_3	IF_9
0x4010835	    0x830500000000	               add dword [0x0401083c], 1	      1290	eval.c	FUNCTION_31	ELSE_3	IF_9
0x401083c	            0x31c9	                            xor ecx, ecx	      1291	eval.c	FUNCTION_31	ELSE_3	CALL_19
0x401083e	      0x488d742440	                   lea rsi, [rsp + 0x40]	      1291	eval.c	FUNCTION_31	ELSE_3	CALL_19
0x4010843	            0x85d2	                           test edx, edx	      1291	eval.c	FUNCTION_31	ELSE_3	CALL_19
0x4010845	        0x488d5308	                      lea rdx, [rbx + 8]	      1291	eval.c	FUNCTION_31	ELSE_3	CALL_19
0x4010849	           0xf94c1	                                 sete cl	      1291	eval.c	FUNCTION_31	ELSE_3	CALL_19
0x401084c	      0xe800000000	                          call 0x4010851	      1291	eval.c	FUNCTION_31	ELSE_3	CALL_19
0x4010851	          0x8b5330	            mov edx, dword [rbx + 0x30] 	      1292	eval.c	FUNCTION_31	ELSE_3	IF_10
0x4010854	            0x85d2	                           test edx, edx	      1292	eval.c	FUNCTION_31	ELSE_3	IF_10
0x4010856	            0x7438	                            je 0x4010890	      1292	eval.c	FUNCTION_31	ELSE_3	IF_10
0x4010858	            0x85c0	                           test eax, eax	      1294	eval.c	FUNCTION_31	ELSE_3	IF_10	IF_11
0x401085a	     0xf8590000000	                           jne 0x40108f0	      1294	eval.c	FUNCTION_31	ELSE_3	IF_10	IF_11
0x4010860	    0x832d00000000	               sub dword [0x04010867], 1	      1296	eval.c	FUNCTION_31	ELSE_3	IF_10
0x4010867	      0xe955ffffff	                           jmp 0x40107c1	      1296	eval.c	FUNCTION_31	ELSE_3	IF_10
0x401086c	         0xf1f4000	                         nop dword [rax]	      1296	eval.c	FUNCTION_31	ELSE_3	IF_10
0x4010870	      0x488d542420	                   lea rdx, [rsp + 0x20]	      1296	eval.c	FUNCTION_31	ELSE_3	IF_10
0x4010875	      0x488d74241c	                   lea rsi, [rsp + 0x1c]	      1296	eval.c	FUNCTION_31	ELSE_3	IF_10
0x401087a	          0x4889ef	                            mov rdi, rbp	      1296	eval.c	FUNCTION_31	ELSE_3	IF_10
0x401087d	      0xe83efefeff	           call sym.skip_var_list.part.4	      1296	eval.c	FUNCTION_31	ELSE_3	IF_10
0x4010882	      0xe9c7feffff	                           jmp 0x401074e	      1296	eval.c	FUNCTION_31	ELSE_3	IF_10
0x4010887	    0x660f1f840000	                    nop word [rax + rax]	      1296	eval.c	FUNCTION_31	ELSE_3	IF_10
0x4010890	            0x85c0	                           test eax, eax	      1298	eval.c	FUNCTION_31	ELSE_3	ELSE_5	IF_12
0x4010892	     0xf8429ffffff	                            je 0x40107c1	      1298	eval.c	FUNCTION_31	ELSE_3	ELSE_5	IF_12
0x4010898	          0x488b3b	                    mov rdi, qword [rbx]	      1300	eval.c	FUNCTION_31	ELSE_3	ELSE_5	IF_12	CALL_21
0x401089b	      0x4c8d442450	                    lea r8, [rsp + 0x50]	      1335	eval.c	FUNCTION_32	IF_1	IF_2	CALL_1
0x40108a0	          0x803f5b	                    cmp byte [rdi], 0x5b	      1330	eval.c	FUNCTION_32	IF_1
0x40108a3	     0xf8407030000	                            je 0x4010bb0	      1330	eval.c	FUNCTION_32	IF_1
0x40108a9	      0x488d742440	                   lea rsi, [rsp + 0x40]	      1335	eval.c	FUNCTION_32	IF_1	IF_2	CALL_1
0x40108ae	          0x4c89c1	                             mov rcx, r8	      1335	eval.c	FUNCTION_32	IF_1	IF_2	CALL_1
0x40108b1	            0x31d2	                            xor edx, edx	      1335	eval.c	FUNCTION_32	IF_1	IF_2	CALL_1
0x40108b3	      0xe8c8f5ffff	                     call sym.ex_let_one	      1335	eval.c	FUNCTION_32	IF_1	IF_2	CALL_1
0x40108b8	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      1302	eval.c	FUNCTION_31	ELSE_3	ELSE_5	IF_12	CALL_22
0x40108bd	      0xe800000000	                          call 0x40108c2	      1302	eval.c	FUNCTION_31	ELSE_3	ELSE_5	IF_12	CALL_22
0x40108c2	      0xe9fafeffff	                           jmp 0x40107c1	      1302	eval.c	FUNCTION_31	ELSE_3	ELSE_5	IF_12	CALL_22
0x40108c7	    0x660f1f840000	                    nop word [rax + rax]	      1302	eval.c	FUNCTION_31	ELSE_3	ELSE_5	IF_12	CALL_22
0x40108d0	        0x807d0100	                   cmp byte [rbp + 1], 0	      1467	eval.c	FUNCTION_34	IF_1
0x40108d4	          0x4889ef	                            mov rdi, rbp	      1467	eval.c	FUNCTION_34	IF_1
0x40108d7	        0x488d4502	                      lea rax, [rbp + 2]	      1468	eval.c	FUNCTION_34	IF_1
0x40108db	     0xf8463feffff	                            je 0x4010744	      1467	eval.c	FUNCTION_34	IF_1
0x40108e1	      0xe968feffff	                           jmp 0x401074e	      1467	eval.c	FUNCTION_34	IF_1
0x40108e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1467	eval.c	FUNCTION_34	IF_1
0x40108f0	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      1295	eval.c	FUNCTION_31	ELSE_3	IF_10	CALL_20
0x40108f5	      0xe800000000	                          call 0x40108fa	      1295	eval.c	FUNCTION_31	ELSE_3	IF_10	CALL_20
0x40108fa	      0xe961ffffff	                           jmp 0x4010860	      1295	eval.c	FUNCTION_31	ELSE_3	IF_10	CALL_20
0x40108ff	              0x90	                                     nop	      1295	eval.c	FUNCTION_31	ELSE_3	IF_10	CALL_20
0x4010900	      0x48896c2428	             mov qword [rsp + 0x28], rbp	      1295	eval.c	FUNCTION_31	ELSE_3	IF_10	CALL_20
0x4010905	          0x4889e8	                            mov rax, rbp	      1260	eval.c	FUNCTION_31	IF_3	ELSE_1	IF_5	CALL_6
0x4010908	            0x31ed	                            xor ebp, ebp	      1567	eval.c	FUNCTION_42
0x401090a	            0xeb0e	                           jmp 0x401091a	      1567	eval.c	FUNCTION_42
0x401090c	         0xf1f4000	                         nop dword [rax]	      1567	eval.c	FUNCTION_42
0x4010910	      0xe800000000	                          call 0x4010915	      1659	eval.c	FUNCTION_42	WHILE_1	CALL_27
0x4010915	      0x4889442428	             mov qword [rsp + 0x28], rax	      1659	eval.c	FUNCTION_42	WHILE_1	CALL_27
0x401091a	           0xfb638	                   movzx edi, byte [rax]	      1575	eval.c	FUNCTION_42	WHILE_1	CALL_1
0x401091d	      0xe800000000	                          call 0x4010922	      1575	eval.c	FUNCTION_42	WHILE_1	CALL_1
0x4010922	            0x85c0	                           test eax, eax	      1575	eval.c	FUNCTION_42	WHILE_1	CALL_1
0x4010924	     0xf8536010000	                           jne 0x4010a60	      1575	eval.c	FUNCTION_42	WHILE_1	CALL_1
0x401092a	    0x8b0500000000	            mov eax, dword [0x04010930] 	      1575	eval.c	FUNCTION_42	WHILE_1	CALL_1
0x4010930	            0x85c0	                           test eax, eax	      1575	eval.c	FUNCTION_42	WHILE_1	CALL_1
0x4010932	     0xf8528010000	                           jne 0x4010a60	      1575	eval.c	FUNCTION_42	WHILE_1	CALL_1
0x4010938	            0x85ed	                           test ebp, ebp	      1577	eval.c	FUNCTION_42	WHILE_1	IF_1
0x401093a	            0x7509	                           jne 0x4010945	      1577	eval.c	FUNCTION_42	WHILE_1	IF_1
0x401093c	        0x448b4b30	            mov r9d, dword [rbx + 0x30] 	      1577	eval.c	FUNCTION_42	WHILE_1	IF_1
0x4010940	          0x4585c9	                           test r9d, r9d	      1577	eval.c	FUNCTION_42	WHILE_1	IF_1
0x4010943	            0x743b	                            je 0x4010980	      1577	eval.c	FUNCTION_42	WHILE_1	IF_1
0x4010945	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      1579	eval.c	FUNCTION_42	WHILE_1	IF_1	CALL_2
0x401094a	      0xbe03000000	                              mov esi, 3	      1579	eval.c	FUNCTION_42	WHILE_1	IF_1	CALL_2
0x401094f	      0xe8ccfafeff	     call sym.find_name_end.constprop.27	      1579	eval.c	FUNCTION_42	WHILE_1	IF_1	CALL_2
0x4010954	          0x4889c7	                            mov rdi, rax	      1579	eval.c	FUNCTION_42	WHILE_1	IF_1	CALL_2
0x4010957	      0x4889442428	             mov qword [rsp + 0x28], rax	      1579	eval.c	FUNCTION_42	WHILE_1	IF_1	CALL_2
0x401095c	           0xfb600	                   movzx eax, byte [rax]	      1580	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_4
0x401095f	            0x3c20	                            cmp al, 0x20	      1580	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_4
0x4010961	            0x74ad	                            je 0x4010910	      1580	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_4
0x4010963	            0x3c09	                               cmp al, 9	      1580	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_4
0x4010965	            0x74a9	                            je 0x4010910	      1580	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_4
0x4010967	           0xfb6f8	                           movzx edi, al	      1580	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_4
0x401096a	      0xe800000000	                          call 0x401096f	      1580	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_4
0x401096f	            0x85c0	                           test eax, eax	      1580	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_4
0x4010971	     0xf843d030000	                            je 0x4010cb4	      1580	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_4
0x4010977	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      1580	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_4
0x401097c	            0xeb92	                           jmp 0x4010910	      1580	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_4
0x401097e	            0x6690	                                     nop	      1580	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_4
0x4010980	      0x488d742430	                   lea rsi, [rsp + 0x30]	      1591	eval.c	FUNCTION_42	WHILE_1	ELSE_1	CALL_7
0x4010985	      0x488d7c2428	                   lea rdi, [rsp + 0x28]	      1591	eval.c	FUNCTION_42	WHILE_1	ELSE_1	CALL_7
0x401098a	      0xb901000000	                              mov ecx, 1	      1591	eval.c	FUNCTION_42	WHILE_1	ELSE_1	CALL_7
0x401098f	      0xba01000000	                              mov edx, 1	      1591	eval.c	FUNCTION_42	WHILE_1	ELSE_1	CALL_7
0x4010994	      0x4c8b642428	            mov r12, qword [rsp + 0x28] 	      1590	eval.c	FUNCTION_42	WHILE_1	ELSE_1
0x4010999	      0xe800000000	                          call 0x401099e	      1591	eval.c	FUNCTION_42	WHILE_1	ELSE_1	CALL_7
0x401099e	          0x83f800	                              cmp eax, 0	      1592	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3
0x40109a1	          0x4189c5	                           mov r13d, eax	      1591	eval.c	FUNCTION_42	WHILE_1	ELSE_1	CALL_7
0x40109a4	            0x7e7a	                           jle 0x4010a20	      1592	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3
0x40109a6	      0x4c8b742430	            mov r14, qword [rsp + 0x30] 	      1606	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	IF_5
0x40109ab	      0x488d542440	                   lea rdx, [rsp + 0x40]	      1608	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	IF_6	CALL_11
0x40109b0	    0x41b801000000	                              mov r8d, 1	      1608	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	IF_6	CALL_11
0x40109b6	            0x89c6	                            mov esi, eax	      1608	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	IF_6	CALL_11
0x40109b8	          0x4d85f6	                           test r14, r14	      1590	eval.c	FUNCTION_42	WHILE_1	ELSE_1
0x40109bb	        0x4d0f44f4	                          cmove r14, r12	      1590	eval.c	FUNCTION_42	WHILE_1	ELSE_1
0x40109bf	          0x4531c9	                            xor r9d, r9d	      1608	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	IF_6	CALL_11
0x40109c2	            0x31c9	                            xor ecx, ecx	      1608	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	IF_6	CALL_11
0x40109c4	          0x4c89f7	                            mov rdi, r14	      1608	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	IF_6	CALL_11
0x40109c7	      0xe800000000	                          call 0x40109cc	      1608	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	IF_6	CALL_11
0x40109cc	            0x85c0	                           test eax, eax	      1608	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	IF_6	CALL_11
0x40109ce	     0xf859c000000	                           jne 0x4010a70	      1608	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	IF_6	CALL_11
0x40109d4	      0xbd01000000	                              mov ebp, 1	      1602	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3
0x40109d9	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      1656	eval.c	FUNCTION_42	WHILE_1	ELSE_1	CALL_26
0x40109de	      0xe800000000	                          call 0x40109e3	      1656	eval.c	FUNCTION_42	WHILE_1	ELSE_1	CALL_26
0x40109e3	            0xeb92	                           jmp 0x4010977	      1656	eval.c	FUNCTION_42	WHILE_1	ELSE_1	CALL_26
0x40109e5	           0xf1f00	                         nop dword [rax]	      1656	eval.c	FUNCTION_42	WHILE_1	ELSE_1	CALL_26
0x40109e8	      0x498d7c2401	                      lea rdi, [r12 + 1]	      1287	eval.c	FUNCTION_31	ELSE_3	CALL_18
0x40109ed	      0xe800000000	                          call 0x40109f2	      1287	eval.c	FUNCTION_31	ELSE_3	CALL_18
0x40109f2	          0x4889c7	                            mov rdi, rax	      1287	eval.c	FUNCTION_31	ELSE_3	CALL_18
0x40109f5	      0xe934feffff	                           jmp 0x401082e	      1287	eval.c	FUNCTION_31	ELSE_3	CALL_18
0x40109fa	    0x660f1f440000	                    nop word [rax + rax]	      1287	eval.c	FUNCTION_31	ELSE_3	CALL_18
0x4010a00	            0x31ff	                            xor edi, edi	      1259	eval.c	FUNCTION_31	IF_3	CALL_5
0x4010a02	      0xba05000000	                              mov edx, 5	      1259	eval.c	FUNCTION_31	IF_3	CALL_5
0x4010a07	      0xbe00000000	                              mov esi, 0	      1259	eval.c	FUNCTION_31	IF_3	CALL_5
0x4010a0c	      0xe800000000	                          call 0x4010a11	      1259	eval.c	FUNCTION_31	IF_3	CALL_5
0x4010a11	          0x4889c7	                            mov rdi, rax	      1259	eval.c	FUNCTION_31	IF_3	CALL_5
0x4010a14	      0xe800000000	                          call 0x4010a19	      1259	eval.c	FUNCTION_31	IF_3	CALL_5
0x4010a19	      0xe997fdffff	                           jmp 0x40107b5	      1259	eval.c	FUNCTION_31	IF_3	CALL_5
0x4010a1e	            0x6690	                                     nop	      1259	eval.c	FUNCTION_31	IF_3	CALL_5
0x4010a20	            0x74b2	                            je 0x40109d4	      1596	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3	IF_4	CALL_8
0x4010a22	      0xe800000000	                          call 0x4010a27	      1596	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3	IF_4	CALL_8
0x4010a27	            0x85c0	                           test eax, eax	      1596	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3	IF_4	CALL_8
0x4010a29	            0x75a9	                           jne 0x40109d4	      1596	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3	IF_4	CALL_8
0x4010a2b	      0x488b6c2428	            mov rbp, qword [rsp + 0x28] 	      1599	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3	IF_4	CALL_10
0x4010a30	      0xbe00000000	                              mov esi, 0	      1599	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3	IF_4	CALL_10
0x4010a35	            0x31ff	                            xor edi, edi	      1599	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3	IF_4	CALL_10
0x4010a37	      0xba05000000	                              mov edx, 5	      1599	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3	IF_4	CALL_10
0x4010a3c	    0xc70500000000	               mov dword [0x04010a46], 1	      1598	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3	IF_4
0x4010a46	      0xe800000000	                          call 0x4010a4b	      1599	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3	IF_4	CALL_10
0x4010a4b	          0x4889ee	                            mov rsi, rbp	      1599	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3	IF_4	CALL_10
0x4010a4e	          0x4889c7	                            mov rdi, rax	      1599	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3	IF_4	CALL_10
0x4010a51	      0xe800000000	                          call 0x4010a56	      1599	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3	IF_4	CALL_10
0x4010a56	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1599	eval.c	FUNCTION_42	WHILE_1	ELSE_1	IF_3	IF_4	CALL_10
0x4010a60	      0x488b6c2428	            mov rbp, qword [rsp + 0x28] 	      1662	eval.c	FUNCTION_42
0x4010a65	      0xe94bfdffff	                           jmp 0x40107b5	      1662	eval.c	FUNCTION_42
0x4010a6a	    0x660f1f440000	                    nop word [rax + rax]	      1662	eval.c	FUNCTION_42
0x4010a70	      0x488d742440	                   lea rsi, [rsp + 0x40]	      1614	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	IF_7	CALL_12
0x4010a75	      0x488d7c2428	                   lea rdi, [rsp + 0x28]	      1614	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	IF_7	CALL_12
0x4010a7a	      0xb901000000	                              mov ecx, 1	      1614	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	IF_7	CALL_12
0x4010a7f	      0xba01000000	                              mov edx, 1	      1614	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	IF_7	CALL_12
0x4010a84	      0x4c8b7c2428	            mov r15, qword [rsp + 0x28] 	      1613	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3
0x4010a89	      0xe800000000	                          call 0x4010a8e	      1614	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	IF_7	CALL_12
0x4010a8e	            0x85c0	                           test eax, eax	      1614	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	IF_7	CALL_12
0x4010a90	     0xf843effffff	                            je 0x40109d4	      1614	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	IF_7	CALL_12
0x4010a96	      0x4c397c2428	            cmp qword [rsp + 0x28], r15 	      1618	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8
0x4010a9b	            0x750a	                           jne 0x4010aa7	      1618	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8
0x4010a9d	        0x4183fd02	                             cmp r13d, 2	      1618	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8
0x4010aa1	     0xf84a5020000	                            je 0x4010d4c	      1618	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8
0x4010aa7	        0x4883ec08	                              sub rsp, 8	      5742	eval.c	FUNCTION_88	CALL_1
0x4010aab	          0x4531c9	                            xor r9d, r9d	      5742	eval.c	FUNCTION_88	CALL_1
0x4010aae	            0x31c9	                            xor ecx, ecx	      5742	eval.c	FUNCTION_88	CALL_1
0x4010ab0	            0x6a00	                                  push 0	      5742	eval.c	FUNCTION_88	CALL_1
0x4010ab2	    0x41b801000000	                              mov r8d, 1	      5742	eval.c	FUNCTION_88	CALL_1
0x4010ab8	      0x488d542460	                   lea rdx, [rsp + 0x60]	      5742	eval.c	FUNCTION_88	CALL_1
0x4010abd	      0x488d742448	                   lea rsi, [rsp + 0x48]	      5742	eval.c	FUNCTION_88	CALL_1
0x4010ac2	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      5742	eval.c	FUNCTION_88	CALL_1
0x4010ac7	      0xe800000000	                          call 0x4010acc	      5742	eval.c	FUNCTION_88	CALL_1
0x4010acc	          0x4989c5	                            mov r13, rax	      5742	eval.c	FUNCTION_88	CALL_1
0x4010acf	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      1641	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5
0x4010ad4	          0x4d85ed	                           test r13, r13	      1643	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5	CALL_23
0x4010ad7	           0xfb608	                   movzx ecx, byte [rax]	      1641	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5
0x4010ada	          0xc60000	                       mov byte [rax], 0	      1642	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5
0x4010add	      0xb800000000	                              mov eax, 0	      1643	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5	CALL_23
0x4010ae2	        0x4c0f44e8	                          cmove r13, rax	      1643	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5	CALL_23
0x4010ae6	        0x884c241f	               mov byte [rsp + 0x1f], cl	      1641	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5
0x4010aea	              0x5f	                                 pop rdi	      1643	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5	CALL_23
0x4010aeb	            0x4158	                                  pop r8	      1643	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5	CALL_23
0x4010aed	      0x4c3b7c2428	            cmp r15, qword [rsp + 0x28] 	      1643	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5	CALL_23
0x4010af2	        0x8b442440	            mov eax, dword [rsp + 0x40] 	      1645	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5
0x4010af6	        0x89442408	                mov dword [rsp + 8], eax	      1645	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5
0x4010afa	        0x4d0f44e6	                          cmove r12, r14	      1643	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5	CALL_23
0x4010afe	      0xe800000000	                          call 0x4010b03	      7479	eval.c	FUNCTION_142	CALL_1
0x4010b03	      0xbf00000000	                              mov edi, 0	      7480	eval.c	FUNCTION_142	CALL_2
0x4010b08	      0xe800000000	                          call 0x4010b0d	      7480	eval.c	FUNCTION_142	CALL_2
0x4010b0d	          0x4d85e4	                           test r12, r12	      7481	eval.c	FUNCTION_142	IF_1
0x4010b10	            0x7408	                            je 0x4010b1a	      7481	eval.c	FUNCTION_142	IF_1
0x4010b12	          0x4c89e7	                            mov rdi, r12	      7482	eval.c	FUNCTION_142	CALL_3
0x4010b15	      0xe800000000	                          call 0x4010b1a	      7482	eval.c	FUNCTION_142	CALL_3
0x4010b1a	      0xbf20000000	                           mov edi, 0x20	      7483	eval.c	FUNCTION_142	CALL_4
0x4010b1f	      0xe800000000	                          call 0x4010b24	      7483	eval.c	FUNCTION_142	CALL_4
0x4010b24	      0xbf16000000	                           mov edi, 0x16	      7484	eval.c	FUNCTION_142	CALL_5
0x4010b29	      0xe800000000	                          call 0x4010b2e	      7484	eval.c	FUNCTION_142	CALL_5
0x4010b2e	      0x837c240801	                  cmp dword [rsp + 8], 1	      7485	eval.c	FUNCTION_142	IF_2
0x4010b33	     0xf84bf010000	                            je 0x4010cf8	      7485	eval.c	FUNCTION_142	IF_2
0x4010b39	        0x8b442408	                mov eax, dword [rsp + 8]	      7487	eval.c	FUNCTION_142	ELSE_1	IF_3
0x4010b3d	          0x83e803	                              sub eax, 3	      7487	eval.c	FUNCTION_142	ELSE_1	IF_3
0x4010b40	          0x83f801	                              cmp eax, 1	      7487	eval.c	FUNCTION_142	ELSE_1	IF_3
0x4010b43	     0xf86c6010000	                           jbe 0x4010d0f	      7487	eval.c	FUNCTION_142	ELSE_1	IF_3
0x4010b49	      0x837c240805	                  cmp dword [rsp + 8], 5	      7489	eval.c	FUNCTION_142	ELSE_2	IF_4
0x4010b4e	     0xf84dc010000	                            je 0x4010d30	      7489	eval.c	FUNCTION_142	ELSE_2	IF_4
0x4010b54	      0x837c240806	                  cmp dword [rsp + 8], 6	      7495	eval.c	FUNCTION_142	ELSE_3	IF_6
0x4010b59	     0xf847d010000	                            je 0x4010cdc	      7495	eval.c	FUNCTION_142	ELSE_3	IF_6
0x4010b5f	      0xbf20000000	                           mov edi, 0x20	      7502	eval.c	FUNCTION_142	CALL_10
0x4010b64	      0xe800000000	                          call 0x4010b69	      7502	eval.c	FUNCTION_142	CALL_10
0x4010b69	          0x4c89ef	                            mov rdi, r13	      7504	eval.c	FUNCTION_142	CALL_11
0x4010b6c	      0xe800000000	                          call 0x4010b71	      7504	eval.c	FUNCTION_142	CALL_11
0x4010b71	        0x8b742424	            mov esi, dword [rsp + 0x24] 	      7508	eval.c	FUNCTION_142	IF_9
0x4010b75	            0x85f6	                           test esi, esi	      7508	eval.c	FUNCTION_142	IF_9
0x4010b77	            0x740d	                            je 0x4010b86	      7508	eval.c	FUNCTION_142	IF_9
0x4010b79	      0xe800000000	                          call 0x4010b7e	      7510	eval.c	FUNCTION_142	IF_9	CALL_13
0x4010b7e	    0xc74424240000	               mov dword [rsp + 0x24], 0	      7511	eval.c	FUNCTION_142	IF_9
0x4010b86	       0xfb64c240f	            movzx ecx, byte [rsp + 0xf] 	      1648	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5
0x4010b8b	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1648	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5
0x4010b90	            0x8808	                      mov byte [rax], cl	      1648	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5
0x4010b92	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      1649	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5	CALL_24
0x4010b97	      0xe800000000	                          call 0x4010b9c	      1649	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	ELSE_5	CALL_24
0x4010b9c	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      1651	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	CALL_25
0x4010ba1	      0xe800000000	                          call 0x4010ba6	      1651	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	CALL_25
0x4010ba6	      0xe92efeffff	                           jmp 0x40109d9	      1651	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	CALL_25
0x4010bab	       0xf1f440000	                   nop dword [rax + rax]	      1651	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	CALL_25
0x4010bb0	        0x8b4c241c	            mov ecx, dword [rsp + 0x1c] 	      1651	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	CALL_25
0x4010bb4	        0x8b542420	            mov edx, dword [rsp + 0x20] 	      1651	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	CALL_25
0x4010bb8	      0x488d742440	                   lea rsi, [rsp + 0x40]	      1651	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	CALL_25
0x4010bbd	      0xe86ef9ffff	            call sym.ex_let_vars.part.15	      1651	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	CALL_25
0x4010bc2	      0xe9f1fcffff	                           jmp 0x40108b8	      1651	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	CALL_25
0x4010bc7	    0x660f1f840000	                    nop word [rax + rax]	      1651	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	CALL_25
0x4010bd0	      0x488d4c2424	                   lea rcx, [rsp + 0x24]	      1508	eval.c	FUNCTION_36	CALL_1
0x4010bd5	      0xba01000000	                              mov edx, 1	      1508	eval.c	FUNCTION_36	CALL_1
0x4010bda	      0xbe00000000	                              mov esi, 0	      1508	eval.c	FUNCTION_36	CALL_1
0x4010bdf	      0xbf00000000	                              mov edi, 0	      1508	eval.c	FUNCTION_36	CALL_1
0x4010be4	      0xe800000000	                          call 0x4010be9	      1508	eval.c	FUNCTION_36	CALL_1
0x4010be9	    0x488b05000000	            mov rax, qword [0x04010bf0] 	      1517	eval.c	FUNCTION_37	CALL_1
0x4010bf0	      0x488d4c2424	                   lea rcx, [rsp + 0x24]	      1517	eval.c	FUNCTION_37	CALL_1
0x4010bf5	      0xba01000000	                              mov edx, 1	      1517	eval.c	FUNCTION_37	CALL_1
0x4010bfa	      0xbe00000000	                              mov esi, 0	      1517	eval.c	FUNCTION_37	CALL_1
0x4010bff	    0x488bb8301700	          mov rdi, qword [rax + 0x1730] 	      1517	eval.c	FUNCTION_37	CALL_1
0x4010c06	        0x4883c710	                           add rdi, 0x10	      1517	eval.c	FUNCTION_37	CALL_1
0x4010c0a	      0xe800000000	                          call 0x4010c0f	      1517	eval.c	FUNCTION_37	CALL_1
0x4010c0f	    0x488b05000000	            mov rax, qword [0x04010c16] 	      1527	eval.c	FUNCTION_38	CALL_1
0x4010c16	      0x488d4c2424	                   lea rcx, [rsp + 0x24]	      1527	eval.c	FUNCTION_38	CALL_1
0x4010c1b	      0xba01000000	                              mov edx, 1	      1527	eval.c	FUNCTION_38	CALL_1
0x4010c20	      0xbe00000000	                              mov esi, 0	      1527	eval.c	FUNCTION_38	CALL_1
0x4010c25	    0x488bb8700500	           mov rdi, qword [rax + 0x570] 	      1527	eval.c	FUNCTION_38	CALL_1
0x4010c2c	        0x4883c710	                           add rdi, 0x10	      1527	eval.c	FUNCTION_38	CALL_1
0x4010c30	      0xe800000000	                          call 0x4010c35	      1527	eval.c	FUNCTION_38	CALL_1
0x4010c35	    0x488b05000000	            mov rax, qword [0x04010c3c] 	      1537	eval.c	FUNCTION_39	CALL_1
0x4010c3c	      0x488d4c2424	                   lea rcx, [rsp + 0x24]	      1537	eval.c	FUNCTION_39	CALL_1
0x4010c41	      0xba01000000	                              mov edx, 1	      1537	eval.c	FUNCTION_39	CALL_1
0x4010c46	      0xbe00000000	                              mov esi, 0	      1537	eval.c	FUNCTION_39	CALL_1
0x4010c4b	    0x488bb8d00000	            mov rdi, qword [rax + 0xd0] 	      1537	eval.c	FUNCTION_39	CALL_1
0x4010c52	        0x4883c710	                           add rdi, 0x10	      1537	eval.c	FUNCTION_39	CALL_1
0x4010c56	      0xe800000000	                          call 0x4010c5b	      1537	eval.c	FUNCTION_39	CALL_1
0x4010c5b	    0x486305000000	         movsxd rax, dword [0x04010c62] 	      1556	eval.c	FUNCTION_41	IF_1
0x4010c62	            0x85c0	                           test eax, eax	      1556	eval.c	FUNCTION_41	IF_1
0x4010c64	            0x7e29	                           jle 0x4010c8f	      1556	eval.c	FUNCTION_41	IF_1
0x4010c66	    0x3b0500000000	            cmp eax, dword [0x04010c6c] 	      1556	eval.c	FUNCTION_41	IF_1
0x4010c6c	            0x7f21	                            jg 0x4010c8f	      1556	eval.c	FUNCTION_41	IF_1
0x4010c6e	    0x488b15000000	            mov rdx, qword [0x04010c75] 	      1557	eval.c	FUNCTION_41	IF_1	CALL_1
0x4010c75	      0x488d4c2424	                   lea rcx, [rsp + 0x24]	      1557	eval.c	FUNCTION_41	IF_1	CALL_1
0x4010c7a	      0xbe00000000	                              mov esi, 0	      1557	eval.c	FUNCTION_41	IF_1	CALL_1
0x4010c7f	      0x488b7cc2f8	        mov rdi, qword [rdx + rax*8 - 8]	      1557	eval.c	FUNCTION_41	IF_1	CALL_1
0x4010c84	            0x31d2	                            xor edx, edx	      1557	eval.c	FUNCTION_41	IF_1	CALL_1
0x4010c86	        0x4883c728	                           add rdi, 0x28	      1557	eval.c	FUNCTION_41	IF_1	CALL_1
0x4010c8a	      0xe800000000	                          call 0x4010c8f	      1557	eval.c	FUNCTION_41	IF_1	CALL_1
0x4010c8f	      0x488d7c2424	                   lea rdi, [rsp + 0x24]	      1271	eval.c	FUNCTION_31	IF_3	ELSE_2	IF_6	CALL_13
0x4010c94	      0xe800000000	                          call 0x4010c99	      1271	eval.c	FUNCTION_31	IF_3	ELSE_2	IF_6	CALL_13
0x4010c99	      0x488d4c2424	                   lea rcx, [rsp + 0x24]	      1547	eval.c	FUNCTION_40	CALL_1
0x4010c9e	            0x31d2	                            xor edx, edx	      1547	eval.c	FUNCTION_40	CALL_1
0x4010ca0	      0xbe00000000	                              mov esi, 0	      1547	eval.c	FUNCTION_40	CALL_1
0x4010ca5	      0xbf00000000	                              mov edi, 0	      1547	eval.c	FUNCTION_40	CALL_1
0x4010caa	      0xe800000000	                          call 0x4010caf	      1547	eval.c	FUNCTION_40	CALL_1
0x4010caf	      0xe901fbffff	                           jmp 0x40107b5	      1547	eval.c	FUNCTION_40	CALL_1
0x4010cb4	            0x31ff	                            xor edi, edi	      1583	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_6
0x4010cb6	      0xba05000000	                              mov edx, 5	      1583	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_6
0x4010cbb	      0xbe00000000	                              mov esi, 0	      1583	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_6
0x4010cc0	    0xc70500000000	               mov dword [0x04010cca], 1	      1582	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2
0x4010cca	      0xe800000000	                          call 0x4010ccf	      1583	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_6
0x4010ccf	          0x4889c7	                            mov rdi, rax	      1583	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_6
0x4010cd2	      0xe800000000	                          call 0x4010cd7	      1583	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_6
0x4010cd7	      0xe984fdffff	                           jmp 0x4010a60	      1583	eval.c	FUNCTION_42	WHILE_1	IF_1	IF_2	CALL_6
0x4010cdc	      0xbf7b000000	                           mov edi, 0x7b	      7497	eval.c	FUNCTION_142	ELSE_3	IF_6	CALL_9
0x4010ce1	      0xe800000000	                          call 0x4010ce6	      7497	eval.c	FUNCTION_142	ELSE_3	IF_6	CALL_9
0x4010ce6	            0x31c0	                            xor eax, eax	      7499	eval.c	FUNCTION_142	ELSE_3	IF_6	IF_7
0x4010ce8	      0x41807d007b	                    cmp byte [r13], 0x7b	      7499	eval.c	FUNCTION_142	ELSE_3	IF_6	IF_7
0x4010ced	           0xf94c0	                                 sete al	      7499	eval.c	FUNCTION_142	ELSE_3	IF_6	IF_7
0x4010cf0	          0x4901c5	                            add r13, rax	      7499	eval.c	FUNCTION_142	ELSE_3	IF_6	IF_7
0x4010cf3	      0xe971feffff	                           jmp 0x4010b69	      7499	eval.c	FUNCTION_142	ELSE_3	IF_6	IF_7
0x4010cf8	      0xbf23000000	                           mov edi, 0x23	      7486	eval.c	FUNCTION_142	CALL_6
0x4010cfd	      0xe800000000	                          call 0x4010d02	      7486	eval.c	FUNCTION_142	CALL_6
0x4010d02	          0x4c89ef	                            mov rdi, r13	      7504	eval.c	FUNCTION_142	CALL_11
0x4010d05	      0xe800000000	                          call 0x4010d0a	      7504	eval.c	FUNCTION_142	CALL_11
0x4010d0a	      0xe962feffff	                           jmp 0x4010b71	      7504	eval.c	FUNCTION_142	CALL_11
0x4010d0f	      0xbf2a000000	                           mov edi, 0x2a	      7488	eval.c	FUNCTION_142	ELSE_1	IF_3
0x4010d14	      0xe800000000	                          call 0x4010d19	      7488	eval.c	FUNCTION_142	ELSE_1	IF_3
0x4010d19	          0x4c89ef	                            mov rdi, r13	      7504	eval.c	FUNCTION_142	CALL_11
0x4010d1c	      0xe800000000	                          call 0x4010d21	      7504	eval.c	FUNCTION_142	CALL_11
0x4010d21	      0xbf00000000	                              mov edi, 0	      7507	eval.c	FUNCTION_142	CALL_12
0x4010d26	      0xe800000000	                          call 0x4010d2b	      7507	eval.c	FUNCTION_142	CALL_12
0x4010d2b	      0xe941feffff	                           jmp 0x4010b71	      7507	eval.c	FUNCTION_142	CALL_12
0x4010d30	      0xbf5b000000	                           mov edi, 0x5b	      7491	eval.c	FUNCTION_142	ELSE_2	IF_4	CALL_8
0x4010d35	      0xe800000000	                          call 0x4010d3a	      7491	eval.c	FUNCTION_142	ELSE_2	IF_4	CALL_8
0x4010d3a	            0x31c0	                            xor eax, eax	      7493	eval.c	FUNCTION_142	ELSE_2	IF_4	IF_5
0x4010d3c	      0x41807d005b	                    cmp byte [r13], 0x5b	      7493	eval.c	FUNCTION_142	ELSE_2	IF_4	IF_5
0x4010d41	           0xf94c0	                                 sete al	      7493	eval.c	FUNCTION_142	ELSE_2	IF_4	IF_5
0x4010d44	          0x4901c5	                            add r13, rax	      7493	eval.c	FUNCTION_142	ELSE_2	IF_4	IF_5
0x4010d47	      0xe91dfeffff	                           jmp 0x4010b69	      7493	eval.c	FUNCTION_142	ELSE_2	IF_4	IF_5
0x4010d4c	      0x41807e013a	                cmp byte [r14 + 1], 0x3a	      1618	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8
0x4010d51	     0xf8550fdffff	                           jne 0x4010aa7	      1618	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8
0x4010d57	        0x410fb606	                   movzx eax, byte [r14]	      1620	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1
0x4010d5b	          0x83e862	                           sub eax, 0x62	      1620	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1
0x4010d5e	            0x3c15	                            cmp al, 0x15	      1620	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1
0x4010d60	     0xf8719010000	                            ja 0x4010e7f	      1620	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1
0x4010d66	           0xfb6c0	                           movzx eax, al	      1620	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1
0x4010d69	    0xff24c5000000	                       jmp qword [rax*8]	      1620	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1
0x4010d70	    0x488b05000000	            mov rax, qword [0x04010d77] 	      1527	eval.c	FUNCTION_38	CALL_1
0x4010d77	      0x488d4c2424	                   lea rcx, [rsp + 0x24]	      1527	eval.c	FUNCTION_38	CALL_1
0x4010d7c	      0xba01000000	                              mov edx, 1	      1527	eval.c	FUNCTION_38	CALL_1
0x4010d81	      0xbe00000000	                              mov esi, 0	      1527	eval.c	FUNCTION_38	CALL_1
0x4010d86	    0x488bb8700500	           mov rdi, qword [rax + 0x570] 	      1527	eval.c	FUNCTION_38	CALL_1
0x4010d8d	        0x4883c710	                           add rdi, 0x10	      1527	eval.c	FUNCTION_38	CALL_1
0x4010d91	      0xe800000000	                          call 0x4010d96	      1527	eval.c	FUNCTION_38	CALL_1
0x4010d96	      0xe901feffff	                           jmp 0x4010b9c	      1527	eval.c	FUNCTION_38	CALL_1
0x4010d9b	      0x488d4c2424	                   lea rcx, [rsp + 0x24]	      1547	eval.c	FUNCTION_40	CALL_1
0x4010da0	            0x31d2	                            xor edx, edx	      1547	eval.c	FUNCTION_40	CALL_1
0x4010da2	      0xbe00000000	                              mov esi, 0	      1547	eval.c	FUNCTION_40	CALL_1
0x4010da7	      0xbf00000000	                              mov edi, 0	      1547	eval.c	FUNCTION_40	CALL_1
0x4010dac	      0xe800000000	                          call 0x4010db1	      1547	eval.c	FUNCTION_40	CALL_1
0x4010db1	      0xe9e6fdffff	                           jmp 0x4010b9c	      1547	eval.c	FUNCTION_40	CALL_1
0x4010db6	    0x488b05000000	            mov rax, qword [0x04010dbd] 	      1537	eval.c	FUNCTION_39	CALL_1
0x4010dbd	      0x488d4c2424	                   lea rcx, [rsp + 0x24]	      1537	eval.c	FUNCTION_39	CALL_1
0x4010dc2	      0xba01000000	                              mov edx, 1	      1537	eval.c	FUNCTION_39	CALL_1
0x4010dc7	      0xbe00000000	                              mov esi, 0	      1537	eval.c	FUNCTION_39	CALL_1
0x4010dcc	    0x488bb8d00000	            mov rdi, qword [rax + 0xd0] 	      1537	eval.c	FUNCTION_39	CALL_1
0x4010dd3	        0x4883c710	                           add rdi, 0x10	      1537	eval.c	FUNCTION_39	CALL_1
0x4010dd7	      0xe800000000	                          call 0x4010ddc	      1537	eval.c	FUNCTION_39	CALL_1
0x4010ddc	      0xe9bbfdffff	                           jmp 0x4010b9c	      1537	eval.c	FUNCTION_39	CALL_1
0x4010de1	    0x486305000000	         movsxd rax, dword [0x04010de8] 	      1556	eval.c	FUNCTION_41	IF_1
0x4010de8	            0x85c0	                           test eax, eax	      1556	eval.c	FUNCTION_41	IF_1
0x4010dea	     0xf8eacfdffff	                           jle 0x4010b9c	      1556	eval.c	FUNCTION_41	IF_1
0x4010df0	    0x3b0500000000	            cmp eax, dword [0x04010df6] 	      1556	eval.c	FUNCTION_41	IF_1
0x4010df6	     0xf8fa0fdffff	                            jg 0x4010b9c	      1556	eval.c	FUNCTION_41	IF_1
0x4010dfc	    0x488b15000000	            mov rdx, qword [0x04010e03] 	      1557	eval.c	FUNCTION_41	IF_1	CALL_1
0x4010e03	      0x488d4c2424	                   lea rcx, [rsp + 0x24]	      1557	eval.c	FUNCTION_41	IF_1	CALL_1
0x4010e08	      0xbe00000000	                              mov esi, 0	      1557	eval.c	FUNCTION_41	IF_1	CALL_1
0x4010e0d	      0x488b7cc2f8	        mov rdi, qword [rdx + rax*8 - 8]	      1557	eval.c	FUNCTION_41	IF_1	CALL_1
0x4010e12	            0x31d2	                            xor edx, edx	      1557	eval.c	FUNCTION_41	IF_1	CALL_1
0x4010e14	        0x4883c728	                           add rdi, 0x28	      1557	eval.c	FUNCTION_41	IF_1	CALL_1
0x4010e18	      0xe800000000	                          call 0x4010e1d	      1557	eval.c	FUNCTION_41	IF_1	CALL_1
0x4010e1d	      0xe97afdffff	                           jmp 0x4010b9c	      1557	eval.c	FUNCTION_41	IF_1	CALL_1
0x4010e22	      0x488d7c2424	                   lea rdi, [rsp + 0x24]	      1628	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1	CALL_19
0x4010e27	      0xe800000000	                          call 0x4010e2c	      1628	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1	CALL_19
0x4010e2c	      0xe96bfdffff	                           jmp 0x4010b9c	      1628	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1	CALL_19
0x4010e31	      0x488d4c2424	                   lea rcx, [rsp + 0x24]	      1508	eval.c	FUNCTION_36	CALL_1
0x4010e36	      0xba01000000	                              mov edx, 1	      1508	eval.c	FUNCTION_36	CALL_1
0x4010e3b	      0xbe00000000	                              mov esi, 0	      1508	eval.c	FUNCTION_36	CALL_1
0x4010e40	      0xbf00000000	                              mov edi, 0	      1508	eval.c	FUNCTION_36	CALL_1
0x4010e45	      0xe800000000	                          call 0x4010e4a	      1508	eval.c	FUNCTION_36	CALL_1
0x4010e4a	      0xe94dfdffff	                           jmp 0x4010b9c	      1508	eval.c	FUNCTION_36	CALL_1
0x4010e4f	    0x488b05000000	            mov rax, qword [0x04010e56] 	      1517	eval.c	FUNCTION_37	CALL_1
0x4010e56	      0x488d4c2424	                   lea rcx, [rsp + 0x24]	      1517	eval.c	FUNCTION_37	CALL_1
0x4010e5b	      0xba01000000	                              mov edx, 1	      1517	eval.c	FUNCTION_37	CALL_1
0x4010e60	      0xbe00000000	                              mov esi, 0	      1517	eval.c	FUNCTION_37	CALL_1
0x4010e65	    0x488bb8301700	          mov rdi, qword [rax + 0x1730] 	      1517	eval.c	FUNCTION_37	CALL_1
0x4010e6c	        0x4883c710	                           add rdi, 0x10	      1517	eval.c	FUNCTION_37	CALL_1
0x4010e70	      0xe800000000	                          call 0x4010e75	      1517	eval.c	FUNCTION_37	CALL_1
0x4010e75	      0xe922fdffff	                           jmp 0x4010b9c	      1517	eval.c	FUNCTION_37	CALL_1
0x4010e7a	      0xe800000000	                          call 0x4010e7f	      1305	eval.c	FUNCTION_31
0x4010e7f	            0x31ff	                            xor edi, edi	      1630	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1	CALL_21
0x4010e81	      0xba05000000	                              mov edx, 5	      1630	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1	CALL_21
0x4010e86	      0xbe00000000	                              mov esi, 0	      1630	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1	CALL_21
0x4010e8b	      0xe800000000	                          call 0x4010e90	      1630	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1	CALL_21
0x4010e90	          0x4c89f6	                            mov rsi, r14	      1630	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1	CALL_21
0x4010e93	          0x4889c7	                            mov rdi, rax	      1630	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1	CALL_21
0x4010e96	      0xe800000000	                          call 0x4010e9b	      1630	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1	CALL_21
0x4010e9b	      0xe9fcfcffff	                           jmp 0x4010b9c	      1630	eval.c	FUNCTION_42	WHILE_1	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_8	SWITCH_1	CALL_21
garbage_collect	functions,0:SWITCH,0:IF,4:DO,0:ELSE,1:WHILE,0:CALL,28:FOR,1	292
0x4001d30	            0x4157	                                push r15	      5084	eval.c	FUNCTION_81
0x4001d32	            0x4156	                                push r14	      5084	eval.c	FUNCTION_81
0x4001d34	            0x4155	                                push r13	      5084	eval.c	FUNCTION_81
0x4001d36	            0x4154	                                push r12	      5084	eval.c	FUNCTION_81
0x4001d38	          0x4189fd	                           mov r13d, edi	      5084	eval.c	FUNCTION_81
0x4001d3b	              0x55	                                push rbp	      5084	eval.c	FUNCTION_81
0x4001d3c	              0x53	                                push rbx	      5084	eval.c	FUNCTION_81
0x4001d3d	        0x4883ec18	                           sub rsp, 0x18	      5084	eval.c	FUNCTION_81
0x4001d41	    0x64488b042528	                mov rax, qword fs:[0x28]	      5084	eval.c	FUNCTION_81
0x4001d4a	      0x4889442408	                mov qword [rsp + 8], rax	      5084	eval.c	FUNCTION_81
0x4001d4f	            0x31c0	                            xor eax, eax	      5084	eval.c	FUNCTION_81
0x4001d51	            0x85ff	                           test edi, edi	      5093	eval.c	FUNCTION_81	IF_1
0x4001d53	            0x751e	                           jne 0x4001d73	      5093	eval.c	FUNCTION_81	IF_1
0x4001d55	    0xc70500000000	               mov dword [0x04001d5f], 0	      5096	eval.c	FUNCTION_81	IF_1
0x4001d5f	    0xc70500000000	               mov dword [0x04001d69], 0	      5097	eval.c	FUNCTION_81	IF_1
0x4001d69	    0xc70500000000	               mov dword [0x04001d73], 0	      5098	eval.c	FUNCTION_81	IF_1
0x4001d73	    0x8b0500000000	            mov eax, dword [0x04001d79] 	      5053	eval.c	FUNCTION_80
0x4001d79	            0x31db	                            xor ebx, ebx	      5113	eval.c	FUNCTION_81	CALL_2
0x4001d7b	          0x8d6802	                      lea ebp, [rax + 2]	      5053	eval.c	FUNCTION_80
0x4001d7e	            0x89ef	                            mov edi, ebp	      5113	eval.c	FUNCTION_81	CALL_2
0x4001d80	    0x892d00000000	            mov dword [0x04001d86], ebp 	      5053	eval.c	FUNCTION_80
0x4001d86	      0xe800000000	                          call 0x4001d8b	      5113	eval.c	FUNCTION_81	CALL_2
0x4001d8b	    0x8b1500000000	            mov edx, dword [0x04001d91] 	      5116	eval.c	FUNCTION_81	FOR_1
0x4001d91	            0x85c0	                           test eax, eax	      5113	eval.c	FUNCTION_81	CALL_2
0x4001d93	           0xf95c3	                                setne bl	      5113	eval.c	FUNCTION_81	CALL_2
0x4001d96	            0x85d2	                           test edx, edx	      5116	eval.c	FUNCTION_81	FOR_1
0x4001d98	     0xf8ec8000000	                           jle 0x4001e66	      5116	eval.c	FUNCTION_81	FOR_1
0x4001d9e	          0x4531e4	                          xor r12d, r12d	      5116	eval.c	FUNCTION_81	FOR_1
0x4001da1	            0xeb1b	                           jmp 0x4001dbe	      5116	eval.c	FUNCTION_81	FOR_1
0x4001da3	       0xf1f440000	                   nop dword [rax + rax]	      5116	eval.c	FUNCTION_81	FOR_1
0x4001da8	      0x418d442402	                      lea eax, [r12 + 2]	      5116	eval.c	FUNCTION_81	FOR_1
0x4001dad	        0x4983c401	                              add r12, 1	      5116	eval.c	FUNCTION_81	FOR_1
0x4001db1	      0xbb01000000	                              mov ebx, 1	      5117	eval.c	FUNCTION_81	CALL_3
0x4001db6	            0x39c2	                            cmp edx, eax	      5116	eval.c	FUNCTION_81	FOR_1
0x4001db8	     0xf8ca8000000	                            jl 0x4001e66	      5116	eval.c	FUNCTION_81	FOR_1
0x4001dbe	            0x85db	                           test ebx, ebx	      5117	eval.c	FUNCTION_81	CALL_3
0x4001dc0	            0x75e6	                           jne 0x4001da8	      5117	eval.c	FUNCTION_81	CALL_3
0x4001dc2	    0x488b05000000	            mov rax, qword [0x04001dc9] 	      5117	eval.c	FUNCTION_81	CALL_3
0x4001dc9	        0x4e8b34e0	            mov r14, qword [rax + r12*8]	      5117	eval.c	FUNCTION_81	CALL_3
0x4001dcd	    0x48c704240000	                      mov qword [rsp], 0	      5272	eval.c	FUNCTION_83
0x4001dd5	        0x4983c628	                           add r14, 0x28	      5117	eval.c	FUNCTION_81	CALL_3
0x4001dd9	            0x85db	                           test ebx, ebx	      5278	eval.c	FUNCTION_83	FOR_1	IF_1
0x4001ddb	            0x7564	                           jne 0x4001e41	      5278	eval.c	FUNCTION_83	FOR_1	IF_1
0x4001ddd	           0xf1f00	                         nop dword [rax]	      5278	eval.c	FUNCTION_83	FOR_1	IF_1
0x4001de0	        0x498b4608	                mov rax, qword [r14 + 8]	      5283	eval.c	FUNCTION_83	FOR_1	IF_1
0x4001de4	        0x4d8b7620	            mov r14, qword [r14 + 0x20] 	      5284	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2
0x4001de8	            0x85c0	                           test eax, eax	      5284	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2
0x4001dea	          0x4189c7	                           mov r15d, eax	      5283	eval.c	FUNCTION_83	FOR_1	IF_1
0x4001ded	            0x7e35	                           jle 0x4001e24	      5284	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2
0x4001def	              0x90	                                     nop	      5284	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2
0x4001df0	        0x498b7e08	                mov rdi, qword [r14 + 8]	      5285	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0x4001df4	          0x4885ff	                           test rdi, rdi	      5285	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0x4001df7	     0xf8433010000	                            je 0x4001f30	      5285	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0x4001dfd	    0x4881ff000000	                              cmp rdi, 0	      5285	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0x4001e04	     0xf8426010000	                            je 0x4001f30	      5285	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0x4001e0a	        0x4183ef01	                             sub r15d, 1	      5287	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2
0x4001e0e	            0x85db	                           test ebx, ebx	      5288	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_3
0x4001e10	     0xf84fa000000	                            je 0x4001f10	      5288	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_3
0x4001e16	      0xbb01000000	                              mov ebx, 1	      5288	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_3
0x4001e1b	        0x4983c610	                           add r14, 0x10	      5284	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2
0x4001e1f	          0x4585ff	                         test r15d, r15d	      5284	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2
0x4001e22	            0x75cc	                           jne 0x4001df0	      5284	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2
0x4001e24	        0x488b3c24	                    mov rdi, qword [rsp]	      5293	eval.c	FUNCTION_83	FOR_1	IF_3
0x4001e28	          0x4885ff	                           test rdi, rdi	      5293	eval.c	FUNCTION_83	FOR_1	IF_3
0x4001e2b	            0x7422	                            je 0x4001e4f	      5293	eval.c	FUNCTION_83	FOR_1	IF_3
0x4001e2d	        0x488b4708	                mov rax, qword [rdi + 8]	      5299	eval.c	FUNCTION_83	FOR_1
0x4001e31	          0x4c8b37	                    mov r14, qword [rdi]	      5297	eval.c	FUNCTION_83	FOR_1
0x4001e34	        0x48890424	                    mov qword [rsp], rax	      5299	eval.c	FUNCTION_83	FOR_1
0x4001e38	      0xe800000000	                          call 0x4001e3d	      5300	eval.c	FUNCTION_83	FOR_1	CALL_4
0x4001e3d	            0x85db	                           test ebx, ebx	      5278	eval.c	FUNCTION_83	FOR_1	IF_1
0x4001e3f	            0x749f	                            je 0x4001de0	      5278	eval.c	FUNCTION_83	FOR_1	IF_1
0x4001e41	        0x488b3c24	                    mov rdi, qword [rsp]	      5293	eval.c	FUNCTION_83	FOR_1	IF_3
0x4001e45	      0xbb01000000	                              mov ebx, 1	      5278	eval.c	FUNCTION_83	FOR_1	IF_1
0x4001e4a	          0x4885ff	                           test rdi, rdi	      5293	eval.c	FUNCTION_83	FOR_1	IF_3
0x4001e4d	            0x75de	                           jne 0x4001e2d	      5293	eval.c	FUNCTION_83	FOR_1	IF_3
0x4001e4f	    0x8b1500000000	            mov edx, dword [0x04001e55] 	      5293	eval.c	FUNCTION_83	FOR_1	IF_3
0x4001e55	      0x418d442402	                      lea eax, [r12 + 2]	      5293	eval.c	FUNCTION_83	FOR_1	IF_3
0x4001e5a	        0x4983c401	                              add r12, 1	      5293	eval.c	FUNCTION_83	FOR_1	IF_3
0x4001e5e	            0x39c2	                            cmp edx, eax	      5116	eval.c	FUNCTION_81	FOR_1
0x4001e60	     0xf8d58ffffff	                           jge 0x4001dbe	      5116	eval.c	FUNCTION_81	FOR_1
0x4001e66	    0x4c8b25000000	            mov r12, qword [0x04001e6d] 	      5120	eval.c	FUNCTION_81	CALL_4
0x4001e6d	          0x4d85e4	                           test r12, r12	      5120	eval.c	FUNCTION_81	CALL_4
0x4001e70	            0x7515	                           jne 0x4001e87	      5120	eval.c	FUNCTION_81	CALL_4
0x4001e72	            0xeb3b	                           jmp 0x4001eaf	      5120	eval.c	FUNCTION_81	CALL_4
0x4001e74	         0xf1f4000	                         nop dword [rax]	      5120	eval.c	FUNCTION_81	CALL_4
0x4001e78	      0x4d8b642468	            mov r12, qword [r12 + 0x68] 	      5120	eval.c	FUNCTION_81	CALL_4
0x4001e7d	      0xbb01000000	                              mov ebx, 1	      5121	eval.c	FUNCTION_81	CALL_5
0x4001e82	          0x4d85e4	                           test r12, r12	      5120	eval.c	FUNCTION_81	CALL_4
0x4001e85	            0x7428	                            je 0x4001eaf	      5120	eval.c	FUNCTION_81	CALL_4
0x4001e87	            0x85db	                           test ebx, ebx	      5121	eval.c	FUNCTION_81	CALL_5
0x4001e89	            0x75ed	                           jne 0x4001e78	      5121	eval.c	FUNCTION_81	CALL_5
0x4001e8b	    0x498dbc241817	                 lea rdi, [r12 + 0x1718]	      5121	eval.c	FUNCTION_81	CALL_5
0x4001e93	            0x31c9	                            xor ecx, ecx	      5121	eval.c	FUNCTION_81	CALL_5
0x4001e95	            0x31d2	                            xor edx, edx	      5121	eval.c	FUNCTION_81	CALL_5
0x4001e97	            0x89ee	                            mov esi, ebp	      5121	eval.c	FUNCTION_81	CALL_5
0x4001e99	            0x31db	                            xor ebx, ebx	      5121	eval.c	FUNCTION_81	CALL_5
0x4001e9b	      0xe800000000	                          call 0x4001ea0	      5121	eval.c	FUNCTION_81	CALL_5
0x4001ea0	      0x4d8b642468	            mov r12, qword [r12 + 0x68] 	      5120	eval.c	FUNCTION_81	CALL_4
0x4001ea5	            0x85c0	                           test eax, eax	      5121	eval.c	FUNCTION_81	CALL_5
0x4001ea7	           0xf95c3	                                setne bl	      5121	eval.c	FUNCTION_81	CALL_5
0x4001eaa	          0x4d85e4	                           test r12, r12	      5120	eval.c	FUNCTION_81	CALL_4
0x4001ead	            0x75d8	                           jne 0x4001e87	      5120	eval.c	FUNCTION_81	CALL_4
0x4001eaf	    0x4c8b35000000	            mov r14, qword [0x04001eb6] 	      5125	eval.c	FUNCTION_81	CALL_6
0x4001eb6	          0x4d85f6	                           test r14, r14	      5125	eval.c	FUNCTION_81	CALL_6
0x4001eb9	     0xf846e020000	                            je 0x400212d	      5125	eval.c	FUNCTION_81	CALL_6
0x4001ebf	              0x90	                                     nop	      5125	eval.c	FUNCTION_81	CALL_6
0x4001ec0	    0x4c3935000000	            cmp qword [0x04001ec7], r14 	      5125	eval.c	FUNCTION_81	CALL_6
0x4001ec7	     0xf8436010000	                            je 0x4002003	      5125	eval.c	FUNCTION_81	CALL_6
0x4001ecd	        0x4d8b6620	            mov r12, qword [r14 + 0x20] 	      5125	eval.c	FUNCTION_81	CALL_6
0x4001ed1	            0xeb0f	                           jmp 0x4001ee2	      5125	eval.c	FUNCTION_81	CALL_6
0x4001ed3	       0xf1f440000	                   nop dword [rax + rax]	      5125	eval.c	FUNCTION_81	CALL_6
0x4001ed8	      0xbb01000000	                              mov ebx, 1	      5126	eval.c	FUNCTION_81	CALL_7
0x4001edd	      0x4d8b642420	            mov r12, qword [r12 + 0x20] 	      5125	eval.c	FUNCTION_81	CALL_6
0x4001ee2	          0x4d85e4	                           test r12, r12	      5125	eval.c	FUNCTION_81	CALL_6
0x4001ee5	            0x7459	                            je 0x4001f40	      5125	eval.c	FUNCTION_81	CALL_6
0x4001ee7	            0x85db	                           test ebx, ebx	      5126	eval.c	FUNCTION_81	CALL_7
0x4001ee9	            0x75ed	                           jne 0x4001ed8	      5126	eval.c	FUNCTION_81	CALL_7
0x4001eeb	    0x498dbc245805	                  lea rdi, [r12 + 0x558]	      5126	eval.c	FUNCTION_81	CALL_7
0x4001ef3	            0x31c9	                            xor ecx, ecx	      5126	eval.c	FUNCTION_81	CALL_7
0x4001ef5	            0x31d2	                            xor edx, edx	      5126	eval.c	FUNCTION_81	CALL_7
0x4001ef7	            0x89ee	                            mov esi, ebp	      5126	eval.c	FUNCTION_81	CALL_7
0x4001ef9	            0x31db	                            xor ebx, ebx	      5126	eval.c	FUNCTION_81	CALL_7
0x4001efb	      0xe800000000	                          call 0x4001f00	      5126	eval.c	FUNCTION_81	CALL_7
0x4001f00	            0x85c0	                           test eax, eax	      5126	eval.c	FUNCTION_81	CALL_7
0x4001f02	           0xf95c3	                                setne bl	      5126	eval.c	FUNCTION_81	CALL_7
0x4001f05	            0xebd6	                           jmp 0x4001edd	      5126	eval.c	FUNCTION_81	CALL_7
0x4001f07	    0x660f1f840000	                    nop word [rax + rax]	      5126	eval.c	FUNCTION_81	CALL_7
0x4001f10	        0x4883ef11	                           sub rdi, 0x11	      5288	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_3
0x4001f14	            0x31c9	                            xor ecx, ecx	      5288	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_3
0x4001f16	          0x4889e2	                            mov rdx, rsp	      5288	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_3
0x4001f19	            0x89ee	                            mov esi, ebp	      5288	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_3
0x4001f1b	            0x31db	                            xor ebx, ebx	      5288	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_3
0x4001f1d	      0xe800000000	                          call 0x4001f22	      5288	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_3
0x4001f22	            0x85c0	                           test eax, eax	      5288	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_3
0x4001f24	           0xf95c3	                                setne bl	      5288	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_3
0x4001f27	      0xe9effeffff	                           jmp 0x4001e1b	      5288	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_3
0x4001f2c	         0xf1f4000	                         nop dword [rax]	      5288	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2	IF_2	CALL_3
0x4001f30	        0x4983c610	                           add r14, 0x10	      5284	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2
0x4001f34	      0xe9b7feffff	                           jmp 0x4001df0	      5284	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2
0x4001f39	     0xf1f80000000	                         nop dword [rax]	      5284	eval.c	FUNCTION_83	FOR_1	IF_1	FOR_2
0x4001f40	          0x4d8b36	                    mov r14, qword [r14]	      5125	eval.c	FUNCTION_81	CALL_6
0x4001f43	          0x4d85f6	                           test r14, r14	      5125	eval.c	FUNCTION_81	CALL_6
0x4001f46	     0xf8574ffffff	                           jne 0x4001ec0	      5125	eval.c	FUNCTION_81	CALL_6
0x4001f4c	    0x488b05000000	            mov rax, qword [0x04001f53] 	      5128	eval.c	FUNCTION_81	IF_2
0x4001f53	          0x4885c0	                           test rax, rax	      5128	eval.c	FUNCTION_81	IF_2
0x4001f56	     0xf8402020000	                            je 0x400215e	      5128	eval.c	FUNCTION_81	IF_2
0x4001f5c	            0x85db	                           test ebx, ebx	      5129	eval.c	FUNCTION_81	IF_2	CALL_8
0x4001f5e	     0xf84e1010000	                            je 0x4002145	      5129	eval.c	FUNCTION_81	IF_2	CALL_8
0x4001f64	    0x4c8b25000000	            mov r12, qword [0x04001f6b] 	      5133	eval.c	FUNCTION_81	CALL_9
0x4001f6b	          0x4d85e4	                           test r12, r12	      5133	eval.c	FUNCTION_81	CALL_9
0x4001f6e	            0x7449	                            je 0x4001fb9	      5133	eval.c	FUNCTION_81	CALL_9
0x4001f70	      0xbb01000000	                              mov ebx, 1	      5129	eval.c	FUNCTION_81	IF_2	CALL_8
0x4001f75	            0xeb17	                           jmp 0x4001f8e	      5129	eval.c	FUNCTION_81	IF_2	CALL_8
0x4001f77	    0x660f1f840000	                    nop word [rax + rax]	      5129	eval.c	FUNCTION_81	IF_2	CALL_8
0x4001f80	        0x4d8b2424	                    mov r12, qword [r12]	      5133	eval.c	FUNCTION_81	CALL_9
0x4001f84	      0xbb01000000	                              mov ebx, 1	      5134	eval.c	FUNCTION_81	CALL_10
0x4001f89	          0x4d85e4	                           test r12, r12	      5133	eval.c	FUNCTION_81	CALL_9
0x4001f8c	            0x7427	                            je 0x4001fb5	      5133	eval.c	FUNCTION_81	CALL_9
0x4001f8e	            0x85db	                           test ebx, ebx	      5134	eval.c	FUNCTION_81	CALL_10
0x4001f90	            0x75ee	                           jne 0x4001f80	      5134	eval.c	FUNCTION_81	CALL_10
0x4001f92	    0x498dbc24b800	                   lea rdi, [r12 + 0xb8]	      5134	eval.c	FUNCTION_81	CALL_10
0x4001f9a	            0x31c9	                            xor ecx, ecx	      5134	eval.c	FUNCTION_81	CALL_10
0x4001f9c	            0x31d2	                            xor edx, edx	      5134	eval.c	FUNCTION_81	CALL_10
0x4001f9e	            0x89ee	                            mov esi, ebp	      5134	eval.c	FUNCTION_81	CALL_10
0x4001fa0	            0x31db	                            xor ebx, ebx	      5134	eval.c	FUNCTION_81	CALL_10
0x4001fa2	      0xe800000000	                          call 0x4001fa7	      5134	eval.c	FUNCTION_81	CALL_10
0x4001fa7	        0x4d8b2424	                    mov r12, qword [r12]	      5133	eval.c	FUNCTION_81	CALL_9
0x4001fab	            0x85c0	                           test eax, eax	      5134	eval.c	FUNCTION_81	CALL_10
0x4001fad	           0xf95c3	                                setne bl	      5134	eval.c	FUNCTION_81	CALL_10
0x4001fb0	          0x4d85e4	                           test r12, r12	      5133	eval.c	FUNCTION_81	CALL_9
0x4001fb3	            0x75d9	                           jne 0x4001f8e	      5133	eval.c	FUNCTION_81	CALL_9
0x4001fb5	            0x85db	                           test ebx, ebx	      5137	eval.c	FUNCTION_81	CALL_11
0x4001fb7	            0x7456	                            je 0x400200f	      5137	eval.c	FUNCTION_81	CALL_11
0x4001fb9	    0x48833d000000	               cmp qword [0x04001fc1], 0	      5196	eval.c	FUNCTION_81	ELSE_1	IF_4
0x4001fc1	            0x7e19	                           jle 0x4001fdc	      5196	eval.c	FUNCTION_81	ELSE_1	IF_4
0x4001fc3	            0x31ff	                            xor edi, edi	      5198	eval.c	FUNCTION_81	ELSE_1	IF_4	CALL_28
0x4001fc5	      0xba05000000	                              mov edx, 5	      5198	eval.c	FUNCTION_81	ELSE_1	IF_4	CALL_28
0x4001fca	      0xbe00000000	                              mov esi, 0	      5198	eval.c	FUNCTION_81	ELSE_1	IF_4	CALL_28
0x4001fcf	      0xe800000000	                          call 0x4001fd4	      5198	eval.c	FUNCTION_81	ELSE_1	IF_4	CALL_28
0x4001fd4	          0x4889c7	                            mov rdi, rax	      5198	eval.c	FUNCTION_81	ELSE_1	IF_4	CALL_28
0x4001fd7	      0xe800000000	                          call 0x4001fdc	      5198	eval.c	FUNCTION_81	ELSE_1	IF_4	CALL_28
0x4001fdc	            0x31db	                            xor ebx, ebx	      5090	eval.c	FUNCTION_81
0x4001fde	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      5202	eval.c	FUNCTION_81
0x4001fe3	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      5202	eval.c	FUNCTION_81
0x4001fec	            0x89d8	                            mov eax, ebx	      5202	eval.c	FUNCTION_81
0x4001fee	     0xf857f010000	                           jne 0x4002173	      5202	eval.c	FUNCTION_81
0x4001ff4	        0x4883c418	                           add rsp, 0x18	      5202	eval.c	FUNCTION_81
0x4001ff8	              0x5b	                                 pop rbx	      5202	eval.c	FUNCTION_81
0x4001ff9	              0x5d	                                 pop rbp	      5202	eval.c	FUNCTION_81
0x4001ffa	            0x415c	                                 pop r12	      5202	eval.c	FUNCTION_81
0x4001ffc	            0x415d	                                 pop r13	      5202	eval.c	FUNCTION_81
0x4001ffe	            0x415e	                                 pop r14	      5202	eval.c	FUNCTION_81
0x4002000	            0x415f	                                 pop r15	      5202	eval.c	FUNCTION_81
0x4002002	              0xc3	                                     ret	      5202	eval.c	FUNCTION_81
0x4002003	    0x4c8b25000000	            mov r12, qword [0x0400200a] 	      5125	eval.c	FUNCTION_81	CALL_6
0x400200a	      0xe9d3feffff	                           jmp 0x4001ee2	      5125	eval.c	FUNCTION_81	CALL_6
0x400200f	            0x31d2	                            xor edx, edx	      5137	eval.c	FUNCTION_81	CALL_11
0x4002011	            0x89ee	                            mov esi, ebp	      5137	eval.c	FUNCTION_81	CALL_11
0x4002013	      0xbf00000000	                              mov edi, 0	      5137	eval.c	FUNCTION_81	CALL_11
0x4002018	      0xe800000000	                          call 0x400201d	      5137	eval.c	FUNCTION_81	CALL_11
0x400201d	            0x85c0	                           test eax, eax	      5137	eval.c	FUNCTION_81	CALL_11
0x400201f	            0x7598	                           jne 0x4001fb9	      5137	eval.c	FUNCTION_81	CALL_11
0x4002021	            0x89ef	                            mov edi, ebp	      5140	eval.c	FUNCTION_81	CALL_12
0x4002023	      0xe800000000	                          call 0x4002028	      5140	eval.c	FUNCTION_81	CALL_12
0x4002028	            0x85c0	                           test eax, eax	      5140	eval.c	FUNCTION_81	CALL_12
0x400202a	            0x758d	                           jne 0x4001fb9	      5140	eval.c	FUNCTION_81	CALL_12
0x400202c	            0x89ef	                            mov edi, ebp	      5143	eval.c	FUNCTION_81	CALL_13
0x400202e	      0xe800000000	                          call 0x4002033	      5143	eval.c	FUNCTION_81	CALL_13
0x4002033	            0x85c0	                           test eax, eax	      5143	eval.c	FUNCTION_81	CALL_13
0x4002035	            0x7582	                           jne 0x4001fb9	      5143	eval.c	FUNCTION_81	CALL_13
0x4002037	            0x89ef	                            mov edi, ebp	      5146	eval.c	FUNCTION_81	CALL_14
0x4002039	      0xe800000000	                          call 0x400203e	      5146	eval.c	FUNCTION_81	CALL_14
0x400203e	            0x85c0	                           test eax, eax	      5146	eval.c	FUNCTION_81	CALL_14
0x4002040	     0xf8573ffffff	                           jne 0x4001fb9	      5146	eval.c	FUNCTION_81	CALL_14
0x4002046	            0x31d2	                            xor edx, edx	      5149	eval.c	FUNCTION_81	CALL_15
0x4002048	            0x89ee	                            mov esi, ebp	      5149	eval.c	FUNCTION_81	CALL_15
0x400204a	      0xbf00000000	                              mov edi, 0	      5149	eval.c	FUNCTION_81	CALL_15
0x400204f	      0xe800000000	                          call 0x4002054	      5149	eval.c	FUNCTION_81	CALL_15
0x4002054	            0x85c0	                           test eax, eax	      5149	eval.c	FUNCTION_81	CALL_15
0x4002056	     0xf855dffffff	                           jne 0x4001fb9	      5149	eval.c	FUNCTION_81	CALL_15
0x400205c	            0x89ef	                            mov edi, ebp	      5164	eval.c	FUNCTION_81	CALL_19
0x400205e	      0xe800000000	                          call 0x4002063	      5164	eval.c	FUNCTION_81	CALL_19
0x4002063	            0x85c0	                           test eax, eax	      5164	eval.c	FUNCTION_81	CALL_19
0x4002065	     0xf854effffff	                           jne 0x4001fb9	      5164	eval.c	FUNCTION_81	CALL_19
0x400206b	            0x89ef	                            mov edi, ebp	      5165	eval.c	FUNCTION_81	CALL_20
0x400206d	      0xe800000000	                          call 0x4002072	      5165	eval.c	FUNCTION_81	CALL_20
0x4002072	            0x85c0	                           test eax, eax	      5165	eval.c	FUNCTION_81	CALL_20
0x4002074	     0xf853fffffff	                           jne 0x4001fb9	      5165	eval.c	FUNCTION_81	CALL_20
0x400207a	            0x89ef	                            mov edi, ebp	      5168	eval.c	FUNCTION_81	CALL_21
0x400207c	      0xe800000000	                          call 0x4002081	      5168	eval.c	FUNCTION_81	CALL_21
0x4002081	            0x85c0	                           test eax, eax	      5168	eval.c	FUNCTION_81	CALL_21
0x4002083	     0xf8530ffffff	                           jne 0x4001fb9	      5168	eval.c	FUNCTION_81	CALL_21
0x4002089	            0x89ef	                            mov edi, ebp	      5172	eval.c	FUNCTION_81	CALL_22
0x400208b	      0xe800000000	                          call 0x4002090	      5172	eval.c	FUNCTION_81	CALL_22
0x4002090	            0x85c0	                           test eax, eax	      5172	eval.c	FUNCTION_81	CALL_22
0x4002092	     0xf8521ffffff	                           jne 0x4001fb9	      5172	eval.c	FUNCTION_81	CALL_22
0x4002098	            0x89ef	                            mov edi, ebp	      5176	eval.c	FUNCTION_81	CALL_23
0x400209a	      0xe800000000	                          call 0x400209f	      5176	eval.c	FUNCTION_81	CALL_23
0x400209f	            0x85c0	                           test eax, eax	      5176	eval.c	FUNCTION_81	CALL_23
0x40020a1	     0xf8512ffffff	                           jne 0x4001fb9	      5176	eval.c	FUNCTION_81	CALL_23
0x40020a7	            0x89ef	                            mov edi, ebp	      5180	eval.c	FUNCTION_81	CALL_24
0x40020a9	      0xe800000000	                          call 0x40020ae	      5180	eval.c	FUNCTION_81	CALL_24
0x40020ae	            0x85c0	                           test eax, eax	      5180	eval.c	FUNCTION_81	CALL_24
0x40020b0	     0xf8503ffffff	                           jne 0x4001fb9	      5180	eval.c	FUNCTION_81	CALL_24
0x40020b6	            0x89ef	                            mov edi, ebp	      5223	eval.c	FUNCTION_82	CALL_1
0x40020b8	    0xc70500000000	               mov dword [0x040020c2], 1	      5215	eval.c	FUNCTION_82
0x40020c2	      0xe800000000	                          call 0x40020c7	      5223	eval.c	FUNCTION_82	CALL_1
0x40020c7	            0x89ef	                            mov edi, ebp	      5226	eval.c	FUNCTION_82	CALL_2
0x40020c9	            0x89c3	                            mov ebx, eax	      5223	eval.c	FUNCTION_82	CALL_1
0x40020cb	      0xe800000000	                          call 0x40020d0	      5226	eval.c	FUNCTION_82	CALL_2
0x40020d0	            0x89ef	                            mov edi, ebp	      5232	eval.c	FUNCTION_82	CALL_3
0x40020d2	      0xbefeffffff	                     mov esi, 0xfffffffe	      5232	eval.c	FUNCTION_82	CALL_3
0x40020d7	             0x9c3	                             or ebx, eax	      5226	eval.c	FUNCTION_82	CALL_2
0x40020d9	      0xe800000000	                          call 0x40020de	      5232	eval.c	FUNCTION_82	CALL_3
0x40020de	      0xbefeffffff	                     mov esi, 0xfffffffe	      5235	eval.c	FUNCTION_82	CALL_4
0x40020e3	            0x89ef	                            mov edi, ebp	      5235	eval.c	FUNCTION_82	CALL_4
0x40020e5	             0x9c3	                             or ebx, eax	      5232	eval.c	FUNCTION_82	CALL_3
0x40020e7	      0xe800000000	                          call 0x40020ec	      5235	eval.c	FUNCTION_82	CALL_4
0x40020ec	            0x89ef	                            mov edi, ebp	      5241	eval.c	FUNCTION_82	CALL_5
0x40020ee	             0x9c3	                             or ebx, eax	      5235	eval.c	FUNCTION_82	CALL_4
0x40020f0	      0xe800000000	                          call 0x40020f5	      5241	eval.c	FUNCTION_82	CALL_5
0x40020f5	            0x89ef	                            mov edi, ebp	      5242	eval.c	FUNCTION_82	CALL_6
0x40020f7	      0xe800000000	                          call 0x40020fc	      5242	eval.c	FUNCTION_82	CALL_6
0x40020fc	            0x89ef	                            mov edi, ebp	      5248	eval.c	FUNCTION_82	CALL_7
0x40020fe	      0xbefeffffff	                     mov esi, 0xfffffffe	      5248	eval.c	FUNCTION_82	CALL_7
0x4002103	      0xe800000000	                          call 0x4002108	      5248	eval.c	FUNCTION_82	CALL_7
0x4002108	            0x89ef	                            mov edi, ebp	      5251	eval.c	FUNCTION_82	CALL_8
0x400210a	      0xbefeffffff	                     mov esi, 0xfffffffe	      5251	eval.c	FUNCTION_82	CALL_8
0x400210f	      0xe800000000	                          call 0x4002114	      5251	eval.c	FUNCTION_82	CALL_8
0x4002114	          0x4489ee	                           mov esi, r13d	      5194	eval.c	FUNCTION_81	IF_3	CALL_26
0x4002117	            0x89ef	                            mov edi, ebp	      5194	eval.c	FUNCTION_81	IF_3	CALL_26
0x4002119	    0xc70500000000	               mov dword [0x04002123], 0	      5254	eval.c	FUNCTION_82
0x4002123	      0xe800000000	                          call 0x4002128	      5194	eval.c	FUNCTION_81	IF_3	CALL_26
0x4002128	      0xe9b1feffff	                           jmp 0x4001fde	      5194	eval.c	FUNCTION_81	IF_3	CALL_26
0x400212d	    0x488b05000000	            mov rax, qword [0x04002134] 	      5128	eval.c	FUNCTION_81	IF_2
0x4002134	          0x4885c0	                           test rax, rax	      5128	eval.c	FUNCTION_81	IF_2
0x4002137	     0xf8478feffff	                            je 0x4001fb5	      5128	eval.c	FUNCTION_81	IF_2
0x400213d	            0x85db	                           test ebx, ebx	      5129	eval.c	FUNCTION_81	IF_2	CALL_8
0x400213f	     0xf8574feffff	                           jne 0x4001fb9	      5129	eval.c	FUNCTION_81	IF_2	CALL_8
0x4002145	    0x488db8580500	                  lea rdi, [rax + 0x558]	      5129	eval.c	FUNCTION_81	IF_2	CALL_8
0x400214c	            0x31c9	                            xor ecx, ecx	      5129	eval.c	FUNCTION_81	IF_2	CALL_8
0x400214e	            0x31d2	                            xor edx, edx	      5129	eval.c	FUNCTION_81	IF_2	CALL_8
0x4002150	            0x89ee	                            mov esi, ebp	      5129	eval.c	FUNCTION_81	IF_2	CALL_8
0x4002152	            0x31db	                            xor ebx, ebx	      5129	eval.c	FUNCTION_81	IF_2	CALL_8
0x4002154	      0xe800000000	                          call 0x4002159	      5129	eval.c	FUNCTION_81	IF_2	CALL_8
0x4002159	            0x85c0	                           test eax, eax	      5129	eval.c	FUNCTION_81	IF_2	CALL_8
0x400215b	           0xf95c3	                                setne bl	      5129	eval.c	FUNCTION_81	IF_2	CALL_8
0x400215e	    0x4c8b25000000	            mov r12, qword [0x04002165] 	      5133	eval.c	FUNCTION_81	CALL_9
0x4002165	          0x4d85e4	                           test r12, r12	      5133	eval.c	FUNCTION_81	CALL_9
0x4002168	     0xf8520feffff	                           jne 0x4001f8e	      5133	eval.c	FUNCTION_81	CALL_9
0x400216e	      0xe942feffff	                           jmp 0x4001fb5	      5133	eval.c	FUNCTION_81	CALL_9
0x4002173	      0xe800000000	                          call 0x4002178	      5202	eval.c	FUNCTION_81
var_exists	functions,0:SWITCH,0:IF,5:DO,0:ELSE,0:WHILE,0:CALL,5:FOR,0	150
0x4012590	            0x4155	                                push r13	      9412	eval.c	FUNCTION_183
0x4012592	            0x4154	                                push r12	      9412	eval.c	FUNCTION_183
0x4012594	      0xba01000000	                              mov edx, 1	      9421	eval.c	FUNCTION_183	CALL_1
0x4012599	              0x55	                                push rbp	      9412	eval.c	FUNCTION_183
0x401259a	              0x53	                                push rbx	      9412	eval.c	FUNCTION_183
0x401259b	          0x4889fb	                            mov rbx, rdi	      9420	eval.c	FUNCTION_183
0x401259e	          0x4531e4	                          xor r12d, r12d	      9417	eval.c	FUNCTION_183
0x40125a1	        0x4883ec48	                           sub rsp, 0x48	      9412	eval.c	FUNCTION_183
0x40125a5	      0x48897c2408	                mov qword [rsp + 8], rdi	      9412	eval.c	FUNCTION_183
0x40125aa	      0x488d742418	                   lea rsi, [rsp + 0x18]	      9421	eval.c	FUNCTION_183	CALL_1
0x40125af	      0x488d7c2408	                      lea rdi, [rsp + 8]	      9421	eval.c	FUNCTION_183	CALL_1
0x40125b4	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	      9412	eval.c	FUNCTION_183
0x40125bd	      0x48894c2438	             mov qword [rsp + 0x38], rcx	      9412	eval.c	FUNCTION_183
0x40125c2	            0x31c9	                            xor ecx, ecx	      9412	eval.c	FUNCTION_183
0x40125c4	      0xe800000000	                          call 0x40125c9	      9421	eval.c	FUNCTION_183	CALL_1
0x40125c9	            0x85c0	                           test eax, eax	      9422	eval.c	FUNCTION_183	IF_1
0x40125cb	     0xf8eff000000	                           jle 0x40126d0	      9422	eval.c	FUNCTION_183	IF_1
0x40125d1	      0x488b6c2418	            mov rbp, qword [rsp + 0x18] 	      9424	eval.c	FUNCTION_183	IF_1	IF_2
0x40125d6	            0x4898	                                    cdqe	      6654	eval.c	FUNCTION_116
0x40125d8	          0x4885ed	                           test rbp, rbp	      9420	eval.c	FUNCTION_183
0x40125db	        0x480f44eb	                          cmove rbp, rbx	      9420	eval.c	FUNCTION_183
0x40125df	      0x488d5c0500	                    lea rbx, [rbp + rax]	      6654	eval.c	FUNCTION_116
0x40125e4	        0x440fb62b	                  movzx r13d, byte [rbx]	      6654	eval.c	FUNCTION_116
0x40125e8	          0xc60300	                       mov byte [rbx], 0	      6655	eval.c	FUNCTION_116
0x40125eb	         0xfb64500	                   movzx eax, byte [rbp]	      7270	eval.c	FUNCTION_133	IF_1
0x40125ef	            0x84c0	                             test al, al	      7270	eval.c	FUNCTION_133	IF_1
0x40125f1	     0xf84fa010000	                            je 0x40127f1	      7270	eval.c	FUNCTION_133	IF_1
0x40125f7	        0x807d013a	                cmp byte [rbp + 1], 0x3a	      7272	eval.c	FUNCTION_133	IF_2
0x40125fb	     0xf840f010000	                            je 0x4012710	      7272	eval.c	FUNCTION_133	IF_2
0x4012601	            0x3c3a	                            cmp al, 0x3a	      7275	eval.c	FUNCTION_133	IF_2	IF_3
0x4012603	     0xf84e8010000	                            je 0x40127f1	      7275	eval.c	FUNCTION_133	IF_2	IF_3
0x4012609	            0x3c23	                            cmp al, 0x23	      7275	eval.c	FUNCTION_133	IF_2	IF_3
0x401260b	     0xf84e0010000	                            je 0x40127f1	      7275	eval.c	FUNCTION_133	IF_2	IF_3
0x4012611	          0x4889ee	                            mov rsi, rbp	      7280	eval.c	FUNCTION_133	IF_2	CALL_1
0x4012614	      0xbf00000000	                              mov edi, 0	      7280	eval.c	FUNCTION_133	IF_2	CALL_1
0x4012619	      0x48896c2420	             mov qword [rsp + 0x20], rbp	      7277	eval.c	FUNCTION_133	IF_2
0x401261e	      0xe800000000	                          call 0x4012623	      7280	eval.c	FUNCTION_133	IF_2	CALL_1
0x4012623	        0x488b4008	                mov rax, qword [rax + 8]	      7281	eval.c	FUNCTION_133	IF_2	IF_4	CALL_2
0x4012627	          0x4885c0	                           test rax, rax	      7281	eval.c	FUNCTION_133	IF_2	IF_4	CALL_2
0x401262a	     0xf84d0010000	                            je 0x4012800	      7281	eval.c	FUNCTION_133	IF_2	IF_4	CALL_2
0x4012630	    0x483d00000000	                              cmp rax, 0	      7281	eval.c	FUNCTION_133	IF_2	IF_4	CALL_2
0x4012636	      0xbf00000000	                              mov edi, 0	      7282	eval.c	FUNCTION_133	IF_2	IF_4
0x401263b	     0xf84bf010000	                            je 0x4012800	      7281	eval.c	FUNCTION_133	IF_2	IF_4	CALL_2
0x4012641	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      7200	eval.c	FUNCTION_131	CALL_2
0x4012646	          0x803e00	                       cmp byte [rsi], 0	      7221	eval.c	FUNCTION_132	IF_1
0x4012649	            0x751d	                           jne 0x4012668	      7221	eval.c	FUNCTION_132	IF_1
0x401264b	         0xfb64500	                   movzx eax, byte [rbp]	      7224	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x401264f	          0x83e861	                           sub eax, 0x61	      7224	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4012652	            0x3c16	                            cmp al, 0x16	      7224	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4012654	     0xf877e010000	                            ja 0x40127d8	      7224	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x401265a	           0xfb6c0	                           movzx eax, al	      7224	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x401265d	    0xff24c5000000	                       jmp qword [rax*8]	      7224	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4012664	         0xf1f4000	                         nop dword [rax]	      7224	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4012668	      0xe800000000	                          call 0x401266d	      7238	eval.c	FUNCTION_132	CALL_3
0x401266d	        0x488b7808	                mov rdi, qword [rax + 8]	      7239	eval.c	FUNCTION_132	IF_2	CALL_4
0x4012671	          0x4885ff	                           test rdi, rdi	      7239	eval.c	FUNCTION_132	IF_2	CALL_4
0x4012674	     0xf845e010000	                            je 0x40127d8	      7239	eval.c	FUNCTION_132	IF_2	CALL_4
0x401267a	    0x4881ff000000	                              cmp rdi, 0	      7253	eval.c	FUNCTION_132	IF_2	IF_5	CALL_8
0x4012681	     0xf8451010000	                            je 0x40127d8	      7253	eval.c	FUNCTION_132	IF_2	IF_5	CALL_8
0x4012687	        0x4883ef11	                           sub rdi, 0x11	      7256	eval.c	FUNCTION_132	CALL_9
0x401268b	          0x4885ff	                           test rdi, rdi	      7201	eval.c	FUNCTION_131	IF_3
0x401268e	     0xf8444010000	                            je 0x40127d8	      7201	eval.c	FUNCTION_131	IF_3
0x4012694	      0x488d742420	                   lea rsi, [rsp + 0x20]	      6675	eval.c	FUNCTION_116	ELSE_1	IF_5
0x4012699	          0x4531e4	                          xor r12d, r12d	      9430	eval.c	FUNCTION_183	IF_1	IF_3	CALL_3
0x401269c	      0xe800000000	                          call 0x40126a1	      6675	eval.c	FUNCTION_116	ELSE_1	IF_5
0x40126a1	      0x488d742420	                   lea rsi, [rsp + 0x20]	      9430	eval.c	FUNCTION_183	IF_1	IF_3	CALL_3
0x40126a6	      0x488d7c2408	                      lea rdi, [rsp + 8]	      9430	eval.c	FUNCTION_183	IF_1	IF_3	CALL_3
0x40126ab	            0x31c9	                            xor ecx, ecx	      9430	eval.c	FUNCTION_183	IF_1	IF_3	CALL_3
0x40126ad	          0x44882b	                    mov byte [rbx], r13b	      6677	eval.c	FUNCTION_116
0x40126b0	      0xba01000000	                              mov edx, 1	      9430	eval.c	FUNCTION_183	IF_1	IF_3	CALL_3
0x40126b5	      0xe800000000	                          call 0x40126ba	      9430	eval.c	FUNCTION_183	IF_1	IF_3	CALL_3
0x40126ba	          0x83f801	                              cmp eax, 1	      9430	eval.c	FUNCTION_183	IF_1	IF_3	CALL_3
0x40126bd	        0x410f94c4	                               sete r12b	      9430	eval.c	FUNCTION_183	IF_1	IF_3	CALL_3
0x40126c1	            0x750d	                           jne 0x40126d0	      9431	eval.c	FUNCTION_183	IF_1	IF_3	IF_4
0x40126c3	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      9432	eval.c	FUNCTION_183	IF_1	IF_3	CALL_4
0x40126c8	      0xe800000000	                          call 0x40126cd	      9432	eval.c	FUNCTION_183	IF_1	IF_3	CALL_4
0x40126cd	           0xf1f00	                         nop dword [rax]	      9432	eval.c	FUNCTION_183	IF_1	IF_3	CALL_4
0x40126d0	      0x488b442408	                mov rax, qword [rsp + 8]	      9435	eval.c	FUNCTION_183	IF_5
0x40126d5	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      9438	eval.c	FUNCTION_183	CALL_5
0x40126da	          0x803800	                       cmp byte [rax], 0	      9436	eval.c	FUNCTION_183	IF_5
0x40126dd	      0xb800000000	                              mov eax, 0	      9436	eval.c	FUNCTION_183	IF_5
0x40126e2	        0x440f45e0	                        cmovne r12d, eax	      9436	eval.c	FUNCTION_183	IF_5
0x40126e6	      0xe800000000	                          call 0x40126eb	      9438	eval.c	FUNCTION_183	CALL_5
0x40126eb	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	      9440	eval.c	FUNCTION_183
0x40126f0	    0x644833142528	                xor rdx, qword fs:[0x28]	      9440	eval.c	FUNCTION_183
0x40126f9	          0x4489e0	                           mov eax, r12d	      9440	eval.c	FUNCTION_183
0x40126fc	     0xf8514010000	                           jne 0x4012816	      9440	eval.c	FUNCTION_183
0x4012702	        0x4883c448	                           add rsp, 0x48	      9440	eval.c	FUNCTION_183
0x4012706	              0x5b	                                 pop rbx	      9440	eval.c	FUNCTION_183
0x4012707	              0x5d	                                 pop rbp	      9440	eval.c	FUNCTION_183
0x4012708	            0x415c	                                 pop r12	      9440	eval.c	FUNCTION_183
0x401270a	            0x415d	                                 pop r13	      9440	eval.c	FUNCTION_183
0x401270c	              0xc3	                                     ret	      9440	eval.c	FUNCTION_183
0x401270d	           0xf1f00	                         nop dword [rax]	      9440	eval.c	FUNCTION_183
0x4012710	      0x488d742420	                   lea rsi, [rsp + 0x20]	      9440	eval.c	FUNCTION_183
0x4012715	          0x4889ef	                            mov rdi, rbp	      9440	eval.c	FUNCTION_183
0x4012718	      0xe843dbfeff	             call sym.find_var_ht.part.5	      9440	eval.c	FUNCTION_183
0x401271d	          0x4885c0	                           test rax, rax	      7198	eval.c	FUNCTION_131	IF_2
0x4012720	          0x4889c7	                            mov rdi, rax	      7198	eval.c	FUNCTION_131	IF_2
0x4012723	     0xf8518ffffff	                           jne 0x4012641	      7198	eval.c	FUNCTION_131	IF_2
0x4012729	          0x44882b	                    mov byte [rbx], r13b	      6677	eval.c	FUNCTION_116
0x401272c	            0xeba2	                           jmp 0x40126d0	      6677	eval.c	FUNCTION_116
0x401272e	            0x6690	                                     nop	      6677	eval.c	FUNCTION_116
0x4012730	      0xbf00000000	                              mov edi, 0	      7227	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4012735	      0xe95affffff	                           jmp 0x4012694	      7227	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x401273a	    0x660f1f440000	                    nop word [rax + rax]	      7227	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4012740	      0xbf00000000	                              mov edi, 0	      7228	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4012745	      0xe94affffff	                           jmp 0x4012694	      7228	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x401274a	    0x660f1f440000	                    nop word [rax + rax]	      7228	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4012750	      0xe800000000	                          call 0x4012755	      7233	eval.c	FUNCTION_132	IF_1	SWITCH_1	CALL_2
0x4012755	          0x4889c7	                            mov rdi, rax	      7233	eval.c	FUNCTION_132	IF_1	SWITCH_1	CALL_2
0x4012758	      0xe92effffff	                           jmp 0x401268b	      7233	eval.c	FUNCTION_132	IF_1	SWITCH_1	CALL_2
0x401275d	           0xf1f00	                         nop dword [rax]	      7233	eval.c	FUNCTION_132	IF_1	SWITCH_1	CALL_2
0x4012760	    0x488b05000000	            mov rax, qword [0x04012767] 	      7229	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4012767	    0x488db8181700	                 lea rdi, [rax + 0x1718]	      7229	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x401276e	      0xe918ffffff	                           jmp 0x401268b	      7229	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4012773	       0xf1f440000	                   nop dword [rax + rax]	      7229	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4012778	    0x488b05000000	            mov rax, qword [0x0401277f] 	      7231	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x401277f	    0x488db8b80000	                   lea rdi, [rax + 0xb8]	      7231	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4012786	      0xe900ffffff	                           jmp 0x401268b	      7231	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x401278b	       0xf1f440000	                   nop dword [rax + rax]	      7231	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4012790	    0x486315000000	         movsxd rdx, dword [0x04012797] 	      7226	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x4012797	    0x488b05000000	            mov rax, qword [0x0401279e] 	      7226	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x401279e	      0x488b7cd0f8	        mov rdi, qword [rax + rdx*8 - 8]	      7226	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x40127a3	      0xe9e3feffff	                           jmp 0x401268b	      7226	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x40127a8	     0xf1f84000000	                   nop dword [rax + rax]	      7226	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x40127b0	      0xe800000000	                          call 0x40127b5	      7232	eval.c	FUNCTION_132	IF_1	SWITCH_1	CALL_1
0x40127b5	          0x4889c7	                            mov rdi, rax	      7232	eval.c	FUNCTION_132	IF_1	SWITCH_1	CALL_1
0x40127b8	      0xe9cefeffff	                           jmp 0x401268b	      7232	eval.c	FUNCTION_132	IF_1	SWITCH_1	CALL_1
0x40127bd	           0xf1f00	                         nop dword [rax]	      7232	eval.c	FUNCTION_132	IF_1	SWITCH_1	CALL_1
0x40127c0	    0x488b05000000	            mov rax, qword [0x040127c7] 	      7230	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x40127c7	    0x488db8580500	                  lea rdi, [rax + 0x558]	      7230	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x40127ce	      0xe9b8feffff	                           jmp 0x401268b	      7230	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x40127d3	       0xf1f440000	                   nop dword [rax + rax]	      7230	eval.c	FUNCTION_132	IF_1	SWITCH_1
0x40127d8	          0x4889ef	                            mov rdi, rbp	      7205	eval.c	FUNCTION_131	CALL_3
0x40127db	      0xbe01000000	                              mov esi, 1	      7205	eval.c	FUNCTION_131	CALL_3
0x40127e0	      0xe800000000	                          call 0x40127e5	      7205	eval.c	FUNCTION_131	CALL_3
0x40127e5	          0x4885c0	                           test rax, rax	      6661	eval.c	FUNCTION_116	IF_1
0x40127e8	          0x4889c7	                            mov rdi, rax	      7205	eval.c	FUNCTION_131	CALL_3
0x40127eb	     0xf85a3feffff	                           jne 0x4012694	      6661	eval.c	FUNCTION_116	IF_1
0x40127f1	          0x44882b	                    mov byte [rbx], r13b	      6677	eval.c	FUNCTION_116
0x40127f4	          0x4531e4	                          xor r12d, r12d	      9426	eval.c	FUNCTION_183	IF_1	CALL_2
0x40127f7	      0xe9d4feffff	                           jmp 0x40126d0	      9426	eval.c	FUNCTION_183	IF_1	CALL_2
0x40127fc	         0xf1f4000	                         nop dword [rax]	      9426	eval.c	FUNCTION_183	IF_1	CALL_2
0x4012800	      0xe800000000	                          call 0x4012805	      7284	eval.c	FUNCTION_133	IF_2	CALL_3
0x4012805	      0xbf00000000	                              mov edi, 0	      7285	eval.c	FUNCTION_133	IF_2	IF_5
0x401280a	          0x4885c0	                           test rax, rax	      7285	eval.c	FUNCTION_133	IF_2	IF_5
0x401280d	        0x480f45f8	                         cmovne rdi, rax	      7285	eval.c	FUNCTION_133	IF_2	IF_5
0x4012811	      0xe92bfeffff	                           jmp 0x4012641	      7285	eval.c	FUNCTION_133	IF_2	IF_5
0x4012816	      0xe800000000	                          call 0x401281b	      9440	eval.c	FUNCTION_183
getwinvar	functions,0:SWITCH,0:IF,10:DO,0:ELSE,3:WHILE,0:CALL,12:FOR,0	163
0x4007300	            0x4156	                                push r14	      8283	eval.c	ELSE_2	FUNCTION_157
0x4007302	            0x4155	                                push r13	      8283	eval.c	ELSE_2	FUNCTION_157
0x4007304	          0x4989f5	                            mov r13, rsi	      8283	eval.c	ELSE_2	FUNCTION_157
0x4007307	            0x4154	                                push r12	      8283	eval.c	ELSE_2	FUNCTION_157
0x4007309	              0x55	                                push rbp	      8283	eval.c	ELSE_2	FUNCTION_157
0x400730a	          0x4989fc	                            mov r12, rdi	      8283	eval.c	ELSE_2	FUNCTION_157
0x400730d	              0x53	                                push rbx	      8283	eval.c	ELSE_2	FUNCTION_157
0x400730e	        0x4883ec30	                           sub rsp, 0x30	      8283	eval.c	ELSE_2	FUNCTION_157
0x4007312	    0x4c8b35000000	            mov r14, qword [0x04007319] 	      8296	eval.c	ELSE_2	FUNCTION_157	ELSE_1
0x4007319	    0x64488b042528	                mov rax, qword fs:[0x28]	      8283	eval.c	ELSE_2	FUNCTION_157
0x4007322	      0x4889442428	             mov qword [rsp + 0x28], rax	      8283	eval.c	ELSE_2	FUNCTION_157
0x4007327	            0x31c0	                            xor eax, eax	      8283	eval.c	ELSE_2	FUNCTION_157
0x4007329	          0x83fa01	                              cmp edx, 1	      8293	eval.c	ELSE_2	FUNCTION_157	IF_1
0x400732c	     0xf848e010000	                            je 0x40074c0	      8293	eval.c	ELSE_2	FUNCTION_157	IF_1
0x4007332	          0x4863ea	                         movsxd rbp, edx	      8297	eval.c	ELSE_2	FUNCTION_157	CALL_3
0x4007335	            0x31f6	                            xor esi, esi	      8221	eval.c	FUNCTION_155	CALL_1
0x4007337	        0x48c1e504	                              shl rbp, 4	      8297	eval.c	ELSE_2	FUNCTION_157	CALL_3
0x400733b	        0x498d3c2c	                    lea rdi, [r12 + rbp]	      8221	eval.c	FUNCTION_155	CALL_1
0x400733f	      0xe800000000	                          call 0x4007344	      8221	eval.c	FUNCTION_155	CALL_1
0x4007344	            0x85c0	                           test eax, eax	      8223	eval.c	FUNCTION_155	IF_1
0x4007346	            0x89c6	                            mov esi, eax	      8221	eval.c	FUNCTION_155	CALL_1
0x4007348	     0xf8812010000	                            js 0x4007460	      8223	eval.c	FUNCTION_155	IF_1
0x400734e	    0x488b1d000000	            mov rbx, qword [0x04007355] 	      8226	eval.c	FUNCTION_155	IF_2
0x4007355	            0x7444	                            je 0x400739b	      8225	eval.c	FUNCTION_155	IF_2
0x4007357	          0x4d85f6	                           test r14, r14	      8228	eval.c	FUNCTION_155
0x400735a	     0xf8440010000	                            je 0x40074a0	      8228	eval.c	FUNCTION_155
0x4007360	    0x4c3b35000000	            cmp r14, qword [0x04007367] 	      8228	eval.c	FUNCTION_155
0x4007367	     0xf8433010000	                            je 0x40074a0	      8228	eval.c	FUNCTION_155
0x400736d	        0x498b5620	            mov rdx, qword [r14 + 0x20] 	      8228	eval.c	FUNCTION_155
0x4007371	            0xeb0d	                           jmp 0x4007380	      8228	eval.c	FUNCTION_155
0x4007373	       0xf1f440000	                   nop dword [rax + rax]	      8228	eval.c	FUNCTION_155
0x4007378	            0x3932	                    cmp dword [rdx], esi	      8232	eval.c	FUNCTION_155	FUNCTION_1	IF_1	IF_2
0x400737a	            0x741c	                            je 0x4007398	      8232	eval.c	FUNCTION_155	FUNCTION_1	IF_1	IF_2
0x400737c	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      8228	eval.c	FUNCTION_155
0x4007380	          0x4885d2	                           test rdx, rdx	      8228	eval.c	FUNCTION_155
0x4007383	     0xf84d7000000	                            je 0x4007460	      8228	eval.c	FUNCTION_155
0x4007389	    0x81fee7030000	                          cmp esi, 0x3e7	      8230	eval.c	FUNCTION_155	FUNCTION_1	IF_1
0x400738f	            0x7fe7	                            jg 0x4007378	      8230	eval.c	FUNCTION_155	FUNCTION_1	IF_1
0x4007391	          0x83ee01	                              sub esi, 1	      8235	eval.c	FUNCTION_155	FUNCTION_1	ELSE_1	IF_3
0x4007394	            0x85f6	                           test esi, esi	      8235	eval.c	FUNCTION_155	FUNCTION_1	ELSE_1	IF_3
0x4007396	            0x7fe4	                            jg 0x400737c	      8235	eval.c	FUNCTION_155	FUNCTION_1	ELSE_1	IF_3
0x4007398	          0x4889d3	                            mov rbx, rdx	      8235	eval.c	FUNCTION_155	FUNCTION_1	ELSE_1	IF_3
0x400739b	      0x498d7c2c10	            lea rdi, [r12 + rbp + 0x10] 	      7098	eval.c	FUNCTION_129	CALL_1
0x40073a0	      0xbe00000000	                              mov esi, 0	      7098	eval.c	FUNCTION_129	CALL_1
0x40073a5	      0xe800000000	                          call 0x40073aa	      7098	eval.c	FUNCTION_129	CALL_1
0x40073aa	    0x830500000000	               add dword [0x040073b1], 1	      8299	eval.c	ELSE_2	FUNCTION_157
0x40073b1	          0x4885db	                           test rbx, rbx	      8304	eval.c	ELSE_2	FUNCTION_157	IF_2
0x40073b4	      0x4889442410	             mov qword [rsp + 0x10], rax	      8298	eval.c	ELSE_2	FUNCTION_157	CALL_4
0x40073b9	    0x41c745000200	                      mov dword [r13], 2	      8301	eval.c	ELSE_2	FUNCTION_157
0x40073c1	    0x49c745080000	                  mov qword [r13 + 8], 0	      8302	eval.c	ELSE_2	FUNCTION_157
0x40073c9	            0x744a	                            je 0x4007415	      8304	eval.c	ELSE_2	FUNCTION_157	IF_2
0x40073cb	          0x4885c0	                           test rax, rax	      8304	eval.c	ELSE_2	FUNCTION_157	IF_2
0x40073ce	            0x7445	                            je 0x4007415	      8304	eval.c	ELSE_2	FUNCTION_157	IF_2
0x40073d0	    0x4c3b35000000	            cmp r14, qword [0x040073d7] 	      8309	eval.c	ELSE_2	FUNCTION_157	IF_2
0x40073d7	     0xf84cf000000	                            je 0x40074ac	      8309	eval.c	ELSE_2	FUNCTION_157	IF_2
0x40073dd	      0x488d742420	                   lea rsi, [rsp + 0x20]	      8311	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	CALL_5
0x40073e2	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      8311	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	CALL_5
0x40073e7	    0x41b801000000	                              mov r8d, 1	      8311	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	CALL_5
0x40073ed	          0x4c89f1	                            mov rcx, r14	      8311	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	CALL_5
0x40073f0	          0x4889da	                            mov rdx, rbx	      8311	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	CALL_5
0x40073f3	      0xe800000000	                          call 0x40073f8	      8311	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	CALL_5
0x40073f8	          0x83f801	                              cmp eax, 1	      8311	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	CALL_5
0x40073fb	     0xf84df000000	                            je 0x40074e0	      8311	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	CALL_5
0x4007401	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      8346	eval.c	FUNCTION_157	IF_2	ELSE_2	CALL_11
0x4007406	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      8346	eval.c	FUNCTION_157	IF_2	ELSE_2	CALL_11
0x400740b	      0xba01000000	                              mov edx, 1	      8346	eval.c	FUNCTION_157	IF_2	ELSE_2	CALL_11
0x4007410	      0xe800000000	                          call 0x4007415	      8346	eval.c	FUNCTION_157	IF_2	ELSE_2	CALL_11
0x4007415	      0x498d7c2c20	            lea rdi, [r12 + rbp + 0x20] 	      8349	eval.c	FUNCTION_157	ELSE_2	IF_10
0x400741a	            0x8b07	                    mov eax, dword [rdi]	      8349	eval.c	FUNCTION_157	ELSE_2	IF_10
0x400741c	            0x85c0	                           test eax, eax	      8349	eval.c	FUNCTION_157	ELSE_2	IF_10
0x400741e	            0x7530	                           jne 0x4007450	      8349	eval.c	FUNCTION_157	ELSE_2	IF_10
0x4007420	    0x832d00000000	               sub dword [0x04007427], 1	      8353	eval.c	FUNCTION_157	ELSE_2
0x4007427	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      8354	eval.c	FUNCTION_157	ELSE_2
0x400742c	    0x644833042528	                xor rax, qword fs:[0x28]	      8354	eval.c	FUNCTION_157	ELSE_2
0x4007435	     0xf8555010000	                           jne 0x4007590	      8354	eval.c	FUNCTION_157	ELSE_2
0x400743b	        0x4883c430	                           add rsp, 0x30	      8354	eval.c	FUNCTION_157	ELSE_2
0x400743f	              0x5b	                                 pop rbx	      8354	eval.c	FUNCTION_157	ELSE_2
0x4007440	              0x5d	                                 pop rbp	      8354	eval.c	FUNCTION_157	ELSE_2
0x4007441	            0x415c	                                 pop r12	      8354	eval.c	FUNCTION_157	ELSE_2
0x4007443	            0x415d	                                 pop r13	      8354	eval.c	FUNCTION_157	ELSE_2
0x4007445	            0x415e	                                 pop r14	      8354	eval.c	FUNCTION_157	ELSE_2
0x4007447	              0xc3	                                     ret	      8354	eval.c	FUNCTION_157	ELSE_2
0x4007448	     0xf1f84000000	                   nop dword [rax + rax]	      8354	eval.c	FUNCTION_157	ELSE_2
0x4007450	          0x4c89ee	                            mov rsi, r13	      8351	eval.c	FUNCTION_157	ELSE_2	CALL_12
0x4007453	      0xe800000000	                          call 0x4007458	      8351	eval.c	FUNCTION_157	ELSE_2	CALL_12
0x4007458	            0xebc6	                           jmp 0x4007420	      8351	eval.c	FUNCTION_157	ELSE_2	CALL_12
0x400745a	    0x660f1f440000	                    nop word [rax + rax]	      8351	eval.c	FUNCTION_157	ELSE_2	CALL_12
0x4007460	      0x498d7c2c10	            lea rdi, [r12 + rbp + 0x10] 	      7098	eval.c	FUNCTION_129	CALL_1
0x4007465	      0xbe00000000	                              mov esi, 0	      7098	eval.c	FUNCTION_129	CALL_1
0x400746a	      0xe800000000	                          call 0x400746f	      7098	eval.c	FUNCTION_129	CALL_1
0x400746f	      0x498d7c2c20	            lea rdi, [r12 + rbp + 0x20] 	      8349	eval.c	FUNCTION_157	ELSE_2	IF_10
0x4007474	    0x830500000000	               add dword [0x0400747b], 1	      8299	eval.c	ELSE_2	FUNCTION_157
0x400747b	      0x4889442410	             mov qword [rsp + 0x10], rax	      8298	eval.c	ELSE_2	FUNCTION_157	CALL_4
0x4007480	    0x41c745000200	                      mov dword [r13], 2	      8301	eval.c	ELSE_2	FUNCTION_157
0x4007488	    0x49c745080000	                  mov qword [r13 + 8], 0	      8302	eval.c	ELSE_2	FUNCTION_157
0x4007490	            0x8b07	                    mov eax, dword [rdi]	      8349	eval.c	FUNCTION_157	ELSE_2	IF_10
0x4007492	            0x85c0	                           test eax, eax	      8349	eval.c	FUNCTION_157	ELSE_2	IF_10
0x4007494	            0x748a	                            je 0x4007420	      8349	eval.c	FUNCTION_157	ELSE_2	IF_10
0x4007496	            0xebb8	                           jmp 0x4007450	      8349	eval.c	FUNCTION_157	ELSE_2	IF_10
0x4007498	     0xf1f84000000	                   nop dword [rax + rax]	      8349	eval.c	FUNCTION_157	ELSE_2	IF_10
0x40074a0	    0x488b15000000	            mov rdx, qword [0x040074a7] 	      8228	eval.c	FUNCTION_155
0x40074a7	      0xe9d4feffff	                           jmp 0x4007380	      8228	eval.c	FUNCTION_155
0x40074ac	    0x48391d000000	            cmp qword [0x040074b3], rbx 	      8309	eval.c	ELSE_2	FUNCTION_157	IF_2
0x40074b3	     0xf8524ffffff	                           jne 0x40073dd	      8309	eval.c	ELSE_2	FUNCTION_157	IF_2
0x40074b9	          0x4531f6	                          xor r14d, r14d	      8309	eval.c	ELSE_2	FUNCTION_157	IF_2
0x40074bc	            0xeb2d	                           jmp 0x40074eb	      8309	eval.c	ELSE_2	FUNCTION_157	IF_2
0x40074be	            0x6690	                                     nop	      8309	eval.c	ELSE_2	FUNCTION_157	IF_2
0x40074c0	            0x31f6	                            xor esi, esi	      8294	eval.c	ELSE_2	FUNCTION_157	CALL_2
0x40074c2	        0x8954240c	              mov dword [rsp + 0xc], edx	      8294	eval.c	ELSE_2	FUNCTION_157	CALL_2
0x40074c6	      0xe800000000	                          call 0x40074cb	      8294	eval.c	ELSE_2	FUNCTION_157	CALL_2
0x40074cb	            0x89c7	                            mov edi, eax	      8294	eval.c	ELSE_2	FUNCTION_157	CALL_2
0x40074cd	      0xe800000000	                          call 0x40074d2	      8294	eval.c	ELSE_2	FUNCTION_157	CALL_2
0x40074d2	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      8294	eval.c	ELSE_2	FUNCTION_157	CALL_2
0x40074d6	          0x4989c6	                            mov r14, rax	      8294	eval.c	ELSE_2	FUNCTION_157	CALL_2
0x40074d9	      0xe954feffff	                           jmp 0x4007332	      8294	eval.c	ELSE_2	FUNCTION_157	CALL_2
0x40074de	            0x6690	                                     nop	      8294	eval.c	ELSE_2	FUNCTION_157	CALL_2
0x40074e0	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      8294	eval.c	ELSE_2	FUNCTION_157	CALL_2
0x40074e5	    0x41be01000000	                             mov r14d, 1	      8311	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	CALL_5
0x40074eb	          0x803826	                    cmp byte [rax], 0x26	      8313	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	IF_4
0x40074ee	            0x7540	                           jne 0x4007530	      8313	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	IF_4
0x40074f0	        0x80780100	                   cmp byte [rax + 1], 0	      8315	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	IF_4	IF_5
0x40074f4	            0x7566	                           jne 0x400755c	      8315	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	IF_4	IF_5
0x40074f6	            0x31ff	                            xor edi, edi	      8318	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	IF_4	IF_5	CALL_6
0x40074f8	      0xe800000000	                          call 0x40074fd	      8318	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	IF_4	IF_5	CALL_6
0x40074fd	          0x4885c0	                           test rax, rax	      8320	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	IF_4	IF_5	IF_6
0x4007500	            0x7471	                            je 0x4007573	      8320	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	IF_4	IF_5	IF_6
0x4007502	          0x4889c6	                            mov rsi, rax	      8322	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	IF_4	IF_5	IF_6	CALL_7
0x4007505	          0x4c89ef	                            mov rdi, r13	      8322	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	IF_4	IF_5	IF_6	CALL_7
0x4007508	      0xe800000000	                          call 0x400750d	      8322	eval.c	ELSE_2	FUNCTION_157	IF_2	IF_3	IF_4	IF_5	IF_6	CALL_7
0x400750d	          0x4585f6	                         test r14d, r14d	      8344	eval.c	FUNCTION_157	IF_2	ELSE_2	IF_9
0x4007510	     0xf840affffff	                            je 0x4007420	      8344	eval.c	FUNCTION_157	IF_2	ELSE_2	IF_9
0x4007516	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      8346	eval.c	FUNCTION_157	IF_2	ELSE_2	CALL_11
0x400751b	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      8346	eval.c	FUNCTION_157	IF_2	ELSE_2	CALL_11
0x4007520	      0xba01000000	                              mov edx, 1	      8346	eval.c	FUNCTION_157	IF_2	ELSE_2	CALL_11
0x4007525	      0xe800000000	                          call 0x400752a	      8346	eval.c	FUNCTION_157	IF_2	ELSE_2	CALL_11
0x400752a	      0xe9f1feffff	                           jmp 0x4007420	      8346	eval.c	FUNCTION_157	IF_2	ELSE_2	CALL_11
0x400752f	              0x90	                                     nop	      8346	eval.c	FUNCTION_157	IF_2	ELSE_2	CALL_11
0x4007530	    0x488bbb700500	           mov rdi, qword [rbx + 0x570] 	      8334	eval.c	FUNCTION_157	IF_2	IF_3	ELSE_2	ELSE_3	CALL_9
0x4007537	            0x31c9	                            xor ecx, ecx	      8334	eval.c	FUNCTION_157	IF_2	IF_3	ELSE_2	ELSE_3	CALL_9
0x4007539	          0x4889c2	                            mov rdx, rax	      8334	eval.c	FUNCTION_157	IF_2	IF_3	ELSE_2	ELSE_3	CALL_9
0x400753c	      0xbe77000000	                           mov esi, 0x77	      8334	eval.c	FUNCTION_157	IF_2	IF_3	ELSE_2	ELSE_3	CALL_9
0x4007541	        0x4883c710	                           add rdi, 0x10	      8334	eval.c	FUNCTION_157	IF_2	IF_3	ELSE_2	ELSE_3	CALL_9
0x4007545	      0xe800000000	                          call 0x400754a	      8334	eval.c	FUNCTION_157	IF_2	IF_3	ELSE_2	ELSE_3	CALL_9
0x400754a	          0x4885c0	                           test rax, rax	      8336	eval.c	FUNCTION_157	IF_2	IF_3	ELSE_2	ELSE_3	IF_8
0x400754d	            0x7424	                            je 0x4007573	      8336	eval.c	FUNCTION_157	IF_2	IF_3	ELSE_2	ELSE_3	IF_8
0x400754f	          0x4c89ee	                            mov rsi, r13	      8338	eval.c	FUNCTION_157	IF_2	IF_3	ELSE_2	ELSE_3	IF_8	CALL_10
0x4007552	          0x4889c7	                            mov rdi, rax	      8338	eval.c	FUNCTION_157	IF_2	IF_3	ELSE_2	ELSE_3	IF_8	CALL_10
0x4007555	      0xe800000000	                          call 0x400755a	      8338	eval.c	FUNCTION_157	IF_2	IF_3	ELSE_2	ELSE_3	IF_8	CALL_10
0x400755a	            0xebb1	                           jmp 0x400750d	      8338	eval.c	FUNCTION_157	IF_2	IF_3	ELSE_2	ELSE_3	IF_8	CALL_10
0x400755c	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      8326	eval.c	FUNCTION_157	IF_2	IF_3	IF_4	IF_7	CALL_8
0x4007561	      0xba01000000	                              mov edx, 1	      8326	eval.c	FUNCTION_157	IF_2	IF_3	IF_4	IF_7	CALL_8
0x4007566	          0x4c89ee	                            mov rsi, r13	      8326	eval.c	FUNCTION_157	IF_2	IF_3	IF_4	IF_7	CALL_8
0x4007569	      0xe800000000	                          call 0x400756e	      8326	eval.c	FUNCTION_157	IF_2	IF_3	IF_4	IF_7	CALL_8
0x400756e	          0x83f801	                              cmp eax, 1	      8326	eval.c	FUNCTION_157	IF_2	IF_3	IF_4	IF_7	CALL_8
0x4007571	            0x749a	                            je 0x400750d	      8326	eval.c	FUNCTION_157	IF_2	IF_3	IF_4	IF_7	CALL_8
0x4007573	          0x4585f6	                         test r14d, r14d	      8344	eval.c	FUNCTION_157	IF_2	ELSE_2	IF_9
0x4007576	     0xf8585feffff	                           jne 0x4007401	      8344	eval.c	FUNCTION_157	IF_2	ELSE_2	IF_9
0x400757c	      0x498d7c2c20	            lea rdi, [r12 + rbp + 0x20] 	      8349	eval.c	FUNCTION_157	ELSE_2	IF_10
0x4007581	            0x8b07	                    mov eax, dword [rdi]	      8349	eval.c	FUNCTION_157	ELSE_2	IF_10
0x4007583	            0x85c0	                           test eax, eax	      8349	eval.c	FUNCTION_157	ELSE_2	IF_10
0x4007585	     0xf8495feffff	                            je 0x4007420	      8349	eval.c	FUNCTION_157	ELSE_2	IF_10
0x400758b	      0xe9c0feffff	                           jmp 0x4007450	      8349	eval.c	FUNCTION_157	ELSE_2	IF_10
0x4007590	      0xe800000000	                          call 0x4007595	      8354	eval.c	FUNCTION_157	ELSE_2
ex_let_one	functions,0:SWITCH,0:IF,29:DO,0:ELSE,16:WHILE,0:CALL,56:FOR,0	429
0x400fe80	            0x4157	                                push r15	      1677	eval.c	FUNCTION_43
0x400fe82	            0x4156	                                push r14	      1677	eval.c	FUNCTION_43
0x400fe84	        0x4c8d7f01	                      lea r15, [rdi + 1]	      1692	eval.c	FUNCTION_43	IF_1
0x400fe88	            0x4155	                                push r13	      1677	eval.c	FUNCTION_43
0x400fe8a	            0x4154	                                push r12	      1677	eval.c	FUNCTION_43
0x400fe8c	          0x4989f6	                            mov r14, rsi	      1677	eval.c	FUNCTION_43
0x400fe8f	              0x55	                                push rbp	      1677	eval.c	FUNCTION_43
0x400fe90	              0x53	                                push rbx	      1677	eval.c	FUNCTION_43
0x400fe91	          0x4889fd	                            mov rbp, rdi	      1677	eval.c	FUNCTION_43
0x400fe94	          0x4989cc	                            mov r12, rcx	      1677	eval.c	FUNCTION_43
0x400fe97	          0x4d89c5	                             mov r13, r8	      1677	eval.c	FUNCTION_43
0x400fe9a	          0x4c89fb	                            mov rbx, r15	      1692	eval.c	FUNCTION_43	IF_1
0x400fe9d	    0x4881ec980000	                           sub rsp, 0x98	      1677	eval.c	FUNCTION_43
0x400fea4	    0x64488b042528	                mov rax, qword fs:[0x28]	      1677	eval.c	FUNCTION_43
0x400fead	    0x488984248800	             mov qword [rsp + 0x88], rax	      1677	eval.c	FUNCTION_43
0x400feb5	            0x31c0	                            xor eax, eax	      1677	eval.c	FUNCTION_43
0x400feb7	           0xfb607	                   movzx eax, byte [rdi]	      1689	eval.c	FUNCTION_43	IF_1
0x400feba	            0x3c24	                            cmp al, 0x24	      1689	eval.c	FUNCTION_43	IF_1
0x400febc	     0xf84d2000000	                            je 0x400ff94	      1689	eval.c	FUNCTION_43	IF_1
0x400fec2	            0x3c26	                            cmp al, 0x26	      1744	eval.c	FUNCTION_43	ELSE_6	IF_13
0x400fec4	     0xf84d6020000	                            je 0x40101a0	      1744	eval.c	FUNCTION_43	ELSE_6	IF_13
0x400feca	            0x3c40	                            cmp al, 0x40	      1804	eval.c	FUNCTION_43	ELSE_11	IF_21
0x400fecc	     0xf8436020000	                            je 0x4010108	      1804	eval.c	FUNCTION_43	ELSE_11	IF_21
0x400fed2	          0x83e841	                           sub eax, 0x41	      6376	eval.c	FUNCTION_101	CALL_1
0x400fed5	            0x3c3a	                            cmp al, 0x3a	      6376	eval.c	FUNCTION_101	CALL_1
0x400fed7	     0xf8763040000	                            ja 0x4010340	      6376	eval.c	FUNCTION_101	CALL_1
0x400fedd	          0x4189d7	                           mov r15d, edx	      6376	eval.c	FUNCTION_101	CALL_1
0x400fee0	    0x48baffffff43	           movabs rdx, 0x7ffffff43ffffff	      1840	eval.c	FUNCTION_43	ELSE_14	IF_27	CALL_47
0x400feea	        0x480fa3c2	                             bt rdx, rax	      1840	eval.c	FUNCTION_43	ELSE_14	IF_27	CALL_47
0x400feee	     0xf834c040000	                           jae 0x4010340	      1840	eval.c	FUNCTION_43	ELSE_14	IF_27	CALL_47
0x400fef4	      0x488d542420	                   lea rdx, [rsp + 0x20]	      1844	eval.c	FUNCTION_43	ELSE_14	IF_27	CALL_48
0x400fef9	          0x4531c0	                            xor r8d, r8d	      1844	eval.c	FUNCTION_43	ELSE_14	IF_27	CALL_48
0x400fefc	            0x31c9	                            xor ecx, ecx	      1844	eval.c	FUNCTION_43	ELSE_14	IF_27	CALL_48
0x400fefe	      0xe86df6ffff	          call sym.get_lval.constprop.24	      1844	eval.c	FUNCTION_43	ELSE_14	IF_27	CALL_48
0x400ff03	          0x4885c0	                           test rax, rax	      1845	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28
0x400ff06	          0x4889c3	                            mov rbx, rax	      1844	eval.c	FUNCTION_43	ELSE_14	IF_27	CALL_48
0x400ff09	            0x7443	                            je 0x400ff4e	      1845	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28
0x400ff0b	    0x48837c242000	               cmp qword [rsp + 0x20], 0	      1845	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28
0x400ff11	     0xf8419050000	                            je 0x4010430	      1845	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28
0x400ff17	          0x4d85e4	                           test r12, r12	      1847	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	IF_29	CALL_50
0x400ff1a	            0x741c	                            je 0x400ff38	      1847	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	IF_29	CALL_50
0x400ff1c	          0x4889c7	                            mov rdi, rax	      1847	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	IF_29	CALL_50
0x400ff1f	      0xe800000000	                          call 0x400ff24	      1847	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	IF_29	CALL_50
0x400ff24	           0xfb630	                   movzx esi, byte [rax]	      1847	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	IF_29	CALL_50
0x400ff27	          0x4c89e7	                            mov rdi, r12	      1847	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	IF_29	CALL_50
0x400ff2a	      0xe800000000	                          call 0x400ff2f	      1847	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	IF_29	CALL_50
0x400ff2f	          0x4885c0	                           test rax, rax	      1847	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	IF_29	CALL_50
0x400ff32	     0xf8498050000	                            je 0x40104d0	      1847	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	IF_29	CALL_50
0x400ff38	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1851	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	ELSE_15	CALL_53
0x400ff3d	          0x4d89e8	                             mov r8, r13	      1851	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	ELSE_15	CALL_53
0x400ff40	          0x4489f9	                           mov ecx, r15d	      1851	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	ELSE_15	CALL_53
0x400ff43	          0x4c89f2	                            mov rdx, r14	      1851	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	ELSE_15	CALL_53
0x400ff46	          0x4889de	                            mov rsi, rbx	      1851	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	ELSE_15	CALL_53
0x400ff49	      0xe80280ffff	                   call sym.set_var_lval	      1851	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	ELSE_15	CALL_53
0x400ff4e	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      2230	eval.c	FUNCTION_45	CALL_1
0x400ff53	      0xe800000000	                          call 0x400ff58	      2230	eval.c	FUNCTION_45	CALL_1
0x400ff58	      0x488b7c2478	            mov rdi, qword [rsp + 0x78] 	      2231	eval.c	FUNCTION_45	CALL_2
0x400ff5d	      0xe800000000	                          call 0x400ff62	      2231	eval.c	FUNCTION_45	CALL_2
0x400ff62	    0x488b8c248800	            mov rcx, qword [rsp + 0x88] 	      1862	eval.c	FUNCTION_43
0x400ff6a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1862	eval.c	FUNCTION_43
0x400ff73	          0x4889d8	                            mov rax, rbx	      1862	eval.c	FUNCTION_43
0x400ff76	     0xf85ab050000	                           jne 0x4010527	      1862	eval.c	FUNCTION_43
0x400ff7c	    0x4881c4980000	                           add rsp, 0x98	      1862	eval.c	FUNCTION_43
0x400ff83	              0x5b	                                 pop rbx	      1862	eval.c	FUNCTION_43
0x400ff84	              0x5d	                                 pop rbp	      1862	eval.c	FUNCTION_43
0x400ff85	            0x415c	                                 pop r12	      1862	eval.c	FUNCTION_43
0x400ff87	            0x415d	                                 pop r13	      1862	eval.c	FUNCTION_43
0x400ff89	            0x415e	                                 pop r14	      1862	eval.c	FUNCTION_43
0x400ff8b	            0x415f	                                 pop r15	      1862	eval.c	FUNCTION_43
0x400ff8d	              0xc3	                                     ret	      1862	eval.c	FUNCTION_43
0x400ff8e	            0x6690	                                     nop	      1862	eval.c	FUNCTION_43
0x400ff90	        0x4883c301	                              add rbx, 1	      6086	eval.c	FUNCTION_95	FOR_1	CALL_1
0x400ff94	           0xfb63b	                   movzx edi, byte [rbx]	      6086	eval.c	FUNCTION_95	FOR_1	CALL_1
0x400ff97	      0xe800000000	                          call 0x400ff9c	      6086	eval.c	FUNCTION_95	FOR_1	CALL_1
0x400ff9c	            0x85c0	                           test eax, eax	      6086	eval.c	FUNCTION_95	FOR_1	CALL_1
0x400ff9e	            0x75f0	                           jne 0x400ff90	      6086	eval.c	FUNCTION_95	FOR_1	CALL_1
0x400ffa0	          0x4939df	                            cmp r15, rbx	      6088	eval.c	FUNCTION_95	IF_1
0x400ffa3	     0xf8497030000	                            je 0x4010340	      6088	eval.c	FUNCTION_95	IF_1
0x400ffa9	          0x4889d8	                            mov rax, rbx	      6091	eval.c	FUNCTION_95
0x400ffac	          0x4c29f8	                            sub rax, r15	      6091	eval.c	FUNCTION_95
0x400ffaf	            0x85c0	                           test eax, eax	      1695	eval.c	FUNCTION_43	IF_1	IF_2
0x400ffb1	      0x4889442408	                mov qword [rsp + 8], rax	      6091	eval.c	FUNCTION_95
0x400ffb6	     0xf8484030000	                            je 0x4010340	      1695	eval.c	FUNCTION_43	IF_1	IF_2
0x400ffbc	          0x4d85ed	                           test r13, r13	      1699	eval.c	FUNCTION_43	IF_1	ELSE_1	IF_3
0x400ffbf	            0x7410	                            je 0x400ffd1	      1699	eval.c	FUNCTION_43	IF_1	ELSE_1	IF_3
0x400ffc1	      0x410fb64500	                   movzx eax, byte [r13]	      1699	eval.c	FUNCTION_43	IF_1	ELSE_1	IF_3
0x400ffc6	          0x83e82b	                           sub eax, 0x2b	      1699	eval.c	FUNCTION_43	IF_1	ELSE_1	IF_3
0x400ffc9	            0xa8fd	                           test al, 0xfd	      1699	eval.c	FUNCTION_43	IF_1	ELSE_1	IF_3
0x400ffcb	     0xf8429050000	                            je 0x40104fa	      1699	eval.c	FUNCTION_43	IF_1	ELSE_1	IF_3
0x400ffd1	          0x4d85e4	                           test r12, r12	      1701	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_2	IF_4
0x400ffd4	            0x741c	                            je 0x400fff2	      1701	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_2	IF_4
0x400ffd6	          0x4889df	                            mov rdi, rbx	      1702	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x400ffd9	      0xe800000000	                          call 0x400ffde	      1702	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x400ffde	           0xfb630	                   movzx esi, byte [rax]	      1702	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x400ffe1	          0x4c89e7	                            mov rdi, r12	      1702	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x400ffe4	      0xe800000000	                          call 0x400ffe9	      1702	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x400ffe9	          0x4885c0	                           test rax, rax	      1702	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x400ffec	     0xf84ee030000	                            je 0x40103e0	      1702	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_2	IF_4	CALL_7
0x400fff2	      0xe800000000	                          call 0x400fff7	      1704	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	CALL_10
0x400fff7	            0x85c0	                           test eax, eax	      1704	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	CALL_10
0x400fff9	     0xf85c9040000	                           jne 0x40104c8	      1704	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	CALL_10
0x400ffff	      0x48636c2408	            movsxd rbp, dword [rsp + 8] 	      1706	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5
0x4010004	          0x4c89f7	                            mov rdi, r14	      7098	eval.c	FUNCTION_129	CALL_1
0x4010007	      0xbe00000000	                              mov esi, 0	      7098	eval.c	FUNCTION_129	CALL_1
0x401000c	          0x4531f6	                          xor r14d, r14d	      1684	eval.c	FUNCTION_43
0x401000f	          0x4c01fd	                            add rbp, r15	      1706	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5
0x4010012	      0x440fb66500	                  movzx r12d, byte [rbp]	      1706	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5
0x4010017	        0xc6450000	                       mov byte [rbp], 0	      1707	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5
0x401001b	      0xe800000000	                          call 0x4010020	      7098	eval.c	FUNCTION_129	CALL_1
0x4010020	          0x4885c0	                           test rax, rax	      1709	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6
0x4010023	          0x4889c2	                            mov rdx, rax	      7098	eval.c	FUNCTION_129	CALL_1
0x4010026	            0x7468	                            je 0x4010090	      1709	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6
0x4010028	          0x4d85ed	                           test r13, r13	      1709	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6
0x401002b	            0x7463	                            je 0x4010090	      1709	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6
0x401002d	      0x41807d002e	                    cmp byte [r13], 0x2e	      1709	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6
0x4010032	            0x7565	                           jne 0x4010099	      1709	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6
0x4010034	      0x488d742420	                   lea rsi, [rsp + 0x20]	      1712	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	CALL_12
0x4010039	          0x4c89ff	                            mov rdi, r15	      1712	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	CALL_12
0x401003c	      0x4889442408	                mov qword [rsp + 8], rax	      1712	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	CALL_12
0x4010041	    0xc74424200000	               mov dword [rsp + 0x20], 0	      1711	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6
0x4010049	      0xe800000000	                          call 0x401004e	      1712	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	CALL_12
0x401004e	          0x4885c0	                           test rax, rax	      1714	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	IF_7
0x4010051	          0x4989c5	                            mov r13, rax	      1712	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	CALL_12
0x4010054	      0x488b542408	                mov rdx, qword [rsp + 8]	      1714	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	IF_7
0x4010059	            0x7435	                            je 0x4010090	      1714	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	IF_7
0x401005b	          0x4889d6	                            mov rsi, rdx	      1716	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	IF_7	CALL_13
0x401005e	          0x4889c7	                            mov rdi, rax	      1716	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	IF_7	CALL_13
0x4010061	      0xe800000000	                          call 0x4010066	      1716	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	IF_7	CALL_13
0x4010066	        0x8b4c2420	            mov ecx, dword [rsp + 0x20] 	      1717	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	IF_7	IF_8
0x401006a	          0x4889c2	                            mov rdx, rax	      1716	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	IF_7	CALL_13
0x401006d	          0x4989c6	                            mov r14, rax	      1716	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	IF_7	CALL_13
0x4010070	            0x85c9	                           test ecx, ecx	      1717	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	IF_7	IF_8
0x4010072	            0x741c	                            je 0x4010090	      1717	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	IF_7	IF_8
0x4010074	          0x4c89ef	                            mov rdi, r13	      1718	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	IF_7	CALL_14
0x4010077	      0x4889442408	                mov qword [rsp + 8], rax	      1718	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	IF_7	CALL_14
0x401007c	      0xe800000000	                          call 0x4010081	      1718	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	IF_7	CALL_14
0x4010081	      0x488b542408	                mov rdx, qword [rsp + 8]	      1716	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	IF_7	CALL_13
0x4010086	          0x4989d6	                            mov r14, rdx	      1716	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	IF_7	CALL_13
0x4010089	     0xf1f80000000	                         nop dword [rax]	      1716	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_6	IF_7	CALL_13
0x4010090	          0x4885d2	                           test rdx, rdx	      1721	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9
0x4010093	     0xf848f030000	                            je 0x4010428	      1721	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9
0x4010099	          0x4889d6	                            mov rsi, rdx	      1723	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	CALL_15
0x401009c	          0x4c89ff	                            mov rdi, r15	      1723	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	CALL_15
0x401009f	      0xe800000000	                          call 0x40100a4	      1723	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	CALL_15
0x40100a4	      0xbe00000000	                              mov esi, 0	      1724	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	IF_10	CALL_16
0x40100a9	          0x4c89ff	                            mov rdi, r15	      1724	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	IF_10	CALL_16
0x40100ac	      0xe800000000	                          call 0x40100b1	      1724	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	IF_10	CALL_16
0x40100b1	            0x85c0	                           test eax, eax	      1724	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	IF_10	CALL_16
0x40100b3	     0xf8437040000	                            je 0x40104f0	      1724	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	IF_10	CALL_16
0x40100b9	    0x8b1500000000	            mov edx, dword [0x040100bf] 	      1726	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_4	IF_11	CALL_18
0x40100bf	            0x85d2	                           test edx, edx	      1726	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_4	IF_11	CALL_18
0x40100c1	     0xf8539030000	                           jne 0x4010400	      1726	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_4	IF_11	CALL_18
0x40100c7	    0x8b0500000000	            mov eax, dword [0x040100cd] 	      1728	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_5	IF_12
0x40100cd	            0x85c0	                           test eax, eax	      1728	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_5	IF_12
0x40100cf	            0x741f	                            je 0x40100f0	      1728	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_5	IF_12
0x40100d1	      0xbe00000000	                              mov esi, 0	      1729	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_5	IF_12	CALL_19
0x40100d6	          0x4c89ff	                            mov rdi, r15	      1729	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_5	IF_12	CALL_19
0x40100d9	      0xe800000000	                          call 0x40100de	      1729	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_5	IF_12	CALL_19
0x40100de	            0x85c0	                           test eax, eax	      1729	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_5	IF_12	CALL_19
0x40100e0	            0x750e	                           jne 0x40100f0	      1729	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_5	IF_12	CALL_19
0x40100e2	    0xc70500000000	               mov dword [0x040100ec], 0	      1730	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_5	IF_12
0x40100ec	         0xf1f4000	                         nop dword [rax]	      1730	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_5	IF_12
0x40100f0	        0x44886500	                    mov byte [rbp], r12b	      1733	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5
0x40100f4	          0x4c89f7	                            mov rdi, r14	      1734	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	CALL_20
0x40100f7	      0xe800000000	                          call 0x40100fc	      1734	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	CALL_20
0x40100fc	      0xe961feffff	                           jmp 0x400ff62	      1734	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	CALL_20
0x4010101	     0xf1f80000000	                         nop dword [rax]	      1734	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	CALL_20
0x4010108	          0x4d85c0	                             test r8, r8	      1807	eval.c	FUNCTION_43	ELSE_11	IF_21	IF_22
0x401010b	     0xf8457020000	                            je 0x4010368	      1807	eval.c	FUNCTION_43	ELSE_11	IF_21	IF_22
0x4010111	        0x410fb600	                    movzx eax, byte [r8]	      1807	eval.c	FUNCTION_43	ELSE_11	IF_21	IF_22
0x4010115	          0x83e82b	                           sub eax, 0x2b	      1807	eval.c	FUNCTION_43	ELSE_11	IF_21	IF_22
0x4010118	            0xa8fd	                           test al, 0xfd	      1807	eval.c	FUNCTION_43	ELSE_11	IF_21	IF_22
0x401011a	     0xf84da030000	                            je 0x40104fa	      1807	eval.c	FUNCTION_43	ELSE_11	IF_21	IF_22
0x4010120	          0x4885c9	                           test rcx, rcx	      1809	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23
0x4010123	            0x741d	                            je 0x4010142	      1809	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23
0x4010125	        0x488d7f02	                      lea rdi, [rdi + 2]	      1810	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23	CALL_38
0x4010129	      0xe800000000	                          call 0x401012e	      1810	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23	CALL_38
0x401012e	           0xfb630	                   movzx esi, byte [rax]	      1810	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23	CALL_38
0x4010131	          0x4c89e7	                            mov rdi, r12	      1810	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23	CALL_38
0x4010134	      0xe800000000	                          call 0x4010139	      1810	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23	CALL_38
0x4010139	          0x4885c0	                           test rax, rax	      1810	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23	CALL_38
0x401013c	     0xf849e020000	                            je 0x40103e0	      1810	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23	CALL_38
0x4010142	      0xbe00000000	                              mov esi, 0	      7098	eval.c	FUNCTION_129	CALL_1
0x4010147	          0x4c89f7	                            mov rdi, r14	      7098	eval.c	FUNCTION_129	CALL_1
0x401014a	      0xe800000000	                          call 0x401014f	      7098	eval.c	FUNCTION_129	CALL_1
0x401014f	          0x4885c0	                           test rax, rax	      1818	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24
0x4010152	          0x4889c3	                            mov rbx, rax	      7098	eval.c	FUNCTION_129	CALL_1
0x4010155	     0xf84a5010000	                            je 0x4010300	      1818	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24
0x401015b	      0x41807d002e	                    cmp byte [r13], 0x2e	      1818	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24
0x4010160	     0xf841a030000	                            je 0x4010480	      1818	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24
0x4010166	          0x4531e4	                          xor r12d, r12d	      1814	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13
0x4010169	         0xfb64501	               movzx eax, byte [rbp + 1]	      1829	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_26	CALL_45
0x401016d	          0x4889de	                            mov rsi, rbx	      1829	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_26	CALL_45
0x4010170	      0xbf22000000	                           mov edi, 0x22	      1829	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_26	CALL_45
0x4010175	        0x488d5d02	                      lea rbx, [rbp + 2]	      1830	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_26
0x4010179	      0xbaffffffff	                     mov edx, 0xffffffff	      1829	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_26	CALL_45
0x401017e	            0x3c40	                            cmp al, 0x40	      1829	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_26	CALL_45
0x4010180	           0xf45f8	                         cmovne edi, eax	      1829	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_26	CALL_45
0x4010183	            0x31c9	                            xor ecx, ecx	      1829	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_26	CALL_45
0x4010185	      0xe800000000	                          call 0x401018a	      1829	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_26	CALL_45
0x401018a	          0x4c89e7	                            mov rdi, r12	      1832	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	CALL_46
0x401018d	      0xe800000000	                          call 0x4010192	      1832	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	CALL_46
0x4010192	      0xe9cbfdffff	                           jmp 0x400ff62	      1832	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	CALL_46
0x4010197	    0x660f1f840000	                    nop word [rax + rax]	      1832	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	CALL_46
0x40101a0	         0xfb64701	               movzx eax, byte [rdi + 1]	      8429	eval.c	FUNCTION_159	IF_1
0x40101a4	        0x488d5f01	                      lea rbx, [rdi + 1]	      8428	eval.c	FUNCTION_159
0x40101a8	    0xc74424080000	                  mov dword [rsp + 8], 0	      8429	eval.c	FUNCTION_159	IF_1
0x40101b0	            0x3c67	                            cmp al, 0x67	      8429	eval.c	FUNCTION_159	IF_1
0x40101b2	     0xf8488020000	                            je 0x4010440	      8429	eval.c	FUNCTION_159	IF_1
0x40101b8	            0x3c6c	                            cmp al, 0x6c	      8434	eval.c	FUNCTION_159	ELSE_1	IF_2
0x40101ba	     0xf84a0020000	                            je 0x4010460	      8434	eval.c	FUNCTION_159	ELSE_1	IF_2
0x40101c0	            0x89c2	                            mov edx, eax	      8442	eval.c	FUNCTION_159	IF_3	CALL_1
0x40101c2	          0x83e2df	                     and edx, 0xffffffdf	      8442	eval.c	FUNCTION_159	IF_3	CALL_1
0x40101c5	          0x83ea41	                           sub edx, 0x41	      8442	eval.c	FUNCTION_159	IF_3	CALL_1
0x40101c8	          0x80fa19	                            cmp dl, 0x19	      8442	eval.c	FUNCTION_159	IF_3	CALL_1
0x40101cb	     0xf870f020000	                            ja 0x40103e0	      8442	eval.c	FUNCTION_159	IF_3	CALL_1
0x40101d1	            0x3c74	                            cmp al, 0x74	      8446	eval.c	FUNCTION_159	IF_4
0x40101d3	     0xf84d7010000	                            je 0x40103b0	      8446	eval.c	FUNCTION_159	IF_4
0x40101d9	          0x4989df	                            mov r15, rbx	      8429	eval.c	FUNCTION_159	IF_1
0x40101dc	         0xf1f4000	                         nop dword [rax]	      8429	eval.c	FUNCTION_159	IF_1
0x40101e0	        0x4983c701	                              add r15, 1	      8450	eval.c	FUNCTION_159	ELSE_3	WHILE_1
0x40101e4	        0x410fb607	                   movzx eax, byte [r15]	      8449	eval.c	FUNCTION_159	ELSE_3	WHILE_1	CALL_2
0x40101e8	          0x83e0df	                     and eax, 0xffffffdf	      8449	eval.c	FUNCTION_159	ELSE_3	WHILE_1	CALL_2
0x40101eb	          0x83e841	                           sub eax, 0x41	      8449	eval.c	FUNCTION_159	ELSE_3	WHILE_1	CALL_2
0x40101ee	            0x3c19	                            cmp al, 0x19	      8449	eval.c	FUNCTION_159	ELSE_3	WHILE_1	CALL_2
0x40101f0	            0x76ee	                           jbe 0x40101e0	      8449	eval.c	FUNCTION_159	ELSE_3	WHILE_1	CALL_2
0x40101f2	          0x4d85e4	                           test r12, r12	      1748	eval.c	FUNCTION_43	ELSE_6	IF_13	IF_14
0x40101f5	            0x741c	                            je 0x4010213	      1748	eval.c	FUNCTION_43	ELSE_6	IF_13	IF_14
0x40101f7	          0x4c89ff	                            mov rdi, r15	      1749	eval.c	FUNCTION_43	ELSE_6	IF_13	IF_14	CALL_23
0x40101fa	      0xe800000000	                          call 0x40101ff	      1749	eval.c	FUNCTION_43	ELSE_6	IF_13	IF_14	CALL_23
0x40101ff	           0xfb630	                   movzx esi, byte [rax]	      1749	eval.c	FUNCTION_43	ELSE_6	IF_13	IF_14	CALL_23
0x4010202	          0x4c89e7	                            mov rdi, r12	      1749	eval.c	FUNCTION_43	ELSE_6	IF_13	IF_14	CALL_23
0x4010205	      0xe800000000	                          call 0x401020a	      1749	eval.c	FUNCTION_43	ELSE_6	IF_13	IF_14	CALL_23
0x401020a	          0x4885c0	                           test rax, rax	      1749	eval.c	FUNCTION_43	ELSE_6	IF_13	IF_14	CALL_23
0x401020d	     0xf84cd010000	                            je 0x40103e0	      1749	eval.c	FUNCTION_43	ELSE_6	IF_13	IF_14	CALL_23
0x4010213	      0x488d742418	                   lea rsi, [rsp + 0x18]	      6964	eval.c	FUNCTION_124	CALL_1
0x4010218	          0x4c89f7	                            mov rdi, r14	      6964	eval.c	FUNCTION_124	CALL_1
0x401021b	        0x410fb62f	                   movzx ebp, byte [r15]	      1759	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7
0x401021f	        0x41c60700	                       mov byte [r15], 0	      1760	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7
0x4010223	    0x48c744242000	               mov qword [rsp + 0x20], 0	      1756	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7
0x401022c	    0xc74424180000	               mov dword [rsp + 0x18], 0	      6962	eval.c	FUNCTION_124
0x4010234	      0xe800000000	                          call 0x4010239	      6964	eval.c	FUNCTION_124	CALL_1
0x4010239	          0x4c89f7	                            mov rdi, r14	      7098	eval.c	FUNCTION_129	CALL_1
0x401023c	      0xbe00000000	                              mov esi, 0	      7098	eval.c	FUNCTION_129	CALL_1
0x4010241	          0x4989c4	                            mov r12, rax	      6964	eval.c	FUNCTION_124	CALL_1
0x4010244	      0xe800000000	                          call 0x4010249	      7098	eval.c	FUNCTION_129	CALL_1
0x4010249	          0x4885c0	                           test rax, rax	      1764	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15
0x401024c	          0x4989c6	                            mov r14, rax	      7098	eval.c	FUNCTION_129	CALL_1
0x401024f	     0xf84db000000	                            je 0x4010330	      1764	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15
0x4010255	          0x4d85ed	                           test r13, r13	      1764	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15
0x4010258	     0xf84d2000000	                            je 0x4010330	      1764	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15
0x401025e	      0x41807d003d	                    cmp byte [r13], 0x3d	      1764	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15
0x4010263	            0x746b	                            je 0x40102d0	      1764	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15
0x4010265	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      1766	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	CALL_28
0x4010269	      0x488d542420	                   lea rdx, [rsp + 0x20]	      1766	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	CALL_28
0x401026e	      0x488d742418	                   lea rsi, [rsp + 0x18]	      1766	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	CALL_28
0x4010273	          0x4889df	                            mov rdi, rbx	      1766	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	CALL_28
0x4010276	      0xe800000000	                          call 0x401027b	      1766	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	CALL_28
0x401027b	          0x83f801	                              cmp eax, 1	      1768	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	IF_16
0x401027e	            0x742b	                            je 0x40102ab	      1768	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	IF_16
0x4010280	            0x85c0	                           test eax, eax	      1769	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	IF_16
0x4010282	            0x754c	                           jne 0x40102d0	      1769	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	IF_16
0x4010284	      0x41807d002e	                    cmp byte [r13], 0x2e	      1769	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	IF_16
0x4010289	            0x747f	                            je 0x401030a	      1769	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	IF_16
0x401028b	      0xba05000000	                              mov edx, 5	      1771	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	IF_16	CALL_30
0x4010290	      0xbe00000000	                              mov esi, 0	      1771	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	IF_16	CALL_30
0x4010295	            0x31ff	                            xor edi, edi	      1771	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	IF_16	CALL_30
0x4010297	      0xe800000000	                          call 0x401029c	      1771	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	IF_16	CALL_30
0x401029c	          0x4c89ee	                            mov rsi, r13	      1771	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	IF_16	CALL_30
0x401029f	          0x4889c7	                            mov rdi, rax	      1771	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	IF_16	CALL_30
0x40102a2	            0x31db	                            xor ebx, ebx	      1681	eval.c	FUNCTION_43
0x40102a4	      0xe800000000	                          call 0x40102a9	      1771	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	IF_16	CALL_30
0x40102a9	            0xeb3a	                           jmp 0x40102e5	      1771	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	IF_16	CALL_30
0x40102ab	      0x410fb64500	                   movzx eax, byte [r13]	      1768	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	IF_16
0x40102b0	            0x3c2e	                            cmp al, 0x2e	      1768	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	IF_16
0x40102b2	            0x74d7	                            je 0x401028b	      1768	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	IF_16
0x40102b4	            0x3c2b	                            cmp al, 0x2b	      1778	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	IF_17	IF_18
0x40102b6	     0xf8461020000	                            je 0x401051d	      1778	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	IF_17	IF_18
0x40102bc	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1781	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	IF_17	ELSE_9
0x40102c1	          0x4c29e0	                            sub rax, r12	      1781	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	IF_17	ELSE_9
0x40102c4	          0x4989c4	                            mov r12, rax	      1781	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	IF_17	ELSE_9
0x40102c7	    0x660f1f840000	                    nop word [rax + rax]	      1781	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	IF_17	ELSE_9
0x40102d0	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      1793	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_20	CALL_33
0x40102d4	          0x4889df	                            mov rdi, rbx	      1793	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_20	CALL_33
0x40102d7	          0x4c89f2	                            mov rdx, r14	      1793	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_20	CALL_33
0x40102da	          0x4c89e6	                            mov rsi, r12	      1793	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_20	CALL_33
0x40102dd	          0x4c89fb	                            mov rbx, r15	      1793	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_20	CALL_33
0x40102e0	      0xe800000000	                          call 0x40102e5	      1793	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_20	CALL_33
0x40102e5	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1797	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	CALL_34
0x40102ea	          0x41882f	                     mov byte [r15], bpl	      1796	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7
0x40102ed	      0xe800000000	                          call 0x40102f2	      1797	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	CALL_34
0x40102f2	      0xe96bfcffff	                           jmp 0x400ff62	      1797	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	CALL_34
0x40102f7	    0x660f1f840000	                    nop word [rax + rax]	      1797	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	CALL_34
0x4010300	          0x4531e4	                          xor r12d, r12d	      1814	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13
0x4010303	            0x31db	                            xor ebx, ebx	      1681	eval.c	FUNCTION_43
0x4010305	      0xe980feffff	                           jmp 0x401018a	      1681	eval.c	FUNCTION_43
0x401030a	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1783	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	ELSE_9	ELSE_10	IF_19
0x401030f	          0x4885ff	                           test rdi, rdi	      1783	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	ELSE_9	ELSE_10	IF_19
0x4010312	            0x74bc	                            je 0x40102d0	      1783	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	ELSE_9	ELSE_10	IF_19
0x4010314	          0x4c89f6	                            mov rsi, r14	      1785	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	ELSE_9	ELSE_10	IF_19	CALL_31
0x4010317	      0xe800000000	                          call 0x401031c	      1785	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	ELSE_9	ELSE_10	IF_19	CALL_31
0x401031c	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1786	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	ELSE_9	ELSE_10	IF_19	CALL_32
0x4010321	          0x4989c6	                            mov r14, rax	      1785	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	ELSE_9	ELSE_10	IF_19	CALL_31
0x4010324	      0xe800000000	                          call 0x4010329	      1786	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	ELSE_9	ELSE_10	IF_19	CALL_32
0x4010329	      0x4c89742420	             mov qword [rsp + 0x20], r14	      1787	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	ELSE_9	ELSE_10	IF_19
0x401032e	            0x6690	                                     nop	      1787	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	ELSE_9	ELSE_10	IF_19
0x4010330	          0x4d85f6	                           test r14, r14	      1791	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_20
0x4010333	            0x759b	                           jne 0x40102d0	      1791	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_20
0x4010335	            0x31db	                            xor ebx, ebx	      1681	eval.c	FUNCTION_43
0x4010337	            0xebac	                           jmp 0x40102e5	      1681	eval.c	FUNCTION_43
0x4010339	     0xf1f80000000	                         nop dword [rax]	      1681	eval.c	FUNCTION_43
0x4010340	      0xba05000000	                              mov edx, 5	      1859	eval.c	FUNCTION_43	CALL_56
0x4010345	      0xbe00000000	                              mov esi, 0	      1859	eval.c	FUNCTION_43	CALL_56
0x401034a	            0x31ff	                            xor edi, edi	      1859	eval.c	FUNCTION_43	CALL_56
0x401034c	      0xe800000000	                          call 0x4010351	      1859	eval.c	FUNCTION_43	CALL_56
0x4010351	          0x4889ee	                            mov rsi, rbp	      1859	eval.c	FUNCTION_43	CALL_56
0x4010354	          0x4889c7	                            mov rdi, rax	      1859	eval.c	FUNCTION_43	CALL_56
0x4010357	            0x31db	                            xor ebx, ebx	      1681	eval.c	FUNCTION_43
0x4010359	      0xe800000000	                          call 0x401035e	      1859	eval.c	FUNCTION_43	CALL_56
0x401035e	      0xe9fffbffff	                           jmp 0x400ff62	      1859	eval.c	FUNCTION_43	CALL_56
0x4010363	       0xf1f440000	                   nop dword [rax + rax]	      1859	eval.c	FUNCTION_43	CALL_56
0x4010368	          0x4885c9	                           test rcx, rcx	      1809	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23
0x401036b	            0x7419	                            je 0x4010386	      1809	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23
0x401036d	        0x488d7f02	                      lea rdi, [rdi + 2]	      1810	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23	CALL_38
0x4010371	      0xe800000000	                          call 0x4010376	      1810	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23	CALL_38
0x4010376	           0xfb630	                   movzx esi, byte [rax]	      1810	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23	CALL_38
0x4010379	          0x4c89e7	                            mov rdi, r12	      1810	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23	CALL_38
0x401037c	      0xe800000000	                          call 0x4010381	      1810	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23	CALL_38
0x4010381	          0x4885c0	                           test rax, rax	      1810	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23	CALL_38
0x4010384	            0x745a	                            je 0x40103e0	      1810	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23	CALL_38
0x4010386	      0xbe00000000	                              mov esi, 0	      7098	eval.c	FUNCTION_129	CALL_1
0x401038b	          0x4c89f7	                            mov rdi, r14	      7098	eval.c	FUNCTION_129	CALL_1
0x401038e	          0x4531e4	                          xor r12d, r12d	      1814	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13
0x4010391	      0xe800000000	                          call 0x4010396	      7098	eval.c	FUNCTION_129	CALL_1
0x4010396	          0x4889c3	                            mov rbx, rax	      7098	eval.c	FUNCTION_129	CALL_1
0x4010399	          0x4885db	                           test rbx, rbx	      1827	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_26
0x401039c	     0xf85c7fdffff	                           jne 0x4010169	      1827	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_26
0x40103a2	            0x31db	                            xor ebx, ebx	      1681	eval.c	FUNCTION_43
0x40103a4	      0xe9e1fdffff	                           jmp 0x401018a	      1681	eval.c	FUNCTION_43
0x40103a9	     0xf1f80000000	                         nop dword [rax]	      1681	eval.c	FUNCTION_43
0x40103b0	        0x807b015f	                cmp byte [rbx + 1], 0x5f	      8446	eval.c	FUNCTION_159	IF_4
0x40103b4	     0xf851ffeffff	                           jne 0x40101d9	      8446	eval.c	FUNCTION_159	IF_4
0x40103ba	        0x807b0200	                   cmp byte [rbx + 2], 0	      8446	eval.c	FUNCTION_159	IF_4
0x40103be	     0xf8415feffff	                            je 0x40101d9	      8446	eval.c	FUNCTION_159	IF_4
0x40103c4	        0x807b0300	                   cmp byte [rbx + 3], 0	      8446	eval.c	FUNCTION_159	IF_4
0x40103c8	     0xf840bfeffff	                            je 0x40101d9	      8446	eval.c	FUNCTION_159	IF_4
0x40103ce	          0x4989df	                            mov r15, rbx	      1748	eval.c	FUNCTION_43	ELSE_6	IF_13	IF_14
0x40103d1	        0x4983c704	                              add r15, 4	      1748	eval.c	FUNCTION_43	ELSE_6	IF_13	IF_14
0x40103d5	     0xf8517feffff	                           jne 0x40101f2	      1748	eval.c	FUNCTION_43	ELSE_6	IF_13	IF_14
0x40103db	       0xf1f440000	                   nop dword [rax + rax]	      1748	eval.c	FUNCTION_43	ELSE_6	IF_13	IF_14
0x40103e0	      0xba05000000	                              mov edx, 5	      1811	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23
0x40103e5	      0xbe00000000	                              mov esi, 0	      1811	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23
0x40103ea	            0x31ff	                            xor edi, edi	      1811	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23
0x40103ec	      0xe800000000	                          call 0x40103f1	      1811	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23
0x40103f1	          0x4889c7	                            mov rdi, rax	      1811	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23
0x40103f4	            0x31db	                            xor ebx, ebx	      1681	eval.c	FUNCTION_43
0x40103f6	      0xe800000000	                          call 0x40103fb	      1811	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23
0x40103fb	      0xe962fbffff	                           jmp 0x400ff62	      1811	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_12	IF_23
0x4010400	      0xbe00000000	                              mov esi, 0	      1726	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_4	IF_11	CALL_18
0x4010405	          0x4c89ff	                            mov rdi, r15	      1726	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_4	IF_11	CALL_18
0x4010408	      0xe800000000	                          call 0x401040d	      1726	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_4	IF_11	CALL_18
0x401040d	            0x85c0	                           test eax, eax	      1726	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_4	IF_11	CALL_18
0x401040f	     0xf85b2fcffff	                           jne 0x40100c7	      1726	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_4	IF_11	CALL_18
0x4010415	    0xc70500000000	               mov dword [0x0401041f], 0	      1727	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_4	IF_11
0x401041f	      0xe9ccfcffff	                           jmp 0x40100f0	      1727	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_4	IF_11
0x4010424	         0xf1f4000	                         nop dword [rax]	      1727	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	ELSE_4	IF_11
0x4010428	            0x31db	                            xor ebx, ebx	      1681	eval.c	FUNCTION_43
0x401042a	      0xe9c1fcffff	                           jmp 0x40100f0	      1681	eval.c	FUNCTION_43
0x401042f	              0x90	                                     nop	      1681	eval.c	FUNCTION_43
0x4010430	            0x31db	                            xor ebx, ebx	      1681	eval.c	FUNCTION_43
0x4010432	      0xe917fbffff	                           jmp 0x400ff4e	      1681	eval.c	FUNCTION_43
0x4010437	    0x660f1f840000	                    nop word [rax + rax]	      1681	eval.c	FUNCTION_43
0x4010440	        0x807f023a	                cmp byte [rdi + 2], 0x3a	      8429	eval.c	FUNCTION_159	IF_1
0x4010444	     0xf858ffdffff	                           jne 0x40101d9	      8429	eval.c	FUNCTION_159	IF_1
0x401044a	        0x488d5f03	                      lea rbx, [rdi + 3]	      8432	eval.c	FUNCTION_159	IF_1
0x401044e	         0xfb64703	               movzx eax, byte [rdi + 3]	      8432	eval.c	FUNCTION_159	IF_1
0x4010452	    0xc74424080200	                  mov dword [rsp + 8], 2	      8431	eval.c	FUNCTION_159	IF_1
0x401045a	      0xe961fdffff	                           jmp 0x40101c0	      8431	eval.c	FUNCTION_159	IF_1
0x401045f	              0x90	                                     nop	      8431	eval.c	FUNCTION_159	IF_1
0x4010460	        0x807f023a	                cmp byte [rdi + 2], 0x3a	      8434	eval.c	FUNCTION_159	ELSE_1	IF_2
0x4010464	     0xf856ffdffff	                           jne 0x40101d9	      8434	eval.c	FUNCTION_159	ELSE_1	IF_2
0x401046a	        0x488d5f03	                      lea rbx, [rdi + 3]	      8437	eval.c	FUNCTION_159	ELSE_1	IF_2
0x401046e	         0xfb64703	               movzx eax, byte [rdi + 3]	      8437	eval.c	FUNCTION_159	ELSE_1	IF_2
0x4010472	    0xc74424080400	                  mov dword [rsp + 8], 4	      8436	eval.c	FUNCTION_159	ELSE_1	IF_2
0x401047a	      0xe941fdffff	                           jmp 0x40101c0	      8436	eval.c	FUNCTION_159	ELSE_1	IF_2
0x401047f	              0x90	                                     nop	      8436	eval.c	FUNCTION_159	ELSE_1	IF_2
0x4010480	         0xfb64501	               movzx eax, byte [rbp + 1]	      1820	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	CALL_42
0x4010484	      0xbf22000000	                           mov edi, 0x22	      1820	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	CALL_42
0x4010489	      0xbe02000000	                              mov esi, 2	      1820	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	CALL_42
0x401048e	            0x3c40	                            cmp al, 0x40	      1820	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	CALL_42
0x4010490	           0xf45f8	                         cmovne edi, eax	      1820	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	CALL_42
0x4010493	      0xe800000000	                          call 0x4010498	      1820	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	CALL_42
0x4010498	          0x4885c0	                           test rax, rax	      1821	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	IF_25
0x401049b	          0x4989c4	                            mov r12, rax	      1820	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	CALL_42
0x401049e	     0xf84c2fcffff	                            je 0x4010166	      1821	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	IF_25
0x40104a4	          0x4889de	                            mov rsi, rbx	      1823	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	IF_25	CALL_43
0x40104a7	          0x4889c7	                            mov rdi, rax	      1823	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	IF_25	CALL_43
0x40104aa	      0xe800000000	                          call 0x40104af	      1823	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	IF_25	CALL_43
0x40104af	          0x4c89e7	                            mov rdi, r12	      1824	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	IF_25	CALL_44
0x40104b2	          0x4889c3	                            mov rbx, rax	      1823	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	IF_25	CALL_43
0x40104b5	          0x4989dc	                            mov r12, rbx	      1823	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	IF_25	CALL_43
0x40104b8	      0xe800000000	                          call 0x40104bd	      1824	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	IF_25	CALL_44
0x40104bd	      0xe9d7feffff	                           jmp 0x4010399	      1824	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	IF_25	CALL_44
0x40104c2	    0x660f1f440000	                    nop word [rax + rax]	      1824	eval.c	FUNCTION_43	ELSE_11	IF_21	ELSE_13	IF_24	IF_25	CALL_44
0x40104c8	            0x31db	                            xor ebx, ebx	      1681	eval.c	FUNCTION_43
0x40104ca	      0xe993faffff	                           jmp 0x400ff62	      1681	eval.c	FUNCTION_43
0x40104cf	              0x90	                                     nop	      1681	eval.c	FUNCTION_43
0x40104d0	      0xba05000000	                              mov edx, 5	      1848	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	CALL_52
0x40104d5	      0xbe00000000	                              mov esi, 0	      1848	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	CALL_52
0x40104da	            0x31ff	                            xor edi, edi	      1848	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	CALL_52
0x40104dc	      0xe800000000	                          call 0x40104e1	      1848	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	CALL_52
0x40104e1	          0x4889c7	                            mov rdi, rax	      1848	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	CALL_52
0x40104e4	            0x31db	                            xor ebx, ebx	      1681	eval.c	FUNCTION_43
0x40104e6	      0xe800000000	                          call 0x40104eb	      1848	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	CALL_52
0x40104eb	      0xe95efaffff	                           jmp 0x400ff4e	      1848	eval.c	FUNCTION_43	ELSE_14	IF_27	IF_28	CALL_52
0x40104f0	      0xe800000000	                          call 0x40104f5	      1725	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	CALL_17
0x40104f5	      0xe9f6fbffff	                           jmp 0x40100f0	      1725	eval.c	FUNCTION_43	IF_1	ELSE_1	ELSE_3	IF_5	IF_9	CALL_17
0x40104fa	      0xba05000000	                              mov edx, 5	      1808	eval.c	FUNCTION_43	ELSE_11	IF_21	CALL_36
0x40104ff	      0xbe00000000	                              mov esi, 0	      1808	eval.c	FUNCTION_43	ELSE_11	IF_21	CALL_36
0x4010504	            0x31ff	                            xor edi, edi	      1808	eval.c	FUNCTION_43	ELSE_11	IF_21	CALL_36
0x4010506	      0xe800000000	                          call 0x401050b	      1808	eval.c	FUNCTION_43	ELSE_11	IF_21	CALL_36
0x401050b	          0x4c89ee	                            mov rsi, r13	      1808	eval.c	FUNCTION_43	ELSE_11	IF_21	CALL_36
0x401050e	          0x4889c7	                            mov rdi, rax	      1808	eval.c	FUNCTION_43	ELSE_11	IF_21	CALL_36
0x4010511	            0x31db	                            xor ebx, ebx	      1681	eval.c	FUNCTION_43
0x4010513	      0xe800000000	                          call 0x4010518	      1808	eval.c	FUNCTION_43	ELSE_11	IF_21	CALL_36
0x4010518	      0xe945faffff	                           jmp 0x400ff62	      1808	eval.c	FUNCTION_43	ELSE_11	IF_21	CALL_36
0x401051d	      0x4c03642418	             add r12, qword [rsp + 0x18]	      1779	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	IF_17	IF_18
0x4010522	      0xe9a9fdffff	                           jmp 0x40102d0	      1779	eval.c	FUNCTION_43	ELSE_6	IF_13	ELSE_7	IF_15	ELSE_8	IF_17	IF_18
0x4010527	      0xe800000000	                          call 0x401052c	      1862	eval.c	FUNCTION_43
call_func_retlist	functions,0:SWITCH,0:IF,2:DO,0:ELSE,0:WHILE,0:CALL,2:FOR,0	24
0x40035c0	        0x4883ec28	                           sub rsp, 0x28	      1158	eval.c	FUNCTION_29
0x40035c4	          0x4989e0	                             mov r8, rsp	      1162	eval.c	FUNCTION_29	IF_1	CALL_1
0x40035c7	    0x64488b042528	                mov rax, qword fs:[0x28]	      1158	eval.c	FUNCTION_29
0x40035d0	      0x4889442418	             mov qword [rsp + 0x18], rax	      1158	eval.c	FUNCTION_29
0x40035d5	            0x31c0	                            xor eax, eax	      1158	eval.c	FUNCTION_29
0x40035d7	      0xe834feffff	 call sym.call_vim_function.constprop.21	      1162	eval.c	FUNCTION_29	IF_1	CALL_1
0x40035dc	            0x85c0	                           test eax, eax	      1162	eval.c	FUNCTION_29	IF_1	CALL_1
0x40035de	            0x7420	                            je 0x4003600	      1162	eval.c	FUNCTION_29	IF_1	CALL_1
0x40035e0	        0x833c2405	                      cmp dword [rsp], 5	      1165	eval.c	FUNCTION_29	IF_2
0x40035e4	      0x488b442408	                mov rax, qword [rsp + 8]	      1171	eval.c	FUNCTION_29
0x40035e9	            0x751d	                           jne 0x4003608	      1165	eval.c	FUNCTION_29	IF_2
0x40035eb	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1172	eval.c	FUNCTION_29
0x40035f0	    0x644833142528	                xor rdx, qword fs:[0x28]	      1172	eval.c	FUNCTION_29
0x40035f9	            0x7519	                           jne 0x4003614	      1172	eval.c	FUNCTION_29
0x40035fb	        0x4883c428	                           add rsp, 0x28	      1172	eval.c	FUNCTION_29
0x40035ff	              0xc3	                                     ret	      1172	eval.c	FUNCTION_29
0x4003600	            0x31c0	                            xor eax, eax	      1163	eval.c	FUNCTION_29	IF_1
0x4003602	            0xebe7	                           jmp 0x40035eb	      1163	eval.c	FUNCTION_29	IF_1
0x4003604	         0xf1f4000	                         nop dword [rax]	      1163	eval.c	FUNCTION_29	IF_1
0x4003608	          0x4889e7	                            mov rdi, rsp	      1167	eval.c	FUNCTION_29	IF_2	CALL_2
0x400360b	      0xe800000000	                          call 0x4003610	      1167	eval.c	FUNCTION_29	IF_2	CALL_2
0x4003610	            0x31c0	                            xor eax, eax	      1168	eval.c	FUNCTION_29	IF_2
0x4003612	            0xebd7	                           jmp 0x40035eb	      1168	eval.c	FUNCTION_29	IF_2
0x4003614	      0xe800000000	                          call 0x4003619	      1172	eval.c	FUNCTION_29
find_tabwin	functions,0:SWITCH,0:IF,4:DO,0:ELSE,2:WHILE,0:CALL,3:FOR,0	65
0x40069e0	              0x55	                                push rbp	      8250	eval.c	FUNCTION_156
0x40069e1	              0x53	                                push rbx	      8250	eval.c	FUNCTION_156
0x40069e2	          0x4889fb	                            mov rbx, rdi	      8250	eval.c	FUNCTION_156
0x40069e5	        0x4883ec18	                           sub rsp, 0x18	      8250	eval.c	FUNCTION_156
0x40069e9	            0x8b17	                    mov edx, dword [rdi]	      8255	eval.c	FUNCTION_156	IF_1
0x40069eb	    0x64488b042528	                mov rax, qword fs:[0x28]	      8250	eval.c	FUNCTION_156
0x40069f4	      0x4889442408	                mov qword [rsp + 8], rax	      8250	eval.c	FUNCTION_156
0x40069f9	            0x31c0	                            xor eax, eax	      8250	eval.c	FUNCTION_156
0x40069fb	    0x488b05000000	            mov rax, qword [0x04006a02] 	      8270	eval.c	FUNCTION_156	ELSE_2
0x4006a02	            0x85d2	                           test edx, edx	      8255	eval.c	FUNCTION_156	IF_1
0x4006a04	            0x7462	                            je 0x4006a68	      8255	eval.c	FUNCTION_156	IF_1
0x4006a06	            0x8b06	                    mov eax, dword [rsi]	      8257	eval.c	FUNCTION_156	IF_1	IF_2
0x4006a08	          0x4889f7	                            mov rdi, rsi	      8257	eval.c	FUNCTION_156	IF_1	IF_2
0x4006a0b	    0x488b2d000000	            mov rbp, qword [0x04006a12] 	      8264	eval.c	FUNCTION_156	IF_1	ELSE_1
0x4006a12	            0x85c0	                           test eax, eax	      8257	eval.c	FUNCTION_156	IF_1	IF_2
0x4006a14	            0x7572	                           jne 0x4006a88	      8257	eval.c	FUNCTION_156	IF_1	IF_2
0x4006a16	          0x4885ed	                           test rbp, rbp	      8266	eval.c	FUNCTION_156	IF_1	IF_4
0x4006a19	            0x7465	                            je 0x4006a80	      8266	eval.c	FUNCTION_156	IF_1	IF_4
0x4006a1b	            0x31f6	                            xor esi, esi	      8221	eval.c	FUNCTION_155	CALL_1
0x4006a1d	          0x4889df	                            mov rdi, rbx	      8221	eval.c	FUNCTION_155	CALL_1
0x4006a20	      0xe800000000	                          call 0x4006a25	      8221	eval.c	FUNCTION_155	CALL_1
0x4006a25	            0x85c0	                           test eax, eax	      8223	eval.c	FUNCTION_155	IF_1
0x4006a27	            0x89c2	                            mov edx, eax	      8221	eval.c	FUNCTION_155	CALL_1
0x4006a29	            0x7855	                            js 0x4006a80	      8223	eval.c	FUNCTION_155	IF_1
0x4006a2b	    0x488b05000000	            mov rax, qword [0x04006a32] 	      8226	eval.c	FUNCTION_155	IF_2
0x4006a32	            0x7434	                            je 0x4006a68	      8225	eval.c	FUNCTION_155	IF_2
0x4006a34	    0x483b2d000000	            cmp rbp, qword [0x04006a3b] 	      8228	eval.c	FUNCTION_155
0x4006a3b	            0x7471	                            je 0x4006aae	      8228	eval.c	FUNCTION_155
0x4006a3d	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      8228	eval.c	FUNCTION_155
0x4006a41	            0xeb0d	                           jmp 0x4006a50	      8228	eval.c	FUNCTION_155
0x4006a43	       0xf1f440000	                   nop dword [rax + rax]	      8228	eval.c	FUNCTION_155
0x4006a48	            0x3910	                    cmp dword [rax], edx	      8232	eval.c	FUNCTION_155	FUNCTION_1	IF_1	IF_2
0x4006a4a	            0x741c	                            je 0x4006a68	      8232	eval.c	FUNCTION_155	FUNCTION_1	IF_1	IF_2
0x4006a4c	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8228	eval.c	FUNCTION_155
0x4006a50	          0x4885c0	                           test rax, rax	      8228	eval.c	FUNCTION_155
0x4006a53	            0x742b	                            je 0x4006a80	      8228	eval.c	FUNCTION_155
0x4006a55	    0x81fae7030000	                          cmp edx, 0x3e7	      8230	eval.c	FUNCTION_155	FUNCTION_1	IF_1
0x4006a5b	            0x7feb	                            jg 0x4006a48	      8230	eval.c	FUNCTION_155	FUNCTION_1	IF_1
0x4006a5d	          0x83ea01	                              sub edx, 1	      8235	eval.c	FUNCTION_155	FUNCTION_1	ELSE_1	IF_3
0x4006a60	            0x85d2	                           test edx, edx	      8235	eval.c	FUNCTION_155	FUNCTION_1	ELSE_1	IF_3
0x4006a62	            0x7fe8	                            jg 0x4006a4c	      8235	eval.c	FUNCTION_155	FUNCTION_1	ELSE_1	IF_3
0x4006a64	         0xf1f4000	                         nop dword [rax]	      8235	eval.c	FUNCTION_155	FUNCTION_1	ELSE_1	IF_3
0x4006a68	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      8273	eval.c	FUNCTION_156	ELSE_2
0x4006a6d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      8273	eval.c	FUNCTION_156	ELSE_2
0x4006a76	            0x753f	                           jne 0x4006ab7	      8273	eval.c	FUNCTION_156	ELSE_2
0x4006a78	        0x4883c418	                           add rsp, 0x18	      8273	eval.c	FUNCTION_156	ELSE_2
0x4006a7c	              0x5b	                                 pop rbx	      8273	eval.c	FUNCTION_156	ELSE_2
0x4006a7d	              0x5d	                                 pop rbp	      8273	eval.c	FUNCTION_156	ELSE_2
0x4006a7e	              0xc3	                                     ret	      8273	eval.c	FUNCTION_156	ELSE_2
0x4006a7f	              0x90	                                     nop	      8273	eval.c	FUNCTION_156	ELSE_2
0x4006a80	            0x31c0	                            xor eax, eax	      8251	eval.c	FUNCTION_156
0x4006a82	            0xebe4	                           jmp 0x4006a68	      8251	eval.c	FUNCTION_156
0x4006a84	         0xf1f4000	                         nop dword [rax]	      8251	eval.c	FUNCTION_156
0x4006a88	      0x488d742404	                      lea rsi, [rsp + 4]	      6964	eval.c	FUNCTION_124	CALL_1
0x4006a8d	    0xc74424040000	                  mov dword [rsp + 4], 0	      6962	eval.c	FUNCTION_124
0x4006a95	      0xe800000000	                          call 0x4006a9a	      6964	eval.c	FUNCTION_124	CALL_1
0x4006a9a	          0x4885c0	                           test rax, rax	      8260	eval.c	FUNCTION_156	IF_1	IF_2	IF_3
0x4006a9d	            0x78e1	                            js 0x4006a80	      8260	eval.c	FUNCTION_156	IF_1	IF_2	IF_3
0x4006a9f	            0x89c7	                            mov edi, eax	      8261	eval.c	FUNCTION_156	IF_1	IF_2	CALL_2
0x4006aa1	      0xe800000000	                          call 0x4006aa6	      8261	eval.c	FUNCTION_156	IF_1	IF_2	CALL_2
0x4006aa6	          0x4889c5	                            mov rbp, rax	      8261	eval.c	FUNCTION_156	IF_1	IF_2	CALL_2
0x4006aa9	      0xe968ffffff	                           jmp 0x4006a16	      8261	eval.c	FUNCTION_156	IF_1	IF_2	CALL_2
0x4006aae	    0x488b05000000	            mov rax, qword [0x04006ab5] 	      8228	eval.c	FUNCTION_155
0x4006ab5	            0xeb99	                           jmp 0x4006a50	      8228	eval.c	FUNCTION_155
0x4006ab7	      0xe800000000	                          call 0x4006abc	      8273	eval.c	FUNCTION_156	ELSE_2
free_for_info	functions,0:SWITCH,0:IF,1:DO,0:ELSE,0:WHILE,0:CALL,3:FOR,0	14
0x4000b60	          0x4885ff	                           test rdi, rdi	      2590	eval.c	FUNCTION_50	IF_1
0x4000b63	              0x53	                                push rbx	      2587	eval.c	FUNCTION_50
0x4000b64	          0x4889fb	                            mov rbx, rdi	      2587	eval.c	FUNCTION_50
0x4000b67	            0x741b	                            je 0x4000b84	      2590	eval.c	FUNCTION_50	IF_1
0x4000b69	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	      2590	eval.c	FUNCTION_50	IF_1
0x4000b6d	          0x4885ff	                           test rdi, rdi	      2590	eval.c	FUNCTION_50	IF_1
0x4000b70	            0x7412	                            je 0x4000b84	      2590	eval.c	FUNCTION_50	IF_1
0x4000b72	        0x488d7308	                      lea rsi, [rbx + 8]	      2592	eval.c	FUNCTION_50	IF_1	CALL_1
0x4000b76	      0xe800000000	                          call 0x4000b7b	      2592	eval.c	FUNCTION_50	IF_1	CALL_1
0x4000b7b	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      2593	eval.c	FUNCTION_50	IF_1	CALL_2
0x4000b7f	      0xe800000000	                          call 0x4000b84	      2593	eval.c	FUNCTION_50	IF_1	CALL_2
0x4000b84	          0x4889df	                            mov rdi, rbx	      2595	eval.c	FUNCTION_50	CALL_3
0x4000b87	              0x5b	                                 pop rbx	      2596	eval.c	FUNCTION_50
0x4000b88	      0xe900000000	                           jmp 0x4000b8d	      2595	eval.c	FUNCTION_50	CALL_3
set_var	functions,0:SWITCH,0:IF,17:DO,0:ELSE,6:WHILE,0:CALL,29:FOR,0	295
0x4005e50	            0x4157	                                push r15	      7525	eval.c	FUNCTION_143
0x4005e52	            0x4156	                                push r14	      7525	eval.c	FUNCTION_143
0x4005e54	            0x4155	                                push r13	      7525	eval.c	FUNCTION_143
0x4005e56	            0x4154	                                push r12	      7525	eval.c	FUNCTION_143
0x4005e58	              0x55	                                push rbp	      7525	eval.c	FUNCTION_143
0x4005e59	              0x53	                                push rbx	      7525	eval.c	FUNCTION_143
0x4005e5a	          0x4889fb	                            mov rbx, rdi	      7525	eval.c	FUNCTION_143
0x4005e5d	        0x4883ec18	                           sub rsp, 0x18	      7525	eval.c	FUNCTION_143
0x4005e61	    0x64488b042528	                mov rax, qword fs:[0x28]	      7525	eval.c	FUNCTION_143
0x4005e6a	      0x4889442408	                mov qword [rsp + 8], rax	      7525	eval.c	FUNCTION_143
0x4005e6f	            0x31c0	                            xor eax, eax	      7525	eval.c	FUNCTION_143
0x4005e71	           0xfb607	                   movzx eax, byte [rdi]	      7270	eval.c	FUNCTION_133	IF_1
0x4005e74	            0x84c0	                             test al, al	      7270	eval.c	FUNCTION_133	IF_1
0x4005e76	     0xf84e4000000	                            je 0x4005f60	      7270	eval.c	FUNCTION_133	IF_1
0x4005e7c	        0x807f013a	                cmp byte [rdi + 1], 0x3a	      7272	eval.c	FUNCTION_133	IF_2
0x4005e80	          0x4989f4	                            mov r12, rsi	      7272	eval.c	FUNCTION_133	IF_2
0x4005e83	          0x4189d5	                           mov r13d, edx	      7272	eval.c	FUNCTION_133	IF_2
0x4005e86	     0xf84a4000000	                            je 0x4005f30	      7272	eval.c	FUNCTION_133	IF_2
0x4005e8c	            0x3c3a	                            cmp al, 0x3a	      7275	eval.c	FUNCTION_133	IF_2	IF_3
0x4005e8e	     0xf84cc000000	                            je 0x4005f60	      7275	eval.c	FUNCTION_133	IF_2	IF_3
0x4005e94	            0x3c23	                            cmp al, 0x23	      7275	eval.c	FUNCTION_133	IF_2	IF_3
0x4005e96	     0xf84c4000000	                            je 0x4005f60	      7275	eval.c	FUNCTION_133	IF_2	IF_3
0x4005e9c	          0x4889fe	                            mov rsi, rdi	      7280	eval.c	FUNCTION_133	IF_2	CALL_1
0x4005e9f	      0xbf00000000	                              mov edi, 0	      7280	eval.c	FUNCTION_133	IF_2	CALL_1
0x4005ea4	      0xe800000000	                          call 0x4005ea9	      7280	eval.c	FUNCTION_133	IF_2	CALL_1
0x4005ea9	        0x488b5008	                mov rdx, qword [rax + 8]	      7281	eval.c	FUNCTION_133	IF_2	IF_4	CALL_2
0x4005ead	    0x4881fa000000	                              cmp rdx, 0	      7281	eval.c	FUNCTION_133	IF_2	IF_4	CALL_2
0x4005eb4	     0xf84f6000000	                            je 0x4005fb0	      7281	eval.c	FUNCTION_133	IF_2	IF_4	CALL_2
0x4005eba	          0x4885d2	                           test rdx, rdx	      7281	eval.c	FUNCTION_133	IF_2	IF_4	CALL_2
0x4005ebd	          0x4889dd	                            mov rbp, rbx	      7281	eval.c	FUNCTION_133	IF_2	IF_4	CALL_2
0x4005ec0	    0x41be00000000	                             mov r14d, 0	      7282	eval.c	FUNCTION_133	IF_2	IF_4
0x4005ec6	     0xf84e4000000	                            je 0x4005fb0	      7281	eval.c	FUNCTION_133	IF_2	IF_4	CALL_2
0x4005ecc	        0x807d0000	                       cmp byte [rbp], 0	      7531	eval.c	FUNCTION_143	IF_1
0x4005ed0	     0xf848a000000	                            je 0x4005f60	      7531	eval.c	FUNCTION_143	IF_1
0x4005ed6	          0x4889ee	                            mov rsi, rbp	      7238	eval.c	FUNCTION_132	CALL_3
0x4005ed9	          0x4c89f7	                            mov rdi, r14	      7238	eval.c	FUNCTION_132	CALL_3
0x4005edc	      0xe800000000	                          call 0x4005ee1	      7238	eval.c	FUNCTION_132	CALL_3
0x4005ee1	        0x4c8b7808	                mov r15, qword [rax + 8]	      7239	eval.c	FUNCTION_132	IF_2	CALL_4
0x4005ee5	          0x4d85ff	                           test r15, r15	      7239	eval.c	FUNCTION_132	IF_2	CALL_4
0x4005ee8	     0xf845a010000	                            je 0x4006048	      7239	eval.c	FUNCTION_132	IF_2	CALL_4
0x4005eee	    0x4981ff000000	                              cmp r15, 0	      7253	eval.c	FUNCTION_132	IF_2	IF_5	CALL_8
0x4005ef5	     0xf844d010000	                            je 0x4006048	      7253	eval.c	FUNCTION_132	IF_2	IF_5	CALL_8
0x4005efb	        0x4983ef11	                           sub r15, 0x11	      7539	eval.c	FUNCTION_143	IF_2
0x4005eff	     0xf8443010000	                            je 0x4006048	      7539	eval.c	FUNCTION_143	IF_2
0x4005f05	        0x418b0424	                    mov eax, dword [r12]	      7542	eval.c	FUNCTION_143	IF_3
0x4005f09	          0x83e803	                              sub eax, 3	      7542	eval.c	FUNCTION_143	IF_3
0x4005f0c	          0x83f801	                              cmp eax, 1	      7542	eval.c	FUNCTION_143	IF_3
0x4005f0f	     0xf862b020000	                           jbe 0x4006140	      7542	eval.c	FUNCTION_143	IF_3
0x4005f15	      0x410fb64710	           movzx eax, byte [r15 + 0x10] 	      7549	eval.c	FUNCTION_143	IF_4	IF_5	CALL_7
0x4005f1a	            0xa801	                              test al, 1	      7635	eval.c	FUNCTION_144	IF_1
0x4005f1c	     0xf84fe010000	                            je 0x4006120	      7635	eval.c	FUNCTION_144	IF_1
0x4005f22	      0xba05000000	                              mov edx, 5	      7637	eval.c	FUNCTION_144	IF_1	CALL_3
0x4005f27	      0xbe00000000	                              mov esi, 0	      7637	eval.c	FUNCTION_144	IF_1	CALL_3
0x4005f2c	            0xeb3c	                           jmp 0x4005f6a	      7637	eval.c	FUNCTION_144	IF_1	CALL_3
0x4005f2e	            0x6690	                                     nop	      7637	eval.c	FUNCTION_144	IF_1	CALL_3
0x4005f30	            0x3c67	                            cmp al, 0x67	      7290	eval.c	FUNCTION_133	IF_6
0x4005f32	        0x488d6f02	                      lea rbp, [rdi + 2]	      7289	eval.c	FUNCTION_133
0x4005f36	            0x7468	                            je 0x4005fa0	      7290	eval.c	FUNCTION_133	IF_6
0x4005f38	      0xbe3a000000	                           mov esi, 0x3a	      7294	eval.c	FUNCTION_133	IF_7	CALL_4
0x4005f3d	          0x4889ef	                            mov rdi, rbp	      7294	eval.c	FUNCTION_133	IF_7	CALL_4
0x4005f40	      0xe800000000	                          call 0x4005f45	      7294	eval.c	FUNCTION_133	IF_7	CALL_4
0x4005f45	          0x4885c0	                           test rax, rax	      7294	eval.c	FUNCTION_133	IF_7	CALL_4
0x4005f48	            0x7516	                           jne 0x4005f60	      7294	eval.c	FUNCTION_133	IF_7	CALL_4
0x4005f4a	      0xbe23000000	                           mov esi, 0x23	      7295	eval.c	FUNCTION_133	IF_7	CALL_5
0x4005f4f	          0x4889ef	                            mov rdi, rbp	      7295	eval.c	FUNCTION_133	IF_7	CALL_5
0x4005f52	      0xe800000000	                          call 0x4005f57	      7295	eval.c	FUNCTION_133	IF_7	CALL_5
0x4005f57	          0x4885c0	                           test rax, rax	      7295	eval.c	FUNCTION_133	IF_7	CALL_5
0x4005f5a	            0x7474	                            je 0x4005fd0	      7295	eval.c	FUNCTION_133	IF_7	CALL_5
0x4005f5c	         0xf1f4000	                         nop dword [rax]	      7295	eval.c	FUNCTION_133	IF_7	CALL_5
0x4005f60	      0xba05000000	                              mov edx, 5	      7533	eval.c	FUNCTION_143	IF_1	CALL_3
0x4005f65	      0xbe00000000	                              mov esi, 0	      7533	eval.c	FUNCTION_143	IF_1	CALL_3
0x4005f6a	            0x31ff	                            xor edi, edi	      7642	eval.c	FUNCTION_144	IF_2	CALL_6
0x4005f6c	      0xe800000000	                          call 0x4005f71	      7642	eval.c	FUNCTION_144	IF_2	CALL_6
0x4005f71	          0x4889de	                            mov rsi, rbx	      7642	eval.c	FUNCTION_144	IF_2	CALL_6
0x4005f74	          0x4889c7	                            mov rdi, rax	      7642	eval.c	FUNCTION_144	IF_2	CALL_6
0x4005f77	      0xe800000000	                          call 0x4005f7c	      7642	eval.c	FUNCTION_144	IF_2	CALL_6
0x4005f7c	      0x488b442408	                mov rax, qword [rsp + 8]	      7626	eval.c	FUNCTION_143
0x4005f81	    0x644833042528	                xor rax, qword fs:[0x28]	      7626	eval.c	FUNCTION_143
0x4005f8a	     0xf8563030000	                           jne 0x40062f3	      7626	eval.c	FUNCTION_143
0x4005f90	        0x4883c418	                           add rsp, 0x18	      7626	eval.c	FUNCTION_143
0x4005f94	              0x5b	                                 pop rbx	      7626	eval.c	FUNCTION_143
0x4005f95	              0x5d	                                 pop rbp	      7626	eval.c	FUNCTION_143
0x4005f96	            0x415c	                                 pop r12	      7626	eval.c	FUNCTION_143
0x4005f98	            0x415d	                                 pop r13	      7626	eval.c	FUNCTION_143
0x4005f9a	            0x415e	                                 pop r14	      7626	eval.c	FUNCTION_143
0x4005f9c	            0x415f	                                 pop r15	      7626	eval.c	FUNCTION_143
0x4005f9e	              0xc3	                                     ret	      7626	eval.c	FUNCTION_143
0x4005f9f	              0x90	                                     nop	      7626	eval.c	FUNCTION_143
0x4005fa0	    0x41be00000000	                             mov r14d, 0	      7291	eval.c	FUNCTION_133	IF_6
0x4005fa6	      0xe921ffffff	                           jmp 0x4005ecc	      7291	eval.c	FUNCTION_133	IF_6
0x4005fab	       0xf1f440000	                   nop dword [rax + rax]	      7291	eval.c	FUNCTION_133	IF_6
0x4005fb0	      0xe800000000	                          call 0x4005fb5	      7284	eval.c	FUNCTION_133	IF_2	CALL_3
0x4005fb5	    0x41be00000000	                             mov r14d, 0	      7285	eval.c	FUNCTION_133	IF_2	IF_5
0x4005fbb	          0x4885c0	                           test rax, rax	      7285	eval.c	FUNCTION_133	IF_2	IF_5
0x4005fbe	          0x4889dd	                            mov rbp, rbx	      7285	eval.c	FUNCTION_133	IF_2	IF_5
0x4005fc1	        0x4c0f45f0	                         cmovne r14, rax	      7285	eval.c	FUNCTION_133	IF_2	IF_5
0x4005fc5	      0xe902ffffff	                           jmp 0x4005ecc	      7285	eval.c	FUNCTION_133	IF_2	IF_5
0x4005fca	    0x660f1f440000	                    nop word [rax + rax]	      7285	eval.c	FUNCTION_133	IF_2	IF_5
0x4005fd0	           0xfb603	                   movzx eax, byte [rbx]	      7297	eval.c	FUNCTION_133	IF_8
0x4005fd3	            0x3c62	                            cmp al, 0x62	      7297	eval.c	FUNCTION_133	IF_8
0x4005fd5	     0xf84ec010000	                            je 0x40061c7	      7297	eval.c	FUNCTION_133	IF_8
0x4005fdb	            0x3c77	                            cmp al, 0x77	      7299	eval.c	FUNCTION_133	IF_9
0x4005fdd	     0xf84fb010000	                            je 0x40061de	      7299	eval.c	FUNCTION_133	IF_9
0x4005fe3	            0x3c74	                            cmp al, 0x74	      7301	eval.c	FUNCTION_133	IF_10
0x4005fe5	     0xf840a020000	                            je 0x40061f5	      7301	eval.c	FUNCTION_133	IF_10
0x4005feb	            0x3c76	                            cmp al, 0x76	      7303	eval.c	FUNCTION_133	IF_11
0x4005fed	     0xf8419020000	                            je 0x400620c	      7303	eval.c	FUNCTION_133	IF_11
0x4005ff3	            0x3c61	                            cmp al, 0x61	      7305	eval.c	FUNCTION_133	IF_12
0x4005ff5	     0xf8429020000	                            je 0x4006224	      7305	eval.c	FUNCTION_133	IF_12
0x4005ffb	            0x3c6c	                            cmp al, 0x6c	      7307	eval.c	FUNCTION_133	IF_13
0x4005ffd	     0xf842e020000	                            je 0x4006231	      7307	eval.c	FUNCTION_133	IF_13
0x4006003	            0x3c73	                            cmp al, 0x73	      7309	eval.c	FUNCTION_133	IF_14
0x4006005	     0xf8555ffffff	                           jne 0x4005f60	      7309	eval.c	FUNCTION_133	IF_14
0x400600b	    0x486305000000	         movsxd rax, dword [0x04006012] 	      7310	eval.c	FUNCTION_133	IF_14
0x4006012	            0x85c0	                           test eax, eax	      7310	eval.c	FUNCTION_133	IF_14
0x4006014	     0xf8e46ffffff	                           jle 0x4005f60	      7310	eval.c	FUNCTION_133	IF_14
0x400601a	    0x3b0500000000	            cmp eax, dword [0x04006020] 	      7310	eval.c	FUNCTION_133	IF_14
0x4006020	     0xf8f3affffff	                            jg 0x4005f60	      7310	eval.c	FUNCTION_133	IF_14
0x4006026	    0x488b15000000	            mov rdx, qword [0x0400602d] 	      7311	eval.c	FUNCTION_133	IF_14
0x400602d	      0x4c8b74c2f8	        mov r14, qword [rdx + rax*8 - 8]	      7311	eval.c	FUNCTION_133	IF_14
0x4006032	        0x4983c628	                           add r14, 0x28	      7311	eval.c	FUNCTION_133	IF_14
0x4006036	          0x4d85f6	                           test r14, r14	      7531	eval.c	FUNCTION_143	IF_1
0x4006039	     0xf858dfeffff	                           jne 0x4005ecc	      7531	eval.c	FUNCTION_143	IF_1
0x400603f	      0xe91cffffff	                           jmp 0x4005f60	      7531	eval.c	FUNCTION_143	IF_1
0x4006044	         0xf1f4000	                         nop dword [rax]	      7531	eval.c	FUNCTION_143	IF_1
0x4006048	      0xbe01000000	                              mov esi, 1	      7540	eval.c	FUNCTION_143	CALL_5
0x400604d	          0x4889df	                            mov rdi, rbx	      7540	eval.c	FUNCTION_143	CALL_5
0x4006050	      0xe800000000	                          call 0x4006055	      7540	eval.c	FUNCTION_143	CALL_5
0x4006055	          0x4989c7	                            mov r15, rax	      7540	eval.c	FUNCTION_143	CALL_5
0x4006058	        0x418b0424	                    mov eax, dword [r12]	      7542	eval.c	FUNCTION_143	IF_3
0x400605c	          0x83e803	                              sub eax, 3	      7542	eval.c	FUNCTION_143	IF_3
0x400605f	          0x83f801	                              cmp eax, 1	      7542	eval.c	FUNCTION_143	IF_3
0x4006062	     0xf86a7020000	                           jbe 0x400630f	      7542	eval.c	FUNCTION_143	IF_3
0x4006068	          0x4d85ff	                           test r15, r15	      7546	eval.c	FUNCTION_143	IF_4
0x400606b	     0xf85a4feffff	                           jne 0x4005f15	      7546	eval.c	FUNCTION_143	IF_4
0x4006071	    0x4981fe000000	                              cmp r14, 0	      7595	eval.c	FUNCTION_143	ELSE_5	IF_13
0x4006078	     0xf84e2feffff	                            je 0x4005f60	      7595	eval.c	FUNCTION_143	ELSE_5	IF_13
0x400607e	          0x4889ef	                            mov rdi, rbp	      7602	eval.c	FUNCTION_143	ELSE_5	IF_14	CALL_21
0x4006081	      0xe800000000	                          call 0x4006086	      7602	eval.c	FUNCTION_143	ELSE_5	IF_14	CALL_21
0x4006086	            0x85c0	                           test eax, eax	      7602	eval.c	FUNCTION_143	ELSE_5	IF_14	CALL_21
0x4006088	     0xf84eefeffff	                            je 0x4005f7c	      7602	eval.c	FUNCTION_143	ELSE_5	IF_14	CALL_21
0x400608e	          0x4889ef	                            mov rdi, rbp	      7606	eval.c	FUNCTION_143	ELSE_5	CALL_23
0x4006091	      0xe800000000	                          call 0x4006096	      7606	eval.c	FUNCTION_143	ELSE_5	CALL_23
0x4006096	          0x8d7818	                   lea edi, [rax + 0x18]	      7605	eval.c	FUNCTION_143	ELSE_5	CALL_22
0x4006099	      0xe800000000	                          call 0x400609e	      7605	eval.c	FUNCTION_143	ELSE_5	CALL_22
0x400609e	          0x4885c0	                           test rax, rax	      7607	eval.c	FUNCTION_143	ELSE_5	IF_15
0x40060a1	          0x4989c7	                            mov r15, rax	      7605	eval.c	FUNCTION_143	ELSE_5	CALL_22
0x40060a4	     0xf84d2feffff	                            je 0x4005f7c	      7607	eval.c	FUNCTION_143	ELSE_5	IF_15
0x40060aa	        0x488d5011	                   lea rdx, [rax + 0x11]	      7609	eval.c	FUNCTION_143	ELSE_5	CALL_24
0x40060ae	          0x4889ee	                            mov rsi, rbp	       110	string3.h	FUNCTION_197	CALL_3
0x40060b1	          0x4889d7	                            mov rdi, rdx	       110	string3.h	FUNCTION_197	CALL_3
0x40060b4	      0xe800000000	                          call 0x40060b9	       110	string3.h	FUNCTION_197	CALL_3
0x40060b9	          0x4c89f7	                            mov rdi, r14	      7610	eval.c	FUNCTION_143	ELSE_5	IF_16	CALL_26
0x40060bc	          0x4889c6	                            mov rsi, rax	      7610	eval.c	FUNCTION_143	ELSE_5	IF_16	CALL_26
0x40060bf	      0xe800000000	                          call 0x40060c4	      7610	eval.c	FUNCTION_143	ELSE_5	IF_16	CALL_26
0x40060c4	            0x85c0	                           test eax, eax	      7610	eval.c	FUNCTION_143	ELSE_5	IF_16	CALL_26
0x40060c6	     0xf844b010000	                            je 0x4006217	      7610	eval.c	FUNCTION_143	ELSE_5	IF_16	CALL_26
0x40060cc	      0x41c6471010	            mov byte [r15 + 0x10], 0x10 	      7615	eval.c	FUNCTION_143	ELSE_5
0x40060d1	          0x4585ed	                         test r13d, r13d	      7618	eval.c	FUNCTION_143	IF_17
0x40060d4	     0xf85b6000000	                           jne 0x4006190	      7618	eval.c	FUNCTION_143	IF_17
0x40060da	        0x418b0424	                    mov eax, dword [r12]	      7618	eval.c	FUNCTION_143	IF_17
0x40060de	          0x83f801	                              cmp eax, 1	      7618	eval.c	FUNCTION_143	IF_17
0x40060e1	     0xf84a9000000	                            je 0x4006190	      7618	eval.c	FUNCTION_143	IF_17
0x40060e7	          0x83f807	                              cmp eax, 7	      7618	eval.c	FUNCTION_143	IF_17
0x40060ea	     0xf84a0000000	                            je 0x4006190	      7618	eval.c	FUNCTION_143	IF_17
0x40060f0	        0x498b0424	                    mov rax, qword [r12]	      7622	eval.c	FUNCTION_143	ELSE_6
0x40060f4	      0x498b542408	                mov rdx, qword [r12 + 8]	      7622	eval.c	FUNCTION_143	ELSE_6
0x40060f9	          0x498907	                    mov qword [r15], rax	      7622	eval.c	FUNCTION_143	ELSE_6
0x40060fc	        0x49895708	                mov qword [r15 + 8], rdx	      7622	eval.c	FUNCTION_143	ELSE_6
0x4006100	      0x41c6470400	                   mov byte [r15 + 4], 0	      7623	eval.c	FUNCTION_143	ELSE_6
0x4006105	    0x49c704240000	                      mov qword [r12], 0	        90	string3.h	FUNCTION_194	CALL_6
0x400610d	    0x49c744240800	                  mov qword [r12 + 8], 0	        90	string3.h	FUNCTION_194	CALL_6
0x4006116	      0xe961feffff	                           jmp 0x4005f7c	        90	string3.h	FUNCTION_194	CALL_6
0x400611b	       0xf1f440000	                   nop dword [rax + rax]	        90	string3.h	FUNCTION_194	CALL_6
0x4006120	            0xa802	                              test al, 2	      7640	eval.c	FUNCTION_144	IF_2
0x4006122	            0x743c	                            je 0x4006160	      7640	eval.c	FUNCTION_144	IF_2
0x4006124	    0x8b0500000000	            mov eax, dword [0x0400612a] 	      7640	eval.c	FUNCTION_144	IF_2
0x400612a	            0x85c0	                           test eax, eax	      7640	eval.c	FUNCTION_144	IF_2
0x400612c	            0x7432	                            je 0x4006160	      7640	eval.c	FUNCTION_144	IF_2
0x400612e	      0xba05000000	                              mov edx, 5	      7642	eval.c	FUNCTION_144	IF_2	CALL_6
0x4006133	      0xbe00000000	                              mov esi, 0	      7642	eval.c	FUNCTION_144	IF_2	CALL_6
0x4006138	      0xe92dfeffff	                           jmp 0x4005f6a	      7642	eval.c	FUNCTION_144	IF_2	CALL_6
0x400613d	           0xf1f00	                         nop dword [rax]	      7642	eval.c	FUNCTION_144	IF_2	CALL_6
0x4006140	            0x31f6	                            xor esi, esi	      7543	eval.c	FUNCTION_143	IF_3	CALL_6
0x4006142	          0x4889df	                            mov rdi, rbx	      7543	eval.c	FUNCTION_143	IF_3	CALL_6
0x4006145	      0xe800000000	                          call 0x400614a	      7543	eval.c	FUNCTION_143	IF_3	CALL_6
0x400614a	            0x85c0	                           test eax, eax	      7543	eval.c	FUNCTION_143	IF_3	CALL_6
0x400614c	     0xf852afeffff	                           jne 0x4005f7c	      7543	eval.c	FUNCTION_143	IF_3	CALL_6
0x4006152	      0xe9befdffff	                           jmp 0x4005f15	      7543	eval.c	FUNCTION_143	IF_3	CALL_6
0x4006157	    0x660f1f840000	                    nop word [rax + rax]	      7543	eval.c	FUNCTION_143	IF_3	CALL_6
0x4006160	      0x410fbe7f04	               movsx edi, byte [r15 + 4]	      7550	eval.c	FUNCTION_143	IF_4	IF_5	CALL_8
0x4006165	          0x4889de	                            mov rsi, rbx	      7550	eval.c	FUNCTION_143	IF_4	IF_5	CALL_8
0x4006168	      0xe823a2ffff	     call sym.tv_check_lock.constprop.25	      7550	eval.c	FUNCTION_143	IF_4	IF_5	CALL_8
0x400616d	            0x85c0	                           test eax, eax	      7550	eval.c	FUNCTION_143	IF_4	IF_5	CALL_8
0x400616f	     0xf8507feffff	                           jne 0x4005f7c	      7550	eval.c	FUNCTION_143	IF_4	IF_5	CALL_8
0x4006175	    0x4981fe000000	                              cmp r14, 0	      7557	eval.c	FUNCTION_143	IF_4	IF_6
0x400617c	            0x7422	                            je 0x40061a0	      7557	eval.c	FUNCTION_143	IF_4	IF_6
0x400617e	          0x4c89ff	                            mov rdi, r15	      7590	eval.c	FUNCTION_143	IF_4	CALL_18
0x4006181	      0xe800000000	                          call 0x4006186	      7590	eval.c	FUNCTION_143	IF_4	CALL_18
0x4006186	      0xe946ffffff	                           jmp 0x40060d1	      7590	eval.c	FUNCTION_143	IF_4	CALL_18
0x400618b	       0xf1f440000	                   nop dword [rax + rax]	      7590	eval.c	FUNCTION_143	IF_4	CALL_18
0x4006190	          0x4c89fe	                            mov rsi, r15	      7619	eval.c	FUNCTION_143	CALL_28
0x4006193	          0x4c89e7	                            mov rdi, r12	      7619	eval.c	FUNCTION_143	CALL_28
0x4006196	      0xe800000000	                          call 0x400619b	      7619	eval.c	FUNCTION_143	CALL_28
0x400619b	      0xe9dcfdffff	                           jmp 0x4005f7c	      7619	eval.c	FUNCTION_143	CALL_28
0x40061a0	          0x418b07	                    mov eax, dword [r15]	      7559	eval.c	FUNCTION_143	IF_4	IF_6	IF_7
0x40061a3	          0x83f802	                              cmp eax, 2	      7559	eval.c	FUNCTION_143	IF_4	IF_6	IF_7
0x40061a6	     0xf8492000000	                            je 0x400623e	      7559	eval.c	FUNCTION_143	IF_4	IF_6	IF_7
0x40061ac	          0x83f801	                              cmp eax, 1	      7572	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9
0x40061af	     0xf84c9000000	                            je 0x400627e	      7572	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9
0x40061b5	        0x413b0424	                    cmp eax, dword [r12]	      7586	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_4	IF_12
0x40061b9	            0x74c3	                            je 0x400617e	      7586	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_4	IF_12
0x40061bb	      0xbf00000000	                              mov edi, 0	      7587	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_4	IF_12
0x40061c0	      0xe800000000	                          call 0x40061c5	      7587	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_4	IF_12
0x40061c5	            0xebb7	                           jmp 0x400617e	      7587	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_4	IF_12
0x40061c7	    0x488b05000000	            mov rax, qword [0x040061ce] 	      7298	eval.c	FUNCTION_133	IF_8
0x40061ce	    0x4c8bb0301700	          mov r14, qword [rax + 0x1730] 	      7298	eval.c	FUNCTION_133	IF_8
0x40061d5	        0x4983c610	                           add r14, 0x10	      7298	eval.c	FUNCTION_133	IF_8
0x40061d9	      0xe958feffff	                           jmp 0x4006036	      7298	eval.c	FUNCTION_133	IF_8
0x40061de	    0x488b05000000	            mov rax, qword [0x040061e5] 	      7300	eval.c	FUNCTION_133	IF_9
0x40061e5	    0x4c8bb0700500	           mov r14, qword [rax + 0x570] 	      7300	eval.c	FUNCTION_133	IF_9
0x40061ec	        0x4983c610	                           add r14, 0x10	      7300	eval.c	FUNCTION_133	IF_9
0x40061f0	      0xe941feffff	                           jmp 0x4006036	      7300	eval.c	FUNCTION_133	IF_9
0x40061f5	    0x488b05000000	            mov rax, qword [0x040061fc] 	      7302	eval.c	FUNCTION_133	IF_10
0x40061fc	    0x4c8bb0d00000	            mov r14, qword [rax + 0xd0] 	      7302	eval.c	FUNCTION_133	IF_10
0x4006203	        0x4983c610	                           add r14, 0x10	      7302	eval.c	FUNCTION_133	IF_10
0x4006207	      0xe92afeffff	                           jmp 0x4006036	      7302	eval.c	FUNCTION_133	IF_10
0x400620c	    0x41be00000000	                             mov r14d, 0	      7304	eval.c	FUNCTION_133	IF_11
0x4006212	      0xe9b5fcffff	                           jmp 0x4005ecc	      7304	eval.c	FUNCTION_133	IF_11
0x4006217	          0x4c89ff	                            mov rdi, r15	      7612	eval.c	FUNCTION_143	ELSE_5	IF_16	CALL_27
0x400621a	      0xe800000000	                          call 0x400621f	      7612	eval.c	FUNCTION_143	ELSE_5	IF_16	CALL_27
0x400621f	      0xe958fdffff	                           jmp 0x4005f7c	      7613	eval.c	FUNCTION_143	ELSE_5	IF_16
0x4006224	      0xe800000000	                          call 0x4006229	      7306	eval.c	FUNCTION_133	CALL_6
0x4006229	          0x4989c6	                            mov r14, rax	      7306	eval.c	FUNCTION_133	CALL_6
0x400622c	      0xe905feffff	                           jmp 0x4006036	      7306	eval.c	FUNCTION_133	CALL_6
0x4006231	      0xe800000000	                          call 0x4006236	      7308	eval.c	FUNCTION_133	CALL_7
0x4006236	          0x4989c6	                            mov r14, rax	      7308	eval.c	FUNCTION_133	CALL_7
0x4006239	      0xe9f8fdffff	                           jmp 0x4006036	      7308	eval.c	FUNCTION_133	CALL_7
0x400623e	        0x498b7f08	                mov rdi, qword [r15 + 8]	      7561	eval.c	FUNCTION_143	IF_4	IF_6	IF_7	CALL_9
0x4006242	      0xe800000000	                          call 0x4006247	      7561	eval.c	FUNCTION_143	IF_4	IF_6	IF_7	CALL_9
0x4006247	          0x4585ed	                         test r13d, r13d	      7562	eval.c	FUNCTION_143	IF_4	IF_6	IF_7	IF_8
0x400624a	            0x750b	                           jne 0x4006257	      7562	eval.c	FUNCTION_143	IF_4	IF_6	IF_7	IF_8
0x400624c	      0x41833c2402	                      cmp dword [r12], 2	      7562	eval.c	FUNCTION_143	IF_4	IF_6	IF_7	IF_8
0x4006251	     0xf84a1000000	                            je 0x40062f8	      7562	eval.c	FUNCTION_143	IF_4	IF_6	IF_7	IF_8
0x4006257	      0xbe00000000	                              mov esi, 0	      7085	eval.c	FUNCTION_128	CALL_1
0x400625c	          0x4c89e7	                            mov rdi, r12	      7085	eval.c	FUNCTION_128	CALL_1
0x400625f	      0xe800000000	                          call 0x4006264	      7085	eval.c	FUNCTION_128	CALL_1
0x4006264	      0xbf00000000	                              mov edi, 0	      7087	eval.c	FUNCTION_128
0x4006269	          0x4885c0	                           test rax, rax	      7087	eval.c	FUNCTION_128
0x400626c	        0x480f45f8	                         cmovne rdi, rax	      7087	eval.c	FUNCTION_128
0x4006270	      0xe800000000	                          call 0x4006275	      7563	eval.c	FUNCTION_143	IF_4	IF_6	IF_7	CALL_11
0x4006275	        0x49894708	                mov qword [r15 + 8], rax	      7563	eval.c	FUNCTION_143	IF_4	IF_6	IF_7	CALL_11
0x4006279	      0xe9fefcffff	                           jmp 0x4005f7c	      7563	eval.c	FUNCTION_143	IF_4	IF_6	IF_7	CALL_11
0x400627e	      0x488d742404	                      lea rsi, [rsp + 4]	      6964	eval.c	FUNCTION_124	CALL_1
0x4006283	          0x4c89e7	                            mov rdi, r12	      6964	eval.c	FUNCTION_124	CALL_1
0x4006286	    0xc74424040000	                  mov dword [rsp + 4], 0	      6962	eval.c	FUNCTION_124
0x400628e	      0xe800000000	                          call 0x4006293	      6964	eval.c	FUNCTION_124	CALL_1
0x4006293	      0xbe00000000	                              mov esi, 0	      7575	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	IF_10	CALL_13
0x4006298	        0x49894708	                mov qword [r15 + 8], rax	      7574	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	CALL_12
0x400629c	          0x4889ef	                            mov rdi, rbp	      7575	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	IF_10	CALL_13
0x400629f	          0x4889c3	                            mov rbx, rax	      6964	eval.c	FUNCTION_124	CALL_1
0x40062a2	      0xe800000000	                          call 0x40062a7	      7575	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	IF_10	CALL_13
0x40062a7	            0x85c0	                           test eax, eax	      7575	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	IF_10	CALL_13
0x40062a9	            0x7516	                           jne 0x40062c1	      7575	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	IF_10	CALL_13
0x40062ab	        0x4883fb01	                              cmp rbx, 1	      7576	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	CALL_14
0x40062af	            0x19ff	                            sbb edi, edi	      7576	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	CALL_14
0x40062b1	          0x83e710	                           and edi, 0x10	      7576	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	CALL_14
0x40062b4	          0x83c72f	                           add edi, 0x2f	      7576	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	CALL_14
0x40062b7	      0xe800000000	                          call 0x40062bc	      7576	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	CALL_14
0x40062bc	      0xe9bbfcffff	                           jmp 0x4005f7c	      7576	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	CALL_14
0x40062c1	      0xbe00000000	                              mov esi, 0	      7578	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	ELSE_3	IF_11	CALL_15
0x40062c6	          0x4889ef	                            mov rdi, rbp	      7578	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	ELSE_3	IF_11	CALL_15
0x40062c9	      0xe800000000	                          call 0x40062ce	      7578	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	ELSE_3	IF_11	CALL_15
0x40062ce	            0x85c0	                           test eax, eax	      7578	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	ELSE_3	IF_11	CALL_15
0x40062d0	     0xf85a6fcffff	                           jne 0x4005f7c	      7578	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	ELSE_3	IF_11	CALL_15
0x40062d6	            0x31c0	                            xor eax, eax	      7580	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	ELSE_3	IF_11
0x40062d8	          0x4885db	                           test rbx, rbx	      7580	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	ELSE_3	IF_11
0x40062db	      0xbf23000000	                           mov edi, 0x23	      7581	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	ELSE_3	IF_11	CALL_16
0x40062e0	           0xf94c0	                                 sete al	      7580	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	ELSE_3	IF_11
0x40062e3	    0x890500000000	            mov dword [0x040062e9], eax 	      7580	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	ELSE_3	IF_11
0x40062e9	      0xe800000000	                          call 0x40062ee	      7581	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	ELSE_3	IF_11	CALL_16
0x40062ee	      0xe989fcffff	                           jmp 0x4005f7c	      7581	eval.c	FUNCTION_143	IF_4	IF_6	ELSE_2	IF_9	ELSE_3	IF_11	CALL_16
0x40062f3	      0xe800000000	                          call 0x40062f8	      7626	eval.c	FUNCTION_143
0x40062f8	      0x498b442408	                mov rax, qword [r12 + 8]	      7567	eval.c	FUNCTION_143	IF_4	IF_6	IF_7	ELSE_1
0x40062fd	        0x49894708	                mov qword [r15 + 8], rax	      7567	eval.c	FUNCTION_143	IF_4	IF_6	IF_7	ELSE_1
0x4006301	    0x49c744240800	                  mov qword [r12 + 8], 0	      7568	eval.c	FUNCTION_143	IF_4	IF_6	IF_7	ELSE_1
0x400630a	      0xe96dfcffff	                           jmp 0x4005f7c	      7568	eval.c	FUNCTION_143	IF_4	IF_6	IF_7	ELSE_1
0x400630f	            0x31f6	                            xor esi, esi	      7543	eval.c	FUNCTION_143	IF_3	CALL_6
0x4006311	          0x4d85ff	                           test r15, r15	      7543	eval.c	FUNCTION_143	IF_3	CALL_6
0x4006314	          0x4889df	                            mov rdi, rbx	      7543	eval.c	FUNCTION_143	IF_3	CALL_6
0x4006317	        0x400f94c6	                                sete sil	      7543	eval.c	FUNCTION_143	IF_3	CALL_6
0x400631b	      0xe800000000	                          call 0x4006320	      7543	eval.c	FUNCTION_143	IF_3	CALL_6
0x4006320	            0x85c0	                           test eax, eax	      7543	eval.c	FUNCTION_143	IF_3	CALL_6
0x4006322	     0xf8554fcffff	                           jne 0x4005f7c	      7543	eval.c	FUNCTION_143	IF_3	CALL_6
0x4006328	      0xe93bfdffff	                           jmp 0x4006068	      7543	eval.c	FUNCTION_143	IF_3	CALL_6
assert_match_common	functions,0:SWITCH,0:IF,2:DO,0:ELSE,1:WHILE,0:CALL,9:FOR,0	102
0x4008e00	            0x4157	                                push r15	      8909	eval.c	FUNCTION_172
0x4008e02	            0x4156	                                push r14	      8909	eval.c	FUNCTION_172
0x4008e04	          0x4189f6	                           mov r14d, esi	      8909	eval.c	FUNCTION_172
0x4008e07	            0x4155	                                push r13	      8909	eval.c	FUNCTION_172
0x4008e09	            0x4154	                                push r12	      8909	eval.c	FUNCTION_172
0x4008e0b	              0x55	                                push rbp	      8909	eval.c	FUNCTION_172
0x4008e0c	              0x53	                                push rbx	      8909	eval.c	FUNCTION_172
0x4008e0d	          0x4889fb	                            mov rbx, rdi	      8909	eval.c	FUNCTION_172
0x4008e10	        0x4c8d6310	                   lea r12, [rbx + 0x10]	      8914	eval.c	FUNCTION_172	CALL_2
0x4008e14	    0x4881ec780100	                          sub rsp, 0x178	      8909	eval.c	FUNCTION_172
0x4008e1b	    0x488db424d000	                   lea rsi, [rsp + 0xd0]	      8913	eval.c	FUNCTION_172	CALL_1
0x4008e23	    0x64488b042528	                mov rax, qword fs:[0x28]	      8909	eval.c	FUNCTION_172
0x4008e2c	    0x488984246801	            mov qword [rsp + 0x168], rax	      8909	eval.c	FUNCTION_172
0x4008e34	            0x31c0	                            xor eax, eax	      8909	eval.c	FUNCTION_172
0x4008e36	      0xe800000000	                          call 0x4008e3b	      8913	eval.c	FUNCTION_172	CALL_1
0x4008e3b	    0x488db4242001	                  lea rsi, [rsp + 0x120]	      8914	eval.c	FUNCTION_172	CALL_2
0x4008e43	          0x4889c5	                            mov rbp, rax	      8913	eval.c	FUNCTION_172	CALL_1
0x4008e46	          0x4c89e7	                            mov rdi, r12	      8914	eval.c	FUNCTION_172	CALL_2
0x4008e49	      0xe800000000	                          call 0x4008e4e	      8914	eval.c	FUNCTION_172	CALL_2
0x4008e4e	          0x4885ed	                           test rbp, rbp	      8916	eval.c	FUNCTION_172	IF_1
0x4008e51	     0xf8419010000	                            je 0x4008f70	      8916	eval.c	FUNCTION_172	IF_1
0x4008e57	          0x4885c0	                           test rax, rax	      8916	eval.c	FUNCTION_172	IF_1
0x4008e5a	          0x4989c5	                            mov r13, rax	      8916	eval.c	FUNCTION_172	IF_1
0x4008e5d	     0xf840d010000	                            je 0x4008f70	      8916	eval.c	FUNCTION_172	IF_1
0x4008e63	          0x4889ef	                            mov rdi, rbp	      3228	eval.c	FUNCTION_62	CALL_1
0x4008e66	      0xbe03000000	                              mov esi, 3	      3228	eval.c	FUNCTION_62	CALL_1
0x4008e6b	    0x4c8b3d000000	            mov r15, qword [0x04008e72] 	      3226	eval.c	FUNCTION_62
0x4008e72	            0x31ed	                            xor ebp, ebp	      3221	eval.c	FUNCTION_62
0x4008e74	    0x48c705000000	               mov qword [0x04008e7f], 0	      3227	eval.c	FUNCTION_62
0x4008e7f	      0xe800000000	                          call 0x4008e84	      3228	eval.c	FUNCTION_62	CALL_1
0x4008e84	          0x4885c0	                           test rax, rax	      3229	eval.c	FUNCTION_62	IF_1
0x4008e87	      0x4889442420	             mov qword [rsp + 0x20], rax	      3228	eval.c	FUNCTION_62	CALL_1
0x4008e8c	            0x7426	                            je 0x4008eb4	      3229	eval.c	FUNCTION_62	IF_1
0x4008e8e	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      3232	eval.c	FUNCTION_62	IF_1	CALL_2
0x4008e93	            0x31d2	                            xor edx, edx	      3232	eval.c	FUNCTION_62	IF_1	CALL_2
0x4008e95	          0x4c89ee	                            mov rsi, r13	      3232	eval.c	FUNCTION_62	IF_1	CALL_2
0x4008e98	    0xc78424c80000	               mov dword [rsp + 0xc8], 0	      3231	eval.c	FUNCTION_62	IF_1
0x4008ea3	      0xe800000000	                          call 0x4008ea8	      3232	eval.c	FUNCTION_62	IF_1	CALL_2
0x4008ea8	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      3233	eval.c	FUNCTION_62	IF_1	CALL_3
0x4008ead	            0x89c5	                            mov ebp, eax	      3232	eval.c	FUNCTION_62	IF_1	CALL_2
0x4008eaf	      0xe800000000	                          call 0x4008eb4	      3233	eval.c	FUNCTION_62	IF_1	CALL_3
0x4008eb4	            0x31c0	                            xor eax, eax	      8918	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_5
0x4008eb6	        0x4183fe02	                             cmp r14d, 2	      8918	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_5
0x4008eba	    0x4c893d000000	            mov qword [0x04008ec1], r15 	      3235	eval.c	FUNCTION_62
0x4008ec1	           0xf94c0	                                 sete al	      8918	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_5
0x4008ec4	            0x31d2	                            xor edx, edx	      8927	eval.c	FUNCTION_172
0x4008ec6	            0x39e8	                            cmp eax, ebp	      8918	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_5
0x4008ec8	            0x747a	                            je 0x4008f44	      8918	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_5
0x4008eca	          0x4889e7	                            mov rdi, rsp	      8920	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_6
0x4008ecd	      0xe800000000	                          call 0x4008ed2	      8920	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_6
0x4008ed2	        0x488d7320	                   lea rsi, [rbx + 0x20]	      8921	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_7
0x4008ed6	          0x4589f0	                           mov r8d, r14d	      8921	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_7
0x4008ed9	          0x4c89e1	                            mov rcx, r12	      8921	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_7
0x4008edc	          0x4889da	                            mov rdx, rbx	      8921	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_7
0x4008edf	          0x4889e7	                            mov rdi, rsp	      8921	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_7
0x4008ee2	      0xe8e9bdffff	 call sym.fill_assert_error.constprop.18	      8921	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_7
0x4008ee7	    0x833d00000000	               cmp dword [0x04008eee], 5	      8812	eval.c	FUNCTION_169	IF_1
0x4008eee	     0xf849c000000	                            je 0x4008f90	      8812	eval.c	FUNCTION_169	IF_1
0x4008ef4	      0xe800000000	                          call 0x4008ef9	      8814	eval.c	FUNCTION_169	CALL_2
0x4008ef9	      0xbf00000000	                              mov edi, 0	      6489	eval.c	FUNCTION_110	CALL_1
0x4008efe	          0x4889c3	                            mov rbx, rax	      8814	eval.c	FUNCTION_169	CALL_2
0x4008f01	      0xe800000000	                          call 0x4008f06	      6489	eval.c	FUNCTION_110	CALL_1
0x4008f06	          0x4885db	                           test rbx, rbx	      6492	eval.c	FUNCTION_110	IF_1
0x4008f09	    0xc70500000000	               mov dword [0x04008f13], 5	      6490	eval.c	FUNCTION_110
0x4008f13	    0x48891d000000	            mov qword [0x04008f1a], rbx 	      6491	eval.c	FUNCTION_110
0x4008f1a	            0x740b	                            je 0x4008f27	      6492	eval.c	FUNCTION_110	IF_1
0x4008f1c	        0x83433801	               add dword [rbx + 0x38], 1	      6493	eval.c	FUNCTION_110	IF_1
0x4008f20	    0x488b1d000000	            mov rbx, qword [0x04008f27] 	      6493	eval.c	FUNCTION_110	IF_1
0x4008f27	          0x8b1424	                    mov edx, dword [rsp]	      8815	eval.c	FUNCTION_169	CALL_3
0x4008f2a	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      8815	eval.c	FUNCTION_169	CALL_3
0x4008f2f	          0x4889df	                            mov rdi, rbx	      8815	eval.c	FUNCTION_169	CALL_3
0x4008f32	      0xe800000000	                          call 0x4008f37	      8815	eval.c	FUNCTION_169	CALL_3
0x4008f37	          0x4889e7	                            mov rdi, rsp	      8924	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_9
0x4008f3a	      0xe800000000	                          call 0x4008f3f	      8924	eval.c	FUNCTION_172	ELSE_1	IF_2	CALL_9
0x4008f3f	      0xba01000000	                              mov edx, 1	      8925	eval.c	FUNCTION_172	ELSE_1	IF_2
0x4008f44	    0x488b8c246801	           mov rcx, qword [rsp + 0x168] 	      8928	eval.c	FUNCTION_172
0x4008f4c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      8928	eval.c	FUNCTION_172
0x4008f55	            0x89d0	                            mov eax, edx	      8928	eval.c	FUNCTION_172
0x4008f57	            0x7548	                           jne 0x4008fa1	      8928	eval.c	FUNCTION_172
0x4008f59	    0x4881c4780100	                          add rsp, 0x178	      8928	eval.c	FUNCTION_172
0x4008f60	              0x5b	                                 pop rbx	      8928	eval.c	FUNCTION_172
0x4008f61	              0x5d	                                 pop rbp	      8928	eval.c	FUNCTION_172
0x4008f62	            0x415c	                                 pop r12	      8928	eval.c	FUNCTION_172
0x4008f64	            0x415d	                                 pop r13	      8928	eval.c	FUNCTION_172
0x4008f66	            0x415e	                                 pop r14	      8928	eval.c	FUNCTION_172
0x4008f68	            0x415f	                                 pop r15	      8928	eval.c	FUNCTION_172
0x4008f6a	              0xc3	                                     ret	      8928	eval.c	FUNCTION_172
0x4008f6b	       0xf1f440000	                   nop dword [rax + rax]	      8928	eval.c	FUNCTION_172
0x4008f70	      0xba05000000	                              mov edx, 5	      8917	eval.c	FUNCTION_172	CALL_4
0x4008f75	      0xbe00000000	                              mov esi, 0	      8917	eval.c	FUNCTION_172	CALL_4
0x4008f7a	            0x31ff	                            xor edi, edi	      8917	eval.c	FUNCTION_172	CALL_4
0x4008f7c	      0xe800000000	                          call 0x4008f81	      8917	eval.c	FUNCTION_172	CALL_4
0x4008f81	          0x4889c7	                            mov rdi, rax	      8917	eval.c	FUNCTION_172	CALL_4
0x4008f84	      0xe800000000	                          call 0x4008f89	      8917	eval.c	FUNCTION_172	CALL_4
0x4008f89	            0x31d2	                            xor edx, edx	      8927	eval.c	FUNCTION_172
0x4008f8b	            0xebb7	                           jmp 0x4008f44	      8927	eval.c	FUNCTION_172
0x4008f8d	           0xf1f00	                         nop dword [rax]	      8927	eval.c	FUNCTION_172
0x4008f90	    0x488b1d000000	            mov rbx, qword [0x04008f97] 	      8812	eval.c	FUNCTION_169	IF_1
0x4008f97	          0x4885db	                           test rbx, rbx	      8812	eval.c	FUNCTION_169	IF_1
0x4008f9a	            0x758b	                           jne 0x4008f27	      8812	eval.c	FUNCTION_169	IF_1
0x4008f9c	      0xe953ffffff	                           jmp 0x4008ef4	      8812	eval.c	FUNCTION_169	IF_1
0x4008fa1	      0xe800000000	                          call 0x4008fa6	      8928	eval.c	FUNCTION_172
assert_equalfile	functions,0:SWITCH,0:IF,8:DO,0:ELSE,4:WHILE,0:CALL,18:FOR,1	119
0x4008bf0	            0x4155	                                push r13	      8838	eval.c	FUNCTION_171
0x4008bf2	            0x4154	                                push r12	      8838	eval.c	FUNCTION_171
0x4008bf4	              0x55	                                push rbp	      8838	eval.c	FUNCTION_171
0x4008bf5	              0x53	                                push rbx	      8838	eval.c	FUNCTION_171
0x4008bf6	          0x4889fb	                            mov rbx, rdi	      8838	eval.c	FUNCTION_171
0x4008bf9	    0x4881ecc80000	                           sub rsp, 0xc8	      8838	eval.c	FUNCTION_171
0x4008c00	      0x488d742420	                   lea rsi, [rsp + 0x20]	      8841	eval.c	FUNCTION_171	CALL_1
0x4008c05	    0x64488b042528	                mov rax, qword fs:[0x28]	      8838	eval.c	FUNCTION_171
0x4008c0e	    0x48898424b800	             mov qword [rsp + 0xb8], rax	      8838	eval.c	FUNCTION_171
0x4008c16	            0x31c0	                            xor eax, eax	      8838	eval.c	FUNCTION_171
0x4008c18	      0xe800000000	                          call 0x4008c1d	      8841	eval.c	FUNCTION_171	CALL_1
0x4008c1d	        0x488d7b10	                   lea rdi, [rbx + 0x10]	      8842	eval.c	FUNCTION_171	CALL_2
0x4008c21	      0x488d742470	                   lea rsi, [rsp + 0x70]	      8842	eval.c	FUNCTION_171	CALL_2
0x4008c26	          0x4889c5	                            mov rbp, rax	      8841	eval.c	FUNCTION_171	CALL_1
0x4008c29	      0xe800000000	                          call 0x4008c2e	      8842	eval.c	FUNCTION_171	CALL_2
0x4008c2e	          0x4885ed	                           test rbp, rbp	      8847	eval.c	FUNCTION_171	IF_1
0x4008c31	     0xf8411010000	                            je 0x4008d48	      8847	eval.c	FUNCTION_171	IF_1
0x4008c37	          0x4885c0	                           test rax, rax	      8847	eval.c	FUNCTION_171	IF_1
0x4008c3a	          0x4889c3	                            mov rbx, rax	      8847	eval.c	FUNCTION_171	IF_1
0x4008c3d	     0xf8405010000	                            je 0x4008d48	      8847	eval.c	FUNCTION_171	IF_1
0x4008c43	    0x488b05000000	            mov rax, qword [0x04008c4a] 	      8850	eval.c	FUNCTION_171
0x4008c4a	      0xbe00000000	                              mov esi, 0	      8851	eval.c	FUNCTION_171	CALL_3
0x4008c4f	          0x4889ef	                            mov rdi, rbp	      8851	eval.c	FUNCTION_171	CALL_3
0x4008c52	          0xc60000	                       mov byte [rax], 0	      8850	eval.c	FUNCTION_171
0x4008c55	      0xe800000000	                          call 0x4008c5a	      8851	eval.c	FUNCTION_171	CALL_3
0x4008c5a	          0x4885c0	                           test rax, rax	      8852	eval.c	FUNCTION_171	IF_2
0x4008c5d	          0x4989c4	                            mov r12, rax	      8851	eval.c	FUNCTION_171	CALL_3
0x4008c60	          0x4889e9	                            mov rcx, rbp	      8854	eval.c	FUNCTION_171	IF_2	CALL_4
0x4008c63	     0xf8472010000	                            je 0x4008ddb	      8852	eval.c	FUNCTION_171	IF_2
0x4008c69	      0xbe00000000	                              mov esi, 0	      8858	eval.c	FUNCTION_171	ELSE_1	CALL_5
0x4008c6e	          0x4889df	                            mov rdi, rbx	      8858	eval.c	FUNCTION_171	ELSE_1	CALL_5
0x4008c71	      0xe800000000	                          call 0x4008c76	      8858	eval.c	FUNCTION_171	ELSE_1	CALL_5
0x4008c76	          0x4885c0	                           test rax, rax	      8859	eval.c	FUNCTION_171	ELSE_1	IF_3
0x4008c79	          0x4989c5	                            mov r13, rax	      8858	eval.c	FUNCTION_171	ELSE_1	CALL_5
0x4008c7c	     0xf844e010000	                            je 0x4008dd0	      8859	eval.c	FUNCTION_171	ELSE_1	IF_3
0x4008c82	            0x31ed	                            xor ebp, ebp	      8859	eval.c	FUNCTION_171	ELSE_1	IF_3
0x4008c84	            0xeb1f	                           jmp 0x4008ca5	      8859	eval.c	FUNCTION_171	ELSE_1	IF_3
0x4008c86	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      8859	eval.c	FUNCTION_171	ELSE_1	IF_3
0x4008c90	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      8879	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_6
0x4008c93	     0xf84d7000000	                            je 0x4008d70	      8879	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_6
0x4008c99	            0x39c3	                            cmp ebx, eax	      8884	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_7
0x4008c9b	     0xf850f010000	                           jne 0x4008db0	      8884	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_7
0x4008ca1	        0x4883c501	                              add rbp, 1	      8890	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1
0x4008ca5	          0x4c89e7	                            mov rdi, r12	      8871	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	CALL_8
0x4008ca8	      0xe800000000	                          call 0x4008cad	      8871	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	CALL_8
0x4008cad	          0x4c89ef	                            mov rdi, r13	      8872	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	CALL_9
0x4008cb0	            0x89c3	                            mov ebx, eax	      8871	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	CALL_8
0x4008cb2	      0xe800000000	                          call 0x4008cb7	      8872	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	CALL_9
0x4008cb7	          0x83fbff	             cmp ebx, 0xffffffffffffffff	      8873	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	IF_4
0x4008cba	            0x75d4	                           jne 0x4008c90	      8873	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	IF_4
0x4008cbc	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      8875	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	IF_4	IF_5
0x4008cbf	            0x7437	                            je 0x4008cf8	      8875	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	IF_4	IF_5
0x4008cc1	    0x488b05000000	            mov rax, qword [0x04008cc8] 	       110	string3.h	FUNCTION_197	CALL_3
0x4008cc8	    0x48b966697273	          movabs rcx, 0x6966207473726966	       110	string3.h	FUNCTION_197	CALL_3
0x4008cd2	          0x488908	                    mov qword [rax], rcx	       110	string3.h	FUNCTION_197	CALL_3
0x4008cd5	    0x48b96c652069	          movabs rcx, 0x687320736920656c	       110	string3.h	FUNCTION_197	CALL_3
0x4008cdf	    0xc740106f7274	     mov dword [rax + 0x10], 0x6574726f 	       110	string3.h	FUNCTION_197	CALL_3
0x4008ce6	        0x48894808	                mov qword [rax + 8], rcx	       110	string3.h	FUNCTION_197	CALL_3
0x4008cea	      0xb972000000	                           mov ecx, 0x72	       110	string3.h	FUNCTION_197	CALL_3
0x4008cef	        0x66894814	               mov word [rax + 0x14], cx	       110	string3.h	FUNCTION_197	CALL_3
0x4008cf3	       0xf1f440000	                   nop dword [rax + rax]	       110	string3.h	FUNCTION_197	CALL_3
0x4008cf8	          0x4c89e7	                            mov rdi, r12	      8892	eval.c	FUNCTION_171	ELSE_1	ELSE_2	CALL_13
0x4008cfb	      0xe800000000	                          call 0x4008d00	      8892	eval.c	FUNCTION_171	ELSE_1	ELSE_2	CALL_13
0x4008d00	          0x4c89ef	                            mov rdi, r13	      8893	eval.c	FUNCTION_171	ELSE_1	ELSE_2	CALL_14
0x4008d03	      0xe800000000	                          call 0x4008d08	      8893	eval.c	FUNCTION_171	ELSE_1	ELSE_2	CALL_14
0x4008d08	    0x488b05000000	            mov rax, qword [0x04008d0f] 	      8896	eval.c	FUNCTION_171	IF_8
0x4008d0f	          0x803800	                       cmp byte [rax], 0	      8896	eval.c	FUNCTION_171	IF_8
0x4008d12	            0x7434	                            je 0x4008d48	      8896	eval.c	FUNCTION_171	IF_8
0x4008d14	          0x4889e7	                            mov rdi, rsp	      8898	eval.c	FUNCTION_171	IF_8	CALL_15
0x4008d17	      0xe800000000	                          call 0x4008d1c	      8898	eval.c	FUNCTION_171	IF_8	CALL_15
0x4008d1c	    0x488b35000000	            mov rsi, qword [0x04008d23] 	      8899	eval.c	FUNCTION_171	IF_8	CALL_16
0x4008d23	          0x4889e7	                            mov rdi, rsp	      8899	eval.c	FUNCTION_171	IF_8	CALL_16
0x4008d26	      0xe800000000	                          call 0x4008d2b	      8899	eval.c	FUNCTION_171	IF_8	CALL_16
0x4008d2b	          0x4889e7	                            mov rdi, rsp	      8900	eval.c	FUNCTION_171	IF_8	CALL_17
0x4008d2e	      0xe800000000	                          call 0x4008d33	      8900	eval.c	FUNCTION_171	IF_8	CALL_17
0x4008d33	          0x4889e7	                            mov rdi, rsp	      8901	eval.c	FUNCTION_171	IF_8	CALL_18
0x4008d36	      0xe800000000	                          call 0x4008d3b	      8901	eval.c	FUNCTION_171	IF_8	CALL_18
0x4008d3b	      0xb801000000	                              mov eax, 1	      8902	eval.c	FUNCTION_171	IF_8
0x4008d40	            0xeb08	                           jmp 0x4008d4a	      8902	eval.c	FUNCTION_171	IF_8
0x4008d42	    0x660f1f440000	                    nop word [rax + rax]	      8902	eval.c	FUNCTION_171	IF_8
0x4008d48	            0x31c0	                            xor eax, eax	      8848	eval.c	FUNCTION_171	IF_1
0x4008d4a	    0x488b9424b800	            mov rdx, qword [rsp + 0xb8] 	      8905	eval.c	FUNCTION_171
0x4008d52	    0x644833142528	                xor rdx, qword fs:[0x28]	      8905	eval.c	FUNCTION_171
0x4008d5b	     0xf8597000000	                           jne 0x4008df8	      8905	eval.c	FUNCTION_171
0x4008d61	    0x4881c4c80000	                           add rsp, 0xc8	      8905	eval.c	FUNCTION_171
0x4008d68	              0x5b	                                 pop rbx	      8905	eval.c	FUNCTION_171
0x4008d69	              0x5d	                                 pop rbp	      8905	eval.c	FUNCTION_171
0x4008d6a	            0x415c	                                 pop r12	      8905	eval.c	FUNCTION_171
0x4008d6c	            0x415d	                                 pop r13	      8905	eval.c	FUNCTION_171
0x4008d6e	              0xc3	                                     ret	      8905	eval.c	FUNCTION_171
0x4008d6f	              0x90	                                     nop	      8905	eval.c	FUNCTION_171
0x4008d70	    0x488b05000000	            mov rax, qword [0x04008d77] 	       110	string3.h	FUNCTION_197	CALL_3
0x4008d77	    0x48b97365636f	          movabs rcx, 0x6620646e6f636573	       110	string3.h	FUNCTION_197	CALL_3
0x4008d81	      0xba65720000	                         mov edx, 0x7265	       110	string3.h	FUNCTION_197	CALL_3
0x4008d86	          0x488908	                    mov qword [rax], rcx	       110	string3.h	FUNCTION_197	CALL_3
0x4008d89	    0x48b9696c6520	          movabs rcx, 0x7320736920656c69	       110	string3.h	FUNCTION_197	CALL_3
0x4008d93	    0xc74010686f72	     mov dword [rax + 0x10], 0x74726f68 	       110	string3.h	FUNCTION_197	CALL_3
0x4008d9a	        0x48894808	                mov qword [rax + 8], rcx	       110	string3.h	FUNCTION_197	CALL_3
0x4008d9e	        0x66895014	               mov word [rax + 0x14], dx	       110	string3.h	FUNCTION_197	CALL_3
0x4008da2	        0xc6401600	                mov byte [rax + 0x16], 0	       110	string3.h	FUNCTION_197	CALL_3
0x4008da6	      0xe94dffffff	                           jmp 0x4008cf8	       110	string3.h	FUNCTION_197	CALL_3
0x4008dab	       0xf1f440000	                   nop dword [rax + rax]	       110	string3.h	FUNCTION_197	CALL_3
0x4008db0	    0x488b3d000000	            mov rdi, qword [0x04008db7] 	      8886	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_7	CALL_12
0x4008db7	          0x4889e9	                            mov rcx, rbp	      8886	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_7	CALL_12
0x4008dba	      0xba00000000	                              mov edx, 0	      8886	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_7	CALL_12
0x4008dbf	      0xbe01040000	                          mov esi, 0x401	      8886	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_7	CALL_12
0x4008dc4	            0x31c0	                            xor eax, eax	      8886	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_7	CALL_12
0x4008dc6	      0xe800000000	                          call 0x4008dcb	      8886	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_7	CALL_12
0x4008dcb	      0xe928ffffff	                           jmp 0x4008cf8	      8888	eval.c	FUNCTION_171	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_7
0x4008dd0	          0x4c89e7	                            mov rdi, r12	      8861	eval.c	FUNCTION_171	ELSE_1	IF_3	CALL_6
0x4008dd3	      0xe800000000	                          call 0x4008dd8	      8861	eval.c	FUNCTION_171	ELSE_1	IF_3	CALL_6
0x4008dd8	          0x4889d9	                            mov rcx, rbx	      8862	eval.c	FUNCTION_171	ELSE_1	IF_3	CALL_7
0x4008ddb	    0x488b3d000000	            mov rdi, qword [0x04008de2] 	      8862	eval.c	FUNCTION_171	ELSE_1	IF_3	CALL_7
0x4008de2	      0xba00000000	                              mov edx, 0	      8862	eval.c	FUNCTION_171	ELSE_1	IF_3	CALL_7
0x4008de7	      0xbe01040000	                          mov esi, 0x401	      8862	eval.c	FUNCTION_171	ELSE_1	IF_3	CALL_7
0x4008dec	            0x31c0	                            xor eax, eax	      8862	eval.c	FUNCTION_171	ELSE_1	IF_3	CALL_7
0x4008dee	      0xe800000000	                          call 0x4008df3	      8862	eval.c	FUNCTION_171	ELSE_1	IF_3	CALL_7
0x4008df3	      0xe910ffffff	                           jmp 0x4008d08	      8862	eval.c	FUNCTION_171	ELSE_1	IF_3	CALL_7
0x4008df8	      0xe800000000	                          call 0x4008dfd	      8905	eval.c	FUNCTION_171
assert_report	functions,0:SWITCH,0:IF,0:DO,0:ELSE,0:WHILE,0:CALL,5:FOR,0	88
0x4009440	              0x53	                                push rbx	      8995	eval.c	FUNCTION_175
0x4009441	      0xbe01000000	                              mov esi, 1	      8788	eval.c	FUNCTION_168	CALL_1
0x4009446	          0x4889fb	                            mov rbx, rdi	      8995	eval.c	FUNCTION_175
0x4009449	      0xba64000000	                           mov edx, 0x64	      8788	eval.c	FUNCTION_168	CALL_1
0x400944e	        0x4883ec70	                           sub rsp, 0x70	      8995	eval.c	FUNCTION_175
0x4009452	          0x4889e7	                            mov rdi, rsp	      8788	eval.c	FUNCTION_168	CALL_1
0x4009455	    0x64488b042528	                mov rax, qword fs:[0x28]	      8995	eval.c	FUNCTION_175
0x400945e	      0x4889442468	             mov qword [rsp + 0x68], rax	      8995	eval.c	FUNCTION_175
0x4009463	            0x31c0	                            xor eax, eax	      8995	eval.c	FUNCTION_175
0x4009465	      0xe800000000	                          call 0x400946a	      8788	eval.c	FUNCTION_168	CALL_1
0x400946a	    0x488b35000000	            mov rsi, qword [0x04009471] 	      8789	eval.c	FUNCTION_168	IF_1
0x4009471	          0x4885f6	                           test rsi, rsi	      8789	eval.c	FUNCTION_168	IF_1
0x4009474	     0xf8436010000	                            je 0x40095b0	      8789	eval.c	FUNCTION_168	IF_1
0x400947a	          0x4889e7	                            mov rdi, rsp	      8791	eval.c	FUNCTION_168	IF_1	CALL_2
0x400947d	      0xe800000000	                          call 0x4009482	      8791	eval.c	FUNCTION_168	IF_1	CALL_2
0x4009482	    0x48833d000000	               cmp qword [0x0400948a], 0	      8792	eval.c	FUNCTION_168	IF_1	IF_2
0x400948a	     0xf8ed0000000	                           jle 0x4009560	      8792	eval.c	FUNCTION_168	IF_1	IF_2
0x4009490	      0xbe00000000	                              mov esi, 0	      8793	eval.c	FUNCTION_168	IF_1	CALL_3
0x4009495	          0x4889e7	                            mov rdi, rsp	      8793	eval.c	FUNCTION_168	IF_1	CALL_3
0x4009498	      0xe800000000	                          call 0x400949d	      8793	eval.c	FUNCTION_168	IF_1	CALL_3
0x400949d	    0x4c8b05000000	              mov r8, qword [0x040094a4]	      8795	eval.c	FUNCTION_168	IF_3
0x40094a4	          0x4d85c0	                             test r8, r8	      8795	eval.c	FUNCTION_168	IF_3
0x40094a7	     0xf8eb3000000	                           jle 0x4009560	      8795	eval.c	FUNCTION_168	IF_3
0x40094ad	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	        33	stdio2.h	FUNCTION_203	CALL_1
0x40094b2	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_203	CALL_1
0x40094b7	      0xba41000000	                           mov edx, 0x41	        33	stdio2.h	FUNCTION_203	CALL_1
0x40094bc	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_203	CALL_1
0x40094c1	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_203	CALL_1
0x40094c3	      0xe800000000	                          call 0x40094c8	        33	stdio2.h	FUNCTION_203	CALL_1
0x40094c8	      0x488d742420	                   lea rsi, [rsp + 0x20]	      8798	eval.c	FUNCTION_168	IF_3	CALL_4
0x40094cd	          0x4889e7	                            mov rdi, rsp	      8798	eval.c	FUNCTION_168	IF_3	CALL_4
0x40094d0	      0xe800000000	                          call 0x40094d5	      8798	eval.c	FUNCTION_168	IF_3	CALL_4
0x40094d5	    0x48833d000000	               cmp qword [0x040094dd], 0	      8800	eval.c	FUNCTION_168	IF_4
0x40094dd	     0xf84e5000000	                            je 0x40095c8	      8800	eval.c	FUNCTION_168	IF_4
0x40094e3	      0xbe00000000	                              mov esi, 0	      8801	eval.c	FUNCTION_168	CALL_5
0x40094e8	          0x4889e7	                            mov rdi, rsp	      8801	eval.c	FUNCTION_168	CALL_5
0x40094eb	      0xe800000000	                          call 0x40094f0	      8801	eval.c	FUNCTION_168	CALL_5
0x40094f0	      0xbe00000000	                              mov esi, 0	      7085	eval.c	FUNCTION_128	CALL_1
0x40094f5	          0x4889df	                            mov rdi, rbx	      7085	eval.c	FUNCTION_128	CALL_1
0x40094f8	      0xe800000000	                          call 0x40094fd	      7085	eval.c	FUNCTION_128	CALL_1
0x40094fd	      0xbe00000000	                              mov esi, 0	      7087	eval.c	FUNCTION_128
0x4009502	          0x4885c0	                           test rax, rax	      7087	eval.c	FUNCTION_128
0x4009505	          0x4889e7	                            mov rdi, rsp	      8999	eval.c	FUNCTION_175	CALL_3
0x4009508	        0x480f45f0	                         cmovne rsi, rax	      7087	eval.c	FUNCTION_128
0x400950c	      0xe800000000	                          call 0x4009511	      8999	eval.c	FUNCTION_175	CALL_3
0x4009511	    0x833d00000000	               cmp dword [0x04009518], 5	      8812	eval.c	FUNCTION_169	IF_1
0x4009518	            0x7556	                           jne 0x4009570	      8812	eval.c	FUNCTION_169	IF_1
0x400951a	    0x488b1d000000	            mov rbx, qword [0x04009521] 	      8812	eval.c	FUNCTION_169	IF_1
0x4009521	          0x4885db	                           test rbx, rbx	      8812	eval.c	FUNCTION_169	IF_1
0x4009524	            0x744a	                            je 0x4009570	      8812	eval.c	FUNCTION_169	IF_1
0x4009526	          0x8b1424	                    mov edx, dword [rsp]	      8815	eval.c	FUNCTION_169	CALL_3
0x4009529	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      8815	eval.c	FUNCTION_169	CALL_3
0x400952e	          0x4889df	                            mov rdi, rbx	      8815	eval.c	FUNCTION_169	CALL_3
0x4009531	      0xe800000000	                          call 0x4009536	      8815	eval.c	FUNCTION_169	CALL_3
0x4009536	          0x4889e7	                            mov rdi, rsp	      9001	eval.c	FUNCTION_175	CALL_5
0x4009539	      0xe800000000	                          call 0x400953e	      9001	eval.c	FUNCTION_175	CALL_5
0x400953e	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	      9003	eval.c	FUNCTION_175
0x4009543	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      9003	eval.c	FUNCTION_175
0x400954c	      0xb801000000	                              mov eax, 1	      9003	eval.c	FUNCTION_175
0x4009551	     0xf8584000000	                           jne 0x40095db	      9003	eval.c	FUNCTION_175
0x4009557	        0x4883c470	                           add rsp, 0x70	      9003	eval.c	FUNCTION_175
0x400955b	              0x5b	                                 pop rbx	      9003	eval.c	FUNCTION_175
0x400955c	              0xc3	                                     ret	      9003	eval.c	FUNCTION_175
0x400955d	           0xf1f00	                         nop dword [rax]	      9003	eval.c	FUNCTION_175
0x4009560	    0x48833d000000	               cmp qword [0x04009568], 0	      8800	eval.c	FUNCTION_168	IF_4
0x4009568	     0xf8575ffffff	                           jne 0x40094e3	      8800	eval.c	FUNCTION_168	IF_4
0x400956e	            0xeb80	                           jmp 0x40094f0	      8800	eval.c	FUNCTION_168	IF_4
0x4009570	      0xe800000000	                          call 0x4009575	      8814	eval.c	FUNCTION_169	CALL_2
0x4009575	      0xbf00000000	                              mov edi, 0	      6489	eval.c	FUNCTION_110	CALL_1
0x400957a	          0x4889c3	                            mov rbx, rax	      8814	eval.c	FUNCTION_169	CALL_2
0x400957d	      0xe800000000	                          call 0x4009582	      6489	eval.c	FUNCTION_110	CALL_1
0x4009582	          0x4885db	                           test rbx, rbx	      6492	eval.c	FUNCTION_110	IF_1
0x4009585	    0xc70500000000	               mov dword [0x0400958f], 5	      6490	eval.c	FUNCTION_110
0x400958f	    0x48891d000000	            mov qword [0x04009596], rbx 	      6491	eval.c	FUNCTION_110
0x4009596	            0x748e	                            je 0x4009526	      6492	eval.c	FUNCTION_110	IF_1
0x4009598	        0x83433801	               add dword [rbx + 0x38], 1	      6493	eval.c	FUNCTION_110	IF_1
0x400959c	    0x488b1d000000	            mov rbx, qword [0x040095a3] 	      6493	eval.c	FUNCTION_110	IF_1
0x40095a3	      0xe97effffff	                           jmp 0x4009526	      6493	eval.c	FUNCTION_110	IF_1
0x40095a8	     0xf1f84000000	                   nop dword [rax + rax]	      6493	eval.c	FUNCTION_110	IF_1
0x40095b0	    0x4c8b05000000	              mov r8, qword [0x040095b7]	      8795	eval.c	FUNCTION_168	IF_3
0x40095b7	          0x4d85c0	                             test r8, r8	      8795	eval.c	FUNCTION_168	IF_3
0x40095ba	     0xf8fedfeffff	                            jg 0x40094ad	      8795	eval.c	FUNCTION_168	IF_3
0x40095c0	      0xe92bffffff	                           jmp 0x40094f0	      8795	eval.c	FUNCTION_168	IF_3
0x40095c5	           0xf1f00	                         nop dword [rax]	      8795	eval.c	FUNCTION_168	IF_3
0x40095c8	    0x48833d000000	               cmp qword [0x040095d0], 0	      8800	eval.c	FUNCTION_168	IF_4
0x40095d0	     0xf8f0dffffff	                            jg 0x40094e3	      8800	eval.c	FUNCTION_168	IF_4
0x40095d6	      0xe915ffffff	                           jmp 0x40094f0	      8800	eval.c	FUNCTION_168	IF_4
0x40095db	      0xe800000000	               call sym.assert_exception	      9003	eval.c	FUNCTION_175
string_quote	functions,0:SWITCH,0:IF,7:DO,0:ELSE,1:WHILE,0:CALL,5:FOR,2	134
0x4002180	            0x4154	                                push r12	      5769	eval.c	FUNCTION_90
0x4002182	              0x55	                                push rbp	      5769	eval.c	FUNCTION_90
0x4002183	          0x4189f4	                           mov r12d, esi	      5769	eval.c	FUNCTION_90
0x4002186	              0x53	                                push rbx	      5769	eval.c	FUNCTION_90
0x4002187	          0x4889fd	                            mov rbp, rdi	      5769	eval.c	FUNCTION_90
0x400218a	        0x4883ec20	                           sub rsp, 0x20	      5769	eval.c	FUNCTION_90
0x400218e	    0x64488b042528	                mov rax, qword fs:[0x28]	      5769	eval.c	FUNCTION_90
0x4002197	      0x4889442418	             mov qword [rsp + 0x18], rax	      5769	eval.c	FUNCTION_90
0x400219c	            0x31c0	                            xor eax, eax	      5769	eval.c	FUNCTION_90
0x400219e	          0x83fe01	                              cmp esi, 1	      5773	eval.c	FUNCTION_90
0x40021a1	            0x19db	                            sbb ebx, ebx	      5773	eval.c	FUNCTION_90
0x40021a3	          0x83e3f6	                     and ebx, 0xfffffff6	      5773	eval.c	FUNCTION_90
0x40021a6	          0x83c30d	                            add ebx, 0xd	      5773	eval.c	FUNCTION_90
0x40021a9	          0x4885ff	                           test rdi, rdi	      5774	eval.c	FUNCTION_90	IF_1
0x40021ac	            0x7466	                            je 0x4002214	      5774	eval.c	FUNCTION_90	IF_1
0x40021ae	      0xe800000000	                          call 0x40021b3	      5776	eval.c	FUNCTION_90	IF_1	CALL_1
0x40021b3	             0x1c3	                            add ebx, eax	      5776	eval.c	FUNCTION_90	IF_1	CALL_1
0x40021b5	         0xfb64500	                   movzx eax, byte [rbp]	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x40021b9	      0x48896c2408	                mov qword [rsp + 8], rbp	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x40021be	            0x84c0	                             test al, al	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x40021c0	            0x7452	                            je 0x4002214	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x40021c2	          0x4889ef	                            mov rdi, rbp	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x40021c5	            0xeb18	                           jmp 0x40021df	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x40021c7	    0x660f1f840000	                    nop word [rax + rax]	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x40021d0	          0x4801c7	                            add rdi, rax	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x40021d3	      0x48897c2408	                mov qword [rsp + 8], rdi	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x40021d8	           0xfb607	                   movzx eax, byte [rdi]	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x40021db	            0x84c0	                             test al, al	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x40021dd	            0x7435	                            je 0x4002214	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x40021df	            0x3c27	                            cmp al, 0x27	      5779	eval.c	FUNCTION_90	IF_1	FOR_1	IF_2
0x40021e1	    0x8b0d00000000	            mov ecx, dword [0x040021e7] 	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x40021e7	           0xf94c0	                                 sete al	      5779	eval.c	FUNCTION_90	IF_1	FOR_1	IF_2
0x40021ea	           0xfb6c0	                           movzx eax, al	      5779	eval.c	FUNCTION_90	IF_1	FOR_1	IF_2
0x40021ed	             0x1c3	                            add ebx, eax	      5779	eval.c	FUNCTION_90	IF_1	FOR_1	IF_2
0x40021ef	            0x85c9	                           test ecx, ecx	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x40021f1	      0xb801000000	                              mov eax, 1	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x40021f6	            0x74d8	                            je 0x40021d0	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x40021f8	    0xff1500000000	                 call qword [0x040021fe]	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x40021fe	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x4002203	            0x4898	                                    cdqe	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x4002205	          0x4801c7	                            add rdi, rax	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x4002208	      0x48897c2408	                mov qword [rsp + 8], rdi	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x400220d	           0xfb607	                   movzx eax, byte [rdi]	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x4002210	            0x84c0	                             test al, al	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x4002212	            0x75cb	                           jne 0x40021df	      5777	eval.c	FUNCTION_90	IF_1	FOR_1	CALL_2
0x4002214	            0x89df	                            mov edi, ebx	      5781	eval.c	FUNCTION_90	CALL_3
0x4002216	      0xe800000000	                          call 0x400221b	      5781	eval.c	FUNCTION_90	CALL_3
0x400221b	          0x4885c0	                           test rax, rax	      5782	eval.c	FUNCTION_90	IF_3
0x400221e	          0x4889c3	                            mov rbx, rax	      5781	eval.c	FUNCTION_90	CALL_3
0x4002221	      0x4889442410	             mov qword [rsp + 0x10], rax	      5781	eval.c	FUNCTION_90	CALL_3
0x4002226	     0xf84fd000000	                            je 0x4002329	      5782	eval.c	FUNCTION_90	IF_3
0x400222c	          0x4585e4	                         test r12d, r12d	      5784	eval.c	FUNCTION_90	IF_3	IF_4
0x400222f	     0xf8593000000	                           jne 0x40022c8	      5784	eval.c	FUNCTION_90	IF_3	IF_4
0x4002235	        0x488d4001	                      lea rax, [rax + 1]	      5790	eval.c	FUNCTION_90	IF_3	ELSE_1
0x4002239	          0x4885ed	                           test rbp, rbp	      5791	eval.c	FUNCTION_90	IF_3	IF_5
0x400223c	      0x4889442410	             mov qword [rsp + 0x10], rax	      5790	eval.c	FUNCTION_90	IF_3	ELSE_1
0x4002241	          0xc60327	                    mov byte [rbx], 0x27	      5790	eval.c	FUNCTION_90	IF_3	ELSE_1
0x4002244	     0xf8416010000	                            je 0x4002360	      5791	eval.c	FUNCTION_90	IF_3	IF_5
0x400224a	      0x48896c2408	                mov qword [rsp + 8], rbp	      5792	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2
0x400224f	            0xeb2d	                           jmp 0x400227e	      5792	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2
0x4002251	     0xf1f80000000	                         nop dword [rax]	      5792	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2
0x4002258	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      5796	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	CALL_5
0x400225d	        0x488d4a01	                      lea rcx, [rdx + 1]	      5796	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	CALL_5
0x4002261	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      5796	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	CALL_5
0x4002266	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      5796	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	CALL_5
0x400226b	        0x488d7101	                      lea rsi, [rcx + 1]	      5796	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	CALL_5
0x400226f	      0x4889742408	                mov qword [rsp + 8], rsi	      5796	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	CALL_5
0x4002274	           0xfb609	                   movzx ecx, byte [rcx]	      5796	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	CALL_5
0x4002277	            0x880a	                      mov byte [rdx], cl	      5796	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	CALL_5
0x4002279	      0x488b6c2408	                mov rbp, qword [rsp + 8]	      5796	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	CALL_5
0x400227e	         0xfb65500	                   movzx edx, byte [rbp]	      5792	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2
0x4002282	            0x84d2	                             test dl, dl	      5792	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2
0x4002284	     0xf84be000000	                            je 0x4002348	      5792	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2
0x400228a	          0x80fa27	                            cmp dl, 0x27	      5794	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	IF_6
0x400228d	            0x7421	                            je 0x40022b0	      5794	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	IF_6
0x400228f	    0x8b0500000000	            mov eax, dword [0x04002295] 	      5796	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	CALL_5
0x4002295	            0x85c0	                           test eax, eax	      5796	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	CALL_5
0x4002297	            0x74bf	                            je 0x4002258	      5796	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	CALL_5
0x4002299	      0x488d742410	                   lea rsi, [rsp + 0x10]	      5796	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	CALL_5
0x400229e	      0x488d7c2408	                      lea rdi, [rsp + 8]	      5796	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	CALL_5
0x40022a3	      0xe800000000	                          call 0x40022a8	      5796	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	CALL_5
0x40022a8	            0xebcf	                           jmp 0x4002279	      5796	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	CALL_5
0x40022aa	    0x660f1f440000	                    nop word [rax + rax]	      5796	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	CALL_5
0x40022b0	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      5795	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	IF_6
0x40022b5	        0x488d4201	                      lea rax, [rdx + 1]	      5795	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	IF_6
0x40022b9	      0x4889442410	             mov qword [rsp + 0x10], rax	      5795	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	IF_6
0x40022be	          0xc60227	                    mov byte [rdx], 0x27	      5795	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	IF_6
0x40022c1	            0xebcc	                           jmp 0x400228f	      5795	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	IF_6
0x40022c3	       0xf1f440000	                   nop dword [rax + rax]	      5795	eval.c	FUNCTION_90	IF_3	IF_5	FOR_2	IF_6
0x40022c8	    0x48b866756e63	          movabs rax, 0x6e6f6974636e7566	       110	string3.h	FUNCTION_197	CALL_3
0x40022d2	      0xba28270000	                         mov edx, 0x2728	       110	string3.h	FUNCTION_197	CALL_3
0x40022d7	          0x4885ed	                           test rbp, rbp	      5791	eval.c	FUNCTION_90	IF_3	IF_5
0x40022da	          0x488903	                    mov qword [rbx], rax	       110	string3.h	FUNCTION_197	CALL_3
0x40022dd	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5787	eval.c	FUNCTION_90	IF_3	IF_4
0x40022e2	        0x66895308	                  mov word [rbx + 8], dx	       110	string3.h	FUNCTION_197	CALL_3
0x40022e6	        0xc6430a00	                 mov byte [rbx + 0xa], 0	       110	string3.h	FUNCTION_197	CALL_3
0x40022ea	        0x488d500a	                    lea rdx, [rax + 0xa]	      5787	eval.c	FUNCTION_90	IF_3	IF_4
0x40022ee	      0x4889542410	             mov qword [rsp + 0x10], rdx	      5787	eval.c	FUNCTION_90	IF_3	IF_4
0x40022f3	     0xf8551ffffff	                           jne 0x400224a	      5791	eval.c	FUNCTION_90	IF_3	IF_5
0x40022f9	        0x488d500b	                    lea rdx, [rax + 0xb]	      5798	eval.c	FUNCTION_90	IF_3
0x40022fd	        0xc6400a27	              mov byte [rax + 0xa], 0x27	      5798	eval.c	FUNCTION_90	IF_3
0x4002301	      0x4889542410	             mov qword [rsp + 0x10], rdx	      5798	eval.c	FUNCTION_90	IF_3
0x4002306	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5798	eval.c	FUNCTION_90	IF_3
0x4002310	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5800	eval.c	FUNCTION_90	IF_3	IF_7
0x4002315	        0x488d5001	                      lea rdx, [rax + 1]	      5800	eval.c	FUNCTION_90	IF_3	IF_7
0x4002319	      0x4889542410	             mov qword [rsp + 0x10], rdx	      5800	eval.c	FUNCTION_90	IF_3	IF_7
0x400231e	          0xc60029	                    mov byte [rax], 0x29	      5800	eval.c	FUNCTION_90	IF_3	IF_7
0x4002321	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5801	eval.c	FUNCTION_90	IF_3
0x4002326	          0xc60000	                       mov byte [rax], 0	      5801	eval.c	FUNCTION_90	IF_3
0x4002329	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      5804	eval.c	FUNCTION_90
0x400232e	    0x644833342528	                xor rsi, qword fs:[0x28]	      5804	eval.c	FUNCTION_90
0x4002337	          0x4889d8	                            mov rax, rbx	      5804	eval.c	FUNCTION_90
0x400233a	            0x753f	                           jne 0x400237b	      5804	eval.c	FUNCTION_90
0x400233c	        0x4883c420	                           add rsp, 0x20	      5804	eval.c	FUNCTION_90
0x4002340	              0x5b	                                 pop rbx	      5804	eval.c	FUNCTION_90
0x4002341	              0x5d	                                 pop rbp	      5804	eval.c	FUNCTION_90
0x4002342	            0x415c	                                 pop r12	      5804	eval.c	FUNCTION_90
0x4002344	              0xc3	                                     ret	      5804	eval.c	FUNCTION_90
0x4002345	           0xf1f00	                         nop dword [rax]	      5804	eval.c	FUNCTION_90
0x4002348	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5798	eval.c	FUNCTION_90	IF_3
0x400234d	          0x4585e4	                         test r12d, r12d	      5799	eval.c	FUNCTION_90	IF_3	IF_7
0x4002350	        0x488d5001	                      lea rdx, [rax + 1]	      5798	eval.c	FUNCTION_90	IF_3
0x4002354	      0x4889542410	             mov qword [rsp + 0x10], rdx	      5798	eval.c	FUNCTION_90	IF_3
0x4002359	          0xc60027	                    mov byte [rax], 0x27	      5798	eval.c	FUNCTION_90	IF_3
0x400235c	            0x75b2	                           jne 0x4002310	      5799	eval.c	FUNCTION_90	IF_3	IF_7
0x400235e	            0xebc1	                           jmp 0x4002321	      5799	eval.c	FUNCTION_90	IF_3	IF_7
0x4002360	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5798	eval.c	FUNCTION_90	IF_3
0x4002365	        0x488d5001	                      lea rdx, [rax + 1]	      5798	eval.c	FUNCTION_90	IF_3
0x4002369	      0x4889542410	             mov qword [rsp + 0x10], rdx	      5798	eval.c	FUNCTION_90	IF_3
0x400236e	          0xc60027	                    mov byte [rax], 0x27	      5798	eval.c	FUNCTION_90	IF_3
0x4002371	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5801	eval.c	FUNCTION_90	IF_3
0x4002376	          0xc60000	                       mov byte [rax], 0	      5801	eval.c	FUNCTION_90	IF_3
0x4002379	            0xebae	                           jmp 0x4002329	      5801	eval.c	FUNCTION_90	IF_3
0x400237b	      0xe800000000	                   call sym.string2float	      5804	eval.c	FUNCTION_90
typval_compare	functions,0:SWITCH,3:IF,26:DO,0:ELSE,19:WHILE,0:CALL,27:FOR,0	390
0x4009b40	            0x4157	                                push r15	      9199	eval.c	FUNCTION_181
0x4009b42	            0x4156	                                push r14	      9199	eval.c	FUNCTION_181
0x4009b44	            0x4155	                                push r13	      9199	eval.c	FUNCTION_181
0x4009b46	            0x4154	                                push r12	      9199	eval.c	FUNCTION_181
0x4009b48	          0x4189d4	                           mov r12d, edx	      9199	eval.c	FUNCTION_181
0x4009b4b	              0x55	                                push rbp	      9199	eval.c	FUNCTION_181
0x4009b4c	              0x53	                                push rbx	      9199	eval.c	FUNCTION_181
0x4009b4d	          0x4889f5	                            mov rbp, rsi	      9199	eval.c	FUNCTION_181
0x4009b50	          0x4889fb	                            mov rbx, rdi	      9199	eval.c	FUNCTION_181
0x4009b53	    0x4881ec780100	                          sub rsp, 0x178	      9199	eval.c	FUNCTION_181
0x4009b5a	    0x64488b042528	                mov rax, qword fs:[0x28]	      9199	eval.c	FUNCTION_181
0x4009b63	    0x488984246801	            mov qword [rsp + 0x168], rax	      9199	eval.c	FUNCTION_181
0x4009b6b	            0x31c0	                            xor eax, eax	      9199	eval.c	FUNCTION_181
0x4009b6d	            0x85c9	                           test ecx, ecx	      9205	eval.c	FUNCTION_181	IF_1
0x4009b6f	            0x745f	                            je 0x4009bd0	      9205	eval.c	FUNCTION_181	IF_1
0x4009b71	            0x8b17	                    mov edx, dword [rdi]	      9205	eval.c	FUNCTION_181	IF_1
0x4009b73	            0x3b16	                    cmp edx, dword [rsi]	      9205	eval.c	FUNCTION_181	IF_1
0x4009b75	     0xf847d010000	                            je 0x4009cf8	      9205	eval.c	FUNCTION_181	IF_1
0x4009b7b	          0x4531ed	                          xor r13d, r13d	      9209	eval.c	FUNCTION_181	IF_1
0x4009b7e	        0x4183fc02	                             cmp r12d, 2	      9209	eval.c	FUNCTION_181	IF_1
0x4009b82	        0x410f94c5	                               sete r13b	      9209	eval.c	FUNCTION_181	IF_1
0x4009b86	          0x4889df	                            mov rdi, rbx	      9386	eval.c	FUNCTION_181	CALL_27
0x4009b89	      0xe800000000	                          call 0x4009b8e	      9386	eval.c	FUNCTION_181	CALL_27
0x4009b8e	    0xc70301000000	                      mov dword [rbx], 1	      9387	eval.c	FUNCTION_181
0x4009b94	        0x4c896b08	                mov qword [rbx + 8], r13	      9388	eval.c	FUNCTION_181
0x4009b98	      0xb801000000	                              mov eax, 1	      9390	eval.c	FUNCTION_181
0x4009b9d	    0x488bbc246801	           mov rdi, qword [rsp + 0x168] 	      9391	eval.c	FUNCTION_181
0x4009ba5	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      9391	eval.c	FUNCTION_181
0x4009bae	     0xf8501060000	                           jne 0x400a1b5	      9391	eval.c	FUNCTION_181
0x4009bb4	    0x4881c4780100	                          add rsp, 0x178	      9391	eval.c	FUNCTION_181
0x4009bbb	              0x5b	                                 pop rbx	      9391	eval.c	FUNCTION_181
0x4009bbc	              0x5d	                                 pop rbp	      9391	eval.c	FUNCTION_181
0x4009bbd	            0x415c	                                 pop r12	      9391	eval.c	FUNCTION_181
0x4009bbf	            0x415d	                                 pop r13	      9391	eval.c	FUNCTION_181
0x4009bc1	            0x415e	                                 pop r14	      9391	eval.c	FUNCTION_181
0x4009bc3	            0x415f	                                 pop r15	      9391	eval.c	FUNCTION_181
0x4009bc5	              0xc3	                                     ret	      9391	eval.c	FUNCTION_181
0x4009bc6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      9391	eval.c	FUNCTION_181
0x4009bd0	            0x8b37	                    mov esi, dword [rdi]	      9211	eval.c	FUNCTION_181	ELSE_1	IF_2
0x4009bd2	          0x83fe05	                              cmp esi, 5	      9211	eval.c	FUNCTION_181	ELSE_1	IF_2
0x4009bd5	     0xf84e5000000	                            je 0x4009cc0	      9211	eval.c	FUNCTION_181	ELSE_1	IF_2
0x4009bdb	          0x8b5500	                    mov edx, dword [rbp]	      9211	eval.c	FUNCTION_181	ELSE_1	IF_2
0x4009bde	          0x83fa05	                              cmp edx, 5	      9211	eval.c	FUNCTION_181	ELSE_1	IF_2
0x4009be1	     0xf84e3000000	                            je 0x4009cca	      9211	eval.c	FUNCTION_181	ELSE_1	IF_2
0x4009be7	          0x83fa06	                              cmp edx, 6	      9240	eval.c	FUNCTION_181	ELSE_5	IF_8
0x4009bea	     0xf8420010000	                            je 0x4009d10	      9240	eval.c	FUNCTION_181	ELSE_5	IF_8
0x4009bf0	          0x83fe06	                              cmp esi, 6	      9240	eval.c	FUNCTION_181	ELSE_5	IF_8
0x4009bf3	     0xf8417010000	                            je 0x4009d10	      9240	eval.c	FUNCTION_181	ELSE_5	IF_8
0x4009bf9	          0x8d46fd	                      lea eax, [rsi - 3]	      9270	eval.c	FUNCTION_181	ELSE_9	IF_14
0x4009bfc	          0x83f801	                              cmp eax, 1	      9270	eval.c	FUNCTION_181	ELSE_9	IF_14
0x4009bff	     0xf8633010000	                           jbe 0x4009d38	      9270	eval.c	FUNCTION_181	ELSE_9	IF_14
0x4009c05	          0x8d42fd	                      lea eax, [rdx - 3]	      9270	eval.c	FUNCTION_181	ELSE_9	IF_14
0x4009c08	          0x83f801	                              cmp eax, 1	      9270	eval.c	FUNCTION_181	ELSE_9	IF_14
0x4009c0b	     0xf8627010000	                           jbe 0x4009d38	      9270	eval.c	FUNCTION_181	ELSE_9	IF_14
0x4009c11	          0x83fe07	                              cmp esi, 7	      9307	eval.c	FUNCTION_181	ELSE_14	IF_21
0x4009c14	     0xf84ee010000	                            je 0x4009e08	      9307	eval.c	FUNCTION_181	ELSE_14	IF_21
0x4009c1a	          0x83fa07	                              cmp edx, 7	      9307	eval.c	FUNCTION_181	ELSE_14	IF_21
0x4009c1d	     0xf84e5010000	                            je 0x4009e08	      9307	eval.c	FUNCTION_181	ELSE_14	IF_21
0x4009c23	          0x83fe01	                              cmp esi, 1	      9340	eval.c	FUNCTION_181	ELSE_17	IF_24
0x4009c26	     0xf8434040000	                            je 0x400a060	      9340	eval.c	FUNCTION_181	ELSE_17	IF_24
0x4009c2c	          0x83fa01	                              cmp edx, 1	      9340	eval.c	FUNCTION_181	ELSE_17	IF_24
0x4009c2f	      0x458d7424f9	                     lea r14d, [r12 - 7]	      9340	eval.c	FUNCTION_181	ELSE_17	IF_24
0x4009c34	     0xf8426040000	                            je 0x400a060	      9340	eval.c	FUNCTION_181	ELSE_17	IF_24
0x4009c3a	    0x488db424d000	                   lea rsi, [rsp + 0xd0]	      7085	eval.c	FUNCTION_128	CALL_1
0x4009c42	          0x4889df	                            mov rdi, rbx	      7085	eval.c	FUNCTION_128	CALL_1
0x4009c45	      0x4489442408	                mov dword [rsp + 8], r8d	      7085	eval.c	FUNCTION_128	CALL_1
0x4009c4a	    0x41bf00000000	                             mov r15d, 0	      7087	eval.c	FUNCTION_128
0x4009c50	      0xe800000000	                          call 0x4009c55	      7085	eval.c	FUNCTION_128	CALL_1
0x4009c55	    0x488db4242001	                  lea rsi, [rsp + 0x120]	      7085	eval.c	FUNCTION_128	CALL_1
0x4009c5d	          0x4885c0	                           test rax, rax	      7087	eval.c	FUNCTION_128
0x4009c60	          0x4889ef	                            mov rdi, rbp	      7085	eval.c	FUNCTION_128	CALL_1
0x4009c63	        0x490f44c7	                          cmove rax, r15	      7087	eval.c	FUNCTION_128
0x4009c67	          0x4989c5	                            mov r13, rax	      7087	eval.c	FUNCTION_128
0x4009c6a	      0xe800000000	                          call 0x4009c6f	      7085	eval.c	FUNCTION_128	CALL_1
0x4009c6f	          0x4885c0	                           test rax, rax	      7087	eval.c	FUNCTION_128
0x4009c72	      0x448b442408	                mov r8d, dword [rsp + 8]	      9362	eval.c	FUNCTION_181	ELSE_18	IF_25
0x4009c77	        0x4c0f45f8	                         cmovne r15, rax	      7087	eval.c	FUNCTION_128
0x4009c7b	            0x31c0	                            xor eax, eax	      9365	eval.c	FUNCTION_181	ELSE_18	ELSE_19
0x4009c7d	        0x4183fe01	                             cmp r14d, 1	      9362	eval.c	FUNCTION_181	ELSE_18	IF_25
0x4009c81	          0x4c89fd	                            mov rbp, r15	      7087	eval.c	FUNCTION_128
0x4009c84	            0x761e	                           jbe 0x4009ca4	      9362	eval.c	FUNCTION_181	ELSE_18	IF_25
0x4009c86	          0x4585c0	                           test r8d, r8d	      9363	eval.c	FUNCTION_181	ELSE_18	CALL_25
0x4009c89	     0xf85d4040000	                           jne 0x400a163	      9363	eval.c	FUNCTION_181	ELSE_18	CALL_25
0x4009c8f	          0x4c89fe	                            mov rsi, r15	      9363	eval.c	FUNCTION_181	ELSE_18	CALL_25
0x4009c92	          0x4c89ef	                            mov rdi, r13	      9363	eval.c	FUNCTION_181	ELSE_18	CALL_25
0x4009c95	      0x4489442408	                mov dword [rsp + 8], r8d	      9363	eval.c	FUNCTION_181	ELSE_18	CALL_25
0x4009c9a	      0xe800000000	                          call 0x4009c9f	      9363	eval.c	FUNCTION_181	ELSE_18	CALL_25
0x4009c9f	      0x448b442408	                mov r8d, dword [rsp + 8]	      9363	eval.c	FUNCTION_181	ELSE_18	CALL_25
0x4009ca4	        0x4183fc08	                             cmp r12d, 8	      9367	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4009ca8	     0xf87cb020000	                            ja 0x4009f79	      9367	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4009cae	          0x4489e2	                           mov edx, r12d	      9367	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4009cb1	    0xff24d5000000	                       jmp qword [rdx*8]	      9367	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4009cb8	     0xf1f84000000	                   nop dword [rax + rax]	      9367	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4009cc0	        0x837d0005	                      cmp dword [rbp], 5	      9220	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5
0x4009cc4	     0xf84e6020000	                            je 0x4009fb0	      9220	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5
0x4009cca	            0x31ff	                            xor edi, edi	      9224	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5	CALL_2
0x4009ccc	      0xba05000000	                              mov edx, 5	      9224	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5	CALL_2
0x4009cd1	      0xbe00000000	                              mov esi, 0	      9224	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5	CALL_2
0x4009cd6	      0xe800000000	                          call 0x4009cdb	      9224	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5	CALL_2
0x4009cdb	          0x4889c7	                            mov rdi, rax	      9224	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5	CALL_2
0x4009cde	      0xe800000000	                          call 0x4009ce3	      9224	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5	CALL_2
0x4009ce3	          0x4889df	                            mov rdi, rbx	      9227	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5	CALL_5
0x4009ce6	      0xe800000000	                          call 0x4009ceb	      9227	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5	CALL_5
0x4009ceb	            0x31c0	                            xor eax, eax	      9228	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5
0x4009ced	      0xe9abfeffff	                           jmp 0x4009b9d	      9228	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5
0x4009cf2	    0x660f1f440000	                    nop word [rax + rax]	      9228	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5
0x4009cf8	          0x83fa05	                              cmp edx, 5	      9211	eval.c	FUNCTION_181	ELSE_1	IF_2
0x4009cfb	     0xf8487020000	                            je 0x4009f88	      9211	eval.c	FUNCTION_181	ELSE_1	IF_2
0x4009d01	            0x89d6	                            mov esi, edx	      9211	eval.c	FUNCTION_181	ELSE_1	IF_2
0x4009d03	      0xe9dffeffff	                           jmp 0x4009be7	      9211	eval.c	FUNCTION_181	ELSE_1	IF_2
0x4009d08	     0xf1f84000000	                   nop dword [rax + rax]	      9211	eval.c	FUNCTION_181	ELSE_1	IF_2
0x4009d10	            0x85c9	                           test ecx, ecx	      9242	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9
0x4009d12	            0x747c	                            je 0x4009d90	      9242	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9
0x4009d14	          0x4531ed	                          xor r13d, r13d	      9242	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9
0x4009d17	            0x39f2	                            cmp edx, esi	      9245	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9
0x4009d19	      0xb801000000	                              mov eax, 1	      9245	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9
0x4009d1e	     0xf84cc020000	                            je 0x4009ff0	      9245	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9
0x4009d24	        0x4183fc02	                             cmp r12d, 2	      9247	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9	IF_10
0x4009d28	        0x4c0f44e8	                          cmove r13, rax	      9247	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9	IF_10
0x4009d2c	      0xe955feffff	                           jmp 0x4009b86	      9247	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9	IF_10
0x4009d31	     0xf1f80000000	                         nop dword [rax]	      9247	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9	IF_10
0x4009d38	      0x418d4424ff	                      lea eax, [r12 - 1]	      9272	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_15
0x4009d3d	          0x83f801	                              cmp eax, 1	      9272	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_15
0x4009d40	            0x777e	                            ja 0x4009dc0	      9272	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_15
0x4009d42	          0x83fe04	                              cmp esi, 4	      9278	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_16
0x4009d45	     0xf84f5020000	                            je 0x400a040	      9278	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_16
0x4009d4b	          0x83fa04	                              cmp edx, 4	      9280	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_16
0x4009d4e	     0xf84fc020000	                            je 0x400a050	      9280	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_16
0x4009d54	            0x85c9	                           test ecx, ecx	      9284	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17
0x4009d56	     0xf8494000000	                            je 0x4009df0	      9284	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17
0x4009d5c	          0x83fe03	                              cmp esi, 3	      9286	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	IF_18
0x4009d5f	            0x747f	                            je 0x4009de0	      9286	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	IF_18
0x4009d61	          0x83fa04	                              cmp edx, 4	      9291	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	ELSE_11	IF_19
0x4009d64	            0x7509	                           jne 0x4009d6f	      9291	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	ELSE_11	IF_19
0x4009d66	          0x83fe04	                              cmp esi, 4	      9291	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	ELSE_11	IF_19
0x4009d69	     0xf840e040000	                            je 0x400a17d	      9291	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	ELSE_11	IF_19
0x4009d6f	          0x4531ed	                          xor r13d, r13d	      9283	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_16
0x4009d72	        0x4183fc02	                             cmp r12d, 2	      9298	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_20
0x4009d76	     0xf850afeffff	                           jne 0x4009b86	      9298	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_20
0x4009d7c	          0x4d85ed	                           test r13, r13	      9380	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3	IF_26
0x4009d7f	        0x410f94c5	                               sete r13b	      9380	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3	IF_26
0x4009d83	        0x450fb6ed	                        movzx r13d, r13b	      9380	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3	IF_26
0x4009d87	      0xe9fafdffff	                           jmp 0x4009b86	      9380	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3	IF_26
0x4009d8c	         0xf1f4000	                         nop dword [rax]	      9380	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3	IF_26
0x4009d90	            0x39f2	                            cmp edx, esi	      9249	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11
0x4009d92	     0xf8478020000	                            je 0x400a010	      9249	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11
0x4009d98	            0x31ff	                            xor edi, edi	      9253	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11	CALL_8
0x4009d9a	      0xba05000000	                              mov edx, 5	      9253	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11	CALL_8
0x4009d9f	      0xbe00000000	                              mov esi, 0	      9253	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11	CALL_8
0x4009da4	      0xe800000000	                          call 0x4009da9	      9253	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11	CALL_8
0x4009da9	          0x4889c7	                            mov rdi, rax	      9253	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11	CALL_8
0x4009dac	      0xe800000000	                          call 0x4009db1	      9253	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11	CALL_8
0x4009db1	      0xe92dffffff	                           jmp 0x4009ce3	      9253	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11	CALL_8
0x4009db6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      9253	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11	CALL_8
0x4009dc0	      0xba05000000	                              mov edx, 5	      9274	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_15	CALL_14
0x4009dc5	      0xbe00000000	                              mov esi, 0	      9274	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_15	CALL_14
0x4009dca	            0x31ff	                            xor edi, edi	      9226	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5	CALL_4
0x4009dcc	      0xe800000000	                          call 0x4009dd1	      9226	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5	CALL_4
0x4009dd1	          0x4889c7	                            mov rdi, rax	      9226	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5	CALL_4
0x4009dd4	      0xe800000000	                          call 0x4009dd9	      9226	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5	CALL_4
0x4009dd9	      0xe905ffffff	                           jmp 0x4009ce3	      9226	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5	CALL_4
0x4009dde	            0x6690	                                     nop	      9226	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5	CALL_4
0x4009de0	          0x4531ed	                          xor r13d, r13d	      9283	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_16
0x4009de3	          0x83fa03	                              cmp edx, 3	      9286	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	IF_18
0x4009de6	            0x758a	                           jne 0x4009d72	      9286	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	IF_18
0x4009de8	     0xf1f84000000	                   nop dword [rax + rax]	      9286	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	IF_18
0x4009df0	            0x31c9	                            xor ecx, ecx	      9289	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	CALL_16
0x4009df2	          0x4489c2	                            mov edx, r8d	      9289	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	CALL_16
0x4009df5	          0x4889ee	                            mov rsi, rbp	      9289	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	CALL_16
0x4009df8	          0x4889df	                            mov rdi, rbx	      9289	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	CALL_16
0x4009dfb	      0xe800000000	                          call 0x4009e00	      9289	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	CALL_16
0x4009e00	          0x4c63e8	                         movsxd r13, eax	      9289	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	CALL_16
0x4009e03	      0xe96affffff	                           jmp 0x4009d72	      9289	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	CALL_16
0x4009e08	      0x458d7424f9	                     lea r14d, [r12 - 7]	      9308	eval.c	FUNCTION_181	ELSE_14	IF_21
0x4009e0d	        0x4183fe01	                             cmp r14d, 1	      9308	eval.c	FUNCTION_181	ELSE_14	IF_21
0x4009e11	     0xf8623feffff	                           jbe 0x4009c3a	      9308	eval.c	FUNCTION_181	ELSE_14	IF_21
0x4009e17	          0x83fe07	                              cmp esi, 7	      9312	eval.c	FUNCTION_181	ELSE_14	IF_21	IF_22
0x4009e1a	     0xf851d030000	                           jne 0x400a13d	      9312	eval.c	FUNCTION_181	ELSE_14	IF_21	IF_22
0x4009e20	      0xf20f104308	            movsd xmm0, qword [rbx + 8] 	      9313	eval.c	FUNCTION_181	ELSE_14	IF_21	IF_22
0x4009e25	          0x83fa07	                              cmp edx, 7	      9316	eval.c	FUNCTION_181	ELSE_14	IF_21	IF_23
0x4009e28	     0xf85e0020000	                           jne 0x400a10e	      9316	eval.c	FUNCTION_181	ELSE_14	IF_21	IF_23
0x4009e2e	      0xf20f104d08	            movsd xmm1, qword [rbp + 8] 	      9317	eval.c	FUNCTION_181	ELSE_14	IF_21	IF_23
0x4009e33	        0x4183fc06	                             cmp r12d, 6	      9321	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4009e37	     0xf873c010000	                            ja 0x4009f79	      9321	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4009e3d	    0x42ff24e50000	                       jmp qword [r12*8]	      9321	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4009e45	          0x4531ed	                          xor r13d, r13d	      9374	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4009e48	            0x85c0	                           test eax, eax	      9374	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4009e4a	        0x410f9ec5	                              setle r13b	      9374	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4009e4e	      0xe933fdffff	                           jmp 0x4009b86	      9374	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4009e53	          0x4c63e8	                         movsxd r13, eax	      9373	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4009e56	        0x49c1ed3f	                           shr r13, 0x3f	      9373	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4009e5a	      0xe927fdffff	                           jmp 0x4009b86	      9373	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4009e5f	          0x4c63e8	                         movsxd r13, eax	      9372	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4009e62	          0x49f7d5	                                 not r13	      9372	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4009e65	        0x49c1ed3f	                           shr r13, 0x3f	      9372	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4009e69	      0xe918fdffff	                           jmp 0x4009b86	      9372	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4009e6e	          0x4531ed	                          xor r13d, r13d	      9371	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4009e71	            0x85c0	                           test eax, eax	      9371	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4009e73	        0x410f9fc5	                               setg r13b	      9371	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4009e77	      0xe90afdffff	                           jmp 0x4009b86	      9371	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4009e7c	          0x4531ed	                          xor r13d, r13d	      9370	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4009e7f	            0x85c0	                           test eax, eax	      9370	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4009e81	        0x410f95c5	                              setne r13b	      9370	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4009e85	      0xe9fcfcffff	                           jmp 0x4009b86	      9370	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4009e8a	          0x4531ed	                          xor r13d, r13d	      9369	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4009e8d	            0x85c0	                           test eax, eax	      9369	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4009e8f	        0x410f94c5	                               sete r13b	      9369	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4009e93	      0xe9eefcffff	                           jmp 0x4009b86	      9369	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3
0x4009e98	          0x4889ef	                            mov rdi, rbp	      3228	eval.c	FUNCTION_62	CALL_1
0x4009e9b	      0xbe03000000	                              mov esi, 3	      3228	eval.c	FUNCTION_62	CALL_1
0x4009ea0	    0x4c8b35000000	            mov r14, qword [0x04009ea7] 	      3226	eval.c	FUNCTION_62
0x4009ea7	      0x4489442408	                mov dword [rsp + 8], r8d	      3226	eval.c	FUNCTION_62
0x4009eac	    0x48c705000000	               mov qword [0x04009eb7], 0	      3227	eval.c	FUNCTION_62
0x4009eb7	            0x31ed	                            xor ebp, ebp	      3221	eval.c	FUNCTION_62
0x4009eb9	      0xe800000000	                          call 0x4009ebe	      3228	eval.c	FUNCTION_62	CALL_1
0x4009ebe	          0x4885c0	                           test rax, rax	      3229	eval.c	FUNCTION_62	IF_1
0x4009ec1	      0x4889442420	             mov qword [rsp + 0x20], rax	      3228	eval.c	FUNCTION_62	CALL_1
0x4009ec6	            0x7428	                            je 0x4009ef0	      3229	eval.c	FUNCTION_62	IF_1
0x4009ec8	      0x448b442408	                mov r8d, dword [rsp + 8]	      3231	eval.c	FUNCTION_62	IF_1
0x4009ecd	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      3232	eval.c	FUNCTION_62	IF_1	CALL_2
0x4009ed2	            0x31d2	                            xor edx, edx	      3232	eval.c	FUNCTION_62	IF_1	CALL_2
0x4009ed4	          0x4c89ee	                            mov rsi, r13	      3232	eval.c	FUNCTION_62	IF_1	CALL_2
0x4009ed7	    0x44898424c800	             mov dword [rsp + 0xc8], r8d	      3231	eval.c	FUNCTION_62	IF_1
0x4009edf	      0xe800000000	                          call 0x4009ee4	      3232	eval.c	FUNCTION_62	IF_1	CALL_2
0x4009ee4	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      3233	eval.c	FUNCTION_62	IF_1	CALL_3
0x4009ee9	            0x89c5	                            mov ebp, eax	      3232	eval.c	FUNCTION_62	IF_1	CALL_2
0x4009eeb	      0xe800000000	                          call 0x4009ef0	      3233	eval.c	FUNCTION_62	IF_1	CALL_3
0x4009ef0	        0x4183fc08	                             cmp r12d, 8	      9379	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3	IF_26
0x4009ef4	    0x4c8935000000	            mov qword [0x04009efb], r14 	      3235	eval.c	FUNCTION_62
0x4009efb	          0x4c63ed	                         movsxd r13, ebp	      9378	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3	CALL_26
0x4009efe	     0xf8582fcffff	                           jne 0x4009b86	      9379	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3	IF_26
0x4009f04	      0xe973feffff	                           jmp 0x4009d7c	      9379	eval.c	FUNCTION_181	ELSE_18	ELSE_19	SWITCH_3	IF_26
0x4009f09	          0x4531ed	                          xor r13d, r13d	      9327	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4009f0c	        0x660f2ec8	                      ucomisd xmm1, xmm0	      9327	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4009f10	        0x410f97c5	                               seta r13b	      9327	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4009f14	      0xe96dfcffff	                           jmp 0x4009b86	      9327	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4009f19	          0x4531ed	                          xor r13d, r13d	      9326	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4009f1c	        0x660f2ec1	                      ucomisd xmm0, xmm1	      9326	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4009f20	        0x410f93c5	                              setae r13b	      9326	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4009f24	      0xe95dfcffff	                           jmp 0x4009b86	      9326	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4009f29	          0x4531ed	                          xor r13d, r13d	      9325	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4009f2c	        0x660f2ec1	                      ucomisd xmm0, xmm1	      9325	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4009f30	        0x410f97c5	                               seta r13b	      9325	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4009f34	      0xe94dfcffff	                           jmp 0x4009b86	      9325	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4009f39	            0x31c0	                            xor eax, eax	      9324	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4009f3b	    0x41bd01000000	                             mov r13d, 1	      9324	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4009f41	        0x660f2ec1	                      ucomisd xmm0, xmm1	      9324	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4009f45	           0xf9ac0	                                 setp al	      9324	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4009f48	        0x4c0f44e8	                          cmove r13, rax	      9324	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4009f4c	      0xe935fcffff	                           jmp 0x4009b86	      9324	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4009f51	            0x31c0	                            xor eax, eax	      9323	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4009f53	    0x41bd00000000	                             mov r13d, 0	      9323	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4009f59	        0x660f2ec1	                      ucomisd xmm0, xmm1	      9323	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4009f5d	           0xf9bc0	                                setnp al	      9323	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4009f60	        0x4c0f44e8	                          cmove r13, rax	      9323	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4009f64	      0xe91dfcffff	                           jmp 0x4009b86	      9323	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4009f69	          0x4531ed	                          xor r13d, r13d	      9328	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4009f6c	        0x660f2ec8	                      ucomisd xmm1, xmm0	      9328	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4009f70	        0x410f93c5	                              setae r13b	      9328	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4009f74	      0xe90dfcffff	                           jmp 0x4009b86	      9328	eval.c	FUNCTION_181	ELSE_14	IF_21	SWITCH_1
0x4009f79	          0x4531ed	                          xor r13d, r13d	      9366	eval.c	FUNCTION_181	ELSE_18	ELSE_19
0x4009f7c	      0xe905fcffff	                           jmp 0x4009b86	      9366	eval.c	FUNCTION_181	ELSE_18	ELSE_19
0x4009f81	     0xf1f80000000	                         nop dword [rax]	      9366	eval.c	FUNCTION_181	ELSE_18	ELSE_19
0x4009f88	            0x31d2	                            xor edx, edx	      9216	eval.c	FUNCTION_181	ELSE_1	IF_2	IF_3
0x4009f8a	        0x488b4308	                mov rax, qword [rbx + 8]	      9216	eval.c	FUNCTION_181	ELSE_1	IF_2	IF_3
0x4009f8e	        0x483b4508	                cmp rax, qword [rbp + 8]	      9216	eval.c	FUNCTION_181	ELSE_1	IF_2	IF_3
0x4009f92	        0x410f94c5	                               sete r13b	      9216	eval.c	FUNCTION_181	ELSE_1	IF_2	IF_3
0x4009f96	           0xf95c2	                                setne dl	      9216	eval.c	FUNCTION_181	ELSE_1	IF_2	IF_3
0x4009f99	        0x4183fc02	                             cmp r12d, 2	      9218	eval.c	FUNCTION_181	ELSE_1	IF_2	IF_3	IF_4
0x4009f9d	        0x450fb6ed	                        movzx r13d, r13b	      9216	eval.c	FUNCTION_181	ELSE_1	IF_2	IF_3
0x4009fa1	        0x4c0f44ea	                          cmove r13, rdx	      9218	eval.c	FUNCTION_181	ELSE_1	IF_2	IF_3	IF_4
0x4009fa5	      0xe9dcfbffff	                           jmp 0x4009b86	      9218	eval.c	FUNCTION_181	ELSE_1	IF_2	IF_3	IF_4
0x4009faa	    0x660f1f440000	                    nop word [rax + rax]	      9218	eval.c	FUNCTION_181	ELSE_1	IF_2	IF_3	IF_4
0x4009fb0	      0x418d4424ff	                      lea eax, [r12 - 1]	      9221	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5
0x4009fb5	      0xba05000000	                              mov edx, 5	      9226	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5	CALL_4
0x4009fba	      0xbe00000000	                              mov esi, 0	      9226	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5	CALL_4
0x4009fbf	          0x83f801	                              cmp eax, 1	      9221	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5
0x4009fc2	     0xf8702feffff	                            ja 0x4009dca	      9221	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_2	IF_5
0x4009fc8	        0x488b7508	                mov rsi, qword [rbp + 8]	      9233	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_4	CALL_6
0x4009fcc	        0x488b7b08	                mov rdi, qword [rbx + 8]	      9233	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_4	CALL_6
0x4009fd0	            0x31c9	                            xor ecx, ecx	      9233	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_4	CALL_6
0x4009fd2	          0x4489c2	                            mov edx, r8d	      9233	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_4	CALL_6
0x4009fd5	      0xe800000000	                          call 0x4009fda	      9233	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_4	CALL_6
0x4009fda	        0x4183fc02	                             cmp r12d, 2	      9235	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_4	IF_7
0x4009fde	          0x4c63e8	                         movsxd r13, eax	      9233	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_4	CALL_6
0x4009fe1	     0xf859ffbffff	                           jne 0x4009b86	      9235	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_4	IF_7
0x4009fe7	      0xe990fdffff	                           jmp 0x4009d7c	      9235	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_4	IF_7
0x4009fec	         0xf1f4000	                         nop dword [rax]	      9235	eval.c	FUNCTION_181	ELSE_1	IF_2	ELSE_4	IF_7
0x4009ff0	            0x31c0	                            xor eax, eax	      9245	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9
0x4009ff2	        0x488b5308	                mov rdx, qword [rbx + 8]	      9245	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9
0x4009ff6	        0x483b5508	                cmp rdx, qword [rbp + 8]	      9245	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9
0x4009ffa	        0x410f94c5	                               sete r13b	      9245	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9
0x4009ffe	           0xf95c0	                                setne al	      9245	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9
0x400a001	        0x450fb6ed	                        movzx r13d, r13b	      9245	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9
0x400a005	      0xe91afdffff	                           jmp 0x4009d24	      9245	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9
0x400a00a	    0x660f1f440000	                    nop word [rax + rax]	      9245	eval.c	FUNCTION_181	ELSE_5	IF_8	IF_9
0x400a010	      0x418d4424ff	                      lea eax, [r12 - 1]	      9250	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11
0x400a015	          0x83f801	                              cmp eax, 1	      9250	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11
0x400a018	     0xf8673010000	                           jbe 0x400a191	      9250	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11
0x400a01e	            0x31ff	                            xor edi, edi	      9255	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11	CALL_10
0x400a020	      0xba05000000	                              mov edx, 5	      9255	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11	CALL_10
0x400a025	      0xbe00000000	                              mov esi, 0	      9255	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11	CALL_10
0x400a02a	      0xe800000000	                          call 0x400a02f	      9255	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11	CALL_10
0x400a02f	          0x4889c7	                            mov rdi, rax	      9255	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11	CALL_10
0x400a032	      0xe800000000	                          call 0x400a037	      9255	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11	CALL_10
0x400a037	      0xe9a7fcffff	                           jmp 0x4009ce3	      9255	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11	CALL_10
0x400a03c	         0xf1f4000	                         nop dword [rax]	      9255	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_6	IF_11	CALL_10
0x400a040	      0x48837b0800	                  cmp qword [rbx + 8], 0	      9279	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_16
0x400a045	     0xf8500fdffff	                           jne 0x4009d4b	      9279	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_16
0x400a04b	      0xe91ffdffff	                           jmp 0x4009d6f	      9279	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_16
0x400a050	      0x48837d0800	                  cmp qword [rbp + 8], 0	      9281	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_16
0x400a055	     0xf85f9fcffff	                           jne 0x4009d54	      9281	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_16
0x400a05b	      0xe90ffdffff	                           jmp 0x4009d6f	      9281	eval.c	FUNCTION_181	ELSE_9	IF_14	IF_16
0x400a060	      0x458d7424f9	                     lea r14d, [r12 - 7]	      9341	eval.c	FUNCTION_181	ELSE_17	IF_24
0x400a065	        0x4183fe01	                             cmp r14d, 1	      9341	eval.c	FUNCTION_181	ELSE_17	IF_24
0x400a069	     0xf86cbfbffff	                           jbe 0x4009c3a	      9341	eval.c	FUNCTION_181	ELSE_17	IF_24
0x400a06f	      0x488d74241c	                   lea rsi, [rsp + 0x1c]	      6964	eval.c	FUNCTION_124	CALL_1
0x400a074	          0x4889df	                            mov rdi, rbx	      6964	eval.c	FUNCTION_124	CALL_1
0x400a077	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      6962	eval.c	FUNCTION_124
0x400a07f	      0xe800000000	                          call 0x400a084	      6964	eval.c	FUNCTION_124	CALL_1
0x400a084	      0x488d74241c	                   lea rsi, [rsp + 0x1c]	      6964	eval.c	FUNCTION_124	CALL_1
0x400a089	          0x4889ef	                            mov rdi, rbp	      6964	eval.c	FUNCTION_124	CALL_1
0x400a08c	          0x4989c5	                            mov r13, rax	      6964	eval.c	FUNCTION_124	CALL_1
0x400a08f	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      6962	eval.c	FUNCTION_124
0x400a097	      0xe800000000	                          call 0x400a09c	      6964	eval.c	FUNCTION_124	CALL_1
0x400a09c	        0x4183fc06	                             cmp r12d, 6	      9345	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x400a0a0	     0xf87e0faffff	                            ja 0x4009b86	      9345	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x400a0a6	    0x42ff24e50000	                       jmp qword [r12*8]	      9345	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x400a0ae	          0x4c39e8	                            cmp rax, r13	      9351	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x400a0b1	        0x410f9fc5	                               setg r13b	      9351	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x400a0b5	        0x450fb6ed	                        movzx r13d, r13b	      9351	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x400a0b9	      0xe9c8faffff	                           jmp 0x4009b86	      9351	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x400a0be	          0x4c39e8	                            cmp rax, r13	      9350	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x400a0c1	        0x410f9ec5	                              setle r13b	      9350	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x400a0c5	        0x450fb6ed	                        movzx r13d, r13b	      9350	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x400a0c9	      0xe9b8faffff	                           jmp 0x4009b86	      9350	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x400a0ce	          0x4c39e8	                            cmp rax, r13	      9349	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x400a0d1	        0x410f9cc5	                               setl r13b	      9349	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x400a0d5	        0x450fb6ed	                        movzx r13d, r13b	      9349	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x400a0d9	      0xe9a8faffff	                           jmp 0x4009b86	      9349	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x400a0de	          0x4c39e8	                            cmp rax, r13	      9348	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x400a0e1	        0x410f95c5	                              setne r13b	      9348	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x400a0e5	        0x450fb6ed	                        movzx r13d, r13b	      9348	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x400a0e9	      0xe998faffff	                           jmp 0x4009b86	      9348	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x400a0ee	          0x4c39e8	                            cmp rax, r13	      9347	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x400a0f1	        0x410f94c5	                               sete r13b	      9347	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x400a0f5	        0x450fb6ed	                        movzx r13d, r13b	      9347	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x400a0f9	      0xe988faffff	                           jmp 0x4009b86	      9347	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x400a0fe	          0x4c39e8	                            cmp rax, r13	      9352	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x400a101	        0x410f9dc5	                              setge r13b	      9352	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x400a105	        0x450fb6ed	                        movzx r13d, r13b	      9352	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x400a109	      0xe978faffff	                           jmp 0x4009b86	      9352	eval.c	FUNCTION_181	ELSE_17	IF_24	SWITCH_2
0x400a10e	      0x488d74241c	                   lea rsi, [rsp + 0x1c]	      6964	eval.c	FUNCTION_124	CALL_1
0x400a113	          0x4889ef	                            mov rdi, rbp	      6964	eval.c	FUNCTION_124	CALL_1
0x400a116	    0xf20f11442408	             movsd qword [rsp + 8], xmm0	      6964	eval.c	FUNCTION_124	CALL_1
0x400a11c	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      6962	eval.c	FUNCTION_124
0x400a124	      0xe800000000	                          call 0x400a129	      6964	eval.c	FUNCTION_124	CALL_1
0x400a129	        0x660fefc9	                         pxor xmm1, xmm1	      9319	eval.c	FUNCTION_181	ELSE_14	IF_21	CALL_19
0x400a12d	    0xf20f10442408	            movsd xmm0, qword [rsp + 8] 	      9319	eval.c	FUNCTION_181	ELSE_14	IF_21	CALL_19
0x400a133	      0xf2480f2ac8	                      cvtsi2sd xmm1, rax	      9319	eval.c	FUNCTION_181	ELSE_14	IF_21	CALL_19
0x400a138	      0xe9f6fcffff	                           jmp 0x4009e33	      9319	eval.c	FUNCTION_181	ELSE_14	IF_21	CALL_19
0x400a13d	      0x488d74241c	                   lea rsi, [rsp + 0x1c]	      6964	eval.c	FUNCTION_124	CALL_1
0x400a142	          0x4889df	                            mov rdi, rbx	      6964	eval.c	FUNCTION_124	CALL_1
0x400a145	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      6962	eval.c	FUNCTION_124
0x400a14d	      0xe800000000	                          call 0x400a152	      6964	eval.c	FUNCTION_124	CALL_1
0x400a152	        0x660fefc0	                         pxor xmm0, xmm0	      9315	eval.c	FUNCTION_181	ELSE_14	IF_21	CALL_18
0x400a156	          0x8b5500	                    mov edx, dword [rbp]	      9315	eval.c	FUNCTION_181	ELSE_14	IF_21	CALL_18
0x400a159	      0xf2480f2ac0	                      cvtsi2sd xmm0, rax	      9315	eval.c	FUNCTION_181	ELSE_14	IF_21	CALL_18
0x400a15e	      0xe9c2fcffff	                           jmp 0x4009e25	      9315	eval.c	FUNCTION_181	ELSE_14	IF_21	CALL_18
0x400a163	      0xbaffffff7f	                     mov edx, 0x7fffffff	      9363	eval.c	FUNCTION_181	ELSE_18	CALL_25
0x400a168	          0x4c89fe	                            mov rsi, r15	      9363	eval.c	FUNCTION_181	ELSE_18	CALL_25
0x400a16b	          0x4c89ef	                            mov rdi, r13	      9363	eval.c	FUNCTION_181	ELSE_18	CALL_25
0x400a16e	      0xe800000000	                          call 0x400a173	      9363	eval.c	FUNCTION_181	ELSE_18	CALL_25
0x400a173	      0x448b442408	                mov r8d, dword [rsp + 8]	      9363	eval.c	FUNCTION_181	ELSE_18	CALL_25
0x400a178	      0xe927fbffff	                           jmp 0x4009ca4	      9363	eval.c	FUNCTION_181	ELSE_18	CALL_25
0x400a17d	          0x4531ed	                          xor r13d, r13d	      9292	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	ELSE_11	IF_19
0x400a180	        0x488b4508	                mov rax, qword [rbp + 8]	      9292	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	ELSE_11	IF_19
0x400a184	        0x48394308	                cmp qword [rbx + 8], rax	      9292	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	ELSE_11	IF_19
0x400a188	        0x410f94c5	                               sete r13b	      9292	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	ELSE_11	IF_19
0x400a18c	      0xe9e1fbffff	                           jmp 0x4009d72	      9292	eval.c	FUNCTION_181	ELSE_9	IF_14	ELSE_10	IF_17	ELSE_11	IF_19
0x400a191	        0x488b7508	                mov rsi, qword [rbp + 8]	      9262	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_8	CALL_12
0x400a195	        0x488b7b08	                mov rdi, qword [rbx + 8]	      9262	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_8	CALL_12
0x400a199	            0x31c9	                            xor ecx, ecx	      9262	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_8	CALL_12
0x400a19b	          0x4489c2	                            mov edx, r8d	      9262	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_8	CALL_12
0x400a19e	      0xe800000000	                          call 0x400a1a3	      9262	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_8	CALL_12
0x400a1a3	        0x4183fc02	                             cmp r12d, 2	      9264	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_8	IF_13
0x400a1a7	          0x4c63e8	                         movsxd r13, eax	      9262	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_8	CALL_12
0x400a1aa	     0xf85d6f9ffff	                           jne 0x4009b86	      9264	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_8	IF_13
0x400a1b0	      0xe9c7fbffff	                           jmp 0x4009d7c	      9264	eval.c	FUNCTION_181	ELSE_5	IF_8	ELSE_8	IF_13
0x400a1b5	      0xe800000000	                          call 0x400a1ba	      9391	eval.c	FUNCTION_181
ex_lockvar	functions,0:SWITCH,0:IF,2:DO,0:ELSE,1:WHILE,0:CALL,4:FOR,0	401
0x40112f0	            0x4157	                                push r15	      2730	eval.c	FUNCTION_53
0x40112f2	            0x4156	                                push r14	      2730	eval.c	FUNCTION_53
0x40112f4	    0x41beffffffff	                    mov r14d, 0xffffffff	      2735	eval.c	FUNCTION_53	IF_1
0x40112fa	            0x4155	                                push r13	      2730	eval.c	FUNCTION_53
0x40112fc	            0x4154	                                push r12	      2730	eval.c	FUNCTION_53
0x40112fe	          0x4989fd	                            mov r13, rdi	      2730	eval.c	FUNCTION_53
0x4011301	              0x55	                                push rbp	      2730	eval.c	FUNCTION_53
0x4011302	              0x53	                                push rbx	      2730	eval.c	FUNCTION_53
0x4011303	    0x4881ec980000	                           sub rsp, 0x98	      2730	eval.c	FUNCTION_53
0x401130a	        0x448b5734	           mov r10d, dword [rdi + 0x34] 	      2734	eval.c	FUNCTION_53	IF_1
0x401130e	          0x4c8b27	                    mov r12, qword [rdi]	      2731	eval.c	FUNCTION_53
0x4011311	    0x64488b042528	                mov rax, qword fs:[0x28]	      2730	eval.c	FUNCTION_53
0x401131a	    0x488984248800	             mov qword [rsp + 0x88], rax	      2730	eval.c	FUNCTION_53
0x4011322	            0x31c0	                            xor eax, eax	      2730	eval.c	FUNCTION_53
0x4011324	          0x4585d2	                         test r10d, r10d	      2734	eval.c	FUNCTION_53	IF_1
0x4011327	      0x4c89642418	             mov qword [rsp + 0x18], r12	      2731	eval.c	FUNCTION_53
0x401132c	     0xf841e040000	                            je 0x4011750	      2734	eval.c	FUNCTION_53	IF_1
0x4011332	            0x31db	                            xor ebx, ebx	      2756	eval.c	FUNCTION_54
0x4011334	         0xf1f4000	                         nop dword [rax]	      2756	eval.c	FUNCTION_54
0x4011338	            0x89d8	                            mov eax, ebx	      2762	eval.c	FUNCTION_54	DO_1	CALL_1
0x401133a	          0x4531c0	                            xor r8d, r8d	      2762	eval.c	FUNCTION_54	DO_1	CALL_1
0x401133d	        0x410b4530	              or eax, dword [r13 + 0x30]	      2762	eval.c	FUNCTION_54	DO_1	CALL_1
0x4011341	      0x488d542420	                   lea rdx, [rsp + 0x20]	      2762	eval.c	FUNCTION_54	DO_1	CALL_1
0x4011346	      0xb901000000	                              mov ecx, 1	      2762	eval.c	FUNCTION_54	DO_1	CALL_1
0x401134b	          0x4c89e7	                            mov rdi, r12	      2762	eval.c	FUNCTION_54	DO_1	CALL_1
0x401134e	        0x410f95c0	                               setne r8b	      2762	eval.c	FUNCTION_54	DO_1	CALL_1
0x4011352	            0x31f6	                            xor esi, esi	      2762	eval.c	FUNCTION_54	DO_1	CALL_1
0x4011354	      0xe817e2ffff	          call sym.get_lval.constprop.24	      2762	eval.c	FUNCTION_54	DO_1	CALL_1
0x4011359	    0x48837c242000	               cmp qword [rsp + 0x20], 0	      2765	eval.c	FUNCTION_54	DO_1	IF_1
0x401135f	          0x4889c5	                            mov rbp, rax	      2762	eval.c	FUNCTION_54	DO_1	CALL_1
0x4011362	      0xb801000000	                              mov eax, 1	      2765	eval.c	FUNCTION_54	DO_1	IF_1
0x4011367	           0xf44d8	                          cmove ebx, eax	      2765	eval.c	FUNCTION_54	DO_1	IF_1
0x401136a	          0x4885ed	                           test rbp, rbp	      2766	eval.c	FUNCTION_54	DO_1	IF_2	CALL_2
0x401136d	     0xf843d020000	                            je 0x40115b0	      2766	eval.c	FUNCTION_54	DO_1	IF_2	CALL_2
0x4011373	         0xfb67d00	                   movzx edi, byte [rbp]	      2766	eval.c	FUNCTION_54	DO_1	IF_2	CALL_2
0x4011377	        0x4080ff20	                           cmp dil, 0x20	      2766	eval.c	FUNCTION_54	DO_1	IF_2	CALL_2
0x401137b	            0x740a	                            je 0x4011387	      2766	eval.c	FUNCTION_54	DO_1	IF_2	CALL_2
0x401137d	        0x4080ff09	                              cmp dil, 9	      2766	eval.c	FUNCTION_54	DO_1	IF_2	CALL_2
0x4011381	     0xf85f9010000	                           jne 0x4011580	      2766	eval.c	FUNCTION_54	DO_1	IF_2	CALL_2
0x4011387	            0x85db	                           test ebx, ebx	      2779	eval.c	FUNCTION_54	DO_1	IF_5
0x4011389	     0xf85c1010000	                           jne 0x4011550	      2779	eval.c	FUNCTION_54	DO_1	IF_5
0x401138f	        0x458b4d30	            mov r9d, dword [r13 + 0x30] 	      2779	eval.c	FUNCTION_54	DO_1	IF_5
0x4011393	          0x4585c9	                           test r9d, r9d	      2779	eval.c	FUNCTION_54	DO_1	IF_5
0x4011396	     0xf85f4000000	                           jne 0x4011490	      2779	eval.c	FUNCTION_54	DO_1	IF_5
0x401139c	        0x418b4d20	            mov ecx, dword [r13 + 0x20] 	      2781	eval.c	FUNCTION_54	DO_1	IF_5	IF_6
0x40113a0	    0x81f9e2010000	                          cmp ecx, 0x1e2	      2781	eval.c	FUNCTION_54	DO_1	IF_5	IF_6
0x40113a6	     0xf842c020000	                            je 0x40115d8	      2781	eval.c	FUNCTION_54	DO_1	IF_5	IF_6
0x40113ac	          0x4585f6	                         test r14d, r14d	      2935	eval.c	FUNCTION_57	IF_1
0x40113af	     0xf84ac010000	                            je 0x4011561	      2935	eval.c	FUNCTION_57	IF_1
0x40113b5	          0x4531ff	                          xor r15d, r15d	      2788	eval.c	FUNCTION_54	DO_1	IF_5	ELSE_1	IF_8	CALL_8
0x40113b8	    0x81f9f4000000	                           cmp ecx, 0xf4	      2788	eval.c	FUNCTION_54	DO_1	IF_5	ELSE_1	IF_8	CALL_8
0x40113be	        0x410f94c7	                               sete r15b	      2788	eval.c	FUNCTION_54	DO_1	IF_5	ELSE_1	IF_8	CALL_8
0x40113c2	    0x48837c243000	               cmp qword [rsp + 0x30], 0	      2938	eval.c	FUNCTION_57	IF_2
0x40113c8	     0xf84de040000	                            je 0x40118ac	      2938	eval.c	FUNCTION_57	IF_2
0x40113ce	        0x8b742448	            mov esi, dword [rsp + 0x48] 	      2963	eval.c	FUNCTION_57	ELSE_4	IF_6
0x40113d2	            0x85f6	                           test esi, esi	      2963	eval.c	FUNCTION_57	ELSE_4	IF_6
0x40113d4	     0xf8466020000	                            je 0x4011640	      2963	eval.c	FUNCTION_57	ELSE_4	IF_6
0x40113da	      0x4c8b642438	            mov r12, qword [rsp + 0x38] 	      2965	eval.c	FUNCTION_57	ELSE_4	IF_6
0x40113df	          0x4d85e4	                           test r12, r12	      2968	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x40113e2	     0xf8479010000	                            je 0x4011561	      2968	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x40113e8	    0x81f9f4000000	                           cmp ecx, 0xf4	      2968	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x40113ee	     0xf8418010000	                            je 0x401150c	      2968	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x40113f4	            0xeb32	                           jmp 0x4011428	      2968	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x40113f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2968	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x4011400	            0x31ff	                            xor edi, edi	      3000	eval.c	FUNCTION_58	IF_1	CALL_2
0x4011402	      0xba05000000	                              mov edx, 5	      3000	eval.c	FUNCTION_58	IF_1	CALL_2
0x4011407	      0xbe00000000	                              mov esi, 0	      3000	eval.c	FUNCTION_58	IF_1	CALL_2
0x401140c	      0xe800000000	                          call 0x4011411	      3000	eval.c	FUNCTION_58	IF_1	CALL_2
0x4011411	          0x4889c7	                            mov rdi, rax	      3000	eval.c	FUNCTION_58	IF_1	CALL_2
0x4011414	      0xe800000000	                          call 0x4011419	      3000	eval.c	FUNCTION_58	IF_1	CALL_2
0x4011419	        0x4d8b2424	                    mov r12, qword [r12]	      2971	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x401141d	    0x488344245001	               add qword [rsp + 0x50], 1	      2972	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x4011423	          0x4d85e4	                           test r12, r12	      2968	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x4011426	            0x7450	                            je 0x4011478	      2968	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x4011428	        0x8b542460	            mov edx, dword [rsp + 0x60] 	      2968	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x401142c	            0x85d2	                           test edx, edx	      2968	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x401142e	            0x750c	                           jne 0x401143c	      2968	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x4011430	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      2968	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x4011435	      0x4839442450	            cmp qword [rsp + 0x50], rax 	      2968	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x401143a	            0x7f3c	                            jg 0x4011478	      2968	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x401143c	    0x8b0500000000	            mov eax, dword [0x04011442] 	      2998	eval.c	FUNCTION_58	IF_1
0x4011442	          0x83f863	                           cmp eax, 0x63	      2998	eval.c	FUNCTION_58	IF_1
0x4011445	            0x7fb9	                            jg 0x4011400	      2998	eval.c	FUNCTION_58	IF_1
0x4011447	    0x4180642414fe	             and byte [r12 + 0x14], 0xfe	      2998	eval.c	FUNCTION_58	IF_1
0x401144d	      0x498d7c2410	                   lea rdi, [r12 + 0x10]	      2970	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1	CALL_5
0x4011452	          0x83c001	                              add eax, 1	      3005	eval.c	FUNCTION_58
0x4011455	          0x4489fa	                           mov edx, r15d	      3005	eval.c	FUNCTION_58
0x4011458	          0x4489f6	                           mov esi, r14d	      3005	eval.c	FUNCTION_58
0x401145b	    0x890500000000	            mov dword [0x04011461], eax 	      3005	eval.c	FUNCTION_58
0x4011461	      0xe83af3feff	               call sym.item_lock.part.1	      3005	eval.c	FUNCTION_58
0x4011466	        0x4d8b2424	                    mov r12, qword [r12]	      2971	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x401146a	    0x488344245001	               add qword [rsp + 0x50], 1	      2972	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x4011470	          0x4d85e4	                           test r12, r12	      2968	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x4011473	            0x75b3	                           jne 0x4011428	      2968	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x4011475	           0xf1f00	                         nop dword [rax]	      2968	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x4011478	        0x418b4530	            mov eax, dword [r13 + 0x30] 	      2968	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x401147c	         0xf1f4000	                         nop dword [rax]	      2968	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x4011480	            0x85c0	                           test eax, eax	      2794	eval.c	FUNCTION_54	DO_1	IF_9
0x4011482	     0xf84d9000000	                            je 0x4011561	      2794	eval.c	FUNCTION_54	DO_1	IF_9
0x4011488	     0xf1f84000000	                   nop dword [rax + rax]	      2794	eval.c	FUNCTION_54	DO_1	IF_9
0x4011490	          0x4889ef	                            mov rdi, rbp	      2797	eval.c	FUNCTION_54	DO_1	CALL_10
0x4011493	      0xe800000000	                          call 0x4011498	      2797	eval.c	FUNCTION_54	DO_1	CALL_10
0x4011498	           0xfb638	                   movzx edi, byte [rax]	      2798	eval.c	FUNCTION_54	CALL_11
0x401149b	          0x4989c4	                            mov r12, rax	      2797	eval.c	FUNCTION_54	DO_1	CALL_10
0x401149e	      0xe800000000	                          call 0x40114a3	      2798	eval.c	FUNCTION_54	CALL_11
0x40114a3	            0x85c0	                           test eax, eax	      2798	eval.c	FUNCTION_54	CALL_11
0x40114a5	     0xf848dfeffff	                            je 0x4011338	      2798	eval.c	FUNCTION_54	CALL_11
0x40114ab	          0x4c89e7	                            mov rdi, r12	      2800	eval.c	FUNCTION_54	CALL_12
0x40114ae	      0xe800000000	                          call 0x40114b3	      2800	eval.c	FUNCTION_54	CALL_12
0x40114b3	        0x49894508	                mov qword [r13 + 8], rax	      2800	eval.c	FUNCTION_54	CALL_12
0x40114b7	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	      2743	eval.c	FUNCTION_53
0x40114bf	    0x644833042528	                xor rax, qword fs:[0x28]	      2743	eval.c	FUNCTION_53
0x40114c8	     0xf85af040000	                           jne 0x401197d	      2743	eval.c	FUNCTION_53
0x40114ce	    0x4881c4980000	                           add rsp, 0x98	      2743	eval.c	FUNCTION_53
0x40114d5	              0x5b	                                 pop rbx	      2743	eval.c	FUNCTION_53
0x40114d6	              0x5d	                                 pop rbp	      2743	eval.c	FUNCTION_53
0x40114d7	            0x415c	                                 pop r12	      2743	eval.c	FUNCTION_53
0x40114d9	            0x415d	                                 pop r13	      2743	eval.c	FUNCTION_53
0x40114db	            0x415e	                                 pop r14	      2743	eval.c	FUNCTION_53
0x40114dd	            0x415f	                                 pop r15	      2743	eval.c	FUNCTION_53
0x40114df	              0xc3	                                     ret	      2743	eval.c	FUNCTION_53
0x40114e0	            0x31ff	                            xor edi, edi	      3000	eval.c	FUNCTION_58	IF_1	CALL_2
0x40114e2	      0xba05000000	                              mov edx, 5	      3000	eval.c	FUNCTION_58	IF_1	CALL_2
0x40114e7	      0xbe00000000	                              mov esi, 0	      3000	eval.c	FUNCTION_58	IF_1	CALL_2
0x40114ec	      0xe800000000	                          call 0x40114f1	      3000	eval.c	FUNCTION_58	IF_1	CALL_2
0x40114f1	          0x4889c7	                            mov rdi, rax	      3000	eval.c	FUNCTION_58	IF_1	CALL_2
0x40114f4	      0xe800000000	                          call 0x40114f9	      3000	eval.c	FUNCTION_58	IF_1	CALL_2
0x40114f9	        0x4d8b2424	                    mov r12, qword [r12]	      2971	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x40114fd	    0x488344245001	               add qword [rsp + 0x50], 1	      2972	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x4011503	          0x4d85e4	                           test r12, r12	      2968	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x4011506	     0xf846cffffff	                            je 0x4011478	      2968	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x401150c	        0x8b442460	            mov eax, dword [rsp + 0x60] 	      2968	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x4011510	            0x85c0	                           test eax, eax	      2968	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x4011512	            0x7510	                           jne 0x4011524	      2968	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x4011514	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      2968	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x4011519	      0x4839442458	            cmp qword [rsp + 0x58], rax 	      2968	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x401151e	     0xf8c54ffffff	                            jl 0x4011478	      2968	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1
0x4011524	    0x8b0500000000	            mov eax, dword [0x0401152a] 	      2998	eval.c	FUNCTION_58	IF_1
0x401152a	          0x83f863	                           cmp eax, 0x63	      2998	eval.c	FUNCTION_58	IF_1
0x401152d	            0x7fb1	                            jg 0x40114e0	      2998	eval.c	FUNCTION_58	IF_1
0x401152f	    0x41804c241401	                 or byte [r12 + 0x14], 1	      2998	eval.c	FUNCTION_58	IF_1
0x4011535	      0x498d7c2410	                   lea rdi, [r12 + 0x10]	      2970	eval.c	FUNCTION_57	ELSE_4	IF_6	WHILE_1	CALL_5
0x401153a	          0x83c001	                              add eax, 1	      3005	eval.c	FUNCTION_58
0x401153d	          0x4489fa	                           mov edx, r15d	      3005	eval.c	FUNCTION_58
0x4011540	          0x4489f6	                           mov esi, r14d	      3005	eval.c	FUNCTION_58
0x4011543	    0x890500000000	            mov dword [0x04011549], eax 	      3005	eval.c	FUNCTION_58
0x4011549	      0xe852f2feff	               call sym.item_lock.part.1	      3005	eval.c	FUNCTION_58
0x401154e	            0xeba9	                           jmp 0x40114f9	      3005	eval.c	FUNCTION_58
0x4011550	        0x418b4530	            mov eax, dword [r13 + 0x30] 	      3005	eval.c	FUNCTION_58
0x4011554	      0xbb01000000	                              mov ebx, 1	      2779	eval.c	FUNCTION_54	DO_1	IF_5
0x4011559	            0x85c0	                           test eax, eax	      2794	eval.c	FUNCTION_54	DO_1	IF_9
0x401155b	     0xf852fffffff	                           jne 0x4011490	      2794	eval.c	FUNCTION_54	DO_1	IF_9
0x4011561	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      2230	eval.c	FUNCTION_45	CALL_1
0x4011566	      0xe800000000	                          call 0x401156b	      2230	eval.c	FUNCTION_45	CALL_1
0x401156b	      0x488b7c2478	            mov rdi, qword [rsp + 0x78] 	      2231	eval.c	FUNCTION_45	CALL_2
0x4011570	      0xe800000000	                          call 0x4011575	      2231	eval.c	FUNCTION_45	CALL_2
0x4011575	      0xe916ffffff	                           jmp 0x4011490	      2231	eval.c	FUNCTION_45	CALL_2
0x401157a	    0x660f1f440000	                    nop word [rax + rax]	      2231	eval.c	FUNCTION_45	CALL_2
0x4011580	      0xe800000000	                          call 0x4011585	      2767	eval.c	FUNCTION_54	DO_1	IF_2	CALL_3
0x4011585	            0x85c0	                           test eax, eax	      2767	eval.c	FUNCTION_54	DO_1	IF_2	CALL_3
0x4011587	     0xf85fafdffff	                           jne 0x4011387	      2767	eval.c	FUNCTION_54	DO_1	IF_2	CALL_3
0x401158d	            0x31ff	                            xor edi, edi	      2772	eval.c	FUNCTION_54	DO_1	IF_2	IF_3	CALL_5
0x401158f	      0xba05000000	                              mov edx, 5	      2772	eval.c	FUNCTION_54	DO_1	IF_2	IF_3	CALL_5
0x4011594	      0xbe00000000	                              mov esi, 0	      2772	eval.c	FUNCTION_54	DO_1	IF_2	IF_3	CALL_5
0x4011599	    0xc70500000000	               mov dword [0x040115a3], 1	      2771	eval.c	FUNCTION_54	DO_1	IF_2	IF_3
0x40115a3	      0xe800000000	                          call 0x40115a8	      2772	eval.c	FUNCTION_54	DO_1	IF_2	IF_3	CALL_5
0x40115a8	          0x4889c7	                            mov rdi, rax	      2772	eval.c	FUNCTION_54	DO_1	IF_2	IF_3	CALL_5
0x40115ab	      0xe800000000	                          call 0x40115b0	      2772	eval.c	FUNCTION_54	DO_1	IF_2	IF_3	CALL_5
0x40115b0	        0x410b5d30	              or ebx, dword [r13 + 0x30]	      2774	eval.c	FUNCTION_54	DO_1	IF_2	IF_4
0x40115b4	     0xf85f1feffff	                           jne 0x40114ab	      2774	eval.c	FUNCTION_54	DO_1	IF_2	IF_4
0x40115ba	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      2230	eval.c	FUNCTION_45	CALL_1
0x40115bf	      0xe800000000	                          call 0x40115c4	      2230	eval.c	FUNCTION_45	CALL_1
0x40115c4	      0x488b7c2478	            mov rdi, qword [rsp + 0x78] 	      2231	eval.c	FUNCTION_45	CALL_2
0x40115c9	      0xe800000000	                          call 0x40115ce	      2231	eval.c	FUNCTION_45	CALL_2
0x40115ce	      0xe9d8feffff	                           jmp 0x40114ab	      2231	eval.c	FUNCTION_45	CALL_2
0x40115d3	       0xf1f440000	                   nop dword [rax + rax]	      2231	eval.c	FUNCTION_45	CALL_2
0x40115d8	    0x48837c243000	               cmp qword [rsp + 0x30], 0	      2812	eval.c	FUNCTION_55	IF_1
0x40115de	     0xf846d030000	                            je 0x4011951	      2812	eval.c	FUNCTION_55	IF_1
0x40115e4	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      2822	eval.c	FUNCTION_55	ELSE_1	IF_3
0x40115e9	          0x4885ff	                           test rdi, rdi	      2822	eval.c	FUNCTION_55	ELSE_1	IF_3
0x40115ec	     0xf84a6000000	                            je 0x4011698	      2822	eval.c	FUNCTION_55	ELSE_1	IF_3
0x40115f2	         0xfb64748	           movzx eax, byte [rdi + 0x48] 	      2823	eval.c	FUNCTION_55	ELSE_1	IF_3	CALL_2
0x40115f6	      0x4c8b642420	            mov r12, qword [rsp + 0x20] 	      2823	eval.c	FUNCTION_55	ELSE_1	IF_3	CALL_2
0x40115fb	            0xa801	                              test al, 1	      7721	eval.c	FUNCTION_148	IF_1
0x40115fd	     0xf8475010000	                            je 0x4011778	      7721	eval.c	FUNCTION_148	IF_1
0x4011603	          0x4d85e4	                           test r12, r12	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x4011606	     0xf842b010000	                            je 0x4011737	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x401160c	      0xba05000000	                              mov edx, 5	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x4011611	      0xbe00000000	                              mov esi, 0	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x4011616	            0x31ff	                            xor edi, edi	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4011618	      0xbb01000000	                              mov ebx, 1	      2820	eval.c	FUNCTION_55	IF_1
0x401161d	      0xe800000000	                          call 0x4011622	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4011622	          0x4c89e6	                            mov rsi, r12	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4011625	          0x4889c7	                            mov rdi, rax	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4011628	      0xe800000000	                          call 0x401162d	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x401162d	        0x418b4530	            mov eax, dword [r13 + 0x30] 	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4011631	      0xe94afeffff	                           jmp 0x4011480	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4011636	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4011640	    0x48837c244000	               cmp qword [rsp + 0x40], 0	      2975	eval.c	FUNCTION_57	ELSE_5	IF_7
0x4011646	     0xf8424020000	                            je 0x4011870	      2975	eval.c	FUNCTION_57	ELSE_5	IF_7
0x401164c	    0x8b0500000000	            mov eax, dword [0x04011652] 	      2998	eval.c	FUNCTION_58	IF_1
0x4011652	          0x83f863	                           cmp eax, 0x63	      2998	eval.c	FUNCTION_58	IF_1
0x4011655	     0xf8faf010000	                            jg 0x401180a	      2998	eval.c	FUNCTION_58	IF_1
0x401165b	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      2977	eval.c	FUNCTION_57	ELSE_5	IF_7
0x4011660	          0x83c001	                              add eax, 1	      3005	eval.c	FUNCTION_58
0x4011663	    0x81f9f4000000	                           cmp ecx, 0xf4	      3008	eval.c	FUNCTION_58	IF_3
0x4011669	    0x890500000000	            mov dword [0x0401166f], eax 	      3005	eval.c	FUNCTION_58
0x401166f	         0xfb64714	           movzx eax, byte [rdi + 0x14] 	      3009	eval.c	FUNCTION_58	IF_3
0x4011673	     0xf8489010000	                            je 0x4011802	      3008	eval.c	FUNCTION_58	IF_3
0x4011679	          0x83e0fe	                     and eax, 0xfffffffe	      3011	eval.c	FUNCTION_58	ELSE_1
0x401167c	          0x884714	               mov byte [rdi + 0x14], al	      3011	eval.c	FUNCTION_58	ELSE_1
0x401167f	          0x4489fa	                           mov edx, r15d	      3011	eval.c	FUNCTION_58	ELSE_1
0x4011682	        0x4883c710	                           add rdi, 0x10	      2977	eval.c	FUNCTION_57	ELSE_5	IF_7
0x4011686	          0x4489f6	                           mov esi, r14d	      2977	eval.c	FUNCTION_57	ELSE_5	IF_7
0x4011689	      0xe812f1feff	               call sym.item_lock.part.1	      2977	eval.c	FUNCTION_57	ELSE_5	IF_7
0x401168e	      0xe9e5fdffff	                           jmp 0x4011478	      2977	eval.c	FUNCTION_57	ELSE_5	IF_7
0x4011693	       0xf1f440000	                   nop dword [rax + rax]	      2977	eval.c	FUNCTION_57	ELSE_5	IF_7
0x4011698	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      2824	eval.c	FUNCTION_55	ELSE_1	IF_3
0x401169d	          0x4885c0	                           test rax, rax	      2824	eval.c	FUNCTION_55	ELSE_1	IF_3
0x40116a0	            0x741a	                            je 0x40116bc	      2824	eval.c	FUNCTION_55	ELSE_1	IF_3
0x40116a2	           0xfb610	                   movzx edx, byte [rax]	      2825	eval.c	FUNCTION_55	ELSE_1	IF_3	CALL_3
0x40116a5	      0x4c8b642420	            mov r12, qword [rsp + 0x20] 	      2825	eval.c	FUNCTION_55	ELSE_1	IF_3	CALL_3
0x40116aa	          0xf6c201	                              test dl, 1	      7721	eval.c	FUNCTION_148	IF_1
0x40116ad	     0xf8550ffffff	                           jne 0x4011603	      7721	eval.c	FUNCTION_148	IF_1
0x40116b3	          0x83e202	                              and edx, 2	      7729	eval.c	FUNCTION_148	IF_2
0x40116b6	     0xf85c4000000	                           jne 0x4011780	      7729	eval.c	FUNCTION_148	IF_2
0x40116bc	      0x448b442448	            mov r8d, dword [rsp + 0x48] 	      2827	eval.c	FUNCTION_55	ELSE_2	IF_4
0x40116c1	          0x4585c0	                           test r8d, r8d	      2827	eval.c	FUNCTION_55	ELSE_2	IF_4
0x40116c4	     0xf84d6000000	                            je 0x40117a0	      2827	eval.c	FUNCTION_55	ELSE_2	IF_4
0x40116ca	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      2830	eval.c	FUNCTION_55	ELSE_2	IF_4
0x40116cf	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      2831	eval.c	FUNCTION_55	ELSE_2	IF_4
0x40116d4	          0x4885f6	                           test rsi, rsi	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x40116d7	          0x4c63c8	                          movsxd r9, eax	      2831	eval.c	FUNCTION_55	ELSE_2	IF_4
0x40116da	     0xf8481feffff	                            je 0x4011561	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x40116e0	      0x448b442460	            mov r8d, dword [rsp + 0x60] 	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x40116e5	      0x4c8b542458	            mov r10, qword [rsp + 0x58] 	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x40116ea	      0x4c8b642420	            mov r12, qword [rsp + 0x20] 	      2836	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1	IF_5	CALL_4
0x40116ef	          0x4585c0	                           test r8d, r8d	      2836	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1	IF_5	CALL_4
0x40116f2	     0xf8530010000	                           jne 0x4011828	      2836	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1	IF_5	CALL_4
0x40116f8	          0x4889f1	                            mov rcx, rsi	      2836	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1	IF_5	CALL_4
0x40116fb	            0x31d2	                            xor edx, edx	      2836	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1	IF_5	CALL_4
0x40116fd	            0xeb16	                           jmp 0x4011715	      2836	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1	IF_5	CALL_4
0x40116ff	              0x90	                                     nop	      2836	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1	IF_5	CALL_4
0x4011700	          0x83e102	                              and ecx, 2	      7729	eval.c	FUNCTION_148	IF_2
0x4011703	            0x757b	                           jne 0x4011780	      7729	eval.c	FUNCTION_148	IF_2
0x4011705	        0x4883c201	                              add rdx, 1	      7729	eval.c	FUNCTION_148	IF_2
0x4011709	          0x4885ff	                           test rdi, rdi	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x401170c	     0xf84b6000000	                            je 0x40117c8	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x4011712	          0x4889f9	                            mov rcx, rdi	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x4011715	        0x498d3c11	                     lea rdi, [r9 + rdx]	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x4011719	          0x4939fa	                            cmp r10, rdi	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x401171c	     0xf8ca6000000	                            jl 0x40117c8	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x4011722	          0x488b39	                    mov rdi, qword [rcx]	      2835	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x4011725	         0xfb64914	           movzx ecx, byte [rcx + 0x14] 	      2836	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1	IF_5	CALL_4
0x4011729	          0xf6c101	                              test cl, 1	      7721	eval.c	FUNCTION_148	IF_1
0x401172c	            0x74d2	                            je 0x4011700	      7721	eval.c	FUNCTION_148	IF_1
0x401172e	          0x4d85e4	                           test r12, r12	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x4011731	     0xf85d5feffff	                           jne 0x401160c	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x4011737	      0xba05000000	                              mov edx, 5	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x401173c	      0xbe00000000	                              mov esi, 0	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x4011741	            0x31ff	                            xor edi, edi	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x4011743	      0xe800000000	                          call 0x4011748	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x4011748	          0x4989c4	                            mov r12, rax	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x401174b	      0xe9bcfeffff	                           jmp 0x401160c	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x4011750	      0x410fb63c24	                   movzx edi, byte [r12]	      2736	eval.c	FUNCTION_53	ELSE_1	IF_2	CALL_1
0x4011755	      0xe800000000	                          call 0x401175a	      2736	eval.c	FUNCTION_53	ELSE_1	IF_2	CALL_1
0x401175a	            0x85c0	                           test eax, eax	      2736	eval.c	FUNCTION_53	ELSE_1	IF_2	CALL_1
0x401175c	     0xf8526010000	                           jne 0x4011888	      2736	eval.c	FUNCTION_53	ELSE_1	IF_2	CALL_1
0x4011762	      0x4c8b642418	            mov r12, qword [rsp + 0x18] 	      2736	eval.c	FUNCTION_53	ELSE_1	IF_2	CALL_1
0x4011767	    0x41be02000000	                             mov r14d, 2	      2732	eval.c	FUNCTION_53
0x401176d	      0xe9c0fbffff	                           jmp 0x4011332	      2732	eval.c	FUNCTION_53
0x4011772	    0x660f1f440000	                    nop word [rax + rax]	      2732	eval.c	FUNCTION_53
0x4011778	            0xa802	                              test al, 2	      7729	eval.c	FUNCTION_148	IF_2
0x401177a	     0xf8418ffffff	                            je 0x4011698	      7729	eval.c	FUNCTION_148	IF_2
0x4011780	          0x4d85e4	                           test r12, r12	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4011783	     0xf84af010000	                            je 0x4011938	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4011789	      0xba05000000	                              mov edx, 5	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x401178e	      0xbe00000000	                              mov esi, 0	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4011793	      0xe97efeffff	                           jmp 0x4011616	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4011798	     0xf1f84000000	                   nop dword [rax + rax]	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x40117a0	          0x4885ff	                           test rdi, rdi	      2853	eval.c	FUNCTION_55	ELSE_3	IF_6
0x40117a3	     0xf84aa000000	                            je 0x4011853	      2853	eval.c	FUNCTION_55	ELSE_3	IF_6
0x40117a9	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      2855	eval.c	FUNCTION_55	ELSE_3	CALL_6
0x40117ae	      0xe800000000	                          call 0x40117b3	      2855	eval.c	FUNCTION_55	ELSE_3	CALL_6
0x40117b3	      0xe9c0fcffff	                           jmp 0x4011478	      2855	eval.c	FUNCTION_55	ELSE_3	CALL_6
0x40117b8	     0xf1f84000000	                   nop dword [rax + rax]	      2855	eval.c	FUNCTION_55	ELSE_3	CALL_6
0x40117c0	      0x448b442460	            mov r8d, dword [rsp + 0x60] 	      2855	eval.c	FUNCTION_55	ELSE_3	CALL_6
0x40117c5	          0x4c89e6	                            mov rsi, r12	      2855	eval.c	FUNCTION_55	ELSE_3	CALL_6
0x40117c8	          0x4585c0	                           test r8d, r8d	      2843	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x40117cb	            0x750b	                           jne 0x40117d8	      2843	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x40117cd	      0x4839442458	            cmp qword [rsp + 0x58], rax 	      2843	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x40117d2	     0xf8ca0fcffff	                            jl 0x4011478	      2843	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x40117d8	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      2846	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2	CALL_5
0x40117dd	          0x4c8b26	                    mov r12, qword [rsi]	      2845	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x40117e0	      0xe800000000	                          call 0x40117e5	      2846	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2	CALL_5
0x40117e5	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      2848	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x40117ea	      0x4c89642438	             mov qword [rsp + 0x38], r12	      2847	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x40117ef	        0x4883c001	                              add rax, 1	      2848	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x40117f3	          0x4d85e4	                           test r12, r12	      2843	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x40117f6	      0x4889442450	             mov qword [rsp + 0x50], rax	      2848	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x40117fb	            0x75c3	                           jne 0x40117c0	      2843	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x40117fd	      0xe976fcffff	                           jmp 0x4011478	      2843	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x4011802	          0x83c801	                               or eax, 1	      3009	eval.c	FUNCTION_58	IF_3
0x4011805	      0xe972feffff	                           jmp 0x401167c	      3009	eval.c	FUNCTION_58	IF_3
0x401180a	            0x31ff	                            xor edi, edi	      3000	eval.c	FUNCTION_58	IF_1	CALL_2
0x401180c	      0xba05000000	                              mov edx, 5	      3000	eval.c	FUNCTION_58	IF_1	CALL_2
0x4011811	      0xbe00000000	                              mov esi, 0	      3000	eval.c	FUNCTION_58	IF_1	CALL_2
0x4011816	      0xe800000000	                          call 0x401181b	      3000	eval.c	FUNCTION_58	IF_1	CALL_2
0x401181b	          0x4889c7	                            mov rdi, rax	      3000	eval.c	FUNCTION_58	IF_1	CALL_2
0x401181e	      0xe800000000	                          call 0x4011823	      3000	eval.c	FUNCTION_58	IF_1	CALL_2
0x4011823	      0xe950fcffff	                           jmp 0x4011478	      3000	eval.c	FUNCTION_58	IF_1	CALL_2
0x4011828	          0x4889f2	                            mov rdx, rsi	      2836	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1	IF_5	CALL_4
0x401182b	            0xeb14	                           jmp 0x4011841	      2836	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1	IF_5	CALL_4
0x401182d	           0xf1f00	                         nop dword [rax]	      2836	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1	IF_5	CALL_4
0x4011830	          0x83e202	                              and edx, 2	      7729	eval.c	FUNCTION_148	IF_2
0x4011833	     0xf8547ffffff	                           jne 0x4011780	      7729	eval.c	FUNCTION_148	IF_2
0x4011839	          0x4885c9	                           test rcx, rcx	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x401183c	          0x4889ca	                            mov rdx, rcx	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x401183f	            0x7487	                            je 0x40117c8	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x4011841	          0x488b0a	                    mov rcx, qword [rdx]	      2835	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x4011844	         0xfb65214	           movzx edx, byte [rdx + 0x14] 	      2836	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1	IF_5	CALL_4
0x4011848	          0xf6c201	                              test dl, 1	      7721	eval.c	FUNCTION_148	IF_1
0x401184b	     0xf85b2fdffff	                           jne 0x4011603	      7721	eval.c	FUNCTION_148	IF_1
0x4011851	            0xebdd	                           jmp 0x4011830	      7721	eval.c	FUNCTION_148	IF_1
0x4011853	      0x488b742470	            mov rsi, qword [rsp + 0x70] 	      2858	eval.c	FUNCTION_55	ELSE_3	CALL_7
0x4011858	          0x4889c7	                            mov rdi, rax	      2858	eval.c	FUNCTION_55	ELSE_3	CALL_7
0x401185b	      0xe800000000	                          call 0x4011860	      2858	eval.c	FUNCTION_55	ELSE_3	CALL_7
0x4011860	        0x418b4530	            mov eax, dword [r13 + 0x30] 	      2858	eval.c	FUNCTION_55	ELSE_3	CALL_7
0x4011864	      0xe9f0fcffff	                           jmp 0x4011559	      2858	eval.c	FUNCTION_55	ELSE_3	CALL_7
0x4011869	     0xf1f80000000	                         nop dword [rax]	      2858	eval.c	FUNCTION_55	ELSE_3	CALL_7
0x4011870	      0x488b7c2470	            mov rdi, qword [rsp + 0x70] 	      2980	eval.c	FUNCTION_57	CALL_7
0x4011875	          0x4489fa	                           mov edx, r15d	      2980	eval.c	FUNCTION_57	CALL_7
0x4011878	          0x4489f6	                           mov esi, r14d	      2980	eval.c	FUNCTION_57	CALL_7
0x401187b	      0xe850f2feff	                      call sym.item_lock	      2980	eval.c	FUNCTION_57	CALL_7
0x4011880	      0xe9f3fbffff	                           jmp 0x4011478	      2980	eval.c	FUNCTION_57	CALL_7
0x4011885	           0xf1f00	                         nop dword [rax]	      2980	eval.c	FUNCTION_57	CALL_7
0x4011888	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      2738	eval.c	FUNCTION_53	ELSE_1	IF_2	CALL_2
0x401188d	      0xe800000000	                          call 0x4011892	      2738	eval.c	FUNCTION_53	ELSE_1	IF_2	CALL_2
0x4011892	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      2739	eval.c	FUNCTION_53	ELSE_1	IF_2	CALL_3
0x4011897	          0x4189c6	                           mov r14d, eax	      2738	eval.c	FUNCTION_53	ELSE_1	IF_2	CALL_2
0x401189a	      0xe800000000	                          call 0x401189f	      2739	eval.c	FUNCTION_53	ELSE_1	IF_2	CALL_3
0x401189f	      0x4889442418	             mov qword [rsp + 0x18], rax	      2739	eval.c	FUNCTION_53	ELSE_1	IF_2	CALL_3
0x40118a4	          0x4989c4	                            mov r12, rax	      2739	eval.c	FUNCTION_53	ELSE_1	IF_2	CALL_3
0x40118a7	      0xe986faffff	                           jmp 0x4011332	      2739	eval.c	FUNCTION_53	ELSE_1	IF_2	CALL_3
0x40118ac	      0x440fb66500	                  movzx r12d, byte [rbp]	      2940	eval.c	FUNCTION_57	IF_2
0x40118b1	        0xc6450000	                       mov byte [rbp], 0	      2941	eval.c	FUNCTION_57	IF_2
0x40118b5	            0x31f6	                            xor esi, esi	      2944	eval.c	FUNCTION_57	IF_2	CALL_1
0x40118b7	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      2944	eval.c	FUNCTION_57	IF_2	CALL_1
0x40118bc	      0xba01000000	                              mov edx, 1	      2944	eval.c	FUNCTION_57	IF_2	CALL_1
0x40118c1	        0x894c240c	              mov dword [rsp + 0xc], ecx	      2944	eval.c	FUNCTION_57	IF_2	CALL_1
0x40118c5	      0xe800000000	                          call 0x40118ca	      2944	eval.c	FUNCTION_57	IF_2	CALL_1
0x40118ca	          0x4885c0	                           test rax, rax	      2945	eval.c	FUNCTION_57	IF_2	IF_3
0x40118cd	     0xf84a3000000	                            je 0x4011976	      2945	eval.c	FUNCTION_57	IF_2	IF_3
0x40118d3	         0xfb65010	           movzx edx, byte [rax + 0x10] 	      2947	eval.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x40118d7	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      2947	eval.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x40118db	          0xf6c204	                              test dl, 4	      2947	eval.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x40118de	            0x742d	                            je 0x401190d	      2947	eval.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x40118e0	            0x8b30	                    mov esi, dword [rax]	      2949	eval.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x40118e2	          0x83ee05	                              sub esi, 5	      2949	eval.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x40118e5	          0x83fe01	                              cmp esi, 1	      2949	eval.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x40118e8	            0x7623	                           jbe 0x401190d	      2949	eval.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x40118ea	      0x4c8b7c2420	            mov r15, qword [rsp + 0x20] 	      2952	eval.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x40118ef	            0x31ff	                            xor edi, edi	      2952	eval.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x40118f1	      0xba05000000	                              mov edx, 5	      2952	eval.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x40118f6	      0xbe00000000	                              mov esi, 0	      2952	eval.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x40118fb	      0xe800000000	                          call 0x4011900	      2952	eval.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x4011900	          0x4c89fe	                            mov rsi, r15	      2952	eval.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x4011903	          0x4889c7	                            mov rdi, rax	      2952	eval.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x4011906	      0xe800000000	                          call 0x401190b	      2952	eval.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x401190b	            0xeb22	                           jmp 0x401192f	      2952	eval.c	FUNCTION_57	IF_2	ELSE_1	IF_4
0x401190d	            0x89d6	                            mov esi, edx	      2956	eval.c	FUNCTION_57	IF_2	ELSE_2	IF_5
0x401190f	          0x83e2f7	                     and edx, 0xfffffff7	      2956	eval.c	FUNCTION_57	IF_2	ELSE_2	IF_5
0x4011912	          0x4889c7	                            mov rdi, rax	      2959	eval.c	FUNCTION_57	IF_2	ELSE_2	CALL_4
0x4011915	          0x83ce08	                               or esi, 8	      2956	eval.c	FUNCTION_57	IF_2	ELSE_2	IF_5
0x4011918	    0x81f9f4000000	                           cmp ecx, 0xf4	      2956	eval.c	FUNCTION_57	IF_2	ELSE_2	IF_5
0x401191e	           0xf44d6	                          cmove edx, esi	      2956	eval.c	FUNCTION_57	IF_2	ELSE_2	IF_5
0x4011921	          0x4489f6	                           mov esi, r14d	      2959	eval.c	FUNCTION_57	IF_2	ELSE_2	CALL_4
0x4011924	          0x885010	               mov byte [rax + 0x10], dl	      2959	eval.c	FUNCTION_57	IF_2	ELSE_2	CALL_4
0x4011927	          0x4489fa	                           mov edx, r15d	      2959	eval.c	FUNCTION_57	IF_2	ELSE_2	CALL_4
0x401192a	      0xe8a1f1feff	                      call sym.item_lock	      2959	eval.c	FUNCTION_57	IF_2	ELSE_2	CALL_4
0x401192f	        0x44886500	                    mov byte [rbp], r12b	      2961	eval.c	FUNCTION_57	IF_2
0x4011933	      0xe940fbffff	                           jmp 0x4011478	      2961	eval.c	FUNCTION_57	IF_2
0x4011938	      0xba05000000	                              mov edx, 5	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x401193d	      0xbe00000000	                              mov esi, 0	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4011942	            0x31ff	                            xor edi, edi	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4011944	      0xe800000000	                          call 0x4011949	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4011949	          0x4989c4	                            mov r12, rax	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x401194c	      0xe938feffff	                           jmp 0x4011789	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4011951	         0xfb65d00	                   movzx ebx, byte [rbp]	      2814	eval.c	FUNCTION_55	IF_1
0x4011955	        0x418b7534	            mov esi, dword [r13 + 0x34] 	      2783	eval.c	FUNCTION_54	DO_1	IF_5	IF_6	IF_7	CALL_7
0x4011959	        0xc6450000	                       mov byte [rbp], 0	      2815	eval.c	FUNCTION_55	IF_1
0x401195d	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      2818	eval.c	FUNCTION_55	IF_1	IF_2	CALL_1
0x4011962	      0xe800000000	                          call 0x4011967	      2818	eval.c	FUNCTION_55	IF_1	IF_2	CALL_1
0x4011967	          0x885d00	                      mov byte [rbp], bl	      2820	eval.c	FUNCTION_55	IF_1
0x401196a	            0x31db	                            xor ebx, ebx	      2820	eval.c	FUNCTION_55	IF_1
0x401196c	            0x85c0	                           test eax, eax	      2820	eval.c	FUNCTION_55	IF_1
0x401196e	           0xf94c3	                                 sete bl	      2820	eval.c	FUNCTION_55	IF_1
0x4011971	      0xe902fbffff	                           jmp 0x4011478	      2820	eval.c	FUNCTION_55	IF_1
0x4011976	      0xbb01000000	                              mov ebx, 1	      2945	eval.c	FUNCTION_57	IF_2	IF_3
0x401197b	            0xebb2	                           jmp 0x401192f	      2945	eval.c	FUNCTION_57	IF_2	IF_3
0x401197d	      0xe800000000	                          call 0x4011982	      2743	eval.c	FUNCTION_53
eval_charconvert	functions,0:SWITCH,0:IF,2:DO,0:ELSE,0:WHILE,0:CALL,9:FOR,0	102
0x400b390	            0x4155	                                push r13	       583	eval.c	FUNCTION_9
0x400b392	            0x4154	                                push r12	       583	eval.c	FUNCTION_9
0x400b394	          0x4989fd	                            mov r13, rdi	       583	eval.c	FUNCTION_9
0x400b397	              0x55	                                push rbp	       583	eval.c	FUNCTION_9
0x400b398	              0x53	                                push rbx	       583	eval.c	FUNCTION_9
0x400b399	      0xbf00000000	                              mov edi, 0	      6473	eval.c	FUNCTION_109	CALL_1
0x400b39e	          0x4989f4	                            mov r12, rsi	       583	eval.c	FUNCTION_9
0x400b3a1	          0x4889d5	                            mov rbp, rdx	       583	eval.c	FUNCTION_9
0x400b3a4	          0x4889cb	                            mov rbx, rcx	       583	eval.c	FUNCTION_9
0x400b3a7	        0x4883ec38	                           sub rsp, 0x38	       583	eval.c	FUNCTION_9
0x400b3ab	    0x64488b042528	                mov rax, qword fs:[0x28]	       583	eval.c	FUNCTION_9
0x400b3b4	      0x4889442428	             mov qword [rsp + 0x28], rax	       583	eval.c	FUNCTION_9
0x400b3b9	            0x31c0	                            xor eax, eax	       583	eval.c	FUNCTION_9
0x400b3bb	    0xc744240c0000	                mov dword [rsp + 0xc], 0	       584	eval.c	FUNCTION_9
0x400b3c3	      0xe800000000	                          call 0x400b3c8	      6473	eval.c	FUNCTION_109	CALL_1
0x400b3c8	          0x4d85ed	                           test r13, r13	      6475	eval.c	FUNCTION_109	IF_1
0x400b3cb	    0xc70500000000	               mov dword [0x0400b3d5], 2	      6474	eval.c	FUNCTION_109
0x400b3d5	     0xf848d010000	                            je 0x400b568	      6475	eval.c	FUNCTION_109	IF_1
0x400b3db	          0x4c89ef	                            mov rdi, r13	      6478	eval.c	FUNCTION_109	ELSE_1	IF_2
0x400b3de	      0xe800000000	                          call 0x400b3e3	      6478	eval.c	FUNCTION_109	ELSE_1	IF_2
0x400b3e3	    0x488905000000	            mov qword [0x0400b3ea], rax 	      6478	eval.c	FUNCTION_109	ELSE_1	IF_2
0x400b3ea	      0xbf00000000	                              mov edi, 0	      6473	eval.c	FUNCTION_109	CALL_1
0x400b3ef	      0xe800000000	                          call 0x400b3f4	      6473	eval.c	FUNCTION_109	CALL_1
0x400b3f4	          0x4d85e4	                           test r12, r12	      6475	eval.c	FUNCTION_109	IF_1
0x400b3f7	    0xc70500000000	               mov dword [0x0400b401], 2	      6474	eval.c	FUNCTION_109
0x400b401	     0xf8479010000	                            je 0x400b580	      6475	eval.c	FUNCTION_109	IF_1
0x400b407	          0x4c89e7	                            mov rdi, r12	      6478	eval.c	FUNCTION_109	ELSE_1	IF_2
0x400b40a	      0xe800000000	                          call 0x400b40f	      6478	eval.c	FUNCTION_109	ELSE_1	IF_2
0x400b40f	    0x488905000000	            mov qword [0x0400b416], rax 	      6478	eval.c	FUNCTION_109	ELSE_1	IF_2
0x400b416	      0xbf00000000	                              mov edi, 0	      6473	eval.c	FUNCTION_109	CALL_1
0x400b41b	      0xe800000000	                          call 0x400b420	      6473	eval.c	FUNCTION_109	CALL_1
0x400b420	          0x4885ed	                           test rbp, rbp	      6475	eval.c	FUNCTION_109	IF_1
0x400b423	    0xc70500000000	               mov dword [0x0400b42d], 2	      6474	eval.c	FUNCTION_109
0x400b42d	     0xf845d010000	                            je 0x400b590	      6475	eval.c	FUNCTION_109	IF_1
0x400b433	          0x4889ef	                            mov rdi, rbp	      6478	eval.c	FUNCTION_109	ELSE_1	IF_2
0x400b436	      0xe800000000	                          call 0x400b43b	      6478	eval.c	FUNCTION_109	ELSE_1	IF_2
0x400b43b	    0x488905000000	            mov qword [0x0400b442], rax 	      6478	eval.c	FUNCTION_109	ELSE_1	IF_2
0x400b442	      0xbf00000000	                              mov edi, 0	      6473	eval.c	FUNCTION_109	CALL_1
0x400b447	      0xe800000000	                          call 0x400b44c	      6473	eval.c	FUNCTION_109	CALL_1
0x400b44c	          0x4885db	                           test rbx, rbx	      6475	eval.c	FUNCTION_109	IF_1
0x400b44f	    0xc70500000000	               mov dword [0x0400b459], 2	      6474	eval.c	FUNCTION_109
0x400b459	     0xf8441010000	                            je 0x400b5a0	      6475	eval.c	FUNCTION_109	IF_1
0x400b45f	          0x4889df	                            mov rdi, rbx	      6478	eval.c	FUNCTION_109	ELSE_1	IF_2
0x400b462	      0xe800000000	                          call 0x400b467	      6478	eval.c	FUNCTION_109	ELSE_1	IF_2
0x400b467	    0x488905000000	            mov qword [0x0400b46e], rax 	      6478	eval.c	FUNCTION_109	ELSE_1	IF_2
0x400b46e	    0x488b3d000000	            mov rdi, qword [0x0400b475] 	       678	eval.c	FUNCTION_13	IF_2	CALL_1
0x400b475	      0x488d742410	                   lea rsi, [rsp + 0x10]	       678	eval.c	FUNCTION_13	IF_2	CALL_1
0x400b47a	            0x31d2	                            xor edx, edx	       678	eval.c	FUNCTION_13	IF_2	CALL_1
0x400b47c	      0xb901000000	                              mov ecx, 1	       678	eval.c	FUNCTION_13	IF_2	CALL_1
0x400b481	      0xe800000000	                          call 0x400b486	       678	eval.c	FUNCTION_13	IF_2	CALL_1
0x400b486	            0x85c0	                           test eax, eax	       678	eval.c	FUNCTION_13	IF_2	CALL_1
0x400b488	            0x7429	                            je 0x400b4b3	       678	eval.c	FUNCTION_13	IF_2	CALL_1
0x400b48a	      0x488d74240c	                    lea rsi, [rsp + 0xc]	       685	eval.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x400b48f	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       685	eval.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x400b494	    0xc744240c0000	                mov dword [rsp + 0xc], 0	       682	eval.c	FUNCTION_13	ELSE_1
0x400b49c	      0xe800000000	                          call 0x400b4a1	       685	eval.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x400b4a1	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       686	eval.c	FUNCTION_13	ELSE_1	IF_3	CALL_3
0x400b4a6	          0x4889c3	                            mov rbx, rax	       685	eval.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x400b4a9	      0xe800000000	                          call 0x400b4ae	       686	eval.c	FUNCTION_13	ELSE_1	IF_3	CALL_3
0x400b4ae	          0x4885db	                           test rbx, rbx	       590	eval.c	FUNCTION_9	IF_1	CALL_5
0x400b4b1	            0x7408	                            je 0x400b4bb	       590	eval.c	FUNCTION_9	IF_1	CALL_5
0x400b4b3	    0xc744240c0100	                mov dword [rsp + 0xc], 1	       591	eval.c	FUNCTION_9	IF_1
0x400b4bb	      0xbf00000000	                              mov edi, 0	      6473	eval.c	FUNCTION_109	CALL_1
0x400b4c0	      0xe800000000	                          call 0x400b4c5	      6473	eval.c	FUNCTION_109	CALL_1
0x400b4c5	      0xbf00000000	                              mov edi, 0	      6473	eval.c	FUNCTION_109	CALL_1
0x400b4ca	    0xc70500000000	               mov dword [0x0400b4d4], 2	      6474	eval.c	FUNCTION_109
0x400b4d4	    0x48c705000000	               mov qword [0x0400b4df], 0	      6476	eval.c	FUNCTION_109	IF_1
0x400b4df	      0xe800000000	                          call 0x400b4e4	      6473	eval.c	FUNCTION_109	CALL_1
0x400b4e4	      0xbf00000000	                              mov edi, 0	      6473	eval.c	FUNCTION_109	CALL_1
0x400b4e9	    0xc70500000000	               mov dword [0x0400b4f3], 2	      6474	eval.c	FUNCTION_109
0x400b4f3	    0x48c705000000	               mov qword [0x0400b4fe], 0	      6476	eval.c	FUNCTION_109	IF_1
0x400b4fe	      0xe800000000	                          call 0x400b503	      6473	eval.c	FUNCTION_109	CALL_1
0x400b503	      0xbf00000000	                              mov edi, 0	      6473	eval.c	FUNCTION_109	CALL_1
0x400b508	    0xc70500000000	               mov dword [0x0400b512], 2	      6474	eval.c	FUNCTION_109
0x400b512	    0x48c705000000	               mov qword [0x0400b51d], 0	      6476	eval.c	FUNCTION_109	IF_1
0x400b51d	      0xe800000000	                          call 0x400b522	      6473	eval.c	FUNCTION_109	CALL_1
0x400b522	        0x8b54240c	              mov edx, dword [rsp + 0xc]	       598	eval.c	FUNCTION_9	IF_2
0x400b526	            0x31c0	                            xor eax, eax	       598	eval.c	FUNCTION_9	IF_2
0x400b528	    0xc70500000000	               mov dword [0x0400b532], 2	      6474	eval.c	FUNCTION_109
0x400b532	    0x48c705000000	               mov qword [0x0400b53d], 0	      6476	eval.c	FUNCTION_109	IF_1
0x400b53d	            0x85d2	                           test edx, edx	       598	eval.c	FUNCTION_9	IF_2
0x400b53f	           0xf94c0	                                 sete al	       598	eval.c	FUNCTION_9	IF_2
0x400b542	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	       600	eval.c	FUNCTION_9
0x400b547	    0x644833142528	                xor rdx, qword fs:[0x28]	       600	eval.c	FUNCTION_9
0x400b550	     0xf855a000000	                           jne 0x400b5b0	       600	eval.c	FUNCTION_9
0x400b556	        0x4883c438	                           add rsp, 0x38	       600	eval.c	FUNCTION_9
0x400b55a	              0x5b	                                 pop rbx	       600	eval.c	FUNCTION_9
0x400b55b	              0x5d	                                 pop rbp	       600	eval.c	FUNCTION_9
0x400b55c	            0x415c	                                 pop r12	       600	eval.c	FUNCTION_9
0x400b55e	            0x415d	                                 pop r13	       600	eval.c	FUNCTION_9
0x400b560	              0xc3	                                     ret	       600	eval.c	FUNCTION_9
0x400b561	     0xf1f80000000	                         nop dword [rax]	       600	eval.c	FUNCTION_9
0x400b568	    0x48c705000000	               mov qword [0x0400b573], 0	      6476	eval.c	FUNCTION_109	IF_1
0x400b573	      0xe972feffff	                           jmp 0x400b3ea	      6476	eval.c	FUNCTION_109	IF_1
0x400b578	     0xf1f84000000	                   nop dword [rax + rax]	      6476	eval.c	FUNCTION_109	IF_1
0x400b580	    0x48c705000000	               mov qword [0x0400b58b], 0	      6476	eval.c	FUNCTION_109	IF_1
0x400b58b	      0xe986feffff	                           jmp 0x400b416	      6476	eval.c	FUNCTION_109	IF_1
0x400b590	    0x48c705000000	               mov qword [0x0400b59b], 0	      6476	eval.c	FUNCTION_109	IF_1
0x400b59b	      0xe9a2feffff	                           jmp 0x400b442	      6476	eval.c	FUNCTION_109	IF_1
0x400b5a0	    0x48c705000000	               mov qword [0x0400b5ab], 0	      6476	eval.c	FUNCTION_109	IF_1
0x400b5ab	      0xe9befeffff	                           jmp 0x400b46e	      6476	eval.c	FUNCTION_109	IF_1
0x400b5b0	      0xe800000000	                          call 0x400b5b5	       600	eval.c	FUNCTION_9
skip_expr	functions,0:SWITCH,0:IF,0:DO,0:ELSE,0:WHILE,0:CALL,2:FOR,0	20
0x400aa40	              0x53	                                push rbx	       794	eval.c	FUNCTION_17
0x400aa41	          0x4889fb	                            mov rbx, rdi	       794	eval.c	FUNCTION_17
0x400aa44	        0x4883ec20	                           sub rsp, 0x20	       794	eval.c	FUNCTION_17
0x400aa48	          0x488b3f	                    mov rdi, qword [rdi]	       797	eval.c	FUNCTION_17	CALL_1
0x400aa4b	    0x64488b042528	                mov rax, qword fs:[0x28]	       794	eval.c	FUNCTION_17
0x400aa54	      0x4889442418	             mov qword [rsp + 0x18], rax	       794	eval.c	FUNCTION_17
0x400aa59	            0x31c0	                            xor eax, eax	       794	eval.c	FUNCTION_17
0x400aa5b	      0xe800000000	                          call 0x400aa60	       797	eval.c	FUNCTION_17	CALL_1
0x400aa60	            0x31d2	                            xor edx, edx	       798	eval.c	FUNCTION_17	CALL_2
0x400aa62	          0x488903	                    mov qword [rbx], rax	       797	eval.c	FUNCTION_17	CALL_1
0x400aa65	          0x4889e6	                            mov rsi, rsp	       798	eval.c	FUNCTION_17	CALL_2
0x400aa68	          0x4889df	                            mov rdi, rbx	       798	eval.c	FUNCTION_17	CALL_2
0x400aa6b	      0xe800000000	                          call 0x400aa70	       798	eval.c	FUNCTION_17	CALL_2
0x400aa70	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       799	eval.c	FUNCTION_17
0x400aa75	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       799	eval.c	FUNCTION_17
0x400aa7e	            0x7506	                           jne 0x400aa86	       799	eval.c	FUNCTION_17
0x400aa80	        0x4883c420	                           add rsp, 0x20	       799	eval.c	FUNCTION_17
0x400aa84	              0x5b	                                 pop rbx	       799	eval.c	FUNCTION_17
0x400aa85	              0xc3	                                     ret	       799	eval.c	FUNCTION_17
0x400aa86	      0xe800000000	                          call 0x400aa8b	       799	eval.c	FUNCTION_17
do_string_sub	functions,0:SWITCH,0:IF,8:DO,0:ELSE,1:WHILE,1:CALL,16:FOR,0	166
0x4012820	            0x4157	                                push r15	     10099	eval.c	FUNCTION_188
0x4012822	            0x4156	                                push r14	     10099	eval.c	FUNCTION_188
0x4012824	          0x4989ce	                            mov r14, rcx	     10099	eval.c	FUNCTION_188
0x4012827	            0x4155	                                push r13	     10099	eval.c	FUNCTION_188
0x4012829	            0x4154	                                push r12	     10099	eval.c	FUNCTION_188
0x401282b	          0x4989fc	                            mov r12, rdi	     10099	eval.c	FUNCTION_188
0x401282e	              0x55	                                push rbp	     10099	eval.c	FUNCTION_188
0x401282f	              0x53	                                push rbx	     10099	eval.c	FUNCTION_188
0x4012830	          0x4c89c5	                             mov rbp, r8	     10099	eval.c	FUNCTION_188
0x4012833	          0x4889f3	                            mov rbx, rsi	     10099	eval.c	FUNCTION_188
0x4012836	      0xbe01000000	                              mov esi, 1	     10115	eval.c	FUNCTION_188	CALL_1
0x401283b	    0x4881ec180100	                          sub rsp, 0x118	     10099	eval.c	FUNCTION_188
0x4012842	    0x64488b042528	                mov rax, qword fs:[0x28]	     10099	eval.c	FUNCTION_188
0x401284b	    0x488984240801	            mov qword [rsp + 0x108], rax	     10099	eval.c	FUNCTION_188
0x4012853	            0x31c0	                            xor eax, eax	     10099	eval.c	FUNCTION_188
0x4012855	    0x488b05000000	            mov rax, qword [0x0401285c] 	     10112	eval.c	FUNCTION_188
0x401285c	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	     10115	eval.c	FUNCTION_188	CALL_1
0x4012861	      0x4889542408	                mov qword [rsp + 8], rdx	     10099	eval.c	FUNCTION_188
0x4012866	      0xbac8000000	                           mov edx, 0xc8	     10115	eval.c	FUNCTION_188	CALL_1
0x401286b	      0x4889442428	             mov qword [rsp + 0x28], rax	     10112	eval.c	FUNCTION_188
0x4012870	    0x488b05000000	            mov rax, qword [0x04012877] 	     10113	eval.c	FUNCTION_188
0x4012877	    0x488905000000	            mov qword [0x0401287e], rax 	     10113	eval.c	FUNCTION_188
0x401287e	      0xe800000000	                          call 0x4012883	     10115	eval.c	FUNCTION_188	CALL_1
0x4012883	         0xfb64500	                   movzx eax, byte [rbp]	     10117	eval.c	FUNCTION_188
0x4012887	      0xbe03000000	                              mov esi, 3	     10120	eval.c	FUNCTION_188	CALL_2
0x401288c	          0x4889df	                            mov rdi, rbx	     10120	eval.c	FUNCTION_188	CALL_2
0x401288f	        0x8844241f	               mov byte [rsp + 0x1f], al	     10117	eval.c	FUNCTION_188
0x4012893	    0x8b0500000000	            mov eax, dword [0x04012899] 	     10119	eval.c	FUNCTION_188
0x4012899	    0x898424f80000	             mov dword [rsp + 0xf8], eax	     10119	eval.c	FUNCTION_188
0x40128a0	      0xe800000000	                          call 0x40128a5	     10120	eval.c	FUNCTION_188	CALL_2
0x40128a5	          0x4885c0	                           test rax, rax	     10121	eval.c	FUNCTION_188	IF_1
0x40128a8	      0x4889442450	             mov qword [rsp + 0x50], rax	     10120	eval.c	FUNCTION_188	CALL_2
0x40128ad	     0xf845b010000	                            je 0x4012a0e	     10121	eval.c	FUNCTION_188	IF_1
0x40128b3	          0x4c89e7	                            mov rdi, r12	     10124	eval.c	FUNCTION_188	IF_1	CALL_3
0x40128b6	          0x4c89e3	                            mov rbx, r12	     10125	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_4
0x40128b9	      0xe800000000	                          call 0x40128be	     10124	eval.c	FUNCTION_188	IF_1	CALL_3
0x40128be	          0x4c01e0	                            add rax, r12	     10124	eval.c	FUNCTION_188	IF_1	CALL_3
0x40128c1	    0x48c744242000	               mov qword [rsp + 0x20], 0	     10109	eval.c	FUNCTION_188
0x40128ca	      0x4889442410	             mov qword [rsp + 0x10], rax	     10124	eval.c	FUNCTION_188	IF_1	CALL_3
0x40128cf	      0xe9c8000000	                           jmp 0x401299c	     10125	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_4
0x40128d4	         0xf1f4000	                         nop dword [rax]	     10125	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_4
0x40128d8	        0x4883ec08	                              sub rsp, 8	     10150	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_7
0x40128dc	          0x4531c0	                            xor r8d, r8d	     10150	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_7
0x40128df	          0x4889d9	                            mov rcx, rbx	     10150	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_7
0x40128e2	            0x6a00	                                  push 0	     10150	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_7
0x40128e4	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	     10150	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_7
0x40128e9	    0x41b901000000	                              mov r9d, 1	     10150	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_7
0x40128ef	          0x4c89f2	                            mov rdx, r14	     10150	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_7
0x40128f2	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	     10150	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_7
0x40128f7	      0xe800000000	                          call 0x40128fc	     10150	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_7
0x40128fc	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	     10151	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_4	CALL_8
0x4012901	            0x89c5	                            mov ebp, eax	     10150	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_7
0x4012903	    0x488b8424b800	            mov rax, qword [rsp + 0xb8] 	     10151	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_4	CALL_8
0x401290b	      0x482b442468	             sub rax, qword [rsp + 0x68]	     10151	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_4	CALL_8
0x4012910	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	     10151	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_4	CALL_8
0x4012915	          0x4829de	                            sub rsi, rbx	     10151	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_4	CALL_8
0x4012918	            0x29c6	                            sub esi, eax	     10151	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_4	CALL_8
0x401291a	             0x1ee	                            add esi, ebp	     10151	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_4	CALL_8
0x401291c	      0xe800000000	                          call 0x4012921	     10151	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_4	CALL_8
0x4012921	            0x85c0	                           test eax, eax	     10151	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_4	CALL_8
0x4012923	              0x59	                                 pop rcx	     10151	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_4	CALL_8
0x4012924	              0x5e	                                 pop rsi	     10151	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_4	CALL_8
0x4012925	     0xf84b5000000	                            je 0x40129e0	     10151	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_4	CALL_8
0x401292b	      0x4c8b7c2458	            mov r15, qword [rsp + 0x58] 	     10159	eval.c	FUNCTION_188	IF_1	WHILE_1
0x4012930	      0x48637c2430	         movsxd rdi, dword [rsp + 0x30] 	        59	string3.h	FUNCTION_192	CALL_3
0x4012935	          0x4889de	                            mov rsi, rbx	        59	string3.h	FUNCTION_192	CALL_3
0x4012938	      0x48037c2440	             add rdi, qword [rsp + 0x40]	        59	string3.h	FUNCTION_192	CALL_3
0x401293d	          0x4929df	                            sub r15, rbx	     10159	eval.c	FUNCTION_188	IF_1	WHILE_1
0x4012940	          0x4d63ef	                        movsxd r13, r15d	     10160	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_10
0x4012943	          0x4c89ea	                            mov rdx, r13	        59	string3.h	FUNCTION_192	CALL_3
0x4012946	      0xe800000000	                          call 0x401294b	        59	string3.h	FUNCTION_192	CALL_3
0x401294b	      0x4863442430	         movsxd rax, dword [rsp + 0x30] 	     10162	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_11
0x4012950	        0x4883ec08	                              sub rsp, 8	     10162	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_11
0x4012954	          0x4c89f2	                            mov rdx, r14	     10162	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_11
0x4012957	    0x41b901000000	                              mov r9d, 1	     10162	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_11
0x401295d	    0x41b801000000	                              mov r8d, 1	     10162	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_11
0x4012963	        0x4a8d0c28	                    lea rcx, [rax + r13]	     10162	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_11
0x4012967	      0x48034c2448	             add rcx, qword [rsp + 0x48]	     10162	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_11
0x401296c	            0x6a00	                                  push 0	     10162	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_11
0x401296e	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	     10162	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_11
0x4012973	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	     10162	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_11
0x4012978	      0xe800000000	                          call 0x401297d	     10162	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_11
0x401297d	    0x488b9c24b800	            mov rbx, qword [rsp + 0xb8] 	     10165	eval.c	FUNCTION_188	IF_1	WHILE_1
0x4012985	      0x428d443dff	                lea eax, [rbp + r15 - 1]	     10164	eval.c	FUNCTION_188	IF_1	WHILE_1
0x401298a	         0x1442440	             add dword [rsp + 0x40], eax	     10164	eval.c	FUNCTION_188	IF_1	WHILE_1
0x401298e	              0x58	                                 pop rax	     10168	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_6
0x401298f	              0x5a	                                 pop rdx	     10168	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_6
0x4012990	          0x803b00	                       cmp byte [rbx], 0	     10168	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_6
0x4012993	            0x7455	                            je 0x40129ea	     10168	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_6
0x4012995	      0x807c241f67	            cmp byte [rsp + 0x1f], 0x67 	     10168	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_6
0x401299a	            0x754e	                           jne 0x40129ea	     10168	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_6
0x401299c	          0x4889da	                            mov rdx, rbx	     10125	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_4
0x401299f	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	     10125	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_4
0x40129a4	          0x4c89e6	                            mov rsi, r12	     10125	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_4
0x40129a7	          0x4c29e2	                            sub rdx, r12	     10125	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_4
0x40129aa	      0xe800000000	                          call 0x40129af	     10125	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_4
0x40129af	            0x85c0	                           test eax, eax	     10125	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_4
0x40129b1	            0x7437	                            je 0x40129ea	     10125	eval.c	FUNCTION_188	IF_1	WHILE_1	CALL_4
0x40129b3	      0x488b442458	            mov rax, qword [rsp + 0x58] 	     10128	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2
0x40129b8	    0x483b8424a800	            cmp rax, qword [rsp + 0xa8] 	     10128	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2
0x40129c0	     0xf8512ffffff	                           jne 0x40128d8	     10128	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2
0x40129c6	      0x4839442420	            cmp qword [rsp + 0x20], rax 	     10130	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2	IF_3
0x40129cb	     0xf849f000000	                            je 0x4012a70	     10130	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2	IF_3
0x40129d1	      0x4889442420	             mov qword [rsp + 0x20], rax	     10130	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2	IF_3
0x40129d6	      0xe9fdfeffff	                           jmp 0x40128d8	     10130	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2	IF_3
0x40129db	       0xf1f440000	                   nop dword [rax + rax]	     10130	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2	IF_3
0x40129e0	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	     10154	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_4	CALL_9
0x40129e5	      0xe800000000	                          call 0x40129ea	     10154	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_4	CALL_9
0x40129ea	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	     10172	eval.c	FUNCTION_188	IF_1	IF_7
0x40129ef	          0x4885ff	                           test rdi, rdi	     10172	eval.c	FUNCTION_188	IF_1	IF_7
0x40129f2	            0x7410	                            je 0x4012a04	     10172	eval.c	FUNCTION_188	IF_1	IF_7
0x40129f4	      0x4863442430	         movsxd rax, dword [rsp + 0x30] 	       110	string3.h	FUNCTION_197	CALL_3
0x40129f9	          0x4889de	                            mov rsi, rbx	       110	string3.h	FUNCTION_197	CALL_3
0x40129fc	          0x4801c7	                            add rdi, rax	       110	string3.h	FUNCTION_197	CALL_3
0x40129ff	      0xe800000000	                          call 0x4012a04	       110	string3.h	FUNCTION_197	CALL_3
0x4012a04	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	     10175	eval.c	FUNCTION_188	IF_1	CALL_13
0x4012a09	      0xe800000000	                          call 0x4012a0e	     10175	eval.c	FUNCTION_188	IF_1	CALL_13
0x4012a0e	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	     10178	eval.c	FUNCTION_188	CALL_14
0x4012a13	          0x4885ff	                           test rdi, rdi	     10178	eval.c	FUNCTION_188	CALL_14
0x4012a16	        0x490f44fc	                          cmove rdi, r12	     10178	eval.c	FUNCTION_188	CALL_14
0x4012a1a	      0xe800000000	                          call 0x4012a1f	     10178	eval.c	FUNCTION_188	CALL_14
0x4012a1f	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	     10179	eval.c	FUNCTION_188	CALL_15
0x4012a24	          0x4889c3	                            mov rbx, rax	     10178	eval.c	FUNCTION_188	CALL_14
0x4012a27	      0xe800000000	                          call 0x4012a2c	     10179	eval.c	FUNCTION_188	CALL_15
0x4012a2c	    0x488b05000000	            mov rax, qword [0x04012a33] 	     10180	eval.c	FUNCTION_188	IF_8
0x4012a33	    0x483905000000	            cmp qword [0x04012a3a], rax 	     10180	eval.c	FUNCTION_188	IF_8
0x4012a3a	            0x7474	                            je 0x4012ab0	     10180	eval.c	FUNCTION_188	IF_8
0x4012a3c	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	     10184	eval.c	FUNCTION_188	CALL_16
0x4012a41	      0xe800000000	                          call 0x4012a46	     10184	eval.c	FUNCTION_188	CALL_16
0x4012a46	    0x488b8c240801	           mov rcx, qword [rsp + 0x108] 	     10187	eval.c	FUNCTION_188
0x4012a4e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	     10187	eval.c	FUNCTION_188
0x4012a57	          0x4889d8	                            mov rax, rbx	     10187	eval.c	FUNCTION_188
0x4012a5a	            0x7575	                           jne 0x4012ad1	     10187	eval.c	FUNCTION_188
0x4012a5c	    0x4881c4180100	                          add rsp, 0x118	     10187	eval.c	FUNCTION_188
0x4012a63	              0x5b	                                 pop rbx	     10187	eval.c	FUNCTION_188
0x4012a64	              0x5d	                                 pop rbp	     10187	eval.c	FUNCTION_188
0x4012a65	            0x415c	                                 pop r12	     10187	eval.c	FUNCTION_188
0x4012a67	            0x415d	                                 pop r13	     10187	eval.c	FUNCTION_188
0x4012a69	            0x415e	                                 pop r14	     10187	eval.c	FUNCTION_188
0x4012a6b	            0x415f	                                 pop r15	     10187	eval.c	FUNCTION_188
0x4012a6d	              0xc3	                                     ret	     10187	eval.c	FUNCTION_188
0x4012a6e	            0x6690	                                     nop	     10187	eval.c	FUNCTION_188
0x4012a70	    0x8b3d00000000	            mov edi, dword [0x04012a76] 	     10133	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2	IF_3	CALL_5
0x4012a76	      0xbd01000000	                              mov ebp, 1	     10133	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2	IF_3	CALL_5
0x4012a7b	    0x41bd01000000	                             mov r13d, 1	     10133	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2	IF_3	CALL_5
0x4012a81	            0x85ff	                           test edi, edi	     10133	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2	IF_3	CALL_5
0x4012a83	            0x753b	                           jne 0x4012ac0	     10133	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2	IF_3	CALL_5
0x4012a85	      0x48637c2430	         movsxd rdi, dword [rsp + 0x30] 	        59	string3.h	FUNCTION_192	CALL_3
0x4012a8a	          0x4889de	                            mov rsi, rbx	        59	string3.h	FUNCTION_192	CALL_3
0x4012a8d	          0x4889ea	                            mov rdx, rbp	        59	string3.h	FUNCTION_192	CALL_3
0x4012a90	      0x48037c2440	             add rdi, qword [rsp + 0x40]	        59	string3.h	FUNCTION_192	CALL_3
0x4012a95	          0x4801eb	                            add rbx, rbp	     10137	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2	IF_3
0x4012a98	      0xe800000000	                          call 0x4012a9d	        59	string3.h	FUNCTION_192	CALL_3
0x4012a9d	      0x44016c2430	            add dword [rsp + 0x30], r13d	     10136	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2	IF_3
0x4012aa2	      0xe9f5feffff	                           jmp 0x401299c	     10138	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2	IF_3
0x4012aa7	    0x660f1f840000	                    nop word [rax + rax]	     10138	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2	IF_3
0x4012ab0	      0x488b442428	            mov rax, qword [rsp + 0x28] 	     10181	eval.c	FUNCTION_188	IF_8
0x4012ab5	    0x488905000000	            mov qword [0x04012abc], rax 	     10181	eval.c	FUNCTION_188	IF_8
0x4012abc	            0xeb88	                           jmp 0x4012a46	     10181	eval.c	FUNCTION_188	IF_8
0x4012abe	            0x6690	                                     nop	     10181	eval.c	FUNCTION_188	IF_8
0x4012ac0	          0x4889df	                            mov rdi, rbx	     10133	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2	IF_3	CALL_5
0x4012ac3	    0xff1500000000	                 call qword [0x04012ac9]	     10133	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2	IF_3	CALL_5
0x4012ac9	          0x4863e8	                         movsxd rbp, eax	     10133	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2	IF_3	CALL_5
0x4012acc	          0x4989ed	                            mov r13, rbp	     10133	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2	IF_3	CALL_5
0x4012acf	            0xebb4	                           jmp 0x4012a85	     10133	eval.c	FUNCTION_188	IF_1	WHILE_1	IF_2	IF_3	CALL_5
0x4012ad1	      0xe800000000	                          call 0x4012ad6	     10187	eval.c	FUNCTION_188
list_hashtable_vars	functions,0:SWITCH,0:IF,2:DO,0:ELSE,0:WHILE,0:CALL,3:FOR,1	133
0x4004a80	            0x4157	                                push r15	      1483	eval.c	FUNCTION_35
0x4004a82	            0x4156	                                push r14	      1483	eval.c	FUNCTION_35
0x4004a84	            0x4155	                                push r13	      1483	eval.c	FUNCTION_35
0x4004a86	            0x4154	                                push r12	      1483	eval.c	FUNCTION_35
0x4004a88	              0x55	                                push rbp	      1483	eval.c	FUNCTION_35
0x4004a89	              0x53	                                push rbx	      1483	eval.c	FUNCTION_35
0x4004a8a	        0x4883ec78	                           sub rsp, 0x78	      1483	eval.c	FUNCTION_35
0x4004a8e	        0x488b6f20	            mov rbp, qword [rdi + 0x20] 	      1489	eval.c	FUNCTION_35	FOR_1
0x4004a92	    0x64488b042528	                mov rax, qword fs:[0x28]	      1483	eval.c	FUNCTION_35
0x4004a9b	      0x4889442468	             mov qword [rsp + 0x68], rax	      1483	eval.c	FUNCTION_35
0x4004aa0	            0x31c0	                            xor eax, eax	      1483	eval.c	FUNCTION_35
0x4004aa2	        0x488b4708	                mov rax, qword [rdi + 8]	      1488	eval.c	FUNCTION_35
0x4004aa6	      0x4889742408	                mov qword [rsp + 8], rsi	      1483	eval.c	FUNCTION_35
0x4004aab	        0x89542404	                mov dword [rsp + 4], edx	      1483	eval.c	FUNCTION_35
0x4004aaf	            0x85c0	                           test eax, eax	      1489	eval.c	FUNCTION_35	FOR_1
0x4004ab1	     0xf8e26010000	                           jle 0x4004bdd	      1489	eval.c	FUNCTION_35	FOR_1
0x4004ab7	          0x4989ce	                            mov r14, rcx	      1489	eval.c	FUNCTION_35	FOR_1
0x4004aba	          0x4189c5	                           mov r13d, eax	      1489	eval.c	FUNCTION_35	FOR_1
0x4004abd	           0xf1f00	                         nop dword [rax]	      1489	eval.c	FUNCTION_35	FOR_1
0x4004ac0	    0x8b0500000000	            mov eax, dword [0x04004ac6] 	      1489	eval.c	FUNCTION_35	FOR_1
0x4004ac6	            0x85c0	                           test eax, eax	      1489	eval.c	FUNCTION_35	FOR_1
0x4004ac8	     0xf850f010000	                           jne 0x4004bdd	      1489	eval.c	FUNCTION_35	FOR_1
0x4004ace	        0x4c8b7d08	                mov r15, qword [rbp + 8]	      1491	eval.c	FUNCTION_35	FOR_1	IF_1	CALL_1
0x4004ad2	    0x4981ff000000	                              cmp r15, 0	      1491	eval.c	FUNCTION_35	FOR_1	IF_1	CALL_1
0x4004ad9	     0xf8421010000	                            je 0x4004c00	      1491	eval.c	FUNCTION_35	FOR_1	IF_1	CALL_1
0x4004adf	          0x4d85ff	                           test r15, r15	      1491	eval.c	FUNCTION_35	FOR_1	IF_1	CALL_1
0x4004ae2	     0xf8418010000	                            je 0x4004c00	      1491	eval.c	FUNCTION_35	FOR_1	IF_1	CALL_1
0x4004ae8	        0x8b742404	                mov esi, dword [rsp + 4]	      1495	eval.c	FUNCTION_35	FOR_1	IF_1	IF_2
0x4004aec	        0x4183ed01	                             sub r13d, 1	      1493	eval.c	FUNCTION_35	FOR_1	IF_1
0x4004af0	            0x85f6	                           test esi, esi	      1495	eval.c	FUNCTION_35	FOR_1	IF_1	IF_2
0x4004af2	            0x750b	                           jne 0x4004aff	      1495	eval.c	FUNCTION_35	FOR_1	IF_1	IF_2
0x4004af4	      0x41837fef02	               cmp dword [r15 - 0x11], 2	      1495	eval.c	FUNCTION_35	FOR_1	IF_1	IF_2
0x4004af9	     0xf8411010000	                            je 0x4004c10	      1495	eval.c	FUNCTION_35	FOR_1	IF_1	IF_2
0x4004aff	        0x4883ec08	                              sub rsp, 8	      5742	eval.c	FUNCTION_88	CALL_1
0x4004b03	    0x8b0500000000	            mov eax, dword [0x04004b09] 	      5053	eval.c	FUNCTION_80
0x4004b09	        0x498d7fef	                   lea rdi, [r15 - 0x11]	      7464	eval.c	FUNCTION_141	CALL_2
0x4004b0d	            0x6a00	                                  push 0	      5742	eval.c	FUNCTION_88	CALL_1
0x4004b0f	          0x4531c9	                            xor r9d, r9d	      5742	eval.c	FUNCTION_88	CALL_1
0x4004b12	    0x41b801000000	                              mov r8d, 1	      5742	eval.c	FUNCTION_88	CALL_1
0x4004b18	      0x488d742428	                   lea rsi, [rsp + 0x28]	      5742	eval.c	FUNCTION_88	CALL_1
0x4004b1d	          0x8d4802	                      lea ecx, [rax + 2]	      5053	eval.c	FUNCTION_80
0x4004b20	      0x488d542430	                   lea rdx, [rsp + 0x30]	      5742	eval.c	FUNCTION_88	CALL_1
0x4004b25	    0x890d00000000	            mov dword [0x04004b2b], ecx 	      5053	eval.c	FUNCTION_80
0x4004b2b	      0xe800000000	                          call 0x4004b30	      5742	eval.c	FUNCTION_88	CALL_1
0x4004b30	              0x5a	                                 pop rdx	      7465	eval.c	FUNCTION_141	CALL_3
0x4004b31	              0x59	                                 pop rcx	      7465	eval.c	FUNCTION_141	CALL_3
0x4004b32	          0x4885c0	                           test rax, rax	      7465	eval.c	FUNCTION_141	CALL_3
0x4004b35	          0x4889c3	                            mov rbx, rax	      5742	eval.c	FUNCTION_88	CALL_1
0x4004b38	      0xb800000000	                              mov eax, 0	      7465	eval.c	FUNCTION_141	CALL_3
0x4004b3d	        0x480f44d8	                          cmove rbx, rax	      7465	eval.c	FUNCTION_141	CALL_3
0x4004b41	        0x458b67ef	            mov r12d, dword [r15 - 0x11]	      7465	eval.c	FUNCTION_141	CALL_3
0x4004b45	      0xe800000000	                          call 0x4004b4a	      7479	eval.c	FUNCTION_142	CALL_1
0x4004b4a	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      7480	eval.c	FUNCTION_142	CALL_2
0x4004b4f	      0xe800000000	                          call 0x4004b54	      7480	eval.c	FUNCTION_142	CALL_2
0x4004b54	          0x4d85ff	                           test r15, r15	      7481	eval.c	FUNCTION_142	IF_1
0x4004b57	            0x7408	                            je 0x4004b61	      7481	eval.c	FUNCTION_142	IF_1
0x4004b59	          0x4c89ff	                            mov rdi, r15	      7482	eval.c	FUNCTION_142	CALL_3
0x4004b5c	      0xe800000000	                          call 0x4004b61	      7482	eval.c	FUNCTION_142	CALL_3
0x4004b61	      0xbf20000000	                           mov edi, 0x20	      7483	eval.c	FUNCTION_142	CALL_4
0x4004b66	      0xe800000000	                          call 0x4004b6b	      7483	eval.c	FUNCTION_142	CALL_4
0x4004b6b	      0xbf16000000	                           mov edi, 0x16	      7484	eval.c	FUNCTION_142	CALL_5
0x4004b70	      0xe800000000	                          call 0x4004b75	      7484	eval.c	FUNCTION_142	CALL_5
0x4004b75	        0x4183fc01	                             cmp r12d, 1	      7485	eval.c	FUNCTION_142	IF_2
0x4004b79	     0xf84c1000000	                            je 0x4004c40	      7485	eval.c	FUNCTION_142	IF_2
0x4004b7f	      0x418d4424fd	                      lea eax, [r12 - 3]	      7487	eval.c	FUNCTION_142	ELSE_1	IF_3
0x4004b84	          0x83f801	                              cmp eax, 1	      7487	eval.c	FUNCTION_142	ELSE_1	IF_3
0x4004b87	     0xf86d3000000	                           jbe 0x4004c60	      7487	eval.c	FUNCTION_142	ELSE_1	IF_3
0x4004b8d	        0x4183fc05	                             cmp r12d, 5	      7489	eval.c	FUNCTION_142	ELSE_2	IF_4
0x4004b91	     0xf84f1000000	                            je 0x4004c88	      7489	eval.c	FUNCTION_142	ELSE_2	IF_4
0x4004b97	        0x4183fc06	                             cmp r12d, 6	      7495	eval.c	FUNCTION_142	ELSE_3	IF_6
0x4004b9b	     0xf847f000000	                            je 0x4004c20	      7495	eval.c	FUNCTION_142	ELSE_3	IF_6
0x4004ba1	      0xbf20000000	                           mov edi, 0x20	      7502	eval.c	FUNCTION_142	CALL_10
0x4004ba6	      0xe800000000	                          call 0x4004bab	      7502	eval.c	FUNCTION_142	CALL_10
0x4004bab	          0x4889df	                            mov rdi, rbx	      7504	eval.c	FUNCTION_142	CALL_11
0x4004bae	      0xe800000000	                          call 0x4004bb3	      7504	eval.c	FUNCTION_142	CALL_11
0x4004bb3	          0x418b06	                    mov eax, dword [r14]	      7508	eval.c	FUNCTION_142	IF_9
0x4004bb6	            0x85c0	                           test eax, eax	      7508	eval.c	FUNCTION_142	IF_9
0x4004bb8	            0x740c	                            je 0x4004bc6	      7508	eval.c	FUNCTION_142	IF_9
0x4004bba	      0xe800000000	                          call 0x4004bbf	      7510	eval.c	FUNCTION_142	IF_9	CALL_13
0x4004bbf	    0x41c706000000	                      mov dword [r14], 0	      7511	eval.c	FUNCTION_142	IF_9
0x4004bc6	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      7467	eval.c	FUNCTION_141	CALL_4
0x4004bcb	      0xe800000000	                          call 0x4004bd0	      7467	eval.c	FUNCTION_141	CALL_4
0x4004bd0	        0x4883c510	                           add rbp, 0x10	      1489	eval.c	FUNCTION_35	FOR_1
0x4004bd4	          0x4585ed	                         test r13d, r13d	      1489	eval.c	FUNCTION_35	FOR_1
0x4004bd7	     0xf85e3feffff	                           jne 0x4004ac0	      1489	eval.c	FUNCTION_35	FOR_1
0x4004bdd	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      1500	eval.c	FUNCTION_35
0x4004be2	    0x644833042528	                xor rax, qword fs:[0x28]	      1500	eval.c	FUNCTION_35
0x4004beb	     0xf85b1000000	                           jne 0x4004ca2	      1500	eval.c	FUNCTION_35
0x4004bf1	        0x4883c478	                           add rsp, 0x78	      1500	eval.c	FUNCTION_35
0x4004bf5	              0x5b	                                 pop rbx	      1500	eval.c	FUNCTION_35
0x4004bf6	              0x5d	                                 pop rbp	      1500	eval.c	FUNCTION_35
0x4004bf7	            0x415c	                                 pop r12	      1500	eval.c	FUNCTION_35
0x4004bf9	            0x415d	                                 pop r13	      1500	eval.c	FUNCTION_35
0x4004bfb	            0x415e	                                 pop r14	      1500	eval.c	FUNCTION_35
0x4004bfd	            0x415f	                                 pop r15	      1500	eval.c	FUNCTION_35
0x4004bff	              0xc3	                                     ret	      1500	eval.c	FUNCTION_35
0x4004c00	        0x4883c510	                           add rbp, 0x10	      1489	eval.c	FUNCTION_35	FOR_1
0x4004c04	      0xe9b7feffff	                           jmp 0x4004ac0	      1489	eval.c	FUNCTION_35	FOR_1
0x4004c09	     0xf1f80000000	                         nop dword [rax]	      1489	eval.c	FUNCTION_35	FOR_1
0x4004c10	      0x49837ff700	                  cmp qword [r15 - 9], 0	      1496	eval.c	FUNCTION_35	FOR_1	IF_1	IF_2
0x4004c15	     0xf85e4feffff	                           jne 0x4004aff	      1496	eval.c	FUNCTION_35	FOR_1	IF_1	IF_2
0x4004c1b	            0xebb3	                           jmp 0x4004bd0	      1496	eval.c	FUNCTION_35	FOR_1	IF_1	IF_2
0x4004c1d	           0xf1f00	                         nop dword [rax]	      1496	eval.c	FUNCTION_35	FOR_1	IF_1	IF_2
0x4004c20	      0xbf7b000000	                           mov edi, 0x7b	      7497	eval.c	FUNCTION_142	ELSE_3	IF_6	CALL_9
0x4004c25	      0xe800000000	                          call 0x4004c2a	      7497	eval.c	FUNCTION_142	ELSE_3	IF_6	CALL_9
0x4004c2a	            0x31c0	                            xor eax, eax	      7499	eval.c	FUNCTION_142	ELSE_3	IF_6	IF_7
0x4004c2c	          0x803b7b	                    cmp byte [rbx], 0x7b	      7499	eval.c	FUNCTION_142	ELSE_3	IF_6	IF_7
0x4004c2f	           0xf94c0	                                 sete al	      7499	eval.c	FUNCTION_142	ELSE_3	IF_6	IF_7
0x4004c32	          0x4801c3	                            add rbx, rax	      7499	eval.c	FUNCTION_142	ELSE_3	IF_6	IF_7
0x4004c35	      0xe971ffffff	                           jmp 0x4004bab	      7499	eval.c	FUNCTION_142	ELSE_3	IF_6	IF_7
0x4004c3a	    0x660f1f440000	                    nop word [rax + rax]	      7499	eval.c	FUNCTION_142	ELSE_3	IF_6	IF_7
0x4004c40	      0xbf23000000	                           mov edi, 0x23	      7486	eval.c	FUNCTION_142	CALL_6
0x4004c45	      0xe800000000	                          call 0x4004c4a	      7486	eval.c	FUNCTION_142	CALL_6
0x4004c4a	          0x4889df	                            mov rdi, rbx	      7504	eval.c	FUNCTION_142	CALL_11
0x4004c4d	      0xe800000000	                          call 0x4004c52	      7504	eval.c	FUNCTION_142	CALL_11
0x4004c52	      0xe95cffffff	                           jmp 0x4004bb3	      7504	eval.c	FUNCTION_142	CALL_11
0x4004c57	    0x660f1f840000	                    nop word [rax + rax]	      7504	eval.c	FUNCTION_142	CALL_11
0x4004c60	      0xbf2a000000	                           mov edi, 0x2a	      7488	eval.c	FUNCTION_142	ELSE_1	IF_3
0x4004c65	      0xe800000000	                          call 0x4004c6a	      7488	eval.c	FUNCTION_142	ELSE_1	IF_3
0x4004c6a	          0x4889df	                            mov rdi, rbx	      7504	eval.c	FUNCTION_142	CALL_11
0x4004c6d	      0xe800000000	                          call 0x4004c72	      7504	eval.c	FUNCTION_142	CALL_11
0x4004c72	      0xbf00000000	                              mov edi, 0	      7507	eval.c	FUNCTION_142	CALL_12
0x4004c77	      0xe800000000	                          call 0x4004c7c	      7507	eval.c	FUNCTION_142	CALL_12
0x4004c7c	      0xe932ffffff	                           jmp 0x4004bb3	      7507	eval.c	FUNCTION_142	CALL_12
0x4004c81	     0xf1f80000000	                         nop dword [rax]	      7507	eval.c	FUNCTION_142	CALL_12
0x4004c88	      0xbf5b000000	                           mov edi, 0x5b	      7491	eval.c	FUNCTION_142	ELSE_2	IF_4	CALL_8
0x4004c8d	      0xe800000000	                          call 0x4004c92	      7491	eval.c	FUNCTION_142	ELSE_2	IF_4	CALL_8
0x4004c92	            0x31c0	                            xor eax, eax	      7493	eval.c	FUNCTION_142	ELSE_2	IF_4	IF_5
0x4004c94	          0x803b5b	                    cmp byte [rbx], 0x5b	      7493	eval.c	FUNCTION_142	ELSE_2	IF_4	IF_5
0x4004c97	           0xf94c0	                                 sete al	      7493	eval.c	FUNCTION_142	ELSE_2	IF_4	IF_5
0x4004c9a	          0x4801c3	                            add rbx, rax	      7493	eval.c	FUNCTION_142	ELSE_2	IF_4	IF_5
0x4004c9d	      0xe909ffffff	                           jmp 0x4004bab	      7493	eval.c	FUNCTION_142	ELSE_2	IF_4	IF_5
0x4004ca2	      0xe800000000	                          call 0x4004ca7	      1500	eval.c	FUNCTION_35
call_func_retnr	functions,0:SWITCH,0:IF,1:DO,0:ELSE,0:WHILE,0:CALL,3:FOR,0	25
0x4003ce0	              0x53	                                push rbx	      1105	eval.c	FUNCTION_27
0x4003ce1	        0x4883ec20	                           sub rsp, 0x20	      1105	eval.c	FUNCTION_27
0x4003ce5	          0x4989e0	                             mov r8, rsp	      1110	eval.c	FUNCTION_27	IF_1	CALL_1
0x4003ce8	    0x64488b042528	                mov rax, qword fs:[0x28]	      1105	eval.c	FUNCTION_27
0x4003cf1	      0x4889442418	             mov qword [rsp + 0x18], rax	      1105	eval.c	FUNCTION_27
0x4003cf6	            0x31c0	                            xor eax, eax	      1105	eval.c	FUNCTION_27
0x4003cf8	      0xe813f7ffff	 call sym.call_vim_function.constprop.21	      1110	eval.c	FUNCTION_27	IF_1	CALL_1
0x4003cfd	            0x85c0	                           test eax, eax	      1110	eval.c	FUNCTION_27	IF_1	CALL_1
0x4003cff	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	      1110	eval.c	FUNCTION_27	IF_1	CALL_1
0x4003d06	            0x7418	                            je 0x4003d20	      1110	eval.c	FUNCTION_27	IF_1	CALL_1
0x4003d08	            0x31f6	                            xor esi, esi	      1113	eval.c	FUNCTION_27	CALL_2
0x4003d0a	          0x4889e7	                            mov rdi, rsp	      1113	eval.c	FUNCTION_27	CALL_2
0x4003d0d	      0xe800000000	                          call 0x4003d12	      1113	eval.c	FUNCTION_27	CALL_2
0x4003d12	          0x4889e7	                            mov rdi, rsp	      1114	eval.c	FUNCTION_27	CALL_3
0x4003d15	          0x4889c3	                            mov rbx, rax	      1113	eval.c	FUNCTION_27	CALL_2
0x4003d18	      0xe800000000	                          call 0x4003d1d	      1114	eval.c	FUNCTION_27	CALL_3
0x4003d1d	          0x4889da	                            mov rdx, rbx	      1115	eval.c	FUNCTION_27
0x4003d20	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      1116	eval.c	FUNCTION_27
0x4003d25	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1116	eval.c	FUNCTION_27
0x4003d2e	          0x4889d0	                            mov rax, rdx	      1116	eval.c	FUNCTION_27
0x4003d31	            0x7506	                           jne 0x4003d39	      1116	eval.c	FUNCTION_27
0x4003d33	        0x4883c420	                           add rsp, 0x20	      1116	eval.c	FUNCTION_27
0x4003d37	              0x5b	                                 pop rbx	      1116	eval.c	FUNCTION_27
0x4003d38	              0xc3	                                     ret	      1116	eval.c	FUNCTION_27
0x4003d39	      0xe800000000	                          call 0x4003d3e	      1116	eval.c	FUNCTION_27
set_internal_string_var	functions,0:SWITCH,0:IF,2:DO,0:ELSE,0:WHILE,0:CALL,4:FOR,0	102
0x4006330	            0x4155	                                push r13	       410	eval.c	FUNCTION_5
0x4006332	            0x4154	                                push r12	       410	eval.c	FUNCTION_5
0x4006334	          0x4989fc	                            mov r12, rdi	       410	eval.c	FUNCTION_5
0x4006337	              0x55	                                push rbp	       410	eval.c	FUNCTION_5
0x4006338	              0x53	                                push rbx	       410	eval.c	FUNCTION_5
0x4006339	          0x4889f7	                            mov rdi, rsi	       414	eval.c	FUNCTION_5	CALL_1
0x400633c	        0x4883ec08	                              sub rsp, 8	       410	eval.c	FUNCTION_5
0x4006340	      0xe800000000	                          call 0x4006345	       414	eval.c	FUNCTION_5	CALL_1
0x4006345	          0x4885c0	                           test rax, rax	       415	eval.c	FUNCTION_5	IF_1
0x4006348	     0xf84da000000	                            je 0x4006428	       415	eval.c	FUNCTION_5	IF_1
0x400634e	      0xbf10000000	                           mov edi, 0x10	      6817	eval.c	FUNCTION_119	CALL_1
0x4006353	          0x4889c5	                            mov rbp, rax	      6817	eval.c	FUNCTION_119	CALL_1
0x4006356	      0xe800000000	                          call 0x400635b	      6817	eval.c	FUNCTION_119	CALL_1
0x400635b	          0x4885c0	                           test rax, rax	      6831	eval.c	FUNCTION_120	IF_1
0x400635e	          0x4889c3	                            mov rbx, rax	      6817	eval.c	FUNCTION_119	CALL_1
0x4006361	     0xf8429010000	                            je 0x4006490	      6831	eval.c	FUNCTION_120	IF_1
0x4006367	            0x31d2	                            xor edx, edx	       420	eval.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x4006369	    0xc70002000000	                      mov dword [rax], 2	      6833	eval.c	FUNCTION_120	IF_1
0x400636f	        0x48896808	                mov qword [rax + 8], rbp	      6834	eval.c	FUNCTION_120	IF_1
0x4006373	          0x4889c6	                            mov rsi, rax	       420	eval.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x4006376	          0x4c89e7	                            mov rdi, r12	       420	eval.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x4006379	      0xe800000000	                          call 0x400637e	       420	eval.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x400637e	          0x833b0a	                    cmp dword [rbx], 0xa	      6849	eval.c	FUNCTION_121	IF_1	SWITCH_1
0x4006381	     0xf8789000000	                            ja 0x4006410	      6849	eval.c	FUNCTION_121	IF_1	SWITCH_1
0x4006387	            0x8b03	                    mov eax, dword [rbx]	      6849	eval.c	FUNCTION_121	IF_1	SWITCH_1
0x4006389	    0xff24c5000000	                       jmp qword [rax*8]	      6849	eval.c	FUNCTION_121	IF_1	SWITCH_1
0x4006390	        0x488b6b08	                mov rbp, qword [rbx + 8]	      6858	eval.c	FUNCTION_121	IF_1	SWITCH_1	CALL_3
0x4006394	          0x4885ed	                           test rbp, rbp	      4893	eval.c	FUNCTION_77	IF_1
0x4006397	            0x7477	                            je 0x4006410	      4893	eval.c	FUNCTION_77	IF_1
0x4006399	          0x8b4500	                    mov eax, dword [rbp]	      4893	eval.c	FUNCTION_77	IF_1
0x400639c	          0x83e801	                              sub eax, 1	      4893	eval.c	FUNCTION_77	IF_1
0x400639f	            0x85c0	                           test eax, eax	      4893	eval.c	FUNCTION_77	IF_1
0x40063a1	          0x894500	                    mov dword [rbp], eax	      4893	eval.c	FUNCTION_77	IF_1
0x40063a4	            0x7f6a	                            jg 0x4006410	      4893	eval.c	FUNCTION_77	IF_1
0x40063a6	          0x8b451c	            mov eax, dword [rbp + 0x1c] 	      4872	eval.c	FUNCTION_76	FOR_1
0x40063a9	          0x4531ed	                          xor r13d, r13d	      4872	eval.c	FUNCTION_76	FOR_1
0x40063ac	          0x4531e4	                          xor r12d, r12d	      4872	eval.c	FUNCTION_76	FOR_1
0x40063af	            0x85c0	                           test eax, eax	      4872	eval.c	FUNCTION_76	FOR_1
0x40063b1	            0x7e1f	                           jle 0x40063d2	      4872	eval.c	FUNCTION_76	FOR_1
0x40063b3	       0xf1f440000	                   nop dword [rax + rax]	      4872	eval.c	FUNCTION_76	FOR_1
0x40063b8	          0x4c89ef	                            mov rdi, r13	      4873	eval.c	FUNCTION_76	CALL_1
0x40063bb	        0x48037d20	             add rdi, qword [rbp + 0x20]	      4873	eval.c	FUNCTION_76	CALL_1
0x40063bf	        0x4183c401	                             add r12d, 1	      4872	eval.c	FUNCTION_76	FOR_1
0x40063c3	        0x4983c510	                           add r13, 0x10	      4872	eval.c	FUNCTION_76	FOR_1
0x40063c7	      0xe800000000	                          call 0x40063cc	      4873	eval.c	FUNCTION_76	CALL_1
0x40063cc	        0x443b651c	           cmp r12d, dword [rbp + 0x1c] 	      4872	eval.c	FUNCTION_76	FOR_1
0x40063d0	            0x7ce6	                            jl 0x40063b8	      4872	eval.c	FUNCTION_76	FOR_1
0x40063d2	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	      4874	eval.c	FUNCTION_76	CALL_2
0x40063d6	      0xe800000000	                          call 0x40063db	      4874	eval.c	FUNCTION_76	CALL_2
0x40063db	        0x488b7d28	            mov rdi, qword [rbp + 0x28] 	      4875	eval.c	FUNCTION_76	CALL_3
0x40063df	      0xe800000000	                          call 0x40063e4	      4875	eval.c	FUNCTION_76	CALL_3
0x40063e4	        0x488b7d08	                mov rdi, qword [rbp + 8]	      4876	eval.c	FUNCTION_76	IF_1
0x40063e8	          0x4885ff	                           test rdi, rdi	      4876	eval.c	FUNCTION_76	IF_1
0x40063eb	     0xf84a7000000	                            je 0x4006498	      4876	eval.c	FUNCTION_76	IF_1
0x40063f1	      0xe800000000	                          call 0x40063f6	      4878	eval.c	FUNCTION_76	IF_1	CALL_4
0x40063f6	        0x488b7d08	                mov rdi, qword [rbp + 8]	      4879	eval.c	FUNCTION_76	IF_1	CALL_5
0x40063fa	      0xe800000000	                          call 0x40063ff	      4879	eval.c	FUNCTION_76	IF_1	CALL_5
0x40063ff	          0x4889ef	                            mov rdi, rbp	      4883	eval.c	FUNCTION_76	CALL_7
0x4006402	      0xe800000000	                          call 0x4006407	      4883	eval.c	FUNCTION_76	CALL_7
0x4006407	    0x660f1f840000	                    nop word [rax + rax]	      4883	eval.c	FUNCTION_76	CALL_7
0x4006410	          0x4889df	                            mov rdi, rbx	      6882	eval.c	FUNCTION_121	IF_1	CALL_8
0x4006413	        0x4883c408	                              add rsp, 8	       424	eval.c	FUNCTION_5
0x4006417	              0x5b	                                 pop rbx	       424	eval.c	FUNCTION_5
0x4006418	              0x5d	                                 pop rbp	       424	eval.c	FUNCTION_5
0x4006419	            0x415c	                                 pop r12	       424	eval.c	FUNCTION_5
0x400641b	            0x415d	                                 pop r13	       424	eval.c	FUNCTION_5
0x400641d	      0xe900000000	                           jmp 0x4006422	      6882	eval.c	FUNCTION_121	IF_1	CALL_8
0x4006422	    0x660f1f440000	                    nop word [rax + rax]	      6882	eval.c	FUNCTION_121	IF_1	CALL_8
0x4006428	        0x4883c408	                              add rsp, 8	       424	eval.c	FUNCTION_5
0x400642c	              0x5b	                                 pop rbx	       424	eval.c	FUNCTION_5
0x400642d	              0x5d	                                 pop rbp	       424	eval.c	FUNCTION_5
0x400642e	            0x415c	                                 pop r12	       424	eval.c	FUNCTION_5
0x4006430	            0x415d	                                 pop r13	       424	eval.c	FUNCTION_5
0x4006432	              0xc3	                                     ret	       424	eval.c	FUNCTION_5
0x4006433	       0xf1f440000	                   nop dword [rax + rax]	       424	eval.c	FUNCTION_5
0x4006438	        0x488b7b08	                mov rdi, qword [rbx + 8]	      6852	eval.c	FUNCTION_121	IF_1	SWITCH_1	CALL_1
0x400643c	      0xe800000000	                          call 0x4006441	      6852	eval.c	FUNCTION_121	IF_1	SWITCH_1	CALL_1
0x4006441	        0x488b7b08	                mov rdi, qword [rbx + 8]	      6855	eval.c	FUNCTION_121	IF_1	SWITCH_1	CALL_2
0x4006445	      0xe800000000	                          call 0x400644a	      6855	eval.c	FUNCTION_121	IF_1	SWITCH_1	CALL_2
0x400644a	            0xebc4	                           jmp 0x4006410	      6855	eval.c	FUNCTION_121	IF_1	SWITCH_1	CALL_2
0x400644c	         0xf1f4000	                         nop dword [rax]	      6855	eval.c	FUNCTION_121	IF_1	SWITCH_1	CALL_2
0x4006450	        0x488b7b08	                mov rdi, qword [rbx + 8]	      6861	eval.c	FUNCTION_121	IF_1	SWITCH_1	CALL_4
0x4006454	      0xe800000000	                          call 0x4006459	      6861	eval.c	FUNCTION_121	IF_1	SWITCH_1	CALL_4
0x4006459	            0xebb5	                           jmp 0x4006410	      6861	eval.c	FUNCTION_121	IF_1	SWITCH_1	CALL_4
0x400645b	       0xf1f440000	                   nop dword [rax + rax]	      6861	eval.c	FUNCTION_121	IF_1	SWITCH_1	CALL_4
0x4006460	        0x488b7b08	                mov rdi, qword [rbx + 8]	      6864	eval.c	FUNCTION_121	IF_1	SWITCH_1	CALL_5
0x4006464	      0xe800000000	                          call 0x4006469	      6864	eval.c	FUNCTION_121	IF_1	SWITCH_1	CALL_5
0x4006469	            0xeba5	                           jmp 0x4006410	      6864	eval.c	FUNCTION_121	IF_1	SWITCH_1	CALL_5
0x400646b	       0xf1f440000	                   nop dword [rax + rax]	      6864	eval.c	FUNCTION_121	IF_1	SWITCH_1	CALL_5
0x4006470	        0x488b7b08	                mov rdi, qword [rbx + 8]	      6868	eval.c	FUNCTION_121	IF_1	SWITCH_1	CALL_6
0x4006474	      0xe800000000	                          call 0x4006479	      6868	eval.c	FUNCTION_121	IF_1	SWITCH_1	CALL_6
0x4006479	            0xeb95	                           jmp 0x4006410	      6868	eval.c	FUNCTION_121	IF_1	SWITCH_1	CALL_6
0x400647b	       0xf1f440000	                   nop dword [rax + rax]	      6868	eval.c	FUNCTION_121	IF_1	SWITCH_1	CALL_6
0x4006480	        0x488b7b08	                mov rdi, qword [rbx + 8]	      6873	eval.c	FUNCTION_121	IF_1	SWITCH_1	CALL_7
0x4006484	      0xe800000000	                          call 0x4006489	      6873	eval.c	FUNCTION_121	IF_1	SWITCH_1	CALL_7
0x4006489	            0xeb85	                           jmp 0x4006410	      6873	eval.c	FUNCTION_121	IF_1	SWITCH_1	CALL_7
0x400648b	       0xf1f440000	                   nop dword [rax + rax]	      6873	eval.c	FUNCTION_121	IF_1	SWITCH_1	CALL_7
0x4006490	          0x4889ef	                            mov rdi, rbp	      6837	eval.c	FUNCTION_120	CALL_2
0x4006493	      0xe97bffffff	                           jmp 0x4006413	      6837	eval.c	FUNCTION_120	CALL_2
0x4006498	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	      4882	eval.c	FUNCTION_76	CALL_6
0x400649c	      0xe800000000	                          call 0x40064a1	      4882	eval.c	FUNCTION_76	CALL_6
0x40064a1	      0xe959ffffff	                           jmp 0x40063ff	      4882	eval.c	FUNCTION_76	CALL_6
get_option_tv	functions,0:SWITCH,0:IF,10:DO,0:ELSE,5:WHILE,0:CALL,6:FOR,0	154
0x4001340	            0x4156	                                push r14	      4585	eval.c	FUNCTION_72
0x4001342	            0x4155	                                push r13	      4585	eval.c	FUNCTION_72
0x4001344	            0x31c9	                            xor ecx, ecx	      8429	eval.c	FUNCTION_159	IF_1
0x4001346	            0x4154	                                push r12	      4585	eval.c	FUNCTION_72
0x4001348	              0x55	                                push rbp	      4585	eval.c	FUNCTION_72
0x4001349	          0x4989f4	                            mov r12, rsi	      4585	eval.c	FUNCTION_72
0x400134c	              0x53	                                push rbx	      4585	eval.c	FUNCTION_72
0x400134d	          0x4889fd	                            mov rbp, rdi	      4585	eval.c	FUNCTION_72
0x4001350	        0x4883ec20	                           sub rsp, 0x20	      4585	eval.c	FUNCTION_72
0x4001354	          0x488b1f	                    mov rbx, qword [rdi]	      4591	eval.c	FUNCTION_72
0x4001357	    0x64488b042528	                mov rax, qword fs:[0x28]	      4585	eval.c	FUNCTION_72
0x4001360	      0x4889442418	             mov qword [rsp + 0x18], rax	      4585	eval.c	FUNCTION_72
0x4001365	            0x31c0	                            xor eax, eax	      4585	eval.c	FUNCTION_72
0x4001367	         0xfb64301	               movzx eax, byte [rbx + 1]	      8429	eval.c	FUNCTION_159	IF_1
0x400136b	        0x440fb62b	                  movzx r13d, byte [rbx]	      4591	eval.c	FUNCTION_72
0x400136f	        0x488d7301	                      lea rsi, [rbx + 1]	      8428	eval.c	FUNCTION_159
0x4001373	            0x3c67	                            cmp al, 0x67	      8429	eval.c	FUNCTION_159	IF_1
0x4001375	     0xf8405010000	                            je 0x4001480	      8429	eval.c	FUNCTION_159	IF_1
0x400137b	            0x3c6c	                            cmp al, 0x6c	      8434	eval.c	FUNCTION_159	ELSE_1	IF_2
0x400137d	     0xf84ad000000	                            je 0x4001430	      8434	eval.c	FUNCTION_159	ELSE_1	IF_2
0x4001383	          0x83e0df	                     and eax, 0xffffffdf	      8442	eval.c	FUNCTION_159	IF_3	CALL_1
0x4001386	          0x83e841	                           sub eax, 0x41	      8442	eval.c	FUNCTION_159	IF_3	CALL_1
0x4001389	            0x3c19	                            cmp al, 0x19	      8442	eval.c	FUNCTION_159	IF_3	CALL_1
0x400138b	     0xf873f010000	                            ja 0x40014d0	      8442	eval.c	FUNCTION_159	IF_3	CALL_1
0x4001391	        0x48897500	                    mov qword [rbp], rsi	      8444	eval.c	FUNCTION_159
0x4001395	           0xfb606	                   movzx eax, byte [rsi]	      8446	eval.c	FUNCTION_159	IF_4
0x4001398	            0x3c74	                            cmp al, 0x74	      8446	eval.c	FUNCTION_159	IF_4
0x400139a	            0x7513	                           jne 0x40013af	      8446	eval.c	FUNCTION_159	IF_4
0x400139c	      0xe9ff000000	                           jmp 0x40014a0	      8446	eval.c	FUNCTION_159	IF_4
0x40013a1	     0xf1f80000000	                         nop dword [rax]	      8446	eval.c	FUNCTION_159	IF_4
0x40013a8	        0x4883c601	                              add rsi, 1	      8450	eval.c	FUNCTION_159	ELSE_3	WHILE_1
0x40013ac	           0xfb606	                   movzx eax, byte [rsi]	      8449	eval.c	FUNCTION_159	ELSE_3	WHILE_1	CALL_2
0x40013af	          0x83e0df	                     and eax, 0xffffffdf	      8449	eval.c	FUNCTION_159	ELSE_3	WHILE_1	CALL_2
0x40013b2	          0x83e841	                           sub eax, 0x41	      8449	eval.c	FUNCTION_159	ELSE_3	WHILE_1	CALL_2
0x40013b5	            0x3c19	                            cmp al, 0x19	      8449	eval.c	FUNCTION_159	ELSE_3	WHILE_1	CALL_2
0x40013b7	            0x76ef	                           jbe 0x40013a8	      8449	eval.c	FUNCTION_159	ELSE_3	WHILE_1	CALL_2
0x40013b9	          0x4889f3	                            mov rbx, rsi	      8450	eval.c	FUNCTION_159	ELSE_3	WHILE_1
0x40013bc	            0x85d2	                           test edx, edx	      4606	eval.c	FUNCTION_72	IF_3
0x40013be	     0xf848c000000	                            je 0x4001450	      4606	eval.c	FUNCTION_72	IF_3
0x40013c4	          0x4d85e4	                           test r12, r12	      4614	eval.c	FUNCTION_72	CALL_4
0x40013c7	        0x440fb633	                  movzx r14d, byte [rbx]	      4612	eval.c	FUNCTION_72
0x40013cb	          0xc60300	                       mov byte [rbx], 0	      4613	eval.c	FUNCTION_72
0x40013ce	     0xf8428010000	                            je 0x40014fc	      4614	eval.c	FUNCTION_72	CALL_4
0x40013d4	        0x488b7d00	                    mov rdi, qword [rbp]	      4614	eval.c	FUNCTION_72	CALL_4
0x40013d8	      0x488d542410	                   lea rdx, [rsp + 0x10]	      4614	eval.c	FUNCTION_72	CALL_4
0x40013dd	      0x488d742408	                      lea rsi, [rsp + 8]	      4614	eval.c	FUNCTION_72	CALL_4
0x40013e2	      0xe800000000	                          call 0x40013e7	      4614	eval.c	FUNCTION_72	CALL_4
0x40013e7	          0x83f8fd	             cmp eax, 0xfffffffffffffffd	      4617	eval.c	FUNCTION_72	IF_4
0x40013ea	     0xf8468010000	                            je 0x4001558	      4617	eval.c	FUNCTION_72	IF_4
0x40013f0	          0x83f8fe	             cmp eax, 0xfffffffffffffffe	      4625	eval.c	FUNCTION_72	ELSE_1	IF_6	IF_7
0x40013f3	     0xf8486010000	                            je 0x400157f	      4625	eval.c	FUNCTION_72	ELSE_1	IF_6	IF_7
0x40013f9	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      4630	eval.c	FUNCTION_72	ELSE_1	IF_6	ELSE_2	IF_8
0x40013fc	     0xf8434010000	                            je 0x4001536	      4630	eval.c	FUNCTION_72	ELSE_1	IF_6	ELSE_2	IF_8
0x4001402	          0x83f801	                              cmp eax, 1	      4635	eval.c	FUNCTION_72	ELSE_1	IF_6	ELSE_3	IF_9
0x4001405	     0xf848f010000	                            je 0x400159a	      4635	eval.c	FUNCTION_72	ELSE_1	IF_6	ELSE_3	IF_9
0x400140b	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4643	eval.c	FUNCTION_72	ELSE_1	IF_6	ELSE_4
0x4001410	    0x41c704240200	                      mov dword [r12], 2	      4642	eval.c	FUNCTION_72	ELSE_1	IF_6	ELSE_4
0x4001418	      0xba01000000	                              mov edx, 1	      4592	eval.c	FUNCTION_72
0x400141d	      0x4989442408	                mov qword [r12 + 8], rax	      4643	eval.c	FUNCTION_72	ELSE_1	IF_6	ELSE_4
0x4001422	          0x448833	                    mov byte [rbx], r14b	      4649	eval.c	FUNCTION_72
0x4001425	        0x48895d00	                    mov qword [rbp], rbx	      4650	eval.c	FUNCTION_72
0x4001429	            0x89d5	                            mov ebp, edx	      4652	eval.c	FUNCTION_72
0x400142b	            0xeb2c	                           jmp 0x4001459	      4652	eval.c	FUNCTION_72
0x400142d	           0xf1f00	                         nop dword [rax]	      4652	eval.c	FUNCTION_72
0x4001430	        0x807b023a	                cmp byte [rbx + 2], 0x3a	      8434	eval.c	FUNCTION_159	ELSE_1	IF_2
0x4001434	     0xf8557ffffff	                           jne 0x4001391	      8434	eval.c	FUNCTION_159	ELSE_1	IF_2
0x400143a	        0x488d7303	                      lea rsi, [rbx + 3]	      8437	eval.c	FUNCTION_159	ELSE_1	IF_2
0x400143e	         0xfb64303	               movzx eax, byte [rbx + 3]	      8437	eval.c	FUNCTION_159	ELSE_1	IF_2
0x4001442	      0xb904000000	                              mov ecx, 4	      8436	eval.c	FUNCTION_159	ELSE_1	IF_2
0x4001447	      0xe937ffffff	                           jmp 0x4001383	      8436	eval.c	FUNCTION_159	ELSE_1	IF_2
0x400144c	         0xf1f4000	                         nop dword [rax]	      8436	eval.c	FUNCTION_159	ELSE_1	IF_2
0x4001450	        0x48895d00	                    mov qword [rbp], rbx	      4608	eval.c	FUNCTION_72	IF_3
0x4001454	      0xbd01000000	                              mov ebp, 1	      4609	eval.c	FUNCTION_72	IF_3
0x4001459	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4653	eval.c	FUNCTION_72
0x400145e	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      4653	eval.c	FUNCTION_72
0x4001467	            0x89e8	                            mov eax, ebp	      4653	eval.c	FUNCTION_72
0x4001469	     0xf8547010000	                           jne 0x40015b6	      4653	eval.c	FUNCTION_72
0x400146f	        0x4883c420	                           add rsp, 0x20	      4653	eval.c	FUNCTION_72
0x4001473	              0x5b	                                 pop rbx	      4653	eval.c	FUNCTION_72
0x4001474	              0x5d	                                 pop rbp	      4653	eval.c	FUNCTION_72
0x4001475	            0x415c	                                 pop r12	      4653	eval.c	FUNCTION_72
0x4001477	            0x415d	                                 pop r13	      4653	eval.c	FUNCTION_72
0x4001479	            0x415e	                                 pop r14	      4653	eval.c	FUNCTION_72
0x400147b	              0xc3	                                     ret	      4653	eval.c	FUNCTION_72
0x400147c	         0xf1f4000	                         nop dword [rax]	      4653	eval.c	FUNCTION_72
0x4001480	        0x807b023a	                cmp byte [rbx + 2], 0x3a	      8429	eval.c	FUNCTION_159	IF_1
0x4001484	     0xf8507ffffff	                           jne 0x4001391	      8429	eval.c	FUNCTION_159	IF_1
0x400148a	        0x488d7303	                      lea rsi, [rbx + 3]	      8432	eval.c	FUNCTION_159	IF_1
0x400148e	         0xfb64303	               movzx eax, byte [rbx + 3]	      8432	eval.c	FUNCTION_159	IF_1
0x4001492	      0xb902000000	                              mov ecx, 2	      8431	eval.c	FUNCTION_159	IF_1
0x4001497	      0xe9e7feffff	                           jmp 0x4001383	      8431	eval.c	FUNCTION_159	IF_1
0x400149c	         0xf1f4000	                         nop dword [rax]	      8431	eval.c	FUNCTION_159	IF_1
0x40014a0	        0x807e015f	                cmp byte [rsi + 1], 0x5f	      8446	eval.c	FUNCTION_159	IF_4
0x40014a4	     0xf85fefeffff	                           jne 0x40013a8	      8446	eval.c	FUNCTION_159	IF_4
0x40014aa	        0x807e0200	                   cmp byte [rsi + 2], 0	      8446	eval.c	FUNCTION_159	IF_4
0x40014ae	     0xf84f4feffff	                            je 0x40013a8	      8446	eval.c	FUNCTION_159	IF_4
0x40014b4	        0x807e0300	                   cmp byte [rsi + 3], 0	      8446	eval.c	FUNCTION_159	IF_4
0x40014b8	     0xf84eafeffff	                            je 0x40013a8	      8446	eval.c	FUNCTION_159	IF_4
0x40014be	          0x4889f3	                            mov rbx, rsi	      4599	eval.c	FUNCTION_72	IF_1
0x40014c1	        0x4883c304	                              add rbx, 4	      4599	eval.c	FUNCTION_72	IF_1
0x40014c5	     0xf85f1feffff	                           jne 0x40013bc	      4599	eval.c	FUNCTION_72	IF_1
0x40014cb	          0x4889f3	                            mov rbx, rsi	      4599	eval.c	FUNCTION_72	IF_1
0x40014ce	            0x6690	                                     nop	      4599	eval.c	FUNCTION_72	IF_1
0x40014d0	            0x31ed	                            xor ebp, ebp	      4603	eval.c	FUNCTION_72	IF_1
0x40014d2	          0x4d85e4	                           test r12, r12	      4601	eval.c	FUNCTION_72	IF_1	IF_2
0x40014d5	     0xf847effffff	                            je 0x4001459	      4601	eval.c	FUNCTION_72	IF_1	IF_2
0x40014db	            0x31ff	                            xor edi, edi	      4602	eval.c	FUNCTION_72	IF_1	CALL_3
0x40014dd	      0xba05000000	                              mov edx, 5	      4602	eval.c	FUNCTION_72	IF_1	CALL_3
0x40014e2	      0xbe00000000	                              mov esi, 0	      4602	eval.c	FUNCTION_72	IF_1	CALL_3
0x40014e7	      0xe800000000	                          call 0x40014ec	      4602	eval.c	FUNCTION_72	IF_1	CALL_3
0x40014ec	          0x4889de	                            mov rsi, rbx	      4602	eval.c	FUNCTION_72	IF_1	CALL_3
0x40014ef	          0x4889c7	                            mov rdi, rax	      4602	eval.c	FUNCTION_72	IF_1	CALL_3
0x40014f2	      0xe800000000	                          call 0x40014f7	      4602	eval.c	FUNCTION_72	IF_1	CALL_3
0x40014f7	      0xe95dffffff	                           jmp 0x4001459	      4602	eval.c	FUNCTION_72	IF_1	CALL_3
0x40014fc	        0x488b7d00	                    mov rdi, qword [rbp]	      4614	eval.c	FUNCTION_72	CALL_4
0x4001500	      0x488d742408	                      lea rsi, [rsp + 8]	      4614	eval.c	FUNCTION_72	CALL_4
0x4001505	            0x31d2	                            xor edx, edx	      4614	eval.c	FUNCTION_72	CALL_4
0x4001507	      0xe800000000	                          call 0x400150c	      4614	eval.c	FUNCTION_72	CALL_4
0x400150c	            0x31d2	                            xor edx, edx	      4621	eval.c	FUNCTION_72	IF_4
0x400150e	          0x83f8fd	             cmp eax, 0xfffffffffffffffd	      4617	eval.c	FUNCTION_72	IF_4
0x4001511	     0xf840bffffff	                            je 0x4001422	      4617	eval.c	FUNCTION_72	IF_4
0x4001517	        0x4180fd2b	                          cmp r13b, 0x2b	      4646	eval.c	FUNCTION_72	ELSE_5	IF_10
0x400151b	      0xba01000000	                              mov edx, 1	      4592	eval.c	FUNCTION_72
0x4001520	     0xf85fcfeffff	                           jne 0x4001422	      4646	eval.c	FUNCTION_72	ELSE_5	IF_10
0x4001526	          0x83c002	                              add eax, 2	      4621	eval.c	FUNCTION_72	IF_4
0x4001529	            0x31d2	                            xor edx, edx	      4621	eval.c	FUNCTION_72	IF_4
0x400152b	          0x83f801	                              cmp eax, 1	      4621	eval.c	FUNCTION_72	IF_4
0x400152e	           0xf97c2	                                 seta dl	      4621	eval.c	FUNCTION_72	IF_4
0x4001531	      0xe9ecfeffff	                           jmp 0x4001422	      4621	eval.c	FUNCTION_72	IF_4
0x4001536	    0x41c704240100	                      mov dword [r12], 1	      4632	eval.c	FUNCTION_72	ELSE_1	IF_6	ELSE_2	IF_8
0x400153e	    0x49c744240800	                  mov qword [r12 + 8], 0	      4633	eval.c	FUNCTION_72	ELSE_1	IF_6	ELSE_2	IF_8
0x4001547	      0xba01000000	                              mov edx, 1	      4592	eval.c	FUNCTION_72
0x400154c	      0xe9d1feffff	                           jmp 0x4001422	      4592	eval.c	FUNCTION_72
0x4001551	     0xf1f80000000	                         nop dword [rax]	      4592	eval.c	FUNCTION_72
0x4001558	        0x4c8b6500	                    mov r12, qword [rbp]	      4620	eval.c	FUNCTION_72	IF_4	CALL_6
0x400155c	      0xba05000000	                              mov edx, 5	      4620	eval.c	FUNCTION_72	IF_4	CALL_6
0x4001561	      0xbe00000000	                              mov esi, 0	      4620	eval.c	FUNCTION_72	IF_4	CALL_6
0x4001566	            0x31ff	                            xor edi, edi	      4620	eval.c	FUNCTION_72	IF_4	CALL_6
0x4001568	      0xe800000000	                          call 0x400156d	      4620	eval.c	FUNCTION_72	IF_4	CALL_6
0x400156d	          0x4c89e6	                            mov rsi, r12	      4620	eval.c	FUNCTION_72	IF_4	CALL_6
0x4001570	          0x4889c7	                            mov rdi, rax	      4620	eval.c	FUNCTION_72	IF_4	CALL_6
0x4001573	      0xe800000000	                          call 0x4001578	      4620	eval.c	FUNCTION_72	IF_4	CALL_6
0x4001578	            0x31d2	                            xor edx, edx	      4621	eval.c	FUNCTION_72	IF_4
0x400157a	      0xe9a3feffff	                           jmp 0x4001422	      4621	eval.c	FUNCTION_72	IF_4
0x400157f	    0x41c704240200	                      mov dword [r12], 2	      4627	eval.c	FUNCTION_72	ELSE_1	IF_6	IF_7
0x4001587	    0x49c744240800	                  mov qword [r12 + 8], 0	      4628	eval.c	FUNCTION_72	ELSE_1	IF_6	IF_7
0x4001590	      0xba01000000	                              mov edx, 1	      4592	eval.c	FUNCTION_72
0x4001595	      0xe988feffff	                           jmp 0x4001422	      4592	eval.c	FUNCTION_72
0x400159a	      0x488b442408	                mov rax, qword [rsp + 8]	      4638	eval.c	FUNCTION_72	ELSE_1	IF_6	ELSE_3	IF_9
0x400159f	    0x41c704240100	                      mov dword [r12], 1	      4637	eval.c	FUNCTION_72	ELSE_1	IF_6	ELSE_3	IF_9
0x40015a7	      0xba01000000	                              mov edx, 1	      4592	eval.c	FUNCTION_72
0x40015ac	      0x4989442408	                mov qword [r12 + 8], rax	      4638	eval.c	FUNCTION_72	ELSE_1	IF_6	ELSE_3	IF_9
0x40015b1	      0xe96cfeffff	                           jmp 0x4001422	      4638	eval.c	FUNCTION_72	ELSE_1	IF_6	ELSE_3	IF_9
0x40015b6	      0xe800000000	                          call 0x40015bb	      4653	eval.c	FUNCTION_72
set_ref_in_list	functions,0:SWITCH,0:IF,2:DO,0:ELSE,0:WHILE,0:CALL,2:FOR,2	58
0x4001b80	            0x4155	                                push r13	      5314	eval.c	FUNCTION_84
0x4001b82	            0x4154	                                push r12	      5314	eval.c	FUNCTION_84
0x4001b84	          0x4531ed	                          xor r13d, r13d	      5316	eval.c	FUNCTION_84
0x4001b87	              0x55	                                push rbp	      5314	eval.c	FUNCTION_84
0x4001b88	              0x53	                                push rbx	      5314	eval.c	FUNCTION_84
0x4001b89	          0x4189f4	                           mov r12d, esi	      5314	eval.c	FUNCTION_84
0x4001b8c	          0x4889fb	                            mov rbx, rdi	      5314	eval.c	FUNCTION_84
0x4001b8f	          0x4889d5	                            mov rbp, rdx	      5314	eval.c	FUNCTION_84
0x4001b92	        0x4883ec18	                           sub rsp, 0x18	      5314	eval.c	FUNCTION_84
0x4001b96	    0x64488b042528	                mov rax, qword fs:[0x28]	      5314	eval.c	FUNCTION_84
0x4001b9f	      0x4889442408	                mov qword [rsp + 8], rax	      5314	eval.c	FUNCTION_84
0x4001ba4	            0x31c0	                            xor eax, eax	      5314	eval.c	FUNCTION_84
0x4001ba6	          0x4585ed	                         test r13d, r13d	      5324	eval.c	FUNCTION_84	FOR_1	IF_1
0x4001ba9	    0x48c704240000	                      mov qword [rsp], 0	      5318	eval.c	FUNCTION_84
0x4001bb1	            0x755a	                           jne 0x4001c0d	      5324	eval.c	FUNCTION_84	FOR_1	IF_1
0x4001bb3	       0xf1f440000	                   nop dword [rax + rax]	      5324	eval.c	FUNCTION_84	FOR_1	IF_1
0x4001bb8	          0x488b1b	                    mov rbx, qword [rbx]	      5328	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2
0x4001bbb	          0x4885db	                           test rbx, rbx	      5328	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2
0x4001bbe	            0x750c	                           jne 0x4001bcc	      5328	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2
0x4001bc0	            0xeb2d	                           jmp 0x4001bef	      5328	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2
0x4001bc2	    0x660f1f440000	                    nop word [rax + rax]	      5328	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2
0x4001bc8	            0x85c0	                           test eax, eax	      5328	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2
0x4001bca	            0x751a	                           jne 0x4001be6	      5328	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2
0x4001bcc	        0x488d7b10	                   lea rdi, [rbx + 0x10]	      5329	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2	CALL_1
0x4001bd0	          0x4889e1	                            mov rcx, rsp	      5329	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2	CALL_1
0x4001bd3	          0x4889ea	                            mov rdx, rbp	      5329	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2	CALL_1
0x4001bd6	          0x4489e6	                           mov esi, r12d	      5329	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2	CALL_1
0x4001bd9	      0xe800000000	                          call 0x4001bde	      5329	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2	CALL_1
0x4001bde	          0x488b1b	                    mov rbx, qword [rbx]	      5328	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2
0x4001be1	          0x4885db	                           test rbx, rbx	      5328	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2
0x4001be4	            0x75e2	                           jne 0x4001bc8	      5328	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2
0x4001be6	          0x4531ed	                          xor r13d, r13d	      5329	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2	CALL_1
0x4001be9	            0x85c0	                           test eax, eax	      5329	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2	CALL_1
0x4001beb	        0x410f95c5	                              setne r13b	      5329	eval.c	FUNCTION_84	FOR_1	IF_1	FOR_2	CALL_1
0x4001bef	        0x488b3c24	                    mov rdi, qword [rsp]	      5331	eval.c	FUNCTION_84	FOR_1	IF_2
0x4001bf3	          0x4885ff	                           test rdi, rdi	      5331	eval.c	FUNCTION_84	FOR_1	IF_2
0x4001bf6	            0x7424	                            je 0x4001c1c	      5331	eval.c	FUNCTION_84	FOR_1	IF_2
0x4001bf8	        0x488b4708	                mov rax, qword [rdi + 8]	      5337	eval.c	FUNCTION_84	FOR_1
0x4001bfc	          0x488b1f	                    mov rbx, qword [rdi]	      5335	eval.c	FUNCTION_84	FOR_1
0x4001bff	        0x48890424	                    mov qword [rsp], rax	      5337	eval.c	FUNCTION_84	FOR_1
0x4001c03	      0xe800000000	                          call 0x4001c08	      5338	eval.c	FUNCTION_84	FOR_1	CALL_2
0x4001c08	          0x4585ed	                         test r13d, r13d	      5324	eval.c	FUNCTION_84	FOR_1	IF_1
0x4001c0b	            0x74ab	                            je 0x4001bb8	      5324	eval.c	FUNCTION_84	FOR_1	IF_1
0x4001c0d	        0x488b3c24	                    mov rdi, qword [rsp]	      5331	eval.c	FUNCTION_84	FOR_1	IF_2
0x4001c11	    0x41bd01000000	                             mov r13d, 1	      5331	eval.c	FUNCTION_84	FOR_1	IF_2
0x4001c17	          0x4885ff	                           test rdi, rdi	      5331	eval.c	FUNCTION_84	FOR_1	IF_2
0x4001c1a	            0x75dc	                           jne 0x4001bf8	      5331	eval.c	FUNCTION_84	FOR_1	IF_2
0x4001c1c	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      5342	eval.c	FUNCTION_84
0x4001c21	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      5342	eval.c	FUNCTION_84
0x4001c2a	          0x4489e8	                           mov eax, r13d	      5342	eval.c	FUNCTION_84
0x4001c2d	            0x750b	                           jne 0x4001c3a	      5342	eval.c	FUNCTION_84
0x4001c2f	        0x4883c418	                           add rsp, 0x18	      5342	eval.c	FUNCTION_84
0x4001c33	              0x5b	                                 pop rbx	      5342	eval.c	FUNCTION_84
0x4001c34	              0x5d	                                 pop rbp	      5342	eval.c	FUNCTION_84
0x4001c35	            0x415c	                                 pop r12	      5342	eval.c	FUNCTION_84
0x4001c37	            0x415d	                                 pop r13	      5342	eval.c	FUNCTION_84
0x4001c39	              0xc3	                                     ret	      5342	eval.c	FUNCTION_84
0x4001c3a	      0xe800000000	                          call 0x4001c3f	      5342	eval.c	FUNCTION_84
unref_var_dict	functions,0:SWITCH,0:IF,0:DO,0:ELSE,0:WHILE,0:CALL,1:FOR,0	2
0x40058e0	    0x816f049e8601	            sub dword [rdi + 4], 0x1869e	      7393	eval.c	FUNCTION_137
0x40058e7	      0xe900000000	                           jmp 0x40058ec	      7394	eval.c	FUNCTION_137	CALL_1
eval_for_line	functions,0:SWITCH,0:IF,9:DO,0:ELSE,2:WHILE,0:CALL,13:FOR,0	136
0x400b180	            0x4156	                                push r14	      2500	eval.c	FUNCTION_48
0x400b182	            0x4155	                                push r13	      2500	eval.c	FUNCTION_48
0x400b184	          0x4989d6	                            mov r14, rdx	      2500	eval.c	FUNCTION_48
0x400b187	            0x4154	                                push r12	      2500	eval.c	FUNCTION_48
0x400b189	              0x55	                                push rbp	      2500	eval.c	FUNCTION_48
0x400b18a	          0x4989f4	                            mov r12, rsi	      2500	eval.c	FUNCTION_48
0x400b18d	              0x53	                                push rbx	      2500	eval.c	FUNCTION_48
0x400b18e	          0x4889fb	                            mov rbx, rdi	      2500	eval.c	FUNCTION_48
0x400b191	      0xbf20000000	                           mov edi, 0x20	      2508	eval.c	FUNCTION_48	CALL_1
0x400b196	          0x4189cd	                           mov r13d, ecx	      2500	eval.c	FUNCTION_48
0x400b199	        0x4883ec20	                           sub rsp, 0x20	      2500	eval.c	FUNCTION_48
0x400b19d	    0xc70601000000	                      mov dword [rsi], 1	      2506	eval.c	FUNCTION_48
0x400b1a3	    0x64488b042528	                mov rax, qword fs:[0x28]	      2500	eval.c	FUNCTION_48
0x400b1ac	      0x4889442418	             mov qword [rsp + 0x18], rax	      2500	eval.c	FUNCTION_48
0x400b1b1	            0x31c0	                            xor eax, eax	      2500	eval.c	FUNCTION_48
0x400b1b3	      0xe800000000	                          call 0x400b1b8	      2508	eval.c	FUNCTION_48	CALL_1
0x400b1b8	          0x4885c0	                           test rax, rax	      2509	eval.c	FUNCTION_48	IF_1
0x400b1bb	     0xf8487010000	                            je 0x400b348	      2509	eval.c	FUNCTION_48	IF_1
0x400b1c1	          0x4889c5	                            mov rbp, rax	      2509	eval.c	FUNCTION_48	IF_1
0x400b1c4	           0xfb603	                   movzx eax, byte [rbx]	      1421	eval.c	FUNCTION_33	IF_1
0x400b1c7	            0x3c5b	                            cmp al, 0x5b	      1421	eval.c	FUNCTION_33	IF_1
0x400b1c9	            0x747d	                            je 0x400b248	      1421	eval.c	FUNCTION_33	IF_1
0x400b1cb	            0x3c40	                            cmp al, 0x40	      1467	eval.c	FUNCTION_34	IF_1
0x400b1cd	     0xf84dd000000	                            je 0x400b2b0	      1467	eval.c	FUNCTION_34	IF_1
0x400b1d3	          0x83e0fd	                     and eax, 0xfffffffd	      1469	eval.c	FUNCTION_34	CALL_1
0x400b1d6	            0x31ff	                            xor edi, edi	      1469	eval.c	FUNCTION_34	CALL_1
0x400b1d8	            0x3c24	                            cmp al, 0x24	      1469	eval.c	FUNCTION_34	CALL_1
0x400b1da	        0x400f94c7	                                sete dil	      1469	eval.c	FUNCTION_34	CALL_1
0x400b1de	          0x4801df	                            add rdi, rbx	      1469	eval.c	FUNCTION_34	CALL_1
0x400b1e1	      0xbe03000000	                              mov esi, 3	      1469	eval.c	FUNCTION_34	CALL_1
0x400b1e6	      0xe83552ffff	     call sym.find_name_end.constprop.27	      1469	eval.c	FUNCTION_34	CALL_1
0x400b1eb	          0x4889c7	                            mov rdi, rax	      1469	eval.c	FUNCTION_34	CALL_1
0x400b1ee	          0x4885ff	                           test rdi, rdi	      2513	eval.c	FUNCTION_48	IF_2
0x400b1f1	          0x4889e8	                            mov rax, rbp	      2513	eval.c	FUNCTION_48	IF_2
0x400b1f4	            0x742c	                            je 0x400b222	      2513	eval.c	FUNCTION_48	IF_2
0x400b1f6	      0xe800000000	                          call 0x400b1fb	      2516	eval.c	FUNCTION_48	CALL_3
0x400b1fb	          0x803869	                    cmp byte [rax], 0x69	      2517	eval.c	FUNCTION_48	IF_3	CALL_4
0x400b1fe	            0x7506	                           jne 0x400b206	      2517	eval.c	FUNCTION_48	IF_3	CALL_4
0x400b200	        0x8078016e	                cmp byte [rax + 1], 0x6e	      2517	eval.c	FUNCTION_48	IF_3	CALL_4
0x400b204	            0x745a	                            je 0x400b260	      2517	eval.c	FUNCTION_48	IF_3	CALL_4
0x400b206	      0xba05000000	                              mov edx, 5	      2519	eval.c	FUNCTION_48	IF_3	CALL_6
0x400b20b	      0xbe00000000	                              mov esi, 0	      2519	eval.c	FUNCTION_48	IF_3	CALL_6
0x400b210	            0x31ff	                            xor edi, edi	      2519	eval.c	FUNCTION_48	IF_3	CALL_6
0x400b212	      0xe800000000	                          call 0x400b217	      2519	eval.c	FUNCTION_48	IF_3	CALL_6
0x400b217	          0x4889c7	                            mov rdi, rax	      2519	eval.c	FUNCTION_48	IF_3	CALL_6
0x400b21a	      0xe800000000	                          call 0x400b21f	      2519	eval.c	FUNCTION_48	IF_3	CALL_6
0x400b21f	          0x4889e8	                            mov rax, rbp	      2520	eval.c	FUNCTION_48	IF_3
0x400b222	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2555	eval.c	FUNCTION_48
0x400b227	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2555	eval.c	FUNCTION_48
0x400b230	     0xf854c010000	                           jne 0x400b382	      2555	eval.c	FUNCTION_48
0x400b236	        0x4883c420	                           add rsp, 0x20	      2555	eval.c	FUNCTION_48
0x400b23a	              0x5b	                                 pop rbx	      2555	eval.c	FUNCTION_48
0x400b23b	              0x5d	                                 pop rbp	      2555	eval.c	FUNCTION_48
0x400b23c	            0x415c	                                 pop r12	      2555	eval.c	FUNCTION_48
0x400b23e	            0x415d	                                 pop r13	      2555	eval.c	FUNCTION_48
0x400b240	            0x415e	                                 pop r14	      2555	eval.c	FUNCTION_48
0x400b242	              0xc3	                                     ret	      2555	eval.c	FUNCTION_48
0x400b243	       0xf1f440000	                   nop dword [rax + rax]	      2555	eval.c	FUNCTION_48
0x400b248	        0x488d7504	                      lea rsi, [rbp + 4]	      2512	eval.c	FUNCTION_48	CALL_2
0x400b24c	          0x4889df	                            mov rdi, rbx	      2512	eval.c	FUNCTION_48	CALL_2
0x400b24f	          0x4889ea	                            mov rdx, rbp	      2512	eval.c	FUNCTION_48	CALL_2
0x400b252	      0xe86954ffff	           call sym.skip_var_list.part.4	      2512	eval.c	FUNCTION_48	CALL_2
0x400b257	          0x4889c7	                            mov rdi, rax	      2512	eval.c	FUNCTION_48	CALL_2
0x400b25a	            0xeb92	                           jmp 0x400b1ee	      2512	eval.c	FUNCTION_48	CALL_2
0x400b25c	         0xf1f4000	                         nop dword [rax]	      2512	eval.c	FUNCTION_48	CALL_2
0x400b260	         0xfb65002	               movzx edx, byte [rax + 2]	      2517	eval.c	FUNCTION_48	IF_3	CALL_4
0x400b264	          0x80fa20	                            cmp dl, 0x20	      2517	eval.c	FUNCTION_48	IF_3	CALL_4
0x400b267	            0x7405	                            je 0x400b26e	      2517	eval.c	FUNCTION_48	IF_3	CALL_4
0x400b269	          0x80fa09	                               cmp dl, 9	      2517	eval.c	FUNCTION_48	IF_3	CALL_4
0x400b26c	            0x7598	                           jne 0x400b206	      2517	eval.c	FUNCTION_48	IF_3	CALL_4
0x400b26e	          0x4585ed	                         test r13d, r13d	      2523	eval.c	FUNCTION_48	IF_4
0x400b271	            0x745d	                            je 0x400b2d0	      2523	eval.c	FUNCTION_48	IF_4
0x400b273	        0x488d7802	                      lea rdi, [rax + 2]	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x400b277	    0x830500000000	               add dword [0x0400b27e], 1	      2524	eval.c	FUNCTION_48	IF_4
0x400b27e	      0xe800000000	                          call 0x400b283	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x400b283	            0x31c9	                            xor ecx, ecx	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x400b285	          0x4c89f2	                            mov rdx, r14	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x400b288	          0x4889e6	                            mov rsi, rsp	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x400b28b	          0x4889c7	                            mov rdi, rax	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x400b28e	      0xe800000000	                          call 0x400b293	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x400b293	          0x83f801	                              cmp eax, 1	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x400b296	     0xf849c000000	                            je 0x400b338	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x400b29c	    0x832d00000000	               sub dword [0x0400b2a3], 1	      2552	eval.c	FUNCTION_48	IF_9
0x400b2a3	          0x4889e8	                            mov rax, rbp	      2552	eval.c	FUNCTION_48	IF_9
0x400b2a6	      0xe977ffffff	                           jmp 0x400b222	      2552	eval.c	FUNCTION_48	IF_9
0x400b2ab	       0xf1f440000	                   nop dword [rax + rax]	      2552	eval.c	FUNCTION_48	IF_9
0x400b2b0	        0x807b0100	                   cmp byte [rbx + 1], 0	      1467	eval.c	FUNCTION_34	IF_1
0x400b2b4	          0x4889df	                            mov rdi, rbx	      1467	eval.c	FUNCTION_34	IF_1
0x400b2b7	     0xf8424ffffff	                            je 0x400b1e1	      1467	eval.c	FUNCTION_34	IF_1
0x400b2bd	        0x488d7b02	                      lea rdi, [rbx + 2]	      1468	eval.c	FUNCTION_34	IF_1
0x400b2c1	      0xe928ffffff	                           jmp 0x400b1ee	      1468	eval.c	FUNCTION_34	IF_1
0x400b2c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1468	eval.c	FUNCTION_34	IF_1
0x400b2d0	        0x488d7802	                      lea rdi, [rax + 2]	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x400b2d4	      0xe800000000	                          call 0x400b2d9	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x400b2d9	      0xb901000000	                              mov ecx, 1	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x400b2de	          0x4c89f2	                            mov rdx, r14	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x400b2e1	          0x4889e6	                            mov rsi, rsp	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x400b2e4	          0x4889c7	                            mov rdi, rax	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x400b2e7	      0xe800000000	                          call 0x400b2ec	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x400b2ec	          0x83f801	                              cmp eax, 1	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x400b2ef	            0x740f	                            je 0x400b300	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x400b2f1	          0x4889e8	                            mov rax, rbp	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x400b2f4	      0xe929ffffff	                           jmp 0x400b222	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x400b2f9	     0xf1f80000000	                         nop dword [rax]	      2525	eval.c	FUNCTION_48	IF_5	CALL_8
0x400b300	        0x833c2405	                      cmp dword [rsp], 5	      2531	eval.c	FUNCTION_48	IF_5	IF_6	IF_7
0x400b304	    0x41c704240000	                      mov dword [r12], 0	      2527	eval.c	FUNCTION_48	IF_5
0x400b30c	            0x7441	                            je 0x400b34f	      2531	eval.c	FUNCTION_48	IF_5	IF_6	IF_7
0x400b30e	      0xba05000000	                              mov edx, 5	      2533	eval.c	FUNCTION_48	IF_5	IF_6	IF_7	CALL_10
0x400b313	      0xbe00000000	                              mov esi, 0	      2533	eval.c	FUNCTION_48	IF_5	IF_6	IF_7	CALL_10
0x400b318	            0x31ff	                            xor edi, edi	      2533	eval.c	FUNCTION_48	IF_5	IF_6	IF_7	CALL_10
0x400b31a	      0xe800000000	                          call 0x400b31f	      2533	eval.c	FUNCTION_48	IF_5	IF_6	IF_7	CALL_10
0x400b31f	          0x4889c7	                            mov rdi, rax	      2533	eval.c	FUNCTION_48	IF_5	IF_6	IF_7	CALL_10
0x400b322	      0xe800000000	                          call 0x400b327	      2533	eval.c	FUNCTION_48	IF_5	IF_6	IF_7	CALL_10
0x400b327	          0x4889e7	                            mov rdi, rsp	      2534	eval.c	FUNCTION_48	IF_5	IF_6	IF_7	CALL_11
0x400b32a	      0xe800000000	                          call 0x400b32f	      2534	eval.c	FUNCTION_48	IF_5	IF_6	IF_7	CALL_11
0x400b32f	            0xebc0	                           jmp 0x400b2f1	      2534	eval.c	FUNCTION_48	IF_5	IF_6	IF_7	CALL_11
0x400b331	     0xf1f80000000	                         nop dword [rax]	      2534	eval.c	FUNCTION_48	IF_5	IF_6	IF_7	CALL_11
0x400b338	    0x41c704240000	                      mov dword [r12], 0	      2527	eval.c	FUNCTION_48	IF_5
0x400b340	      0xe957ffffff	                           jmp 0x400b29c	      2527	eval.c	FUNCTION_48	IF_5
0x400b345	           0xf1f00	                         nop dword [rax]	      2527	eval.c	FUNCTION_48	IF_5
0x400b348	            0x31c0	                            xor eax, eax	      2510	eval.c	FUNCTION_48	IF_1
0x400b34a	      0xe9d3feffff	                           jmp 0x400b222	      2510	eval.c	FUNCTION_48	IF_1
0x400b34f	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      2530	eval.c	FUNCTION_48	IF_5	IF_6
0x400b354	          0x4885db	                           test rbx, rbx	      2536	eval.c	FUNCTION_48	IF_5	IF_6	ELSE_1	IF_8
0x400b357	            0x741c	                            je 0x400b375	      2536	eval.c	FUNCTION_48	IF_5	IF_6	ELSE_1	IF_8
0x400b359	        0x488d7508	                      lea rsi, [rbp + 8]	      2546	eval.c	FUNCTION_48	IF_5	IF_6	ELSE_2	CALL_13
0x400b35d	        0x48895d18	            mov qword [rbp + 0x18], rbx 	      2545	eval.c	FUNCTION_48	IF_5	IF_6	ELSE_2
0x400b361	          0x4889df	                            mov rdi, rbx	      2546	eval.c	FUNCTION_48	IF_5	IF_6	ELSE_2	CALL_13
0x400b364	      0xe800000000	                          call 0x400b369	      2546	eval.c	FUNCTION_48	IF_5	IF_6	ELSE_2	CALL_13
0x400b369	          0x488b03	                    mov rax, qword [rbx]	      2547	eval.c	FUNCTION_48	IF_5	IF_6	ELSE_2
0x400b36c	        0x48894508	                mov qword [rbp + 8], rax	      2547	eval.c	FUNCTION_48	IF_5	IF_6	ELSE_2
0x400b370	      0xe97cffffff	                           jmp 0x400b2f1	      2547	eval.c	FUNCTION_48	IF_5	IF_6	ELSE_2
0x400b375	          0x4889e7	                            mov rdi, rsp	      2539	eval.c	FUNCTION_48	IF_5	IF_6	ELSE_1	IF_8	CALL_12
0x400b378	      0xe800000000	                          call 0x400b37d	      2539	eval.c	FUNCTION_48	IF_5	IF_6	ELSE_1	IF_8	CALL_12
0x400b37d	      0xe96fffffff	                           jmp 0x400b2f1	      2539	eval.c	FUNCTION_48	IF_5	IF_6	ELSE_1	IF_8	CALL_12
0x400b382	      0xe800000000	                          call 0x400b387	      2555	eval.c	FUNCTION_48
eval_to_string_safe	functions,0:SWITCH,0:IF,2:DO,0:ELSE,0:WHILE,0:CALL,3:FOR,0	88
0x400b920	            0x4155	                                push r13	       860	eval.c	FUNCTION_19
0x400b922	            0x4154	                                push r12	       860	eval.c	FUNCTION_19
0x400b924	          0x4189d5	                           mov r13d, edx	       860	eval.c	FUNCTION_19
0x400b927	              0x55	                                push rbp	       860	eval.c	FUNCTION_19
0x400b928	              0x53	                                push rbx	       860	eval.c	FUNCTION_19
0x400b929	          0x4989f4	                            mov r12, rsi	       860	eval.c	FUNCTION_19
0x400b92c	          0x4889fb	                            mov rbx, rdi	       860	eval.c	FUNCTION_19
0x400b92f	        0x4883ec28	                           sub rsp, 0x28	       860	eval.c	FUNCTION_19
0x400b933	    0x64488b042528	                mov rax, qword fs:[0x28]	       860	eval.c	FUNCTION_19
0x400b93c	      0x4889442418	             mov qword [rsp + 0x18], rax	       860	eval.c	FUNCTION_19
0x400b941	            0x31c0	                            xor eax, eax	       860	eval.c	FUNCTION_19
0x400b943	      0xe800000000	                          call 0x400b948	       864	eval.c	FUNCTION_19	CALL_1
0x400b948	          0x4585ed	                         test r13d, r13d	       865	eval.c	FUNCTION_19	IF_1
0x400b94b	          0x4889c5	                            mov rbp, rax	       864	eval.c	FUNCTION_19	CALL_1
0x400b94e	     0xf848c000000	                            je 0x400b9e0	       865	eval.c	FUNCTION_19	IF_1
0x400b954	      0xb901000000	                              mov ecx, 1	       820	eval.c	FUNCTION_18	IF_1	CALL_1
0x400b959	          0x4c89e2	                            mov rdx, r12	       820	eval.c	FUNCTION_18	IF_1	CALL_1
0x400b95c	          0x4889e6	                            mov rsi, rsp	       820	eval.c	FUNCTION_18	IF_1	CALL_1
0x400b95f	          0x4889df	                            mov rdi, rbx	       820	eval.c	FUNCTION_18	IF_1	CALL_1
0x400b962	    0x830500000000	               add dword [0x0400b969], 1	       866	eval.c	FUNCTION_19	IF_1
0x400b969	    0x830500000000	               add dword [0x0400b970], 1	       867	eval.c	FUNCTION_19
0x400b970	      0xe800000000	                          call 0x400b975	       820	eval.c	FUNCTION_18	IF_1	CALL_1
0x400b975	            0x85c0	                           test eax, eax	       820	eval.c	FUNCTION_18	IF_1	CALL_1
0x400b977	     0xf84f2000000	                            je 0x400ba6f	       820	eval.c	FUNCTION_18	IF_1	CALL_1
0x400b97d	      0xbe00000000	                              mov esi, 0	      7085	eval.c	FUNCTION_128	CALL_1
0x400b982	          0x4889e7	                            mov rdi, rsp	      7085	eval.c	FUNCTION_128	CALL_1
0x400b985	      0xe800000000	                          call 0x400b98a	      7085	eval.c	FUNCTION_128	CALL_1
0x400b98a	          0x4885c0	                           test rax, rax	      7087	eval.c	FUNCTION_128
0x400b98d	     0xf84bd000000	                            je 0x400ba50	      7087	eval.c	FUNCTION_128
0x400b993	          0x4889c7	                            mov rdi, rax	       844	eval.c	FUNCTION_18	ELSE_1	CALL_9
0x400b996	      0xe800000000	                          call 0x400b99b	       844	eval.c	FUNCTION_18	ELSE_1	CALL_9
0x400b99b	          0x4889e7	                            mov rdi, rsp	       845	eval.c	FUNCTION_18	ELSE_1	CALL_10
0x400b99e	          0x4889c3	                            mov rbx, rax	       844	eval.c	FUNCTION_18	ELSE_1	CALL_9
0x400b9a1	      0xe800000000	                          call 0x400b9a6	       845	eval.c	FUNCTION_18	ELSE_1	CALL_10
0x400b9a6	    0x832d00000000	               sub dword [0x0400b9ad], 1	       870	eval.c	FUNCTION_19	IF_2
0x400b9ad	          0x4889ef	                            mov rdi, rbp	       872	eval.c	FUNCTION_19	CALL_3
0x400b9b0	    0x832d00000000	               sub dword [0x0400b9b7], 1	       871	eval.c	FUNCTION_19
0x400b9b7	      0xe800000000	                          call 0x400b9bc	       872	eval.c	FUNCTION_19	CALL_3
0x400b9bc	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       874	eval.c	FUNCTION_19
0x400b9c1	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       874	eval.c	FUNCTION_19
0x400b9ca	          0x4889d8	                            mov rax, rbx	       874	eval.c	FUNCTION_19
0x400b9cd	     0xf8597000000	                           jne 0x400ba6a	       874	eval.c	FUNCTION_19
0x400b9d3	        0x4883c428	                           add rsp, 0x28	       874	eval.c	FUNCTION_19
0x400b9d7	              0x5b	                                 pop rbx	       874	eval.c	FUNCTION_19
0x400b9d8	              0x5d	                                 pop rbp	       874	eval.c	FUNCTION_19
0x400b9d9	            0x415c	                                 pop r12	       874	eval.c	FUNCTION_19
0x400b9db	            0x415d	                                 pop r13	       874	eval.c	FUNCTION_19
0x400b9dd	              0xc3	                                     ret	       874	eval.c	FUNCTION_19
0x400b9de	            0x6690	                                     nop	       874	eval.c	FUNCTION_19
0x400b9e0	      0xb901000000	                              mov ecx, 1	       820	eval.c	FUNCTION_18	IF_1	CALL_1
0x400b9e5	          0x4c89e2	                            mov rdx, r12	       820	eval.c	FUNCTION_18	IF_1	CALL_1
0x400b9e8	          0x4889e6	                            mov rsi, rsp	       820	eval.c	FUNCTION_18	IF_1	CALL_1
0x400b9eb	          0x4889df	                            mov rdi, rbx	       820	eval.c	FUNCTION_18	IF_1	CALL_1
0x400b9ee	    0x830500000000	               add dword [0x0400b9f5], 1	       867	eval.c	FUNCTION_19
0x400b9f5	      0xe800000000	                          call 0x400b9fa	       820	eval.c	FUNCTION_18	IF_1	CALL_1
0x400b9fa	            0x85c0	                           test eax, eax	       820	eval.c	FUNCTION_18	IF_1	CALL_1
0x400b9fc	            0x742a	                            je 0x400ba28	       820	eval.c	FUNCTION_18	IF_1	CALL_1
0x400b9fe	      0xbe00000000	                              mov esi, 0	      7085	eval.c	FUNCTION_128	CALL_1
0x400ba03	          0x4889e7	                            mov rdi, rsp	      7085	eval.c	FUNCTION_128	CALL_1
0x400ba06	      0xe800000000	                          call 0x400ba0b	      7085	eval.c	FUNCTION_128	CALL_1
0x400ba0b	          0x4885c0	                           test rax, rax	      7087	eval.c	FUNCTION_128
0x400ba0e	            0x7420	                            je 0x400ba30	      7087	eval.c	FUNCTION_128
0x400ba10	          0x4889c7	                            mov rdi, rax	       844	eval.c	FUNCTION_18	ELSE_1	CALL_9
0x400ba13	      0xe800000000	                          call 0x400ba18	       844	eval.c	FUNCTION_18	ELSE_1	CALL_9
0x400ba18	          0x4889e7	                            mov rdi, rsp	       845	eval.c	FUNCTION_18	ELSE_1	CALL_10
0x400ba1b	          0x4889c3	                            mov rbx, rax	       844	eval.c	FUNCTION_18	ELSE_1	CALL_9
0x400ba1e	      0xe800000000	                          call 0x400ba23	       845	eval.c	FUNCTION_18	ELSE_1	CALL_10
0x400ba23	            0xeb88	                           jmp 0x400b9ad	       845	eval.c	FUNCTION_18	ELSE_1	CALL_10
0x400ba25	           0xf1f00	                         nop dword [rax]	       845	eval.c	FUNCTION_18	ELSE_1	CALL_10
0x400ba28	            0x31db	                            xor ebx, ebx	       821	eval.c	FUNCTION_18	IF_1
0x400ba2a	      0xe97effffff	                           jmp 0x400b9ad	       821	eval.c	FUNCTION_18	IF_1
0x400ba2f	              0x90	                                     nop	       821	eval.c	FUNCTION_18	IF_1
0x400ba30	      0xbf00000000	                              mov edi, 0	       844	eval.c	FUNCTION_18	ELSE_1	CALL_9
0x400ba35	      0xe800000000	                          call 0x400ba3a	       844	eval.c	FUNCTION_18	ELSE_1	CALL_9
0x400ba3a	          0x4889e7	                            mov rdi, rsp	       845	eval.c	FUNCTION_18	ELSE_1	CALL_10
0x400ba3d	          0x4889c3	                            mov rbx, rax	       844	eval.c	FUNCTION_18	ELSE_1	CALL_9
0x400ba40	      0xe800000000	                          call 0x400ba45	       845	eval.c	FUNCTION_18	ELSE_1	CALL_10
0x400ba45	      0xe963ffffff	                           jmp 0x400b9ad	       845	eval.c	FUNCTION_18	ELSE_1	CALL_10
0x400ba4a	    0x660f1f440000	                    nop word [rax + rax]	       845	eval.c	FUNCTION_18	ELSE_1	CALL_10
0x400ba50	      0xbf00000000	                              mov edi, 0	       844	eval.c	FUNCTION_18	ELSE_1	CALL_9
0x400ba55	      0xe800000000	                          call 0x400ba5a	       844	eval.c	FUNCTION_18	ELSE_1	CALL_9
0x400ba5a	          0x4889e7	                            mov rdi, rsp	       845	eval.c	FUNCTION_18	ELSE_1	CALL_10
0x400ba5d	          0x4889c3	                            mov rbx, rax	       844	eval.c	FUNCTION_18	ELSE_1	CALL_9
0x400ba60	      0xe800000000	                          call 0x400ba65	       845	eval.c	FUNCTION_18	ELSE_1	CALL_10
0x400ba65	      0xe93cffffff	                           jmp 0x400b9a6	       845	eval.c	FUNCTION_18	ELSE_1	CALL_10
0x400ba6a	      0xe800000000	                          call 0x400ba6f	       874	eval.c	FUNCTION_19
0x400ba6f	            0x31db	                            xor ebx, ebx	       821	eval.c	FUNCTION_18	IF_1
0x400ba71	      0xe930ffffff	                           jmp 0x400b9a6	       821	eval.c	FUNCTION_18	IF_1
typval_tostring	functions,0:SWITCH,0:IF,2:DO,0:ELSE,0:WHILE,0:CALL,3:FOR,0	34
0x4012510	        0x4883ec68	                           sub rsp, 0x68	      9396	eval.c	FUNCTION_182
0x4012514	    0x64488b042528	                mov rax, qword fs:[0x28]	      9396	eval.c	FUNCTION_182
0x401251d	      0x4889442458	             mov qword [rsp + 0x58], rax	      9396	eval.c	FUNCTION_182
0x4012522	            0x31c0	                            xor eax, eax	      9396	eval.c	FUNCTION_182
0x4012524	          0x4885ff	                           test rdi, rdi	      9401	eval.c	FUNCTION_182	IF_1
0x4012527	            0x7447	                            je 0x4012570	      9401	eval.c	FUNCTION_182	IF_1
0x4012529	        0x4883ec08	                              sub rsp, 8	      5759	eval.c	FUNCTION_89	CALL_1
0x401252d	            0x31c9	                            xor ecx, ecx	      5759	eval.c	FUNCTION_89	CALL_1
0x401252f	          0x4531c0	                            xor r8d, r8d	      5759	eval.c	FUNCTION_89	CALL_1
0x4012532	            0x6a00	                                  push 0	      5759	eval.c	FUNCTION_89	CALL_1
0x4012534	    0x41b901000000	                              mov r9d, 1	      5759	eval.c	FUNCTION_89	CALL_1
0x401253a	      0x488d542420	                   lea rdx, [rsp + 0x20]	      5759	eval.c	FUNCTION_89	CALL_1
0x401253f	      0x488d742418	                   lea rsi, [rsp + 0x18]	      5759	eval.c	FUNCTION_89	CALL_1
0x4012544	      0xe800000000	                          call 0x4012549	      5759	eval.c	FUNCTION_89	CALL_1
0x4012549	          0x4885c0	                           test rax, rax	      9405	eval.c	FUNCTION_182	IF_2
0x401254c	              0x5a	                                 pop rdx	      9405	eval.c	FUNCTION_182	IF_2
0x401254d	              0x59	                                 pop rcx	      9405	eval.c	FUNCTION_182	IF_2
0x401254e	            0x7408	                            je 0x4012558	      9405	eval.c	FUNCTION_182	IF_2
0x4012550	    0x48837c240800	                  cmp qword [rsp + 8], 0	      9405	eval.c	FUNCTION_182	IF_2
0x4012556	            0x7428	                            je 0x4012580	      9405	eval.c	FUNCTION_182	IF_2
0x4012558	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	      9408	eval.c	FUNCTION_182
0x401255d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      9408	eval.c	FUNCTION_182
0x4012566	            0x7522	                           jne 0x401258a	      9408	eval.c	FUNCTION_182
0x4012568	        0x4883c468	                           add rsp, 0x68	      9408	eval.c	FUNCTION_182
0x401256c	              0xc3	                                     ret	      9408	eval.c	FUNCTION_182
0x401256d	           0xf1f00	                         nop dword [rax]	      9408	eval.c	FUNCTION_182
0x4012570	      0xbf00000000	                              mov edi, 0	      9402	eval.c	FUNCTION_182	CALL_1
0x4012575	      0xe800000000	                          call 0x401257a	      9402	eval.c	FUNCTION_182	CALL_1
0x401257a	            0xebdc	                           jmp 0x4012558	      9402	eval.c	FUNCTION_182	CALL_1
0x401257c	         0xf1f4000	                         nop dword [rax]	      9402	eval.c	FUNCTION_182	CALL_1
0x4012580	          0x4889c7	                            mov rdi, rax	      9406	eval.c	FUNCTION_182	CALL_3
0x4012583	      0xe800000000	                          call 0x4012588	      9406	eval.c	FUNCTION_182	CALL_3
0x4012588	            0xebce	                           jmp 0x4012558	      9406	eval.c	FUNCTION_182	CALL_3
0x401258a	      0xe800000000	                          call 0x401258f	      9408	eval.c	FUNCTION_182
get_user_input	functions,0:SWITCH,0:IF,10:DO,0:ELSE,1:WHILE,0:CALL,17:FOR,0	178
0x4006610	            0x4157	                                push r15	      7909	eval.c	FUNCTION_151
0x4006612	            0x4156	                                push r14	      7909	eval.c	FUNCTION_151
0x4006614	          0x4189cf	                           mov r15d, ecx	      7909	eval.c	FUNCTION_151
0x4006617	            0x4155	                                push r13	      7909	eval.c	FUNCTION_151
0x4006619	            0x4154	                                push r12	      7909	eval.c	FUNCTION_151
0x400661b	          0x4189d6	                           mov r14d, edx	      7909	eval.c	FUNCTION_151
0x400661e	              0x55	                                push rbp	      7909	eval.c	FUNCTION_151
0x400661f	              0x53	                                push rbx	      7909	eval.c	FUNCTION_151
0x4006620	          0x4889f5	                            mov rbp, rsi	      7909	eval.c	FUNCTION_151
0x4006623	      0xbe00000000	                              mov esi, 0	      7098	eval.c	FUNCTION_129	CALL_1
0x4006628	          0x4989fc	                            mov r12, rdi	      7909	eval.c	FUNCTION_151
0x400662b	    0x4881ec980000	                           sub rsp, 0x98	      7909	eval.c	FUNCTION_151
0x4006632	    0x64488b042528	                mov rax, qword fs:[0x28]	      7909	eval.c	FUNCTION_151
0x400663b	    0x488984248800	             mov qword [rsp + 0x88], rax	      7909	eval.c	FUNCTION_151
0x4006643	            0x31c0	                            xor eax, eax	      7909	eval.c	FUNCTION_151
0x4006645	      0xe800000000	                          call 0x400664a	      7098	eval.c	FUNCTION_129	CALL_1
0x400664a	    0x448b2d000000	           mov r13d, dword [0x04006651] 	      7914	eval.c	FUNCTION_151
0x4006651	    0x48c745080000	                  mov qword [rbp + 8], 0	      7920	eval.c	FUNCTION_151
0x4006659	          0x4889c3	                            mov rbx, rax	      7098	eval.c	FUNCTION_129	CALL_1
0x400665c	    0xc74500020000	                      mov dword [rbp], 2	      7919	eval.c	FUNCTION_151
0x4006663	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	      7916	eval.c	FUNCTION_151
0x400666b	    0x48c744243000	               mov qword [rsp + 0x30], 0	      7917	eval.c	FUNCTION_151
0x4006674	      0xe800000000	                          call 0x4006679	      7925	eval.c	FUNCTION_151	IF_1	CALL_3
0x4006679	            0x85c0	                           test eax, eax	      7925	eval.c	FUNCTION_151	IF_1	CALL_3
0x400667b	     0xf852f010000	                           jne 0x40067b0	      7925	eval.c	FUNCTION_151	IF_1	CALL_3
0x4006681	          0x4885db	                           test rbx, rbx	      7930	eval.c	FUNCTION_151	IF_2
0x4006684	    0xc70500000000	               mov dword [0x0400668e], 0	      7929	eval.c	FUNCTION_151
0x400668e	     0xf84e9000000	                            je 0x400677d	      7930	eval.c	FUNCTION_151	IF_2
0x4006694	      0xbe0a000000	                            mov esi, 0xa	      7934	eval.c	FUNCTION_151	IF_2	CALL_4
0x4006699	          0x4889df	                            mov rdi, rbx	      7934	eval.c	FUNCTION_151	IF_2	CALL_4
0x400669c	      0xe800000000	                          call 0x40066a1	      7934	eval.c	FUNCTION_151	IF_2	CALL_4
0x40066a1	          0x4885c0	                           test rax, rax	      7935	eval.c	FUNCTION_151	IF_2	IF_3
0x40066a4	      0x48895c2408	                mov qword [rsp + 8], rbx	      7935	eval.c	FUNCTION_151	IF_2	IF_3
0x40066a9	            0x744e	                            je 0x40066f9	      7935	eval.c	FUNCTION_151	IF_2	IF_3
0x40066ab	         0xfb65001	               movzx edx, byte [rax + 1]	      7940	eval.c	FUNCTION_151	IF_2	ELSE_1
0x40066af	        0x488d4801	                      lea rcx, [rax + 1]	      7939	eval.c	FUNCTION_151	IF_2	ELSE_1
0x40066b3	        0xc6400100	                   mov byte [rax + 1], 0	      7941	eval.c	FUNCTION_151	IF_2	ELSE_1
0x40066b7	      0x4889442410	             mov qword [rsp + 0x10], rax	      7941	eval.c	FUNCTION_151	IF_2	ELSE_1
0x40066bc	      0x48894c2408	                mov qword [rsp + 8], rcx	      7939	eval.c	FUNCTION_151	IF_2	ELSE_1
0x40066c1	        0x8854241f	               mov byte [rsp + 0x1f], dl	      7940	eval.c	FUNCTION_151	IF_2	ELSE_1
0x40066c5	      0xe800000000	                          call 0x40066ca	      7942	eval.c	FUNCTION_151	IF_2	ELSE_1	CALL_5
0x40066ca	      0xe800000000	                          call 0x40066cf	      7943	eval.c	FUNCTION_151	IF_2	ELSE_1	CALL_6
0x40066cf	    0x8b3500000000	            mov esi, dword [0x040066d5] 	      7944	eval.c	FUNCTION_151	IF_2	ELSE_1	CALL_7
0x40066d5	          0x4889df	                            mov rdi, rbx	      7944	eval.c	FUNCTION_151	IF_2	ELSE_1	CALL_7
0x40066d8	      0xe800000000	                          call 0x40066dd	      7944	eval.c	FUNCTION_151	IF_2	ELSE_1	CALL_7
0x40066dd	    0xc70500000000	               mov dword [0x040066e7], 0	      7945	eval.c	FUNCTION_151	IF_2	ELSE_1
0x40066e7	      0xe800000000	                          call 0x40066ec	      7946	eval.c	FUNCTION_151	IF_2	ELSE_1	CALL_8
0x40066ec	       0xfb654241f	           movzx edx, byte [rsp + 0x1f] 	      7947	eval.c	FUNCTION_151	IF_2	ELSE_1
0x40066f1	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      7947	eval.c	FUNCTION_151	IF_2	ELSE_1
0x40066f6	          0x885001	                  mov byte [rax + 1], dl	      7947	eval.c	FUNCTION_151	IF_2	ELSE_1
0x40066f9	      0x418b742410	            mov esi, dword [r12 + 0x10] 	      7951	eval.c	FUNCTION_151	IF_2	IF_4
0x40066fe	    0x8b0500000000	            mov eax, dword [0x04006704] 	      7949	eval.c	FUNCTION_151	IF_2
0x4006704	            0x85f6	                           test esi, esi	      7951	eval.c	FUNCTION_151	IF_2	IF_4
0x4006706	    0x890500000000	            mov dword [0x0400670c], eax 	      7949	eval.c	FUNCTION_151	IF_2
0x400670c	     0xf85ae000000	                           jne 0x40067c0	      7951	eval.c	FUNCTION_151	IF_2	IF_4
0x4006712	            0x31ff	                            xor edi, edi	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4006714	          0x4585ff	                         test r15d, r15d	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4006717	    0x8b1d00000000	            mov ebx, dword [0x0400671d] 	      7980	eval.c	FUNCTION_151	IF_2	IF_9
0x400671d	      0x4c8b442430	              mov r8, qword [rsp + 0x30]	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4006722	    0xc70500000000	               mov dword [0x0400672c], 0	      7981	eval.c	FUNCTION_151	IF_2	IF_9
0x400672c	        0x8b4c242c	            mov ecx, dword [rsp + 0x2c] 	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4006730	    0x8b1500000000	            mov edx, dword [0x04006736] 	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4006736	            0x7505	                           jne 0x400673d	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4006738	      0xbf40000000	                           mov edi, 0x40	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x400673d	      0x488b742408	                mov rsi, qword [rsp + 8]	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4006742	      0xe800000000	                          call 0x4006747	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4006747	          0x4585f6	                         test r14d, r14d	      7987	eval.c	FUNCTION_151	IF_2	IF_10
0x400674a	        0x48894508	                mov qword [rbp + 8], rax	      7982	eval.c	FUNCTION_151	IF_2	IF_9
0x400674e	    0x891d00000000	            mov dword [0x04006754], ebx 	      7985	eval.c	FUNCTION_151	IF_2	IF_9
0x4006754	            0x7409	                            je 0x400675f	      7987	eval.c	FUNCTION_151	IF_2	IF_10
0x4006756	          0x4885c0	                           test rax, rax	      7987	eval.c	FUNCTION_151	IF_2	IF_10
0x4006759	     0xf8441010000	                            je 0x40068a0	      7987	eval.c	FUNCTION_151	IF_2	IF_10
0x400675f	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      7993	eval.c	FUNCTION_151	IF_2	CALL_17
0x4006764	      0xe800000000	                          call 0x4006769	      7993	eval.c	FUNCTION_151	IF_2	CALL_17
0x4006769	    0xc70500000000	               mov dword [0x04006773], 0	      7996	eval.c	FUNCTION_151	IF_2
0x4006773	    0xc70500000000	               mov dword [0x0400677d], 0	      7997	eval.c	FUNCTION_151	IF_2
0x400677d	    0x44892d000000	           mov dword [0x04006784], r13d 	      7999	eval.c	FUNCTION_151
0x4006784	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	      8000	eval.c	FUNCTION_151
0x400678c	    0x644833042528	                xor rax, qword fs:[0x28]	      8000	eval.c	FUNCTION_151
0x4006795	     0xf85a5010000	                           jne 0x4006940	      8000	eval.c	FUNCTION_151
0x400679b	    0x4881c4980000	                           add rsp, 0x98	      8000	eval.c	FUNCTION_151
0x40067a2	              0x5b	                                 pop rbx	      8000	eval.c	FUNCTION_151
0x40067a3	              0x5d	                                 pop rbp	      8000	eval.c	FUNCTION_151
0x40067a4	            0x415c	                                 pop r12	      8000	eval.c	FUNCTION_151
0x40067a6	            0x415d	                                 pop r13	      8000	eval.c	FUNCTION_151
0x40067a8	            0x415e	                                 pop r14	      8000	eval.c	FUNCTION_151
0x40067aa	            0x415f	                                 pop r15	      8000	eval.c	FUNCTION_151
0x40067ac	              0xc3	                                     ret	      8000	eval.c	FUNCTION_151
0x40067ad	           0xf1f00	                         nop dword [rax]	      8000	eval.c	FUNCTION_151
0x40067b0	      0xe800000000	                          call 0x40067b5	      7925	eval.c	FUNCTION_151	IF_1	CALL_3
0x40067b5	            0x85c0	                           test eax, eax	      7925	eval.c	FUNCTION_151	IF_1	CALL_3
0x40067b7	            0x74cb	                            je 0x4006784	      7925	eval.c	FUNCTION_151	IF_1	CALL_3
0x40067b9	      0xe9c3feffff	                           jmp 0x4006681	      7925	eval.c	FUNCTION_151	IF_1	CALL_3
0x40067be	            0x6690	                                     nop	      7925	eval.c	FUNCTION_151	IF_1	CALL_3
0x40067c0	      0x498d7c2410	                   lea rdi, [r12 + 0x10]	      7953	eval.c	FUNCTION_151	IF_2	IF_4	CALL_9
0x40067c5	      0x488d742440	                   lea rsi, [rsp + 0x40]	      7953	eval.c	FUNCTION_151	IF_2	IF_4	CALL_9
0x40067ca	      0xe800000000	                          call 0x40067cf	      7953	eval.c	FUNCTION_151	IF_2	IF_4	CALL_9
0x40067cf	          0x4885c0	                           test rax, rax	      7954	eval.c	FUNCTION_151	IF_2	IF_4	IF_5
0x40067d2	          0x4889c3	                            mov rbx, rax	      7953	eval.c	FUNCTION_151	IF_2	IF_4	CALL_9
0x40067d5	            0x7459	                            je 0x4006830	      7954	eval.c	FUNCTION_151	IF_2	IF_4	IF_5
0x40067d7	          0x4889c7	                            mov rdi, rax	      7955	eval.c	FUNCTION_151	IF_2	IF_4	CALL_10
0x40067da	      0xe800000000	                          call 0x40067df	      7955	eval.c	FUNCTION_151	IF_2	IF_4	CALL_10
0x40067df	          0x4585f6	                         test r14d, r14d	      7957	eval.c	FUNCTION_151	IF_2	IF_4	IF_6
0x40067e2	            0x7451	                            je 0x4006835	      7957	eval.c	FUNCTION_151	IF_2	IF_4	IF_6
0x40067e4	          0x4585ff	                         test r15d, r15d	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x40067e7	    0x8b1d00000000	            mov ebx, dword [0x040067ed] 	      7980	eval.c	FUNCTION_151	IF_2	IF_9
0x40067ed	      0x4c8b442430	              mov r8, qword [rsp + 0x30]	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x40067f2	    0xc70500000000	               mov dword [0x040067fc], 0	      7981	eval.c	FUNCTION_151	IF_2	IF_9
0x40067fc	        0x8b4c242c	            mov ecx, dword [rsp + 0x2c] 	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4006800	    0x8b1500000000	            mov edx, dword [0x04006806] 	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4006806	     0xf842cffffff	                            je 0x4006738	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x400680c	      0x488b742408	                mov rsi, qword [rsp + 8]	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4006811	            0x31ff	                            xor edi, edi	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4006813	      0xe800000000	                          call 0x4006818	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4006818	    0x891d00000000	            mov dword [0x0400681e], ebx 	      7985	eval.c	FUNCTION_151	IF_2	IF_9
0x400681e	        0x48894508	                mov qword [rbp + 8], rax	      7982	eval.c	FUNCTION_151	IF_2	IF_9
0x4006822	      0xe92fffffff	                           jmp 0x4006756	      7982	eval.c	FUNCTION_151	IF_2	IF_9
0x4006827	    0x660f1f840000	                    nop word [rax + rax]	      7982	eval.c	FUNCTION_151	IF_2	IF_9
0x4006830	          0x4585f6	                         test r14d, r14d	      7957	eval.c	FUNCTION_151	IF_2	IF_4	IF_6
0x4006833	            0x755b	                           jne 0x4006890	      7957	eval.c	FUNCTION_151	IF_2	IF_4	IF_6
0x4006835	      0x418b4c2420	            mov ecx, dword [r12 + 0x20] 	      7957	eval.c	FUNCTION_151	IF_2	IF_4	IF_6
0x400683a	            0x85c9	                           test ecx, ecx	      7957	eval.c	FUNCTION_151	IF_2	IF_4	IF_6
0x400683c	     0xf85a6000000	                           jne 0x40068e8	      7957	eval.c	FUNCTION_151	IF_2	IF_4	IF_6
0x4006842	          0x4885db	                           test rbx, rbx	      7978	eval.c	FUNCTION_151	IF_2	IF_9
0x4006845	     0xf8414ffffff	                            je 0x400675f	      7978	eval.c	FUNCTION_151	IF_2	IF_9
0x400684b	          0x4585ff	                         test r15d, r15d	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x400684e	    0x8b1d00000000	            mov ebx, dword [0x04006854] 	      7980	eval.c	FUNCTION_151	IF_2	IF_9
0x4006854	      0x4c8b442430	              mov r8, qword [rsp + 0x30]	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4006859	    0xc70500000000	               mov dword [0x04006863], 0	      7981	eval.c	FUNCTION_151	IF_2	IF_9
0x4006863	        0x8b4c242c	            mov ecx, dword [rsp + 0x2c] 	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4006867	    0x8b1500000000	            mov edx, dword [0x0400686d] 	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x400686d	     0xf84c5feffff	                            je 0x4006738	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4006873	      0x488b742408	                mov rsi, qword [rsp + 8]	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x4006878	            0x31ff	                            xor edi, edi	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x400687a	      0xe800000000	                          call 0x400687f	      7983	eval.c	FUNCTION_151	IF_2	IF_9	CALL_14
0x400687f	    0x891d00000000	            mov dword [0x04006885], ebx 	      7985	eval.c	FUNCTION_151	IF_2	IF_9
0x4006885	        0x48894508	                mov qword [rbp + 8], rax	      7982	eval.c	FUNCTION_151	IF_2	IF_9
0x4006889	      0xe9d1feffff	                           jmp 0x400675f	      7982	eval.c	FUNCTION_151	IF_2	IF_9
0x400688e	            0x6690	                                     nop	      7982	eval.c	FUNCTION_151	IF_2	IF_9
0x4006890	        0x488b4508	                mov rax, qword [rbp + 8]	      7982	eval.c	FUNCTION_151	IF_2	IF_9
0x4006894	      0xe9bdfeffff	                           jmp 0x4006756	      7982	eval.c	FUNCTION_151	IF_2	IF_9
0x4006899	     0xf1f80000000	                         nop dword [rax]	      7982	eval.c	FUNCTION_151	IF_2	IF_9
0x40068a0	      0x418b542410	            mov edx, dword [r12 + 0x10] 	      7988	eval.c	FUNCTION_151	IF_2	IF_10
0x40068a5	            0x85d2	                           test edx, edx	      7988	eval.c	FUNCTION_151	IF_2	IF_10
0x40068a7	     0xf84b2feffff	                            je 0x400675f	      7988	eval.c	FUNCTION_151	IF_2	IF_10
0x40068ad	      0x418b442420	            mov eax, dword [r12 + 0x20] 	      7989	eval.c	FUNCTION_151	IF_2	IF_10
0x40068b2	            0x85c0	                           test eax, eax	      7989	eval.c	FUNCTION_151	IF_2	IF_10
0x40068b4	     0xf84a5feffff	                            je 0x400675f	      7989	eval.c	FUNCTION_151	IF_2	IF_10
0x40068ba	      0x498d7c2420	                   lea rdi, [r12 + 0x20]	      7085	eval.c	FUNCTION_128	CALL_1
0x40068bf	      0x488d742440	                   lea rsi, [rsp + 0x40]	      7085	eval.c	FUNCTION_128	CALL_1
0x40068c4	      0xe800000000	                          call 0x40068c9	      7085	eval.c	FUNCTION_128	CALL_1
0x40068c9	      0xbf00000000	                              mov edi, 0	      7087	eval.c	FUNCTION_128
0x40068ce	          0x4885c0	                           test rax, rax	      7087	eval.c	FUNCTION_128
0x40068d1	        0x480f45f8	                         cmovne rdi, rax	      7087	eval.c	FUNCTION_128
0x40068d5	      0xe800000000	                          call 0x40068da	      7990	eval.c	FUNCTION_151	IF_2	IF_10	CALL_16
0x40068da	        0x48894508	                mov qword [rbp + 8], rax	      7990	eval.c	FUNCTION_151	IF_2	IF_10	CALL_16
0x40068de	      0xe97cfeffff	                           jmp 0x400675f	      7990	eval.c	FUNCTION_151	IF_2	IF_10	CALL_16
0x40068e3	       0xf1f440000	                   nop dword [rax + rax]	      7990	eval.c	FUNCTION_151	IF_2	IF_10	CALL_16
0x40068e8	      0x498d7c2420	                   lea rdi, [r12 + 0x20]	      7966	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	CALL_11
0x40068ed	      0x488d742440	                   lea rsi, [rsp + 0x40]	      7966	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	CALL_11
0x40068f2	    0x48c745080000	                  mov qword [rbp + 8], 0	      7964	eval.c	FUNCTION_151	IF_2	IF_4	IF_6
0x40068fa	      0xe800000000	                          call 0x40068ff	      7966	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	CALL_11
0x40068ff	          0x4885c0	                           test rax, rax	      7967	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	IF_7
0x4006902	     0xf847cfeffff	                            je 0x4006784	      7967	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	IF_7
0x4006908	          0x4889c7	                            mov rdi, rax	      7970	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	CALL_12
0x400690b	      0x4889442410	             mov qword [rsp + 0x10], rax	      7970	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	CALL_12
0x4006910	      0xe800000000	                          call 0x4006915	      7970	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	CALL_12
0x4006915	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	      7972	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	IF_8	CALL_13
0x400691a	      0x4c8d442430	                    lea r8, [rsp + 0x30]	      7972	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	IF_8	CALL_13
0x400691f	      0x488d4c2438	                   lea rcx, [rsp + 0x38]	      7972	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	IF_8	CALL_13
0x4006924	      0x488d54242c	                   lea rdx, [rsp + 0x2c]	      7972	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	IF_8	CALL_13
0x4006929	            0x89c6	                            mov esi, eax	      7972	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	IF_8	CALL_13
0x400692b	          0x4c89cf	                             mov rdi, r9	      7972	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	IF_8	CALL_13
0x400692e	      0xe800000000	                          call 0x4006933	      7972	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	IF_8	CALL_13
0x4006933	            0x85c0	                           test eax, eax	      7972	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	IF_8	CALL_13
0x4006935	     0xf8449feffff	                            je 0x4006784	      7972	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	IF_8	CALL_13
0x400693b	      0xe902ffffff	                           jmp 0x4006842	      7972	eval.c	FUNCTION_151	IF_2	IF_4	IF_6	IF_8	CALL_13
0x4006940	      0xe800000000	                          call 0x4006945	      8000	eval.c	FUNCTION_151
set_cmdarg	functions,0:SWITCH,0:IF,16:DO,0:ELSE,6:WHILE,0:CALL,11:FOR,0	162
0x4002aa0	            0x4155	                                push r13	      6569	eval.c	FUNCTION_115
0x4002aa2	            0x4154	                                push r12	      6569	eval.c	FUNCTION_115
0x4002aa4	              0x55	                                push rbp	      6569	eval.c	FUNCTION_115
0x4002aa5	              0x53	                                push rbx	      6569	eval.c	FUNCTION_115
0x4002aa6	        0x4883ec18	                           sub rsp, 0x18	      6569	eval.c	FUNCTION_115
0x4002aaa	          0x4885ff	                           test rdi, rdi	      6575	eval.c	FUNCTION_115	IF_1
0x4002aad	    0x4c8b25000000	            mov r12, qword [0x04002ab4] 	      6574	eval.c	FUNCTION_115
0x4002ab4	     0xf847d020000	                            je 0x4002d37	      6575	eval.c	FUNCTION_115	IF_1
0x4002aba	          0x8b4778	            mov eax, dword [rdi + 0x78] 	      6582	eval.c	FUNCTION_115	IF_2
0x4002abd	          0x4889fd	                            mov rbp, rdi	      6582	eval.c	FUNCTION_115	IF_2
0x4002ac0	          0x83f801	                              cmp eax, 1	      6582	eval.c	FUNCTION_115	IF_2
0x4002ac3	     0xf84c7010000	                            je 0x4002c90	      6582	eval.c	FUNCTION_115	IF_2
0x4002ac9	          0x83f802	                              cmp eax, 2	      6584	eval.c	FUNCTION_115	ELSE_1	IF_3
0x4002acc	           0xf94c2	                                 sete dl	      6584	eval.c	FUNCTION_115	ELSE_1	IF_3
0x4002acf	           0xfb6da	                           movzx ebx, dl	      6584	eval.c	FUNCTION_115	ELSE_1	IF_3
0x4002ad2	           0xfb6d2	                           movzx edx, dl	      6584	eval.c	FUNCTION_115	ELSE_1	IF_3
0x4002ad5	    0x8d1cdd070000	                    lea ebx, [rbx*8 + 7]	      6584	eval.c	FUNCTION_115	ELSE_1	IF_3
0x4002adc	          0xc1e203	                              shl edx, 3	      6584	eval.c	FUNCTION_115	ELSE_1	IF_3
0x4002adf	          0x8b757c	            mov esi, dword [rbp + 0x7c] 	      6589	eval.c	FUNCTION_115	IF_4
0x4002ae2	    0x8bbd80000000	            mov edi, dword [rbp + 0x80] 	      6593	eval.c	FUNCTION_115	IF_5
0x4002ae8	            0x85f6	                           test esi, esi	      6589	eval.c	FUNCTION_115	IF_4
0x4002aea	           0xf44da	                          cmove ebx, edx	      6589	eval.c	FUNCTION_115	IF_4
0x4002aed	            0x85ff	                           test edi, edi	      6593	eval.c	FUNCTION_115	IF_5
0x4002aef	    0x4863bd840000	         movsxd rdi, dword [rbp + 0x84] 	      6595	eval.c	FUNCTION_115	IF_6
0x4002af6	          0x8d430a	                    lea eax, [rbx + 0xa]	      6593	eval.c	FUNCTION_115	IF_5
0x4002af9	           0xf45d8	                         cmovne ebx, eax	      6593	eval.c	FUNCTION_115	IF_5
0x4002afc	            0x85ff	                           test edi, edi	      6595	eval.c	FUNCTION_115	IF_6
0x4002afe	     0xf859c000000	                           jne 0x4002ba0	      6595	eval.c	FUNCTION_115	IF_6
0x4002b04	    0x8b8d88000000	            mov ecx, dword [rbp + 0x88] 	      6598	eval.c	FUNCTION_115	IF_7
0x4002b0a	          0x8d430b	                    lea eax, [rbx + 0xb]	      6598	eval.c	FUNCTION_115	IF_7
0x4002b0d	            0x85c9	                           test ecx, ecx	      6598	eval.c	FUNCTION_115	IF_7
0x4002b0f	           0xf45d8	                         cmovne ebx, eax	      6598	eval.c	FUNCTION_115	IF_7
0x4002b12	          0x8d7b01	                      lea edi, [rbx + 1]	      6601	eval.c	FUNCTION_115	CALL_3
0x4002b15	      0xe800000000	                          call 0x4002b1a	      6601	eval.c	FUNCTION_115	CALL_3
0x4002b1a	          0x4885c0	                           test rax, rax	      6602	eval.c	FUNCTION_115	IF_8
0x4002b1d	          0x4889c3	                            mov rbx, rax	      6601	eval.c	FUNCTION_115	CALL_3
0x4002b20	     0xf840a020000	                            je 0x4002d30	      6602	eval.c	FUNCTION_115	IF_8
0x4002b26	          0x8b4578	            mov eax, dword [rbp + 0x78] 	      6605	eval.c	FUNCTION_115	IF_9
0x4002b29	          0x83f801	                              cmp eax, 1	      6605	eval.c	FUNCTION_115	IF_9
0x4002b2c	     0xf849e010000	                            je 0x4002cd0	      6605	eval.c	FUNCTION_115	IF_9
0x4002b32	          0x83f802	                              cmp eax, 2	      6607	eval.c	FUNCTION_115	ELSE_3	IF_10
0x4002b35	     0xf84dd010000	                            je 0x4002d18	      6607	eval.c	FUNCTION_115	ELSE_3	IF_10
0x4002b3b	          0xc60300	                       mov byte [rbx], 0	      6610	eval.c	FUNCTION_115	ELSE_4
0x4002b3e	          0x8b457c	            mov eax, dword [rbp + 0x7c] 	      6612	eval.c	FUNCTION_115	IF_11
0x4002b41	            0x85c0	                           test eax, eax	      6612	eval.c	FUNCTION_115	IF_11
0x4002b43	     0xf8527010000	                           jne 0x4002c70	      6612	eval.c	FUNCTION_115	IF_11
0x4002b49	    0x8b8580000000	            mov eax, dword [rbp + 0x80] 	      6615	eval.c	FUNCTION_115	IF_12
0x4002b4f	            0x85c0	                           test eax, eax	      6615	eval.c	FUNCTION_115	IF_12
0x4002b51	            0x7565	                           jne 0x4002bb8	      6615	eval.c	FUNCTION_115	IF_12
0x4002b53	    0x448bad840000	           mov r13d, dword [rbp + 0x84] 	      6621	eval.c	FUNCTION_115	IF_13
0x4002b5a	          0x4585ed	                         test r13d, r13d	      6621	eval.c	FUNCTION_115	IF_13
0x4002b5d	     0xf85a9000000	                           jne 0x4002c0c	      6621	eval.c	FUNCTION_115	IF_13
0x4002b63	    0x8bad88000000	            mov ebp, dword [rbp + 0x88] 	      6624	eval.c	FUNCTION_115	IF_14
0x4002b69	          0x83fdff	             cmp ebp, 0xffffffffffffffff	      6624	eval.c	FUNCTION_115	IF_14
0x4002b6c	     0xf84d4000000	                            je 0x4002c46	      6624	eval.c	FUNCTION_115	IF_14
0x4002b72	          0x83fdfe	             cmp ebp, 0xfffffffffffffffe	      6626	eval.c	FUNCTION_115	ELSE_5	IF_15
0x4002b75	     0xf8475010000	                            je 0x4002cf0	      6626	eval.c	FUNCTION_115	ELSE_5	IF_15
0x4002b7b	            0x85ed	                           test ebp, ebp	      6628	eval.c	FUNCTION_115	ELSE_6	IF_16
0x4002b7d	     0xf851d010000	                           jne 0x4002ca0	      6628	eval.c	FUNCTION_115	ELSE_6	IF_16
0x4002b83	    0x48891d000000	            mov qword [0x04002b8a], rbx 	      6631	eval.c	FUNCTION_115
0x4002b8a	          0x4c89e0	                            mov rax, r12	      6632	eval.c	FUNCTION_115
0x4002b8d	        0x4883c418	                           add rsp, 0x18	      6633	eval.c	FUNCTION_115
0x4002b91	              0x5b	                                 pop rbx	      6633	eval.c	FUNCTION_115
0x4002b92	              0x5d	                                 pop rbp	      6633	eval.c	FUNCTION_115
0x4002b93	            0x415c	                                 pop r12	      6633	eval.c	FUNCTION_115
0x4002b95	            0x415d	                                 pop r13	      6633	eval.c	FUNCTION_115
0x4002b97	              0xc3	                                     ret	      6633	eval.c	FUNCTION_115
0x4002b98	     0xf1f84000000	                   nop dword [rax + rax]	      6633	eval.c	FUNCTION_115
0x4002ba0	        0x48037d10	             add rdi, qword [rbp + 0x10]	      6596	eval.c	FUNCTION_115	CALL_2
0x4002ba4	      0xe800000000	                          call 0x4002ba9	      6596	eval.c	FUNCTION_115	CALL_2
0x4002ba9	        0x8d5c0307	                lea ebx, [rbx + rax + 7]	      6596	eval.c	FUNCTION_115	CALL_2
0x4002bad	      0xe952ffffff	                           jmp 0x4002b04	      6596	eval.c	FUNCTION_115	CALL_2
0x4002bb2	    0x660f1f440000	                    nop word [rax + rax]	      6596	eval.c	FUNCTION_115	CALL_2
0x4002bb8	          0x83f875	                           cmp eax, 0x75	      6616	eval.c	FUNCTION_115	IF_12	CALL_5
0x4002bbb	    0x41bd00000000	                             mov r13d, 0	      6616	eval.c	FUNCTION_115	IF_12	CALL_5
0x4002bc1	            0x7412	                            je 0x4002bd5	      6616	eval.c	FUNCTION_115	IF_12	CALL_5
0x4002bc3	          0x83f864	                           cmp eax, 0x64	      6619	eval.c	FUNCTION_115	IF_12
0x4002bc6	    0x41bd00000000	                             mov r13d, 0	      6619	eval.c	FUNCTION_115	IF_12
0x4002bcc	      0xb800000000	                              mov eax, 0	      6619	eval.c	FUNCTION_115	IF_12
0x4002bd1	        0x4c0f45e8	                         cmovne r13, rax	      6619	eval.c	FUNCTION_115	IF_12
0x4002bd5	          0x4889df	                            mov rdi, rbx	      6616	eval.c	FUNCTION_115	IF_12	CALL_5
0x4002bd8	      0xe800000000	                          call 0x4002bdd	      6616	eval.c	FUNCTION_115	IF_12	CALL_5
0x4002bdd	        0x488d3c03	                    lea rdi, [rbx + rax]	        33	stdio2.h	FUNCTION_203	CALL_1
0x4002be1	          0x4d89e8	                             mov r8, r13	        33	stdio2.h	FUNCTION_203	CALL_1
0x4002be4	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_203	CALL_1
0x4002be6	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_203	CALL_1
0x4002beb	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_203	CALL_1
0x4002bf2	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_203	CALL_1
0x4002bf7	      0xe800000000	                          call 0x4002bfc	        33	stdio2.h	FUNCTION_203	CALL_1
0x4002bfc	    0x448bad840000	           mov r13d, dword [rbp + 0x84] 	      6621	eval.c	FUNCTION_115	IF_13
0x4002c03	          0x4585ed	                         test r13d, r13d	      6621	eval.c	FUNCTION_115	IF_13
0x4002c06	     0xf8457ffffff	                            je 0x4002b63	      6621	eval.c	FUNCTION_115	IF_13
0x4002c0c	          0x4889df	                            mov rdi, rbx	      6622	eval.c	FUNCTION_115	IF_13	CALL_6
0x4002c0f	      0xe800000000	                          call 0x4002c14	      6622	eval.c	FUNCTION_115	IF_13	CALL_6
0x4002c14	          0x4d63c5	                         movsxd r8, r13d	        33	stdio2.h	FUNCTION_203	CALL_1
0x4002c17	        0x4c034510	              add r8, qword [rbp + 0x10]	        33	stdio2.h	FUNCTION_203	CALL_1
0x4002c1b	        0x488d3c03	                    lea rdi, [rbx + rax]	        33	stdio2.h	FUNCTION_203	CALL_1
0x4002c1f	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_203	CALL_1
0x4002c24	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_203	CALL_1
0x4002c26	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_203	CALL_1
0x4002c2d	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_203	CALL_1
0x4002c32	      0xe800000000	                          call 0x4002c37	        33	stdio2.h	FUNCTION_203	CALL_1
0x4002c37	    0x8bad88000000	            mov ebp, dword [rbp + 0x88] 	      6624	eval.c	FUNCTION_115	IF_14
0x4002c3d	          0x83fdff	             cmp ebp, 0xffffffffffffffff	      6624	eval.c	FUNCTION_115	IF_14
0x4002c40	     0xf852cffffff	                           jne 0x4002b72	      6624	eval.c	FUNCTION_115	IF_14
0x4002c46	          0x4889df	                            mov rdi, rbx	      6625	eval.c	FUNCTION_115	CALL_8
0x4002c49	      0xe800000000	                          call 0x4002c4e	      6625	eval.c	FUNCTION_115	CALL_8
0x4002c4e	    0x48b9202b2b62	          movabs rcx, 0x6b3d6461622b2b20	       110	string3.h	FUNCTION_197	CALL_3
0x4002c58	          0x4801d8	                            add rax, rbx	       110	string3.h	FUNCTION_197	CALL_3
0x4002c5b	          0x488908	                    mov qword [rax], rcx	       110	string3.h	FUNCTION_197	CALL_3
0x4002c5e	    0xc74008656570	          mov dword [rax + 8], 0x706565 	       110	string3.h	FUNCTION_197	CALL_3
0x4002c65	      0xe919ffffff	                           jmp 0x4002b83	       110	string3.h	FUNCTION_197	CALL_3
0x4002c6a	    0x660f1f440000	                    nop word [rax + rax]	       110	string3.h	FUNCTION_197	CALL_3
0x4002c70	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_201	CALL_3
0x4002c73	      0xe800000000	                          call 0x4002c78	       148	string3.h	FUNCTION_201	CALL_3
0x4002c78	    0x48b9202b2b65	            movabs rcx, 0x746964652b2b20	       148	string3.h	FUNCTION_201	CALL_3
0x4002c82	        0x48890c03	              mov qword [rbx + rax], rcx	       148	string3.h	FUNCTION_201	CALL_3
0x4002c86	      0xe9befeffff	                           jmp 0x4002b49	       148	string3.h	FUNCTION_201	CALL_3
0x4002c8b	       0xf1f440000	                   nop dword [rax + rax]	       148	string3.h	FUNCTION_201	CALL_3
0x4002c90	      0xbb0d000000	                            mov ebx, 0xd	       148	string3.h	FUNCTION_201	CALL_3
0x4002c95	      0xba06000000	                              mov edx, 6	      6583	eval.c	FUNCTION_115	IF_2
0x4002c9a	      0xe940feffff	                           jmp 0x4002adf	      6583	eval.c	FUNCTION_115	IF_2
0x4002c9f	              0x90	                                     nop	      6583	eval.c	FUNCTION_115	IF_2
0x4002ca0	          0x4889df	                            mov rdi, rbx	      6629	eval.c	FUNCTION_115	ELSE_6	IF_16
0x4002ca3	      0xe800000000	                          call 0x4002ca8	      6629	eval.c	FUNCTION_115	ELSE_6	IF_16
0x4002ca8	        0x488d3c03	                    lea rdi, [rbx + rax]	        33	stdio2.h	FUNCTION_203	CALL_1
0x4002cac	          0x4189e8	                            mov r8d, ebp	        33	stdio2.h	FUNCTION_203	CALL_1
0x4002caf	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_203	CALL_1
0x4002cb4	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_203	CALL_1
0x4002cbb	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_203	CALL_1
0x4002cc0	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_203	CALL_1
0x4002cc2	      0xe800000000	                          call 0x4002cc7	        33	stdio2.h	FUNCTION_203	CALL_1
0x4002cc7	      0xe9b7feffff	                           jmp 0x4002b83	        33	stdio2.h	FUNCTION_203	CALL_1
0x4002ccc	         0xf1f4000	                         nop dword [rax]	        33	stdio2.h	FUNCTION_203	CALL_1
0x4002cd0	      0xba696e0000	                         mov edx, 0x6e69	        33	stdio2.h	FUNCTION_203	CALL_1
0x4002cd5	    0xc703202b2b62	            mov dword [rbx], 0x622b2b20 	        33	stdio2.h	FUNCTION_203	CALL_1
0x4002cdb	        0xc6430600	                   mov byte [rbx + 6], 0	        33	stdio2.h	FUNCTION_203	CALL_1
0x4002cdf	        0x66895304	                  mov word [rbx + 4], dx	        33	stdio2.h	FUNCTION_203	CALL_1
0x4002ce3	      0xe956feffff	                           jmp 0x4002b3e	        33	stdio2.h	FUNCTION_203	CALL_1
0x4002ce8	     0xf1f84000000	                   nop dword [rax + rax]	        33	stdio2.h	FUNCTION_203	CALL_1
0x4002cf0	          0x4889df	                            mov rdi, rbx	      6627	eval.c	FUNCTION_115	ELSE_5	IF_15
0x4002cf3	      0xe800000000	                          call 0x4002cf8	      6627	eval.c	FUNCTION_115	ELSE_5	IF_15
0x4002cf8	    0x48b9202b2b62	          movabs rcx, 0x643d6461622b2b20	       110	string3.h	FUNCTION_197	CALL_3
0x4002d02	          0x4801d8	                            add rax, rbx	       110	string3.h	FUNCTION_197	CALL_3
0x4002d05	          0x488908	                    mov qword [rax], rcx	       110	string3.h	FUNCTION_197	CALL_3
0x4002d08	    0xc74008726f70	          mov dword [rax + 8], 0x706f72 	       110	string3.h	FUNCTION_197	CALL_3
0x4002d0f	      0xe96ffeffff	                           jmp 0x4002b83	       110	string3.h	FUNCTION_197	CALL_3
0x4002d14	         0xf1f4000	                         nop dword [rax]	       110	string3.h	FUNCTION_197	CALL_3
0x4002d18	    0x48b8202b2b6e	          movabs rax, 0x6e69626f6e2b2b20	        33	stdio2.h	FUNCTION_203	CALL_1
0x4002d22	        0xc6430800	                   mov byte [rbx + 8], 0	        33	stdio2.h	FUNCTION_203	CALL_1
0x4002d26	          0x488903	                    mov qword [rbx], rax	        33	stdio2.h	FUNCTION_203	CALL_1
0x4002d29	      0xe910feffff	                           jmp 0x4002b3e	        33	stdio2.h	FUNCTION_203	CALL_1
0x4002d2e	            0x6690	                                     nop	        33	stdio2.h	FUNCTION_203	CALL_1
0x4002d30	            0x31c0	                            xor eax, eax	      6603	eval.c	FUNCTION_115	IF_8
0x4002d32	      0xe956feffff	                           jmp 0x4002b8d	      6603	eval.c	FUNCTION_115	IF_8
0x4002d37	          0x4c89e7	                            mov rdi, r12	      6577	eval.c	FUNCTION_115	IF_1	CALL_1
0x4002d3a	      0x4889742408	                mov qword [rsp + 8], rsi	      6577	eval.c	FUNCTION_115	IF_1	CALL_1
0x4002d3f	      0xe800000000	                          call 0x4002d44	      6577	eval.c	FUNCTION_115	IF_1	CALL_1
0x4002d44	      0x488b742408	                mov rsi, qword [rsp + 8]	      6578	eval.c	FUNCTION_115	IF_1
0x4002d49	            0x31c0	                            xor eax, eax	      6579	eval.c	FUNCTION_115	IF_1
0x4002d4b	    0x488935000000	            mov qword [0x04002d52], rsi 	      6578	eval.c	FUNCTION_115	IF_1
0x4002d52	      0xe936feffff	                           jmp 0x4002b8d	      6579	eval.c	FUNCTION_115	IF_1
assert_fails	functions,0:SWITCH,0:IF,3:DO,0:ELSE,1:WHILE,0:CALL,14:FOR,0	77
0x40097e0	            0x4154	                                push r12	      9060	eval.c	FUNCTION_178
0x40097e2	              0x55	                                push rbp	      9060	eval.c	FUNCTION_178
0x40097e3	      0xbe00000000	                              mov esi, 0	      7098	eval.c	FUNCTION_129	CALL_1
0x40097e8	              0x53	                                push rbx	      9060	eval.c	FUNCTION_178
0x40097e9	          0x4889fb	                            mov rbx, rdi	      9060	eval.c	FUNCTION_178
0x40097ec	        0x4883ec70	                           sub rsp, 0x70	      9060	eval.c	FUNCTION_178
0x40097f0	    0x64488b042528	                mov rax, qword fs:[0x28]	      9060	eval.c	FUNCTION_178
0x40097f9	      0x4889442468	             mov qword [rsp + 0x68], rax	      9060	eval.c	FUNCTION_178
0x40097fe	            0x31c0	                            xor eax, eax	      9060	eval.c	FUNCTION_178
0x4009800	      0xe800000000	                          call 0x4009805	      7098	eval.c	FUNCTION_129	CALL_1
0x4009805	          0x4889c7	                            mov rdi, rax	      9068	eval.c	FUNCTION_178	CALL_2
0x4009808	          0x4889c5	                            mov rbp, rax	      7098	eval.c	FUNCTION_129	CALL_1
0x400980b	    0xc70500000000	               mov dword [0x04009815], 0	      9065	eval.c	FUNCTION_178
0x4009815	    0xc70500000000	               mov dword [0x0400981f], 1	      9066	eval.c	FUNCTION_178
0x400981f	    0xc70500000000	               mov dword [0x04009829], 1	      9067	eval.c	FUNCTION_178
0x4009829	      0xe800000000	                          call 0x400982e	      9068	eval.c	FUNCTION_178	CALL_2
0x400982e	    0x8b1500000000	            mov edx, dword [0x04009834] 	      9069	eval.c	FUNCTION_178	IF_1
0x4009834	            0x85d2	                           test edx, edx	      9069	eval.c	FUNCTION_178	IF_1
0x4009836	     0xf84cc000000	                            je 0x4009908	      9069	eval.c	FUNCTION_178	IF_1
0x400983c	          0x8b4310	            mov eax, dword [rbx + 0x10] 	      9078	eval.c	FUNCTION_178	ELSE_1	IF_2
0x400983f	            0x31ed	                            xor ebp, ebp	      9063	eval.c	FUNCTION_178
0x4009841	            0x85c0	                           test eax, eax	      9078	eval.c	FUNCTION_178	ELSE_1	IF_2
0x4009843	            0x756b	                           jne 0x40098b0	      9078	eval.c	FUNCTION_178	ELSE_1	IF_2
0x4009845	      0xbf00000000	                              mov edi, 0	      6473	eval.c	FUNCTION_109	CALL_1
0x400984a	    0xc70500000000	               mov dword [0x04009854], 0	      9095	eval.c	FUNCTION_178
0x4009854	    0xc70500000000	               mov dword [0x0400985e], 0	      9096	eval.c	FUNCTION_178
0x400985e	    0xc70500000000	               mov dword [0x04009868], 0	      9097	eval.c	FUNCTION_178
0x4009868	    0xc70500000000	               mov dword [0x04009872], 0	      9098	eval.c	FUNCTION_178
0x4009872	      0xe800000000	                          call 0x4009877	      6473	eval.c	FUNCTION_109	CALL_1
0x4009877	      0x488b542468	            mov rdx, qword [rsp + 0x68] 	      9101	eval.c	FUNCTION_178
0x400987c	    0x644833142528	                xor rdx, qword fs:[0x28]	      9101	eval.c	FUNCTION_178
0x4009885	    0xc70500000000	               mov dword [0x0400988f], 2	      6474	eval.c	FUNCTION_109
0x400988f	    0x48c705000000	               mov qword [0x0400989a], 0	      6476	eval.c	FUNCTION_109	IF_1
0x400989a	            0x89e8	                            mov eax, ebp	      9101	eval.c	FUNCTION_178
0x400989c	     0xf85a0000000	                           jne 0x4009942	      9101	eval.c	FUNCTION_178
0x40098a2	        0x4883c470	                           add rsp, 0x70	      9101	eval.c	FUNCTION_178
0x40098a6	              0x5b	                                 pop rbx	      9101	eval.c	FUNCTION_178
0x40098a7	              0x5d	                                 pop rbp	      9101	eval.c	FUNCTION_178
0x40098a8	            0x415c	                                 pop r12	      9101	eval.c	FUNCTION_178
0x40098aa	              0xc3	                                     ret	      9101	eval.c	FUNCTION_178
0x40098ab	       0xf1f440000	                   nop dword [rax + rax]	      9101	eval.c	FUNCTION_178
0x40098b0	        0x4c8d6310	                   lea r12, [rbx + 0x10]	      9081	eval.c	FUNCTION_178	ELSE_1	IF_2	CALL_8
0x40098b4	      0x488d742420	                   lea rsi, [rsp + 0x20]	      9081	eval.c	FUNCTION_178	ELSE_1	IF_2	CALL_8
0x40098b9	          0x4c89e7	                            mov rdi, r12	      9081	eval.c	FUNCTION_178	ELSE_1	IF_2	CALL_8
0x40098bc	      0xe800000000	                          call 0x40098c1	      9081	eval.c	FUNCTION_178	ELSE_1	IF_2	CALL_8
0x40098c1	          0x4885c0	                           test rax, rax	      9083	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3
0x40098c4	            0x7418	                            je 0x40098de	      9083	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3
0x40098c6	    0x488b3d000000	            mov rdi, qword [0x040098cd] 	      9084	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_9
0x40098cd	          0x4889c6	                            mov rsi, rax	      9084	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_9
0x40098d0	      0xe800000000	                          call 0x40098d5	      9084	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_9
0x40098d5	          0x4885c0	                           test rax, rax	      9084	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_9
0x40098d8	     0xf8567ffffff	                           jne 0x4009845	      9084	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_9
0x40098de	          0x4889e7	                            mov rdi, rsp	      9086	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_10
0x40098e1	      0xe800000000	                          call 0x40098e6	      9086	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_10
0x40098e6	        0x488d7320	                   lea rsi, [rbx + 0x20]	      9087	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_11
0x40098ea	    0x41b804000000	                              mov r8d, 4	      9087	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_11
0x40098f0	      0xb900000000	                              mov ecx, 0	      9087	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_11
0x40098f5	          0x4c89e2	                            mov rdx, r12	      9087	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_11
0x40098f8	          0x4889e7	                            mov rdi, rsp	      9087	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_11
0x40098fb	      0xe8d0b3ffff	 call sym.fill_assert_error.constprop.18	      9087	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_11
0x4009900	            0xeb26	                           jmp 0x4009928	      9087	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_11
0x4009902	    0x660f1f440000	                    nop word [rax + rax]	      9087	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_11
0x4009908	          0x4889e7	                            mov rdi, rsp	      9071	eval.c	FUNCTION_178	IF_1	CALL_3
0x400990b	      0xe800000000	                          call 0x4009910	      9071	eval.c	FUNCTION_178	IF_1	CALL_3
0x4009910	      0xbe00000000	                              mov esi, 0	      9072	eval.c	FUNCTION_178	IF_1	CALL_4
0x4009915	          0x4889e7	                            mov rdi, rsp	      9072	eval.c	FUNCTION_178	IF_1	CALL_4
0x4009918	      0xe800000000	                          call 0x400991d	      9072	eval.c	FUNCTION_178	IF_1	CALL_4
0x400991d	          0x4889ee	                            mov rsi, rbp	      9073	eval.c	FUNCTION_178	IF_1	CALL_5
0x4009920	          0x4889e7	                            mov rdi, rsp	      9073	eval.c	FUNCTION_178	IF_1	CALL_5
0x4009923	      0xe800000000	                          call 0x4009928	      9073	eval.c	FUNCTION_178	IF_1	CALL_5
0x4009928	          0x4889e7	                            mov rdi, rsp	      9089	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_12
0x400992b	      0xbd01000000	                              mov ebp, 1	      9091	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3
0x4009930	      0xe800000000	                          call 0x4009935	      9089	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_12
0x4009935	          0x4889e7	                            mov rdi, rsp	      9090	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_13
0x4009938	      0xe800000000	                          call 0x400993d	      9090	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_13
0x400993d	      0xe903ffffff	                           jmp 0x4009845	      9090	eval.c	FUNCTION_178	ELSE_1	IF_2	IF_3	CALL_13
0x4009942	      0xe800000000	                          call 0x4009947	      9101	eval.c	FUNCTION_178
get_spellword	functions,0:SWITCH,0:IF,2:DO,0:ELSE,0:WHILE,0:CALL,2:FOR,0	35
0x40051c0	              0x55	                                push rbp	       979	eval.c	FUNCTION_24
0x40051c1	              0x53	                                push rbx	       979	eval.c	FUNCTION_24
0x40051c2	        0x4883ec18	                           sub rsp, 0x18	       979	eval.c	FUNCTION_24
0x40051c6	          0x488b1f	                    mov rbx, qword [rdi]	       982	eval.c	FUNCTION_24
0x40051c9	    0x64488b042528	                mov rax, qword fs:[0x28]	       979	eval.c	FUNCTION_24
0x40051d2	      0x4889442408	                mov qword [rsp + 8], rax	       979	eval.c	FUNCTION_24
0x40051d7	            0x31c0	                            xor eax, eax	       979	eval.c	FUNCTION_24
0x40051d9	          0x4885db	                           test rbx, rbx	       983	eval.c	FUNCTION_24	IF_1
0x40051dc	            0x745a	                            je 0x4005238	       983	eval.c	FUNCTION_24	IF_1
0x40051de	        0x488d7b10	                   lea rdi, [rbx + 0x10]	       985	eval.c	FUNCTION_24	CALL_1
0x40051e2	          0x4889f5	                            mov rbp, rsi	       985	eval.c	FUNCTION_24	CALL_1
0x40051e5	      0xbe00000000	                              mov esi, 0	      7085	eval.c	FUNCTION_128	CALL_1
0x40051ea	      0xe800000000	                          call 0x40051ef	      7085	eval.c	FUNCTION_128	CALL_1
0x40051ef	      0xba00000000	                              mov edx, 0	      7087	eval.c	FUNCTION_128
0x40051f4	          0x4885c0	                           test rax, rax	      7087	eval.c	FUNCTION_128
0x40051f7	        0x480f44c2	                          cmove rax, rdx	      7087	eval.c	FUNCTION_128
0x40051fb	        0x48894500	                    mov qword [rbp], rax	       985	eval.c	FUNCTION_24	CALL_1
0x40051ff	          0x488b3b	                    mov rdi, qword [rbx]	       987	eval.c	FUNCTION_24
0x4005202	          0x4885ff	                           test rdi, rdi	       988	eval.c	FUNCTION_24	IF_2
0x4005205	            0x7431	                            je 0x4005238	       988	eval.c	FUNCTION_24	IF_2
0x4005207	      0x488d742404	                      lea rsi, [rsp + 4]	      6964	eval.c	FUNCTION_124	CALL_1
0x400520c	        0x4883c710	                           add rdi, 0x10	       990	eval.c	FUNCTION_24	CALL_2
0x4005210	    0xc74424040000	                  mov dword [rsp + 4], 0	      6962	eval.c	FUNCTION_124
0x4005218	      0xe800000000	                          call 0x400521d	      6964	eval.c	FUNCTION_124	CALL_1
0x400521d	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       991	eval.c	FUNCTION_24
0x4005222	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       991	eval.c	FUNCTION_24
0x400522b	            0x7512	                           jne 0x400523f	       991	eval.c	FUNCTION_24
0x400522d	        0x4883c418	                           add rsp, 0x18	       991	eval.c	FUNCTION_24
0x4005231	              0x5b	                                 pop rbx	       991	eval.c	FUNCTION_24
0x4005232	              0x5d	                                 pop rbp	       991	eval.c	FUNCTION_24
0x4005233	              0xc3	                                     ret	       991	eval.c	FUNCTION_24
0x4005234	         0xf1f4000	                         nop dword [rax]	       991	eval.c	FUNCTION_24
0x4005238	      0xb8ffffffff	                     mov eax, 0xffffffff	       984	eval.c	FUNCTION_24	IF_1
0x400523d	            0xebde	                           jmp 0x400521d	       984	eval.c	FUNCTION_24	IF_1
0x400523f	      0xe800000000	                          call 0x4005244	       991	eval.c	FUNCTION_24
last_set_msg	functions,0:SWITCH,0:IF,2:DO,0:ELSE,0:WHILE,0:CALL,8:FOR,0	28
0x40088c0	            0x85ff	                           test edi, edi	      8757	eval.c	FUNCTION_166	IF_1
0x40088c2	            0x7504	                           jne 0x40088c8	      8757	eval.c	FUNCTION_166	IF_1
0x40088c4	              0xc3	                                     ret	      8769	eval.c	FUNCTION_166
0x40088c5	           0xf1f00	                         nop dword [rax]	      8769	eval.c	FUNCTION_166
0x40088c8	              0x53	                                push rbx	      8754	eval.c	FUNCTION_166
0x40088c9	      0xe800000000	                          call 0x40088ce	      8759	eval.c	FUNCTION_166	IF_1	CALL_2
0x40088ce	            0x31ff	                            xor edi, edi	      8759	eval.c	FUNCTION_166	IF_1	CALL_2
0x40088d0	          0x4889c6	                            mov rsi, rax	      8759	eval.c	FUNCTION_166	IF_1	CALL_2
0x40088d3	      0xe800000000	                          call 0x40088d8	      8759	eval.c	FUNCTION_166	IF_1	CALL_2
0x40088d8	          0x4885c0	                           test rax, rax	      8760	eval.c	FUNCTION_166	IF_1	IF_2
0x40088db	          0x4889c3	                            mov rbx, rax	      8759	eval.c	FUNCTION_166	IF_1	CALL_2
0x40088de	            0x7438	                            je 0x4008918	      8760	eval.c	FUNCTION_166	IF_1	IF_2
0x40088e0	      0xe800000000	                          call 0x40088e5	      8762	eval.c	FUNCTION_166	IF_1	IF_2	CALL_3
0x40088e5	      0xba05000000	                              mov edx, 5	      8763	eval.c	FUNCTION_166	IF_1	IF_2	CALL_5
0x40088ea	      0xbe00000000	                              mov esi, 0	      8763	eval.c	FUNCTION_166	IF_1	IF_2	CALL_5
0x40088ef	            0x31ff	                            xor edi, edi	      8763	eval.c	FUNCTION_166	IF_1	IF_2	CALL_5
0x40088f1	      0xe800000000	                          call 0x40088f6	      8763	eval.c	FUNCTION_166	IF_1	IF_2	CALL_5
0x40088f6	          0x4889c7	                            mov rdi, rax	      8763	eval.c	FUNCTION_166	IF_1	IF_2	CALL_5
0x40088f9	      0xe800000000	                          call 0x40088fe	      8763	eval.c	FUNCTION_166	IF_1	IF_2	CALL_5
0x40088fe	          0x4889df	                            mov rdi, rbx	      8764	eval.c	FUNCTION_166	IF_1	IF_2	CALL_6
0x4008901	      0xe800000000	                          call 0x4008906	      8764	eval.c	FUNCTION_166	IF_1	IF_2	CALL_6
0x4008906	          0x4889df	                            mov rdi, rbx	      8765	eval.c	FUNCTION_166	IF_1	IF_2	CALL_7
0x4008909	      0xe800000000	                          call 0x400890e	      8765	eval.c	FUNCTION_166	IF_1	IF_2	CALL_7
0x400890e	              0x5b	                                 pop rbx	      8769	eval.c	FUNCTION_166
0x400890f	      0xe900000000	                           jmp 0x4008914	      8766	eval.c	FUNCTION_166	IF_1	IF_2	CALL_8
0x4008914	         0xf1f4000	                         nop dword [rax]	      8766	eval.c	FUNCTION_166	IF_1	IF_2	CALL_8
0x4008918	              0x5b	                                 pop rbx	      8769	eval.c	FUNCTION_166
0x4008919	              0xc3	                                     ret	      8769	eval.c	FUNCTION_166
eval7	functions,0:SWITCH,1:IF,32:DO,0:ELSE,13:WHILE,2:CALL,39:FOR,0	838
0x400d240	            0x4157	                                push r15	      3992	eval.c	ELSE_15	FUNCTION_70
0x400d242	            0x4156	                                push r14	      3992	eval.c	ELSE_15	FUNCTION_70
0x400d244	          0x4189ce	                           mov r14d, ecx	      3992	eval.c	ELSE_15	FUNCTION_70
0x400d247	            0x4155	                                push r13	      3992	eval.c	ELSE_15	FUNCTION_70
0x400d249	            0x4154	                                push r12	      3992	eval.c	ELSE_15	FUNCTION_70
0x400d24b	          0x4989f4	                            mov r12, rsi	      3992	eval.c	ELSE_15	FUNCTION_70
0x400d24e	              0x55	                                push rbp	      3992	eval.c	ELSE_15	FUNCTION_70
0x400d24f	              0x53	                                push rbx	      3992	eval.c	ELSE_15	FUNCTION_70
0x400d250	          0x4889fb	                            mov rbx, rdi	      3992	eval.c	ELSE_15	FUNCTION_70
0x400d253	        0x4883ec38	                           sub rsp, 0x38	      3992	eval.c	ELSE_15	FUNCTION_70
0x400d257	          0x488b2f	                    mov rbp, qword [rdi]	      4009	eval.c	ELSE_15	FUNCTION_70
0x400d25a	    0xc70600000000	                      mov dword [rsi], 0	      4004	eval.c	ELSE_15	FUNCTION_70
0x400d260	    0x64488b042528	                mov rax, qword fs:[0x28]	      3992	eval.c	ELSE_15	FUNCTION_70
0x400d269	      0x4889442428	             mov qword [rsp + 0x28], rax	      3992	eval.c	ELSE_15	FUNCTION_70
0x400d26e	            0x31c0	                            xor eax, eax	      3992	eval.c	ELSE_15	FUNCTION_70
0x400d270	          0x891424	                    mov dword [rsp], edx	      3992	eval.c	ELSE_15	FUNCTION_70
0x400d273	         0xfb64500	                   movzx eax, byte [rbp]	      4010	eval.c	ELSE_15	FUNCTION_70	WHILE_1
0x400d277	          0x4989ed	                            mov r13, rbp	      4010	eval.c	ELSE_15	FUNCTION_70	WHILE_1
0x400d27a	          0x8d50d5	                   lea edx, [rax - 0x2b]	      4010	eval.c	ELSE_15	FUNCTION_70	WHILE_1
0x400d27d	    0x81e2fd000000	                           and edx, 0xfd	      4010	eval.c	ELSE_15	FUNCTION_70	WHILE_1
0x400d283	            0x7520	                           jne 0x400d2a5	      4010	eval.c	ELSE_15	FUNCTION_70	WHILE_1
0x400d285	           0xf1f00	                         nop dword [rax]	      4010	eval.c	ELSE_15	FUNCTION_70	WHILE_1
0x400d288	        0x498d7d01	                      lea rdi, [r13 + 1]	      4011	eval.c	ELSE_15	FUNCTION_70	CALL_1
0x400d28c	      0xe800000000	                          call 0x400d291	      4011	eval.c	ELSE_15	FUNCTION_70	CALL_1
0x400d291	          0x4989c5	                            mov r13, rax	      4011	eval.c	ELSE_15	FUNCTION_70	CALL_1
0x400d294	          0x488903	                    mov qword [rbx], rax	      4011	eval.c	ELSE_15	FUNCTION_70	CALL_1
0x400d297	           0xfb600	                   movzx eax, byte [rax]	      4010	eval.c	ELSE_15	FUNCTION_70	WHILE_1
0x400d29a	          0x8d50d5	                   lea edx, [rax - 0x2b]	      4010	eval.c	ELSE_15	FUNCTION_70	WHILE_1
0x400d29d	    0x81e2fd000000	                           and edx, 0xfd	      4010	eval.c	ELSE_15	FUNCTION_70	WHILE_1
0x400d2a3	            0x74e3	                            je 0x400d288	      4010	eval.c	ELSE_15	FUNCTION_70	WHILE_1
0x400d2a5	            0x3c21	                            cmp al, 0x21	      4010	eval.c	ELSE_15	FUNCTION_70	WHILE_1
0x400d2a7	            0x74df	                            je 0x400d288	      4010	eval.c	ELSE_15	FUNCTION_70	WHILE_1
0x400d2a9	          0x83e822	                           sub eax, 0x22	      4014	eval.c	ELSE_15	FUNCTION_70	SWITCH_1
0x400d2ac	            0x3c59	                            cmp al, 0x59	      4014	eval.c	ELSE_15	FUNCTION_70	SWITCH_1
0x400d2ae	     0xf8780030000	                            ja 0x400d634	      4014	eval.c	ELSE_15	FUNCTION_70	SWITCH_1
0x400d2b4	           0xfb6c0	                           movzx eax, al	      4014	eval.c	ELSE_15	FUNCTION_70	SWITCH_1
0x400d2b7	    0xff24c5000000	                       jmp qword [rax*8]	      4014	eval.c	ELSE_15	FUNCTION_70	SWITCH_1
0x400d2be	          0x8b1424	                    mov edx, dword [rsp]	      4103	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_13
0x400d2c1	          0x4c89e6	                            mov rsi, r12	      4103	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_13
0x400d2c4	          0x4889df	                            mov rdi, rbx	      4103	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_13
0x400d2c7	      0xe800000000	                          call 0x400d2cc	      4103	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_13
0x400d2cc	          0x83f802	                              cmp eax, 2	      4104	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_9
0x400d2cf	          0x4189c7	                           mov r15d, eax	      4103	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_13
0x400d2d2	     0xf84c20b0000	                            je 0x400de9a	      4104	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_9
0x400d2d8	          0x488b3b	                    mov rdi, qword [rbx]	      4104	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_9
0x400d2db	      0xe800000000	                          call 0x400d2e0	      4221	eval.c	ELSE_15	FUNCTION_70	CALL_34
0x400d2e0	        0x4183ff01	                             cmp r15d, 1	      4225	eval.c	ELSE_15	FUNCTION_70	IF_24
0x400d2e4	          0x488903	                    mov qword [rbx], rax	      4221	eval.c	ELSE_15	FUNCTION_70	CALL_34
0x400d2e7	     0xf845d010000	                            je 0x400d44a	      4225	eval.c	ELSE_15	FUNCTION_70	IF_24
0x400d2ed	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      4289	eval.c	ELSE_15	FUNCTION_70
0x400d2f2	    0x644833342528	                xor rsi, qword fs:[0x28]	      4289	eval.c	ELSE_15	FUNCTION_70
0x400d2fb	          0x4489f8	                           mov eax, r15d	      4289	eval.c	ELSE_15	FUNCTION_70
0x400d2fe	     0xf85450c0000	                           jne 0x400df49	      4289	eval.c	ELSE_15	FUNCTION_70
0x400d304	        0x4883c438	                           add rsp, 0x38	      4289	eval.c	ELSE_15	FUNCTION_70
0x400d308	              0x5b	                                 pop rbx	      4289	eval.c	ELSE_15	FUNCTION_70
0x400d309	              0x5d	                                 pop rbp	      4289	eval.c	ELSE_15	FUNCTION_70
0x400d30a	            0x415c	                                 pop r12	      4289	eval.c	ELSE_15	FUNCTION_70
0x400d30c	            0x415d	                                 pop r13	      4289	eval.c	ELSE_15	FUNCTION_70
0x400d30e	            0x415e	                                 pop r14	      4289	eval.c	ELSE_15	FUNCTION_70
0x400d310	            0x415f	                                 pop r15	      4289	eval.c	ELSE_15	FUNCTION_70
0x400d312	              0xc3	                                     ret	      4289	eval.c	ELSE_15	FUNCTION_70
0x400d313	        0x498d7d01	                      lea rdi, [r13 + 1]	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400d317	          0x4531f6	                          xor r14d, r14d	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400d31a	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400d31f	      0x410fb64501	               movzx eax, byte [r13 + 1]	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400d324	            0x84c0	                             test al, al	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400d326	            0x751b	                           jne 0x400d343	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400d328	      0xe9f5030000	                           jmp 0x400d722	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400d32d	           0xf1f00	                         nop dword [rax]	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400d330	          0x4801c7	                            add rdi, rax	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400d333	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400d338	           0xfb607	                   movzx eax, byte [rdi]	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400d33b	            0x84c0	                             test al, al	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400d33d	     0xf84df030000	                            je 0x400d722	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400d343	            0x3c22	                            cmp al, 0x22	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400d345	     0xf84d7030000	                            je 0x400d722	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400d34b	            0x3c5c	                            cmp al, 0x5c	      4671	eval.c	FUNCTION_73	FOR_1	IF_1
0x400d34d	     0xf847d030000	                            je 0x400d6d0	      4671	eval.c	FUNCTION_73	FOR_1	IF_1
0x400d353	    0x448b3d000000	           mov r15d, dword [0x0400d35a] 	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400d35a	      0xb801000000	                              mov eax, 1	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400d35f	          0x4585ff	                         test r15d, r15d	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400d362	            0x74cc	                            je 0x400d330	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400d364	    0xff1500000000	                 call qword [0x0400d36a]	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400d36a	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400d36f	            0x4898	                                    cdqe	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400d371	            0xebbd	                           jmp 0x400d330	      4669	eval.c	FUNCTION_73	FOR_1	CALL_1
0x400d373	        0x498d7d01	                      lea rdi, [r13 + 1]	      4137	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_18
0x400d377	      0xe800000000	                          call 0x400d37c	      4137	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_18
0x400d37c	          0x8b1424	                    mov edx, dword [rsp]	      4138	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_19
0x400d37f	          0x4889df	                            mov rdi, rbx	      4138	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_19
0x400d382	          0x488903	                    mov qword [rbx], rax	      4137	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_18
0x400d385	          0x4c89e6	                            mov rsi, r12	      4138	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_19
0x400d388	      0xe800000000	                          call 0x400d38d	      4138	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_19
0x400d38d	          0x488b3b	                    mov rdi, qword [rbx]	      4139	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_12
0x400d390	          0x4189c7	                           mov r15d, eax	      4138	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_19
0x400d393	          0x803f29	                    cmp byte [rdi], 0x29	      4139	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_12
0x400d396	     0xf845d090000	                            je 0x400dcf9	      4139	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_12
0x400d39c	          0x83f801	                              cmp eax, 1	      4141	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_3	IF_13
0x400d39f	     0xf840e0b0000	                            je 0x400deb3	      4141	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_3	IF_13
0x400d3a5	          0x83f802	                              cmp eax, 2	      4153	eval.c	ELSE_15	FUNCTION_70	IF_14
0x400d3a8	     0xf8454010000	                            je 0x400d502	      4153	eval.c	ELSE_15	FUNCTION_70	IF_14
0x400d3ae	      0xe800000000	                          call 0x400d3b3	      4221	eval.c	ELSE_15	FUNCTION_70	CALL_34
0x400d3b3	          0x488903	                    mov qword [rbx], rax	      4221	eval.c	ELSE_15	FUNCTION_70	CALL_34
0x400d3b6	      0xe932ffffff	                           jmp 0x400d2ed	      4221	eval.c	ELSE_15	FUNCTION_70	CALL_34
0x400d3bb	        0x498d7d01	                      lea rdi, [r13 + 1]	      4031	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_2
0x400d3bf	      0xe800000000	                          call 0x400d3c4	      4031	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_2
0x400d3c4	          0x4585f6	                         test r14d, r14d	      4039	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	CALL_3
0x400d3c7	          0x4989c7	                            mov r15, rax	      4031	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_2
0x400d3ca	            0x7509	                           jne 0x400d3d5	      4039	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	CALL_3
0x400d3cc	          0x80382e	                    cmp byte [rax], 0x2e	      4039	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	CALL_3
0x400d3cf	     0xf844c050000	                            je 0x400d921	      4039	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	CALL_3
0x400d3d5	        0x4883ec08	                              sub rsp, 8	      4070	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	CALL_9
0x400d3d9	          0x488b3b	                    mov rdi, qword [rbx]	      4070	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	CALL_9
0x400d3dc	            0x31f6	                            xor esi, esi	      4070	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	CALL_9
0x400d3de	            0x6a00	                                  push 0	      4070	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	CALL_9
0x400d3e0	          0x4531c9	                            xor r9d, r9d	      4070	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	CALL_9
0x400d3e3	      0xb907000000	                              mov ecx, 7	      4070	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	CALL_9
0x400d3e8	      0x4c8d442430	                    lea r8, [rsp + 0x30]	      4070	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	CALL_9
0x400d3ed	      0x488d542420	                   lea rdx, [rsp + 0x20]	      4070	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	CALL_9
0x400d3f2	      0xe800000000	                          call 0x400d3f7	      4070	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	CALL_9
0x400d3f7	      0x48637c2420	         movsxd rdi, dword [rsp + 0x20] 	      4071	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2
0x400d3fc	          0x48033b	                    add rdi, qword [rbx]	      4071	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2
0x400d3ff	          0x48893b	                    mov qword [rbx], rdi	      4071	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2
0x400d402	              0x59	                                 pop rcx	      4072	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	IF_8
0x400d403	              0x5e	                                 pop rsi	      4072	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	IF_8
0x400d404	        0x448b0424	                    mov r8d, dword [rsp]	      4072	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	IF_8
0x400d408	          0x4585c0	                           test r8d, r8d	      4072	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	IF_8
0x400d40b	            0x7435	                            je 0x400d442	      4072	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	IF_8
0x400d40d	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4075	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	IF_8
0x400d412	    0x41c704240100	                      mov dword [r12], 1	      4074	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	IF_8
0x400d41a	      0x4989442408	                mov qword [r12 + 8], rax	      4075	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	IF_8
0x400d41f	          0x488b3b	                    mov rdi, qword [rbx]	      4075	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	IF_8
0x400d422	            0xeb1e	                           jmp 0x400d442	      4075	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_2	IF_8
0x400d424	          0x8b0424	                    mov eax, dword [rsp]	      4124	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_10
0x400d427	        0x498d7d01	                      lea rdi, [r13 + 1]	      4123	eval.c	ELSE_15	FUNCTION_70	SWITCH_1
0x400d42b	          0x48893b	                    mov qword [rbx], rdi	      4123	eval.c	ELSE_15	FUNCTION_70	SWITCH_1
0x400d42e	            0x85c0	                           test eax, eax	      4124	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_10
0x400d430	     0xf859f080000	                           jne 0x400dcd5	      4124	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_10
0x400d436	          0x803f00	                       cmp byte [rdi], 0	      4130	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_11
0x400d439	            0x7407	                            je 0x400d442	      4130	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_11
0x400d43b	        0x4883c701	                              add rdi, 1	      4131	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_11
0x400d43f	          0x48893b	                    mov qword [rbx], rdi	      4131	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_11
0x400d442	      0xe800000000	                          call 0x400d447	      4221	eval.c	ELSE_15	FUNCTION_70	CALL_34
0x400d447	          0x488903	                    mov qword [rbx], rax	      4221	eval.c	ELSE_15	FUNCTION_70	CALL_34
0x400d44a	        0x448b3424	                   mov r14d, dword [rsp]	      4226	eval.c	ELSE_15	FUNCTION_70	CALL_35
0x400d44e	      0xb901000000	                              mov ecx, 1	      4226	eval.c	ELSE_15	FUNCTION_70	CALL_35
0x400d453	          0x4c89e6	                            mov rsi, r12	      4226	eval.c	ELSE_15	FUNCTION_70	CALL_35
0x400d456	          0x4889df	                            mov rdi, rbx	      4226	eval.c	ELSE_15	FUNCTION_70	CALL_35
0x400d459	          0x4489f2	                           mov edx, r14d	      4226	eval.c	ELSE_15	FUNCTION_70	CALL_35
0x400d45c	      0xe800000000	                          call 0x400d461	      4226	eval.c	ELSE_15	FUNCTION_70	CALL_35
0x400d461	          0x83f801	                              cmp eax, 1	      4231	eval.c	ELSE_15	FUNCTION_70	IF_25
0x400d464	          0x4189c7	                           mov r15d, eax	      4226	eval.c	ELSE_15	FUNCTION_70	CALL_35
0x400d467	     0xf8580feffff	                           jne 0x400d2ed	      4231	eval.c	ELSE_15	FUNCTION_70	IF_25
0x400d46d	          0x4585f6	                         test r14d, r14d	      4231	eval.c	ELSE_15	FUNCTION_70	IF_25
0x400d470	     0xf8477feffff	                            je 0x400d2ed	      4231	eval.c	ELSE_15	FUNCTION_70	IF_25
0x400d476	          0x4c39ed	                            cmp rbp, r13	      4231	eval.c	ELSE_15	FUNCTION_70	IF_25
0x400d479	     0xf836efeffff	                           jae 0x400d2ed	      4231	eval.c	ELSE_15	FUNCTION_70	IF_25
0x400d47f	      0x41833c2407	                      cmp dword [r12], 7	      4238	eval.c	ELSE_15	FUNCTION_70	IF_25	IF_26
0x400d484	    0xc74424140000	               mov dword [rsp + 0x14], 0	      4233	eval.c	ELSE_15	FUNCTION_70	IF_25
0x400d48c	     0xf8566020000	                           jne 0x400d6f8	      4238	eval.c	ELSE_15	FUNCTION_70	IF_25	IF_26
0x400d492	        0x660fefc9	                         pxor xmm1, xmm1	      4238	eval.c	ELSE_15	FUNCTION_70	IF_25	IF_26
0x400d496	    0xf2410f104424	            movsd xmm0, qword [r12 + 8] 	      4239	eval.c	ELSE_15	FUNCTION_70	IF_25	IF_26
0x400d49d	    0xf20f10150000	         movsd xmm2, qword [0x0400d4a5] 	      4266	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	ELSE_10	ELSE_11	IF_30	IF_31
0x400d4a5	            0xeb1a	                           jmp 0x400d4c1	      4266	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	ELSE_10	ELSE_11	IF_30	IF_31
0x400d4a7	    0x660f1f840000	                    nop word [rax + rax]	      4266	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	ELSE_10	ELSE_11	IF_30	IF_31
0x400d4b0	            0x3c2d	                            cmp al, 0x2d	      4262	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	ELSE_10	ELSE_11	IF_30
0x400d4b2	     0xf84e8070000	                            je 0x400dca0	      4262	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	ELSE_10	ELSE_11	IF_30
0x400d4b8	          0x4c39ed	                            cmp rbp, r13	      4250	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2
0x400d4bb	     0xf840d030000	                            je 0x400d7ce	      4250	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2
0x400d4c1	        0x4983ed01	                              sub r13, 1	      4252	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2
0x400d4c5	      0x410fb64500	                   movzx eax, byte [r13]	      4253	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28
0x400d4ca	            0x3c21	                            cmp al, 0x21	      4253	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28
0x400d4cc	            0x75e2	                           jne 0x400d4b0	      4253	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28
0x400d4ce	        0x660f2ec1	                      ucomisd xmm0, xmm1	      4257	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28	IF_29
0x400d4d2	            0x7a0a	                            jp 0x400d4de	      4257	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28	IF_29
0x400d4d4	    0xf20f10050000	         movsd xmm0, qword [0x0400d4dc] 	      4257	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28	IF_29
0x400d4dc	            0x74da	                            je 0x400d4b8	      4257	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28	IF_29
0x400d4de	        0x660f28c1	                       movapd xmm0, xmm1	      4257	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28	IF_29
0x400d4e2	            0xebd4	                           jmp 0x400d4b8	      4257	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28	IF_29
0x400d4e4	          0x8b1424	                    mov edx, dword [rsp]	      4111	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_15
0x400d4e7	          0x4889df	                            mov rdi, rbx	      4111	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_15
0x400d4ea	          0x4c89e6	                            mov rsi, r12	      4111	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_15
0x400d4ed	      0xe800000000	                          call 0x400d4f2	      4111	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_15
0x400d4f2	          0x488b3b	                    mov rdi, qword [rbx]	      4111	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_15
0x400d4f5	          0x4189c7	                           mov r15d, eax	      4111	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_15
0x400d4f8	        0x4183ff02	                             cmp r15d, 2	      4153	eval.c	ELSE_15	FUNCTION_70	IF_14
0x400d4fc	     0xf85d9fdffff	                           jne 0x400d2db	      4153	eval.c	ELSE_15	FUNCTION_70	IF_14
0x400d502	          0x4989fe	                            mov r14, rdi	      4153	eval.c	ELSE_15	FUNCTION_70	IF_14
0x400d505	      0xe92d010000	                           jmp 0x400d637	      4153	eval.c	ELSE_15	FUNCTION_70	IF_14
0x400d50a	        0x4d8d7501	                      lea r14, [r13 + 1]	      5858	eval.c	FUNCTION_92
0x400d50e	    0xc74424200000	               mov dword [rsp + 0x20], 0	      5856	eval.c	FUNCTION_92
0x400d516	          0x4c8933	                    mov qword [rbx], r14	      5858	eval.c	FUNCTION_92
0x400d519	          0x4d89f7	                            mov r15, r14	      6086	eval.c	FUNCTION_95	FOR_1	CALL_1
0x400d51c	            0xeb06	                           jmp 0x400d524	      6086	eval.c	FUNCTION_95	FOR_1	CALL_1
0x400d51e	            0x6690	                                     nop	      6086	eval.c	FUNCTION_95	FOR_1	CALL_1
0x400d520	        0x4983c701	                              add r15, 1	      6086	eval.c	FUNCTION_95	FOR_1	CALL_1
0x400d524	        0x410fb63f	                   movzx edi, byte [r15]	      6086	eval.c	FUNCTION_95	FOR_1	CALL_1
0x400d528	      0xe800000000	                          call 0x400d52d	      6086	eval.c	FUNCTION_95	FOR_1	CALL_1
0x400d52d	            0x85c0	                           test eax, eax	      6086	eval.c	FUNCTION_95	FOR_1	CALL_1
0x400d52f	            0x75ef	                           jne 0x400d520	      6086	eval.c	FUNCTION_95	FOR_1	CALL_1
0x400d531	          0x488b3b	                    mov rdi, qword [rbx]	      6088	eval.c	FUNCTION_95	IF_1
0x400d534	          0x4939ff	                            cmp r15, rdi	      6088	eval.c	FUNCTION_95	IF_1
0x400d537	     0xf84aa090000	                            je 0x400dee7	      6088	eval.c	FUNCTION_95	IF_1
0x400d53d	          0x8b3424	                    mov esi, dword [rsp]	      5861	eval.c	FUNCTION_92	IF_1
0x400d540	          0x4c893b	                    mov qword [rbx], r15	      6092	eval.c	FUNCTION_95
0x400d543	            0x85f6	                           test esi, esi	      5861	eval.c	FUNCTION_92	IF_1
0x400d545	     0xf847c070000	                            je 0x400dcc7	      5861	eval.c	FUNCTION_92	IF_1
0x400d54b	          0x4c89f8	                            mov rax, r15	      6091	eval.c	FUNCTION_95
0x400d54e	          0x4829f8	                            sub rax, rdi	      6091	eval.c	FUNCTION_95
0x400d551	          0x4c89ff	                            mov rdi, r15	      5863	eval.c	FUNCTION_92	IF_1	IF_2
0x400d554	          0x4531ff	                          xor r15d, r15d	      5864	eval.c	FUNCTION_92	IF_1	IF_2
0x400d557	            0x85c0	                           test eax, eax	      5863	eval.c	FUNCTION_92	IF_1	IF_2
0x400d559	     0xf847cfdffff	                            je 0x400d2db	      5863	eval.c	FUNCTION_92	IF_1	IF_2
0x400d55f	            0x4898	                                    cdqe	      5866	eval.c	FUNCTION_92	IF_1
0x400d561	      0x488d742420	                   lea rsi, [rsp + 0x20]	      5869	eval.c	FUNCTION_92	IF_1	CALL_2
0x400d566	          0x4c89f7	                            mov rdi, r14	      5869	eval.c	FUNCTION_92	IF_1	CALL_2
0x400d569	        0x4d8d3c06	                    lea r15, [r14 + rax]	      5866	eval.c	FUNCTION_92	IF_1
0x400d56d	        0x410fb607	                   movzx eax, byte [r15]	      5866	eval.c	FUNCTION_92	IF_1
0x400d571	        0x41c60700	                       mov byte [r15], 0	      5867	eval.c	FUNCTION_92	IF_1
0x400d575	        0x8844240c	                mov byte [rsp + 0xc], al	      5866	eval.c	FUNCTION_92	IF_1
0x400d579	      0xe800000000	                          call 0x400d57e	      5869	eval.c	FUNCTION_92	IF_1	CALL_2
0x400d57e	          0x4885c0	                           test rax, rax	      5870	eval.c	FUNCTION_92	IF_1	IF_3
0x400d581	     0xf84da080000	                            je 0x400de61	      5870	eval.c	FUNCTION_92	IF_1	IF_3
0x400d587	          0x803800	                       cmp byte [rax], 0	      5870	eval.c	FUNCTION_92	IF_1	IF_3
0x400d58a	     0xf84d1080000	                            je 0x400de61	      5870	eval.c	FUNCTION_92	IF_1	IF_3
0x400d590	        0x8b4c2420	            mov ecx, dword [rsp + 0x20] 	      5872	eval.c	FUNCTION_92	IF_1	IF_3	IF_4
0x400d594	            0x85c9	                           test ecx, ecx	      5872	eval.c	FUNCTION_92	IF_1	IF_3	IF_4
0x400d596	            0x7508	                           jne 0x400d5a0	      5872	eval.c	FUNCTION_92	IF_1	IF_3	IF_4
0x400d598	          0x4889c7	                            mov rdi, rax	      5873	eval.c	FUNCTION_92	IF_1	IF_3	CALL_3
0x400d59b	      0xe800000000	                          call 0x400d5a0	      5873	eval.c	FUNCTION_92	IF_1	IF_3	CALL_3
0x400d5a0	       0xfb64c240c	            movzx ecx, byte [rsp + 0xc] 	      5885	eval.c	FUNCTION_92	IF_1
0x400d5a5	          0x41880f	                      mov byte [r15], cl	      5885	eval.c	FUNCTION_92	IF_1
0x400d5a8	      0x4989442408	                mov qword [r12 + 8], rax	      5888	eval.c	FUNCTION_92	IF_1
0x400d5ad	    0x41bf01000000	                             mov r15d, 1	      5891	eval.c	FUNCTION_92
0x400d5b3	    0x41c704240200	                      mov dword [r12], 2	      5887	eval.c	FUNCTION_92	IF_1
0x400d5bb	          0x488b3b	                    mov rdi, qword [rbx]	      5887	eval.c	FUNCTION_92	IF_1
0x400d5be	      0xe918fdffff	                           jmp 0x400d2db	      5887	eval.c	FUNCTION_92	IF_1
0x400d5c3	        0x498d7d01	                      lea rdi, [r13 + 1]	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400d5c7	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400d5cc	      0x410fb64501	               movzx eax, byte [r13 + 1]	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400d5d1	            0x84c0	                             test al, al	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400d5d3	     0xf8427090000	                            je 0x400df00	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400d5d9	          0x4531f6	                          xor r14d, r14d	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400d5dc	            0xeb15	                           jmp 0x400d5f3	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400d5de	            0x6690	                                     nop	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400d5e0	          0x4801c7	                            add rdi, rax	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400d5e3	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400d5e8	           0xfb607	                   movzx eax, byte [rdi]	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400d5eb	            0x84c0	                             test al, al	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400d5ed	     0xf84b1010000	                            je 0x400d7a4	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400d5f3	            0x3c27	                            cmp al, 0x27	      4809	eval.c	FUNCTION_74	FOR_1	IF_1
0x400d5f5	     0xf84b5000000	                            je 0x400d6b0	      4809	eval.c	FUNCTION_74	FOR_1	IF_1
0x400d5fb	    0x448b05000000	            mov r8d, dword [0x0400d602] 	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400d602	      0xb801000000	                              mov eax, 1	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400d607	          0x4585c0	                           test r8d, r8d	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400d60a	            0x74d4	                            je 0x400d5e0	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400d60c	    0xff1500000000	                 call qword [0x0400d612]	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400d612	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400d617	            0x4898	                                    cdqe	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400d619	            0xebc5	                           jmp 0x400d5e0	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400d61b	          0x8b1424	                    mov edx, dword [rsp]	      4096	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_12
0x400d61e	          0x4889df	                            mov rdi, rbx	      4096	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_12
0x400d621	          0x4c89e6	                            mov rsi, r12	      4096	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_12
0x400d624	      0xe800000000	                          call 0x400d629	      4096	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_12
0x400d629	          0x488b3b	                    mov rdi, qword [rbx]	      4096	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_12
0x400d62c	          0x4189c7	                           mov r15d, eax	      4096	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_12
0x400d62f	      0xe9c4feffff	                           jmp 0x400d4f8	      4097	eval.c	ELSE_15	FUNCTION_70	SWITCH_1
0x400d634	          0x4d89ee	                            mov r14, r13	      4014	eval.c	ELSE_15	FUNCTION_70	SWITCH_1
0x400d637	          0x8b1424	                    mov edx, dword [rsp]	      4160	eval.c	ELSE_15	FUNCTION_70	IF_14	CALL_23
0x400d63a	      0x488d742418	                   lea rsi, [rsp + 0x18]	      4160	eval.c	ELSE_15	FUNCTION_70	IF_14	CALL_23
0x400d63f	          0x4889df	                            mov rdi, rbx	      4160	eval.c	ELSE_15	FUNCTION_70	IF_14	CALL_23
0x400d642	      0xb901000000	                              mov ecx, 1	      4160	eval.c	ELSE_15	FUNCTION_70	IF_14	CALL_23
0x400d647	      0xe800000000	                          call 0x400d64c	      4160	eval.c	ELSE_15	FUNCTION_70	IF_14	CALL_23
0x400d64c	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4161	eval.c	ELSE_15	FUNCTION_70	IF_14	IF_15
0x400d651	        0x89442410	             mov dword [rsp + 0x10], eax	      4160	eval.c	ELSE_15	FUNCTION_70	IF_14	CALL_23
0x400d655	          0x4885ff	                           test rdi, rdi	      4160	eval.c	ELSE_15	FUNCTION_70	IF_14	CALL_23
0x400d658	        0x4c0f45f7	                         cmovne r14, rdi	      4160	eval.c	ELSE_15	FUNCTION_70	IF_14	CALL_23
0x400d65c	          0x4531ff	                          xor r15d, r15d	      4165	eval.c	ELSE_15	FUNCTION_70	IF_14	IF_16
0x400d65f	            0x85c0	                           test eax, eax	      4164	eval.c	ELSE_15	FUNCTION_70	IF_14	IF_16
0x400d661	            0x7e3e	                           jle 0x400d6a1	      4164	eval.c	ELSE_15	FUNCTION_70	IF_14	IF_16
0x400d663	          0x488b13	                    mov rdx, qword [rbx]	      4168	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17
0x400d666	          0x803a28	                    cmp byte [rdx], 0x28	      4168	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17
0x400d669	     0xf8496060000	                            je 0x400dd05	      4168	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17
0x400d66f	        0x448b1424	                   mov r10d, dword [rsp]	      4210	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	ELSE_6	IF_23
0x400d673	          0x4585d2	                         test r10d, r10d	      4210	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	ELSE_6	IF_23
0x400d676	     0xf856a070000	                           jne 0x400dde6	      4210	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	ELSE_6	IF_23
0x400d67c	    0x48833d000000	               cmp qword [0x0400d684], 0	      6693	eval.c	FUNCTION_117	IF_1
0x400d684	    0x41bf01000000	                             mov r15d, 1	      4215	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	ELSE_7
0x400d68a	            0x7415	                            je 0x400d6a1	      6693	eval.c	FUNCTION_117	IF_1
0x400d68c	          0x4c89f7	                            mov rdi, r14	      6693	eval.c	FUNCTION_117	IF_1
0x400d68f	            0x89c6	                            mov esi, eax	      6693	eval.c	FUNCTION_117	IF_1
0x400d691	    0x41bf01000000	                             mov r15d, 1	      4215	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	ELSE_7
0x400d697	      0xe8049fffff	             call sym.check_vars.part.12	      4215	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	ELSE_7
0x400d69c	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4215	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	ELSE_7
0x400d6a1	      0xe800000000	                          call 0x400d6a6	      4218	eval.c	ELSE_15	FUNCTION_70	IF_14	CALL_33
0x400d6a6	      0xe92dfcffff	                           jmp 0x400d2d8	      4218	eval.c	ELSE_15	FUNCTION_70	IF_14	CALL_33
0x400d6ab	       0xf1f440000	                   nop dword [rax + rax]	      4218	eval.c	ELSE_15	FUNCTION_70	IF_14	CALL_33
0x400d6b0	        0x807f0127	                cmp byte [rdi + 1], 0x27	      4811	eval.c	FUNCTION_74	FOR_1	IF_1	IF_2
0x400d6b4	     0xf8538010000	                           jne 0x400d7f2	      4811	eval.c	FUNCTION_74	FOR_1	IF_1	IF_2
0x400d6ba	        0x4883c701	                              add rdi, 1	      4814	eval.c	FUNCTION_74	FOR_1	IF_1
0x400d6be	        0x4183c601	                             add r14d, 1	      4813	eval.c	FUNCTION_74	FOR_1	IF_1
0x400d6c2	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      4814	eval.c	FUNCTION_74	FOR_1	IF_1
0x400d6c7	      0xe92fffffff	                           jmp 0x400d5fb	      4814	eval.c	FUNCTION_74	FOR_1	IF_1
0x400d6cc	         0xf1f4000	                         nop dword [rax]	      4814	eval.c	FUNCTION_74	FOR_1	IF_1
0x400d6d0	        0x807f0100	                   cmp byte [rdi + 1], 0	      4671	eval.c	FUNCTION_73	FOR_1	IF_1
0x400d6d4	     0xf8479fcffff	                            je 0x400d353	      4671	eval.c	FUNCTION_73	FOR_1	IF_1
0x400d6da	        0x488d4701	                      lea rax, [rdi + 1]	      4673	eval.c	FUNCTION_73	FOR_1	IF_1
0x400d6de	      0x4889442418	             mov qword [rsp + 0x18], rax	      4673	eval.c	FUNCTION_73	FOR_1	IF_1
0x400d6e3	        0x807f013c	                cmp byte [rdi + 1], 0x3c	      4676	eval.c	FUNCTION_73	FOR_1	IF_1	IF_2
0x400d6e7	     0xf84ce050000	                            je 0x400dcbb	      4676	eval.c	FUNCTION_73	FOR_1	IF_1	IF_2
0x400d6ed	          0x4889c7	                            mov rdi, rax	      4676	eval.c	FUNCTION_73	FOR_1	IF_1	IF_2
0x400d6f0	      0xe95efcffff	                           jmp 0x400d353	      4676	eval.c	FUNCTION_73	FOR_1	IF_1	IF_2
0x400d6f5	           0xf1f00	                         nop dword [rax]	      4676	eval.c	FUNCTION_73	FOR_1	IF_1	IF_2
0x400d6f8	      0x488d742414	                   lea rsi, [rsp + 0x14]	      4242	eval.c	ELSE_15	FUNCTION_70	IF_25	CALL_36
0x400d6fd	          0x4c89e7	                            mov rdi, r12	      4242	eval.c	ELSE_15	FUNCTION_70	IF_25	CALL_36
0x400d700	      0xe800000000	                          call 0x400d705	      4242	eval.c	ELSE_15	FUNCTION_70	IF_25	CALL_36
0x400d705	      0x448b4c2414	            mov r9d, dword [rsp + 0x14] 	      4243	eval.c	ELSE_15	FUNCTION_70	IF_25	IF_27
0x400d70a	          0x4889c3	                            mov rbx, rax	      4242	eval.c	ELSE_15	FUNCTION_70	IF_25	CALL_36
0x400d70d	          0x4585c9	                           test r9d, r9d	      4243	eval.c	ELSE_15	FUNCTION_70	IF_25	IF_27
0x400d710	            0x7437	                            je 0x400d749	      4243	eval.c	ELSE_15	FUNCTION_70	IF_25	IF_27
0x400d712	          0x4c89e7	                            mov rdi, r12	      4245	eval.c	ELSE_15	FUNCTION_70	IF_25	IF_27	CALL_37
0x400d715	          0x4531ff	                          xor r15d, r15d	      4246	eval.c	ELSE_15	FUNCTION_70	IF_25	IF_27
0x400d718	      0xe800000000	                          call 0x400d71d	      4245	eval.c	ELSE_15	FUNCTION_70	IF_25	IF_27	CALL_37
0x400d71d	      0xe9cbfbffff	                           jmp 0x400d2ed	      4245	eval.c	ELSE_15	FUNCTION_70	IF_25	IF_27	CALL_37
0x400d722	            0x3c22	                            cmp al, 0x22	      4681	eval.c	FUNCTION_73	IF_3
0x400d724	     0xf857f050000	                           jne 0x400dca9	      4681	eval.c	FUNCTION_73	IF_3
0x400d72a	        0x448b1c24	                   mov r11d, dword [rsp]	      4688	eval.c	FUNCTION_73	IF_4
0x400d72e	          0x4585db	                         test r11d, r11d	      4688	eval.c	FUNCTION_73	IF_4
0x400d731	     0xf8549010000	                           jne 0x400d880	      4688	eval.c	FUNCTION_73	IF_4
0x400d737	        0x4883c701	                              add rdi, 1	      4827	eval.c	FUNCTION_74	IF_4
0x400d73b	    0x41bf01000000	                             mov r15d, 1	      4828	eval.c	FUNCTION_74	IF_4
0x400d741	          0x48893b	                    mov qword [rbx], rdi	      4827	eval.c	FUNCTION_74	IF_4
0x400d744	      0xe992fbffff	                           jmp 0x400d2db	      4827	eval.c	FUNCTION_74	IF_4
0x400d749	      0x41833c2407	                      cmp dword [r12], 7	      4827	eval.c	FUNCTION_74	IF_4
0x400d74e	            0x7519	                           jne 0x400d769	      4827	eval.c	FUNCTION_74	IF_4
0x400d750	      0xe9f9070000	                           jmp 0x400df4e	      4827	eval.c	FUNCTION_74	IF_4
0x400d755	           0xf1f00	                         nop dword [rax]	      4827	eval.c	FUNCTION_74	IF_4
0x400d758	          0x4889da	                            mov rdx, rbx	      4269	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	ELSE_10	ELSE_11	IF_30	ELSE_12
0x400d75b	          0x48f7da	                                 neg rdx	      4269	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	ELSE_10	ELSE_11	IF_30	ELSE_12
0x400d75e	            0x3c2d	                            cmp al, 0x2d	      4269	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	ELSE_10	ELSE_11	IF_30	ELSE_12
0x400d760	        0x480f44da	                          cmove rbx, rdx	      4269	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	ELSE_10	ELSE_11	IF_30	ELSE_12
0x400d764	          0x4c39ed	                            cmp rbp, r13	      4250	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2
0x400d767	            0x741b	                            je 0x400d784	      4250	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2
0x400d769	        0x4983ed01	                              sub r13, 1	      4252	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2
0x400d76d	      0x410fb64500	                   movzx eax, byte [r13]	      4253	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28
0x400d772	            0x3c21	                            cmp al, 0x21	      4253	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28
0x400d774	            0x75e2	                           jne 0x400d758	      4253	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28
0x400d776	          0x4885db	                           test rbx, rbx	      4260	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28	ELSE_10
0x400d779	           0xf94c3	                                 sete bl	      4260	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28	ELSE_10
0x400d77c	          0x4c39ed	                            cmp rbp, r13	      4250	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2
0x400d77f	           0xfb6db	                           movzx ebx, bl	      4260	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	IF_28	ELSE_10
0x400d782	            0x75e5	                           jne 0x400d769	      4250	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2
0x400d784	          0x4c89e7	                            mov rdi, r12	      4281	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	ELSE_13	CALL_39
0x400d787	    0x41bf01000000	                             mov r15d, 1	      4283	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	ELSE_13
0x400d78d	      0xe800000000	                          call 0x400d792	      4281	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	ELSE_13	CALL_39
0x400d792	    0x41c704240100	                      mov dword [r12], 1	      4282	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	ELSE_13
0x400d79a	      0x49895c2408	                mov qword [r12 + 8], rbx	      4283	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	ELSE_13
0x400d79f	      0xe949fbffff	                           jmp 0x400d2ed	      4283	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	ELSE_13
0x400d7a4	          0x4c8b33	                    mov r14, qword [rbx]	      4283	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	ELSE_13
0x400d7a7	      0xba05000000	                              mov edx, 5	      4820	eval.c	FUNCTION_74	IF_3	CALL_3
0x400d7ac	      0xbe00000000	                              mov esi, 0	      4820	eval.c	FUNCTION_74	IF_3	CALL_3
0x400d7b1	            0x31ff	                            xor edi, edi	      4820	eval.c	FUNCTION_74	IF_3	CALL_3
0x400d7b3	      0xe800000000	                          call 0x400d7b8	      4820	eval.c	FUNCTION_74	IF_3	CALL_3
0x400d7b8	          0x4c89f6	                            mov rsi, r14	      4820	eval.c	FUNCTION_74	IF_3	CALL_3
0x400d7bb	          0x4889c7	                            mov rdi, rax	      4820	eval.c	FUNCTION_74	IF_3	CALL_3
0x400d7be	      0xe800000000	                          call 0x400d7c3	      4820	eval.c	FUNCTION_74	IF_3	CALL_3
0x400d7c3	          0x488b3b	                    mov rdi, qword [rbx]	      4820	eval.c	FUNCTION_74	IF_3	CALL_3
0x400d7c6	          0x4531ff	                          xor r15d, r15d	      4821	eval.c	FUNCTION_74	IF_3
0x400d7c9	      0xe90dfbffff	                           jmp 0x400d2db	      4821	eval.c	FUNCTION_74	IF_3
0x400d7ce	          0x4c89e7	                            mov rdi, r12	      4275	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	ELSE_12	IF_32	CALL_38
0x400d7d1	      0xf20f110424	                 movsd qword [rsp], xmm0	      4275	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	ELSE_12	IF_32	CALL_38
0x400d7d6	    0x41bf01000000	                             mov r15d, 1	      4275	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	ELSE_12	IF_32	CALL_38
0x400d7dc	      0xe800000000	                          call 0x400d7e1	      4275	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	ELSE_12	IF_32	CALL_38
0x400d7e1	      0xf20f100424	                 movsd xmm0, qword [rsp]	      4276	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	ELSE_12	IF_32
0x400d7e6	    0xf2410f114424	             movsd qword [r12 + 8], xmm0	      4276	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	ELSE_12	IF_32
0x400d7ed	      0xe9fbfaffff	                           jmp 0x400d2ed	      4276	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	ELSE_12	IF_32
0x400d7f2	          0x8b1424	                    mov edx, dword [rsp]	      4825	eval.c	FUNCTION_74	IF_4
0x400d7f5	            0x85d2	                           test edx, edx	      4825	eval.c	FUNCTION_74	IF_4
0x400d7f7	     0xf843affffff	                            je 0x400d737	      4825	eval.c	FUNCTION_74	IF_4
0x400d7fd	          0x482b3b	                    sub rdi, qword [rbx]	      4834	eval.c	FUNCTION_74	CALL_4
0x400d800	          0x4429f7	                           sub edi, r14d	      4834	eval.c	FUNCTION_74	CALL_4
0x400d803	      0xe800000000	                          call 0x400d808	      4834	eval.c	FUNCTION_74	CALL_4
0x400d808	          0x4885c0	                           test rax, rax	      4835	eval.c	FUNCTION_74	IF_5
0x400d80b	      0x4889442420	             mov qword [rsp + 0x20], rax	      4834	eval.c	FUNCTION_74	CALL_4
0x400d810	            0x74b1	                            je 0x400d7c3	      4835	eval.c	FUNCTION_74	IF_5
0x400d812	      0x4989442408	                mov qword [r12 + 8], rax	      4838	eval.c	FUNCTION_74
0x400d817	          0x488b03	                    mov rax, qword [rbx]	      4840	eval.c	FUNCTION_74	FOR_2
0x400d81a	    0x41c704240200	                      mov dword [r12], 2	      4837	eval.c	FUNCTION_74
0x400d822	        0x4883c001	                              add rax, 1	      4840	eval.c	FUNCTION_74	FOR_2
0x400d826	      0x4889442418	             mov qword [rsp + 0x18], rax	      4840	eval.c	FUNCTION_74	FOR_2
0x400d82b	            0xeb24	                           jmp 0x400d851	      4840	eval.c	FUNCTION_74	FOR_2
0x400d82d	           0xf1f00	                         nop dword [rax]	      4840	eval.c	FUNCTION_74	FOR_2
0x400d830	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      4848	eval.c	FUNCTION_74	FOR_2	CALL_5
0x400d835	        0x488d4a01	                      lea rcx, [rdx + 1]	      4848	eval.c	FUNCTION_74	FOR_2	CALL_5
0x400d839	      0x48894c2420	             mov qword [rsp + 0x20], rcx	      4848	eval.c	FUNCTION_74	FOR_2	CALL_5
0x400d83e	        0x488d4801	                      lea rcx, [rax + 1]	      4848	eval.c	FUNCTION_74	FOR_2	CALL_5
0x400d842	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      4848	eval.c	FUNCTION_74	FOR_2	CALL_5
0x400d847	           0xfb600	                   movzx eax, byte [rax]	      4848	eval.c	FUNCTION_74	FOR_2	CALL_5
0x400d84a	            0x8802	                      mov byte [rdx], al	      4848	eval.c	FUNCTION_74	FOR_2	CALL_5
0x400d84c	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4848	eval.c	FUNCTION_74	FOR_2	CALL_5
0x400d851	           0xfb610	                   movzx edx, byte [rax]	      4840	eval.c	FUNCTION_74	FOR_2
0x400d854	            0x84d2	                             test dl, dl	      4840	eval.c	FUNCTION_74	FOR_2
0x400d856	     0xf84a7050000	                            je 0x400de03	      4840	eval.c	FUNCTION_74	FOR_2
0x400d85c	          0x80fa27	                            cmp dl, 0x27	      4842	eval.c	FUNCTION_74	FOR_2	IF_6
0x400d85f	     0xf8472010000	                            je 0x400d9d7	      4842	eval.c	FUNCTION_74	FOR_2	IF_6
0x400d865	    0x8b3d00000000	            mov edi, dword [0x0400d86b] 	      4848	eval.c	FUNCTION_74	FOR_2	CALL_5
0x400d86b	            0x85ff	                           test edi, edi	      4848	eval.c	FUNCTION_74	FOR_2	CALL_5
0x400d86d	            0x74c1	                            je 0x400d830	      4848	eval.c	FUNCTION_74	FOR_2	CALL_5
0x400d86f	      0x488d742420	                   lea rsi, [rsp + 0x20]	      4848	eval.c	FUNCTION_74	FOR_2	CALL_5
0x400d874	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      4848	eval.c	FUNCTION_74	FOR_2	CALL_5
0x400d879	      0xe800000000	                          call 0x400d87e	      4848	eval.c	FUNCTION_74	FOR_2	CALL_5
0x400d87e	            0xebcc	                           jmp 0x400d84c	      4848	eval.c	FUNCTION_74	FOR_2	CALL_5
0x400d880	          0x482b3b	                    sub rdi, qword [rbx]	      4698	eval.c	FUNCTION_73	CALL_4
0x400d883	          0x4401f7	                           add edi, r14d	      4698	eval.c	FUNCTION_73	CALL_4
0x400d886	      0xe800000000	                          call 0x400d88b	      4698	eval.c	FUNCTION_73	CALL_4
0x400d88b	          0x4885c0	                           test rax, rax	      4699	eval.c	FUNCTION_73	IF_5
0x400d88e	      0x4889442420	             mov qword [rsp + 0x20], rax	      4698	eval.c	FUNCTION_73	CALL_4
0x400d893	     0xf842affffff	                            je 0x400d7c3	      4699	eval.c	FUNCTION_73	IF_5
0x400d899	      0x4989442408	                mov qword [r12 + 8], rax	      4702	eval.c	FUNCTION_73
0x400d89e	          0x488b03	                    mov rax, qword [rbx]	      4704	eval.c	FUNCTION_73	FOR_2
0x400d8a1	    0x41c704240200	                      mov dword [r12], 2	      4701	eval.c	FUNCTION_73
0x400d8a9	        0x4883c001	                              add rax, 1	      4704	eval.c	FUNCTION_73	FOR_2
0x400d8ad	      0x4889442418	             mov qword [rsp + 0x18], rax	      4704	eval.c	FUNCTION_73	FOR_2
0x400d8b2	           0xfb610	                   movzx edx, byte [rax]	      4704	eval.c	FUNCTION_73	FOR_2
0x400d8b5	            0x84d2	                             test dl, dl	      4704	eval.c	FUNCTION_73	FOR_2
0x400d8b7	            0x7446	                            je 0x400d8ff	      4704	eval.c	FUNCTION_73	FOR_2
0x400d8b9	          0x80fa22	                            cmp dl, 0x22	      4704	eval.c	FUNCTION_73	FOR_2
0x400d8bc	            0x7441	                            je 0x400d8ff	      4704	eval.c	FUNCTION_73	FOR_2
0x400d8be	          0x80fa5c	                            cmp dl, 0x5c	      4706	eval.c	FUNCTION_73	FOR_2	IF_6
0x400d8c1	     0xf8428010000	                            je 0x400d9ef	      4706	eval.c	FUNCTION_73	FOR_2	IF_6
0x400d8c7	    0x448b0d000000	            mov r9d, dword [0x0400d8ce] 	      4782	eval.c	FUNCTION_73	FOR_2	CALL_11
0x400d8ce	          0x4585c9	                           test r9d, r9d	      4782	eval.c	FUNCTION_73	FOR_2	CALL_11
0x400d8d1	     0xf85ab030000	                           jne 0x400dc82	      4782	eval.c	FUNCTION_73	FOR_2	CALL_11
0x400d8d7	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      4782	eval.c	FUNCTION_73	FOR_2	CALL_11
0x400d8dc	        0x488d4a01	                      lea rcx, [rdx + 1]	      4782	eval.c	FUNCTION_73	FOR_2	CALL_11
0x400d8e0	      0x48894c2420	             mov qword [rsp + 0x20], rcx	      4782	eval.c	FUNCTION_73	FOR_2	CALL_11
0x400d8e5	        0x488d4801	                      lea rcx, [rax + 1]	      4782	eval.c	FUNCTION_73	FOR_2	CALL_11
0x400d8e9	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      4782	eval.c	FUNCTION_73	FOR_2	CALL_11
0x400d8ee	           0xfb600	                   movzx eax, byte [rax]	      4782	eval.c	FUNCTION_73	FOR_2	CALL_11
0x400d8f1	            0x8802	                      mov byte [rdx], al	      4782	eval.c	FUNCTION_73	FOR_2	CALL_11
0x400d8f3	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4782	eval.c	FUNCTION_73	FOR_2	CALL_11
0x400d8f8	           0xfb610	                   movzx edx, byte [rax]	      4704	eval.c	FUNCTION_73	FOR_2
0x400d8fb	            0x84d2	                             test dl, dl	      4704	eval.c	FUNCTION_73	FOR_2
0x400d8fd	            0x75ba	                           jne 0x400d8b9	      4704	eval.c	FUNCTION_73	FOR_2
0x400d8ff	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4785	eval.c	FUNCTION_73
0x400d904	    0x41bf01000000	                             mov r15d, 1	      4790	eval.c	FUNCTION_73
0x400d90a	          0xc60000	                       mov byte [rax], 0	      4785	eval.c	FUNCTION_73
0x400d90d	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4786	eval.c	FUNCTION_73	IF_14
0x400d912	          0x803f01	                       cmp byte [rdi], 1	      4787	eval.c	FUNCTION_73	IF_14
0x400d915	        0x4883dfff	             sbb rdi, 0xffffffffffffffff	      4787	eval.c	FUNCTION_73	IF_14
0x400d919	          0x48893b	                    mov qword [rbx], rdi	      4788	eval.c	FUNCTION_73
0x400d91c	      0xe9baf9ffff	                           jmp 0x400d2db	      4085	eval.c	ELSE_15	FUNCTION_70	SWITCH_1
0x400d921	         0xfb67801	               movzx edi, byte [rax + 1]	      4039	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	CALL_3
0x400d925	      0xe800000000	                          call 0x400d92a	      4039	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	CALL_3
0x400d92a	            0x85c0	                           test eax, eax	      4039	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	CALL_3
0x400d92c	     0xf84a3faffff	                            je 0x400d3d5	      4039	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	CALL_3
0x400d932	        0x498d7f02	                      lea rdi, [r15 + 2]	      4042	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	CALL_4
0x400d936	      0xe800000000	                          call 0x400d93b	      4042	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	CALL_4
0x400d93b	           0xfb608	                   movzx ecx, byte [rax]	      4043	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2
0x400d93e	            0x89ca	                            mov edx, ecx	      4043	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2
0x400d940	          0x83e2df	                     and edx, 0xffffffdf	      4043	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2
0x400d943	          0x80fa45	                            cmp dl, 0x45	      4043	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2
0x400d946	            0x753c	                           jne 0x400d984	      4043	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2
0x400d948	         0xfb65001	               movzx edx, byte [rax + 1]	      4046	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2	IF_3
0x400d94c	        0x4c8d7001	                      lea r14, [rax + 1]	      4045	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2
0x400d950	          0x8d4ad5	                   lea ecx, [rdx - 0x2b]	      4046	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2	IF_3
0x400d953	    0x81e1fd000000	                           and ecx, 0xfd	      4046	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2	IF_3
0x400d959	            0x7508	                           jne 0x400d963	      4046	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2	IF_3
0x400d95b	         0xfb65002	               movzx edx, byte [rax + 2]	      4046	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2	IF_3
0x400d95f	        0x4c8d7002	                      lea r14, [rax + 2]	      4047	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2	IF_3
0x400d963	           0xfb6fa	                           movzx edi, dl	      4048	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2	IF_4	CALL_5
0x400d966	      0xe800000000	                          call 0x400d96b	      4048	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2	IF_4	CALL_5
0x400d96b	            0x85c0	                           test eax, eax	      4048	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2	IF_4	CALL_5
0x400d96d	     0xf8462faffff	                            je 0x400d3d5	      4048	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2	IF_4	CALL_5
0x400d973	        0x498d7e01	                      lea rdi, [r14 + 1]	      4051	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2	CALL_6
0x400d977	      0xe800000000	                          call 0x400d97c	      4051	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2	CALL_6
0x400d97c	           0xfb608	                   movzx ecx, byte [rax]	      4051	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2	CALL_6
0x400d97f	            0x89ca	                            mov edx, ecx	      4051	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2	CALL_6
0x400d981	          0x83e2df	                     and edx, 0xffffffdf	      4051	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_2	CALL_6
0x400d984	          0x83ea41	                           sub edx, 0x41	      4053	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_5	CALL_7
0x400d987	          0x80fa19	                            cmp dl, 0x19	      4053	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_5	CALL_7
0x400d98a	     0xf8645faffff	                           jbe 0x400d3d5	      4053	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_5	CALL_7
0x400d990	          0x80f92e	                            cmp cl, 0x2e	      4053	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_5	CALL_7
0x400d993	     0xf843cfaffff	                            je 0x400d3d5	      4053	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_1	IF_5	CALL_7
0x400d999	          0x488b3b	                    mov rdi, qword [rbx]	      4060	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_6	CALL_8
0x400d99c	      0x488d742420	                   lea rsi, [rsp + 0x20]	      4060	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_6	CALL_8
0x400d9a1	      0xe800000000	                          call 0x400d9a6	      4060	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_6	CALL_8
0x400d9a6	          0x4863f8	                         movsxd rdi, eax	      4060	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_6	CALL_8
0x400d9a9	          0x8b0424	                    mov eax, dword [rsp]	      4061	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_6	IF_7
0x400d9ac	          0x48033b	                    add rdi, qword [rbx]	      4060	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_6	CALL_8
0x400d9af	            0x85c0	                           test eax, eax	      4061	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_6	IF_7
0x400d9b1	          0x48893b	                    mov qword [rbx], rdi	      4060	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_6	CALL_8
0x400d9b4	     0xf8488faffff	                            je 0x400d442	      4061	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_6	IF_7
0x400d9ba	    0xf20f10442420	         movsd xmm0, qword [rsp + 0x20] 	      4064	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_6	IF_7
0x400d9c0	    0x41c704240700	                      mov dword [r12], 7	      4063	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_6	IF_7
0x400d9c8	    0xf2410f114424	             movsd qword [r12 + 8], xmm0	      4064	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_6	IF_7
0x400d9cf	          0x488b3b	                    mov rdi, qword [rbx]	      4064	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_6	IF_7
0x400d9d2	      0xe96bfaffff	                           jmp 0x400d442	      4064	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_6	IF_7
0x400d9d7	        0x80780127	                cmp byte [rax + 1], 0x27	      4844	eval.c	FUNCTION_74	FOR_2	IF_6	IF_7
0x400d9db	     0xf8522040000	                           jne 0x400de03	      4844	eval.c	FUNCTION_74	FOR_2	IF_6	IF_7
0x400d9e1	        0x4883c001	                              add rax, 1	      4846	eval.c	FUNCTION_74	FOR_2	IF_6
0x400d9e5	      0x4889442418	             mov qword [rsp + 0x18], rax	      4846	eval.c	FUNCTION_74	FOR_2	IF_6
0x400d9ea	      0xe976feffff	                           jmp 0x400d865	      4846	eval.c	FUNCTION_74	FOR_2	IF_6
0x400d9ef	        0x488d5001	                      lea rdx, [rax + 1]	      4708	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d9f3	      0x4889542418	             mov qword [rsp + 0x18], rdx	      4708	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d9f8	         0xfb64801	               movzx ecx, byte [rax + 1]	      4708	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d9fc	          0x8d51d0	                   lea edx, [rcx - 0x30]	      4708	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400d9ff	          0x80fa48	                            cmp dl, 0x48	      4708	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400da02	     0xf8743020000	                            ja 0x400dc4b	      4708	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400da08	           0xfb6d2	                           movzx edx, dl	      4708	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400da0b	    0xff24d5000000	                       jmp qword [rdx*8]	      4708	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400da12	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4715	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400da17	        0x488d5001	                      lea rdx, [rax + 1]	      4715	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400da1b	      0x4889542420	             mov qword [rsp + 0x20], rdx	      4715	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400da20	          0xc60009	                       mov byte [rax], 9	      4715	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400da23	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4715	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400da28	        0x4883c001	                              add rax, 1	      4715	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400da2c	      0x4889442418	             mov qword [rsp + 0x18], rax	      4715	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400da31	      0xe97cfeffff	                           jmp 0x400d8b2	      4715	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400da36	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4714	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400da3b	        0x488d5001	                      lea rdx, [rax + 1]	      4714	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400da3f	      0x4889542420	             mov qword [rsp + 0x20], rdx	      4714	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400da44	          0xc6000d	                     mov byte [rax], 0xd	      4714	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400da47	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4714	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400da4c	        0x4883c001	                              add rax, 1	      4714	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400da50	      0x4889442418	             mov qword [rsp + 0x18], rax	      4714	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400da55	      0xe958feffff	                           jmp 0x400d8b2	      4714	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400da5a	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4713	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400da5f	        0x488d5001	                      lea rdx, [rax + 1]	      4713	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400da63	      0x4889542420	             mov qword [rsp + 0x20], rdx	      4713	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400da68	          0xc6000a	                     mov byte [rax], 0xa	      4713	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400da6b	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4713	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400da70	        0x4883c001	                              add rax, 1	      4713	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400da74	      0x4889442418	             mov qword [rsp + 0x18], rax	      4713	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400da79	      0xe934feffff	                           jmp 0x400d8b2	      4713	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400da7e	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4712	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400da83	        0x488d5001	                      lea rdx, [rax + 1]	      4712	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400da87	      0x4889542420	             mov qword [rsp + 0x20], rdx	      4712	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400da8c	          0xc6000c	                     mov byte [rax], 0xc	      4712	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400da8f	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4712	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400da94	        0x4883c001	                              add rax, 1	      4712	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400da98	      0x4889442418	             mov qword [rsp + 0x18], rax	      4712	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400da9d	      0xe910feffff	                           jmp 0x400d8b2	      4712	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400daa2	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4711	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400daa7	        0x488d5001	                      lea rdx, [rax + 1]	      4711	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400daab	      0x4889542420	             mov qword [rsp + 0x20], rdx	      4711	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400dab0	          0xc6001b	                    mov byte [rax], 0x1b	      4711	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400dab3	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4711	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400dab8	        0x4883c001	                              add rax, 1	      4711	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400dabc	      0x4889442418	             mov qword [rsp + 0x18], rax	      4711	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400dac1	      0xe9ecfdffff	                           jmp 0x400d8b2	      4711	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400dac6	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4710	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400dacb	        0x488d5001	                      lea rdx, [rax + 1]	      4710	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400dacf	      0x4889542420	             mov qword [rsp + 0x20], rdx	      4710	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400dad4	          0xc60008	                       mov byte [rax], 8	      4710	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400dad7	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4710	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400dadc	        0x4883c001	                              add rax, 1	      4710	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400dae0	      0x4889442418	             mov qword [rsp + 0x18], rax	      4710	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400dae5	      0xe9c8fdffff	                           jmp 0x400d8b2	      4710	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400daea	         0xfb67802	               movzx edi, byte [rax + 2]	      4721	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	CALL_5
0x400daee	      0xe800000000	                          call 0x400daf3	      4721	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	CALL_5
0x400daf3	            0x85c0	                           test eax, eax	      4721	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	CALL_5
0x400daf5	     0xf84f8fdffff	                            je 0x400d8f3	      4721	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	CALL_5
0x400dafb	      0xe800000000	                          call 0x400db00	      4724	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	CALL_6
0x400db00	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      4724	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	CALL_6
0x400db05	          0x488b00	                    mov rax, qword [rax]	      4724	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	CALL_6
0x400db08	    0x41bf01000000	                             mov r15d, 1	      4726	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	IF_8
0x400db0e	           0xfb611	                   movzx edx, byte [rcx]	      4724	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	CALL_6
0x400db11	          0x8b0490	            mov eax, dword [rax + rdx*4]	      4724	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	CALL_6
0x400db14	          0x83f858	                           cmp eax, 0x58	      4726	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	IF_8
0x400db17	        0x8944240c	              mov dword [rsp + 0xc], eax	      4724	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	CALL_6
0x400db1b	            0x7412	                            je 0x400db2f	      4726	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	IF_8
0x400db1d	          0x4531ff	                          xor r15d, r15d	      4728	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_1	IF_9
0x400db20	          0x80fa75	                            cmp dl, 0x75	      4728	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_1	IF_9
0x400db23	        0x410f95c7	                              setne r15b	      4728	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_1	IF_9
0x400db27	    0x468d3cbd0300	                   lea r15d, [r15*4 + 3]	      4728	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_1	IF_9
0x400db2f	          0x4531f6	                          xor r14d, r14d	      4664	eval.c	FUNCTION_73
0x400db32	            0xeb2d	                           jmp 0x400db61	      4664	eval.c	FUNCTION_73
0x400db34	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4735	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1
0x400db39	        0x41c1e604	                             shl r14d, 4	      4736	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1	CALL_8
0x400db3d	        0x4183ef01	                             sub r15d, 1	      4733	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1	CALL_7
0x400db41	        0x488d4801	                      lea rcx, [rax + 1]	      4735	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1
0x400db45	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      4735	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1
0x400db4a	         0xfb67801	               movzx edi, byte [rax + 1]	      4736	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1	CALL_8
0x400db4e	      0xe800000000	                          call 0x400db53	      4736	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1	CALL_8
0x400db53	          0x4101c6	                           add r14d, eax	      4736	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1	CALL_8
0x400db56	        0x4183ffff	            cmp r15d, 0xffffffffffffffff	      4733	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1	CALL_7
0x400db5a	            0x7412	                            je 0x400db6e	      4733	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1	CALL_7
0x400db5c	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      4733	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1	CALL_7
0x400db61	         0xfb67901	               movzx edi, byte [rcx + 1]	      4733	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1	CALL_7
0x400db65	      0xe800000000	                          call 0x400db6a	      4733	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1	CALL_7
0x400db6a	            0x85c0	                           test eax, eax	      4733	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1	CALL_7
0x400db6c	            0x75c6	                           jne 0x400db34	      4733	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_2	WHILE_1	CALL_7
0x400db6e	    0x488344241801	               add qword [rsp + 0x18], 1	      4738	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7
0x400db74	      0x837c240c58	            cmp dword [rsp + 0xc], 0x58 	      4742	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	IF_10
0x400db79	     0xf849f030000	                            je 0x400df1e	      4742	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	IF_10
0x400db7f	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      4743	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	IF_10
0x400db84	          0x4489f7	                           mov edi, r14d	      4743	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	IF_10
0x400db87	    0xff1500000000	                 call qword [0x0400db8d]	      4743	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	IF_10
0x400db8d	            0x4898	                                    cdqe	      4743	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	IF_10
0x400db8f	      0x4801442420	            add qword [rsp + 0x20], rax 	      4743	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	IF_10
0x400db94	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4743	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	IF_10
0x400db99	      0xe914fdffff	                           jmp 0x400d8b2	      4743	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	IF_10
0x400db9e	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      4769	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_9
0x400dba3	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      4769	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_9
0x400dba8	      0xb901000000	                              mov ecx, 1	      4769	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_9
0x400dbad	      0xba01000000	                              mov edx, 1	      4769	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_9
0x400dbb2	      0xe800000000	                          call 0x400dbb7	      4769	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_9
0x400dbb7	            0x85c0	                           test eax, eax	      4770	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_13
0x400dbb9	     0xf848c000000	                            je 0x400dc4b	      4770	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_13
0x400dbbf	            0x4898	                                    cdqe	      4772	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_13
0x400dbc1	      0x4801442420	            add qword [rsp + 0x20], rax 	      4772	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_13
0x400dbc6	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4772	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_13
0x400dbcb	      0xe9e2fcffff	                           jmp 0x400d8b2	      4772	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_13
0x400dbd0	        0x488d5002	                      lea rdx, [rax + 2]	      4758	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3
0x400dbd4	      0x4889542418	             mov qword [rsp + 0x18], rdx	      4758	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3
0x400dbd9	         0xfb64001	               movzx eax, byte [rax + 1]	      4758	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3
0x400dbdd	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      4758	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3
0x400dbe2	          0x83e830	                           sub eax, 0x30	      4758	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3
0x400dbe5	            0x8802	                      mov byte [rdx], al	      4758	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3
0x400dbe7	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4759	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11
0x400dbec	           0xfb608	                   movzx ecx, byte [rax]	      4759	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11
0x400dbef	          0x8d51d0	                   lea edx, [rcx - 0x30]	      4759	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11
0x400dbf2	          0x80fa07	                               cmp dl, 7	      4759	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11
0x400dbf5	            0x7749	                            ja 0x400dc40	      4759	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11
0x400dbf7	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      4761	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11
0x400dbfc	        0x488d7001	                      lea rsi, [rax + 1]	      4761	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11
0x400dc00	           0xfb611	                   movzx edx, byte [rcx]	      4761	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11
0x400dc03	      0x4889742418	             mov qword [rsp + 0x18], rsi	      4761	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11
0x400dc08	           0xfb600	                   movzx eax, byte [rax]	      4761	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11
0x400dc0b	        0x8d44d0d0	           lea eax, [rax + rdx*8 - 0x30]	      4761	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11
0x400dc0f	            0x8801	                      mov byte [rcx], al	      4761	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11
0x400dc11	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4762	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11	IF_12
0x400dc16	           0xfb608	                   movzx ecx, byte [rax]	      4762	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11	IF_12
0x400dc19	          0x8d51d0	                   lea edx, [rcx - 0x30]	      4762	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11	IF_12
0x400dc1c	          0x80fa07	                               cmp dl, 7	      4762	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11	IF_12
0x400dc1f	            0x771f	                            ja 0x400dc40	      4762	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11	IF_12
0x400dc21	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      4763	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11	IF_12
0x400dc26	        0x488d7001	                      lea rsi, [rax + 1]	      4763	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11	IF_12
0x400dc2a	           0xfb611	                   movzx edx, byte [rcx]	      4763	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11	IF_12
0x400dc2d	      0x4889742418	             mov qword [rsp + 0x18], rsi	      4763	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11	IF_12
0x400dc32	           0xfb600	                   movzx eax, byte [rax]	      4763	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11	IF_12
0x400dc35	        0x8d44d0d0	           lea eax, [rax + rdx*8 - 0x30]	      4763	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11	IF_12
0x400dc39	            0x8801	                      mov byte [rcx], al	      4763	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11	IF_12
0x400dc3b	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4763	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	ELSE_3	IF_11	IF_12
0x400dc40	    0x488344242001	               add qword [rsp + 0x20], 1	      4765	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400dc46	      0xe967fcffff	                           jmp 0x400d8b2	      4765	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1
0x400dc4b	    0x448b15000000	           mov r10d, dword [0x0400dc52] 	      4777	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_10
0x400dc52	          0x4585d2	                         test r10d, r10d	      4777	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_10
0x400dc55	            0x752b	                           jne 0x400dc82	      4777	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_10
0x400dc57	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4777	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_10
0x400dc5c	        0x488d5001	                      lea rdx, [rax + 1]	      4777	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_10
0x400dc60	      0x4889542420	             mov qword [rsp + 0x20], rdx	      4777	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_10
0x400dc65	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      4777	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_10
0x400dc6a	        0x488d4a01	                      lea rcx, [rdx + 1]	      4777	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_10
0x400dc6e	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      4777	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_10
0x400dc73	           0xfb612	                   movzx edx, byte [rdx]	      4777	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_10
0x400dc76	            0x8810	                      mov byte [rax], dl	      4777	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_10
0x400dc78	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4777	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_10
0x400dc7d	      0xe930fcffff	                           jmp 0x400d8b2	      4777	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	CALL_10
0x400dc82	      0x488d742420	                   lea rsi, [rsp + 0x20]	      4782	eval.c	FUNCTION_73	FOR_2	CALL_11
0x400dc87	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      4782	eval.c	FUNCTION_73	FOR_2	CALL_11
0x400dc8c	      0xe800000000	                          call 0x400dc91	      4782	eval.c	FUNCTION_73	FOR_2	CALL_11
0x400dc91	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4782	eval.c	FUNCTION_73	FOR_2	CALL_11
0x400dc96	      0xe917fcffff	                           jmp 0x400d8b2	      4782	eval.c	FUNCTION_73	FOR_2	CALL_11
0x400dc9b	       0xf1f440000	                   nop dword [rax + rax]	      4782	eval.c	FUNCTION_73	FOR_2	CALL_11
0x400dca0	        0x660f57c2	                        xorpd xmm0, xmm2	      4266	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	ELSE_10	ELSE_11	IF_30	IF_31
0x400dca4	      0xe90ff8ffff	                           jmp 0x400d4b8	      4266	eval.c	ELSE_15	FUNCTION_70	IF_25	ELSE_9	WHILE_2	ELSE_10	ELSE_11	IF_30	IF_31
0x400dca9	          0x4c8b33	                    mov r14, qword [rbx]	      4683	eval.c	FUNCTION_73	IF_3	CALL_3
0x400dcac	      0xba05000000	                              mov edx, 5	      4683	eval.c	FUNCTION_73	IF_3	CALL_3
0x400dcb1	      0xbe00000000	                              mov esi, 0	      4683	eval.c	FUNCTION_73	IF_3	CALL_3
0x400dcb6	      0xe9f6faffff	                           jmp 0x400d7b1	      4683	eval.c	FUNCTION_73	IF_3	CALL_3
0x400dcbb	        0x4183c602	                             add r14d, 2	      4677	eval.c	FUNCTION_73	FOR_1	IF_1	IF_2
0x400dcbf	          0x4889c7	                            mov rdi, rax	      4677	eval.c	FUNCTION_73	FOR_1	IF_1	IF_2
0x400dcc2	      0xe98cf6ffff	                           jmp 0x400d353	      4677	eval.c	FUNCTION_73	FOR_1	IF_1	IF_2
0x400dcc7	          0x4c89ff	                            mov rdi, r15	      5861	eval.c	FUNCTION_92	IF_1
0x400dcca	    0x41bf01000000	                             mov r15d, 1	      5891	eval.c	FUNCTION_92
0x400dcd0	      0xe906f6ffff	                           jmp 0x400d2db	      5891	eval.c	FUNCTION_92
0x400dcd5	    0x41c704240200	                      mov dword [r12], 2	      4126	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_10
0x400dcdd	      0x410fb67d01	               movzx edi, byte [r13 + 1]	      4127	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_10	CALL_17
0x400dce2	      0xbe02000000	                              mov esi, 2	      4127	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_10	CALL_17
0x400dce7	      0xe800000000	                          call 0x400dcec	      4127	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_10	CALL_17
0x400dcec	      0x4989442408	                mov qword [r12 + 8], rax	      4127	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_10	CALL_17
0x400dcf1	          0x488b3b	                    mov rdi, qword [rbx]	      4127	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_10	CALL_17
0x400dcf4	      0xe93df7ffff	                           jmp 0x400d436	      4127	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_10	CALL_17
0x400dcf9	        0x4883c701	                              add rdi, 1	      4140	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_12
0x400dcfd	          0x48893b	                    mov qword [rbx], rdi	      4140	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_12
0x400dd00	      0xe9f3f7ffff	                           jmp 0x400d4f8	      4140	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	IF_12
0x400dd05	        0x448b3c24	                   mov r15d, dword [rsp]	      4172	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_18
0x400dd09	          0x4585ff	                         test r15d, r15d	      4172	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_18
0x400dd0c	     0xf8510010000	                           jne 0x400de22	      4172	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_18
0x400dd12	    0x48833d000000	               cmp qword [0x0400dd1a], 0	      6693	eval.c	FUNCTION_117	IF_1
0x400dd1a	            0x740a	                            je 0x400dd26	      6693	eval.c	FUNCTION_117	IF_1
0x400dd1c	            0x89c6	                            mov esi, eax	      6693	eval.c	FUNCTION_117	IF_1
0x400dd1e	          0x4c89f7	                            mov rdi, r14	      6693	eval.c	FUNCTION_117	IF_1
0x400dd21	      0xe87a98ffff	             call sym.check_vars.part.12	      6693	eval.c	FUNCTION_117	IF_1
0x400dd26	      0x4c8d7c2410	                   lea r15, [rsp + 0x10]	      4177	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_25
0x400dd2b	      0x488d542420	                   lea rdx, [rsp + 0x20]	      4177	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_25
0x400dd30	          0x4c89f7	                            mov rdi, r14	      4177	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_25
0x400dd33	      0xb901000000	                              mov ecx, 1	      4177	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_25
0x400dd38	          0x4c89fe	                            mov rsi, r15	      4177	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_25
0x400dd3b	      0xe800000000	                          call 0x400dd40	      4177	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_25
0x400dd40	          0x4889c7	                            mov rdi, rax	      4181	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_26
0x400dd43	      0xe800000000	                          call 0x400dd48	      4181	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_26
0x400dd48	          0x4885c0	                           test rax, rax	      4182	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_19
0x400dd4b	          0x4989c6	                            mov r14, rax	      4181	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_26
0x400dd4e	    0x41bb01000000	                             mov r11d, 1	      4177	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_25
0x400dd54	     0xf849e010000	                            je 0x400def8	      4182	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_19
0x400dd5a	    0x488b05000000	            mov rax, qword [0x0400dd61] 	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400dd61	      0x44885c240c	              mov byte [rsp + 0xc], r11b	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400dd66	          0x4889d9	                            mov rcx, rbx	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400dd69	          0x4c89e2	                            mov rdx, r12	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400dd6c	          0x4c89f7	                            mov rdi, r14	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400dd6f	        0x4c8b4038	              mov r8, qword [rax + 0x38]	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400dd73	            0x6a00	                                  push 0	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400dd75	        0xff742428	                 push qword [rsp + 0x28]	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400dd79	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400dd7d	          0x4d89c1	                              mov r9, r8	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400dd80	              0x50	                                push rax	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400dd81	            0x4157	                                push r15	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400dd83	        0x8b742430	            mov esi, dword [rsp + 0x30] 	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400dd87	      0xe800000000	                          call 0x400dd8c	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400dd8c	        0x4883c420	                           add rsp, 0x20	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400dd90	    0x440fb65c240c	           movzx r11d, byte [rsp + 0xc] 	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400dd96	          0x4189c7	                           mov r15d, eax	      4186	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	ELSE_5	CALL_27
0x400dd99	          0x4c89f7	                            mov rdi, r14	      4189	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_28
0x400dd9c	      0x44885c240c	              mov byte [rsp + 0xc], r11b	      4189	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_28
0x400dda1	      0xe800000000	                          call 0x400dda6	      4189	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_28
0x400dda6	        0x458b1c24	                   mov r11d, dword [r12]	      4194	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_20
0x400ddaa	          0x4585db	                         test r11d, r11d	      4194	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_20
0x400ddad	            0x7517	                           jne 0x400ddc6	      4194	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_20
0x400ddaf	    0x440fb65c240c	           movzx r11d, byte [rsp + 0xc] 	      4194	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_20
0x400ddb5	          0x4584db	                         test r11b, r11b	      4194	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_20
0x400ddb8	            0x740c	                            je 0x400ddc6	      4194	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_20
0x400ddba	          0x488b03	                    mov rax, qword [rbx]	      4194	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_20
0x400ddbd	          0x803828	                    cmp byte [rax], 0x28	      4194	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_20
0x400ddc0	     0xf8442010000	                            je 0x400df08	      4194	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_20
0x400ddc6	      0xe800000000	                          call 0x400ddcb	      4203	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_21	CALL_29
0x400ddcb	            0x85c0	                           test eax, eax	      4203	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_21	CALL_29
0x400ddcd	            0x740d	                            je 0x400dddc	      4203	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_21	CALL_29
0x400ddcf	        0x4183ff01	                             cmp r15d, 1	      4205	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_21	IF_22
0x400ddd3	     0xf8460010000	                            je 0x400df39	      4205	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_21	IF_22
0x400ddd9	          0x4531ff	                          xor r15d, r15d	      4183	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_19
0x400dddc	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4183	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_19
0x400dde1	      0xe9bbf8ffff	                           jmp 0x400d6a1	      4183	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_19
0x400dde6	          0x4531c9	                            xor r9d, r9d	      4211	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	ELSE_6	IF_23
0x400dde9	    0x41b801000000	                              mov r8d, 1	      4211	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	ELSE_6	IF_23
0x400ddef	            0x31c9	                            xor ecx, ecx	      4211	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	ELSE_6	IF_23
0x400ddf1	          0x4c89e2	                            mov rdx, r12	      4211	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	ELSE_6	IF_23
0x400ddf4	            0x89c6	                            mov esi, eax	      4211	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	ELSE_6	IF_23
0x400ddf6	          0x4c89f7	                            mov rdi, r14	      4211	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	ELSE_6	IF_23
0x400ddf9	      0xe800000000	                          call 0x400ddfe	      4211	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	ELSE_6	IF_23
0x400ddfe	          0x4189c7	                           mov r15d, eax	      4211	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	ELSE_6	IF_23
0x400de01	            0xebd9	                           jmp 0x400dddc	      4211	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	ELSE_6	IF_23
0x400de03	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4850	eval.c	FUNCTION_74
0x400de08	    0x41bf01000000	                             mov r15d, 1	      4853	eval.c	FUNCTION_74
0x400de0e	          0xc60000	                       mov byte [rax], 0	      4850	eval.c	FUNCTION_74
0x400de11	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4851	eval.c	FUNCTION_74
0x400de16	        0x488d7801	                      lea rdi, [rax + 1]	      4851	eval.c	FUNCTION_74
0x400de1a	          0x48893b	                    mov qword [rbx], rdi	      4851	eval.c	FUNCTION_74
0x400de1d	      0xe9b9f4ffff	                           jmp 0x400d2db	      4091	eval.c	ELSE_15	FUNCTION_70	SWITCH_1
0x400de22	      0x4c8d7c2410	                   lea r15, [rsp + 0x10]	      4177	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_25
0x400de27	      0x488d542420	                   lea rdx, [rsp + 0x20]	      4177	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_25
0x400de2c	            0x31c9	                            xor ecx, ecx	      4177	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_25
0x400de2e	          0x4c89f7	                            mov rdi, r14	      4177	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_25
0x400de31	          0x4c89fe	                            mov rsi, r15	      4177	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_25
0x400de34	      0xe800000000	                          call 0x400de39	      4177	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_25
0x400de39	          0x4889c7	                            mov rdi, rax	      4181	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_26
0x400de3c	      0xe800000000	                          call 0x400de41	      4181	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_26
0x400de41	          0x4531db	                          xor r11d, r11d	      4177	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_25
0x400de44	          0x4885c0	                           test rax, rax	      4182	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_19
0x400de47	          0x4989c6	                            mov r14, rax	      4181	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_26
0x400de4a	     0xf850affffff	                           jne 0x400dd5a	      4182	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_19
0x400de50	            0x31ff	                            xor edi, edi	      4189	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_28
0x400de52	      0xe800000000	                          call 0x400de57	      4189	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	CALL_28
0x400de57	      0xe800000000	                          call 0x400de5c	      4203	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_21	CALL_29
0x400de5c	      0xe978ffffff	                           jmp 0x400ddd9	      4203	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_21	CALL_29
0x400de61	        0x8b542420	            mov edx, dword [rsp + 0x20] 	      5877	eval.c	FUNCTION_92	IF_1	ELSE_1	IF_5
0x400de65	            0x85d2	                           test edx, edx	      5877	eval.c	FUNCTION_92	IF_1	ELSE_1	IF_5
0x400de67	            0x7408	                            je 0x400de71	      5877	eval.c	FUNCTION_92	IF_1	ELSE_1	IF_5
0x400de69	          0x4889c7	                            mov rdi, rax	      5878	eval.c	FUNCTION_92	IF_1	ELSE_1	CALL_4
0x400de6c	      0xe800000000	                          call 0x400de71	      5878	eval.c	FUNCTION_92	IF_1	ELSE_1	CALL_4
0x400de71	          0x4c89ef	                            mov rdi, r13	      5881	eval.c	FUNCTION_92	IF_1	ELSE_1	CALL_5
0x400de74	      0xe800000000	                          call 0x400de79	      5881	eval.c	FUNCTION_92	IF_1	ELSE_1	CALL_5
0x400de79	          0x4885c0	                           test rax, rax	      5882	eval.c	FUNCTION_92	IF_1	ELSE_1	IF_6
0x400de7c	     0xf841ef7ffff	                            je 0x400d5a0	      5882	eval.c	FUNCTION_92	IF_1	ELSE_1	IF_6
0x400de82	          0x803824	                    cmp byte [rax], 0x24	      5882	eval.c	FUNCTION_92	IF_1	ELSE_1	IF_6
0x400de85	     0xf8515f7ffff	                           jne 0x400d5a0	      5882	eval.c	FUNCTION_92	IF_1	ELSE_1	IF_6
0x400de8b	          0x4889c7	                            mov rdi, rax	      5883	eval.c	FUNCTION_92	IF_1	ELSE_1	CALL_6
0x400de8e	      0xe800000000	                          call 0x400de93	      5883	eval.c	FUNCTION_92	IF_1	ELSE_1	CALL_6
0x400de93	            0x31c0	                            xor eax, eax	      5883	eval.c	FUNCTION_92	IF_1	ELSE_1	CALL_6
0x400de95	      0xe906f7ffff	                           jmp 0x400d5a0	      5883	eval.c	FUNCTION_92	IF_1	ELSE_1	CALL_6
0x400de9a	          0x8b1424	                    mov edx, dword [rsp]	      4105	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_14
0x400de9d	          0x4889df	                            mov rdi, rbx	      4105	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_14
0x400dea0	          0x4c89e6	                            mov rsi, r12	      4105	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_14
0x400dea3	      0xe800000000	                          call 0x400dea8	      4105	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_14
0x400dea8	          0x488b3b	                    mov rdi, qword [rbx]	      4105	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_14
0x400deab	          0x4189c7	                           mov r15d, eax	      4105	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_14
0x400deae	      0xe945f6ffff	                           jmp 0x400d4f8	      4105	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	CALL_14
0x400deb3	      0xba05000000	                              mov edx, 5	      4143	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_3	IF_13	CALL_21
0x400deb8	      0xbe00000000	                              mov esi, 0	      4143	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_3	IF_13	CALL_21
0x400debd	            0x31ff	                            xor edi, edi	      4143	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_3	IF_13	CALL_21
0x400debf	      0xe800000000	                          call 0x400dec4	      4143	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_3	IF_13	CALL_21
0x400dec4	          0x4889c7	                            mov rdi, rax	      4143	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_3	IF_13	CALL_21
0x400dec7	          0x4531ff	                          xor r15d, r15d	      4145	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_3	IF_13
0x400deca	      0xe800000000	                          call 0x400decf	      4143	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_3	IF_13	CALL_21
0x400decf	          0x4c89e7	                            mov rdi, r12	      4144	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_3	IF_13	CALL_22
0x400ded2	      0xe800000000	                          call 0x400ded7	      4144	eval.c	ELSE_15	FUNCTION_70	SWITCH_1	ELSE_3	IF_13	CALL_22
0x400ded7	          0x488b3b	                    mov rdi, qword [rbx]	      4221	eval.c	ELSE_15	FUNCTION_70	CALL_34
0x400deda	      0xe800000000	                          call 0x400dedf	      4221	eval.c	ELSE_15	FUNCTION_70	CALL_34
0x400dedf	          0x488903	                    mov qword [rbx], rax	      4221	eval.c	ELSE_15	FUNCTION_70	CALL_34
0x400dee2	      0xe906f4ffff	                           jmp 0x400d2ed	      4221	eval.c	ELSE_15	FUNCTION_70	CALL_34
0x400dee7	          0x8b0424	                    mov eax, dword [rsp]	      5891	eval.c	FUNCTION_92
0x400deea	          0x4531ff	                          xor r15d, r15d	      5891	eval.c	FUNCTION_92
0x400deed	            0x85c0	                           test eax, eax	      5891	eval.c	FUNCTION_92
0x400deef	        0x410f94c7	                               sete r15b	      5891	eval.c	FUNCTION_92
0x400def3	      0xe9e3f3ffff	                           jmp 0x400d2db	      5891	eval.c	FUNCTION_92
0x400def8	          0x4531ff	                          xor r15d, r15d	      4183	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_19
0x400defb	      0xe999feffff	                           jmp 0x400dd99	      4183	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_19
0x400df00	          0x4d89ee	                            mov r14, r13	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400df03	      0xe99ff8ffff	                           jmp 0x400d7a7	      4807	eval.c	FUNCTION_74	FOR_1	CALL_1
0x400df08	    0x49c744240800	                  mov qword [r12 + 8], 0	      4196	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_20
0x400df11	    0x41c704240300	                      mov dword [r12], 3	      4197	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_20
0x400df19	      0xe9a8feffff	                           jmp 0x400ddc6	      4197	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_20
0x400df1e	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4746	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_3
0x400df23	        0x488d5001	                      lea rdx, [rax + 1]	      4746	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_3
0x400df27	      0x4889542420	             mov qword [rsp + 0x20], rdx	      4746	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_3
0x400df2c	          0x448830	                    mov byte [rax], r14b	      4746	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_3
0x400df2f	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4746	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_3
0x400df34	      0xe979f9ffff	                           jmp 0x400d8b2	      4746	eval.c	FUNCTION_73	FOR_2	IF_6	SWITCH_1	IF_7	ELSE_3
0x400df39	          0x4c89e7	                            mov rdi, r12	      4206	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_21	CALL_30
0x400df3c	          0x4531ff	                          xor r15d, r15d	      4207	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_21
0x400df3f	      0xe800000000	                          call 0x400df44	      4206	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_21	CALL_30
0x400df44	      0xe993feffff	                           jmp 0x400dddc	      4206	eval.c	ELSE_15	FUNCTION_70	IF_14	ELSE_4	IF_17	IF_21	CALL_30
0x400df49	      0xe800000000	                          call 0x400df4e	      4289	eval.c	ELSE_15	FUNCTION_70
0x400df4e	        0x660fefc0	                         pxor xmm0, xmm0	      4236	eval.c	ELSE_15	FUNCTION_70	IF_25
0x400df52	        0x660f28c8	                       movapd xmm1, xmm0	      4236	eval.c	ELSE_15	FUNCTION_70	IF_25
0x400df56	      0xe942f5ffff	                           jmp 0x400d49d	      4236	eval.c	ELSE_15	FUNCTION_70	IF_25
v_throwpoint	functions,0:SWITCH,0:IF,1:DO,0:ELSE,0:WHILE,0:CALL,0:FOR,0	8
0x4002a80	          0x4885ff	                           test rdi, rdi	      6554	eval.c	FUNCTION_114	IF_1
0x4002a83	            0x750b	                           jne 0x4002a90	      6554	eval.c	FUNCTION_114	IF_1
0x4002a85	    0x488b05000000	            mov rax, qword [0x04002a8c] 	      6555	eval.c	FUNCTION_114	IF_1
0x4002a8c	              0xc3	                                     ret	      6555	eval.c	FUNCTION_114	IF_1
0x4002a8d	           0xf1f00	                         nop dword [rax]	      6555	eval.c	FUNCTION_114	IF_1
0x4002a90	    0x48893d000000	            mov qword [0x04002a97], rdi 	      6557	eval.c	FUNCTION_114
0x4002a97	            0x31c0	                            xor eax, eax	      6558	eval.c	FUNCTION_114
0x4002a99	              0xc3	                                     ret	      6559	eval.c	FUNCTION_114
assert_exception	functions,0:SWITCH,0:IF,2:DO,0:ELSE,1:WHILE,0:CALL,10:FOR,0	51
0x40095e0	              0x53	                                push rbx	      9007	eval.c	FUNCTION_176
0x40095e1	      0xbe00000000	                              mov esi, 0	      7098	eval.c	FUNCTION_129	CALL_1
0x40095e6	          0x4889fb	                            mov rbx, rdi	      9007	eval.c	FUNCTION_176
0x40095e9	        0x4883ec20	                           sub rsp, 0x20	      9007	eval.c	FUNCTION_176
0x40095ed	    0x64488b042528	                mov rax, qword fs:[0x28]	      9007	eval.c	FUNCTION_176
0x40095f6	      0x4889442418	             mov qword [rsp + 0x18], rax	      9007	eval.c	FUNCTION_176
0x40095fb	            0x31c0	                            xor eax, eax	      9007	eval.c	FUNCTION_176
0x40095fd	      0xe800000000	                          call 0x4009602	      7098	eval.c	FUNCTION_129	CALL_1
0x4009602	    0x488b3d000000	            mov rdi, qword [0x04009609] 	      9011	eval.c	FUNCTION_176	IF_1
0x4009609	          0x4885ff	                           test rdi, rdi	      9011	eval.c	FUNCTION_176	IF_1
0x400960c	            0x747a	                            je 0x4009688	      9011	eval.c	FUNCTION_176	IF_1
0x400960e	          0x4885c0	                           test rax, rax	      9019	eval.c	FUNCTION_176	ELSE_1	IF_2
0x4009611	            0x742d	                            je 0x4009640	      9019	eval.c	FUNCTION_176	ELSE_1	IF_2
0x4009613	          0x4889c6	                            mov rsi, rax	      9020	eval.c	FUNCTION_176	ELSE_1	IF_2	CALL_6
0x4009616	      0xe800000000	                          call 0x400961b	      9020	eval.c	FUNCTION_176	ELSE_1	IF_2	CALL_6
0x400961b	            0x31d2	                            xor edx, edx	      9029	eval.c	FUNCTION_176
0x400961d	          0x4885c0	                           test rax, rax	      9020	eval.c	FUNCTION_176	ELSE_1	IF_2	CALL_6
0x4009620	            0x7426	                            je 0x4009648	      9020	eval.c	FUNCTION_176	ELSE_1	IF_2	CALL_6
0x4009622	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      9030	eval.c	FUNCTION_176
0x4009627	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      9030	eval.c	FUNCTION_176
0x4009630	            0x89d0	                            mov eax, edx	      9030	eval.c	FUNCTION_176
0x4009632	            0x756b	                           jne 0x400969f	      9030	eval.c	FUNCTION_176
0x4009634	        0x4883c420	                           add rsp, 0x20	      9030	eval.c	FUNCTION_176
0x4009638	              0x5b	                                 pop rbx	      9030	eval.c	FUNCTION_176
0x4009639	              0xc3	                                     ret	      9030	eval.c	FUNCTION_176
0x400963a	    0x660f1f440000	                    nop word [rax + rax]	      9030	eval.c	FUNCTION_176
0x4009640	            0x31d2	                            xor edx, edx	      9029	eval.c	FUNCTION_176
0x4009642	            0xebde	                           jmp 0x4009622	      9029	eval.c	FUNCTION_176
0x4009644	         0xf1f4000	                         nop dword [rax]	      9029	eval.c	FUNCTION_176
0x4009648	          0x4889e7	                            mov rdi, rsp	      9022	eval.c	FUNCTION_176	ELSE_1	IF_2	CALL_7
0x400964b	      0xe800000000	                          call 0x4009650	      9022	eval.c	FUNCTION_176	ELSE_1	IF_2	CALL_7
0x4009650	        0x488d7310	                   lea rsi, [rbx + 0x10]	      9023	eval.c	FUNCTION_176	ELSE_1	IF_2	CALL_8
0x4009654	    0x41b804000000	                              mov r8d, 4	      9023	eval.c	FUNCTION_176	ELSE_1	IF_2	CALL_8
0x400965a	      0xb900000000	                              mov ecx, 0	      9023	eval.c	FUNCTION_176	ELSE_1	IF_2	CALL_8
0x400965f	          0x4889da	                            mov rdx, rbx	      9023	eval.c	FUNCTION_176	ELSE_1	IF_2	CALL_8
0x4009662	          0x4889e7	                            mov rdi, rsp	      9023	eval.c	FUNCTION_176	ELSE_1	IF_2	CALL_8
0x4009665	      0xe866b6ffff	 call sym.fill_assert_error.constprop.18	      9023	eval.c	FUNCTION_176	ELSE_1	IF_2	CALL_8
0x400966a	          0x4889e7	                            mov rdi, rsp	      9025	eval.c	FUNCTION_176	ELSE_1	IF_2	CALL_9
0x400966d	      0xe800000000	                          call 0x4009672	      9025	eval.c	FUNCTION_176	ELSE_1	IF_2	CALL_9
0x4009672	          0x4889e7	                            mov rdi, rsp	      9026	eval.c	FUNCTION_176	ELSE_1	IF_2	CALL_10
0x4009675	      0xe800000000	                          call 0x400967a	      9026	eval.c	FUNCTION_176	ELSE_1	IF_2	CALL_10
0x400967a	      0xba01000000	                              mov edx, 1	      9027	eval.c	FUNCTION_176	ELSE_1	IF_2
0x400967f	            0xeba1	                           jmp 0x4009622	      9027	eval.c	FUNCTION_176	ELSE_1	IF_2
0x4009681	     0xf1f80000000	                         nop dword [rax]	      9027	eval.c	FUNCTION_176	ELSE_1	IF_2
0x4009688	          0x4889e7	                            mov rdi, rsp	      9013	eval.c	FUNCTION_176	IF_1	CALL_2
0x400968b	      0xe800000000	                          call 0x4009690	      9013	eval.c	FUNCTION_176	IF_1	CALL_2
0x4009690	      0xbe00000000	                              mov esi, 0	      9014	eval.c	FUNCTION_176	IF_1	CALL_3
0x4009695	          0x4889e7	                            mov rdi, rsp	      9014	eval.c	FUNCTION_176	IF_1	CALL_3
0x4009698	      0xe800000000	                          call 0x400969d	      9014	eval.c	FUNCTION_176	IF_1	CALL_3
0x400969d	            0xebcb	                           jmp 0x400966a	      9014	eval.c	FUNCTION_176	IF_1	CALL_3
0x400969f	      0xe800000000	                          call 0x40096a4	      9030	eval.c	FUNCTION_176
eval_to_number	functions,0:SWITCH,0:IF,1:DO,0:ELSE,1:WHILE,0:CALL,4:FOR,0	30
0x400aa90	              0x53	                                push rbx	       883	eval.c	FUNCTION_20
0x400aa91	    0x48c7c3ffffff	             mov rbx, 0xffffffffffffffff	       883	eval.c	FUNCTION_20
0x400aa98	        0x4883ec30	                           sub rsp, 0x30	       883	eval.c	FUNCTION_20
0x400aa9c	    0x64488b042528	                mov rax, qword fs:[0x28]	       883	eval.c	FUNCTION_20
0x400aaa5	      0x4889442428	             mov qword [rsp + 0x28], rax	       883	eval.c	FUNCTION_20
0x400aaaa	            0x31c0	                            xor eax, eax	       883	eval.c	FUNCTION_20
0x400aaac	      0xe800000000	                          call 0x400aab1	       886	eval.c	FUNCTION_20	CALL_1
0x400aab1	      0x488d742410	                   lea rsi, [rsp + 0x10]	       890	eval.c	FUNCTION_20	IF_1	CALL_2
0x400aab6	      0x488d7c2408	                      lea rdi, [rsp + 8]	       890	eval.c	FUNCTION_20	IF_1	CALL_2
0x400aabb	      0xba01000000	                              mov edx, 1	       890	eval.c	FUNCTION_20	IF_1	CALL_2
0x400aac0	    0x830500000000	               add dword [0x0400aac7], 1	       888	eval.c	FUNCTION_20
0x400aac7	      0x4889442408	                mov qword [rsp + 8], rax	       886	eval.c	FUNCTION_20	CALL_1
0x400aacc	      0xe800000000	                          call 0x400aad1	       890	eval.c	FUNCTION_20	IF_1	CALL_2
0x400aad1	            0x85c0	                           test eax, eax	       890	eval.c	FUNCTION_20	IF_1	CALL_2
0x400aad3	            0x7419	                            je 0x400aaee	       890	eval.c	FUNCTION_20	IF_1	CALL_2
0x400aad5	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       894	eval.c	FUNCTION_20	ELSE_1	CALL_3
0x400aada	            0x31f6	                            xor esi, esi	       894	eval.c	FUNCTION_20	ELSE_1	CALL_3
0x400aadc	      0xe800000000	                          call 0x400aae1	       894	eval.c	FUNCTION_20	ELSE_1	CALL_3
0x400aae1	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       895	eval.c	FUNCTION_20	ELSE_1	CALL_4
0x400aae6	          0x4889c3	                            mov rbx, rax	       894	eval.c	FUNCTION_20	ELSE_1	CALL_3
0x400aae9	      0xe800000000	                          call 0x400aaee	       895	eval.c	FUNCTION_20	ELSE_1	CALL_4
0x400aaee	    0x832d00000000	               sub dword [0x0400aaf5], 1	       897	eval.c	FUNCTION_20
0x400aaf5	          0x4889d8	                            mov rax, rbx	       900	eval.c	FUNCTION_20
0x400aaf8	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       900	eval.c	FUNCTION_20
0x400aafd	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       900	eval.c	FUNCTION_20
0x400ab06	            0x7506	                           jne 0x400ab0e	       900	eval.c	FUNCTION_20
0x400ab08	        0x4883c430	                           add rsp, 0x30	       900	eval.c	FUNCTION_20
0x400ab0c	              0x5b	                                 pop rbx	       900	eval.c	FUNCTION_20
0x400ab0d	              0xc3	                                     ret	       900	eval.c	FUNCTION_20
0x400ab0e	      0xe800000000	                          call 0x400ab13	       900	eval.c	FUNCTION_20
make_expanded_name	functions,0:SWITCH,0:IF,5:DO,0:ELSE,0:WHILE,0:CALL,10:FOR,0	118
0x400b5c0	            0x4156	                                push r14	      6312	eval.c	FUNCTION_99
0x400b5c2	            0x4155	                                push r13	      6312	eval.c	FUNCTION_99
0x400b5c4	            0x4154	                                push r12	      6312	eval.c	FUNCTION_99
0x400b5c6	              0x55	                                push rbp	      6312	eval.c	FUNCTION_99
0x400b5c7	          0x4889cd	                            mov rbp, rcx	      6312	eval.c	FUNCTION_99
0x400b5ca	              0x53	                                push rbx	      6312	eval.c	FUNCTION_99
0x400b5cb	        0x4883ec40	                           sub rsp, 0x40	      6312	eval.c	FUNCTION_99
0x400b5cf	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	      6312	eval.c	FUNCTION_99
0x400b5d8	      0x48894c2438	             mov qword [rsp + 0x38], rcx	      6312	eval.c	FUNCTION_99
0x400b5dd	            0x31c9	                            xor ecx, ecx	      6312	eval.c	FUNCTION_99
0x400b5df	          0x4885d2	                           test rdx, rdx	      6318	eval.c	FUNCTION_99	IF_1
0x400b5e2	      0x4889742408	                mov qword [rsp + 8], rsi	      6312	eval.c	FUNCTION_99
0x400b5e7	        0x48891424	                    mov qword [rsp], rdx	      6312	eval.c	FUNCTION_99
0x400b5eb	    0x48c744241800	               mov qword [rsp + 0x18], 0	      6316	eval.c	FUNCTION_99
0x400b5f4	     0xf84c6000000	                            je 0x400b6c0	      6318	eval.c	FUNCTION_99	IF_1
0x400b5fa	          0x4885ed	                           test rbp, rbp	      6318	eval.c	FUNCTION_99	IF_1
0x400b5fd	     0xf84bd000000	                            je 0x400b6c0	      6318	eval.c	FUNCTION_99	IF_1
0x400b603	          0xc60600	                       mov byte [rsi], 0	      6320	eval.c	FUNCTION_99
0x400b606	        0x488b0424	                    mov rax, qword [rsp]	      6321	eval.c	FUNCTION_99
0x400b60a	          0x4989fd	                            mov r13, rdi	      6321	eval.c	FUNCTION_99
0x400b60d	      0x488d542418	                   lea rdx, [rsp + 0x18]	       820	eval.c	FUNCTION_18	IF_1	CALL_1
0x400b612	      0x488d742420	                   lea rsi, [rsp + 0x20]	       820	eval.c	FUNCTION_18	IF_1	CALL_1
0x400b617	      0xb901000000	                              mov ecx, 1	       820	eval.c	FUNCTION_18	IF_1	CALL_1
0x400b61c	          0xc60000	                       mov byte [rax], 0	      6321	eval.c	FUNCTION_99
0x400b61f	      0x488b442408	                mov rax, qword [rsp + 8]	       820	eval.c	FUNCTION_18	IF_1	CALL_1
0x400b624	      0x440fb66500	                  movzx r12d, byte [rbp]	      6322	eval.c	FUNCTION_99
0x400b629	        0xc6450000	                       mov byte [rbp], 0	      6323	eval.c	FUNCTION_99
0x400b62d	        0x488d7801	                      lea rdi, [rax + 1]	       820	eval.c	FUNCTION_18	IF_1	CALL_1
0x400b631	      0xe800000000	                          call 0x400b636	       820	eval.c	FUNCTION_18	IF_1	CALL_1
0x400b636	            0x85c0	                           test eax, eax	       820	eval.c	FUNCTION_18	IF_1	CALL_1
0x400b638	     0xf848a000000	                            je 0x400b6c8	       820	eval.c	FUNCTION_18	IF_1	CALL_1
0x400b63e	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      7085	eval.c	FUNCTION_128	CALL_1
0x400b643	      0xbe00000000	                              mov esi, 0	      7085	eval.c	FUNCTION_128	CALL_1
0x400b648	      0xe800000000	                          call 0x400b64d	      7085	eval.c	FUNCTION_128	CALL_1
0x400b64d	      0xbf00000000	                              mov edi, 0	      7087	eval.c	FUNCTION_128
0x400b652	          0x4885c0	                           test rax, rax	      7087	eval.c	FUNCTION_128
0x400b655	        0x480f45f8	                         cmovne rdi, rax	      7087	eval.c	FUNCTION_128
0x400b659	      0xe800000000	                          call 0x400b65e	       844	eval.c	FUNCTION_18	ELSE_1	CALL_9
0x400b65e	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       845	eval.c	FUNCTION_18	ELSE_1	CALL_10
0x400b663	          0x4989c6	                            mov r14, rax	       844	eval.c	FUNCTION_18	ELSE_1	CALL_9
0x400b666	      0xe800000000	                          call 0x400b66b	       845	eval.c	FUNCTION_18	ELSE_1	CALL_10
0x400b66b	          0x4d85f6	                           test r14, r14	      6326	eval.c	FUNCTION_99	IF_2
0x400b66e	            0x7408	                            je 0x400b678	      6326	eval.c	FUNCTION_99	IF_2
0x400b670	    0x48837c241800	               cmp qword [rsp + 0x18], 0	      6326	eval.c	FUNCTION_99	IF_2
0x400b676	            0x7458	                            je 0x400b6d0	      6326	eval.c	FUNCTION_99	IF_2
0x400b678	          0x4c89f7	                            mov rdi, r14	      6337	eval.c	FUNCTION_99	CALL_7
0x400b67b	            0x31db	                            xor ebx, ebx	      6341	eval.c	FUNCTION_99
0x400b67d	      0xe800000000	                          call 0x400b682	      6337	eval.c	FUNCTION_99	CALL_7
0x400b682	      0x488b442408	                mov rax, qword [rsp + 8]	      6340	eval.c	FUNCTION_99
0x400b687	        0x44886500	                    mov byte [rbp], r12b	      6339	eval.c	FUNCTION_99
0x400b68b	          0xc6007b	                    mov byte [rax], 0x7b	      6340	eval.c	FUNCTION_99
0x400b68e	        0x488b0424	                    mov rax, qword [rsp]	      6341	eval.c	FUNCTION_99
0x400b692	          0xc6007d	                    mov byte [rax], 0x7d	      6341	eval.c	FUNCTION_99
0x400b695	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      6357	eval.c	FUNCTION_99
0x400b69a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      6357	eval.c	FUNCTION_99
0x400b6a3	          0x4889d8	                            mov rax, rbx	      6357	eval.c	FUNCTION_99
0x400b6a6	     0xf85d5000000	                           jne 0x400b781	      6357	eval.c	FUNCTION_99
0x400b6ac	        0x4883c440	                           add rsp, 0x40	      6357	eval.c	FUNCTION_99
0x400b6b0	              0x5b	                                 pop rbx	      6357	eval.c	FUNCTION_99
0x400b6b1	              0x5d	                                 pop rbp	      6357	eval.c	FUNCTION_99
0x400b6b2	            0x415c	                                 pop r12	      6357	eval.c	FUNCTION_99
0x400b6b4	            0x415d	                                 pop r13	      6357	eval.c	FUNCTION_99
0x400b6b6	            0x415e	                                 pop r14	      6357	eval.c	FUNCTION_99
0x400b6b8	              0xc3	                                     ret	      6357	eval.c	FUNCTION_99
0x400b6b9	     0xf1f80000000	                         nop dword [rax]	      6357	eval.c	FUNCTION_99
0x400b6c0	            0x31db	                            xor ebx, ebx	      6319	eval.c	FUNCTION_99	IF_1
0x400b6c2	            0xebd1	                           jmp 0x400b695	      6319	eval.c	FUNCTION_99	IF_1
0x400b6c4	         0xf1f4000	                         nop dword [rax]	      6319	eval.c	FUNCTION_99	IF_1
0x400b6c8	          0x4531f6	                          xor r14d, r14d	       821	eval.c	FUNCTION_18	IF_1
0x400b6cb	            0xebab	                           jmp 0x400b678	       821	eval.c	FUNCTION_18	IF_1
0x400b6cd	           0xf1f00	                         nop dword [rax]	       821	eval.c	FUNCTION_18	IF_1
0x400b6d0	          0x4c89f7	                            mov rdi, r14	      6328	eval.c	FUNCTION_99	IF_2	CALL_3
0x400b6d3	      0xe800000000	                          call 0x400b6d8	      6328	eval.c	FUNCTION_99	IF_2	CALL_3
0x400b6d8	      0x488b542408	                mov rdx, qword [rsp + 8]	      6328	eval.c	FUNCTION_99	IF_2	CALL_3
0x400b6dd	          0x4889e9	                            mov rcx, rbp	      6328	eval.c	FUNCTION_99	IF_2	CALL_3
0x400b6e0	        0x482b0c24	                    sub rcx, qword [rsp]	      6328	eval.c	FUNCTION_99	IF_2	CALL_3
0x400b6e4	          0x4c29ea	                            sub rdx, r13	      6328	eval.c	FUNCTION_99	IF_2	CALL_3
0x400b6e7	        0x8d7c0a01	                lea edi, [rdx + rcx + 1]	      6328	eval.c	FUNCTION_99	IF_2	CALL_3
0x400b6eb	             0x1c7	                            add edi, eax	      6328	eval.c	FUNCTION_99	IF_2	CALL_3
0x400b6ed	      0xe800000000	                          call 0x400b6f2	      6328	eval.c	FUNCTION_99	IF_2	CALL_3
0x400b6f2	          0x4885c0	                           test rax, rax	      6330	eval.c	FUNCTION_99	IF_2	IF_3
0x400b6f5	          0x4889c3	                            mov rbx, rax	      6328	eval.c	FUNCTION_99	IF_2	CALL_3
0x400b6f8	     0xf847affffff	                            je 0x400b678	      6330	eval.c	FUNCTION_99	IF_2	IF_3
0x400b6fe	          0x4c89ee	                            mov rsi, r13	       110	string3.h	FUNCTION_197	CALL_3
0x400b701	          0x4889c7	                            mov rdi, rax	       110	string3.h	FUNCTION_197	CALL_3
0x400b704	      0xe800000000	                          call 0x400b709	       110	string3.h	FUNCTION_197	CALL_3
0x400b709	          0x4c89f6	                            mov rsi, r14	       148	string3.h	FUNCTION_201	CALL_3
0x400b70c	          0x4889c7	                            mov rdi, rax	       148	string3.h	FUNCTION_201	CALL_3
0x400b70f	      0xe800000000	                          call 0x400b714	       148	string3.h	FUNCTION_201	CALL_3
0x400b714	        0x488b0c24	                    mov rcx, qword [rsp]	       148	string3.h	FUNCTION_201	CALL_3
0x400b718	          0x4889c7	                            mov rdi, rax	       148	string3.h	FUNCTION_201	CALL_3
0x400b71b	        0x488d7101	                      lea rsi, [rcx + 1]	       148	string3.h	FUNCTION_201	CALL_3
0x400b71f	      0xe800000000	                          call 0x400b724	       148	string3.h	FUNCTION_201	CALL_3
0x400b724	          0x4c89f7	                            mov rdi, r14	      6337	eval.c	FUNCTION_99	CALL_7
0x400b727	      0xe800000000	                          call 0x400b72c	      6337	eval.c	FUNCTION_99	CALL_7
0x400b72c	      0x488b442408	                mov rax, qword [rsp + 8]	      6340	eval.c	FUNCTION_99
0x400b731	        0x44886500	                    mov byte [rbp], r12b	      6339	eval.c	FUNCTION_99
0x400b735	      0x488d742408	                      lea rsi, [rsp + 8]	      6345	eval.c	FUNCTION_99	IF_4	CALL_8
0x400b73a	            0x31c9	                            xor ecx, ecx	      6345	eval.c	FUNCTION_99	IF_4	CALL_8
0x400b73c	          0x4889e2	                            mov rdx, rsp	      6345	eval.c	FUNCTION_99	IF_4	CALL_8
0x400b73f	          0x4889df	                            mov rdi, rbx	      6345	eval.c	FUNCTION_99	IF_4	CALL_8
0x400b742	          0xc6007b	                    mov byte [rax], 0x7b	      6340	eval.c	FUNCTION_99
0x400b745	        0x488b0424	                    mov rax, qword [rsp]	      6341	eval.c	FUNCTION_99
0x400b749	          0xc6007d	                    mov byte [rax], 0x7d	      6341	eval.c	FUNCTION_99
0x400b74c	      0xe800000000	                          call 0x400b751	      6345	eval.c	FUNCTION_99	IF_4	CALL_8
0x400b751	      0x488b742408	                mov rsi, qword [rsp + 8]	      6346	eval.c	FUNCTION_99	IF_4	IF_5
0x400b756	          0x4885f6	                           test rsi, rsi	      6346	eval.c	FUNCTION_99	IF_4	IF_5
0x400b759	     0xf8436ffffff	                            je 0x400b695	      6346	eval.c	FUNCTION_99	IF_4	IF_5
0x400b75f	        0x488b1424	                    mov rdx, qword [rsp]	      6349	eval.c	FUNCTION_99	IF_4	IF_5	CALL_9
0x400b763	          0x4889df	                            mov rdi, rbx	      6349	eval.c	FUNCTION_99	IF_4	IF_5	CALL_9
0x400b766	          0x4889c1	                            mov rcx, rax	      6349	eval.c	FUNCTION_99	IF_4	IF_5	CALL_9
0x400b769	      0xe852feffff	             call sym.make_expanded_name	      6349	eval.c	FUNCTION_99	IF_4	IF_5	CALL_9
0x400b76e	          0x4889df	                            mov rdi, rbx	      6351	eval.c	FUNCTION_99	IF_4	IF_5	CALL_10
0x400b771	          0x4889c5	                            mov rbp, rax	      6349	eval.c	FUNCTION_99	IF_4	IF_5	CALL_9
0x400b774	          0x4889eb	                            mov rbx, rbp	      6352	eval.c	FUNCTION_99	IF_4	IF_5
0x400b777	      0xe800000000	                          call 0x400b77c	      6351	eval.c	FUNCTION_99	IF_4	IF_5	CALL_10
0x400b77c	      0xe914ffffff	                           jmp 0x400b695	      6351	eval.c	FUNCTION_99	IF_4	IF_5	CALL_10
0x400b781	      0xe800000000	                          call 0x400b786	      6357	eval.c	FUNCTION_99
copy_tv	functions,0:SWITCH,1:IF,7:DO,0:ELSE,4:WHILE,0:CALL,3:FOR,0	80
0x4005d30	            0x8b07	                    mov eax, dword [rdi]	      7750	eval.c	FUNCTION_149
0x4005d32	        0xc6460400	                   mov byte [rsi + 4], 0	      7751	eval.c	FUNCTION_149
0x4005d36	            0x8906	                    mov dword [rsi], eax	      7750	eval.c	FUNCTION_149
0x4005d38	          0x833f0a	                    cmp dword [rdi], 0xa	      7752	eval.c	FUNCTION_149	SWITCH_1
0x4005d3b	     0xf878b000000	                            ja 0x4005dcc	      7752	eval.c	FUNCTION_149	SWITCH_1
0x4005d41	            0x8b07	                    mov eax, dword [rdi]	      7752	eval.c	FUNCTION_149	SWITCH_1
0x4005d43	    0xff24c5000000	                       jmp qword [rax*8]	      7752	eval.c	FUNCTION_149	SWITCH_1
0x4005d4a	    0x660f1f440000	                    nop word [rax + rax]	      7752	eval.c	FUNCTION_149	SWITCH_1
0x4005d50	        0x488b4708	                mov rax, qword [rdi + 8]	      7765	eval.c	FUNCTION_149	SWITCH_1
0x4005d54	          0x4885c0	                           test rax, rax	      7766	eval.c	FUNCTION_149	SWITCH_1	IF_1
0x4005d57	        0x48894608	                mov qword [rsi + 8], rax	      7765	eval.c	FUNCTION_149	SWITCH_1
0x4005d5b	            0x746f	                            je 0x4005dcc	      7766	eval.c	FUNCTION_149	SWITCH_1	IF_1
0x4005d5d	        0x83405801	               add dword [rax + 0x58], 1	      7767	eval.c	FUNCTION_149	SWITCH_1	IF_1
0x4005d61	              0xc3	                                     ret	      7767	eval.c	FUNCTION_149	SWITCH_1	IF_1
0x4005d62	    0x660f1f440000	                    nop word [rax + rax]	      7767	eval.c	FUNCTION_149	SWITCH_1	IF_1
0x4005d68	        0x488b4708	                mov rax, qword [rdi + 8]	      7772	eval.c	FUNCTION_149	SWITCH_1
0x4005d6c	          0x4885c0	                           test rax, rax	      7773	eval.c	FUNCTION_149	SWITCH_1	IF_2
0x4005d6f	        0x48894608	                mov qword [rsi + 8], rax	      7772	eval.c	FUNCTION_149	SWITCH_1
0x4005d73	            0x7457	                            je 0x4005dcc	      7773	eval.c	FUNCTION_149	SWITCH_1	IF_2
0x4005d75	    0x8380b4040000	              add dword [rax + 0x4b4], 1	      7774	eval.c	FUNCTION_149	SWITCH_1	IF_2
0x4005d7c	              0xc3	                                     ret	      7774	eval.c	FUNCTION_149	SWITCH_1	IF_2
0x4005d7d	           0xf1f00	                         nop dword [rax]	      7774	eval.c	FUNCTION_149	SWITCH_1	IF_2
0x4005d80	      0xbf00000000	                              mov edi, 0	      7816	eval.c	FUNCTION_149	SWITCH_1	CALL_3
0x4005d85	      0xe900000000	                           jmp 0x4005d8a	      7816	eval.c	FUNCTION_149	SWITCH_1	CALL_3
0x4005d8a	    0x660f1f440000	                    nop word [rax + rax]	      7816	eval.c	FUNCTION_149	SWITCH_1	CALL_3
0x4005d90	        0x488b4708	                mov rax, qword [rdi + 8]	      7756	eval.c	FUNCTION_149	SWITCH_1
0x4005d94	        0x48894608	                mov qword [rsi + 8], rax	      7756	eval.c	FUNCTION_149	SWITCH_1
0x4005d98	              0xc3	                                     ret	      7757	eval.c	FUNCTION_149	SWITCH_1
0x4005d99	     0xf1f80000000	                         nop dword [rax]	      7757	eval.c	FUNCTION_149	SWITCH_1
0x4005da0	        0x488b4708	                mov rax, qword [rdi + 8]	      7779	eval.c	FUNCTION_149	SWITCH_1	IF_3
0x4005da4	          0x4885c0	                           test rax, rax	      7779	eval.c	FUNCTION_149	SWITCH_1	IF_3
0x4005da7	            0x747f	                            je 0x4005e28	      7779	eval.c	FUNCTION_149	SWITCH_1	IF_3
0x4005da9	              0x55	                                push rbp	      7749	eval.c	FUNCTION_149
0x4005daa	              0x53	                                push rbx	      7749	eval.c	FUNCTION_149
0x4005dab	          0x4889f5	                            mov rbp, rsi	      7749	eval.c	FUNCTION_149
0x4005dae	          0x4889fb	                            mov rbx, rdi	      7749	eval.c	FUNCTION_149
0x4005db1	          0x4889c7	                            mov rdi, rax	      7783	eval.c	FUNCTION_149	SWITCH_1	ELSE_1	CALL_1
0x4005db4	        0x4883ec08	                              sub rsp, 8	      7749	eval.c	FUNCTION_149
0x4005db8	      0xe800000000	                          call 0x4005dbd	      7783	eval.c	FUNCTION_149	SWITCH_1	ELSE_1	CALL_1
0x4005dbd	        0x48894508	                mov qword [rbp + 8], rax	      7783	eval.c	FUNCTION_149	SWITCH_1	ELSE_1	CALL_1
0x4005dc1	          0x833b03	                      cmp dword [rbx], 3	      7784	eval.c	FUNCTION_149	SWITCH_1	ELSE_1	IF_4
0x4005dc4	            0x7472	                            je 0x4005e38	      7784	eval.c	FUNCTION_149	SWITCH_1	ELSE_1	IF_4
0x4005dc6	        0x4883c408	                              add rsp, 8	      7819	eval.c	FUNCTION_149
0x4005dca	              0x5b	                                 pop rbx	      7819	eval.c	FUNCTION_149
0x4005dcb	              0x5d	                                 pop rbp	      7819	eval.c	FUNCTION_149
0x4005dcc	            0xf3c3	                                     ret	      7819	eval.c	FUNCTION_149
0x4005dce	            0x6690	                                     nop	      7819	eval.c	FUNCTION_149
0x4005dd0	        0x488b4708	                mov rax, qword [rdi + 8]	      7789	eval.c	FUNCTION_149	SWITCH_1	IF_5
0x4005dd4	          0x4885c0	                           test rax, rax	      7789	eval.c	FUNCTION_149	SWITCH_1	IF_5
0x4005dd7	            0x744f	                            je 0x4005e28	      7789	eval.c	FUNCTION_149	SWITCH_1	IF_5
0x4005dd9	        0x48894608	                mov qword [rsi + 8], rax	      7793	eval.c	FUNCTION_149	SWITCH_1	ELSE_2
0x4005ddd	          0x830001	                      add dword [rax], 1	      7794	eval.c	FUNCTION_149	SWITCH_1	ELSE_2
0x4005de0	              0xc3	                                     ret	      7794	eval.c	FUNCTION_149	SWITCH_1	ELSE_2
0x4005de1	     0xf1f80000000	                         nop dword [rax]	      7794	eval.c	FUNCTION_149	SWITCH_1	ELSE_2
0x4005de8	        0x488b4708	                mov rax, qword [rdi + 8]	      7807	eval.c	FUNCTION_149	SWITCH_1	IF_7
0x4005dec	          0x4885c0	                           test rax, rax	      7807	eval.c	FUNCTION_149	SWITCH_1	IF_7
0x4005def	            0x7437	                            je 0x4005e28	      7807	eval.c	FUNCTION_149	SWITCH_1	IF_7
0x4005df1	        0x48894608	                mov qword [rsi + 8], rax	      7811	eval.c	FUNCTION_149	SWITCH_1	ELSE_4
0x4005df5	        0x83400401	                  add dword [rax + 4], 1	      7812	eval.c	FUNCTION_149	SWITCH_1	ELSE_4
0x4005df9	              0xc3	                                     ret	      7812	eval.c	FUNCTION_149	SWITCH_1	ELSE_4
0x4005dfa	    0x660f1f440000	                    nop word [rax + rax]	      7812	eval.c	FUNCTION_149	SWITCH_1	ELSE_4
0x4005e00	      0xf20f104708	            movsd xmm0, qword [rdi + 8] 	      7760	eval.c	FUNCTION_149	SWITCH_1
0x4005e05	      0xf20f114608	             movsd qword [rsi + 8], xmm0	      7760	eval.c	FUNCTION_149	SWITCH_1
0x4005e0a	              0xc3	                                     ret	      7761	eval.c	FUNCTION_149	SWITCH_1
0x4005e0b	       0xf1f440000	                   nop dword [rax + rax]	      7761	eval.c	FUNCTION_149	SWITCH_1
0x4005e10	        0x488b4708	                mov rax, qword [rdi + 8]	      7798	eval.c	FUNCTION_149	SWITCH_1	IF_6
0x4005e14	          0x4885c0	                           test rax, rax	      7798	eval.c	FUNCTION_149	SWITCH_1	IF_6
0x4005e17	            0x740f	                            je 0x4005e28	      7798	eval.c	FUNCTION_149	SWITCH_1	IF_6
0x4005e19	        0x48894608	                mov qword [rsi + 8], rax	      7802	eval.c	FUNCTION_149	SWITCH_1	ELSE_3
0x4005e1d	        0x83403801	               add dword [rax + 0x38], 1	      7803	eval.c	FUNCTION_149	SWITCH_1	ELSE_3
0x4005e21	              0xc3	                                     ret	      7803	eval.c	FUNCTION_149	SWITCH_1	ELSE_3
0x4005e22	    0x660f1f440000	                    nop word [rax + rax]	      7803	eval.c	FUNCTION_149	SWITCH_1	ELSE_3
0x4005e28	    0x48c746080000	                  mov qword [rsi + 8], 0	      7808	eval.c	FUNCTION_149	SWITCH_1	IF_7
0x4005e30	              0xc3	                                     ret	      7808	eval.c	FUNCTION_149	SWITCH_1	IF_7
0x4005e31	     0xf1f80000000	                         nop dword [rax]	      7808	eval.c	FUNCTION_149	SWITCH_1	IF_7
0x4005e38	        0x4883c408	                              add rsp, 8	      7819	eval.c	FUNCTION_149
0x4005e3c	          0x4889c7	                            mov rdi, rax	      7785	eval.c	FUNCTION_149	SWITCH_1	ELSE_1	CALL_2
0x4005e3f	              0x5b	                                 pop rbx	      7819	eval.c	FUNCTION_149
0x4005e40	              0x5d	                                 pop rbp	      7819	eval.c	FUNCTION_149
0x4005e41	      0xe900000000	                           jmp 0x4005e46	      7785	eval.c	FUNCTION_149	SWITCH_1	ELSE_1	CALL_2
var_redir_start	functions,0:SWITCH,0:IF,7:DO,0:ELSE,2:WHILE,0:CALL,18:FOR,0	117
0x4011100	            0x4154	                                push r12	       439	eval.c	FUNCTION_6
0x4011102	              0x55	                                push rbp	       439	eval.c	FUNCTION_6
0x4011103	            0x89f5	                            mov ebp, esi	       439	eval.c	FUNCTION_6
0x4011105	              0x53	                                push rbx	       439	eval.c	FUNCTION_6
0x4011106	        0x4883ec20	                           sub rsp, 0x20	       439	eval.c	FUNCTION_6
0x401110a	           0xfb617	                   movzx edx, byte [rdi]	       445	eval.c	FUNCTION_6	IF_1	CALL_1
0x401110d	    0x64488b042528	                mov rax, qword fs:[0x28]	       439	eval.c	FUNCTION_6
0x4011116	      0x4889442418	             mov qword [rsp + 0x18], rax	       439	eval.c	FUNCTION_6
0x401111b	            0x31c0	                            xor eax, eax	       439	eval.c	FUNCTION_6
0x401111d	            0x89d0	                            mov eax, edx	      6376	eval.c	FUNCTION_101	CALL_1
0x401111f	          0x83e0df	                     and eax, 0xffffffdf	      6376	eval.c	FUNCTION_101	CALL_1
0x4011122	          0x83e841	                           sub eax, 0x41	      6376	eval.c	FUNCTION_101	CALL_1
0x4011125	            0x3c19	                            cmp al, 0x19	      6376	eval.c	FUNCTION_101	CALL_1
0x4011127	            0x7647	                           jbe 0x4011170	      6376	eval.c	FUNCTION_101	CALL_1
0x4011129	          0x80fa5f	                            cmp dl, 0x5f	      6376	eval.c	FUNCTION_101	CALL_1
0x401112c	            0x7442	                            je 0x4011170	      6376	eval.c	FUNCTION_101	CALL_1
0x401112e	      0xba05000000	                              mov edx, 5	       447	eval.c	FUNCTION_6	IF_1	CALL_3
0x4011133	      0xbe00000000	                              mov esi, 0	       447	eval.c	FUNCTION_6	IF_1	CALL_3
0x4011138	            0x31ff	                            xor edi, edi	       447	eval.c	FUNCTION_6	IF_1	CALL_3
0x401113a	      0xe800000000	                          call 0x401113f	       447	eval.c	FUNCTION_6	IF_1	CALL_3
0x401113f	            0x31db	                            xor ebx, ebx	       448	eval.c	FUNCTION_6	IF_1
0x4011141	          0x4889c7	                            mov rdi, rax	       447	eval.c	FUNCTION_6	IF_1	CALL_3
0x4011144	      0xe800000000	                          call 0x4011149	       447	eval.c	FUNCTION_6	IF_1	CALL_3
0x4011149	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       503	eval.c	FUNCTION_6
0x401114e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       503	eval.c	FUNCTION_6
0x4011157	            0x89d8	                            mov eax, ebx	       503	eval.c	FUNCTION_6
0x4011159	     0xf858b010000	                           jne 0x40112ea	       503	eval.c	FUNCTION_6
0x401115f	        0x4883c420	                           add rsp, 0x20	       503	eval.c	FUNCTION_6
0x4011163	              0x5b	                                 pop rbx	       503	eval.c	FUNCTION_6
0x4011164	              0x5d	                                 pop rbp	       503	eval.c	FUNCTION_6
0x4011165	            0x415c	                                 pop r12	       503	eval.c	FUNCTION_6
0x4011167	              0xc3	                                     ret	       503	eval.c	FUNCTION_6
0x4011168	     0xf1f84000000	                   nop dword [rax + rax]	       503	eval.c	FUNCTION_6
0x4011170	      0xe800000000	                          call 0x4011175	       452	eval.c	FUNCTION_6	CALL_4
0x4011175	            0x31db	                            xor ebx, ebx	       454	eval.c	FUNCTION_6	IF_2
0x4011177	          0x4885c0	                           test rax, rax	       453	eval.c	FUNCTION_6	IF_2
0x401117a	    0x488905000000	            mov qword [0x04011181], rax 	       452	eval.c	FUNCTION_6	CALL_4
0x4011181	            0x74c6	                            je 0x4011149	       453	eval.c	FUNCTION_6	IF_2
0x4011183	      0xbf60000000	                           mov edi, 0x60	       456	eval.c	FUNCTION_6	CALL_5
0x4011188	      0xe800000000	                          call 0x401118d	       456	eval.c	FUNCTION_6	CALL_5
0x401118d	          0x4885c0	                           test rax, rax	       457	eval.c	FUNCTION_6	IF_3
0x4011190	    0x488905000000	            mov qword [0x04011197], rax 	       456	eval.c	FUNCTION_6	CALL_5
0x4011197	     0xf8443010000	                            je 0x40112e0	       457	eval.c	FUNCTION_6	IF_3
0x401119d	      0xbaf4010000	                          mov edx, 0x1f4	       464	eval.c	FUNCTION_6	CALL_7
0x40111a2	      0xbe01000000	                              mov esi, 1	       464	eval.c	FUNCTION_6	CALL_7
0x40111a7	      0xbf00000000	                              mov edi, 0	       464	eval.c	FUNCTION_6	CALL_7
0x40111ac	      0xe800000000	                          call 0x40111b1	       464	eval.c	FUNCTION_6	CALL_7
0x40111b1	    0x488b15000000	            mov rdx, qword [0x040111b8] 	       467	eval.c	FUNCTION_6	CALL_8
0x40111b8	    0x488b3d000000	            mov rdi, qword [0x040111bf] 	       467	eval.c	FUNCTION_6	CALL_8
0x40111bf	          0x4531c0	                            xor r8d, r8d	       467	eval.c	FUNCTION_6	CALL_8
0x40111c2	            0x31c9	                            xor ecx, ecx	       467	eval.c	FUNCTION_6	CALL_8
0x40111c4	            0x31f6	                            xor esi, esi	       467	eval.c	FUNCTION_6	CALL_8
0x40111c6	      0xe8a5e3ffff	          call sym.get_lval.constprop.24	       467	eval.c	FUNCTION_6	CALL_8
0x40111cb	          0x4885c0	                           test rax, rax	       469	eval.c	FUNCTION_6	IF_4
0x40111ce	    0x488905000000	            mov qword [0x040111d5], rax 	       467	eval.c	FUNCTION_6	CALL_8
0x40111d5	    0x488b1d000000	            mov rbx, qword [0x040111dc] 	       467	eval.c	FUNCTION_6	CALL_8
0x40111dc	     0xf848e000000	                            je 0x4011270	       469	eval.c	FUNCTION_6	IF_4
0x40111e2	        0x48833b00	                      cmp qword [rbx], 0	       469	eval.c	FUNCTION_6	IF_4
0x40111e6	     0xf8484000000	                            je 0x4011270	       469	eval.c	FUNCTION_6	IF_4
0x40111ec	          0x803800	                       cmp byte [rax], 0	       469	eval.c	FUNCTION_6	IF_4
0x40111ef	            0x757f	                           jne 0x4011270	       469	eval.c	FUNCTION_6	IF_4
0x40111f1	            0x85ed	                           test ebp, ebp	       488	eval.c	FUNCTION_6	IF_6
0x40111f3	    0x448b25000000	           mov r12d, dword [0x040111fa] 	       484	eval.c	FUNCTION_6
0x40111fa	    0xc70424020000	                      mov dword [rsp], 2	       486	eval.c	FUNCTION_6
0x4011201	    0xc70500000000	               mov dword [0x0401120b], 0	       485	eval.c	FUNCTION_6
0x401120b	    0x48c744240800	                  mov qword [rsp + 8], 0	       487	eval.c	FUNCTION_6
0x4011214	    0x41b800000000	                              mov r8d, 0	       489	eval.c	FUNCTION_6	CALL_15
0x401121a	            0x7506	                           jne 0x4011222	       488	eval.c	FUNCTION_6	IF_6
0x401121c	    0x41b800000000	                              mov r8d, 0	       491	eval.c	FUNCTION_6	CALL_16
0x4011222	          0x4889c6	                            mov rsi, rax	       491	eval.c	FUNCTION_6	CALL_16
0x4011225	      0xb901000000	                              mov ecx, 1	       491	eval.c	FUNCTION_6	CALL_16
0x401122a	          0x4889e2	                            mov rdx, rsp	       491	eval.c	FUNCTION_6	CALL_16
0x401122d	          0x4889df	                            mov rdi, rbx	       491	eval.c	FUNCTION_6	CALL_16
0x4011230	      0xe81b6dffff	                   call sym.set_var_lval	       491	eval.c	FUNCTION_6	CALL_16
0x4011235	    0x488b1d000000	            mov rbx, qword [0x0401123c] 	       492	eval.c	FUNCTION_6	CALL_17
0x401123c	        0x488b7b08	                mov rdi, qword [rbx + 8]	      2230	eval.c	FUNCTION_45	CALL_1
0x4011240	      0xe800000000	                          call 0x4011245	      2230	eval.c	FUNCTION_45	CALL_1
0x4011245	        0x488b7b58	            mov rdi, qword [rbx + 0x58] 	      2231	eval.c	FUNCTION_45	CALL_2
0x4011249	      0xe800000000	                          call 0x401124e	      2231	eval.c	FUNCTION_45	CALL_2
0x401124e	    0x8b0500000000	            mov eax, dword [0x04011254] 	       493	eval.c	FUNCTION_6
0x4011254	          0x4109c4	                            or r12d, eax	       494	eval.c	FUNCTION_6
0x4011257	            0x85c0	                           test eax, eax	       495	eval.c	FUNCTION_6	IF_7
0x4011259	    0x448925000000	           mov dword [0x04011260], r12d 	       494	eval.c	FUNCTION_6
0x4011260	            0x754a	                           jne 0x40112ac	       495	eval.c	FUNCTION_6	IF_7
0x4011262	      0xbb01000000	                              mov ebx, 1	       502	eval.c	FUNCTION_6
0x4011267	      0xe9ddfeffff	                           jmp 0x4011149	       502	eval.c	FUNCTION_6
0x401126c	         0xf1f4000	                         nop dword [rax]	       502	eval.c	FUNCTION_6
0x4011270	        0x488b7b08	                mov rdi, qword [rbx + 8]	      2230	eval.c	FUNCTION_45	CALL_1
0x4011274	      0xe800000000	                          call 0x4011279	      2230	eval.c	FUNCTION_45	CALL_1
0x4011279	        0x488b7b58	            mov rdi, qword [rbx + 0x58] 	      2231	eval.c	FUNCTION_45	CALL_2
0x401127d	      0xe800000000	                          call 0x4011282	      2231	eval.c	FUNCTION_45	CALL_2
0x4011282	    0x488b05000000	            mov rax, qword [0x04011289] 	       472	eval.c	FUNCTION_6	IF_4	IF_5
0x4011289	      0xba05000000	                              mov edx, 5	       474	eval.c	FUNCTION_6	IF_4	CALL_11
0x401128e	          0x4885c0	                           test rax, rax	       472	eval.c	FUNCTION_6	IF_4	IF_5
0x4011291	            0x7405	                            je 0x4011298	       472	eval.c	FUNCTION_6	IF_4	IF_5
0x4011293	          0x803800	                       cmp byte [rax], 0	       472	eval.c	FUNCTION_6	IF_4	IF_5
0x4011296	            0x7530	                           jne 0x40112c8	       472	eval.c	FUNCTION_6	IF_4	IF_5
0x4011298	            0x31ff	                            xor edi, edi	       476	eval.c	FUNCTION_6	IF_4	CALL_13
0x401129a	      0xbe00000000	                              mov esi, 0	       476	eval.c	FUNCTION_6	IF_4	CALL_13
0x401129f	      0xe800000000	                          call 0x40112a4	       476	eval.c	FUNCTION_6	IF_4	CALL_13
0x40112a4	          0x4889c7	                            mov rdi, rax	       476	eval.c	FUNCTION_6	IF_4	CALL_13
0x40112a7	      0xe800000000	                          call 0x40112ac	       476	eval.c	FUNCTION_6	IF_4	CALL_13
0x40112ac	    0x48c705000000	               mov qword [0x040112b7], 0	       477	eval.c	FUNCTION_6	IF_4
0x40112b7	            0x31db	                            xor ebx, ebx	       479	eval.c	FUNCTION_6	IF_4
0x40112b9	      0xe800000000	                          call 0x40112be	       478	eval.c	FUNCTION_6	IF_4	CALL_14
0x40112be	      0xe986feffff	                           jmp 0x4011149	       479	eval.c	FUNCTION_6	IF_4
0x40112c3	       0xf1f440000	                   nop dword [rax + rax]	       479	eval.c	FUNCTION_6	IF_4
0x40112c8	            0x31ff	                            xor edi, edi	       474	eval.c	FUNCTION_6	IF_4	CALL_11
0x40112ca	      0xbe00000000	                              mov esi, 0	       474	eval.c	FUNCTION_6	IF_4	CALL_11
0x40112cf	      0xe800000000	                          call 0x40112d4	       474	eval.c	FUNCTION_6	IF_4	CALL_11
0x40112d4	          0x4889c7	                            mov rdi, rax	       474	eval.c	FUNCTION_6	IF_4	CALL_11
0x40112d7	      0xe800000000	                          call 0x40112dc	       474	eval.c	FUNCTION_6	IF_4	CALL_11
0x40112dc	            0xebce	                           jmp 0x40112ac	       474	eval.c	FUNCTION_6	IF_4	CALL_11
0x40112de	            0x6690	                                     nop	       474	eval.c	FUNCTION_6	IF_4	CALL_11
0x40112e0	      0xe800000000	                          call 0x40112e5	       459	eval.c	FUNCTION_6	IF_3	CALL_6
0x40112e5	      0xe95ffeffff	                           jmp 0x4011149	       460	eval.c	FUNCTION_6	IF_3
0x40112ea	      0xe800000000	                          call 0x40112ef	       503	eval.c	FUNCTION_6
assert_beeps	functions,0:SWITCH,0:IF,1:DO,0:ELSE,0:WHILE,0:CALL,7:FOR,0	60
0x40096b0	              0x53	                                push rbx	      9034	eval.c	FUNCTION_177
0x40096b1	      0xbe00000000	                              mov esi, 0	      7098	eval.c	FUNCTION_129	CALL_1
0x40096b6	        0x4883ec20	                           sub rsp, 0x20	      9034	eval.c	FUNCTION_177
0x40096ba	    0x64488b042528	                mov rax, qword fs:[0x28]	      9034	eval.c	FUNCTION_177
0x40096c3	      0x4889442418	             mov qword [rsp + 0x18], rax	      9034	eval.c	FUNCTION_177
0x40096c8	            0x31c0	                            xor eax, eax	      9034	eval.c	FUNCTION_177
0x40096ca	      0xe800000000	                          call 0x40096cf	      7098	eval.c	FUNCTION_129	CALL_1
0x40096cf	          0x4889c7	                            mov rdi, rax	      9042	eval.c	FUNCTION_177	CALL_2
0x40096d2	          0x4889c3	                            mov rbx, rax	      7098	eval.c	FUNCTION_129	CALL_1
0x40096d5	    0xc70500000000	               mov dword [0x040096df], 0	      9039	eval.c	FUNCTION_177
0x40096df	    0xc70500000000	               mov dword [0x040096e9], 1	      9040	eval.c	FUNCTION_177
0x40096e9	    0xc70500000000	               mov dword [0x040096f3], 0	      9041	eval.c	FUNCTION_177
0x40096f3	      0xe800000000	                          call 0x40096f8	      9042	eval.c	FUNCTION_177	CALL_2
0x40096f8	    0x8b0500000000	            mov eax, dword [0x040096fe] 	      9043	eval.c	FUNCTION_177	IF_1
0x40096fe	            0x85c0	                           test eax, eax	      9043	eval.c	FUNCTION_177	IF_1
0x4009700	            0x7436	                            je 0x4009738	      9043	eval.c	FUNCTION_177	IF_1
0x4009702	            0x31c0	                            xor eax, eax	      9043	eval.c	FUNCTION_177	IF_1
0x4009704	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      9056	eval.c	FUNCTION_177
0x4009709	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      9056	eval.c	FUNCTION_177
0x4009712	    0xc70500000000	               mov dword [0x0400971c], 0	      9053	eval.c	FUNCTION_177
0x400971c	    0xc70500000000	               mov dword [0x04009726], 0	      9054	eval.c	FUNCTION_177
0x4009726	     0xf85a2000000	                           jne 0x40097ce	      9056	eval.c	FUNCTION_177
0x400972c	        0x4883c420	                           add rsp, 0x20	      9056	eval.c	FUNCTION_177
0x4009730	              0x5b	                                 pop rbx	      9056	eval.c	FUNCTION_177
0x4009731	              0xc3	                                     ret	      9056	eval.c	FUNCTION_177
0x4009732	    0x660f1f440000	                    nop word [rax + rax]	      9056	eval.c	FUNCTION_177
0x4009738	          0x4889e7	                            mov rdi, rsp	      9045	eval.c	FUNCTION_177	IF_1	CALL_3
0x400973b	      0xe800000000	                          call 0x4009740	      9045	eval.c	FUNCTION_177	IF_1	CALL_3
0x4009740	      0xbe00000000	                              mov esi, 0	      9046	eval.c	FUNCTION_177	IF_1	CALL_4
0x4009745	          0x4889e7	                            mov rdi, rsp	      9046	eval.c	FUNCTION_177	IF_1	CALL_4
0x4009748	      0xe800000000	                          call 0x400974d	      9046	eval.c	FUNCTION_177	IF_1	CALL_4
0x400974d	          0x4889de	                            mov rsi, rbx	      9047	eval.c	FUNCTION_177	IF_1	CALL_5
0x4009750	          0x4889e7	                            mov rdi, rsp	      9047	eval.c	FUNCTION_177	IF_1	CALL_5
0x4009753	      0xe800000000	                          call 0x4009758	      9047	eval.c	FUNCTION_177	IF_1	CALL_5
0x4009758	    0x833d00000000	               cmp dword [0x0400975f], 5	      8812	eval.c	FUNCTION_169	IF_1
0x400975f	            0x745f	                            je 0x40097c0	      8812	eval.c	FUNCTION_169	IF_1
0x4009761	      0xe800000000	                          call 0x4009766	      8814	eval.c	FUNCTION_169	CALL_2
0x4009766	      0xbf00000000	                              mov edi, 0	      6489	eval.c	FUNCTION_110	CALL_1
0x400976b	          0x4889c3	                            mov rbx, rax	      8814	eval.c	FUNCTION_169	CALL_2
0x400976e	      0xe800000000	                          call 0x4009773	      6489	eval.c	FUNCTION_110	CALL_1
0x4009773	          0x4885db	                           test rbx, rbx	      6492	eval.c	FUNCTION_110	IF_1
0x4009776	    0xc70500000000	               mov dword [0x04009780], 5	      6490	eval.c	FUNCTION_110
0x4009780	    0x48891d000000	            mov qword [0x04009787], rbx 	      6491	eval.c	FUNCTION_110
0x4009787	            0x740b	                            je 0x4009794	      6492	eval.c	FUNCTION_110	IF_1
0x4009789	        0x83433801	               add dword [rbx + 0x38], 1	      6493	eval.c	FUNCTION_110	IF_1
0x400978d	    0x488b1d000000	            mov rbx, qword [0x04009794] 	      6493	eval.c	FUNCTION_110	IF_1
0x4009794	          0x8b1424	                    mov edx, dword [rsp]	      8815	eval.c	FUNCTION_169	CALL_3
0x4009797	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      8815	eval.c	FUNCTION_169	CALL_3
0x400979c	          0x4889df	                            mov rdi, rbx	      8815	eval.c	FUNCTION_169	CALL_3
0x400979f	      0xe800000000	                          call 0x40097a4	      8815	eval.c	FUNCTION_169	CALL_3
0x40097a4	          0x4889e7	                            mov rdi, rsp	      9049	eval.c	FUNCTION_177	IF_1	CALL_7
0x40097a7	      0xe800000000	                          call 0x40097ac	      9049	eval.c	FUNCTION_177	IF_1	CALL_7
0x40097ac	      0xb801000000	                              mov eax, 1	      9050	eval.c	FUNCTION_177	IF_1
0x40097b1	      0xe94effffff	                           jmp 0x4009704	      9050	eval.c	FUNCTION_177	IF_1
0x40097b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      9050	eval.c	FUNCTION_177	IF_1
0x40097c0	    0x488b1d000000	            mov rbx, qword [0x040097c7] 	      8812	eval.c	FUNCTION_169	IF_1
0x40097c7	          0x4885db	                           test rbx, rbx	      8812	eval.c	FUNCTION_169	IF_1
0x40097ca	            0x75c8	                           jne 0x4009794	      8812	eval.c	FUNCTION_169	IF_1
0x40097cc	            0xeb93	                           jmp 0x4009761	      8812	eval.c	FUNCTION_169	IF_1
0x40097ce	      0xe800000000	                          call 0x40097d3	      9056	eval.c	FUNCTION_177
tv_op	functions,0:SWITCH,1:IF,12:DO,0:ELSE,6:WHILE,0:CALL,13:FOR,0	165
0x4004f10	            0x4155	                                push r13	      2386	eval.c	FUNCTION_47
0x4004f12	            0x4154	                                push r12	      2386	eval.c	FUNCTION_47
0x4004f14	              0x55	                                push rbp	      2386	eval.c	FUNCTION_47
0x4004f15	              0x53	                                push rbx	      2386	eval.c	FUNCTION_47
0x4004f16	          0x4889d3	                            mov rbx, rdx	      2386	eval.c	FUNCTION_47
0x4004f19	        0x4883ec78	                           sub rsp, 0x78	      2386	eval.c	FUNCTION_47
0x4004f1d	    0x64488b042528	                mov rax, qword fs:[0x28]	      2386	eval.c	FUNCTION_47
0x4004f26	      0x4889442468	             mov qword [rsp + 0x68], rax	      2386	eval.c	FUNCTION_47
0x4004f2b	            0x31c0	                            xor eax, eax	      2386	eval.c	FUNCTION_47
0x4004f2d	            0x8b06	                    mov eax, dword [rsi]	      2392	eval.c	FUNCTION_47	IF_1
0x4004f2f	          0x8d50fa	                      lea edx, [rax - 6]	      2393	eval.c	FUNCTION_47	IF_1
0x4004f32	          0x83e2fd	                     and edx, 0xfffffffd	      2393	eval.c	FUNCTION_47	IF_1
0x4004f35	     0xf8495000000	                            je 0x4004fd0	      2393	eval.c	FUNCTION_47	IF_1
0x4004f3b	          0x83f803	                              cmp eax, 3	      2393	eval.c	FUNCTION_47	IF_1
0x4004f3e	     0xf848c000000	                            je 0x4004fd0	      2393	eval.c	FUNCTION_47	IF_1
0x4004f44	            0x8b17	                    mov edx, dword [rdi]	      2395	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4004f46	          0x4989fc	                            mov r12, rdi	      2395	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4004f49	          0x4889f5	                            mov rbp, rsi	      2395	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4004f4c	          0x83fa05	                              cmp edx, 5	      2395	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4004f4f	            0x746f	                            je 0x4004fc0	      2395	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4004f51	     0xf86b9000000	                           jbe 0x4005010	      2395	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4004f57	          0x83fa07	                              cmp edx, 7	      2395	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4004f5a	            0x7574	                           jne 0x4004fd0	      2395	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4004f5c	           0xfb613	                   movzx edx, byte [rbx]	      2466	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_10
0x4004f5f	          0x80fa2e	                            cmp dl, 0x2e	      2466	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_10
0x4004f62	            0x746c	                            je 0x4004fd0	      2466	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_10
0x4004f64	          0x83f807	                              cmp eax, 7	      2466	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_10
0x4004f67	     0xf8453010000	                            je 0x40050c0	      2466	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_10
0x4004f6d	          0x83f801	                              cmp eax, 1	      2466	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_10
0x4004f70	     0xf844a010000	                            je 0x40050c0	      2466	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_10
0x4004f76	          0x83f802	                              cmp eax, 2	      2468	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_10
0x4004f79	            0x7555	                           jne 0x4004fd0	      2468	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_10
0x4004f7b	      0x488d74241c	                   lea rsi, [rsp + 0x1c]	      6964	eval.c	FUNCTION_124	CALL_1
0x4004f80	          0x4889ef	                            mov rdi, rbp	      6964	eval.c	FUNCTION_124	CALL_1
0x4004f83	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      6962	eval.c	FUNCTION_124
0x4004f8b	      0xe800000000	                          call 0x4004f90	      6964	eval.c	FUNCTION_124	CALL_1
0x4004f90	        0x660fefc0	                         pxor xmm0, xmm0	      2473	eval.c	FUNCTION_47	IF_1	SWITCH_1	CALL_11
0x4004f94	           0xfb613	                   movzx edx, byte [rbx]	      2473	eval.c	FUNCTION_47	IF_1	SWITCH_1	CALL_11
0x4004f97	      0xf2480f2ac0	                      cvtsi2sd xmm0, rax	      2473	eval.c	FUNCTION_47	IF_1	SWITCH_1	CALL_11
0x4004f9c	          0x80fa2b	                            cmp dl, 0x2b	      2474	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_12
0x4004f9f	     0xf8493010000	                            je 0x4005138	      2474	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_12
0x4004fa5	    0xf2410f104c24	            movsd xmm1, qword [r12 + 8] 	      2477	eval.c	FUNCTION_47	IF_1	SWITCH_1	ELSE_6
0x4004fac	      0xbb01000000	                              mov ebx, 1	      2480	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4004fb1	        0xf20f5cc8	                        subsd xmm1, xmm0	      2477	eval.c	FUNCTION_47	IF_1	SWITCH_1	ELSE_6
0x4004fb5	    0xf2410f114c24	             movsd qword [r12 + 8], xmm1	      2477	eval.c	FUNCTION_47	IF_1	SWITCH_1	ELSE_6
0x4004fbc	            0xeb30	                           jmp 0x4004fee	      2477	eval.c	FUNCTION_47	IF_1	SWITCH_1	ELSE_6
0x4004fbe	            0x6690	                                     nop	      2477	eval.c	FUNCTION_47	IF_1	SWITCH_1	ELSE_6
0x4004fc0	          0x803b2b	                    cmp byte [rbx], 0x2b	      2407	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_2
0x4004fc3	            0x750b	                           jne 0x4004fd0	      2407	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_2
0x4004fc5	          0x83f805	                              cmp eax, 5	      2407	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_2
0x4004fc8	     0xf84c2000000	                            je 0x4005090	      2407	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_2
0x4004fce	            0x6690	                                     nop	      2407	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_2
0x4004fd0	      0xba05000000	                              mov edx, 5	      2484	eval.c	FUNCTION_47	CALL_13
0x4004fd5	      0xbe00000000	                              mov esi, 0	      2484	eval.c	FUNCTION_47	CALL_13
0x4004fda	            0x31ff	                            xor edi, edi	      2484	eval.c	FUNCTION_47	CALL_13
0x4004fdc	      0xe800000000	                          call 0x4004fe1	      2484	eval.c	FUNCTION_47	CALL_13
0x4004fe1	          0x4889de	                            mov rsi, rbx	      2484	eval.c	FUNCTION_47	CALL_13
0x4004fe4	          0x4889c7	                            mov rdi, rax	      2484	eval.c	FUNCTION_47	CALL_13
0x4004fe7	            0x31db	                            xor ebx, ebx	      2485	eval.c	FUNCTION_47
0x4004fe9	      0xe800000000	                          call 0x4004fee	      2484	eval.c	FUNCTION_47	CALL_13
0x4004fee	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	      2486	eval.c	FUNCTION_47
0x4004ff3	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2486	eval.c	FUNCTION_47
0x4004ffc	            0x89d8	                            mov eax, ebx	      2486	eval.c	FUNCTION_47
0x4004ffe	     0xf85aa010000	                           jne 0x40051ae	      2486	eval.c	FUNCTION_47
0x4005004	        0x4883c478	                           add rsp, 0x78	      2486	eval.c	FUNCTION_47
0x4005008	              0x5b	                                 pop rbx	      2486	eval.c	FUNCTION_47
0x4005009	              0x5d	                                 pop rbp	      2486	eval.c	FUNCTION_47
0x400500a	            0x415c	                                 pop r12	      2486	eval.c	FUNCTION_47
0x400500c	            0x415d	                                 pop r13	      2486	eval.c	FUNCTION_47
0x400500e	              0xc3	                                     ret	      2486	eval.c	FUNCTION_47
0x400500f	              0x90	                                     nop	      2486	eval.c	FUNCTION_47
0x4005010	          0x83ea01	                              sub edx, 1	      2395	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4005013	          0x83fa01	                              cmp edx, 1	      2395	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4005016	            0x77b8	                            ja 0x4004fd0	      2395	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4005018	          0x83f805	                              cmp eax, 5	      2416	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_4
0x400501b	            0x74b3	                            je 0x4004fd0	      2416	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_4
0x400501d	           0xfb60b	                   movzx ecx, byte [rbx]	      2418	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5
0x4005020	          0x8d51d5	                   lea edx, [rcx - 0x2b]	      2418	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5
0x4005023	    0x81e2fd000000	                           and edx, 0xfd	      2418	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5
0x4005029	     0xf84a9000000	                            je 0x40050d8	      2418	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5
0x400502f	          0x83f807	                              cmp eax, 7	      2449	eval.c	FUNCTION_47	IF_1	SWITCH_1	ELSE_4	IF_9
0x4005032	            0x749c	                            je 0x4004fd0	      2449	eval.c	FUNCTION_47	IF_1	SWITCH_1	ELSE_4	IF_9
0x4005034	      0xbe00000000	                              mov esi, 0	      7085	eval.c	FUNCTION_128	CALL_1
0x4005039	    0x41bd00000000	                             mov r13d, 0	      7087	eval.c	FUNCTION_128
0x400503f	      0xe800000000	                          call 0x4005044	      7085	eval.c	FUNCTION_128	CALL_1
0x4005044	      0x488d742420	                   lea rsi, [rsp + 0x20]	      7085	eval.c	FUNCTION_128	CALL_1
0x4005049	          0x4885c0	                           test rax, rax	      7087	eval.c	FUNCTION_128
0x400504c	          0x4889ef	                            mov rdi, rbp	      7085	eval.c	FUNCTION_128	CALL_1
0x400504f	        0x490f44c5	                          cmove rax, r13	      7087	eval.c	FUNCTION_128
0x4005053	          0x4889c3	                            mov rbx, rax	      7087	eval.c	FUNCTION_128
0x4005056	      0xe800000000	                          call 0x400505b	      7085	eval.c	FUNCTION_128	CALL_1
0x400505b	          0x4c89ee	                            mov rsi, r13	      7087	eval.c	FUNCTION_128
0x400505e	          0x4885c0	                           test rax, rax	      7087	eval.c	FUNCTION_128
0x4005061	          0x4889df	                            mov rdi, rbx	      2454	eval.c	FUNCTION_47	IF_1	SWITCH_1	ELSE_4	CALL_9
0x4005064	        0x480f45f0	                         cmovne rsi, rax	      7087	eval.c	FUNCTION_128
0x4005068	      0xe800000000	                          call 0x400506d	      2454	eval.c	FUNCTION_47	IF_1	SWITCH_1	ELSE_4	CALL_9
0x400506d	          0x4c89e7	                            mov rdi, r12	      2455	eval.c	FUNCTION_47	IF_1	SWITCH_1	ELSE_4	CALL_10
0x4005070	          0x4889c3	                            mov rbx, rax	      2454	eval.c	FUNCTION_47	IF_1	SWITCH_1	ELSE_4	CALL_9
0x4005073	      0xe800000000	                          call 0x4005078	      2455	eval.c	FUNCTION_47	IF_1	SWITCH_1	ELSE_4	CALL_10
0x4005078	      0x49895c2408	                mov qword [r12 + 8], rbx	      2457	eval.c	FUNCTION_47	IF_1	SWITCH_1	ELSE_4
0x400507d	    0x41c704240200	                      mov dword [r12], 2	      2456	eval.c	FUNCTION_47	IF_1	SWITCH_1	ELSE_4
0x4005085	      0xbb01000000	                              mov ebx, 1	      2459	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x400508a	      0xe95fffffff	                           jmp 0x4004fee	      2459	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x400508f	              0x90	                                     nop	      2459	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4005090	        0x488b7f08	                mov rdi, qword [rdi + 8]	      2410	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_3
0x4005094	          0x4885ff	                           test rdi, rdi	      2410	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_3
0x4005097	     0xf8407010000	                            je 0x40051a4	      2410	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_3
0x400509d	        0x488b7608	                mov rsi, qword [rsi + 8]	      2410	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_3
0x40050a1	      0xbb01000000	                              mov ebx, 1	      2412	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x40050a6	          0x4885f6	                           test rsi, rsi	      2410	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_3
0x40050a9	     0xf843fffffff	                            je 0x4004fee	      2410	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_3
0x40050af	            0x31d2	                            xor edx, edx	      2411	eval.c	FUNCTION_47	IF_1	SWITCH_1	CALL_1
0x40050b1	      0xe800000000	                          call 0x40050b6	      2411	eval.c	FUNCTION_47	IF_1	SWITCH_1	CALL_1
0x40050b6	      0xe933ffffff	                           jmp 0x4004fee	      2411	eval.c	FUNCTION_47	IF_1	SWITCH_1	CALL_1
0x40050bb	       0xf1f440000	                   nop dword [rax + rax]	      2411	eval.c	FUNCTION_47	IF_1	SWITCH_1	CALL_1
0x40050c0	          0x83f807	                              cmp eax, 7	      2470	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_11
0x40050c3	     0xf85b2feffff	                           jne 0x4004f7b	      2470	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_11
0x40050c9	      0xf20f104508	            movsd xmm0, qword [rbp + 8] 	      2471	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_11
0x40050ce	      0xe9c9feffff	                           jmp 0x4004f9c	      2471	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_11
0x40050d3	       0xf1f440000	                   nop dword [rax + rax]	      2471	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_11
0x40050d8	      0x488d74241c	                   lea rsi, [rsp + 0x1c]	      6964	eval.c	FUNCTION_124	CALL_1
0x40050dd	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      6962	eval.c	FUNCTION_124
0x40050e5	      0xe800000000	                          call 0x40050ea	      6964	eval.c	FUNCTION_124	CALL_1
0x40050ea	        0x837d0007	                      cmp dword [rbp], 7	      2423	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	IF_6
0x40050ee	          0x4989c5	                            mov r13, rax	      6964	eval.c	FUNCTION_124	CALL_1
0x40050f1	            0x745d	                            je 0x4005150	      2423	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	IF_6
0x40050f3	          0x803b2b	                    cmp byte [rbx], 0x2b	      2438	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	ELSE_2	IF_8
0x40050f6	      0x488d74241c	                   lea rsi, [rsp + 0x1c]	      6964	eval.c	FUNCTION_124	CALL_1
0x40050fb	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      6962	eval.c	FUNCTION_124
0x4005103	          0x4889ef	                            mov rdi, rbp	      6964	eval.c	FUNCTION_124	CALL_1
0x4005106	     0xf8484000000	                            je 0x4005190	      2438	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	ELSE_2	IF_8
0x400510c	      0xe800000000	                          call 0x4005111	      6964	eval.c	FUNCTION_124	CALL_1
0x4005111	          0x4929c5	                            sub r13, rax	      2441	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	ELSE_2	CALL_5
0x4005114	          0x4c89e7	                            mov rdi, r12	      2442	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	ELSE_2	CALL_6
0x4005117	      0xbb01000000	                              mov ebx, 1	      2459	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x400511c	      0xe800000000	                          call 0x4005121	      2442	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	ELSE_2	CALL_6
0x4005121	    0x41c704240100	                      mov dword [r12], 1	      2443	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	ELSE_2
0x4005129	      0x4d896c2408	                mov qword [r12 + 8], r13	      2444	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	ELSE_2
0x400512e	      0xe9bbfeffff	                           jmp 0x4004fee	      2444	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	ELSE_2
0x4005133	       0xf1f440000	                   nop dword [rax + rax]	      2444	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	ELSE_2
0x4005138	    0xf2410f584424	             addsd xmm0, qword [r12 + 8]	      2475	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_12
0x400513f	      0xbb01000000	                              mov ebx, 1	      2480	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4005144	    0xf2410f114424	             movsd qword [r12 + 8], xmm0	      2475	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_12
0x400514b	      0xe99efeffff	                           jmp 0x4004fee	      2475	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_12
0x4005150	          0x803b2b	                    cmp byte [rbx], 0x2b	      2427	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	IF_6	IF_7
0x4005153	        0x660fefc0	                         pxor xmm0, xmm0	      2425	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	IF_6
0x4005157	      0xf2480f2ac0	                      cvtsi2sd xmm0, rax	      2425	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	IF_6
0x400515c	            0x743f	                            je 0x400519d	      2427	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	IF_6	IF_7
0x400515e	      0xf20f5c4508	             subsd xmm0, qword [rbp + 8]	      2430	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	IF_6	ELSE_1
0x4005163	          0x4c89e7	                            mov rdi, r12	      2431	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	IF_6	CALL_3
0x4005166	    0xf20f11442408	             movsd qword [rsp + 8], xmm0	      2431	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	IF_6	CALL_3
0x400516c	      0xbb01000000	                              mov ebx, 1	      2459	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x4005171	      0xe800000000	                          call 0x4005176	      2431	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	IF_6	CALL_3
0x4005176	    0xf20f10442408	            movsd xmm0, qword [rsp + 8] 	      2433	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	IF_6
0x400517c	    0x41c704240700	                      mov dword [r12], 7	      2432	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	IF_6
0x4005184	    0xf2410f114424	             movsd qword [r12 + 8], xmm0	      2433	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	IF_6
0x400518b	      0xe95efeffff	                           jmp 0x4004fee	      2433	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	IF_6
0x4005190	      0xe800000000	                          call 0x4005195	      6964	eval.c	FUNCTION_124	CALL_1
0x4005195	          0x4901c5	                            add r13, rax	      2439	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	ELSE_2	CALL_4
0x4005198	      0xe977ffffff	                           jmp 0x4005114	      2439	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	ELSE_2	CALL_4
0x400519d	      0xf20f584508	             addsd xmm0, qword [rbp + 8]	      2428	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	IF_6	IF_7
0x40051a2	            0xebbf	                           jmp 0x4005163	      2428	eval.c	FUNCTION_47	IF_1	SWITCH_1	IF_5	IF_6	IF_7
0x40051a4	      0xbb01000000	                              mov ebx, 1	      2412	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x40051a9	      0xe940feffff	                           jmp 0x4004fee	      2412	eval.c	FUNCTION_47	IF_1	SWITCH_1
0x40051ae	      0xe800000000	                          call 0x40051b3	      2486	eval.c	FUNCTION_47
set_vcount	functions,0:SWITCH,0:IF,1:DO,0:ELSE,0:WHILE,0:CALL,0:FOR,0	7
0x4002a30	            0x85d2	                           test edx, edx	      6458	eval.c	FUNCTION_108	IF_1
0x4002a32	            0x740e	                            je 0x4002a42	      6458	eval.c	FUNCTION_108	IF_1
0x4002a34	    0x488b05000000	            mov rax, qword [0x04002a3b] 	      6459	eval.c	FUNCTION_108	IF_1
0x4002a3b	    0x488905000000	            mov qword [0x04002a42], rax 	      6459	eval.c	FUNCTION_108	IF_1
0x4002a42	    0x48893d000000	            mov qword [0x04002a49], rdi 	      6460	eval.c	FUNCTION_108
0x4002a49	    0x488935000000	            mov qword [0x04002a50], rsi 	      6461	eval.c	FUNCTION_108
0x4002a50	              0xc3	                                     ret	      6461	eval.c	FUNCTION_108
handle_subscript	functions,0:SWITCH,0:IF,10:DO,0:ELSE,4:WHILE,1:CALL,13:FOR,0	702
0x400c6f0	            0x4157	                                push r15	      6721	eval.c	FUNCTION_118
0x400c6f2	            0x4156	                                push r14	      6721	eval.c	FUNCTION_118
0x400c6f4	          0x4189d6	                           mov r14d, edx	      6721	eval.c	FUNCTION_118
0x400c6f7	            0x4155	                                push r13	      6721	eval.c	FUNCTION_118
0x400c6f9	            0x4154	                                push r12	      6721	eval.c	FUNCTION_118
0x400c6fb	          0x4989fd	                            mov r13, rdi	      6721	eval.c	FUNCTION_118
0x400c6fe	              0x55	                                push rbp	      6721	eval.c	FUNCTION_118
0x400c6ff	              0x53	                                push rbx	      6721	eval.c	FUNCTION_118
0x400c700	            0x31ed	                            xor ebp, ebp	      6723	eval.c	FUNCTION_118
0x400c702	          0x4889f3	                            mov rbx, rsi	      6721	eval.c	FUNCTION_118
0x400c705	        0x4883ec78	                           sub rsp, 0x78	      6721	eval.c	FUNCTION_118
0x400c709	    0x64488b042528	                mov rax, qword fs:[0x28]	      6721	eval.c	FUNCTION_118
0x400c712	      0x4889442468	             mov qword [rsp + 0x68], rax	      6721	eval.c	FUNCTION_118
0x400c717	            0x31c0	                            xor eax, eax	      6721	eval.c	FUNCTION_118
0x400c719	          0x488b07	                    mov rax, qword [rdi]	      6721	eval.c	FUNCTION_118
0x400c71c	      0x4c8d7c2428	                   lea r15, [rsp + 0x28]	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400c721	        0x894c2418	             mov dword [rsp + 0x18], ecx	      6721	eval.c	FUNCTION_118
0x400c725	           0xf1f00	                         nop dword [rax]	      6721	eval.c	FUNCTION_118
0x400c728	           0xfb610	                   movzx edx, byte [rax]	      6729	eval.c	FUNCTION_118	WHILE_1
0x400c72b	          0x80fa5b	                            cmp dl, 0x5b	      6729	eval.c	FUNCTION_118	WHILE_1
0x400c72e	     0xf841c010000	                            je 0x400c850	      6729	eval.c	FUNCTION_118	WHILE_1
0x400c734	          0x80fa2e	                            cmp dl, 0x2e	      6730	eval.c	FUNCTION_118	WHILE_1
0x400c737	     0xf8403010000	                            je 0x400c840	      6730	eval.c	FUNCTION_118	WHILE_1
0x400c73d	          0x80fa28	                            cmp dl, 0x28	      6731	eval.c	FUNCTION_118	WHILE_1
0x400c740	     0xf85ba030000	                           jne 0x400cb00	      6731	eval.c	FUNCTION_118	WHILE_1
0x400c746	          0x4585f6	                         test r14d, r14d	      6731	eval.c	FUNCTION_118	WHILE_1
0x400c749	     0xf84c1030000	                            je 0x400cb10	      6731	eval.c	FUNCTION_118	WHILE_1
0x400c74f	            0x8b33	                    mov esi, dword [rbx]	      6732	eval.c	FUNCTION_118	WHILE_1
0x400c751	          0x8d56fd	                      lea edx, [rsi - 3]	      6732	eval.c	FUNCTION_118	WHILE_1
0x400c754	          0x83fa01	                              cmp edx, 1	      6732	eval.c	FUNCTION_118	WHILE_1
0x400c757	     0xf87a3030000	                            ja 0x400cb00	      6732	eval.c	FUNCTION_118	WHILE_1
0x400c75d	         0xfb640ff	               movzx eax, byte [rax - 1]	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400c761	            0x3c09	                               cmp al, 9	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400c763	     0xf8497030000	                            je 0x400cb00	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400c769	            0x3c20	                            cmp al, 0x20	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400c76b	     0xf848f030000	                            je 0x400cb00	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400c771	          0x488b03	                    mov rax, qword [rbx]	      6742	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_2
0x400c774	        0x488b4b08	                mov rcx, qword [rbx + 8]	      6742	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_2
0x400c778	    0xc70300000000	                      mov dword [rbx], 0	      6743	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_2
0x400c77e	          0x83f804	                              cmp eax, 4	      6746	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_2	IF_3
0x400c781	      0x4889442430	             mov qword [rsp + 0x30], rax	      6742	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_2
0x400c786	      0x48894c2438	             mov qword [rsp + 0x38], rcx	      6742	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_2
0x400c78b	     0xf846f040000	                            je 0x400cc00	      6746	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_2	IF_3
0x400c791	      0x4c8b642438	            mov r12, qword [rsp + 0x38] 	      6752	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_2	ELSE_1
0x400c796	            0x31d2	                            xor edx, edx	      6737	eval.c	FUNCTION_118	WHILE_1	IF_1
0x400c798	    0x488b05000000	            mov rax, qword [0x0400c79f] 	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400c79f	          0x4c89e7	                            mov rdi, r12	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400c7a2	      0x4889542408	                mov qword [rsp + 8], rdx	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400c7a7	        0x4c8b4038	              mov r8, qword [rax + 0x38]	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400c7ab	        0x4c890424	                     mov qword [rsp], r8	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400c7af	      0xe800000000	                          call 0x400c7b4	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400c7b4	              0x55	                                push rbp	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400c7b5	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400c7ba	          0x4c89e9	                            mov rcx, r13	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400c7bd	            0x89c6	                            mov esi, eax	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400c7bf	          0x4c89e7	                            mov rdi, r12	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400c7c2	              0x52	                                push rdx	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400c7c3	            0x4156	                                push r14	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400c7c5	          0x4889da	                            mov rdx, rbx	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400c7c8	            0x4157	                                push r15	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400c7ca	      0x4c8b442420	              mov r8, qword [rsp + 0x20]	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400c7cf	          0x4d89c1	                              mov r9, r8	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400c7d2	      0xe800000000	                          call 0x400c7d7	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400c7d7	        0x4883c420	                           add rsp, 0x20	      6763	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_5
0x400c7db	          0x4189c4	                           mov r12d, eax	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400c7de	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      6763	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_5
0x400c7e3	      0xe800000000	                          call 0x400c7e8	      6763	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_5
0x400c7e8	      0xe800000000	                          call 0x400c7ed	      6768	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_5	CALL_6
0x400c7ed	            0x85c0	                           test eax, eax	      6768	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_5	CALL_6
0x400c7ef	     0xf8462030000	                            je 0x400cb57	      6768	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_5	CALL_6
0x400c7f5	        0x4183fc01	                             cmp r12d, 1	      6770	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_5	IF_6
0x400c7f9	     0xf84b8040000	                            je 0x400ccb7	      6770	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_5	IF_6
0x400c7ff	          0x4889ef	                            mov rdi, rbp	      6774	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_8
0x400c802	          0x4531e4	                          xor r12d, r12d	      6774	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_8
0x400c805	      0xe800000000	                          call 0x400c80a	      6774	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_8
0x400c80a	            0x31ed	                            xor ebp, ebp	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400c80c	         0xf1f4000	                         nop dword [rax]	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400c810	          0x4889ef	                            mov rdi, rbp	      6806	eval.c	FUNCTION_118	CALL_13
0x400c813	      0xe800000000	                          call 0x400c818	      6806	eval.c	FUNCTION_118	CALL_13
0x400c818	      0x488b742468	            mov rsi, qword [rsp + 0x68] 	      6808	eval.c	FUNCTION_118
0x400c81d	    0x644833342528	                xor rsi, qword fs:[0x28]	      6808	eval.c	FUNCTION_118
0x400c826	          0x4489e0	                           mov eax, r12d	      6808	eval.c	FUNCTION_118
0x400c829	     0xf85080a0000	                           jne 0x400d237	      6808	eval.c	FUNCTION_118
0x400c82f	        0x4883c478	                           add rsp, 0x78	      6808	eval.c	FUNCTION_118
0x400c833	              0x5b	                                 pop rbx	      6808	eval.c	FUNCTION_118
0x400c834	              0x5d	                                 pop rbp	      6808	eval.c	FUNCTION_118
0x400c835	            0x415c	                                 pop r12	      6808	eval.c	FUNCTION_118
0x400c837	            0x415d	                                 pop r13	      6808	eval.c	FUNCTION_118
0x400c839	            0x415e	                                 pop r14	      6808	eval.c	FUNCTION_118
0x400c83b	            0x415f	                                 pop r15	      6808	eval.c	FUNCTION_118
0x400c83d	              0xc3	                                     ret	      6808	eval.c	FUNCTION_118
0x400c83e	            0x6690	                                     nop	      6808	eval.c	FUNCTION_118
0x400c840	          0x833b06	                      cmp dword [rbx], 6	      6730	eval.c	FUNCTION_118	WHILE_1
0x400c843	     0xf85b7020000	                           jne 0x400cb00	      6730	eval.c	FUNCTION_118	WHILE_1
0x400c849	     0xf1f80000000	                         nop dword [rax]	      6730	eval.c	FUNCTION_118	WHILE_1
0x400c850	         0xfb640ff	               movzx eax, byte [rax - 1]	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400c854	            0x3c20	                            cmp al, 0x20	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400c856	     0xf84a4020000	                            je 0x400cb00	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400c85c	            0x3c09	                               cmp al, 9	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400c85e	     0xf849c020000	                            je 0x400cb00	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400c864	          0x4889ef	                            mov rdi, rbp	      6779	eval.c	FUNCTION_118	WHILE_1	ELSE_3	CALL_9
0x400c867	      0xe800000000	                          call 0x400c86c	      6779	eval.c	FUNCTION_118	WHILE_1	ELSE_3	CALL_9
0x400c86c	            0x8b03	                    mov eax, dword [rbx]	      6780	eval.c	FUNCTION_118	WHILE_1	ELSE_3	IF_7
0x400c86e	          0x83f806	                              cmp eax, 6	      6780	eval.c	FUNCTION_118	WHILE_1	ELSE_3	IF_7
0x400c871	     0xf8401030000	                            je 0x400cb78	      6780	eval.c	FUNCTION_118	WHILE_1	ELSE_3	IF_7
0x400c877	            0x31ed	                            xor ebp, ebp	      6787	eval.c	FUNCTION_118	WHILE_1	ELSE_3	ELSE_4
0x400c879	          0x83f80a	                            cmp eax, 0xa	      4311	eval.c	FUNCTION_71	SWITCH_1
0x400c87c	     0xf87cf000000	                            ja 0x400c951	      4311	eval.c	FUNCTION_71	SWITCH_1
0x400c882	    0xff24c5000000	                       jmp qword [rax*8]	      4311	eval.c	FUNCTION_71	SWITCH_1
0x400c889	     0xf1f80000000	                         nop dword [rax]	      4311	eval.c	FUNCTION_71	SWITCH_1
0x400c890	      0x448b6c2418	           mov r13d, dword [rsp + 0x18] 	      4320	eval.c	FUNCTION_71	SWITCH_1	IF_2
0x400c895	          0x4585ed	                         test r13d, r13d	      4320	eval.c	FUNCTION_71	SWITCH_1	IF_2
0x400c898	     0xf8526040000	                           jne 0x400ccc4	      4320	eval.c	FUNCTION_71	SWITCH_1	IF_2
0x400c89e	            0x6690	                                     nop	      4320	eval.c	FUNCTION_71	SWITCH_1	IF_2
0x400c8a0	          0x4889df	                            mov rdi, rbx	      6790	eval.c	FUNCTION_118	WHILE_1	ELSE_3	ELSE_4	IF_9	CALL_11
0x400c8a3	          0x4531e4	                          xor r12d, r12d	      6791	eval.c	FUNCTION_118	WHILE_1	ELSE_3	ELSE_4	IF_9
0x400c8a6	      0xe800000000	                          call 0x400c8ab	      6790	eval.c	FUNCTION_118	WHILE_1	ELSE_3	ELSE_4	IF_9	CALL_11
0x400c8ab	          0x4885ed	                           test rbp, rbp	      6799	eval.c	FUNCTION_118	IF_10
0x400c8ae	     0xf845cffffff	                            je 0x400c810	      6799	eval.c	FUNCTION_118	IF_10
0x400c8b4	            0x8b03	                    mov eax, dword [rbx]	      6800	eval.c	FUNCTION_118	IF_10
0x400c8b6	          0x83f803	                              cmp eax, 3	      6800	eval.c	FUNCTION_118	IF_10
0x400c8b9	            0x741a	                            je 0x400c8d5	      6800	eval.c	FUNCTION_118	IF_10
0x400c8bb	          0x83f804	                              cmp eax, 4	      6801	eval.c	FUNCTION_118	IF_10
0x400c8be	     0xf854cffffff	                           jne 0x400c810	      6801	eval.c	FUNCTION_118	IF_10
0x400c8c4	        0x488b4308	                mov rax, qword [rbx + 8]	      6802	eval.c	FUNCTION_118	IF_10
0x400c8c8	        0x448b4018	            mov r8d, dword [rax + 0x18] 	      6802	eval.c	FUNCTION_118	IF_10
0x400c8cc	          0x4585c0	                           test r8d, r8d	      6802	eval.c	FUNCTION_118	IF_10
0x400c8cf	     0xf840d040000	                            je 0x400cce2	      6802	eval.c	FUNCTION_118	IF_10
0x400c8d5	          0x4889ef	                            mov rdi, rbp	      6804	eval.c	FUNCTION_118	CALL_12
0x400c8d8	          0x4889de	                            mov rsi, rbx	      6804	eval.c	FUNCTION_118	CALL_12
0x400c8db	      0xe800000000	                          call 0x400c8e0	      6804	eval.c	FUNCTION_118	CALL_12
0x400c8e0	          0x4889c5	                            mov rbp, rax	      6804	eval.c	FUNCTION_118	CALL_12
0x400c8e3	      0xe928ffffff	                           jmp 0x400c810	      6804	eval.c	FUNCTION_118	CALL_12
0x400c8e8	     0xf1f84000000	                   nop dword [rax + rax]	      6804	eval.c	FUNCTION_118	CALL_12
0x400c8f0	      0x448b742418	           mov r14d, dword [rsp + 0x18] 	      4315	eval.c	FUNCTION_71	SWITCH_1	IF_1
0x400c8f5	          0x4585f6	                         test r14d, r14d	      4315	eval.c	FUNCTION_71	SWITCH_1	IF_1
0x400c8f8	            0x74a6	                            je 0x400c8a0	      4315	eval.c	FUNCTION_71	SWITCH_1	IF_1
0x400c8fa	            0x31ff	                            xor edi, edi	      4316	eval.c	FUNCTION_71	SWITCH_1	CALL_2
0x400c8fc	      0xba05000000	                              mov edx, 5	      4316	eval.c	FUNCTION_71	SWITCH_1	CALL_2
0x400c901	      0xbe00000000	                              mov esi, 0	      4316	eval.c	FUNCTION_71	SWITCH_1	CALL_2
0x400c906	      0xe800000000	                          call 0x400c90b	      4316	eval.c	FUNCTION_71	SWITCH_1	CALL_2
0x400c90b	          0x4889c7	                            mov rdi, rax	      4316	eval.c	FUNCTION_71	SWITCH_1	CALL_2
0x400c90e	      0xe800000000	                          call 0x400c913	      4316	eval.c	FUNCTION_71	SWITCH_1	CALL_2
0x400c913	            0xeb8b	                           jmp 0x400c8a0	      4316	eval.c	FUNCTION_71	SWITCH_1	CALL_2
0x400c915	           0xf1f00	                         nop dword [rax]	      4316	eval.c	FUNCTION_71	SWITCH_1	CALL_2
0x400c918	      0x448b642418	           mov r12d, dword [rsp + 0x18] 	      4327	eval.c	FUNCTION_71	SWITCH_1	IF_3
0x400c91d	          0x4585e4	                         test r12d, r12d	      4327	eval.c	FUNCTION_71	SWITCH_1	IF_3
0x400c920	     0xf847affffff	                            je 0x400c8a0	      4327	eval.c	FUNCTION_71	SWITCH_1	IF_3
0x400c926	            0x31ff	                            xor edi, edi	      4328	eval.c	FUNCTION_71	SWITCH_1	CALL_6
0x400c928	      0xba05000000	                              mov edx, 5	      4328	eval.c	FUNCTION_71	SWITCH_1	CALL_6
0x400c92d	      0xbe00000000	                              mov esi, 0	      4328	eval.c	FUNCTION_71	SWITCH_1	CALL_6
0x400c932	      0xe800000000	                          call 0x400c937	      4328	eval.c	FUNCTION_71	SWITCH_1	CALL_6
0x400c937	          0x4889c7	                            mov rdi, rax	      4328	eval.c	FUNCTION_71	SWITCH_1	CALL_6
0x400c93a	      0xe800000000	                          call 0x400c93f	      4328	eval.c	FUNCTION_71	SWITCH_1	CALL_6
0x400c93f	      0xe95cffffff	                           jmp 0x400c8a0	      4328	eval.c	FUNCTION_71	SWITCH_1	CALL_6
0x400c944	         0xf1f4000	                         nop dword [rax]	      4328	eval.c	FUNCTION_71	SWITCH_1	CALL_6
0x400c948	          0x4585f6	                         test r14d, r14d	      4331	eval.c	FUNCTION_71	SWITCH_1	IF_4
0x400c94b	     0xf854fffffff	                           jne 0x400c8a0	      4331	eval.c	FUNCTION_71	SWITCH_1	IF_4
0x400c951	        0x4d8b4500	                     mov r8, qword [r13]	      4344	eval.c	FUNCTION_71	IF_5
0x400c955	    0x48c744244000	               mov qword [rsp + 0x40], 0	        90	string3.h	FUNCTION_194	CALL_6
0x400c95e	    0x48c744244800	               mov qword [rsp + 0x48], 0	        90	string3.h	FUNCTION_194	CALL_6
0x400c967	    0x48c744245000	               mov qword [rsp + 0x50], 0	        90	string3.h	FUNCTION_194	CALL_6
0x400c970	    0x48c744245800	               mov qword [rsp + 0x58], 0	        90	string3.h	FUNCTION_194	CALL_6
0x400c979	        0x4180382e	                     cmp byte [r8], 0x2e	      4344	eval.c	FUNCTION_71	IF_5
0x400c97d	     0xf850d020000	                           jne 0x400cb90	      4344	eval.c	FUNCTION_71	IF_5
0x400c983	        0x4d8d6001	                       lea r12, [r8 + 1]	      4349	eval.c	FUNCTION_71	IF_5
0x400c987	            0x31c9	                            xor ecx, ecx	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400c989	          0x4c89e7	                            mov rdi, r12	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400c98c	            0xeb0a	                           jmp 0x400c998	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400c98e	            0x6690	                                     nop	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400c990	        0x4883c101	                              add rcx, 1	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400c994	        0x4883c701	                              add rdi, 1	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400c998	           0xfb617	                   movzx edx, byte [rdi]	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400c99b	            0x89d0	                            mov eax, edx	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400c99d	          0x83e0df	                     and eax, 0xffffffdf	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400c9a0	          0x83e841	                           sub eax, 0x41	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400c9a3	            0x3c19	                            cmp al, 0x19	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400c9a5	            0x76e9	                           jbe 0x400c990	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400c9a7	           0xfb6c2	                           movzx eax, dl	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400c9aa	          0x83e830	                           sub eax, 0x30	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400c9ad	          0x83f809	                              cmp eax, 9	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400c9b0	            0x76de	                           jbe 0x400c990	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400c9b2	          0x80fa5f	                            cmp dl, 0x5f	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400c9b5	            0x74d9	                            je 0x400c990	      4350	eval.c	FUNCTION_71	IF_5	FOR_1	CALL_9
0x400c9b7	          0x4885c9	                           test rcx, rcx	      4352	eval.c	FUNCTION_71	IF_5	IF_6
0x400c9ba	     0xf84e0feffff	                            je 0x400c8a0	      4352	eval.c	FUNCTION_71	IF_5	IF_6
0x400c9c0	        0x48890c24	                    mov qword [rsp], rcx	      4352	eval.c	FUNCTION_71	IF_5	IF_6
0x400c9c4	      0xe800000000	                          call 0x400c9c9	      4354	eval.c	FUNCTION_71	IF_5	CALL_10
0x400c9c9	          0x4585f6	                         test r14d, r14d	      4413	eval.c	FUNCTION_71	IF_19
0x400c9cc	        0x49894500	                    mov qword [r13], rax	      4354	eval.c	FUNCTION_71	IF_5	CALL_10
0x400c9d0	        0x488b0c24	                    mov rcx, qword [rsp]	      4413	eval.c	FUNCTION_71	IF_19
0x400c9d4	     0xf844efdffff	                            je 0x400c728	      4413	eval.c	FUNCTION_71	IF_19
0x400c9da	          0x4531d2	                          xor r10d, r10d	      4307	eval.c	FUNCTION_71
0x400c9dd	            0x31d2	                            xor edx, edx	      4307	eval.c	FUNCTION_71
0x400c9df	          0x833b06	                      cmp dword [rbx], 6	      4416	eval.c	FUNCTION_71	IF_19	IF_20
0x400c9e2	     0xf8498030000	                            je 0x400cd80	      4416	eval.c	FUNCTION_71	IF_19	IF_20
0x400c9e8	      0x488d74242c	                   lea rsi, [rsp + 0x2c]	      6964	eval.c	FUNCTION_124	CALL_1
0x400c9ed	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      6964	eval.c	FUNCTION_124	CALL_1
0x400c9f2	      0x448954241c	            mov dword [rsp + 0x1c], r10d	      6964	eval.c	FUNCTION_124	CALL_1
0x400c9f7	        0x89542410	             mov dword [rsp + 0x10], edx	      6964	eval.c	FUNCTION_124	CALL_1
0x400c9fb	      0x48894c2408	                mov qword [rsp + 8], rcx	      6964	eval.c	FUNCTION_124	CALL_1
0x400ca00	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	      6962	eval.c	FUNCTION_124
0x400ca08	      0xe800000000	                          call 0x400ca0d	      6964	eval.c	FUNCTION_124	CALL_1
0x400ca0d	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      4419	eval.c	FUNCTION_71	IF_19	IF_20	CALL_27
0x400ca12	        0x48890424	                    mov qword [rsp], rax	      6964	eval.c	FUNCTION_124	CALL_1
0x400ca16	      0xe800000000	                          call 0x400ca1b	      4419	eval.c	FUNCTION_71	IF_19	IF_20	CALL_27
0x400ca1b	        0x8b542410	            mov edx, dword [rsp + 0x10] 	      4421	eval.c	FUNCTION_71	IF_19	IF_21
0x400ca1f	        0x4c8b0c24	                     mov r9, qword [rsp]	      4421	eval.c	FUNCTION_71	IF_19	IF_21
0x400ca23	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      4421	eval.c	FUNCTION_71	IF_19	IF_21
0x400ca28	      0x448b54241c	           mov r10d, dword [rsp + 0x1c] 	      4421	eval.c	FUNCTION_71	IF_19	IF_21
0x400ca2d	            0x85d2	                           test edx, edx	      4421	eval.c	FUNCTION_71	IF_19	IF_21
0x400ca2f	     0xf85be070000	                           jne 0x400d1f3	      4421	eval.c	FUNCTION_71	IF_19	IF_21
0x400ca35	            0x8b03	                    mov eax, dword [rbx]	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400ca37	          0x83f805	                              cmp eax, 5	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400ca3a	     0xf84e6060000	                            je 0x400d126	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400ca40	     0xf872d050000	                            ja 0x400cf73	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400ca46	          0x83e801	                              sub eax, 1	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400ca49	          0x4531e4	                          xor r12d, r12d	      4305	eval.c	FUNCTION_71
0x400ca4c	          0x83f801	                              cmp eax, 1	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400ca4f	     0xf8700030000	                            ja 0x400cd55	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400ca55	      0xbe00000000	                              mov esi, 0	      7085	eval.c	FUNCTION_128	CALL_1
0x400ca5a	          0x4889df	                            mov rdi, rbx	      7085	eval.c	FUNCTION_128	CALL_1
0x400ca5d	        0x89542408	                mov dword [rsp + 8], edx	      7085	eval.c	FUNCTION_128	CALL_1
0x400ca61	        0x4c890c24	                     mov qword [rsp], r9	      7085	eval.c	FUNCTION_128	CALL_1
0x400ca65	      0xe800000000	                          call 0x400ca6a	      7085	eval.c	FUNCTION_128	CALL_1
0x400ca6a	          0x4885c0	                           test rax, rax	      7087	eval.c	FUNCTION_128
0x400ca6d	        0x4c8b0c24	                     mov r9, qword [rsp]	      7087	eval.c	FUNCTION_128
0x400ca71	        0x8b542408	                mov edx, dword [rsp + 8]	      7087	eval.c	FUNCTION_128
0x400ca75	     0xf84d4060000	                            je 0x400d14f	      7087	eval.c	FUNCTION_128
0x400ca7b	          0x4889c7	                            mov rdi, rax	      7087	eval.c	FUNCTION_128
0x400ca7e	        0x89542410	             mov dword [rsp + 0x10], edx	      7087	eval.c	FUNCTION_128
0x400ca82	      0x4c894c2408	                 mov qword [rsp + 8], r9	      7087	eval.c	FUNCTION_128
0x400ca87	        0x48890424	                    mov qword [rsp], rax	      7087	eval.c	FUNCTION_128
0x400ca8b	      0xe800000000	                          call 0x400ca90	      7087	eval.c	FUNCTION_128
0x400ca90	        0x488b0c24	                    mov rcx, qword [rsp]	      7087	eval.c	FUNCTION_128
0x400ca94	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	      7087	eval.c	FUNCTION_128
0x400ca99	        0x8b542410	            mov edx, dword [rsp + 0x10] 	      7087	eval.c	FUNCTION_128
0x400ca9d	            0x85d2	                           test edx, edx	      4447	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23
0x400ca9f	     0xf843a050000	                            je 0x400cfdf	      4447	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23
0x400caa5	          0x4d85c9	                             test r9, r9	      4451	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_24
0x400caa8	     0xf885f060000	                            js 0x400d10d	      4451	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_24
0x400caae	          0x4d85e4	                           test r12, r12	      4457	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_26
0x400cab1	     0xf8867060000	                            js 0x400d11e	      4457	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_26
0x400cab7	          0x4939c4	                            cmp r12, rax	      4457	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_26
0x400caba	        0x4c0f4fe0	                          cmovg r12, rax	      4457	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_26
0x400cabe	          0x4c89e2	                            mov rdx, r12	      4461	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_28
0x400cac1	        0x48c1ea3f	                           shr rdx, 0x3f	      4461	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_28
0x400cac5	          0x4d39e1	                             cmp r9, r12	      4461	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_28
0x400cac8	        0x400f9fc6	                                setg sil	      4461	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_28
0x400cacc	          0x4008d6	                              or sil, dl	      4461	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_28
0x400cacf	     0xf852d050000	                           jne 0x400d002	      4461	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_28
0x400cad5	          0x4939c1	                             cmp r9, rax	      4461	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_28
0x400cad8	     0xf8d24050000	                           jge 0x400d002	      4461	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_28
0x400cade	          0x4529cc	                           sub r12d, r9d	      4464	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	CALL_32
0x400cae1	        0x4a8d3c09	                     lea rdi, [rcx + r9]	      4464	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	CALL_32
0x400cae5	      0x418d742401	                      lea esi, [r12 + 1]	      4464	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	CALL_32
0x400caea	      0xe800000000	                          call 0x400caef	      4464	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	CALL_32
0x400caef	          0x4989c4	                            mov r12, rax	      4464	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	CALL_32
0x400caf2	      0xe90e050000	                           jmp 0x400d005	      4464	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	CALL_32
0x400caf7	    0x660f1f840000	                    nop word [rax + rax]	      4464	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	CALL_32
0x400cb00	    0x41bc01000000	                             mov r12d, 1	      4464	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	CALL_32
0x400cb06	      0xe9a0fdffff	                           jmp 0x400c8ab	      4464	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	CALL_32
0x400cb0b	       0xf1f440000	                   nop dword [rax + rax]	      4464	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	CALL_32
0x400cb10	         0xfb640ff	               movzx eax, byte [rax - 1]	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400cb14	            0x3c20	                            cmp al, 0x20	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400cb16	            0x74e8	                            je 0x400cb00	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400cb18	            0x3c09	                               cmp al, 9	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400cb1a	            0x74e4	                            je 0x400cb00	      6733	eval.c	FUNCTION_118	WHILE_1	CALL_1
0x400cb1c	    0x488b05000000	            mov rax, qword [0x0400cb23] 	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400cb23	            0x31f6	                            xor esi, esi	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400cb25	          0x4c89e9	                            mov rcx, r13	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400cb28	          0x4889da	                            mov rdx, rbx	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400cb2b	      0xbf00000000	                              mov edi, 0	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400cb30	        0x4c8b4038	              mov r8, qword [rax + 0x38]	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400cb34	              0x55	                                push rbp	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400cb35	            0x6a00	                                  push 0	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400cb37	            0x6a00	                                  push 0	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400cb39	            0x4157	                                push r15	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400cb3b	          0x4d89c1	                              mov r9, r8	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400cb3e	      0xe800000000	                          call 0x400cb43	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400cb43	        0x4883c420	                           add rsp, 0x20	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400cb47	          0x4189c4	                           mov r12d, eax	      6756	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_4
0x400cb4a	      0xe800000000	                          call 0x400cb4f	      6768	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_5	CALL_6
0x400cb4f	            0x85c0	                           test eax, eax	      6768	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_5	CALL_6
0x400cb51	     0xf859efcffff	                           jne 0x400c7f5	      6768	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_5	CALL_6
0x400cb57	          0x4889ef	                            mov rdi, rbp	      6774	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_8
0x400cb5a	      0xe800000000	                          call 0x400cb5f	      6774	eval.c	FUNCTION_118	WHILE_1	IF_1	CALL_8
0x400cb5f	        0x4183fc01	                             cmp r12d, 1	      6728	eval.c	FUNCTION_118	WHILE_1
0x400cb63	     0xf85a1fcffff	                           jne 0x400c80a	      6728	eval.c	FUNCTION_118	WHILE_1
0x400cb69	        0x498b4500	                    mov rax, qword [r13]	      6728	eval.c	FUNCTION_118	WHILE_1
0x400cb6d	            0x31ed	                            xor ebp, ebp	      6775	eval.c	FUNCTION_118	WHILE_1	IF_1
0x400cb6f	      0xe9b4fbffff	                           jmp 0x400c728	      6775	eval.c	FUNCTION_118	WHILE_1	IF_1
0x400cb74	         0xf1f4000	                         nop dword [rax]	      6775	eval.c	FUNCTION_118	WHILE_1	IF_1
0x400cb78	        0x488b6b08	                mov rbp, qword [rbx + 8]	      6782	eval.c	FUNCTION_118	WHILE_1	ELSE_3	IF_7
0x400cb7c	          0x4885ed	                           test rbp, rbp	      6783	eval.c	FUNCTION_118	WHILE_1	ELSE_3	IF_7	IF_8
0x400cb7f	     0xf84ccfdffff	                            je 0x400c951	      6783	eval.c	FUNCTION_118	WHILE_1	ELSE_3	IF_7	IF_8
0x400cb85	        0x83450401	                  add dword [rbp + 4], 1	      6784	eval.c	FUNCTION_118	WHILE_1	ELSE_3	IF_7	IF_8
0x400cb89	      0xe9c3fdffff	                           jmp 0x400c951	      6784	eval.c	FUNCTION_118	WHILE_1	ELSE_3	IF_7	IF_8
0x400cb8e	            0x6690	                                     nop	      6784	eval.c	FUNCTION_118	WHILE_1	ELSE_3	IF_7	IF_8
0x400cb90	        0x498d7801	                       lea rdi, [r8 + 1]	      4363	eval.c	FUNCTION_71	ELSE_1	CALL_11
0x400cb94	      0xe800000000	                          call 0x400cb99	      4363	eval.c	FUNCTION_71	ELSE_1	CALL_11
0x400cb99	        0x49894500	                    mov qword [r13], rax	      4363	eval.c	FUNCTION_71	ELSE_1	CALL_11
0x400cb9d	          0x80383a	                    cmp byte [rax], 0x3a	      4364	eval.c	FUNCTION_71	ELSE_1	IF_7
0x400cba0	            0x747e	                            je 0x400cc20	      4364	eval.c	FUNCTION_71	ELSE_1	IF_7
0x400cba2	      0x488d742440	                   lea rsi, [rsp + 0x40]	      4366	eval.c	FUNCTION_71	ELSE_1	ELSE_2	IF_8	CALL_12
0x400cba7	          0x4489f2	                           mov edx, r14d	      4366	eval.c	FUNCTION_71	ELSE_1	ELSE_2	IF_8	CALL_12
0x400cbaa	          0x4c89ef	                            mov rdi, r13	      4366	eval.c	FUNCTION_71	ELSE_1	ELSE_2	IF_8	CALL_12
0x400cbad	      0xe800000000	                          call 0x400cbb2	      4366	eval.c	FUNCTION_71	ELSE_1	ELSE_2	IF_8	CALL_12
0x400cbb2	            0x85c0	                           test eax, eax	      4366	eval.c	FUNCTION_71	ELSE_1	ELSE_2	IF_8	CALL_12
0x400cbb4	     0xf84e6fcffff	                            je 0x400c8a0	      4366	eval.c	FUNCTION_71	ELSE_1	ELSE_2	IF_8	CALL_12
0x400cbba	          0x4585f6	                         test r14d, r14d	      4368	eval.c	FUNCTION_71	ELSE_1	ELSE_3	IF_9	CALL_13
0x400cbbd	     0xf859b010000	                           jne 0x400cd5e	      4368	eval.c	FUNCTION_71	ELSE_1	ELSE_3	IF_9	CALL_13
0x400cbc3	        0x498b4500	                    mov rax, qword [r13]	      4378	eval.c	FUNCTION_71	ELSE_1	IF_10
0x400cbc7	           0xfb610	                   movzx edx, byte [rax]	      4378	eval.c	FUNCTION_71	ELSE_1	IF_10
0x400cbca	          0x80fa3a	                            cmp dl, 0x3a	      4378	eval.c	FUNCTION_71	ELSE_1	IF_10
0x400cbcd	     0xf8428060000	                            je 0x400d1fb	      4378	eval.c	FUNCTION_71	ELSE_1	IF_10
0x400cbd3	          0x80fa5d	                            cmp dl, 0x5d	      4401	eval.c	FUNCTION_71	ELSE_1	IF_16
0x400cbd6	     0xf84b4010000	                            je 0x400cd90	      4401	eval.c	FUNCTION_71	ELSE_1	IF_16
0x400cbdc	      0x448b5c2418	           mov r11d, dword [rsp + 0x18] 	      4403	eval.c	FUNCTION_71	ELSE_1	IF_16	IF_17
0x400cbe1	          0x4531e4	                          xor r12d, r12d	      4307	eval.c	FUNCTION_71
0x400cbe4	          0x4585db	                         test r11d, r11d	      4403	eval.c	FUNCTION_71	ELSE_1	IF_16	IF_17
0x400cbe7	     0xf858f000000	                           jne 0x400cc7c	      4403	eval.c	FUNCTION_71	ELSE_1	IF_16	IF_17
0x400cbed	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      4405	eval.c	FUNCTION_71	ELSE_1	IF_16	CALL_23
0x400cbf2	      0xe800000000	                          call 0x400cbf7	      4405	eval.c	FUNCTION_71	ELSE_1	IF_16	CALL_23
0x400cbf7	      0xe9a4fcffff	                           jmp 0x400c8a0	      4405	eval.c	FUNCTION_71	ELSE_1	IF_16	CALL_23
0x400cbfc	         0xf1f4000	                         nop dword [rax]	      4405	eval.c	FUNCTION_71	ELSE_1	IF_16	CALL_23
0x400cc00	        0x4c8b6108	                mov r12, qword [rcx + 8]	      4862	eval.c	FUNCTION_75	IF_1
0x400cc04	          0x4889ca	                            mov rdx, rcx	      6748	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_2	IF_3
0x400cc07	          0x4d85e4	                           test r12, r12	      4862	eval.c	FUNCTION_75	IF_1
0x400cc0a	     0xf8588fbffff	                           jne 0x400c798	      4862	eval.c	FUNCTION_75	IF_1
0x400cc10	        0x488b4110	            mov rax, qword [rcx + 0x10] 	      4864	eval.c	FUNCTION_75
0x400cc14	    0x4c8da0d80000	                   lea r12, [rax + 0xd8]	      4864	eval.c	FUNCTION_75
0x400cc1b	      0xe978fbffff	                           jmp 0x400c798	      4864	eval.c	FUNCTION_75
0x400cc20	    0x41bc01000000	                             mov r12d, 1	      4365	eval.c	FUNCTION_71	ELSE_1	IF_7
0x400cc26	        0x488d7801	                      lea rdi, [rax + 1]	      4381	eval.c	FUNCTION_71	ELSE_1	IF_10	CALL_15
0x400cc2a	      0xe800000000	                          call 0x400cc2f	      4381	eval.c	FUNCTION_71	ELSE_1	IF_10	CALL_15
0x400cc2f	        0x49894500	                    mov qword [r13], rax	      4381	eval.c	FUNCTION_71	ELSE_1	IF_10	CALL_15
0x400cc33	          0x80385d	                    cmp byte [rax], 0x5d	      4382	eval.c	FUNCTION_71	ELSE_1	IF_10	IF_11
0x400cc36	     0xf84b6000000	                            je 0x400ccf2	      4382	eval.c	FUNCTION_71	ELSE_1	IF_10	IF_11
0x400cc3c	      0x488d742450	                   lea rsi, [rsp + 0x50]	      4384	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_4	IF_12	CALL_16
0x400cc41	          0x4489f2	                           mov edx, r14d	      4384	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_4	IF_12	CALL_16
0x400cc44	          0x4c89ef	                            mov rdi, r13	      4384	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_4	IF_12	CALL_16
0x400cc47	      0xe800000000	                          call 0x400cc4c	      4384	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_4	IF_12	CALL_16
0x400cc4c	            0x85c0	                           test eax, eax	      4384	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_4	IF_12	CALL_16
0x400cc4e	     0xf84cc030000	                            je 0x400d020	      4384	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_4	IF_12	CALL_16
0x400cc54	          0x4585f6	                         test r14d, r14d	      4390	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_5	IF_14	CALL_18
0x400cc57	     0xf8528050000	                           jne 0x400d185	      4390	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_5	IF_14	CALL_18
0x400cc5d	        0x498b4500	                    mov rax, qword [r13]	      4401	eval.c	FUNCTION_71	ELSE_1	IF_16
0x400cc61	          0x80385d	                    cmp byte [rax], 0x5d	      4401	eval.c	FUNCTION_71	ELSE_1	IF_16
0x400cc64	     0xf8477050000	                            je 0x400d1e1	      4401	eval.c	FUNCTION_71	ELSE_1	IF_16
0x400cc6a	        0x8b7c2418	            mov edi, dword [rsp + 0x18] 	      4403	eval.c	FUNCTION_71	ELSE_1	IF_16	IF_17
0x400cc6e	            0x85ff	                           test edi, edi	      4403	eval.c	FUNCTION_71	ELSE_1	IF_16	IF_17
0x400cc70	     0xf84b2050000	                            je 0x400d228	      4403	eval.c	FUNCTION_71	ELSE_1	IF_16	IF_17
0x400cc76	    0x41bc01000000	                             mov r12d, 1	      4380	eval.c	FUNCTION_71	ELSE_1	IF_10
0x400cc7c	      0xba05000000	                              mov edx, 5	      4404	eval.c	FUNCTION_71	ELSE_1	IF_16	CALL_22
0x400cc81	      0xbe00000000	                              mov esi, 0	      4404	eval.c	FUNCTION_71	ELSE_1	IF_16	CALL_22
0x400cc86	            0x31ff	                            xor edi, edi	      4404	eval.c	FUNCTION_71	ELSE_1	IF_16	CALL_22
0x400cc88	      0xe800000000	                          call 0x400cc8d	      4404	eval.c	FUNCTION_71	ELSE_1	IF_16	CALL_22
0x400cc8d	          0x4889c7	                            mov rdi, rax	      4404	eval.c	FUNCTION_71	ELSE_1	IF_16	CALL_22
0x400cc90	      0xe800000000	                          call 0x400cc95	      4404	eval.c	FUNCTION_71	ELSE_1	IF_16	CALL_22
0x400cc95	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      4405	eval.c	FUNCTION_71	ELSE_1	IF_16	CALL_23
0x400cc9a	      0xe800000000	                          call 0x400cc9f	      4405	eval.c	FUNCTION_71	ELSE_1	IF_16	CALL_23
0x400cc9f	          0x4585e4	                         test r12d, r12d	      4406	eval.c	FUNCTION_71	ELSE_1	IF_16	IF_18
0x400cca2	     0xf84f8fbffff	                            je 0x400c8a0	      4406	eval.c	FUNCTION_71	ELSE_1	IF_16	IF_18
0x400cca8	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      4407	eval.c	FUNCTION_71	ELSE_1	IF_16	CALL_24
0x400ccad	      0xe800000000	                          call 0x400ccb2	      4407	eval.c	FUNCTION_71	ELSE_1	IF_16	CALL_24
0x400ccb2	      0xe9e9fbffff	                           jmp 0x400c8a0	      4407	eval.c	FUNCTION_71	ELSE_1	IF_16	CALL_24
0x400ccb7	          0x4889df	                            mov rdi, rbx	      6771	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_5	CALL_7
0x400ccba	      0xe800000000	                          call 0x400ccbf	      6771	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_5	CALL_7
0x400ccbf	      0xe93bfbffff	                           jmp 0x400c7ff	      6771	eval.c	FUNCTION_118	WHILE_1	IF_1	IF_5	CALL_7
0x400ccc4	            0x31ff	                            xor edi, edi	      4321	eval.c	FUNCTION_71	SWITCH_1	CALL_4
0x400ccc6	      0xba05000000	                              mov edx, 5	      4321	eval.c	FUNCTION_71	SWITCH_1	CALL_4
0x400cccb	      0xbe00000000	                              mov esi, 0	      4321	eval.c	FUNCTION_71	SWITCH_1	CALL_4
0x400ccd0	      0xe800000000	                          call 0x400ccd5	      4321	eval.c	FUNCTION_71	SWITCH_1	CALL_4
0x400ccd5	          0x4889c7	                            mov rdi, rax	      4321	eval.c	FUNCTION_71	SWITCH_1	CALL_4
0x400ccd8	      0xe800000000	                          call 0x400ccdd	      4321	eval.c	FUNCTION_71	SWITCH_1	CALL_4
0x400ccdd	      0xe9befbffff	                           jmp 0x400c8a0	      4321	eval.c	FUNCTION_71	SWITCH_1	CALL_4
0x400cce2	      0x4883782800	               cmp qword [rax + 0x28], 0	      6803	eval.c	FUNCTION_118	IF_10
0x400cce7	     0xf8523fbffff	                           jne 0x400c810	      6803	eval.c	FUNCTION_118	IF_10
0x400cced	      0xe9e3fbffff	                           jmp 0x400c8d5	      6803	eval.c	FUNCTION_118	IF_10
0x400ccf2	        0x488d7801	                      lea rdi, [rax + 1]	      4410	eval.c	FUNCTION_71	ELSE_1	CALL_25
0x400ccf6	      0xe800000000	                          call 0x400ccfb	      4410	eval.c	FUNCTION_71	ELSE_1	CALL_25
0x400ccfb	          0x4585f6	                         test r14d, r14d	      4413	eval.c	FUNCTION_71	IF_19
0x400ccfe	        0x49894500	                    mov qword [r13], rax	      4410	eval.c	FUNCTION_71	ELSE_1	CALL_25
0x400cd02	     0xf8420faffff	                            je 0x400c728	      4413	eval.c	FUNCTION_71	IF_19
0x400cd08	    0x41ba01000000	                             mov r10d, 1	      4380	eval.c	FUNCTION_71	ELSE_1	IF_10
0x400cd0e	          0x4585e4	                         test r12d, r12d	      4416	eval.c	FUNCTION_71	IF_19	IF_20
0x400cd11	     0xf84ec040000	                            je 0x400d203	      4416	eval.c	FUNCTION_71	IF_19	IF_20
0x400cd17	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4306	eval.c	FUNCTION_71
0x400cd1e	    0x41b801000000	                              mov r8d, 1	      4416	eval.c	FUNCTION_71	IF_19	IF_20
0x400cd24	          0x4531c9	                            xor r9d, r9d	      4415	eval.c	FUNCTION_71	IF_19
0x400cd27	          0x4585d2	                         test r10d, r10d	      4423	eval.c	FUNCTION_71	IF_19	IF_21	IF_22
0x400cd2a	    0x49c7c4ffffff	             mov r12, 0xffffffffffffffff	      4424	eval.c	FUNCTION_71	IF_19	IF_21	IF_22
0x400cd31	     0xf84a3000000	                            je 0x400cdda	      4423	eval.c	FUNCTION_71	IF_19	IF_21	IF_22
0x400cd37	            0x8b03	                    mov eax, dword [rbx]	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400cd39	          0x83f805	                              cmp eax, 5	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400cd3c	     0xf84e7000000	                            je 0x400ce29	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400cd42	            0x7774	                            ja 0x400cdb8	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400cd44	          0x83e801	                              sub eax, 1	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400cd47	      0xba01000000	                              mov edx, 1	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400cd4c	          0x83f801	                              cmp eax, 1	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400cd4f	     0xf8600fdffff	                           jbe 0x400ca55	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400cd55	        0x498b4500	                    mov rax, qword [r13]	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400cd59	      0xe9caf9ffff	                           jmp 0x400c728	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400cd5e	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      7098	eval.c	FUNCTION_129	CALL_1
0x400cd63	      0xbe00000000	                              mov esi, 0	      7098	eval.c	FUNCTION_129	CALL_1
0x400cd68	      0xe800000000	                          call 0x400cd6d	      7098	eval.c	FUNCTION_129	CALL_1
0x400cd6d	          0x4885c0	                           test rax, rax	      4368	eval.c	FUNCTION_71	ELSE_1	ELSE_3	IF_9	CALL_13
0x400cd70	     0xf854dfeffff	                           jne 0x400cbc3	      4368	eval.c	FUNCTION_71	ELSE_1	ELSE_3	IF_9	CALL_13
0x400cd76	      0xe972feffff	                           jmp 0x400cbed	      4368	eval.c	FUNCTION_71	ELSE_1	ELSE_3	IF_9	CALL_13
0x400cd7b	       0xf1f440000	                   nop dword [rax + rax]	      4368	eval.c	FUNCTION_71	ELSE_1	ELSE_3	IF_9	CALL_13
0x400cd80	            0x85d2	                           test edx, edx	      4421	eval.c	FUNCTION_71	IF_19	IF_21
0x400cd82	     0xf84f4010000	                            je 0x400cf7c	      4421	eval.c	FUNCTION_71	IF_19	IF_21
0x400cd88	          0x4531c0	                            xor r8d, r8d	      4421	eval.c	FUNCTION_71	IF_19	IF_21
0x400cd8b	          0x4531c9	                            xor r9d, r9d	      4415	eval.c	FUNCTION_71	IF_19
0x400cd8e	            0xeb97	                           jmp 0x400cd27	      4415	eval.c	FUNCTION_71	IF_19
0x400cd90	        0x488d7801	                      lea rdi, [rax + 1]	      4410	eval.c	FUNCTION_71	ELSE_1	CALL_25
0x400cd94	      0xe800000000	                          call 0x400cd99	      4410	eval.c	FUNCTION_71	ELSE_1	CALL_25
0x400cd99	          0x4585f6	                         test r14d, r14d	      4413	eval.c	FUNCTION_71	IF_19
0x400cd9c	        0x49894500	                    mov qword [r13], rax	      4410	eval.c	FUNCTION_71	ELSE_1	CALL_25
0x400cda0	     0xf8482f9ffff	                            je 0x400c728	      4413	eval.c	FUNCTION_71	IF_19
0x400cda6	          0x4531e4	                          xor r12d, r12d	      4309	eval.c	FUNCTION_71
0x400cda9	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4306	eval.c	FUNCTION_71
0x400cdb0	      0xe925fcffff	                           jmp 0x400c9da	      4306	eval.c	FUNCTION_71
0x400cdb5	           0xf1f00	                         nop dword [rax]	      4306	eval.c	FUNCTION_71
0x400cdb8	          0x83f806	                              cmp eax, 6	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400cdbb	            0x7598	                           jne 0x400cd55	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400cdbd	      0x448b4c2418	            mov r9d, dword [rsp + 0x18] 	      4535	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_40	IF_41
0x400cdc2	          0x4585c9	                           test r9d, r9d	      4535	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_40	IF_41
0x400cdc5	     0xf8585020000	                           jne 0x400d050	      4535	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_40	IF_41
0x400cdcb	        0x4883f9ff	             cmp rcx, 0xffffffffffffffff	      4537	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_40	IF_42
0x400cdcf	     0xf85cbfaffff	                           jne 0x400c8a0	      4537	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_40	IF_42
0x400cdd5	      0xe913feffff	                           jmp 0x400cbed	      4537	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_40	IF_42
0x400cdda	      0x488d74242c	                   lea rsi, [rsp + 0x2c]	      6964	eval.c	FUNCTION_124	CALL_1
0x400cddf	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      6964	eval.c	FUNCTION_124	CALL_1
0x400cde4	      0x448944241c	             mov dword [rsp + 0x1c], r8d	      6964	eval.c	FUNCTION_124	CALL_1
0x400cde9	      0x4489542410	            mov dword [rsp + 0x10], r10d	      6964	eval.c	FUNCTION_124	CALL_1
0x400cdee	      0x4c894c2408	                 mov qword [rsp + 8], r9	      6964	eval.c	FUNCTION_124	CALL_1
0x400cdf3	        0x48890c24	                    mov qword [rsp], rcx	      6964	eval.c	FUNCTION_124	CALL_1
0x400cdf7	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	      6962	eval.c	FUNCTION_124
0x400cdff	      0xe800000000	                          call 0x400ce04	      6964	eval.c	FUNCTION_124	CALL_1
0x400ce04	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      4428	eval.c	FUNCTION_71	IF_19	IF_21	ELSE_6	CALL_29
0x400ce09	          0x4989c4	                            mov r12, rax	      6964	eval.c	FUNCTION_124	CALL_1
0x400ce0c	      0xe800000000	                          call 0x400ce11	      4428	eval.c	FUNCTION_71	IF_19	IF_21	ELSE_6	CALL_29
0x400ce11	        0x488b0c24	                    mov rcx, qword [rsp]	      4428	eval.c	FUNCTION_71	IF_19	IF_21	ELSE_6	CALL_29
0x400ce15	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	      4428	eval.c	FUNCTION_71	IF_19	IF_21	ELSE_6	CALL_29
0x400ce1a	      0x448b542410	           mov r10d, dword [rsp + 0x10] 	      4428	eval.c	FUNCTION_71	IF_19	IF_21	ELSE_6	CALL_29
0x400ce1f	      0x448b44241c	            mov r8d, dword [rsp + 0x1c] 	      4428	eval.c	FUNCTION_71	IF_19	IF_21	ELSE_6	CALL_29
0x400ce24	      0xe90effffff	                           jmp 0x400cd37	      4428	eval.c	FUNCTION_71	IF_19	IF_21	ELSE_6	CALL_29
0x400ce29	      0xba01000000	                              mov edx, 1	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400ce2e	        0x488b7b08	                mov rdi, qword [rbx + 8]	      4482	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_35
0x400ce32	      0x448944241c	             mov dword [rsp + 0x1c], r8d	      4482	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_35
0x400ce37	      0x4489542410	            mov dword [rsp + 0x10], r10d	      4482	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_35
0x400ce3c	        0x89542408	                mov dword [rsp + 8], edx	      4482	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_35
0x400ce40	        0x4c890c24	                     mov qword [rsp], r9	      4482	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_35
0x400ce44	      0xe800000000	                          call 0x400ce49	      4482	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_35
0x400ce49	        0x4c8b0c24	                     mov r9, qword [rsp]	      4484	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_30
0x400ce4d	      0x448b44241c	            mov r8d, dword [rsp + 0x1c] 	      4485	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31
0x400ce52	        0x8b542408	                mov edx, dword [rsp + 8]	      4485	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31
0x400ce56	      0x448b542410	           mov r10d, dword [rsp + 0x10] 	      4485	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31
0x400ce5b	        0x498d0c01	                     lea rcx, [r9 + rax]	      4484	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_30
0x400ce5f	          0x4d85c9	                             test r9, r9	      4484	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_30
0x400ce62	        0x4c0f48c9	                           cmovs r9, rcx	      4484	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_30
0x400ce66	          0x4585c0	                           test r8d, r8d	      4485	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31
0x400ce69	            0x7555	                           jne 0x400cec0	      4485	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31
0x400ce6b	          0x4c89c9	                             mov rcx, r9	      4485	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31
0x400ce6e	        0x48c1e93f	                           shr rcx, 0x3f	      4485	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31
0x400ce72	            0x84c9	                             test cl, cl	      4485	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31
0x400ce74	            0x7505	                           jne 0x400ce7b	      4485	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31
0x400ce76	          0x4c39c8	                             cmp rax, r9	      4485	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31
0x400ce79	            0x7f45	                            jg 0x400cec0	      4485	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31
0x400ce7b	            0x85d2	                           test edx, edx	      4489	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31	IF_32
0x400ce7d	     0xf85fa020000	                           jne 0x400d17d	      4489	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31	IF_32
0x400ce83	      0x448b542418	           mov r10d, dword [rsp + 0x18] 	      4491	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31	IF_32	IF_33
0x400ce88	          0x4585d2	                         test r10d, r10d	      4491	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31	IF_32	IF_33
0x400ce8b	     0xf840ffaffff	                            je 0x400c8a0	      4491	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31	IF_32	IF_33
0x400ce91	            0x31ff	                            xor edi, edi	      4492	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31	IF_32	CALL_37
0x400ce93	      0xba05000000	                              mov edx, 5	      4492	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31	IF_32	CALL_37
0x400ce98	      0xbe00000000	                              mov esi, 0	      4492	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31	IF_32	CALL_37
0x400ce9d	        0x4c890c24	                     mov qword [rsp], r9	      4492	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31	IF_32	CALL_37
0x400cea1	      0xe800000000	                          call 0x400cea6	      4492	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31	IF_32	CALL_37
0x400cea6	        0x4c8b0c24	                     mov r9, qword [rsp]	      4492	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31	IF_32	CALL_37
0x400ceaa	          0x4889c7	                            mov rdi, rax	      4492	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31	IF_32	CALL_37
0x400cead	          0x4c89ce	                             mov rsi, r9	      4492	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31	IF_32	CALL_37
0x400ceb0	      0xe800000000	                          call 0x400ceb5	      4492	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31	IF_32	CALL_37
0x400ceb5	      0xe9e6f9ffff	                           jmp 0x400c8a0	      4492	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31	IF_32	CALL_37
0x400ceba	    0x660f1f440000	                    nop word [rax + rax]	      4492	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_31	IF_32	CALL_37
0x400cec0	            0x85d2	                           test edx, edx	      4497	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34
0x400cec2	     0xf849b020000	                            je 0x400d163	      4497	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34
0x400cec8	          0x4d85e4	                           test r12, r12	      4502	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_35
0x400cecb	     0xf888a020000	                            js 0x400d15b	      4502	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_35
0x400ced1	          0x4c39e0	                            cmp rax, r12	      4504	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	ELSE_11	IF_36
0x400ced4	     0xf8e54010000	                           jle 0x400d02e	      4504	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	ELSE_11	IF_36
0x400ceda	          0x4585d2	                         test r10d, r10d	      4506	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_37
0x400cedd	            0x7513	                           jne 0x400cef2	      4506	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_37
0x400cedf	      0x498d442401	                      lea rax, [r12 + 1]	      4506	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_37
0x400cee4	          0x4c39c8	                             cmp rax, r9	      4507	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_37
0x400cee7	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      4507	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_37
0x400ceee	        0x4c0f4ce0	                          cmovl r12, rax	      4507	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_37
0x400cef2	        0x4c890c24	                     mov qword [rsp], r9	      4507	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_37
0x400cef6	      0xe800000000	                          call 0x400cefb	      4508	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	CALL_38
0x400cefb	          0x4885c0	                           test rax, rax	      4509	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_38
0x400cefe	      0x4889442410	             mov qword [rsp + 0x10], rax	      4508	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	CALL_38
0x400cf03	     0xf8497f9ffff	                            je 0x400c8a0	      4509	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_38
0x400cf09	        0x4c8b0c24	                     mov r9, qword [rsp]	      4511	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	CALL_39
0x400cf0d	        0x488b7b08	                mov rdi, qword [rbx + 8]	      4511	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	CALL_39
0x400cf11	          0x4c89ce	                             mov rsi, r9	      4511	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	CALL_39
0x400cf14	      0xe800000000	                          call 0x400cf19	      4511	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	CALL_39
0x400cf19	        0x4c8b0c24	                     mov r9, qword [rsp]	      4511	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	CALL_39
0x400cf1d	          0x4889c2	                            mov rdx, rax	      4511	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	CALL_39
0x400cf20	          0x4d39cc	                             cmp r12, r9	      4511	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	CALL_39
0x400cf23	            0x7d1b	                           jge 0x400cf40	      4511	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	CALL_39
0x400cf25	      0xe907020000	                           jmp 0x400d131	      4511	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	CALL_39
0x400cf2a	    0x660f1f440000	                    nop word [rax + rax]	      4511	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	CALL_39
0x400cf30	        0x4983c101	                               add r9, 1	      4512	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2
0x400cf34	          0x488b12	                    mov rdx, qword [rdx]	      4519	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2
0x400cf37	          0x4d39e1	                             cmp r9, r12	      4511	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	CALL_39
0x400cf3a	     0xf8ff1010000	                            jg 0x400d131	      4511	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	CALL_39
0x400cf40	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4514	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	IF_39	CALL_40
0x400cf45	        0x488d7210	                   lea rsi, [rdx + 0x10]	      4514	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	IF_39	CALL_40
0x400cf49	      0x4c894c2408	                 mov qword [rsp + 8], r9	      4514	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	IF_39	CALL_40
0x400cf4e	        0x48891424	                    mov qword [rsp], rdx	      4514	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	IF_39	CALL_40
0x400cf52	      0xe800000000	                          call 0x400cf57	      4514	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	IF_39	CALL_40
0x400cf57	            0x85c0	                           test eax, eax	      4514	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	IF_39	CALL_40
0x400cf59	        0x488b1424	                    mov rdx, qword [rsp]	      4514	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	IF_39	CALL_40
0x400cf5d	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	      4514	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	IF_39	CALL_40
0x400cf62	            0x75cc	                           jne 0x400cf30	      4514	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	IF_39	CALL_40
0x400cf64	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4516	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	IF_39	CALL_41
0x400cf69	      0xe800000000	                          call 0x400cf6e	      4516	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	IF_39	CALL_41
0x400cf6e	      0xe92df9ffff	                           jmp 0x400c8a0	      4516	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	FOR_2	IF_39	CALL_41
0x400cf73	          0x83f806	                              cmp eax, 6	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400cf76	     0xf85d9fdffff	                           jne 0x400cd55	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400cf7c	        0x4883f9ff	             cmp rcx, 0xffffffffffffffff	      4544	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_43
0x400cf80	     0xf84f0000000	                            je 0x400d076	      4544	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_43
0x400cf86	        0x488b7b08	                mov rdi, qword [rbx + 8]	      4554	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_52
0x400cf8a	            0x89ca	                            mov edx, ecx	      4554	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_52
0x400cf8c	          0x4c89e6	                            mov rsi, r12	      4554	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_52
0x400cf8f	      0xe800000000	                          call 0x400cf94	      4554	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_52
0x400cf94	        0x8b542418	            mov edx, dword [rsp + 0x18] 	      4556	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_45
0x400cf98	          0x4885c0	                           test rax, rax	      4556	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_45
0x400cf9b	          0x4889c1	                            mov rcx, rax	      4554	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_52
0x400cf9e	           0xf94c0	                                 sete al	      4556	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_45
0x400cfa1	          0x880424	                      mov byte [rsp], al	      4556	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_45
0x400cfa4	            0x85d2	                           test edx, edx	      4556	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_45
0x400cfa6	     0xf8452010000	                            je 0x400d0fe	      4556	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_45
0x400cfac	            0x84c0	                             test al, al	      4556	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_45
0x400cfae	     0xf850c020000	                           jne 0x400d1c0	      4556	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_45
0x400cfb4	      0x488d742440	                   lea rsi, [rsp + 0x40]	      4563	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_56
0x400cfb9	          0x4889cf	                            mov rdi, rcx	      4563	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_56
0x400cfbc	      0xe800000000	                          call 0x400cfc1	      4563	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_56
0x400cfc1	          0x4889df	                            mov rdi, rbx	      4564	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_57
0x400cfc4	      0xe800000000	                          call 0x400cfc9	      4564	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_57
0x400cfc9	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      4565	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400cfce	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	      4565	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400cfd3	          0x488903	                    mov qword [rbx], rax	      4565	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400cfd6	        0x48895308	                mov qword [rbx + 8], rdx	      4565	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400cfda	      0xe976fdffff	                           jmp 0x400cd55	      4565	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400cfdf	          0x4c39c8	                             cmp rax, r9	      4471	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_9	IF_29
0x400cfe2	            0x7e1e	                           jle 0x400d002	      4471	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_9	IF_29
0x400cfe4	          0x4c89c8	                             mov rax, r9	      4471	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_9	IF_29
0x400cfe7	        0x48c1e83f	                           shr rax, 0x3f	      4471	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_9	IF_29
0x400cfeb	            0x84c0	                             test al, al	      4471	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_9	IF_29
0x400cfed	            0x7513	                           jne 0x400d002	      4471	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_9	IF_29
0x400cfef	        0x4a8d3c09	                     lea rdi, [rcx + r9]	      4474	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_9	CALL_33
0x400cff3	      0xbe01000000	                              mov esi, 1	      4474	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_9	CALL_33
0x400cff8	      0xe800000000	                          call 0x400cffd	      4474	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_9	CALL_33
0x400cffd	          0x4989c4	                            mov r12, rax	      4474	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_9	CALL_33
0x400d000	            0xeb03	                           jmp 0x400d005	      4474	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_9	CALL_33
0x400d002	          0x4531e4	                          xor r12d, r12d	      4462	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_28
0x400d005	          0x4889df	                            mov rdi, rbx	      4476	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_34
0x400d008	      0xe800000000	                          call 0x400d00d	      4476	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_34
0x400d00d	        0x4c896308	                mov qword [rbx + 8], r12	      4478	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400d011	    0xc70302000000	                      mov dword [rbx], 2	      4477	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400d017	        0x498b4500	                    mov rax, qword [r13]	      4477	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400d01b	      0xe908f7ffff	                           jmp 0x400c728	      4477	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400d020	          0x4585e4	                         test r12d, r12d	      4386	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_4	IF_12	IF_13
0x400d023	     0xf8577f8ffff	                           jne 0x400c8a0	      4386	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_4	IF_12	IF_13
0x400d029	      0xe9bffbffff	                           jmp 0x400cbed	      4386	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_4	IF_12	IF_13
0x400d02e	        0x4c8d60ff	                      lea r12, [rax - 1]	      4505	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	ELSE_11	IF_36
0x400d032	          0x4585d2	                         test r10d, r10d	      4506	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_37
0x400d035	     0xf85b7feffff	                           jne 0x400cef2	      4506	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_37
0x400d03b	          0x4d85e4	                           test r12, r12	      4506	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_37
0x400d03e	     0xf899bfeffff	                           jns 0x400cedf	      4506	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_37
0x400d044	    0x49c7c4ffffff	             mov r12, 0xffffffffffffffff	      4507	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_37
0x400d04b	      0xe9a2feffff	                           jmp 0x400cef2	      4507	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_37
0x400d050	      0xba05000000	                              mov edx, 5	      4536	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_40	CALL_48
0x400d055	      0xbe00000000	                              mov esi, 0	      4536	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_40	CALL_48
0x400d05a	            0x31ff	                            xor edi, edi	      4536	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_40	CALL_48
0x400d05c	        0x48890c24	                    mov qword [rsp], rcx	      4536	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_40	CALL_48
0x400d060	      0xe800000000	                          call 0x400d065	      4536	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_40	CALL_48
0x400d065	          0x4889c7	                            mov rdi, rax	      4536	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_40	CALL_48
0x400d068	      0xe800000000	                          call 0x400d06d	      4536	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_40	CALL_48
0x400d06d	        0x488b0c24	                    mov rcx, qword [rsp]	      4536	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_40	CALL_48
0x400d071	      0xe955fdffff	                           jmp 0x400cdcb	      4536	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_40	CALL_48
0x400d076	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      7098	eval.c	FUNCTION_129	CALL_1
0x400d07b	      0xbe00000000	                              mov esi, 0	      7098	eval.c	FUNCTION_129	CALL_1
0x400d080	        0x48890c24	                    mov qword [rsp], rcx	      7098	eval.c	FUNCTION_129	CALL_1
0x400d084	      0xe800000000	                          call 0x400d089	      7098	eval.c	FUNCTION_129	CALL_1
0x400d089	          0x4885c0	                           test rax, rax	      4547	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_43	IF_44
0x400d08c	          0x4989c4	                            mov r12, rax	      7098	eval.c	FUNCTION_129	CALL_1
0x400d08f	        0x488b0c24	                    mov rcx, qword [rsp]	      4547	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_43	IF_44
0x400d093	     0xf8454fbffff	                            je 0x400cbed	      4547	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_43	IF_44
0x400d099	        0x488b7b08	                mov rdi, qword [rbx + 8]	      4554	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_52
0x400d09d	            0x89ca	                            mov edx, ecx	      4554	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_52
0x400d09f	          0x4889c6	                            mov rsi, rax	      4554	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_52
0x400d0a2	      0xe800000000	                          call 0x400d0a7	      4554	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_52
0x400d0a7	        0x8b742418	            mov esi, dword [rsp + 0x18] 	      4556	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_45
0x400d0ab	          0x4885c0	                           test rax, rax	      4556	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_45
0x400d0ae	          0x4889c1	                            mov rcx, rax	      4554	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_52
0x400d0b1	           0xf94c0	                                 sete al	      4556	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_45
0x400d0b4	            0x85f6	                           test esi, esi	      4556	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_45
0x400d0b6	           0xf95c2	                                setne dl	      4556	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_45
0x400d0b9	            0x20c2	                              and dl, al	      4556	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_45
0x400d0bb	          0x881424	                      mov byte [rsp], dl	      4556	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_45
0x400d0be	     0xf8453010000	                            je 0x400d217	      4556	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_45
0x400d0c4	      0xba05000000	                              mov edx, 5	      4557	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_54
0x400d0c9	      0xbe00000000	                              mov esi, 0	      4557	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_54
0x400d0ce	            0x31ff	                            xor edi, edi	      4557	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_54
0x400d0d0	      0x48894c2408	                mov qword [rsp + 8], rcx	      4557	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_54
0x400d0d5	      0xe800000000	                          call 0x400d0da	      4557	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_54
0x400d0da	          0x4c89e6	                            mov rsi, r12	      4557	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_54
0x400d0dd	          0x4889c7	                            mov rdi, rax	      4557	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_54
0x400d0e0	      0xe800000000	                          call 0x400d0e5	      4557	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_54
0x400d0e5	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      4557	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_54
0x400d0ea	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      4559	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_55
0x400d0ef	      0x48894c2408	                mov qword [rsp + 8], rcx	      4559	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_55
0x400d0f4	      0xe800000000	                          call 0x400d0f9	      4559	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_55
0x400d0f9	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      4559	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_55
0x400d0fe	        0x803c2400	                       cmp byte [rsp], 0	      4560	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_47
0x400d102	     0xf84acfeffff	                            je 0x400cfb4	      4560	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_47
0x400d108	      0xe993f7ffff	                           jmp 0x400c8a0	      4560	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_47
0x400d10d	          0x4901c1	                             add r9, rax	      4560	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_47
0x400d110	      0xba00000000	                              mov edx, 0	      4560	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_47
0x400d115	        0x4c0f48ca	                           cmovs r9, rdx	      4560	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_47
0x400d119	      0xe990f9ffff	                           jmp 0x400caae	      4560	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_47
0x400d11e	          0x4901c4	                            add r12, rax	      4458	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_26
0x400d121	      0xe998f9ffff	                           jmp 0x400cabe	      4458	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_23	IF_26
0x400d126	          0x4531c0	                            xor r8d, r8d	      4432	eval.c	FUNCTION_71	IF_19	SWITCH_2
0x400d129	          0x4531e4	                          xor r12d, r12d	      4305	eval.c	FUNCTION_71
0x400d12c	      0xe9fdfcffff	                           jmp 0x400ce2e	      4305	eval.c	FUNCTION_71
0x400d131	          0x4889df	                            mov rdi, rbx	      4521	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	CALL_42
0x400d134	      0xe800000000	                          call 0x400d139	      4521	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	CALL_42
0x400d139	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      4522	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	CALL_43
0x400d13e	          0x4889df	                            mov rdi, rbx	      4522	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	CALL_43
0x400d141	      0xe800000000	                          call 0x400d146	      4522	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	CALL_43
0x400d146	        0x498b4500	                    mov rax, qword [r13]	      4522	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	CALL_43
0x400d14a	      0xe9d9f5ffff	                           jmp 0x400c728	      4522	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	CALL_43
0x400d14f	            0x31c0	                            xor eax, eax	      7087	eval.c	FUNCTION_128
0x400d151	      0xb900000000	                              mov ecx, 0	      7087	eval.c	FUNCTION_128
0x400d156	      0xe942f9ffff	                           jmp 0x400ca9d	      7087	eval.c	FUNCTION_128
0x400d15b	          0x4901c4	                            add r12, rax	      4503	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_35
0x400d15e	      0xe9cffeffff	                           jmp 0x400d032	      4503	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_34	IF_35
0x400d163	        0x488b7b08	                mov rdi, qword [rbx + 8]	      4526	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_12	CALL_45
0x400d167	          0x4c89ce	                             mov rsi, r9	      4526	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_12	CALL_45
0x400d16a	      0xe800000000	                          call 0x400d16f	      4526	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_12	CALL_45
0x400d16f	      0x488d742440	                   lea rsi, [rsp + 0x40]	      4526	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_12	CALL_45
0x400d174	        0x488d7810	                   lea rdi, [rax + 0x10]	      4526	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_12	CALL_45
0x400d178	      0xe93ffeffff	                           jmp 0x400cfbc	      4526	eval.c	FUNCTION_71	IF_19	SWITCH_2	ELSE_12	CALL_45
0x400d17d	          0x4989c1	                             mov r9, rax	      4482	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_35
0x400d180	      0xe943fdffff	                           jmp 0x400cec8	      4482	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_35
0x400d185	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      7098	eval.c	FUNCTION_129	CALL_1
0x400d18a	      0xbe00000000	                              mov esi, 0	      7098	eval.c	FUNCTION_129	CALL_1
0x400d18f	      0xe800000000	                          call 0x400d194	      7098	eval.c	FUNCTION_129	CALL_1
0x400d194	          0x4885c0	                           test rax, rax	      4390	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_5	IF_14	CALL_18
0x400d197	     0xf8482000000	                            je 0x400d21f	      4390	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_5	IF_14	CALL_18
0x400d19d	        0x498b4500	                    mov rax, qword [r13]	      4401	eval.c	FUNCTION_71	ELSE_1	IF_16
0x400d1a1	          0x80385d	                    cmp byte [rax], 0x5d	      4401	eval.c	FUNCTION_71	ELSE_1	IF_16
0x400d1a4	     0xf85c0faffff	                           jne 0x400cc6a	      4401	eval.c	FUNCTION_71	ELSE_1	IF_16
0x400d1aa	        0x488d7801	                      lea rdi, [rax + 1]	      4410	eval.c	FUNCTION_71	ELSE_1	CALL_25
0x400d1ae	      0xe800000000	                          call 0x400d1b3	      4410	eval.c	FUNCTION_71	ELSE_1	CALL_25
0x400d1b3	          0x4531d2	                          xor r10d, r10d	      4303	eval.c	FUNCTION_71
0x400d1b6	        0x49894500	                    mov qword [r13], rax	      4410	eval.c	FUNCTION_71	ELSE_1	CALL_25
0x400d1ba	      0xe94ffbffff	                           jmp 0x400cd0e	      4410	eval.c	FUNCTION_71	ELSE_1	CALL_25
0x400d1bf	              0x90	                                     nop	      4410	eval.c	FUNCTION_71	ELSE_1	CALL_25
0x400d1c0	            0x31ff	                            xor edi, edi	      4557	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_54
0x400d1c2	      0xba05000000	                              mov edx, 5	      4557	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_54
0x400d1c7	      0xbe00000000	                              mov esi, 0	      4557	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_54
0x400d1cc	      0xe800000000	                          call 0x400d1d1	      4557	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_54
0x400d1d1	          0x4c89e6	                            mov rsi, r12	      4557	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_54
0x400d1d4	          0x4889c7	                            mov rdi, rax	      4557	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_54
0x400d1d7	      0xe800000000	                          call 0x400d1dc	      4557	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_54
0x400d1dc	      0xe9bff6ffff	                           jmp 0x400c8a0	      4557	eval.c	FUNCTION_71	IF_19	SWITCH_2	CALL_54
0x400d1e1	        0x488d7801	                      lea rdi, [rax + 1]	      4410	eval.c	FUNCTION_71	ELSE_1	CALL_25
0x400d1e5	      0xe800000000	                          call 0x400d1ea	      4410	eval.c	FUNCTION_71	ELSE_1	CALL_25
0x400d1ea	        0x49894500	                    mov qword [r13], rax	      4410	eval.c	FUNCTION_71	ELSE_1	CALL_25
0x400d1ee	      0xe935f5ffff	                           jmp 0x400c728	      4410	eval.c	FUNCTION_71	ELSE_1	CALL_25
0x400d1f3	          0x4531c0	                            xor r8d, r8d	      4421	eval.c	FUNCTION_71	IF_19	IF_21
0x400d1f6	      0xe92cfbffff	                           jmp 0x400cd27	      4421	eval.c	FUNCTION_71	IF_19	IF_21
0x400d1fb	          0x4531e4	                          xor r12d, r12d	      4378	eval.c	FUNCTION_71	ELSE_1	IF_10
0x400d1fe	      0xe923faffff	                           jmp 0x400cc26	      4378	eval.c	FUNCTION_71	ELSE_1	IF_10
0x400d203	          0x4531e4	                          xor r12d, r12d	      4309	eval.c	FUNCTION_71
0x400d206	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      4306	eval.c	FUNCTION_71
0x400d20d	      0xba01000000	                              mov edx, 1	      4416	eval.c	FUNCTION_71	IF_19	IF_20
0x400d212	      0xe9c8f7ffff	                           jmp 0x400c9df	      4416	eval.c	FUNCTION_71	IF_19	IF_20
0x400d217	          0x880424	                      mov byte [rsp], al	      4556	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_45
0x400d21a	      0xe9cbfeffff	                           jmp 0x400d0ea	      4556	eval.c	FUNCTION_71	IF_19	SWITCH_2	IF_45
0x400d21f	          0x4585e4	                         test r12d, r12d	      4393	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_5	IF_14	IF_15
0x400d222	     0xf8580faffff	                           jne 0x400cca8	      4393	eval.c	FUNCTION_71	ELSE_1	IF_10	ELSE_5	IF_14	IF_15
0x400d228	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      4405	eval.c	FUNCTION_71	ELSE_1	IF_16	CALL_23
0x400d22d	      0xe800000000	                          call 0x400d232	      4405	eval.c	FUNCTION_71	ELSE_1	IF_16	CALL_23
0x400d232	      0xe971faffff	                           jmp 0x400cca8	      4405	eval.c	FUNCTION_71	ELSE_1	IF_16	CALL_23
0x400d237	      0xe800000000	                          call 0x400d23c	      6808	eval.c	FUNCTION_118
del_menutrans_vars	functions,0:SWITCH,0:IF,2:DO,0:ELSE,0:WHILE,0:CALL,6:FOR,1	45
0x4003620	            0x4154	                                push r12	      3070	eval.c	FUNCTION_59
0x4003622	              0x55	                                push rbp	      3070	eval.c	FUNCTION_59
0x4003623	      0xbf00000000	                              mov edi, 0	      3074	eval.c	FUNCTION_59	CALL_1
0x4003628	              0x53	                                push rbx	      3070	eval.c	FUNCTION_59
0x4003629	      0xe800000000	                          call 0x400362e	      3074	eval.c	FUNCTION_59	CALL_1
0x400362e	    0x488b05000000	            mov rax, qword [0x04003635] 	      3075	eval.c	FUNCTION_59
0x4003635	    0x488b1d000000	            mov rbx, qword [0x0400363c] 	      3076	eval.c	FUNCTION_59	FOR_1
0x400363c	            0x85c0	                           test eax, eax	      3076	eval.c	FUNCTION_59	FOR_1
0x400363e	            0x89c5	                            mov ebp, eax	      3076	eval.c	FUNCTION_59	FOR_1
0x4003640	            0x7e3f	                           jle 0x4003681	      3076	eval.c	FUNCTION_59	FOR_1
0x4003642	    0x660f1f440000	                    nop word [rax + rax]	      3076	eval.c	FUNCTION_59	FOR_1
0x4003648	    0x8b0500000000	            mov eax, dword [0x0400364e] 	      3076	eval.c	FUNCTION_59	FOR_1
0x400364e	            0x85c0	                           test eax, eax	      3076	eval.c	FUNCTION_59	FOR_1
0x4003650	            0x752f	                           jne 0x4003681	      3076	eval.c	FUNCTION_59	FOR_1
0x4003652	        0x488b7308	                mov rsi, qword [rbx + 8]	      3078	eval.c	FUNCTION_59	FOR_1	IF_1	CALL_2
0x4003656	    0x4881fe000000	                              cmp rsi, 0	      3078	eval.c	FUNCTION_59	FOR_1	IF_1	CALL_2
0x400365d	            0x7451	                            je 0x40036b0	      3078	eval.c	FUNCTION_59	FOR_1	IF_1	CALL_2
0x400365f	          0x4885f6	                           test rsi, rsi	      3078	eval.c	FUNCTION_59	FOR_1	IF_1	CALL_2
0x4003662	            0x744c	                            je 0x40036b0	      3078	eval.c	FUNCTION_59	FOR_1	IF_1	CALL_2
0x4003664	      0xbf00000000	                              mov edi, 0	      3081	eval.c	FUNCTION_59	FOR_1	IF_1	IF_2	CALL_4
0x4003669	      0xb90a000000	                            mov ecx, 0xa	      3081	eval.c	FUNCTION_59	FOR_1	IF_1	IF_2	CALL_4
0x400366e	          0x83ed01	                              sub ebp, 1	      3080	eval.c	FUNCTION_59	FOR_1	IF_1
0x4003671	        0x4c8d66ef	                   lea r12, [rsi - 0x11]	      3081	eval.c	FUNCTION_59	FOR_1	IF_1	IF_2	CALL_4
0x4003675	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3081	eval.c	FUNCTION_59	FOR_1	IF_1	IF_2	CALL_4
0x4003677	            0x7417	                            je 0x4003690	      3081	eval.c	FUNCTION_59	FOR_1	IF_1	IF_2	CALL_4
0x4003679	        0x4883c310	                           add rbx, 0x10	      3076	eval.c	FUNCTION_59	FOR_1
0x400367d	            0x85ed	                           test ebp, ebp	      3076	eval.c	FUNCTION_59	FOR_1
0x400367f	            0x75c7	                           jne 0x4003648	      3076	eval.c	FUNCTION_59	FOR_1
0x4003681	              0x5b	                                 pop rbx	      3086	eval.c	FUNCTION_59
0x4003682	              0x5d	                                 pop rbp	      3086	eval.c	FUNCTION_59
0x4003683	            0x415c	                                 pop r12	      3086	eval.c	FUNCTION_59
0x4003685	      0xbf00000000	                              mov edi, 0	      3085	eval.c	FUNCTION_59	CALL_6
0x400368a	      0xe900000000	                           jmp 0x400368f	      3085	eval.c	FUNCTION_59	CALL_6
0x400368f	              0x90	                                     nop	      3085	eval.c	FUNCTION_59	CALL_6
0x4003690	          0x4889de	                            mov rsi, rbx	      7449	eval.c	FUNCTION_140	CALL_2
0x4003693	      0xbf00000000	                              mov edi, 0	      7449	eval.c	FUNCTION_140	CALL_2
0x4003698	      0xe800000000	                          call 0x400369d	      7449	eval.c	FUNCTION_140	CALL_2
0x400369d	          0x4c89e7	                            mov rdi, r12	      7450	eval.c	FUNCTION_140	CALL_3
0x40036a0	      0xe800000000	                          call 0x40036a5	      7450	eval.c	FUNCTION_140	CALL_3
0x40036a5	          0x4c89e7	                            mov rdi, r12	      7451	eval.c	FUNCTION_140	CALL_4
0x40036a8	      0xe800000000	                          call 0x40036ad	      7451	eval.c	FUNCTION_140	CALL_4
0x40036ad	            0xebca	                           jmp 0x4003679	      7451	eval.c	FUNCTION_140	CALL_4
0x40036af	              0x90	                                     nop	      7451	eval.c	FUNCTION_140	CALL_4
0x40036b0	        0x4883c310	                           add rbx, 0x10	      3076	eval.c	FUNCTION_59	FOR_1
0x40036b4	            0xeb92	                           jmp 0x4003648	      3076	eval.c	FUNCTION_59	FOR_1
eval_printexpr	functions,0:SWITCH,0:IF,2:DO,0:ELSE,0:WHILE,0:CALL,6:FOR,0	97
0x4012320	              0x55	                                push rbp	       606	eval.c	FUNCTION_10
0x4012321	              0x53	                                push rbx	       606	eval.c	FUNCTION_10
0x4012322	          0x4889fb	                            mov rbx, rdi	       606	eval.c	FUNCTION_10
0x4012325	      0xbf00000000	                              mov edi, 0	      6473	eval.c	FUNCTION_109	CALL_1
0x401232a	          0x4889f5	                            mov rbp, rsi	       606	eval.c	FUNCTION_10
0x401232d	        0x4883ec38	                           sub rsp, 0x38	       606	eval.c	FUNCTION_10
0x4012331	    0x64488b042528	                mov rax, qword fs:[0x28]	       606	eval.c	FUNCTION_10
0x401233a	      0x4889442428	             mov qword [rsp + 0x28], rax	       606	eval.c	FUNCTION_10
0x401233f	            0x31c0	                            xor eax, eax	       606	eval.c	FUNCTION_10
0x4012341	    0xc74424040000	                  mov dword [rsp + 4], 0	       607	eval.c	FUNCTION_10
0x4012349	      0xe800000000	                          call 0x401234e	      6473	eval.c	FUNCTION_109	CALL_1
0x401234e	          0x4885db	                           test rbx, rbx	      6475	eval.c	FUNCTION_109	IF_1
0x4012351	    0xc70500000000	               mov dword [0x0401235b], 2	      6474	eval.c	FUNCTION_109
0x401235b	     0xf848f010000	                            je 0x40124f0	      6475	eval.c	FUNCTION_109	IF_1
0x4012361	          0x4889df	                            mov rdi, rbx	      6478	eval.c	FUNCTION_109	ELSE_1	IF_2
0x4012364	      0xe800000000	                          call 0x4012369	      6478	eval.c	FUNCTION_109	ELSE_1	IF_2
0x4012369	    0x488905000000	            mov qword [0x04012370], rax 	      6478	eval.c	FUNCTION_109	ELSE_1	IF_2
0x4012370	      0xbf00000000	                              mov edi, 0	      6473	eval.c	FUNCTION_109	CALL_1
0x4012375	      0xe800000000	                          call 0x401237a	      6473	eval.c	FUNCTION_109	CALL_1
0x401237a	          0x4885ed	                           test rbp, rbp	      6475	eval.c	FUNCTION_109	IF_1
0x401237d	    0xc70500000000	               mov dword [0x04012387], 2	      6474	eval.c	FUNCTION_109
0x4012387	     0xf8453010000	                            je 0x40124e0	      6475	eval.c	FUNCTION_109	IF_1
0x401238d	          0x4889ef	                            mov rdi, rbp	      6478	eval.c	FUNCTION_109	ELSE_1	IF_2
0x4012390	      0xe800000000	                          call 0x4012395	      6478	eval.c	FUNCTION_109	ELSE_1	IF_2
0x4012395	    0x488905000000	            mov qword [0x0401239c], rax 	      6478	eval.c	FUNCTION_109	ELSE_1	IF_2
0x401239c	    0x488b2d000000	            mov rbp, qword [0x040123a3] 	       611	eval.c	FUNCTION_10	IF_1	CALL_3
0x40123a3	          0x4889ef	                            mov rdi, rbp	      3262	eval.c	FUNCTION_63	CALL_1
0x40123a6	      0xe800000000	                          call 0x40123ab	      3262	eval.c	FUNCTION_63	CALL_1
0x40123ab	      0x488d742410	                   lea rsi, [rsp + 0x10]	      3263	eval.c	FUNCTION_63	CALL_2
0x40123b0	      0x488d7c2408	                      lea rdi, [rsp + 8]	      3263	eval.c	FUNCTION_63	CALL_2
0x40123b5	      0xba01000000	                              mov edx, 1	      3263	eval.c	FUNCTION_63	CALL_2
0x40123ba	      0x4889442408	                mov qword [rsp + 8], rax	      3262	eval.c	FUNCTION_63	CALL_1
0x40123bf	      0xe800000000	                          call 0x40123c4	      3263	eval.c	FUNCTION_63	CALL_2
0x40123c4	            0x85c0	                           test eax, eax	      3264	eval.c	FUNCTION_63	IF_1	CALL_3
0x40123c6	     0xf858c000000	                           jne 0x4012458	      3264	eval.c	FUNCTION_63	IF_1	CALL_3
0x40123cc	      0xe800000000	                          call 0x40123d1	      3273	eval.c	FUNCTION_63	IF_1	IF_3	CALL_5
0x40123d1	            0x85c0	                           test eax, eax	      3273	eval.c	FUNCTION_63	IF_1	IF_3	CALL_5
0x40123d3	     0xf84a7000000	                            je 0x4012480	      3273	eval.c	FUNCTION_63	IF_1	IF_3	CALL_5
0x40123d9	    0xc74424040100	                  mov dword [rsp + 4], 1	       612	eval.c	FUNCTION_10	IF_1
0x40123e1	      0xbf00000000	                              mov edi, 0	      6473	eval.c	FUNCTION_109	CALL_1
0x40123e6	      0xe800000000	                          call 0x40123eb	      6473	eval.c	FUNCTION_109	CALL_1
0x40123eb	      0xbf00000000	                              mov edi, 0	      6473	eval.c	FUNCTION_109	CALL_1
0x40123f0	    0xc70500000000	               mov dword [0x040123fa], 2	      6474	eval.c	FUNCTION_109
0x40123fa	    0x48c705000000	               mov qword [0x04012405], 0	      6476	eval.c	FUNCTION_109	IF_1
0x4012405	      0xe800000000	                          call 0x401240a	      6473	eval.c	FUNCTION_109	CALL_1
0x401240a	        0x8b542404	                mov edx, dword [rsp + 4]	       616	eval.c	FUNCTION_10	IF_2
0x401240e	    0xc70500000000	               mov dword [0x04012418], 2	      6474	eval.c	FUNCTION_109
0x4012418	      0xb801000000	                              mov eax, 1	       621	eval.c	FUNCTION_10
0x401241d	    0x48c705000000	               mov qword [0x04012428], 0	      6476	eval.c	FUNCTION_109	IF_1
0x4012428	            0x85d2	                           test edx, edx	       616	eval.c	FUNCTION_10	IF_2
0x401242a	            0x740a	                            je 0x4012436	       616	eval.c	FUNCTION_10	IF_2
0x401242c	          0x4889df	                            mov rdi, rbx	       618	eval.c	FUNCTION_10	IF_2	CALL_6
0x401242f	      0xe800000000	                          call 0x4012434	       618	eval.c	FUNCTION_10	IF_2	CALL_6
0x4012434	            0x31c0	                            xor eax, eax	       619	eval.c	FUNCTION_10	IF_2
0x4012436	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       622	eval.c	FUNCTION_10
0x401243b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       622	eval.c	FUNCTION_10
0x4012444	     0xf85b6000000	                           jne 0x4012500	       622	eval.c	FUNCTION_10
0x401244a	        0x4883c438	                           add rsp, 0x38	       622	eval.c	FUNCTION_10
0x401244e	              0x5b	                                 pop rbx	       622	eval.c	FUNCTION_10
0x401244f	              0x5d	                                 pop rbp	       622	eval.c	FUNCTION_10
0x4012450	              0xc3	                                     ret	       622	eval.c	FUNCTION_10
0x4012451	     0xf1f80000000	                         nop dword [rax]	       622	eval.c	FUNCTION_10
0x4012458	      0x488b442408	                mov rax, qword [rsp + 8]	      3264	eval.c	FUNCTION_63	IF_1	CALL_3
0x401245d	           0xfb638	                   movzx edi, byte [rax]	      3264	eval.c	FUNCTION_63	IF_1	CALL_3
0x4012460	      0xe800000000	                          call 0x4012465	      3264	eval.c	FUNCTION_63	IF_1	CALL_3
0x4012465	            0x85c0	                           test eax, eax	      3264	eval.c	FUNCTION_63	IF_1	CALL_3
0x4012467	            0x753f	                           jne 0x40124a8	      3264	eval.c	FUNCTION_63	IF_1	CALL_3
0x4012469	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      3267	eval.c	FUNCTION_63	IF_1	CALL_4
0x401246e	      0xe800000000	                          call 0x4012473	      3267	eval.c	FUNCTION_63	IF_1	CALL_4
0x4012473	      0xe800000000	                          call 0x4012478	      3273	eval.c	FUNCTION_63	IF_1	IF_3	CALL_5
0x4012478	            0x85c0	                           test eax, eax	      3273	eval.c	FUNCTION_63	IF_1	IF_3	CALL_5
0x401247a	     0xf8559ffffff	                           jne 0x40123d9	      3273	eval.c	FUNCTION_63	IF_1	IF_3	CALL_5
0x4012480	            0x31ff	                            xor edi, edi	      3274	eval.c	FUNCTION_63	IF_1	CALL_7
0x4012482	      0xba05000000	                              mov edx, 5	      3274	eval.c	FUNCTION_63	IF_1	CALL_7
0x4012487	      0xbe00000000	                              mov esi, 0	      3274	eval.c	FUNCTION_63	IF_1	CALL_7
0x401248c	      0xe800000000	                          call 0x4012491	      3274	eval.c	FUNCTION_63	IF_1	CALL_7
0x4012491	          0x4889ee	                            mov rsi, rbp	      3274	eval.c	FUNCTION_63	IF_1	CALL_7
0x4012494	          0x4889c7	                            mov rdi, rax	      3274	eval.c	FUNCTION_63	IF_1	CALL_7
0x4012497	      0xe800000000	                          call 0x401249c	      3274	eval.c	FUNCTION_63	IF_1	CALL_7
0x401249c	      0xe938ffffff	                           jmp 0x40123d9	      3274	eval.c	FUNCTION_63	IF_1	CALL_7
0x40124a1	     0xf1f80000000	                         nop dword [rax]	      3274	eval.c	FUNCTION_63	IF_1	CALL_7
0x40124a8	      0x488d742404	                      lea rsi, [rsp + 4]	       685	eval.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x40124ad	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       685	eval.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x40124b2	    0xc74424040000	                  mov dword [rsp + 4], 0	       682	eval.c	FUNCTION_13	ELSE_1
0x40124ba	      0xe800000000	                          call 0x40124bf	       685	eval.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x40124bf	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       686	eval.c	FUNCTION_13	ELSE_1	IF_3	CALL_3
0x40124c4	          0x4889c5	                            mov rbp, rax	       685	eval.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x40124c7	      0xe800000000	                          call 0x40124cc	       686	eval.c	FUNCTION_13	ELSE_1	IF_3	CALL_3
0x40124cc	          0x4885ed	                           test rbp, rbp	       611	eval.c	FUNCTION_10	IF_1	CALL_3
0x40124cf	     0xf8504ffffff	                           jne 0x40123d9	       611	eval.c	FUNCTION_10	IF_1	CALL_3
0x40124d5	      0xe907ffffff	                           jmp 0x40123e1	       611	eval.c	FUNCTION_10	IF_1	CALL_3
0x40124da	    0x660f1f440000	                    nop word [rax + rax]	       611	eval.c	FUNCTION_10	IF_1	CALL_3
0x40124e0	    0x48c705000000	               mov qword [0x040124eb], 0	      6476	eval.c	FUNCTION_109	IF_1
0x40124eb	      0xe9acfeffff	                           jmp 0x401239c	      6476	eval.c	FUNCTION_109	IF_1
0x40124f0	    0x48c705000000	               mov qword [0x040124fb], 0	      6476	eval.c	FUNCTION_109	IF_1
0x40124fb	      0xe970feffff	                           jmp 0x4012370	      6476	eval.c	FUNCTION_109	IF_1
0x4012500	      0xe800000000	                          call 0x4012505	       622	eval.c	FUNCTION_10
var_redir_str	functions,0:SWITCH,0:IF,3:DO,0:ELSE,2:WHILE,0:CALL,4:FOR,0	33
0x4011080	    0x48833d000000	               cmp qword [0x04011088], 0	       519	eval.c	FUNCTION_7	IF_1
0x4011088	            0x746b	                            je 0x40110f5	       519	eval.c	FUNCTION_7	IF_1
0x401108a	              0x55	                                push rbp	       516	eval.c	FUNCTION_7
0x401108b	              0x53	                                push rbx	       516	eval.c	FUNCTION_7
0x401108c	          0x4889fd	                            mov rbp, rdi	       516	eval.c	FUNCTION_7
0x401108f	            0x89f3	                            mov ebx, esi	       516	eval.c	FUNCTION_7
0x4011091	        0x4883ec08	                              sub rsp, 8	       516	eval.c	FUNCTION_7
0x4011095	          0x83feff	             cmp esi, 0xffffffffffffffff	       522	eval.c	FUNCTION_7	IF_2
0x4011098	            0x7426	                            je 0x40110c0	       522	eval.c	FUNCTION_7	IF_2
0x401109a	            0x89de	                            mov esi, ebx	       527	eval.c	FUNCTION_7	ELSE_1	IF_3	CALL_2
0x401109c	      0xbf00000000	                              mov edi, 0	       527	eval.c	FUNCTION_7	ELSE_1	IF_3	CALL_2
0x40110a1	      0xe800000000	                          call 0x40110a6	       527	eval.c	FUNCTION_7	ELSE_1	IF_3	CALL_2
0x40110a6	          0x83f801	                              cmp eax, 1	       527	eval.c	FUNCTION_7	ELSE_1	IF_3	CALL_2
0x40110a9	            0x7425	                            je 0x40110d0	       527	eval.c	FUNCTION_7	ELSE_1	IF_3	CALL_2
0x40110ab	        0x4883c408	                              add rsp, 8	       534	eval.c	FUNCTION_7
0x40110af	              0x5b	                                 pop rbx	       534	eval.c	FUNCTION_7
0x40110b0	              0x5d	                                 pop rbp	       534	eval.c	FUNCTION_7
0x40110b1	      0xe96afeffff	                  jmp sym.var_redir_stop	       533	eval.c	FUNCTION_7	CALL_4
0x40110b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       533	eval.c	FUNCTION_7	CALL_4
0x40110c0	      0xe800000000	                          call 0x40110c5	       523	eval.c	FUNCTION_7	CALL_1
0x40110c5	            0x89c3	                            mov ebx, eax	       523	eval.c	FUNCTION_7	CALL_1
0x40110c7	            0xebd1	                           jmp 0x401109a	       523	eval.c	FUNCTION_7	CALL_1
0x40110c9	     0xf1f80000000	                         nop dword [rax]	       523	eval.c	FUNCTION_7	CALL_1
0x40110d0	    0x48633d000000	         movsxd rdi, dword [0x040110d7] 	        59	string3.h	FUNCTION_192	CALL_3
0x40110d7	          0x4863d3	                         movsxd rdx, ebx	        59	string3.h	FUNCTION_192	CALL_3
0x40110da	          0x4889ee	                            mov rsi, rbp	        59	string3.h	FUNCTION_192	CALL_3
0x40110dd	    0x48033d000000	             add rdi, qword [0x040110e4]	        59	string3.h	FUNCTION_192	CALL_3
0x40110e4	      0xe800000000	                          call 0x40110e9	        59	string3.h	FUNCTION_192	CALL_3
0x40110e9	     0x11d00000000	             add dword [0x040110ef], ebx	       530	eval.c	FUNCTION_7	ELSE_1	IF_3
0x40110ef	        0x4883c408	                              add rsp, 8	       534	eval.c	FUNCTION_7
0x40110f3	              0x5b	                                 pop rbx	       534	eval.c	FUNCTION_7
0x40110f4	              0x5d	                                 pop rbp	       534	eval.c	FUNCTION_7
0x40110f5	            0xf3c3	                                     ret	       534	eval.c	FUNCTION_7
setwinvar	functions,0:SWITCH,0:IF,8:DO,0:ELSE,2:WHILE,0:CALL,17:FOR,0	153
0x4006ac0	            0x4156	                                push r14	      8361	eval.c	FUNCTION_158
0x4006ac2	            0x4155	                                push r13	      8361	eval.c	FUNCTION_158
0x4006ac4	            0x4154	                                push r12	      8361	eval.c	FUNCTION_158
0x4006ac6	              0x55	                                push rbp	      8361	eval.c	FUNCTION_158
0x4006ac7	          0x4989fc	                            mov r12, rdi	      8361	eval.c	FUNCTION_158
0x4006aca	              0x53	                                push rbx	      8361	eval.c	FUNCTION_158
0x4006acb	            0x89d3	                            mov ebx, edx	      8361	eval.c	FUNCTION_158
0x4006acd	        0x4883ec70	                           sub rsp, 0x70	      8361	eval.c	FUNCTION_158
0x4006ad1	    0x64488b042528	                mov rax, qword fs:[0x28]	      8361	eval.c	FUNCTION_158
0x4006ada	      0x4889442468	             mov qword [rsp + 0x68], rax	      8361	eval.c	FUNCTION_158
0x4006adf	            0x31c0	                            xor eax, eax	      8361	eval.c	FUNCTION_158
0x4006ae1	      0xe800000000	                          call 0x4006ae6	      8371	eval.c	FUNCTION_158	IF_1	CALL_2
0x4006ae6	            0x85c0	                           test eax, eax	      8371	eval.c	FUNCTION_158	IF_1	CALL_2
0x4006ae8	            0x7426	                            je 0x4006b10	      8371	eval.c	FUNCTION_158	IF_1	CALL_2
0x4006aea	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      8415	eval.c	FUNCTION_158
0x4006aef	    0x644833042528	                xor rax, qword fs:[0x28]	      8415	eval.c	FUNCTION_158
0x4006af8	     0xf851f020000	                           jne 0x4006d1d	      8415	eval.c	FUNCTION_158
0x4006afe	        0x4883c470	                           add rsp, 0x70	      8415	eval.c	FUNCTION_158
0x4006b02	              0x5b	                                 pop rbx	      8415	eval.c	FUNCTION_158
0x4006b03	              0x5d	                                 pop rbp	      8415	eval.c	FUNCTION_158
0x4006b04	            0x415c	                                 pop r12	      8415	eval.c	FUNCTION_158
0x4006b06	            0x415d	                                 pop r13	      8415	eval.c	FUNCTION_158
0x4006b08	            0x415e	                                 pop r14	      8415	eval.c	FUNCTION_158
0x4006b0a	              0xc3	                                     ret	      8415	eval.c	FUNCTION_158
0x4006b0b	       0xf1f440000	                   nop dword [rax + rax]	      8415	eval.c	FUNCTION_158
0x4006b10	      0xe800000000	                          call 0x4006b15	      8371	eval.c	FUNCTION_158	IF_1	CALL_2
0x4006b15	            0x85c0	                           test eax, eax	      8371	eval.c	FUNCTION_158	IF_1	CALL_2
0x4006b17	            0x75d1	                           jne 0x4006aea	      8371	eval.c	FUNCTION_158	IF_1	CALL_2
0x4006b19	          0x83fb01	                              cmp ebx, 1	      8374	eval.c	FUNCTION_158	IF_2
0x4006b1c	    0x4c8b2d000000	            mov r13, qword [0x04006b23] 	      8377	eval.c	FUNCTION_158	ELSE_1
0x4006b23	     0xf8477010000	                            je 0x4006ca0	      8374	eval.c	FUNCTION_158	IF_2
0x4006b29	          0x4863eb	                         movsxd rbp, ebx	      8378	eval.c	FUNCTION_158	CALL_5
0x4006b2c	            0x31f6	                            xor esi, esi	      8221	eval.c	FUNCTION_155	CALL_1
0x4006b2e	        0x48c1e504	                              shl rbp, 4	      8378	eval.c	FUNCTION_158	CALL_5
0x4006b32	        0x498d3c2c	                    lea rdi, [r12 + rbp]	      8221	eval.c	FUNCTION_155	CALL_1
0x4006b36	      0xe800000000	                          call 0x4006b3b	      8221	eval.c	FUNCTION_155	CALL_1
0x4006b3b	            0x85c0	                           test eax, eax	      8223	eval.c	FUNCTION_155	IF_1
0x4006b3d	            0x89c6	                            mov esi, eax	      8221	eval.c	FUNCTION_155	CALL_1
0x4006b3f	     0xf88cb000000	                            js 0x4006c10	      8223	eval.c	FUNCTION_155	IF_1
0x4006b45	    0x488b1d000000	            mov rbx, qword [0x04006b4c] 	      8226	eval.c	FUNCTION_155	IF_2
0x4006b4c	            0x7445	                            je 0x4006b93	      8225	eval.c	FUNCTION_155	IF_2
0x4006b4e	          0x4d85ed	                           test r13, r13	      8228	eval.c	FUNCTION_155
0x4006b51	     0xf84d1000000	                            je 0x4006c28	      8228	eval.c	FUNCTION_155
0x4006b57	    0x4c3b2d000000	            cmp r13, qword [0x04006b5e] 	      8228	eval.c	FUNCTION_155
0x4006b5e	     0xf84c4000000	                            je 0x4006c28	      8228	eval.c	FUNCTION_155
0x4006b64	        0x498b5520	            mov rdx, qword [r13 + 0x20] 	      8228	eval.c	FUNCTION_155
0x4006b68	            0xeb0e	                           jmp 0x4006b78	      8228	eval.c	FUNCTION_155
0x4006b6a	    0x660f1f440000	                    nop word [rax + rax]	      8228	eval.c	FUNCTION_155
0x4006b70	            0x3932	                    cmp dword [rdx], esi	      8232	eval.c	FUNCTION_155	FUNCTION_1	IF_1	IF_2
0x4006b72	            0x741c	                            je 0x4006b90	      8232	eval.c	FUNCTION_155	FUNCTION_1	IF_1	IF_2
0x4006b74	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      8228	eval.c	FUNCTION_155
0x4006b78	          0x4885d2	                           test rdx, rdx	      8228	eval.c	FUNCTION_155
0x4006b7b	     0xf848f000000	                            je 0x4006c10	      8228	eval.c	FUNCTION_155
0x4006b81	    0x81fee7030000	                          cmp esi, 0x3e7	      8230	eval.c	FUNCTION_155	FUNCTION_1	IF_1
0x4006b87	            0x7fe7	                            jg 0x4006b70	      8230	eval.c	FUNCTION_155	FUNCTION_1	IF_1
0x4006b89	          0x83ee01	                              sub esi, 1	      8235	eval.c	FUNCTION_155	FUNCTION_1	ELSE_1	IF_3
0x4006b8c	            0x85f6	                           test esi, esi	      8235	eval.c	FUNCTION_155	FUNCTION_1	ELSE_1	IF_3
0x4006b8e	            0x7fe4	                            jg 0x4006b74	      8235	eval.c	FUNCTION_155	FUNCTION_1	ELSE_1	IF_3
0x4006b90	          0x4889d3	                            mov rbx, rdx	      8235	eval.c	FUNCTION_155	FUNCTION_1	ELSE_1	IF_3
0x4006b93	      0x498d7c2c10	            lea rdi, [r12 + rbp + 0x10] 	      7098	eval.c	FUNCTION_129	CALL_1
0x4006b98	      0xbe00000000	                              mov esi, 0	      7098	eval.c	FUNCTION_129	CALL_1
0x4006b9d	      0x498d6c2c20	            lea rbp, [r12 + rbp + 0x20] 	      8380	eval.c	FUNCTION_158
0x4006ba2	      0xe800000000	                          call 0x4006ba7	      7098	eval.c	FUNCTION_129	CALL_1
0x4006ba7	          0x4885db	                           test rbx, rbx	      8382	eval.c	FUNCTION_158	IF_3
0x4006baa	          0x4989c6	                            mov r14, rax	      7098	eval.c	FUNCTION_129	CALL_1
0x4006bad	           0xf95c2	                                setne dl	      8382	eval.c	FUNCTION_158	IF_3
0x4006bb0	          0x4885c0	                           test rax, rax	      8382	eval.c	FUNCTION_158	IF_3
0x4006bb3	           0xf95c0	                                setne al	      8382	eval.c	FUNCTION_158	IF_3
0x4006bb6	            0x84c2	                             test dl, al	      8382	eval.c	FUNCTION_158	IF_3
0x4006bb8	     0xf842cffffff	                            je 0x4006aea	      8382	eval.c	FUNCTION_158	IF_3
0x4006bbe	          0x4885ed	                           test rbp, rbp	      8382	eval.c	FUNCTION_158	IF_3
0x4006bc1	     0xf8423ffffff	                            je 0x4006aea	      8382	eval.c	FUNCTION_158	IF_3
0x4006bc7	    0x4c3b2d000000	            cmp r13, qword [0x04006bce] 	      8384	eval.c	FUNCTION_158	IF_3
0x4006bce	     0xf8434010000	                            je 0x4006d08	      8384	eval.c	FUNCTION_158	IF_3
0x4006bd4	      0x488d742418	                   lea rsi, [rsp + 0x18]	      8386	eval.c	FUNCTION_158	IF_3	IF_4	CALL_7
0x4006bd9	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      8386	eval.c	FUNCTION_158	IF_3	IF_4	CALL_7
0x4006bde	    0x41b801000000	                              mov r8d, 1	      8386	eval.c	FUNCTION_158	IF_3	IF_4	CALL_7
0x4006be4	          0x4c89e9	                            mov rcx, r13	      8386	eval.c	FUNCTION_158	IF_3	IF_4	CALL_7
0x4006be7	          0x4889da	                            mov rdx, rbx	      8386	eval.c	FUNCTION_158	IF_3	IF_4	CALL_7
0x4006bea	      0xe800000000	                          call 0x4006bef	      8386	eval.c	FUNCTION_158	IF_3	IF_4	CALL_7
0x4006bef	          0x83f801	                              cmp eax, 1	      8386	eval.c	FUNCTION_158	IF_3	IF_4	CALL_7
0x4006bf2	            0x7444	                            je 0x4006c38	      8386	eval.c	FUNCTION_158	IF_3	IF_4	CALL_7
0x4006bf4	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      8413	eval.c	FUNCTION_158	IF_3	CALL_17
0x4006bf9	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      8413	eval.c	FUNCTION_158	IF_3	CALL_17
0x4006bfe	      0xba01000000	                              mov edx, 1	      8413	eval.c	FUNCTION_158	IF_3	CALL_17
0x4006c03	      0xe800000000	                          call 0x4006c08	      8413	eval.c	FUNCTION_158	IF_3	CALL_17
0x4006c08	      0xe9ddfeffff	                           jmp 0x4006aea	      8413	eval.c	FUNCTION_158	IF_3	CALL_17
0x4006c0d	           0xf1f00	                         nop dword [rax]	      8413	eval.c	FUNCTION_158	IF_3	CALL_17
0x4006c10	      0x498d7c2c10	            lea rdi, [r12 + rbp + 0x10] 	      7098	eval.c	FUNCTION_129	CALL_1
0x4006c15	      0xbe00000000	                              mov esi, 0	      7098	eval.c	FUNCTION_129	CALL_1
0x4006c1a	      0xe800000000	                          call 0x4006c1f	      7098	eval.c	FUNCTION_129	CALL_1
0x4006c1f	      0xe9c6feffff	                           jmp 0x4006aea	      7098	eval.c	FUNCTION_129	CALL_1
0x4006c24	         0xf1f4000	                         nop dword [rax]	      7098	eval.c	FUNCTION_129	CALL_1
0x4006c28	    0x488b15000000	            mov rdx, qword [0x04006c2f] 	      8228	eval.c	FUNCTION_155
0x4006c2f	      0xe944ffffff	                           jmp 0x4006b78	      8228	eval.c	FUNCTION_155
0x4006c34	         0xf1f4000	                         nop dword [rax]	      8228	eval.c	FUNCTION_155
0x4006c38	    0x41bc01000000	                             mov r12d, 1	      8228	eval.c	FUNCTION_155
0x4006c3e	        0x41803e26	                    cmp byte [r14], 0x26	      8388	eval.c	FUNCTION_158	IF_3	IF_4	IF_5
0x4006c42	            0x747c	                            je 0x4006cc0	      8388	eval.c	FUNCTION_158	IF_3	IF_4	IF_5
0x4006c44	          0x4c89f7	                            mov rdi, r14	      8402	eval.c	FUNCTION_158	IF_3	IF_4	ELSE_2	CALL_12
0x4006c47	      0xe800000000	                          call 0x4006c4c	      8402	eval.c	FUNCTION_158	IF_3	IF_4	ELSE_2	CALL_12
0x4006c4c	          0x8d7803	                      lea edi, [rax + 3]	      8402	eval.c	FUNCTION_158	IF_3	IF_4	ELSE_2	CALL_12
0x4006c4f	      0xe800000000	                          call 0x4006c54	      8402	eval.c	FUNCTION_158	IF_3	IF_4	ELSE_2	CALL_12
0x4006c54	          0x4885c0	                           test rax, rax	      8403	eval.c	FUNCTION_158	IF_3	IF_4	ELSE_2	IF_7
0x4006c57	          0x4889c3	                            mov rbx, rax	      8402	eval.c	FUNCTION_158	IF_3	IF_4	ELSE_2	CALL_12
0x4006c5a	            0x742c	                            je 0x4006c88	      8403	eval.c	FUNCTION_158	IF_3	IF_4	ELSE_2	IF_7
0x4006c5c	      0xb8773a0000	                         mov eax, 0x3a77	       110	string3.h	FUNCTION_197	CALL_3
0x4006c61	        0x488d7b02	                      lea rdi, [rbx + 2]	       110	string3.h	FUNCTION_197	CALL_3
0x4006c65	          0x4c89f6	                            mov rsi, r14	       110	string3.h	FUNCTION_197	CALL_3
0x4006c68	          0x668903	                      mov word [rbx], ax	       110	string3.h	FUNCTION_197	CALL_3
0x4006c6b	      0xe800000000	                          call 0x4006c70	       110	string3.h	FUNCTION_197	CALL_3
0x4006c70	          0x4889df	                            mov rdi, rbx	      8407	eval.c	FUNCTION_158	IF_3	IF_4	ELSE_2	IF_7	CALL_15
0x4006c73	      0xba01000000	                              mov edx, 1	      8407	eval.c	FUNCTION_158	IF_3	IF_4	ELSE_2	IF_7	CALL_15
0x4006c78	          0x4889ee	                            mov rsi, rbp	      8407	eval.c	FUNCTION_158	IF_3	IF_4	ELSE_2	IF_7	CALL_15
0x4006c7b	      0xe800000000	                          call 0x4006c80	      8407	eval.c	FUNCTION_158	IF_3	IF_4	ELSE_2	IF_7	CALL_15
0x4006c80	          0x4889df	                            mov rdi, rbx	      8408	eval.c	FUNCTION_158	IF_3	IF_4	ELSE_2	IF_7	CALL_16
0x4006c83	      0xe800000000	                          call 0x4006c88	      8408	eval.c	FUNCTION_158	IF_3	IF_4	ELSE_2	IF_7	CALL_16
0x4006c88	          0x4585e4	                         test r12d, r12d	      8412	eval.c	FUNCTION_158	IF_3	IF_8
0x4006c8b	     0xf8459feffff	                            je 0x4006aea	      8412	eval.c	FUNCTION_158	IF_3	IF_8
0x4006c91	      0xe95effffff	                           jmp 0x4006bf4	      8412	eval.c	FUNCTION_158	IF_3	IF_8
0x4006c96	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      8412	eval.c	FUNCTION_158	IF_3	IF_8
0x4006ca0	            0x31f6	                            xor esi, esi	      8375	eval.c	FUNCTION_158	CALL_4
0x4006ca2	          0x4c89e7	                            mov rdi, r12	      8375	eval.c	FUNCTION_158	CALL_4
0x4006ca5	      0xe800000000	                          call 0x4006caa	      8375	eval.c	FUNCTION_158	CALL_4
0x4006caa	            0x89c7	                            mov edi, eax	      8375	eval.c	FUNCTION_158	CALL_4
0x4006cac	      0xe800000000	                          call 0x4006cb1	      8375	eval.c	FUNCTION_158	CALL_4
0x4006cb1	          0x4989c5	                            mov r13, rax	      8375	eval.c	FUNCTION_158	CALL_4
0x4006cb4	      0xe970feffff	                           jmp 0x4006b29	      8375	eval.c	FUNCTION_158	CALL_4
0x4006cb9	     0xf1f80000000	                         nop dword [rax]	      8375	eval.c	FUNCTION_158	CALL_4
0x4006cc0	      0x488d74240c	                    lea rsi, [rsp + 0xc]	      8395	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	CALL_8
0x4006cc5	          0x4889ef	                            mov rdi, rbp	      8395	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	CALL_8
0x4006cc8	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      8392	eval.c	FUNCTION_158	IF_3	IF_4	IF_5
0x4006cd0	      0xe800000000	                          call 0x4006cd5	      8395	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	CALL_8
0x4006cd5	      0x488d742420	                   lea rsi, [rsp + 0x20]	      8396	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	CALL_9
0x4006cda	          0x4889ef	                            mov rdi, rbp	      8396	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	CALL_9
0x4006cdd	          0x4889c3	                            mov rbx, rax	      8395	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	CALL_8
0x4006ce0	      0xe800000000	                          call 0x4006ce5	      8396	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	CALL_9
0x4006ce5	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      8397	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	IF_6
0x4006ce9	            0x85d2	                           test edx, edx	      8397	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	IF_6
0x4006ceb	            0x759b	                           jne 0x4006c88	      8397	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	IF_6
0x4006ced	          0x4885c0	                           test rax, rax	      8397	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	IF_6
0x4006cf0	            0x7496	                            je 0x4006c88	      8397	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	IF_6
0x4006cf2	        0x498d7e01	                      lea rdi, [r14 + 1]	      8398	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	CALL_10
0x4006cf6	      0xb904000000	                              mov ecx, 4	      8398	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	CALL_10
0x4006cfb	          0x4889c2	                            mov rdx, rax	      8398	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	CALL_10
0x4006cfe	          0x4889de	                            mov rsi, rbx	      8398	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	CALL_10
0x4006d01	      0xe800000000	                          call 0x4006d06	      8398	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	CALL_10
0x4006d06	            0xeb80	                           jmp 0x4006c88	      8398	eval.c	FUNCTION_158	IF_3	IF_4	IF_5	CALL_10
0x4006d08	          0x4531e4	                          xor r12d, r12d	      8384	eval.c	FUNCTION_158	IF_3
0x4006d0b	    0x48391d000000	            cmp qword [0x04006d12], rbx 	      8384	eval.c	FUNCTION_158	IF_3
0x4006d12	     0xf85bcfeffff	                           jne 0x4006bd4	      8384	eval.c	FUNCTION_158	IF_3
0x4006d18	      0xe921ffffff	                           jmp 0x4006c3e	      8384	eval.c	FUNCTION_158	IF_3
0x4006d1d	      0xe800000000	                          call 0x4006d22	      8415	eval.c	FUNCTION_158
new_script_vars	functions,0:SWITCH,0:IF,2:DO,0:ELSE,0:WHILE,1:CALL,3:FOR,1	65
0x4005790	            0x89fe	                            mov esi, edi	      7342	eval.c	FUNCTION_135	IF_1	CALL_1
0x4005792	    0x2b3500000000	             sub esi, dword [0x04005798]	      7342	eval.c	FUNCTION_135	IF_1	CALL_1
0x4005798	            0x4154	                                push r12	      7337	eval.c	FUNCTION_135
0x400579a	              0x55	                                push rbp	      7337	eval.c	FUNCTION_135
0x400579b	              0x53	                                push rbx	      7337	eval.c	FUNCTION_135
0x400579c	            0x89fd	                            mov ebp, edi	      7337	eval.c	FUNCTION_135
0x400579e	      0xbf00000000	                              mov edi, 0	      7342	eval.c	FUNCTION_135	IF_1	CALL_1
0x40057a3	      0xe800000000	                          call 0x40057a8	      7342	eval.c	FUNCTION_135	IF_1	CALL_1
0x40057a8	          0x83f801	                              cmp eax, 1	      7342	eval.c	FUNCTION_135	IF_1	CALL_1
0x40057ab	            0x740b	                            je 0x40057b8	      7342	eval.c	FUNCTION_135	IF_1	CALL_1
0x40057ad	              0x5b	                                 pop rbx	      7364	eval.c	FUNCTION_135
0x40057ae	              0x5d	                                 pop rbp	      7364	eval.c	FUNCTION_135
0x40057af	            0x415c	                                 pop r12	      7364	eval.c	FUNCTION_135
0x40057b1	              0xc3	                                     ret	      7364	eval.c	FUNCTION_135
0x40057b2	    0x660f1f440000	                    nop word [rax + rax]	      7364	eval.c	FUNCTION_135
0x40057b8	    0x8b0500000000	            mov eax, dword [0x040057be] 	      7347	eval.c	FUNCTION_135	IF_1	FOR_1
0x40057be	            0x85c0	                           test eax, eax	      7347	eval.c	FUNCTION_135	IF_1	FOR_1
0x40057c0	     0xf8eb4000000	                           jle 0x400587a	      7347	eval.c	FUNCTION_135	IF_1	FOR_1
0x40057c6	    0x488b0d000000	            mov rcx, qword [0x040057cd] 	      7347	eval.c	FUNCTION_135	IF_1	FOR_1
0x40057cd	          0x8d50ff	                      lea edx, [rax - 1]	      7347	eval.c	FUNCTION_135	IF_1	FOR_1
0x40057d0	      0x488d7cd108	              lea rdi, [rcx + rdx*8 + 8]	      7347	eval.c	FUNCTION_135	IF_1	FOR_1
0x40057d5	            0xeb1e	                           jmp 0x40057f5	      7347	eval.c	FUNCTION_135	IF_1	FOR_1
0x40057d7	    0x660f1f840000	                    nop word [rax + rax]	      7347	eval.c	FUNCTION_135	IF_1	FOR_1
0x40057e0	        0x488d7218	                   lea rsi, [rdx + 0x18]	      7353	eval.c	FUNCTION_135	IF_1	FOR_1
0x40057e4	        0x4883c108	                              add rcx, 8	      7353	eval.c	FUNCTION_135	IF_1	FOR_1
0x40057e8	          0x4839cf	                            cmp rdi, rcx	      7347	eval.c	FUNCTION_135	IF_1	FOR_1
0x40057eb	        0x48897208	                mov qword [rdx + 8], rsi	      7353	eval.c	FUNCTION_135	IF_1	FOR_1
0x40057ef	     0xf8485000000	                            je 0x400587a	      7347	eval.c	FUNCTION_135	IF_1	FOR_1
0x40057f5	          0x488b11	                    mov rdx, qword [rcx]	      7349	eval.c	FUNCTION_135	IF_1	FOR_1
0x40057f8	      0x48837a280f	            cmp qword [rdx + 0x28], 0xf 	      7350	eval.c	FUNCTION_135	IF_1	FOR_1	IF_2
0x40057fd	            0x75e1	                           jne 0x40057e0	      7350	eval.c	FUNCTION_135	IF_1	FOR_1	IF_2
0x40057ff	        0x488d7250	                   lea rsi, [rdx + 0x50]	      7351	eval.c	FUNCTION_135	IF_1	FOR_1	IF_2
0x4005803	        0x48897248	             mov qword [rdx + 0x48], rsi	      7351	eval.c	FUNCTION_135	IF_1	FOR_1	IF_2
0x4005807	          0x488b11	                    mov rdx, qword [rcx]	      7351	eval.c	FUNCTION_135	IF_1	FOR_1	IF_2
0x400580a	            0xebd4	                           jmp 0x40057e0	      7351	eval.c	FUNCTION_135	IF_1	FOR_1	IF_2
0x400580c	         0xf1f4000	                         nop dword [rax]	      7351	eval.c	FUNCTION_135	IF_1	FOR_1	IF_2
0x4005810	    0x488b15000000	            mov rdx, qword [0x04005817] 	      7358	eval.c	FUNCTION_135	IF_1	WHILE_1
0x4005817	          0x83c001	                              add eax, 1	      7358	eval.c	FUNCTION_135	IF_1	WHILE_1
0x400581a	      0xbf68010000	                          mov edi, 0x168	      7359	eval.c	FUNCTION_135	IF_1	WHILE_1	CALL_2
0x400581f	            0x4898	                                    cdqe	      7358	eval.c	FUNCTION_135	IF_1	WHILE_1
0x4005821	      0x4c8d64c2f8	              lea r12, [rdx + rax*8 - 8]	      7358	eval.c	FUNCTION_135	IF_1	WHILE_1
0x4005826	      0xe800000000	                          call 0x400582b	      7359	eval.c	FUNCTION_135	IF_1	WHILE_1	CALL_2
0x400582b	        0x488d7828	                   lea rdi, [rax + 0x28]	      7373	eval.c	FUNCTION_136	CALL_1
0x400582f	        0x49890424	                    mov qword [r12], rax	      7358	eval.c	FUNCTION_135	IF_1	WHILE_1
0x4005833	          0x4889c3	                            mov rbx, rax	      7359	eval.c	FUNCTION_135	IF_1	WHILE_1	CALL_2
0x4005836	        0x4c8d6018	                   lea r12, [rax + 0x18]	      7373	eval.c	FUNCTION_136	CALL_1
0x400583a	      0xe800000000	                          call 0x400583f	      7373	eval.c	FUNCTION_136	CALL_1
0x400583f	    0x8b0500000000	            mov eax, dword [0x04005845] 	      7361	eval.c	FUNCTION_135	IF_1	WHILE_1
0x4005845	    0xc70306000000	                      mov dword [rbx], 6	      7379	eval.c	FUNCTION_136
0x400584b	        0xc6431800	                mov byte [rbx + 0x18], 0	      7374	eval.c	FUNCTION_136
0x400584f	        0xc6431901	                mov byte [rbx + 0x19], 1	      7375	eval.c	FUNCTION_136
0x4005853	    0xc7431c9f8601	        mov dword [rbx + 0x1c], 0x1869f 	      7376	eval.c	FUNCTION_136
0x400585a	    0xc74320000000	               mov dword [rbx + 0x20], 0	      7377	eval.c	FUNCTION_136
0x4005861	          0x83c001	                              add eax, 1	      7361	eval.c	FUNCTION_135	IF_1	WHILE_1
0x4005864	        0x4c896308	                mov qword [rbx + 8], r12	      7360	eval.c	FUNCTION_135	IF_1	WHILE_1	CALL_3
0x4005868	        0xc6430402	                   mov byte [rbx + 4], 2	      7380	eval.c	FUNCTION_136
0x400586c	        0xc6431005	                mov byte [rbx + 0x10], 5	      7381	eval.c	FUNCTION_136
0x4005870	        0xc6431100	                mov byte [rbx + 0x11], 0	      7382	eval.c	FUNCTION_136
0x4005874	    0x890500000000	            mov dword [0x0400587a], eax 	      7361	eval.c	FUNCTION_135	IF_1	WHILE_1
0x400587a	            0x39c5	                            cmp ebp, eax	      7356	eval.c	FUNCTION_135	IF_1	WHILE_1
0x400587c	            0x7f92	                            jg 0x4005810	      7356	eval.c	FUNCTION_135	IF_1	WHILE_1
0x400587e	              0x5b	                                 pop rbx	      7364	eval.c	FUNCTION_135
0x400587f	              0x5d	                                 pop rbp	      7364	eval.c	FUNCTION_135
0x4005880	            0x415c	                                 pop r12	      7364	eval.c	FUNCTION_135
0x4005882	              0xc3	                                     ret	      7364	eval.c	FUNCTION_135
var_redir_stop	functions,0:SWITCH,0:IF,4:DO,0:ELSE,0:WHILE,0:CALL,7:FOR,0	72
0x4010f20	              0x53	                                push rbx	       542	eval.c	FUNCTION_8
0x4010f21	        0x4883ec20	                           sub rsp, 0x20	       542	eval.c	FUNCTION_8
0x4010f25	    0x64488b042528	                mov rax, qword fs:[0x28]	       542	eval.c	FUNCTION_8
0x4010f2e	      0x4889442418	             mov qword [rsp + 0x18], rax	       542	eval.c	FUNCTION_8
0x4010f33	            0x31c0	                            xor eax, eax	       542	eval.c	FUNCTION_8
0x4010f35	    0x488b05000000	            mov rax, qword [0x04010f3c] 	       545	eval.c	FUNCTION_8	IF_1
0x4010f3c	    0x483d00000000	                              cmp rax, 0	       545	eval.c	FUNCTION_8	IF_1
0x4010f42	     0xf8418010000	                            je 0x4011060	       545	eval.c	FUNCTION_8	IF_1
0x4010f48	          0x4885c0	                           test rax, rax	       551	eval.c	FUNCTION_8	IF_2
0x4010f4b	     0xf84ca000000	                            je 0x401101b	       551	eval.c	FUNCTION_8	IF_2
0x4010f51	    0x48833d000000	               cmp qword [0x04010f59], 0	       554	eval.c	FUNCTION_8	IF_2	IF_3
0x4010f59	     0xf84f1000000	                            je 0x4011050	       554	eval.c	FUNCTION_8	IF_2	IF_3
0x4010f5f	            0x31f6	                            xor esi, esi	       556	eval.c	FUNCTION_8	IF_2	IF_3	CALL_1
0x4010f61	      0xbf00000000	                              mov edi, 0	       556	eval.c	FUNCTION_8	IF_2	IF_3	CALL_1
0x4010f66	      0xe800000000	                          call 0x4010f6b	       556	eval.c	FUNCTION_8	IF_2	IF_3	CALL_1
0x4010f6b	    0x488b05000000	            mov rax, qword [0x04010f72] 	       558	eval.c	FUNCTION_8	IF_2	IF_3
0x4010f72	    0x488b15000000	            mov rdx, qword [0x04010f79] 	       561	eval.c	FUNCTION_8	IF_2	IF_3	CALL_2
0x4010f79	          0x4531c0	                            xor r8d, r8d	       561	eval.c	FUNCTION_8	IF_2	IF_3	CALL_2
0x4010f7c	    0x488b3d000000	            mov rdi, qword [0x04010f83] 	       561	eval.c	FUNCTION_8	IF_2	IF_3	CALL_2
0x4010f83	            0x31c9	                            xor ecx, ecx	       561	eval.c	FUNCTION_8	IF_2	IF_3	CALL_2
0x4010f85	            0x31f6	                            xor esi, esi	       561	eval.c	FUNCTION_8	IF_2	IF_3	CALL_2
0x4010f87	    0xc70424020000	                      mov dword [rsp], 2	       557	eval.c	FUNCTION_8	IF_2	IF_3
0x4010f8e	      0x4889442408	                mov qword [rsp + 8], rax	       558	eval.c	FUNCTION_8	IF_2	IF_3
0x4010f93	      0xe8d8e5ffff	          call sym.get_lval.constprop.24	       561	eval.c	FUNCTION_8	IF_2	IF_3	CALL_2
0x4010f98	          0x4885c0	                           test rax, rax	       563	eval.c	FUNCTION_8	IF_2	IF_3	IF_4
0x4010f9b	    0x488905000000	            mov qword [0x04010fa2], rax 	       561	eval.c	FUNCTION_8	IF_2	IF_3	CALL_2
0x4010fa2	    0x488b1d000000	            mov rbx, qword [0x04010fa9] 	       563	eval.c	FUNCTION_8	IF_2	IF_3	IF_4
0x4010fa9	            0x7423	                            je 0x4010fce	       563	eval.c	FUNCTION_8	IF_2	IF_3	IF_4
0x4010fab	        0x48833b00	                      cmp qword [rbx], 0	       563	eval.c	FUNCTION_8	IF_2	IF_3	IF_4
0x4010faf	            0x741d	                            je 0x4010fce	       563	eval.c	FUNCTION_8	IF_2	IF_3	IF_4
0x4010fb1	          0x4889df	                            mov rdi, rbx	       564	eval.c	FUNCTION_8	IF_2	IF_3	CALL_3
0x4010fb4	    0x41b800000000	                              mov r8d, 0	       564	eval.c	FUNCTION_8	IF_2	IF_3	CALL_3
0x4010fba	            0x31c9	                            xor ecx, ecx	       564	eval.c	FUNCTION_8	IF_2	IF_3	CALL_3
0x4010fbc	          0x4889e2	                            mov rdx, rsp	       564	eval.c	FUNCTION_8	IF_2	IF_3	CALL_3
0x4010fbf	          0x4889c6	                            mov rsi, rax	       564	eval.c	FUNCTION_8	IF_2	IF_3	CALL_3
0x4010fc2	      0xe8896fffff	                   call sym.set_var_lval	       564	eval.c	FUNCTION_8	IF_2	IF_3	CALL_3
0x4010fc7	    0x488b1d000000	            mov rbx, qword [0x04010fce] 	       564	eval.c	FUNCTION_8	IF_2	IF_3	CALL_3
0x4010fce	        0x488b7b08	                mov rdi, qword [rbx + 8]	      2230	eval.c	FUNCTION_45	CALL_1
0x4010fd2	      0xe800000000	                          call 0x4010fd7	      2230	eval.c	FUNCTION_45	CALL_1
0x4010fd7	        0x488b7b58	            mov rdi, qword [rbx + 0x58] 	      2231	eval.c	FUNCTION_45	CALL_2
0x4010fdb	      0xe800000000	                          call 0x4010fe0	      2231	eval.c	FUNCTION_45	CALL_2
0x4010fe0	    0x488b3d000000	            mov rdi, qword [0x04010fe7] 	       569	eval.c	FUNCTION_8	IF_2	CALL_5
0x4010fe7	          0x4885ff	                           test rdi, rdi	       569	eval.c	FUNCTION_8	IF_2	CALL_5
0x4010fea	            0x7410	                            je 0x4010ffc	       569	eval.c	FUNCTION_8	IF_2	CALL_5
0x4010fec	      0xe800000000	                          call 0x4010ff1	       569	eval.c	FUNCTION_8	IF_2	CALL_5
0x4010ff1	    0x48c705000000	               mov qword [0x04010ffc], 0	       569	eval.c	FUNCTION_8	IF_2	CALL_5
0x4010ffc	    0x488b05000000	            mov rax, qword [0x04011003] 	       571	eval.c	FUNCTION_8	IF_2	CALL_6
0x4011003	          0x4885c0	                           test rax, rax	       571	eval.c	FUNCTION_8	IF_2	CALL_6
0x4011006	            0x7413	                            je 0x401101b	       571	eval.c	FUNCTION_8	IF_2	CALL_6
0x4011008	          0x4889c7	                            mov rdi, rax	       571	eval.c	FUNCTION_8	IF_2	CALL_6
0x401100b	      0xe800000000	                          call 0x4011010	       571	eval.c	FUNCTION_8	IF_2	CALL_6
0x4011010	    0x48c705000000	               mov qword [0x0401101b], 0	       571	eval.c	FUNCTION_8	IF_2	CALL_6
0x401101b	    0x488b3d000000	            mov rdi, qword [0x04011022] 	       573	eval.c	FUNCTION_8	CALL_7
0x4011022	          0x4885ff	                           test rdi, rdi	       573	eval.c	FUNCTION_8	CALL_7
0x4011025	            0x7410	                            je 0x4011037	       573	eval.c	FUNCTION_8	CALL_7
0x4011027	      0xe800000000	                          call 0x401102c	       573	eval.c	FUNCTION_8	CALL_7
0x401102c	    0x48c705000000	               mov qword [0x04011037], 0	       573	eval.c	FUNCTION_8	CALL_7
0x4011037	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       574	eval.c	FUNCTION_8
0x401103c	    0x644833042528	                xor rax, qword fs:[0x28]	       574	eval.c	FUNCTION_8
0x4011045	            0x7526	                           jne 0x401106d	       574	eval.c	FUNCTION_8
0x4011047	        0x4883c420	                           add rsp, 0x20	       574	eval.c	FUNCTION_8
0x401104b	              0x5b	                                 pop rbx	       574	eval.c	FUNCTION_8
0x401104c	              0xc3	                                     ret	       574	eval.c	FUNCTION_8
0x401104d	           0xf1f00	                         nop dword [rax]	       574	eval.c	FUNCTION_8
0x4011050	    0x488b3d000000	            mov rdi, qword [0x04011057] 	       569	eval.c	FUNCTION_8	IF_2	CALL_5
0x4011057	          0x4885ff	                           test rdi, rdi	       569	eval.c	FUNCTION_8	IF_2	CALL_5
0x401105a	            0x7590	                           jne 0x4010fec	       569	eval.c	FUNCTION_8	IF_2	CALL_5
0x401105c	            0xebaa	                           jmp 0x4011008	       569	eval.c	FUNCTION_8	IF_2	CALL_5
0x401105e	            0x6690	                                     nop	       569	eval.c	FUNCTION_8	IF_2	CALL_5
0x4011060	    0x48c705000000	               mov qword [0x0401106b], 0	       547	eval.c	FUNCTION_8	IF_1
0x401106b	            0xebca	                           jmp 0x4011037	       547	eval.c	FUNCTION_8	IF_1
0x401106d	      0xe800000000	                          call 0x4011072	       574	eval.c	FUNCTION_8
next_for_item	functions,0:SWITCH,0:IF,1:DO,0:ELSE,1:WHILE,0:CALL,1:FOR,0	37
0x4010ea0	        0x488b5708	                mov rdx, qword [rdi + 8]	      2570	eval.c	FUNCTION_49
0x4010ea4	          0x4885d2	                           test rdx, rdx	      2571	eval.c	FUNCTION_49	IF_1
0x4010ea7	            0x7467	                            je 0x4010f10	      2571	eval.c	FUNCTION_49	IF_1
0x4010ea9	          0x4889f9	                            mov rcx, rdi	      2571	eval.c	FUNCTION_49	IF_1
0x4010eac	        0x4883ec08	                              sub rsp, 8	      2565	eval.c	FUNCTION_49
0x4010eb0	          0x4889f7	                            mov rdi, rsi	      2565	eval.c	FUNCTION_49
0x4010eb3	          0x4889c8	                            mov rax, rcx	      2565	eval.c	FUNCTION_49
0x4010eb6	          0x488b0a	                    mov rcx, qword [rdx]	      2575	eval.c	FUNCTION_49	ELSE_1
0x4010eb9	        0x488d7210	                   lea rsi, [rdx + 0x10]	      2576	eval.c	FUNCTION_49	ELSE_1	CALL_1
0x4010ebd	        0x48894808	                mov qword [rax + 8], rcx	      2575	eval.c	FUNCTION_49	ELSE_1
0x4010ec1	          0x803f5b	                    cmp byte [rdi], 0x5b	      1330	eval.c	FUNCTION_32	IF_1
0x4010ec4	            0x742a	                            je 0x4010ef0	      1330	eval.c	FUNCTION_32	IF_1
0x4010ec6	          0x4531c0	                            xor r8d, r8d	      1335	eval.c	FUNCTION_32	IF_1	IF_2	CALL_1
0x4010ec9	            0x31c9	                            xor ecx, ecx	      1335	eval.c	FUNCTION_32	IF_1	IF_2	CALL_1
0x4010ecb	      0xba01000000	                              mov edx, 1	      1335	eval.c	FUNCTION_32	IF_1	IF_2	CALL_1
0x4010ed0	      0xe8abefffff	                     call sym.ex_let_one	      1335	eval.c	FUNCTION_32	IF_1	IF_2	CALL_1
0x4010ed5	          0x4885c0	                           test rax, rax	      1336	eval.c	FUNCTION_32	IF_1	IF_2
0x4010ed8	           0xf95c0	                                setne al	      1336	eval.c	FUNCTION_32	IF_1	IF_2
0x4010edb	           0xfb6c0	                           movzx eax, al	      1336	eval.c	FUNCTION_32	IF_1	IF_2
0x4010ede	          0x83f801	                              cmp eax, 1	      2576	eval.c	FUNCTION_49	ELSE_1	CALL_1
0x4010ee1	           0xf94c0	                                 sete al	      2576	eval.c	FUNCTION_49	ELSE_1	CALL_1
0x4010ee4	        0x4883c408	                              add rsp, 8	      2580	eval.c	FUNCTION_49
0x4010ee8	           0xfb6c0	                           movzx eax, al	      2576	eval.c	FUNCTION_49	ELSE_1	CALL_1
0x4010eeb	              0xc3	                                     ret	      2580	eval.c	FUNCTION_49
0x4010eec	         0xf1f4000	                         nop dword [rax]	      2580	eval.c	FUNCTION_49
0x4010ef0	          0x8b4804	                mov ecx, dword [rax + 4]	      2580	eval.c	FUNCTION_49
0x4010ef3	            0x8b10	                    mov edx, dword [rax]	      2580	eval.c	FUNCTION_49
0x4010ef5	          0x4531c0	                            xor r8d, r8d	      2580	eval.c	FUNCTION_49
0x4010ef8	      0xe833f6ffff	            call sym.ex_let_vars.part.15	      2580	eval.c	FUNCTION_49
0x4010efd	          0x83f801	                              cmp eax, 1	      2576	eval.c	FUNCTION_49	ELSE_1	CALL_1
0x4010f00	           0xf94c0	                                 sete al	      2576	eval.c	FUNCTION_49	ELSE_1	CALL_1
0x4010f03	        0x4883c408	                              add rsp, 8	      2580	eval.c	FUNCTION_49
0x4010f07	           0xfb6c0	                           movzx eax, al	      2576	eval.c	FUNCTION_49	ELSE_1	CALL_1
0x4010f0a	              0xc3	                                     ret	      2580	eval.c	FUNCTION_49
0x4010f0b	       0xf1f440000	                   nop dword [rax + rax]	      2580	eval.c	FUNCTION_49
0x4010f10	            0x31c0	                            xor eax, eax	      2580	eval.c	FUNCTION_49
0x4010f12	              0xc3	                                     ret	      2580	eval.c	FUNCTION_49
ga_concat_esc	functions,0:SWITCH,1:IF,2:DO,0:ELSE,1:WHILE,0:CALL,11:FOR,1	99
0x40000d0	              0x55	                                push rbp	      9109	eval.c	FUNCTION_179
0x40000d1	              0x53	                                push rbx	      9109	eval.c	FUNCTION_179
0x40000d2	          0x4889fd	                            mov rbp, rdi	      9109	eval.c	FUNCTION_179
0x40000d5	        0x4883ec58	                           sub rsp, 0x58	      9109	eval.c	FUNCTION_179
0x40000d9	    0x64488b042528	                mov rax, qword fs:[0x28]	      9109	eval.c	FUNCTION_179
0x40000e2	      0x4889442448	             mov qword [rsp + 0x48], rax	      9109	eval.c	FUNCTION_179
0x40000e7	            0x31c0	                            xor eax, eax	      9109	eval.c	FUNCTION_179
0x40000e9	          0x4885f6	                           test rsi, rsi	      9113	eval.c	FUNCTION_179	IF_1
0x40000ec	     0xf844e010000	                            je 0x4000240	      9113	eval.c	FUNCTION_179	IF_1
0x40000f2	           0xfb60e	                   movzx ecx, byte [rsi]	      9119	eval.c	FUNCTION_179	FOR_1
0x40000f5	          0x4889f3	                            mov rbx, rsi	      9119	eval.c	FUNCTION_179	FOR_1
0x40000f8	            0x84c9	                             test cl, cl	      9119	eval.c	FUNCTION_179	FOR_1
0x40000fa	            0x755f	                           jne 0x400015b	      9119	eval.c	FUNCTION_179	FOR_1
0x40000fc	      0xe98f000000	                           jmp 0x4000190	      9119	eval.c	FUNCTION_179	FOR_1
0x4000101	     0xf1f80000000	                         nop dword [rax]	      9119	eval.c	FUNCTION_179	FOR_1
0x4000108	          0x80f909	                               cmp cl, 9	      9120	eval.c	FUNCTION_179	FOR_1	SWITCH_1
0x400010b	     0xf8407010000	                            je 0x4000218	      9120	eval.c	FUNCTION_179	FOR_1	SWITCH_1
0x4000111	          0x80f90a	                             cmp cl, 0xa	      9120	eval.c	FUNCTION_179	FOR_1	SWITCH_1
0x4000114	     0xf84e6000000	                            je 0x4000200	      9120	eval.c	FUNCTION_179	FOR_1	SWITCH_1
0x400011a	          0x80f908	                               cmp cl, 8	      9120	eval.c	FUNCTION_179	FOR_1	SWITCH_1
0x400011d	     0xf84c5000000	                            je 0x40001e8	      9120	eval.c	FUNCTION_179	FOR_1	SWITCH_1
0x4000123	          0x80f91f	                            cmp cl, 0x1f	      9130	eval.c	FUNCTION_179	FOR_1	SWITCH_1	IF_2
0x4000126	     0xf8704010000	                            ja 0x4000230	      9130	eval.c	FUNCTION_179	FOR_1	SWITCH_1	IF_2
0x400012c	      0xbe41000000	                           mov esi, 0x41	      9132	eval.c	FUNCTION_179	FOR_1	SWITCH_1	IF_2	CALL_9
0x4000131	          0x4889e7	                            mov rdi, rsp	      9132	eval.c	FUNCTION_179	FOR_1	SWITCH_1	IF_2	CALL_9
0x4000134	      0xba00000000	                              mov edx, 0	      9132	eval.c	FUNCTION_179	FOR_1	SWITCH_1	IF_2	CALL_9
0x4000139	            0x31c0	                            xor eax, eax	      9132	eval.c	FUNCTION_179	FOR_1	SWITCH_1	IF_2	CALL_9
0x400013b	      0xe800000000	                          call 0x4000140	      9132	eval.c	FUNCTION_179	FOR_1	SWITCH_1	IF_2	CALL_9
0x4000140	          0x4889e6	                            mov rsi, rsp	      9133	eval.c	FUNCTION_179	FOR_1	SWITCH_1	IF_2	CALL_10
0x4000143	          0x4889ef	                            mov rdi, rbp	      9133	eval.c	FUNCTION_179	FOR_1	SWITCH_1	IF_2	CALL_10
0x4000146	      0xe800000000	                          call 0x400014b	      9133	eval.c	FUNCTION_179	FOR_1	SWITCH_1	IF_2	CALL_10
0x400014b	       0xf1f440000	                   nop dword [rax + rax]	      9133	eval.c	FUNCTION_179	FOR_1	SWITCH_1	IF_2	CALL_10
0x4000150	        0x4883c301	                              add rbx, 1	      9119	eval.c	FUNCTION_179	FOR_1
0x4000154	           0xfb60b	                   movzx ecx, byte [rbx]	      9119	eval.c	FUNCTION_179	FOR_1
0x4000157	            0x84c9	                             test cl, cl	      9119	eval.c	FUNCTION_179	FOR_1
0x4000159	            0x7435	                            je 0x4000190	      9119	eval.c	FUNCTION_179	FOR_1
0x400015b	          0x80f90c	                             cmp cl, 0xc	      9120	eval.c	FUNCTION_179	FOR_1	SWITCH_1
0x400015e	            0x7450	                            je 0x40001b0	      9120	eval.c	FUNCTION_179	FOR_1	SWITCH_1
0x4000160	            0x76a6	                           jbe 0x4000108	      9120	eval.c	FUNCTION_179	FOR_1	SWITCH_1
0x4000162	          0x80f91b	                            cmp cl, 0x1b	      9120	eval.c	FUNCTION_179	FOR_1	SWITCH_1
0x4000165	            0x7469	                            je 0x40001d0	      9120	eval.c	FUNCTION_179	FOR_1	SWITCH_1
0x4000167	          0x80f95c	                            cmp cl, 0x5c	      9120	eval.c	FUNCTION_179	FOR_1	SWITCH_1
0x400016a	            0x7454	                            je 0x40001c0	      9120	eval.c	FUNCTION_179	FOR_1	SWITCH_1
0x400016c	          0x80f90d	                             cmp cl, 0xd	      9120	eval.c	FUNCTION_179	FOR_1	SWITCH_1
0x400016f	            0x75b2	                           jne 0x4000123	      9120	eval.c	FUNCTION_179	FOR_1	SWITCH_1
0x4000171	        0x4883c301	                              add rbx, 1	      9119	eval.c	FUNCTION_179	FOR_1
0x4000175	      0xbe00000000	                              mov esi, 0	      9127	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_7
0x400017a	          0x4889ef	                            mov rdi, rbp	      9127	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_7
0x400017d	      0xe800000000	                          call 0x4000182	      9127	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_7
0x4000182	           0xfb60b	                   movzx ecx, byte [rbx]	      9119	eval.c	FUNCTION_179	FOR_1
0x4000185	            0x84c9	                             test cl, cl	      9119	eval.c	FUNCTION_179	FOR_1
0x4000187	            0x75d2	                           jne 0x400015b	      9119	eval.c	FUNCTION_179	FOR_1
0x4000189	     0xf1f80000000	                         nop dword [rax]	      9119	eval.c	FUNCTION_179	FOR_1
0x4000190	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      9139	eval.c	FUNCTION_179
0x4000195	    0x644833042528	                xor rax, qword fs:[0x28]	      9139	eval.c	FUNCTION_179
0x400019e	     0xf85ab000000	                           jne 0x400024f	      9139	eval.c	FUNCTION_179
0x40001a4	        0x4883c458	                           add rsp, 0x58	      9139	eval.c	FUNCTION_179
0x40001a8	              0x5b	                                 pop rbx	      9139	eval.c	FUNCTION_179
0x40001a9	              0x5d	                                 pop rbp	      9139	eval.c	FUNCTION_179
0x40001aa	              0xc3	                                     ret	      9139	eval.c	FUNCTION_179
0x40001ab	       0xf1f440000	                   nop dword [rax + rax]	      9139	eval.c	FUNCTION_179
0x40001b0	      0xbe00000000	                              mov esi, 0	      9124	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_4
0x40001b5	          0x4889ef	                            mov rdi, rbp	      9124	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_4
0x40001b8	      0xe800000000	                          call 0x40001bd	      9124	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_4
0x40001bd	            0xeb91	                           jmp 0x4000150	      9124	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_4
0x40001bf	              0x90	                                     nop	      9124	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_4
0x40001c0	      0xbe00000000	                              mov esi, 0	      9128	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_8
0x40001c5	          0x4889ef	                            mov rdi, rbp	      9128	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_8
0x40001c8	      0xe800000000	                          call 0x40001cd	      9128	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_8
0x40001cd	            0xeb81	                           jmp 0x4000150	      9128	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_8
0x40001cf	              0x90	                                     nop	      9128	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_8
0x40001d0	      0xbe00000000	                              mov esi, 0	      9123	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_3
0x40001d5	          0x4889ef	                            mov rdi, rbp	      9123	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_3
0x40001d8	      0xe800000000	                          call 0x40001dd	      9123	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_3
0x40001dd	      0xe96effffff	                           jmp 0x4000150	      9123	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_3
0x40001e2	    0x660f1f440000	                    nop word [rax + rax]	      9123	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_3
0x40001e8	      0xbe00000000	                              mov esi, 0	      9122	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_2
0x40001ed	          0x4889ef	                            mov rdi, rbp	      9122	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_2
0x40001f0	      0xe800000000	                          call 0x40001f5	      9122	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_2
0x40001f5	      0xe956ffffff	                           jmp 0x4000150	      9122	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_2
0x40001fa	    0x660f1f440000	                    nop word [rax + rax]	      9122	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_2
0x4000200	      0xbe00000000	                              mov esi, 0	      9125	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_5
0x4000205	          0x4889ef	                            mov rdi, rbp	      9125	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_5
0x4000208	      0xe800000000	                          call 0x400020d	      9125	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_5
0x400020d	      0xe93effffff	                           jmp 0x4000150	      9125	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_5
0x4000212	    0x660f1f440000	                    nop word [rax + rax]	      9125	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_5
0x4000218	      0xbe00000000	                              mov esi, 0	      9126	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_6
0x400021d	          0x4889ef	                            mov rdi, rbp	      9126	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_6
0x4000220	      0xe800000000	                          call 0x4000225	      9126	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_6
0x4000225	      0xe926ffffff	                           jmp 0x4000150	      9126	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_6
0x400022a	    0x660f1f440000	                    nop word [rax + rax]	      9126	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_6
0x4000230	           0xfb6f1	                           movzx esi, cl	      9136	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_11
0x4000233	          0x4889ef	                            mov rdi, rbp	      9136	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_11
0x4000236	      0xe800000000	                          call 0x400023b	      9136	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_11
0x400023b	      0xe910ffffff	                           jmp 0x4000150	      9136	eval.c	FUNCTION_179	FOR_1	SWITCH_1	CALL_11
0x4000240	      0xbe00000000	                              mov esi, 0	      9115	eval.c	FUNCTION_179	IF_1	CALL_1
0x4000245	      0xe800000000	                          call 0x400024a	      9115	eval.c	FUNCTION_179	IF_1	CALL_1
0x400024a	      0xe941ffffff	                           jmp 0x4000190	      9115	eval.c	FUNCTION_179	IF_1	CALL_1
0x400024f	      0xe800000000	                          call 0x4000254	      9139	eval.c	FUNCTION_179
filter_map	functions,0:SWITCH,0:IF,14:DO,0:ELSE,3:WHILE,0:CALL,26:FOR,2	525
0x4013390	            0x4157	                                push r15	     10232	eval.c	FUNCTION_190
0x4013392	            0x4156	                                push r14	     10232	eval.c	FUNCTION_190
0x4013394	            0x4155	                                push r13	     10232	eval.c	FUNCTION_190
0x4013396	            0x4154	                                push r12	     10232	eval.c	FUNCTION_190
0x4013398	          0x4189d5	                           mov r13d, edx	     10232	eval.c	FUNCTION_190
0x401339b	              0x55	                                push rbp	     10232	eval.c	FUNCTION_190
0x401339c	              0x53	                                push rbx	     10232	eval.c	FUNCTION_190
0x401339d	      0xbb00000000	                              mov ebx, 0	     10244	eval.c	FUNCTION_190
0x40133a2	          0x4889fd	                            mov rbp, rdi	     10232	eval.c	FUNCTION_190
0x40133a5	    0x4881ec080100	                          sub rsp, 0x108	     10232	eval.c	FUNCTION_190
0x40133ac	    0x64488b042528	                mov rax, qword fs:[0x28]	     10232	eval.c	FUNCTION_190
0x40133b5	    0x48898424f800	             mov qword [rsp + 0xf8], rax	     10232	eval.c	FUNCTION_190
0x40133bd	            0x31c0	                            xor eax, eax	     10232	eval.c	FUNCTION_190
0x40133bf	            0x85d2	                           test edx, edx	     10244	eval.c	FUNCTION_190
0x40133c1	      0xb800000000	                              mov eax, 0	     10244	eval.c	FUNCTION_190
0x40133c6	      0xba00000000	                              mov edx, 0	     10244	eval.c	FUNCTION_190
0x40133cb	        0x480f44d8	                          cmove rbx, rax	     10244	eval.c	FUNCTION_190
0x40133cf	      0xb800000000	                              mov eax, 0	     10244	eval.c	FUNCTION_190
0x40133d4	      0x4889742410	             mov qword [rsp + 0x10], rsi	     10232	eval.c	FUNCTION_190
0x40133d9	        0x480f44c2	                          cmove rax, rdx	     10244	eval.c	FUNCTION_190
0x40133dd	        0x48890424	                    mov qword [rsp], rax	     10244	eval.c	FUNCTION_190
0x40133e1	            0x8b07	                    mov eax, dword [rdi]	     10250	eval.c	FUNCTION_190	IF_1
0x40133e3	          0x83f805	                              cmp eax, 5	     10250	eval.c	FUNCTION_190	IF_1
0x40133e6	     0xf84e4030000	                            je 0x40137d0	     10250	eval.c	FUNCTION_190	IF_1
0x40133ec	          0x83f806	                              cmp eax, 6	     10256	eval.c	FUNCTION_190	ELSE_1	IF_3
0x40133ef	            0x744f	                            je 0x4013440	     10256	eval.c	FUNCTION_190	ELSE_1	IF_3
0x40133f1	      0xbe00000000	                              mov esi, 0	     10264	eval.c	FUNCTION_190	ELSE_2	CALL_6
0x40133f6	            0x31ff	                            xor edi, edi	     10264	eval.c	FUNCTION_190	ELSE_2	CALL_6
0x40133f8	      0xba05000000	                              mov edx, 5	     10264	eval.c	FUNCTION_190	ELSE_2	CALL_6
0x40133fd	      0xe800000000	                          call 0x4013402	     10264	eval.c	FUNCTION_190	ELSE_2	CALL_6
0x4013402	          0x4889de	                            mov rsi, rbx	     10264	eval.c	FUNCTION_190	ELSE_2	CALL_6
0x4013405	          0x4889c7	                            mov rdi, rax	     10264	eval.c	FUNCTION_190	ELSE_2	CALL_6
0x4013408	      0xe800000000	                          call 0x401340d	     10264	eval.c	FUNCTION_190	ELSE_2	CALL_6
0x401340d	    0x488b8424f800	            mov rax, qword [rsp + 0xf8] 	     10343	eval.c	FUNCTION_190
0x4013415	    0x644833042528	                xor rax, qword fs:[0x28]	     10343	eval.c	FUNCTION_190
0x401341e	     0xf85d4080000	                           jne 0x4013cf8	     10343	eval.c	FUNCTION_190
0x4013424	    0x4881c4080100	                          add rsp, 0x108	     10343	eval.c	FUNCTION_190
0x401342b	              0x5b	                                 pop rbx	     10343	eval.c	FUNCTION_190
0x401342c	              0x5d	                                 pop rbp	     10343	eval.c	FUNCTION_190
0x401342d	            0x415c	                                 pop r12	     10343	eval.c	FUNCTION_190
0x401342f	            0x415d	                                 pop r13	     10343	eval.c	FUNCTION_190
0x4013431	            0x415e	                                 pop r14	     10343	eval.c	FUNCTION_190
0x4013433	            0x415f	                                 pop r15	     10343	eval.c	FUNCTION_190
0x4013435	              0xc3	                                     ret	     10343	eval.c	FUNCTION_190
0x4013436	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     10343	eval.c	FUNCTION_190
0x4013440	        0x4c8b7f08	                mov r15, qword [rdi + 8]	     10258	eval.c	FUNCTION_190	ELSE_1	IF_3	IF_4
0x4013444	          0x4d85ff	                           test r15, r15	     10258	eval.c	FUNCTION_190	ELSE_1	IF_3	IF_4
0x4013447	            0x74c4	                            je 0x401340d	     10258	eval.c	FUNCTION_190	ELSE_1	IF_3	IF_4
0x4013449	          0x4585ed	                         test r13d, r13d	     10259	eval.c	FUNCTION_190	ELSE_1	IF_3	IF_4	CALL_4
0x401344c	    0x48c744241800	               mov qword [rsp + 0x18], 0	     10235	eval.c	FUNCTION_190
0x4013455	     0xf84b5040000	                            je 0x4013910	     10259	eval.c	FUNCTION_190	ELSE_1	IF_3	IF_4	CALL_4
0x401345b	          0x8b5d10	            mov ebx, dword [rbp + 0x10] 	     10272	eval.c	FUNCTION_190	IF_5
0x401345e	            0x85db	                           test ebx, ebx	     10272	eval.c	FUNCTION_190	IF_5
0x4013460	     0xf849d010000	                            je 0x4013603	     10272	eval.c	FUNCTION_190	IF_5
0x4013466	    0x488b05000000	            mov rax, qword [0x0401346d] 	       910	eval.c	FUNCTION_21
0x401346d	    0x448b1d000000	           mov r11d, dword [0x04013474] 	       911	eval.c	FUNCTION_21	IF_1
0x4013474	      0x4889442438	             mov qword [rsp + 0x38], rax	       910	eval.c	FUNCTION_21
0x4013479	    0x488b05000000	            mov rax, qword [0x04013480] 	       910	eval.c	FUNCTION_21
0x4013480	          0x4585db	                         test r11d, r11d	       911	eval.c	FUNCTION_21	IF_1
0x4013483	      0x4889442440	             mov qword [rsp + 0x40], rax	       910	eval.c	FUNCTION_21
0x4013488	     0xf841a040000	                            je 0x40138a8	       911	eval.c	FUNCTION_21	IF_1
0x401348e	    0x8b0500000000	            mov eax, dword [0x04013494] 	     10278	eval.c	FUNCTION_190	IF_5
0x4013494	    0x448b15000000	           mov r10d, dword [0x0401349b] 	       911	eval.c	FUNCTION_21	IF_1
0x401349b	    0xc70500000000	               mov dword [0x040134a5], 0	     10279	eval.c	FUNCTION_190	IF_5
0x40134a5	        0x89442434	             mov dword [rsp + 0x34], eax	     10278	eval.c	FUNCTION_190	IF_5
0x40134a9	    0x488b05000000	            mov rax, qword [0x040134b0] 	       910	eval.c	FUNCTION_21
0x40134b0	          0x4585d2	                         test r10d, r10d	       911	eval.c	FUNCTION_21	IF_1
0x40134b3	      0x4889442448	             mov qword [rsp + 0x48], rax	       910	eval.c	FUNCTION_21
0x40134b8	    0x488b05000000	            mov rax, qword [0x040134bf] 	       910	eval.c	FUNCTION_21
0x40134bf	      0x4889442450	             mov qword [rsp + 0x50], rax	       910	eval.c	FUNCTION_21
0x40134c4	     0xf84c6030000	                            je 0x4013890	       911	eval.c	FUNCTION_21	IF_1
0x40134ca	        0x837d0006	                      cmp dword [rbp], 6	     10282	eval.c	FUNCTION_190	IF_5	IF_6
0x40134ce	        0x488d4510	                   lea rax, [rbp + 0x10]	     10268	eval.c	FUNCTION_190
0x40134d2	      0x4889442408	                mov qword [rsp + 8], rax	     10268	eval.c	FUNCTION_190
0x40134d7	     0xf8443040000	                            je 0x4013920	     10282	eval.c	FUNCTION_190	IF_5	IF_6
0x40134dd	      0x488b442418	            mov rax, qword [rsp + 0x18] 	     10321	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2
0x40134e2	          0x4531e4	                          xor r12d, r12d	     10321	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2
0x40134e5	    0xc70500000000	               mov dword [0x040134ef], 1	     10319	eval.c	FUNCTION_190	IF_5	ELSE_3
0x40134ef	          0x488b18	                    mov rbx, qword [rax]	     10321	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2
0x40134f2	          0x4885db	                           test rbx, rbx	     10321	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2
0x40134f5	     0xf84ba000000	                            je 0x40135b5	     10321	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2
0x40134fb	       0xf1f440000	                   nop dword [rax + rax]	     10321	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2
0x4013500	          0x4585ed	                         test r13d, r13d	     10323	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_12	CALL_21
0x4013503	            0x741a	                            je 0x401351f	     10323	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_12	CALL_21
0x4013505	         0xfbe7b14	           movsx edi, byte [rbx + 0x14] 	     10323	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_12	CALL_21
0x4013509	        0x488b3424	                    mov rsi, qword [rsp]	     10323	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_12	CALL_21
0x401350d	      0xba01000000	                              mov edx, 1	     10323	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_12	CALL_21
0x4013512	      0xe800000000	                          call 0x4013517	     10323	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_12	CALL_21
0x4013517	            0x85c0	                           test eax, eax	     10323	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_12	CALL_21
0x4013519	     0xf8596000000	                           jne 0x40135b5	     10323	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_12	CALL_21
0x401351f	        0x4c8d7b10	                   lea r15, [rbx + 0x10]	     10327	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_13	CALL_22
0x4013523	      0xbe00000000	                              mov esi, 0	     10196	eval.c	FUNCTION_189	CALL_1
0x4013528	          0x4c8b33	                    mov r14, qword [rbx]	     10325	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2
0x401352b	    0x4c8925000000	            mov qword [0x04013532], r12 	     10326	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2
0x4013532	          0x4c89ff	                            mov rdi, r15	     10196	eval.c	FUNCTION_189	CALL_1
0x4013535	      0xe800000000	                          call 0x401353a	     10196	eval.c	FUNCTION_189	CALL_1
0x401353a	    0x488b05000000	            mov rax, qword [0x04013541] 	     10197	eval.c	FUNCTION_189
0x4013541	    0x488b15000000	            mov rdx, qword [0x04013548] 	     10197	eval.c	FUNCTION_189
0x4013548	    0x488984248000	             mov qword [rsp + 0x80], rax	     10197	eval.c	FUNCTION_189
0x4013550	    0x488b05000000	            mov rax, qword [0x04013557] 	     10198	eval.c	FUNCTION_189
0x4013557	    0x488994248800	             mov qword [rsp + 0x88], rdx	     10197	eval.c	FUNCTION_189
0x401355f	    0x488b15000000	            mov rdx, qword [0x04013566] 	     10198	eval.c	FUNCTION_189
0x4013566	    0x488984249000	             mov qword [rsp + 0x90], rax	     10198	eval.c	FUNCTION_189
0x401356e	          0x8b4510	            mov eax, dword [rbp + 0x10] 	       702	eval.c	FUNCTION_14	IF_1
0x4013571	    0x488994249800	             mov qword [rsp + 0x98], rdx	     10198	eval.c	FUNCTION_189
0x4013579	          0x83f803	                              cmp eax, 3	       702	eval.c	FUNCTION_14	IF_1
0x401357c	     0xf846e010000	                            je 0x40136f0	       702	eval.c	FUNCTION_14	IF_1
0x4013582	          0x83f804	                              cmp eax, 4	       711	eval.c	FUNCTION_14	ELSE_1	IF_4
0x4013585	     0xf858d000000	                           jne 0x4013618	       711	eval.c	FUNCTION_14	ELSE_1	IF_4
0x401358b	        0x488b5518	            mov rdx, qword [rbp + 0x18] 	       713	eval.c	FUNCTION_14	ELSE_1	IF_4
0x401358f	        0x4c8b5208	                mov r10, qword [rdx + 8]	      4862	eval.c	FUNCTION_75	IF_1
0x4013593	          0x4d85d2	                           test r10, r10	      4862	eval.c	FUNCTION_75	IF_1
0x4013596	     0xf8424030000	                            je 0x40138c0	      4862	eval.c	FUNCTION_75	IF_1
0x401359c	      0x4c89542468	             mov qword [rsp + 0x68], r10	       715	eval.c	FUNCTION_14	ELSE_1	IF_4	CALL_3
0x40135a1	        0x41803a00	                       cmp byte [r10], 0	       716	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_5
0x40135a5	     0xf85fd010000	                           jne 0x40137a8	       716	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_5
0x40135ab	      0xbf00000000	                              mov edi, 0	     10222	eval.c	FUNCTION_189	CALL_6
0x40135b0	      0xe800000000	                          call 0x40135b5	     10222	eval.c	FUNCTION_189	CALL_6
0x40135b5	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	       924	eval.c	FUNCTION_22
0x40135ba	            0x89c8	                            mov eax, ecx	       924	eval.c	FUNCTION_22
0x40135bc	    0x48890d000000	            mov qword [0x040135c3], rcx 	       924	eval.c	FUNCTION_22
0x40135c3	      0x488b4c2450	            mov rcx, qword [rsp + 0x50] 	       924	eval.c	FUNCTION_22
0x40135c8	            0x85c0	                           test eax, eax	       925	eval.c	FUNCTION_22	IF_1
0x40135ca	    0x48890d000000	            mov qword [0x040135d1], rcx 	       924	eval.c	FUNCTION_22
0x40135d1	     0xf8479020000	                            je 0x4013850	       925	eval.c	FUNCTION_22	IF_1
0x40135d7	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       924	eval.c	FUNCTION_22
0x40135dc	            0x89c8	                            mov eax, ecx	       924	eval.c	FUNCTION_22
0x40135de	    0x48890d000000	            mov qword [0x040135e5], rcx 	       924	eval.c	FUNCTION_22
0x40135e5	      0x488b4c2440	            mov rcx, qword [rsp + 0x40] 	       924	eval.c	FUNCTION_22
0x40135ea	            0x85c0	                           test eax, eax	       925	eval.c	FUNCTION_22	IF_1
0x40135ec	    0x48890d000000	            mov qword [0x040135f3], rcx 	       924	eval.c	FUNCTION_22
0x40135f3	     0xf8417020000	                            je 0x4013810	       925	eval.c	FUNCTION_22	IF_1
0x40135f9	        0x8b442434	            mov eax, dword [rsp + 0x34] 	     10339	eval.c	FUNCTION_190	IF_5
0x40135fd	     0x90500000000	              or dword [0x04013603], eax	     10339	eval.c	FUNCTION_190	IF_5
0x4013603	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	     10342	eval.c	FUNCTION_190	CALL_26
0x4013608	          0x4889ef	                            mov rdi, rbp	     10342	eval.c	FUNCTION_190	CALL_26
0x401360b	      0xe800000000	                          call 0x4013610	     10342	eval.c	FUNCTION_190	CALL_26
0x4013610	      0xe9f8fdffff	                           jmp 0x401340d	     10342	eval.c	FUNCTION_190	CALL_26
0x4013615	           0xf1f00	                         nop dword [rax]	     10342	eval.c	FUNCTION_190	CALL_26
0x4013618	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       724	eval.c	FUNCTION_14	ELSE_2	CALL_6
0x401361d	    0x488db424b000	                   lea rsi, [rsp + 0xb0]	       724	eval.c	FUNCTION_14	ELSE_2	CALL_6
0x4013625	      0xe800000000	                          call 0x401362a	       724	eval.c	FUNCTION_14	ELSE_2	CALL_6
0x401362a	          0x4885c0	                           test rax, rax	       725	eval.c	FUNCTION_14	ELSE_2	IF_7
0x401362d	      0x4889442468	             mov qword [rsp + 0x68], rax	       724	eval.c	FUNCTION_14	ELSE_2	CALL_6
0x4013632	     0xf8473ffffff	                            je 0x40135ab	       725	eval.c	FUNCTION_14	ELSE_2	IF_7
0x4013638	          0x4889c7	                            mov rdi, rax	       727	eval.c	FUNCTION_14	ELSE_2	CALL_7
0x401363b	      0xe800000000	                          call 0x4013640	       727	eval.c	FUNCTION_14	ELSE_2	CALL_7
0x4013640	      0x488d742470	                   lea rsi, [rsp + 0x70]	       728	eval.c	FUNCTION_14	ELSE_2	IF_8	CALL_8
0x4013645	      0x488d7c2468	                   lea rdi, [rsp + 0x68]	       728	eval.c	FUNCTION_14	ELSE_2	IF_8	CALL_8
0x401364a	      0xba01000000	                              mov edx, 1	       728	eval.c	FUNCTION_14	ELSE_2	IF_8	CALL_8
0x401364f	      0x4889442468	             mov qword [rsp + 0x68], rax	       727	eval.c	FUNCTION_14	ELSE_2	CALL_7
0x4013654	      0xe800000000	                          call 0x4013659	       728	eval.c	FUNCTION_14	ELSE_2	IF_8	CALL_8
0x4013659	            0x85c0	                           test eax, eax	       728	eval.c	FUNCTION_14	ELSE_2	IF_8	CALL_8
0x401365b	     0xf844affffff	                            je 0x40135ab	       728	eval.c	FUNCTION_14	ELSE_2	IF_8	CALL_8
0x4013661	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	       730	eval.c	FUNCTION_14	ELSE_2	IF_9
0x4013666	          0x803900	                       cmp byte [rcx], 0	       730	eval.c	FUNCTION_14	ELSE_2	IF_9
0x4013669	     0xf8571020000	                           jne 0x40138e0	       730	eval.c	FUNCTION_14	ELSE_2	IF_9
0x401366f	          0x4585ed	                         test r13d, r13d	     10201	eval.c	FUNCTION_189	IF_2
0x4013672	     0xf85ed000000	                           jne 0x4013765	     10201	eval.c	FUNCTION_189	IF_2
0x4013678	      0x488d742468	                   lea rsi, [rsp + 0x68]	     10213	eval.c	FUNCTION_189	ELSE_1	CALL_4
0x401367d	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	     10213	eval.c	FUNCTION_189	ELSE_1	CALL_4
0x4013682	    0xc74424680000	               mov dword [rsp + 0x68], 0	     10210	eval.c	FUNCTION_189	ELSE_1
0x401368a	      0xe800000000	                          call 0x401368f	     10213	eval.c	FUNCTION_189	ELSE_1	CALL_4
0x401368f	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	     10214	eval.c	FUNCTION_189	ELSE_1	CALL_5
0x4013694	          0x4989c7	                            mov r15, rax	     10213	eval.c	FUNCTION_189	ELSE_1	CALL_4
0x4013697	      0xe800000000	                          call 0x401369c	     10214	eval.c	FUNCTION_189	ELSE_1	CALL_5
0x401369c	        0x8b542468	            mov edx, dword [rsp + 0x68] 	     10217	eval.c	FUNCTION_189	ELSE_1	IF_3
0x40136a0	      0xbf00000000	                              mov edi, 0	     10222	eval.c	FUNCTION_189	CALL_6
0x40136a5	            0x85d2	                           test edx, edx	     10217	eval.c	FUNCTION_189	ELSE_1	IF_3
0x40136a7	     0xf8503ffffff	                           jne 0x40135b0	     10217	eval.c	FUNCTION_189	ELSE_1	IF_3
0x40136ad	      0xe800000000	                          call 0x40136b2	     10222	eval.c	FUNCTION_189	CALL_6
0x40136b2	    0x8b0500000000	            mov eax, dword [0x040136b8] 	     10328	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_13
0x40136b8	            0x85c0	                           test eax, eax	     10328	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_13
0x40136ba	     0xf85f5feffff	                           jne 0x40135b5	     10328	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_13
0x40136c0	          0x4d85ff	                           test r15, r15	     10330	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_14
0x40136c3	            0x750d	                           jne 0x40136d2	     10330	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_14
0x40136c5	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	     10331	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	CALL_23
0x40136ca	          0x4889de	                            mov rsi, rbx	     10331	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	CALL_23
0x40136cd	      0xe800000000	                          call 0x40136d2	     10331	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	CALL_23
0x40136d2	        0x4983c401	                              add r12, 1	     10331	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	CALL_23
0x40136d6	          0x4d85f6	                           test r14, r14	     10321	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2
0x40136d9	     0xf84d6feffff	                            je 0x40135b5	     10321	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2
0x40136df	          0x4c89f3	                            mov rbx, r14	     10321	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2
0x40136e2	      0xe919feffff	                           jmp 0x4013500	     10321	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2
0x40136e7	    0x660f1f840000	                    nop word [rax + rax]	     10321	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2
0x40136f0	        0x4c8b5518	            mov r10, qword [rbp + 0x18] 	       704	eval.c	FUNCTION_14	IF_1
0x40136f4	          0x4d85d2	                           test r10, r10	       705	eval.c	FUNCTION_14	IF_1	IF_2
0x40136f7	      0x4c89542468	             mov qword [rsp + 0x68], r10	       704	eval.c	FUNCTION_14	IF_1
0x40136fc	     0xf84a9feffff	                            je 0x40135ab	       705	eval.c	FUNCTION_14	IF_1	IF_2
0x4013702	        0x41803a00	                       cmp byte [r10], 0	       705	eval.c	FUNCTION_14	IF_1	IF_2
0x4013706	     0xf849ffeffff	                            je 0x40135ab	       705	eval.c	FUNCTION_14	IF_1	IF_2
0x401370c	          0x4c89d7	                            mov rdi, r10	       707	eval.c	FUNCTION_14	IF_1	IF_3	CALL_2
0x401370f	      0x4c89542420	             mov qword [rsp + 0x20], r10	       707	eval.c	FUNCTION_14	IF_1	IF_3	CALL_2
0x4013714	      0xe800000000	                          call 0x4013719	       707	eval.c	FUNCTION_14	IF_1	IF_3	CALL_2
0x4013719	            0x6a00	                                  push 0	       707	eval.c	FUNCTION_14	IF_1	IF_3	CALL_2
0x401371b	            0x6a00	                                  push 0	       707	eval.c	FUNCTION_14	IF_1	IF_3	CALL_2
0x401371d	            0x6a01	                                  push 1	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x401371f	          0x4531c9	                            xor r9d, r9d	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4013722	      0xb902000000	                              mov ecx, 2	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4013727	            0x89c6	                            mov esi, eax	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4013729	      0x488d54247c	                   lea rdx, [rsp + 0x7c]	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x401372e	              0x52	                                push rdx	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x401372f	            0x6a00	                                  push 0	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4013731	            0x6a00	                                  push 0	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4013733	      0x4c8b542450	            mov r10, qword [rsp + 0x50] 	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4013738	    0x4c8d8424b000	                    lea r8, [rsp + 0xb0]	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4013740	    0x488d9424a000	                   lea rdx, [rsp + 0xa0]	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4013748	          0x4c89d7	                            mov rdi, r10	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x401374b	      0xe800000000	                          call 0x4013750	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4013750	        0x4883c430	                           add rsp, 0x30	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4013754	            0x85c0	                           test eax, eax	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4013756	     0xf844ffeffff	                            je 0x40135ab	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x401375c	          0x4585ed	                         test r13d, r13d	     10201	eval.c	FUNCTION_189	IF_2
0x401375f	     0xf8413ffffff	                            je 0x4013678	     10201	eval.c	FUNCTION_189	IF_2
0x4013765	          0x4c89ff	                            mov rdi, r15	     10204	eval.c	FUNCTION_189	IF_2	CALL_3
0x4013768	      0xe800000000	                          call 0x401376d	     10204	eval.c	FUNCTION_189	IF_2	CALL_3
0x401376d	      0xc644247400	                mov byte [rsp + 0x74], 0	     10205	eval.c	FUNCTION_189	IF_2
0x4013772	      0x488b542478	            mov rdx, qword [rsp + 0x78] 	     10206	eval.c	FUNCTION_189	IF_2
0x4013777	      0xbf00000000	                              mov edi, 0	     10222	eval.c	FUNCTION_189	CALL_6
0x401377c	      0x488b442470	            mov rax, qword [rsp + 0x70] 	     10206	eval.c	FUNCTION_189	IF_2
0x4013781	        0x48895318	             mov qword [rbx + 0x18], rdx	     10206	eval.c	FUNCTION_189	IF_2
0x4013785	        0x48894310	             mov qword [rbx + 0x10], rax	     10206	eval.c	FUNCTION_189	IF_2
0x4013789	      0xe800000000	                          call 0x401378e	     10222	eval.c	FUNCTION_189	CALL_6
0x401378e	    0x8b0d00000000	            mov ecx, dword [0x04013794] 	     10328	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_13
0x4013794	            0x85c9	                           test ecx, ecx	     10328	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_13
0x4013796	     0xf8436ffffff	                            je 0x40136d2	     10328	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_13
0x401379c	      0xe914feffff	                           jmp 0x40135b5	     10328	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_13
0x40137a1	     0xf1f80000000	                         nop dword [rax]	     10328	eval.c	FUNCTION_190	IF_5	ELSE_3	FOR_2	IF_13
0x40137a8	          0x4c89d7	                            mov rdi, r10	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x40137ab	      0x4889542428	             mov qword [rsp + 0x28], rdx	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x40137b0	      0x4c89542420	             mov qword [rsp + 0x20], r10	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x40137b5	      0xe800000000	                          call 0x40137ba	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x40137ba	            0x6a00	                                  push 0	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x40137bc	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x40137c1	              0x52	                                push rdx	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x40137c2	      0xe956ffffff	                           jmp 0x401371d	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x40137c7	    0x660f1f840000	                    nop word [rax + rax]	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x40137d0	        0x488b4708	                mov rax, qword [rdi + 8]	     10252	eval.c	FUNCTION_190	IF_1	IF_2
0x40137d4	          0x4885c0	                           test rax, rax	     10252	eval.c	FUNCTION_190	IF_1	IF_2
0x40137d7	      0x4889442418	             mov qword [rsp + 0x18], rax	     10252	eval.c	FUNCTION_190	IF_1	IF_2
0x40137dc	     0xf842bfcffff	                            je 0x401340d	     10252	eval.c	FUNCTION_190	IF_1	IF_2
0x40137e2	          0x4531ff	                          xor r15d, r15d	     10239	eval.c	FUNCTION_190
0x40137e5	          0x4585ed	                         test r13d, r13d	     10253	eval.c	FUNCTION_190	IF_1	IF_2	CALL_3
0x40137e8	     0xf856dfcffff	                           jne 0x401345b	     10253	eval.c	FUNCTION_190	IF_1	IF_2	CALL_3
0x40137ee	         0xfbe7848	           movsx edi, byte [rax + 0x48] 	     10253	eval.c	FUNCTION_190	IF_1	IF_2	CALL_3
0x40137f2	        0x488b3424	                    mov rsi, qword [rsp]	     10259	eval.c	FUNCTION_190	ELSE_1	IF_3	IF_4	CALL_4
0x40137f6	      0xba01000000	                              mov edx, 1	     10259	eval.c	FUNCTION_190	ELSE_1	IF_3	IF_4	CALL_4
0x40137fb	      0xe800000000	                          call 0x4013800	     10259	eval.c	FUNCTION_190	ELSE_1	IF_3	IF_4	CALL_4
0x4013800	            0x85c0	                           test eax, eax	     10259	eval.c	FUNCTION_190	ELSE_1	IF_3	IF_4	CALL_4
0x4013802	     0xf8505fcffff	                           jne 0x401340d	     10259	eval.c	FUNCTION_190	ELSE_1	IF_3	IF_4	CALL_4
0x4013808	      0xe94efcffff	                           jmp 0x401345b	     10259	eval.c	FUNCTION_190	ELSE_1	IF_3	IF_4	CALL_4
0x401380d	           0xf1f00	                         nop dword [rax]	     10259	eval.c	FUNCTION_190	ELSE_1	IF_3	IF_4	CALL_4
0x4013810	      0xbe00000000	                              mov esi, 0	       927	eval.c	FUNCTION_22	IF_1	CALL_1
0x4013815	      0xbf00000000	                              mov edi, 0	       927	eval.c	FUNCTION_22	IF_1	CALL_1
0x401381a	      0xe800000000	                          call 0x401381f	       927	eval.c	FUNCTION_22	IF_1	CALL_1
0x401381f	        0x488b5008	                mov rdx, qword [rax + 8]	       928	eval.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x4013823	          0x4885d2	                           test rdx, rdx	       928	eval.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x4013826	     0xf8467040000	                            je 0x4013c93	       928	eval.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x401382c	    0x4881fa000000	                              cmp rdx, 0	       928	eval.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x4013833	     0xf845a040000	                            je 0x4013c93	       928	eval.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x4013839	          0x4889c6	                            mov rsi, rax	       931	eval.c	FUNCTION_22	IF_1	CALL_4
0x401383c	      0xbf00000000	                              mov edi, 0	       931	eval.c	FUNCTION_22	IF_1	CALL_4
0x4013841	      0xe800000000	                          call 0x4013846	       931	eval.c	FUNCTION_22	IF_1	CALL_4
0x4013846	      0xe9aefdffff	                           jmp 0x40135f9	       931	eval.c	FUNCTION_22	IF_1	CALL_4
0x401384b	       0xf1f440000	                   nop dword [rax + rax]	       931	eval.c	FUNCTION_22	IF_1	CALL_4
0x4013850	      0xbe00000000	                              mov esi, 0	       927	eval.c	FUNCTION_22	IF_1	CALL_1
0x4013855	      0xbf00000000	                              mov edi, 0	       927	eval.c	FUNCTION_22	IF_1	CALL_1
0x401385a	      0xe800000000	                          call 0x401385f	       927	eval.c	FUNCTION_22	IF_1	CALL_1
0x401385f	        0x488b5008	                mov rdx, qword [rax + 8]	       928	eval.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x4013863	    0x4881fa000000	                              cmp rdx, 0	       928	eval.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x401386a	     0xf8432040000	                            je 0x4013ca2	       928	eval.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x4013870	          0x4885d2	                           test rdx, rdx	       928	eval.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x4013873	     0xf8429040000	                            je 0x4013ca2	       928	eval.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x4013879	          0x4889c6	                            mov rsi, rax	       931	eval.c	FUNCTION_22	IF_1	CALL_4
0x401387c	      0xbf00000000	                              mov edi, 0	       931	eval.c	FUNCTION_22	IF_1	CALL_4
0x4013881	      0xe800000000	                          call 0x4013886	       931	eval.c	FUNCTION_22	IF_1	CALL_4
0x4013886	      0xe94cfdffff	                           jmp 0x40135d7	       931	eval.c	FUNCTION_22	IF_1	CALL_4
0x401388b	       0xf1f440000	                   nop dword [rax + rax]	       931	eval.c	FUNCTION_22	IF_1	CALL_4
0x4013890	      0xbe00000000	                              mov esi, 0	       912	eval.c	FUNCTION_21	CALL_1
0x4013895	      0xbf00000000	                              mov edi, 0	       912	eval.c	FUNCTION_21	CALL_1
0x401389a	      0xe800000000	                          call 0x401389f	       912	eval.c	FUNCTION_21	CALL_1
0x401389f	      0xe926fcffff	                           jmp 0x40134ca	       912	eval.c	FUNCTION_21	CALL_1
0x40138a4	         0xf1f4000	                         nop dword [rax]	       912	eval.c	FUNCTION_21	CALL_1
0x40138a8	      0xbe00000000	                              mov esi, 0	       912	eval.c	FUNCTION_21	CALL_1
0x40138ad	      0xbf00000000	                              mov edi, 0	       912	eval.c	FUNCTION_21	CALL_1
0x40138b2	      0xe800000000	                          call 0x40138b7	       912	eval.c	FUNCTION_21	CALL_1
0x40138b7	      0xe9d2fbffff	                           jmp 0x401348e	       912	eval.c	FUNCTION_21	CALL_1
0x40138bc	         0xf1f4000	                         nop dword [rax]	       912	eval.c	FUNCTION_21	CALL_1
0x40138c0	        0x488b4210	            mov rax, qword [rdx + 0x10] 	      4864	eval.c	FUNCTION_75
0x40138c4	    0x4c8d90d80000	                   lea r10, [rax + 0xd8]	      4864	eval.c	FUNCTION_75
0x40138cb	          0x4d85d2	                           test r10, r10	       716	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_5
0x40138ce	      0x4c89542468	             mov qword [rsp + 0x68], r10	       715	eval.c	FUNCTION_14	ELSE_1	IF_4	CALL_3
0x40138d3	     0xf84d2fcffff	                            je 0x40135ab	       716	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_5
0x40138d9	      0xe9c3fcffff	                           jmp 0x40135a1	       716	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_5
0x40138de	            0x6690	                                     nop	       716	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_5
0x40138e0	            0x31ff	                            xor edi, edi	       732	eval.c	FUNCTION_14	ELSE_2	IF_9	CALL_10
0x40138e2	      0xba05000000	                              mov edx, 5	       732	eval.c	FUNCTION_14	ELSE_2	IF_9	CALL_10
0x40138e7	      0xbe00000000	                              mov esi, 0	       732	eval.c	FUNCTION_14	ELSE_2	IF_9	CALL_10
0x40138ec	        0x48890c24	                    mov qword [rsp], rcx	       732	eval.c	FUNCTION_14	ELSE_2	IF_9	CALL_10
0x40138f0	      0xe800000000	                          call 0x40138f5	       732	eval.c	FUNCTION_14	ELSE_2	IF_9	CALL_10
0x40138f5	        0x488b0c24	                    mov rcx, qword [rsp]	       732	eval.c	FUNCTION_14	ELSE_2	IF_9	CALL_10
0x40138f9	          0x4889c7	                            mov rdi, rax	       732	eval.c	FUNCTION_14	ELSE_2	IF_9	CALL_10
0x40138fc	          0x4889ce	                            mov rsi, rcx	       732	eval.c	FUNCTION_14	ELSE_2	IF_9	CALL_10
0x40138ff	      0xe800000000	                          call 0x4013904	       732	eval.c	FUNCTION_14	ELSE_2	IF_9	CALL_10
0x4013904	      0xe9a2fcffff	                           jmp 0x40135ab	       732	eval.c	FUNCTION_14	ELSE_2	IF_9	CALL_10
0x4013909	     0xf1f80000000	                         nop dword [rax]	       732	eval.c	FUNCTION_14	ELSE_2	IF_9	CALL_10
0x4013910	        0x410fbe3f	                   movsx edi, byte [r15]	     10259	eval.c	FUNCTION_190	ELSE_1	IF_3	IF_4	CALL_4
0x4013914	      0xe9d9feffff	                           jmp 0x40137f2	     10259	eval.c	FUNCTION_190	ELSE_1	IF_3	IF_4	CALL_4
0x4013919	     0xf1f80000000	                         nop dword [rax]	     10259	eval.c	FUNCTION_190	ELSE_1	IF_3	IF_4	CALL_4
0x4013920	        0x498d4710	                   lea rax, [r15 + 0x10]	     10286	eval.c	FUNCTION_190	IF_5	IF_6
0x4013924	    0xc70500000000	               mov dword [0x0401392e], 2	     10284	eval.c	FUNCTION_190	IF_5	IF_6
0x401392e	          0x4889c7	                            mov rdi, rax	     10287	eval.c	FUNCTION_190	IF_5	IF_6	CALL_9
0x4013931	      0x4889442458	             mov qword [rsp + 0x58], rax	     10286	eval.c	FUNCTION_190	IF_5	IF_6
0x4013936	      0xe800000000	                          call 0x401393b	     10287	eval.c	FUNCTION_190	IF_5	IF_6	CALL_9
0x401393b	        0x498b4718	            mov rax, qword [r15 + 0x18] 	     10288	eval.c	FUNCTION_190	IF_5	IF_6
0x401393f	        0x4d8b6730	            mov r12, qword [r15 + 0x30] 	     10289	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1
0x4013943	            0x85c0	                           test eax, eax	     10289	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1
0x4013945	          0x4189c6	                           mov r14d, eax	     10288	eval.c	FUNCTION_190	IF_5	IF_6
0x4013948	     0xf8e05010000	                           jle 0x4013a53	     10289	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1
0x401394e	      0x4c897c2420	             mov qword [rsp + 0x20], r15	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4013953	       0xf1f440000	                   nop dword [rax + rax]	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4013958	      0x498b5c2408	                mov rbx, qword [r12 + 8]	     10291	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	CALL_10
0x401395d	          0x4885db	                           test rbx, rbx	     10291	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	CALL_10
0x4013960	     0xf84ca020000	                            je 0x4013c30	     10291	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	CALL_10
0x4013966	    0x4881fb000000	                              cmp rbx, 0	     10291	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	CALL_10
0x401396d	     0xf84bd020000	                            je 0x4013c30	     10291	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	CALL_10
0x4013973	        0x4183ee01	                             sub r14d, 1	     10295	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7
0x4013977	          0x4585ed	                         test r13d, r13d	     10297	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_8
0x401397a	            0x7436	                            je 0x40139b2	     10297	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_8
0x401397c	        0x4c8b3c24	                    mov r15, qword [rsp]	     10298	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_8	CALL_12
0x4013980	         0xfbe7bf3	             movsx edi, byte [rbx - 0xd]	     10298	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_8	CALL_12
0x4013984	      0xba01000000	                              mov edx, 1	     10298	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_8	CALL_12
0x4013989	          0x4c89fe	                            mov rsi, r15	     10298	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_8	CALL_12
0x401398c	      0xe800000000	                          call 0x4013991	     10298	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_8	CALL_12
0x4013991	            0x85c0	                           test eax, eax	     10297	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_8
0x4013993	     0xf85ba000000	                           jne 0x4013a53	     10297	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_8
0x4013999	         0xfb67bff	               movzx edi, byte [rbx - 1]	     10299	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_8	CALL_13
0x401399d	      0xba01000000	                              mov edx, 1	     10299	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_8	CALL_13
0x40139a2	          0x4c89fe	                            mov rsi, r15	     10299	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_8	CALL_13
0x40139a5	      0xe800000000	                          call 0x40139aa	     10299	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_8	CALL_13
0x40139aa	            0x85c0	                           test eax, eax	     10299	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_8	CALL_13
0x40139ac	     0xf85a1000000	                           jne 0x4013a53	     10299	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_8	CALL_13
0x40139b2	        0x4c8d7bef	                   lea r15, [rbx - 0x11]	     10301	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	CALL_14
0x40139b6	          0x4889df	                            mov rdi, rbx	     10301	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	CALL_14
0x40139b9	      0xe800000000	                          call 0x40139be	     10301	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	CALL_14
0x40139be	      0xbe00000000	                              mov esi, 0	     10196	eval.c	FUNCTION_189	CALL_1
0x40139c3	          0x4c89ff	                            mov rdi, r15	     10196	eval.c	FUNCTION_189	CALL_1
0x40139c6	    0x488905000000	            mov qword [0x040139cd], rax 	     10301	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	CALL_14
0x40139cd	      0xe800000000	                          call 0x40139d2	     10196	eval.c	FUNCTION_189	CALL_1
0x40139d2	    0x488b05000000	            mov rax, qword [0x040139d9] 	     10197	eval.c	FUNCTION_189
0x40139d9	    0x488b15000000	            mov rdx, qword [0x040139e0] 	     10197	eval.c	FUNCTION_189
0x40139e0	    0x488984248000	             mov qword [rsp + 0x80], rax	     10197	eval.c	FUNCTION_189
0x40139e8	    0x488b05000000	            mov rax, qword [0x040139ef] 	     10198	eval.c	FUNCTION_189
0x40139ef	    0x488994248800	             mov qword [rsp + 0x88], rdx	     10197	eval.c	FUNCTION_189
0x40139f7	    0x488b15000000	            mov rdx, qword [0x040139fe] 	     10198	eval.c	FUNCTION_189
0x40139fe	    0x488984249000	             mov qword [rsp + 0x90], rax	     10198	eval.c	FUNCTION_189
0x4013a06	          0x8b4510	            mov eax, dword [rbp + 0x10] 	       702	eval.c	FUNCTION_14	IF_1
0x4013a09	    0x488994249800	             mov qword [rsp + 0x98], rdx	     10198	eval.c	FUNCTION_189
0x4013a11	          0x83f803	                              cmp eax, 3	       702	eval.c	FUNCTION_14	IF_1
0x4013a14	     0xf844e010000	                            je 0x4013b68	       702	eval.c	FUNCTION_14	IF_1
0x4013a1a	          0x83f804	                              cmp eax, 4	       711	eval.c	FUNCTION_14	ELSE_1	IF_4
0x4013a1d	            0x7549	                           jne 0x4013a68	       711	eval.c	FUNCTION_14	ELSE_1	IF_4
0x4013a1f	        0x488b5518	            mov rdx, qword [rbp + 0x18] 	       713	eval.c	FUNCTION_14	ELSE_1	IF_4
0x4013a23	        0x4c8b5208	                mov r10, qword [rdx + 8]	      4862	eval.c	FUNCTION_75	IF_1
0x4013a27	          0x4d85d2	                           test r10, r10	      4862	eval.c	FUNCTION_75	IF_1
0x4013a2a	     0xf8481020000	                            je 0x4013cb1	      4862	eval.c	FUNCTION_75	IF_1
0x4013a30	      0x4c89542468	             mov qword [rsp + 0x68], r10	       715	eval.c	FUNCTION_14	ELSE_1	IF_4	CALL_3
0x4013a35	        0x41803a00	                       cmp byte [r10], 0	       716	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_5
0x4013a39	     0xf8501020000	                           jne 0x4013c40	       716	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_5
0x4013a3f	      0xbf00000000	                              mov edi, 0	     10222	eval.c	FUNCTION_189	CALL_6
0x4013a44	      0xe800000000	                          call 0x4013a49	     10222	eval.c	FUNCTION_189	CALL_6
0x4013a49	      0xbf00000000	                              mov edi, 0	     10303	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	CALL_16
0x4013a4e	      0xe800000000	                          call 0x4013a53	     10303	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	CALL_16
0x4013a53	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	     10315	eval.c	FUNCTION_190	IF_5	IF_6	CALL_20
0x4013a58	      0xe800000000	                          call 0x4013a5d	     10315	eval.c	FUNCTION_190	IF_5	IF_6	CALL_20
0x4013a5d	      0xe953fbffff	                           jmp 0x40135b5	     10315	eval.c	FUNCTION_190	IF_5	IF_6	CALL_20
0x4013a62	    0x660f1f440000	                    nop word [rax + rax]	     10315	eval.c	FUNCTION_190	IF_5	IF_6	CALL_20
0x4013a68	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       724	eval.c	FUNCTION_14	ELSE_2	CALL_6
0x4013a6d	    0x488db424b000	                   lea rsi, [rsp + 0xb0]	       724	eval.c	FUNCTION_14	ELSE_2	CALL_6
0x4013a75	      0xe800000000	                          call 0x4013a7a	       724	eval.c	FUNCTION_14	ELSE_2	CALL_6
0x4013a7a	          0x4885c0	                           test rax, rax	       725	eval.c	FUNCTION_14	ELSE_2	IF_7
0x4013a7d	      0x4889442468	             mov qword [rsp + 0x68], rax	       724	eval.c	FUNCTION_14	ELSE_2	CALL_6
0x4013a82	            0x74bb	                            je 0x4013a3f	       725	eval.c	FUNCTION_14	ELSE_2	IF_7
0x4013a84	          0x4889c7	                            mov rdi, rax	       727	eval.c	FUNCTION_14	ELSE_2	CALL_7
0x4013a87	      0xe800000000	                          call 0x4013a8c	       727	eval.c	FUNCTION_14	ELSE_2	CALL_7
0x4013a8c	      0x488d742470	                   lea rsi, [rsp + 0x70]	       728	eval.c	FUNCTION_14	ELSE_2	IF_8	CALL_8
0x4013a91	      0x488d7c2468	                   lea rdi, [rsp + 0x68]	       728	eval.c	FUNCTION_14	ELSE_2	IF_8	CALL_8
0x4013a96	      0xba01000000	                              mov edx, 1	       728	eval.c	FUNCTION_14	ELSE_2	IF_8	CALL_8
0x4013a9b	      0x4889442468	             mov qword [rsp + 0x68], rax	       727	eval.c	FUNCTION_14	ELSE_2	CALL_7
0x4013aa0	      0xe800000000	                          call 0x4013aa5	       728	eval.c	FUNCTION_14	ELSE_2	IF_8	CALL_8
0x4013aa5	            0x85c0	                           test eax, eax	       728	eval.c	FUNCTION_14	ELSE_2	IF_8	CALL_8
0x4013aa7	            0x7496	                            je 0x4013a3f	       728	eval.c	FUNCTION_14	ELSE_2	IF_8	CALL_8
0x4013aa9	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	       730	eval.c	FUNCTION_14	ELSE_2	IF_9
0x4013aae	          0x803900	                       cmp byte [rcx], 0	       730	eval.c	FUNCTION_14	ELSE_2	IF_9
0x4013ab1	     0xf8518020000	                           jne 0x4013ccf	       730	eval.c	FUNCTION_14	ELSE_2	IF_9
0x4013ab7	          0x4585ed	                         test r13d, r13d	     10201	eval.c	FUNCTION_189	IF_2
0x4013aba	     0xf8520010000	                           jne 0x4013be0	     10201	eval.c	FUNCTION_189	IF_2
0x4013ac0	      0x488d742468	                   lea rsi, [rsp + 0x68]	     10213	eval.c	FUNCTION_189	ELSE_1	CALL_4
0x4013ac5	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	     10213	eval.c	FUNCTION_189	ELSE_1	CALL_4
0x4013aca	    0xc74424680000	               mov dword [rsp + 0x68], 0	     10210	eval.c	FUNCTION_189	ELSE_1
0x4013ad2	      0xe800000000	                          call 0x4013ad7	     10213	eval.c	FUNCTION_189	ELSE_1	CALL_4
0x4013ad7	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	     10214	eval.c	FUNCTION_189	ELSE_1	CALL_5
0x4013adc	      0x4889442418	             mov qword [rsp + 0x18], rax	     10213	eval.c	FUNCTION_189	ELSE_1	CALL_4
0x4013ae1	      0xe800000000	                          call 0x4013ae6	     10214	eval.c	FUNCTION_189	ELSE_1	CALL_5
0x4013ae6	      0x448b442468	            mov r8d, dword [rsp + 0x68] 	     10217	eval.c	FUNCTION_189	ELSE_1	IF_3
0x4013aeb	      0xbf00000000	                              mov edi, 0	     10222	eval.c	FUNCTION_189	CALL_6
0x4013af0	          0x4585c0	                           test r8d, r8d	     10217	eval.c	FUNCTION_189	ELSE_1	IF_3
0x4013af3	     0xf854bffffff	                           jne 0x4013a44	     10217	eval.c	FUNCTION_189	ELSE_1	IF_3
0x4013af9	      0xe800000000	                          call 0x4013afe	     10222	eval.c	FUNCTION_189	CALL_6
0x4013afe	      0xbf00000000	                              mov edi, 0	     10303	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	CALL_16
0x4013b03	      0xe800000000	                          call 0x4013b08	     10303	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	CALL_16
0x4013b08	    0x8b3500000000	            mov esi, dword [0x04013b0e] 	     10304	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_9
0x4013b0e	      0x488b442418	            mov rax, qword [rsp + 0x18] 	     10304	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_9
0x4013b13	            0x85f6	                           test esi, esi	     10304	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_9
0x4013b15	     0xf8538ffffff	                           jne 0x4013a53	     10304	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_9
0x4013b1b	          0x4885c0	                           test rax, rax	     10306	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_10
0x4013b1e	            0x7531	                           jne 0x4013b51	     10306	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_10
0x4013b20	         0xfb67bff	               movzx edi, byte [rbx - 1]	     10308	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_10	IF_11	CALL_17
0x4013b24	        0x40f6c704	                             test dil, 4	      7655	eval.c	FUNCTION_145	IF_1
0x4013b28	     0xf8531010000	                           jne 0x4013c5f	      7655	eval.c	FUNCTION_145	IF_1
0x4013b2e	        0x488b3424	                    mov rsi, qword [rsp]	     10309	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_10	IF_11	CALL_18
0x4013b32	      0xba01000000	                              mov edx, 1	     10309	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_10	IF_11	CALL_18
0x4013b37	      0xe800000000	                          call 0x4013b3c	     10309	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_10	IF_11	CALL_18
0x4013b3c	            0x85c0	                           test eax, eax	     10309	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_10	IF_11	CALL_18
0x4013b3e	     0xf850fffffff	                           jne 0x4013a53	     10309	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_10	IF_11	CALL_18
0x4013b44	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	     10311	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_10	CALL_19
0x4013b49	          0x4c89fe	                            mov rsi, r15	     10311	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_10	CALL_19
0x4013b4c	      0xe800000000	                          call 0x4013b51	     10311	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_10	CALL_19
0x4013b51	        0x4983c410	                           add r12, 0x10	     10289	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1
0x4013b55	          0x4585f6	                         test r14d, r14d	     10289	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1
0x4013b58	     0xf85fafdffff	                           jne 0x4013958	     10289	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1
0x4013b5e	      0xe9f0feffff	                           jmp 0x4013a53	     10289	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1
0x4013b63	       0xf1f440000	                   nop dword [rax + rax]	     10289	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1
0x4013b68	        0x4c8b5518	            mov r10, qword [rbp + 0x18] 	       704	eval.c	FUNCTION_14	IF_1
0x4013b6c	          0x4d85d2	                           test r10, r10	       705	eval.c	FUNCTION_14	IF_1	IF_2
0x4013b6f	      0x4c89542468	             mov qword [rsp + 0x68], r10	       704	eval.c	FUNCTION_14	IF_1
0x4013b74	     0xf84c5feffff	                            je 0x4013a3f	       705	eval.c	FUNCTION_14	IF_1	IF_2
0x4013b7a	        0x41803a00	                       cmp byte [r10], 0	       705	eval.c	FUNCTION_14	IF_1	IF_2
0x4013b7e	     0xf84bbfeffff	                            je 0x4013a3f	       705	eval.c	FUNCTION_14	IF_1	IF_2
0x4013b84	          0x4c89d7	                            mov rdi, r10	       707	eval.c	FUNCTION_14	IF_1	IF_3	CALL_2
0x4013b87	      0x4c89542418	             mov qword [rsp + 0x18], r10	       707	eval.c	FUNCTION_14	IF_1	IF_3	CALL_2
0x4013b8c	      0xe800000000	                          call 0x4013b91	       707	eval.c	FUNCTION_14	IF_1	IF_3	CALL_2
0x4013b91	            0x6a00	                                  push 0	       707	eval.c	FUNCTION_14	IF_1	IF_3	CALL_2
0x4013b93	            0x6a00	                                  push 0	       707	eval.c	FUNCTION_14	IF_1	IF_3	CALL_2
0x4013b95	            0x6a01	                                  push 1	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4013b97	          0x4531c9	                            xor r9d, r9d	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4013b9a	      0xb902000000	                              mov ecx, 2	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4013b9f	            0x89c6	                            mov esi, eax	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4013ba1	      0x488d54247c	                   lea rdx, [rsp + 0x7c]	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4013ba6	              0x52	                                push rdx	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4013ba7	            0x6a00	                                  push 0	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4013ba9	            0x6a00	                                  push 0	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4013bab	      0x4c8b542448	            mov r10, qword [rsp + 0x48] 	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4013bb0	    0x4c8d8424b000	                    lea r8, [rsp + 0xb0]	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4013bb8	    0x488d9424a000	                   lea rdx, [rsp + 0xa0]	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4013bc0	          0x4c89d7	                            mov rdi, r10	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4013bc3	      0xe800000000	                          call 0x4013bc8	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4013bc8	        0x4883c430	                           add rsp, 0x30	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4013bcc	            0x85c0	                           test eax, eax	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4013bce	     0xf85e3feffff	                           jne 0x4013ab7	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4013bd4	      0xe966feffff	                           jmp 0x4013a3f	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4013bd9	     0xf1f80000000	                         nop dword [rax]	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4013be0	          0x4c89ff	                            mov rdi, r15	     10204	eval.c	FUNCTION_189	IF_2	CALL_3
0x4013be3	      0xe800000000	                          call 0x4013be8	     10204	eval.c	FUNCTION_189	IF_2	CALL_3
0x4013be8	      0xc644247400	                mov byte [rsp + 0x74], 0	     10205	eval.c	FUNCTION_189	IF_2
0x4013bed	      0x488b542478	            mov rdx, qword [rsp + 0x78] 	     10206	eval.c	FUNCTION_189	IF_2
0x4013bf2	      0xbf00000000	                              mov edi, 0	     10222	eval.c	FUNCTION_189	CALL_6
0x4013bf7	      0x488b442470	            mov rax, qword [rsp + 0x70] 	     10206	eval.c	FUNCTION_189	IF_2
0x4013bfc	        0x488953f7	                mov qword [rbx - 9], rdx	     10206	eval.c	FUNCTION_189	IF_2
0x4013c00	        0x488943ef	             mov qword [rbx - 0x11], rax	     10206	eval.c	FUNCTION_189	IF_2
0x4013c04	      0xe800000000	                          call 0x4013c09	     10222	eval.c	FUNCTION_189	CALL_6
0x4013c09	      0xbf00000000	                              mov edi, 0	     10303	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	CALL_16
0x4013c0e	      0xe800000000	                          call 0x4013c13	     10303	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	CALL_16
0x4013c13	    0x448b0d000000	            mov r9d, dword [0x04013c1a] 	     10304	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_9
0x4013c1a	          0x4585c9	                           test r9d, r9d	     10304	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_9
0x4013c1d	     0xf842effffff	                            je 0x4013b51	     10304	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_9
0x4013c23	      0xe92bfeffff	                           jmp 0x4013a53	     10304	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_9
0x4013c28	     0xf1f84000000	                   nop dword [rax + rax]	     10304	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1	IF_7	IF_9
0x4013c30	        0x4983c410	                           add r12, 0x10	     10289	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1
0x4013c34	      0xe91ffdffff	                           jmp 0x4013958	     10289	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1
0x4013c39	     0xf1f80000000	                         nop dword [rax]	     10289	eval.c	FUNCTION_190	IF_5	IF_6	FOR_1
0x4013c40	          0x4c89d7	                            mov rdi, r10	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4013c43	      0x4889542428	             mov qword [rsp + 0x28], rdx	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4013c48	      0x4c89542418	             mov qword [rsp + 0x18], r10	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4013c4d	      0xe800000000	                          call 0x4013c52	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4013c52	            0x6a00	                                  push 0	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4013c54	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4013c59	              0x52	                                push rdx	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4013c5a	      0xe936ffffff	                           jmp 0x4013b95	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4013c5f	        0x488b3424	                    mov rsi, qword [rsp]	      7657	eval.c	FUNCTION_145	IF_1	CALL_2
0x4013c63	            0x31ff	                            xor edi, edi	      7657	eval.c	FUNCTION_145	IF_1	CALL_2
0x4013c65	      0xba05000000	                              mov edx, 5	      7657	eval.c	FUNCTION_145	IF_1	CALL_2
0x4013c6a	      0xe800000000	                          call 0x4013c6f	      7657	eval.c	FUNCTION_145	IF_1	CALL_2
0x4013c6f	            0x31ff	                            xor edi, edi	      7657	eval.c	FUNCTION_145	IF_1	CALL_2
0x4013c71	          0x4889c3	                            mov rbx, rax	      7657	eval.c	FUNCTION_145	IF_1	CALL_2
0x4013c74	      0xba05000000	                              mov edx, 5	      7657	eval.c	FUNCTION_145	IF_1	CALL_2
0x4013c79	      0xbe00000000	                              mov esi, 0	      7657	eval.c	FUNCTION_145	IF_1	CALL_2
0x4013c7e	      0xe800000000	                          call 0x4013c83	      7657	eval.c	FUNCTION_145	IF_1	CALL_2
0x4013c83	          0x4889de	                            mov rsi, rbx	      7657	eval.c	FUNCTION_145	IF_1	CALL_2
0x4013c86	          0x4889c7	                            mov rdi, rax	      7657	eval.c	FUNCTION_145	IF_1	CALL_2
0x4013c89	      0xe800000000	                          call 0x4013c8e	      7657	eval.c	FUNCTION_145	IF_1	CALL_2
0x4013c8e	      0xe9c0fdffff	                           jmp 0x4013a53	      7657	eval.c	FUNCTION_145	IF_1	CALL_2
0x4013c93	      0xbf00000000	                              mov edi, 0	       929	eval.c	FUNCTION_22	IF_1	CALL_3
0x4013c98	      0xe800000000	                          call 0x4013c9d	       929	eval.c	FUNCTION_22	IF_1	CALL_3
0x4013c9d	      0xe957f9ffff	                           jmp 0x40135f9	       929	eval.c	FUNCTION_22	IF_1	CALL_3
0x4013ca2	      0xbf00000000	                              mov edi, 0	       929	eval.c	FUNCTION_22	IF_1	CALL_3
0x4013ca7	      0xe800000000	                          call 0x4013cac	       929	eval.c	FUNCTION_22	IF_1	CALL_3
0x4013cac	      0xe926f9ffff	                           jmp 0x40135d7	       929	eval.c	FUNCTION_22	IF_1	CALL_3
0x4013cb1	        0x488b4210	            mov rax, qword [rdx + 0x10] 	      4864	eval.c	FUNCTION_75
0x4013cb5	    0x4c8d90d80000	                   lea r10, [rax + 0xd8]	      4864	eval.c	FUNCTION_75
0x4013cbc	          0x4d85d2	                           test r10, r10	       716	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_5
0x4013cbf	      0x4c89542468	             mov qword [rsp + 0x68], r10	       715	eval.c	FUNCTION_14	ELSE_1	IF_4	CALL_3
0x4013cc4	     0xf8475fdffff	                            je 0x4013a3f	       716	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_5
0x4013cca	      0xe966fdffff	                           jmp 0x4013a35	       716	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_5
0x4013ccf	            0x31ff	                            xor edi, edi	       732	eval.c	FUNCTION_14	ELSE_2	IF_9	CALL_10
0x4013cd1	      0xba05000000	                              mov edx, 5	       732	eval.c	FUNCTION_14	ELSE_2	IF_9	CALL_10
0x4013cd6	      0xbe00000000	                              mov esi, 0	       732	eval.c	FUNCTION_14	ELSE_2	IF_9	CALL_10
0x4013cdb	        0x48890c24	                    mov qword [rsp], rcx	       732	eval.c	FUNCTION_14	ELSE_2	IF_9	CALL_10
0x4013cdf	      0xe800000000	                          call 0x4013ce4	       732	eval.c	FUNCTION_14	ELSE_2	IF_9	CALL_10
0x4013ce4	        0x488b0c24	                    mov rcx, qword [rsp]	       732	eval.c	FUNCTION_14	ELSE_2	IF_9	CALL_10
0x4013ce8	          0x4889c7	                            mov rdi, rax	       732	eval.c	FUNCTION_14	ELSE_2	IF_9	CALL_10
0x4013ceb	          0x4889ce	                            mov rsi, rcx	       732	eval.c	FUNCTION_14	ELSE_2	IF_9	CALL_10
0x4013cee	      0xe800000000	                          call 0x4013cf3	       732	eval.c	FUNCTION_14	ELSE_2	IF_9	CALL_10
0x4013cf3	      0xe947fdffff	                           jmp 0x4013a3f	       732	eval.c	FUNCTION_14	ELSE_2	IF_9	CALL_10
0x4013cf8	      0xe800000000	                  call section_end..text	     10343	eval.c	FUNCTION_190
var2fpos	functions,0:SWITCH,0:IF,18:DO,0:ELSE,3:WHILE,0:CALL,13:FOR,0	173
0x4005310	              0x55	                                push rbp	      5905	eval.c	FUNCTION_93
0x4005311	              0x53	                                push rbx	      5905	eval.c	FUNCTION_93
0x4005312	        0x4883ec18	                           sub rsp, 0x18	      5905	eval.c	FUNCTION_93
0x4005316	    0x64488b042528	                mov rax, qword fs:[0x28]	      5905	eval.c	FUNCTION_93
0x400531f	      0x4889442408	                mov qword [rsp + 8], rax	      5905	eval.c	FUNCTION_93
0x4005324	            0x31c0	                            xor eax, eax	      5905	eval.c	FUNCTION_93
0x4005326	          0x833f05	                      cmp dword [rdi], 5	      5911	eval.c	FUNCTION_93	IF_1
0x4005329	     0xf8481000000	                            je 0x40053b0	      5911	eval.c	FUNCTION_93	IF_1
0x400532f	            0x89f3	                            mov ebx, esi	      5911	eval.c	FUNCTION_93	IF_1
0x4005331	      0xbe00000000	                              mov esi, 0	      7098	eval.c	FUNCTION_129	CALL_1
0x4005336	          0x4889d5	                            mov rbp, rdx	      7098	eval.c	FUNCTION_129	CALL_1
0x4005339	      0xe800000000	                          call 0x400533e	      7098	eval.c	FUNCTION_129	CALL_1
0x400533e	          0x4885c0	                           test rax, rax	      5956	eval.c	FUNCTION_93	IF_8
0x4005341	     0xf84a9000000	                            je 0x40053f0	      5956	eval.c	FUNCTION_93	IF_8
0x4005347	           0xfb630	                   movzx esi, byte [rax]	      5958	eval.c	FUNCTION_93	IF_9
0x400534a	        0x4080fe2e	                           cmp sil, 0x2e	      5958	eval.c	FUNCTION_93	IF_9
0x400534e	     0xf84d5000000	                            je 0x4005429	      5958	eval.c	FUNCTION_93	IF_9
0x4005354	        0x4080fe76	                           cmp sil, 0x76	      5960	eval.c	FUNCTION_93	IF_10
0x4005358	     0xf84b2000000	                            je 0x4005410	      5960	eval.c	FUNCTION_93	IF_10
0x400535e	        0x4080fe27	                           cmp sil, 0x27	      5966	eval.c	FUNCTION_93	IF_12
0x4005362	     0xf8418020000	                            je 0x4005580	      5966	eval.c	FUNCTION_93	IF_12
0x4005368	    0xc70500000000	               mov dword [0x04005372], 0	      5975	eval.c	FUNCTION_93
0x4005372	           0xfb610	                   movzx edx, byte [rax]	      5978	eval.c	FUNCTION_93	IF_14
0x4005375	          0x80fa77	                            cmp dl, 0x77	      5978	eval.c	FUNCTION_93	IF_14
0x4005378	     0xf8472010000	                            je 0x40054f0	      5978	eval.c	FUNCTION_93	IF_14
0x400537e	          0x80fa24	                            cmp dl, 0x24	      5997	eval.c	FUNCTION_93	ELSE_2	IF_17
0x4005381	            0x756d	                           jne 0x40053f0	      5997	eval.c	FUNCTION_93	ELSE_2	IF_17
0x4005383	            0x85db	                           test ebx, ebx	      5999	eval.c	FUNCTION_93	ELSE_2	IF_17	IF_18
0x4005385	     0xf84c5010000	                            je 0x4005550	      5999	eval.c	FUNCTION_93	ELSE_2	IF_17	IF_18
0x400538b	    0x488b05000000	            mov rax, qword [0x04005392] 	      6001	eval.c	FUNCTION_93	ELSE_2	IF_17	IF_18
0x4005392	          0x488b00	                    mov rax, qword [rax]	      6001	eval.c	FUNCTION_93	ELSE_2	IF_17	IF_18
0x4005395	    0xc70500000000	               mov dword [0x0400539f], 0	      6002	eval.c	FUNCTION_93	ELSE_2	IF_17	IF_18
0x400539f	    0x488905000000	            mov qword [0x040053a6], rax 	      6001	eval.c	FUNCTION_93	ELSE_2	IF_17	IF_18
0x40053a6	      0xb800000000	                              mov eax, 0	      6009	eval.c	FUNCTION_93	ELSE_2	IF_17
0x40053ab	            0xeb45	                           jmp 0x40053f2	      6009	eval.c	FUNCTION_93	ELSE_2	IF_17
0x40053ad	           0xf1f00	                         nop dword [rax]	      6009	eval.c	FUNCTION_93	ELSE_2	IF_17
0x40053b0	        0x488b5f08	                mov rbx, qword [rdi + 8]	      5918	eval.c	FUNCTION_93	IF_1
0x40053b4	    0xc74424040000	                  mov dword [rsp + 4], 0	      5915	eval.c	FUNCTION_93	IF_1
0x40053bc	          0x4885db	                           test rbx, rbx	      5919	eval.c	FUNCTION_93	IF_1	IF_2
0x40053bf	            0x742f	                            je 0x40053f0	      5919	eval.c	FUNCTION_93	IF_1	IF_2
0x40053c1	      0x488d542404	                      lea rdx, [rsp + 4]	      5923	eval.c	FUNCTION_93	IF_1	CALL_1
0x40053c6	            0x31f6	                            xor esi, esi	      5923	eval.c	FUNCTION_93	IF_1	CALL_1
0x40053c8	          0x4889df	                            mov rdi, rbx	      5923	eval.c	FUNCTION_93	IF_1	CALL_1
0x40053cb	      0xe800000000	                          call 0x40053d0	      5923	eval.c	FUNCTION_93	IF_1	CALL_1
0x40053d0	        0x8b7c2404	                mov edi, dword [rsp + 4]	      5924	eval.c	FUNCTION_93	IF_1	IF_3
0x40053d4	    0x488905000000	            mov qword [0x040053db], rax 	      5923	eval.c	FUNCTION_93	IF_1	CALL_1
0x40053db	            0x85ff	                           test edi, edi	      5924	eval.c	FUNCTION_93	IF_1	IF_3
0x40053dd	            0x7511	                           jne 0x40053f0	      5924	eval.c	FUNCTION_93	IF_1	IF_3
0x40053df	          0x4885c0	                           test rax, rax	      5924	eval.c	FUNCTION_93	IF_1	IF_3
0x40053e2	            0x7e0c	                           jle 0x40053f0	      5924	eval.c	FUNCTION_93	IF_1	IF_3
0x40053e4	    0x488b15000000	            mov rdx, qword [0x040053eb] 	      5924	eval.c	FUNCTION_93	IF_1	IF_3
0x40053eb	          0x483b02	                    cmp rax, qword [rdx]	      5924	eval.c	FUNCTION_93	IF_1	IF_3
0x40053ee	            0x7e50	                           jle 0x4005440	      5924	eval.c	FUNCTION_93	IF_1	IF_3
0x40053f0	            0x31c0	                            xor eax, eax	      5957	eval.c	FUNCTION_93	IF_8
0x40053f2	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      6012	eval.c	FUNCTION_93
0x40053f7	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      6012	eval.c	FUNCTION_93
0x4005400	     0xf850e020000	                           jne 0x4005614	      6012	eval.c	FUNCTION_93
0x4005406	        0x4883c418	                           add rsp, 0x18	      6012	eval.c	FUNCTION_93
0x400540a	              0x5b	                                 pop rbx	      6012	eval.c	FUNCTION_93
0x400540b	              0x5d	                                 pop rbp	      6012	eval.c	FUNCTION_93
0x400540c	              0xc3	                                     ret	      6012	eval.c	FUNCTION_93
0x400540d	           0xf1f00	                         nop dword [rax]	      6012	eval.c	FUNCTION_93
0x4005410	        0x80780100	                   cmp byte [rax + 1], 0	      5960	eval.c	FUNCTION_93	IF_10
0x4005414	     0xf854effffff	                           jne 0x4005368	      5960	eval.c	FUNCTION_93	IF_10
0x400541a	    0x8b1500000000	            mov edx, dword [0x04005420] 	      5962	eval.c	FUNCTION_93	IF_10	IF_11
0x4005420	      0xb800000000	                              mov eax, 0	      5963	eval.c	FUNCTION_93	IF_10	IF_11
0x4005425	            0x85d2	                           test edx, edx	      5962	eval.c	FUNCTION_93	IF_10	IF_11
0x4005427	            0x75c9	                           jne 0x40053f2	      5962	eval.c	FUNCTION_93	IF_10	IF_11
0x4005429	    0x488b05000000	            mov rax, qword [0x04005430] 	      5959	eval.c	FUNCTION_93	IF_9
0x4005430	        0x4883c038	                           add rax, 0x38	      5959	eval.c	FUNCTION_93	IF_9
0x4005434	            0xebbc	                           jmp 0x40053f2	      5959	eval.c	FUNCTION_93	IF_9
0x4005436	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5959	eval.c	FUNCTION_93	IF_9
0x4005440	      0x488d542404	                      lea rdx, [rsp + 4]	      5928	eval.c	FUNCTION_93	IF_1	CALL_2
0x4005445	      0xbe01000000	                              mov esi, 1	      5928	eval.c	FUNCTION_93	IF_1	CALL_2
0x400544a	          0x4889df	                            mov rdi, rbx	      5928	eval.c	FUNCTION_93	IF_1	CALL_2
0x400544d	      0xe800000000	                          call 0x4005452	      5928	eval.c	FUNCTION_93	IF_1	CALL_2
0x4005452	        0x8b742404	                mov esi, dword [rsp + 4]	      5929	eval.c	FUNCTION_93	IF_1	IF_4
0x4005456	    0x890500000000	            mov dword [0x0400545c], eax 	      5928	eval.c	FUNCTION_93	IF_1	CALL_2
0x400545c	            0x85f6	                           test esi, esi	      5929	eval.c	FUNCTION_93	IF_1	IF_4
0x400545e	            0x7590	                           jne 0x40053f0	      5929	eval.c	FUNCTION_93	IF_1	IF_4
0x4005460	    0x488b3d000000	            mov rdi, qword [0x04005467] 	      5931	eval.c	FUNCTION_93	IF_1	CALL_4
0x4005467	      0xe800000000	                          call 0x400546c	      5931	eval.c	FUNCTION_93	IF_1	CALL_4
0x400546c	          0x4889c7	                            mov rdi, rax	      5931	eval.c	FUNCTION_93	IF_1	CALL_4
0x400546f	      0xe800000000	                          call 0x4005474	      5931	eval.c	FUNCTION_93	IF_1	CALL_4
0x4005474	      0xbe01000000	                              mov esi, 1	      5934	eval.c	FUNCTION_93	IF_1	CALL_5
0x4005479	          0x4889df	                            mov rdi, rbx	      5934	eval.c	FUNCTION_93	IF_1	CALL_5
0x400547c	          0x4889c5	                            mov rbp, rax	      5931	eval.c	FUNCTION_93	IF_1	CALL_4
0x400547f	      0xe800000000	                          call 0x4005484	      5934	eval.c	FUNCTION_93	IF_1	CALL_5
0x4005484	          0x4885c0	                           test rax, rax	      5935	eval.c	FUNCTION_93	IF_1	IF_5
0x4005487	            0x740a	                            je 0x4005493	      5935	eval.c	FUNCTION_93	IF_1	IF_5
0x4005489	        0x83781002	               cmp dword [rax + 0x10], 2	      5935	eval.c	FUNCTION_93	IF_1	IF_5
0x400548d	     0xf841f010000	                            je 0x40055b2	      5935	eval.c	FUNCTION_93	IF_1	IF_5
0x4005493	    0x8b1500000000	            mov edx, dword [0x04005499] 	      5941	eval.c	FUNCTION_93	IF_1	IF_6
0x4005499	            0x85d2	                           test edx, edx	      5941	eval.c	FUNCTION_93	IF_1	IF_6
0x400549b	     0xf844fffffff	                            je 0x40053f0	      5941	eval.c	FUNCTION_93	IF_1	IF_6
0x40054a1	          0x83c501	                              add ebp, 1	      5941	eval.c	FUNCTION_93	IF_1	IF_6
0x40054a4	            0x39ea	                            cmp edx, ebp	      5941	eval.c	FUNCTION_93	IF_1	IF_6
0x40054a6	     0xf8f44ffffff	                            jg 0x40053f0	      5941	eval.c	FUNCTION_93	IF_1	IF_6
0x40054ac	          0x83ea01	                              sub edx, 1	      5943	eval.c	FUNCTION_93	IF_1
0x40054af	      0xbe02000000	                              mov esi, 2	      5947	eval.c	FUNCTION_93	IF_1	CALL_7
0x40054b4	          0x4889df	                            mov rdi, rbx	      5947	eval.c	FUNCTION_93	IF_1	CALL_7
0x40054b7	    0x891500000000	            mov dword [0x040054bd], edx 	      5943	eval.c	FUNCTION_93	IF_1
0x40054bd	      0x488d542404	                      lea rdx, [rsp + 4]	      5947	eval.c	FUNCTION_93	IF_1	CALL_7
0x40054c2	      0xe800000000	                          call 0x40054c7	      5947	eval.c	FUNCTION_93	IF_1	CALL_7
0x40054c7	        0x8b4c2404	                mov ecx, dword [rsp + 4]	      5948	eval.c	FUNCTION_93	IF_1	IF_7
0x40054cb	    0x890500000000	            mov dword [0x040054d1], eax 	      5947	eval.c	FUNCTION_93	IF_1	CALL_7
0x40054d1	      0xb800000000	                              mov eax, 0	      5952	eval.c	FUNCTION_93	IF_1
0x40054d6	            0x85c9	                           test ecx, ecx	      5948	eval.c	FUNCTION_93	IF_1	IF_7
0x40054d8	     0xf8414ffffff	                            je 0x40053f2	      5948	eval.c	FUNCTION_93	IF_1	IF_7
0x40054de	    0xc70500000000	               mov dword [0x040054e8], 0	      5949	eval.c	FUNCTION_93	IF_1	IF_7
0x40054e8	      0xe905ffffff	                           jmp 0x40053f2	      5949	eval.c	FUNCTION_93	IF_1	IF_7
0x40054ed	           0xf1f00	                         nop dword [rax]	      5949	eval.c	FUNCTION_93	IF_1	IF_7
0x40054f0	            0x85db	                           test ebx, ebx	      5978	eval.c	FUNCTION_93	IF_14
0x40054f2	     0xf84f8feffff	                            je 0x40053f0	      5978	eval.c	FUNCTION_93	IF_14
0x40054f8	    0xc70500000000	               mov dword [0x04005502], 0	      5980	eval.c	FUNCTION_93	IF_14
0x4005502	         0xfb64001	               movzx eax, byte [rax + 1]	      5981	eval.c	FUNCTION_93	IF_14	IF_15
0x4005506	            0x3c30	                            cmp al, 0x30	      5981	eval.c	FUNCTION_93	IF_14	IF_15
0x4005508	     0xf84da000000	                            je 0x40055e8	      5981	eval.c	FUNCTION_93	IF_14	IF_15
0x400550e	            0x3c24	                            cmp al, 0x24	      5989	eval.c	FUNCTION_93	IF_14	ELSE_1	IF_16
0x4005510	     0xf85dafeffff	                           jne 0x40053f0	      5989	eval.c	FUNCTION_93	IF_14	ELSE_1	IF_16
0x4005516	      0xe800000000	                          call 0x400551b	      5991	eval.c	FUNCTION_93	IF_14	ELSE_1	IF_16	CALL_11
0x400551b	    0x488b05000000	            mov rax, qword [0x04005522] 	      5993	eval.c	FUNCTION_93	IF_14	ELSE_1	IF_16
0x4005522	    0x488b90e80000	            mov rdx, qword [rax + 0xe8] 	      5993	eval.c	FUNCTION_93	IF_14	ELSE_1	IF_16
0x4005529	        0x488d42ff	                      lea rax, [rdx - 1]	      5993	eval.c	FUNCTION_93	IF_14	ELSE_1	IF_16
0x400552d	          0x4885d2	                           test rdx, rdx	      5993	eval.c	FUNCTION_93	IF_14	ELSE_1	IF_16
0x4005530	      0xba00000000	                              mov edx, 0	      5993	eval.c	FUNCTION_93	IF_14	ELSE_1	IF_16
0x4005535	        0x480f4ec2	                         cmovle rax, rdx	      5993	eval.c	FUNCTION_93	IF_14	ELSE_1	IF_16
0x4005539	    0x488905000000	            mov qword [0x04005540], rax 	      5993	eval.c	FUNCTION_93	IF_14	ELSE_1	IF_16
0x4005540	      0xb800000000	                              mov eax, 0	      5994	eval.c	FUNCTION_93	IF_14	ELSE_1	IF_16
0x4005545	      0xe9a8feffff	                           jmp 0x40053f2	      5994	eval.c	FUNCTION_93	IF_14	ELSE_1	IF_16
0x400554a	    0x660f1f440000	                    nop word [rax + rax]	      5994	eval.c	FUNCTION_93	IF_14	ELSE_1	IF_16
0x4005550	    0x488b05000000	            mov rax, qword [0x04005557] 	      6006	eval.c	FUNCTION_93	ELSE_2	IF_17	ELSE_3
0x4005557	        0x488b4038	            mov rax, qword [rax + 0x38] 	      6006	eval.c	FUNCTION_93	ELSE_2	IF_17	ELSE_3
0x400555b	    0x488905000000	            mov qword [0x04005562], rax 	      6006	eval.c	FUNCTION_93	ELSE_2	IF_17	ELSE_3
0x4005562	      0xe800000000	                          call 0x4005567	      6007	eval.c	FUNCTION_93	ELSE_2	IF_17	ELSE_3	CALL_13
0x4005567	          0x4889c7	                            mov rdi, rax	      6007	eval.c	FUNCTION_93	ELSE_2	IF_17	ELSE_3	CALL_13
0x400556a	      0xe800000000	                          call 0x400556f	      6007	eval.c	FUNCTION_93	ELSE_2	IF_17	ELSE_3	CALL_13
0x400556f	    0x890500000000	            mov dword [0x04005575], eax 	      6007	eval.c	FUNCTION_93	ELSE_2	IF_17	ELSE_3	CALL_13
0x4005575	      0xb800000000	                              mov eax, 0	      6009	eval.c	FUNCTION_93	ELSE_2	IF_17
0x400557a	      0xe973feffff	                           jmp 0x40053f2	      6009	eval.c	FUNCTION_93	ELSE_2	IF_17
0x400557f	              0x90	                                     nop	      6009	eval.c	FUNCTION_93	ELSE_2	IF_17
0x4005580	         0xfb67001	               movzx esi, byte [rax + 1]	      5968	eval.c	FUNCTION_93	IF_12	CALL_9
0x4005584	    0x488b3d000000	            mov rdi, qword [0x0400558b] 	      5968	eval.c	FUNCTION_93	IF_12	CALL_9
0x400558b	            0x31d2	                            xor edx, edx	      5968	eval.c	FUNCTION_93	IF_12	CALL_9
0x400558d	          0x4889e9	                            mov rcx, rbp	      5968	eval.c	FUNCTION_93	IF_12	CALL_9
0x4005590	      0xe800000000	                          call 0x4005595	      5968	eval.c	FUNCTION_93	IF_12	CALL_9
0x4005595	        0x488d50ff	                      lea rdx, [rax - 1]	      5969	eval.c	FUNCTION_93	IF_12	IF_13
0x4005599	        0x4883fafd	             cmp rdx, 0xfffffffffffffffd	      5969	eval.c	FUNCTION_93	IF_12	IF_13
0x400559d	     0xf874dfeffff	                            ja 0x40053f0	      5969	eval.c	FUNCTION_93	IF_12	IF_13
0x40055a3	        0x48833800	                      cmp qword [rax], 0	      5969	eval.c	FUNCTION_93	IF_12	IF_13
0x40055a7	     0xf8f45feffff	                            jg 0x40053f2	      5969	eval.c	FUNCTION_93	IF_12	IF_13
0x40055ad	      0xe93efeffff	                           jmp 0x40053f0	      5969	eval.c	FUNCTION_93	IF_12	IF_13
0x40055b2	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5936	eval.c	FUNCTION_93	IF_1	IF_5
0x40055b6	          0x4885c0	                           test rax, rax	      5936	eval.c	FUNCTION_93	IF_1	IF_5
0x40055b9	     0xf84d4feffff	                            je 0x4005493	      5936	eval.c	FUNCTION_93	IF_1	IF_5
0x40055bf	          0x803824	                    cmp byte [rax], 0x24	      5937	eval.c	FUNCTION_93	IF_1	IF_5	CALL_6
0x40055c2	     0xf85cbfeffff	                           jne 0x4005493	      5937	eval.c	FUNCTION_93	IF_1	IF_5	CALL_6
0x40055c8	        0x80780100	                   cmp byte [rax + 1], 0	      5937	eval.c	FUNCTION_93	IF_1	IF_5	CALL_6
0x40055cc	     0xf85c1feffff	                           jne 0x4005493	      5937	eval.c	FUNCTION_93	IF_1	IF_5	CALL_6
0x40055d2	          0x8d5501	                      lea edx, [rbp + 1]	      5938	eval.c	FUNCTION_93	IF_1	IF_5
0x40055d5	            0x85d2	                           test edx, edx	      5941	eval.c	FUNCTION_93	IF_1	IF_6
0x40055d7	    0x891500000000	            mov dword [0x040055dd], edx 	      5938	eval.c	FUNCTION_93	IF_1	IF_5
0x40055dd	     0xf85c9feffff	                           jne 0x40054ac	      5941	eval.c	FUNCTION_93	IF_1	IF_6
0x40055e3	      0xe908feffff	                           jmp 0x40053f0	      5941	eval.c	FUNCTION_93	IF_1	IF_6
0x40055e8	      0xe800000000	                          call 0x40055ed	      5983	eval.c	FUNCTION_93	IF_14	IF_15	CALL_10
0x40055ed	    0x488b15000000	            mov rdx, qword [0x040055f4] 	      5986	eval.c	FUNCTION_93	IF_14	IF_15
0x40055f4	      0xb801000000	                              mov eax, 1	      5986	eval.c	FUNCTION_93	IF_14	IF_15
0x40055f9	      0x48837a7800	               cmp qword [rdx + 0x78], 0	      5986	eval.c	FUNCTION_93	IF_14	IF_15
0x40055fe	      0x480f4f4278	           cmovg rax, qword [rdx + 0x78]	      5986	eval.c	FUNCTION_93	IF_14	IF_15
0x4005603	    0x488905000000	            mov qword [0x0400560a], rax 	      5986	eval.c	FUNCTION_93	IF_14	IF_15
0x400560a	      0xb800000000	                              mov eax, 0	      5987	eval.c	FUNCTION_93	IF_14	IF_15
0x400560f	      0xe9defdffff	                           jmp 0x40053f2	      5987	eval.c	FUNCTION_93	IF_14	IF_15
0x4005614	      0xe800000000	                          call 0x4005619	      6012	eval.c	FUNCTION_93
ex_echo	functions,0:SWITCH,0:IF,14:DO,0:ELSE,4:WHILE,1:CALL,19:FOR,1	193
0x400ebd0	            0x4155	                                push r13	      8009	eval.c	FUNCTION_152
0x400ebd2	            0x4154	                                push r12	      8009	eval.c	FUNCTION_152
0x400ebd4	          0x4989fc	                            mov r12, rdi	      8009	eval.c	FUNCTION_152
0x400ebd7	              0x55	                                push rbp	      8009	eval.c	FUNCTION_152
0x400ebd8	              0x53	                                push rbx	      8009	eval.c	FUNCTION_152
0x400ebd9	        0x4883ec78	                           sub rsp, 0x78	      8009	eval.c	FUNCTION_152
0x400ebdd	          0x488b1f	                    mov rbx, qword [rdi]	      8010	eval.c	FUNCTION_152
0x400ebe0	    0x64488b042528	                mov rax, qword fs:[0x28]	      8009	eval.c	FUNCTION_152
0x400ebe9	      0x4889442468	             mov qword [rsp + 0x68], rax	      8009	eval.c	FUNCTION_152
0x400ebee	            0x31c0	                            xor eax, eax	      8009	eval.c	FUNCTION_152
0x400ebf0	          0x8b4730	            mov eax, dword [rdi + 0x30] 	      8018	eval.c	FUNCTION_152	IF_1
0x400ebf3	        0x48891c24	                    mov qword [rsp], rbx	      8010	eval.c	FUNCTION_152
0x400ebf7	            0x85c0	                           test eax, eax	      8018	eval.c	FUNCTION_152	IF_1
0x400ebf9	            0x7407	                            je 0x400ec02	      8018	eval.c	FUNCTION_152	IF_1
0x400ebfb	    0x830500000000	               add dword [0x0400ec02], 1	      8019	eval.c	FUNCTION_152	IF_1
0x400ec02	           0xfb613	                   movzx edx, byte [rbx]	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ec05	            0x84d2	                             test dl, dl	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ec07	        0x400f95c6	                               setne sil	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ec0b	          0x80fa7c	                            cmp dl, 0x7c	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ec0e	           0xf95c1	                                setne cl	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ec11	          0x4084ce	                            test sil, cl	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ec14	     0xf8467020000	                            je 0x400ee81	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ec1a	          0x80fa0a	                             cmp dl, 0xa	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ec1d	     0xf845e020000	                            je 0x400ee81	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ec23	    0x8b1500000000	            mov edx, dword [0x0400ec29] 	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ec29	            0x85d2	                           test edx, edx	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ec2b	     0xf8550020000	                           jne 0x400ee81	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ec31	    0x41bd01000000	                             mov r13d, 1	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ec37	      0xbd01000000	                              mov ebp, 1	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ec3c	         0xf1f4000	                         nop dword [rax]	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ec40	            0x31d2	                            xor edx, edx	      8027	eval.c	FUNCTION_152	WHILE_1	IF_2	CALL_1
0x400ec42	      0x488d742410	                   lea rsi, [rsp + 0x10]	      8027	eval.c	FUNCTION_152	WHILE_1	IF_2	CALL_1
0x400ec47	            0x85c0	                           test eax, eax	      8027	eval.c	FUNCTION_152	WHILE_1	IF_2	CALL_1
0x400ec49	           0xf94c2	                                 sete dl	      8027	eval.c	FUNCTION_152	WHILE_1	IF_2	CALL_1
0x400ec4c	          0x4889e7	                            mov rdi, rsp	      8027	eval.c	FUNCTION_152	WHILE_1	IF_2	CALL_1
0x400ec4f	    0x892d00000000	            mov dword [0x0400ec55], ebp 	      8024	eval.c	FUNCTION_152	WHILE_1
0x400ec55	      0xe800000000	                          call 0x400ec5a	      8027	eval.c	FUNCTION_152	WHILE_1	IF_2	CALL_1
0x400ec5a	            0x85c0	                           test eax, eax	      8027	eval.c	FUNCTION_152	WHILE_1	IF_2	CALL_1
0x400ec5c	     0xf84af010000	                            je 0x400ee11	      8027	eval.c	FUNCTION_152	WHILE_1	IF_2	CALL_1
0x400ec62	      0x458b442430	            mov r8d, dword [r12 + 0x30] 	      8041	eval.c	FUNCTION_152	WHILE_1	IF_4
0x400ec67	    0xc70500000000	               mov dword [0x0400ec71], 0	      8039	eval.c	FUNCTION_152	WHILE_1
0x400ec71	          0x4585c0	                           test r8d, r8d	      8041	eval.c	FUNCTION_152	WHILE_1	IF_4
0x400ec74	     0xf85f3000000	                           jne 0x400ed6d	      8041	eval.c	FUNCTION_152	WHILE_1	IF_4
0x400ec7a	          0x4585ed	                         test r13d, r13d	      8043	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_5
0x400ec7d	     0xf846d010000	                            je 0x400edf0	      8043	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_5
0x400ec83	    0x41837c24207f	           cmp dword [r12 + 0x20], 0x7f 	      8048	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_5	IF_6
0x400ec89	     0xf8411020000	                            je 0x400eea0	      8048	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_5	IF_6
0x400ec8f	        0x4883ec08	                              sub rsp, 8	      5742	eval.c	FUNCTION_88	CALL_1
0x400ec93	    0x8b0500000000	            mov eax, dword [0x0400ec99] 	      5053	eval.c	FUNCTION_80
0x400ec99	          0x4531c9	                            xor r9d, r9d	      5742	eval.c	FUNCTION_88	CALL_1
0x400ec9c	            0x6a00	                                  push 0	      5742	eval.c	FUNCTION_88	CALL_1
0x400ec9e	    0x41b801000000	                              mov r8d, 1	      5742	eval.c	FUNCTION_88	CALL_1
0x400eca4	      0x488d542430	                   lea rdx, [rsp + 0x30]	      5742	eval.c	FUNCTION_88	CALL_1
0x400eca9	      0x488d742418	                   lea rsi, [rsp + 0x18]	      5742	eval.c	FUNCTION_88	CALL_1
0x400ecae	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      5742	eval.c	FUNCTION_88	CALL_1
0x400ecb3	          0x8d4802	                      lea ecx, [rax + 2]	      5053	eval.c	FUNCTION_80
0x400ecb6	    0x890d00000000	            mov dword [0x0400ecbc], ecx 	      5053	eval.c	FUNCTION_80
0x400ecbc	      0xe800000000	                          call 0x400ecc1	      5742	eval.c	FUNCTION_88	CALL_1
0x400ecc1	          0x4885c0	                           test rax, rax	      8060	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8
0x400ecc4	          0x4889c3	                            mov rbx, rax	      5742	eval.c	FUNCTION_88	CALL_1
0x400ecc7	              0x5e	                                 pop rsi	      8060	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8
0x400ecc8	              0x5f	                                 pop rdi	      8060	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8
0x400ecc9	     0xf8491000000	                            je 0x400ed60	      8060	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8
0x400eccf	           0xfb638	                   movzx edi, byte [rax]	      8061	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1
0x400ecd2	          0x4084ff	                           test dil, dil	      8061	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1
0x400ecd5	            0x7538	                           jne 0x400ed0f	      8061	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1
0x400ecd7	      0xe984000000	                           jmp 0x400ed60	      8061	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1
0x400ecdc	         0xf1f4000	                         nop dword [rax]	      8061	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1
0x400ece0	          0x4889df	                            mov rdi, rbx	      8078	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	ELSE_2	IF_11
0x400ece3	    0xff1500000000	                 call qword [0x0400ece9]	      8078	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	ELSE_2	IF_11
0x400ece9	    0x8b1500000000	            mov edx, dword [0x0400ecef] 	      8080	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	ELSE_2	IF_11	CALL_12
0x400ecef	          0x4c63e8	                         movsxd r13, eax	      8078	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	ELSE_2	IF_11
0x400ecf2	          0x4889df	                            mov rdi, rbx	      8080	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	ELSE_2	IF_11	CALL_12
0x400ecf5	          0x4489ee	                           mov esi, r13d	      8080	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	ELSE_2	IF_11	CALL_12
0x400ecf8	      0xe800000000	                          call 0x400ecfd	      8080	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	ELSE_2	IF_11	CALL_12
0x400ecfd	      0x4a8d442bff	                lea rax, [rbx + r13 - 1]	      8081	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	ELSE_2	IF_11
0x400ed02	         0xfb67801	               movzx edi, byte [rax + 1]	      8061	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1
0x400ed06	        0x488d5801	                      lea rbx, [rax + 1]	      8061	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1
0x400ed0a	          0x4084ff	                           test dil, dil	      8061	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1
0x400ed0d	            0x7451	                            je 0x400ed60	      8061	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1
0x400ed0f	    0x8b0500000000	            mov eax, dword [0x0400ed15] 	      8061	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1
0x400ed15	            0x85c0	                           test eax, eax	      8061	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1
0x400ed17	            0x7547	                           jne 0x400ed60	      8061	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1
0x400ed19	          0x8d47f7	                      lea eax, [rdi - 9]	      8063	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9
0x400ed1c	            0x3c01	                               cmp al, 1	      8063	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9
0x400ed1e	     0xf869c000000	                           jbe 0x400edc0	      8063	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9
0x400ed24	        0x4080ff0d	                            cmp dil, 0xd	      8063	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9
0x400ed28	     0xf8492000000	                            je 0x400edc0	      8063	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9
0x400ed2e	    0x8b0d00000000	            mov ecx, dword [0x0400ed34] 	      8076	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	ELSE_2	IF_11
0x400ed34	            0x85c9	                           test ecx, ecx	      8076	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	ELSE_2	IF_11
0x400ed36	            0x75a8	                           jne 0x400ece0	      8076	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	ELSE_2	IF_11
0x400ed38	    0x8b1500000000	            mov edx, dword [0x0400ed3e] 	      8085	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	ELSE_2	CALL_13
0x400ed3e	          0x4889df	                            mov rdi, rbx	      8085	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	ELSE_2	CALL_13
0x400ed41	      0xbe01000000	                              mov esi, 1	      8085	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	ELSE_2	CALL_13
0x400ed46	      0xe800000000	                          call 0x400ed4b	      8085	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	ELSE_2	CALL_13
0x400ed4b	          0x4889d8	                            mov rax, rbx	      8085	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	ELSE_2	CALL_13
0x400ed4e	         0xfb67801	               movzx edi, byte [rax + 1]	      8061	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1
0x400ed52	        0x488d5801	                      lea rbx, [rax + 1]	      8061	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1
0x400ed56	          0x4084ff	                           test dil, dil	      8061	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1
0x400ed59	            0x75b4	                           jne 0x400ed0f	      8061	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1
0x400ed5b	       0xf1f440000	                   nop dword [rax + rax]	      8061	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1
0x400ed60	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      8088	eval.c	FUNCTION_152	WHILE_1	IF_4	CALL_14
0x400ed65	          0x4531ed	                          xor r13d, r13d	      8088	eval.c	FUNCTION_152	WHILE_1	IF_4	CALL_14
0x400ed68	      0xe800000000	                          call 0x400ed6d	      8088	eval.c	FUNCTION_152	WHILE_1	IF_4	CALL_14
0x400ed6d	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      8090	eval.c	FUNCTION_152	WHILE_1	CALL_15
0x400ed72	      0xe800000000	                          call 0x400ed77	      8090	eval.c	FUNCTION_152	WHILE_1	CALL_15
0x400ed77	        0x488b3c24	                    mov rdi, qword [rsp]	      8091	eval.c	FUNCTION_152	WHILE_1	CALL_16
0x400ed7b	      0xe800000000	                          call 0x400ed80	      8091	eval.c	FUNCTION_152	WHILE_1	CALL_16
0x400ed80	          0x4889c3	                            mov rbx, rax	      8091	eval.c	FUNCTION_152	WHILE_1	CALL_16
0x400ed83	        0x48890424	                    mov qword [rsp], rax	      8091	eval.c	FUNCTION_152	WHILE_1	CALL_16
0x400ed87	           0xfb600	                   movzx eax, byte [rax]	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ed8a	            0x84c0	                             test al, al	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ed8c	           0xf95c1	                                setne cl	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ed8f	            0x3c7c	                            cmp al, 0x7c	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ed91	           0xf95c2	                                setne dl	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ed94	            0x84d1	                             test cl, dl	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ed96	     0xf84a8000000	                            je 0x400ee44	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ed9c	            0x3c0a	                             cmp al, 0xa	      8020	eval.c	FUNCTION_152	WHILE_1
0x400ed9e	     0xf84a0000000	                            je 0x400ee44	      8020	eval.c	FUNCTION_152	WHILE_1
0x400eda4	    0x8b0500000000	            mov eax, dword [0x0400edaa] 	      8020	eval.c	FUNCTION_152	WHILE_1
0x400edaa	            0x85c0	                           test eax, eax	      8020	eval.c	FUNCTION_152	WHILE_1
0x400edac	     0xf8592000000	                           jne 0x400ee44	      8020	eval.c	FUNCTION_152	WHILE_1
0x400edb2	      0x418b442430	            mov eax, dword [r12 + 0x30] 	      8020	eval.c	FUNCTION_152	WHILE_1
0x400edb7	      0xe984feffff	                           jmp 0x400ec40	      8020	eval.c	FUNCTION_152	WHILE_1
0x400edbc	         0xf1f4000	                         nop dword [rax]	      8020	eval.c	FUNCTION_152	WHILE_1
0x400edc0	        0x4080ff09	                              cmp dil, 9	      8065	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9	IF_10
0x400edc4	            0x7404	                            je 0x400edca	      8065	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9	IF_10
0x400edc6	            0x85ed	                           test ebp, ebp	      8065	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9	IF_10
0x400edc8	            0x7516	                           jne 0x400ede0	      8065	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9	IF_10
0x400edca	    0x8b3500000000	            mov esi, dword [0x0400edd0] 	      8071	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9	CALL_11
0x400edd0	      0xe800000000	                          call 0x400edd5	      8071	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9	CALL_11
0x400edd5	          0x4889d8	                            mov rax, rbx	      8071	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9	CALL_11
0x400edd8	      0xe925ffffff	                           jmp 0x400ed02	      8071	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9	CALL_11
0x400eddd	           0xf1f00	                         nop dword [rax]	      8071	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9	CALL_11
0x400ede0	      0xe800000000	                          call 0x400ede5	      8068	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9	IF_10	CALL_10
0x400ede5	            0x31ed	                            xor ebp, ebp	      8069	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9	IF_10
0x400ede7	           0xfb63b	                   movzx edi, byte [rbx]	      8069	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9	IF_10
0x400edea	            0xebde	                           jmp 0x400edca	      8069	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9	IF_10
0x400edec	         0xf1f4000	                         nop dword [rax]	      8069	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_8	FOR_1	IF_9	IF_10
0x400edf0	    0x41837c24207f	           cmp dword [r12 + 0x20], 0x7f 	      8057	eval.c	FUNCTION_152	WHILE_1	IF_4	ELSE_1	IF_7
0x400edf6	     0xf8593feffff	                           jne 0x400ec8f	      8057	eval.c	FUNCTION_152	WHILE_1	IF_4	ELSE_1	IF_7
0x400edfc	    0x8b3500000000	            mov esi, dword [0x0400ee02] 	      8058	eval.c	FUNCTION_152	WHILE_1	IF_4	ELSE_1	IF_7
0x400ee02	      0xbf00000000	                              mov edi, 0	      8058	eval.c	FUNCTION_152	WHILE_1	IF_4	ELSE_1	IF_7
0x400ee07	      0xe800000000	                          call 0x400ee0c	      8058	eval.c	FUNCTION_152	WHILE_1	IF_4	ELSE_1	IF_7
0x400ee0c	      0xe97efeffff	                           jmp 0x400ec8f	      8058	eval.c	FUNCTION_152	WHILE_1	IF_4	ELSE_1	IF_7
0x400ee11	      0xe800000000	                          call 0x400ee16	      8034	eval.c	FUNCTION_152	WHILE_1	IF_2	IF_3	CALL_2
0x400ee16	            0x85c0	                           test eax, eax	      8034	eval.c	FUNCTION_152	WHILE_1	IF_2	IF_3	CALL_2
0x400ee18	            0x751c	                           jne 0x400ee36	      8034	eval.c	FUNCTION_152	WHILE_1	IF_2	IF_3	CALL_2
0x400ee1a	      0xbe00000000	                              mov esi, 0	      8035	eval.c	FUNCTION_152	WHILE_1	IF_2	CALL_4
0x400ee1f	            0x31ff	                            xor edi, edi	      8035	eval.c	FUNCTION_152	WHILE_1	IF_2	CALL_4
0x400ee21	      0xba05000000	                              mov edx, 5	      8035	eval.c	FUNCTION_152	WHILE_1	IF_2	CALL_4
0x400ee26	      0xe800000000	                          call 0x400ee2b	      8035	eval.c	FUNCTION_152	WHILE_1	IF_2	CALL_4
0x400ee2b	          0x4889de	                            mov rsi, rbx	      8035	eval.c	FUNCTION_152	WHILE_1	IF_2	CALL_4
0x400ee2e	          0x4889c7	                            mov rdi, rax	      8035	eval.c	FUNCTION_152	WHILE_1	IF_2	CALL_4
0x400ee31	      0xe800000000	                          call 0x400ee36	      8035	eval.c	FUNCTION_152	WHILE_1	IF_2	CALL_4
0x400ee36	        0x488b1c24	                    mov rbx, qword [rsp]	      8035	eval.c	FUNCTION_152	WHILE_1	IF_2	CALL_4
0x400ee3a	    0xc70500000000	               mov dword [0x0400ee44], 0	      8036	eval.c	FUNCTION_152	WHILE_1	IF_2
0x400ee44	          0x4889df	                            mov rdi, rbx	      8093	eval.c	FUNCTION_152	CALL_17
0x400ee47	      0xe800000000	                          call 0x400ee4c	      8093	eval.c	FUNCTION_152	CALL_17
0x400ee4c	      0x418b542430	            mov edx, dword [r12 + 0x30] 	      8095	eval.c	FUNCTION_152	IF_12
0x400ee51	      0x4989442408	                mov qword [r12 + 8], rax	      8093	eval.c	FUNCTION_152	CALL_17
0x400ee56	            0x85d2	                           test edx, edx	      8095	eval.c	FUNCTION_152	IF_12
0x400ee58	            0x753d	                           jne 0x400ee97	      8095	eval.c	FUNCTION_152	IF_12
0x400ee5a	            0x85ed	                           test ebp, ebp	      8100	eval.c	FUNCTION_152	ELSE_4	IF_13
0x400ee5c	            0x7551	                           jne 0x400eeaf	      8100	eval.c	FUNCTION_152	ELSE_4	IF_13
0x400ee5e	    0x41837c24207f	           cmp dword [r12 + 0x20], 0x7f 	      8102	eval.c	FUNCTION_152	ELSE_4	IF_14
0x400ee64	            0x7456	                            je 0x400eebc	      8102	eval.c	FUNCTION_152	ELSE_4	IF_14
0x400ee66	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      8105	eval.c	FUNCTION_152
0x400ee6b	    0x644833042528	                xor rax, qword fs:[0x28]	      8105	eval.c	FUNCTION_152
0x400ee74	            0x754d	                           jne 0x400eec3	      8105	eval.c	FUNCTION_152
0x400ee76	        0x4883c478	                           add rsp, 0x78	      8105	eval.c	FUNCTION_152
0x400ee7a	              0x5b	                                 pop rbx	      8105	eval.c	FUNCTION_152
0x400ee7b	              0x5d	                                 pop rbp	      8105	eval.c	FUNCTION_152
0x400ee7c	            0x415c	                                 pop r12	      8105	eval.c	FUNCTION_152
0x400ee7e	            0x415d	                                 pop r13	      8105	eval.c	FUNCTION_152
0x400ee80	              0xc3	                                     ret	      8105	eval.c	FUNCTION_152
0x400ee81	          0x4889df	                            mov rdi, rbx	      8093	eval.c	FUNCTION_152	CALL_17
0x400ee84	      0xe800000000	                          call 0x400ee89	      8093	eval.c	FUNCTION_152	CALL_17
0x400ee89	      0x4989442408	                mov qword [r12 + 8], rax	      8093	eval.c	FUNCTION_152	CALL_17
0x400ee8e	      0x418b442430	            mov eax, dword [r12 + 0x30] 	      8095	eval.c	FUNCTION_152	IF_12
0x400ee93	            0x85c0	                           test eax, eax	      8095	eval.c	FUNCTION_152	IF_12
0x400ee95	            0x7418	                            je 0x400eeaf	      8095	eval.c	FUNCTION_152	IF_12
0x400ee97	    0x832d00000000	               sub dword [0x0400ee9e], 1	      8096	eval.c	FUNCTION_152	IF_12
0x400ee9e	            0xebc6	                           jmp 0x400ee66	      8096	eval.c	FUNCTION_152	IF_12
0x400eea0	      0xe800000000	                          call 0x400eea5	      8053	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_5	IF_6	CALL_5
0x400eea5	      0xe800000000	                          call 0x400eeaa	      8054	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_5	IF_6	CALL_6
0x400eeaa	      0xe9e0fdffff	                           jmp 0x400ec8f	      8054	eval.c	FUNCTION_152	WHILE_1	IF_4	IF_5	IF_6	CALL_6
0x400eeaf	      0xe800000000	                          call 0x400eeb4	      8101	eval.c	FUNCTION_152	ELSE_4	CALL_18
0x400eeb4	    0x41837c24207f	           cmp dword [r12 + 0x20], 0x7f 	      8102	eval.c	FUNCTION_152	ELSE_4	IF_14
0x400eeba	            0x75aa	                           jne 0x400ee66	      8102	eval.c	FUNCTION_152	ELSE_4	IF_14
0x400eebc	      0xe800000000	                          call 0x400eec1	      8103	eval.c	FUNCTION_152	ELSE_4	CALL_19
0x400eec1	            0xeba3	                           jmp 0x400ee66	      8105	eval.c	FUNCTION_152
0x400eec3	      0xe800000000	                          call 0x400eec8	      8105	eval.c	FUNCTION_152
echo_string_core	functions,0:SWITCH,1:IF,17:DO,0:ELSE,6:WHILE,0:CALL,28:FOR,1	346
0x40044a0	            0x4157	                                push r15	      5549	eval.c	FUNCTION_87
0x40044a2	            0x4156	                                push r14	      5549	eval.c	FUNCTION_87
0x40044a4	            0x4155	                                push r13	      5549	eval.c	FUNCTION_87
0x40044a6	            0x4154	                                push r12	      5549	eval.c	FUNCTION_87
0x40044a8	          0x4989f4	                            mov r12, rsi	      5549	eval.c	FUNCTION_87
0x40044ab	              0x55	                                push rbp	      5549	eval.c	FUNCTION_87
0x40044ac	              0x53	                                push rbx	      5549	eval.c	FUNCTION_87
0x40044ad	          0x4889d3	                            mov rbx, rdx	      5549	eval.c	FUNCTION_87
0x40044b0	        0x4883ec58	                           sub rsp, 0x58	      5549	eval.c	FUNCTION_87
0x40044b4	    0x8b1500000000	            mov edx, dword [0x040044ba] 	      5553	eval.c	FUNCTION_87	IF_1
0x40044ba	    0x64488b042528	                mov rax, qword fs:[0x28]	      5549	eval.c	FUNCTION_87
0x40044c3	      0x4889442448	             mov qword [rsp + 0x48], rax	      5549	eval.c	FUNCTION_87
0x40044c8	            0x31c0	                            xor eax, eax	      5549	eval.c	FUNCTION_87
0x40044ca	          0x83fa63	                           cmp edx, 0x63	      5553	eval.c	FUNCTION_87	IF_1
0x40044cd	            0x7e41	                           jle 0x4004510	      5553	eval.c	FUNCTION_87	IF_1
0x40044cf	    0x8b2d00000000	            mov ebp, dword [0x040044d5] 	      5555	eval.c	FUNCTION_87	IF_1	IF_2
0x40044d5	            0x85ed	                           test ebp, ebp	      5555	eval.c	FUNCTION_87	IF_1	IF_2
0x40044d7	            0x745f	                            je 0x4004538	      5555	eval.c	FUNCTION_87	IF_1	IF_2
0x40044d9	    0x49c704240000	                      mov qword [r12], 0	      5563	eval.c	FUNCTION_87	IF_1
0x40044e1	      0xb800000000	                              mov eax, 0	      5564	eval.c	FUNCTION_87	IF_1
0x40044e6	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	      5725	eval.c	FUNCTION_87
0x40044eb	    0x644833342528	                xor rsi, qword fs:[0x28]	      5725	eval.c	FUNCTION_87
0x40044f4	     0xf8558050000	                           jne 0x4004a52	      5725	eval.c	FUNCTION_87
0x40044fa	        0x4883c458	                           add rsp, 0x58	      5725	eval.c	FUNCTION_87
0x40044fe	              0x5b	                                 pop rbx	      5725	eval.c	FUNCTION_87
0x40044ff	              0x5d	                                 pop rbp	      5725	eval.c	FUNCTION_87
0x4004500	            0x415c	                                 pop r12	      5725	eval.c	FUNCTION_87
0x4004502	            0x415d	                                 pop r13	      5725	eval.c	FUNCTION_87
0x4004504	            0x415e	                                 pop r14	      5725	eval.c	FUNCTION_87
0x4004506	            0x415f	                                 pop r15	      5725	eval.c	FUNCTION_87
0x4004508	              0xc3	                                     ret	      5725	eval.c	FUNCTION_87
0x4004509	     0xf1f80000000	                         nop dword [rax]	      5725	eval.c	FUNCTION_87
0x4004510	          0x83c201	                              add edx, 1	      5566	eval.c	FUNCTION_87
0x4004513	          0x833f0a	                    cmp dword [rdi], 0xa	      5568	eval.c	FUNCTION_87	SWITCH_1
0x4004516	          0x4889fd	                            mov rbp, rdi	      5568	eval.c	FUNCTION_87	SWITCH_1
0x4004519	    0x891500000000	            mov dword [0x0400451f], edx 	      5566	eval.c	FUNCTION_87
0x400451f	     0xf87fc030000	                            ja 0x4004921	      5568	eval.c	FUNCTION_87	SWITCH_1
0x4004525	            0x8b07	                    mov eax, dword [rdi]	      5568	eval.c	FUNCTION_87	SWITCH_1
0x4004527	          0x4189cd	                           mov r13d, ecx	      5568	eval.c	FUNCTION_87	SWITCH_1
0x400452a	    0xff24c5000000	                       jmp qword [rax*8]	      5568	eval.c	FUNCTION_87	SWITCH_1
0x4004531	     0xf1f80000000	                         nop dword [rax]	      5568	eval.c	FUNCTION_87	SWITCH_1
0x4004538	            0x31ff	                            xor edi, edi	      5561	eval.c	FUNCTION_87	IF_1	IF_2	CALL_2
0x400453a	      0xba05000000	                              mov edx, 5	      5561	eval.c	FUNCTION_87	IF_1	IF_2	CALL_2
0x400453f	      0xbe00000000	                              mov esi, 0	      5561	eval.c	FUNCTION_87	IF_1	IF_2	CALL_2
0x4004544	    0xc70500000000	               mov dword [0x0400454e], 1	      5560	eval.c	FUNCTION_87	IF_1	IF_2
0x400454e	      0xe800000000	                          call 0x4004553	      5561	eval.c	FUNCTION_87	IF_1	IF_2	CALL_2
0x4004553	          0x4889c7	                            mov rdi, rax	      5561	eval.c	FUNCTION_87	IF_1	IF_2	CALL_2
0x4004556	      0xe800000000	                          call 0x400455b	      5561	eval.c	FUNCTION_87	IF_1	IF_2	CALL_2
0x400455b	      0xe979ffffff	                           jmp 0x40044d9	      5561	eval.c	FUNCTION_87	IF_1	IF_2	CALL_2
0x4004560	    0x48c706000000	                      mov qword [rsi], 0	      5717	eval.c	FUNCTION_87	SWITCH_1
0x4004567	        0x488b4708	                mov rax, qword [rdi + 8]	      5517	eval.c	FUNCTION_86	SWITCH_1
0x400456b	          0x83f801	                              cmp eax, 1	      5517	eval.c	FUNCTION_86	SWITCH_1
0x400456e	     0xf84dc030000	                            je 0x4004950	      5517	eval.c	FUNCTION_86	SWITCH_1
0x4004574	     0xf8e76040000	                           jle 0x40049f0	      5517	eval.c	FUNCTION_86	SWITCH_1
0x400457a	          0x83f802	                              cmp eax, 2	      5517	eval.c	FUNCTION_86	SWITCH_1
0x400457d	      0xbb00000000	                              mov ebx, 0	      5521	eval.c	FUNCTION_86	SWITCH_1
0x4004582	            0x744d	                            je 0x40045d1	      5517	eval.c	FUNCTION_86	SWITCH_1
0x4004584	          0x83f803	                              cmp eax, 3	      5517	eval.c	FUNCTION_86	SWITCH_1
0x4004587	      0xbb00000000	                              mov ebx, 0	      5522	eval.c	FUNCTION_86	SWITCH_1
0x400458c	            0x7443	                            je 0x40045d1	      5517	eval.c	FUNCTION_86	SWITCH_1
0x400458e	      0xbf00000000	                              mov edi, 0	      5524	eval.c	FUNCTION_86	CALL_1
0x4004593	      0xbb00000000	                              mov ebx, 0	      5525	eval.c	FUNCTION_86
0x4004598	      0xe800000000	                          call 0x400459d	      5524	eval.c	FUNCTION_86	CALL_1
0x400459d	    0x8b1500000000	            mov edx, dword [0x040045a3] 	      5524	eval.c	FUNCTION_86	CALL_1
0x40045a3	            0xeb2c	                           jmp 0x40045d1	      5524	eval.c	FUNCTION_86	CALL_1
0x40045a5	           0xf1f00	                         nop dword [rax]	      5524	eval.c	FUNCTION_86	CALL_1
0x40045a8	    0x48c706000000	                      mov qword [rsi], 0	      5710	eval.c	FUNCTION_87	SWITCH_1
0x40045af	      0xba00000000	                              mov edx, 0	      5711	eval.c	FUNCTION_87	SWITCH_1	CALL_27
0x40045b4	      0xbe41000000	                           mov esi, 0x41	      5711	eval.c	FUNCTION_87	SWITCH_1	CALL_27
0x40045b9	      0xf20f104708	            movsd xmm0, qword [rdi + 8] 	      5711	eval.c	FUNCTION_87	SWITCH_1	CALL_27
0x40045be	      0xb801000000	                              mov eax, 1	      5711	eval.c	FUNCTION_87	SWITCH_1	CALL_27
0x40045c3	          0x4889df	                            mov rdi, rbx	      5711	eval.c	FUNCTION_87	SWITCH_1	CALL_27
0x40045c6	      0xe800000000	                          call 0x40045cb	      5711	eval.c	FUNCTION_87	SWITCH_1	CALL_27
0x40045cb	    0x8b1500000000	            mov edx, dword [0x040045d1] 	      5711	eval.c	FUNCTION_87	SWITCH_1	CALL_27
0x40045d1	          0x8d4aff	                      lea ecx, [rdx - 1]	      5722	eval.c	FUNCTION_87	IF_17
0x40045d4	          0x4889d8	                            mov rax, rbx	      5724	eval.c	FUNCTION_87
0x40045d7	            0x85c9	                           test ecx, ecx	      5722	eval.c	FUNCTION_87	IF_17
0x40045d9	    0x890d00000000	            mov dword [0x040045df], ecx 	      5722	eval.c	FUNCTION_87	IF_17
0x40045df	     0xf8501ffffff	                           jne 0x40044e6	      5722	eval.c	FUNCTION_87	IF_17
0x40045e5	    0xc70500000000	               mov dword [0x040045ef], 0	      5723	eval.c	FUNCTION_87	IF_17
0x40045ef	      0xe9f2feffff	                           jmp 0x40044e6	      5723	eval.c	FUNCTION_87	IF_17
0x40045f4	         0xf1f4000	                         nop dword [rax]	      5723	eval.c	FUNCTION_87	IF_17
0x40045f8	        0x488b4708	                mov rax, qword [rdi + 8]	      5669	eval.c	FUNCTION_87	SWITCH_1	IF_13
0x40045fc	          0x4885c0	                           test rax, rax	      5669	eval.c	FUNCTION_87	SWITCH_1	IF_13
0x40045ff	     0xf845b030000	                            je 0x4004960	      5669	eval.c	FUNCTION_87	SWITCH_1	IF_13
0x4004605	            0x85c9	                           test ecx, ecx	      5674	eval.c	FUNCTION_87	SWITCH_1	ELSE_5	IF_14
0x4004607	        0x448b7008	               mov r14d, dword [rax + 8]	      5674	eval.c	FUNCTION_87	SWITCH_1	ELSE_5	IF_14
0x400460b	            0x7409	                            je 0x4004616	      5674	eval.c	FUNCTION_87	SWITCH_1	ELSE_5	IF_14
0x400460d	          0x4439f1	                           cmp ecx, r14d	      5674	eval.c	FUNCTION_87	SWITCH_1	ELSE_5	IF_14
0x4004610	     0xf84ec030000	                            je 0x4004a02	      5674	eval.c	FUNCTION_87	SWITCH_1	ELSE_5	IF_14
0x4004616	          0x4489ca	                            mov edx, r9d	      5684	eval.c	FUNCTION_87	SWITCH_1	ELSE_6	CALL_23
0x4004619	        0x44896808	               mov dword [rax + 8], r13d	      5683	eval.c	FUNCTION_87	SWITCH_1	ELSE_6
0x400461d	          0x4489ee	                           mov esi, r13d	      5684	eval.c	FUNCTION_87	SWITCH_1	ELSE_6	CALL_23
0x4004620	          0x4889ef	                            mov rdi, rbp	      5684	eval.c	FUNCTION_87	SWITCH_1	ELSE_6	CALL_23
0x4004623	      0x44894c2408	                mov dword [rsp + 8], r9d	      5684	eval.c	FUNCTION_87	SWITCH_1	ELSE_6	CALL_23
0x4004628	      0xe800000000	                          call 0x400462d	      5684	eval.c	FUNCTION_87	SWITCH_1	ELSE_6	CALL_23
0x400462d	      0x448b4c2408	                mov r9d, dword [rsp + 8]	      5685	eval.c	FUNCTION_87	SWITCH_1	ELSE_6	IF_15
0x4004632	          0x4889c3	                            mov rbx, rax	      5684	eval.c	FUNCTION_87	SWITCH_1	ELSE_6	CALL_23
0x4004635	        0x49890424	                    mov qword [r12], rax	      5684	eval.c	FUNCTION_87	SWITCH_1	ELSE_6	CALL_23
0x4004639	          0x4585c9	                           test r9d, r9d	      5685	eval.c	FUNCTION_87	SWITCH_1	ELSE_6	IF_15
0x400463c	            0x748d	                            je 0x40045cb	      5685	eval.c	FUNCTION_87	SWITCH_1	ELSE_6	IF_15
0x400463e	        0x488b4508	                mov rax, qword [rbp + 8]	      5686	eval.c	FUNCTION_87	SWITCH_1	ELSE_6	IF_15
0x4004642	    0x8b1500000000	            mov edx, dword [0x04004648] 	      5686	eval.c	FUNCTION_87	SWITCH_1	ELSE_6	IF_15
0x4004648	        0x44897008	               mov dword [rax + 8], r14d	      5686	eval.c	FUNCTION_87	SWITCH_1	ELSE_6	IF_15
0x400464c	            0xeb83	                           jmp 0x40045d1	      5686	eval.c	FUNCTION_87	SWITCH_1	ELSE_6	IF_15
0x400464e	            0x6690	                                     nop	      5686	eval.c	FUNCTION_87	SWITCH_1	ELSE_6	IF_15
0x4004650	        0x488b4708	                mov rax, qword [rdi + 8]	      5645	eval.c	FUNCTION_87	SWITCH_1	IF_10
0x4004654	          0x4885c0	                           test rax, rax	      5645	eval.c	FUNCTION_87	SWITCH_1	IF_10
0x4004657	     0xf8403030000	                            je 0x4004960	      5645	eval.c	FUNCTION_87	SWITCH_1	IF_10
0x400465d	            0x85c9	                           test ecx, ecx	      5650	eval.c	FUNCTION_87	SWITCH_1	ELSE_3	IF_11
0x400465f	        0x448b7044	           mov r14d, dword [rax + 0x44] 	      5650	eval.c	FUNCTION_87	SWITCH_1	ELSE_3	IF_11
0x4004663	            0x7409	                            je 0x400466e	      5650	eval.c	FUNCTION_87	SWITCH_1	ELSE_3	IF_11
0x4004665	          0x4439f1	                           cmp ecx, r14d	      5650	eval.c	FUNCTION_87	SWITCH_1	ELSE_3	IF_11
0x4004668	     0xf84ac030000	                            je 0x4004a1a	      5650	eval.c	FUNCTION_87	SWITCH_1	ELSE_3	IF_11
0x400466e	          0x4489ca	                            mov edx, r9d	      5661	eval.c	FUNCTION_87	SWITCH_1	ELSE_4	CALL_22
0x4004671	        0x44896844	            mov dword [rax + 0x44], r13d	      5660	eval.c	FUNCTION_87	SWITCH_1	ELSE_4
0x4004675	          0x4489ee	                           mov esi, r13d	      5661	eval.c	FUNCTION_87	SWITCH_1	ELSE_4	CALL_22
0x4004678	          0x4889ef	                            mov rdi, rbp	      5661	eval.c	FUNCTION_87	SWITCH_1	ELSE_4	CALL_22
0x400467b	      0x44894c2408	                mov dword [rsp + 8], r9d	      5661	eval.c	FUNCTION_87	SWITCH_1	ELSE_4	CALL_22
0x4004680	      0xe800000000	                          call 0x4004685	      5661	eval.c	FUNCTION_87	SWITCH_1	ELSE_4	CALL_22
0x4004685	      0x448b4c2408	                mov r9d, dword [rsp + 8]	      5662	eval.c	FUNCTION_87	SWITCH_1	ELSE_4	IF_12
0x400468a	          0x4889c3	                            mov rbx, rax	      5661	eval.c	FUNCTION_87	SWITCH_1	ELSE_4	CALL_22
0x400468d	        0x49890424	                    mov qword [r12], rax	      5661	eval.c	FUNCTION_87	SWITCH_1	ELSE_4	CALL_22
0x4004691	          0x4585c9	                           test r9d, r9d	      5662	eval.c	FUNCTION_87	SWITCH_1	ELSE_4	IF_12
0x4004694	     0xf8431ffffff	                            je 0x40045cb	      5662	eval.c	FUNCTION_87	SWITCH_1	ELSE_4	IF_12
0x400469a	        0x488b4508	                mov rax, qword [rbp + 8]	      5663	eval.c	FUNCTION_87	SWITCH_1	ELSE_4	IF_12
0x400469e	    0x8b1500000000	            mov edx, dword [0x040046a4] 	      5663	eval.c	FUNCTION_87	SWITCH_1	ELSE_4	IF_12
0x40046a4	        0x44897044	            mov dword [rax + 0x44], r14d	      5663	eval.c	FUNCTION_87	SWITCH_1	ELSE_4	IF_12
0x40046a8	      0xe924ffffff	                           jmp 0x40045d1	      5663	eval.c	FUNCTION_87	SWITCH_1	ELSE_4	IF_12
0x40046ad	           0xf1f00	                         nop dword [rax]	      5663	eval.c	FUNCTION_87	SWITCH_1	ELSE_4	IF_12
0x40046b0	        0x488b6f08	                mov rbp, qword [rdi + 8]	      5600	eval.c	FUNCTION_87	SWITCH_1
0x40046b4	          0x4885ed	                           test rbp, rbp	      5601	eval.c	FUNCTION_87	SWITCH_1	CALL_5
0x40046b7	     0xf84b2020000	                            je 0x400496f	      5601	eval.c	FUNCTION_87	SWITCH_1	CALL_5
0x40046bd	        0x488b7d08	                mov rdi, qword [rbp + 8]	      4862	eval.c	FUNCTION_75	IF_1
0x40046c1	          0x4885ff	                           test rdi, rdi	      4862	eval.c	FUNCTION_75	IF_1
0x40046c4	     0xf8468030000	                            je 0x4004a32	      4862	eval.c	FUNCTION_75	IF_1
0x40046ca	            0x31f6	                            xor esi, esi	      5601	eval.c	FUNCTION_87	SWITCH_1	CALL_5
0x40046cc	      0xe800000000	                          call 0x40046d1	      5601	eval.c	FUNCTION_87	SWITCH_1	CALL_5
0x40046d1	          0x4989c7	                            mov r15, rax	      5601	eval.c	FUNCTION_87	SWITCH_1	CALL_5
0x40046d4	      0x488d442430	                   lea rax, [rsp + 0x30]	      5607	eval.c	FUNCTION_87	SWITCH_1	CALL_7
0x40046d9	      0xba64000000	                           mov edx, 0x64	      5607	eval.c	FUNCTION_87	SWITCH_1	CALL_7
0x40046de	      0xbe01000000	                              mov esi, 1	      5607	eval.c	FUNCTION_87	SWITCH_1	CALL_7
0x40046e3	          0x4989c6	                            mov r14, rax	      5607	eval.c	FUNCTION_87	SWITCH_1	CALL_7
0x40046e6	          0x4889c7	                            mov rdi, rax	      5607	eval.c	FUNCTION_87	SWITCH_1	CALL_7
0x40046e9	      0x4889442408	                mov qword [rsp + 8], rax	      5607	eval.c	FUNCTION_87	SWITCH_1	CALL_7
0x40046ee	      0xe800000000	                          call 0x40046f3	      5607	eval.c	FUNCTION_87	SWITCH_1	CALL_7
0x40046f3	      0xbe00000000	                              mov esi, 0	      5608	eval.c	FUNCTION_87	SWITCH_1	CALL_8
0x40046f8	          0x4c89f7	                            mov rdi, r14	      5608	eval.c	FUNCTION_87	SWITCH_1	CALL_8
0x40046fb	      0xe800000000	                          call 0x4004700	      5608	eval.c	FUNCTION_87	SWITCH_1	CALL_8
0x4004700	          0x4d85ff	                           test r15, r15	      5609	eval.c	FUNCTION_87	SWITCH_1	IF_6
0x4004703	            0x7415	                            je 0x400471a	      5609	eval.c	FUNCTION_87	SWITCH_1	IF_6
0x4004705	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5611	eval.c	FUNCTION_87	SWITCH_1	IF_6	CALL_9
0x400470a	          0x4c89fe	                            mov rsi, r15	      5611	eval.c	FUNCTION_87	SWITCH_1	IF_6	CALL_9
0x400470d	      0xe800000000	                          call 0x4004712	      5611	eval.c	FUNCTION_87	SWITCH_1	IF_6	CALL_9
0x4004712	          0x4c89ff	                            mov rdi, r15	      5612	eval.c	FUNCTION_87	SWITCH_1	IF_6	CALL_10
0x4004715	      0xe800000000	                          call 0x400471a	      5612	eval.c	FUNCTION_87	SWITCH_1	IF_6	CALL_10
0x400471a	        0x448b5d1c	           mov r11d, dword [rbp + 0x1c] 	      5614	eval.c	FUNCTION_87	SWITCH_1	IF_7
0x400471e	          0x4585db	                         test r11d, r11d	      5614	eval.c	FUNCTION_87	SWITCH_1	IF_7
0x4004721	     0xf8e9b000000	                           jle 0x40047c2	      5614	eval.c	FUNCTION_87	SWITCH_1	IF_7
0x4004727	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5616	eval.c	FUNCTION_87	SWITCH_1	IF_7	CALL_11
0x400472c	      0xbe00000000	                              mov esi, 0	      5616	eval.c	FUNCTION_87	SWITCH_1	IF_7	CALL_11
0x4004731	      0xe800000000	                          call 0x4004736	      5616	eval.c	FUNCTION_87	SWITCH_1	IF_7	CALL_11
0x4004736	        0x448b551c	           mov r10d, dword [rbp + 0x1c] 	      5617	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1
0x400473a	          0x4585d2	                         test r10d, r10d	      5617	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1
0x400473d	            0x7e74	                           jle 0x40047b3	      5617	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1
0x400473f	          0x4531ff	                          xor r15d, r15d	      5617	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1
0x4004742	          0x4531f6	                          xor r14d, r14d	      5617	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1
0x4004745	            0xeb21	                           jmp 0x4004768	      5617	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1
0x4004747	    0x660f1f840000	                    nop word [rax + rax]	      5617	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1
0x4004750	          0x4585f6	                         test r14d, r14d	      5619	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1	IF_8
0x4004753	            0x7e0f	                           jle 0x4004764	      5619	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1	IF_8
0x4004755	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5620	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1	CALL_12
0x400475a	      0xbe00000000	                              mov esi, 0	      5620	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1	CALL_12
0x400475f	      0xe800000000	                          call 0x4004764	      5620	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1	CALL_12
0x4004764	        0x4983c710	                           add r15, 0x10	      5620	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1	CALL_12
0x4004768	        0x4883ec08	                              sub rsp, 8	      5759	eval.c	FUNCTION_89	CALL_1
0x400476c	          0x4c89ff	                            mov rdi, r15	      5759	eval.c	FUNCTION_89	CALL_1
0x400476f	        0x48037d20	             add rdi, qword [rbp + 0x20]	      5759	eval.c	FUNCTION_89	CALL_1
0x4004773	            0x6a00	                                  push 0	      5759	eval.c	FUNCTION_89	CALL_1
0x4004775	          0x4531c0	                            xor r8d, r8d	      5759	eval.c	FUNCTION_89	CALL_1
0x4004778	    0x41b901000000	                              mov r9d, 1	      5759	eval.c	FUNCTION_89	CALL_1
0x400477e	          0x4489e9	                           mov ecx, r13d	      5759	eval.c	FUNCTION_89	CALL_1
0x4004781	          0x4889da	                            mov rdx, rbx	      5759	eval.c	FUNCTION_89	CALL_1
0x4004784	        0x4183c601	                             add r14d, 1	      5617	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1
0x4004788	      0x488d742428	                   lea rsi, [rsp + 0x28]	      5759	eval.c	FUNCTION_89	CALL_1
0x400478d	      0xe800000000	                          call 0x4004792	      5759	eval.c	FUNCTION_89	CALL_1
0x4004792	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      5621	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1	CALL_13
0x4004797	          0x4889c6	                            mov rsi, rax	      5621	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1	CALL_13
0x400479a	      0xe800000000	                          call 0x400479f	      5621	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1	CALL_13
0x400479f	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      5623	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1	CALL_15
0x40047a4	      0xe800000000	                          call 0x40047a9	      5623	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1	CALL_15
0x40047a9	        0x4439751c	           cmp dword [rbp + 0x1c], r14d 	      5617	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1
0x40047ad	            0x4158	                                  pop r8	      5617	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1
0x40047af	            0x4159	                                  pop r9	      5617	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1
0x40047b1	            0x7f9d	                            jg 0x4004750	      5617	eval.c	FUNCTION_87	SWITCH_1	IF_7	FOR_1
0x40047b3	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5625	eval.c	FUNCTION_87	SWITCH_1	IF_7	CALL_16
0x40047b8	      0xbe00000000	                              mov esi, 0	      5625	eval.c	FUNCTION_87	SWITCH_1	IF_7	CALL_16
0x40047bd	      0xe800000000	                          call 0x40047c2	      5625	eval.c	FUNCTION_87	SWITCH_1	IF_7	CALL_16
0x40047c2	      0x48837d2800	               cmp qword [rbp + 0x28], 0	      5627	eval.c	FUNCTION_87	SWITCH_1	IF_9
0x40047c7	            0x745e	                            je 0x4004827	      5627	eval.c	FUNCTION_87	SWITCH_1	IF_9
0x40047c9	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	      5631	eval.c	FUNCTION_87	SWITCH_1	IF_9	CALL_17
0x40047ce	      0xbe00000000	                              mov esi, 0	      5631	eval.c	FUNCTION_87	SWITCH_1	IF_9	CALL_17
0x40047d3	          0x4c89ff	                            mov rdi, r15	      5631	eval.c	FUNCTION_87	SWITCH_1	IF_9	CALL_17
0x40047d6	      0xe800000000	                          call 0x40047db	      5631	eval.c	FUNCTION_87	SWITCH_1	IF_9	CALL_17
0x40047db	        0x488b4528	            mov rax, qword [rbp + 0x28] 	      5633	eval.c	FUNCTION_87	SWITCH_1	IF_9
0x40047df	    0xc74424200600	               mov dword [rsp + 0x20], 6	      5632	eval.c	FUNCTION_87	SWITCH_1	IF_9
0x40047e7	        0x4883ec08	                              sub rsp, 8	      5759	eval.c	FUNCTION_89	CALL_1
0x40047eb	    0x41b901000000	                              mov r9d, 1	      5759	eval.c	FUNCTION_89	CALL_1
0x40047f1	          0x4531c0	                            xor r8d, r8d	      5759	eval.c	FUNCTION_89	CALL_1
0x40047f4	          0x4489e9	                           mov ecx, r13d	      5759	eval.c	FUNCTION_89	CALL_1
0x40047f7	          0x4889da	                            mov rdx, rbx	      5759	eval.c	FUNCTION_89	CALL_1
0x40047fa	      0x4889442430	             mov qword [rsp + 0x30], rax	      5633	eval.c	FUNCTION_87	SWITCH_1	IF_9
0x40047ff	            0x6a00	                                  push 0	      5759	eval.c	FUNCTION_89	CALL_1
0x4004801	      0x488d742428	                   lea rsi, [rsp + 0x28]	      5759	eval.c	FUNCTION_89	CALL_1
0x4004806	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      5759	eval.c	FUNCTION_89	CALL_1
0x400480b	      0xe800000000	                          call 0x4004810	      5759	eval.c	FUNCTION_89	CALL_1
0x4004810	          0x4c89ff	                            mov rdi, r15	      5634	eval.c	FUNCTION_87	SWITCH_1	IF_9	CALL_19
0x4004813	          0x4889c6	                            mov rsi, rax	      5634	eval.c	FUNCTION_87	SWITCH_1	IF_9	CALL_19
0x4004816	      0xe800000000	                          call 0x400481b	      5634	eval.c	FUNCTION_87	SWITCH_1	IF_9	CALL_19
0x400481b	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      5635	eval.c	FUNCTION_87	SWITCH_1	IF_9	CALL_20
0x4004820	      0xe800000000	                          call 0x4004825	      5635	eval.c	FUNCTION_87	SWITCH_1	IF_9	CALL_20
0x4004825	              0x5e	                                 pop rsi	      5635	eval.c	FUNCTION_87	SWITCH_1	IF_9	CALL_20
0x4004826	              0x5f	                                 pop rdi	      5635	eval.c	FUNCTION_87	SWITCH_1	IF_9	CALL_20
0x4004827	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5637	eval.c	FUNCTION_87	SWITCH_1	CALL_21
0x400482c	      0xbe00000000	                              mov esi, 0	      5637	eval.c	FUNCTION_87	SWITCH_1	CALL_21
0x4004831	      0xe800000000	                          call 0x4004836	      5637	eval.c	FUNCTION_87	SWITCH_1	CALL_21
0x4004836	      0x488b5c2440	            mov rbx, qword [rsp + 0x40] 	      5639	eval.c	FUNCTION_87	SWITCH_1
0x400483b	    0x8b1500000000	            mov edx, dword [0x04004841] 	      5639	eval.c	FUNCTION_87	SWITCH_1
0x4004841	        0x49891c24	                    mov qword [r12], rbx	      5639	eval.c	FUNCTION_87	SWITCH_1
0x4004845	      0xe987fdffff	                           jmp 0x40045d1	      5639	eval.c	FUNCTION_87	SWITCH_1
0x400484a	    0x660f1f440000	                    nop word [rax + rax]	      5639	eval.c	FUNCTION_87	SWITCH_1
0x4004850	          0x4585c0	                           test r8d, r8d	      5586	eval.c	FUNCTION_87	SWITCH_1	IF_5
0x4004853	     0xf84d7000000	                            je 0x4004930	      5586	eval.c	FUNCTION_87	SWITCH_1	IF_5
0x4004859	    0x48c706000000	                      mov qword [rsi], 0	      5588	eval.c	FUNCTION_87	SWITCH_1	IF_5
0x4004860	        0x488b5f08	                mov rbx, qword [rdi + 8]	      5589	eval.c	FUNCTION_87	SWITCH_1	IF_5
0x4004864	      0xe968fdffff	                           jmp 0x40045d1	      5589	eval.c	FUNCTION_87	SWITCH_1	IF_5
0x4004869	     0xf1f80000000	                         nop dword [rax]	      5589	eval.c	FUNCTION_87	SWITCH_1	IF_5
0x4004870	          0x4585c0	                           test r8d, r8d	      5571	eval.c	FUNCTION_87	SWITCH_1	IF_3
0x4004873	     0xf8457010000	                            je 0x40049d0	      5571	eval.c	FUNCTION_87	SWITCH_1	IF_3
0x4004879	    0x8b9c24900000	            mov ebx, dword [rsp + 0x90] 	      5571	eval.c	FUNCTION_87	SWITCH_1	IF_3
0x4004880	            0x85db	                           test ebx, ebx	      5571	eval.c	FUNCTION_87	SWITCH_1	IF_3
0x4004882	     0xf8548010000	                           jne 0x40049d0	      5571	eval.c	FUNCTION_87	SWITCH_1	IF_3
0x4004888	    0x48c706000000	                      mov qword [rsi], 0	      5573	eval.c	FUNCTION_87	SWITCH_1	IF_3
0x400488f	        0x488b5f08	                mov rbx, qword [rdi + 8]	      5574	eval.c	FUNCTION_87	SWITCH_1	IF_3
0x4004893	      0xb800000000	                              mov eax, 0	      5576	eval.c	FUNCTION_87	SWITCH_1	IF_3	IF_4
0x4004898	          0x4885db	                           test rbx, rbx	      5576	eval.c	FUNCTION_87	SWITCH_1	IF_3	IF_4
0x400489b	        0x480f44d8	                          cmove rbx, rax	      5576	eval.c	FUNCTION_87	SWITCH_1	IF_3	IF_4
0x400489f	      0xe92dfdffff	                           jmp 0x40045d1	      5576	eval.c	FUNCTION_87	SWITCH_1	IF_3	IF_4
0x40048a4	         0xf1f4000	                         nop dword [rax]	      5576	eval.c	FUNCTION_87	SWITCH_1	IF_3	IF_4
0x40048a8	    0x48c706000000	                      mov qword [rsi], 0	      5693	eval.c	FUNCTION_87	SWITCH_1
0x40048af	          0x4889de	                            mov rsi, rbx	      7085	eval.c	FUNCTION_128	CALL_1
0x40048b2	      0xe800000000	                          call 0x40048b7	      7085	eval.c	FUNCTION_128	CALL_1
0x40048b7	          0x4885c0	                           test rax, rax	      7087	eval.c	FUNCTION_128
0x40048ba	          0x4889c3	                            mov rbx, rax	      7085	eval.c	FUNCTION_128	CALL_1
0x40048bd	    0x8b1500000000	            mov edx, dword [0x040048c3] 	      7085	eval.c	FUNCTION_128	CALL_1
0x40048c3	     0xf8508fdffff	                           jne 0x40045d1	      7087	eval.c	FUNCTION_128
0x40048c9	      0xbb00000000	                              mov ebx, 0	      7087	eval.c	FUNCTION_128
0x40048ce	      0xe9fefcffff	                           jmp 0x40045d1	      7087	eval.c	FUNCTION_128
0x40048d3	       0xf1f440000	                   nop dword [rax + rax]	      7087	eval.c	FUNCTION_128
0x40048d8	    0x48c706000000	                      mov qword [rsi], 0	      5699	eval.c	FUNCTION_87	SWITCH_1
0x40048df	          0x4889de	                            mov rsi, rbx	      7085	eval.c	FUNCTION_128	CALL_1
0x40048e2	      0xe800000000	                          call 0x40048e7	      7085	eval.c	FUNCTION_128	CALL_1
0x40048e7	          0x4885c0	                           test rax, rax	      7087	eval.c	FUNCTION_128
0x40048ea	          0x4889c3	                            mov rbx, rax	      7085	eval.c	FUNCTION_128	CALL_1
0x40048ed	      0xb800000000	                              mov eax, 0	      7087	eval.c	FUNCTION_128
0x40048f2	        0x480f44d8	                          cmove rbx, rax	      7087	eval.c	FUNCTION_128
0x40048f6	    0x8b8424900000	            mov eax, dword [rsp + 0x90] 	      5701	eval.c	FUNCTION_87	SWITCH_1	IF_16
0x40048fd	            0x85c0	                           test eax, eax	      5701	eval.c	FUNCTION_87	SWITCH_1	IF_16
0x40048ff	     0xf84c6fcffff	                            je 0x40045cb	      5701	eval.c	FUNCTION_87	SWITCH_1	IF_16
0x4004905	          0x4889df	                            mov rdi, rbx	      5703	eval.c	FUNCTION_87	SWITCH_1	IF_16	CALL_26
0x4004908	            0x31f6	                            xor esi, esi	      5703	eval.c	FUNCTION_87	SWITCH_1	IF_16	CALL_26
0x400490a	      0xe800000000	                          call 0x400490f	      5703	eval.c	FUNCTION_87	SWITCH_1	IF_16	CALL_26
0x400490f	    0x8b1500000000	            mov edx, dword [0x04004915] 	      5703	eval.c	FUNCTION_87	SWITCH_1	IF_16	CALL_26
0x4004915	          0x4889c3	                            mov rbx, rax	      5703	eval.c	FUNCTION_87	SWITCH_1	IF_16	CALL_26
0x4004918	        0x49890424	                    mov qword [r12], rax	      5703	eval.c	FUNCTION_87	SWITCH_1	IF_16	CALL_26
0x400491c	      0xe9b0fcffff	                           jmp 0x40045d1	      5703	eval.c	FUNCTION_87	SWITCH_1	IF_16	CALL_26
0x4004921	            0x31db	                            xor ebx, ebx	      5551	eval.c	FUNCTION_87
0x4004923	      0xe9a9fcffff	                           jmp 0x40045d1	      5551	eval.c	FUNCTION_87
0x4004928	     0xf1f84000000	                   nop dword [rax + rax]	      5551	eval.c	FUNCTION_87
0x4004930	        0x488b7f08	                mov rdi, qword [rdi + 8]	      5593	eval.c	FUNCTION_87	SWITCH_1	ELSE_2	CALL_4
0x4004934	      0xbe01000000	                              mov esi, 1	      5593	eval.c	FUNCTION_87	SWITCH_1	ELSE_2	CALL_4
0x4004939	      0xe800000000	                          call 0x400493e	      5593	eval.c	FUNCTION_87	SWITCH_1	ELSE_2	CALL_4
0x400493e	    0x8b1500000000	            mov edx, dword [0x04004944] 	      5593	eval.c	FUNCTION_87	SWITCH_1	ELSE_2	CALL_4
0x4004944	          0x4889c3	                            mov rbx, rax	      5593	eval.c	FUNCTION_87	SWITCH_1	ELSE_2	CALL_4
0x4004947	        0x49890424	                    mov qword [r12], rax	      5593	eval.c	FUNCTION_87	SWITCH_1	ELSE_2	CALL_4
0x400494b	      0xe981fcffff	                           jmp 0x40045d1	      5593	eval.c	FUNCTION_87	SWITCH_1	ELSE_2	CALL_4
0x4004950	      0xbb00000000	                              mov ebx, 0	      5520	eval.c	FUNCTION_86	SWITCH_1
0x4004955	      0xe977fcffff	                           jmp 0x40045d1	      5520	eval.c	FUNCTION_86	SWITCH_1
0x400495a	    0x660f1f440000	                    nop word [rax + rax]	      5520	eval.c	FUNCTION_86	SWITCH_1
0x4004960	    0x49c704240000	                      mov qword [r12], 0	      5671	eval.c	FUNCTION_87	SWITCH_1	IF_13
0x4004968	            0x31db	                            xor ebx, ebx	      5672	eval.c	FUNCTION_87	SWITCH_1	IF_13
0x400496a	      0xe962fcffff	                           jmp 0x40045d1	      5672	eval.c	FUNCTION_87	SWITCH_1	IF_13
0x400496f	            0x31f6	                            xor esi, esi	      5601	eval.c	FUNCTION_87	SWITCH_1	CALL_5
0x4004971	            0x31ff	                            xor edi, edi	      5601	eval.c	FUNCTION_87	SWITCH_1	CALL_5
0x4004973	      0xe800000000	                          call 0x4004978	      5601	eval.c	FUNCTION_87	SWITCH_1	CALL_5
0x4004978	          0x4889c3	                            mov rbx, rax	      5601	eval.c	FUNCTION_87	SWITCH_1	CALL_5
0x400497b	      0x488d442430	                   lea rax, [rsp + 0x30]	      5607	eval.c	FUNCTION_87	SWITCH_1	CALL_7
0x4004980	      0xba64000000	                           mov edx, 0x64	      5607	eval.c	FUNCTION_87	SWITCH_1	CALL_7
0x4004985	      0xbe01000000	                              mov esi, 1	      5607	eval.c	FUNCTION_87	SWITCH_1	CALL_7
0x400498a	          0x4989c7	                            mov r15, rax	      5607	eval.c	FUNCTION_87	SWITCH_1	CALL_7
0x400498d	          0x4889c7	                            mov rdi, rax	      5607	eval.c	FUNCTION_87	SWITCH_1	CALL_7
0x4004990	      0x4889442408	                mov qword [rsp + 8], rax	      5607	eval.c	FUNCTION_87	SWITCH_1	CALL_7
0x4004995	      0xe800000000	                          call 0x400499a	      5607	eval.c	FUNCTION_87	SWITCH_1	CALL_7
0x400499a	      0xbe00000000	                              mov esi, 0	      5608	eval.c	FUNCTION_87	SWITCH_1	CALL_8
0x400499f	          0x4c89ff	                            mov rdi, r15	      5608	eval.c	FUNCTION_87	SWITCH_1	CALL_8
0x40049a2	      0xe800000000	                          call 0x40049a7	      5608	eval.c	FUNCTION_87	SWITCH_1	CALL_8
0x40049a7	          0x4885db	                           test rbx, rbx	      5609	eval.c	FUNCTION_87	SWITCH_1	IF_6
0x40049aa	     0xf8477feffff	                            je 0x4004827	      5609	eval.c	FUNCTION_87	SWITCH_1	IF_6
0x40049b0	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5611	eval.c	FUNCTION_87	SWITCH_1	IF_6	CALL_9
0x40049b5	          0x4889de	                            mov rsi, rbx	      5611	eval.c	FUNCTION_87	SWITCH_1	IF_6	CALL_9
0x40049b8	      0xe800000000	                          call 0x40049bd	      5611	eval.c	FUNCTION_87	SWITCH_1	IF_6	CALL_9
0x40049bd	          0x4889df	                            mov rdi, rbx	      5612	eval.c	FUNCTION_87	SWITCH_1	IF_6	CALL_10
0x40049c0	      0xe800000000	                          call 0x40049c5	      5612	eval.c	FUNCTION_87	SWITCH_1	IF_6	CALL_10
0x40049c5	      0xe95dfeffff	                           jmp 0x4004827	      5612	eval.c	FUNCTION_87	SWITCH_1	IF_6	CALL_10
0x40049ca	    0x660f1f440000	                    nop word [rax + rax]	      5612	eval.c	FUNCTION_87	SWITCH_1	IF_6	CALL_10
0x40049d0	        0x488b7d08	                mov rdi, qword [rbp + 8]	      5580	eval.c	FUNCTION_87	SWITCH_1	ELSE_1	CALL_3
0x40049d4	            0x31f6	                            xor esi, esi	      5580	eval.c	FUNCTION_87	SWITCH_1	ELSE_1	CALL_3
0x40049d6	      0xe800000000	                          call 0x40049db	      5580	eval.c	FUNCTION_87	SWITCH_1	ELSE_1	CALL_3
0x40049db	    0x8b1500000000	            mov edx, dword [0x040049e1] 	      5580	eval.c	FUNCTION_87	SWITCH_1	ELSE_1	CALL_3
0x40049e1	          0x4889c3	                            mov rbx, rax	      5580	eval.c	FUNCTION_87	SWITCH_1	ELSE_1	CALL_3
0x40049e4	        0x49890424	                    mov qword [r12], rax	      5580	eval.c	FUNCTION_87	SWITCH_1	ELSE_1	CALL_3
0x40049e8	      0xe9e4fbffff	                           jmp 0x40045d1	      5580	eval.c	FUNCTION_87	SWITCH_1	ELSE_1	CALL_3
0x40049ed	           0xf1f00	                         nop dword [rax]	      5580	eval.c	FUNCTION_87	SWITCH_1	ELSE_1	CALL_3
0x40049f0	            0x85c0	                           test eax, eax	      5517	eval.c	FUNCTION_86	SWITCH_1
0x40049f2	      0xbb00000000	                              mov ebx, 0	      5519	eval.c	FUNCTION_86	SWITCH_1
0x40049f7	     0xf84d4fbffff	                            je 0x40045d1	      5517	eval.c	FUNCTION_86	SWITCH_1
0x40049fd	      0xe98cfbffff	                           jmp 0x400458e	      5517	eval.c	FUNCTION_86	SWITCH_1
0x4004a02	      0x4883781800	               cmp qword [rax + 0x18], 0	      5675	eval.c	FUNCTION_87	SWITCH_1	ELSE_5	IF_14
0x4004a07	            0x7439	                            je 0x4004a42	      5675	eval.c	FUNCTION_87	SWITCH_1	ELSE_5	IF_14
0x4004a09	    0x48c706000000	                      mov qword [rsi], 0	      5677	eval.c	FUNCTION_87	SWITCH_1	ELSE_5	IF_14
0x4004a10	      0xbb00000000	                              mov ebx, 0	      5678	eval.c	FUNCTION_87	SWITCH_1	ELSE_5	IF_14
0x4004a15	      0xe9b7fbffff	                           jmp 0x40045d1	      5678	eval.c	FUNCTION_87	SWITCH_1	ELSE_5	IF_14
0x4004a1a	          0x8b483c	            mov ecx, dword [rax + 0x3c] 	      5651	eval.c	FUNCTION_87	SWITCH_1	ELSE_3	IF_11
0x4004a1d	            0x85c9	                           test ecx, ecx	      5651	eval.c	FUNCTION_87	SWITCH_1	ELSE_3	IF_11
0x4004a1f	            0x7e29	                           jle 0x4004a4a	      5651	eval.c	FUNCTION_87	SWITCH_1	ELSE_3	IF_11
0x4004a21	    0x48c706000000	                      mov qword [rsi], 0	      5653	eval.c	FUNCTION_87	SWITCH_1	ELSE_3	IF_11
0x4004a28	      0xbb00000000	                              mov ebx, 0	      5654	eval.c	FUNCTION_87	SWITCH_1	ELSE_3	IF_11
0x4004a2d	      0xe99ffbffff	                           jmp 0x40045d1	      5654	eval.c	FUNCTION_87	SWITCH_1	ELSE_3	IF_11
0x4004a32	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      4864	eval.c	FUNCTION_75
0x4004a36	    0x488db8d80000	                   lea rdi, [rax + 0xd8]	      4864	eval.c	FUNCTION_75
0x4004a3d	      0xe988fcffff	                           jmp 0x40046ca	      4864	eval.c	FUNCTION_75
0x4004a42	          0x4189ce	                           mov r14d, ecx	      4864	eval.c	FUNCTION_75
0x4004a45	      0xe9ccfbffff	                           jmp 0x4004616	      4864	eval.c	FUNCTION_75
0x4004a4a	          0x4589ee	                          mov r14d, r13d	      4864	eval.c	FUNCTION_75
0x4004a4d	      0xe91cfcffff	                           jmp 0x400466e	      4864	eval.c	FUNCTION_75
0x4004a52	      0xe800000000	                          call 0x4004a57	      5725	eval.c	FUNCTION_87
reset_v_option_vars	functions,0:SWITCH,0:IF,0:DO,0:ELSE,0:WHILE,0:CALL,3:FOR,0	15
0x4008920	        0x4883ec08	                              sub rsp, 8	      8774	eval.c	FUNCTION_167
0x4008924	      0xbf00000000	                              mov edi, 0	      6473	eval.c	FUNCTION_109	CALL_1
0x4008929	      0xe800000000	                          call 0x400892e	      6473	eval.c	FUNCTION_109	CALL_1
0x400892e	      0xbf00000000	                              mov edi, 0	      6473	eval.c	FUNCTION_109	CALL_1
0x4008933	    0xc70500000000	               mov dword [0x0400893d], 2	      6474	eval.c	FUNCTION_109
0x400893d	    0x48c705000000	               mov qword [0x04008948], 0	      6476	eval.c	FUNCTION_109	IF_1
0x4008948	      0xe800000000	                          call 0x400894d	      6473	eval.c	FUNCTION_109	CALL_1
0x400894d	      0xbf00000000	                              mov edi, 0	      6473	eval.c	FUNCTION_109	CALL_1
0x4008952	    0xc70500000000	               mov dword [0x0400895c], 2	      6474	eval.c	FUNCTION_109
0x400895c	    0x48c705000000	               mov qword [0x04008967], 0	      6476	eval.c	FUNCTION_109	IF_1
0x4008967	      0xe800000000	                          call 0x400896c	      6473	eval.c	FUNCTION_109	CALL_1
0x400896c	    0xc70500000000	               mov dword [0x04008976], 2	      6474	eval.c	FUNCTION_109
0x4008976	    0x48c705000000	               mov qword [0x04008981], 0	      6476	eval.c	FUNCTION_109	IF_1
0x4008981	        0x4883c408	                              add rsp, 8	      8778	eval.c	FUNCTION_167
0x4008985	              0xc3	                                     ret	      8778	eval.c	FUNCTION_167
modify_fname	functions,0:SWITCH,0:IF,54:DO,0:ELSE,9:WHILE,5:CALL,58:FOR,3	549
0x4012ae0	            0x4157	                                push r15	      9703	eval.c	FUNCTION_187
0x4012ae2	            0x4156	                                push r14	      9703	eval.c	FUNCTION_187
0x4012ae4	          0x4d89c6	                             mov r14, r8	      9703	eval.c	FUNCTION_187
0x4012ae7	            0x4155	                                push r13	      9703	eval.c	FUNCTION_187
0x4012ae9	            0x4154	                                push r12	      9703	eval.c	FUNCTION_187
0x4012aeb	          0x4989fd	                            mov r13, rdi	      9703	eval.c	FUNCTION_187
0x4012aee	              0x55	                                push rbp	      9703	eval.c	FUNCTION_187
0x4012aef	              0x53	                                push rbx	      9703	eval.c	FUNCTION_187
0x4012af0	          0x4989f4	                            mov r12, rsi	      9703	eval.c	FUNCTION_187
0x4012af3	          0x4889d5	                            mov rbp, rdx	      9703	eval.c	FUNCTION_187
0x4012af6	    0x4881ec481000	                         sub rsp, 0x1048	      9703	eval.c	FUNCTION_187
0x4012afd	    0x64488b042528	                mov rax, qword fs:[0x28]	      9703	eval.c	FUNCTION_187
0x4012b06	    0x488984243810	          mov qword [rsp + 0x1038], rax 	      9703	eval.c	FUNCTION_187
0x4012b0e	            0x31c0	                            xor eax, eax	      9703	eval.c	FUNCTION_187
0x4012b10	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      9703	eval.c	FUNCTION_187
0x4012b15	    0xc70424000000	                      mov dword [rsp], 0	      9709	eval.c	FUNCTION_187
0x4012b1c	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      9704	eval.c	FUNCTION_187
0x4012b24	        0x49631424	                 movsxd rdx, dword [r12]	      9717	eval.c	FUNCTION_187	IF_1
0x4012b28	    0x410fb6741500	             movzx esi, byte [r13 + rdx]	      9717	eval.c	FUNCTION_187	IF_1
0x4012b2e	          0x4889d0	                            mov rax, rdx	      9717	eval.c	FUNCTION_187	IF_1
0x4012b31	        0x4080fe3a	                           cmp sil, 0x3a	      9717	eval.c	FUNCTION_187	IF_1
0x4012b35	     0xf8587000000	                           jne 0x4012bc2	      9717	eval.c	FUNCTION_187	IF_1
0x4012b3b	      0xe986050000	                           jmp 0x40130c6	      9717	eval.c	FUNCTION_187	IF_1
0x4012b40	        0x4183ff7e	                          cmp r15d, 0x7e	      9803	eval.c	FUNCTION_187	WHILE_1
0x4012b44	            0x740a	                            je 0x4012b50	      9803	eval.c	FUNCTION_187	WHILE_1
0x4012b46	        0x4183ff38	                          cmp r15d, 0x38	      9803	eval.c	FUNCTION_187	WHILE_1
0x4012b4a	     0xf85cd000000	                           jne 0x4012c1d	      9803	eval.c	FUNCTION_187	WHILE_1
0x4012b50	          0x83c002	                              add eax, 2	      9805	eval.c	FUNCTION_187	WHILE_1
0x4012b53	        0x4183ff38	                          cmp r15d, 0x38	      9806	eval.c	FUNCTION_187	WHILE_1	IF_12
0x4012b57	        0x41890424	                    mov dword [r12], eax	      9805	eval.c	FUNCTION_187	WHILE_1
0x4012b5b	     0xf84af000000	                            je 0x4012c10	      9806	eval.c	FUNCTION_187	WHILE_1	IF_12
0x4012b61	          0x8b0424	                    mov eax, dword [rsp]	      9815	eval.c	FUNCTION_187	WHILE_1	IF_13
0x4012b64	            0x85c0	                           test eax, eax	      9815	eval.c	FUNCTION_187	WHILE_1	IF_13
0x4012b66	     0xf84e4010000	                            je 0x4012d50	      9815	eval.c	FUNCTION_187	WHILE_1	IF_13
0x4012b6c	        0x4c8b4d00	                     mov r9, qword [rbp]	      9823	eval.c	FUNCTION_187	WHILE_1	ELSE_3
0x4012b70	            0x31db	                            xor ebx, ebx	      9813	eval.c	FUNCTION_187	WHILE_1
0x4012b72	          0x4d85c9	                             test r9, r9	      9827	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15
0x4012b75	            0x7437	                            je 0x4012bae	      9827	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15
0x4012b77	        0x4183ff2e	                          cmp r15d, 0x2e	      9829	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16
0x4012b7b	     0xf84df010000	                            je 0x4012d60	      9829	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16
0x4012b81	      0x488d542430	                   lea rdx, [rsp + 0x30]	      9846	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	CALL_25
0x4012b86	            0x31ff	                            xor edi, edi	      9846	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	CALL_25
0x4012b88	    0x41b801000000	                              mov r8d, 1	      9846	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	CALL_25
0x4012b8e	      0xb900100000	                         mov ecx, 0x1000	      9846	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	CALL_25
0x4012b93	          0x4c89ce	                             mov rsi, r9	      9846	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	CALL_25
0x4012b96	      0xe800000000	                          call 0x4012b9b	      9846	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	CALL_25
0x4012b9b	      0x807c24307e	            cmp byte [rsp + 0x30], 0x7e 	      9848	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	IF_19
0x4012ba0	     0xf8472020000	                            je 0x4012e18	      9848	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	IF_19
0x4012ba6	          0x4889df	                            mov rdi, rbx	      9859	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	CALL_28
0x4012ba9	      0xe800000000	                          call 0x4012bae	      9859	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	CALL_28
0x4012bae	        0x49631424	                 movsxd rdx, dword [r12]	      9859	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	CALL_28
0x4012bb2	    0x410fb6741500	             movzx esi, byte [r13 + rdx]	      9859	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	CALL_28
0x4012bb8	          0x4889d0	                            mov rax, rdx	      9859	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	CALL_28
0x4012bbb	    0xc70424000000	                      mov dword [rsp], 0	      9825	eval.c	FUNCTION_187	WHILE_1	ELSE_3
0x4012bc2	        0x4080fe3a	                           cmp sil, 0x3a	      9802	eval.c	FUNCTION_187	WHILE_1
0x4012bc6	      0x498d4c1502	                lea rcx, [r13 + rdx + 2]	      9802	eval.c	FUNCTION_187	WHILE_1
0x4012bcb	            0x7550	                           jne 0x4012c1d	      9802	eval.c	FUNCTION_187	WHILE_1
0x4012bcd	      0x440fb679ff	              movzx r15d, byte [rcx - 1]	      9803	eval.c	FUNCTION_187	WHILE_1
0x4012bd2	        0x4183ff2e	                          cmp r15d, 0x2e	      9803	eval.c	FUNCTION_187	WHILE_1
0x4012bd6	     0xf8564ffffff	                           jne 0x4012b40	      9803	eval.c	FUNCTION_187	WHILE_1
0x4012bdc	          0x8b1424	                    mov edx, dword [rsp]	      9815	eval.c	FUNCTION_187	WHILE_1	IF_13
0x4012bdf	          0x83c002	                              add eax, 2	      9805	eval.c	FUNCTION_187	WHILE_1
0x4012be2	        0x41890424	                    mov dword [r12], eax	      9805	eval.c	FUNCTION_187	WHILE_1
0x4012be6	            0x85d2	                           test edx, edx	      9815	eval.c	FUNCTION_187	WHILE_1	IF_13
0x4012be8	            0x7582	                           jne 0x4012b6c	      9815	eval.c	FUNCTION_187	WHILE_1	IF_13
0x4012bea	        0x488b7d00	                    mov rdi, qword [rbp]	      9817	eval.c	FUNCTION_187	WHILE_1	IF_13	IF_14
0x4012bee	          0x803f7e	                    cmp byte [rdi], 0x7e	      9817	eval.c	FUNCTION_187	WHILE_1	IF_13	IF_14
0x4012bf1	     0xf84bf040000	                            je 0x40130b6	      9817	eval.c	FUNCTION_187	WHILE_1	IF_13	IF_14
0x4012bf7	            0x31f6	                            xor esi, esi	      9820	eval.c	FUNCTION_187	WHILE_1	IF_13	CALL_21
0x4012bf9	      0xe800000000	                          call 0x4012bfe	      9820	eval.c	FUNCTION_187	WHILE_1	IF_13	CALL_21
0x4012bfe	          0x4989c1	                             mov r9, rax	      9820	eval.c	FUNCTION_187	WHILE_1	IF_13	CALL_21
0x4012c01	          0x4889c3	                            mov rbx, rax	      9820	eval.c	FUNCTION_187	WHILE_1	IF_13	CALL_21
0x4012c04	      0xe969ffffff	                           jmp 0x4012b72	      9820	eval.c	FUNCTION_187	WHILE_1	IF_13	CALL_21
0x4012c09	     0xf1f80000000	                         nop dword [rax]	      9820	eval.c	FUNCTION_187	WHILE_1	IF_13	CALL_21
0x4012c10	           0xfb631	                   movzx esi, byte [rcx]	      9820	eval.c	FUNCTION_187	WHILE_1	IF_13	CALL_21
0x4012c13	        0x4883c102	                              add rcx, 2	      9820	eval.c	FUNCTION_187	WHILE_1	IF_13	CALL_21
0x4012c17	        0x4080fe3a	                           cmp sil, 0x3a	      9802	eval.c	FUNCTION_187	WHILE_1
0x4012c1b	            0x74b0	                            je 0x4012bcd	      9802	eval.c	FUNCTION_187	WHILE_1
0x4012c1d	        0x488b7d00	                    mov rdi, qword [rbp]	      9863	eval.c	FUNCTION_187	CALL_29
0x4012c21	      0xe800000000	                          call 0x4012c26	      9863	eval.c	FUNCTION_187	CALL_29
0x4012c26	        0x488b7d00	                    mov rdi, qword [rbp]	      9864	eval.c	FUNCTION_187	CALL_30
0x4012c2a	          0x4989c7	                            mov r15, rax	      9863	eval.c	FUNCTION_187	CALL_29
0x4012c2d	      0xe800000000	                          call 0x4012c32	      9864	eval.c	FUNCTION_187	CALL_30
0x4012c32	          0x418906	                    mov dword [r14], eax	      9864	eval.c	FUNCTION_187	CALL_30
0x4012c35	           0xf1f00	                         nop dword [rax]	      9864	eval.c	FUNCTION_187	CALL_30
0x4012c38	        0x49630424	                 movsxd rax, dword [r12]	      9868	eval.c	FUNCTION_187	WHILE_2
0x4012c3c	    0x41807c05003a	              cmp byte [r13 + rax], 0x3a	      9868	eval.c	FUNCTION_187	WHILE_2
0x4012c42	          0x4889c1	                            mov rcx, rax	      9868	eval.c	FUNCTION_187	WHILE_2
0x4012c45	     0xf85d5000000	                           jne 0x4012d20	      9868	eval.c	FUNCTION_187	WHILE_2
0x4012c4b	    0x410fb6740501	        movzx esi, byte [r13 + rax + 1] 	      9868	eval.c	FUNCTION_187	WHILE_2
0x4012c51	        0x4080fe68	                           cmp sil, 0x68	      9868	eval.c	FUNCTION_187	WHILE_2
0x4012c55	     0xf85f1010000	                           jne 0x4012e4c	      9868	eval.c	FUNCTION_187	WHILE_2
0x4012c5b	        0x488b7d00	                    mov rdi, qword [rbp]	      9872	eval.c	FUNCTION_187	WHILE_2	CALL_31
0x4012c5f	          0x83c102	                              add ecx, 2	      9871	eval.c	FUNCTION_187	WHILE_2
0x4012c62	      0x834c240c02	                 or dword [rsp + 0xc], 2	      9870	eval.c	FUNCTION_187	WHILE_2
0x4012c67	        0x41890c24	                    mov dword [r12], ecx	      9871	eval.c	FUNCTION_187	WHILE_2
0x4012c6b	      0xe800000000	                          call 0x4012c70	      9872	eval.c	FUNCTION_187	WHILE_2	CALL_31
0x4012c70	          0x4939c7	                            cmp r15, rax	      9873	eval.c	FUNCTION_187	WHILE_2	WHILE_3	CALL_32
0x4012c73	          0x4889c3	                            mov rbx, rax	      9872	eval.c	FUNCTION_187	WHILE_2	CALL_31
0x4012c76	            0x7710	                            ja 0x4012c88	      9873	eval.c	FUNCTION_187	WHILE_2	WHILE_3	CALL_32
0x4012c78	            0xeb50	                           jmp 0x4012cca	      9873	eval.c	FUNCTION_187	WHILE_2	WHILE_3	CALL_32
0x4012c7a	    0x660f1f440000	                    nop word [rax + rax]	      9873	eval.c	FUNCTION_187	WHILE_2	WHILE_3	CALL_32
0x4012c80	          0x4901c7	                            add r15, rax	      9874	eval.c	FUNCTION_187	WHILE_2	CALL_33
0x4012c83	          0x4c39fb	                            cmp rbx, r15	      9873	eval.c	FUNCTION_187	WHILE_2	WHILE_3	CALL_32
0x4012c86	            0x7342	                           jae 0x4012cca	      9873	eval.c	FUNCTION_187	WHILE_2	WHILE_3	CALL_32
0x4012c88	          0x4c89fe	                            mov rsi, r15	      9873	eval.c	FUNCTION_187	WHILE_2	WHILE_3	CALL_32
0x4012c8b	          0x4889df	                            mov rdi, rbx	      9873	eval.c	FUNCTION_187	WHILE_2	WHILE_3	CALL_32
0x4012c8e	      0xe800000000	                          call 0x4012c93	      9873	eval.c	FUNCTION_187	WHILE_2	WHILE_3	CALL_32
0x4012c93	            0x85c0	                           test eax, eax	      9873	eval.c	FUNCTION_187	WHILE_2	WHILE_3	CALL_32
0x4012c95	     0xf841d010000	                            je 0x4012db8	      9873	eval.c	FUNCTION_187	WHILE_2	WHILE_3	CALL_32
0x4012c9b	    0x8b3500000000	            mov esi, dword [0x04012ca1] 	      9874	eval.c	FUNCTION_187	WHILE_2	CALL_33
0x4012ca1	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      9874	eval.c	FUNCTION_187	WHILE_2	CALL_33
0x4012ca8	            0x85f6	                           test esi, esi	      9874	eval.c	FUNCTION_187	WHILE_2	CALL_33
0x4012caa	            0x74d4	                            je 0x4012c80	      9874	eval.c	FUNCTION_187	WHILE_2	CALL_33
0x4012cac	        0x498d3407	                    lea rsi, [r15 + rax]	      9874	eval.c	FUNCTION_187	WHILE_2	CALL_33
0x4012cb0	        0x488b7d00	                    mov rdi, qword [rbp]	      9874	eval.c	FUNCTION_187	WHILE_2	CALL_33
0x4012cb4	    0xff1500000000	                 call qword [0x04012cba]	      9874	eval.c	FUNCTION_187	WHILE_2	CALL_33
0x4012cba	          0x83c001	                              add eax, 1	      9874	eval.c	FUNCTION_187	WHILE_2	CALL_33
0x4012cbd	            0x4898	                                    cdqe	      9874	eval.c	FUNCTION_187	WHILE_2	CALL_33
0x4012cbf	          0x48f7d8	                                 neg rax	      9874	eval.c	FUNCTION_187	WHILE_2	CALL_33
0x4012cc2	          0x4901c7	                            add r15, rax	      9874	eval.c	FUNCTION_187	WHILE_2	CALL_33
0x4012cc5	          0x4c39fb	                            cmp rbx, r15	      9873	eval.c	FUNCTION_187	WHILE_2	WHILE_3	CALL_32
0x4012cc8	            0x72be	                            jb 0x4012c88	      9873	eval.c	FUNCTION_187	WHILE_2	WHILE_3	CALL_32
0x4012cca	          0x4c89f8	                            mov rax, r15	      9875	eval.c	FUNCTION_187	WHILE_2
0x4012ccd	        0x482b4500	                    sub rax, qword [rbp]	      9875	eval.c	FUNCTION_187	WHILE_2
0x4012cd1	            0x85c0	                           test eax, eax	      9880	eval.c	FUNCTION_187	WHILE_2	IF_22
0x4012cd3	          0x418906	                    mov dword [r14], eax	      9875	eval.c	FUNCTION_187	WHILE_2
0x4012cd6	     0xf855cffffff	                           jne 0x4012c38	      9880	eval.c	FUNCTION_187	WHILE_2	IF_22
0x4012cdc	      0xbf00000000	                              mov edi, 0	      9883	eval.c	FUNCTION_187	WHILE_2	IF_22	CALL_34
0x4012ce1	      0xe800000000	                          call 0x4012ce6	      9883	eval.c	FUNCTION_187	WHILE_2	IF_22	CALL_34
0x4012ce6	          0x4885c0	                           test rax, rax	      9884	eval.c	FUNCTION_187	WHILE_2	IF_22	IF_23
0x4012ce9	          0x4989c7	                            mov r15, rax	      9883	eval.c	FUNCTION_187	WHILE_2	IF_22	CALL_34
0x4012cec	     0xf84f4040000	                            je 0x40131e6	      9884	eval.c	FUNCTION_187	WHILE_2	IF_22	IF_23
0x4012cf2	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      9886	eval.c	FUNCTION_187	WHILE_2	IF_22	CALL_35
0x4012cf7	          0x488b3b	                    mov rdi, qword [rbx]	      9886	eval.c	FUNCTION_187	WHILE_2	IF_22	CALL_35
0x4012cfa	      0xe800000000	                          call 0x4012cff	      9886	eval.c	FUNCTION_187	WHILE_2	IF_22	CALL_35
0x4012cff	        0x4c897d00	                    mov qword [rbp], r15	      9887	eval.c	FUNCTION_187	WHILE_2	IF_22
0x4012d03	          0x4c893b	                    mov qword [rbx], r15	      9887	eval.c	FUNCTION_187	WHILE_2	IF_22
0x4012d06	    0x41c706010000	                      mov dword [r14], 1	      9888	eval.c	FUNCTION_187	WHILE_2	IF_22
0x4012d0d	        0x49630424	                 movsxd rax, dword [r12]	      9868	eval.c	FUNCTION_187	WHILE_2
0x4012d11	    0x41807c05003a	              cmp byte [r13 + rax], 0x3a	      9868	eval.c	FUNCTION_187	WHILE_2
0x4012d17	          0x4889c1	                            mov rcx, rax	      9868	eval.c	FUNCTION_187	WHILE_2
0x4012d1a	     0xf842bffffff	                            je 0x4012c4b	      9868	eval.c	FUNCTION_187	WHILE_2
0x4012d20	        0x8b44240c	              mov eax, dword [rsp + 0xc]	     10080	eval.c	FUNCTION_187	IF_51
0x4012d24	    0x488b94243810	          mov rdx, qword [rsp + 0x1038] 	     10084	eval.c	FUNCTION_187
0x4012d2c	    0x644833142528	                xor rdx, qword fs:[0x28]	     10084	eval.c	FUNCTION_187
0x4012d35	     0xf8544060000	                           jne 0x401337f	     10084	eval.c	FUNCTION_187
0x4012d3b	    0x4881c4481000	                         add rsp, 0x1048	     10084	eval.c	FUNCTION_187
0x4012d42	              0x5b	                                 pop rbx	     10084	eval.c	FUNCTION_187
0x4012d43	              0x5d	                                 pop rbp	     10084	eval.c	FUNCTION_187
0x4012d44	            0x415c	                                 pop r12	     10084	eval.c	FUNCTION_187
0x4012d46	            0x415d	                                 pop r13	     10084	eval.c	FUNCTION_187
0x4012d48	            0x415e	                                 pop r14	     10084	eval.c	FUNCTION_187
0x4012d4a	            0x415f	                                 pop r15	     10084	eval.c	FUNCTION_187
0x4012d4c	              0xc3	                                     ret	     10084	eval.c	FUNCTION_187
0x4012d4d	           0xf1f00	                         nop dword [rax]	     10084	eval.c	FUNCTION_187
0x4012d50	        0x488b7d00	                    mov rdi, qword [rbp]	     10084	eval.c	FUNCTION_187
0x4012d54	      0xe99efeffff	                           jmp 0x4012bf7	     10084	eval.c	FUNCTION_187
0x4012d59	     0xf1f80000000	                         nop dword [rax]	     10084	eval.c	FUNCTION_187
0x4012d60	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      9831	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	CALL_22
0x4012d65	      0xbe00100000	                         mov esi, 0x1000	      9831	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	CALL_22
0x4012d6a	        0x4c890c24	                     mov qword [rsp], r9	      9831	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	CALL_22
0x4012d6e	      0xe800000000	                          call 0x4012d73	      9831	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	CALL_22
0x4012d73	        0x4c8b0c24	                     mov r9, qword [rsp]	      9832	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	CALL_23
0x4012d77	      0x488d742430	                   lea rsi, [rsp + 0x30]	      9832	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	CALL_23
0x4012d7c	          0x4c89cf	                             mov rdi, r9	      9832	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	CALL_23
0x4012d7f	      0xe800000000	                          call 0x4012d84	      9832	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	CALL_23
0x4012d84	          0x4885c0	                           test rax, rax	      9833	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	IF_17
0x4012d87	     0xf8419feffff	                            je 0x4012ba6	      9833	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	IF_17
0x4012d8d	          0x4885db	                           test rbx, rbx	      9836	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	IF_17	IF_18
0x4012d90	        0x48894500	                    mov qword [rbp], rax	      9835	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	IF_17
0x4012d94	     0xf840cfeffff	                            je 0x4012ba6	      9836	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	IF_17	IF_18
0x4012d9a	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      9838	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	IF_17	IF_18	CALL_24
0x4012d9f	          0x498b3f	                    mov rdi, qword [r15]	      9838	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	IF_17	IF_18	CALL_24
0x4012da2	      0xe800000000	                          call 0x4012da7	      9838	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	IF_17	IF_18	CALL_24
0x4012da7	          0x49891f	                    mov qword [r15], rbx	      9839	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	IF_17	IF_18
0x4012daa	            0x31db	                            xor ebx, ebx	      9840	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	IF_17	IF_18
0x4012dac	      0xe9f5fdffff	                           jmp 0x4012ba6	      9840	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	IF_17	IF_18
0x4012db1	     0xf1f80000000	                         nop dword [rax]	      9840	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	IF_16	IF_17	IF_18
0x4012db8	          0x4c89f8	                            mov rax, r15	      9875	eval.c	FUNCTION_187	WHILE_2
0x4012dbb	        0x482b4500	                    sub rax, qword [rbp]	      9875	eval.c	FUNCTION_187	WHILE_2
0x4012dbf	            0x85c0	                           test eax, eax	      9880	eval.c	FUNCTION_187	WHILE_2	IF_22
0x4012dc1	          0x418906	                    mov dword [r14], eax	      9875	eval.c	FUNCTION_187	WHILE_2
0x4012dc4	            0x750d	                           jne 0x4012dd3	      9880	eval.c	FUNCTION_187	WHILE_2	IF_22
0x4012dc6	      0xe911ffffff	                           jmp 0x4012cdc	      9880	eval.c	FUNCTION_187	WHILE_2	IF_22
0x4012dcb	       0xf1f440000	                   nop dword [rax + rax]	      9880	eval.c	FUNCTION_187	WHILE_2	IF_22
0x4012dd0	          0x4901c7	                            add r15, rax	      9893	eval.c	FUNCTION_187	WHILE_2	ELSE_5	CALL_37
0x4012dd3	          0x4c39fb	                            cmp rbx, r15	      9892	eval.c	FUNCTION_187	WHILE_2	ELSE_5	WHILE_4	CALL_36
0x4012dd6	     0xf835cfeffff	                           jae 0x4012c38	      9892	eval.c	FUNCTION_187	WHILE_2	ELSE_5	WHILE_4	CALL_36
0x4012ddc	          0x4c89fe	                            mov rsi, r15	      9892	eval.c	FUNCTION_187	WHILE_2	ELSE_5	WHILE_4	CALL_36
0x4012ddf	          0x4889df	                            mov rdi, rbx	      9892	eval.c	FUNCTION_187	WHILE_2	ELSE_5	WHILE_4	CALL_36
0x4012de2	      0xe800000000	                          call 0x4012de7	      9892	eval.c	FUNCTION_187	WHILE_2	ELSE_5	WHILE_4	CALL_36
0x4012de7	            0x85c0	                           test eax, eax	      9892	eval.c	FUNCTION_187	WHILE_2	ELSE_5	WHILE_4	CALL_36
0x4012de9	     0xf8549feffff	                           jne 0x4012c38	      9892	eval.c	FUNCTION_187	WHILE_2	ELSE_5	WHILE_4	CALL_36
0x4012def	    0x8b0d00000000	            mov ecx, dword [0x04012df5] 	      9893	eval.c	FUNCTION_187	WHILE_2	ELSE_5	CALL_37
0x4012df5	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      9893	eval.c	FUNCTION_187	WHILE_2	ELSE_5	CALL_37
0x4012dfc	            0x85c9	                           test ecx, ecx	      9893	eval.c	FUNCTION_187	WHILE_2	ELSE_5	CALL_37
0x4012dfe	            0x74d0	                            je 0x4012dd0	      9893	eval.c	FUNCTION_187	WHILE_2	ELSE_5	CALL_37
0x4012e00	        0x498d3407	                    lea rsi, [r15 + rax]	      9893	eval.c	FUNCTION_187	WHILE_2	ELSE_5	CALL_37
0x4012e04	        0x488b7d00	                    mov rdi, qword [rbp]	      9893	eval.c	FUNCTION_187	WHILE_2	ELSE_5	CALL_37
0x4012e08	    0xff1500000000	                 call qword [0x04012e0e]	      9893	eval.c	FUNCTION_187	WHILE_2	ELSE_5	CALL_37
0x4012e0e	          0x83c001	                              add eax, 1	      9893	eval.c	FUNCTION_187	WHILE_2	ELSE_5	CALL_37
0x4012e11	            0x4898	                                    cdqe	      9893	eval.c	FUNCTION_187	WHILE_2	ELSE_5	CALL_37
0x4012e13	          0x48f7d8	                                 neg rax	      9893	eval.c	FUNCTION_187	WHILE_2	ELSE_5	CALL_37
0x4012e16	            0xebb8	                           jmp 0x4012dd0	      9893	eval.c	FUNCTION_187	WHILE_2	ELSE_5	CALL_37
0x4012e18	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      9850	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	IF_19	CALL_26
0x4012e1d	      0xe800000000	                          call 0x4012e22	      9850	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	IF_19	CALL_26
0x4012e22	          0x4885c0	                           test rax, rax	      9851	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	IF_19	IF_20
0x4012e25	          0x4989c7	                            mov r15, rax	      9850	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	IF_19	CALL_26
0x4012e28	     0xf8478fdffff	                            je 0x4012ba6	      9851	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	IF_19	IF_20
0x4012e2e	        0x48894500	                    mov qword [rbp], rax	      9853	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	IF_19	IF_20
0x4012e32	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      9854	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	IF_19	IF_20	CALL_27
0x4012e37	          0x488b38	                    mov rdi, qword [rax]	      9854	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	IF_19	IF_20	CALL_27
0x4012e3a	      0xe800000000	                          call 0x4012e3f	      9854	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	IF_19	IF_20	CALL_27
0x4012e3f	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      9855	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	IF_19	IF_20
0x4012e44	          0x4c8938	                    mov qword [rax], r15	      9855	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	IF_19	IF_20
0x4012e47	      0xe95afdffff	                           jmp 0x4012ba6	      9855	eval.c	FUNCTION_187	WHILE_1	ELSE_3	IF_15	ELSE_4	IF_19	IF_20
0x4012e4c	        0x4080fe38	                           cmp sil, 0x38	      9898	eval.c	FUNCTION_187	IF_24
0x4012e50	     0xf84ca030000	                            je 0x4013220	      9898	eval.c	FUNCTION_187	IF_24
0x4012e56	        0x4080fe74	                           cmp sil, 0x74	      9953	eval.c	FUNCTION_187	IF_33
0x4012e5a	     0xf8490030000	                            je 0x40131f0	      9953	eval.c	FUNCTION_187	IF_33
0x4012e60	        0x4080fe72	                           cmp sil, 0x72	      9963	eval.c	FUNCTION_187	WHILE_5
0x4012e64	            0x7406	                            je 0x4012e6c	      9963	eval.c	FUNCTION_187	WHILE_5
0x4012e66	        0x4080fe65	                           cmp sil, 0x65	      9963	eval.c	FUNCTION_187	WHILE_5
0x4012e6a	            0x7573	                           jne 0x4012edf	      9963	eval.c	FUNCTION_187	WHILE_5
0x4012e6c	        0x488b4d00	                    mov rcx, qword [rbp]	      9963	eval.c	FUNCTION_187	WHILE_5
0x4012e70	        0x4080fe65	                           cmp sil, 0x65	      9969	eval.c	FUNCTION_187	WHILE_5	IF_34
0x4012e74	     0xf84f6010000	                            je 0x4013070	      9969	eval.c	FUNCTION_187	WHILE_5	IF_34
0x4012e7a	          0x496306	                 movsxd rax, dword [r14]	      9972	eval.c	FUNCTION_187	WHILE_5	ELSE_7
0x4012e7d	      0x488d4401ff	                lea rax, [rcx + rax - 1]	      9972	eval.c	FUNCTION_187	WHILE_5	ELSE_7
0x4012e82	          0x4939c7	                            cmp r15, rax	      9973	eval.c	FUNCTION_187	WHILE_5	FOR_2
0x4012e85	            0x7323	                           jae 0x4012eaa	      9973	eval.c	FUNCTION_187	WHILE_5	FOR_2
0x4012e87	          0x80382e	                    cmp byte [rax], 0x2e	      9974	eval.c	FUNCTION_187	WHILE_5	FOR_2	IF_35
0x4012e8a	            0x7515	                           jne 0x4012ea1	      9974	eval.c	FUNCTION_187	WHILE_5	FOR_2	IF_35
0x4012e8c	      0xe906020000	                           jmp 0x4013097	      9974	eval.c	FUNCTION_187	WHILE_5	FOR_2	IF_35
0x4012e91	     0xf1f80000000	                         nop dword [rax]	      9974	eval.c	FUNCTION_187	WHILE_5	FOR_2	IF_35
0x4012e98	          0x80382e	                    cmp byte [rax], 0x2e	      9974	eval.c	FUNCTION_187	WHILE_5	FOR_2	IF_35
0x4012e9b	     0xf84af010000	                            je 0x4013050	      9974	eval.c	FUNCTION_187	WHILE_5	FOR_2	IF_35
0x4012ea1	        0x4883e801	                              sub rax, 1	      9973	eval.c	FUNCTION_187	WHILE_5	FOR_2
0x4012ea5	          0x4939c7	                            cmp r15, rax	      9973	eval.c	FUNCTION_187	WHILE_5	FOR_2
0x4012ea8	            0x75ee	                           jne 0x4012e98	      9973	eval.c	FUNCTION_187	WHILE_5	FOR_2
0x4012eaa	        0x4080fe65	                           cmp sil, 0x65	      9976	eval.c	FUNCTION_187	WHILE_5	IF_36
0x4012eae	     0xf84ce010000	                            je 0x4013082	      9976	eval.c	FUNCTION_187	WHILE_5	IF_36
0x4012eb4	        0x418b0424	                    mov eax, dword [r12]	     10000	eval.c	FUNCTION_187	WHILE_5
0x4012eb8	          0x83c002	                              add eax, 2	     10000	eval.c	FUNCTION_187	WHILE_5
0x4012ebb	        0x41890424	                    mov dword [r12], eax	     10000	eval.c	FUNCTION_187	WHILE_5
0x4012ebf	            0x4898	                                    cdqe	      9962	eval.c	FUNCTION_187	WHILE_5
0x4012ec1	    0x41807c05003a	              cmp byte [r13 + rax], 0x3a	      9962	eval.c	FUNCTION_187	WHILE_5
0x4012ec7	     0xf8553feffff	                           jne 0x4012d20	      9962	eval.c	FUNCTION_187	WHILE_5
0x4012ecd	    0x410fb6740501	        movzx esi, byte [r13 + rax + 1] 	      9963	eval.c	FUNCTION_187	WHILE_5
0x4012ed3	        0x4080fe65	                           cmp sil, 0x65	      9963	eval.c	FUNCTION_187	WHILE_5
0x4012ed7	            0x7497	                            je 0x4012e70	      9963	eval.c	FUNCTION_187	WHILE_5
0x4012ed9	        0x4080fe72	                           cmp sil, 0x72	      9963	eval.c	FUNCTION_187	WHILE_5
0x4012edd	            0x7491	                            je 0x4012e70	      9963	eval.c	FUNCTION_187	WHILE_5
0x4012edf	        0x4080fe73	                           cmp sil, 0x73	     10006	eval.c	FUNCTION_187	IF_42
0x4012ee3	     0xf8477020000	                            je 0x4013160	     10006	eval.c	FUNCTION_187	IF_42
0x4012ee9	        0x4080fe67	                           cmp sil, 0x67	     10007	eval.c	FUNCTION_187	IF_42
0x4012eed	     0xf85ce000000	                           jne 0x4012fc1	     10007	eval.c	FUNCTION_187	IF_42
0x4012ef3	      0x498d440502	                lea rax, [r13 + rax + 2]	     10007	eval.c	FUNCTION_187	IF_42
0x4012ef8	          0x803873	                    cmp byte [rax], 0x73	     10007	eval.c	FUNCTION_187	IF_42
0x4012efb	     0xf85c0000000	                           jne 0x4012fc1	     10007	eval.c	FUNCTION_187	IF_42
0x4012f01	        0x4883c001	                              add rax, 1	     10021	eval.c	FUNCTION_187	IF_42	IF_43
0x4012f05	    0x48c744242800	               mov qword [rsp + 0x28], 0	     10020	eval.c	FUNCTION_187	IF_42	IF_43
0x4012f0e	           0xfb618	                   movzx ebx, byte [rax]	     10024	eval.c	FUNCTION_187	IF_42
0x4012f11	        0x488d4801	                      lea rcx, [rax + 1]	     10024	eval.c	FUNCTION_187	IF_42
0x4012f15	            0x85db	                           test ebx, ebx	     10025	eval.c	FUNCTION_187	IF_42	IF_44
0x4012f17	     0xf84a4000000	                            je 0x4012fc1	     10025	eval.c	FUNCTION_187	IF_42	IF_44
0x4012f1d	            0x89de	                            mov esi, ebx	     10028	eval.c	FUNCTION_187	IF_42	IF_44	CALL_45
0x4012f1f	          0x4889cf	                            mov rdi, rcx	     10028	eval.c	FUNCTION_187	IF_42	IF_44	CALL_45
0x4012f22	      0x48894c2418	             mov qword [rsp + 0x18], rcx	     10028	eval.c	FUNCTION_187	IF_42	IF_44	CALL_45
0x4012f27	      0xe800000000	                          call 0x4012f2c	     10028	eval.c	FUNCTION_187	IF_42	IF_44	CALL_45
0x4012f2c	          0x4885c0	                           test rax, rax	     10029	eval.c	FUNCTION_187	IF_42	IF_44	IF_45
0x4012f2f	          0x4989c7	                            mov r15, rax	     10028	eval.c	FUNCTION_187	IF_42	IF_44	CALL_45
0x4012f32	     0xf8489000000	                            je 0x4012fc1	     10029	eval.c	FUNCTION_187	IF_42	IF_44	IF_45
0x4012f38	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	     10031	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	CALL_46
0x4012f3d	          0x4889c6	                            mov rsi, rax	     10031	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	CALL_46
0x4012f40	          0x4829ce	                            sub rsi, rcx	     10031	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	CALL_46
0x4012f43	          0x4889cf	                            mov rdi, rcx	     10031	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	CALL_46
0x4012f46	      0xe800000000	                          call 0x4012f4b	     10031	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	CALL_46
0x4012f4b	          0x4885c0	                           test rax, rax	     10032	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46
0x4012f4e	      0x4889442418	             mov qword [rsp + 0x18], rax	     10031	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	CALL_46
0x4012f53	            0x746c	                            je 0x4012fc1	     10032	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46
0x4012f55	        0x498d5701	                      lea rdx, [r15 + 1]	     10034	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46
0x4012f59	            0x89de	                            mov esi, ebx	     10036	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	CALL_47
0x4012f5b	          0x4889d7	                            mov rdi, rdx	     10036	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	CALL_47
0x4012f5e	      0x4889542420	             mov qword [rsp + 0x20], rdx	     10036	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	CALL_47
0x4012f63	      0xe800000000	                          call 0x4012f68	     10036	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	CALL_47
0x4012f68	          0x4885c0	                           test rax, rax	     10037	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47
0x4012f6b	          0x4989c7	                            mov r15, rax	     10036	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	CALL_47
0x4012f6e	            0x7447	                            je 0x4012fb7	     10037	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47
0x4012f70	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	     10039	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	CALL_48
0x4012f75	          0x4889c6	                            mov rsi, rax	     10039	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	CALL_48
0x4012f78	          0x4829d6	                            sub rsi, rdx	     10039	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	CALL_48
0x4012f7b	          0x4889d7	                            mov rdi, rdx	     10039	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	CALL_48
0x4012f7e	      0xe800000000	                          call 0x4012f83	     10039	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	CALL_48
0x4012f83	          0x418b36	                    mov esi, dword [r14]	     10040	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	CALL_49
0x4012f86	        0x488b7d00	                    mov rdi, qword [rbp]	     10040	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	CALL_49
0x4012f8a	          0x4889c3	                            mov rbx, rax	     10039	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	CALL_48
0x4012f8d	      0xe800000000	                          call 0x4012f92	     10040	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	CALL_49
0x4012f92	          0x4885db	                           test rbx, rbx	     10041	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48
0x4012f95	      0x4889442420	             mov qword [rsp + 0x20], rax	     10040	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	CALL_49
0x4012f9a	            0x7409	                            je 0x4012fa5	     10041	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48
0x4012f9c	          0x4885c0	                           test rax, rax	     10041	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48
0x4012f9f	     0xf85ce010000	                           jne 0x4013173	     10041	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48
0x4012fa5	          0x4889df	                            mov rdi, rbx	     10054	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	CALL_53
0x4012fa8	      0xe800000000	                          call 0x4012fad	     10054	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	CALL_53
0x4012fad	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	     10055	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	CALL_54
0x4012fb2	      0xe800000000	                          call 0x4012fb7	     10055	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	CALL_54
0x4012fb7	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	     10057	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	CALL_55
0x4012fbc	      0xe800000000	                          call 0x4012fc1	     10057	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	CALL_55
0x4012fc1	        0x49631424	                 movsxd rdx, dword [r12]	     10057	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	CALL_55
0x4012fc5	    0x410fb6441500	             movzx eax, byte [r13 + rdx]	     10057	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	CALL_55
0x4012fcb	            0x3c3a	                            cmp al, 0x3a	     10066	eval.c	FUNCTION_187	IF_51
0x4012fcd	        0x8b44240c	              mov eax, dword [rsp + 0xc]	     10066	eval.c	FUNCTION_187	IF_51
0x4012fd1	     0xf854dfdffff	                           jne 0x4012d24	     10066	eval.c	FUNCTION_187	IF_51
0x4012fd7	    0x41807c150153	         cmp byte [r13 + rdx + 1], 0x53 	     10066	eval.c	FUNCTION_187	IF_51
0x4012fdd	     0xf8541fdffff	                           jne 0x4012d24	     10066	eval.c	FUNCTION_187	IF_51
0x4012fe3	          0x496306	                 movsxd rax, dword [r14]	     10069	eval.c	FUNCTION_187	IF_51
0x4012fe6	        0x488b7d00	                    mov rdi, qword [rbp]	     10069	eval.c	FUNCTION_187	IF_51
0x4012fea	          0x4801f8	                            add rax, rdi	     10069	eval.c	FUNCTION_187	IF_51
0x4012fed	        0x440fb628	                  movzx r13d, byte [rax]	     10069	eval.c	FUNCTION_187	IF_51
0x4012ff1	          0x4584ed	                         test r13b, r13b	     10070	eval.c	FUNCTION_187	IF_51	IF_52
0x4012ff4	     0xf846c030000	                            je 0x4013366	     10070	eval.c	FUNCTION_187	IF_51	IF_52
0x4012ffa	          0xc60000	                       mov byte [rax], 0	     10071	eval.c	FUNCTION_187	IF_51	IF_52
0x4012ffd	        0x488b7d00	                    mov rdi, qword [rbp]	     10072	eval.c	FUNCTION_187	IF_51	CALL_56
0x4013001	            0x31d2	                            xor edx, edx	     10072	eval.c	FUNCTION_187	IF_51	CALL_56
0x4013003	            0x31f6	                            xor esi, esi	     10072	eval.c	FUNCTION_187	IF_51	CALL_56
0x4013005	      0xe800000000	                          call 0x401300a	     10072	eval.c	FUNCTION_187	IF_51	CALL_56
0x401300a	          0x4889c3	                            mov rbx, rax	     10072	eval.c	FUNCTION_187	IF_51	CALL_56
0x401300d	          0x496306	                 movsxd rax, dword [r14]	     10074	eval.c	FUNCTION_187	IF_51	IF_53
0x4013010	        0x488b5500	                    mov rdx, qword [rbp]	     10074	eval.c	FUNCTION_187	IF_51	IF_53
0x4013014	        0x44882c02	              mov byte [rdx + rax], r13b	     10074	eval.c	FUNCTION_187	IF_51	IF_53
0x4013018	          0x4885db	                           test rbx, rbx	     10075	eval.c	FUNCTION_187	IF_51	IF_54
0x401301b	     0xf84c5010000	                            je 0x40131e6	     10075	eval.c	FUNCTION_187	IF_51	IF_54
0x4013021	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	     10077	eval.c	FUNCTION_187	IF_51	CALL_57
0x4013026	          0x498b3f	                    mov rdi, qword [r15]	     10077	eval.c	FUNCTION_187	IF_51	CALL_57
0x4013029	      0xe800000000	                          call 0x401302e	     10077	eval.c	FUNCTION_187	IF_51	CALL_57
0x401302e	        0x48895d00	                    mov qword [rbp], rbx	     10078	eval.c	FUNCTION_187	IF_51
0x4013032	          0x4889df	                            mov rdi, rbx	     10079	eval.c	FUNCTION_187	IF_51	CALL_58
0x4013035	          0x49891f	                    mov qword [r15], rbx	     10078	eval.c	FUNCTION_187	IF_51
0x4013038	      0xe800000000	                          call 0x401303d	     10079	eval.c	FUNCTION_187	IF_51	CALL_58
0x401303d	          0x418906	                    mov dword [r14], eax	     10079	eval.c	FUNCTION_187	IF_51	CALL_58
0x4013040	      0x4183042402	                      add dword [r12], 2	     10080	eval.c	FUNCTION_187	IF_51
0x4013045	      0xe9d6fcffff	                           jmp 0x4012d20	     10080	eval.c	FUNCTION_187	IF_51
0x401304a	    0x660f1f440000	                    nop word [rax + rax]	     10080	eval.c	FUNCTION_187	IF_51
0x4013050	        0x4080fe65	                           cmp sil, 0x65	      9976	eval.c	FUNCTION_187	WHILE_5	IF_36
0x4013054	            0x7447	                            je 0x401309d	      9976	eval.c	FUNCTION_187	WHILE_5	IF_36
0x4013056	          0x4939c7	                            cmp r15, rax	      9997	eval.c	FUNCTION_187	WHILE_5	ELSE_9	IF_41
0x4013059	     0xf8355feffff	                           jae 0x4012eb4	      9997	eval.c	FUNCTION_187	WHILE_5	ELSE_9	IF_41
0x401305f	          0x4829c8	                            sub rax, rcx	      9998	eval.c	FUNCTION_187	WHILE_5	ELSE_9	IF_41
0x4013062	          0x418906	                    mov dword [r14], eax	      9998	eval.c	FUNCTION_187	WHILE_5	ELSE_9	IF_41
0x4013065	      0xe94afeffff	                           jmp 0x4012eb4	      9998	eval.c	FUNCTION_187	WHILE_5	ELSE_9	IF_41
0x401306a	    0x660f1f440000	                    nop word [rax + rax]	      9998	eval.c	FUNCTION_187	WHILE_5	ELSE_9	IF_41
0x4013070	          0x4939cf	                            cmp r15, rcx	      9969	eval.c	FUNCTION_187	WHILE_5	IF_34
0x4013073	        0x488d41fe	                      lea rax, [rcx - 2]	      9970	eval.c	FUNCTION_187	WHILE_5	IF_34
0x4013077	     0xf8205feffff	                            jb 0x4012e82	      9969	eval.c	FUNCTION_187	WHILE_5	IF_34
0x401307d	      0xe9f8fdffff	                           jmp 0x4012e7a	      9969	eval.c	FUNCTION_187	WHILE_5	IF_34
0x4013082	          0x4939cf	                            cmp r15, rcx	      9992	eval.c	FUNCTION_187	WHILE_5	IF_36	ELSE_8	IF_40
0x4013085	     0xf8229feffff	                            jb 0x4012eb4	      9992	eval.c	FUNCTION_187	WHILE_5	IF_36	ELSE_8	IF_40
0x401308b	    0x41c706000000	                      mov dword [r14], 0	      9993	eval.c	FUNCTION_187	WHILE_5	IF_36	ELSE_8	IF_40
0x4013092	      0xe91dfeffff	                           jmp 0x4012eb4	      9993	eval.c	FUNCTION_187	WHILE_5	IF_36	ELSE_8	IF_40
0x4013097	        0x4080fe65	                           cmp sil, 0x65	      9976	eval.c	FUNCTION_187	WHILE_5	IF_36
0x401309b	            0x75c2	                           jne 0x401305f	      9976	eval.c	FUNCTION_187	WHILE_5	IF_36
0x401309d	          0x4889ce	                            mov rsi, rcx	      9980	eval.c	FUNCTION_187	WHILE_5	IF_36	IF_37
0x40130a0	        0x488d4801	                      lea rcx, [rax + 1]	      9980	eval.c	FUNCTION_187	WHILE_5	IF_36	IF_37
0x40130a4	          0x4889f0	                            mov rax, rsi	      9980	eval.c	FUNCTION_187	WHILE_5	IF_36	IF_37
0x40130a7	          0x4829c8	                            sub rax, rcx	      9980	eval.c	FUNCTION_187	WHILE_5	IF_36	IF_37
0x40130aa	          0x410106	                    add dword [r14], eax	      9980	eval.c	FUNCTION_187	WHILE_5	IF_36	IF_37
0x40130ad	        0x48894d00	                    mov qword [rbp], rcx	      9981	eval.c	FUNCTION_187	WHILE_5	IF_36	IF_37
0x40130b1	      0xe9fefdffff	                           jmp 0x4012eb4	      9981	eval.c	FUNCTION_187	WHILE_5	IF_36	IF_37
0x40130b6	      0xe800000000	                          call 0x40130bb	      9818	eval.c	FUNCTION_187	WHILE_1	IF_13	CALL_20
0x40130bb	          0x4989c1	                             mov r9, rax	      9818	eval.c	FUNCTION_187	WHILE_1	IF_13	CALL_20
0x40130be	          0x4889c3	                            mov rbx, rax	      9818	eval.c	FUNCTION_187	WHILE_1	IF_13	CALL_20
0x40130c1	      0xe9acfaffff	                           jmp 0x4012b72	      9818	eval.c	FUNCTION_187	WHILE_1	IF_13	CALL_20
0x40130c6	    0x41807c150170	         cmp byte [r13 + rdx + 1], 0x70 	      9717	eval.c	FUNCTION_187	IF_1
0x40130cc	     0xf85f0faffff	                           jne 0x4012bc2	      9717	eval.c	FUNCTION_187	IF_1
0x40130d2	        0x488b5d00	                    mov rbx, qword [rbp]	      9725	eval.c	FUNCTION_187	IF_1	IF_2
0x40130d6	          0x83c002	                              add eax, 2	      9722	eval.c	FUNCTION_187	IF_1
0x40130d9	      0x834c240c01	                 or dword [rsp + 0xc], 1	      9721	eval.c	FUNCTION_187	IF_1
0x40130de	        0x41890424	                    mov dword [r12], eax	      9722	eval.c	FUNCTION_187	IF_1
0x40130e2	           0xfb63b	                   movzx edi, byte [rbx]	      9725	eval.c	FUNCTION_187	IF_1	IF_2
0x40130e5	        0x4080ff7e	                           cmp dil, 0x7e	      9725	eval.c	FUNCTION_187	IF_1	IF_2
0x40130e9	     0xf8442020000	                            je 0x4013331	      9725	eval.c	FUNCTION_187	IF_1	IF_2
0x40130ef	          0x4084ff	                           test dil, dil	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x40130f2	            0x7517	                           jne 0x401310b	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x40130f4	      0xe97e020000	                           jmp 0x4013377	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x40130f9	     0xf1f80000000	                         nop dword [rax]	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x4013100	          0x4801c3	                            add rbx, rax	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x4013103	           0xfb63b	                   movzx edi, byte [rbx]	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x4013106	          0x4084ff	                           test dil, dil	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x4013109	            0x7438	                            je 0x4013143	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x401310b	      0xe800000000	                          call 0x4013110	      9746	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4	CALL_4
0x4013110	            0x85c0	                           test eax, eax	      9746	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4	CALL_4
0x4013112	            0x740a	                            je 0x401311e	      9746	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4	CALL_4
0x4013114	        0x807b012e	                cmp byte [rbx + 1], 0x2e	      9747	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4
0x4013118	     0xf842a010000	                            je 0x4013248	      9747	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4
0x401311e	    0x8b3d00000000	            mov edi, dword [0x04013124] 	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x4013124	      0xb801000000	                              mov eax, 1	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x4013129	            0x85ff	                           test edi, edi	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x401312b	            0x74d3	                            je 0x4013100	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x401312d	          0x4889df	                            mov rdi, rbx	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x4013130	    0xff1500000000	                 call qword [0x04013136]	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x4013136	            0x4898	                                    cdqe	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x4013138	          0x4801c3	                            add rbx, rax	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x401313b	           0xfb63b	                   movzx edi, byte [rbx]	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x401313e	          0x4084ff	                           test dil, dil	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x4013141	            0x75c8	                           jne 0x401310b	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x4013143	        0x488b7d00	                    mov rdi, qword [rbp]	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x4013147	      0xe800000000	                          call 0x401314c	      9756	eval.c	FUNCTION_187	IF_1	IF_5	CALL_7
0x401314c	            0x85c0	                           test eax, eax	      9756	eval.c	FUNCTION_187	IF_1	IF_5	CALL_7
0x401314e	     0xf858d010000	                           jne 0x40132e1	      9756	eval.c	FUNCTION_187	IF_1	IF_5	CALL_7
0x4013154	           0xfb603	                   movzx eax, byte [rbx]	      9756	eval.c	FUNCTION_187	IF_1	IF_5	CALL_7
0x4013157	      0xe92d010000	                           jmp 0x4013289	      9756	eval.c	FUNCTION_187	IF_1	IF_5	CALL_7
0x401315c	         0xf1f4000	                         nop dword [rax]	      9756	eval.c	FUNCTION_187	IF_1	IF_5	CALL_7
0x4013160	      0x498d440502	                lea rax, [r13 + rax + 2]	     10017	eval.c	FUNCTION_187	IF_42
0x4013165	    0x48c744242800	               mov qword [rsp + 0x28], 0	     10016	eval.c	FUNCTION_187	IF_42
0x401316e	      0xe99bfdffff	                           jmp 0x4012f0e	     10016	eval.c	FUNCTION_187	IF_42
0x4013173	          0x4889c7	                            mov rdi, rax	     10016	eval.c	FUNCTION_187	IF_42
0x4013176	        0x498d4701	                      lea rax, [r15 + 1]	     10043	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48
0x401317a	      0x4c8b442428	              mov r8, qword [rsp + 0x28]	     10044	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	CALL_50
0x401317f	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	     10044	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	CALL_50
0x4013184	            0x31c9	                            xor ecx, ecx	     10044	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	CALL_50
0x4013186	          0x4889da	                            mov rdx, rbx	     10044	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	CALL_50
0x4013189	          0x4c29e8	                            sub rax, r13	     10043	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48
0x401318c	        0x41890424	                    mov dword [r12], eax	     10043	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48
0x4013190	      0xe800000000	                          call 0x4013195	     10044	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	CALL_50
0x4013195	          0x4885c0	                           test rax, rax	     10045	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	IF_49
0x4013198	          0x4989c7	                            mov r15, rax	     10044	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	CALL_50
0x401319b	     0xf8404feffff	                            je 0x4012fa5	     10045	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	IF_49
0x40131a1	        0x48894500	                    mov qword [rbp], rax	     10047	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	IF_49
0x40131a5	          0x4889c7	                            mov rdi, rax	     10048	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	IF_49	CALL_51
0x40131a8	      0xe800000000	                          call 0x40131ad	     10048	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	IF_49	CALL_51
0x40131ad	          0x418906	                    mov dword [r14], eax	     10048	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	IF_49	CALL_51
0x40131b0	      0x488b442410	            mov rax, qword [rsp + 0x10] 	     10049	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	IF_49	CALL_52
0x40131b5	          0x488b38	                    mov rdi, qword [rax]	     10049	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	IF_49	CALL_52
0x40131b8	      0xe800000000	                          call 0x40131bd	     10049	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	IF_49	CALL_52
0x40131bd	      0x488b442410	            mov rax, qword [rsp + 0x10] 	     10050	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	IF_49
0x40131c2	          0x4889df	                            mov rdi, rbx	     10054	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	CALL_53
0x40131c5	          0x4c8938	                    mov qword [rax], r15	     10050	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	IF_48	IF_49
0x40131c8	      0xe800000000	                          call 0x40131cd	     10054	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	CALL_53
0x40131cd	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	     10055	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	CALL_54
0x40131d2	      0xe800000000	                          call 0x40131d7	     10055	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	IF_47	CALL_54
0x40131d7	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	     10057	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	CALL_55
0x40131dc	      0xe800000000	                          call 0x40131e1	     10057	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	CALL_55
0x40131e1	      0xe93ef9ffff	                           jmp 0x4012b24	     10057	eval.c	FUNCTION_187	IF_42	IF_44	IF_45	IF_46	CALL_55
0x40131e6	      0xb8ffffffff	                     mov eax, 0xffffffff	      9740	eval.c	FUNCTION_187	IF_1	IF_2	IF_3
0x40131eb	      0xe934fbffff	                           jmp 0x4012d24	      9740	eval.c	FUNCTION_187	IF_1	IF_2	IF_3
0x40131f0	          0x83c102	                              add ecx, 2	      9955	eval.c	FUNCTION_187	IF_33
0x40131f3	          0x4c89f8	                            mov rax, r15	      9956	eval.c	FUNCTION_187	IF_33
0x40131f6	        0x482b4500	                    sub rax, qword [rbp]	      9956	eval.c	FUNCTION_187	IF_33
0x40131fa	        0x41890c24	                    mov dword [r12], ecx	      9955	eval.c	FUNCTION_187	IF_33
0x40131fe	          0x412906	                    sub dword [r14], eax	      9956	eval.c	FUNCTION_187	IF_33
0x4013201	        0x49630424	                 movsxd rax, dword [r12]	      9956	eval.c	FUNCTION_187	IF_33
0x4013205	        0x4c897d00	                    mov qword [rbp], r15	      9957	eval.c	FUNCTION_187	IF_33
0x4013209	    0x41807c05003a	              cmp byte [r13 + rax], 0x3a	      9962	eval.c	FUNCTION_187	WHILE_5
0x401320f	     0xf850bfbffff	                           jne 0x4012d20	      9962	eval.c	FUNCTION_187	WHILE_5
0x4013215	    0x410fb6740501	        movzx esi, byte [r13 + rax + 1] 	      9962	eval.c	FUNCTION_187	WHILE_5
0x401321b	      0xe940fcffff	                           jmp 0x4012e60	      9962	eval.c	FUNCTION_187	WHILE_5
0x4013220	          0x83c102	                              add ecx, 2	      9900	eval.c	FUNCTION_187	IF_24
0x4013223	          0x4863c1	                         movsxd rax, ecx	      9953	eval.c	FUNCTION_187	IF_33
0x4013226	        0x41890c24	                    mov dword [r12], ecx	      9900	eval.c	FUNCTION_187	IF_24
0x401322a	    0x41807c05003a	              cmp byte [r13 + rax], 0x3a	      9953	eval.c	FUNCTION_187	IF_33
0x4013230	     0xf85eafaffff	                           jne 0x4012d20	      9953	eval.c	FUNCTION_187	IF_33
0x4013236	    0x410fb6740501	        movzx esi, byte [r13 + rax + 1] 	      9953	eval.c	FUNCTION_187	IF_33
0x401323c	      0xe915fcffff	                           jmp 0x4012e56	      9953	eval.c	FUNCTION_187	IF_33
0x4013241	     0xf1f80000000	                         nop dword [rax]	      9953	eval.c	FUNCTION_187	IF_33
0x4013248	         0xfb64302	               movzx eax, byte [rbx + 2]	      9748	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4
0x401324c	            0x84c0	                             test al, al	      9748	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4
0x401324e	            0x742e	                            je 0x401327e	      9748	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4
0x4013250	           0xfb6f8	                           movzx edi, al	      9749	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4	CALL_5
0x4013253	      0xe800000000	                          call 0x4013258	      9749	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4	CALL_5
0x4013258	            0x85c0	                           test eax, eax	      9749	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4	CALL_5
0x401325a	            0x7522	                           jne 0x401327e	      9749	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4	CALL_5
0x401325c	        0x807b022e	                cmp byte [rbx + 2], 0x2e	      9750	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4
0x4013260	     0xf85b8feffff	                           jne 0x401311e	      9750	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4
0x4013266	         0xfb64303	               movzx eax, byte [rbx + 3]	      9751	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4	CALL_6
0x401326a	            0x84c0	                             test al, al	      9751	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4	CALL_6
0x401326c	            0x7410	                            je 0x401327e	      9751	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4	CALL_6
0x401326e	           0xfb6f8	                           movzx edi, al	      9751	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4	CALL_6
0x4013271	      0xe800000000	                          call 0x4013276	      9751	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4	CALL_6
0x4013276	            0x85c0	                           test eax, eax	      9751	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4	CALL_6
0x4013278	     0xf84a0feffff	                            je 0x401311e	      9751	eval.c	FUNCTION_187	IF_1	FOR_1	IF_4	CALL_6
0x401327e	           0xfb603	                   movzx eax, byte [rbx]	      9756	eval.c	FUNCTION_187	IF_1	IF_5	CALL_7
0x4013281	            0x84c0	                             test al, al	      9756	eval.c	FUNCTION_187	IF_1	IF_5	CALL_7
0x4013283	     0xf84bafeffff	                            je 0x4013143	      9756	eval.c	FUNCTION_187	IF_1	IF_5	CALL_7
0x4013289	        0x488b7d00	                    mov rdi, qword [rbp]	      9758	eval.c	FUNCTION_187	IF_1	IF_5	CALL_8
0x401328d	            0x31f6	                            xor esi, esi	      9758	eval.c	FUNCTION_187	IF_1	IF_5	CALL_8
0x401328f	            0x84c0	                             test al, al	      9758	eval.c	FUNCTION_187	IF_1	IF_5	CALL_8
0x4013291	        0x400f95c6	                               setne sil	      9758	eval.c	FUNCTION_187	IF_1	IF_5	CALL_8
0x4013295	      0xe800000000	                          call 0x401329a	      9758	eval.c	FUNCTION_187	IF_1	IF_5	CALL_8
0x401329a	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      9759	eval.c	FUNCTION_187	IF_1	IF_5	CALL_9
0x401329f	        0x48894500	                    mov qword [rbp], rax	      9758	eval.c	FUNCTION_187	IF_1	IF_5	CALL_8
0x40132a3	          0x488b3b	                    mov rdi, qword [rbx]	      9759	eval.c	FUNCTION_187	IF_1	IF_5	CALL_9
0x40132a6	      0xe800000000	                          call 0x40132ab	      9759	eval.c	FUNCTION_187	IF_1	IF_5	CALL_9
0x40132ab	        0x488b4500	                    mov rax, qword [rbp]	      9760	eval.c	FUNCTION_187	IF_1	IF_5
0x40132af	          0x488903	                    mov qword [rbx], rax	      9760	eval.c	FUNCTION_187	IF_1	IF_5
0x40132b2	        0x488b7d00	                    mov rdi, qword [rbp]	      9761	eval.c	FUNCTION_187	IF_1	IF_5	IF_6
0x40132b6	          0x4885ff	                           test rdi, rdi	      9761	eval.c	FUNCTION_187	IF_1	IF_5	IF_6
0x40132b9	     0xf8427ffffff	                            je 0x40131e6	      9761	eval.c	FUNCTION_187	IF_1	IF_5	IF_6
0x40132bf	      0xe800000000	                          call 0x40132c4	      9787	eval.c	FUNCTION_187	IF_1	IF_10	CALL_15
0x40132c4	            0x85c0	                           test eax, eax	      9787	eval.c	FUNCTION_187	IF_1	IF_10	CALL_15
0x40132c6	            0x7526	                           jne 0x40132ee	      9787	eval.c	FUNCTION_187	IF_1	IF_10	CALL_15
0x40132c8	        0x49631424	                 movsxd rdx, dword [r12]	      9787	eval.c	FUNCTION_187	IF_1	IF_10	CALL_15
0x40132cc	    0x410fb6741500	             movzx esi, byte [r13 + rdx]	      9787	eval.c	FUNCTION_187	IF_1	IF_10	CALL_15
0x40132d2	          0x4889d0	                            mov rax, rdx	      9787	eval.c	FUNCTION_187	IF_1	IF_10	CALL_15
0x40132d5	    0xc70424010000	                      mov dword [rsp], 1	      9719	eval.c	FUNCTION_187	IF_1
0x40132dc	      0xe9e1f8ffff	                           jmp 0x4012bc2	      9719	eval.c	FUNCTION_187	IF_1
0x40132e1	        0x488b7d00	                    mov rdi, qword [rbp]	      9719	eval.c	FUNCTION_187	IF_1
0x40132e5	      0xe800000000	                          call 0x40132ea	      9787	eval.c	FUNCTION_187	IF_1	IF_10	CALL_15
0x40132ea	            0x85c0	                           test eax, eax	      9787	eval.c	FUNCTION_187	IF_1	IF_10	CALL_15
0x40132ec	            0x74da	                            je 0x40132c8	      9787	eval.c	FUNCTION_187	IF_1	IF_10	CALL_15
0x40132ee	        0x488b5d00	                    mov rbx, qword [rbp]	      9790	eval.c	FUNCTION_187	IF_1	IF_10	CALL_17
0x40132f2	          0x4889df	                            mov rdi, rbx	      9790	eval.c	FUNCTION_187	IF_1	IF_10	CALL_17
0x40132f5	      0xe800000000	                          call 0x40132fa	      9790	eval.c	FUNCTION_187	IF_1	IF_10	CALL_17
0x40132fa	          0x8d7002	                      lea esi, [rax + 2]	      9790	eval.c	FUNCTION_187	IF_1	IF_10	CALL_17
0x40132fd	          0x4889df	                            mov rdi, rbx	      9790	eval.c	FUNCTION_187	IF_1	IF_10	CALL_17
0x4013300	      0xe800000000	                          call 0x4013305	      9790	eval.c	FUNCTION_187	IF_1	IF_10	CALL_17
0x4013305	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      9791	eval.c	FUNCTION_187	IF_1	IF_10	CALL_18
0x401330a	        0x48894500	                    mov qword [rbp], rax	      9790	eval.c	FUNCTION_187	IF_1	IF_10	CALL_17
0x401330e	          0x488b3b	                    mov rdi, qword [rbx]	      9791	eval.c	FUNCTION_187	IF_1	IF_10	CALL_18
0x4013311	      0xe800000000	                          call 0x4013316	      9791	eval.c	FUNCTION_187	IF_1	IF_10	CALL_18
0x4013316	        0x488b4500	                    mov rax, qword [rbp]	      9792	eval.c	FUNCTION_187	IF_1	IF_10
0x401331a	          0x488903	                    mov qword [rbx], rax	      9792	eval.c	FUNCTION_187	IF_1	IF_10
0x401331d	        0x488b7d00	                    mov rdi, qword [rbp]	      9793	eval.c	FUNCTION_187	IF_1	IF_10	IF_11
0x4013321	          0x4885ff	                           test rdi, rdi	      9793	eval.c	FUNCTION_187	IF_1	IF_10	IF_11
0x4013324	     0xf84bcfeffff	                            je 0x40131e6	      9793	eval.c	FUNCTION_187	IF_1	IF_10	IF_11
0x401332a	      0xe800000000	                          call 0x401332f	      9795	eval.c	FUNCTION_187	IF_1	IF_10	CALL_19
0x401332f	            0xeb97	                           jmp 0x40132c8	      9795	eval.c	FUNCTION_187	IF_1	IF_10	CALL_19
0x4013331	          0x4889df	                            mov rdi, rbx	      9736	eval.c	FUNCTION_187	IF_1	IF_2	CALL_1
0x4013334	      0xe800000000	                          call 0x4013339	      9736	eval.c	FUNCTION_187	IF_1	IF_2	CALL_1
0x4013339	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      9737	eval.c	FUNCTION_187	IF_1	IF_2	CALL_2
0x401333e	        0x48894500	                    mov qword [rbp], rax	      9736	eval.c	FUNCTION_187	IF_1	IF_2	CALL_1
0x4013342	          0x488b3b	                    mov rdi, qword [rbx]	      9737	eval.c	FUNCTION_187	IF_1	IF_2	CALL_2
0x4013345	      0xe800000000	                          call 0x401334a	      9737	eval.c	FUNCTION_187	IF_1	IF_2	CALL_2
0x401334a	        0x488b4500	                    mov rax, qword [rbp]	      9738	eval.c	FUNCTION_187	IF_1	IF_2
0x401334e	          0x488903	                    mov qword [rbx], rax	      9738	eval.c	FUNCTION_187	IF_1	IF_2
0x4013351	        0x488b5d00	                    mov rbx, qword [rbp]	      9739	eval.c	FUNCTION_187	IF_1	IF_2	IF_3
0x4013355	          0x4885db	                           test rbx, rbx	      9739	eval.c	FUNCTION_187	IF_1	IF_2	IF_3
0x4013358	     0xf8488feffff	                            je 0x40131e6	      9739	eval.c	FUNCTION_187	IF_1	IF_2	IF_3
0x401335e	           0xfb63b	                   movzx edi, byte [rbx]	      9739	eval.c	FUNCTION_187	IF_1	IF_2	IF_3
0x4013361	      0xe989fdffff	                           jmp 0x40130ef	      9739	eval.c	FUNCTION_187	IF_1	IF_2	IF_3
0x4013366	            0x31d2	                            xor edx, edx	     10072	eval.c	FUNCTION_187	IF_51	CALL_56
0x4013368	            0x31f6	                            xor esi, esi	     10072	eval.c	FUNCTION_187	IF_51	CALL_56
0x401336a	      0xe800000000	                          call 0x401336f	     10072	eval.c	FUNCTION_187	IF_51	CALL_56
0x401336f	          0x4889c3	                            mov rbx, rax	     10072	eval.c	FUNCTION_187	IF_51	CALL_56
0x4013372	      0xe9a1fcffff	                           jmp 0x4013018	     10072	eval.c	FUNCTION_187	IF_51	CALL_56
0x4013377	          0x4889df	                            mov rdi, rbx	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x401337a	      0xe9c8fdffff	                           jmp 0x4013147	      9744	eval.c	FUNCTION_187	IF_1	FOR_1	CALL_3
0x401337f	      0xe800000000	                          call 0x4013384	     10084	eval.c	FUNCTION_187
get_vim_var_nr	functions,0:SWITCH,0:IF,0:DO,0:ELSE,0:WHILE,0:CALL,0:FOR,0	6
0x40029d0	          0x4863ff	                         movsxd rdi, edi	      6394	eval.c	FUNCTION_103
0x40029d3	    0x488d04fd0000	                        lea rax, [rdi*8]	      6394	eval.c	FUNCTION_103
0x40029db	        0x48c1e706	                              shl rdi, 6	      6394	eval.c	FUNCTION_103
0x40029df	          0x4829c7	                            sub rdi, rax	      6394	eval.c	FUNCTION_103
0x40029e2	    0x488b87000000	                    mov rax, qword [rdi]	      6394	eval.c	FUNCTION_103
0x40029e9	              0xc3	                                     ret	      6395	eval.c	FUNCTION_103
ex_unlet	functions,0:SWITCH,0:IF,0:DO,0:ELSE,0:WHILE,0:CALL,1:FOR,0	224
0x4011990	            0x4155	                                push r13	      2721	eval.c	FUNCTION_52
0x4011992	            0x4154	                                push r12	      2721	eval.c	FUNCTION_52
0x4011994	          0x4989fd	                            mov r13, rdi	      2721	eval.c	FUNCTION_52
0x4011997	              0x55	                                push rbp	      2721	eval.c	FUNCTION_52
0x4011998	              0x53	                                push rbx	      2721	eval.c	FUNCTION_52
0x4011999	            0x31db	                            xor ebx, ebx	      2756	eval.c	FUNCTION_54
0x401199b	        0x4883ec78	                           sub rsp, 0x78	      2721	eval.c	FUNCTION_52
0x401199f	          0x4c8b27	                    mov r12, qword [rdi]	      2722	eval.c	FUNCTION_52	CALL_1
0x40119a2	    0x64488b042528	                mov rax, qword fs:[0x28]	      2721	eval.c	FUNCTION_52
0x40119ab	      0x4889442468	             mov qword [rsp + 0x68], rax	      2721	eval.c	FUNCTION_52
0x40119b0	            0x31c0	                            xor eax, eax	      2721	eval.c	FUNCTION_52
0x40119b2	            0xeb2c	                           jmp 0x40119e0	      2721	eval.c	FUNCTION_52
0x40119b4	         0xf1f4000	                         nop dword [rax]	      2721	eval.c	FUNCTION_52
0x40119b8	        0x418b4530	            mov eax, dword [r13 + 0x30] 	      2721	eval.c	FUNCTION_52
0x40119bc	      0xbb01000000	                              mov ebx, 1	      2779	eval.c	FUNCTION_54	DO_1	IF_5
0x40119c1	            0x85c0	                           test eax, eax	      2794	eval.c	FUNCTION_54	DO_1	IF_9
0x40119c3	            0x7479	                            je 0x4011a3e	      2794	eval.c	FUNCTION_54	DO_1	IF_9
0x40119c5	          0x4889ef	                            mov rdi, rbp	      2797	eval.c	FUNCTION_54	DO_1	CALL_10
0x40119c8	      0xe800000000	                          call 0x40119cd	      2797	eval.c	FUNCTION_54	DO_1	CALL_10
0x40119cd	           0xfb638	                   movzx edi, byte [rax]	      2798	eval.c	FUNCTION_54	CALL_11
0x40119d0	          0x4989c4	                            mov r12, rax	      2797	eval.c	FUNCTION_54	DO_1	CALL_10
0x40119d3	      0xe800000000	                          call 0x40119d8	      2798	eval.c	FUNCTION_54	CALL_11
0x40119d8	            0x85c0	                           test eax, eax	      2798	eval.c	FUNCTION_54	CALL_11
0x40119da	     0xf85b6000000	                           jne 0x4011a96	      2798	eval.c	FUNCTION_54	CALL_11
0x40119e0	            0x89d8	                            mov eax, ebx	      2762	eval.c	FUNCTION_54	DO_1	CALL_1
0x40119e2	          0x4531c0	                            xor r8d, r8d	      2762	eval.c	FUNCTION_54	DO_1	CALL_1
0x40119e5	        0x410b4530	              or eax, dword [r13 + 0x30]	      2762	eval.c	FUNCTION_54	DO_1	CALL_1
0x40119e9	      0xb901000000	                              mov ecx, 1	      2762	eval.c	FUNCTION_54	DO_1	CALL_1
0x40119ee	          0x4889e2	                            mov rdx, rsp	      2762	eval.c	FUNCTION_54	DO_1	CALL_1
0x40119f1	          0x4c89e7	                            mov rdi, r12	      2762	eval.c	FUNCTION_54	DO_1	CALL_1
0x40119f4	        0x410f95c0	                               setne r8b	      2762	eval.c	FUNCTION_54	DO_1	CALL_1
0x40119f8	            0x31f6	                            xor esi, esi	      2762	eval.c	FUNCTION_54	DO_1	CALL_1
0x40119fa	      0xe871dbffff	          call sym.get_lval.constprop.24	      2762	eval.c	FUNCTION_54	DO_1	CALL_1
0x40119ff	      0x48833c2400	                      cmp qword [rsp], 0	      2765	eval.c	FUNCTION_54	DO_1	IF_1
0x4011a04	          0x4889c5	                            mov rbp, rax	      2762	eval.c	FUNCTION_54	DO_1	CALL_1
0x4011a07	      0xb801000000	                              mov eax, 1	      2765	eval.c	FUNCTION_54	DO_1	IF_1
0x4011a0c	           0xf44d8	                          cmove ebx, eax	      2765	eval.c	FUNCTION_54	DO_1	IF_1
0x4011a0f	          0x4885ed	                           test rbp, rbp	      2766	eval.c	FUNCTION_54	DO_1	IF_2	CALL_2
0x4011a12	            0x7478	                            je 0x4011a8c	      2766	eval.c	FUNCTION_54	DO_1	IF_2	CALL_2
0x4011a14	         0xfb67d00	                   movzx edi, byte [rbp]	      2766	eval.c	FUNCTION_54	DO_1	IF_2	CALL_2
0x4011a18	        0x4080ff20	                           cmp dil, 0x20	      2766	eval.c	FUNCTION_54	DO_1	IF_2	CALL_2
0x4011a1c	            0x7406	                            je 0x4011a24	      2766	eval.c	FUNCTION_54	DO_1	IF_2	CALL_2
0x4011a1e	        0x4080ff09	                              cmp dil, 9	      2766	eval.c	FUNCTION_54	DO_1	IF_2	CALL_2
0x4011a22	            0x753c	                           jne 0x4011a60	      2766	eval.c	FUNCTION_54	DO_1	IF_2	CALL_2
0x4011a24	            0x85db	                           test ebx, ebx	      2779	eval.c	FUNCTION_54	DO_1	IF_5
0x4011a26	            0x7590	                           jne 0x40119b8	      2779	eval.c	FUNCTION_54	DO_1	IF_5
0x4011a28	        0x418b4d30	            mov ecx, dword [r13 + 0x30] 	      2779	eval.c	FUNCTION_54	DO_1	IF_5
0x4011a2c	            0x85c9	                           test ecx, ecx	      2779	eval.c	FUNCTION_54	DO_1	IF_5
0x4011a2e	            0x7595	                           jne 0x40119c5	      2779	eval.c	FUNCTION_54	DO_1	IF_5
0x4011a30	    0x41817d20e201	          cmp dword [r13 + 0x20], 0x1e2 	      2781	eval.c	FUNCTION_54	DO_1	IF_5	IF_6
0x4011a38	     0xf848a000000	                            je 0x4011ac8	      2781	eval.c	FUNCTION_54	DO_1	IF_5	IF_6
0x4011a3e	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2230	eval.c	FUNCTION_45	CALL_1
0x4011a43	      0xe800000000	                          call 0x4011a48	      2230	eval.c	FUNCTION_45	CALL_1
0x4011a48	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      2231	eval.c	FUNCTION_45	CALL_2
0x4011a4d	      0xe800000000	                          call 0x4011a52	      2231	eval.c	FUNCTION_45	CALL_2
0x4011a52	      0xe96effffff	                           jmp 0x40119c5	      2231	eval.c	FUNCTION_45	CALL_2
0x4011a57	    0x660f1f840000	                    nop word [rax + rax]	      2231	eval.c	FUNCTION_45	CALL_2
0x4011a60	      0xe800000000	                          call 0x4011a65	      2767	eval.c	FUNCTION_54	DO_1	IF_2	CALL_3
0x4011a65	            0x85c0	                           test eax, eax	      2767	eval.c	FUNCTION_54	DO_1	IF_2	CALL_3
0x4011a67	            0x75bb	                           jne 0x4011a24	      2767	eval.c	FUNCTION_54	DO_1	IF_2	CALL_3
0x4011a69	            0x31ff	                            xor edi, edi	      2772	eval.c	FUNCTION_54	DO_1	IF_2	IF_3	CALL_5
0x4011a6b	      0xba05000000	                              mov edx, 5	      2772	eval.c	FUNCTION_54	DO_1	IF_2	IF_3	CALL_5
0x4011a70	      0xbe00000000	                              mov esi, 0	      2772	eval.c	FUNCTION_54	DO_1	IF_2	IF_3	CALL_5
0x4011a75	    0xc70500000000	               mov dword [0x04011a7f], 1	      2771	eval.c	FUNCTION_54	DO_1	IF_2	IF_3
0x4011a7f	      0xe800000000	                          call 0x4011a84	      2772	eval.c	FUNCTION_54	DO_1	IF_2	IF_3	CALL_5
0x4011a84	          0x4889c7	                            mov rdi, rax	      2772	eval.c	FUNCTION_54	DO_1	IF_2	IF_3	CALL_5
0x4011a87	      0xe800000000	                          call 0x4011a8c	      2772	eval.c	FUNCTION_54	DO_1	IF_2	IF_3	CALL_5
0x4011a8c	        0x410b5d30	              or ebx, dword [r13 + 0x30]	      2774	eval.c	FUNCTION_54	DO_1	IF_2	IF_4
0x4011a90	     0xf84e2010000	                            je 0x4011c78	      2774	eval.c	FUNCTION_54	DO_1	IF_2	IF_4
0x4011a96	          0x4c89e7	                            mov rdi, r12	      2800	eval.c	FUNCTION_54	CALL_12
0x4011a99	      0xe800000000	                          call 0x4011a9e	      2800	eval.c	FUNCTION_54	CALL_12
0x4011a9e	        0x49894508	                mov qword [r13 + 8], rax	      2800	eval.c	FUNCTION_54	CALL_12
0x4011aa2	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      2723	eval.c	FUNCTION_52
0x4011aa7	    0x644833042528	                xor rax, qword fs:[0x28]	      2723	eval.c	FUNCTION_52
0x4011ab0	     0xf8560020000	                           jne 0x4011d16	      2723	eval.c	FUNCTION_52
0x4011ab6	        0x4883c478	                           add rsp, 0x78	      2723	eval.c	FUNCTION_52
0x4011aba	              0x5b	                                 pop rbx	      2723	eval.c	FUNCTION_52
0x4011abb	              0x5d	                                 pop rbp	      2723	eval.c	FUNCTION_52
0x4011abc	            0x415c	                                 pop r12	      2723	eval.c	FUNCTION_52
0x4011abe	            0x415d	                                 pop r13	      2723	eval.c	FUNCTION_52
0x4011ac0	              0xc3	                                     ret	      2723	eval.c	FUNCTION_52
0x4011ac1	     0xf1f80000000	                         nop dword [rax]	      2723	eval.c	FUNCTION_52
0x4011ac8	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      2812	eval.c	FUNCTION_55	IF_1
0x4011ace	     0xf841e020000	                            je 0x4011cf2	      2812	eval.c	FUNCTION_55	IF_1
0x4011ad4	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      2822	eval.c	FUNCTION_55	ELSE_1	IF_3
0x4011ad9	          0x4885ff	                           test rdi, rdi	      2822	eval.c	FUNCTION_55	ELSE_1	IF_3
0x4011adc	            0x744a	                            je 0x4011b28	      2822	eval.c	FUNCTION_55	ELSE_1	IF_3
0x4011ade	         0xfb64748	           movzx eax, byte [rdi + 0x48] 	      2823	eval.c	FUNCTION_55	ELSE_1	IF_3	CALL_2
0x4011ae2	        0x4c8b2424	                    mov r12, qword [rsp]	      2823	eval.c	FUNCTION_55	ELSE_1	IF_3	CALL_2
0x4011ae6	            0xa801	                              test al, 1	      7721	eval.c	FUNCTION_148	IF_1
0x4011ae8	     0xf84f2000000	                            je 0x4011be0	      7721	eval.c	FUNCTION_148	IF_1
0x4011aee	          0x4d85e4	                           test r12, r12	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x4011af1	     0xf84d0000000	                            je 0x4011bc7	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x4011af7	      0xba05000000	                              mov edx, 5	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x4011afc	      0xbe00000000	                              mov esi, 0	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x4011b01	            0x31ff	                            xor edi, edi	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4011b03	      0xbb01000000	                              mov ebx, 1	      2820	eval.c	FUNCTION_55	IF_1
0x4011b08	      0xe800000000	                          call 0x4011b0d	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4011b0d	          0x4c89e6	                            mov rsi, r12	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4011b10	          0x4889c7	                            mov rdi, rax	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4011b13	      0xe800000000	                          call 0x4011b18	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4011b18	        0x418b4530	            mov eax, dword [r13 + 0x30] 	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4011b1c	      0xe9a0feffff	                           jmp 0x40119c1	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4011b21	     0xf1f80000000	                         nop dword [rax]	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4011b28	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      2824	eval.c	FUNCTION_55	ELSE_1	IF_3
0x4011b2d	          0x4885c0	                           test rax, rax	      2824	eval.c	FUNCTION_55	ELSE_1	IF_3
0x4011b30	            0x7415	                            je 0x4011b47	      2824	eval.c	FUNCTION_55	ELSE_1	IF_3
0x4011b32	           0xfb610	                   movzx edx, byte [rax]	      2825	eval.c	FUNCTION_55	ELSE_1	IF_3	CALL_3
0x4011b35	        0x4c8b2424	                    mov r12, qword [rsp]	      2825	eval.c	FUNCTION_55	ELSE_1	IF_3	CALL_3
0x4011b39	          0xf6c201	                              test dl, 1	      7721	eval.c	FUNCTION_148	IF_1
0x4011b3c	            0x75b0	                           jne 0x4011aee	      7721	eval.c	FUNCTION_148	IF_1
0x4011b3e	          0x83e202	                              and edx, 2	      7729	eval.c	FUNCTION_148	IF_2
0x4011b41	     0xf85a9000000	                           jne 0x4011bf0	      7729	eval.c	FUNCTION_148	IF_2
0x4011b47	        0x8b542428	            mov edx, dword [rsp + 0x28] 	      2827	eval.c	FUNCTION_55	ELSE_2	IF_4
0x4011b4b	            0x85d2	                           test edx, edx	      2827	eval.c	FUNCTION_55	ELSE_2	IF_4
0x4011b4d	     0xf84bd000000	                            je 0x4011c10	      2827	eval.c	FUNCTION_55	ELSE_2	IF_4
0x4011b53	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      2830	eval.c	FUNCTION_55	ELSE_2	IF_4
0x4011b58	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      2831	eval.c	FUNCTION_55	ELSE_2	IF_4
0x4011b5d	          0x4885f6	                           test rsi, rsi	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x4011b60	          0x4c63c8	                          movsxd r9, eax	      2831	eval.c	FUNCTION_55	ELSE_2	IF_4
0x4011b63	     0xf84d5feffff	                            je 0x4011a3e	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x4011b69	      0x448b442440	            mov r8d, dword [rsp + 0x40] 	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x4011b6e	      0x4c8b542438	            mov r10, qword [rsp + 0x38] 	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x4011b73	        0x4c8b2424	                    mov r12, qword [rsp]	      2836	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1	IF_5	CALL_4
0x4011b77	          0x4585c0	                           test r8d, r8d	      2836	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1	IF_5	CALL_4
0x4011b7a	     0xf8511010000	                           jne 0x4011c91	      2836	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1	IF_5	CALL_4
0x4011b80	          0x4889f1	                            mov rcx, rsi	      2836	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1	IF_5	CALL_4
0x4011b83	            0x31d2	                            xor edx, edx	      2836	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1	IF_5	CALL_4
0x4011b85	            0xeb1e	                           jmp 0x4011ba5	      2836	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1	IF_5	CALL_4
0x4011b87	    0x660f1f840000	                    nop word [rax + rax]	      2836	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1	IF_5	CALL_4
0x4011b90	          0x83e102	                              and ecx, 2	      7729	eval.c	FUNCTION_148	IF_2
0x4011b93	            0x755b	                           jne 0x4011bf0	      7729	eval.c	FUNCTION_148	IF_2
0x4011b95	        0x4883c201	                              add rdx, 1	      7729	eval.c	FUNCTION_148	IF_2
0x4011b99	          0x4885ff	                           test rdi, rdi	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x4011b9c	     0xf8496000000	                            je 0x4011c38	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x4011ba2	          0x4889f9	                            mov rcx, rdi	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x4011ba5	        0x498d3c11	                     lea rdi, [r9 + rdx]	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x4011ba9	          0x4939fa	                            cmp r10, rdi	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x4011bac	     0xf8c86000000	                            jl 0x4011c38	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x4011bb2	          0x488b39	                    mov rdi, qword [rcx]	      2835	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x4011bb5	         0xfb64914	           movzx ecx, byte [rcx + 0x14] 	      2836	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1	IF_5	CALL_4
0x4011bb9	          0xf6c101	                              test cl, 1	      7721	eval.c	FUNCTION_148	IF_1
0x4011bbc	            0x74d2	                            je 0x4011b90	      7721	eval.c	FUNCTION_148	IF_1
0x4011bbe	          0x4d85e4	                           test r12, r12	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x4011bc1	     0xf8530ffffff	                           jne 0x4011af7	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x4011bc7	      0xba05000000	                              mov edx, 5	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x4011bcc	      0xbe00000000	                              mov esi, 0	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x4011bd1	            0x31ff	                            xor edi, edi	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x4011bd3	      0xe800000000	                          call 0x4011bd8	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x4011bd8	          0x4989c4	                            mov r12, rax	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x4011bdb	      0xe917ffffff	                           jmp 0x4011af7	      7723	eval.c	FUNCTION_148	IF_1	CALL_2
0x4011be0	            0xa802	                              test al, 2	      7729	eval.c	FUNCTION_148	IF_2
0x4011be2	     0xf8440ffffff	                            je 0x4011b28	      7729	eval.c	FUNCTION_148	IF_2
0x4011be8	     0xf1f84000000	                   nop dword [rax + rax]	      7729	eval.c	FUNCTION_148	IF_2
0x4011bf0	          0x4d85e4	                           test r12, r12	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4011bf3	     0xf84e0000000	                            je 0x4011cd9	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4011bf9	      0xba05000000	                              mov edx, 5	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4011bfe	      0xbe00000000	                              mov esi, 0	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4011c03	      0xe9f9feffff	                           jmp 0x4011b01	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4011c08	     0xf1f84000000	                   nop dword [rax + rax]	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4011c10	          0x4885ff	                           test rdi, rdi	      2853	eval.c	FUNCTION_55	ELSE_3	IF_6
0x4011c13	     0xf84aa000000	                            je 0x4011cc3	      2853	eval.c	FUNCTION_55	ELSE_3	IF_6
0x4011c19	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      2855	eval.c	FUNCTION_55	ELSE_3	CALL_6
0x4011c1e	      0xe800000000	                          call 0x4011c23	      2855	eval.c	FUNCTION_55	ELSE_3	CALL_6
0x4011c23	        0x418b4530	            mov eax, dword [r13 + 0x30] 	      2855	eval.c	FUNCTION_55	ELSE_3	CALL_6
0x4011c27	      0xe995fdffff	                           jmp 0x40119c1	      2855	eval.c	FUNCTION_55	ELSE_3	CALL_6
0x4011c2c	         0xf1f4000	                         nop dword [rax]	      2855	eval.c	FUNCTION_55	ELSE_3	CALL_6
0x4011c30	      0x448b442440	            mov r8d, dword [rsp + 0x40] 	      2855	eval.c	FUNCTION_55	ELSE_3	CALL_6
0x4011c35	          0x4c89e6	                            mov rsi, r12	      2855	eval.c	FUNCTION_55	ELSE_3	CALL_6
0x4011c38	          0x4585c0	                           test r8d, r8d	      2843	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x4011c3b	            0x750b	                           jne 0x4011c48	      2843	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x4011c3d	      0x4839442438	            cmp qword [rsp + 0x38], rax 	      2843	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x4011c42	     0xf8cd0feffff	                            jl 0x4011b18	      2843	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x4011c48	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      2846	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2	CALL_5
0x4011c4d	          0x4c8b26	                    mov r12, qword [rsi]	      2845	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x4011c50	      0xe800000000	                          call 0x4011c55	      2846	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2	CALL_5
0x4011c55	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      2848	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x4011c5a	      0x4c89642418	             mov qword [rsp + 0x18], r12	      2847	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x4011c5f	        0x4883c001	                              add rax, 1	      2848	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x4011c63	          0x4d85e4	                           test r12, r12	      2843	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x4011c66	      0x4889442430	             mov qword [rsp + 0x30], rax	      2848	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x4011c6b	            0x75c3	                           jne 0x4011c30	      2843	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x4011c6d	      0xe9a6feffff	                           jmp 0x4011b18	      2843	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x4011c72	    0x660f1f440000	                    nop word [rax + rax]	      2843	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_2
0x4011c78	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2230	eval.c	FUNCTION_45	CALL_1
0x4011c7d	      0xe800000000	                          call 0x4011c82	      2230	eval.c	FUNCTION_45	CALL_1
0x4011c82	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      2231	eval.c	FUNCTION_45	CALL_2
0x4011c87	      0xe800000000	                          call 0x4011c8c	      2231	eval.c	FUNCTION_45	CALL_2
0x4011c8c	      0xe905feffff	                           jmp 0x4011a96	      2231	eval.c	FUNCTION_45	CALL_2
0x4011c91	          0x4889f2	                            mov rdx, rsi	      2836	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1	IF_5	CALL_4
0x4011c94	            0xeb1b	                           jmp 0x4011cb1	      2836	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1	IF_5	CALL_4
0x4011c96	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2836	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1	IF_5	CALL_4
0x4011ca0	          0x83e202	                              and edx, 2	      7729	eval.c	FUNCTION_148	IF_2
0x4011ca3	     0xf8547ffffff	                           jne 0x4011bf0	      7729	eval.c	FUNCTION_148	IF_2
0x4011ca9	          0x4885c9	                           test rcx, rcx	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x4011cac	          0x4889ca	                            mov rdx, rcx	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x4011caf	            0x7487	                            je 0x4011c38	      2833	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x4011cb1	          0x488b0a	                    mov rcx, qword [rdx]	      2835	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1
0x4011cb4	         0xfb65214	           movzx edx, byte [rdx + 0x14] 	      2836	eval.c	FUNCTION_55	ELSE_2	IF_4	WHILE_1	IF_5	CALL_4
0x4011cb8	          0xf6c201	                              test dl, 1	      7721	eval.c	FUNCTION_148	IF_1
0x4011cbb	     0xf852dfeffff	                           jne 0x4011aee	      7721	eval.c	FUNCTION_148	IF_1
0x4011cc1	            0xebdd	                           jmp 0x4011ca0	      7721	eval.c	FUNCTION_148	IF_1
0x4011cc3	      0x488b742450	            mov rsi, qword [rsp + 0x50] 	      2858	eval.c	FUNCTION_55	ELSE_3	CALL_7
0x4011cc8	          0x4889c7	                            mov rdi, rax	      2858	eval.c	FUNCTION_55	ELSE_3	CALL_7
0x4011ccb	      0xe800000000	                          call 0x4011cd0	      2858	eval.c	FUNCTION_55	ELSE_3	CALL_7
0x4011cd0	        0x418b4530	            mov eax, dword [r13 + 0x30] 	      2858	eval.c	FUNCTION_55	ELSE_3	CALL_7
0x4011cd4	      0xe9e8fcffff	                           jmp 0x40119c1	      2858	eval.c	FUNCTION_55	ELSE_3	CALL_7
0x4011cd9	      0xba05000000	                              mov edx, 5	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4011cde	      0xbe00000000	                              mov esi, 0	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4011ce3	            0x31ff	                            xor edi, edi	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4011ce5	      0xe800000000	                          call 0x4011cea	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4011cea	          0x4989c4	                            mov r12, rax	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4011ced	      0xe907ffffff	                           jmp 0x4011bf9	      7731	eval.c	FUNCTION_148	IF_2	CALL_6
0x4011cf2	         0xfb65d00	                   movzx ebx, byte [rbp]	      2814	eval.c	FUNCTION_55	IF_1
0x4011cf6	        0x418b7534	            mov esi, dword [r13 + 0x34] 	      2783	eval.c	FUNCTION_54	DO_1	IF_5	IF_6	IF_7	CALL_7
0x4011cfa	        0xc6450000	                       mov byte [rbp], 0	      2815	eval.c	FUNCTION_55	IF_1
0x4011cfe	        0x488b3c24	                    mov rdi, qword [rsp]	      2818	eval.c	FUNCTION_55	IF_1	IF_2	CALL_1
0x4011d02	      0xe800000000	                          call 0x4011d07	      2818	eval.c	FUNCTION_55	IF_1	IF_2	CALL_1
0x4011d07	          0x885d00	                      mov byte [rbp], bl	      2820	eval.c	FUNCTION_55	IF_1
0x4011d0a	            0x31db	                            xor ebx, ebx	      2820	eval.c	FUNCTION_55	IF_1
0x4011d0c	            0x85c0	                           test eax, eax	      2820	eval.c	FUNCTION_55	IF_1
0x4011d0e	           0xf94c3	                                 sete bl	      2820	eval.c	FUNCTION_55	IF_1
0x4011d11	      0xe902feffff	                           jmp 0x4011b18	      2820	eval.c	FUNCTION_55	IF_1
0x4011d16	      0xe800000000	                          call 0x4011d1b	      2723	eval.c	FUNCTION_52
vars_clear	functions,0:SWITCH,0:IF,0:DO,0:ELSE,0:WHILE,0:CALL,1:FOR,0	43
0x40058f0	            0x4156	                                push r14	      7404	eval.c	FUNCTION_138
0x40058f2	            0x4155	                                push r13	      7404	eval.c	FUNCTION_138
0x40058f4	          0x4989fe	                            mov r14, rdi	      7404	eval.c	FUNCTION_138
0x40058f7	            0x4154	                                push r12	      7404	eval.c	FUNCTION_138
0x40058f9	              0x55	                                push rbp	      7404	eval.c	FUNCTION_138
0x40058fa	              0x53	                                push rbx	      7404	eval.c	FUNCTION_138
0x40058fb	      0xe800000000	                          call 0x4005900	      7418	eval.c	FUNCTION_139	CALL_1
0x4005900	        0x498b4608	                mov rax, qword [r14 + 8]	      7419	eval.c	FUNCTION_139
0x4005904	        0x498b6e20	            mov rbp, qword [r14 + 0x20] 	      7420	eval.c	FUNCTION_139	FOR_1
0x4005908	            0x85c0	                           test eax, eax	      7420	eval.c	FUNCTION_139	FOR_1
0x400590a	          0x4189c4	                           mov r12d, eax	      7419	eval.c	FUNCTION_139
0x400590d	            0x7e32	                           jle 0x4005941	      7420	eval.c	FUNCTION_139	FOR_1
0x400590f	              0x90	                                     nop	      7420	eval.c	FUNCTION_139	FOR_1
0x4005910	        0x488b5d08	                mov rbx, qword [rbp + 8]	      7422	eval.c	FUNCTION_139	FOR_1	IF_1	CALL_2
0x4005914	    0x4881fb000000	                              cmp rbx, 0	      7422	eval.c	FUNCTION_139	FOR_1	IF_1	CALL_2
0x400591b	            0x7453	                            je 0x4005970	      7422	eval.c	FUNCTION_139	FOR_1	IF_1	CALL_2
0x400591d	          0x4885db	                           test rbx, rbx	      7422	eval.c	FUNCTION_139	FOR_1	IF_1	CALL_2
0x4005920	            0x744e	                            je 0x4005970	      7422	eval.c	FUNCTION_139	FOR_1	IF_1	CALL_2
0x4005922	        0x4c8d6bef	                   lea r13, [rbx - 0x11]	      7431	eval.c	FUNCTION_139	FOR_1	IF_1	CALL_4
0x4005926	        0x4183ec01	                             sub r12d, 1	      7424	eval.c	FUNCTION_139	FOR_1	IF_1
0x400592a	          0x4c89ef	                            mov rdi, r13	      7431	eval.c	FUNCTION_139	FOR_1	IF_1	CALL_4
0x400592d	      0xe800000000	                          call 0x4005932	      7431	eval.c	FUNCTION_139	FOR_1	IF_1	CALL_4
0x4005932	        0xf643ff10	               test byte [rbx - 1], 0x10	      7432	eval.c	FUNCTION_139	FOR_1	IF_1	IF_3
0x4005936	            0x7528	                           jne 0x4005960	      7432	eval.c	FUNCTION_139	FOR_1	IF_1	IF_3
0x4005938	        0x4883c510	                           add rbp, 0x10	      7420	eval.c	FUNCTION_139	FOR_1
0x400593c	          0x4585e4	                         test r12d, r12d	      7420	eval.c	FUNCTION_139	FOR_1
0x400593f	            0x75cf	                           jne 0x4005910	      7420	eval.c	FUNCTION_139	FOR_1
0x4005941	          0x4c89f7	                            mov rdi, r14	      7436	eval.c	FUNCTION_139	CALL_6
0x4005944	      0xe800000000	                          call 0x4005949	      7436	eval.c	FUNCTION_139	CALL_6
0x4005949	              0x5b	                                 pop rbx	      7406	eval.c	FUNCTION_138
0x400594a	    0x49c746080000	                  mov qword [r14 + 8], 0	      7437	eval.c	FUNCTION_139
0x4005952	              0x5d	                                 pop rbp	      7406	eval.c	FUNCTION_138
0x4005953	            0x415c	                                 pop r12	      7406	eval.c	FUNCTION_138
0x4005955	            0x415d	                                 pop r13	      7406	eval.c	FUNCTION_138
0x4005957	            0x415e	                                 pop r14	      7406	eval.c	FUNCTION_138
0x4005959	              0xc3	                                     ret	      7406	eval.c	FUNCTION_138
0x400595a	    0x660f1f440000	                    nop word [rax + rax]	      7406	eval.c	FUNCTION_138
0x4005960	          0x4c89ef	                            mov rdi, r13	      7433	eval.c	FUNCTION_139	FOR_1	IF_1	CALL_5
0x4005963	      0xe800000000	                          call 0x4005968	      7433	eval.c	FUNCTION_139	FOR_1	IF_1	CALL_5
0x4005968	            0xebce	                           jmp 0x4005938	      7433	eval.c	FUNCTION_139	FOR_1	IF_1	CALL_5
0x400596a	    0x660f1f440000	                    nop word [rax + rax]	      7433	eval.c	FUNCTION_139	FOR_1	IF_1	CALL_5
0x4005970	        0x4883c510	                           add rbp, 0x10	      7420	eval.c	FUNCTION_139	FOR_1
0x4005974	            0xeb9a	                           jmp 0x4005910	      7420	eval.c	FUNCTION_139	FOR_1
write_viminfo_varlist	functions,0:SWITCH,1:IF,4:DO,0:ELSE,0:WHILE,0:CALL,9:FOR,1	111
0x40084d0	            0x4156	                                push r14	      8629	eval.c	FUNCTION_164
0x40084d2	            0x4155	                                push r13	      8629	eval.c	FUNCTION_164
0x40084d4	            0x4154	                                push r12	      8629	eval.c	FUNCTION_164
0x40084d6	              0x55	                                push rbp	      8629	eval.c	FUNCTION_164
0x40084d7	              0x53	                                push rbx	      8629	eval.c	FUNCTION_164
0x40084d8	          0x4889fb	                            mov rbx, rdi	      8629	eval.c	FUNCTION_164
0x40084db	      0xbf21000000	                           mov edi, 0x21	      8638	eval.c	FUNCTION_164	IF_1	CALL_1
0x40084e0	        0x4883ec60	                           sub rsp, 0x60	      8629	eval.c	FUNCTION_164
0x40084e4	    0x64488b042528	                mov rax, qword fs:[0x28]	      8629	eval.c	FUNCTION_164
0x40084ed	      0x4889442458	             mov qword [rsp + 0x58], rax	      8629	eval.c	FUNCTION_164
0x40084f2	            0x31c0	                            xor eax, eax	      8629	eval.c	FUNCTION_164
0x40084f4	      0xe800000000	                          call 0x40084f9	      8638	eval.c	FUNCTION_164	IF_1	CALL_1
0x40084f9	          0x4885c0	                           test rax, rax	      8638	eval.c	FUNCTION_164	IF_1	CALL_1
0x40084fc	            0x7471	                            je 0x400856f	      8638	eval.c	FUNCTION_164	IF_1	CALL_1
0x40084fe	            0x31ff	                            xor edi, edi	      8641	eval.c	FUNCTION_164	CALL_3
0x4008500	      0xba05000000	                              mov edx, 5	      8641	eval.c	FUNCTION_164	CALL_3
0x4008505	      0xbe00000000	                              mov esi, 0	      8641	eval.c	FUNCTION_164	CALL_3
0x400850a	      0xe800000000	                          call 0x400850f	      8641	eval.c	FUNCTION_164	CALL_3
0x400850f	          0x4889de	                            mov rsi, rbx	      8641	eval.c	FUNCTION_164	CALL_3
0x4008512	          0x4889c7	                            mov rdi, rax	      8641	eval.c	FUNCTION_164	CALL_3
0x4008515	      0xe800000000	                          call 0x400851a	      8641	eval.c	FUNCTION_164	CALL_3
0x400851a	    0x488b05000000	            mov rax, qword [0x04008521] 	      8643	eval.c	FUNCTION_164
0x4008521	    0x4c8b25000000	            mov r12, qword [0x04008528] 	      8644	eval.c	FUNCTION_164	FOR_1
0x4008528	            0x85c0	                           test eax, eax	      8644	eval.c	FUNCTION_164	FOR_1
0x400852a	          0x4189c5	                           mov r13d, eax	      8643	eval.c	FUNCTION_164
0x400852d	            0x7e40	                           jle 0x400856f	      8644	eval.c	FUNCTION_164	FOR_1
0x400852f	      0xbd00000000	                              mov ebp, 0	      8644	eval.c	FUNCTION_164	FOR_1
0x4008534	         0xf1f4000	                         nop dword [rax]	      8644	eval.c	FUNCTION_164	FOR_1
0x4008538	      0x4d8b742408	                mov r14, qword [r12 + 8]	      8646	eval.c	FUNCTION_164	FOR_1	IF_2	CALL_4
0x400853d	    0x4981fe000000	                              cmp r14, 0	      8646	eval.c	FUNCTION_164	FOR_1	IF_2	CALL_4
0x4008544	     0xf84d6000000	                            je 0x4008620	      8646	eval.c	FUNCTION_164	FOR_1	IF_2	CALL_4
0x400854a	          0x4d85f6	                           test r14, r14	      8646	eval.c	FUNCTION_164	FOR_1	IF_2	CALL_4
0x400854d	     0xf84cd000000	                            je 0x4008620	      8646	eval.c	FUNCTION_164	FOR_1	IF_2	CALL_4
0x4008553	        0x410fb606	                   movzx eax, byte [r14]	      8538	eval.c	FUNCTION_162	IF_1	CALL_1
0x4008557	        0x4183ed01	                             sub r13d, 1	      8648	eval.c	FUNCTION_164	FOR_1	IF_2
0x400855b	          0x4c89f2	                            mov rdx, r14	      8650	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	CALL_6
0x400855e	          0x83e841	                           sub eax, 0x41	      8538	eval.c	FUNCTION_162	IF_1	CALL_1
0x4008561	          0x83f819	                           cmp eax, 0x19	      8538	eval.c	FUNCTION_162	IF_1	CALL_1
0x4008564	            0x7632	                           jbe 0x4008598	      8538	eval.c	FUNCTION_162	IF_1	CALL_1
0x4008566	        0x4983c410	                           add r12, 0x10	      8644	eval.c	FUNCTION_164	FOR_1
0x400856a	          0x4585ed	                         test r13d, r13d	      8644	eval.c	FUNCTION_164	FOR_1
0x400856d	            0x75c9	                           jne 0x4008538	      8644	eval.c	FUNCTION_164	FOR_1
0x400856f	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      8676	eval.c	FUNCTION_164
0x4008574	    0x644833042528	                xor rax, qword fs:[0x28]	      8676	eval.c	FUNCTION_164
0x400857d	     0xf85f7000000	                           jne 0x400867a	      8676	eval.c	FUNCTION_164
0x4008583	        0x4883c460	                           add rsp, 0x60	      8676	eval.c	FUNCTION_164
0x4008587	              0x5b	                                 pop rbx	      8676	eval.c	FUNCTION_164
0x4008588	              0x5d	                                 pop rbp	      8676	eval.c	FUNCTION_164
0x4008589	            0x415c	                                 pop r12	      8676	eval.c	FUNCTION_164
0x400858b	            0x415d	                                 pop r13	      8676	eval.c	FUNCTION_164
0x400858d	            0x415e	                                 pop r14	      8676	eval.c	FUNCTION_164
0x400858f	              0xc3	                                     ret	      8676	eval.c	FUNCTION_164
0x4008590	          0x83e861	                           sub eax, 0x61	      8541	eval.c	FUNCTION_162	IF_1	WHILE_1	IF_2	CALL_2
0x4008593	          0x83f819	                           cmp eax, 0x19	      8541	eval.c	FUNCTION_162	IF_1	WHILE_1	IF_2	CALL_2
0x4008596	            0x76ce	                           jbe 0x4008566	      8541	eval.c	FUNCTION_162	IF_1	WHILE_1	IF_2	CALL_2
0x4008598	        0x4883c201	                              add rdx, 1	      8540	eval.c	FUNCTION_162	IF_1	WHILE_1
0x400859c	           0xfb602	                   movzx eax, byte [rdx]	      8540	eval.c	FUNCTION_162	IF_1	WHILE_1
0x400859f	            0x84c0	                             test al, al	      8540	eval.c	FUNCTION_162	IF_1	WHILE_1
0x40085a1	            0x75ed	                           jne 0x4008590	      8540	eval.c	FUNCTION_162	IF_1	WHILE_1
0x40085a3	      0x41837eef0a	            cmp dword [r14 - 0x11], 0xa 	      8652	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x40085a8	            0x7716	                            ja 0x40085c0	      8652	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x40085aa	        0x418b46ef	             mov eax, dword [r14 - 0x11]	      8652	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x40085ae	    0xff24c5000000	                       jmp qword [rax*8]	      8652	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x40085b5	           0xf1f00	                         nop dword [rax]	      8652	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x40085b8	      0xbd00000000	                              mov ebp, 0	      8658	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x40085bd	           0xf1f00	                         nop dword [rax]	      8658	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x40085c0	          0x4989e8	                             mov r8, rbp	        97	stdio2.h	CALL_60
0x40085c3	          0x4c89f1	                            mov rcx, r14	        97	stdio2.h	CALL_60
0x40085c6	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_60
0x40085cb	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_60
0x40085d0	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_60
0x40085d3	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_60
0x40085d5	      0xe800000000	                          call 0x40085da	        97	stdio2.h	CALL_60
0x40085da	        0x4883ec08	                              sub rsp, 8	      5742	eval.c	FUNCTION_88	CALL_1
0x40085de	        0x498d7eef	                   lea rdi, [r14 - 0x11]	      8669	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	CALL_7
0x40085e2	            0x31c9	                            xor ecx, ecx	      5742	eval.c	FUNCTION_88	CALL_1
0x40085e4	            0x6a00	                                  push 0	      5742	eval.c	FUNCTION_88	CALL_1
0x40085e6	          0x4531c9	                            xor r9d, r9d	      5742	eval.c	FUNCTION_88	CALL_1
0x40085e9	    0x41b801000000	                              mov r8d, 1	      5742	eval.c	FUNCTION_88	CALL_1
0x40085ef	      0x488d542420	                   lea rdx, [rsp + 0x20]	      5742	eval.c	FUNCTION_88	CALL_1
0x40085f4	      0x488d742418	                   lea rsi, [rsp + 0x18]	      5742	eval.c	FUNCTION_88	CALL_1
0x40085f9	      0xe800000000	                          call 0x40085fe	      5742	eval.c	FUNCTION_88	CALL_1
0x40085fe	          0x4885c0	                           test rax, rax	      8670	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	IF_4
0x4008601	              0x5a	                                 pop rdx	      8670	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	IF_4
0x4008602	              0x59	                                 pop rcx	      8670	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	IF_4
0x4008603	            0x740b	                            je 0x4008610	      8670	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	IF_4
0x4008605	          0x4889c6	                            mov rsi, rax	      8671	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	CALL_8
0x4008608	          0x4889df	                            mov rdi, rbx	      8671	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	CALL_8
0x400860b	      0xe800000000	                          call 0x4008610	      8671	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	CALL_8
0x4008610	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      8672	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	CALL_9
0x4008615	      0xe800000000	                          call 0x400861a	      8672	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	CALL_9
0x400861a	      0xe947ffffff	                           jmp 0x4008566	      8672	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	CALL_9
0x400861f	              0x90	                                     nop	      8672	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	CALL_9
0x4008620	        0x4983c410	                           add r12, 0x10	      8644	eval.c	FUNCTION_164	FOR_1
0x4008624	      0xe90fffffff	                           jmp 0x4008538	      8644	eval.c	FUNCTION_164	FOR_1
0x4008629	     0xf1f80000000	                         nop dword [rax]	      8644	eval.c	FUNCTION_164	FOR_1
0x4008630	      0xbd00000000	                              mov ebp, 0	      8655	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x4008635	            0xeb89	                           jmp 0x40085c0	      8655	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x4008637	    0x660f1f840000	                    nop word [rax + rax]	      8655	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x4008640	      0xbd00000000	                              mov ebp, 0	      8659	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x4008645	      0xe976ffffff	                           jmp 0x40085c0	      8659	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x400864a	    0x660f1f440000	                    nop word [rax + rax]	      8659	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x4008650	      0xbd00000000	                              mov ebp, 0	      8654	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x4008655	      0xe966ffffff	                           jmp 0x40085c0	      8654	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x400865a	    0x660f1f440000	                    nop word [rax + rax]	      8654	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x4008660	      0xbd00000000	                              mov ebp, 0	      8657	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x4008665	      0xe956ffffff	                           jmp 0x40085c0	      8657	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x400866a	    0x660f1f440000	                    nop word [rax + rax]	      8657	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x4008670	      0xbd00000000	                              mov ebp, 0	      8656	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x4008675	      0xe946ffffff	                           jmp 0x40085c0	      8656	eval.c	FUNCTION_164	FOR_1	IF_2	IF_3	SWITCH_1
0x400867a	      0xe800000000	                          call 0x400867f	      8676	eval.c	FUNCTION_164
ex_execute	functions,0:SWITCH,0:IF,13:DO,0:ELSE,2:WHILE,1:CALL,19:FOR,0	395
0x400eed0	            0x4156	                                push r14	      8125	eval.c	FUNCTION_154
0x400eed2	            0x4155	                                push r13	      8125	eval.c	FUNCTION_154
0x400eed4	      0xba50000000	                           mov edx, 0x50	      8134	eval.c	FUNCTION_154	CALL_1
0x400eed9	            0x4154	                                push r12	      8125	eval.c	FUNCTION_154
0x400eedb	              0x55	                                push rbp	      8125	eval.c	FUNCTION_154
0x400eedc	      0xbe01000000	                              mov esi, 1	      8134	eval.c	FUNCTION_154	CALL_1
0x400eee1	              0x53	                                push rbx	      8125	eval.c	FUNCTION_154
0x400eee2	          0x4889fb	                            mov rbx, rdi	      8125	eval.c	FUNCTION_154
0x400eee5	        0x4883ec40	                           sub rsp, 0x40	      8125	eval.c	FUNCTION_154
0x400eee9	    0x64488b042528	                mov rax, qword fs:[0x28]	      8125	eval.c	FUNCTION_154
0x400eef2	      0x4889442438	             mov qword [rsp + 0x38], rax	      8125	eval.c	FUNCTION_154
0x400eef7	            0x31c0	                            xor eax, eax	      8125	eval.c	FUNCTION_154
0x400eef9	          0x488b07	                    mov rax, qword [rdi]	      8126	eval.c	FUNCTION_154
0x400eefc	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      8134	eval.c	FUNCTION_154	CALL_1
0x400ef01	      0x4889442408	                mov qword [rsp + 8], rax	      8126	eval.c	FUNCTION_154
0x400ef06	      0xe800000000	                          call 0x400ef0b	      8134	eval.c	FUNCTION_154	CALL_1
0x400ef0b	          0x8b4330	            mov eax, dword [rbx + 0x30] 	      8136	eval.c	FUNCTION_154	IF_1
0x400ef0e	            0x85c0	                           test eax, eax	      8136	eval.c	FUNCTION_154	IF_1
0x400ef10	            0x7407	                            je 0x400ef19	      8136	eval.c	FUNCTION_154	IF_1
0x400ef12	    0x830500000000	               add dword [0x0400ef19], 1	      8137	eval.c	FUNCTION_154	IF_1
0x400ef19	      0x488b6c2408	                mov rbp, qword [rsp + 8]	      8138	eval.c	FUNCTION_154	WHILE_1
0x400ef1e	         0xfb65500	                   movzx edx, byte [rbp]	      8138	eval.c	FUNCTION_154	WHILE_1
0x400ef22	          0x80fa7c	                            cmp dl, 0x7c	      8138	eval.c	FUNCTION_154	WHILE_1
0x400ef25	        0x400f95c6	                               setne sil	      8138	eval.c	FUNCTION_154	WHILE_1
0x400ef29	            0x84d2	                             test dl, dl	      8138	eval.c	FUNCTION_154	WHILE_1
0x400ef2b	           0xf95c1	                                setne cl	      8138	eval.c	FUNCTION_154	WHILE_1
0x400ef2e	          0x4084ce	                            test sil, cl	      8138	eval.c	FUNCTION_154	WHILE_1
0x400ef31	     0xf84c9040000	                            je 0x400f400	      8138	eval.c	FUNCTION_154	WHILE_1
0x400ef37	          0x80fa0a	                             cmp dl, 0xa	      8138	eval.c	FUNCTION_154	WHILE_1
0x400ef3a	     0xf84c0040000	                            je 0x400f400	      8138	eval.c	FUNCTION_154	WHILE_1
0x400ef40	    0x41bc00000000	                             mov r12d, 0	      7142	eval.c	FUNCTION_130	SWITCH_1
0x400ef46	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      7142	eval.c	FUNCTION_130	SWITCH_1
0x400ef50	            0x31d2	                            xor edx, edx	      8141	eval.c	FUNCTION_154	WHILE_1	IF_2	CALL_2
0x400ef52	      0x488d742410	                   lea rsi, [rsp + 0x10]	      8141	eval.c	FUNCTION_154	WHILE_1	IF_2	CALL_2
0x400ef57	            0x85c0	                           test eax, eax	      8141	eval.c	FUNCTION_154	WHILE_1	IF_2	CALL_2
0x400ef59	      0x488d7c2408	                      lea rdi, [rsp + 8]	      8141	eval.c	FUNCTION_154	WHILE_1	IF_2	CALL_2
0x400ef5e	           0xf94c2	                                 sete dl	      8141	eval.c	FUNCTION_154	WHILE_1	IF_2	CALL_2
0x400ef61	      0xe800000000	                          call 0x400ef66	      8141	eval.c	FUNCTION_154	WHILE_1	IF_2	CALL_2
0x400ef66	            0x85c0	                           test eax, eax	      8141	eval.c	FUNCTION_154	WHILE_1	IF_2	CALL_2
0x400ef68	     0xf84f2040000	                            je 0x400f460	      8141	eval.c	FUNCTION_154	WHILE_1	IF_2	CALL_2
0x400ef6e	        0x448b6b30	           mov r13d, dword [rbx + 0x30] 	      8154	eval.c	FUNCTION_154	WHILE_1	IF_4
0x400ef72	          0x4585ed	                         test r13d, r13d	      8154	eval.c	FUNCTION_154	WHILE_1	IF_4
0x400ef75	     0xf85d9010000	                           jne 0x400f154	      8154	eval.c	FUNCTION_154	WHILE_1	IF_4
0x400ef7b	      0x837c24100a	            cmp dword [rsp + 0x10], 0xa 	      7104	eval.c	FUNCTION_130	SWITCH_1
0x400ef80	     0xf8782010000	                            ja 0x400f108	      7104	eval.c	FUNCTION_130	SWITCH_1
0x400ef86	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      7104	eval.c	FUNCTION_130	SWITCH_1
0x400ef8a	    0xff24c5000000	                       jmp qword [rax*8]	      7104	eval.c	FUNCTION_130	SWITCH_1
0x400ef91	     0xf1f80000000	                         nop dword [rax]	      7104	eval.c	FUNCTION_130	SWITCH_1
0x400ef98	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      7135	eval.c	FUNCTION_130	SWITCH_1
0x400ef9d	          0x4885c0	                           test rax, rax	      7138	eval.c	FUNCTION_130	SWITCH_1	IF_2
0x400efa0	     0xf846b050000	                            je 0x400f511	      7138	eval.c	FUNCTION_130	SWITCH_1	IF_2
0x400efa6	          0x8b5028	            mov edx, dword [rax + 0x28] 	      7140	eval.c	FUNCTION_130	SWITCH_1
0x400efa9	    0x41b800000000	                              mov r8d, 0	      7141	eval.c	FUNCTION_130	SWITCH_1
0x400efaf	            0x85d2	                           test edx, edx	      7141	eval.c	FUNCTION_130	SWITCH_1
0x400efb1	            0x740d	                            je 0x400efc0	      7141	eval.c	FUNCTION_130	SWITCH_1
0x400efb3	          0x83fa02	                              cmp edx, 2	      7142	eval.c	FUNCTION_130	SWITCH_1
0x400efb6	    0x41b800000000	                              mov r8d, 0	      7142	eval.c	FUNCTION_130	SWITCH_1
0x400efbc	        0x4d0f42c4	                           cmovb r8, r12	      7142	eval.c	FUNCTION_130	SWITCH_1
0x400efc0	        0x48634810	         movsxd rcx, dword [rax + 0x10] 	      7144	eval.c	FUNCTION_130	SWITCH_1	CALL_12
0x400efc4	      0xbe41000000	                           mov esi, 0x41	      7144	eval.c	FUNCTION_130	SWITCH_1	CALL_12
0x400efc9	      0xba00000000	                              mov edx, 0	      7144	eval.c	FUNCTION_130	SWITCH_1	CALL_12
0x400efce	      0xbf00000000	                              mov edi, 0	      7144	eval.c	FUNCTION_130	SWITCH_1	CALL_12
0x400efd3	            0x31c0	                            xor eax, eax	      7144	eval.c	FUNCTION_130	SWITCH_1	CALL_12
0x400efd5	      0xe800000000	                          call 0x400efda	      7144	eval.c	FUNCTION_130	SWITCH_1	CALL_12
0x400efda	      0xbe00000000	                              mov esi, 0	      7144	eval.c	FUNCTION_130	SWITCH_1	CALL_12
0x400efdf	            0x8b16	                    mov edx, dword [rsi]	      7144	eval.c	FUNCTION_130	SWITCH_1	CALL_12
0x400efe1	        0x4883c604	                              add rsi, 4	      7144	eval.c	FUNCTION_130	SWITCH_1	CALL_12
0x400efe5	    0x8d82fffefefe	              lea eax, [rdx - 0x1010101]	      7144	eval.c	FUNCTION_130	SWITCH_1	CALL_12
0x400efeb	            0xf7d2	                                 not edx	      7144	eval.c	FUNCTION_130	SWITCH_1	CALL_12
0x400efed	            0x21d0	                            and eax, edx	      7144	eval.c	FUNCTION_130	SWITCH_1	CALL_12
0x400efef	      0x2580808080	                     and eax, 0x80808080	      7144	eval.c	FUNCTION_130	SWITCH_1	CALL_12
0x400eff4	            0x74e9	                            je 0x400efdf	      7144	eval.c	FUNCTION_130	SWITCH_1	CALL_12
0x400eff6	            0x89c2	                            mov edx, eax	      7144	eval.c	FUNCTION_130	SWITCH_1	CALL_12
0x400eff8	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      8158	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_5	CALL_8
0x400effd	      0xbd00000000	                              mov ebp, 0	      7170	eval.c	FUNCTION_130	SWITCH_1
0x400f002	          0xc1ea10	                           shr edx, 0x10	      7170	eval.c	FUNCTION_130	SWITCH_1
0x400f005	      0xa980800000	                        test eax, 0x8080	      7170	eval.c	FUNCTION_130	SWITCH_1
0x400f00a	           0xf44c2	                          cmove eax, edx	      7170	eval.c	FUNCTION_130	SWITCH_1
0x400f00d	        0x488d5602	                      lea rdx, [rsi + 2]	      7170	eval.c	FUNCTION_130	SWITCH_1
0x400f011	            0x89c1	                            mov ecx, eax	      7170	eval.c	FUNCTION_130	SWITCH_1
0x400f013	        0x480f44f2	                          cmove rsi, rdx	      7170	eval.c	FUNCTION_130	SWITCH_1
0x400f017	              0xc1	                              add cl, al	      7170	eval.c	FUNCTION_130	SWITCH_1
0x400f019	    0x4881de000000	                              sbb rsi, 0	      7170	eval.c	FUNCTION_130	SWITCH_1
0x400f020	          0x4189f5	                           mov r13d, esi	      7170	eval.c	FUNCTION_130	SWITCH_1
0x400f023	          0x83c602	                              add esi, 2	      7170	eval.c	FUNCTION_130	SWITCH_1
0x400f026	      0xe800000000	                          call 0x400f02b	      8158	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_5	CALL_8
0x400f02b	            0x85c0	                           test eax, eax	      8158	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_5	CALL_8
0x400f02d	     0xf85f1000000	                           jne 0x400f124	      8158	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_5	CALL_8
0x400f033	       0xf1f440000	                   nop dword [rax + rax]	      8158	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_5	CALL_8
0x400f038	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      8160	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_5	CALL_9
0x400f03d	      0xe800000000	                          call 0x400f042	      8160	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_5	CALL_9
0x400f042	    0x660f1f440000	                    nop word [rax + rax]	      8160	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_5	CALL_9
0x400f048	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      8202	eval.c	FUNCTION_154	CALL_18
0x400f04d	      0xe800000000	                          call 0x400f052	      8202	eval.c	FUNCTION_154	CALL_18
0x400f052	          0x8b4330	            mov eax, dword [rbx + 0x30] 	      8204	eval.c	FUNCTION_154	IF_13
0x400f055	            0x85c0	                           test eax, eax	      8204	eval.c	FUNCTION_154	IF_13
0x400f057	            0x7407	                            je 0x400f060	      8204	eval.c	FUNCTION_154	IF_13
0x400f059	    0x832d00000000	               sub dword [0x0400f060], 1	      8205	eval.c	FUNCTION_154	IF_13
0x400f060	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      8207	eval.c	FUNCTION_154	CALL_19
0x400f065	      0xe800000000	                          call 0x400f06a	      8207	eval.c	FUNCTION_154	CALL_19
0x400f06a	        0x48894308	                mov qword [rbx + 8], rax	      8207	eval.c	FUNCTION_154	CALL_19
0x400f06e	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      8208	eval.c	FUNCTION_154
0x400f073	    0x644833042528	                xor rax, qword fs:[0x28]	      8208	eval.c	FUNCTION_154
0x400f07c	     0xf85db040000	                           jne 0x400f55d	      8208	eval.c	FUNCTION_154
0x400f082	        0x4883c440	                           add rsp, 0x40	      8208	eval.c	FUNCTION_154
0x400f086	              0x5b	                                 pop rbx	      8208	eval.c	FUNCTION_154
0x400f087	              0x5d	                                 pop rbp	      8208	eval.c	FUNCTION_154
0x400f088	            0x415c	                                 pop r12	      8208	eval.c	FUNCTION_154
0x400f08a	            0x415d	                                 pop r13	      8208	eval.c	FUNCTION_154
0x400f08c	            0x415e	                                 pop r14	      8208	eval.c	FUNCTION_154
0x400f08e	              0xc3	                                     ret	      8208	eval.c	FUNCTION_154
0x400f08f	              0x90	                                     nop	      8208	eval.c	FUNCTION_154
0x400f090	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5517	eval.c	FUNCTION_86	SWITCH_1
0x400f095	          0x83f801	                              cmp eax, 1	      5517	eval.c	FUNCTION_86	SWITCH_1
0x400f098	     0xf84f0030000	                            je 0x400f48e	      5517	eval.c	FUNCTION_86	SWITCH_1
0x400f09e	     0xf8e34040000	                           jle 0x400f4d8	      5517	eval.c	FUNCTION_86	SWITCH_1
0x400f0a4	          0x83f802	                              cmp eax, 2	      5517	eval.c	FUNCTION_86	SWITCH_1
0x400f0a7	      0xbe00000000	                              mov esi, 0	      5521	eval.c	FUNCTION_86	SWITCH_1
0x400f0ac	            0x7419	                            je 0x400f0c7	      5517	eval.c	FUNCTION_86	SWITCH_1
0x400f0ae	          0x83f803	                              cmp eax, 3	      5517	eval.c	FUNCTION_86	SWITCH_1
0x400f0b1	      0xbe00000000	                              mov esi, 0	      5522	eval.c	FUNCTION_86	SWITCH_1
0x400f0b6	            0x740f	                            je 0x400f0c7	      5517	eval.c	FUNCTION_86	SWITCH_1
0x400f0b8	      0xbf00000000	                              mov edi, 0	      5524	eval.c	FUNCTION_86	CALL_1
0x400f0bd	      0xe800000000	                          call 0x400f0c2	      5524	eval.c	FUNCTION_86	CALL_1
0x400f0c2	      0xbe00000000	                              mov esi, 0	      5525	eval.c	FUNCTION_86
0x400f0c7	      0xbf00000000	                              mov edi, 0	       110	string3.h	FUNCTION_197	CALL_3
0x400f0cc	      0xbd00000000	                              mov ebp, 0	      7131	eval.c	FUNCTION_130	SWITCH_1
0x400f0d1	      0xe800000000	                          call 0x400f0d6	       110	string3.h	FUNCTION_197	CALL_3
0x400f0d6	    0x482d00000000	                              sub rax, 0	       110	string3.h	FUNCTION_197	CALL_3
0x400f0dc	          0x4189c5	                           mov r13d, eax	       110	string3.h	FUNCTION_197	CALL_3
0x400f0df	          0x8d7002	                      lea esi, [rax + 2]	       110	string3.h	FUNCTION_197	CALL_3
0x400f0e2	            0xeb2e	                           jmp 0x400f112	       110	string3.h	FUNCTION_197	CALL_3
0x400f0e4	         0xf1f4000	                         nop dword [rax]	       110	string3.h	FUNCTION_197	CALL_3
0x400f0e8	            0x31ff	                            xor edi, edi	      7122	eval.c	FUNCTION_130	SWITCH_1	CALL_9
0x400f0ea	      0xba05000000	                              mov edx, 5	      7122	eval.c	FUNCTION_130	SWITCH_1	CALL_9
0x400f0ef	      0xbe00000000	                              mov esi, 0	      7122	eval.c	FUNCTION_130	SWITCH_1	CALL_9
0x400f0f4	      0xe800000000	                          call 0x400f0f9	      7122	eval.c	FUNCTION_130	SWITCH_1	CALL_9
0x400f0f9	          0x4889c7	                            mov rdi, rax	      7122	eval.c	FUNCTION_130	SWITCH_1	CALL_9
0x400f0fc	      0xe800000000	                          call 0x400f101	      7122	eval.c	FUNCTION_130	SWITCH_1	CALL_9
0x400f101	     0xf1f80000000	                         nop dword [rax]	      7122	eval.c	FUNCTION_130	SWITCH_1	CALL_9
0x400f108	      0xbe02000000	                              mov esi, 2	      7142	eval.c	FUNCTION_130	SWITCH_1
0x400f10d	      0xbd00000000	                              mov ebp, 0	      7087	eval.c	FUNCTION_128
0x400f112	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      8158	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_5	CALL_8
0x400f117	      0xe800000000	                          call 0x400f11c	      8158	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_5	CALL_8
0x400f11c	            0x85c0	                           test eax, eax	      8158	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_5	CALL_8
0x400f11e	     0xf8414ffffff	                            je 0x400f038	      8158	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_5	CALL_8
0x400f124	      0x48637c2420	         movsxd rdi, dword [rsp + 0x20] 	      8164	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_6
0x400f129	            0x85ff	                           test edi, edi	      8164	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_6
0x400f12b	            0x7415	                            je 0x400f142	      8164	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_6
0x400f12d	          0x8d4701	                      lea eax, [rdi + 1]	      8165	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_6
0x400f130	        0x89442420	             mov dword [rsp + 0x20], eax	      8165	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_6
0x400f134	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      8165	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_6
0x400f139	        0xc6043820	              mov byte [rax + rdi], 0x20	      8165	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_6
0x400f13d	      0x48637c2420	         movsxd rdi, dword [rsp + 0x20] 	      8165	eval.c	FUNCTION_154	WHILE_1	IF_4	IF_6
0x400f142	      0x48037c2430	             add rdi, qword [rsp + 0x30]	       110	string3.h	FUNCTION_197	CALL_3
0x400f147	          0x4889ee	                            mov rsi, rbp	       110	string3.h	FUNCTION_197	CALL_3
0x400f14a	      0xe800000000	                          call 0x400f14f	       110	string3.h	FUNCTION_197	CALL_3
0x400f14f	      0x44016c2420	            add dword [rsp + 0x20], r13d	      8167	eval.c	FUNCTION_154	WHILE_1	IF_4
0x400f154	      0x837c24100a	            cmp dword [rsp + 0x10], 0xa 	      6894	eval.c	FUNCTION_122	IF_1	SWITCH_1
0x400f159	            0x7737	                            ja 0x400f192	      6894	eval.c	FUNCTION_122	IF_1	SWITCH_1
0x400f15b	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      6894	eval.c	FUNCTION_122	IF_1	SWITCH_1
0x400f15f	    0xff24c5000000	                       jmp qword [rax*8]	      6894	eval.c	FUNCTION_122	IF_1	SWITCH_1
0x400f166	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      6894	eval.c	FUNCTION_122	IF_1	SWITCH_1
0x400f170	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      6897	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_1
0x400f175	      0xe800000000	                          call 0x400f17a	      6897	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_1
0x400f17a	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      6900	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_2
0x400f17f	          0x4885ff	                           test rdi, rdi	      6900	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_2
0x400f182	            0x740e	                            je 0x400f192	      6900	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_2
0x400f184	      0xe800000000	                          call 0x400f189	      4883	eval.c	FUNCTION_76	CALL_7
0x400f189	    0x48c744241800	               mov qword [rsp + 0x18], 0	      6932	eval.c	FUNCTION_122	IF_1	SWITCH_1
0x400f192	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      8171	eval.c	FUNCTION_154	WHILE_1	CALL_12
0x400f197	      0xc644241400	                mov byte [rsp + 0x14], 0	      6937	eval.c	FUNCTION_122	IF_1
0x400f19c	      0xe800000000	                          call 0x400f1a1	      8171	eval.c	FUNCTION_154	WHILE_1	CALL_12
0x400f1a1	          0x4889c5	                            mov rbp, rax	      8171	eval.c	FUNCTION_154	WHILE_1	CALL_12
0x400f1a4	      0x4889442408	                mov qword [rsp + 8], rax	      8171	eval.c	FUNCTION_154	WHILE_1	CALL_12
0x400f1a9	           0xfb600	                   movzx eax, byte [rax]	      8138	eval.c	FUNCTION_154	WHILE_1
0x400f1ac	            0x84c0	                             test al, al	      8138	eval.c	FUNCTION_154	WHILE_1
0x400f1ae	           0xf95c1	                                setne cl	      8138	eval.c	FUNCTION_154	WHILE_1
0x400f1b1	            0x3c7c	                            cmp al, 0x7c	      8138	eval.c	FUNCTION_154	WHILE_1
0x400f1b3	           0xf95c2	                                setne dl	      8138	eval.c	FUNCTION_154	WHILE_1
0x400f1b6	            0x84d1	                             test cl, dl	      8138	eval.c	FUNCTION_154	WHILE_1
0x400f1b8	     0xf8442020000	                            je 0x400f400	      8138	eval.c	FUNCTION_154	WHILE_1
0x400f1be	            0x3c0a	                             cmp al, 0xa	      8138	eval.c	FUNCTION_154	WHILE_1
0x400f1c0	     0xf843a020000	                            je 0x400f400	      8138	eval.c	FUNCTION_154	WHILE_1
0x400f1c6	          0x8b4330	            mov eax, dword [rbx + 0x30] 	      8138	eval.c	FUNCTION_154	WHILE_1
0x400f1c9	      0xe982fdffff	                           jmp 0x400ef50	      8138	eval.c	FUNCTION_154	WHILE_1
0x400f1ce	            0x6690	                                     nop	      8138	eval.c	FUNCTION_154	WHILE_1
0x400f1d0	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      6931	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_7
0x400f1d5	      0xe800000000	                          call 0x400f1da	      6931	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_7
0x400f1da	            0xebad	                           jmp 0x400f189	      6931	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_7
0x400f1dc	         0xf1f4000	                         nop dword [rax]	      6931	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_7
0x400f1e0	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      6907	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_4
0x400f1e5	      0xe800000000	                          call 0x400f1ea	      6907	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_4
0x400f1ea	    0x48c744241800	               mov qword [rsp + 0x18], 0	      6908	eval.c	FUNCTION_122	IF_1	SWITCH_1
0x400f1f3	            0xeb9d	                           jmp 0x400f192	      6908	eval.c	FUNCTION_122	IF_1	SWITCH_1
0x400f1f5	           0xf1f00	                         nop dword [rax]	      6908	eval.c	FUNCTION_122	IF_1	SWITCH_1
0x400f1f8	      0x488b6c2418	            mov rbp, qword [rsp + 0x18] 	      6903	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_3
0x400f1fd	          0x4885ed	                           test rbp, rbp	      4893	eval.c	FUNCTION_77	IF_1
0x400f200	            0x7487	                            je 0x400f189	      4893	eval.c	FUNCTION_77	IF_1
0x400f202	          0x8b4500	                    mov eax, dword [rbp]	      4893	eval.c	FUNCTION_77	IF_1
0x400f205	          0x83e801	                              sub eax, 1	      4893	eval.c	FUNCTION_77	IF_1
0x400f208	            0x85c0	                           test eax, eax	      4893	eval.c	FUNCTION_77	IF_1
0x400f20a	          0x894500	                    mov dword [rbp], eax	      4893	eval.c	FUNCTION_77	IF_1
0x400f20d	     0xf8f76ffffff	                            jg 0x400f189	      4893	eval.c	FUNCTION_77	IF_1
0x400f213	          0x8b4d1c	            mov ecx, dword [rbp + 0x1c] 	      4872	eval.c	FUNCTION_76	FOR_1
0x400f216	          0x4531f6	                          xor r14d, r14d	      4872	eval.c	FUNCTION_76	FOR_1
0x400f219	          0x4531ed	                          xor r13d, r13d	      4872	eval.c	FUNCTION_76	FOR_1
0x400f21c	            0x85c9	                           test ecx, ecx	      4872	eval.c	FUNCTION_76	FOR_1
0x400f21e	            0x7e1a	                           jle 0x400f23a	      4872	eval.c	FUNCTION_76	FOR_1
0x400f220	          0x4c89f7	                            mov rdi, r14	      4873	eval.c	FUNCTION_76	CALL_1
0x400f223	        0x48037d20	             add rdi, qword [rbp + 0x20]	      4873	eval.c	FUNCTION_76	CALL_1
0x400f227	        0x4183c501	                             add r13d, 1	      4872	eval.c	FUNCTION_76	FOR_1
0x400f22b	        0x4983c610	                           add r14, 0x10	      4872	eval.c	FUNCTION_76	FOR_1
0x400f22f	      0xe800000000	                          call 0x400f234	      4873	eval.c	FUNCTION_76	CALL_1
0x400f234	        0x443b6d1c	           cmp r13d, dword [rbp + 0x1c] 	      4872	eval.c	FUNCTION_76	FOR_1
0x400f238	            0x7ce6	                            jl 0x400f220	      4872	eval.c	FUNCTION_76	FOR_1
0x400f23a	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	      4874	eval.c	FUNCTION_76	CALL_2
0x400f23e	      0xe800000000	                          call 0x400f243	      4874	eval.c	FUNCTION_76	CALL_2
0x400f243	        0x488b7d28	            mov rdi, qword [rbp + 0x28] 	      4875	eval.c	FUNCTION_76	CALL_3
0x400f247	      0xe800000000	                          call 0x400f24c	      4875	eval.c	FUNCTION_76	CALL_3
0x400f24c	        0x488b7d08	                mov rdi, qword [rbp + 8]	      4876	eval.c	FUNCTION_76	IF_1
0x400f250	          0x4885ff	                           test rdi, rdi	      4876	eval.c	FUNCTION_76	IF_1
0x400f253	     0xf84f6020000	                            je 0x400f54f	      4876	eval.c	FUNCTION_76	IF_1
0x400f259	      0xe800000000	                          call 0x400f25e	      4878	eval.c	FUNCTION_76	IF_1	CALL_4
0x400f25e	        0x488b7d08	                mov rdi, qword [rbp + 8]	      4879	eval.c	FUNCTION_76	IF_1	CALL_5
0x400f262	      0xe800000000	                          call 0x400f267	      4879	eval.c	FUNCTION_76	IF_1	CALL_5
0x400f267	          0x4889ef	                            mov rdi, rbp	      4883	eval.c	FUNCTION_76	CALL_7
0x400f26a	      0xe915ffffff	                           jmp 0x400f184	      4883	eval.c	FUNCTION_76	CALL_7
0x400f26f	              0x90	                                     nop	      4883	eval.c	FUNCTION_76	CALL_7
0x400f270	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      6925	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_6
0x400f275	      0xe800000000	                          call 0x400f27a	      6925	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_6
0x400f27a	    0x48c744241800	               mov qword [rsp + 0x18], 0	      6926	eval.c	FUNCTION_122	IF_1	SWITCH_1
0x400f283	      0xe90affffff	                           jmp 0x400f192	      6926	eval.c	FUNCTION_122	IF_1	SWITCH_1
0x400f288	     0xf1f84000000	                   nop dword [rax + rax]	      6926	eval.c	FUNCTION_122	IF_1	SWITCH_1
0x400f290	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      6911	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_5
0x400f295	      0xe800000000	                          call 0x400f29a	      6911	eval.c	FUNCTION_122	IF_1	SWITCH_1	CALL_5
0x400f29a	    0x48c744241800	               mov qword [rsp + 0x18], 0	      6912	eval.c	FUNCTION_122	IF_1	SWITCH_1
0x400f2a3	      0xe9eafeffff	                           jmp 0x400f192	      6912	eval.c	FUNCTION_122	IF_1	SWITCH_1
0x400f2a8	     0xf1f84000000	                   nop dword [rax + rax]	      6912	eval.c	FUNCTION_122	IF_1	SWITCH_1
0x400f2b0	            0x31ff	                            xor edi, edi	      7112	eval.c	FUNCTION_130	SWITCH_1	CALL_3
0x400f2b2	      0xba05000000	                              mov edx, 5	      7112	eval.c	FUNCTION_130	SWITCH_1	CALL_3
0x400f2b7	      0xbe00000000	                              mov esi, 0	      7112	eval.c	FUNCTION_130	SWITCH_1	CALL_3
0x400f2bc	      0xe800000000	                          call 0x400f2c1	      7112	eval.c	FUNCTION_130	SWITCH_1	CALL_3
0x400f2c1	          0x4889c7	                            mov rdi, rax	      7112	eval.c	FUNCTION_130	SWITCH_1	CALL_3
0x400f2c4	      0xe800000000	                          call 0x400f2c9	      7112	eval.c	FUNCTION_130	SWITCH_1	CALL_3
0x400f2c9	      0xe93afeffff	                           jmp 0x400f108	      7112	eval.c	FUNCTION_130	SWITCH_1	CALL_3
0x400f2ce	            0x6690	                                     nop	      7112	eval.c	FUNCTION_130	SWITCH_1	CALL_3
0x400f2d0	      0x488b6c2418	            mov rbp, qword [rsp + 0x18] 	      7126	eval.c	FUNCTION_130	SWITCH_1	IF_1
0x400f2d5	          0x4885ed	                           test rbp, rbp	      7126	eval.c	FUNCTION_130	SWITCH_1	IF_1
0x400f2d8	     0xf842afeffff	                            je 0x400f108	      7126	eval.c	FUNCTION_130	SWITCH_1	IF_1
0x400f2de	          0x4889ef	                            mov rdi, rbp	      7126	eval.c	FUNCTION_130	SWITCH_1	IF_1
0x400f2e1	      0xe800000000	                          call 0x400f2e6	      7126	eval.c	FUNCTION_130	SWITCH_1	IF_1
0x400f2e6	          0x4189c5	                           mov r13d, eax	      7126	eval.c	FUNCTION_130	SWITCH_1	IF_1
0x400f2e9	          0x8d7002	                      lea esi, [rax + 2]	      7126	eval.c	FUNCTION_130	SWITCH_1	IF_1
0x400f2ec	      0xe921feffff	                           jmp 0x400f112	      7126	eval.c	FUNCTION_130	SWITCH_1	IF_1
0x400f2f1	     0xf1f80000000	                         nop dword [rax]	      7126	eval.c	FUNCTION_130	SWITCH_1	IF_1
0x400f2f8	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      7107	eval.c	FUNCTION_130	SWITCH_1	CALL_1
0x400f2fd	      0xbe41000000	                           mov esi, 0x41	      7107	eval.c	FUNCTION_130	SWITCH_1	CALL_1
0x400f302	      0xba00000000	                              mov edx, 0	      7107	eval.c	FUNCTION_130	SWITCH_1	CALL_1
0x400f307	      0xbf00000000	                              mov edi, 0	      7107	eval.c	FUNCTION_130	SWITCH_1	CALL_1
0x400f30c	            0x31c0	                            xor eax, eax	      7107	eval.c	FUNCTION_130	SWITCH_1	CALL_1
0x400f30e	      0xe800000000	                          call 0x400f313	      7107	eval.c	FUNCTION_130	SWITCH_1	CALL_1
0x400f313	      0xbe00000000	                              mov esi, 0	      7107	eval.c	FUNCTION_130	SWITCH_1	CALL_1
0x400f318	            0x8b16	                    mov edx, dword [rsi]	      7107	eval.c	FUNCTION_130	SWITCH_1	CALL_1
0x400f31a	        0x4883c604	                              add rsi, 4	      7107	eval.c	FUNCTION_130	SWITCH_1	CALL_1
0x400f31e	    0x8d82fffefefe	              lea eax, [rdx - 0x1010101]	      7107	eval.c	FUNCTION_130	SWITCH_1	CALL_1
0x400f324	            0xf7d2	                                 not edx	      7107	eval.c	FUNCTION_130	SWITCH_1	CALL_1
0x400f326	            0x21d0	                            and eax, edx	      7107	eval.c	FUNCTION_130	SWITCH_1	CALL_1
0x400f328	      0x2580808080	                     and eax, 0x80808080	      7107	eval.c	FUNCTION_130	SWITCH_1	CALL_1
0x400f32d	            0x74e9	                            je 0x400f318	      7107	eval.c	FUNCTION_130	SWITCH_1	CALL_1
0x400f32f	      0xe9c2fcffff	                           jmp 0x400eff6	      7107	eval.c	FUNCTION_130	SWITCH_1	CALL_1
0x400f334	         0xf1f4000	                         nop dword [rax]	      7107	eval.c	FUNCTION_130	SWITCH_1	CALL_1
0x400f338	            0x31ff	                            xor edi, edi	      7175	eval.c	FUNCTION_130	SWITCH_1	CALL_19
0x400f33a	      0xba05000000	                              mov edx, 5	      7175	eval.c	FUNCTION_130	SWITCH_1	CALL_19
0x400f33f	      0xbe00000000	                              mov esi, 0	      7175	eval.c	FUNCTION_130	SWITCH_1	CALL_19
0x400f344	      0xe800000000	                          call 0x400f349	      7175	eval.c	FUNCTION_130	SWITCH_1	CALL_19
0x400f349	          0x4889c7	                            mov rdi, rax	      7175	eval.c	FUNCTION_130	SWITCH_1	CALL_19
0x400f34c	      0xe800000000	                          call 0x400f351	      7175	eval.c	FUNCTION_130	SWITCH_1	CALL_19
0x400f351	      0xe9b2fdffff	                           jmp 0x400f108	      7175	eval.c	FUNCTION_130	SWITCH_1	CALL_19
0x400f356	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      7175	eval.c	FUNCTION_130	SWITCH_1	CALL_19
0x400f360	            0x31ff	                            xor edi, edi	      7118	eval.c	FUNCTION_130	SWITCH_1	CALL_7
0x400f362	      0xba05000000	                              mov edx, 5	      7118	eval.c	FUNCTION_130	SWITCH_1	CALL_7
0x400f367	      0xbe00000000	                              mov esi, 0	      7118	eval.c	FUNCTION_130	SWITCH_1	CALL_7
0x400f36c	      0xe800000000	                          call 0x400f371	      7118	eval.c	FUNCTION_130	SWITCH_1	CALL_7
0x400f371	          0x4889c7	                            mov rdi, rax	      7118	eval.c	FUNCTION_130	SWITCH_1	CALL_7
0x400f374	      0xe800000000	                          call 0x400f379	      7118	eval.c	FUNCTION_130	SWITCH_1	CALL_7
0x400f379	      0xe98afdffff	                           jmp 0x400f108	      7118	eval.c	FUNCTION_130	SWITCH_1	CALL_7
0x400f37e	            0x6690	                                     nop	      7118	eval.c	FUNCTION_130	SWITCH_1	CALL_7
0x400f380	            0x31ff	                            xor edi, edi	      7115	eval.c	FUNCTION_130	SWITCH_1	CALL_5
0x400f382	      0xba05000000	                              mov edx, 5	      7115	eval.c	FUNCTION_130	SWITCH_1	CALL_5
0x400f387	      0xbe00000000	                              mov esi, 0	      7115	eval.c	FUNCTION_130	SWITCH_1	CALL_5
0x400f38c	      0xe800000000	                          call 0x400f391	      7115	eval.c	FUNCTION_130	SWITCH_1	CALL_5
0x400f391	          0x4889c7	                            mov rdi, rax	      7115	eval.c	FUNCTION_130	SWITCH_1	CALL_5
0x400f394	      0xe800000000	                          call 0x400f399	      7115	eval.c	FUNCTION_130	SWITCH_1	CALL_5
0x400f399	      0xe96afdffff	                           jmp 0x400f108	      7115	eval.c	FUNCTION_130	SWITCH_1	CALL_5
0x400f39e	            0x6690	                                     nop	      7115	eval.c	FUNCTION_130	SWITCH_1	CALL_5
0x400f3a0	      0x488b6c2418	            mov rbp, qword [rsp + 0x18] 	      7162	eval.c	FUNCTION_130	SWITCH_1
0x400f3a5	      0xbeffffffff	                     mov esi, 0xffffffff	      7163	eval.c	FUNCTION_130	SWITCH_1	CALL_15
0x400f3aa	          0x4889ef	                            mov rdi, rbp	      7163	eval.c	FUNCTION_130	SWITCH_1	CALL_15
0x400f3ad	      0xe800000000	                          call 0x400f3b2	      7163	eval.c	FUNCTION_130	SWITCH_1	CALL_15
0x400f3b2	          0x4885ed	                           test rbp, rbp	      7165	eval.c	FUNCTION_130	SWITCH_1	IF_3
0x400f3b5	          0x4989c0	                             mov r8, rax	      7163	eval.c	FUNCTION_130	SWITCH_1	CALL_15
0x400f3b8	     0xf84da000000	                            je 0x400f498	      7165	eval.c	FUNCTION_130	SWITCH_1	IF_3
0x400f3be	          0x8b4d10	            mov ecx, dword [rbp + 0x10] 	      7168	eval.c	FUNCTION_130	SWITCH_1	ELSE_1	CALL_17
0x400f3c1	      0xbe41000000	                           mov esi, 0x41	      7168	eval.c	FUNCTION_130	SWITCH_1	ELSE_1	CALL_17
0x400f3c6	      0xba00000000	                              mov edx, 0	      7168	eval.c	FUNCTION_130	SWITCH_1	ELSE_1	CALL_17
0x400f3cb	      0xbf00000000	                              mov edi, 0	      7168	eval.c	FUNCTION_130	SWITCH_1	ELSE_1	CALL_17
0x400f3d0	            0x31c0	                            xor eax, eax	      7168	eval.c	FUNCTION_130	SWITCH_1	ELSE_1	CALL_17
0x400f3d2	      0xe800000000	                          call 0x400f3d7	      7168	eval.c	FUNCTION_130	SWITCH_1	ELSE_1	CALL_17
0x400f3d7	      0xbe00000000	                              mov esi, 0	      7168	eval.c	FUNCTION_130	SWITCH_1	ELSE_1	CALL_17
0x400f3dc	            0x8b16	                    mov edx, dword [rsi]	      7168	eval.c	FUNCTION_130	SWITCH_1	ELSE_1	CALL_17
0x400f3de	        0x4883c604	                              add rsi, 4	      7168	eval.c	FUNCTION_130	SWITCH_1	ELSE_1	CALL_17
0x400f3e2	    0x8d82fffefefe	              lea eax, [rdx - 0x1010101]	      7168	eval.c	FUNCTION_130	SWITCH_1	ELSE_1	CALL_17
0x400f3e8	            0xf7d2	                                 not edx	      7168	eval.c	FUNCTION_130	SWITCH_1	ELSE_1	CALL_17
0x400f3ea	            0x21d0	                            and eax, edx	      7168	eval.c	FUNCTION_130	SWITCH_1	ELSE_1	CALL_17
0x400f3ec	      0x2580808080	                     and eax, 0x80808080	      7168	eval.c	FUNCTION_130	SWITCH_1	ELSE_1	CALL_17
0x400f3f1	            0x74e9	                            je 0x400f3dc	      7168	eval.c	FUNCTION_130	SWITCH_1	ELSE_1	CALL_17
0x400f3f3	      0xe9fefbffff	                           jmp 0x400eff6	      7168	eval.c	FUNCTION_130	SWITCH_1	ELSE_1	CALL_17
0x400f3f8	     0xf1f84000000	                   nop dword [rax + rax]	      7168	eval.c	FUNCTION_130	SWITCH_1	ELSE_1	CALL_17
0x400f400	    0x48837c243000	               cmp qword [rsp + 0x30], 0	      8174	eval.c	FUNCTION_154	IF_7
0x400f406	     0xf843cfcffff	                            je 0x400f048	      8174	eval.c	FUNCTION_154	IF_7
0x400f40c	          0x8b4320	            mov eax, dword [rbx + 0x20] 	      8176	eval.c	FUNCTION_154	IF_7	IF_8
0x400f40f	            0x89c2	                            mov edx, eax	      8176	eval.c	FUNCTION_154	IF_7	IF_8
0x400f411	          0x83e2fd	                     and edx, 0xfffffffd	      8176	eval.c	FUNCTION_154	IF_7	IF_8
0x400f414	          0x83c280	             add edx, 0xffffffffffffff80	      8176	eval.c	FUNCTION_154	IF_7	IF_8
0x400f417	     0xf84cd000000	                            je 0x400f4ea	      8176	eval.c	FUNCTION_154	IF_7	IF_8
0x400f41d	      0x3d82000000	                           cmp eax, 0x82	      8184	eval.c	FUNCTION_154	IF_7	IF_9
0x400f422	     0xf84cf000000	                            je 0x400f4f7	      8184	eval.c	FUNCTION_154	IF_7	IF_9
0x400f428	      0x3d80000000	                           cmp eax, 0x80	      8189	eval.c	FUNCTION_154	IF_7	ELSE_1	IF_10
0x400f42d	     0xf84f3000000	                            je 0x400f526	      8189	eval.c	FUNCTION_154	IF_7	ELSE_1	IF_10
0x400f433	      0x3d8e000000	                           cmp eax, 0x8e	      8197	eval.c	FUNCTION_154	IF_7	ELSE_2	IF_12
0x400f438	     0xf850afcffff	                           jne 0x400f048	      8197	eval.c	FUNCTION_154	IF_7	ELSE_2	IF_12
0x400f43e	    0x488b93a00000	            mov rdx, qword [rbx + 0xa0] 	      8198	eval.c	FUNCTION_154	IF_7	ELSE_2	IF_12	CALL_17
0x400f445	    0x488bb3980000	            mov rsi, qword [rbx + 0x98] 	      8198	eval.c	FUNCTION_154	IF_7	ELSE_2	IF_12	CALL_17
0x400f44c	      0xb903000000	                              mov ecx, 3	      8198	eval.c	FUNCTION_154	IF_7	ELSE_2	IF_12	CALL_17
0x400f451	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      8198	eval.c	FUNCTION_154	IF_7	ELSE_2	IF_12	CALL_17
0x400f456	      0xe800000000	                          call 0x400f45b	      8198	eval.c	FUNCTION_154	IF_7	ELSE_2	IF_12	CALL_17
0x400f45b	      0xe9e8fbffff	                           jmp 0x400f048	      8198	eval.c	FUNCTION_154	IF_7	ELSE_2	IF_12	CALL_17
0x400f460	      0xe800000000	                          call 0x400f465	      8148	eval.c	FUNCTION_154	WHILE_1	IF_2	IF_3	CALL_3
0x400f465	            0x85c0	                           test eax, eax	      8148	eval.c	FUNCTION_154	WHILE_1	IF_2	IF_3	CALL_3
0x400f467	     0xf85dbfbffff	                           jne 0x400f048	      8148	eval.c	FUNCTION_154	WHILE_1	IF_2	IF_3	CALL_3
0x400f46d	            0x31ff	                            xor edi, edi	      8149	eval.c	FUNCTION_154	WHILE_1	IF_2	CALL_5
0x400f46f	      0xba05000000	                              mov edx, 5	      8149	eval.c	FUNCTION_154	WHILE_1	IF_2	CALL_5
0x400f474	      0xbe00000000	                              mov esi, 0	      8149	eval.c	FUNCTION_154	WHILE_1	IF_2	CALL_5
0x400f479	      0xe800000000	                          call 0x400f47e	      8149	eval.c	FUNCTION_154	WHILE_1	IF_2	CALL_5
0x400f47e	          0x4889ee	                            mov rsi, rbp	      8149	eval.c	FUNCTION_154	WHILE_1	IF_2	CALL_5
0x400f481	          0x4889c7	                            mov rdi, rax	      8149	eval.c	FUNCTION_154	WHILE_1	IF_2	CALL_5
0x400f484	      0xe800000000	                          call 0x400f489	      8149	eval.c	FUNCTION_154	WHILE_1	IF_2	CALL_5
0x400f489	      0xe9bafbffff	                           jmp 0x400f048	      8149	eval.c	FUNCTION_154	WHILE_1	IF_2	CALL_5
0x400f48e	      0xbe00000000	                              mov esi, 0	      5520	eval.c	FUNCTION_86	SWITCH_1
0x400f493	      0xe92ffcffff	                           jmp 0x400f0c7	      5520	eval.c	FUNCTION_86	SWITCH_1
0x400f498	          0x4889c1	                            mov rcx, rax	      7166	eval.c	FUNCTION_130	SWITCH_1	CALL_16
0x400f49b	      0xbe41000000	                           mov esi, 0x41	      7166	eval.c	FUNCTION_130	SWITCH_1	CALL_16
0x400f4a0	      0xba00000000	                              mov edx, 0	      7166	eval.c	FUNCTION_130	SWITCH_1	CALL_16
0x400f4a5	      0xbf00000000	                              mov edi, 0	      7166	eval.c	FUNCTION_130	SWITCH_1	CALL_16
0x400f4aa	            0x31c0	                            xor eax, eax	      7166	eval.c	FUNCTION_130	SWITCH_1	CALL_16
0x400f4ac	      0xe800000000	                          call 0x400f4b1	      7166	eval.c	FUNCTION_130	SWITCH_1	CALL_16
0x400f4b1	      0xbe00000000	                              mov esi, 0	      7166	eval.c	FUNCTION_130	SWITCH_1	CALL_16
0x400f4b6	            0x8b16	                    mov edx, dword [rsi]	      7166	eval.c	FUNCTION_130	SWITCH_1	CALL_16
0x400f4b8	        0x4883c604	                              add rsi, 4	      7166	eval.c	FUNCTION_130	SWITCH_1	CALL_16
0x400f4bc	    0x8d82fffefefe	              lea eax, [rdx - 0x1010101]	      7166	eval.c	FUNCTION_130	SWITCH_1	CALL_16
0x400f4c2	            0xf7d2	                                 not edx	      7166	eval.c	FUNCTION_130	SWITCH_1	CALL_16
0x400f4c4	            0x21d0	                            and eax, edx	      7166	eval.c	FUNCTION_130	SWITCH_1	CALL_16
0x400f4c6	      0x2580808080	                     and eax, 0x80808080	      7166	eval.c	FUNCTION_130	SWITCH_1	CALL_16
0x400f4cb	            0x74e9	                            je 0x400f4b6	      7166	eval.c	FUNCTION_130	SWITCH_1	CALL_16
0x400f4cd	      0xe924fbffff	                           jmp 0x400eff6	      7166	eval.c	FUNCTION_130	SWITCH_1	CALL_16
0x400f4d2	    0x660f1f440000	                    nop word [rax + rax]	      7166	eval.c	FUNCTION_130	SWITCH_1	CALL_16
0x400f4d8	            0x85c0	                           test eax, eax	      5517	eval.c	FUNCTION_86	SWITCH_1
0x400f4da	      0xbe00000000	                              mov esi, 0	      5519	eval.c	FUNCTION_86	SWITCH_1
0x400f4df	     0xf84e2fbffff	                            je 0x400f0c7	      5517	eval.c	FUNCTION_86	SWITCH_1
0x400f4e5	      0xe9cefbffff	                           jmp 0x400f0b8	      5517	eval.c	FUNCTION_86	SWITCH_1
0x400f4ea	      0xe800000000	                          call 0x400f4ef	      8181	eval.c	FUNCTION_154	IF_7	IF_8	CALL_13
0x400f4ef	          0x8b4320	            mov eax, dword [rbx + 0x20] 	      8181	eval.c	FUNCTION_154	IF_7	IF_8	CALL_13
0x400f4f2	      0xe926ffffff	                           jmp 0x400f41d	      8181	eval.c	FUNCTION_154	IF_7	IF_8	CALL_13
0x400f4f7	    0x8b3500000000	            mov esi, dword [0x0400f4fd] 	      8186	eval.c	FUNCTION_154	IF_7	IF_9	CALL_14
0x400f4fd	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      8186	eval.c	FUNCTION_154	IF_7	IF_9	CALL_14
0x400f502	      0xe800000000	                          call 0x400f507	      8186	eval.c	FUNCTION_154	IF_7	IF_9	CALL_14
0x400f507	      0xe800000000	                          call 0x400f50c	      8187	eval.c	FUNCTION_154	IF_7	IF_9	CALL_15
0x400f50c	      0xe937fbffff	                           jmp 0x400f048	      8187	eval.c	FUNCTION_154	IF_7	IF_9	CALL_15
0x400f511	      0xbe0c000000	                            mov esi, 0xc	      7138	eval.c	FUNCTION_130	SWITCH_1	IF_2
0x400f516	    0x41bd0a000000	                           mov r13d, 0xa	      7138	eval.c	FUNCTION_130	SWITCH_1	IF_2
0x400f51c	      0xbd00000000	                              mov ebp, 0	      7139	eval.c	FUNCTION_130	SWITCH_1	IF_2
0x400f521	      0xe9ecfbffff	                           jmp 0x400f112	      7139	eval.c	FUNCTION_130	SWITCH_1	IF_2
0x400f526	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      8193	eval.c	FUNCTION_154	IF_7	ELSE_1	IF_10	CALL_16
0x400f52b	    0x8b2d00000000	            mov ebp, dword [0x0400f531] 	      8192	eval.c	FUNCTION_154	IF_7	ELSE_1	IF_10
0x400f531	      0xe800000000	                          call 0x400f536	      8193	eval.c	FUNCTION_154	IF_7	ELSE_1	IF_10	CALL_16
0x400f536	    0x8b1500000000	            mov edx, dword [0x0400f53c] 	      8194	eval.c	FUNCTION_154	IF_7	ELSE_1	IF_10	IF_11
0x400f53c	            0x85d2	                           test edx, edx	      8194	eval.c	FUNCTION_154	IF_7	ELSE_1	IF_10	IF_11
0x400f53e	     0xf8504fbffff	                           jne 0x400f048	      8194	eval.c	FUNCTION_154	IF_7	ELSE_1	IF_10	IF_11
0x400f544	    0x892d00000000	            mov dword [0x0400f54a], ebp 	      8195	eval.c	FUNCTION_154	IF_7	ELSE_1	IF_10	IF_11
0x400f54a	      0xe9f9faffff	                           jmp 0x400f048	      8195	eval.c	FUNCTION_154	IF_7	ELSE_1	IF_10	IF_11
0x400f54f	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	      4882	eval.c	FUNCTION_76	CALL_6
0x400f553	      0xe800000000	                          call 0x400f558	      4882	eval.c	FUNCTION_76	CALL_6
0x400f558	      0xe90afdffff	                           jmp 0x400f267	      4882	eval.c	FUNCTION_76	CALL_6
0x400f55d	      0xe800000000	                          call 0x400f562	      8208	eval.c	FUNCTION_154
eval_expr_to_bool	functions,0:SWITCH,0:IF,1:DO,0:ELSE,0:WHILE,0:CALL,3:FOR,0	113
0x4011d20	            0x4155	                                push r13	       745	eval.c	FUNCTION_15
0x4011d22	            0x4154	                                push r12	       745	eval.c	FUNCTION_15
0x4011d24	              0x55	                                push rbp	       745	eval.c	FUNCTION_15
0x4011d25	              0x53	                                push rbx	       745	eval.c	FUNCTION_15
0x4011d26	          0x4889f3	                            mov rbx, rsi	       745	eval.c	FUNCTION_15
0x4011d29	        0x4883ec78	                           sub rsp, 0x78	       745	eval.c	FUNCTION_15
0x4011d2d	    0x64488b042528	                mov rax, qword fs:[0x28]	       745	eval.c	FUNCTION_15
0x4011d36	      0x4889442468	             mov qword [rsp + 0x68], rax	       745	eval.c	FUNCTION_15
0x4011d3b	            0x31c0	                            xor eax, eax	       745	eval.c	FUNCTION_15
0x4011d3d	            0x8b07	                    mov eax, dword [rdi]	       702	eval.c	FUNCTION_14	IF_1
0x4011d3f	          0x83f803	                              cmp eax, 3	       702	eval.c	FUNCTION_14	IF_1
0x4011d42	     0xf84c0000000	                            je 0x4011e08	       702	eval.c	FUNCTION_14	IF_1
0x4011d48	          0x83f804	                              cmp eax, 4	       711	eval.c	FUNCTION_14	ELSE_1	IF_4
0x4011d4b	            0x7473	                            je 0x4011dc0	       711	eval.c	FUNCTION_14	ELSE_1	IF_4
0x4011d4d	      0x488d742420	                   lea rsi, [rsp + 0x20]	       724	eval.c	FUNCTION_14	ELSE_2	CALL_6
0x4011d52	      0xe800000000	                          call 0x4011d57	       724	eval.c	FUNCTION_14	ELSE_2	CALL_6
0x4011d57	          0x4885c0	                           test rax, rax	       725	eval.c	FUNCTION_14	ELSE_2	IF_7
0x4011d5a	      0x4889442408	                mov qword [rsp + 8], rax	       724	eval.c	FUNCTION_14	ELSE_2	CALL_6
0x4011d5f	            0x747b	                            je 0x4011ddc	       725	eval.c	FUNCTION_14	ELSE_2	IF_7
0x4011d61	          0x4889c7	                            mov rdi, rax	       727	eval.c	FUNCTION_14	ELSE_2	CALL_7
0x4011d64	      0x4c8d642410	                   lea r12, [rsp + 0x10]	       728	eval.c	FUNCTION_14	ELSE_2	IF_8	CALL_8
0x4011d69	      0xe800000000	                          call 0x4011d6e	       727	eval.c	FUNCTION_14	ELSE_2	CALL_7
0x4011d6e	      0x488d7c2408	                      lea rdi, [rsp + 8]	       728	eval.c	FUNCTION_14	ELSE_2	IF_8	CALL_8
0x4011d73	      0xba01000000	                              mov edx, 1	       728	eval.c	FUNCTION_14	ELSE_2	IF_8	CALL_8
0x4011d78	          0x4c89e6	                            mov rsi, r12	       728	eval.c	FUNCTION_14	ELSE_2	IF_8	CALL_8
0x4011d7b	      0x4889442408	                mov qword [rsp + 8], rax	       727	eval.c	FUNCTION_14	ELSE_2	CALL_7
0x4011d80	      0xe800000000	                          call 0x4011d85	       728	eval.c	FUNCTION_14	ELSE_2	IF_8	CALL_8
0x4011d85	            0x85c0	                           test eax, eax	       728	eval.c	FUNCTION_14	ELSE_2	IF_8	CALL_8
0x4011d87	            0x7453	                            je 0x4011ddc	       728	eval.c	FUNCTION_14	ELSE_2	IF_8	CALL_8
0x4011d89	      0x488b6c2408	                mov rbp, qword [rsp + 8]	       730	eval.c	FUNCTION_14	ELSE_2	IF_9
0x4011d8e	        0x807d0000	                       cmp byte [rbp], 0	       730	eval.c	FUNCTION_14	ELSE_2	IF_9
0x4011d92	     0xf8508010000	                           jne 0x4011ea0	       730	eval.c	FUNCTION_14	ELSE_2	IF_9
0x4011d98	          0x4889de	                            mov rsi, rbx	       754	eval.c	FUNCTION_15	CALL_2
0x4011d9b	          0x4c89e7	                            mov rdi, r12	       754	eval.c	FUNCTION_15	CALL_2
0x4011d9e	            0x31db	                            xor ebx, ebx	       754	eval.c	FUNCTION_15	CALL_2
0x4011da0	      0xe800000000	                          call 0x4011da5	       754	eval.c	FUNCTION_15	CALL_2
0x4011da5	          0x4885c0	                           test rax, rax	       754	eval.c	FUNCTION_15	CALL_2
0x4011da8	          0x4c89e7	                            mov rdi, r12	       755	eval.c	FUNCTION_15	CALL_3
0x4011dab	           0xf95c3	                                setne bl	       754	eval.c	FUNCTION_15	CALL_2
0x4011dae	      0xe800000000	                          call 0x4011db3	       755	eval.c	FUNCTION_15	CALL_3
0x4011db3	            0x89d8	                            mov eax, ebx	       756	eval.c	FUNCTION_15
0x4011db5	            0xeb2d	                           jmp 0x4011de4	       756	eval.c	FUNCTION_15
0x4011db7	    0x660f1f840000	                    nop word [rax + rax]	       756	eval.c	FUNCTION_15
0x4011dc0	        0x4c8b6f08	                mov r13, qword [rdi + 8]	       713	eval.c	FUNCTION_14	ELSE_1	IF_4
0x4011dc4	        0x498b6d08	                mov rbp, qword [r13 + 8]	      4862	eval.c	FUNCTION_75	IF_1
0x4011dc8	          0x4885ed	                           test rbp, rbp	      4862	eval.c	FUNCTION_75	IF_1
0x4011dcb	     0xf84a7000000	                            je 0x4011e78	      4862	eval.c	FUNCTION_75	IF_1
0x4011dd1	      0x48896c2408	                mov qword [rsp + 8], rbp	       715	eval.c	FUNCTION_14	ELSE_1	IF_4	CALL_3
0x4011dd6	        0x807d0000	                       cmp byte [rbp], 0	       716	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_5
0x4011dda	            0x7554	                           jne 0x4011e30	       716	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_5
0x4011ddc	    0xc70301000000	                      mov dword [rbx], 1	       751	eval.c	FUNCTION_15	IF_1
0x4011de2	            0x31c0	                            xor eax, eax	       752	eval.c	FUNCTION_15	IF_1
0x4011de4	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	       757	eval.c	FUNCTION_15
0x4011de9	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       757	eval.c	FUNCTION_15
0x4011df2	     0xf85c9000000	                           jne 0x4011ec1	       757	eval.c	FUNCTION_15
0x4011df8	        0x4883c478	                           add rsp, 0x78	       757	eval.c	FUNCTION_15
0x4011dfc	              0x5b	                                 pop rbx	       757	eval.c	FUNCTION_15
0x4011dfd	              0x5d	                                 pop rbp	       757	eval.c	FUNCTION_15
0x4011dfe	            0x415c	                                 pop r12	       757	eval.c	FUNCTION_15
0x4011e00	            0x415d	                                 pop r13	       757	eval.c	FUNCTION_15
0x4011e02	              0xc3	                                     ret	       757	eval.c	FUNCTION_15
0x4011e03	       0xf1f440000	                   nop dword [rax + rax]	       757	eval.c	FUNCTION_15
0x4011e08	        0x488b6f08	                mov rbp, qword [rdi + 8]	       704	eval.c	FUNCTION_14	IF_1
0x4011e0c	          0x4885ed	                           test rbp, rbp	       705	eval.c	FUNCTION_14	IF_1	IF_2
0x4011e0f	      0x48896c2408	                mov qword [rsp + 8], rbp	       704	eval.c	FUNCTION_14	IF_1
0x4011e14	            0x74c6	                            je 0x4011ddc	       705	eval.c	FUNCTION_14	IF_1	IF_2
0x4011e16	        0x807d0000	                       cmp byte [rbp], 0	       705	eval.c	FUNCTION_14	IF_1	IF_2
0x4011e1a	            0x74c0	                            je 0x4011ddc	       705	eval.c	FUNCTION_14	IF_1	IF_2
0x4011e1c	          0x4889ef	                            mov rdi, rbp	       707	eval.c	FUNCTION_14	IF_1	IF_3	CALL_2
0x4011e1f	      0x4c8d642410	                   lea r12, [rsp + 0x10]	       707	eval.c	FUNCTION_14	IF_1	IF_3	CALL_2
0x4011e24	      0xe800000000	                          call 0x4011e29	       707	eval.c	FUNCTION_14	IF_1	IF_3	CALL_2
0x4011e29	            0x6a00	                                  push 0	       707	eval.c	FUNCTION_14	IF_1	IF_3	CALL_2
0x4011e2b	            0x6a00	                                  push 0	       707	eval.c	FUNCTION_14	IF_1	IF_3	CALL_2
0x4011e2d	            0xeb12	                           jmp 0x4011e41	       707	eval.c	FUNCTION_14	IF_1	IF_3	CALL_2
0x4011e2f	              0x90	                                     nop	       707	eval.c	FUNCTION_14	IF_1	IF_3	CALL_2
0x4011e30	          0x4889ef	                            mov rdi, rbp	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4011e33	      0x4c8d642410	                   lea r12, [rsp + 0x10]	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4011e38	      0xe800000000	                          call 0x4011e3d	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4011e3d	            0x6a00	                                  push 0	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4011e3f	            0x4155	                                push r13	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4011e41	            0x6a01	                                  push 1	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4011e43	          0x4531c9	                            xor r9d, r9d	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4011e46	          0x4531c0	                            xor r8d, r8d	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4011e49	            0x31c9	                            xor ecx, ecx	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4011e4b	            0x89c6	                            mov esi, eax	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4011e4d	          0x4889ef	                            mov rdi, rbp	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4011e50	      0x488d54241c	                   lea rdx, [rsp + 0x1c]	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4011e55	              0x52	                                push rdx	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4011e56	            0x6a00	                                  push 0	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4011e58	          0x4c89e2	                            mov rdx, r12	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4011e5b	            0x6a00	                                  push 0	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4011e5d	      0xe800000000	                          call 0x4011e62	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4011e62	        0x4883c430	                           add rsp, 0x30	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4011e66	            0x85c0	                           test eax, eax	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4011e68	     0xf852affffff	                           jne 0x4011d98	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4011e6e	      0xe969ffffff	                           jmp 0x4011ddc	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4011e73	       0xf1f440000	                   nop dword [rax + rax]	       718	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_6	CALL_5
0x4011e78	        0x498b4510	            mov rax, qword [r13 + 0x10] 	      4864	eval.c	FUNCTION_75
0x4011e7c	    0x488da8d80000	                   lea rbp, [rax + 0xd8]	      4864	eval.c	FUNCTION_75
0x4011e83	          0x4885ed	                           test rbp, rbp	       716	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_5
0x4011e86	      0x48896c2408	                mov qword [rsp + 8], rbp	       715	eval.c	FUNCTION_14	ELSE_1	IF_4	CALL_3
0x4011e8b	     0xf844bffffff	                            je 0x4011ddc	       716	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_5
0x4011e91	      0xe940ffffff	                           jmp 0x4011dd6	       716	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_5
0x4011e96	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       716	eval.c	FUNCTION_14	ELSE_1	IF_4	IF_5
0x4011ea0	            0x31ff	                            xor edi, edi	       732	eval.c	FUNCTION_14	ELSE_2	IF_9	CALL_10
0x4011ea2	      0xba05000000	                              mov edx, 5	       732	eval.c	FUNCTION_14	ELSE_2	IF_9	CALL_10
0x4011ea7	      0xbe00000000	                              mov esi, 0	       732	eval.c	FUNCTION_14	ELSE_2	IF_9	CALL_10
0x4011eac	      0xe800000000	                          call 0x4011eb1	       732	eval.c	FUNCTION_14	ELSE_2	IF_9	CALL_10
0x4011eb1	          0x4889ee	                            mov rsi, rbp	       732	eval.c	FUNCTION_14	ELSE_2	IF_9	CALL_10
0x4011eb4	          0x4889c7	                            mov rdi, rax	       732	eval.c	FUNCTION_14	ELSE_2	IF_9	CALL_10
0x4011eb7	      0xe800000000	                          call 0x4011ebc	       732	eval.c	FUNCTION_14	ELSE_2	IF_9	CALL_10
0x4011ebc	      0xe91bffffff	                           jmp 0x4011ddc	       732	eval.c	FUNCTION_14	ELSE_2	IF_9	CALL_10
0x4011ec1	      0xe800000000	                          call 0x4011ec6	       757	eval.c	FUNCTION_15
eval_init	functions,0:SWITCH,0:IF,5:DO,0:ELSE,2:WHILE,0:CALL,34:FOR,1	158
0x4003740	            0x4154	                                push r12	       286	eval.c	FUNCTION_3
0x4003742	              0x55	                                push rbp	       286	eval.c	FUNCTION_3
0x4003743	      0xbf00000000	                              mov edi, 0	      7373	eval.c	FUNCTION_136	CALL_1
0x4003748	              0x53	                                push rbx	       286	eval.c	FUNCTION_3
0x4003749	    0x41bc00000000	                             mov r12d, 0	       286	eval.c	FUNCTION_3
0x400374f	      0xbb00000000	                              mov ebx, 0	       286	eval.c	FUNCTION_3
0x4003754	        0x4883ec10	                           sub rsp, 0x10	       286	eval.c	FUNCTION_3
0x4003758	    0x64488b042528	                mov rax, qword fs:[0x28]	       286	eval.c	FUNCTION_3
0x4003761	      0x4889442408	                mov qword [rsp + 8], rax	       286	eval.c	FUNCTION_3
0x4003766	            0x31c0	                            xor eax, eax	       286	eval.c	FUNCTION_3
0x4003768	      0xe800000000	                          call 0x400376d	      7373	eval.c	FUNCTION_136	CALL_1
0x400376d	      0xbf00000000	                              mov edi, 0	      7373	eval.c	FUNCTION_136	CALL_1
0x4003772	    0xc60500000000	                mov byte [0x04003779], 0	      7374	eval.c	FUNCTION_136
0x4003779	    0xc60500000000	                mov byte [0x04003780], 2	      7375	eval.c	FUNCTION_136
0x4003780	    0xc70500000000	        mov dword [0x0400378a], 0x1869f 	      7376	eval.c	FUNCTION_136
0x400378a	    0xc70500000000	               mov dword [0x04003794], 0	      7377	eval.c	FUNCTION_136
0x4003794	    0x48c705000000	               mov qword [0x0400379f], 0	      7378	eval.c	FUNCTION_136
0x400379f	    0xc70500000000	               mov dword [0x040037a9], 6	      7379	eval.c	FUNCTION_136
0x40037a9	    0xc60500000000	                mov byte [0x040037b0], 2	      7380	eval.c	FUNCTION_136
0x40037b0	    0xc60500000000	                mov byte [0x040037b7], 5	      7381	eval.c	FUNCTION_136
0x40037b7	    0xc60500000000	                mov byte [0x040037be], 0	      7382	eval.c	FUNCTION_136
0x40037be	      0xe800000000	                          call 0x40037c3	      7373	eval.c	FUNCTION_136	CALL_1
0x40037c3	      0xbf00000000	                              mov edi, 0	       293	eval.c	FUNCTION_3	CALL_3
0x40037c8	    0xc60500000000	                mov byte [0x040037cf], 1	      7375	eval.c	FUNCTION_136
0x40037cf	    0xc70500000000	        mov dword [0x040037d9], 0x1869f 	      7376	eval.c	FUNCTION_136
0x40037d9	    0xc70500000000	               mov dword [0x040037e3], 0	      7377	eval.c	FUNCTION_136
0x40037e3	    0x48c705000000	               mov qword [0x040037ee], 0	      7378	eval.c	FUNCTION_136
0x40037ee	    0xc70500000000	               mov dword [0x040037f8], 6	      7379	eval.c	FUNCTION_136
0x40037f8	    0xc60500000000	                mov byte [0x040037ff], 2	      7380	eval.c	FUNCTION_136
0x40037ff	    0xc60500000000	                mov byte [0x04003806], 5	      7381	eval.c	FUNCTION_136
0x4003806	    0xc60500000000	                mov byte [0x0400380d], 0	      7382	eval.c	FUNCTION_136
0x400380d	    0xc60500000000	                mov byte [0x04003814], 2	       292	eval.c	FUNCTION_3
0x4003814	      0xe800000000	                          call 0x4003819	       293	eval.c	FUNCTION_3	CALL_3
0x4003819	      0xe800000000	                          call 0x400381e	       294	eval.c	FUNCTION_3	CALL_4
0x400381e	      0xe91d000000	                           jmp 0x4003840	       294	eval.c	FUNCTION_3	CALL_4
0x4003823	       0xf1f440000	                   nop dword [rax + rax]	       294	eval.c	FUNCTION_3	CALL_4
0x4003828	          0x8b53ef	             mov edx, dword [rbx - 0x11]	       313	eval.c	FUNCTION_3	FOR_1	IF_4
0x400382b	        0xc643ff05	                   mov byte [rbx - 1], 5	       306	eval.c	FUNCTION_3	FOR_1	IF_2
0x400382f	            0x85d2	                           test edx, edx	       313	eval.c	FUNCTION_3	FOR_1	IF_4
0x4003831	            0x7555	                           jne 0x4003888	       313	eval.c	FUNCTION_3	FOR_1	IF_4
0x4003833	            0xa801	                              test al, 1	       315	eval.c	FUNCTION_3	FOR_1	IF_5
0x4003835	            0x7566	                           jne 0x400389d	       315	eval.c	FUNCTION_3	FOR_1	IF_5
0x4003837	        0x4883c338	                           add rbx, 0x38	       315	eval.c	FUNCTION_3	FOR_1	IF_5
0x400383b	          0x4939dc	                            cmp r12, rbx	       296	eval.c	FUNCTION_3	FOR_1
0x400383e	            0x7473	                            je 0x40038b3	       296	eval.c	FUNCTION_3	FOR_1
0x4003840	        0x488b6be7	             mov rbp, qword [rbx - 0x19]	       299	eval.c	FUNCTION_3	FOR_1	IF_1	CALL_5
0x4003844	          0x4889ef	                            mov rdi, rbp	       299	eval.c	FUNCTION_3	FOR_1	IF_1	CALL_5
0x4003847	      0xe800000000	                          call 0x400384c	       299	eval.c	FUNCTION_3	FOR_1	IF_1	CALL_5
0x400384c	        0x4883f810	                           cmp rax, 0x10	       299	eval.c	FUNCTION_3	FOR_1	IF_1	CALL_5
0x4003850	     0xf8712020000	                            ja 0x4003a68	       299	eval.c	FUNCTION_3	FOR_1	IF_1	CALL_5
0x4003856	      0xba11000000	                           mov edx, 0x11	       110	string3.h	FUNCTION_197	CALL_3
0x400385b	          0x4889ee	                            mov rsi, rbp	       110	string3.h	FUNCTION_197	CALL_3
0x400385e	          0x4889df	                            mov rdi, rbx	       110	string3.h	FUNCTION_197	CALL_3
0x4003861	      0xe800000000	                          call 0x4003866	       110	string3.h	FUNCTION_197	CALL_3
0x4003866	         0xfb64317	           movzx eax, byte [rbx + 0x17] 	       305	eval.c	FUNCTION_3	FOR_1	IF_2
0x400386a	            0xa802	                              test al, 2	       305	eval.c	FUNCTION_3	FOR_1	IF_2
0x400386c	            0x75ba	                           jne 0x4003828	       305	eval.c	FUNCTION_3	FOR_1	IF_2
0x400386e	            0x89c2	                            mov edx, eax	       307	eval.c	FUNCTION_3	FOR_1	ELSE_1	IF_3
0x4003870	          0x83e204	                              and edx, 4	       307	eval.c	FUNCTION_3	FOR_1	ELSE_1	IF_3
0x4003873	          0x80fa01	                               cmp dl, 1	       308	eval.c	FUNCTION_3	FOR_1	ELSE_1	IF_3
0x4003876	            0x19d2	                            sbb edx, edx	       308	eval.c	FUNCTION_3	FOR_1	ELSE_1	IF_3
0x4003878	          0x83e2fe	                     and edx, 0xfffffffe	       308	eval.c	FUNCTION_3	FOR_1	ELSE_1	IF_3
0x400387b	          0x83c206	                              add edx, 6	       308	eval.c	FUNCTION_3	FOR_1	ELSE_1	IF_3
0x400387e	          0x8853ff	                  mov byte [rbx - 1], dl	       308	eval.c	FUNCTION_3	FOR_1	ELSE_1	IF_3
0x4003881	          0x8b53ef	             mov edx, dword [rbx - 0x11]	       313	eval.c	FUNCTION_3	FOR_1	IF_4
0x4003884	            0x85d2	                           test edx, edx	       313	eval.c	FUNCTION_3	FOR_1	IF_4
0x4003886	            0x74ab	                            je 0x4003833	       313	eval.c	FUNCTION_3	FOR_1	IF_4
0x4003888	          0x4889de	                            mov rsi, rbx	       314	eval.c	FUNCTION_3	FOR_1	CALL_9
0x400388b	      0xbf00000000	                              mov edi, 0	       314	eval.c	FUNCTION_3	FOR_1	CALL_9
0x4003890	      0xe800000000	                          call 0x4003895	       314	eval.c	FUNCTION_3	FOR_1	CALL_9
0x4003895	         0xfb64317	           movzx eax, byte [rbx + 0x17] 	       314	eval.c	FUNCTION_3	FOR_1	CALL_9
0x4003899	            0xa801	                              test al, 1	       315	eval.c	FUNCTION_3	FOR_1	IF_5
0x400389b	            0x749a	                            je 0x4003837	       315	eval.c	FUNCTION_3	FOR_1	IF_5
0x400389d	          0x4889de	                            mov rsi, rbx	       317	eval.c	FUNCTION_3	FOR_1	CALL_10
0x40038a0	      0xbf00000000	                              mov edi, 0	       317	eval.c	FUNCTION_3	FOR_1	CALL_10
0x40038a5	        0x4883c338	                           add rbx, 0x38	       317	eval.c	FUNCTION_3	FOR_1	CALL_10
0x40038a9	      0xe800000000	                          call 0x40038ae	       317	eval.c	FUNCTION_3	FOR_1	CALL_10
0x40038ae	          0x4939dc	                            cmp r12, rbx	       296	eval.c	FUNCTION_3	FOR_1
0x40038b1	            0x758d	                           jne 0x4003840	       296	eval.c	FUNCTION_3	FOR_1
0x40038b3	      0xbf02000000	                              mov edi, 2	       323	eval.c	FUNCTION_3	CALL_14
0x40038b8	    0x48c705000000	          mov qword [0x040038c3], 0x320 	       319	eval.c	FUNCTION_3
0x40038c3	    0x48c705000000	               mov qword [0x040038ce], 1	      6385	eval.c	FUNCTION_102
0x40038ce	    0x48c705000000	               mov qword [0x040038d9], 1	      6385	eval.c	FUNCTION_102
0x40038d9	      0xe800000000	                          call 0x40038de	       323	eval.c	FUNCTION_3	CALL_14
0x40038de	      0xbf00000000	                              mov edi, 0	      6502	eval.c	FUNCTION_111	CALL_1
0x40038e3	          0x4889c3	                            mov rbx, rax	       323	eval.c	FUNCTION_3	CALL_14
0x40038e6	      0xe800000000	                          call 0x40038eb	      6502	eval.c	FUNCTION_111	CALL_1
0x40038eb	          0x4885db	                           test rbx, rbx	      6505	eval.c	FUNCTION_111	IF_1
0x40038ee	    0xc70500000000	               mov dword [0x040038f8], 6	      6503	eval.c	FUNCTION_111
0x40038f8	    0x48891d000000	            mov qword [0x040038ff], rbx 	      6504	eval.c	FUNCTION_111
0x40038ff	            0x740c	                            je 0x400390d	      6505	eval.c	FUNCTION_111	IF_1
0x4003901	        0x83430401	                  add dword [rbx + 4], 1	      6507	eval.c	FUNCTION_111	IF_1
0x4003905	          0x4889df	                            mov rdi, rbx	      6508	eval.c	FUNCTION_111	IF_1	CALL_2
0x4003908	      0xe800000000	                          call 0x400390d	      6508	eval.c	FUNCTION_111	IF_1	CALL_2
0x400390d	      0xe800000000	                          call 0x4003912	       324	eval.c	FUNCTION_3	CALL_16
0x4003912	      0xbf00000000	                              mov edi, 0	      6489	eval.c	FUNCTION_110	CALL_1
0x4003917	          0x4889c3	                            mov rbx, rax	       324	eval.c	FUNCTION_3	CALL_16
0x400391a	      0xe800000000	                          call 0x400391f	      6489	eval.c	FUNCTION_110	CALL_1
0x400391f	          0x4885db	                           test rbx, rbx	      6492	eval.c	FUNCTION_110	IF_1
0x4003922	    0xc70500000000	               mov dword [0x0400392c], 5	      6490	eval.c	FUNCTION_110
0x400392c	    0x48891d000000	            mov qword [0x04003933], rbx 	      6491	eval.c	FUNCTION_110
0x4003933	            0x7404	                            je 0x4003939	      6492	eval.c	FUNCTION_110	IF_1
0x4003935	        0x83433801	               add dword [rbx + 0x38], 1	      6493	eval.c	FUNCTION_110	IF_1
0x4003939	      0xbf02000000	                              mov edi, 2	       325	eval.c	FUNCTION_3	CALL_18
0x400393e	      0xe800000000	                          call 0x4003943	       325	eval.c	FUNCTION_3	CALL_18
0x4003943	      0xbf00000000	                              mov edi, 0	      6502	eval.c	FUNCTION_111	CALL_1
0x4003948	          0x4889c3	                            mov rbx, rax	       325	eval.c	FUNCTION_3	CALL_18
0x400394b	      0xe800000000	                          call 0x4003950	      6502	eval.c	FUNCTION_111	CALL_1
0x4003950	          0x4885db	                           test rbx, rbx	      6505	eval.c	FUNCTION_111	IF_1
0x4003953	    0xc70500000000	               mov dword [0x0400395d], 6	      6503	eval.c	FUNCTION_111
0x400395d	    0x48891d000000	            mov qword [0x04003964], rbx 	      6504	eval.c	FUNCTION_111
0x4003964	            0x740c	                            je 0x4003972	      6505	eval.c	FUNCTION_111	IF_1
0x4003966	        0x83430401	                  add dword [rbx + 4], 1	      6507	eval.c	FUNCTION_111	IF_1
0x400396a	          0x4889df	                            mov rdi, rbx	      6508	eval.c	FUNCTION_111	IF_1	CALL_2
0x400396d	      0xe800000000	                          call 0x4003972	      6508	eval.c	FUNCTION_111	IF_1	CALL_2
0x4003972	    0x488b05000000	            mov rax, qword [0x04003979] 	      6525	eval.c	FUNCTION_112	IF_2
0x4003979	    0x48c705000000	               mov qword [0x04003984], 0	      6385	eval.c	FUNCTION_102
0x4003984	    0x48c705000000	               mov qword [0x0400398f], 1	      6385	eval.c	FUNCTION_102
0x400398f	    0x48c705000000	               mov qword [0x0400399a], 2	      6385	eval.c	FUNCTION_102
0x400399a	    0x48c705000000	               mov qword [0x040039a5], 3	      6385	eval.c	FUNCTION_102
0x40039a5	    0x48c705000000	               mov qword [0x040039b0], 0	      6385	eval.c	FUNCTION_102
0x40039b0	          0x4885c0	                           test rax, rax	      6525	eval.c	FUNCTION_112	IF_2
0x40039b3	    0x48c705000000	               mov qword [0x040039be], 1	      6385	eval.c	FUNCTION_102
0x40039be	    0x48c705000000	               mov qword [0x040039c9], 2	      6385	eval.c	FUNCTION_102
0x40039c9	    0x48c705000000	               mov qword [0x040039d4], 3	      6385	eval.c	FUNCTION_102
0x40039d4	    0x48c705000000	               mov qword [0x040039df], 4	      6385	eval.c	FUNCTION_102
0x40039df	    0x48c705000000	               mov qword [0x040039ea], 5	      6385	eval.c	FUNCTION_102
0x40039ea	    0x48c705000000	               mov qword [0x040039f5], 6	      6385	eval.c	FUNCTION_102
0x40039f5	    0x48c705000000	               mov qword [0x04003a00], 7	      6385	eval.c	FUNCTION_102
0x4003a00	    0x48c705000000	               mov qword [0x04003a0b], 8	      6385	eval.c	FUNCTION_102
0x4003a0b	    0x48c705000000	               mov qword [0x04003a16], 9	      6385	eval.c	FUNCTION_102
0x4003a16	      0xc644240722	                mov byte [rsp + 7], 0x22	      6521	eval.c	FUNCTION_112	IF_1
0x4003a1b	            0x7405	                            je 0x4003a22	      6525	eval.c	FUNCTION_112	IF_2
0x4003a1d	          0x803800	                       cmp byte [rax], 0	      6525	eval.c	FUNCTION_112	IF_2
0x4003a20	            0x742a	                            je 0x4003a4c	      6525	eval.c	FUNCTION_112	IF_2
0x4003a22	      0xbf00000000	                              mov edi, 0	      6473	eval.c	FUNCTION_109	CALL_1
0x4003a27	      0xe800000000	                          call 0x4003a2c	      6473	eval.c	FUNCTION_109	CALL_1
0x4003a2c	      0x488d7c2407	                      lea rdi, [rsp + 7]	      6480	eval.c	FUNCTION_109	CALL_3
0x4003a31	      0xbe01000000	                              mov esi, 1	      6480	eval.c	FUNCTION_109	CALL_3
0x4003a36	    0xc70500000000	               mov dword [0x04003a40], 2	      6474	eval.c	FUNCTION_109
0x4003a40	      0xe800000000	                          call 0x4003a45	      6480	eval.c	FUNCTION_109	CALL_3
0x4003a45	    0x488905000000	            mov qword [0x04003a4c], rax 	      6480	eval.c	FUNCTION_109	CALL_3
0x4003a4c	      0x488b442408	                mov rax, qword [rsp + 8]	       351	eval.c	FUNCTION_3
0x4003a51	    0x644833042528	                xor rax, qword fs:[0x28]	       351	eval.c	FUNCTION_3
0x4003a5a	            0x7529	                           jne 0x4003a85	       351	eval.c	FUNCTION_3
0x4003a5c	        0x4883c410	                           add rsp, 0x10	       351	eval.c	FUNCTION_3
0x4003a60	              0x5b	                                 pop rbx	       351	eval.c	FUNCTION_3
0x4003a61	              0x5d	                                 pop rbp	       351	eval.c	FUNCTION_3
0x4003a62	            0x415c	                                 pop r12	       351	eval.c	FUNCTION_3
0x4003a64	              0xc3	                                     ret	       351	eval.c	FUNCTION_3
0x4003a65	           0xf1f00	                         nop dword [rax]	       351	eval.c	FUNCTION_3
0x4003a68	      0xbf00000000	                              mov edi, 0	       301	eval.c	FUNCTION_3	FOR_1	IF_1	CALL_6
0x4003a6d	      0xe800000000	                          call 0x4003a72	       301	eval.c	FUNCTION_3	FOR_1	IF_1	CALL_6
0x4003a72	      0xbf01000000	                              mov edi, 1	       302	eval.c	FUNCTION_3	FOR_1	IF_1	CALL_7
0x4003a77	      0xe800000000	                          call 0x4003a7c	       302	eval.c	FUNCTION_3	FOR_1	IF_1	CALL_7
0x4003a7c	        0x488b6be7	             mov rbp, qword [rbx - 0x19]	       302	eval.c	FUNCTION_3	FOR_1	IF_1	CALL_7
0x4003a80	      0xe9d1fdffff	                           jmp 0x4003856	       302	eval.c	FUNCTION_3	FOR_1	IF_1	CALL_7
0x4003a85	      0xe800000000	                          call 0x4003a8a	       351	eval.c	FUNCTION_3
store_session_globals	functions,0:SWITCH,0:IF,9:DO,0:ELSE,2:WHILE,0:CALL,10:FOR,2	155
0x4008680	            0x4156	                                push r14	      8682	eval.c	FUNCTION_165
0x4008682	            0x4155	                                push r13	      8682	eval.c	FUNCTION_165
0x4008684	            0x4154	                                push r12	      8682	eval.c	FUNCTION_165
0x4008686	              0x55	                                push rbp	      8682	eval.c	FUNCTION_165
0x4008687	              0x53	                                push rbx	      8682	eval.c	FUNCTION_165
0x4008688	        0x4883ec10	                           sub rsp, 0x10	      8682	eval.c	FUNCTION_165
0x400868c	    0x488b05000000	            mov rax, qword [0x04008693] 	      8688	eval.c	FUNCTION_165
0x4008693	    0x4c8b25000000	            mov r12, qword [0x0400869a] 	      8689	eval.c	FUNCTION_165	FOR_1
0x400869a	            0x85c0	                           test eax, eax	      8689	eval.c	FUNCTION_165	FOR_1
0x400869c	     0xf8e46010000	                           jle 0x40087e8	      8689	eval.c	FUNCTION_165	FOR_1
0x40086a2	          0x4189c5	                           mov r13d, eax	      8689	eval.c	FUNCTION_165	FOR_1
0x40086a5	          0x4889fb	                            mov rbx, rdi	      8689	eval.c	FUNCTION_165	FOR_1
0x40086a8	      0xbd00000000	                              mov ebp, 0	      7087	eval.c	FUNCTION_128
0x40086ad	            0xeb17	                           jmp 0x40086c6	      7087	eval.c	FUNCTION_128
0x40086af	              0x90	                                     nop	      7087	eval.c	FUNCTION_128
0x40086b0	          0x83f807	                              cmp eax, 7	      8725	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7
0x40086b3	     0xf8447010000	                            je 0x4008800	      8725	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7
0x40086b9	        0x4983c410	                           add r12, 0x10	      8689	eval.c	FUNCTION_165	FOR_1
0x40086bd	          0x4585ed	                         test r13d, r13d	      8689	eval.c	FUNCTION_165	FOR_1
0x40086c0	     0xf8422010000	                            je 0x40087e8	      8689	eval.c	FUNCTION_165	FOR_1
0x40086c6	      0x498b4c2408	                mov rcx, qword [r12 + 8]	      8691	eval.c	FUNCTION_165	FOR_1	IF_1	CALL_1
0x40086cb	          0x4885c9	                           test rcx, rcx	      8691	eval.c	FUNCTION_165	FOR_1	IF_1	CALL_1
0x40086ce	     0xf84ac010000	                            je 0x4008880	      8691	eval.c	FUNCTION_165	FOR_1	IF_1	CALL_1
0x40086d4	    0x4881f9000000	                              cmp rcx, 0	      8691	eval.c	FUNCTION_165	FOR_1	IF_1	CALL_1
0x40086db	     0xf849f010000	                            je 0x4008880	      8691	eval.c	FUNCTION_165	FOR_1	IF_1	CALL_1
0x40086e1	          0x8b41ef	             mov eax, dword [rcx - 0x11]	      8695	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2
0x40086e4	        0x4183ed01	                             sub r13d, 1	      8693	eval.c	FUNCTION_165	FOR_1	IF_1
0x40086e8	          0x8d50ff	                      lea edx, [rax - 1]	      8695	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2
0x40086eb	          0x83fa01	                              cmp edx, 1	      8695	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2
0x40086ee	            0x77c0	                            ja 0x40086b0	      8695	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2
0x40086f0	           0xfb601	                   movzx eax, byte [rcx]	      8538	eval.c	FUNCTION_162	IF_1	CALL_1
0x40086f3	          0x4889ca	                            mov rdx, rcx	      8697	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	CALL_3
0x40086f6	          0x83e841	                           sub eax, 0x41	      8538	eval.c	FUNCTION_162	IF_1	CALL_1
0x40086f9	          0x83f819	                           cmp eax, 0x19	      8538	eval.c	FUNCTION_162	IF_1	CALL_1
0x40086fc	            0x77bb	                            ja 0x40086b9	      8538	eval.c	FUNCTION_162	IF_1	CALL_1
0x40086fe	            0x6690	                                     nop	      8538	eval.c	FUNCTION_162	IF_1	CALL_1
0x4008700	        0x4883c201	                              add rdx, 1	      8540	eval.c	FUNCTION_162	IF_1	WHILE_1
0x4008704	           0xfb602	                   movzx eax, byte [rdx]	      8540	eval.c	FUNCTION_162	IF_1	WHILE_1
0x4008707	            0x84c0	                             test al, al	      8540	eval.c	FUNCTION_162	IF_1	WHILE_1
0x4008709	            0x74ae	                            je 0x40086b9	      8540	eval.c	FUNCTION_162	IF_1	WHILE_1
0x400870b	          0x83e861	                           sub eax, 0x61	      8541	eval.c	FUNCTION_162	IF_1	WHILE_1	IF_2	CALL_2
0x400870e	          0x83f819	                           cmp eax, 0x19	      8541	eval.c	FUNCTION_162	IF_1	WHILE_1	IF_2	CALL_2
0x4008711	            0x77ed	                            ja 0x4008700	      8541	eval.c	FUNCTION_162	IF_1	WHILE_1	IF_2	CALL_2
0x4008713	        0x488d79ef	                   lea rdi, [rcx - 0x11]	      8701	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	CALL_5
0x4008717	      0xbe00000000	                              mov esi, 0	      7085	eval.c	FUNCTION_128	CALL_1
0x400871c	      0x48894c2408	                mov qword [rsp + 8], rcx	      8701	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	CALL_5
0x4008721	      0xe800000000	                          call 0x4008726	      7085	eval.c	FUNCTION_128	CALL_1
0x4008726	          0x4885c0	                           test rax, rax	      7087	eval.c	FUNCTION_128
0x4008729	      0xbe00000000	                              mov esi, 0	      8701	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	CALL_5
0x400872e	        0x480f44c5	                          cmove rax, rbp	      7087	eval.c	FUNCTION_128
0x4008732	          0x4889c7	                            mov rdi, rax	      7087	eval.c	FUNCTION_128
0x4008735	      0xe800000000	                          call 0x400873a	      8701	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	CALL_5
0x400873a	          0x4885c0	                           test rax, rax	      8703	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_3
0x400873d	          0x4989c6	                            mov r14, rax	      8701	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	CALL_5
0x4008740	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      8703	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_3
0x4008745	     0xf849d000000	                            je 0x40087e8	      8703	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_3
0x400874b	        0x410fb606	                   movzx eax, byte [r14]	      8705	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	FOR_2
0x400874f	          0x4c89f2	                            mov rdx, r14	      8705	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	FOR_2
0x4008752	            0x84c0	                             test al, al	      8705	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	FOR_2
0x4008754	            0x751d	                           jne 0x4008773	      8705	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	FOR_2
0x4008756	            0xeb2d	                           jmp 0x4008785	      8705	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	FOR_2
0x4008758	     0xf1f84000000	                   nop dword [rax + rax]	      8705	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	FOR_2
0x4008760	            0x3c0d	                             cmp al, 0xd	      8708	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	ELSE_1	IF_5
0x4008762	     0xf8428010000	                            je 0x4008890	      8708	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	ELSE_1	IF_5
0x4008768	        0x4883c201	                              add rdx, 1	      8705	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	FOR_2
0x400876c	           0xfb602	                   movzx eax, byte [rdx]	      8705	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	FOR_2
0x400876f	            0x84c0	                             test al, al	      8705	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	FOR_2
0x4008771	            0x7412	                            je 0x4008785	      8705	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	FOR_2
0x4008773	            0x3c0a	                             cmp al, 0xa	      8706	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	FOR_2	IF_4
0x4008775	            0x75e9	                           jne 0x4008760	      8706	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	FOR_2	IF_4
0x4008777	          0xc6026e	                    mov byte [rdx], 0x6e	      8707	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	FOR_2	IF_4
0x400877a	        0x4883c201	                              add rdx, 1	      8705	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	FOR_2
0x400877e	           0xfb602	                   movzx eax, byte [rdx]	      8705	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	FOR_2
0x4008781	            0x84c0	                             test al, al	      8705	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	FOR_2
0x4008783	            0x75ee	                           jne 0x4008773	      8705	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	FOR_2
0x4008785	          0x4531c0	                            xor r8d, r8d	      8710	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_6
0x4008788	        0x8379ef02	               cmp dword [rcx - 0x11], 2	      8710	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_6
0x400878c	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_60
0x4008791	          0x4d89f1	                             mov r9, r14	        97	stdio2.h	CALL_60
0x4008794	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_60
0x4008799	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_60
0x400879c	        0x410f94c0	                                sete r8b	      8710	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_6
0x40087a0	        0x4883ec08	                              sub rsp, 8	        97	stdio2.h	CALL_60
0x40087a4	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_60
0x40087a6	      0x478d440020	               lea r8d, [r8 + r8 + 0x20]	      8710	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_6
0x40087ab	            0x4150	                                 push r8	        97	stdio2.h	CALL_60
0x40087ad	      0xe800000000	                          call 0x40087b2	        97	stdio2.h	CALL_60
0x40087b2	            0x85c0	                           test eax, eax	      8710	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_6
0x40087b4	              0x5a	                                 pop rdx	      8710	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_6
0x40087b5	              0x59	                                 pop rcx	      8710	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_6
0x40087b6	     0xf88f4000000	                            js 0x40088b0	      8710	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_6
0x40087bc	          0x4889df	                            mov rdi, rbx	      8717	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_6	CALL_6
0x40087bf	      0xe800000000	                          call 0x40087c4	      8717	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_6	CALL_6
0x40087c4	            0x85c0	                           test eax, eax	      8717	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_6	CALL_6
0x40087c6	     0xf84e4000000	                            je 0x40088b0	      8717	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_6	CALL_6
0x40087cc	          0x4c89f7	                            mov rdi, r14	      8722	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	CALL_8
0x40087cf	        0x4983c410	                           add r12, 0x10	      8689	eval.c	FUNCTION_165	FOR_1
0x40087d3	      0xe800000000	                          call 0x40087d8	      8722	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	CALL_8
0x40087d8	          0x4585ed	                         test r13d, r13d	      8689	eval.c	FUNCTION_165	FOR_1
0x40087db	     0xf85e5feffff	                           jne 0x40086c6	      8689	eval.c	FUNCTION_165	FOR_1
0x40087e1	     0xf1f80000000	                         nop dword [rax]	      8689	eval.c	FUNCTION_165	FOR_1
0x40087e8	      0xb801000000	                              mov eax, 1	      8744	eval.c	FUNCTION_165
0x40087ed	        0x4883c410	                           add rsp, 0x10	      8745	eval.c	FUNCTION_165
0x40087f1	              0x5b	                                 pop rbx	      8745	eval.c	FUNCTION_165
0x40087f2	              0x5d	                                 pop rbp	      8745	eval.c	FUNCTION_165
0x40087f3	            0x415c	                                 pop r12	      8745	eval.c	FUNCTION_165
0x40087f5	            0x415d	                                 pop r13	      8745	eval.c	FUNCTION_165
0x40087f7	            0x415e	                                 pop r14	      8745	eval.c	FUNCTION_165
0x40087f9	              0xc3	                                     ret	      8745	eval.c	FUNCTION_165
0x40087fa	    0x660f1f440000	                    nop word [rax + rax]	      8745	eval.c	FUNCTION_165
0x4008800	           0xfb601	                   movzx eax, byte [rcx]	      8538	eval.c	FUNCTION_162	IF_1	CALL_1
0x4008803	          0x4889ca	                            mov rdx, rcx	      8726	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7	CALL_9
0x4008806	          0x83e841	                           sub eax, 0x41	      8538	eval.c	FUNCTION_162	IF_1	CALL_1
0x4008809	          0x83f819	                           cmp eax, 0x19	      8538	eval.c	FUNCTION_162	IF_1	CALL_1
0x400880c	     0xf87a7feffff	                            ja 0x40086b9	      8538	eval.c	FUNCTION_162	IF_1	CALL_1
0x4008812	    0x660f1f440000	                    nop word [rax + rax]	      8538	eval.c	FUNCTION_162	IF_1	CALL_1
0x4008818	        0x4883c201	                              add rdx, 1	      8540	eval.c	FUNCTION_162	IF_1	WHILE_1
0x400881c	           0xfb602	                   movzx eax, byte [rdx]	      8540	eval.c	FUNCTION_162	IF_1	WHILE_1
0x400881f	            0x84c0	                             test al, al	      8540	eval.c	FUNCTION_162	IF_1	WHILE_1
0x4008821	     0xf8492feffff	                            je 0x40086b9	      8540	eval.c	FUNCTION_162	IF_1	WHILE_1
0x4008827	          0x83e861	                           sub eax, 0x61	      8541	eval.c	FUNCTION_162	IF_1	WHILE_1	IF_2	CALL_2
0x400882a	          0x83f819	                           cmp eax, 0x19	      8541	eval.c	FUNCTION_162	IF_1	WHILE_1	IF_2	CALL_2
0x400882d	            0x77e9	                            ja 0x4008818	      8541	eval.c	FUNCTION_162	IF_1	WHILE_1	IF_2	CALL_2
0x400882f	        0x660fefc9	                         pxor xmm1, xmm1	      8731	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7	IF_8
0x4008833	    0x41b820000000	                           mov r8d, 0x20	      8729	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7
0x4008839	      0xf20f1041f7	             movsd xmm0, qword [rcx - 9]	      8728	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7
0x400883e	        0x660f2ec8	                      ucomisd xmm1, xmm0	      8731	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7	IF_8
0x4008842	            0x775c	                            ja 0x40088a0	      8731	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7	IF_8
0x4008844	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_60
0x4008849	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_60
0x400884e	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_60
0x4008851	      0xb801000000	                              mov eax, 1	        97	stdio2.h	CALL_60
0x4008856	      0xe800000000	                          call 0x400885b	        97	stdio2.h	CALL_60
0x400885b	            0x85c0	                           test eax, eax	      8736	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7	IF_9
0x400885d	            0x7810	                            js 0x400886f	      8736	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7	IF_9
0x400885f	          0x4889df	                            mov rdi, rbx	      8738	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7	IF_9	CALL_10
0x4008862	      0xe800000000	                          call 0x4008867	      8738	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7	IF_9	CALL_10
0x4008867	            0x85c0	                           test eax, eax	      8738	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7	IF_9	CALL_10
0x4008869	     0xf854afeffff	                           jne 0x40086b9	      8738	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7	IF_9	CALL_10
0x400886f	            0x31c0	                            xor eax, eax	      8739	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7	IF_9
0x4008871	      0xe977ffffff	                           jmp 0x40087ed	      8739	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7	IF_9
0x4008876	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      8739	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7	IF_9
0x4008880	        0x4983c410	                           add r12, 0x10	      8689	eval.c	FUNCTION_165	FOR_1
0x4008884	      0xe93dfeffff	                           jmp 0x40086c6	      8689	eval.c	FUNCTION_165	FOR_1
0x4008889	     0xf1f80000000	                         nop dword [rax]	      8689	eval.c	FUNCTION_165	FOR_1
0x4008890	          0xc60272	                    mov byte [rdx], 0x72	      8709	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	ELSE_1	IF_5
0x4008893	      0xe9d0feffff	                           jmp 0x4008768	      8709	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	ELSE_1	IF_5
0x4008898	     0xf1f84000000	                   nop dword [rax + rax]	      8709	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	ELSE_1	IF_5
0x40088a0	    0x660f57050000	        xorpd xmm0, xmmword [0x040088a8]	      8733	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7	IF_8
0x40088a8	    0x41b82d000000	                           mov r8d, 0x2d	      8734	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7	IF_8
0x40088ae	            0xeb94	                           jmp 0x4008844	      8734	eval.c	FUNCTION_165	FOR_1	IF_1	ELSE_2	IF_7	IF_8
0x40088b0	          0x4c89f7	                            mov rdi, r14	      8719	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_6	CALL_7
0x40088b3	      0xe800000000	                          call 0x40088b8	      8719	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_6	CALL_7
0x40088b8	            0x31c0	                            xor eax, eax	      8720	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_6
0x40088ba	      0xe92effffff	                           jmp 0x40087ed	      8720	eval.c	FUNCTION_165	FOR_1	IF_1	IF_2	IF_6
get_vim_var_str	functions,0:SWITCH,0:IF,0:DO,0:ELSE,0:WHILE,0:CALL,1:FOR,0	13
0x40052c0	          0x4863ff	                         movsxd rdi, edi	      6405	eval.c	FUNCTION_104	CALL_1
0x40052c3	        0x4883ec08	                              sub rsp, 8	      6404	eval.c	FUNCTION_104
0x40052c7	      0xbe00000000	                              mov esi, 0	      7085	eval.c	FUNCTION_128	CALL_1
0x40052cc	    0x488d04fd0000	                        lea rax, [rdi*8]	      6405	eval.c	FUNCTION_104	CALL_1
0x40052d4	        0x48c1e706	                              shl rdi, 6	      6405	eval.c	FUNCTION_104	CALL_1
0x40052d8	          0x4829c7	                            sub rdi, rax	      6405	eval.c	FUNCTION_104	CALL_1
0x40052db	    0x4881c7000000	                              add rdi, 0	      6405	eval.c	FUNCTION_104	CALL_1
0x40052e2	      0xe800000000	                          call 0x40052e7	      7085	eval.c	FUNCTION_128	CALL_1
0x40052e7	      0xba00000000	                              mov edx, 0	      7087	eval.c	FUNCTION_128
0x40052ec	          0x4885c0	                           test rax, rax	      7087	eval.c	FUNCTION_128
0x40052ef	        0x480f44c2	                          cmove rax, rdx	      7087	eval.c	FUNCTION_128
0x40052f3	        0x4883c408	                              add rsp, 8	      6406	eval.c	FUNCTION_104
0x40052f7	              0xc3	                                     ret	      6406	eval.c	FUNCTION_104
tv_equal	functions,0:SWITCH,1:IF,4:DO,0:ELSE,0:WHILE,0:CALL,7:FOR,0	264
0x4004060	            0x4157	                                push r15	      4962	eval.c	FUNCTION_79
0x4004062	            0x4156	                                push r14	      4962	eval.c	FUNCTION_79
0x4004064	            0x4155	                                push r13	      4962	eval.c	FUNCTION_79
0x4004066	            0x4154	                                push r12	      4962	eval.c	FUNCTION_79
0x4004068	          0x4189d5	                           mov r13d, edx	      4962	eval.c	FUNCTION_79
0x400406b	              0x55	                                push rbp	      4962	eval.c	FUNCTION_79
0x400406c	              0x53	                                push rbx	      4962	eval.c	FUNCTION_79
0x400406d	          0x4889fd	                            mov rbp, rdi	      4962	eval.c	FUNCTION_79
0x4004070	          0x4989f4	                            mov r12, rsi	      4962	eval.c	FUNCTION_79
0x4004073	    0x4881ecb80000	                           sub rsp, 0xb8	      4962	eval.c	FUNCTION_79
0x400407a	    0x64488b042528	                mov rax, qword fs:[0x28]	      4962	eval.c	FUNCTION_79
0x4004083	    0x48898424a800	             mov qword [rsp + 0xa8], rax	      4962	eval.c	FUNCTION_79
0x400408b	            0x31c0	                            xor eax, eax	      4962	eval.c	FUNCTION_79
0x400408d	            0x85c9	                           test ecx, ecx	      4974	eval.c	FUNCTION_79	IF_1
0x400408f	    0x8b0500000000	            mov eax, dword [0x04004095] 	      4974	eval.c	FUNCTION_79	IF_1
0x4004095	            0x750f	                           jne 0x40040a6	      4974	eval.c	FUNCTION_79	IF_1
0x4004097	    0xc70500000000	          mov dword [0x040040a1], 0x3e8 	      4975	eval.c	FUNCTION_79	IF_1
0x40040a1	      0xb8e8030000	                          mov eax, 0x3e8	      4975	eval.c	FUNCTION_79	IF_1
0x40040a6	    0x8b1500000000	            mov edx, dword [0x040040ac] 	      4976	eval.c	FUNCTION_79	IF_2
0x40040ac	            0x39c2	                            cmp edx, eax	      4976	eval.c	FUNCTION_79	IF_2
0x40040ae	            0x7d48	                           jge 0x40040f8	      4976	eval.c	FUNCTION_79	IF_2
0x40040b0	          0x8b5d00	                    mov ebx, dword [rbp]	      4984	eval.c	FUNCTION_79	IF_3
0x40040b3	          0x83fb03	                              cmp ebx, 3	      4984	eval.c	FUNCTION_79	IF_3
0x40040b6	            0x7458	                            je 0x4004110	      4984	eval.c	FUNCTION_79	IF_3
0x40040b8	          0x83fb04	                              cmp ebx, 4	      4985	eval.c	FUNCTION_79	IF_3
0x40040bb	            0x7473	                            je 0x4004130	      4985	eval.c	FUNCTION_79	IF_3
0x40040bd	        0x458b3424	                   mov r14d, dword [r12]	      4985	eval.c	FUNCTION_79	IF_3
0x40040c1	            0x31c0	                            xor eax, eax	      4996	eval.c	FUNCTION_79	IF_4
0x40040c3	          0x4439f3	                           cmp ebx, r14d	      4995	eval.c	FUNCTION_79	IF_4
0x40040c6	     0xf8484010000	                            je 0x4004250	      4995	eval.c	FUNCTION_79	IF_4
0x40040cc	    0x488bb424a800	            mov rsi, qword [rsp + 0xa8] 	      5044	eval.c	FUNCTION_79
0x40040d4	    0x644833342528	                xor rsi, qword fs:[0x28]	      5044	eval.c	FUNCTION_79
0x40040dd	     0xf85a9030000	                           jne 0x400448c	      5044	eval.c	FUNCTION_79
0x40040e3	    0x4881c4b80000	                           add rsp, 0xb8	      5044	eval.c	FUNCTION_79
0x40040ea	              0x5b	                                 pop rbx	      5044	eval.c	FUNCTION_79
0x40040eb	              0x5d	                                 pop rbp	      5044	eval.c	FUNCTION_79
0x40040ec	            0x415c	                                 pop r12	      5044	eval.c	FUNCTION_79
0x40040ee	            0x415d	                                 pop r13	      5044	eval.c	FUNCTION_79
0x40040f0	            0x415e	                                 pop r14	      5044	eval.c	FUNCTION_79
0x40040f2	            0x415f	                                 pop r15	      5044	eval.c	FUNCTION_79
0x40040f4	              0xc3	                                     ret	      5044	eval.c	FUNCTION_79
0x40040f5	           0xf1f00	                         nop dword [rax]	      5044	eval.c	FUNCTION_79
0x40040f8	          0x83e801	                              sub eax, 1	      4978	eval.c	FUNCTION_79	IF_2
0x40040fb	    0x890500000000	            mov dword [0x04004101], eax 	      4978	eval.c	FUNCTION_79	IF_2
0x4004101	      0xb801000000	                              mov eax, 1	      4979	eval.c	FUNCTION_79	IF_2
0x4004106	            0xebc4	                           jmp 0x40040cc	      4979	eval.c	FUNCTION_79	IF_2
0x4004108	     0xf1f84000000	                   nop dword [rax + rax]	      4979	eval.c	FUNCTION_79	IF_2
0x4004110	        0x458b3424	                   mov r14d, dword [r12]	      4986	eval.c	FUNCTION_79	IF_3
0x4004114	        0x4183fe03	                             cmp r14d, 3	      4986	eval.c	FUNCTION_79	IF_3
0x4004118	     0xf84f2020000	                            je 0x4004410	      4986	eval.c	FUNCTION_79	IF_3
0x400411e	        0x4183fe04	                             cmp r14d, 4	      4987	eval.c	FUNCTION_79	IF_3
0x4004122	            0x742d	                            je 0x4004151	      4987	eval.c	FUNCTION_79	IF_3
0x4004124	            0x31c0	                            xor eax, eax	      5043	eval.c	FUNCTION_79
0x4004126	            0xeba4	                           jmp 0x40040cc	      5043	eval.c	FUNCTION_79
0x4004128	     0xf1f84000000	                   nop dword [rax + rax]	      5043	eval.c	FUNCTION_79
0x4004130	        0x4c8b7d08	                mov r15, qword [rbp + 8]	      4985	eval.c	FUNCTION_79	IF_3
0x4004134	          0x4d85ff	                           test r15, r15	      4985	eval.c	FUNCTION_79	IF_3
0x4004137	            0x74eb	                            je 0x4004124	      4985	eval.c	FUNCTION_79	IF_3
0x4004139	        0x458b3424	                   mov r14d, dword [r12]	      4986	eval.c	FUNCTION_79	IF_3
0x400413d	        0x4183fe03	                             cmp r14d, 3	      4986	eval.c	FUNCTION_79	IF_3
0x4004141	     0xf8428030000	                            je 0x400446f	      4986	eval.c	FUNCTION_79	IF_3
0x4004147	        0x4183fe04	                             cmp r14d, 4	      4987	eval.c	FUNCTION_79	IF_3
0x400414b	     0xf8570ffffff	                           jne 0x40040c1	      4987	eval.c	FUNCTION_79	IF_3
0x4004151	      0x498b442408	                mov rax, qword [r12 + 8]	      4987	eval.c	FUNCTION_79	IF_3
0x4004156	          0x4885c0	                           test rax, rax	      4987	eval.c	FUNCTION_79	IF_3
0x4004159	          0x4889c1	                            mov rcx, rax	      4987	eval.c	FUNCTION_79	IF_3
0x400415c	     0xf84ce020000	                            je 0x4004430	      4987	eval.c	FUNCTION_79	IF_3
0x4004162	          0x83c201	                              add edx, 1	      4989	eval.c	FUNCTION_79	IF_3
0x4004165	          0x83fb03	                              cmp ebx, 3	      4912	eval.c	FUNCTION_78	CALL_1
0x4004168	    0x891500000000	            mov dword [0x0400416e], edx 	      4989	eval.c	FUNCTION_79	IF_3
0x400416e	     0xf841d030000	                            je 0x4004491	      4912	eval.c	FUNCTION_78	CALL_1
0x4004174	        0x4c8b7d08	                mov r15, qword [rbp + 8]	      4912	eval.c	FUNCTION_78	CALL_1
0x4004178	    0x41be04000000	                             mov r14d, 4	      4912	eval.c	FUNCTION_78	CALL_1
0x400417e	        0x498b7f08	                mov rdi, qword [r15 + 8]	      4862	eval.c	FUNCTION_75	IF_1
0x4004182	          0x4885ff	                           test rdi, rdi	      4862	eval.c	FUNCTION_75	IF_1
0x4004185	     0xf84e4010000	                            je 0x400436f	      4862	eval.c	FUNCTION_75	IF_1
0x400418b	          0x803f00	                       cmp byte [rdi], 0	      4914	eval.c	FUNCTION_78	IF_1
0x400418e	      0xb800000000	                              mov eax, 0	      4914	eval.c	FUNCTION_78	IF_1
0x4004193	        0x480f44f8	                          cmove rdi, rax	      4914	eval.c	FUNCTION_78	IF_1
0x4004197	        0x4183fe03	                             cmp r14d, 3	      4916	eval.c	FUNCTION_78	CALL_2
0x400419b	     0xf845f020000	                            je 0x4004400	      4916	eval.c	FUNCTION_78	CALL_2
0x40041a1	        0x488b7108	                mov rsi, qword [rcx + 8]	      4862	eval.c	FUNCTION_75	IF_1
0x40041a5	          0x4885f6	                           test rsi, rsi	      4862	eval.c	FUNCTION_75	IF_1
0x40041a8	     0xf84a8010000	                            je 0x4004356	      4862	eval.c	FUNCTION_75	IF_1
0x40041ae	          0x803e00	                       cmp byte [rsi], 0	      4917	eval.c	FUNCTION_78	IF_2
0x40041b1	     0xf84c1000000	                            je 0x4004278	      4917	eval.c	FUNCTION_78	IF_2
0x40041b7	          0x4885ff	                           test rdi, rdi	      4919	eval.c	FUNCTION_78	IF_3
0x40041ba	     0xf84ba000000	                            je 0x400427a	      4919	eval.c	FUNCTION_78	IF_3
0x40041c0	      0x48894c2408	                mov qword [rsp + 8], rcx	      4919	eval.c	FUNCTION_78	IF_3
0x40041c5	      0xe800000000	                          call 0x40041ca	      4924	eval.c	FUNCTION_78	ELSE_1	IF_5	CALL_3
0x40041ca	            0x85c0	                           test eax, eax	      4924	eval.c	FUNCTION_78	ELSE_1	IF_5	CALL_3
0x40041cc	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      4924	eval.c	FUNCTION_78	ELSE_1	IF_5	CALL_3
0x40041d1	            0x756d	                           jne 0x4004240	      4924	eval.c	FUNCTION_78	ELSE_1	IF_5	CALL_3
0x40041d3	          0x83fb03	                              cmp ebx, 3	      4928	eval.c	FUNCTION_78
0x40041d6	     0xf84fe010000	                            je 0x40043da	      4928	eval.c	FUNCTION_78
0x40041dc	        0x4183fe03	                             cmp r14d, 3	      4929	eval.c	FUNCTION_78
0x40041e0	        0x498b7f28	            mov rdi, qword [r15 + 0x28] 	      4928	eval.c	FUNCTION_78
0x40041e4	     0xf8451020000	                            je 0x400443b	      4929	eval.c	FUNCTION_78
0x40041ea	          0x4885ff	                           test rdi, rdi	      4930	eval.c	FUNCTION_78	IF_6
0x40041ed	        0x488b7128	            mov rsi, qword [rcx + 0x28] 	      4929	eval.c	FUNCTION_78
0x40041f1	     0xf84f3010000	                            je 0x40043ea	      4930	eval.c	FUNCTION_78	IF_6
0x40041f7	          0x4885f6	                           test rsi, rsi	      4930	eval.c	FUNCTION_78	IF_6
0x40041fa	     0xf84ea010000	                            je 0x40043ea	      4930	eval.c	FUNCTION_78	IF_6
0x4004200	      0xb901000000	                              mov ecx, 1	      4935	eval.c	FUNCTION_78	ELSE_2	IF_8	CALL_4
0x4004205	          0x4489ea	                           mov edx, r13d	      4935	eval.c	FUNCTION_78	ELSE_2	IF_8	CALL_4
0x4004208	      0xe800000000	                          call 0x400420d	      4935	eval.c	FUNCTION_78	ELSE_2	IF_8	CALL_4
0x400420d	            0x85c0	                           test eax, eax	      4935	eval.c	FUNCTION_78	ELSE_2	IF_8	CALL_4
0x400420f	            0x742f	                            je 0x4004240	      4935	eval.c	FUNCTION_78	ELSE_2	IF_8	CALL_4
0x4004211	          0x8b5d00	                    mov ebx, dword [rbp]	      4935	eval.c	FUNCTION_78	ELSE_2	IF_8	CALL_4
0x4004214	        0x458b3424	                   mov r14d, dword [r12]	      4935	eval.c	FUNCTION_78	ELSE_2	IF_8	CALL_4
0x4004218	          0x83fb03	                              cmp ebx, 3	      4939	eval.c	FUNCTION_78
0x400421b	     0xf8438020000	                            je 0x4004459	      4939	eval.c	FUNCTION_78
0x4004221	        0x488b4508	                mov rax, qword [rbp + 8]	      4939	eval.c	FUNCTION_78
0x4004225	        0x4183fe03	                             cmp r14d, 3	      4940	eval.c	FUNCTION_78
0x4004229	          0x8b501c	            mov edx, dword [rax + 0x1c] 	      4939	eval.c	FUNCTION_78
0x400422c	     0xf8450020000	                            je 0x4004482	      4940	eval.c	FUNCTION_78
0x4004232	      0x498b442408	                mov rax, qword [r12 + 8]	      4940	eval.c	FUNCTION_78
0x4004237	          0x39501c	            cmp dword [rax + 0x1c], edx 	      4941	eval.c	FUNCTION_78	IF_9
0x400423a	     0xf8448010000	                            je 0x4004388	      4941	eval.c	FUNCTION_78	IF_9
0x4004240	            0x31c0	                            xor eax, eax	      4922	eval.c	FUNCTION_78	IF_3	IF_4
0x4004242	    0x832d00000000	               sub dword [0x04004249], 1	      5003	eval.c	FUNCTION_79	SWITCH_1
0x4004249	      0xe97efeffff	                           jmp 0x40040cc	      5004	eval.c	FUNCTION_79	SWITCH_1
0x400424e	            0x6690	                                     nop	      5004	eval.c	FUNCTION_79	SWITCH_1
0x4004250	          0x83fb0a	                            cmp ebx, 0xa	      4998	eval.c	FUNCTION_79	SWITCH_1
0x4004253	     0xf87cbfeffff	                            ja 0x4004124	      4998	eval.c	FUNCTION_79	SWITCH_1
0x4004259	    0xff24dd000000	                       jmp qword [rbx*8]	      4998	eval.c	FUNCTION_79	SWITCH_1
0x4004260	      0x498b442408	                mov rax, qword [r12 + 8]	      5033	eval.c	FUNCTION_79	SWITCH_1
0x4004265	        0x48394508	                cmp qword [rbp + 8], rax	      5033	eval.c	FUNCTION_79	SWITCH_1
0x4004269	           0xf94c0	                                 sete al	      5033	eval.c	FUNCTION_79	SWITCH_1
0x400426c	           0xfb6c0	                           movzx eax, al	      5033	eval.c	FUNCTION_79	SWITCH_1
0x400426f	      0xe958feffff	                           jmp 0x40040cc	      5033	eval.c	FUNCTION_79	SWITCH_1
0x4004274	         0xf1f4000	                         nop dword [rax]	      5033	eval.c	FUNCTION_79	SWITCH_1
0x4004278	            0x31f6	                            xor esi, esi	      4917	eval.c	FUNCTION_78	IF_2
0x400427a	          0x4839f7	                            cmp rdi, rsi	      4921	eval.c	FUNCTION_78	IF_3	IF_4
0x400427d	            0x75c1	                           jne 0x4004240	      4921	eval.c	FUNCTION_78	IF_3	IF_4
0x400427f	      0xe94fffffff	                           jmp 0x40041d3	      4921	eval.c	FUNCTION_78	IF_3	IF_4
0x4004284	         0xf1f4000	                         nop dword [rax]	      4921	eval.c	FUNCTION_78	IF_3	IF_4
0x4004288	      0x498b742408	                mov rsi, qword [r12 + 8]	      5008	eval.c	FUNCTION_79	SWITCH_1	CALL_3
0x400428d	        0x488b7d08	                mov rdi, qword [rbp + 8]	      5008	eval.c	FUNCTION_79	SWITCH_1	CALL_3
0x4004291	          0x83c201	                              add edx, 1	      5007	eval.c	FUNCTION_79	SWITCH_1
0x4004294	    0x891500000000	            mov dword [0x0400429a], edx 	      5007	eval.c	FUNCTION_79	SWITCH_1
0x400429a	      0xb901000000	                              mov ecx, 1	      5008	eval.c	FUNCTION_79	SWITCH_1	CALL_3
0x400429f	          0x4489ea	                           mov edx, r13d	      5008	eval.c	FUNCTION_79	SWITCH_1	CALL_3
0x40042a2	      0xe800000000	                          call 0x40042a7	      5008	eval.c	FUNCTION_79	SWITCH_1	CALL_3
0x40042a7	    0x832d00000000	               sub dword [0x040042ae], 1	      5009	eval.c	FUNCTION_79	SWITCH_1
0x40042ae	      0xe919feffff	                           jmp 0x40040cc	      5010	eval.c	FUNCTION_79	SWITCH_1
0x40042b3	       0xf1f440000	                   nop dword [rax + rax]	      5010	eval.c	FUNCTION_79	SWITCH_1
0x40042b8	      0x498b742408	                mov rsi, qword [r12 + 8]	      5002	eval.c	FUNCTION_79	SWITCH_1	CALL_2
0x40042bd	        0x488b7d08	                mov rdi, qword [rbp + 8]	      5002	eval.c	FUNCTION_79	SWITCH_1	CALL_2
0x40042c1	          0x83c201	                              add edx, 1	      5001	eval.c	FUNCTION_79	SWITCH_1
0x40042c4	    0x891500000000	            mov dword [0x040042ca], edx 	      5001	eval.c	FUNCTION_79	SWITCH_1
0x40042ca	      0xb901000000	                              mov ecx, 1	      5002	eval.c	FUNCTION_79	SWITCH_1	CALL_2
0x40042cf	          0x4489ea	                           mov edx, r13d	      5002	eval.c	FUNCTION_79	SWITCH_1	CALL_2
0x40042d2	      0xe800000000	                          call 0x40042d7	      5002	eval.c	FUNCTION_79	SWITCH_1	CALL_2
0x40042d7	      0xe966ffffff	                           jmp 0x4004242	      5002	eval.c	FUNCTION_79	SWITCH_1	CALL_2
0x40042dc	         0xf1f4000	                         nop dword [rax]	      5002	eval.c	FUNCTION_79	SWITCH_1	CALL_2
0x40042e0	      0x488d742410	                   lea rsi, [rsp + 0x10]	      7085	eval.c	FUNCTION_128	CALL_1
0x40042e5	          0x4889ef	                            mov rdi, rbp	      7085	eval.c	FUNCTION_128	CALL_1
0x40042e8	      0xbd00000000	                              mov ebp, 0	      7087	eval.c	FUNCTION_128
0x40042ed	      0xe800000000	                          call 0x40042f2	      7085	eval.c	FUNCTION_128	CALL_1
0x40042f2	      0x488d742460	                   lea rsi, [rsp + 0x60]	      7085	eval.c	FUNCTION_128	CALL_1
0x40042f7	          0x4885c0	                           test rax, rax	      7087	eval.c	FUNCTION_128
0x40042fa	          0x4c89e7	                            mov rdi, r12	      7085	eval.c	FUNCTION_128	CALL_1
0x40042fd	        0x480f44c5	                          cmove rax, rbp	      7087	eval.c	FUNCTION_128
0x4004301	          0x4889c3	                            mov rbx, rax	      7087	eval.c	FUNCTION_128
0x4004304	      0xe800000000	                          call 0x4004309	      7085	eval.c	FUNCTION_128	CALL_1
0x4004309	          0x4889ee	                            mov rsi, rbp	      7087	eval.c	FUNCTION_128
0x400430c	          0x4885c0	                           test rax, rax	      7087	eval.c	FUNCTION_128
0x400430f	        0x480f45f0	                         cmovne rsi, rax	      7087	eval.c	FUNCTION_128
0x4004313	          0x4585ed	                         test r13d, r13d	      5018	eval.c	FUNCTION_79	SWITCH_1	CALL_7
0x4004316	     0xf8523010000	                           jne 0x400443f	      5018	eval.c	FUNCTION_79	SWITCH_1	CALL_7
0x400431c	          0x4889df	                            mov rdi, rbx	      5018	eval.c	FUNCTION_79	SWITCH_1	CALL_7
0x400431f	      0xe800000000	                          call 0x4004324	      5018	eval.c	FUNCTION_79	SWITCH_1	CALL_7
0x4004324	            0x85c0	                           test eax, eax	      5018	eval.c	FUNCTION_79	SWITCH_1	CALL_7
0x4004326	           0xf94c0	                                 sete al	      5018	eval.c	FUNCTION_79	SWITCH_1	CALL_7
0x4004329	           0xfb6c0	                           movzx eax, al	      5018	eval.c	FUNCTION_79	SWITCH_1	CALL_7
0x400432c	      0xe99bfdffff	                           jmp 0x40040cc	      5018	eval.c	FUNCTION_79	SWITCH_1	CALL_7
0x4004331	     0xf1f80000000	                         nop dword [rax]	      5018	eval.c	FUNCTION_79	SWITCH_1	CALL_7
0x4004338	      0xf20f104508	            movsd xmm0, qword [rbp + 8] 	      5025	eval.c	FUNCTION_79	SWITCH_1
0x400433d	            0x31c0	                            xor eax, eax	      5025	eval.c	FUNCTION_79	SWITCH_1
0x400433f	      0xba00000000	                              mov edx, 0	      5025	eval.c	FUNCTION_79	SWITCH_1
0x4004344	    0x66410f2e4424	           ucomisd xmm0, qword [r12 + 8]	      5025	eval.c	FUNCTION_79	SWITCH_1
0x400434b	           0xf9bc0	                                setnp al	      5025	eval.c	FUNCTION_79	SWITCH_1
0x400434e	           0xf45c2	                         cmovne eax, edx	      5025	eval.c	FUNCTION_79	SWITCH_1
0x4004351	      0xe976fdffff	                           jmp 0x40040cc	      5025	eval.c	FUNCTION_79	SWITCH_1
0x4004356	        0x488b4110	            mov rax, qword [rcx + 0x10] 	      4864	eval.c	FUNCTION_75
0x400435a	    0x488db0d80000	                   lea rsi, [rax + 0xd8]	      4864	eval.c	FUNCTION_75
0x4004361	          0x4885f6	                           test rsi, rsi	      4917	eval.c	FUNCTION_78	IF_2
0x4004364	     0xf8544feffff	                           jne 0x40041ae	      4917	eval.c	FUNCTION_78	IF_2
0x400436a	      0xe90bffffff	                           jmp 0x400427a	      4917	eval.c	FUNCTION_78	IF_2
0x400436f	        0x498b4710	            mov rax, qword [r15 + 0x10] 	      4864	eval.c	FUNCTION_75
0x4004373	    0x488db8d80000	                   lea rdi, [rax + 0xd8]	      4864	eval.c	FUNCTION_75
0x400437a	          0x4885ff	                           test rdi, rdi	      4913	eval.c	FUNCTION_78	IF_1
0x400437d	     0xf8508feffff	                           jne 0x400418b	      4913	eval.c	FUNCTION_78	IF_1
0x4004383	      0xe90ffeffff	                           jmp 0x4004197	      4913	eval.c	FUNCTION_78	IF_1
0x4004388	            0x85d2	                           test edx, edx	      4943	eval.c	FUNCTION_78	FOR_1
0x400438a	     0xf8ed5000000	                           jle 0x4004465	      4943	eval.c	FUNCTION_78	FOR_1
0x4004390	        0x448d72ff	                     lea r14d, [rdx - 1]	      4943	eval.c	FUNCTION_78	FOR_1
0x4004394	            0x31db	                            xor ebx, ebx	      4943	eval.c	FUNCTION_78	FOR_1
0x4004396	        0x4983c601	                              add r14, 1	      4943	eval.c	FUNCTION_78	FOR_1
0x400439a	        0x49c1e604	                              shl r14, 4	      4943	eval.c	FUNCTION_78	FOR_1
0x400439e	            0xeb12	                           jmp 0x40043b2	      4943	eval.c	FUNCTION_78	FOR_1
0x40043a0	        0x4883c310	                           add rbx, 0x10	      4943	eval.c	FUNCTION_78	FOR_1
0x40043a4	          0x4939de	                            cmp r14, rbx	      4943	eval.c	FUNCTION_78	FOR_1
0x40043a7	     0xf84b8000000	                            je 0x4004465	      4943	eval.c	FUNCTION_78	FOR_1
0x40043ad	      0x498b442408	                mov rax, qword [r12 + 8]	      4943	eval.c	FUNCTION_78	FOR_1
0x40043b2	          0x4889de	                            mov rsi, rbx	      4944	eval.c	FUNCTION_78	FOR_1	IF_10	CALL_5
0x40043b5	        0x48037020	             add rsi, qword [rax + 0x20]	      4944	eval.c	FUNCTION_78	FOR_1	IF_10	CALL_5
0x40043b9	        0x488b4508	                mov rax, qword [rbp + 8]	      4944	eval.c	FUNCTION_78	FOR_1	IF_10	CALL_5
0x40043bd	          0x4889df	                            mov rdi, rbx	      4944	eval.c	FUNCTION_78	FOR_1	IF_10	CALL_5
0x40043c0	      0xb901000000	                              mov ecx, 1	      4944	eval.c	FUNCTION_78	FOR_1	IF_10	CALL_5
0x40043c5	          0x4489ea	                           mov edx, r13d	      4944	eval.c	FUNCTION_78	FOR_1	IF_10	CALL_5
0x40043c8	        0x48037820	             add rdi, qword [rax + 0x20]	      4944	eval.c	FUNCTION_78	FOR_1	IF_10	CALL_5
0x40043cc	      0xe800000000	                          call 0x40043d1	      4944	eval.c	FUNCTION_78	FOR_1	IF_10	CALL_5
0x40043d1	            0x85c0	                           test eax, eax	      4944	eval.c	FUNCTION_78	FOR_1	IF_10	CALL_5
0x40043d3	            0x75cb	                           jne 0x40043a0	      4944	eval.c	FUNCTION_78	FOR_1	IF_10	CALL_5
0x40043d5	      0xe966feffff	                           jmp 0x4004240	      4944	eval.c	FUNCTION_78	FOR_1	IF_10	CALL_5
0x40043da	            0x31ff	                            xor edi, edi	      4928	eval.c	FUNCTION_78
0x40043dc	            0x31f6	                            xor esi, esi	      4929	eval.c	FUNCTION_78
0x40043de	        0x4183fe03	                             cmp r14d, 3	      4929	eval.c	FUNCTION_78
0x40043e2	            0x7406	                            je 0x40043ea	      4929	eval.c	FUNCTION_78
0x40043e4	        0x488b7128	            mov rsi, qword [rcx + 0x28] 	      4929	eval.c	FUNCTION_78
0x40043e8	            0x31ff	                            xor edi, edi	      4928	eval.c	FUNCTION_78
0x40043ea	          0x4839f7	                            cmp rdi, rsi	      4932	eval.c	FUNCTION_78	IF_6	IF_7
0x40043ed	     0xf854dfeffff	                           jne 0x4004240	      4932	eval.c	FUNCTION_78	IF_6	IF_7
0x40043f3	      0xe920feffff	                           jmp 0x4004218	      4932	eval.c	FUNCTION_78	IF_6	IF_7
0x40043f8	     0xf1f84000000	                   nop dword [rax + rax]	      4932	eval.c	FUNCTION_78	IF_6	IF_7
0x4004400	          0x4889ce	                            mov rsi, rcx	      4916	eval.c	FUNCTION_78	CALL_2
0x4004403	      0xe959ffffff	                           jmp 0x4004361	      4916	eval.c	FUNCTION_78	CALL_2
0x4004408	     0xf1f84000000	                   nop dword [rax + rax]	      4916	eval.c	FUNCTION_78	CALL_2
0x4004410	      0x498b442408	                mov rax, qword [r12 + 8]	      4916	eval.c	FUNCTION_78	CALL_2
0x4004415	          0x83c201	                              add edx, 1	      4989	eval.c	FUNCTION_79	IF_3
0x4004418	    0x891500000000	            mov dword [0x0400441e], edx 	      4989	eval.c	FUNCTION_79	IF_3
0x400441e	        0x488b7d08	                mov rdi, qword [rbp + 8]	      4912	eval.c	FUNCTION_78	CALL_1
0x4004422	          0x4889c1	                            mov rcx, rax	      4912	eval.c	FUNCTION_78	CALL_1
0x4004425	          0x4989ff	                            mov r15, rdi	      4912	eval.c	FUNCTION_78	CALL_1
0x4004428	      0xe94dffffff	                           jmp 0x400437a	      4912	eval.c	FUNCTION_78	CALL_1
0x400442d	           0xf1f00	                         nop dword [rax]	      4912	eval.c	FUNCTION_78	CALL_1
0x4004430	    0x41be04000000	                             mov r14d, 4	      4912	eval.c	FUNCTION_78	CALL_1
0x4004436	      0xe986fcffff	                           jmp 0x40040c1	      4912	eval.c	FUNCTION_78	CALL_1
0x400443b	            0x31f6	                            xor esi, esi	      4929	eval.c	FUNCTION_78
0x400443d	            0xebab	                           jmp 0x40043ea	      4929	eval.c	FUNCTION_78
0x400443f	      0xbaffffff7f	                     mov edx, 0x7fffffff	      5018	eval.c	FUNCTION_79	SWITCH_1	CALL_7
0x4004444	          0x4889df	                            mov rdi, rbx	      5018	eval.c	FUNCTION_79	SWITCH_1	CALL_7
0x4004447	      0xe800000000	                          call 0x400444c	      5018	eval.c	FUNCTION_79	SWITCH_1	CALL_7
0x400444c	            0x85c0	                           test eax, eax	      5018	eval.c	FUNCTION_79	SWITCH_1	CALL_7
0x400444e	           0xf94c0	                                 sete al	      5018	eval.c	FUNCTION_79	SWITCH_1	CALL_7
0x4004451	           0xfb6c0	                           movzx eax, al	      5018	eval.c	FUNCTION_79	SWITCH_1	CALL_7
0x4004454	      0xe973fcffff	                           jmp 0x40040cc	      5018	eval.c	FUNCTION_79	SWITCH_1	CALL_7
0x4004459	            0x31d2	                            xor edx, edx	      4939	eval.c	FUNCTION_78
0x400445b	        0x4183fe03	                             cmp r14d, 3	      4940	eval.c	FUNCTION_78
0x400445f	     0xf85cdfdffff	                           jne 0x4004232	      4940	eval.c	FUNCTION_78
0x4004465	      0xb801000000	                              mov eax, 1	      4948	eval.c	FUNCTION_78
0x400446a	      0xe9d3fdffff	                           jmp 0x4004242	      4948	eval.c	FUNCTION_78
0x400446f	          0x83c201	                              add edx, 1	      4989	eval.c	FUNCTION_79	IF_3
0x4004472	      0x498b4c2408	                mov rcx, qword [r12 + 8]	      4989	eval.c	FUNCTION_79	IF_3
0x4004477	    0x891500000000	            mov dword [0x0400447d], edx 	      4989	eval.c	FUNCTION_79	IF_3
0x400447d	      0xe9fcfcffff	                           jmp 0x400417e	      4989	eval.c	FUNCTION_79	IF_3
0x4004482	            0x85d2	                           test edx, edx	      4941	eval.c	FUNCTION_78	IF_9
0x4004484	     0xf85b6fdffff	                           jne 0x4004240	      4941	eval.c	FUNCTION_78	IF_9
0x400448a	            0xebd9	                           jmp 0x4004465	      4941	eval.c	FUNCTION_78	IF_9
0x400448c	      0xe800000000	                          call 0x4004491	      5044	eval.c	FUNCTION_79
0x4004491	    0x41be04000000	                             mov r14d, 4	      4912	eval.c	FUNCTION_78	CALL_1
0x4004497	            0xeb85	                           jmp 0x400441e	      4912	eval.c	FUNCTION_78	CALL_1
call_func_retstr	functions,0:SWITCH,0:IF,1:DO,0:ELSE,0:WHILE,0:CALL,4:FOR,0	29
0x4005250	              0x53	                                push rbx	      1133	eval.c	FUNCTION_28
0x4005251	        0x4883ec20	                           sub rsp, 0x20	      1133	eval.c	FUNCTION_28
0x4005255	          0x4989e0	                             mov r8, rsp	      1138	eval.c	FUNCTION_28	IF_1	CALL_1
0x4005258	    0x64488b042528	                mov rax, qword fs:[0x28]	      1133	eval.c	FUNCTION_28
0x4005261	      0x4889442418	             mov qword [rsp + 0x18], rax	      1133	eval.c	FUNCTION_28
0x4005266	            0x31c0	                            xor eax, eax	      1133	eval.c	FUNCTION_28
0x4005268	      0xe8a3e1ffff	 call sym.call_vim_function.constprop.21	      1138	eval.c	FUNCTION_28	IF_1	CALL_1
0x400526d	            0x31d2	                            xor edx, edx	      1138	eval.c	FUNCTION_28	IF_1	CALL_1
0x400526f	            0x85c0	                           test eax, eax	      1138	eval.c	FUNCTION_28	IF_1	CALL_1
0x4005271	            0x742c	                            je 0x400529f	      1138	eval.c	FUNCTION_28	IF_1	CALL_1
0x4005273	      0xbe00000000	                              mov esi, 0	      7085	eval.c	FUNCTION_128	CALL_1
0x4005278	          0x4889e7	                            mov rdi, rsp	      7085	eval.c	FUNCTION_128	CALL_1
0x400527b	      0xe800000000	                          call 0x4005280	      7085	eval.c	FUNCTION_128	CALL_1
0x4005280	      0xbf00000000	                              mov edi, 0	      7087	eval.c	FUNCTION_128
0x4005285	          0x4885c0	                           test rax, rax	      7087	eval.c	FUNCTION_128
0x4005288	        0x480f45f8	                         cmovne rdi, rax	      7087	eval.c	FUNCTION_128
0x400528c	      0xe800000000	                          call 0x4005291	      1141	eval.c	FUNCTION_28	CALL_3
0x4005291	          0x4889e7	                            mov rdi, rsp	      1142	eval.c	FUNCTION_28	CALL_4
0x4005294	          0x4889c3	                            mov rbx, rax	      1141	eval.c	FUNCTION_28	CALL_3
0x4005297	      0xe800000000	                          call 0x400529c	      1142	eval.c	FUNCTION_28	CALL_4
0x400529c	          0x4889da	                            mov rdx, rbx	      1143	eval.c	FUNCTION_28
0x400529f	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      1144	eval.c	FUNCTION_28
0x40052a4	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1144	eval.c	FUNCTION_28
0x40052ad	          0x4889d0	                            mov rax, rdx	      1144	eval.c	FUNCTION_28
0x40052b0	            0x7506	                           jne 0x40052b8	      1144	eval.c	FUNCTION_28
0x40052b2	        0x4883c420	                           add rsp, 0x20	      1144	eval.c	FUNCTION_28
0x40052b6	              0x5b	                                 pop rbx	      1144	eval.c	FUNCTION_28
0x40052b7	              0xc3	                                     ret	      1144	eval.c	FUNCTION_28
0x40052b8	      0xe800000000	                          call 0x40052bd	      1144	eval.c	FUNCTION_28
do_unlet	functions,0:SWITCH,0:IF,9:DO,0:ELSE,2:WHILE,0:CALL,15:FOR,0	151
0x4007080	            0x4155	                                push r13	      2870	eval.c	FUNCTION_56
0x4007082	            0x4154	                                push r12	      2870	eval.c	FUNCTION_56
0x4007084	              0x55	                                push rbp	      2870	eval.c	FUNCTION_56
0x4007085	              0x53	                                push rbx	      2870	eval.c	FUNCTION_56
0x4007086	            0x89f5	                            mov ebp, esi	      2870	eval.c	FUNCTION_56
0x4007088	          0x4889fb	                            mov rbx, rdi	      2870	eval.c	FUNCTION_56
0x400708b	        0x4883ec28	                           sub rsp, 0x28	      2870	eval.c	FUNCTION_56
0x400708f	    0x64488b042528	                mov rax, qword fs:[0x28]	      2870	eval.c	FUNCTION_56
0x4007098	      0x4889442418	             mov qword [rsp + 0x18], rax	      2870	eval.c	FUNCTION_56
0x400709d	            0x31c0	                            xor eax, eax	      2870	eval.c	FUNCTION_56
0x400709f	           0xfb607	                   movzx eax, byte [rdi]	      7270	eval.c	FUNCTION_133	IF_1
0x40070a2	            0x84c0	                             test al, al	      7270	eval.c	FUNCTION_133	IF_1
0x40070a4	     0xf8486010000	                            je 0x4007230	      7270	eval.c	FUNCTION_133	IF_1
0x40070aa	        0x807f013a	                cmp byte [rdi + 1], 0x3a	      7272	eval.c	FUNCTION_133	IF_2
0x40070ae	     0xf849c000000	                            je 0x4007150	      7272	eval.c	FUNCTION_133	IF_2
0x40070b4	            0x3c3a	                            cmp al, 0x3a	      7275	eval.c	FUNCTION_133	IF_2	IF_3
0x40070b6	     0xf8474010000	                            je 0x4007230	      7275	eval.c	FUNCTION_133	IF_2	IF_3
0x40070bc	            0x3c23	                            cmp al, 0x23	      7275	eval.c	FUNCTION_133	IF_2	IF_3
0x40070be	     0xf846c010000	                            je 0x4007230	      7275	eval.c	FUNCTION_133	IF_2	IF_3
0x40070c4	      0x48897c2410	             mov qword [rsp + 0x10], rdi	      7277	eval.c	FUNCTION_133	IF_2
0x40070c9	          0x4889fe	                            mov rsi, rdi	      7280	eval.c	FUNCTION_133	IF_2	CALL_1
0x40070cc	      0xbf00000000	                              mov edi, 0	      7280	eval.c	FUNCTION_133	IF_2	CALL_1
0x40070d1	      0xe800000000	                          call 0x40070d6	      7280	eval.c	FUNCTION_133	IF_2	CALL_1
0x40070d6	        0x488b5008	                mov rdx, qword [rax + 8]	      7281	eval.c	FUNCTION_133	IF_2	IF_4	CALL_2
0x40070da	    0x4881fa000000	                              cmp rdx, 0	      7281	eval.c	FUNCTION_133	IF_2	IF_4	CALL_2
0x40070e1	     0xf8499010000	                            je 0x4007280	      7281	eval.c	FUNCTION_133	IF_2	IF_4	CALL_2
0x40070e7	          0x4885d2	                           test rdx, rdx	      7281	eval.c	FUNCTION_133	IF_2	IF_4	CALL_2
0x40070ea	      0xb800000000	                              mov eax, 0	      7282	eval.c	FUNCTION_133	IF_2	IF_4
0x40070ef	     0xf848b010000	                            je 0x4007280	      7281	eval.c	FUNCTION_133	IF_2	IF_4	CALL_2
0x40070f5	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      2878	eval.c	FUNCTION_56	IF_1
0x40070fa	      0x4889442408	                mov qword [rsp + 8], rax	      2877	eval.c	FUNCTION_56	CALL_1
0x40070ff	          0x803a00	                       cmp byte [rdx], 0	      2878	eval.c	FUNCTION_56	IF_1
0x4007102	            0x756a	                           jne 0x400716e	      2878	eval.c	FUNCTION_56	IF_1
0x4007104	            0x85ed	                           test ebp, ebp	      2913	eval.c	FUNCTION_56	IF_9
0x4007106	      0xb801000000	                              mov eax, 1	      2914	eval.c	FUNCTION_56	IF_9
0x400710b	            0x7423	                            je 0x4007130	      2913	eval.c	FUNCTION_56	IF_9
0x400710d	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2917	eval.c	FUNCTION_56
0x4007112	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2917	eval.c	FUNCTION_56
0x400711b	     0xf85d3010000	                           jne 0x40072f4	      2917	eval.c	FUNCTION_56
0x4007121	        0x4883c428	                           add rsp, 0x28	      2917	eval.c	FUNCTION_56
0x4007125	              0x5b	                                 pop rbx	      2917	eval.c	FUNCTION_56
0x4007126	              0x5d	                                 pop rbp	      2917	eval.c	FUNCTION_56
0x4007127	            0x415c	                                 pop r12	      2917	eval.c	FUNCTION_56
0x4007129	            0x415d	                                 pop r13	      2917	eval.c	FUNCTION_56
0x400712b	              0xc3	                                     ret	      2917	eval.c	FUNCTION_56
0x400712c	         0xf1f4000	                         nop dword [rax]	      2917	eval.c	FUNCTION_56
0x4007130	      0xba05000000	                              mov edx, 5	      2915	eval.c	FUNCTION_56	CALL_15
0x4007135	      0xbe00000000	                              mov esi, 0	      2915	eval.c	FUNCTION_56	CALL_15
0x400713a	            0x31ff	                            xor edi, edi	      2915	eval.c	FUNCTION_56	CALL_15
0x400713c	      0xe800000000	                          call 0x4007141	      2915	eval.c	FUNCTION_56	CALL_15
0x4007141	          0x4889de	                            mov rsi, rbx	      2915	eval.c	FUNCTION_56	CALL_15
0x4007144	          0x4889c7	                            mov rdi, rax	      2915	eval.c	FUNCTION_56	CALL_15
0x4007147	      0xe800000000	                          call 0x400714c	      2915	eval.c	FUNCTION_56	CALL_15
0x400714c	            0x31c0	                            xor eax, eax	      2916	eval.c	FUNCTION_56
0x400714e	            0xebbd	                           jmp 0x400710d	      2916	eval.c	FUNCTION_56
0x4007150	      0x488d742410	                   lea rsi, [rsp + 0x10]	      2916	eval.c	FUNCTION_56
0x4007155	      0xe80691ffff	             call sym.find_var_ht.part.5	      2916	eval.c	FUNCTION_56
0x400715a	          0x4885c0	                           test rax, rax	      2878	eval.c	FUNCTION_56	IF_1
0x400715d	      0x4889442408	                mov qword [rsp + 8], rax	      2877	eval.c	FUNCTION_56	CALL_1
0x4007162	            0x74a0	                            je 0x4007104	      2878	eval.c	FUNCTION_56	IF_1
0x4007164	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      2878	eval.c	FUNCTION_56	IF_1
0x4007169	          0x803a00	                       cmp byte [rdx], 0	      2878	eval.c	FUNCTION_56	IF_1
0x400716c	            0x7496	                            je 0x4007104	      2878	eval.c	FUNCTION_56	IF_1
0x400716e	          0x4889c7	                            mov rdi, rax	      2880	eval.c	FUNCTION_56	IF_1	CALL_2
0x4007171	      0xe800000000	                          call 0x4007176	      2880	eval.c	FUNCTION_56	IF_1	CALL_2
0x4007176	          0x4885c0	                           test rax, rax	      2881	eval.c	FUNCTION_56	IF_1	IF_2
0x4007179	          0x4989c4	                            mov r12, rax	      2880	eval.c	FUNCTION_56	IF_1	CALL_2
0x400717c	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2883	eval.c	FUNCTION_56	IF_1	IF_2	IF_3
0x4007181	     0xf84b9000000	                            je 0x4007240	      2881	eval.c	FUNCTION_56	IF_1	IF_2
0x4007187	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      2898	eval.c	FUNCTION_56	IF_1	CALL_5
0x400718c	      0xe800000000	                          call 0x4007191	      2898	eval.c	FUNCTION_56	IF_1	CALL_5
0x4007191	          0x4989c5	                            mov r13, rax	      2898	eval.c	FUNCTION_56	IF_1	CALL_5
0x4007194	        0x488b4008	                mov rax, qword [rax + 8]	      2899	eval.c	FUNCTION_56	IF_1	IF_6	CALL_6
0x4007198	    0x483d00000000	                              cmp rax, 0	      2899	eval.c	FUNCTION_56	IF_1	IF_6	CALL_6
0x400719e	     0xf84fc000000	                            je 0x40072a0	      2899	eval.c	FUNCTION_56	IF_1	IF_6	CALL_6
0x40071a4	          0x4885c0	                           test rax, rax	      2899	eval.c	FUNCTION_56	IF_1	IF_6	CALL_6
0x40071a7	     0xf84f3000000	                            je 0x40072a0	      2899	eval.c	FUNCTION_56	IF_1	IF_6	CALL_6
0x40071ad	    0x483d00000000	                              cmp rax, 0	      2901	eval.c	FUNCTION_56	IF_1	IF_7	CALL_8
0x40071b3	     0xf844bffffff	                            je 0x4007104	      2901	eval.c	FUNCTION_56	IF_1	IF_7	CALL_8
0x40071b9	          0x4885c0	                           test rax, rax	      2901	eval.c	FUNCTION_56	IF_1	IF_7	CALL_8
0x40071bc	     0xf8442ffffff	                            je 0x4007104	      2901	eval.c	FUNCTION_56	IF_1	IF_7	CALL_8
0x40071c2	         0xfb678ff	               movzx edi, byte [rax - 1]	      2904	eval.c	FUNCTION_56	IF_1	IF_7	IF_8	CALL_10
0x40071c6	      0xba05000000	                              mov edx, 5	      7657	eval.c	FUNCTION_145	IF_1	CALL_2
0x40071cb	      0xbe00000000	                              mov esi, 0	      7657	eval.c	FUNCTION_145	IF_1	CALL_2
0x40071d0	        0x40f6c704	                             test dil, 4	      7655	eval.c	FUNCTION_145	IF_1
0x40071d4	     0xf8560ffffff	                           jne 0x400713a	      7655	eval.c	FUNCTION_145	IF_1
0x40071da	            0x31d2	                            xor edx, edx	      2905	eval.c	FUNCTION_56	IF_1	IF_7	IF_8	CALL_11
0x40071dc	          0x4889de	                            mov rsi, rbx	      2905	eval.c	FUNCTION_56	IF_1	IF_7	IF_8	CALL_11
0x40071df	      0xe800000000	                          call 0x40071e4	      2905	eval.c	FUNCTION_56	IF_1	IF_7	IF_8	CALL_11
0x40071e4	            0x85c0	                           test eax, eax	      2905	eval.c	FUNCTION_56	IF_1	IF_7	IF_8	CALL_11
0x40071e6	     0xf8560ffffff	                           jne 0x400714c	      2905	eval.c	FUNCTION_56	IF_1	IF_7	IF_8	CALL_11
0x40071ec	      0x410fbe3c24	                   movsx edi, byte [r12]	      2906	eval.c	FUNCTION_56	IF_1	IF_7	IF_8	CALL_12
0x40071f1	          0x4889de	                            mov rsi, rbx	      2906	eval.c	FUNCTION_56	IF_1	IF_7	IF_8	CALL_12
0x40071f4	      0xe89791ffff	     call sym.tv_check_lock.constprop.25	      2906	eval.c	FUNCTION_56	IF_1	IF_7	IF_8	CALL_12
0x40071f9	            0x85c0	                           test eax, eax	      2906	eval.c	FUNCTION_56	IF_1	IF_7	IF_8	CALL_12
0x40071fb	     0xf854bffffff	                           jne 0x400714c	      2906	eval.c	FUNCTION_56	IF_1	IF_7	IF_8	CALL_12
0x4007201	        0x498b5d08	                mov rbx, qword [r13 + 8]	      7447	eval.c	FUNCTION_140	CALL_1
0x4007205	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      7449	eval.c	FUNCTION_140	CALL_2
0x400720a	          0x4c89ee	                            mov rsi, r13	      7449	eval.c	FUNCTION_140	CALL_2
0x400720d	        0x4883eb11	                           sub rbx, 0x11	      7450	eval.c	FUNCTION_140	CALL_3
0x4007211	      0xe800000000	                          call 0x4007216	      7449	eval.c	FUNCTION_140	CALL_2
0x4007216	          0x4889df	                            mov rdi, rbx	      7450	eval.c	FUNCTION_140	CALL_3
0x4007219	      0xe800000000	                          call 0x400721e	      7450	eval.c	FUNCTION_140	CALL_3
0x400721e	          0x4889df	                            mov rdi, rbx	      7451	eval.c	FUNCTION_140	CALL_4
0x4007221	      0xe800000000	                          call 0x4007226	      7451	eval.c	FUNCTION_140	CALL_4
0x4007226	      0xb801000000	                              mov eax, 1	      2910	eval.c	FUNCTION_56	IF_1	IF_7
0x400722b	      0xe9ddfeffff	                           jmp 0x400710d	      2910	eval.c	FUNCTION_56	IF_1	IF_7
0x4007230	    0x48c744240800	                  mov qword [rsp + 8], 0	      2877	eval.c	FUNCTION_56	CALL_1
0x4007239	      0xe9c6feffff	                           jmp 0x4007104	      2877	eval.c	FUNCTION_56	CALL_1
0x400723e	            0x6690	                                     nop	      2877	eval.c	FUNCTION_56	CALL_1
0x4007240	    0x4881ff000000	                              cmp rdi, 0	      2883	eval.c	FUNCTION_56	IF_1	IF_2	IF_3
0x4007247	     0xf848b000000	                            je 0x40072d8	      2883	eval.c	FUNCTION_56	IF_1	IF_2	IF_3
0x400724d	    0x4881ff000000	                              cmp rdi, 0	      2885	eval.c	FUNCTION_56	IF_1	IF_2	ELSE_1	IF_4
0x4007254	            0x7472	                            je 0x40072c8	      2885	eval.c	FUNCTION_56	IF_1	IF_2	ELSE_1	IF_4
0x4007256	           0xfb633	                   movzx esi, byte [rbx]	      2889	eval.c	FUNCTION_56	IF_1	IF_2	ELSE_2	CALL_3
0x4007259	            0x31c9	                            xor ecx, ecx	      2889	eval.c	FUNCTION_56	IF_1	IF_2	ELSE_2	CALL_3
0x400725b	      0xba00000000	                              mov edx, 0	      2889	eval.c	FUNCTION_56	IF_1	IF_2	ELSE_2	CALL_3
0x4007260	      0xe800000000	                          call 0x4007265	      2889	eval.c	FUNCTION_56	IF_1	IF_2	ELSE_2	CALL_3
0x4007265	          0x4885c0	                           test rax, rax	      2890	eval.c	FUNCTION_56	IF_1	IF_2	ELSE_2
0x4007268	            0x7479	                            je 0x40072e3	      2890	eval.c	FUNCTION_56	IF_1	IF_2	ELSE_2
0x400726a	        0x4c8b6008	                mov r12, qword [rax + 8]	      2890	eval.c	FUNCTION_56	IF_1	IF_2	ELSE_2
0x400726e	          0x4d85e4	                           test r12, r12	      2892	eval.c	FUNCTION_56	IF_1	IF_2	IF_5
0x4007271	            0x7470	                            je 0x40072e3	      2892	eval.c	FUNCTION_56	IF_1	IF_2	IF_5
0x4007273	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2892	eval.c	FUNCTION_56	IF_1	IF_2	IF_5
0x4007278	      0xe90affffff	                           jmp 0x4007187	      2892	eval.c	FUNCTION_56	IF_1	IF_2	IF_5
0x400727d	           0xf1f00	                         nop dword [rax]	      2892	eval.c	FUNCTION_56	IF_1	IF_2	IF_5
0x4007280	      0xe800000000	                          call 0x4007285	      7284	eval.c	FUNCTION_133	IF_2	CALL_3
0x4007285	      0xbf00000000	                              mov edi, 0	      7286	eval.c	FUNCTION_133	IF_2	IF_5
0x400728a	          0x4885c0	                           test rax, rax	      7286	eval.c	FUNCTION_133	IF_2	IF_5
0x400728d	        0x480f44c7	                          cmove rax, rdi	      7286	eval.c	FUNCTION_133	IF_2	IF_5
0x4007291	      0xe95ffeffff	                           jmp 0x40070f5	      7286	eval.c	FUNCTION_133	IF_2	IF_5
0x4007296	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      7286	eval.c	FUNCTION_133	IF_2	IF_5
0x40072a0	      0x488d742408	                      lea rsi, [rsp + 8]	      2900	eval.c	FUNCTION_56	IF_1	CALL_7
0x40072a5	          0x4889df	                            mov rdi, rbx	      2900	eval.c	FUNCTION_56	IF_1	CALL_7
0x40072a8	      0xe800000000	                          call 0x40072ad	      2900	eval.c	FUNCTION_56	IF_1	CALL_7
0x40072ad	          0x4885c0	                           test rax, rax	      2901	eval.c	FUNCTION_56	IF_1	IF_7	CALL_8
0x40072b0	          0x4989c5	                            mov r13, rax	      2900	eval.c	FUNCTION_56	IF_1	CALL_7
0x40072b3	     0xf844bfeffff	                            je 0x4007104	      2901	eval.c	FUNCTION_56	IF_1	IF_7	CALL_8
0x40072b9	        0x488b4008	                mov rax, qword [rax + 8]	      2901	eval.c	FUNCTION_56	IF_1	IF_7	CALL_8
0x40072bd	      0xe9ebfeffff	                           jmp 0x40071ad	      2901	eval.c	FUNCTION_56	IF_1	IF_7	CALL_8
0x40072c2	    0x660f1f440000	                    nop word [rax + rax]	      2901	eval.c	FUNCTION_56	IF_1	IF_7	CALL_8
0x40072c8	    0x41bc00000000	                             mov r12d, 0	      2886	eval.c	FUNCTION_56	IF_1	IF_2	ELSE_1	IF_4
0x40072ce	      0xe9b4feffff	                           jmp 0x4007187	      2886	eval.c	FUNCTION_56	IF_1	IF_2	ELSE_1	IF_4
0x40072d3	       0xf1f440000	                   nop dword [rax + rax]	      2886	eval.c	FUNCTION_56	IF_1	IF_2	ELSE_1	IF_4
0x40072d8	    0x41bc00000000	                             mov r12d, 0	      2884	eval.c	FUNCTION_56	IF_1	IF_2	IF_3
0x40072de	      0xe9a4feffff	                           jmp 0x4007187	      2884	eval.c	FUNCTION_56	IF_1	IF_2	IF_3
0x40072e3	      0xbf00000000	                              mov edi, 0	      2894	eval.c	FUNCTION_56	IF_1	IF_2	IF_5	CALL_4
0x40072e8	      0xe800000000	                          call 0x40072ed	      2894	eval.c	FUNCTION_56	IF_1	IF_2	IF_5	CALL_4
0x40072ed	            0x31c0	                            xor eax, eax	      2895	eval.c	FUNCTION_56	IF_1	IF_2	IF_5
0x40072ef	      0xe919feffff	                           jmp 0x400710d	      2895	eval.c	FUNCTION_56	IF_1	IF_2	IF_5
0x40072f4	      0xe800000000	                          call 0x40072f9	      2917	eval.c	FUNCTION_56
set_vim_var_char	functions,0:SWITCH,0:IF,1:DO,0:ELSE,1:WHILE,0:CALL,1:FOR,0	31
0x40032d0	              0x53	                                push rbx	      6433	eval.c	FUNCTION_107
0x40032d1	        0x4883ec20	                           sub rsp, 0x20	      6433	eval.c	FUNCTION_107
0x40032d5	    0x64488b042528	                mov rax, qword fs:[0x28]	      6433	eval.c	FUNCTION_107
0x40032de	      0x4889442418	             mov qword [rsp + 0x18], rax	      6433	eval.c	FUNCTION_107
0x40032e3	            0x31c0	                            xor eax, eax	      6433	eval.c	FUNCTION_107
0x40032e5	    0x8b0500000000	            mov eax, dword [0x040032eb] 	      6437	eval.c	FUNCTION_107	IF_1
0x40032eb	            0x85c0	                           test eax, eax	      6437	eval.c	FUNCTION_107	IF_1
0x40032ed	            0x7549	                           jne 0x4003338	      6437	eval.c	FUNCTION_107	IF_1
0x40032ef	        0x40883c24	                     mov byte [rsp], dil	      6442	eval.c	FUNCTION_107	ELSE_1
0x40032f3	      0xc644240100	                   mov byte [rsp + 1], 0	      6443	eval.c	FUNCTION_107	ELSE_1
0x40032f8	          0x4889e3	                            mov rbx, rsp	      6443	eval.c	FUNCTION_107	ELSE_1
0x40032fb	      0xbf00000000	                              mov edi, 0	      6473	eval.c	FUNCTION_109	CALL_1
0x4003300	      0xe800000000	                          call 0x4003305	      6473	eval.c	FUNCTION_109	CALL_1
0x4003305	          0x4889df	                            mov rdi, rbx	      6478	eval.c	FUNCTION_109	ELSE_1	IF_2
0x4003308	    0xc70500000000	               mov dword [0x04003312], 2	      6474	eval.c	FUNCTION_109
0x4003312	      0xe800000000	                          call 0x4003317	      6478	eval.c	FUNCTION_109	ELSE_1	IF_2
0x4003317	    0x488905000000	            mov qword [0x0400331e], rax 	      6478	eval.c	FUNCTION_109	ELSE_1	IF_2
0x400331e	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      6446	eval.c	FUNCTION_107
0x4003323	    0x644833042528	                xor rax, qword fs:[0x28]	      6446	eval.c	FUNCTION_107
0x400332c	            0x751e	                           jne 0x400334c	      6446	eval.c	FUNCTION_107
0x400332e	        0x4883c420	                           add rsp, 0x20	      6446	eval.c	FUNCTION_107
0x4003332	              0x5b	                                 pop rbx	      6446	eval.c	FUNCTION_107
0x4003333	              0xc3	                                     ret	      6446	eval.c	FUNCTION_107
0x4003334	         0xf1f4000	                         nop dword [rax]	      6446	eval.c	FUNCTION_107
0x4003338	          0x4889e6	                            mov rsi, rsp	      6438	eval.c	FUNCTION_107	IF_1
0x400333b	          0x4889e3	                            mov rbx, rsp	      6438	eval.c	FUNCTION_107	IF_1
0x400333e	    0xff1500000000	                 call qword [0x04003344]	      6438	eval.c	FUNCTION_107	IF_1
0x4003344	            0x4898	                                    cdqe	      6438	eval.c	FUNCTION_107	IF_1
0x4003346	        0xc6040400	                 mov byte [rsp + rax], 0	      6438	eval.c	FUNCTION_107	IF_1
0x400334a	            0xebaf	                           jmp 0x40032fb	      6438	eval.c	FUNCTION_107	IF_1
0x400334c	      0xe800000000	                          call 0x4003351	      6446	eval.c	FUNCTION_107
get_id_len	functions,0:SWITCH,0:IF,3:DO,0:ELSE,0:WHILE,0:CALL,3:FOR,1	52
0x40025a0	            0x4154	                                push r12	      6103	eval.c	FUNCTION_96
0x40025a2	              0x55	                                push rbp	      6103	eval.c	FUNCTION_96
0x40025a3	          0x4989fc	                            mov r12, rdi	      6103	eval.c	FUNCTION_96
0x40025a6	              0x53	                                push rbx	      6103	eval.c	FUNCTION_96
0x40025a7	          0x488b1f	                    mov rbx, qword [rdi]	      6108	eval.c	FUNCTION_96	FOR_1	CALL_1
0x40025aa	    0x48bd01e0ff00	          movabs rbp, 0x1000000000ffe001	      6366	eval.c	FUNCTION_100	CALL_1
0x40025b4	          0x4889d9	                            mov rcx, rbx	      6108	eval.c	FUNCTION_96	FOR_1	CALL_1
0x40025b7	    0x660f1f840000	                    nop word [rax + rax]	      6108	eval.c	FUNCTION_96	FOR_1	CALL_1
0x40025c0	           0xfb613	                   movzx edx, byte [rbx]	      6108	eval.c	FUNCTION_96	FOR_1	CALL_1
0x40025c3	            0x89d0	                            mov eax, edx	      6366	eval.c	FUNCTION_100	CALL_1
0x40025c5	          0x83e0df	                     and eax, 0xffffffdf	      6366	eval.c	FUNCTION_100	CALL_1
0x40025c8	          0x83e841	                           sub eax, 0x41	      6366	eval.c	FUNCTION_100	CALL_1
0x40025cb	            0x3c19	                            cmp al, 0x19	      6366	eval.c	FUNCTION_100	CALL_1
0x40025cd	            0x7637	                           jbe 0x4002606	      6366	eval.c	FUNCTION_100	CALL_1
0x40025cf	          0x8d42dd	                   lea eax, [rdx - 0x23]	      6366	eval.c	FUNCTION_100	CALL_1
0x40025d2	            0x3c3c	                            cmp al, 0x3c	      6366	eval.c	FUNCTION_100	CALL_1
0x40025d4	            0x762a	                           jbe 0x4002600	      6366	eval.c	FUNCTION_100	CALL_1
0x40025d6	            0x31c0	                            xor eax, eax	      6121	eval.c	FUNCTION_96	IF_3
0x40025d8	          0x4839cb	                            cmp rbx, rcx	      6120	eval.c	FUNCTION_96	IF_3
0x40025db	            0x7414	                            je 0x40025f1	      6120	eval.c	FUNCTION_96	IF_3
0x40025dd	          0x4889dd	                            mov rbp, rbx	      6123	eval.c	FUNCTION_96
0x40025e0	          0x4889df	                            mov rdi, rbx	      6124	eval.c	FUNCTION_96	CALL_3
0x40025e3	          0x4829cd	                            sub rbp, rcx	      6123	eval.c	FUNCTION_96
0x40025e6	      0xe800000000	                          call 0x40025eb	      6124	eval.c	FUNCTION_96	CALL_3
0x40025eb	        0x49890424	                    mov qword [r12], rax	      6124	eval.c	FUNCTION_96	CALL_3
0x40025ef	            0x89e8	                            mov eax, ebp	      6126	eval.c	FUNCTION_96
0x40025f1	              0x5b	                                 pop rbx	      6127	eval.c	FUNCTION_96
0x40025f2	              0x5d	                                 pop rbp	      6127	eval.c	FUNCTION_96
0x40025f3	            0x415c	                                 pop r12	      6127	eval.c	FUNCTION_96
0x40025f5	              0xc3	                                     ret	      6127	eval.c	FUNCTION_96
0x40025f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      6127	eval.c	FUNCTION_96
0x4002600	        0x480fa3c5	                             bt rbp, rax	      6366	eval.c	FUNCTION_100	CALL_1
0x4002604	            0x73d0	                           jae 0x40025d6	      6366	eval.c	FUNCTION_100	CALL_1
0x4002606	          0x80fa3a	                            cmp dl, 0x3a	      6110	eval.c	FUNCTION_96	FOR_1	IF_1
0x4002609	            0x740d	                            je 0x4002618	      6110	eval.c	FUNCTION_96	FOR_1	IF_1
0x400260b	        0x4883c301	                              add rbx, 1	      6108	eval.c	FUNCTION_96	FOR_1	CALL_1
0x400260f	            0xebaf	                           jmp 0x40025c0	      6108	eval.c	FUNCTION_96	FOR_1	CALL_1
0x4002611	     0xf1f80000000	                         nop dword [rax]	      6108	eval.c	FUNCTION_96	FOR_1	CALL_1
0x4002618	          0x4889d8	                            mov rax, rbx	      6114	eval.c	FUNCTION_96	FOR_1	IF_1
0x400261b	          0x4829c8	                            sub rax, rcx	      6114	eval.c	FUNCTION_96	FOR_1	IF_1
0x400261e	          0x83f801	                              cmp eax, 1	      6115	eval.c	FUNCTION_96	FOR_1	IF_1	IF_2	CALL_2
0x4002621	            0x740d	                            je 0x4002630	      6115	eval.c	FUNCTION_96	FOR_1	IF_1	IF_2	CALL_2
0x4002623	            0x7ee6	                           jle 0x400260b	      6116	eval.c	FUNCTION_96	FOR_1	IF_1	IF_2
0x4002625	            0xebaf	                           jmp 0x40025d6	      6116	eval.c	FUNCTION_96	FOR_1	IF_1	IF_2
0x4002627	    0x660f1f840000	                    nop word [rax + rax]	      6116	eval.c	FUNCTION_96	FOR_1	IF_1	IF_2
0x4002630	           0xfb631	                   movzx esi, byte [rcx]	      6115	eval.c	FUNCTION_96	FOR_1	IF_1	IF_2	CALL_2
0x4002633	      0xbf00000000	                              mov edi, 0	      6115	eval.c	FUNCTION_96	FOR_1	IF_1	IF_2	CALL_2
0x4002638	      0xe800000000	                          call 0x400263d	      6115	eval.c	FUNCTION_96	FOR_1	IF_1	IF_2	CALL_2
0x400263d	          0x4885c0	                           test rax, rax	      6115	eval.c	FUNCTION_96	FOR_1	IF_1	IF_2	CALL_2
0x4002640	        0x498b0c24	                    mov rcx, qword [r12]	      6115	eval.c	FUNCTION_96	FOR_1	IF_1	IF_2	CALL_2
0x4002644	            0x75c5	                           jne 0x400260b	      6115	eval.c	FUNCTION_96	FOR_1	IF_1	IF_2	CALL_2
0x4002646	            0xeb8e	                           jmp 0x40025d6	      6115	eval.c	FUNCTION_96	FOR_1	IF_1	IF_2	CALL_2
ex_echohl	functions,0:SWITCH,0:IF,0:DO,0:ELSE,0:WHILE,0:CALL,1:FOR,0	6
0x4006950	        0x4883ec08	                              sub rsp, 8	      8112	eval.c	FUNCTION_153
0x4006954	          0x488b3f	                    mov rdi, qword [rdi]	      8113	eval.c	FUNCTION_153	CALL_1
0x4006957	      0xe800000000	                          call 0x400695c	      8113	eval.c	FUNCTION_153	CALL_1
0x400695c	    0x890500000000	            mov dword [0x04006962], eax 	      8113	eval.c	FUNCTION_153	CALL_1
0x4006962	        0x4883c408	                              add rsp, 8	      8114	eval.c	FUNCTION_153
0x4006966	              0xc3	                                     ret	      8114	eval.c	FUNCTION_153
eval_to_string_skip	functions,0:SWITCH,0:IF,3:DO,0:ELSE,1:WHILE,0:CALL,4:FOR,0	42
0x400adf0	              0x53	                                push rbx	       769	eval.c	FUNCTION_16
0x400adf1	        0x4883ec20	                           sub rsp, 0x20	       769	eval.c	FUNCTION_16
0x400adf5	    0x64488b042528	                mov rax, qword fs:[0x28]	       769	eval.c	FUNCTION_16
0x400adfe	      0x4889442418	             mov qword [rsp + 0x18], rax	       769	eval.c	FUNCTION_16
0x400ae03	            0x31c0	                            xor eax, eax	       769	eval.c	FUNCTION_16
0x400ae05	            0x85d2	                           test edx, edx	       773	eval.c	FUNCTION_16	IF_1
0x400ae07	            0x7557	                           jne 0x400ae60	       773	eval.c	FUNCTION_16	IF_1
0x400ae09	          0x4889f2	                            mov rdx, rsi	       775	eval.c	FUNCTION_16	IF_2	CALL_1
0x400ae0c	      0xb901000000	                              mov ecx, 1	       775	eval.c	FUNCTION_16	IF_2	CALL_1
0x400ae11	          0x4889e6	                            mov rsi, rsp	       775	eval.c	FUNCTION_16	IF_2	CALL_1
0x400ae14	      0xe800000000	                          call 0x400ae19	       775	eval.c	FUNCTION_16	IF_2	CALL_1
0x400ae19	            0x85c0	                           test eax, eax	       775	eval.c	FUNCTION_16	IF_2	CALL_1
0x400ae1b	            0x7467	                            je 0x400ae84	       775	eval.c	FUNCTION_16	IF_2	CALL_1
0x400ae1d	      0xbe00000000	                              mov esi, 0	      7085	eval.c	FUNCTION_128	CALL_1
0x400ae22	          0x4889e7	                            mov rdi, rsp	      7085	eval.c	FUNCTION_128	CALL_1
0x400ae25	      0xe800000000	                          call 0x400ae2a	      7085	eval.c	FUNCTION_128	CALL_1
0x400ae2a	      0xbf00000000	                              mov edi, 0	      7087	eval.c	FUNCTION_128
0x400ae2f	          0x4885c0	                           test rax, rax	      7087	eval.c	FUNCTION_128
0x400ae32	        0x480f45f8	                         cmovne rdi, rax	      7087	eval.c	FUNCTION_128
0x400ae36	      0xe800000000	                          call 0x400ae3b	       779	eval.c	FUNCTION_16	ELSE_1	CALL_3
0x400ae3b	          0x4889e7	                            mov rdi, rsp	       780	eval.c	FUNCTION_16	ELSE_1	CALL_4
0x400ae3e	          0x4889c3	                            mov rbx, rax	       779	eval.c	FUNCTION_16	ELSE_1	CALL_3
0x400ae41	      0xe800000000	                          call 0x400ae46	       780	eval.c	FUNCTION_16	ELSE_1	CALL_4
0x400ae46	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       786	eval.c	FUNCTION_16
0x400ae4b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       786	eval.c	FUNCTION_16
0x400ae54	          0x4889d8	                            mov rax, rbx	       786	eval.c	FUNCTION_16
0x400ae57	            0x7526	                           jne 0x400ae7f	       786	eval.c	FUNCTION_16
0x400ae59	        0x4883c420	                           add rsp, 0x20	       786	eval.c	FUNCTION_16
0x400ae5d	              0x5b	                                 pop rbx	       786	eval.c	FUNCTION_16
0x400ae5e	              0xc3	                                     ret	       786	eval.c	FUNCTION_16
0x400ae5f	              0x90	                                     nop	       786	eval.c	FUNCTION_16
0x400ae60	          0x4889f2	                            mov rdx, rsi	       775	eval.c	FUNCTION_16	IF_2	CALL_1
0x400ae63	            0x31c9	                            xor ecx, ecx	       775	eval.c	FUNCTION_16	IF_2	CALL_1
0x400ae65	          0x4889e6	                            mov rsi, rsp	       775	eval.c	FUNCTION_16	IF_2	CALL_1
0x400ae68	    0x830500000000	               add dword [0x0400ae6f], 1	       774	eval.c	FUNCTION_16	IF_1
0x400ae6f	            0x31db	                            xor ebx, ebx	       783	eval.c	FUNCTION_16	IF_3
0x400ae71	      0xe800000000	                          call 0x400ae76	       775	eval.c	FUNCTION_16	IF_2	CALL_1
0x400ae76	    0x832d00000000	               sub dword [0x0400ae7d], 1	       783	eval.c	FUNCTION_16	IF_3
0x400ae7d	            0xebc7	                           jmp 0x400ae46	       783	eval.c	FUNCTION_16	IF_3
0x400ae7f	      0xe800000000	                          call 0x400ae84	       786	eval.c	FUNCTION_16
0x400ae84	            0x31db	                            xor ebx, ebx	       776	eval.c	FUNCTION_16	IF_2
0x400ae86	            0xebbe	                           jmp 0x400ae46	       776	eval.c	FUNCTION_16	IF_2
assert_equal_common	functions,0:SWITCH,0:IF,1:DO,0:ELSE,0:WHILE,0:CALL,5:FOR,0	62
0x4008b00	            0x4154	                                push r12	      8820	eval.c	FUNCTION_170
0x4008b02	              0x55	                                push rbp	      8820	eval.c	FUNCTION_170
0x4008b03	        0x488d6f10	                   lea rbp, [rdi + 0x10]	      8823	eval.c	FUNCTION_170	IF_1	CALL_1
0x4008b07	              0x53	                                push rbx	      8820	eval.c	FUNCTION_170
0x4008b08	            0x31c9	                            xor ecx, ecx	      8823	eval.c	FUNCTION_170	IF_1	CALL_1
0x4008b0a	            0x31d2	                            xor edx, edx	      8823	eval.c	FUNCTION_170	IF_1	CALL_1
0x4008b0c	          0x4189f4	                           mov r12d, esi	      8820	eval.c	FUNCTION_170
0x4008b0f	          0x4889ee	                            mov rsi, rbp	      8823	eval.c	FUNCTION_170	IF_1	CALL_1
0x4008b12	          0x4889fb	                            mov rbx, rdi	      8820	eval.c	FUNCTION_170
0x4008b15	        0x4883ec20	                           sub rsp, 0x20	      8820	eval.c	FUNCTION_170
0x4008b19	    0x64488b042528	                mov rax, qword fs:[0x28]	      8820	eval.c	FUNCTION_170
0x4008b22	      0x4889442418	             mov qword [rsp + 0x18], rax	      8820	eval.c	FUNCTION_170
0x4008b27	            0x31c0	                            xor eax, eax	      8820	eval.c	FUNCTION_170
0x4008b29	      0xe800000000	                          call 0x4008b2e	      8823	eval.c	FUNCTION_170	IF_1	CALL_1
0x4008b2e	            0x31c9	                            xor ecx, ecx	      8823	eval.c	FUNCTION_170	IF_1	CALL_1
0x4008b30	          0x4585e4	                         test r12d, r12d	      8823	eval.c	FUNCTION_170	IF_1	CALL_1
0x4008b33	           0xf94c1	                                 sete cl	      8823	eval.c	FUNCTION_170	IF_1	CALL_1
0x4008b36	            0x31d2	                            xor edx, edx	      8823	eval.c	FUNCTION_170	IF_1	CALL_1
0x4008b38	            0x39c8	                            cmp eax, ecx	      8823	eval.c	FUNCTION_170	IF_1	CALL_1
0x4008b3a	            0x7476	                            je 0x4008bb2	      8823	eval.c	FUNCTION_170	IF_1	CALL_1
0x4008b3c	          0x4889e7	                            mov rdi, rsp	      8826	eval.c	FUNCTION_170	IF_1	CALL_2
0x4008b3f	      0xe800000000	                          call 0x4008b44	      8826	eval.c	FUNCTION_170	IF_1	CALL_2
0x4008b44	        0x488d7320	                   lea rsi, [rbx + 0x20]	      8827	eval.c	FUNCTION_170	IF_1	CALL_3
0x4008b48	          0x4589e0	                           mov r8d, r12d	      8827	eval.c	FUNCTION_170	IF_1	CALL_3
0x4008b4b	          0x4889e9	                            mov rcx, rbp	      8827	eval.c	FUNCTION_170	IF_1	CALL_3
0x4008b4e	          0x4889da	                            mov rdx, rbx	      8827	eval.c	FUNCTION_170	IF_1	CALL_3
0x4008b51	          0x4889e7	                            mov rdi, rsp	      8827	eval.c	FUNCTION_170	IF_1	CALL_3
0x4008b54	      0xe877c1ffff	 call sym.fill_assert_error.constprop.18	      8827	eval.c	FUNCTION_170	IF_1	CALL_3
0x4008b59	    0x833d00000000	               cmp dword [0x04008b60], 5	      8812	eval.c	FUNCTION_169	IF_1
0x4008b60	            0x746e	                            je 0x4008bd0	      8812	eval.c	FUNCTION_169	IF_1
0x4008b62	      0xe800000000	                          call 0x4008b67	      8814	eval.c	FUNCTION_169	CALL_2
0x4008b67	      0xbf00000000	                              mov edi, 0	      6489	eval.c	FUNCTION_110	CALL_1
0x4008b6c	          0x4889c3	                            mov rbx, rax	      8814	eval.c	FUNCTION_169	CALL_2
0x4008b6f	      0xe800000000	                          call 0x4008b74	      6489	eval.c	FUNCTION_110	CALL_1
0x4008b74	          0x4885db	                           test rbx, rbx	      6492	eval.c	FUNCTION_110	IF_1
0x4008b77	    0xc70500000000	               mov dword [0x04008b81], 5	      6490	eval.c	FUNCTION_110
0x4008b81	    0x48891d000000	            mov qword [0x04008b88], rbx 	      6491	eval.c	FUNCTION_110
0x4008b88	            0x740b	                            je 0x4008b95	      6492	eval.c	FUNCTION_110	IF_1
0x4008b8a	        0x83433801	               add dword [rbx + 0x38], 1	      6493	eval.c	FUNCTION_110	IF_1
0x4008b8e	    0x488b1d000000	            mov rbx, qword [0x04008b95] 	      6493	eval.c	FUNCTION_110	IF_1
0x4008b95	          0x8b1424	                    mov edx, dword [rsp]	      8815	eval.c	FUNCTION_169	CALL_3
0x4008b98	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      8815	eval.c	FUNCTION_169	CALL_3
0x4008b9d	          0x4889df	                            mov rdi, rbx	      8815	eval.c	FUNCTION_169	CALL_3
0x4008ba0	      0xe800000000	                          call 0x4008ba5	      8815	eval.c	FUNCTION_169	CALL_3
0x4008ba5	          0x4889e7	                            mov rdi, rsp	      8830	eval.c	FUNCTION_170	IF_1	CALL_5
0x4008ba8	      0xe800000000	                          call 0x4008bad	      8830	eval.c	FUNCTION_170	IF_1	CALL_5
0x4008bad	      0xba01000000	                              mov edx, 1	      8831	eval.c	FUNCTION_170	IF_1
0x4008bb2	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      8834	eval.c	FUNCTION_170
0x4008bb7	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      8834	eval.c	FUNCTION_170
0x4008bc0	            0x89d0	                            mov eax, edx	      8834	eval.c	FUNCTION_170
0x4008bc2	            0x751a	                           jne 0x4008bde	      8834	eval.c	FUNCTION_170
0x4008bc4	        0x4883c420	                           add rsp, 0x20	      8834	eval.c	FUNCTION_170
0x4008bc8	              0x5b	                                 pop rbx	      8834	eval.c	FUNCTION_170
0x4008bc9	              0x5d	                                 pop rbp	      8834	eval.c	FUNCTION_170
0x4008bca	            0x415c	                                 pop r12	      8834	eval.c	FUNCTION_170
0x4008bcc	              0xc3	                                     ret	      8834	eval.c	FUNCTION_170
0x4008bcd	           0xf1f00	                         nop dword [rax]	      8834	eval.c	FUNCTION_170
0x4008bd0	    0x488b1d000000	            mov rbx, qword [0x04008bd7] 	      8812	eval.c	FUNCTION_169	IF_1
0x4008bd7	          0x4885db	                           test rbx, rbx	      8812	eval.c	FUNCTION_169	IF_1
0x4008bda	            0x75b9	                           jne 0x4008b95	      8812	eval.c	FUNCTION_169	IF_1
0x4008bdc	            0xeb84	                           jmp 0x4008b62	      8812	eval.c	FUNCTION_169	IF_1
0x4008bde	      0xe800000000	                          call 0x4008be3	      8834	eval.c	FUNCTION_170
list2fpos	functions,0:SWITCH,0:IF,8:DO,0:ELSE,1:WHILE,0:CALL,5:FOR,0	90
0x4002460	            0x4157	                                push r15	      6028	eval.c	FUNCTION_94
0x4002462	            0x4156	                                push r14	      6028	eval.c	FUNCTION_94
0x4002464	            0x4155	                                push r13	      6028	eval.c	FUNCTION_94
0x4002466	            0x4154	                                push r12	      6028	eval.c	FUNCTION_94
0x4002468	              0x55	                                push rbp	      6028	eval.c	FUNCTION_94
0x4002469	              0x53	                                push rbx	      6028	eval.c	FUNCTION_94
0x400246a	        0x4883ec08	                              sub rsp, 8	      6028	eval.c	FUNCTION_94
0x400246e	          0x833f05	                      cmp dword [rdi], 5	      6036	eval.c	FUNCTION_94	IF_1
0x4002471	        0x488b5f08	                mov rbx, qword [rdi + 8]	      6029	eval.c	FUNCTION_94
0x4002475	     0xf85d5000000	                           jne 0x4002550	      6036	eval.c	FUNCTION_94	IF_1
0x400247b	          0x4885db	                           test rbx, rbx	      6036	eval.c	FUNCTION_94	IF_1
0x400247e	     0xf84cc000000	                            je 0x4002550	      6036	eval.c	FUNCTION_94	IF_1
0x4002484	          0x4885d2	                           test rdx, rdx	      6037	eval.c	FUNCTION_94	IF_1
0x4002487	          0x4989cc	                            mov r12, rcx	      6037	eval.c	FUNCTION_94	IF_1
0x400248a	          0x4889d5	                            mov rbp, rdx	      6037	eval.c	FUNCTION_94	IF_1
0x400248d	          0x4989f5	                            mov r13, rsi	      6037	eval.c	FUNCTION_94	IF_1
0x4002490	          0x8b433c	            mov eax, dword [rbx + 0x3c] 	      6037	eval.c	FUNCTION_94	IF_1
0x4002493	     0xf84af000000	                            je 0x4002548	      6037	eval.c	FUNCTION_94	IF_1
0x4002499	          0x83f802	                              cmp eax, 2	      6037	eval.c	FUNCTION_94	IF_1
0x400249c	     0xf8eae000000	                           jle 0x4002550	      6037	eval.c	FUNCTION_94	IF_1
0x40024a2	          0x83f805	                              cmp eax, 5	      6038	eval.c	FUNCTION_94	IF_1
0x40024a5	     0xf8fa5000000	                            jg 0x4002550	      6038	eval.c	FUNCTION_94	IF_1
0x40024ab	            0x31d2	                            xor edx, edx	      6043	eval.c	FUNCTION_94	IF_2	CALL_1
0x40024ad	            0x31f6	                            xor esi, esi	      6043	eval.c	FUNCTION_94	IF_2	CALL_1
0x40024af	          0x4889df	                            mov rdi, rbx	      6043	eval.c	FUNCTION_94	IF_2	CALL_1
0x40024b2	      0xe800000000	                          call 0x40024b7	      6043	eval.c	FUNCTION_94	IF_2	CALL_1
0x40024b7	          0x4885c0	                           test rax, rax	      6044	eval.c	FUNCTION_94	IF_2	IF_3
0x40024ba	     0xf8890000000	                            js 0x4002550	      6044	eval.c	FUNCTION_94	IF_2	IF_3
0x40024c0	     0xf84a2000000	                            je 0x4002568	      6046	eval.c	FUNCTION_94	IF_2	IF_4
0x40024c6	          0x894500	                    mov dword [rbp], eax	      6048	eval.c	FUNCTION_94	IF_2
0x40024c9	    0x41be04000000	                             mov r14d, 4	      6048	eval.c	FUNCTION_94	IF_2
0x40024cf	    0x41bf03000000	                             mov r15d, 3	      6048	eval.c	FUNCTION_94	IF_2
0x40024d5	      0xbd02000000	                              mov ebp, 2	      6048	eval.c	FUNCTION_94	IF_2
0x40024da	      0xbe01000000	                              mov esi, 1	      6043	eval.c	FUNCTION_94	IF_2	CALL_1
0x40024df	            0x31d2	                            xor edx, edx	      6051	eval.c	FUNCTION_94	CALL_2
0x40024e1	          0x4889df	                            mov rdi, rbx	      6051	eval.c	FUNCTION_94	CALL_2
0x40024e4	      0xe800000000	                          call 0x40024e9	      6051	eval.c	FUNCTION_94	CALL_2
0x40024e9	          0x4885c0	                           test rax, rax	      6052	eval.c	FUNCTION_94	IF_5
0x40024ec	            0x7862	                            js 0x4002550	      6052	eval.c	FUNCTION_94	IF_5
0x40024ee	            0x31d2	                            xor edx, edx	      6056	eval.c	FUNCTION_94	CALL_3
0x40024f0	        0x49894500	                    mov qword [r13], rax	      6054	eval.c	FUNCTION_94
0x40024f4	          0x4889ee	                            mov rsi, rbp	      6056	eval.c	FUNCTION_94	CALL_3
0x40024f7	          0x4889df	                            mov rdi, rbx	      6056	eval.c	FUNCTION_94	CALL_3
0x40024fa	      0xe800000000	                          call 0x40024ff	      6056	eval.c	FUNCTION_94	CALL_3
0x40024ff	          0x4885c0	                           test rax, rax	      6057	eval.c	FUNCTION_94	IF_6
0x4002502	            0x784c	                            js 0x4002550	      6057	eval.c	FUNCTION_94	IF_6
0x4002504	            0x31d2	                            xor edx, edx	      6062	eval.c	FUNCTION_94	CALL_4
0x4002506	        0x41894508	                mov dword [r13 + 8], eax	      6059	eval.c	FUNCTION_94
0x400250a	          0x4c89fe	                            mov rsi, r15	      6062	eval.c	FUNCTION_94	CALL_4
0x400250d	          0x4889df	                            mov rdi, rbx	      6062	eval.c	FUNCTION_94	CALL_4
0x4002510	      0xbd01000000	                              mov ebp, 1	      6072	eval.c	FUNCTION_94
0x4002515	      0xe800000000	                          call 0x400251a	      6062	eval.c	FUNCTION_94	CALL_4
0x400251a	      0xba00000000	                              mov edx, 0	      6066	eval.c	FUNCTION_94	ELSE_1
0x400251f	          0x4885c0	                           test rax, rax	      6066	eval.c	FUNCTION_94	ELSE_1
0x4002522	           0xf48c2	                          cmovs eax, edx	      6066	eval.c	FUNCTION_94	ELSE_1
0x4002525	          0x4d85e4	                           test r12, r12	      6069	eval.c	FUNCTION_94	IF_8
0x4002528	        0x4189450c	              mov dword [r13 + 0xc], eax	      6069	eval.c	FUNCTION_94	IF_8
0x400252c	            0x7424	                            je 0x4002552	      6069	eval.c	FUNCTION_94	IF_8
0x400252e	            0x31d2	                            xor edx, edx	      6070	eval.c	FUNCTION_94	CALL_5
0x4002530	          0x4c89f6	                            mov rsi, r14	      6070	eval.c	FUNCTION_94	CALL_5
0x4002533	          0x4889df	                            mov rdi, rbx	      6070	eval.c	FUNCTION_94	CALL_5
0x4002536	      0xe800000000	                          call 0x400253b	      6070	eval.c	FUNCTION_94	CALL_5
0x400253b	        0x41890424	                    mov dword [r12], eax	      6070	eval.c	FUNCTION_94	CALL_5
0x400253f	            0xeb11	                           jmp 0x4002552	      6070	eval.c	FUNCTION_94	CALL_5
0x4002541	     0xf1f80000000	                         nop dword [rax]	      6070	eval.c	FUNCTION_94	CALL_5
0x4002548	          0x83f801	                              cmp eax, 1	      6037	eval.c	FUNCTION_94	IF_1
0x400254b	            0x7f33	                            jg 0x4002580	      6037	eval.c	FUNCTION_94	IF_1
0x400254d	           0xf1f00	                         nop dword [rax]	      6037	eval.c	FUNCTION_94	IF_1
0x4002550	            0x31ed	                            xor ebp, ebp	      6039	eval.c	FUNCTION_94	IF_1
0x4002552	        0x4883c408	                              add rsp, 8	      6073	eval.c	FUNCTION_94
0x4002556	            0x89e8	                            mov eax, ebp	      6073	eval.c	FUNCTION_94
0x4002558	              0x5b	                                 pop rbx	      6073	eval.c	FUNCTION_94
0x4002559	              0x5d	                                 pop rbp	      6073	eval.c	FUNCTION_94
0x400255a	            0x415c	                                 pop r12	      6073	eval.c	FUNCTION_94
0x400255c	            0x415d	                                 pop r13	      6073	eval.c	FUNCTION_94
0x400255e	            0x415e	                                 pop r14	      6073	eval.c	FUNCTION_94
0x4002560	            0x415f	                                 pop r15	      6073	eval.c	FUNCTION_94
0x4002562	              0xc3	                                     ret	      6073	eval.c	FUNCTION_94
0x4002563	       0xf1f440000	                   nop dword [rax + rax]	      6073	eval.c	FUNCTION_94
0x4002568	    0x488b05000000	            mov rax, qword [0x0400256f] 	      6047	eval.c	FUNCTION_94	IF_2	IF_4
0x400256f	    0x486380b80000	         movsxd rax, dword [rax + 0xb8] 	      6047	eval.c	FUNCTION_94	IF_2	IF_4
0x4002576	      0xe94bffffff	                           jmp 0x40024c6	      6047	eval.c	FUNCTION_94	IF_2	IF_4
0x400257b	       0xf1f440000	                   nop dword [rax + rax]	      6047	eval.c	FUNCTION_94	IF_2	IF_4
0x4002580	          0x83f804	                              cmp eax, 4	      6038	eval.c	FUNCTION_94	IF_1
0x4002583	            0x7fcb	                            jg 0x4002550	      6038	eval.c	FUNCTION_94	IF_1
0x4002585	    0x41be03000000	                             mov r14d, 3	      6038	eval.c	FUNCTION_94	IF_1
0x400258b	    0x41bf02000000	                             mov r15d, 2	      6038	eval.c	FUNCTION_94	IF_1
0x4002591	      0xbd01000000	                              mov ebp, 1	      6038	eval.c	FUNCTION_94	IF_1
0x4002596	            0x31f6	                            xor esi, esi	      6030	eval.c	FUNCTION_94
0x4002598	      0xe942ffffff	                           jmp 0x40024df	      6030	eval.c	FUNCTION_94
eval_diff	functions,0:SWITCH,0:IF,0:DO,0:ELSE,0:WHILE,0:CALL,7:FOR,0	104
0x40120f0	            0x4154	                                push r12	       631	eval.c	FUNCTION_11
0x40120f2	              0x55	                                push rbp	       631	eval.c	FUNCTION_11
0x40120f3	          0x4989fc	                            mov r12, rdi	       631	eval.c	FUNCTION_11
0x40120f6	              0x53	                                push rbx	       631	eval.c	FUNCTION_11
0x40120f7	      0xbf00000000	                              mov edi, 0	      6473	eval.c	FUNCTION_109	CALL_1
0x40120fc	          0x4889f5	                            mov rbp, rsi	       631	eval.c	FUNCTION_11
0x40120ff	          0x4889d3	                            mov rbx, rdx	       631	eval.c	FUNCTION_11
0x4012102	        0x4883ec30	                           sub rsp, 0x30	       631	eval.c	FUNCTION_11
0x4012106	    0x64488b042528	                mov rax, qword fs:[0x28]	       631	eval.c	FUNCTION_11
0x401210f	      0x4889442428	             mov qword [rsp + 0x28], rax	       631	eval.c	FUNCTION_11
0x4012114	            0x31c0	                            xor eax, eax	       631	eval.c	FUNCTION_11
0x4012116	    0xc74424040000	                  mov dword [rsp + 4], 0	       632	eval.c	FUNCTION_11
0x401211e	      0xe800000000	                          call 0x4012123	      6473	eval.c	FUNCTION_109	CALL_1
0x4012123	          0x4d85e4	                           test r12, r12	      6475	eval.c	FUNCTION_109	IF_1
0x4012126	    0xc70500000000	               mov dword [0x04012130], 2	      6474	eval.c	FUNCTION_109
0x4012130	     0xf84ba010000	                            je 0x40122f0	      6475	eval.c	FUNCTION_109	IF_1
0x4012136	          0x4c89e7	                            mov rdi, r12	      6478	eval.c	FUNCTION_109	ELSE_1	IF_2
0x4012139	      0xe800000000	                          call 0x401213e	      6478	eval.c	FUNCTION_109	ELSE_1	IF_2
0x401213e	    0x488905000000	            mov qword [0x04012145], rax 	      6478	eval.c	FUNCTION_109	ELSE_1	IF_2
0x4012145	      0xbf00000000	                              mov edi, 0	      6473	eval.c	FUNCTION_109	CALL_1
0x401214a	      0xe800000000	                          call 0x401214f	      6473	eval.c	FUNCTION_109	CALL_1
0x401214f	          0x4885ed	                           test rbp, rbp	      6475	eval.c	FUNCTION_109	IF_1
0x4012152	    0xc70500000000	               mov dword [0x0401215c], 2	      6474	eval.c	FUNCTION_109
0x401215c	     0xf849e010000	                            je 0x4012300	      6475	eval.c	FUNCTION_109	IF_1
0x4012162	          0x4889ef	                            mov rdi, rbp	      6478	eval.c	FUNCTION_109	ELSE_1	IF_2
0x4012165	      0xe800000000	                          call 0x401216a	      6478	eval.c	FUNCTION_109	ELSE_1	IF_2
0x401216a	    0x488905000000	            mov qword [0x04012171], rax 	      6478	eval.c	FUNCTION_109	ELSE_1	IF_2
0x4012171	      0xbf00000000	                              mov edi, 0	      6473	eval.c	FUNCTION_109	CALL_1
0x4012176	      0xe800000000	                          call 0x401217b	      6473	eval.c	FUNCTION_109	CALL_1
0x401217b	          0x4885db	                           test rbx, rbx	      6475	eval.c	FUNCTION_109	IF_1
0x401217e	    0xc70500000000	               mov dword [0x04012188], 2	      6474	eval.c	FUNCTION_109
0x4012188	     0xf8452010000	                            je 0x40122e0	      6475	eval.c	FUNCTION_109	IF_1
0x401218e	          0x4889df	                            mov rdi, rbx	      6478	eval.c	FUNCTION_109	ELSE_1	IF_2
0x4012191	      0xe800000000	                          call 0x4012196	      6478	eval.c	FUNCTION_109	ELSE_1	IF_2
0x4012196	    0x488905000000	            mov qword [0x0401219d], rax 	      6478	eval.c	FUNCTION_109	ELSE_1	IF_2
0x401219d	    0x488b1d000000	            mov rbx, qword [0x040121a4] 	       637	eval.c	FUNCTION_11	CALL_4
0x40121a4	          0x4889df	                            mov rdi, rbx	      3262	eval.c	FUNCTION_63	CALL_1
0x40121a7	      0xe800000000	                          call 0x40121ac	      3262	eval.c	FUNCTION_63	CALL_1
0x40121ac	      0x488d742410	                   lea rsi, [rsp + 0x10]	      3263	eval.c	FUNCTION_63	CALL_2
0x40121b1	      0x488d7c2408	                      lea rdi, [rsp + 8]	      3263	eval.c	FUNCTION_63	CALL_2
0x40121b6	      0xba01000000	                              mov edx, 1	      3263	eval.c	FUNCTION_63	CALL_2
0x40121bb	      0x4889442408	                mov qword [rsp + 8], rax	      3262	eval.c	FUNCTION_63	CALL_1
0x40121c0	      0xe800000000	                          call 0x40121c5	      3263	eval.c	FUNCTION_63	CALL_2
0x40121c5	            0x85c0	                           test eax, eax	      3264	eval.c	FUNCTION_63	IF_1	CALL_3
0x40121c7	     0xf8593000000	                           jne 0x4012260	      3264	eval.c	FUNCTION_63	IF_1	CALL_3
0x40121cd	      0xe800000000	                          call 0x40121d2	      3273	eval.c	FUNCTION_63	IF_1	IF_3	CALL_5
0x40121d2	            0x85c0	                           test eax, eax	      3273	eval.c	FUNCTION_63	IF_1	IF_3	CALL_5
0x40121d4	     0xf84ae000000	                            je 0x4012288	      3273	eval.c	FUNCTION_63	IF_1	IF_3	CALL_5
0x40121da	    0xc74424040100	                  mov dword [rsp + 4], 1	       679	eval.c	FUNCTION_13	IF_2
0x40121e2	      0xbf00000000	                              mov edi, 0	      6473	eval.c	FUNCTION_109	CALL_1
0x40121e7	      0xe800000000	                          call 0x40121ec	      6473	eval.c	FUNCTION_109	CALL_1
0x40121ec	      0xbf00000000	                              mov edi, 0	      6473	eval.c	FUNCTION_109	CALL_1
0x40121f1	    0xc70500000000	               mov dword [0x040121fb], 2	      6474	eval.c	FUNCTION_109
0x40121fb	    0x48c705000000	               mov qword [0x04012206], 0	      6476	eval.c	FUNCTION_109	IF_1
0x4012206	      0xe800000000	                          call 0x401220b	      6473	eval.c	FUNCTION_109	CALL_1
0x401220b	      0xbf00000000	                              mov edi, 0	      6473	eval.c	FUNCTION_109	CALL_1
0x4012210	    0xc70500000000	               mov dword [0x0401221a], 2	      6474	eval.c	FUNCTION_109
0x401221a	    0x48c705000000	               mov qword [0x04012225], 0	      6476	eval.c	FUNCTION_109	IF_1
0x4012225	      0xe800000000	                          call 0x401222a	      6473	eval.c	FUNCTION_109	CALL_1
0x401222a	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       641	eval.c	FUNCTION_11
0x401222f	    0x644833042528	                xor rax, qword fs:[0x28]	       641	eval.c	FUNCTION_11
0x4012238	    0xc70500000000	               mov dword [0x04012242], 2	      6474	eval.c	FUNCTION_109
0x4012242	    0x48c705000000	               mov qword [0x0401224d], 0	      6476	eval.c	FUNCTION_109	IF_1
0x401224d	     0xf85bd000000	                           jne 0x4012310	       641	eval.c	FUNCTION_11
0x4012253	        0x4883c430	                           add rsp, 0x30	       641	eval.c	FUNCTION_11
0x4012257	              0x5b	                                 pop rbx	       641	eval.c	FUNCTION_11
0x4012258	              0x5d	                                 pop rbp	       641	eval.c	FUNCTION_11
0x4012259	            0x415c	                                 pop r12	       641	eval.c	FUNCTION_11
0x401225b	              0xc3	                                     ret	       641	eval.c	FUNCTION_11
0x401225c	         0xf1f4000	                         nop dword [rax]	       641	eval.c	FUNCTION_11
0x4012260	      0x488b442408	                mov rax, qword [rsp + 8]	      3264	eval.c	FUNCTION_63	IF_1	CALL_3
0x4012265	           0xfb638	                   movzx edi, byte [rax]	      3264	eval.c	FUNCTION_63	IF_1	CALL_3
0x4012268	      0xe800000000	                          call 0x401226d	      3264	eval.c	FUNCTION_63	IF_1	CALL_3
0x401226d	            0x85c0	                           test eax, eax	      3264	eval.c	FUNCTION_63	IF_1	CALL_3
0x401226f	            0x753f	                           jne 0x40122b0	      3264	eval.c	FUNCTION_63	IF_1	CALL_3
0x4012271	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      3267	eval.c	FUNCTION_63	IF_1	CALL_4
0x4012276	      0xe800000000	                          call 0x401227b	      3267	eval.c	FUNCTION_63	IF_1	CALL_4
0x401227b	      0xe800000000	                          call 0x4012280	      3273	eval.c	FUNCTION_63	IF_1	IF_3	CALL_5
0x4012280	            0x85c0	                           test eax, eax	      3273	eval.c	FUNCTION_63	IF_1	IF_3	CALL_5
0x4012282	     0xf8552ffffff	                           jne 0x40121da	      3273	eval.c	FUNCTION_63	IF_1	IF_3	CALL_5
0x4012288	            0x31ff	                            xor edi, edi	      3274	eval.c	FUNCTION_63	IF_1	CALL_7
0x401228a	      0xba05000000	                              mov edx, 5	      3274	eval.c	FUNCTION_63	IF_1	CALL_7
0x401228f	      0xbe00000000	                              mov esi, 0	      3274	eval.c	FUNCTION_63	IF_1	CALL_7
0x4012294	      0xe800000000	                          call 0x4012299	      3274	eval.c	FUNCTION_63	IF_1	CALL_7
0x4012299	          0x4889de	                            mov rsi, rbx	      3274	eval.c	FUNCTION_63	IF_1	CALL_7
0x401229c	          0x4889c7	                            mov rdi, rax	      3274	eval.c	FUNCTION_63	IF_1	CALL_7
0x401229f	      0xe800000000	                          call 0x40122a4	      3274	eval.c	FUNCTION_63	IF_1	CALL_7
0x40122a4	      0xe931ffffff	                           jmp 0x40121da	      3274	eval.c	FUNCTION_63	IF_1	CALL_7
0x40122a9	     0xf1f80000000	                         nop dword [rax]	      3274	eval.c	FUNCTION_63	IF_1	CALL_7
0x40122b0	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       685	eval.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x40122b5	      0x488d742404	                      lea rsi, [rsp + 4]	       685	eval.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x40122ba	    0xc74424040000	                  mov dword [rsp + 4], 0	       682	eval.c	FUNCTION_13	ELSE_1
0x40122c2	      0xe800000000	                          call 0x40122c7	       685	eval.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x40122c7	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       686	eval.c	FUNCTION_13	ELSE_1	IF_3	CALL_3
0x40122cc	      0xe800000000	                          call 0x40122d1	       686	eval.c	FUNCTION_13	ELSE_1	IF_3	CALL_3
0x40122d1	      0xe90cffffff	                           jmp 0x40121e2	       686	eval.c	FUNCTION_13	ELSE_1	IF_3	CALL_3
0x40122d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       686	eval.c	FUNCTION_13	ELSE_1	IF_3	CALL_3
0x40122e0	    0x48c705000000	               mov qword [0x040122eb], 0	      6476	eval.c	FUNCTION_109	IF_1
0x40122eb	      0xe9adfeffff	                           jmp 0x401219d	      6476	eval.c	FUNCTION_109	IF_1
0x40122f0	    0x48c705000000	               mov qword [0x040122fb], 0	      6476	eval.c	FUNCTION_109	IF_1
0x40122fb	      0xe945feffff	                           jmp 0x4012145	      6476	eval.c	FUNCTION_109	IF_1
0x4012300	    0x48c705000000	               mov qword [0x0401230b], 0	      6476	eval.c	FUNCTION_109	IF_1
0x401230b	      0xe961feffff	                           jmp 0x4012171	      6476	eval.c	FUNCTION_109	IF_1
0x4012310	      0xe800000000	                          call 0x4012315	       641	eval.c	FUNCTION_11
item_copy	functions,0:SWITCH,1:IF,7:DO,0:ELSE,4:WHILE,0:CALL,6:FOR,0	89
0x40064b0	    0x448b05000000	            mov r8d, dword [0x040064b7] 	      7838	eval.c	FUNCTION_150	IF_1
0x40064b7	              0x53	                                push rbx	      7834	eval.c	FUNCTION_150
0x40064b8	        0x4183f863	                           cmp r8d, 0x63	      7838	eval.c	FUNCTION_150	IF_1
0x40064bc	            0x7f22	                            jg 0x40064e0	      7838	eval.c	FUNCTION_150	IF_1
0x40064be	        0x4183c001	                              add r8d, 1	      7843	eval.c	FUNCTION_150
0x40064c2	          0x833f0a	                    cmp dword [rdi], 0xa	      7845	eval.c	FUNCTION_150	SWITCH_1
0x40064c5	    0x448905000000	            mov dword [0x040064cc], r8d 	      7843	eval.c	FUNCTION_150
0x40064cc	     0xf8729010000	                            ja 0x40065fb	      7845	eval.c	FUNCTION_150	SWITCH_1
0x40064d2	            0x8b07	                    mov eax, dword [rdi]	      7845	eval.c	FUNCTION_150	SWITCH_1
0x40064d4	          0x4889f3	                            mov rbx, rsi	      7845	eval.c	FUNCTION_150	SWITCH_1
0x40064d7	            0x89d6	                            mov esi, edx	      7845	eval.c	FUNCTION_150	SWITCH_1
0x40064d9	    0xff24c5000000	                       jmp qword [rax*8]	      7845	eval.c	FUNCTION_150	SWITCH_1
0x40064e0	      0xba05000000	                              mov edx, 5	      7840	eval.c	FUNCTION_150	IF_1	CALL_2
0x40064e5	      0xbe00000000	                              mov esi, 0	      7840	eval.c	FUNCTION_150	IF_1	CALL_2
0x40064ea	            0x31ff	                            xor edi, edi	      7840	eval.c	FUNCTION_150	IF_1	CALL_2
0x40064ec	      0xe800000000	                          call 0x40064f1	      7840	eval.c	FUNCTION_150	IF_1	CALL_2
0x40064f1	          0x4889c7	                            mov rdi, rax	      7840	eval.c	FUNCTION_150	IF_1	CALL_2
0x40064f4	      0xe800000000	                          call 0x40064f9	      7840	eval.c	FUNCTION_150	IF_1	CALL_2
0x40064f9	            0x31c0	                            xor eax, eax	      7841	eval.c	FUNCTION_150	IF_1
0x40064fb	              0x5b	                                 pop rbx	      7895	eval.c	FUNCTION_150
0x40064fc	              0xc3	                                     ret	      7895	eval.c	FUNCTION_150
0x40064fd	           0xf1f00	                         nop dword [rax]	      7895	eval.c	FUNCTION_150
0x4006500	    0xc70305000000	                      mov dword [rbx], 5	      7858	eval.c	FUNCTION_150	SWITCH_1
0x4006506	        0xc6430400	                   mov byte [rbx + 4], 0	      7859	eval.c	FUNCTION_150	SWITCH_1
0x400650a	        0x488b7f08	                mov rdi, qword [rdi + 8]	      7860	eval.c	FUNCTION_150	SWITCH_1	IF_2
0x400650e	          0x4885ff	                           test rdi, rdi	      7860	eval.c	FUNCTION_150	SWITCH_1	IF_2
0x4006511	     0xf8499000000	                            je 0x40065b0	      7860	eval.c	FUNCTION_150	SWITCH_1	IF_2
0x4006517	            0x85c9	                           test ecx, ecx	      7862	eval.c	FUNCTION_150	SWITCH_1	ELSE_1	IF_3
0x4006519	            0x7409	                            je 0x4006524	      7862	eval.c	FUNCTION_150	SWITCH_1	ELSE_1	IF_3
0x400651b	          0x3b4f44	            cmp ecx, dword [rdi + 0x44] 	      7862	eval.c	FUNCTION_150	SWITCH_1	ELSE_1	IF_3
0x400651e	     0xf84bc000000	                            je 0x40065e0	      7862	eval.c	FUNCTION_150	SWITCH_1	ELSE_1	IF_3
0x4006524	            0x89ca	                            mov edx, ecx	      7869	eval.c	FUNCTION_150	SWITCH_1	CALL_4
0x4006526	      0xe800000000	                          call 0x400652b	      7869	eval.c	FUNCTION_150	SWITCH_1	CALL_4
0x400652b	        0x48894308	                mov qword [rbx + 8], rax	      7885	eval.c	FUNCTION_150	SWITCH_1	CALL_5
0x400652f	          0x4885c0	                           test rax, rax	      7885	eval.c	FUNCTION_150	SWITCH_1	CALL_5
0x4006532	    0x448b05000000	            mov r8d, dword [0x04006539] 	      7885	eval.c	FUNCTION_150	SWITCH_1	CALL_5
0x4006539	           0xf95c0	                                setne al	      7885	eval.c	FUNCTION_150	SWITCH_1	CALL_5
0x400653c	           0xfb6c0	                           movzx eax, al	      7885	eval.c	FUNCTION_150	SWITCH_1	CALL_5
0x400653f	        0x4183e801	                              sub r8d, 1	      7893	eval.c	FUNCTION_150
0x4006543	    0x448905000000	            mov dword [0x0400654a], r8d 	      7893	eval.c	FUNCTION_150
0x400654a	              0x5b	                                 pop rbx	      7895	eval.c	FUNCTION_150
0x400654b	              0xc3	                                     ret	      7895	eval.c	FUNCTION_150
0x400654c	         0xf1f4000	                         nop dword [rax]	      7895	eval.c	FUNCTION_150
0x4006550	    0xc70306000000	                      mov dword [rbx], 6	      7874	eval.c	FUNCTION_150	SWITCH_1
0x4006556	        0xc6430400	                   mov byte [rbx + 4], 0	      7875	eval.c	FUNCTION_150	SWITCH_1
0x400655a	        0x488b7f08	                mov rdi, qword [rdi + 8]	      7876	eval.c	FUNCTION_150	SWITCH_1	IF_5
0x400655e	          0x4885ff	                           test rdi, rdi	      7876	eval.c	FUNCTION_150	SWITCH_1	IF_5
0x4006561	            0x744d	                            je 0x40065b0	      7876	eval.c	FUNCTION_150	SWITCH_1	IF_5
0x4006563	            0x85c9	                           test ecx, ecx	      7878	eval.c	FUNCTION_150	SWITCH_1	ELSE_3	IF_6
0x4006565	            0x7405	                            je 0x400656c	      7878	eval.c	FUNCTION_150	SWITCH_1	ELSE_3	IF_6
0x4006567	          0x3b4f08	                cmp ecx, dword [rdi + 8]	      7878	eval.c	FUNCTION_150	SWITCH_1	ELSE_3	IF_6
0x400656a	            0x7454	                            je 0x40065c0	      7878	eval.c	FUNCTION_150	SWITCH_1	ELSE_3	IF_6
0x400656c	            0x89ca	                            mov edx, ecx	      7885	eval.c	FUNCTION_150	SWITCH_1	CALL_5
0x400656e	      0xe800000000	                          call 0x4006573	      7885	eval.c	FUNCTION_150	SWITCH_1	CALL_5
0x4006573	            0xebb6	                           jmp 0x400652b	      7885	eval.c	FUNCTION_150	SWITCH_1	CALL_5
0x4006575	           0xf1f00	                         nop dword [rax]	      7885	eval.c	FUNCTION_150	SWITCH_1	CALL_5
0x4006578	      0xbf00000000	                              mov edi, 0	      7890	eval.c	FUNCTION_150	SWITCH_1	CALL_6
0x400657d	      0xe800000000	                          call 0x4006582	      7890	eval.c	FUNCTION_150	SWITCH_1	CALL_6
0x4006582	    0x448b05000000	            mov r8d, dword [0x04006589] 	      7890	eval.c	FUNCTION_150	SWITCH_1	CALL_6
0x4006589	            0x31c0	                            xor eax, eax	      7891	eval.c	FUNCTION_150	SWITCH_1
0x400658b	            0xebb2	                           jmp 0x400653f	      7891	eval.c	FUNCTION_150	SWITCH_1
0x400658d	           0xf1f00	                         nop dword [rax]	      7891	eval.c	FUNCTION_150	SWITCH_1
0x4006590	          0x4889de	                            mov rsi, rbx	      7855	eval.c	FUNCTION_150	SWITCH_1	CALL_3
0x4006593	      0xe800000000	                          call 0x4006598	      7855	eval.c	FUNCTION_150	SWITCH_1	CALL_3
0x4006598	    0x448b05000000	            mov r8d, dword [0x0400659f] 	      7855	eval.c	FUNCTION_150	SWITCH_1	CALL_3
0x400659f	      0xb801000000	                              mov eax, 1	      7836	eval.c	FUNCTION_150
0x40065a4	            0xeb99	                           jmp 0x400653f	      7856	eval.c	FUNCTION_150	SWITCH_1
0x40065a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      7856	eval.c	FUNCTION_150	SWITCH_1
0x40065b0	    0x48c743080000	                  mov qword [rbx + 8], 0	      7877	eval.c	FUNCTION_150	SWITCH_1	IF_5
0x40065b8	            0x31c0	                            xor eax, eax	      7877	eval.c	FUNCTION_150	SWITCH_1	IF_5
0x40065ba	      0xe980ffffff	                           jmp 0x400653f	      7877	eval.c	FUNCTION_150	SWITCH_1	IF_5
0x40065bf	              0x90	                                     nop	      7877	eval.c	FUNCTION_150	SWITCH_1	IF_5
0x40065c0	    0x488b87380100	           mov rax, qword [rdi + 0x138] 	      7881	eval.c	FUNCTION_150	SWITCH_1	ELSE_3	IF_6
0x40065c7	        0x48894308	                mov qword [rbx + 8], rax	      7881	eval.c	FUNCTION_150	SWITCH_1	ELSE_3	IF_6
0x40065cb	        0x83400401	                  add dword [rax + 4], 1	      7882	eval.c	FUNCTION_150	SWITCH_1	ELSE_3	IF_6
0x40065cf	            0x31c0	                            xor eax, eax	      7882	eval.c	FUNCTION_150	SWITCH_1	ELSE_3	IF_6
0x40065d1	      0x48837b0800	                  cmp qword [rbx + 8], 0	      7882	eval.c	FUNCTION_150	SWITCH_1	ELSE_3	IF_6
0x40065d6	           0xf95c0	                                setne al	      7882	eval.c	FUNCTION_150	SWITCH_1	ELSE_3	IF_6
0x40065d9	      0xe961ffffff	                           jmp 0x400653f	      7882	eval.c	FUNCTION_150	SWITCH_1	ELSE_3	IF_6
0x40065de	            0x6690	                                     nop	      7882	eval.c	FUNCTION_150	SWITCH_1	ELSE_3	IF_6
0x40065e0	        0x488b4720	            mov rax, qword [rdi + 0x20] 	      7865	eval.c	FUNCTION_150	SWITCH_1	ELSE_1	IF_3
0x40065e4	        0x48894308	                mov qword [rbx + 8], rax	      7865	eval.c	FUNCTION_150	SWITCH_1	ELSE_1	IF_3
0x40065e8	        0x83403801	               add dword [rax + 0x38], 1	      7866	eval.c	FUNCTION_150	SWITCH_1	ELSE_1	IF_3
0x40065ec	            0x31c0	                            xor eax, eax	      7866	eval.c	FUNCTION_150	SWITCH_1	ELSE_1	IF_3
0x40065ee	      0x48837b0800	                  cmp qword [rbx + 8], 0	      7866	eval.c	FUNCTION_150	SWITCH_1	ELSE_1	IF_3
0x40065f3	           0xf95c0	                                setne al	      7866	eval.c	FUNCTION_150	SWITCH_1	ELSE_1	IF_3
0x40065f6	      0xe944ffffff	                           jmp 0x400653f	      7866	eval.c	FUNCTION_150	SWITCH_1	ELSE_1	IF_3
0x40065fb	      0xb801000000	                              mov eax, 1	      7836	eval.c	FUNCTION_150
0x4006600	      0xe93affffff	                           jmp 0x400653f	      7836	eval.c	FUNCTION_150
assert_bool	functions,0:SWITCH,0:IF,2:DO,0:ELSE,0:WHILE,0:CALL,5:FOR,0	179
0x4009110	            0x4155	                                push r13	      8971	eval.c	FUNCTION_174
0x4009112	            0x4154	                                push r12	      8971	eval.c	FUNCTION_174
0x4009114	              0x55	                                push rbp	      8971	eval.c	FUNCTION_174
0x4009115	              0x53	                                push rbx	      8971	eval.c	FUNCTION_174
0x4009116	            0x89f5	                            mov ebp, esi	      8971	eval.c	FUNCTION_174
0x4009118	          0x4889fb	                            mov rbx, rdi	      8971	eval.c	FUNCTION_174
0x400911b	    0x4881ec880000	                           sub rsp, 0x88	      8971	eval.c	FUNCTION_174
0x4009122	    0x64488b042528	                mov rax, qword fs:[0x28]	      8971	eval.c	FUNCTION_174
0x400912b	      0x4889442478	             mov qword [rsp + 0x78], rax	      8971	eval.c	FUNCTION_174
0x4009130	            0x31c0	                            xor eax, eax	      8971	eval.c	FUNCTION_174
0x4009132	            0x8b07	                    mov eax, dword [rdi]	      8975	eval.c	FUNCTION_174	IF_1
0x4009134	    0xc74424040000	                  mov dword [rsp + 4], 0	      8972	eval.c	FUNCTION_174
0x400913c	          0x83f808	                              cmp eax, 8	      8975	eval.c	FUNCTION_174	IF_1
0x400913f	     0xf841b020000	                            je 0x4009360	      8975	eval.c	FUNCTION_174	IF_1
0x4009145	          0x83f801	                              cmp eax, 1	      8978	eval.c	FUNCTION_174	IF_2
0x4009148	     0xf84a2010000	                            je 0x40092f0	      8978	eval.c	FUNCTION_174	IF_2
0x400914e	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      8788	eval.c	FUNCTION_168	CALL_1
0x4009153	      0xbe01000000	                              mov esi, 1	      8788	eval.c	FUNCTION_168	CALL_1
0x4009158	      0xba64000000	                           mov edx, 0x64	      8788	eval.c	FUNCTION_168	CALL_1
0x400915d	      0xe800000000	                          call 0x4009162	      8788	eval.c	FUNCTION_168	CALL_1
0x4009162	    0x488b35000000	            mov rsi, qword [0x04009169] 	      8789	eval.c	FUNCTION_168	IF_1
0x4009169	          0x4885f6	                           test rsi, rsi	      8789	eval.c	FUNCTION_168	IF_1
0x400916c	     0xf8406020000	                            je 0x4009378	      8789	eval.c	FUNCTION_168	IF_1
0x4009172	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      8791	eval.c	FUNCTION_168	IF_1	CALL_2
0x4009177	      0xe800000000	                          call 0x400917c	      8791	eval.c	FUNCTION_168	IF_1	CALL_2
0x400917c	    0x48833d000000	               cmp qword [0x04009184], 0	      8792	eval.c	FUNCTION_168	IF_1	IF_2
0x4009184	     0xf8e4e010000	                           jle 0x40092d8	      8792	eval.c	FUNCTION_168	IF_1	IF_2
0x400918a	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      8793	eval.c	FUNCTION_168	IF_1	CALL_3
0x400918f	      0xbe00000000	                              mov esi, 0	      8793	eval.c	FUNCTION_168	IF_1	CALL_3
0x4009194	      0xe800000000	                          call 0x4009199	      8793	eval.c	FUNCTION_168	IF_1	CALL_3
0x4009199	    0x4c8b05000000	              mov r8, qword [0x040091a0]	      8795	eval.c	FUNCTION_168	IF_3
0x40091a0	          0x4d85c0	                             test r8, r8	      8795	eval.c	FUNCTION_168	IF_3
0x40091a3	     0xf8e6f020000	                           jle 0x4009418	      8795	eval.c	FUNCTION_168	IF_3
0x40091a9	      0x4c8d642430	                   lea r12, [rsp + 0x30]	        33	stdio2.h	FUNCTION_203	CALL_1
0x40091ae	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_203	CALL_1
0x40091b3	      0xba41000000	                           mov edx, 0x41	        33	stdio2.h	FUNCTION_203	CALL_1
0x40091b8	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_203	CALL_1
0x40091bd	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_203	CALL_1
0x40091bf	          0x4c89e7	                            mov rdi, r12	        33	stdio2.h	FUNCTION_203	CALL_1
0x40091c2	      0xe800000000	                          call 0x40091c7	        33	stdio2.h	FUNCTION_203	CALL_1
0x40091c7	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      8798	eval.c	FUNCTION_168	IF_3	CALL_4
0x40091cc	          0x4c89e6	                            mov rsi, r12	      8798	eval.c	FUNCTION_168	IF_3	CALL_4
0x40091cf	      0xe800000000	                          call 0x40091d4	      8798	eval.c	FUNCTION_168	IF_3	CALL_4
0x40091d4	    0x48833d000000	               cmp qword [0x040091dc], 0	      8800	eval.c	FUNCTION_168	IF_4
0x40091dc	     0xf841e020000	                            je 0x4009400	      8800	eval.c	FUNCTION_168	IF_4
0x40091e2	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      8801	eval.c	FUNCTION_168	CALL_5
0x40091e7	      0xbe00000000	                              mov esi, 0	      8801	eval.c	FUNCTION_168	CALL_5
0x40091ec	      0xe800000000	                          call 0x40091f1	      8801	eval.c	FUNCTION_168	CALL_5
0x40091f1	          0x8b7b10	            mov edi, dword [rbx + 0x10] 	      9156	eval.c	FUNCTION_180	IF_1
0x40091f4	            0x85ed	                           test ebp, ebp	      8983	eval.c	FUNCTION_174	IF_2	CALL_3
0x40091f6	      0xb800000000	                              mov eax, 0	      8983	eval.c	FUNCTION_174	IF_2	CALL_3
0x40091fb	      0xbd00000000	                              mov ebp, 0	      8983	eval.c	FUNCTION_174	IF_2	CALL_3
0x4009200	        0x480f45e8	                         cmovne rbp, rax	      8983	eval.c	FUNCTION_174	IF_2	CALL_3
0x4009204	            0x85ff	                           test edi, edi	      9156	eval.c	FUNCTION_180	IF_1
0x4009206	     0xf858c010000	                           jne 0x4009398	      9156	eval.c	FUNCTION_180	IF_1
0x400920c	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      9168	eval.c	FUNCTION_180	CALL_7
0x4009211	      0x4c8d6c2408	                      lea r13, [rsp + 8]	      9168	eval.c	FUNCTION_180	CALL_7
0x4009216	      0xbe00000000	                              mov esi, 0	      9168	eval.c	FUNCTION_180	CALL_7
0x400921b	      0xe800000000	                          call 0x4009220	      9168	eval.c	FUNCTION_180	CALL_7
0x4009220	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      9175	eval.c	FUNCTION_180	CALL_11
0x4009225	          0x4889ee	                            mov rsi, rbp	      9175	eval.c	FUNCTION_180	CALL_11
0x4009228	      0xe8a36effff	                  call sym.ga_concat_esc	      9175	eval.c	FUNCTION_180	CALL_11
0x400922d	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      9183	eval.c	FUNCTION_180	IF_5	CALL_14
0x4009232	      0xbe00000000	                              mov esi, 0	      9183	eval.c	FUNCTION_180	IF_5	CALL_14
0x4009237	      0xe800000000	                          call 0x400923c	      9183	eval.c	FUNCTION_180	IF_5	CALL_14
0x400923c	        0x4883ec08	                              sub rsp, 8	      5759	eval.c	FUNCTION_89	CALL_1
0x4009240	          0x4531c0	                            xor r8d, r8d	      5759	eval.c	FUNCTION_89	CALL_1
0x4009243	            0x31c9	                            xor ecx, ecx	      5759	eval.c	FUNCTION_89	CALL_1
0x4009245	            0x6a00	                                  push 0	      5759	eval.c	FUNCTION_89	CALL_1
0x4009247	          0x4c89e2	                            mov rdx, r12	      5759	eval.c	FUNCTION_89	CALL_1
0x400924a	    0x41b901000000	                              mov r9d, 1	      5759	eval.c	FUNCTION_89	CALL_1
0x4009250	          0x4c89ee	                            mov rsi, r13	      5759	eval.c	FUNCTION_89	CALL_1
0x4009253	          0x4889df	                            mov rdi, rbx	      5759	eval.c	FUNCTION_89	CALL_1
0x4009256	      0xe800000000	                          call 0x400925b	      5759	eval.c	FUNCTION_89	CALL_1
0x400925b	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      9184	eval.c	FUNCTION_180	IF_5	CALL_16
0x4009260	          0x4889c6	                            mov rsi, rax	      9184	eval.c	FUNCTION_180	IF_5	CALL_16
0x4009263	      0xe8686effff	                  call sym.ga_concat_esc	      9184	eval.c	FUNCTION_180	IF_5	CALL_16
0x4009268	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      9185	eval.c	FUNCTION_180	IF_5	CALL_17
0x400926d	      0xe800000000	                          call 0x4009272	      9185	eval.c	FUNCTION_180	IF_5	CALL_17
0x4009272	    0x833d00000000	               cmp dword [0x04009279], 5	      8812	eval.c	FUNCTION_169	IF_1
0x4009279	              0x58	                                 pop rax	      8812	eval.c	FUNCTION_169	IF_1
0x400927a	              0x5a	                                 pop rdx	      8812	eval.c	FUNCTION_169	IF_1
0x400927b	     0xf859f000000	                           jne 0x4009320	      8812	eval.c	FUNCTION_169	IF_1
0x4009281	    0x488b1d000000	            mov rbx, qword [0x04009288] 	      8812	eval.c	FUNCTION_169	IF_1
0x4009288	          0x4885db	                           test rbx, rbx	      8812	eval.c	FUNCTION_169	IF_1
0x400928b	     0xf848f000000	                            je 0x4009320	      8812	eval.c	FUNCTION_169	IF_1
0x4009291	        0x8b542410	            mov edx, dword [rsp + 0x10] 	      8815	eval.c	FUNCTION_169	CALL_3
0x4009295	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      8815	eval.c	FUNCTION_169	CALL_3
0x400929a	          0x4889df	                            mov rdi, rbx	      8815	eval.c	FUNCTION_169	CALL_3
0x400929d	      0xe800000000	                          call 0x40092a2	      8815	eval.c	FUNCTION_169	CALL_3
0x40092a2	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      8987	eval.c	FUNCTION_174	IF_2	CALL_5
0x40092a7	      0xe800000000	                          call 0x40092ac	      8987	eval.c	FUNCTION_174	IF_2	CALL_5
0x40092ac	      0xb801000000	                              mov eax, 1	      8988	eval.c	FUNCTION_174	IF_2
0x40092b1	      0x488b4c2478	            mov rcx, qword [rsp + 0x78] 	      8991	eval.c	FUNCTION_174
0x40092b6	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      8991	eval.c	FUNCTION_174
0x40092bf	     0xf856b010000	                           jne 0x4009430	      8991	eval.c	FUNCTION_174
0x40092c5	    0x4881c4880000	                           add rsp, 0x88	      8991	eval.c	FUNCTION_174
0x40092cc	              0x5b	                                 pop rbx	      8991	eval.c	FUNCTION_174
0x40092cd	              0x5d	                                 pop rbp	      8991	eval.c	FUNCTION_174
0x40092ce	            0x415c	                                 pop r12	      8991	eval.c	FUNCTION_174
0x40092d0	            0x415d	                                 pop r13	      8991	eval.c	FUNCTION_174
0x40092d2	              0xc3	                                     ret	      8991	eval.c	FUNCTION_174
0x40092d3	       0xf1f440000	                   nop dword [rax + rax]	      8991	eval.c	FUNCTION_174
0x40092d8	    0x48833d000000	               cmp qword [0x040092e0], 0	      8800	eval.c	FUNCTION_168	IF_4
0x40092e0	      0x4c8d642430	                   lea r12, [rsp + 0x30]	      8800	eval.c	FUNCTION_168	IF_4
0x40092e5	     0xf85f7feffff	                           jne 0x40091e2	      8800	eval.c	FUNCTION_168	IF_4
0x40092eb	      0xe901ffffff	                           jmp 0x40091f1	      8800	eval.c	FUNCTION_168	IF_4
0x40092f0	      0x488d742404	                      lea rsi, [rsp + 4]	      8979	eval.c	FUNCTION_174	IF_2	CALL_1
0x40092f5	      0xe800000000	                          call 0x40092fa	      8979	eval.c	FUNCTION_174	IF_2	CALL_1
0x40092fa	          0x4885c0	                           test rax, rax	      8979	eval.c	FUNCTION_174	IF_2	CALL_1
0x40092fd	           0xf94c0	                                 sete al	      8979	eval.c	FUNCTION_174	IF_2	CALL_1
0x4009300	           0xfb6c0	                           movzx eax, al	      8979	eval.c	FUNCTION_174	IF_2	CALL_1
0x4009303	            0x39c5	                            cmp ebp, eax	      8979	eval.c	FUNCTION_174	IF_2	CALL_1
0x4009305	     0xf8443feffff	                            je 0x400914e	      8979	eval.c	FUNCTION_174	IF_2	CALL_1
0x400930b	      0x448b442404	                mov r8d, dword [rsp + 4]	      8980	eval.c	FUNCTION_174	IF_2
0x4009310	          0x4585c0	                           test r8d, r8d	      8980	eval.c	FUNCTION_174	IF_2
0x4009313	     0xf8535feffff	                           jne 0x400914e	      8980	eval.c	FUNCTION_174	IF_2
0x4009319	            0x31c0	                            xor eax, eax	      8977	eval.c	FUNCTION_174	IF_1
0x400931b	            0xeb94	                           jmp 0x40092b1	      8977	eval.c	FUNCTION_174	IF_1
0x400931d	           0xf1f00	                         nop dword [rax]	      8977	eval.c	FUNCTION_174	IF_1
0x4009320	      0xe800000000	                          call 0x4009325	      8814	eval.c	FUNCTION_169	CALL_2
0x4009325	      0xbf00000000	                              mov edi, 0	      6489	eval.c	FUNCTION_110	CALL_1
0x400932a	          0x4889c3	                            mov rbx, rax	      8814	eval.c	FUNCTION_169	CALL_2
0x400932d	      0xe800000000	                          call 0x4009332	      6489	eval.c	FUNCTION_110	CALL_1
0x4009332	          0x4885db	                           test rbx, rbx	      6492	eval.c	FUNCTION_110	IF_1
0x4009335	    0xc70500000000	               mov dword [0x0400933f], 5	      6490	eval.c	FUNCTION_110
0x400933f	    0x48891d000000	            mov qword [0x04009346], rbx 	      6491	eval.c	FUNCTION_110
0x4009346	     0xf8445ffffff	                            je 0x4009291	      6492	eval.c	FUNCTION_110	IF_1
0x400934c	        0x83433801	               add dword [rbx + 0x38], 1	      6493	eval.c	FUNCTION_110	IF_1
0x4009350	    0x488b1d000000	            mov rbx, qword [0x04009357] 	      6493	eval.c	FUNCTION_110	IF_1
0x4009357	      0xe935ffffff	                           jmp 0x4009291	      6493	eval.c	FUNCTION_110	IF_1
0x400935c	         0xf1f4000	                         nop dword [rax]	      6493	eval.c	FUNCTION_110	IF_1
0x4009360	            0x31c0	                            xor eax, eax	      8976	eval.c	FUNCTION_174	IF_1
0x4009362	            0x85f6	                           test esi, esi	      8976	eval.c	FUNCTION_174	IF_1
0x4009364	           0xf95c0	                                setne al	      8976	eval.c	FUNCTION_174	IF_1
0x4009367	        0x48394708	                cmp qword [rdi + 8], rax	      8976	eval.c	FUNCTION_174	IF_1
0x400936b	     0xf85ddfdffff	                           jne 0x400914e	      8976	eval.c	FUNCTION_174	IF_1
0x4009371	            0xeba6	                           jmp 0x4009319	      8976	eval.c	FUNCTION_174	IF_1
0x4009373	       0xf1f440000	                   nop dword [rax + rax]	      8976	eval.c	FUNCTION_174	IF_1
0x4009378	    0x4c8b05000000	              mov r8, qword [0x0400937f]	      8795	eval.c	FUNCTION_168	IF_3
0x400937f	          0x4d85c0	                             test r8, r8	      8795	eval.c	FUNCTION_168	IF_3
0x4009382	     0xf8f21feffff	                            jg 0x40091a9	      8795	eval.c	FUNCTION_168	IF_3
0x4009388	      0x4c8d642430	                   lea r12, [rsp + 0x30]	      8795	eval.c	FUNCTION_168	IF_3
0x400938d	      0xe95ffeffff	                           jmp 0x40091f1	      8795	eval.c	FUNCTION_168	IF_3
0x4009392	    0x660f1f440000	                    nop word [rax + rax]	      8795	eval.c	FUNCTION_168	IF_3
0x4009398	      0x4c8d6c2408	                      lea r13, [rsp + 8]	      5742	eval.c	FUNCTION_88	CALL_1
0x400939d	        0x4883ec08	                              sub rsp, 8	      5742	eval.c	FUNCTION_88	CALL_1
0x40093a1	        0x488d7b10	                   lea rdi, [rbx + 0x10]	      5742	eval.c	FUNCTION_88	CALL_1
0x40093a5	            0x6a00	                                  push 0	      5742	eval.c	FUNCTION_88	CALL_1
0x40093a7	            0x31c9	                            xor ecx, ecx	      5742	eval.c	FUNCTION_88	CALL_1
0x40093a9	          0x4531c9	                            xor r9d, r9d	      5742	eval.c	FUNCTION_88	CALL_1
0x40093ac	    0x41b801000000	                              mov r8d, 1	      5742	eval.c	FUNCTION_88	CALL_1
0x40093b2	          0x4c89e2	                            mov rdx, r12	      5742	eval.c	FUNCTION_88	CALL_1
0x40093b5	          0x4c89ee	                            mov rsi, r13	      5742	eval.c	FUNCTION_88	CALL_1
0x40093b8	      0xe800000000	                          call 0x40093bd	      5742	eval.c	FUNCTION_88	CALL_1
0x40093bd	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      9158	eval.c	FUNCTION_180	IF_1	CALL_2
0x40093c2	          0x4889c6	                            mov rsi, rax	      9158	eval.c	FUNCTION_180	IF_1	CALL_2
0x40093c5	      0xe800000000	                          call 0x40093ca	      9158	eval.c	FUNCTION_180	IF_1	CALL_2
0x40093ca	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      9159	eval.c	FUNCTION_180	IF_1	CALL_3
0x40093cf	      0xe800000000	                          call 0x40093d4	      9159	eval.c	FUNCTION_180	IF_1	CALL_3
0x40093d4	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      9160	eval.c	FUNCTION_180	IF_1	CALL_4
0x40093d9	      0xbe00000000	                              mov esi, 0	      9160	eval.c	FUNCTION_180	IF_1	CALL_4
0x40093de	      0xe800000000	                          call 0x40093e3	      9160	eval.c	FUNCTION_180	IF_1	CALL_4
0x40093e3	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      9168	eval.c	FUNCTION_180	CALL_7
0x40093e8	      0xbe00000000	                              mov esi, 0	      9168	eval.c	FUNCTION_180	CALL_7
0x40093ed	      0xe800000000	                          call 0x40093f2	      9168	eval.c	FUNCTION_180	CALL_7
0x40093f2	              0x59	                                 pop rcx	      9168	eval.c	FUNCTION_180	CALL_7
0x40093f3	              0x5e	                                 pop rsi	      9168	eval.c	FUNCTION_180	CALL_7
0x40093f4	      0xe927feffff	                           jmp 0x4009220	      9168	eval.c	FUNCTION_180	CALL_7
0x40093f9	     0xf1f80000000	                         nop dword [rax]	      9168	eval.c	FUNCTION_180	CALL_7
0x4009400	    0x48833d000000	               cmp qword [0x04009408], 0	      8800	eval.c	FUNCTION_168	IF_4
0x4009408	     0xf8fd4fdffff	                            jg 0x40091e2	      8800	eval.c	FUNCTION_168	IF_4
0x400940e	      0xe9defdffff	                           jmp 0x40091f1	      8800	eval.c	FUNCTION_168	IF_4
0x4009413	       0xf1f440000	                   nop dword [rax + rax]	      8800	eval.c	FUNCTION_168	IF_4
0x4009418	    0x48833d000000	               cmp qword [0x04009420], 0	      8800	eval.c	FUNCTION_168	IF_4
0x4009420	     0xf8462ffffff	                            je 0x4009388	      8800	eval.c	FUNCTION_168	IF_4
0x4009426	      0x4c8d642430	                   lea r12, [rsp + 0x30]	      8800	eval.c	FUNCTION_168	IF_4
0x400942b	      0xe9b2fdffff	                           jmp 0x40091e2	      8800	eval.c	FUNCTION_168	IF_4
0x4009430	      0xe800000000	                          call 0x4009435	      8991	eval.c	FUNCTION_174
v_exception	functions,0:SWITCH,0:IF,1:DO,0:ELSE,0:WHILE,0:CALL,0:FOR,0	8
0x4002a60	          0x4885ff	                           test rdi, rdi	      6538	eval.c	FUNCTION_113	IF_1
0x4002a63	            0x750b	                           jne 0x4002a70	      6538	eval.c	FUNCTION_113	IF_1
0x4002a65	    0x488b05000000	            mov rax, qword [0x04002a6c] 	      6539	eval.c	FUNCTION_113	IF_1
0x4002a6c	              0xc3	                                     ret	      6539	eval.c	FUNCTION_113	IF_1
0x4002a6d	           0xf1f00	                         nop dword [rax]	      6539	eval.c	FUNCTION_113	IF_1
0x4002a70	    0x48893d000000	            mov qword [0x04002a77], rdi 	      6541	eval.c	FUNCTION_113
0x4002a77	            0x31c0	                            xor eax, eax	      6542	eval.c	FUNCTION_113
0x4002a79	              0xc3	                                     ret	      6543	eval.c	FUNCTION_113
eval_patch	functions,0:SWITCH,0:IF,0:DO,0:ELSE,0:WHILE,0:CALL,7:FOR,0	103
0x4011ed0	            0x4154	                                push r12	       648	eval.c	FUNCTION_12
0x4011ed2	              0x55	                                push rbp	       648	eval.c	FUNCTION_12
0x4011ed3	          0x4989fc	                            mov r12, rdi	       648	eval.c	FUNCTION_12
0x4011ed6	              0x53	                                push rbx	       648	eval.c	FUNCTION_12
0x4011ed7	      0xbf00000000	                              mov edi, 0	      6473	eval.c	FUNCTION_109	CALL_1
0x4011edc	          0x4889f5	                            mov rbp, rsi	       648	eval.c	FUNCTION_12
0x4011edf	          0x4889d3	                            mov rbx, rdx	       648	eval.c	FUNCTION_12
0x4011ee2	        0x4883ec30	                           sub rsp, 0x30	       648	eval.c	FUNCTION_12
0x4011ee6	    0x64488b042528	                mov rax, qword fs:[0x28]	       648	eval.c	FUNCTION_12
0x4011eef	      0x4889442428	             mov qword [rsp + 0x28], rax	       648	eval.c	FUNCTION_12
0x4011ef4	            0x31c0	                            xor eax, eax	       648	eval.c	FUNCTION_12
0x4011ef6	      0xe800000000	                          call 0x4011efb	      6473	eval.c	FUNCTION_109	CALL_1
0x4011efb	          0x4d85e4	                           test r12, r12	      6475	eval.c	FUNCTION_109	IF_1
0x4011efe	    0xc70500000000	               mov dword [0x04011f08], 2	      6474	eval.c	FUNCTION_109
0x4011f08	     0xf84b2010000	                            je 0x40120c0	      6475	eval.c	FUNCTION_109	IF_1
0x4011f0e	          0x4c89e7	                            mov rdi, r12	      6478	eval.c	FUNCTION_109	ELSE_1	IF_2
0x4011f11	      0xe800000000	                          call 0x4011f16	      6478	eval.c	FUNCTION_109	ELSE_1	IF_2
0x4011f16	    0x488905000000	            mov qword [0x04011f1d], rax 	      6478	eval.c	FUNCTION_109	ELSE_1	IF_2
0x4011f1d	      0xbf00000000	                              mov edi, 0	      6473	eval.c	FUNCTION_109	CALL_1
0x4011f22	      0xe800000000	                          call 0x4011f27	      6473	eval.c	FUNCTION_109	CALL_1
0x4011f27	          0x4885ed	                           test rbp, rbp	      6475	eval.c	FUNCTION_109	IF_1
0x4011f2a	    0xc70500000000	               mov dword [0x04011f34], 2	      6474	eval.c	FUNCTION_109
0x4011f34	     0xf8496010000	                            je 0x40120d0	      6475	eval.c	FUNCTION_109	IF_1
0x4011f3a	          0x4889ef	                            mov rdi, rbp	      6478	eval.c	FUNCTION_109	ELSE_1	IF_2
0x4011f3d	      0xe800000000	                          call 0x4011f42	      6478	eval.c	FUNCTION_109	ELSE_1	IF_2
0x4011f42	    0x488905000000	            mov qword [0x04011f49], rax 	      6478	eval.c	FUNCTION_109	ELSE_1	IF_2
0x4011f49	      0xbf00000000	                              mov edi, 0	      6473	eval.c	FUNCTION_109	CALL_1
0x4011f4e	      0xe800000000	                          call 0x4011f53	      6473	eval.c	FUNCTION_109	CALL_1
0x4011f53	          0x4885db	                           test rbx, rbx	      6475	eval.c	FUNCTION_109	IF_1
0x4011f56	    0xc70500000000	               mov dword [0x04011f60], 2	      6474	eval.c	FUNCTION_109
0x4011f60	     0xf844a010000	                            je 0x40120b0	      6475	eval.c	FUNCTION_109	IF_1
0x4011f66	          0x4889df	                            mov rdi, rbx	      6478	eval.c	FUNCTION_109	ELSE_1	IF_2
0x4011f69	      0xe800000000	                          call 0x4011f6e	      6478	eval.c	FUNCTION_109	ELSE_1	IF_2
0x4011f6e	    0x488905000000	            mov qword [0x04011f75], rax 	      6478	eval.c	FUNCTION_109	ELSE_1	IF_2
0x4011f75	    0x488b1d000000	            mov rbx, qword [0x04011f7c] 	       654	eval.c	FUNCTION_12	CALL_4
0x4011f7c	          0x4889df	                            mov rdi, rbx	      3262	eval.c	FUNCTION_63	CALL_1
0x4011f7f	      0xe800000000	                          call 0x4011f84	      3262	eval.c	FUNCTION_63	CALL_1
0x4011f84	      0x488d742410	                   lea rsi, [rsp + 0x10]	      3263	eval.c	FUNCTION_63	CALL_2
0x4011f89	      0x488d7c2408	                      lea rdi, [rsp + 8]	      3263	eval.c	FUNCTION_63	CALL_2
0x4011f8e	      0xba01000000	                              mov edx, 1	      3263	eval.c	FUNCTION_63	CALL_2
0x4011f93	      0x4889442408	                mov qword [rsp + 8], rax	      3262	eval.c	FUNCTION_63	CALL_1
0x4011f98	      0xe800000000	                          call 0x4011f9d	      3263	eval.c	FUNCTION_63	CALL_2
0x4011f9d	            0x85c0	                           test eax, eax	      3264	eval.c	FUNCTION_63	IF_1	CALL_3
0x4011f9f	     0xf8593000000	                           jne 0x4012038	      3264	eval.c	FUNCTION_63	IF_1	CALL_3
0x4011fa5	      0xe800000000	                          call 0x4011faa	      3273	eval.c	FUNCTION_63	IF_1	IF_3	CALL_5
0x4011faa	            0x85c0	                           test eax, eax	      3273	eval.c	FUNCTION_63	IF_1	IF_3	CALL_5
0x4011fac	     0xf84ae000000	                            je 0x4012060	      3273	eval.c	FUNCTION_63	IF_1	IF_3	CALL_5
0x4011fb2	    0xc74424080100	                  mov dword [rsp + 8], 1	       679	eval.c	FUNCTION_13	IF_2
0x4011fba	      0xbf00000000	                              mov edi, 0	      6473	eval.c	FUNCTION_109	CALL_1
0x4011fbf	      0xe800000000	                          call 0x4011fc4	      6473	eval.c	FUNCTION_109	CALL_1
0x4011fc4	      0xbf00000000	                              mov edi, 0	      6473	eval.c	FUNCTION_109	CALL_1
0x4011fc9	    0xc70500000000	               mov dword [0x04011fd3], 2	      6474	eval.c	FUNCTION_109
0x4011fd3	    0x48c705000000	               mov qword [0x04011fde], 0	      6476	eval.c	FUNCTION_109	IF_1
0x4011fde	      0xe800000000	                          call 0x4011fe3	      6473	eval.c	FUNCTION_109	CALL_1
0x4011fe3	      0xbf00000000	                              mov edi, 0	      6473	eval.c	FUNCTION_109	CALL_1
0x4011fe8	    0xc70500000000	               mov dword [0x04011ff2], 2	      6474	eval.c	FUNCTION_109
0x4011ff2	    0x48c705000000	               mov qword [0x04011ffd], 0	      6476	eval.c	FUNCTION_109	IF_1
0x4011ffd	      0xe800000000	                          call 0x4012002	      6473	eval.c	FUNCTION_109	CALL_1
0x4012002	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       658	eval.c	FUNCTION_12
0x4012007	    0x644833042528	                xor rax, qword fs:[0x28]	       658	eval.c	FUNCTION_12
0x4012010	    0xc70500000000	               mov dword [0x0401201a], 2	      6474	eval.c	FUNCTION_109
0x401201a	    0x48c705000000	               mov qword [0x04012025], 0	      6476	eval.c	FUNCTION_109	IF_1
0x4012025	     0xf85b5000000	                           jne 0x40120e0	       658	eval.c	FUNCTION_12
0x401202b	        0x4883c430	                           add rsp, 0x30	       658	eval.c	FUNCTION_12
0x401202f	              0x5b	                                 pop rbx	       658	eval.c	FUNCTION_12
0x4012030	              0x5d	                                 pop rbp	       658	eval.c	FUNCTION_12
0x4012031	            0x415c	                                 pop r12	       658	eval.c	FUNCTION_12
0x4012033	              0xc3	                                     ret	       658	eval.c	FUNCTION_12
0x4012034	         0xf1f4000	                         nop dword [rax]	       658	eval.c	FUNCTION_12
0x4012038	      0x488b442408	                mov rax, qword [rsp + 8]	      3264	eval.c	FUNCTION_63	IF_1	CALL_3
0x401203d	           0xfb638	                   movzx edi, byte [rax]	      3264	eval.c	FUNCTION_63	IF_1	CALL_3
0x4012040	      0xe800000000	                          call 0x4012045	      3264	eval.c	FUNCTION_63	IF_1	CALL_3
0x4012045	            0x85c0	                           test eax, eax	      3264	eval.c	FUNCTION_63	IF_1	CALL_3
0x4012047	            0x753f	                           jne 0x4012088	      3264	eval.c	FUNCTION_63	IF_1	CALL_3
0x4012049	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      3267	eval.c	FUNCTION_63	IF_1	CALL_4
0x401204e	      0xe800000000	                          call 0x4012053	      3267	eval.c	FUNCTION_63	IF_1	CALL_4
0x4012053	      0xe800000000	                          call 0x4012058	      3273	eval.c	FUNCTION_63	IF_1	IF_3	CALL_5
0x4012058	            0x85c0	                           test eax, eax	      3273	eval.c	FUNCTION_63	IF_1	IF_3	CALL_5
0x401205a	     0xf8552ffffff	                           jne 0x4011fb2	      3273	eval.c	FUNCTION_63	IF_1	IF_3	CALL_5
0x4012060	            0x31ff	                            xor edi, edi	      3274	eval.c	FUNCTION_63	IF_1	CALL_7
0x4012062	      0xba05000000	                              mov edx, 5	      3274	eval.c	FUNCTION_63	IF_1	CALL_7
0x4012067	      0xbe00000000	                              mov esi, 0	      3274	eval.c	FUNCTION_63	IF_1	CALL_7
0x401206c	      0xe800000000	                          call 0x4012071	      3274	eval.c	FUNCTION_63	IF_1	CALL_7
0x4012071	          0x4889de	                            mov rsi, rbx	      3274	eval.c	FUNCTION_63	IF_1	CALL_7
0x4012074	          0x4889c7	                            mov rdi, rax	      3274	eval.c	FUNCTION_63	IF_1	CALL_7
0x4012077	      0xe800000000	                          call 0x401207c	      3274	eval.c	FUNCTION_63	IF_1	CALL_7
0x401207c	      0xe931ffffff	                           jmp 0x4011fb2	      3274	eval.c	FUNCTION_63	IF_1	CALL_7
0x4012081	     0xf1f80000000	                         nop dword [rax]	      3274	eval.c	FUNCTION_63	IF_1	CALL_7
0x4012088	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       685	eval.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x401208d	      0x488d742408	                      lea rsi, [rsp + 8]	       685	eval.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x4012092	    0xc74424080000	                  mov dword [rsp + 8], 0	       682	eval.c	FUNCTION_13	ELSE_1
0x401209a	      0xe800000000	                          call 0x401209f	       685	eval.c	FUNCTION_13	ELSE_1	IF_3	CALL_2
0x401209f	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       686	eval.c	FUNCTION_13	ELSE_1	IF_3	CALL_3
0x40120a4	      0xe800000000	                          call 0x40120a9	       686	eval.c	FUNCTION_13	ELSE_1	IF_3	CALL_3
0x40120a9	      0xe90cffffff	                           jmp 0x4011fba	       686	eval.c	FUNCTION_13	ELSE_1	IF_3	CALL_3
0x40120ae	            0x6690	                                     nop	       686	eval.c	FUNCTION_13	ELSE_1	IF_3	CALL_3
0x40120b0	    0x48c705000000	               mov qword [0x040120bb], 0	      6476	eval.c	FUNCTION_109	IF_1
0x40120bb	      0xe9b5feffff	                           jmp 0x4011f75	      6476	eval.c	FUNCTION_109	IF_1
0x40120c0	    0x48c705000000	               mov qword [0x040120cb], 0	      6476	eval.c	FUNCTION_109	IF_1
0x40120cb	      0xe94dfeffff	                           jmp 0x4011f1d	      6476	eval.c	FUNCTION_109	IF_1
0x40120d0	    0x48c705000000	               mov qword [0x040120db], 0	      6476	eval.c	FUNCTION_109	IF_1
0x40120db	      0xe969feffff	                           jmp 0x4011f49	      6476	eval.c	FUNCTION_109	IF_1
0x40120e0	      0xe800000000	                          call 0x40120e5	       658	eval.c	FUNCTION_12
