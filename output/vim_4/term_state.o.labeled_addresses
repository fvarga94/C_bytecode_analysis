on_escape	functions,0:WHILE,0:DO,0:ELSE,0:FOR,2:IF,10:SWITCH,3:CALL,10	255
0x4002560	            0x4157	                                push r15	       571	state.c	FUNCTION_21
0x4002562	            0x4156	                                push r14	       571	state.c	FUNCTION_21
0x4002564	            0x4155	                                push r13	       571	state.c	FUNCTION_21
0x4002566	            0x4154	                                push r12	       571	state.c	FUNCTION_21
0x4002568	              0x55	                                push rbp	       571	state.c	FUNCTION_21
0x4002569	              0x53	                                push rbx	       571	state.c	FUNCTION_21
0x400256a	        0x4883ec28	                           sub rsp, 0x28	       571	state.c	FUNCTION_21
0x400256e	           0xfb61f	                   movzx ebx, byte [rdi]	       577	state.c	FUNCTION_21	SWITCH_1
0x4002571	    0x64488b042528	                mov rax, qword fs:[0x28]	       571	state.c	FUNCTION_21
0x400257a	      0x4889442418	             mov qword [rsp + 0x18], rax	       571	state.c	FUNCTION_21
0x400257f	            0x31c0	                            xor eax, eax	       571	state.c	FUNCTION_21
0x4002581	          0x8d43e0	                   lea eax, [rbx - 0x20]	       577	state.c	FUNCTION_21	SWITCH_1
0x4002584	            0x3c5e	                            cmp al, 0x5e	       577	state.c	FUNCTION_21	SWITCH_1
0x4002586	     0xf875c020000	                            ja 0x40027e8	       577	state.c	FUNCTION_21	SWITCH_1
0x400258c	           0xfb6c0	                           movzx eax, al	       577	state.c	FUNCTION_21	SWITCH_1
0x400258f	          0x4989d5	                            mov r13, rdx	       577	state.c	FUNCTION_21	SWITCH_1
0x4002592	    0xff24c5000000	                       jmp qword [rax*8]	       577	state.c	FUNCTION_21	SWITCH_1
0x4002599	     0xf1f80000000	                         nop dword [rax]	       577	state.c	FUNCTION_21	SWITCH_1
0x40025a0	    0xc78214010000	              mov dword [rdx + 0x114], 3	       703	state.c	FUNCTION_21	SWITCH_1
0x40025aa	      0xb801000000	                              mov eax, 1	       704	state.c	FUNCTION_21	SWITCH_1
0x40025af	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       709	state.c	FUNCTION_21
0x40025b4	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       709	state.c	FUNCTION_21
0x40025bd	     0xf85ae030000	                           jne 0x4002971	       709	state.c	FUNCTION_21
0x40025c3	        0x4883c428	                           add rsp, 0x28	       709	state.c	FUNCTION_21
0x40025c7	              0x5b	                                 pop rbx	       709	state.c	FUNCTION_21
0x40025c8	              0x5d	                                 pop rbp	       709	state.c	FUNCTION_21
0x40025c9	            0x415c	                                 pop r12	       709	state.c	FUNCTION_21
0x40025cb	            0x415d	                                 pop r13	       709	state.c	FUNCTION_21
0x40025cd	            0x415e	                                 pop r14	       709	state.c	FUNCTION_21
0x40025cf	            0x415f	                                 pop r15	       709	state.c	FUNCTION_21
0x40025d1	              0xc3	                                     ret	       709	state.c	FUNCTION_21
0x40025d2	    0x660f1f440000	                    nop word [rax + rax]	       709	state.c	FUNCTION_21
0x40025d8	            0x31f6	                            xor esi, esi	       663	state.c	FUNCTION_21	SWITCH_1	CALL_9
0x40025da	          0x4889d7	                            mov rdi, rdx	       663	state.c	FUNCTION_21	SWITCH_1	CALL_9
0x40025dd	      0xe83ee2ffff	                     call sym.savecursor	       663	state.c	FUNCTION_21	SWITCH_1	CALL_9
0x40025e2	      0xb801000000	                              mov eax, 1	       664	state.c	FUNCTION_21	SWITCH_1
0x40025e7	            0xebc6	                           jmp 0x40025af	       664	state.c	FUNCTION_21	SWITCH_1
0x40025e9	     0xf1f80000000	                         nop dword [rax]	       664	state.c	FUNCTION_21	SWITCH_1
0x40025f0	    0x808a94000000	                 or byte [rdx + 0x94], 1	       670	state.c	FUNCTION_21	SWITCH_1
0x40025f7	      0xb801000000	                              mov eax, 1	       671	state.c	FUNCTION_21	SWITCH_1
0x40025fc	            0xebb1	                           jmp 0x40025af	       671	state.c	FUNCTION_21	SWITCH_1
0x40025fe	            0x6690	                                     nop	       671	state.c	FUNCTION_21	SWITCH_1
0x4002600	    0x80a294000000	             and byte [rdx + 0x94], 0xfe	       674	state.c	FUNCTION_21	SWITCH_1
0x4002607	      0xb801000000	                              mov eax, 1	       675	state.c	FUNCTION_21	SWITCH_1
0x400260c	            0xeba1	                           jmp 0x40025af	       675	state.c	FUNCTION_21	SWITCH_1
0x400260e	            0x6690	                                     nop	       675	state.c	FUNCTION_21	SWITCH_1
0x4002610	      0xbe01000000	                              mov esi, 1	       680	state.c	FUNCTION_21	SWITCH_1	CALL_10
0x4002615	          0x4889d7	                            mov rdi, rdx	       680	state.c	FUNCTION_21	SWITCH_1	CALL_10
0x4002618	        0x488b5a30	            mov rbx, qword [rdx + 0x30] 	       679	state.c	FUNCTION_21	SWITCH_1
0x400261c	      0xe800000000	                          call 0x4002621	       680	state.c	FUNCTION_21	SWITCH_1	CALL_10
0x4002621	        0x498b4508	                mov rax, qword [r13 + 8]	       681	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4002625	          0x4885c0	                           test rax, rax	       681	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4002628	     0xf847cffffff	                            je 0x40025aa	       681	state.c	FUNCTION_21	SWITCH_1	IF_10
0x400262e	        0x488b4008	                mov rax, qword [rax + 8]	       681	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4002632	          0x4885c0	                           test rax, rax	       681	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4002635	     0xf846fffffff	                            je 0x40025aa	       681	state.c	FUNCTION_21	SWITCH_1	IF_10
0x400263b	    0x410fb6959400	           movzx edx, byte [r13 + 0x94] 	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4002643	        0x498b4d10	            mov rcx, qword [r13 + 0x10] 	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4002647	          0x4889de	                            mov rsi, rbx	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x400264a	        0x498b7d30	            mov rdi, qword [r13 + 0x30] 	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x400264e	          0xc0ea05	                               shr dl, 5	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4002651	          0x83e201	                              and edx, 1	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4002654	            0xffd0	                                call rax	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4002656	      0xe94fffffff	                           jmp 0x40025aa	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x400265b	       0xf1f440000	                   nop dword [rax + rax]	       682	state.c	FUNCTION_21	SWITCH_1	IF_10
0x4002660	    0xc78210010000	              mov dword [rdx + 0x110], 2	       687	state.c	FUNCTION_21	SWITCH_1
0x400266a	      0xb801000000	                              mov eax, 1	       688	state.c	FUNCTION_21	SWITCH_1
0x400266f	      0xe93bffffff	                           jmp 0x40025af	       688	state.c	FUNCTION_21	SWITCH_1
0x4002674	         0xf1f4000	                         nop dword [rax]	       688	state.c	FUNCTION_21	SWITCH_1
0x4002678	    0xc78210010000	              mov dword [rdx + 0x110], 3	       691	state.c	FUNCTION_21	SWITCH_1
0x4002682	      0xb801000000	                              mov eax, 1	       692	state.c	FUNCTION_21	SWITCH_1
0x4002687	      0xe923ffffff	                           jmp 0x40025af	       692	state.c	FUNCTION_21	SWITCH_1
0x400268c	         0xf1f4000	                         nop dword [rax]	       692	state.c	FUNCTION_21	SWITCH_1
0x4002690	    0xc78214010000	              mov dword [rdx + 0x114], 2	       699	state.c	FUNCTION_21	SWITCH_1
0x400269a	      0xb801000000	                              mov eax, 1	       700	state.c	FUNCTION_21	SWITCH_1
0x400269f	      0xe90bffffff	                           jmp 0x40025af	       700	state.c	FUNCTION_21	SWITCH_1
0x40026a4	         0xf1f4000	                         nop dword [rax]	       700	state.c	FUNCTION_21	SWITCH_1
0x40026a8	    0xc78214010000	              mov dword [rdx + 0x114], 1	       695	state.c	FUNCTION_21	SWITCH_1
0x40026b2	      0xb801000000	                              mov eax, 1	       696	state.c	FUNCTION_21	SWITCH_1
0x40026b7	      0xe9f3feffff	                           jmp 0x40025af	       696	state.c	FUNCTION_21	SWITCH_1
0x40026bc	         0xf1f4000	                         nop dword [rax]	       696	state.c	FUNCTION_21	SWITCH_1
0x40026c0	            0x31c0	                            xor eax, eax	       580	state.c	FUNCTION_21	SWITCH_1	IF_1
0x40026c2	        0x4883fe02	                              cmp rsi, 2	       579	state.c	FUNCTION_21	SWITCH_1	IF_1
0x40026c6	     0xf85e3feffff	                           jne 0x40025af	       579	state.c	FUNCTION_21	SWITCH_1	IF_1
0x40026cc	         0xfb65701	               movzx edx, byte [rdi + 1]	       582	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x40026d0	          0x80fa46	                            cmp dl, 0x46	       582	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x40026d3	     0xf8486020000	                            je 0x400295f	       582	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x40026d9	          0x80fa47	                            cmp dl, 0x47	       582	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x40026dc	     0xf85cdfeffff	                           jne 0x40025af	       582	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x40026e2	        0x498b4500	                    mov rax, qword [r13]	       588	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x40026e6	        0x80481802	                 or byte [rax + 0x18], 2	       588	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x40026ea	      0xb802000000	                              mov eax, 2	       594	state.c	FUNCTION_21	SWITCH_1
0x40026ef	      0xe9bbfeffff	                           jmp 0x40025af	       589	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x40026f4	         0xf1f4000	                         nop dword [rax]	       589	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x40026f8	            0x31c0	                            xor eax, eax	       580	state.c	FUNCTION_21	SWITCH_1	IF_1
0x40026fa	        0x4883fe02	                              cmp rsi, 2	       597	state.c	FUNCTION_21	SWITCH_1	IF_2
0x40026fe	     0xf85abfeffff	                           jne 0x40025af	       597	state.c	FUNCTION_21	SWITCH_1	IF_2
0x4002704	         0xfb64701	               movzx eax, byte [rdi + 1]	       600	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x4002708	          0x83e833	                           sub eax, 0x33	       600	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x400270b	            0x3c05	                               cmp al, 5	       600	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x400270d	     0xf87d5000000	                            ja 0x40027e8	       600	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x4002713	           0xfb6c0	                           movzx eax, al	       600	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x4002716	    0xff24c5000000	                       jmp qword [rax*8]	       600	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x400271d	           0xf1f00	                         nop dword [rax]	       600	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x4002720	            0x31c0	                            xor eax, eax	       580	state.c	FUNCTION_21	SWITCH_1	IF_1
0x4002722	        0x4883fe02	                              cmp rsi, 2	       641	state.c	FUNCTION_21	SWITCH_1	IF_7
0x4002726	     0xf8583feffff	                           jne 0x40025af	       641	state.c	FUNCTION_21	SWITCH_1	IF_7
0x400272c	         0xfbe7701	               movsx esi, byte [rdi + 1]	       646	state.c	FUNCTION_21	SWITCH_1	CALL_7
0x4002730	      0xbf01000000	                              mov edi, 1	       646	state.c	FUNCTION_21	SWITCH_1	CALL_7
0x4002735	      0xe800000000	                          call 0x400273a	       646	state.c	FUNCTION_21	SWITCH_1	CALL_7
0x400273a	          0x4885c0	                           test rax, rax	       648	state.c	FUNCTION_21	SWITCH_1	IF_8
0x400273d	     0xf84a5010000	                            je 0x40028e8	       648	state.c	FUNCTION_21	SWITCH_1	IF_8
0x4002743	           0xfbed3	                           movsx edx, bl	       645	state.c	FUNCTION_21	SWITCH_1
0x4002746	          0x488b08	                    mov rcx, qword [rax]	       651	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x4002749	          0x83ea28	                           sub edx, 0x28	       645	state.c	FUNCTION_21	SWITCH_1
0x400274c	          0x4863d2	                         movsxd rdx, edx	       649	state.c	FUNCTION_21	SWITCH_1	IF_8
0x400274f	        0x488d1452	                  lea rdx, [rdx + rdx*2]	       649	state.c	FUNCTION_21	SWITCH_1	IF_8
0x4002753	        0x48c1e203	                              shl rdx, 3	       649	state.c	FUNCTION_21	SWITCH_1	IF_8
0x4002757	          0x4885c9	                           test rcx, rcx	       651	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x400275a	    0x498984159800	       mov qword [r13 + rdx + 0x98], rax	       649	state.c	FUNCTION_21	SWITCH_1	IF_8
0x4002762	     0xf8480010000	                            je 0x40028e8	       651	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x4002768	          0x4889c7	                            mov rdi, rax	       652	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x400276b	    0x498db415a000	            lea rsi, [r13 + rdx + 0xa0] 	       652	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x4002773	            0xffd1	                                call rcx	       652	state.c	FUNCTION_21	SWITCH_1	IF_8	IF_9
0x4002775	      0xb802000000	                              mov eax, 2	       656	state.c	FUNCTION_21	SWITCH_1
0x400277a	      0xe930feffff	                           jmp 0x40025af	       656	state.c	FUNCTION_21	SWITCH_1
0x400277f	              0x90	                                     nop	       656	state.c	FUNCTION_21	SWITCH_1
0x4002780	        0x488b4230	            mov rax, qword [rdx + 0x30] 	       548	state.c	FUNCTION_20	IF_1
0x4002784	     0xfb6b2940100	          movzx esi, byte [rdx + 0x194] 	       549	state.c	FUNCTION_20	IF_1
0x400278b	          0x4c89ef	                            mov rdi, r13	       553	state.c	FUNCTION_20	IF_1	CALL_1
0x400278e	    0x488982800100	            mov qword [rdx + 0x180], rax	       548	state.c	FUNCTION_20	IF_1
0x4002795	     0xfb682940000	           movzx eax, byte [rdx + 0x94] 	       549	state.c	FUNCTION_20	IF_1
0x400279c	          0x83e6fc	                     and esi, 0xfffffffc	       549	state.c	FUNCTION_20	IF_1
0x400279f	            0x89c1	                            mov ecx, eax	       549	state.c	FUNCTION_20	IF_1
0x40027a1	          0xc0e805	                               shr al, 5	       550	state.c	FUNCTION_20	IF_1
0x40027a4	          0x83e002	                              and eax, 2	       550	state.c	FUNCTION_20	IF_1
0x40027a7	          0xc0e905	                               shr cl, 5	       549	state.c	FUNCTION_20	IF_1
0x40027aa	            0x89c2	                            mov edx, eax	       550	state.c	FUNCTION_20	IF_1
0x40027ac	          0x83e101	                              and ecx, 1	       549	state.c	FUNCTION_20	IF_1
0x40027af	            0x89f0	                            mov eax, esi	       550	state.c	FUNCTION_20	IF_1
0x40027b1	             0x9c8	                             or eax, ecx	       550	state.c	FUNCTION_20	IF_1
0x40027b3	      0xbe01000000	                              mov esi, 1	       553	state.c	FUNCTION_20	IF_1	CALL_1
0x40027b8	             0x9d0	                             or eax, edx	       550	state.c	FUNCTION_20	IF_1
0x40027ba	    0x410fb7959400	           movzx edx, word [r13 + 0x94] 	       551	state.c	FUNCTION_20	IF_1
0x40027c2	          0x83e0f3	                     and eax, 0xfffffff3	       551	state.c	FUNCTION_20	IF_1
0x40027c5	        0x66c1ea07	                               shr dx, 7	       551	state.c	FUNCTION_20	IF_1
0x40027c9	          0x83e203	                              and edx, 3	       551	state.c	FUNCTION_20	IF_1
0x40027cc	          0xc1e202	                              shl edx, 2	       551	state.c	FUNCTION_20	IF_1
0x40027cf	             0x9d0	                             or eax, edx	       551	state.c	FUNCTION_20	IF_1
0x40027d1	    0x418885940100	              mov byte [r13 + 0x194], al	       551	state.c	FUNCTION_20	IF_1
0x40027d8	      0xe800000000	                          call 0x40027dd	       553	state.c	FUNCTION_20	IF_1	CALL_1
0x40027dd	      0xe9c8fdffff	                           jmp 0x40025aa	       553	state.c	FUNCTION_20	IF_1	CALL_1
0x40027e2	    0x660f1f440000	                    nop word [rax + rax]	       553	state.c	FUNCTION_20	IF_1	CALL_1
0x40027e8	            0x31c0	                            xor eax, eax	       636	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x40027ea	      0xe9c0fdffff	                           jmp 0x40025af	       636	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x40027ef	          0x8b4228	            mov eax, dword [rdx + 0x28] 	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x40027f2	    0xc74424104500	           mov dword [rsp + 0x10], 0x45 	       628	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x40027fa	    0xc74424140000	               mov dword [rsp + 0x14], 0	       628	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x4002802	            0x85c0	                           test eax, eax	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x4002804	     0xf8ede000000	                           jle 0x40028e8	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x400280a	        0x4c8b4258	              mov r8, qword [rdx + 0x58]	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x400280e	          0x8b4a2c	            mov ecx, dword [rdx + 0x2c] 	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x4002811	      0x488d6c2410	                   lea rbp, [rsp + 0x10]	        19	state.c	FUNCTION_1
0x4002816	          0x4531e4	                          xor r12d, r12d	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x4002819	     0xf1f80000000	                         nop dword [rax]	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x4002820	    0x4e8d3ca50000	                        lea r15, [r12*4]	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x4002828	      0x470fb60ca0	            movzx r9d, byte [r8 + r12*4]	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x400282d	          0x4531f6	                          xor r14d, r14d	       571	state.c	FUNCTION_21
0x4002830	          0x4489e3	                           mov ebx, r12d	       571	state.c	FUNCTION_21
0x4002833	        0x4b8d3c38	                     lea rdi, [r8 + r15]	       571	state.c	FUNCTION_21
0x4002837	            0xeb7f	                           jmp 0x40028b8	       571	state.c	FUNCTION_21
0x4002839	     0xf1f80000000	                         nop dword [rax]	       571	state.c	FUNCTION_21
0x4002840	    0x440fb654240c	           movzx r10d, byte [rsp + 0xc] 	        21	state.c	FUNCTION_1
0x4002846	           0xfb617	                   movzx edx, byte [rdi]	        22	state.c	FUNCTION_1
0x4002849	          0x4c89f6	                            mov rsi, r14	        22	state.c	FUNCTION_1
0x400284c	    0x410fb6857c01	          movzx eax, byte [r13 + 0x17c] 	        21	state.c	FUNCTION_1
0x4002854	        0x48c1e620	                           shl rsi, 0x20	        21	state.c	FUNCTION_1
0x4002858	        0x48892c24	                    mov qword [rsp], rbp	        19	state.c	FUNCTION_1
0x400285c	          0x4809de	                             or rsi, rbx	        19	state.c	FUNCTION_1
0x400285f	    0xc74424080100	                  mov dword [rsp + 8], 1	        20	state.c	FUNCTION_1
0x4002867	        0x4183e2fc	                    and r10d, 0xfffffffc	        21	state.c	FUNCTION_1
0x400286b	          0x83e201	                              and edx, 1	        22	state.c	FUNCTION_1
0x400286e	          0x83e001	                              and eax, 1	        21	state.c	FUNCTION_1
0x4002871	             0x1d2	                            add edx, edx	        22	state.c	FUNCTION_1
0x4002873	          0x4409d0	                            or eax, r10d	        22	state.c	FUNCTION_1
0x4002876	             0x9d0	                             or eax, edx	        22	state.c	FUNCTION_1
0x4002878	           0xfb617	                   movzx edx, byte [rdi]	        23	state.c	FUNCTION_1
0x400287b	          0x83e0f3	                     and eax, 0xfffffff3	        23	state.c	FUNCTION_1
0x400287e	             0x1d2	                            add edx, edx	        23	state.c	FUNCTION_1
0x4002880	          0x83e20c	                            and edx, 0xc	        23	state.c	FUNCTION_1
0x4002883	             0x9d0	                             or eax, edx	        23	state.c	FUNCTION_1
0x4002885	        0x8844240c	                mov byte [rsp + 0xc], al	        23	state.c	FUNCTION_1
0x4002889	        0x498b4508	                mov rax, qword [r13 + 8]	        25	state.c	FUNCTION_1	IF_1
0x400288d	          0x4885c0	                           test rax, rax	        25	state.c	FUNCTION_1	IF_1
0x4002890	            0x7422	                            je 0x40028b4	        25	state.c	FUNCTION_1	IF_1
0x4002892	          0x488b00	                    mov rax, qword [rax]	        25	state.c	FUNCTION_1	IF_1
0x4002895	          0x4885c0	                           test rax, rax	        25	state.c	FUNCTION_1	IF_1
0x4002898	            0x741a	                            je 0x40028b4	        25	state.c	FUNCTION_1	IF_1
0x400289a	          0x4889e7	                            mov rdi, rsp	        26	state.c	FUNCTION_1	IF_1	IF_2
0x400289d	        0x498b5510	            mov rdx, qword [r13 + 0x10] 	        26	state.c	FUNCTION_1	IF_1	IF_2
0x40028a1	            0xffd0	                                call rax	        26	state.c	FUNCTION_1	IF_1	IF_2
0x40028a3	        0x4d8b4558	              mov r8, qword [r13 + 0x58]	        26	state.c	FUNCTION_1	IF_1	IF_2
0x40028a7	        0x418b4d2c	            mov ecx, dword [r13 + 0x2c] 	        26	state.c	FUNCTION_1	IF_1	IF_2
0x40028ab	      0x470fb60c38	              movzx r9d, byte [r8 + r15]	        26	state.c	FUNCTION_1	IF_1	IF_2
0x40028b0	        0x4b8d3c38	                     lea rdi, [r8 + r15]	        26	state.c	FUNCTION_1	IF_1	IF_2
0x40028b4	        0x4183c601	                             add r14d, 1	        26	state.c	FUNCTION_1	IF_1	IF_2
0x40028b8	        0x41f6c101	                             test r9b, 1	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x40028bc	            0x89c8	                            mov eax, ecx	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x40028be	            0x7407	                            je 0x40028c7	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x40028c0	          0xc1e81f	                           shr eax, 0x1f	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x40028c3	             0x1c8	                            add eax, ecx	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x40028c5	            0xd1f8	                              sar eax, 1	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x40028c7	          0x4439f0	                           cmp eax, r14d	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x40028ca	     0xf8f70ffffff	                            jg 0x4002840	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x40028d0	      0x418d442401	                      lea eax, [r12 + 1]	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x40028d5	        0x4983c401	                              add r12, 1	       630	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1	FOR_2	CALL_5
0x40028d9	        0x41394528	            cmp dword [r13 + 0x28], eax 	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x40028dd	     0xf8f3dffffff	                            jg 0x4002820	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x40028e3	       0xf1f440000	                   nop dword [rax + rax]	       629	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	FOR_1
0x40028e8	      0xb802000000	                              mov eax, 2	       638	state.c	FUNCTION_21	SWITCH_1
0x40028ed	      0xe9bdfcffff	                           jmp 0x40025af	       605	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x40028f2	    0xf68295000000	           test byte [rdx + 0x95], 0x10 	       620	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_6
0x40028f9	            0x75ed	                           jne 0x40028e8	       620	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_6
0x40028fb	          0x8b7230	            mov esi, dword [rdx + 0x30] 	       622	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_4
0x40028fe	          0x4531c0	                            xor r8d, r8d	       622	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_4
0x4002901	      0xb901000000	                              mov ecx, 1	       604	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_1
0x4002906	            0x31d2	                            xor edx, edx	       604	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_1
0x4002908	          0x4c89ef	                            mov rdi, r13	       604	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_1
0x400290b	      0xe830d7ffff	                   call sym.set_lineinfo	       604	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_1
0x4002910	            0xebd6	                           jmp 0x40028e8	       604	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_1
0x4002912	    0xf68295000000	           test byte [rdx + 0x95], 0x10 	       614	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_5
0x4002919	            0x75cd	                           jne 0x40028e8	       614	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_5
0x400291b	          0x8b7230	            mov esi, dword [rdx + 0x30] 	       616	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_3
0x400291e	          0x4531c0	                            xor r8d, r8d	       616	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_3
0x4002921	            0x31c9	                            xor ecx, ecx	       616	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_3
0x4002923	            0x31d2	                            xor edx, edx	       616	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_3
0x4002925	          0x4c89ef	                            mov rdi, r13	       616	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_3
0x4002928	      0xe813d7ffff	                   call sym.set_lineinfo	       616	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_3
0x400292d	      0xb802000000	                              mov eax, 2	       638	state.c	FUNCTION_21	SWITCH_1
0x4002932	      0xe978fcffff	                           jmp 0x40025af	       617	state.c	FUNCTION_21	SWITCH_1	SWITCH_3
0x4002937	    0xf68295000000	           test byte [rdx + 0x95], 0x10 	       608	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_4
0x400293e	            0x75a8	                           jne 0x40028e8	       608	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_4
0x4002940	          0x8b7230	            mov esi, dword [rdx + 0x30] 	       610	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_2
0x4002943	    0x41b802000000	                              mov r8d, 2	       610	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_2
0x4002949	            0xebb6	                           jmp 0x4002901	       610	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_2
0x400294b	    0xf68295000000	           test byte [rdx + 0x95], 0x10 	       602	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_3
0x4002952	            0x7594	                           jne 0x40028e8	       602	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	IF_3
0x4002954	          0x8b7230	            mov esi, dword [rdx + 0x30] 	       604	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_1
0x4002957	    0x41b801000000	                              mov r8d, 1	       604	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_1
0x400295d	            0xeba2	                           jmp 0x4002901	       604	state.c	FUNCTION_21	SWITCH_1	SWITCH_3	CALL_1
0x400295f	        0x498b4500	                    mov rax, qword [r13]	       584	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x4002963	        0x806018fd	             and byte [rax + 0x18], 0xfd	       584	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x4002967	      0xb802000000	                              mov eax, 2	       594	state.c	FUNCTION_21	SWITCH_1
0x400296c	      0xe93efcffff	                           jmp 0x40025af	       585	state.c	FUNCTION_21	SWITCH_1	SWITCH_2
0x4002971	      0xe800000000	                          call 0x4002976	       709	state.c	FUNCTION_21
vterm_state_get_cbdata	functions,0:WHILE,0:DO,0:ELSE,0:FOR,0:IF,0:SWITCH,0:CALL,0	2
0x40029f0	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      1830	state.c	FUNCTION_35
0x40029f4	              0xc3	                                     ret	      1831	state.c	FUNCTION_35
on_resize	functions,0:WHILE,0:DO,0:ELSE,2:FOR,4:IF,10:SWITCH,0:CALL,5	213
0x4000550	            0x4157	                                push r15	      1610	state.c	FUNCTION_29
0x4000552	            0x4156	                                push r14	      1610	state.c	FUNCTION_29
0x4000554	          0x4189ff	                           mov r15d, edi	      1610	state.c	FUNCTION_29
0x4000557	            0x4155	                                push r13	      1610	state.c	FUNCTION_29
0x4000559	            0x4154	                                push r12	      1610	state.c	FUNCTION_29
0x400055b	          0x4189f6	                           mov r14d, esi	      1610	state.c	FUNCTION_29
0x400055e	              0x55	                                push rbp	      1610	state.c	FUNCTION_29
0x400055f	              0x53	                                push rbx	      1610	state.c	FUNCTION_29
0x4000560	          0x4889d3	                            mov rbx, rdx	      1610	state.c	FUNCTION_29
0x4000563	        0x4883ec18	                           sub rsp, 0x18	      1610	state.c	FUNCTION_29
0x4000567	        0x448b6230	           mov r12d, dword [rdx + 0x30] 	      1612	state.c	FUNCTION_29
0x400056b	          0x8b6a34	            mov ebp, dword [rdx + 0x34] 	      1612	state.c	FUNCTION_29
0x400056e	    0x64488b042528	                mov rax, qword fs:[0x28]	      1610	state.c	FUNCTION_29
0x4000577	      0x4889442408	                mov qword [rsp + 8], rax	      1610	state.c	FUNCTION_29
0x400057c	            0x31c0	                            xor eax, eax	      1610	state.c	FUNCTION_29
0x400057e	          0x39722c	            cmp dword [rdx + 0x2c], esi 	      1615	state.c	FUNCTION_29	IF_1
0x4000581	    0xc70424000000	                      mov dword [rsp], 0	      1613	state.c	FUNCTION_29
0x4000588	    0xc74424040000	                  mov dword [rsp + 4], 0	      1613	state.c	FUNCTION_29
0x4000590	     0xf84d1000000	                            je 0x4000667	      1615	state.c	FUNCTION_29	IF_1
0x4000596	          0x8d460e	                    lea eax, [rsi + 0xe]	      1616	state.c	FUNCTION_29	IF_1	CALL_1
0x4000599	          0x83c607	                              add esi, 7	      1616	state.c	FUNCTION_29	IF_1	CALL_1
0x400059c	          0x488b3a	                    mov rdi, qword [rdx]	      1616	state.c	FUNCTION_29	IF_1	CALL_1
0x400059f	           0xf48f0	                          cmovs esi, eax	      1616	state.c	FUNCTION_29	IF_1	CALL_1
0x40005a2	          0xc1fe03	                              sar esi, 3	      1616	state.c	FUNCTION_29	IF_1	CALL_1
0x40005a5	          0x4863f6	                         movsxd rsi, esi	      1616	state.c	FUNCTION_29	IF_1	CALL_1
0x40005a8	      0xe800000000	                          call 0x40005ad	      1616	state.c	FUNCTION_29	IF_1	CALL_1
0x40005ad	          0x8b4b2c	            mov ecx, dword [rbx + 0x2c] 	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x40005b0	            0x31d2	                            xor edx, edx	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x40005b2	          0x4989c5	                            mov r13, rax	      1616	state.c	FUNCTION_29	IF_1	CALL_1
0x40005b5	            0x85c9	                           test ecx, ecx	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x40005b7	            0x7e52	                           jle 0x400060b	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x40005b9	          0x4585f6	                         test r14d, r14d	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x40005bc	      0xbf01000000	                              mov edi, 1	      1621	state.c	FUNCTION_29	IF_1	FOR_1
0x40005c1	            0x7f1f	                            jg 0x40005e2	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x40005c3	      0xe98f000000	                           jmp 0x4000657	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x40005c8	     0xf1f84000000	                   nop dword [rax + rax]	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x40005d0	      0x4108440d00	                 or byte [r13 + rcx], al	      1623	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x40005d5	          0x83c201	                              add edx, 1	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x40005d8	          0x39532c	            cmp dword [rbx + 0x2c], edx 	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x40005db	            0x7e2e	                           jle 0x400060b	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x40005dd	          0x4139d6	                           cmp r14d, edx	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x40005e0	            0x7475	                            je 0x4000657	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x40005e2	            0x89d1	                            mov ecx, edx	      1621	state.c	FUNCTION_29	IF_1	FOR_1
0x40005e4	            0x89f8	                            mov eax, edi	      1621	state.c	FUNCTION_29	IF_1	FOR_1
0x40005e6	        0x488b7350	            mov rsi, qword [rbx + 0x50] 	      1622	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x40005ea	          0x83e107	                              and ecx, 7	      1621	state.c	FUNCTION_29	IF_1	FOR_1
0x40005ed	            0xd3e0	                             shl eax, cl	      1621	state.c	FUNCTION_29	IF_1	FOR_1
0x40005ef	            0x89d1	                            mov ecx, edx	      1622	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x40005f1	          0xc1f903	                              sar ecx, 3	      1622	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x40005f4	          0x4863c9	                         movsxd rcx, ecx	      1622	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x40005f7	          0x84040e	               test byte [rsi + rcx], al	      1622	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x40005fa	            0x75d4	                           jne 0x40005d0	      1622	state.c	FUNCTION_29	IF_1	FOR_1	IF_2
0x40005fc	            0xf7d0	                                 not eax	      1625	state.c	FUNCTION_29	IF_1	FOR_1	ELSE_1
0x40005fe	      0x4120440d00	                and byte [r13 + rcx], al	      1625	state.c	FUNCTION_29	IF_1	FOR_1	ELSE_1
0x4000603	          0x83c201	                              add edx, 1	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x4000606	          0x39532c	            cmp dword [rbx + 0x2c], edx 	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x4000609	            0x7fd2	                            jg 0x40005dd	      1620	state.c	FUNCTION_29	IF_1	FOR_1
0x400060b	          0x4139d6	                           cmp r14d, edx	      1628	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x400060e	      0xbe01000000	                              mov esi, 1	      1629	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x4000613	            0x7f1e	                            jg 0x4000633	      1628	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x4000615	            0xeb40	                           jmp 0x4000657	      1628	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x4000617	    0x660f1f840000	                    nop word [rax + rax]	      1628	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x4000620	          0xc1f903	                              sar ecx, 3	      1631	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x4000623	          0x83c201	                              add edx, 1	      1628	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x4000626	          0x4863c9	                         movsxd rcx, ecx	      1631	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x4000629	      0x4108440d00	                 or byte [r13 + rcx], al	      1631	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x400062e	          0x4139d6	                           cmp r14d, edx	      1628	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x4000631	            0x7424	                            je 0x4000657	      1628	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x4000633	            0x89d1	                            mov ecx, edx	      1629	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x4000635	            0x89f0	                            mov eax, esi	      1629	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x4000637	          0x83e107	                              and ecx, 7	      1629	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x400063a	            0xd3e0	                             shl eax, cl	      1629	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x400063c	            0x85c9	                           test ecx, ecx	      1630	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x400063e	            0x89d1	                            mov ecx, edx	      1631	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x4000640	            0x74de	                            je 0x4000620	      1630	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	IF_3
0x4000642	          0xc1f903	                              sar ecx, 3	      1633	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	ELSE_2
0x4000645	          0x83c201	                              add edx, 1	      1628	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x4000648	            0xf7d0	                                 not eax	      1633	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	ELSE_2
0x400064a	          0x4863c9	                         movsxd rcx, ecx	      1633	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	ELSE_2
0x400064d	      0x4120440d00	                and byte [r13 + rcx], al	      1633	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2	ELSE_2
0x4000652	          0x4139d6	                           cmp r14d, edx	      1628	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x4000655	            0x75dc	                           jne 0x4000633	      1628	state.c	FUNCTION_29	IF_1	ELSE_1	FOR_2
0x4000657	        0x488b7350	            mov rsi, qword [rbx + 0x50] 	      1636	state.c	FUNCTION_29	IF_1	CALL_2
0x400065b	          0x488b3b	                    mov rdi, qword [rbx]	      1636	state.c	FUNCTION_29	IF_1	CALL_2
0x400065e	      0xe800000000	                          call 0x4000663	      1636	state.c	FUNCTION_29	IF_1	CALL_2
0x4000663	        0x4c896b50	             mov qword [rbx + 0x50], r13	      1637	state.c	FUNCTION_29	IF_1
0x4000667	        0x44397b28	           cmp dword [rbx + 0x28], r15d 	      1640	state.c	FUNCTION_29	IF_4
0x400066b	     0xf8487000000	                            je 0x40006f8	      1640	state.c	FUNCTION_29	IF_4
0x4000671	          0x488b3b	                    mov rdi, qword [rbx]	      1641	state.c	FUNCTION_29	IF_4	CALL_3
0x4000674	          0x4963f7	                        movsxd rsi, r15d	      1641	state.c	FUNCTION_29	IF_4	CALL_3
0x4000677	        0x48c1e602	                              shl rsi, 2	      1641	state.c	FUNCTION_29	IF_4	CALL_3
0x400067b	      0xe800000000	                          call 0x4000680	      1641	state.c	FUNCTION_29	IF_4	CALL_3
0x4000680	        0x448b4328	            mov r8d, dword [rbx + 0x28] 	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x4000684	          0x4989c5	                            mov r13, rax	      1641	state.c	FUNCTION_29	IF_4	CALL_3
0x4000687	        0x488b7358	            mov rsi, qword [rbx + 0x58] 	      1641	state.c	FUNCTION_29	IF_4	CALL_3
0x400068b	          0x4585c0	                           test r8d, r8d	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x400068e	     0xf8e78010000	                           jle 0x400080c	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x4000694	          0x4585ff	                         test r15d, r15d	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x4000697	            0x7e53	                           jle 0x40006ec	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x4000699	            0x31c9	                            xor ecx, ecx	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x400069b	            0x31d2	                            xor edx, edx	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x400069d	            0xeb0a	                           jmp 0x40006a9	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x400069f	              0x90	                                     nop	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x40006a0	        0x4883c104	                              add rcx, 4	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x40006a4	          0x4139d7	                           cmp r15d, edx	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x40006a7	            0x7443	                            je 0x40006ec	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x40006a9	          0x8b3c0e	              mov edi, dword [rsi + rcx]	      1645	state.c	FUNCTION_29	IF_4	FOR_3
0x40006ac	          0x83c201	                              add edx, 1	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x40006af	          0x4439c2	                            cmp edx, r8d	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x40006b2	      0x41897c0d00	              mov dword [r13 + rcx], edi	      1645	state.c	FUNCTION_29	IF_4	FOR_3
0x40006b7	            0x75e7	                           jne 0x40006a0	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x40006b9	          0x4539c7	                           cmp r15d, r8d	      1648	state.c	FUNCTION_29	IF_4	FOR_4
0x40006bc	            0x7e2e	                           jle 0x40006ec	      1648	state.c	FUNCTION_29	IF_4	FOR_4
0x40006be	        0x418d47ff	                      lea eax, [r15 - 1]	      1648	state.c	FUNCTION_29	IF_4	FOR_4
0x40006c2	          0x4963c8	                         movsxd rcx, r8d	      1648	state.c	FUNCTION_29	IF_4	FOR_4
0x40006c5	      0x498d548d00	                  lea rdx, [r13 + rcx*4]	      1648	state.c	FUNCTION_29	IF_4	FOR_4
0x40006ca	          0x4429c0	                            sub eax, r8d	      1648	state.c	FUNCTION_29	IF_4	FOR_4
0x40006cd	      0x488d440101	                lea rax, [rcx + rax + 1]	      1648	state.c	FUNCTION_29	IF_4	FOR_4
0x40006d2	      0x498d448500	                  lea rax, [r13 + rax*4]	      1648	state.c	FUNCTION_29	IF_4	FOR_4
0x40006d7	    0x660f1f840000	                    nop word [rax + rax]	      1648	state.c	FUNCTION_29	IF_4	FOR_4
0x40006e0	          0x8022f8	                    and byte [rdx], 0xf8	      1650	state.c	FUNCTION_29	IF_4	FOR_4
0x40006e3	        0x4883c204	                              add rdx, 4	      1650	state.c	FUNCTION_29	IF_4	FOR_4
0x40006e7	          0x4839d0	                            cmp rax, rdx	      1648	state.c	FUNCTION_29	IF_4	FOR_4
0x40006ea	            0x75f4	                           jne 0x40006e0	      1648	state.c	FUNCTION_29	IF_4	FOR_4
0x40006ec	          0x488b3b	                    mov rdi, qword [rbx]	      1653	state.c	FUNCTION_29	IF_4	CALL_4
0x40006ef	      0xe800000000	                          call 0x40006f4	      1653	state.c	FUNCTION_29	IF_4	CALL_4
0x40006f4	        0x4c896b58	             mov qword [rbx + 0x58], r13	      1654	state.c	FUNCTION_29	IF_4
0x40006f8	          0x8b4340	            mov eax, dword [rbx + 0x40] 	      1660	state.c	FUNCTION_29	IF_5
0x40006fb	        0x44897b28	            mov dword [rbx + 0x28], r15d	      1657	state.c	FUNCTION_29
0x40006ff	        0x4489732c	            mov dword [rbx + 0x2c], r14d	      1658	state.c	FUNCTION_29
0x4000703	          0x4139c7	                           cmp r15d, eax	      1661	state.c	FUNCTION_29	IF_5
0x4000706	            0x7d08	                           jge 0x4000710	      1661	state.c	FUNCTION_29	IF_5
0x4000708	            0x85c0	                           test eax, eax	      1661	state.c	FUNCTION_29	IF_5
0x400070a	            0x7804	                            js 0x4000710	      1661	state.c	FUNCTION_29	IF_5
0x400070c	        0x44897b40	            mov dword [rbx + 0x40], r15d	      1661	state.c	FUNCTION_29	IF_5
0x4000710	          0x8b4348	            mov eax, dword [rbx + 0x48] 	      1662	state.c	FUNCTION_29	IF_6
0x4000713	            0x85c0	                           test eax, eax	      1663	state.c	FUNCTION_29	IF_6
0x4000715	            0x7809	                            js 0x4000720	      1663	state.c	FUNCTION_29	IF_6
0x4000717	          0x4139c6	                           cmp r14d, eax	      1663	state.c	FUNCTION_29	IF_6
0x400071a	            0x7d04	                           jge 0x4000720	      1663	state.c	FUNCTION_29	IF_6
0x400071c	        0x44897348	            mov dword [rbx + 0x48], r14d	      1663	state.c	FUNCTION_29	IF_6
0x4000720	        0x488b4308	                mov rax, qword [rbx + 8]	      1665	state.c	FUNCTION_29	IF_7
0x4000724	          0x4885c0	                           test rax, rax	      1665	state.c	FUNCTION_29	IF_7
0x4000727	            0x7418	                            je 0x4000741	      1665	state.c	FUNCTION_29	IF_7
0x4000729	        0x488b4048	            mov rax, qword [rax + 0x48] 	      1665	state.c	FUNCTION_29	IF_7
0x400072d	          0x4885c0	                           test rax, rax	      1665	state.c	FUNCTION_29	IF_7
0x4000730	            0x740f	                            je 0x4000741	      1665	state.c	FUNCTION_29	IF_7
0x4000732	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	      1666	state.c	FUNCTION_29	IF_7
0x4000736	          0x4889e2	                            mov rdx, rsp	      1666	state.c	FUNCTION_29	IF_7
0x4000739	          0x4489f6	                           mov esi, r14d	      1666	state.c	FUNCTION_29	IF_7
0x400073c	          0x4489ff	                           mov edi, r15d	      1666	state.c	FUNCTION_29	IF_7
0x400073f	            0xffd0	                                call rax	      1666	state.c	FUNCTION_29	IF_7
0x4000741	          0x8b4338	            mov eax, dword [rbx + 0x38] 	      1668	state.c	FUNCTION_29	IF_8
0x4000744	            0x85c0	                           test eax, eax	      1668	state.c	FUNCTION_29	IF_8
0x4000746	          0x8b4334	            mov eax, dword [rbx + 0x34] 	      1668	state.c	FUNCTION_29	IF_8
0x4000749	            0x740c	                            je 0x4000757	      1668	state.c	FUNCTION_29	IF_8
0x400074b	        0x418d56ff	                      lea edx, [r14 - 1]	      1668	state.c	FUNCTION_29	IF_8
0x400074f	            0x39d0	                            cmp eax, edx	      1668	state.c	FUNCTION_29	IF_8
0x4000751	     0xf8c91000000	                            jl 0x40007e8	      1668	state.c	FUNCTION_29	IF_8
0x4000757	          0x8b1424	                    mov edx, dword [rsp]	      1673	state.c	FUNCTION_29
0x400075a	           0x35330	             add edx, dword [rbx + 0x30]	      1673	state.c	FUNCTION_29
0x400075d	         0x3442404	                add eax, dword [rsp + 4]	      1674	state.c	FUNCTION_29
0x4000761	          0x4139d7	                           cmp r15d, edx	      1676	state.c	FUNCTION_29	IF_9
0x4000764	          0x895330	             mov dword [rbx + 0x30], edx	      1673	state.c	FUNCTION_29
0x4000767	          0x894334	             mov dword [rbx + 0x34], eax	      1674	state.c	FUNCTION_29
0x400076a	            0x7f08	                            jg 0x4000774	      1676	state.c	FUNCTION_29	IF_9
0x400076c	        0x4183ef01	                             sub r15d, 1	      1677	state.c	FUNCTION_29	IF_9
0x4000770	        0x44897b30	            mov dword [rbx + 0x30], r15d	      1677	state.c	FUNCTION_29	IF_9
0x4000774	          0x4139c6	                           cmp r14d, eax	      1678	state.c	FUNCTION_29	IF_10
0x4000777	            0x7f07	                            jg 0x4000780	      1678	state.c	FUNCTION_29	IF_10
0x4000779	        0x418d46ff	                      lea eax, [r14 - 1]	      1679	state.c	FUNCTION_29	IF_10
0x400077d	          0x894334	             mov dword [rbx + 0x34], eax	      1679	state.c	FUNCTION_29	IF_10
0x4000780	            0x39c5	                            cmp ebp, eax	        34	state.c	FUNCTION_2	IF_1
0x4000782	            0x747c	                            je 0x4000800	        34	state.c	FUNCTION_2	IF_1
0x4000784	        0x488b4308	                mov rax, qword [rbx + 8]	        40	state.c	FUNCTION_2	IF_3
0x4000788	    0xc74338000000	               mov dword [rbx + 0x38], 0	        38	state.c	FUNCTION_2	IF_2
0x400078f	          0x4885c0	                           test rax, rax	        40	state.c	FUNCTION_2	IF_3
0x4000792	            0x742a	                            je 0x40007be	        40	state.c	FUNCTION_2	IF_3
0x4000794	        0x488b4008	                mov rax, qword [rax + 8]	        40	state.c	FUNCTION_2	IF_3
0x4000798	          0x4885c0	                           test rax, rax	        40	state.c	FUNCTION_2	IF_3
0x400079b	            0x7421	                            je 0x40007be	        40	state.c	FUNCTION_2	IF_3
0x400079d	     0xfb693940000	           movzx edx, byte [rbx + 0x94] 	        41	state.c	FUNCTION_2	IF_3	IF_4
0x40007a4	        0x48c1e520	                           shl rbp, 0x20	        41	state.c	FUNCTION_2	IF_3	IF_4
0x40007a8	          0x4489e6	                           mov esi, r12d	        41	state.c	FUNCTION_2	IF_3	IF_4
0x40007ab	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	        41	state.c	FUNCTION_2	IF_3	IF_4
0x40007af	          0x4809ee	                             or rsi, rbp	        41	state.c	FUNCTION_2	IF_3	IF_4
0x40007b2	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	        41	state.c	FUNCTION_2	IF_3	IF_4
0x40007b6	          0xc0ea05	                               shr dl, 5	        41	state.c	FUNCTION_2	IF_3	IF_4
0x40007b9	          0x83e201	                              and edx, 1	        41	state.c	FUNCTION_2	IF_3	IF_4
0x40007bc	            0xffd0	                                call rax	        41	state.c	FUNCTION_2	IF_3	IF_4
0x40007be	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1684	state.c	FUNCTION_29
0x40007c3	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      1684	state.c	FUNCTION_29
0x40007cc	      0xb801000000	                              mov eax, 1	      1684	state.c	FUNCTION_29
0x40007d1	            0x7541	                           jne 0x4000814	      1684	state.c	FUNCTION_29
0x40007d3	        0x4883c418	                           add rsp, 0x18	      1684	state.c	FUNCTION_29
0x40007d7	              0x5b	                                 pop rbx	      1684	state.c	FUNCTION_29
0x40007d8	              0x5d	                                 pop rbp	      1684	state.c	FUNCTION_29
0x40007d9	            0x415c	                                 pop r12	      1684	state.c	FUNCTION_29
0x40007db	            0x415d	                                 pop r13	      1684	state.c	FUNCTION_29
0x40007dd	            0x415e	                                 pop r14	      1684	state.c	FUNCTION_29
0x40007df	            0x415f	                                 pop r15	      1684	state.c	FUNCTION_29
0x40007e1	              0xc3	                                     ret	      1684	state.c	FUNCTION_29
0x40007e2	    0x660f1f440000	                    nop word [rax + rax]	      1684	state.c	FUNCTION_29
0x40007e8	    0xc74338000000	               mov dword [rbx + 0x38], 0	      1669	state.c	FUNCTION_29	IF_8
0x40007ef	          0x83c001	                              add eax, 1	      1670	state.c	FUNCTION_29	IF_8
0x40007f2	      0xe960ffffff	                           jmp 0x4000757	      1670	state.c	FUNCTION_29	IF_8
0x40007f7	    0x660f1f840000	                    nop word [rax + rax]	      1670	state.c	FUNCTION_29	IF_8
0x4000800	        0x443b6330	           cmp r12d, dword [rbx + 0x30] 	        34	state.c	FUNCTION_2	IF_1
0x4000804	     0xf857affffff	                           jne 0x4000784	        34	state.c	FUNCTION_2	IF_1
0x400080a	            0xebb2	                           jmp 0x40007be	        34	state.c	FUNCTION_2	IF_1
0x400080c	          0x4531c0	                            xor r8d, r8d	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x400080f	      0xe9a5feffff	                           jmp 0x40006b9	      1644	state.c	FUNCTION_29	IF_4	FOR_3
0x4000814	      0xe800000000	                          call 0x4000819	      1684	state.c	FUNCTION_29
set_dec_mode	functions,0:WHILE,0:DO,0:ELSE,0:FOR,1:IF,1:SWITCH,1:CALL,12	403
0x4001a60	            0x4154	                                push r12	       729	state.c	FUNCTION_23
0x4001a62	              0x55	                                push rbp	       729	state.c	FUNCTION_23
0x4001a63	          0x4889fd	                            mov rbp, rdi	       729	state.c	FUNCTION_23
0x4001a66	              0x53	                                push rbx	       729	state.c	FUNCTION_23
0x4001a67	            0x89d3	                            mov ebx, edx	       729	state.c	FUNCTION_23
0x4001a69	        0x4883ec10	                           sub rsp, 0x10	       729	state.c	FUNCTION_23
0x4001a6d	    0x64488b042528	                mov rax, qword fs:[0x28]	       729	state.c	FUNCTION_23
0x4001a76	      0x4889442408	                mov qword [rsp + 8], rax	       729	state.c	FUNCTION_23
0x4001a7b	            0x31c0	                            xor eax, eax	       729	state.c	FUNCTION_23
0x4001a7d	    0x81feeb030000	                          cmp esi, 0x3eb	       730	state.c	FUNCTION_23	SWITCH_1
0x4001a83	     0xf8fbf000000	                            jg 0x4001b48	       730	state.c	FUNCTION_23	SWITCH_1
0x4001a89	    0x81feea030000	                          cmp esi, 0x3ea	       730	state.c	FUNCTION_23	SWITCH_1
0x4001a8f	     0xf8d1f020000	                           jge 0x4001cb4	       730	state.c	FUNCTION_23	SWITCH_1
0x4001a95	          0x83fe07	                              cmp esi, 7	       730	state.c	FUNCTION_23	SWITCH_1
0x4001a98	     0xf8422040000	                            je 0x4001ec0	       730	state.c	FUNCTION_23	SWITCH_1
0x4001a9e	     0xf8e94020000	                           jle 0x4001d38	       730	state.c	FUNCTION_23	SWITCH_1
0x4001aa4	          0x83fe19	                           cmp esi, 0x19	       730	state.c	FUNCTION_23	SWITCH_1
0x4001aa7	     0xf8413010000	                            je 0x4001bc0	       730	state.c	FUNCTION_23	SWITCH_1
0x4001aad	     0xf8eed020000	                           jle 0x4001da0	       730	state.c	FUNCTION_23	SWITCH_1
0x4001ab3	          0x83fe45	                           cmp esi, 0x45	       730	state.c	FUNCTION_23	SWITCH_1
0x4001ab6	     0xf85ec010000	                           jne 0x4001ca8	       730	state.c	FUNCTION_23	SWITCH_1
0x4001abc	            0x89d0	                            mov eax, edx	       763	state.c	FUNCTION_23	SWITCH_1
0x4001abe	     0xfb697950000	           movzx edx, byte [rdi + 0x95] 	       763	state.c	FUNCTION_23	SWITCH_1
0x4001ac5	          0x83e001	                              and eax, 1	       763	state.c	FUNCTION_23	SWITCH_1
0x4001ac8	          0xc1e004	                              shl eax, 4	       763	state.c	FUNCTION_23	SWITCH_1
0x4001acb	          0x83e2ef	                     and edx, 0xffffffef	       763	state.c	FUNCTION_23	SWITCH_1
0x4001ace	             0x9d0	                             or eax, edx	       763	state.c	FUNCTION_23	SWITCH_1
0x4001ad0	            0x85db	                           test ebx, ebx	       764	state.c	FUNCTION_23	SWITCH_1	IF_1
0x4001ad2	    0x888795000000	               mov byte [rdi + 0x95], al	       763	state.c	FUNCTION_23	SWITCH_1
0x4001ad8	     0xf84c2000000	                            je 0x4001ba0	       764	state.c	FUNCTION_23	SWITCH_1	IF_1
0x4001ade	          0x8b7728	            mov esi, dword [rdi + 0x28] 	       768	state.c	FUNCTION_23	SWITCH_1	IF_1	FOR_1
0x4001ae1	            0x85f6	                           test esi, esi	       768	state.c	FUNCTION_23	SWITCH_1	IF_1	FOR_1
0x4001ae3	     0xf8eb7000000	                           jle 0x4001ba0	       768	state.c	FUNCTION_23	SWITCH_1	IF_1	FOR_1
0x4001ae9	        0x488b4f58	            mov rcx, qword [rdi + 0x58] 	       768	state.c	FUNCTION_23	SWITCH_1	IF_1	FOR_1
0x4001aed	            0x31db	                            xor ebx, ebx	       768	state.c	FUNCTION_23	SWITCH_1	IF_1	FOR_1
0x4001aef	              0x90	                                     nop	       768	state.c	FUNCTION_23	SWITCH_1	IF_1	FOR_1
0x4001af0	    0x4c8d249d0000	                        lea r12, [rbx*4]	       768	state.c	FUNCTION_23	SWITCH_1	IF_1	FOR_1
0x4001af8	        0x4a8d1421	                    lea rdx, [rcx + r12]	       218	state.c	FUNCTION_14
0x4001afc	            0x8b02	                    mov eax, dword [rdx]	       218	state.c	FUNCTION_14
0x4001afe	          0x890424	                    mov dword [rsp], eax	       218	state.c	FUNCTION_14
0x4001b01	          0x83e0f8	                     and eax, 0xfffffff8	       227	state.c	FUNCTION_14	IF_3
0x4001b04	          0x880424	                      mov byte [rsp], al	       227	state.c	FUNCTION_14	IF_3
0x4001b07	        0x488b4508	                mov rax, qword [rbp + 8]	       233	state.c	FUNCTION_14	IF_6
0x4001b0b	          0x4885c0	                           test rax, rax	       233	state.c	FUNCTION_14	IF_6
0x4001b0e	            0x741f	                            je 0x4001b2f	       233	state.c	FUNCTION_14	IF_6
0x4001b10	        0x488b4050	            mov rax, qword [rax + 0x50] 	       234	state.c	FUNCTION_14	IF_6
0x4001b14	          0x4885c0	                           test rax, rax	       233	state.c	FUNCTION_14	IF_6
0x4001b17	            0x7416	                            je 0x4001b2f	       233	state.c	FUNCTION_14	IF_6
0x4001b19	        0x488b4d10	            mov rcx, qword [rbp + 0x10] 	       235	state.c	FUNCTION_14	IF_6
0x4001b1d	          0x4889e6	                            mov rsi, rsp	       235	state.c	FUNCTION_14	IF_6
0x4001b20	            0x89df	                            mov edi, ebx	       235	state.c	FUNCTION_14	IF_6
0x4001b22	            0xffd0	                                call rax	       235	state.c	FUNCTION_14	IF_6
0x4001b24	        0x488b4d58	            mov rcx, qword [rbp + 0x58] 	       235	state.c	FUNCTION_14	IF_6
0x4001b28	          0x8b7528	            mov esi, dword [rbp + 0x28] 	       235	state.c	FUNCTION_14	IF_6
0x4001b2b	        0x4a8d1421	                    lea rdx, [rcx + r12]	       235	state.c	FUNCTION_14	IF_6
0x4001b2f	          0x8b0424	                    mov eax, dword [rsp]	       237	state.c	FUNCTION_14	IF_6
0x4001b32	            0x8902	                    mov dword [rdx], eax	       237	state.c	FUNCTION_14	IF_6
0x4001b34	          0x8d4301	                      lea eax, [rbx + 1]	       237	state.c	FUNCTION_14	IF_6
0x4001b37	        0x4883c301	                              add rbx, 1	       237	state.c	FUNCTION_14	IF_6
0x4001b3b	            0x39f0	                            cmp eax, esi	       768	state.c	FUNCTION_23	SWITCH_1	IF_1	FOR_1
0x4001b3d	            0x7cb1	                            jl 0x4001af0	       768	state.c	FUNCTION_23	SWITCH_1	IF_1	FOR_1
0x4001b3f	            0xeb5f	                           jmp 0x4001ba0	       768	state.c	FUNCTION_23	SWITCH_1	IF_1	FOR_1
0x4001b41	     0xf1f80000000	                         nop dword [rax]	       768	state.c	FUNCTION_23	SWITCH_1	IF_1	FOR_1
0x4001b48	    0x81fef7030000	                          cmp esi, 0x3f7	       730	state.c	FUNCTION_23	SWITCH_1
0x4001b4e	     0xf843c010000	                            je 0x4001c90	       730	state.c	FUNCTION_23	SWITCH_1
0x4001b54	     0xf8e16020000	                           jle 0x4001d70	       730	state.c	FUNCTION_23	SWITCH_1
0x4001b5a	    0x81fe18040000	                          cmp esi, 0x418	       730	state.c	FUNCTION_23	SWITCH_1
0x4001b60	     0xf841a010000	                            je 0x4001c80	       730	state.c	FUNCTION_23	SWITCH_1
0x4001b66	     0xf8e8c020000	                           jle 0x4001df8	       730	state.c	FUNCTION_23	SWITCH_1
0x4001b6c	    0x81fe19040000	                          cmp esi, 0x419	       730	state.c	FUNCTION_23	SWITCH_1
0x4001b72	     0xf8490000000	                            je 0x4001c08	       730	state.c	FUNCTION_23	SWITCH_1
0x4001b78	    0x81fed4070000	                          cmp esi, 0x7d4	       730	state.c	FUNCTION_23	SWITCH_1
0x4001b7e	            0x7520	                           jne 0x4001ba0	       730	state.c	FUNCTION_23	SWITCH_1
0x4001b80	     0xfb687950000	           movzx eax, byte [rdi + 0x95] 	       814	state.c	FUNCTION_23	SWITCH_1
0x4001b87	          0x83e301	                              and ebx, 1	       814	state.c	FUNCTION_23	SWITCH_1
0x4001b8a	          0xc1e305	                              shl ebx, 5	       814	state.c	FUNCTION_23	SWITCH_1
0x4001b8d	          0x83e0df	                     and eax, 0xffffffdf	       814	state.c	FUNCTION_23	SWITCH_1
0x4001b90	             0x9c3	                             or ebx, eax	       814	state.c	FUNCTION_23	SWITCH_1
0x4001b92	    0x889f95000000	               mov byte [rdi + 0x95], bl	       814	state.c	FUNCTION_23	SWITCH_1
0x4001b98	     0xf1f84000000	                   nop dword [rax + rax]	       814	state.c	FUNCTION_23	SWITCH_1
0x4001ba0	      0x488b442408	                mov rax, qword [rsp + 8]	       821	state.c	FUNCTION_23
0x4001ba5	    0x644833042528	                xor rax, qword fs:[0x28]	       821	state.c	FUNCTION_23
0x4001bae	     0xf85dc040000	                           jne 0x4002090	       821	state.c	FUNCTION_23
0x4001bb4	        0x4883c410	                           add rsp, 0x10	       821	state.c	FUNCTION_23
0x4001bb8	              0x5b	                                 pop rbx	       821	state.c	FUNCTION_23
0x4001bb9	              0x5d	                                 pop rbp	       821	state.c	FUNCTION_23
0x4001bba	            0x415c	                                 pop r12	       821	state.c	FUNCTION_23
0x4001bbc	              0xc3	                                     ret	       821	state.c	FUNCTION_23
0x4001bbd	           0xf1f00	                         nop dword [rax]	       821	state.c	FUNCTION_23
0x4001bc0	        0x488b4708	                mov rax, qword [rdi + 8]	      1854	state.c	FUNCTION_38	IF_1
0x4001bc4	          0x891424	                    mov dword [rsp], edx	       519	state.c	FUNCTION_17
0x4001bc7	          0x4885c0	                           test rax, rax	      1854	state.c	FUNCTION_38	IF_1
0x4001bca	            0x741e	                            je 0x4001bea	      1854	state.c	FUNCTION_38	IF_1
0x4001bcc	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1854	state.c	FUNCTION_38	IF_1
0x4001bd0	          0x4885c0	                           test rax, rax	      1854	state.c	FUNCTION_38	IF_1
0x4001bd3	            0x7415	                            je 0x4001bea	      1854	state.c	FUNCTION_38	IF_1
0x4001bd5	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4001bd9	          0x4889e6	                            mov rsi, rsp	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4001bdc	      0xbf01000000	                              mov edi, 1	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4001be1	            0xffd0	                                call rax	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4001be3	            0x85c0	                           test eax, eax	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4001be5	            0x74b9	                            je 0x4001ba0	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4001be7	          0x8b1c24	                    mov ebx, dword [rsp]	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4001bea	     0xfb685940000	           movzx eax, byte [rbp + 0x94] 	      1865	state.c	FUNCTION_38	SWITCH_1
0x4001bf1	          0x83e301	                              and ebx, 1	      1865	state.c	FUNCTION_38	SWITCH_1
0x4001bf4	          0xc1e305	                              shl ebx, 5	      1865	state.c	FUNCTION_38	SWITCH_1
0x4001bf7	          0x83e0df	                     and eax, 0xffffffdf	      1865	state.c	FUNCTION_38	SWITCH_1
0x4001bfa	             0x9c3	                             or ebx, eax	      1865	state.c	FUNCTION_38	SWITCH_1
0x4001bfc	    0x889d94000000	               mov byte [rbp + 0x94], bl	      1865	state.c	FUNCTION_38	SWITCH_1
0x4001c02	            0xeb9c	                           jmp 0x4001ba0	      1865	state.c	FUNCTION_38	SWITCH_1
0x4001c04	         0xf1f4000	                         nop dword [rax]	      1865	state.c	FUNCTION_38	SWITCH_1
0x4001c08	        0x488b4708	                mov rax, qword [rdi + 8]	      1854	state.c	FUNCTION_38	IF_1
0x4001c0c	          0x891424	                    mov dword [rsp], edx	       519	state.c	FUNCTION_17
0x4001c0f	          0x4885c0	                           test rax, rax	      1854	state.c	FUNCTION_38	IF_1
0x4001c12	     0xf84f8030000	                            je 0x4002010	      1854	state.c	FUNCTION_38	IF_1
0x4001c18	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1854	state.c	FUNCTION_38	IF_1
0x4001c1c	          0x4885c0	                           test rax, rax	      1854	state.c	FUNCTION_38	IF_1
0x4001c1f	     0xf84eb030000	                            je 0x4002010	      1854	state.c	FUNCTION_38	IF_1
0x4001c25	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4001c29	          0x4889e6	                            mov rsi, rsp	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4001c2c	      0xbf03000000	                              mov edi, 3	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4001c31	            0xffd0	                                call rax	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4001c33	            0x85c0	                           test eax, eax	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4001c35	            0x7449	                            je 0x4001c80	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4001c37	          0x8b0424	                    mov eax, dword [rsp]	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4001c3a	     0xfb695950000	           movzx edx, byte [rbp + 0x95] 	      1877	state.c	FUNCTION_38	SWITCH_1
0x4001c41	          0x83e001	                              and eax, 1	      1877	state.c	FUNCTION_38	SWITCH_1
0x4001c44	             0x1c0	                            add eax, eax	      1877	state.c	FUNCTION_38	SWITCH_1
0x4001c46	          0x83e2fd	                     and edx, 0xfffffffd	      1877	state.c	FUNCTION_38	SWITCH_1
0x4001c49	             0x9d0	                             or eax, edx	      1877	state.c	FUNCTION_38	SWITCH_1
0x4001c4b	            0xa802	                              test al, 2	      1878	state.c	FUNCTION_38	SWITCH_1	IF_3
0x4001c4d	    0x888595000000	               mov byte [rbp + 0x95], al	      1877	state.c	FUNCTION_38	SWITCH_1
0x4001c53	            0x742b	                            je 0x4001c80	      1878	state.c	FUNCTION_38	SWITCH_1	IF_3
0x4001c55	          0x8b7d28	            mov edi, dword [rbp + 0x28] 	      1878	state.c	FUNCTION_38	SWITCH_1	IF_3
0x4001c58	          0x8b752c	            mov esi, dword [rbp + 0x2c] 	      1878	state.c	FUNCTION_38	SWITCH_1	IF_3
0x4001c5b	        0x488b4508	                mov rax, qword [rbp + 8]	      1878	state.c	FUNCTION_38	SWITCH_1	IF_3
0x4001c5f	        0x48c1e720	                           shl rdi, 0x20	      1878	state.c	FUNCTION_38	SWITCH_1	IF_3
0x4001c63	        0x48c1e620	                           shl rsi, 0x20	      1878	state.c	FUNCTION_38	SWITCH_1	IF_3
0x4001c67	          0x4885c0	                           test rax, rax	        47	state.c	FUNCTION_3	IF_1
0x4001c6a	            0x7414	                            je 0x4001c80	        47	state.c	FUNCTION_3	IF_1
0x4001c6c	        0x488b4020	            mov rax, qword [rax + 0x20] 	        47	state.c	FUNCTION_3	IF_1
0x4001c70	          0x4885c0	                           test rax, rax	        47	state.c	FUNCTION_3	IF_1
0x4001c73	            0x740b	                            je 0x4001c80	        47	state.c	FUNCTION_3	IF_1
0x4001c75	        0x488b4d10	            mov rcx, qword [rbp + 0x10] 	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4001c79	            0x31d2	                            xor edx, edx	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4001c7b	            0xffd0	                                call rax	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4001c7d	           0xf1f00	                         nop dword [rax]	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4001c80	            0x89de	                            mov esi, ebx	       810	state.c	FUNCTION_23	SWITCH_1	CALL_11
0x4001c82	          0x4889ef	                            mov rdi, rbp	       810	state.c	FUNCTION_23	SWITCH_1	CALL_11
0x4001c85	      0xe896ebffff	                     call sym.savecursor	       810	state.c	FUNCTION_23	SWITCH_1	CALL_11
0x4001c8a	      0xe911ffffff	                           jmp 0x4001ba0	       811	state.c	FUNCTION_23	SWITCH_1
0x4001c8f	              0x90	                                     nop	       811	state.c	FUNCTION_23	SWITCH_1
0x4001c90	          0x83fa01	                              cmp edx, 1	       797	state.c	FUNCTION_23	SWITCH_1
0x4001c93	            0x19c0	                            sbb eax, eax	       797	state.c	FUNCTION_23	SWITCH_1
0x4001c95	            0xf7d0	                                 not eax	       797	state.c	FUNCTION_23	SWITCH_1
0x4001c97	          0x83e003	                              and eax, 3	       797	state.c	FUNCTION_23	SWITCH_1
0x4001c9a	          0x894770	             mov dword [rdi + 0x70], eax	       797	state.c	FUNCTION_23	SWITCH_1
0x4001c9d	      0xe9fefeffff	                           jmp 0x4001ba0	       798	state.c	FUNCTION_23	SWITCH_1
0x4001ca2	    0x660f1f440000	                    nop word [rax + rax]	       798	state.c	FUNCTION_23	SWITCH_1
0x4001ca8	    0x81fee8030000	                          cmp esi, 0x3e8	       730	state.c	FUNCTION_23	SWITCH_1
0x4001cae	     0xf85ecfeffff	                           jne 0x4001ba0	       730	state.c	FUNCTION_23	SWITCH_1
0x4001cb4	            0x85db	                           test ebx, ebx	       777	state.c	FUNCTION_23	SWITCH_1	CALL_7
0x4001cb6	     0xf8424030000	                            je 0x4001fe0	       777	state.c	FUNCTION_23	SWITCH_1	CALL_7
0x4001cbc	    0x81fee8030000	                          cmp esi, 0x3e8	       779	state.c	FUNCTION_23	SWITCH_1
0x4001cc2	     0xf8494030000	                            je 0x400205c	       779	state.c	FUNCTION_23	SWITCH_1
0x4001cc8	    0x81feea030000	                          cmp esi, 0x3ea	       780	state.c	FUNCTION_23	SWITCH_1
0x4001cce	     0xf84a2030000	                            je 0x4002076	       780	state.c	FUNCTION_23	SWITCH_1
0x4001cd4	        0x488b4508	                mov rax, qword [rbp + 8]	      1854	state.c	FUNCTION_38	IF_1
0x4001cd8	    0xc70424030000	                      mov dword [rsp], 3	       526	state.c	FUNCTION_18
0x4001cdf	          0x4885c0	                           test rax, rax	      1854	state.c	FUNCTION_38	IF_1
0x4001ce2	            0x7441	                            je 0x4001d25	      1854	state.c	FUNCTION_38	IF_1
0x4001ce4	      0xba03000000	                              mov edx, 3	       780	state.c	FUNCTION_23	SWITCH_1
0x4001ce9	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1854	state.c	FUNCTION_38	IF_1
0x4001ced	          0x4885c0	                           test rax, rax	      1854	state.c	FUNCTION_38	IF_1
0x4001cf0	            0x7421	                            je 0x4001d13	      1854	state.c	FUNCTION_38	IF_1
0x4001cf2	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4001cf6	          0x4889e6	                            mov rsi, rsp	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4001cf9	      0xbf08000000	                              mov edi, 8	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4001cfe	            0xffd0	                                call rax	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4001d00	            0x85c0	                           test eax, eax	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4001d02	     0xf8498feffff	                            je 0x4001ba0	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4001d08	          0x8b1424	                    mov edx, dword [rsp]	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4001d0b	            0x85d2	                           test edx, edx	      1887	state.c	FUNCTION_38	SWITCH_1	IF_4
0x4001d0d	     0xf84ea020000	                            je 0x4001ffd	      1887	state.c	FUNCTION_38	SWITCH_1	IF_4
0x4001d13	          0x83fa02	                              cmp edx, 2	      1889	state.c	FUNCTION_38	SWITCH_1	IF_5
0x4001d16	     0xf8434030000	                            je 0x4002050	      1889	state.c	FUNCTION_38	SWITCH_1	IF_5
0x4001d1c	          0x83fa03	                              cmp edx, 3	      1891	state.c	FUNCTION_38	SWITCH_1	IF_6
0x4001d1f	     0xf8570030000	                           jne 0x4002095	      1891	state.c	FUNCTION_38	SWITCH_1	IF_6
0x4001d25	    0xc7456c050000	               mov dword [rbp + 0x6c], 5	      1892	state.c	FUNCTION_38	SWITCH_1	IF_6
0x4001d2c	      0xe96ffeffff	                           jmp 0x4001ba0	      1892	state.c	FUNCTION_38	SWITCH_1	IF_6
0x4001d31	     0xf1f80000000	                         nop dword [rax]	      1892	state.c	FUNCTION_38	SWITCH_1	IF_6
0x4001d38	          0x83fe05	                              cmp esi, 5	       730	state.c	FUNCTION_23	SWITCH_1
0x4001d3b	     0xf842f020000	                            je 0x4001f70	       730	state.c	FUNCTION_23	SWITCH_1
0x4001d41	     0xf8f99010000	                            jg 0x4001ee0	       730	state.c	FUNCTION_23	SWITCH_1
0x4001d47	          0x83fe01	                              cmp esi, 1	       730	state.c	FUNCTION_23	SWITCH_1
0x4001d4a	     0xf8550feffff	                           jne 0x4001ba0	       730	state.c	FUNCTION_23	SWITCH_1
0x4001d50	     0xfb687940000	           movzx eax, byte [rdi + 0x94] 	       732	state.c	FUNCTION_23	SWITCH_1
0x4001d57	          0x83e301	                              and ebx, 1	       732	state.c	FUNCTION_23	SWITCH_1
0x4001d5a	             0x1db	                            add ebx, ebx	       732	state.c	FUNCTION_23	SWITCH_1
0x4001d5c	          0x83e0fd	                     and eax, 0xfffffffd	       732	state.c	FUNCTION_23	SWITCH_1
0x4001d5f	             0x9c3	                             or ebx, eax	       732	state.c	FUNCTION_23	SWITCH_1
0x4001d61	    0x889f94000000	               mov byte [rdi + 0x94], bl	       732	state.c	FUNCTION_23	SWITCH_1
0x4001d67	      0xe934feffff	                           jmp 0x4001ba0	       733	state.c	FUNCTION_23	SWITCH_1
0x4001d6c	         0xf1f4000	                         nop dword [rax]	       733	state.c	FUNCTION_23	SWITCH_1
0x4001d70	    0x81feed030000	                          cmp esi, 0x3ed	       730	state.c	FUNCTION_23	SWITCH_1
0x4001d76	     0xf8434010000	                            je 0x4001eb0	       730	state.c	FUNCTION_23	SWITCH_1
0x4001d7c	     0xf8c0e010000	                            jl 0x4001e90	       730	state.c	FUNCTION_23	SWITCH_1
0x4001d82	    0x81feee030000	                          cmp esi, 0x3ee	       730	state.c	FUNCTION_23	SWITCH_1
0x4001d88	     0xf8512feffff	                           jne 0x4001ba0	       730	state.c	FUNCTION_23	SWITCH_1
0x4001d8e	          0x83fa01	                              cmp edx, 1	       793	state.c	FUNCTION_23	SWITCH_1
0x4001d91	            0x19c0	                            sbb eax, eax	       793	state.c	FUNCTION_23	SWITCH_1
0x4001d93	            0xf7d0	                                 not eax	       793	state.c	FUNCTION_23	SWITCH_1
0x4001d95	          0x83e002	                              and eax, 2	       793	state.c	FUNCTION_23	SWITCH_1
0x4001d98	          0x894770	             mov dword [rdi + 0x70], eax	       793	state.c	FUNCTION_23	SWITCH_1
0x4001d9b	      0xe900feffff	                           jmp 0x4001ba0	       794	state.c	FUNCTION_23	SWITCH_1
0x4001da0	          0x83fe0c	                            cmp esi, 0xc	       730	state.c	FUNCTION_23	SWITCH_1
0x4001da3	     0xf85f7fdffff	                           jne 0x4001ba0	       730	state.c	FUNCTION_23	SWITCH_1
0x4001da9	        0x488b4708	                mov rax, qword [rdi + 8]	      1854	state.c	FUNCTION_38	IF_1
0x4001dad	          0x891424	                    mov dword [rsp], edx	       519	state.c	FUNCTION_17
0x4001db0	          0x4885c0	                           test rax, rax	      1854	state.c	FUNCTION_38	IF_1
0x4001db3	            0x7422	                            je 0x4001dd7	      1854	state.c	FUNCTION_38	IF_1
0x4001db5	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1854	state.c	FUNCTION_38	IF_1
0x4001db9	          0x4885c0	                           test rax, rax	      1854	state.c	FUNCTION_38	IF_1
0x4001dbc	            0x7419	                            je 0x4001dd7	      1854	state.c	FUNCTION_38	IF_1
0x4001dbe	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4001dc2	          0x4889e6	                            mov rsi, rsp	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4001dc5	      0xbf02000000	                              mov edi, 2	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4001dca	            0xffd0	                                call rax	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4001dcc	            0x85c0	                           test eax, eax	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4001dce	     0xf84ccfdffff	                            je 0x4001ba0	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4001dd4	          0x8b1c24	                    mov ebx, dword [rsp]	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4001dd7	     0xfb685940000	           movzx eax, byte [rbp + 0x94] 	      1868	state.c	FUNCTION_38	SWITCH_1
0x4001dde	          0x83e301	                              and ebx, 1	      1868	state.c	FUNCTION_38	SWITCH_1
0x4001de1	          0xc1e306	                              shl ebx, 6	      1868	state.c	FUNCTION_38	SWITCH_1
0x4001de4	          0x83e0bf	                     and eax, 0xffffffbf	      1868	state.c	FUNCTION_38	SWITCH_1
0x4001de7	             0x9c3	                             or ebx, eax	      1868	state.c	FUNCTION_38	SWITCH_1
0x4001de9	    0x889d94000000	               mov byte [rbp + 0x94], bl	      1868	state.c	FUNCTION_38	SWITCH_1
0x4001def	      0xe9acfdffff	                           jmp 0x4001ba0	      1868	state.c	FUNCTION_38	SWITCH_1
0x4001df4	         0xf1f4000	                         nop dword [rax]	      1868	state.c	FUNCTION_38	SWITCH_1
0x4001df8	    0x81fe17040000	                          cmp esi, 0x417	       730	state.c	FUNCTION_23	SWITCH_1
0x4001dfe	     0xf859cfdffff	                           jne 0x4001ba0	       730	state.c	FUNCTION_23	SWITCH_1
0x4001e04	        0x488b4708	                mov rax, qword [rdi + 8]	      1854	state.c	FUNCTION_38	IF_1
0x4001e08	          0x891424	                    mov dword [rsp], edx	       519	state.c	FUNCTION_17
0x4001e0b	          0x4885c0	                           test rax, rax	      1854	state.c	FUNCTION_38	IF_1
0x4001e0e	     0xf840c020000	                            je 0x4002020	      1854	state.c	FUNCTION_38	IF_1
0x4001e14	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1854	state.c	FUNCTION_38	IF_1
0x4001e18	          0x4885c0	                           test rax, rax	      1854	state.c	FUNCTION_38	IF_1
0x4001e1b	     0xf84ff010000	                            je 0x4002020	      1854	state.c	FUNCTION_38	IF_1
0x4001e21	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4001e25	          0x4889e6	                            mov rsi, rsp	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4001e28	      0xbf03000000	                              mov edi, 3	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4001e2d	            0xffd0	                                call rax	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4001e2f	            0x85c0	                           test eax, eax	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4001e31	     0xf8469fdffff	                            je 0x4001ba0	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4001e37	          0x8b0424	                    mov eax, dword [rsp]	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4001e3a	     0xfb695950000	           movzx edx, byte [rbp + 0x95] 	      1877	state.c	FUNCTION_38	SWITCH_1
0x4001e41	          0x83e001	                              and eax, 1	      1877	state.c	FUNCTION_38	SWITCH_1
0x4001e44	             0x1c0	                            add eax, eax	      1877	state.c	FUNCTION_38	SWITCH_1
0x4001e46	          0x83e2fd	                     and edx, 0xfffffffd	      1877	state.c	FUNCTION_38	SWITCH_1
0x4001e49	             0x9d0	                             or eax, edx	      1877	state.c	FUNCTION_38	SWITCH_1
0x4001e4b	            0xa802	                              test al, 2	      1878	state.c	FUNCTION_38	SWITCH_1	IF_3
0x4001e4d	    0x888595000000	               mov byte [rbp + 0x95], al	      1877	state.c	FUNCTION_38	SWITCH_1
0x4001e53	     0xf8447fdffff	                            je 0x4001ba0	      1878	state.c	FUNCTION_38	SWITCH_1	IF_3
0x4001e59	          0x8b7d28	            mov edi, dword [rbp + 0x28] 	      1878	state.c	FUNCTION_38	SWITCH_1	IF_3
0x4001e5c	          0x8b752c	            mov esi, dword [rbp + 0x2c] 	      1878	state.c	FUNCTION_38	SWITCH_1	IF_3
0x4001e5f	        0x488b4508	                mov rax, qword [rbp + 8]	      1878	state.c	FUNCTION_38	SWITCH_1	IF_3
0x4001e63	        0x48c1e720	                           shl rdi, 0x20	      1878	state.c	FUNCTION_38	SWITCH_1	IF_3
0x4001e67	        0x48c1e620	                           shl rsi, 0x20	      1878	state.c	FUNCTION_38	SWITCH_1	IF_3
0x4001e6b	          0x4885c0	                           test rax, rax	        47	state.c	FUNCTION_3	IF_1
0x4001e6e	     0xf842cfdffff	                            je 0x4001ba0	        47	state.c	FUNCTION_3	IF_1
0x4001e74	        0x488b4020	            mov rax, qword [rax + 0x20] 	        47	state.c	FUNCTION_3	IF_1
0x4001e78	          0x4885c0	                           test rax, rax	        47	state.c	FUNCTION_3	IF_1
0x4001e7b	     0xf841ffdffff	                            je 0x4001ba0	        47	state.c	FUNCTION_3	IF_1
0x4001e81	        0x488b4d10	            mov rcx, qword [rbp + 0x10] 	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4001e85	            0x31d2	                            xor edx, edx	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4001e87	            0xffd0	                                call rax	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4001e89	      0xe912fdffff	                           jmp 0x4001ba0	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4001e8e	            0x6690	                                     nop	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4001e90	     0xfb687950000	           movzx eax, byte [rdi + 0x95] 	       785	state.c	FUNCTION_23	SWITCH_1
0x4001e97	          0x83e301	                              and ebx, 1	       785	state.c	FUNCTION_23	SWITCH_1
0x4001e9a	          0xc1e306	                              shl ebx, 6	       785	state.c	FUNCTION_23	SWITCH_1
0x4001e9d	          0x83e0bf	                     and eax, 0xffffffbf	       785	state.c	FUNCTION_23	SWITCH_1
0x4001ea0	             0x9c3	                             or ebx, eax	       785	state.c	FUNCTION_23	SWITCH_1
0x4001ea2	    0x889f95000000	               mov byte [rdi + 0x95], bl	       785	state.c	FUNCTION_23	SWITCH_1
0x4001ea8	      0xe9f3fcffff	                           jmp 0x4001ba0	       786	state.c	FUNCTION_23	SWITCH_1
0x4001ead	           0xf1f00	                         nop dword [rax]	       786	state.c	FUNCTION_23	SWITCH_1
0x4001eb0	            0x31c0	                            xor eax, eax	       789	state.c	FUNCTION_23	SWITCH_1
0x4001eb2	            0x85d2	                           test edx, edx	       789	state.c	FUNCTION_23	SWITCH_1
0x4001eb4	           0xf95c0	                                setne al	       789	state.c	FUNCTION_23	SWITCH_1
0x4001eb7	          0x894770	             mov dword [rdi + 0x70], eax	       789	state.c	FUNCTION_23	SWITCH_1
0x4001eba	      0xe9e1fcffff	                           jmp 0x4001ba0	       790	state.c	FUNCTION_23	SWITCH_1
0x4001ebf	              0x90	                                     nop	       790	state.c	FUNCTION_23	SWITCH_1
0x4001ec0	     0xfb687940000	           movzx eax, byte [rdi + 0x94] 	       750	state.c	FUNCTION_23	SWITCH_1
0x4001ec7	          0x83e301	                              and ebx, 1	       750	state.c	FUNCTION_23	SWITCH_1
0x4001eca	          0xc1e302	                              shl ebx, 2	       750	state.c	FUNCTION_23	SWITCH_1
0x4001ecd	          0x83e0fb	                     and eax, 0xfffffffb	       750	state.c	FUNCTION_23	SWITCH_1
0x4001ed0	             0x9c3	                             or ebx, eax	       750	state.c	FUNCTION_23	SWITCH_1
0x4001ed2	    0x889f94000000	               mov byte [rdi + 0x94], bl	       750	state.c	FUNCTION_23	SWITCH_1
0x4001ed8	      0xe9c3fcffff	                           jmp 0x4001ba0	       751	state.c	FUNCTION_23	SWITCH_1
0x4001edd	           0xf1f00	                         nop dword [rax]	       751	state.c	FUNCTION_23	SWITCH_1
0x4001ee0	     0xfb685950000	           movzx eax, byte [rbp + 0x95] 	       742	state.c	FUNCTION_23	SWITCH_1
0x4001ee7	          0x83e301	                              and ebx, 1	       742	state.c	FUNCTION_23	SWITCH_1
0x4001eea	          0x8b7f30	            mov edi, dword [rdi + 0x30] 	       741	state.c	FUNCTION_23	SWITCH_1
0x4001eed	          0xc1e302	                              shl ebx, 2	       742	state.c	FUNCTION_23	SWITCH_1
0x4001ef0	          0x8b7534	            mov esi, dword [rbp + 0x34] 	       741	state.c	FUNCTION_23	SWITCH_1
0x4001ef3	          0x83e0fb	                     and eax, 0xfffffffb	       742	state.c	FUNCTION_23	SWITCH_1
0x4001ef6	             0x9c3	                             or ebx, eax	       742	state.c	FUNCTION_23	SWITCH_1
0x4001ef8	          0xf6c304	                              test bl, 4	       743	state.c	FUNCTION_23	SWITCH_1
0x4001efb	    0x889d95000000	               mov byte [rbp + 0x95], bl	       742	state.c	FUNCTION_23	SWITCH_1
0x4001f01	     0xf84c1000000	                            je 0x4001fc8	       743	state.c	FUNCTION_23	SWITCH_1
0x4001f07	          0x8b553c	            mov edx, dword [rbp + 0x3c] 	       743	state.c	FUNCTION_23	SWITCH_1
0x4001f0a	            0x31c0	                            xor eax, eax	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x4001f0c	          0x83e310	                           and ebx, 0x10	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x4001f0f	          0x895530	            mov dword [rbp + 0x30], edx 	       743	state.c	FUNCTION_23	SWITCH_1
0x4001f12	            0x7403	                            je 0x4001f17	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x4001f14	          0x8b4544	            mov eax, dword [rbp + 0x44] 	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x4001f17	            0x39f0	                            cmp eax, esi	        34	state.c	FUNCTION_2	IF_1
0x4001f19	          0x894534	            mov dword [rbp + 0x34], eax 	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x4001f1c	     0xf841e010000	                            je 0x4002040	        34	state.c	FUNCTION_2	IF_1
0x4001f22	        0x488b4508	                mov rax, qword [rbp + 8]	        40	state.c	FUNCTION_2	IF_3
0x4001f26	    0xc74538000000	               mov dword [rbp + 0x38], 0	        38	state.c	FUNCTION_2	IF_2
0x4001f2d	          0x4885c0	                           test rax, rax	        40	state.c	FUNCTION_2	IF_3
0x4001f30	     0xf846afcffff	                            je 0x4001ba0	        40	state.c	FUNCTION_2	IF_3
0x4001f36	        0x488b4008	                mov rax, qword [rax + 8]	        40	state.c	FUNCTION_2	IF_3
0x4001f3a	          0x4885c0	                           test rax, rax	        40	state.c	FUNCTION_2	IF_3
0x4001f3d	     0xf845dfcffff	                            je 0x4001ba0	        40	state.c	FUNCTION_2	IF_3
0x4001f43	     0xfb695940000	           movzx edx, byte [rbp + 0x94] 	        41	state.c	FUNCTION_2	IF_3	IF_4
0x4001f4a	        0x48c1e620	                           shl rsi, 0x20	        41	state.c	FUNCTION_2	IF_3	IF_4
0x4001f4e	        0x488b4d10	            mov rcx, qword [rbp + 0x10] 	        41	state.c	FUNCTION_2	IF_3	IF_4
0x4001f52	          0x4809fe	                             or rsi, rdi	        41	state.c	FUNCTION_2	IF_3	IF_4
0x4001f55	        0x488b7d30	            mov rdi, qword [rbp + 0x30] 	        41	state.c	FUNCTION_2	IF_3	IF_4
0x4001f59	          0xc0ea05	                               shr dl, 5	        41	state.c	FUNCTION_2	IF_3	IF_4
0x4001f5c	          0x83e201	                              and edx, 1	        41	state.c	FUNCTION_2	IF_3	IF_4
0x4001f5f	            0xffd0	                                call rax	        41	state.c	FUNCTION_2	IF_3	IF_4
0x4001f61	      0xe93afcffff	                           jmp 0x4001ba0	       747	state.c	FUNCTION_23	SWITCH_1
0x4001f66	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       747	state.c	FUNCTION_23	SWITCH_1
0x4001f70	        0x488b4708	                mov rax, qword [rdi + 8]	      1854	state.c	FUNCTION_38	IF_1
0x4001f74	          0x891424	                    mov dword [rsp], edx	       519	state.c	FUNCTION_17
0x4001f77	          0x4885c0	                           test rax, rax	      1854	state.c	FUNCTION_38	IF_1
0x4001f7a	     0xf84b0000000	                            je 0x4002030	      1854	state.c	FUNCTION_38	IF_1
0x4001f80	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1854	state.c	FUNCTION_38	IF_1
0x4001f84	          0x4885c0	                           test rax, rax	      1854	state.c	FUNCTION_38	IF_1
0x4001f87	     0xf84a3000000	                            je 0x4002030	      1854	state.c	FUNCTION_38	IF_1
0x4001f8d	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4001f91	          0x4889e6	                            mov rsi, rsp	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4001f94	      0xbf06000000	                              mov edi, 6	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4001f99	            0xffd0	                                call rax	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4001f9b	            0x85c0	                           test eax, eax	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4001f9d	     0xf84fdfbffff	                            je 0x4001ba0	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4001fa3	          0x8b0424	                    mov eax, dword [rsp]	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4001fa6	     0xfb695950000	           movzx edx, byte [rbp + 0x95] 	      1874	state.c	FUNCTION_38	SWITCH_1
0x4001fad	          0x83e001	                              and eax, 1	      1874	state.c	FUNCTION_38	SWITCH_1
0x4001fb0	          0xc1e003	                              shl eax, 3	      1874	state.c	FUNCTION_38	SWITCH_1
0x4001fb3	          0x83e2f7	                     and edx, 0xfffffff7	      1874	state.c	FUNCTION_38	SWITCH_1
0x4001fb6	             0x9d0	                             or eax, edx	      1874	state.c	FUNCTION_38	SWITCH_1
0x4001fb8	    0x888595000000	               mov byte [rbp + 0x95], al	      1874	state.c	FUNCTION_38	SWITCH_1
0x4001fbe	      0xe9ddfbffff	                           jmp 0x4001ba0	      1874	state.c	FUNCTION_38	SWITCH_1
0x4001fc3	       0xf1f440000	                   nop dword [rax + rax]	      1874	state.c	FUNCTION_38	SWITCH_1
0x4001fc8	    0xc74530000000	               mov dword [rbp + 0x30], 0	       743	state.c	FUNCTION_23	SWITCH_1
0x4001fcf	            0x31d2	                            xor edx, edx	       743	state.c	FUNCTION_23	SWITCH_1
0x4001fd1	            0x31c0	                            xor eax, eax	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x4001fd3	      0xe93fffffff	                           jmp 0x4001f17	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x4001fd8	     0xf1f84000000	                   nop dword [rax + rax]	       744	state.c	FUNCTION_23	SWITCH_1	CALL_2
0x4001fe0	        0x488b4508	                mov rax, qword [rbp + 8]	      1854	state.c	FUNCTION_38	IF_1
0x4001fe4	    0xc70424000000	                      mov dword [rsp], 0	       526	state.c	FUNCTION_18
0x4001feb	          0x4885c0	                           test rax, rax	      1854	state.c	FUNCTION_38	IF_1
0x4001fee	            0x740d	                            je 0x4001ffd	      1854	state.c	FUNCTION_38	IF_1
0x4001ff0	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1854	state.c	FUNCTION_38	IF_1
0x4001ff4	          0x4885c0	                           test rax, rax	      1854	state.c	FUNCTION_38	IF_1
0x4001ff7	     0xf85f5fcffff	                           jne 0x4001cf2	      1854	state.c	FUNCTION_38	IF_1
0x4001ffd	    0xc7456c000000	               mov dword [rbp + 0x6c], 0	      1886	state.c	FUNCTION_38	SWITCH_1
0x4002004	      0xe997fbffff	                           jmp 0x4001ba0	      1886	state.c	FUNCTION_38	SWITCH_1
0x4002009	     0xf1f80000000	                         nop dword [rax]	      1886	state.c	FUNCTION_38	SWITCH_1
0x4002010	            0x89d8	                            mov eax, ebx	      1854	state.c	FUNCTION_38	IF_1
0x4002012	      0xe923fcffff	                           jmp 0x4001c3a	      1854	state.c	FUNCTION_38	IF_1
0x4002017	    0x660f1f840000	                    nop word [rax + rax]	      1854	state.c	FUNCTION_38	IF_1
0x4002020	            0x89d8	                            mov eax, ebx	      1854	state.c	FUNCTION_38	IF_1
0x4002022	      0xe913feffff	                           jmp 0x4001e3a	      1854	state.c	FUNCTION_38	IF_1
0x4002027	    0x660f1f840000	                    nop word [rax + rax]	      1854	state.c	FUNCTION_38	IF_1
0x4002030	            0x89d8	                            mov eax, ebx	      1854	state.c	FUNCTION_38	IF_1
0x4002032	      0xe96fffffff	                           jmp 0x4001fa6	      1854	state.c	FUNCTION_38	IF_1
0x4002037	    0x660f1f840000	                    nop word [rax + rax]	      1854	state.c	FUNCTION_38	IF_1
0x4002040	            0x39d7	                            cmp edi, edx	        34	state.c	FUNCTION_2	IF_1
0x4002042	     0xf85dafeffff	                           jne 0x4001f22	        34	state.c	FUNCTION_2	IF_1
0x4002048	      0xe953fbffff	                           jmp 0x4001ba0	        34	state.c	FUNCTION_2	IF_1
0x400204d	           0xf1f00	                         nop dword [rax]	        34	state.c	FUNCTION_2	IF_1
0x4002050	    0xc7456c030000	               mov dword [rbp + 0x6c], 3	      1890	state.c	FUNCTION_38	SWITCH_1	IF_5
0x4002057	      0xe944fbffff	                           jmp 0x4001ba0	      1890	state.c	FUNCTION_38	SWITCH_1	IF_5
0x400205c	        0x488b4508	                mov rax, qword [rbp + 8]	      1854	state.c	FUNCTION_38	IF_1
0x4002060	    0xc70424010000	                      mov dword [rsp], 1	       526	state.c	FUNCTION_18
0x4002067	          0x4885c0	                           test rax, rax	      1854	state.c	FUNCTION_38	IF_1
0x400206a	            0x7429	                            je 0x4002095	      1854	state.c	FUNCTION_38	IF_1
0x400206c	      0xba01000000	                              mov edx, 1	       779	state.c	FUNCTION_23	SWITCH_1
0x4002071	      0xe973fcffff	                           jmp 0x4001ce9	       779	state.c	FUNCTION_23	SWITCH_1
0x4002076	        0x488b4508	                mov rax, qword [rbp + 8]	      1854	state.c	FUNCTION_38	IF_1
0x400207a	    0xc70424020000	                      mov dword [rsp], 2	       526	state.c	FUNCTION_18
0x4002081	          0x4885c0	                           test rax, rax	      1854	state.c	FUNCTION_38	IF_1
0x4002084	            0x74ca	                            je 0x4002050	      1854	state.c	FUNCTION_38	IF_1
0x4002086	      0xba02000000	                              mov edx, 2	       780	state.c	FUNCTION_23	SWITCH_1
0x400208b	      0xe959fcffff	                           jmp 0x4001ce9	       780	state.c	FUNCTION_23	SWITCH_1
0x4002090	      0xe800000000	                          call 0x4002095	       821	state.c	FUNCTION_23
0x4002095	    0xc7456c010000	               mov dword [rbp + 0x6c], 1	      1888	state.c	FUNCTION_38	SWITCH_1	IF_4
0x400209c	      0xe9fffaffff	                           jmp 0x4001ba0	      1888	state.c	FUNCTION_38	SWITCH_1	IF_4
vterm_state_reset	functions,0:WHILE,0:DO,0:ELSE,1:FOR,3:IF,4:SWITCH,0:CALL,10	225
0x4002200	            0x4156	                                push r14	      1722	state.c	FUNCTION_31
0x4002202	            0x4155	                                push r13	      1722	state.c	FUNCTION_31
0x4002204	            0x4154	                                push r12	      1722	state.c	FUNCTION_31
0x4002206	              0x55	                                push rbp	      1722	state.c	FUNCTION_31
0x4002207	          0x4189f4	                           mov r12d, esi	      1722	state.c	FUNCTION_31
0x400220a	              0x53	                                push rbx	      1722	state.c	FUNCTION_31
0x400220b	          0x4889fb	                            mov rbx, rdi	      1722	state.c	FUNCTION_31
0x400220e	        0x4883ec10	                           sub rsp, 0x10	      1722	state.c	FUNCTION_31
0x4002212	    0x64488b042528	                mov rax, qword fs:[0x28]	      1722	state.c	FUNCTION_31
0x400221b	      0x4889442408	                mov qword [rsp + 8], rax	      1722	state.c	FUNCTION_31
0x4002220	            0x31c0	                            xor eax, eax	      1722	state.c	FUNCTION_31
0x4002222	     0xfb687940000	           movzx eax, byte [rdi + 0x94] 	      1732	state.c	FUNCTION_31
0x4002229	    0x80a795000000	             and byte [rdi + 0x95], 0x89	      1739	state.c	FUNCTION_31
0x4002230	    0x660f6f050000	       movdqa xmm0, xmmword [0x04002238]	      1725	state.c	FUNCTION_31
0x4002238	         0xf11473c	       movups xmmword [rdi + 0x3c], xmm0	      1725	state.c	FUNCTION_31
0x400223c	          0x83e0e0	                     and eax, 0xffffffe0	      1732	state.c	FUNCTION_31
0x400223f	          0x83c804	                               or eax, 4	      1734	state.c	FUNCTION_31
0x4002242	    0x888794000000	               mov byte [rdi + 0x94], al	      1734	state.c	FUNCTION_31
0x4002248	          0x488b07	                    mov rax, qword [rdi]	      1741	state.c	FUNCTION_31
0x400224b	        0x806018fd	             and byte [rax + 0x18], 0xfd	      1741	state.c	FUNCTION_31
0x400224f	          0x8b472c	            mov eax, dword [rdi + 0x2c] 	      1745	state.c	FUNCTION_31	FOR_1
0x4002252	            0x85c0	                           test eax, eax	      1745	state.c	FUNCTION_31	FOR_1
0x4002254	            0x7e3a	                           jle 0x4002290	      1745	state.c	FUNCTION_31	FOR_1
0x4002256	            0x31c0	                            xor eax, eax	      1745	state.c	FUNCTION_31	FOR_1
0x4002258	      0xbe01000000	                              mov esi, 1	      1745	state.c	FUNCTION_31	FOR_1
0x400225d	            0xeb0c	                           jmp 0x400226b	      1745	state.c	FUNCTION_31	FOR_1
0x400225f	              0x90	                                     nop	      1745	state.c	FUNCTION_31	FOR_1
0x4002260	          0x800a01	                        or byte [rdx], 1	       158	state.c	FUNCTION_9
0x4002263	          0x83c001	                              add eax, 1	      1745	state.c	FUNCTION_31	FOR_1
0x4002266	          0x39432c	            cmp dword [rbx + 0x2c], eax 	      1745	state.c	FUNCTION_31	FOR_1
0x4002269	            0x7e25	                           jle 0x4002290	      1745	state.c	FUNCTION_31	FOR_1
0x400226b	            0x89c2	                            mov edx, eax	       158	state.c	FUNCTION_9
0x400226d	            0x89c1	                            mov ecx, eax	      1746	state.c	FUNCTION_31	FOR_1	IF_1
0x400226f	          0xc1fa03	                              sar edx, 3	       158	state.c	FUNCTION_9
0x4002272	          0x4863d2	                         movsxd rdx, edx	       158	state.c	FUNCTION_9
0x4002275	        0x48035350	             add rdx, qword [rbx + 0x50]	       158	state.c	FUNCTION_9
0x4002279	          0x83e107	                              and ecx, 7	      1746	state.c	FUNCTION_31	FOR_1	IF_1
0x400227c	            0x74e2	                            je 0x4002260	      1746	state.c	FUNCTION_31	FOR_1	IF_1
0x400227e	            0x89f7	                            mov edi, esi	       164	state.c	FUNCTION_10
0x4002280	          0x83c001	                              add eax, 1	      1745	state.c	FUNCTION_31	FOR_1
0x4002283	            0xd3e7	                             shl edi, cl	       164	state.c	FUNCTION_10
0x4002285	            0x89f9	                            mov ecx, edi	       164	state.c	FUNCTION_10
0x4002287	            0xf7d1	                                 not ecx	       164	state.c	FUNCTION_10
0x4002289	            0x200a	                      and byte [rdx], cl	       164	state.c	FUNCTION_10
0x400228b	          0x39432c	            cmp dword [rbx + 0x2c], eax 	      1745	state.c	FUNCTION_31	FOR_1
0x400228e	            0x7fdb	                            jg 0x400226b	      1745	state.c	FUNCTION_31	FOR_1
0x4002290	          0x8b7b28	            mov edi, dword [rbx + 0x28] 	      1754	state.c	FUNCTION_31	FOR_2
0x4002293	            0x85ff	                           test edi, edi	      1754	state.c	FUNCTION_31	FOR_2
0x4002295	     0xf8eb6020000	                           jle 0x4002551	      1754	state.c	FUNCTION_31	FOR_2
0x400229b	        0x488b7358	            mov rsi, qword [rbx + 0x58] 	      1754	state.c	FUNCTION_31	FOR_2
0x400229f	        0x488b4b08	                mov rcx, qword [rbx + 8]	      1754	state.c	FUNCTION_31	FOR_2
0x40022a3	            0x31ed	                            xor ebp, ebp	      1754	state.c	FUNCTION_31	FOR_2
0x40022a5	           0xf1f00	                         nop dword [rax]	      1754	state.c	FUNCTION_31	FOR_2
0x40022a8	    0x4c8d2cad0000	                        lea r13, [rbp*4]	      1754	state.c	FUNCTION_31	FOR_2
0x40022b0	        0x4a8d142e	                    lea rdx, [rsi + r13]	       218	state.c	FUNCTION_14
0x40022b4	            0x8b02	                    mov eax, dword [rdx]	       218	state.c	FUNCTION_14
0x40022b6	          0x890424	                    mov dword [rsp], eax	       218	state.c	FUNCTION_14
0x40022b9	          0x83e0f8	                     and eax, 0xfffffff8	       227	state.c	FUNCTION_14	IF_3
0x40022bc	          0x4885c9	                           test rcx, rcx	       233	state.c	FUNCTION_14	IF_6
0x40022bf	          0x880424	                      mov byte [rsp], al	       227	state.c	FUNCTION_14	IF_3
0x40022c2	            0x7423	                            je 0x40022e7	       233	state.c	FUNCTION_14	IF_6
0x40022c4	        0x488b4150	            mov rax, qword [rcx + 0x50] 	       234	state.c	FUNCTION_14	IF_6
0x40022c8	          0x4885c0	                           test rax, rax	       233	state.c	FUNCTION_14	IF_6
0x40022cb	            0x741a	                            je 0x40022e7	       233	state.c	FUNCTION_14	IF_6
0x40022cd	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       235	state.c	FUNCTION_14	IF_6
0x40022d1	          0x4889e6	                            mov rsi, rsp	       235	state.c	FUNCTION_14	IF_6
0x40022d4	            0x89ef	                            mov edi, ebp	       235	state.c	FUNCTION_14	IF_6
0x40022d6	            0xffd0	                                call rax	       235	state.c	FUNCTION_14	IF_6
0x40022d8	        0x488b7358	            mov rsi, qword [rbx + 0x58] 	       235	state.c	FUNCTION_14	IF_6
0x40022dc	        0x488b4b08	                mov rcx, qword [rbx + 8]	       235	state.c	FUNCTION_14	IF_6
0x40022e0	          0x8b7b28	            mov edi, dword [rbx + 0x28] 	       235	state.c	FUNCTION_14	IF_6
0x40022e3	        0x4a8d142e	                    lea rdx, [rsi + r13]	       235	state.c	FUNCTION_14	IF_6
0x40022e7	          0x8b0424	                    mov eax, dword [rsp]	       237	state.c	FUNCTION_14	IF_6
0x40022ea	            0x8902	                    mov dword [rdx], eax	       237	state.c	FUNCTION_14	IF_6
0x40022ec	          0x8d4501	                      lea eax, [rbp + 1]	       237	state.c	FUNCTION_14	IF_6
0x40022ef	        0x4883c501	                              add rbp, 1	       237	state.c	FUNCTION_14	IF_6
0x40022f3	            0x39f8	                            cmp eax, edi	      1754	state.c	FUNCTION_31	FOR_2
0x40022f5	            0x7cb1	                            jl 0x40022a8	      1754	state.c	FUNCTION_31	FOR_2
0x40022f7	          0x4885c9	                           test rcx, rcx	      1758	state.c	FUNCTION_31	IF_2
0x40022fa	            0x740f	                            je 0x400230b	      1758	state.c	FUNCTION_31	IF_2
0x40022fc	        0x488b4128	            mov rax, qword [rcx + 0x28] 	      1758	state.c	FUNCTION_31	IF_2
0x4002300	          0x4885c0	                           test rax, rax	      1758	state.c	FUNCTION_31	IF_2
0x4002303	            0x7406	                            je 0x400230b	      1758	state.c	FUNCTION_31	IF_2
0x4002305	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      1759	state.c	FUNCTION_31	IF_2
0x4002309	            0xffd0	                                call rax	      1759	state.c	FUNCTION_31	IF_2
0x400230b	          0x4889df	                            mov rdi, rbx	      1761	state.c	FUNCTION_31	CALL_4
0x400230e	      0xe800000000	                          call 0x4002313	      1761	state.c	FUNCTION_31	CALL_4
0x4002313	          0x488b03	                    mov rax, qword [rbx]	      1763	state.c	FUNCTION_31
0x4002316	        0xf6401801	               test byte [rax + 0x18], 1	      1764	state.c	FUNCTION_31	CALL_5
0x400231a	     0xf84c0010000	                            je 0x40024e0	      1764	state.c	FUNCTION_31	CALL_5
0x4002320	      0xbe75000000	                           mov esi, 0x75	      1764	state.c	FUNCTION_31	CALL_5
0x4002325	            0x31ff	                            xor edi, edi	      1764	state.c	FUNCTION_31	CALL_5
0x4002327	      0xe800000000	                          call 0x400232c	      1764	state.c	FUNCTION_31	CALL_5
0x400232c	          0x4989c5	                            mov r13, rax	      1764	state.c	FUNCTION_31	CALL_5
0x400232f	    0x488daba00000	                   lea rbp, [rbx + 0xa0]	      1764	state.c	FUNCTION_31	CALL_5
0x4002336	    0x4c8db3000100	                  lea r14, [rbx + 0x100]	      1764	state.c	FUNCTION_31	CALL_5
0x400233d	        0x4c896df8	                mov qword [rbp - 8], r13	      1770	state.c	FUNCTION_31	FOR_3
0x4002341	        0x498b4500	                    mov rax, qword [r13]	      1771	state.c	FUNCTION_31	FOR_3	IF_3
0x4002345	          0x4885c0	                           test rax, rax	      1771	state.c	FUNCTION_31	FOR_3	IF_3
0x4002348	            0x7408	                            je 0x4002352	      1771	state.c	FUNCTION_31	FOR_3	IF_3
0x400234a	          0x4889ee	                            mov rsi, rbp	      1772	state.c	FUNCTION_31	FOR_3	IF_3
0x400234d	          0x4c89ef	                            mov rdi, r13	      1772	state.c	FUNCTION_31	FOR_3	IF_3
0x4002350	            0xffd0	                                call rax	      1772	state.c	FUNCTION_31	FOR_3	IF_3
0x4002352	        0x4883c518	                           add rbp, 0x18	      1772	state.c	FUNCTION_31	FOR_3	IF_3
0x4002356	          0x4c39f5	                            cmp rbp, r14	      1769	state.c	FUNCTION_31	FOR_3
0x4002359	            0x75e2	                           jne 0x400233d	      1769	state.c	FUNCTION_31	FOR_3
0x400235b	        0x488b4308	                mov rax, qword [rbx + 8]	      1854	state.c	FUNCTION_38	IF_1
0x400235f	    0x80a37c010000	            and byte [rbx + 0x17c], 0xfe	      1780	state.c	FUNCTION_31
0x4002366	    0xc78310010000	              mov dword [rbx + 0x110], 0	      1776	state.c	FUNCTION_31
0x4002370	    0xc78314010000	              mov dword [rbx + 0x114], 1	      1777	state.c	FUNCTION_31
0x400237a	    0xc78318010000	              mov dword [rbx + 0x118], 0	      1778	state.c	FUNCTION_31
0x4002384	    0xc70424010000	                      mov dword [rsp], 1	       519	state.c	FUNCTION_17
0x400238b	          0x4885c0	                           test rax, rax	      1854	state.c	FUNCTION_38	IF_1
0x400238e	     0xf84a4010000	                            je 0x4002538	      1854	state.c	FUNCTION_38	IF_1
0x4002394	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      1854	state.c	FUNCTION_38	IF_1
0x4002398	          0x4885c9	                           test rcx, rcx	      1854	state.c	FUNCTION_38	IF_1
0x400239b	     0xf8497010000	                            je 0x4002538	      1854	state.c	FUNCTION_38	IF_1
0x40023a1	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x40023a5	          0x4889e6	                            mov rsi, rsp	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x40023a8	      0xbf01000000	                              mov edi, 1	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x40023ad	            0xffd1	                                call rcx	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x40023af	            0x85c0	                           test eax, eax	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x40023b1	     0xf8449010000	                            je 0x4002500	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x40023b7	         0xfb61424	                   movzx edx, byte [rsp]	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x40023bb	        0x488b4308	                mov rax, qword [rbx + 8]	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x40023bf	          0x83e201	                              and edx, 1	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x40023c2	     0xfb68b940000	           movzx ecx, byte [rbx + 0x94] 	      1865	state.c	FUNCTION_38	SWITCH_1
0x40023c9	          0xc1e205	                              shl edx, 5	      1865	state.c	FUNCTION_38	SWITCH_1
0x40023cc	    0xc70424010000	                      mov dword [rsp], 1	       519	state.c	FUNCTION_17
0x40023d3	          0x83e1df	                     and ecx, 0xffffffdf	      1865	state.c	FUNCTION_38	SWITCH_1
0x40023d6	             0x9ca	                             or edx, ecx	      1865	state.c	FUNCTION_38	SWITCH_1
0x40023d8	          0x4885c0	                           test rax, rax	      1854	state.c	FUNCTION_38	IF_1
0x40023db	    0x889394000000	               mov byte [rbx + 0x94], dl	      1865	state.c	FUNCTION_38	SWITCH_1
0x40023e1	     0xf8431010000	                            je 0x4002518	      1854	state.c	FUNCTION_38	IF_1
0x40023e7	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      1854	state.c	FUNCTION_38	IF_1
0x40023eb	          0x4885c9	                           test rcx, rcx	      1854	state.c	FUNCTION_38	IF_1
0x40023ee	     0xf8424010000	                            je 0x4002518	      1854	state.c	FUNCTION_38	IF_1
0x40023f4	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x40023f8	          0x4889e6	                            mov rsi, rsp	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x40023fb	      0xbf02000000	                              mov edi, 2	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4002400	            0xffd1	                                call rcx	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4002402	            0x85c0	                           test eax, eax	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4002404	     0xf843e010000	                            je 0x4002548	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x400240a	         0xfb61424	                   movzx edx, byte [rsp]	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x400240e	        0x488b4308	                mov rax, qword [rbx + 8]	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4002412	          0x83e201	                              and edx, 1	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4002415	     0xfb68b940000	           movzx ecx, byte [rbx + 0x94] 	      1868	state.c	FUNCTION_38	SWITCH_1
0x400241c	          0xc1e206	                              shl edx, 6	      1868	state.c	FUNCTION_38	SWITCH_1
0x400241f	          0x83e1bf	                     and ecx, 0xffffffbf	      1868	state.c	FUNCTION_38	SWITCH_1
0x4002422	             0x9ca	                             or edx, ecx	      1868	state.c	FUNCTION_38	SWITCH_1
0x4002424	    0x889394000000	               mov byte [rbx + 0x94], dl	      1868	state.c	FUNCTION_38	SWITCH_1
0x400242a	          0x4885c0	                           test rax, rax	      1854	state.c	FUNCTION_38	IF_1
0x400242d	    0xc70424010000	                      mov dword [rsp], 1	       526	state.c	FUNCTION_18
0x4002434	     0xf84ee000000	                            je 0x4002528	      1854	state.c	FUNCTION_38	IF_1
0x400243a	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1854	state.c	FUNCTION_38	IF_1
0x400243e	          0x4885c0	                           test rax, rax	      1854	state.c	FUNCTION_38	IF_1
0x4002441	     0xf84e1000000	                            je 0x4002528	      1854	state.c	FUNCTION_38	IF_1
0x4002447	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x400244b	          0x4889e6	                            mov rsi, rsp	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x400244e	      0xbf07000000	                              mov edi, 7	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4002453	            0xffd0	                                call rax	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4002455	            0x85c0	                           test eax, eax	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4002457	            0x7422	                            je 0x400247b	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4002459	         0xfb60424	                   movzx eax, byte [rsp]	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x400245d	          0x83e003	                              and eax, 3	      1855	state.c	FUNCTION_38	IF_1	IF_2
0x4002460	     0xfb793940000	           movzx edx, word [rbx + 0x94] 	      1871	state.c	FUNCTION_38	SWITCH_1
0x4002467	          0x83e003	                              and eax, 3	      1871	state.c	FUNCTION_38	SWITCH_1
0x400246a	          0xc1e007	                              shl eax, 7	      1871	state.c	FUNCTION_38	SWITCH_1
0x400246d	      0x6681e27ffe	                          and dx, 0xfe7f	      1871	state.c	FUNCTION_38	SWITCH_1
0x4002472	             0x9d0	                             or eax, edx	      1871	state.c	FUNCTION_38	SWITCH_1
0x4002474	    0x668983940000	               mov word [rbx + 0x94], ax	      1871	state.c	FUNCTION_38	SWITCH_1
0x400247b	          0x4585e4	                         test r12d, r12d	      1787	state.c	FUNCTION_31	IF_4
0x400247e	            0x743d	                            je 0x40024bd	      1787	state.c	FUNCTION_31	IF_4
0x4002480	          0x8b7b28	            mov edi, dword [rbx + 0x28] 	      1787	state.c	FUNCTION_31	IF_4
0x4002483	          0x8b732c	            mov esi, dword [rbx + 0x2c] 	      1787	state.c	FUNCTION_31	IF_4
0x4002486	        0x488b4308	                mov rax, qword [rbx + 8]	      1787	state.c	FUNCTION_31	IF_4
0x400248a	    0xc74330000000	               mov dword [rbx + 0x30], 0	      1790	state.c	FUNCTION_31	IF_4
0x4002491	    0xc74334000000	               mov dword [rbx + 0x34], 0	      1791	state.c	FUNCTION_31	IF_4
0x4002498	    0xc74338000000	               mov dword [rbx + 0x38], 0	      1792	state.c	FUNCTION_31	IF_4
0x400249f	        0x48c1e720	                           shl rdi, 0x20	      1792	state.c	FUNCTION_31	IF_4
0x40024a3	        0x48c1e620	                           shl rsi, 0x20	      1792	state.c	FUNCTION_31	IF_4
0x40024a7	          0x4885c0	                           test rax, rax	        47	state.c	FUNCTION_3	IF_1
0x40024aa	            0x7411	                            je 0x40024bd	        47	state.c	FUNCTION_3	IF_1
0x40024ac	        0x488b4020	            mov rax, qword [rax + 0x20] 	        47	state.c	FUNCTION_3	IF_1
0x40024b0	          0x4885c0	                           test rax, rax	        47	state.c	FUNCTION_3	IF_1
0x40024b3	            0x7408	                            je 0x40024bd	        47	state.c	FUNCTION_3	IF_1
0x40024b5	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	        48	state.c	FUNCTION_3	IF_1	IF_2
0x40024b9	            0x31d2	                            xor edx, edx	        48	state.c	FUNCTION_3	IF_1	IF_2
0x40024bb	            0xffd0	                                call rax	        48	state.c	FUNCTION_3	IF_1	IF_2
0x40024bd	      0x488b442408	                mov rax, qword [rsp + 8]	      1798	state.c	FUNCTION_31
0x40024c2	    0x644833042528	                xor rax, qword fs:[0x28]	      1798	state.c	FUNCTION_31
0x40024cb	     0xf8589000000	                           jne 0x400255a	      1798	state.c	FUNCTION_31
0x40024d1	        0x4883c410	                           add rsp, 0x10	      1798	state.c	FUNCTION_31
0x40024d5	              0x5b	                                 pop rbx	      1798	state.c	FUNCTION_31
0x40024d6	              0x5d	                                 pop rbp	      1798	state.c	FUNCTION_31
0x40024d7	            0x415c	                                 pop r12	      1798	state.c	FUNCTION_31
0x40024d9	            0x415d	                                 pop r13	      1798	state.c	FUNCTION_31
0x40024db	            0x415e	                                 pop r14	      1798	state.c	FUNCTION_31
0x40024dd	              0xc3	                                     ret	      1798	state.c	FUNCTION_31
0x40024de	            0x6690	                                     nop	      1798	state.c	FUNCTION_31
0x40024e0	      0xbe42000000	                           mov esi, 0x42	      1764	state.c	FUNCTION_31	CALL_5
0x40024e5	      0xbf01000000	                              mov edi, 1	      1764	state.c	FUNCTION_31	CALL_5
0x40024ea	      0xe800000000	                          call 0x40024ef	      1764	state.c	FUNCTION_31	CALL_5
0x40024ef	          0x4989c5	                            mov r13, rax	      1764	state.c	FUNCTION_31	CALL_5
0x40024f2	      0xe938feffff	                           jmp 0x400232f	      1764	state.c	FUNCTION_31	CALL_5
0x40024f7	    0x660f1f840000	                    nop word [rax + rax]	      1764	state.c	FUNCTION_31	CALL_5
0x4002500	        0x488b4308	                mov rax, qword [rbx + 8]	      1764	state.c	FUNCTION_31	CALL_5
0x4002504	    0xc70424010000	                      mov dword [rsp], 1	       519	state.c	FUNCTION_17
0x400250b	          0x4885c0	                           test rax, rax	      1854	state.c	FUNCTION_38	IF_1
0x400250e	     0xf85d3feffff	                           jne 0x40023e7	      1854	state.c	FUNCTION_38	IF_1
0x4002514	         0xf1f4000	                         nop dword [rax]	      1854	state.c	FUNCTION_38	IF_1
0x4002518	      0xba01000000	                              mov edx, 1	      1854	state.c	FUNCTION_38	IF_1
0x400251d	      0xe9f3feffff	                           jmp 0x4002415	      1854	state.c	FUNCTION_38	IF_1
0x4002522	    0x660f1f440000	                    nop word [rax + rax]	      1854	state.c	FUNCTION_38	IF_1
0x4002528	      0xb801000000	                              mov eax, 1	      1854	state.c	FUNCTION_38	IF_1
0x400252d	      0xe92effffff	                           jmp 0x4002460	      1854	state.c	FUNCTION_38	IF_1
0x4002532	    0x660f1f440000	                    nop word [rax + rax]	      1854	state.c	FUNCTION_38	IF_1
0x4002538	      0xba01000000	                              mov edx, 1	      1854	state.c	FUNCTION_38	IF_1
0x400253d	      0xe980feffff	                           jmp 0x40023c2	      1854	state.c	FUNCTION_38	IF_1
0x4002542	    0x660f1f440000	                    nop word [rax + rax]	      1854	state.c	FUNCTION_38	IF_1
0x4002548	        0x488b4308	                mov rax, qword [rbx + 8]	      1854	state.c	FUNCTION_38	IF_1
0x400254c	      0xe9d9feffff	                           jmp 0x400242a	      1854	state.c	FUNCTION_38	IF_1
0x4002551	        0x488b4b08	                mov rcx, qword [rbx + 8]	      1854	state.c	FUNCTION_38	IF_1
0x4002555	      0xe99dfdffff	                           jmp 0x40022f7	      1854	state.c	FUNCTION_38	IF_1
0x400255a	      0xe800000000	                          call 0x400255f	      1798	state.c	FUNCTION_31
vterm_state_set_callbacks	functions,0:WHILE,0:DO,0:ELSE,1:FOR,0:IF,2:SWITCH,0:CALL,0	13
0x40029b0	          0x4885f6	                           test rsi, rsi	      1815	state.c	FUNCTION_34	IF_1
0x40029b3	            0x741b	                            je 0x40029d0	      1815	state.c	FUNCTION_34	IF_1
0x40029b5	        0x488b4628	            mov rax, qword [rsi + 0x28] 	      1819	state.c	FUNCTION_34	IF_1	IF_2
0x40029b9	        0x48897708	                mov qword [rdi + 8], rsi	      1816	state.c	FUNCTION_34	IF_1
0x40029bd	        0x48895710	             mov qword [rdi + 0x10], rdx	      1817	state.c	FUNCTION_34	IF_1
0x40029c1	          0x4885c0	                           test rax, rax	      1819	state.c	FUNCTION_34	IF_1	IF_2
0x40029c4	            0x741a	                            je 0x40029e0	      1819	state.c	FUNCTION_34	IF_1	IF_2
0x40029c6	          0x4889d7	                            mov rdi, rdx	      1820	state.c	FUNCTION_34	IF_1	IF_2
0x40029c9	            0xffe0	                                 jmp rax	      1820	state.c	FUNCTION_34	IF_1	IF_2
0x40029cb	       0xf1f440000	                   nop dword [rax + rax]	      1820	state.c	FUNCTION_34	IF_1	IF_2
0x40029d0	    0x48c747080000	                  mov qword [rdi + 8], 0	      1823	state.c	FUNCTION_34	ELSE_1
0x40029d8	    0x48c747100000	               mov qword [rdi + 0x10], 0	      1824	state.c	FUNCTION_34	ELSE_1
0x40029e0	            0xf3c3	                                     ret	      1824	state.c	FUNCTION_34	ELSE_1
on_text	functions,0:WHILE,2:DO,0:ELSE,2:FOR,7:IF,16:SWITCH,0:CALL,34	545
0x4000a60	            0x4157	                                push r15	       241	state.c	FUNCTION_15
0x4000a62	            0x4156	                                push r14	       241	state.c	FUNCTION_15
0x4000a64	            0x4155	                                push r13	       241	state.c	FUNCTION_15
0x4000a66	            0x4154	                                push r12	       241	state.c	FUNCTION_15
0x4000a68	          0x4989fc	                            mov r12, rdi	       241	state.c	FUNCTION_15
0x4000a6b	              0x55	                                push rbp	       241	state.c	FUNCTION_15
0x4000a6c	              0x53	                                push rbx	       241	state.c	FUNCTION_15
0x4000a6d	          0x4889f3	                            mov rbx, rsi	       241	state.c	FUNCTION_15
0x4000a70	    0x488d34b50400	                    lea rsi, [rsi*4 + 4]	       253	state.c	FUNCTION_15	CALL_1
0x4000a78	          0x4889d5	                            mov rbp, rdx	       241	state.c	FUNCTION_15
0x4000a7b	    0x4881ec980000	                           sub rsp, 0x98	       241	state.c	FUNCTION_15
0x4000a82	          0x488b3a	                    mov rdi, qword [rdx]	       253	state.c	FUNCTION_15	CALL_1
0x4000a85	    0x64488b042528	                mov rax, qword fs:[0x28]	       241	state.c	FUNCTION_15
0x4000a8e	    0x488984248800	             mov qword [rsp + 0x88], rax	       241	state.c	FUNCTION_15
0x4000a96	            0x31c0	                            xor eax, eax	       241	state.c	FUNCTION_15
0x4000a98	          0x8b4230	            mov eax, dword [rdx + 0x30] 	       249	state.c	FUNCTION_15
0x4000a9b	    0xc74424540000	               mov dword [rsp + 0x54], 0	       244	state.c	FUNCTION_15
0x4000aa3	    0x48c744245800	               mov qword [rsp + 0x58], 0	       245	state.c	FUNCTION_15
0x4000aac	        0x8944244c	             mov dword [rsp + 0x4c], eax	       249	state.c	FUNCTION_15
0x4000ab0	          0x8b4234	            mov eax, dword [rdx + 0x34] 	       249	state.c	FUNCTION_15
0x4000ab3	        0x89442430	             mov dword [rsp + 0x30], eax	       249	state.c	FUNCTION_15
0x4000ab7	      0xe800000000	                          call 0x4000abc	       253	state.c	FUNCTION_15	CALL_1
0x4000abc	      0x4889442410	             mov qword [rsp + 0x10], rax	       253	state.c	FUNCTION_15	CALL_1
0x4000ac1	    0x486385180100	        movsxd rax, dword [rbp + 0x118] 	       256	state.c	FUNCTION_15
0x4000ac8	            0x85c0	                           test eax, eax	       256	state.c	FUNCTION_15
0x4000aca	     0xf84a9050000	                            je 0x4001079	       256	state.c	FUNCTION_15
0x4000ad0	        0x488d1440	                  lea rdx, [rax + rax*2]	       256	state.c	FUNCTION_15
0x4000ad4	    0x41b801000000	                              mov r8d, 1	       261	state.c	FUNCTION_15
0x4000ada	        0x48c1e203	                              shl rdx, 3	       256	state.c	FUNCTION_15
0x4000ade	    0x488bbc159800	      mov rdi, qword [rbp + rdx + 0x98] 	       261	state.c	FUNCTION_15
0x4000ae6	    0x488d84159800	            lea rax, [rbp + rdx + 0x98] 	       256	state.c	FUNCTION_15
0x4000aee	        0x4c8b5708	                mov r10, qword [rdi + 8]	       261	state.c	FUNCTION_15
0x4000af2	              0x53	                                push rbx	       261	state.c	FUNCTION_15
0x4000af3	        0x488d7008	                      lea rsi, [rax + 8]	       261	state.c	FUNCTION_15
0x4000af7	          0x4d89e1	                             mov r9, r12	       261	state.c	FUNCTION_15
0x4000afa	      0x488d442460	                   lea rax, [rsp + 0x60]	       261	state.c	FUNCTION_15
0x4000aff	              0x50	                                push rax	       261	state.c	FUNCTION_15
0x4000b00	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       261	state.c	FUNCTION_15
0x4000b05	      0x488d4c2464	                   lea rcx, [rsp + 0x64]	       261	state.c	FUNCTION_15
0x4000b0a	          0x41ffd2	                                call r10	       261	state.c	FUNCTION_15
0x4000b0d	            0x4158	                                  pop r8	       268	state.c	FUNCTION_15	IF_1
0x4000b0f	            0x4159	                                  pop r9	       268	state.c	FUNCTION_15	IF_1
0x4000b11	      0x448b542454	           mov r10d, dword [rsp + 0x54] 	       268	state.c	FUNCTION_15	IF_1
0x4000b16	          0x4585d2	                         test r10d, r10d	       268	state.c	FUNCTION_15	IF_1
0x4000b19	     0xf8408030000	                            je 0x4000e27	       268	state.c	FUNCTION_15	IF_1
0x4000b1f	    0x8bbd18010000	           mov edi, dword [rbp + 0x118] 	       274	state.c	FUNCTION_15	IF_2
0x4000b25	            0x85ff	                           test edi, edi	       274	state.c	FUNCTION_15	IF_2
0x4000b27	            0x740a	                            je 0x4000b33	       274	state.c	FUNCTION_15	IF_2
0x4000b29	    0xc78518010000	              mov dword [rbp + 0x118], 0	       275	state.c	FUNCTION_15	IF_2
0x4000b33	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       279	state.c	FUNCTION_15	IF_3	CALL_3
0x4000b38	          0x4531ed	                          xor r13d, r13d	       247	state.c	FUNCTION_15
0x4000b3b	            0x8b38	                    mov edi, dword [rax]	       279	state.c	FUNCTION_15	IF_3	CALL_3
0x4000b3d	      0xe800000000	                          call 0x4000b42	       279	state.c	FUNCTION_15	IF_3	CALL_3
0x4000b42	            0x85c0	                           test eax, eax	       279	state.c	FUNCTION_15	IF_3	CALL_3
0x4000b44	     0xf8561050000	                           jne 0x40010ab	       279	state.c	FUNCTION_15	IF_3	CALL_3
0x4000b4a	        0x8b442454	            mov eax, dword [rsp + 0x54] 	       319	state.c	FUNCTION_15	FOR_3
0x4000b4e	          0x4139c5	                           cmp r13d, eax	       319	state.c	FUNCTION_15	FOR_3
0x4000b51	     0xf8d89020000	                           jge 0x4000de0	       319	state.c	FUNCTION_15	FOR_3
0x4000b57	    0x660f1f840000	                    nop word [rax + rax]	       319	state.c	FUNCTION_15	FOR_3
0x4000b60	        0x418d5d01	                      lea ebx, [r13 + 1]	       326	state.c	FUNCTION_15	FOR_3	FOR_4
0x4000b64	            0x39c3	                            cmp ebx, eax	       326	state.c	FUNCTION_15	FOR_3	FOR_4
0x4000b66	            0x7d32	                           jge 0x4000b9a	       326	state.c	FUNCTION_15	FOR_3	FOR_4
0x4000b68	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       326	state.c	FUNCTION_15	FOR_3	FOR_4
0x4000b6d	          0x4863c3	                         movsxd rax, ebx	       326	state.c	FUNCTION_15	FOR_3	FOR_4
0x4000b70	        0x4c8d2481	                  lea r12, [rcx + rax*4]	       326	state.c	FUNCTION_15	FOR_3	FOR_4
0x4000b74	            0xeb17	                           jmp 0x4000b8d	       326	state.c	FUNCTION_15	FOR_3	FOR_4
0x4000b76	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       326	state.c	FUNCTION_15	FOR_3	FOR_4
0x4000b80	          0x83c301	                              add ebx, 1	       326	state.c	FUNCTION_15	FOR_3	FOR_4
0x4000b83	        0x4983c404	                              add r12, 4	       326	state.c	FUNCTION_15	FOR_3	FOR_4
0x4000b87	        0x395c2454	            cmp dword [rsp + 0x54], ebx 	       326	state.c	FUNCTION_15	FOR_3	FOR_4
0x4000b8b	            0x7e0d	                           jle 0x4000b9a	       326	state.c	FUNCTION_15	FOR_3	FOR_4
0x4000b8d	        0x418b3c24	                    mov edi, dword [r12]	       327	state.c	FUNCTION_15	FOR_3	FOR_4	IF_7	CALL_14
0x4000b91	      0xe800000000	                          call 0x4000b96	       327	state.c	FUNCTION_15	FOR_3	FOR_4	IF_7	CALL_14
0x4000b96	            0x85c0	                           test eax, eax	       327	state.c	FUNCTION_15	FOR_3	FOR_4	IF_7	CALL_14
0x4000b98	            0x75e6	                           jne 0x4000b80	       327	state.c	FUNCTION_15	FOR_3	FOR_4	IF_7	CALL_14
0x4000b9a	            0x89d8	                            mov eax, ebx	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0x4000b9c	        0x488b7d00	                    mov rdi, qword [rbp]	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0x4000ba0	          0x4429e8	                           sub eax, r13d	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0x4000ba3	          0x8d7001	                      lea esi, [rax + 1]	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0x4000ba6	        0x89442418	             mov dword [rsp + 0x18], eax	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0x4000baa	          0x4863f6	                         movsxd rsi, esi	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0x4000bad	        0x48c1e602	                              shl rsi, 2	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0x4000bb1	      0xe800000000	                          call 0x4000bb6	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0x4000bb6	          0x4139dd	                           cmp r13d, ebx	       332	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000bb9	          0x4889c1	                            mov rcx, rax	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0x4000bbc	      0x4889442408	                mov qword [rsp + 8], rax	       330	state.c	FUNCTION_15	FOR_3	CALL_15
0x4000bc1	     0xf8d51040000	                           jge 0x4001018	       332	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000bc7	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       332	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000bcc	          0x4963c5	                        movsxd rax, r13d	       332	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000bcf	          0x41f7d5	                                not r13d	       332	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000bd2	          0x4989cf	                            mov r15, rcx	       332	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000bd5	          0x4531e4	                          xor r12d, r12d	       332	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000bd8	        0x4c8d3482	                  lea r14, [rdx + rax*4]	       332	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000bdc	      0x418d441d00	                    lea eax, [r13 + rbx]	       332	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000be1	      0x4c8d6c8104	              lea r13, [rcx + rax*4 + 4]	       332	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000be6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       332	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000bf0	          0x418b06	                    mov eax, dword [r14]	       334	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000bf3	        0x4983c704	                              add r15, 4	       334	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000bf7	        0x4983c604	                              add r14, 4	       334	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000bfb	        0x418947fc	                mov dword [r15 - 4], eax	       334	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000bff	        0x418b7efc	                mov edi, dword [r14 - 4]	       335	state.c	FUNCTION_15	FOR_3	FOR_5	CALL_16
0x4000c03	      0xe800000000	                          call 0x4000c08	       335	state.c	FUNCTION_15	FOR_3	FOR_5	CALL_16
0x4000c08	          0x4101c4	                           add r12d, eax	       342	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000c0b	          0x4d39fd	                            cmp r13, r15	       332	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000c0e	            0x75e0	                           jne 0x4000bf0	       332	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000c10	      0x488b442408	                mov rax, qword [rsp + 8]	       332	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000c15	          0x4189dd	                           mov r13d, ebx	       332	state.c	FUNCTION_15	FOR_3	FOR_5
0x4000c18	      0x4c637c2418	         movsxd r15, dword [rsp + 0x18] 	       345	state.c	FUNCTION_15	FOR_3
0x4000c1d	        0x418d5dff	                      lea ebx, [r13 - 1]	       346	state.c	FUNCTION_15	FOR_3
0x4000c21	    0x42c704b80000	              mov dword [rax + r15*4], 0	       345	state.c	FUNCTION_15	FOR_3
0x4000c29	          0x8b4538	            mov eax, dword [rbp + 0x38] 	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000c2c	            0x85c0	                           test eax, eax	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000c2e	     0xf8544020000	                           jne 0x4000e78	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000c34	        0x48637d30	         movsxd rdi, dword [rbp + 0x30] 	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000c38	        0x488b5558	            mov rdx, qword [rbp + 0x58] 	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000c3c	          0x8b4534	            mov eax, dword [rbp + 0x34] 	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000c3f	          0x4889f9	                            mov rcx, rdi	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000c42	        0x488d3cba	                  lea rdi, [rdx + rdi*4]	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000c46	          0x8b552c	            mov edx, dword [rbp + 0x2c] 	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000c49	        0x428d3420	                    lea esi, [rax + r12]	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000c4d	          0xf60701	                      test byte [rdi], 1	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000c50	            0x740c	                            je 0x4000c5e	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000c52	          0x4189d0	                            mov r8d, edx	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000c55	        0x41c1e81f	                           shr r8d, 0x1f	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000c59	          0x4401c2	                            add edx, r8d	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000c5c	            0xd1fa	                              sar edx, 1	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000c5e	            0x39f2	                            cmp edx, esi	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000c60	            0x7d41	                           jge 0x4000ca3	       356	state.c	FUNCTION_15	FOR_3	IF_9	CALL_22
0x4000c62	          0x8b7540	            mov esi, dword [rbp + 0x40] 	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4000c65	            0x85f6	                           test esi, esi	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4000c67	     0xf8819020000	                            js 0x4000e86	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4000c6d	          0x8d46ff	                      lea eax, [rsi - 1]	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4000c70	            0x39c8	                            cmp eax, ecx	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4000c72	     0xf841c020000	                            je 0x4000e94	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4000c78	          0x8b4528	            mov eax, dword [rbp + 0x28] 	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4000c7b	          0x83e801	                              sub eax, 1	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4000c7e	            0x39c1	                            cmp ecx, eax	       138	state.c	FUNCTION_7	ELSE_1	IF_2
0x4000c80	            0x7d06	                           jge 0x4000c88	       138	state.c	FUNCTION_7	ELSE_1	IF_2
0x4000c82	          0x83c101	                              add ecx, 1	       139	state.c	FUNCTION_7	ELSE_1	IF_2
0x4000c85	          0x894d30	            mov dword [rbp + 0x30], ecx 	       139	state.c	FUNCTION_7	ELSE_1	IF_2
0x4000c88	        0x488b5558	            mov rdx, qword [rbp + 0x58] 	       139	state.c	FUNCTION_7	ELSE_1	IF_2
0x4000c8c	          0x4863c1	                         movsxd rax, ecx	       139	state.c	FUNCTION_7	ELSE_1	IF_2
0x4000c8f	    0xc74534000000	               mov dword [rbp + 0x34], 0	       358	state.c	FUNCTION_15	FOR_3	IF_9
0x4000c96	    0xc74538000000	               mov dword [rbp + 0x38], 0	       359	state.c	FUNCTION_15	FOR_3	IF_9
0x4000c9d	        0x488d3c82	                  lea rdi, [rdx + rax*4]	       359	state.c	FUNCTION_15	FOR_3	IF_9
0x4000ca1	            0x31c0	                            xor eax, eax	       359	state.c	FUNCTION_15	FOR_3	IF_9
0x4000ca3	    0xf68594000000	               test byte [rbp + 0x94], 8	       362	state.c	FUNCTION_15	FOR_3	IF_10
0x4000caa	            0x745f	                            je 0x4000d0b	       362	state.c	FUNCTION_15	FOR_3	IF_10
0x4000cac	    0x48ba00000000	          movabs rdx, 0xffffffff00000000	       370	state.c	FUNCTION_15	FOR_3	IF_10
0x4000cb6	      0x4823542420	             and rdx, qword [rsp + 0x20]	       370	state.c	FUNCTION_15	FOR_3	IF_10
0x4000cbb	          0x8d7101	                      lea esi, [rcx + 1]	       369	state.c	FUNCTION_15	FOR_3	IF_10
0x4000cbe	            0x89c9	                            mov ecx, ecx	       369	state.c	FUNCTION_15	FOR_3	IF_10
0x4000cc0	        0x48c1e620	                           shl rsi, 0x20	       369	state.c	FUNCTION_15	FOR_3	IF_10
0x4000cc4	          0x4809ce	                             or rsi, rcx	       369	state.c	FUNCTION_15	FOR_3	IF_10
0x4000cc7	          0x4809d0	                             or rax, rdx	       370	state.c	FUNCTION_15	FOR_3	IF_10
0x4000cca	          0xf60701	                      test byte [rdi], 1	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000ccd	          0x8b552c	            mov edx, dword [rbp + 0x2c] 	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000cd0	            0x7409	                            je 0x4000cdb	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000cd2	            0x89d1	                            mov ecx, edx	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000cd4	          0xc1e91f	                           shr ecx, 0x1f	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000cd7	             0x1ca	                            add edx, ecx	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000cd9	            0xd1fa	                              sar edx, 1	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000cdb	        0x48c1e220	                           shl rdx, 0x20	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000cdf	            0x89c0	                            mov eax, eax	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000ce1	            0x31c9	                            xor ecx, ecx	       372	state.c	FUNCTION_15	FOR_3	IF_10	CALL_25
0x4000ce3	          0x4809d0	                             or rax, rdx	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000ce6	          0x4889ef	                            mov rdi, rbp	       372	state.c	FUNCTION_15	FOR_3	IF_10	CALL_25
0x4000ce9	    0x41b8ffffffff	                     mov r8d, 0xffffffff	       372	state.c	FUNCTION_15	FOR_3	IF_10	CALL_25
0x4000cef	          0x4889c2	                            mov rdx, rax	       372	state.c	FUNCTION_15	FOR_3	IF_10	CALL_25
0x4000cf2	      0x4889442420	             mov qword [rsp + 0x20], rax	       371	state.c	FUNCTION_15	FOR_3	IF_10	CALL_24
0x4000cf7	      0xe824f4ffff	                         call sym.scroll	       372	state.c	FUNCTION_15	FOR_3	IF_10	CALL_25
0x4000cfc	        0x48635530	         movsxd rdx, dword [rbp + 0x30] 	       372	state.c	FUNCTION_15	FOR_3	IF_10	CALL_25
0x4000d00	        0x488b4558	            mov rax, qword [rbp + 0x58] 	       372	state.c	FUNCTION_15	FOR_3	IF_10	CALL_25
0x4000d04	        0x488d3c90	                  lea rdi, [rax + rdx*4]	       372	state.c	FUNCTION_15	FOR_3	IF_10	CALL_25
0x4000d08	          0x4889d1	                            mov rcx, rdx	       372	state.c	FUNCTION_15	FOR_3	IF_10	CALL_25
0x4000d0b	      0x488b442408	                mov rax, qword [rsp + 8]	        19	state.c	FUNCTION_1
0x4000d10	    0x440fb644247c	           movzx r8d, byte [rsp + 0x7c] 	        21	state.c	FUNCTION_1
0x4000d16	           0xfb617	                   movzx edx, byte [rdi]	        22	state.c	FUNCTION_1
0x4000d19	        0x488b7530	            mov rsi, qword [rbp + 0x30] 	        22	state.c	FUNCTION_1
0x4000d1d	      0x4489642478	            mov dword [rsp + 0x78], r12d	        20	state.c	FUNCTION_1
0x4000d22	      0x4889442470	             mov qword [rsp + 0x70], rax	        19	state.c	FUNCTION_1
0x4000d27	     0xfb6857c0100	          movzx eax, byte [rbp + 0x17c] 	        21	state.c	FUNCTION_1
0x4000d2e	        0x4183e0fc	                     and r8d, 0xfffffffc	        21	state.c	FUNCTION_1
0x4000d32	          0x83e201	                              and edx, 1	        22	state.c	FUNCTION_1
0x4000d35	             0x1d2	                            add edx, edx	        22	state.c	FUNCTION_1
0x4000d37	          0x83e001	                              and eax, 1	        21	state.c	FUNCTION_1
0x4000d3a	          0x4409c0	                             or eax, r8d	        22	state.c	FUNCTION_1
0x4000d3d	             0x9d0	                             or eax, edx	        22	state.c	FUNCTION_1
0x4000d3f	           0xfb617	                   movzx edx, byte [rdi]	        23	state.c	FUNCTION_1
0x4000d42	          0x83e0f3	                     and eax, 0xfffffff3	        23	state.c	FUNCTION_1
0x4000d45	             0x1d2	                            add edx, edx	        23	state.c	FUNCTION_1
0x4000d47	          0x83e20c	                            and edx, 0xc	        23	state.c	FUNCTION_1
0x4000d4a	             0x9d0	                             or eax, edx	        23	state.c	FUNCTION_1
0x4000d4c	        0x8844247c	               mov byte [rsp + 0x7c], al	        23	state.c	FUNCTION_1
0x4000d50	        0x488b4508	                mov rax, qword [rbp + 8]	        25	state.c	FUNCTION_1	IF_1
0x4000d54	          0x4885c0	                           test rax, rax	        25	state.c	FUNCTION_1	IF_1
0x4000d57	            0x7426	                            je 0x4000d7f	        25	state.c	FUNCTION_1	IF_1
0x4000d59	          0x4c8b00	                     mov r8, qword [rax]	        25	state.c	FUNCTION_1	IF_1
0x4000d5c	          0x4d85c0	                             test r8, r8	        25	state.c	FUNCTION_1	IF_1
0x4000d5f	            0x741e	                            je 0x4000d7f	        25	state.c	FUNCTION_1	IF_1
0x4000d61	            0x89c8	                            mov eax, ecx	        26	state.c	FUNCTION_1	IF_1	IF_2
0x4000d63	    0x48b900000000	          movabs rcx, 0xffffffff00000000	        26	state.c	FUNCTION_1	IF_1	IF_2
0x4000d6d	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	        26	state.c	FUNCTION_1	IF_1	IF_2
0x4000d71	          0x4821ce	                            and rsi, rcx	        26	state.c	FUNCTION_1	IF_1	IF_2
0x4000d74	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	        26	state.c	FUNCTION_1	IF_1	IF_2
0x4000d79	          0x4809c6	                             or rsi, rax	        26	state.c	FUNCTION_1	IF_1	IF_2
0x4000d7c	          0x41ffd0	                                 call r8	        26	state.c	FUNCTION_1	IF_1	IF_2
0x4000d7f	        0x8b442454	            mov eax, dword [rsp + 0x54] 	       377	state.c	FUNCTION_15	FOR_3	IF_11
0x4000d83	          0x83e801	                              sub eax, 1	       377	state.c	FUNCTION_15	FOR_3	IF_11
0x4000d86	            0x39c3	                            cmp ebx, eax	       377	state.c	FUNCTION_15	FOR_3	IF_11
0x4000d88	     0xf8492010000	                            je 0x4000f20	       377	state.c	FUNCTION_15	FOR_3	IF_11
0x4000d8e	        0x48635530	         movsxd rdx, dword [rbp + 0x30] 	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x4000d92	        0x488b4558	            mov rax, qword [rbp + 0x58] 	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x4000d96	        0x44036534	            add r12d, dword [rbp + 0x34]	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x4000d9a	        0xf6049001	              test byte [rax + rdx*4], 1	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x4000d9e	          0x8b452c	            mov eax, dword [rbp + 0x2c] 	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x4000da1	            0x7409	                            je 0x4000dac	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x4000da3	            0x89c2	                            mov edx, eax	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x4000da5	          0xc1ea1f	                           shr edx, 0x1f	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x4000da8	             0x1d0	                            add eax, edx	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x4000daa	            0xd1f8	                              sar eax, 1	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x4000dac	          0x4439e0	                           cmp eax, r12d	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x4000daf	     0xf8fb3000000	                            jg 0x4000e68	       393	state.c	FUNCTION_15	FOR_3	IF_14	CALL_29
0x4000db5	    0xf68594000000	               test byte [rbp + 0x94], 4	       394	state.c	FUNCTION_15	FOR_3	IF_14	IF_15
0x4000dbc	            0x7407	                            je 0x4000dc5	       394	state.c	FUNCTION_15	FOR_3	IF_14	IF_15
0x4000dbe	    0xc74538010000	               mov dword [rbp + 0x38], 1	       395	state.c	FUNCTION_15	FOR_3	IF_14	IF_15
0x4000dc5	      0x488b742408	                mov rsi, qword [rsp + 8]	       400	state.c	FUNCTION_15	FOR_3	CALL_30
0x4000dca	        0x488b7d00	                    mov rdi, qword [rbp]	       400	state.c	FUNCTION_15	FOR_3	CALL_30
0x4000dce	      0xe800000000	                          call 0x4000dd3	       400	state.c	FUNCTION_15	FOR_3	CALL_30
0x4000dd3	        0x8b442454	            mov eax, dword [rsp + 0x54] 	       319	state.c	FUNCTION_15	FOR_3
0x4000dd7	          0x4439e8	                           cmp eax, r13d	       319	state.c	FUNCTION_15	FOR_3
0x4000dda	     0xf8f80fdffff	                            jg 0x4000b60	       319	state.c	FUNCTION_15	FOR_3
0x4000de0	        0x8b442430	            mov eax, dword [rsp + 0x30] 	        34	state.c	FUNCTION_2	IF_1
0x4000de4	          0x3b4534	            cmp eax, dword [rbp + 0x34] 	        34	state.c	FUNCTION_2	IF_1
0x4000de7	     0xf84d9030000	                            je 0x40011c6	        34	state.c	FUNCTION_2	IF_1
0x4000ded	        0x488b4508	                mov rax, qword [rbp + 8]	        40	state.c	FUNCTION_2	IF_3
0x4000df1	          0x4885c0	                           test rax, rax	        40	state.c	FUNCTION_2	IF_3
0x4000df4	            0x7431	                            je 0x4000e27	        40	state.c	FUNCTION_2	IF_3
0x4000df6	        0x4c8b4008	                 mov r8, qword [rax + 8]	        40	state.c	FUNCTION_2	IF_3
0x4000dfa	          0x4d85c0	                             test r8, r8	        40	state.c	FUNCTION_2	IF_3
0x4000dfd	            0x7428	                            je 0x4000e27	        40	state.c	FUNCTION_2	IF_3
0x4000dff	     0xfb695940000	           movzx edx, byte [rbp + 0x94] 	        41	state.c	FUNCTION_2	IF_3	IF_4
0x4000e06	      0x488b442430	            mov rax, qword [rsp + 0x30] 	        41	state.c	FUNCTION_2	IF_3	IF_4
0x4000e0b	        0x8b74244c	            mov esi, dword [rsp + 0x4c] 	        41	state.c	FUNCTION_2	IF_3	IF_4
0x4000e0f	        0x488b4d10	            mov rcx, qword [rbp + 0x10] 	        41	state.c	FUNCTION_2	IF_3	IF_4
0x4000e13	        0x488b7d30	            mov rdi, qword [rbp + 0x30] 	        41	state.c	FUNCTION_2	IF_3	IF_4
0x4000e17	        0x48c1e020	                           shl rax, 0x20	        41	state.c	FUNCTION_2	IF_3	IF_4
0x4000e1b	          0xc0ea05	                               shr dl, 5	        41	state.c	FUNCTION_2	IF_3	IF_4
0x4000e1e	          0x83e201	                              and edx, 1	        41	state.c	FUNCTION_2	IF_3	IF_4
0x4000e21	          0x4809c6	                             or rsi, rax	        41	state.c	FUNCTION_2	IF_3	IF_4
0x4000e24	          0x41ffd0	                                 call r8	        41	state.c	FUNCTION_2	IF_3	IF_4
0x4000e27	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       414	state.c	FUNCTION_15	CALL_34
0x4000e2c	        0x488b7d00	                    mov rdi, qword [rbp]	       414	state.c	FUNCTION_15	CALL_34
0x4000e30	      0xe800000000	                          call 0x4000e35	       414	state.c	FUNCTION_15	CALL_34
0x4000e35	    0x488b8c248800	            mov rcx, qword [rsp + 0x88] 	       416	state.c	FUNCTION_15
0x4000e3d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       416	state.c	FUNCTION_15
0x4000e46	        0x8b442458	            mov eax, dword [rsp + 0x58] 	       415	state.c	FUNCTION_15
0x4000e4a	     0xf85cf040000	                           jne 0x400131f	       416	state.c	FUNCTION_15
0x4000e50	    0x4881c4980000	                           add rsp, 0x98	       416	state.c	FUNCTION_15
0x4000e57	              0x5b	                                 pop rbx	       416	state.c	FUNCTION_15
0x4000e58	              0x5d	                                 pop rbp	       416	state.c	FUNCTION_15
0x4000e59	            0x415c	                                 pop r12	       416	state.c	FUNCTION_15
0x4000e5b	            0x415d	                                 pop r13	       416	state.c	FUNCTION_15
0x4000e5d	            0x415e	                                 pop r14	       416	state.c	FUNCTION_15
0x4000e5f	            0x415f	                                 pop r15	       416	state.c	FUNCTION_15
0x4000e61	              0xc3	                                     ret	       416	state.c	FUNCTION_15
0x4000e62	    0x660f1f440000	                    nop word [rax + rax]	       416	state.c	FUNCTION_15
0x4000e68	        0x44896534	           mov dword [rbp + 0x34], r12d 	       398	state.c	FUNCTION_15	FOR_3	ELSE_2
0x4000e6c	      0xe954ffffff	                           jmp 0x4000dc5	       398	state.c	FUNCTION_15	FOR_3	ELSE_2
0x4000e71	     0xf1f80000000	                         nop dword [rax]	       398	state.c	FUNCTION_15	FOR_3	ELSE_2
0x4000e78	          0x8b7540	            mov esi, dword [rbp + 0x40] 	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4000e7b	          0x8b4d30	            mov ecx, dword [rbp + 0x30] 	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4000e7e	            0x85f6	                           test esi, esi	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4000e80	     0xf89e7fdffff	                           jns 0x4000c6d	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4000e86	          0x8b7528	            mov esi, dword [rbp + 0x28] 	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4000e89	          0x8d46ff	                      lea eax, [rsi - 1]	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4000e8c	            0x39c8	                            cmp eax, ecx	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4000e8e	     0xf85eafdffff	                           jne 0x4000c7e	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4000e94	          0x8b453c	            mov eax, dword [rbp + 0x3c] 	       131	state.c	FUNCTION_7	IF_1
0x4000e97	    0x48ba00000000	          movabs rdx, 0xffffffff00000000	       131	state.c	FUNCTION_7	IF_1
0x4000ea1	      0x4823542428	             and rdx, qword [rsp + 0x28]	       131	state.c	FUNCTION_7	IF_1
0x4000ea6	        0x48c1e620	                           shl rsi, 0x20	       132	state.c	FUNCTION_7	IF_1	CALL_2
0x4000eaa	          0x4809c2	                             or rdx, rax	       131	state.c	FUNCTION_7	IF_1
0x4000ead	      0x4889542428	             mov qword [rsp + 0x28], rdx	       131	state.c	FUNCTION_7	IF_1
0x4000eb2	        0x8b442428	            mov eax, dword [rsp + 0x28] 	       132	state.c	FUNCTION_7	IF_1	CALL_2
0x4000eb6	          0x4809c6	                             or rsi, rax	       132	state.c	FUNCTION_7	IF_1	CALL_2
0x4000eb9	    0xf68595000000	           test byte [rbp + 0x95], 0x10 	       133	state.c	FUNCTION_7	IF_1	CALL_3
0x4000ec0	      0x4889742428	             mov qword [rsp + 0x28], rsi	       132	state.c	FUNCTION_7	IF_1	CALL_2
0x4000ec5	     0xf8436010000	                            je 0x4001001	       133	state.c	FUNCTION_7	IF_1	CALL_3
0x4000ecb	          0x8b4544	            mov eax, dword [rbp + 0x44] 	       133	state.c	FUNCTION_7	IF_1	CALL_3
0x4000ece	    0x48ba00000000	          movabs rdx, 0xffffffff00000000	       133	state.c	FUNCTION_7	IF_1	CALL_3
0x4000ed8	      0x4823542440	             and rdx, qword [rsp + 0x40]	       133	state.c	FUNCTION_7	IF_1	CALL_3
0x4000edd	          0x4809c2	                             or rdx, rax	       133	state.c	FUNCTION_7	IF_1	CALL_3
0x4000ee0	          0x8b4548	            mov eax, dword [rbp + 0x48] 	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x4000ee3	      0x4889542440	             mov qword [rsp + 0x40], rdx	       133	state.c	FUNCTION_7	IF_1	CALL_3
0x4000ee8	            0x85c0	                           test eax, eax	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x4000eea	     0xf8820010000	                            js 0x4001010	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x4000ef0	        0x8b542440	            mov edx, dword [rsp + 0x40] 	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x4000ef4	        0x48c1e020	                           shl rax, 0x20	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x4000ef8	      0xb901000000	                              mov ecx, 1	       136	state.c	FUNCTION_7	IF_1	CALL_5
0x4000efd	          0x4531c0	                            xor r8d, r8d	       136	state.c	FUNCTION_7	IF_1	CALL_5
0x4000f00	          0x4889ef	                            mov rdi, rbp	       136	state.c	FUNCTION_7	IF_1	CALL_5
0x4000f03	          0x4809c2	                             or rdx, rax	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x4000f06	      0x4889542440	             mov qword [rsp + 0x40], rdx	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x4000f0b	      0xe810f2ffff	                         call sym.scroll	       136	state.c	FUNCTION_7	IF_1	CALL_5
0x4000f10	          0x8b4d30	            mov ecx, dword [rbp + 0x30] 	       136	state.c	FUNCTION_7	IF_1	CALL_5
0x4000f13	      0xe970fdffff	                           jmp 0x4000c88	       136	state.c	FUNCTION_7	IF_1	CALL_5
0x4000f18	     0xf1f84000000	                   nop dword [rax + rax]	       136	state.c	FUNCTION_7	IF_1	CALL_5
0x4000f20	      0x488b442408	                mov rax, qword [rsp + 8]	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4000f25	    0x488bb5800000	            mov rsi, qword [rbp + 0x80] 	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4000f2c	            0x31db	                            xor ebx, ebx	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4000f2e	          0x4531ff	                          xor r15d, r15d	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4000f31	            0x8b00	                    mov eax, dword [rax]	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4000f33	            0x89f2	                            mov edx, esi	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4000f35	            0x85c0	                           test eax, eax	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4000f37	     0xf849d000000	                            je 0x4000fda	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4000f3d	      0x4489642418	            mov dword [rsp + 0x18], r12d	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4000f42	            0x31db	                            xor ebx, ebx	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4000f44	          0x4531ff	                          xor r15d, r15d	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4000f47	      0x4c8b642408	                mov r12, qword [rsp + 8]	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4000f4c	      0x44896c2448	            mov dword [rsp + 0x48], r13d	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4000f51	            0xeb1c	                           jmp 0x4000f6f	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4000f53	       0xf1f440000	                   nop dword [rax + rax]	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4000f58	        0x488b7d78	            mov rdi, qword [rbp + 0x78] 	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4000f5c	          0x89041f	              mov dword [rdi + rbx], eax	       384	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4000f5f	        0x4883c304	                              add rbx, 4	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4000f63	        0x4183c701	                             add r15d, 1	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4000f67	        0x418b041c	              mov eax, dword [r12 + rbx]	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4000f6b	            0x85c0	                           test eax, eax	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4000f6d	            0x7461	                            je 0x4000fd0	       381	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7
0x4000f6f	          0x4439fe	                           cmp esi, r15d	       382	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7	IF_12
0x4000f72	            0x89f2	                            mov edx, esi	       382	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7	IF_12
0x4000f74	            0x7fe2	                            jg 0x4000f58	       382	state.c	FUNCTION_15	FOR_3	IF_11	FOR_7	IF_12
0x4000f76	        0x488b7d00	                    mov rdi, qword [rbp]	       145	state.c	FUNCTION_8	CALL_1
0x4000f7a	        0x4c8d2c36	                    lea r13, [rsi + rsi]	       144	state.c	FUNCTION_8
0x4000f7e	        0x48c1e603	                              shl rsi, 3	       145	state.c	FUNCTION_8	CALL_1
0x4000f82	      0xe800000000	                          call 0x4000f87	       145	state.c	FUNCTION_8	CALL_1
0x4000f87	          0x4989c6	                            mov r14, rax	       145	state.c	FUNCTION_8	CALL_1
0x4000f8a	    0x488b85800000	            mov rax, qword [rbp + 0x80] 	        53	string3.h	FUNCTION_42	CALL_3
0x4000f91	        0x488b7578	            mov rsi, qword [rbp + 0x78] 	        53	string3.h	FUNCTION_42	CALL_3
0x4000f95	          0x4c89f7	                            mov rdi, r14	        53	string3.h	FUNCTION_42	CALL_3
0x4000f98	    0x488d14850000	                        lea rdx, [rax*4]	        53	string3.h	FUNCTION_42	CALL_3
0x4000fa0	      0xe800000000	                          call 0x4000fa5	        53	string3.h	FUNCTION_42	CALL_3
0x4000fa5	        0x488b7578	            mov rsi, qword [rbp + 0x78] 	       149	state.c	FUNCTION_8	CALL_3
0x4000fa9	        0x488b7d00	                    mov rdi, qword [rbp]	       149	state.c	FUNCTION_8	CALL_3
0x4000fad	      0xe800000000	                          call 0x4000fb2	       149	state.c	FUNCTION_8	CALL_3
0x4000fb2	        0x4c897578	            mov qword [rbp + 0x78], r14 	       151	state.c	FUNCTION_8
0x4000fb6	    0x4c89ad800000	            mov qword [rbp + 0x80], r13 	       152	state.c	FUNCTION_8
0x4000fbd	          0x4489ea	                           mov edx, r13d	       152	state.c	FUNCTION_8
0x4000fc0	        0x418b041c	              mov eax, dword [r12 + rbx]	       152	state.c	FUNCTION_8
0x4000fc4	          0x4c89ee	                            mov rsi, r13	       152	state.c	FUNCTION_8
0x4000fc7	          0x4c89f7	                            mov rdi, r14	       152	state.c	FUNCTION_8
0x4000fca	            0xeb90	                           jmp 0x4000f5c	       152	state.c	FUNCTION_8
0x4000fcc	         0xf1f4000	                         nop dword [rax]	       152	state.c	FUNCTION_8
0x4000fd0	      0x448b642418	           mov r12d, dword [rsp + 0x18] 	       152	state.c	FUNCTION_8
0x4000fd5	      0x448b6c2448	           mov r13d, dword [rsp + 0x48] 	       152	state.c	FUNCTION_8
0x4000fda	          0x4139d7	                           cmp r15d, edx	       386	state.c	FUNCTION_15	FOR_3	IF_11	IF_13
0x4000fdd	            0x7d41	                           jge 0x4001020	       386	state.c	FUNCTION_15	FOR_3	IF_11	IF_13
0x4000fdf	        0x488b4578	            mov rax, qword [rbp + 0x78] 	       386	state.c	FUNCTION_15	FOR_3	IF_11	IF_13
0x4000fe3	    0xc70418000000	                mov dword [rax + rbx], 0	       388	state.c	FUNCTION_15	FOR_3	IF_11
0x4000fea	        0x488b4530	            mov rax, qword [rbp + 0x30] 	       390	state.c	FUNCTION_15	FOR_3	IF_11
0x4000fee	    0x4489a5880000	           mov dword [rbp + 0x88], r12d 	       389	state.c	FUNCTION_15	FOR_3	IF_11
0x4000ff5	    0x4889858c0000	            mov qword [rbp + 0x8c], rax 	       390	state.c	FUNCTION_15	FOR_3	IF_11
0x4000ffc	      0xe98dfdffff	                           jmp 0x4000d8e	       390	state.c	FUNCTION_15	FOR_3	IF_11
0x4001001	    0x48b900000000	          movabs rcx, 0xffffffff00000000	       133	state.c	FUNCTION_7	IF_1	CALL_3
0x400100b	      0x48214c2440	             and qword [rsp + 0x40], rcx	       133	state.c	FUNCTION_7	IF_1	CALL_3
0x4001010	          0x8b452c	            mov eax, dword [rbp + 0x2c] 	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x4001013	      0xe9d8feffff	                           jmp 0x4000ef0	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x4001018	          0x4531e4	                          xor r12d, r12d	       323	state.c	FUNCTION_15	FOR_3
0x400101b	      0xe9f8fbffff	                           jmp 0x4000c18	       323	state.c	FUNCTION_15	FOR_3
0x4001020	        0x488b7d00	                    mov rdi, qword [rbp]	       145	state.c	FUNCTION_8	CALL_1
0x4001024	        0x488d0c36	                    lea rcx, [rsi + rsi]	       144	state.c	FUNCTION_8
0x4001028	        0x48c1e603	                              shl rsi, 3	       145	state.c	FUNCTION_8	CALL_1
0x400102c	      0x48894c2418	             mov qword [rsp + 0x18], rcx	       144	state.c	FUNCTION_8
0x4001031	      0xe800000000	                          call 0x4001036	       145	state.c	FUNCTION_8	CALL_1
0x4001036	          0x4989c7	                            mov r15, rax	       145	state.c	FUNCTION_8	CALL_1
0x4001039	    0x488b85800000	            mov rax, qword [rbp + 0x80] 	        53	string3.h	FUNCTION_42	CALL_3
0x4001040	        0x488b7578	            mov rsi, qword [rbp + 0x78] 	        53	string3.h	FUNCTION_42	CALL_3
0x4001044	          0x4c89ff	                            mov rdi, r15	        53	string3.h	FUNCTION_42	CALL_3
0x4001047	    0x488d14850000	                        lea rdx, [rax*4]	        53	string3.h	FUNCTION_42	CALL_3
0x400104f	      0xe800000000	                          call 0x4001054	        53	string3.h	FUNCTION_42	CALL_3
0x4001054	        0x488b7578	            mov rsi, qword [rbp + 0x78] 	       149	state.c	FUNCTION_8	CALL_3
0x4001058	        0x488b7d00	                    mov rdi, qword [rbp]	       149	state.c	FUNCTION_8	CALL_3
0x400105c	      0xe800000000	                          call 0x4001061	       149	state.c	FUNCTION_8	CALL_3
0x4001061	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       152	state.c	FUNCTION_8
0x4001066	        0x4c897d78	            mov qword [rbp + 0x78], r15 	       151	state.c	FUNCTION_8
0x400106a	          0x4c89f8	                            mov rax, r15	       152	state.c	FUNCTION_8
0x400106d	    0x48898d800000	            mov qword [rbp + 0x80], rcx 	       152	state.c	FUNCTION_8
0x4001074	      0xe96affffff	                           jmp 0x4000fe3	       152	state.c	FUNCTION_8
0x4001079	      0x488b442458	            mov rax, qword [rsp + 0x58] 	       257	state.c	FUNCTION_15
0x400107e	      0x41803c0400	                 cmp byte [r12 + rax], 0	       257	state.c	FUNCTION_15
0x4001083	     0xf884f010000	                            js 0x40011d8	       257	state.c	FUNCTION_15
0x4001089	    0x486385100100	        movsxd rax, dword [rbp + 0x110] 	       257	state.c	FUNCTION_15
0x4001090	        0x488d0440	                  lea rax, [rax + rax*2]	       257	state.c	FUNCTION_15
0x4001094	    0x488d84c59800	          lea rax, [rbp + rax*8 + 0x98] 	       257	state.c	FUNCTION_15
0x400109c	          0x488b38	                    mov rdi, qword [rax]	       261	state.c	FUNCTION_15
0x400109f	          0x4189d8	                            mov r8d, ebx	       261	state.c	FUNCTION_15
0x40010a2	        0x4c8b5708	                mov r10, qword [rdi + 8]	       261	state.c	FUNCTION_15
0x40010a6	      0xe947faffff	                           jmp 0x4000af2	       261	state.c	FUNCTION_15
0x40010ab	    0x8b858c000000	            mov eax, dword [rbp + 0x8c] 	       281	state.c	FUNCTION_15	IF_3	IF_4
0x40010b1	          0x394530	            cmp dword [rbp + 0x30], eax 	       281	state.c	FUNCTION_15	IF_3	IF_4
0x40010b4	     0xf8590faffff	                           jne 0x4000b4a	       281	state.c	FUNCTION_15	IF_3	IF_4
0x40010ba	    0x8b8588000000	            mov eax, dword [rbp + 0x88] 	       281	state.c	FUNCTION_15	IF_3	IF_4
0x40010c0	     0x38590000000	             add eax, dword [rbp + 0x90]	       281	state.c	FUNCTION_15	IF_3	IF_4
0x40010c6	          0x394534	            cmp dword [rbp + 0x34], eax 	       281	state.c	FUNCTION_15	IF_3	IF_4
0x40010c9	     0xf857bfaffff	                           jne 0x4000b4a	       281	state.c	FUNCTION_15	IF_3	IF_4
0x40010cf	        0x488b5578	            mov rdx, qword [rbp + 0x78] 	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x40010d3	            0x8b32	                    mov esi, dword [rdx]	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x40010d5	            0x85f6	                           test esi, esi	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x40010d7	     0xf8438020000	                            je 0x4001315	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x40010dd	      0xbb04000000	                              mov ebx, 4	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x40010e2	          0x4531e4	                          xor r12d, r12d	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x40010e5	            0xeb0c	                           jmp 0x40010f3	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x40010e7	    0x660f1f840000	                    nop word [rax + rax]	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x40010f0	          0x4889c3	                            mov rbx, rax	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x40010f3	        0x488d4304	                      lea rax, [rbx + 4]	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x40010f7	        0x4183c401	                             add r12d, 1	       293	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x40010fb	        0x8b4c02fc	          mov ecx, dword [rdx + rax - 4]	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x40010ff	            0x85c9	                           test ecx, ecx	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x4001101	            0x75ed	                           jne 0x40010f0	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x4001103	        0x8b542454	            mov edx, dword [rsp + 0x54] 	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4001107	            0x85d2	                           test edx, edx	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4001109	     0xf8ef7010000	                           jle 0x4001306	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x400110f	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4001114	          0x4963dc	                        movsxd rbx, r12d	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4001117	          0x4531ed	                          xor r13d, r13d	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x400111a	        0x48c1e302	                              shl rbx, 2	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x400111e	          0x4989c6	                            mov r14, rax	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4001121	          0x4829c3	                            sub rbx, rax	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4001124	            0xeb24	                           jmp 0x400114a	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4001126	        0x488b5578	            mov rdx, qword [rbp + 0x78] 	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x400112a	          0x418b0e	                    mov ecx, dword [r14]	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0x400112d	          0x4c01f2	                            add rdx, r14	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0x4001130	        0x4183c401	                             add r12d, 1	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0x4001134	        0x4183c501	                             add r13d, 1	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0x4001138	        0x4983c604	                              add r14, 4	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0x400113c	          0x890c1a	              mov dword [rdx + rbx], ecx	       299	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2
0x400113f	      0x44396c2454	           cmp dword [rsp + 0x54], r13d 	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4001144	     0xf8ebc000000	                           jle 0x4001206	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x400114a	          0x418b3e	                    mov edi, dword [r14]	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x400114d	      0xe800000000	                          call 0x4001152	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4001152	            0x85c0	                           test eax, eax	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4001154	    0x488b85800000	            mov rax, qword [rbp + 0x80] 	       297	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	IF_5
0x400115b	     0xf84a5000000	                            je 0x4001206	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4001161	          0x4139c4	                           cmp r12d, eax	       297	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	IF_5
0x4001164	            0x7cc0	                            jl 0x4001126	       297	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	IF_5
0x4001166	        0x488b7d00	                    mov rdi, qword [rbp]	       145	state.c	FUNCTION_8	CALL_1
0x400116a	        0x488d0c00	                    lea rcx, [rax + rax]	       144	state.c	FUNCTION_8
0x400116e	    0x488d34c50000	                        lea rsi, [rax*8]	       145	state.c	FUNCTION_8	CALL_1
0x4001176	      0x48894c2408	                mov qword [rsp + 8], rcx	       144	state.c	FUNCTION_8
0x400117b	      0xe800000000	                          call 0x4001180	       145	state.c	FUNCTION_8	CALL_1
0x4001180	          0x4989c7	                            mov r15, rax	       145	state.c	FUNCTION_8	CALL_1
0x4001183	    0x488b85800000	            mov rax, qword [rbp + 0x80] 	        53	string3.h	FUNCTION_42	CALL_3
0x400118a	        0x488b7578	            mov rsi, qword [rbp + 0x78] 	        53	string3.h	FUNCTION_42	CALL_3
0x400118e	          0x4c89ff	                            mov rdi, r15	        53	string3.h	FUNCTION_42	CALL_3
0x4001191	    0x488d14850000	                        lea rdx, [rax*4]	        53	string3.h	FUNCTION_42	CALL_3
0x4001199	      0xe800000000	                          call 0x400119e	        53	string3.h	FUNCTION_42	CALL_3
0x400119e	        0x488b7578	            mov rsi, qword [rbp + 0x78] 	       149	state.c	FUNCTION_8	CALL_3
0x40011a2	        0x488b7d00	                    mov rdi, qword [rbp]	       149	state.c	FUNCTION_8	CALL_3
0x40011a6	      0xe800000000	                          call 0x40011ab	       149	state.c	FUNCTION_8	CALL_3
0x40011ab	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       152	state.c	FUNCTION_8
0x40011b0	        0x4c897d78	            mov qword [rbp + 0x78], r15 	       151	state.c	FUNCTION_8
0x40011b4	          0x4c89fa	                            mov rdx, r15	       152	state.c	FUNCTION_8
0x40011b7	    0x48898d800000	            mov qword [rbp + 0x80], rcx 	       152	state.c	FUNCTION_8
0x40011be	          0x4889c8	                            mov rax, rcx	       152	state.c	FUNCTION_8
0x40011c1	      0xe964ffffff	                           jmp 0x400112a	       152	state.c	FUNCTION_8
0x40011c6	        0x8b44244c	            mov eax, dword [rsp + 0x4c] 	        34	state.c	FUNCTION_2	IF_1
0x40011ca	          0x3b4530	            cmp eax, dword [rbp + 0x30] 	        34	state.c	FUNCTION_2	IF_1
0x40011cd	     0xf851afcffff	                           jne 0x4000ded	        34	state.c	FUNCTION_2	IF_1
0x40011d3	      0xe94ffcffff	                           jmp 0x4000e27	        34	state.c	FUNCTION_2	IF_1
0x40011d8	        0x488b4500	                    mov rax, qword [rbp]	       258	state.c	FUNCTION_15
0x40011dc	        0xf6401801	               test byte [rax + 0x18], 1	       258	state.c	FUNCTION_15
0x40011e0	            0x740c	                            je 0x40011ee	       258	state.c	FUNCTION_15
0x40011e2	    0x488d85f80000	                   lea rax, [rbp + 0xf8]	       258	state.c	FUNCTION_15
0x40011e9	      0xe9aefeffff	                           jmp 0x400109c	       258	state.c	FUNCTION_15
0x40011ee	    0x486385140100	        movsxd rax, dword [rbp + 0x114] 	       258	state.c	FUNCTION_15
0x40011f5	        0x488d0440	                  lea rax, [rax + rax*2]	       258	state.c	FUNCTION_15
0x40011f9	    0x488d84c59800	          lea rax, [rbp + rax*8 + 0x98] 	       258	state.c	FUNCTION_15
0x4001201	      0xe996feffff	                           jmp 0x400109c	       258	state.c	FUNCTION_15
0x4001206	          0x4963dc	                        movsxd rbx, r12d	       258	state.c	FUNCTION_15
0x4001209	        0x48c1e302	                              shl rbx, 2	       258	state.c	FUNCTION_15
0x400120d	          0x4139c4	                           cmp r12d, eax	       301	state.c	FUNCTION_15	IF_3	IF_4	IF_6
0x4001210	     0xf8da0000000	                           jge 0x40012b6	       301	state.c	FUNCTION_15	IF_3	IF_4	IF_6
0x4001216	        0x4c8b6578	            mov r12, qword [rbp + 0x78] 	       301	state.c	FUNCTION_15	IF_3	IF_4	IF_6
0x400121a	    0x41c7041c0000	                mov dword [r12 + rbx], 0	       303	state.c	FUNCTION_15	IF_3	IF_4
0x4001222	    0x8b8588000000	            mov eax, dword [rbp + 0x88] 	       312	state.c	FUNCTION_15	IF_3	IF_4	CALL_12
0x4001228	    0x4c63858c0000	          movsxd r8, dword [rbp + 0x8c] 	       312	state.c	FUNCTION_15	IF_3	IF_4	CALL_12
0x400122f	       0xfb67c246c	           movzx edi, byte [rsp + 0x6c] 	        21	state.c	FUNCTION_1
0x4001234	     0xfb6957c0100	          movzx edx, byte [rbp + 0x17c] 	        21	state.c	FUNCTION_1
0x400123b	    0x488bb58c0000	            mov rsi, qword [rbp + 0x8c] 	        21	state.c	FUNCTION_1
0x4001242	        0x89442468	             mov dword [rsp + 0x68], eax	        20	state.c	FUNCTION_1
0x4001246	        0x488b4558	            mov rax, qword [rbp + 0x58] 	        22	state.c	FUNCTION_1
0x400124a	      0x4c89642460	             mov qword [rsp + 0x60], r12	        19	state.c	FUNCTION_1
0x400124f	          0x4c89c1	                             mov rcx, r8	        19	state.c	FUNCTION_1
0x4001252	          0x83e7fc	                     and edi, 0xfffffffc	        21	state.c	FUNCTION_1
0x4001255	        0x4e8d0480	                    lea r8, [rax + r8*4]	        22	state.c	FUNCTION_1
0x4001259	          0x83e201	                              and edx, 1	        21	state.c	FUNCTION_1
0x400125c	             0x9fa	                             or edx, edi	        22	state.c	FUNCTION_1
0x400125e	        0x410fb600	                    movzx eax, byte [r8]	        22	state.c	FUNCTION_1
0x4001262	          0x83e001	                              and eax, 1	        22	state.c	FUNCTION_1
0x4001265	             0x1c0	                            add eax, eax	        22	state.c	FUNCTION_1
0x4001267	             0x9d0	                             or eax, edx	        22	state.c	FUNCTION_1
0x4001269	        0x410fb610	                    movzx edx, byte [r8]	        23	state.c	FUNCTION_1
0x400126d	          0x83e0f3	                     and eax, 0xfffffff3	        23	state.c	FUNCTION_1
0x4001270	             0x1d2	                            add edx, edx	        23	state.c	FUNCTION_1
0x4001272	          0x83e20c	                            and edx, 0xc	        23	state.c	FUNCTION_1
0x4001275	             0x9d0	                             or eax, edx	        23	state.c	FUNCTION_1
0x4001277	        0x8844246c	               mov byte [rsp + 0x6c], al	        23	state.c	FUNCTION_1
0x400127b	        0x488b4508	                mov rax, qword [rbp + 8]	        25	state.c	FUNCTION_1	IF_1
0x400127f	          0x4885c0	                           test rax, rax	        25	state.c	FUNCTION_1	IF_1
0x4001282	     0xf84c2f8ffff	                            je 0x4000b4a	        25	state.c	FUNCTION_1	IF_1
0x4001288	          0x488b00	                    mov rax, qword [rax]	        25	state.c	FUNCTION_1	IF_1
0x400128b	          0x4885c0	                           test rax, rax	        25	state.c	FUNCTION_1	IF_1
0x400128e	     0xf84b6f8ffff	                            je 0x4000b4a	        25	state.c	FUNCTION_1	IF_1
0x4001294	    0x48bf00000000	          movabs rdi, 0xffffffff00000000	        26	state.c	FUNCTION_1	IF_1	IF_2
0x400129e	            0x89c9	                            mov ecx, ecx	        26	state.c	FUNCTION_1	IF_1	IF_2
0x40012a0	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	        26	state.c	FUNCTION_1	IF_1	IF_2
0x40012a4	          0x4821fe	                            and rsi, rdi	        26	state.c	FUNCTION_1	IF_1	IF_2
0x40012a7	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	        26	state.c	FUNCTION_1	IF_1	IF_2
0x40012ac	          0x4809ce	                             or rsi, rcx	        26	state.c	FUNCTION_1	IF_1	IF_2
0x40012af	            0xffd0	                                call rax	        26	state.c	FUNCTION_1	IF_1	IF_2
0x40012b1	      0xe994f8ffff	                           jmp 0x4000b4a	        26	state.c	FUNCTION_1	IF_1	IF_2
0x40012b6	        0x488b7d00	                    mov rdi, qword [rbp]	       145	state.c	FUNCTION_8	CALL_1
0x40012ba	    0x488d34c50000	                        lea rsi, [rax*8]	       145	state.c	FUNCTION_8	CALL_1
0x40012c2	        0x4c8d3400	                    lea r14, [rax + rax]	       144	state.c	FUNCTION_8
0x40012c6	      0xe800000000	                          call 0x40012cb	       145	state.c	FUNCTION_8	CALL_1
0x40012cb	          0x4989c4	                            mov r12, rax	       145	state.c	FUNCTION_8	CALL_1
0x40012ce	    0x488b85800000	            mov rax, qword [rbp + 0x80] 	        53	string3.h	FUNCTION_42	CALL_3
0x40012d5	        0x488b7578	            mov rsi, qword [rbp + 0x78] 	        53	string3.h	FUNCTION_42	CALL_3
0x40012d9	          0x4c89e7	                            mov rdi, r12	        53	string3.h	FUNCTION_42	CALL_3
0x40012dc	    0x488d14850000	                        lea rdx, [rax*4]	        53	string3.h	FUNCTION_42	CALL_3
0x40012e4	      0xe800000000	                          call 0x40012e9	        53	string3.h	FUNCTION_42	CALL_3
0x40012e9	        0x488b7578	            mov rsi, qword [rbp + 0x78] 	       149	state.c	FUNCTION_8	CALL_3
0x40012ed	        0x488b7d00	                    mov rdi, qword [rbp]	       149	state.c	FUNCTION_8	CALL_3
0x40012f1	      0xe800000000	                          call 0x40012f6	       149	state.c	FUNCTION_8	CALL_3
0x40012f6	        0x4c896578	            mov qword [rbp + 0x78], r12 	       151	state.c	FUNCTION_8
0x40012fa	    0x4c89b5800000	            mov qword [rbp + 0x80], r14 	       152	state.c	FUNCTION_8
0x4001301	      0xe914ffffff	                           jmp 0x400121a	       152	state.c	FUNCTION_8
0x4001306	    0x488b85800000	            mov rax, qword [rbp + 0x80] 	       152	state.c	FUNCTION_8
0x400130d	          0x4531ed	                          xor r13d, r13d	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4001310	      0xe9f8feffff	                           jmp 0x400120d	       296	state.c	FUNCTION_15	IF_3	IF_4	WHILE_2	CALL_7
0x4001315	            0x31db	                            xor ebx, ebx	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x4001317	          0x4531e4	                          xor r12d, r12d	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x400131a	      0xe9e4fdffff	                           jmp 0x4001103	       292	state.c	FUNCTION_15	IF_3	IF_4	WHILE_1
0x400131f	      0xe800000000	                          call 0x4001324	       416	state.c	FUNCTION_15
vterm_state_get_cursorpos	functions,0:WHILE,0:DO,0:ELSE,0:FOR,0:IF,0:SWITCH,0:CALL,0	3
0x4002980	        0x488b4730	            mov rax, qword [rdi + 0x30] 	      1802	state.c	FUNCTION_32
0x4002984	          0x488906	                    mov qword [rsi], rax	      1802	state.c	FUNCTION_32
0x4002987	              0xc3	                                     ret	      1802	state.c	FUNCTION_32
vterm_obtain_state	functions,0:WHILE,0:DO,0:ELSE,0:FOR,0:IF,2:SWITCH,0:CALL,6	65
0x40020f0	    0x488b87180100	           mov rax, qword [rdi + 0x118] 	      1699	state.c	FUNCTION_30	IF_1
0x40020f7	          0x4885c0	                           test rax, rax	      1699	state.c	FUNCTION_30	IF_1
0x40020fa	            0x7404	                            je 0x4002100	      1699	state.c	FUNCTION_30	IF_1
0x40020fc	              0xc3	                                     ret	      1719	state.c	FUNCTION_30
0x40020fd	           0xf1f00	                         nop dword [rax]	      1719	state.c	FUNCTION_30
0x4002100	              0x55	                                push rbp	      1697	state.c	FUNCTION_30
0x4002101	              0x53	                                push rbx	      1697	state.c	FUNCTION_30
0x4002102	          0x4889fd	                            mov rbp, rdi	      1697	state.c	FUNCTION_30
0x4002105	      0xbe98010000	                          mov esi, 0x198	        54	state.c	FUNCTION_4	CALL_1
0x400210a	        0x4883ec08	                              sub rsp, 8	      1697	state.c	FUNCTION_30
0x400210e	      0xe800000000	                          call 0x4002113	        54	state.c	FUNCTION_4	CALL_1
0x4002113	          0x4889c3	                            mov rbx, rax	        54	state.c	FUNCTION_4	CALL_1
0x4002116	          0x488928	                    mov qword [rax], rbp	        56	state.c	FUNCTION_4
0x4002119	          0x8b4510	            mov eax, dword [rbp + 0x10] 	        58	state.c	FUNCTION_4
0x400211c	          0x4889df	                            mov rdi, rbx	        70	state.c	FUNCTION_4	CALL_2
0x400211f	          0x894328	             mov dword [rbx + 0x28], eax	        58	state.c	FUNCTION_4
0x4002122	          0x8b4514	            mov eax, dword [rbp + 0x14] 	        59	state.c	FUNCTION_4
0x4002125	    0xc74360000000	               mov dword [rbx + 0x60], 0	        61	state.c	FUNCTION_4
0x400212c	    0xc74364000000	               mov dword [rbx + 0x64], 0	        62	state.c	FUNCTION_4
0x4002133	    0xc74368000000	               mov dword [rbx + 0x68], 0	        63	state.c	FUNCTION_4
0x400213a	    0xc74370000000	               mov dword [rbx + 0x70], 0	        65	state.c	FUNCTION_4
0x4002141	          0x89432c	             mov dword [rbx + 0x2c], eax	        59	state.c	FUNCTION_4
0x4002144	    0x48c743080000	                  mov qword [rbx + 8], 0	        67	state.c	FUNCTION_4
0x400214c	    0x48c743100000	               mov qword [rbx + 0x10], 0	        68	state.c	FUNCTION_4
0x4002154	      0xe800000000	                          call 0x4002159	        70	state.c	FUNCTION_4	CALL_2
0x4002159	          0x488b3b	                    mov rdi, qword [rbx]	      1706	state.c	FUNCTION_30	CALL_2
0x400215c	    0xc78378010000	              mov dword [rbx + 0x178], 0	        72	state.c	FUNCTION_4
0x4002166	      0xbe40000000	                           mov esi, 0x40	      1706	state.c	FUNCTION_30	CALL_2
0x400216b	    0x48899d180100	           mov qword [rbp + 0x118], rbx 	      1703	state.c	FUNCTION_30
0x4002172	    0x48c783800000	           mov qword [rbx + 0x80], 0x10 	      1705	state.c	FUNCTION_30
0x400217d	      0xe800000000	                          call 0x4002182	      1706	state.c	FUNCTION_30	CALL_2
0x4002182	          0x8b732c	            mov esi, dword [rbx + 0x2c] 	      1708	state.c	FUNCTION_30	CALL_3
0x4002185	        0x48894378	             mov qword [rbx + 0x78], rax	      1706	state.c	FUNCTION_30	CALL_2
0x4002189	          0x488b3b	                    mov rdi, qword [rbx]	      1708	state.c	FUNCTION_30	CALL_3
0x400218c	          0x8d460e	                    lea eax, [rsi + 0xe]	      1708	state.c	FUNCTION_30	CALL_3
0x400218f	          0x83c607	                              add esi, 7	      1708	state.c	FUNCTION_30	CALL_3
0x4002192	           0xf48f0	                          cmovs esi, eax	      1708	state.c	FUNCTION_30	CALL_3
0x4002195	          0xc1fe03	                              sar esi, 3	      1708	state.c	FUNCTION_30	CALL_3
0x4002198	          0x4863f6	                         movsxd rsi, esi	      1708	state.c	FUNCTION_30	CALL_3
0x400219b	      0xe800000000	                          call 0x40021a0	      1708	state.c	FUNCTION_30	CALL_3
0x40021a0	        0x48637328	         movsxd rsi, dword [rbx + 0x28] 	      1710	state.c	FUNCTION_30	CALL_4
0x40021a4	          0x488b3b	                    mov rdi, qword [rbx]	      1710	state.c	FUNCTION_30	CALL_4
0x40021a7	        0x48894350	             mov qword [rbx + 0x50], rax	      1708	state.c	FUNCTION_30	CALL_3
0x40021ab	        0x48c1e602	                              shl rsi, 2	      1710	state.c	FUNCTION_30	CALL_4
0x40021af	      0xe800000000	                          call 0x40021b4	      1710	state.c	FUNCTION_30	CALL_4
0x40021b4	            0x31ff	                            xor edi, edi	      1712	state.c	FUNCTION_30	CALL_5
0x40021b6	        0x48894358	             mov qword [rbx + 0x58], rax	      1710	state.c	FUNCTION_30	CALL_4
0x40021ba	      0xbe75000000	                           mov esi, 0x75	      1712	state.c	FUNCTION_30	CALL_5
0x40021bf	      0xe800000000	                          call 0x40021c4	      1712	state.c	FUNCTION_30	CALL_5
0x40021c4	          0x488b10	                    mov rdx, qword [rax]	      1713	state.c	FUNCTION_30	IF_2
0x40021c7	    0x488983f80000	             mov qword [rbx + 0xf8], rax	      1712	state.c	FUNCTION_30	CALL_5
0x40021ce	          0x4885d2	                           test rdx, rdx	      1713	state.c	FUNCTION_30	IF_2
0x40021d1	            0x740c	                            je 0x40021df	      1713	state.c	FUNCTION_30	IF_2
0x40021d3	    0x488db3000100	                  lea rsi, [rbx + 0x100]	      1714	state.c	FUNCTION_30	IF_2
0x40021da	          0x4889c7	                            mov rdi, rax	      1714	state.c	FUNCTION_30	IF_2
0x40021dd	            0xffd2	                                call rdx	      1714	state.c	FUNCTION_30	IF_2
0x40021df	          0x4889da	                            mov rdx, rbx	      1716	state.c	FUNCTION_30	CALL_6
0x40021e2	          0x4889ef	                            mov rdi, rbp	      1716	state.c	FUNCTION_30	CALL_6
0x40021e5	      0xbe00000000	                              mov esi, 0	      1716	state.c	FUNCTION_30	CALL_6
0x40021ea	      0xe800000000	                          call 0x40021ef	      1716	state.c	FUNCTION_30	CALL_6
0x40021ef	        0x4883c408	                              add rsp, 8	      1719	state.c	FUNCTION_30
0x40021f3	          0x4889d8	                            mov rax, rbx	      1718	state.c	FUNCTION_30
0x40021f6	              0x5b	                                 pop rbx	      1719	state.c	FUNCTION_30
0x40021f7	              0x5d	                                 pop rbp	      1719	state.c	FUNCTION_30
0x40021f8	              0xc3	                                     ret	      1719	state.c	FUNCTION_30
on_control	functions,0:WHILE,0:DO,0:ELSE,1:FOR,0:IF,8:SWITCH,1:CALL,12	277
0x4001650	          0x8d47f9	                      lea eax, [rdi - 7]	       424	state.c	FUNCTION_16	SWITCH_1
0x4001653	            0x4154	                                push r12	       419	state.c	FUNCTION_16
0x4001655	              0x55	                                push rbp	       419	state.c	FUNCTION_16
0x4001656	              0x53	                                push rbx	       419	state.c	FUNCTION_16
0x4001657	          0x4889f3	                            mov rbx, rsi	       419	state.c	FUNCTION_16
0x400165a	        0x448b6630	           mov r12d, dword [rsi + 0x30] 	       422	state.c	FUNCTION_16
0x400165e	            0x3c88	                            cmp al, 0x88	       424	state.c	FUNCTION_16	SWITCH_1
0x4001660	          0x8b6e34	            mov ebp, dword [rsi + 0x34] 	       422	state.c	FUNCTION_16
0x4001663	     0xf8767020000	                            ja 0x40018d0	       424	state.c	FUNCTION_16	SWITCH_1
0x4001669	           0xfb6c0	                           movzx eax, al	       424	state.c	FUNCTION_16	SWITCH_1
0x400166c	    0xff24c5000000	                       jmp qword [rax*8]	       424	state.c	FUNCTION_16	SWITCH_1
0x4001673	       0xf1f440000	                   nop dword [rax + rax]	       424	state.c	FUNCTION_16	SWITCH_1
0x4001678	          0x8b4640	            mov eax, dword [rsi + 0x40] 	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x400167b	            0x85c0	                           test eax, eax	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x400167d	     0xf8895030000	                            js 0x4001a18	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4001683	          0x8d50ff	                      lea edx, [rax - 1]	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4001686	          0x4139d4	                           cmp r12d, edx	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4001689	     0xf8579020000	                           jne 0x4001908	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x400168f	          0x8b733c	            mov esi, dword [rbx + 0x3c] 	       131	state.c	FUNCTION_7	IF_1
0x4001692	        0x48c1e020	                           shl rax, 0x20	       132	state.c	FUNCTION_7	IF_1	CALL_2
0x4001696	          0x4809c6	                             or rsi, rax	       132	state.c	FUNCTION_7	IF_1	CALL_2
0x4001699	    0xf68395000000	           test byte [rbx + 0x95], 0x10 	       133	state.c	FUNCTION_7	IF_1	CALL_3
0x40016a0	     0xf849a030000	                            je 0x4001a40	       133	state.c	FUNCTION_7	IF_1	CALL_3
0x40016a6	          0x8b4348	            mov eax, dword [rbx + 0x48] 	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x40016a9	          0x8b5344	            mov edx, dword [rbx + 0x44] 	       133	state.c	FUNCTION_7	IF_1	CALL_3
0x40016ac	            0x85c0	                           test eax, eax	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x40016ae	     0xf888e030000	                            js 0x4001a42	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x40016b4	        0x48c1e020	                           shl rax, 0x20	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x40016b8	          0x4531c0	                            xor r8d, r8d	       136	state.c	FUNCTION_7	IF_1	CALL_5
0x40016bb	      0xb901000000	                              mov ecx, 1	       136	state.c	FUNCTION_7	IF_1	CALL_5
0x40016c0	          0x4809c2	                             or rdx, rax	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x40016c3	          0x4889df	                            mov rdi, rbx	       136	state.c	FUNCTION_7	IF_1	CALL_5
0x40016c6	      0xe855eaffff	                         call sym.scroll	       136	state.c	FUNCTION_7	IF_1	CALL_5
0x40016cb	       0xf1f440000	                   nop dword [rax + rax]	       136	state.c	FUNCTION_7	IF_1	CALL_5
0x40016d0	    0xc74334000000	               mov dword [rbx + 0x34], 0	       448	state.c	FUNCTION_16	SWITCH_1
0x40016d7	            0x31c0	                            xor eax, eax	       449	state.c	FUNCTION_16	SWITCH_1
0x40016d9	            0x39e8	                            cmp eax, ebp	        34	state.c	FUNCTION_2	IF_1
0x40016db	            0x745b	                            je 0x4001738	        34	state.c	FUNCTION_2	IF_1
0x40016dd	        0x488b4308	                mov rax, qword [rbx + 8]	        40	state.c	FUNCTION_2	IF_3
0x40016e1	    0xc74338000000	               mov dword [rbx + 0x38], 0	        38	state.c	FUNCTION_2	IF_2
0x40016e8	          0x4885c0	                           test rax, rax	        40	state.c	FUNCTION_2	IF_3
0x40016eb	            0x742a	                            je 0x4001717	        40	state.c	FUNCTION_2	IF_3
0x40016ed	        0x488b4008	                mov rax, qword [rax + 8]	        40	state.c	FUNCTION_2	IF_3
0x40016f1	          0x4885c0	                           test rax, rax	        40	state.c	FUNCTION_2	IF_3
0x40016f4	            0x7421	                            je 0x4001717	        40	state.c	FUNCTION_2	IF_3
0x40016f6	     0xfb693940000	           movzx edx, byte [rbx + 0x94] 	        41	state.c	FUNCTION_2	IF_3	IF_4
0x40016fd	        0x48c1e520	                           shl rbp, 0x20	        41	state.c	FUNCTION_2	IF_3	IF_4
0x4001701	          0x4489e6	                           mov esi, r12d	        41	state.c	FUNCTION_2	IF_3	IF_4
0x4001704	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	        41	state.c	FUNCTION_2	IF_3	IF_4
0x4001708	          0x4809ee	                             or rsi, rbp	        41	state.c	FUNCTION_2	IF_3	IF_4
0x400170b	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	        41	state.c	FUNCTION_2	IF_3	IF_4
0x400170f	          0xc0ea05	                               shr dl, 5	        41	state.c	FUNCTION_2	IF_3	IF_4
0x4001712	          0x83e201	                              and edx, 1	        41	state.c	FUNCTION_2	IF_3	IF_4
0x4001715	            0xffd0	                                call rax	        41	state.c	FUNCTION_2	IF_3	IF_4
0x4001717	      0xb801000000	                              mov eax, 1	       513	state.c	FUNCTION_16
0x400171c	              0x5b	                                 pop rbx	       514	state.c	FUNCTION_16
0x400171d	              0x5d	                                 pop rbp	       514	state.c	FUNCTION_16
0x400171e	            0x415c	                                 pop r12	       514	state.c	FUNCTION_16
0x4001720	              0xc3	                                     ret	       514	state.c	FUNCTION_16
0x4001721	     0xf1f80000000	                         nop dword [rax]	       514	state.c	FUNCTION_16
0x4001728	    0xc78610010000	              mov dword [rsi + 0x110], 1	       452	state.c	FUNCTION_16	SWITCH_1
0x4001732	    0x660f1f440000	                    nop word [rax + rax]	       452	state.c	FUNCTION_16	SWITCH_1
0x4001738	        0x443b6330	           cmp r12d, dword [rbx + 0x30] 	        34	state.c	FUNCTION_2	IF_1
0x400173c	            0x759f	                           jne 0x40016dd	        34	state.c	FUNCTION_2	IF_1
0x400173e	            0xebd7	                           jmp 0x4001717	        34	state.c	FUNCTION_2	IF_1
0x4001740	    0xc78610010000	              mov dword [rsi + 0x110], 0	       456	state.c	FUNCTION_16	SWITCH_1
0x400174a	            0xebec	                           jmp 0x4001738	       457	state.c	FUNCTION_16	SWITCH_1
0x400174c	         0xf1f4000	                         nop dword [rax]	       457	state.c	FUNCTION_16	SWITCH_1
0x4001750	          0x8b4640	            mov eax, dword [rsi + 0x40] 	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4001753	            0x85c0	                           test eax, eax	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4001755	     0xf8825020000	                            js 0x4001980	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x400175b	          0x8d50ff	                      lea edx, [rax - 1]	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x400175e	          0x4139d4	                           cmp r12d, edx	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4001761	     0xf8428020000	                            je 0x400198f	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4001767	          0x8b4628	            mov eax, dword [rsi + 0x28] 	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x400176a	          0x8d50ff	                      lea edx, [rax - 1]	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x400176d	          0x4139d4	                           cmp r12d, edx	       138	state.c	FUNCTION_7	ELSE_1	IF_2
0x4001770	            0x7dc6	                           jge 0x4001738	       138	state.c	FUNCTION_7	ELSE_1	IF_2
0x4001772	      0x418d442401	                      lea eax, [r12 + 1]	       139	state.c	FUNCTION_7	ELSE_1	IF_2
0x4001777	          0x894330	             mov dword [rbx + 0x30], eax	       139	state.c	FUNCTION_7	ELSE_1	IF_2
0x400177a	            0xebbc	                           jmp 0x4001738	       139	state.c	FUNCTION_7	ELSE_1	IF_2
0x400177c	         0xf1f4000	                         nop dword [rax]	       139	state.c	FUNCTION_7	ELSE_1	IF_2
0x4001780	            0x89e8	                            mov eax, ebp	       158	state.c	FUNCTION_9
0x4001782	            0x89e9	                            mov ecx, ebp	       158	state.c	FUNCTION_9
0x4001784	      0xba01000000	                              mov edx, 1	       158	state.c	FUNCTION_9
0x4001789	          0xc1f803	                              sar eax, 3	       158	state.c	FUNCTION_9
0x400178c	          0x83e107	                              and ecx, 7	       158	state.c	FUNCTION_9
0x400178f	            0x4898	                                    cdqe	       158	state.c	FUNCTION_9
0x4001791	        0x48034650	             add rax, qword [rsi + 0x50]	       158	state.c	FUNCTION_9
0x4001795	            0xd3e2	                             shl edx, cl	       158	state.c	FUNCTION_9
0x4001797	             0x810	                       or byte [rax], dl	       158	state.c	FUNCTION_9
0x4001799	          0x8b4634	            mov eax, dword [rsi + 0x34] 	       158	state.c	FUNCTION_9
0x400179c	      0xe938ffffff	                           jmp 0x40016d9	       158	state.c	FUNCTION_9
0x40017a1	     0xf1f80000000	                         nop dword [rax]	       158	state.c	FUNCTION_9
0x40017a8	        0x4439663c	           cmp dword [rsi + 0x3c], r12d 	       473	state.c	FUNCTION_16	SWITCH_1	IF_4
0x40017ac	     0xf841e020000	                            je 0x40019d0	       473	state.c	FUNCTION_16	SWITCH_1	IF_4
0x40017b2	          0x4585e4	                         test r12d, r12d	       482	state.c	FUNCTION_16	SWITCH_1	ELSE_1	IF_5
0x40017b5	            0x7e81	                           jle 0x4001738	       482	state.c	FUNCTION_16	SWITCH_1	ELSE_1	IF_5
0x40017b7	      0x418d4424ff	                      lea eax, [r12 - 1]	       483	state.c	FUNCTION_16	SWITCH_1	ELSE_1	IF_5
0x40017bc	          0x894630	             mov dword [rsi + 0x30], eax	       483	state.c	FUNCTION_16	SWITCH_1	ELSE_1	IF_5
0x40017bf	      0xe974ffffff	                           jmp 0x4001738	       483	state.c	FUNCTION_16	SWITCH_1	ELSE_1	IF_5
0x40017c4	         0xf1f4000	                         nop dword [rax]	       483	state.c	FUNCTION_16	SWITCH_1	ELSE_1	IF_5
0x40017c8	    0xc78618010000	              mov dword [rsi + 0x118], 2	       487	state.c	FUNCTION_16	SWITCH_1
0x40017d2	      0xe961ffffff	                           jmp 0x4001738	       488	state.c	FUNCTION_16	SWITCH_1
0x40017d7	    0x660f1f840000	                    nop word [rax + rax]	       488	state.c	FUNCTION_16	SWITCH_1
0x40017e0	    0xc78618010000	              mov dword [rsi + 0x118], 3	       491	state.c	FUNCTION_16	SWITCH_1
0x40017ea	      0xe949ffffff	                           jmp 0x4001738	       492	state.c	FUNCTION_16	SWITCH_1
0x40017ef	              0x90	                                     nop	       492	state.c	FUNCTION_16	SWITCH_1
0x40017f0	        0x488b4608	                mov rax, qword [rsi + 8]	       426	state.c	FUNCTION_16	SWITCH_1	IF_1
0x40017f4	          0x4885c0	                           test rax, rax	       426	state.c	FUNCTION_16	SWITCH_1	IF_1
0x40017f7	     0xf843bffffff	                            je 0x4001738	       426	state.c	FUNCTION_16	SWITCH_1	IF_1
0x40017fd	        0x488b4040	            mov rax, qword [rax + 0x40] 	       426	state.c	FUNCTION_16	SWITCH_1	IF_1
0x4001801	          0x4885c0	                           test rax, rax	       426	state.c	FUNCTION_16	SWITCH_1	IF_1
0x4001804	     0xf842effffff	                            je 0x4001738	       426	state.c	FUNCTION_16	SWITCH_1	IF_1
0x400180a	        0x488b7e10	            mov rdi, qword [rsi + 0x10] 	       427	state.c	FUNCTION_16	SWITCH_1	IF_1
0x400180e	            0xffd0	                                call rax	       427	state.c	FUNCTION_16	SWITCH_1	IF_1
0x4001810	          0x8b4334	            mov eax, dword [rbx + 0x34] 	       427	state.c	FUNCTION_16	SWITCH_1	IF_1
0x4001813	      0xe9c1feffff	                           jmp 0x40016d9	       427	state.c	FUNCTION_16	SWITCH_1	IF_1
0x4001818	     0xf1f84000000	                   nop dword [rax + rax]	       427	state.c	FUNCTION_16	SWITCH_1	IF_1
0x4001820	            0x85ed	                           test ebp, ebp	       431	state.c	FUNCTION_16	SWITCH_1	IF_2
0x4001822	     0xf8e10ffffff	                           jle 0x4001738	       431	state.c	FUNCTION_16	SWITCH_1	IF_2
0x4001828	          0x8d45ff	                      lea eax, [rbp - 1]	       432	state.c	FUNCTION_16	SWITCH_1	IF_2
0x400182b	          0x894634	             mov dword [rsi + 0x34], eax	       432	state.c	FUNCTION_16	SWITCH_1	IF_2
0x400182e	      0xe9a6feffff	                           jmp 0x40016d9	       432	state.c	FUNCTION_16	SWITCH_1	IF_2
0x4001833	       0xf1f440000	                   nop dword [rax + rax]	       432	state.c	FUNCTION_16	SWITCH_1	IF_2
0x4001838	          0x8b562c	            mov edx, dword [rsi + 0x2c] 	       432	state.c	FUNCTION_16	SWITCH_1	IF_2
0x400183b	        0x488b4e58	            mov rcx, qword [rsi + 0x58] 	       432	state.c	FUNCTION_16	SWITCH_1	IF_2
0x400183f	    0x41b801000000	                              mov r8d, 1	       187	state.c	FUNCTION_13	WHILE_1
0x4001845	            0x89d7	                            mov edi, edx	       187	state.c	FUNCTION_13	WHILE_1
0x4001847	          0xc1ef1f	                           shr edi, 0x1f	       187	state.c	FUNCTION_13	WHILE_1
0x400184a	             0x1d7	                            add edi, edx	       187	state.c	FUNCTION_13	WHILE_1
0x400184c	            0xd1ff	                              sar edi, 1	       187	state.c	FUNCTION_13	WHILE_1
0x400184e	          0x8d47ff	                      lea eax, [rdi - 1]	       187	state.c	FUNCTION_13	WHILE_1
0x4001851	          0x8d7aff	                      lea edi, [rdx - 1]	       187	state.c	FUNCTION_13	WHILE_1
0x4001854	          0x4963d4	                        movsxd rdx, r12d	       187	state.c	FUNCTION_13	WHILE_1
0x4001857	        0xf6049101	              test byte [rcx + rdx*4], 1	       187	state.c	FUNCTION_13	WHILE_1
0x400185b	           0xf45f8	                         cmovne edi, eax	       187	state.c	FUNCTION_13	WHILE_1
0x400185e	            0x89e8	                            mov eax, ebp	       422	state.c	FUNCTION_16
0x4001860	            0x39c7	                            cmp edi, eax	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x4001862	     0xf8e71feffff	                           jle 0x40016d9	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x4001868	          0x83c001	                              add eax, 1	       192	state.c	FUNCTION_13	WHILE_1	IF_1
0x400186b	        0x488b7350	            mov rsi, qword [rbx + 0x50] 	       170	state.c	FUNCTION_11
0x400186f	          0x4589c1	                            mov r9d, r8d	       187	state.c	FUNCTION_13	WHILE_1
0x4001872	            0x89c2	                            mov edx, eax	       170	state.c	FUNCTION_11
0x4001874	            0x89c1	                            mov ecx, eax	       187	state.c	FUNCTION_13	WHILE_1
0x4001876	          0x894334	             mov dword [rbx + 0x34], eax	       192	state.c	FUNCTION_13	WHILE_1	IF_1
0x4001879	          0xc1fa03	                              sar edx, 3	       170	state.c	FUNCTION_11
0x400187c	          0x83e107	                              and ecx, 7	       187	state.c	FUNCTION_13	WHILE_1
0x400187f	          0x4863d2	                         movsxd rdx, edx	       170	state.c	FUNCTION_11
0x4001882	          0x41d3e1	                             shl r9d, cl	       187	state.c	FUNCTION_13	WHILE_1
0x4001885	        0x44840c16	              test byte [rsi + rdx], r9b	       187	state.c	FUNCTION_13	WHILE_1
0x4001889	            0x74d5	                            je 0x4001860	       187	state.c	FUNCTION_13	WHILE_1
0x400188b	      0xe949feffff	                           jmp 0x40016d9	       187	state.c	FUNCTION_13	WHILE_1
0x4001890	          0x8b4640	            mov eax, dword [rsi + 0x40] 	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4001893	            0x85c0	                           test eax, eax	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4001895	     0xf888d000000	                            js 0x4001928	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x400189b	          0x8d50ff	                      lea edx, [rax - 1]	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x400189e	          0x4139d4	                           cmp r12d, edx	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x40018a1	     0xf8490000000	                            je 0x4001937	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x40018a7	          0x8b4628	            mov eax, dword [rsi + 0x28] 	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x40018aa	          0x8d50ff	                      lea edx, [rax - 1]	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x40018ad	          0x4139d4	                           cmp r12d, edx	       138	state.c	FUNCTION_7	ELSE_1	IF_2
0x40018b0	            0x7d08	                           jge 0x40018ba	       138	state.c	FUNCTION_7	ELSE_1	IF_2
0x40018b2	      0x418d442401	                      lea eax, [r12 + 1]	       139	state.c	FUNCTION_7	ELSE_1	IF_2
0x40018b7	          0x894330	             mov dword [rbx + 0x30], eax	       139	state.c	FUNCTION_7	ELSE_1	IF_2
0x40018ba	    0xf68394000000	           test byte [rbx + 0x94], 0x10 	       443	state.c	FUNCTION_16	SWITCH_1	IF_3
0x40018c1	     0xf8509feffff	                           jne 0x40016d0	       443	state.c	FUNCTION_16	SWITCH_1	IF_3
0x40018c7	          0x8b4334	            mov eax, dword [rbx + 0x34] 	       443	state.c	FUNCTION_16	SWITCH_1	IF_3
0x40018ca	      0xe90afeffff	                           jmp 0x40016d9	       443	state.c	FUNCTION_16	SWITCH_1	IF_3
0x40018cf	              0x90	                                     nop	       443	state.c	FUNCTION_16	SWITCH_1	IF_3
0x40018d0	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       495	state.c	FUNCTION_16	SWITCH_1	IF_6
0x40018d4	          0x4885c0	                           test rax, rax	       495	state.c	FUNCTION_16	SWITCH_1	IF_6
0x40018d7	     0xf8474010000	                            je 0x4001a51	       495	state.c	FUNCTION_16	SWITCH_1	IF_6
0x40018dd	        0x488b5008	                mov rdx, qword [rax + 8]	       495	state.c	FUNCTION_16	SWITCH_1	IF_6
0x40018e1	            0x31c0	                            xor eax, eax	       499	state.c	FUNCTION_16	SWITCH_1
0x40018e3	          0x4885d2	                           test rdx, rdx	       495	state.c	FUNCTION_16	SWITCH_1	IF_6
0x40018e6	     0xf8430feffff	                            je 0x400171c	       495	state.c	FUNCTION_16	SWITCH_1	IF_6
0x40018ec	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	       496	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x40018f0	        0x400fb6ff	                          movzx edi, dil	       496	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x40018f4	            0xffd2	                                call rdx	       496	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x40018f6	            0x85c0	                           test eax, eax	       497	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x40018f8	           0xf95c0	                                setne al	       497	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x40018fb	           0xfb6c0	                           movzx eax, al	       497	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x40018fe	      0xe919feffff	                           jmp 0x400171c	       497	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x4001903	       0xf1f440000	                   nop dword [rax + rax]	       497	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x4001908	          0x8b4628	            mov eax, dword [rsi + 0x28] 	       497	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x400190b	          0x8d50ff	                      lea edx, [rax - 1]	       497	state.c	FUNCTION_16	SWITCH_1	IF_6	IF_7
0x400190e	          0x4139d4	                           cmp r12d, edx	       138	state.c	FUNCTION_7	ELSE_1	IF_2
0x4001911	     0xf8db9fdffff	                           jge 0x40016d0	       138	state.c	FUNCTION_7	ELSE_1	IF_2
0x4001917	      0x418d442401	                      lea eax, [r12 + 1]	       139	state.c	FUNCTION_7	ELSE_1	IF_2
0x400191c	          0x894330	             mov dword [rbx + 0x30], eax	       139	state.c	FUNCTION_7	ELSE_1	IF_2
0x400191f	      0xe9acfdffff	                           jmp 0x40016d0	       139	state.c	FUNCTION_7	ELSE_1	IF_2
0x4001924	         0xf1f4000	                         nop dword [rax]	       139	state.c	FUNCTION_7	ELSE_1	IF_2
0x4001928	          0x8b4628	            mov eax, dword [rsi + 0x28] 	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x400192b	          0x8d50ff	                      lea edx, [rax - 1]	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x400192e	          0x4139d4	                           cmp r12d, edx	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4001931	     0xf8576ffffff	                           jne 0x40018ad	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4001937	          0x8b733c	            mov esi, dword [rbx + 0x3c] 	       131	state.c	FUNCTION_7	IF_1
0x400193a	        0x48c1e020	                           shl rax, 0x20	       132	state.c	FUNCTION_7	IF_1	CALL_2
0x400193e	          0x4809c6	                             or rsi, rax	       132	state.c	FUNCTION_7	IF_1	CALL_2
0x4001941	    0xf68395000000	           test byte [rbx + 0x95], 0x10 	       133	state.c	FUNCTION_7	IF_1	CALL_3
0x4001948	     0xf84e8000000	                            je 0x4001a36	       133	state.c	FUNCTION_7	IF_1	CALL_3
0x400194e	          0x8b4348	            mov eax, dword [rbx + 0x48] 	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x4001951	          0x8b5344	            mov edx, dword [rbx + 0x44] 	       133	state.c	FUNCTION_7	IF_1	CALL_3
0x4001954	            0x85c0	                           test eax, eax	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x4001956	     0xf88dc000000	                            js 0x4001a38	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x400195c	        0x48c1e020	                           shl rax, 0x20	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x4001960	          0x4531c0	                            xor r8d, r8d	       136	state.c	FUNCTION_7	IF_1	CALL_5
0x4001963	      0xb901000000	                              mov ecx, 1	       136	state.c	FUNCTION_7	IF_1	CALL_5
0x4001968	          0x4809c2	                             or rdx, rax	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x400196b	          0x4889df	                            mov rdi, rbx	       136	state.c	FUNCTION_7	IF_1	CALL_5
0x400196e	      0xe8ade7ffff	                         call sym.scroll	       136	state.c	FUNCTION_7	IF_1	CALL_5
0x4001973	      0xe942ffffff	                           jmp 0x40018ba	       136	state.c	FUNCTION_7	IF_1	CALL_5
0x4001978	     0xf1f84000000	                   nop dword [rax + rax]	       136	state.c	FUNCTION_7	IF_1	CALL_5
0x4001980	          0x8b4628	            mov eax, dword [rsi + 0x28] 	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4001983	          0x8d50ff	                      lea edx, [rax - 1]	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4001986	          0x4139d4	                           cmp r12d, edx	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4001989	     0xf85defdffff	                           jne 0x400176d	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x400198f	          0x8b733c	            mov esi, dword [rbx + 0x3c] 	       131	state.c	FUNCTION_7	IF_1
0x4001992	        0x48c1e020	                           shl rax, 0x20	       132	state.c	FUNCTION_7	IF_1	CALL_2
0x4001996	          0x4809c6	                             or rsi, rax	       132	state.c	FUNCTION_7	IF_1	CALL_2
0x4001999	    0xf68395000000	           test byte [rbx + 0x95], 0x10 	       133	state.c	FUNCTION_7	IF_1	CALL_3
0x40019a0	     0xf8486000000	                            je 0x4001a2c	       133	state.c	FUNCTION_7	IF_1	CALL_3
0x40019a6	          0x8b4348	            mov eax, dword [rbx + 0x48] 	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x40019a9	          0x8b5344	            mov edx, dword [rbx + 0x44] 	       133	state.c	FUNCTION_7	IF_1	CALL_3
0x40019ac	            0x85c0	                           test eax, eax	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x40019ae	            0x787e	                            js 0x4001a2e	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x40019b0	        0x48c1e020	                           shl rax, 0x20	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x40019b4	          0x4531c0	                            xor r8d, r8d	       136	state.c	FUNCTION_7	IF_1	CALL_5
0x40019b7	      0xb901000000	                              mov ecx, 1	       136	state.c	FUNCTION_7	IF_1	CALL_5
0x40019bc	          0x4809c2	                             or rdx, rax	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x40019bf	          0x4889df	                            mov rdi, rbx	       136	state.c	FUNCTION_7	IF_1	CALL_5
0x40019c2	      0xe859e7ffff	                         call sym.scroll	       136	state.c	FUNCTION_7	IF_1	CALL_5
0x40019c7	      0xe9fbfeffff	                           jmp 0x40018c7	       136	state.c	FUNCTION_7	IF_1	CALL_5
0x40019cc	         0xf1f4000	                         nop dword [rax]	       136	state.c	FUNCTION_7	IF_1	CALL_5
0x40019d0	          0x8b4340	            mov eax, dword [rbx + 0x40] 	       476	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_6
0x40019d3	          0x4489e6	                           mov esi, r12d	       475	state.c	FUNCTION_16	SWITCH_1	IF_4
0x40019d6	            0x85c0	                           test eax, eax	       476	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_6
0x40019d8	            0x787e	                            js 0x4001a58	       476	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_6
0x40019da	        0x48c1e020	                           shl rax, 0x20	       476	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_6
0x40019de	          0x4809c6	                             or rsi, rax	       476	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_6
0x40019e1	    0xf68395000000	           test byte [rbx + 0x95], 0x10 	       477	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_7
0x40019e8	            0x7460	                            je 0x4001a4a	       477	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_7
0x40019ea	          0x8b4348	            mov eax, dword [rbx + 0x48] 	       478	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_8
0x40019ed	          0x8b5344	            mov edx, dword [rbx + 0x44] 	       477	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_7
0x40019f0	            0x85c0	                           test eax, eax	       478	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_8
0x40019f2	            0x7858	                            js 0x4001a4c	       478	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_8
0x40019f4	        0x48c1e020	                           shl rax, 0x20	       478	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_8
0x40019f8	          0x4531c0	                            xor r8d, r8d	       480	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_9
0x40019fb	      0xb9ffffffff	                     mov ecx, 0xffffffff	       480	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_9
0x4001a00	          0x4809c2	                             or rdx, rax	       478	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_8
0x4001a03	          0x4889df	                            mov rdi, rbx	       480	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_9
0x4001a06	      0xe815e7ffff	                         call sym.scroll	       480	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_9
0x4001a0b	          0x8b4334	            mov eax, dword [rbx + 0x34] 	       480	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_9
0x4001a0e	      0xe9c6fcffff	                           jmp 0x40016d9	       480	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_9
0x4001a13	       0xf1f440000	                   nop dword [rax + rax]	       480	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_9
0x4001a18	          0x8b4628	            mov eax, dword [rsi + 0x28] 	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4001a1b	          0x8d50ff	                      lea edx, [rax - 1]	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4001a1e	          0x4139d4	                           cmp r12d, edx	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4001a21	     0xf85e7feffff	                           jne 0x400190e	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4001a27	      0xe963fcffff	                           jmp 0x400168f	       129	state.c	FUNCTION_7	IF_1	CALL_1
0x4001a2c	            0x31d2	                            xor edx, edx	       133	state.c	FUNCTION_7	IF_1	CALL_3
0x4001a2e	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x4001a31	      0xe97affffff	                           jmp 0x40019b0	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x4001a36	            0x31d2	                            xor edx, edx	       133	state.c	FUNCTION_7	IF_1	CALL_3
0x4001a38	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x4001a3b	      0xe91cffffff	                           jmp 0x400195c	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x4001a40	            0x31d2	                            xor edx, edx	       133	state.c	FUNCTION_7	IF_1	CALL_3
0x4001a42	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x4001a45	      0xe96afcffff	                           jmp 0x40016b4	       134	state.c	FUNCTION_7	IF_1	CALL_4
0x4001a4a	            0x31d2	                            xor edx, edx	       477	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_7
0x4001a4c	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	       478	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_8
0x4001a4f	            0xeba3	                           jmp 0x40019f4	       478	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_8
0x4001a51	            0x31c0	                            xor eax, eax	       499	state.c	FUNCTION_16	SWITCH_1
0x4001a53	      0xe9c4fcffff	                           jmp 0x400171c	       499	state.c	FUNCTION_16	SWITCH_1
0x4001a58	          0x8b4328	            mov eax, dword [rbx + 0x28] 	       476	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_6
0x4001a5b	      0xe97affffff	                           jmp 0x40019da	       476	state.c	FUNCTION_16	SWITCH_1	IF_4	CALL_6
vterm_state_get_lineinfo	functions,0:WHILE,0:DO,0:ELSE,0:FOR,0:IF,0:SWITCH,0:CALL,0	4
0x4004bb0	        0x488b4758	            mov rax, qword [rdi + 0x58] 	      1916	state.c	FUNCTION_41
0x4004bb4	          0x4863f6	                         movsxd rsi, esi	      1916	state.c	FUNCTION_41
0x4004bb7	        0x488d04b0	                  lea rax, [rax + rsi*4]	      1916	state.c	FUNCTION_41
0x4004bbb	              0xc3	                                     ret	      1917	state.c	FUNCTION_41
vterm_state_get_mousestate	functions,0:WHILE,0:DO,0:ELSE,0:FOR,0:IF,0:SWITCH,0:CALL,0	9
0x4002990	          0x8b4760	            mov eax, dword [rdi + 0x60] 	      1807	state.c	FUNCTION_33
0x4002993	          0x894604	                mov dword [rsi + 4], eax	      1807	state.c	FUNCTION_33
0x4002996	          0x8b4764	            mov eax, dword [rdi + 0x64] 	      1808	state.c	FUNCTION_33
0x4002999	            0x8906	                    mov dword [rsi], eax	      1808	state.c	FUNCTION_33
0x400299b	          0x8b4768	            mov eax, dword [rdi + 0x68] 	      1809	state.c	FUNCTION_33
0x400299e	          0x894608	                mov dword [rsi + 8], eax	      1809	state.c	FUNCTION_33
0x40029a1	          0x8b476c	            mov eax, dword [rdi + 0x6c] 	      1810	state.c	FUNCTION_33
0x40029a4	          0x89460c	              mov dword [rsi + 0xc], eax	      1810	state.c	FUNCTION_33
0x40029a7	              0xc3	                                     ret	      1810	state.c	FUNCTION_33
vterm_state_free	functions,0:WHILE,0:DO,0:ELSE,0:FOR,0:IF,0:SWITCH,0:CALL,4	15
0x40020b0	              0x53	                                push rbx	        78	state.c	FUNCTION_5
0x40020b1	          0x4889fb	                            mov rbx, rdi	        78	state.c	FUNCTION_5
0x40020b4	        0x488b7750	            mov rsi, qword [rdi + 0x50] 	        79	state.c	FUNCTION_5	CALL_1
0x40020b8	          0x488b3f	                    mov rdi, qword [rdi]	        79	state.c	FUNCTION_5	CALL_1
0x40020bb	      0xe800000000	                          call 0x40020c0	        79	state.c	FUNCTION_5	CALL_1
0x40020c0	        0x488b7358	            mov rsi, qword [rbx + 0x58] 	        80	state.c	FUNCTION_5	CALL_2
0x40020c4	          0x488b3b	                    mov rdi, qword [rbx]	        80	state.c	FUNCTION_5	CALL_2
0x40020c7	      0xe800000000	                          call 0x40020cc	        80	state.c	FUNCTION_5	CALL_2
0x40020cc	        0x488b7378	            mov rsi, qword [rbx + 0x78] 	        81	state.c	FUNCTION_5	CALL_3
0x40020d0	          0x488b3b	                    mov rdi, qword [rbx]	        81	state.c	FUNCTION_5	CALL_3
0x40020d3	      0xe800000000	                          call 0x40020d8	        81	state.c	FUNCTION_5	CALL_3
0x40020d8	          0x4889de	                            mov rsi, rbx	        82	state.c	FUNCTION_5	CALL_4
0x40020db	          0x488b3b	                    mov rdi, qword [rbx]	        82	state.c	FUNCTION_5	CALL_4
0x40020de	              0x5b	                                 pop rbx	        83	state.c	FUNCTION_5
0x40020df	      0xe900000000	                           jmp 0x40020e4	        82	state.c	FUNCTION_5	CALL_4
vterm_state_focus_out	functions,0:WHILE,0:DO,0:ELSE,0:FOR,0:IF,1:SWITCH,0:CALL,1	9
0x4004b80	    0xf68795000000	           test byte [rdi + 0x95], 0x40 	      1910	state.c	FUNCTION_40	IF_1
0x4004b87	            0x7507	                           jne 0x4004b90	      1910	state.c	FUNCTION_40	IF_1
0x4004b89	            0xf3c3	                                     ret	      1910	state.c	FUNCTION_40	IF_1
0x4004b8b	       0xf1f440000	                   nop dword [rax + rax]	      1910	state.c	FUNCTION_40	IF_1
0x4004b90	          0x488b3f	                    mov rdi, qword [rdi]	      1911	state.c	FUNCTION_40	CALL_1
0x4004b93	      0xba00000000	                              mov edx, 0	      1911	state.c	FUNCTION_40	CALL_1
0x4004b98	      0xbe9b000000	                           mov esi, 0x9b	      1911	state.c	FUNCTION_40	CALL_1
0x4004b9d	            0x31c0	                            xor eax, eax	      1911	state.c	FUNCTION_40	CALL_1
0x4004b9f	      0xe900000000	                           jmp 0x4004ba4	      1911	state.c	FUNCTION_40	CALL_1
vterm_state_get_unrecognised_fbdata	functions,0:WHILE,0:DO,0:ELSE,0:FOR,0:IF,0:SWITCH,0:CALL,0	2
0x4002a20	        0x488b4720	            mov rax, qword [rdi + 0x20] 	      1847	state.c	FUNCTION_37
0x4002a24	              0xc3	                                     ret	      1848	state.c	FUNCTION_37
scroll	functions,0:WHILE,0:DO,0:ELSE,3:FOR,0:IF,10:SWITCH,0:CALL,4	104
0x4000120	            0x89c8	                            mov eax, ecx	        89	state.c	FUNCTION_6	IF_1
0x4000122	          0x4409c0	                             or eax, r8d	        89	state.c	FUNCTION_6	IF_1
0x4000125	     0xf84e9000000	                            je 0x4000214	        89	state.c	FUNCTION_6	IF_1
0x400012b	          0x4889f0	                            mov rax, rsi	        89	state.c	FUNCTION_6	IF_1
0x400012e	            0x4156	                                push r14	        86	state.c	FUNCTION_6
0x4000130	            0x4155	                                push r13	        86	state.c	FUNCTION_6
0x4000132	        0x48c1f820	                           sar rax, 0x20	        86	state.c	FUNCTION_6
0x4000136	            0x4154	                                push r12	        86	state.c	FUNCTION_6
0x4000138	              0x55	                                push rbp	        86	state.c	FUNCTION_6
0x4000139	            0x29f0	                            sub eax, esi	        92	state.c	FUNCTION_6
0x400013b	              0x53	                                push rbx	        86	state.c	FUNCTION_6
0x400013c	            0x39c1	                            cmp ecx, eax	        93	state.c	FUNCTION_6	IF_2
0x400013e	          0x4189c4	                           mov r12d, eax	        93	state.c	FUNCTION_6	IF_2
0x4000141	     0xf8ed9000000	                           jle 0x4000220	        93	state.c	FUNCTION_6	IF_2
0x4000147	          0x4889d1	                            mov rcx, rdx	        93	state.c	FUNCTION_6	IF_2
0x400014a	        0x48c1f920	                           sar rcx, 0x20	        93	state.c	FUNCTION_6	IF_2
0x400014e	          0x4189cd	                           mov r13d, ecx	        98	state.c	FUNCTION_6
0x4000151	          0x4129d5	                           sub r13d, edx	        98	state.c	FUNCTION_6
0x4000154	          0x4539e8	                           cmp r8d, r13d	        99	state.c	FUNCTION_6	IF_4
0x4000157	     0xf8ed3000000	                           jle 0x4000230	        99	state.c	FUNCTION_6	IF_4
0x400015d	            0x85d2	                           test edx, edx	       105	state.c	FUNCTION_6	IF_6
0x400015f	          0x4989d6	                            mov r14, rdx	       105	state.c	FUNCTION_6	IF_6
0x4000162	          0x4889f3	                            mov rbx, rsi	       105	state.c	FUNCTION_6	IF_6
0x4000165	          0x4889fd	                            mov rbp, rdi	       105	state.c	FUNCTION_6	IF_6
0x4000168	            0x754e	                           jne 0x40001b8	       105	state.c	FUNCTION_6	IF_6
0x400016a	          0x394f2c	            cmp dword [rdi + 0x2c], ecx 	       105	state.c	FUNCTION_6	IF_6
0x400016d	            0x7549	                           jne 0x40001b8	       105	state.c	FUNCTION_6	IF_6
0x400016f	          0x4585ed	                         test r13d, r13d	       105	state.c	FUNCTION_6	IF_6
0x4000172	            0x7544	                           jne 0x40001b8	       105	state.c	FUNCTION_6	IF_6
0x4000174	          0x4489e1	                           mov ecx, r12d	       106	state.c	FUNCTION_6	IF_6	CALL_1
0x4000177	        0x488b7f58	            mov rdi, qword [rdi + 0x58] 	       110	state.c	FUNCTION_6	IF_6	IF_7
0x400017b	          0xc1f91f	                           sar ecx, 0x1f	       106	state.c	FUNCTION_6	IF_6	CALL_1
0x400017e	            0x89ca	                            mov edx, ecx	       106	state.c	FUNCTION_6	IF_6	CALL_1
0x4000180	          0x4431e2	                           xor edx, r12d	       106	state.c	FUNCTION_6	IF_6	CALL_1
0x4000183	            0x29ca	                            sub edx, ecx	       106	state.c	FUNCTION_6	IF_6	CALL_1
0x4000185	          0x4863ce	                         movsxd rcx, esi	       110	state.c	FUNCTION_6	IF_6	IF_7
0x4000188	            0x29d0	                            sub eax, edx	       106	state.c	FUNCTION_6	IF_6	CALL_1
0x400018a	          0x4585e4	                         test r12d, r12d	       108	state.c	FUNCTION_6	IF_6	IF_7
0x400018d	            0x4898	                                    cdqe	        59	string3.h	FUNCTION_43	CALL_3
0x400018f	    0x488d14850000	                        lea rdx, [rax*4]	        59	string3.h	FUNCTION_43	CALL_3
0x4000197	     0xf8eb3000000	                           jle 0x4000250	       108	state.c	FUNCTION_6	IF_6	IF_7
0x400019d	          0x4963f4	                        movsxd rsi, r12d	        59	string3.h	FUNCTION_43	CALL_3
0x40001a0	          0x4889c8	                            mov rax, rcx	        59	string3.h	FUNCTION_43	CALL_3
0x40001a3	        0x488d0c0e	                    lea rcx, [rsi + rcx]	        59	string3.h	FUNCTION_43	CALL_3
0x40001a7	        0x488d348f	                  lea rsi, [rdi + rcx*4]	        59	string3.h	FUNCTION_43	CALL_3
0x40001ab	        0x488d3c87	                  lea rdi, [rdi + rax*4]	        59	string3.h	FUNCTION_43	CALL_3
0x40001af	      0xe800000000	                          call 0x40001b4	        59	string3.h	FUNCTION_43	CALL_3
0x40001b4	         0xf1f4000	                         nop dword [rax]	        59	string3.h	FUNCTION_43	CALL_3
0x40001b8	        0x488b4508	                mov rax, qword [rbp + 8]	       118	state.c	FUNCTION_6	IF_8
0x40001bc	          0x4885c0	                           test rax, rax	       118	state.c	FUNCTION_6	IF_8
0x40001bf	            0x744b	                            je 0x400020c	       118	state.c	FUNCTION_6	IF_8
0x40001c1	        0x4c8b4810	              mov r9, qword [rax + 0x10]	       118	state.c	FUNCTION_6	IF_8
0x40001c5	          0x4d85c9	                             test r9, r9	       118	state.c	FUNCTION_6	IF_8
0x40001c8	            0x7420	                            je 0x40001ea	       118	state.c	FUNCTION_6	IF_8
0x40001ca	        0x4c8b4510	              mov r8, qword [rbp + 0x10]	       119	state.c	FUNCTION_6	IF_8	IF_9
0x40001ce	          0x4489e9	                           mov ecx, r13d	       119	state.c	FUNCTION_6	IF_8	IF_9
0x40001d1	          0x4489e2	                           mov edx, r12d	       119	state.c	FUNCTION_6	IF_8	IF_9
0x40001d4	          0x4889df	                            mov rdi, rbx	       119	state.c	FUNCTION_6	IF_8	IF_9
0x40001d7	          0x4c89f6	                            mov rsi, r14	       119	state.c	FUNCTION_6	IF_8	IF_9
0x40001da	          0x41ffd1	                                 call r9	       119	state.c	FUNCTION_6	IF_8	IF_9
0x40001dd	            0x85c0	                           test eax, eax	       119	state.c	FUNCTION_6	IF_8	IF_9
0x40001df	            0x752b	                           jne 0x400020c	       119	state.c	FUNCTION_6	IF_8	IF_9
0x40001e1	        0x488b4508	                mov rax, qword [rbp + 8]	       122	state.c	FUNCTION_6	IF_10
0x40001e5	          0x4885c0	                           test rax, rax	       122	state.c	FUNCTION_6	IF_10
0x40001e8	            0x7422	                            je 0x400020c	       122	state.c	FUNCTION_6	IF_10
0x40001ea	        0x4883ec08	                              sub rsp, 8	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x40001ee	          0xff7510	                 push qword [rbp + 0x10]	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x40001f1	        0x4c8b4820	              mov r9, qword [rax + 0x20]	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x40001f5	        0x4c8b4018	              mov r8, qword [rax + 0x18]	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x40001f9	          0x4489e2	                           mov edx, r12d	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x40001fc	          0x4489e9	                           mov ecx, r13d	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x40001ff	          0x4889df	                            mov rdi, rbx	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x4000202	          0x4c89f6	                            mov rsi, r14	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x4000205	      0xe800000000	                          call 0x400020a	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x400020a	              0x58	                                 pop rax	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x400020b	              0x5a	                                 pop rdx	       123	state.c	FUNCTION_6	IF_10	CALL_4
0x400020c	              0x5b	                                 pop rbx	       125	state.c	FUNCTION_6
0x400020d	              0x5d	                                 pop rbp	       125	state.c	FUNCTION_6
0x400020e	            0x415c	                                 pop r12	       125	state.c	FUNCTION_6
0x4000210	            0x415d	                                 pop r13	       125	state.c	FUNCTION_6
0x4000212	            0x415e	                                 pop r14	       125	state.c	FUNCTION_6
0x4000214	            0xf3c3	                                     ret	       125	state.c	FUNCTION_6
0x4000216	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       125	state.c	FUNCTION_6
0x4000220	          0x41f7dc	                                neg r12d	        95	state.c	FUNCTION_6	ELSE_1	IF_3
0x4000223	          0x4439e1	                           cmp ecx, r12d	        95	state.c	FUNCTION_6	ELSE_1	IF_3
0x4000226	        0x440f4de1	                        cmovge r12d, ecx	        95	state.c	FUNCTION_6	ELSE_1	IF_3
0x400022a	      0xe918ffffff	                           jmp 0x4000147	        95	state.c	FUNCTION_6	ELSE_1	IF_3
0x400022f	              0x90	                                     nop	        95	state.c	FUNCTION_6	ELSE_1	IF_3
0x4000230	          0x41f7dd	                                neg r13d	       101	state.c	FUNCTION_6	ELSE_2	IF_5
0x4000233	          0x4989d6	                            mov r14, rdx	       101	state.c	FUNCTION_6	ELSE_2	IF_5
0x4000236	          0x4889f3	                            mov rbx, rsi	       101	state.c	FUNCTION_6	ELSE_2	IF_5
0x4000239	          0x4539e8	                           cmp r8d, r13d	       101	state.c	FUNCTION_6	ELSE_2	IF_5
0x400023c	          0x4889fd	                            mov rbp, rdi	       101	state.c	FUNCTION_6	ELSE_2	IF_5
0x400023f	        0x450f4de8	                        cmovge r13d, r8d	       101	state.c	FUNCTION_6	ELSE_2	IF_5
0x4000243	            0x85d2	                           test edx, edx	       105	state.c	FUNCTION_6	IF_6
0x4000245	     0xf856dffffff	                           jne 0x40001b8	       105	state.c	FUNCTION_6	IF_6
0x400024b	      0xe91affffff	                           jmp 0x400016a	       105	state.c	FUNCTION_6	IF_6
0x4000250	        0x488d348f	                  lea rsi, [rdi + rcx*4]	        59	string3.h	FUNCTION_43	CALL_3
0x4000254	          0x4889c8	                            mov rax, rcx	        59	string3.h	FUNCTION_43	CALL_3
0x4000257	          0x4963cc	                        movsxd rcx, r12d	        59	string3.h	FUNCTION_43	CALL_3
0x400025a	          0x4829c8	                            sub rax, rcx	        59	string3.h	FUNCTION_43	CALL_3
0x400025d	        0x488d3c87	                  lea rdi, [rdi + rax*4]	        59	string3.h	FUNCTION_43	CALL_3
0x4000261	      0xe800000000	                          call 0x4000266	        59	string3.h	FUNCTION_43	CALL_3
0x4000266	      0xe94dffffff	                           jmp 0x40001b8	        59	string3.h	FUNCTION_43	CALL_3
on_csi	functions,0:WHILE,0:DO,0:ELSE,5:FOR,4:IF,36:SWITCH,10:CALL,150	1903
0x4002be0	            0x4157	                                push r15	       901	state.c	FUNCTION_25
0x4002be2	            0x4156	                                push r14	       901	state.c	FUNCTION_25
0x4002be4	            0x4155	                                push r13	       901	state.c	FUNCTION_25
0x4002be6	            0x4154	                                push r12	       901	state.c	FUNCTION_25
0x4002be8	              0x55	                                push rbp	       901	state.c	FUNCTION_25
0x4002be9	              0x53	                                push rbx	       901	state.c	FUNCTION_25
0x4002bea	          0x4c89cb	                             mov rbx, r9	       901	state.c	FUNCTION_25
0x4002bed	        0x4883ec78	                           sub rsp, 0x78	       901	state.c	FUNCTION_25
0x4002bf1	    0x64488b042528	                mov rax, qword fs:[0x28]	       901	state.c	FUNCTION_25
0x4002bfa	      0x4889442468	             mov qword [rsp + 0x68], rax	       901	state.c	FUNCTION_25
0x4002bff	            0x31c0	                            xor eax, eax	       901	state.c	FUNCTION_25
0x4002c01	          0x4885ff	                           test rdi, rdi	       913	state.c	FUNCTION_25	IF_1
0x4002c04	            0x740d	                            je 0x4002c13	       913	state.c	FUNCTION_25	IF_1
0x4002c06	        0x440fb60f	                   movzx r9d, byte [rdi]	       913	state.c	FUNCTION_25	IF_1
0x4002c0a	          0x4584c9	                           test r9b, r9b	       913	state.c	FUNCTION_25	IF_1
0x4002c0d	     0xf85bd010000	                           jne 0x4002dd0	       913	state.c	FUNCTION_25	IF_1
0x4002c13	          0x4531db	                          xor r11d, r11d	       903	state.c	FUNCTION_25
0x4002c16	          0x4885c9	                           test rcx, rcx	       927	state.c	FUNCTION_25	IF_3
0x4002c19	            0x740b	                            je 0x4002c26	       927	state.c	FUNCTION_25	IF_3
0x4002c1b	           0xfbe01	                   movsx eax, byte [rcx]	       927	state.c	FUNCTION_25	IF_3
0x4002c1e	            0x84c0	                             test al, al	       927	state.c	FUNCTION_25	IF_3
0x4002c20	     0xf85ca010000	                           jne 0x4002df0	       927	state.c	FUNCTION_25	IF_3
0x4002c26	          0x4531c9	                            xor r9d, r9d	       927	state.c	FUNCTION_25	IF_3
0x4002c29	          0x4489d8	                           mov eax, r11d	       951	state.c	FUNCTION_25	SWITCH_3
0x4002c2c	        0x450fbec0	                          movsx r8d, r8b	       951	state.c	FUNCTION_25	SWITCH_3
0x4002c30	        0x448b7330	           mov r14d, dword [rbx + 0x30] 	       943	state.c	FUNCTION_25
0x4002c34	          0xc1e008	                              shl eax, 8	       951	state.c	FUNCTION_25	SWITCH_3
0x4002c37	          0x8b6b34	            mov ebp, dword [rbx + 0x34] 	       943	state.c	FUNCTION_25
0x4002c3a	          0x4409c0	                             or eax, r8d	       951	state.c	FUNCTION_25	SWITCH_3
0x4002c3d	          0x4409c8	                             or eax, r9d	       951	state.c	FUNCTION_25	SWITCH_3
0x4002c40	          0x83f865	                           cmp eax, 0x65	       951	state.c	FUNCTION_25	SWITCH_3
0x4002c43	     0xf84b7040000	                            je 0x4003100	       951	state.c	FUNCTION_25	SWITCH_3
0x4002c49	     0xf8f01020000	                            jg 0x4002e50	       951	state.c	FUNCTION_25	SWITCH_3
0x4002c4f	          0x83f84b	                           cmp eax, 0x4b	       951	state.c	FUNCTION_25	SWITCH_3
0x4002c52	     0xf84380e0000	                            je 0x4003a90	       951	state.c	FUNCTION_25	SWITCH_3
0x4002c58	     0xf8ea2020000	                           jle 0x4002f00	       951	state.c	FUNCTION_25	SWITCH_3
0x4002c5e	          0x83f858	                           cmp eax, 0x58	       951	state.c	FUNCTION_25	SWITCH_3
0x4002c61	     0xf84610d0000	                            je 0x40039c8	       951	state.c	FUNCTION_25	SWITCH_3
0x4002c67	     0xf8f8b030000	                            jg 0x4002ff8	       951	state.c	FUNCTION_25	SWITCH_3
0x4002c6d	          0x83f850	                           cmp eax, 0x50	       951	state.c	FUNCTION_25	SWITCH_3
0x4002c70	     0xf841a050000	                            je 0x4003190	       951	state.c	FUNCTION_25	SWITCH_3
0x4002c76	     0xf8f8c080000	                            jg 0x4003508	       951	state.c	FUNCTION_25	SWITCH_3
0x4002c7c	          0x83f84c	                           cmp eax, 0x4c	       951	state.c	FUNCTION_25	SWITCH_3
0x4002c7f	     0xf84ab0b0000	                            je 0x4003830	       951	state.c	FUNCTION_25	SWITCH_3
0x4002c85	          0x83f84d	                           cmp eax, 0x4d	       951	state.c	FUNCTION_25	SWITCH_3
0x4002c88	     0xf85cb070000	                           jne 0x4003459	       951	state.c	FUNCTION_25	SWITCH_3
0x4002c8e	          0x488b0e	                    mov rcx, qword [rsi]	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x4002c91	    0x81e1ffffff7f	                     and ecx, 0x7fffffff	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x4002c97	    0x4881f9ffffff	                     cmp rcx, 0x3fffffff	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x4002c9e	     0xf84a7170000	                            je 0x400444b	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x4002ca4	          0x4885c9	                           test rcx, rcx	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x4002ca7	     0xf849e170000	                            je 0x400444b	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x4002cad	          0x8b733c	            mov esi, dword [rbx + 0x3c] 	       175	state.c	FUNCTION_12	IF_1
0x4002cb0	          0x4139f6	                           cmp r14d, esi	       175	state.c	FUNCTION_12	IF_1
0x4002cb3	     0xf8c97060000	                            jl 0x4003350	       175	state.c	FUNCTION_12	IF_1
0x4002cb9	        0x448b4b40	            mov r9d, dword [rbx + 0x40] 	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x4002cbd	          0x4585c9	                           test r9d, r9d	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x4002cc0	          0x4489cf	                            mov edi, r9d	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x4002cc3	          0x4489c8	                            mov eax, r9d	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x4002cc6	     0xf88661c0000	                            js 0x4004932	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x4002ccc	          0x4139c6	                           cmp r14d, eax	       175	state.c	FUNCTION_12	IF_1
0x4002ccf	     0xf8d5b0a0000	                           jge 0x4003730	       175	state.c	FUNCTION_12	IF_1
0x4002cd5	     0xfb693950000	           movzx edx, byte [rbx + 0x95] 	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4002cdc	            0x89d6	                            mov esi, edx	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4002cde	            0x89d0	                            mov eax, edx	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4002ce0	          0x83e610	                           and esi, 0x10	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4002ce3	     0xf84e61b0000	                            je 0x40048cf	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4002ce9	          0x3b6b44	            cmp ebp, dword [rbx + 0x44] 	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4002cec	     0xf8cff140000	                            jl 0x40041f1	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4002cf2	          0x8b5348	            mov edx, dword [rbx + 0x48] 	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x4002cf5	            0x85d2	                           test edx, edx	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x4002cf7	     0xf88da1b0000	                            js 0x40048d7	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x4002cfd	            0x39d5	                            cmp ebp, edx	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4002cff	     0xf8d320a0000	                           jge 0x4003737	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4002d05	          0x4585c9	                           test r9d, r9d	      1120	state.c	FUNCTION_25	SWITCH_3	CALL_40
0x4002d08	     0xf88611c0000	                            js 0x400496f	      1120	state.c	FUNCTION_25	SWITCH_3	CALL_40
0x4002d0e	          0x4084f6	                           test sil, sil	      1121	state.c	FUNCTION_25	SWITCH_3	CALL_41
0x4002d11	     0xf8493180000	                            je 0x40045aa	      1121	state.c	FUNCTION_25	SWITCH_3	CALL_41
0x4002d17	          0x8b4348	            mov eax, dword [rbx + 0x48] 	      1122	state.c	FUNCTION_25	SWITCH_3	CALL_42
0x4002d1a	      0x660f6e4b44	          movd xmm1, dword [rbx + 0x44] 	      1121	state.c	FUNCTION_25	SWITCH_3	CALL_41
0x4002d1f	            0x85c0	                           test eax, eax	      1122	state.c	FUNCTION_25	SWITCH_3	CALL_42
0x4002d21	     0xf8887180000	                            js 0x40045ae	      1122	state.c	FUNCTION_25	SWITCH_3	CALL_42
0x4002d27	        0x8944240c	              mov dword [rsp + 0xc], eax	      1122	state.c	FUNCTION_25	SWITCH_3	CALL_42
0x4002d2b	          0x4531c0	                            xor r8d, r8d	      1124	state.c	FUNCTION_25	SWITCH_3	CALL_43
0x4002d2e	    0x660f6e7c240c	           movd xmm7, dword [rsp + 0xc] 	      1124	state.c	FUNCTION_25	SWITCH_3	CALL_43
0x4002d34	      0x448974240c	             mov dword [rsp + 0xc], r14d	      1124	state.c	FUNCTION_25	SWITCH_3	CALL_43
0x4002d39	    0x660f6e44240c	           movd xmm0, dword [rsp + 0xc] 	      1124	state.c	FUNCTION_25	SWITCH_3	CALL_43
0x4002d3f	        0x897c240c	              mov dword [rsp + 0xc], edi	      1124	state.c	FUNCTION_25	SWITCH_3	CALL_43
0x4002d43	    0x660f6e64240c	           movd xmm4, dword [rsp + 0xc] 	      1124	state.c	FUNCTION_25	SWITCH_3	CALL_43
0x4002d49	        0x660f62cf	                    punpckldq xmm1, xmm7	      1124	state.c	FUNCTION_25	SWITCH_3	CALL_43
0x4002d4d	        0x660f62c4	                    punpckldq xmm0, xmm4	      1124	state.c	FUNCTION_25	SWITCH_3	CALL_43
0x4002d51	        0x660f6cc1	                   punpcklqdq xmm0, xmm1	      1124	state.c	FUNCTION_25	SWITCH_3	CALL_43
0x4002d55	       0xf29442430	       movaps xmmword [rsp + 0x30], xmm0	      1124	state.c	FUNCTION_25	SWITCH_3	CALL_43
0x4002d5a	      0x66480f7ec6	                          movq rsi, xmm0	      1124	state.c	FUNCTION_25	SWITCH_3	CALL_43
0x4002d5f	              0x90	                                     nop	      1124	state.c	FUNCTION_25	SWITCH_3	CALL_43
0x4002d60	          0x4889df	                            mov rdi, rbx	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x4002d63	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x4002d68	      0xe8b3d3ffff	                         call sym.scroll	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x4002d6d	     0xfb693950000	           movzx edx, byte [rbx + 0x95] 	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x4002d74	          0x8b4b30	            mov ecx, dword [rbx + 0x30] 	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x4002d77	          0x8b4334	            mov eax, dword [rbx + 0x34] 	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x4002d7a	            0x89d6	                            mov esi, edx	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x4002d7c	          0x83e604	                              and esi, 4	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x4002d7f	          0x4084f6	                           test sil, sil	      1458	state.c	FUNCTION_25	IF_33
0x4002d82	     0xf85ce020000	                           jne 0x4003056	      1458	state.c	FUNCTION_25	IF_33
0x4002d88	            0x85c9	                           test ecx, ecx	      1465	state.c	FUNCTION_25	ELSE_5
0x4002d8a	     0xf8808060000	                            js 0x4003398	      1465	state.c	FUNCTION_25	ELSE_5
0x4002d90	          0x8b5328	            mov edx, dword [rbx + 0x28] 	      1466	state.c	FUNCTION_25	ELSE_5
0x4002d93	            0x39ca	                            cmp edx, ecx	      1466	state.c	FUNCTION_25	ELSE_5
0x4002d95	            0x7f06	                            jg 0x4002d9d	      1466	state.c	FUNCTION_25	ELSE_5
0x4002d97	          0x8d4aff	                      lea ecx, [rdx - 1]	      1466	state.c	FUNCTION_25	ELSE_5
0x4002d9a	          0x894b30	             mov dword [rbx + 0x30], ecx	      1466	state.c	FUNCTION_25	ELSE_5
0x4002d9d	            0x85c0	                           test eax, eax	      1467	state.c	FUNCTION_25	ELSE_5
0x4002d9f	     0xf880b060000	                            js 0x40033b0	      1467	state.c	FUNCTION_25	ELSE_5
0x4002da5	        0x488b5358	            mov rdx, qword [rbx + 0x58] 	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x4002da9	          0x4863c9	                         movsxd rcx, ecx	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x4002dac	        0xf6048a01	              test byte [rdx + rcx*4], 1	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x4002db0	          0x8b532c	            mov edx, dword [rbx + 0x2c] 	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x4002db3	     0xf84e9020000	                            je 0x40030a2	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x4002db9	            0x89d1	                            mov ecx, edx	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x4002dbb	          0xc1e91f	                           shr ecx, 0x1f	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x4002dbe	             0x1ca	                            add edx, ecx	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x4002dc0	            0xd1fa	                              sar edx, 1	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x4002dc2	            0x39c2	                            cmp edx, eax	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x4002dc4	     0xf8edc020000	                           jle 0x40030a6	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x4002dca	      0xe9dd020000	                           jmp 0x40030ac	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x4002dcf	              0x90	                                     nop	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x4002dd0	        0x807f0100	                   cmp byte [rdi + 1], 0	       914	state.c	FUNCTION_25	IF_1	IF_2
0x4002dd4	            0x7552	                           jne 0x4002e28	       914	state.c	FUNCTION_25	IF_1	IF_2
0x4002dd6	        0x458d51c2	                   lea r10d, [r9 - 0x3e]	       917	state.c	FUNCTION_25	IF_1	SWITCH_1
0x4002dda	            0x31c0	                            xor eax, eax	       923	state.c	FUNCTION_25	IF_1	SWITCH_1
0x4002ddc	        0x450fbed9	                         movsx r11d, r9b	       920	state.c	FUNCTION_25	IF_1	SWITCH_1
0x4002de0	        0x4180fa01	                             cmp r10b, 1	       917	state.c	FUNCTION_25	IF_1	SWITCH_1
0x4002de4	     0xf862cfeffff	                           jbe 0x4002c16	       917	state.c	FUNCTION_25	IF_1	SWITCH_1
0x4002dea	            0xeb3e	                           jmp 0x4002e2a	       917	state.c	FUNCTION_25	IF_1	SWITCH_1
0x4002dec	         0xf1f4000	                         nop dword [rax]	       917	state.c	FUNCTION_25	IF_1	SWITCH_1
0x4002df0	        0x80790100	                   cmp byte [rcx + 1], 0	       928	state.c	FUNCTION_25	IF_3	IF_4
0x4002df4	            0x7532	                           jne 0x4002e28	       928	state.c	FUNCTION_25	IF_3	IF_4
0x4002df6	            0x3c27	                            cmp al, 0x27	       928	state.c	FUNCTION_25	IF_3	IF_4
0x4002df8	            0x772e	                            ja 0x4002e28	       928	state.c	FUNCTION_25	IF_3	IF_4
0x4002dfa	    0x49b900000000	                 movabs r9, 0x9500000000	       928	state.c	FUNCTION_25	IF_3	IF_4
0x4002e04	        0x490fa3c1	                              bt r9, rax	       928	state.c	FUNCTION_25	IF_3	IF_4
0x4002e08	            0x731e	                           jae 0x4002e28	       928	state.c	FUNCTION_25	IF_3	IF_4
0x4002e0a	          0xc1e010	                           shl eax, 0x10	       928	state.c	FUNCTION_25	IF_3	IF_4
0x4002e0d	          0x4189c1	                            mov r9d, eax	       928	state.c	FUNCTION_25	IF_3	IF_4
0x4002e10	      0xe914feffff	                           jmp 0x4002c29	       937	state.c	FUNCTION_25	IF_3	SWITCH_2
0x4002e15	            0xa816	                           test al, 0x16	       937	state.c	FUNCTION_25	IF_3	SWITCH_2
0x4002e17	     0xf85c3010000	                           jne 0x4002fe0	       937	state.c	FUNCTION_25	IF_3	SWITCH_2
0x4002e1d	            0x85c9	                           test ecx, ecx	       937	state.c	FUNCTION_25	IF_3	SWITCH_2
0x4002e1f	     0xf84771b0000	                            je 0x400499c	       937	state.c	FUNCTION_25	IF_3	SWITCH_2
0x4002e25	           0xf1f00	                         nop dword [rax]	       937	state.c	FUNCTION_25	IF_3	SWITCH_2
0x4002e28	            0x31c0	                            xor eax, eax	      1090	state.c	FUNCTION_25	SWITCH_3	SWITCH_5
0x4002e2a	      0x488b742468	            mov rsi, qword [rsp + 0x68] 	      1495	state.c	FUNCTION_25
0x4002e2f	    0x644833342528	                xor rsi, qword fs:[0x28]	      1495	state.c	FUNCTION_25
0x4002e38	     0xf858e1c0000	                           jne 0x4004acc	      1495	state.c	FUNCTION_25
0x4002e3e	        0x4883c478	                           add rsp, 0x78	      1495	state.c	FUNCTION_25
0x4002e42	              0x5b	                                 pop rbx	      1495	state.c	FUNCTION_25
0x4002e43	              0x5d	                                 pop rbp	      1495	state.c	FUNCTION_25
0x4002e44	            0x415c	                                 pop r12	      1495	state.c	FUNCTION_25
0x4002e46	            0x415d	                                 pop r13	      1495	state.c	FUNCTION_25
0x4002e48	            0x415e	                                 pop r14	      1495	state.c	FUNCTION_25
0x4002e4a	            0x415f	                                 pop r15	      1495	state.c	FUNCTION_25
0x4002e4c	              0xc3	                                     ret	      1495	state.c	FUNCTION_25
0x4002e4d	           0xf1f00	                         nop dword [rax]	      1495	state.c	FUNCTION_25
0x4002e50	      0x3d70210000	                         cmp eax, 0x2170	       951	state.c	FUNCTION_25	SWITCH_3
0x4002e55	     0xf84250c0000	                            je 0x4003a80	       951	state.c	FUNCTION_25	SWITCH_3
0x4002e5b	     0xf8f0f010000	                            jg 0x4002f70	       951	state.c	FUNCTION_25	SWITCH_3
0x4002e61	          0x83f86c	                           cmp eax, 0x6c	       951	state.c	FUNCTION_25	SWITCH_3
0x4002e64	     0xf8416120000	                            je 0x4004080	       951	state.c	FUNCTION_25	SWITCH_3
0x4002e6a	     0xf8f68050000	                            jg 0x40033d8	       951	state.c	FUNCTION_25	SWITCH_3
0x4002e70	          0x83f868	                           cmp eax, 0x68	       951	state.c	FUNCTION_25	SWITCH_3
0x4002e73	     0xf84b7020000	                            je 0x4003130	       951	state.c	FUNCTION_25	SWITCH_3
0x4002e79	     0xf8f51080000	                            jg 0x40036d0	       951	state.c	FUNCTION_25	SWITCH_3
0x4002e7f	          0x83f866	                           cmp eax, 0x66	       951	state.c	FUNCTION_25	SWITCH_3
0x4002e82	     0xf8430120000	                            je 0x40040b8	       951	state.c	FUNCTION_25	SWITCH_3
0x4002e88	          0x83f867	                           cmp eax, 0x67	       951	state.c	FUNCTION_25	SWITCH_3
0x4002e8b	     0xf85c8050000	                           jne 0x4003459	       951	state.c	FUNCTION_25	SWITCH_3
0x4002e91	          0x488b0e	                    mov rcx, qword [rsi]	      1239	state.c	FUNCTION_25	SWITCH_3	CALL_75
0x4002e94	    0x81e1ffffff7f	                     and ecx, 0x7fffffff	      1239	state.c	FUNCTION_25	SWITCH_3	CALL_75
0x4002e9a	    0x4881f9ffffff	                     cmp rcx, 0x3fffffff	      1239	state.c	FUNCTION_25	SWITCH_3	CALL_75
0x4002ea1	     0xf84f51a0000	                            je 0x400499c	      1239	state.c	FUNCTION_25	SWITCH_3	CALL_75
0x4002ea7	          0x83f905	                              cmp ecx, 5	      1239	state.c	FUNCTION_25	SWITCH_3	CALL_75
0x4002eaa	     0xf8f78ffffff	                            jg 0x4002e28	      1239	state.c	FUNCTION_25	SWITCH_3	CALL_75
0x4002eb0	      0xb801000000	                              mov eax, 1	      1239	state.c	FUNCTION_25	SWITCH_3	CALL_75
0x4002eb5	          0x48d3e0	                             shl rax, cl	      1239	state.c	FUNCTION_25	SWITCH_3	CALL_75
0x4002eb8	            0xa828	                           test al, 0x28	      1239	state.c	FUNCTION_25	SWITCH_3	CALL_75
0x4002eba	     0xf8455ffffff	                            je 0x4002e15	      1239	state.c	FUNCTION_25	SWITCH_3	CALL_75
0x4002ec0	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	      1247	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	FOR_4
0x4002ec3	            0x31d2	                            xor edx, edx	      1247	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	FOR_4
0x4002ec5	      0xbe01000000	                              mov esi, 1	       164	state.c	FUNCTION_10
0x4002eca	            0x85c0	                           test eax, eax	      1247	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	FOR_4
0x4002ecc	     0xf8e0e010000	                           jle 0x4002fe0	      1247	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	FOR_4
0x4002ed2	    0x660f1f440000	                    nop word [rax + rax]	      1247	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	FOR_4
0x4002ed8	            0x89d0	                            mov eax, edx	       164	state.c	FUNCTION_10
0x4002eda	            0x89d1	                            mov ecx, edx	       164	state.c	FUNCTION_10
0x4002edc	            0x89f7	                            mov edi, esi	       164	state.c	FUNCTION_10
0x4002ede	          0xc1f803	                              sar eax, 3	       164	state.c	FUNCTION_10
0x4002ee1	          0x83e107	                              and ecx, 7	       164	state.c	FUNCTION_10
0x4002ee4	          0x83c201	                              add edx, 1	      1247	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	FOR_4
0x4002ee7	            0x4898	                                    cdqe	       164	state.c	FUNCTION_10
0x4002ee9	        0x48034350	             add rax, qword [rbx + 0x50]	       164	state.c	FUNCTION_10
0x4002eed	            0xd3e7	                             shl edi, cl	       164	state.c	FUNCTION_10
0x4002eef	            0x89f9	                            mov ecx, edi	       164	state.c	FUNCTION_10
0x4002ef1	            0xf7d1	                                 not ecx	       164	state.c	FUNCTION_10
0x4002ef3	            0x2008	                      and byte [rax], cl	       164	state.c	FUNCTION_10
0x4002ef5	          0x39532c	            cmp dword [rbx + 0x2c], edx 	      1247	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	FOR_4
0x4002ef8	            0x7fde	                            jg 0x4002ed8	      1247	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	FOR_4
0x4002efa	      0xe96efeffff	                           jmp 0x4002d6d	      1247	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	FOR_4
0x4002eff	              0x90	                                     nop	      1247	state.c	FUNCTION_25	SWITCH_3	SWITCH_6	FOR_4
0x4002f00	          0x83f845	                           cmp eax, 0x45	       951	state.c	FUNCTION_25	SWITCH_3
0x4002f03	     0xf84570f0000	                            je 0x4003e60	       951	state.c	FUNCTION_25	SWITCH_3
0x4002f09	     0xf8f29050000	                            jg 0x4003438	       951	state.c	FUNCTION_25	SWITCH_3
0x4002f0f	          0x83f842	                           cmp eax, 0x42	       951	state.c	FUNCTION_25	SWITCH_3
0x4002f12	     0xf84e8010000	                            je 0x4003100	       951	state.c	FUNCTION_25	SWITCH_3
0x4002f18	     0xf8fd2070000	                            jg 0x40036f0	       951	state.c	FUNCTION_25	SWITCH_3
0x4002f1e	          0x83f840	                           cmp eax, 0x40	       951	state.c	FUNCTION_25	SWITCH_3
0x4002f21	     0xf84c9110000	                            je 0x40040f0	       951	state.c	FUNCTION_25	SWITCH_3
0x4002f27	          0x83f841	                           cmp eax, 0x41	       951	state.c	FUNCTION_25	SWITCH_3
0x4002f2a	     0xf8529050000	                           jne 0x4003459	       951	state.c	FUNCTION_25	SWITCH_3
0x4002f30	          0x488b06	                    mov rax, qword [rsi]	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_85
0x4002f33	      0x25ffffff7f	                     and eax, 0x7fffffff	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_85
0x4002f38	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_85
0x4002f3e	     0xf847c0e0000	                            je 0x4003dc0	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_85
0x4002f44	          0x4885c0	                           test rax, rax	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_85
0x4002f47	     0xf84730e0000	                            je 0x4003dc0	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_85
0x4002f4d	          0x4489f1	                           mov ecx, r14d	      1278	state.c	FUNCTION_25	SWITCH_3
0x4002f50	            0x29c1	                            sub ecx, eax	      1278	state.c	FUNCTION_25	SWITCH_3
0x4002f52	     0xfb693950000	           movzx edx, byte [rbx + 0x95] 	      1278	state.c	FUNCTION_25	SWITCH_3
0x4002f59	          0x894b30	             mov dword [rbx + 0x30], ecx	       978	state.c	FUNCTION_25	SWITCH_3
0x4002f5c	            0x89e8	                            mov eax, ebp	       943	state.c	FUNCTION_25
0x4002f5e	    0xc74338000000	               mov dword [rbx + 0x38], 0	       979	state.c	FUNCTION_25	SWITCH_3
0x4002f65	            0x89d6	                            mov esi, edx	       979	state.c	FUNCTION_25	SWITCH_3
0x4002f67	          0x83e604	                              and esi, 4	       979	state.c	FUNCTION_25	SWITCH_3
0x4002f6a	      0xe9de000000	                           jmp 0x400304d	       980	state.c	FUNCTION_25	SWITCH_3
0x4002f6f	              0x90	                                     nop	       980	state.c	FUNCTION_25	SWITCH_3
0x4002f70	      0x3d6e3f0000	                         cmp eax, 0x3f6e	       951	state.c	FUNCTION_25	SWITCH_3
0x4002f75	     0xf84b0090000	                            je 0x400392b	       951	state.c	FUNCTION_25	SWITCH_3
0x4002f7b	     0xf8e0f050000	                           jle 0x4003490	       951	state.c	FUNCTION_25	SWITCH_3
0x4002f81	      0x3d703f2400	                       cmp eax, 0x243f70	       951	state.c	FUNCTION_25	SWITCH_3
0x4002f86	     0xf84cc020000	                            je 0x4003258	       951	state.c	FUNCTION_25	SWITCH_3
0x4002f8c	     0xf8f0e060000	                            jg 0x40035a0	       951	state.c	FUNCTION_25	SWITCH_3
0x4002f92	      0x3d71002000	                       cmp eax, 0x200071	       951	state.c	FUNCTION_25	SWITCH_3
0x4002f97	     0xf84930b0000	                            je 0x4003b30	       951	state.c	FUNCTION_25	SWITCH_3
0x4002f9d	      0x3d71002200	                       cmp eax, 0x220071	       951	state.c	FUNCTION_25	SWITCH_3
0x4002fa2	     0xf85b1040000	                           jne 0x4003459	       951	state.c	FUNCTION_25	SWITCH_3
0x4002fa8	          0x488b06	                    mov rax, qword [rsi]	      1359	state.c	FUNCTION_25	SWITCH_3	CALL_112
0x4002fab	      0x25ffffff7f	                     and eax, 0x7fffffff	      1359	state.c	FUNCTION_25	SWITCH_3	CALL_112
0x4002fb0	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1359	state.c	FUNCTION_25	SWITCH_3	CALL_112
0x4002fb6	     0xf84c1150000	                            je 0x400457d	      1359	state.c	FUNCTION_25	SWITCH_3	CALL_112
0x4002fbc	          0x83f801	                              cmp eax, 1	      1361	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x4002fbf	     0xf84ac150000	                            je 0x4004571	      1361	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x4002fc5	          0x83f802	                              cmp eax, 2	      1361	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x4002fc8	     0xf84af150000	                            je 0x400457d	      1361	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x4002fce	            0x85c0	                           test eax, eax	      1361	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x4002fd0	     0xf84a7150000	                            je 0x400457d	      1361	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x4002fd6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1361	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x4002fe0	     0xfb693950000	           movzx edx, byte [rbx + 0x95] 	      1361	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x4002fe7	            0x89e8	                            mov eax, ebp	       943	state.c	FUNCTION_25
0x4002fe9	          0x4489f1	                           mov ecx, r14d	       943	state.c	FUNCTION_25
0x4002fec	            0x89d6	                            mov esi, edx	       943	state.c	FUNCTION_25
0x4002fee	          0x83e604	                              and esi, 4	       943	state.c	FUNCTION_25
0x4002ff1	            0xeb5a	                           jmp 0x400304d	       943	state.c	FUNCTION_25
0x4002ff3	       0xf1f440000	                   nop dword [rax + rax]	       943	state.c	FUNCTION_25
0x4002ff8	          0x83f861	                           cmp eax, 0x61	       951	state.c	FUNCTION_25	SWITCH_3
0x4002ffb	     0xf8467010000	                            je 0x4003168	       951	state.c	FUNCTION_25	SWITCH_3
0x4003001	     0xf8f79060000	                            jg 0x4003680	       951	state.c	FUNCTION_25	SWITCH_3
0x4003007	          0x83f85a	                           cmp eax, 0x5a	       951	state.c	FUNCTION_25	SWITCH_3
0x400300a	     0xf84400f0000	                            je 0x4003f50	       951	state.c	FUNCTION_25	SWITCH_3
0x4003010	          0x83f860	                           cmp eax, 0x60	       951	state.c	FUNCTION_25	SWITCH_3
0x4003013	     0xf8540040000	                           jne 0x4003459	       951	state.c	FUNCTION_25	SWITCH_3
0x4003019	          0x488b16	                    mov rdx, qword [rsi]	      1188	state.c	FUNCTION_25	SWITCH_3	CALL_64
0x400301c	      0xb800000000	                              mov eax, 0	      1188	state.c	FUNCTION_25	SWITCH_3	CALL_64
0x4003021	    0x81e2ffffff7f	                     and edx, 0x7fffffff	      1188	state.c	FUNCTION_25	SWITCH_3	CALL_64
0x4003027	          0x8d4aff	                      lea ecx, [rdx - 1]	      1188	state.c	FUNCTION_25	SWITCH_3	CALL_64
0x400302a	    0x4881faffffff	                     cmp rdx, 0x3fffffff	      1188	state.c	FUNCTION_25	SWITCH_3	CALL_64
0x4003031	           0xf45c1	                         cmovne eax, ecx	      1188	state.c	FUNCTION_25	SWITCH_3	CALL_64
0x4003034	          0x894334	             mov dword [rbx + 0x34], eax	       990	state.c	FUNCTION_25	SWITCH_3
0x4003037	    0xc74338000000	               mov dword [rbx + 0x38], 0	       991	state.c	FUNCTION_25	SWITCH_3
0x400303e	     0xfb693950000	           movzx edx, byte [rbx + 0x95] 	       991	state.c	FUNCTION_25	SWITCH_3
0x4003045	          0x4489f1	                           mov ecx, r14d	       943	state.c	FUNCTION_25
0x4003048	            0x89d6	                            mov esi, edx	       943	state.c	FUNCTION_25
0x400304a	          0x83e604	                              and esi, 4	       943	state.c	FUNCTION_25
0x400304d	          0x4084f6	                           test sil, sil	      1458	state.c	FUNCTION_25	IF_33
0x4003050	     0xf8432fdffff	                            je 0x4002d88	      1458	state.c	FUNCTION_25	IF_33
0x4003056	          0x8b733c	            mov esi, dword [rbx + 0x3c] 	      1459	state.c	FUNCTION_25	IF_33
0x4003059	            0x39ce	                            cmp esi, ecx	      1459	state.c	FUNCTION_25	IF_33
0x400305b	     0xf8f07030000	                            jg 0x4003368	      1459	state.c	FUNCTION_25	IF_33
0x4003061	        0x448b4b40	            mov r9d, dword [rbx + 0x40] 	      1459	state.c	FUNCTION_25	IF_33
0x4003065	          0x4489cf	                            mov edi, r9d	      1459	state.c	FUNCTION_25	IF_33
0x4003068	          0x4189c0	                            mov r8d, eax	       943	state.c	FUNCTION_25
0x400306b	            0x89ce	                            mov esi, ecx	       943	state.c	FUNCTION_25
0x400306d	            0x85ff	                           test edi, edi	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x400306f	     0xf880b030000	                            js 0x4003380	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x4003075	            0x39fe	                            cmp esi, edi	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x4003077	            0x7c06	                            jl 0x400307f	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x4003079	          0x83ef01	                              sub edi, 1	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x400307c	          0x897b30	             mov dword [rbx + 0x30], edi	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x400307f	          0x83e210	                           and edx, 0x10	      1461	state.c	FUNCTION_25	IF_33	CALL_135
0x4003082	     0xf8498020000	                            je 0x4003320	      1461	state.c	FUNCTION_25	IF_33	CALL_135
0x4003088	          0x8b4344	            mov eax, dword [rbx + 0x44] 	      1461	state.c	FUNCTION_25	IF_33	CALL_135
0x400308b	          0x4439c0	                            cmp eax, r8d	      1461	state.c	FUNCTION_25	IF_33	CALL_135
0x400308e	     0xf8f97020000	                            jg 0x400332b	      1461	state.c	FUNCTION_25	IF_33	CALL_135
0x4003094	          0x4489c0	                            mov eax, r8d	      1461	state.c	FUNCTION_25	IF_33	CALL_135
0x4003097	          0x8b5348	            mov edx, dword [rbx + 0x48] 	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x400309a	            0x85d2	                           test edx, edx	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x400309c	     0xf883e040000	                            js 0x40034e0	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40030a2	            0x39c2	                            cmp edx, eax	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x40030a4	            0x7f06	                            jg 0x40030ac	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x40030a6	          0x8d42ff	                      lea eax, [rdx - 1]	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x40030a9	          0x894334	             mov dword [rbx + 0x34], eax	      1468	state.c	FUNCTION_25	ELSE_5	CALL_137
0x40030ac	            0x39c5	                            cmp ebp, eax	        34	state.c	FUNCTION_2	IF_1
0x40030ae	     0xf845c020000	                            je 0x4003310	        34	state.c	FUNCTION_2	IF_1
0x40030b4	        0x488b4308	                mov rax, qword [rbx + 8]	        40	state.c	FUNCTION_2	IF_3
0x40030b8	    0xc74338000000	               mov dword [rbx + 0x38], 0	        38	state.c	FUNCTION_2	IF_2
0x40030bf	          0x4885c0	                           test rax, rax	        40	state.c	FUNCTION_2	IF_3
0x40030c2	            0x742a	                            je 0x40030ee	        40	state.c	FUNCTION_2	IF_3
0x40030c4	        0x488b4008	                mov rax, qword [rax + 8]	        40	state.c	FUNCTION_2	IF_3
0x40030c8	          0x4885c0	                           test rax, rax	        40	state.c	FUNCTION_2	IF_3
0x40030cb	            0x7421	                            je 0x40030ee	        40	state.c	FUNCTION_2	IF_3
0x40030cd	     0xfb693940000	           movzx edx, byte [rbx + 0x94] 	        41	state.c	FUNCTION_2	IF_3	IF_4
0x40030d4	        0x48c1e520	                           shl rbp, 0x20	        41	state.c	FUNCTION_2	IF_3	IF_4
0x40030d8	          0x4489f6	                           mov esi, r14d	        41	state.c	FUNCTION_2	IF_3	IF_4
0x40030db	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	        41	state.c	FUNCTION_2	IF_3	IF_4
0x40030df	          0x4809ee	                             or rsi, rbp	        41	state.c	FUNCTION_2	IF_3	IF_4
0x40030e2	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	        41	state.c	FUNCTION_2	IF_3	IF_4
0x40030e6	          0xc0ea05	                               shr dl, 5	        41	state.c	FUNCTION_2	IF_3	IF_4
0x40030e9	          0x83e201	                              and edx, 1	        41	state.c	FUNCTION_2	IF_3	IF_4
0x40030ec	            0xffd0	                                call rax	        41	state.c	FUNCTION_2	IF_3	IF_4
0x40030ee	      0xb801000000	                              mov eax, 1	      1494	state.c	FUNCTION_25
0x40030f3	      0xe932fdffff	                           jmp 0x4002e2a	      1494	state.c	FUNCTION_25
0x40030f8	     0xf1f84000000	                   nop dword [rax + rax]	      1494	state.c	FUNCTION_25
0x4003100	          0x488b0e	                    mov rcx, qword [rsi]	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_70
0x4003103	    0x81e1ffffff7f	                     and ecx, 0x7fffffff	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_70
0x4003109	    0x4881f9ffffff	                     cmp rcx, 0x3fffffff	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_70
0x4003110	     0xf8402080000	                            je 0x4003918	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_70
0x4003116	          0x4885c9	                           test rcx, rcx	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_70
0x4003119	     0xf84f9070000	                            je 0x4003918	      1220	state.c	FUNCTION_25	SWITCH_3	CALL_70
0x400311f	          0x4401f1	                           add ecx, r14d	       978	state.c	FUNCTION_25	SWITCH_3
0x4003122	      0xe92bfeffff	                           jmp 0x4002f52	       978	state.c	FUNCTION_25	SWITCH_3
0x4003127	    0x660f1f840000	                    nop word [rax + rax]	       978	state.c	FUNCTION_25	SWITCH_3
0x4003130	          0x488b06	                    mov rax, qword [rsi]	      1261	state.c	FUNCTION_25	SWITCH_3	IF_20	CALL_78
0x4003133	      0x25ffffff7f	                     and eax, 0x7fffffff	      1261	state.c	FUNCTION_25	SWITCH_3	IF_20	CALL_78
0x4003138	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1261	state.c	FUNCTION_25	SWITCH_3	IF_20	CALL_78
0x400313e	     0xf849cfeffff	                            je 0x4002fe0	      1261	state.c	FUNCTION_25	SWITCH_3	IF_20	CALL_78
0x4003144	          0x83f804	                              cmp eax, 4	       713	state.c	FUNCTION_22	SWITCH_1
0x4003147	     0xf848f160000	                            je 0x40047dc	       713	state.c	FUNCTION_22	SWITCH_1
0x400314d	          0x83f814	                           cmp eax, 0x14	       713	state.c	FUNCTION_22	SWITCH_1
0x4003150	     0xf858afeffff	                           jne 0x4002fe0	       713	state.c	FUNCTION_22	SWITCH_1
0x4003156	    0x808b94000000	              or byte [rbx + 0x94], 0x10	       719	state.c	FUNCTION_22	SWITCH_1
0x400315d	      0xe97efeffff	                           jmp 0x4002fe0	       719	state.c	FUNCTION_22	SWITCH_1
0x4003162	    0x660f1f440000	                    nop word [rax + rax]	       719	state.c	FUNCTION_22	SWITCH_1
0x4003168	          0x488b06	                    mov rax, qword [rsi]	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x400316b	      0x25ffffff7f	                     and eax, 0x7fffffff	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x4003170	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x4003176	     0xf8487010000	                            je 0x4003303	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x400317c	          0x4885c0	                           test rax, rax	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x400317f	     0xf847e010000	                            je 0x4003303	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x4003185	             0x1e8	                            add eax, ebp	      1195	state.c	FUNCTION_25	SWITCH_3
0x4003187	      0xe9a8feffff	                           jmp 0x4003034	      1195	state.c	FUNCTION_25	SWITCH_3
0x400318c	         0xf1f4000	                         nop dword [rax]	      1195	state.c	FUNCTION_25	SWITCH_3
0x4003190	          0x4c8b06	                     mov r8, qword [rsi]	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x4003193	    0x4181e0ffffff	                     and r8d, 0x7fffffff	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x400319a	    0x4981f8ffffff	                      cmp r8, 0x3fffffff	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x40031a1	     0xf846b120000	                            je 0x4004412	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x40031a7	          0x4d85c0	                             test r8, r8	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x40031aa	     0xf8462120000	                            je 0x4004412	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x40031b0	          0x8b733c	            mov esi, dword [rbx + 0x3c] 	       175	state.c	FUNCTION_12	IF_1
0x40031b3	          0x4139f6	                           cmp r14d, esi	       175	state.c	FUNCTION_12	IF_1
0x40031b6	     0xf8c94010000	                            jl 0x4003350	       175	state.c	FUNCTION_12	IF_1
0x40031bc	        0x448b4b40	            mov r9d, dword [rbx + 0x40] 	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x40031c0	          0x4585c9	                           test r9d, r9d	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x40031c3	          0x4489cf	                            mov edi, r9d	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x40031c6	          0x4489c8	                            mov eax, r9d	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x40031c9	     0xf884b170000	                            js 0x400491a	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x40031cf	          0x4139c6	                           cmp r14d, eax	       175	state.c	FUNCTION_12	IF_1
0x40031d2	     0xf8d58050000	                           jge 0x4003730	       175	state.c	FUNCTION_12	IF_1
0x40031d8	     0xfb693950000	           movzx edx, byte [rbx + 0x95] 	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x40031df	          0xf6c210	                           test dl, 0x10	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x40031e2	            0x89d0	                            mov eax, edx	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x40031e4	     0xf848b160000	                            je 0x4004875	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x40031ea	          0x3b6b44	            cmp ebp, dword [rbx + 0x44] 	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x40031ed	     0xf8cfe0f0000	                            jl 0x40041f1	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x40031f3	          0x8b4b48	            mov ecx, dword [rbx + 0x48] 	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x40031f6	            0x85c9	                           test ecx, ecx	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x40031f8	     0xf88f6180000	                            js 0x4004af4	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x40031fe	            0x39cd	                            cmp ebp, ecx	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4003200	     0xf8de90f0000	                           jge 0x40041ef	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4003206	        0x418d4601	                      lea eax, [r14 + 1]	      1135	state.c	FUNCTION_25	SWITCH_3
0x400320a	        0x8944240c	              mov dword [rsp + 0xc], eax	      1135	state.c	FUNCTION_25	SWITCH_3
0x400320e	    0x660f6e44240c	           movd xmm0, dword [rsp + 0xc] 	      1135	state.c	FUNCTION_25	SWITCH_3
0x4003214	        0x894c240c	              mov dword [rsp + 0xc], ecx	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x4003218	    0x660f6e6c240c	           movd xmm5, dword [rsp + 0xc] 	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x400321e	      0x448974240c	             mov dword [rsp + 0xc], r14d	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x4003223	    0x660f6e5c240c	           movd xmm3, dword [rsp + 0xc] 	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x4003229	        0x896c2410	             mov dword [rsp + 0x10], ebp	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x400322d	    0x660f6e4c2410	          movd xmm1, dword [rsp + 0x10] 	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x4003233	        0x660f62d8	                    punpckldq xmm3, xmm0	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x4003237	        0x660f62cd	                    punpckldq xmm1, xmm5	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x400323b	        0x660f6fc3	                       movdqa xmm0, xmm3	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x400323f	        0x660f6cc1	                   punpcklqdq xmm0, xmm1	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x4003243	            0x31c9	                            xor ecx, ecx	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x4003245	      0x66480f7ec6	                          movq rsi, xmm0	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x400324a	       0xf29442430	       movaps xmmword [rsp + 0x30], xmm0	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x400324f	      0xe90cfbffff	                           jmp 0x4002d60	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x4003254	         0xf1f4000	                         nop dword [rax]	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x4003258	          0x488b0e	                    mov rcx, qword [rsi]	      1323	state.c	FUNCTION_25	SWITCH_3	CALL_98
0x400325b	    0x81e1ffffff7f	                     and ecx, 0x7fffffff	      1323	state.c	FUNCTION_25	SWITCH_3	CALL_98
0x4003261	    0x81f9e8030000	                          cmp ecx, 0x3e8	       827	state.c	FUNCTION_24	SWITCH_1
0x4003267	     0xf8490170000	                            je 0x40049fd	       827	state.c	FUNCTION_24	SWITCH_1
0x400326d	     0xf8ec3120000	                           jle 0x4004536	       827	state.c	FUNCTION_24	SWITCH_1
0x4003273	    0x81f9ed030000	                          cmp ecx, 0x3ed	       827	state.c	FUNCTION_24	SWITCH_1
0x4003279	     0xf848e170000	                            je 0x4004a0d	       827	state.c	FUNCTION_24	SWITCH_1
0x400327f	     0xf8e5a160000	                           jle 0x40048df	       827	state.c	FUNCTION_24	SWITCH_1
0x4003285	    0x81f9f7030000	                          cmp ecx, 0x3f7	       827	state.c	FUNCTION_24	SWITCH_1
0x400328b	     0xf8447170000	                            je 0x40049d8	       827	state.c	FUNCTION_24	SWITCH_1
0x4003291	     0xf8e25170000	                           jle 0x40049bc	       827	state.c	FUNCTION_24	SWITCH_1
0x4003297	    0x81f917040000	                          cmp ecx, 0x417	       827	state.c	FUNCTION_24	SWITCH_1
0x400329d	     0xf84e3170000	                            je 0x4004a86	       827	state.c	FUNCTION_24	SWITCH_1
0x40032a3	    0x81f9d4070000	                          cmp ecx, 0x7d4	       827	state.c	FUNCTION_24	SWITCH_1
0x40032a9	     0xf8554150000	                           jne 0x4004803	       827	state.c	FUNCTION_24	SWITCH_1
0x40032af	    0x440fb6839500	           movzx r8d, byte [rbx + 0x95] 	       889	state.c	FUNCTION_24	SWITCH_1
0x40032b7	        0x41c0e805	                              shr r8b, 5	       889	state.c	FUNCTION_24	SWITCH_1
0x40032bb	        0x4183e001	                              and r8d, 1	       889	state.c	FUNCTION_24	SWITCH_1
0x40032bf	          0x41f7d8	                                 neg r8d	       897	state.c	FUNCTION_24	CALL_2
0x40032c2	        0x4183c002	                              add r8d, 2	       897	state.c	FUNCTION_24	CALL_2
0x40032c6	          0x488b3b	                    mov rdi, qword [rbx]	       897	state.c	FUNCTION_24	CALL_2
0x40032c9	      0xba00000000	                              mov edx, 0	       897	state.c	FUNCTION_24	CALL_2
0x40032ce	      0xbe9b000000	                           mov esi, 0x9b	       897	state.c	FUNCTION_24	CALL_2
0x40032d3	            0x31c0	                            xor eax, eax	       897	state.c	FUNCTION_24	CALL_2
0x40032d5	      0xe800000000	                          call 0x40032da	       897	state.c	FUNCTION_24	CALL_2
0x40032da	      0xe98efaffff	                           jmp 0x4002d6d	       897	state.c	FUNCTION_24	CALL_2
0x40032df	              0x90	                                     nop	       897	state.c	FUNCTION_24	CALL_2
0x40032e0	          0x488b06	                    mov rax, qword [rsi]	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x40032e3	          0x4889c2	                            mov rdx, rax	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x40032e6	    0x81e2ffffff7f	                     and edx, 0x7fffffff	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x40032ec	    0x4881faffffff	                     cmp rdx, 0x3fffffff	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x40032f3	            0x740e	                            je 0x4003303	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x40032f5	      0x25ffffff7f	                     and eax, 0x7fffffff	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x40032fa	          0x4885d2	                           test rdx, rdx	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x40032fd	     0xf8582feffff	                           jne 0x4003185	       983	state.c	FUNCTION_25	SWITCH_3	CALL_8
0x4003303	      0xb801000000	                              mov eax, 1	      1194	state.c	FUNCTION_25	SWITCH_3	CALL_65
0x4003308	             0x1e8	                            add eax, ebp	      1195	state.c	FUNCTION_25	SWITCH_3
0x400330a	      0xe925fdffff	                           jmp 0x4003034	      1195	state.c	FUNCTION_25	SWITCH_3
0x400330f	              0x90	                                     nop	      1195	state.c	FUNCTION_25	SWITCH_3
0x4003310	        0x443b7330	           cmp r14d, dword [rbx + 0x30] 	        34	state.c	FUNCTION_2	IF_1
0x4003314	     0xf859afdffff	                           jne 0x40030b4	        34	state.c	FUNCTION_2	IF_1
0x400331a	      0xe9cffdffff	                           jmp 0x40030ee	        34	state.c	FUNCTION_2	IF_1
0x400331f	              0x90	                                     nop	        34	state.c	FUNCTION_2	IF_1
0x4003320	          0x4585c0	                           test r8d, r8d	      1461	state.c	FUNCTION_25	IF_33	CALL_135
0x4003323	     0xf8997000000	                           jns 0x40033c0	      1461	state.c	FUNCTION_25	IF_33	CALL_135
0x4003329	            0x31c0	                            xor eax, eax	      1461	state.c	FUNCTION_25	IF_33	CALL_135
0x400332b	            0x84d2	                             test dl, dl	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x400332d	          0x894334	             mov dword [rbx + 0x34], eax	      1461	state.c	FUNCTION_25	IF_33	CALL_135
0x4003330	     0xf8561fdffff	                           jne 0x4003097	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x4003336	          0x8b532c	            mov edx, dword [rbx + 0x2c] 	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x4003339	            0x39d0	                            cmp eax, edx	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x400333b	     0xf8d65fdffff	                           jge 0x40030a6	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x4003341	      0xe966fdffff	                           jmp 0x40030ac	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x4003346	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x4003350	     0xfb693950000	           movzx edx, byte [rbx + 0x95] 	      1458	state.c	FUNCTION_25	IF_33
0x4003357	          0xf6c204	                              test dl, 4	      1458	state.c	FUNCTION_25	IF_33
0x400335a	     0xf8498010000	                            je 0x40034f8	      1458	state.c	FUNCTION_25	IF_33
0x4003360	            0x89e8	                            mov eax, ebp	       943	state.c	FUNCTION_25
0x4003362	    0x660f1f440000	                    nop word [rax + rax]	       943	state.c	FUNCTION_25
0x4003368	          0x897330	             mov dword [rbx + 0x30], esi	      1459	state.c	FUNCTION_25	IF_33
0x400336b	          0x8b7b40	            mov edi, dword [rbx + 0x40] 	      1459	state.c	FUNCTION_25	IF_33
0x400336e	          0x4189c0	                            mov r8d, eax	      1459	state.c	FUNCTION_25	IF_33
0x4003371	      0xe9f7fcffff	                           jmp 0x400306d	      1459	state.c	FUNCTION_25	IF_33
0x4003376	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1459	state.c	FUNCTION_25	IF_33
0x4003380	          0x8b4328	            mov eax, dword [rbx + 0x28] 	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x4003383	            0x39f0	                            cmp eax, esi	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x4003385	          0x8d78ff	                      lea edi, [rax - 1]	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x4003388	     0xf8eeefcffff	                           jle 0x400307c	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x400338e	      0xe9ecfcffff	                           jmp 0x400307f	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x4003393	       0xf1f440000	                   nop dword [rax + rax]	      1460	state.c	FUNCTION_25	IF_33	CALL_134
0x4003398	    0xc74330000000	               mov dword [rbx + 0x30], 0	      1465	state.c	FUNCTION_25	ELSE_5
0x400339f	            0x31c9	                            xor ecx, ecx	      1465	state.c	FUNCTION_25	ELSE_5
0x40033a1	      0xe9eaf9ffff	                           jmp 0x4002d90	      1465	state.c	FUNCTION_25	ELSE_5
0x40033a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1465	state.c	FUNCTION_25	ELSE_5
0x40033b0	    0xc74334000000	               mov dword [rbx + 0x34], 0	      1467	state.c	FUNCTION_25	ELSE_5
0x40033b7	            0x31c0	                            xor eax, eax	      1467	state.c	FUNCTION_25	ELSE_5
0x40033b9	      0xe9e7f9ffff	                           jmp 0x4002da5	      1467	state.c	FUNCTION_25	ELSE_5
0x40033be	            0x6690	                                     nop	      1467	state.c	FUNCTION_25	ELSE_5
0x40033c0	          0x8b532c	            mov edx, dword [rbx + 0x2c] 	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40033c3	          0x4489c0	                            mov eax, r8d	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40033c6	          0x4439c2	                            cmp edx, r8d	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40033c9	     0xf8ed7fcffff	                           jle 0x40030a6	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40033cf	      0xe9d8fcffff	                           jmp 0x40030ac	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40033d4	         0xf1f4000	                         nop dword [rax]	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40033d8	          0x83f872	                           cmp eax, 0x72	       951	state.c	FUNCTION_25	SWITCH_3
0x40033db	     0xf84ef090000	                            je 0x4003dd0	       951	state.c	FUNCTION_25	SWITCH_3
0x40033e1	     0xf8e69030000	                           jle 0x4003750	       951	state.c	FUNCTION_25	SWITCH_3
0x40033e7	          0x83f873	                           cmp eax, 0x73	       951	state.c	FUNCTION_25	SWITCH_3
0x40033ea	     0xf84c00a0000	                            je 0x4003eb0	       951	state.c	FUNCTION_25	SWITCH_3
0x40033f0	          0x83f874	                           cmp eax, 0x74	       951	state.c	FUNCTION_25	SWITCH_3
0x40033f3	            0x7564	                           jne 0x4003459	       951	state.c	FUNCTION_25	SWITCH_3
0x40033f5	          0x488b06	                    mov rax, qword [rsi]	      1413	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_120
0x40033f8	      0x25ffffff7f	                     and eax, 0x7fffffff	      1413	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_120
0x40033fd	        0x4883f808	                              cmp rax, 8	      1413	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_120
0x4003401	     0xf85d9fbffff	                           jne 0x4002fe0	      1413	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_120
0x4003407	          0x83fa03	                              cmp edx, 3	      1415	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	IF_28
0x400340a	     0xf85d0fbffff	                           jne 0x4002fe0	      1415	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	IF_28
0x4003410	          0x8b4610	            mov eax, dword [rsi + 0x10] 	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_123
0x4003413	        0x488b7e08	                mov rdi, qword [rsi + 8]	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_123
0x4003417	          0x4889da	                            mov rdx, rbx	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_123
0x400341a	      0x25ffffff7f	                     and eax, 0x7fffffff	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_123
0x400341f	    0x81e7ffffff7f	                     and edi, 0x7fffffff	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_123
0x4003425	            0x89c6	                            mov esi, eax	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_123
0x4003427	      0xe824d1ffff	                      call sym.on_resize	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_123
0x400342c	      0xe93cf9ffff	                           jmp 0x4002d6d	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_123
0x4003431	     0xf1f80000000	                         nop dword [rax]	      1416	state.c	FUNCTION_25	SWITCH_3	SWITCH_10	CALL_123
0x4003438	          0x83f848	                           cmp eax, 0x48	       951	state.c	FUNCTION_25	SWITCH_3
0x400343b	     0xf84cf0b0000	                            je 0x4004010	       951	state.c	FUNCTION_25	SWITCH_3
0x4003441	     0xf8f59030000	                            jg 0x40037a0	       951	state.c	FUNCTION_25	SWITCH_3
0x4003447	          0x83f846	                           cmp eax, 0x46	       951	state.c	FUNCTION_25	SWITCH_3
0x400344a	     0xf84800b0000	                            je 0x4003fd0	       951	state.c	FUNCTION_25	SWITCH_3
0x4003450	          0x83f847	                           cmp eax, 0x47	       951	state.c	FUNCTION_25	SWITCH_3
0x4003453	     0xf84c0fbffff	                            je 0x4003019	       951	state.c	FUNCTION_25	SWITCH_3
0x4003459	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1451	state.c	FUNCTION_25	SWITCH_3	IF_31
0x400345d	          0x4885c0	                           test rax, rax	      1451	state.c	FUNCTION_25	SWITCH_3	IF_31
0x4003460	     0xf84c2f9ffff	                            je 0x4002e28	      1451	state.c	FUNCTION_25	SWITCH_3	IF_31
0x4003466	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1451	state.c	FUNCTION_25	SWITCH_3	IF_31
0x400346a	          0x4885c0	                           test rax, rax	      1451	state.c	FUNCTION_25	SWITCH_3	IF_31
0x400346d	     0xf84b5f9ffff	                            je 0x4002e28	      1451	state.c	FUNCTION_25	SWITCH_3	IF_31
0x4003473	        0x4c8b4b20	              mov r9, qword [rbx + 0x20]	      1452	state.c	FUNCTION_25	SWITCH_3	IF_31	IF_32
0x4003477	            0xffd0	                                call rax	      1452	state.c	FUNCTION_25	SWITCH_3	IF_31	IF_32
0x4003479	            0x85c0	                           test eax, eax	       915	state.c	FUNCTION_25	IF_1	IF_2
0x400347b	           0xf95c0	                                setne al	       915	state.c	FUNCTION_25	IF_1	IF_2
0x400347e	           0xfb6c0	                           movzx eax, al	       915	state.c	FUNCTION_25	IF_1	IF_2
0x4003481	      0xe9a4f9ffff	                           jmp 0x4002e2a	       915	state.c	FUNCTION_25	IF_1	IF_2
0x4003486	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       915	state.c	FUNCTION_25	IF_1	IF_2
0x4003490	      0x3d4b3f0000	                         cmp eax, 0x3f4b	       951	state.c	FUNCTION_25	SWITCH_3
0x4003495	     0xf84f5050000	                            je 0x4003a90	       951	state.c	FUNCTION_25	SWITCH_3
0x400349b	     0xf8ecf020000	                           jle 0x4003770	       951	state.c	FUNCTION_25	SWITCH_3
0x40034a1	      0x3d683f0000	                         cmp eax, 0x3f68	       951	state.c	FUNCTION_25	SWITCH_3
0x40034a6	     0xf84140d0000	                            je 0x40041c0	       951	state.c	FUNCTION_25	SWITCH_3
0x40034ac	      0x3d6c3f0000	                         cmp eax, 0x3f6c	       951	state.c	FUNCTION_25	SWITCH_3
0x40034b1	            0x75a6	                           jne 0x4003459	       951	state.c	FUNCTION_25	SWITCH_3
0x40034b3	          0x488b36	                    mov rsi, qword [rsi]	      1288	state.c	FUNCTION_25	SWITCH_3	IF_23	CALL_89
0x40034b6	    0x81e6ffffff7f	                     and esi, 0x7fffffff	      1288	state.c	FUNCTION_25	SWITCH_3	IF_23	CALL_89
0x40034bc	    0x4881feffffff	                     cmp rsi, 0x3fffffff	      1288	state.c	FUNCTION_25	SWITCH_3	IF_23	CALL_89
0x40034c3	     0xf8417fbffff	                            je 0x4002fe0	      1288	state.c	FUNCTION_25	SWITCH_3	IF_23	CALL_89
0x40034c9	            0x31d2	                            xor edx, edx	      1289	state.c	FUNCTION_25	SWITCH_3	CALL_91
0x40034cb	          0x4889df	                            mov rdi, rbx	      1289	state.c	FUNCTION_25	SWITCH_3	CALL_91
0x40034ce	      0xe88de5ffff	                   call sym.set_dec_mode	      1289	state.c	FUNCTION_25	SWITCH_3	CALL_91
0x40034d3	      0xe995f8ffff	                           jmp 0x4002d6d	      1289	state.c	FUNCTION_25	SWITCH_3	CALL_91
0x40034d8	     0xf1f84000000	                   nop dword [rax + rax]	      1289	state.c	FUNCTION_25	SWITCH_3	CALL_91
0x40034e0	          0x3b432c	            cmp eax, dword [rbx + 0x2c] 	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40034e3	     0xf8cc3fbffff	                            jl 0x40030ac	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40034e9	          0x8b532c	            mov edx, dword [rbx + 0x2c] 	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40034ec	      0xe9b5fbffff	                           jmp 0x40030a6	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40034f1	     0xf1f80000000	                         nop dword [rax]	      1462	state.c	FUNCTION_25	IF_33	CALL_136
0x40034f8	            0x89e8	                            mov eax, ebp	      1458	state.c	FUNCTION_25	IF_33
0x40034fa	          0x4489f1	                           mov ecx, r14d	      1458	state.c	FUNCTION_25	IF_33
0x40034fd	      0xe986f8ffff	                           jmp 0x4002d88	      1458	state.c	FUNCTION_25	IF_33
0x4003502	    0x660f1f440000	                    nop word [rax + rax]	      1458	state.c	FUNCTION_25	IF_33
0x4003508	          0x83f853	                           cmp eax, 0x53	       951	state.c	FUNCTION_25	SWITCH_3
0x400350b	     0xf840f070000	                            je 0x4003c20	       951	state.c	FUNCTION_25	SWITCH_3
0x4003511	          0x83f854	                           cmp eax, 0x54	       951	state.c	FUNCTION_25	SWITCH_3
0x4003514	     0xf853fffffff	                           jne 0x4003459	       951	state.c	FUNCTION_25	SWITCH_3
0x400351a	          0x488b0e	                    mov rcx, qword [rsi]	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_54
0x400351d	    0x81e1ffffff7f	                     and ecx, 0x7fffffff	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_54
0x4003523	    0x4881f9ffffff	                     cmp rcx, 0x3fffffff	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_54
0x400352a	     0xf84940f0000	                            je 0x40044c4	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_54
0x4003530	          0x4885c9	                           test rcx, rcx	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_54
0x4003533	     0xf848b0f0000	                            je 0x40044c4	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_54
0x4003539	            0xf7d9	                                 neg ecx	      1159	state.c	FUNCTION_25	SWITCH_3	CALL_54
0x400353b	          0x8b4340	            mov eax, dword [rbx + 0x40] 	      1162	state.c	FUNCTION_25	SWITCH_3	CALL_55
0x400353e	      0x660f6e433c	          movd xmm0, dword [rbx + 0x3c] 	      1161	state.c	FUNCTION_25	SWITCH_3
0x4003543	            0x85c0	                           test eax, eax	      1162	state.c	FUNCTION_25	SWITCH_3	CALL_55
0x4003545	     0xf8887100000	                            js 0x40045d2	      1162	state.c	FUNCTION_25	SWITCH_3	CALL_55
0x400354b	    0xf68395000000	           test byte [rbx + 0x95], 0x10 	      1163	state.c	FUNCTION_25	SWITCH_3	CALL_56
0x4003552	     0xf84ae0c0000	                            je 0x4004206	      1163	state.c	FUNCTION_25	SWITCH_3	CALL_56
0x4003558	          0x8b5348	            mov edx, dword [rbx + 0x48] 	      1164	state.c	FUNCTION_25	SWITCH_3	CALL_57
0x400355b	      0x660f6e4b44	          movd xmm1, dword [rbx + 0x44] 	      1163	state.c	FUNCTION_25	SWITCH_3	CALL_56
0x4003560	            0x85d2	                           test edx, edx	      1164	state.c	FUNCTION_25	SWITCH_3	CALL_57
0x4003562	     0xf88a20c0000	                            js 0x400420a	      1164	state.c	FUNCTION_25	SWITCH_3	CALL_57
0x4003568	        0x8954240c	              mov dword [rsp + 0xc], edx	      1164	state.c	FUNCTION_25	SWITCH_3	CALL_57
0x400356c	          0x4531c0	                            xor r8d, r8d	      1166	state.c	FUNCTION_25	SWITCH_3	CALL_58
0x400356f	    0x660f6e74240c	           movd xmm6, dword [rsp + 0xc] 	      1166	state.c	FUNCTION_25	SWITCH_3	CALL_58
0x4003575	        0x8944240c	              mov dword [rsp + 0xc], eax	      1166	state.c	FUNCTION_25	SWITCH_3	CALL_58
0x4003579	    0x660f6e7c240c	           movd xmm7, dword [rsp + 0xc] 	      1166	state.c	FUNCTION_25	SWITCH_3	CALL_58
0x400357f	        0x660f62ce	                    punpckldq xmm1, xmm6	      1166	state.c	FUNCTION_25	SWITCH_3	CALL_58
0x4003583	        0x660f62c7	                    punpckldq xmm0, xmm7	      1166	state.c	FUNCTION_25	SWITCH_3	CALL_58
0x4003587	        0x660f6cc1	                   punpcklqdq xmm0, xmm1	      1166	state.c	FUNCTION_25	SWITCH_3	CALL_58
0x400358b	      0x66480f7ec6	                          movq rsi, xmm0	      1166	state.c	FUNCTION_25	SWITCH_3	CALL_58
0x4003590	       0xf29442430	       movaps xmmword [rsp + 0x30], xmm0	      1166	state.c	FUNCTION_25	SWITCH_3	CALL_58
0x4003595	      0xe9c6f7ffff	                           jmp 0x4002d60	      1166	state.c	FUNCTION_25	SWITCH_3	CALL_58
0x400359a	    0x660f1f440000	                    nop word [rax + rax]	      1166	state.c	FUNCTION_25	SWITCH_3	CALL_58
0x40035a0	      0x3d7d002700	                       cmp eax, 0x27007d	       951	state.c	FUNCTION_25	SWITCH_3
0x40035a5	     0xf842d070000	                            je 0x4003cd8	       951	state.c	FUNCTION_25	SWITCH_3
0x40035ab	      0x3d7e002700	                       cmp eax, 0x27007e	       951	state.c	FUNCTION_25	SWITCH_3
0x40035b0	     0xf85a3feffff	                           jne 0x4003459	       951	state.c	FUNCTION_25	SWITCH_3
0x40035b6	          0x4c8b06	                     mov r8, qword [rsi]	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x40035b9	    0x4181e0ffffff	                     and r8d, 0x7fffffff	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x40035c0	    0x4981f8ffffff	                      cmp r8, 0x3fffffff	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x40035c7	     0xf84010f0000	                            je 0x40044ce	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x40035cd	          0x4d85c0	                             test r8, r8	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x40035d0	     0xf84f80e0000	                            je 0x40044ce	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x40035d6	          0x8b733c	            mov esi, dword [rbx + 0x3c] 	       175	state.c	FUNCTION_12	IF_1
0x40035d9	          0x4139f6	                           cmp r14d, esi	       175	state.c	FUNCTION_12	IF_1
0x40035dc	     0xf8c6efdffff	                            jl 0x4003350	       175	state.c	FUNCTION_12	IF_1
0x40035e2	        0x448b4b40	            mov r9d, dword [rbx + 0x40] 	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x40035e6	          0x4585c9	                           test r9d, r9d	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x40035e9	          0x4489cf	                            mov edi, r9d	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x40035ec	          0x4489c8	                            mov eax, r9d	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x40035ef	     0xf884d130000	                            js 0x4004942	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x40035f5	          0x4139c6	                           cmp r14d, eax	       175	state.c	FUNCTION_12	IF_1
0x40035f8	     0xf8d32010000	                           jge 0x4003730	       175	state.c	FUNCTION_12	IF_1
0x40035fe	     0xfb693950000	           movzx edx, byte [rbx + 0x95] 	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4003605	            0x89d1	                            mov ecx, edx	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4003607	            0x89d0	                            mov eax, edx	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4003609	          0x83e110	                           and ecx, 0x10	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x400360c	     0xf8409120000	                            je 0x400481b	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4003612	          0x3b6b44	            cmp ebp, dword [rbx + 0x44] 	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4003615	     0xf8cd60b0000	                            jl 0x40041f1	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x400361b	          0x8b5348	            mov edx, dword [rbx + 0x48] 	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x400361e	            0x85d2	                           test edx, edx	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x4003620	     0xf88fd110000	                            js 0x4004823	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x4003626	            0x39d5	                            cmp ebp, edx	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4003628	     0xf8d09010000	                           jge 0x4003737	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x400362e	          0x4585c9	                           test r9d, r9d	      1442	state.c	FUNCTION_25	SWITCH_3	CALL_131
0x4003631	     0xf8820130000	                            js 0x4004957	      1442	state.c	FUNCTION_25	SWITCH_3	CALL_131
0x4003637	            0x84c9	                             test cl, cl	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_132
0x4003639	     0xf84770f0000	                            je 0x40045b6	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_132
0x400363f	          0x8b4348	            mov eax, dword [rbx + 0x48] 	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_132
0x4003642	            0x85c0	                           test eax, eax	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_132
0x4003644	     0xf886c0f0000	                            js 0x40045b6	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_132
0x400364a	        0x896c240c	              mov dword [rsp + 0xc], ebp	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_132
0x400364e	    0x660f6e4c240c	           movd xmm1, dword [rsp + 0xc] 	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_132
0x4003654	        0x8944240c	              mov dword [rsp + 0xc], eax	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_132
0x4003658	    0x660f6e54240c	           movd xmm2, dword [rsp + 0xc] 	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_132
0x400365e	        0x8974240c	              mov dword [rsp + 0xc], esi	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_132
0x4003662	    0x660f6e44240c	           movd xmm0, dword [rsp + 0xc] 	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_132
0x4003668	        0x897c240c	              mov dword [rsp + 0xc], edi	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_132
0x400366c	    0x660f6e5c240c	           movd xmm3, dword [rsp + 0xc] 	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_132
0x4003672	        0x660f62ca	                    punpckldq xmm1, xmm2	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_132
0x4003676	        0x660f62c3	                    punpckldq xmm0, xmm3	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_132
0x400367a	      0xe9c0fbffff	                           jmp 0x400323f	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_132
0x400367f	              0x90	                                     nop	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_132
0x4003680	          0x83f863	                           cmp eax, 0x63	       951	state.c	FUNCTION_25	SWITCH_3
0x4003683	     0xf84ff020000	                            je 0x4003988	       951	state.c	FUNCTION_25	SWITCH_3
0x4003689	          0x83f864	                           cmp eax, 0x64	       951	state.c	FUNCTION_25	SWITCH_3
0x400368c	     0xf85c7fdffff	                           jne 0x4003459	       951	state.c	FUNCTION_25	SWITCH_3
0x4003692	          0x488b06	                    mov rax, qword [rsi]	      1212	state.c	FUNCTION_25	SWITCH_3	CALL_69
0x4003695	     0xfb693950000	           movzx edx, byte [rbx + 0x95] 	      1214	state.c	FUNCTION_25	SWITCH_3	IF_18
0x400369c	      0x25ffffff7f	                     and eax, 0x7fffffff	      1212	state.c	FUNCTION_25	SWITCH_3	CALL_69
0x40036a1	          0x8d48ff	                      lea ecx, [rax - 1]	      1212	state.c	FUNCTION_25	SWITCH_3	CALL_69
0x40036a4	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1212	state.c	FUNCTION_25	SWITCH_3	CALL_69
0x40036aa	            0x89d6	                            mov esi, edx	      1214	state.c	FUNCTION_25	SWITCH_3	IF_18
0x40036ac	      0xb800000000	                              mov eax, 0	      1214	state.c	FUNCTION_25	SWITCH_3	IF_18
0x40036b1	           0xf44c8	                          cmove ecx, eax	      1214	state.c	FUNCTION_25	SWITCH_3	IF_18
0x40036b4	          0x83e604	                              and esi, 4	      1214	state.c	FUNCTION_25	SWITCH_3	IF_18
0x40036b7	          0x894b30	             mov dword [rbx + 0x30], ecx	      1213	state.c	FUNCTION_25	SWITCH_3
0x40036ba	            0x7406	                            je 0x40036c2	      1214	state.c	FUNCTION_25	SWITCH_3	IF_18
0x40036bc	           0x34b3c	             add ecx, dword [rbx + 0x3c]	      1215	state.c	FUNCTION_25	SWITCH_3	IF_18
0x40036bf	          0x894b30	             mov dword [rbx + 0x30], ecx	      1215	state.c	FUNCTION_25	SWITCH_3	IF_18
0x40036c2	    0xc74338000000	               mov dword [rbx + 0x38], 0	      1216	state.c	FUNCTION_25	SWITCH_3
0x40036c9	            0x89e8	                            mov eax, ebp	       943	state.c	FUNCTION_25
0x40036cb	      0xe97df9ffff	                           jmp 0x400304d	      1217	state.c	FUNCTION_25	SWITCH_3
0x40036d0	          0x83f86a	                           cmp eax, 0x6a	       951	state.c	FUNCTION_25	SWITCH_3
0x40036d3	     0xf84cf050000	                            je 0x4003ca8	       951	state.c	FUNCTION_25	SWITCH_3
0x40036d9	          0x83f86b	                           cmp eax, 0x6b	       951	state.c	FUNCTION_25	SWITCH_3
0x40036dc	     0xf844ef8ffff	                            je 0x4002f30	       951	state.c	FUNCTION_25	SWITCH_3
0x40036e2	      0xe972fdffff	                           jmp 0x4003459	       951	state.c	FUNCTION_25	SWITCH_3
0x40036e7	    0x660f1f840000	                    nop word [rax + rax]	       951	state.c	FUNCTION_25	SWITCH_3
0x40036f0	          0x83f843	                           cmp eax, 0x43	       951	state.c	FUNCTION_25	SWITCH_3
0x40036f3	     0xf84e7fbffff	                            je 0x40032e0	       951	state.c	FUNCTION_25	SWITCH_3
0x40036f9	          0x83f844	                           cmp eax, 0x44	       951	state.c	FUNCTION_25	SWITCH_3
0x40036fc	     0xf8557fdffff	                           jne 0x4003459	       951	state.c	FUNCTION_25	SWITCH_3
0x4003702	          0x488b06	                    mov rax, qword [rsi]	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x4003705	      0x25ffffff7f	                     and eax, 0x7fffffff	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x400370a	    0x483dffffff3f	                     cmp rax, 0x3fffffff	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x4003710	     0xf84b5050000	                            je 0x4003ccb	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x4003716	          0x4885c0	                           test rax, rax	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x4003719	     0xf84ac050000	                            je 0x4003ccb	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x400371f	            0x89ef	                            mov edi, ebp	       990	state.c	FUNCTION_25	SWITCH_3
0x4003721	            0x29c7	                            sub edi, eax	       990	state.c	FUNCTION_25	SWITCH_3
0x4003723	            0x89f8	                            mov eax, edi	       990	state.c	FUNCTION_25	SWITCH_3
0x4003725	      0xe90af9ffff	                           jmp 0x4003034	       990	state.c	FUNCTION_25	SWITCH_3
0x400372a	    0x660f1f440000	                    nop word [rax + rax]	       990	state.c	FUNCTION_25	SWITCH_3
0x4003730	     0xfb683950000	           movzx eax, byte [rbx + 0x95] 	       990	state.c	FUNCTION_25	SWITCH_3
0x4003737	            0xa804	                              test al, 4	      1458	state.c	FUNCTION_25	IF_33
0x4003739	            0x89c2	                            mov edx, eax	      1458	state.c	FUNCTION_25	IF_33
0x400373b	     0xf84b7fdffff	                            je 0x40034f8	      1458	state.c	FUNCTION_25	IF_33
0x4003741	          0x4189e8	                            mov r8d, ebp	       943	state.c	FUNCTION_25
0x4003744	          0x4489f6	                           mov esi, r14d	       943	state.c	FUNCTION_25
0x4003747	      0xe921f9ffff	                           jmp 0x400306d	       943	state.c	FUNCTION_25
0x400374c	         0xf1f4000	                         nop dword [rax]	       943	state.c	FUNCTION_25
0x4003750	          0x83f86d	                           cmp eax, 0x6d	       951	state.c	FUNCTION_25	SWITCH_3
0x4003753	     0xf85c9010000	                           jne 0x4003922	       951	state.c	FUNCTION_25	SWITCH_3
0x4003759	          0x4889df	                            mov rdi, rbx	      1293	state.c	FUNCTION_25	SWITCH_3	CALL_92
0x400375c	      0xe800000000	                          call 0x4003761	      1293	state.c	FUNCTION_25	SWITCH_3	CALL_92
0x4003761	      0xe907f6ffff	                           jmp 0x4002d6d	      1293	state.c	FUNCTION_25	SWITCH_3	CALL_92
0x4003766	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1293	state.c	FUNCTION_25	SWITCH_3	CALL_92
0x4003770	      0x3d633e0000	                         cmp eax, 0x3e63	       951	state.c	FUNCTION_25	SWITCH_3
0x4003775	     0xf85a30a0000	                           jne 0x400421e	       951	state.c	FUNCTION_25	SWITCH_3
0x400377b	          0x488b3b	                    mov rdi, qword [rbx]	      1208	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x400377e	          0x4531c9	                            xor r9d, r9d	      1208	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x4003781	    0x41b864000000	                           mov r8d, 0x64	      1208	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x4003787	            0x31c9	                            xor ecx, ecx	      1208	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x4003789	      0xba00000000	                              mov edx, 0	      1208	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x400378e	      0xbe9b000000	                           mov esi, 0x9b	      1208	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x4003793	            0x31c0	                            xor eax, eax	      1208	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x4003795	      0xe800000000	                          call 0x400379a	      1208	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x400379a	      0xe9cef5ffff	                           jmp 0x4002d6d	      1208	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x400379f	              0x90	                                     nop	      1208	state.c	FUNCTION_25	SWITCH_3	CALL_68
0x40037a0	          0x83f849	                           cmp eax, 0x49	       951	state.c	FUNCTION_25	SWITCH_3
0x40037a3	     0xf85f00b0000	                           jne 0x4004399	       951	state.c	FUNCTION_25	SWITCH_3
0x40037a9	          0x488b36	                    mov rsi, qword [rsi]	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x40037ac	          0x4889f0	                            mov rax, rsi	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x40037af	      0x25ffffff7f	                     and eax, 0x7fffffff	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x40037b4	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x40037ba	     0xf845d0c0000	                            je 0x400441d	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x40037c0	          0x4885c0	                           test rax, rax	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x40037c3	     0xf84540c0000	                            je 0x400441d	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x40037c9	    0x81e6ffffff7f	                     and esi, 0x7fffffff	       187	state.c	FUNCTION_13	WHILE_1
0x40037cf	     0xf840bf8ffff	                            je 0x4002fe0	       187	state.c	FUNCTION_13	WHILE_1
0x40037d5	        0x488b5358	            mov rdx, qword [rbx + 0x58] 	       187	state.c	FUNCTION_13	WHILE_1
0x40037d9	          0x4963c6	                        movsxd rax, r14d	       187	state.c	FUNCTION_13	WHILE_1
0x40037dc	        0xf6048201	              test byte [rdx + rax*4], 1	       187	state.c	FUNCTION_13	WHILE_1
0x40037e0	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x40037e3	     0xf85fb0c0000	                           jne 0x40044e4	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x40037e9	        0x448d40ff	                      lea r8d, [rax - 1]	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x40037ed	    0x41b901000000	                              mov r9d, 1	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x40037f3	            0x89e8	                            mov eax, ebp	       943	state.c	FUNCTION_25
0x40037f5	           0xf1f00	                         nop dword [rax]	       943	state.c	FUNCTION_25
0x40037f8	          0x4139c0	                            cmp r8d, eax	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x40037fb	     0xf8e3df8ffff	                           jle 0x400303e	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x4003801	          0x83c001	                              add eax, 1	       192	state.c	FUNCTION_13	WHILE_1	IF_1
0x4003804	        0x488b7b50	            mov rdi, qword [rbx + 0x50] 	       170	state.c	FUNCTION_11
0x4003808	          0x4589ca	                           mov r10d, r9d	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x400380b	            0x89c2	                            mov edx, eax	       170	state.c	FUNCTION_11
0x400380d	            0x89c1	                            mov ecx, eax	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x400380f	          0x894334	             mov dword [rbx + 0x34], eax	       192	state.c	FUNCTION_13	WHILE_1	IF_1
0x4003812	          0xc1fa03	                              sar edx, 3	       170	state.c	FUNCTION_11
0x4003815	          0x83e107	                              and ecx, 7	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x4003818	          0x4863d2	                         movsxd rdx, edx	       170	state.c	FUNCTION_11
0x400381b	          0x41d3e2	                            shl r10d, cl	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x400381e	        0x44841417	            test byte [rdi + rdx], r10b 	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x4003822	            0x74d4	                            je 0x40037f8	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x4003824	          0x83ee01	                              sub esi, 1	       187	state.c	FUNCTION_13	WHILE_1
0x4003827	            0x75cf	                           jne 0x40037f8	       187	state.c	FUNCTION_13	WHILE_1
0x4003829	      0xe910f8ffff	                           jmp 0x400303e	       187	state.c	FUNCTION_13	WHILE_1
0x400382e	            0x6690	                                     nop	       187	state.c	FUNCTION_13	WHILE_1
0x4003830	          0x488b06	                    mov rax, qword [rsi]	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_32
0x4003833	          0x4889c2	                            mov rdx, rax	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_32
0x4003836	    0x81e2ffffff7f	                     and edx, 0x7fffffff	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_32
0x400383c	    0x4881faffffff	                     cmp rdx, 0x3fffffff	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_32
0x4003843	     0xf840c0c0000	                            je 0x4004455	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_32
0x4003849	          0x4885d2	                           test rdx, rdx	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_32
0x400384c	     0xf84030c0000	                            je 0x4004455	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_32
0x4003852	            0x89c1	                            mov ecx, eax	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_32
0x4003854	    0x81e1ffffff7f	                     and ecx, 0x7fffffff	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_32
0x400385a	          0x8b733c	            mov esi, dword [rbx + 0x3c] 	       175	state.c	FUNCTION_12	IF_1
0x400385d	          0x4139f6	                           cmp r14d, esi	       175	state.c	FUNCTION_12	IF_1
0x4003860	     0xf8ceafaffff	                            jl 0x4003350	       175	state.c	FUNCTION_12	IF_1
0x4003866	        0x448b4b40	            mov r9d, dword [rbx + 0x40] 	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x400386a	          0x4585c9	                           test r9d, r9d	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x400386d	          0x4489cf	                            mov edi, r9d	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x4003870	          0x4489c8	                            mov eax, r9d	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x4003873	     0xf88b1100000	                            js 0x400492a	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x4003879	          0x4139c6	                           cmp r14d, eax	       175	state.c	FUNCTION_12	IF_1
0x400387c	     0xf8daefeffff	                           jge 0x4003730	       175	state.c	FUNCTION_12	IF_1
0x4003882	     0xfb693950000	           movzx edx, byte [rbx + 0x95] 	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4003889	            0x89d6	                            mov esi, edx	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x400388b	            0x89d0	                            mov eax, edx	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x400388d	          0x83e610	                           and esi, 0x10	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4003890	     0xf8429100000	                            je 0x40048bf	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4003896	          0x3b6b44	            cmp ebp, dword [rbx + 0x44] 	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4003899	     0xf8c52090000	                            jl 0x40041f1	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x400389f	          0x8b5348	            mov edx, dword [rbx + 0x48] 	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x40038a2	            0x85d2	                           test edx, edx	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x40038a4	     0xf881d100000	                            js 0x40048c7	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x40038aa	            0x39d5	                            cmp ebp, edx	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x40038ac	     0xf8d85feffff	                           jge 0x4003737	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x40038b2	          0x4585c9	                           test r9d, r9d	      1105	state.c	FUNCTION_25	SWITCH_3	CALL_34
0x40038b5	     0xf88ac100000	                            js 0x4004967	      1105	state.c	FUNCTION_25	SWITCH_3	CALL_34
0x40038bb	          0x4084f6	                           test sil, sil	      1106	state.c	FUNCTION_25	SWITCH_3	CALL_35
0x40038be	     0xf84fa0c0000	                            je 0x40045be	      1106	state.c	FUNCTION_25	SWITCH_3	CALL_35
0x40038c4	          0x8b4348	            mov eax, dword [rbx + 0x48] 	      1107	state.c	FUNCTION_25	SWITCH_3	CALL_36
0x40038c7	      0x660f6e4b44	          movd xmm1, dword [rbx + 0x44] 	      1106	state.c	FUNCTION_25	SWITCH_3	CALL_35
0x40038cc	            0x85c0	                           test eax, eax	      1107	state.c	FUNCTION_25	SWITCH_3	CALL_36
0x40038ce	     0xf88ee0c0000	                            js 0x40045c2	      1107	state.c	FUNCTION_25	SWITCH_3	CALL_36
0x40038d4	        0x8944240c	              mov dword [rsp + 0xc], eax	      1107	state.c	FUNCTION_25	SWITCH_3	CALL_36
0x40038d8	            0xf7d9	                                 neg ecx	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_37
0x40038da	          0x4531c0	                            xor r8d, r8d	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_37
0x40038dd	    0x660f6e6c240c	           movd xmm5, dword [rsp + 0xc] 	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_37
0x40038e3	      0x448974240c	             mov dword [rsp + 0xc], r14d	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_37
0x40038e8	    0x660f6e44240c	           movd xmm0, dword [rsp + 0xc] 	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_37
0x40038ee	        0x897c240c	              mov dword [rsp + 0xc], edi	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_37
0x40038f2	    0x660f6e74240c	           movd xmm6, dword [rsp + 0xc] 	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_37
0x40038f8	        0x660f62cd	                    punpckldq xmm1, xmm5	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_37
0x40038fc	        0x660f62c6	                    punpckldq xmm0, xmm6	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_37
0x4003900	        0x660f6cc1	                   punpcklqdq xmm0, xmm1	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_37
0x4003904	      0x66480f7ec6	                          movq rsi, xmm0	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_37
0x4003909	       0xf29442430	       movaps xmmword [rsp + 0x30], xmm0	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_37
0x400390e	      0xe94df4ffff	                           jmp 0x4002d60	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_37
0x4003913	       0xf1f440000	                   nop dword [rax + rax]	      1109	state.c	FUNCTION_25	SWITCH_3	CALL_37
0x4003918	      0xb901000000	                              mov ecx, 1	       977	state.c	FUNCTION_25	SWITCH_3	CALL_7
0x400391d	      0xe9fdf7ffff	                           jmp 0x400311f	       977	state.c	FUNCTION_25	SWITCH_3	CALL_7
0x4003922	          0x83f86e	                           cmp eax, 0x6e	       951	state.c	FUNCTION_25	SWITCH_3
0x4003925	     0xf852efbffff	                           jne 0x4003459	       951	state.c	FUNCTION_25	SWITCH_3
0x400392b	          0x488b06	                    mov rax, qword [rsi]	      1298	state.c	FUNCTION_25	SWITCH_3	CALL_93
0x400392e	      0x25ffffff7f	                     and eax, 0x7fffffff	      1298	state.c	FUNCTION_25	SWITCH_3	CALL_93
0x4003933	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1298	state.c	FUNCTION_25	SWITCH_3	CALL_93
0x4003939	     0xf84a1f6ffff	                            je 0x4002fe0	      1298	state.c	FUNCTION_25	SWITCH_3	CALL_93
0x400393f	        0x4183fb3f	                          cmp r11d, 0x3f	      1301	state.c	FUNCTION_25	SWITCH_3
0x4003943	      0xb900000000	                              mov ecx, 0	      1301	state.c	FUNCTION_25	SWITCH_3
0x4003948	      0xba00000000	                              mov edx, 0	      1301	state.c	FUNCTION_25	SWITCH_3
0x400394d	        0x480f45ca	                         cmovne rcx, rdx	      1301	state.c	FUNCTION_25	SWITCH_3
0x4003951	          0x83f805	                              cmp eax, 5	      1303	state.c	FUNCTION_25	SWITCH_3	SWITCH_7
0x4003954	     0xf842f0c0000	                            je 0x4004589	      1303	state.c	FUNCTION_25	SWITCH_3	SWITCH_7
0x400395a	          0x83f806	                              cmp eax, 6	      1303	state.c	FUNCTION_25	SWITCH_3	SWITCH_7
0x400395d	     0xf857df6ffff	                           jne 0x4002fe0	      1303	state.c	FUNCTION_25	SWITCH_3	SWITCH_7
0x4003963	          0x488b3b	                    mov rdi, qword [rbx]	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_95
0x4003966	        0x448d4d01	                      lea r9d, [rbp + 1]	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_95
0x400396a	        0x458d4601	                      lea r8d, [r14 + 1]	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_95
0x400396e	      0xba00000000	                              mov edx, 0	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_95
0x4003973	      0xbe9b000000	                           mov esi, 0x9b	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_95
0x4003978	            0x31c0	                            xor eax, eax	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_95
0x400397a	      0xe800000000	                          call 0x400397f	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_95
0x400397f	      0xe9e9f3ffff	                           jmp 0x4002d6d	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_95
0x4003984	         0xf1f4000	                         nop dword [rax]	      1311	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_95
0x4003988	          0x488b06	                    mov rax, qword [rsi]	      1200	state.c	FUNCTION_25	SWITCH_3	CALL_66
0x400398b	          0x4889c2	                            mov rdx, rax	      1200	state.c	FUNCTION_25	SWITCH_3	CALL_66
0x400398e	    0x81e2ffffff7f	                     and edx, 0x7fffffff	      1200	state.c	FUNCTION_25	SWITCH_3	CALL_66
0x4003994	    0x4881faffffff	                     cmp rdx, 0x3fffffff	      1200	state.c	FUNCTION_25	SWITCH_3	CALL_66
0x400399b	            0x740b	                            je 0x40039a8	      1200	state.c	FUNCTION_25	SWITCH_3	CALL_66
0x400399d	      0xa9ffffff7f	                    test eax, 0x7fffffff	      1201	state.c	FUNCTION_25	SWITCH_3	IF_17
0x40039a2	     0xf8538f6ffff	                           jne 0x4002fe0	      1201	state.c	FUNCTION_25	SWITCH_3	IF_17
0x40039a8	          0x488b3b	                    mov rdi, qword [rbx]	      1203	state.c	FUNCTION_25	SWITCH_3	CALL_67
0x40039ab	      0xba00000000	                              mov edx, 0	      1203	state.c	FUNCTION_25	SWITCH_3	CALL_67
0x40039b0	      0xbe9b000000	                           mov esi, 0x9b	      1203	state.c	FUNCTION_25	SWITCH_3	CALL_67
0x40039b5	            0x31c0	                            xor eax, eax	      1203	state.c	FUNCTION_25	SWITCH_3	CALL_67
0x40039b7	      0xe800000000	                          call 0x40039bc	      1203	state.c	FUNCTION_25	SWITCH_3	CALL_67
0x40039bc	      0xe9acf3ffff	                           jmp 0x4002d6d	      1203	state.c	FUNCTION_25	SWITCH_3	CALL_67
0x40039c1	     0xf1f80000000	                         nop dword [rax]	      1203	state.c	FUNCTION_25	SWITCH_3	CALL_67
0x40039c8	          0x488b06	                    mov rax, qword [rsi]	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x40039cb	      0x25ffffff7f	                     and eax, 0x7fffffff	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x40039d0	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x40039d6	     0xf845b0a0000	                            je 0x4004437	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x40039dc	          0x4885c0	                           test rax, rax	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x40039df	     0xf84520a0000	                            je 0x4004437	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x40039e5	        0x488b4b58	            mov rcx, qword [rbx + 0x58] 	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x40039e9	          0x4963d6	                        movsxd rdx, r14d	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x40039ec	             0x1e8	                            add eax, ebp	      1176	state.c	FUNCTION_25	SWITCH_3
0x40039ee	        0x418d7e01	                      lea edi, [r14 + 1]	      1174	state.c	FUNCTION_25	SWITCH_3
0x40039f2	        0xf6049101	              test byte [rcx + rdx*4], 1	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x40039f6	        0x897c240c	              mov dword [rsp + 0xc], edi	      1174	state.c	FUNCTION_25	SWITCH_3
0x40039fa	     0xf84270a0000	                            je 0x4004427	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4003a00	          0x8b532c	            mov edx, dword [rbx + 0x2c] 	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4003a03	            0x89d1	                            mov ecx, edx	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4003a05	          0xc1e91f	                           shr ecx, 0x1f	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4003a08	             0x1ca	                            add edx, ecx	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4003a0a	            0xd1fa	                              sar edx, 1	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4003a0c	            0x39c2	                            cmp edx, eax	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4003a0e	           0xf4ec2	                         cmovle eax, edx	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4003a11	        0x89442410	             mov dword [rsp + 0x10], eax	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4003a15	    0x660f6e542410	          movd xmm2, dword [rsp + 0x10] 	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4003a1b	        0x896c2420	             mov dword [rsp + 0x20], ebp	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4003a1f	      0x4489742410	            mov dword [rsp + 0x10], r14d	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4003a24	    0x660f6e4c2420	          movd xmm1, dword [rsp + 0x20] 	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4003a2a	    0x660f6e442410	          movd xmm0, dword [rsp + 0x10] 	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4003a30	        0x488b4308	                mov rax, qword [rbx + 8]	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4003a34	    0x660f6e5c240c	           movd xmm3, dword [rsp + 0xc] 	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4003a3a	        0x660f62ca	                    punpckldq xmm1, xmm2	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4003a3e	        0x660f62c3	                    punpckldq xmm0, xmm3	      1177	state.c	FUNCTION_25	SWITCH_3	CALL_60
0x4003a42	          0x4885c0	                           test rax, rax	        47	state.c	FUNCTION_3	IF_1
0x4003a45	        0x660f6cc1	                   punpcklqdq xmm0, xmm1	        47	state.c	FUNCTION_3	IF_1
0x4003a49	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	        47	state.c	FUNCTION_3	IF_1
0x4003a4e	     0xf848cf5ffff	                            je 0x4002fe0	        47	state.c	FUNCTION_3	IF_1
0x4003a54	        0x488b4020	            mov rax, qword [rax + 0x20] 	        47	state.c	FUNCTION_3	IF_1
0x4003a58	          0x4885c0	                           test rax, rax	        47	state.c	FUNCTION_3	IF_1
0x4003a5b	     0xf847ff5ffff	                            je 0x4002fe0	        47	state.c	FUNCTION_3	IF_1
0x4003a61	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4003a65	            0x31d2	                            xor edx, edx	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4003a67	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4003a6c	      0x488b742458	            mov rsi, qword [rsp + 0x58] 	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4003a71	            0xffd0	                                call rax	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4003a73	      0xe9f5f2ffff	                           jmp 0x4002d6d	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4003a78	     0xf1f84000000	                   nop dword [rax + rax]	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4003a80	            0x31f6	                            xor esi, esi	      1319	state.c	FUNCTION_25	SWITCH_3	CALL_96
0x4003a82	          0x4889df	                            mov rdi, rbx	      1319	state.c	FUNCTION_25	SWITCH_3	CALL_96
0x4003a85	      0xe800000000	                          call 0x4003a8a	      1319	state.c	FUNCTION_25	SWITCH_3	CALL_96
0x4003a8a	      0xe9def2ffff	                           jmp 0x4002d6d	      1319	state.c	FUNCTION_25	SWITCH_3	CALL_96
0x4003a8f	              0x90	                                     nop	      1319	state.c	FUNCTION_25	SWITCH_3	CALL_96
0x4003a90	          0x488b06	                    mov rax, qword [rsi]	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_28
0x4003a93	      0x25ffffff7f	                     and eax, 0x7fffffff	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_28
0x4003a98	        0x4883f801	                              cmp rax, 1	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_28
0x4003a9c	     0xf84240d0000	                            je 0x40047c6	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_28
0x4003aa2	     0xf8e020d0000	                           jle 0x40047aa	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_28
0x4003aa8	        0x4883f802	                              cmp rax, 2	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_28
0x4003aac	     0xf84d40c0000	                            je 0x4004786	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_28
0x4003ab2	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_28
0x4003ab8	     0xf856af3ffff	                           jne 0x4002e28	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_28
0x4003abe	        0x488b5358	            mov rdx, qword [rbx + 0x58] 	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_29
0x4003ac2	          0x4963c6	                        movsxd rax, r14d	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_29
0x4003ac5	        0xf6048201	              test byte [rdx + rax*4], 1	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_29
0x4003ac9	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_29
0x4003acc	            0x89ea	                            mov edx, ebp	       943	state.c	FUNCTION_25
0x4003ace	            0x740b	                            je 0x4003adb	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_29
0x4003ad0	            0x89c2	                            mov edx, eax	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_29
0x4003ad2	          0xc1ea1f	                           shr edx, 0x1f	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_29
0x4003ad5	             0x1d0	                            add eax, edx	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_29
0x4003ad7	            0x89ea	                            mov edx, ebp	       943	state.c	FUNCTION_25
0x4003ad9	            0xd1f8	                              sar eax, 1	      1084	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_29
0x4003adb	            0x39d0	                            cmp eax, edx	      1093	state.c	FUNCTION_25	SWITCH_3	IF_12
0x4003add	     0xf8efdf4ffff	                           jle 0x4002fe0	      1093	state.c	FUNCTION_25	SWITCH_3	IF_12
0x4003ae3	        0x488b7308	                mov rsi, qword [rbx + 8]	      1093	state.c	FUNCTION_25	SWITCH_3	IF_12
0x4003ae7	        0x418d4e01	                      lea ecx, [r14 + 1]	      1093	state.c	FUNCTION_25	SWITCH_3	IF_12
0x4003aeb	        0x48c1e020	                           shl rax, 0x20	      1093	state.c	FUNCTION_25	SWITCH_3	IF_12
0x4003aef	          0x4489f7	                           mov edi, r14d	      1093	state.c	FUNCTION_25	SWITCH_3	IF_12
0x4003af2	          0x4809d0	                             or rax, rdx	      1093	state.c	FUNCTION_25	SWITCH_3	IF_12
0x4003af5	        0x48c1e120	                           shl rcx, 0x20	      1093	state.c	FUNCTION_25	SWITCH_3	IF_12
0x4003af9	          0x4809cf	                             or rdi, rcx	      1093	state.c	FUNCTION_25	SWITCH_3	IF_12
0x4003afc	          0x4885f6	                           test rsi, rsi	        47	state.c	FUNCTION_3	IF_1
0x4003aff	     0xf84dbf4ffff	                            je 0x4002fe0	        47	state.c	FUNCTION_3	IF_1
0x4003b05	        0x4c8b4620	              mov r8, qword [rsi + 0x20]	        47	state.c	FUNCTION_3	IF_1
0x4003b09	          0x4d85c0	                             test r8, r8	        47	state.c	FUNCTION_3	IF_1
0x4003b0c	     0xf84cef4ffff	                            je 0x4002fe0	        47	state.c	FUNCTION_3	IF_1
0x4003b12	            0x31d2	                            xor edx, edx	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4003b14	        0x4183fb3f	                          cmp r11d, 0x3f	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4003b18	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4003b1c	           0xf94c2	                                 sete dl	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4003b1f	          0x4889c6	                            mov rsi, rax	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4003b22	          0x41ffd0	                                 call r8	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4003b25	      0xe943f2ffff	                           jmp 0x4002d6d	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4003b2a	    0x660f1f440000	                    nop word [rax + rax]	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4003b30	          0x488b06	                    mov rax, qword [rsi]	      1327	state.c	FUNCTION_25	SWITCH_3	CALL_99
0x4003b33	          0x4889c2	                            mov rdx, rax	      1327	state.c	FUNCTION_25	SWITCH_3	CALL_99
0x4003b36	    0x81e2ffffff7f	                     and edx, 0x7fffffff	      1327	state.c	FUNCTION_25	SWITCH_3	CALL_99
0x4003b3c	    0x4881faffffff	                     cmp rdx, 0x3fffffff	      1327	state.c	FUNCTION_25	SWITCH_3	CALL_99
0x4003b43	     0xf84010e0000	                            je 0x400494a	      1327	state.c	FUNCTION_25	SWITCH_3	CALL_99
0x4003b49	      0x25ffffff7f	                     and eax, 0x7fffffff	      1329	state.c	FUNCTION_25	SWITCH_3	SWITCH_8
0x4003b4e	          0x83f806	                              cmp eax, 6	      1329	state.c	FUNCTION_25	SWITCH_3	SWITCH_8
0x4003b51	     0xf8789f4ffff	                            ja 0x4002fe0	      1329	state.c	FUNCTION_25	SWITCH_3	SWITCH_8
0x4003b57	    0xff24c5000000	                       jmp qword [rax*8]	      1329	state.c	FUNCTION_25	SWITCH_3	SWITCH_8
0x4003b5e	    0xc74424500100	               mov dword [rsp + 0x50], 1	       519	state.c	FUNCTION_17
0x4003b66	      0x488d542450	                   lea rdx, [rsp + 0x50]	       520	state.c	FUNCTION_17	CALL_1
0x4003b6b	          0x4889df	                            mov rdi, rbx	       520	state.c	FUNCTION_17	CALL_1
0x4003b6e	      0xbe02000000	                              mov esi, 2	       520	state.c	FUNCTION_17	CALL_1
0x4003b73	      0xe800000000	                          call 0x4003b78	       520	state.c	FUNCTION_17	CALL_1
0x4003b78	      0x488d542450	                   lea rdx, [rsp + 0x50]	       527	state.c	FUNCTION_18	CALL_1
0x4003b7d	      0xbe07000000	                              mov esi, 7	       527	state.c	FUNCTION_18	CALL_1
0x4003b82	          0x4889df	                            mov rdi, rbx	       527	state.c	FUNCTION_18	CALL_1
0x4003b85	    0xc74424500300	               mov dword [rsp + 0x50], 3	       526	state.c	FUNCTION_18
0x4003b8d	      0xe800000000	                          call 0x4003b92	       527	state.c	FUNCTION_18	CALL_1
0x4003b92	      0xe9d6f1ffff	                           jmp 0x4002d6d	       527	state.c	FUNCTION_18	CALL_1
0x4003b97	    0xc74424500000	               mov dword [rsp + 0x50], 0	       519	state.c	FUNCTION_17
0x4003b9f	      0x488d542450	                   lea rdx, [rsp + 0x50]	       520	state.c	FUNCTION_17	CALL_1
0x4003ba4	          0x4889df	                            mov rdi, rbx	       520	state.c	FUNCTION_17	CALL_1
0x4003ba7	      0xbe02000000	                              mov esi, 2	       520	state.c	FUNCTION_17	CALL_1
0x4003bac	      0xe800000000	                          call 0x4003bb1	       520	state.c	FUNCTION_17	CALL_1
0x4003bb1	      0x488d542450	                   lea rdx, [rsp + 0x50]	       527	state.c	FUNCTION_18	CALL_1
0x4003bb6	      0xbe07000000	                              mov esi, 7	       527	state.c	FUNCTION_18	CALL_1
0x4003bbb	          0x4889df	                            mov rdi, rbx	       527	state.c	FUNCTION_18	CALL_1
0x4003bbe	    0xc74424500200	               mov dword [rsp + 0x50], 2	       526	state.c	FUNCTION_18
0x4003bc6	      0xe800000000	                          call 0x4003bcb	       527	state.c	FUNCTION_18	CALL_1
0x4003bcb	      0xe99df1ffff	                           jmp 0x4002d6d	       527	state.c	FUNCTION_18	CALL_1
0x4003bd0	    0xc74424500100	               mov dword [rsp + 0x50], 1	       519	state.c	FUNCTION_17
0x4003bd8	            0xebc5	                           jmp 0x4003b9f	       519	state.c	FUNCTION_17
0x4003bda	    0xc74424500000	               mov dword [rsp + 0x50], 0	       519	state.c	FUNCTION_17
0x4003be2	      0x488d542450	                   lea rdx, [rsp + 0x50]	       520	state.c	FUNCTION_17	CALL_1
0x4003be7	          0x4889df	                            mov rdi, rbx	       520	state.c	FUNCTION_17	CALL_1
0x4003bea	      0xbe02000000	                              mov esi, 2	       520	state.c	FUNCTION_17	CALL_1
0x4003bef	      0xe800000000	                          call 0x4003bf4	       520	state.c	FUNCTION_17	CALL_1
0x4003bf4	      0x488d542450	                   lea rdx, [rsp + 0x50]	       527	state.c	FUNCTION_18	CALL_1
0x4003bf9	      0xbe07000000	                              mov esi, 7	       527	state.c	FUNCTION_18	CALL_1
0x4003bfe	          0x4889df	                            mov rdi, rbx	       527	state.c	FUNCTION_18	CALL_1
0x4003c01	    0xc74424500100	               mov dword [rsp + 0x50], 1	       526	state.c	FUNCTION_18
0x4003c09	      0xe800000000	                          call 0x4003c0e	       527	state.c	FUNCTION_18	CALL_1
0x4003c0e	      0xe95af1ffff	                           jmp 0x4002d6d	       527	state.c	FUNCTION_18	CALL_1
0x4003c13	    0xc74424500000	               mov dword [rsp + 0x50], 0	       519	state.c	FUNCTION_17
0x4003c1b	      0xe946ffffff	                           jmp 0x4003b66	       519	state.c	FUNCTION_17
0x4003c20	          0x488b0e	                    mov rcx, qword [rsi]	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x4003c23	          0x4889c8	                            mov rax, rcx	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x4003c26	      0x25ffffff7f	                     and eax, 0x7fffffff	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x4003c2b	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x4003c31	     0xf840a080000	                            je 0x4004441	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x4003c37	    0x81e1ffffff7f	                     and ecx, 0x7fffffff	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x4003c3d	          0x4885c0	                           test rax, rax	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x4003c40	     0xf84fb070000	                            je 0x4004441	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x4003c46	          0x8b4340	            mov eax, dword [rbx + 0x40] 	      1150	state.c	FUNCTION_25	SWITCH_3	CALL_50
0x4003c49	      0x660f6e433c	          movd xmm0, dword [rbx + 0x3c] 	      1149	state.c	FUNCTION_25	SWITCH_3
0x4003c4e	            0x85c0	                           test eax, eax	      1150	state.c	FUNCTION_25	SWITCH_3	CALL_50
0x4003c50	     0xf8874090000	                            js 0x40045ca	      1150	state.c	FUNCTION_25	SWITCH_3	CALL_50
0x4003c56	    0xf68395000000	           test byte [rbx + 0x95], 0x10 	      1151	state.c	FUNCTION_25	SWITCH_3	CALL_51
0x4003c5d	     0xf84af050000	                            je 0x4004212	      1151	state.c	FUNCTION_25	SWITCH_3	CALL_51
0x4003c63	          0x8b5348	            mov edx, dword [rbx + 0x48] 	      1152	state.c	FUNCTION_25	SWITCH_3	CALL_52
0x4003c66	      0x660f6e4b44	          movd xmm1, dword [rbx + 0x44] 	      1151	state.c	FUNCTION_25	SWITCH_3	CALL_51
0x4003c6b	            0x85d2	                           test edx, edx	      1152	state.c	FUNCTION_25	SWITCH_3	CALL_52
0x4003c6d	     0xf88a3050000	                            js 0x4004216	      1152	state.c	FUNCTION_25	SWITCH_3	CALL_52
0x4003c73	        0x8954240c	              mov dword [rsp + 0xc], edx	      1152	state.c	FUNCTION_25	SWITCH_3	CALL_52
0x4003c77	          0x4531c0	                            xor r8d, r8d	      1154	state.c	FUNCTION_25	SWITCH_3	CALL_53
0x4003c7a	    0x660f6e64240c	           movd xmm4, dword [rsp + 0xc] 	      1154	state.c	FUNCTION_25	SWITCH_3	CALL_53
0x4003c80	        0x8944240c	              mov dword [rsp + 0xc], eax	      1154	state.c	FUNCTION_25	SWITCH_3	CALL_53
0x4003c84	    0x660f6e6c240c	           movd xmm5, dword [rsp + 0xc] 	      1154	state.c	FUNCTION_25	SWITCH_3	CALL_53
0x4003c8a	        0x660f62cc	                    punpckldq xmm1, xmm4	      1154	state.c	FUNCTION_25	SWITCH_3	CALL_53
0x4003c8e	        0x660f62c5	                    punpckldq xmm0, xmm5	      1154	state.c	FUNCTION_25	SWITCH_3	CALL_53
0x4003c92	        0x660f6cc1	                   punpcklqdq xmm0, xmm1	      1154	state.c	FUNCTION_25	SWITCH_3	CALL_53
0x4003c96	      0x66480f7ec6	                          movq rsi, xmm0	      1154	state.c	FUNCTION_25	SWITCH_3	CALL_53
0x4003c9b	       0xf29442430	       movaps xmmword [rsp + 0x30], xmm0	      1154	state.c	FUNCTION_25	SWITCH_3	CALL_53
0x4003ca0	      0xe9bbf0ffff	                           jmp 0x4002d60	      1154	state.c	FUNCTION_25	SWITCH_3	CALL_53
0x4003ca5	           0xf1f00	                         nop dword [rax]	      1154	state.c	FUNCTION_25	SWITCH_3	CALL_53
0x4003ca8	          0x488b06	                    mov rax, qword [rsi]	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_84
0x4003cab	          0x4889c2	                            mov rdx, rax	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_84
0x4003cae	    0x81e2ffffff7f	                     and edx, 0x7fffffff	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_84
0x4003cb4	    0x4881faffffff	                     cmp rdx, 0x3fffffff	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_84
0x4003cbb	            0x740e	                            je 0x4003ccb	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_84
0x4003cbd	      0x25ffffff7f	                     and eax, 0x7fffffff	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_84
0x4003cc2	          0x4885d2	                           test rdx, rdx	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_84
0x4003cc5	     0xf8554faffff	                           jne 0x400371f	      1271	state.c	FUNCTION_25	SWITCH_3	CALL_84
0x4003ccb	      0xb801000000	                              mov eax, 1	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x4003cd0	      0xe94afaffff	                           jmp 0x400371f	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x4003cd5	           0xf1f00	                         nop dword [rax]	       989	state.c	FUNCTION_25	SWITCH_3	CALL_9
0x4003cd8	          0x4c8b06	                     mov r8, qword [rsi]	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x4003cdb	          0x4c89c0	                             mov rax, r8	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x4003cde	      0x25ffffff7f	                     and eax, 0x7fffffff	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x4003ce3	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x4003ce9	     0xf84ea070000	                            je 0x40044d9	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x4003cef	    0x4181e0ffffff	                     and r8d, 0x7fffffff	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x4003cf6	          0x4885c0	                           test rax, rax	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x4003cf9	     0xf84da070000	                            je 0x40044d9	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x4003cff	          0x8b733c	            mov esi, dword [rbx + 0x3c] 	       175	state.c	FUNCTION_12	IF_1
0x4003d02	          0x4139f6	                           cmp r14d, esi	       175	state.c	FUNCTION_12	IF_1
0x4003d05	     0xf8c45f6ffff	                            jl 0x4003350	       175	state.c	FUNCTION_12	IF_1
0x4003d0b	        0x448b4b40	            mov r9d, dword [rbx + 0x40] 	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x4003d0f	          0x4585c9	                           test r9d, r9d	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x4003d12	          0x4489cf	                            mov edi, r9d	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x4003d15	          0x4489c8	                            mov eax, r9d	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x4003d18	     0xf88040c0000	                            js 0x4004922	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x4003d1e	          0x4139c6	                           cmp r14d, eax	       175	state.c	FUNCTION_12	IF_1
0x4003d21	     0xf8d09faffff	                           jge 0x4003730	       175	state.c	FUNCTION_12	IF_1
0x4003d27	     0xfb693950000	           movzx edx, byte [rbx + 0x95] 	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4003d2e	            0x89d1	                            mov ecx, edx	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4003d30	            0x89d0	                            mov eax, edx	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4003d32	          0x83e110	                           and ecx, 0x10	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4003d35	     0xf84d00a0000	                            je 0x400480b	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4003d3b	          0x3b6b44	            cmp ebp, dword [rbx + 0x44] 	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4003d3e	     0xf8cad040000	                            jl 0x40041f1	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4003d44	          0x8b5348	            mov edx, dword [rbx + 0x48] 	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x4003d47	            0x85d2	                           test edx, edx	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x4003d49	     0xf88c40a0000	                            js 0x4004813	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x4003d4f	            0x39d5	                            cmp ebp, edx	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4003d51	     0xf8de0f9ffff	                           jge 0x4003737	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4003d57	          0x4585c9	                           test r9d, r9d	      1427	state.c	FUNCTION_25	SWITCH_3	CALL_126
0x4003d5a	     0xf88ff0b0000	                            js 0x400495f	      1427	state.c	FUNCTION_25	SWITCH_3	CALL_126
0x4003d60	            0x84c9	                             test cl, cl	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x4003d62	     0xf843a080000	                            je 0x40045a2	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x4003d68	          0x8b4348	            mov eax, dword [rbx + 0x48] 	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x4003d6b	            0x85c0	                           test eax, eax	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x4003d6d	     0xf882f080000	                            js 0x40045a2	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x4003d73	        0x896c240c	              mov dword [rsp + 0xc], ebp	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x4003d77	          0x41f7d8	                                 neg r8d	      1431	state.c	FUNCTION_25	SWITCH_3	CALL_128
0x4003d7a	            0x31c9	                            xor ecx, ecx	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x4003d7c	    0x660f6e4c240c	           movd xmm1, dword [rsp + 0xc] 	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x4003d82	        0x8944240c	              mov dword [rsp + 0xc], eax	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x4003d86	    0x660f6e74240c	           movd xmm6, dword [rsp + 0xc] 	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x4003d8c	        0x8974240c	              mov dword [rsp + 0xc], esi	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x4003d90	    0x660f6e44240c	           movd xmm0, dword [rsp + 0xc] 	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x4003d96	        0x897c240c	              mov dword [rsp + 0xc], edi	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x4003d9a	    0x660f6e7c240c	           movd xmm7, dword [rsp + 0xc] 	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x4003da0	        0x660f62ce	                    punpckldq xmm1, xmm6	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x4003da4	        0x660f62c7	                    punpckldq xmm0, xmm7	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x4003da8	        0x660f6cc1	                   punpcklqdq xmm0, xmm1	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x4003dac	      0x66480f7ec6	                          movq rsi, xmm0	      1431	state.c	FUNCTION_25	SWITCH_3	CALL_128
0x4003db1	       0xf29442430	       movaps xmmword [rsp + 0x30], xmm0	      1431	state.c	FUNCTION_25	SWITCH_3	CALL_128
0x4003db6	      0xe9a5efffff	                           jmp 0x4002d60	      1431	state.c	FUNCTION_25	SWITCH_3	CALL_128
0x4003dbb	       0xf1f440000	                   nop dword [rax + rax]	      1431	state.c	FUNCTION_25	SWITCH_3	CALL_128
0x4003dc0	      0xb801000000	                              mov eax, 1	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_85
0x4003dc5	      0xe983f1ffff	                           jmp 0x4002f4d	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_85
0x4003dca	    0x660f1f440000	                    nop word [rax + rax]	      1277	state.c	FUNCTION_25	SWITCH_3	CALL_85
0x4003dd0	          0x488b06	                    mov rax, qword [rsi]	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_113
0x4003dd3	      0x25ffffff7f	                     and eax, 0x7fffffff	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_113
0x4003dd8	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_113
0x4003dde	     0xf84c3050000	                            je 0x40043a7	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_113
0x4003de4	          0x8d48ff	                      lea ecx, [rax - 1]	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_113
0x4003de7	          0x83fa01	                              cmp edx, 1	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x4003dea	      0xb8ffffffff	                     mov eax, 0xffffffff	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x4003def	          0x894b3c	             mov dword [rbx + 0x3c], ecx	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_113
0x4003df2	            0x7e1d	                           jle 0x4003e11	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x4003df4	        0x488b5608	                mov rdx, qword [rsi + 8]	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x4003df8	          0x4889d6	                            mov rsi, rdx	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x4003dfb	    0x81e6ffffff7f	                     and esi, 0x7fffffff	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x4003e01	    0x4881feffffff	                     cmp rsi, 0x3fffffff	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x4003e08	            0x7407	                            je 0x4003e11	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x4003e0a	            0x89d0	                            mov eax, edx	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x4003e0c	      0x25ffffff7f	                     and eax, 0x7fffffff	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x4003e11	          0x83f9ff	             cmp ecx, 0xffffffffffffffff	      1375	state.c	FUNCTION_25	SWITCH_3
0x4003e14	          0x894340	             mov dword [rbx + 0x40], eax	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x4003e17	     0xf84d4070000	                            je 0x40045f1	      1375	state.c	FUNCTION_25	SWITCH_3
0x4003e1d	          0x8b4b3c	            mov ecx, dword [rbx + 0x3c] 	      1376	state.c	FUNCTION_25	SWITCH_3
0x4003e20	          0x8b5328	            mov edx, dword [rbx + 0x28] 	      1376	state.c	FUNCTION_25	SWITCH_3
0x4003e23	            0x39d1	                            cmp ecx, edx	      1376	state.c	FUNCTION_25	SWITCH_3
0x4003e25	            0x7e05	                           jle 0x4003e2c	      1376	state.c	FUNCTION_25	SWITCH_3
0x4003e27	          0x89533c	             mov dword [rbx + 0x3c], edx	      1376	state.c	FUNCTION_25	SWITCH_3
0x4003e2a	            0x89d1	                            mov ecx, edx	      1376	state.c	FUNCTION_25	SWITCH_3
0x4003e2c	            0x85c9	                           test ecx, ecx	      1378	state.c	FUNCTION_25	SWITCH_3	IF_24
0x4003e2e	     0xf84b3050000	                            je 0x40043e7	      1378	state.c	FUNCTION_25	SWITCH_3	IF_24
0x4003e34	            0x39c2	                            cmp edx, eax	      1381	state.c	FUNCTION_25	SWITCH_3	ELSE_3
0x4003e36	            0x7d05	                           jge 0x4003e3d	      1381	state.c	FUNCTION_25	SWITCH_3	ELSE_3
0x4003e38	          0x895340	             mov dword [rbx + 0x40], edx	      1381	state.c	FUNCTION_25	SWITCH_3	ELSE_3
0x4003e3b	            0x89d0	                            mov eax, edx	      1381	state.c	FUNCTION_25	SWITCH_3	ELSE_3
0x4003e3d	            0x85c0	                           test eax, eax	      1381	state.c	FUNCTION_25	SWITCH_3	ELSE_3
0x4003e3f	           0xf48c2	                          cmovs eax, edx	      1381	state.c	FUNCTION_25	SWITCH_3	ELSE_3
0x4003e42	            0x39c8	                            cmp eax, ecx	      1383	state.c	FUNCTION_25	SWITCH_3	IF_25	CALL_116
0x4003e44	     0xf8f23efffff	                            jg 0x4002d6d	      1383	state.c	FUNCTION_25	SWITCH_3	IF_25	CALL_116
0x4003e4a	    0xc7433c000000	               mov dword [rbx + 0x3c], 0	      1385	state.c	FUNCTION_25	SWITCH_3	IF_25
0x4003e51	    0xc74340ffffff	     mov dword [rbx + 0x40], 0xffffffff 	      1386	state.c	FUNCTION_25	SWITCH_3	IF_25
0x4003e58	      0xe910efffff	                           jmp 0x4002d6d	      1386	state.c	FUNCTION_25	SWITCH_3	IF_25
0x4003e5d	           0xf1f00	                         nop dword [rax]	      1386	state.c	FUNCTION_25	SWITCH_3	IF_25
0x4003e60	          0x488b0e	                    mov rcx, qword [rsi]	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x4003e63	    0x81e1ffffff7f	                     and ecx, 0x7fffffff	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x4003e69	    0x4881f9ffffff	                     cmp rcx, 0x3fffffff	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x4003e70	     0xf8487050000	                            je 0x40043fd	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x4003e76	          0x4885c9	                           test rcx, rcx	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x4003e79	     0xf847e050000	                            je 0x40043fd	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x4003e7f	    0xc74334000000	               mov dword [rbx + 0x34], 0	       996	state.c	FUNCTION_25	SWITCH_3
0x4003e86	          0x4401f1	                           add ecx, r14d	       997	state.c	FUNCTION_25	SWITCH_3
0x4003e89	     0xfb693950000	           movzx edx, byte [rbx + 0x95] 	       997	state.c	FUNCTION_25	SWITCH_3
0x4003e90	          0x894b30	             mov dword [rbx + 0x30], ecx	      1004	state.c	FUNCTION_25	SWITCH_3
0x4003e93	            0x31c0	                            xor eax, eax	      1006	state.c	FUNCTION_25	SWITCH_3
0x4003e95	    0xc74338000000	               mov dword [rbx + 0x38], 0	      1005	state.c	FUNCTION_25	SWITCH_3
0x4003e9c	            0x89d6	                            mov esi, edx	      1005	state.c	FUNCTION_25	SWITCH_3
0x4003e9e	          0x83e604	                              and esi, 4	      1005	state.c	FUNCTION_25	SWITCH_3
0x4003ea1	      0xe9a7f1ffff	                           jmp 0x400304d	      1006	state.c	FUNCTION_25	SWITCH_3
0x4003ea6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1006	state.c	FUNCTION_25	SWITCH_3
0x4003eb0	          0x488b06	                    mov rax, qword [rsi]	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_117
0x4003eb3	          0x4889c1	                            mov rcx, rax	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_117
0x4003eb6	    0x81e1ffffff7f	                     and ecx, 0x7fffffff	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_117
0x4003ebc	    0x4881f9ffffff	                     cmp rcx, 0x3fffffff	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_117
0x4003ec3	     0xf84aa050000	                            je 0x4004473	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_117
0x4003ec9	      0x25ffffff7f	                     and eax, 0x7fffffff	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_117
0x4003ece	      0xb9ffffffff	                     mov ecx, 0xffffffff	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x4003ed3	          0x83e801	                              sub eax, 1	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_117
0x4003ed6	          0x83fa01	                              cmp edx, 1	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x4003ed9	          0x894344	             mov dword [rbx + 0x44], eax	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_117
0x4003edc	            0x7e1e	                           jle 0x4003efc	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x4003ede	        0x488b5608	                mov rdx, qword [rsi + 8]	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x4003ee2	          0x4889d6	                            mov rsi, rdx	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x4003ee5	    0x81e6ffffff7f	                     and esi, 0x7fffffff	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x4003eeb	    0x4881feffffff	                     cmp rsi, 0x3fffffff	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x4003ef2	            0x7408	                            je 0x4003efc	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x4003ef4	            0x89d1	                            mov ecx, edx	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x4003ef6	    0x81e1ffffff7f	                     and ecx, 0x7fffffff	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x4003efc	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1395	state.c	FUNCTION_25	SWITCH_3
0x4003eff	          0x894b48	             mov dword [rbx + 0x48], ecx	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x4003f02	     0xf84d2060000	                            je 0x40045da	      1395	state.c	FUNCTION_25	SWITCH_3
0x4003f08	          0x8b5344	            mov edx, dword [rbx + 0x44] 	      1396	state.c	FUNCTION_25	SWITCH_3
0x4003f0b	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	      1396	state.c	FUNCTION_25	SWITCH_3
0x4003f0e	            0x39c2	                            cmp edx, eax	      1396	state.c	FUNCTION_25	SWITCH_3
0x4003f10	            0x7e05	                           jle 0x4003f17	      1396	state.c	FUNCTION_25	SWITCH_3
0x4003f12	          0x894344	             mov dword [rbx + 0x44], eax	      1396	state.c	FUNCTION_25	SWITCH_3
0x4003f15	            0x89c2	                            mov edx, eax	      1396	state.c	FUNCTION_25	SWITCH_3
0x4003f17	            0x85d2	                           test edx, edx	      1398	state.c	FUNCTION_25	SWITCH_3	IF_26
0x4003f19	     0xf8496050000	                            je 0x40044b5	      1398	state.c	FUNCTION_25	SWITCH_3	IF_26
0x4003f1f	            0x39c8	                            cmp eax, ecx	      1401	state.c	FUNCTION_25	SWITCH_3	ELSE_4
0x4003f21	            0x7d05	                           jge 0x4003f28	      1401	state.c	FUNCTION_25	SWITCH_3	ELSE_4
0x4003f23	          0x894348	             mov dword [rbx + 0x48], eax	      1401	state.c	FUNCTION_25	SWITCH_3	ELSE_4
0x4003f26	            0x89c1	                            mov ecx, eax	      1401	state.c	FUNCTION_25	SWITCH_3	ELSE_4
0x4003f28	            0x85c9	                           test ecx, ecx	      1403	state.c	FUNCTION_25	SWITCH_3	IF_27
0x4003f2a	     0xf883deeffff	                            js 0x4002d6d	      1403	state.c	FUNCTION_25	SWITCH_3	IF_27
0x4003f30	            0x39ca	                            cmp edx, ecx	      1403	state.c	FUNCTION_25	SWITCH_3	IF_27
0x4003f32	     0xf8c35eeffff	                            jl 0x4002d6d	      1403	state.c	FUNCTION_25	SWITCH_3	IF_27
0x4003f38	    0xc74344000000	               mov dword [rbx + 0x44], 0	      1406	state.c	FUNCTION_25	SWITCH_3	IF_27
0x4003f3f	    0xc74348ffffff	     mov dword [rbx + 0x48], 0xffffffff 	      1407	state.c	FUNCTION_25	SWITCH_3	IF_27
0x4003f46	      0xe922eeffff	                           jmp 0x4002d6d	      1407	state.c	FUNCTION_25	SWITCH_3	IF_27
0x4003f4b	       0xf1f440000	                   nop dword [rax + rax]	      1407	state.c	FUNCTION_25	SWITCH_3	IF_27
0x4003f50	          0x488b36	                    mov rsi, qword [rsi]	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_62
0x4003f53	          0x4889f0	                            mov rax, rsi	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_62
0x4003f56	      0x25ffffff7f	                     and eax, 0x7fffffff	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_62
0x4003f5b	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_62
0x4003f61	     0xf8402050000	                            je 0x4004469	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_62
0x4003f67	          0x4885c0	                           test rax, rax	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_62
0x4003f6a	     0xf84f9040000	                            je 0x4004469	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_62
0x4003f70	    0x81e6ffffff7f	                     and esi, 0x7fffffff	       187	state.c	FUNCTION_13	WHILE_1
0x4003f76	     0xf8464f0ffff	                            je 0x4002fe0	       187	state.c	FUNCTION_13	WHILE_1
0x4003f7c	            0x85ed	                           test ebp, ebp	       195	state.c	FUNCTION_13	WHILE_1	ELSE_1	IF_3	IF_4
0x4003f7e	     0xf8e5cf0ffff	                           jle 0x4002fe0	       195	state.c	FUNCTION_13	WHILE_1	ELSE_1	IF_3	IF_4
0x4003f84	        0x4c8b4350	              mov r8, qword [rbx + 0x50]	       195	state.c	FUNCTION_13	WHILE_1	ELSE_1	IF_3	IF_4
0x4003f88	            0x89e8	                            mov eax, ebp	       195	state.c	FUNCTION_13	WHILE_1	ELSE_1	IF_3	IF_4
0x4003f8a	      0xbf01000000	                              mov edi, 1	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x4003f8f	            0xeb0f	                           jmp 0x4003fa0	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x4003f91	     0xf1f80000000	                         nop dword [rax]	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x4003f98	            0x85c0	                           test eax, eax	       195	state.c	FUNCTION_13	WHILE_1	ELSE_1	IF_3	IF_4
0x4003f9a	     0xf849ef0ffff	                            je 0x400303e	       195	state.c	FUNCTION_13	WHILE_1	ELSE_1	IF_3	IF_4
0x4003fa0	          0x83e801	                              sub eax, 1	       198	state.c	FUNCTION_13	WHILE_1	ELSE_1	IF_3
0x4003fa3	          0x4189ff	                           mov r15d, edi	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x4003fa6	            0x89c2	                            mov edx, eax	       170	state.c	FUNCTION_11
0x4003fa8	            0x89c1	                            mov ecx, eax	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x4003faa	          0x894334	             mov dword [rbx + 0x34], eax	       198	state.c	FUNCTION_13	WHILE_1	ELSE_1	IF_3
0x4003fad	          0xc1fa03	                              sar edx, 3	       170	state.c	FUNCTION_11
0x4003fb0	          0x83e107	                              and ecx, 7	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x4003fb3	          0x4863d2	                         movsxd rdx, edx	       170	state.c	FUNCTION_11
0x4003fb6	          0x41d3e7	                            shl r15d, cl	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x4003fb9	        0x45843c10	              test byte [r8 + rdx], r15b	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x4003fbd	            0x74d9	                            je 0x4003f98	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x4003fbf	          0x83ee01	                              sub esi, 1	       187	state.c	FUNCTION_13	WHILE_1
0x4003fc2	            0x75d4	                           jne 0x4003f98	       187	state.c	FUNCTION_13	WHILE_1
0x4003fc4	      0xe975f0ffff	                           jmp 0x400303e	       187	state.c	FUNCTION_13	WHILE_1
0x4003fc9	     0xf1f80000000	                         nop dword [rax]	       187	state.c	FUNCTION_13	WHILE_1
0x4003fd0	          0x488b06	                    mov rax, qword [rsi]	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x4003fd3	          0x4889c2	                            mov rdx, rax	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x4003fd6	    0x81e2ffffff7f	                     and edx, 0x7fffffff	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x4003fdc	    0x4881faffffff	                     cmp rdx, 0x3fffffff	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x4003fe3	     0xf8476040000	                            je 0x400445f	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x4003fe9	      0x25ffffff7f	                     and eax, 0x7fffffff	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x4003fee	          0x4885d2	                           test rdx, rdx	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x4003ff1	     0xf8468040000	                            je 0x400445f	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x4003ff7	          0x4489f1	                           mov ecx, r14d	      1004	state.c	FUNCTION_25	SWITCH_3
0x4003ffa	    0xc74334000000	               mov dword [rbx + 0x34], 0	      1003	state.c	FUNCTION_25	SWITCH_3
0x4004001	            0x29c1	                            sub ecx, eax	      1004	state.c	FUNCTION_25	SWITCH_3
0x4004003	      0xe981feffff	                           jmp 0x4003e89	      1004	state.c	FUNCTION_25	SWITCH_3
0x4004008	     0xf1f84000000	                   nop dword [rax + rax]	      1004	state.c	FUNCTION_25	SWITCH_3
0x4004010	          0x488b06	                    mov rax, qword [rsi]	      1015	state.c	FUNCTION_25	SWITCH_3	CALL_13
0x4004013	      0x25ffffff7f	                     and eax, 0x7fffffff	      1015	state.c	FUNCTION_25	SWITCH_3	CALL_13
0x4004018	          0x8d48ff	                      lea ecx, [rax - 1]	      1015	state.c	FUNCTION_25	SWITCH_3	CALL_13
0x400401b	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1015	state.c	FUNCTION_25	SWITCH_3	CALL_13
0x4004021	      0xb800000000	                              mov eax, 0	      1015	state.c	FUNCTION_25	SWITCH_3	CALL_13
0x4004026	           0xf44c8	                          cmove ecx, eax	      1015	state.c	FUNCTION_25	SWITCH_3	CALL_13
0x4004029	          0x83fa01	                              cmp edx, 1	      1016	state.c	FUNCTION_25	SWITCH_3	CALL_15
0x400402c	            0x7e17	                           jle 0x4004045	      1016	state.c	FUNCTION_25	SWITCH_3	CALL_15
0x400402e	        0x488b5608	                mov rdx, qword [rsi + 8]	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_73
0x4004032	    0x81e2ffffff7f	                     and edx, 0x7fffffff	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_73
0x4004038	          0x8d72ff	                      lea esi, [rdx - 1]	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_73
0x400403b	    0x4881faffffff	                     cmp rdx, 0x3fffffff	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_73
0x4004042	           0xf45c6	                         cmovne eax, esi	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_73
0x4004045	     0xfb693950000	           movzx edx, byte [rbx + 0x95] 	      1231	state.c	FUNCTION_25	SWITCH_3	IF_19
0x400404c	          0x894b30	             mov dword [rbx + 0x30], ecx	      1229	state.c	FUNCTION_25	SWITCH_3
0x400404f	          0x894334	             mov dword [rbx + 0x34], eax	      1230	state.c	FUNCTION_25	SWITCH_3
0x4004052	            0x89d6	                            mov esi, edx	      1231	state.c	FUNCTION_25	SWITCH_3	IF_19
0x4004054	          0x83e604	                              and esi, 4	      1231	state.c	FUNCTION_25	SWITCH_3	IF_19
0x4004057	            0x7415	                            je 0x400406e	      1231	state.c	FUNCTION_25	SWITCH_3	IF_19
0x4004059	           0x34b3c	             add ecx, dword [rbx + 0x3c]	      1232	state.c	FUNCTION_25	SWITCH_3	IF_19
0x400405c	            0x31ff	                            xor edi, edi	      1233	state.c	FUNCTION_25	SWITCH_3	IF_19	CALL_74
0x400405e	          0xf6c210	                           test dl, 0x10	      1233	state.c	FUNCTION_25	SWITCH_3	IF_19	CALL_74
0x4004061	          0x894b30	             mov dword [rbx + 0x30], ecx	      1232	state.c	FUNCTION_25	SWITCH_3	IF_19
0x4004064	            0x7403	                            je 0x4004069	      1233	state.c	FUNCTION_25	SWITCH_3	IF_19	CALL_74
0x4004066	          0x8b7b44	            mov edi, dword [rbx + 0x44] 	      1233	state.c	FUNCTION_25	SWITCH_3	IF_19	CALL_74
0x4004069	             0x1f8	                            add eax, edi	      1233	state.c	FUNCTION_25	SWITCH_3	IF_19	CALL_74
0x400406b	          0x894334	             mov dword [rbx + 0x34], eax	      1233	state.c	FUNCTION_25	SWITCH_3	IF_19	CALL_74
0x400406e	    0xc74338000000	               mov dword [rbx + 0x38], 0	      1235	state.c	FUNCTION_25	SWITCH_3
0x4004075	      0xe9d3efffff	                           jmp 0x400304d	      1236	state.c	FUNCTION_25	SWITCH_3
0x400407a	    0x660f1f440000	                    nop word [rax + rax]	      1236	state.c	FUNCTION_25	SWITCH_3
0x4004080	          0x488b06	                    mov rax, qword [rsi]	      1283	state.c	FUNCTION_25	SWITCH_3	IF_22	CALL_86
0x4004083	      0x25ffffff7f	                     and eax, 0x7fffffff	      1283	state.c	FUNCTION_25	SWITCH_3	IF_22	CALL_86
0x4004088	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1283	state.c	FUNCTION_25	SWITCH_3	IF_22	CALL_86
0x400408e	     0xf844cefffff	                            je 0x4002fe0	      1283	state.c	FUNCTION_25	SWITCH_3	IF_22	CALL_86
0x4004094	          0x83f804	                              cmp eax, 4	       713	state.c	FUNCTION_22	SWITCH_1
0x4004097	     0xf8433070000	                            je 0x40047d0	       713	state.c	FUNCTION_22	SWITCH_1
0x400409d	          0x83f814	                           cmp eax, 0x14	       713	state.c	FUNCTION_22	SWITCH_1
0x40040a0	     0xf853aefffff	                           jne 0x4002fe0	       713	state.c	FUNCTION_22	SWITCH_1
0x40040a6	    0x80a394000000	             and byte [rbx + 0x94], 0xef	       719	state.c	FUNCTION_22	SWITCH_1
0x40040ad	      0xe92eefffff	                           jmp 0x4002fe0	       719	state.c	FUNCTION_22	SWITCH_1
0x40040b2	    0x660f1f440000	                    nop word [rax + rax]	       719	state.c	FUNCTION_22	SWITCH_1
0x40040b8	          0x488b06	                    mov rax, qword [rsi]	      1226	state.c	FUNCTION_25	SWITCH_3	CALL_71
0x40040bb	            0x31c9	                            xor ecx, ecx	      1226	state.c	FUNCTION_25	SWITCH_3	CALL_71
0x40040bd	          0x4889c7	                            mov rdi, rax	      1226	state.c	FUNCTION_25	SWITCH_3	CALL_71
0x40040c0	    0x81e7ffffff7f	                     and edi, 0x7fffffff	      1226	state.c	FUNCTION_25	SWITCH_3	CALL_71
0x40040c6	    0x4881ffffffff	                     cmp rdi, 0x3fffffff	      1226	state.c	FUNCTION_25	SWITCH_3	CALL_71
0x40040cd	            0x7408	                            je 0x40040d7	      1226	state.c	FUNCTION_25	SWITCH_3	CALL_71
0x40040cf	      0x25ffffff7f	                     and eax, 0x7fffffff	      1226	state.c	FUNCTION_25	SWITCH_3	CALL_71
0x40040d4	          0x8d48ff	                      lea ecx, [rax - 1]	      1226	state.c	FUNCTION_25	SWITCH_3	CALL_71
0x40040d7	            0x31c0	                            xor eax, eax	      1226	state.c	FUNCTION_25	SWITCH_3	CALL_71
0x40040d9	          0x83fa01	                              cmp edx, 1	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_73
0x40040dc	     0xf8f4cffffff	                            jg 0x400402e	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_73
0x40040e2	      0xe95effffff	                           jmp 0x4004045	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_73
0x40040e7	    0x660f1f840000	                    nop word [rax + rax]	      1227	state.c	FUNCTION_25	SWITCH_3	CALL_73
0x40040f0	          0x4c8b06	                     mov r8, qword [rsi]	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x40040f3	          0x4c89c0	                             mov rax, r8	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x40040f6	      0x25ffffff7f	                     and eax, 0x7fffffff	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x40040fb	    0x483dffffff3f	                     cmp rax, 0x3fffffff	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x4004101	     0xf8400030000	                            je 0x4004407	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x4004107	    0x4181e0ffffff	                     and r8d, 0x7fffffff	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x400410e	          0x4885c0	                           test rax, rax	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x4004111	     0xf84f0020000	                            je 0x4004407	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x4004117	          0x8b733c	            mov esi, dword [rbx + 0x3c] 	       175	state.c	FUNCTION_12	IF_1
0x400411a	          0x4139f6	                           cmp r14d, esi	       175	state.c	FUNCTION_12	IF_1
0x400411d	     0xf8c2df2ffff	                            jl 0x4003350	       175	state.c	FUNCTION_12	IF_1
0x4004123	        0x448b4b40	            mov r9d, dword [rbx + 0x40] 	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x4004127	          0x4585c9	                           test r9d, r9d	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x400412a	          0x4489cf	                            mov edi, r9d	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x400412d	          0x4489c8	                            mov eax, r9d	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x4004130	     0xf8804080000	                            js 0x400493a	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x4004136	          0x4139c6	                           cmp r14d, eax	       175	state.c	FUNCTION_12	IF_1
0x4004139	     0xf8df1f5ffff	                           jge 0x4003730	       175	state.c	FUNCTION_12	IF_1
0x400413f	     0xfb693950000	           movzx edx, byte [rbx + 0x95] 	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4004146	          0xf6c210	                           test dl, 0x10	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4004149	            0x89d0	                            mov eax, edx	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x400414b	     0xf84da060000	                            je 0x400482b	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4004151	          0x3b6b44	            cmp ebp, dword [rbx + 0x44] 	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4004154	     0xf8c95000000	                            jl 0x40041ef	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x400415a	          0x8b4b48	            mov ecx, dword [rbx + 0x48] 	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x400415d	            0x85c9	                           test ecx, ecx	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x400415f	     0xf886c090000	                            js 0x4004ad1	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x4004165	            0x39cd	                            cmp ebp, ecx	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4004167	     0xf8d82000000	                           jge 0x40041ef	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x400416d	        0x418d4601	                      lea eax, [r14 + 1]	       959	state.c	FUNCTION_25	SWITCH_3
0x4004171	        0x8944240c	              mov dword [rsp + 0xc], eax	       959	state.c	FUNCTION_25	SWITCH_3
0x4004175	    0x660f6e44240c	           movd xmm0, dword [rsp + 0xc] 	       959	state.c	FUNCTION_25	SWITCH_3
0x400417b	        0x894c240c	              mov dword [rsp + 0xc], ecx	       962	state.c	FUNCTION_25	SWITCH_3	CALL_3
0x400417f	    0x660f6e64240c	           movd xmm4, dword [rsp + 0xc] 	       962	state.c	FUNCTION_25	SWITCH_3	CALL_3
0x4004185	      0x448974240c	             mov dword [rsp + 0xc], r14d	       962	state.c	FUNCTION_25	SWITCH_3	CALL_3
0x400418a	          0x41f7d8	                                 neg r8d	       966	state.c	FUNCTION_25	SWITCH_3	CALL_5
0x400418d	    0x660f6e54240c	           movd xmm2, dword [rsp + 0xc] 	       966	state.c	FUNCTION_25	SWITCH_3	CALL_5
0x4004193	        0x896c2410	             mov dword [rsp + 0x10], ebp	       966	state.c	FUNCTION_25	SWITCH_3	CALL_5
0x4004197	            0x31c9	                            xor ecx, ecx	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x4004199	    0x660f6e4c2410	          movd xmm1, dword [rsp + 0x10] 	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x400419f	        0x660f62d0	                    punpckldq xmm2, xmm0	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x40041a3	        0x660f62cc	                    punpckldq xmm1, xmm4	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x40041a7	        0x660f6fc2	                       movdqa xmm0, xmm2	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x40041ab	        0x660f6cc1	                   punpcklqdq xmm0, xmm1	      1446	state.c	FUNCTION_25	SWITCH_3	CALL_133
0x40041af	      0x66480f7ec6	                          movq rsi, xmm0	       966	state.c	FUNCTION_25	SWITCH_3	CALL_5
0x40041b4	       0xf29442430	       movaps xmmword [rsp + 0x30], xmm0	       966	state.c	FUNCTION_25	SWITCH_3	CALL_5
0x40041b9	      0xe9a2ebffff	                           jmp 0x4002d60	       966	state.c	FUNCTION_25	SWITCH_3	CALL_5
0x40041be	            0x6690	                                     nop	       966	state.c	FUNCTION_25	SWITCH_3	CALL_5
0x40041c0	          0x488b36	                    mov rsi, qword [rsi]	      1266	state.c	FUNCTION_25	SWITCH_3	IF_21	CALL_81
0x40041c3	          0x4889f0	                            mov rax, rsi	      1266	state.c	FUNCTION_25	SWITCH_3	IF_21	CALL_81
0x40041c6	      0x25ffffff7f	                     and eax, 0x7fffffff	      1266	state.c	FUNCTION_25	SWITCH_3	IF_21	CALL_81
0x40041cb	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1266	state.c	FUNCTION_25	SWITCH_3	IF_21	CALL_81
0x40041d1	     0xf8409eeffff	                            je 0x4002fe0	      1266	state.c	FUNCTION_25	SWITCH_3	IF_21	CALL_81
0x40041d7	    0x81e6ffffff7f	                     and esi, 0x7fffffff	      1267	state.c	FUNCTION_25	SWITCH_3	CALL_83
0x40041dd	      0xba01000000	                              mov edx, 1	      1267	state.c	FUNCTION_25	SWITCH_3	CALL_83
0x40041e2	          0x4889df	                            mov rdi, rbx	      1267	state.c	FUNCTION_25	SWITCH_3	CALL_83
0x40041e5	      0xe876d8ffff	                   call sym.set_dec_mode	      1267	state.c	FUNCTION_25	SWITCH_3	CALL_83
0x40041ea	      0xe97eebffff	                           jmp 0x4002d6d	      1267	state.c	FUNCTION_25	SWITCH_3	CALL_83
0x40041ef	            0x89d0	                            mov eax, edx	      1267	state.c	FUNCTION_25	SWITCH_3	CALL_83
0x40041f1	          0x83e004	                              and eax, 4	      1267	state.c	FUNCTION_25	SWITCH_3	CALL_83
0x40041f4	            0x84c0	                             test al, al	      1458	state.c	FUNCTION_25	IF_33
0x40041f6	     0xf84fcf2ffff	                            je 0x40034f8	      1458	state.c	FUNCTION_25	IF_33
0x40041fc	            0x89e8	                            mov eax, ebp	      1458	state.c	FUNCTION_25	IF_33
0x40041fe	          0x4489f1	                           mov ecx, r14d	      1458	state.c	FUNCTION_25	IF_33
0x4004201	      0xe95feeffff	                           jmp 0x4003065	      1458	state.c	FUNCTION_25	IF_33
0x4004206	        0x660fefc9	                         pxor xmm1, xmm1	      1163	state.c	FUNCTION_25	SWITCH_3	CALL_56
0x400420a	          0x8b532c	            mov edx, dword [rbx + 0x2c] 	      1164	state.c	FUNCTION_25	SWITCH_3	CALL_57
0x400420d	      0xe956f3ffff	                           jmp 0x4003568	      1164	state.c	FUNCTION_25	SWITCH_3	CALL_57
0x4004212	        0x660fefc9	                         pxor xmm1, xmm1	      1151	state.c	FUNCTION_25	SWITCH_3	CALL_51
0x4004216	          0x8b532c	            mov edx, dword [rbx + 0x2c] 	      1152	state.c	FUNCTION_25	SWITCH_3	CALL_52
0x4004219	      0xe955faffff	                           jmp 0x4003c73	      1152	state.c	FUNCTION_25	SWITCH_3	CALL_52
0x400421e	      0x3d4a3f0000	                         cmp eax, 0x3f4a	       951	state.c	FUNCTION_25	SWITCH_3
0x4004223	     0xf8530f2ffff	                           jne 0x4003459	       951	state.c	FUNCTION_25	SWITCH_3
0x4004229	            0x31c0	                            xor eax, eax	      1034	state.c	FUNCTION_25	SWITCH_3
0x400422b	        0x4183fb3f	                          cmp r11d, 0x3f	      1034	state.c	FUNCTION_25	SWITCH_3
0x400422f	           0xf94c0	                                 sete al	      1034	state.c	FUNCTION_25	SWITCH_3
0x4004232	        0x8944240c	              mov dword [rsp + 0xc], eax	      1034	state.c	FUNCTION_25	SWITCH_3
0x4004236	          0x488b06	                    mov rax, qword [rsi]	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_19
0x4004239	      0x25ffffff7f	                     and eax, 0x7fffffff	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_19
0x400423e	        0x4883f801	                              cmp rax, 1	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_19
0x4004242	     0xf84c0030000	                            je 0x4004608	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_19
0x4004248	     0xf8e6a050000	                           jle 0x40047b8	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_19
0x400424e	        0x4883f802	                              cmp rax, 2	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_19
0x4004252	     0xf849c040000	                            je 0x40046f4	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_19
0x4004258	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_19
0x400425e	     0xf857cedffff	                           jne 0x4002fe0	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_19
0x4004264	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	      1039	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4004267	        0x458d6e01	                     lea r13d, [r14 + 1]	      1038	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x400426b	            0x39c5	                            cmp ebp, eax	      1040	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_8
0x400426d	        0x89442420	             mov dword [rsp + 0x20], eax	      1039	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4004271	     0xf8d96060000	                           jge 0x400490d	      1040	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_8
0x4004277	      0x4489742410	            mov dword [rsp + 0x10], r14d	      1040	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_8
0x400427c	    0x660f6e6c2420	          movd xmm5, dword [rsp + 0x20] 	      1040	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_8
0x4004282	    0x660f6e442410	          movd xmm0, dword [rsp + 0x10] 	      1040	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_8
0x4004288	      0x44896c2410	            mov dword [rsp + 0x10], r13d	      1040	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_8
0x400428d	    0x660f6e642410	          movd xmm4, dword [rsp + 0x10] 	      1040	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_8
0x4004293	        0x896c2410	             mov dword [rsp + 0x10], ebp	      1040	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_8
0x4004297	    0x660f6e4c2410	          movd xmm1, dword [rsp + 0x10] 	      1040	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_8
0x400429d	        0x488b4308	                mov rax, qword [rbx + 8]	      1040	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_8
0x40042a1	        0x660f62c4	                    punpckldq xmm0, xmm4	      1040	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_8
0x40042a5	        0x660f62cd	                    punpckldq xmm1, xmm5	      1040	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_8
0x40042a9	          0x4885c0	                           test rax, rax	        47	state.c	FUNCTION_3	IF_1
0x40042ac	        0x660f6cc1	                   punpcklqdq xmm0, xmm1	        47	state.c	FUNCTION_3	IF_1
0x40042b0	       0xf29442440	       movaps xmmword [rsp + 0x40], xmm0	        47	state.c	FUNCTION_3	IF_1
0x40042b5	     0xf8452060000	                            je 0x400490d	        47	state.c	FUNCTION_3	IF_1
0x40042bb	        0x488b4020	            mov rax, qword [rax + 0x20] 	        47	state.c	FUNCTION_3	IF_1
0x40042bf	          0x4885c0	                           test rax, rax	        47	state.c	FUNCTION_3	IF_1
0x40042c2	     0xf8445060000	                            je 0x400490d	        47	state.c	FUNCTION_3	IF_1
0x40042c8	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	        48	state.c	FUNCTION_3	IF_1	IF_2
0x40042cc	        0x8b54240c	              mov edx, dword [rsp + 0xc]	        48	state.c	FUNCTION_3	IF_1	IF_2
0x40042d0	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	        48	state.c	FUNCTION_3	IF_1	IF_2
0x40042d5	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	        48	state.c	FUNCTION_3	IF_1	IF_2
0x40042da	            0xffd0	                                call rax	        48	state.c	FUNCTION_3	IF_1	IF_2
0x40042dc	          0x8b4b30	            mov ecx, dword [rbx + 0x30] 	        48	state.c	FUNCTION_3	IF_1	IF_2
0x40042df	          0x8d4101	                      lea eax, [rcx + 1]	        48	state.c	FUNCTION_3	IF_1	IF_2
0x40042e2	        0x89442410	             mov dword [rsp + 0x10], eax	        48	state.c	FUNCTION_3	IF_1	IF_2
0x40042e6	        0x448b6328	           mov r12d, dword [rbx + 0x28] 	      1043	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x40042ea	      0x443b642410	           cmp r12d, dword [rsp + 0x10] 	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x40042ef	     0xf8e2b080000	                           jle 0x4004b20	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x40042f5	      0x4c63442410	          movsxd r8, dword [rsp + 0x10] 	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x40042fa	        0x488b7358	            mov rsi, qword [rbx + 0x58] 	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x40042fe	        0x488b4b08	                mov rcx, qword [rbx + 8]	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x4004302	    0x4e8d2c850000	                         lea r13, [r8*4]	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x400430a	          0x4589c7	                           mov r15d, r8d	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x400430d	           0xf1f00	                         nop dword [rax]	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x4004310	        0x4a8d142e	                    lea rdx, [rsi + r13]	       218	state.c	FUNCTION_14
0x4004314	            0x8b02	                    mov eax, dword [rdx]	       218	state.c	FUNCTION_14
0x4004316	        0x89442450	             mov dword [rsp + 0x50], eax	       218	state.c	FUNCTION_14
0x400431a	          0x83e0f8	                     and eax, 0xfffffff8	       227	state.c	FUNCTION_14	IF_3
0x400431d	          0x4885c9	                           test rcx, rcx	       233	state.c	FUNCTION_14	IF_6
0x4004320	        0x88442450	               mov byte [rsp + 0x50], al	       227	state.c	FUNCTION_14	IF_3
0x4004324	            0x7423	                            je 0x4004349	       233	state.c	FUNCTION_14	IF_6
0x4004326	        0x488b4150	            mov rax, qword [rcx + 0x50] 	       234	state.c	FUNCTION_14	IF_6
0x400432a	          0x4885c0	                           test rax, rax	       233	state.c	FUNCTION_14	IF_6
0x400432d	            0x741a	                            je 0x4004349	       233	state.c	FUNCTION_14	IF_6
0x400432f	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       235	state.c	FUNCTION_14	IF_6
0x4004333	      0x488d742450	                   lea rsi, [rsp + 0x50]	       235	state.c	FUNCTION_14	IF_6
0x4004338	          0x4489ff	                           mov edi, r15d	       235	state.c	FUNCTION_14	IF_6
0x400433b	            0xffd0	                                call rax	       235	state.c	FUNCTION_14	IF_6
0x400433d	        0x488b7358	            mov rsi, qword [rbx + 0x58] 	       235	state.c	FUNCTION_14	IF_6
0x4004341	        0x488b4b08	                mov rcx, qword [rbx + 8]	       235	state.c	FUNCTION_14	IF_6
0x4004345	        0x4a8d142e	                    lea rdx, [rsi + r13]	       235	state.c	FUNCTION_14	IF_6
0x4004349	        0x8b442450	            mov eax, dword [rsp + 0x50] 	       237	state.c	FUNCTION_14	IF_6
0x400434d	        0x4183c701	                             add r15d, 1	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x4004351	        0x4983c504	                              add r13, 4	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x4004355	          0x4539fc	                          cmp r12d, r15d	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x4004358	            0x8902	                    mov dword [rdx], eax	       237	state.c	FUNCTION_14	IF_6
0x400435a	            0x75b4	                           jne 0x4004310	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x400435c	      0x448b6c2410	           mov r13d, dword [rsp + 0x10] 	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x4004361	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x4004366	        0x49c1e420	                           shl r12, 0x20	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x400436a	        0x48c1e620	                           shl rsi, 0x20	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x400436e	          0x4c89ef	                            mov rdi, r13	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x4004371	          0x4c09e7	                             or rdi, r12	      1045	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_1
0x4004374	          0x4885c9	                           test rcx, rcx	        47	state.c	FUNCTION_3	IF_1
0x4004377	     0xf84f0e9ffff	                            je 0x4002d6d	        47	state.c	FUNCTION_3	IF_1
0x400437d	        0x488b4120	            mov rax, qword [rcx + 0x20] 	        47	state.c	FUNCTION_3	IF_1
0x4004381	          0x4885c0	                           test rax, rax	        47	state.c	FUNCTION_3	IF_1
0x4004384	     0xf84e3e9ffff	                            je 0x4002d6d	        47	state.c	FUNCTION_3	IF_1
0x400438a	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	        48	state.c	FUNCTION_3	IF_1	IF_2
0x400438e	        0x8b54240c	              mov edx, dword [rsp + 0xc]	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4004392	            0xffd0	                                call rax	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4004394	      0xe9d4e9ffff	                           jmp 0x4002d6d	        48	state.c	FUNCTION_3	IF_1	IF_2
0x4004399	          0x83f84a	                           cmp eax, 0x4a	       951	state.c	FUNCTION_25	SWITCH_3
0x400439c	     0xf8487feffff	                            je 0x4004229	       951	state.c	FUNCTION_25	SWITCH_3
0x40043a2	      0xe9b2f0ffff	                           jmp 0x4003459	       951	state.c	FUNCTION_25	SWITCH_3
0x40043a7	          0x83fa01	                              cmp edx, 1	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x40043aa	    0xc7433c000000	               mov dword [rbx + 0x3c], 0	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_113
0x40043b1	     0xf8ec7050000	                           jle 0x400497e	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x40043b7	        0x488b5608	                mov rdx, qword [rsi + 8]	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x40043bb	            0x31c9	                            xor ecx, ecx	      1373	state.c	FUNCTION_25	SWITCH_3	CALL_113
0x40043bd	          0x4889d0	                            mov rax, rdx	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x40043c0	      0x25ffffff7f	                     and eax, 0x7fffffff	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x40043c5	    0x483dffffff3f	                     cmp rax, 0x3fffffff	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x40043cb	     0xf8539faffff	                           jne 0x4003e0a	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x40043d1	          0x8b5328	            mov edx, dword [rbx + 0x28] 	      1376	state.c	FUNCTION_25	SWITCH_3
0x40043d4	          0x83c8ff	                      or eax, 0xffffffff	      1376	state.c	FUNCTION_25	SWITCH_3
0x40043d7	          0x3b533c	            cmp edx, dword [rbx + 0x3c] 	      1376	state.c	FUNCTION_25	SWITCH_3
0x40043da	    0xc74340ffffff	     mov dword [rbx + 0x40], 0xffffffff 	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x40043e1	     0xf8c40faffff	                            jl 0x4003e27	      1376	state.c	FUNCTION_25	SWITCH_3
0x40043e7	            0x31c9	                            xor ecx, ecx	      1376	state.c	FUNCTION_25	SWITCH_3
0x40043e9	            0x39c2	                            cmp edx, eax	      1378	state.c	FUNCTION_25	SWITCH_3	IF_24
0x40043eb	     0xf8543faffff	                           jne 0x4003e34	      1378	state.c	FUNCTION_25	SWITCH_3	IF_24
0x40043f1	    0xc74340ffffff	     mov dword [rbx + 0x40], 0xffffffff 	      1379	state.c	FUNCTION_25	SWITCH_3	IF_24
0x40043f8	      0xe945faffff	                           jmp 0x4003e42	      1379	state.c	FUNCTION_25	SWITCH_3	IF_24
0x40043fd	      0xb901000000	                              mov ecx, 1	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x4004402	      0xe978faffff	                           jmp 0x4003e7f	       995	state.c	FUNCTION_25	SWITCH_3	CALL_10
0x4004407	    0x41b801000000	                              mov r8d, 1	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x400440d	      0xe905fdffff	                           jmp 0x4004117	       953	state.c	FUNCTION_25	SWITCH_3	CALL_1
0x4004412	    0x41b801000000	                              mov r8d, 1	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x4004418	      0xe993edffff	                           jmp 0x40031b0	      1129	state.c	FUNCTION_25	SWITCH_3	CALL_44
0x400441d	      0xbe01000000	                              mov esi, 1	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x4004422	      0xe9aef3ffff	                           jmp 0x40037d5	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x4004427	          0x39432c	            cmp dword [rbx + 0x2c], eax 	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x400442a	         0xf4e432c	          cmovle eax, dword [rbx + 0x2c]	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x400442e	        0x89442410	             mov dword [rsp + 0x10], eax	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x4004432	      0xe9def5ffff	                           jmp 0x4003a15	      1028	state.c	FUNCTION_25	SWITCH_3	CALL_17
0x4004437	      0xb801000000	                              mov eax, 1	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x400443c	      0xe9a4f5ffff	                           jmp 0x40039e5	      1171	state.c	FUNCTION_25	SWITCH_3	CALL_59
0x4004441	      0xb901000000	                              mov ecx, 1	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x4004446	      0xe9fbf7ffff	                           jmp 0x4003c46	      1147	state.c	FUNCTION_25	SWITCH_3	CALL_49
0x400444b	      0xb901000000	                              mov ecx, 1	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x4004450	      0xe958e8ffff	                           jmp 0x4002cad	      1114	state.c	FUNCTION_25	SWITCH_3	CALL_38
0x4004455	      0xb901000000	                              mov ecx, 1	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_32
0x400445a	      0xe9fbf3ffff	                           jmp 0x400385a	      1099	state.c	FUNCTION_25	SWITCH_3	CALL_32
0x400445f	      0xb801000000	                              mov eax, 1	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x4004464	      0xe98efbffff	                           jmp 0x4003ff7	      1002	state.c	FUNCTION_25	SWITCH_3	CALL_11
0x4004469	      0xbe01000000	                              mov esi, 1	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_62
0x400446e	      0xe909fbffff	                           jmp 0x4003f7c	      1183	state.c	FUNCTION_25	SWITCH_3	CALL_62
0x4004473	          0x83fa01	                              cmp edx, 1	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x4004476	    0xc74344000000	               mov dword [rbx + 0x44], 0	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_117
0x400447d	     0xf8e0a050000	                           jle 0x400498d	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x4004483	        0x488b5608	                mov rdx, qword [rsi + 8]	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x4004487	            0x31c0	                            xor eax, eax	      1393	state.c	FUNCTION_25	SWITCH_3	CALL_117
0x4004489	          0x4889d1	                            mov rcx, rdx	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x400448c	    0x81e1ffffff7f	                     and ecx, 0x7fffffff	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x4004492	    0x4881f9ffffff	                     cmp rcx, 0x3fffffff	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x4004499	     0xf8555faffff	                           jne 0x4003ef4	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x400449f	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	      1396	state.c	FUNCTION_25	SWITCH_3
0x40044a2	          0x83c9ff	                      or ecx, 0xffffffff	      1396	state.c	FUNCTION_25	SWITCH_3
0x40044a5	    0xc74348ffffff	     mov dword [rbx + 0x48], 0xffffffff 	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x40044ac	          0x83f800	                              cmp eax, 0	      1396	state.c	FUNCTION_25	SWITCH_3
0x40044af	     0xf8c5dfaffff	                            jl 0x4003f12	      1396	state.c	FUNCTION_25	SWITCH_3
0x40044b5	            0x31d2	                            xor edx, edx	      1396	state.c	FUNCTION_25	SWITCH_3
0x40044b7	            0x39c8	                            cmp eax, ecx	      1398	state.c	FUNCTION_25	SWITCH_3	IF_26
0x40044b9	     0xf8560faffff	                           jne 0x4003f1f	      1398	state.c	FUNCTION_25	SWITCH_3	IF_26
0x40044bf	      0xe97bfaffff	                           jmp 0x4003f3f	      1398	state.c	FUNCTION_25	SWITCH_3	IF_26
0x40044c4	      0xb9ffffffff	                     mov ecx, 0xffffffff	      1398	state.c	FUNCTION_25	SWITCH_3	IF_26
0x40044c9	      0xe96df0ffff	                           jmp 0x400353b	      1398	state.c	FUNCTION_25	SWITCH_3	IF_26
0x40044ce	    0x41b801000000	                              mov r8d, 1	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x40044d4	      0xe9fdf0ffff	                           jmp 0x40035d6	      1436	state.c	FUNCTION_25	SWITCH_3	CALL_129
0x40044d9	    0x41b801000000	                              mov r8d, 1	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x40044df	      0xe91bf8ffff	                           jmp 0x4003cff	      1421	state.c	FUNCTION_25	SWITCH_3	CALL_124
0x40044e4	            0x89c2	                            mov edx, eax	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x40044e6	    0x41b901000000	                              mov r9d, 1	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x40044ec	          0xc1ea1f	                           shr edx, 0x1f	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x40044ef	             0x1d0	                            add eax, edx	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x40044f1	            0xd1f8	                              sar eax, 1	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x40044f3	        0x448d40ff	                      lea r8d, [rax - 1]	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x40044f7	            0x89e8	                            mov eax, ebp	       943	state.c	FUNCTION_25
0x40044f9	     0xf1f80000000	                         nop dword [rax]	       943	state.c	FUNCTION_25
0x4004500	          0x4139c0	                            cmp r8d, eax	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x4004503	     0xf8e35ebffff	                           jle 0x400303e	       189	state.c	FUNCTION_13	WHILE_1	IF_1	IF_2	CALL_1
0x4004509	          0x83c001	                              add eax, 1	       192	state.c	FUNCTION_13	WHILE_1	IF_1
0x400450c	        0x488b7b50	            mov rdi, qword [rbx + 0x50] 	       170	state.c	FUNCTION_11
0x4004510	          0x4589cf	                           mov r15d, r9d	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x4004513	            0x89c2	                            mov edx, eax	       170	state.c	FUNCTION_11
0x4004515	            0x89c1	                            mov ecx, eax	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x4004517	          0x894334	             mov dword [rbx + 0x34], eax	       192	state.c	FUNCTION_13	WHILE_1	IF_1
0x400451a	          0xc1fa03	                              sar edx, 3	       170	state.c	FUNCTION_11
0x400451d	          0x83e107	                              and ecx, 7	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x4004520	          0x4863d2	                         movsxd rdx, edx	       170	state.c	FUNCTION_11
0x4004523	          0x41d3e7	                            shl r15d, cl	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x4004526	        0x44843c17	            test byte [rdi + rdx], r15b 	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x400452a	            0x74d4	                            je 0x4004500	       201	state.c	FUNCTION_13	WHILE_1	IF_5	CALL_2
0x400452c	          0x83ee01	                              sub esi, 1	       187	state.c	FUNCTION_13	WHILE_1
0x400452f	            0x75cf	                           jne 0x4004500	       187	state.c	FUNCTION_13	WHILE_1
0x4004531	      0xe908ebffff	                           jmp 0x400303e	       187	state.c	FUNCTION_13	WHILE_1
0x4004536	          0x83f907	                              cmp ecx, 7	       827	state.c	FUNCTION_24	SWITCH_1
0x4004539	     0xf8432050000	                            je 0x4004a71	       827	state.c	FUNCTION_24	SWITCH_1
0x400453f	     0xf8fa3020000	                            jg 0x40047e8	       827	state.c	FUNCTION_24	SWITCH_1
0x4004545	          0x83f905	                              cmp ecx, 5	       827	state.c	FUNCTION_24	SWITCH_1
0x4004548	     0xf84e4040000	                            je 0x4004a32	       827	state.c	FUNCTION_24	SWITCH_1
0x400454e	     0xf8fc9040000	                            jg 0x4004a1d	       827	state.c	FUNCTION_24	SWITCH_1
0x4004554	          0x83f901	                              cmp ecx, 1	       827	state.c	FUNCTION_24	SWITCH_1
0x4004557	     0xf85a6020000	                           jne 0x4004803	       827	state.c	FUNCTION_24	SWITCH_1
0x400455d	    0x440fb6839400	           movzx r8d, byte [rbx + 0x94] 	       829	state.c	FUNCTION_24	SWITCH_1
0x4004565	          0x41d0e8	                              shr r8b, 1	       829	state.c	FUNCTION_24	SWITCH_1
0x4004568	        0x4183e001	                              and r8d, 1	       829	state.c	FUNCTION_24	SWITCH_1
0x400456c	      0xe94eedffff	                           jmp 0x40032bf	       829	state.c	FUNCTION_24	SWITCH_1
0x4004571	    0x808b7c010000	                or byte [rbx + 0x17c], 1	      1366	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x4004578	      0xe963eaffff	                           jmp 0x4002fe0	      1366	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x400457d	    0x80a37c010000	            and byte [rbx + 0x17c], 0xfe	      1363	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x4004584	      0xe957eaffff	                           jmp 0x4002fe0	      1363	state.c	FUNCTION_25	SWITCH_3	SWITCH_9
0x4004589	          0x488b3b	                    mov rdi, qword [rbx]	      1308	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_94
0x400458c	      0xba00000000	                              mov edx, 0	      1308	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_94
0x4004591	      0xbe9b000000	                           mov esi, 0x9b	      1308	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_94
0x4004596	            0x31c0	                            xor eax, eax	      1308	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_94
0x4004598	      0xe800000000	                          call 0x400459d	      1308	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_94
0x400459d	      0xe9cbe7ffff	                           jmp 0x4002d6d	      1308	state.c	FUNCTION_25	SWITCH_3	SWITCH_7	CALL_94
0x40045a2	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x40045a5	      0xe9c9f7ffff	                           jmp 0x4003d73	      1429	state.c	FUNCTION_25	SWITCH_3	CALL_127
0x40045aa	        0x660fefc9	                         pxor xmm1, xmm1	      1121	state.c	FUNCTION_25	SWITCH_3	CALL_41
0x40045ae	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	      1122	state.c	FUNCTION_25	SWITCH_3	CALL_42
0x40045b1	      0xe971e7ffff	                           jmp 0x4002d27	      1122	state.c	FUNCTION_25	SWITCH_3	CALL_42
0x40045b6	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_132
0x40045b9	      0xe98cf0ffff	                           jmp 0x400364a	      1444	state.c	FUNCTION_25	SWITCH_3	CALL_132
0x40045be	        0x660fefc9	                         pxor xmm1, xmm1	      1106	state.c	FUNCTION_25	SWITCH_3	CALL_35
0x40045c2	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	      1107	state.c	FUNCTION_25	SWITCH_3	CALL_36
0x40045c5	      0xe90af3ffff	                           jmp 0x40038d4	      1107	state.c	FUNCTION_25	SWITCH_3	CALL_36
0x40045ca	          0x8b4328	            mov eax, dword [rbx + 0x28] 	      1150	state.c	FUNCTION_25	SWITCH_3	CALL_50
0x40045cd	      0xe984f6ffff	                           jmp 0x4003c56	      1150	state.c	FUNCTION_25	SWITCH_3	CALL_50
0x40045d2	          0x8b4328	            mov eax, dword [rbx + 0x28] 	      1162	state.c	FUNCTION_25	SWITCH_3	CALL_55
0x40045d5	      0xe971efffff	                           jmp 0x400354b	      1162	state.c	FUNCTION_25	SWITCH_3	CALL_55
0x40045da	    0xc74344000000	               mov dword [rbx + 0x44], 0	      1395	state.c	FUNCTION_25	SWITCH_3
0x40045e1	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	      1396	state.c	FUNCTION_25	SWITCH_3
0x40045e4	            0x85c0	                           test eax, eax	      1396	state.c	FUNCTION_25	SWITCH_3
0x40045e6	     0xf89c9feffff	                           jns 0x40044b5	      1396	state.c	FUNCTION_25	SWITCH_3
0x40045ec	      0xe921f9ffff	                           jmp 0x4003f12	      1396	state.c	FUNCTION_25	SWITCH_3
0x40045f1	    0xc7433c000000	               mov dword [rbx + 0x3c], 0	      1375	state.c	FUNCTION_25	SWITCH_3
0x40045f8	          0x8b5328	            mov edx, dword [rbx + 0x28] 	      1376	state.c	FUNCTION_25	SWITCH_3
0x40045fb	            0x85d2	                           test edx, edx	      1376	state.c	FUNCTION_25	SWITCH_3
0x40045fd	     0xf89e4fdffff	                           jns 0x40043e7	      1376	state.c	FUNCTION_25	SWITCH_3
0x4004603	      0xe91ff8ffff	                           jmp 0x4003e27	      1376	state.c	FUNCTION_25	SWITCH_3
0x4004608	          0x4585f6	                         test r14d, r14d	      1054	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_2
0x400460b	        0x448b632c	           mov r12d, dword [rbx + 0x2c] 	      1053	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x400460f	     0xf8e1f050000	                           jle 0x4004b34	      1054	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_2
0x4004615	        0x488b4b58	            mov rcx, qword [rbx + 0x58] 	      1054	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_2
0x4004619	        0x4c8b4308	                 mov r8, qword [rbx + 8]	      1054	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_2
0x400461d	          0x4531ed	                          xor r13d, r13d	      1054	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_2
0x4004620	    0x4e8d3cad0000	                        lea r15, [r13*4]	      1054	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_2
0x4004628	        0x4a8d1439	                    lea rdx, [rcx + r15]	       218	state.c	FUNCTION_14
0x400462c	            0x8b02	                    mov eax, dword [rdx]	       218	state.c	FUNCTION_14
0x400462e	        0x89442450	             mov dword [rsp + 0x50], eax	       218	state.c	FUNCTION_14
0x4004632	          0x83e0f8	                     and eax, 0xfffffff8	       227	state.c	FUNCTION_14	IF_3
0x4004635	          0x4d85c0	                             test r8, r8	       233	state.c	FUNCTION_14	IF_6
0x4004638	        0x88442450	               mov byte [rsp + 0x50], al	       227	state.c	FUNCTION_14	IF_3
0x400463c	            0x7423	                            je 0x4004661	       233	state.c	FUNCTION_14	IF_6
0x400463e	        0x498b4050	              mov rax, qword [r8 + 0x50]	       234	state.c	FUNCTION_14	IF_6
0x4004642	          0x4885c0	                           test rax, rax	       233	state.c	FUNCTION_14	IF_6
0x4004645	            0x741a	                            je 0x4004661	       233	state.c	FUNCTION_14	IF_6
0x4004647	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       235	state.c	FUNCTION_14	IF_6
0x400464b	      0x488d742450	                   lea rsi, [rsp + 0x50]	       235	state.c	FUNCTION_14	IF_6
0x4004650	          0x4489ef	                           mov edi, r13d	       235	state.c	FUNCTION_14	IF_6
0x4004653	            0xffd0	                                call rax	       235	state.c	FUNCTION_14	IF_6
0x4004655	        0x488b4b58	            mov rcx, qword [rbx + 0x58] 	       235	state.c	FUNCTION_14	IF_6
0x4004659	        0x4c8b4308	                 mov r8, qword [rbx + 8]	       235	state.c	FUNCTION_14	IF_6
0x400465d	        0x4a8d1439	                    lea rdx, [rcx + r15]	       235	state.c	FUNCTION_14	IF_6
0x4004661	        0x8b442450	            mov eax, dword [rsp + 0x50] 	       237	state.c	FUNCTION_14	IF_6
0x4004665	        0x4983c501	                              add r13, 1	       237	state.c	FUNCTION_14	IF_6
0x4004669	          0x4539ee	                          cmp r14d, r13d	      1054	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_2
0x400466c	            0x8902	                    mov dword [rdx], eax	       237	state.c	FUNCTION_14	IF_6
0x400466e	            0x7fb0	                            jg 0x4004620	      1054	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_2
0x4004670	          0x4585e4	                         test r12d, r12d	      1056	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_10
0x4004673	            0x7e32	                           jle 0x40046a7	      1056	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_10
0x4004675	          0x4c89f7	                            mov rdi, r14	      1056	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_10
0x4004678	          0x4c89e6	                            mov rsi, r12	      1056	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_10
0x400467b	        0x48c1e720	                           shl rdi, 0x20	      1056	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_10
0x400467f	        0x48c1e620	                           shl rsi, 0x20	      1056	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	IF_10
0x4004683	          0x4d85c0	                             test r8, r8	        47	state.c	FUNCTION_3	IF_1
0x4004686	     0xf84e1e6ffff	                            je 0x4002d6d	        47	state.c	FUNCTION_3	IF_1
0x400468c	        0x498b4020	              mov rax, qword [r8 + 0x20]	        47	state.c	FUNCTION_3	IF_1
0x4004690	          0x4885c0	                           test rax, rax	        47	state.c	FUNCTION_3	IF_1
0x4004693	     0xf8426040000	                            je 0x4004abf	        47	state.c	FUNCTION_3	IF_1
0x4004699	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	        48	state.c	FUNCTION_3	IF_1	IF_2
0x400469d	        0x8b54240c	              mov edx, dword [rsp + 0xc]	        48	state.c	FUNCTION_3	IF_1	IF_2
0x40046a1	            0xffd0	                                call rax	        48	state.c	FUNCTION_3	IF_1	IF_2
0x40046a3	        0x4c8b4308	                 mov r8, qword [rbx + 8]	        48	state.c	FUNCTION_3	IF_1	IF_2
0x40046a7	          0x8b7b30	            mov edi, dword [rbx + 0x30] 	      1059	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x40046aa	          0x8b4334	            mov eax, dword [rbx + 0x34] 	      1060	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x40046ad	          0x8d7001	                      lea esi, [rax + 1]	      1060	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x40046b0	          0x4189c1	                            mov r9d, eax	      1060	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x40046b3	          0x8d5701	                      lea edx, [rdi + 1]	      1060	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x40046b6	          0x4889f9	                            mov rcx, rdi	      1059	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x40046b9	          0x4189fb	                           mov r11d, edi	      1059	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x40046bc	        0x48c1e620	                           shl rsi, 0x20	      1059	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x40046c0	        0x48c1e220	                           shl rdx, 0x20	      1059	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x40046c4	          0x4809d7	                             or rdi, rdx	      1059	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x40046c7	          0x4d85c0	                             test r8, r8	        47	state.c	FUNCTION_3	IF_1
0x40046ca	     0xf846d040000	                            je 0x4004b3d	        47	state.c	FUNCTION_3	IF_1
0x40046d0	        0x498b4020	              mov rax, qword [r8 + 0x20]	        47	state.c	FUNCTION_3	IF_1
0x40046d4	          0x4885c0	                           test rax, rax	        47	state.c	FUNCTION_3	IF_1
0x40046d7	     0xf85adfcffff	                           jne 0x400438a	        47	state.c	FUNCTION_3	IF_1
0x40046dd	     0xfb693950000	           movzx edx, byte [rbx + 0x95] 	        47	state.c	FUNCTION_3	IF_1
0x40046e4	          0x4489d9	                           mov ecx, r11d	        47	state.c	FUNCTION_3	IF_1
0x40046e7	          0x4489c8	                            mov eax, r9d	        47	state.c	FUNCTION_3	IF_1
0x40046ea	            0x89d6	                            mov esi, edx	        47	state.c	FUNCTION_3	IF_1
0x40046ec	          0x83e604	                              and esi, 4	        47	state.c	FUNCTION_3	IF_1
0x40046ef	      0xe959e9ffff	                           jmp 0x400304d	        47	state.c	FUNCTION_3	IF_1
0x40046f4	        0x448b6328	           mov r12d, dword [rbx + 0x28] 	      1066	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x40046f8	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	      1067	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x40046fb	          0x4585e4	                         test r12d, r12d	      1068	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_3
0x40046fe	        0x89442410	             mov dword [rsp + 0x10], eax	      1067	state.c	FUNCTION_25	SWITCH_3	SWITCH_4
0x4004702	     0xf8e0f040000	                           jle 0x4004b17	      1068	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_3
0x4004708	        0x488b7358	            mov rsi, qword [rbx + 0x58] 	      1068	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_3
0x400470c	        0x488b4b08	                mov rcx, qword [rbx + 8]	      1068	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_3
0x4004710	          0x4531ff	                          xor r15d, r15d	      1068	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_3
0x4004713	       0xf1f440000	                   nop dword [rax + rax]	      1068	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_3
0x4004718	    0x4e8d2cbd0000	                        lea r13, [r15*4]	      1068	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_3
0x4004720	        0x4a8d142e	                    lea rdx, [rsi + r13]	       218	state.c	FUNCTION_14
0x4004724	            0x8b02	                    mov eax, dword [rdx]	       218	state.c	FUNCTION_14
0x4004726	        0x89442450	             mov dword [rsp + 0x50], eax	       218	state.c	FUNCTION_14
0x400472a	          0x83e0f8	                     and eax, 0xfffffff8	       227	state.c	FUNCTION_14	IF_3
0x400472d	          0x4885c9	                           test rcx, rcx	       233	state.c	FUNCTION_14	IF_6
0x4004730	        0x88442450	               mov byte [rsp + 0x50], al	       227	state.c	FUNCTION_14	IF_3
0x4004734	            0x7423	                            je 0x4004759	       233	state.c	FUNCTION_14	IF_6
0x4004736	        0x488b4150	            mov rax, qword [rcx + 0x50] 	       234	state.c	FUNCTION_14	IF_6
0x400473a	          0x4885c0	                           test rax, rax	       233	state.c	FUNCTION_14	IF_6
0x400473d	            0x741a	                            je 0x4004759	       233	state.c	FUNCTION_14	IF_6
0x400473f	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	       235	state.c	FUNCTION_14	IF_6
0x4004743	      0x488d742450	                   lea rsi, [rsp + 0x50]	       235	state.c	FUNCTION_14	IF_6
0x4004748	          0x4489ff	                           mov edi, r15d	       235	state.c	FUNCTION_14	IF_6
0x400474b	            0xffd0	                                call rax	       235	state.c	FUNCTION_14	IF_6
0x400474d	        0x488b7358	            mov rsi, qword [rbx + 0x58] 	       235	state.c	FUNCTION_14	IF_6
0x4004751	        0x488b4b08	                mov rcx, qword [rbx + 8]	       235	state.c	FUNCTION_14	IF_6
0x4004755	        0x4a8d142e	                    lea rdx, [rsi + r13]	       235	state.c	FUNCTION_14	IF_6
0x4004759	        0x8b442450	            mov eax, dword [rsp + 0x50] 	       237	state.c	FUNCTION_14	IF_6
0x400475d	        0x4983c701	                              add r15, 1	       237	state.c	FUNCTION_14	IF_6
0x4004761	          0x4539fc	                          cmp r12d, r15d	      1068	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_3
0x4004764	            0x8902	                    mov dword [rdx], eax	       237	state.c	FUNCTION_14	IF_6
0x4004766	            0x7fb0	                            jg 0x4004718	      1068	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_3
0x4004768	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      1068	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_3
0x400476d	          0x4c89e7	                            mov rdi, r12	      1068	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_3
0x4004770	        0x48c1e720	                           shl rdi, 0x20	      1068	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_3
0x4004774	        0x48c1e620	                           shl rsi, 0x20	      1068	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	FOR_3
0x4004778	          0x4885c9	                           test rcx, rcx	        47	state.c	FUNCTION_3	IF_1
0x400477b	     0xf85fcfbffff	                           jne 0x400437d	        47	state.c	FUNCTION_3	IF_1
0x4004781	      0xe9e7e5ffff	                           jmp 0x4002d6d	        47	state.c	FUNCTION_3	IF_1
0x4004786	        0x488b5358	            mov rdx, qword [rbx + 0x58] 	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x400478a	          0x4963c6	                        movsxd rax, r14d	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x400478d	        0xf6048201	              test byte [rdx + rax*4], 1	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x4004791	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x4004794	     0xf84dd010000	                            je 0x4004977	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x400479a	            0x89c2	                            mov edx, eax	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x400479c	          0xc1ea1f	                           shr edx, 0x1f	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x400479f	             0x1d0	                            add eax, edx	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x40047a1	            0x31d2	                            xor edx, edx	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x40047a3	            0xd1f8	                              sar eax, 1	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x40047a5	      0xe931f3ffff	                           jmp 0x4003adb	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x40047aa	          0x4885c0	                           test rax, rax	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_28
0x40047ad	     0xf840bf3ffff	                            je 0x4003abe	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_28
0x40047b3	      0xe970e6ffff	                           jmp 0x4002e28	      1081	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_28
0x40047b8	          0x4885c0	                           test rax, rax	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_19
0x40047bb	     0xf84a3faffff	                            je 0x4004264	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_19
0x40047c1	      0xe91ae8ffff	                           jmp 0x4002fe0	      1035	state.c	FUNCTION_25	SWITCH_3	SWITCH_4	CALL_19
0x40047c6	          0x8d4501	                      lea eax, [rbp + 1]	      1086	state.c	FUNCTION_25	SWITCH_3	SWITCH_5
0x40047c9	            0x31d2	                            xor edx, edx	      1086	state.c	FUNCTION_25	SWITCH_3	SWITCH_5
0x40047cb	      0xe90bf3ffff	                           jmp 0x4003adb	      1086	state.c	FUNCTION_25	SWITCH_3	SWITCH_5
0x40047d0	    0x80a394000000	             and byte [rbx + 0x94], 0xf7	       715	state.c	FUNCTION_22	SWITCH_1
0x40047d7	      0xe904e8ffff	                           jmp 0x4002fe0	       715	state.c	FUNCTION_22	SWITCH_1
0x40047dc	    0x808b94000000	                 or byte [rbx + 0x94], 8	       715	state.c	FUNCTION_22	SWITCH_1
0x40047e3	      0xe9f8e7ffff	                           jmp 0x4002fe0	       715	state.c	FUNCTION_22	SWITCH_1
0x40047e8	          0x83f919	                           cmp ecx, 0x19	       827	state.c	FUNCTION_24	SWITCH_1
0x40047eb	     0xf846b020000	                            je 0x4004a5c	       827	state.c	FUNCTION_24	SWITCH_1
0x40047f1	          0x83f945	                           cmp ecx, 0x45	       827	state.c	FUNCTION_24	SWITCH_1
0x40047f4	     0xf844d020000	                            je 0x4004a47	       827	state.c	FUNCTION_24	SWITCH_1
0x40047fa	          0x83f90c	                            cmp ecx, 0xc	       827	state.c	FUNCTION_24	SWITCH_1
0x40047fd	     0xf84e5010000	                            je 0x40049e8	       827	state.c	FUNCTION_24	SWITCH_1
0x4004803	          0x4531c0	                            xor r8d, r8d	       893	state.c	FUNCTION_24	SWITCH_1	CALL_1
0x4004806	      0xe9bbeaffff	                           jmp 0x40032c6	       893	state.c	FUNCTION_24	SWITCH_1	CALL_1
0x400480b	            0x85ed	                           test ebp, ebp	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x400480d	     0xf88dcf9ffff	                            js 0x40041ef	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4004813	          0x8b532c	            mov edx, dword [rbx + 0x2c] 	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x4004816	      0xe934f5ffff	                           jmp 0x4003d4f	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x400481b	            0x85ed	                           test ebp, ebp	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x400481d	     0xf88ccf9ffff	                            js 0x40041ef	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4004823	          0x8b532c	            mov edx, dword [rbx + 0x2c] 	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x4004826	      0xe9fbedffff	                           jmp 0x4003626	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x400482b	            0x85ed	                           test ebp, ebp	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x400482d	     0xf88bcf9ffff	                            js 0x40041ef	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4004833	          0x8b732c	            mov esi, dword [rbx + 0x2c] 	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x4004836	            0x39f5	                            cmp ebp, esi	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4004838	        0x8974240c	              mov dword [rsp + 0xc], esi	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x400483c	     0xf8df5eeffff	                           jge 0x4003737	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4004842	        0x418d4601	                      lea eax, [r14 + 1]	       959	state.c	FUNCTION_25	SWITCH_3
0x4004846	        0x488b5358	            mov rdx, qword [rbx + 0x58] 	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x400484a	        0x89442410	             mov dword [rsp + 0x10], eax	       959	state.c	FUNCTION_25	SWITCH_3
0x400484e	          0x4963c6	                        movsxd rax, r14d	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x4004851	        0xf6048201	              test byte [rdx + rax*4], 1	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x4004855	    0x660f6e442410	          movd xmm0, dword [rsp + 0x10] 	       959	state.c	FUNCTION_25	SWITCH_3
0x400485b	     0xf841ef9ffff	                            je 0x400417f	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x4004861	            0x89f0	                            mov eax, esi	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x4004863	          0xc1e81f	                           shr eax, 0x1f	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x4004866	         0x344240c	              add eax, dword [rsp + 0xc]	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x400486a	            0xd1f8	                              sar eax, 1	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x400486c	        0x8944240c	              mov dword [rsp + 0xc], eax	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x4004870	      0xe90af9ffff	                           jmp 0x400417f	       964	state.c	FUNCTION_25	SWITCH_3	CALL_4
0x4004875	            0x85ed	                           test ebp, ebp	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4004877	     0xf8872f9ffff	                            js 0x40041ef	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x400487d	          0x8b732c	            mov esi, dword [rbx + 0x2c] 	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x4004880	            0x39f5	                            cmp ebp, esi	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4004882	        0x8974240c	              mov dword [rsp + 0xc], esi	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x4004886	     0xf8dabeeffff	                           jge 0x4003737	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x400488c	        0x418d4601	                      lea eax, [r14 + 1]	      1135	state.c	FUNCTION_25	SWITCH_3
0x4004890	        0x488b5358	            mov rdx, qword [rbx + 0x58] 	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_47
0x4004894	        0x89442410	             mov dword [rsp + 0x10], eax	      1135	state.c	FUNCTION_25	SWITCH_3
0x4004898	          0x4963c6	                        movsxd rax, r14d	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_47
0x400489b	        0xf6048201	              test byte [rdx + rax*4], 1	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_47
0x400489f	    0x660f6e442410	          movd xmm0, dword [rsp + 0x10] 	      1135	state.c	FUNCTION_25	SWITCH_3
0x40048a5	     0xf846de9ffff	                            je 0x4003218	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_47
0x40048ab	            0x89f0	                            mov eax, esi	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_47
0x40048ad	          0xc1e81f	                           shr eax, 0x1f	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_47
0x40048b0	         0x344240c	              add eax, dword [rsp + 0xc]	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_47
0x40048b4	            0xd1f8	                              sar eax, 1	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_47
0x40048b6	        0x8944240c	              mov dword [rsp + 0xc], eax	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_47
0x40048ba	      0xe959e9ffff	                           jmp 0x4003218	      1140	state.c	FUNCTION_25	SWITCH_3	CALL_47
0x40048bf	            0x85ed	                           test ebp, ebp	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x40048c1	     0xf8828f9ffff	                            js 0x40041ef	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x40048c7	          0x8b532c	            mov edx, dword [rbx + 0x2c] 	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x40048ca	      0xe9dbefffff	                           jmp 0x40038aa	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x40048cf	            0x85ed	                           test ebp, ebp	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x40048d1	     0xf8818f9ffff	                            js 0x40041ef	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x40048d7	          0x8b532c	            mov edx, dword [rbx + 0x2c] 	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x40048da	      0xe91ee4ffff	                           jmp 0x4002cfd	       179	state.c	FUNCTION_12	IF_2	CALL_3
0x40048df	    0x81f9eb030000	                          cmp ecx, 0x3eb	       827	state.c	FUNCTION_24	SWITCH_1
0x40048e5	     0xf84c4010000	                            je 0x4004aaf	       827	state.c	FUNCTION_24	SWITCH_1
0x40048eb	     0xf8fa9010000	                            jg 0x4004a9a	       827	state.c	FUNCTION_24	SWITCH_1
0x40048f1	    0x81f9ea030000	                          cmp ecx, 0x3ea	       827	state.c	FUNCTION_24	SWITCH_1
0x40048f7	     0xf8506ffffff	                           jne 0x4004803	       827	state.c	FUNCTION_24	SWITCH_1
0x40048fd	          0x4531c0	                            xor r8d, r8d	       861	state.c	FUNCTION_24	SWITCH_1
0x4004900	        0x837b6c03	               cmp dword [rbx + 0x6c], 3	       861	state.c	FUNCTION_24	SWITCH_1
0x4004904	        0x410f94c0	                                sete r8b	       861	state.c	FUNCTION_24	SWITCH_1
0x4004908	      0xe9b2e9ffff	                           jmp 0x40032bf	       861	state.c	FUNCTION_24	SWITCH_1
0x400490d	      0x44896c2410	            mov dword [rsp + 0x10], r13d	        47	state.c	FUNCTION_3	IF_1
0x4004912	          0x4489f1	                           mov ecx, r14d	       943	state.c	FUNCTION_25
0x4004915	      0xe9ccf9ffff	                           jmp 0x40042e6	       943	state.c	FUNCTION_25
0x400491a	          0x8b4328	            mov eax, dword [rbx + 0x28] 	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x400491d	      0xe9ade8ffff	                           jmp 0x40031cf	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x4004922	          0x8b4328	            mov eax, dword [rbx + 0x28] 	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x4004925	      0xe9f4f3ffff	                           jmp 0x4003d1e	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x400492a	          0x8b4328	            mov eax, dword [rbx + 0x28] 	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x400492d	      0xe947efffff	                           jmp 0x4003879	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x4004932	          0x8b4328	            mov eax, dword [rbx + 0x28] 	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x4004935	      0xe992e3ffff	                           jmp 0x4002ccc	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x400493a	          0x8b4328	            mov eax, dword [rbx + 0x28] 	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x400493d	      0xe9f4f7ffff	                           jmp 0x4004136	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x4004942	          0x8b4328	            mov eax, dword [rbx + 0x28] 	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x4004945	      0xe9abecffff	                           jmp 0x40035f5	       176	state.c	FUNCTION_12	IF_1	CALL_1
0x400494a	    0xc74424500100	               mov dword [rsp + 0x50], 1	       519	state.c	FUNCTION_17
0x4004952	      0xe98bf2ffff	                           jmp 0x4003be2	       519	state.c	FUNCTION_17
0x4004957	          0x8b7b28	            mov edi, dword [rbx + 0x28] 	      1442	state.c	FUNCTION_25	SWITCH_3	CALL_131
0x400495a	      0xe9d8ecffff	                           jmp 0x4003637	      1442	state.c	FUNCTION_25	SWITCH_3	CALL_131
0x400495f	          0x8b7b28	            mov edi, dword [rbx + 0x28] 	      1427	state.c	FUNCTION_25	SWITCH_3	CALL_126
0x4004962	      0xe9f9f3ffff	                           jmp 0x4003d60	      1427	state.c	FUNCTION_25	SWITCH_3	CALL_126
0x4004967	          0x8b7b28	            mov edi, dword [rbx + 0x28] 	      1105	state.c	FUNCTION_25	SWITCH_3	CALL_34
0x400496a	      0xe94cefffff	                           jmp 0x40038bb	      1105	state.c	FUNCTION_25	SWITCH_3	CALL_34
0x400496f	          0x8b7b28	            mov edi, dword [rbx + 0x28] 	      1120	state.c	FUNCTION_25	SWITCH_3	CALL_40
0x4004972	      0xe997e3ffff	                           jmp 0x4002d0e	      1120	state.c	FUNCTION_25	SWITCH_3	CALL_40
0x4004977	            0x31d2	                            xor edx, edx	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x4004979	      0xe95df1ffff	                           jmp 0x4003adb	      1088	state.c	FUNCTION_25	SWITCH_3	SWITCH_5	CALL_30
0x400497e	    0xc74340ffffff	     mov dword [rbx + 0x40], 0xffffffff 	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x4004985	          0x83c8ff	                      or eax, 0xffffffff	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x4004988	      0xe96bfcffff	                           jmp 0x40045f8	      1374	state.c	FUNCTION_25	SWITCH_3	CALL_115
0x400498d	    0xc74348ffffff	     mov dword [rbx + 0x48], 0xffffffff 	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x4004994	          0x83c9ff	                      or ecx, 0xffffffff	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x4004997	      0xe945fcffff	                           jmp 0x40045e1	      1394	state.c	FUNCTION_25	SWITCH_3	CALL_119
0x400499c	            0x89e8	                            mov eax, ebp	       164	state.c	FUNCTION_10
0x400499e	            0x89e9	                            mov ecx, ebp	       164	state.c	FUNCTION_10
0x40049a0	      0xba01000000	                              mov edx, 1	       164	state.c	FUNCTION_10
0x40049a5	          0xc1f803	                              sar eax, 3	       164	state.c	FUNCTION_10
0x40049a8	          0x83e107	                              and ecx, 7	       164	state.c	FUNCTION_10
0x40049ab	            0x4898	                                    cdqe	       164	state.c	FUNCTION_10
0x40049ad	        0x48034350	             add rax, qword [rbx + 0x50]	       164	state.c	FUNCTION_10
0x40049b1	            0xd3e2	                             shl edx, cl	       164	state.c	FUNCTION_10
0x40049b3	            0xf7d2	                                 not edx	       164	state.c	FUNCTION_10
0x40049b5	            0x2010	                      and byte [rax], dl	       164	state.c	FUNCTION_10
0x40049b7	      0xe9b1e3ffff	                           jmp 0x4002d6d	       164	state.c	FUNCTION_10
0x40049bc	    0x81f9ee030000	                          cmp ecx, 0x3ee	       827	state.c	FUNCTION_24	SWITCH_1
0x40049c2	     0xf853bfeffff	                           jne 0x4004803	       827	state.c	FUNCTION_24	SWITCH_1
0x40049c8	          0x4531c0	                            xor r8d, r8d	       877	state.c	FUNCTION_24	SWITCH_1
0x40049cb	        0x837b7002	               cmp dword [rbx + 0x70], 2	       877	state.c	FUNCTION_24	SWITCH_1
0x40049cf	        0x410f94c0	                                sete r8b	       877	state.c	FUNCTION_24	SWITCH_1
0x40049d3	      0xe9e7e8ffff	                           jmp 0x40032bf	       877	state.c	FUNCTION_24	SWITCH_1
0x40049d8	          0x4531c0	                            xor r8d, r8d	       881	state.c	FUNCTION_24	SWITCH_1
0x40049db	        0x837b7003	               cmp dword [rbx + 0x70], 3	       881	state.c	FUNCTION_24	SWITCH_1
0x40049df	        0x410f94c0	                                sete r8b	       881	state.c	FUNCTION_24	SWITCH_1
0x40049e3	      0xe9d7e8ffff	                           jmp 0x40032bf	       881	state.c	FUNCTION_24	SWITCH_1
0x40049e8	    0x440fb6839400	           movzx r8d, byte [rbx + 0x94] 	       845	state.c	FUNCTION_24	SWITCH_1
0x40049f0	        0x41c0e806	                              shr r8b, 6	       845	state.c	FUNCTION_24	SWITCH_1
0x40049f4	        0x4183e001	                              and r8d, 1	       845	state.c	FUNCTION_24	SWITCH_1
0x40049f8	      0xe9c2e8ffff	                           jmp 0x40032bf	       845	state.c	FUNCTION_24	SWITCH_1
0x40049fd	          0x4531c0	                            xor r8d, r8d	       857	state.c	FUNCTION_24	SWITCH_1
0x4004a00	        0x837b6c01	               cmp dword [rbx + 0x6c], 1	       857	state.c	FUNCTION_24	SWITCH_1
0x4004a04	        0x410f94c0	                                sete r8b	       857	state.c	FUNCTION_24	SWITCH_1
0x4004a08	      0xe9b2e8ffff	                           jmp 0x40032bf	       857	state.c	FUNCTION_24	SWITCH_1
0x4004a0d	          0x4531c0	                            xor r8d, r8d	       873	state.c	FUNCTION_24	SWITCH_1
0x4004a10	        0x837b7001	               cmp dword [rbx + 0x70], 1	       873	state.c	FUNCTION_24	SWITCH_1
0x4004a14	        0x410f94c0	                                sete r8b	       873	state.c	FUNCTION_24	SWITCH_1
0x4004a18	      0xe9a2e8ffff	                           jmp 0x40032bf	       873	state.c	FUNCTION_24	SWITCH_1
0x4004a1d	    0x440fb6839500	           movzx r8d, byte [rbx + 0x95] 	       837	state.c	FUNCTION_24	SWITCH_1
0x4004a25	        0x41c0e802	                              shr r8b, 2	       837	state.c	FUNCTION_24	SWITCH_1
0x4004a29	        0x4183e001	                              and r8d, 1	       837	state.c	FUNCTION_24	SWITCH_1
0x4004a2d	      0xe98de8ffff	                           jmp 0x40032bf	       837	state.c	FUNCTION_24	SWITCH_1
0x4004a32	    0x440fb6839500	           movzx r8d, byte [rbx + 0x95] 	       833	state.c	FUNCTION_24	SWITCH_1
0x4004a3a	        0x41c0e803	                              shr r8b, 3	       833	state.c	FUNCTION_24	SWITCH_1
0x4004a3e	        0x4183e001	                              and r8d, 1	       833	state.c	FUNCTION_24	SWITCH_1
0x4004a42	      0xe978e8ffff	                           jmp 0x40032bf	       833	state.c	FUNCTION_24	SWITCH_1
0x4004a47	    0x440fb6839500	           movzx r8d, byte [rbx + 0x95] 	       853	state.c	FUNCTION_24	SWITCH_1
0x4004a4f	        0x41c0e804	                              shr r8b, 4	       853	state.c	FUNCTION_24	SWITCH_1
0x4004a53	        0x4183e001	                              and r8d, 1	       853	state.c	FUNCTION_24	SWITCH_1
0x4004a57	      0xe963e8ffff	                           jmp 0x40032bf	       853	state.c	FUNCTION_24	SWITCH_1
0x4004a5c	    0x440fb6839400	           movzx r8d, byte [rbx + 0x94] 	       849	state.c	FUNCTION_24	SWITCH_1
0x4004a64	        0x41c0e805	                              shr r8b, 5	       849	state.c	FUNCTION_24	SWITCH_1
0x4004a68	        0x4183e001	                              and r8d, 1	       849	state.c	FUNCTION_24	SWITCH_1
0x4004a6c	      0xe94ee8ffff	                           jmp 0x40032bf	       849	state.c	FUNCTION_24	SWITCH_1
0x4004a71	    0x440fb6839400	           movzx r8d, byte [rbx + 0x94] 	       841	state.c	FUNCTION_24	SWITCH_1
0x4004a79	        0x41c0e802	                              shr r8b, 2	       841	state.c	FUNCTION_24	SWITCH_1
0x4004a7d	        0x4183e001	                              and r8d, 1	       841	state.c	FUNCTION_24	SWITCH_1
0x4004a81	      0xe939e8ffff	                           jmp 0x40032bf	       841	state.c	FUNCTION_24	SWITCH_1
0x4004a86	    0x440fb6839500	           movzx r8d, byte [rbx + 0x95] 	       885	state.c	FUNCTION_24	SWITCH_1
0x4004a8e	          0x41d0e8	                              shr r8b, 1	       885	state.c	FUNCTION_24	SWITCH_1
0x4004a91	        0x4183e001	                              and r8d, 1	       885	state.c	FUNCTION_24	SWITCH_1
0x4004a95	      0xe925e8ffff	                           jmp 0x40032bf	       885	state.c	FUNCTION_24	SWITCH_1
0x4004a9a	    0x440fb6839500	           movzx r8d, byte [rbx + 0x95] 	       869	state.c	FUNCTION_24	SWITCH_1
0x4004aa2	        0x41c0e806	                              shr r8b, 6	       869	state.c	FUNCTION_24	SWITCH_1
0x4004aa6	        0x4183e001	                              and r8d, 1	       869	state.c	FUNCTION_24	SWITCH_1
0x4004aaa	      0xe910e8ffff	                           jmp 0x40032bf	       869	state.c	FUNCTION_24	SWITCH_1
0x4004aaf	          0x4531c0	                            xor r8d, r8d	       865	state.c	FUNCTION_24	SWITCH_1
0x4004ab2	        0x837b6c05	               cmp dword [rbx + 0x6c], 5	       865	state.c	FUNCTION_24	SWITCH_1
0x4004ab6	        0x410f94c0	                                sete r8b	       865	state.c	FUNCTION_24	SWITCH_1
0x4004aba	      0xe900e8ffff	                           jmp 0x40032bf	       865	state.c	FUNCTION_24	SWITCH_1
0x4004abf	        0x448b5b30	           mov r11d, dword [rbx + 0x30] 	       865	state.c	FUNCTION_24	SWITCH_1
0x4004ac3	        0x448b4b34	            mov r9d, dword [rbx + 0x34] 	       865	state.c	FUNCTION_24	SWITCH_1
0x4004ac7	      0xe911fcffff	                           jmp 0x40046dd	       865	state.c	FUNCTION_24	SWITCH_1
0x4004acc	      0xe800000000	                          call 0x4004ad1	      1495	state.c	FUNCTION_25
0x4004ad1	          0x3b6b2c	            cmp ebp, dword [rbx + 0x2c] 	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4004ad4	     0xf8d5decffff	                           jge 0x4003737	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4004ada	        0x418d4601	                      lea eax, [r14 + 1]	       959	state.c	FUNCTION_25	SWITCH_3
0x4004ade	        0x8944240c	              mov dword [rsp + 0xc], eax	       959	state.c	FUNCTION_25	SWITCH_3
0x4004ae2	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	       962	state.c	FUNCTION_25	SWITCH_3	CALL_3
0x4004ae5	    0x660f6e44240c	           movd xmm0, dword [rsp + 0xc] 	       959	state.c	FUNCTION_25	SWITCH_3
0x4004aeb	        0x8944240c	              mov dword [rsp + 0xc], eax	       962	state.c	FUNCTION_25	SWITCH_3	CALL_3
0x4004aef	      0xe98bf6ffff	                           jmp 0x400417f	       962	state.c	FUNCTION_25	SWITCH_3	CALL_3
0x4004af4	          0x3b6b2c	            cmp ebp, dword [rbx + 0x2c] 	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4004af7	     0xf8d3aecffff	                           jge 0x4003737	       178	state.c	FUNCTION_12	IF_2	CALL_2
0x4004afd	        0x418d4601	                      lea eax, [r14 + 1]	      1135	state.c	FUNCTION_25	SWITCH_3
0x4004b01	        0x8944240c	              mov dword [rsp + 0xc], eax	      1135	state.c	FUNCTION_25	SWITCH_3
0x4004b05	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x4004b08	    0x660f6e44240c	           movd xmm0, dword [rsp + 0xc] 	      1135	state.c	FUNCTION_25	SWITCH_3
0x4004b0e	        0x8944240c	              mov dword [rsp + 0xc], eax	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x4004b12	      0xe901e7ffff	                           jmp 0x4003218	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x4004b17	        0x488b4b08	                mov rcx, qword [rbx + 8]	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x4004b1b	      0xe948fcffff	                           jmp 0x4004768	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x4004b20	     0xfb693950000	           movzx edx, byte [rbx + 0x95] 	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x4004b27	          0x8b4334	            mov eax, dword [rbx + 0x34] 	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x4004b2a	            0x89d6	                            mov esi, edx	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x4004b2c	          0x83e604	                              and esi, 4	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x4004b2f	      0xe919e5ffff	                           jmp 0x400304d	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x4004b34	        0x4c8b4308	                 mov r8, qword [rbx + 8]	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x4004b38	      0xe933fbffff	                           jmp 0x4004670	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x4004b3d	     0xfb693950000	           movzx edx, byte [rbx + 0x95] 	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x4004b44	            0x89d6	                            mov esi, edx	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x4004b46	          0x83e604	                              and esi, 4	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_46
0x4004b49	      0xe9ffe4ffff	                           jmp 0x400304d	      1138	state.c	FUNCTION_25	SWITCH_3	CALL_46
vterm_state_focus_in	functions,0:WHILE,0:DO,0:ELSE,0:FOR,0:IF,1:SWITCH,0:CALL,1	9
0x4004b50	    0xf68795000000	           test byte [rdi + 0x95], 0x40 	      1904	state.c	FUNCTION_39	IF_1
0x4004b57	            0x7507	                           jne 0x4004b60	      1904	state.c	FUNCTION_39	IF_1
0x4004b59	            0xf3c3	                                     ret	      1904	state.c	FUNCTION_39	IF_1
0x4004b5b	       0xf1f440000	                   nop dword [rax + rax]	      1904	state.c	FUNCTION_39	IF_1
0x4004b60	          0x488b3f	                    mov rdi, qword [rdi]	      1905	state.c	FUNCTION_39	CALL_1
0x4004b63	      0xba00000000	                              mov edx, 0	      1905	state.c	FUNCTION_39	CALL_1
0x4004b68	      0xbe9b000000	                           mov esi, 0x9b	      1905	state.c	FUNCTION_39	CALL_1
0x4004b6d	            0x31c0	                            xor eax, eax	      1905	state.c	FUNCTION_39	CALL_1
0x4004b6f	      0xe900000000	                           jmp 0x4004b74	      1905	state.c	FUNCTION_39	CALL_1
vterm_state_set_unrecognised_fallbacks	functions,0:WHILE,0:DO,0:ELSE,1:FOR,0:IF,1:SWITCH,0:CALL,0	6
0x4002a00	          0x4885f6	                           test rsi, rsi	      1837	state.c	FUNCTION_36	IF_1
0x4002a03	      0xb800000000	                              mov eax, 0	      1837	state.c	FUNCTION_36	IF_1
0x4002a08	        0x48897718	             mov qword [rdi + 0x18], rsi	      1837	state.c	FUNCTION_36	IF_1
0x4002a0c	        0x480f44d0	                          cmove rdx, rax	      1837	state.c	FUNCTION_36	IF_1
0x4002a10	        0x48895720	             mov qword [rdi + 0x20], rdx	      1837	state.c	FUNCTION_36	IF_1
0x4002a14	              0xc3	                                     ret	      1837	state.c	FUNCTION_36	IF_1
